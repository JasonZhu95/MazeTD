%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: fire_2.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 82 328
%%HiResBoundingBox: 0 0 81.9103 327.5026
%%CropBox: 0 0 81.9103 327.5026
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:16:16+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:16:16+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:16:16+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>64</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAABAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq+Z/zZg1ST8w&#xA;rvT9av5xYFvW0v1CWiEcoqAgJCqA1VrTtnPdoynGR6vWdkxxygOnf7018i/mT5l8satZ6HrEjalo&#xA;13KsMErktLEGYLVGNSVXkKof9jktD2gTsdx9zDtPsoC5DY/e+g837yzsVdirsVdirsVSLzd5K0Dz&#xA;Vp/1TVYOTLX6vcp8M0THujfrB2OVZsMcgot+DUzxG4l4p5F/LbWz+ZIstSWSTTPLkxlFzIjKkgjb&#xA;lAErWvM8WpX7IOanTaMjLy2DvdZ2gDgFHeQqu7vfRGbt5t2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV3TFVG1vrK8RntLiO4RGKO0Tq4DDqpKk74BIHkylEjmKVsLF2KuxV2KuxV2KsY/M9pV/L/XW&#xA;imMDi1c+oOtNuS/7MfD9OUan+7l7nK0X99H3vIv+ccnuk82alArt9UfT/UlUfZMglj9Mn3Cu9Ppz&#xA;W9mk8Z7qdx2xEeGO+/0PoTNy867FXYq7FXYq7FUv8w6Lb63od9pNwxSK9haFpF6qWGzD/VO+QyQ4&#xA;okd7ZiyGEhIdGM/lh+WsXkqzvBJci8vr11Ms6pwVY4weKKCWPViSf6ZRptN4QPUlydbrPGI2oBm2&#xA;ZThOxV2KuxVhn5p+fU8oeXzLAVbVrwmLT4m3oafFKw7qgP30GY2qz+HHzLm6HS+NPf6RzfP2k+d/&#xA;OWja9aa1c391J6sgknSWVmWaOoLoyEkUK+23bNJi1UuK7vvejz6GJhwmIFjZ9aZ0jx7sVdirsVdi&#xA;rTMqqWYgKBUk7AAYq+WvN/mF/Ovni4vqk6XaH0rND09GMniaeMjfEfu7ZzOv1PESfk9r2Vo+EAH3&#xA;lCJpj+YPOGlaHAORllVJSN+KE8pD/sY1LZRosRkQO8uT2pnEAT/ND6xzrXgXYq7FXYq7FWA/nZ5o&#xA;Oh+SbiGF+N5qp+pw06hGFZm/4Cq/MjMTW5eHH5lz+zcPHlBPKO7w/wAu2Agso+Q/eTfvH+R6D7s5&#xA;LPOy+gaXHww8yyb8gvqEvnzULi7kVbwW8n1OJzQlnkXnwr1KqKU8Cc3vZgHF8Hle2pSMP87d9EZu&#xA;3mnYq7FXYq7FXzv+eOqnWPP9roqNW30yJUdR09SUCWQ/8BwH0Zou083qr+aHqOxNP6Qf5x+wJfbp&#xA;QE/QM52RevSTU/K8U9288Mhh5nkw48hyPUjcUzIx6ggUXDyaMSNg0h4dD1XT5heaZqDx3se6vGWh&#xA;evXZ1bL4aujfJx8nZ9itpPavyg/NO48wl9B1whdct1LRTUC/WET7QKigEid6dRv2OdDo9X4mx5/e&#xA;8j2joPCPFH6fueo5nuqdirTuqIzuQqqCWY9AB1OKvky1vpNZ8zarrUlSbmaSRQe3quSB/sVFM5HW&#xA;5OI33l9B7Mw8Ir+aKZRYqFY+KoSPnmpmXZZeSbxaXJeoxVRQftHbf2yg5OFwpagYzukt3ZNExVxQ&#xA;g05e4zJhO3OhkEhsxm4vp9A8z6drttUPBKsjAbcvTI5qf9dDxzaaPKYm+51faWASBH84PrOKWOWJ&#xA;JY25RyKGRh0IIqDnXAvAEUuxQx38xNSOm+RtbuweLraSRxsOzyj0lP8AwTjKdRLhxk+TkaSHFliP&#xA;N83+UoONj6n+/HLV9h8I/EZx2plu+iaONQvvZnp9nI4CqpMknb2zXZJrmygb9Azny1okhhBuU/dc&#xA;XAIPVmIoR8hlMYcZvo85r9WL9PPZjnmCyEc9CtOdVen8wO5xxSI27nbaLLYeaeb4eNqK9Y5v1g5u&#xA;NKd/g5es3gC+l/Id0bryVoU7GrPYW4c+LLEqsfvGdjgNwj7nzzVRrLIeZT3LWh5z+ft79X/L2WGt&#xA;Prl1BB86Ezf8yswtfKsfvLsey43mvuBeUeVLcCxtgRtwD/f8X/G2cdqZbl72HpxB6R5U0s3B5kfC&#xA;xq7f5APT6TmuMeKVdHR9pajh2ZVPqttbXkdsDSNQVelKDpT7u+WSygGujpoaaU4GXVjnnO2Cuzr0&#xA;JWT/AIKqn8cgRU/e7XsrJYr4PIvOdDbTkdBItf1ZtdJzDvdR/dPfvyll9X8utDalKQFadfsSMv8A&#xA;DOx0h/dB8/14rNL3stzIcR4//wA5JXPHy/pFrX+9u3lpv/uuMr/zMzXdpH0gebuOx4+uR8mHeX4+&#xA;ECL/ACxgfcAM47Od3t5ioAPS/Kt/Fb2DvIQi8BSp6srFQB/rE5iQlUi8z2jhMpgDvY1qmqyLrETA&#xA;8whYMD0LEbn51wQx3E27fT6cHEQ3fatJcxemE4qacqmp26AYxx0bXDphA28481yVsJGr/eSinvUk&#xA;/wAM2+mG7mavbHT6E/KaBofy60NG6mAvuKbSOzj8Gzr9IKxxfPtcbzS97LcyHEeIf85MM3Hy4tfh&#xA;JvCR2qPQp+vNX2l/D8f0O77G/j+H6WO2MojuOJ6EkfQc5GYsPc5I2GVW+oww2Cx05TITxUjapJNf&#xA;ormDLGTJ1M8BlO+jH7+RjODX4gK19ya5lwGzs8MfSpzaiwhIoAxFK4Y490jELYd5keSea10+BS80&#xA;rAiMdSzHggHzJObLTQs24evyAUPi+rtC01dL0Ww01N1sreK3BHf0kC1+mmdfCPDEDufPMs+KRl3l&#xA;HZNg8q/5yH0Oa98qWupwqXOmXFZqdopxwLf8GEzA7QhcAe52vZOURyGJ/iDy7SL9bm0jnU1YDjKP&#xA;Bh1/rnJ5YUae9wZBOIKd2t+ApU1buKnfMaWNZ47UJ56sXbq3bJxi2RFCks1HUYbWIzTHf9hO7HwG&#xA;XQxkmgwy5RAWU+/JPybda95kPmnUEpYafJyt+Q2kuR9gL7RbNXxp750HZ+m3voPveR7W1mxj/FL7&#xA;n0Pm7eadiqld2lteWs1pdRLNbTo0c0TiqsjChBHuMBAIopjIg2ObwvzH+QOv2d/LdeVL1HtHJKWs&#xA;ztHMgO/DlQo4HixH8c1Gfs0n6dw9Bpu2QB6rB7wwe3udYsNYl0bWoTBfwniysAGDAVoePwkEbgjr&#xA;ml1Gm4PJ6XR6zxK3sHkUx1K7S2tmuXFVRa8fEnYD78xMcbNOdknwxJTD8sPy1n87XMmt63KyaNBJ&#xA;6YiT4WnZdzGpH2EWo5EbnoN6kdBotEJCz9P3vJ9pdpGBobzP2PomxsLOws4rOyhS3tYF4QwxgKqq&#xA;PADN5GIAoPMykZGzuVfCxdirsVdir59/Py3S28+6TeooUz2sYkI/aaOZwSf9iQM0fakfV/mvTdhz&#xA;9Pul+pj+qWZu9LkhX7RX4fmDUfiM5/HLhlb1uaHFEhnv/OPvnG3NjN5TuyIry3d5rINt6iMeUif6&#xA;yNVvkfbOp7Pzgjg+Tw3a2mIlx/AvZc2bpXYq7FXYq7FXg/8AzkfHx1nQZgd2ilWn+pIp/wCNs1Ha&#xA;Y3Hud/2Kdpe8JDAapQ9ts5aT3DHdVN3o+rWuuae3pXNvKrhh2kQ1Un2alD/bmw0mYg+YdX2hpxIX&#xA;0PN9TeW9cttd0Gx1e22ivYVk41rxY7OhPijAqflnW45icRIdXgM2IwmYnoxvzT+b/k7y1qy6VevN&#xA;PdCn1j6siyLDy6eoSy703otTlGXVwgaLk4Oz8mSPEOXmzGzu7a8tIbu1kE1tcIssMq7qyOKqw+YO&#xA;ZIIIsOHKJBo82Nee/wAx9B8nWyG+LT304rb2MVPUZQacmJ2Ra9z9Fcoz6mOMb83J0ujnmO3LvYXo&#xA;X/ORmiXl8lvq2mSaZBIeIull+sKpPd1CRsB8q5jY+0Yk0RTm5eyJAXE8X2MT/PjWrHVfNukW9jPH&#xA;dQw2yH1YXDqWmlJpVSR9lVP05i9pZATt3Od2PhIibHOSCtx8JPic5qT2SE1i1FxaTRUrzQ8f9Ybj&#xA;8csxSohryw4okM5/JDzetl5C15Lg8xoPO8jjJ/3XJGzhB85I2+/Op0Wascr/AIXhu0tPxZY1/Fs8&#xA;faCbUrTU9avHMl08nMyH9qR3DSE/8FmlyZTxgd70eLABjJ7uT6M/I68e5/LjT1dizW7zw1PgJWZR&#xA;9AamdFoTeIPI9pRrMfOnjv5gmTUfzX1Vb2rpbyBI426cIo1CLQ9u58c0vaUzxyej7HxRMIj4qF9o&#xA;8F9AFdQpX+7dQAR8vbNTDKYl3+TDGYooTTPK6W1yJnkMrL9gFeIB+VTU5Zk1FimrFpBA2TbMbe2S&#xA;OHgRuR8Wa+UrKZTspdeW7xijfMEZdCVuRGQLCLPWrnSE1yxiHwalCbSQdgFnSTl/wKMv05usWQiJ&#xA;/pB5/PhBmP6MkWXEPlDhSjSkH75K/wDERmFV5XYnbB7/ANb6E/JS0a2/LfSuYo03rTEUps8z8fvU&#xA;A51WiFYg8P2lK8x/HR5x+euiSaR5wsvMkS/6LqKCO4I7TRKEav8ArRcafI5ru08G99/3u37E1NCv&#xA;5v3FJracOq8SCjCqsO4O4zm5RexBtMbKJWYuwrxpT55TMtWWVbJnJbTxxrI6FUf7JOUiQLiRyRJo&#xA;FB3qBoCf5d/4ZZA7t+I7sYuvLdhdTmaXkrk/FwIAanjUH8MzY6iQFBlk00JGylvmnhFZwQRjigf4&#xA;VHYIKAfjl2n3JLTrNogB9ReTLIWXlHRbQChhsbdW/wBb0l5H6WzsMMagB5PnmolxZJHzKC/MXyun&#xA;mbyjfaaFDXXD1rInqJ4t0p4ct0PschqMXHAhnpM/h5BLp19z5v8AK940lmYW+3bsAP8AVbcD7wc5&#xA;DURo33voWjyXGu5m2kxiTgn87gH6aZrcppOolW/kzSKze6rCkfqbVKGnQfPMGIJOzoJZRDcmmL6p&#xA;ZGGWSLojglD7H+mZWOdi3cafLxAFIpEKOUPUZlA27EGxbFvNsZNvFJT7MhU/7IH+mZumO7ha4bAv&#xA;p7yPqcWp+T9HvoiCJbSINToHRQki/wCxdSM7DBLigD5Pnuphw5JDzTmSRI42kkYLGgLOx6AAVJOW&#xA;tAFvkfy+6z3+pXMa8IZH5InhzdmA+gZxurO4fROz4kX7mfaCADanxYE/fTNRn6turOx9z0by5Dya&#xA;W4rsKxge9QT+rKtPHq8trpco/Fj/AJjszWb+eFyQf8kn+m+QieGZDs9Dl5eYYZfAesPdRXM2HJ3+&#xA;LkkmqWQuraa3/acVjJ7MN1/HMnHOiCnNj44kM6/5x481kw3nlW6YiWAtdWIb+UkCaMf6rUanuc6f&#xA;s7NY4fiHh+19PREx7iy/86fMo0TyNdxxtS61P/QoPGkgPqt/yLDD5kZk63Jw4z57OH2dh48o7o7v&#xA;C/L9p9X0yMkfvJz6jfI7KPu3zks0rl7nv9JDhh72ZaeDFHBTqtCPvrmuybktebe3p3l0UtZKCg9Q&#xA;/qGQ0/J5DXH1D3Jb5hjAu5q9JEBP/A0/hlWbabl6GXpHkXmdzJzlJpQdB8szoig9dAUEJcDofoyy&#xA;LNLNLvX8v/mDpOrRHhDJPG0pGw4SH05x/wACx+/NroMpBB7i6HtTAJCQ7xbK/wA/9SbUfOGlaEjV&#xA;jtIQ8g8JLlvir8o0U5sO08u9dwdT2LhuN/ziktvGGcBRQCgVR+Gc3IvZ8mSWqqJ4VIqvJQR7VGYU&#xA;uRcDIdi9N0OPhYKf52Lfw/hhwCovIauVzY95ymcG4MZoURVJHg3X/iWVy3yO07LiNreeXJrO/saf&#xA;dtmXHk9RDkhpxWP5HJxZsY83EhbEgkEerT6OOZulPN12uHJO/NN5+kvzU1y6PxCCeWJT/wAYALcf&#xA;8RzL7Rncpe9wOx8dRj7r+f8AamWlR8pix6LQ/TmlynZ3mWVBPbONmuEIHwoQ7nwUEVOYszs4OU1E&#xA;vUdOXjYwD/IU/eK5bjHpDxuc3M+9ifmw0a6B7soH4HMY/wB47zs0fSwq5tPUJdDRu48cyYzp38Ml&#xA;bFL5VIVlIoR2y4OQGK+ag0jWUSCrkyBR4luAGZ2lHN1+vPL4qmjzm71jVL0mvrStIT4+o7N3yerl&#xA;Z+LDs6FD3AMy0xONuppu5JJ9htmqyndzMp3ZFpUINrM1P7wiP6Dsf+JZiZTuHWamXqA7t3o9qKW0&#xA;I8EX9WZUOQeUyfUfexnzPYszyioPrryQeBXp+rMXJ6Z27fs/NQHkwogg0OxHUZc9CpTwJKhVuvY+&#xA;GSjKmUZEMQ+pm+89aHpi/FzubdHpTo8w5Hv0XfN1oI8RHmXB7UyUCe6KX+T05C6oN6x8j7fFTKdU&#xA;eTlaHr8Gf26cII18FGauRstkzuyXRoq20K/78Yk/fTMTJvJ1Oql6ie5n4AAoOmZ7zCReYUIeA/s8&#xA;SAfkcxNQOTstEdixLV7Dc3MQ/wCMij/iX9cjin0LvNNm/hKU5e5qWflFYDWvzUk1ADlbacstwp7b&#xA;D0Iv+J8h8s6nsvFuPIOg7Zz/ALs/0jTHLC3bRvOmo6JIvFVuZIBXb+6duB/2S9Mwdfiq/wCi7Ps/&#xA;PcQf5wZzDGZJUjH7bBa/M5oyaDlSlQJZfodmjXUcYPFIzVe5om9PvrlEBxSdFrMpESe/9LLsznRo&#xA;bUoBNZSrSpCll+a75XljcS3YJ8MwWKEAgg7g7EZr3dvPfN+qJpmnThG/fzFoYPHwLfQM2ulx8ch3&#xA;O0nOo31L0P8AITyq+keVG1S4Thd6wwlUHqLdKiL/AIKrN8iM7XQYuGFnmXj+1M/Hk4Ryj97Hfzt/&#xA;LrV5dag8z6BbS3M05RLyG3UvIsyACOVVUE0IAB8CPfKNfpTI8QF3zcnszWiMeCRquTG9F80Kt4LL&#xA;VY2sdVtnCzQSgpVlO4+KnE+xzldTo5QuuT0kM0ckefN6Xo17AlxHcBuUVWDEV71HTNXA8Mt3VarF&#xA;IxMerLIpY5Y1kjNUYVBzOBsWHSSiYmiuwsWAeYNVstDtprm/cRLGSqp1Zm7Ko7k5g48Mpy4QHoMX&#xA;qAI5MA8j+VdQ/MTzT9dvUaPQbJwblugIHxLAp7s/7R7D6M67s/Q9Og5se0db4cdvqPJ9LRxxxRrH&#xA;GoSNAFRFFAABQADOkeTJtdirE/O/5aeW/N0XK9jNvqCDjDqENBIAOiuDs6+x+gjMfPpo5OfPvcvT&#xA;ayeHly7nmH+CfzN8lzMLSH/EWi1+xAT6oA6UjNZFb2XkM5/W9imW4594/U7vH2jiyDc8J8/1q0P5&#xA;w2ukH0b3TL+3kP27eWJVoR1pydD+GacdnZoGrHxv9TPJpo5dwfkuufztv9RiNt5Z0G4uL5/hRnBl&#xA;4kn/AH3EGLf8EMysehlL9jjjQxibnIUhtC/J/wA5+atQXU/OlzJZ21eXoEqbhwdyFRapED3qK+2b&#xA;nS9l1zHCPtXP2nCA4ce/3PcNI0fTdH06HTtNt1trOAcY4k/Ek9ST3J3ObuEBEUOTocmSUzxSNlGZ&#xA;Jg//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:053a31ae-d0fe-7b41-81dc-5810a9e92a5e</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:053a31ae-d0fe-7b41-81dc-5810a9e92a5e</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0f5a5d69-8578-4106-a653-ac2cd69430f6</stRef:instanceID>
            <stRef:documentID>xmp.did:a547d6c8-b04e-bc45-b281-f15623cdf86d</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a547d6c8-b04e-bc45-b281-f15623cdf86d</stEvt:instanceID>
                  <stEvt:when>2018-03-09T10:41:33+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:053a31ae-d0fe-7b41-81dc-5810a9e92a5e</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:16:16+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>81.910245</stDim:w>
            <stDim:h>327.502591</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -327.503 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 327.503 li
81.9102 327.503 li
81.9102 0 li
cp
clp
48.5515 9.67236 mo
48.0153 7.44482 46.2634 5.59326 44.4792 4.32373 cv
42.5871 2.97705 40.5915 2.625 38.3654 3.09814 cv
35.9016 3.62158 35.384 7.47314 37.5354 8.72949 cv
37.6081 8.79834 38.2146 9.271 38.2893 9.32666 cv
38.5168 9.49707 38.7434 9.66992 38.9719 9.83887 cv
39.2038 10.0103 39.4372 10.1758 39.675 10.3394 cv
39.7898 10.4185 40.1496 10.7505 40.0285 10.6274 cv
40.1403 10.7344 40.2541 10.8398 40.3606 10.9531 cv
40.3557 10.9482 40.5754 11.2114 40.7033 11.3589 cv
40.8039 11.5098 40.9802 11.7651 41.0075 11.8115 cv
41.1867 12.1157 41.3317 12.4238 41.5388 12.7114 cv
42.5354 14.0996 44.1325 15.0791 45.8718 14.5244 cv
46.1486 14.436 46.5324 14.2666 46.7883 14.127 cv
48.3088 13.2959 48.9489 11.3213 48.5515 9.67236 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.996078 .439216 .117647 rgb
f
73.9685 292.437 mo
77.0085 285.907 77.4436 276.131 77.3908 271.44 cv
77.2873 262.202 76.3708 253.333 73.5271 244.948 cv
73.3884 244.268 73.1569 243.621 72.8327 243.03 cv
72.0085 240.852 71.0412 238.709 69.9201 236.601 cv
69.3933 235.293 68.8703 233.979 68.3049 232.662 cv
67.9084 231.738 67.507 230.864 67.112 230.007 cv
67.7497 225.071 68.2326 220.108 68.9724 215.189 cv
69.8078 209.631 71.7307 204.316 72.048 198.686 cv
72.4812 193.138 64.1047 193.188 63.6467 198.686 cv
63.2248 203.753 61.0578 208.623 59.7863 213.508 cv
59.7097 213.803 59.6438 214.1 59.5695 214.396 cv
58.1613 213.731 56.6799 213.557 55.2439 213.784 cv
54.9729 212.147 54.6877 210.512 54.3654 208.883 cv
52.9504 201.731 50.5754 194.924 46.2888 189.241 cv
45.6921 187.419 45.0944 185.599 44.487 183.782 cv
44.2116 182.036 43.7946 180.298 43.4436 178.621 cv
42.7526 175.319 42.1545 171.956 41.0515 168.769 cv
46.823 166.502 51.9953 161.769 55.5305 156.747 cv
64.4899 144.019 60.9162 128.436 59.0354 114.012 cv
58.2097 107.682 57.8488 100.531 51.6101 97.2065 cv
48.7092 95.6606 45.6916 95.9854 42.5881 95.4185 cv
39.219 94.8022 36.049 93.4287 32.7077 92.6157 cv
34.4421 85.6729 38.8523 77.6157 37.4621 70.4463 cv
36.8669 67.3774 32.7644 65.687 30.2605 67.4341 cv
24.0105 71.7964 22.051 81.9512 20.0192 89.0474 cv
18.7175 93.5942 17.6535 98.1958 16.7805 102.838 cv
16.6545 103.01 16.5241 103.17 16.4099 103.37 cv
11.697 111.634 9.45088 119.704 8.35128 129.221 cv
7.3171 138.169 6.63204 147.765 9.65987 156.414 cv
10.9006 159.958 12.6638 163.396 15.3352 166.028 cv
16.7956 167.467 18.5422 168.582 20.427 169.315 cv
22.0207 169.936 24.299 169.739 25.8879 170.296 cv
25.8435 170.45 25.8029 170.609 25.7707 170.778 cv
24.5891 177.036 25.5695 183.519 25.9958 189.825 cv
26.3352 194.845 26.571 199.873 26.7111 204.903 cv
26.0476 205.183 25.3947 205.598 24.7751 206.186 cv
24.4362 206.508 23.467 207.371 22.4489 208.152 cv
21.9699 207.475 21.3083 206.86 20.4343 206.354 cv
19.2775 205.684 18.2038 205.267 17.1232 205.028 cv
11.4069 203.412 4.69258 204.806 3.98555 212.285 cv
3.61592 216.194 5.72481 219.269 7.21797 222.677 cv
9.00508 226.758 10.09 231.172 11.198 235.489 cv
12.2204 239.47 13.5026 243.516 12.6975 247.652 cv
11.7336 252.602 9.75557 257.424 8.58126 262.345 cv
6.43428 271.344 5.02071 280.561 4.30684 289.796 cv
3.63838 298.445 4.45137 307.001 10.4729 313.618 cv
15.6242 319.277 22.9699 322.652 30.3479 323.741 cv
45.0598 325.913 62.1648 319.339 69.4514 305.37 cv
70.9079 302.578 71.7395 299.679 72.1657 296.72 cv
73.1413 295.527 73.6794 293.967 73.9685 292.437 cv
cp
f
55.7844 42.8979 mo
55.029 42.1216 54.0197 41.8101 52.9787 41.9541 cv
51.9533 42.0952 51.0705 42.6592 50.5388 43.5928 cv
49.9743 44.585 49.8679 46.0776 50.5388 47.0586 cv
50.5437 47.0645 50.5461 47.0723 50.551 47.0786 cv
50.571 47.123 50.6003 47.1616 50.6218 47.2046 cv
50.5114 47.793 50.5793 48.417 50.7985 48.9648 cv
49.6384 50.5337 50.299 53.4517 52.8044 53.4517 cv
55.0456 53.4517 55.8098 51.1089 55.112 49.4922 cv
55.3083 49.2368 55.4538 48.937 55.5188 48.5913 cv
55.5539 48.4033 55.5891 48.2158 55.6242 48.0278 cv
56.0725 47.5498 56.3835 46.9473 56.6433 46.2383 cv
57.0524 45.1211 56.5681 43.7031 55.7844 42.8979 cv
cp
f
50.8586 277.398 mo
50.5813 276.977 50.3054 276.565 50.0363 276.172 cv
49.9094 275.988 49.7741 275.826 49.6335 275.681 cv
49.6203 275.634 49.6081 275.587 49.5949 275.54 cv
50.1926 276.147 50.8278 276.718 51.4963 277.256 cv
51.2785 277.283 51.0647 277.328 50.8586 277.398 cv
cp
25.614 249.613 mo
25.7614 246.304 25.57 242.979 25.3386 240.002 cv
25.4323 240.252 25.5158 240.505 25.6203 240.753 cv
25.719 240.988 25.9152 241.108 26.114 241.129 cv
26.1276 243.991 25.9367 246.808 25.614 249.613 cv
cp
71.9943 288.07 mo
71.7883 287.522 71.5476 287.007 71.2878 286.511 cv
71.7258 286.434 72.1057 285.993 72.2131 285.583 cv
72.7443 283.553 71.174 281.879 69.8293 280.548 cv
68.3303 279.065 66.5085 277.121 64.444 276.486 cv
64.1032 276.381 63.8034 276.456 63.5749 276.626 cv
63.2956 276.326 63.0197 276.021 62.7395 275.722 cv
61.0388 273.905 59.3982 272.173 57.0295 271.297 cv
56.8405 271.227 56.6701 271.294 56.5505 271.419 cv
56.3942 271.266 56.2326 271.118 56.0778 270.963 cv
55.2121 270.096 54.3444 269.197 53.7468 268.118 cv
53.1154 266.977 53.1584 265.701 52.6335 264.524 cv
52.6311 264.519 52.6252 264.517 52.6228 264.512 cv
52.5661 263.103 52.6555 261.715 53.0339 260.25 cv
53.4846 258.507 54.0778 256.998 53.4987 255.225 cv
53.3591 254.798 52.6423 254.588 52.4274 255.085 cv
51.0398 258.294 50.7507 261.521 51.1106 264.835 cv
50.7927 265.31 50.6193 265.809 50.5622 266.325 cv
49.0358 261.4 50.9426 256.218 51.8894 251.176 cv
52.3693 251.637 53.424 251.555 53.614 250.76 cv
55.114 244.476 55.6648 236.696 51.677 231.186 cv
51.3982 230.801 50.7976 230.696 50.405 230.899 cv
49.9484 229.447 49.4255 227.988 48.8396 226.563 cv
49.073 226.355 49.2209 226.042 49.1413 225.641 cv
48.2277 221.052 46.7551 213.343 42.3806 210.724 cv
41.8488 210.406 40.9318 210.803 41.0227 211.503 cv
41.0232 211.506 41.0236 211.509 41.0241 211.512 cv
40.9221 211.318 40.821 211.118 40.719 210.927 cv
40.6281 210.757 40.5207 210.605 40.4011 210.469 cv
40.9494 210.34 41.3772 209.687 41.0671 209.061 cv
40.3659 207.644 39.6213 206.324 38.6667 205.056 cv
38.2487 204.501 37.5544 204.214 36.904 204.594 cv
36.4655 204.851 36.2077 205.396 36.2756 205.899 cv
36.176 205.918 36.0764 205.961 35.9856 206.061 cv
35.7966 206.267 35.6086 206.483 35.4206 206.698 cv
34.28 207.001 33.2717 207.988 33.134 209.488 cv
33.1296 209.537 33.1159 209.585 33.1106 209.633 cv
30.7868 212.927 28.9411 216.79 28.614 220.697 cv
28.2927 221.119 28.0153 221.572 27.7624 222.041 cv
28.0149 220.559 28.3518 219.074 28.8117 217.58 cv
29.1306 216.545 27.5661 216.143 27.2072 217.138 cv
24.843 223.688 22.9372 231.17 24.7175 238.053 cv
24.0803 237.687 23.1091 237.943 23.1643 238.883 cv
23.4221 243.296 23.2922 247.589 22.5427 251.953 cv
22.0319 254.929 21.194 257.827 21.0197 260.832 cv
20.2863 263.528 19.4655 266.195 18.4939 268.838 cv
16.8942 273.185 14.7824 277.554 14.1164 282.159 cv
14.0383 282.7 14.7233 283.328 15.1745 282.774 cv
20.1833 276.625 22.0441 267.558 23.6374 259.56 cv
23.8815 258.978 24.1076 258.385 24.301 257.773 cv
23.5964 261.2 22.7258 264.655 21.7497 268.198 cv
20.3703 273.207 18.9851 278.237 17.1535 283.095 cv
15.1477 288.416 11.7951 293.161 10.0095 298.538 cv
3.13546 319.237 30.6667 325.569 44.7922 323.604 cv
59.9768 321.493 78.717 305.909 71.9943 288.07 cv
cp
.996078 .552941 .133333 rgb
f
28.8776 115.876 mo
28.0988 116.52 27.3415 117.012 26.614 117.501 cv
26.6628 117.434 26.715 117.368 26.7644 117.3 cv
27.2971 116.561 28.0896 115.622 28.5598 114.64 cv
29.2248 114.65 29.8791 114.23 29.84 113.376 cv
29.76 111.633 29.7194 109.891 29.697 108.146 cv
29.6804 106.825 29.8444 105.445 28.8791 104.436 cv
28.8488 104.404 28.8098 104.389 28.7741 104.366 cv
28.924 104.312 29.0603 104.203 29.1335 104.022 cv
29.0471 104.235 29.7434 104.622 30.6433 105.023 cv
30.1623 105.724 29.9397 106.6 30.197 107.44 cv
31.1569 110.58 31.572 113.649 28.8776 115.876 cv
cp
19.1608 134.325 mo
19.1193 135.252 19.1013 136.25 19.1096 137.286 cv
19.0456 136.808 18.9699 136.331 18.8591 135.856 cv
18.8161 135.672 18.6892 135.579 18.5461 135.53 cv
18.7468 134.165 19.0354 132.815 19.4148 131.477 cv
19.2946 132.423 19.2038 133.374 19.1608 134.325 cv
cp
52.7868 123.694 mo
52.0461 119.106 50.1018 114.723 46.6203 111.664 cv
45.4704 110.653 44.2072 109.83 42.9035 109.072 cv
42.4797 108.669 42.049 108.282 41.6438 107.904 cv
41.2214 107.51 40.7829 107.137 40.3518 106.754 cv
39.7072 105.792 38.7688 105.062 37.6892 104.497 cv
37.2976 104.181 36.9148 103.854 36.5168 103.545 cv
36.1828 103.287 35.7829 103.37 35.531 103.59 cv
34.5017 103.245 33.4607 102.978 32.5271 102.752 cv
31.2644 102.448 27.9411 101.637 28.052 103.876 cv
28.0612 104.071 28.1462 104.207 28.2605 104.294 cv
28.1652 104.323 28.0744 104.366 28.0007 104.436 cv
26.9919 105.403 27.1218 106.831 27.111 108.146 cv
27.0998 109.534 27.135 110.923 27.1814 112.312 cv
26.0481 113.158 25.5202 115.069 24.9353 116.231 cv
23.9279 118.229 22.7453 120.081 21.4431 121.894 cv
21.3073 121.917 21.1696 121.979 21.0402 122.104 cv
17.0481 125.936 16.6394 133.432 16.677 138.75 cv
15.7473 143.77 18.9397 150.144 20.8225 154.204 cv
21.2858 155.203 22.883 154.684 22.9245 153.737 cv
23.4558 154.555 24.051 155.31 24.7273 155.973 cv
24.736 156.039 24.7458 156.106 24.7546 156.172 cv
24.9524 157.715 25.9138 159.194 27.6345 159.132 cv
30.1608 159.042 31.8171 157.747 32.4025 155.489 cv
33.6726 153.762 34.0481 151.293 34.1262 148.913 cv
35.0593 146.897 34.9113 144.466 35.3454 142.309 cv
35.5852 141.116 36.8542 138.53 36.2287 137.362 cv
36.215 137.337 36.2019 137.312 36.1882 137.286 cv
35.8776 136.707 35.198 136.661 34.697 136.948 cv
35.6364 135.229 37.0481 133.664 38.3269 137.061 cv
38.5407 137.628 38.4162 138.562 38.5017 139.194 cv
38.7712 141.197 39.3591 143.1 40.3679 144.842 cv
41.8361 147.377 44.2707 149.025 47.1467 147.724 cv
53.9953 144.626 53.7512 129.667 52.7868 123.694 cv
cp
f
36.9607 114.384 mo
36.841 115.647 36.7868 118.438 36.029 120.011 cv
35.843 120.013 35.6731 120.04 35.4929 120.051 cv
35.7233 119.135 35.6726 117.989 35.7902 117.244 cv
35.9865 116.007 36.3405 114.917 36.1745 113.812 cv
36.6462 112.835 37.2663 111.93 38.1159 111.734 cv
38.3781 111.674 38.5715 111.738 38.7297 111.862 cv
37.8293 112.218 37.0861 113.059 36.9607 114.384 cv
cp
27.9626 124.709 mo
27.8972 124.544 27.7233 124.455 27.5417 124.454 cv
28.236 123.52 29.0568 122.735 30.1027 122.209 cv
29.2917 122.912 28.5783 123.75 27.9626 124.709 cv
cp
47.9631 129.875 mo
47.7468 128.706 47.4597 127.555 47.1359 126.415 cv
47.1276 124.53 46.507 122.847 45.9211 121.018 cv
45.2107 118.799 44.5774 116.563 44.0134 114.303 cv
43.7732 113.338 42.4416 113.777 42.5671 114.702 cv
42.6784 115.521 42.7756 116.392 42.8825 117.285 cv
42.6921 116.424 42.5534 115.543 42.4753 114.639 cv
42.3933 112.294 40.8625 108.599 37.969 109.114 cv
35.8415 109.493 34.7844 111.834 34.1003 113.901 cv
34.0847 113.946 34.0695 113.991 34.0554 114.036 cv
33.883 114.565 33.7336 115.074 33.5974 115.521 cv
33.5036 115.828 33.5705 116.073 33.7121 116.254 cv
33.6936 116.436 33.6735 116.62 33.6486 116.808 cv
33.6272 116.969 33.4548 119.497 33.5607 119.408 cv
33.4709 119.484 31.6198 119.607 31.5036 119.644 cv
28.4216 120.595 26.4885 123.932 24.8669 126.483 cv
24.674 126.787 24.8054 127.08 25.0344 127.249 cv
23.2575 130.299 22.4113 134.409 21.9763 137.433 cv
21.8479 138.327 23.2038 138.728 23.3552 137.813 cv
23.7316 135.537 24.3107 133.333 25.1389 131.178 cv
25.2844 130.799 25.4533 130.428 25.6296 130.059 cv
24.0134 135.549 23.7404 142.137 23.4943 146.695 cv
23.3703 148.997 26.6672 148.889 26.9162 146.695 cv
27.1052 145.032 27.3879 143.41 27.717 141.801 cv
28.6672 141.938 29.6491 141.591 30.0857 140.571 cv
31.1047 138.192 31.6989 135.556 32.9118 133.287 cv
33.3283 132.508 34.2565 131.102 35.3073 130.206 cv
35.2941 130.361 35.3161 130.521 35.3762 130.678 cv
34.2072 132.155 33.0627 133.704 32.2775 135.412 cv
31.7717 136.513 31.1218 137.925 31.0676 139.242 cv
30.4631 140.697 29.8381 142.143 29.1706 143.575 cv
28.4445 145.133 27.7121 146.627 27.6164 148.367 cv
27.5949 148.758 28.0798 148.889 28.3366 148.666 cv
30.5075 146.774 31.6486 143.495 32.6008 140.502 cv
33.5017 139.398 33.8073 137.714 34.3239 136.435 cv
34.9807 134.807 35.6892 133.277 36.6198 131.812 cv
36.9367 132.008 37.258 132.201 37.5373 132.435 cv
38.1408 132.939 38.6623 133.538 39.1594 134.146 cv
39.384 134.42 39.7107 134.415 39.9787 134.274 cv
40.6272 135.012 41.364 135.621 42.1955 135.94 cv
41.0813 135.708 40.1306 135.067 39.2605 134.286 cv
38.9939 134.047 38.5593 134.137 38.4572 134.498 cv
37.7009 137.171 41.135 138.107 43.1399 138.249 cv
44.8068 138.366 45.9406 137.67 46.7478 136.598 cv
47.0988 136.737 47.5271 136.642 47.7473 136.281 cv
48.9167 134.362 48.3552 131.993 47.9631 129.875 cv
cp
.996078 .760784 .164706 rgb
f
43.3669 126.741 mo
42.5808 124.238 41.7497 121.752 41.0158 119.234 cv
41.0139 119.227 41.009 119.224 41.007 119.217 cv
40.6482 117.978 40.2224 116.777 39.9392 115.743 cv
39.5774 114.422 37.8083 114.814 37.6828 116.049 cv
37.5315 117.535 37.1252 118.851 36.5651 120.178 cv
35.0471 120.567 34.0515 121.601 32.9323 122.793 cv
31.6257 124.187 30.469 125.72 29.445 127.331 cv
29.2702 127.605 29.2033 127.875 29.2038 128.132 cv
26.2268 131.707 23.4982 136.202 26.9421 138.451 cv
26.9909 138.482 27.0417 138.495 27.0915 138.516 cv
27.0212 138.76 26.9397 139.002 26.8732 139.247 cv
26.6164 140.194 26.07 142.205 27.5109 142.557 cv
28.737 142.856 29.2136 141.411 29.4206 140.462 cv
29.7605 139.819 29.8913 139.029 30.0158 138.333 cv
30.2097 137.25 30.4773 136.185 30.7746 135.128 cv
31.4733 134.362 31.8386 133.268 32.3303 132.342 cv
33.2136 130.68 34.3347 129.255 35.9445 128.249 cv
36.7775 127.728 36.3796 126.651 35.6374 126.481 cv
35.9245 126.175 36.2043 125.861 36.4982 125.562 cv
36.7111 125.343 36.9314 125.131 37.1486 124.916 cv
37.2605 126.335 38.0446 128.159 38.569 129.047 cv
38.8435 129.511 39.2976 129.731 39.7541 129.74 cv
40.0969 130.501 40.571 131.214 40.9724 131.716 cv
41.0974 131.872 41.2404 131.965 41.3894 132.031 cv
41.5705 133.613 44.1926 134.219 44.4528 132.385 cv
44.7263 130.46 43.9392 128.563 43.3669 126.741 cv
cp
.996078 .968627 .482353 rgb
f
72.7927 252.834 mo
71.7058 248.446 70.3581 242.331 67.6359 237.987 cv
67.0109 234.718 66.7692 231.37 66.8767 227.927 cv
67.0681 221.803 68.7639 215.666 66.7038 209.755 cv
66.5334 209.267 65.8654 209.111 65.5896 209.605 cv
62.3161 215.475 62.218 224.145 62.4914 230.771 cv
62.5432 232.021 62.6716 233.261 62.8371 234.493 cv
62.5114 234.774 62.281 235.181 62.2736 235.617 cv
62.2204 238.878 63.82 241.638 64.9606 244.629 cv
65.8137 246.866 66.5661 249.138 67.2717 251.426 cv
68.1433 260.976 70.6662 270.371 71.3933 279.954 cv
71.5466 281.969 74.4665 282.028 74.487 279.954 cv
74.4948 279.184 74.4978 278.416 74.4963 277.649 cv
74.9787 277.374 75.3317 276.858 75.3361 276.097 cv
75.384 268.177 74.698 260.525 72.7927 252.834 cv
cp
.956863 .396078 .117647 rgb
f
58.7487 123.823 mo
57.987 119.363 57.0007 114.779 55.0964 110.667 cv
56.4421 110.87 57.7277 108.988 56.5905 107.593 cv
51.5114 101.366 42.9572 95.4873 34.6379 96.4199 cv
33.9226 96.5005 33.1857 97.1567 33.4743 97.9907 cv
34.632 101.336 38.2927 101.122 41.1857 101.949 cv
45.5896 103.208 49.4655 105.487 52.7365 108.662 cv
52.2126 108.839 51.7893 109.285 51.8391 109.947 cv
52.1765 114.43 53.2775 118.822 53.9265 123.266 cv
54.1589 124.861 54.2702 126.538 54.3835 128.229 cv
54.0232 128.339 53.7185 128.607 53.6296 129.045 cv
52.3274 135.465 51.6975 142.357 50.1145 148.878 cv
49.8869 149.175 49.6584 149.491 49.4123 149.831 cv
48.7844 150.698 48.1335 151.53 47.4729 152.353 cv
45.8903 153.168 44.863 154.842 43.6408 156.156 cv
42.5207 157.359 41.3337 158.5 40.2048 159.695 cv
40.1027 159.658 39.9982 159.626 39.8801 159.622 cv
35.0334 159.48 34.6052 166.818 35.0031 170.417 cv
35.6569 176.324 37.9065 182.005 41.3352 186.759 cv
42.1672 192.26 43.8259 197.308 45.8869 202.492 cv
48.2346 208.396 49.9841 214.337 51.9875 220.345 cv
52.3913 222.482 55.6394 221.951 55.6286 219.838 cv
55.57 208.496 47.7561 198.064 44.2634 187.416 cv
44.6848 186.917 44.8547 186.222 44.4226 185.591 cv
41.737 181.677 40.3469 177.158 39.5329 172.469 cv
39.448 171.98 39.3801 171.507 39.3215 171.041 cv
39.5778 170.616 39.6247 170.029 39.2502 169.601 cv
39.2229 169.569 39.2077 169.534 39.1838 169.502 cv
39.154 168.903 39.1652 168.313 39.2063 167.725 cv
40.8405 165.54 42.7771 163.672 44.7522 161.817 cv
44.5315 162.146 44.3225 162.481 44.0866 162.803 cv
43.1345 164.105 45.2214 165.735 46.2766 164.541 cv
51.0378 159.147 54.0798 153.597 55.7609 146.475 cv
56.2356 144.462 56.9987 141.822 57.466 139.119 cv
58.2082 139.242 58.987 138.89 59.2902 137.919 cv
60.674 133.496 59.5173 128.324 58.7487 123.823 cv
cp
f
42.3044 180.063 mo
42.2399 180.063 42.2399 180.166 42.3044 180.166 cv
42.3689 180.166 42.3689 180.063 42.3044 180.063 cv
cp
f
32.6355 185.51 mo
32.715 185.316 32.7668 185.097 32.7741 184.845 cv
32.9646 177.857 33.1936 170.482 28.5339 164.819 cv
26.4265 162.257 23.7658 160.912 20.8156 159.602 cv
18.194 158.437 16.5285 158.438 16.6335 154.314 cv
16.6804 152.448 17.1276 151.991 16.8405 150.096 cv
16.6584 148.895 15.215 148.875 14.4899 149.458 cv
14.448 149.492 14.4143 149.532 14.3732 149.567 cv
13.9851 147.926 13.6721 146.254 13.4475 144.565 cv
13.3513 141.239 13.5007 137.89 13.7976 134.599 cv
14.1125 131.108 14.9201 127.671 15.3855 124.205 cv
15.7097 123.058 16.0261 121.903 16.3064 120.724 cv
16.8059 120.627 17.2409 120.276 17.3928 119.582 cv
17.8527 117.474 18.2922 115.399 18.7492 113.339 cv
21.1032 107.883 23.0861 102.06 25.1687 96.5444 cv
26.8005 92.2207 28.7316 87.7124 30.2575 83.1357 cv
30.3962 84.6558 32.3244 85.231 33.1467 83.8716 cv
35.2761 80.3516 35.2321 76.1357 34.8899 72.0957 cv
34.7312 70.2227 32.1794 69.1265 31.1823 71.0635 cv
31.0275 71.3647 30.8732 71.666 30.7185 71.9673 cv
30.5305 72.0767 30.3557 72.248 30.2116 72.501 cv
28.9748 74.6714 27.9274 76.9883 26.9665 79.3647 cv
24.5915 84.1509 22.3249 88.9932 20.342 93.9668 cv
18.7551 97.9458 17.2863 102.014 16.2976 106.197 cv
16.2541 106.38 16.2126 106.565 16.1701 106.75 cv
14.9133 110.79 13.9406 114.979 14.2463 119.071 cv
14.2351 119.28 14.2746 119.472 14.342 119.651 cv
14.1779 119.725 14.028 119.839 13.924 120.018 cv
13.4519 120.83 13.0529 121.677 12.6887 122.541 cv
8.69991 129.058 9.43917 137.733 11.2468 145.312 cv
11.4411 146.63 11.6555 147.923 11.8806 149.17 cv
11.9431 149.515 12.1784 149.71 12.4563 149.796 cv
12.5485 150.104 12.6413 150.41 12.7341 150.711 cv
12.7898 150.89 12.884 151.018 12.9919 151.123 cv
10.5422 154.855 11.8869 160.416 15.8806 162.619 cv
19.7107 164.732 23.5998 165.358 26.1315 169.411 cv
28.4431 173.112 29.0754 177.577 29.3225 181.93 cv
28.5974 181.816 27.8254 182.304 27.8332 183.19 cv
27.8708 187.418 30.2067 191.085 30.4714 195.301 cv
30.7644 199.974 28.7673 207.458 24.0241 209.329 cv
23.8024 209.417 23.6198 209.539 23.4729 209.684 cv
21.0998 207.742 18.0432 206.08 14.9631 206.242 cv
14.0534 206.29 13.1921 206.644 12.4963 207.19 cv
8.42256 207.455 7.87227 212.381 8.20088 216.187 cv
8.57149 220.486 10.406 225.486 14.611 227.096 cv
16.0119 231.607 17.5129 236.127 17.7204 240.832 cv
17.7614 241.763 17.737 242.692 17.6691 243.618 cv
17.3269 243.755 17.0349 244.04 16.9001 244.514 cv
16.0866 247.376 15.2717 250.243 14.5261 253.127 cv
13.717 253.071 12.8845 253.474 12.5847 254.503 cv
11.0495 259.772 9.47335 265.865 8.63838 272.001 cv
5.29171 278.901 1.74581 289.404 6.67305 295.111 cv
7.51094 296.082 9.01827 295.272 9.05342 294.097 cv
9.11397 292.091 8.92989 290.138 8.79561 288.175 cv
8.87667 288.566 8.94844 288.962 9.04415 289.346 cv
9.12325 291.03 12.0275 291.557 12.2775 289.662 cv
12.7898 285.781 12.6672 281.845 12.7297 277.921 cv
13.3064 278.229 14.1286 278.104 14.3269 277.278 cv
15.5661 272.111 15.0979 266.514 15.9621 261.234 cv
16.0041 260.978 16.0598 260.724 16.1037 260.467 cv
16.155 260.434 16.2067 260.407 16.2561 260.363 cv
20.6945 256.407 22.0778 247.479 22.0124 241.713 cv
21.927 234.145 18.4426 227.273 16.6418 220.067 cv
16.1574 218.128 13.8015 218.363 13.0881 219.751 cv
13.0017 219.528 12.9152 219.305 12.84 219.076 cv
12.468 217.948 11.5915 214.417 12.0476 212.393 cv
12.5808 212.565 13.2165 212.47 13.5617 212.035 cv
13.8273 211.7 14.0886 211.161 14.4245 210.834 cv
14.5866 210.774 14.7214 210.684 14.842 210.58 cv
15.4587 210.432 16.51 210.845 17.0393 210.989 cv
18.7121 211.446 20.2531 212.212 21.6984 213.182 cv
22.6877 213.846 23.7971 213.271 24.3059 212.382 cv
24.4665 212.384 24.6364 212.365 24.8215 212.303 cv
34.8723 208.928 37.9089 194.332 32.6355 185.51 cv
cp
f
70.1286 300.789 mo
64.9284 312.089 54.8366 322.059 42.1765 322.928 cv
35.174 323.409 28.2736 321.266 22.0329 318.152 cv
15.6774 314.981 7.25167 310.303 6.9294 302.19 cv
6.89864 301.403 6.1628 301.103 5.61055 301.293 cv
4.07784 293.416 4.92305 284.664 5.89766 277.263 cv
6.68672 271.271 7.97139 265.356 9.70333 259.579 cv
11.4499 253.751 14.5383 248.12 15.5803 242.111 cv
16.3493 237.679 15.4607 233.571 13.6926 229.489 cv
11.1442 223.606 4.946 216.215 7.28194 209.346 cv
8.32296 206.284 11.3518 203.827 14.4841 205.038 cv
16.2844 205.733 17.4519 207.549 19.113 208.509 cv
22.0241 210.193 25.3357 210.028 27.5437 207.271 cv
30.1135 204.062 30.0031 199.14 30.134 195.248 cv
30.3537 188.722 30.0192 182.019 28.8186 175.592 cv
28.0832 171.655 26.7536 168.546 23.0178 166.847 cv
21.2692 166.052 19.3322 165.935 17.5564 165.23 cv
14.1189 163.865 12.0051 160.851 10.9426 157.31 cv
9.12129 151.242 10.1965 144.169 10.7512 137.959 cv
11.3024 131.783 12.1115 125.633 13.2292 119.537 cv
15.3815 107.799 18.7024 96.1909 23.6408 85.3599 cv
24.8317 82.7485 26.1135 80.1807 27.486 77.665 cv
28.6193 75.5889 30.1428 71.8506 31.9016 70.2769 cv
32.2194 69.7979 32.5373 69.3184 32.8552 68.8394 cv
33.8835 69.1011 34.9108 69.3633 35.9392 69.625 cv
36.593 70.4858 35.6281 74.8892 35.465 75.5752 cv
34.7424 78.6201 33.1179 81.2588 32.1023 84.186 cv
30.9543 87.4956 30.6755 91.3584 32.8117 94.354 cv
35.613 98.2832 39.4157 96.8848 43.4563 96.9736 cv
58.1916 97.2988 58.2087 120.078 58.5153 130.611 cv
58.8894 143.454 56.4274 155.693 46.029 163.783 cv
43.2107 165.976 40.1521 168.178 38.9646 171.766 cv
37.3903 176.523 40.0427 180.359 42.593 184.094 cv
46.0808 189.203 48.7888 194.674 50.4641 200.695 cv
51.216 203.397 51.7399 206.136 52.091 208.922 cv
52.3884 211.279 52.3274 214.021 53.7273 216.065 cv
55.3215 218.391 58.6604 219.527 61.0188 217.689 cv
64.2253 215.19 63.5739 208.522 64.6315 204.856 cv
65.0612 203.367 66.5935 196.506 68.5573 197.194 cv
69.8376 197.642 69.5368 204.654 69.4846 205.719 cv
69.2194 211.122 67.8776 216.403 67.3073 221.772 cv
66.6687 227.785 67.2556 233.344 69.717 238.875 cv
72.6672 245.507 76.2307 251.065 76.7429 258.576 cv
77.6794 272.325 75.8938 288.26 70.1286 300.789 cv
cp
81.8415 260.402 mo
81.6452 254.469 80.3698 249.061 77.8093 243.757 cv
74.4523 236.805 71.5544 231.396 72.1677 223.38 cv
72.6208 217.453 74.2243 211.67 74.5002 205.719 cv
74.6892 201.648 74.6272 194.363 71.0773 191.66 cv
68.0212 189.333 65.0007 191.83 63.3181 194.585 cv
62.0144 196.721 61.1296 199.417 60.3547 201.789 cv
59.9162 203.132 59.1125 210.647 58.2912 211.171 cv
57.2287 211.848 56.1262 203.33 56.0022 202.751 cv
55.3933 199.904 54.571 197.11 53.5515 194.391 cv
52.4582 191.474 51.1604 188.626 49.6193 185.931 cv
48.008 183.113 45.4182 180.541 44.1926 177.553 cv
41.3815 170.699 50.8488 167.115 54.5065 162.833 cv
58.1291 158.592 60.5471 153.356 61.9084 147.914 cv
63.4753 141.651 63.6491 135.086 63.3464 128.66 cv
63.0354 122.052 62.7238 115.127 61.0378 108.714 cv
59.76 103.854 57.4699 99.3037 53.6765 96.0249 cv
51.904 94.4932 49.8322 93.2334 47.5998 92.5557 cv
44.8078 91.708 42.3269 92.7871 39.6696 92.3242 cv
31.9543 90.9805 39.8171 79.5107 40.4919 74.5996 cv
41.03 70.6846 41.1789 64.6152 36.9753 62.6357 cv
32.7839 60.6621 29.8747 64.6753 27.7961 67.8101 cv
24.0051 73.5264 20.8669 79.7358 18.1921 86.0732 cv
13.3845 97.4653 10.1853 109.486 8.12911 121.708 cv
7.12667 127.666 6.39522 133.676 5.88497 139.7 cv
5.32149 146.352 4.47969 153.583 6.79805 160.003 cv
8.33956 164.272 11.2751 167.961 15.424 169.715 cv
17.3098 170.513 20.1071 170.428 21.7614 171.673 cv
25.362 174.386 24.9143 182.208 25.1423 186.221 cv
25.3689 190.206 25.4206 194.276 25.0774 198.255 cv
24.9768 199.417 25.0593 202.962 23.9577 203.78 cv
21.8181 205.37 20.4304 203.1 18.986 202.026 cv
15.3098 199.294 11.3649 198.713 7.45674 201.368 cv
-5.28837 210.027 7.84639 224.692 10.4719 234.601 cv
12.4904 242.219 7.8669 249.452 5.61446 256.506 cv
3.30538 263.739 1.76143 271.208 .895221 278.764 cv
-.523724 291.144 -1.44609 306.523 7.80245 316.063 cv
9.02657 317.325 10.5315 316.568 11.009 315.324 cv
14.8718 319.153 20.0144 321.979 24.6364 323.985 cv
34.8737 328.427 46.3156 329.077 56.2707 323.522 cv
77.4328 311.713 82.5896 283.027 81.8415 260.402 cv
cp
.607843 .254902 .054902 rgb
f
42.0476 10.8101 mo
39.8732 9.42676 37.7956 7.67236 36.1823 5.55713 cv
37.2785 4.84131 38.4904 3.93457 39.528 4.05908 cv
41.01 4.23682 42.9753 6.12793 44.2263 6.96777 cv
45.8982 8.09033 46.6208 8.76758 45.9372 10.8838 cv
45.6657 11.7236 45.3396 12.5244 44.988 13.311 cv
44.196 12.3501 43.1814 11.5313 42.0476 10.8101 cv
cp
46.1472 3.58984 mo
43.8161 2.01611 41.1608 -.325195 38.1657 .0375977 cv
36.4929 .240234 35.1516 1.13135 34.3122 2.42139 cv
34.2185 2.21289 34.112 2.01172 34.028 1.79785 cv
33.718 1.0083 32.363 .998047 32.4397 2.01855 cv
32.6731 5.125 33.1477 7.51318 35.1936 10.0063 cv
37.1706 12.4146 42.9631 14.4912 42.844 17.8706 cv
42.7736 19.8633 45.3835 20.3892 46.3415 18.8447 cv
48.0266 16.1284 50.0915 12.4136 50.2766 9.11035 cv
50.4411 6.18164 48.26 5.0166 46.1472 3.58984 cv
cp
f
44.8073 275.129 mo
44.8884 275.693 44.989 276.253 45.1247 276.808 cv
45.1579 276.944 45.2126 277.062 45.2795 277.163 cv
45.4909 278.41 45.7546 279.643 46.0832 280.836 cv
45.3283 279.018 44.9519 277.092 44.8073 275.129 cv
cp
32.6579 248.316 mo
32.5441 247.91 32.403 247.518 32.2233 247.147 cv
32.1164 246.925 31.9333 246.824 31.738 246.81 cv
31.7385 246.129 31.7331 245.449 31.7326 244.769 cv
31.8415 244.586 31.9172 244.373 31.9392 244.122 cv
32.1657 241.514 32.6623 238.628 32.8918 235.768 cv
32.8933 235.767 32.8947 235.767 32.8962 235.766 cv
32.8195 239.942 32.7522 244.126 32.6579 248.316 cv
cp
59.5915 296.008 mo
59.3732 295.573 59.0358 295.382 58.6853 295.36 cv
57.7912 294.01 56.6696 292.753 55.7668 291.558 cv
54.0861 289.331 52.406 287.105 50.7253 284.879 cv
49.9958 282.53 48.9919 280.223 48.4099 277.851 cv
48.1848 276.933 47.986 276.009 47.8024 275.083 cv
49.0822 269.487 48.3962 262.687 47.6394 256.516 cv
47.7517 257.009 47.8703 257.5 48.0105 257.987 cv
48.1853 258.592 49.1994 258.852 49.4885 258.18 cv
53.695 248.4 45.3483 235.296 40.8864 226.926 cv
40.4333 226.076 39.4992 226.181 38.967 226.705 cv
38.6779 226.357 38.3986 226.006 38.0891 225.669 cv
37.6301 225.17 37.0588 224.917 36.4675 224.847 cv
36.4514 224.678 36.4372 224.507 36.4206 224.338 cv
36.239 222.467 33.8776 222.207 33.3112 223.718 cv
33.2551 223.669 33.2121 223.616 33.1501 223.569 cv
32.9743 223.439 32.6765 223.458 32.4992 223.569 cv
31.1394 224.423 31.2116 226.066 31.1823 227.546 cv
31.069 227.61 30.9694 227.703 30.905 227.845 cv
28.7419 232.654 29.3435 238.958 29.0798 244.122 cv
29.05 244.706 29.3073 245.101 29.6779 245.312 cv
29.7326 246.417 29.7951 247.521 29.844 248.625 cv
29.8659 249.13 30.1984 249.415 30.5774 249.502 cv
30.5393 250.46 30.6135 251.432 30.612 252.407 cv
30.6086 254.115 30.5095 255.818 30.3601 257.519 cv
30.1374 257.623 29.9519 257.812 29.863 258.082 cv
29.1467 260.255 30.0788 262.83 30.0246 265.123 cv
29.9548 268.092 29.5232 271.037 29.614 274.009 cv
29.6403 274.865 30.3547 275.221 30.9929 275.117 cv
30.8796 276.034 30.7614 276.951 30.632 277.864 cv
29.4196 286.425 26.0925 294.327 23.7961 302.594 cv
22.1394 308.561 21.2839 315.001 26.1423 319.63 cv
30.2907 323.583 36.0451 324.264 41.3933 323.148 cv
47.0549 321.968 54.7487 319.076 58.8488 314.692 cv
61.1677 312.212 61.9587 309.242 61.7072 306.249 cv
63.4812 303.265 60.947 298.705 59.5915 296.008 cv
cp
.996078 .760784 .164706 rgb
f
52.7966 47.9395 mo
52.9353 47.0137 52.7849 45.5117 53.1184 44.7026 cv
53.5842 43.5728 53.5227 46.0801 53.5261 46.4663 cv
53.5417 48.3418 53.1511 50.1826 52.5124 51.9292 cv
52.1442 51.0371 52.0275 49.9512 52.0222 48.8022 cv
52.4084 48.6611 52.7326 48.3657 52.7966 47.9395 cv
cp
55.51 41.021 mo
53.7746 39.6191 51.4353 40.1851 50.1193 41.8862 cv
48.7888 43.6055 48.9704 45.6567 49.9206 47.3936 cv
49.2292 50.9253 48.4846 54.4644 52.1345 56.7627 cv
52.9553 57.2793 54.0871 56.9448 54.5671 56.1069 cv
56.6345 52.4985 59.5925 44.3174 55.51 41.021 cv
cp
.607843 .254902 .054902 rgb
f
42.3239 292.214 mo
41.6467 289.156 41.3093 286.037 41.1403 282.899 cv
41.3117 284.212 41.488 285.504 41.635 286.755 cv
41.6892 287.217 42.0754 287.458 42.4397 287.462 cv
42.4245 288.907 42.5651 290.378 42.8147 291.816 cv
42.613 291.902 42.4338 292.036 42.3239 292.214 cv
cp
41.8649 249.662 mo
41.9411 249.977 42.0188 250.292 42.0905 250.609 cv
42.0617 250.664 42.0339 250.721 42.0222 250.786 cv
41.905 251.442 41.7883 252.112 41.6735 252.787 cv
41.757 251.745 41.8176 250.703 41.8649 249.662 cv
cp
52.7805 315.593 mo
52.594 314.94 52.1184 314.407 51.3913 314.468 cv
51.3293 314.474 51.2751 314.49 51.2185 314.503 cv
51.465 313.419 51.5139 312.27 51.4528 311.327 cv
51.3239 309.331 50.7888 307.373 50.0964 305.461 cv
50.0676 304.908 49.9362 304.362 49.7561 303.822 cv
49.3132 301.464 48.8454 299.156 47.258 297.284 cv
47.0881 297.083 46.8161 297.019 46.5549 297.054 cv
46.341 296.634 46.1228 296.216 45.9065 295.797 cv
45.323 293.292 45.0671 290.973 45.2009 288.403 cv
45.3132 286.243 45.5061 284.264 44.7107 282.207 cv
44.5315 281.743 43.7692 281.482 43.5114 282.05 cv
43.322 282.466 43.1682 282.897 43.0324 283.335 cv
43.0324 279.061 43.3073 274.642 42.6799 270.477 cv
42.9709 270.307 43.176 270.021 43.1276 269.617 cv
42.3874 263.483 45.9421 256.936 43.6628 251.031 cv
43.7712 250.86 43.8342 250.652 43.802 250.411 cv
43.4128 247.519 42.9221 244.631 42.1086 241.826 cv
41.9484 241.273 41.7966 240.689 41.6315 240.101 cv
41.5183 239.015 41.3801 237.93 41.1955 236.847 cv
41.571 236.483 41.7385 235.9 41.4177 235.351 cv
41.1115 234.827 40.8059 234.303 40.4997 233.779 cv
39.6091 232.253 37.4836 232.983 37.3762 234.649 cv
37.3029 235.786 37.2507 236.911 37.1921 238.041 cv
37.0446 238.906 36.8957 239.794 36.7624 240.695 cv
36.5803 240.887 36.424 241.11 36.2907 241.356 cv
35.7722 241.011 34.924 241.211 34.9675 242.009 cv
35.2072 246.438 35.217 250.849 34.7873 255.266 cv
34.531 257.899 34.0427 260.529 33.7024 263.164 cv
33.4084 263.313 33.1726 263.582 33.1442 263.999 cv
32.7395 269.963 31.5817 277.024 31.8786 283.501 cv
31.7258 284.638 31.5774 285.775 31.4343 286.913 cv
31.3205 287.026 31.2253 287.168 31.1897 287.38 cv
30.6154 290.786 30.2233 294.188 29.9646 297.632 cv
29.8698 298.896 29.7219 300.167 29.6648 301.425 cv
29.1809 300.454 27.4973 301.054 27.6794 302.298 cv
28.1652 305.611 26.8737 312.471 30.3103 314.528 cv
30.8195 314.833 31.3811 314.432 31.4211 313.891 cv
31.447 313.543 31.427 313.192 31.3908 312.84 cv
32.8977 316.748 35.6897 320.451 39.7219 321.394 cv
41.009 322.156 42.4211 322.689 43.9279 322.776 cv
45.6667 322.876 48.6213 322.294 49.4909 320.493 cv
49.6994 320.403 49.906 320.307 50.1071 320.195 cv
51.613 319.358 53.3171 317.468 52.7805 315.593 cv
cp
.996078 .968627 .482353 rgb
f
27.7902 286.599 mo
28.7898 282.571 29.4445 278.504 29.154 274.486 cv
29.1018 273.768 28.0407 273.313 27.6691 274.084 cv
23.9382 281.813 23.8347 291.218 22.4235 299.57 cv
22.4167 299.611 22.4274 299.646 22.4255 299.685 cv
22.1911 299.615 21.9187 299.657 21.6765 299.852 cv
17.9748 302.837 18.7522 311.24 21.1076 314.804 cv
21.5695 315.502 22.9685 315.329 22.8547 314.331 cv
22.5866 311.979 22.0007 309.719 22.0788 307.331 cv
22.1535 305.029 23.1955 302.768 22.9812 300.49 cv
23.3474 300.612 23.7785 300.484 23.9152 299.981 cv
24.1731 299.028 24.4524 298.065 24.7409 297.096 cv
24.9587 296.998 25.1418 296.809 25.2282 296.504 cv
25.7067 294.818 26.2194 293.143 26.7834 291.483 cv
27.2946 289.979 28.0334 288.501 27.882 286.883 cv
27.8723 286.779 27.8361 286.686 27.7902 286.599 cv
cp
.996078 .760784 .164706 rgb
f
16.1247 277.415 mo
13.9831 282.421 10.7399 289.311 12.2722 294.809 cv
12.469 295.516 13.3674 295.412 13.6057 294.809 cv
14.6926 292.057 14.5446 289.181 15.0051 286.285 cv
15.4626 283.407 16.3742 280.675 17.4528 277.975 cv
17.7556 277.217 16.4484 276.658 16.1247 277.415 cv
cp
.996078 .552941 .133333 rgb
f
26.7014 144.855 mo
26.4206 145.635 25.1901 149.493 24.8078 148.892 cv
24.1643 147.882 24.969 145.035 25.0778 143.903 cv
25.3815 140.75 25.8054 137.492 25.3405 134.345 cv
25.2556 133.767 24.4914 133.931 24.3239 134.345 cv
23.1877 137.158 23.1027 140.311 23.2258 143.313 cv
23.3059 145.278 23.1213 148.197 24.0388 149.973 cv
24.4802 150.827 25.3122 151.271 26.2692 150.873 cv
27.8889 150.2 28.257 146.775 28.6901 145.404 cv
29.0944 144.125 27.1462 143.622 26.7014 144.855 cv
cp
.996078 .760784 .164706 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (fire_2.eps)
%%CreationDate: 3/12/2018 2:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-(Rs<mOE[\"?-Mj/UEBHu^H_VOm<@_@?0.A-cFf%:6odD:jX&H+c10?5mpFkaI.Q+EYFaU"pYFfYo2i-1
%qq:E,[jNhQ^O#I1r8u,hbM24+?i>,VJ,\Nn?f[[A?_jlCSisj%H1h$QP;g+$[BMB5`JacX41Rt$JA8G(I.`C6de(NGRlBnAEc7KI
%UYl#t5<i%LH2RGEIs:e7ZgZb`Ie)XSX-`kP-TLeq(Kk\T`U1-1oG;PSTC&-g5F,[ENjjLao)8/=qTRcAQMgF#:Nj7es0;IG[qPSt
%=(QZ=j0@71s)N6=o])hZs'&:2q`"H/n%p^BF+4#@,G*leKY6Y\P$`RJ^tj89>(4\^6kB:rp;OMeT=h_ri2%!g*!X`uG*UAPfe8G,
%i5o:0G]CI>lh]_Cp`+K8\>p1:WH]dlL2>JC6[npMZeN7oD"lh*T6u(ag.(f4op[V+rI6SSeQk&AaJ\iSPnp"ZpV6V)q<dKtH26fd
%oVJuR*M$QNqYKorI/A5^S**R,hUACos6Yd&5C*4Pm2HYj=3nY%i5d.0rjuNes5KA@rcSZHFS:gRI!bb]pTOQ$hmfLg/f_/rl`MhM
%O.GpOo4],lIR@A"C\qBFL?l;mQbRhEm$hW@IjX!Xqe7Y=7/#fIT7+CFD"5-;s2XlKWmdTks4D,08&'=jqm*uGo3WMe29Gi<orBb8
%kgR_Y&$K;I(r!mPpEK8`AO8M/oo8onr<Ig"\+or,q\D);p$5\"_6]K<n`*-Sf&,#]If'%iq;oq0^\[ra?bH<cX2g9MI/W`=5MkgW
%q<[51:4Kh7Dh#(i1#&;4Ie2/mYQ#gHr5I9s:Y'f>p#Of85C(:D^\H">S#:a"^TFnmb`2YCmF+"t?AfYL^&-%rs0qn.GC^O_rVlJR
%Vt.gtmr?W?DCD:N\pqJ"bCB6c53.#e1%Oo$%CGg#nqYu_YJ-QFXQMb-Nk^#AjQ2TWUXT&fr?/k#,,;a+&guPMq87jQ.AHdCF:7QC
%*L(c>0`C9&O*^BZca"bM^ARi>EHhBEqW@PkD0s>E%o8c]J+h.Q-f=q!g!edVp%RABH2%2;YF^fe?hjSEdel3+$<KD^K)bQ(O0>->
%qsMFJbhVbnOl9qKTAP+f\*r2/5&=1Qq-Uo7btIGr]3etoS:?'&9>0K$hYuF+C#c3d:Qf)aB6q]::Y@OjT!A7EG`FZ]#CK,cjO;`,
%6m:DCn_\Z<(OpiW)Z,lIrqMM1MJiFBZ^5,Pm(W8ofpg`=DSCGe/aUd=(Opo)m4DsG5P'g+QK]o&fB.5AVa#V,MWWo9s)L<bkHCM*
%rCkedT8DhKRmjo1GE@=26BC![^6HZCDO4?bm.OdNIe9h)+"^R9fB*27k&MtSo,[h83*5pB'_$aiAMGicj=f!1lJkBSpS4qcY<UE/
%VO-!/gVC\QS*]u7G5W1<]7ZK78aMpX_0o]cI.`W2fmi`nDj!<+MklD_O&,<bqA/tg.^<:CmLdCpIfK9!kI:Juqp"FS0>G&O#bJG?
%Kl:,4,gZ6i8D1P,^U4iia5?ZQ)M=fpjQ]+,#VBn5\>W'Gs7Q07FhUUk`9VC0YFQY+43;JYqf^fb;k&#\/[j#RF)ii)<0)0/jVP>S
%>\!HWQ()fUUD4BaP"R@"\9oOA;3$'j>ND7CPB+kjHT>>;`.>R`j-5RE*7A.'GuUg'MjBT*Pf"l:&]r!23DT)eLV.A<;'$mP-Vatg
%ppe6ggk:k2a)I,-4t!^6jX<D9Lm)AN]_lb8\gK'.L;ulGUHci)QfHfC8,DM/*-fTdjjma!<IUGX$P%C@:3%?9fLq"eV,QHU73ma1
%fd/YQPK2S_kE[&I:<QLpKDaCUf5`\h<K>9J/^]TOO*LTds5rOdMn*j&l+_W-c+j-Y90`,/pg_@$Inl(rq<pWKrufATIP62RpMDPc
%\hA*"IE!u-K,j(f]^Un#-TMZWi,fQilRHoWaUnP@=,ZEAHJ4>u8!0Er*&nO>,%<hEJdeUmiT"k;3/T7-jOdD&Xt+t>US;#TRP9+5
%>p<X;Ye#XTS]Xh/*9@.oo)I<^2#1)3s,6f)J`&dM7/f<'UF]uu2if&;,bF'nBfsJ/4^NWZAJ)Js,+4P;/tJ)"BC^=X&rJmtVgWZQ
%:]0gE4$&Lb/7#_l:2U[>as)+XG7oH5,,n:klP(+sn0Hh5#Y,ISR6*.GB=571VmN6B';in\4/S3h?]_HDdL1hX,<ZcPhH&maUPPb1
%=e0+TY%<9(AA!MQ?P/9:CsnY*dQp@:MBj1EO4Q<7,@2XmL_O-Q9V"TFS4paI>ubESgYm*2MYOenOA="iGl[loj7RDA4<EUE17c92
%n]7UPlKA"c3$%,-T,X1b?5*ADK1\R#Vqp^;j*5V`a-!.'E.B&fr#>tSKIMdT-2BCn;@4@rmTP8S6?o:cinb%X*HXT?fI"ZG`;&jI
%&SM#H95!T?j@?5n)pE&s:XA8:WDk$N"V6]_J=jMtfhj*F%6I<kF72*9_Ht6<;_N29<]knrF3ghCBm[^]B(ocO#OCGmO:c#)UU.-m
%BjB["FLrNj_p.-Eg.)?41n>%APU"jX?m+MDn4GGQ\DW0l5GCXaBK=J$Z?"%UM"]s"@">&BnBj!bGc>ha0MorPULk6X4GHPlm0u/N
%L7d;"O3CN?&9KUk3][6J*\W>iiH!>)d&0tM7!Klhp^t'u&lC+%%:+sRPD/#38U@0`iR-#TNY<<E)\Y>RWaj0fkSU<"%+Ll+iBS,t
%JrE!<L]g##?p0ToKSfpD`l3W=#E#EV%IL\+*iY`+r*Yf&=nY8[7(FTn[k</9!bWD;;E2j.TH"G5Ugg/GMG2=DB_",.dLV2)A[4tj
%/=.]OI<7ji%O)S<E_B*Y/DV45HG%>H+u49R@6'..?-?`YI!V*]O!9]gL__U$=CV!4\<O[/*AU$FbDP>SEg!>/6+Q,u;KOoR1LuV$
%J.ZfU1B`WWCkc?nO>iH]_W#PeSPcq2,jF@)"f!^d#8nC1&m-,/(C+4a(+on`/dBp4#"k2**!V:qEH3hPjP%h@9X?"#1cedG@?MU!
%@eV]NWgP,p#)Q926qe%,,^V=;@#Q?e73%9u2*]U_W&-T!R2jLGNMB0k(`Eja+@g'Spo>RJlZV3hRt3sEeHjrQ)fXD'^e:R)8)?dr
%mZ4kLEmgQ=Vg5%d1OUcV!C_V$'[[dB9aW1R8`LG6\b^o)!JmRa\Ea<Gf_+^t!;t$`QVUrCI_GWuRaA*S""q%*m8J35\g?@T5"MEU
%R`t\^k[>hs659A%/)_US)0S=\!G`lqa'gK/&^.kDkXk+E-c2?@N('_%:`jC-GUd!tg:aR*W_OcRBVXr[FXbHGC,/[I(95;9e`!J\
%^G8shnuI[e?[1a&[kG;6<*`RHe5TCea._L'C71N3[d^;k;cTa<:=Ymb]JA!nWqcG:?4X;X<"X:b\/m"ZDYeq'HTKsD6Nk3^3Pr`[
%hK,L[5rEuGOmbHUrJ01u^>IHO462D45J')>O?5Yi]S@T$ms*_-PAfJLVZ_;d?)sJ`Y:S\b#-l<MZg;7SJo:,N641-D6'ent=l=l_
%FdX.;1l;S7dBlT?=&N`(dF9uD%]3O.6+<a8GG;fKNK^;^.^]a\2-I#mWTIleFmZN(Ac#o!WBmEDfJ(;l6]A0ukbu1_@`R">0N5%l
%A&4,/<D1R`=[1VNS6_V8L>stJj/gG8dA@.C[q3&`DUNKqrmuIL[iFr)89YPY7q+aX*Tb+->n=JUIF"\%rK'+Tj,E^q*dl!5s2Z3F
%n]sG>*T*\j-@Jc\bi.@Zdr:MYZDTkuCJaXp&gP!1'U7,d<f;3j:<`)n];<qjJ`GtX/4M[XP<KSFd$Z]Bh8&nF9%PMu<k7A0GVD)F
%FJ`'TcmfAW!6aX]_lR!9h8pVI7CA%W5V)?.C74&WM+/p5#I"[7W9]k`3p'\rCc%1+;&cXDeN7C^ke_>:Gmk@6Qr^fuQo()`nZMS3
%qf0AGHahT'T]>Vas/k_amt/;84#@3SGXQj_RG(@-fsNdA_"hnnZIo3,D:,^pA%^_B(6`Jm0,b<Y;l,L9%(jWNB9lQH_/AP(PB^\9
%Cftj#-HT]EGCfT#()/*G!b"$pT7ULbKuOH>!l/&""LmHPU?A32$9bjf+H+s5&/MWVpY#t6)^:9[!*+*>7AMuE(egqoWeD-;<5$^;
%7\A^h9Y1?^:MfU7k\Z/M^unlaX4_Q_4eSqWEc0].5@OrZkBPrF>s?i\b/M7S>4^)c53.ee53P*1^^iKeNXn>J^X=.77_-(?3Ss+6
%0e>9J-JZ,[c06WDhdeJfR=ajOF$,>9!#!PsGk?YUO,#kacqFGh&c;e(g#uXQJt@KT!I+\6"PB\MVZNDZ`l]"V</B!'c4.9td&'nZ
%*Sc#JZoN],KJmI^e)8KkO#V7rip7ec_OLsT.b(G*Vo#!OMo&MHSq&s]()o+L.ln";W3`F=O38Rr2S1=VHECr"@^O,6[!X9s[5$m+
%a!%l46`R/0Vq<TZ;a(!,l7bk42;P(.j.L,\psFogArH>b8">UD3R3-0HH7*sN-K]ZRsU1E>E>P\*leL-LPHji`s8/Z&"Ie$O?5Z$
%h#BEZ]Xdj>;*Jc[cPkoO7ep#-r2`aZCR!-`jg.GPFE]R$1/a74s1/-DO8gMI'T,T3MYOkYE/g+FjDmWD;j"W7(:PEEp;1/hUagb\
%q]S.a67`q70!L.L)ilsomUp-UjlC%ji`1/#WktUiokTH?,Pf"Db>n&6Cp#eu?,(!8IP;[(5+fXHP>C*pai1R*lj"*N=.R_md^Rf[
%ccB/;PTVu4M^[`3]\)f5Q74cgr;#rJa#!IFj1&#R*qW\9IO:;U`'toMZ8,:56?/)$=lYh-es)?0J%6tlTAk<gYYmU3R<UAf=nrl8
%>Y'(<Mf035^PoglZbM<P#Mc"j1[73\4o7<im.Yt_hYREh`5Tn57,#s6a<olC')"IDO;13O.q)b;`>uiu8JZCUMi2<-#jrH_.h2uD
%,CC44lRJi+8=+U_$KtNFYNFbC,*7_EeM3]=@Y(O7!`V[CV.bO-K"%/`/](9lBt%ZLfb@)_Yrl(1(^pOZMrh'UcKY]Y//);G=XB%Y
%<R"B@i:LVlVeU\G2E/$H?>@e[4j!=Z0fN,(;gX76YRFOmW6SPGbqNSFC%^Y"a,T5_5(7TWj=n43'^UY980cMaF'5tB]lQ$@UZT/5
%`s*?oGT8@Vp*4dooQ,*2EM$gN*o[m(\+p7NR]1XWa;s`VIGFAgNph>V-HN#lEs.u4ko1o.B^f7o9UQ2IRd>6/lLn]@8+fYfLe6)@
%#CW<+d_k=7cH_Q'VON\RQq\gmWKU(E.qp&Jl)?_f]07t(\u4hhOW^TJeX@]G=_85557Lm%fC31i3LV<920<_Eo4n^joe<ou!HEd\
%2!j&9g^%:L$SV`"-tin=P"UN1K@IVta@A<oIBbcnhrC)fe#oT2r'Lu-M)O_rpcU">BB=@)V]%7K*.:!837^X6),9tb_u);@Q(..q
%2!:r+h9_p;4FVA\(QNb/Okt(g\RU*X;(`j]r/a"sBm\%NhL3Hc+)og.*<4Z8lif2gVhUP@\*t#OrXTrmag5Mo/N;01s.88#ZMa\Z
%]:ZY4U)iC_reKS.YM`<G8e4^56.\P=a_RLJaRm4M/?Q.>k5?6t,kg"/<]UJN3i%uFUpPi>mQa@<[oXtl$RB!ZObt1Bd*Vt7aW9h:
%7OqS_+#n?H!6kbbTSEP*pLG,O[QW]3B.^8MpaDI=\q;)JjNE>6nXeWckja^]a"nk8+Nn`;af9,o(9rK&e2C=.o*Bbc>/YMHZ4[Id
%86U_#)C2FM\i.6cQnG)_8%nW;.Z[]W\lKib8'THA7sCtnDMD3'hUES=b+i9ieFf",i!P$nSmlteSr-LL9U0a[]gVP+5d`@i8'@gZ
%H(!sX7oi!Y@/7p1l@TgNmk#WaR=<WElG>q4eT=u.*=Y[Q/@bBXW]Sa\V??MTY#I=uei]2)C15BHUWFk::pV&*FHl%2B1G!Emek-H
%_hH"cHan8>eCY9pW7g'R4FZq,oB\HMqiEm'i2lZ5rfQZZd53B`(2\\EiG7Sf<gfbORKm:B\B$^3lf7%>4n\uc&KHNpSHOm:-E27Z
%Qtha%$Hk2j6<*a_KfDq:*Ec+;cGDH>-l_R*_HP++HHKbs8B_1@hK3JP19,-kC?;(dkDn&7LCULkNKX,Jh4((C0crb0^M(O'RS5l]
%n4ZmB!$$VB?k<M6@nhccLPdC%QrE3LOI2?jH>Et:[OHKkZ6\.Yk=&(2MP)Sg9\h;&nlB`&p;k;FOJ<V<C$OZ(*2e!$ElWBqo@DrH
%I`NPu[!ga"q2Xob]MBr8Ym4Eilb\NVYq:R:K$pK-?NA"@.(2>pE31\)&8h3h4%qrDR*O_tddhSl62>k">,@bmQn-%&Z!-WNQ"H!g
%$JK#LBB9hK;$@4V7)P%JMJZM8[_SURF);:9g/MC`VhHOV=7/&7=kkId)C6-$QW;8EUU>C,PoU)*pECCKHed"OJp^'>gDOH<l(J-Y
%1n:k$]Cj<X!Z<u-SN:@W4NXBB1@(F<pQ;sN1Q*1VD^QekOTO[6<]):4]TKkB@_No56Xg3h,ohLG>K%e?GONIB40n>]5(!rpdtuHP
%Du<c[S_uYh+`IuG(;=E,q%"m'g/:K3';S^tl-2LsEY4YM5P=nodI:+',Bl7+`m9Zkk9tP7NH$Rp]O[bo2:CB!S=B%3bVVa*(-O5H
%EACJZBIN*$%'jc6%AQUWeL71q7V8(c%5V\ceL[1aZ=$':DAZhtL<5Z='C:%4?H'u=P*oHf??MIs1^p=(VBn*I#0_Q_nar:E:?ump
%lCg(5S^+!i?ld.-<\^iji9hc#49b+Q>+(k:;C3$V*b7#q,BEq=/1.A`b8Qtq(7%nYR,^RQK<SQ:/tZl80aEHJDN#W+WF>ARQor<c
%.DJ5n:&J>s2'Btu[B;q2XN>`&@;2fX7=H38QF#trDdmf#9D)CK?%D@JV:Ea`(P\]35"Wpp*;<*ao*=.1j&aiZin+0)r-CanHPEh_
%+It]+$E_#O-BV#u)[g=#fBFQtd3hna-<)$"W^DGP'5HRV[+UY*WO>R(1d%-ZGqc;VEpg2ST4R[n[.o(C8@fUXanJncMjXRIPFrpC
%_MDu:8P4h?7nQH.CJ%(!(PsoLLXDsO1"cb3N2_!=BikYs7SrtL+1V<OA`mVcbaL6plgf%07HapC@2oAQ<bk=q\D06%/_2MZmIAc#
%%[h_@EHo[s?ri,2m)P/HoSt0`W0j3Z.Y#Wd<(WlEVplb)o>m@sbB2H$a"=8b;fC:jHVu=;aoMq@BN@eQTqWp"h+8Z6D3g+60#7?,
%]%-/55dEeG^nOsBB"MU%,W`8=Nhf1ppk(=6BnW2O&Aa<'(*Z3MA4>)!9edr-ftb#s0Sf^_dMj5d`.l74SOa.8h.Q=AaGPB6T?h`Z
%O+#'`PD97?ggIic@fc"S<-1_`JBWfOV>+Rh-'>Gd'\sf8[6Q)iBehb\;M2N<R1M&O6!.#U0Q9ap3b,*54jqJFV\p*DM/6S]T8P^l
%>q?r^5\HWLYSc!ek'/jqRT&L&?C5O$[tE=dHun<%bcGl0H0>*5T*qEU2kM+5&>7)fH>)E9]2&g\H@;R]-cS4)s!t.h\pf<hf\j%O
%^A?d\^4RtqGE7em!uWpIX,k$1(b39nTlA=dIdAFEoT#-586)`AZJ#nJDCVfies;&(HUaA,F#CJ^Il.'r)1VS*VF;Ch@gsT*3U3B<
%iT>#$F\K@/SFkSu%9_RjZB63RNjVu_s/^*I)Fki=l%_sT<LQtsA[\^AI/#B9F8j@.E+'E7f`ZWHK1&r4oksQ(LSiXp]3]Nh'C<m&
%6Fq9+7kT"ul_Rsqh<]A6[0HH_*e$5E"J+\p]8j@2*o0!I_*U?F^`D%"&:;*r\+#)7]r`gW]I(-_l<G!A0<e;b\bj<uf@d+nPa4D@
%W/MC.jbkQ$9?^i+`1s$ng.MC52k5+"7;`EF\&c?FrN(t+3<AN]e'EatrU$,*G!?Vsc:M]cHD![5EC34-VYmI71ai8DHSX>Yiif6Y
%+r%J_U<SO*Erq`gmcs*YN4=%+#eoO0_)RergbW"!9+=X/WPR?]i$ffdLF!,=/M6a8@dq&;_0;&omnEsDMVSLX(QsA7o&(P/r7SU8
%LWSN3"p`J,Jp0S51UH&rJDV:#]+Dci-gWaHEt6YR7kEhqfbTrXagMUjkM.mu^7hZ\4_Ho=B1s5h^YEf2"3eeg\6oaaS0&[p7C:'S
%!ubE*hF7P@G4TAT4hU1F?3BV%'<Z`X0mKrU5Th.l(af+d&)?\+<2^O*LD=A@qQLc%W;c)sh+#_=#A5(M:`DfI`Ii(U9tr::0YL5@
%mYsr<Cf<[h&f8<P](dn'EIYkf$(,L>Dm?+6.J\"JH9%g-p:E%Fm"Sp/4`o3b+fkSV8G&IT<'Kd]MEs2+,;O#?MHC7oLNcsEfV.`U
%Q^D`U&oG[OM\TS@ILiLK&u3@L-7e666H?@m!uBZ7F9^m]CW+M6\j#?SO%$mu^BfEao3$b"C*o14CN"+>NB'R&c'9YsY+n$87aDh6
%Q8CWB#HaI4fLBA!`h(c+8[/P_JW39]?LX=@UgRB6EAP.=p'.#`?5%%jh,!(FkP(S:]B9<e.E=bF5UKj$!J"_F9Q-Ct&#=[sZW#>N
%1j(:_jVdgAb\s(0m]-XtLU6lU481u>MR+]&Dn/-6?<Z>N>se)&YE6N[-$nYo*t]IqFmr`u.AaX4i+)2LF3qs24KFg4'.&UP`2I`K
%B!)<%`^Euso+rpS5O(-K4!VZ)UlRbZo/Oucb@)pa\SP2hoj(FfitV1NFN8M5\!h$ac,nLl]['F@k+S2q_Z9$mhb7i(cHO%@lLiB\
%Sm-SZ`_eIc?kb)+-M!]ijD8gfR<#'8*_4C55&I"tRdC*AF?eagRd"eP-;0V^XI&#`M^t)nA2muCJfYrJQ:[[+]Ir[tR3KF;AQgl0
%&iVgS6k:;+-Xeg+\)]N]%2]!Kb'U\rdjt/*Bd,DNV@B7j0g1hl8J?"L6ft\99i9!=GLa?Q<A+I="X"];m>eK5[FE)'$Z4_CC+\!"
%AJi+6!XhW+IBB4Ws1If;`MI4P*Ni.IQ`Gba.LQL?K,*(jSZ^Pj&75GsQpop7[W9$2X)(Xu),jZM(#g['+*B\W?n$*^/^W5E^eeo<
%l#XF8r&c_`,5p$(aeMtE.(2,MB,MEXAPZ^?Q&u/i#"RNsUph=h4lhWKF-M$4qNbW35in#1Qh:8^f_o$7WKL-HGduZHmE^rcb@1'a
%[]IE"GBigb7VKhFTdpP[eI+t/QseQT?^q>OdYk)91sY"K/>ZdEe8SMm0Wa'*)N(b)3rHD?^@u.BHK2dn7Nc(B]R!Ys-3lRliKHRF
%9dW`+hB&cRHXp7Om&CH-:JFJZG@_AYbSRV@D0lr_]s>4#X^6k7OCuVs6S:<YUV]0F`t1jAk@rs22"/Kpd?;Oq]L2C%5e/TG*?T9f
%mePp3.k-CVX1$j\Pq+kXLa'p2$?tmg/Kj]rmL%^qD>^":^Pfg]kd40S`g]E_jaIF>6P4Mrb>!r>RP-X.+*@>!>'p(>Z'Snbc/+eL
%.!H$[1=jF^`a`3NV%%kDAqH+2=XLe9VT_unph=m:WEEJMX`9tb!$kKT&4!*pS>*Tc:q:L9&\&:q]N!.6e[f![$eF?.(IJ4OO0J4M
%.6;>D@C%K:AoB_4O(X#poDRq)\E1tIT=RZ7js\0YDWoHV5NnC(I9W4e".[*!c+7%Phf?^dk\5bF5f/h/q4qfBRJk`O[_$Wtj^VCf
%-6oj]UrfCH-3_uOY7?athc?"'((*8Z'piHcF_<0_F7ABQp8`75&8;V!Xb!9.PU'-`R64\F3m9\59ubLoriA3-*TtZQ:`k,3<[Yk2
%("ODgk)BYT]?O()0G.Pqdo'9#R\aaL;6*d*;Xpr[K]r+K?*[MqRUiMCKTVsPSr1N+lFh'5d"A^^K!3:JWGOGhO&L#DZ+@2qpa-c7
%F`[UXNhnSckig+3-L!3V8YGL2fqN@Xe%Q-S)m`ei@bl[BnP>e=LJ?]F2HXUeFWH6)gJ@(M4V3G&4U2'P[q+\I0F%c.dd[6^h?EDq
%NF)J#,?-XV$lsPpm!ncY2HYECS_MsohnH?.<MLNb34XOnnXms"FSBYj&?Vb:D]GE6iMtQ`l8I4q?WmP5S_!51IVEUAd-$=r/`*KR
%!?AVkRi@hM.G#9$VK@6eq:bUJSB5tfR*n]<Q!*CJS5NUO.TonLe-M0F/<HnG=,P(ATlCOO)'K6$'\coimOXd,,Y%LY=ZT=:%gG6V
%24e"1Gs//hP>uceR_&nED?7Y%+]!CS-eS*4hXcmZq&d<9j]qUj>:"d[Y*UptL1nV'Yj:D`kG;k]O5BPm.siQ.i#LmFDQ/%,bg6VL
%A?2s)$7M98I&nlh!T6XGpdEQ'Z=#`^D:7npnc3C^%^Vd$*Ztn9';&5JR)\g5'(O(S_FAJc_g)sZEL]O>*m8gc!=,_O3m[8?9W(bD
%bjp$aa2j,RFjoR"j#c^M4-/kn`q(V53/`KrN9[mii0NT%I@1o7^9B.K+_:!(UHXb93qDmpc_E_nJif%.o%S7(R&/`TT^jW?ZRe(&
%Os18X'8MQ0bS%2'`0M)o[c.T6'H$si03aa`]jKOR@PTLp,6-j'?J9VI/PB*Y*(#1;%)]t-(kY03$blT:?2)`ArT21r*:LE1qW%"Z
%hKN87RCKC:C$'jI@4_I/@W@-Ph/V!Q?%Zq9niW=]+1cNC_._UBAT;`HZgCH<#"ZKNmsLQjY(#a)'I\2HUf`2*ePJ?_$0t&<g$ZM@
%ZZce@\N$(9e]@cnXY9@lf!i8BkW@*LoAf5dfRKo'`pbi5c^sTKjFktU;fgCa0Ei^cR9aCi-lM)0b,RM/pssXnhemkWoaTMs]GN7j
%Rc&mBIgo$-#o[%8g9ba&i#C@`g\c6LpH+qNNR[bE+$[&W4D-ggIF%^`\*rU.[G>+_kN``u"r=&c=K<k<W7-8N+\M[/6^=B/7B]r)
%/:Yl\Vu]UE3ZdI!ma<aQ<gT)0WiWjg-L9X&)5cbhCn&f!dn'W4lW6%4DX#7M3c-%<)/e/+EIt-g!uZ6X$(eGe0?;Js&kNa(@?%,V
%B\Eeo]PGj]m>g"U-CBd;R\5L[VsXk5]E`K4:QXV9!tc49YgRa@HYCa;@F+gQY:5J^U<rXdS#JQ[Hb`ng./O?l^'ETl.X11T!)C+M
%PFP!jZFfZ`T`+RA03VAo"c/?=>+Ed[[Tr&pIf#YoI[9$npsE'B1kUr%fQHuuLeJb6f,<FO-#/q>5""(G<W$)<J'tXUMpV/ub%<["
%HOaD$jDBL;2N[!R?/\"E-8)3J9j2$?!LtHFKrh])jq;3Q5A6VU8Al5-\6/:*Xa0+CnSXb>pV+0Sj?dCop<:3/n?JJg5?<<gJC+g=
%K&o;U%=MKEOM9IcT"sVQqchghesH)brm(jHhY6'u5aU:F%3%sNCo(A(GWaH"(INB_G<W\C=WTm,Ao$=j*.Oj*57G'-e)K]=VLaGb
%fZj',>thMUBk''BM0kO8;Fo,!A`LM"2l*rZ"/\Iu[+DDC3M1rW*%O:"`e6X.1409S56I/=!%:(T`+PM5//+Xeib^I@mgDtkgUlX8
%GH!'0P:bWULO;ho*rR$A8F'pX72$9n+D:W!$[^"UR7fM$"]N:q0FC>*6&gJU8RR1aRJm_3qf%\-S$)KOQWop6qcnFj:[^Y's,\Vc
%c-6'HbPRK5Z7BrkY04CR<@oXSTl9IqA(lXOgb"Zb"F#4=$26[ar9V\q5OJ0jT03&[B%lD)T/!Rr(t`I0ln\k>)$BbpJUPPR5%@um
%0sK!<m:X)lZV5b4M9dsI)$Bb8(mq[Xp$5[4J,B)qb;[aRIe2$\cE@$AS&^S=r@NL8oQS&uo&e3al^-VMn%\nbaWFm'Jcjp1\oU&@
%(%HWod`GQF06%e,]4rNC]9(iKNo3LJ)dho\rpX"epNujoPpc#!n2L=?s!*$nhpV@&l%\#tG5qERQJL/RH.DAn,tNMd^[pjsRdW@X
%pWH;&GdCapDK8PEp*MH_J,aopqT\Q`dl5TZ]mTDIDnDY+p*B[NJ+`+&m`3qoYR^Npo_#OLY?l^dJ+E4bdZ%W4rn6ntYC:]moZ^0T
%s+Dp%:]0,Fq#C'$hW:\CrgUVHH"mh@Yq.Igm"Ol&(k#FQ=\q0EfAren4OJLl].o%d'pb#,/qg9iCUIIUjU.6VdL<q3kFG;VWs,?*
%cF5<d6YUL@/i5`1M.+/GW`Lh$;5pi]"qbF7VK1iG8W-h&p>7L0HA0M=SW!<D[#fG9>`*.&aK=Rt1(S,_'?cY7AM5Y*8j:-c9>7DL
%2e`S"ie)Kh<:n"l:\+32?AX^344+U@EKOV;E#$?th>O"EV5o.2ebiDYmpq3.)T&Y.j/75&)d05L>m1f"5ODOKlJ/NXbe_;g=4)N0
%RcQUT/dkb=g=]Jr=^o.k?R=)k],IlY7it4bZ5>>8i5&&.[]:sj"qA</gq0fMf++pWL2`T/oHM&9gH-401rsIQKeMBG%Jk5<S0m,E
%n!S0a]TKjeaE0i(D6CK([@=jO:"!W,IY+(;n$UZd&^#@Y+<;R+Ugk`@Hg)c.P$RlI3Vt;GMFTqIn;Kfm;-":rBJuVQglg`,\77m3
%YB7%.nC8^h"J;rT&sa:dYNN!r"*usZBQj0/49OF+0fPpTU2jHXKe'[`g(O@o1gZ"CDq_:Zb"+)q;RXX`TVX2_qj;fuQT>^=R3lT"
%nrC=Yg6Ll-`u"H#s%Xlu_?,"ll_IPW3j;,3/4k5>8hmnP51"Vhb"!65d=cdt7lFL_f[=#jEN#PaM3T;!`LjVG:Sqtsp(pm2G2cS/
%M9hJ2m9\QslgkfY\-lhO-EPuS3S[$bKRD1!L=etJXQ9?'UC:^'>D%A4;5Tl(_u,d<GSoSAGJ%ig,*d>:N,*L)?Y)O<b+-Na>'[#H
%q+mDd$1H)e\#Z<CUs!=Q2_Pf"J'72Aq:AToEEh?*=P5s^eLqR:!2pE";#r'[/#@?PI#8`*U4"Sp^gX%l?]"T06,\t-AP3)s&6_s_
%N@gkJS+UbR=$\AN)%9b"""FMreKR&q3U([0\e?fK839Zm;b'gO9R/KC]q7\Dn-OXa8m90!6!q^:U9Akn=\8IT%emf9o%Jd"jA[.U
%jWP76&j&Y^FD0JQ/^)Y)'r*(G.>'2Z<,<W'[T(mJoJEFH&ZH@`MqZ\@(%jqj3Cg!lZ,uI^,0NGU[CZQY&Y5TX1b[2&97=/2j[I"9
%3%ao_cDk]#TL`!QP^hp9i3R)jBRKVK$2cPU'41MZa:d2lDSVPf.U0Xr*,g.tI#")YE[$6_Oa`XPV3X8KA//ia@S2qnfqkp<6Id6\
%R#2q!#ISSldk?nXAN@O[;hL<`WE^UM.3a!?A7LDH#[q`>:)RNr9CrEjYg?9Z-1"]Fdh5bRH"iBa6Sug)F=U&g`ai!P:sRpS;%)([
%S1#m)FD8U6`#.Ku%,jtnc.653bnYgX'3q?FkT^-M.P8b$HRP1.[)huaWKuubHWm#'7A8Y"!Gb*BCLi`?FPRP%p$h1(hIa7?@+Tp%
%,@4W$5^HY9B6ctd3[gd&ZsP:\/pAl;N)KHW0oT]+'T>DrQ.[3^T[H78g6FG3C0CWjgu7-VA:cBJM[ioi.nbd+F.YHpVC2EJF4*on
%(U;]Uo-&ltoQ`3#8l`5T#=mVr6\K1BYsjCGUk)me,^G^KS4F&Xac!S<a:];56:<"hK.L5b.'_0>1>0XLG0D[R08YbJV*XsS6#u%N
%"\+FeKs9(#G@<^%@=$Qr<F-^u'u;d])Q![cQb8#7X%<\"f5?\CLLlEaU:blnC_C`RLLk1N$I%4Ho!$+L^FWZX6qe9fj[8V`IbG:&
%.1aV7R2AFj_@%ENpf'Hn=4*AK-?&?WFbQV+ij(*qd+5YR/Q\T&O_/lckIn$6>gfGp/Br2%;o;@6;NWUdjV0H(+=OO=b3C1"U3&Z?
%0OSMP]+F<C2jFKO%#N'P"S)a6*>.&G.n.KlYKQ<PY64r145A@?0!1Z@k]EA](ssZ#6BO$NVhY`B3QAA)F<rK_H1?a9Mh@P;(^R?]
%jmtm@_u9qQG[_HYb7EE*aY5KsX:lG:UX.Wq1E8k[/;mg`s6V_MSB&*[9k7HD;7dIi9iff'cha?-=K:RS)11TdN^AH:Qg\9l>Z1."
%qbekVnS3jFLWL1#'DPn0=dG4;X1O5?0$fV&Qat#">SE\9c!It:BN_GB#=DaN;sh<)1k(4@\I46Vg7o,[![%k7m\o^b%C,b!lSU6W
%9gmR!C,W"Afn`'u%^h(Y&3Zm17gq1JA6Ot@;<jnI1#=Z^:%VH(+tC1JL/q>R0o&02*#iQFWZd@5.lFcXjMkm;CK/\1/93-jU/<E'
%LmTHqlY8CJZ5c@L($KD><32pX=++BL9C`@&TtNW2>'4sVYDZs<o2(0Dc'dqJ*;m,:EC"[e.NG#s]VI%#/CdutQsScDW?<NJ[nKP[
%9N1SoS<n;l]-EltfMYXS]qj(\)cV+t"3c[NBoAoh[[:Gq93?RcH"9VHU<U[!XG\d%E%=dn8U;<T/kP5YkZte/[MCHB$oQ6KT&tF,
%D^SE_Ju7]&Z`A<K;J$lHNp!,cI`W=A&nqp+#n7&MEocL^70lr'Y5"+3XL=fn2mk'"j=!Z&mr1*Ncf&)oPjLk@FRjNVZ)iZ96%VJR
%`dDGXXV:N$4AQ[%;"GfrW\)%qnVZh;Sa1<fnICPm0,H;:G>qu8cT*llImGWXg4`?e1T746iL%O-"J/*[#.Eu+YFcX1ks#%)a$7Pg
%Xn(]NPMJHQn`KMNQf%.Y]\d'\IJWo#hn=@-"=KfD(Q5"&&E6.]8NKYu`M<J9KNPiP,ZKFCEW.c3"QM#P,F#*b96+%!ju2QgnYF*C
%;pe-4CbYDfA5NQ:clBiOHJ24VG-**NN]Ist%b4q*3X:"!-AIo_NOi*U`B`T/_iAuqQ'H#jodd[Wn=5q^=M[=AMmdH:o@%pJJ,>R.
%HFF?^`0EAbj^!#OJgLk>nlE27e[g[t8/R"04f")Qr/DM@m8',]%Mf*s'_HEgmc\C8I9[^lNWdVa(K4K)WoHJZQS:dHL^$SZE2e\E
%>=%%5/n"B=Gmq)-1(4R]r$?u.Ud5u.=:k^3.[7.BGAX'[iBUgukYA3pclHS)a(9hn"ujr3%D%kJoEouVELoiHl)r63O_uro2q_u&
%<RaGBIR_.7LNd_ed6.-PC]G.bJ;Bs(+G:j9+e.FZM%S.Ne##'V$EQJoGU]3kpjnf.bH$o+Y?0h4)a@"[JR2;[eBHH=m1"4/lfC"0
%2$;Tr^+1)-9*R#,1TF%ZS\-3r76ESBp3P$@nX3i<WP/uI(QX*S(Wm*VaZ=uQ(m_'u:p482B^ZCoq4XjL"iB=`L(>,aGr]3$Ym/)L
%2?GI'%gTK'Tlu&\P?>$:lYrsF5Y)`-FB=VhF:mc%((h?#g!tZd]b/m:YZRR;UBAje7SmV'O;9[K1--GE*IMuNK*(d,ao\3NTSF<Q
%V.As0,61RV?Fp");+qk?RO@bMosJm8VFfBI$Ybqt=al17[AJ*W&4SCGPM0SJ?5Cn`7og\T51,p20u8iGD(jHl!X_#ra<[%K(-&a3
%5Q9#2SUbu;\ln02YnLj9<.N+41K,'73$TJ:+EUTg1G"@>/^;`@$/a_#!f7fS`SQmQ;I0kY#q^uL)A74-K%e$s7'F`mdGbM;C!_G\
%&Uith#C)]cA8o@AY7Sb:.'><pdK)+k3&@ND@$>h1IQ()(!88%0#-5R8@(2&OkIP*80'7i>TkkIi$%:U-,hPB3=;H*)3G<+^R,-VN
%eL1fnpWu`iRq6\(g_<oaE`b4O'nl;`E^mC60V>%Oc%p).$tND^/;/RB5\k3jCC$\m2sI5OjCoCA:R`9t]Pb2oCU3]o7dC1;'Akt%
%MA!lZ_dE2$`H?,TVK>7N(OZL,*t?0\f]&P/Uno\:AP3BPO=2h7`B<+hoGE2h:k>#`VP#mXU>T#ulXCq>AW,Xd/a+_4).qmETCe@d
%X=bM)LZ/HR.^MT.<]VagZD(ES()h'GA)YZj$9V`p]sQ1/8<aU(b%3=1Ck_U3:Cp`87U=LWJR6!k=OI)@0EacYF/h7YJ(c)1WJ?bp
%?p3OJJDh?B)?t^fr?`Teiu#LDK^mgq/od6%GnLjkhQDJ\D$?[AS?T$5cj:uSY2agr95D221e2"Kcu[iP!A+J;,'oIg]dkbDW"UO+
%Vs\jX-n.-ESm[\>E"[YYQkjfj"J"M;*+0Qk7S!k#-#^T-)!W(^;6UBLj'GC'p3+QIk5f^3n@`K9rW,,V<3?)Q.tB!'>)d^;d+_ZI
%\=<'BU4;)k-a#46NYT!IHmi1:8[YNE8lC+6":)/s9\r<Q#j*o%+utTgDe?M8,>Ic6jAph1=cTi\(E.>Q64RD;)QJp-f+Z`#PnA=@
%Q61a8d4h:n$*ZTjXPTIF2_)%l_Zr`"[WG\&D-R`UnbRbn<\DfP9A_+!d2DX+Zn]pVD+V)i`+H6AYH>Xg*"a:Bn()j-N0)YMp/&[[
%Laa_'+,[Np+A(^lCOEbn"YqBU9HF"0GVQnnl0&aR05X0L$_>D,?q&j)F>F#l,&qJ4?H&Fr(90i*i9aufOF^9a'Pg_dG+m,,7K:M>
%nqs@mUC6WY<98ss:fGt+!i`W[oA.1)aFKWG5QDED$LCkIgkec.@+eX]BA02$*J)-1onUSW!5d0!_tjg06d0+e&"#u[*)X^]qQZ>d
%"N1krjO2R<dhH5c_#r@YJ.c-?mq!,d<fK+*'gYL3>S))e"CW%MaKW`/eR_VAdq6!hYRg18q-coq`.Ci7KO%P<QeLK576NQ;0U)Qr
%US<C]V1;'&#PAb^;`qrRY^d7:R/uW;/Q@S$nf>r&?J7H5J19^#EaU".(6nGZKQ.#,RP97d:1qC2q+M=/$k`I!#Xq":V9Cek##ug(
%lD6jT?:9[/L@@TjEA\>$bqjYpW]p&t#i8os'WPR(*1VedO:f39('#+(A;)8DPm0R+`<UVsYVGqh3@i;F(8VOqMe+F`![G#e%:\sg
%l_&Z:lA-Fl,'(m>"NCF_RFgP2If0=UU'$T]$qB;5/<HV@:!Bk;!,p@^"3aW9kf(O#E5C0uFP!=b,+QITH*g4QYRPP\O_'Z'5u!+_
%^Y5asndo%2i;aW<3WL9*hi*;dao,CCTJehJdGgR%/PG+C**B+-5tI>u-C"BP^'mA*)T3L-$Y9X%A4p:Q3-@S,OsWd2W<?]"b#sO?
%b@;Gi.Y;XWX+Vd!hHXSCY/^@%iSl$79@#rk9ej3rfEO>JDhYhK%=YL!$DW@G*dM=ZMG/,g`ag2ol2FTJOKYc-$lD:O7"$dp`OJ.q
%PI*^XScd80oX"s'4Vf/r"eupeU?3A99E>!DL^;596gsu.SPk9L<.u#labgoaj?^+AUXF+eXZ*K]'(e.?-M.VWG)_S<IXpYT3<8P$
%]Ybu0lIu,&8FUs_:_'fC;uT3EYJmFJe-+duM's[g=##n/Ml6gLeCo5Jc&g`@8m"I-JSY@q-L7[&7BoJt`h4d5"9/-*\AKM"%-I+D
%.UDAfJeuEFYe:a''Y3T)B<VQgBY;BVDuK=aqDK2T"7EUOOl@R:PF7ZB/@pmE,?i-)`b\."UKPH#c8m]!PS-;@%TtWEYY'\bkb_(-
%ecp$Q@%KWSC[MYu+-A^oBZ3B&M:#$2$_/C:+KI=8@CT*n^2&B*.V"Po'DS&1:.b!o@6B69I;Q2R,:ok;O>-hd0O@DjA<Rd<3dPLJ
%Y+Fps'#]c$N0n)97gqiq0j@3],,@\5&7*1<,Q?+&ItOFa=1;kWa2fT"Z7^I#="run(X9BLLs[.54gB'+$WD3RhNaH/nh_O!1>'R^
%0iJG$OL38HTktR;,lP*c]nH.,Ug%7S1F!;p*akC/"/GAV*F(Jh3af3]QR%tqHCj7-dIoMAM">;=UK*7Iq&o2G(tV'WMWU1QAt0>H
%/,Y4^LVU'fh[%KN<#sU$RC7aLf3IfokWTtl41>29JqF@PQZaB9@#2?_8.G..0PG6J$iIs&/`S*$Or"/0;%)F4N5Zi(]E[sD),4nt
%(U4H`s2BKqZnV!h[3a7N7<VATeOJn`Y3EosW3FKfc%2ho9-g/<gnNpeI+h\aLPJ^UdN'GoPtQ_HXYYsCQ7TY(_!@?CMH^pqO9Haa
%oJ-L'N8c&Y,g(WaoIJ`j^e=!&P44l5C_:4^&R^]T5s-#Z637oeC6i>g&2pU*JRKHC@a(-^#MU*)Wb"0GbTVQk!Y8!pN:=nTUD<3g
%B?2R\/N$$FjW8)$o)]"3M)&Q37\8gg1JA3OgLJB6B$*^3a>4q'nLblWRiPj2bep*QNlYtOqkjUXK=&]6+7BS5WG!JJd[^].HC]j"
%M"MX3Y:$ZiUSsN5I@O"!(eB9[Ja>Gh-Y,Q`DOnY!5h@0'$I3<Q`)KZ1T^`dnS(JF<BT<gh9*gW*D2'[_g82&V$oL`h5Vj;[8SWo@
%m@]K,YrE=4%K$OBJ4tH$r%:C?O.$Wti8$Z$&G4"TNbBcnL+`faBN36oHc2h.c-$Z`=hErf.lB)6C0?#1Q>H(N+09rLE$[(a>O#$_
%d82L_*$S'1WL$R@\0in?LQ[OH3+um[@$G4\&NE'mO9*K*T<,#U(co/7Y>]M71,dBMlEC=mG1ucG5i;kWLMHuq6fr?!%SkU)SB/X"
%WhuHQ5ERTYd$-g5LVjS?7q;VE0F0In!IUi#rrGU9_?#b;]Y\J8gXGT?ctKT_&1ZkMN&\O-l#LEg=g4j_itm@mn8F"E&o=!&W(1sD
%,msoAm<YR?UiSlDOBMg48:=;cfPocrJf#CE1)rb&/"j+kBZ#.Qf`gGrR<?SEFWErG=-W1dNOEJoj.tD%2)UE`opd%Q(7D$U'WFaD
%+H\G0<!S<lR+Xg-!XbJ&/1t5uIqX:d/2@4h9Ksh8#R^hg$?9Ntd,Z=NSNXiG[:E_@)#;F4=!f0t6m!j'>]4HK'<N%`-9j2NLlbca
%g*3gG$:6SGU'@$"@bo,`3oKY4(Fj_V*aq@TQc2(G$m`\H]QDS%#j3M26bnn+!%+474mfL&Zo45!YM^mb%p5C8/Q7`Hc(i+edX=Ol
%=51"N1W^$L1#NEXQ7Spo3=oqm)O[fW4RKS/G@L/1(Eu9l_b($$QQ(`?(IVaK`Vlgn/?1WnbaZRk=J:C1+//9d>FP)Kr=PV*5Eof3
%%`1SIf!0^Qeq_]/a?d^__]fd$;BS]3"@HOi0L(FE)(buWd*bB]Z)C6:]7ER0.glV^c.OnKV&Bf9:lg$aA1PGiMFr6V%EP1h"B:eg
%OqfNDaPTBh+ECA-)eL9l3g(i',`5Wa^D')p0I]U(`)L==WDkVnD`)qV*E'($=g4%EP4_4#UTm8i[q4nH^?B!U?3Er`mtB3l#[4(!
%7`#eBXrmMp/PN"&7=jtI,([,WYY7=-'<R..;9f4)"'\a_#Cn/>%P7it$a;o@f0C94]p$9]hj"pCo'Cr0oG_(djL`B/As`nsAOkZ8
%>o5"60L49;Ren7;:cZsATn;>te:e$-NFk.>;gnue;f!!u0Jk%0q%cUH@nndk8JKg?K0lUeP"8-D>N!D.9lL2sXRPjj)DVGT3J.$,
%Yr#+>32"7YNj(h7?dC-+da\O_*cg0rdgR1+a<TXqdugLEG>+EM_-#V%\VZ.%j#&1uM&"+$qQc$iN_DbDk^m,.$PNF_Z*1*mC('#2
%91L)7hI2C/^86dg]Zah&A=-rBpR;R6rF?&+Tq'K($%r?4+>=R'T?tF#DA0Snl4GqCGaipZC'%X9=pEsq,Ckf+O'9n=QbjA;e>C``
%O/M9":?tRdY\-]:9]+W8p\6AKH(a^>J56HlAMn"\ZCbMMGVs!_r3:q92qiH%&#*c^$4:E?q@Qf6Y*,ee&H_i#2kX4YZR%4bb]#a[
%f-?`S\rEiKB%5sFW%nsM!2'fX1!iDnFQsV.afs_6*>M(`"2."HJXLhiE5HT`l5gi^"9HVqC&KA]0<b`!"jQPpObi8[YEoHM5Bm"^
%Km7/#p_*1F"%gjG)X9Y8%tsF@mn<UaZ+LmkbdB*fVGh,,"$em3aO>/LEsluc6:`!JHdUA@9mrh5dP,\qPgq['7E*_nH"jH,rOZZ;
%9.Mp3Ar/#=(1NgS:p0t?`'UO#@_i[@YmQr`>H[GN0E(O6qDK2T"7C>uNO25X&Ng](QcVe;@lY^8":#;874W<jLT5ECMgq-(9nI)X
%0ig.PZD!$"]JP7'&r@4@Kgs$Pi'^Ua_*I1(L-1Z)7dLibm-lDd(/REG(j9Hl/PpK6=Ei6%(%HE!q;sb?9l9W\5nNb0$3NfR1MJFB
%H=qrBUT%qbHsB:/J7r]i!9qm_<=7,QH$iEB`%u(2+PR2HMJ#b:+j.rX#?hn(&2WuLR6XK%CgJ3flTJ/bP1m3TO\(E-9+s(hj=,.K
%(73$ALIr84!jmZ3LM>n$ZRubh6tqu?$;E8DV'f;CBMHL1JOQ8$k+Ut9VI:O*UegVSL"VNr,>c8&6aH0IrUj:YL1ZOrn7?D]!,-Z&
%hMD*6"KOA%`uE-$E'HIbp/95Oj8`mX=>)-l>#7Ja">Fql2Y`r.fg(Xi=XnC;feS_mQjLF`>lrE^^ap;g^5`Ea&B?onnOs-j/7GD*
%NmCd`kW?/eNa`A3!jnUsR4ZWeZ:hODBRR5f#[0X>6].YT!k9,Vm-mRDXiksh]H%'*@S3[a#[g&;HkaF!G-RR*Cb^(rFso;VkkN4;
%JQnduq$C_:l`cHWV>3b$3I!>NREAYOOJ6EZ%`b4tDl.1/+IegK&44\3"V;hdD4[YE%.G>[T\!4hkn.kd1ZcTIbY4'$kQ_pS_oU"'
%"'G%IE"/#-d4PVWlAUFQ^u&CA,uUgk49a!J5Wsa_RMf-]o6V6)2\RWo)rfMePVp(Y&FDr&@G!(K9^8tG)-W(K7BqqOU)n6[TH[<c
%R%_P9oMA"o<U4oin5=#L'3SUrPckM-+4&lW+Pp1-CpIWC_N*2bAoiQd)3J\F<#EqhDB)iIY3rW]3SL=$F`X;(e3_*eZls1,!o?7k
%ai=7I[LOAd=!F/Qe5%4q'Hb-C%5VmRf1r@<OpR#qSu[P,m'U!fg63s*!%c?\MIrr_L#&e2ZJmHOIM$!e9H)7h0L:NVcW5.<dN-D?
%J\Z=Z_,&7#,&<R5m0;>a.7[<5MQ8_O[p!c6Ej$BfVCl&h-Z:?3*uRt0MF[Y.+AQGq1+3BMLdW-an;nI,BKG":L"",8)sR3<kFg#G
%aM_+SET/6oW2Wmlm[81=[(\YS=\d/6C+qM;N#.oin.tYm$"hST(^ua+9CW=1l=+!I>tD5Qrt":,GgC&7``n:c7g<$,4qLX.$+\$P
%,pI$%V%(uB2&j[sAqkY4^]5m5CKa+"6W_&21<]hSTZGb;9738:i+oT*^u`AHe$SCoW-MMHC'Z''$9)M#0BdYa.JD-L@BfrD]?nuM
%d(JFMWV?Iiq7m89M%H`cM_,eq>';>_)6LSq*=umR7V"g-6Vcs1a"K\68/l^5G">:qidk8EaVKeD#ecWE6%,rPfQbk65@]Da].iF,
%LOLFh1;6*(:(q+Xr;>\3RpeN449]XXdQ*J%'*RO,THROZq9`$,#R'3#Oa+7;k'qp7%`RgO7]li6(0Q_<#\#PT@SpYuYZe,M1pA4T
%JM94(_Hso'HiRN+pmcO'$>JHcXJCpf)VR$?!$lM9UL;*QghM`"j]k^iT-dP?>&"/7%=p5`L8FPq8*O91m+87OC.pEN%9rnk7\,4B
%5I6p:U-RuDQC5N.TLp$,A6CSu>gU>i,07R,`]6gV?;?Pgr!3rs!ibO/J@:8mnXQ?6i**/HV$'1GY`7mf=ktIQ;!N:8*0uQFNfP9S
%\o^Z.[&+W;9@a;@?]`$9:naj4W5Br1hFqL27NUAiW7<Y-5[:W>`f0V<,]tkfSaZuN;R9@\Z:5@_TNoY(Yp.1en.c#(3C$6Cggsca
%MM5W8AJl1bdsJV$+F>2,*C:m[ntL)B,g=/-+DM/nJJjo4e57D(&jQOR*j1anXDCWtAE5D-:]U#\>)E"iA=-Q11TK:sZhbLE+ChK8
%PNSU(>1%FAX>.poZRi.djeEZ7AdgtH`kFo2->3E*cC-C\5K#1VJ:_n![M+R%FsuASU5([;Ye[TREnF;BBLj#coXiKQ"IP9"]>1#B
%Y"Qo55uWM`9%atBr'kb&Y^dlM'QEIqennA`dQh4i&>Q[14A9m@)L27T_u?`Xn8r"S)6UC\6I/,:U#V+JT2s?R8e9q?^2Ph.g.8Tr
%McBdYVNsXhe1Qc1YDAlb\rWqWf'!4aZN1&Qb+Xc&_2(N)HPl;07^EpDdK$t;jVa6bk68@*0F%$?+:Gu#XYFF`*I6Yb9JZ<BLn#9`
%GSj#l$^DY&XOg^G(6DB$Rh_:l>1BXmKGT'GW_Gh180gW3"V$L+=gQg'Umn-b&M8B5dh'OMJ:8^iY8Q:m#]:Pk7#RpDK+;:KcXFD2
%<d\Gs8e;$p$VNj=AR41Z"Ps<>'L_%NRbg8?$0C8jg<kfq`tuEbeKMt47iWAWJj;0Tr1]TMLgVL!'k7(M8%\L)N$"FoFEolL&F2_^
%+$A5XZQ!n^0Oj'-(oj%<nFAH,%;Udn4o-$+Fc0EN^tAYUmPRG*+Zs"eE2lu07Qb4j]DJFs^/NpD1qiqFm_.9WQDS#:pXQI=4F?nS
%iRPDeqs)_(aP-:Xf<;pgeo#g0P2G)EHi)mKmFP^e6dD=\G!GuJmLT=2J%\,7oU]'-W*-$mM+'T*(YTek1FD7EYhZoYD)!s*PTui#
%`*V`)(m#Ic_^ND??q?46@BPoeBO]g%$,m1PPbuhTc<)LUJjM8X;ECpmE%kp$UPYKKHDs3@N0[?;JTNiJOq_Y1NQ]+QZ@DnI-_[VN
%4iM,k*8tClbp)#(IDYMfeh?PDaA%4hd)tp/9a,&9Me#EcJ<,FIV'p,[HoK8'jLsi<6u0.uj5p!I"s+bMm-Afm[?.2r36g4L@+&^c
%'CkbMOHPKU)Z"SV91mkUe^\7e4\QZB87--3_As@3J;;!T5R0)>T(Qnch/#brjCsULD?+Or39-dFM9qm5G`_ehQ3[+<l7A;<LB;[e
%A5JmR\s\s=oWHT98P-aMJ1<0ZFE("3,0Ym*M)"J+`]+'@6U<diJs"[MHU*=S>[oc0)aXq-p#JpM'+.o"[O!M@FG)n&!#Xk%&7u5;
%Q[Q4p;'01IAoJDd\@t=3!4t'1"-O8+U!So:V.7aIC;&PUAk[311`#=m-:NQKXMrsVg-dLU5SalF-FDB%TjEjf"/?r0Z=kE!M4k=2
%kGXMUSkFd?/Tr&c>H6eS'C9Hb))2Lc^ENi^f7uKiY8`iDUVNf>@D(2JV.\30cWYZ)1B8kM$V7m;%$^((70j>oOudr<^O=QV(VMXq
%/(O\X(Y3NA4b/Y,U?-4P`$Z'2-b:7`d_GFUl<k/1:kj+>ej<'tG/Q!F%V&8+;^5KS5L>#TN^s7NFHOA#HC[1A&m7*NX1G5L*`A!6
%&;eT--)dN6Do_";[000Fj4f][WE=T]l45c<]=7"#.$''g?;Et6M_`JFTe^P'$)A?A/)csP6c&+]hQ%R2Olor5T$NdhbKIW,LQ!!i
%.cJ9YFj6'a*iE)gU@PQD:;olbkCJt`g5*"^3.ur9<>V!.F%_+CV"HXI%ms!E?&p/)pD&5TH,r!lCZumd!(W$'r.?2&i*Xn^%i""H
%rW$7N&Vip1cQg"11+6:oS5qn-/uiSJ.%\4pY/%sXIG;/a'Dtd<cm4UK"&@70U8?RcGgW5lgVkpGm8>@DXEpF#f:iIIRCA%,!>WhE
%P`5\>JEWp:)%)<LZB9,R_)7+G`H1<,gIPBt>!k)GNm_qNAN)u10NoBN-I>)t6ALK,3)PrT7_Li#^H=mc>&sZu?m!R#dAS^^b5r!C
%N6@97,GTMfrcV#2D4P5l+S0#-hk=Kphhr6f.BVISU3>JP<jr`DhPM!0/::>CNI5i8?/WdjL`HpW6sY:U-JF/K91TZNL;"$h&dFJ(
%<\bl\gE7Wr1m>I1`Su\KU5h>J<!t_f:_m+ofi<aD'"RRr)%ne7*gO?N(b$k@Pn7Nh7Or]hR?in-C)F1N6ZfX+2*Z06+dX9]!H$5Q
%/[?lN^&hSF=^2QGeci&;3K@:#TUBEm<0>`lDM3$SHp"#K9#"OnS6j4E&uAHm<js$O%CcFd48O(TQ$U?sd0Z13CaJ3YPkb]43,pW^
%!TsO/QR3pBBb(%A82#_N&ss1]_M^i4Q9bP,WpmCUOpJ<\&gWu@UeF'kK0@>7r^R&XAGT?G0^rnTLOn";1:/Lr,)nAsP3c<%liq)-
%&ub$LMEh4U-#aBM3ibgQ;C=pdiT&GUdKQ^S"VK+]b7iO_Lh#SA<Xg38=:i8I!,Ci_/W4'>cn^ueBV;b+S.sg]1I;,l)>?rNGSuUC
%a']`J#..s7b)/cK)f;a@SHr')1#&r6<!6@aNoN1i$H+]U_BR1J&Xl.]$d<DqOg0HU%O=LdOU>#Y/3\>^TG!HkZd<4`jut6r>Bf\D
%*&V[C'rRnXT(J\M[*,2fT3.[qI?hWa1US3mN6%Lkf"PTji9MQ2&9Sl!S0W5q$W'UFG9NBY!;ArW'3Li:*?lp`Q?tOphD%.+"8<=b
%BqUX-pQ7,!pf5P(=Pt?VKuHl7+`[1Zq^L!:,@A3b6p"_DWH1)gBX*eqXG`Ak2WWTnP<k<@-+PKkQ.[T`+\#9V7=p)VhTK*+T[=]*
%@qTDiG:OtCRP#dJ[:oo3Fq@OX&?@M>Y\5LdA1<ok?:;pcW']K`#c+3M,r"5a^HGKL&TB&b05Q[L!`sQ+K09df5nQs9i^m2%X`4^"
%%NklVR7M86?(i2n,P*/u5^IPnp)pXI6p&;"F@ocr!A?F1\=clTUJN(,3OsAI9>4]["?,0W9`#!\M[XI/^R_7U(K:<HOL\_AjAh-G
%,')BOX-,DGDUE\KTO_\c9#JLUMhbnF2Yp>Vm(0)_NX#;7;@G97'93s'o;IM?A/9_$%'J#b1]U4+BX1]&5rQF#dQEf;4.c8[:lu9k
%Naq8\Af'en9^<MN.WtgHMq;37,3?m[)%@jPp#@fs"X^T]#%31\!V+&3LBJ@i]I^9jM-OP:*UfT,WfeMPI0%p)oG5/S/8&$n<$9iR
%!GF_Z`H[+.&,c'*q0/rsqtO,;BZ%eDafm2HSrtZW7_K"u51<,9g^D+O]Q"KM";XZjX^r[!Uo?p2\'UYP3`'"f`>O50TL%qp]OP,Y
%kdBOob^D'Vi<-B,)-Y-OhM1:_5lfuH-B?M))&G'-LFJ/>#%S+!HXYE]"_rSs4oq]IWE+S'Jk\;4^;W\mn-H;T)I(dG)Ge*_IRH^F
%pSZ?eR*#]J!;4CFJ*'2F'K#=NN:AqX\IMSeY%fka>DAu[),4r3S1A8b`=\#>]C.5hLloOu(r=!MX,2HD8(aZ0@1;_91$;kL/d+0&
%kfY:F7>G6F1]S7AOpjrc`\*mCQO"^bBCboIJMt;2/\u^jb$p;6-N.V@@54MoIQC+ZT]Eaa3/ST9Q7brA!,*6S#)qZMeQK0q*eJ$h
%!,_rXTXDU5)AqQ!n.G:EWjeM\X6Y$=.]1Q*gnO<E/R]l@Hd>>3oUJI)=0rZ=ZYEUHehfI@2lfYea%1_<Sk=$(egrh]`MF4`!jhF1
%`t<NgVilrbD)1m`,?&aMTS:$E8tP7e9(*3/8lj7E81Jb*g*QCP""&F2Q6(1m"-q_,l(st*3spYW+N7fc6!]:YQ9C>N!r7.5KN%GO
%oL5dK/kB@OM5YkW&u(ctid`*Pga)"s<o9f*1\\1-L?.>F"7le!Dop4CcV'0cY>Oinr]+\lRcK&9!eY*WJ0E$MZT)ibAl:*ZeP?%n
%3kf&O'j#CS.8pak[>;2SBJ$<a6A20.:c_!KlbO0EFGO1u7>hlL$q2UBRRdcZ[&d39Vm2B%)!.oVNj15o]=qteW<JBN?`,PM%,S;L
%+F?!485K\mU(IZ*95!Fd'E9>HR;.E;dY^dp0"+q)5bnuKRSilEr6fAZfLun[1>ssn$7F=/l.E1Q@:lD&"CK_QMq03U=s<haAe,n\
%(5O*6s+_($OpN&OXN+mE.kBW[eff-1:m#m_e^%8!]XgN+->5'-L%Gm@3*@2UPe#_GdjsWU#A/QM9h^!;T2^Z_.C-8Id(<^g0dmFU
%+<G*CS.abA9iL]r$P$q;$3hJ"(jgk4AJcP_g8auLe"qt7^L0aO$3+SGW/*HA\9)a8k,@'a<@*5FAu@:7IOl%*o`H*3'W(C.V%FS7
%XqY%Z\6u_1V%*B_<Qf*);lrg*TgU"I$_\PRp.U$AcEC8B0k2mcs"oY9ZA)h!<E07hC#K0cI=TL+.tc!N&^EZc(Xl\u>>qH[9)@"4
%];\Pq"A`Fe/8b';l*Hb-U'5mLZ3=d0G,<g5DC*9@.Y7'tM^M)eg_p(4#D\@*Ero,OQZ(HqTN>hr+AfglkaeSe)-WJo_j*X;ROeMO
%b!NhBoa*kT'/^qVBnl($OX1mE2[Snc7WaOH1hr3CB_m%R[L/-)F6dX?+9@:eMo)-Vf1H+NZb7-KZPf>er,=EXUP/uOn*h-b\PfiO
%!%4[tf%Cf7on7-aYfE(q:l45;<372\<tb%TN222@_2QN6]8i/#?ZpBM7]..j>VGs[Q7Kl/A]?fJ2_[Bk4huk8FLX/9S/l!T@Y&(5
%n`g`q1IAN,PR4$0Poa`G"@Y@BcY@Li/9VF@mM/k4@Ic1SFIZi[_4prrFWBKQ-F9j2c>)e?*3?H+ENJh*-<d1.a_j\_!7cs7s(\d3
%0j*3MK.=3MIOS(j0.@=tZ-Nb<Qr=W](cu<7Kc/Fj#d)he0Yc.KDT6M'A7`i(*;$Lq$HB7t2-X%EAPk8,2-XC<T9-S%EO1uoH6atO
%0#"&H-ihmRWJFeg=K-6gm8\1`[BZQZj2O9_R58YJ:D*pM8Hj2i,</7qE,)YZV*k;\Hui?5`fs4R+Ve:uf#\5;.WBBZ+j7-&i[f^U
%;7gu,9#AKKWQH1c35:T^LsT_[I0g1$3MrORbc=jg+c3GC0aY@@6."8:DNVajT1,TF*f4/O1>Zio`eb(k>F>.$2+""<W(=X-q4:_V
%#m1ic-6e*+!5c]/,[(R#XAH=qQW=QHUt/V]Z=pAEp1B1OVEMBHk]O9a;G9>E8`AX8`/%+Oep!&BZbaF&D6`Otr5`8ACa#X_1EP\M
%SW+(5,/_3pZ/gR)F_k6_p+LCj%ts;,&g!rn(CmMjOAMg=!6k(n<F958)5KY*8'@h\j)sNF$J`jU"O3l%#>0s.9WC%JMq\8-eC[o?
%qH?8=$QpWUPAiF&+t92Da/!%.5fFReM12+F7b."8@(ki#WX7:DhP!#nFA$q/cf'bm7Zb`^)&(AANg;Q_V(8?8KH'kj5e+\P)e7XL
%GKKD7PEKq+Fk[GN<trQa@&<7Lbs?1k5,5Bb42AYh/Y`VE:rCE]l!b?6FFDI\?)C+?a@oo7a3@;JG)J+]'I1F7!E@n+"U5Jg>Pc&p
%;jno5E,#^QP)1lP7<d,f:)^Q$W>!<\=$,<?3Rqlp1_+D&24T%'K4<_l@c0-b5n7Dc(S$!=kCf^^Z\0ZY1T=nCXPtth7S0.M*%mO,
%/L)"NIp%4`F,I:p)*h3"'JIIC4;c$TFY2j::`PQEaZ)>T31-/Eoj-_oDq3Kk2K[q\S*Q5<Q>fe'<gK<&CuVB1d*)N+,uHr\/!i5Y
%pN4F!<8uR0+E=<3:*mWU*9,-ZH+:_O@HA!>eRB)tPrmdM`cGeBiT"K1F#[L8=I'5L_i\s>2W$*+3'NpI=m$5!#6s1S>MAQNVmNhI
%)@g7-2SYE0F%Ai]Zlom6P8<(PFO"i5'eDf.:kiUUhrp$XWEJ5#-OcpA#\r'&?T>>1(X"mLFH;io%"K1!34D=KrerCu=;NLfN%:DY
%ZUecu<8l''NUD`TSDY:lEfDLfS>ImHPpi.;l1']Z]Po)K[h=B>s+j&g>G?)WX`7`.FJ<_N(,Dk2&;>a5MUCuH;)n=iaJ[I3_P'Mg
%5eWitLUW^'4.OJ;GIPJ/FHUV0cpsor;hQB"#Up"2+^CfC>KO#NiJaVN#Mnm%_ttQ2GGb[a_:#-=*Lp*Q.@lTR\"^.s5n4B^8YF(U
%)]\fDK(]X23;P%t7%c>gK58X9?RBB(:i.MOoRe$O>Jp7t;1jK&b@+J1/N#N^L-pK;:kNgO*#$\Y)LQ:fWPQ!qG=q=u9OM'(Au+>>
%:l_qi1H.:V/kCIQ:*YHtF=TBHg9P,lf4J&@)Eg(KL$Y3n%o.^/Gi;kQE&;XfQGF),U'0O/%"<.NH!t'8/O)5"BHYQP+.T-1$X(2V
%IW4,>cK`Hk&'fk1Upkt!S>9>KADInb36fO`q3<(mH`XLOZkJ,10P6L)L*)q5_5+g5r88iTidLs"+<2uEp!8@8*5JV<QQ&.K)`W47
%&'hlA=LGf8#7%UtZH!jYK\>Mjft:sHE$gaI'5ma+biW/\k]VDo"F_b[>CLP3691B5IW2ZUgMHA3PO@$._cM/'/68S/)YDriVj,JT
%6Oup?#?>Ag*h3caZi#e(S=!Te1A-nR*(p>=l39>[j2NXsLn,V-+<DuL[f#&cDKI9f5I_pO4A_6e%uqF-NSj5X47:XarQ5Y2^_(?R
%[f#'>'+lk_r8=B4Cii[B+'_`SQ[$L\mR`sRe)1K*UfNFeo\^u,ioXpf)64`eVh6$1leFhTise.2#R_9Eq`6mMPt=[Ai7d2H)*bVh
%'7MlhnF^Ca+'bF1n9O.$f@QdYC]*,V-Zh7crR@h*l.RAW3EjKUL2]Tmc7[+W1[)Xm&9MI"20s64G#G+po\_?GVPm6#mZeL7Xn:Pe
%=BY7&V$@7,VEfC(#6u$B&ZAG8NcQ[/']%,gHPY(1^X@`:fd1LQTEcj*X:g96o\c+J7Q>;Xhuj#qMql[lEBt7.cM567=VCNLr8;7^
%GrPN7OTlX`riksGP<l>i)'o$o8NKPjP79`9*BnKkFae:HWFb/r?SC7)K@<D%Y&EJ.-fL<XKPLGCUn:l8q-Eg40`jsTB`-f4>n!j*
%nUknL;21N$5Ifb!!i<$si#oH_[e6%1*/b+RTa*eAL6T4U>CLNJl^"E=+Ije\L$Ss$=K71BbQQm,kSBsCGCjeqh=POqKL7Qt(iqVU
%XianLPm&^jit*EAh$Lq==[!UF7M&<EU`.EK&<:=*"ar`L%_>EsJaN["U_bVjXT[Sm^hL#G#=3UrSu+#$G[8Nih6;OLDb#gg-O0lm
%>&tS:i(VDu&ai?&?*]2s4#;-Ob4<o9_/iO]m?nc\!Z(@""ih)hd1'"CgiL+eSDY9@-2^9."=IgB3]ei1ZK@Kk$,I3L@Cg=="*\:Q
%J>"dhJ[=[a]5N)T9KVBk9Uu]a'aVr`5P'H$3REQHI,M)6d/Br&%id14h:%)h]Q.r%0^-;\B5lmac3@#_`i)=-3q1'-MnH?HV]M5o
%CuBO8p:jhCP@OEto4MUlAA]^CH`-ii72PpP[ABgCYiXHUX@[uRnOCBt/\\;Sh0LM>CW#@qBBTQ;SbcRJ"!H0.+fQVArq96Un]0l+
%C^AKoh"fCuA;O)(5m<9"4>#!MWPDqfE(;a[![hP'*1tL[%a,=P3E(L8g2/,;k>nL^,3_eZNn)XQSM>[Or1c>g)\Y3(%GLs<R(ujH
%':>aU1P+#N:3@ia7tVOubXCCE3u+i]SI->Gh@1ZJf68(c&:rki=`N,o^e(#QAC4-Uc5-X*^7bU@;%HKS:'FB+fI;M6WPDZ],?EE>
%PsO=3c=CPhB8$ju#!*DW0d]u17,VU-,`-Uj!iI3d1l.P*S?//1-0dnV$o(X1FWtc+_M,s51D)T*[3k9D-NY[g/<,;l&NGtenA1Y#
%S5o_$\BY0d3_.d$DgB./_)@3A3Y+47g8KE]%ld]&=js\8!G<sX'%&I.JpW$B7!nERUP7Ce>97`@)4.f&J>5Q7Cq&tc4'%K[T\8gb
%o;Pt%N!Gjq\Iu$j4Q%cOd9qn&J5aW>kHj]/__fmA2`EkWQoNm1][MBm;UkirgsCQR$t5IKTE45VHM"YnJAZOQYK`@<S1>rg+bL$T
%+oe%OC$,Le$b7lK1uOD$`)PAP.;uJ.@0[6$Y06kV2Dj?>-7MVM%6+e9f&1ZhE(?d*GK']En'p-Yc2pc?9bqJ\=MU>k`*HJ+$TO??
%.!;'aS1TZ0%4_gr)]L;M(3$ti;Cr(\35,<!KT@Vk33.-,"WIh/HAlARK*C%MYH2b6!`!?"512F+d=Vh9<Ab,&F;7`T[hRaO`+qB9
%']=4a8':g+!Uc3C+`AgFfh,9".DXWRD4ruo3*T4Z^81h-YN0QD-A"c>M*aUC9*%dl-Q(l&3Pa<TMk*BKE:R<jl"K2Za$N#oBQ/L&
%5&t3\!TuJqj`sK#:<TX/I?7aalITDPh;eP`9dfNB2B:Z9Ie74fOol]l+0#,A#<7CRP3uolE!d<pI:iRn17R]r40sHQBY$l"i3!`p
%$m'@6[^@_jH,.gD0kTGHB:tlD5]n,eTE<8R^**Qu>;KAELqrOl3k71;i:MJmV*V$p(7hFW:'?THZ!LnW"-+F9OVpC'"&Ag9Wnu#'
%Y4:j)T(.?+=kU;G&%FrY.gn>g#"0iJ/DuV4<YPrXE$gMu[<TRjc6O"Z-5LPEA)*TJZ[ai_/mB[bao[T"WY2%J(3%9nFSG9m"e:*:
%A\Y$Yqe"*b)`6I]-P70Od"'RT<PEG6!GD?Y_7%VlY18uJ]4NC/=,f861P%@HO$nAd#oo7cnhP*M^_mk2$VtC:#F;7arH0H+Zm`!4
%L'\jEbR<`1i-9ol+$VQ4'BLHYE+]5bVBO3qc32FJdb`V1JO:o0J%!W*NZfaimU-*/`.__U)^]N[Lm$qC-?+nW\+Ub7i65-c+g"%Q
%af[4@,m$U5P/jF=K*bfS_goXAR)#-97mOXaJNFXCp.WeqePaoa=uK@<[!cEm.i#R(<'96,$ChE/gl6JE"g.ilebjHQ@-/OGp4`pE
%\TPk6>KaI5#4ZdbE:8`2F\;n`^'GM1,[HP+]lc94^qDNHGY84#:93`5:'D,s]@Km*W5*tm'c5Rr"jYub$S)rO#G6I]L'enD]TudT
%%4Z<BHE5gp<8_.!Q"@So"r0+5\C.*m=a<)mEK>%:^f^]Xo'9$SNg+&0m%RF0Z]7`J5#[$-$;IK.N!l0;A_a8bPC_aGZ?!\*ADh]<
%g2`_l*.k?4m2IZs#eCL?k5s6N?pU=kS<n!6bQSLGhj>@A$QNGd9ZJY"\;!Pl8d15#FDcphW5-eiNnR/1NcEE/4?=3:1\6mXgSho-
%%UFbt'0*;O1TBn+'0%(;nk'%F@"qF3%1tQ`8hHZ1"HMEBip=Yf%\?oGK+/PT3A="Md&Fee!0=g?"r0*#=CIq!"\uh<F+ucf\CpRs
%fl2MC]BS%l"jRqqPI`dk3*KE]\E*eT>1**!dBYlTG0%Q^)`Sa<hm["rB64E;@:o]*kJR)YI,K3rs*):#+3Xu8PY(_C)a85]]K=]A
%(a$82./2+F5&f`':q@7lkEcfl=@eKpi63b%SJR7qS4Vffin3aO@ksCB:.IKeVLqhuL`ng0%?ie<2LOFfNLI\)(4^.*rf%Hdm[&D!
%:Ak^K#L3Z&JGNJ6E12sZ]E]N<7%]F8K+FIT2QTX.n:@@LkunQ\E/%Lu!n[7`>u*T9nq!PRBYpDEa#"u^5Nom;m7AS<V$"c'RUY1=
%^tHTck7&Fk+2QBW:'ZelcuL.Ki6&q;HGg753'BZ/fag,_L@K'Q.igTSF-3`;V#uJp:P.EJ##8ubafM$B*,%U6!P2\A7l)#F"rfQ"
%C*atfCuC<m9/A+]Z[nm^3c7W.CuE8*4S'D%2K6=",G/jd"*`PUT%%l%#*/FSVUu=s3.SUZ=[?S7i+O:5a+b!BEHpt]%5)Tf*-.FV
%^mUFme2&Rn">a4V.hao5;HZN:RD><ZKXN0.#8W[o>^=-4Y_9U9J-,n4A/(P:^nJIRL`Ic!XST,LjT'5-f>j0Y]\2-ZK)lsZLt_PA
%#&qVoL?qtGE4"hr(^%;.mbst!Sf,=0B#hQ[:&kbS#N^D=!q8Mgodg&$._"UAFo$"\9jeEHfY?BMP7-!p^JW$IWmXZA%DFXFZYm=g
%@4rAP9W>c_&]Hpo"7O-*Zn:f,I.h-JrT50Q9\hGSDe*"UaDF<@?%S4O&(5B<<U;8F/*T!^8P.B&^X8bijdl%5/I:!G8\ZF^X:HDK
%hs`JW7/7;K&(m+N`p[4d3=*AsMs%l2g%iA@2T@PYD_,/c<'&]V[8"[Hff/KB>!8YW-DP-e/(6H6RXpmCoM(EBWBk0oD`0CO`0e9l
%!"<NpIA;LNaHl)&O]8Tf7,Mt[Jno!]hp!TV2e]p&ZWoh%=h^$UXR*)GaZ!8_=BCAu6n4;gd0[OlnZIK^^>\g(AigEMD\D#:qK@1'
%`0PdA)g6/dM@#lB610`S9C/EpHUI+0VU<Z<h?]X7rOu3W.rJ#BhO3(:c2<A`m>VmemgX#Mk/af8B>a+rAd/DC\Mm]\[rQtPdSMU8
%.]!Tb2p*D3jB$5;-reik)eO#9=WhXj&UQ<[JV&[&leQA]N=E-O_pcFoNu1^o`tP-$60o'9T:1&KlqQskR5]cOS%*qsIV&4"b)aEh
%/[IBf'ao2j*n9&ba2)Q!V=qq*`K(kchH9![f*j1;2caZSd9C@(S;=Q*_<fF$7`t.efc/2c[Y*9Q/I\'VDJqQgNN=Ze[l7/p,Q`(*
%Dcdg7e.6G8=<J$ODn3Pq,h3l8DJqf3$]r0?m>Vm`]\.7N.g57gb3_q$hD[[/]ub,YNF@6%WL-)nOYq<#>!pC;eQ6p4RV!_FjPKfl
%`KukFRjJt&&N8_,!5c-mXcn)f7kA2cP']:E/1:PROF*2U^rN_nG:T[(Om_;eF9@VEYpK-flG9rpgfqVBY]>*V.HufFRjgo7(Ck1u
%-Bop.JPgb=R_ZW:AnGrc;HWkSRD%"Yba]]thAiJ'q`Cn7hLr^ZpNCFmqP)+T137g&@gQNQDJr%X,coMPn<8YHDlLDV!`Pp7[5T"+
%L-;KK)>I=^)7)9nEk'hFAoH>rber*fHdh7-aege>"(*1o?t]1VgiU`Y1M1Qkq/Zl-bhgQ+UY3,Mp4i1;eDm+R)\+4BZU*u\F<"=a
%^J]C\`mNU*3jlGJRVAVl-LaU-@70G,Or,<OKA)eCTsB7h[5Zs$q#?Z6)b<2'`.Qb_>sLVf_sE@`&e/tmDk=DiNZse=[#d1T9C*,;
%8I^eWlqM`]gQ!s<Yr>O+VW;r1Dm\^`fSR9Bg$<6?)e*aFHE81O`850!cmaV"Rt3RqY\kf]AfZa:DIrOmGXAJ^ZSrp'7&o(2fphmi
%M9dkfDhNEmBIX7p2a_UZaPLl_1N&-cU;?4kAI/0GbO&#haLsWngRH@4B=Do.UP0iOL>&+'a5!MfF*hEbF*SV`hTQaZ/tA&N'@g%*
%dE'!]?SPB0g`%h;iOL-+k(Ik%BiV?Q6n:@.pKd7e>l_nM=2I6,C5p)bgREJFM8m&FHa?D,j:%U6S)h2>frlp8[jE/N[W6`DJLtc9
%p4ceOgK&0i]jYlB0r.`pCP^]BQ.h_aETO&V1UT/Y$"he5C2`8,1Ng*HHf+eM:Z&/OKhC<]FK@!GX;\$`O9l6+IpkZCl0oFriK0bB
%JiGLkJ]J-QK#"Zm`$(]\pC>0M>g'>t%?&`C4;aTFJT]c$BNRcU(Y0d<PUm?"&W3-G87W$=5pg[YKJ!jZ%gZd+UeWa&*smUUXDSNh
%@mr3`,_\o1%aF\b6HbO=N]Zr@f<%55(o/+]8$*/q&!L;VfSa!!oKKp*Pm&Rq>QnLD.b[^8;[ZbC:]#:G$Np3@Z!@HRA$n'5-77[t
%Le)mTWHX:b,&+=8^-Yi/.!!K+L)/MI$1"k,-]B!-mDG]G-\-@Dc3e^rWf*.60G]_/j>9Cu?ZGEO_Jfa\<^c]A6o'J%:>KV5[Sh6+
%gVSsSm7?jl?RU;.N)p09'$*E(bG$<%_+P(VP\(#RB0Edq(QD>fAn\sjrC$%?Ao9b8FKYfm(H2m_,(2#Ha<02]K7Xo$2sLKA2sUO5
%8l;DkT;4Kd:I/!l+>"<[fagPPe9GtI8$cNZ!J!>K((k>h'^jt2QIt$W!/iBH%7LFY(gmS+j0bWg*[i*r4[lZNl(tVc#["L7:`5ju
%@dVF+dZ.s7RrrIc,a:`<Il,:K&0qG+>%9Kk[(r3`IS[a.UQUme/?<=&FgeDQ6i]^R4i--dICi=I",:(:g9Ffq+N2i8r.Gl<pbsZF
%5cZ,;9*Z6_J2\G397\N\:7Z_UNcni/)FjT$=;O4SS12>]dfYR:V!a+DP0IF>9;CqR!2>uP3Jh>$.?+Ue+#hf"YZ]f<#p\si>--Bc
%;%FqoKTbiW-E=E#_K,>!-=0DKnAMW2!%m]Sd6JKHJ-(H;NXA=g7^WD5$=MKhA0c.Z/g+YtY\.g^W2.89d>t]6Dofm0T>9/@HL8@F
%$qdBm9OQA/K"[FLalF^=*%IjI!rggRSe1N*9DA]3a66&@hk=0\q*DA&W6\>g`=IZ[!]t?TXq:P.mNCo(R6FC(2U1T_UjVWE$'"+Y
%-$7R.]nJ[B["-BU^g/3W[(tt:R<+!2KI^5S"^2::"erFJQ%3rsNEcsl8f:%3=JbkNj?s"j"RGtOqG7MJ\j6U7o\]k&mF"E@bW(:J
%Ll!oeAI[6E@t`@rj4B/L>_2B(?;o)*`!^*F3d)n87mK&.H[rpVY(N74S%Ab+K#,Q%8M^\`nt<s(-CI.-P!V![@'ian@j_p5i;lae
%jCe:[X2&<YoV4DJ52d0:A<.M'&[I+<fW\ghcToM>V+b<(1j'II.dPk5bqAb=S%snC4;q,DIE[(;oKI5l2l@"__P@=X2lYN&p.L5f
%#!-f&DBOb&hE^MN42K2/n5SItN7&ZL'gm_D&-B+'8/rsk?kmeH1PV2*.$PcMd\*#,NQj"'K#B94D[\2G*9nZ70QDS-%Lu<P4=aQ^
%.<(V/EfdniUbW''fVO.NC3QZl/o6h.2L7!K4>eaWQU=Lb"@=='QBCfsF-n]#brl<iVlR1G[[/AG[9sIb2^\d-M:Wk5,.@#HL96%[
%QJ%!+X7Eo3mW&C^Zm7%fp+B5Vck>V!\7o&biRmLZ?:-_AD$urOW_^\aTkD$Y=uQLSojjo]$WgUiBph5(.Pe,CiEN\%%Ejr&Grh9P
%/Fn@=%\[71mD"[I!Y!&t;q/;iM7SPQAoAUhU:LYm&4W2nGo.JRDf)\5?jF.i7;)`G1CBdNg@532/_Ie*n;gA,?[%&fF@O7[H`.Pq
%$j7fZ0-c]@#VuP_S'64&P1_uO2!;h*I:si]3='PehLbi_J4(_8Uk*l0FGi&]/ees!'KM]'Pn9b"&6FW9'[*5;ej2!@'DZtL$_pgM
%.4-'u*cbn96Sl3KKfR-a=[6_*_t&i4dn&s<.uV"AJkKjCbQfgt+hnH1"j;'3>n]U6oqNp/6;*'bM"b_gP=]hk\.'_M2TK#H>-p-R
%!^G7O"?gL"o7lW%GSk'22i.+KM9d_8["pj=*BJaU(J9B]Pt'ca*&=GNCthb9le^%ACKEHY_`"K%`7D0s;`"6qSaQ4k`nn'*-5p*P
%m]B_Nd>RT5C$O@53*/ihYA@WZR606H'LJM*=^kua7;^"M(T:<o#?l)`*a3E?78X?s%0DBtU7-89B:#<M\LB-F)8.o_RC"bLG(HZo
%RNqsM7$dB4UfaB&7F'-ki;,-e-NJ9VlLXM@8oH%Z55&7T.*-!nig-UTbBD@!FRt<WU2,"nfJ]5&>P_B1a8oAS[e#,@Aq=I\!/re:
%*M2A;S^Si=Cc"UF!.K/6S"'*\]j^?ocD0S-bXZ3'284Ic/4[&uSOnnbaUM7$aPf^h-#CT(:[142n7LEUZBQ!i'O/5Y0GqtK3"0'Q
%fBk3;b\8)WAk7X,C]nX=J/2asTnRgnR$_Lq8jhW["lgZ`csXG4TQC[8F*Ae;(Wb(niR8BK8dY2g`gmdo$K,^POlS,Qn1JrtiQCWG
%^ZmG5eql;Ce!T'O0#lTWXHBWbKQ?!_+s?WZ\oEFA8dZ0qarXk]2Si4)Z=4bs@3D$X"UseF_I=q31j79kPA+8u!Fci`g)]*`5rCRN
%C8E<F#ol.rg59*Pd1ei%^.Jhc(s:nU]^q\d^.[@<G^[B`5)*r(0V08kUIb7[U)O(]'BdJ0-EWlCc4sV\;1dD9@i>sW0s4Y0;<_&S
%fJ0*U^19#6QD=RX\e"/U_=3l<("B2B<D]/Xr!(&q4jr<E1$]0N0fSSZ_7F$n`hC#O%Y8MB;(P4kaDf=]hI%:A=DcQ6*k,X6PD/Y\
%87O=-ZAI0MQ>TTp=1ei\JMEc['cX2/#RU,=5eEe=6_!%-+bgW^eOch=@E^JM7\9tj6mQG^AMIMOCpJs[+0=bH!7BHL&+'g;o'p#)
%ElI0KRoj;uZ_Y.>?hQZjd\?WDkjH>3BOl\&+c;)3;ZY/kk(8;4@"Dj+_>lB$^blR@V<A>fq4XjL"i:tA.0O50bh\-.*<Z[_==n5o
%@aFd&lG1b?Bo8toK+N%W41l<6p!io]RcP$ki;[HYc'mZPP&0*$RHZrcbF#9LRS_"q3I2=:m_4*&[<tmHN7u:kA.ViW0`h@c#YM5p
%oj=6L*g)ku!!s!?<Im0qOT7mhZ$CThEfR3YGsF"hE/RmifNAJ23e3acLh/jRh[9Q\ZDl!<B[c$8`uu=t-6]m-57enQL3Dk?_R.3Z
%]l3I3/mto:"Ks<BEXkDdGalj2D?SYr<Z(3D\/u@aLgal2#mA;F&A4YiVFu%f_9#^A<*?($M#ekZl#9qMON+FjS29Z6[Ra*TKf!n%
%m=6B?cg"SV;j4!)./"%78.2_5V/\jmk:*#O5rJf`8/2H>AJu/,B+W3<cVn&0rc0%TWr]HO,a-@&V\<mM\$pt9=0iM@ZSd=uatnAb
%I1KT`K>_im=5J9b^#A:;l=bg8+MA9*+Ee4]FVn,_Y>Nu'f`Iso0Dh#ZQ!oa#SHD*R/Zq33ILp>(nDG.'>;OLe^"1L<,XWCK&OYHl
%)Y.XZ+P71LF/BcKT_'^6U;g"BG4PXLaBAmu<9JQ.?Wde]OTtb@Te"I?LFbS4N.\$6;DRGp/WBm9HRk-<(B/dhkh1TA29$nZDn*q)
%h+-m$Alm/q.<,VKp3);:[U`E:IcX&R`1SkJl2W%/Tl1?Si"6c]o39n`Uf"3Gp)o-.--LfQc:KAc/N;R$*^=:b>IfbsE=[)gW"@<`
%U.0^D-fP47Z*hN=TA,XB?\lfZN4%em(8->>omlFbm>P9.+t"nRWIB812oi(5F;'`)jkRh:>NJrKH.OcT5tS1]'+'joQ4SZ+gl:6J
%D<f_-,nKtrpm4QQ*J7>ede&AA`5_eQLU\Du-9t/]TS[fNW=bMO#mt'Rb(;JbQt`&^C^"`SYj1Jm6KdP8E;@>6lrijT:'&2rZ%Ml[
%bmd'Ei?T])A[#4JGh>&Tal8"R7KO<#!Oj4*V\ML]QT6?-Xb<]K(!\'A9q%_:Kl@aCa:PjoorMen04M9gmZ#4F1,A*b85[gNI8ZAW
%CtLq9@`<k=$%9FQaKWA\nkA9rL8;hm6E/J:iXgu=60d6Adg%-;o?`'uh\P;m&5u(7,X)F"huQ#%KW4/XK^W7nJOW+iV(,C0C!8N\
%g8oc<//Ar$a?/@W&5(W-I)qAd8gfQL5HZgC<YEd1Unr1JW8t=/$!*CK&a<bR.t&e)AG&O',;kh5mAT]MOAImQF2Mg<%#oL-$X1U"
%ZC&Q681_1HFU3@MpWO"]9&LkkPB1f+IiTBTj680gUckAA(?Pod[b/!oi?WqG3(gPhE<TlQTc=<X#nm1@pgImA_-<:,>6*[uW<6j!
%PrN6g5)(O!kEHq1Mm@0<P6OYb1Qr[>`"=WGSrcPI$?6'A0gK4\ahX%&22YFF4b+cNMCT@(m'ULB5YKb27LO0TTO\D19['@ciSYto
%2+e]YJ<L/Il2@_d;O+sL&G7^`r\DSA4H(XAH]!L1&CqjXgMgrM:\WpJ[";0"rRaWBItB>)*WTK87`('M<sa#jUhMk5K$\*:#C7m5
%C8Ih>Dokp;.@VYhTrjGdIbP0,M!dS&Lab]1PT`C*QT7NkJ_CVc+m`Mn1?An3LrD<0D9`>9.:gY]o>n(F,$_16e=Hua;(sGG6ir`0
%"tj[<h#^]1"3J&`X*>l9hE9L*<51IAYoiT]:!b+n:Q`a?J99FXL_t"F%nq'gs($'h24$e"3#fdn(e47G/'lht6d`8,fUf&04L*Ls
%YV%YE9oVbP;N<iTGb[^WFX!NsQ5VqA>nF0>g(%'F,LBLt-][Fl=NLVc2!Lfg>MBoQ*&X^TE3>;d(9*.0ak<=!7cjfi@ZR=RJFBb?
%G="tg+Eeg-:\nb;(BW3E3$',1ga=7WXksL'8qqj7/PLqtKk,cf.%5f1TA&9+0)Gt()%lZHW="5ZbRi\V_fTeNl=2)_HV;=IDurRd
%dm-ogH/cmO?mSKE;,9/8*SpWj#T@^"13BCfY)s2*RQ2"jDCXZuEm"LG`V:M-Gh\m2ZW8hRfDP`Z\Nepg`sLoOM5<]iC>`*s[n5Q]
%m6Is\(r=n`:BLo>ZBVs"<a@>_7%7?]Obk2O'Ue%rE[N%MBW,dK_&YC,Mk_2'#!R["pKh=)8os)p(POu[Ig79UF-b-SC[(eAlFu7;
%"b^h'1N%/VPqe#5,(Kaq/O5CGi4KXY;[<"m#YlpUk/#WsB8@F$PBr'J(BQ=\>,F3)OS].`cp><8%V`"Yfd:PM@S91<OertWF<2;<
%%MDtPFJG!q22I_lDFJ:FJfic,OC&tE9-qsm,AkD5G/Em'K7.5S0CqO)PD#,Mn,St80r--="^i)a`B6WUXbJhBBA@\$XlSndr?)CL
%+"T+FA>W"#Ch@<`jjUK+Fut\mn[=Z6I@MQeg!KeU)H\]>S.[--$,kumP\n`G=EW9h^^S"rQ-Y2*+nLX4cN]*9#8bfnLR>G73*&T&
%a""c'2Q<MQO3AL7R,Z5WdYP&<ILkcQ.4>;`Cul#rbU@1Z^7,j'YW.;>#8&`0ANe=EbV\X?R4pTi'#bmOb,e5HPQ<1Dh?lp%,KSI?
%Tm#Z*bS.-?,UEnTmfNID7GY#LCO2[TQ456!V=;d:YQr9^>qmX5X>j6i1h'eOa@hh/Z8*67351Ur7&/fH0]7c)`ukE<ZMu>=*p^`b
%F0<p6%8=K*@bE=_B`fKaGl!(h[GP4s0!nL>Fd_gG&.W2t.,sH*CoPl?PXbHOWA0P,"A-E)O;W>FC?^C*YI[0`XF`5J*<9Cr)p-HZ
%@Mad/4A-]Rj9+_M:28'O!C8V(8.6Sp=s6K6ErsJamZ:QLdX3PfBOIADF;\H;27-aQaaHG_a?0h:$,gU1/7FMo*<eGl!N;VMQneoE
%/_%Re'e!+qjogWqKG0D\Pjf_[6@FY77ut7L!ILEN,^Agk$?q.+,&AX[`*OR@XQ90L*kT4n-P8/'NnmB\[2<`6+E61.KHu@REa%6^
%6j8+=R:TqNLI>ar@*`lK6]L6Q+FBb&\NM*O>&cgV+,;2Qc:Qg9j*Z]l>"RToF[7J^QCnSR8XA97LEpWUNg*i9-:YGVnkuHr.7l4\
%\SZ:P_<<6:"VXBmWQp-G&T/X\R;WA_,/J^SGXtKb$3V?pNN#[;e7\gu?u7(.Tbc0)aH>[;L*ee;)o=&B<HqjH.U-NN6qQD.9J/R9
%%(4t^gn"X8@\C0$<RHU.=0s2X!IVpQ<fUosMTq?L58k/PFJn6a6^o.($95\nEX-9kkTTAC3]0c'`U4k_(Od2##RJl+^X*k(jLb\T
%:Q$\GJHEb"i>FV:jJ^5$"PZhk^]phblBEWi5$j-9*!t>_jI!f7$@j#jV)1@T";8'daqKe9U(9NN-f%Xc#BCit+/i()hZ\lqjZnSg
%9%:3MGV_J8?Cc<rCNoiZTB*paV+&N,I>SG(@S<U0'\e89&2cdGWOI%K/)n'No*2'7f9dZ8DKP=l<go/75Osft;JW$uLgD-YDUV2R
%"?A8KJIphea<t3QSO,[(=Yu%*b.eWt*\+gj@Xq/Yf+G<FW?*IY$4Oo#X5+8c`pqGM^QaOui\o";V+))7n?G+4nqbem[bpqL#mN-C
%&47V9JqR&`0Wgl%A5:feWYcn@A"H$pJR1SqP=m#&bc3s$2[ka#4RcE&LZmaebS/hTYE79S1cb@RjW0WlJD^TlJT%BE`u_*lKaP"3
%)(H'D<V%p51PT%[Z68Ab_)Bjmni.n:4X'f7C+=7CH7!:#'<,4*;7-DknsCBGB*e?ucrcp&"dbI`XYJo#X+3lHVQsll>$rWe4T<.h
%9%@Abem(dOiTtRn4#ol\$B\(bdl$+u@+&A"#6u;HXlO?8?maY9-STCPUe&A-bH)/C9qPJ,(n<(=%%0$Z38)BsboB[c]m_CPf.beX
%DA*.pkUNBLLu>]_#/8L8J1,)R1r3g"h[m+@o>!XY=;471@90,l7S4.=WHelq+Wa1?1&*\9fYAG=)GR/=T$T]ZP>3lj]b68.EL_ld
%OOa+CC"#mA#!k\@%Y-'"nfY>R3<5P!dt[CG;QCY%Urs1T-mZt:71%@upQ]<k!V'1JQ/Q.7$qqeS'f6S6e8T_dX!DCC-L2p"dDmK&
%^9F.2;QU)TD;`RVF\M]7ZiRhZJ]X(G,j>#l.MeC;lm7(ET`T=dUlQ/aZbV-%Wlso,7`t$cK#Bq+$HN9e'a\=_"VrXWKl9Ja$HWta
%SAbn5!33Bkq[O1!9G=ko*J6aX%C((j0Vl"U!KGSNUDRH!OuQ,lhN/GS65#fn^dtQE,\TD-WsuE?)DNgTrSt##Tp:4pJ/QF>@>nU[
%T9be"iBojdkV6O"Lcrpjc[[^0ofXb#hWQfj(hs,kg#>8W;I;[SgH&obKg^GgSh$f7J^2,``d(P-HYaD8e<]\Rr&g:a.ils.*NRk%
%/>@MFLbU>B+Q@&s/ad[rL8ZHZ!<V/9fJASo!7QRr$Ttgd.CIbs"X,bcOVI^;OB<rF-0aTm9Ah^@a?-.Y6&eH0%*gEJ`)icoV8_@A
%5]g<.1J%@"QQ5S;3VKg%lN0G,.^`/I5\q0OP@F)-gPP'T&M=m`P+FZQp6P>4@LiGDJ77P$T$`/V#hY>PKfCl-7L%.Cp"D,V1iNV<
%p1n:0H;!_A;stOYl-\&GOnkA<67`5`j!ffG3'=Dn'N%_D\#=C\(+uheR)"W+d0>&+_OL9fm>R[$m=pfu0`;'``/m>'KkZ=S%R>k1
%rO@(U;6:S3+QhTbC4[`#G)TT9RuM7O0K\>R6lc@YR$"p'(#oA]!UB'`]osrq#/q)hhPF7\1.a-oj@Kb]"7s,`+,P;1<`-`I(jQ:C
%6:a/t"aV=Qj`t96>ji)qIu*R7,,A+*!K$;m"0U@)YO(!iM22o15uGSbLI&$nCW]3'M_hJpL"V+Ki_W4cP6;Ih+j16FQZXQ1@INI?
%a<>QH'!f04d:Luf#)bIc-qkD4(8n[=dd+"5-2aiF+H]Q[=@8&c!$G)H#8[@TKqk5o0o;9:-?Fhob6F*W&Z"E#[]C'0T+WWM&Y+6"
%O<cAL&jBl]pE:]uNnfLi+hdtPm7%XI':bO9Z&6q#<`2J7MJkkF,e9$!(HJc_"mmUG1aK0!["ThpDZsH].tg%'IKc#eY'3M6/"M^;
%js4>BXH'QeVBQ+BOK(&9U:/_J+W4ZV,<SCS6luA)fM<oCAW+l8>61:FS!G1`XWj6uFdU)ci2e-DF_c=1o,UTf<l6Hmim!3IM2P%X
%cOrVsqR2$hSU73gM(6$d$Oj$8r$)k5"Qa$MKK2biGu'aEb4>b@OA<U?BnB3B-6Sio0-hTW$D!NafH2N6":Q",Ls?8NM/i_U25M:X
%@'a7O[4FW+\13[m,Qo>9m]S"1="@Ea1=[8S,Jk\+QS!P?l\iQF$*%10DHqHVm1UZQ'2"R,Y(TbToO)\Ii"U`)!^<Q^=:.X+XY$6(
%0RftL-+k'Ffr.cBP-)PHhDBkf'Gq#Sh'#Q)'3WETS/"!lo#N'B8$FjqK!_)N+HQuDBG:_W:\o=n800aYfiqbbJ;ahN&Zm5t=QN^R
%=?Mb<b6mu9%g[c>3gVrK7)[ZbW7ciWL&Z*!&\`m:I]5Y47'UGWX6*T:^C^/@W0gWDg6mq=M=r\-[1KDrN*dc^"X'\8NNH5piDsLQ
%$36`uE$.HV'"DG&Ng/IgQFM/nITlkfd^9*A>I!i57R^>n#rQ]IE1gp!'D_c:>/d%$6obVF,#Q<24ktiJ,6NT9H+4(3qLHD!._5c%
%,bak4i9'VO5gL`_0'ZUgJ_(?o!AtRkS.Idf/r612-fl(48.eP53a>u6Gp$^Z56mVWE`$3I"dPnrX9H0G:Wo:kEY37B-:*`+0F#-&
%Bd$']ba0NuXlm?T=r9`6&\]C+%qpQVn-Wkj3)G`MYTdd//)Z;HZBbNYc<Z"ZbG/+CITr@79^V!#F9KBFIunm((7.3'Ng(mX2YcEs
%'EWA.!d`dd^_0j)AM^aKR#U(g8d6[j6"#Z$if\1;1@g\IY[EEhFrNAg8$WAro9P7Q^g[uK"B]suL-Z#K[8@A0d.'pZ>Tls1[r</s
%S0;ujCB]R:G.kmLJf;oj,f.8pEG0?eZ\#5RNuq3oC6Au+np.Itf:qOO%Q[XPLEnRCWdLA3bQT7#=]&uBB%&7&\adhk(DM!fPu86>
%1]eM53e.VZ8dPK"X@\18@l%0$f&cM]FTe[,U!hjO,Ub?pUJPG'")inU'J6OHViU?>OiQ`VBW(pbD?IdEXVB;i`WQ";+?0XQCX>DW
%7^8@h'la!^'9/JNPl9'/9=2ZuKgF.36!]`*$`k!C6Qn%AT)lDIns:chWoc3C<6;p.5uW$/di]ePp.MrX35A3Aiqg#Qh'$l+9D3R3
%J-(61O!fm-29&b6mO;aa!k*>;5dq.9G/X!lTfdITDU>^6P+>^\Po/nb!Jo6OFo\&`C5mO2s+cuX%bdg]0MRt;"Zr#6(BVs,--Hnd
%S,$>lLL_LcdOnX?bW:s]#>I0*@N55J=Ps6_^k$?5N^Al752MW+Jo?h!6_inY7(I+QR7tUu-Q9hlOB>sleBppj&Q=:h$'6EsZjLgp
%@3D+oL]@[IgAY+tq^N$77Q2kQ@mCh3bO?UMM^@=1"?i<l'giBLluf7?Z%WaSd%cCmeDl_oAepci,WH*^D]/i#Vb!t"T)4>"ek*D+
%,qrP]@7W[=VucQ65c\);.bOhj<%UY@#Zh\KKM`plDafLc,NDQ5LDRhl/'VuXKn,1a[QG"*b&\IP!ls@+%4Il2aJ3F:kLp73C6.2m
%Atn"3!*ur=Z.&;QFE3^1BSm,BL?c^;@)S-<Sm@P@.3WOWZIgXk%E/OT#&"+N"JoC[SQN'QcB).I`=$ok!U9=[LPYQ+_Mol3P0:ZO
%RiW5?>G8%`'7L5OB&tR1cR:MBI2(E_?r'u#"l/7#H0;b$]Rf;ZKHC<mm]/+&V&K\RL8,HQ#XiS32MigF<[2TfDU!$hAtZ@<3\q$P
%7/K.P)9J3<!-p`[Vcn_N[jj9m5_Z2'=EYg)#0(/G2?f6K`I#$QTIi<1Xe$u'c]31rY_%"VN:-@nhLD0c;.1M8+X'D%1DS1RYKHjj
%4=Ps&Okd_s0>)q'&TODU^n=H,3%4f'`s/FY$3RgsI,SaiQ!i*d'W)U3k#OMN,gd4O)I[P:hZuFYh*+lE]jXJm77"5e35cAbM)=9I
%Tu]\8,SRg_.WqgM_on"WamgfHlO4Gn]-b8/2$;i?`LDS)+:.ojUKIZ>7%T_pM1_=1&U+;Ua:)3s(li`pRlI6L$3JOhLP0%-o3*fo
%f[9aI8QNitL;m$mK;1S&:dlpKb6"<g.QrIK7*3i#nmX@S+DD[lolqjH#O.aFe:niG2'3fA8C2+5&jsP>#=E=)7f>-X'K^u)F%1..
%@1mZR+iT9$!XW^:L05'*eCBGU7RRuG47OTE&$dnBbMnd*/DCLd8i9s4ZD4ZK80i^]_K&^K,R?ii%RMI@lN!k/dL#/D>S;-sk7gJu
%7r,CT+L][ij.VAV4CaRqUX1J$RLYWUPla6(PL3&Z3pI9r,7nmnM0VM5,RRWiUsMHQ-<Q2I\A;XJ:B^@WSj?"99E.mJ*Q`\#<koAo
%)%E.4N0_7=#NqTW+'&01i3^?CBd!&L&<!9HU(TqG/X(Q#.Jg,r`n^)]*XO:%qdLeW,"25LngZ-uq!_$V?@$CFjW-$bB_^Kk$5*Z`
%Cq2*r$4JFdr;_mKI,$\8,k\?LH>B-CfeK;K@84NUA!W`!co4f5aC)fbCn5lk$?!TM3/YaYC6>E4B,*jpeQAn$k<Z\G\,dtELc_S#
%@-/CmNhq5&Z]1?<m[`emE\#p`d+SAO,XK:pjhkKNp(B=".AiIm:Ad3_2'1<u/s7&LWFRtX5m,T5C@$a^8%1]\XdINC$(S9E\*nP]
%;<JF-`@3UY$,NQ]Y_#P;\9]DJ1NFs&\cDMK5q6ud!CJ&BZ>^^=XSqYJ1PUQ"[&7q[/3*]*:^.)@:aZFk2aho4ONE>dA)0f[Ff^6S
%P#]hu>niF\*KH#.`tNo>?hVTDAROUs'Qe8U,Ur-K!9"-=jE*o:;Unu+YG.iQ1[ZS=S;j=hZGo/,-<>BLhjn/@ED"*QAm&._-TtmU
%JeQ^7CRZkZ8RUqQY9N'3$<><E@]<=@(!YBto;<hR\ee@=P]K0F=WFK81bmCcPe@fd:kD0P>9p$e$4=l5O[9t@J"s5r8IkqeImC&u
%*>T::3iVt<.X5R68\IpG[EcpW:3IB\VA,bS@"G!s!V(=[hDbRo+[_u52K6rG!OM2TJu"kkQ_U(\"f2<S\NE8)cWLaP:9a&@_<d]M
%Z4SsETZIq$)HgXg)Ze<SfLg8gl+&7Bi@>UD$D0]u,L;</r7oV<)IQa9+U5=p!oRMF"]=/Jh%q4R$'Pb9%-Ki$XHPq&]D&`._F\>X
%m1N?Z1AEOG\cPfcDhZL\8]I:UaH(sjN2;@r;W!#'g^DP."rC9[>.Xq'9>k.5mNc2-K)#,JgDrE2qJiL"$OQ#!+FdjNOVTmtmb(Ou
%@=:U6S!Ef,J1#)nZ"6e/'1]$Q=bWZ8Y#l9r&\TS_'UCL`bG1at3\tU1\>DVkSn3b+=^VB#C>a/@dRbf7$sj3TU0&D^G\#BZU!UbV
%Z\W.]gcmB/jW]Br'57\\Vi4;t#$-]ulSE&dUJ5St<&M+I0FS7<Q[*hOir\EFL)u:%%T'\NggH\7L63pGfHp#k0J3N9Q*+ksO^K/4
%M4R3D/u7>JDG7Uk.Q=%X%%nMFM"$5<!^eHaXD7sfdLde)C\>[SJ;6*qO=2nDB$5!WAT!&Di#cP1l7bfgCQM"!Q^%K*7PI=9o[/Op
%D#e'YZl5+d4QNP.4&DCk,/ed<h1^GkC`s!/ljZKYA9aJaT[Y&7UEl1PV6Rm$8#mRGToG2iEe6%i@+NKu/S>Gj[?^V-n[BY)a4*hD
%+!qAe,XbDKRtRL[='G'`"JdGX2e/7]Or=k%k++&oIh^KBCR%F<,UIAt-O`SeO9WNTSbOqo$6I,^"&aSB_(R*T[LGRP7Nd2g/!Da2
%_1.Ah2245T>lk<q[Nl;-WAYGf9q`lr+?;sn0Ljb8GXSWV<1XU5rt@:a+<u!)o>n`nm-,;=XGG6-_?M)PG$N7#+_:f'RjjIsZ;1d*
%VV%N$"IP5>DMaO,nB"*B1ECio!p:!j1s3<::Q+/^_C$*k-9cGEOi^E!R:$2n7(j1ODMG<](?!]_`]F(`hXN^R`?80tK^>%E85RJ]
%(.d#T<"r-O0Tc'p:7&mVL#ZJaB`[2nTn1+cQQMG>?qF75i1+9oSV/aBV%o-oi([MK#i+PBH0<U<JO*%O8r!Uq<D7:A%'l$V97d@K
%fiAEZA12*r5/aVQ-kl=f,JI<##pOOfU<ftN$_\)G-32pg_oYJP=2)PZ!su`nVq#!+8>I`6msr?=D4u?tC.%I)9D>hJcS:$(-lB6Z
%iE1G,/0"m0Nbel"X<>cY\1#SJ&P-N*r]F]`U#tbM+r$bBn84h/P,D[B$83,M)Hc>uY%:+=XdHeX;g@i*3iHncVHTd%_>E(]Z$6t'
%)+`uUOZS[O$_IO1$ktT[`_ikVW5s2Q9=^/.1XLr0c&)?JJ.%KUR\h#7_MtFHeD);"gGcVW<T6D?%\97()&<><=gCKP06/uI,S8!o
%*$ZH4fliQa>QXUTd3MjLghFE\Fs_01GU=FJ"lomI.u\<n>`"%Tj4WuA0Dhd+atnd6<XO@3;>=Ndo4S]ciB[lP)!b`%6Y3Qf_DK^.
%A@4`*,cQVS1eiHp+di^i,)q`G*^]>D\nEpcrKhQCj2m@pa@&(CYI>hHY#;83n$fQbHIA_-\5Gg^-=1.Aj/c$W@YWMr5r'5T<b+Jg
%,A*)u7j+[!KDE9!fl\8F\4HsCBsO#X7`c!4AM9e0bY*'["-U%"$*OI6BuH@_QZA]`.4W1N"A:!4*b#;MUacp]0N+)>`=<!H+/?Nb
%>=4Y_+`[\\BTk]<W\4?p*K><p$0]Z"%V'oV+iM>F5`H4O:lrB7X>22!j?,0]8f5iW@=//k=%0L*bV_`QE.i"ldtmfafRd4`b>=Pd
%IZ::3@BLj=,i$ScNn2:h\ruP!90+&eB[o8:Qr^:KD5;`9;+/=EH:`KM$QL&7JE:$EdWe.^81cApet`R@XtV[*bf%_%2j/-td&/+/
%Lt1i`,<>,?M)]B,KW^LZ=kc9qW52oE8JN.9E<\I9=*fFBepS'Ba[(ZRd<#M/M6k$<QL.H=Aq\^>3)q*H=te5s0-nS78\Pp#7OI_8
%bERYt<-?`t2En!RX=uKZ-&:s8H_Z6h!5j>1)Cta69YPmXqF>W`U2F?hTgW!pU7;bI6]>iT<2.7cUCN,E\=iL#NX6q"6:QZlNMW?X
%<a3["6qB=V_bhY6=O2\3NG$5=!_+sVd*]f]Qk,1?12%;G&oa/DDF**J'keInlpOlAANV:83s3:G.Jb*"f3s*6jKb@QRDdWH:mNYM
%87<Y".DXMBm>tZ_.bmKXJF1-tLW4%M6=bkj*"p$;aKAV;!;@3bT+oG0,_cp6N>o\fAX7q&MGMDMO^NVL'2XMHRS^^aGu7_Haf#Yh
%]0`2[A1`F2hZlG0a?&IR-MBBh.q@+E\eRIT!fgTc25V-c)c)>/=9]fOY\-A8pRQukQ*2`1N<mj.oO*bB2G+F#+!?Z\K6l7=Vb1#7
%K98]*`%ar/"Y5EG^,"n3VSO]A"\Y-aa.KnF8bO%hoVbk;3:7HQ(Tt,E,%7$/Q\m^&-a[!X'Mt/604.G4>"BR;muT3!g);AtlH#?j
%25Gj&hML-jAaK[o^Z\92Q?_Gb,>j02>t67`9/`?Fmu\0BKE\KZ'j'_enBD$@aXZ@P0YIY-\+)5W@;,jC3"Xi<>E<lLidHG<($TO&
%kTkML6LZ8:c;B0*]eq4-.QAXZ1QR6*X<*!ed1uV3?E&XW!<j[:CDqV;]tUicVW8d!MEiY.>I#]Pi`FMF?k`V^;2CN"Z^!")[G1=A
%%_i(Y12p!"IAc0l<+rASe_jQ%O@:i6am]Xh.74M=:h$XSSZ[(3kupY_+^gGhg8YOm@IgoBUj4_FZ.(@+#_&1o==_'"*0^M.^p@Mq
%doWVb!gd]B9%R$/#l%:9agpTS5_r2cl*c_1f.Wsp?0e=BL[cA\#ALLFD]jAb?]haH&85WuKZDL9+Cd[L$V1DBLYSChbBK.\i=l/V
%mrZ]u7VK"S9G\t7?tN9<EIq[qP)+`gn?LaC]qB(t$j$D]K^+\cJ/0'@M3FYRbGkDAYpiVK)&@p)UQ\[##h0!.M1Su&Q=ptK$CrN6
%X\C5f+Kc:oD&ArN+<t8E,#`EC_L2J-M,-X;el=7k*8><\8O*?r8g$^%:^\Zp+:OjhoIO'"`<cB;!/[?tA!lIRkXAWP`>p)q#tG5N
%$d?&SKI"o>=PnA$8;o7>CYp!q11bb8C=cR"M?FAbK/A#.U#NDBb\]WQJ:b(#/ge6;UI8->HlUZP-h@@]U]h;jJ4,m&Ql8Y4DM=qf
%Wsr*=XOZ.2"X8"YA`<6GE`lq$$6eB=,-Z;BI4YK\C$unX\n.9cII\d(+HZXj2]Mr6#8q,)77I\#3J?IA&r1HSFR.=Tr-%4?W<63m
%R;frpdYEJXc',).og-YQ:Wl>Z8R<"6CjG@m,Wb<\RtO&E1UKmq$WG.^K'W[-&KVq]]e*$]YZRG1;\Q,;#KIlH"77D"1(U*E+VQI]
%SnaBXXk;68Qb[J+OEW>%,M@km4V_Sr<U!Lt2d"0@7<g$S.\*1XN+Le)ZQRo:3[5hRU@/tWS;^!RmpkYr,7+Q1%8\8Q(oP=]POA/R
%%2sqVO%H>,M/j2MSIjSuqgR"ZgbPeLTfDPBj$H[sf:.*d]m@H$H)lcp%GWFP/_MCp9/$LulN@n9i.>]8>h0aZ8VDE/l;Ct&19M&o
%B9U\9]IGh:jH(R=N*n<,I:7X,AjD`IK*2Np0ub+3667nKN`EkN8Ja&fh-Yc@9rh5-h#6=;NL4O[@e#Dpm1RNE@'tZ\7E/"Op!AZ$
%f3;Cm`%kSmjC9`O6F=_I(B1/EK5bSps7-j6IPjSgX^ZoR%^2#!9TRuR'-\+.iAb9F6Xn@LZkD&rM.k9BL/O)I9T*4*i.BlZMebS\
%df]ckE'!)P$;EZK43=EG0P&;B8?K0AH(c9pJXjbI@ai(iP!^+>%UOatoTcZ@g&f!I:U?U\Ug;^^3gJ5VF;L0VggT"mN89d.1@2/h
%V\"Z+dWe?^Xn>jV>7.e%M.c4W(UjjDoiB.m`:4=#N]gaZGDb(tFC>0,;,!<5F(onlp6%OHM76%hLG7YKZ`MC8KQi@9gQ]M9V$*Uu
%3/n81'B4D50JkRI2eXn+JJ$T;N6idH6I,WQeojYfJZZJsQ1RI(AC)qS'Uiu`+Sj*EJ/ntC)06<[.ZkT%QdJ+h<+n/^/UA]QWHDBh
%1pLr3ig-j2WUM]HP[@%d43Z8Vct4PQ#8']MjAlMA<,,+BVpi1YWrnJq92#k,.7UGd'DaB?/\0C)21%HH<B:WXYN07%-/Y$ED9I6J
%>+O=qkl>F^lW[;]m"l0m\REM[Q3:@:fO#1,:1C"(a`#Wn=X,^;ig+#Xe7u.6e<EAgpK#XM*0I"]O-u+#:9]s^6Du#GB>q`(0*OL,
%J2CG^LJqKR]8.`e!Hj1a09GgA(u<G/PLp/2)i[-V1IScj/.\(E0IWAUb5s](`G!1"MPOSL1W<*02GHK8m<[n086P2<gmh-<S[JGm
%?n\Ss#33cuFQ'ZQe0lXe3>is&HM^kl@Rrcu.VQ)sJo.]>eB$U(&Aq1jBC,dX!b-PuaOU]P<jK.WAk14Z-K5]SPG+80%?E,6FqCgn
%(*:+B]Wm6;i8S]%"aknjmOUre@#EOZ+*aPSTe3'0A.=R[d"u+fFk=R(Y&$0NJ.UN!:4gu#jTNt]7!+?P!]8"!N&A`]k@cA!:efZB
%F!;rN5H,-1,\r.&<*Yg3@1cCq:9.q<iDK$G5p7l]lT"K=2Jn.iOt!.7nA+q@g'%7OM:0i&_*VIi&NHYBm*]4QQpCFTWL[dB.g6Oe
%"f/jgP4oMU#SiuUP_HeCVQPC&_lQ;s%'4nF&m'I/X$g=199>BH7>b[%LUs!5a+oUm+_Zt)r[GLEJU&J(-4%[jUN]n\/F5t04OFp=
%Vkdb/&>ouk$H/p;<4I2eod*b?e0XR3dn*Fc4n[@ScY?mOUbT+n[&Vo]BZkTg#=D28gi]']b)0]GTc9\KTFk&2[49Q`IF"KQ>#l#7
%&E"0DFmSI$$l;/J1&GVAf-\9WUb(/-//Htn,a-g-C%dU+b^c?OI+E/4pecte#L,@Vb>PB@:c-)K5cbGJLg+>+,O(>+#prUsAXa9&
%.Eth#nZh;17':RPD3/j=WQ]qP7]utb(l6++MsjmfoZ0$X8$eIsCX4K<7O5o,iV>=[80:XK7`[m:85AV3-8j*=XT0NQEn7>DW5l9-
%!b9Q^e(DRVa<@$hRZ3g>dD<7lC-q:'A]\q/$!c/?<<V1h&)dXC-'VXYA49'mB&[!UCefPVoWkP@BRHi]#+dSQ?Wu`b@!mmGg_N)?
%L-W_7m\9f^E$IYk&eK;%"B/i&G"7Q[QLs,\=F:fuLFB83*E;ZB,")Sd5W9Z')THN6,:SRMT*`Ff#g*'bgsJ4.PX?Xpf*m"hiDGA!
%_8_$6;c6tt3XHo@nka.iF_N%2MOnCjhDj"MOJR[47uAr&Cs4lJ0PQ^$9u<L!&'coWc3e"ko<5CQpmqm/!Eaq9-`\:I7)GLjcjE&i
%1HuhHeNAlUSX@ecCA#Gu&B.2`k"#J*L29+0%P0-mM)(\:%b2mt&%"pWC/$0?$FPbO((HIr]!CoNrZ\=@8ZK=S6EZKu(;)WDD[@u-
%F/D?ogQDjJ2a8ep?s/Ynb8(FWKV"\G10C-^Km]tnkJ8de3X5%a3<=@,JM$`[*FmHP;^EU_)FP,TKA"@;S/8h65nl[?Q:]O25a*&:
%.8!!fr!K!u"6Q;D&9/o/JQ"=I30GTfS$YGuE&5q*n5:T>;BN2`)3DofP5%PpI_u,@bZpoX;AoY\[:po^L.['3OKKj%1Te2d;T_JV
%jLIK/(P0Oj85;)NPK2#"Q/5%m)ELW@o^Ins0&n8=#QZ.S5S!!<Dm<PEDi7@*p/NB*P9CiMfTn;ZO]10r^Bb<u:"qLKcY)OE<^slk
%Ne)RX[!d'G72Ee(rQU68C*Za".=u>7nu'sB`sAY!/0NTQ4Sj)p+9@drZRo96Jf*'<O/Kr.,=43R>1VT=KiX:)^6Op/Ss/]\%.i'q
%^81?VW2CN"6I<iiT,3IOEEhnH>AnO@h>M'^#mE1$iTY7!GR+jYIuHqh(ee"oD;hmTIkR1\,EM&F2Qfm;+hl?'G@VcgUhj>%+O;0a
%L+IO9IQZ]8&NdGjiut0Ef[SC1_+:t+ZdQ2?@Fo@cd$*=o6nr[3jEQgD@,"<dV*MmtV8fj[A$I7j4B@3"\$IdK2*E6lZbhDD^-pRO
%iSj2AGp60:4A4/JX>&V`:FS\Vgn(m-M7=*&23XSG`.NiB9-o,:i#tdP>l$/_*pr4Aod"c9U3pU#%QobB7l&72#9F@^%b*%`!\^0U
%kf"Dqi'f4NWW[R"q8ErBnDEb8#iP.`r>jB#:HX@0/i"Y1p>gFrC+")VOS_e1_*b'5,9&RDeI(mgSIXMX0]18dVMn<0kRfBL`b",B
%,BTYe@D0iIa^@d']ecmNkqjLPhAO7_aL,/qmgREK6doCemgSK:^$f!Hmoh*s^QnL&g6%'?,M'KX9);.+]kab"1KMd_e9d:)BZPGM
%@P/7a=:+GPc@jZ+o%i8hKR10`h&VLi-ul>)G;oXM0X;G!3tdJ9K6p-D<jCV:<OhH^UBj)'V7ORM-JdU9l)mAs+i91lkg#R<E'>PY
%1C-@boj3IB$mO?4*AH=2"1_l`N0s&&^kgEp_K<iW5e93l\f41p9Qq\hWFrg&a-!:30\@8l8kSiFlHTCj'3#PAL#bG5lmuCc]jsNS
%-Xq\C$el\oL!m-HG%Z==bd6u(m1*$f+>.b[#*u'k^8JSq6o#lSFE`#BOAsV"G@q2%TA0e0*Q19!<9W`Y5S%+Y4l;eRf0-+rL4"1L
%r_J49/)M@DQ<;=-q<id)KQNkAh&QKf4K7*Ch&TmtKH.>fh&5csOb[krG6aKa+lcM43smrtb'&OZR>O.>])t;3JQ")TSH1\aj.@R-
%42V\<Sun:GcB,C5:>/$YB5jY4!pH$>cB'-rKV%VW'F9^kG6^^?r-(<Y*QkUC,@B*kM!@EP_BI[)+nHgU9OYOX\f46-$JQS:7)62b
%B"LEt'q)"cm*:](R%0X<GDD81iU'-WGJJTiJP`p>6I;P?Hb):*a._@59Qt,?4:c]$6?d&^Z1cBKh47u'WA?]nST.iO;X*Tln_tT,
%dbS&h5dd;`]49(<qA$G#<#7RP`a4Us54e1mgDut!al>6f]-AL'W@!ksNnB3tQ5$bhO]\qVG:-i\e<TI)Io`8TPF':P/l[a0CdDhi
%FE`-@$Fu_7F<ER1H_cN"1[,SjI*?cS5"7%QgRVcWK1&JWG))2OSC&Ri4010Q2-74JeA"P&\?apnia]e=)R8*A'3SSpL$]@P*"l't
%Cj21_W9D9<GCYB&?#+eq4('cu]t(B'$(,84b'$9/8R]roqCY%CM2/C@h&08[KXa?mB:Mn-?D4u``,n`*e(kn-_U.-[dbOq`9*c"7
%h&Sf*#bEoJ])s=2i-Z?P4-AI<6?h&=3hj4g&;9Nf(:lT#[7Ncfd+q">$<lnSmLG+WQo5<-*V:DPAB&_8fY,?c=6],]0gnsle(km.
%K8+Q'm`s28TjU>XK#:@#_Q4@**Mej4<VZ!,*CE,Hmgf4/d4*+`GM)'].(&L")/kGb<Vc'A=0B+hZ&g+P;[bhH*Cl9H?A7jn&CA!C
%.suP;s5\X0I!=5CA\*rtmL4.1a^eHImU5`JAjmKL3s-/Ol)d,+*J,0Nok\if&J00/OR*H)Eb88cXudU+>"oGKZs2gk#%l)$-hLE<
%-b9B^Ls\BfcQ-i5R-Y1)*TroM4j+iS!cNCF],1lNh2pV+.<?nOW=4!LGpW8b+h300a9q,C^E#WfX:$]RG,>;t!kaX?H96qNE*qks
%+>Mpr0D'Fb.>qq/D[3Q-RB"Wg)2&QSHsPt'+:p="&\T1hKJCijD?me+`1Vh>N])kPj7M\]^fs3a=!b<`-1kNbmFI<f[s:I"\UY0&
%*L^qWDECt>Ua3$8Ftb_+<OnGA9lV8;`F02Z7jJ<_PnS^C4n"ora_L;g5oj9o\oJe.Ul`oQX/\dZObZY=Hn.M5r88;(\Gd`(g3N^(
%\uu9ZOs!=uTq9qt3.$CR6tNg5j<W,&)B(h2Eb%2RLtRfm9`n]`bJ7%14g?"NIA'$J`-/@D4)S)QfFE%76J5=om9mO1a+U63YoUZQ
%$"BXAFq?&'acP-"F@rW:RI+)bD0fMM;cpEI]QX'\P#t^r46@uH=Kq*Pq,eEpNgT39=;QVYRI(-N=ZQ!T9+sg>L8.99&(2=u4'[U/
%%%g5K6m]8t%.C#-?9?%I'SE!7(d^lbM%:h;4'Y=g]^je8!$R$NL"FV3m_HdV?9;86*n^G!L<'p]`46Uh42YT_f[JR%Z@Id5C$bo#
%Rg6g4d+XnNj^2`h$kX7Qf@/HActF'RLt3&FqE?C2*@/1l[\pNc7"?"A[!",T#Y7j-m3'dX)l9qu`'<P@EQnSmb)N+Ag)3B-N*W-b
%KDhZU(8\Ek`!Cp^db5;F(1TM)[52349*KDO>sdhQ@)o?ln<G]!?Wlcp.oD+&=m]TuYeXpGCM*oSh5-^oc2`L4./#)EE$=`ihsF?`
%9r$cbQ.6?WJ\rq<G)!N2af_l%nYKdW.BI^"HAEYC=R?MOC<[*b*EjpA/VV\LctaN))Nrf?/<%K#e;ia*R!+bENflk-(-SXfWC5a"
%e.*jT(B7B44*h'8e#ned_%mefE?Va-2V&%PmO>-++[(3ViO"6eS'Y*f)+u0VT$bgpJCT;f7QWs?lf`[b4++eWS('7JTqRIMa:0$S
%.&LT/N-:GI#e_qG;:>9I_Is1\]!Y./:-XrYUHO`hL5^9e1B^u4m>OssJ#0M.THe'Wd>65r0L-4;:MGUE-d2*2V]DrA.ccuGc6,?V
%j>A_KL3GUgS9+>7FBT)3U9qhs5VcsZV4I-Onh)GhSKUC61b4f638W`PAjC*d7I>Zs2^Yqb===diXW@%"FNOb_(*BIfiRT!rg-Mh!
%AYlee7$u:.XW9]q)/pJ`g>T)h04&njcnJM:O*U,;4S"s?^`O!.9^/BN?9:9-^j./.4*3aNRHUEQG#XS,i[_BZ-BsnkOOaoi/iI!2
%CF?:&T%&di"+ua];EIQp6<>S7*T?[Z9KXN,_ktHOTLrrhcP`]O$`T\*-?$7AUio#V2rm:VUits/@9OY5g6koRnd;E<DO"bE_J0</
%*XRM?XEOARV8#r44.mFH1Th;D$'B`I/&ZV.<B/2pCe#0A*8N*L*UF6m"?.[9K3]+h%L]N^r-^n.<f$.a2aNhD&[<?l0piAMM!a\h
%]Va-bYoOj9AAB\5G3#D(>"?Vr2nkO]a,&@X#+$W4?6Qb04,7?DQ.V,)q.(He&_j"BT82l-C^5/`%*8#i`-.HcZPrB!M='5LU49cD
%g7d`#Hkhq!N][p\4GtFn4,Cjc?'t!fiRB^!':E<_W_"Y@0\atdp>5JdG)!8@(OKaU6Z>4kDBiaTEIne-:7:K?iBVNK@^[Kq/t'`f
%ZQ7kRoE,h?42R%+bmgf=(iV97Z<nAZ4%P0f;jm$KCnC(0+g[_NGm$/nRI(:HJ3'nhZQ4#uN7NrF$%f>?k8%Yk%R0,s8'H.PpkW5@
%RI+,Cc?V3T[R9kXG>7@jm>)l!Zn>:=^_%2&TAGCWNX/%k%kPqJ`;(U&CLOXrP*%kUaD=?b#',P9C-1#3OH$qmgYk5gckm8'm9&i.
%fq-n-P?mYq8(;_C-K4_6C-.P'f2LGo<fmfim0Meu^nXM=7hd`;ll&dV6/7V):RUU3I4e3cL"VJT6?75g1>?4o6rt.94/!F(]:R[c
%f3lj_M=$DM*m+.YM!at8?DkGZ8=u5;1#fTN2&a`3_J;ZOD7\a8YoT703".$D4/04tA$drEd90^'WGC$3B!QZBK\;A5bsHs$J``*E
%CAqF5D'oQbQHpte*U.C-e5`I785d71l4LEE;*,,CZsX@UFI&2s8o?$K=IiY>[fZmCCMYK2SPX1"!PR<h?f3i'a?/##&]fm.ck3r3
%Z*r<M6>n6BMP[EHG0l."'iVCh16N2'\ZN*jOhup_Ipof2&J<E$8+^t8[?-&&V7.]>:0U>!)J/8t<AL;Xj&rrl^E(e2EV.j/T_*En
%/\V0ZIAHLYq*Y.Gs82V!h%,"HGcpd>&0Uc,X36E>Ef7)AURjSFq=4$Rr&KDEI/MAnYPGY.rcW\^p<CeWXA?Q6rjpJ6(1$NeO.4,O
%++Mck^AmldO5>?`O]d)2)S[2acWbes)h.\!q5=8<Z<nDsn`Aaps/T9bchDkfmDg;38aqQ_QjBn\Dm6?GQi;pfYFG8e3UV>SH<1%4
%!\]k#amVOg83V!8E:gOYbYOD^J-$21/e-`ki!jC.?n`QChE[,HDd7\iq3E\]O,ef,3VpV]<^*fDieLmOV98*UK0STDp!r?&<5.TK
%9Es>B(6rf_$i/E@qHJh^DY^oiM*-j=1Lf'30iM\A\Tt(1]T"Km+o@'aT!-.SFFSoUs(A0b@>h?RiRsME5L^*V`37R<Pr8Y"7/<7O
%?Q5.BQ1o<5Jk&Z\8!O6ZICi;pT7e.reCZID/9GAKf$#6XZ18?(Y29cnfs[7-ajA:XG=elR5[8%L7%HKHd.B,oI*fQB+602<E:%.7
%Xrd`QZ>OnMKUifQ-DXDDaP7^@`uidRDu,i%$6Rk`7cjJ$7]__Y0&=M>S8_$aHp7OhL#\5no!OMb]m:XBp0M&Hok[Xr,T;4en&.nc
%O"p"'^,7Be]$bg<^[&K2qo-OrX6&pV`R"Sm\%;@DD\/eVD23(0Z#Q`9X,,%)r7#Wi)asW7O[%rW2Ei:D[NcNXYJ:*bbM?>#o&Gf1
%6^>akW/n"l5K5'j7@V^EaM'N47(mW=.S,`M\U%\Hf;nd5@JR_0Hdt?WLfU,7,[kTXfdbnOCk*b-nZu4@=9!alIoL9Q_0#LFh`"h1
%F'pt4BfL^Ls6ZN"%6^D'*=a,Zn:%X3H<'%+@OP;ZdJDCe&VHbVe#Ta$1cq?1YeZ%?/trg$p0n6-4hJf4B+IN%n)L%LlB$4p9MHa]
%r9iJBo&m@Nr2>Z@qR$51e,.V_^O5b*jmsdJ*a@_br9:Q,-i\R:IZa[*,_+b&foL'TQZ$PTBB0!VAG)D?QY5L-YEj2KY_u<WH?%d@
%&c]HAmIcWlr$5(&Ii4b(L)9f/ErK+CHFZ08l/hT(l_%1%=oO"ni?*9nS10HnkCe$VF2+46gOppO[_!kkrqPBoe*H&;[hmB^-QZW4
%lg[9!?>tVrrSm2?c%NNbY23//V_+HHc^nLYSBrOpDHDhnr3&>4IfB3*aUdP--Cm;lclQHaa(\nnD`Y-`C;TAOnDhW[je&`Bs7:DZ
%EB7YoY$A`BJ\HS[p#GG!]3;poHTjmWQOA#f*.*$:0&F>=qXjXFQfSq+1;%ju6hL(7:Qso-NK^tlD,u)[:)\4oq;(_sp$"@l3,$SV
%?MCq8o1=Ql\pC*Vg"$4G;[[L#^6X8\D9rJ/Ie,PcA;It3I!^"Ir6*X4l^)7^'=NFL.9jU,^8nfNMf&<#g^^s.L2?8A5r1-#0<\-R
%0<Z_0V8%,mlfIBmX4N\VcE=&sQO!?oRZY(/^o(Nj?S"C1O)fSk%[rH!o20Bhb&'5_q=uGj*)/E=c6p/N36=m^XTs'5HZ=1k5N2O@
%bHj/!=`-FHc"FT_/2s3_k-NhGK@E,cZeQ5k#YoHi)R8Jg\S2`CE)&I7b?pRuhn;-tIei:L\ggoKO+33uj.C99G]Wi]MrcU)Rf,@b
%arFa%X*4Gdrc[$kofGre]<hY=Eq8qKS$S<:j6`u'DnC;3FF-2_O*\OX9km9>VJK,UGIU.;>98-p]e3[)GdG&s@5T%o>5t%.431Dc
%+gp@TgT),<Vp"O(:X5jtAB'u)C:]tR`(--Ql/ha&e\D(ZEr1,u["&'5Xc7AWX:ft`1Z#cNSppW]gU]C5YO)I^)i];nIWG,Ro&@pe
%ai0KFXl$Fjp,1;<pnrVU^:[S)WIb""#C>=LLZ52!cq"*tTi:r7LM-K<W>5<uTeOq"A%I_1QSuiBQY.,dc_butrqLH)nXV;_B=bi!
%UsUuDj4X;]oSsuQ%lu&Ahc&phc9-</EpT8"Qsclk4Cteq]Yh-4@;GacRfd3N#/Aaoo?V;H)r,n'_mX`Kg0f*;O$'!Vq&OYR^#'K!
%Y0O1W^04i=)46'1)pcj5^H"=/H:",\a2:"Bho4&k(IbXQ!W@%ap!XO:H'$V&oS)uua5]J#@a=P4Z[=Ymd3c54hd'oZL1JVoHp3Xd
%%J.)-R@[_kSf_;kQiB,jD"lTRR*<s2_X=Igk@\_29\4=DDU4c4,qJ<Wg%iaSd.0JnbU*bB_8Kl^9X9#r*tMt%?=(<oH$Ol7dtA`c
%&!%lp99%3=CJU5I@k%SN;X#tfYP3)PH47?[O$I@V3$DmU39tnr<>lCU^^iC4G1&)2qnd$DQraMrh>cLLbOJCErIg^,\[EU;nR9r@
%n*P]fP`=kA!=H9s[gXY:eCoi:(0s%[D044Kf`/%8+"'a_K@quW2!-FEC+##9G!\1Xl-#9KMrjbYbOai[1k3^F/\>cTk7]%nGAlC8
%/N_g+^,UK2qY]Drq.b1prT2/eKA:L97JUT$p7iN(Gl*m!a!l1-\T"a;aPQA\'AQChUXieCjMst#`ui6>@EQY2MFIIX7C-@X1ckN9
%h^4?%^+]..`M<`qpG'MaEA/kY8n/ojHHLnoWiO<E;_k=sfri>8_GFQG:>(CTGLqR]RjBub!J?SMMXOWLgJq1tcRtM2'6;/i:X2bN
%]UY,l4LfKGF)8_g4J.3B,ZjB5)-9J&JSoDLan+\.f4Vil)4^]S?+&tYr7@.i-4E`-FKSEB->lV"jfY'E@U]]+MmN$HBrS8u]5,X0
%ji*H5#7ft,2^Ghj-JdV>>r?DL'fTr8H21NX`pG>t?bb'R`Q?*PX%D@Ba+sMC7f^d,Un';=p>UUGqNs$8VDRF3g_U3cM)&c^p3g@3
%C<F?@a-;H:"jh&17G5@qq,-=L9Nb5JZLo2^0$4=Gnj%4m*lUT0Bk?X\0$<Egb!h`HQoPsoc:*"#]?R+p755lL0$5FcZM1u[S;X\N
%a+YreF!qgsU$&.D)N0#NlAme=jn(:hU.f:FTre+fN7&\T:<fT>]S"efj]EQ^Gi#5)YB_B'%rpWK#3%q`@[CHkW:10Zs6C2&&5VDC
%HhJ!kir1gSj*)nB5E?6nqk6l:G,e[5L,(RN[CbY13:!sY>qkTP=g-(rm3)&TT<>J12V2P^D4fA4&sIFgC9psQRoZ#<[FnZO[G%_4
%*fF&<7YH6C6%"%:\n",Dr8*P%5m78OAT[ZXPicO6TaU!o1bYWOS-dFa9ZT\f7XmKK+`VJgXt6jhK-r+K^i.Nt\NKoSr8b=/G#7e?
%Dfba@iq`/afu8-;b#'M8lfH7](R*c+#1r9XW#lTeb+%!J6b0lj#DIk@V@:f[L9dRT4[LieX6$D*Xh?rOU$Mq"b&'Vs]cs0:7dVeO
%B=:s1OT4,fo)F3*J'S)m/H9/K0JtJp4+Z/jnR^TOUW5f&p`9pV]?/Bi6o9?H8c7&+o-("$n+1Mbqr5A3oP!]/b-uQi4Tpgh;t4l'
%lLj8.Hk-2Qm5@-#48%8Z'uAAI\qAK6'Dt6_:K]D:mr6*:E*3+P/Z(@>KAWBe4J<5=;OL!kE;Md.gY+Z&K/jWOFWe<VA4(k8pVrDt
%Zg3s]QIf'DqLdTK*sd8a;/DDN(l5]^fZob2F/@b6s./2bGAZFirjr9j_0qfrF8YbDikLP;$Y,4sDK!lAs*]u[RcD/(r--c_?WrMH
%!8HYBM3d3BoA*>Hd%3>-k*YTWo:9C*GIC-l=J]X`?G(]mI!U(#9q$thF):6(SQXcI(X@4<J_imun#BC&/^M`rJ%`O0k@[#m]Zq<U
%3<cMJK\!9^YVW=gJgu7socg"qVN0F+nibTQqnCPEnpWurdc;1g*jXHd2LELdB!7fj@V65)llhi]A7J=m_1Xt!2jme?TD`l>>[DfD
%Xi0=6Gp>NMl12/fc7[G0f:Q>#T7;$0F`O`EY!)[.Fof-0_4.ttcbE3H2[uqGfd>KLB[b*'T"TGs]oAY&[(OPH4*K)#ECNI:1MDuC
%k,*ML#E<Aredc`SB4^^kI1Kq554#]KiQ^]MBf8Sd*isBi8*L$fAt?C.%Z]37>P<AGl.>q!T<GRYH`%)A\'0l!g$pgZ?=q7$m!+p=
%0=0\MG.cVAmD@*lNYhB*d/Pj_?M=-s3]g[9ics.IrcgPN5'u<TqG%P`#OOggdi!W'4VEgXUA!!.9g#r/BU>1PYe_Z`!!LMR'Dp13
%I0Z7/!gp7]?k\T\q-nYZh>Zl$NtuHhr9X9LPI%Cjp3C`7@tcgZNr(O@qn>'S"sg)1H>;pC`B0ZAkIkleF)FHTH<^_LG8SpLI;)/X
%g=8%Y?uV";H[52[o%0;*k-7qJ:I(J>X7H#),WPR>p'F-LcaW/c;'OIRG;lq,Zsa$j.PKNEjg"R6lgi#Q2p6!<L9'G-M(8>Jf)4-9
%j+hj`GaHg+S;2ZD)jpp>K,i10bU9bb32%5Ar6+I`o]:*sk"ra1=$,7P'.,PKM@$[X$YiiiVV"^,1nd*lUVH=tQHuaIcR5PPl?0`5
%A'A?(O3EXsB0XB:SS8SjO3p,m5K8pGb^PMa4m=$AR\0NqZQE]77V;@(b^PKQnRHq`a%`)NY"pC@.6[Crg$(Yt^?d2KnRr!,aH%]e
%Q@HVPrm0?\`T\(hF637([I&'f'B)dhgg%L?p%@SBaY/j8W.u2XW_kFP:@]d&Is$#pV8P[f]<u)?nN2=Yq!S"FqK/45D<1-#FalJ7
%T/9fJX7pm.4a+75R":!hC^)Pq/mh>X<d<<c=u(ZRjSEnS2S%UK.ip!?dL;GK[6ZTNdXqtX%$l"qUtZ!UUaZP-Hc8V2Sb)"sYX&f]
%q"`\!Wup5jkIs,RVr/gNFPdVc1[)r?D&F(kmF#!][j&$/;*)[[nYd)7VDMo2e%MV8@8?OM"7Q,oV/nW<?G.NQ_m]FA&'2*,*&Wf/
%)1S34q@U9u-fjD0S2^HD[U[/?MuVg,?i2PDdfVhX9iDGkBl6,Zc)8,J1q+PsU%pN(TB>:bgl85B$0R\rJ!ujW6SKVEp>I\a@A"+u
%0K5n1c,[AC<=JJ=DEc@ja1;.2c@nc2S9n]d_1?K-,N^6,4rif6/YBp@df%5Jjn#+I:8[A"O8V38fU*s3*-u3^L>AIr-Pk&N#S#S*
%j%@PjQntn`!TH`<Y]5^oH//ur`brG?kLkq1.cPsTnbhJ?kKanf\pSpHH?T8A^J49"^Ua@2I#=CiYM7U?S&i*e0^EC]HOaU)r>?:;
%+BQt?JU!-cc3Ne!4IC+L(p3Ld5`\\_QYq0BI!Nk)q=O60I,7ds$*/::C;N\WT_e*KA<N?:\p@G[qXrqq,_C*64+D;"*]@iil4(@?
%hh4[d2fGm+S=D40%bpdLq#L<(RPC5&p0dTjl&<68gu08$+:^!Lo5>;u_h2`K[KX/IlK%#UcX+;U'VD@+m]&ELdQ>8*Gpr:KM_j&m
%c_a-ts7hZt67)+p2o1-Rk%;eE[L@>XC[]3gHSF$eKL8.Ap`7XNlaQ5^I1nO;o!NuDkNg<Ljdd=Bh_H->ZVg@F7aZ#ch>;tTVec(#
%NM8N*`p`^E46J']\Hi/NNM+tXrN8LD@3betb(BG7L[/MD)n*`Y7r@bmh1fe)0V^P9]fm2/]^;.b)pGJZP/idD3o,k/s81fte_0W=
%=3F1B$O=((StB;<F)n_^#WZg`H`YTVc#Gtf@Ga#a.H@Z$S)\TR[J0RX*DaKBhRNT,mXs=7&(-"lP7?r\dIT%arc#m;6,2D%B>ii)
%i-ro>ZFAhj*+Z:!k'WYLM.U.iHW`t!7fV06;jH-%K)BW2i0=Z\5pPgrf(GAWpR<,-\.2BJ^H0JtRfJ(]<u&7"PMQ&reX&3PCqnN=
%j"gBN/&]KG=2aKH%37Q#`fnFCP4<)"=_[>%1*4`a[$0X"rLW:_GIdP\(hDV97bXW-C'P;$H#s@9#UNlCrq9`Ue;keMEWBUUpF=!Q
%@7NOQH[7YJ'<2?LD&")(62d0/<m7u??S&D[I!50JcC@61$JWN&=9%s8O6=]9TB^nG?+m;dk!qNd(Y>;:?CZIkOD<i)/XjX@bmnBT
%rT,`2R@0>n+jI=QSL0-]LkClK^KmC8]Ql5c8RW.mr8"HC]f4C->RN;K5'A[@A=.OU8^FQ#9r#Uj\'NCHk7c.QcIY(qnmPEI+6X+#
%8:pIeTE!Fu5Q'd*GpPhP/3rjF=-j`\jJNQ!k_[HCQTq$H%0,ng7piq^cf#t\qsDppQfn0KnrR5X\p1Z2EW(ZRS&OP4J(-$`s7PE5
%hNn1!Mm)ZSP5Y"NDtr`"k+DW7bC3`aB(>!B5Q@ce4O85$s6[iK4\7B(,M.1TBRT*)_Vu;aaWJL_@M*3DgE*bC=`R$[2=4MuRDgWD
%XJ4(K7kSt.0mm61<ZY?".MB;DF[qu1G&WiY)kL)arEFWri9T[gC*Qd5qXig/NdjG-aZmg!0i^F5qZR2sq;S<QPNQT3G[&h5[m+Se
%R`728/t+"$>+<8PGOpr8)W,7QbJ0,0kW+"N>OV@aPOaXG5'KhPI;FtW9lY0C]DDcGi:r]"pTGFOI!r:PhrI*X!C)sK[;gbYLlibk
%Ht^),5BO/%p`\APK3<SO1*5$%QTD(Z3O6XA&Y[Z_\KlB:dlB?"U2ur!k>kIJgocKJ0mo@Lc+%Q\mn_+PEa;<1OutVQT@426ql4?)
%?1hY&nY>g>qu2PZqdQttY+O$GC9<<]MJhp@QqTFO%R-^.I'U)`b[u-&Sjf]d9(0r%001';-$asB5Go=k>obhN=+-Hbr2>$>f:2\s
%F6[-4rp`L.Qc]4)o8c+nMbj>Vq#3K9bG[G8;"]Au#)l?,R`Spk[9e4-jk82haI@;$]#LrhG]i'pk:+fhOj*!2U+<U.d!^oGJ2_`d
%iC,s$=eSTF=B9U(H%m\R0?JDWkL$W`+5%q.9ANH[//M@TX2`),"u\c=QdnE8r'Hug)QJK#1\\7`.IpchGYrGBqXp+o]!>5F/h82E
%6T2!=4C=o9'(sUTs/IF"Uj]!;6XJQFkmS9MPE]]N$7Y9^f=(LoX1H@4r^p>"4NT/b%ML8Q:A/u04>HZ6D.@^=R\o?="^/BX`\"pN
%6Ys'.$9g+9T0Li![l3'3VkXcm"aRV:[:sW.qX3f8T)@GmLUUD([,/iu2KYPZXkNC8ke?2X*Gp5jo6g-Vknd]UN2_r;B#*U*2WVCg
%4.Z-ic_D0sn+'3hU/MMg[fgB?#,@R9ZSW69)coLF8Z=+k\o_sK6>ANI]ff!%UJ<W@=fZjCA2:L^]Yhl0?/!k&o>D!mN+BY<o!E2U
%Y$Aq_b[S7M%p@@i.CJTb7"0W'\$e,sW>OBa#I+H?d.SpW>cFF^:A1VBeF*r0RG-t4G^@9_QAma]Rh@*XQd+8)RB6,<qW,p`Y&!WU
%ZJpZeCOmk\k,FI5CbmMUK>][X]LFu<"c$Eng$[eZc5OLZAcK^3Xl$\!q;+49,Ni]tmn-XCp,g"^Gk,WYmt?5%SN";9YP%G@rg+_4
%Z%"o#cMYirNLI8Z',RQ+;nfqi^3K8?jRmQ`MH9TrE>_Hu+1CS@G/[S=Znnd8(YFilbA;0Xp%m?If$L^/W]W*]\%36tD=SAN&B_Es
%GYsR[<UXB<2lU,HQ^A;G^W3)R[[\aA@m,NkStrM?Z$^OJOh)i)IEN;X4;>oMh^)n+lWZ**ZSKbZQ0`gBAok1TaqgR+@Ks7fqQe1Y
%2Y^17MbRm_@beq*-T\jhe:,/@OX2V8drecO=Ch6.F#+9WZ!U^F\ad,Q$QhDh\L(,GCb%T><V7#pLI63V4_gdr>]+_O/HICWMjYTj
%4CWaDm'I526:!F\%o^\e1[>TLj6ucoj/HtA5GcFA4`?uJ>81kBa"7ZB?d[]@NJLI`dfB8oh*H?k4&Gik/G=?14Y,!+]-pmSX#Fo-
%_+:Q/=Snb(\(DVpT+5M'VP,JGR3'Ts+)(5e,;-8SCPl[eH7u-^^<CN*_T=0umjC6]GjBuKPP%4s"4YIADUt&E4>D-1D,M/Ta8"]T
%cVI?o^A@Qo\kc2&g@A9CiZ?u7S5(mH/DctX>*EeCr6W5MaK)bkHVZ+5Fg>`P\Ud?KC?8ufp$/lK'7ZPuH"5S]C>IU')anuKJ%#=g
%EYc4+c?dQ_0Qa1NNed91fq6K)BmY>Y$`2>KoA[>PDnO`r]k6g!n`Ajmp[dn!ffthdh^ks;/5NIgqt#;4/tS]=n*-=6'me?EI<0FW
%]tCrOG59V?S*MR_qesILQ/<Jr^;^+Gj@oFBgZ?Pf<4Ur5UITF`SY$4AFRI>e>b+%XJ'6aA0m<ML^r*js*k\Kj1pC;.J\^;QhOZl3
%YNDtc+F!`ghlL*\Q#lDC;lA:q5MDHBhjg7_0!s;c2S7=J(YX4[U%.WXl9Yjt>\IR%KbjC5L$$rkBMI+)gu%QeMso8OQIM1R[BeVR
%e_]XZ$e&?omD+F!p\/QETl#(Y\Bo&7Tp^[UTtuQ_SLub*`J#Z%rY65Q]3?(T45GUVVRk-o?2/@k[-E]e2u'\Y/#s\8d+"7j]?PQJ
%J^tSA>&6,Xd&+PLGj7rd54c`8dWBYUT=p`k/8T@!`S#Yt]?fomIE!#,]$]a80lV9sdsK.\?4H@Ss3(m6A%%R1AE[&5?em$7=['>X
%KW\=a;I3oac[D?3BufV?(R6ALM6I5<jGQ5TL4R!;eK1u,[j(.L^_IIQK^N*UYg%K!<to88du+=`J[3M*IZMoC9kp1*?&Y=j,C,i8
%ISH9N3#snij9\sD[p9\@/EodO+-t5<7M\e[g1i]1eJ;D@U2=CmM8Ha<MXWoc_8dt9?H=q"490e&1EO0%=Pp@n19=6LRX^Q;Me\(D
%>aS,ZqV&hmHN\\<<Lal4\#'XJ(s%muEnH9EHn3']Qu$oOnql*SY&qeM7u,mkZ-eJ8f26;d=1Y?LY2-)$H,olU3hiuBbF=0PY>9P"
%*1_/k7q6*eZE`!FGD4PS,&Hkr<ciV9!d@"RZF(jA'-f%8NcQ7gUVbrHMY#DB]`fH^F=N?G;:jFO5Amfs)e47RqrniM`\r)XD"%ep
%mE&t2$e5kqX8^gL-7`\(ef3-uHt4r\[To=ed[8gjl6`+rjPpPB`qhT1mZWe,qOLC5JYNok868fWWN%./AITW[[^0]3OW@f_qu(m3
%i6%-=^[.o'4KGXTR$'&0]bU4H60)7BB3hI).LtOA/okb?N4*@:pIGRrOkOg:j2.mtMOlP*;['io"?EiG-*$8W0:_<[Lf'MQ$a+4o
%%o(TsFO*JM<_]0_COut8C5g[RM[5Db_)/;9*4$P9RL84>/pa%==tYfI%.dmXW%d-TbVbk#>kJ,"&6?_H%#*=ED4W#m<(5?LbOb:B
%C'^]g4SeK83kqhZU9%1Va+6>rP<s@(:T"oh[?/lJb=ur%V/*-+arMQb]bm?JKcIKE>XPg=A?DXo=4Y(PXYq6D>$"HFXXL4)mr4D/
%0S45$XphF(WqG+K'pYt[.bfq`c9RcW;'$+[JlmJh]?YOS+Zp22dlOBIPpPLr98ee1l5s9:ihN[mo^&N+m#Lr.jm8mPb^TEA:I"a@
%hm]67D=Z0Q%=WW<m\ff+l_h5XIerb%rUaMgIekW[n!j7ID=Nt5Bn#nrPFm<pH]KPh=8_^;3:t\/m0!1KgY_CrDmoH*h'P?LPG!-_
%Vbbe?oPq1/^3rgBI4R#Bp'-ko/M;*_H9XRU(k(Q7#"O*CWNOVZ4S<oImIB8hdT%qA'>!Jbm&GOo=2!MPWXlG:IWj9!Dl,&OFAjcg
%9lBi?nWQYIRV>rR@"[N=5B*W\8N@Ignaj,53qShnTsks!aREeANpXp)0=(H<quNkOY9IF?aQM\LDB&FO]"Ah,?VEZpMhQU1m!sB4
%Xugju-KpETCUMrkbJTa:YTe`J1YCPa;JIG^EKJ,Wbr`RHg,^/@eC*u.<u#(`KX('SHp`j`HJ+9rlF0pkd5<E3>Q'LC'*:t<GnoG;
%^*6hX[U,R"3qZUm1LiIhBR[4'b#Z7)Dbo&iUB+#5mgZ-6a25nB?_*M9o^q,Rb*+:oWb]LYSoRKHne2-O3i#VdlE\Uqkp@Kp5\<<;
%s3aKLP'*9(lE$8.M`MAAoNSND4.t!dOK$PhT($"O,2!t)`bY9T\%7Xg[P9[dC<U9AluA#/jc`e,oX$ST;!s)@OrKL"dc,<2rQ4QT
%)S1?Bd&I#Qp#k3rJ0n'?3!*Ujo3BSiABP8@%41bC`$AkPe$!.L`u8K=40f5uY&uY;,_b1_hYQ$fgRftufWFDn:$0GtZef'SG:Lbe
%orDsA-W&nd&;AC4=duYQeg_@(fUB#o`Y>\Wk(37;mRjEeoL7)`MX]<mB]p='/2)^WFX%f=<7Sbd[-An)TH<2G*NFS5H7u7,$Nj+n
%2/6--<LtduXLG:rf:m@SYKP\#FKo2^<U%MtF:mU*rJ'71dY6`)'U>)2AAn!_=M#b^q6jVti+NFs?\<3+(X#EP^MU+-HDTAgfMc[f
%26/#NN#@;SH1JTs=uVqMApn4U@s[=\I4Cl%d:B;tC'6'A\4-48<V_=,GGV/d*umh2ms"K"I'@%k)AQS*I]Yo7B$D;`pn33Ehjf3J
%qa$q^^?[Z]&h&5b+dN*U;:lLXM!G(qVV)MZkasO=/*OsQObL:`=VuV*mGWcI[.SlmfH>eg"r[?9+G5)<5mHSWogj_VT<*eeg/TN#
%>e)lW@)k!W^ll8$*q-JVT+%J*K8Weu&9]o61&QdV3(+)2f/Q08g3Pu"O%9]VBc*/7%pOlbk`NX7nr5.#MR4"hBK,T_47&k2W1q%O
%2-uDGit\>o$6)0R(pqrF:N#r\Fnr_k0Y/jD#/t@>W\k&,+UkBE10CM8.$=<4NmW&r+3m^A>"k^+GU9R;%]#B*L,GG&)rg5L!un;a
%_[VsQC+7$Ximg$/Q6j*sfHI4F.n'chVJo%Lhr0SrUCM/L8B,Do+na6CTKrg/B"%t+g(NcAIB;Js00Pp';FW],l4W?#%pkB[r0BlD
%M=h?'*Nm?ZL(t$2DQ-0_2:=4X8FS.`5_Y[jZ$qle2Jhs'L+VAE<5T`/Z@oG2h@YJCO1m;6ZE.(.*pmEH7m:0`6F\K6d+-3ih,'KC
%-"au<8*Zd2b`0sj\%Qsu1h"RCV)4m,GGN-8GJl*'Njp"rkVp:Ccss"ILQRXDnS7hDY(o670K)r]8>pmC;W7R+42aB0>A#5dU;<LB
%%&E#[XN!N:9eh`0ToR)Ta$>g:BEV50-U]3-+9p8/1]jX,gL;:N]k@gb&-BE>996!b<'h_9L-X>5h!PpZ\Z&s[ossF#NV(nt.J?N'
%eR[IbC_u>q\)_+5>Gj36*j$ZgT:D@(c$MGdR;qMk[/E(lV&sODQKI!F<m^\c0#Hs)T$lAcGC9#Ri&EQ!=ODasR!$!oPMWJ8Upk-q
%(=kQ+R"t.Pi&:<Tk2EQ+rH26hhU%JPcTAl:H(0/$l[e"9I*@#B(*@V)"4=H[.+A5`1>>6DU\Zb5g)I\/H\6NXNsk8,%<h+JS,29"
%pB>">cDQ\Ys4S"*/,8]+qJsk5*kldB/Y7$AkM5''A'Zj?Rp9ngN:%+L42^:-0Y0'!m\<K/Smca(jPgD?/tSY;bk+qS`&Poo@^/Fc
%:`F[&678-A('KY`-m"Q0Hi\bR<[t\4Wi-&M/q8@S]LKo0G/];GJMUNu$LYu=Vp:W>P#Gd:OgFs'WUj[JL5<3+^7o4Hjf.MOE`>J4
%d&i1s$kl.C<Yjh"(uPctK>Tu\/ksr^*Z/;LG(BI'(W/1W/WVP,j8/u>gjm1,RGQ\MbhtD/]3Mu,dClc3LMkc3l?>HsQ05:+g0tD"
%Kk"\]A_jMMr)9/)?hBcA!L''!Rn'Mrb3Ye2.q1/($X8Z,R5"b!OC^Upa+:I3qq3+NADWs&U<F/TWS>C:`mj3?5HcOf!(8Qm]<FAc
%Y.RS$(g&%SHDRk1@d9TK)OVXL?F%(>r_Ve/SmZM*<aiBsOC@Q<5Fce?>%clp)i7TWEL\U&!-FlA+q9QBe^p?$+?PZL@5=cQOr0V=
%T,qSK6E'4-;:E]M5b<W1gn9_qLlZ!\_bV[9GsH<MTf9R6j00n$VuE[/E;U"EH2kSV@g=Sil\3eb-RH+1$=9jUa/`SjcUXQT#9r*t
%YkG8)=ep1uNlWr@<7gDW9sBm.;d]"Yg.kRW)['J:_A:2O=SCO$49/Ddh?tup(UOD&E*D9)+/=3RrNn,U+Un2A[TSPN":jR)(E7_#
%k-Fh8*U#FF#Do`qABW/Bh,V5:j3[#Ei>5soH#IH0nm8!rdC&4=2!Un]*HYtDQ>JunHQ<d!C!CUuqN%XdeUR<CeAYf2ppDRBFA!-=
%#]CP*r)NfiI-B=L>G'5Hn:<0=UCiu(6?%QkYORTI0Ls]to73WN@Yo$YqRkjXT*MD5KfEkU&A@&l4-=lO_!S+fN?E-4'gU0IrK+LH
%RTbY@==WHXW4H5XKW(2W6AcA)Ip/)=BTc3XF^R]&-Gd=bak0e#aj8M=^_r5G4)Bn-=cq3Xe*et&'c-oZ<(-Oa=Y("bF[Ks`:8kE/
%a@O"bB8BjEoQY-RGpBY6pa-^M%R1045:qUnYos>07O`GQhW;<XNueT"4/ue0jh%.eb-PukDX8F^0Gc:/[@n\p'tQ[l[HR1!=S*0C
%^.?5Gbb?M"lOKjn:1^Nt(1CEGD$Eie'X#PacKPqZ!O<P<Qf=>O9WC,i+VM]Bl+G3jH$uM-)D-KSj?@69gHX"ASUPZjbI,<8E4ngD
%@Aq'"Ue%FJ)pPiSV%Z_b#,9XCm,NIF@[a=8I!$"^1OVFeg4B0Y3#[u0ASb,13tQSfQNm8?.dt#P;5;0T!&85GP>j`>aA.YSb4(cP
%\i-T(8+5^#WP*9K#m5JQ^&;FG/R.Ope'^I5\k/IeX7__;Gs@C#gC@eeD;[`s'frR+QX(J!SFr=k8NicOUmi*_E`^kLZ/L"%U'btr
%LR(=]O1cje$:5]X*b)jj`f&)D^8$-\4#e#?f8Gu6cm:%)p=:iSp/>m%D!=:$krBg+NNmt9YHR4=!Y^[J(B#UiH21Rs"b/$#&VIOd
%Z;EhdnXr\Lds-$h*KPIk5\Joa)XT9=lBf[:qb8l_Y>(La>P`"IoQYc6-LV]u5!Sj[5H765=L`"kija6=-`&#ra,JnWWQ76CN8I]R
%aPhi7n#?.nN[V)#PTR-L@p=KZ[Mk4S1g^\Lhb`@<p[RBm_6RfoMDqFGDg(jaA[UX-mg7-O%QD_mjuM3ZLR[1*\9Vj1`t$#3Lf$`8
%Kp`YM[=`F>.Y6LNL,ofC_Tcspa)U:/*`%3`7%61H^V>fhVBV%l_BB)f*\&L*hBpaq`9Ns%1tDKn2Tb9+VUQXecF^8CM!GDTe-\VA
%QhF"G##]^c*"K[u+9[(7\*`1*K1k5o<=$&tq09c?V&mIVJD^9"++92QT@-?f]adcge?0j!O0@4^YKqJPj,',pJ$8,:Al%2=mj%f2
%]B./bl,u*es!EfPSGth:s1]*-c(+eukPt"G5A&4@T,f\n6Y:M_bRU'>GKA#(s+cp?Ig`POXQ,]2KS^Gq1a8tk&icRr,j_&19.rmO
%676_Y=kG4#>Fs",X?8)f10q+VUY$kS7',dWP+e#[;hTE(Q1XgG[T16bUeM/-;P&SmW31Cs.<T+X[';"8b<=Mc#pu7@nZ>it$#.Sk
%2-%Y2;B4,a@SK&NEXs"`88J(gO)-j&jp_rT<\mn]*c)P2egQkk5d%in-8J&jah-EQ[pq;-Cc1iec-G8b\*gRX/RWW5rgQ/9=/ZtD
%2fX"62AZ(M"sChN[Ys`F%>@K%nro-44;k9pFp3&*:mplQdAY>_/O;QE_q"R_A,o%>"e-o*oM6aqfLd?;"Fk5:'ZeF5.+De4Cde^M
%?[lq2,"o(@6u!981lCQr9o%3WEg6K#j<`R=ASU=(Z,3FE>\5,pbSu6Z(Mo#9PH>ON%eUVnK6.k5>:gb_HeOnAJiFIq<$p@gn[7$-
%A*$]"Tq&kYi3H;?'B**M'a_GGRd8kJN0bn/P-)$q8$c4I8)\QSZjG#Wfd8a)FKW#FaP*BOXZ%PG2t'Rs&@OB7V3*5i/X_P%I#d6F
%Z+?Z5KA$*a^@O[g6=KirdgrhY1*fEJD+Xl&IP=[E4'fR+d4Mo$'#mC2)QECOHfU=79"rLarNIoI1+DK%]Tjb`XIW$Z9Pgu+-TPXZ
%`Z"g4]KF^A[S])30O%OZ;]Dj/=U#[h*:B;bAD3>+BEpdbQBNSYPLS8pR#3?C/@P$oaS4]3][gh.7G134"!1J61QeuoQ-,1de`3c\
%(NHg!>Fr&S)f@F)n"SJT;jS_.$`cgU)a%/uA>]CWFEsZOD7LE"I0<5+]u,J`DgsHB84]e-mI0@&nF(JF]=NFO;_477X!03dF=XKs
%d8abAc9eG*5/*bokP9sCH<N5eZ:T8u_60c?^2DAiOP#GpCspuPm$`Nr>W1iJ1..*Ng6>;m^DaZ;4o1I^dU).5A`o(ZWu&BKAl]]$
%$;$g#!IJ!NW/654]*Yk^0<`F/+0"Pu^+7C>m*bCB.)]TVjsEI!X*2Hc2lh/fD==[GP#Lb8or+qZb-'g'-NWS#F^2@'E0#oD%(7d7
%'qQ2=Qu5e"[4j6Y)5%m$Xr"L^&ri$V"-@'LU-d\1*7ei%qcR62Xlr?K<,om_7<u7O5Z4Xe'St7;@G^EJh0BX$;%ot6*f+p!lEBlh
%mSSMTO+eXelqs]HF*3OY9?K$4'pT?cgU]m(;9Yn7=P9Er<D$;JHu$i\<C<pAc_dN!QRrP+UUWbtD,as"a%^@Ib/M)4;$fG!@L/2M
%.W;9-pZ#M%W'&+b/0::CmSK:S?.j>B%[H3C>K81e]V<f)DPN_'UFG((Kl)73OO$Bt:hurcAol^deZ+SRW8S?R%cst`d`Q*#TfsXg
%>TnfdMjn`TDFdeJbI46/'MNB(qRL'=RG'@cSIBYfn&:(Xd$@s1G:5SreB-k<%`S"CP$hU>W4_(mXfbcq%&ZIbF#Q'84han^k'b2C
%XtO/N8*9N(q`j-?caa!2mf,O9j8RB7s-#g41[b9)73Q=!ru(Q\`r2NLs(C-e:#X23p]"Oj`HrQ9m:-R<kh0&p_!,OAMtG"n4OdN!
%\JU6[g*?g=DormJGh7IK@"_OP`!0D[%`f1V:MX+mgR`V:oCEZsrgn2Kqia=tqpB`;Za$G6c\UD#Okr'qL4?_SnGf*;2^?5$;_mO[
%n2W:Pc4$lpqZ/Lj#G.DK1OS,k=`rM9n_*83B"6<X]BYiqYKZLGUIor]pIbCQTtR;XIPipoh,LC=q7R_&_md9[1;du!a_WZ'n(T5]
%Y*n6\94mt7-du^_%t$.%c@uk#)*W#[D">S^G/i=#)*[K*L\&O()r)X?GXYlL_&:_Xi/DB.01HWOhXRH.Y*^do'j"'h7lQu%9NTI+
%ZbjVWXRJ2^L!No\]0_4t[WsSGODWR8L5SL<%'[0,Amu7Z-%4:T.L1Q<dZg:bNOkgRF1ruA%t"[&7$[-orI3-.R`PKJK^`9`PHCR\
%9/US5,j/4sVVGu6T,`=*7Zm..NL-1.)ajeKbQcIFh(a#':d5SP7ep2Z;,sJ[6s`Y+3TRKe&;tga_qo.RfLY(;48*R(dBgh8kcrV[
%qAO1p9f7pkXEB0H_relIh0YIqGiVCpT!e,-4Hh4S?-T9X">bn5LYAVNjElu@<%RLCW'"kn)@nY0-9Kga(/B-2]H7c?Zo7lmjiJ@k
%7-.8bhI>NLchL07N?>=27aT,ln<m!S':!44]EVa2'n1>Q(s0Z6hS0-3*S0CAaE,5-[u#hmgb=1gl4'U^*.879:Co'HU(Bi_iA@.G
%X0[ooWVrWJa=5X(?oA?3m79($iN(:N<\[SN(##fP=PI9IUioJNl.QWTXA$R+.!,VPH;,b\68ic:(t9G;.8`1m5i`JhX!Rh?\g[m>
%WYhl&9IW8YHHEk+j^K34>?<VgV`jj#_NV7j3-ZVg''Hp+:_+:El#f_N[eWl(f>=j<0DlO[N9,JYnuckpBs^aK\l%%D3WO/,(KK%<
%p@jKBE6S#7U2\:HZ,/b:I&g*h"2O2e].#[eT(iY6mI50TMF&t2i,-,0jQ"sR"4;W#[g_(`1`GIgUX\<0JqH%?Q@O=7&AnTTnU-Kd
%BQYjUlaq%S_e2tlO_D%A7r$0cg:I5>K/UoQDl^"g@k3U.j]V6cI%8Pg'[=c.AS8CK#W8n^FKp=0dD$o'Guh->@bi6n13$l(N."co
%:!rZE<&V^XW'"hm!X11p]Ke]a)88E1_`3%6m"Zf_GujqL=*GuMC][tj%W>X(P0P7W)["*4ZL?Tp)SU/Q<b6:\Aj\>kQR5XT_3%9h
%N.th"R&GZ5B"R#\VFUtWr,BBXDG;sT^8oQu%b=g:E@;`Ia`rA5,TEBu%]OS$U9Xe0DHr/grp/J)=QCMLY.p;/jQ63l=3JS_3W!M[
%W1)b.Eu]4\6d>s;pCi<51UiE4c3RE+6Ih#k2'Z)VO;0r(<:*sBE^m!rA!+AmW#Drh(AkEc8/qcMOq"1-IrG=^.."u)Emj?#+,5gf
%A;0:j)nu1b7lc)oN5pCJC#`@jk1tF@?gaWOo@I*>53h!6b0(/Y(NG^e"q]dKlR]T2Xa8*-J)9_?cbmp"n6CqW;>i!t.',k/nN@qW
%fS@O,pTF@;]iW?V^s5>*YHsDd!_WOo#c1<I1'#%t[;_oX"8>9.:cq\')6hC\iCb_qk5[T:B4)LV!M=KZ^:*mk)]r&j,V+ppJ70#8
%;-kDP-nGV?d<G9S%`i(]dl'%^^a.T.'\$<Ah-u49ShiVNCB;Ei0_.8TTrE2rYb#)#_gsrZpn',S>7]TaTX/:jPE.(R))Xo:3PRJ5
%neJ`;JK#=$3,/_NQS/]0mnpLq.j$lq1VK(LIEiQQ$'""hTE+Y&/6nT7]f[6I?Jm+p,Heg:.$J<P*_Rl.g"Bs;464l]`CV2P5eh21
%S`6X<WTJKd]G;g1>pB/9ee`1i<eTL/X)]&lcp%$QJp[V"[GVi?HgSOZ'8FnG)_nOCRqK2?@jlt\4GU?X&L5/bXmn!pjtG%.MGh8G
%mD6gV*_^4#<LVt,`c@-E8j-6r=(YtrC'W.]Jh'g`BCEl36@cZlB-@cMF&sI2#GHqAmQKO.lAqr]];f]=U2uTY'HqU![X$mDY&*@&
%C_J_j1m[5eBjI9b7GIs]-'a<,KLQ;=&Ab5pTrlHq6J7Y>!gpJu9RoF)\adO$*--Z8&C3XR)WbL(?AuU)3<#k-]W4#=Gc\>1Rj=PB
%+iBmt=rD6Q0ff>_(2@8(:7S=to%juEQ4JKbVoMF7o46O>:`!#R`(D'V7j$O0Zbb@@?b(kjd0*R/ncW#.9f?GmG'I3)=;;:*8>`+l
%@ZLs%*RH6<.8K0.;^*d$(#d:8p[W-qYumNWbpK`Y%Sfd#\b09m%NV^\3Ag:ML.7b?r]3P=k/bU`)4;]oml`Gc2H=Gd%?V7;*Z6Dp
%\,-sZZ"oJaVS1:_X`/eqWc;3QUq:P#eLg6<:LpK>rS<TuAkQ[QD5trlb\VKcOYf3V&gpao[1=/nM'YQp"arjjCJ'8sRm&OC3Q>e_
%G=.3fXHAY/#Eb-1^\2pCCDdt/4^O/<"!d7M)"F's,@M(@b^koN(`96[7"&I=MYb*oI&tRP0]Ih<&Q_cf<R/C9Z;cc(d1$_Dmhco+
%>fG0K7'b\_(`C7HlmRnQgCb=-8&h?!f4D9Z:-5A;*d<#'itrOtBR)0\imm]ja)($,^a!Y^Vs\Bf]eqF*OsC6E/&NlgKp,tLnRj?`
%oKZMQ`%&Wa>!\8c0-/>"j87IrV]6@lVEZYN[t/hYE+Refqm]0\?"sY``DCBR!eDE`Ti3:\0<AM<&ERhe9sM!0OS6S=AJQ6^C6B6W
%_JBfkZQK(*I9VFkI*JMS,cg29P+!s=#@PsF85F^*nUr9j)`p0\)nVD.oPX"F)R:\Kd>VhT6BA!t@of]g#sG)MY;l==&U%Dc215/)
%@7=*F:uLj!qRSpi>p,g>)&BZWjG`qDQ!aiZ5NgN3/d+6<+Z@Z(#%#8f_obh95;[PkK\qIJ2YMj4LQ:;jjU5l9%Vik`%p[iaW2\Wh
%(FslP=X8:;2/,K=rj#k#^BYJ`nl-F,@e_Ia_Kqj!:=p*##oiC2%prUKHujFRELf>naV0rg2`pr\`ufa&RX],7Dr7)"c2[e>a8aF,
%nF9#@I/a'7a5u=UlKt(-M_@jY:4?AQ/\\rF^:a<[D1>g3?_<p[T:]]&r;,O.WF#G1gtGO?DXmT"B^mZL!2$E$S$dHh`qYQV>Aq)a
%HuW9$Q=o8?rd908IHq>l]6nu%Ep_3DN&NE5m5g25?fW;8Npcr<mJ6EXSg_c@TDi8=Ug9FE@GIRF3&pBmSsq(CQCbur%nDAhA$#Gi
%q>Yo]D/Sd2GC7/0ID*i($t%jRi6)40N]AHT%ZA-3Fo:,a^3T=7IIg?l_")u!m=fbP2P'at/*?<'Ilh#Oq=p^\s51fWY8@*G)Z#ZX
%o97Xq=W`jBp#Yig(8$&@%5qn,:I!1*r0M!.o[B`'(\mUTH!Y6uqru:fZ\sNB,2thCo%%UU\G<T%Y49r0D`^..F*9Tle`FdA[qF=I
%Y0YgGn`_t[=4c3`3TX1@hg+fYF6*gJs($?tYJXpA-YHT@I4E.&04'tDrFEhD=FBtSZg2]3g%*PR?XJ5*I<G@lN6#s^bl`*6rU'1J
%1@+VrphPsCF7I?gBDE!Q+7AqtSjM<e?fW/\$Y"*[gHHY'^VsiD:\4b\,J0hcl19h*e.S\i,Y5XTk#^WCo=)p62n>H)+R@uFlaM8H
%I(d1;roWO)nK%P^^Rnc%d9;V98Uos2bTlU/X_X76nr-g"Mj34UYdN-oD.*$?R+k>KgPnFFs7s)_-gX6^o(-5[T?#>SUSmra^W:j#
%fcnbV:Bho\0-0^E5!,rAN6[pEk9n$dY?Uj9gu?aZAR*j`MLV`eDs>Dbp\<F6/NB^Fj5mVY%Z\m,'5q#82pTZDq1O4@i5)!'=!%!Q
%s-2mmIre8)1#:KH40Q:K;pr*F<GXq*fuaiAkPrGaCi&8HMeuXU%%$W/DOQb45PNuGjQ=k(=(V4#M\g;tf.b6OXt*'=,Q>,W.uk[t
%X2CDs^mA4'lMTu`Rn=/WRu7.7`LH0XkhpKlr:e2'lT;1uKA$Xu#J:^$MG]:]DH]JS<raiAXP*&@ZQksXGOIu,hilX.b5+9gYJ,\)
%^KLR#QfZ3<c_&DA`.RrdH+-a&>`'s9-`Z"\7*Xm!q913jn9X#D*;".IQJKiF1f'&8T,?]$jc"OGo--kGs1R-<#<BZc^'FEr>Q,-m
%eG5\#rH!8\(*=cNj<HSX4Pp'Zo&Jin%tFCmJ)).6kFcjNC&*dEMr3X9\aL8K-El&W8,c>eakfhfT7^_L?]3P)[(Lmd&q5<NJVjWN
%f^]QD[/oICY"PJUU^N4:R/[[Yqg.2k!IE`-e5h&^5C`Rqm,A/.h8SRWoCc^EQ.G;sSUIm"*F`mG)gZ$>^b>AFG\!Z#+<SZ:\u/"P
%*O+pL3kX3$+5CLqm+ksQM07aTD]t6oc9Re9c&lpLa+B[2cbq.oa:/!N>d+g*oWnr!_c$,bW@lh+MpLhC6hJ23j(J,PLH[GMRR<q?
%`^sXi7mCr7*/2(u,dT/t%XPqeL\A.uAA>Wdp/1irYKu+3%J]PSq#'N"n^S71`P21rhW+.NGqWkf#$!C(>!7c=d"\(\UZ><:f"lpa
%7[q7!e'mBo1ch$'^<UUXlk#dU_h94ldKi36LO=hNZI`1l:o8FNM<9>;+j@jtDK1`5>=*E`MMmL"mYp.<nn"7X@o?i]=;Pdt6\"l$
%dN>acD+b[L,\a6"Lhhh3"o&TBETd"Y4"-mDqBHu68(&W]M``NCe?u,;9HkBTmZ5A\%MiWI>MMK?6dgC+a#t<cn$*\`j<>=V0`O@a
%n%%49P,+)/h]"<E5`5,s.%gnq!4)7fT(81JU-pAtRHa]jY5RFF"b<Crn*YR9G2qnE=%t$bAu3g)^q_0=NI]RWa3")Xq&=q^=-D%I
%+@7RX-[APgP6f#'f1M?Y!@\<Os3ed!L)(&Gs2.Cdrs0qK>8:'6d]NGNPaD;T\*u2_n:ol?6)/ogl4BQ<S"7RG+nXUdYp_`dAn]ZV
%\+e7a%,??DB/:t!3$RV:+56nT6d)ke,Ic$K^<Un$CfL<1Wntfol*%19p1ErSn_G0piUTcPDu>C*rPqe21JH&"4P0J\i9.jsF'mh&
%)ifjn*!fV#*mJ,oPKe41Ufn)&0U1h-EKTaTNMh"(Od!$B<OL5iP8aB08grF7%Q`0_ZWjQ?_NqXp)P/j+Kh_8j\C[s5k)\N+\a)k2
%XV5q9N#7jDNO22P,&AnPdni)@Y70ZKWu5Wd?[Sl^qSf[sWEdb[m#`0G-Q+9oiOGsF$s_\!?c6!J6EPc0/t-@WH-YLPHIOh$PEF*I
%ksa$9Q9@X2+Zs&',TNXn&;HsPF_J:hoP#cn:?\UKC%oZTi"-(p$eiM\RW)tKWCG1\nN<s[n8S)I5Z?j'"2uV)Q&ZAGYg#&O(`O%B
%"`N4oKfQeF<uHDTQid?tr"tYdR(W=TOBA8LIq_SdA<G<Wj,J!pNZa5-K=UhudGtJJYCXENVBe2.#.(Qu/3(=THc$$HrA$^#+GK'+
%ra9]6)2A0YW#2/c?inuEN'96aES#>L.p*:QiGXD.#V6`ar&C"a-\82lN/g=4_h00.JS@`?OXCT20/[i_"2keO%,2/h`\Oc"&'Iml
%KY`q:rWYN[HU!U$0I7&H-,9W0I=`%LOoC_+T*=mZY;t0qNKe!6;Nn6_oWa&m$$gh847G+]K1h$:=M-[&-_Z8BiF0Jp@+$fTD0-+C
%?RQT1^seV&]J:IU9ILs760'g[,+dW(Ae3Pt%ghj[IYDSOL-?)'37;c@R^2mSU_W=H1e5Q+/V=qanFVH,*X^k9&5bDs1]jL;/l$tQ
%:"pPC2U>h2[.s?b?5akXl3gpfE=mm!oK\]h@B<1Z+d9HsjYHSb67KejR\CQW@)Ng$=UlJt8DA6AkU2ee=Lop!k*r3%`,i8i5tfB(
%P-C*``RGKan9flM.2pn!I9OJP=M3)`RZ?<)ZfiMp(/)0%MU;O/OFC<Ok6bf.8/#50),d\U>FN0?>Hc:m=bP-F#V^26)TklEaB6:^
%Cghj0l%$"RiR(i#`Ms4'eE.9r.CI[Bo4sUQ-D:M*BBul23R.rlZtTt0:0RSd<F,<0.SK6#d)_"/fAkdZ56BjU7U+VP_qr'=fg852
%r9th40PNL@H6cECVQ3/A-oU`Z6Q%*MFF'^6e8l$\W!/7MP_!9R'o/*oLqX)>a:7fsjF\',:d#0cY-DrAkNV%!CgU@+!So.7TC?9f
%h`N6"Q^M=dELpsP&@^k&GsaJe0F'](5R^\fRc:`&Z2?,t!<SrPnJ!u;YqmS&/W3&s9cb6,<uHYm7Y"GB'2kdk!Yliue/ZR5W&Yj)
%4#/L]:p7pGpu0+_3X.ANY#Y'_A1.c_',"K)qr>7i0lse/8$K!M(?f`$0R-h4ko-G@&i,^O@Be>rUSe815_uWZo?gCc9%15UkjqJs
%_)QG#)9=b'9g7\!_9rr%)rN]&0X:bdS#j#&0cX:%?$U$DQK/og+p>>nBJUtWI\=>aTWrpq1T%feGE#-dl1&iYBjI$5ZX+o"m0QMP
%[c<;X!Ap-=BBHh4"7<At0Ogd'JN6Ee%Q(;"$9[*W"?Bo4AlqB4N+1HB.Q!0@.(1,T/_6h_+8uR?32XD3N>H-0c4(P*##&ZCOmN\'
%30l+p"'5#7O_hQ]7'm[m@b?0rK,eel2GCheWC@6^8;7OSEYYuNrR5_XFrD=nB[A%qD'<rP/[h7N57[Ik\K:#hh+S(ns/15^XV)f*
%7Pp*$Ht]JTB0E)-_01T$@R2C)K(/U5%tUOpi<`?"LoOLI-(4XqUg[@>$<%<RgVoB",91@drro89e@lCF?k4P98e1Z_K'aJ.M9+6U
%Q&6[CL;\k^Y4j%9@3+J7(t[&h,kE"2M;KWl_e,'K&;1pg49<Hp(&f.NXS</X1R&)SUmnrN'KUd]IPAi>eg`^_h"qVufRcO/HReZ3
%aBp2ffG5V'dR%6ndaTJ",Supt.f;6.(i9"Sh&+:E/O1)4[Q'+l*Mp/FQmR+Q+W/\U.ZAMb1DBgWG)?I$8K2.77.M#;ia\T'r"i1f
%@BkQA4Jfe[rr`j5A'M/M_q0B1k[[H*$Wcp!6`@'qG#LZ[@d$+?AOdAiYIY!4Bd^guJ0B=14T>B--"B<Z_F`56iCT6%Acn+\>fRH1
%&+GjK*>mRHpcsuSKA2Wl8JE99n4:W&dY\<SE/*&j5dH/[eA%=`;Mu4P;))OO^mEK,PRJp?d"ka/qjlme5+H*+o*INL5+5l18*OH(
%-]I$^[AO`+eU.8":tI)V&>.g;q:is1)3*PIq\Y7>F8[JYXu-,M%1Mq0TME&PD>tid=0;#Z8'gQd`:*&<]i*r&qh&4gbWcgI4\58!
%dsepHJ4B&>h1DCt@rLRUpF:7L<%W::cZ:2"1ZpFORk=I"cF1nQ?E9\Mp5AkD^&Xgugc#ufA\dF,hEebOrSm"*aQu-\N>=BR/GAts
%HAONl4@sIJE)QTu3m<*&/0jQ)ch0c(>A_'#c=$,trq(u,(n@.7ocF*=m.OIL.[3HXrk4+9RbnrHoY,!pg8a';K9;hg_Z(r^[G%bJ
%Dm7`)QX?eY?_Jo^]'sXC_,@sHT`pq#fd+thBsiH+]D9E88"9O&'#f>@.H^@qq&LsMGf8aJ39)qFrVnr&r,n^;r:f*,"gn7&+F*7Z
%4QuImc$oicpFdi?j^&P02s=)t_r"DXrs?E5"oZ'8kC49upM0a'2k]X>!Kt*Na#3n#3I<1po#6:i/qAA\mH:ML8Ca=C5%se2+hoU)
%,SYhY5Afn^^E`#nPAQFL9n'BXrOAsoI^Q:Br_9i_RL'KJVOr&)O*ZNKoDZBY^ZE5Lm_U?:I(?FY]2+.cr9_C>Sc%2KD=M,6IiFl/
%L#m#qcn/>J./j&;0IfWFrEH@u=m["UA8V9(/B7Q?0.'`i6RKRB\WPISqosSt;BI_?-e2P81%:*d_LYV>VAT\M11WKV3dg&"?YrfT
%OeZe/GP"Bf5LU\1eDBmCqpjPEjJ:Go=1e,i\_q14Sj8JW@pKQLrQ_)9;^^$4^1-'=!r%SSVa9jP)EDPV#+^9c5'btOB'O!5pDU+Z
%<&^@W-#h[mWQOTtf*@"XMiE%uRSFtn.\1nFICig`h&d\)C-.Rso\8=O"7.IcBj._q02h019C62t&tu;Zh1uqodQ&FfC^WnG?T/a_
%DA[crESS=UZns&A+'1/->k?-nmpn*joXi(CY>Z]).K;]/e16[<&5/d:c7gID4\&g_mIG%^8EZu,%T!&D-&ueSA6^e9.<^N_HhHNo
%;&l:A0BTDNGo$9W)Qh.ZQM5]X>;Na1s'C[!WrMEUEg:sc=K4=FrBQ,_LFU3L"uMl"[f0V"SIW-D,YZCd>Z<$ENAKC6-e5=71P9Rh
%aOq_<V&Rs"V9nY#(WZ51o&C&C^<rRj7g*Zeg8/9=UtQ\CH=L%okm[eSg=[C\[kB6S99'6GCc8S#rHksB$%e+,/JKaXN-JJpUrVTI
%]rtQ5SMiU42R\Kk6JOJ>TA/$?s89Fi%,:3XbJaZ2fN@Ie('XJmQoYeHVNihJ`e]k,9l9%uNCIktkLD2H7DF:<2/6Zk`E'_p+flB)
%T/?HS++9lR&,]sqLJng=),TsS4+'hum=rZ'6jr9Zq8Oaf<:bVRbPedI's4:b/fCF>YK(,+)&qqC6gY$Khu7u1gHdkC'V-IekS`d8
%Abik2GFFPZPmFYI.Y"\EhXr<Vl5b>#A>AusP&!j8&7<irST:*JTV%PB96tR4W?*LshXHLg/(jj*.f8%(+0)c)H@:j_ORe+NG4m^D
%Bo32\K?`?2Ej8X7e`O>u;YSlI;:+gfMoEh/9fY+u)9Enirq4BT\)5F'QhBq53V&as35CK&J1"h336k%@U0sW.(hb=>J$s$8RW#<q
%0tE:G+8QCj3[TrI0A@5](j2cX>4!L+8*V])RaW;b]g$JD5N$lp)<H53j$SGrB&XT[b#g^V>a55NMtCt\DY,;k%j"ZU1iuic?J;5D
%WSVP/_=uth&sCgZqp&.32,Su'C"I)+m2H3uad;Ca`U7O16[SEgjbs^7kZ*I!=k\iTk3&;XUg?9Qiu_IPG5HM^e*jcu*Jq4P3I*9j
%[dibO3m_05O3[e$JDH@B#=2R!,l;>eQ"ga21$Xf!@W22VARD2IqPmN]reURaM2Zb]f)BR\Ejq3FGFoLts(3slTtPQ>gYG)DB\"\X
%)Wa241Z@pa,c=-^[sHr&1)f\`_*XpEpi=4mR4?b*o/EFqku\k27qb29f<F>JpYQH`WV5UQX`oNhVd!kZTicb[g$*SlCug)tW6n=u
%]_D6Vm1t%PeGM"*.!nUu2XfD?j`ZQNpYi^V^?%V]@`6IhKsYTf0]P7[!e-`qr!9s-fRnH%d+Y*LlHs]@PPZ/sqaiKl>5^jcdHT69
%,AQHjWr;h`k8t$Aq[4l`SN1/%I(nuG*=D,%2L6Sm1hM)X69+]%CSW0mQ%GW'8o6&h@d(F6UK1Q+qi+k(9Xq7gIPpLp@/b639<IJR
%&sViUlZ85gnlm=h5KYo/s$j7L.TF0$pmkrio4V-rpaL_XOB-9rlFlq47bdS3N<%)EbLQ$igkk0B]@N@+p[,beb0P]`.Nk;%aJ`O\
%=QH2[>2j:tV>W;tq:/=UF:<Tb7\e,7eVO2"ophIeL9$f?q+*SK,,ILJfe26lqo(Z?OHG6Ki]Q`o-&n<li!fEKL[OW1FNcrD6N6ps
%Eg2'o)g\a__Xo2`jsN@X5sP"PC?TFbdS'd=DnH$SI37^"f+]K6Dgb.O,NG&YIg#U`[YG6NgURa\XJeRM0Ya>>F<<@K^6iCu+FZLN
%\'jZ'9<`?g'jIg6aJM/\SQc7-I.'.T5dq`?b!39O(N?#*qk"ml1EBl0pCC6]L\1@oqtP&f&XN901";rRW=45j;/ZE`U0%:'K,ord
%+0\8;L]cKkPb78Y[!aQ-WnlqN,;r6*Yf5ONS^0,Nm9i&"_ioQ#XS]h6jRC-$9qOW@.R._4RrP'Rc9?0F@u`c1D:H<V25paGHc>Nj
%`0Xr/a^dBda@[:'7[,#1[#U*`+H<T&p6!/.GdIUiK[7L]UYu7pEqjLa5e$_>>k:nDi%sF(/c%p]#hK%:SNqrGqqm;_ZjXnF0>;fq
%AsZ3RDQhdV(KQ%C[.dbmO?_-=rJ"oR\+ScBiUDl1EL\(ng8/ZWL.A6%2b?-%eTW`$Bj)ad4#)]M*GLcN),3DmlbT9l:,CYZY+;DA
%XmgrcVP;IODVuQ&U`Z=4lg$=<FL^G7jGQsm[Ie0M5IMq@%\hA=Kb9la[SE"/LWR83cgTcjkoO.?T(CF#H_!D$r%f7^Hd"sSo.q'-
%kj6Rt%I;_p\\gXes3WZ#OmF--S+L-pMm%i!F8+1W%o^O@B>WIu-``__7FTRr?mj:hhWF%>bRB!G4dNR$n9'H"VPUo1JZjj?ET+LA
%N3?glRW=I#LH`pW@.;^2Hh:42:NL=H>+fRfB+h0IqD++4'.98JY6U4S/KCF1/lV3RQLL0+C1e2-M`pp@B_&A&9XXbPY@mXAR!W(f
%S&L.,rUK6]GV4.7X58h+CK#CtfH?fch6$XTY#XXF="5%#q:4gSQ&p>3o.n"dGa'\joqq;joXl;ocedbUPKPo<g<A,IG'>(t)/G1,
%8]1-+`)Er)ZcI%-I?C)5=Z.>Ic'(BlSF0'oP=k5lT2]7hl<<8CMs7)$k'B-L'C(VXnNl1@cYEFkcG*\$i5i*c?,B?Q!k=7T0G*%H
%^-c+qftAd.CHZ>nZ&BngI%XiT:PK7#QtXpgV]2eO4\1s0l)X-6e4F4]3h9K4=hLK^`7*Ih4M1U(QCDc!c>TRueRSGu\[%<E];hc!
%-u(a.+m9@[O.`.$rVDgp[\!d"ebo-7;S2&^9RUbn3M,!_1Qu_rALF)(b9&,m3@Oq'kL/\ADD])amlEXu>!'p,dtM<_;h(h*ZA6oA
%>u,"3]aZ?5?-B.0b6K](9=qUAjYUo"ZZk`g?eOja*Tfu6_B?75's#`-^;SKYhXO<`]<XRe_ke<oL.jPmWKQ9mokH84/T7-K=76WX
%13'roF76M8Vh=2S4Im.nc'6meN$gD;V3JTZR)mhoDe1i?^VBdI@/Uc;PDT+]BPbt!N5iq.N)!?\?D>j6Kgir7bs\<G4+42P_EY98
%q7DLIgqi)VFFMo4B4BJj920g%S\;qM=FR^G)LncF`C;uCRsT2GdisT13ZXcY^0?W;(:"1m8J*UEV]=^Ul*Wkt>VNL#Cdr%r)E6'S
%ghAi2^UoYb`fDLqd=q2hoB>1NmNn;M/^?eOT'C)gUNpr$21&(U.V&G!W#V>,W'.i*'3,FFql"!gFJE_o?Uh`A[1ut2Mr$s*b5B9N
%kh>Z_'4"u&3K.jGY<>=</MeGB0@+:+R@Dhr1cO6]N962XP0pD2c>@\#YS2r_/e1e,^#IO/oO&n-(Hn3fgX5%ZWZF=ZhRB4l`oU@q
%I./m']kf@_U=Tokc^<kgo#usI+#e)4Ns0kR=unl.NE.YnPL3QFI4tHP0(u'De&GFq\U=&cD'()_UMo7P[qL7WCe[=,Mh?jg-bV`!
%SW6E?bW]C*9uJh,`l)>)l>a\n0<Ru>F2(;q9\;#A3tq%ubj<9jEpImXIAXM8OmHDf9k9hk:+,W,]@Opoh0*:;mrn#9iio_,9q4&#
%>8(ZJo>8G25m,r?)A<bpVpU9V;Nmu\X_`oPqABahN-4P83_/TrVWlEsWS#.'G;;'nD*5l$lD9Ekii1XhRI\L[g!_\tF.:-TD"VeE
%(/(73>fX,T4,:)C;^3C=]6IV>*Shc@Z,4]<@dGR&2\Wgp3YSdX;6_(@5+OTA04O[0VMV]U1=*5^FR!R\ic(YN3O=fmRZ--B5#3(I
%].]@koW1(;h*/JGY4$P.PF8L41V"f1Mj+&.$[_GTTslq*O]^J1]NmQ_ROg)3DC0/r]?c\EO1iA?Vn\XeMQRB=BUYpbbCdL-pgE6-
%auh)\VGobpT3=CF?Csh/[F;,"kMta)rS=llWDb1,S@Y0Q?V]E9?JhV006K/Fo'gl\eZ"h'e'Ue8R\"f,*)@rZS"49:R95k`4u.&R
%PP*EV9f'J^c?H2\04.r4L$=<!l0IBSdWEm8>LQAJqe!F)]gtg-(?[;^VL',;1Q0e[b8KXD/hs\Q]Q-)thJHIQgP;\lRA8O0NL>_$
%ChMmZn@Uta;ciLWk2,gL9`Hu\!GOO"^)!86e@`t-jf.@p[26;:S'/!?cL-mTS1V*CVe9pdMriX7:1nLROZ(^*5J9-52j:D1kE[mn
%UH)t*DgcN`^6b5AI*;6GNY8O\\]^Pf`S=rb\iWu#04:6Z[t\\E:M&GCo82_$fY"f=^<LS4=g.F$Ej@`U4P_X8?aZs/o40i:cG.s!
%DW^i`LR\(ogs]P6\F#(Hb18s0Sp`G1nUlO3,CZnIfo6dqH;j@#I5_c,:RjC$c,/g7/A31sgBS+eMs[!f>VBGk3%Xf5$WhOBEhWCZ
%Esp7@lc%jOX73^1340f7FI!_AMlD?<MoFLAXhAssho`pYgPc$Lf>Pf&io'(T8Art9q[#,cC*\tg*DD[L4eKDYSF<RT-AoEJ>D^?p
%X0FLd,?L3I:JOMTDC&mJAHlB598C]=\TE8.F2(-(BJ7%>h3X)Rg!m#FcXO)tL0`"B48kqAEW2390M9C62HhrB3OM#^8(3jf_;(3a
%FuoA6DAS:\o;q<bZXd\%Ao$_r>YMi];aRS1`5R$af+>Q^q^ZYHT@ajClDZ#bp0ogu/pl<8b*m[A)>iqt*]`I*H07mKjicMECJA%R
%)DmG]eBc(8[8gkng:<):=I8WCIB.ZOfs?!FZ=h3bkPM]3iCqmnREUnD[WFKAQPZ8&qe]cu;=jDD%HX%>>:Q7O3`Ultdg&lfbVmt?
%G;\d3hce1mjskXi\BXp,9BU\.]K2<qHf"!eTPX<40AP*[XcC#_8R(WUqT=@nhbCh0Z,<C,7!87F92D1(]]7f=WqTVd,gLU8(RF7M
%=3&M-q2$MVYDpfgX6Ob=\R&C]dPNJ<]8cNAQ.aBbA@")*PsY1^Dl%KZ1UGL_)AfHoCs63[AmXc'8'g;aeY7CP\,'.;IU$+4\B:nT
%cWB8[%Z8To[>4@qh6kOg/_:dsGJ!0Vg!\^Q_=%6pqSVti879,0mn@XN/nSEKedo?9)i'utUQ&`3+hQ.h'YWSUiT=#njiEkNl0MA+
%=_YTn;UPBRf9@iCe5Np#ePkbml(XJiR41=tB3&AHdbaMeRGR<Jh=Q,A1R@HNbAistP;nqrR?Z?.c^a_+4.08do/o*[3N-JZ_h29=
%k:i%>hH`7AZCT&7e(iCDH9IU<kN?ku\'\0X52X#qcWn-TngdAZ?N-VoHBp3)p3W:VjghcnHdTOagn$UC1n/\fjo*H5pfr$dn9-Tl
%fq\!$f&^sjIB,BcGhQIPm&k9)k2p!YcYgmnm2']I]/)AW#<V8%=FB;=n9h_:HsU+9SNXXMmB0aPTC8@NM]N2NH@Kkam9]1^4U></
%h)h0!c0mffhn8=%RF1X)om/[*?T>*ErKm.KoH<Qa4WgJ!mcNHENZB)r=)YF#M>d@p@J8OhLGom!Ku:CTlcbK90#ip[2f8jj&,lD)
%EV-Cl3-Oo\M;psAG)E.WY/SrHam@H<EO$`pS<J#<C#c"7E40i!<1Q37h-;uiS_bI6FUHNQgN^OdCoeD4Q=g^9:]4J]Cqb9<4%nJt
%/tZFA-BHKaKpC82qgQdPhg\ti5HdfE?7tBgV\W!JOa=$u?!P!?',TKYHL=[Jh7[&7`b/@*T3h98=7O=&k:1h&<k>lS&ajeK=Kc!`
%5OWGo(D`=kf?N++hMk\(c/7m1Vu)t+I;/Y'DQOnlbtQZkDf8:>ot0En@[a1)><,e<h45RYmbP8Y%HlRtWn@8YoX]3QGNR3m&nbjf
%L[A6nGpm#``ujKGmD3;0A\L@bht5+2amIMnE?faX;7oXFSJDIb8&qHkPG=o$H0+t&e=A7`Phguk3DEF9m?oopp?m+/U)'>,.`Z+q
%>A9\dbZ1bc_lb&_?)O`_bfWLODS;<NLDQ;0g1r8hT;7S':PYjs%o9CBG4\oY[oT)]QC@!_NRr'WDV`U?e;qqADsFHW4W(%LlDVAo
%EdA[C^3#sTf3Z/T7cj;*RrVh^0:cQ^20\CFXp/LG3H<_WD^JO]S'?;BheC?ZH8D\YN-X/-0,\Qm"Xh]9mqg+(p2aqr[3LXJ=Qeo?
%iN^jl7sAX82tq=JI_45b:3<6d;=,\DGN[e;H"XHB2c]JKht<Z^rJ>0Vj\jt00pC)GhlHX,7_deo<)`60&RcO;ZrQHt4OYG+DXeg@
%'`Ng$n$i<l5<fidjl^g]W'+J6nZM7n\_-\r=Iiq$q<L?E7_S(#pA1IgC0MN"R&L%kg,Q*UCXl3*9_PqIIgYekhVa\^f,V00Oca9H
%r]2.l=[WE`H'HQ<SG%lC$6@B8OaR?tco*FVr-hlYD1hD@Dh:3i&dmH(Vt3h[?3&U@V2$o=?S$`^L4qe*BWF'mDgdu#%bg''^&CI.
%FC)0M,7#A+Su]P>UtDe=qTm]JT)srCWdS.)mm[6G>\uoU7F4u/fS\TDkB,_"5?$^=@Lk]gQ\a$O@<$*-En99%l#0Al)]SR5p)qdt
%:tKk@;Q\IE8IARS*qTcb)6UGj^W6[(/OX:3E.A_k5LOI[TQ2nfkLuqFUf#Y?r]jU?SPc.gf(J+;62;B+hJQo8Z=,_[T%T`sk\*5^
%DV'UNWqR]iegm>IReVJd"0/#VbM@L-Vm<5*,<QjcAUSdZ)*__,Ep4AfIStUJ7rJ:Wb=I\+rdJ`kppSg&BR3X*Wc!l_nU0#sd&f5s
%=8[?X+DAIGDRI[6h0-,nV.7ns@6YGQI[ZZ!CZVF#o"VoEJ>2()hq':g?:Sk,\*qHM6Ho3b]b0PTBh$/X41[no*p-n4:D4qI\/8[`
%)nFO!WVuQ5Fto4U_nNbU<ZodZ8k?uarpGBYpM?RdLBgCl7E9S*OBA^:_l3GK9E&MEmpF/uL%6rL=k>t1K<`Rjn'RI>k&T>=n&p`\
%h;TO6&FOaqkKf!l'rDru\8NaCGM""\It&"nFOXfE(OgGF*uO'c8ao+G4!"t*li$dJ&VOad?K$(.9^MNqXku`1?"F)Z<>]'$qQuV<
%<:X:ZO=0!UUAQ*Ml57[l0/Bk`iJuDpPaS9\qthTU^S:8sWJm&;LI:lQQl=M?euuOY"aBqLVY9J_qurL[.X0XD@XkTV8+kV/f:Qr8
%Hma5jf$F*aXW=>f.u[`@qSg0,Z+OP\>'M)F9<D[:nJbF#h#bX%.-r%pC&q)Wa>LNC6mqG_R4nB-bZ*`__M;m]03<?Y-t0E)X+(0t
%r$<gVA\%9WJ8YB5/<"g:5FS_Q\h<[SV$Ap,@n]jN5EGgYr'*Xc_&%7Xn'/_-d?:]JA6fTWlL^iPn!VP]r(V4dg,PV:M6C6ec)_U4
%(O"m3iF4k$h/#8.5II4Iq<5]^9Vu,ioHr,A<_gW"P@pBNqprdXhX/O9Z9'Hrq4-)]VbG9k)+H:VP'pLf-BftSM>?5t6Dp1:m><3Y
%-FpDum09\9qWXo[j1XNR<B\UVf@J-u6t5<C_d%PR/"4i,k,4N9lcjnPjXtCU0.s&hmCch@qm?AC?WXKu5&3l!UgG#r(GnjpB'baG
%*Gs6pC<lYFc#'JB8Xt8nlY*ol]B&6mr[tb:9/P\^KrI@eG-b)ABc(4Q7llTFmI%hWY4?VDQ@A77St0Y<$mUh^fs80_Q<`75\^1H+
%U3i=*Vu&B#RXRW<1R_Wl?RA^LMm8RS`+?2/TP;'*fm#MY[Z>&Wcdp"VC2-@9a3t8$O%=AajYPH'r;-4am!5F40#$=D4eA_A4mT(A
%A#\[6l][CQp%t:P\hUTIZe18p%T7YOdr3mS>]OE=)$t>kEdj?K[E:;MptG_iP1.'LX,eQ4Qd'KjEd"@):7-*7Wm6;T.a.M/;NVIB
%gg?OV>c=M=c;@O/iG*9\RFto+?/ub`)nFD`p5Os34.5ejI.b-mZRe_R4!&UZ2+:_Q=7\-dbDj)0a"<s!4oIF>(4?6IYO!.h?#2a;
%<*Z!>8)r3,9V_*p4cdHSBH!X&Z#0#tpj.D>s0R*7gXY[I$b8bjR^a!b7)>3ZI!n/e+L2q^C]6R8CTAtNQ\0WKc#CWYhI5+JVP.&T
%ST"mZ_^1\VCF<dq[2<LGe(Fsq2fdrE\lLKG<$D,OcdnD*hf?]qb[anBcAku8Z4H9#_K38[3gqVgV[>bB"B*P$<K&t=Y&fqj)hS\p
%RWulOp&9(nRbLAT[t6uZC1h=[\I,*r`\#KTf4-<IqNNZh9p9oXj6(.BE[RLGG+[*^jo()H4seg`G86\,r'EO%p?pgJF+!;KW"2_$
%%i7SV[1QabbiZ5@1MuL2bOfGrW9]#c<N2No.J+ucKq85$,<"GMjp:7)e%b6=!CP\#op2PShP4h)i`5TVe"+%nZT>YBQ&O8hCpi#'
%0WIWY/)a)W7RD4`D5J@t9W#AN`Q()CFuPQ>IW:7Z'[WcCT"[(+;ht,3rHtKNiu7&tWKPS,RTD%35<4MDF@309$jTl4]s[1u<["pF
%D@rh#YV)u3g!/-J.a<+Kb(UEsD>Bq)EP:hqQ0HaaJ$Uq.o"=aTFmokg/).a\/Q;,g'oUAVRj0X(gYNk:CSeU)h'ARUR0/T=a4GL;
%GCitiDFp]sqK6OkI^B&NBr4WIGHsm7[Fr26TJj-Q;MG)C;t@T*?-MKej%GhQ2/_Jm6]?,-$ge%YT2s.%FRTAc=+5Re%VB*<Bb[tB
%T"^WG,?_Q8P<*E"k""/H(UlpLc</B6o6_aiHZe%/g1_t_K*Dk.JhqhBfm>6:@k)#<3a58%glJFfPC3@<0)Ed2+T^Au&o60sGJ=>-
%J-N2eRV/Gn4K6lUG&F!M?6_iZ?P&-&:<(o;PiQ3M&t8Z:"e1FE8Kk^X]="#5c.R19/+;V7^89R#p6/G>`f?1sH//lHeT!P5o2bFp
%[,`3Dm@TcBqm2NWN_\`TguNn'gs#+2nS+OBh-;b9V<&/-@5bG(_N7S2n"cF.$t%JFO;[K.?e+D436&.;gc_/N"'A_;Q!.J;48*.W
%6p+^uEbM`c$'"Y/AAbt+BQZ!K85FjEa2^`*b?kd,XDeh(kD7a.Mnj4DTTiakG,k:qAH>(#^fG]eiA<[:HRrUQT?YMc"/KAHdrC%]
%V\T-P)qc';;`D_]1a6."/&reG:)Tne1omC`)4od_\**YS_g$A<1sNYMd%,]jiS_?\7b'Ifep(Q>Y<5cDp#^3*8>V@fkk\qFp[,6L
%7J!Er?[C;^=.do)-')E["rcraq\mo+Hcl#*o-M-%oNmr<!fX2iGE'UtTAfG`bL/3j)V<j51doOXp_Xt1bK11inuqLo%F/S,J0T.l
%G-pR&ioS0F7d:YQ=UCF>'T*JsWr?o,N(Y5d\*+l9`4&.P=9f-4Qf6lgT1ME,>f`[iN>VIbI&*m!1[lkiP\\PbngAhgiEdOISu@c2
%J!%GhoMVg@8aU5Y%*m\S48k9kSF<oW8^i&URD[P:"/3]*<?i:&i-8uos3NFC-Wc8%BKUKf\J=>:`Q8]2A&M8imm`;F"$shCcpeIY
%jnOZ'ApWObm&&;Afn=E*?b0Ieb4T()-!r$DfLm(=;OlPJR`945(f"sgTk7k[2r:X`C!mOBe4Juu/9T\(DW]r*9=*Zn2Y'FXWY>.I
%-Z_ZL9[Bqk;g:qUB$s1cg%\TLEst"gVSYA5hs6(%iiJBj:/]C)c:N2W49,*/!%E9\DEG7QE=<f??ea8`lXoUig@]="4d@?oI[^UK
%Mo>@m`V4fbRiHupJ^GJ#m&mphXW@.2Qg.("A5_UI1>3S3@cHNsDs9nrM5D0`QA1'Mc"T]G13Ju1^0Ed2l7ZmdV:M/_,1Cbm,daX;
%3mL<nNR]TjbpM>b4`/s`LB9d=U]'Y%4Oe`q3*=Kj/^A4s)33hT,8kHU1R[G$<G&5E^:*C#f/TeM>a8Bbr^;5!/OQCpT#8qk*s'V9
%@u)o,C"i;qFCZ\)q&IlLRbW[GE4"/Gj"YWd`dNK%V0]>qh$e/"'$id+XF&XF/#PjCHVPDee(T:9mW!@:p72`S;d(f@q!g=J4,\$?
%eBV^G>U?:NOkj0="A]E1qpjr_YP?;_hqu]!o"!?0;+u702^!\%Kup/1f.$1UUlUS"[%",YJKG.7>YV&T%o1IBfss`E_iX$8dt[HT
%-lj1P];<g"PC=UD&D+*FS':J@F?.(Lq="sBf3Nug0sR3sh2dcYIoI@BmkUUmpZYba(*3Ac"q6IP9!_qkV]5]qf>G*(SAJ'6s6lQ5
%2kUXMRCJG?Nc1F(hgu^Q:3'q?C4]^7kNM^!LT/bIapXcb>#uuqU)op/+2Zau5ZC$o2?!V3D<&/ci03kp8]9%6pI-!qd*"RobYiKC
%CaLkL<"jFb@\ktBH:\jsMH;XPEl5uU-7(6VCGD((mmA+OV`"&4g/iB+L.r$V)ip$Q9/`)G6-/LTfaoVjSLn!pdi[7fA0kXD-P1BK
%m\mCRce?tp^4(2`s)H+e6j#ouh&Be_o\RJAUD.@IY'($&`(=O&YB5FYX.Ug1Xc+>r,SFAK]X@(YV9>-7JC9kNdW>*\&Ld&BX4tk$
%q;V$Uc%b?sl/pqceCp9MEaY^S#P+>1IF?<Xk>c@eKak!l"JmGTDf0UkiiTpmgF>?4QS7s*6YZ@u?$ri/3&J#;lGAh?ik\.W\_ko(
%-$R(1VDGkka]:KYHYd2jfU`f[9Or>Tq\-mCSb'j-JMc9(AF@9Ih.:AU/-<c#L%bKgALCD8\aiU-m[Y*S7l-d7?:h_S'2EK1i&k#l
%97e8!`K/2LSP=8D]g:rIAEe!BIdbkOe1]s(2Bu7`ek^'S6oTJaA@C9bjW@NpQep%<f&)p<dSE`qn>QnI^j-AeDQ35l0Xo=DHl*k[
%m'OXjgL>W?mEN?Abq/7!Mr>MHb/L(c(=S8?;'Vf\]iOIBLKDT_Nb<grSDT@QL710kEI7].<nq5r;CT;-Ci[4V28&7CI&<oM;h]&8
%9K1aoCP[\RH?/iN\A<qY.Vq;q&na/Sb*P'*4PB\_8Kmp'O[*Bh9RUcmQX%g3("J&MgrpaKc8S(r;$Hg9=fn$/ZJ4K)UU5.eqB&K4
%4r,GU@N=QDG;f0-XkS6\2j!uj9G"c%Wg2D^<%[t]]<e$h:*N%p;LO!RPVrb$>-6K_mG4kh9hmj%aB*GZV<cF:=g$B=(8`HTo+/+j
%;qb[X2L#2L06>e:,>'ol\Pd_pQT:B+j74Ns-qm.O87l?n*-]^>CAG6AVaYXqp%AbCfo"lIWB7C+PM:m'k-GF!3t*q1om3g@>Tr3R
%-Vp?,Qu:>1e&I_KTGNLTV</Ot$\crD,<r;L^@@Xs?1/n1P]!jektf<tVI+!44)+"qibWDtescEb?@D]hCm<Vk/PkuLI6d3lY!'pX
%.bTQ*gu8-f`5sc(*lPHF*+RZDUBgV*X.t,YpWBRrbdt60:rub,hSNC7K@VqR6N?QJBdetK88^XUgES6gk!$0IN?>N7Z8HQuOY+i0
%VnB^`mV4r9BMEFSoc;G1"HX1"50,;2Ap8H#Qa@2LN_^J_3O:W5?V[.c"K-Q#98]CHUt5+9osC1Qf\,Y$A*S[pC)kJ1G4&*J=;0BD
%m0Np,hJq!/_VjW-T/?BTFRZD15!$GdP+R)U:7`R<P)mPB)t(eWEdi1,4.o?b\I[+qaf0J54<G(aq:Y.Ib'UicLuks5qks7hN^\!N
%UAC+=l"b(UPeM9.T8%M*-N[5lBe5IBIp:%F`PgQpe"G7`-A'INe1)h110a*&A^.*uEjNI-*Ft''*a_BTiL1:.3-auYlY0,gdUK@[
%piHpcAu>^NH8jB'5+E^;XhJ:JVZ+pkr0@B#\GZkL&9(r"><L`Sh4333F,=R:#:#6*Hhf`IJ`J*2-_0I4)d4Q^Z\cT_eIgeH<t"En
%r7llJlc>M=:F"QNSE3An/"c]a4LK5g]%>>3`J2I;/5-KNr/[(#WldDg>(1X=di1Ga-J@G6(k-.o:.q.HFsr'5GY0nBgm8TT._4)T
%$e]U"Dg7]Y\QX)UNXq1KVh6eq;8Lo@luo_l,<_?1dLmKKs0t;TI;K]=0!?JGQ.`A-`BHNX^sI&6p/3nPC2Y^'d&o'NEL/1>DGR't
%n`^XV*E(UI9sSbX8]P*YW<7B(g'@e0fIIY0m=>afC]9=;na1s*8[C+!l-<PrV[&c-g)?d/'dAE\`-(5ibupCOBd2/"^UtO4ZeLc*
%IWf@I2NN7N[a%"3)T=%-9Y(/pFu5S4#O0c7m+T/!N*G2VmD^WK^4k),quc3-Eml!Cc9$ZmZ$ishqMm.Zh2p;f/hA+"QNm9+HdMtm
%aY5Z'4\AOdeb"YU!68kK9Gt#mUan'1ZaK$m9_EW,C\``T@VL4YqYe8ESOd\U=h]rh,,5j%Il;>M--8]^MCE=QVX9cf]1XSsZe%\f
%!Z?==`QMe1mW'M`]6!_4XfgMV$kH'Z"HO=tm958jamG6p/fd^e[QF>3jF(l^jWF>CMtuF-[4n3";p6o/YR15^,LY/b`FkMa>hIiE
%Fpkdi;B^1FIBod:mj)$a_uf`L.W-iDr+!k=EM3./WQ`TXc0ALsFd25Dn+R%RnS"XpDl.`A/SBsEg%kJBfiaTNC@8[ASI7fRguO]E
%s"k6l<=CLRhe]S$dmuR3Fpa:79DRos`TbWW1.,XhZh[X:T/::k0)`Ae]',V8mtQ36@<Xa\<//@7=u,r,*`&U!\NK.nEg>bQdtm5[
%)\caFVLA*-V,#`kO)"W1mWI$a#+F!sX*_C2]6';6MWQUgbP38uHs6j(f&,V6ZDGb0$*i=_f&kLMkE,p[a@9NE5<L&QZFEB`Hnc^A
%h;bUH15IhZ@.1h+Gth^<<?0?Y5ujuNm&73X/:4geT/('$]08D]aR2H3`onIcj,U+aheFUk&G`:gBDLBA@:N,;Iero?Q*%I_iZ)Y.
%2"9m*rj7T^Eaa$NkhN(ZYNO[a$)")%-<D6^gq/>GZJ`iYSX',j_YNd"h1PkFEp\(NI!hU-bgUW^#!$dLCsh2A*OV;M^\*mh13/bq
%X'`ic;Vsi=Ye3msh]JS#bh50,gNYqIZT4<.C5.0NGu,<@M<mu"Arf^CkYL?`V1f8C-!Z68+5EBR`p#_'OBW``Ol&1@Q2ANdWfV3A
%a>9r[,JLNe9XRgLr,?e)'KMXd8Zpj>V4H1\_9Cb!h$M"':)h<O?o/K:7hoLOqC:lXbY$.M;a,r4:5S2AGQ-RC*j&%SdX/RhdUK]T
%AFQsoWCLlGX"P9]0>D(Xai,$rHomdb2p#WE:678N<n]sOFios/fC!h9V8sfeLZsfT\-m5N]mm7GDR'G42]OKL_Yc+;84DV+nFD^E
%mDD;:gUc5<-U<_&nO]8rWiY)@]t.-YKb)T/cTD`KhKj&2qMB6>d/(J"d;RYfGAH$DGE2aXDS8O/En/R8s/^URJ<dm'Djc%JMUa/g
%U_OjFgW5jq\NK\+s'\C@YnqsQ?3K_?(,k$gCBM.LqV-MDEpJNA(YNRY1/cs-B<T?:gWgFPFR'0HXnQ3c;"M$_;<V-G"(!mW_Oo#$
%r9Z]Qpi)$RGU'\>q:4eUDm:JY)hC.`3%htKg(XBZGe?N&dVg!]_H2k,rdeuLo]_';s+m%3A3Y*UB1+5!UE@S\Zn2r0P*Q^'[LuIt
%.aeIH82qq>g9O_q`iH[fkpAOI'*N:gQD&,H3!g7:V717oTkN^^R6!r%+^C]bQ80,.+KX6o'#Y@jOcJN8`(][TlRg(/K6Ff#E:I7Q
%_*I7p1'39jGd^q2E2]Ck&CU%RJB*ilFsM\HnRcU:1sdq!1X@oML)f/u)WFpQ6^/gL?7G9r'K-&1K3)dhR2Q[c0H$PQIV_8CAVU.g
%O-_/,<)6@IOYEX$(ujPgdst!0:^g3Y<luFO_K'M85hkCcMM,d@&:ldT"6'U0A;I$WHAg9H.\W=\gZE)hg&ke6?E-[9[aH0*90%;f
%!);:34uiBm*(D)GjLQ*o,]//Wb+_hVk`5R5DZDAME!ZeY_I\Ob[[tl$UgT"8U&5f(rRmKr8%CB)/><6dTp`,*`;h',Mf\r-5<:nu
%0Zt\ui;"(\dKP<f:)GSsTWK2lgK9L'n'E?h>.UK2,arubTf[Q,7nT6oQA]f1L`;jJ;8%Oi]N[;NQ&^P26s5i4ZZ9;4nrY`,,PfTm
%;KSj<`,n\sBemRS&&Ss;Lt9JF%P]5'C:[0W<??WK>[eZ$'@_rK=Ot/J,'BX7KL<Bm!PhO]8smQi9$r*$1''QO-N.H_alc#V_j(]6
%Bh*7`b"fH)RL-3ZB/,&>(.14)cj-U&/CPje&WVS(knKs\5<8fU"4?O2gEV4N_JjWV61Y->;KiAJY]U[(G,3S5H31l9$sF7JLQmf_
%*F`U!ZOskX)DqSP_!Ch"&W/#oSno#\Y!M[\#a(XSG\Uh&I1Qsfn%.;:5)>$!Lr):'iYdS5Bh"g.f/0iKTnV3T,`La(PY:(,4158G
%$7Y(?-:8c2,R-OJ&nf-'D%^I5Ob;8nP?>%\lF7%lN?KVl*Y<&5LTujbG)/<gc.EpOcR*7FLdRjhkU7Em"Qol;Qc#:r)?=C%P(@jc
%.CYHcb@s=3(&X=D1ANG/;))OYZ"qehTU/L5?i!b`[\X5L>CLD38U/\4&CLu=3tb?j*s.CXeH$k"M.X]mY3s>>)='3NY']:ES%+'i
%&.6ThY(-d4!?m'56_[^@\AUDE+j:S`A2IdgQh1rr%1,,6@Wato<&d\rVU4VG-*](-/CX8\SKe%<2;h2T8h(SZUbdZ3B`g]"mm+R*
%JQttRdY$T`Xk\'`N-R1:Fr:n1CW,:+$S)Tqm]iG4a<\T0PN3p\6ZW50U`P<sU]D><E[B-H7(<A>&d!!)ifh9s8IA*(ghSB'EC-1Q
%OLQIBYWt=hd#r'?i[eA=>$2r=B:pITM=qtkKI4)NP1\,ZT&:nc'''0mKJ)Kl_MW#\?nNkGMYPg=$o(H4+S;g9$mF`l#-,h`YEFpg
%AGH92-I.L1Fs:W/2BolE+N>^!1[1M5Z+`dt75,O0:Tu/kqX>]W<G3[\Vj]LQ.6Z*k[a,?`;HNoi+qg7#G^*DBkCR3BRiorZ4bXZi
%FF'K)mF<=',O-ZH!9n3L7u8[jM\@@R0M,V;@$(UY!sj;f-K2oh!K>hGK'3>/C_Fm)_^#^8H#/+u"X#-k\@*7\-qWM6d-t$p5tI<Q
%%"[e3hb?9aLbPP6T$F"8nORmrE%3i5k_.;UXm"8f#FgMP\\[SY!d"M71e:0SdZB+j=2OIs4KVG9&tr$F,Y<[.KP%h[=q&9L#IMjr
%Un[(W$mL"e#XB:Z=j`?;5a%rE)CG&I',ib<)(C)H8Lk"BKQK'L>:'nMnlLA=4:>UqD\-$+^];_X+=gWfk?0E)"G?k3$nW%=e!!sT
%!hfTdiZ%qi,'ht&=NY(YIUN4l2?Jt,dq[bc[NZ*8(fu:E?#E,0:U3s(fLR3BK$]0m0caJn'Zpua+G>hj1P*mZo(XKe9`Z8'&2I3*
%QMcK8ggHs(r#p6W23]0>+LYg:AH9o\.LS_/+AR+_3H'Ks9FW9.HAidV`%Gj;47A:7-eK:LP]5p68-i8)iatTg()+.XN<)<h^#1S,
%QQ[nsIH'r?]hfmdag=csVo92Pp*S(Q=P[Hm*PSrkLfd>e!t*.n8ICWS83@:MBL<2i9X2C)$m799g<<6@&T,sLU^(.W=GG+^<2Ta&
%d7$=0*iX".OK]9[(W(DOJ1d#KAGqrjc"''gf)$`P6+G:qdU`g'L1B36'-/WSA:[BUI0QCpo5,6N.YT=C$rPG_`7St[cOpXC@A;rl
%a]tKf1]SD]-8VBHEBsP*[O,poT$XRk"B0+f'5!Wi9i<Y6UDRGWKLt`NZmZ8X6UjegKM?#nN"Y07F_?=k>_b7O6GJs7dRe+do?P/!
%dCG]2+H&U]&0_;s#meIuaJ'p9-A"'+h"u.MYsDIF6n0MiHG]n@P<IqU&m6'/4:7Da23Tpf#YZZ2],7>5'[.Y^FG(h][.sfFh,LUe
%9l9m>&;3ILKH_%G)/]?a;e(T)jpkEaq?JLcK\\-:ID*+91YNZm'a`2YR%QM-4$)k>/;C^hOB*J[5i=+W4M\%;/.EbRWQu;`,?@8u
%%gEP<%C4)LL.D\a-B&I,!lG(j^_5aXFI\4X[D;;Z#nK:7NC<!K[2pPVlj/G[q0IRB`)-r-[bm$)Ba=u86^6ItQr_j:q*<P_R1>$c
%l]/,ip#;h4kVhMA%VIWV;F'^jb28<`$kd:,Y0]O=*ZPcD&-_q()iR.@B!;u6`HrkE5X)%O,D+<:,7M>QrM-#,UMYheT\(enW+8D6
%4-0kiX;l\nUWk`4"q_$+K>Ro/ZkufMVuT0J&.GfPT5Xf>Rb;N-!oic+D%[1`C!5ZH5iD20o+;lEj+U_nPO2OWN8u3/^W4fhY(W]F
%&E7]e1a30\Z0-_i*,['e[$X19fq$2G$Iq>qquC/sX:DGd?kj2,'l$C?*=K'4*DZ6Yn;>/6**rXV.?@M$qM5E4&Co8qnhZ-WalKiL
%a(89rIml'0o9b@G1Ec(!3i#28+pLd[X\LX53762;C+oeRT_)'PiOTF@"PA:S@Tce;PU/FlN)/:W2']`T`0fm'#m^Ne37<Yp,D%^0
%RTUb\a_hs.(t/XS_]fGP'-(*n&&i,g(8M?f7mLY&'"+!b'Q>kl5!T6[++QmPC:]1ejI)n5k^X!G_Q!hPcg_jF,o%<f!WaF8&FQM$
%O\K9j9E_h\*,Il2\d5-.S0XD2Z0iIW$L!(H"]GM;#YdM0_n$_E7?@k`/\C)H+8Pun\Khp#)<)>g7j)&"^?Z+8TeS89$#^\P+U>0.
%#'t*4_P&0<H8nS<5)DSrcnM)OJQ1Q8\PS)/1li2O2S,"KUje$<NZ$\66A09'0P1Dq#p@8%&Dgea#/kJ.Ld)OJ):F:RF+dp&bTdO`
%'9:trL>N6Fa0deC+_aCW\4rPJ91V"Rn:sR]>FrSO#7!qd6>9U30u5HY!/>;Gk\/<b!eSE/Il9:>A-`Jc%5AFp6H?l/L@gi%ChZ3[
%.&eL;A2.,"3PI<7)LTc)gQh4Q>O9]D`ZVOcji_,V@u.+\*f4/AJR&chkmM,`D5J@\E>4:6O]<lULQ3mlIn',l/JRc>/=lj>L@Tmn
%Ym`!JR(sh130F:J)6>[)$&)iAo%>l_*QPFY1Kc[]@*%:C?FkhUTWN&[dg?d8o)M9X4AY`5"8G5C:PZ:?-gZE=O:2H&La!HWTU"Fo
%*!9Xo]I(_'2GDcXKE_8TCX/*WeI9YMf3og![s2g$XChN(m:ci1&.$t1^lGZ2[6Z2Db)5j&JoN^H'sa%E&/+??)Xu)bLCaK/@t!'o
%L(D6%-639LLk(ksk1QXkfnr4[dcWq+[!eV>r+9b'"(I,fibF:q()YmrHih\[G3TB#-GErF$]C%?U+j-^"N(gh0VK2bCcR5#r"uK6
%o\.EuY]Xp9;gOA_9$;0C9CGBeZK"KT_g)I0GF#L1ngkX;aWT4Z&Z1]W:Il,e3nb"&[N-B`KssffW-nm]iR+q@P^A4?^^FNd%H2De
%d6IaIHB6m+cdNr!"ci2&H86kUo>!(q1>tA`C-RBA:`n\9jG;I3n-,eA7Q(t`%2[D+"<ZQr15)2bJTqW58N+VjS0/J1njNX$a[$"F
%7'/U!El<&ie)[GKfL0Bt6BIL%?s%*Cgu[`%R/eR$1j-\>(VE0ENefnEJ@8jY`Q!mFWGH8SS!8FWh'0)%1uAZH)I=lW;lF'/0pKV^
%Lp;X?p4_UC!6Gd<LpM%b6O/=\(9S%W<Zp9$+,V0\`.NJREt]44(H^jD?rXsoOS^3Xi!=MR4JDB[aGN>(dP`?joEJH">.cK2[e0?j
%#!D;?fh+?Q*mu1pkUPJB+]HR=2+nR?BM<(E7LJ%\j!4rDAPam$aIX-Vfh`-N)?I$>3o&+O,R4k_Z"&O@SdmoQVOt/E;f+QVN_R[O
%j(@@\.<Y_Di!9nR3%\BLpJr-C5Y)&>`Gc7Q<P,E3SO+"T)A'279\*u+bY;ED5SVOSKh/-V*,@=G@F,H9'0&"@-EK(<DXnUG+Ne/?
%Cmhf[/VJ6p,rVHQca5W(`!u0ucjqq&HRY<s%$QESlY_MF_MBF?eH<AOB@'-+JN.5S9JXgchlMEq`f;@6H'ls>8AIV.E0)Y="=HJV
%Z,^%ti8#QZNUn?E13n(O(J$Rh\VB&L$BNRY&-nP\Ftuu"lWS>*oEm.menB&U7%O_\j<KC(R)#;6@@4P_]Et86(D^57IRo\X6ec3K
%fRYEg_(?&J-cJiZbCNGW(-k=X`6!*7g-+W'ReF$qqL^FI:'p?pKeO)YC('!6GhLNO_[sJ4C,Os&1B0B@-j!k!:e9?sj-IFQ*t7oS
%#T_=V+AEIU/l?Rd""boZ6&_L"4,dksWWBGq\Hi6J!_jg%iQ<9"ATH!]_!47d$lr&q^*%)O>=['P]`p_Ec<0cf2#Y6McH%.b'?M*-
%:7`NKjcoo,psoFq6L&6B!U#%r9#Q`$mIGqu353AIm75[X&kq["7U=L;DB2+WgsD@P8.4Z=(gH_g3691hIYI)8e^uM5@s&C0AiiX.
%+DrugR+GmTJmJFJ1GEF7q.q.ohPSZQ?iW/C%#FE*ZU"RHkiKCYp/tYKVn>\BFp]A51;Ui%rL:G_E`\dHY4Tf+ej.^SitK/Y7$OL<
%rc,;YFNpG;\=>5h8SoSdN81i3UF(eAe"DLC]:PjO(_4g23<[0D,Vks9],Z?e.SPDVR3Do-<6kk!:8/j<cY7/qp$fsa#*:@1bmu)4
%3#Ma,gsCm\LV-043,ff:iHt_?(5A_Rqnk4PH[tGFHJ7;^i337A.W$ROE(?aaLnHMU/@G`\6H3G#-Zk3uPU.1)EU"=51Lpm7e0%N<
%OU*^,aM/Dt,V^n(8g3J#*1Jl=0UV?O.N]30Y!tFU5?s+tNX>4d_h&;f+K4``KERm$=Jd`+Oo8\#USA9e-'`&),iBpLb>9HW"Yp+9
%;oJZgKG`e0!@6>B=NQ^dJE-h1!Y?9WRcTTIOrDpm0os46Usj=nQ-6N7bD\k</-_S>*dM?>UM,BYT]?._7o/@4DBoJ[F:*:"`i*7<
%@3Q5>gk1TD$X`M;LfE?CLgDVA6.c465ea0;FQ>EIA1NK?Rg0nJ@a[%P%]1JiNYOh?]4#`1=:"kM>J<@53ehE%%>ToK"X91e==I#M
%[X`sf-/jnG3kfL*6pZD<&bq(b11?eGpb@MAQ>q9mBd!juCJH6#/4,5O+n.Ebp+;E!6T'YF8VX-g>pAQk;Ar:EEB]4Me)ka&+:`W(
%,[gL,.-.a=('@F-U(n_3=,D3RGKa^;=-3\3d0he-#FA3&>Lk/fI**.\Bb6YDHV8mf9GhT_$$7tk0p8#gQfPFZfD.0HE-YlX5m.9V
%_SB5-OMXOfP-4HlCEa!3eI^@(qq:hHnDimq*)?LL5&`)<-Y%+m'X8*j*=Q40_[tqms.O7F,oK6[+ug<<2hV0cii!pWd=;G>3c-8s
%hia>1cZn')Mh.*g6q@H$6qj7?"AN]caMYrmK4r#QrdrB]!6'U"#?sgFnd*N3R-L:3:I>Q#?mI9?+[#IOi9]Bh/X.0YNrt+_j-L8-
%nUcdmaW1s5Qb$jeUFH[<p4XZ[RDfqnC_G/=%S2g"-o?]@3^WrS/Q=GmV],e05QdoVU>A8C0?"D1'<TG'.])O!<s_V\,-($a`D-\o
%!@Ah1Done4ahHdU8p8HRa?9V"BBo5t:kliS0r/tN%4'^ol^hNu8(g/3*B5C`aU0&5Urt#>0iqF"`<Tipp*;RkX#&AE6=FX6"_?\B
%E":_-UTk_JF5#Z=.VE0RlH_2S%.t(f"K2W[L7:AgZcAU9Fu>1=T$lhGCdVF+Y$mh!3E_fDcjZ5P'VRgGZ4fbpOI#HZ8"5>F:+6NC
%r9PH9QN0o^O.-0p!*GbI5u*_K%hRhM@Z]#-WY`j&-"dT[SU?V\+4Q@VIq#,n5RMA:p`2LO5+:/.(7R?l#g-!Cd`54[n]!1+Zo)=j
%6H?C*8.`@_4LSY0"(Ff=V;T!YQLu6F!lPEqK`JKb9agcFV0.X64G&c^6?ffpp]9@k7[VTr4NK%s.".F!d7>f]3f\B,L!<L8PBafi
%J2]Fi)%;0c8u-3s/eJX"_/P-">AG@8@#Zh0/EGH*2W)oi#o5W`[[R\;5lhaKV[!65rJCA@%LpeSQI_rN:ug$q`j@@+>j28+&k1MO
%\$]Y>&-3!R_KnTJmI(Q=1tFpPBpc+s!oj8u!dj[5e-6$g&,q6B-$2@AnZi9B(')IU'"CLA5kr@hD$l)8hag+6%KNWSOS:Y\r48KH
%ALqAUKZ9'g1Jf90CpBoTLo^[BoZrN0VmGqadhmN>Bj]q,8@]qcKE.`6e2!V[EU\JUBTcgK)8o)a$P>hZAO-?4d'$re:pPet*8s2+
%=f>O*g/1s_"_%bf4sX>DgC6c->f<B`ig#P,.V.S)likiR\f=S8&5/<25@CIG)upC97+kEI#Dd=cZKAGq&A9HY4I,)r=^a%`Y$q`<
%VCq'e,o^D"Ce[EdpaDhOMM10YAr/8kLjrsG:iO:j:oN`sN+<soTqHe$h&llLo3](h?C),SbJTN,Y=GnOh11DkBL\.=2#WHq.XGpj
%3JQo+8o5tlA8hr`4#UM]#K1aPF.A=8(hRguTjZ7lQiTo6CDE?gFa25e(N^pqX$KFu$KS;'Es,0&IXAZS8d4Jp5n@&#gldu3(+dsK
%YfVa7#p=hF>@T;LB-Nha,`5DE[o0ZSPDAohO+_m0S#VdV6A*8MZ)R@FV;aj3[)US\PR,50@X;WGT4C.fW?N4))JfX_g'-I>+Nhk=
%56QpGMTH:hPg[c&O^SKJN<VXAPUSE,p+9P15W-q]?%!!`MqU7k;M,E`7/XQJ96.*k$j4q$'E\O9;J679#9.s*2rPbkYlNdVfU13?
%9njb&2m*oc]btQqfHT?`1GY1CORXnLdMQ:%c*Q*Y'.=QV3r5Y[)%:Gd:bWJP1pg[[NdK\>=Fpd1:6g,i#"%"E"dRLDF\rJg\N3.^
%)t]6I_E%kLQ,s>N#1sE$/LYXQ+#q'%)+N4S.E']g]KHEVfCgNd_KqWI`tgd(eNs.sdQoXs?4EmaUh%+?6)LWB"t'1k5<*6lMl9bB
%0J7W1P-$Inp&)V1ahESX\KP=:E*`l:K*u[m`7Wau<^?@"&;Rq2"Ik&\8p)OqY$<bb#?s6e_)o*$Nj1+!C]_H>BDWBXYj2JqdM&&o
%4<'S:Yg*P^=Q1<t!,XtZq\D:qj8l3TX-3pGBt=`#8O'p+@-Wbm,kc.IT$Oeq*U%]L.S6cF0R;oS_mi#>Rr>23pp,o<n19q%>J_?1
%L;)UK*"\2sFfQUb6hrS))X(!mm]qhgB"mL7e<pB*'^/(Q3<9@gI"!]*fkk$8U-0:VplU&?C;5Kc$8[JL#h5dR-nGsTqOg;P0%tV*
%V!ekW$?Uk%'Hf%;c_4l55g/^IL.a&-ns_Ro-tBJIjTe)M]g?D!AL\r<n02+A4",jW(q=J"T+OXC#\`:Y4JC)(iq<NhLgV[pq9hn+
%eU\jg_kBSjT]c-B%ET+!&;S^pHiX@\$l_-m:a.fV$2(\=WRG4_T$K``K<K*)T>_b<EH#G.?9JT=a1oZ');73]3=d_S+D,8K9+4d]
%\!-/\_teBP0UZ?r^9-knKbI)qf)T9qeFbmaLr9BDOQ>P^*CB"&*nP+8o<tct,O&r!E5Ik*Bp96"/8cfO%C).[CmXq/0mor)Q]T*L
%lmmGZdY<Zh0kP)pC*i>SD9NFKVqrTo%AAKXP0u:5Hm_r%7M\<$;YrbUotA.WE]d!9'1XQ\D@):SU2M=4[7R6b35-<LeI,;h4=f[[
%,dbBk*N-jDrd3sKeE7MCS&Nqs[cr,m2DdEAS<`^MUW3A?`3k4@\B:3_apM'g*$N-R@@_(Y)n<\+&7oVZR-;q0#Z<F/)ZoO1R,J8+
%M?EI=$i;+i(?l(PZ"8rX^`530@'JSS'lBFZH&hB9V@eQZXb()`?k87#+U-6o)qM?Mq0>l[G,<0o8P<\k?.SdI@mOSOe[Rp3=nrq@
%nqfK;)+j\i*3@,12J@:rN++2G`n<?BUs:)%;X'RViEtSb*B*HsbUWa$QTDj;U24&?\q5l2FUu*#i+aNFV7m/-!_+j`N[,ebTQFJN
%@,lg-$-``,CtYfk/S-a`B]m>+b;d:DaRWhDT&iV7nT,PY-h)L0;L<d-:RIIHY""@L0o-ha,B-oSNhE%3Z0QtQ"%8#@D*88--K#TW
%2mPDuVB_H0PN_Q?`#Lb/V1s+%g=\r(\a\o'%#@o<.*IAOSO*ShW$&4plbc!q/^lgi)B!;+Z31Z/V<r_pEGcm="imN;8&`c_A9FU%
%(/ma!q4aI@&U:`+8qVq3!t7HrAa*$[.h!H;oa;%%U1\-ie.ni"L@.$U$Ib5N+c#uC%nje3@oEKo).l=m61d%E6sV-9lKUG8P5R_-
%isODb*kKIf>p<&,KeBpVqO)l^ZaIY>Q3:8_^fioeYkR@]@6!!T67X^?b_3Fo/1o9-[BSbIC3tb4'%:S4G?7tFg.64)5b21)5R^k`
%X?3QqZ.pH+j`._c%:<Xgp$cp/@F9=G+Bu*.!Y\"WEIQ#Q',tp2M*[7MMgEIH5Qi9G%L<AP1VenpKa&_2`e\)b'fM*<gPT6bJ['%p
%6S^qmL$]nDcs2^Qm<(hEEsun23R$#58JMGd]eJkd)qs4*I?R?;emXrM&7K8sI#3dBQKn`I6eeKj4PL`OBR2E.q@5>1N'X&]p34E3
%h!j\JM;^GsB)?^"(*@n%&g;fHWT+3"nR[O8YSH2kQ<P`(,]].'G7%oe%cBuM(RaL`)2>Xl?>,'I3VLYlC,_[/i39-F(J8,.6;t:m
%4DdQu*)i"3[T8bJj$Q).(5EijEADn[[X@[;-qaeEad`WR$sS#r#F;E--Co@uI8(26_*#"cc\DYTDkRPm[b!+We\t:2&Hhs)bDK]M
%6^`L6>V!H8lEL!l'2\H?;*E]TAX1T(:Y8[MV4@lf"bg-I>\UgA'@M8.'\,$V1V'#Y7!ZMI/Or^),-Yc4iVO3t:$=[98iqV1Ja8H<
%7<W'L!/DPq1UuS9MhMUm1Y#%?.EFlb[Br+7\V\Qg]$RprXC/nW%8)<`,kdAiZ2%9ADWpWp$,i2++su=F-p`G,in'.RllQl;,XT&=
%$C+dS9Yk0XdK'A<>qcQa`>8^u"I-L38Dc>D%0=rniVFgjW9u&Wm82df?m5=dKlD/@R_DOT0W-Z_`'nbQ&E2?S=A!nRk@*,ViX4`#
%Jh)%bh1MaD@>3`lERBlK$?7B5$i:7535V@6a9RMh>X0uM"#U5?CJBD??0)59`kq4B"/b8Wpdup0#%rqsJb0cFP"<@+(s>gg$:uB$
%K<V4elfneu3Z<]pYRL^_,n,9sW2/T\.&`A"9E_kW'n]Zr(\K/+G]<7NWFWo1^d@jSRA[*I%)+?sUn.jg_hrB6/!)qrqcLc5&R8)V
%70u:fqQ^hK[^s8107P^ljXQ,7IY]t'7CIn3:UY0'E>;AJC;UTg[m2j6IgalUQSc4>J^#dc\O9^N@9S&P(R6P#3JV8B29j:Y\^,Ca
%Ln,riZ;>7E5a'%#r4j(s0#E>eJpW#-/TTQQ(Bd04hlosUl-aG1q:;"mn.VO9W7^#`#jE^*@&pLU[eYZCa#>V&+a($;0SQY;(Q]@[
%B/"pAYIOK4Oep\ida:oe+QIbof@Y&2%M92)!3-jTo+Zu/'J>5^"p(RWn-#"CFd!p,j![,EE>sH\iZLnT:T42##kfkOE?3[*h8&W4
%(q(#WIrNXj(G#!gBZmScj*ZOEQ[r@3]]`6(?VspQTg/]Wh[':N*'3uUkZ]mF:N[N+Y_.l*<e;n;2@L%ClU6M.@,EtL49KV4)\WYG
%lSDKTg6VH@9^1eRSmjq?5qSGQ"nQ]3=ReGdbi>WZ@]MHi"fgb.7]i7B42\JV\Ds5>RM?Uh)]Z_-YDA+&+eGL%qt2IU>a*'>i;MS3
%&<%A7`*%>RK3rnW)m5?BaEY:paFpJs`!jd'E(a7;k;Xf!Zd7ogSWU;AbRS8-'X3TSU?*=hGd7>t?#[]BmiB;p?saN?:cWM*)jRfU
%=3:8l,Od$RcE@o$/\d%\i%VV@PLAqB'k-loH&6cAW3p'F")+)`p7^+A!Q=N#@:>q"=@8T4\jObu^636#*,fq@*@!20R]`V5$6CX'
%#5-d`#[EiPH\XK$\A=(!6HCe*p?S@H:8d.9$@-"7ZYq-0jKnVr2m-"E0.P6]48R&1I$5P(2hjOA9$a?-mp[bpRgd[aPd3T"E'b8u
%"HQnTRD0bIZpK3Dg'2]h>Qr(Rdals[#-&FV!l9kr>>ps-X&&S`-W"aGj0oR*a7BB)/K4i9&]E&*i[oY<\=SPBd_6/Q4@:2TE(U[s
%D\Bm\0uN>Krp;>*C0[n(_As-OY#+kP><Ka,P-W!i^qTF/?,G[^#9_rN]]hY(`5&>P@WD5E&1lYTI;LX=i"D'"oiJ`YFd2gj"'g+[
%@0!,5D\i)$V<<PM]*D"2a<D/qXs!JKP"<X,>WfEG+eF1)Q=IHZ;*<?a.)21%Osc(F!!a#\pnkA_4OanKfr0Q8\A5+;lYV'N&bi.K
%?V#mpd5<K]5tW#bKYZ,HBlLkL>8\cs!\nY;%G</G!&LPmiXd#G`cu%HBMs"qN>ttApqh^F)nLXU=@(B"Dn&?_9q4As=)&9U0G,*:
%qYm#([:dRj#etDFl_Yfb\ZEbiI"fY88c^AWZDKE<VLj+(f,&?&#Qg%H_,E`lY12G\'*OJ,(>B++ktn"'P'8g-A<6dHI,[W2L%!kc
%/>IU[U[%PQ3\HW+0^]sPPEgOYbS^J1Li2?IrA]Gg(E^U#7.t:%5jZlq7_\Xr$Re-mPlTP]4jqhF$h],PEls<4;'7]Gku'l6Gn/nR
%&A!Yr@GWd8Sd2<>fZT@tVP@)d!l7_R14-gN+&9C9du_K.NuSaEG$k<]Y$W2]l8gBYq:lEj^mPaiEi#C"+Rj1i%1jGp(W2mma9N#)
%s-#r*=N/XT\@UB4l6#-Y"p,gD>aLt/_GrI#61[GUUeXLLS8(KT(`-A]HK9B3Ie8?BRa<h-\nr'-QEM?,O8t*Yhf0_<?Oc_Y!K]LK
%6"Qao"N<T[_iJOtcBKE.^kl&q?O+XM8W^LEh]sJ7@JLX0%UXnO9B1I>&2fsX=Ba%gL\@>KK495G'n6/Hs"!JQH=f1#._N7Os58k_
%=Ffu>@gQ4hKJX;mOC3hp@gttR#'iZ\r]U3B&_6?`p2$,Lfm14+XidfjN&Yh&M<8(q_L1;aKC5I1-*XqL`rX[Rd>9#C(n]O]SfA!V
%NgR@TC;?u%Qp/K2c6A.$P>dY$Dh,Ei3_6b\Pe^a*R3Xud89JLjR)i5n_&[4YnkbZ!1euI&nu.5j.*5Ns7;rJj(((UNY8K!ic^!JR
%bk_WeCFIF6]5R7:g]f^&SfKq\$X<(B:@SMTWIYd>VnR_'a+Lkb)R;4V@>.O[i\H_q$mDeOKS'9i"SL$fHIjZ]">sS%Z#XVn.J(F(
%5X]R_O:TU]L<?_FYlkoPGR%K1PK7OFqbmWmK$0N\('Z++2F^YGM_J/J+-+;=:lft7^Mju@K`sp)jeXA%K3E@)naNYHJk?/_E?+]4
%!_r1AZiaofXb#.WEl?Qq)L(:=#lU9ngJ3;&^L7/=H>RC26FN@POVkA+Q[\.1K9X0I@]&\;,olNs5:`g%P"CY7-#k"2"a-]"hAm[?
%9p5"pdpqHp)a`_Z-.ag:P&"[[@du)2;h4m;<)sRa#B/S0X@"ep9,&;Q/0RJ:Vio1F:QF8JZ4,^gppff)HK__F!f;r7omje-0nHgl
%7UYna^6a6oc=X:uGD?J.E!38D8-+d.1ST%KYZL?Ji[l=b2gC?(DD+/1Bh`BG63TgWiqZtDA%r%%^H\4pD.@s-h!&pu(iXA=VAM8\
%PkT]NcRsK0rGnu'^':%6rR[$\AiYB"b.e024<j)N.\q>0=m$bTR^]!C-2V8LS]@"M%,>bg+R1Tj:Zr#'p7@YOf.r2Hj#daTJn`(3
%NcH-he!]b]0s&bB#VN<`43Z^+<4,n9N=`%j*UY\B>:*$I,L'O)CRdA'!eB?PWa.7qNl2TeoL@l[@6?BnBe:Md@UUcX=d5-0_dJ`8
%:/qi/idq%Y.=_FCEd"n^-kKg6KD-4[-XG_pd^;gF,VeQ+>L4.El\CkVK@u%e9bB+Be(<%H7Do>O8509Ig@\0_%k/idh*[CVlW]O>
%f@=j0)PI4Xn+f:g/+h%*(7Q58P"IMe<pInk4d5-KnmR/jYkh9?<H\WtWUKYgh&:%N;kI&#JOh:I*f&gd0NSTo_-0Wn*5j$n$YrpJ
%'ao/HCJ=t`B^fC4+W-M+;og4AQ!4irk4uWOAq=mo)_O+0":0SNg"Q*qfNm`U[urVgTIR%oU<;dmJ;,K@GeGhi!iOR)n"_BLB6*TR
%aC@_n:E,DtkhhpiA-!>V59o3a/quGf$lZF*fZ=d)_\$cVbgD4eYkL3bL2q2OqMWpfAp5fEq#?1DK56u\[!MP;Z7iW]+MY,Af@it]
%.\L9OmTiC.ApctLKR4r%_n3qB0\Ba+X>\/1+>i&&1Jt7<:IWqR4.((eb[%MVKQ55<-VS],mGStieP-qAEXV2f"t>%K`Fi;n]T/<F
%a-N##)du3q&]NGelqYaJR&k)4:]q9Ek>F[_c3T!%Io$a<le^5eTb`+h@(ERHf8V@s/+D7ep4;'f]8+^.n&^uW/TGL1dF=MeQU74j
%:BP,Vp<jhOB\?O5-Rcs(#D(p\Zfn%t@,slQ/N[)1MT7Dec$-&$p=.='ar3_O,-uOBnS7T^`Mu@_\_$_if:I$s6>gdXD]fHXjO-*k
%Q][E`;`V]lc3`p3(1s*1/I0Mt)4:Ka"U<PQ0gs0e%DobDg"X^ln+pilinFU^Y.+#=i`e!SqD03:Xj.I<d;?"Mf^-sAhu44Q^iXKs
%@I-$2Uu*o4_L%:#<\#XrnYGPm@)^.j,hVkmoeb1PDoS1l(H`D\aVSNlK.YaJWpkEVnJHdF*cA\YUPIK+_V9/.Efr4<@`cmHii'+(
%c<fMe>Bi&(`gYr@J#B`HjO*mim`>0%l8RX%7iFh\:s4KV%RMHUMV8NXk(%n?blt[L0#&$lJBj2J^45s91/SP`SM@P4R.7FBkKKK7
%`)d\Lek]rcf#`?bl.Ml#_[cPt3HN`f:H2TCOV]j]e'm4fj>RQ/%FZGOh1qM'qf@#3-O?k*<V7l4cZZ6n*!oJqjOF+Oh=&SIFVJQ>
%$pj@`)+SpOXs_j$&eXp21I!"B.=>iSOKMS"AFua?)rINJ;3?<-W;`(W%r6U[T@guu@QIB!@"UbGhor[*Q>RGcbrUuq%[b./\/]MP
%4B3)rR+7B10+mM7-lf>]Q19*El*!C%nX.JYqEg=+"B$91P+ru"<nD$0EmG0W\Fp&=<,']diq;!LDAXNbG5ce+$uJ]g2?_IT6VeG_
%R\sUi7YFDmEA8Hc^elEE<"!=B?_rZMf&!k'#iS5'[*h'%q*\%X0N@LM^ec"ACW9"<\#h8\9_4%Yf<jmL#%D:S?"_-7HWimPYf,9%
%Iul_?bicA2WYHX>].76b\haEq*3fc?%IK+\@F2g,#)HmWISG$=YMs(UKcQ$p//fkpF]T`Cef/PNglEpQf9H?BVj0[4U&Dfb\Ff,A
%i3#hJ7S]95=6Q#U3"E"p'J:ZOK!\,]Lq#;@\9ra[jd/G!U6o`2h+8,"&+J#/lh`Z1!(JTO^4`Sfk=B0U^^%M\#P)QB(-]:.[^pV"
%8.c-#ACD4j6tS!h#]rBl<.HtXld@mj=R#N#,3<u3AG[P*;?+6LW"URL[Jie-*=AM`*B2f[,g]b?ZYCJ6SS?Vk,:Qbe=&e4k'?pCR
%lXWAGHuAZC[&d,5\+L<IJV:oMA7Rjce4i0><u/`+YK8JHm@MLsIjheES]?]hLfM,7eiHucFS%VH<:Tf!JB3^-.N@G+l[o`Z6m`Mg
%!Msq'*^NM6Ttk2\*;-o8+NAq3?@&Ij>;lN#"%1ZL:5QX4B!G#ld`DQnGpK^!6!;F=<_*dJ`:Yrh1">d58qu(0@hBp/=0UH^I=m!a
%8@^2W_!#c[^XRBOX&?MYC%_NIHj?3kn_.ZrW05t)@)l=Xr/jN@n(mAf6?Ua%rS5ZeeZ-T2@2/HE%`s$lI.=)6O:d]p3:G5;Rrl/R
%T%\g4TbGFN;*aC5;-H?d2(+)U.,ZId&k+I_41,>A$U'pGes"2KmNKGGMkHgV0&nPF(U4E&d#@d$C$91AHY83X<3W]mQ,nOm@<1(%
%f8#g7:Y!@_7k_u',[Gla5)A7YAETHMI_mEKr+)GRMAqL^**^9(]:B\i?ptL]/>Ykl4)fg#4!L.ES$@VUTB)(T+>Q4nL/5$BDf1I9
%C.EJg6B@T"-dO=fNK'W4_^.FW7d=?#nC5XnBRA2QkF(T*7SGS?@*(-4DggbZS6iE=Ft/ne9.(,X/*Ih;5HZ^\oi9c6N't`Zi0%&3
%iHk].A8/$C"+rd<jDX$AEa[,#-b>eCa`s3nXG+Re=Gr?j;V0a8*[d0BS>/P;Ug6U+glQFCG&&1V>uEH[eDS3K'5ZM3bgtJ<pY%FE
%4Bf(955c\*q>N282=(H<Ts$F-]Lq7#]O!uU'pXSVE<<^"dP(@kRKhU&)6+:Lj^WsjiIJS3W`'cs<SNUtXuAVGFm-+-IM!;j<7&[c
%kO%T*a+C$pYJgg`aF\ns2sRBgDF,\rSRRdR^r#DYTF*Gpa<c5-:_5@Uqu*F;U%UC<7!LN)931tc!f'_3ErU`$Dp"EML8ji[@61nE
%^>\0I=tL",DU?7G?QYp6p]_2O0".]D)d0sih'N,02r]4@2?VntDj^!&J\K$Y8ZR:r!Ho.K&c,3uH/\5bnX2BjKsmJr:SItR0KNU4
%XeY&ZDOO,I*$<q:Ub74p)6$RQ/7d&l=R>D,6=@Hi+(i&bOFrX:Bb88ZY3"Dae5ZWs6p-,0cZTV#j[S0Pb'r,glEe+PPuRc&hk[TP
%D]?=`e_'5C`rI(bDOn"XhVbr!>8R@\A"KZ00=>P\8dLVbqF\S8#j,o^_[f96;9iCbZhMR/_L3F6"XuL8gb[3XFsUk^:j]WnW;Alb
%\9^<B(%=$:a/4Gi6DD<8'd/,7h5?4pn1HTkAX>lCc.6X4WlD%CJ)lFi"Aa1X/Vkej$YCR(5LRi75)_Qq`(q"Bd`P+LV^?8L6NA5&
%':rnba"<t_Yo\#N7)2FN.Q"Kc3`Et"g*>0*[T[*1^\W@?EmJ@]KGp_Ja5s7'>"Yuc&u64ildNTjr(f*K4bAipI!>alrmYpT,rM[h
%=_hdNbrCa)$2FJ(JV!WmLO'E=qe82#4JBEaTbEs;,1VrAXXV5LlhUsF<%q1C9i07.6AT??9s$((FJAq]'.[+Sck(9fGC5YKE>XY;
%=$IRIH/.bbd%5u_60LbH;nVRS`Hd(?A(<5)r+OgbW/5kfF:sGq9FE;p6SHr[:X[u+>9rti[R21\X><rl(+p@F=B=O\nRRVS#FG]"
%3T6+-J/aX#[9>q`fcMLp^ktSgKFHRd;IL(@Ofj[F5N+lPX5E1I91*R)b6Dc8g@+CdQPbZN_]S+g/Xk16@>S4omaBJK)>[;s_+(YA
%::+@.SDW7rl_3J.SQTq<ojrr=LuZ(C?)ge"0^'T&:YflZN)WsLd)A)nqI<_<,p&N0K6<].Z<<2A$ti3>lWB.Vlm]59E92gLX2Z[9
%?Sn^!!O)$&9dFggciRo5P/1F\8r#V#n'o\G4OJd-]RT$;YWqRZ!d`U^IH3m'%=K.?4q/QAc:2hKbVl339S8gPEh+6nH5X%Li_;%N
%"\>;q0WaVE6/d^H=nj;I@3:Fr!o1'N`n.ef^]aRk&P[mcH+!;<jBH2d_"i2pjK-^A*b7iC`bJp"(]<7^!Pui\ZOHuNi&]iC#ST2-
%@,N0d/IS;C95p4OpB(t52TrCu`sot6A!-T1OR)d.i\>%TUt9)bSZRKf"0]7)CTa.cqh)8'kRBbOWQ0k@>b!h=F,2l.WZ-S;VDHI7
%p?HCc02]S>J:r<Zb59ui/fI1`Q*oi/K/mMu_F_j6i@/-a8qmC<lm]=tGjVm=ZN)U$pJ=JB<*4G9<KB\'GsC%1A]M;b$3K+g>M7/g
%5<#$?h><nSi#bJU/NrpDY6AcQWOIe;JIp\PmCrHu%0Gua'tOVd;$uW>;s58s,Yn+sKRsj9"l@(fIo%@'W[,AC2Oi\Ad`_&rHYGe(
%aso+b"t/B62oQ)hiJ#Ik1LH'15Psh4&(agk7)Q:],l1PLQ%,Oo=h$X$&3+)]$kH)a)EY]n/0plEfllo6oOip\PmLqD"fIE8A7mf0
%nO/SkW6kqp'F?MAbg*Sc(M<p>Y7-Yn<L\R3Z,bTN_C#+hA_4EL5&+@?:"W.*o>86,Lot<9"cB1eKP;Jh3I^:=S$:*YW[!THI/q'L
%Fd7O=LO.R<BYO(FcK--NKR];WM$Y&f*sgHB+%pn?aYjSfF[i,L]LjV?f-L!2<%s>kV"-m"#J.,l#@<sEkgcD4PGSN4:tJBVA</l6
%<Jd1;[<7'qDVZ(,HW8+5:QnnBpsf#iW4*o4,#-G>8<GPY3(EQ*TGa^C+KC[;qd(0'Uj[V&9*X.jQp?LZ=lFUGmK:7lk);0rZIl9T
%AUn<W(9iA2@RQ-U5R'u`0h,@0@t&`(AWqMY9=L>12hAoMpcteh$_Ft(06GOn)U(t]WaI.fER/)Dl`Ih%d/,DWZ7X=CGTTF67M5-T
%]umS[pN6.R,JU5c#@a[^0k.4'0&=RJ]:hlU&N`kb)V;4O&)ZdhQkpdsq'Jm@<&Mbg2=Bm.liIAMA+6Gk7U.f6$ZDL!Bac!aFXF/M
%1&Gdl5Rj\0$,^.:\^7T]]*rh>1A/OV9h/1Ma2@C`>%1HAh;e!d!C]K3:B'UYq520R-#G3`pJD)4-"oG]#$CFH@0`8l`?J;srnJ)2
%GDaWTN"#0Uc&]TK:'0_Sm\d4@pcajb3i*@Vm$JW"lSJ-$dmddL]qO<r(ToX4HbC;M0G7[`#aiZ%9f=-LfNN3pE,mGaIXLaj21(Z#
%!t_C1iZiQHiD7ALlb(C+8qnW>'X`0g!=&g_l)j!AhZ:TkH'2DgijGVh`JkH?6XJifa4jI,;U&8BZqGfFnSP>\k/S-E7``Ai=?<m&
%\^Da838Y;Vh[#OB<p9m`3i(@(VY,Wn3;h>`@bt=Wd7'_^WBnC-Y%>3jj9&SQ"SON?-1N(#$X3C(p`raLXQH*uhKY,h79>/_#_4.M
%*Mu"2Ckl',S<Fq+^E0-gjA;9P;^5pNKqoQ/j"4NQlaa:>j^fA,0j&cd?^W3DA;DN+_@T3lE__,!BbN,3)l?)qnrhFfG<@YiL>^Y;
%kPGe@3jT?RB-W:BD3N*9p;:1u1pY$G@hI&Ubmd^#GhaDj?4\0nc$OB]k8^]1OA1"?q%k]hNgO@*qU:_]o>&30/'TrmK)*KUad_3q
%;5jk[MP^HU6A)>)ogdB]k7Cu(;1;^<p$g/';7^(2dUHRa;au-K\H]+1R\n#f>2rd[7#@cTpABOYL_FpCNr8gnr]K[ZGEJTEc;+a,
%RHUd1=B?g(HZ[0<Z-lAV;=j+cW[!rIB4^<u18'/8N!@a_(RF'kEE/3<rE)'Ef!Z!In>=b@g(ECaC]H7rg)Ps_V"OSuE.V'1Gd<RM
%?`YE->daoKJ=#3;4ih566,OVP"um2V>i3GU&l@NmoUj4eEaPHlEO8.F!%a)Po;O#":E@SfjM%hH0cS6gM/@["^%/Up!V"&]nL8#V
%45'\HPiu`K@h,*%#1N9]10bgH[mnQkWNa!f1V4]j=Yi1iI9glHkMZko!Y)ld^:Uep&7(m!SWG8k1/UY"Di+1V_jC=\9RB2DCr8W"
%Un?g:/6crTUW8($rf6L5Q5tJEb=DL&a+Dl,K)gH,MMR;$?C(`FNtM#_hB/!Pe7Y7%O_3md7$akdce`$q62bX.1JTk*MFJLOo?CtC
%e485>b7UFfe1+8#djiR4YH21G9r.Tr.Wc2PSrcX'TKgt8&jGT[,bu`_32k!p<-d*maY:*Ec';s@Wn1TEGue!a!]I>NP0pRjkSJ=2
%q6i!DV,P)+!g<:fhF`j6X+4Noe$=DgEO+-H0t$^khsX[\T`D;WROT[ST[cFP[.o,mNl/R@+3I8iJUUkI2.L?S>c4G8Q<f-#?dtg^
%K$uiV7)7^i[i]=-[LFau#V^e\"lET-?'cE3%@M@=b+)qJ'>;=bBJk9'0n2=#q@e6ZpuZE6$tqg>`]P>P)[f1mHbhb\N6$:>l&I3W
%XehW_A+4k9'V8o@d:u3$S0Kn\#[Ol47O58#grW`t?f4$mhT8g"/<\H#,(\?HD,]r:D?D6%oX)b_N1r-LZKsogdl*edjZLr&,L\A/
%03!:,[V5TFi)E_$7Sa;FPq,o$2!LMde-ncoXG^2$XI<HnTcDJ.8"ZpkOB^>W$#MIT\4?8G[+h`jcYHf,B^TXE!8`-]lO*PR%ai!G
%@mALq*-EVjqB1E)-Fg0gberk(nsXm[:(N.4Ete+5'A-^Gg;._tX8,-h8s(SQ-5f(#IH3t4oa"VLBE?J[rKEE30Y2fQWbkLUGg_`E
%ZrE(Z'f'h&q(q=^2Hngs),Eno]$&a5TS@5>nn/dH[KLle>/amXCqJq4@@Vql`(H#$T_)3Y@aJ#lU26:1a':k\;CI/V7+nH/*MLq0
%GODBDSOHo+<O6;?&S+-X4(t95</iE`IRQ+qC,MN:(%H["96RrIho?5dd^Vl-T'*iNV*`ANcmOnu-;)knD<WJf(ZK:#NoNiY>'@Y'
%oMuSsC-a%6OB[,Lm,.6HGq9Qt&WogWJ9;pF&[[lCDX;1c0.ID3Dmn!j7ui5.Y5%_<_c3@"n+sj<ef@m(Y0hS1_k8eblfobl'&]JS
%g`7V>2SUk:%q8"G0I$J=J:mNOn;q2;8fK(6D('KnCQb'^]h+3E_T2s)Nm&HP2N3#SST^[XEn`C,f.tA<dcOcmeN'/$Ah,d8FnR2?
%/F;2n6.950q";H/`$oe/c^"rnr6;#f=oQ!Tm]bKVJkBm8R)bilS<T;B((MefAc\XnCg%O]V/bH'2EdlOCL*SrN518;:T]Q:93%7A
%:E+A:BN6C*<7CmfX@(\kYG^@]Q(^A..GLJc3m`"YTo=;<Uu/\dP`I.iUC6IaF'fO52tB`H[%.ttF5&mSfV@bhfqUX)%\Y\^UYuY=
%oethk)[KLkjQh5&YrN0I-hiGXqZ>+Nh2.T+,%Q&e'fJKV@P)e7;defdi&1lb%m772XZSN#'i&ae!'lDF-[])m=40e=;X3)@V[C!(
%8sesAR9Atn+.FKd3>G^-+1k*KMo#b-K_L_b!98CTF[_i^@GT#nB"RSd7?EY\GCPkH-O"i$X-IBGb?GhXJK.e2.m!OX[nd6a1/[aE
%?]m5&iZ(2E`,AN"gJuMcT#?O3#?j>XA=>dViuRX1O1g]tAM]jcfAm.qJ0gD7mEE2:JT*3G#;<*oN2R89"5b[_%$qVkc;=_7<`XNK
%:dO^`b'qA;rB@\*h''<J,RWQl5)/F5j+o;#1,.sW8aK5hX]XaOXD"7MpR8hp?US3bX%Z3T@rTOmLFEsF2AIL1<3$8fDAa']9hG(R
%D5KF%DSj_J`+eXIF@@</[?2%,eBJA<2-0<+Ing[3-<;:_pm>o(JY%nINa2c4qG6F3S:>P&(.Vf&H(N76Zf@hJ4aup[:[3cQNQW,;
%@c$;$]A5f_JQ<\"'HqgBSXpS/GMl<S2c?TZ)8D[T#@`\4ZrA8ON-';n<ND,LIe8ZV(43lHAp3?\0nj6s--tsfp>kNqR#7EgitZEc
%[Mq0#(+8pZ2UQ8Z-[AiJ.FKY(&,aS=<@>0%Fm$r)q=M3Hj.BX_Z+]pkW,HVZs-Pe3RGk"W]I7V!c,<UQ#6JR;WZ*.j#A/Zt7_c:\
%+)g#M@Upq$D(<e2i-U;hOg("#.4t*55thABT,@s)9$Md&FRL:Ll'/tkbEh"Vip-,>`8j('2Da(e3`7&BZ#8q(Z03G6Lr95/aQTVa
%f]%8EFLeTms!Ajto;te=#uMG#PJ*3HZPhE9*&G2;@'Fo!Yi;KEfDp?,A3He5p^A_BIX![.F)46*jZUVCW@/n\OhIe"M/OU.=m)nH
%MT0]11rtE*a3MRV$>a7u/`9IlBiFH3h-I9co9*f#Y)WU'f8nH"E`Lko0fLCS&l:T=F2kA?,OdT<Y3Pj=Jul$G^PP]'Dj?6N3RX?/
%NVVK6;]o#/Oj/0Qp/G`<:Er+_:Ou#1-DF#"RT/&&4hVg?S0Qmdq4qPEfPhRcS5W`n)[iFE]AWuTpPs[\h3(Vmm#K'5CgY5=VI-Nh
%D@=9f/>u?_kIghEGAYi:g`LNu<<H8L'X]O@%E%*.I=%XJZ8AP(%XU-PPaT)D1MPI^P,[[jFZa_RW>-nVkfm>tcRqTpF)j2PCF]/n
%Kk<%&AZ58oM0@aa<qu[[<*D^T8*QXD0XkFqDb8Q=bT7)L]>(+Q6,=:!BbsX33n!NF[TUA4QTRM4S=Pbs8toNa2><.d=Ab5)D"#1o
%KJYFXj71O'!J%<p`-V;j2:uTf2P):&iPeh=NqMEXFe&p1Y(&!ETPT?AG)rN-N6G2:DL@auP1HU.3EEgRfdr7>MIuTWC4&/pm(\G[
%r2NQgcS'r.gV`/ZbrX?Iq2<g'ZLMVW`7mi_H,)a'`8bZN%euW1LFFeFHg&(gb4Yu[ni!O3hT/=M;cSC()E^Y@WAA."`FmoFg,h;1
%>r_3SLN02OmN^H#oV7n6%Ga4*J"#$tHO&0Pk%idDqIIWt07NbBSR,sprT5d4nsb.)kHDYsp"t5se[L&"p[_aAp"OunolpH5_bYdT
%=0I0ns7*_Yr:!KHIJ4i`q86!8J+];gJ+qhbI.Q04J,?iBI.rC<rp05Qhu)W7++F6Fhu32b2o#Cehu+'1>kGbggM_T7%tF?H=8rL53'Ii~>
%AI9_PrivateDataEnd
