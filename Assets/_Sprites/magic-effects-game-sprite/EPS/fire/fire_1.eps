%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: fire_1.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 90 310
%%HiResBoundingBox: 0 0 89.1401 309.9674
%%CropBox: 0 0 89.1401 309.9674
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:15:21+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:15:21+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:15:21+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>76</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAABMAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYqlHmvzRpnlnR&#xA;J9W1FiIYvhjjX7ckjfZjSvc0/jleXKIRst2DBLLLhi+cde81edPPVzJJdXDWmkk/u7NCywADtxFP&#xA;Vb/Kb8Omc5qteSdz8HrtD2XGI2HxK3ydq2q+TPOOnLbXTSWl5LHHd24qFkjkcI3JKkcl6qcOh1R4&#xA;gR3o7T0UeAg7mrD6nzpnjHYq7FXYq7FXYq7FXgP56apPqvnbT/LocizsolklQHrJLV2J+UarT6c0&#xA;fauYg13B6bsPTgi/5x+wJHcXFrYWhkekcMQoqj8FUZzkYmReulIQjfRFflP5Tv8AzZ5uj1+7jKaR&#xA;pkqy8iPheWMhooVr1oaM/wDbnQdnaXcHoPveV7W11Aj+KX2B9IZv3lXYq7FXYq7FXYq7FXzd+Ypc&#xA;/nNqXImgSHjXw+px9Ppzmu1vql8Hsuwvoj8fvKQPp955o822Xl2zageQIz9Qu3KSQj/IQHMbQ4OI&#xA;gdS5naWqEASeUfvfUWh6Lp+iaVbaXp8QitLVAiL3PizHuzHcnOrhARFB4XLkM5GR5lHZNrdirsVd&#xA;irsVdirsVfPf5z236P8AzPtL9hSK9to2Lf5Q5wkfQFXNB2tj3PmHquwsvpHkUV/zjrpgvNe1rXJR&#xA;WSCNIo6/zXLs7EfIRU+nL+zMe5PcKcXtnKaA7zb3rNw8+7FXYq7FXYq7FXYq7FXk3/ORHl5rzy1Z&#xA;6zElZNLmKTEdobiikn5SKn35r+0MdxEu523ZOWpmP879Cz/nG+34+V9UuKf3l96df+McKH/mZg7O&#xA;HoJ809sH94B5PQ9U85+VNKvlsNS1W2tLxgD6MsgVgG6Fv5a/5WZks0Imid3XQ0+SYuMSQnCsrqGU&#xA;hlYVVhuCD3GWtLeKuxV2KuxV2KuxVL/MWkjWNA1HSiwQ31tLbrIw5BWkQqrU/wAkmuQyQ4okd7Zh&#xA;ycExLuKU/l15OPlHy1HpLzi5m9WSaaZQVUs57A77KoGV6fD4cabdXqPFnxVT5tvLJ/MGqa3qks7S&#xA;TSXMzQsOjEsWFa/s0oBnM6nUVP3l7PR6UHF7g9o/5x+1+61HyhNYXLmRtLn9KBiakQyKGRf9i3ID&#xA;227Zv+z8hMKPR5ftXEI5LH8QeoZnOrdirsVdirsVdirsVUrv1Pqs3p19Tg3Dj1rQ0pgPJMeb5N8p&#xA;XdvDZXIlkVCr86EgGgXfb6M4rUxJkKfR9HMCJt6z/wA44WbJ5e1a+K8VuLtY1Pj6UYO3sPVzpezY&#xA;+knzeO7Yl6wPJ69mxdQ7FXYq7FXYq7FXYq7FXhvmr/nHrULrX5brQ722h026kMjwT81aDkalUCK4&#xA;dR+zuPD3zVZezyZXE7O8wdrAQqYPEPteueVfLdj5b0G00eyq0VsvxSN9qSRjydz/AKzGvt0zY4sY&#xA;hERDqM+Y5JmR6ptljU7FXYq7FXYq7FXYq4kKCSaAbknoBirDbH83fIt95gGh298WuXf0oZ+BEEkt&#xA;acEk71PQ9D2JzGjq8ZlwguZLQZYw4yNvtZlmS4bsVdirsVdirsVdirsVedfnp5lm0fyW1rbOUudV&#xA;kFqGU0YRULSkfNRwP+tmFrsvDCh1dj2ZhE8tnlHd87TWk2mwaffRsVuWYyg/yshVk/rnP48tyNdH&#xA;rMuGoC/4n2VbTrcW0U6fZlRXXvswqM6wGw8HIUaVMKHYq7FXYq7FXYq7FXi3/OS3+8Og/wDGW5/4&#xA;jHms7S5Rd12Nzl8Hl/mZK6Vbv/JIB/wSH/mnOd059Rev1g9AfTvka6N35M0K4O7PYW3Mn+YRKG8e&#xA;4zsMBuET5PnupjWWQ8ynmWtDsVdirsVdiq2aWKGJ5pXEcUal5JGICqqipJJ6ADEmkgXs8V8xf85F&#xA;PDqbxaDpqXWnQNxa7uC6mXfqirTgD25V+QzV5O0alURs7rD2PcbkaKT/AJ1+a9P8yeWfKmp2asi3&#xA;f1tzExHKNozHG6tT/KrQ98r1uUTjEjzbezcBxznE9KYh5hQ/oYj+R4yfxH8c0OD63rNZ/dvoX8pZ&#xA;fU/LnQ2pSkBWn+pIy/wzrtIf3QfPteKzS97LsyHEdirsVdirsVeYfn55pbTPK8ej2z0vNZYo4X7Q&#xA;t46GTp/MSq+4rmBr8vDDh73adlYOLJxHlH73kUGmLDoz2AUGSVCZCf8AfpFR9xoM5U5LnxPdRwVj&#xA;4ev6WPwvqV3JY6TMG9KykcpGRQoJGDSV/wCBzOnl9Hk6vFg/ectzz+Ce+Yvh0WUkfbdAD8jXMTT/&#xA;AFfB2Ot+ge99AflEjJ+XGhhhQmF2+hpXI/A51uk/ug8Brz++ky/Mlw3Yq7FXYq7FXzB581w+afzI&#xA;up0bnYacfq9t3HCAkVH+vKS3yzmu0c/FI/J7PsfS8MYg+8otLKQwhyp3OxGaQz3ei4hdN8KLwNel&#xA;N8FsmO+bJKadFHXrN+AU/wBcy9MPVfk4WuPpHvfSn5eWptfIugwkcT9RgdhvsZEDnr7tnYacVjj7&#xA;nz3VyvLI+ZZDlzjuxV2KuxVjn5ieYT5f8mapqSNxuEiMVsR19aY+mhH+qW5fRlOoycECXJ0mLxMg&#xA;i+dPJumE25lIo0p5H/UU0H8TnG6rJvT6DphwQvvZtHBIUqiMUG1QCRmtJYmYvcoK/i6SD5NlkD0c&#xA;jDLowfzYXZ7WFQSSXIA7k8QM2elHNxteeT64tLaO1tIbaPaOCNYk+SAKP1Z2QFCnzmRs2q4UOxV2&#xA;KuxV45/zkdqcg03RdGjJreXDzuB/xSoRQfmZj92aztKdRAdz2NiuRPw+bENGjWGF449gkfFP9iM5&#xA;HMbL3E4gAB6XpGli7tqRP6YiRSi+PId6fLNdHGZEvManUcEtxdlIPMOmPGzsUoT8Mo8G7H6csxSo&#xA;0XZ6HUAgfY8t84WzhIZwPsMQf9lv+tc3Oll0czWxsAvqLynr9t5g8u2GrwMGF1ErSAfsygUkQ/6r&#xA;gjOxxZBOIL55nxHHMxPRNssaXYq7FXYq8G/P5nPnfy+jf3QhQio2qbght/kBmk7W/wB69J2Fy/zg&#xA;k+nMFkAPQmh+kUzmcg2ewyCw9G0HUxDZMy1LNFwBHZ1FATmvEuAl5jWafin8fsWahcG7jllmpV0P&#xA;Kgp0XwysyJlacEOAgDvee65p0dxA3MVicUkA7eDDNnhyUXoI1IcJW/lT54n8m+YG0TVH/wBw19IA&#xA;zn7MUjbJMP8AJbo/9mdJoNWB/VP2PNdqaAyFj6o/aH0l1zfPLOxV2KuxV4v/AM5HaVN9X0XXIQaW&#xA;0j28zeBekkR+9GzV9pY7APwd32NlqRj8WGWdxHMiSp9iZQ6/T2zlZRrbue6jISFhkemX80SKyHbo&#xA;6noaZh5IAuFqMIkaKMu9UYyTLG1YZqKK1G9KGmVxx8nHxafYXzCWXRAt3r+0CB9OXR5uZAWWFeab&#xA;VZNPE5H723cLXxVtqffmx08qlXejWwBjfc+ifyp1S41P8vdFu7li03otCzHcn6vI0IJPiRHnX6WR&#xA;ljBL5/roCOaQH4vdleZDiOxV2KpX5o8vWXmLQbzR7zaG6TiHAqUcHkjj3VgDleXGJxMS24MpxzEh&#xA;0fMcdrqPl3Wrjy5qq8Li3c+i37JruCp/lcfEucprNOYk3ze87O1cZxFcjy/UyayulC8WNAdwfA5q&#xA;pxdjkhe4VL25jEFAwZqg7ZGEd2GOBtCPdSSxhn6AdBlgiAW6MAOTF/MVxLcSQaXbKZLieRSY13JZ&#xA;tkUe5JzP02Mk24OuygCviX0/5L8v/wCHvKum6OSDJaQgTEdDK5LyEe3NjnXYcfBARfPtTl8TIZd6&#xA;dZa0uxV2KodtR09bwWLXUIvWHJbUyL6pFK1CV5U+jI8Qur3ZcBq62eT/APOReh27aPp2vxgJe2tw&#xA;LZpBsWjkVnWp/wAh02+ZzX9pYwYiXwdv2PmImY/FgVhI01vDMP21Vj8mAOcpMUSHvISsAoiSJue+&#xA;w25KcgCyBQt3dC2tXdxRY1LEeNO2TjGyxnLhBLIPyE8pfpbWbrzVfrzjsX9OzB3BuWFWb/nmjCnu&#xA;R4Z0nZ2AXxdA8Z2vqjXD1lz9z3/Ny867FXYqk3nLzFH5c8sahrLgM1rETCh6NKxCRKfYuwr7ZVmy&#xA;cEDJu0+HxJiPe+UjHrV80nmA3Ej6k85n9QV9QuGqZFYHYhulM5iWo9e/Pve2ho7xbDbu8mQeZvPP&#xA;nDzva2Om6jHHDbWjepI8aMgeShX1H5EjkFJoFp1P0ZGp1xnEA9HF0fZghMmIO/f0TLTIAvpxqPhW&#xA;gAPgozRZS9FLaKaXMIeI0HxDcZRE0WjHKixPzMj/AKNnp0PEn5chmfpz6gy1X92XsH/OP+o6dN5G&#xA;WygdfrlpPL9bi2DVkbkj08CtBX2zq9BIHHXV4PtWEhls8iHpmZzrHYq7FXjv/OR2sMmlaTokTfHe&#xA;TtcSqOvGEcEB9maT8M1vaWSogO57HxXIy+HzYHp9okNokNKhFC19wNznKZJWbe8hHhACJEMY7VyH&#xA;EWSN09RzY+Ap9+VZGnMdkeVIAJGzbg/hlTjWk2p2qlXR15RvXbtQ9RmTik5cCJRosXhstd0S+Goa&#xA;FdyQzJ9lomKSAd1PZh7Hr4ZssOqo3yLrdR2fxCq4ovT/AMv/AM+ZJrmPS/NwWKRyEj1RVEahjtSd&#xA;BQL/AKy0A7jvm70+vvafzeZ1fZVb4/k9rBDAEGoO4I6EZtHSOxV84/m3qB1X81Gtq1h0uKKEeFVX&#xA;1m/4eWn0Zz3amT1Hy2eu7Cw+keZtQhFIx775oDzepX4FR1kgVA3dzt8hlUy4+U2U1uLWSOygkb9o&#xA;n6AwBH8cojKyXChkBmQEBcRCWMr3G6/PLYmi5UJUUnkh3quzDqMyBJy0n1jSIr6NmRQl0o+Bulaf&#xA;snMjFlMfc4+owCYsfU9L/ITz5PdxSeVNTcm4s0L6c7/aMSmjwmvdOq+1fDOl7P1HEOE/B4ntXScJ&#xA;4x8XsebN0z5UuLr9IeePMGoE1El1Pwr2VpjxH0KtM5LXzuR95e/7Jx1EeUQnCfYX5DNWXcKkcTyN&#xA;RRXxwE0xMgE1tbR5Z0jTw4oPbqScx5SoOHkyARsskuYEns2jTcFaxn3HTMSJoupxzMZ2WN5lu2QF&#xA;7Hxl5Do/68ugdnJxSsIG4AoDT2rlsW1IBqM3l7zfp2u29R6UqTOB+0FPGVf9mhofnmz0eXhIPc6X&#xA;tLTiVj+cPtfWX1mD6t9Z5j0OHqep24U5cvlTOrva3g6N0+SPK7NJ9bmb7UjqWPvuf45xupO4fR9A&#xA;KBZXFGzsqDqcwCXOkaFppHGsaBV+k+OUE24cpWUx0jaaR+6xnj8yRTKcvJxdTyA82Z/odE0WMoKz&#xA;IoetNytPs/QMMsXovrzdB+aJzG+RYTqtt6N0WA+CT4l+fcY45WHodPk4o+5LLtQ8LeKUOXw5uXjN&#xA;FLXXkhGXBymNeaowbGKTuklPoZT/AEzM053cLXD0g+b3f9My/wDKjv0hU+t+hfS59+fo+jy+/fOp&#xA;4/3F/wBF4Xw/8Kr+n+14L5TP7q4XuHUn7s5fU8w9zoTsWaaePic+AA+/Ndkb8x5I3KmhOtIg/cKR&#xA;9qaQU+S9PxGUZDu6/VT9XuD0OKPhCkZ34qFPgaCmZgFCnlpSsksJ1exEnrQj7UbN6Z9wafjmADwy&#xA;eh02aqPexWWoSUN2B2+imZYd1HmEqzIcxj/mhQNOYHqHWmZWnPqcXWfQ9Qqf+hb+v/Hr/wBjmdL/&#xA;AMhvh+l4r/kb8f0PMLS3ax8z63p52a3uZUof+KpWXNFrY0fiXquy53H3gFlWnGoc+IB/XmpyOdm6&#xA;I3KmhlehwD61bRjf0iqn/Wryf9WY43kPe6XVz9Mj3/gM1zOeeY3rkHp3pcfZlAYfPocwc8ak7bST&#xA;uFdzE9ZtQk3qAfBKPi/1u/35PFLZ3mlyWK7mNTRmOQr4dPlmYDYdrGVi2N+bmAsgO7SqP+FJzM03&#xA;NxdafR8Xr/1D/rHr0eP/AErPXpX/AC/Wr/HOo4f8G+DxPF/hl/0v2PP/AMy7D9D/AJrXhpxg1NUn&#xA;TtX1lo33zRnNV2piqR+bvOw81wj8vx9iJ0xgDxP7Q2+jOfyh6HMNk2tE53MS+LCvyrlEjQcPIaiS&#xA;zjy7a/FKV+0i0Df5Tnc/ryrCLJLzuuycvxyZHmY6lLdeg52fqD7UTA/QdjlGojcbcvRzqdd7EtVj&#xA;D2T16pRh9BzGxmpO808qmGK3sQaPn+0v6szYHd3OKW9MG83y1MEIFSzM1PlQD9ebPSjmWjXS5B9P&#xA;f4fP+BP8PUHL9F/UKb0r9X9Lr8867w/3fD5U+f8Ai/veP+lf2vPP+civL8kul6d5ht1PqafIYLhh&#xA;2jlIMbH2WQU/2WYfaOK4iTsux83DIx79x8GEaDepcRwyr0cbjwJ2I+g5yWeFWHuOLjhbKdKFb+L2&#xA;qf8AhTmDk+lwNR9BZ35cZf36/tHiaewrg03V5vXDknWZTr1G8h9a1lj7spp8+2RmLBDZilwyBYZd&#xA;wevbvFXiWGx+W+a+Jo27/HPhkCxS42gkqOinb6Mzo83dQ5hinlbSz5j/ADJ0ywA5W8MyvP4enb/v&#xA;ZAfnx450OgxXKI+Lqu1tRwxke4U+qc6d4lAa9o1prWjXmk3Y/cXsTROaVKlh8LivdTRh75DJASiQ&#xA;erZiyGEhIdHy5p8V75f8wXWgagOE9tMUHgWHcV/ZdaMuclrcBF94e97P1InHylyegWDMt5FxNCWA&#xA;J9j1zRz5FnmHoLN9AEv1w8f7vj+8/h+OVae+J57W1wb82Q5muqdirFNRiWK9mRRRQ2w+e+a7IKkX&#xA;d4JEwBLzzzTqsWl2tzNUeqWZLdfFiTT6B1zYabEZkB3fHwwBZL/zj15RltrG680XikS34MFly6+i&#xA;rVkf/ZuoA/1ffOz7Ow0OI9XlO1tRxSEB03Pvex5snTOxV5P+eX5eyapZL5l0qMnU9PX/AEtE+1LA&#xA;u/MU6vF1/wBX5DNdrtNxDiHMO27L1nBLgPI8vewLyb5ijvYkWQgXdsQ0idOS1+0P45x+rwcJ8i9f&#xA;x+JE971byhdLLE7E78Byr/kGh/XmHiFSIef7Tx0R72S5kuodirz7zx5js9Faa4nkAdnKxx9Xag34&#xA;r7fdmNDAcuQgO/0UAYC+VPP/ACf5S1n8xvMP1q5DQaFaPS4lGwC9fSjP7UjftHt18BnUaDQ3sOXU&#xA;rr9cMY/pdA+lrS0trO1htbaMRW8CLHDEuyqiCigfIZ0gAAoPJykSbPNVwodirsVeEfmj+U+oaXqD&#xA;eZvKULGAt6l1YQLVoWPV4kH2o2/aUdP9Xpp9bobsxGx5h6Ds/tLlGZ36FLbHzN5w0azSfU/Ld4lr&#xA;cpzE8auqkHxBU8a+DHOfzdkT5ix8HZZNRjymrHEE0j/P/To4FR9KnedRRqyIoJH0HIx0cq3LgT7O&#xA;s2Dsov8AmZ+ZXmAGHy15feBX2FwI3nK+/qOqQj/ZLmXi7OJ6Eo/LYcf1yRnlz8idZ1O+/Snne/Z2&#xA;Y8ms4pPUlY1rSSX7Kj2SvzGbfT9mV9Ww7g05+1YgcOMfF7Npum2GmWUVjp8CW1pAOMUMYooH9T3O&#xA;baMREUOTpZzMjZNlE5Ji7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:c8d04587-d894-7f4f-9030-bfd729693807</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c8d04587-d894-7f4f-9030-bfd729693807</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:0f5a5d69-8578-4106-a653-ac2cd69430f6</stRef:instanceID>
            <stRef:documentID>xmp.did:a547d6c8-b04e-bc45-b281-f15623cdf86d</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a547d6c8-b04e-bc45-b281-f15623cdf86d</stEvt:instanceID>
                  <stEvt:when>2018-03-09T10:41:33+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c8d04587-d894-7f4f-9030-bfd729693807</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:15:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>89.140094</stDim:w>
            <stDim:h>309.967358</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -309.967 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 309.967 li
89.1401 309.967 li
89.1401 0 li
cp
clp
85.5574 237.825 mo
83.5223 230.77 80.9315 223.37 76.2728 217.676 cv
72.3011 212.823 66.9598 209.611 61.387 207.052 cv
60.1546 203.219 59.0784 199.391 59.6688 195.23 cv
60.4661 189.612 63.6546 184.63 64.9842 179.155 cv
68.0887 166.367 60.8201 157.592 54.366 147.479 cv
54.0555 146.993 53.6712 146.554 53.2381 146.165 cv
53.4852 144.938 53.6561 143.644 53.804 142.278 cv
54.4432 136.382 54.7225 130.399 54.887 124.47 cv
55.1976 113.289 56.701 101.461 54.868 90.3718 cv
54.0872 85.6477 46.6937 87.3162 47.2279 91.7151 cv
46.0975 101.733 46.5726 111.87 45.3118 121.928 cv
44.4417 121.747 43.5404 121.773 42.6844 122.073 cv
42.1429 122.262 41.5897 122.457 41.0365 122.659 cv
41.0286 122.443 41.0218 122.226 41.0052 122.007 cv
40.9295 121.025 40.6766 120.164 40.2943 119.423 cv
40.1268 118.523 39.9657 117.619 39.7801 116.727 cv
38.7943 111.992 32.8792 112.965 31.6136 116.704 cv
29.9007 117.589 28.6986 119.35 28.8958 122.007 cv
29.1995 126.107 26.0706 129.223 24.0736 132.53 cv
21.9876 135.984 20.3724 139.709 19.0365 143.53 cv
16.3158 151.311 15.8123 159.684 17.6722 167.745 cv
18.5736 171.654 20.1326 175.454 22.0228 178.959 cv
23.7069 182.081 26.224 185.022 27.3045 188.435 cv
28.7069 192.863 25.1844 197.975 21.097 201.107 cv
20.3021 195.155 12.5433 194.376 10.4715 200.144 cv
4.67952 216.269 2.74251 234.161 2.24105 251.235 cv
2.11751 255.448 1.84749 259.551 3.31185 263.553 cv
4.64485 267.197 7.10042 270.251 8.63118 273.796 cv
10.0843 277.159 10.3377 280.826 11.5858 284.254 cv
12.7435 287.435 14.5218 290.211 16.6644 292.78 cv
18.8192 295.364 21.8094 298.332 25.0482 300.785 cv
29.2489 307.816 42.0609 307.893 48.8993 306.921 cv
57.8475 305.648 66.366 300.658 72.1976 293.575 cv
78.5184 285.898 81.3846 277.24 82.2186 268.2 cv
83.0736 265.589 83.7205 262.876 84.4085 260.316 cv
86.4539 252.706 87.7865 245.553 85.5574 237.825 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.996078 .439216 .117647 rgb
f
58.5101 55.3933 mo
58.2591 53.158 56.827 51.2263 54.4569 51.2263 cv
52.3182 51.2263 50.3284 53.1336 50.4032 55.3933 cv
50.5081 58.5545 50.5267 61.7205 50.4144 64.8821 cv
50.2171 70.4641 58.6546 70.4558 58.8519 64.8821 cv
58.9647 61.7005 58.8656 58.5569 58.5101 55.3933 cv
cp
f
45.6844 3.3738 mo
39.9041 7.40016 35.6678 12.2952 33.5487 19.2634 cv
32.5042 22.6965 32.8411 25.344 33.5521 28.78 cv
34.3363 32.5686 34.452 36.5427 35.4857 40.2615 cv
36.3324 43.3079 40.346 43.0847 41.286 40.2615 cv
42.6659 36.1184 41.5277 32.0037 41.6522 27.8445 cv
41.6624 27.8386 41.6732 27.8357 41.6834 27.8294 cv
43.867 26.5403 44.7972 23.5491 46.2518 21.4871 cv
47.7347 19.385 48.262 16.4758 50.1961 14.8377 cv
50.2918 14.7561 50.3773 14.6712 50.4627 14.5857 cv
50.8465 14.325 51.2318 14.0662 51.6185 13.8098 cv
57.9818 9.59548 51.9437 -.987045 45.6844 3.3738 cv
cp
f
60.7586 244.401 mo
60.8387 242.138 61.4544 239.945 61.9124 237.73 cv
62.1439 238.721 62.3494 239.722 62.5208 240.737 cv
62.5526 240.926 62.5741 241.122 62.6009 241.315 cv
61.869 241.266 61.0492 241.881 61.2362 242.835 cv
61.8167 245.796 62.3905 250.173 63.6141 254.161 cv
61.911 251.18 60.6336 247.922 60.7586 244.401 cv
cp
75.5921 272.74 mo
75.5203 272.554 75.4383 272.375 75.3626 272.191 cv
75.7225 268.569 72.9544 264.312 70.6517 261.158 cv
69.8822 258.346 67.9007 255.735 66.8167 253.063 cv
66.4891 252.255 66.1947 251.435 65.9158 250.611 cv
67.5662 247.613 66.6116 243.822 65.8748 240.619 cv
64.9163 236.454 63.4222 232.425 61.6942 228.525 cv
61.6585 228.444 61.6156 228.372 61.5677 228.307 cv
60.9793 226.485 60.1214 224.763 59.0863 223.13 cv
58.6331 222.283 58.1781 221.448 57.7425 220.629 cv
55.6082 216.614 53.1287 212.818 50.4671 209.142 cv
49.2249 205.213 47.2269 201.328 45.411 197.617 cv
45.3978 197.518 45.3846 197.417 45.3714 197.318 cv
45.2616 196.512 44.9173 195.96 44.452 195.623 cv
44.2367 195.164 44.0247 194.708 43.8226 194.256 cv
43.4691 193.465 42.0902 194.033 42.409 194.852 cv
42.4115 194.858 42.4139 194.864 42.4163 194.87 cv
41.7928 194.428 41.0301 194.24 40.3123 194.344 cv
40.5135 193.952 40.7088 193.558 40.8934 193.162 cv
41.0545 192.817 40.9427 192.35 40.5228 192.251 cv
39.6185 192.038 39.098 192.844 38.7152 193.551 cv
38.1165 194.657 37.5701 195.795 36.9984 196.915 cv
36.598 197.699 37.4559 198.393 38.078 198.139 cv
38.077 198.244 38.0745 198.348 38.0736 198.453 cv
37.8773 198.43 37.6532 198.534 37.5692 198.732 cv
35.6014 203.398 34.0579 209.424 34.245 214.518 cv
34.2723 215.266 35.1473 215.452 35.5682 215.07 cv
36.097 219.637 36.5731 224.852 33.4608 228.225 cv
32.3773 229.399 31.0345 230.326 29.6195 231.177 cv
32.4671 226.787 35.7674 220.932 35.075 215.847 cv
34.9935 215.248 34.1458 215.265 33.8753 215.691 cv
32.4759 217.895 32.057 220.592 31.1873 223.034 cv
30.2122 225.774 29.0516 228.416 27.6888 230.978 cv
27.6898 230.436 26.8675 230.21 26.4583 230.549 cv
22.18 234.087 18.492 237.738 16.2323 242.626 cv
15.9749 242.57 15.703 242.676 15.6214 243.025 cv
15.4451 243.778 15.3035 244.54 15.1776 245.305 cv
15.1385 245.427 15.0867 245.537 15.0492 245.659 cv
14.9979 245.828 15.0116 245.972 15.0492 246.103 cv
14.0492 253.125 14.9471 260.578 15.6742 267.514 cv
15.7284 268.029 16.1912 268.259 16.5853 268.204 cv
16.7547 269.005 16.9339 269.802 17.1302 270.595 cv
16.8172 270.67 16.5706 270.907 16.6092 271.338 cv
17.1678 277.573 19.5638 283.279 19.6742 289.679 cv
19.6971 290.999 21.64 290.984 21.7132 289.679 cv
21.8104 287.953 21.8665 286.072 21.8114 284.152 cv
21.9871 284.556 22.1615 284.961 22.3426 285.363 cv
21.4076 288.532 21.8123 292.246 23.0506 295.155 cv
24.0462 297.494 25.5433 299.297 27.3548 300.686 cv
27.847 303.559 30.7669 305.199 33.6966 305.956 cv
34.1683 306.108 34.6546 306.23 35.1595 306.311 cv
36.8392 307.095 38.8885 307.243 41.0955 306.908 cv
47.6888 305.906 54.6204 305.885 60.6981 302.786 cv
71.7547 297.15 80.5658 285.608 75.5921 272.74 cv
cp
.996078 .552941 .133333 rgb
f
50.494 175.465 mo
50.3944 175.459 49.9051 174.779 49.3577 173.983 cv
50.0604 174.413 50.7415 174.728 51.3861 174.896 cv
51.0428 175.229 50.7108 175.477 50.494 175.465 cv
cp
36.0409 176.391 mo
36.0589 176.273 36.0535 176.146 35.9867 176.013 cv
35.7791 175.601 35.5731 175.188 35.3665 174.774 cv
35.8836 175.382 36.4266 175.964 37.0272 176.486 cv
37.4534 177.141 37.9159 177.783 38.4202 178.409 cv
39.1995 179.377 40.2786 179.437 41.179 178.993 cv
41.3631 179.035 41.5355 179.036 41.6981 179.011 cv
41.4632 179.207 41.1991 179.383 40.8665 179.51 cv
38.7972 180.302 37.3177 178.392 36.0409 176.391 cv
cp
41.8958 166.787 mo
41.7786 166.844 41.6634 166.895 41.5423 166.974 cv
41.3778 167.082 41.2391 167.273 41.1805 167.479 cv
41.1297 166.909 41.0902 166.34 41.078 165.768 cv
41.3426 166.104 41.6165 166.445 41.8958 166.787 cv
cp
41.847 171.794 mo
42.2108 172.95 42.5745 174.244 42.7025 175.456 cv
42.3949 174.228 42.099 173.009 41.847 171.794 cv
cp
29.7244 160.166 mo
29.5374 160.173 29.369 160.274 29.3314 160.519 cv
29.327 160.545 29.327 160.571 29.3231 160.597 cv
28.513 156.623 28.0252 152.7 27.5784 148.728 cv
27.8284 148.669 28.0477 148.507 28.1136 148.214 cv
28.7005 145.602 29.6785 143.22 30.9813 140.916 cv
29.8621 143.726 29.4715 147.087 29.3416 149.571 cv
29.1732 152.799 29.2347 156.49 29.7244 160.166 cv
cp
55.995 169.971 mo
56.2537 165.862 52.8372 162.164 50.3675 159.341 cv
49.2284 158.039 48.1287 156.781 47.1449 155.449 cv
47.4251 155.486 47.7454 155.344 47.7879 155.049 cv
48.5736 149.61 45.0277 143.402 42.2108 138.391 cv
42.1522 136.769 40.8011 135.339 39.1756 134.938 cv
37.5492 134.537 36.0658 134.979 34.6375 135.646 cv
34.9764 135.06 35.2523 134.455 35.3895 133.809 cv
35.5081 133.249 35.0433 132.742 34.4671 132.886 cv
31.7659 133.563 30.0736 136.843 28.971 139.174 cv
28.1302 140.952 27.5462 142.832 27.1356 144.752 cv
27.0384 143.887 26.9393 143.019 26.8348 142.145 cv
26.7635 141.551 25.9144 141.339 25.7298 141.995 cv
23.8001 148.857 26.4329 157.072 28.1038 163.743 cv
28.2738 164.422 28.9427 164.529 29.4251 164.281 cv
29.952 167.253 31.4266 170.231 32.9183 172.981 cv
32.6595 173.097 32.4583 173.36 32.4168 173.694 cv
31.911 177.759 37.6107 183.792 41.8451 182.334 cv
47.0555 180.539 45.4847 175.074 44.1029 170.941 cv
44.5291 171.428 44.951 171.918 45.4618 172.333 cv
46.6038 173.261 47.5404 173.873 48.2376 175.261 cv
48.5687 175.918 48.5985 176.754 49.3387 177.147 cv
51.2327 178.153 53.0409 176.282 54.3407 174.228 cv
54.8719 173.705 55.3187 172.913 55.6546 171.792 cv
55.8416 171.386 55.9959 171.024 56.1034 170.751 cv
56.2318 170.424 56.158 170.163 55.995 169.971 cv
cp
f
59.0457 258.087 mo
59.283 258.403 59.5413 258.698 59.7933 258.999 cv
61.3387 261.88 62.3958 264.897 63.4212 267.964 cv
62.2034 264.658 60.6893 261.37 59.0457 258.087 cv
cp
59.0076 272.911 mo
59.0067 272.421 58.9935 271.933 58.971 271.446 cv
59.1917 272.149 59.3963 272.854 59.5804 273.56 cv
59.4232 273.322 59.2298 273.102 59.0076 272.911 cv
cp
38.679 238.797 mo
37.451 243.155 36.6639 247.619 35.4481 251.979 cv
33.8826 257.592 31.1673 262.791 29.5789 268.361 cv
29.5755 267.348 29.5511 266.339 29.4696 265.337 cv
29.453 265.132 29.3363 264.985 29.1883 264.911 cv
29.2445 264.849 29.2913 264.774 29.3167 264.672 cv
29.7537 262.906 30.2996 261.185 30.8831 259.48 cv
31.3172 259.85 32.2147 259.622 32.3153 258.861 cv
32.9124 254.337 35.9408 249.532 35.9207 244.875 cv
36.0765 244.778 36.1981 244.627 36.2381 244.408 cv
37.0013 240.232 38.9364 235.374 38.8065 230.977 cv
39.41 231.319 40.2874 231.189 40.5116 230.32 cv
40.5628 230.119 40.6185 229.914 40.6766 229.704 cv
40.3397 232.751 39.5433 235.729 38.679 238.797 cv
cp
38.4832 300.599 mo
38.5409 300.582 38.5911 300.545 38.6478 300.523 cv
38.8944 300.752 39.1546 300.975 39.4354 301.195 cv
39.4447 301.407 39.4481 301.619 39.4647 301.829 cv
39.1151 301.463 38.7879 301.052 38.4832 300.599 cv
cp
67.0169 276.366 mo
66.8416 275.582 66.159 275.377 65.5736 275.564 cv
65.2689 274.014 64.8963 272.47 64.4227 270.932 cv
64.5618 271.339 64.6991 271.746 64.8441 272.153 cv
65.0286 272.673 65.7396 272.57 65.7874 272.025 cv
66.2039 267.3 64.5467 262.724 62.2367 258.642 cv
60.9134 254.549 58.2274 250.775 56.1102 247.101 cv
54.6781 244.616 53.2733 242.121 51.8939 239.612 cv
51.1439 237.733 50.202 235.901 49.4354 234.079 cv
47.7616 230.1 46.161 226.099 44.6097 222.074 cv
44.5892 221.938 44.5745 221.801 44.5521 221.663 cv
44.4871 221.27 44.3128 220.973 44.0911 220.736 cv
44.0355 220.59 43.9769 220.444 43.9212 220.298 cv
43.3114 217.389 42.7176 214.475 42.3343 211.506 cv
42.2752 211.049 41.5472 211.043 41.6077 211.506 cv
41.9027 213.764 42.2074 216.084 42.5902 218.398 cv
42.1087 218.399 41.6493 218.761 41.8123 219.346 cv
41.535 219.176 41.1409 219.234 40.9285 219.539 cv
39.9198 220.991 39.7845 222.548 39.4525 224.244 cv
39.1395 225.845 38.784 227.437 38.4076 229.024 cv
38.1522 228.901 37.7806 228.99 37.6136 229.233 cv
35.3162 232.569 35.0745 237.633 34.7694 241.909 cv
34.6419 241.949 34.5296 242.031 34.4637 242.177 cv
32.7503 245.995 31.6346 250.634 31.0438 255.041 cv
29.7796 258.031 28.9515 261.23 28.2318 264.373 cv
28.1566 264.701 28.3524 264.936 28.5975 265.028 cv
28.5584 265.076 28.5257 265.135 28.5028 265.206 cv
26.7284 270.769 26.7786 277.066 26.5042 282.848 cv
26.4471 284.053 28.0501 284.215 28.5394 283.348 cv
28.5433 283.387 28.5452 283.425 28.5492 283.463 cv
28.4495 283.524 28.3675 283.61 28.3309 283.723 cv
27.0965 287.508 27.7489 291.798 28.1473 295.683 cv
28.2196 296.387 29.2957 296.421 29.2723 295.683 cv
29.2039 293.531 29.3802 291.346 29.4657 289.172 cv
29.9691 291.576 30.5882 293.954 31.3016 296.275 cv
32.9007 301.482 35.1434 307.35 40.9784 308.433 cv
41.9378 308.612 42.7298 308.272 43.2757 307.701 cv
44.7865 308.314 46.598 308.441 48.43 308.218 cv
50.0745 308.018 51.6429 307.524 53.1107 306.805 cv
56.9788 306.985 60.5892 304.539 62.6156 300.857 cv
63.9427 298.444 64.9349 294.732 64.9505 291.199 cv
65.2874 290.117 65.5325 289.043 65.7366 287.971 cv
65.536 289.943 65.1287 291.888 65.2157 293.869 cv
65.242 294.461 65.9945 294.846 66.4359 294.374 cv
70.5999 289.926 68.1849 281.592 67.0169 276.366 cv
cp
.996078 .760784 .164706 rgb
f
44.826 164.583 mo
44.5697 164.289 44.3079 164.005 44.0555 163.733 cv
44.3739 163.658 44.6815 163.518 44.9652 163.337 cv
44.9368 163.75 44.8826 164.166 44.826 164.583 cv
cp
34.3919 148.295 mo
33.5618 148.779 33.0394 149.436 32.724 150.188 cv
32.8045 149.318 33.0306 148.485 33.7152 147.853 cv
34.8748 146.783 36.6566 146.642 37.9798 147.428 cv
38.2484 147.588 38.5247 147.571 38.7645 147.467 cv
39.5355 148.307 40.2039 149.267 40.8656 150.192 cv
40.9129 150.258 40.9554 150.327 41.0023 150.394 cv
39.1131 148.151 36.8534 146.861 34.3919 148.295 cv
cp
46.9198 165.631 mo
47.7425 162.121 48.5042 156.349 45.3602 153.735 cv
45.1995 153.602 44.9564 153.546 44.744 153.587 cv
43.7415 151.594 42.6395 149.658 41.3909 147.802 cv
40.5023 146.481 39.4193 144.457 37.5955 144.826 cv
37.5409 144.837 37.5057 144.871 37.4613 144.894 cv
35.7049 144.088 33.6366 144.105 31.9813 145.32 cv
29.9471 146.812 28.8792 149.854 30.1971 152.107 cv
29.5741 157.343 30.7352 163.724 35.1922 166.55 cv
35.3831 166.671 35.6195 166.678 35.8314 166.607 cv
36.0086 166.96 36.1868 167.313 36.3851 167.655 cv
36.7952 168.362 37.7777 168.485 38.4193 168.117 cv
38.4935 168.936 38.6087 169.752 38.6732 170.515 cv
38.7933 171.94 40.7288 171.921 40.8763 170.515 cv
41.1214 168.177 41.8822 165.409 40.2738 163.418 cv
40.078 163.176 39.6077 163.186 39.4115 163.418 cv
39.0814 163.809 38.866 164.241 38.702 164.692 cv
38.3284 162.177 37.8573 159.674 37.4408 157.164 cv
38.2376 158.265 39.0501 159.354 39.8714 160.437 cv
39.8026 160.419 39.7381 160.394 39.6678 160.379 cv
38.4276 160.114 37.9393 161.876 39.1444 162.277 cv
40.5545 162.747 41.5013 164.448 42.4007 165.535 cv
43.3231 166.651 44.429 168.036 45.8446 168.502 cv
46.3441 168.667 46.6976 168.165 46.6229 167.724 cv
46.5467 167.272 46.3695 166.833 46.14 166.406 cv
46.4915 166.346 46.8065 166.115 46.9198 165.631 cv
cp
f
55.9608 278.428 mo
55.7635 277.913 55.5628 277.393 55.3636 276.875 cv
55.4056 276.939 55.4427 277.008 55.4857 277.072 cv
55.5726 277.2 55.6951 277.242 55.8172 277.247 cv
55.9163 277.78 56.0159 278.313 56.118 278.845 cv
56.0653 278.706 56.012 278.562 55.9608 278.428 cv
cp
37.7118 268.731 mo
37.6771 268.503 37.6322 268.275 37.5638 268.046 cv
37.471 267.737 37.0916 267.64 36.8587 267.86 cv
36.8289 267.888 36.8079 267.921 36.7791 267.949 cv
37.0794 266.247 37.3758 264.541 37.6566 262.828 cv
37.9935 262.933 38.3973 262.867 38.7103 262.647 cv
38.367 264.675 38.0277 266.702 37.7118 268.731 cv
cp
59.3997 283.163 mo
59.3021 282.614 58.7601 282.544 58.3822 282.771 cv
57.8563 280.409 57.3646 278.04 56.8988 275.666 cv
56.8289 275.312 56.5687 275.175 56.2967 275.185 cv
56.2157 269.093 53.2147 262.343 51.1283 256.639 cv
50.4842 254.315 49.8558 251.986 49.2269 249.658 cv
49.429 249.547 49.5824 249.317 49.535 249.055 cv
48.8265 245.124 47.4432 241.261 45.5921 237.677 cv
45.4715 237.333 45.3167 237.038 45.1263 236.803 cv
44.557 235.759 43.9554 234.735 43.3114 233.748 cv
42.6868 232.792 41.3763 233.617 41.8138 234.623 cv
42.0296 235.121 42.2484 235.619 42.4652 236.117 cv
42.2884 236.179 42.116 236.259 41.9515 236.355 cv
41.7489 236.312 41.5203 236.381 41.3802 236.573 cv
41.1312 236.914 40.9237 237.29 40.7445 237.689 cv
40.744 237.689 40.7435 237.69 40.7435 237.69 cv
39.5384 240.373 39.785 244.207 39.9007 247.168 cv
39.8372 247.213 39.7777 247.263 39.7293 247.326 cv
38.283 249.213 38.1615 251.715 37.848 254.01 cv
37.555 256.155 37.3397 258.307 37.158 260.463 cv
34.0037 265.517 33.9857 272.068 33.575 277.854 cv
33.5301 278.488 34.0501 278.748 34.5374 278.671 cv
34.5111 280.005 34.5301 281.34 34.6024 282.678 cv
34.6488 283.544 35.6795 283.733 36.1263 283.241 cv
36.0662 284.536 36.0243 285.833 36.0247 287.131 cv
36.0247 287.322 36.0296 287.516 36.033 287.711 cv
35.6761 287.548 35.2264 287.692 35.0433 288.155 cv
33.5614 291.897 34.6912 296.471 35.2952 300.318 cv
35.493 301.577 37.6165 301.29 37.5282 300.016 cv
37.4608 299.047 37.4495 298.042 37.4466 297.025 cv
39.5618 304.134 44.2005 310.108 52.4447 307.585 cv
58.807 305.637 60.2039 299.617 59.6722 293.24 cv
60.5262 290.016 59.972 286.387 59.3997 283.163 cv
cp
.996078 .968627 .482353 rgb
f
36.4896 150.429 mo
35.4398 149.888 33.9603 150.531 34.0213 151.885 cv
34.1424 154.594 34.5111 157.174 35.1634 159.802 cv
35.5047 161.178 37.7391 160.936 37.6263 159.46 cv
37.5413 158.345 37.4798 157.225 37.4276 156.105 cv
38.1146 157.063 38.8284 157.976 39.9408 158.439 cv
40.4388 158.647 41.1219 158.21 41.2235 157.69 cv
41.8006 154.741 38.847 151.645 36.4896 150.429 cv
cp
f
18.6546 289.438 mo
18.5902 289.438 18.5902 289.541 18.6546 289.541 cv
18.7191 289.541 18.7191 289.438 18.6546 289.438 cv
cp
.956863 .396078 .117647 rgb
f
39.9207 126.644 mo
38.9842 125.94 38.1912 125.398 37.6576 124.291 cv
37.1473 123.232 36.9412 122.048 36.4115 120.997 cv
36.0687 120.318 35.2928 119.917 34.5697 119.911 cv
33.1634 119.9 32.5086 120.784 31.991 121.991 cv
31.64 122.81 31.2694 123.619 30.8958 124.427 cv
30.4539 124.885 30.0492 125.427 29.6795 126.03 cv
29.3704 125.307 28.474 124.928 27.7938 125.617 cv
24.4486 129.007 23.554 134.873 22.347 139.371 cv
21.7801 141.484 21.3026 143.602 20.8983 145.731 cv
18.6649 152.092 18.9764 159.606 20.6947 165.903 cv
20.7796 166.216 20.9276 166.453 21.1077 166.638 cv
21.7655 169.547 22.6126 172.406 23.7152 175.186 cv
24.5658 177.331 25.4163 179.759 26.7459 181.725 cv
27.6683 184.066 28.3538 186.483 28.7132 189.017 cv
29.0443 191.353 28.6483 194.002 29.4534 196.197 cv
28.6419 197.795 28.3114 199.808 27.0526 201.197 cv
25.846 202.528 24.5496 203.071 23.224 203.123 cv
22.8773 203.05 22.512 203.055 22.1541 203.059 cv
20.2298 202.785 18.2777 201.657 16.4744 200.524 cv
16.2323 200.371 15.9964 200.314 15.7762 200.318 cv
15.7552 200.263 15.7244 200.214 15.7113 200.153 cv
15.7113 200.15 15.7103 200.149 15.7103 200.147 cv
15.8895 200.084 16.012 199.888 15.887 199.661 cv
15.619 199.174 15.1585 199.005 14.638 199.166 cv
14.4061 199.238 14.2327 199.366 14.099 199.526 cv
14.1219 199.357 14.1532 199.19 14.1742 199.02 cv
14.3402 197.692 12.515 197.725 12.1029 198.732 cv
9.99153 203.885 8.6512 209.393 7.42122 214.83 cv
6.63216 218.319 5.53353 222.078 5.67171 225.715 cv
5.62435 225.848 5.58626 225.99 5.5721 226.148 cv
5.42025 227.827 5.27816 229.54 5.16341 231.271 cv
4.38997 231.444 3.7054 232.043 3.66048 233.082 cv
3.2596 242.363 2.76546 252.686 5.9886 261.538 cv
6.26839 262.306 7.26448 262.155 7.347 261.349 cv
7.53304 259.529 7.62386 257.698 7.66487 255.863 cv
8.08138 257.67 8.50228 259.475 8.93734 261.277 cv
8.31282 260.815 7.20735 261.362 7.38021 262.377 cv
7.57259 263.51 7.75472 264.768 7.94759 266.09 cv
7.70101 266.343 7.57601 266.717 7.70638 267.178 cv
8.014 268.266 8.32454 269.39 8.64485 270.533 cv
9.42122 274.993 10.5794 279.628 12.8543 282.986 cv
14.1522 285.894 15.7132 288.604 17.6878 290.859 cv
18.1346 291.37 18.8729 290.823 18.7454 290.226 cv
18.1673 287.525 17.2703 284.876 16.2425 282.252 cv
15.8402 281.065 15.3333 279.899 14.8011 278.741 cv
14.0594 277 13.2972 275.264 12.5628 273.525 cv
11.8577 271.487 11.2533 269.419 10.6961 267.338 cv
11.2264 267.658 12.0828 267.213 11.9242 266.399 cv
11.1409 262.379 10.241 258.396 9.32405 254.406 cv
9.12337 253.533 8.16243 253.539 7.68929 254.04 cv
7.69075 253.761 7.69564 253.484 7.69466 253.205 cv
8.44026 253.211 9.22103 252.647 9.23128 251.762 cv
9.24495 251.766 9.25814 251.77 9.27181 251.773 cv
9.23275 249.031 9.09163 246.315 8.93782 243.606 cv
10.1849 238.519 10.2445 232.843 10.639 227.733 cv
10.8089 225.53 10.9661 223.325 11.1302 221.121 cv
11.9246 218.837 12.1195 216.239 12.6068 213.914 cv
13.3182 210.523 14.0975 207.149 14.9178 203.783 cv
16.2508 205.361 18.4715 206.268 20.3914 206.495 cv
21.2323 206.595 22.2679 206.601 23.0975 206.232 cv
24.8963 206.36 26.7303 205.962 28.5819 204.755 cv
30.9202 203.232 34.2943 198.793 32.9759 195.738 cv
33.6605 193.388 33.0282 190.658 32.557 188.213 cv
31.7659 184.106 30.3582 180.202 28.471 176.501 cv
28.2415 176.051 27.9212 175.784 27.5701 175.651 cv
27.265 175.067 26.9686 174.481 26.7108 173.888 cv
25.5828 171.291 24.6356 168.645 23.8221 165.951 cv
23.9085 165.677 23.9271 165.364 23.8358 165.012 cv
22.6444 160.438 22.3211 155.871 23.2386 151.216 cv
23.7909 148.415 24.6712 145.987 24.5282 143.227 cv
24.6766 142.748 24.8226 142.269 24.9701 141.789 cv
26.7415 138.202 28.8739 135.011 31.1922 131.731 cv
32.223 130.272 33.6375 128.361 33.8529 126.474 cv
34.1424 127.103 34.4827 127.698 34.932 128.233 cv
36.1131 129.64 37.6991 130.437 39.4974 129.972 cv
41.0999 129.557 41.0804 127.514 39.9207 126.644 cv
cp
f
64.994 213.824 mo
64.1375 213.097 63.2074 212.189 62.2191 211.312 cv
63.616 212.198 65.0584 213.009 66.5208 213.752 cv
66.9871 213.988 67.4339 213.94 67.7904 213.738 cv
69.4066 215.926 70.952 218.229 72.3651 220.609 cv
69.9583 218.29 67.5438 215.991 64.994 213.824 cv
cp
83.3988 244.269 mo
82.972 238.853 82.0238 233.533 80.6575 228.285 cv
80.4647 227.543 79.9578 227.169 79.3968 227.075 cv
76.6658 220.759 72.8402 215.713 67.9183 211.088 cv
67.6395 210.826 67.3397 210.796 67.0863 210.888 cv
63.7401 208.896 60.6683 206.556 58.0731 203.568 cv
57.5897 203.011 57.1424 202.429 56.7132 201.836 cv
56.3499 200.668 56.0374 199.486 55.8172 198.279 cv
55.491 196.489 55.4588 194.929 55.7894 193.381 cv
56.5535 191.624 57.307 189.863 58.0745 188.108 cv
58.7406 186.586 59.6483 185.066 59.4647 183.405 cv
62.078 181.299 62.7215 176.535 62.8045 173.459 cv
62.8148 173.074 62.7196 172.76 62.5618 172.508 cv
62.5653 172.477 62.5833 172.449 62.5828 172.418 cv
62.5326 169.836 60.6898 167.762 59.491 165.595 cv
57.9837 162.872 56.7479 160.027 55.7122 157.086 cv
56.347 157.194 57.0462 156.611 57.0223 155.932 cv
56.8826 151.975 54.6175 148.281 53.6942 144.414 cv
52.5648 139.685 52.2093 134.739 52.3118 129.878 cv
52.3407 128.514 50.2508 128.178 49.9642 129.551 cv
48.4491 136.799 48.2464 149.287 53.7327 155.425 cv
52.8294 155.53 52.0238 156.295 52.3993 157.436 cv
53.4666 160.68 54.7513 163.843 56.3358 166.859 cv
57.3089 168.711 58.3319 170.907 59.9632 172.25 cv
59.6619 172.528 59.452 172.929 59.4295 173.459 cv
59.3446 175.482 58.8617 177.27 58.015 179.096 cv
57.3187 180.598 56.6668 181.903 56.6141 183.585 cv
56.6136 183.594 56.6195 183.6 56.6195 183.609 cv
56.0794 184.582 55.8397 185.731 55.5033 186.886 cv
55.4534 186.912 55.4124 186.95 55.3636 186.979 cv
55.2635 186.715 54.994 186.523 54.7225 186.735 cv
54.1283 187.199 51.8758 190.271 51.4119 190.186 cv
50.1077 189.946 50.5384 185.734 50.5662 184.771 cv
50.6068 183.377 51.4759 179.426 49.6702 178.664 cv
47.9754 177.949 46.8324 180.569 46.3587 181.736 cv
45.7303 183.282 45.577 184.889 45.1248 186.479 cv
44.9017 187.263 45.1326 187.459 44.5706 187.129 cv
44.013 186.803 43.472 185.195 43.1693 184.618 cv
42.5457 183.433 40.7713 184.493 41.4085 185.677 cv
42.0462 186.861 44.0868 191.943 46.1512 189.639 cv
47.0316 188.656 47.035 186.637 47.3875 185.402 cv
47.6029 184.648 47.8333 183.882 48.1414 183.156 cv
47.972 184.805 48.2093 187.02 48.3675 188.34 cv
48.5052 189.485 48.7318 191.511 49.7674 192.299 cv
50.6287 192.955 51.5365 192.627 52.3709 191.886 cv
52.285 192.307 52.2127 192.73 52.1688 193.153 cv
51.7865 192.805 51.0296 192.948 50.8162 193.422 cv
49.0955 197.247 52.1712 201.673 54.5199 204.613 cv
55.0081 205.801 55.5355 206.971 56.0697 208.131 cv
55.4593 208.214 54.9803 208.891 55.1781 209.517 cv
56.202 212.76 60.0555 214.626 62.5843 216.645 cv
66.0838 219.437 69.6463 222.181 73.0335 225.113 cv
73.638 225.636 74.3597 225.53 74.849 225.142 cv
75.2064 225.859 75.5521 226.578 75.8792 227.301 cv
75.9857 227.535 76.0692 227.772 76.1668 228.008 cv
75.5345 227.382 74.8367 226.857 74.0667 226.462 cv
73.5692 226.207 72.848 226.508 72.8851 227.159 cv
73.0653 230.336 75.0169 233.138 76.0653 236.087 cv
77.3778 239.778 78.1302 243.55 78.367 247.472 cv
78.4256 248.447 79.0418 249.038 79.7601 249.254 cv
79.6981 251.064 79.6219 252.898 79.742 254.673 cv
79.5999 257.692 79.7279 260.725 79.4774 263.751 cv
79.2943 265.955 78.992 268.128 78.575 270.273 cv
77.8314 273.1 77.2113 275.978 76.2293 278.729 cv
75.5819 280.486 78.3538 281.275 78.9764 279.507 cv
80.2708 275.83 81.4329 271.919 81.827 267.986 cv
82.4427 264.614 82.7908 261.188 82.6248 257.88 cv
84.3646 253.811 83.7376 248.568 83.3988 244.269 cv
cp
f
53.0072 108.716 mo
52.64 103.178 51.9437 97.6629 50.5882 92.2849 cv
50.3768 91.4461 49.2015 91.6599 49.161 92.4832 cv
49.1243 93.2244 49.1087 93.9656 49.0843 94.7068 cv
48.9051 94.7883 48.7576 94.9387 48.7088 95.1507 cv
47.4959 100.434 48.2747 105.849 48.2288 111.224 cv
48.1781 117.157 47.9115 123.152 47.2293 129.042 cv
47.0423 130.657 49.6673 131.011 49.9915 129.427 cv
50.3372 127.735 50.6966 125.946 51.0389 124.102 cv
51.4334 124.157 51.8265 124.016 52.0286 123.545 cv
53.992 118.971 53.3319 113.607 53.0072 108.716 cv
cp
f
36.6263 187.569 mo
36.4705 187.762 36.3392 187.969 36.2181 188.181 cv
35.7137 186.464 35.5018 184.639 34.2284 183.281 cv
33.347 182.34 32.1253 183.706 32.8695 184.678 cv
33.6458 185.692 33.6048 187.166 33.8631 188.374 cv
34.1229 189.589 34.5902 190.543 35.6077 191.253 cv
36.222 191.682 37.0316 191.109 37.0394 190.409 cv
37.0487 189.543 37.3387 188.721 37.2865 187.85 cv
37.2679 187.54 36.8563 187.283 36.6263 187.569 cv
cp
f
84.1322 251.53 mo
83.723 262.256 82.1366 273.367 77.5936 283.136 cv
68.7489 302.152 49.1605 309.503 30.0843 304.529 cv
16.3651 292.567 7.78694 275.557 5.09847 257.327 cv
3.42366 245.969 3.99446 234.271 6.18148 223.032 cv
7.14583 218.074 8.43196 213.183 9.9764 208.384 cv
10.7474 205.99 11.5633 203.594 12.5028 201.263 cv
13.0614 199.878 13.4818 197.397 15.8436 198.548 cv
16.3026 198.772 16.8939 200.389 17.2298 200.764 cv
21.0033 204.971 26.8704 202.046 28.9022 197.53 cv
31.8529 190.972 28.4818 184.797 24.6512 179.58 cv
17.8211 170.279 16.3577 160.735 19.4505 149.453 cv
20.9159 144.108 23.1136 139.008 25.223 133.909 cv
27.2816 128.931 28.9417 123.339 31.6034 118.672 cv
32.3031 117.444 33.2181 115.384 34.8441 115.386 cv
36.8734 115.39 37.1038 117.976 37.4495 119.14 cv
37.8167 120.376 37.7332 121.642 38.4032 122.811 cv
39.4583 124.651 41.7205 126.277 43.8836 125.778 cv
46.5736 125.158 47.0882 122.325 47.5228 119.981 cv
48.4876 114.776 48.7401 109.499 48.6424 104.212 cv
48.5926 101.508 48.3626 98.697 48.9276 96.0276 cv
49.1283 95.0789 51.1995 89.1131 52.3314 89.0442 cv
53.1654 88.9934 54.7406 105.181 54.8397 106.474 cv
55.6825 117.473 54.9212 128.236 53.4993 139.14 cv
52.3958 147.598 53.9481 153.598 58.9163 160.328 cv
61.0789 163.257 63.7015 166.212 64.7747 169.796 cv
66.3573 175.081 63.3079 179.76 60.68 184.048 cv
57.1243 189.851 53.1922 197.736 57.1829 204.402 cv
58.7938 207.093 61.4447 208.513 64.158 209.75 cv
68.4412 211.704 72.119 213.864 75.2572 217.54 cv
83.1673 226.804 84.5838 239.686 84.1322 251.53 cv
cp
89.0472 243.819 mo
88.6522 233.73 86.2235 223.657 80.0824 215.597 cv
77.7449 212.529 74.9266 209.83 71.6727 207.809 cv
66.8743 204.828 59.8885 204.114 60.6478 196.73 cv
61.6195 187.282 71.3363 181.157 70.0472 170.993 cv
68.9583 162.408 60.8514 157.667 58.474 149.73 cv
56.8158 144.195 58.6243 138.009 59.2381 132.428 cv
59.9393 126.05 60.1932 119.619 60.0028 113.204 cv
59.8441 107.85 59.3651 102.51 58.6092 97.2107 cv
58.1483 93.9812 58.2533 86.9363 55.1546 84.8923 cv
49.1126 80.907 44.5042 93.0525 44.1073 97.136 cv
43.5745 102.619 44.3001 108.149 43.7923 113.654 cv
43.7479 114.136 43.5872 117.705 43.1126 118.731 cv
42.1043 120.91 42.5672 121.002 41.8538 118.824 cv
41.2015 116.834 41.6107 114.939 40.2786 113.14 cv
35.6737 106.919 29.0047 113.607 26.973 118.341 cv
22.5848 128.564 17.762 139.331 15.1507 150.202 cv
12.827 159.877 13.2352 170.089 18.8548 178.503 cv
21.4886 182.447 25.7337 186.523 25.8768 191.615 cv
25.9569 194.448 24.9471 198.365 21.6458 197.708 cv
19.1839 197.218 19.346 195.134 17.3988 193.832 cv
9.64095 188.644 5.79915 207.722 4.64241 211.788 cv
1.15755 224.041 -.583173 236.936 .175616 249.703 cv
1.50423 272.057 10.6644 293.876 27.4383 308.502 cv
28.8455 309.729 30.6419 308.9 31.2782 307.625 cv
45.1961 313.023 62.1541 308.761 72.8172 298.22 cv
86.4075 284.785 89.7733 262.342 89.0472 243.819 cv
cp
.607843 .254902 .054902 rgb
f
57.161 66.8782 mo
57.0189 67.9539 56.2572 68.0261 54.8748 67.0955 cv
52.9476 67.5335 52.1449 66.8006 52.4661 64.8967 cv
52.3177 63.5652 52.2889 62.2127 52.2381 60.8753 cv
52.1722 59.1345 52.0931 57.4075 52.0711 55.6785 cv
52.6834 53.6873 53.8255 50.0188 56.8822 52.7966 cv
57.5692 53.4207 57.8866 55.4485 58.0662 56.3723 cv
58.5296 58.7542 58.8753 64.8855 57.161 66.8782 cv
cp
57.3822 47.4309 mo
51.9867 44.4514 48.4945 50.4368 49.1619 55.2688 cv
48.0106 60.9632 47.1546 68.4133 51.2362 72.1653 cv
56.4227 76.9324 60.5374 70.7639 61.616 65.909 cv
62.8709 60.2625 63.3118 50.7053 57.3822 47.4309 cv
cp
f
50.679 12.7381 mo
48.4403 15.9026 45.536 18.3963 43.5711 21.8025 cv
41.9359 24.637 40.7284 27.7517 39.8573 30.9163 cv
39.0369 33.8967 38.3309 37.2058 37.8831 40.5598 cv
36.4676 34.3245 35.4686 27.9871 35.7782 21.5808 cv
36.0457 16.051 37.6927 11.4114 42.1727 8.15798 cv
43.6942 7.05348 46.5208 4.97389 48.3587 4.79372 cv
55.4896 4.09255 52.2244 10.553 50.679 12.7381 cv
cp
51.3382 .130143 mo
43.0521 -1.23363 34.0579 8.41579 32.453 15.9895 cv
30.202 26.6145 32.8216 39.6594 37.4618 49.5066 cv
37.5203 50.5354 37.6102 51.5491 37.762 52.5281 cv
38.056 54.4226 40.8538 54.2102 41.2874 52.5281 cv
42.7288 46.9368 42.3372 40.9119 43.5638 35.2258 cv
44.8939 29.0593 47.3358 23.7097 51.5101 19.0481 cv
54.409 15.8103 57.4749 12.4129 57.2801 7.70094 cv
57.1307 4.07594 54.9827 .729264 51.3382 .130143 cv
cp
f
54.2801 162.025 mo
51.722 158.696 49.2987 155.367 47.2962 151.667 cv
46.6859 150.539 45.1336 151.532 45.6165 152.649 cv
47.0208 155.902 48.5672 159.158 50.5423 162.11 cv
52.0296 164.332 53.6185 167.273 55.6527 168.981 cv
56.0384 169.305 56.6107 169.194 56.7694 168.686 cv
57.5531 166.178 55.7523 163.941 54.2801 162.025 cv
cp
.996078 .552941 .133333 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (fire_1.eps)
%%CreationDate: 3/12/2018 2:15 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-(UDr/OEWGT?&[n8UEBHu^H_VOm<@_@>qIWsS9\-,FEch68odY?b&qF.nG);5pFgDk^A70^=&3bLqsNt=
%q5`-)rG6]QgQRu9?Tn3SIe.+EjmD[&YPu,f5C`7r065>10@Eo\c^s%N]R'P9adZSM>1a\+il1rgSQmI"^u*gO^A>eVC&6i_bo:pe
%\Mm:`dI2OuT-#Ma4F[43^UsI,flq@@5C)kee]\!c':aCIMlaDeiqD+Sq?sjecZW'D+3Q<]a4igAq>U1/IHGE19E+eM-Tg,Cs4I;4
%>I8duX0Ok/nQ>/)J%7TYqXIL>s/i3Tr>Yb(G@;<\3PYO[&^Trm6=-J>jk&?AE-E@RQ65]Ed=]3KIIZ^r-Z<l_JoN5@#p\Z']5fZ5
%G?aoT1)dgD/a[<C--JsYG3)A2]<]AU&>c?cJ!HdQG0N);[m*!erThdQs8DZ5f=.r#I'6nlq;U*--f\=`Q&CRT"hA]t-/.g;p\j^<
%fDkF4fc02'bdOBYoW)&#h`dAC=mpG'r!>lAl2^guSalS)YJ7Vr,LZJSq=b^MH0!D'pZq9Tr:7teDBY+e*qGe=DdWMCec4PHs4"M%
%h\OYC(AWkA@CKM'SBK3S>'Fi*I7Ro\S57U1pF"mB\64:i-e!!&>^uAAff.5`riF5Sq.VG;,l-W,T7+B[Eq-cAs2PY]WmdTks4DZk
%0>)ROqm(^-o3WMe2,/qhl;q?NdAN=<+'uXr\9s']mU\/dP^2iteMm3VocO+&guA3Lm9A64eZW?%"j^N7`fD5?>(9VgqX*nCjd/2]
%rTa8uJ+<)*Y9#q)nb(M;rcl'Pjg1;_48n9$^\u:Ba)$+nqTWAS^&Erfo+tck5$=f\eWXY'ro>(YrSfK>Dk?t(r3k2Q0fT(R[nkno
%H7a15p$Obgr87&Ug]bi3p\WQ<T#qkm^W/>F\Y4u)li-j'/cXN(qiL,4o>o+Y2pg.)b9(Vo^\W,bZ(C]O49"sLPF#'OO&##9oRm)(
%M2^_G9:U8(jpr!6Vhk&UdOi,TG#7%@_Xsl64mL.Y5KcB5qss(A`ng<[l^QpM[-]#\4?Rogr7O$4T7$P!B2<aKfAD)PkM>T6]m;m1
%Ic:%]8b;EG.pVlm$3&\;5JDICm(4(o0ltNV7>@EtI=D(4hnFGYqlir:jF@.!2_VRgmXBk\E;fm454tB=HM`3HVi@`04\:+uTBRe3
%4CuiDHH,Y[j#P]g+7L_-OAB4J'8:\W`..)5?i9SRB^B(iqr9ab._>FOcX)M%Yl!GWB5_\>\bYO0\$/GJ?i9`A\$qkfrQHqG>GeT7
%?(9HJTDnKM/"2C.rQG#$T>,jGoeT`,IjV1"N#:g-h*M$c$U&f_qbeJV\Qr8'YhO[+psHi?I^E?+?^hT$S'.pAc$/s'i`tSP;SWhB
%QGpN+OhXR_X,e@Ah2f;(^]$V[R9jLWDZ^A7DmJ^'f_&J8ljdK9-F%KT"o!R*n^U.dB)g[W]h/&G09SNq4[-u'kZdD7X2K1T]13E^
%qu,i!TATXsmPh>A]_pn-,'_\E'u"5c^1I3oV!M@'hc^EEj)=icNPSIsEYU6f,.+_riM%qbs4?:$fD.JL&[0*[^NOWKm3K`WmFud$
%:MmY=(0bJ37*)X_;a&][Q!`$=F,e^O=)Q/HN`JP!Mcfp('UNb!36JMPEf40YISu2/4A@h@?Lj7sj>a!2*/Cnf6QVM-.WV=!jmYiR
%6uqfeN`/']+g2egPXiZN';F.NdDmOci?k)U3/3&*ni<Ct.Rsg95b'*0jlMO2dQM%/2`siU*;r0`]c>X1513M>jM4D80=UZ'WUf*1
%=E(bhGEUu7a'LfC0:a:o/L"'Qa=bRHSNI)m34I\aEE\BC*9>Fp\X'#\W,cDiBo.!9IDk/9s#3G<?HeDH:]KN,DuSS=>5GM=_&ka6
%r,[HXb'srmrs(QepNu^W]l/68d!_$$m5'K*+65\Ri.Z+136?0%"/h&b>Z[%,8<*rm\lrX"daN*p3/[VRjM6T`'+kUE&7e>.#TnO@
%a&-C3+NL)EFC"D]*Ymcdf7`)rkn<fDK[iMelr9#9k90f>QiFgdUWK,Xs'Oje$Np^/+nFeN*+^Ql^3TWI,k3.89&i5:m.'p>/rRe^
%(<M5GG3O[-3g7l/P>M/h3UNTJI,^cBgsLt+AEg](EcR)Z<u/p4]9<Lo&4p^o>c4f^KI?#m6TBr_akV_M5-)YN4Ja>-R4qWQfJ/rX
%qgs3<O^:$.)sO=Eo<q7u*^qWNbj$`hE@iDW,NBMLr/,0@A!=WkOUa/;<@$OBID!9+)=\n*7AT-NAEkGGk@=ohl)Gq[gCB"V;8h?4
%K61QdaohF:*j:Y%j7+OAPj&lWM+9`E;*W[1_s&S)rnPR/ntH+<(fVt/3pgND*QOYu30"uLK`_IOiTEI^+A>Xc.`nU1QVuHYFOq^a
%&Af[2&bfV1kb&:b`AU"W+NBHaM)aPY=up.h+[8k1hI'A_I<nYD8>QY2.sQTg"T7VgbDn?GDV/t"RX<)3(A9LQS9gS:Z/PeSS9n"2
%9\U5X1qOP;5$021K8^qb)P):.9&gg+T\JQf*Gu?Gcos2bU?Q2"U)_:0!WsU<J6.oM^]d7#q[l!&5g,"5Pa+Uj8$jq)#6Q7-KTDF-
%_Fq!uKn3EF*&Xd1j"Y("Df=:52uN#+I:SqlJ=qOoeBn:nn9@5]%[W)cKKd@1+MnNV`K/(lQ\\7BDWkhWS1G?Z:=:@u$'0gaFe$gG
%fU1TR;]SfN5fZ\)@%d3m$jWeg'4_NO6R2q0"RCW?,?-4=0J4tW3)D_sC1tosn4<4oiWlOFc*A_F-d"#<\TR`6&ie'BQbll8"6FJm
%+r)US;.O^57[(k9Oa]j^/<a?hB=Tk@m%YegE"JGIQ<Rh8B'Ikpdc3cV(6PS[#g5N0lrkH7jjUPXI2%OV6F:^:_%O)``MMq?lB!0H
%>ZMg\Q'4<>$d(>nPG66WR3@K9!K<+mR3>[#AhsS5LV0VY()DsHl&<bR,=rs^/f9#A3690KOhft<\N&g$Y]*/nE\Y)d1/P9hj"O:L
%NK]PD-J)jqA==f1Us[;Q%?oj$'"b&5;U$JD1e=,T,[tN(+PE5E!b3LD.H5#oW;3-a8#=n$biE_TC)gfr_pE(!"Z\U__d<kh?+0o[
%h$bRGW(,^JgOQnR!a[Y\5Oq9YFFV5'P*>SR5Kt/?S*=/!$7HN4VhiV0Bi8dC8fF#rbgdNb$U?7#_d+qR_leJb#N/rq^3oM2p?UNn
%eq@@`)fW&fDP+Krcn,h_p-B=neR[ea6k;Aa&YeJB=:#5[b-2PR#ZqaK3t>I<McfC96r.8F3"b!m@Ot,?K_e6/_,KSbea@"n:j!\U
%5T=PFW_63T:m7$aYtub7W=D^Pq3B(UQX=$GqnbEJ\p_[pVWta]USacC3t;uQ;p3[\Z\;HqSZ4_NG,jt0iK^,1<lN[?p3MO3UPc9+
%_t?"BERPFLhUCF9+!L^ac4MZMnX^tB&$"%SNdU:mmQ]cmp\h7DfHGHdpt>$XLYVDck<8b<I)l-0R!]i#3[N/=kZ['nH=[]'2MbA1
%RUn,['Qf82(K.2;%^N1la9!/gWQWdFU/=>"O/?Ii]ok^WO/AM:G;/D6%D"\3\J+XqC7I\_;lOnQWl\`+9f5ECX_XQZ/DC]!9FWa7
%a+c<,).I[k6q?Xh'K`JcJ=0m&(^jr7X]fHtanjC3j6YJ.1`V9j*+rR.NA`q5\h1grE0H%JoY8s%]]Fr^8%Nb<3t_Y,mjJ]1l?^Ml
%l[']?m>'Ke*G<%Rn_cJmpdacIM1>LZmeADo1?juP@LhiBR"h*3Ps+es=G$n9M\06+$Hd)mX$sZp-g#THh,7sp^i=I<(*aj=8Y:f3
%kfaq2DW(I3V<a@KX'B^S4IDU^3n#QeBGH4<J7Wkj@Fd!-mc4i5U=r$fTG;]R[ENUg7&-!+"5&?VeFh$k*HSAt2B#*QW/]B]lCB^?
%FQ#4.4GF/+9InqK9U\TAGZT7*rO?44]j'fNd.-pls&O@AGJRXW*?#%d4<cqk9Pp['lron[i;>Mr=mUY'[V4Bs0j\f1Mb,dr(C^V=
%WD^bWL>Cq81Wuf_?oN5O8N\dW[Of!"PN4F^]0LcL$ORP4JZp*I:Vj9l6=U0/!FW&LJm37cd<!ZTKq;KnO@AP+#Rah<HYnJV%?X+h
%J?$00,#TF]$msLHeO#-.Wa=p.UX/HoVHnb@-T66VoX7.7i,c#lea,<@*miJf3O`n(+0gLhF1cI^/g"k>jl55:Xa0+B+*,FC+*8P)
%i!19C`s876?g3SVUYOY[*,kPV(m^Y5'5lUik&ci]D_`2n9L3m83?CUW!/]iJ4F0>fa2=JkBI3`E#^ujOD"Ohc5u0b;!'C:+!pimb
%;h<4=@q?!f.`?$$k6B]uBN$I>%W4H5g75rQ6CTd@C%19F8";UIEH[FB@86te($\c&;rQ$87:@]4:V`P?MiAX7'cdGXe6,bZa(:;I
%S)"_f]iMOL1"p)V>!A1ug)0J&it,FU+]VOS;sY:hW?-J&FdT#+RVl$RER;(>r+JKDZc.7B,>Lb]*9TP(4lhVJ7_Cn>brs,3XiF:>
%O5kkR_a=pEj+GXh#L9o"a;l@MmXLchhV<M0.%`B>B8uIbUO9('Ib#p>29KQknl_`8\iZ?M)6(^+s'5T]a8_;_$:Uh*9e<_F)Ca"S
%jbC@E,'0/(DF#'*Ktgk`<VSEF6[Tr/==t_%?kM3Q*c]cdcckh"aj2TXX6c]_KhK2Hf+bbcnp0DbX5I48>]]nVIa'5<?o37Y5(U<n
%T>5<,Me.n$%j7aQ3hp,ZDlp::OfbW46#uT5;9YGRZ/reR;f;1%oB.K^BC6;NEMnCNkdUKg9INPjNC$TUAYK`iiZK\U`\#03.4'3<
%E`"5L`VhW%V0JdlnQrN,nh4+UOR?!_h]cT\)0mlJIh<8'\3o(ae:5&Vp36Gen,9W,pB`1&MjGfI[%C'S9u9UNm!E7c.uH#^_Rp/4
%4,1#'/Edib(Xp/3gauu9*#K5WpaQp-<D]$D0(U,!d&d^`c,$GK+;Z3%@m60s!``e7W/_-Vd0T=HD_lrKKV'+0DTbSW.@+:MH*!;d
%(^S>$b?NMeeIt2M-G!lr8fCj4R\Qmul-7:Eebmp6DJHMje=N(SP3I=&DQ;isp'fJZ)61bTS[2:b@D[oNlHdS4)pMN6r91N/@<U6O
%fFc/d7\[0MZ>P_Lk@em+c#oS<%5*%u3*nT28+(WdkN9M=50Ib*`$mZao++#A;toX?45O]K\E!0$htP8fOA!LR#W>]32b:s9i44T0
%1)"[bg$d#3mDZGnlCZ'-PGgt]qEi6!LXRcESKe522^8ngRmu+1-_5umdQHmE;g"IOI:BX-:Xr#]5u@0Q2+>lubTJZj)S-9YiPC[u
%1f$/IkhO&;f+r&b@<+R6iWq>SfXlpL&\rQ*?j\G]ck*E-QOEs#WI6"RO*7c(@WBQ*a"\s>>u,b@LE7]RD:nIMHVT%9b4"%[2..=_
%qKgY2XH@fbRe4@Mq.E_X2qqhUc<5e2Th"3hr9+tM*:_l1^#R1Sa8Fkj>WD$E+a:TJp6MJeqiEm'i2lZ5ritqE$YG]#%52"*i?dXa
%+#`VOB?Ae0DQ$_;4idS5q>G)P5BH]j43ZCV&'=3G_5/iN*hLr7Y)CYif0'(ql$j"A>%&`%q_q>Cm("^LF:KdC81>'?BaZ<EJW`E>
%Y>EX_8@epJ'g'^7UBrc?45P[M<j:dOE9I]1RLb!9%g-S7aY7aPHcR5R>$QLF;(`l2#=%RrQOgXe4hpg>iue)WB0c/VQJm.R<S-"W
%@L"!RD5p_$&c1XsM!9:t,nfL)ZjI*s86URdD0dQa>sbTQHL6hp*jM5XXZCchR\RoamSk4_%'=WbWB9C18%nVplR)kO'`o17`U`4T
%'rbB).dJ""M<]A;C1Z[jQ;=FM1=aF+XG0innrkZU#:lb0><Z:JrMIQaKo&-rl*Seu)OMRJE:"*6GH1[:#O9]BWGXPoGpmIY_OAG6
%P>/EXAi&$&.+==)Nc]I"q2man$\uLkE:5cbYoe9gZbQ*Vr9.SPfl;?4+a8=L=mpG0,N!L9Bil9)g'6ZUf?AH@1.a8Z&&^MJO`dbV
%a2o]Tlj%8M3"1d-#oJ4e;Xr["eKQjbQ=VV$W:C0#EMC0.ZC4gbKkj^d2VP?g[?R*PPf]eaQj7*6l-bT'<7q?&b!/bL*NA?7*F?,l
%-1r:i2aM"b5))a[d>!K8R<jPFRB4=-3!NO$+:@>QRLj*B'hdsKVpMOg0eL*3fG=6u;t;hX8[JrQMjQ+36!Z+2\m&A"Xl/L3OcSTI
%7kaM_eAM#?:@C7)Npf*nXiKu0O?;<5qmb\X*T-%)T26G9&$cu&Kb^@l>6JjJV+](I!/C5FCk#pP>$6.pg@1e[R"AX!S]A@<jmO1@
%o(SBU8iq;Q=+pN][GYICbo.lB[)m42aslJI$4p<qL)hQTgTl]RJOM6Sg(metWOu\9$W.VAgi4sQ\5UC)8h+(!X-eB,C\,Ip3t1cM
%74e$(\>-A5q2SRc1W2&s6N^A'3+`,5l]oWr12q1oFj-;!P"A#Oei.I7,B89H(,lZY:.TIN"jAj+C/DWh,C+jZHp+E``!VMs3!:2/
%MF@m@hMIM@ADn,Jp`]p?';GTbppE4F_0Zqbi#l>WI*Y@S+&MsDV3'[a8?^gtRtJ$-+te(hlM'D7iMhW&mW`?&T,mUM;=5DCj';"s
%a[EmZUqbYD2rf7PBo4SqH<Bt&A>\#,:sclnADJLM7[Y6s;+@mNbVJo3B$f>6=Z2a[_2'`!0Z;HLP::Dsf_$r3MNM6k1UGTDl6b%q
%(f9Bh95=51R/_ctkr%q#f&N:M6YiJYSOXX83elt%@U^Lrh*Z@2$JMVh1,flC9I*S#aCL6!johnk9N6_32*@3W/>pE@a,)VW@CKoT
%51O=U%LdjC(d3gU_rSEaH&,<rIY[9Ypq?T@5`cdt?&Kt1POg9@dTG%Wr&2JFBA84!`98D2lEPND!8V-XX-];.$qL&>P*Vk&m["^P
%&%oa!YHIW<YPk$eon[kd-to5<3do!^>(%>`,+D+^(=51Hdn,4f:T-<KW&uD+LBu3QeAeD#ZR6trD4OjEGVERs?rk&(ggfS4bNbp;
%nb_[8F>)^<n$2^)1BCZ,5s%bn&_FsaPS1*YPaGe.P`/j#&nP5WUJ%q'Z43lP;sfCiYRnC*T_=.)E;`q_cHC<s2.IKSjl=dHcjSXH
%3!Qakes+s0\U+`hXBT5ij/kTf1AUS&n<W+NX:k9[NurB**Cng\0gAlBrg*)QP"9LdWBDrtOYrhul*Pet>>grfhQR7YUf9aH!uU%F
%XI)UH78GDFP<AKk//P^"JG2?OX4](UA;N'm7C+&ZG0-OOFCr9-8WTh?#A#+-#XdbuJf1C97#V>kMQEeH@S5"QJSbKs&-3-72`tu6
%%?"@NOVXV%cfTM7(&?]NTC;Osqi6.R%gQ(E_0h6^!o+Hgk`f0LR1TZrn]?SZ,%G%0\igO<JPK7oA9Q%i#'1S:+^h7#Yb[@gi0nJ)
%`_]0OUm73?1EuN+ftb`p(NUe4=>nlac8p/W0s:&knSlK)Vpkg^0\>T.#I+U2k/=`s=m,5DcM>:?(IfQd5!/$P5`nG+d)nq(T,+$k
%qF9dHN-2l7=&t6%r<O(A_.>9IotfsB#?_o4*Zr3&12'il++Jbp<.:0#iL[sbfM?bU*@FXFW`W>5[3HCA<*WM,/Ig,$N%b_'C2gZ^
%B_[oLrqMUMM_p%*)FEk4e43BRc.t_OQu^M5l+)!VZG*SS,<_P;CU$5+=l%"QN]`?M&"/Z_1p7\;Cg4%:n6nB?r0R$5_Bo\t$1s_m
%M72:,h=+>R9s$X(^#X8_fTjR4FQkK?>jcjg9>>/Pg$qgP%J%+or-1I53mEY.*H0%^\pN4bKm^gi40Cjmp3L:gi<t!Y>?C$69lQTO
%\L-6@@&(kbpPB3[ZVfg5/U)/2)(4:`(K2ZHR)@('7ml%=Q2WRX3:R]?g_.tOOb%TM=W+&W!nr(#T++`qgGo<%IO)XuPL+pS5`'17
%L5^:Mq,NJi:Ad9KA@Ah_?VUJf-u;UHRhNp+">IgNe^ll"EUB8-I+&a\EA/iOB<9mT)P#)NK=C*];aN/J9+$,P>4C@di-Q,hmj&(o
%RgNsG]+6qT,R&\Y_)m\QZZ3MdPJb'C%\<n/mtLmVB#D4]^GWNF+b4c4fPM,]*2[5+=O'.;/MOMoD&LXE\S8L"6X'_@c?aTXQo(=_
%\`3kuR#eRm_&>-i5;kugBT;$V1q7Y?N<8V:k0XrjGh^QX#2Hm=>l!l!n7#[R5X+Ng9_K,@\Dp_j:b.nC/'9pF@5!4/rRWL0NLp"W
%c8t6a2Mgj[#N&4DITsHnHCYu1)k0OSVM*eP/q,a%nQk_Fre>V00\=J(@S'-io&V4kE_<t1G@Q6W%Dg,4kc,^k<rFJ/kW<"JI,H"Z
%K5P-gACP3+Ynh'bn$_Ga6f""\1#XH*g5[Bo/&"4F*`h5G7YbJJ<m8+.Nap6;/@\"0%*Z-2Ln3.>IF.X/Mh6;*&HnH_ZO!nf9IMXI
%hV=tIF-;cV.o5527s/R*Sh&5@Bll<E=uS1?NQ1gR4ft3;@M'^b)jM>Ti%].@_6dt;Aoc;c%6!so-IRX\T>l<*mlfQPcNuR0NeNLD
%9YMbS!6NZWhDV,M8H1kcVl!7(l;W5U1[_0/h`PW.<thqNBD52GmXP3NB2@aKEe.9)[)@7$K]8,$+b.U,oZB<\+ufkni4j;18p=p`
%a4s,HTT?L*<\GgJ8f3&7;<O+d>RMs>M6qru031bre87Bm7Y])X++Z92ELN#U_cG'(fr"9(]:qR2.I,CHNp@U$2:Jk#PH,:@T:so^
%6Set&!SECGRFj9bR=F&Bl^>^T\+n[9ULH^/-rebkj?%Y.g#<,jj[RQYNg=[4g-c<*gArqkI`)UNe)AABQ7<\R0?Yj]="LDnE58%K
%4Z\*FP<9Y,?/S.,7=^NCZt;9CDK<+?*]f*P_Ic8Ua`2PE0)Q6EpN$#+=7.B_6u">J)aoftH7V"=-JfGkb[hreU6'*XWd4?=?3\gc
%5\/(\58n)TCT3(.(>??deQT!#b:n5K"W!>5qcZE9rd!DUMG)9)4'\>r/lr:K<>H(]#:m*^4'et^+he"q0T3^MCuomB=4s;t1T%H%
%.`>7,5O*L9^f'1E>G/CiJYCkXdcY_Opj$CJ7/Em.P=Mli;/C;%c8$g9bFZL].jG;]%$&!p88gNZHH7,ujs]sFoe"5FJBAnA0'W>F
%YktmL;^J3onSl;pg7KZOQc&+MCfuT"n*o\ON6mTk6<>"?Wu$r=0u:*3^,QS'V&*(RBUlit=\?RiWSt(e?s's22&'K2FSKX\IIG8d
%oYuGfN'P/cGkJ4o9b)8c_C'tjRnTP5]ffK.pW0T(fi8i9T:2(?m`H_;R4i0_g\)uHHY%>&>.kQL+jZ1pLKn^<7tl9kO!0abcI9dC
%B\njjU*YllG_bY)J9#)l4$MXVh=JaF<`0]5=)AcI.p$a:&OhdC(%0eX><qHog_I8kg\<uTIM[DCd:o:0NAldHbP_n\L*H%nQCA_Z
%2.(=<53VQu[J'/[@kYaNS%UI";=5.@AZUfFNQ8F&9,m`gblf2DZ:oKP9pqofn^HdS;mX"%>2qdM!D'*3+Fm.j3(7sOTlT%R,&eKk
%H)[5KX*(tA(9GQ;/qsH(*b"6$;KUXf_e)uSc/*QH*mXlikPN`1EQair5'<2MbYa1;h9_j6J']_/qmJKU"uq#uRru'+^?(;Rd*i?j
%JV5W>nk%Gb1]+B)Cj5-rb/^`V9L`VC8WuYo9a[u(?QCJs^9&l-//3P>.PAgOlcrIIk2=X,lrWAI+OV6!=p%?;-qU4J13p<kFI79H
%RuEuir)n6843j<-TK`4DX\OcD.]b_Wbo772GFP)1@3W4mVPUH$2+uJ#U/nI2V;bi@$.8-!\n%qk29Ase#pVh+4;Ei5e9fsHTa,;F
%"^dGs;qknZ+/e%g@s)8lnP(PMlf\>;*(t"OdF")E:"!I7P!IhBZUN];VL9+/2eKU\`OZ:cj.ANY&"CAlCp;2SlT,N2[\)!#HQWm+
%HO^7+DTU6q?k*P;UuD:F]F3Yk)nkm%8#UA6)*71jg&LK<D6Wrf3k)_h^3sK;W^]!NE,tuej$/g$kjI7^+Bh?Rh`*lL_H!pJe8;9k
%^U+3J3j%4@rR0=bT[+Em>J*s/!]Y._2`EX%;Q_H&:$MLTo<n+t30WgV0Vt8W.^RVr3Mj5(<O/p#W"C3k=<LZmXq[#a6K8u'1I;T(
%.(6`[h,uL78W<#<ZZM_S*t3U7C-8o@o6OA[-EHKT1j9Zig]E6)6D!c/:U'0H]]US>niqHPbIR2_[S$P?>q]hs%+1*-@+WSIcV)[D
%+2-td=8#2;_)]^kh,=,8R%Y+"aAua0'i6TPpfLZY"2L=nn;3r,A\iKFgSEdkj8m]E*G.O(4?sfQ-9eCs0TGCH-/t-1KT4nPL@Zh=
%j#E+\4I5SP!Y/C(FIqC]QqjEfRH=%MNfb&.lDDt"a*6D%FroUfN9='HE>Apn):`Y\_(F&)q_BhMI:69!6HIm.7suHQFl__jT1=Cf
%"a;#;jgXJ00MB616025^Am')+,XiJ:-4Uu?QmH4,M(L/iCrI&K-o(q\?FDDIHb[#.`FN)j7K1X-]sR6q>F):<3J7AU)2<o:0F!6D
%(OZ,S]C)GbqTG-m3SncAouGm>^$iOM1N?\Td`hXq_HHq=`8V4*]&Tk,\d$cPj`rWE5'5ueK$h(cb2VJoB%r`V%?Q$'hYB!^>lE=0
%.8]Lp8?i42X.a^H'@r.XZJBd^BC?T_F)a)QX-*Ef>@6ZbX`&Ccd<D1#k/Z5QZ2[e.N8\PISituua9e^3VrjfL@1#PQ1:t][;)64@
%PZ;j<nZD8g^>8X7lPm"qGVNH^1r0RcrYh$8'/[/O[;"I,^c/QI\,#F"mrpg&)l`Ej5(7&8Gg:VWqk!DKDVs";C:h*HcIX?t$nP#O
%YuX`W;5XG'6Bq7<LFP`>MI*h1=T4]B:]m.iF?Ik!gneA,X=c"><EXSX:"I4+1JHIZff#P!Viq8Gf<9)Gh9qK%FP9&V1Yf@6iWN+W
%#;YR:'0KhT?]Lnp-'BU0_AZ)5dBjXiGh8PCgE!m49e[OV1dMf@:>HTIGRrlFT-20Q#9kMQ@AWF_pX#LU_k-V-?;hhF7%s&Q2cG'@
%pOKjY;"bXbHk4$a<USB2!M"9%-96h]AU!6K5l9qa?F6_g$P4WY[5aM@D7S)kr:W.gr@H"fnY<'cBa,k*Yj:it&=GHKXu!`(9%5cZ
%I>52nWqa+WrhO,3(SU5uPg+7"pDgp(aP-hTD'6q.]>B&j9O(<rS$^0^!]Wik$<_/0bpCI-IaC.3ObbI9EO"M3>P$2finZB[mX9.0
%aG%]gm?r<>i+"bXI]NOW!M^UZ"NuG3)u@&i+apiQ4Fu%,p:%JYXY9&NrLX[p]^NnsJM+Pl)E*n%fh/a/nT^r$/r&dHmX0<eZ93a6
%c.9Z^3W;^3Ii*-9Vo@8Y9`kbNZ((!7]9m%4e&H3c'DF%PUl_1!b/Sj"Db+l?##'ltBWkRdF$9i83EC\$N!Y+:AbZ[1IKh4X!Dn62
%M9dsI=XH>U`7nh^h\Vs`[s-.Omo!0@-<n-4%f)Rg4o.*bOOhb9M^BXf6-f8!(\X$41RE'($DrKk@2+a3K,On4PJ@BL1]8EFp>I38
%2dPm)0"3[JpUTo_T&,6-rZP(OS!j!oQhMlJA67i`>aKT.W`i;06Jpcka0Z5(\Q^9N$1@MY'CLALq:V7lJ(j:^5C*)Abd>X05@\)n
%0sJt@fOkWZ1C!Oj"8e%.IE'&d@pkpWgWt,bB:8NG';&jq1C!QP0JI5:lIW4Grq?#kQZ&J/r8snASR(pa2if'ZqHNqOkjNutjNX1K
%f.Y+$hgb[NP<Zd-"UDdAFm".`.cU3hUm%uk?K*T7G1AueFs4Ju*5Rhr2nmlCr8FjSn+ZYh.o4t!iG\S]s%!(f^SUV,dLEfqmJcd.
%/\A2.o;^\f99B.SIcoMp1uET:m['F*nRfPkguP'hm7gpHs8Mijopb!JVf/0?HMQXphf_65m7I;&s6A/+h2eah@3,!jl0Du#?G6>Q
%s5`EOU`7)FrNk[r?iBEdl'n=3rWu[(TD61knc/!']us9fr&9$oo$eW^@p)uYfF-M*1&@u-ZCl<hYK9LgGbXrbG%1sR.P)n7>R4C[
%f4qu5aqZ=5V&=fEcT@P6<sqW3SSqRRLXP+`>\JG@'>o:n<3KQ&UJbZE$mNhL:$'YnOqtT+m(Zh>oa6sY3u@KgBd)jR\.m2*O^$#r
%AKK>H-^H9Nb$J92Q$e=QQ@)\"DUK0#`!>gYWT\sbTB,BD]Fl7DGG67`iZc-Ti@9^r]DFli932/CX8/e=hT66:22#6;a%uC+2mQJ"
%]*]\#J(h(ue[\s;R"LAWYG2&?29U23>SaKX[BlnnZc%<`^Ik5aFu<T;O$8NNAMI^P^k7t;Cfab]%2sW=\T_K$Y8pe8%H0/>kXBqP
%[s'G?Bopr,$X^]m)t`IW3DI4jhD=1KGp@STOm.\/gK\r0C,^M(R\\27quf#UhJ9*Q,F%`<5rq768B4D_p<lG:-+i_rEqWLl'p!lq
%i>IQdUT>Znd;2:-\0]87E6!^E?Kko:iN#D[#X2`1,qLWS?I)bm#P<%?d-U6<Gm:k5@r=n37-1j:$<M2I[3bZhBtP&fhR$E=Q'#5m
%Uhl/J5YG8Hp+cHs06JIZ1/6,#j;iH<Zn'P9N\B`$s.)ctKa%$bf1E%8F^U7E=d&O[Q""j+I%^.YQ&dKIUC$MrO)2,IYbel]j%r%L
%'.ZR"MEc$mSkRmpln>[BmDQ3>&t^aCg:b!pf&nK<E#6U(9N\i0Ek$tM$2L;!%C(ls=ipQ-7iBI.[Kc[GU.dS.L\WIXn1`'`ms*`Y
%6n7RR);""1^WM.WPrXsM[.6tont.\R'&K&TDHBEe8=.N,DI+S"s-D=ao<5-hj0l`4Yd/hEX'[1T!)Oc#U&n.@<_DU)q%PJ37Jg1j
%J\t$b^Cp,?K8:o:b*E/o+ge%I)I#Ts2XBC.Y(Bb&1)RN###l"mX$q,lF40C@F=1MtO`mHeVN.V'RIY)fH9[6gi"H/LPdH5uK>*FS
%7:5^gZBFi1*U\PQjg>I$aJh33b<mPL,^,:El-R"->*c-0.n3/m;[-G?W7X5,D5jatk\3_o,#TZJ(:C-^/*_m^F,j"bA!>fF7@&q5
%C3L!<,!&$9BjRC+Qhk=CbDUrQEE_iHSQ4A&5`qq,.0%^Q^h;&^d.m0u')6%4-G8t>O<q8bgjgtV<475n38X9qq$o,<j[9OI,5j,)
%9.bM!a=>]L`0;gfZ:eUVKrRLB0bli"%Vk+bVI([:b&W#@V?SLJ;Ro,#;ag*^aMn^n&]3P[SMJ-nQfnm_@%jF>9%^>kVBrI.o$S^L
%L1lO0kuO5YN6.q*TU`\/UDC3A3)N^1kgG.KLbZgs)8`!gR]X=ERO\M:-FcTjd74=%<*GH'p/!;;BT_cL;D$cNp9Zq,MaG6#"4i9c
%f>oM^kdi!(lf$5/^!1G]_6*g*7_H8'JFp9Pcgm$RF\kR+BtmWC>jb_T)5Zm9@Mm;4.2[hn/$hCG5c'AOZn#^De[,B_\AQ(6a95]s
%(*0c\<gFL5k!!jj9Mkcsk+ncf/n263k<f`skjr?%PcAD2%Z\1nL'Z8b@uCbn8-?VS8b+Fu3KY/;Or%sWO<lOIKSW$Z#$JAM;.?<\
%A?q,!m?hD/?4n?r97uk0KB1*&$]GoU$=To$n%sO*_Xt'nWk:Gt.Y;MD1e\;P/pRhM<g+<#Y2(3d&'GgM7!\Tefd,Q.&'NB&'puDp
%jC+$"ITa69M3oXVbD54Kr3RJ*;]_6M1GOo_KGQa%nYpsgY+dRt:#=a9l3^*5`+<(lTWN(->HU5,,0f]Pc?ijK\>2bj=IS:(VhUbL
%U`s/Rasgf.5u;+ZPgr5#7-T5\@DL+*G9PTfDCPm')%r(*$02OL3[2"l=,N$c?C0F*?3phAG.=S]>Zs/^dHN\D0qq>%Kd(+':(J;b
%F,X[1kt5'HoAUFQ(C)sU0b@aEb3+U^L]%g,n\d!<QQNf4P$qmo=XPmS8"[0mAiPa@=;JSJrnD:#3KJ+AR`MogU37i[S#iV-TCkQ9
%YuK,11A9-R*/+`R0AjOc\>82"pSCd7imeOj&!J;%-h+f?ZRdDV<d,4\?(N3,/oue"\L'ERR_<fSd'?gc%YhJ%VqQQ1C&AG_Eu,I7
%Zpu,@"@*`Mgem5N)IiB!en\C7Ru".!eSJ&bZ4W"t*,6!;+aQgBNYlAsaKul_U=;WpA%ZBGRcpf.79"As%BZ_/@Le6B3B#5l<'qSI
%<bcH9ac4aVeu5<A=QE:^7&*`,&MZjlf@=htA3#Z".aZ^ZWE;e:YPPj"QfJb,6@4,C[-Hq6?5LdWk+N3gRPWWr3V[1Sj+?JU<&cup
%GY(o$=fT#s0YPDg;F*usDOI"?RAT1h3A9PbG=O]rZ)+>1H:asB2Q66r#+-5&dM>]ZCb`blQE^/Po#R3n7@T4!=VkL)iDu\gP4UU1
%?'<J<dCXQ>Cb8ic(i#Eu4O*\6hbKsI"AR/*B34QuV9Cho*R@/Qr/rSa,gmg4',h5%jN,lFM@ck,?1B)E=`$NgDJE$"a\eA,hVi.&
%T#8#g.GK]`kiD!6@Ta)PK*6t.NVUq;=srl&H(HF)U#nWn<Ek'miYCET44iRViuK%d?S5[Sn#4%OT6"fcrdn69[0r[UAl)8J__Hq9
%#s=4@%;aq6?9^+@ds_#1O+3%X>NO9&-bFm-im$e%0>H3=Ge_"BqXjY$^O,Y9#u3Yh/f$l++N06DP'!:sMb*pR#dJQ*8>leeir!GD
%$-$&*7jq.NQfP/!c#)*Yi^o!eVP93GfO3bVaJ')RTfIW(osCK7lrm+%*H`ts*3-c2FUn,"9FNZG)g/.4Mh0/>L)ofk.kB#_l;r58
%i&N[FY_%Sa(2_`RkGRdss7S+<oPPUEM(<_Ob.Hr'"\fc\jK37MWc],qOY@&@H:T&,p_tm_g7L,D*%V4p.-TdXgsOYOqRAGb*!r(K
%0;c&1<QBq?/n'Lo&.P(=iDL<i[t;,J>eo]Ynec+9A/H/Dpe(h;8:rn;YTaFE<%)/cmb1(@_L]Std%+:jTKC*1NlqLe%;qnE)g!Zs
%knWu6j#i_pdTr9E,2HihDR.k*X/Lpdr/?5M%e&CTU3Z+)f`3EO!"h^/5R9UP6T2i?&gO-%VbM(6'j-"in5;@`n,kD;Q<,S4?a%WH
%2L_$@!kkP@W0s]Yg)K><f?7r?CBh3nI9/19QOI+7B2k-?3dF:nMKj0cm.Hm^j"nYX;LKhq/fk%/09d46PB?r-0J$"tTO,ICd,#]g
%o0ZS"$\ZWK$m./Ko5_K'@h"/#C]mq-*Y)l,6gY)C-F$mRfATmlJ<2J9kcQ1ZkT\G(/Kuf&ZE"-RH6]XS@'MtT7gG\UN1e6-+>%7t
%ATTsi48A)'"pOF7PQa7%5n>R,9?Gm@7KB/6]QEi0UR3f]2,EL%l>,XO9TuWq(=FgrZMY8LCJF19+H0bl-ah-t]I]^IO/tI2IA/gD
%@Y,Pmg0Ujb";H#mO\%#u/T>OFIf,nC3W\hUFL03C@OKUPW;r2HAu7-ME(2sS5j53XAloVZ>FMD_'>DB%"VNW0MnLY,V7[j=&m>o"
%1aMG9"LWkpLgH?dU;[jTe"?kC,5TmZ%e)<Oal%bb?6P?R;-[[kU]Y-_EFr)h^aATAr,/1/!43u>%9A+P^hsr'cZR-O?-EV[6eNr\
%'Df498[*cEYq5<2EmW6F0Y>"%X&0Wfn"HE\2p:E0\1+`KjfiQ).L>JJjG[\J@6R')RM"":)9AnF=U5+dJC`F^edt:cDphG)aO;\`
%T/JRrH/3Aien"6gNReDV-GFi('d\`?L;34&MsK;39^.H&0)?"74rT7AZ,K!>85!6Sb*Ea)+]2]NML!'YkqNA[TE6oJ9L3Y:7)>ot
%f#9f[aqi/R>0p?F1X*di5NsWS=C!s1%`Ja-<G%5<XE7JWAOWd0/Mu6n`kn3^'R7KjH>0/=O=2./PfmSAfF%(ESfkJON4Pr8!kih_
%Z(h+_@0hZ=k#?E;s0P4B;@b:i_0X+t!5gNb2%0JWqFs-T`\Dkg#iiDk?/dK)o->e`]j1kCg'U:a3+5gHTbBu0?,uVoQI^:BBo^-!
%T]`Q*!a5pT7J%uYH<4Ef;(#+6:>PS::f;6h4i&<[i?\C<0eMZ_#WTjT3P[6aN0"`%9&>)81"83GU0n^"`k@\,mHp&qcNEIFi-WiQ
%qu_26W*9#+<rc$.Zl8=TTsq;rE&Zmb7K:/a:0_AK*%Pjqpe\>RPA4#jPbe5K#S(5oRCn[-&Bn_(7<06YhTTpN8"/SLaK5NAZ5dNA
%0/Vb,KcImU2,kg:Xs^;$.jO\`/3a=NUL?Qg&n$-^=M6_kDH(!aLC]J#D<\E,g:/K4iq3=fXB_Q*QG-/!U,2.5BOd_6g6-,\Ls9<`
%?X&/X3?gYchlZX9)'Q1$m@f>A&5u?,588$k5a'>afD'Of$Y2j4R6(&@n7$^ee'TJ/?J:@"(-7X6_2>a2k[k#a7H3$G]o"fn/Q@_4
%^tZiV+9SCK.FtRSlp@+7MZ/m[j:tNd7Mk-<W6,boTr+u6"B'*?kIZ51OT@,mJH-rh'\KZq\.bD;^p:5DcEp7'3Wb-Al48q7!JI<"
%L@lL?L7$0T*\`l?3MMJEoOBJR#`'Xmaec%XVCBAOK*S]=!%#3]hTI/QXVu84.Y<tD\KL;U#f8'#O^XA>Wlq-`Vp/t[?m"5Oo#$cl
%L]sPM#eR$W0"&`HMgB2U@42-n7n!ZD9*(*,%dGFEVg*r/?i_>R1BZ2U>Gr0'jZAk,]X2fH!E7@%jhO,</1Bb>#ibt71gpBRSBc_C
%nsLP<)'\q!&W2)S9:9Ra%&uX/e4YS2]SI7<%H3-^j(]d(RV27j<.3ur&A5cp-re%.3B.OR+X;BR/-%5/a9kFf.h..5M\#:q?t8aZ
%E`SLj/P7)l(X#oK"@cuT)T:hWf0T;Te.F]a7HBg\#`JfH19\mCr;$T46jG'D(lZOI=<L*_R[@TU!8aZF#+2/Pd>Nq%iI\=ukcRKM
%76#o3nn=B,?lS%B,0M2-Jsm0HI^N;pj<;#C_>u2WF9"Q3^)7AQPP_bf5](TsU;\q)>*d/e33Z/9JrhSs9doa+Hl7[31l*q9(<R7(
%ad0Z,EU&98,YaLC;@1;"Q*V%^QH(h\<!;58<XDF!]Xc*e>`JJ(_o5!MQ_&o`RppIoYRPUsh?nNu)Z3q!'LiPl4n?`>'q+8XNQFGi
%df$#r+^\G:(bgQ'M>C\kMK+-k-Y\D;49qC?k\1d-H7V;m$UukT7Em^RQiQmf&J:CQLYhn;4/EL"W<t)cOqf]LaFe)a7]#'S>AmpD
%-0T>^9^!.7m2@-XquG.1Erb-(G_\e>e[>.,OPokHTH%PeVYl?i?AhYsW!UDs'2_AXY@8i>(/YJ!WO;CsRj#>_Q*?"9"5*`l:"E=,
%MIMnrN'UCH#Q464E/-m#(sM)g<4^YU"YYfl@!a=,.<=,1cX7-Xd<L^6htlTLokcD2#Ma/(,K3(S-Sm2c=`baj7^S31N7j5#7^Ic%
%S98:u.4'X`*3s5h@?h=Nd7p)9XUX(,_*!90fA%=t59bGhd>Ec+';M$D(-"\R5uq\P_Jl+eIFe`4<5p%h-L`tAS<Dqh_KZEQqV#>.
%7T`WT+_(^S@(_e]aX/UXFS+"s>WpVo-&<M((bs"PNu3fm@^_FD6qE<I+M*;W7f9)+rWY`LY&;X7O-*/$A6nh$Y@,uf0:Ha#&>M,H
%HXc06(8gF.]IP]=jCq"!A?^uEA#9s'+_dFp6JF%T8c!.PHO9/78[lQ1Ak!Vj4MW_=#"IS541K%ZFhhIE/kIgloK:A9U?uma&EhFX
%8#mJrnj27m0Wp%7(!S9-bW$Uo<qm9E%tS"V^Ccp&WB.7(12R8!YIWTid![mbG&@=Q":#T*0't]Q^^tRHO;d2:@F3Tt(ANa*>K06(
%,VK4>UDCkG)2gY0GR`dg17Hdq04GsKregdlBOThYCJ1K'MX6_1X,YaJ?.4]p;.5mWRKHIhQ:O7W\4+YTpp@:K%hGA4V)pqi.[L9n
%>A"je/Qm6/J_)Qe't5kl+U^PMk[an,)9#&<8X'6MkZ>?^J="j+,iLPIfHSHF,/><1K6T/?KENiTe1ASW+`(74!lHie`0`.F%^n*0
%<Qf?mR6q*a"<O"j(u^U27P!7Wc]D/B>AB0lb!"+'jokrE&nT#DNBGVYAsaF([`=WKb`n=DO_6l-j'=c82`naDR"mt+*Kem(pJ2/:
%#AK;L52I*I;UImsUcT5:of<[$&F2.E?;G0[7o:oIq`(#!0ouUA!nh_Y:WS3Jh)^6!JZ_B.'V*R,LoI8A5iXGf2R+\Vd2XYZQOk;4
%g'h8G[7b#7(i#KZJ7^V@P10b_g-H`6@rW\H)Yatb!L`r(pg&\\+#P3r_7P8'+m>!3*77He%:9ZMd&<CgpP;W<R[50IZZalW<bc.J
%e[#+A/_T-'5$7i"i(@0L[a_"HU7koG3CK6B;D5"_E)0`]%ODhnER;k@_'mKC,&i.d+9Ri35$:f30m%@N?DlpLASdg%e6rNdm'QAl
%J\Vd9%bColL<SW!*1X+03K].#<D>d,Ij/6=TIGLI%Yl!\O2q<i@1[#f"8G\%rr\4QK``HUH%jpP[\qr\U![0I+B6X#)0(%:dcJaW
%ZX?YHa"I]ei84li,hOm*;30pg9,7qbg@\"]8EYYf+gh[HOSYVPYi3Bm"YhhjA2oN+<^:*`d"_3+ZO=hn1[C-jl8jklY:/?S)K!eg
%a%<[)CMFjJlT%$,/M^%5-rQCf5pBm?W=B[c0XHI8"Va!,=BrGss3UZR=_%NZR=7cP&/G[X']R'rTZKK%4*uVmCWXH_1%LeGY=qIs
%Ld"^-\DGlt-X&*J9n$J&&L"KL[7+Un'SL-l71D$$`4D)IFhm6G03%R74Ml]108k)m)+]EpGj2$)&C*pBLO^c6!),AMHJ2k+BPf=!
%?GTVM+0[eO>G`MpRR`!SV>H,cY-qj%B9F("A&&m;/6P_hEZijc2)8T9GhR!<n&4@B/jtRbL6Vs&0/jG^/r7LuMYgDe=]B<gQoBr`
%YX/YA5!nFR[P["tq]e34IONMD*JB3rXCM;,X:M/<Ob8DIL.*L'Ud1AD$&6/\@=Anj10Or7Tr!aE@Sr?SFp""?<Yc7FR^6Wt9/RVQ
%TcX(La]<q]'UAC5)j!?[#cKLW,qE)hOM?XZ5iea92U"RbF<jS,8JJ9LIjp2j@8`=0LoJPX;lO:ghJ2m63i$)'Z="oh-0pD&7UqD\
%DTgZoI*oh3]a0uJh[-=c&@>%uNJ&Tc>sItj>F8#+MZVor6iq)7@@;Y9-X%8<U7;>0#I^SH%ff=[*Eifs(1;b_Y(8KGH7+@D^+1^e
%jOj\?kVp'Qa`iZ>bV0^obDsAP\hI#K@">KU2"sAUTQ6ja63YJrW!`p9)U35[VYguTVV!"t?t`)?nh$.o`ggS`OsmO\#DH2U,a"0f
%\%md<Rc"Ao=lJV_1h6k1Es2$8@VM,ZEBoH<*FXTM^Re<6UoOrH4QO:nVAV;5O@R/lVB\eim[,d$K!E*)EYB&(a(nEu&hB&&ojnq\
%*LVQhciq+;(*rfH@UDtceJ?(DQB".L]u(b>HqP>WH'uW,a=tebml)+LqT0"46TLi/'*n]G6!u7.5,!V$h'R4ge0AcdnM]n?e-*:Q
%Zjakl7K=G4+17cZ/qkUUW(j6I+&CE#S^s2S@*b>SR(g,OmdXRto0DC\!1sgabA,*BAO""%n7otGq-s`QDm\o)+%4TG'GSi]oHUMJ
%>pWLU+p@V%DEtB<AkQBNR,NG@Y"(</FW4Puc)Aml:h:h#!C.Z;@\AbfkgV-:P@;?L3\$0J#'ton"#KU\iIp6Ke3,WF#Qg.ke+ueE
%?=4@u$_$%j,8&D@?S;j$J+!$F$h;=%nKm>l#*PXm1t76O*XL__hO")L@X0V_R;6.V9rH:8#(UaDOf.;#jqcrOKoe'spS+^`RefQH
%V.&Fm.'%4-MMe=fo$Ui7qKL2UQ<%gDbn=(Z/AsS0TO%l]LkSn$`I]C`@ML`I[p7h&?i'"KokcD2#Me\t)ekG;,'YA.09_NUa)XLO
%#n@^PMH8X^%TV]e(B6-/RKV)9A#sE+A4$g"H"dJ.,SD>^$]U%+^ko/LJq;5/%!a21N7]TMg#5eS/>.fl1$m$c>+jrJZ0nK)/)ol"
%o$)B]RbI0AK-9N?'aB].B@9tdoZdeb7oRgNq7)Y=!R]E\!Rd_HWt_;-o(\fbM.b2D5dh=o'[NER6^3i:&%!l/+_L##14bl(ft9LV
%f6aAO,dh42,*NZ8QR66Za]%?!/1upa%[AFF"_\8E&(A`'B3cR[Lsdn]'UiLf92DXfd$fn@",fL(bX9]P9uB(38Y>41$F:gm8"bO+
%LLf9qqs1N<%F$#niQKkE!7:;*]b1'K$!(d*N]3-'i-ooMmA6D(aT9h;Y[1:b[%MqK$"2sbD=Bh;Z[j5\ZW,kUZXkCd0b\fJ]*+jF
%JQXVXI2rdL+c^ifj-^=_=Mda3*1sDId<B8T*Q8dF"DC)p10^-TA=$nfdJ@MW&@@7ZLD372"`Q86g#8(g>F4kZGrl-3`KXDM&AX+U
%paCe!ls_t2fja6nm8.\6dIE>V!k1Dso+TKTemT^89(SB'Eq!\&16o1(+@X[=*KEEshFu8<5rLV!+G?9D$QqdSg,r0i(uRV@5d.<Z
%dNd[RB$-#pR@,*(cjqb/LQRo.#-d#qi#3q8UKn:9e/8W+J\Sbb8u,S`GRBmrJU.MH2)D=Ek4^E1DC/6g2oMtT.;O*<+khq,_Q[)u
%R+,cl1UJ3!MIIa(6p9C?5t.XP0gh!Rkb3shWn-c\i2+r!-aL;n.:3s95G#]86+jD:fOW/dKcR;ObiT$Q1EtElW%agZgc2Yp?/9-D
%F0nS'lfLU/WJ-.TBg^D8"MBH`P)]8pD&keSY!b8,W1QBl-pE0d)eRk.YFSYW,ngul4]_s7fk[qV[3nm4!*GUA(!TiH$bKKDAAqd(
%r$'"TQo(HZ@"Js5T<7;WV)sd^!eKN>JtJA%7+O%HgC:YM;N@WI'N]:'DmeSLjBa^V9O5#Y:YncE5;K#?'p&9<5b,nlA5Ed$&;`4L
%i#sb6d<*#S$`B+O2q%BXc9[elObp31il"Cg;,a_bh)";YBmk70Z^d=KeR3-V(b[]\i%=.c'?m120c2O6QJrSAeA\pq\r^A+ru]P8
%n=J%MN40EONsr08Hm#:;&orn)917-)9,jncCGqDqbRF6GJ,r^If!L2"LTZ.DA=*U05`r<UQM<FR_:N/4JBNLnVeOZh;=h'pe.>*,
%'lM*%?dS=L;s^4"_dWqhG+kc$TR"Z$;Xjc[o77LR&g:<O(L&Xm[-U\H10T%l3Zue.N6$U8LRcpAO'dELO>cCHm?!]m_umCiOt@Hg
%&:-,iK)/f)Z14]LI`;_KG@Ae7&,eo[A:0*.SL2?;q"`0E2T'uGGRE;:UiRg)-4%t65sr)>o:r!7&I?H&,4T>Tc2RdM*K&V)N*HVK
%/@$BW&B&+2`1k=t@'s,$BOF?1"(?G/KtVe.p]/#4nN$"-("0sQ=@jYV1pgs\!D)-R7_t%+\^_D#bIOJ]5#&$][+#:L)ZjMK$qonl
%NmbH@frnE)e<jj&)Rod_NB.AcIqCdS7=iqh/2Mi;5a<s6ag,:u\=eP\7$)t6NH:\7]UU%Xp^nip"B*q=!,W;cj#KQK_6m7o9*pDn
%?lRSVZFWi+U"&VP3%Prj*?RL0Fm5>;Bh^2UQ`LX`^*%pQTL)RG:kqbA]U?nBNBFe]:oe09J@K2[N#D$W8EsaV3oLf%V.QcCA;qWG
%6+N6/@mu?Ui%"q.F+BQe\]_QL'ar2Ob;(KOVY>'&62!L83eTb?j[J.d8=5195h$>f!])YFWM;j0,_-).4Bs>e=kT<saN.^8T`F)C
%ZkDm\a=t#@B2lQqB([ki5fQoO-I4t.[A)nb=C[_hAm&0Rb""2MbSYroN.$\C9[Ei3S2FZBIY_95!<q`!D'p+*lqk\06k=4U@"Ds-
%jfkXdd#^#Ol$&m-#V[E#G(Deb?'geJJu/tJPd2lcpl4E*@0&`%.,`llXP9\JUk-B\+@^4AGaRd_2":E1L](B;i9@s010eZBKV"1S
%6H:#s5-:R.PTIc\IGn]<[#o$m(TRV=9J)/ZW*LDA?4fQNF<=X7XjIBLB*//-PX?>+Je<o1p+YL>NFjmhU]GcTb;1IOc3nS3?jts\
%5o,"&>%>cI47^=NR:PZd&32CInM$,b(Fh<+=g,@m/Kgf(2CgHb[&@,c#qu-m<L\ZAO[tAF$5sn4ZY$U.82j%M,?jlJVBLo#!W>J]
%?8KHd&DT+`L_`^g"s(JtT>PdDXSBkoPop.j(RBdYbIYE?#eUNZ.>Z-'1qeC]'$AD^[%eElN\>^NW^DfGN]8_7"bC@2q*d*%&A^mu
%/&_3%Ncsk1(dB]gl1/l#+P)CF5'XA9B/egF@Dp0:0N9oViT4i7)qGSfHh9*6l5$d&J?f(3h.qm36[6*TiDd"@N-NE]GP=`pIAadg
%BmTfkh0ZI9/5<nSm]0\XH1pg0_lI_Up=63.OgXH:Y?u_XXkiX?-,7(jp@cUtgTSATLR^TBm=+tsh&lVDrd'.Lkrl*::pWnc'8q23
%0=3U`B2$Mi@C^`=g1"m2.7ZY&LqV;00d%uQL/E[]^lT>J_d"cTdDW[*&rI9).8?R3S?Yo3"bgP:V0#nei*aj'7M@cuoMU<^)(hWU
%"6j\s,q7?B)OH$,AH2Wp:I84'HA^/_3PrfbRmjt/qh4"WXC'sgOIH<ZTU"X=RL7+Q(<MdP!$;Yq8l=/?q/2R.aEuGVM:Q?u`lmap
%%6QU$g"5QdCEZ8nELOB"_5,JQ-K=@#+XIj42>$47QB\[4WiOBTHC-;bOhT?EKf^bF!"Xe2J.?1[4R:[P]%NInaO;&!h#Q/nEQ1Lk
%';7XInK@R[/._)We6+IW%L)8Sae1h/F>G^YkZsrPPELM$!EEC?ki.uD7@4a4&nBd4NH#0`L4XS\"=(,#pOEZ0\]/Y@2M;i8lcGh%
%-5<h#CeIs_kQl`+!&2W(+j:RV0)K<jU-?AqbhshRE.*ME!-W'A"sbF46_P_T9#m=peU#%4c'[KABe7]e9Ss#t=c9h7[#%o3JLhkl
%9PCW)6G4SV#"Ch?AC3_u'13SCcVYq54I6C\>O42P[oCO0-eQsO11D#PIROTEY7Gs]?8jPg7Y+D[_K`7s9$a6>T=+A2AcPa$(6E^U
%(b"#/M@^\h,^&hWIf$!6/p_5l<ic=:0!*r`HN5987*F9)M,,0D:38EIV17`4e\N@BTFC/[XG*%qm>,$l*6+L4Vae*1I\6l1*K^Q'
%kTYR$of@Aa-*h:&=*7A#4JWmJ+VL,992IuKhi>rUCC-Bl`j[0?;mH6Ee/rGVGAkl%;'$+Y]UjrK(1idj6Y5-.&kFT`=2Hn+L4\*D
%]N6tB,L<hI4eFGZQ^<,7%iHt]<5OF<lC'"L4AN)W7HJ#hS;NZMcN>gJ[1QpGE!QbQW\,p;k*?,d8aC4q+,6'i],j=1mjeD2o8n%c
%f$Z_R!0.s,q$0@,^qZ[F*[nroquOH&+qBa@T1<uBA5KQg3N[f9>u]3t:cs<j>_._:qR1/K-hsUXTLg%t#FqM?78(&Qn=i>b[Yn^m
%g8.Vf=nOh&Y!ieq12di6""KZi.2r<[!RXaT1)(R"A0^,.Jnl&lMs&T8[ZR^r["`1m*2Va&b&2q@@C.j&9q[2rKano7EM=r3N-]V%
%IX-_P[,q?t^cn(%U/>8EQN\!e)4)EM7n3(Wr9]qBgH*Mc5j#t9^-fjj^)&@V;Hgc/7I@n*X_oMh]M0j?=SS[e)YrSN]>0P_&3Ce8
%Lq<T49XG1uQB3<%%=K%[,Rbm/XCO`A[m<9nBdRnBMT$0u6lgOsW"sIVTId6hZE"=f-$&)n1F-]N4=YR&0N(`_.NusYNE5N[1+aT9
%e1b9%LZi:5COYEK6S:UE!nsA+>@^f'Hj.*kZFD)lXUA%UEu_S%5r6geW$8?bg^*"0pintuP^^#f35(8h,tapdX_p(()fPoSG4b*2
%.eSOoUD#>FfLj@<..\8GE8k9F!mUt<024jcdiA,bOBr@%,qpEEKGTPG/;"!6<T.Z4,nXUC,Y0n_8=>(`#()LLrJq/;aRlTl@Gog2
%%g/lUAS>#n72feq,h]H(faZ4:,Z)n!'nHK59&La#F]O\-UeZkR_T/Y3V$gD1$6l-CQRB#H&]`*aXVsNPYTSIq!7]TG>8G0\TOffS
%d6MK63%;MDAqU5a1[^r'n1l+dO23Mt$u!gLPnfJu2qhL_3t\-1A%#kLW!K]K*QN<\'o6E4Kgh;s,;b<D(RWkm,%C^4*(Z#R+r-u<
%=FB\F5U@a_B;*EKb^EFn[dN9f3GRIf.S`X94m>7$BpV8V5I!>mqC7-LAnj=c)3HoaXF8'^^t1rB+mLh!3D&Mm(8.1jmm8d<!Ubr9
%-EoVS3^ckJ/GF#j]OQ24#OWZNdm,49miu1!nZ/$/Z+r^6$]C_N6K79=pJ[sT7_X=MM0?Ng;s/2Xd:+Ol=ViYaCrj'f-A*K_8odp`
%.^N'J6B%R6M?F#5]pH-56)-A4`m2e[moE&f1gNLsC=<_Dm3&2;+BDpZ@F8&SaAOc`]SMeP:kcjJ&4f7#945JLIs\!",N)2N?e?D#
%"Kq)4#C@SVK-I$R`07:(>N6F#*C'l716LFJ]0\Gg7cm8tJFr+flp5.qLj"O#k`iNm"(#qAEC$]28"i28EcU[qQ@-<?$#IC9R.^nA
%(E(q=IlgB40;eZp+EP<aaK$-m7-(^(<[D[mgnO<u5fq:OQ%ju5((\ZkD"OV6fQBuH*"DIMU_mQM-6+g,k>;m]aXdK((gNoNBE4D4
%d:BG,Jo#b$V0OPUG<GJ@TctR`*QQMCbV%OfR+<q%<U9^o(U(BN7*:Y@1)`\)lc3Qp$VY6E%)<9A"6,(F%LFW[H!+O_'"Q$S3o3#6
%<@("+q?!a0kq.;1=O+(fW'IT-"42R?MX_&:+8G*4o']`op[P4Vd"[HgP$q4n4XF<9N-YpsIAW:R\/1*(GiKp$#V;?^>0B6u8Q1gD
%DP9()FeH*VM_bF@5_I^iH,m;=ctglhR/:(6_?XW71:34(]FE?GK)ito9cU!21+m*8%oX7[%EK;!pVNjD$e,4qHid>q;QU!,"e0UG
%I>a@ei"9G127BRm24f7Ir.pFkmSBIS0pN>s!U>_ks3-Ck.;7Z&)<5j;EZM+T>h*XK[gYo@1RctE3EOSOMB`n[G2H;Y&L2uu0S4k$
%<YG]gNj)/>_\hHQA'Vd#>R5<*d?dMkM[mKkB`KVb,T2iPN*SUd0+gGNcfFbq")WRD>(Z>]Q,ORL9`!-^_dZ(ir,e6>5fn;LE"k)P
%/R=qb!73L0$lI0#X0Z=m49WtY!Se#;5\l"I1bd"ui?RPj<,XeA=4d$Z<(ru3\4,Ei>/Eb_p7@UEkW+b0Y@oAZB%=+nX_Dq_DcW@U
%Nfa<W4I,!/XBBRCMb>EK"D6\@O!F'X:F-fOg19\I8#GS$5mqsjPW[?SQ/3H>PcUGiOAtN3ZqKW)#>FtD/3W9c#:dE8dRu`3Fqb47
%6&NWPK=VW=/:/M%"nM>J#cHb(k_iCt?')i)&lJU8,XaEr_uW(*\4OmpXM.J3B's59%*?Ik#3HN!hNF;eSsL4P?DHQfr,^:a29?"R
%":!+7!CN%%AoZTMc(n=?Wh&peFaV/).^%c/;l1VaC(Y//d99XLKa:9;Tlc+!eq53ikRb9sM\[c")2_=d1m&K>BN_6P:LbW)1!3c6
%*FiGiG(%gT;@=U%^J8.%(qaG!62#'GOe<Id73`A4QHmcQ-iQ[o1XucUV%oPk>\pf1J4Lnu1o'VipncS=Z'cjAAAVhe'i(\>d]m0,
%_TY^*$,3L-(9L:4ZpOULbT8gB/.b*Jrsp,(,SN#'=c^aj<`[3@X@)3ATH`\GX.QL"G]el4:!d39$gAa`E3_A3.<E<mVcV65%a5'$
%R[F!U5,f0G;e0IqTm+DY@Sdi35s3<f3$l?`S#5Ho(*(iT'b!'$0_PWFb:l1H[8ll#VFq`MI_hD''E60m;%[lbE9ZFObYbqLW_*Ck
%bYDMMr)b)3l3B*D.8&b<8g?*M>Ud$>E5?9@9,m^HX-V62VHTO26]"&r(.(%.m$RpaS6rCc@`DePrb3-PAIZW"Wi?KYe%u@PqZ)t6
%<X+h%,FjBQ/uH=t[\cg?Q1UuHG#Oqk$(erT=k`-Udq:B9718h#A.-I>m7ORIh+EQ_<<D+s(/L)S\MO)G%h9\4joh8(0&Nak6*J^o
%5bNSbcoXtT1:/kgLF\4U2-C()P_FKblP"a2-Yc!7dL>#',"j[hD\CjQN9CtnC"+EedId*.D&"62k184]5QVKS(PP.6YE]6&B6u3u
%B/;YUpu,a97gfo(hr-4NF/<W(!DZArXg9PMlNu7M@#lslTG#:TWEMGCXsE!1)+b:`Jf0iKFr`+%^?jd$N(u6^\6ek@/6@S<bD^Yt
%DI@d`H@QTOk\t7Q3'4q2_ue&Hj4,HmAqXu7-kep?.QuDm#`<_cT%2o[=mQt`gafZG_W59/kr?`AJjo]nl8Zp,9P.RCSCQE\3ETi5
%j&kW49XI8:PMMCH!NHmNrmbCDA$EI%#$#:$r)0-]?W%`rA"OKX0W-0C0m:]M$T"f^&R)XU@",/ugl0p,ai]_039Xik'oZKsC::&h
%bG&U7CUUkW59Y$)j(9rioLMs(>^Sto:]R_.;A$IXYYsFXg8j9ICL^!>a,PLH1M>?tSg4k$Op^D\7W=Nli7)4=98NYCpu\ZHN@CE/
%67TQsXcjFV<8ca=6^D6,`*!;4U3>k6Q%Xou;jB?QE.0$E&Y[C@q[sJ(E_Jo-R9-YX6P<ge@hN__K:oISh'.J_5)W#j4VGA)AA$Tg
%N>!*`[kR8(C4noV;3?7:nia=6&dB]P9LK*4!JHA>8@0.%=J9Kk0<H,o8Zf1DA^O[imEH?)9RCTndHbOMUmQ[iP/>+NM%Q0(Xm[%c
%B7kb,g1&rrplWCafKr2GB0=C$3u],J7#$7iA'#%2lI`IGm9ei_*XLF6,s4rg/f[t^+JDIX!LW*fX1lOO1J!?4Ng<OB`p:ok'Y'P3
%$(=_*%[7g:R8e)s(UjL:W3N\]oX0FX(I1B5-K/e+6rH:fO%I#;JVl2U')b)kN2kiN_0XY&<"lDf]gHufl'Cu>T#2:cN?FEF1FAdb
%*%bsG934ZP#WMU^J8g4)2o`;"muldN-7.]4la@n&Y:,-L_+NH"RtKEaHq%UMGCY7Z>=K9jTSA^Dd`!WKkk^lB\kJ/]OI<bMNglFr
%m1s9E-q8eM!iW]4$Oe(Y[e+ujVDL_HiRAM,,nj]*Msd;WS2>&';C@LBY'.N\F/mcjBcPp,C,l#-#0":a`P?=OJfMeO00'!YcO!>G
%AdM0;B2Zif=N+dYNKQ?%3*\"7>"1!%s0DQKjqMHj14ZB".:.tfGVG"2l<;URTf=/jP&YS1EA07ilatFihQ!g_D<SpC2V07W/E*N-
%X=QH*fu-`BTU>o58tpoB<\AA;n*,e!WPl(?6/kWESP"943Q.7?no0:'_oa![X2Q2r.sJM$NT\Tc_oKrBk&@tNYq-J"LEkm\Cqa-5
%E-sdqZHaC!%Lg9/\$Y*':2+Ep2&sV:CjmZ>kE(cDBgWdK-S<-+ka^VI.ThS:Ta]85^<mh9;mXF&:)Ha`&_+0,^2RUA/s^_"kT2Ng
%)#uD"E,LSur#&WsYqB)V)-8e=As(HsWPY'-)r2B335IHbj;LrV3)*Un.oA8Vdc23>Gi;+uDC#W[rXjuX[RB)7>N<M<kX=C&/7_ZC
%+:8@I'VjboU2]T\OAD_EKL:kWJU0Zs%W=4-FuYgUmV[g=kTo->ToVfoV?f]#&5iuB6b#Yf[ZXo&_AQ"%&%^^)L\F)DmS4;LJu)$X
%4#j4,;`Z-.Dae0pK,bjFP<b*42`UYh"RR.CE:d!qM*P\X#M57R^.cc/T\<"'km'"([taKsU':i+QG]j@>AA-F%>OrVTEaS(3$t:;
%2>GZV;hJkln!)ZtRD?3/bt,U[Tc@j]Ao;Q5?',&-S43jrkZ2`n[:R5cY0F%_1jX,t$e[=g*h3@=nA;[,i+V8U/V>.86j^q=)#W<&
%o"r*N>CLO#d6O-*5<)6B(:&>6r8>.ZS^id`+.N]B88e`!3(^LtagrjOE12oIo.**dpK1r(BdX1A@E^"1%6liJJk:CHq8#W2`Vfp#
%5r`%il^nVP3.P'V0/n?!2K8GM*h7S`Z"ePO%h<8sA</P;$+%q_Z?adoi(PCp-f"L5RE`8BdI$ki#lIL?\,>0EKlSfJr8;63\(T[E
%-f(s<L9L7-=KG'<2<_l]:+;b2L)uj]%][_W4ZFTMB)*B/3&/$SAa1d/30j[Ye.$S?a,O5p&N`3:5Whr!D>D#QguqRVIW.e(Gb?CS
%*ulk9)o(>:GMK5Lqir6CJKra/D#(mZ-R)gHq8#WGg$#Fc5IdT10(FlBglje.VSNf28Z`iUkeTh7`6H\U1KHNU:'WpAf"$L1`uB>D
%&/HNhpN:e$/!H@a_6q7o1Oa:[-N%cZi9SWK5I`nBi:G/'Y-1>;fD*26:ZuWQqPdE2e$V\8F0q$5%,m-dS6_*8B$c/d+R$n"C\6QG
%mA*9kkeUQm9Mq?%gaahL>NrtTZ*NM+9+MM79nDe/%h:-c,>apP*9U:=.(Z)WpFN2BI\d8SZ:io+5n?^3=X=KKl+o)sNH!\:_$L)m
%(:g,aj+8V<SFM6LZR#*#pqb?Eo5=&M,7Q>Kr*e[l-\GY]1.^tgPB<1^-Q@MR3dg!`lMTSo;Tm2n^0\D0#H*d*>i3g;:;SI9$.\ge
%8O'\Oo=ORG@g&%3d.kGF],4^3is4a"UC9#(IW3>u"\N"p_*MmID!NlA3#30.64\Na$n664[f#&seh'TX5r_XC$J>a&YuD;cR0ga8
%cn.demKDLk]BS&m#`!'r0]m74>*ZX!.goG^a!!ia]+]iZZ@"4kN$+Wi82Z]u+<8S3$MoK"*-@ao"5O:#8M=7^>7&.eJC@nm%YF2m
%4\]"(n@G!\\mYi!hi8\Y:(@cd[,s-R_3peu,2AT*]4;AqG%U7'Q0"\QKBK,Eg+tBA"YA_#$]Z5[U)Tod\`\3U35IB^9DFQ;#u8^c
%F`peBABcd`&qV@"_K=PX#O]Z,!CLMZ")$5LGMi22R<Hd`R5uEL.hIrKIc^`&F.a&oq7p.LT_hY*+#mGG];H)[Gide(@F0SCcJZ\K
%SIM)IN)>M9FPr!9(3sHn:H^Dhftd(Om=2Te-cbdrkKh5babEIfp.kQ\MD"b)CJ.Of@*>[3=d&o.j,J^r>C9S1](Js[eqVQkcd3,U
%48$(s#=,B<6;g0ar9^=3j,_Y6fFXph\FZQsaV(40JdNK#GZpn#;h;jWi/VJ?"]!3.3'Nl@*0qQ)F/B"O[G+:VcE0iE7FIU>*NQ/,
%4(A>)pd]PX2C<B.)n#pW0nH[p-88A4Acel%Sa&fMNWq#tR#/VhG:H]D3u'^n]Gj8sY4"'O+Tf^]ZJr/gJWhu,aeG=5S1b43Hp\(_
%U)os/SI1l6YYtmK;Lu0C8$&l\.YGMESB9%Zc3bYt%!3h8@SEq@M87498J:8_"AV=QBb3'43*A+A9%8^5).KCBl9sP5KF<^IAg223
%C/*Eg:'=>W=W.Sc,&emTi.F*%33<B'E1I4RFH3I&hsu;=K5DBbF<5DL[8HgE*cSD+ZDM3N"3t":-)+t<"SVmbM>#j.7glZT[liS`
%1+mG*!Cr&Mfl#mPGH<!@6*oMNk>So*(_8SlE[=n]H,*Q(UVR`+!N25\c=c/<LM<^aDf0g80la^AH)C[eUoFTm\Y0$/(r@ht5m,D6
%p#p7f!Jg&-?CNMW3*/iX63[t16iK$(e'8&U(33\uBYYX&M5d_+;Vkm;_@@K'>aYU6ChUW[9N%7$)K6TQXMO3Zi/UL3mYh;hhl4.<
%SHYP]Rk3(CY^eM_M7^!6(2tT\;<g1M3*R/>)cd_n2`=_%/Dtm\Ufn0BE-hK!#Tm+`E)u37$8rZ=oGG\."q.s$?<QBK"J!]#I&(b4
%UB_TQX(i@,kUNH1D^iJ)Lt?ZP.DYKMNg0L5!o,6d6f(^kZ^%Q#;h23.gHp#iE42E=I7jT9?ch&g9a$S\&qu.eQ3*Sb:,'\+Ee(L2
%(-@Wui8hR^da?8>NeMuhd,4n*IH8OC!mYkkbO_#&S<d+<q]NMLeZZe+]#atJRSMucCcK5PrTMKW,R6<a5>q4b%WD]--/Hfci"RXj
%qT]/fA2`6mG@gm-cub\#^g/<i)*HhLChm=^npmLg@a)goc9OVgJEf8T5R!D.Hp\$s[q;jj&:rlbFE2;U_!1ec97p%k/36]7SHp2o
%A%fg8#95nR+u=\,#FtXQ<P=q.>iXL14Q?H4Za+Rn*cQf;<u,bX%>[bs=hl3HX=+o:i(OttC@R#^S4Op=9e>3j`je#rB)uWH?+*GN
%Pm&/$<$ars/DuIel0dLd$TJ0Tb'lq<p<B%M2e]uE:*M='T`M&3WdNdJ"4$a=Jo.%b>cT_rGKih>Xr;FJB*)_o+,TbR'0%NPj^m4$
%JMScD(7reS%P1?Kqs-r6BMhgF%21^iR2=GB_!q]b5(7)F-d"s=i6DJN9LG7kSI(esV7j-B!f'b?rbS,3*(*D[h8'6>L^V=42GE$?
%&LGcf9]-a8DXBBM^mV+O6X#--P$M;_8d(1H-'(bZ"r"N/LB31b0S)$PO+;>M!d?1dm?sOlX/2cL[;;eWC&>me<[r(/W-HB6'fZl>
%\/Xgi$=!TaX81j,_9>+nljX[hF6e]L[[(bH%H?VOi8,>ClBVdII1\$A8\-*5Hg>QGJU;#pn<OD$SQ=DISI->pGHI^3;1Sgd.k\2o
%$CnfM(KN#)%R0iC%2CihGV-D1)cY`doN&MjW5-5!.a*"g%4Z>JE2?"dZLW/ciu[)SJ[5E:jk$%1*%Aq>fgVe?B-!DsIAR'9'q/#<
%(`,0TbICJN-NhCnAEA32ah[GX[,j=b3!<NFgG`Bq&9Jq]c3:@&^k+T`3%rgJR0t"m^G.Ya(HB"SR#Y6#E".qaPmSL&khHeZ:k>C\
%*4;1A*93]=G]YESB'(V9[o%_:*4cIr-?*M'B2[c6-?)/UjHTuj_$lkE)^96KPZg8A#TUZb`S$4W*'Cbm"rf%2EaY!#Ti6LU!$6L]
%$n?3%Yeif!$ClQVk6uQVEO5&qZJbjdGLNsb$_/pm-?XG`E3ujDE6AF1[A*-!ULe`3m#[!F2K1LW^2LmncKGfT_p/J3c\M&<q7uIo
%rpPG%5*ukN.?jBe2gjPDH$?>a0g9RD;!t)kI,NA,Tl_NbcS$TcY`Kpj^mS?(4"hKm30VKV`3J8'a(-ecSW8*U9F%Ot&4:O>)^]WX
%D"tfV)E!01/-+53r#6aQh(Sa!SbaFu&"FA,!;3gKi%ub=Gn3)XLcu\N#9Po3Cfm1:i<)T"e$U0Ci!crt"Kq?I]:O8QjTA"/d"F[i
%NbLoFIaEXUg65'V9*^J-29!;YJ[:'PcPnoa5(]U7SIQXcT]J5u^m0ZUoS=GIE-d>=Z6+2H%-,t+=#t<1js";T9*YqkSclZr%@l&N
%P?Bsd37*1J"*DEbNb1%k$oW)"eOi$Vft\UeQ=a6DAckPEFkiA<fYE@2H0-j*CuBP"7m>bS#4B"34fR\)%34i19X,NpDub)>Z@^0M
%^sPJHNsusdipbmD)I23V392c5JMS`dWFo2g#\LH6<[MeHV6Z,S1P%L>$#N<<%P0;h\FP0F@0q(Q!=&fGaXB-TJ4"`.&3EFu=nQ/#
%aoU@8YE(7=GdG(>"p6h=&[h!b%,d.g%G@oni+ULm0a;U;h8;f!4YqV@b`6s?SH'X1%a+aY"Q4tXl<!t'<,U(alL`sBR_TioY^aR$
%-5WhiJ"r$r<2H/`)gl:kBAITX_d4h*R8SNI,)Ueh#2Y-3BNsJ7q!?0rqoq:,RCZn0hoN*4OkYW_]*'E)*i.]WWn:Ik<mknEPEMf,
%I\T=\aueiH>7e$nP(#cE=W]gu^Yrn8M=MUu+0[3'N8M<REY*\p(=.PCZL`L^D2`+<hcRDPWH>H7C7C4oZ>\fb[<b=89h*=U<i0fJ
%2$5Xel'ifd;M37gheZo)LbX=a!>s0kqF1i%OY,%+,H5-VM8%s@"kV%E^7/'6DU<d+B"<T)Z@!n3=kR(nP&IGGZ*"euLf>MWUD&#b
%j';mGI)GF/b]Xj$hB]tSo^2;-Lb8Fa2XK;Q'b`\cKA7E0Qe4gkp4h/?9V\)V]b*4MqgGC9<ns"b]ed&TRe[PJg)DVSh]()%b`QDO
%cA('mbmXpfEc8<ADrps*V4h4O<D"3NDj3gEafjLV:oLT_2pC.RZ9[8],PGaA!X0+*f=T_E)B3.(L8TZh*\jAhN[I*&K@h-Q5;i%u
%fpgna12dB'2f\jqr6"A#PTPUY>@qdV.i.J^4fH&NO+Z&!9C7`3M]X[P]s5q@Y8LAUDlhH1U:8Y/3"]l2K@u_'NKi6TZT">PD$RI-
%=r9(6gtm-X)Hg3TDJu8j8-J/3hQSULW?9pPYWs%'hf=(m8?+\OgtmSD(Ee9]gD__JH*cK'<X@EWQ.qf']l/@=H^!2<)oMN*;DF#e
%,AZZ&["a_UWitdG1sJ?jah@KbM_?Tk2bbu,,&G?6!JG7e=ss&VN`aAO-22Si=\o1.+nm>4JWF@gmT*:/,2LASklr9j@S?.Ve:VZi
%\[R0c@HI46;plPk2cGkN/f`Bt9INd;!i,HY1kC#Rc-5#QUp0X/1OGm<R5m?r]fAp.p30WL]a9>?md8fdoL5$2AENU*`tH0-gtn'9
%8Q_t*i?o3phGS\6"K"dMC2Yr5%!tft1[qZF1M1Rfj`%WlbhfSmR>8+Wp86A9P"fH[#/3?g_9VE7\ET<;B?]3`oB-b9RD##67^I##
%m1&5UWQ.*.2]PMcB7noBkr>cMI\l`BN2+"3FD>^r2:G1b:#M49_hQm7,r%[)#.6Be6=g<ZC2^a&nc(2K2irL.L^1=H\q#7VL=mNJ
%,T>sdhE5Y[*CVNYBd%?3QIm.TP8YX9fUMBC[iJmX@W/"59ZcbAhIt;JYS2?cZId?]2T4IjoiOB(M7q<"TMl'"2Zn,m@,4NCbrQOT
%greucnUt"GAoBa,M,_)CZT%\]&t`UVh?`ddcr:KiDhd>?OM0WHB&"4P7"a6`aq49mQJ7lYOaD3f[l9SGcYhk<7LMN'%CJ,.Nk%eU
%kOupNkOL=J]pUJ?>W<u&-E<u2UQKnE^1*`>\Mm]V_K/*4bmE]*d]-X,LfS\:n%7HT])[j%Y(VE7e/F#M[l<mk'9."lp1B^6aVd.K
%2p$7[ZX6dODbW>&D<:Jg"'aPQm1$O(\#n@\Hc+bc@n<Nkee#5b/%%=Lj2t)7Anl8<'$RNIeDAF6BBj6pp:gF#T>"8($^JRDku_!m
%=Z'%K+;5B4s2'Gfdbu]m_]_Bc"`\&a!g+.,"G(-dLdO9BmN%1#\X$Ys)A];dGq_2k"7*J'dBJW40<@UX-s7T",8<3mOiS0ZJkYA<
%#[JY>*Y?O48Y'O,4q\,3=kt'Za,4OK8.(bA*1H7NKU*qY*-^b_Y$6=I0M"-CO'3>l+""V6Ynss"k^@^3.LT&k\I-+h<4&@OVA?Ne
%T(_Jl(C'H`@_2j.`bK'I9ME;r&<Z\1;stQO7+,PNI>+\=;<3u5%5#!r'%UQ6:Dc$:g4r2m:&sYgS/(An<#7&J@4WH=a_?iu^>dd(
%K]*DAXbcDaM.?s)S\!9JCo-E5[Y5_0g6(Sb^/4U;(p=9Q,`m`.QUOQ)K9m37.*Vr-c['Vm/fLSUc-Ut_qMEo\c.mWPk["Qd/oDeH
%7/C"nO[$AE"pHY&Dq##bDUntHQ(gka5"TgQT7X(b6!>aAZ6,%*W:AlqNb5s=!s![u/L&bZ.GVlC/[;q8!>\fp)N"l<0Ye05`bS'X
%4A\4nHAZ6%dn=+P&[6"MTe\_t`S-e5V&dmN2XAlP819DWrb.Mu+@lj4[Dm*aBRr1IrLSO<7O9ST=B<P*lYKe-L]ED-H\04Rqf\Yq
%#7S/S[:?Tm5_uPOp^&SVnS_AlJ6#1UQ4>IG!H0mEQNC*CS3$C4*::V=1lV)&YqCQ13)bPDV?\"S8DP#g,b)\ZQU]g.!CSr+EY?R&
%;]65T5AmY$@'dGV'1Ut]ZrjXPU)ljg#pnQ89iPc%L#qU!9tZq!i/)#B!F"E0UOauo!<ilV*#4QWNG8jJ'YppZa@P<>>X6:q@F*YF
%;+ZCQUE=8KhiNa@5(U+_o\+Sk(mI^dR)#X<"a_c#P0$:Y3)iXq"T5M.4<`o3QLG>ENmWt_^-f4Bnq1U+:nOMWM]W9@"a8g3>Trs;
%gd0Y.1OYe/D49-H8bq5j&fT*<9'E(;H4,4cBE=O3J\+I9BS"]R1ZnsD#ZnD0$FCSS$:J_s.KScp)S$haPqn/EYtF[&ab^'_#hJg(
%oUussFFt.MkeRQ*gSKf`QuNDr&JJfUar7Ei`X&Qma0-5#\,tW/]V_(2M&46lFR2cNO+;1;pAfh7>R*8F2g5K6"G;o)P%GCJj?\^/
%9JV59,_]n?_.]Mfa%dsJ_?6GTaNsE?=+SU=kXT[sI)76RaW<$-,@h2XY[PMZSq2jZ9:<Z0B^-qq<7\TIRU,?X2h;]fGVl4fqj@2V
%k^DAaDb_$HKh2T:Dc3u+m?\GW%!:S*h*;N+]n+t&GCl==iMjos(o90!.u"Hg+Tu8.O>oq`^aeQnB+-@4:aeK$Ud6e6)k0u."GpEG
%hAB@l3Rg>M@H.9:*#tX*GZM-F;W'0=j</X[8S&0.YY,'%ea?Bc>hCT;D"LstH"pS808H&O#_YV,/L0Kpk:gD%RsPX\:KM8nCbJRl
%CV^uODGCO8'<a]J6u:no$sNm@/@,d5<onVEguS`FBLu$Vls6D6TI&*!E7;&N_Qhc=]nUQbg(lf'<M,@M6I0n;[;H,1lH)ZC(Tt>]
%dP?C/<+K1e_RF3()jVk,noQL*=QBSY*(%D@gOC4q"W3,rVl4S]&p4k+c/(>[7!0.c+cJGgnh;t.hV)9H_%(?]MU2JmAe[M&[,V6B
%>HiN3i?+[7^[;/Wk_tH@p/!%l(^NT=?UcG`&7u+H2OX;+,dVi(B[2N3qTq]DEY.(S]a"WH!JsKP8-AV?kSA#C>pq$"-uq;,.j7H#
%+g);R.$d:TXb1!_-h?s"(Ik\%;G9+s4ljoRL1Y<t$Zh7MZ@LH3L?0GFVifmX<Yfla"IIUdR1E\s6@Kf@$^U0F\gE4Kl:4^=KU*%M
%&b"CX-^3[`E>qI$D2u(pZtO1-"b*Q)#^Y"#jpg#(nM&6DD@l&t';&EPBG#OX4*1P5/sH^D.ZMBK3Fkn&fs[NQf=draf<0!<LM]r*
%Lok.pVIoCk45K?aN4ip39Jj1)h-7F'U)2uIdaYPHENYf[?J33>13^<n.>1$3Zc()MMV<s$/l8Og&%(8J4g`o]MkUgq)?^[q75aIQ
%cRqR$F&Q<l14!`G1MLL#liL0g2+[q$M(I]G8[1`,MO^.`_"D+S:B9[7eE>d^Q/53?I-eE1;39%g`%=u1QgLY!l/iR87G%$fZ#)C+
%\+HfBO9;Y/D<D.`bQ>iA!>oTS4$:^V3i>PYfP$4k!;u=K2E1"BHGeOgSO_':R#f<,COGrP=cR/u3g1[NOrLD&Oi*AZ9A#2/T@AGC
%iQ\g5A18h[.COJ<@5+!!E#?++YM3?URF=28c&`:7fa-@Y!A2Mp6OWVg0JUllP_R3@$H>6ITttjH5j97NkO(ZU09E*f_l"a!PS3>X
%N&rDg'u8G*,KX5-i*Gir_Nj#lJ(7gIXV5OeV_Q"(?&Z09=<h$M$0AtI6pU0=FlNhbPS>=kPs)dECkAA1AApIp_E^":$5hKjKuHlE
%C$_R`-e#Su!lQ]JZoc(JJnf,%eOiWk'0(Bn[2$1+U+(V)I$GUP0U0[4Giq.QI@%YWnbRdJI14q0?p$G_8!3H@75k3E-I.g?9NjSd
%SL_:CU'.[Q`\\n7@pH?@U=-#/Z"$15I*#tK/4g#:F<B/3KAeVW/#Z=cX.VA;p^MrkH_eQiA(DC'@W(+>Jp"neNC.o(*<P'dU0*E_
%Ol;TD]tlVbYhH&K4Dr1J-O]1BOiC_9AJ;7%/D[*iYBU`C!b4E@.Q1==&/+1YJ9FHYL,Qr964>0EX-6TY_jG"%N'7m^Le,nFb$r"'
%fjknA5$6?n!MZj"+5.[VjQ!k0jbh=!2R1PtAk@&Z^[-B_Udb#fdG9RFd)Z9*6PL+EVZNAabQSCG^]MX5KE5]'J86(_9$nMUo0ZS"
%$\[dEBCFZFj#F2XiHI`S5P3,ea:fn"H*+0qP<deb5)6^sP!(&1`.S0nRj(>3E'R7*k1>*nf%ufpeJFrF!pX[-Np#'UAp%*[GOF7Q
%[6-7!TI`.;mWbsg+<_2l-1+?E^:RPR"u02CB,qg)&S^^\.V.k%q%G't*Hm"7i-@R@$#kf+8(^rM/-^WplA0";!oF@g9X:Y?SnQU6
%9?/=rVC!Ir@6Y;F(P[+f_1cTY[sHrm7P8)QKGIlog?"iX,^>g$LMd7K"BHB,*4R(p!"d&jJeJEM9-JOG@8,;(_ZVo"V,Lrn&gR[C
%e>1!),srTK%WTe0Vj`^7c3J(I!8@NCE1YU`n><XS8u(#lfHLW4a%GBHJ^-p&V$,H[kTEkNfTp5>kV%QbG'VruJrH&^aBoC,Kr-0,
%I!n)mp3M'9#^nQ\+g>,pkbC8Hf.m!G"Y`J0GCJYeVpcU!m\l.(=:$bJE"(aUcr#Qq"oB4'%9P2IMYD-tM,tSg#i.N1A(oqboAg.m
%@1*U+&[sX8N8A@KbWmq:!>%!X*NUEf((>f^i&kXuJIbAV;C-&d[DG\q58[NRTs*`d0An49i@`QO9bY,/CjjCU,JlEbg*J%tIac_:
%OL6HU/1:5m+eWHY'%Rn`\@piR=*,P[,r3(FkG?*?aOo7TA@<ejP4C+^g*[)iiDBgs!=4*`:]lcg5[<3h"t#mMFg203FHS0W;E2.s
%(hgJU:@n7ki`"r"B#QpSTqXk=K8CKMigtr:,fJ7HCGrXPFh\KOAJfd=nLd'5)=%=X&).sdKo;J&n>?'TWSJPLRaFjB_O#Tc6Z//r
%RJ1"-C]u,mAkaOE-J:]kK(CgN,IXSR@nIg?4n(+gX?$QbntkRa8ViAt9.t9Jl:lel_F5.8)G;;/$PO5id$+]L-ns,Ye[lR/7DZ"%
%)]P?S'>W]7:U4WP6b*@'X4IjH.s*]]Bn_J,FI0gIn`&NkBM0*oUbWU^GRF3`noBm!R_6loZ03K5D-PsmK$gA#\l/l)+cHh\B3*?)
%L@l`[$fKlTHm9l"hMF-_)Rs^NV&flM&#EA_i*Jb-/f$4DmsmN!3f5)[nZ,J9FfRKT@T&:K2r!s*ai;!#i4ufjq$+deOTgT]!#%K1
%-\jAj*JEq\M^6Zjkcn)UMDL7fVHKD]YCa`FJee).]G*[]>EBBK3:(b(fWoLn"0dr=[O+/6qaDg/F\&aK7#XYQo3:H@BdB`TL)m8(
%FDaUNs+H':&Y9qR]45ToHWncWSsIVH/jNmFjjkUEakS[*YUP-iTMFq"4oTS39TQZp.$=4R,$C9\o[r0QcA%M_.cDk>b2s&PW^8]U
%XqN)W%Ih9`@Y;-DX0r#J.oHW#IO]?UJ9)-!,0hVrRMTP'`01Bu#:kuTken&cbasng":B,KUbP,E&]qhNP;S4uA3GGfTo(?.PO,^@
%(-kOFX[W\;EM6nMX";IAQ#L[mG;Vu097W30\`s&gZ)&pu?QeWB/,7:5Qgc]#_!EK_C-u*Ib\Y0m97FH"Q_G4RC7`I0CAefn$1n5]
%hD>jO'Y6o86RGOV#n_hK;`N-f8>qfFQEqkjiE"Vgi<i:KMYV*:80N9`fd!@&_,5pq5s49H+U2[GY_6tAfuTC2A0MfH,`Xl(XJCq4
%1X75WP)4-L/#bZFL8/-Sp4ri*@16Dl9Y(D3"=K@PaeX/+d,)Fh'3)_--ZL4"+\g<.iCoBQ*e8@bBo!UD((X)\+oc(l*As0QQoH&'
%2&JgWqGZ7SX,!E@6.hd-mQ@c+N3FohBhaRZ?W)nG_0D_De9)t/_j24TA\'!h=1'-IcpqKF\kX6o8Qa(9F#<-WK3R(G3#jfTNGu%^
%kSC.SE66e+&Otmb_IAS%RXjk3VKY@#5TgOXXAA\+]GCY$Lc?G^7bf@7B!(G($me8+N>AD/dm>fU(DKS1Y>;.-JBN5TF@J[t5cTDY
%(,H*'afq:6W]im][jNX`JeLC9S-GuSX:n*!!%VK@ML*/8l0.8j6I:N-QD$)LFcCKnd*.WfF]0/rO]r;L0?3b-`g_S"c&uV%Y58<=
%F+:hYNYChH&ke9\eA+MX[n5Q]m6Is\(r=n`D[-p-A8U)o5Lo-69=-,[LeIq;U<"mXOC'3;JWAG`%IU0'>$TUf1=-FjhKt*A.a=6N
%\gZXErAQ,jS?k%^Xf(nXW;DJ4'G/,9bdbLN<TY.<M#\"cZiECdJGVg_9HDbQ+ZQ`GR0QqhT-7f/:$O%q=pW&_8ka*q+SQ0JTS%KO
%*7EKgE_P18`0QAW,#'d7kr^^X*$hs*kXHklC(N=br"Q+N#_)9u5^m]\/<rURN3j=pfa6+80(t9aI*;uS:Fhr?JJ[6F'16L9;?1=&
%;9WPBhJ/FAE5nl@[Z\6Yq*>W!)D!SAA>X.EfZ_VdjjUK+Fut\mnZe<1IG?*3S7hmj%4mlZ:5P.R"CcFqb-kq4X?,]o?j>Prb'-3u
%OEj<UGCr6=K*Q+n6VQ2V>Uq)dA!L@NS((>d8*5bV:%@:=Bgc#Y^BaId'U/W@[W2OtAs=R7mq,!"/.SB)6%fYd=c[nG1X3L>-4I&>
%6ug8[1@*?jAH5>j5D>rs&`i80:qQ?5jp>*0=sXW5mfMP*76R\kC3lRSQ3/NlV=;d:YQr9^>qmX5X>j6i1h'eOb"J%1Z8*673.@(s
%7&/fH0]7c)`ukE<ZMu>=*p^`bF077?%8=K*@bD'QZiQ7k]R@Ypg)hq$(K(rn?)G7jKYnWKME&0c>O"$SV,9EBC/!\N5n\-$A4@W@
%=umhNX)8N[X5FIX#CtFK7PaV/fS(J$cVaumq7ui*-T1(cJ0:=$,_ds>XcOh,3<<[kG=\faBmpd.1pB^]\r>3_%5$4-EaR/q1=&9R
%!q@0:CU(pJNe3dq!7XeL9UUNs$8ld1"c=%u3<A._iPK(C-+la0:`n]>dA*jk^n/#A&j1DGKf_U&&[mm>@P89[<c\+aO'Q/HPDC)N
%a(Zm:>"ghk&3+SR65%3d3A#+jU&r-Zbd'!b9-U]QE+V,%TgnWcO?HFDgn'Tb8K?+La.WmDEtW]g\6ku6<miot?-nlF92Gf:,YN*,
%6P;7e8'3Fo'-g^fH)]<Je4ME^\SZ:P_<<6:"VXBmWQp-G&T/X\R;WA_,/J^SGXtKb$3V@;NGVrLD5.,:J@1(RQWd@T+@i04R$tGq
%h[jZKY/9eY=.,GX'.&LU1V!K/0[tOjEI/<(M1OB,=%+J\>g\RR"n3N7=ZNKj.5ju&r6^VqTK=`,+56@[<P[]:Prh7s`<c#+e"qmN
%.Ll^R^$p79O+8>nisVD$>L%#gpp?t4&h$$3&>"FT8Zo(p9!F-b"u]R0;3s*Op$kn4k=EtV8rb>/VuW3Y?V9Lf5p/HTU-.CL-2IU@
%IPMmSHQ^qVqgg4SoNe,';_E1%UdRp=J2bB0mF@%@Z\A^XqFOH+<*H(+d&4s8,`[!C5]JnW$;i%4Pkrj(C.0-:Cd,WKj;R?:a,Q[=
%`(Dh+o1-M,?"tgGK]qNKkVf!-:QRA"2@(K*N&933mh?BYc_=Vp;Z<Nfnke;i'E]=AG`Ik[9_C[8<+%,/?L9SJ)FpQjIOPltQH(].
%PT!-#6">2RjV95PWB^6I#mN-C&47V9JqQcX0Wgl%A1lPEWYcn@A"H%,!kj+l-C6t+QrSd'DAZ\eGi>i,%ai8SR4#X34s@NuBQEZ.
%au:k)!5T$a"2@GIO!@?I$5HlE1/o*fX6*hSB+2-AA4+_OK4Cu[jDd`SH:%PMe5YMeoM3\&-W7G3UIkORnlQj\B*e?ucrcp&"dbI`
%XYJoSX+3lHVQsll>$rWe4T<.hC9,<%XLXM(_U[`bG&icB'I'*NVJF*t^ne[#%M$.E>05NN_+_?R/n!D_8<JR8QWY9;Rm*s70fW/Y
%))<9DE3bUoRlRDQHMp_[f.beXDA*.pkUNBLLu>]_#/8L@J1,)R1r3g"h[m+@o>Ep]=;471@90,l7S4.=WHelq+^R^*1&*\9fYAG=
%)GR/=T$T]ZP>3lj]b68.EL_ldOOa,nC"#mA#!k\@!Iu[jnfY>R3<5P!bD,P?;QCY%Urs1T-mZt:71%@upQ]<k!V'1JQ/Q:;$qqeS
%'f6S6e8T_dX/+9n9\)d#U9@'JI:52DUfn(Fg;&u5kEu#JBENL="-Y#m8^Qub<@fhVfLu&h6Nn;,8KT8LB7U0*;O?Y<NKi%Q"Gq[^
%$-30t.MBZH$7o;8$K$kK'p:!M3/\ZI!*!U_Nu]>cR3lah3sLP;)Ii0`?td`l"uK5-NFI_"8E)>NGXJNN'p@L6%7XeI-:.M0>&Boi
%d"lBbq]B11#H\]A"KXk+$Y'<Ds0VDl$m,P>6&uV)60q_iHNo.CXRA_0onQ:`O.dmsS1P63..m`H[&lu%>Y"u7jh6h'+6Y8GB\Z+s
%]Z3<89Pq=i_Tu^p][H?Lfs-td`ZiS"Jf'^2"!WcFe)ER3@>JYR?6ITq`1D7>"dg>V?/VhB8u]LI.L<".YGC(mJ](/H.nMs,>lqJq
%6f&^:$#3.C@W5pf-!lh`PTGIT!7>p,cQMK(giCI\kM4O8X;_Q[W]!F#!O5XD9T$rQCaYZA7^u]r97#`:fNU-!Lck_X!/?d-GXi-^
%,2c.\*TG;Y)&]r)eSE4Ld(g[?eZYCWlTMr]6+pWIVajgd8*4;:$*amqc_hnOj7:![:dd`lgnN5b=h)81@KJ4J72u#I$#eZ6[538,
%[MphS_=S,r&jm.;'W)nB3WLJco&JjI7("::6-R0Oe-)nhgG*G/Cc8T,_sEJW+mKn8_2QSQW>HFR%o@2rj.0FH0dqL\n1H#<aX"QY
%Os_th%F":tHmIt`=[`Yk@cS1R$6eYm([-S:Pim`tEW'G[rBks&(*Sqm$:oj-)fX?aHY)(e8OTXF%uMQ+57D:<=]7fL?JK73/Bf/o
%(PbU4hF\?A'XE,5Ea)%#'DA"Mc5[J+/0W1UR9c+QA$Up>N5B+VBQ8o6.\k;C?c(-("VN8lLc*\L!<<2?E,YhS;)miT(mBa^G;;Yo
%ZYU1%*C3mlc'C5](fNbt1kLoE&<_]8Bn]?NiI+6&Yp2J%W=ZfEVfj;@S1U8#,-d$Q8QJ_[HAZW.OsG=7jqg%`3sG!t@l,I4V6kq'
%7"5QVdNjK.`-qlU.\:iVq(%)X_WFn7^fVUe=\V<hWZY;Q!(9O@p)t;]73ao`3(.*Q:tSPlHtA5^<a,TqJ=DiIQV!=aaZ<+)%<,>[
%j>tt#_L.,;q5Id<"7]tjUVoSJah%ZfMn\R$?ftQ@^I/fAncFFn!<:,n%7)uk,@O>Oah/uo@c_le=@agtkqp4)7h_!0MAHo/2hfQ#
%<U:6\:BC_-CID6WO[M22R[R-79!DI&gfg!dF'b-R'bZ*1&bjn@cRVR&R4NL#mYLARl=J/dbk`OQ@tL_He;Z!IW+//i@7&)!c'=C5
%MB5H/!Sel\8&,ou'hb7NChl\B,0V.oF9sV?8iCFKW+9[_M)W[e-j>>+5^1;u_a5,Z5A(-0K08]1q[mWRSfmE5&d36+(QAKIlU`2e
%)p&101OJ+;!6D+C(==V[JQ8j1KZ,2#\ZBbRoRJ'oW,p/"5t#O+Mjd@2=SNE)&E,\VkLWaJMC:BBA^t#up^;WpJ;Qo"f?S2[9=1$/
%W.eWU@K'Fs=9)e;g=U.o(4M,L>lap^'b2Jp<ru/Kd#et=dLm?,`c!&_-=%Q%Ul):80IjB68>q@e!XG/p32&"`V,c;R7$OGh0+q:?
%d_h%]1GV4OOb[S2XUc9(VP6^[9G0si"?2t1!.$9fE`(FT$+t/;%&fjrjb2PPE'XWO]iABIKG;6ZXOH87Op>IYpiE/9+;Y2N:f(:5
%_-3N/n?i+V="XQW`E!Q2)2uDr6s<,Z0Ctr0F6bjTU)&J\CkOGInH54&,eQI4%PC`A)6?B_XVGeD86O+99]rQDnE!fR=MIF/&lZD&
%3?8->0HT9q[Deu'N[(AlLCLtC,_Z5(MgukY,d>5<9A)uZ2J-GY\rm)O8Iu^`[CE$%NJr7m$s54'</6Hg^*D<`dWnL)%:HGtGlfN[
%'Z2$qY1b:YA*A.d'<[FqTNeo7$-j(d2H`=TZ<aXgN1bps%S8AD[Q(X=crn38VoK=HHo4KM!;X90YdLF@LP(U%jIm<U9i\o&;<@om
%L9)d]"g^cmI;Z^goE@\>;l.tN4;n5/\/[bg%]':./CpUaU9PRd@-c6'GTB(b:T-+[$OI/6h^Htk_8)8]S>$7sk4B7W54Vn5#RqM6
%gML>c-qR:LANYM3$A*o'57Lf[egNEiX9("]@\WD>LiRrJC5GpV=;W<C(Xtn,]tcZP0GMspfF58AOhX:U=#IJ7U.PW5$(A`'3Xl^r
%A&"65M$(s),OS?ce/^jl,dP2&!YbWNGW]E)X"hTqG#'i&'<oII"ZeA7fFcFKQh%R`FG$/"OmL#LXi+m+%7$`?Erb.*<bp2XqEMn,
%G0iF\Jn`AD/_I?#\Ia;".p7nbhotQ+4s^"2[s#T6A(I(?5A7no&_l6i_?Lgl!`!PVCD;Yrp$oc_'!t4s%umIX''1l+ZC$TI:,IRa
%+gJtcW2#\],F/IJ'-M!ddON=`KRn4X+p&`lS,/`q3EKW+2gSkg)$@G]=GHi(6S&O6+mA;%Xr(X+i2f:7M_0U\KH<R0U0aH+0XJR]
%[Xs\cpnhJ=I>[)8k.Qh3BUt@q;Za;5(kr_=K,RPs!jnsbXca\i7+HmbMJtFm9,Js1oqs2mCLmEYip]5nIAQh#U_(o#b+?(pO7JkH
%Mnh'X5m%H2%e;#Ok.,X:]\6k>ZC@fd+@$aF6Cd[q)4fP/&"6tEZ_9Fb,8`-\KP/ot@nK9rMCc1CAOE`=VZGMe+[KfY@OK`BNADgq
%>k%le<C$Do^`h]$XDh[OGff&VLI7,ZW(CZ;qh-%X\llS%cne9f;]iue#rn."I0$gfA)=aK%pr^j"Q@CO^3`_CYm^^8c#Ar"'7o@!
%^aARSh.e31bG.)JAHiM-TIYZa5d]uiOI8eL#KZ5I1"@1)rMa6n"&tY&M.HqOAmd_*C/Z7#:qUG!"5;1uQ1Rh&I!5.?L)$e"A9>#!
%o_umQNsbJ4$S?tk]MmdlEDb#2k"-^INoUCNH/TdNN/7)n"U9+$`Bj<T3]FRf:`.9]i<r-`X9><<UG/e]1:P\7+Gl,7ed-VDqaU@;
%kk;9=m0u_2.126?`?Bt,9V`he#t6b0+IV.f;Q40.)*VXX:6)1WXYWXUSsj>HCBh_^MDkp05nNl_7^E5ZM**Fk&dLGA,45S3OVtIq
%10j,V2fVI#'Ek#Z%LKmbo9'o'D!?J6,V.nJ7q3s!_:>,'W$3"aAV!WN8e3(+;0)<"I$dSB8/as44haMK5rtnT[:'8@bm0">'!rRQ
%`6^3S`=Rg(;?+in`=?>9S5J'9Qip]qOCCV"JV:HX_^pTPl>FR=,GGO_STkh4#?dG\Ab/M'Q;']);U$#;ltEI+&ddK[YhTs+#sscN
%6)]HO*<;?m3[)1pCB`PK3CVB6eXGh1Li)eYGj$=Xce):/;.u4"9a>H,Pla6(>GITsFOVIm7j-kf'D%$I8JJB]8>1a+9s>CqEJ)M&
%T*X`84bK&RQN!^#3g0<e=ohF[@l/:2A[DT[3B61)po)UG"fE+78->PuKif%['U:?RCmjA58C;&R2!0XUnjl<>h%q$('d:^)O]P[o
%^mB8.o$U`H/FS*,6c0.1:ln3jB$5$_<FAq>l3DPrioA%4TiM+2QFDm"PS6F(*7b7o0kU5!!IYUbJIDaab2h');fM>>`)/Y:;N&28
%40'cEXN"^<3A8go`!n]B7,1B4!AiWc30sP4br0$7\p(lTaA:cDK?im,,RG+7.piKr[[4K):,0`3EFSMneTb4p>U2&"g61D3"V"/;
%Wj*cY*Sp]c[:2`U,]LaYhnJ,n7%HF;.;kOS:'a=[K,%oH_UTkkR?:FId07=p$W<\9!uMY"PD.JY@I8gdT.qV0TKSR4`f^G^"D(Ef
%#'EeiHp`RR%%1Aq2:g"t:rc1A,?a]`fgQK%^>Z"-GWfJVqm'#;.K_2^U7cjkUm9Br%M3N>85=BY/62Wtel@rVI)atfKsQmU:Y$B(
%d_lV+r-'NUAR(C;XBCi(b"Y[!S)ArWe_2@n<\(CtbZBqt!ei+9;6a*#,XjN_jo4McZ0k&G''5W[@2@HE-qu77/S._p&5(:TG`/Bi
%6U:`54]4hgn8B#L0,]>6pCCq[ZGT"<P*;mfWIebpS(.?->jJI2l/ZB[?qMU=#<!Dk&eJtoif,1U(c!?dAcpYt'ensV,=oBpCH9Os
%>>R@GR*/,Znsnecl3+_j(sL83/fRXi#b#!QW0((,]Fb.GM+O]d8C("%%:>g=;YVMp(jT`;iTGKHgAo^>$o+^J&-*4S08THolFmPW
%8=3X1AiTf>@@[gIftFT.(JZa7BU>*<Pei[ed1r$0r$m((X^oYt&(rqp`n6^c,kW16b.So\AT1KmVfbP7^I7Dlj\>l3D%Ie]%_I@+
%>8u0@H'!P?!:hKA(hmto3B_^]4RCCmBX>!N&b&0t16*ocFQ+]+0WU:WdM4:L0qoKGMS`7\*-jA?88!YZ*7&^tb-NX]0,oim;[n*a
%9KMD@Ku".*9b`Kf)NW+R0GM*#C)2qJPK,'@Vqe(%@j:;*S<T/8cbQQc@XX!4@^N11M5nQ@$,_k/Eg`7a3\Gq(@-GF_iW,79JfCd)
%dP*H<&\A0p$c]%$X3t9j1_Pa?/(*r:_1U6A`/Q31[E;2l*<W6p(Eu!$YeZ>-2!Z'rZue]-lB;.N!oP4s)'mAKK@r#L:mkPG#l$nM
%^H*oDp_osW`$M6EU(PUH!I_?7<#`X*)6JX(3"Pg7cjnRfL^:9B6VjBu)-_n_$$ud&&fDa&*@URcb:(K/?>6K[cI(n]7VH9W\"'*b
%#aco@^ZB?aWj_K17f4hDqD!,Vo7t;:2[PT[ng:'/aHb>'-NPZRe]h3.f1M$X0(ViHc9I3PKsaOK'9\M;bnGi-@n;5[QqmRHWIb@0
%e:<cj;t*G:S8Eo*Zk:AdmE/HIjl!mB]c'6Za=`$s*a=d3P#NBXW2@q)F-%B;!#QsJ%6Ph8#:cn^M>ml$-BJhN13hkf')$F*CfWr;
%=CHj%OW>7==@a;1oO^^+PjD>cPUZ=(,6=ZO]N_*U+FJ3,a@lhu7Gs]0T10]biFrnZ>56$&ai#P:5;N'!581,+Pc-MBcHX]NdfQ'9
%fN>%Yh)h2eY8F'-R#q7Z%LHm\`<+."Q&=R8R0F;=dco2#:Z8n:86UO'5\T(0m,\K6$.tD?)n>&J7OOmg883cg!-hGo49DuP5i0%.
%:LK8g\YVXq>SNB+)2##$cB=iO<OPnZ.N&TA^k^Qb)J.o2@`12U/j[G$8bC]$Bd*+7bllr@BK/!YlUi[4)G&LahlcqmP=2F&q@,t8
%fbR1A<]bX-6b9ITH&`IV7)=sB$HLjhZ#C[^33j9$Z%=fVihA+o7j+4Fqt#csLRPh*LermO_7+uY8`"pd;g>:/dD03mE\0@VCW5X/
%SAL0heNn'42O0AM"n-f$@dtl-16Bl3,JQX4/:7pi1/QWa(e:tHUE\U70BGJTcTi]^2CJ'r!%p[FBprqP#WJ1f;KIn$Dr9KNW"LIe
%Ep*X[aKQLHmue!"^W>*lP<^*\EK"klB%p%#E=(:D7$H2ZiD/EMF>AEb_DCGl-m1G[?X[b<iCXde):+VpGWAjuVn?LFBr(eH'86rT
%1p7*\*?N-qKs=AW5?&t&.81u(:0&kj5a%QA;q(C5'U$!L.+/r(mNM3TXc#YIfmbGP4Pp"WMbKpFpj*U!GEl'cGe]6'e<<'*`g&Rd
%1@Z"#)0^M7&i7JW$'MR_[itpST/"fPEs,ru1mn<4b,OEG_/4nQQ6oh8D3V-[[[]eYRX(l-?pKn+2W9p/+H?0%q,*^s-q-T"Jm`;g
%hF"B[PZ.g\$V"n%T\*\GoOG6EG\a6U+[g2j+)NN)U?W+O>t6-2FTT-1OMb1m;$_.r#uG-L'GP(21TLqA'0/i^\e9b(,`HXamAc!9
%QFTKK*Nj?Q3K9F+K-Q2[\.!LOmam9K($7Q/:;X]GltDBkX=FU,Z)#8\MH8Q^/^oS7Vi<Np0T'OG=YGUbk^atR)R,_^9H(*J!3(YU
%bF0-]a;&=,Ssbr`l:)D()#A>B%^DHcBdAJ)3YBsQL<t(J,AUKh)`9UV25ro0.F(3!lq/oBc[,![/NLoE1Ra?>/TE[.cZ7fThMe["
%(8hMX=mH7&l%S18.`j'3@q7>:N_E$35uh""CSNUi@tgV=/ig:'T8aIE!=T),Brpes1\pTU)'@8NLq8/>KG%^]M/kiA#ViW=;Mba)
%O#eQ_i.BN)3$sS$#oOIM2O94U=D]A%&0^._$qH9s@QtZl2;T'H"cR%7TVIED0HV2\A^D^n,iC4fh1E3s/'p&gfI^58Q1:+&mgK1d
%Vs&K'?&/*tP08/9AJ/&h6!:M'+bbK#VZ9qR[6oBpW,N^S!4E"(*?(j'$'?5dF(j61,H"ku"$BZ3I8VI\dP@%(B\WlJ.C0^F<.%lP
%M$3F&R".LSf7`](b)=DW9h&u]gD(&I,&8'TqE>2E6.RdR1pOg[>a_XgkuIeD#e52SesKW+D*07Z?l=2/^n)/&hKKTI=2(t@C.*<5
%U'H>+Yu,8/qZ)0M*n8ZY4B8s*)2pth,-G?p.Tf9Tn<H;[0b$n".9Nl$3<%.HC?:u56'$mlK'PT$HJqJ39-gT;kYgpti.`#JPl_:+
%j/(;EW.h#jq[WF"Wi^iXW/cg^>!jdln"'6e&o0F&qF+KVYf%K?N^OTdG9*6!/D5-^^.1LP&f)bG/$@ITU!3YFaXZ?sR,3GRgNZlQ
%YV^q\*/J=meg$`VGi.FR762A"3m!tl&3R(&k:"0&r\Q$m.QAXZ1QRN2XBpNPd1uV3?E&XW!<j[:HQ$C1]md=#VW8d!MEiX?Q#)>V
%pf2D?(e$\['I*'X[Sl4bG+7@0iE)[R#0s3Ln$F'j$B5e2)BA&VZ3]S9).#T_AVe//8dq#]e!838>q9V>">%un-?W`U9HKOP1f*6e
%QFb$B_(TR8H_n3'K2OrBG]mn6q2.%(i,[(El'b3M!FJGD3VPWQ#k:J4SJm?0rDNLA,qkNDN9APP8=L'5"47MVMX1M"5V'/c4H@\l
%R02GS5U)j_jQ8:&^=u6q51)%UQVL]0#RqQ'l%6hcbUfbO:2nEK&og_T4q8Od$_"NF+9:=dW#fXZBV@/N3,Omq3L([:2J'ue_kM*b
%FHUAVJXR]8;39t^&rhK;U!n\$[4*C)`&/a6%3s@&A-?^;AElmiE1ap9inG'EFVW(3f63W/#tU^k#pcJaC&oU`KY]I5T&j^a(kM\n
%+;$GA$k&U4]dQOR\-(eUiTpP`J_>42O9F8DlPk=&&gNA)3d*uS9UT4<g,51a,!c=\+AG(BW;,^)F'F_-TV*j"M[Ak=.$5MZ+%N`X
%aa?>oB`Wks+OR&d9F[jU-_W!)DM+2kCNVRPJ]Jg/g%bK@4;M(l6:c@h#]/?i?V:BEg,hd/DHZ*qT0,^M80i`4%4B!16&$7MOV'rL
%%O$+i`*qF-h0QFC^R_o>lG+-4-<r6uoHE0]o-PqfI1S0XdrH+EP#k%&>@'AtM,$.[[R-YG)-SDIKrO,?6-]Ol#VQ[$DrQ`k(9<X.
%C*H[:in-V2TYI:#k!]t4AA[HI>:oEE(&N=D'"H1,o$4(W,TDlHVo#N@PYm]pK9a)HKI=X?_APt_=N9a<$A';b1Es]DoK>R(P7^CR
%I2lO%,f*lc!G\D1j0Y1^1Am`;6),"]YuPO_U0IiW-NnYa^-?]c\'/Q,-nbG_\Bra`ord0OW8;H0hJ2%J"1JVB9=C+u,o?^KFTMmW
%E'^lW/o(ls,XT1RGH%bP):sUsZ`VSJ>SJ,UE_$d/7^/6'^+d>&1Eao`5lq4s(h4!T+V0uFa"$#8U^J#nmOpl[-7KZ5:Ofo@,:;0E
%=?PV_]0rq?==k[eaI#Os&'alqr@.'!=GCUUI#NbQLpe/Q_S=T=&5E]6?f&Z9YJuBt<GW5giAD76l&iT'6Y(d.*%/s[BK>VbX[G'`
%,$HgTU"&*Ue"RWc\0/<0iYmpA1r0/HS5+?m6;oPa:,;)?$sBkig8(f@?DtmWORlRFD#-q"E[YGE_+QJK^(Lo\.cAK`RdJTMm8=R=
%.][^U/h#8[_nKOr4-^40S?D[`&;YGVGY+hcH**PfKj+,eZZaoXgBPrL.qD-/G_[?\R4m>W`GB.t0EB'?VG!Ag[(I]38Y30)gE_VC
%)">UL<p"M@]>a>X8mq6gK$j_U7KoFkEP>6dR[K]c1ml>!#]0T3BG#]eB)jSXSJ"u]BWb\g4V9:aZjR1o-<qQ^5-cJBLI+SPgd<TW
%aGcJ/m%ASQ,Y`]F?AV$aSJGO+XBVm<ALq@Ar(ImfQSRh9X#14;N9'FM_J+Z#e,^bY)ADW)F=u/05\/O\dfWa1;(M9lrX3sDY"a>h
%*q*U(Ne?LFH'q"@\)hS`Z<s/'B6Hm.5T8b\e[A<J`.khXY[[],JuiUT0*huq@\a7NDppsS,:aMg`3<@51flkU8tq>m'!rKGjCmXb
%-D\9f/1$Pm.L=g4YqXp*5n=PMNRm%H<nHOa,0>!nh')Y',lJe(E3mt<2?N&2A'iX4;/R>rb@M@rMIt5A5`TS6)KC?QWL*NVYu?EP
%;p]6jSp:K;<r+%"V\<fXXoB'e$`eut\2"_'3#.Jm`?Z]V"%93H^8+.*D:!qC=tHgagZo\6Eqpls0U(BsqZ)V+(`tN=[6c$.ei(Gd
%#[5hJHieOJZneuH0gr,aKWB'F#;6L(*+<0`3*iWf5/AFeQDAFQ7;M#r]MYQQ(/cB_#"N^t`37.kCZ8,k[N-,K#jua]6#,h.JnRCn
%]#@8BRUcE<)WcQl1s#u%P;_]rLon1Z<!P@F28`*;DG9,q#cU7jeZt##.!O:9O;EFi>koq?[R*$sPYhX0i-f*P!e%(:C$Fnn+YUnB
%*)f4JBeNdd+T/In::7Qr!XXDZ;VrA6HO(gKMGIj,_HnNe=+BRFeY79m<kff7.pAR0kR2VAOts+0Z-<#?Qa>iLO:a)J%2.,SKo[uC
%DoB[!!Ej10QW>gK]2AW)ZpiFmBilt*8O7]S3&Qp-%r\2VZrSZ!aa;oeOq^MaIJ*6=>*pRL9^Dtc.ZZ(5nm0YZ&5tH1SL1>Aig=]K
%7]7>@6kjO@8i0<#ZR:m$eUeP>\-,>C-bC24"jf`_rYbL=$*X[a$apn1`UO=m,^+9urSnhQ+=IenFm9Z*M@nmAR>5<U8m2Be1E6nC
%lJR7R&T\m_O5*A^Tctr?N'L!LV@&6B73Ant.[Sop8Oo&g*#NSc>%!)98Gojic@nQFS-*ji>KO>IXAWh%66$Zq:IC-6nV1k5*/':3
%oPS/9iuXfq#VjG,ZTb-*dma\'4j-T1%hg1SCpIb5EY$(ggKLQ_Ym6UAk;<j]Z4j8E^)^Os$!KqL\X&<l-"WL$CI,6d"ch$S[Xt1B
%8HTC6A[9%We2bA?(4/%V5*q!h`@]n9"&e)IK'FU(nBqW?aHGnM*/?*06R,]\'^L8tXU6(JoOT47"YDtu*$#s;C364N(oKP2Ldr#>
%rSb8]GFBt96r^?-p*@PN%Z>pu!uIi1^.*5X5U,9_3&'[L7*63,bB1F;Wdu9c%0MV)?O5;OEGf45Zs#BpH^[,Xa$`!>Lcrts_J/%W
%1/nBa$1ckTosc.XmNdKe#\'4tfuU2UF[U_9's4fC+)D3[N3mEH"RomA"r-+5Z=9CRo/Yc+D-@g.e7r0hBa]tgXeMRZ_ka04S:$.-
%81IUieQbEa=%R'5?6%q5";]iS;^0JcAAZ1-ccQ5iQK7>:Kn9r2-YJ)@QFCcU+05-]YY23\_0aj1!8]tKMgfrl(c:5OXcRo>+pa1E
%l=;0c$f7d(MBNh[UhKt)8W;sL-)*kXL!J9No?^-d\0\n@;_iMUOsU-tZp;NJ1X_HU;'oUI+0oi'ON8i5pd`_\_Z,G9>bc%33WmR5
%BdEM/8qOd=Xs?XrXgqA.b!se>Gs3nuJ]0lF:,`NDa6)Y^D^6>4""-9YpdZ3gnIfkqJ.Vl+#P=OqfWM0^`LmS8.MBtI&<.i,V$q_3
%'Y)C@Jr=!"Rca&69V'_V#l)h&OV^I@=-lfq0eD#8]NCjs16n@R\4.co3\>!'O;c"<JmHR#06[a9@$s$E^kr`BYbl_//VY)SRVCBZ
%r[nph5oTQ";O2Q'7Y;T@Y?-*Ck@[Ue1G4BSPCYqO(tIZ\hZ'goc/!L9\(rDGe5V+!]+s?L5Y1i.,0==K>tMJYf+.en@![hqU*n[)
%6BR&u7T8-*H.lJ6l`()5"t;B>\Jt,"+_QhfZ%X81))]7=4ZsjF<3%i+4Za][h:.+LoI^`p`3#-]7='T'01D*,$!3B1cOu;XNgT?=
%)+rc2_Mm+=P^(F[(S:C7>u-00?cU5,R8W!HRVl_k$*Q7`&E3/(dMaIl66OcOG,c,b*kEth!(qm!0J.>0a"2JBVq\@%_1N?]454i7
%ECN!P=UmI]E;=OIAgnF=q&VmVcBnVcC3`Z&^a%&VXsf#(Njh=TIuig^TU'i_.I;8@)7d""^I)!_RF?oGG>\hj.eOh8\A>1GR.'6\
%n7ICMNXdjVHt#L)BH]&^$h#+0'E&:(>olQA>:T*4JR(sIq2"dj+:^fBc,+g??k+-Erka"p:d=;p\&*KYS:LW?g,it<&mgW$muit.
%PtH@hXOK%,c9'O&OF1`_GaGY##Z%OTG=6)\m7-p>E(`O2gmIL><sk0O<jk(pJQab5's]n6Ms6.H824/MiJ(@BmQdNQ5B*I1_mUoJ
%i/$X#6QmViN.pK@R*'A3,e>c;6c/M&M!bZqfJX2+mdc':YrY?JGBdOaBgcC@j)cDLTJG=4,X\Fj&_ja,\msdAdp3gWN(K2\4f5eH
%!;Qa47/nC?&$S)&f3L$IOkkk]+Rm6ka*45aX0UP!hurXh4_20W<%*P1h49*Cl)a@<mN@W#L_8HK4t\*\[*mbJK&!hQL$fF[Tbo8$
%G6X]F0#jLOcB.@`e8n!k3s5L1_Y9>a%OauOjf!QN5Yj^-d$X52J5;b9DM@Kg0Mt/s=nqCnH*kZ12rqRQb`n4Z.GZ!JS3UYt_[i/m
%4_D;.5SJ]I/)?`s3#(DF,J#tS&msLtQ0uqZZiEkT6?d']V*P1HR-r7]+4>h6m`lLPN_4L#8Q,Q"T'[#!fYin*Cj/;?,!4bFmEUf=
%&1XQ]h%AJ&,^+n/N\r$=g).0P+j>g;e4Omsa>-H79r5HhaHc8g,J#sE^<&bkh&R[&g(8VB4$pu]hKDS:B1P,qGj.P=B,n2MbR30s
%@=G134l)ZK>/X>'mND&Z*Z3>]=cu%Hd*pf*k%su'gE!;PS56C+,H/r$qoX(P-q*WNNS*ZT83s6^A\01q,(h1qm7nqXXO,d[Qk"88
%]Be?SkjIN,Z(qcXU(pnZg'c_Bhh+75-TrIU:AYX&@_bYu"U6'Th/SD$bK>!@)!iB-PHs"QAm2A$&_e?"R,FD`gE#QdUcr&:mO[n5
%?j_nGmZ<8VY3j)L#:p>k-l'0P9/fiBA%"J76CBIZT'["iN(e.BCj,q-fr_R9&PQ*To<c4>&8pL$/8TNb'g!SAd+oT&e<a8#mN=5i
%e+Ig,L8?T2GDC9a5iWK/K0jcP&2SoNNTfd1aWNS#L$h\]Gd,QNofjJEh#RdJp^.Db*RNLc,$*pqTPF_5G=6W[`@O\%L$fFsO&RlE
%\iZEgA=T]BGD6s/D:d7m)+&t1ZpJtLkjD8$,9jt_,[k-4M!baNag<OFGC5FETYbo.F,K1GA%k$pErm%Zq!O*M`TsOOGK).7h3_<c
%OH:oGT'q[qa[32JG@q1ph3\qk4/dXL^K&!0*7_@M7soLb\bfnm.suOpHQ9@9$f@M+$1@G`4l793)6N5XmXQN)mZ\mJ*H'r^W%)%r
%\-O?S%3W#^gIVjuR-@B0X4j0/%LaIL`s=eOYj#V4=(q$3hH]DMmU-TNdrX<`:jD8['R**96V0p^\3nLkae&pV*K3Ef5`b^-&2I["
%GbMT&%JU^sN?$@#6-P#Z8oFrk+l@O<[kgb3<$Q]NL`Pq`L#1)tKHT@A6>m*[OI;0nm4]]BJJNDjfGu4A/`_)^Bp9L5B=A!",#Z''
%\QpVWpHic,G)a8]1\/fpFL^Y`KH#!e_($cX@:c`sR455[]qj0mpCUOJp/#]rEY),/&_OPTSWdEd)LP(PLJP9_\W1)q82K2(WY/q)
%i=Hk+Pb;c?n-KG,hh\[hhZ&]*CB9tO8.nt%B=9&1Sma$ERI)Oc8[OA0`Xe4P=jAd3[NfV;JCi(%n.\PlCe%$'k`@O(*UM%2LK,M+
%6QMRk2AK[_fWN%F+_aJ`8+:/CQmf-Y"H#H"jL$e7&h@!p3u12QT%D7%(@<i[*L]Y7X3,8!4N.j>G$QJTARY"_foCc/1&.?n:(WkZ
%'2PhhEHPnRH?B-/SWU=tL"O]?c,<=U@QVKs?G"'iB,H;2cr1NDBPB9m@Dlr:#AKN+?9;C7KTNh8g)8<Z\@BCk#7Ji[]>)o.)<-`;
%\&)onR&gjG>!#n'0_$Wp*C+c=7(<t84&`H_/$5?c_F!#M[!!cQRRB01[=aj\O%O0m8a`SFC$d#T@"f2p*D?hBP#PUH8@60%C$c?!
%O1I0NH/M2<0GI\P_^LtY/$sK(h_`QO[!%NJ+YZhu4(?fNY/dnm#)mG:!?K.@OErA.0rl=B-&h"g<]fS='Ok'C44k9!0H/Eo)8]Bt
%D,4q[J3dQWqihr-OEccRp8PU";=_-;C'TU2i=o<S6X89pY-?XMUL`F7XELssL`]W!m0k^abmLEjH7C?qL"&lECDjDrP1i2QN5LA!
%Np(+XG*UR;P"'@*4fP!O7,ipM%QAhPs&DrYH3IQ;<_2Uc$]D'qOP8Y1lN0*@Pgn!?*kkq=["Hktcr8X99-UO1dEW;ReV"Z,4$s/:
%k^,c\[,7[Vm2><<d7.7!L5^9i;_o4Z4%`%s?5W&Xl$U+[BEtk)=f!RFT?6$AT#a,`7QZDDK!(>]`i5<>;VE#8&Mr0T6tp9NTST;>
%[);R#ja!-?Nm@\?Em/61OIoYGRMd!\2k2YK3Vm#B/VY3Ag>R&pR59QFc?L^^Q^-"E&>CtL'hUPmDt7Tu+LT+ap-AEmPM/;R'T%Op
%%f.;/jank<%oeC)CQ<)q+P-%fdb6u2bia]2NhFT)\;Y\"ct_Qu(LB1FN)f@W?9;JS]V[p_%u+Ymo[5.k*Ss6C]Fh7d#,(Q]oMJdR
%W^m3]'j<[48kaS&CBnPiS$&Zs'A$YgC<+5C6-0_<*L8a[/!SPDnG5g**g,18:h+rN-+0N2N)ZR+eBTb32qf!E4.tpZEZl2r4,g?s
%/WNBh9Nu3$$EG1r.`ljfeIGnJ&dXP$mEfUE^Je;tTGWJ@Xq9=oOamlk`-*IV*+gM*,DlN)DO&iap4dL;)\^uB/r<P_L"Hn74s;=)
%`-142+ACXJfT*?V9Em#cG5+J^e*RLI*?B]A^ad9GjJ)ua8&pcOI[(,XLtE1AQR,I7+h!"bLLa8IfT*B8A/l['gS'e&Qg[O_#Bs,U
%aR^n"G*^+R)Y**LmGNDeJ%G.'U$/"o'p[F34;'5j(.Z;d&<"T?0\[J^WG-f/1;sN!e$`\=foCfkpTA/;1Q7%"fJD8"K(Hg!)_p*(
%'9%`ib%sQT#HI)%ZQ5`YaZNmsmH>=]+/gmJ&UqCCgsCq=!B6c"qdj3EK7rGJQ.\pTk3;ja1>>rt7pl=]foEiXVumtpgCYgLB[*KC
%+;d-t[kQQVnk"m(@^[N#8*ns$foF&>>W3m>4-YeOf<d]I*>*sVen#1$3'nhMdi1$r&V5c5JVDd;3+!qL/^/B+16U6"RI*P_5VCGN
%D9#g#ZEY3`41$4>NT#uRNqI:\mA]KWfEIme6u>G3'$a:H[M)6uH>5P@<$XhG4$r`Kn>K7>&VWn<]8"gY&1:B6.C1&#c\:Vi0\`j'
%8FC@_Ain4kkfUbY-e'?>l^@/0%//JDfFI04OaN4DfT%'8F389RoQf+(,@3H4UXAug]QSt_VE;L'gQ?3-dkG7>,Dn!+7LQOCS]-kW
%\lO5g-&_LgR-f.I/-L3fBO494k.gT=G&dUpq2A5+Oj8\Q?%q!m,R$lB*`:Z([A0rs$g&!dB3?+QjE<kNe[ZE84+O!.`hnpR$.W'<
%TXS.u$f'kVH06),!dX;O3hj).eeWU<kj;nWZ'CU2%XQO1`KVpCN$LebDCb'sUbJP1?eFa:6prlb&\T2f/L7#bl0V$SP=d8tUPq@A
%91JPs]M!J6[q!!-Y5Z!9Php;kVtWESO-JKR2rmd1Im<t6qr(>;ch7#H":0JOlK[r0gnU@oW@(J@I_>S-2eVV5++Nq5/,ib9IlkAn
%oD3$Hf-aoWIpM9q(1$NeO.4,O++Mck^AmldO5>9^O]d)2$@ap"T==Up2uN(Ck!/fgQMnDaM_>nHq-VD+H2cXohgYLNP86?e(+-me
%r>TQ'etkU+aQqfu<K:EN)ndd%m1LM,`oQT]H6ck-3]Qt6#P4/?31rN([7^Vs+F$6l(`3YdLc<]@ar;/SJ%ha*g?9qeOeW\@\'i@;
%L`_*--WOK&1AE61UgC.:9')PV_IV"&?W$WRYE47YY(*:hjX5Q023HM<GXY;1.;$^p0lLDJ\8UD`C6<q_,0u1P*5g[,`;a!)@b;m+
%Dg8_Pbn%46)Y%V8XjShPL+'fX[C)]nU@MVC?196LjK,ZFWp^a=j'1K^)0Iir((8rc/Ser0O'$*`Q"q=j+PZU1]G\:@T.V^r)\A>S
%#uP>r/2V35Pn/UnXYF-3#M0lhEbu45aL^@%&9^r6fckP_+`hQI*&ja]^TB4^$6Rk<UN141&Sn2/bA_Gc\%!]+5%"?0_Js(cI'#,s
%=)XkahTO*CSup/+6mL(L:<[6_N8\IC]i!J3Q-QH*?2+<T0/$*RQHp?]6N\mplK6uQ5a^]B'>dVc`hD+i,!$P0VuA[.+R2aYgm%il
%pkEs6*3&.LrVPb^I\#RR5Q9k2</KCkqT'TF@l0$(g6BuMp8tSDlBOG25q<hDWt,tkICfG+C`cc.(]@QqB]\&F''@d%Xn#3T"up'R
%I^b3ql2U54O/acf=>'XFI`l<0#):UW%VIKhIs\,>_arumLQb4?]O)YU?5:#N(s:<-[/P/\`$":Dl!c1cXUZ`ZD"-DqMeL#?]pJh9
%mk421h8:-.qtSKAFi_0sVP]K*r9iJBo&m@Nr2PfBqR$5>VY@"GJ,/H3X63.TH#/b\je"_@I.GUAo?7&m:N?Q@c[L7_Z[>Jg3udqG
%-`bR`^-"K,I_D!3J6dR!f?9Z_+7W\s^V*hA+$[jTj^/5dM;^h:S=I@AVd;"%IX6:GjZ2O(5*fDL*rP&Y\hg0=s.%GsJ*qLsI[e]<
%hfdV*Wuq@gH$XOZp#bgjDW:3:[LjVRkQQ1Oh_3;n?;Ke>kilCGEn]+?p$DM!b6_J&kB>CDci<jZkNB$TT);u6n']n\$2q\-J"5*L
%IFF%t;%mghKca)s0E6F5r1>pkbL7p;ETR"%:%Z]"lQ:'6h"C72S+A'9^HB$,mb$:kEr"kWldM>e?^=VIbOFIr:=5R&]M+X#G><U0
%CU`TPGLE2.X7'rODGI[?_*N9Oo=;W,SPP]UdF/boc*e[\\+S\Qj(nJ"gEpdan@-`]:8[6eX#JY.bJ.;S]R"jH3oL@SS8na;m^noL
%]A08J`r3-Rlc@Y>*d$H-eaiRtk3@7Z?i!9:]O.7:?+dapI<ID`]0&n?BL^k8J5<p^^0#b@?fh"L*].6ck,[9bQ.pJIoCGtb3LXoZ
%SSrQGE0Hcq=qC$JpYu#p2rX\8X0^FL?#IC"c$-_o/iV\Lk.BCOK@E,c]A+(s#]=_43jIlB\S2H;E,I_Wb?pRuhn;-tIeE"H\gg37
%YCDVki1Fs7G^]2]MrcU)Rf,@barEUZX+("lrasnVoq"+O?!78Y3I15mp"@IKnb1i,\(s/T\NQR*7QoYf+Z6),;i[g>4$9:8D3)B^
%?<8dd]O'I-AN(Uu?N6IB431\k+gpA'S*Lk<Vp"O(:X5jtAB']!C:TnQ`(--Ql.,U[otUJ%Er19$FFO3IXcN&.X:jBj)m<U#:VV@b
%D;Q>-f62bjND@5K5Il5hFntmrjDmkrepk!3r\`.dpnrVU]"2/'WIt.F%eRW#0?$XA@>t20_P$hq%e'+";D7b"6Xcid`cN<A/o?Pc
%Y0JY<Sk\fqrUJj8nXXRJB6q95UsV!oi7[uPoSsuQ%lu&Ahb3@`mQ>]OEpT8"Qsclk4Ctks]YhE<iFr+6Rfd3N#J\jpo?V;H+5D=k
%_mY#SqI"JpN]`mUq&N6*]g!0+Y0Uul?7^#l9[#enNTXq5hjg3R]ck[Vj'c8Gn)ETFM^$j9KRUJErb74O4@j7#qF5h%oC8KUR'V2&
%/>(0^ZjFG!G8Ju/.G=;<T+@`2_`Y)$VPdKskJu2tjo8']gHG6m-?D#;Yl":Xq:V5dbI'IBgUlTXai\pYG()1m[!Y\/ZO%:d0JV60
%MsR&.a+N'7=4aW^?CbI%1uZC/_e[?R;Id'(g/I,+R*#E,<;Oh]lh@ps4bd4i8"d2;S.IJ;SGg-R.ZK5;i!5bU4)#W,I:G*4bc:iJ
%mf.9aj`i2CIR;?Q>hb<_Hl09iHb5s]jkr.<J:_Y6/].`M[J"(=72M$E(nJ#ip-3?R`sKrS?r"opS[jZeg.<[+SIc9YqXW_<Ed@Z?
%npG^Dc/5i+P?mkMo*LPr]D$7B-TaM/^,UK<lMT^bH*P#pq=<Us5or&2UASZ/p.$q8j6^p15>JJ1b(G&C7/$V%Rc&o](q"g4P$^-k
%*.JOOKdeg!-l2JS'[;+&[b9>PrAJ@Bp3iu;.4.2K]T3BuO+U;<;`aO6do.S=<*`j:9Za*iA%S2Q#uc+j2<>ghg0GehD3ii$#7OA)
%.DB/7DHC+(5J(0l9ZSAA4ZPb*nnLcHnDM]bXg&3(o6^mSO?BqODHni?#J.T%-dSEWh44F!ATIW;GL`aXo3Y:BRkR/(d()0ISp3B>
%PIp,.MhrmI0@%khVkptrn#eI5=-ljO*&sVK]Hsgo[-.])n#BS*XLM^5b/_8+2fA*Cq"^K;/5@hD/geid+!7KdNrYR78X_G4p>U[I
%qNs$8VKCrsg_U3cM)&c`p3gF5C<F?@a-;H:"jh&17G5@qq,-=L9\E9uEqC>r0$4=Gnj%4m*lUE+BkQd^0$<Egb!h`HR5l'pc:.Ol
%:7FbAMdel#>a.fPAFE<l3>Z7&Y7"9@k"mVo6dJ2h1`-&'eK8QZb3<EY7@DSl6eV/,)5T@3S=3#jGmCIVbIK`On@V=1?Lpi1*ob2u
%9Z2Rl@[AZk<;;0>s7M.#Lo9g]4aVtpnbej8nN.G\T>q.rrQqK-4&rA+6^aA8g0O>SSFtTh+dhrVXOh'tFqAue:Y/`)Rqo@@[a/]*
%M+'I@[99Qd9rlOYg2*k8>&Di*O%$)Y,=4W]+MPO-6S`'UhDZ^,:]\@W)r5o][IZ;F0Egu*R^^[Xc%K[@-=e>nVn\deO>qK.<u0JE
%_3:*`i&><K>b6FdIe)5(4/dG[\$^U,q0`"tluG0hjX:f-eahe`Mb3CPK4fBceW0tDjn1-sU"nLqK>Kr0;^Q/^6eP>?*[)BCp%%*W
%lfcZ&.!kuLEgtHuY=L(R;0r]BR;E]djSs*5q>Yr1s.',`Zht>lLT,:Hh$rEtLbJX;)Ef^I_Va=H]:8`R8OVSDPJf\f4!.oMs#s6!
%^2O!48!!AXVL7]kha?mH2\dE9(U'uJkBm!UDmno0pXEif<!5uimg`5'9^i_o4CuS2]Yb17_.!02[[>LA%t9;2o7T;D94]%7_<ptZ
%D!U8_&*?]1eUa6NP7@K(59!D$cYd&q/8qC*o`oh54qRMKUGsM00bA?F\Xb8Lk"<BKr]A/Mn(Pr^r-&C]KDW*CkP4Kh`.&jT(WIHp
%h;4hcrqdfO29140q!YBG^U,$o!Og6c'.q<dk.@OoTKRL8bq\*9ju^V2mqe=cYY*5J]Qj$oq=Nr-Rl$I1f%A\0G%Pkmh)O:d"F;.Q
%]rPK<[QHdhqXsQbSY,lQng6Tjj:nhm'7..aK:Q-S'3+dslPK@<13MHnO70XIg\6n4\+_+.PU?-<p5mN?ZIqV=0PC&P(HZubAe3S]
%+WG4.#q##t]?/!cs6QZLjmquKCaC\ub6RRj:KO1eEcuT>]_Uo?q>@S"l]]MoEUDG/[L:0I$/WnfH2cPdJ(*?/SK5R]6D%$Pp[$na
%br1$bdIo%cmat8*`>K[.c_+!UR[`l%>Vr%O>!'f:T9[eKp-"erq68JrLY&_qVqEK/I^$tG*Mj!7=EW?h4#g^$J$R\\8mD1jJ%j(V
%m%$2is($;cb`8%CnM314B#i*]GaTR*ZfC/u@i'"uEP/4dLAmOmnZp1od+Rr0(WX_eoZ-"6o@Y&fdW^#r3G8rOSaPuomu_j2't')4
%D;rB;7_@/DLCH-r"X%1WS(NccloWk<'YoZU#FfsSbSS_Alh:?`I'cEXk@Za2S=FHh\'Kii*\4VnE86M"f_<;R0d&2Ff2I$G0&H+&
%4J.VF??7n(e)Nc&]#22+kY!`.d]So##D5tIh92#F=23$+234jhIfeob>a<&_-GdNbZVM^$I(i=1NY7cZ\\"[qV%46l<r(*kDi_T`
%?<8dd]O'H&2dA#.:K5Gk[cbD;+$[\*^q7hYj1GfegWVcf)!#W_A\OiY_@=c"k$N"5TeDb]15G.I]/oJRQnY3q;bX,1>#<[/0u\n$
%TaCC#>lBYSZ@.0bHTinG;4lUV+(GLZIUmnd3;YE?kY?3gIZ3n)r"rB/0`*Tup831MH[bZub^PM!S!hrj1&E[8`/jFs>W6Xi]/c:D
%VY&O0B;bKoqQcTt`hNjM,!V[3?N0bHq*/e`Q`!ajcB[R:e[O!6:4u+@E-(j;ip5'_P@#XO;%Fc*<Ms/.TB%>hIs#llV8PZKGAG7a
%lZWJEnD2@Bc07-!gW83%kPfXJ5&%St:[dn8HL,DH0`qkZ3=K5!?X6@1<qt>8H8:&rjQ:372S%OI0-2ECdL;GK[6l`PdXt6C%$pP:
%7CNM08Q.5YpPP6C46Opq@"TNCnaj4Kf0?u0cXVBj:;KM&ke:E:B@)jOp1745[S']hh28jW8*L^``hQ0$RaRTe:\U=+KfRh%&%qA[
%[a*hWHhE-7&)6CL59S9MF4<<YBDbJql:9oqT9,O`E8LAZgTC^d0E."OIIXqV:Cm@U2bbmJ\%2;m2rEc[gY@6_L$%.FI%-UDF)Sb:
%9t85+rnH32*.muA[h"h9#nqH#Qao,aC;/!\X(%I"F7XNl^<Z-/FY5eVleE0F#VL5J3\b"+p>JV&C&8mqQ0pl>Y+GZ8I59p^GjP18
%a2TYbiR0La1@5!X3jF575\T'c*`lgja..,q%M2]NLRicSb3OKV13V[e4O8bP:_E`^O67mg5C^*QdFG:]e$GP$rb[h-qXr*Ok>U/h
%qV87)h*f9EK@ra.qf=1?kg*@U#J#bi:;gX)FZsatkJ>Bk_.^7."F>Il\9-K#kK?dfb,8=-jR\s`93D/3Xqof'#-.,e:F;JiUSi=d
%X']4/66\Bj](7:f42ZfD>Q)C@qDTR]jRo#.(FQ-(WREbSI(mD1=#VJtdiQ`D1nAX\OZU59"N7"qH2cPdp[I+oSK.`KJiYpfhm85"
%PN"Cka^+Rp8pU`04:c!eI;q^qiRtU%nfJsZ+]JNhoFO,UCMpQhB$4S;](Sl-]a&$f9XmKTNo/fU[/Q8[ol%^@?X!?)J%iM*>i)H4
%rD.%#BJt_hcmY?"U3gh"GIiP?g*jNWDu?3!Z#cN-SpTrKg^'@>h=!B^'+XT*Veh`mGIV"WoO1s/J(+_<hgO,]%Q!C&gZr([ceG$/
%otg"k/9sARXjd6YqgU5i>bBib]N@q'>r\eSnbhb9S!11\=312Vggc$r+--4Q&,Uf8:76lc59-TeWP(M4ms"r+cc5ojF!'c%G_dF%
%R;?hLNLko&nqT"C&))nn>S3$TK)7:?bMJ,GEfe-"RIb8"-CTLBmU[n#)ZA!Z5?5hm1WVdURCr+K+_\g-5J$iWJ,T3q=^6`\h(MOo
%lR'E?gf4OGp1AMtFoCFV3k!p\ic,i`Ntp[7i@Eo2\VCY9,NHmU!6KI@iNBQ^-lEQYA_K_"^Aa\g@<]9Z%iAj:%S#0I>\XKT/9u=D
%FpKC%QN$ScLt%J0:iZPWZhGrc9OUFU8:,YB;%or9%rE+']KuL`%T][=mp@WLs*T"g5gGle$jtb."BYWJacGW.J"Q"U*'M!9fk)HM
%Q](1UD_=i#4\.GNe1R3/]Z^juRJl5$Q^O8,fcdK'j..NPn;;j]i4iQi>eYYAKh5\`fDOI+R_:Z.mT^,T4$IhmiaeL$CIujTO%lsu
%PdeubcfZ7m]<9aG`U[G8/0CeoG9fKNQd>\HRNMNNq7Mk6;&1;NiN'$&Dt7+g1%[lqa31+#/r0JtnOHs".du=\IeVU9O&tMT/U>LB
%IU,'?^:=!Va3EW8O$@@phuEQC7rQQM22e[.?R>U4qqpnPs-s&\hc][=_DI0((]X;<c/O$Jp%R?mr6^_::%"rqHs@p=b`PIk\%$rN
%2<Mug/e-lEBYomuLLW;a`jB5aZ:>L&T(3=j*h)5i$&r'r?Q4qWYO1(@KmZ6,j&'d3NunjTrO'=XgkLBmDfGa16.\#R_paZ23rT]n
%./u;VM3[_Th_-_IcPJfOT0,?][b\g_U]3o'8RiZS(X8'Ma`\F;=8C=)mrUJK^Q8!I]%j1D*WQ,7r'ag$4#F?*1//+6j#du.d"(.d
%cL/GVL@aH-:&L(\_$'ZZ5AfE^D2=<k#X1(N_B6AA[.m"qD=6'9qigQG#NK@)0$8\lA)'=%A#LX$F[p<7m9!Hpr+R&<Xq#\ID-RKV
%Mm882#/#FQb-TfED)Zc#jnW81m6EXG_a*';\:<nMC[:#Bhsb:&o,"Ifj9O^u<?0`R#BEu9?!WgMfJF5D[P81Oe22$q*:hfGI@J6U
%)3/e[<9n?^IQ.kkg1pr1Q+8[9%IRRbkh:c2Ge.I6SoMmOlear+kjPg"^46.P7re(@*u<c6a(?4>eeb?uciAD,RV:*KgkE1X\i)pF
%[q/)cX2.?QnGUFrc@'D42\m`!dKNV\"d!82@[i]r6T&NRma_OU7bXYZ8#C(^k[?$Dep5P.T$u?5C5YTb_1I_Nh^'6<[2jn433/h*
%Eo2*7W,7DQg:fXDq]4Cdn\ZlH/o947V^jhcO-re<&jm_&:<1pIH0b;pW(,R<"f)+8!c"bl:ioK:F>("(#J--\Z_dh!ra(Lg**q.7
%-@ZO.jmt`#_9PT2eX;@jIUR,Fbq7#:mJFO39NIQ)&,6gqk)hTOo5F4c2$(lHq!KOf/hW/[hu11-PJ?G;UW0m,LXN$#LE"S.<]0l#
%$t"(?7ORj)NnA`Fqo+mDA&2\5JIR]g)tU)UqH\88b,_S&OJfbho((4KaF/V#m4aI/Aa#dOnh$/?8pL_r=;4*T@d(91Z3n/fQWF@!
%30o\4eH[Qd/aM0g2NAhR`XUG&[:Vj`e_*umTo.Th`Q%2LH!t-:[JhSXEI!*aSSdsBo;NcQGt:UqhqG^aKAci!NPRCS6BbF9`aLuX
%bPIMl5%N3rEe.kOkOLg\[R0/I>@6<6Dn17M5Ol:T`ofSIm?BqT_\:L2'1`X'SBs5bC``$l5K3;d=.d;Mc3lQj(H;@N2o%<lG%^5m
%[]#.dms"Zqn`8$YIl&<VGpg8#1#qBo00eN5aj'V?oe/NdC4O3r?(BpJqr[JFiq:KY=3JPdmh^Jl@kaL(fQqMh'si)40s\5t@.A[s
%X/0TJP\.ruKlW4Ji\#G;qk_It_?V^P_&:J[g4<(BBq>Ifc1ot>U,2mo>\LF70N!ju4@dtHZEmGFb)XXU>LQL!Unb">Gm%dABl**a
%s"3DS'0<D_Yt^a[-sc*>%lJj$%8A2cC*#*2[TklY>asg5jG[<%L:5>3Nc?R9SVFW?\<]5%F<-<Lm'plI[2r@kgYdQ_2Oq`P)\\KW
%l^HVe!6p5;f\G3%UGc_\,(jI=,?RIgD\gMY@]MneeTTt+Te%*WF]P7imglSuGPgUoe;raE`^LsBH(?qP`3lr4Q;*L6k\`O`AC6a?
%!O^XHq`sF`Ki[9\<og6\G+Ta4\&_c4PkXY"-I42WnD3b\5.ecZaoCUE'l+_&l]jof/Fr`ihj!+EYP"bt'?4D!'$8Jq%?EJc"D25f
%X,a[(.Z\N9G$(6lbmO---b(U9Rk,'I'$&%bT:Wd-q"F!Mcag#Ioi@jJ*ksR;Bh/!;BJ$ri8&41Q#Cjh(id?REY3-Iu/WDgEZnAsj
%)tma[BouK8E8C0WB!hQkgZ5Kor17bGQrUhI]q'0S]#R*ba9aZp,)rb0U\jK;VJ&HZdGHLmE*NXWgF`!THS2dM`%4)8^:HA'h%7:\
%qrdPJS)s=$jlqd"_uA!(jn&(dgL9]c6>qIcDbb1fQIhJ\/q5p/I<3['pfh_Ck-)dY:\[-f\J.:,G'S*\F[,Zad4;fscHcVm3tLmh
%Y0W^>^ZBD1)S>u7+9Z'/$pN2M3`mK86n%a^DpFrTTD-oVOC.oj^T9e"'n>\6<&`e`cf1:0?D!e6:;tnc3'.jfVr@sD<:o"X;_`*/
%.Y]NM`Ge@C7CUsLfQ?00EF2J[p@i_[[d)YcSa)c:MIDrPYoPe=n,D,P:;ngB'rRcZ:;mHY.5pY^;RDp!MT,*?F=F*C]+i_">`.oZ
%QX]R`\.kur0!5$ES?:)M2"2roD\$?fl)/VPVWq&qgJ'<>ae(_fqH:BDWU"/_idJ?Oj!L+%S6_#Y9CY2OMVK5QB9/W4,F>$FH+N<Y
%TQb[8]FK6(@:$%kR]CH#I*>5mUUV7fFA25&AZMd)B?UsILb'YD0=p$?[RHcHNm0MWr]RqW"?Fc5WRW.'"'H>'QJ^88XumM!/@JmQ
%EpND+Y%cG9Z]6i)=*6EnXe%.NClOr;NQXilBlPu;N<qXo`mW/ti/?lBZa_8]Cc3e\_f'*pCPmF0SSAU0>:,4OaCCi$)2(S!Yn6&[
%b^Yu.d,lRH]HPH#Y6[*6)ctlm"ss_OFT*EopC?/HGBuGXA0BWUi#@=n]/=l'5L\7?h5qR94n^sjH/RH@72W+Eoako;3:NT_+&oY:
%T88IjgLScM+kDX5;>sS:C4S%Z6gpT>0BMLuGsdAKa$IRn,mSl_k$ot6@;QWgRuIg3@3NWGp\@mqlh&T-M4n0`@k6$pjHWi`cK`D(
%ND&C-ON4#7h\E?4atES3D<>rK6+ugJ(WZ4!j<_FS0:r'4O7@pV^2Q["e[@#//07nf`AsM+82aV[4Ik;oGD%VennE#+T(;$VTCVK^
%Ymu+VTC^,OCjf4s=78LO==gH'32s7?RP0!ZHsSh&jb)_pem(o\H.H8$(EokfNEFq&*EBSe2L/W!2FQ$/Vj@YEq,p@4*O?KbP$:d2
%!Qn&pf_euS?Feg-ctBHo594!IE[f6@0OFp_>9l\g#*&5g2_<\&MOMY"\pQ*1n#gA9k$>8^or$&O&7Jf:E)m]BGJPD:4&o3^XgGAc
%K8ZJ9&p0HRSSCOF64foK'K`hPj99+"ZEUZ8F]E_<R18SRX/ZG,h7V7g<E,-0X)^:`HX+<S7<ED17$nd8X%$9Vs%At@?.E6VOjN@1
%9eoK28))CsLL[5rOt*iOdBnN4-c'MHND$P3?ol\@H/tan1*+qh7=@L:b"7-4m'Q!<U:_%hCI<)_`"Z28VkB?4ESee)0t7IYf%!L8
%0>sPu(E7SP5Ic\!*)Z+i3@=:4`[#GfF%BaM8^&?73@+-GKd>H.O@6?67Ni)Q,pZ?N'Fl<4+g\d%P"6)sP0b5UK94"ep\ro6&ugNg
%ij=e8g(]^;r8$DThj'9+VB-lef<l,&Pjm[8H(Ua_=_nL=\4o8GS]<#0]>PuSe<n1!'^n13&PI'c]d5W<0<YK`#&2@fAdf0Z\&9PZ
%+=f/Q2i(&\q6S,*5KfFIlXLQNN_-m-9Hn;18VB)N0ukR-3R&H9#?+@!:%='PnPaFAQ*o$Mmg$P=?1k<WX`us/je`\5IU3pNQ+03H
%/^eI>jQ3d!m]m!3W`Qi_I;-u1g2f>45>*s+g#X/6N`,jT#fW$E@G0!i_a,13MHk:(j^p@_EG0,F9\tBSkjg5jpi'a98G/f8kpW#5
%<o*;JC"7.SLuFd[LC_AASo9Ri.Km9C,"!,k]r.qNMA*AW/PgP(<[u'5SsQ2JoPJ)>K]Ap=jSA-L]iPQ$?k/inX7Z7]4lr>sjp-gu
%=]5`i;&$n?Bu/J)p#>Vd[SphiVn]n-Q?;f$$#Jn.9aa["kG2tacKA2^R#XNJW[ViU52SK+,M3%^SWA%ArRQa@2E(,l/`-;;Da'c`
%jpkgr/rb)H^M\1Lh<juRo]hk[M[tc^+QV^V03A(5Q\rlEE)&I\"B.E/d,NADBJ(3L[s;b0AP]JDs7SIs`rPZYF:M"Yo.o&UM0VhV
%;3ZTi=E()Oj#P&gSb:%cB<=71;t@gT]_/tY'Ab5QfWD.59ifA<l/#e(Ii@S5.W<B'pU9AK<Oq?f/+Td.2q5%PKlC%^:VSO:Nbbgo
%UQE`H1S5BsP1?">p_*ci6`_atho?YHL_<'Y@4b*5TKJbpe=qAb7RcbTKN[2U2([M*gFfO;nQm@cUFNgVMEY")N$H%e2AuXQWfdsf
%ZaF@=<QWo&N2h;)r[Ec1o)W5<[iueND'70&VFDX=7(!HEk-8uJVd(=N?7#>Is1CIb>:WN:a92[[cV!](B]OQ0Fk3b@YeI"/j4p\5
%b/ZkW^)ga/hYZ0u=Hl]FCf].gV1]eiFoB-`[V_M!P-7JlmJXHLU`)R@'P3<!+H#a7$)li*.ZEArKMhZs0T,C)_C/h[(e*f-PqYgU
%_eL#W*aT;NKFM@SqM%RMP]7YBn6s3_IMbPR/Js.<m-b`[0n+0\V%38K.a`-QdMfkHN++]!;:Yt7l@<dYU\IPl'XJsA;VJ>j7O_JC
%__B6e_K5AZgVYGZD[rP0Z8mY:$2#9k/T"`!UVol8Pgsbg#33'+7e)tb-uhTkV4T9EhVcp<b(^?dGf.,jrkg-u94^Vl+d9XI6T3@b
%Bh,?8<_>I5VDsIj'M%[ti[B7=NY98B23+HAc!_<+S#qEBq@Rqhh6FMr@qCEf(hLl#h&&Tnn):d^6Z;4)'62?,Pbc\8[fq%GU)>hU
%&c3\Ccr^Lc^"[!EZ%Pr$f8!2jr6=9$hj!mB/6%IufEX(p88_)uUmuJCpkc35P?QFtJ$HP],P:Mi>1DNdMBYmU7W5Hp^9KWKqG#i%
%YU+l6CBUK;l=g-N#YO98&X:#06PIdH+t28Vj#B5-<C`EU?4lOYWfAZ.&?4rn&X;ogS=&'F\mEmkjf>FN*Utfc-t.0"7BFRq(lFo5
%ittD=UZ31`F_m(I-t,IO`L('BV6B3HR/0E\a7$P(n0c<Y(^EpL%3^t'[Y.K*V@^n-YY;tua&#s;i=$S!>Jh=q%;3UF&1)$Q"!b<5
%L_<;k7F.0Ar9Eh%Y=]MJ0/SRWShZJ=Q$.7,krb!#-@NmM*/-%lq+@N)]M1S7cRh`UNUr-4oO'=\r?BcC//!$qhDJ%kSS@R:=>7_K
%MU2A$"Dc?F2e5"OGZo$8hsi;elenh'/%H<hR%(^-Lh#.$`%c*Mb'(tTYJ:*gL:HV/%l)Z&E(KigY`?1'nbW-CDgC6[+l7OO\-Lo6
%5I;ZmF\8_*B.NOjm(7.RPK,PYo@bQE8lTZfVgJ77'CD)4XhVW^*S3c%G!Bkc5N]Z.jJu%os4S"*&c)"_k%`3)T(BMUI-uu2R.Il/
%YC0+?gbWj@N*AI*<mS;+1N)lE>Q&4J\nBg`3MH?/'=t)SF#/*oA"L#@@SLa1k1o&QLqFA_1!"R/[a2Lj80"Lr_jXCOo<";K]3+e3
%P*`eF#/[:WNRh:Fa\S)22QaV:+6V4S;^K2<],&O;W0bZ9_%li(RoYR2-_29l(f,FCiNL>-q9r/(9#OGpm+noXcm'kIDD-,kjUorr
%)ToD"fLk+Os1.+o)RZ[QT@WqV^p9iIMN>T,nBjn'hse1-:tqj>aKP=!fr@.V$&pJ/7+MiSbfA;#'_%@ko2M(@(O^=PSkRi`q&s!b
%9jLb\G?#\0h`])..*SQ$X$X(TZRkRV_;`k04^J\YXHL#">]fpeY?tmZ1p[([*209/*n/7n4Q9D=[%]")E>(>kBJ,=fRL@h`,,PHQ
%LY&)Z[<Yl"",+Ao1!__n5@83cg.KW%^a86'?.gt`UHC/KaB+k.EJiu-g6d2iC=Zp(+;^l@f1lqdaVlmQHXXc?cpK;UEY"3d]@FY3
%Iu9.]$Uf)?qU8V,I#d,5`:Oq[D]g$J]U'.4>2M@(dX(ph8)r'FL!(OJ=HS[=a?Z=uVjFG#[$<Ecn6b))Bsb)8\>@34JR%*&D%"1[
%9QBh?)I:#1[e[[=KW67lMj@:e*Y_RT/E@;a:"E5H8/q-Ij2IB,[]R!KaD5<X44s89cu'*h'2gTDNT4/?OlMb$NgnmX2!8WAf=b9d
%ijd[WgZa;mCGrW#pMSc1Pa^7EN^p&bNe_^!n&HMn;i9Ul_D5qj>FY#oa_<VcT`#f\RCHsN`O2!+FN\Vu#Xr=,h(:+0'o\VVZ)AFe
%NHX:FYp=3d+25fd5`J3TP)$IES-'Cf#pg@0lhc]\Got93e#c]ioL@.'"eV0`moB$bj34///:+]pCfdZA@-r'1Fu?t+*#61QnWefj
%c,WS"^=puO8?/c&G"'_)4e):l,h.-c9n0>n&?`@AZtsCW\`02!+)Z<Q1gs\H<R[o7&ND,\a>^Ee7RC&\TYTi,EK6?=#fUY]$.R.X
%/C;f-@b5CYg9r2Q=q&belATFS:`.Tfj-R]giH#*p[S8\V=RF;<'m]4l^&XB<W'32Nm]<D!BY7dY2NT!4NegN1<K'r46113l=6$j/
%.o_m3Jo[A=;GQ:o'2/>T0Z]%o8@:1VRYZmPoj6F&M2e%8K,$D(*E"N@[i[50CJAMr(+4iQr?Qdl(1M2`F\SbccIPdrT8K?&L\=Z9
%C>T6H&!ZF871,kB5`7-.gY*e%QnBjF)hIY(0=ALBX@#%*+3:(19=?^S;UQtZA/47/juZoZT3`SWp`$m^IhI1V2aM#QV),4o5DcR)
%3gp;W*!f'ln)]2Aes?km[6=_kATS-1]"0Oq$[B_h@Nb,i1MHH_B5qP0=u=sVBsa5uW+CZHI(3M-N:gB,20_^V8d/9RH[;A'R6=R,
%[_:@Hoahj6XhNA\>0i,'0l1'2F$%)Wedf-:Y[B/,/t4A^=_o)(hX&oNe8`rai3$nNPqViGE858;F*;Q*e_$IbfCM;[;9ialK'NZ@
%(QM"-+Rb(-^0!:&0Mec#-Ji.aU:A7-h03eA@cF8m("X5\dk.=TMEj>=;Q"_3))skVD*LXZ_H=>J)$:%KG5%h+[q6&98!,Oq4-hK^
%^5RX;03t#&#4@j5n0!uhgG/tN.pX(\Nm/FD)bZM--"Gk>&E)!k1'Y<n^3&64E*GO'3s!.A#m57c^mm)4-Of>q@:3mHdd@_PE26,I
%OdT0=1s?eM9CP-Y-"Fa@lD6f:d[`UK4S>J40u.LJhr:KA<\F&1<it!goeo(RrhR3T"oDoI%mp\:^EtW&R8Q6/P$@S?1N?]eQ?&=J
%s%SIsC(6OL=S!/!M-C*N\%?JfqlKBmj$n_Z\%_Z_b*uO3'39XshR@<5KU"I2QtYg8fK.NWk9\/X?!cCZCaKn,[3!;&4c7o+Dpe#N
%O7M,tjSJN1>`^]WU`=u5BeDr%&,4LWO>7WJbQTG:6-AP$Rf,mcIqeU0m?`<:/kA"$Js9KdEDi>qP_")2kA*(*3P7nfP5'FV#T,LS
%c3P%)Z&`V=+@XS?eNr"1<$00=@\<GJFZ,&G>fF"9)]K,7Aug/V*H!N*KE_`K2/UFBXCQk3j*O==XB;1IbT!P/(g\U.UQOe^,tf\$
%,%J?f`f^O],d:DA[Qo'7XGEFCJR[BoN[I0JnS3]_8]a8L(S+ak<NtC!ckimGna2_1/h?3.PMJ6HG2<11ne-kk,Pcgnk62D;q7C2l
%E>#iZ@"Rr=1AR0lno.p2(>sMuJ"-5qj!en9Vla0s]cGTorD^(p3pSZ42tV5C!QfMRYtOYE-^&amV%=mmRF[U=^1>YgW/6")!6.M>
%'@*+i$8dg^1-d$_/'!7q&@LXe1Q8#eo0m$Dd+P5jD^G`e.``VUUD2s#W9(##LYc3/%L^D_Rl=2_h`1(?-fRBl'B2qGG4[1r:o!AH
%co]0dN=4.6s,hj!H@O#%T<X8\*nmas\n.GtA.Y9l)m@T*kpX@`WP<I?J9V1WWu!)&/??**\tQI=Uh1Q]$KZDG_b(_FGZlk=Z+3pW
%c8U#M*mT[:7N!*jWjRX5<1W76b:YTJ'V^iS2PN*OT8I7&5KPsqc4]Co36`Ki<3f>0BiQ;](L^f"(H!k68i`E7$6%XR(/T[q,(`Y(
%kKB\\EFkuHYa3ld6(T/^%$*\Qds_J7&im^DdO0H"[U1DajMS89aq\(oD(Q"tSCe`Vj\fFho6,Y4T?geS*[t)u=dXM#HusSm3d@,/
%I2A^arbWo_B!%5_Hr+aq.pES_n49@V`=T3*qCHk8#]k<<LDM%.GVQW218*5K,?@UspPUffeQ!*>%L`@a?+;>=1FV4Gm$,e[_\jsF
%)bbp=4e]dlaS$)M4e)sD'4F^$WJ@el12cVW'h+^DeOj^fe!)H6P!Gh5c##V5ZQdOADh*tJB/=!uic8LF7qY6B6s3Rsel6Mf?XfGY
%L/EeQ#Y4ZkLn0OJE+G1_-cLBikEd';oOcKI=,Q?`*^&7@`9PHjdsD2%fk`Z6Z:6BO;qA`EQ'6\bp3&Hb:hsT7SRpLD.Qf;3ZuS"r
%%te76G"QF7s,3=PXlT'm^q\Hqak!49[o*_;g)Hak9i-g\lbO8]4^D9"lG3U(S5]i&b/'=g"Wt`i:g)%G/dG='1j8P"!m?:.`Ieah
%%jmY?='kq89Tm:jrL00a3gYJU9MeaPNMg341;V78NT>eS][g"s)%ZM^!Ff=%>"5XFT^Iq.+'#81b_K"MEVqLgs7KoSfb;O(?VVr4
%Onc)OBK_eFk`\ml:tc;$=^AZ$BZb'IqRTSYUI]uu'Em5nAD/S$<ed9a`_,oKK;5ES+NT=`1+9+n?5.]DjYOnl4_VT0<EREdP#Tp?
%+-(Y3L+nZZ-jQ'09sCe&m?^H%D-daY`Y['jgg$tNb%FYp]J#%=r_ob#=^=1\P*?i?YT-D`k_p:gX=].TTmsWmgliddl?`&K"=%if
%?L:7[qb5EmPB>"o*A^:-9[YYZFNc!N1J,XNiL-KO-L'0p)!"B=0p?^,GU+;Jc#`>JlY`)UfJ]f$B.NNf:_eJLI.3_3I+<2K`E7N<
%VJXa.B'VWT>s6+n/eIB]ihe&;:tkE/lbHoqf@&Nb^$k`^pBc>f4X[l9E%]CKIa"hifnt.cFje$;Rsa^s3=1-]AQ\OcrHnP#9Zf'P
%^s>%1Et8,'Q30?j4DjRL%<CBR^XG.IIc,G(ru?8Bg`;k):\U7Z?QDqW42c`!Nu[pH3!lWGnEhQ]Kur6.O9<8Z]Ae>2l@4,Y%/Atu
%1Z5>2Bq,2gE'J4/54'm'^3;b8aFJ1VB>?I@:Bl3:j9EarmCMngH^jW+B#&3)ik'Y_h>=S@Z`Dr\3<T9Z1Z7;j%/;ep^s<nf4/6=?
%?.?uO9'D30`V)TX+KB@OokTp$CrciLDGiok[O.t95F$tDC@2g_e)"H;9g1lombGM!n&TU_nt%tiE_NUW>9>`31'MUJhLk@bq@*?t
%9Y.!BDO#tlH1WDtItG<jS)6#`O6LGb9S?5O>s;LWch[dPML;&*Ii$[aSQXeVP5,I9DCE&?C[u(j`VaPqlc6pH>q,PB,>TAeKhWE*
%q[r-"]&(GlQ(Stmlf'aMbOFP&B*\UGr1a3/%Jq@<naFGK96$e.H>D.U+2*1%rN)&S,I@YpFS5)*d!,/2O=Rp?)!Vk)nS,=Wo_o<W
%\*Kg8mmpnlZhAh+$]&TU@@m9!\_TIKlt70p3=kt)LI;K%pME1CVgQs^bVt8o*Cb@5GeGsR<m,/H%+]/b"'f+`!kkll&*pkQlgN`8
%<<tt)Z;Vq@6]C'A?4h_OFnt<gh"^k]Po7,64QCt5RX?g+BsX3(C>:#9.iUCgZdfZ=hm;RR\)@Q<&<]TZA5eZ+7=73L*(m_%@DSg&
%Tq3&@i*E^1M,cK`gVYX&0D_.!5OH_9;r6<']Ylub!CAe$OM)R4`KBEl'=0.D<6HI+focAQoA6J:Y[VOHTtNb&fGgl;U7C8ujJs7L
%pFX-)GPK=-:j^WtS)g]L%hYrg>h2s5K@0&^We=+%jJ-m9Q,aVbbdZr\np[+<b/a@eWN0H55$C+q7N(aLFH?"]j1$*hKEOMeKo.#8
%]8tW1;%Qa@N5L&/YHJ9Ap2H@CEgtICI6F:Kl:?coC"nmf&5#OHWd+14rl\X5SpCq27K8RS)p%?GU7Re?8rLh@ZS!?5^Xq2B*gc7b
%CH'eVBNM(7Ql"fSdT,mJ>s<T7psTriDZ"59Kj";[o4nHOpGC]<q<7eUVji!kqmBa7V.!JSeL$CS/2th.`TN72]>XpC>&2,.A$kM+
%CU/(u%H>NLBsYHOl)h+IeQk&b%SY)Nfnb`*p!W,C86b/U)fF^%qq7quAL2H5-6EZ^qGsLr/;^U>NpM'bWL:?%rgliVeY(#(mGIrt
%P2@S*Is(bQ@_)7uB0XXSGB9R0NqCY[rXUU/5GR&ZBQl8dh2HM9UYX1.GE4*%5GR&ZZ2S%(h2TNua/3`W*ig=uB>_<1,7QfSTrA16
%]c7l12Yc6X"G:7K=52)n>9YRnaFB+h=Y!FVIa2/@4i$'^*qM.q7Y;V-XLuZEV+V_2aeR`93jnr,%OC5>L/i,@hsoIYQU`L*&\Fc0
%e[OUmQ+"SjXY-URlVaJo``+SceeAU4N2grQ\?b?4qg?kq#kL=#;RA?D"&gOBm6Y/1LbKF.?4,'qC?A%;@51`Y9j9;HZAHOY5:`0T
%!jkMFM]+lQM#`#;k8>+#]bq2Zg=FGu9]QS+:2ITR7;a#j[m"]==K[k>:-b$Ei-up)JkdX*!&-GS!Q];q+E0?>c9.Iu*]?9!CeK3*
%`&Ac6G]PcXJ?\(bf2J__)gS2U`)S7Z@uT^9[GI7`$"Otk$PfgA\>,M7!+tG&a0O*O<ABFmX0=L!JZD*t<`b*Rjeh"Y=Pag,/+cC&
%n;t:[aa\m6-],s4Be/[TXd*Hd#CY&Z/&IR;p$sMW9O=cM90ho%Z*\^dbjK6u@1n]tR:j]4-WVO%P%6'5Ec6N>Ve'li#n1h._[\J)
%.:OX<q0:&OiBh8&qT3f.=Dkpl/?1mnNh5)R4q8Wg$>h\aVr"?"a_AF<7gYiJIdK:n["o1Yl%91H2%*Y9_k9;s)EH]K!/oIlK<ur.
%brMV=n#Gp^q7Ja7HXXA.U9@b(b(1Vq;p])mKX),%Kq2[?`N#&OIoug3:ct8dMAYM5^b-3Sqn0ofJa&*nJ2Nc4iN9s:<oH[*WZ4,n
%MZ/IaC6r.P\6Wnj\#4@>P8^Y.AosjTS@;X,K)$8VeR/@cQVabnG"a=*R3dTE]X_]WKVN/RE[X*jA=ocoQf:jlOCM#8944;dF[T0Y
%9*k/j"CI\BTj1P9Vk@D"lD4XTDah1aZsMTuEI'c_WK"i+K1,Em_^6ThgmW<>BT=#@i^V7sI\"AGF4b.9)pMfd%kMPX2ACt5&BH89
%jL9f%8kRf'KT0Mcf*b!q_\@plN]Ad'mPle7PjY#oHcpV_-PC=S.F@UsLQ0MeA(\k>.M:K^e>U&Re0n(O)N@8WhP3QFKQ";lI5-*O
%5J.&Oohcqd1R;de[oA0l'qVLLK;d1g5C5NgZ]#g5^-^>p;5<lG)MLm_UG,2tk,?\raH>!(-&rYNHhg9U#_'p.6WS"^N#J+Of&VW*
%H+3L9Pn`kuk"H+#_1U2uC\)n^"H@/T#Q&odis@STAFg:E2a(f:hTekD^$b[_Y@GX%gIUW_rh_[P3g0B-ih1BrAP3nNLGRZV+X>U-
%P0@j07#8br4Qq1sjW=auVI_F$iS3DB.tIlZr1/':)4'NOWe+Z6Vr\@:=A>o0_KcS.V9Wgt.!Jl(P>GC2ZH>l.MK%@ZJNRD6'\g;/
%*"'4OR09m2ga9T--`e;-`r!#j*WAHp%Q`X`/t[N%`fTTW/^J_sK]o4-IIZil(Q4K,4]U_f$![7`U61Xh+CB-Z_u4@/3;J?NLY4d_
%CN;E1CC#j%Yo?:Zf:);I=CN\;/F]`mL[CfUgL[nc-B5]o5FYN=9,3]o%1uN?81=lNg-A3QkIQ5E*:@LlFm@q09`ZG0?*%@S?g(_X
%&q=*AO91tjYj-`=;EarWF6^tfI)UI$.G+-*Z=Dk'D$)fD&mJJ!\mUeC`B.:Ir5tt_roi#W9gQSPJ,&<onsesObF@;^-Vm]:2tcZI
%55scH=8]NQs7X_5S,D/Ns7kK^!?Zg`alh!RIU"LcYM[!A\bPaVo&Q_1p#><'kKE0Uh"Hd:q:DMlkN?J\O2$!dG,gW&/betfKj24$
%3Egfg/&nLQcXq<lh_G+!?H-p\anXi!GU;h"^\IEraj$qPptO>ge!FkM/FRi^ZM[t*na"BrLR4dnJ,/7)jt&0Mjm,_BYW1&Sc-n?f
%d!)"Mhs34>>6J/"%Wae')?(Xt`W)/%hk/9?gW/Fs^[G2fn+(s_+)`4ij+/;m)O#)p7GucYrng(lH1R2IrDKQ/o)J,=$Lb9:3r-7d
%R(p9/m<na+j,ZD&J!X6O?Li$]d%;;MT:Go)3i^udQT'CrI/6jOn=\/mrB..O?^CB4:S4ZIiQl0"H)pJe:LB]`>qY1M&cY.][m'E(
%bs2*n"s89jc]1e-T:HHVF`mNXc.U@MkHjkfI/;+0p!'p`:20"Y2r?gHgc:"ZIklD5cf).(PI%@[5*bBV%kl-$I^3C1/3a$eg!)PW
%g%*\V?XJ;,F+*_fbfK9qbnG5BoBl,@.dQcjpt$WYk2MRXcLMe(5Q'XsGmSo2I$&n4g^oCuqY'/mr@L3;I%h(oYO%_KV9^fE;G3[/
%W$(nZR6Qh#cJPeI^WGNc"'H/L?N8+`b?)m1kHDY7*<1Wjp?sB\B=&GM6S]^o/Fs9t97u"'-XjU;G)h'n2nNlK2TXXYYgAl$/\Ff-
%q#9l%+^Zo5H[n'RRf@XQpbh=dq"0J,[\#/BlMG,=0Xc'[hIq)hR@'PsYKfpmPJ:uQT5fq85a?V#)_:o'rUH2I/AE7@qm-GBeRH1>
%<qjH#H%+d*HfqMHo2EAsT<mZ.U^c@t0uQ6miVkF`)uoW'k[o-V=73`m[Ob">^_DZ1=-qtY_;hPfQXjSfO2*R,J\c3u_qWaQ!.FK$
%XiSbnIBUfalPD3\05k6Y]j+X#nrNRTm94N%JmKJ3I0P(%jVR)m([NW>AFh*@j]=*Ahu#bfQeUW:05k1Q@0[e%8ROd@P@.7H>5[Q#
%]-s9Y?l#1gqgE4&UsAc'GL>dOUp[G5hP^D(Qgjb$b<Ps2]_qX%F'5#XEPF@!Q;rZ0Yls$.[2Zc]q;*7=I'No9$Vnm]kgm3/G%J&P
%_KbR(@K'*k\;.CC_W:^RX"ARX1Ygj]"TQc5rrZ#=rlq)7\NG:m`lLC8'cVNADgjbCn`oCp^O3N*mZ-2fU2l$#q2Uf"pN#<LpPq+p
%GALD,J#Lq/n#-'/_7'6E`N+4:hX@FsJ%pQU2c:;d,(f(uCBO"0?.Xh\aUfGgR/\7'p@VPN",t/'W3-&FIfAKhm.(:>h8SRWoB'S5
%Q.G;sSUIm"*Fc#<%6_!O)H7o%CSAfaFVX^=hF>HFo5gcrdam/*ml&B+pXpj>GF*.#H=pC)'*:;$Z3"UN25pH>=T-_1Q.X"[=b.Z\
%$T84@bq@WZ9[PMj\mT/&5.b/4d0F0?TA?[mqSFXq%TUam(Pu-6rP3i#'_[!<beD^kkQ0ukg=q(<j5QN\8,^/.T>+qVnE7d\q4$L*
%X!MS>IJ*F6Nn65Q]qimiPiLtE'm0Qn3TDOI"FO3jPZ"l*fO0#o4IJYde)/d5D2/5QgX%XJa9Lfg6NE#K("59\X?d^MX$0\s>9]r`
%p0hs%A6;0?$.VR3&?(%)?^Ah6cea"$2if4uUZ_A@bWUcV4=(?5!XaH/]tC8UV%kH,M.UA2J"1:=q.'LK.Gs%.m[;o+3oX/'ag,(6
%1CI$VkpT#VOEb]mfD)TLQf(5VQKrRI:%<Ru2*rQ#K44;V:2gZq^e9_^g\D$qG23((Je<Ga(=@eSn-Tni&!NdoS>Wl6R%=AjS?Kdp
%!CE<+,s)#oL@]m>(0sE[(:^ee80`(,#d+*4F*rQ:%70qoP1+nHKN.qHnt>t0&VBme.p;iZ83to.QPTR9BRp`i5E$<U>:AIfWfZ5,
%DWQAF]]B+(KqGo0[fe>m)ZBP1L[_D%lnjG,U$p9f7H(d86^p9S]t42Si;V1gRmB'T0hJ;BfH0f/>..EP\V9bKFgg<sUXJU4oL=k!
%Iq@__\"d#`n)kPr=+:9uj$3J/5E8C/@;>59<ps+ATE!>NIsmr,3-*gGUi7(/d2]SUh+CD3<m'A8L;Jj0\@o3<G1%LR'"5NW1`CUP
%V;FQFA\5iGa-pmg/!X/fdcO%SZ@ONBZN%hUL@*H>'Sak<=0cU9`ij09@G0+#HNYY3p;/NnV6fm<OA<<SOnK$6k=Vd^#eQJHoh<@H
%RGiBMFPIOib<!PVoe#l+Cum.r$CKnK=XKX$>TTP.>rOo,Z*fT>2m6HZ&<6SjC`m"C9$\Ug7mGYRE+/"[<&C,l:Kl68O(lER$jIKS
%LTP^Xd_Jb?S>5+i>eAqQm.Gn+c4pSA9nk/=+-9l7l^fgh+M%s;\kNQRGc@i$pu!k3!Z:\e.#BX'pVS/Z7[*i"R)[2kV<-Ftj1:6n
%MUI-fq?bs<"i@Ho^60faG81Nu@sqHuC>JT<$cEF%KH<Dde+NXTi&!4us"RA*5/Y2>YU:<:Ed6THle#7B*'B\3#f@6V/=-'N/<`jr
%=Q<m'_MFu^"AGZ6aHM@TQQ!H@!TFAbL@'[o@i<oLhF"NMj9UAg49Soq/()$P826JEKoQf(E@a;i#`VB)9Uj?00:c6iX<AN3$Vt\L
%ZLo;X(,mK^:JYI*^8>jg#r*9T=,0<#YH-VRGh=Y_R'[9.)kDT*(WqCd/BcQ*Q/V3W;=QUs,+l+Pn`HZjHcROo'#J/U's^ONqDc^W
%8AgF%b4\>g<k(rS*#Zr-$t_'.di0WZ."mXI7,a*P#aG1q3!C?]D.b9N4GWa]inJO#Bm9i_06h?R71eJ-"'M(GYr3b[9]eC%bM7"D
%V$q-QMH\qg&R0?f3I#R,D:9N"T4GZGl(S`YDjD<i1,T)9=sf>aPtW^*NhD'g)_=e4a;46n$<G4,SIX#b1Frua#*A)S=Mgn6N#lql
%oYWFJ="mQ<Rc"h"OFh?(dbKOH2I^P$#SIo0!mDUmL,'GT16sTp>8Z:%]_mR$3':BfZWIr.SD*nW0Vt(=GZM"ga!=V,rG6m_+icTo
%S2RJma%=3f=Y&L"9?P[EGO`+M&;dR1_2j$J`ZL/J[^D./HR#hMOKS@m6aU7LE16DiVI3)!Mn2c%l?.h:7KhrI7KocH8&p-fM)bXV
%*%DFMM\1@H*XEbN%ESi"bb9=sr`s$m8C,c*l.NeXEWWgL*^8Q#:qq9LdOm>r#i[tuAg)'>WUbd[U0nISdX`7:6oDr!q-s/$S-&m\
%CRW[\-?_jh.R/9P5*3h)b>eb?J.Woh_1WN&\Ng>>0f;HV!GW)Lm>_VA.)XHm=o>(,,oqW+#M5u$,;PL:rWrl_`;O[]XI)"PfcsU!
%)@LXHGd8"&jcHWRROfULq&]ff/MVQT:]Z4T>;73/AZ[fb4`qkn4OK#iU`%64QVB[*j2'.V#TM\]HSD`,Z^\&(>VR380E'i,WaeVl
%_'MEU$\pWMo&0hr9*Q<h=$:'9MfmX-[$5f;-f9-W%%Ho6WG>:C;R[ZZKF"6]Hoa(@SK2C1/V"EHKau=83d7622,bpP*(<V)Z5JtT
%)5C=-J-q:r+c7kl0pjoib[89n#SW5tmmk!e`AWte(2O1KB5!Fp&'R#!/?&_Po5g%1\M$]k.t#:>s""C8hKWk(>bPDjaL<PFA@Rf'
%W%I;,LAS@,fW`DK/id[)'1^kFlacTHJFArmU&NKbKWt"HOY<J0,"1.@VBMF]fms'34f)u2G)&Fo5ptiInG2qlJY^6C#uJTsW`G];
%RJW8F@9=3N;[XZ$`FIUL36pO`$VW4PI2fK.*_K\%*:bZbgGK*IOf]EL'gMF%M%>)Amm$Tb3m8$eY+6.rjuEnb^J,o,bp;$d#W"/[
%!fTDqr&:KTnJ>YH-k46g2g#W[F94,n@$%(`<HPITpE,!l"cG).<9We4^IXm!/O8[!Kt=XfWC7Xq/iHL)phsClf^c_e0pK^^J1MaY
%EE[V!MUl*BRcN:[?qa(k0\63J:]M'[.2JF#D2@9ea\P%4O*uWL?U-2t`>TZcPl;0k'0N:U27kUQ?iMRKP<!V9=OI!VTs?T/9`\sd
%Ta+#P*D%Njl67dUSIGN#L@E1Rq#<^JN"$*+#n;B>-V\?E%6Uq;*Cjd-^fOEW?uW1*"%brjDEL)up+[ZYn4:W&dY\<SE/*&j5dH/[
%eA%=`;Mu4P;))OO^mEK,PRJp?d"ka/qjlme5+H*+o*INL5+5l1a/NKh-]I$^[AO`+f6dJ$:tI)V&>.g;q:is1)3*PIq\Y7>F8[1E
%?"s6(+rKVF6(N&*g]#73I\k2n+4o4pLu5b$HF^m7%L0UmM16u`HB@E5BDm"/!KFr<\ckTr`a2^:mZmOrWD_rGC@`O=1ZpFORk=I"
%cEp5$?E9\IoF(Tl^&Xgugc#ufA\cj4raEEDq;USfM7J*o)_Gg/<9X(goce5sG`po=iM>u#3m>?PQB??e>.mf$<a+s`1Dp%K5Q0Oc
%#3TT%]uRl(]"QXV$K][DIkMq%ju:9j]e::u[OQO=i'bq4nUD4P>4#AP2csh%9<XWOYL!t??2V1a@'SQ<dt5j%Cm&JoXO9>oh>C`W
%UWrh(7.Hm>MYTD5IYWeA*jPMkcM5XUs8Ph"IpFJ(r;HA!!H%j"#Tijo%=7troA;h2rKi]29!<d#)g!LuiU85g^OpH<62tigq;906
%^$7i]%I!\=J0aUBER"N!c<_D1dX^;1a"Oo-X8%`TrV>B(VZ.G&>:P3uF8rnhJ,YJ,s%Tpj%X$QX=8gUVrqP$PrqJG*QKuLab:nG$
%eN`>1^<c]JcMX".(:ssH<:].bMX<SF)Xt4s\omRZJ$m7VSc3JB$5Sq?m6S3\8YPeFhnuB8?2&9BNb5+p.$M(303F2-T3b3um"\8`
%7<9]UFnaXC9"@-!:7P@2mDcpp<XK((m[3-)(m?-'C!bfhci$J:d[`Ac<cCQY`:GePiD&\[DrRG<X%f*"HMpIFr[/LENQ`&NZEZ#P
%K77I[s/D2r%:?C0@=e<0f(5R(>a[QhG6XUgF$=lAR:b_rU%]HTSR<n;690#@K;hK17b7m!I1)$\^m\"@7*;'Hr-c1`VqiF96?6]_
%3U!ri9a96K[Om7fX7.GCh0uV7ka!T0l?7BgS9WUF+Du!'9=S=f(),LXq!d=RJ"^Rr8:!M'@!&sAQOVio?o7(k$a!a55\s?pK1;i,
%-[J-2NP7EjS-\>(ijI;h]s`c>T"FCZe:1`_aEC%mod2_R%M<rhhAe?Z,BW\!giXge6GGj^<B/.l?>jduk*GGm.hha$5Pl,IEkPg.
%ef4:2TYlmZQ/PmKRSFZ&IkUH>L>-&NVWCo4WY56Ll#++slrFJX6+8r:m#\8GNCp%;Dg*f@@s]6lnJ$0(kg/34K!lTb@\IdFkmSKD
%0eA:UL&r=]ClRB-QPGT.-\DIY40`/gH_p6=JrGP$-s5[MnZn+1*g]t&^1-&Fg@22lfIle&EBD6imUUYAoB2PuCqJRW'cN0AA$&7*
%jP`%,l9JmK<nrKM,?"(i\W[sh)SqPA<4Y=1rV?iNW0(p4>5e:#@AV?JUu>t]kS*'*i$VGcSrn7hK;&n1iJSOi2a!sI>#;-62`C3#
%RR`lMp7M;eBI1W@aV[0g4VlMlfO/&,C+#\Sp>7CV%akBOkT"k8cY/@lbK$Hodr`O07#6Otl%;_(Y"u#on*oWl)jPo9>^N?#pl^*i
%Pf!V,rNrY5dY$RTp.2I]L2Z]e`V,'eg$crW:piI9lhe&CUb?h517r8P;bW9:fF%$u(KtBWD18N6Fg$3)"V&ek=KHo"P[ed&'A;EP
%^HS(Rp7'b7Z<eS88)@/_#FP2qn9"!sa8$!E'F^3/!tBtPcP?sco;r``-F^8Q,G,"_`WVIpA\7jWUCPgHX$*9XM0_h08%"+=mgi[j
%&,;_t7en,&ps<E5RCIsZ16sRM(T"k,,!F_Z)uYWIK?)Im%ipttQZb)iXS81fnGP>3KVUKZ^@U--N>Eafg=9qCqaQ-6nn%]1U&3R@
%d,+\23TJ!fH5.W!Q?FL.q0AkNWRh[CpkMnWh*.F[o_U4`8"qSB:>QA^D1"FW%Wke<U[rt!@!C]*6-pA`ahCqr\P`SsN4S&afNUR.
%g"0nk^+'o05N9FF,,="p[_J<Fe1J_qh<4Rj^DRGsBJ5o[]DLb%c$H3]U\)TF-EMV_EdFNZX7tF!UCk6Z/2S9)0.6+KWD\T)^)7AR
%a3pVD64;ebL.1"5s)uJ(V,r.a]eb=+h+G9e`U[N^:8]%D,QGAFNGa.)`R<X]\'WTuk(hn^fiut6H/CM4[9M.n&(drX/I,`",@:'s
%Uf@MN);e:-n5F,o,Og.k&*CDfCOap68(.oAmU*'`-c&c!p#G.'Vd"#!W26,bp@#bgIjdGG0;shPk(qRXq6l3(.'.@@k`(PJ(u>WP
%*;f=bdZKJ\_+uGT2J$/Ko\HcL.kS"(7]p=B?.X/4RW^59s1.cu<qRdGb'0ZS3QY7qXc_]ejVs>3UX0knWo#c5:,:4BZmsE"'Yke]
%X#DI#hKq8XD0l.MJ7Rg(9(uQX7!$+KCWs`oG2Q-kk<V1@OA9:re?E7qij)Hek%^sYK/S#NPu/3:%"7M4UVaIiM#I/BS=48KX.,m[
%83<.cMLS<1\qJi+(\</B7MZ>go>LBf1hKYU)q0<#d/?+mNnFYEaM/fkNmdB@6P&lsR/UX4r5;)gk_D?'%=P?IRdn2XD>.h2pQ;V&
%9gPNHep!?C11$sU8"dWZHFVnCP>1)_MHUX4o.+!3pJJidM`F60io^DdbMD$b"T,'%U"*n=D!E8%\Q.S'pV*s>FNZtNoM_6!!V[JG
%s4JPUdfD@Rs$-a:8<6!FO71(*@B%Qg6S7#_o&-D]V=m\:HBmqQf[9Kk!IN=R38e(0q75?OgKL:UkuN6MZ!kM'/Hc=FI&=/_#NN'.
%T(K@$h%-Y4LG(i,qYZa_q,p)BN;FlBp3B"GF8V_GU]-g`8M(M-.uX][^(_ed-H"e3<l9GBU'/T2ou'B0deLt'*sk&g7nXCepafZ*
%)D9A[LYp)ZFR*k^2*XM=5""bbU2Ml?@/WmX$$9jSs1QK?]3mc$ilef@G0+:_p*sp.@J0@hHa!)Pq%Km^DeNa)><f8(%e&U"a6@$A
%?/-TAGa'+qPJk@AI2DL<VDT!u'>rJYYuV_UUFD!u4ZLsP=aF`$[52p/AUY3/F<hL@%_UiXe77Qc@majoO1)aP>[b4USiWnn7/,g.
%@3j:71a4a,p1\!t.+.eS\V%LYh4s:%/N:#Dhtcli59l<dVbAAA0KU//bjA0RYcb[34o06p+&*C\M=/KG8KXh@pmOu>pWj<F0RZ9;
%-Jbe'U9^Us1fHaD4)o9?2GYE,BDH?:WO0!iYH.RY-/I*GHp,o;o/EK\HnFm?UjF:IoO2VMK<HTWj-M6DRU=+e4AE.>)c&*7QNaab
%4PcHT4d>SQnIXN_l$>"tN3Bln3tjhalHtA5PCLiR/)<.34ic0Nm*iu/*'P)#O(Y@YXk;a=H8cnI:"dd"K3Z!6^](.B;4Un!Qo?@5
%CRIID0)%:@A86DS3159^:$8g]"[VpT]?_7j<c0_Dg$S%JhEX7Yeek$BL?B5+-)6TkaR$tMOdWdd0qL#Adm*l&ktH459't3%<IX3/
%7V!`:WT@<),8QdUFiXOWTQ,YJ<W<=@?>hZ>jO^@`@4+)B>fRm'M!bE'V6/&24V7P!*]0Hn_%@\NdP!\[_Z`+q1oZ\F9ip0l`m(X8
%p!%4A[(JD_at?19?I<$Uq<]>kfm$fKcEsbj[Sh>7.J:8M?;/";f2En.2&u;qoS/Ju:f*a/I7lKQc\("VDWaQi^!]?\^:q8nb9$#>
%M7:`m'?fh,%[EP&PlCT%q/pm7'&2Vo*?RqVh3I'S@\T-j5F6BC_eItE`&!\8VN\]mk#.&$_jB!:]kYc3R^_GT]Cd/Fme!rKZ:/8C
%OPII.<p;_R@]:[Bj>O>ChO15!;N4(3VAf/Md;bJ!<LN3>G0JU>G7R024P?RApY3fr6)58hAOU_lBm,hPM=bU=kq9q&1Y&<`R7SD=
%CqMu7s$Zlt@fA.rSMulZ;6gcYPND1u80i7j&b1%nOiZ[&+"NoS%r?^RIPN[.GkDhT=Rd/of_+K,';'X7mdVltRqoXUTB^Hr&PMcY
%T3_B%"<roN6mcR7=!H&2b[G$S`/9[kLU_S@rQ#0ZbcVdeOh&`VD.GhWerD<JXi;TjPK?d7n`&LOZ?2F]M8Y<Fo9&.tqKg(n*hPjE
%Sl:KeBR_KU#NmRGc`HM'e7/%nig>e_LmpAc&MId67omn[&!>BT^[XFl5',sV2E#`>,+BD7c]LW=N($Vp$^jQ^2Yn94c?,s.\`:.e
%A:(n/(YLh66mI%OK4JN-0`;hKgl0KJNb?j:jJ80E8'Z8fXN7qlFWS(1]M(etg5FY*c/X*Ze(e6"4->;^`a.XSD_FS;(T1o.nl9<P
%;CuhR7r%EX5OpjFCe'pEf5HfF;1'nb<k<[:oG>L?A7VSlR#H2d#EpsCkfi*mmHT'SQJOGFQ[7+VPK#msF]+Y59q#\BITb?pF:W$I
%-<F8PGEWuPKsf#jp\J_^>rt3=bWY;qP<8M#NQM.2mA%dunprZDg,Ne@T(ao/PLg!JFI-f;:-P7<*[ck?R_$)A,:;a>1dEkN\Y&4.
%]/uCW5C9Q-P@r^Nk_uoPMpBq4QdMWc[2h-d[2ZMdA1["($bbcXdqUb/3.8>oAe'$GU>'<M0"QQ.\fO#K40bOUQh@3=F``'jHLGu'
%UP7_p2d1JjCIV[Lh@!$kD4RP>dG@RfH"un`ZT9tUR!tWa4`&ZGN7GV..6DS,SFZ(hhki=*3g$C``giURQH>u&K@m"`Fh640T=Tub
%Ce`_;?Q;iV<hd'%eUtQheE^%O0\,E+`MXr]K6<VpHKOL3Il]KT]pgnj$a"-n:WB9`%VI\s;b$FrHE23eRm,J/T:\;giecpcao9i_
%6f[iV])5H-dk?bXa4$SoWAtV@(Ta%XfCI$WI&>SbZ(/qdR?_:RFs^'^cI"I)>O#[9k2>O423XY8>bAPefdb8]N4Ln<>d83[>+*S/
%b[>/aEd"=(\MUot=h^?40(.c+X!arlZ`1XH27mpO<h;IggXr%0XNu$$*sT-*frDWDbr5<?*bYARM+pOYfo>[G>eK?-bpcGjbcSXi
%rOH`^okNoFAE7"0FZ)%"G?63;Q$5=eF,cEXk5)'janaUhV)5rWNZHG-qth?(Rh*4-r75)L2h)fs/^IekVD%,)g6')EqF2OTbeH#?
%HXSu,(0cU@gdW+0IHGBTF5)"HfToI$Kp.pJ@H"e'Guu3,l#,IfIXeuVDa3*uk3&B*A&<(I``BPrMm:Ki;2lSKAf@qtK<&mk0\MqU
%]c=QP=F]nkTkP;**i#]'OkVm$>[(t#/nTI@qVkAO(L=\f5F.5(-^e7V(1/_]-<p;tV5<F9fTNSHP[$g%^0NAY26-&?$i<[O4l'Bb
%/A9&!CJ0<C)^?Csh&aMb9X,1*e2isD^3;;U)8Fg2Ru/$UcF;hnh,\$2E`]Cq0:e[MQec]3?;;$>+-qsgqJuDoI.q';aO+=C4+8Rr
%F*#G\6_6eTND7$H1NrZ9;<-XrF(l=aUi!JP@WQj.DP*d\c,9?gF8]phB'p@l"7s1m#d\3AgLb6upd.ZheWW>$cc3mm451<nl%a%o
%[1M4.jiWu9hY*_NE^"QqP005CP%jgX>TPu+?$Ym5-038KZYN9A*Z6eo[G4QuXS"G``nJ+d9j1U+;gk]e4k6lbEiNcm?5NIHGNhfT
%>NtdeID1(cDjQc]%Jt!^_,1RJWD2KC:YR@c>!>m\e$DPECs4cdRs.$U/DOCNn`J"TBXk1"]dr8T6bGJADL94aQ(`"(N\9.qmHoqG
%QVL]Oc,T%B>Mi)dGgW:>n3gjVfLsIoFM*fRD9[F-9G-I"CPs\Np$7g,Q/#o'`7O/&b&sQ3=fLT91GmAAe6\o`C8JC[X-q1JD`+/t
%hd7sBm`r!/$c_:s0c.7L''YbZg2X7%ZW;&6k1AIi2c&a4S(HotNJ6s$qI-'u>(=2Pg0=%4g2^\CCTk@TSgiN7*:>EFCcpPoJ-7bk
%p!1eDdSfpaF5sKO^Nn>^5MdsP(,MH9:;KRS+)NSWP)c&,SBXbu''87k-Q.3>Ine)&D*=:=?U#nkT.d7eQe=\W27rSYP4D?Pc.$(?
%kb]D!>L?EJ>Dgfbl1j4h9IIgY7f'4Dhb@11>8N^,X$Jc+*$+`.]1;C9k5MZPb]KEdcEbVL)te$i?'rs0haN^]qEjd72gbAKbH3DK
%]\HrWofQ;<lM%_2/+`(2p6,<W[53;gBt!H-9*\[>Z2*griU*JN1WS>'mAjE6A%T:uGhuTImqqD:kN?2qc>QA?SJQ4F]/r4gLV"Lj
%BPdDo?b>3t>uW`Uk)O>+Hg<U$(ON'FJk*\ahVXrH]@ZrGNriC%pWmH8$i@>igR!P<1NIK>;,=#!o&k.8n<-t7*6+N3g0mljD\"Mg
%ki#rkm4NGo5KKrJAKD8"F?;Kb4F52bc5qmI+aUf-GrI^3lp(,<,59X(M489VSfE#sdko<@25]M3kE_0gdnTYtS6i_KS#=NKoA-b7
%b09\7f(*PFm,;WlPE/Do`U[nqF"MmS13\t4mT5>0$`/dFH0TQkjo"6lEH9p\YJ+>q&*rAs6#GZ?U,nKd\XZHd=Z"B7o!s'qH/hXq
%??W@gfdjIYs)N5rRp3RPIQ])ba.B/ulcf<QnbW5c\2TO:]m@"_gY]Zc0<V[#Rb@N8>I3$f\D<@p&%CYUil9gPH7<m$T!$u+h%`!j
%pQ>@J$r(fXHFQkc5<h0_^Mi9Sc@]+nd>+L<:%b4J/=\rEcd/qY4*.:j=LtNOT'!/G_,IpV^-4^8p.L+=S`3p`1N@D;\4I[4'a?b?
%-cOWbj5],fq;Sp:>pu;1gr'*p9iF+=RCB$dhG0cG(8"sV-RGNlDI2,D=0,]FXrOY&UahArl=j79^QkfhQWJh)CGd9-V3!db7qXW=
%c`b$*UaAl@X0q!Lk!cEBg?mIn]D:"Rana(r]lggq_t6A<QZc]\mUFG-cL]?XX#JKU^KtH6c>2mF;eW7D:Y`t_^oT@?YF6ET`7eA#
%q&j^iXk>^Q[[!C@molQ!A%fS>`;ArXD0ag;'fX])_DmErNmAc=3pg$[Q_o%LT/Q&FbFQL\2^7:IDBaOZd=#8=[X.Po<U]tD(qS+e
%Gd\JBjaA4,3@k$@E\M2!l^^Kkq(<9lL-a*gL!F7h#0Crps7iDZ0DtdArHJ,6Z-XuNg>1f_GX9B^[V)F'itl3J$N8]1KD:FPQ"TIV
%6bDE>0Ld`ns(A0J>j59>T1547Dd32Tk*`j#/U=KZBQkgnSfRXmI)oq4'cc=T-MMc90=8lD1uCaq&HG,OY[$_qE@nO,b!WlLrWGm8
%G70te:G$hm>bdW(ei\>b!,`_kpACYehH7Ja>tR1lRk+.-Q^-Q!^%.4,I$Cg7HBj=R[kc@7<@7VXfL2pka+aKK`'8"%ejQ\AHC?7h
%-?,FF3q;.#.<A@[LEH1^`+YaH3&Ws?hW'1ODbp*H)u,Kf@%u,CY3je.V-N12.:=$>ct>IR\DG[4-:S8TEIoMI#ADNa-i.Zg<2rXA
%\[JLld4"4-J"S?[cDXSnl$DpWTN&g\G?PleC`!YZBD1L53Z?AFgXY87lFi$?lP7`5NIO71!EILfV/F!<;q]XP&Y>$DZG&EhZl_(N
%\b(dn5HR$i+Lh@9AY_dOIm5m<Ip;7Q1d*HR=*DU+GeS!_n(*u'/,hY<&@=W7\([Z^\)",rkZII_fFN[mT-boa>.Nmar3*:TT]io9
%pN6grf5[;DmCVqA&2Sc1DhP^.RM!u%NiittLNsa&dtGdj/r!K\6*<(JD#aHh>mt;nYjYo3'hG]o'%6<1^UrFo4e$-GiBbmsdBQUs
%,hB$h0^AYVP(-X*q\QP`TmR8Aeod)PE3-A.Hh=.i\X`Ehqm,6_\+%EsK_leKq/[`sKdk%Kmb:=j*VRPEh]IL^*VJ(@L#8Ej#6t!1
%')YT+NX#^cH@N\@"JOM2=1H^/&Nd]slaIL%=.)<ojbHpI4tS)gPrr+oj@FNX./uf,3ejs4Mp1Np\0LY_A`bD[rr,I.Y@r<5.c[?(
%iDBLlVFG^)orG3D_4?(,WVnn0ImKqZ9AOcrd,-MS;>IZKor"9&hh`DIp%,kFCBs.Hnfq5<I^-(./?dF(jD0B[YuR_]IUgO7>MqIV
%L&IcKc,1tK\L.';kiBE3o-N:XRE?M>s%n^Pjm(+q7829MohWDW^I6&=/GD:Gd-X&OKb:NO8$fU1f;63roY<qBN/>^GkOG0rs2V&^
%pnA8s]ifS?>4V?QXG^LRSUT)R4WQSR^I`<IRn#9DZ*hdJg"!siii\e3>"U*P>KtmEF"=PcM_*/uVX&q\Db?R=B2s%"EPAi#?u<(5
%hp!2f\q?00bDHCGg9dr[@Iu<.RHI"K.^Ag]?V%7MG']#%Slhk('!(nlDU<.-T6f?Xfh\\PQ*YR\IA<$`a(M#/bdCflV?reeDL0:4
%g$33VmSh]]dUKN8hX;b7cMFs$L5HI])/JLmp!T5@UhMSaA%26tBN'pmFY6F,mumKgr8R$F8)(0$-e;UFpPG/A]G\mD:(MAd>NI>/
%_t_A;d:$RcpQlA1PufKd<3;dq3B-(;7\43I-$0)<Z*lZ>W<].dpX0Su%rM/"o7hX*,dl^I9I8#NU+O'7X$V(sds*NeYu8#@T?O-I
%f&Q%!Ea$c,;MU0+89CHddZqYc`l2i&[TY-q?Lb!9b?"@QH>:o2/i_\`eC.%g@CMbA9Q/3/F^oWJjSmiV)`BCB=P^)&6*=6AmM!]C
%Bsnm`5?M37RWn)jZ)$]C)%Kflm.N%;F3\U@\WfR/V4M!Gclnk`lZ5^WPuPX]DX'AimnY=Z4)<6em%S,;=.7gQ<RD7'h0t0^?'K8/
%6ns#6j)26$BhKC[+c9d?<L<!H"]T?7?K]k%:S8NcID`^Y*b:QECGWLlm&#\T'Rk;b;7Hp,@h^;7/H-::aK>91eh4:U\p\lZqkQ^q
%f4'L`pr\D0Ch+>NB(L<(+6[`nD70:^pqWdFY*d3j9%h$;e1.jF0&_8h"ESJZ'Wii#_sBoDo>p,bDVS,KlD9`hB3o&8lLNe9[SW?^
%8u^hGakCq#E?gmTQ28V_WR='f0-j(2l.fW9WDiU>HhFa+#dL1^GDo]I?AG;dNHfY/34/!pVL"O[1J2B:_L-/E\pC>O#p[nUfgdiA
%Og;-5F,=eDG&FE%>]0*]\TYZekQD\;A#Zp2n/e(Z>9?:^J1>uW(^d7%f_Su.QYDg9A(P%\5?gT_&%&$fmDNbR5FKaap'2\Eq<g(0
%:`l5,<Assrl;k!qGWkjD<J+5RP+.s*bbo7AoHmd!eeU$+DKjL,*3ZQ#/(#1?dBUHOI,$TIk15iiEa[S6G\6-X.JQe+T;m83f%`n>
%4erR.l0>EeR!Zem/mW@$ZR#M1*4A`S[=1+U>kRjCDc5?ckk_n[TG#,QWZ5TY?Df;1f?"pI7Ms[@bP'!L^2I)I:Q,1Rc=G>o@]S)=
%4.ND?o\.i;]iS8d3gX`F`I)c?Hap90b0!DAGkuM'7!9,Ghn@\PApqB<R3q1Ml2?=<raWL,4F>f,/D&M:EdE9$m']OK&),?dMu6<n
%QZZ*,BUZ>rOhD,Wd`F,M%n1A*X^'8i&%l`Cokc%CJJk:]csh=`G'9Kgjn`fa[*`"nD0Jn1-;ca<3N'9=G]N9LXG+%1:ne1(*YWg3
%js[qCQ8ci`aMLWJR[edC;[KA4guEdX`Z$'%go:p$fu80M"se^'Y@F#6V#(4meZF"<0je*37%RWrMdK2t2V+/S?i:V+qFMQoMkEX*
%Za[EWPZu>boDC--k'<YsgZK([e#C?i&]]1Q%N3f:2sUiPihEsL*,cphR`1'RUn!98A]=Ss6e^<fmjIU=K.,P\2_)e39lk;,]c"\K
%:`/YsRkbCZ;im)Tm`AhdftKG^YNst,S08>D8e71l>KSu";W^q@hK6&:Z3CVpp4-\j\Pd*`3#kIbK*fT=8;,1D#^`Xn'.i=6f>NT_
%DJ5]=?4;"WpP`Ya6$^7HH*lNe4N;_!@F:^lb$P7H@E>cpKQ<tjr5ou3*+Di*`p,B)>L0>t+VN';V;X7HUUqD8i5W7hqs2.EG7laW
%]>N!dJ?Rqi]FdW`3(DJE?c0'0<&jR%E"PX;NudH(B8$$HZ04XJVf6!hf&9]&dQSt<?dJuqmt^cYd`[![olp!R^=Ms`R=bR"X:KN7
%`^cZ[oc;6(1a*dhhsE6gbKBSsS)_[`&,Yq$mq*$SB#oKIF>J*I)aiWH`^!#a':)c1QZsL-&P];)DK:\/*r!/-*a-Fj7)N+3#lp=N
%i#A:[6f)(hUOS7?q+Q13XbAS#.Sl=Fc6)R(I0AM8*H_stOuRrR^*<34XlO3hH&iBZ^!8_<Oj%2![;lT&HpsI@o[Y7\`L^!Q(<bWH
%H7emDcS$PENT3P\HZ?G6kdI=e&K>5u;L%Y"NOApT_f*mk%;FqVM">5)jO!7ie1B:+o=&)<>L)NYIP*'VVfp`d(uJ5Mh$9CgD=8B<
%G%n3rAbJ%>XO1`[O-Sd?lg-`Zf&(1RA,FGjj1dKm$#dBgp`-4'6ha:#Y]H:`9-0p.a)'H(<`a>N2rpjQ3ZHuBL]ue>QHi9icJ@o&
%B",DAo[s49Hi&7>\T`<#)qnZRq=NuRn#4\-D8L^d,#s(.%pb+gpTDL0IKc2\JSTha*9[76ZBqP^oZicga1#SWBA_.k(me_&p3U`B
%936tI)>0;MKSn#g8,Oi^Pfp^E5,RX!C3d5@S:2g6GJPQ3Ccj`'Bt95R/IfrOhnhNlg^f/A62RGUmrCP?65V]7a?2-#DsA38jMhiN
%E(@8!>3n;`>i/Xjn]ttj<F`2S.oCdY2tWCZdmh[BGajbEAsH4])>5rTq_U@>P-97nR12mY6U!KdDSYcZ\d.90_8oNff?.Eg[T&:K
%SfTi'bgs1#-*KH^%'a@a]H?kn14T&DL[cfF)bg0OP,Y%n[Rb/r11ItfeZ?j[/6%5!L"O;sbj/@.jl@KN(S\HVC[`UH]qua1^tRet
%nu_5Bp30F_`sLJEFn<rj":VH2P:),u(V.b;3V[#RoBdF5Go[T[NW$P"BBVq%%o.qM=.E!rFr+;<D/;@!#5!$[Vdk\SV-X[AAG@6J
%LWmA^W6@Wo<NJ]F5D0%>A#7ss(sj^e5krSX/cqs?PM,ud;u6dKi@#@`i[;"UMo&[P6f(D9mTiVOMckss%t9a*gFBtbfrTBdi]Q5j
%3Ue2ncOE8GKNI7W+O`5a]`Fb4G=!L>VKjT:)#7M3Z""O_X66hZOeA/I)j@>Q_=:/RIpTX^)-.YFmOfYs3SR3#XF;8V5Wl02CKJ9F
%)`)<!&(l,KZsU,D*",)^ccLo<adGiMWgs%/`Zlu7)aAtJF7[G3eQg,.&[@>]qh:(urZW771@G,I)lNBOCQ)/]c%apmAE'NK-,.e>
%lE%XebdGlJ1m(=JWUn]DB9o`%'*1^</'G?C_\5l#o2iDd=nfo"jgkoG02g&i%B-ZhF6(\?*=_'=U&23`N@h*oL^G)!*sbJ57Gln=
%b2liU[CTXk:97^^7YfF_>J'Z:&TMJtn[6>O[EX>bk]=M<0h:YZ^I2^ZZ^Rk8NqV/G:sj\A$CJp$jUW\no/dbJrB+f.c)L')dCRY'
%o,.[eZ]"4'6./LRDmQ;#`r%nKb)^-u:VW'7od66do&3"m^RkKjH:o?H^G_GB/pW*1n`fWC9)ZT.d]$S+i+tla*j)'cQ\fVR(W^F'
%43p'mes>4>.Q6.PFOJJIh!h9OJ&$==P&@Pr*&k>[(4@#?1[MLHeD!l=Y3jKKqop\[mtfp>Tut?K&!p1RVGSY6H+d&o.nA3JeW+9k
%gmm8^c\@lLmR_cab?!D/V-GXeI;Er1PVKh?fj)+_?Bb1Y_+Z`AW,%4.[sDNFkbQ%M2C`N,ck9tMek9)R`&sH?jCpgJp5qV7]l\]$
%TU/d&9c)<V]%TauVCshpZV^o&``]@/DDOANe)Q[8.Jb,]rui:(AR_1jk&r]X^$WF:h`$YqK8^JSmA\XLWFRmX*5/hOPtjG97T+YC
%30Z<+0j;!5#4:6Lbth%uK#lQL`T<T7\65udk2p<Rc>nunR5<Q*ln82)dP#Umnfpc9qUo=m!LGfI%V"ueREs2I`^j]_-QI?f%r1pI
%Z*-T:nFc2W.bTjEd`HjA*>:Mj%d#O)GrlEjlLfJ,a_X0*Gc/lZoos4>2H.V^9qW:0n>596>)W4'Ca2.rJ$Jg<=PN$^9pBD"N1!J]
%W2*a4qn"<CHLcH1rQ^l1eR!\$DetZKp`30%\oUF18[^e)J1As$Iba&^MT!Ul8fkp12]Q>HF<cROq<R'iEpq^5O3G2LG?E.TS)3.,
%`e2i#7md7>om%sF[7G1"ea*m6%<EUpr5K6$0:AiLgW1'FlI4Vh;g0g[CpYNLLAHpD5QXI^XrO=*mkT6:CWkFd'.7Ec\ZAr)bH3$c
%-\G@2S0LIa?WQL'j@2a9GO3OKTeZL3'K(p6#s7mZ&?PEGhTdAJ?10aeD/jNBSP'gu7lpEG0c*tp1s+',7jh(D#K\@Qa%^bg>e)OI
%Y8pFemlUa;YJg(F'V:A@e_JqT1[3HX%\pSYn\J@G\mpkm\Z@n@AEq/Q18Sn0dAN\o`JMC+Eu%Itl/-YnD(.[Kq(ubBZ\9On*OX&4
%O3AAf9j2V;oB]_cGRp3O^;lSf>J/o^+:__hrd($>rKN\Qk!'m(SD>d7Z//-^CI\c-Y17_IbL@UpL#4XN(q79A$j+^IA-usRG?`O#
%pF['&lX6N.Im8-Q,`nC&qh.n=CdY8A5ph%[>8naB%COj6/^,jtZAu##nh^sgc<7;N][DM+a&BV5UO+#@<G[QJlJgmOci6OMUT1t*
%Y3+m?[_1"OAs,<fMrKL]nuUKCC55]calcWEdX;ufTG$"M[u`b.qM(oYP\UG8p#P<rGr@Vu*u0ajc0R:Q4jmi>-7uKrE_cqhhUbfE
%dE3@/?0R"4Ie<4f%h&p!CG2$[`V0#R&+/pDQhT1Me';L()4MMkfcd2OfHcrA=*36jOZJ#:UQ$tcLV6$j<$1?I[hmoB*8`abPr&lt
%QgX3?DJ%7pUoZk>>Tn./7pL7Ud[YAMSAqmpeB?$T,-t33l">2&k&SP@mc_knZ;G;@`K]c9lpQH)GEH51`3.qrbdd<tghsJ-l<?rR
%/3K*@/2b[LiOh89)`tN5C[]n"fF=6#V>SKp6ZJ37H4WeIRLF9/2kpM`?:g,i")tom`3f&\9=j+t/lS>*6re`?^Rfdg`0\NBWBVpt
%du!]4S<\l^))=ghpLb`6>EXpJX,s]#BA9#'\[S)N[sEJP+crD,;n,Hlk-$*fHb9#jREF7$jRCO'8+:&Og9,TiP2%XiQ/^38DnDdJ
%8)DkkG4)Vb^Q_C8<q>8g4iR?Y$_+qM3$rL5=K8ngiSrG>NLR]+(A#Ykbd0H2Ij`?)+Vr/&:iU95jW@-]Ns!oC87eZ6[qfomjDgp#
%EmPc4a.nJ`]p[_kVN`^GAes[T-"fqa/(pEW:,WMpEg&<=rNdJc<?\l*I_3Q39I&s"`lUG^0BY*C,c<Rsa:+JBb2caJ"4F.Dq:+`q
%g6-B_]GpF0K\b<(?QKu8BZ]HKH8:nokB!T.ad-!`cQf15Dig%VR.epOSiglY5H0XOq:AKa)JDmjY3fj<mo'h`/"4A;0&qksnQd/+
%gNZrTbnR?2Vo3`tgKW9jSL52?+WGi\rU>@8aPo7;o;,\kF\fG)aWT:_J\CfDi\cE5<H0eG#?@n*oAfBsZ0_9qDVCU*n+u*e0s_gu
%)P_Z+NB=#KGcN/o6fb-=SX"DOLQ+T6\XArM<i4TbO)^iWe%iFGq,8o?b5&/*]^q6?]:!ku,_2&0fkb@Vq;<<2bIf2=G?8jHM\do4
%G7tINcaM`1o'q:&da,>V/99tBfV67a3bg1uId8S\AE5.[?b_V]V7q_Z?tHfdEA0esR'V3-[dcY$G&'.Jh$j6/nt7V5igJV)e/k0l
%d@\RIMMl$u9=P\*5.EU5K@>='+h'?F,JSF8Wt.jUA3TBCP%RrF7soT]ODH9p\`)iG-uprNRTR6f:H>PJ]U?<[^))S5S2Cr&_.Y)T
%Nm#@soekIpR$F-%VgJnGS`5bLn)D6K4^-saPkTRYV8[?4al"U(?'!e#<aRbn:jU;%;bJ]Cq0"$s@$8^[S0Vb*]XWZ7la/+]YMJTS
%M\AU.*MtcAj"A!,pAVnf\B,LkhJg-#$M2/3,8H>^_okQ][LWo1D<lB6T)_#8`$]\fW3UmHo]f2F'g>%Ws5\IHp"!oRf8l9PK@]e)
%MgiQMWE\c(]mBn/:@!$(0390BqTnFS$X!@3pm0TWY?7@893STo^Q#m/QHPKlp)iFM3VFY9a.'lVSV<&In_/N](]X1NF52)YS=eGP
%0f"pJrb&FT3oA$jEcgV;C9@5<4AteBn58COkTaClT#@8%J,J[u#5E.j5BnE^FSXJQG]0i1oc&HFAN2<WY1aQe:3aE@hU6<[2SrOX
%?i>Oo]Cb?A@/lTJNJW:EgO!G)r&=J79L-dAn=K%S@CU=/V@QD:m'sq0TS7+#4k&mI/5+"Q$?./!>afa9Q?;.b\^XE"EPnGp9@Qa@
%ETnoe-7',`WX0'J@T4MA\DbeY)7Nk%mp96*f:=&Qbn;3Q/<?['=Y*"V>/H5fN`6.$ikjaEZoO>q^l2JUiM*-[fug+qC`46Ga0pY\
%\#RnBG\`V)FULl957-GiD4rMo9L>%\;+K62h+2W%Zqi_iiR3$X$tUnlMJ5cjcbiu+?1(6Kdl(G8.b>EbN+U#?SY\V^$DeR`-&i4e
%D;'kk83koe/-=6hn1G4=B[bt;+n;^NP9I*lToBer$u#o%g6*!r9nO#9HFtr`FD+/?+C$',io-`a&pQ5BI2"">8&NeIJ3^&u)g=Cj
%-6sV7^oO6@T>F3;'pl;nE/Q?>ZrABS9@?rS@5tE&;DXAognKf5I1Y2]U(M3s[n+b;%im5'>)piJ#rMi/Z>c4F%#9!q5=o;2mY.c)
%@Z-7STI2>FO?qqtZY>6S?q+o"GRd(Th@#@?&l;,c@C/+S>"LaigLLReWeQmo.#&RjNfth9@*k&806B"_4I_,3H&De[%)#P--`/6o
%'3J??/^RP^-tlm5<_Ai8*<o'$(J=J3*I[be'LH25KHo6:grrRpGkaLc"4;hg&>&s^g!\cNJ`l!<N'N)`^.XLui`IfTX()3"*do_)
%4VW_XbU5Oei^")E^S-oYLMrTn/4g8o&C3/WYmmG&n??UN?,n.:\?oWIlD'!<$11-<G^VVq1G.=<Blc5"OR!OKJk-V7mg<MF=sY2k
%k7EK5pnDg@9^H1@a/*8Jqr4$DN^7/9%Z[%2Me;K5NoL^q&J>8Toq_!$7[#5r&C?/*Z?\J3!U\8)_;eXZBgOckf/lCe\f^I/!R[[D
%\;f+J@s?An!&=$'GM4FL5I%lgOuuV\,6g1pn;p$o>td]mlZb7U7=8OrQq`2'+foLQc/^[R2+c,V/?qb8cs@"(e<p=/$Nqg(4NT5X
%=NgchmntSY-ota%15`;'rFiUA"B%p./e#Q-8I[%@6C_W73HI]bAO<8N,EtI$P/N(XT_4`dU.<mE5!VC5NZHE#2qF+u-c&LDV=J:Y
%,dp75`(>@*.69jZJr\<U"hUoQoiO?LTk;g2`lrs8&/Z`g7%/dpi.)n@=IURr/YW)Pa*n:)7(pAk3\&Q9MNk1OREObgW3n?>@GN^J
%2`Q$-ZiDrIfGolqc`j>m*JLj__1uN(Uc1sT_Gg]o5Ve0s5q:&X2@C1eb$on]65G1i/=QX42oF3uOSF\+:IDB0,j@bQb:8&Y&I0IF
%h$Jm"/CQFl/U/ik:E#WZ9k\V4,bR4NLZf2GZA:UoP*!UH5WXng)HqU<MG48e&?col]$V;/i]&U>*@-k7-jKM[J'`3#Fjf,`m%"D"
%Z2qPjULPLA6>?l59iC5hNi.>+-r=(sQHagG;T#@9P$E35ZIhKYc/AtJ1$HljZuVrE*e?#^+GM%?LWsf)dN?VPKSFa>aGenOcn_7h
%+DnIq-&A37J<@t!Yo#h(gg`nW>l+Dp$,&h3,TrtgG/jfF!(*3r&5l!K=?ePf$jCp/d9T-)<m#C[(!n!cU;f\@BeTd&O$f2j-D8S5
%]EOD\LMR==BkjN<J7&s$ar)Xc,Us38d`n3q4C8Z9.e8u&+Q"L6_uu-JIQsbr'>dTsGI"K0eP'?fJds1O#[pgj/^kl1]EBuMTN\9K
%oK@CDJeO0qDoAk$CEfKEaUkZrs5IMSOaaB]Ppps&;LGq([GV'!lGM$J*FKfHif`p?<3689_*CZgc'7NQZZ&<_33M/Y2RSB2-@i!G
%5m+=?<4j4&',DgNFLoZhKk.2-F_lAQ5GEQ]Z5Co>N?"$9X:Z)D_U(\"4D\,_b-e#cP*1`s,T[5/\XHD:(i#452(4MWOHm<9=0`0M
%fTG-+RCX9h;:LKM7j7uk8QIeZE(l/j/no&pJHf8R5T6_5Qb/@eQ-Ap>Wlgn-88+Fl(C'A)1>4Cca_mq2,iZ3`QNZ$0?U,#,N=U'F
%J*[tZ5*@WGko=@A>#!HNROmt\a9u=>/W"BH+<<'O6MfSNL^!Z&Xo#Zu&g538]E8d;,85QjJ.h>]1`D0"+L4Ns$K'hFOr^V*$<TVm
%^j,AllX6#\[`cP="(aj$YqNt=,?a1r:_TJ*630K!L1FR\g-eSJ_h=7$Q7s:G>@9;%+rs$9(gJ1J!UU?p9FTk5Su*@YQlnFG5^>Ja
%K<Y[fl^K16OW)nue;Xrs*(%o^%PU6?$>N#Y'7aW&1QWlTeBQ(i!^IYd*UQKkW?I;OQm&-]OJis<H]R[sRi[S+i='<_]1+Cm'5D=;
%VX=Wtm@kO>0MjhsKL<n;:_%gP'F)jU'p5>-5^*$"Jcj+&CVq9iMOb:s6u!5Bb@@hZF:a&'_Y*jF&l7F46-@SQCsg*IJ>#AG9A5O8
%fJ\O6ag7bIV=,Z@*PpYXR&QnM&WhR_&:mjj;/@#ah%8<1+s:k[fhMa9Us6"Mm?D,HOA#jO5ar38_fj;?[uc[dCk\9L91'@n'HgqY
%RI"d87'LKpdJ:pMrn-^_@/"Bk!is/F/T+#jfjT\RE#XrcE41-cBcE'CKD&r.V^HRpjtO_1D'*6>JY[BZC\.&fcd=?N@Lg%'$VCu9
%RdFUPOO+KOF.kiq!!X(,bQYgU2sIgiijilO'$67*&3)HmqoZ-ZQ)-p\+aFAJ0NiN(57V(RhgG)'(R?Tu"tGNo6m>2ul5<mL>;WQ?
%4X41'^,pt2_EuA(K(T,HA<asY;&Wngm.\C1Zb8V<.<5jMiq?W#B0;9ibn/=KMC0[XPRN+Fe>NCEBV<=L#RDtT5dYUU"Qem1KW>PO
%GZ$k4pb3ll+IcV3B0tYBQ!4a=-ToTF[5,j$Ndd)2(@4D8L_iT&r?-%*A;J0,&nujuA>%5E!h)\7&dP`1-3W!1TN,\38ILk.$@Y9E
%,DI0K0KF+T)'9NN.Yp$>$WjRQ8;'[B*E'm$obH+"ZjUW&+9@=<2UG-f09J:M)JjU.Vi2W?FCA:;T$W'?!0Dj?65?jY3]E,=N!%?0
%`$Cbf,/ohq%PVD.J)q,3G`&k>Or^F7A\Cjb0sp!$H%lS6,R5qGUp\D6/o5_O.E!&`a1QNQne*5C;YPg%j]F''4UsHuG4]\98AWpI
%oGeYZ,m7ZcTb5F4g-*e*@%>"ToH8eeZ(Sf3iKqF`69_L[4CEVH%QeAGN*u3WC_o_e.u!p-3&P4a^apj=%gtJ$SR>>n2?Q[l8DjW7
%HRX%mp+HG$6!(;$m(eT)nHul6qMQ&\jCT%52'Csck`,]g!KM\PCg56L5Tse`Z*<.u-3?d*03FM]MEY\aK"Tu[7cI-U9KH;ZDn$[P
%S,dYQG0nQIM!aEi#AeA]C/&RjC;M3H]]$nuL7Z^gnFmpd"\/^eOT\[#?7;=(O<n;tYhp_Ynu&,<5V[rYaoJ=l9H7LZOs(f60Z`<b
%O4K#]#maD0_[s^ciDG]U@;@!X"IKMeg[N=5[hJlc&F#[E4I0HcQe$&ag=9$(.#>W0?GlMmo76n<M+FHT6quU%d'cX&L7@P75>-`]
%ck)54_"2Wt]706qZ$>#Wf%4dn\P):/Z7=3qBNoGgD.oeg(o>VFm$!8A6HN36&rnLS`+%>`4`!o<UJit%SrOLSi-%24TK.U)AD@?[
%3>$ufDS`TACb_XLiHN1"-P6QDROFF57K,!r20eHJJ;68N_,DI@SsB[1OLX!*rP@-:klYAQGRT/sf1$=0'NbnHg5HjZ_$ud,"L4Vb
%=g/M\!$IOC8l="h%X\46KFF)sk=Q0a5$1nG5S5)WAE[`h!3u/7*8=r+Qt(.Fn^nU'Pmitp?<khNP;tPHBX&l]&50esQ&KiQ],^:A
%FD^moYkp.%Rir%e_Kg!5(i;REbci[$*Gc_$0hW2a1D7P-.L+l<!H^4=&cVumPaLhugre&mY5hu2RE[!'@3e,qP]Siq\Jj\alt'B,
%ak7*-Fkkl+0!lH>K+Kcm>Qr<(J>DA8<U:)%M^[E.&@0rqYTm*($d<<o9qaudghC)o$RUDa$e`G&J&?o++dt>Q2qXf),8BQsNHd&t
%#n$ir@n[OXnEKgQk9I\V4Au>g#.`$H6jH=X%Q^#J7;tO6E8nqI,+7f7_W."I!hg6D*9_f8V@V])GUHLcfI:G,_W'p7b5hVGYq_UP
%*6nrOeqg\!=$W1![Pk^&<W\(s8OnQu>m-\u;)1[HE5[uA!Boe:g3bf4+-74*U26("X%.?*p8HDgKH6pBGq:oT;]D(-E?mHYZ$KRr
%$lbBD)nu1A&F1GC1kcF[Z)*'I!B3A.Q$F$Hb=$Hsd\92acXWU\IN1enW5hH)o!NmS\X(8IfC@BEX<RgNQ^hoNj8CZ!,ZGCB4?1n3
%+b<u*LuVXPBaNPGeBLZH!>%./L6ETK?jd>#,02G2BH.o.Kh6n>`,2j2%C)`PmNg8`+%o)u$n39Zc9DkX-Bt\j=>K)h]RTQPOE,/X
%+G>;.O=c`X$bOc":gGn">AA[*L8S+'PCRn#"\^iWfn(>KN]8H.)jVB]h6:5h@cLRqiTfJ(q8FISL_7Z62@)qs0TtYRJhf:q9b<L5
%g)d%QW"7j9_sgAg1@Eg)6U4d.7M/-)bWD*oX[]s:+R;K,.M7:FR[,3e4U0Um#7W7%=tW/fP74sY7tNtc#L#?nE$Y2iV=^;\ZD_jX
%d"U3VnP*KBk/]bWN-tFqqMKHu=A^O7Z+A0@-B_&_Fr&aHK*boh*[Q*L2M9)_&_[u-'H/,c`Z>s+"E2iLl$TZ@:(1be,f4:3Z`6>e
%"5@f)%[%^rP[Jr\i12%[6<G?;&)3Qse6e<NiUM-Ee<$\d`(N=;Ur-"MUP4_4V\`'('*_o-O].c@ZXEkMkp#NJ,:VjO89SeiGdQ,\
%_f7+i'WKQ_LulM[:[;*a&Wap>U17A?RMpII!Aq__%MKC,n-VlJM_1e:@DbNhNG_Au+YfuD50DdT:a(E!8c3n)2'SsFKQ*5.rnscc
%X<1-5<_IG\QaR@`L`m$J#u54A.nG4oLf6$).cE<rkmV>BX9T$dBL#tqV)?"!2aQpOADK=>ZPBeO!qTLp(sW.JHdK5hQbsIF7,3Z0
%lA0[OB0^,k*)K/h&pQe=(=>F?5ogIJC=qa10;urQd3?Xue/YQ&36IRcapR_`*\S(rK+0OE7YZBn\!ij(C_.I5XOK(d&2Sod9*e8Q
%n2[g!E@`Y,%#p\FZUjt%F)[c`5/eqP5de`h2.:JML<Tuo';Y8!24SIBbaopC6@.ECbTYY[BEl""%&Dh6I[k=e*L\=_"5EGm0+R`2
%`)jOZA&FKsrm=_,7]ddN)<,]aYjCRk[ccmm;HfA%I>4@q((PC&(D/VmUdm[Fo2o0898&TN?&tXIOi5Z%%.R#`2)1d-:V5t!q4VlY
%e.@1uqhGXGIC&plf"h1bM6WogZrrV2=KeRO[&%>n/NF's_IjDg;9B3YGo-Gk:;q/]duR6H5Q]&]:^sI>Aa22?MYR&(F.d2cS/t0.
%>[KE,E,f/!hAij'KP_\n+@C89BaJFWI;YE'\k+Du/?$,1_IA=?[%kR:M-p*F<9bjoOe2eFE$gSU#Y1b>P<6Q9+$Y:)0n>Fakl^R/
%3?4._JAcc\NGMsgJX-t.%_%2Uo3=KmLO;</-K;jj>g2=-0khhgQp3K&,$4'sOG'2"G^qtD,Mq@)>%\+Cl:h_p>aE]D)jDY987Fh"
%nSrM.#RY:!(B26nDNN*s[H8[8Y8j);iJ8P!7!iS_bOnZ^EHN*#5SGaj'7_ZV_Tk#@/(,=EWKVYg9DufWVLp`OR4&_n#TeE$OO9^7
%+s%XqDE.DUIPd=D(dBB,KSO(Tr-Xb%=?=!D49@EKJlqgWO>='!\.M+Q:l6sAnsc#D+'(h(K]6$OcT'I*U'+EX5Qhlll(S\a7gKYK
%A7%bkgR3MP!*Knc31cu<.iuaN0bfRE5Zg,FaT`Dr!ItB_$&C*KSX2X="9Z_e"$l[u4IlM(ha8A:>mLtB!5]8'@qZ-m5nXqInh#UG
%i;cV1(s"YRie?"$R:!lti@K8/<kEr.%:DHBiK?)1=N^uQ@Bjq"J<N._I3Pp'Epum\"OGMHkMakqD9qi!@QndoL(Tq^EA0STdZt.f
%EDBW'@8>-L3]Lic>XsGl<0H9g[]>&\AFiAfJ1*C)JZ7eKRmj`I`T9>fEVR03qDguUEL[ReWT+6'0alW2^e<eR?nlW&)gk=Lk=.J/
%!=8Mo176DK`?R;*R<j7unY;?pT6:"Hi)h$dUauD(W6A'jf?ss.FJ7)e:2`[S,B+O;eJLW9*Tu'@Y!M??.12r*0<$K75TFY<3X-S@
%d=+n)H>q2PK^\iT>*9)Q^cJs@4p3(5*6SiI6,Sidckh?T0L51;-7b,dgKAKl;(,8+1j#8A7_o:%7`bm+ZI71W%+nZi!bfB4c>4>p
%X`IU%Mt4AMb0q_Q@WXkOSt@S=2jF3dSH9C:>AFH[EYW"u?g\j=C3^d"BA:p3(C6lBfXG$#\IM"E)L6-p62TtS(+@heL0UZ%3#Bp2
%.Lq#^d)ic'>fj^X$W[jEa(F$k]ScJTa$.TBd6Vau/0,m7[\:BFgLd$C(.ih'bMsd:MJ.fdfdVXVKg6PsSm:]6J3IKMlsRaPI)D"E
%S7")0%r]=-EB-*rfnT2(V;Q_QLX<`]fsOP892ds.SO#Uf!"anfjW9bf1-jMjL,LbK3!OEF'-MrDL=f&K!b0'd!egKkTslO3!H%/4
%"%/_[&S4t@e7:ep6VLK'kp5VgUMV/iXAD4Bps-!qj>Lb7PWtq+&B>.O>*/>1FEJ@LUpDZ/$m?IBfKi$Nmmn]8G(^;.Qt\WGC(Tq:
%_uP!:"D):LK'0%>&.!dfYWZ:U$@n$7)hP)#?2IYe(EhB8ZYSKa_lO'$lu;?X99_4d"LUl25rNGY*ueInY#M]pPSr:8a-o!nYIsq+
%N=@N5K>nr?H,\%L&[48\U6%o(3T'%6l6AXG'3`C0a5irL'X:r-SL0,ENJO9ke"C9;i@kDrG"u.Q63_tCbqbN]o<'(a!5pYFSO^Ad
%W?Ikn(F,S8`.a63_IOEjS2M)\pg!Z(+?]$%"])hmgH9F9!*"hKF2:SR/dF2?j%;Ke/K"PS#\dQdAhZZJOuZ(`PJ0?QRIDF.:ctW6
%l>e`?=-5g288*"$CBJ\?JH9s3nT2u&1'HqEZs/+VKgZ)UTM?!iCM^JqHGG@dkutg?!7d.cJDo0I59`Y7rHMgW*!7guiEg61K'Z^X
%BBf]OeWA[KL'_Aq\?a!EFI:t9AK*72fJ^441Y#!Oaqn1J4<6aL>^?K:!L85+[/4O:NCLE<Gm%GASK1=bRMr+Mdh@tHVnE'6f+&?j
%l5VMU3<!eW:*A"KR)5A&&DYMuZ+3%31*(N6g'0tI6<9U7Kc0)5'+V&kLb'%ugV]ak8/BB85"l1:aI:Ld$.IEBB!U)@L<sZ!oYUD&
%!p:7u&4c9Db]C1U#+()Iku-\FU^gX6IP$K)0i>V>"OVUt8LIJ?6utr3WACB.X9:.(oR-J<*(Va.9c>c`'?\];Te%6&J0gTLT)+I3
%nrSsd>[$BM(`UUmMfqnm;$9g!1b);s[<0LR6#2.Mb#3PsN@R^dS)e(5Z8)82NQKlZ:5g,!1mb6aOY]AT,NjG;>?;_G-t!4s6[^=S
%@*/9]H:!;BONqk]-IcHmLhga9fUf7^ZVZnfLhd1reCOF/=Nf.@Y-K4]@L3g.X3ZJn4.Si`%GM1foT!::WRJ3qluf9@[q)dZ-X01b
%_YIA"L2M6.Vd_4D'Vo;ZAd"fO_lpB8E&BrEYb_[5(MRBqB"9"iLV*Z'o)'\S`V(Xar@7;'"_s\^D.P4-9*i;Z""(d'UgNPM+s02Z
%&V3L=NgAb%\^XJ>/4#U`UTi;bg>3_qm?1h-8fef80P%bHqGRT4hals'8-;^oI!7h`\pb=RLJXbQ[BVBp:/h$Z*0q<F7BjBne1OkI
%K!9*_<o_8khp42d%@"<%n!Ze3!<HXkY$T!/.au;CUP-Ho9>n,geOt.a!"-bRXl=)4+t!nQ!"e_c21]c,f6>9V7DWZ-$.C=bUmIHO
%&.mI$B3^5Zl=c$HN$GesQeWH`E.eW9r,OKC1jPnk.ntMVj+=OnS=DkCYqL/1&9IbsQL.aPg8K*^`(ruiP@W@:?kBniYGB@L"B$e&
%"-B+W"uC'o#=J=,%J7%rF9YGNFS$Rs=2u>T-r<U[[P<j(ptJ/XL0ZGC-D;dgijCq:Ha)H<6Z\0&_Hu3E(K(K<'FPWEVellA<JZMg
%d$!,J<tH,Ui<0Ni)_'U*kWoBW//JskSsgPOL)KGpLh#`ZL*(ku8S4uq2T;oY?GaBPT!gI=Ni0]f&0.)R]!,FY!K:TFEg[%0/d/MU
%7@l%."H6tDm<W`Z1'3'gMgD(P!]^OZ:)T`fREK"U,'@AM_pf*7jA:)phOGgU_U,#LnF\@]#JSsQE='6dL`u\4'op:dA*WhJ/@7&6
%2\`Zo*f"nNZEs2Z%NAPZ?X;Dk."mHhbL//k0f]''!X4VRO/nHFVG_GZ<Q<QL(WS;<OMdnCSX%Tb2q6fHpYt0r8$;q^:@,\Un,Zh?
%C\g=aXq5ZJ5%R9'IXDp]&R<;6`$Rg&"L1'n90q;40opIq`AXQRb]S<\kTMh+=Z#AWb`Gi*fAO3R&SJn9YV[jKIdnC*&Wg0S$pSpX
%q*GXKD(6:mPGkuXZ<;sK:$iL38t+ic<0L3@S\aa!Y=;c-/JtE:^.hn[`=U:a-u6Ymi]_r;m,0/ag&S#NPiIO7-/;Z>D*D\;N%7.E
%:fsZH%#lo9qXILE7W8u<8hCN(gh[%,BGYhgX(akQ1[Re?#mt/]VlD;_(=hI@5^e[Y";s5:[jFAXjBOUGa9eIY9WeMLUil?,T'aTQ
%Q"Pprbcb5Rm+ruNNlhV;:dHmW@,CE,!?.nC7^rhL'Jq-ZUqlqb^9Vn@IoHcA7e9kq#]N3MlikuOiH&a.B9WguKocVi>]:"CXj%g5
%0fDZ@$iZ6[D07iAKESn"qU1*IGUR0#4d9_#3\s3BLD?%'H5tZ>6aO^BEtg5f+1%jog-D0ZY>3fg$-5G:;C@k@:YWjG;agufF+HK!
%=Na,6Zbr\-jeotkUFT`+k>sE@g?@^U]&'"DKktTCS>j@?-E/H9YRQQpBhQ4n'r_:#K^4:Z02P>oq.sTM\2]:C&(n)Ml(XoWA+2&f
%<6V"5%^]u$ELM=Z;JDNj9`H^LX?]%8UGT6mTk=s4SmL?u=pV!U'+D\pAHZ:IZ/P*dQXt5KQ"@]5@bm]ig-A6(cK#qU,MBkYHks15
%(]&tC@'C<)83:]2$f\O;QOCki75!<PbIk95\UZ7a>fT`IAo*2+&Lu4'AbdY7#g4C5!!jU=_[m4+K';Fol!;#QA]&sq8uHb2YnXg4
%?pHqAm<R+jm[LX&,a:G(`:oOHZ%S$J!O:>>6djXt,Lb-D-1,?>faC8dV<d<g,tJ\=R?Xk7D"GnL>Z<DYn.(860Eh7WS164T/E&Yr
%."egI?sDV#Q-"3.n'E<5bq%mj'h`R'`D.BDV:6M#4/^0)#s0[FnGIl4gL_$-dE`t\)l3YJ.RC<c@.=,2&^Z<8fVp"dD=Nlon.@&Q
%eHhI:=99;]!MKP,0U0k>3^'ekg'6ABWtl@(#I/CXX=$G]7Ftsp_3Di@$k"pVJ/HGl7#uu#67:(WI\uUi\!>q(-X#ep_"p!4DV2t*
%/\uXoJl&emV1f=6r)NmN5le1^at:P44GHD#_E5RdMGtIl4?qqCg3S"cV.mSa`5HZ9$MiMnKYYhDTZ_PBBO`AW#*A2>IaOD@]-X+O
%@0LN^!W<(.>gi9gAcT)aM!J.0H2^5uQAJKUpIW9Q$Jaa['t@_5e4Lco3[\f=.>!!iihQQXq@Wr5_GUL2D@$<[dS47kY7HfNJ\/cZ
%>sG,.CqbF7C!2'e&_&@^"dGY2A4rB73tW\P8f,p>X/I$Nl0*XY(X^#;8$/[2(H4J6nM-<Y,1kb"Ur[nN^:$oL#A9a"*%UO+M*j+]
%(8:orIde-XJCFUB"l_oh[Y=Yt'hB.8L8D29`3YE^,bEm*qL[gr+i8SN%L6h_rKU"0d12o'*:(!PS[fJejd=QL3!.9lYEGUqfAa"a
%mSNG%>!q$U$kX%p2Z/WOXq!bGpADcg!L\j21)IAT"<OM$kbqnphMU?4PSaR;6G!41j\jmX%4_,F`EY?L<.["^34<VeE`_*RS0/;$
%S+(q^P_XdGV8=05qYHoOa+*o.-^#i((BiK]0:5",Qs*ZhqF&4ii[>F?3\HBt)#RO[eR8UjiUU>PQjP'V0SL'c[J:jfZ%kSLQ4?C9
%"/A'/QCa+&)[K3F"-"E1Jt]^;$OO^PXuN1k6-!1.djH,`*LZ8(^Nc(5W&bp\</S#nLm:'u#W[\0;'V+SEurK<9NF*DV2Iq`8WM.$
%mA?M/Ec>NP/)4"cVV0,@[tb^bl2YZ^-3Ah=pL?qLO5h+DTd^S6$(A@JFOWF?arF=K$SjiS0apmm"iSq4%$@D#<+M@)FR]>DIlbd!
%)k#.GbOAV`,MEtulbPh?7g!bUS_Y3u6B,$CoTOEPX`^ci"$7&c'i&Hf#,qG-5Fefu4<<P\Leg61KAnWHDntp[N])$f)V7mh(`'M.
%>jk(8M$u^P(VZT9"-=Xu#G@(G%"OAW[2"'B:?^1AhnV"XOAK<Z<ec*X(?;0cJo?5#c2s?[1#FB31Y31d"b@i2-YBsd&gEY,)2>S4
%9O&\BKMt%(WAeg5MG"/TTVJK2WK)Ha*"^$8*DM`1I#jdqBFT!%Nm"[D<9BT4JRZ*)gnUmcYHg*+'2n=:-a)0'W2!0/^>Kne?WIN:
%+%61Jj\2'qG1g4[Pci^T[]@Tl>fR:"M*e",i!O0@8R0Br$TlEnHMTW4E,#QJ7PKeg\Es&a^8Jbh%/MD+*40/T40)1TW7:Bp9kZ1`
%JHa^o7g'.YE0UH:VL<sp%0Rh&0#Q`o$d5aQ1>.`/jV1YJ'[kLF\;(D!hgfZ/7N_9/V`DQA&L&1Cpgm?5-P=E3A3@r:iF`7<SC0_h
%L[,3T%LH!NP^E7=qoC"6E'_Un2c;WYf^tf;_+""td"ggs\9KapV!i"jY'oK?A_=defPPG\d<Pe;$+YJ5!Xa=7iB;L9=:]olBC'RO
%\FCe(]IO&g!_k<B8Ln5R>bLFL,)XMRJq02E$:93S#sSq&392b"<te+`<2b\HMZVETFX`f5h?(VmQ7a.YnEr0PErs%rPfc8Cd(qob
%JJl:bT$S!`1#-.GXs\gYEsEN#YuFf&LF"F04GF]qeDWX<dp(m*,sMuWoBdJF,M]BY8p-r)))o"#'/'4P&E$@;Af*G5Pc^EH/e8,f
%_nG-)Cqk5N`<%?@epZ<rIY6\k*r_o/&INas!L@+;1@"`1KlE.^V=DtBDC;t#G]9@fkNL)[P3ZI8iTodl[<S;CLa8/5HCZZiFU9)[
%jF!69pL//obC@`oj*L`4BBR]Xfo]Ou\Np1g-3AP@-JsqGCl:1g)XN$kSseTLO:C$/.1$snH_55YaF1+b*qcV!3r>Lsp*2=:eg&tj
%N7drSo[0O9(h9B_Mel^5^"=C'_a&;#"o?C9H(#,D:8mfj)+9Q\dkFbE7bi:1Y@]YP8(P%4al+FebFp-A]SjqDfemF&W;tiRbk\Cn
%7%ON5I8r_2ieOon\;j&V\(V?KeXhV><>?#Eoe$*H:b)\qEZA#BVkb^`nF)$@dn="]e)&Q,ACHJAd5CB>Q'+YYk=?'dgF!HPJ^tGh
%-bl']/Afsa_4I;':45BR9VEPO)Np?qnKmS?,9jg%"C@f_)`6BX@UY2-El<d!9FB'&*AY.45cnm*qDW8Vo84e'4k<P,/bY@90iD1*
%&&gX5$),^)B;Xu%+?/$hMh@g!/+qs124R]tf]:<+P3V#FQ%hG5k/ZW0Q27T;cfDu56F'*BrLEB'W=l->m@ld@-=/*X9?ek0jlc--
%oP97A_$jIK_AGU#Rc][\bQ]69([7\<.bS:OEWDnZHqLD4r#o1ANuF95/H!Q"5SI0pZfj&./Cqt,rt,d@2_c(<T0"@QjQJ)D8rC'b
%f>:ur7p29p^J1D,i3h'tbRP50cnaoR18au*VL%n0Fj/p@PI9Z32_lL@(RV^1!V=Ai0*F8C1r.:=],%rek(`!<QHXB*R7E!)@B-ZT
%KtZXcEcn8``*96E=N08c<`.G\o%FbSJ_$9'qP%7T]dU;o5"q%]i/9262&<86VVQ[K#7;9$Uk20q.3BrN2:McqOVG$H)"4UPX"G]O
%6J.t9Or5iOMH_TpP.&Pf#_=9TEDKHrOr^/L8N:oFKG[>B.cM[)R3P^so=OF<R?6'V8Hs-C=dUQhkfshECb;nF%AN_h'Jh4AggXi7
%T#+SE>'?Jb\k;pe":91AbOn5^lLWf(#,2LX%7m&#UY97Mg]]_6F#aYlFX^Ouk04q]2Yp@6oN@Sr^o&8F^KU:H9GO,1MJunAUS#Up
%/)>.ba_M1X9h[D]f2dtV=:]')jZ8!-pS0cSBdi!X:43?5UXfl'=dL(&PUrM4-bPqt_(H$ZnY4a)1<`qe"CT:S&!?4;;G^+m1G-m3
%:p^d["#C,0dVPXKQ1L5LXb=N"Tsc>KO]BjT;5]A<d6s]R.<;Ld4BD\A;Uj$(,2fC\g3R@E#W,niJSnB5!tPo.olK426>'>93ZYh7
%;&`HC69;h'OQ9]46otnn.7t/JV"-ml[7nng5mK-r:Ii%)EJUB9T>.8<h>=Kp:"p#LeJ:``]gNKZo;u)("f-Jnf[DI2]9;WK&:1p!
%,RX8Poa;6[p\5%(:fJHZ1)>W#DUaR!pKa6OaLnI8lL7X6cDc?F$K/)`F`m0MKM%Bl`V_U17_Bp<\*ArP.ja>!TNGh@B&i[%=$/Gd
%V!>ed9A`0AP+U"nNqLY&8s8Uc0BdC/R#G9oY7J8+S>6:nG_ACNA!kfU]`=tRNH@Jk%;BS$a.>(C9&J/D;R)a`\sWB'],=H:=U=PX
%nL9&IW%TEDb8#d[24nA9'QG^q^"HS_<-aWLLqQOg."X`48)!"E"[WZB'^4geK(A21NFL:2-I&).%uWm1d6S`o?;O3]Ph.ARQc>;S
%8s0`hm&amb.2WR)H;1F-$LR*A;!4U#/^hh$VdP+;I_='HQff#>Y2*7+I?fid.f1C3?W=NY(MdK;7j^SH7)&sG`Net\>%lZUrQ^cG
%g('r7m#[>je-Rl`mE`MH1ZGebqI1S#PsT.qA\5g@O,VU@V'k"8QGb6g)m)/;2]tI3X:)63j"C0pWH$ZeIoiH.Z]"Li8[4H';#9h/
%3&QXS7m#bfN.M=<cu&#*b7rOF8lo9X^b2k+=u#^4]K$*_$\.WJ77LPuesV/b]m?%`o?*-b<%$Z`6]nRqfR0^M.SD&@S\*(G<N;qq
%4?!kHWW9He<5Xoq1]rCO5`"`&oI`MH4Z?<+\(d3@I&N?`]OF6)TIZ37ETFqYoZY`:)7[jPZS"W--HkmB8H)ci\/k7UZ*#Qr)tU2T
%l^#Ob1?nauHIEK-C>kF4Y'LuI$Au8!OgZ+#O9e@b\MeT/Ij_s;?$9&hAk]$kb&Oi^FCCmu`$s2I502?HMmomLg$ij+eV27]%*F*B
%<%^ge0^,`Tfhl%SKL.aHdJuimXUR:BSSR\Ml^VE0SU29?6bG]:@,s"\`Al*MX!H9sCJ1p)&?#TliC%p(4NLo#g+H(6^sJ3uLr/dr
%&XA/(>pc.PlC-PL!o>orm_W.;70Y+(L;Ve=TBFkkZ_2?*3!Vbn-U7-E0_VI0U;8j"frKF<8HOQ]?DS#&,h6;)b@6:9W(jS.3T,'W
%6'^.4"q0-]73d-^[o;\fPhCh=Z`l9k'!j;JC@*0'/eJuN)jYATFsDM4I7ltY=#*e<8iYPUY]=:2q$U3&;lqAgk,M7VndA6dhur&=
%ChN&j=-5RsY2FHSHpL7@>#>TF\QRSg&VW^XkH%dOh9r&g.rJL3.drs!%BJ]RN7+YdAlp!VUH_d%bP_udI+$J2X>*bSk&\KH[d2/W
%U+/fV]ob7&F(=:/Z]0S3OqS[V)Q_$^OiQ?#2_tmd]62\?G.6OVM/3`qpTF3,BpS;C8c?TKBh$Nd]Vi,7_^dIin;N/8C-],iU["+Q
%9/i%:^L<ON6b!bCE(0=(FD73"N6efmAQN%dn@RA/F3ps3R-\jcD<u8.!n/YE[O+oJ!@tM/>L/i".[/_4_>U@-]qg^iHi\uCP9=_u
%Oul)Eq1Hn=A;I`Im6P,%fH'Uo]A:RdF@oH,DCM8Wd>-=Z1Lj'-;0e+],d(t*aLLO6lAF%ffl)E9JH-*mUcM\T@6u6,<b<!9#*bA@
%9aZ^p-KiKD6I1Ip=&<^G2/-&n`)i!YN:PJNf<ajcGk?"W@@)p.H3:+upNSo"0prhKEX%G(Ba,T?&;h/8]S5HPU4jAP(\c(5M)qW$
%,b_lS5j>o5Mi8WqU.=KbIt['(hjO&B%AZep#I6;5#@;G<3S,WYXe5MjQ]))Q8reMDFT4J-978oOB:$N'XR+JDZjCLP.Xbp1a'i<P
%=;GJm0D/p:Xpn<9AdN*pj5fNaFAj'k1aUW%^5En,^X#BRc)-uK\Pq?ZH_^@fMCZtZVi[67>%U*'`2qI/Q^XGV>&<?C@T_n$F;_fj
%[5PAU`fq&>L%Q_saqa%5$dU`IARS3VBrP,ije_b'4C8&6gL]<f_mAr5gR#U]B("5#g%+g+o;^)UM:b"0L[_'Q+s^MTlp*^RTppKl
%en)p2X!EsUVrqZ9q5ro_QG?6QVdt>UWD^_t=[qqBDko0tH"s[LA+[!,mVA_*Ss;##rP\i7ktZ.9gM<YKPqX%]NWht$@uL:*\CA[]
%r9^88NQ&?j8fW2G8Faj+RI+nGfSkQ/^($>sTabQUkJ"+:YUu%cePps+ikiEde$"eJ"g56,j(]AE;:8u]\a/9,*HG>0mGu[I1+TKk
%VGEJV832h9H6pl#2j/=k&H+?-nK%20/M>AVf2Im(#bIJ:Bi8D#V%4p7\TI?n;[KjGAJcu/-jA*ofA]C^UV[jY>BsChaZUBtanCsS
%jcZb!_D^:tOXnMY/85<i+j<ia7QHkQ/Qp6V>ZdR"VsJRPKj-aFLu"j8mMLq$Om\Jli<UUO+t%Tr'13AG:44@\Ib[?M=AE,tj]N-,
%?&U_J+'a=`]39j8$tl]cgW5ZZ>j2_nQDk'IfT`b[S`Z3UhV.1Z<od#Q"0Y43a7^Z<]3F_S^1nnJrM;a%_LZ#hlMS6Pl-Dh/<P1*X
%$L#W<=4#3!W+mk?m2felOXfe%%Wn_0Gm-1.Sr(#=XK4r97#=k:oD<>M.Meg3_[h$FcI./\ngX<IcBe!WMe2`(QD0PqL!@E`8=$HH
%:7S73h+$,-@;;^p8qb*R&BjoOSZpVHWClhQnK=-tkpP3jii>QRM02uHe5LZmB`urn+qY_NadnO4P3+`=]&4TgQ0J-EONQ"W8rrmb
%W<qCaP+F]c>"PY6o^ShI(o!$;BkQOmb:XAo:+pme8BB<Pf&VF_Ntn^JjPHjX\B%c/jWHWh>aa',FZr`B'4TK9ac0g:^8/H%Um0-r
%M<<C<A"iGWdR.:YolfSGPBq3U;;M8;X\VuASX'M1J(*/hmTY\_Ouof2d6!-(=+$WM(Jh'Ofct&mPbhmB6J(ceh:7'i_bqa/MKBj,
%cEWCHCM"()<&*CN5_CWdRf`<N9D_"d(%.H+\5smM;Q&8+H>XH.dt3,%c/NPE:3;9m</kAKB%7_BBC`=`X\>iPrT[M\&D1?0j-<%-
%$dWruB!BD&^>75@D7gd4?6O?.,CNl^%Qm"#(]nZabA9iUPE'+d#tZ$bs#:g^:U4trCK[g7HQ-p%%)>a\0+IoFh$JOOC#0m`NSM!N
%%<b&JYPXs*bli.0513psD;\Ot:YD.:Tp]HB:/CP-Ra]%&,_4A+f)S(8:".moTb-?/FcLO,Bi8EX@Zu8.(%V*ZPe0\oeBhi)qVU+j
%>_<e$]&/\eACPTM`6]=KV]&m0pGIVg/=t`1VVt8(P?unEHM(Y1ZDHkH&>Xofb.Khn^Ljq51kF<b:a@AdUMMk!4&Gh1[Brtm`,2@Q
%Z.caag.]ua]1O]U7Lg-Cia,Eg_:3\#2U%<$W2M+MR7aro!`m="G>FFU6j%/#E[uF$CFT1s24Zeh\04H$ib%!Z\1s'mUk\q,KZVAM
%TAlC$f?_[qA*+IWo=^#:2U.bhniKk-k(/OV]Fsq7JD[NjkOmMP&Y$)7@]GUT?,n4E1=E't88sc\D8Nt)4Hn;o+2tt<YPlVCl>_;t
%pn[S\au+d*Yf.!bMB-05iWQh&HNTk=m!1g*&(CfZPG$u:(bM6tTrJdnpGN?.4ss:\nS&+!WnIb<K'bI(<Im3!ePhYZ.<X',B@&9'
%W"+e+UFo=\V?hIKS9[dKlN3(o4jiiI0Y?r"PG#-NQdmr[5J@M4hn<Ci%uWIZbaO.q.2_K*p1L>KUqsmC&0Rg#9f?m1qM-=5ZPj5&
%<!-l]_@.4UJ14si_gGj(N-K#1<10_W@Z>IP072J:@07&QSE7;`BbcF@!(I+1'0RX7@C/e*>n;rg91T,p5e$7V<I#U]Y#?<cRREq*
%pA`>n<7?YVEUm!>;7l0WO.'I>F:j;/\8dlCmYktPZn/b!_qhDF4[[`6PM31*UaIR4cStF+';14JRGe0%n,qlm04M[$Ys<og^k_>C
%6W9b<H<';?-I/hBFKl-CFkn=HnH?94BfaqcnU#\C$^R.!<dh?-_ZO[@4r]^fOWKA?M^%i2pd)A8Y9m'gL9^t60P0Q*FePnmq^F("
%&UQbaf%.iT[+9n[ZRt6O,"rF8XL#^3p,1m;r,WDgOP+U8ZV.Gd6WiC)]'"%oJX[VUb1QN*6Q]NW"YorAa=!D@(Hs%p8c\W<@Z`3,
%T8P*=PH_j!7G&!;"s*6p+Rm=uY]"cIYZ:%0kKq!dmeq#ufCk1;SQSg964X)f1S:*V;2SbTT#N#[N5Pmq'M\?@:6SB?`556YI+(n,
%$P$N;d<&n*H4ntY1E:\CO/)t:#ksX6(VUA=SfiA@K=!XF0B@`q^9T6_2-M(bX^3f$f-tX[8F@3A^maL[&%T129F6h(G<2pCr]q:@
%%3fsQ:$6g58Gd`2Fq3#6XGHYS3>s,&#ihkjDE'B#$[meHSS0EB%fmdJ..&5h!]2O_*Z]s"I4fGl@T`7C\k&R)5bMdK;$n6?Y<)5s
%<j8U#6+$QE"76-mA"X.pDKg8kk$W#]7ere<n5A`2d%He9FhmMu/&5eB*%HK>%5W=ON(-_skLEBdp7P$4Wl[S%S2MI6W[bcG4Do\)
%Ps^%g9HbX'RNLV\7-do(ZECk,I/%RVr\F-nN?U`_NiIc:"I:m2Nk_:P-05#!DK!lC(s#,k?Xhi4[Euf>BYjq(qG/Qf:;9r,IRXbq
%:n"^V);7b''khD*2'n-AaqQZ%Ap2T]C.iH/knK9m[EE6PQ:2Bq5oA.24e?Jf^Op+7MO`ahHs,+s,=b!Mko\hF!;KD8$m[iBO\&J@
%?%+D`cZ@bJ]s"2N#i/GY^m^..Zg`i3gH<Ad.MqH74-sk91'Y9UG\g*<#Y*U9j4C1%7#liu++bFlSONsb,2h$d&0nQH2Z8X+?HX.t
%i8MJ3W?/Fe:5D@F8M%uXkCb4XL^!<\<;hdC[m&6SCC9Fk)&&hJW)nsCmR\kRb^q'e=k0_>LK$KDN;>?-kH%CGN1Fd3h@n04&hu3C
%FJD"Uh,?HD0O6lr2()nJ,nqGhF2pg!Qm)PJ$k>!H)"XQFE)"3NB0_o3[RBk%I21fi[c=NRa,$s5o3N=5-@TSN$IN>B^FF\9c>\#=
%7;O@?])icqkBZbV9dJV5Hfeu*H_k7aa(95Q5(jQT]+?CUd_kCc33d^H)Di_6K-a$K$@OKXJp0%U\C[;38c)1Ypo:n6LsXGB!M(&5
%ne3ka;+2>U&*a<A[&g5)gP5uR^,nr*/^cXrrn,RM1;\m:8j7pKIEKFo4dcj1FB4ke8e&u(MIY:r`0X:fFu`I&#@D57XuB:C.Nh%[
%?>8<\5=GgT%oq&HJO_#N,g_*7JPM=tX:W0U\5%2oEb6ET*HdPJmPu*L_%a*-H_fGuX46bn\9K8Ys01X3BZqI[FsO72hhedh]7k>^
%1*De:+Vt=gJ'Q98VtZVi/f-3JKkW)OofLeBQ+O809L"OB#MZk#W!KM[_F"?^XY4U"dnj.B:nE#\+PnA*BkmCi1nYpH]+akd1YKb%
%&L/2PhH(um2Ut2KVI?1G<:ilWF.2B\Co;:QmaRk*ZY:j5;[6/d\)2!rDguJY!Z>k!<.1'YHQZmtqR(SfU0%0,'8!M]0d@_);L9bl
%Xr7(5F6l3ai(#i7iGr4F,S];)I%&Zn-C&`?Zu"2R+rLj0*ReW_er=$'eM"U*:(t@`i;o;ne1g[jO8Et\k!j[f%2;aAD%';Qa'KYJ
%8Uru\)R#P^"uQD$c(,/3A]S3P+0-Fl8HMf\cgP?(G=kIOo:U(h%@IQ=?>[r\K7/g1E@_JC?0l6*mVPr(7>/"m3L5`,3sW8$+jc+#
%_"<N<\mH:Tk,$pe;h)InWMW[:e"HV:r87BH'$]ZEFt>.m'@(K=/8P40KbX%rCqK%hCU'<UboA(]$6BZhn`W87ZSoP3(#T%f-ad1/
%W/7Q2]c<\Jo4/FYh5aZ/7i2`WT#\bSR!3D<.mlsr>>ZG0c4[lIEcaRIWG%jG/rB7]&3e_2dPBtN5FU%hCX;Ffp=gaqL:<E,+j9`E
%R6]bo<X$oWjR1NAY?rB,e)IT*0#k+Km-)]EA]RJpC5t.-rmA2Y>kY-/p`rN=e54&">2&BMGa!;GDM7EI'"70;af*KX7'C&6jE1]U
%lau"-]0/?.IKS-Nn/V8m#eo$\?D!YCpsi+:l@gK/%sJj9>lSm5W1)\uV(YFS"h@mGAGj"m?H0Kum&,"YpX^a,MYU*C/;(udn5X)]
%i:h'Mabr[@\&u&#\OB`B;b*WonO1sm[9XG-RXK'cp6i5X\aoXK8OKC-.fb=!QL`+Fak692C;^C%H>BB,1&fi#f@R^ZRf-q*`6JCm
%bO]5oPrIV718@b\0b!L:*R??%Tm)@5VCs.3e3q>>SG5&;idL:jl\:o2LkY3f@60g+#;Rh#P[)kHe_MO%_/M*#fm[\Y/s.>jH7&NR
%o>QfQ-B+*hE#]CiZjFMBelN<,g`-k-.<8Wsg-l=C13F1=,2BVqf<el?io)UB*U8e/R$oX4ZK_,]%2#l)MgUUYA8'6VMmt:\T,KeS
%@AT8@ji^6h!5WiSHdXIiIsu0dbAJcHr:Lft*I?P7oAOWep;=ZDlaPdLnaF6kk.BONj8AX9r:h@`r:kc656(%pYD)HEq;W!XroNal
%s8(3Bcej3C_p9G)kL53I5Q:H,0->]>o\ZkPp#1\PT76e$VpCu!r;<0Or@]Z@oGmAVGCTCcJ,&`,rs/Q07nE~>
%AI9_PrivateDataEnd
