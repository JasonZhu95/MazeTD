%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_1.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 95 98
%%HiResBoundingBox: 0 0 94.1533 97.3103
%%CropBox: 0 0 94.1533 97.3103
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:37:18+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:37:18+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:37:18+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXz1+cn/OWGj+W5ZtE8mLDrGspVJ9QY8rOBuhC8SPWcex4jxO4xV8sea/zO8/&#xA;+bJpJNf127vUkrW2MhjtxXssEfCJfoXFWMxySRuHjYo67qykgg+xGKs38q/nf+anliRDpnmK7aBP&#xA;+PS6c3UFPD05+YX/AGNMVfRP5bf85k6HqTxWHnmyGkXTUUapaBpLQnxkjPKWL5guPGmKvorT9R0/&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:50f75e67-eabd-c14f-aeec-9bea4d50ad21</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:50f75e67-eabd-c14f-aeec-9bea4d50ad21</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:50f75e67-eabd-c14f-aeec-9bea4d50ad21</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:37:18+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>94.153227</stDim:w>
            <stDim:h>97.310256</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -97.3103 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 97.3103 li
94.1532 97.3103 li
94.1532 0 li
cp
clp
89.4321 48.6855 mo
89.1996 48.0117 88.83 47.3706 88.371 46.8037 cv
87.2719 41.3452 85.4203 34.6914 81.8574 30.2607 cv
80.6967 27.4931 78.8476 25.1538 77.7304 22.2934 cv
77.3251 21.2568 76.6616 20.5376 75.8915 20.0722 cv
74.4404 16.6953 72.7314 13.5127 69.5981 11.1621 cv
64.9072 7.64254 59.1655 6.88717 53.9179 4.68893 cv
51.415 3.64059 49.7167 2.31979 46.8544 3.41891 cv
43.6572 4.64596 40.8408 8.17428 38.4511 10.4638 cv
37.9941 10.8628 37.6552 11.3076 37.4101 11.7768 cv
37.2607 11.9506 37.1122 12.1255 36.9662 12.3017 cv
36.3486 12.1587 35.7055 12.1342 35.0668 12.2773 cv
23.9306 14.7773 13.1186 24.7754 8.40618 34.9091 cv
4.21087 43.9316 -.200265 59.2514 5.85442 68.31 cv
9.31097 73.4809 15.2221 77.3637 19.7949 81.4809 cv
24.62 85.8256 29.2695 89.208 35.4272 91.4209 cv
43.7778 94.4213 55.9711 96.2612 65.2177 92.7006 cv
65.3867 92.7153 65.5468 92.7465 65.7216 92.748 cv
74.1562 92.8271 85.7465 87.395 89.6469 79.5444 cv
93.9975 70.7876 92.5068 57.5981 89.4321 48.6855 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.203922 .215686 .211765 rgb
f
69.829 12.5429 mo
69.8622 11.9502 69.6083 11.3256 69.0834 11.0664 cv
68.5136 10.7856 67.9335 10.5312 67.3549 10.2739 cv
66.0229 9.40182 64.5234 8.80026 63.2031 8.5483 cv
61.871 8.02389 60.538 7.50338 59.2206 6.94772 cv
59.2099 6.92379 59.1982 6.90084 59.1865 6.8774 cv
59.2621 6.77535 59.3417 6.6777 59.4003 6.55709 cv
59.5766 6.19625 59.4687 5.86324 59.1567 5.62692 cv
58.0634 4.80026 57.0488 5.21871 55.7538 4.95992 cv
55.1586 4.84078 54.622 4.6274 54.0917 4.40914 cv
53.7138 4.18649 53.3325 3.97311 52.9628 3.73141 cv
52.6406 3.52096 52.2997 3.54684 52.0038 3.686 cv
51.7748 3.415 51.4784 3.19869 51.1464 3.12692 cv
47.2441 2.28365 44.9443 5.63326 41.9492 7.54147 cv
39.8124 8.90279 37.9716 10.313 36.2363 11.8872 cv
32.5087 13.5918 28.8456 15.9672 25.415 17.8413 cv
24.9042 18.1201 24.4037 18.4087 23.9116 18.7055 cv
23.1303 19.0854 22.371 19.5058 21.665 20.0278 cv
21.0722 20.4663 20.5385 20.9565 20.0449 21.4799 cv
18.4091 22.8984 16.9843 24.5405 15.8627 26.5112 cv
15.6386 26.9047 15.6425 27.2754 15.7763 27.5805 cv
15.7577 27.6064 15.7392 27.6318 15.7206 27.6577 cv
14.8051 28.9336 13.9701 30.2622 13.1952 31.6289 cv
12.7743 32.1723 12.3823 32.7519 12.0077 33.3505 cv
11.9521 33.4179 11.893 33.4819 11.8378 33.5498 cv
11.0546 34.5112 9.0097 36.6967 9.52923 38.2739 cv
9.2177 39.0337 8.92718 39.7988 8.65618 40.5581 cv
6.66204 43.1909 5.51702 46.5742 4.93304 50.0586 cv
4.78997 50.1889 4.66595 50.3339 4.58782 50.5009 cv
3.59661 52.6079 4.06389 55.2827 4.32952 57.5288 cv
4.36809 57.8559 4.42034 58.1801 4.46868 58.5048 cv
4.46966 58.5258 4.47014 58.5478 4.47112 58.5688 cv
4.47845 58.7241 4.50384 58.8671 4.53997 59.0014 cv
4.62688 59.5327 4.72307 60.062 4.82757 60.5888 cv
5.04632 62.0913 5.37981 63.5468 5.91839 64.8964 cv
6.0136 65.2065 6.10052 65.5185 6.20305 65.8271 cv
6.34173 66.2441 6.57464 66.5512 6.85589 66.7705 cv
7.20501 67.332 7.60247 67.8671 8.0678 68.3637 cv
8.24016 71.7524 10.8998 74.8686 12.8403 77.4697 cv
15.3251 80.7998 18.0927 83.9624 21.2831 86.6338 cv
22.624 87.7568 24.7875 86.7319 24.7021 85.1953 cv
24.935 85.4526 25.1718 85.7085 25.4023 85.9663 cv
26.1948 86.8525 27.54 85.521 26.7118 84.6572 cv
26.4565 84.3911 26.2045 84.1191 25.9506 83.8505 cv
25.9985 83.559 25.9311 83.2421 25.6601 82.956 cv
24.2548 81.4721 22.8442 79.9751 21.4833 78.435 cv
21.4677 78.3564 21.4472 78.2763 21.413 78.1948 cv
19.7826 74.2426 17.9413 70.393 15.6938 66.7505 cv
14.2494 64.4101 12.4609 61.1982 10.1806 59.1689 cv
11.0795 53.8945 12.7895 48.9995 14.5893 44.1059 cv
14.5746 44.2026 14.5634 44.3003 14.5673 44.4008 cv
14.6117 45.3852 15.3657 46.2172 16.3837 46.2172 cv
17.3339 46.2172 18.2441 45.3818 18.2001 44.4008 cv
18.1723 43.7695 17.8495 43.2041 17.3544 42.8774 cv
17.4028 42.7338 17.4233 42.5698 17.3251 42.4399 cv
17.2001 42.2744 17.0888 42.1547 16.9013 42.059 cv
16.8017 42.0166 16.7011 41.9746 16.601 41.9331 cv
16.5878 41.9218 16.5766 41.9116 16.5322 41.8794 cv
16.2265 41.6357 15.8984 41.5029 15.5497 41.498 cv
16.4657 39.0146 17.373 36.5151 18.1791 33.9497 cv
18.4379 33.1259 18.1699 32.539 17.6908 32.1884 cv
17.7607 32.1284 17.8339 32.0761 17.9047 32.0185 cv
18.0546 31.9741 18.2016 31.8891 18.3466 31.7832 cv
21.3769 30.622 23.8603 28.2295 26.4174 25.9672 cv
27.5956 25.4775 28.7265 24.9008 29.8251 24.2651 cv
33.7563 22.9194 37.7211 21.5922 41.4809 19.9008 cv
43.5781 18.957 45.1933 17.7016 46.9877 16.3022 cv
49.5117 14.3339 52.2363 13.6167 54.9072 12.0991 cv
55.205 12.1338 55.5029 12.1621 55.7997 12.1992 cv
56.5439 12.2929 57.039 11.9834 57.3158 11.518 cv
58.4677 11.7695 59.6078 12.1733 60.7421 12.7954 cv
62.5087 13.7646 64.3769 14.6479 66.0615 13.914 cv
66.1767 13.9463 66.2905 13.9853 66.4067 14.0097 cv
66.8862 14.874 67.2118 15.7993 67.7861 16.6059 cv
68.7284 17.9282 70.9462 17.5405 70.9618 15.7456 cv
70.9716 14.5776 70.5326 13.4975 69.829 12.5429 cv
cp
.317647 .290196 .301961 rgb
f
25.5546 35.229 mo
24.9023 34.5796 23.9677 34.4184 23.1235 34.7749 cv
22.4814 35.0454 22.0693 35.5297 21.8222 36.1401 cv
21.2587 36.9028 21.1845 37.8017 21.6972 38.6733 cv
22.0756 39.3164 22.728 39.8588 23.5156 39.8086 cv
24.2382 39.7627 24.6005 39.1381 24.5038 38.5815 cv
25.204 38.3916 25.787 37.9301 26.0458 37.0879 cv
26.2441 36.4423 26.0263 35.6982 25.5546 35.229 cv
cp
f
60.1796 32.2573 mo
59.3896 30.5014 57.831 30.6655 56.7348 30.415 cv
56.1943 30.2915 55.6474 29.8291 55.0463 29.6938 cv
53.9179 29.4404 52.6308 29.7241 51.5058 29.854 cv
47.1225 30.3613 41.6435 31.6357 39.7158 36.1084 cv
39.2353 37.2236 40.2104 38.2231 41.3349 37.7275 cv
42.1933 37.3496 42.9911 36.9819 43.767 36.6372 cv
45.1142 37.6137 46.5195 37.4697 48.2211 36.9834 cv
51.6323 36.0083 54.4902 35.4892 58.0556 35.9585 cv
60.1142 36.2295 60.8388 33.7207 60.1796 32.2573 cv
cp
f
28.3696 59.6298 mo
26.7675 58.4897 24.8075 58.2026 23.0507 57.4052 cv
20.6034 56.2944 18.1879 59.0747 20.1186 61.2055 cv
21.4799 62.708 23.2616 64.0449 25.3212 63.934 cv
25.8251 64.4902 26.2846 65.1196 26.746 65.7993 cv
27.9838 67.6206 31.3456 67.1294 31.204 64.5918 cv
31.0873 62.5078 30.0619 60.8335 28.3696 59.6298 cv
cp
f
66.3368 49.8745 mo
65.6703 49.6733 64.9892 49.5732 64.3056 49.5224 cv
63.8256 49.2197 63.2045 49.0766 62.4667 49.2075 cv
61.2206 49.4287 60.0283 49.9829 59.121 50.8715 cv
57.2031 52.7509 59.6923 56.1113 62.0253 54.6362 cv
62.2353 54.5034 62.4247 54.3842 62.6127 54.2724 cv
62.9638 54.1762 63.3124 54.1113 63.6616 54.0893 cv
64.5302 54.2407 65.3593 54.3657 66.3368 54.2265 cv
67.2997 54.0888 67.9936 52.9487 67.9936 52.0503 cv
67.9936 51.0434 67.289 50.1616 66.3368 49.8745 cv
cp
f
47.061 79.124 mo
45.477 77.5341 42.8183 77.4873 40.4946 77.3867 cv
39.9369 77.207 39.373 77.0424 38.7739 76.958 cv
37.8945 76.8335 37.1606 77.4316 37.1747 78.2216 cv
36.6288 79.288 36.9335 80.9072 38.3329 81.2124 cv
39.5409 81.4755 40.7646 81.7046 41.996 81.8545 cv
43.6728 82.1377 45.3764 82.2387 46.7695 81.3881 cv
47.56 80.9047 47.7265 79.792 47.061 79.124 cv
cp
f
70.0693 72.1118 mo
70.3154 70.6855 68.8857 69.3247 67.455 69.7666 cv
66.663 70.0112 65.9824 70.5117 65.5888 71.2529 cv
65.3857 71.6367 65.2763 72.0195 65.2411 72.4028 cv
65.2187 72.4101 65.1933 72.4116 65.1718 72.4199 cv
64.5785 72.6528 64.1054 73.1294 64.1137 73.8095 cv
64.1381 75.7065 66.4267 76.2622 67.8456 75.5337 cv
67.9701 75.4697 68.0834 75.395 68.1948 75.3183 cv
68.9189 75.1684 69.4765 74.7983 69.9492 74.1132 cv
70.3398 73.5459 70.3271 72.7475 70.0693 72.1118 cv
cp
f
68.6689 77.3344 mo
68.5468 76.5229 67.7773 75.6137 66.8549 75.7329 cv
65.8906 75.8579 64.829 75.8369 63.8925 76.103 cv
63.1747 76.3066 62.1113 77.0532 62.497 77.9365 cv
62.8281 78.6928 63.7797 79.0068 64.499 79.2617 cv
65.3617 79.5669 66.4784 79.7187 67.3461 79.3613 cv
68.1962 79.0107 68.8168 78.3164 68.6689 77.3344 cv
cp
.14902 .156863 .152941 rgb
f
33.1288 68.0263 mo
32.7187 65.7651 30.1659 65.6108 28.1435 65.4658 cv
27.9179 65.1269 27.5859 64.8442 27.1313 64.6865 cv
25.7646 64.2119 24.79 63.2973 23.5009 62.7329 cv
22.7446 62.4018 21.9355 62.2749 21.12 62.187 cv
20.7167 61.7055 20.2983 61.2392 19.7988 60.8496 cv
18.7421 60.0239 17.2392 60.7617 17.5268 62.1718 cv
17.9267 64.1303 19.3378 65.9463 20.9013 67.1601 cv
21.4599 67.5942 22.1449 68.0835 22.8788 68.539 cv
23.5898 70.7148 25.8222 71.5473 28.1191 71.4238 cv
30.1454 71.3144 33.663 70.9721 33.1288 68.0263 cv
cp
f
60.1459 36.6704 mo
60.2265 35.6674 59.745 34.6972 58.478 34.4917 cv
53.9462 33.7563 49.6669 36.3842 45.2792 35.5503 cv
44.0419 35.3154 42.9369 36.1289 42.4975 37.1372 cv
41.374 36.8603 40.767 36.8676 39.6347 37.0234 cv
39.6064 37.0258 39.5805 37.0312 39.5536 37.0351 cv
39.4716 37.0463 39.3964 37.0561 39.3095 37.0688 cv
37.7324 37.2998 37.4638 39.4653 38.4169 40.4497 cv
40.9921 43.1074 46.1157 43.4902 49.6288 43.499 cv
53.3749 43.5083 57.6992 42.9565 60.5102 40.291 cv
61.6611 39.1997 61.2812 37.5009 60.1459 36.6704 cv
cp
f
68.5771 51.0556 mo
67.517 51.2534 66.6215 51.5356 65.8989 52.1743 cv
64.5478 52.1743 63.2739 52.581 62.0785 53.2119 cv
61.582 53.4736 61.122 53.8369 60.601 54.0537 cv
59.3383 54.0254 58.0795 53.9018 56.9394 53.8286 cv
54.6982 53.684 53.9584 56.9443 55.579 58.0131 cv
56.683 59.8046 58.7704 60.7646 60.955 60.7392 cv
63.5912 60.7089 68.1913 59.3545 69.7822 57.0756 cv
70.0107 56.749 70.164 56.4306 70.2568 56.123 cv
70.5444 55.8999 70.8276 55.6611 71.103 55.395 cv
73.0937 53.4741 70.9877 50.6049 68.5771 51.0556 cv
cp
f
62.0024 19.5883 mo
61.3061 18.3979 59.7226 18.1386 58.5009 18.5258 cv
57.7114 18.7763 56.6923 19.393 55.891 20.1836 cv
54.2826 20.0737 53.6191 22.0849 54.6396 23.1338 cv
54.6845 23.3432 54.7538 23.5517 54.873 23.7563 cv
55.6391 25.0659 57.3823 24.6953 58.4228 23.9995 cv
58.4374 23.9892 58.4511 23.978 58.4658 23.9677 cv
59.4755 23.874 60.4531 23.5698 61.2079 22.9975 cv
62.2631 22.1982 62.7001 20.7812 62.0024 19.5883 cv
cp
f
30.1591 35.5449 mo
29.9487 34.3486 29.2538 33.3393 28.1586 32.7973 cv
27.0429 32.2451 25.5961 32.4609 24.9057 33.5761 cv
24.4086 34.3784 24.4789 35.5151 24.1694 36.4116 cv
23.9296 37.1054 23.5673 37.7094 23.2079 38.3173 cv
22.9648 38.2793 22.748 38.2314 22.5883 38.185 cv
21.3388 37.8242 20.6264 39.3535 21.391 40.2417 cv
21.6894 40.5879 22.0341 40.8872 22.3993 41.1543 cv
22.7919 42.7021 24.6713 43.6845 26.1655 42.2763 cv
26.2382 42.208 26.2944 42.1215 26.3627 42.0483 cv
26.7519 41.9511 27.1386 41.8169 27.5136 41.5952 cv
29.373 40.4951 30.5268 37.6342 30.1591 35.5449 cv
cp
f
52.0453 68.9975 mo
50.4579 69.1098 48.9199 69.3725 47.3969 69.83 cv
45.7177 70.3339 45.6811 72.4394 46.8852 73.2446 cv
46.6606 74.7451 47.9682 76.5776 49.6904 75.9228 cv
49.8764 75.852 50.0429 75.7553 50.2221 75.6748 cv
50.2245 75.6816 50.2275 75.688 50.2304 75.6948 cv
50.5873 75.5224 51.0595 75.3881 51.4784 75.1298 cv
51.81 74.9253 52.0849 74.6474 52.3378 74.351 cv
52.9765 73.7993 53.54 73.1572 53.9902 72.3862 cv
54.8046 70.9912 53.7851 68.874 52.0453 68.9975 cv
cp
f
80.6576 59.207 mo
80.3661 59.4389 80.0458 59.6504 79.7148 59.8515 cv
79.0405 59.9838 78.3847 60.313 77.7831 60.6386 cv
77.6166 60.729 77.456 60.8188 77.2968 60.9062 cv
76.3515 61.1743 75.3764 61.29 74.4404 61.2099 cv
74.0556 60.8818 73.5468 60.7392 73.0522 60.7768 cv
72.6342 60.1445 71.9052 59.7666 70.9965 60.0131 cv
67.956 60.5507 li
67.495 60.437 67.0117 60.6274 66.7651 61.0356 cv
66.5644 61.3667 li
66.3847 61.6635 66.3305 62.0327 66.3827 62.3891 cv
60.8984 62.8154 50.4418 61.6709 50.4736 61.394 cv
50.6406 59.9404 48.8857 58.789 47.5966 59.2026 cv
47.8652 59.1162 45.1147 60.2236 45.2714 60.2895 cv
45.2011 60.2597 45.0795 60.0366 44.9384 59.7524 cv
45.6723 59.3598 45.518 58.018 44.5585 58.1035 cv
44.4892 58.0937 44.4199 58.0844 44.351 58.0747 cv
44.6659 57.5224 45.0278 56.9975 45.4482 56.5068 cv
46.9311 54.4799 44.0507 52.4492 42.2333 53.6255 cv
42.1108 53.497 41.9863 53.3701 41.8422 53.2553 cv
42.1811 53.2817 42.5439 53.2187 42.9155 53.0166 cv
43.4501 52.7255 51.3617 49.3051 51.4052 49.6162 cv
51.6215 51.1547 53.9633 51.6626 54.9174 50.5434 cv
56.6948 48.4585 57.7773 48.0239 60.1059 47.188 cv
62.5585 46.3071 65.7197 45.0947 67.7822 43.4941 cv
68.1493 43.2089 69.6103 42.1372 69.6933 41.7671 cv
69.9653 42.0073 70.3642 42.5078 70.7021 42.4892 cv
71.5991 42.4399 72.3451 42.3881 73.0619 42.2539 cv
73.0951 42.4223 73.1298 42.5883 73.1703 42.7461 cv
73.3813 43.563 74.0859 44.291 74.9135 44.4892 cv
75.3617 44.5966 75.7792 44.5556 76.1806 44.4697 cv
76.163 44.6289 76.1518 44.7509 76.1464 44.8003 cv
76.0278 45.917 76.9462 46.7451 77.8588 47.1455 cv
77.727 47.2988 77.6708 47.5713 77.7011 47.9785 cv
77.1288 50.0815 78.9907 51.3032 80.6161 51.0005 cv
80.9389 52.8676 81.2275 54.7407 81.4858 56.6167 cv
81.5253 56.9043 81.537 57.7255 81.5908 58.7641 cv
81.2665 58.8383 80.9472 58.9765 80.6576 59.207 cv
cp
90.9106 54.5307 mo
90.1357 48.1748 87.6318 40.9726 84.0185 35.6552 cv
83.7538 35.2656 83.2773 34.9785 82.7905 34.9121 cv
81.745 32.4155 80.2826 30.0107 79.2529 27.5913 cv
78.4687 25.7485 77.6992 23.9033 76.9252 22.061 cv
76.3593 18.9941 75.1625 16.3725 73.2158 13.5932 cv
72.1342 12.0493 69.3451 12.9248 69.9892 14.9536 cv
70.8066 17.5288 71.6694 20.0874 72.582 22.6289 cv
72.7143 23.2368 72.8593 23.8462 73.0058 24.456 cv
71.0556 23.8242 68.6254 25.7724 68.2128 27.8686 cv
68.1435 28.2202 68.1376 28.5732 68.1825 28.914 cv
66.9228 29.6567 65.7817 30.8203 65.0829 31.7026 cv
63.29 33.9663 65.9667 36.6274 68.2314 34.8515 cv
68.2792 34.8139 68.3437 34.7719 68.4013 34.7314 cv
69.1738 35.6919 71.0829 35.7138 71.6445 34.165 cv
71.6484 34.1543 71.6537 34.1416 71.6576 34.1308 cv
71.6718 34.143 71.6904 34.1469 71.704 34.1596 cv
72.3642 34.7841 71.7734 36.4751 71.8945 37.3247 cv
71.9169 37.4824 71.9516 37.6318 71.9911 37.7773 cv
69.7167 36.5493 67.08 38.6538 64.6845 39.9843 cv
60.4306 42.3471 56.9208 43.1045 53.5546 46.0044 cv
50.1943 44.5595 43.5878 48.2509 40.9638 49.6772 cv
39.706 50.3608 39.8193 51.7519 40.5556 52.5879 cv
39.8574 52.4238 39.1948 52.5463 38.4736 52.5151 cv
39.2841 51.3945 39.1259 49.3911 37.4081 48.729 cv
34.6015 47.6469 31.7997 47.2841 28.8622 48.1709 cv
25.7729 49.1035 27.582 48.33 25.4433 46.5698 cv
24.8554 46.0859 24.0043 45.6655 23.2197 45.9819 cv
20.8906 46.9223 19.3407 49.0029 17.0927 49.9941 cv
16.5483 50.1294 16.0048 50.3169 15.4604 50.5879 cv
13.4233 51.601 14.8705 54.6963 16.9706 54.1709 cv
17.5839 54.0175 18.2826 53.8066 18.9721 53.5307 cv
21.3163 53.1796 24.3715 53.9228 26.4833 53.83 cv
29.9179 53.6792 29.8095 53.1045 33.5834 55.3711 cv
33.9946 55.6181 34.1865 56.1176 34.706 56.3208 cv
35.8954 56.7861 37.2441 56.4687 38.3417 56.9262 cv
38.6215 57.0424 38.8544 57.2124 39.0702 57.4052 cv
38.6503 58.165 38.288 58.9819 37.9501 59.8886 cv
37.3437 61.5136 39.1894 63.205 40.7602 62.6987 cv
41.037 62.6093 41.2836 62.5224 41.5195 62.4336 cv
41.8842 63.2671 42.3022 64.4731 43.5458 64.9228 cv
44.9667 65.437 46.1474 65.0229 47.3232 64.4213 cv
49.6108 66.6235 54.1757 66.811 57.1552 66.582 cv
60.4335 66.33 69.0702 67.6884 72.2577 64.645 cv
72.6425 64.9218 73.1132 65.1108 73.6181 65.2353 cv
73.7045 65.2768 73.7753 65.33 73.8715 65.3652 cv
74.7206 65.6713 75.6142 65.7778 76.5126 65.7275 cv
76.5912 65.8603 76.6786 65.9873 76.7763 66.1035 cv
77.7255 67.2334 78.7743 67.2368 79.7826 66.7011 cv
79.3876 67.3598 79.0815 68.0927 78.8202 68.8164 cv
78.436 68.9965 78.1381 69.3354 78.0624 69.8701 cv
77.7324 72.2031 76.6689 74.1108 75.7099 76.1059 cv
71.5214 78.2104 67.3349 80.3291 63.0927 82.3169 cv
62.8993 81.8828 62.6034 81.4912 62.1948 81.2241 cv
61.8095 80.9726 61.4062 80.8618 60.9824 80.7949 cv
60.5615 79.9633 59.8979 79.3969 59.1215 78.8667 cv
58.2343 78.2607 56.9174 78.6147 56.3095 79.4277 cv
55.7231 80.2129 55.6244 81.5835 56.4658 82.2754 cv
56.2621 83.0747 56.5322 83.9838 57.0976 84.6098 cv
54.5678 85.438 51.9638 86.2783 49.7353 87.4995 cv
48.6899 87.396 47.6484 87.249 46.6108 87.0649 cv
47.435 86.8076 48.2812 86.4521 49.1777 85.9907 cv
51.3491 84.8735 49.8022 81.6684 47.5702 82.1782 cv
43.457 83.1167 40.102 81.6933 36.3281 80.4716 cv
36.1191 80.2065 35.9374 79.9238 35.8202 79.6045 cv
35.4413 78.5708 33.6996 78.3066 33.4472 79.6045 cv
32.7162 83.3676 35.7065 85.1523 38.8036 86.455 cv
39.5414 86.7656 40.2358 86.9887 40.914 87.167 cv
40.8827 87.2851 40.8603 87.4062 40.8544 87.5302 cv
39.852 87.3584 38.8554 87.1508 37.8759 86.8535 cv
34.7909 85.9174 32.1034 84.1318 28.9589 83.4087 cv
27.1532 82.9926 26.165 85.0112 27.249 86.3466 cv
32.0219 92.2255 40.1581 93.7773 47.3388 93.7793 cv
51.2421 93.7802 56.934 94.0366 61.0859 92.2436 cv
64.2587 93.3681 68.5517 92.7216 72.4472 91.5693 cv
74.3876 91.2055 76.1962 90.5273 77.8632 89.6001 cv
78.2016 89.4546 78.5273 89.311 78.8349 89.1709 cv
84.2045 86.728 88.0165 82.6792 88.8857 76.9184 cv
89.0624 76.2729 89.2031 75.5796 89.3256 74.8671 cv
90.4604 72.8559 91.0629 70.458 91.1484 68.3686 cv
91.1996 67.1045 90.9755 65.6684 90.4291 64.4843 cv
91.4506 61.3252 91.2724 57.4961 90.9106 54.5307 cv
cp
f
44.9257 67.1264 mo
42.5883 67.1264 42.5844 70.7592 44.9257 70.7592 cv
47.2631 70.7592 47.267 67.1264 44.9257 67.1264 cv
cp
f
29.4032 61.8027 mo
29.0312 59.2671 23.6738 57.4497 21.7138 58.9087 cv
20.6679 59.687 20.8368 60.8144 21.4472 61.498 cv
21.3749 61.5405 li
22.371 62.3344 23.5038 62.3296 24.6747 62.7334 cv
25.6777 63.0791 26.8212 63.9111 27.8935 63.7851 cv
28.9916 63.6557 29.5634 62.8935 29.4032 61.8027 cv
cp
.603922 .576471 .588235 rgb
f
51.4985 30.9707 mo
49.706 30.7978 47.7826 31.5981 46.1064 32.1499 cv
44.9379 32.5346 45.0458 34.5776 46.415 34.4292 cv
48.2031 34.2348 50.1679 34.4463 51.8993 33.935 cv
53.6088 33.4306 53.1445 31.1294 51.4985 30.9707 cv
cp
f
63.7675 48.8588 mo
62.9926 48.5781 61.7529 48.9287 61.0702 49.3623 cv
60.1283 49.9609 59.8554 51.2255 60.3749 52.185 cv
60.7143 52.813 61.4604 52.9004 62.0073 52.6049 cv
62.0326 52.6054 62.0575 52.6059 62.0742 52.6059 cv
62.2846 52.6045 62.498 52.6113 62.7089 52.6074 cv
63.7294 52.5888 64.7114 52.0507 64.9916 51.0146 cv
65.2533 50.0468 64.6625 49.1836 63.7675 48.8588 cv
cp
f
44.2553 79.8984 mo
43.2866 78.3852 41.2944 78.5976 39.7783 77.9746 cv
38.2753 77.3564 37.2387 79.559 38.2617 80.5796 cv
39.7167 82.0307 42.8803 83.5224 44.2553 81.1718 cv
44.4765 80.7944 44.496 80.2744 44.2553 79.8984 cv
cp
f
69.0937 73.1587 mo
69.5575 72.5786 69.8027 71.768 69.3613 71.0839 cv
68.9316 70.4174 68.2006 70.1333 67.4282 70.2973 cv
66.5497 70.4838 65.999 71.0683 65.54 71.8105 cv
64.5009 73.4912 66.9384 75.4238 68.3007 73.9409 cv
68.3681 73.8632 68.4399 73.7905 68.5156 73.7212 cv
68.6537 73.6298 68.7875 73.5317 68.912 73.4218 cv
69.2431 73.0224 69.3036 72.935 69.0937 73.1587 cv
cp
f
62.0717 6.83199 mo
62.1196 6.50192 62.0219 6.15231 61.7636 5.85592 cv
59.8808 3.69137 55.4765 3.83444 52.8105 3.74362 cv
51.4433 3.69723 50.2245 3.81735 49.0956 4.12594 cv
49.0624 4.13473 49.0297 4.14498 48.997 4.15572 cv
47.3915 4.61373 45.9706 5.46774 44.6034 6.86862 cv
44.5937 6.87887 44.5917 6.89108 44.582 6.90133 cv
44.4101 6.74264 44.1884 6.63668 43.9199 6.64987 cv
38.5707 6.90719 33.29 11.0263 28.7128 14.311 cv
28.0707 14.1753 27.3954 14.373 26.8202 14.8305 cv
25.6674 15.7485 24.6069 16.7592 23.6088 17.8286 cv
19.7817 20.5297 16.4252 23.3935 13.7104 27.4619 cv
13.4765 27.813 13.4653 28.1743 13.5859 28.4882 cv
12.4579 30.1421 11.6591 32.1049 10.7665 33.8349 cv
9.69866 35.9057 8.66106 37.9917 7.6386 40.0844 cv
4.01751 42.7866 2.71673 48.0288 2.51409 53.0976 cv
1.32122 54.206 2.01018 57.0532 2.74847 59.1928 cv
2.83196 59.9257 2.92766 60.6323 3.03753 61.2802 cv
3.17571 62.0927 3.63665 62.5581 4.20354 62.7524 cv
5.247 64.9941 6.53411 67.0825 7.99798 69.0615 cv
8.91302 71.1875 11.079 73.2231 12.4062 74.728 cv
14.9218 77.5815 17.7851 80.1084 20.6948 82.5498 cv
22.0141 83.6567 23.7773 81.9482 22.6005 80.644 cv
20.1616 77.9409 17.8715 75.1186 15.5444 72.3203 cv
14.2118 70.7182 12.686 68.0898 10.7792 66.6977 cv
9.30755 64.333 8.15911 61.8144 7.13665 59.2109 cv
6.68401 55.8076 6.8388 52.4013 7.7094 49.0571 cv
7.82561 48.6108 7.96477 48.1704 8.11126 47.7314 cv
8.48577 47.5761 8.82171 47.2773 9.05462 46.7832 cv
10.7734 43.1435 12.5439 39.5297 14.3891 35.9521 cv
14.9413 34.8823 15.6117 33.7929 16.2275 32.6743 cv
19.0351 29.3574 22.0068 26.2509 25.0488 22.9931 cv
25.5185 22.4897 26.6376 21.5468 27.7236 20.4414 cv
29.2909 19.6303 30.8583 18.8183 32.4047 17.9716 cv
34.7734 16.6748 37.5029 15.5922 39.6669 13.9238 cv
42.5971 12.7954 45.4565 11.6167 48.3368 10.3169 cv
49.9911 9.57028 52.2709 8.99752 53.8393 7.83639 cv
55.7807 8.32174 57.6171 9.14938 59.496 10.1684 cv
61.4433 11.2246 63.3583 13.1738 65.5908 12.0151 cv
65.9203 11.8442 66.1074 11.4629 66.1132 11.1045 cv
66.1493 9.05758 64.0927 7.75631 62.0717 6.83199 cv
cp
f
80.1811 38.0478 mo
79.4921 37.539 78.121 37.9526 77.8598 37.2041 cv
77.7226 36.81 77.352 36.4433 76.8993 36.4731 cv
76.7675 36.4814 76.6327 36.5102 76.4994 36.5283 cv
76.8075 36.354 77.0859 36.1352 77.3432 35.8872 cv
77.5151 36.0898 77.6972 36.2846 77.9062 36.4585 cv
78.6367 37.0673 79.6528 36.1015 78.9667 35.3979 cv
78.8495 35.0122 78.7319 34.6269 78.6142 34.2412 cv
78.8544 33.5195 78.3075 32.9248 77.6659 32.8066 cv
77.7704 32.5322 77.8378 32.2641 77.9076 31.9946 cv
78.4208 33.1079 78.9257 34.1313 79.2543 34.9375 cv
79.6996 36.0283 80.121 37.2299 80.5732 38.4453 cv
80.4565 38.2973 80.3315 38.1587 80.1811 38.0478 cv
cp
91.4731 65.3027 mo
91.5136 62.2363 90.9169 59.1367 90.1581 56.1147 cv
90.0654 51.5166 88.0829 46.4687 85.9247 41.8872 cv
85.2231 39.5195 83.9208 37.2417 82.9462 35.0537 cv
82.1113 33.1792 81.2685 31.3066 80.3505 29.4707 cv
79.892 28.5542 79.4208 27.6518 78.8964 26.7705 cv
78.645 26.3256 78.374 25.8921 78.0849 25.4702 cv
77.9775 25.0991 77.8388 24.895 77.6718 24.8403 cv
77.6879 24.539 77.5624 24.2783 77.246 24.1762 cv
77.1835 24.1557 77.121 24.1357 77.0585 24.1152 cv
76.6821 23.9936 76.2875 24.2583 76.1777 24.6157 cv
76.0781 24.9389 76.0322 25.291 76.0219 25.6601 cv
74.4184 24.8252 73.0302 27.226 74.6113 28.1689 cv
74.5102 28.1089 73.8237 30.4467 73.7426 30.6904 cv
73.5019 31.413 73.997 32.2661 74.6865 32.5727 cv
74.1264 33.9536 73.5654 35.4052 74.6718 36.4067 cv
74.8906 36.6045 75.1381 36.7158 75.3945 36.7636 cv
73.5947 37.2885 71.7314 38.3911 70.1659 39.0874 cv
66.9023 40.539 63.6923 42.1123 60.4907 43.6948 cv
59.5903 44.1396 60.3779 45.4384 61.2714 45.0302 cv
64.5312 43.54 67.8202 42.122 71.1122 40.7065 cv
71.8554 40.3872 76.0527 38.2729 75.9555 38.2329 cv
76.0268 38.2622 75.9448 39.0859 76.267 39.1845 cv
78.3349 39.8154 78.9731 42.2583 81.4189 42.3222 cv
81.6801 42.3291 81.9091 42.2021 82.081 42.018 cv
82.5688 42.9995 83.1132 43.9316 83.7665 44.7431 cv
84.1659 46.1215 84.5449 47.5083 84.8906 48.915 cv
85.1952 50.1567 85.415 51.4594 85.6518 52.7631 cv
85.2812 55.2031 85.7089 58.0034 85.5068 60.3452 cv
85.4384 61.1386 85.3803 61.9296 85.3359 62.7192 cv
84.4179 63.0283 83.5097 63.3564 82.581 63.6416 cv
81.5473 63.9589 81.995 65.3789 83.0165 65.2236 cv
83.2499 65.1884 83.4638 65.1479 83.6816 65.1084 cv
83.4824 65.479 83.4931 65.8671 83.6425 66.2138 cv
83.5995 66.5424 83.5956 66.8823 83.6728 67.2441 cv
83.8202 67.9404 84.5898 68.4985 85.2909 68.4765 cv
83.7758 68.5244 83.5605 74.3291 83.3603 74.7324 cv
82.3525 76.7622 80.5434 79.646 78.9159 81.559 cv
78.537 81.4033 78.0873 81.4096 77.624 81.6977 cv
75.7031 82.8911 73.7792 84.0805 71.8613 85.2788 cv
71.5341 85.4829 71.3256 85.7417 71.2123 86.0205 cv
70.999 86.2099 70.7953 86.4116 70.6103 86.6274 cv
70.4462 86.8193 70.3388 87.02 70.2748 87.2207 cv
70.0468 87.2651 69.8183 87.3086 69.5903 87.3471 cv
64.9745 88.1284 60.3393 88.9072 55.6757 89.3227 cv
55.0068 89.3823 54.5366 89.7319 54.2656 90.186 cv
54.0927 90.2968 53.9306 90.4194 53.7939 90.5634 cv
52.4589 90.5444 51.1166 90.5791 49.8232 90.5175 cv
48.3559 90.4477 46.8867 90.3896 45.4174 90.3315 cv
45.3652 89.3628 44.7363 88.5669 43.7573 88.4101 cv
43.8036 88.227 43.8032 88.0337 43.7455 87.8418 cv
43.7724 87.8691 li
43.7607 87.8247 43.7377 87.788 43.7211 87.7465 cv
43.7206 87.7465 li
43.4804 87.1479 42.7773 86.8637 42.2079 87.1137 cv
42.1967 87.1152 42.1855 87.1167 42.1747 87.1186 cv
41.2021 86.6919 40.2079 86.3056 39.2299 85.8891 cv
38.7494 85.6845 38.456 86.3652 38.9501 86.5532 cv
39.6762 86.8291 40.3837 87.1015 41.0312 87.5346 cv
41.1982 87.6464 41.413 87.7607 41.5771 87.895 cv
41.5468 88.0444 41.5497 88.1953 41.579 88.3432 cv
41.3578 88.4135 41.1523 88.541 41.0185 88.7832 cv
40.9492 88.831 40.9247 88.8842 40.9452 88.9428 cv
40.8281 89.0747 40.7421 89.2158 40.685 89.3618 cv
40.6074 89.4707 40.5375 89.5854 40.4872 89.7099 cv
39.9286 89.6504 39.3779 89.581 38.8476 89.4824 cv
36.808 89.1025 34.7783 88.6748 32.7509 88.2324 cv
32.4208 88.0644 32.0903 87.8979 31.7626 87.7246 cv
31.2773 87.4672 30.8124 87.5117 30.4491 87.7216 cv
30.0156 87.624 29.5805 87.5322 29.1474 87.4331 cv
27.5644 87.0722 26.8964 89.4384 28.4745 89.874 cv
29.4238 90.1362 30.3769 90.3808 31.3285 90.6323 cv
32.3867 91.247 33.4667 91.8198 34.5605 92.3667 cv
34.7416 92.6987 35.0517 92.9575 35.5077 93.0473 cv
35.7577 93.0966 36.0048 93.1425 36.2533 93.1914 cv
37.7929 93.8999 39.6757 95.0879 41.3271 94.3925 cv
41.4496 94.3413 41.56 94.2705 41.663 94.1923 cv
44.0527 94.5991 46.4501 94.9477 48.895 95.1762 cv
52.7934 95.54 57.2392 96.5844 60.7245 94.4868 cv
60.8349 94.4204 60.9296 94.3432 61.0117 94.2588 cv
63.1049 94.0517 65.1977 93.8335 67.2885 93.5986 cv
69.6474 93.3339 72.4501 93.4751 74.0136 91.6489 cv
74.142 91.6132 74.2685 91.5713 74.3959 91.5337 cv
76.5468 91.1367 78.5868 90.4438 80.1811 88.9165 cv
80.1855 88.9121 80.1874 88.9077 80.1913 88.9033 cv
80.5024 88.7011 80.8154 88.5029 81.1176 88.2812 cv
84.037 86.1372 87.5644 82.8422 87.1952 78.9213 cv
87.4257 78.559 87.663 78.2002 87.8881 77.8349 cv
88.6996 76.5175 89.1015 75.1357 89.4667 73.7324 cv
90.3857 73.7285 91.2866 72.9238 91.5092 72.0693 cv
92.0737 69.9033 91.873 67.5996 91.4731 65.3027 cv
cp
.113725 .117647 .113725 rgb
f
34.2685 51.2226 mo
32.995 49.7495 30.5204 49.4799 28.3451 49.77 cv
27.1366 49.7407 25.9208 49.7583 24.8017 49.6616 cv
23.6679 49.5634 23.6523 51.3798 24.8017 51.4428 cv
25.0888 51.4585 25.3847 51.4795 25.6865 51.5029 cv
25.7768 51.5581 25.8925 51.5669 26.0195 51.54 cv
26.3949 51.5859 26.7704 51.6093 27.1454 51.6176 cv
27.8603 51.6713 28.5859 51.7124 29.3007 51.7089 cv
29.4736 51.7373 29.6464 51.7597 29.8212 51.7671 cv
30.0307 51.7763 30.2236 51.7573 30.4086 51.7246 cv
31.5527 51.8847 32.6469 52.2368 33.8046 52.3427 cv
34.4189 52.3994 34.6044 51.6113 34.2685 51.2226 cv
cp
f
51.6889 63.1255 mo
49.9643 62.3862 48.2343 62.3798 46.4506 61.8755 cv
45.0283 61.4731 43.7216 60.7793 42.3666 60.227 cv
42.5068 59.8178 42.6464 59.4087 42.787 58.999 cv
42.9506 58.5205 42.7983 58.1396 42.5117 57.896 cv
42.4697 57.2275 42.3959 56.5761 41.7626 56.1562 cv
41.1064 55.7207 40.0751 55.8281 39.2231 55.9082 cv
39.1103 55.5981 38.999 55.2871 38.9081 54.9716 cv
38.8144 54.6455 38.8261 54.167 38.5732 53.8969 cv
38.456 53.7719 38.2753 53.7202 38.1152 53.6772 cv
37.4174 53.4926 36.829 53.5029 36.2123 53.0463 cv
35.8998 52.8144 35.5825 53.3476 35.9047 53.5722 cv
36.4355 53.9423 36.9003 54.0507 37.5107 54.2011 cv
38.1533 54.3593 38.2656 54.3379 38.1205 55.1533 cv
38.0351 55.6333 37.8984 56.1088 37.8017 56.5874 cv
37.6879 57.1469 38.0453 57.6577 38.6327 57.6787 cv
39.1542 57.6972 39.8779 57.5844 40.3705 57.7246 cv
40.4706 57.7529 40.5229 57.7563 40.5546 57.7505 cv
40.5595 57.7597 40.56 57.7641 40.5668 57.7754 cv
40.6171 57.8574 40.5414 58.3823 40.5429 58.4643 cv
40.5429 58.4658 40.5439 58.4668 40.5439 58.4687 cv
40.2934 59.1826 40.0429 59.8969 39.7924 60.6108 cv
39.5795 61.2182 40.038 61.8549 40.6005 62.0346 cv
42.6957 62.7031 44.2812 64.1611 46.4892 64.5918 cv
48.3417 64.9526 49.9648 64.8344 51.6889 64.0561 cv
52.037 63.8994 52.0468 63.2788 51.6889 63.1255 cv
cp
f
57.8007 64.5175 mo
57.7363 64.5175 57.7363 64.6176 57.8007 64.6176 cv
57.8652 64.6176 57.8652 64.5175 57.8007 64.5175 cv
cp
f
54.496 38.1963 mo
53.2934 38.2397 52.0449 38.3535 50.7983 38.4199 cv
50.4755 37.5048 49.4755 36.833 48.4238 37.5048 cv
48.1357 37.6889 47.8266 37.8642 47.5322 38.0581 cv
47.2695 38.1938 46.999 38.3144 46.7011 38.4189 cv
45.0488 38.9975 45.4076 41.2983 46.8334 41.52 cv
47.2035 41.9047 47.6718 42.0839 48.1738 42.1406 cv
48.2114 42.1518 48.2348 42.1743 48.2763 42.1826 cv
50.0629 42.5337 51.9008 42.7724 53.6904 42.2959 cv
54.8593 41.9843 56.7089 41.227 56.8505 39.83 cv
57.0009 38.3383 55.6103 38.1562 54.496 38.1963 cv
cp
f
48.0507 17.6015 mo
45.3061 17.6015 45.3017 21.8672 48.0507 21.8672 cv
50.7953 21.8672 50.7997 17.6015 48.0507 17.6015 cv
cp
.317647 .290196 .301961 rgb
f
42.2177 21.1274 mo
41.2221 21.1274 41.2206 22.6743 42.2177 22.6743 cv
43.2128 22.6743 43.2143 21.1274 42.2177 21.1274 cv
cp
f
43.8837 23.6342 mo
41.3954 23.6342 41.3915 27.5014 43.8837 27.5014 cv
46.3725 27.5014 46.3764 23.6342 43.8837 23.6342 cv
cp
f
33.5507 27.4672 mo
32.9926 27.4672 32.9921 28.3344 33.5507 28.3344 cv
34.1088 28.3344 34.1093 27.4672 33.5507 27.4672 cv
cp
f
32.8798 24.8901 mo
32.4599 24.1928 31.5273 24.0107 30.8827 24.5088 cv
30.2265 25.0146 30.1904 25.9375 30.745 26.5376 cv
31.1347 26.9589 31.4775 27.3017 32.1064 27.2812 cv
32.6445 27.2636 33.0717 26.9262 33.2363 26.4209 cv
33.4325 25.8198 33.1762 25.3823 32.8798 24.8901 cv
cp
f
33.2177 32.9126 mo
31.3022 32.9126 31.2988 35.8891 33.2177 35.8891 cv
35.1327 35.8891 35.1357 32.9126 33.2177 32.9126 cv
cp
f
34.7177 36.4126 mo
32.8022 36.4126 32.7988 39.3891 34.7177 39.3891 cv
36.6327 39.3891 36.6357 36.4126 34.7177 36.4126 cv
cp
f
29.5507 44.0175 mo
29.4863 44.0175 29.4863 44.1176 29.5507 44.1176 cv
29.6152 44.1176 29.6152 44.0175 29.5507 44.0175 cv
cp
f
13.7177 57.7983 mo
11.4404 57.7983 11.4365 61.3374 13.7177 61.3374 cv
15.9946 61.3374 15.9985 57.7983 13.7177 57.7983 cv
cp
f
31.5507 58.2749 mo
29.2431 58.2749 29.2392 61.8608 31.5507 61.8608 cv
33.8583 61.8608 33.8622 58.2749 31.5507 58.2749 cv
cp
f
33.8837 61.0415 mo
32.1347 61.0415 32.1318 63.7602 33.8837 63.7602 cv
35.6337 63.7602 35.6367 61.0415 33.8837 61.0415 cv
cp
f
35.7177 67.351 mo
35.6533 67.351 35.6533 67.4511 35.7177 67.4511 cv
35.7817 67.4511 35.7822 67.351 35.7177 67.351 cv
cp
f
30.0507 74.728 mo
27.683 74.728 27.6791 78.4077 30.0507 78.4077 cv
32.4184 78.4077 32.4223 74.728 30.0507 74.728 cv
cp
f
23.7177 72.0175 mo
23.6532 72.0175 23.6532 72.1176 23.7177 72.1176 cv
23.7817 72.1176 23.7822 72.0175 23.7177 72.0175 cv
cp
f
26.0507 73.582 mo
23.9242 73.582 23.9208 76.8867 26.0507 76.8867 cv
28.1772 76.8867 28.1806 73.582 26.0507 73.582 cv
cp
f
42.2177 67.8852 mo
39.6235 67.8852 39.6191 71.9165 42.2177 71.9165 cv
44.8115 71.9165 44.8154 67.8852 42.2177 67.8852 cv
cp
f
57.7177 70.8139 mo
56.1034 70.8139 56.101 73.3217 57.7177 73.3217 cv
59.331 73.3217 59.3339 70.8139 57.7177 70.8139 cv
cp
f
59.0507 69.5175 mo
58.9863 69.5175 58.9863 69.6176 59.0507 69.6176 cv
59.1152 69.6176 59.1152 69.5175 59.0507 69.5175 cv
cp
f
75.3837 53.3828 mo
73.0014 53.3828 72.997 57.0859 75.3837 57.0859 cv
77.7665 57.0859 77.7709 53.3828 75.3837 53.3828 cv
cp
f
74.0507 47.6845 mo
73.9863 47.6845 73.9863 47.7846 74.0507 47.7846 cv
74.1152 47.7846 74.1152 47.6845 74.0507 47.6845 cv
cp
f
72.2177 41.4008 mo
70.287 41.4008 70.2841 44.4008 72.2177 44.4008 cv
74.1479 44.4008 74.1508 41.4008 72.2177 41.4008 cv
cp
f
50.2177 54.5781 mo
50.1928 54.5781 50.1723 54.5844 50.1479 54.5849 cv
49.8447 53.8891 49.207 53.353 48.2177 53.353 cv
45.3671 53.353 45.3622 57.7827 48.2177 57.7827 cv
48.2724 57.7827 48.3193 57.7705 48.372 57.7671 cv
48.6801 58.4072 49.29 58.8906 50.2177 58.8906 cv
52.9921 58.8906 52.997 54.5781 50.2177 54.5781 cv
cp
f
65.3837 32.0175 mo
65.3198 32.0175 65.3193 32.1176 65.3837 32.1176 cv
65.4482 32.1176 65.4482 32.0175 65.3837 32.0175 cv
cp
f
64.3837 26.5175 mo
64.3198 26.5175 64.3193 26.6176 64.3837 26.6176 cv
64.4482 26.6176 64.4482 26.5175 64.3837 26.5175 cv
cp
f
64.8837 24.0175 mo
64.8198 24.0175 64.8193 24.1176 64.8837 24.1176 cv
64.9482 24.1176 64.9482 24.0175 64.8837 24.0175 cv
cp
f
67.5507 17.9648 mo
65.2734 17.9648 65.2695 21.5039 67.5507 21.5039 cv
69.8281 21.5039 69.832 17.9648 67.5507 17.9648 cv
cp
f
64.2177 15.5175 mo
64.1533 15.5175 64.1533 15.6176 64.2177 15.6176 cv
64.2817 15.6176 64.2822 15.5175 64.2177 15.5175 cv
cp
f
49.0507 23.7461 mo
47.1357 23.7461 47.1323 26.7226 49.0507 26.7226 cv
50.9658 26.7226 50.9692 23.7461 49.0507 23.7461 cv
cp
f
51.3837 80.5288 mo
48.7597 80.5288 48.7558 84.6069 51.3837 84.6069 cv
54.0082 84.6069 54.0126 80.5288 51.3837 80.5288 cv
cp
f
57.5507 78.1845 mo
57.4863 78.1845 57.4863 78.2846 57.5507 78.2846 cv
57.6152 78.2846 57.6152 78.1845 57.5507 78.1845 cv
cp
f
72.2177 84.8071 mo
70.1664 84.8071 70.163 87.9946 72.2177 87.9946 cv
74.2685 87.9946 74.2719 84.8071 72.2177 84.8071 cv
cp
.203922 .215686 .211765 rgb
f
68.2177 88.1655 mo
67.0561 88.1655 67.0541 89.9702 68.2177 89.9702 cv
69.3788 89.9702 69.3808 88.1655 68.2177 88.1655 cv
cp
f
61.2177 88.0796 mo
59.3022 88.0796 59.2988 91.0561 61.2177 91.0561 cv
63.1327 91.0561 63.1357 88.0796 61.2177 88.0796 cv
cp
f
55.0507 89.851 mo
54.9863 89.851 54.9863 89.9511 55.0507 89.9511 cv
55.1152 89.9511 55.1152 89.851 55.0507 89.851 cv
cp
f
50.8837 92.351 mo
50.8198 92.351 50.8193 92.4511 50.8837 92.4511 cv
50.9482 92.4511 50.9482 92.351 50.8837 92.351 cv
cp
f
43.2177 89.7461 mo
41.3022 89.7461 41.2988 92.7226 43.2177 92.7226 cv
45.1327 92.7226 45.1357 89.7461 43.2177 89.7461 cv
cp
f
39.1503 89.9096 mo
39.1083 89.7275 39.0815 89.5424 39.0341 89.3613 cv
38.9076 88.8774 38.3456 88.6792 37.9238 88.9096 cv
37.7538 89.0019 37.5956 89.1123 37.4286 89.2094 cv
36.6191 89.6811 36.6943 90.9404 37.5688 91.2924 cv
38.4711 91.6552 39.3676 90.8481 39.1503 89.9096 cv
cp
f
75.2177 84.9492 mo
74.207 84.9492 74.205 86.5195 75.2177 86.5195 cv
76.2275 86.5195 76.2294 84.9492 75.2177 84.9492 cv
cp
f
82.3837 78.7461 mo
80.4687 78.7461 80.4658 81.7226 82.3837 81.7226 cv
84.2992 81.7226 84.3027 78.7461 82.3837 78.7461 cv
cp
f
84.7177 64.5781 mo
81.9423 64.5781 81.9379 68.8906 84.7177 68.8906 cv
87.4921 68.8906 87.497 64.5781 84.7177 64.5781 cv
cp
f
86.2177 60.0175 mo
86.1533 60.0175 86.1533 60.1176 86.2177 60.1176 cv
86.2817 60.1176 86.2822 60.0175 86.2177 60.0175 cv
cp
f
84.8837 53.9648 mo
82.6069 53.9648 82.603 57.5039 84.8837 57.5039 cv
87.1611 57.5039 87.165 53.9648 84.8837 53.9648 cv
cp
f
83.8334 46.1455 mo
83.5073 46.3247 li
83.4267 46.3686 83.4975 46.4838 83.5781 46.4463 cv
83.6908 46.393 83.8036 46.3398 83.9159 46.2871 cv
84.0107 46.2426 83.9267 46.0937 83.8334 46.1455 cv
cp
f
83.7177 73.3774 mo
81.7568 73.3774 81.7538 76.4243 83.7177 76.4243 cv
85.6777 76.4243 85.6811 73.3774 83.7177 73.3774 cv
cp
f
79.5507 42.851 mo
79.4863 42.851 79.4863 42.9511 79.5507 42.9511 cv
79.6152 42.9511 79.6152 42.851 79.5507 42.851 cv
cp
f
77.7177 35.3296 mo
76.7675 35.3296 76.7656 36.8061 77.7177 36.8061 cv
78.6674 36.8061 78.6689 35.3296 77.7177 35.3296 cv
cp
f
77.3837 31.851 mo
77.3198 31.851 77.3193 31.9511 77.3837 31.9511 cv
77.4482 31.9511 77.4482 31.851 77.3837 31.851 cv
cp
f
88.353 77.2085 mo
86.9208 81.2905 84.3945 85.1499 80.8359 87.6845 cv
76.603 90.6997 71.6537 90.7675 66.6742 91.2363 cv
57.7958 92.0732 48.6825 95.0239 39.8285 92.542 cv
31.0033 90.0678 23.8954 83.3481 17.2533 77.3579 cv
13.809 74.2514 10.3798 71.0268 7.53362 67.3501 cv
3.49505 62.1347 3.64348 56.6601 5.05364 50.437 cv
7.20061 40.9594 11.5126 32.2656 17.4286 24.5888 cv
17.7763 24.4546 18.1025 24.2212 18.3657 23.8554 cv
22.8486 17.6172 30.5756 15.519 37.0273 11.9848 cv
39.6542 10.5459 41.8788 8.81393 44.1435 6.88424 cv
46.8788 4.55367 49.4999 3.7441 53.1005 4.81002 cv
55.2988 5.46041 57.2768 6.93795 59.2226 8.11617 cv
62.4052 10.0444 65.5038 10.728 68.8041 12.1689 cv
73.1039 14.0459 75.3393 20.3623 77.434 24.2636 cv
81.7158 32.2363 85.5839 40.5 87.9247 49.2705 cv
90.2953 58.1494 91.4614 68.3515 88.353 77.2085 cv
cp
93.6064 57.3715 mo
92.2167 46.6997 88.1874 36.5918 83.3818 27.0322 cv
80.9384 22.1714 78.5151 16.8598 75.3505 12.4228 cv
72.4941 8.41842 68.915 8.62887 64.7363 6.65426 cv
60.0512 4.44039 55.9863 .504357 50.5991 .0395136 cv
45.101 -.435584 42.5844 3.47018 38.5615 6.35494 cv
30.7118 11.9834 20.8237 13.6128 14.914 21.8335 cv
14.5849 21.9648 14.2743 22.1782 14.0185 22.5097 cv
7.55852 30.8759 2.92229 40.5815 .854422 50.976 cv
-.0152067 55.3457 -.588937 59.8925 1.01018 64.1635 cv
2.55755 68.2973 5.86077 71.7944 8.87688 74.9023 cv
16.1308 82.3759 24.7773 90.5576 34.4091 94.8173 cv
44.4882 99.2749 54.454 96.6367 64.8857 95.4238 cv
74.2817 94.3315 82.3183 93.9399 88.3857 85.6845 cv
94.3036 77.6328 94.853 66.9423 93.6064 57.3715 cv
cp
0 0 0 rgb
f
27.5214 57.1753 mo
24.8769 56.2363 21.0165 55.5459 19.0253 58.0698 cv
17.4482 60.0698 20.2602 62.9194 21.8539 60.8984 cv
22.728 59.79 24.7577 60.4912 25.9047 60.8545 cv
28.0029 61.5185 28.2587 63.0424 28.3827 65.063 cv
28.5405 67.6201 32.5414 67.6381 32.3827 65.063 cv
32.163 61.4824 31.162 58.4677 27.5214 57.1753 cv
cp
f
46.4521 80.2129 mo
42.8715 81.4672 39.4262 81.3618 37.5771 77.5351 cv
36.4575 75.2182 33.0068 77.2441 34.123 79.5542 cv
36.704 84.8945 42.3525 85.8789 47.5151 84.0698 cv
49.9286 83.2241 48.8906 79.3584 46.4521 80.2129 cv
cp
f
71.4335 70.3222 mo
69.7211 70.3818 68.1249 71.1088 67.1528 72.5659 cv
66.9521 72.8667 66.8652 73.2773 66.644 73.5468 cv
66.6176 73.5791 66.6025 73.6025 66.5903 73.623 cv
66.5644 73.5986 66.5073 73.5737 66.3945 73.5595 cv
65.5185 73.4497 64.6918 73.2338 63.8027 73.3247 cv
61.2665 73.5839 61.2402 77.5869 63.8027 77.3247 cv
65.3798 77.1635 66.8657 77.9546 68.4047 77.2348 cv
69.0781 76.9204 69.6244 76.4184 70.0004 75.7714 cv
70.4003 75.0835 70.4867 74.3549 71.4335 74.3222 cv
74.0004 74.2329 74.0121 70.2324 71.4335 70.3222 cv
cp
f
67.9345 48.2705 mo
64.371 45.9834 59.5492 46.5918 56.6401 49.6567 cv
54.8681 51.5234 57.6923 54.3569 59.4687 52.4853 cv
61.1972 50.664 63.8095 50.373 65.9155 51.7246 cv
68.0883 53.1191 70.0966 49.6582 67.9345 48.2705 cv
cp
f
60.2275 32.7529 mo
59.12 29.0786 53.0702 29.0571 49.8783 28.854 cv
45.0488 28.5468 41.7079 31.2094 38.4726 34.4741 cv
36.6591 36.3046 39.4858 39.1342 41.3012 37.3027 cv
43.352 35.2334 45.5112 33.0058 48.5937 32.8042 cv
49.1015 32.771 56.2577 33.4414 56.3705 33.8164 cv
57.1117 36.2744 60.9736 35.227 60.2275 32.7529 cv
cp
f
58.0107 16.4077 mo
55.956 15.1513 53.1523 17.2578 53.8954 19.5898 cv
54.2123 20.5849 55.2992 21.3286 56.3554 20.9868 cv
56.8495 20.8266 57.2792 20.4829 57.5468 20.0473 cv
58.0409 19.9111 58.4853 19.6025 58.728 19.144 cv
59.2431 18.1694 58.9643 16.9912 58.0107 16.4077 cv
cp
f
25.9462 33.9365 mo
25.6347 32.9746 24.538 32.1552 23.4858 32.5395 cv
22.56 32.8784 21.7719 33.3789 21.165 34.1645 cv
20.5395 34.9741 20.2616 35.8173 20.1288 36.8256 cv
19.9921 37.8671 21.1464 38.8696 22.1288 38.8256 cv
23.2685 38.7749 23.9086 38.021 24.0966 36.9907 cv
24.0927 36.9941 24.0883 37 24.0839 37.0014 cv
24.0878 37.0005 24.0937 36.9892 24.0981 36.9838 cv
24.1078 36.9306 24.122 36.8803 24.1288 36.8256 cv
24.123 36.873 24.1142 36.9267 24.1078 36.9716 cv
24.12 36.9526 24.1337 36.9272 24.1479 36.8964 cv
24.184 36.7714 24.1796 36.811 24.1572 36.8779 cv
24.1825 36.8208 24.2065 36.7617 24.2167 36.7441 cv
24.2333 36.7158 24.2846 36.6533 24.3271 36.6015 cv
24.4067 36.541 24.5195 36.4453 24.5322 36.4209 cv
24.5439 36.4145 24.56 36.4052 24.5654 36.4023 cv
24.5986 36.3838 24.6493 36.3613 24.6933 36.3437 cv
24.6581 36.3569 24.6142 36.373 24.5492 36.3969 cv
25.5292 36.0385 26.2978 35.0229 25.9462 33.9365 cv
cp
f
24.0981 36.9838 mo
24.0976 36.9858 24.0976 36.9882 24.0966 36.9907 cv
24.1 36.9878 24.1034 36.9863 24.1064 36.9824 cv
24.1064 36.979 24.1074 36.9755 24.1078 36.9716 cv
24.1044 36.9775 24.1015 36.9799 24.0981 36.9838 cv
cp
f
24.1064 36.9824 mo
24.0961 37.0542 24.0951 37.0835 24.1376 36.9311 cv
24.1396 36.9243 24.1406 36.9218 24.1425 36.9155 cv
24.1318 36.9419 24.1196 36.9663 24.1064 36.9824 cv
cp
f
24.1425 36.9155 mo
24.1479 36.9023 24.1523 36.8901 24.1572 36.8779 cv
24.1537 36.8847 24.1513 36.8896 24.1479 36.8964 cv
24.1459 36.9033 24.1445 36.9077 24.1425 36.9155 cv
cp
f
24.6933 36.3437 mo
24.8222 36.2954 24.7724 36.3115 24.6933 36.3437 cv
24.6933 36.3437 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_1.eps)
%%CreationDate: 3/12/2018 2:37 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-kC)3tfYT7c[r\PEa,b]AU]:>[GIQJ#T6:rh)U?#GWFWPI\]Th+\B8)/\Pug[I.d./(Ul'Tr:]faVmkQ3
%GBifYea)[Q[QFESaiiMDSpVctH*[><pA+;]J)0La5C*)A\`W`)l)U:dcYm`.]mfM4bq<?TC^a\@id^c!Y*'a^mqaXarSiMfI<#/H
%NP(h;)lN`"G<b!2O-EZd5Q99lh1"t^]/Qpc]Qs59jo>/`:;-Wqem!WDqs>'qL"u$-48Jm3O6)_?j6`J1I/j,(5'+3)-%C@7P9"Q2
%J*_XU/R#mK<EUC(GV"%%^K_cgrV3A0s45ZerXFAO]<I4iSDX>>LhCrq+YUHpjO`6@E-E@RQ65]Ed=]3KIIZ^r-Z<mF$qn*F*5`KH
%<K[Bpd*s_5n_ci#p$p0bf65GbG85`=Hn+R,03,`ij_tr&(@7c<lu.AuG5Km`mJd"MPHSn3gCR`,Ie1Obs%eBTaW4=L]2l(d>CuhM
%GMbX"IJkfPT=p@NeJgCeV-gq4qY%Jl_0VT?k>+)*;]"s'm>TpeH2Z"T)j0&[cbILCrG5Q%rjuNes5KA@rcS[3FS:gRI!bb]pTOQ$
%?hgNFU9B4)mL"POl`MhM&#=<\'7!pi\DJ%1^^^.B$c_VD,,Du!rTp"d07VP>hYjesDt<esf?_0;`OGVJec4Z">h/(7l[S8,jicPo
%\UE.<hYF>b^R?LdEqQIdnEA?EY7IgC?mrb,5PHo:?HVVZrotI"mJ7@m:2]V#\+VCiq!-J7jFV"tET>*#I]^Ac?iB]op[ZM"^OGkS
%\%d1`VcSp$rV66T=+@m=rUSXbgR\=aa5?l,pLCWpH2Zm/Y?q5trqVJUDkF+pr9DD1Dh%><RssmogG_q.I"#:8rKnQ(O5$RN?G.+O
%r-J+,5Q5Ts#OVYYZMXUd-Vri^jko*gLYP]qj`UTP\X*9^s*_u]U2T,Sf,JDhl/`GbcX2)^h,r!Ma;od-r5m,0Y=GM`;>NS-o0c&j
%]d6FdIIi4!h,?`=>Nlp[ANM=/4CS*:K-'^Hc(AQm\:+2GGN8,fch5QQ2;7bc4!'tUJ,\f(f2'-Zo<Y@,rTipeqt'7MY?j@6GJEYE
%nYGu)r"ZA^O9GUN`?/GMJ+h]VnX-lK[j&`9Sj'pfic!_f\UE,/@e.9_q4!`)5BjlZ:,r7R;42aTHbKBmmF0'TQ_#J;r6P#"0:oI^
%/j3_AX770FrX\dg500Y*T8>nIBB$]!S1jm<6o=TjTDe:#',B@$Ve7[%@+]ntrNeGlleHm\i`k'0].a0]jP*naS:9T:lRgReZEDI<
%ek^elp(bikh>ZM`b0OEZq>-M\R6MA8/U!%ol0]\o]S.E?]mV>j\_Jg<G1c2sIf/D:+$UCE_:RfOroS5O=S!R4YrGh\QPAqA^L],Q
%I,ls0d_t^6],uI/J,P4A1;1o7hZajNhIP7,Z0SmOfcA#>9Ocm1$gn+4iiA-Qc2P>9HB[tm?6jskH[M".d'qXL=,H<2GE3mGpA<J!
%5/7&oh/?UaH25]:7.@9h.t#MQI*;:h8D1P,^U4iia5?ZQ)M=fpjQ]+,#VBn5\>W'Gs7Q07FhUUk`9VC0YFQY+43;JYqf^fb;d4,G
%SjW+oag'>o4k>%H?dqtpNR_*3DTY8*#-Xc^&kaW*hoKf%A"Viu\Rtc8*-92-%[WNpU`2<hkpXRqmH'F"V4,?g9IWCjI$,A0>eH3Z
%'G#6*X2Yq:&M`=!)!(1+M+b>b-TR4G+GY>>BVERGJijSla]Niaj+;AK=SrVhP8m)BOCKra[?lsHeJC78P0(nL]l^:PLf<@N*:Ch;
%j>b;eQO_bCVoVqt8/+(i96*Gj.fq>BDRkniZlJ0eaIiEO/P"hujiBR4'(#u$LrYSUDiTjjQlCgQrl\C"r4AT/oOEB'5B`Rlk6-X+
%ruU8$%rtqDp[[KnhtAguq]\PaB+2[AaFPt[$fB$FP2dYi:)CaVXs,fd*"alH[E&iSVqoF6'_sc1JJ01R+r6CcaH0"+55n$3UWCkL
%N]lLg]&H4B.`tbo$,\.=-1V3GX,BO%W>t$G62l?es*lUjP<W(H^W?Ek#S'6ijNh<qb#4OQoD"G=i^jWF`e43Bj7S14(6QckOpTh.
%dL#_k-D*4DU%fjQg.,fO`'<_#UD*IEdWPHKj;*l]/<[Jd-P;^gP1jHV:14_@:XX*8E"m;T\J(`c<f?j"8kTLH@B.PU@lha+"o7F-
%]l;%OdSo/o9+P?qUPPb1=e0+TY%<9(AA!MQ?P/9:CsnY*dQp@:MBj1EO4Q<7,@2XmL_O-Q9V"TFS4paI>ubESgYm*2MYOenOA="i
%Gl[loj7RDA4<EUE17c92n]7UPlKA"c3$%,-T,X1b?5*ADK1\R#Vqp^;j*5V`a-!.'E.B&fr#>tSKIMdT-2BCn;@4@rmTP8S6?o:c
%inb%X*HXT?fI"ZG`;&jI&SM#H95!T?j@?5n)pE&s:XA8:WDk$N"V6]_J=jMtfhj*F%6I<kF72*9_Ht6<;_N29<]knrF3ghCBm[^]
%B(ocO#OCGmO:c#)UU.-mBjB["FLrNj_p.-Eg.)?41n>%APU"jX?m+MDn4GGQ\DW0l5GCXaBK=J$Z?"%UM"]s"@">&BnBj!bGc>ha
%0MorPULk6X4GHPlm0u/NL7d;"O3CN?&9KUk3][6J*\W>iiH!>)d&0tM7!Klhp^t'u&lC+%%:+sRPD/#38U@0`iR-#TNY<<E)\Y>R
%Waj0fkSU<"%+Ll+iBS,tJrE!<L]g##?p0ToKSfpD`l3W=#E#EV%IL\+*iY`+r*Yf&=nY8[7(FTn[k</9!bWD;;E2j.TH"G5Ugg/G
%MG2=DB_",.dLV2)A[4tj/=.]OI<7ji%O)S<E_B*Y/DV45HG%>H+u49R@6'..?-?`YI!V*]O!9]gL__U$=CV!4\<O[/*AU$FbDP>S
%Eg!>/6+Q,u;KOoR1LuV$J.ZfU1B`WWCkc?nO>iH]_W#PeSPcq2,jF@)"f!^d#8nC1&m-,/(C+4a(+on`/dBp4#"k2**!V:qEH3hP
%jP%h@9X?"#1cedG@?MU!@eV]NWgP,p#)Q926qe%,,^V=;@#Q?e73%9u2*]U_W&-T!R2jLGNMB0k(`Eja+@g'Spo>RJlZV3hRt3sE
%eHjrQ)fXD'^e:R)8)?drmZ4kLEmgQ=Vg5%d1OUcV!C_V$'[[dB9o:<*8`LG6\b^o)!JmRa\Ea<Gf_+^t!;t$`QVUrCI_GWuRaA*S
%""q%*m8J35\g?@T5"MEUR`t\^k[>hs659A%/)_US)0S=\!G`lqa'gK/&^.kDkXk+E-c2?@N('_%:`jC-GUd!tg:aR*W_OcRBVXr[
%FXbHGC,/[I(95;9e`!J\^G8shnuI[e?[1a&[kG;6<*`RHe5TCea._L'C71N3[d^;k;cTa<:=Ymb]JA!nWqcG:?4X;X<"X:b\/m"Z
%DYeq'HTKsD6Nk3^3Pr`[hK,L[5rEuGOmbHUrJ01u^>IHO462D45J')>O?5Yi]S@T$ms*_-PAfJLVZ_;d?)sJ`Y:L0'ZXfM90+/J9
%Ml.@hW*Kn=XPLr!(M'Mge1dUo7*(FdAHKQ.6DKU=SsadVm4&RV4Unq8oo3^V7%I8UF_Ies@bja97g#l/T@GLI&!KZr1,[+,0fBnY
%F9P'&mEH>,Y3ph.@bhk/ArNiqC,X31d3do?g'feXLN+;H?.Oun4_VDY_kh=9L@b&Peg%ihLhB5hF&4q2"1mqL%mK9)a;sSn*pr?M
%h!lCt]^PCK4$NF0meDWgr\<j9/r_XNP:C#OmhV:FS#hl<once'U/-phd8d':XOaUZ`6373DC=-iPu\847n72HdSZP,M7A5aSAFUt
%hQKef:78N42&F8b\Tt)/XV-@h;2>6T<ehQ)c#W)EhU!jS?.8pZJVR7K%+e939%c1SD:h?aceR&*kF-"XER^$&BUu9^3R^50N\epi
%R,Glhdf%4^WT9(`[Fa/oqfUW)[GD-/TC;PnFiStJr70Jo6%H`qdc8L"Aua1[`>J[$J&@JhrhjXlVVN0N"UD<"<5X"/E3P`[FkgEX
%:#8"=XI9WB;n&:81P9/[U?aL)%[4U7e9A-i0EDjn]:o0;%-oK%<o=Mhk.2_G-$L%d#;'$@\MXFke8BrDT[gX*<bU8"Bd<n]RS,4V
%ePX:n;Z0HEUfa>UQ*)k<*:ICk'ps8UPNPAQ94S)ffBQM`T%!$,D>ffBlZW+:9,Kn6$chN&YsqbH*hLcJLE>t/LYVDck7I]CclmU\
%n@ARamasD>c-=N'AhT'N\Oea=`gq!B7iD.MP9J$^FN9m2;+(PKBKjG2-PUkhlj88U!hbS3-_SdTh`;GC"QTm)'6#>7:5(_DkWCV$
%VBDd'S-EqM^eKG>`M2SSk!Pfd$/?f53J3e*Da&WgWM:#;#<<O]<1m0`:'E]ombD"\[M&38m&@8BW6n_p;#ikP7:ggNp1U_a4lOb'
%<>u^K/Jb8G6Q*"c6%;!,Z1Sr3<OFp-D?6BpdAL$#=h:Wt-<2&k9tSH,7[,i9XEQheFG.nYro;QsmPn[ogV_k&F.D*5*+ee&557*"
%jH)Geke)9#X:'g=n\ODff=Bqdc"E%,=egAq.%`B>Vn1o$NUg5II+B^<29Mi/UM5sTMELj`p&BI<0:AS3A;XF+mq%)dUc^#k)sX#P
%b[n5m"^/2Krc0/^iR?QmnTbgX\U\dQ7<I:/`*%.G1HSRW\Qt"mfhJFQQ[[Pi.<:L1o?K!j_7-_\k59H%RSEXpB__@M!d@F(J_MFd
%b8R]/5YPO-7`.dS>%9cA>?+URjQJ1iQo">CbCa#rguS(icVGV.g`MR::'GpiDu'9u:mM_5KrE/:6m2oV5uM6Q>DcW`9()]?U/6;r
%qe<o>nOR<P]jt^9?a+Poh5)a<7EGH`nm9W@+sJ(ILUta/s)e#%n+a0Fqe:EG'2/rR02E-n5FWdbKUYTdpW,U#'Oe.tGnCg9$tCSd
%cn-e$VL]u%>K!U&0HcDF<@"ZHTIqBnjuk2e>8b/DK3*mp/j`UZHn($XWlbTD*>+U3&`sDVAcfFI5;AtiQB>cX/A9'o==n#:&=>&8
%\#MHh-\/EpFO=Wa1pU(<7ob,hRus8Aq5N-(e7O!*4YuaVe+^f9<6\5+)61M.<0<q:B;mf,KGCE8T9C9SR^;kcd:n`\m&j9k,E=".
%6t=JQh&c77dH$=VlT-+,>km;u]PuMah!rh=c$dW\QJ$S?;fLUU++.b!mb&b-][QRoa6,Oun!0@bQ\N`sCoX@NOGosNEt'j8-KJjG
%hiXnmMeO9`5E-g5;3)^hKoSe:VcPo@7g>E"7Nu4uNO5TY3Xr3eH.\skl7h]'`,+b2Wfoo(T]T6iMP+UM6"KsOF;8&uK-f\oSoiK/
%\V8;3/^W"bjF.6M&SBIqG7Sa>JF+o''Nh$$+^dqq)$ULIqaMbOm9oV+ifnqR@noe2T(;@]4\-jPYik'@SG\tDhmK(k^bg*(or-nQ
%,P>Y*l$j68c`C)`[`?abZNbP>O37"fd4nlcik7j.a-#JDq8#S3E7FJHmWbYs/Ot0^+a8=L=mpG0A)FO-bUfA)?Fo"19?d2rCu?Vc
%P-MFM:p^(HNrR5lqq(1`k4X^VR'ZZ3P2!a'949;54KScm(SN.YH2]&;rt;QC_Fg9kDkN9GF'Dc2*)u3b;BCqJ(/DFC-&LJbTqj9%
%F9t>bG+:oi'5/Y8]F,UZ@*sD\ckug?*s@3;#1VFl@H?/9O?9&A\GG-Y>WV'YIb9c9+*,DKIe08R5Ooi@JF%n>_t>@WY.7]R%R*_D
%<3a^noZ_(^e+q'W,h*uO'bY8CZi]LGoM/l,KN92fg*<X\@QEaXFn?_47unbJWB.U.>3U?3GLS.(HL4S]:C;V&">5"XjjA?';RJ8[
%ei!.6eaijmb1%F`T2+Q\WfJ6)%C(NH-X3S]<`$K=I(3eb9oH%['89E7Bq]Z+0KlYug)I!Y<<&?re>'WRh.Tp^:tDY#22dMBRqP16
%AusHYVB_]Rl0PqO,BjP4%Y*s+hJlA%5P1U\J*6@sdDO89j7Mb,meD==hWOZ(^>h]3YV]Ih%EaC.RI=<jP%JGMLiqW"lWC9MP>Ci'
%&(F'f(`IN00ERZ<ik]-)7;=5%b?,*KjUW'b7"'2g26AnIf;t]_ZsO2V.5U9=P>*2T&&`eCV&daXZ3@1lJ"iMr;V)pM]P9;rl8s*+
%K$))\%%7$f%23M4oa&Gk=c!6"%'kCL'[Vmu+jM,YQJ>nDTj'fl>'fM>/b%GjjDE&&BH*NZ0jQ8\\m."5\$X:^_:@9b+3R$3?Ke5b
%L[T5QhK?m[hg*LOO5p$ZGJ)DuEQ@6(^<c=5Tesb1A1aql.n7Ld#i5n\Q^W='%.BtDrkuU[ZLgJjiC!&f"heA+O*=1=h`1i$mjVt9
%G-YPZ#lDSU_8B6@2+f91PMMao;p7ZF+KuCd4%_!2AJNr$MdFW8/[/neH,Z?jU*s?Yj'629Vi5DU<4H781&m9bk)!/_)!Kk8=QJpj
%7qW/!*O0EnLh3B;#-?6lb5UeZ/!gQQi8AeDQo4CZPD7/[Dqa&<iW@@UDA^$WOQ](>QtomUTR?9!ncFaFH;G-/'c`KX#W?K6M\P$]
%'.`Ik_B\jF71;p=7K^<nCO(#RpFM'76+g=pSrr(uT_rLs+iR6=?Fcsm#A)"G>jhU@n&n/;;\>#En]Vh746iB3gc7:4\_Q_<M14&I
%J%'E8`qM19'Ob,9Yjf]T9X1@dTR/K9\k+f=1-&C1N+NrqAaVM$TXe.1Cc9Ce&RDnTLoD7=;r13PlX>)S,JQc]AuU(+9rcYrT[&sk
%eF4>0rrpBjCYh.Ta#U,SejspEO#DT4%+eY$`'T!dL[=RGZs.6UDC.uD8>piraV^#]$"1*,W!Y+lGV33&:5NJ@'57llDUGtAWmSa)
%)#h*$H5NK5a`h7c&>Q-#%bW`0Hhl9D+>;<W(.k_Wk>d23Z)SQ7D2;EA[L^-0d7#V:A*n@=]#U+;0/m/RNpc]g/Osg90.kHkG_;&a
%?13VWq`F?6&b53bcp!#&qMZl1qDO^/2N_l.TQse?P6a[N:j&4'Gtb.H&Y;^qNDJ#8:I_583jmE*@)D!@XFA@'a3oC%eP"<LpXpeU
%?H=GMA+_Ec!jk^SG*iO[Y)+GR-!D<<0tjY;)7a'!b-W3ZQY+9K)d"hlg(C5k+`nYhm14X'qQlKYQg$2>`\=L;a/'NE(V#6?$treG
%.CnJZpDC>@\&c"u>D"tIo'+3R/]WKH-18#[5N:$ONjPQjI^Z9S/`T\SOkuU+HXP&BCI0W%C%iUVUc(r\@1V]rWJDr-0Z9_h0pREL
%SlBk\H0DY=/o%uumt9h)ZWdLQ&nM-&Aj)OKP"Cl$b^MR8*`:r.b!`$;L<`-h1J1f+(_)QA=]78uPb;RigBPG9!Ye7FGh`iL(:/0.
%/O4NPc1<&.o"BN:hsir)*WJkU%]FE#q&54r\0k2%.Brk.,7]stP7a'J`kkPoHQ:N:SZJX/m#XdJjt:74^eb2C8Kkpc2;.8RToSb9
%.k@0&7-l;,JX(^;k!XBtCpX;8Fmd%S>iV=6iJ_JGW<[`XY1;D>@MA=WM/P2VcJ@TQo7MHDN'cBKG18g.,)>BUQ':W"/Ni@lNRj^=
%l[8`9X;:-u&LLt>b?ju/K@fu1Z7t,u5(X5Sd'Tl<rr-B*r%<]?4brj<TCC2h:7`Y0Z*)/_7jtsJ\?9">)PZU:@2dA?i,8SBn1SAN
%nKXM=B`sDQK\Y[fO.qAu]7n`hjdpPAF71qrI:LAgH8n";@YOff\qt,@GoWY&1+?:=?7hDp[T`4[_fX,u0B^0*9c.IUkW'.dD8"Q5
%iMR`c>(>sdaluR)/!CA*dU=3-h!qP6IaN>Fj.4[<jEGtGnUM6oRN(]VhNE/+pUCG9q1o,s>_>B0ouc..(\[L0Y0cd/i&7QU9u+HX
%7[<*'',+\bUWQM=mbjfp::uiFVG&NqLQrO6L:1kJrFau+i[GSP-(s'<"6]<_1.p^4[/3T_)lE8:Ert(o8:3KHT`sb5'%+].)=<m`
%Wuf`[pj;ALChJU>Rehq=fU@[U-^)^\@#DRsYBM\[g,U>OVC)N,?rCsi=Lg(B31ZlMDps?:KO>dc'`>DHi4Fi^pEg%#8IE0j("apX
%+*:aY$NA,!G9$3ej)Q4gLO0s[4:_eU%0b&$L3E`KCN/`/!:QM`gDnL!9ZJ-XS:>-T?tL_>17XnVdqni7[L2_up#qo#BfQ-5`siG2
%+(sPa2/$rXClB(U)TN;#E9VTd"lS.[UFl--[\%mU\9gr[o&7XI`OZ&#I+VkplmFo7a0SU9<\POpP]c3-?3HtuY>]N^4nfteFjrcq
%&E+?7^6phV[Wo^^3]4K-2OUjF$,&u:r,1fZ]B$s0%IYQMY*H]>P*2^'b>%9`P]kaK`WWOcJs#fS<Bl/<qGSNaGICEF^cNqKh8G>p
%W6Hf$/^tiuD:)dI\gq,s_G*Y0*Ch__I!tcQXMRVh%`b$>Qu`WUa-I6<E.cLTQtrl;40RoFT^+fX"o&!?#VOA7&SA)3:h$T@\P5$F
%,UkTPT#eI&lI6Y6=/9'Kk\qNKDIQumNV+09=uRhJ,!Z>j.Q)OgA)<<!C":5JjJ(<HD!lXEU^_N4NVf=)HbSs?'6'fg$QT89Hq=MB
%P,0tJD+6[MrdE!c9qTk`WVi&pgeT`@H.'4+->4FFm[rq&s84CmT$Y76!j-c_M=Yfq`?W,arfWW3Q$[mHE"LO8J*!Jjm`p?D\Vna!
%+)CDJ?;=7[0`JrF=Vo@g$Rh!k["RQp<_S"mD*E,4L<E.1JMcM/RZWoR<mGd>VXWl_U-QaJlI5!XlPaXue$>I,WtBWLU"IUW1C&[9
%fT!V5fJ8tbJ)/W?RDh=uptC\%@Re0^<7Xb(4*ep#iWM(!7aF2WQ>q<+6jkj+!A<Vc`!\ENiQ+`Z.Ml5@b:=?0/??j2^n(]m3e/fG
%4;W9Ki'fCiJ<A!]AiM&REjUWD3f$PJAk$^\EHiETr"#%dEqcJ5mNp:LC+`1!7$1r)/2rb>h@t^gAKdP;OD40`H2"=F#1<lEABZ,[
%)J("+WJ;E.g:EX$>,oun0R=$/(6iA,>"'h<H/IA69@%'/>b/ke<sP9r((S1d/$c9=?*0eD^&i1+MnfL4j`gf-fqKrPVQqBq`)@^A
%l?LIe;W?>5TXF*:U"kUTkB*]uH"9f@qPeb(8$QZ'Ci_#M1+;S6T"nqg,7!?>NkG*WD`RB7a;sm7./+eU/]Zq&arRrDl2A/sqmRPD
%-)98cE5='YT-ZLa_s6?"=c!CPnEdQAd#PG!<u>bS(Qucm_6Chk3";sc(K8LjSA4)e9#EQdiNTUq=Lh!\'OeUqphR?en&Z"1`dqES
%5em_Oora$D%Wla.-\I/C9VOAW4]o8haKXs_<>U%TR[0]9as'$;04qcLp*SF=AT_-Z]b7@hc]6>,>](TQKmNl^+dAkLe&Gm2hN8bO
%-'.YBL[<!1EaeZ'52n3No>uhi;AN86D=@-J=)oPu7?BSGmb4dI5jBBF't0gjpcfjL(OZhABq[;A2iH81r=0<l,48j)Ri%PN?Z<eE
%kjjeBp@:X^0>lA1]e:U-mM*fTXG_jna0b\9)uAX?"<iK)9R%"@RA[L`e*>L_ZafF,j$!VI8>aTRJ5!4-7<L\cEo3$(E#Y<mWL=X(
%Fh*qVXN-ASL'%2m@HX+XFP?N-All4]hK5tCcN443qpVZebF?a?FdG#1;2B;Ld%PB-cn";V[Q*j_3.4/`FgIONjc!3ddgGPpKIuHZ
%8_8PMqleIbGNmc&a0;(-7V4)@P=L*s$EU@:*@@u(XX\HE'Rj@<0$+Ofc;\]Di6cQ2=6HG'dMt_["%dP^8Yg#TH+&lXR!59oN1\Yu
%=a-H!cC5E=55LkQ:5\QkX?4_P)\Hn1S"$ip,.P4]V67*]9@[(;<j-25ia4VNdHrm(A?F9;a]Ol9,=Co^'ob*#He\Cj#ALjT?]tXl
%gLa2&Vr4.VF^ksP9e7(GkQ%%k951]Zd?0hkdUAB'5i!Bc7GX?.I1n.jB"<r@\d)g,T0CF/S&!otYg,`(3Y$qRT@/@=+:tl+%L.5s
%aj<Oc%LVp*iViG^$fI]t^%@4QW,N(]3pp8+s6ce%Yl*!3\%A'BI:FS'7QFRiErWT.5F%l)mbKW@>"NSg3'_o/<O5u\D6-sVZj*Zo
%Xkd.Ydb$mZcPLM(]N%T+3,k'?2`>#@Xsl&!l2"HP[IL^cPOHdNV45CQZd_Q,V77FDZEg"!&L&)p+BKqn'Tq]Jiu2km64VWr[_#/f
%=Ya&MN9m[QFI^2i%"<#-4LN&tH;o)8X6apbG82mg!f$G9T(:r<Yj:D`k9X't5C1r)\am_J9)cn;05"T"d>ji,f?8Hc9@;Z>^$?tG
%p.3iP3Qs)2;Yr_HTb1\R<ak#':b\=4=BRTc^mUY\M53FK_0"PgUu=Jt!Reb(Aj;\G5T3$;5,gq(NU)!=ifhK;NSlpRo-hoE303,_
%QLebk%U)AET&9.,:8>Cgjn$!BOVKJ5VU:sTGM_G)*oVC'k>A[-((4[keSg5Z/^[)c1,$q$@9IV;aP,$3I3/-*jQEe?7t9A!G927q
%\*5Y%9>Q$Bj]N4.=`B$>72A9<%NB\\-"<-r/Lb@L`=k9\1'HB=[OdPf^UD,#A6?i?rm1>P[-sAdQE#BoKE*/5L5/8Q#)0]+I/EZM
%m\??LbEYLVhJqlSa5)<[n%*BmEEt<Ibl%ga=o_O?iXGjuj/a!,#1o1&Gr"PHFQ`XTdC;'VioF]`gR52ROFBFNq)!e1rRfjR;"-M:
%YlYZ@Tm!pZer=FMh0CehmhR6kEAeQ4OoJ]k?g=,_Dg)<2GFia8a4mGqs&?7^iG22[4l>YJ$)R*gk+q`[$:oP"]?8]%1<=m.<HVpD
%Xm`^4h>2Td)m8XS0jKYo_$fT.)O.rL1q),GC#-;72mRk@q<bWZG<04QWUi28IUr+rc?aU0T(AFhhpqC7]=XNWf-N0\/4utJ<`.XL
%VZC3mPk[n,.Re]A?F^nTrg;G:".ED84O2L4V-e\Q/h7`<=a:NPf#)\f9\D;V2PHnDP6C%"YAW(MdZYDfg-SOjgpEp;"Ar)&1?qIF
%4CosKNha96OsYq#)GBDDZk]Zef:LgQ*P2VP0H9O=5niQZh%T!s&*16m+NICc+su5VV=0rKd%5I!T(fKr;]Jk,U$i.D;gWEVJ@bq\
%p(cY9&&@d:maUt3S949J3JRTGGNEI&qsA0*[&Soi&1.(Y31$%M\^I>Pp,U%h/B@_ZUT%@0"sk@qlgbo)R5X]?1VCCne2H?8L:69F
%ppi$VUh-kKU$\tHc#VD0*5::NgB9BN+NY#'_LJ4P>YYHl[)OEo3(q0s=_j;I--5q3coU!FLaghnZ/T1ro?\fCh(nNgI<.'_Kuer7
%R<rl1@lY'KX8oX/UDqJ]bCdMJqR@doICIllJ^nu<\$g^e0C95IT+Ra/n&O780"WtZ2O8C:9"3UGGc(!`L@-\^I!Q+)4G*@Qf"`jt
%r_/<$(iX&a`RgYT!t-K]S*>dAQsp<L`b^_MpFK%7OIh$G`dL?q89(7+9Spu,Y?B7o4pSDS<e0b"$%i4hp^BuJ"t8@0:k"^ecSG#n
%-9fVkgLT=$(SL]8GL%r2;H;L!>J,Fqq3q(AqDWe`f$E94-6gGqcM4(Lp6*HPQZ.*TVM)]m'TT\U)?h(D^]o-Ar?'P_i?E8#?13Cu
%[ktYi\b&4[hM5A8+]#hARJ.kkpF"!l=6,rXQZ]('>#Jfrhr7)FZjVAo>9`_Hme34cmXP63fpg`Gg?kLsH28?$[*??M@pko`Yg40=
%B+4,_#5/o:qi$)S`kXcJ@%Vl%cZmKCRJ8<HT4R"<#55#M0PU@Jf<8N[p@YbYDk=Z?k,1G7?1n"PO!">s>Q-8=msb/pc(!J>0?&k,
%J,dcW5JDFI#JU4\kBsijiqMf8PHSG%i\%*OeO3_e+hOcp_39a8^=N>^iNN%Fp\GCN:Ybp-Du/r&8,iM&V=h%?%D-!7rq1am]<<=J
%Wo%ehOT)>1kM6M&hg+/JQ^d.-B#!-VjIYN$9jZiZrqZE`S)^iQDk=Xgq;h5+G!FIC8cF#8lIGL^O0=%A*V@nHlXt-B^&DdHjQU$I
%)o)7JZfef)rU0CDS"K'H$!7%spqQ@hs6Y0Hb>H%P2gn3ee/SU$=^$"$$f+<-qQ,LYTQJ\ea\@80UA*;`@gr#[/1'ai#ZiJ,C:t>(
%'e!Le)1[do4.1%h$VG!$Dc\-<dbq95BR5OL_g_>ZY?[lu;IsnX,0DZ8jj$M^(:d?0^KkOG$C+=I(\:X@+mfcL'[:NX>KcDF*n2G_
%Q7JBG?<Z?RI"muRHrWOOdLr_$#P!,>k^tCXjR$0a&foqTU*6]!,/8$S.Z.fLqa""N<rpdNq5YXpaUSb;KO"]#:\FWEZ;tbQ$6[?<
%g94-!\QpeSK8hgnUAoBobBH?Z(9YH\Z`?'l`."8l8tqMm2-sjT5)dp$0k<,VK9nc<='9VS)LTf?G@AIo*Ekl@iACAo7=HhtG:jYF
%OOoL#?bji(o]tQu9tjce1ZL<;,C(;ll%l_$>^'Oi2gaeXUs36D"?B97CT3F@PjuaZ3^<g=a%VHcdROQh]CLAjp/R%dO+;c>)2l/&
%X<QBGCds2i--=&Da+h03l!bOhX$sZ,5%>0N/1k17cWP/koQ"-^m-kg:#.iJtDG!PijgI,U=)b4J-2MUq]Fk\1Zro&IO]im'ClpG;
%93LWT1&KTVFWti]:!d/+*I"3a/((th0C/f@SP$\O"nHQ_8ZVK+@#l")P5#$B@W\/gT_3VrO"AkW$1e@^CpM?jV7A/;:dMK&.n:qD
%5B"6,9\YBi0=(NC`36`bT.NFa]sq"lk:)4+(Wa$Y=LhXV\;AE9q4\$%Z&JrjanqDp)9RoH#5o=39KA/hq((@l0[*D_Gi+rX.d\]'
%fB,'-b(>)-3KYJlnkQ=XT/+4qhO4=[=%V:?QclaR?6g*^QJ!SUYGn>X[_N?VZ@S7@?R>gS:`kjp!`1@I9'Ic"'JCq)qcI$Q_aq,K
%'(Z3XLaV<,Q39Ap[%peB>=:h:lf26QJlj?T(q<NL<"+kh7<FW4dd-7A-Xm(<G+qC%Ni:BonnLpG5D`M#'*:%U["p;d^5u\j?hII*
%P4U7FmXn0o[0m5\WB(U66R8BOG*)L`d(2MHQDkrV7S>d@#$Ve?fK>mFWN_<EBhY]S;Bt<>[Ah1slA%uQN_Z'RPM`-(QAqnZG6utI
%3^M)+?CmpYqI\4"Mh1tL>4<8t<S?@sOf"9is3`d?B@3*nq!saapgp0H]_"XS-+&6YJ1Xc#[XK)RhXj53%P]p(6k&T0r@SUR/UOqI
%.b(uHPUsST949?)W^BlC'g3rTC?=HP?RD,^Ee%Sq"tBLK\O'V$7.:Q)`X]0a_W'4=1;p\hkRFb(Tr#n(fWWMr-*WL%dNV&5BT//>
%<gj;QaefK>S@oT2(:4<+;-#C7dY-k@0uPLY_Ohs>XhPjE.g/Wp\4Chk7g(qR>*<gt:b5IWOmhU6/`.fHZofRk6GXZEeqf48a=P<o
%\g'K+iR&OVc#/laXoXkY]X[TaoX7lJnr/NM:e(Ct^Jq"6mTANfV=G4-(sC,P(l*bpZTYZ\V2Gtn.qOOeZiXLB_nUiF"C!>k*OMbG
%Q51(p5'*r%;#gscUnb^X@^XDB6Oq#to45_&Wb?)VNk@r<#h.X?M[ZLS"2B4Tngs)eOVj%?(Mt7U,qeV=Ld[C1=gf)C@\_soZAW#U
%Qt+EJ&g+q_KChfhjN&bXN#42T@AuW__L@*RoWXCV]KB@IJo+gN9FLVJGmemuP8:7&h&nuob8B8-H23EP,iU?cbL-G,R'l8@@>ujf
%=h6;DQmV1CLZV&'ZlM2+*gV(-0oho[(Ha8=WI?D$U+^phhVPa,$:ubdAQa&HX_jn=Y!?bHc1:SRHX575Ue=?_RcE,"L7P]I,%"a#
%.:T_O:h8sXeOBC(l%"_$^s'`@+kS5].L0Q'&s8joj:*e(,.<J4MN6(jQeUJ*#mR\Y\>s%C=ul?)krLCNU.aR$,%^OE%i`T2N+H#R
%8m%PRiY.dt#<@Po&7F,4kD<5pr=O/A`%9o7+1e//@:Z$6-SR)AT="i73/jG2(;3WFgMLI]O)O3MaL3XoFsX#TXK!/1og:sK<7-[\
%p<kf<KaNMehnR7BUuZ7aV,G\"eIL1AP9i==n@_B!/1$!NG8%/cSfpHRF,)?X-9N$3]l[i4Z<@bKL:@Yig3mOHr!jfi(D;##7i_d:
%5Seb&;<J`6@eG`3CKSrQLo`8[Cf"9?&W<e3C(Ds@H;$>Z(hT5XZl8h9e4&P1]Odb)kc9M.<-4N;XfSC/%Z,Qn2UGi26Q4-KC2B0W
%NRJ6cW1m3mjA9#JUK#MN0hH-3eSpCV3K>R=d+)g/=A'g@qRZ0_j:Tg,H[S#`lKX75(X#G5Ta\2p1YJ`fpgrpSK'56p3'8p?8QD'Z
%Wk"?J]u6+45tl<:R@GOjVW`(]0BYfK7lmcWV5CnO8YrmSW:VJBQl#SH(/_&I0u90AYk[YWaI)`kRu<J5(L]5\<hdBmoJHPQP0O<[
%]65'./R%odC7%"Dc1tu/:8@jm:!Mp8=7?!^bVi9<cUCe1Ot563dNGD#)@F^LaOQuA&?KbTnKG5AD*sG'C/HP(;3nBAiFmt;_m_0G
%gPN/ujQWsZ=UVoq"G`q8q9Wq]-h9?ESg\WQk!:V">CscP(#`:WfB#-T*?'?5/me&9W5-oTF)2]mJlk4E$__r[:er=R0o)5)4H9%D
%Cu;j25;2r`IJCdBIu9e$jjETG]79h>c0K!q^Y/R1^V>6oo_TH>HhHM-:-Jn8(.B_r`/OtaFIoRl8HB#$Z$(ajW!H&Ur+C`j``J*h
%-r1_IjJjiWD:j-n8VuK)U62,$@,r-FU'tS+3Ih/'[%h[.>"onUFY5crWkXF6%ebWN$o.8kFfF#OJ^-Q9*V$Ke/()/t=*V".3Ao?k
%Jq_tqD:sC$Vsi(6p+N'1DAuE/.s8#;]BYUa9bu1<X_cUhFVhrX0F1[)80'5U)__'AT/%Q0/-K''kiM*bdFD4m\2LE.$(AU^VR"uW
%a,(um@><bQ%@Uhd;A0)?K"-_D_!H^E(hucU(`8;.9*W^5K/gZN+psi>-t*YSg-iQiJ\q--SQOL:42f'tb6$i9DPC>SF=idB(&2h0
%4IJI_?(%l?h.AQ_ZI]YgW/D/`N.Q0^n)@6>H0hN`!%9Au&P!3o#XA5S2T(Fc,GKae9lC4N=FgVE;EP]`"#6F6="@'RYKHStI[GKa
%]r8B<RB)t6)sZM9bA1X(#.>h+=#+BS$sXQ\<0\XgGtChiG]M$popi_U1W<NqI3f(M*W^%0PSN>EFTSTt/5N1:?GX(shA[g56WY99
%KZSQL+#"u3EkFAA%>G7,"Bq*4%VX$Qm08h&Z!O9YiEA0jO>,8LXsAGZ,17nl+tbXVWs'_o,Hs19Ys=4;#G=METZ@lk/SI[dF?26?
%q!'sG"n$Ap"[7K'%kZd6akAC;!2;$WFS4glQninD:[110C[%3[PHM_;dOpTdr"*XZ:$ioCN++ms[EGS_/>,RqX?;kuU-$D)JfCE;
%?E@?6'R"/P8LdLfE,<LBr1U;T!V9K:Zcq$1-dpGB!0o]ZVC_:W7Qco#kc,,)=:i5OR\f`l^;Ihl&i7Ia]drEF]H0NT=qWDD,j`q^
%[=`+J?BoN)`>)e0TES7<qUY*Fn2-u`i.>ZL+cafE>\/ki"(X0,Al9Yb-LmW(DP4'2Zm2"K<eHsYDAO&6Fi/N2bR(OAfd`R,qRBBo
%Y^raX/FGoHd*cGY]=eBK;&1qUTqM`NbNO2\.C/7#Y\[Jm#k&#ZN+Ppq5"!Yb&^s,caK1\1#Qop6f%ON_&4RCQdSJ'-dk#[72DsuL
%h/:iqAFIKsed6@D^3c^l-&Pi[^[NJ+lel;Il&+m]q@):G)MmX_`Bb#*93mk+Q5#K*;.<XbH,=Rc0a8Mg!]*bK6#df2_5g8\`BFXO
%(<\@7crZqtbf#,ukpbLl>rj)<`<h2tArV2>FB0)e7B[%M1u)W]_OGBVGf$8&BqspS-lq<3b@Ch0$L^i`+L\e=\u6tX]m*bdUAI;d
%#`'tm<-,kTZpf@?%kG9.HH)c]__FhB$ilpr9g/Wu0mq@Sj1"nki\$Yj,Uu^*>mFB`$:Yai@9&;\'1fcAa7Y7Sep'8jNl7<XkHN86
%=pcHBoI)59='fW=-VdE3h=XH<;K+HU_'0cU,lSQ6/a>q636*O0^b-I_O;'*8hLKGte2]Xc?kklF]p>,Sm?0ES"7!PWHdMom"*g?7
%>5>X/!)I46)XV^A\$>FA2s%A7s1j[j>\1hn.r=bN:pc%BC/[ikV#6ei%U^lV]TLJNb[n^]EYuLHb]".aRc_*#XTGE+*,"Lh1uuN-
%*5HqZ<$T5^-`egK,P7ia56_^p@77"+@""bO]fDp,<+$`%&!/J^l*OFD\0eB<o`8j0>bkSi^/(u-1[ItPA"`eSP%\E_c!W>7>D&\2
%,!Ms_XnRtr+g2dNTnltc;bjJ['Q8alP0?SNpicTDA4cum3qfQB@X?5Hd3Y/dg5M+/3g2;7MR[*YAd1LhinAXjME)h3</n&rgVqS`
%"/E@TeuURl6CCQ*rftI`'i@[p(Z^4IaqGehVQOtC;JiW#]7600!AE>]!$k5PfWe\k':f?CZE^@RZqK@=!f7*G&!&XMKVd4Roc&X?
%R*5%A0U:]ZU5Z_V@kF_eL`r5/V5nU5.DeQ,#I90d-+[@<b9RLu)KUK[JsM;)+RU!N_CB#W@?EpWbG*@]c"aFi+5S=7_j76W"f"m"
%];Tg([E!WPH>ID+-ik/T70elH!KVmDl6ia4G_Tj=!?VM%"4ei(W"MP\4.,oXZunV7;p^B_^d'_-.-ZQoirUVc@/udec@UoDR3$;b
%,5TCnMLZI8R;86"W^:IM98C6oL_LX7iJAK5C*Jt4BCo)$IH]u.]YD<3<5Hj?3"K4:,CIH]!%_O!$:fUs%>4e@&+CKFA+D3l<gMu%
%8fnBVb?..87V44j`98)j62SaQ&NP#'jHq.tMui&rYKP&cq?=Z&#:?\mN6#R4+@dlLQt)ZehPctLR%m!qMi5R5K!CO'Y";8T3.hh6
%BU?SD)rSXYb9Hh8RLW2D[94=,+h/$!!A$]^!'gh()%B6&qmEFhD0.J+`A>>6QGtjCYYL+.O=h,>./-5Z)2=e@LbgFpaq>E1QG/Z)
%l@q,@9p?Vq$,kbeZOl/_a#'_o"QM1:#tq;2\]@rZNV=a:`C%#!SqYgd@WX?/%<<ZL$@,,[r*J7p7LeB@o#`-kRHR8&a[!)YrMA3k
%?X#Z10S5CCqI6slEIZ7]Bo)gP#Fq"ABbdFi/3jaS7PV,9br+^P!;Hj4&X[]rhYRaDV%@4;$7WQL'erV-K4^*4V;YrhDd`;ck](90
%kS&4.)BiVg!7C+R!8q.-LIZmF[J,H<i:goX*+g@kr/5H!Mbt:h$,kR3;+cYJ@O@-O;%)B_[ImFe+h>XYY_JeQf`Gtael@ii@[A9t
%5uXumr:LqHLIK,ubiO1N]%3V[08qbrHRT.JEnTp-?jijZG`OrDqWYWbD(sBCghdED`C0nW1F[$@F<@bW[#Wn"foBN2Z\4%&F^g4W
%-%p(SZ=jeXPn&5i9q)Ej%G]%@4FoQFg`+m1,("(PMMWSlURNSG3(*=(<bX2'E1\+uf*Da``ZS\:n2JabP2nF9GRB`4g0fJ$=B(P/
%@g5h=]U"Aq-8!/Xo[:N[4k5B8L`;Np0u_:r(lT;@[ZVh&8<(,%\qY](r1tS9#"+BQDUEimO\M'N?1^go@+Y];RVd0YUG_7^@csO&
%VX+f*.kq.eBg`eKY`"-DVA,1:Bq*R<gFPN[qItM-$1FQZ\&(gN7Mpe@^bV5\7cEGj\8'`?^g`3S8M["34O"b<m;M8$kKt,:Wu.>s
%6/jaUY(L$qbq&b:3#sPNp^tCSJR(d\&Xo,e3j9V[D$O4I\`!G5I5nf]D?3?4#89?Tm5fp9&9Ehm)WZ``d+7h)pkcso`^rWF0*60h
%(<30gM`lZ:%H]<!Rb"Pn@NEhpMZFQ+@Gm,\9;MTFm$OfRNS#%Qdu-@d@@?AK"&f5d83e!$7EoK?[':_a&##qu4$\0CQNW(JB,YD7
%=`tC.f.X`N[kLQ#$UAIjAH]L\`C9JlPQ=MB=1X`KQe',$iA6nS,0C6:^`X)=GVY_@">##O/B,ONCfi7j__b!(Qn@b:[P;Z"bAb%\
%6Nga!*h&$)iK8g`/)3;6OB')#C5u!14j\fC"U6^pA]3_j4ON\2Ql):#a-=EaP`sa^B0Oi*>s(M642.5PLI"iZOk#'X:CA-IBosi.
%hA;b]d6s4p3tit63Y</>lSJ0>:M+rD;(i=S318PVO9VfgflcFQaFoN.3e\#oY!_UkSC*.KWMZ1Nj"6i\YpgsG*%N.u&0UZ"$seh"
%94P4DC76,mAi'XRe-L?R5oh[iE?[(Tp_.TIRJt(u?&2`-2'I^j]7F31k`<t.d7gnV?P$DfW1&M9Lem]4QQ[ibG1DLOC1IItZM^.C
%g#@!8=T<-o8m5'"e=i\4TjHA37$q@[0<&W(:L)$P,o$T'd)s#;.*HENE.Z^b"-`sQ=]6\&FDr%&Vrg0SCmp^?@0Nt'[.C\V^^hCp
%f*8U:bi-\aS?/\MObj0?9gR0V,%#;^.>';aLDu,3a8hZ;&7ua]peVG"",rn,"!EMIL"TM8Vqn>Gd9Zhr<6f1qEI;EIjj""8?r=b\
%0*k#)h[4cWfJ;,WO6Csa((>ZGogm=ukCep?[0lDbqOgrpiP;2l0f1^t3/far5[j30L@l1c$cj8Cl]@P"3fHJ1.,cBhD9kVj8[Uj"
%C)l3u3BI3m1/2C0;O<2*,%[dR%Mg-?Z\;Kb'KQ\*>e8qpd/4AVA,suEIS.fq((=@\il(,Ta['#jH\;uHahmO%ns^5p9LoYL5#Oq]
%hUpg8=tP%pIUFc?+g[WF7:\b"KP3tH%5QDN\rjgO_!,&V<:i^D_Lde$Mg6-W8;(]%l(k?kc:^idJ1'FY9K8qrg1*unD(PWl_,Umc
%YW@&6VB@IZ7tZ#^qhc/l[U\E3Or'Qs^_\gY=\a$Y+Oi)&11<t'g2.#^`9)b+7#FBePm03$2\9s]LrM!'qc1=4<,[5Q2iH_#64%p$
%6K`Eu1ug7d,<QEa.*hr8KSS!WA,lD,&#Hh!K8/?>748eE5akFSL;#u_IM>d;=pQ[QV2_9[;3U9g"-mCt((dF5ZY)g%2&\`R*r?kt
%<e-YRQ1i9<O?lSHW%q9t.p/C)^PT<_jJ;Q/bXA7K,Y`SV'WiL-.>YiL;Nr/WWQO:#WFS'HCAK8<UgA,J?mE90l\T@G@uUV/bLen(
%dDGst#acal$*+.>Zq<cHKI(#35P2EhQqAN[!ol.+!bo8TR=LeT=r#_bS--t?[]$tP!)87i=piUl@"UkMJMq7h-\MB3.k?;6f`_QC
%2nB"2GDi<A0GEZnNkfA?0N(5FJ?\c)pHullEhqMX"j*%.$OO$Uc#AW=r"(?TfH=L.BLlV'/XA`CS7Kj,.'P!&KiV%rOcWPO^k]mt
%i!(B.iT\6:A-a)p"S&U'BpL;i5`=G=@>!(ESl*(pWss/5jM5Q.))fQt8&AK-,>Bo\Qnn8bZ+q#n'+r4(CJH8j/!)^_AJ]D.R=l!q
%"hfX+,lC)??VrK,(;q5ZN]qKs_]")R9,U`TRDgr&0["k42]4mWaTt@'3MAkT#Qq@u?n@O+TnAun-?LK^,A]4,2Xpq""Lt&1%)a)S
%!$)4b[@kDiKdEt%9rToj:Xp,LesRdkc^YQ6^:D;PnQfo$5ij-hT+I+-C<.T15J]n[C<!FP@gU7q[-aM.7+:Q<'[E0>,HbK],uq2o
%"SRsq5d(f493cS+iI'(V7l35K)dC##W6MSDAKiT)5TOHGTT9BBe197:@Da*H.ZWEkH@qdk1\G;;K]@s>4Z"u$!g3Z7qG"8%?kJ&"
%Rc2(-&_"R'0+APDme4C'n]9qa-0Fq+P+]KFe:mN9#iU]uQhn7%GqXuACL8D_Vp;4FJ9'/%Vr]o#(?/)CO>=3;U8t&XqFF2S@H:fE
%X)6":MPo;$dU#H?GKl_F<bum&&m#,c`&]oO?3fDEKi[faJgGeR'f==I>i3/#qWU*7D(sBCh!HX3Bp#PBGU-$;PECaCE^F";%Mf,'
%<o>;7<Tj,ms"YO^"Og1WXD0e,6Of`7Ba/i.&gNDENJ`k6M6,QcJ^3?cGp^(\fI?CEiDFnPTST6qm)fH7T]D]Lm\XbMip0k?c$-=Z
%g?oQ*+RG(&#*-3+dTWgGc3eV_;piDV\<JHDdF@@\d\?uH'V_Stpn"pNB@+(P[M)%Cc_(>,Pa)7[Zn*7AB'PF4JXR)%]KT`TH_rVF
%[:R`0P7m\X-=gr7;s'r./rctCPpcb=BF=hOe'%i*>op)'dOnf>RUY,H:TUMARZ&TrMaE?G6dJP&_`Si/TBMIGZQF*UTS/kkAD]';
%l`o"MboiqCbLf>cd.3X=&c#iA<b^iZ2j1<$IX"iZV4N1Y!RcA"?;u`fTR]uJ@-C!qn3JA,JKR%\<8aFUAL(J7'6q@*"JTaa=YA?T
%*=^XENd8Y)R1-H)_G!rLT<AmTGA)OJ`>1!-BL/=I>F;m1QY)6)qIfm@["t$''M!cZE&2=`iK<n>Qgn%#3s5]*PZE,B^kg_>."hcj
%@Q?6t@d;>-:i9sonW>[1[m1&e'@<u7@3H:Vo9V.On7Ib;Q*W@k7F=.:N^7759[CjI2DtFUKUh!/+@=$#4AXoQi'0=hYH@<B,N)a;
%b)8ENR2ua_%kal;Od?:WYi'$L)CA+P>mt,j)%.%-^U`i+UfdA9$CZg&H3PZQ1TY-LpFKKc-;k10`3G"FCNa84g5X\#YZEZKe7Zr\
%ZlW##@NhL74l0j<7A^,@6]Wh_To@^*f(3k=V:;:gZFUMp?Q"#OT##V:]W]-'ABR#f*Ne/Ajocnb,1dm70V6,934(AFh.J6ZZqERJ
%k!YoBKnt(i6e(B(]S6-DNVPGK*Bk1?6oa)&T0a;A5(KmWB&!NmSQ+i"',7E/<sd.)CU<02-W;u)=I:`Vbud7>]2u1H`EUpk,/U4E
%1nZ""Je6+tXlob]4-7VeJ`g9iT9f.<ehAi5%Ce8nNi&H`=)i\-[GlGl?8]Ah?*o8\hFpm518G0jO8O8gSB+N;:_)b%M)5Lr+YSl'
%FM'77Via2&de2SE6'n@/M63<-`(9r+;mAUD1[1':I<bt%S<cOm?ttoC0/OF%/a,h@bb@*P(bVAFiY1P*`OJgWOCAIp+3r@)T$b]>
%[h:9R%'Ce%+Jp\&Ef3Xb7*nh))lhY.2O&.(%/6cP!ET'J["e"(Y(.=!Qj7"aOg/,Vpc*!(f4)RHbCP/@C"3Sgo<JGI&4VNlDTH9o
%d.(F@m%MP=@L9npTr%4NH-+0+nGu8RJJ"mp+]eCT>;B*`lr&Wp>'oWt+OH(+aF]Y3SCT!I?[uaM2X8HPOI1pD"1987/Jc;:H8@F1
%qHe`XnYV4n`X7ED@Eub$rC#j[I"eGg-H8+Aq9<D-_gY^4$Jo6fF!SpU#gd?Q6ahsFUS0FT#fn57nRu@UrrBAGMVHgC>R0=@Z62(;
%`+4J<U<%Re[92[,?q74!@<dN\]m<KL!58[-3UQAPd_^]?8Kf*2ZtV])8Dm`B_2NNIeJ,@5\Y]p%9r\E)e-8A]!b51<9C#lDd^]M6
%Y>s'$QtD'k\,a=(3XKeUAimUnJ^a]O1P%POPqH[jZ="ldTS9X=OF_,*F.RQfS0#H?&LMT&;VC@9D%RZG3CV!)[8baN$&EP.)q3oS
%\kf&oeFCO<//cVO+$Vr3l'``/9eH4.X::Q2+Fhe36;p<LLJ:UXRE>Mh4M&!uX(A_i\7S0g)=@/hl=BHHi>!c;AufZWN?/j$\WkQQ
%7?"5(.g/akJ<j`VbITqR$d1l[1+9H*pMfdkp-,-1KKsY@7H*/qR"qk1e.<`(1Gf]CUI6LUJ-KIF>Ue9-fpmZ8aBp9f!90QV'(IQp
%0XYk4<5!ipoe@"C``RL5cTs(hU?PWZA!ig!=]WMa7ks5O(kUn/I>s+XciQb.2.)f$Lg=0b"mNU8-Pj&T:rWl2%r]HqJS/i]Ybt[O
%O><9hGG>BK0HjA<JN[FIQ^"+oV@<'\Z7U=rNTN]=!CL0Ai7qnFgSgjBJ\k;-7W"iDR-O#pnGGY/rE87?l+Si,>\td?SrM;f`u?To
%XeO:/*lPsEiFE"sO_C:%Wrf@r/W2Ha>o`fL&OXld+'C%pd0HI[!s&%Z6Q*dn&W9-P0]Kd*AhbL*!I>F&1F<FR$ZI+o%,aK=(4b"?
%A'@J*o#-TWAF-E03A4S+0TqA2.Q-EmYIQJA+JT]1.kh.6W*,#b0D]QdRtRf(8;b1i)B=13B!jcm2b.F(>55D#+cNN(rC0Ie1W#Ok
%gbd*.(/:t:*P`Sc_fYRQprJ>X+9L[AQA,Oc]"We&]F,E&LrtQ2]mn0;b00%VUDGYF07'7j6]S.+3&#FXJS<:'75L&;_+6U;`:t:3
%G4-@e5;6g9noD#Yeqp1dGd:Ib2r[S@`5[?^<&K$]j_Hgpee%4qoJ7KP(:?nfZ2NY;CPk;CGdnIH<3M=@GfXcHpId`!VnNUSHN1V5
%Ha=)29u$JkX'\#8p@>9%X)J%3eZ1os[HZkX?[_sVh=U7a^UsI<p;rfYYJ66US3O^SIf,Dc+9!YeH@af74fe'KZVEq&MgG.OZo-3C
%9["Mc\U0%a@Vi\+7mO&0^!oV.+=gcQ;2-mBO;>[M>V/%b`4QHjM@j#@9qtFQYu&LFKk;a0FB[#K@*YE7'0-m$;M0!-/Yhq?l#'0@
%.Fb:7Q\!b!s8G;[6<V9RMUN+s_T+'o7D'T:K]CI]?fG.KRf^!jQ0&%7$HO&"acm>:*t<Kf;:\eDDO=kRHds'lenBu]bO'Qa4?+nF
%fB`9K+\?ltR^_IrUsYn`ip4&s,o$kHo]rNCPd30HX3G1$QnAB$^=<.94"<8k%u&D]%VD.lle-m$fpKq'di(g6!8<ZW`^b.bTg+D(
%+SUR@&+!fU=YME;"n"(dTKZq/1G`>#?)'iPP(Ei<<F!?'ig@GKQkOZVA):pZE<bKYJp(`/,HoYlJ.+<G`c<UgKGI&Cae8b_'XVOi
%93Tp1#_>;B0[*lIbS#dcqe0E45/=>Fi$PaKI>=s*G%j2G,U77qTd)'[a-c\QHGKX,R,TZ2/CN9HM?Y5,Mn+&=M-/,U/0<;7BWn0t
%]ct,o7R*&Hd6`R$6Pm,U;'XCLQO7#&lnl#W<6I3Jf[X(Z@MXWG71*)!%sn@a2_ZaOJPdT-GctaPc_@h>[ItMN!)iG)OESGW.+e-L
%&/p]WFnYZ\qkcq;H>/C?X9!&gXP\\X!$`^VbLssn:ED&^F>khKJ*C+d_&sGb%.!VgKp^T]Lg;2E`gf5j7^a(]TEXX%OTq]H,(Up1
%3dI#;Z>.6XF\t.]U`+k/&sl<c:d[n5Nm1:6$(0qr[j*8!Z2>fq+)9ANDp_3T*XfZoSqukOAX58BA_u,R81e:P_DbtZK%ZF%=#GRS
%caP;cT.qj_Q[NQY)(juM_M?P(RO'IH:9UN`j^VejMO23+""u%0&S(]W#ROY6/hXj"Q38!qlYT`GL6`7[*^`Ke.ff86OE:'FdQR4&
%NZ&B&#=ZSH^SFjN.)\LN!PD#K%["&h7s#\\:pMo<XagU]<7-"g4FuU!JVaX.[VH="pnu''8K(A0S>%T(9==$RU.#a(Me/^<V,28:
%of@H&71H%JD\KM\.[Ve:)ZfR3d8:E0'GsPT,NDILCD9?ukL=dcOfhlpL1[G*V<&!*DMAL,Znr=gTS82U%Mro#U+4WNH?CulH&)U1
%joAl+5*j*\;-tZ:"VO'<QQHH&7e6ubm@$N!3m1nrk/2eb6cCUj(G.C?>.p\"mD-K=DC;U"9e#@0pnUY'q<0NE^la<^3uV@[])L&M
%ZjWFjO<V7FI2A7r$mN<bA44SL5sW.u-?F6c`=\Y/*I/j-(3BVN/?X0%WsXV.EoeT',\e)W.X08o;Gb.Y+j/#g<q$YU/K^D10ORJ-
%k[`pnIcde#/jIDYg7gH/A620H"hM4L\0>Ug$W>Gp*46JH1X?'",->qA#j"JLGWnofI^OP_]o6kU8u")BDDtl@E!,lYo]p$;onKB>
%'/5X&9$Ae6o,$t:iaBb-c39Xi9gmR]*;BVt?4=.d0HXJO(Q26DK)uN_iG$=Y&RpSB83!#.R=a,sH]f3DNs:?[oW=!Zi7U^5"09UV
%BN*JN)J:lPfs.X3%F,G/:slfgJHR5ji#WAN<g*T\:5iGpa/Rmk$WsY@,+qr&-a:&la36uS)FAbS+FpEkeCMrM(<$ELAM@!/5\l]G
%.D2irKEA).m\)u:1*BSX_(^6FBZiZ+'pBClg0>pc&YOAY[UTE<#dVGja*$;TLh.-O7@'Df1lFU8R+W<#@fnS.8;oeX'rI-rI.FR.
%,plo1TudA[I8g?XmcJ">C>]jW:.qQLks7aPQUR<,Yrp/).YH>bC,n6kOZ<ZJIDqqrf0buMl8!098a>.JTU_\D68DsMmZ!Y^YWU#g
%6rI,<pMLDP@sE;)mN3:p5UD9U,@<G#X-bKD^dAG:MkTc0ip'tH;l8kM^4'";G.]Y1kAoG,@OXZI(G/?taL;6uK-D=.E`I]@ZW!Sb
%N1a")"9U6hQaL-cUGkldcHLn/<_B_U>ss'Tdh""r+J]Vm<aiFFd8[-e;DLbTLm1n9KuE!_84C'^@(pE+H_e(pi(Dj5fH(%rY3[27
%HQ\K(,,.9>PH:iiitSX:5R7QLOkti)68rLGk".=Yo]eL(6"CXbG)"E.Pd\F2?>rYZ6*1>]Tg4ucEq(E@I(Q0\Cqqusp'WPj);8\P
%4&*+9VYngaF2.(_Wu)R>jKp@:-#^6IU@C3.aj'mOL4pW`&'_1loVW,MF\di6%J")+(h-r$*&BkC;%lC?/-6>!>c#,I!14DHA?U<2
%CjMMGGq,)'4S*cj+s1&1a3YXH0%b02eh=U7li=I1YIU`&b)t..)Ftq8a(7.:9PCsF^^N^8ieIsQ#qG^q=^\WM\]48&hE>RQ,stB&
%!j#tt/UYrJcE>*a5d892d"$4qnI"G$q!#E]mog=tnYo4/L5TQ)@8X<n-!OQ3H4<&dVNoB8(Q;@=iuj'^/=:B[b<hLd;j0aiTfHh0
%TX8Hl1BOmJK@m5Ma0a4?CX##0qc_@`#A!!Q[$$E]%Fa-c!6A59*2Q^l/n@ij;\m1Ya;,Ka_Pe1We,gM8!`jYGXTAe4Rri7jMj7,s
%&Rr@0[]BcmSpi3fLlaI]:S4U@PnA<ClAp5jb_qu?B]/%kj)n7?*N8g>eSI.Q$qk.fRb6%K=4#0K,8SIGhc5UI,DAQ?Jq82J'*g%J
%YY.-s)!#UFcFpkq#]SYJQV6V%%_kJI!%M(r)3hFc>s92\&O6EDjRo>OD1ICFK(BbC`>B%XqU$S+@R`*MFI$Z,aa'e''Jgpb?(Ml5
%cn`$<(s?QmZXbjS"OAIsg^5f%CP/B=0Z_Z#,Nr?2D`Q'DfCKbW9VEcB7H4t`_FE8QSsN.73KXNLBITZfeZ`G`Bm']!<h%NtOT9/Z
%Q/o$J=`RK"9.)7nB&e6!,ORfm,o9;0AFN;`VWuYs$[IAh4OK4ThA\G=XI^)e<9ihW9BaJ&9_p4i4mJC>._U8Y90H^,'F9=WMT&,=
%\e*+;HQ\FSo(A(MVrYn^Mc;Q>OMCu3;>jlJ6o,4h!C$^s8^&]d^/%gBmU]Z4ai.Bejq4]OP*t@%QPPQeUZ;aZF4*rDaTX7!#0f=4
%6^$&5ESMb_Uf=FqSbT=0I)So3Y2W>XVB40#&SW]A>$+XU#YFEWFGRBVK-SP&&@kDk(+J/ZMGg0*OVF0r=f647@j?a`b$>T"@p`nm
%IFAs0$Qq1=:1';(]Of&Jp1i6BTGC?m,7p<0cH]97r^eq&eHjEr'qLk"CpcBU80_e)U[ij.V:SPKR3VuI_II*k:8ecQZ!YnqbY6Up
%^9!Y:X\Al(6M`^d*]g/L&4'@s%im>L'/Z.\O3<bg<lP0A6g1&5,3pGRT</BDFc#T^csB0LkoYFpZ8N1AF2:5A=4!?FbQN3[R/@(N
%W=jb\A7aSjGJgXo:_oWg4NdR]-,:[nVWo<?*7WOS$oh3?p&n170L.n2<V6Bi9,Gj%_3fffrl]1V&Tba,l/Y7V;7ZY*8d&#8:1%9(
%=<O.!#;Z9-9'6p],;P3_.C;'R_.kPp)u:MSQIG]->+K\$M*OHE693EZR0'jf?`f])`aDXBBbjoa%E6DgWXRJ-_?]6#!1/7;#*igG
%S:a-\VS0dRVG>0soV\=);k5lST"rKOg?KF%B/'EU$hh/B$ckBr9!=N98rAO,!oY"4:QdcL1]!:G%Ng8a"J."ohlMl)YL8:nTRPkH
%4&+B`Zns:g.uBuX=Tlm3KmZnd'7T-mC-q:8%,XQ!9/9C`'&:lnkS1pKe0O##o^u$t'd=IVf%Hia!Y@4*Kg@Z$Plt]3HS%Wu1H\t<
%iFFQ2$P?.ki@d<7V.tV`:/2+tZRb\6$/)UlO"Z'W'$"L]>!4dH,iStF8Ia!t)3pt?*@pTmm,3&G:,RX5?M4s^=,+?1N-Eol@!\Jl
%J.["hE,!0K42BXi!m-bgeKr(EKPY?N'1,>A4kL/KMKFrOe`>XklkhY9/$]r-jCMBV360s/7K8),36E78AmK&>e_KIN=CiN5=R25G
%ZplF,h3*!`WYNALeR1aSYdcUr<G(Rp;P*Yj;Ae2!T+uH%V^*TDG04>'1TIDd>.5)OI]LTGN7i6nb)kjIk[PPHN*fFs[\tUtU1T^,
%[_)Z++`WG#AhSH%86!`:Hpr`c!3fm0&\5ia;W1O-X5jn/@nQpENI=b^B@r*5,S2Ym$KtkeE0@<\e7)QRM#a:Fk,b#2.@k!9._:/4
%P7ukRi8Ol,Q=J1X=U(:gG3c`)KSNi3PrT=nINrJ;U!',+&eO8I9LW6T=0[uW&n-c0&o[r*TWnaX,(jGjMb5ii'"_%P]\/s;',NF5
%0^gZ0KL/g=OaO_14gTkU"t&h56jD$>KSs80Zkc,5Tk`[BXVq74Xfm+`d99uGbnQ.2HYgUIlY9RuR"1'W_S^)E&Xh(LmhXqrK7QVJ
%@c*%;OhmXA6:u$+4NorM)]N6SL4N33aU*[dfX+cJ?fDP:#h]q=4AP2p**>WPThHm9R->Ef^;U",8;Rh:Q;LZ%lcsPc\=!@(RSdc/
%PSg`p<,YAF[f`/!Z*W*T[>(n%5X]iDiG@dI;F&-\8\Ha-MD=f;rBU1;Wo7[.HI\Qc'<X"%6['a=QLt*H_\I<R+HnfA-D9lK/Si@!
%=%J_b2u9Y,E.sE5`jVT0P3$U/-0($O[NCm?.#)r^9%t5QKA&eB7UoYHJ:YI>7MD#ZL6WA!`@/IaqOU9i9TN#3RCnuKS!c8'(1k'*
%7Y3]'W4K)=$m&NZoR1kZ1dt[.e.V*o'4Df;m\1Sh1i.52-]Z*IG.q%!Wn"+`*8IK-3;FHs`P)`!^hl,a*6-&Q3<.@O#u1G3#u(\<
%;TW`W`FH?9OufR%>V&lY7OjGuZM]%2'PEO`J>u?n?B!W`0T%[O>1+:^3$;"[EHFNe0K!k9]?Ve\Wj)YCkes_af-ROMiMZaX/3BKW
%`)/7^R02#4U4QWN/o`0*l&;%0`3K8,i_B`L8pjc%`0W:NE.o=MarQMC`?8nGGIXQ1kK^$Da3/SeE4g(n/.iMM,NSoA^0BT9Hp#f^
%c5R6'%)ag.[,DHhBk`2W*6)#qIO,HdOH:Ap6Q-F^/\n"BSDh75=GjP\%*t6Rd2Bi#Zc(m!(f&s#e?g1/E+Cm[Q?U:2*]%4B!&:p$
%DMsbW)-Jr(/lqrh=#b85OjMsa_O4UIh&03P_)2kd)H/UT9j;Ea;)g)Siu(R9iC7-k,mm0A&W'&e7,a/1j1oWt7,adiA5_Y7$4!7=
%UZG^SE:>fJ:SmZ96]j-TH:&>UD`([@31!##DMR37,iRCLO%Oht#Y2<7;@Wmu\4?Y/P$JC2),#_q]&<mLpH`9V:(Q35V+DUf32r9D
%3[4lJ7:Y;/*#oZV5`H"-3;SC5m2KeZoMJ#55\C9+f9R#_9[)Ffg.FWp#;\?KL@]P^"pY<t_labZC2iSMLB."?#3U4j-D2;8ps_&t
%K57g^Phnis^pO*c8AD^/*,E6"DK$k,OT'?l7LH]i<c[];A]#"\c)bY:H>q^Kfe\7%S-3-e_RK0qB]cHLK--UO$-6<fr8;,V_S-La
%IW/cD5ahpB3(^LnZ@(!ri4;RPeW5h7S-oKkD[/Qf8[TP[\gN)KRZWO".mZ/h=C_;D-O>K9bTsk25</Ij8U]Fj_+>'Sr<,/I3*LFi
%T++(GJ6+$M2h#^(E;5A5S9qTIC3`/W%VU&sO#->5Zd/l^H-cEH9I*Oah"\^Rc+*i%mJPlJr(nHDr8<ThE\=Kli+O:Cg#*)_h6.EF
%YOpaTX@USnkeXN!.@p?j*h6%:WltZ13$CP!q&;IV0tUn+l75"WQ37cK%<c^2NEMnd4$P\i4ApoNq8'>kkYQAME(;7"TI-3O*%b>5
%^YoEAgoDt&Pogus,M&#oq8!Xj,$`^p_+>g'kc-*s\>I7unVeRFP<-1M_%5s*XVfCJ_+>ihc-^hn<]S/p#<b&t\V6j")gZH7(*lfP
%FaA!WPF1RM[Dfa6IW0-Nr,2GjlchIT\3?29o?7`JY=B\dpqbQXk\T2RWDg^`[7<]-[#eK#iJ\hJ?&[lWd"=+skfAEmo\eftUe#Ff
%_-QJ&;4Sc`.k.8ul+qqUZK>jo%h;]9JacDF%P1@":n8XIk>Z=I\tKB'/>fIsV$@729A5+d%o+0K,n-F1_(g(lE89Zn#llLl\Y4</
%JgQMJnUn`c,k<nh_9kU@DX`9'%5;o%@H@_AK3U8h8FhCsFI8RG)h)`eI,n&fr8?:,bK:@0?Fo)#Vj#,*hp)a-_C=:IebHsP5I[$O
%]CLSa"I-^Kpq`B1(g8r[#Nm_7$oN6XE6"LQ8mD,-6#:%IlSCab()'_8%t8I+.<?64r8;8>/PS;m3)9Yafa5O#<"UXK$,Wso/P&h.
%"Q@M8l.[<dLM-fEk&*.^Q+9pG$WmPP+[g"U'8/HQHn=]E+IlD%23sLM*6Y\rqM$+4FIgPVh$Lqi03W*p$,R^5dpSLPK(-oG9ilZ1
%\sT2&@0_SFNZ>/r%M%-ujtaH_R@FL+gmN,nA.?e,B(4fFje3??kGGoG1G:]k/EB))NZBaH)l2E&kBLo)_(uWqpl@lN:<^e%G#gG1
%bqIlcJg6l(FPG(Gm`8'&6YGB\B@i>khtY!TG0CD`3Zg=3&<sAIjo\+pTF]TK^feLHqbn@S3*LF9V[X_mjkb)fd"0*[i5Q(o%@f>8
%;2_T!i/'H0H"@(R4YYdH_!h'cJ%'MIa7=03ccEoDL.hO>:AmnE0)DP_92Xk[bH6b,P6,gcNJ(M?Hs)<;ohpb"L=$sdcjb^kos_X?
%5ci@";F>-qmA2AoO4,?+&>lqHo;2K/&t_@>$632n>,4#SJ]%':NbClc:<Gsa5+N'$Q5en+V?1D<gI_UoX\N"fd[@lkX/SHJ@fg<<
%7sEH@-?)3h[KX#mJ[=Pe0N2[t!iJV\l:M2>"tSo)M86ZG.Te,]'f[,E)arVemkD*l!lt2Dij)L6P;X/tU7DX]0+'gh6Ntc0*hWS*
%$CiHI;[RMBJ[:e8XKLq?K>7kbaj(%7$6QJ\F=(s99Wi2g^rZ^N''W-o:.(Ia&2OnX=Z'>Se;:sY@\d&i7,S3$$]DK+,&hF7:"lpK
%"A\5b)@7?,E$iohK0'T'XTf\_SHg-VNi`9<npke6D&/1S*cTQ8;>YMXE3^OjVIdXIc<*I\U1K\ppAdX=p>>sA$a\Ho4Q's0/oB\N
%7uLL&DWLnCX<N9_Zf(rJ;n3SZ%lcjq-!Hpd^f__R_%u&3Vj:3*BB'#JBrLoIDKrrOEO]q4VZD";WWf--T`GB8_CVBH"3t!@k\['q
%L[@?5Rk5.1=&&lb"qS42r\ohcc3'(BEa<Qr^`@-GWN^_IhI>6V%N9:kR/n@FBYaF;;ODVGE#LX9_<Wr9N_HMAN!13YWOXUO"e>L[
%/C`CXJ28j8]<HAmE$dSBl8f;4>8D9!<YfX52HK)oi-Yd*=pu0cHMtYc+'04s<p:/&2AU9((s+Z?$b55'=lkSFSBR4FUiCp[#8_9Y
%C)#Ui.]-6b.DT)Bf5b+F_"%8]Pl7-SgaV>PhGSm1Q)_>mJ?ssa6?NWS[\-TJ9*%dpakN+U"Hce!Ko"$?!h?\o0ZJ$OJ@!!+4-:N@
%jLo*PdEDWOKn'HUhuHi,jN:'rc?$55o9KNLQ;d&F+M4T&YJD'eaT5/*:?ER535EZ7kfkY(#<:L';YLV1E!V.Dh9?qt'IkU/c2u:%
%2Vfg+Ac^N1FI@Bh>pi_l4Q&hJCL+7:J>:e,bf0b15X5!nl9*ui"dIhj6NiFYB!?RmJ`FpqEc6cLl2="CK2='L3`?9S#TPd5]u5X1
%*'MXm1Ob8fSGJ@J]q#C5j4R'firMZVZ>k".E.nKt(3$DcLe_hj^`i$F-l=Mn9Gh8SnV.4;8KtlC/Drq9\2coh!G;I>[S4o1"WX48
%,t-uKi/C\#mbor03!#GiIS&Ahc'ii8BYYK\+tgO%!N-s<I,W3McMC=gD4Lu<X#4U8btR&u)Ke;X!b]q'M>0+F3%PO#A_\tj1Fbd.
%T$@HK/5>m9lV-5M;-(F@'0)GK(Y5"inHdl5IV&X/b"(ILc32Ed6^i.g$(MO&]s1uILK*R<Cn1kP6VNNr_$&&>$cud79]-Ho--tgL
%i#!hZm5LEJRA\V'>(c+'?!Hkl"HN+#O%hP;'=d1[!JfD`JMWpZJ97[jG:Z;PR@Y_*V5W.VCoG-`qo0IR.WEG,GfVBM3"rs7)sr@e
%>QHIXq;j*BbWdTD%2CjDl\\!:Q>IEIiosG#hAJoMQ3s.1&M1Lb\fsLglY]OMHY5V5Q3nV&<nRYI$61sJXehObJHKa>0!plNS@urZ
%<[r%u55g'B'f\O)/[r#)<8^=><k4Ws^qhKMbBDPJ.WEsXV+'RQnocA?*oBeFZN?*If:<6g.EB$Q7Ag3"*LYc4V?07&RSk"?(HBU]
%\5QBT"34VVja<]B_"#"CjZ42;"C6r?2dG8PF<-gq"g0GmJiX]-0@cAV$QS*>0fKpc34dP*N`RiP%?ZC1$62Y$g_+$lJYU1([@%@A
%j.LaDF=M6Ajt!(5;1[aI\dBB'E+H@h;WDsJE'CYiPmAAG%%RkI,&hpo>!AJ_*5Pjufo6:X4LmKW)_,fI@$$tR;h5S^*ddVi.W>Zt
%_F0q%S:5&4%!Qf5ZgHq]i<!))e$YGKS1u'3F`f<U['69Db6?2!U@5RdAU3A'OG@s:E&=f5Do2e)kR\NIc3DS?L[idf_!h'tmt*\d
%Qk,]9POq!sI,L$1GH=Ln5&fmcm\=EBi6[7QF<e*;0."]DO<3Z%R9?IM0,bijPKHJ8Z/Gf*A1g$9NdTbY#H:`86Z`;I-?FcTpqXEY
%21t'C!7e[Y)^"k20E(O6qB)4<S/"Wros]>,1aV++%mFrg4rI'"+#jRC=IZhZ"%Rji[2aSP%(!5BY4I4VSp7R&"%P/oKL#j'Bgh06
%d",]\P=U-q#EC;l`P0fPZ\?NI)`hq%Ju&XA%NNffjZ;V@Q%oD4L`8BoHAJN*+*?ELj4EX!3cMUk,%GUc#7`ti"M:36SCdh*=Z[Q^
%d""^jFMe<CAhnT>2K8HA8j:hZ^`>A"Als:i"%RETgmHgJ^kqH(jtY(ri-7=R52FKgm^TejWTf?N*:KRpYo>T?!-^<+K#lT[d6^`l
%%2h.bnDM2&>i:Dtj=kS)1FZn7B2mdpB!e(/-?/%BZAtS6JN)<iD+b!A/22jhnpmKD$$E'F#6l$e-oeP`6[^*h4%R.ioj@[?!T%Xr
%O"CN[Zb8.!"#qtH[I#m]i/VphfrkhBB[JOh#&qW=_atS+1Ot,%Nd43e!$##Lb5JaOi.WB?=8m,;DUALMo\U(G^`(k0J&AfD(Tt#m
%UQ1sGV4IN'HtT*bh/\"_?7NUU;L`='MLBLLhM7q@>N0Srm)r#ubrr4t\mqi!aKf9;gP5@4"=596Uu1C9fNH'ldVh%-P,=FlUI?WS
%46\\.&?soPIRAEa+$N61iG#`Wnf,4`YUR&?hn<98&:UAic[fZ5o6nMnN+Z\Y=LdRoFL(@MRuS#bDrcteH:IR%7a':^VJj+)"#GSo
%Rin8"K?d0JChB]'0n$A/(sl[e7LKZf/^nngWFB(g^>\\ff?SWTRo?t;d!VU#\V.JuHm?C/fj/6RDlh0fXq]cL<$:4r'7=<M>mE05
%_scF*Fr:/6,f7CimI]7k/btJdm,$A0'0J('g`)HDfLP,uL=XI?URS6r&ND*6IAcd>gm60t1UT01q%885)_GUX)q<`gO^l5QL>*Zl
%$jmD`DmV?>jo,U`TjEOT8fMehPY!FJYM@u2W3AKFbhi-#5i-6#p1Epu"V70U]@jV2)e*`?Vh:6U0qnZ.-U>4pfGh=b2=m-eS)?Ld
%D[*O,EW8r7b3Vie+,-[uAo@f&(@5QpW4e%KK@aj2m>^ds+#0_-Z-\?2)-1KjXOM?d\('7o&S\S(fp`G1Phe.%2k$^_#IQKo(c3,c
%hK3!@=]o?SDkb<D"R+XtYV$cl+5G_W5T!DVEdQ8+W]@09hLO`)+G#1")_G6=Zf1UY#hl2AgRIuODglYPPM7c1_to$a0o:i6C[Bob
%L6<.KYO(+&bsGUU^%iD$0.XRl9e]TlCrj9jKPUNi-hh55=NGq;pNEoH:]e'KpEn@?O(BX*<`C.bh9!@p"sDr89CD2sK5W9N[t:A`
%jn@8(dM]GO;j%\E*7Wh=-rKsFU\7/6JU@FAbh`c(YkYshH_YYM3BNVA3Dd]gG?DDh$%p^pmG-Rj7?p/Lk4Zg8'#5LBhMuhP=K0!m
%-P85m;L9&[VFid^D`"[,HVf&Fn?JcFAoHhnE4+rShQZI:LU1F_VU\J*9k3l$^-J"#cKsr.l'@6?bhaoBk7Z:4]pX.8ZYr4u%HgTf
%a#g[f*)*)>KA'Po339E7V=k+PUUtkpC2X23dn9"%i0.3ZL>&+C0gN__[5UrLAHb#-DnHtXs"1W;OFG3*#IQM%J:>k"fc.%=)X>8t
%4Dh>D74bEP+`5/`fGgcQ)Bta)S++)"*FVuXDkcktam[1)B[LCq'70hef?K=6`88H*=?Y#f^!W"9;[0Kc"*:&Ah+[1[3YWCcb3Z8#
%KNM;fD`[`O<4arm2u-MfT4,t##k_fV<"<Y]L?+_`^#AZsg__J.KA2m<&GFG9gRB[THZ^172jL)_DWUR]$UMiC[5SbZ\P#TYp;YnN
%nhA.uR4[i33$\/EWi)5ZOaD/`@\<q92d2H_F$oB?$0t(/Wa=A7<d&BL]AELu!0.SmKS'W])MJX02tIXqNH+"PAsj^^)*55ca`eQ-
%?WV,`9fri$jn>PR>MMj<%C]<GXkHTu_r)_K8>l14&@G:a[5YeZb"ZedC2_f=bc^EahTY4sl>#MU^AFb!^/P%>Q,4:#=B>c22,Nrg
%',#Qi_M"l9i@A`^+[^/OEF]U^OV;7.JRts>6Tc7S*K"XCQ=3E)(9)"n0K9^JlaX:KY`8c<X@9oQ=WRtr'K[t1a:c^K9]url>pAPT
%&Bkt_SS2V!&dT"Nh&MNsMJ*o!$CN^jRdDnaQ6l8FGO3#G>CE.u82kRM=r0dQ-G.!s(V,"YI<aQt$W%bP$G[KX[%Z-L(:5K]p?Qf:
%#4gGV]*@K=C1TM$9YsF6OnR!tmhgI@dUKP2KrT#fjHT6F/[c$"emibs(cQcpLI_)6!::,`($l'&(FqXW/05bPBonFjin-2Ci=8nj
%M!i6=A-un=]$jPnV<Vm*KcLQTOm#*F;#%[?Y6nS]OG2,L78&MjQP)J1bm"a*H?,'!)PurJd"!57M:s]/gj6?k?3s.TDBN[^qH.-f
%5Ig.d"YV!:e-DXaecdgoU.Q(_8TTc]JuWoY=t3^]+,m4un`%uWB"\l\!.05J,1^EVgr0:GZ+JBa(0NI4M@+/R^^b,!CI]%#:d0JW
%MI]0)94:s8Y\I131-@qCg7'[j*RC04ldXob.#[0cBTrTA8.)#t`bqeiJN9q4Sq'a/,qJLf<lpHhCg4#t!0$VuK#MU(G+h#'%(WsW
%A$m^MLon/]#qlGODcAuP<_'rk%P4U\D`6%1!`OuH3ql#^mD>YUN:cqN/q@+b;hbm]#9"=Jh%d=CS&8X#7c!qB6og0G'$IX\)A*<@
%DQ`kEZb!a^7cIFT=L/m>*_;G#-/l+'<+i%]jm&g>]UH(_M.KNb>2Xh(JLp^""UlUq'p*NsC(&B&^p"-d8E,)'5fQ-!ce<868V:ZN
%+)=a2OGb>IJ[KRkg3K_9PY@^:^o/+SHRl.[a[qXT<).Q=r36Df+m:)8n-qF=d?.,:6aIR!K4lc3T;/-=*sr_dG2Qb5+o7nf6/$$/
%I@S)iRb:,$q;0L3)UHMtkbOPk$\+=Q!L^KL]1A)uJ^n`rk6=un=1%f2ZkfqS6u>4>!U2W`\K"G215LCa9(`k>M#ojHf(jsjTbLCH
%K+Q>l_$L+rV2I*rE<te@'5+8d)QmGe#cZ:nY8)2i!o\.3VO5,T(W_PWlqYuiJ8dpN!/!^F#<=S!G6\HXK9MXbAeZ6G6&W!A14p>f
%KkLn2BV?]l:*r<E"/$jZcgj5#J^#>$7rnf\_C$JJ*\C&1A./4;@E#[HJW/P\RDQUMl6b(]f""/:?1+OJJJEBR1o-`?R/*WCIGdk=
%:)-`^8I:]$;RJ[TQP)juFQE5Q5S,Z`J_ZH5Jt(NRWQ>#TV)Md4L(#j]"Cd(H3)%i;.d5/j$nWJr-p=<#5r2@WRorVlM-Z5"(g*Xq
%e3Piuir4HJ*2)#1<jMKui%AU%+EnJjAI)>@9*5@JmSkW?fIUNKoNXY,C0W;CLR^%(KLFlQ,O#s+0Oop.HOdhe=)$i602Gtk_&PLR
%:'sf2Y<dJ&Cu`&7>6S:`ZOJ9_ja"c!jT\t'8Pk60?)/g?-.HLFe$.iKZ.UA8L2r1*(-I4LT9)o:cZkMYD?Q-fa\'eoY.A5n14e4[
%A6Ra)[qL%+Q7%IYF=qW:j9,,r6GHRUIiU*E(lG;jW,X*rFVA]<hDPF'FV>l@N&h:90K*7og0P<+%W54&cic[I'L8:tir^u>Y^J=d
%+.j[jmK/++N/SeN:aIq8#Y&3/7OW6fAd/5nRJ0#nZ[6"lcAPKpcphVf&DebI#6P;6M+h#B"8CO5(2[Gb-mepBE]B%/+\6GnXq"AY
%Q:3I/K4"a.o(DJg7^;S`9KFF^jNd%FAo:<NF,V9JJCLr\jW0hgOl.6\(3]udQddFO%q(tqIMnR^QL-rK-AWH&7o>Y,Q40r/n(Cqn
%PNGDU)bAUuNjhKbBPH0(I]V-,HIStW%GBe30[;Fk&F#GnT36DP&UEe+F98p(PR=H@NPqqZA5:%q[\'SO]q_jaY&5SAD,S3+X^_a9
%B(DQUh=!:]]kIdH1q"ae>IeFA([!O$e?R8<Y+-nHfttrgGIiteKL0mh`6@A$g5<Qr:oVMH[,?U#[+ZFVU(S"U";5iG2=5G1/jgFr
%;d:_+H>C#HBkOC2!``;Z8HaR#/E>\\YsogmS=:nAojJb7!:#<gkM]!thFt5&m()I[ONj*0/QHkYmA;>sjq0I>fC4a(D)Pb1oW?,p
%"0Qfak6I!j!ls-u(i*584Nm7UVb(@MBT.<=r9ug,2shQ1_q`e58'qd5O2r5TI/0L>NbDQVP9<)Q)l`t%_imnifSj+.e:H30c*j`b
%.4*au[WlXt0U=;0(q@YjgKgJ?dlJDlO:&,C#i$[+/^.0]$hjWT1!^c&L;rB``]_86_0#K<ko;hKmQtkGOJgpPV^'3G''uBP4"%*E
%^t5e8a^&`@?1?(TQ/B9)eQj<"'5\M_0u4Z3N3sm4,?n.SjhT,/5jhQnisOV,'I)%l4hR"qJt^\)`A[/$5W1J,(tt[;`DDA)m%Tss
%e$u%P`%EmR42B*mC2Bp#8l+.S3.0Gf't;tm.=c#XPo<aYPfYS'k;tnVQbEq!qLH2+%,Ffh4?7(FOnAN>2ZQ`&cBFMe>!65`/%V=H
%"L$Lu1a;^)>dIJ*d]#X>@mjmUa^uqP8Hk]-+5!EBiA7#TW):U9TJi/3%>GOCUr0`QeePW&DW#;^Fhrrp6[*5b!o<@?=H3`NiKb@p
%_)C5Ug8O[,DT</5$gFjW`a6)b'<a,Ah5!HBGSB3@@m55h2HFB#''LotG";@_2T(kJ$mi-YP?.FqQt8UC4qe9Z8C6#3@_<]6A/BAP
%=Oi<1U9Ua@g)J2qj1C31MTrsqZ-JkO8TS[^m!ZUD7JC<>h1nAEa9$3G'G1qT!h<'1"Ujq;!m05N!G99#CDu2)d2>pT6WY99KIJZT
%#g/m0]+_G2#SPRi>11.'T'p+;Jc5W8]j#Ot7s6K^XpFu]IW:&%(daM>b-ITAC1bb]6X;lI@r&s?:dADeKEVE6#YH?AqCgIS40ts`
%!Yd%Jh$mE/GYE!UB3!f3mbF/:+QdG0X96?a,4-Db$JB`7r^=kKLL&gfGTP4)!o0O$&U"okMZFru3au6R_"Rm2PAI8)-e^EQdW%j5
%WC[A5fFPp@Kq[=GE+.JZXkl#4,8W%9649tHm;brg'"gs#6T5'`!\94Q%c!*s!/P&p_$L7bV%C;40W&XO@=juLd]'NG#nd>2C=;(P
%Os,f`LH&r);b]eVkCYU5JF.k237$kkGZ.g:V,?RqClnk+A#41_5j'HN;M&]hFH@sbCs+XZoTqil]0("K6,q)jjKAd'6IV*&^:$e@
%^#%TQ6=7u0#cuS_qC'\VFc8J*!=TUeSR6[2l1B_640#%b<e?8k*.p4.FOX_u_7iBM"',ekik:j`i`1^r6?`q;R'sNq4S_9^fYW8N
%`,3aQU\@qV1QW#R!(76D#A_D]"bU2E37""!i.KIY</DM\Xg"#`%n>,BBN(Jf"ajl9gdN.RdtFkd>9C0DLbK=1G"KfKhm@J<AF2r.
%b6e/t#jBroKJgapDK!&.(#;B/M9N-@Gq!_=1A5lCR;L'IV#8App5)(HGgla`!(,Q[eA*:]&D+CsJOubA?0jieSKuC/'[Eg5#$PoY
%dl`)^pf+ea=`FsmW2L9S@%p,A\0p8<$*gnVR\/?"\mL9815rp/GSd$+N:h_gL[C%m_F74#GZ4S;e8C:6c0-LCnE&NGOB^gJk'bi9
%><ti_=VD+*8[]1^i&m"WLi)G/0dRA0*r)'n<ZQflq9nnl,fI^uV3e\5od2pqiM)0WNMR5SKaA)oBZboa'UWUhlJ2g(U0uO#NK)6:
%$/kB,-eYicU"f^$eS>E_'tP??[),7&]$"K`Gk#`pZmCVH;OIhj49bWkGr\G!:#>#s=S*6+[]OKq_._7"h'n#P&4VDi1TP.O_g2oi
%"`SB:^6+OLmmJ*@%G\G8;NCq7LJk2jE%do'(CM,3G<h`K*Q=,ipf/`-\lB_:0e#YaRr/"PA7JqLE8]KFHimjCaF_@N!#%K1-\jAj
%*JEq\M^6Zjkcn)UMDL7fVHKD]9u1:)_2>l=?4*Bj/]`_F3:(b(f^e&p#@JhYD,#=KpPVX=l]>LuM&;@-k-rc_dR[E2$p.@.l.h;&
%rs9!S,<Rp/G/r*gpU$T94>!$o>_'ajb?p%?-ZdVH^nq6@Ji^G$p\<?k0g4C]U.!];MI^.ecsqu43u^orW._3>.[qq2Ws[rJ\5&.L
%2o#qsM[eO[XP*^mY=K[)ql.LG"3rW#M)_EgBO6p7&l0Ds*NVqDTG'i*0RH,9&LbQuON%9[73ht*:=^gsOnA^7KIX,U9X<9E>6$6`
%[i-j6`J'I(XKjOL<5QJRgsmf]/-/K]jJMZ9`KmOrI=\>PXl(jr>f+C'!jedqW"!1k0s_<R/c"Y&>`)Q9Wd,Z_W:`sU--uaeHdbN1
%;<TL'%[f.J-U\O"9]864,,&%`>0`GHKNi$:KI\ks.H\+1+GK"sA<3*5"@j=b"S%jhKG^Zd^_4NKAKt-fOGR(eP;q]@Y`_>mbW([M
%8g_D$XebYa(lj2>fcq-FKJ@FK1[,[j&tDM4-'R>J5^W*;:Jh#TSA]^"LGV;XKJQ%4HN;K&V]fNZ=ZeCcL&@.NFjsY7@H))7f3fHO
%lVDf@Xr`HI"^ubP](<jH1W$`AUbt"ZI7ZHe"QPIW;:gYX%U3]CQKa!??.FCk66Cc`l8ioY-Xe;/bgE5M%W6,fi,I2A2T!!kU0FE?
%_BiiI7MqO(#`Cj/C'),iRbe?*!J*4TYWh<HnQlK+,N<r]N4;YMbZ_at0U)tH2-Q@W:CG8I>u3?a]fr:P!\WXBdhrbn"/uWZ=Nh?7
%-Gsk!WVRHgh4CRt#Yk@+E>ke@YYH/u!N^rG.d@?'Vk]_G$:,nS=GG+#e2>YT68M+5f1fhh7;b-$]GTNN)fH'%2bT<2]'^*=c2I1X
%3)6sg8M!"c;$4"Z]hK+]BEs^N_?eEkIlib-->VA=s/Bn&=JANH5\)&E&k-F.K_uIF%<U*sC2cZPe)ICIQ%@8Sj1UcrWR>&IWJa(a
%gV8@R`&Z"RXS)5b#BaBnS,u#:L)Dq[]ZM533"`q,J/07u'QDq8R]-C9-j1n50(WIdkqg8:Vb+Qi?42=O9o5jo*ooKc!H\l+P!^.7
%>)l/nL"MP#?_f+T,b7G[L4dEF!o9e#<"7jLOe3i*"2PM>)osZBN2;\NKorfQ1co,l_8X-nOcOd]qe:bJ/+<VqC19_.5RP:X1l?R;
%hHLG1'$`IZnu_!@9R`'+Je&Wa<&2q1<buA\P4Ij>:V31;g\=mnQ9K2L8PV)BU';CW1T*W4@finq4([/&'il>u4YQtW>33Ai4NKW0
%a1FV\n%jW5f-)JX&?Z`\p9@5nPtc!B^a!ni]r$&FVDP$JRGS,D641kc3a9,r4Yo]nd!)f?#Sr1llQANK\?*`aMj\250G=ZB8><V(
%?C>s#JMI5%bb)c#o*Fo06)\)c$1ihN%]tnK_fp\%m\6<'3&SBG/'@r-RSnCn=kJ@;Z`]Z.0NK/D0cDdMETJLi0j0nP@N8at"/8Z`
%!Z5mpiF@rLDV9LR9945TN]G].jT[&=,I-Tg9%j9d/D`SL;sb)3QjY>M]e37?)8]g@%n.IDN@f:AL=.KB+>kKdSfe?L+#5(%<@saQ
%k#JmHgf8<KUBA;IAKr(=;!c%1QY3:MOaLR8WKWcl<'ZO>%MH\!:b*e_Ini6H^`=&g?^bm:":_G2JhH*L\qUu:-b1no!L[RD+b=lt
%KsfRn9LhBD;#ol//uHk/8VJ'BYQDe$f:7A2ODs/5N=t(m8>m&=jlfRn4^cT?0*r]4YJM;'JI("%2R+'S+Y,R%]uMb0lq,-SVW0Ls
%?nE^p2@,g3&g7QjQ(/W!%oEAcBkCM9a!HjN1,uT[cVUB^1WUW9=)LgTRNrAVqW#p+f/\]"H/((#="EMSUb6?(KdE[LAs+H"^`eOQ
%Z6NosLP_-FYImj"D/(@6bhP*9TjVsUq1=GJTiC3k^Bcb/Us(cNCQW#>&j2tdDZp3&pVsWoPd\s>0#61-O@q1*99:CG=\MQELi3R.
%&6Ih9l)RM%eqoR.j-a/&&/]/sNOV+XKZ$,m]rRk@&[#e;\cVYeJZKjAYS<S)<W6Z&GgN"IWt0&ncmmuENliB8ojWT!qWZEr'buLV
%pg3a-pd[T2Nq%hKO=fWQ=F=:O#mh:gFpQF0JL";s<[HBd#m2-JP,M$BM#)?F_K-u9D^EF<##kTHcnD6efcZBL*DrDI[1[lf.R+f2
%Z9=<8i;Gp+)Yu'_ZmceP>Z.;n*Pe0'anG#<P?Gd*;#MXeAh#B1#3\ur5S?RJI@rP@,_`0/8kT%r-ab.YHSusR$?D.!_;e#25%:?+
%\bRK-Lb?(L77-Y;5]iJjdO3,(+WH(GImuWT,4?3Y,0uuf/5lJDq!q8?bnL7"6?nNP9hb4Fku;%=L0j7(W#E]H1]:2qhCXdsVC=Bc
%BS2B-op/[Te>E6/B-nJ6KL60%N!^1Ml+jZHHBYmMMlC0=5`U+"D$]b8JsfjF0jn#k;S$:]IGomp=ueteLM*4Jrcj.`k+Ki<s![??
%]Dr'fGRSsMD*3h49e01f7EJA7R')m5q4'1`ifag;f+*hG7Zk_7U$E$T+&c+#K@;nB,FqB]Jr_A^[*)rr:nJop;aOuB7M]6,ijQjk
%A#o_eAXU]8-#/!r4Ri+Jf;l"hUTilQiX/bRA(\mpl;NL\\sfc6T)b)KH94+UJncTM$O/EG<k*Zo;^4^DNa676i,8Cu3l^)WO^uO\
%35EX*Ao?b(,3\\mq7)0i(3#`cTL2d(SO3Ohoe>lpmKQ'FX.otbF8CWY245g%'#LA&3XE&)Kf;nM5Y94)?k1R,=iTCWKOFt$S7sgR
%L3Z,c-r)hF./$7e)T6VBY!Q1LA#;sfob[fH8Ho0t*6Ei_U?)Ak!\PG3'2#B9@$3,ufV4HY#8AIP-f.pjYm/-JJQITGH5N#7E[tfM
%`i.kg#$4Bsq3\7IJ4,ks3dkEu$)C`2En\<oNTZ]("_\!_N<>@j4%[fh2,u1]K@iin-pn.T!(e7Ynn3LUa&88gnVrdbMZelf/d]T#
%Iju)L-42;+L^N%">SWDN"uqMYTE%r(f8gpp+IOQm`B+9\U`*_2dU6b3[K\QdIuRonh+6NZd<J$ZE#"PoN"&6c*@=)L!Es?52:..n
%.Jk3*Pm=E*X9>UiD@9qW>Q;)&9FN!ERR)uHHU7"$(4-7=ENJV#.J8HkF-!"A:n0*Ij='[)"LP:(<a8/u)!/GoH6;?%S7p\J`Os5W
%;+ti;J&9NA=hN2Qrn4QF*QB;GpOX6GiWCBb`m`p2a'jd=10u*mXb].3.LRpn8@lT@CQq_Dm8OWp@pVaC0*6uqJl\%`Y.=aRF,%=`
%\eES\`5LTX_Ff2U7T4UAScV=3ANYU@?ZXC6O.:8eqlt#m7&\fb[04EK_(dAc5I-hn*Z<pWJM-2TZXIdo\0L\IDu^_U^>g4caGGF'
%=a#TW"(u0&b#PVc1ID7g&6HVY#-[dnrWi+Fd@D=aSK=2[aX"e[codqP=H:Q,MaA!j`Gpf.B4g*(98X%gW#'=/k9[cd:Xm\b3SA;[
%a99sFO@p!BKMe+[Gj59nLs(jK<tNoF5QrkIcVbF`!cQ,X"gQb%edf#RIYOe2+9aPV=/9;1?p-cg?&s2M-,lPPiPN3k"=B?)1.n.V
%E&B>aHh3Au-Y*r<gl%:rYUG1#1L?^jU/RX"7`G%e61b]X*Ee%pW[Ju%IW*#%Hgd5J]-Iun!^.rh3;kP0Q"<Z-M0j6?[BVE40O>_K
%WH]pZ6rM+s6-F*c#u0'!\i=b%gp2SaDe+#o2N>g&:,<6@"ersbDQ/RUCOZXTWte1$e0<I?@g2o='Z7`j5XjY1VdW7C-JZ]_+j@5X
%UiZ`VnMFJ$Lgj$aQ-oq5^-G4%(8Va0AVTq&+iKE='W"-D".\))+EFo0DMl@^7OM>1+mCGi%7u`D6(20AaR0bLQ]0=RYa3]QRLoEH
%n4JlUndt[5=K6W&.HR`A3XV?\!<ZhSN+Fj])5r-dPlVFRiRiorJ/+(5']BUKrBk!XU%"=!5$Mk-F96>`Jm9Wk2CIfEM)E(O7?HhG
%HO99a:?AC.=U`6<%?1u:R3ZVU+r5U]6/Knn;LXHP\E!et<<3#\#oeJ:0LipL[ZYo3QGgr;"L4%`^sd"L;2utGSJ<e'RQ#rGb>mm>
%PYV>b$>W%2KTSY_!h,QUN_6NYYhWEJ+ELkSaV>G?&J=chPKtaN(7?^r`pSZPaQd?[dEMG2n7@3OQILmED:C9`dP.A*alZ2dAOR+V
%[fC:Xa<P([9uU"D2;?gtWX/3O3aKU\Z'((b,q@Rd>iJI6(eT?f!72bWoWXF2gs9,S_]Y"&_L;VlK-s4eR08(Gi'jD+i-NhlqaU.l
%aip@O$ii%4X@9LRFC:AL%:SctH7g`'.m5!\0'_6_E"EUcgS/9n&f1Ja.7Eq@_YLSSRNdV`@p([U"TCaG#G>Oh^pPs;h\,<f#\kMb
%BpcZ$&/Ke`Ji:&@TnT*_6WX6f9n`ZU_NhnM$Zr0I^U1quKCPE:Ue0/B"K>kr,E.M]/.u^WLVSJ<'i*s#G\In:((oXVaGWG$\+FVa
%`f(<;@cZJcAEs=%\#JR('U+3u-c+'j4+Nnq]Niso:]dg>,Qhd0<&l+H%U9Q2F)R=F(a2=%%I8+]J`MBL3W>O^!m!f]&JS317^*Zl
%5!1F3jHYXRCU"TWGm7bt3ft2@eB<4gdbK/o];UEl'H?!=6Mu?\#RR\rVLo6kGm5d^G&%7d&Q718!7SJ/&:AcS.b8OdQ,M0i:/4:Z
%*/k,J7r<81UZ4mZdU@cH*_@M?f-6jm/dX)6ohm\HLQ0t(NiloC@M/g`81cIYAg8O-/HZcI1"B^mU$kPGTQK$gE<B<Z@\*Qm&&g6D
%J?(Sci>=U^b(M8j.d.X#6\7+IJPB1,Qu(Ai$mV_0]L*;?]IaUF*ctG%p$(uK.UPo5+[A4E(Aq?8h8;P!$M)ONbbcjsV^QTe#t%`-
%RtB<=V*6hEH2<,em\s*!"WiX'#$_W\6\eP@!#B@u+jnr$'sMiV4Eql4C/:cb\-iTM9]%8J(r="Od%$g8[c[2oSj)^Kh$=H)5hg-`
%QmbO']k'<VD$@aAd%:LoFDDS[$!%(n0/:k!BLFjF/[[trFt=&b`XD(+ls=(j&/YagEVp6T/Wme98QRdYd@s5;FpXVST/mDoU1:s&
%#DiQ,"=*>1Mprb6(F6<$_ZCMPCj8'NS?"Ba!d7?o@hZ)co*%00:tQB+)jg-(;fmY`'p7k$P-)Z90+C1BeoLiLZrUtl9DUlk%!Ku]
%[=W,8Cb=;EoXPN`[OYL@f\apA_EK7B#e+unH=PNooKR$+3>($(cb]l&^]I8I,AS!NSFuEdlk4]0KH;%+k9\8^C1K%:9:]`!b<o`q
%<Dc7>Ysp8Neg<Z1U81eNo*>H_,X_bp^c(jM20,k:0Q-Nu&i0`6+g;CT;2/0cN^D+I)-eo7^qj0/MABD%;$fCCpdDeZ.:?b=fkgm?
%61@Udi;+/0<Qoe3&^`Wg(T%=ICG?5H-jDQ%*X$.VCK`#GJ;C3/8JU3!ig)8jAElrf@b/Wue&:3tE;E3$)bD3GUQmu\#;>1%%2OM)
%Ee=Q10HB.N[*3UY"F.>pmUS7Rm6Q7T>(ns#fbg:8,nHGR_R#psYp1)?,_Tg^jC:eQ>Dau?$=uT0_5dUj^`c!X(LecCCQ1+q(0pA2
%SlJ&P]tbfN5-/^5Xa%tL@Y[=3M5X!ZCAWZ+6Fp=1MpO7P9N*%P[L"pWepRS.\RXL,/e;l.H3E3IJA1o\/7TP%!h/'t"XaB!>C]H-
%$+eYXS<cZdWlkebej3@AiIP\"`um1+BFg3VK4Co=Gkt@XL'FS1eIp%8`6H)B%+M.>nt:6R('h4C7k<hp!r;3H(C_lsa2mINn*'_2
%koLT%@2<#Laa'f$?/npFs-Y6gYW.dbGiaX'cnZfj],)=6#o3d-+6qY>(.2LQf7kpu/[,kH)NVbB6HIqSB7V<h,$H5Xc0ZJ/-_fA9
%.^h8e.AnRb[MFW8+u,47*$uBQ."Yu]=%T6K[:]3$OZ5?b7;/6#iptU;=1Dj-*34=jE#AePIq1B/!1Cq";C-=Edk'KR+;L:f.uiLk
%LU`1>b,$6M]QQj@<Bi-^J]<uc3(^D2^2u2d+rFSP=b8,46!G-"`2*#:U(\hChoUeu<.UiRUt4Rs6lr.F$;haSE7K>TBH][B5tVOp
%'3krcQl>YDr)2km-I*LJh1SAH[0e?P6l/C->;FESaIqs%/2\WO0\hMN83b24A1sERC9VLe@[(WABOjVC7?C%?T7l=/O@Tq?/.Fol
%<9jO_,gm"`?!JoDhTdR5*j4()7mLmc^W/\X8U/7`b)J`g4D6cX>H/ACEnMAU,bq+E@6=T7GFFmh`(ZnUF[6?de80`ELl<9h(A^Eq
%cgD[X,dd1sjj9.6QduLg+s3SRdjh+=0[@Kp-br6;4t&Cmn4+B&4Y+IFkbP/1&R`d-T14]%/"eUmI$@,fb3Zjp#d"A05)?ko$3N3C
%8]j\ED6^_UAdf+j>X:Y"JXA$u,uoM)jf0E\nVE5F(PYuhCKTFSk#"k^)08mnYf<'lB*@j$'Eg0.YUYi8%o0scQOuaX(eZIOo'NNQ
%W3I8!($3)!pC]FC";>c&o`r]gj2\Fs05@p-e'br$]gR;VpD\3truampY[6!"XP$q>"usR91WP?ELT*aQ8TBm2OD7FC@h^aRmAe0d
%3-99>,LqZ#SWLW)bC'2If+E/nn>Ed-"umbCFUhH6W<cRdjCC_TV+)7$h_%HR%M)r<UeDP!K8-cU?@9bS&;0[UIMtihJ.n/5JK**-
%61YNt?8?&3iR_0jP<^-=ToEU51M7LmUj.Zi@c6p4TA,]\10,8pGn^G<>9p>8G'AIUK1'akULpLj:U.'sUuO9!-7PIEUj02b5aEa?
%Gi6=u_(=W0KO`94XAEe\_V>8AXJsc/=ghLb[:?q.PSY`I0oLpc;C*c\YqPiI7uh^FWg"ppKF5&q<^CG/Tkc*(&r'577_i4RV&p$O
%aQ\gR)MWa:Y^OV!"MK:MX-4P>&sJhbrC@Yc1Y\_^Vrq5rj[^aHMZm#dd6FkO:m-?R3tlNP!QC-D;)'$"k,j/:G9&ut9j,Y:DVTil
%!Q&)JU64Ui(JuR4ou(6]:2nmB)F2[1MF!6'1?"2mBMD/uh*?:(8o",.`Ke:f;8gO3@h(`LF5-te(1r@gD2/+9R!:pH2cBB=a@=&-
%68?CR:C6>tON['?/\Z1eR7=g,'Vl-q#"2O#lL:qF3OFr(-U6\4_)B<a6m/Jt5ZI.Tkp_7C.QOUuK)I!)0.;#W0PlC:piP./4PT^P
%D3>,1kQ;rW@XsRV\!>FKVo6LPN/BMDlP0Fre0*emU.Qen;?O648LIfK+rhhR;6D;uA]0^$6\TVo35G&XLSR&U')AiL#VsrGkJ3mW
%:/De?&Cs7S32#f_X:%ChMkt"taYnEl&qA%u$8X$W%`CpVRJI>n)CsBOa=9Zkg6AON9Th(<#qM?fH)0I%kQ-DZN$o04q'ihi3["qW
%;]`2:i4!*!$GJ"GeOCe"\?ll3NtOQG]g^_Dnl)UEK[MT*C3Uo=,7Y(iWBdem&PPhfPb]qr%k@W$ifla'bWM7EZO)o-"ce+_Pk1rn
%,)*3d3_`jWqBHop*#6gj.o*JQN1J@28;?_tY6+)VD2sD`lTOkS$BhZJ(mM6`+>&`7@Fg!-J$=lp>j@To$KiD2DIA,U7WQZYb(P:J
%P4`&I(8tsu^MCdFJtO2a2`Z@i/8.V2S<,Z977FAdhE)$7;64ZT1:pS%4ER!8Z??.D>VE0Y,+Xg[]P3rk,TT5j"N,?@a%R41LnP$K
%r0i4E9&se-KVj_orb>NCas[Mp/aCk'nj%@),kT`P1m"Ne:dd0pQCNTg+9fOtBlDoAYrY^,4\5KHfJ%l8d$;El#EuBi>@b&a6Gj-L
%HlUgZZ&47"&O:936q59^,ts_9Il\3M3l\cX8cljW(PU(Tn?E7h1\B-Ej"`_KJm/VT==BU4`8O355Q,5H'oWdu7_lPP\mein;]ctE
%oW*>ZoB$d?<!a5D?c!sP/[nh)=eekl4>##Ii`A0H>4*hEpDQU2&-iIM*/;0)TKE6ZP%k*n*5gtcPS#@HO:2,-lC(6$2@%;bQf\S_
%E\"V@BRj1'jAs8C/"*^hBOI*BQ(Ua(Ji)s?G+D*jGa93:c&,.*Z#^P+G%Fh_I8D^#p]_X3:;XU5'eTq@r*&!\rY1PaWe1'W80$:u
%b'0q1o_sVf?OQHF,<1L2+_qdP[9(>aEDYW8<a`lRdbK\;_@.H9AEN:*1KGT4m]I[!+c6E[#"g4fqo)@iV.)mrMd=H4ltEL9ZPRTg
%0-4't[>ip?6L#;umn&DUUQEYa6;N[?&m;O03Uk*T@?Y1@eOkdXHl'P^#K](1N@<GLaKGZT&BUe`](%!"BNdsO4^u*QK:el1S;>:\
%',2Y.@K=)7-Ihu<B;86(E@f'`_Ju&^2p'#b?p><!=t>=hNOR<W":bgcU][BBgd$7@YmlC;;%R8#><_*/>h,J;NZk3`!an\951n5p
%)FS^m&472P3Z7ilR4P0gN=7mOXcNNSC*H>Ge)+(pk(96s@jJU?d(?Y;)GOfCV-NP8o-5nDO\Xm$:#t,18i>W,2HE^OqD9$jl3PJL
%9.X`2ouThM&6gMQ`kpVj%&eWp9InC#M!<;prbj9aNoL;P'gc,nCo+R;Z@^hO(=?p[V)j/.8Qsl%=+Yu[ilgIWGtt"H(#]OPV3-'7
%Yl[j%'o4IZWQBd%LOmm7d9bb5Th:"M\Uf.8X[%`C0*$,8NHj"\kfuF'@spfi`5NueN=Af_OM/l>1+5oY4>H(m(s\9u^4EYl,2-8`
%)PMAb_Bn;#@f?mu+P,O-e0VY4,AL;IlNfNXpTh*"2:>T.')l?3LI2cX\u/c0'l-P`BcpgudBKo_&mruf7n,@D3EMS)?I8aN$O`7X
%.>![4b`"\@0f.==,ht*Gl%g<g21*bB%QeeWXr@eClXEB8[Lb?3E*-mRKn`KqJWAEK?6Gj4g]L`#OQgC7*J%GSCiH!-\C8).@<F+r
%'o93I$Zsi*aY?bX:I<+CA3M!$Ot_NgY'S^>a)m:UL.8c8nGW0!PgB_E(sl&gKjU:jQVYg"Li,]3%;[>T#g5o+q]SIcOY)ei<4I;)
%+jgN2Zl[%<@Dk^XW)0e)<0Y46.iF'I.Hb2#C?,s'\WEo_Y*^\H2"L\f?(?NBco<J,-BTYVB1_D)e@f"9Q4_,Sa_Ic5VaQ#I!'!#.
%h]qMLXDaD0f)$n[\/G[rP/RkZ$m[q=fG^h3nnUOFgZSmH*OtRb3/p[hm')mFbHEdDl;^!_Es:AIKeao*6]$B6NF8,/90kqaVra@<
%0L(@".)^.#.,U]1W3"Q\e-<HhU!P!hQGKNgK-24G*HOshqjYlr\Or<."ji'UWu#N1W<LekP@=`^J]@fX)3O?8-_Y_F.r1tNKQekk
%0ZY7RV$=LA&4k_F4`/DAV(7\E80f_F)CDA6Q,F&;)0?kIi09a`,tijMcePU&c5@YpW)t=TmLu60Y-bW*_E*B''lO.kBX(_iTJ/*,
%^7#nHO>LM*+^[jL2,G(=OYKXI8-Sn('>IUXm061tkXln^GiPPD;2)hl7jf?N2P%)@OV!S,"\JEFX7^W1AqAWG'ljp\Do(p[]W>mN
%)Sm*t`&)T%Oj6_7Dt'VJSW*oGA5?/1SlW(:P[Hn/)O*r2S<8Jma2Tu;YJI(!MLIjpe3_Z8!g1_jNA7kJ?ePcaEfU2h+I/0`2FUUC
%.QRZj,+p.fOa&WcWUa!"9lK+^/'odKk>^#V=q3rS`en"1NqE]]"S7]`Y992f`8CbE##!D/8nXTqQ*_8-(?nVY]!*,#O%Vd--hA-I
%h-u)rQSjT4dTaOR.A-i,4#XBl`L8,m\Rqpb9dPIC0;Xf$HQETKpnX'JNC:F..=LKEQc^;fF6F^Abm(h3k_4LTp&[RRQ.Z`j8*>NK
%!V%cb&^VP=EuHXfD']R^kSO(gVlXNa#)g??6/i/^(=a<N39DKC3%+qPLQ11!R^U9[!8p2B*bbpoTeW&sD3SfrPohM7A]ZdHU2Xjh
%P%kkcRNO:]OQX[tNIjludtG'8.4#,82'Se),Lc^("DgM;l:n<uT>3s+l\O'%MWKY0]1nFk,Z(QFP#MdrJ._q#i#,88E]$dS_#FP!
%#b!N'L!G?XPU0>b!HOfOFo]%fCcb6[!pt[6NP?0a&Oq!c4!R:n9Wp_K)Ttg:TE/ehVB7iuI!1[`/P#n=:mT5BKQhU(aGu"9UY=^<
%5+mqC!($pPB[\H.##gtSckKls_+KZo\f8(CA.GSTI(iK"Ml]\t,Wp8R2K,Fq-%J,F*MZ`G/9@[a*[Ln6&jYZ8P@3Am_i1G5LnQ#J
%OM"BK0^aU34kbeNcJ1!oi!LnH/soK3ODpq>',@Q3#T;c=\VWAh.jC92YFU>7Vk%L*+jf]eXcpcA<-![8B)tMU(C,>+if+ZgX-7"-
%,$!U]fL';E^SFci72..\_WAa@/b5hTqg.TA\BQ&bcD>e3)j.2!_Q:F#UFQ3H.s[lq:P<)/1R*QtN8&=e"?Y7K7"f@?H\N^l,EgdX
%34d%!K#(+_e49V[BedM9pcUus7Npc$X46Q*\HocB#k$c%J*9LBRFC4n>klihTrGlo?+p88^#.PVe\n9gDAB[ICb'd(0Efnk";DR.
%Jndk^eehL\KR1W*;I:(mXpkbO>G7I0<GY@N+[lYS_-Sno_>j\^J1r>U#o(`qN&:Tg4Ci=MX+4iG/moC)^BA8?Uf8$jrT+6CQu&[0
%nVkBQ'$4<b[=fYG@jXc11umopVlX67)6Qj-0buMfg1"Fts&.`?3&UJ\Gmakl)C)+[YsBXjf19#@8+,LKOU:#dS1su:ji@h:'%sLG
%B[I*?;NJRdMd@giK&B7ZCI"K?"9ZS]3orp?9t`eRaf$F<ABD]%PHlBXTcQilc=8$&l!Gm]To;8B0>Uoi8iUdhJ1os3Co8UoQ]e"?
%=fk&86)hjEp'nplWFV+LFNl1e5bsU`91!L;CY`eUe=n=^[Bj2p2K75O+YsbO47kMXI,Wp2Ai%ni!@UDl?.-rnjXo.Ynq8=G-:o2o
%J4Inj18bfB/XC<R!h5MhPSW18.KE2!o7b'.bj=,X_)qokBF?L\Msq*;")'6.8m$Y>\\=@$7(?dS/gM."E-3<!aHh>s$7-R2&$8eT
%1L;]?KArkl2"`GH,n?ns>%j@,[pF't=NFJ:R4QK6A^h`$CD*ulakoC;dg#WI"%4Ur-K*A;>ccJ,aKd+h#I5&=<p0kg(\!_qS,/R:
%hT%)d#L?KB151m0bMfm@^H/LBm$)UB1s5KnD5$<Q%<K'g`r_P0=jK'7&/]<(8.Um@VLc$B<[u%E@Bh_)Y'e``6ll"IBJGOgdE9L'
%89lRb8h(u`&@f&U@CDMS*[3ifXhhoWY0g09P3me26hV<eqE9erAu/(8"O<"HTVWO#gbtIbb:"2Ac(J^#*7\LTiWM\J0DV#FV[f2n
%T[S'Io*V:poLEdo-e-FFs!P#e<XXP"AL>!-.NUI)8OuS\LfV3;8Vn;<TEu@?=Br\Nf.h%$njA4A-GQn\!?(tn5%J2>KgLs(D2:1`
%['#8\"Ror8AS/hiLfukG=5aDq?5VNY_Rsi-\lo8bJjo)Y8`*p5f$#4\UJ.@5Udel(No\QD?]0'Y`1O2K4"PmnguhFaeD0-gd==W,
%Mj4?#aT.8Wap$sAOr(&DD:CQX>B)m,%W3P-L7)#rR)i\J;N";NAJ*lum]Ji!0*(=Jnl[kfKliJ,UC?Y-qo7=mqG`="dacH+?B>aY
%VM=Hc?G)XjpgL.mC2YU+&cr64^,(rH&4?d=T?NOR]h50)rn,,g7I^efIR=`LI!nne0An-Ib-3)/1?V#1cC3c\7^s!d850$t?HU'r
%&K_YhA?!s`>/`&Z8c_'%(/:^&@C6Xo"mlKQe5.VW]SZL5>,g!tmsWYV;CF^$e^MiZ@?RE@YoC'M4K<)<G=;a(9\%p@R\\)`A&=oY
%Tm!(@;7O"`d5ZR#SjZa_$X+,"&g2=els:):5T;HTBAhAg^`oR*fO?BIa"J^$f[4F,O)N6mTKmnUWDi^C7Z;t3*g1(`Bb_?,E&\E0
%K+$[,b\\UgE\G7^MPP&E!\'t6.P*b!IF+.X>]Lc/*E=S1@(=U"JJeY9n^HJZ(C!$C%a`U>-/7.[9!&[3ED1UA%5lSS)mU&r&2KEt
%]8]7=H[HGK`$BQOqM]_o)_!K7/3AhS9T35^aemb44V.^3CS`Ar*aG#$f0nQ>:95Z7G'F<@BITY9>!c8SP[u2E"j,m@3(bjY$A-8F
%%5@:;anjF`k60gLm,_4A>T*YY[r`]$8;.uhWfqtK9.-)N9<pX"*3u@N+2Qs3=9h6.<Tp*M0,#KYBE>^'kg2"aUDp>P3;&\)4G&[]
%&'#^(dnDbIU3b(g-Q*tJ=;5Qk\1f6%26)i?&g7e)JQ]H/;PrY\VX'4?%0TgK(iZ;G6GUU"Esn2/e[e?)e+CI:-JDTgls]l.:)i)S
%TcsJ0OQY2p`sn/M-RlDh&Bi;D7TMCM,Pk'7BUuR-?pf`ZUh+ToJ/:R2TGRp"(%Xh]cO#AAe&hrl<mteX>Bgis'cekE-8fr-j?ri6
%;Q3j!jq8$38jZbOiX!:FYjfr+&nt)e'+So/<X-@F,Zg<a'U/kd3?r(=]R:1`=M<%5?%R2-hTL'Dn-/quoZK>9TFn):L#d"\6"g[-
%-R3V;n3."Q%)H$m9d9X4@U,fZ&N0,0FM86PLL*<c/bojGP-Moe/G\2!"WE,bOd:Ze1@^P(OG1l.6q3<W5Do.Jr^UM])HE!L)-F%9
%,KVlD'(gm"-!?[Nc(1"q2Mrj-o7=FX/-\F]\l"hWI]i,27af[<E8mXJJ!=pj0-Ngk(bl#25gO_6m>?3o%'$P8,/KcXd29`"b-4B2
%J_U)H\G.q\C$qS=e6/o4J1hoVq5S-*l;EKjL*c_d(G"!+VNOj\f;Rb+Vr`jL;I`foY\SOWj\A)C/2LoP=>>CEel7^.`=O7\1[SAs
%hk`Xi80d"aaqF0bpgAjPlP3dTq&.]2N(Y>XADkcA7eO9ppHP`<\XW$Dg3l:R9gs<<>;70#K[_(gOurrtQ"4*DmGQk0VWZ#FHD6BL
%'R>LQ1t<V7VnH*=Y"FdgO?u=#]-0B[Eor/u>PR`M;%md#e)S88[7[dRZfC#o9hjhCmh/Jkg^6&JUc6s";FDsqE)in-/Fcj/L`)8=
%U#bSlb]liXM:\hJiJB58oi-22Fc<tq.2AGNl"3t`nEQnc,!6oB>/Na5#_\Yg:,V%I6eA.I5\]^!VF<-9Qj&QEFPHI6GVGk>B6t+N
%c:CG\b97*3/mf+</;4-Yhdblh))L2>/MF+,G_Gn3'rCEWnQ#qRmh,L=e.Q[^L&EVZ,<,>WGGo7(F4u`Q:5ZkTV7n/n2d"T;o,XA3
%hQ/Egd:&o2:Q4KL/Hj()iOpIXU0h?Bb9P,:9BEiCY`%a&+7\2*`.?";=a9BDb[Elf?[2#JlA*(A<d=(r'CamOHO&q/_Wqg"?*]X-
%;G$>?Q$UHmH&$\VOq/!>mh41aiJEihNp'0Hh'h/$DFpdn)q3X%8q@Vqb'&Oj:^]b$6?Yk.0l=FU'OqjsDHMVY%Q'(4"';KaChqH.
%NgT5q'G;V6=GZC(W=7rWU-!u],[Belkft<&D:=%"/ml[7X(0(iLB\tq,7;m?VZZ/bQ0E0/))C$)fX<rl*C#QHh1`\jQm=-:A#_Tm
%OAA\=oFI,^!3<GFh=ZpCfq!p*!\\A6C^[(FQ0lis-^],D+kn$56:"l?mL1X<B73R"#DltVN9K^#E?V<UQ0up/jM#aeFE\9(`DE8?
%1B9RW1%p!=L0XJKSf@7V)>HE.^9;p.5ZqPJ8*.>bH4nYW`cQD)I.F(R.s,ucM%XjQ_KTY6UI?6<+l=;JVM'n(l0]tX"=i.HI`PLT
%1#!]KRL#Eel0\tqTc!eLdG5\+q!r=)FE`J8"`Vm*\iYNp%2(qHFE`K;O='UAGG[WE<4Y.^P4IN'Cj.;F-B<I^]-F<lfa3FMGD==o
%:bd[kNp(@+Yq'X7X:YKb`gH-'@9-p5<jFeSQ=4fO.bu+3Y(X8+dG4ip9dW3kmKc,1L=ju2&NUEp[UZm16fNC,9,G0$j+t*U<p8r[
%o1PY=l0aMZ,*kiF#Dj8k^l\!0Op!7gT'hUnBBrXOmSI3MI#>TS6%.nO=111W+d0l]`-+X=$;sSHgE!O6)([4QG9X;(L$h^SFJp_G
%?/J\V]9AT$OtK^l<bt';06DDd%gok<oQ238m73t0!AisS(jsPNa"^%:/)-V'Y_,>=b'&Q.Bt9s.Cj4NAJnqN*GGp"RqJ^#XZc'n9
%.5YMG6RK+K[L:h1YW*o$<7pUih,)L[g$ShJA\)E![Q@kO1;16&h$KHZ\&rka0M,^!e+t[^\;?!HYh^0tm"Dl8GA!FE?XBG<K>_k+
%f@/OnQGV#**R`aENCsNe$Jc^gbQsdtU:ULQKA_+n\iZ&4_*W@ts)^YQ#9X<2.kGdd5\lR>=J<?ZXqe>#&`"HAZS651\i]+=;TXm^
%mVmK7EN[aG).JE1>u,ZW#Rq^#$Jh8H]0jDnL]iKsKS<PR\iWG/e#MonnMu>U$JulL.ABb$q<i4I#uG<o]//:ZYH.6M)6[:f@q$TK
%6DbTG^,sUc$bZo)SKXYK@oiBmT`3(3<r)0&<6K;(n_G)DmZYbonD1qIEQj:kI!5cA\C7)DI!5j.['"&R"-.oA;heh,\</SBWc6eQ
%,*4W=JC&1N-T*SfVE:KTC3u[:0Rsu\,OjL)VMhQ^Tt030F0TAgK0eEicZ'agiMdbog`^5=,qYD@%Q1F8IjtSF0G[dl4lWq<aFn]p
%L#1*3i*1^jE^XgN0b`t*]cAAQI,fq;c89*2NTfaPG.^`gH96`jJrm/D]c@5BAj2ru_h9]J>1i4MGE<ZKOPA0[;.c>ih%"[f8F`_@
%G+jTG$b>*I2?#M[a?(3biN>N]DTlr&X-f-)Q,sMJVQ_QEP#bN:7q?Vl6bsAV5tL**@,%8s:4C<"n0((<?I<rX3eg'HT)i"nPqXEn
%LVW\_"BG&G=&@iOO'(`2r=A/,(=5X),[lCQAio#=)28chg!5bE7&t!7r#j+DjX_Wg42NlbGjR$a:Vl\AG(fLA%N,r7_;=O'=;>:,
%e<(&K;^&T%m2?rXP(pnu"FhbSM=T@dTElf1?9?UbZ!q:Q@kk@TH0n:6d2qo5iKHiB<LN6AV\imZY3Y.Y=dV9[[UW`O%)-A_'80uZ
%`"O[r>hp9X*h>MdB4UCK+gs1CRCJ)GChFUACKGcJ%"h@bH7EA0/SuguN-OaZ+RSaBCPN:N&98Rn4%$R](KYkK@,ZB=pX^<-6Q?a%
%<d=!?P8.P&CIcPL-=3OV"/p+/#e*-9B1eJ>V6r*I=D5=<f$8q<P:/r.FqE-s;/,D?aZ[$pXW8YgX>$BVK5!V:P"KKpM&+_lXdpX7
%;4#9[%t#f:L-fZg(e$6(L"6b-Rtb(1ed`<;"D18A8*jF'opF=UJC1JNTVE>:;D/28B!m8pK^nu_C.DQd6EJ=E#J5Qk7UoU`6b)Ea
%m:kqr0F3VHT+V5B'!Li]4uLqK9"n>/m3!!#SAK#RL^Vtk'imE1P`._YeW*Z@nY6GlSKUJ)=Wt1?:F2j6OP1"e/ONQ+;EK\gEO_+a
%&cE-]Y*.L9dcerM-abaq8A(&<iPs4'^Ii62YCLE:$E5%^@<!"u;EGk.>p/=%P1gf%_m_.dG*%"`H:g8/8]9.8g)0srR]sYBB8Bq9
%IEuS^ml.4[HU^)=Zk4(a+ep'seBEWoNY2tu(IgJY3o@(og;0jc<b]_@B/4/S'DZ:^BEp7Zd$<&)3;)iD8im,9@V-R=..%EF'J]6E
%G.<",4KieZnJRudN]HJ8ne4Z&1F$CSLJu2Q8&%]p`Gd%o4'W7@F/Ddf)=Jj>Z;TBo6?G]'6>;5@9g3CuUitD?*[lMJ;EK\g,-fMK
%5p&Lm>ju:oJLV7Lbn7&u`#;r_>!#9.q7P).&X8[aQP$DA^7+iVL"?eT@hnp/f8eH-YNZSqK41/s]emlILUIJY2km^t!-Ffh5"]T\
%'hKO^6>L4#M.mK7m3(e*e+L(ki]?Etm<CTE-oiKZ_bqk(Kp(.%?D#?X,>pTCC<R3gUiuC#O_V7bg)4Mn7_;!%#F'X(0#U(kL[c+V
%`=])?Ba[XA@C=!K-/#H*g;/\;!oYl7*PP_An!)B5-jJ[i/&ZTt,[eLsZ(4GnLKTK$Lgkn8>:$_1^#>I=`l*&)9-Vnp+h!$<:C,)M
%YoWWe#a71k[UUlnPJIU2*F=m&FLskU7n4[>YR7WUq'^jGdBVblDl(9),.<-?AI4T&M!a-G+^%bj[UX/<)957cG,XKbjgu/[_&X6m
%o"5=7SRq>m7_F%V4*[C]T.[d"-or__74#AeO$jAI`=]?q`8\$Sb]\_[C7=%:9JJlaZu&oR[\G#4^$D*R$tJ6Kp<7]7i-_ca7a-&8
%"=%BH1>@r.Ja.R"Ce#mY1635`41YU[#:dr@KHG+i2mf;h^s-Q7IT`'*+<`d@A[[f.H+O$1b]]<6&JtLZ[Ni!YlG1E`G/Qs+=u.WT
%#_nA3>F=e;q4u%O1#%iM,BdqMCr^"/Y+$$0*QlF8CYGB5NX.s;lS8VM*$Gpbl&D(tLd4B+^qsnXS1g&7(1oWP)+jEeAinEpO@urW
%gTae7D!Zl1%c7kP`c0"9a*P5?p=+7fm"3PCU:):*$0S3_gPM_K4gc;[.Zts_*MIi`GZ:[0LdEGY>si?gL_D6,Ph?Q"kJHjoR-e!$
%,^6^@ZQ3XFFCemh'5EZZouqT(#((5]Ckm-+8A<,2Cr_n53T[Y9qRgX%&[*4Ud:iLn?9?#@diDeOmDq-'Bc&SZ&]L"PUP7B]cJhGf
%?)p/oP/Vbnb]^X5('6Tn1p<]UoA=k/41TmIHq(+&88#i9Y!QtqOohL\O/VH%g/1tJ"`oKmZ`K*cE]]u8lJ)`W*C*G'@oLM:KPIP.
%d+b]!"`Epf]Q4N&J\648*RWURCQ#kYoQE!gfZHg)#JK?T@S2q\7M6ml[hX'J;AdgT0C3j-+sNKBLu+/n(6VLloQDM:8Ym,u;8s[1
%,pR^thPE=,gG)tQ=+B$-8oM2qe,(6:7nR]d5NL/ds*s`$pVWUVT'Pho#S?q'jlOJ5\OY8^;bs!`r-8$9rg^g>I/(OEYPE*.rpBLG
%m@0HMXcL2$rjpIk/\:*)&"CON++DQf^AmlD&)Md1JQ[Bo)LjV2T==Up2uN(Ck!/fgQMnDaM_>kGq-VD+H2cXohgG48P86?e(+-o!
%qD[&-X@n%4Ok7KtWuSm'2JOcBm/er,O3-iVoglf9F`?uL%d#.\EBo)0C6o.o61BUc0JF=R&9"5^PrC>0s(olFkXS.ZMB%''[jrQR
%)"GMIr1qL$:BpipQdf*;9rWNh>F5i1i@QP:n.tSug%Dfg\btOW\gHu/)R"s2/&b1b.H]cXK)7HdW#"&V/Fn0GQ=K\/Pk[Hn>msqj
%[=r6t>(3Cbe;.J,s!mC;BS^\uX'ZfL.4XfJdKP]+5gCheY53U@2SKoDS5Eq:BX,pDfs52onVEHKW,hik+NV")*%aN:kL68=FT^W$
%,9c@=ObK[);<<Gh?2GHlQ%NioUN6;M:loh;k992fGd9d'6pg%m83$U9?@LAD,Un+Gq\YUa`u)'NHFXG#pN)6c;WmZED_)lX9U2f0
%9^($]BXRU*daYU'\W^\0^:Y+8=['iE[//XXm-..*<W'#srpLX>-a/i^(DK4=/DTOQhgRhXk-br?;8pPKg92\](\"@%37oA=:Peot
%s0JtaG'"_'k^<@-k?ED+jY&jri'11tglM<Q)Y$1B&pL]3UOhc9@n"ltGH-6q1-/JY/FrXZs%h92Yl%i#XVB/TgJ/CDf%O1#VR?Mc
%fT+]eOZ`UBIJ?+9AHp?>It$9q)6JJKFLB"(N;_WTC>LWWqUXWd;$?>(LT+?DXt#1sF;:oB*?$X<qL<fKQB,&O'EC&dYjEXgd'a`H
%@'/f?n(So/i8;S)hPrs"`A0<1r8Y9drn"oTS`ck6r8<e8B:.PJI/h0l0/&qNq<,"_I`"Bu](kK]YKefl5<d12G]i`?g[!r?RbQN*
%^H,MGk4Icgq=CY`>R0WTPJ:C.p]$'L\c2!hP5k;S?7>h/\5*MTqW6f9XZlDuH1o_1lRgFKVt.+j"m*QbmAN*F3qLZ(rV5Q)GN$";
%?2/8\?+Bh&^R(kMa-U]tT'&m3^>(X+K-%_a%f-"@g%Cg@I2b>_X'SQU3kq7L^OA2:9D[GH3qM%^Ie`:-ouiO@bjA[sHTn,fGj%rP
%^3JOW@WU%PgIL5CP;g\">V6!=mIK7Yb'mT@ITI22rV#NsgH0VeI.R&ZMS_"Wm]&ABp:aeEIJ).TouSl1.@OiCn1LX&m<N"bbM,*+
%^UggW[IKf0ki20fla,p+D/+%:SMtra]<h*#P;RZ4U9`J'"*7BODEkk$hq^2)K+G_B*d0;-hd4%13aMaXlK%W]ZdT4N^r;N_i*tTo
%gtBY)rA!_qh-EOZNqAt`Q`l`W-eF\d'Dg-A]&Wb[o^^Pub;X(ce$dF%I0Im:gHXV[c^-:#T?^NK]t4No=1S,V2db[T?02!3Q"uC,
%gh5f>gcjNS-EPdN]?.ar3m""5roN7pS,"ZqhrX"4gjGHXmrJ#*DLt1>+4XZbM1#N9\S7VeoD@=MKlo@6S`AfbbO]XZSijdcFUh]B
%US$/Q7r[rn\.ZHbIfB06QSZm8SmZ+>+5^)5IQW+lmA0TL2n*'r!Im7XqrZ/Vai3fDhX.f.4CPc`T5mCahr,_9V%6LbW966)US_mh
%^"6SW04):o?Jht+%X>1,`P*AR/t\6Zn`K5hMj)WO\#1V:;]IRQa*4rHc=,]W9C_ZFr:9.1IXSd*4uPGdJ","ZH#?Xh^T/;l?8#*h
%HFn%O*2;&.K$B9M^HFflH?sl,k5+.J9!?fqZEsNfdl[?fJ%iY0=Pg$0rD*pq_N?Lj9f$4:rcc5Pr9k-ap0giPp>&)EVG5'P+2ojL
%N3=n\0!:g@o5OZmiBH:+h5\fnHp(#qBC`mFpIFEf4WNp59OPW%g7d>JmM=p:2[qIW;#>O\B)-_-HY((Ap@C0IaJ]VuY79Wdh3:+5
%rLSd]r>bLHm.q]I4@/O"SFClT-D"J5?,(cp]Ugl5#B_qrT3ZqpEjkXq3$409GmV3CVtVg$A=!u+`U`;l,t@GJXe"\qm;^FlK7:e0
%jYLQFCj)OIkfpiRcmDK/SgX?H-Uf!:EMYER]t?Hl^03/hG='sMZ0*j0UBuY1=!u>?hG.4Vjh]d02'5Ilf(66>P:<3eK=[IFR$`M_
%a\GuLpT-S#bhg"FHN!F*r:6`l-gi$^6QVR4S!DTs.^-ll"urI-B3&>gbZ3j]jH;\.Sb;#rR*jmZmi>AA4OaR"i%3MPe$/9[UR>Rt
%*GBTqO&IUM6eV)FEj"TZIXK35;;8jp)sU60Sc]3GfTtDM>[UKG06UQAnL0FF8NUG^ZUTD6YcJ>s`158D]4e79FQ/briP;?E:G+8c
%kMIo<Q`&=1/aGXS<W>7P&1P8=s42\*j4!/^ZT#)6:JR7[Q5A.[S@h&,,H"\/s")b#BL[KaI89UY.<\L4E3GPJhOdOVge\6NemG!/
%jsGcA&)t/SAS)FkU4.uofe763Sc.,XPNH?3\,)=udY#L8R,J!((_ns*1QO^_AO8`6e`Eh\R8eQM=*$B1.^(M'S3rXTlU/#'&f^[t
%_9"OQpFFSWW[m7F(X&!K3TR(ckGMZl:.YU14M%jV2IV'+:I,DPVfpUMX!R4"\+f"Fq=CrYZX9S':B0O\H?F9-lcF&Y-7Brsf-aW5
%O!f3n='^,,0no2;g%kHN<7g`tFlq]S@`ji9#P?ai&mIh`DXd.u\i%<])g8Etr(D4np)]6dhs&DFjPoOVUj;db6[ccq!+pS@k"M#Q
%\=fBVVG*4'SN.DY`;sVG9U^]ah\_EC1@XojV4pWaoU9huG4/[be@?u+G1<3*4U7R:1;U=[OBe#?EKErL)>g%aEr)/D;5SGIc:+.B
%;>uC#k#(98R.h^>AWd\ZqpT9)7G6/U_N^HK'T;h7F&=:/`P-9`a-qp,qNu;#VKCrsG5ZhYBaukqB$sr@6#5h-/e8m`Dc2>A4;3L*
%\8aJAnXs6ob:e*>pk>@=m>'#EVt._gH\`1%r0lX83u"K_`s.S&d&9/j<NLC3R@3a%?1_<jp"G'BR.]17f4M^>&:3`i='7;JCU:R[
%cY@<R7654l=f^@QX3JZ<CoklbD:WH_7B6kB69jfZ^:eGP11:H;Db0Sp!eBl#])+C#kA<%a#j,t\Dkk^K$-aYfa@;ChIkrMsEU`=t
%/@,#&-Rl+3YL!3Y4TG9UjL64S;"M28C\d>Vq=;MX`HJE,;'sfYjiR2YPMdkocgGPJ*t]:2S(Bnm\\1'0KnX!59[F3&ZD1_h684Y)
%jf?S,UHaC)lie6KD+<!f,,+?mm4HP[[TSuZs0l.ls8+YQ3WK+To04cIVT*1k2itWo^?h>'oXK\as+$$qDXqir&WIl+'*#?,]T6e)
%q`Gnr^A74;4kfe%nuY9.&&G$s<.%rbH@>T9ho!3T]1l*":49QD7I[\VmNApQ"@(;[;g-C245;M'*0rg-M^aY^i-/iq:[#^)<2NM7
%gj[Se[XO85?k,V,*Q[J)g!JXRZgm,Am/#hEjn4k5ra='n#6J7['Sk`m"sWIp[r\D'>j42fJ*6Uq?$eShs6]l3E8T7;*</0Tq!Y!=
%_O0AugH.74Iii3qk4nBbs4qhqQe!B*^pa&\U*Vh?I.u,*[-*IO3T`EDI-6mcSaFi3<pA:q(N81^T3bi7PNH>s)I**XcE-H5)s>t4
%5jtJGGL`bOQKRFt^Y[hTo<Y&q?KVQbS,u`56LRs)YVW=gJgu7soci9\VU!rknNGKPqgQuYp3oDbdc;Io*jXHd2LELdk,b0=@V65)
%llhi]A7J=m_1Xt!2jme?TDir?>[DfHXi0>!q&hlul13;1c7[G0f:QA$T7;04F`O`EY!)[.Fof-0_4.ttc[VGJD]1aMZU6]HkgRZR
%T"TGs]oAY&[(XVG4*K)#IRZiG1MDuCk,*MY(QE(-edc`RB4^^kI1Kq554#]KiQ^]MBf8Sd*isBi8*L$f<h8s^%Z]37TBu6Zd]`W@
%5@8&=p.cXpIkj)lB#i*]GaTR*Zf>V?]ZcD&g$s+KYmWLK3*t)B6iY?rGhM*rkj3Q)MrSAmqW%,,q<X(Cl!(jj*4,t8:3ZKHpIIET
%MV:RU2Y#]XUKqW3_ZlTt!Y@&<:$b@lp)RsY$=LlfK2"Hdk)8J\Fo-Y@5$Fb=o<[bd:X6EFgZQIoNtpAr3:=gLm/,c:(m(,^l`%Q^
%([lSNT$PD^YIPO%l#@k#h-jW&oVEFRBiiLM]tl/op>sEfb?nnFR`AHo565nAY0,W@PMkBBfd@>"52W5)7u9q>gtgDIdYA-FX*eTq
%\&[?@YKI_8hCPk8)m5LQ-`Z5pg[edWO72*Li*BshEF&kCD.XhC%!"=k1>gFgiJ(rLo.RSVd$MpiR7$Y`?(H499UO1t.43OS/Z<BS
%QsrGMd"H^0Y5ZF:ffm0B4eIu4W6akfO"l8=5;GGmSGa90FJh-D5=Tr%IZ,_(R/IkKHdb-b4[8fuAj=;Lc-5OpR/Ij,il?:.Y+)qp
%?(Xe_;gRg)ZdX7rIG%=uj3\!7OWRBU/H9aur1CIAMpj*ZkK<D.lJ(P+-c2V[\@Hk]lDrD"P@#XO;%Fc*<Ms/.S`ER+s75_s8r82u
%madEKk'$r@nEoo%p$"AIgW83%kIs#>T/9iKVtYI,4a+75R":!h*!S(!/mh>X<qt>8H8:&rjSEnS2S%UK0-2ECdL;GK[6l`PdXt6C
%%$l"qU>#dSUa[+=Hc8V2Sb)"sYX&f]q"a@FeW4Xpo2m*3;fIm7]'gI()>*"0^5NENG3Q$?>ERP(.%TA>GZ4uV;`_8Jl!@<"0IM57
%JbOTHeiB72YMKid@9`^1HfS=ENge#SN5*Y:rJ98!'68.(c5V7]gU1G_`W'YI07K8]l%.aRVQ#:F2E0OUk1e[=S(j")d!V=PDfbMe
%m`+#:KR:r'^WfKg+dap(qf%sm0Mr(!R@@-Uk3Lg:.Yda[2dbb1leHqqkJF"*c93nCi'KB)'D%K,+0K^L[a3o;l2K`6o(c'_-WA<O
%a*sY-Cs3M*/j2!5_sZuj'+="7KEgl&E@#4EbSaLA!-'<.fX]%t]^?"I@lN8[o5)JS(%K';G^a]0o;;s.?+rK_4hL^\h^3WLhd$2)
%5/g6pcg>K'9k7KmR!gfr5DQP(rdoiJOLo2k6p/Ifk<8Q[*m?_eN)k9mTZ<sk9=I'1^-(MPI!U'(549r0K[jGrC;EVVT_eBSA<N?:
%H?rZ+qXrqq,_C*64+D;"))gj:l48'g^Bp;RDr+g63&t8>S[S(Ko*+i3F^m0kmD5;cdi!?O\\gL(5TEt!kJ'`5%hG8ffb*-hW0<GF
%4aZjF;LG?*\Z>^+8acYCkFp+tcd-8L4I[*lrmO5`#aN1]4Tl;DR[Ym]feV3RY.YK9n%i*2'.slnj*/!XXoDpErL7ciQ`pAZ5@7c(
%/FV*)r[5$L1`JjoBGA]LdCk%N\%7>*g*jNWDu?3!Z#cN-SpTrKg^'@>h=!B^'+XT*Veh`mGIV"WoO1s/J(+_<hgO,]%Q!C&gZr([
%ceG$/otg"k/9sARXjd6YqgU5i>b,08I'oJ4]5UU0j8%C$f-b38YE8A7\Anqn4rj<,*qoPOS2(WPIQ1*S;gX!HhXLe4T8i`_k2+k!
%nIRk)1YL^#)EeV+j:>le*qUrmE^`)C$LYqC07,3eb!?6$B?mt(QtQ[N\sKP+B_4NYr_t2QcQN6IAb*urLS,7Rroj2orq2a"ZFCBA
%]>$DKbtW^S\Z6(mmEP(so'2.&3k!p\ic,i`Ntp[7i@Eo2\VCY9,NHmU!6KI@iNBQ^-lEQYA_K_"^A<KI@<]9Z%iAj:%S#0I>\XKT
%/9u=DFpKC%QG.]"7-[8S-olggfmAulVQcg;Ucgl2W!V"-LUN*NhOo<k#:nBZpFhh6IlY,e+D8tC#)2GRJueqJjN$lR^JFMeNh5+X
%D"AkmQ](/_D_Fl#3Cl#Je1R3/]Z^juRJle4Q^O8,fcdK'j..NPn;;j]i:!gD0&F7._PFDkC]83Pc/'CRGHM+;*?VmqEAC8#[A7He
%a/7Nub1gRlkOT/G?.\D4@eh],Q4NTkG9fKNQd>YCRNMNVn[t#.;&1;NiQKE&YB)54(j_qIj5j'L(W1aun:NB$QZi.bhu<?7a34)P
%/U>JlIpG0@^:=1;_e/GlLEA@2msk<*K=BsWc/L8O:W`V3r\scBs5lQEGF&3=0[8U8`IIkgZZr'krV\YsIdj0#9R@I?dk85?0h3Cq
%C%7($kDq[QFTZn)qX1;ELJ9ac?&E-cF%6\24Cno64>]Rb[>Rn_dFVFr:FJPDTP9E[11Bfo8o^u`JSar^"8Ukrqc3qB>9AQs++A2,
%,DK"nF8Q[:kbGn"@)eflI_%RcI[2RtL!9l&PNJfX9OmIa3H?:rc6D02a>]+IF=uX(O7Uj^HfUB7r;2]K(\rYrK#+qYIW`I[Nq5ZO
%^_[t4F)q9q':b\5D;q$i#e:oM&#MoV0(9H-nfr_s9pb@)/iG<\&8g`Sj56K1b]t8^VP!HB1d89q+I>A&Fhg^.Ah5JXrj7W/W$C0\
%G:lA02RYG(*-"&R!@oGlQ"PO!ctY3RIDS8+IrF4Zhm!WcO;ms&VYTi6;$t3<EoG)C*sQagm/:-mf<o,IasV@brj^6,7]kef\7(KC
%E1"9*.-88d4e,DPCNUb(RA[:g\V!of*EsV>VcuXR)40[(rr'_Fr\"*1qr]&M&/QF:]_MIj2Tr&(5$,.G%u<_&=GO'e7m8S<)=c36
%8')W^NBD6\CHH\K+(4U>hB'5[Up8;BOX@#I'=!/!/FsVdOW)O<h6!`U)(@?\NtShEki)FLQPrUd4EA0$V:H[K$0F]87ks.OW!h?;
%dW.<^6WOiJX:(b]DV?#,rUuHd[MuY&pP.M04\o.fV`.*p;B]LkXnP:Tf1<76;kXP<P7iiRj/c`adi%A[-Z*1=D.p6_F=H=6=B0ot
%$:<M0G=Qik0X"9Hae)u4[RM?:@s'9'D_8[GCWV[mq*(tdK0T7G>^`*nXmqm1RoaXe)0r"j[!gPZ`UW3)^\<!DHeS`\*Z&*Ul):qj
%j*Rg>s#YrgYN=1%]Y5aO+67n@`J7PM+a8a7BA:)co-]Aq13n.J$b;0cXn>.@YOu"i*g>648k;IlE.,<^pNu>Ee!3Xnq]0aufml6N
%d%<4**HeD$6%u4JJN'-8`t/(DE*cdpPHG2%4S,W'@]4;TgEEg45'J@WF<Yqb3lg^3rR'J*PNO/ic'ls@;=ldHaX*Mmq'@@'=VH&8
%Xq0RW%I76Dpu#uCEe3E&`8uDcEZ<<7o`^pE$f@M!=Yr+@U-2*LH7KMtjVl>FmdoKrR#'>UP<,lr/oV%W+Km+3'$eIU^[7IJbApCi
%AF5Ma]"[(l[Du3QRo5P0#4')_=kU1Bjo$hsj?(KVpt#*k5;[,'_jk#&ip-F7iq_TYbELQ$`@G7Ire/="3WH>VkccQqmA>MHD9'HI
%rD48&aCZ+")Q..Q6*b'JH!Y_MY?3ECXBP3.a!r.#_gF3KKW:0@1.WqAjuo'W#]-9Kd2L%KLI/q8#7'(Z3t>&`kbr4,4N*(76^*Pa
%I!G$dbN3l/U0.$t#F(gG/t5?NR+tc4]GRRrH!@^^?:DtYnut!n/k/3D*KE:lfJjC#m(&F/0&IDT4>5?.%F=FS`7kLrIq?f723>R:
%;(^tMRFcm/;s-l(ESg@P3n7hCL9'^I3`"OM(@+(lZfKHYgM,\$Te8[_nQj;.BRTjn<rT_EoQ]@g;_g&k3O0M!2QWGr[qq!#7!It-
%,&=nD%N#tdC_5'b$OLk-G[l"tD*M1M\&bZnb56@jan),/mp5t=B=A^(q*,nf@X/,D?`u#LB#3;pc(M0-)R\d0hM`bDTC_B0`+7sA
%bfZ0INjgp#nMLo&^6K#]XAV9/OtWe[)g$)XQ8h)-m.Br;X)BVoqimSM<c9iWmdXT#Q'V.OD:35:j_;uJ0`I0;`VC?6ap*+)(7("B
%fsEBfWYt\KjmE-k_dM<-"7p]Grlf5")`G139qMAAOKX/3gkG09:`j_p%%TqaHg0b641Hl^iHPdlc"LAZG.,Ktm9FJnLfo+GI!L!4
%b9;7]p<Vjrf?:32bL:6HL]*j/Ms'9hf#-XY6>qOeY>;=)QWG!\/:T^-F+)$tpo\iDo3:6!>KloX-?:Pao$-ad>fqNbc_DhuDpQ`4
%;`bN\?a%bHs1dZ6g5K<e+TR+tXp;.F"s'cU>p'dWf=,D=e]iI,363b%Y&DmbW/A@a8#dAFP@O-@[r9PeB:n2M;k/8nZVU*SngSHq
%.@Ns`7C0t0BF`+[kdt[a`<Yo]\j+uFfW&Qpf;Wuf.#)FW`Am?8hYk,,4GmA".iuZ+4c0d2:lN0@TpW8K'K>e#_s[J[r\"1<2q=N;
%rtp5pFj?g@a.DU%FmQL<J"lf4Cq&r4i_K-rS`o)\J)]P@*`%0c\.bk.Ap<5t\J+?WGG:YaM6f;6Ibfk9+00%8SgX\b?e,9:cZd&0
%Pa0b\""k#<K.a9O)$c3im^pa7iUa%*7_NLi2+4$;@dA::qN3_Wp>381niTXoBDY3\@3En^1o[kt*=k@B0;$I+/*=#t(d]Y*/'kD1
%j95u3;8%8TUmA?M#Ko(eUE$Wg,6O;sS(IOOEAV6r0Zk)!7-5WQ]r_rpXc;GK;W,*NGEHV)rl"N(lH!G,PrkV_j,*YE(;e"o:5/Ln
%3]Rakc-bE99[*`\f@1"H@.M0giqZ)i\1!2upK8mHg%5@WQ.;ZfGof8DNUe8("$+jQpH]jFCP)o!R97`h=t15`-GNDA4.g%ACFO*\
%[T"aPLse$#1YsDq\1A&f@gDTpMf!/NO'B';0Ld(c_K*?8"5hV]0VR%cau<rX_Ci>Rq$j3]VKO$B]S!mIpL%YZ@:7ie.iQ/Sb0K06
%osT1)90)+M`Su/Ffk^Vtc)PZ?n]$K"4DVbC$ZUf34Ibq#)gDkTN(`H?%V;nSrA`E@a,b&XPHjpl36JRYk_c-_>0Fr">/j=H_:u4A
%qjh'VJQLLQa\gQS)<dX(?J9rHfkGKLAu@HG@>fO.HraTOjB6o-?L?hP6hM0aC9$]ZD0"he?aX8]LqBtco=B('n(Um':^@`aQdmI'
%XIPU?MmWumU1#:<Y<5%KNOjt*l`+U9=B,W0J\'^PE1Y3-mt!A=7LRV$cG_%bhhorp);b(mM$slre"W:2IH>>4^%<J/Vr`*D>;Ich
%Va<KtgGl7;g&U3UWB=P49+*d;2K-:3lE;\`(N?>/<HZ51Y=\%p.`oD)GoXoqQte+UeZu842ATNA\gTldAZC,/[$S3?`?NI6ZP8oN
%0hKX4X?Sf#MHLbJ=KFPijF#JSMOG,[,N]q8OK"$_en]dfo@%8.=#>uA\gq!NSM.^;@&-q=IFG1"`Qa[k_8Gb*/W758U6tOB3k][;
%D7"e3(J?lbRbMm[ik5dn>VG9-`#Ou.@hNiVir+^*/Cm0$c)-RjZR$ko;GI]G,U%6@*g.@)HX@p&]=X0C(AIf&+c0/b"*%L8U>6NH
%R/Gh$amYLVKJ+L*(`t.Q&UnXlU>6HG=KI9'BU\?K-K4A*PH[tq'&c,d'!VQEdLF$De-?5i4sn*g`oqrb+Xd@=Qj+l'+=M7(pE!+Y
%0;9(rfC_uI4,5,2G?D^u$;6aH/2;o+mQJ`2f*>6VX\BsrB(8f>B_DAhU#B5;G3iB'3-2q`GnLXR`S(U:j^rh6'W7knf&TZt^A>hG
%p<333V*1`M$!R0+>:n3?Pc_7(A8Sm>AFmh4:r$e5mojLe.L-&:aY?m*@M"ZPmMlVn_KEgBe][P-Al)2GYB*Ue!..N.=)@N1*n3F,
%_MRol[#i<oisW<;4&3Q8_W@`TOM$XE.\"(<3]Y8Jl;iQghq#uW_4L%^ig5P0.e<k*U+FlNm4!g51d`T3d\c0E%g*D#,+k,cL[W1I
%AT>+[?NAg(/a;P'("h#=RhhI$m\8P$Rtq#*2s8hBEJjMdk.$WPlC3j=%(8;=>8S>c9k'aGo'qC!EST2)Xp"FtFfRIfDC9+mQe+@S
%9ue(ZJpo>Q@(f0DZVMcVfsVemM1b\ueXJr74oVP&js$AN]K.o-<jgNXm;lrG2OnTO6^)_1fJ\T^7Zp8=_D,N=Q*2%N@3/%1p[?+7
%@lDk25'2QYG\aq3\$rCOfWFDu9npblleZ"*IlC9LDQs/\+ci@b=67Q38`X#/YLf-%Nb@sh>EaEhFJDuShi0r\lehN>BTORq/:lYt
%`&PH23k<N3P!1'l)VJ"q$PGEIc`U3+>1>3c(tEtQTVtR7OkG:FY<Xc/TVeh@\a;8&=&h"Nq,e*6=B.*X%UE)VY,Z#n/AcGa2nXM^
%.)Dk"83$UU?C]>908<LC[P@&UQSl'rg=iLu._1V7+GAFMf-heU@T&bD;fsi>m'Se<mI^CJHW<bmXH?I@K_(_5MQ*Y6WPs(l?3(e[
%PRhQYg&CIo>IQc4rp@UW/+(rWPA1QOJWr0VJj@K1-X_j^W(;g#&kR(A,:U`OM59nUTp/NN#fBJ2D.+`TP2)p2MVet<.4n5OV6#&3
%&O("^`=HH-IT%f:r,K!+j>P%VlA1L1'6/Z>2RtEEPYIj9eH&b1`__QI'M@$i8LYac(.fs3%>.3oL/h:nfH*V`A$ck?8S)NC65.)<
%)^6a0-a#j8_PU/PqPrleBe>S/2MG&GL0.&4:LX3S=(<[pitR6]=I7op/>_0)hiW;GS+Q@o`f5\tNtfE&I7Mp(9lZYs.;hd8`GLF.
%Lb!3tRaQ&5VMO\W24@EuHs#=cL=)5FH?Lm/Z=S5tN2A;FB=5NB2Z<JGgiG:uBi)]a6!obIL/o;hOH$"R9F2WdT[.gd/-XuUM5?Th
%a&;@)f&N`JPt6e7OVIEFeK)JDM56AGDAYt0C*]XZmVp'/8hKJ0-@K7Vd>C70qfF":jO;Y7=+%T"doc/)7_^72&o/Vd0CJ>K,<H=0
%6oPOMoYhj,L,_e/C`L?JX6g0O'j9H.(sfEu6Z'm+:l*\GoO4!P7]`!3?FsOuYpBIX>2'W"15b)ijsZ+UVW0(^*e*,t8oL/YU+"Qs
%3K0^-oe8uV7T'$A%Z.6IM`^pZ*JZ&#,Qb&:;7[36'\@5ZU9pDa-nE.i&,.&4Bq5Gbo))2gBS8Yg-##aL\Y`TK.'\G&oItR2[iS=m
%X2\#R6K9I5r-!:BUYJi-iG-rS)+@<sN*.ro@.a#0Y&`FF2Yj#:>I)uSp1_aFa*S-YpS_\4Z-SlC0M\10G46[hSLG'#:>DX\cfK(r
%+]b,8\$pR/F*m,\NG_0H5%0'2`Z]6djrnX/k+OV9L46i7#9%(32@hNCmVk_^F0TM!)WLG`Nc/fRo+5iR>MOl.\f]XgqqBb(q6LgH
%+2c6ggZ2tsm;1?[nZ)A'2nlkiO'c>(I+!?<ea'_'R^;a.S+eZ+Sc#=7Kk_P'55?@/?=%!a);T@'pRKXEi=k@4mRN_n4X4%SaON(e
%oo*-=,?G\*jG[@B#]dLhjQ\b'qiAh_St=:<SWC+/L/mI.;5(IOJ:+e#:6X=RK1c-U#b8D\@UfeM8D.-gA)nRj0Ec^\e)E`9Og206
%08Xo/\<3kjI-f?)eY^,,,+j:lOg;>:%fW@P9?jlG61JjF1/=0rn_CC>Hf#@q:I_=nNU5Ma&BUP.L#0o:\!'+Vq:Vc1*u[F2C[15C
%)eek\7JO6e68gB4195pA:#j^$&`i>^]l#7JDps>'XnLl0WZ5&`;_/7tkTA-/__c5<'#lHaWNO^rqu$:QboOIbq&opGGh'u)OU$`W
%AEu&tQ'im/(KoBK4LdN39Yt39B[@e0372qP<38>gf1s*-r+Kd@KfK32VqcIU7W@q<=M@+g"3poli(G-"7b."TY-O^@$ROoK4j'nH
%[2-DjWmK?+s1F$V0taqoo0-ihN6k\@2Tk&0#IkY!Vs"o9\@.GYjRj>pEm]3i8Bts.SNFC>oKn=STV<nFj8g<5G,oNsq5I\\f_uhI
%n?hi0`F>7$LRYsMP2,9tAd?3#2tZ[W#PZIQ]!ad4Vk\6PAp(Gm>*4k(b>=f$9Nnt62R&_,U<dWsD/_Gfi#"\hGDt"GJ_!6U9"]/j
%LilR9RZ6a(JIoQi]S91>\l3llbFjAQRZ5<8`^jr)?f_CIAOfL`rgShY7[UQ8[_KPf+V7>FqJpF4CJ&WRAYbe)c"'8,eElY]f5&Cr
%7iSCBA(Eg^TJ9a4a$"@^0&X`Ze-j;!3fs*2O1jt+#S#o&$Sq38ijNOlnRVA7*3>N>e(SQf(?3dp_`8kaAT5pq.'&"IYTY:B6HchG
%he;YapH0Q751P`oGLXHT>^J(MPW:$s6;k;$GC4IY@MbiI?5q?4422HIb2F!qdB^#1#d[!Rg"o;KOUDbp>e*TD?(Y:(di5BF`eQA^
%4tZJgl7&?+<.3-RWGa&O4P::s"Sc^:_*X?=Z8f.Bg>]"K+)iXgl!dna]4rG\42_R/S%.BG_Rq]WMW:9D+)+l3Yahbr307@Gc2uj(
%ZqJl_Y'sReerhu"GAOUkF.+GO;'YQ4XhAU#e8MB_eWmj2>EP\NU,-BXW@om-%+E^0\D_HG(dTpj*IRfhYF*IQU-'3:&G+T5IaG(@
%,^F#<[Z+-?f7o`F2$c##(::j\X(_^g3*p#<?g_;jN\DG%GMTckC_`f!QETdHesbT314:__/4`o6!Tm1'[TGSa2h)r,<S3d*=LfAO
%BO:[tTIm=ff*8brl=QM0#d.60N2AY]E4S"F#4a/6bBhX'>00N%;8!P!HcZ[O</Wkrof$VDC\$].;!u)l#Z%MmY,,hoHruS]7a2Er
%UMoAXK+IC>*HZ.H*)=Zg%8(edB<7EiNcrE=h>qN@kYZ8&6/()#S,I"ZA*EjS@5WAh"lU?dd]a<6CDs(C*kMNJ)4o6hgnrrl!D8j6
%&,h)l)0-D/'HBT:H4;^F-.WR[_(Do6\uZ&"rGGog]I;KKj%)*JR`S_Z=h!t9JJoMVZnV`XAc0r$K>l-IER,RB.W.@<]l6*,"*m--
%f\t,DnN:53$LXSEU:OE^X_J(G/#M",[[OUXpiO\uNe1,hYMSO"&dQ]XIbTq[,sN15Heq":VV-Cjdd;;^O!8FK0l$C?MO,Agd_P=T
%>oLoKUk.9`"s0^bBhQmi/Yu,#SZt1h?t8TP_'BKF$PH^UWHtQ+%!;4Q"LmL#IhWILS22k^%*U^6F3_Q2EsB'R0^UQ,!&5[s,r0\h
%)/)\<52D;Vi+pV'2^i(FlV!9d^/T.X3"<X;Id*`hV4QR5.UND$/9q[RTGYl/.P+e28AaT4Wk>\pV1JomC4-7[>Z[i"i[$4u!`3jD
%HN",7^"=70aNL[,Mehq%Z-0%L^7^I#Bl7e`GXBSO<O5:gpH,,c4a.'.!eqg2ASPHjlI#4;h(15H4I_`BDCnHM>*<@g`)ZG"Pb`]=
%4LmM$3S1(N2(8dg>afG+hUT:rf;-VJ.<A5+>a$r?QY-9GlsH4[9DdjYRVPe2X!ZpDHlQ@'&K/g$Je]N<.S0\[?;+55o,qq1.a,7+
%f*i:^)Hnn!kaK(FTR8iC#g_>s'g<Oh_-f^*<fZ%:U5lA'qMHmRA6%JBZ6;JDCF[\=<lgT'$oi`RKgj$p>&MkAc[/]eGc@Ks65XHh
%;NNHL/5/<-;p,rt2lUD0<>J:_9M-3Or+Pn<U%VsY>(ri^8e@FqE)$TNI*@R!)-C[,Hoj0s$_?a[fq$%JEnpbO6o1(mJ>LckJr:]8
%E8jXFp];2[!&coUGrW5L5p+VX2mMK)#q`L8VHI?*)&,aB<0V-*E0,=nJ,k(!d]/I8,P)Y2,SX%As('hM`>q:E4n6o1A=BqCE@#h(
%8$OD#MoA"\gV<l'T*ePWLst?IPltSe>H?9Yni*Ng&\Lr:ir15AV%u"pVUD1g>UNTLVeiTY1faDW[,8a!bV%PAY\(cXgUcpmq'+:M
%R0FWA<ZE]qr0jFa@A:3R%A6?JX;&UcMlNNB_@g0hC:@/_doN@)FHg:)mm0ta$.*U@\QYoQKCZDb)khX&l71LSI3%Cg46WFH:J5#.
%[]A/JL\!6peL()o[78.R=/mJ:^5`h<=pVE!p<f_"Mcmd'!Kaq@SZ9iO5pP!LZJ`+r3nKo9%G-j565;b`T)buAq5@G5!1<en-jq-h
%EgeY_SLt9`2,2_+)<J\<<FO-,%>$i0Gdmd<GH@dYMIDpW?+"]&TaIbO'e`.`8D>_@pV)#-Nc"\fAho+>3J$*k4tVV?d9Bm+,mVh`
%cN6C+(W0_B9"<!/^5H/^<[9F/;0`9p[lF"Y@>&8;AM&U$Wq45#o1et8PnoY2HU>'Z[l0/8O\Gqa?50Yjo)?oWK.H*h1MrV-34j2j
%4&'N&/L?1YUELP6q'#qKgloSH5)F;>B<rD-)RY7(*6s:tgaZ5[T"d:]!d1[C#Bq]I_Z60P3la?NSa!0tb3>F_B+d-@MG?9:h]N?5
%W3S*VG(C?TBc4P08=jr(c>,S63roP_4IEQnmrCI%40()I+$1:GdOq8/l04L2<fbhdhC"+!>ZH[W1]lj/._W"9&9Pe,+a^hk9lTlM
%WpRuY(YNNmVNnKe5)LdD5m^u`Jru+1Kj*5p`4_a:Tq"hR(Ks_(2f$V-8XMPF'iqDK'50I$4e"c$Ro!T78d00`pMQO)ks?!5b>:3g
%qM4#pOL$BsQ^+ZI`mh=$m2KEXVQM2"_hT#^U2e?/6qXDPo2__sj_XKf,C/5oY@Z6faTE#s;smk91aT-&*HtA73_1kF!H#I>YcgPq
%5&IC'-9tL_hOEIlbL,Bq]4oG;Un8%G-a!>`lHtj(C8`KnA(mr5?*Q]fX,s:i&pa:5@C\h+-W`N_QOp9gakEN=7A2)-?5'!`)6[!S
%C'+Z+f!P!e;_H-49rWcQX!^hPSa_KeL#O,PX\c$\?aPooM6YQk#9-:G@6'b>gSdcieYB+]o$C;`<6gf4'JZaBK[ZW]\f9Fh*adoQ
%o1)1nY:j8O8"TV%dkUH9bWHoW#mS5ZRA]):U6.6-a3<!eo5r2=*A^L3bgS<<FNcif1Jc')kIL>cC!A%ZdBC]bXiSQ('R`'tjF_Vn
%EE"js_26-.D;$=Rij\@)e2?AGU]W>s(tD.4*d+F(?[F?@mTF+_\=pInS"!=XM0i!?n$--ABQh7mr7QsTN-*LWZV<VsB24#M=W,e\
%:B-pC2mY9`)=V\Or1!ff5%VMGT@4n`^@sVs'&\,/dl7AWi,dW5En[Pspn>k[D0@qqBE#O?_t2b9c@Pp7q<qNA&m"V]j!K/-am\&I
%s1[U.icYYds8BdI:@FSLT!kK10@mJeMq_s$g$cW/BgVO*S!s9ss-W0IG`r6N'aIQ9:$[8+mO#\I9n(\n`HQat]&.5nCY/JZ#O-Ec
%YN0o>.J_fFamX<Aq[NoMo'GZ.2`O1j`B_ZiaLbQ*Lp;nkB$'3,^WLUZd;+K"_9"^!>>;NYln$g:+7msipFa3*cgA65X>t)F3S.cO
%W*AU!Dp2B@83L^'pARN"h9fkQQ,aWMm6[6mmtZ1hI$M<%H(gF(Q]IHYZT^+GX>(*k!42+UKNnN$f=2DL$ZB<'L?mJD]&*FRQb_.'
%:H*=T_%uNW*6=cFEo2b^0O>+js)_O1C4H/1[`@a_@\(:!IlA&PRcC[-Y'uYk*7j63f#M^ljhhS_X)P<=aEMFe;==D:B<e#)gFTfa
%hn/H.T=VGXkBeJPc)`Lr0!($fgKC/5p#]=^%g?KuB[27^V]gQ,TKAXio>?k_ahWRt/mnLIou/]C'`DJM,mA71[<14oGqeR&,O=a#
%D\a]+`6I"FD2.Q"KB4K=d-L8Q9t@P-B,.qdGH?kC+`$Yb&GpTu5^?W3+tft(76Z<Z?e'iDUF5QOjXYQ%i5qkoINZVm]`P-Y0SD:%
%WDJY7e<ZgTGLY`2gAGVXa:^D-Anb/La1"!cZcp&L@7_!PH'*;j@nTY.1%fq9Efd=aX)_diaVSblN_M@*ej_U(2I*XJ`_']6l``rE
%k!_l90#&WLpp_?o"GW:%adHqa@E[e&>\b_1:"u!ZCuQ`_IHOXV]-=^iRjQ>UES`0P,s<p)@9l'#50l]Dn0gMbIijI4+BR(^<>'mA
%[-ODGaAoR*/VCJ)X7?=44(lF`d@4&tSaFQj3E8+SAH`be@pL.qc+N7E&e:P]J\b^3JU#P'S<ms_K0lPd>5cfFo=_kuor(P/II4%G
%O]H*j/IT>!$ArE"/g%JcHM%7EDZ"5geqTY%V[I:Xb')L`i_f=GRpA1l_qLT61ojdF`$Sl<a@gC)lDk:)`t\@'pP`.mGh)P(;G0]P
%[A?_m-s#E&eE3kcRFPTnmfl@-)K/$X6?n^Rg+&:BHX4@siAS,/>T0*Lp1s68^i%fjPcoQK=&R`r%rkN()l*?2qY*"uIgAIhIn4te
%o).mUjl6<1rA<Qibu+I#b!/Dlhkqn&N,pr<gs%g&1X=gYOo?6]DT94KQr*gAF#SmNpAjAo7%ub$G0B_a%2`TlfAsXDA:QpCM2?R>
%aAn4B_fhKY=S2]tJ'T]4'jrC,O-<^>;Bg*Memg31T#1B,d@`rN.aP$%M']A-O#n20f:ImS+0718<4T]Uj."eU<X<lFGXsq`0l`!O
%gha7PdK&"QBrZjT.fF_S$ZENK!5g6*_6J(H@ng!"O'ZL>6`pT6<=T8B'?Gg]X9-3<+sg6ph3.Jo<@;6J:[9qIZjAJC@eFUV!3iDb
%J3p&8"QkV_RgQiJ0,f7@0@&amZ_jDW3*U@S>SPGj5%_9kXco)Gf&dRS9E[t03er!8FXe<&adIak"Upi9>&AOEIqp*'?T?+S[X:32
%AXl-@PdbFD.@UNfWduYR\koKJXIY>NDYWEhfp4<<OtGIuNUck6P.pu`BPUY%UUAUp@ETMhZU(o);M@FgKnFF-WW@o.O9%Qt/Tcl&
%B2EJHf6OAIgFbF_=DM%Il%.=#gTVl,=m*I\c\/P,4%W;85dB.To"cj:G$jQ,@#FNi(o^&AeBZG*aP/'a32tEJ!CYGW/J"UIY47bq
%An&s('3aNN8nn7^\OR2ifABT?dE0j!`)gH("jh'22n`,n:'.aK7dZgfDQT=lI#,2Vkp$CL<A*<f6!"dVoMeo=ipo7I.-,2$=B"F9
%Msei^C"4Ta$aXsk9W90&j_tnV*\YdH,jW?r`[=3.lDd/T[s"nR`A_#++]adED!*YWM`)@QK'>?#f1a2E7&(:Y`SOS8:EYg7G>hP`
%oqJ`IAksop\h1p;5-ONto7NO6XM2=ZUT:8D;.llP9OeH4VFE4K<_:SqAY[*.`Hb=5JQpl.Kp6L9MD3$j;L#55Xf*]p;\`40oMcu\
%5uHMRUf)-\]@9l8PbbI,,[?c#?Ckd3Mc?1*1(GW],[W`[A^FsMLO4%O(X:p56+H.3jf`a4BT<kQd@rX)o_q7:(@/6"AlGe0fb,eb
%3U__7.h^1hL02jug%u*kfu%@UNmg<`m<qoNDgCdn7CaFfDlBVj&h7(d#E!c^hf5I5h'Gs0VacQ\K1:`-$/',\p0r#RlAII15#T=A
%`p-6A6W'fJ_8tsc<-7m/*`%2;6:GbCoi7]/NYVN\=HV8N.l)1IBT<i+Z*C$,N49KNWq)EW&Z.F'L_[HdXJfo>]-^%L8EkXomB"6`
%f"PcpX9eGE]otA#aHfrU+LGWKTcI?)72G(IL?E#>H943ZeD0T=bt4]Z[-OD0?bCc*;gZuk1++YYm!ou-q^!31Q5"cmKL+9jD-K%U
%iS7K7rdf$)>uitGh]A"gkpe5#C0Lcq1dp<X7tBQ4q-r6d]E$7UX;Le!;%P'&#FZF'-<d*uC@dbb/&K]3%HT9]P$7<W7;;ZJR8bp5
%7q4I!ZThmGM#Z:l?0VicnIrk@hW`Hspacs0k(dH%#bOlejHbiS[&fkto`V,go^(0ZU(u"'Q*5H+EU.<tGkNYX+a?YK>/f%8iS%@B
%P1!+Z:]e3$4jO<YL!%.3\#M*K]eH%*=ZC[/PrBh9A3(0h2+i.K5\Xu_X=f`M"!Kt%lON4A+Dcs-4o<og<E%?nAZUIg]eHG5*WEEn
%ZL?usK/X]Fo[U:o=pt,"?%I/Pq^8G>2OLagjhlC)%[(;VLFt$d8hs]Jf^Y'JNp,..9gQSPJ,&U*ip3YOMsL<2:S+MTrorCVI/(OE
%YPE*.rpB%C\+tNgqXM>l#CQ<_8"VrZr,K8,^3]\=jl22^Mj'd!=,X8bShI92^?m!YnukhbcHjhB)Lq_Vlr5)*0),('Kj24(5$E>d
%qo'rKcXq$dgDKr70B8ON14D26?:u75(OnG0\\@_Ahd*rZIC]'td`.cCjl\[a?X;_W]H$nLMmqm$B6g1%hgG"bi^eh]:W%EBhf3]9
%W8HC;#e#[3k'B!Cr&a%us-<WM&*W0<Z$FCa]@GNFr1DrkRg4=di6/CFjP=5VppQ4_IE4?c?F"KUl4dA"pTC:\0$C,UJ'3`Fg[!bB
%QZ#(ci041bEV\o(rrrr2dII%Sl-HH#b2<'dqW#OB?Y0BN)XWa7Z7>lc=WdV'WHoTaEd"%`)Lq_XjiQ2p666a/a.g6>R6PQffsfRX
%l-2FS5'_3m3dfK>`UgQOf@unCg3<)/f-aYOgYOsP;chk%o0dZ_%"A3'n3K6na,Wp?ZGQK,VDCHL/E?WTL@qhHjL_baF8iLWe)t(D
%I=$Bbq6S;dn8ungFa<r1o(4^'p#l,%+@kSRUX.9W)q[CQk-'%:IC"<`Ik]XhMqe+%a`.215$`Q3+./PaRe!?%/q-\kTXq$Dq.?%%
%OdF@;Qf[,cEU&+VLYo35jR_L!ji-gM?X8V?_12@VPH-KC$dp19%pbKH#/6cgmXgW&>rKnHrt%5Tmo8es_O1_^@nI^?nGR"S@_K!1
%4XpM^c2Tndp_rf<I.DP(gJ8W2omJ[l0Ri8"]^a[#B4?&@]KSRU:&__8I)\<%"'+K+D63N9ouC9kZM]%(p889NWl95[XR:`$oA&=W
%HfrDVq$C9hk7![KeCaV*K_nfYJ,IPSdEQcC=73`m[Ob">g4XE#8F#7H_0[kK*TcSr0ILhc[,@Z_s2.QH1?<W9D+/?6m<_j!?bL^S
%ApFi,m,bg1P^gWdD:aZ?#'tE:o*kE"b$U^3]jb&7(i.kM^O5S6qI?($DO:C;\:/j]*H4h&JUNSTJjhD/nXl:o;*G^mS2L3BC3ClI
%q!J[?m.[<`Yd8dSs/Rg3mr+MAragBFeaqt0372][2"-`*L.AKOiH2IHS?D\E+J8I?$VD0sQ@mSehm2"%dEW-[_&%k%\D2'7B3g24
%rP)E<n/uAR^$c:,K.[*.SEg$A5Q>eMqA(.ts2ZNFpcRF4FRnJRjUZk>G(8<gJ':@C%a4D`0,MCHNH<u=ekFr*AW;(BXi]EqpRd(T
%pKrj1n$KcXV\9!h"p+rO&](jPLX+V(HRu,D;^Xp4E(SEWD@1JL^du+ng?NV>kAO^u?(A^8]D1`BhOa);d[GTkZ]B:A6S(+/Tgq"1
%drp%14L.j^d4dqjV+*0[o$D<d]\>,Igh2u?h-I='l^_T):B6?RY!?-.c&lpLa1@lqYJ_bOa9m=0>d+eXCU4EBrDN9GW@lh+MpLhC
%6hJ23j(J,Pqn=bARR9C4`^O@e7mCr7*/2(5,dT/t%XPqeL\A.ujLD^3p/1irYKqFG#5iadI/\<"pi6\1@UFOIJ)L"EGqWkf-4t)h
%FDB$d2WTf=[B@d+3]I[K7%)Z<l"T^!)P'QO?[&t"%Z#$j_h93QSEgTW.iNpLn>rl!Fnp!c^r:nF+e$CD@<%?==@.*9`CNKO%n?(F
%q6E\g0l>uj=9if]mGm.Ia`tbLVaM>*,S@?kLs(^MnO,D%)VTslJ3nV#Gl7U.]iT823L2)'cP+_+5nrE0;+MfCM3Oj'pQW.o&g`F2
%BY(h@@=S.qK;=X54$Bo5'=T4OC[)H;F1algMgPIs0]M+g)$<Z*+(#Z&pi&KF@.4m)KS.%j.I^&bT;R6,K_YR>FSq%:kPn"&)II2V
%\=Oq0#f@$t]`u5/a"$.g)!\l!Sc0!PV!<G-"SG!9&^5a,B)+)f"mPtm?ML__"[M#G0NRseiIl]]7Z(Q-Q2d9GP5cI:IMN]*"2*!]
%GAi6=_NW\hX$-dpD)abCKr<c9G("gdDuIktrMO:O_KLr,cq`DZ1XJ:lCnj+7$gm-CCkm^jV;&-A5n8g&A`kl$_cMe8B*eq^Ij4SU
%^\HQ5*0re+eBI_eX]l+Hr_#3Kq**VBk'.FcI$:\]k8tUb]TF*oY*AfV#jiIL0&hHU+LW9u1FN.KQ^)k;hc=G5cr/o)S\drgL2O@K
%Pt$8!k84f8K.B+Ss8-HrO&,dQ(^r>m;.pEaYOU\Hm:g5r-7/NKV=+]7<I6<^hqu]*pq=OSV9pme+*"[(<s.ENBY_q`Hj8"XA2=?p
%hkF5kdmdiNJ--s`l]?Hgm/]?8WY;>9NE$^PV,gl?J4:[aDGZM1jqT/U2M'jsHs&6X(#W<3ks]A-r\uM7K]0i^cEOQ'%8<kq&0:]l
%T\bA&C!RGR>Up9nS*KHaF@(LpX9N-E6@<%dd66-L:Ko\[&E.U<9OQeF@7u8@V]SThHc4Ne_jk1LPKGa(`ONpS^em4^iHK0,'Sp`<
%g+285i.Gu(&,1hu:9AiY@"\6D5*BPTdP6<D%"i/DiW"_5#bV(;,[sO]qUC&T`qZ,EDF]#slGb$nppe;(F#cVpl&O$m#Qoo-$94L-
%-rB[G?niYDL55q2#qtL`N@XM"q")_1=q(eJ`n)WD\,tRB7#E*^Paj&8f25\*Oc2gmVan+EB2YeE3tNY($=>OBg:*QjK`^?*10tf5
%8fo]0L3(c1>bm#o:a3^H&q_W7d,'9[*aL1X>2Y>"ah8<N]aZiZ=WaD/Ae^%fD]gC@Q80T_'m5u[9F`EqC&ajMfle_(p<Vt_6ZX,H
%OC3oq%h/;28rH!Z_MR4[PlA0QNABjFr]mmMNt7oudHrsN)SUXM.UJ0T&Z5>J,*uFLpEnueaGfR+P($2AHuEBL'm3@TL4%CBm=:;9
%G)R<3+*>6cE`7ca2bSjF*G.R'FTQ5Y7D.W!#,P,QE-iL8G3PN7\3!UW5X<AV6o>bd)3A%=9;smt-l'n%AZSjm:nT__9-=<H`a=iS
%l,"Nq_S$,-<!X%$U@?1YJI]X-)/5I7/-JQs&-t3S+KZTmA;X3SHLsK_MR=56VH96!%2EVBO(m.23'YpAN]W=^jjGftEncqU>s:9A
%ObdiNEUZVjJ[(ETd5G%qm(nd$!MjLWfaqs:/0(u;kS0Q9Yc8Y^-L\:E@q:D@?s&Nq^+^D_`BcIM_q[0jXG\h1)SQQgD`8@B7QLYC
%..(;Ml)Pq7EX&,c<dr+K3l"Pd@:7so@VJ3H0nd'PGbi8`TILu'!tM2=-P/\-&S6u8rSlN]c638:C-'K`+ng\5.W?L"/OXE^>qPOL
%X(3cg+@bXc\^1JX&MjYQ!R2Ssg'g^BCZ4l40"kat.pnD-i3d;\M!AbB9-MDLgs0\Sa!B?l)oAUe/-'\Z]m;XkV0%FOOG<,fs*h9*
%Q,D*<'**jX1s+-1f.+g^=nMsn67Yrq:8m%Y\U<,j_.='D^Uf#Bp2FW'_X<N913,(RQJ?cJq6$G,$nqa.3,f^iL`[Ng'j>EhH:Ei0
%frcK8W<,T]I<Sb;A/E'e#Ei6GoDKgZ5g*a7b]u]?jB_<VL0PE8Qqr+tUSVOq^pcQ>+fF5'fl*Pt_cRB['o_/RMHq<7MsRF[G7YB6
%I#%/\)oj7s8qn:.6D5'oZL,S`@muhI'K'*Q,gUmfN4n^(a8WC`jQPNaBl\oJALu^Y97u73Td"j55>Cn:6R1&$p=^(Vc&WmP$]W3L
%Nt]5Hc;X\<RgK&0s$s=&Rm^4i6^@q(%MAm=+5&+18b+rj:^^Nu$e+;-5D5I<M'nE9L.nubk`p>hWtqKAZufF?GQqO%5"9f5qd8Q5
%U"T0:2g>FaM_0^+9>NDN&efQ';5NNRDcle=qg/:Y:@"*#TQBK2BsPPKM>9;21#s[,![&c(&.&mPh>VmKL)'_W2)ES`i1rI4KT]TU
%l[KK(.'na?2u!;=34C.J7Ze&U4-2*l-fbX`Hlo"WH9aKl_E`1)H_UE;N>`!s]f.l:#@n"Rj'du^`7NUW^%u<'G9=[^I5YMEqu)'I
%!4L@P3#ssikpOiMq!L>'$2X[Ug`g"/d&9b!ha)X!gjjJXkTjU(T9`a+M$N""hLF`.CI)A9ZF1`@:uL#X7\Zq9da]=JfFMKa4&SCo
%q#>e67ZIVc6Q#hD:`@P73I'KFigYCf+X?*&%_!LlOCZGkFqe'l9`uN!7(_"]i>nFSFYhP6I5>X,jn-+&&+-;8E_eBT@RCK_',bK-
%=%MdcjOerB`CT&'7ZKm*E.`qF6$B/u_te(d.GCnH\g+2W:YHsU]bg:LO0:>X^$YPK(WC1g+22#poOgU3WrE>$PhYTf5K7js<Ef@j
%WS'`54*+FQ=6RP.Y>Zt!=+src[JJ*=\(Mrj^$l8fT^:.KYEZ]sM0jKG;J;DgAj<q@c>M[3,?],$RO+?)dENB:"aYT(#iIZ9NT<P8
%E3Zmah^hjCpj.4%k+AjM"q4T^FM$pD&IoDe8T,2[;YY1$k$PL<d(%M&X^5mH)XlN=(k.JEF9eudS=+,6mf-U,GF""FP_[<Y]ms6B
%3uG`rHnc1ZX26e(NeJ_@s#6XOd;2d2K;En#oMR.<$;KL+q1";)(2JmbCtSR.+b=9$.c#M6bqBPf4T&R.'`WHS38YtBGGqJ!.lMl'
%)8Dm;s6kp9f9O5$hg_gFE9t=E_rEaM]hZ'4qJW&+r_$C9WDgUd)qn,M_r#P#ItugpLAp$&o=mq_44SiY)t<V%!);=df/<T3TmbkZ
%:W9=&rn!L7I]D$ZWr>]dE9P&jqNb%">tjbdFMND*Ni2nONeKJd#b$2?j150ae[b\S2`Xri^MTY)O/MhEX\AJ7Im08@q/:8argQNo
%4BJf@"\/[Tm=TQkin@`[n`*":2Eh9nbEHPA?)j^)p$^eUW;p/sDm>AT9".V$DsLc7RG^<CR:t9N9Ras%6_jJIlb,p$epAE!Y&p-*
%So%Nn:R'XTS?[N<#+VStMlo0d.ud/Jm''d348M=,TApAuC2X8cH^2n*fQ!V6XgDkn;T$u13qa.37NOSRF^)QI:CfJRi$T:(CiHl1
%GjH.d.q=@Z<j*61c6khg`^9W-ke)Rql0IG3TcAgTiDQLa]kp(6B++B9.%5U`7*;W8r;F-#X4\L)+h9Irluefr6\a7BSu2cW<Y:9*
%g>-5Ecn:Bqd`qKQ1\SmI+<'T<=.6;tbHZ4Tq=*FWIpm#1^j865@!K</QNQ.0?l[O1(E/iF!Q:f+#L$'rO*(Y/)ZJh,B.W-,Z'Rqd
%o[3lnH#,G:<<$rr6cU(52]-<F>/9'eg2!lu(ui.\euf%#(:k6JX[60VpND0YPI.^s?5^pfrn/=8Q>>;CYu\&N6Q;%C<7TlAaOBB?
%j6q]Ial)rPdW']ecqb\Qi,lTa9"$7(FKaLA89S@?;Y<YYS8Yj]$6s1(qXPID^YuBnY6`j\2iECdEM_3dG=JejoJ@JjiJ654Hs9m-
%]&]ek^r)3"<rQF)ItAdt<p_CQ+=$kf``S#MX#j[Fn2kE1;Q4RM\q%:BXF4tt3qW+.QErf![ok31;1jje*ZgHa\.P&;<Mnfr79g78
%ad;'hY#hf^,Wi'6&R"Vj-X<F%N`g%;CL_m[6KaP`TAcOQSF]%<*-m#8l6VE0^";WN$DV81A3,AQ[469.'7ZtC*\!ERBD3o_8Wd@8
%_@L#"7D(E3fiLRYL&Bj+H_oQ8E^3uS%fJ`?n.TZeNsgGmjZlq!&IXTH#G:A=1SoE"7DDQ"YP](+g*70g9E"rApBqQ%eKY#a&!B$-
%!Q3J+r1_Lm*e2P%rGJbK?/)Ts:cN[X$q[LB[PFJC8Onel6.cGr/f,F;CH'#9Pl0#`EWo-4:Q\uZBIZO'ElPD?-\$P!IdB"orFNl/
%9Lq3C)C_&^'KdG1i2@cl)+=j(U'(q4ma!Kp/b?(`1SVDLkQb,i:I[1(pi9Vg6rF85V9p9es&cD>^S9Gu:@A^&D's]a/Am(#kP-`=
%=INn+],?N>/4QTl`JCGhoUnFRHha2$`BhGJptRF?Mm_tg!<mt;9DY_I4MLL`q@YHU!btc:E=S!qYN3msYD)[CkJMQ-PO4<(hs46l
%3D&$9&bGUL8ml!jpu<Gc_/[*^Wi"YqYs"=iq/Z"#s5(c)X)k/M=rUfJo*O/=f+5a'Ga%Kpm?T8&A;K2hr"j#3p/1N@>1$^m$gf&+
%hZB'?CK-e\X^5b/j3@:-r9rN:L1B-mXf#e.cQ@ma9!*F(O5DM`oF9"69Vk5A4"B85qJEINf-n@<YQMU3-3!P]CaaD$%@TYs+MSjt
%[.4+(;jJr)g1006-iE4+RVal45E9Qfg2Z]S^Dg-ja+o+EqV1$G3im(FR'*W>MqjismGLmK!Q2Md]61iQ5hs=TR/ID0<QECDn$ibq
%o@0R[i;FoB,]f[0rbPC9Q5fVS^Y%@<MQ,=n`ln$U]@n5[90[F`hg`E?5^@T]E#I?Q+g9qt@i&ooYeD!m#8uMU0C[uLpHIIZOCVH$
%I_$qd.<E\ZG@Z>'XK_(7K0S.*!qXsJ,H:Lb[4dK=]n2u+a',+A9SIpRZM^JH"88o7>/Nu*qgmX=-D3l(njoqbr.27:]jg/QQnpk%
%e#eBr-<[LY^QhP6DT=V(>eFu&DO#^CZrKTHW=R8-D\sETY7qePh.gr5$"89ofEE9]?aF(BODd#;It#'XZcum%1U%p&kOMaFO0M@t
%E81A$*Ft8*N?ZCHnp=+MEN)bie.3(sJ'Xr9rkTEImmi_>oK1aaakePsT0/L5jJ[_)ThB5i?X&ZEGSp*3]2+^dWNLG4O[X&Fml5f1
%^=)<hU&CGEi!m`/C`4t/kQMiJ^>_"tI+U1K@Z;Obq"[>FEk=--_7gdgBJc/FL\cgN)APa2SaSZB*nb=nIMt#Bi','Q5?jdn>):GK
%5Hk=+c]:;DO723J&uj28"!a8:Epon<V<1Pu3gK.ffOFdWJ3=_Q'(Be3qV5uKfV_'Hd]WL%A)4s4[La)(s3+ri#tC+;[-2/?g)iXM
%8mcs(o^T8do!<nuNVauFpA$sK3rUh??Mi$uKFsU+.uYf%^/Q>\`.ins/GCs?QmG:XUW8+POQ*=NI44V>ROu?d_Ir+riH,*u*.FA1
%i6gGXCOSs?II#;4lX@7$Vs"8#BVG=:b///WI.l^G[r]!oASu]A:&;iomtZ'mC+Y5h)DC";bj_ldga<<=_g<BbL[A\n$_lTgDYQp@
%%r(]Bc:^1c;!q'gEd*:T1<,&a&?/i(eDs2ICWgr?+DdJ&">LdN7'aMaE'&1a\Qi?;RDjg'?o_;UCp0^2WdE-![CdT<[*M0Ob2#0T
%/0-"I5qTQio;=UYlojI-2Ki;SrqU1P1Ad/i7-:Ae,E\D]EL>=%]@hg$#QKEf+u7P0g2c,h6lZ0M-iMf?3dd;WJq(eb7Oh9gi#PNT
%i;bNNG5F0*+/Yt#cg4#5CE*:YVE\#%/?e*+#<Xtq<Ed7(9CulF*2s^$Ql3rd=-D_8\I+s@=7OU!/@.&O:X6j"F#[q4G[p;U?brZ9
%I=+/HY'';npa9q/bJ]GX3q-RoTl5#:9)B(t4N0N$Z4C_h1\dXDrrcY#4r)iE-_D`9]kQqX0Hc^bhQHjWYB9(Z>Ki#qge+H1N2te-
%3L*cQ3)&Jl3g7*jC/+iEB5Y&pM5BN3FaA*aZdVisKJgWEK'A*nZ",]^,VrY>:M(rVQc-e0F8Y3n;ltn"6L4$mUWtMt?HI"o+gq+;
%\eYZf!fuCA&YY>?Vc?C,\X+fN%XgFd#4+au&_F:7!oi5?hhIn$n([sAV%sO^?U>AGgqu'Ta+Fiu`&+HgPBEX<p>aFflLO4"H!F[J
%8nAg60(!=!rqLXQbH/CYAuD(6EuV(trK)>..aKL!/o.F0NZ(T<JGb-X&##XYp%"DrD*IZ6/%MbaX`mBMl.YFb;CoGhlQk?<97AG(
%S(lP0U0%3_cc)7<SOdS!g\*4b)V[p,PPITk?$e-_D%H[>AhBURFOpEW<Ag+8/F>[:/FHJIY5`h8SA*b(hXX][o,q6Oo=a51A[Dg:
%I#b$=JtqYU<dAI!VG#GQFd8tRP==A9lr6uj?.s=.0>T4Ib4s@BXM*@^T(F4&YuFb)2j-p_+dPYp(R&GS5+\`+go*n]Df>#+@4aqJ
%,\I$3&tO.\,#RhA,NIn1k=?k>mK3!gduh`JFr,?`D@&3_G<6k6h7n2mbUj!>`9^0'(h0=cjqduSk%:&Or2J!YlEN`ip<hf"$cqCk
%WQ=kam8>2jT@o9!aB1/Pl%9[GXWD^8"k-+R,;QT3^Q-NM:R[EVS`P)AFu5eJbb*^^72BdHc]NHl@5bFd=Bgc@f>FA>e+"q#(%"aa
%<:<dV]W%1`Ln9[a7==:4*ANC6'a\pKAn:-_EYhk2d8-?(<i=7AaP,AA6"Kq1oeDVC33c"hBeC&j?UsQ0fr=[5,^9$LLhohpDB`9i
%X_;6XTpL`)(+/Jpqs1N?aPiB?MB!@p[E-J@Sf9[)(T3D%hXc!QU,ej*>huSIiA*>.Vgd^pW.#D*aF!N@in<inUjURYLfDQ5]90"'
%Tc89F&t>$8V9?>=o,taZGq5H#7Cr)2F$-a.k`&):WP.i$<-2l&k3:lI4I0:iisVF"LN0S#=<:PhhCC-5mQE4?O.6+4RITC8`m+;4
%FCA`CdCsuI:HoklN9BVPh!qN$Xnqh\c/uk;6$^cs5HZ(c`_X3Zq=.)Y'AXr"j5]k]Oo+\..kFt3hNHp,;jcK#g:A;C*L\QbVE94+
%UZ3`hM<L29rY1p*(!iW_-[IT6W(RfsVGo*]?43=fb/86WRQ,c1MIuRk&#,O@+rB&uIp%aPhAj)Rr:B2?oJ/Hh*PDncj3b_PTcL6t
%T"IObjj#Y5'5\_eT;%mUjQ"2R_0U65H9V9e&\HeBRLmY(cP'XGoQ;@f\UU)NgM')'dMZ\D@T+Qh-MCp3hSer3B6E2r^9fV7ZZpXQ
%;-8]^:K7(3SgIbb3k^ANG9]9h=miE/16YWQqn&&shXo'gZX7B>l>A@8\["H-2OP3.PKAf^USl5IS^lE8'0i(U]H$BH9]"<,hBpFl
%2*Lb_s)9sNWg6th,3=D<2>pE:RYjnS[\d;ZI!KJkd(,`?e<2Vlbg_A2gR6d-G\Kk5Vrh'YY)YDt;[$$>V]IAFoi*/W*hV^LbaqU+
%Fj:f#(Fk=Ze*bn+I!YU%q.;[qdr_Ls%Sk0qLGs#7e*"-,f(<8:BlCS_04WJ7]3G$Yh3Z&@C;];De]:Fs)I1MM5VLB`5+Ct62Re&g
%ZNiO3-JpeNR^osXP\/(mXkfCk9'D[\C1hp;3`RWR/uE-6Zi9C\g?eZA-U,04QKcU7`a?lp(Ye3GfnX0MB=>77a(8l?lGf<_be1pW
%i`"IV3IRBBRp4cl?fj8s6tPe"W`b_$Cf]ud^i?rRH`>h-cZP`Of<O#^a4lt<c26/ak'/VHGnANYrd:Ra45[Y``sUjtak63VM9!3f
%a$)%15B@o@c-+nnrqso*o6NUTajoMa8tG2DjmAb100Q9#r+kiaHss[MIp#m@>`13/9+/jqjSmp0_G7eu>WD=meAB,Jq;/t]r:k!"
%pNS"DZ./GQ>Yc+#n\e?6Q\k1$c()i#G#p$MKq6];G^[2$?Q@s(.uOeUa2LJGNd?WJhWEYR_,=>d?Cbuk/HS"[Mf4Ap756T^>S66X
%qBFM(6;D?@&#8.N0lnt)8'2JS=P0%sRb<C+*+sbEd9/W#I<)b'@a@&OqU-fRl))q^4?SgkDmcC*X4&f6f$)_,:AXBV?HgAIA@Za?
%bI?<k[$o701mE/r+&ps@3)t`_C0TKu'++?Eqe4dTo)f$:\;T0bb["NEVqg[_fXQ8_2plauQP1CKUF&$.lt*?c"m>lp[ujE]HDcZ+
%ZX.A);0[$NF2"689<E!i4Da:fC@O^TO&,1dYs)+<Do(P"5Bl.&5F=%cd)'YTm9KF!C\#Ft\!qGfVi8W-n)3!&Ci6]*:-.L*X0q&;
%;qjl+#LS0W$tNr40M"p/[=Y1?dn9++R/k>f/+ZDT[EG>AV;-:ueCXQ:dUhO>[8b>QAmh%gM4Js6fhHDGQ8=rnc>l*i]=V<3hk"0B
%(<$$+R#-,>M=bk+jm]7V[8J\;ZR]tEX,#5Zoum!mg0AoHFhdEF>.m.ifNE'.HYRDHA#I#KROR*rmI/89Xkd@O+UbBZC9=K.Kn]0B
%qV$DqG5\)AHamD'c"GV^X[8+O4P3b0,^hP@3161n,g*;DX^pM\p*H[Ff<o.tI/0-lIlsn]T;N&mWTf\7k>ZEMHVNn76p#OXg5)V0
%m8=@Y8]USg<&uIPf?u&&mWQ0Fgc3JN>kH/Vs'WU*ffk541UlOCa\;#/mj,M)[8tJJbhR%.oHoaFf&g9lF49<uS_Weq;iob;]U\,A
%#MmZpA8-40_cng=)dBZG\BMt[A8,uB/N2A?'Z!Oj1NV2tft;RPY&1nueK;9_o/g_lak>A1XjcT6HL!TDBQ)5jjSnjV,oYN%aZnU!
%5Fkg*G%M5e4$0KEG@s"XPsPJnZe!s'1%!0?eU*-sE-G*TPB4?3B@kIVZVKRtDlo<tn)[>\Epl#r*8-DKO&,XES\<lEpS.Q^Y:DQ"
%KD8bjq&j`+jMCM6DuSZHq_ERJT*iu`XnA1?iI1I'HPF#mp5VhL3IZ&]bY5l/8(Euu4e>e='Z]P)ffqYVMsJEeqkr0rMj:9jPE!QA
%ilU#mCb$SF^PV&HIXNMl\288gJ*^3oVfS]@k\9=.BBf'R,]Rq[c7cr&H$?=7g"t33hH=tNqg:Ss3cSSroAjESo_cj*Nh<e]CY9*/
%H2Du/&=Zh:G^S0p?,dp4r6*=OC%:cf>+2K_TiSj1HJ2Z>b0M^uY?nQA]@Tfc1O$O-*q-8TGK$tZg!s!]-9YMD]"'8uenu_AnL7T&
%G'SS:G^FaYZ?t?MfDRe?TVH]9OfRbQc(@)2O.W"Un$cmKs1WUF'RQ3i[sASLL@atTGMOhc-FSdjL%WC;H/U5mGZ*aB*?Gr^Nt2bZ
%BB?J;@XG8&>Vc341K^MrdW)E_c(1t'=jK;rQ]Fb5?%+rKSuoNW_Q+ZZ?DT.Eo^[!%D8):8#Nlo:l:X".*gK]/Ns@%2pQ$tuB&lN(
%23sjE(LPL[l7_OJc+TNNXrX&c?.U"l]BGVGlbh0%o>s_nossb*[JCM0e]TUYRABl2H#=A^/(l.G^[*tGfC=dN[F`@>am88`b\];9
%B7fA;G1sK@PSV5QF5Dt%S(jFt]_PN3>A6ZK&8`GZgcr07Z,egSo4B&p]XRL7_K\/:ig"[2IXBY[TCY!&Z]iqts'6Rsd@Wh8)=$=3
%T//JVr4TDfX*8?]H6rA>'@BU.S2:STo-]nNdk:RYPKprBpNt0"_q4X:7d6o*5&?6;FM&Q>;C^1G0itF&IJS7&4/c)'`3Xn0Qe[a5
%#SXUq<pGI*G.$mTL<9=9jA0K]R;9G^:H\s-p=Ra8,C`u0q(/:mUccl^mSCEJ7N"bg?"P/l+?6geYPA(//rgCq6bZ.kKNlO,$a%uU
%,A@80UmE"l4FFC7)V]2sq8HH"=KV+!8NRo].s/AcQ/YrKnrGJQP^f]T.V"0UAZYc.)7(WnYth-R2tf=Cs*1P#`]=:aVm/Qu%&l81
%Ka17LP+k8J^Z8`6K6@%HZ15*J%S[B3G5/V1M>q8_``dM0[+Q:sP\]n@"l';XqM6dCXu6!bYouT*++o:E'/\YFA)/J,<2to-W4/c\
%<\Nr`IpcV;d&:8$EC5#L=*h^mD`'<"feAeP=17Dq+8'$nc0A\([E_mXnU`D^NISd\+]lJ'V09!6;qob,$'0jV=l7UgD0*^iQ[V6j
%j3$C'f%,>aNRVq/n)r[*Dju0lTne?Bb19*&c^.#jmFpmqN^']`KVS:1NFqFSh0c>8J1Q'cp-W?LVhKuBeo1D]r:?H_loK$+X\D+C
%Fk?hGql]mjNu;0N)rg9:$UVGOi[42!^CK:Q=qDRk`;g9M=DLVHRt(Is'Ed/JG]p"9#W:=4$gHl-^UrIp]pLMEn4h?\dBQ[U,hB!'
%Ib+IU/cW->pFfM;qYIJSZd)/5rK5Bsn'RICe8jF+n&kqpg4_c*@GL;gc`W+9.pR+ZiP&Ui*O.i;s8J[=JCGg1(Oea3%g)=8-MX88
%*o@P$lgt'U&1!/Ym;T+'!c`UKeo*DcGF>,daq*oZIG.BE2tGI`O9=SJWr*r5Gd+AE^SoBUKhG<n;.gA[m-dM$H:R"BWf47[#GV,R
%9F]`KpK'l`69>-u:tnVoImKt[9C6>rd+p;O;>IZLor"i6hl.YblfVpXedpi\nj@W'IW;M"gg6[YaZoH)MiC'*rYnr4h$-BS.(p_Q
%C*&#%TmLg0M,2ti1LJ9f\>^aiq%);k?gd?X=2`(HNUAM.i@e'uWQ9LK#(5c%KnZ5!k=<"h>N8cA?UeEj:Q26pn(4hJ_>e#t&:Dl\
%rn]4h+)^oN9A[X\TFP>7Gu+/:cJK>Fh=ZE"le'AUlL],U@X_NU*A"!!m>]_qV8l&93u=<WR82?@n]leOh9>0J;W;e.D9lKpg:`p2
%9=0$l5F7X^B$t\TW">NDF67IK9I,qmicBsAq,Sljfo_2s9O`9+dLJcaG>jQl8%XTm[rRY7XfdpEnbDb:LUD<KQa!-Ta\=D`<u]u>
%o52X`>*r+"2Kq7)Xcr0OCe[EH\VrUiSpIP8T>NFPWn8qQ3no<0<;j.ul^MEK*C'FIe_tL@[u$B:ghgN"'7Z!QjsPMdR>l5%Q6CY;
%*e5)qlKu-C[E=E(C?hdfIe'\4&WAhGAP189>@M/lqOApb9m>$0O*==n2"cUrc:D]d4AR4u(8;8p`'pBTK4TYtR91nBnr@>1:[\2P
%8odg(`DZU)%p8$Xc(ur(\[Ad2kgORO<-Z5T[90lKqnu,h@^4k#CD.4O[CbgHW]msW^!MeqoTHg6;f?o2fu3IT',J[^o%@k(fdKS0
%``Di"(]DsTe_3RAFiilD=itQ)c2_qbFN$IGU:aGu0,B)ZcJIj1_L*Y0pCCX,%%"SiM=f@koK52WGZZK@CgHAjR\+KS`E(:,f1WCd
%]qp#+)O#-92*DaEZ<Z^:IFLM]Xef?9on$c%Zgt8<DPMQH`PTbs/eYd2j"_Of\>*2?#V73Xj'+/7&R3G\fM=$\fc;-+T$KUiD":JA
%!=)tff\0MP?=qb1=7&E=X"2BTkP[K:Aq.iTha,BmQ[r#5mJ[l=#?u.Z<f_6"`?glf8S.;rh,kV?op'tY-1dPf=Ji[>o9LsBVC,9Q
%G^?a&RCQZtk+>9%jP`L@0:A.6=Wltd?:NnInl>DC@D1:5&i8t^\)+e,Ai'+)HSZr$AM[7Jad*700Q1AX[ME.4B.DlaYY=cIM4LKu
%MsXcDh0qD-QhJ_VM+Ydg[5Cd"DEaA$#']O@3I:=+e;'u3io3p>g5)m)Aoa<NP7lX,')]'ZC-9n4/iFBdq<iJ_^YS:*`9'-r%\Z(^
%r^Ao#0^N"`hr;')HW9ZuK1^#nW\p8pd`5GBU0*i,<8-_b;)qlemdGf`dRV@G7e2#_+eDn@GfZT"m_gncc[N]F!N)kWH$e@=*o*Uc
%Ep;kt&^F.VS4f2U01h@V6ALP"?*Bh1-J.)0eZ7235.^T.'A*WM?;qCi)_[Bi=R0XS)C%Xml+Hh3^[K4.i7!'tUGZ?dK%RB@rsgF"
%>Ff@`?0fusWQp4`6TH+Ag)QVu\["'b$8R#lMbLPq>M[$I%Te(k!M-+GgWA9^NUD5j20nbsSQW%rcK'5%lL^rKk4b=*M6m+\+dY&V
%(U2+U9Or)<(hmRES,4s"V3`fbn@]rKH?kte=!0f.(KaC->u0p@Y$@Mm*nOV;_rHaaS"L+d?2s\6/tUk/4DA3VBqWkk!V_G`5BW(E
%IEO\s-=h!D;b^$ENL5CZ>jd&!njE]`"l-&,BR.R@hhE\4"("GJcd:]n?rf4Tg%g#0'bGY4%O-?V&R/JiMS?JM1ps)6*\N%3nsQ&>
%c%XqFesiLSkqnHB%3D/!92)5JgEM[M\fM-WDq8]FDW7b-kT=^1*BV6Pe"iFi9P!8O`*M*M8FInpdi*2:ZRRHDV0-F"-GA8k@6n>o
%+Wa60r%j$F1/1QmTDE)"*oXT/oQYk>1r<-Q<H;XokBdT)@sNRSb2SKteBg/r+dr=5.3,`[R#%*F"\7`HoXDTdIq"h#i-#TE:UCEj
%%8<#Ic/;1hbd]5m:`a&g1tuCURc?PsE7:G]8q2Rd_^SAN&P<Qcj0s,lo`6sr0^ar5fm$acl6G8@:tf8gAb\(a$EeeMhd7&W*@5*]
%GJrEp&7:(3kobYZ;2hU)\H[Q3<;iXP#+ND+q?TC=5%D6DahjOE:]5A)We3MfVgZ]/^YfP@]\>[&J7%/SY!($rpfcdcOp$IU=WO"N
%#9S>Jf68DHbOj2lqX1/-Zn.3^Ys,aio\`mKp>)_lD$C&$`&Ap:>oPIN%7XkR57s=FrY?%AC4oa?SgHt;Uj7HJm\*@&b;=lpA-'V[
%J+C"nZlpHm0;F#V)2T[UBe0,sBU?cn33rk^M+Q&YX09k/<D_l)ar8,>fgm/c+*YNZghFI.+3FH6:*Z*ES/6!_R,#1V[!4BQaCFHT
%9s3RF]D9"UZ8df]Z=auCTl"#$)"KD94GEN<eF5G.BT*n_W<'%>)[bGl!!8U[Pb&)OE;'.OE6DV&g<CqobJZ;-$):"J;>:.7R-(jH
%ZO?A)2m]jijpj&.]!!B?)^hQ*PO@";2R^4W1\trOQO"pB@E`^R3sa/WKrs\=>Oio-3[E%kH<m^!\:H=K]sH+m%XB2rEp<3Ul/-;!
%B=?Q9&"cRXoJUWsOuqhskX4+<SPHn8F:Kd;lP&^O'U\H\GX&QkIihjA+'4QI&V_&\S+!!+<d$7KUX$tjmI2$!lKh`DST,srYJ6-a
%^'p97RGhgn^o2K;%`C#`#J&(Mq0fjJX;@5(YEP%*qT_*OQF-tT5;"m7G7+M^aa1HEp"R;^aO#+=s':22T'Ia6ehW9oZg59@O]m)3
%#OYt\r=lk;0@n]TQRog>;)Jud]E%]HF+\-DFkSMi%QB4IYc<RiQ=6,*ht$!X:;2TGVUh-j#BFdn=i\<f&0?eM#")T(?7J$N3)Vc&
%HamDj1)lR/'r(E''QV+IHU$srAG5.k$tD:L)_V&-Pc:7o2F)'@130gnAPo7B(/7-29'gG,lK'PlnoK#aF4"7$d<gt=_5dlF?tFdr
%n_3c7h<i_>@002Fq7:JX!PQ[ujO*tK=Y;L7%_ikMHuhpT0>6A=f\J!b#*JQTjFk0l6/&-,DB_`Y[>k(\OM>\n5fWRol=DUQNrNO1
%+M:@7Q+9Q$aOSAiMgiN./<sT.!c?(D,5c2;(Vud6PL]]`93VX9IoqM2nY=b5=lCr;+n$eEG:poZ`-dH$:4A9efdK&eD-#CHE>f.>
%%Rc!#R@^K&j&P=Oe7n5ESK:Wh3!'g&bM3h?NdN4$hf=U2jjWJh:f:#6p$q-Yn*i?*5:p-W$;5N(]1FF'cK7H#=2.OR?p:]aCKA40
%)lGnW+,]UXCqgZo23NXj?BU#laf.t]Xdo;;`^;gR0n)NFcHRE]QZF&59#fF7Ds';Zq29()d(HtX@[u/cIj1+$D:\?&0,$Q&0@5uE
%^<OgdnQ[;UZ\cJL$a$mM/[K],S-VtQ?!2QTgcZcP4*GfeR8p:_cW<9:r%dqkY_Hb,`#[NT;[5I."mA/<A7K\l3b6)3gkQ<7-_bN+
%Z#otG>HViZ*tq9`\`'MiIrgDf'JU,X<d\KX;K("E6h]:F'f-EHG=t3=X6!$OFg+M&L5t]5;2!'8:4@,/YeGTfhp$f8>G'!nMoKV2
%Ra5An3'6$QlQs54niBu9XO"WPU22aZEUj:?CG>1#(AH.<q:u1rA$GHBq^XIZp-R,!*Zcuk0%KA`'rZRFLU7riHItE`/csqsc@O_j
%F.0^JITh-6Wa'mt"\M!Kn:j_Mn-.7@QSc\4A),a"S$t'o1\th]M782o9J`&apRP7<h3*CNqBd";]t]Z/^PXKpc-)AY><98f/@P]D
%j5K>aU(%P(bu&QMb>C*,WE_'iI2m:8O:f=ZF=pkH0?JU=i2#WbC4r+,X!O&ANp9$>@:f%]Q`.L#>.V3JiQ:F4O7S4;NslZgUhd#X
%S]"EDZCohB`C>/<ICA!V)g,h4r0:IM3jVgI5"rNMZMT4LGL6[5'608+fj<PF2K*VAlQBCu`durho^^9qZC6&thR`\a/"QqmWAZ]&
%MVURgX]fE_mp3-@:/'LhPHSMTMc[#X\"*2)nl$2L\bkU?$(N\mPJ)>2Q7-VG&Z$H&Cb[f&QT:B*@d6"BcVHu!=Cuu^5OYaLC0BEG
%AX+87H1M3+CdrL1j=U.eM(Qp]jtcORYFfFfr<=psCd.(ga,bfKOEuUjVSnfgcn6"dQC;)mbiek@)oQIdZh9['b$#1r7&bK"9RSZd
%-1s%Lh+kMIj/8BI2t$=Ac>*<mO]c;U2mgfPeina7g#fL=l9l<Qj#5^p"A)WkL`ijP_&Q+.M<sD;0+Y\:SP,kC[-Hr%IQ:>U%H^/1
%*jE*k;#1DMNrs7C._5BEj:-r^^\5M/2n%Ukc;]G`HDWZ'RgaH^g+0^E]eN8Be9=T=/:[o?V>^&G9kJ$NAW_C#H$$?Rb<"1Agf!]f
%4J_9<$lFToU0c(jf2?q#j^kk-ouR`EW.$]6fXX.7`>[(hClMr!l^]<'bkDT#Es^7-#JrEW\]ER="**`X4qpPL+S>a*\8I&`<HBt&
%*.[m2s"5jP,pqN7n15WHF#.%(al)Dq5FTb8m[`Dc>;#--o?(Q0V68U):g3;n4q7EB.Kh*sP@uu`s(s)`(?2Zm08$$s2DE7#"/E0e
%UTd0oP3u$/1cs/8hP*bbhW%7Nk-'RH+MeGP?S?K+S!(,.r24Tqe(\FBXETiPVh;P=d-<]T-1:4,L#35&5Au$G'a1>!bS3f1DDih#
%D@J;E95eK_G;j^R/<H5As+F"8j?r7O?7(-jZnfS4CO3^_S"#u#i#T@l&8<ET<3oi4"JmnYa4&e@_e1"8<NOC!o)/8*cMtt"_kt(H
%Y3'>>2M,@0'?_HQ7.H1]ntap<E^2)Hpg`T3gcQ*-:l3HJ>@0Jtp4ekn="=H(q<6`jH."d>*t=1\c>:2F3ag!+YHZ!Wc9:Mg#%)]\
%#>6S7kXt</GGCeZ4ENDRcs/,5Mp9M#+3*E?c>U%CLTU*rCM[b,B(n<&a<t-J^Ar<+LACo,br-ht+3o`JVKrc+gmi]nGC42@Dkosm
%5.@FCE`9YP-0=hu&.1]g4qtTWOOk?Pl85*7Vk0Lk':Gun;)bgE1R#_&l5!HmP4c[BGtcoZe5di"H5k&.TD5h+T/jC3_ehoeaF3[%
%UUb`URAEtt=?1<o\mjuOA*'7`KVnj[V3G?@^FT"u%sRRZ3DK0^o2ig<[9?-2=Tan5`l+Zt\HZ8X0pAS3[A(7Edp:5SfAhdabLGtB
%++YW,3Ig9GG(LI*fR)>NfnKPU_(?qgl02g<SF8!UbsnUhI0ecpD&"Z9S_8qkbg,qL>Ge]H2a/?&7g'>TR-eVr1s+":?7I!irUt5Y
%2Lt",F#/$t]j8]*VCVJiMOl/?Z-"DP)\0\f-Pi9^/3(DLEFn]"fj[-jSpBt*C@<u^?\sL5X)GLNAQc<LM&b1HJ>LK^e+Ljf/pWgt
%/a[\,c-^@%eo+<&S119B0:BB)@`_tSfh1t<\s;Z\1hk#;aSna@D,halKRUU#)N9f%Gie*12A^G&?BWI#8)T+q04]*_j;qFQr+tY0
%H"Fh'/aoQa"D)f*bEiIY+KQIJUdsGoD`3B!2VIY!k&Eq7g&_#J`O&(kC%AdEqk2QtAm^8pCIE5YH=]#sJ")>2Zgr7#dNs9l286%5
%dam:;[PPm\at\_.g?-E:IHuFuAm^M2^j_n@2RBn#l?j`kea9-VF`</f6"05pV.`['Pc?j7kos32kgRH?,)GUMHu@B#J`usoGWrGS
%WJ]XjnDKV-cebZnZ4ORg?%;+pjScp9Bt:4Da$ur[]T#d_l-mS[ebgkK=loQN0Aa95mTe#*!=N:._0!-8)o"06RjoMYq<d;!rVY?s
%qpY0bb%I449_mm?&*_-4gbdU/c,cdZ'=@C$ZME'S`0QO<b\c`&3`>eqW.Ll5_V*cG"XCkW&bs@m\`o*qgu`B:DLr/ZHm508N^^Y?
%V<croCoKC$VRD/!\Sf6ej&8MIHZ\=L7WRS!IU`+jTpO!$rHj>ob7KI_/ejJnA0j1e*RCHlP08^DgXDDEfZH:DgW*NTH%D0*@POA^
%<6&Db"L5B:B--S@Zh0QE6*!pH1)6=-GdBo8>aPd<ceG\W9megCb":2/f6F>L)k/@kA]2MRK1ruq8^BC.1;&W70Q:4N^i\n<UIMHC
%D)[A_#BUu`1OS5cIj=@ZS&OnE>BkG2&&KsC%oWp[7*Z2n+)u3@^6H+Kj5.NOH?b<CqAcc`qVBo,>D5QH-(=i]mmF68?L")!][Z:*
%^@,@7"$<?&[Jfge'gPu_QSJD\e`"";/:XsVjhLJ<B(k&!XA7cY[,QZ92Y>J(e=QTIs)>uJO^A1aK/*:DBBeB9nTkJs/cP-%An^h(
%1HW&"+ClbPh9UNllZ=WZaPkP@0Ug<1mU>m)s&J9md<kf!nKe*TnW1H`7h7g(d-l>i=1e)Dd>k7JqLNpk*;[KtcZ91[^BuPl^q\Lh
%Gaa+')LkfEUE9aWrEgndp]LQML/6+qqo>'K`qIETDoGiSDt#&4KZ`iE`]._WnQZr57QP%_%+VKe&?=a,drGj_dLR<%l+dO[)`Ou3
%KXc$$<A9`Y7oe?2^hEcXi0/7kTG'7FciEVnrc#P0VM)c-\42PqE?fjdSeZ\oNf64<pO!e.&?op-j/Ugk#EJ*MaGi91i$-7\IG^<"
%-%&\NB7^>-j5;m3G8t#kio:P5_aYd\N@Qpj"o)<`[&UpNOQ*R[$epkk9Emf<0`l"ZI6b@k!Mnbmoa)>N"5t,&<X''5IPX<MMRu+l
%Bfr2\Nt<*TnH"<XJ<%B0m28#Ni"[>fR>lAQK_k0dHnTmgGI0hu)E=2O!tY58&>aaq75U]NnX&'W=Ui\<Y\!4B-,*"e5Vd3YKch0i
%8uI1[B_VS*7A/rr$^ALc1sQ]?'0)Ga!E28.\FBWI=u[fm$9/fPcTkks8`Mr#d%_p/^eP0r!i6dqCMf]/EBc_)U4EBkJKS>5@mPuq
%m*H9MgLgW@$(f]Mr:s#/%@[r[AJN"l1n@)ILk8UANZP;1>_^n/B,-qA$XuV6/mLc\""ld:J1Ve$:Wa6h;W?#e0klon\8XP8GQ8S*
%9Y*u(q[R'=\Qf+n8f),]EQ99=;*OI$M$m%pJdh#*p,n]PIg[<IH6$uEctNq]KB!$Ji=DD[dRo?9mfLO\*^H$S5\$Ub)o*=gCln,T
%-cQ/gJtt8\*Wh>l6Du7HN<;@'(*jn'!SW*`(5+n%?=G))!r/:YdM41f0T_n!5a4+J"_aU>#W-!(A/Z4kfolJ>9&i23"PaKMjo@h5
%H<(&.Ye'V&C#IYorN<^g^>kEoo3=eKSjRXT5E;lK-1T%+'kfNB+d.<\*?^!lPt0et^/<*5*g68_TqHa+T3m#4@ZT1R=If^2Gb?(Q
%cN58C,?_6:G-l:kQl$_Ig;/Fb:P&;_!5q:8P!OPi/007IT_T.VA-+U'VW34\?'\6I<?Rt9RNmdtj8l.B=bC5t%P&7P.T@KN*Z3dd
%4B*2oA:3BO<&.4alQXgd67=6LK"/O-+kgQ7nH_D^WtYst-S[MEARP0J#bYUf!i-LN\0Qh0nf5IS$el?C$Q'6J<&?:J$uNpM*M[mc
%Tc)k$iM/AloN7)UX8oj8^>XVIoc:?Q'JeTDYUZ\=7'5r1PU$H!K(4N/U'TsKc0MnUU/<5`@6o0RV&2fU.?PL,A$rBD&B+VN??@"e
%b)+dQTHXp_lFEi-:fH=K2DRf16Qk"@*Q,2f=:j'f.%!C!/<CnXqXHfhL)<l,#k7uBmNcb*eb<`t=_Ycg7cCX\Gu2[?7MXo"m%FcF
%2+AXc(O?i3Uuo"75bgM/'-N"jGi,8dAR$0-'G[uY\76&GR"tdtEda;deJJPn$'5D15[33@GpcOai.,!b)Gk^:*gL[S1hE?"NMdU[
%HqK9%$TeVjbbbI>#1';rcs?pP7_/e0%>R75NZ\HA<\["HY'1KXClD2[TiH2+G-&Z,*2GHB5`[tm.0,Z:G$MBq`3On^7gHOPYbE<M
%!t%3N0[s@ggAhSsb\1<``e@i*KL2P\S-U,#anR,W!0VT[M*S66'ebKXm4/PJa+4FUL("6;csjP]Z)*/1J9_3TOn@;dJaX=;$$t64
%cNp'ki$,Olg*P59!C'fe"@+F#?pJ*%H5af>#=YT_cm[89aMc.FSe&u[mMCG+'SV>18AO8M97"fL4)#e%XK`>tKE`/TZ^Ct!m@i-b
%2V'2)iM#E<?5l3rr/kBY*,&<%P.<rQ:rrV9+\r_9J-X=18+;7!l:&KTV\G>clp"TVg`:>KHW`UU(W?_I@$(]tg`urJ=I<6RA-6EQ
%qJ?LYfXV$EcT?\*'HIrS*nk)hG6gANU'uh`!:UngM!.qXF=@7Oo3#Lg0[>>IJh#1W,r8(7G+cZO0udjf<NuN*^>KGF0F364[)7\G
%&7P\$9-D"ZqO7pZo.X"O+LVD^'rI']KjE+<3WK:hL^]CkHu]POPG_ZD,W9i@V=5<)hCVG,9T"V6caj/!KEP$0ULSpORA@nkL>!@9
%UhP&2\iJu(dBg'*2UE'FKgs2(,C0df:a74#RTSgZ;cD['X_!\5_4ZVg9FDt#K>7T>"B+:l+UDNg2e4;\(.Eg_.l?YOG7'C!#='&'
%3!lhm3g:h!@Ma,;;9&u>`fM*H*aJ7L_6ZHa:9r!X#e67.@%:'E.FJ6q5XPk$!q3uq&1\ST#o$k,E*nab!AP4c0'4NXVlX=BMc2$5
%-npP62&N2)Op=6+[EJQL6!#^VFgrS8.kmp<%0K-o_B".@7L5gh4i`-oiE6%3;=X,oTTdbs-tFE\a0Fk3&:"*5-A,3NLaIM6i[]Uq
%'QTY%XU0LZd%1A<5nNP]AZ24$lFNe["_o!ocROt:!+_nGcT6ZR6D,399GhB':X?1+)I^Q)pis;]n95'%EA5R.&qOFhb+]6:%V[>A
%Ot25/@sqp!3&3X1jiQB\&=NTn&(kN6_jLa;J!+IQ*Z)p%(c!1C1pd99Zb).@YdJ`F2:si'%INtmHNQQYOTB5,+>sc_#X]XQT=4#e
%ZM";'!aWgiV[.q[9H0<b*ha!["\kt>XL3.:GlakkZtBBD0*`WHZc[lUd/]uMNK"KA+eB'8AMDiXT)irQV][LK4pA$+PYsjkH;pU0
%j,OOid5050F<4'Z=f-Dd!`Y=S"tE.X/-Nco@r2=X`FSQLgF..t6MD=j*r1Bf<Jl2,&efkY_b-EY$j;*fZu.??9AI<L_4F4:#eXtd
%"28^[Uc]h\8uo2]&YQq(^4gmO5p.m'0f+C_`?=,Z)C@^6T`8hAPlaRX&;:"(KV6FP/-kP8,01T=qBXcBq/aqrOOimZj9I_Yg>uG(
%`K)-m%Nc-"o't('Hb;EbM(Li3R7Mpk'#sbZ%N7&p+0]REU#;OH4O>6Ui#1ZW"?A(pK'9dR)TXsXd_`e0?ibjM6<Xq:M.OhNfb"k"
%[IC+_3I^Q*SX+Ub&MOJq(S<sA5V25pG'<g\jFMZ[[fnr2Hal[E%Rq]C,*)aG%(e-\r+2p3_.L3[KmFG<JRe($f!XX:c,63?*BXlg
%+aI4M=W@&ZJO<_-;04mJ@<5cemO?9_"c?PSE/u$q:G'@5ecVi*(e,++SMs5!U##=fl(f:0S6C9@P/5`\1i]7ndI#<qj(Rc(6Yl`0
%NT)U\%)[aY[TncB)OjDqo,&A_YWPc<#Z6@C*_0'-1>6>Y!#fh3j&<*6huM/DW"1.0ki;^LG3UaepsH5P&\MV;<?UF]!blTbmBVJ@
%4:&6_^p+8<%,+>oKFd&`,uA7uJ@F&%d8Zg=%PV^CGRuRB%V'u_H3&S]Qii/J3,8`'V3.:"0qKCRkm2T5TeWu+35g^TdVL"V!"e!9
%8j\'+CQk#9l=7t;+S-GIU8(QJ#I&2ChY7oqU,iJifN9*(.=5"s8d8a0,WO6Z=s;hk6/89U50:"(.<jg2A_?2R6.Q%'(tbFd0,+FJ
%2XBZI((]#*&_F*!3S'r2(qDf6C**2(71aMJP/BHP0ao^$g(Qd#-N\oWOo&midMIQDcfJgV+Bjor!:GT[HmAlV/dDpN7C`;-4jFJQ
%epWUD#-%[[0fVnEYY,N]ZQ[Bt6J"LBOt8`'Yb%$9A;Q)V3CKH:hkrq&`E9#Y>q1md4*ioS"+gIWS*f^**TaWJ!hQ\$"fC`tZ#Frd
%;/&nLnkWps'ZGMHN_R+tkmY*,<`'cS,DgN^N[3-Zg'9E*/nal[gBlqM&3IpO+>#RF@7=5/b%C?qT:X#8R%/ZnY_.KF^j>t[;V%>r
%4LrX#Yb3U[@>#ePO5hWD_46AF=cgRdY0E&YBH+RbTJVEiQd(KBfU$X-RWsEe#$a8cOJ(W!DD'ku\>W7]H;fA(3"9V;e>U))D%*0R
%g)t^mT`3FL`UtOW?rpI1J-1\.)Q_4\_!.P"DNcT8al%+T<#TLBM5_,)/?=s*%nOK0?[k,'[gZ._%#=-iBFp,F!-nUG)3b]iBVHC>
%g(&bViO/JB:Fh>++L=^E:i_l?_ghk'q]?].f`k0;@7eE$%1#;+Nfg?M!@fX<UC:23(pdrm-;T^t_C/%"IaU]1j<-^8jSOh:2^$+p
%PQAi8-#IJ4T=e@lK[0k88Vmal<6A<bEl_-Er!9ldK,`_2GRmFIapTEtCL+c!##3-Y7j1$LM\'GjN_jPF8fH>O-kp"@-kNljUDmU%
%JAXee:dr_,TjYbFY&>g[Qk<3L`k9*g%N0RH,]mAN'SW(H!Qu8UBM8h]cOLj"LD/KWc:QWt%dPoEr53"cK0[t%11@o;DDn^?E#b>f
%JU"Cqn8/5rR3mnb:*,gHoMk2Z7b`;0VD34$+4]Fs@HQ,7_aFjC8uPG)LerQ=Q5`YEJAr^d_0cn#K:(G:8V.Za-i0aFWloaA&-ejN
%2mgjQYD/b/Dt*H/.1Qc/N8j38i2hT$_V!'ck&cG(!&]!D"SnQ."V@jULp1iS+Q%DeScYP$=+$=>JQQh&`X_Wp_`iXJ%ut[I0FW-[
%GKjMb6ZsG+NQhtokiE;,@.TBf%gPoIh)@GJ:8a&i.)q+9Y_D0T</V5&Z%/(;QX<ng"HjH3-5dM05X90`?@bCsC4I.9.gseFiTL97
%&._Bf)U.'4!]?3c^n6Dfeg6-:KP1U+M`/f_IO_:8O.jAP/enaO8#s-(B%[J98KD<&m+O905f'P6Hk>0G$k3>"U]"Uj?Z=!5kH-uT
%:Xq_2i.F9s-mbIi=R(R5^-\QH+pT2r0goJ32/VZ\OrRJ1fV(di;%eFFPc@%q93^*PamfK!D7c<0[+h?t5<A)$9dbHic-O*K:he"W
%$;`MiV5^,bSZo9YCY,EgW02lF+N1+Pp&I7Y@P36,<A@%$!@p2NV?9eBR[M4X"GF_9)q#kE1b49Y%T_%qBp.b>["s>=(%hWYHqA!m
%0W[%2Gr0"Mp8kY<Q6nKPn.8-IML\#('8!T><''`_g9i)GJB8#Q%Wp)M$`F_jQiZ4e@mSfaCSb[mAdDq\i1N/baY.bL3F.L/$Nc_2
%?"u!+39XSHTJ(MZ3CP?^Xq>1pL"IL+9*TC)$Qu+AlsXlghbIhdoYLSB892`k/B7l7q:$me%'G5Oa(<5G[,iR66e)UJ=csjqk?$+.
%j6uae4`KZhVX)(9_La7V#8L9FTB`H1aFNQU%_;E[:>I.P5"I5^E&H05N>.\h'en+;Xb[1?@SAqZC.HKN4bAN<b_BUA_\':d=gGsM
%$LhdI.TpoJJ-#b=!WcJUjjQ>?TO$kX#,hqI8G+>t7apcl:gsNDP8e6m;"#l]&mRk\eVKq>)O`_8U^h"GKItBY`n%JUYXLb:F,IQ5
%a=WcnCjt/*0@]JOafM^16@[H>NHU`6P%.3S-3YE[#,F6S,CW#;$DSd<Ej5?)YW%Sf#d1<47PP@&%KiP;$04uRdm_5fPM]Qr8fC`1
%[-g"4Jd2Y%O(tg!ToT9_?Sb6@5m!CCCP%-foki^@VWP^i@[A_:7-K/TeAeF9+N#@"")&%OPbBjsUb!?OAKI0p!+Llm_W[!88;V(a
%Eja2:I1$+!X)6#`nIE-'-jI&W(ImstFJ-K2k2)'%I[(P7F)QV*e<!Z+11BTBq=^b<U=:L?BRF#ii&DeOVDunV*hMm"^'i)_A98!'
%`J=*f&cmjb24)3c`@3HsAJep`5[_sL^4^g&$GtkhP%,%!e0A*ddV@n[.crI.1p17e0gpD&9$qK!>6V>>Wp5#n-d-0?"0f7l//%_9
%m*fD&&)ma/4,:m+j'jIFD@)=Q!Z=JtSo80E@lM[l?jP_aQGtaN5MBSMbXZ__Cu"$(/e1ud2^&,:Rq+W4pjtS:]aTkL:pF\sEZ5r$
%@1]7i$)d,L.=BIqp+Y4[=H:ft*'n"XBAFE`H%$%,j()OR#D-u)#SJm4KW77Y-R@p]KOVcc4J7-H;`GNq\Ff-:"'aQu<1S$GGYoFJ
%QO4]B;mE/"R3"g8c)8UZ(n2\&K=S-p>F>OecA:Ot/:i?$/n&&\S6\SrZg7H94Ka)JiaJ^Zj-h[P9r2jr2"AZ-odG"8Tt_'9Yg%D0
%9b@G-RY6Z+4fu7fjW.!jD9)bjWmnI@._qTaCSJZiX<J1-*>ZJ2)Kp<RaaOMo>B6VN2mn@B3&_!r<3[Cg%O[QHNAbT%fPOGKV;(?>
%":rC6$P%T%Pj5Rq_?LPeF+Aeme8MGiI@r0V)u\RNqMF@k'kJe16Bg)=Q3!&:HZ64CB.3e:.28qo!YM6f*\S[>WF8!Jk*RmBU*r0_
%"]UI&#BnVh<LTZ\]%jrR&8;fU!LB?H#k^mTWX)f4nu6%?T[K%MMZuJ7'%C$J\%>QK74W%jW#VRKCee:Cf5WKLF)BS2F,'cB26\']
%A-i*^jVO0hZ:]Wu-uCE')Tuesbh\Gd&T&(.R%35H$m:L(s,i^9NJ?6rSF2)U(B_'HN_mRLVOX[I=Ht_3ce2%7f`TZ9>ZC7(CgQ,n
%Z,7ST!0gGL5\dN]Jn]:H.1C?`;IU?P8G`ic5!.9DAr?+@[[(W:ACP+D#`/R;-eZk'Fe(3jmSHXho1bBo\1mMF4KG`T_W+-$(KIhB
%[Pm_(N3W$W+ZM2o]/hW\UWup*d?8Z2dEf-tn\kQX_tcLN4,P.s/EMPr>uUrZT!L\&cRu*C.J*fc&CQ/8H4i"W,Qa?so5->q>F?IF
%)gStlBs:XW\T7&JUZCA=_M6>Kn>+tt'%dh=ls:R0\BbjQq+b<Z0,]>.UleUiG/NGs&$s?Ih*OWQ%:kjt63L6\eE*uu_$2em-Riph
%`R?hrQiK$N\1CYU.GHA4[;*MG5(Ptg>C/[[O*t()S8(Ef-ok3W*$$@F4i8n*`?D+Xd-40/X6"@@'LE8>8*GBs(1a@<&Sm*ei#p*C
%J\tHt0fGp\fjdA>ZW0C65n0ui4IO+WN+'RB9nm-<@m:4l!F[.9MmEEC`b0,BEfDYd#,jfRT",:?]g>GB$8B.-[PgcAQB^1e2JT7]
%=r'UVkLjii11PQH2ltY0*'cBjYQJ0aNKn`X&OOSm@E7!P)C]KSHPEu;K8B2;MUM+m2,(jJ$=ksY7s`Z2VT(gYa"Ra.2uuOp+)sO,
%?r0I3^eViq/@$^B)O;4,@i<ToS,jdp<47nrX*<>p0#K"]"=[bh7#c"QS`>S9K0rBH-SuO8@jpOD*PtASfC<]YL+>OQ\Z%:VFi'Y)
%52b,X(VCeVj/g%(Y_Qor"GJGU!5eATR\'b3ku]>pFpueW,c(-O"pKG]Z9.d5)<3^3`@?X=XW@+4NC@5mV"F&LJaIj$P+K_!2!,Q"
%="QSS!BW3bdpYu7l8tq!2#A-Br[C!g4\GVr.-QHKJO@/U^ns0=U)b79C[n7!CdLR0$%rr'Q3UMdIUiiKQar^4rd\SBUc'S]JN*@A
%L5rTIM*2K-@(_:=3+2F#o*5QT90`(0*>WmQ>"aGe%;/`Dh'R!^DkQ2t!_HTd^c$Mbn/Vi%L2_"Q+SA]"4;D$[m;T.b[l&QL)BFGR
%eo,eA,N-]Q1.e/6$ATSS)piY`DJMM!:*p$(+LJhN+YglLNNhmeh?X/8YYEs+qLMP&h=D=n:mYpa8-)=%AM5nH#725T9=&Dl^!obD
%^(.'_.9a!A5kJ2A^4q16;=)I8-qe>-;dcP!)H^>ZF,+2i2ob.*g-28[`rMeAT)g/MM60&DEbu+Uo4cXc.X3,f+^f_WmZ&C_$-9pB
%/p+35m>>)eCu3"g;AV54\3B(fkgBN`C]ONa2n&[*W+(aRBDOSm+@`i0SS;muT^kR&]m[=b6J5lSqV3()@NUB0[;OUdC^`aD0Nus3
%b>6Qk:!!AE"$qp`_AfBO(g@@@fOZqq(5$4)fi0XJ78"@23RM(DlBJYqV4sb,(B7WgP.VCM';Fq8O?Ff!Z?=W`'=Rr^N`#.u,LD0m
%3/j"lL+DX,6teB4eSm9P_DR>%5F/",@O&Ci2*FRd+@s%OOkP"j&3d.2*/LJLaH$e?>T:0._$G%7*CRAHX<Z#Y'O67#+8Z$>>A&-$
%[KiM4M8a3D(0_k;>]N9V.g8#K&Gt4LP-.686YdX;J4I"!WhBW@\SY!7N`K-W'T2C:qMHackSA3W9B@X-:"#hT_U_n4+/j7O,Y(_L
%,X3b\7OZRJ=![PrPVSIGTo-!g!?ML0R'[.B/`_ke3Kj-I_]/KKI68>>j7j>.dUaN#,@gHaR9OK[Z5%IQ8rk/Ilk:cCUG(lc9639o
%)S+6%n%9KA(r.,PP]hn62GE?=LPP\_RcPPjm^>^?oUG,7fI06Q)Uq^EL&GppQUahKoAr+G/("5_Q/^(<lCjr$;:LA2[b6^f\eKi_
%>eKY[mpf-p5gCTTRjcr"+I<NWP0,"NcbV_G(ou=bjreK'K24*I!Za)u[LrdZL\oN@&DNpa^KXJ^@SLFoEU(DMH\9_R`^D9t=ZU^?
%)+^5b"M.a7_9RFKcadm-@s&2\WQUP'3%7t=Xqg4>DF'q'h:OV:cRoU<c^?]-FT@A-"02p2$]IIj"'qu3+NRltTop`@%?6peSrKO3
%[G*S@$mTTu>T/Bc:'\prfAHck>hfZ+q^;WB2B*BC9rRp.4DaJm.:c^`)p$S?="gQHY!`1)gr-+pk>q.Z5[X=qP;fm&@+d.<CcU@g
%8>X6.3M1AZ!>]0Ik`i?;G=2$UZst;aBj^FJ_`X6Ye;qQ#c>_(S=!XA>'R+7P5O=*>,dOPmi=-Sl7NL(l<.$OXX2B)X^u\a3^s+Xe
%0^`+^`:/n+';ijU^PL<NgmB;UG,NOV38^'G3kBcQopX7EG2Km6NTdclD&52dM'4aU3>I1AN(kpg4s`[^KNjM@S2l-p,qF"D6&YWW
%2Y+H-dK_oD0"]RupgU8$_`WF!X5_AeTu0j;5qA>bqg8n*n0L];6fTF^l3P4S+@rb>8FkR&<BqqEDLr#sCgfdt9Q8;`[Qt$!J1nbo
%(a#XN'!BJ?i@sUZVd$[Z[j;<2AHi:jRkW9%rF`f3N^>!</R4A*r^u:,+CW@S[(XnN8fRK*G]%BIgcg_86673W2Ms'h1n/)`PSic?
%7ksO"i^chS_p555)Ib-1duX]Q*#kt>!UC*HZ#OU(AMd[o`p0RB_^eA$FL;0SE9oM[K>S>s,4#I,Hs>,[@?81L>uH7(a+B[@lsW_<
%2-XJ7Y04_98,<MWgN:KTR'?N1FKc]fG)V3tl#J1IOHc.fS-GnL5]Zu@>[qV:=QN4t-;AGdNT9MF@:X3>'dAaZ/#B]+_q)S5GaHiT
%qVOX(Z8[%C3p`2W4n:!TXV'4=P]^g4ar4V5EA59sr?O96TX21.?8;De@mj9=m8Zar?>:1gD'Lgcn8(CBnm#l!aAKf)#[Y8W<Ufqr
%]_I#Zo+\<H##r*;Tqs0jO?a,k,oTYr*r:S2bhedW$\t8Q!<oA$U:)+B1KL1TC_O$D`c0gA\A0'VB_AS;<tV25m"RuBf>g#dmKDg(
%CI3Db5b\CeTUH=.:pOiS/dGA7Zk^"OfY([/2\%<25oLUqL#()=<-b'Fq]R(;;fkOVkM@8QKng.aRSB-h:)[#dmbsfr1HOS3C>.-]
%l]hjn%c?$G5*Y#Q%`eg@d\eQ1ZT"1CaiZul!?:^h4\JdPEYenfI$/?3*3^&bJ0DE0,Iup!ct@\>\KSn(-qL<(pbQ5I&>/<kO0'T!
%k"Hn6M%ZN)P1Rb>3^L:A>>W);CI-*@gr%WGhbeO_KY@^SCT:Z%&<hr]D5CkunOU^OqlnV5SUA(\6Ub_8E'HMCM4pt@<44TK^$1EN
%9l"Je/^:7_`lU*].tVZui?7PX5lR'ME]n6SEpToI'6ZhPT-1k]MiT3KdV&b=[RUi&;,dKP6[dS;7hD@"'$B1uKh"k`[",O&3UB]Y
%L<&O$Y^nK7Xl<">Y/ep*hljlNo)S454gkM"2-TQT+1,nP_<\mgFhH]d(kF7"pPj`@rMLnCNsg=N$u?7$Cg&*bBtVJ.E,.V6<l,5:
%Gc*%<Pa-5GF/*/F;Gg)?c*Y:k-,2,9SH6btI;D<Ff5L/l2=.@tL*/[(_I<J#i9D\eJumE1('rnuHk^?!dcLb5[>I5#Di;r1'e9@Q
%)a:KpNW'ZEgsEH*fX6>&)fE5Rho]o"LZ;&>hD"N*A:l"3L4pl`$eV'sY=aE_'me=68(l&D/i$+;!B1qbCJ`XiA-0(3[db4S+gHA6
%6'O1bU6q]UkQJDMX&d_q8AsP9['G[P#a*\X#A9T[C]k+4frKrDhC4V3cW8Afb7L9b3tsSonJt"m:U.YJE$5jb-ef\saMG=5U%aK'
%.,40N:n-jg)%HId!FIYA8tL2"KG/7A^4la'6I'Dp]hQK!.HS,6n;:CMI(kf]keLf01oFVaiRucg\tZ]MCU*dI$[c._H,]m@7^dG/
%^.TOr<_!9*kSMq=&ZE)+]P-hL7]\^k$UfO,8\Xd]D0lD[().hOKJ'uWn"gn:6+4%KUi$1)\htLW<h[`7qO@Y68YLK<km2_E$AL%c
%6/M'h_i(VG(QCo2hT^3<p)6)P3e;o;bfHOtV\X,r@WF<(ImI0@npT8)L=JOb=Ss&</('P9m,,e/T'kn`59uA$4&ReOcaV?,-nB\Z
%OqVLnX9;K#%'R/KhmQUMa.2;#M1BZ6#k\pVRN!8RpC35]#pb05kQ4G^V0U7EPr*%S/h4(#2W>F<m\*t-J/bbu#t:6.9<f9_;6hXb
%V@F*U]>5,H96$@X@=7IRZ6-l-m.Vp#>t+%kjFWgeD=98OEiBWqGfTZ%3$[$7PgAa"e.fb[6QG<Qe]%_<e(aAg3U>Xk+L"]'9R?Yt
%@ln:NNHQ9b/4A,GmFcAeh[FWRn81>4qE+Yg#$l;fMCeY2GR7W02.RG7M8:]b!dA:U@uc^$6a-6W2[g9(YSi,9<PeE30^jR:YGfWK
%P@s.>-$e6o-l)QaeGl6?5rR@t."n;J^@rnWpD!cV\G5N3s!;h9M*^"Fj``CenOs=.<&@?P@H3C@^^olA,KMfroI;e3Kf:,'X:>#m
%,,n=n3fUc-?,I>R_s2`$+JktIjDu@Mh2m.cmb.u.TqndtU8:q"q2ggjBif1nF/aLA+O.!p['roM4d3Tl2SdU\_4e!le232,,_s-<
%#s4%4AQ\?'q_qhe9RRICK[We&4+bOT-4mlNUr:S_@<9P_j02VhSH!]A1e2G@0_V&AJWrpnVE!q,\C<ma"!)hT#%l<cXVkYfMCL7G
%fEg<>h*G/_d#&e]<s?&"SGJ,j3Xa6+\Wg@'cVd5+Z4';jocp)MUn#_o<!1!L#1':]f+Z`V@_>?MV-L0b&BJP^Sc]Zu/2@Mj<)p/&
%03f84$EO(ija6Wu$FJ?2,&he[G7K>/VOb$$;djPe!;<8kXR6nD6R[T>QjGD!$pA>K-.[UTF($a46!=`Dp0gte!+B4hL.?hfh10*'
%&\Wg6\Cf3oj84jYpjtF8hg:$i]H6!;nI+3P,4.s;9I4"8HY'/!V&$uMA]M"hca=D0qdCiiQ1"Ie$-K+lCjO`R6Mr:Vdi_2McnU^5
%A&rlJXhus)p$7CXAI-8eL:c4b?saG"4eITap0bM2E^GkmQ%+!/llYUrq&O/_M1IBdWL',-_(.X>jq\G<h,W7.mEP7dm6\6OeTE9-
%Y-Cjfs(h"*H7hdLlJ@^(_m^Ki(:<Z2=@12%80bqP$$L!(BcA>O7UlP[hfI*gZKh.#cO.p/^?E_^\lJQ`LiZ>d4HX7ifCk]cpMd-]
%8um]7YCs%(WVXhqM0.D&b*b=$"_nq6gk[6p:^F4_iM"uu%4OS\Ltf#Xk+G-m#e>&I"bH`tLef6_'\TC,<I+2r@S]nECT`Hs+Tkf:
%j[*^Z0B6=@ecIL*Ltq1b.Ye!&;]g5C!@_eb![.%'X#?g*Z;UriD)8&R_N`"?RLs>Ter&kB@8O826r?O1$p'r19L10q+Kj_JblOhp
%UoU:@(7s@c5d]\VqTP>G5Tq]d95(TVMKq(A=_/>BW2G.VP!U\#?u7idj(7A*d9<$EjuT$C4(=M%/;jtAb_KLIalB[anrj/Q7Xi[F
%ahni$XksgP'uEaDAg+^aP2>,(XX9@^2dbe2?f=6S)9EDC?uTlMP"3b0Bie,6$'BGJB+TZ7d]Ecb;Pc(_o+Q]Wc*AVC[hqM7Ii'KH
%P[p7-(^#8l%*Tb_e1b`R'(Ci\\;`kP6`89%^kq$A!![@o0G',[&d"8eq+Sc8rpcQ:qDcRFh?'mCee*U/B`soY^ds4%N28-d`hMQ-
%"Y9cJ@IF91Ng5Rh(d51ZD;2Fs_?EZD3P@Gs^m9O<+KYs3CiDX/Y2%e73.@ZVjF]/>@S_:u)4h+0T&Eu9m$Bo!;Ou%')m,9oh*gsA
%;+s5WOq@];&i>,M:(bXj[\2m\"'Xd<F(cXNJ-R!F6t7u>2SrqSTg1>a$0*;oGB$GA&[&GHlJ=9Z="2tmouh_H-r)@?M_oX?91eq]
%<haq9\S5M\[aH0`^KcT5m/o[5`tS_q+Bb4oJl*4(d%CI-Q2;1.!rB>8>;b[Rm_IsAACD4mV,2+]bi_]QOshYIfntQ:^lIZpMTci0
%/`c2?+VkB2eVK-(^1+n+-j>qmBYi"6:]7Y_m$YtVVi%,@E%7R3d/R<j6W4@)^C7Ue9u;PriG&ud]L;"40#etnX.FZnAc8(GA`.4)
%0]`s@4[Oh_i,un'4s[$s\e`r=Juh4#!`:dr$"-)^NUOE6I;LO\+C^%`rG>K4Se*k'88MoW;+.j@-W4FEbZojqe2@S]T(+fRg\J'#
%m$+a"1@SuBlU"T!$NNnIU(ca0s"nTtFBPR,"clL<f4#j`eo<\k#`R)XACD62*_AIJ=Iomo.$P:tN')1l$:Ur6J5j$me,9.Qjti:J
%E\`K%i`d+j16rU:H@,IQ0X)(698,]fA]J7RJJbnmOPUn<C>[LUd\-@`/!"CNR'#2i;CCa&QE>7r:7MZd_H93$7hCEDYR'"-LqCLV
%LP7F1`Jp2=,$:DlKH:tNfn_NM&;n[c_X*M/p$$<b7uP+sQq=2JR3*mj!mq$r@@)O<+tPq+I48^UY`KT`DMW_G30MlON_2q)a\N.`
%Z5Sl,5f:emT/!HBnJPgFZ#Wd(Ai^Kbetn/RI&PsUpcPThN`h,BOPGJd9C/g*^ul$G/TDIuB'*R5-\G!Y>i6^Y/f*ZM%M$f#C/`X"
%onHK$egSg$EhJB+?mI4J`AHmE,(*<oM#ul_-U8'`.m?!*@SfV]/+hcNF&JthL^`iAOGDq/AHfDM?qB9h=BK^?8Kf_o7"kC#79hd!
%7$2ZsWp(.$'.XVd9%BCJ5SnH0knR,g%k?/=9IU9lW"L"I;jR#,His",W%if)=$<gcSjS)T8O,R_1Ri8%TI(g1<u576>RAVjb1KO$
%8]XQ'Fp9e7/#,ZehX`9El-#s"(0ElU#kTI/Td=q+(Ia&fD'eKUX(O0jE*GsGU+!@8RP9U2F[4"uD\);i&-];J'QT^Ck35Q!X_s\*
%WW5Ou8m!u&]XsWZA9B!\H!Nh<S@(Ip-@E6(hEiiNg,k7AVN;sdW"9T7U:+"%1^=fLQo>A/9YkG@?pr1W>(UW.-h5%`?iiESL9.sJ
%gJCQr.<^KA!JoNA2)N;mT(c?l^TMW%R*;T%m(`Ian8CA<3JK8ZQ1sOHC3>urhP>IZ`KKpB`S!jk4+K0-b2B-,jt4jc*W6-L=OgB_
%[r^$]="&(*koJ%eQHk4*0Mr@i_(qX,AiM!t3iOa(6YtEk`#Olcg%s+sMi;7)ndNHaTnI)Zk%?ZL^%'[97iFstWhp&PZWCGE-hq#=
%9q,Rgc(Lsao'V8Jas-9X]Kn8kZ%F0R"C/?08ek'o1?fg2i$jFXr#lVqTYhVSS"Bh6m9;#P@[e+YL*HF7%UoJ.^pP514-5YZSk&oM
%ZKFgk<b3(:PBd$nl)>q+.(l?f<!ad1Op7C]EP*obPIb-6G_9>+6,5SAI9o&kZRF)#&>8^68t#@j$72N8%GR]e;[u^PKWBg*i34,\
%FYOqp'olIF8"NKk5*QBccaAqhn!X;3p!TQdRFl*c29%q[*!iR4D'rrg]5Z1M3?k5(,%^O`aoN^=OSo5O92tgg9"`5jcR\fAPl\N"
%]JDmVB:S'!5][5,19g.Eg[`BZ_0p]7G?53`BWVDtY@M(?o$0/DC#'sYmM$-!+R(_6Z<G'*T*L7m??9fJ18>^Y^_n?.KV&q'V-23X
%<-$VjZ3\-8&Bp8P"$2"@7RRb66^J?)lU@[^?uZi9hu0EQN?Xr>A-9J\S@5mRZ2V<lG4u>>(5sM5Q_YeD@#'PXNOnSUOt*I?i9<?Y
%THq`<`$EH&@DGAH]M!7#Ucg$Wg/*S`]\k*Km1cghfoND/DqJ%I!t]ju_po?n(T97>9MH]LS\m"8lNMFV-<!S0KLq^!=.k!Z2,-eV
%<fu#dhFa*Q_-b!$=$=2$"1kFb`$l54C2oR"3=-B(?_V`HDVb/F<@X=[)d,2aQ^D/q48:'oKe8OjZ1&db^#t2-J=@6;R/2X!9WkJ[
%Oi#j<WhM>RX=9A;J1q1s$DoB^38hX2dpW-Vrf.7-$WY)E\afVA[t+(O.Xs:]HjBQi<Y\GgV#%-:7A&!YXPHu>>Sn1Y&le=>;%sb\
%L/qo.]+bW%>D,b?8n?^u>r#-F?4)=^,C]&9PA4fFi`5@e0NLZSpd2"i/MN>QPY%hSM$L2a^u751%?I=pW(HgdaNVF[DI>/WS>:`_
%]?DF0]JD8]$%/mPDWn^QQedB\G2rc'\1Ml8!^eHRIG(OmeQ_t",UsiLNZlgq;^`VuTHMp);:@"/jG/"J,N,R>gjct3HB/[q(gGmD
%l:_E2f$n3adc3Y:&_X?a_&uu+(l_n=fjN^;\!R:K"YurimX\_M!Xi&7J=Y4UYcU0d2nlD(,@7mc=tPuJ@.JK1B!j<()%N8/\VKAZ
%K-nI\dNM3sPh14aF0_>+EuWB?*+HES,0*=rAg;NhTS7qQk[nC5`1f#Ze^X+S*"4*T"!3PUU+IX2!/KG9)NeJ":f)5tW.U:">KYYp
%BtE8);V):'0eX2cL&5D.:RMa9N%uS<VNHk&.GAFrL8DghOQDZiXi8G`CP[^;;]\Nob_*<l!*MMhZ#$.:!Gf*S($nnP!*^C0N&^B@
%/h$qNj:V=TOM42;<>kT^c3ij(:q7$jJ*CPOBk,?iMpF4a9,2TR$icD-[2,t93Qg0/]t-eGT].RP!(r"-#h*$ZLQX<A8#n7k1UA>:
%oEl__7f\9oa4uN5hk*<pG+#:kjN(RK(lKSj2Domkal,UcC,^X\;N,*s/K(]-30-B#q+"Y115(eYLs;8`LkXhlYin3/]JNA*^7h7Z
%@Js&`giM:7+@_[*fdDm/=KG,FO<,3\e(q!q35SdV)l`@#N(!o=TSBEd*9OJ9\^Xh/g,M5%jsZre$rO'(=$FVIb:M1[9M$S_==U9T
%]JgSq)2Nm>M2k2=1Wl,"6tm/Xkk&tUA<>cC[=S0h6$jH#9;a8n$Iqf1n_nU'(_)g<3j\TlJ\E0]TOE[Loo_#`H[>aTAtufipi.E*
%Nl[t/V7S^gR\#T%0f8YtE3^0A!<+,uNe(]*o9kKqs"mGS1.>Jn;=h<B-!4;F0Q>5DI8,EG*72g!Fgn7j'`cDk`M05+WO2@^Kfe+J
%(BUkP%,'Go^mR&jFK'@9%H8Y<=o*6H7GB!-\t].mBBJ'&do-$fk!:UoQ8?K%7m8^1gdTWsM<@://C^FinVO1^b`m#sRMePU8.j$"
%,AZntTJ"(M&/pC&FE!a4=JX&n4KoF/<?<L!IBMF>"uR"pq[p-mkX57ON:\-cC7ICJ4MbduL72-,24R`!b>PGGFftR@Oh1HE!b!!G
%])b4Wo9HX#Ou\5uDgM(gfJd+N(3^pD'pZW:86)[_%6t2$p*$,l)&(qD4Me"&`I^*;)I9^\7a)&Coi7kgX>U(^3qIf[gl!_r\7f\8
%+mB#`4&`>e:ab\;P+RGBDciF:eLCP$OBC9.Yk/T2[VPT(o(4SLS7Qr*;AG:jm3s^I-CEA+4<"S63[h5@_/6.g`!0/k(5-'_.sdBJ
%gmQJt_uSBO$!#\9K2lJZ6]=&89WJ8K_;"W/[o-D6X[N,m.?SEQ<9RsO[;@/a;-!tR02fUp%Su$Z9'%^&i06-rHKFdSBJ,XWLF%O\
%Pb\?Mh:jk599rmA;C-pBB)tKd7$AEWCUXs?aX.WYI)rZu2dDk=QHqVX8^n5N"flShPPT;D`J]LH!tTZ6bUoPTURl$-bZ1'?#L=VD
%Ou-?'kFq%B$pl7$_%ZnTiDC:\3@0PDaj_WoQDj7t=T#&BiJ_!).PXi#LaUbOG`kSQJPab<k-;b6`,<gg)@C0T*.9!>M<G7><GQub
%-P9?-"X.I^Pl+\G%DjG>lbII9m[hQp-eDZKe0i0iNE]f^J0HO6KGd?<3sh&CAcH1191.2Z8d/#pZ.L(2:dtCZD"@0<Cjs)?,2u$f
%o.E_&W7;IsF)VMe^VI&eJ%)QN_#b40^u&^EWsb^b.Sn>;6;p4t5RnT%hMTaFq\GX^9TtPo[k+$!]-Cn!Kh>%Bqf(jn%n?<;<FNN-
%RKcJs<oVVQ&E-EtPR!Bf(X?a5TQ5[p*>4,)[4\-)"BUSuj\]J[J;FnhT8Fjh)]gU6)ifGj#q^R+>8PrUPZq)%1eX@8%q/htK*A6b
%L!44G$4R]5!@q_H71#p,KO*]cLpC#l*.29o\ss^Y+-)Ztli"''LOSVEKI^?edcDl4inAE*BCde7BgX'\e\lrpY';hnm!p:(h%If=
%`m[7,S\RiJaWU:[``Wb8oft'CqA%>ACa)4*D%o2eI,j.*B8eTI3U9-m_>;9b?J;1KfS2B[7FCFE&@rb<C.f4@Q1@gWWZCi.<1lpA
%g,k++AJ<'f](Cr%T"ZF40:Gf4!tH*N]%U12I@\;sBb\RFU:cSne#:j+UhHBQ[,4$u7B.GIfu^A5""PimPC>h3P,*!7&D`S=&Abor
%Win.1@-WIh3r'4X+;h,Q(3L"H>57X"n&<tujI.n\BaX7JIKTtc+=]L_WUsQR_YpJ;8?-)*SLW,fOA3T&!!F@;4eiWPNCf3=VH2a@
%Q/Y@j7EAU)A/Mtf=<;3&$$+BLMu@ctPZ*s4q-(YKLd=$SM2op:5^XO\,f\erksW>0^rg8K;9S,6pF's;VK;#Wdj+<HkN!0m#Nh8X
%D`O_H=/?ZJKZ.ss=BBS:Q#RNd`?5l_G6]9ZV$Z+rl4h$CBBp*TlQOLHAh7/#LRV/Z?J+Dc<,'TGVt.*.Q(f%d:'!>M[.u#gnIL^1
%bJE^]&RrKPDLHu2F.,f;m#eVYCs(SAEKE^(nfP.?_\YA^`):^!4N&9Jl;r!B\b^&\F9\m^Rb\dC'Ia/]0j>kukNsp`)S'rjdh7J`
%;@8[=25m90RL't#'M+33$<\QYWo,/ka>A]P/.k>Rdj)p6PZ$.o0+3psTOsaC4!of0<CfNb*UY#fd9?I0dNue-<PF<)OCL;a^&:i0
%Pa<<@15gi<-36Yj6[!7]cfuUaXUqa56ilIjZ*.9N;\tl(`I+XA(gICT6Y.-G3_ji/qMiuI_;-BdKYk>].0u);FsOc(ID5)>JIE@-
%D&C0o[]=/1/aIQ7r)Mk]\&WMXkq8E(o<q+dRT_<9>W"1l4tS9^<0F(kg@6T,rR7Q/ciArV1*n4S7EDKd@Bj0*X"$c0G+8+PTOXAe
%rf&cg?W`@<I;<9rg+e:qBhBWie;'=8W/4s&FAZ!M+=Ei;gheg2Aug51gKIeu;Y*=#Pb8VcH5K:8'U(&*rW;8_*!p/5=lKPsQ<mUI
%nl-*!W_toX,HSh!`!f&+"aRa6a=/A[-cK#jXI6+OA]fbV+&h.G\&I.'4O=>,`*i\l-3R#p?4BV`ErGf1)\_bE9.iS]D::.4@j6OM
%;[6"I=1Q3IFKgpl,iLUf3/M.71DXu]/T`Ct*5eo](Upm,_a'%0k'#jt5?/RZ^]1),bB!(4$V9''15&Y\&_C@,EA#D!P")b;2`-f[
%C<Ito#sHTa#.Pau*Mu+9s1\g<AJ0O4',uH2>?l#c-"uSgVnH48;:i6,fV2>r'X*U&<Q/CV2N_iF(?i)RlO^#.WC2PcnBc@n-kZV[
%<<?Q3`jsD-<9:RLOd"/=6[Pge,)'dVojgC%M<odNeXFUajOsophmTt>R*(F%9Ln(I"iLPA`Z#)RLlrA`$H-X?B.<_+1R]BbDq2ub
%5!B7IC'YWf,"Dphg+&:OUYBo[h(\ij90=Ytl`,5&WL\CLp?3AMQHCGXm;C#kJJefT@AQP5__>3[hUX#,>%<fpEZn,!]\MqWh`)p6
%J6e-Q@I7VjcjG:UNNriU;I,p[f$l%\*R+?WH=7,3p:9"+\+,'uLG?R[mHfT.'3:S2p_D%Fc,u1Ba0E,^ML<#?VKKZ&95fki&YMb'
%NBj*b*_p&c3^4H9A>jVY:8lh@(4o?KC2/#R6.q==3u-,E>:QEQnfjla!fXE&4Mm5WVA#foMu,N[*FujWgG4_ESuf%`=c.+49a%TZ
%B2i6JW4*7VH4:Ui=hul#2rHM-\AkYhT-Ou;U;b#8m-ZJ*rA@mLcU/-b")gef9D=5\:aQ;\0iqM4ETre:d\_d$coj46FWE'Igi)n'
%T.ucG^l"5skbkqC2-Ogl`QnUQS,8#-2YiU(aO.O.QI'%&c//;UpL:S4$bjFr'aIsO])eVJ%l`GHHPd?YEVoK?n/\YQga?M&51LV'
%O05J0[bK%Ve'V!j/2VA#L'^WV7'OI$f7g+&n@@A%^[Vr&c?[2iq(3$64)Lc^_UpiJZ$s^(rp\F?Ji:U`YXnBSgu[,5=]o4U!PlCY
%YRfmAC,_n=f`s9UFDDdAq^tIZOKJtLeGjEqHg`kaVk!KS,-.(iYbm5`:3f'JdpS`pQaS,rNK2?s]jF8@mPf?:mIlLb:BlUdC&_2\
%(2MlaPpVdH!2#5c&Yc!!IQ6<Ig-b$Q,jY#G\^tVXnJl3.jF&@JMH:qTh68^RY#al4R,n!]?/rD6]?@mgG_5M.JTE<`q#Tc^GH4D"
%39@";lY5RtSa[S%Y-4m0e:t^*p"JH\@0%LDjTl>S&_6=Y.nupJ$#hs"%6mNMYnl:Pc\43`rGoNZIP5=Y`_M]R1*$k?Wp@nX95rPo
%i]CJS9fs7J)"Mtr9WrYelST`]o<":*>b<(K(:(UlRLIeTIY+^koQJ2.oTpn;/LSKcPBoj>MEFDIjO1\DBbKC+<lp-RgY2:U#^UaQ
%^(A-rWSDCcSUTUM&g+D^mcgcGrp=-B2&0[F:.,$Zn@cK<goic9F0GJurZq@LS`VLaWi$.]&6>4!eKSh@g0R4dQ"li`$Xk5*ms_mX
%IcGf;iZA_-"+T$%d*YJ"=_Y/mb](!+hNG9K?n02c/N_s)3flTJc91;>oTYlQLo8Y]q6s=6i4>"b(`jiSK#>(+2FWG\#X4deVq$+P
%GL:[>_EFO,N[7/fOB4cEL<_#;;`a3j,ad'WnF"mTB==;XG1VEfeb.\Kp\LIk7%>FTcZ0N,ouR;mKKEIm<@daEd94^QQ#YsP75g[j
%]Q=laOMZsO[@\T;$"VKAbESVG_puhD"`3JnG0r&:Dd-L;^R]<"cLh[ifZ0f&=$ZdsLdpFu%dFP2I9^=#\]mcKnHAQ,Zb7h(&S+_T
%7TsgDQNl^!f,r!?(gV6dJ@]p<hrE;2p$t6u5gVYIIq\G>mFC,2HaUHAriGqWR]5-@G*dPWYl\V;#%S'ikuS$qqJ,V6PptH"WiC@&
%LAor1J'5O>>QrUA0DBe[0qMmpfRT84OM"rnF=$<pZc^dVHu4Kmi6sSX%u&o0d<BRR9WG4@h<qE&Z^^9.[_-)m9OeSYXKNu5XA?1e
%rBb%tp<>HRPOEV^/HS!F&SQfJSH]Q)69R343o\V8g13[<OC]l/WgELQ$sL1K-_?#66FA$bf8st7AX053n<FD0Ni'+,]5]mV7TtZl
%FQZtKSXsP=rdj@[2%"9peD&4t;`-b!8u;9j2K@5jKi%4S_R.q<mG@]!D`mLg!.>-FPO+9aPpX&WAA`r-H#%1/^\5)tIU0G#*P_%9
%enmNFra],O$',=qA.>fJ^7*,)^GX6om]7C`P*`50l.kV(pGEhr9G6Y,O+K(BfJfQVCWRiolD<b8]jTqgr-I<VS_JSAD&i6CmGjg]
%C7M4o==##ol;?Xo+'73,nkk%sl+1c(YfV$s[r15OJ6q#^5dV3C]]QT+.\D#dT)n596GtKK,^a<cgm>8f!+g#!#+J^[6=^[@J5oU`
%%09f$jP5V?99F0=9I<X_1/nH&0l*ooF^6Aukpg(ck!c2X8g0NgR+r&*/k\tT&sABI":R)o^qMO=e3sXTgQJZdqtd<F+5pBK=NJFY
%ntE(o@?mf0he^rie^gUQe^*B*\ZSKAnU@sVDW?#nfa#Y;@KaR/FYh17m:U4qgmWu^+]R65;1i!fB(CZ=bO+/tp%.5X-S*fjS<PN[
%Bl'V;Jkj8id!OO5U^F&k!G9r;2%%m*gV*>#%oggd2Z&_.>Dd0G5RH6T?nZua>9tB?@+/!7]#I7*gKj5Q?*C%FpWc8d;PBnm@A>B9
%pr,hkhQY"NNHdj*<h.?JL_.V/hKk,.8LJ6&K_+f1D#$(f8;-EQO0Yc\@r'T*'gZS:8<NFX&s.e2`^M0q>\-)&10E@n*V\cB!\Zs5
%nHbCD6F>P!,nh5&*fn%86IU0m.&)+PGC2S=n;9`?Gd^+LO_R-`ALb]-ZI6n/X\JfY=[cMt$a11OEP(so@sU20(],E8P'5DnI5Q#b
%43_59`:T%fn9*"#j?)1EM^LK((>u+Uo'f$#IuKjsVIkEq)-P>#/*K^V6U/De1"V,W&G(%V[sm@glHPs5hFkPP8,ns&grCF"q;1ai
%2tc;f?5F[3\_T4#l?WBpQ/1=UME6?CZr+1Ms-$8MnN#]0L2'3;IjFT[-s7A?WDYP6X)PLWGi$q9`[%QQ`VUjfJ<R$GkA8S?l-0d7
%)OBG2qbD[jag/S=5>UZ?P6.@;:bL;2VmsQVY*<6M5$!fG-IpG,(S^>Z)$ge<PP?ou(/sOc/U3u3_94(/-7R-Z>E]Jn&&eZKfSX4!
%9D`^+03^Cbf0!/cnlUtYag$s[gq_(L<(aNt``-M&ML\5[Sk(WccQMEu?"C`4=E"EYFAu7e/7h-TX.>!.#=*\#(7I>IfpdXI<?2+&
%PAhIp_1.2oRouCtMnPqk`+Yn=:]^B685'g"(*irID\^3Qpl_MQBV?!>$(R3h!iU1?+>@?K.*Dg"R`HR![5[s(cZEkb58UK=B1=6)
%`%WT9/+8<.P3E.H41@S"A$J!IE^38c:-RpX)Nn'Y0Qcn.:+6c:k:K#K=>qT6NFZuBKA6W%(C*WAB.12[J-'ILd#NAm&l^#>/6V$S
%h^?e2"uaMMFZmP6?(No34+h1p<YYdYO+$Tb4SFj<i%oAdSdDQl2HZ2Z)-5:Q3ZBWo*Ug!h_BRN0oA5%^+c$0^mS-,%QD_eNI8C#r
%^nj'Y<qN?[M<^tOpd8nuiZZF:UESWN>8>^@<Cg7XI<9:obBY!1(nkC2F:oTaa1s0`/!h[;P0K<oJQlLdkWdU4r?p.3!q6XfPG.Wu
%<L(0nY$B-N5)#6rR#\u`SctVS6%'R"IpZZ?!JP*T%toF)jMY3a(oH.7H+k2TW'YsrPip60TqZS+Waj;RJ32Um'$QKtE(cS7VY!"&
%N,l.2=d'SZf#$\_i&4,KXgfu)Ld67g`(ni-6!G)m_E+'b\3RZGr_g^qdYIo!E7%rY<!E0!;`Rb@a\>bBSq9b5'3763^F9GDW[T*H
%]dNs#:9^=qMKB>.=3toeob/bkbJcXj2CRdjfnEG:A2spm$WG$LCI;GZ6B-X*4=l:BS?fWJ9_ft3,%N)U\]J'D4AeFiFAJMk!T%Sm
%cp`&X7f?)aBukCDBA,O%Hp,WhW]Cft]1<Mi%@:SLX%d`&Yn=@j%CYZC--AXUVYka2J";Q?LN:$^aAed0=jQ\uPb2\'((o`:I0L\)
%$%\H+1^lT:l(npD&%iX;Tp:;8N=0`'3%V)Fs2dlJM%4UI:FZ!7=DH/V[u)\dE^PF"inc:q$Tb?1NSeN0&B*h!W<2;3k3Pkf6,WFu
%*5N6*OEfnq"eZo'VNs:GQ(N_$35[O_!%-nDFJQmPbuOE[SXA8*LYco:AiG0E+.k?%YgP1WL)KSuL'+&pKKc^L#'+G*.PAub6ai[j
%JTEDNV(*N?[HsqJ_7"0ZWkl@HeqiAf&5au"8rXD&'i!)1*9iX!Va0$6'^[C10Z;HAO"*/)L>i];s5p.-9b_`l;(PhdB\W*];Z&(+
%RO1n[Ql`-+/bZ)Y`n,;(CH&P&!)0Mc6DLEIo"qL9&GG'jg/YON]e*i^q9>%;fV(JY)/C3!>IJa_.dLit?1Vuj)OcTTiUM.</0c9N
%'ia+]o=a8!qBf31ZE-/!q)*#WZ3lCGX.j%d<3PY_>t-lH,g&9EC_])grd$8kU>BnC;&XRj</OYaR]=m*C:(igkiWir>i%e)-Cl*-
%E7^s9PM(S!WU.XZBY"8b<HYlLL(`9@-V0Q2jT-WN>'fXK-^_%;2NT1$&#_`RaJ>5#8Bbi7q_Nfk%,R(N0Q/=d3m]LNVJE40*d@FG
%W'QnXM%TXaAeEU7MEU;6SrRM-ATsXEg/<[7\)9&"&rYUrD1mUu,?n",6OiUiOdbGFAl,:)H`Nh0_fCG\OZffO>&rHXCc$uZ68kpT
%k!`<B;8Cq*piV9g$\%gu@>tHRciYXYRaFLQ&GeaF4jMDj1?*O^c^ZjG9M4Y$WMeGo_S/>TaSDOZSD5CCj5Dgp2pndYQciiQ;MU^X
%OMG=?!4_=M#]eEn)l<hFS1gkYj]%cd0_a<\I$-`,7M2`3"Jiq(CN..!j`X8YAY6OLHkAu$=?RGLTG:$I;aaHUK[mYYpfW@!Z@4NX
%M2H8G=R@7uf,u_50EVk^SW^iX<Z"_46H;l:Fh@2a$`X#+,ZbMI@`_g3nL,unHL0_f/1'(TK$]lg/0b!*3$Oe*.bCW5hqOV]@0(9F
%f"H^I68l9RHuaB+V00IJ.5pCSS')-AqJ1KR?G-%7@kE-6!0)o(3q/(sj5a[lUQ<<</:Qq8D*S?/_Z7ZSk"/'LFmg)C<^@4VRM$ge
%W2ahc\l;p"-X@EHO8sQD>,Q)F2;RDEe%53^X8$XagUElNYeA"XAK<p]]7.\0BWXU5Gs-^mnAkc3%9@;\NG2BPW2XZhDHG-N<gZ4M
%/\,[?N97R;e3h]i#j%PipRZ'kUJM)J(,K^1g*ZjPF12k&qfq'XDj^c[BNk'cp%.V#_9D(*%0rc!2D:NAp4XbBe!,GIr#@cpC7?G[
%7iECA4Xu6=eFgm-#g_%)<&CbVSP=r&Qn6_DW=5i2rB(tpWYQf1Vukb,O^1'P>\'-[\2$/siqj8PTYS(tEt?iAkkRo0-Cm>h/DUP0
%5Fg;8!G=25B\LWVAu/T8UQqKr(C+;T:"'WJbn=m>[iP"L]cG!ISWLn[0E]do1^PRU)RGS!DVl7ga$Do'Nmb,O(o%A41=)\^*-70J
%S65<u&lk5X."b?[-r<W:5M]KO6e7W,CW1ga:CPUe0+@@lmjmc>IA@U%S,<)(o!bOWqr=3uE3,Im^/NN7Jg[luHLC+CRl\gpmVBkM
%Q=((p.nmD<O;OW-=o=L!c^d4$q\d./jmcti@/Q8@HcAjl-9"`hS?jq3T0$$PV.lH/WBdscQ=HBL(D`(Gqs!eOj:J?8W#YU2\+!Tt
%Mq?'[J%X!Ud^+b9U5^mqBE.s!qu#83rlD76hZ*TMMnf2bkC<@"s8V-:r;'JZr:St?J,.@Xs7OF)rqFU^J+Zl=_[le:e*k$Kj3Ksg
%qgX"hq:ECXh&h.Cmk5bIrVlP@psW#gqXU9)J,8rrcX6\HVa(+Wjl;F%p4r[!"cZ90++F"0huE)IJ+\;pIg`a~>
%AI9_PrivateDataEnd
