%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_6.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 202 192
%%HiResBoundingBox: 0 0 201.6817 191.9125
%%CropBox: 0 0 201.6817 191.9125
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:38:48+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:38:48+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:38:48+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>244</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA9AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYqpXV1b2lrNdXMixW1ujSzSsaKiICzMT4ACuKvmn8w/8AnM/SbZXs/Imnm/n3H6Uv1aKA&#xA;e8cAKyv/ALMp8jiryW88zf8AOQ/n9jNcalqEdjLuFST9HWvHtSOP0vUHvRjimkv/AOVD+cJw0txq&#xA;Fl67b/FJM5Jp+03p/wBcV4VOPyF+b/lVjPod3cR8NzJpV5JGdjX7IMTn6FxWmU+Vv+crfzc8r3Is&#xA;vMUaa1DEQJLfUIjb3Sr1oJkCtX3kRsUPe/If/OVf5YeZzHbahO/l3UnoPR1AgQFj2S5X93T3k4Yq&#xA;9ihmhniSaGRZYZFDRyIQyspFQVI2IOKr8VdirsVdirsVeT/nn+fVt+VzaVbJpR1a91P1JDGZxAkc&#xA;MRUMxPCVizFqL8NOu+1MVZr5D8/+WvO+gW+saHdxzrJGjXVqrq01tK6hjDMo3Vl6e/UbYqyPFXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXhn5/f85GaR5Ns73y35fm+teb5YzGZIqGOwLj7cjEMrSgGqx/S1OhV&#xA;fO3lT/nIr85PLF5b391qlzq2nXB5G11TlNFMimjenK3xrTxRuvUHpir7C/Kr84/KP5j6V9Y0mX6v&#xA;qcKg3+kTEevCelR/vyOvR1+mh2xVnWKuxV2KqN9ZWt9ZXFjdxia1uo3guIjWjxyKVdTSh3U0xV8W&#xA;fnB/zjB5n8mXEmv+TzNquhQt6wSPe9s+J5Asq7yKv86Co7gdcVY95b/Pa/itVtNat1nnWgTUBUVH&#xA;/Fkajc+6/diyBZL/AI91W+iEtrcRLE3RoVDD725YsnR+b/MCSBzc8wNuLIlD9wGKom98waHrVt9W&#xA;8waTHdoOjLQla9eFaMh+TYoYLq/5X6LfF5fLN+YJv2dO1Ci8vaOYVHyDffigxS7RPP8A+bf5Y3cm&#xA;m6fqV1pBI5NYSiOe3IJ+2kcwli3II5oPpxYv0G8uXt3feXtLvbwKLu6tIJrkR7J6kkSs/GvbkdsV&#xA;THFXYq7FXYq+Q/8AnN+KQeZfLEpH7t7O4RW23KyqSP8AhhirwjRtR83eULy01/RbybT7hlDQ3ls2&#xA;xDUJSQdGHirAg++Kvqr8nf8AnLPRtfaDRfPAi0jV3okOqL8FlMe3qcj+4Y+54HxXpir6JBDAEGoO&#xA;4I6EYq7FXYq7FXYq7FXYq7FXYq8W/wCclvzrfyFoEej6LKF806wjehIKE2tvXi05H8zGqx+9T+zQ&#xA;qvmD8rvy1fzFMdd1wO2mByY0YnlcyV+IsevAHqe5+nFIDPfPlzpV7ZjQI4IntIgA9FWkZUUVYqfY&#xA;Kjw+WLJ5FLpXmLyrqUWs6FdzQyWrc4Ly3YpNEf8AK49qdex74sSHvn5Zf85lsiQ6d+YFmXpRf05Z&#xA;IKn/ACp7cUHzaL/gMUPpby15s8teZ9PXUfL+pW+pWbUrJbuGKk/suv2kb/JYA4qm2KuxV2KvHfzT&#xA;/wCcYvInnZptRsF/QGvyVZry1QGCVz3nt/hUk92Uq1dzXFXzB5v/ACK/N/yBNJc/UZbzT03OpaZy&#xA;uISoPWRAOaD/AF0p74qxWz8/ajHQXUSTDuy/Cfw2xTbILbzZp11Gnoyqsx2aGUFWr7b0P0HFJkih&#xA;qU9ei08KH+uLHiYn56uJbm8tJpCSVh9JakkAIxagr0Hx4rdv0K/LfVYNW/L7y3qMJBS50y0c07N6&#xA;Kh177qwIOKsjxV2KuxV2KvnP/nNbyzLe+S9F8wRKW/Q948E9P2Yr1VHM+3qQIv8AssVfL2lT/WdJ&#xA;jic8vRLRkHfY/EP14oS6+0ihLQCjDrH2PyxS9l/IH/nJDUvJ91B5b81zyXflVyIoZ3q81gegK9Wa&#xA;EftJ+z1X+UqvtW2ube6t4rm2lWa3nRZIZoyGR0cclZWGxBBqDiqpirsVdirsVdirsVQuq6rpuk6d&#xA;calqdzHZ2FqhkuLmZgkaKO7McVfn1qV/qf5t/mzd6jcF1trydpeJO9vp8J4xximwITivuxr3xSA9&#xA;g8zXS6NocFnp4W3U0ghRNuESLvx+WwxZvNry8MR4Ju53JPbFiSlz3cqqzvKVUAs5rQADFhbCtXvt&#xA;JuZGMFswf/fwIQE+JWhr+BxSt8ua75j0TUlv/L97c2F/GKia0dkcqDUg8T8S+KnbFXvvkL/nM3zN&#xA;p3p2nnTTk1i3WitqFpxt7sAdWaPaGQ+w4fPFX0R5I/PD8svOaxppGtQpfP8A9K27P1a55fyhJKCT&#xA;/nmWGKs7xV2KuxVh/m78ofy282rIdc0C0nuJK1vY09C5qe/rxcJD47mmKvAvPn/OFcqiW78j6v6g&#xA;3ZdL1OgbxolzGKewDoPdsVeE+YvK/wCY/kW4Ft5g0u5sErxRp09S3cjtHMpaNv8AYPiqT6tr6alY&#xA;wwSWwiuIW5CZWqCCKEUI+XfFX1Z/zhp+Ybal5bvfJN2SbnRSbrT27G0nf40r4xzNX5N7Yq+j8Vdi&#xA;rsVdirF/zR0K1178ufMmlXKho7jT7goW6LLHGZIn/wBhIit9GKvzp8uyMLiWP9lk5Ee6mn/G2Kp3&#xA;LHzG32h0xQk+pWIlUyxj96v2h/MP64pfSf8AziB+b00jt+Xesz8gqvP5elc7gLVprWp67VkTwAYe&#xA;AxV9UYq7FXYq7FXYq7FWFfnF+X0vn/yDqHluC7+pXUxSa2lapjMsLc0SUDfgxFDTp13pTFXw75T1&#xA;rVfy1843mna/p7wSKwtdTt3X99FxNQ8Z6MN+Wxow3HY4pBZx5n8yQapP9bt3Elmq8bQjowO/L/ZY&#xA;siWNxm3dJXmP707r1/DFgKYp5k1iWNpLCNKBlHOQ9aHegGKAybyBofl6HQLi+1mwjvr+5lC2lvLy&#xA;okKj7ZpQfEx+e2LMBKZLPSYNVmvbOAozM5ROX7pOVQeCgVA32qxxYlVuNMsL+MPNCOZ/bXZvvH8c&#xA;UJLd+UpVq1pKHHZJNj942xW2TeWPzm/OHySUjs9Yumso9hZ3v+l21P5V9XnwH/GNlxS9i8rf85uu&#xA;AkXmvy4G/wB+XelyU+63nP8AzOxV9A/l3+ZnlP8AMHR5NV8uTvJFBJ6NzDMhjlik4hgHU1G4OxUk&#xA;e+KsqxV2Kqdxb29zA8FxEk0EoKyRSKHRlPUMpqCMVYDrP/OPv5NaxMZrzyraJIxqxtDLZgnr0tXh&#xA;GKpt5H/KryB5Ge5fytpCadLeBVuJfUmnkZV3C853lYLXegNMVZZirsVdirsVeLf85Q/mtZeUfI9x&#xA;oFtKG8weYoJLaGFT8UVrICk07U3FVqieLbj7JxV8YeXrYqJLlhsw4J8u5+/FCdKpYMf5RXFUJMAJ&#xA;DTFUus9Sv/LnmOx1vTX9K7sp47u2begkiYNQ0pUGm48MUv0n8seYLLzF5d03XbI/6LqdtFdRCtSo&#xA;lUNxPTdSaH3xVM8VdirsVdirsVdiryv89PyL0j8ydI+sW/Cy81WSEafqBFFkUb/V7im5jJ6Hqh3G&#xA;1QVXxHINd8p6zcaFrltLbT2chjubOX7UbdeS9iCNwRsw3GKsnWPnax3Ubq8MoBVlNdjiikHd2ccz&#xA;LJwVpE6MQK09jiqH/epUbrXqNxiqpFbO9C3wr+OKoPUvMNvYsbeBPVlTZt6Kp8Ce5xVLofNt4JQZ&#xA;okaI9VQEEfIknFaZFb39nc2xnjkBiA+MnbjtU8q4qx230y/81eZLXSPL9j695eSCG1hiWjOx6u3Y&#xA;ADck7AbnFL74/Jb8qbH8tvJ8ekpJ9Z1S6YXOrXYrxe4KgcYwaUjQDivj1PXFWfYq7FXYq7FXYq7F&#xA;XYq7FWGfmv8Amhof5deVpdZ1Eia6krFpmnhuL3M9KhRseKL1dqbD3IBVfAesa15h8+eabrWtauDP&#xA;eXb87iXokaDZY4134qo+FVxVN5reGGKNI14hQFUDpQYoUkfiGFK8hTFULcU5Cn2u+KoLXbGWO1WR&#xA;wPhNajfrsRir7D/5w+8yNqn5T/o2R6y6HezWqqTU+lLS4Q/LlK6j5Ype44q7FXYq7FXYq7FXYq8v&#xA;/O78i9C/MnS/XTjY+Z7SMrp+pAbMBuIbigq0ZPQ9VO47gqviG+s/MvknXLnQtdtJbW4t3pcWcnv0&#xA;kjP2WDDcMNmGKsr0+906ewEiMrhgd6VJxSKpDYsGnJCMQQDQ0J6YpYv5Zt0g1ZbvUbIXUUNXEE4P&#xA;pu9duY25DqcUsx8ya5YeYNPFteWUUBiNbdreNEZKDoH68fFcU28+4SvMNM0/1Lh7iRUCRglpZCeK&#xA;IqrUnc7DucUPt/8A5x2/Iq38gaMNY1iJZPN2oxj6w2zC0ibf6vGf5v8AfjDqdhsKlV7NirsVdirs&#xA;VdirsVdirsVQWt6zpuiaReavqc622n2ETz3MzdFRBU/M9gB1O2Kvz1/NP8x9a/NDztLqc3KGxSsO&#xA;lWTH4La2B/aptzb7Tt3O3QAYqo2aW1jbiC3XlTd3O3JvE4obmuC9OdBTpiqHadBsKn5Yqh8UoXV9&#xA;S5QmCRvUcigXbavc4q+jv+cJbDzTB/iG8ktWTyzepCIruQEB7uB2FIq/aAR25kd6DFX1RirsVdir&#xA;sVdirsVdirsVeffnD+TPlz8ytFMN2otdbtkYaXqyj44mO/CQCnOJj1U9OoocVfDHmHy95q/LvzNc&#xA;aHrtsYbiIhmQGsU0Z2WaF6DkrU2P0HcEYqmlnf213EJIHqD2OxB8DihEEAih6HrihCPZtX4CCPfF&#xA;KQ69fmEm0iYeoR+9Ydgf2fnir6j/AOcXvyCbRIYPPXmi346xOnLRrCUUNtE4p68inpK6n4R+yv8A&#xA;lH4VL6SxV2KuxV2KuxV2KuxV2KuxV8lf85i/mo1zfQ/l7pc3+j2vC611kP25iOUFufZFIkb3K91x&#xA;V4Jplslnb1YVnk3f28BihXaWRjQbewxVUggBkUy7JXcd8VbuoY1kJioIwNyTsPvxVJr7VEWsdseR&#xA;6NL2/wBjil7Z+Rn/ADi/qfml4PMXnOOWw8vNSW3sDVLm8B3BPRooj/N9ph0oDyxV9k6dp1hptjBY&#xA;afbx2llbII7e2hUJGiLsFVVoAMVRGKuxV2KqF/fWmn2Nzf3kghtLSJ57iZvspHGpd2PsFFcVfH3l&#xA;v/nL/wA2/wDKxfrWuPH/AIKubhozpyQxh7W3diI5VkVfVd4xQuCxDb0A2oq+w7O7tb20hvLSVZ7W&#xA;4RZYJ4yGR0cclZSOoINcVVcVdirsVYX+af5U+WfzG8vvpmrRiK9iDNpuqIoM1tIe6nbkjUHNK0b2&#xA;IBCr4O85eSvNn5b+ZpNI1yD05B8cMyEmC5hrRZYn7j8QdiMVVrPWYpog43B8diD4HFC3VdbS1tSY&#xA;x+/faLuPc/Rir1r/AJxZ/JBfMd8PPXmWD1dGs5T+irWUVW6uUPxSuG+1HE3/AAT/AOqQVL7HxV2K&#xA;uxV2KuxVxNKe+KuxV2KuxVj/AJ/822/lDyXrHmSdQ66ZbPLHEdg8p+GGMkdOcjKv04q/OWGe91zX&#xA;bvVtRlM91cTPdXczdXmlYuSfm1TiqdR2wdiFWpPX2xQiRbWtunOZ1VR1LHiPvOKobWPMWgJbrHZq&#xA;Zp1p8SDio8QWPX6AcWRpQ8r+T/Pfn/URYeXtNlvKECVoxwt4gf2ppmoi/wCyPyxQ+svyf/5xX8te&#xA;UHg1jzM0eu+YY6PHGVrZWzjvGjAGVh2dx8lB3xV7rirsVdirsVdir5+/5y//ADJTQ/J0XlCylA1P&#xA;zDvdAH4o7GNviJ8PVccB4gPir5l0T8tpdS8h3fmFpTDdCX/QIm+zLEnwuPmzmin/ACfeuKaemf8A&#xA;OOH/ADkI/lCePyd5tlYeXpJCtleyE1sJGO6PX/dDN1/kO/Qmih9mxyRyxrJGweNwGR1IKspFQQR1&#xA;BxVdirsVdirEvzM/LPy3+YXluTRtZj4utXsL9APWtpqUDoT1B/aXow+ghV8Ced/JXmT8vPNVzoWs&#xA;xUkjPKGZQfRuYCfgmiJ6g/gag7jFUL5b0K483+c9J0C0bg2p3MNqkhFeCuwDyEf5C1Y/LFX6S6Jo&#xA;2naJpFnpGmQi3sLCFLe2hX9lIxxHzPie5xVG4q7FXYq7FXYq7FXYq7FXYqwH89vJurecfyt1rQtI&#xA;+LUplimtoSwUStbzJN6dTQfEEotduVMVfCf+APzN06eWA+WtWhlU8ZF+oznp0/YI77EYqmVl+W35&#xA;0X3FLbyzrQVxVXazmgQg9+boi/jirMdB/wCcSvzj1iVX1OG20eI7tLfXKyvT2S39c19mpir2byR/&#xA;zhv5E0h47nzLeT+YblKN9XA+q2lRvuiM0j/TIAe4xV7rpOjaTo9hFp+k2cNhYwikVtbxrFGvyVQB&#xA;iqMxV2KuxV2KuxVLvMev6b5e0G/1zU5PSsNOge4uH6nigrRR3ZuijucVfn7qOoa9+b35nXOo3ZMX&#xA;12Tm4B5La2UVFRF/1Voo/mY1PU4pAej+bJIrT6rodmoisbCJFSIePGi1+S/rxZvMPNuiQ3spntVC&#xA;3aD952EnsfceOLCReh/kH/zkhf8AkqaLyx5teS58schHDcNyebT+3wrQs8PinVeq/wApUPtGxvrK&#xA;/soL6xnS5s7lFlt7iJg6OjiqsrDYgjFVfFXYq7FWEfm5+VWh/mP5Xk0q/Ahv4OUmlaiAC8E1PvMb&#xA;7B17j3AIVeG/kD/zjT538t/mBD5l81LFY2+ivJ9SgjlSdrt5IniDqY2PCNefL46MenHFX1TirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirwj/nMjXpbD8q4NOhfidY1GGGZa0rD&#xA;Crzn/kpHHirx/wDJLR7fTfJ8utSgCW/d5Gk7iCAlAP8AglY4sglusai9xcXF7J9qRiwHh2UfQMUk&#xA;pOIoVWOdz6nKpdcWFMb8w6VFdymWJfTkp8B8fZsUMz/Iz8/Na/LbURo+qh7zypPLW6tNzLbM32pr&#xA;epp7snRu1Dvil9zaPrGl6zpdtqulXMd5p15GJba5iNUdD3H6iDuDscVRmKuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvl/wD5zjvQumeUbLlvLNezFf8AjEkKg/8A&#xA;JXFWG+W52g/KLTQNmlQxj5NO5P3qMWYYnqcwLCMHZfib54sZFAxShv7p+XIU+E1qPoxYomG0tZFY&#xA;XQ4sPshiVoD3xSB3pBqegRXcRKtS4Ufu3pQH2OKGdf8AOPX553v5e63+gNekdvKd7LSdGqTZTMQP&#xA;XQAE8D/uxR/rDcUZS+5YZoZ4Y54JFlhlUPFKhDKysKqysNiCOhxVfirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVfEv/ADl75oGvfmlbaBZVlXQ7aO1ZBvW7uT6rhaf5&#xA;DRr8wcVVtZtpdJ0jR/L/ADqtlaxmanRpaFWP31p88WbyvztqDC4+pxniG+KWncDYD8K4sDzR1j5H&#xA;1fQTY6zfXEEaywmYWis5nAdPhWRSoVa8v5sU0ixfzXT/AL2lQNqCmLElffatZxRRpO6QlBtU7n5D&#xA;rikljOunSr9PXtp0+tRjdT8PNR23puO2KH0d/wA4jfnNJOq/l1rk5aSNWfy9cSGpKKOT2hJ/lFXj&#xA;9qr2UYpfUmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV+dPkO8k&#xA;8y/m1FqupfvLi9urnUJamv74q8w3/wAl6fdikPTvPlrImpxXBNY5o6L7FDuPxGLN5tfaBpt15gS6&#xA;vS5hUqZIVIAcLQ0LEGlehxYdV+uX9/f6jNNcuXMjllC/ZoelKe2KCUvvnksdPmuR/eqoCDrQsQK/&#xA;jihD+T/JcXmSO4vtQ1eOwgjk4MWVppnagY0QFdqHrXFkAmOtflpp0EHLSdXa8nB3jlgMSkf6/In/&#xA;AIXFPCxSA675b1e11CISWWoWUyT2lwO0kTBlZW6GhGLGn6C/k5+aul/mR5TTVbZGgv7Urb6rasKB&#xA;LjgGYpu1Y2rVT9+Ks7xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV53+dH5&#xA;yaL+Wnl8XMwW71y8DLpOm1pzYdZJKbrEldz1PQeIVfKX5bfn1+ZJ/NjStR1PW7i8tdWvoLTUbCaR&#xA;zaCC4lEbelAGWOMxhy0fGlD1qCaqpb+ZXlm4/Kr855VhQ/o+O4F/ptNudjcE1jH+qOcR9xXFXp/n&#xA;RI7zQYL2Ah41ZJEkHQxyDY/TVcWx5jqIpc18QD/DFrlzUVjj9F5ZJUiRP2nIUV+ZxQAkl9r2i+m0&#xA;Mn+lI2zxoDQ/7L4fwOKpVH5quLa2Nrp8KW0BJagqTU+/X8cWVppoXk380fNJWTRNG1G9ik+zcwQO&#xA;sO/jPRYx9LYoeiaF/wA4gfm5qpWXVGstHVt3+tXHrTU9ltxMpPzcYq+o/wAl/wAqbT8tPKR0VLoX&#xA;97cTtc316I/S5uwCqqrVjxRVAFT4natMVZ7irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVYh+aH5m+X/y88sTa1qzh5mqmnaerAS3M9NkTrRR1dqUUe9AVXwD5q8z+ZfzA81XmvavK&#xA;Zrqc8mA2jghUnhFGD0VBsB1PU1NTiqWLMum61Z3MdVFrJFMCACR6bhq0PU7Yq+rf+czvIF7qOhad&#xA;5ztCpj0QG11GOh5+lcSKIpARtRJDQj/KxV43pH5t6VD+XyabqMbTapAn1OCCIUDRxqvpSu52FOh7&#xA;kjpiyBYMdZ8z+YL5bXTLWSW4faO1s4nllYV8FDMevbFiWfeVf+cXfzi8zOk17ZDRrVutzqshSSnU&#xA;0hX1Jq/6yj54q9l8qf8AOFfk2zCS+ZdYu9XnG7QWwW0g91P97K3zDrir13y1+T/5Y+Wgh0fy1YwT&#xA;R04XMkQnnFPCaf1JP+GxVmGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrZ&#xA;JI4o2kkYJGgLO7EBVUCpJJ6AYq8M/M//AJyy8j+Wo5rHyyy+ZNaUFVkhb/QI28XnH97TY0iqD05L&#xA;ir5G80+avNvn/wAwy61rt013dyUUMRxhhiBqsUSDZEWvQdTuakk4qiLHT2hT0LduIYfvWP7RGKEh&#xA;1teN7xPVVoaeIJxS/TLzLoNj5h8v6jod+vKz1O3ltZvELKpXkP8AKWtR74q+YfJv/OGGpW3nBZPN&#xA;Wo2t95WtiXEdq0sdxdH9mN1Kj0l/nKuT2HWoVfTnl/yv5c8uWQstC0y20y1FKxW0Sxg07sVFWPud&#xA;8VTTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq04cowQgPQ8SRUA9qgEV+/FX&#xA;5x6j+YX5taH5o1H6z5i1W01qO5kS/QXMygzKxVlaOoTiCNhxpTpirLdI/wCcq/zs0lVS6v4dSRei&#xA;39rHX5FoRA5+k1xVN7j/AJzQ/NeWFo47DRrd2FBNHb3JZfcepcuv3jFXnPmn8zPzL8+u8euazcXl&#xA;tUMbNWWC1Xeq/uYgkZpTYkE4qgtH8qxSzJ9ZfmK/ZGy/1OKppe28dtN6EYVUjAACig8emKCg52Kh&#xA;aGhr2xVKYrFtT8y2OnIOT3c8FsBvuZXCjpX+bFL9OsVdirsVdirsVdirsVdirEPMn5v/AJY+Wyy6&#xA;x5lsYJk+3bpKJ5x84YPUk/4XFUo8i/n/APlv538xyeX9Cu52v1jaWEzwNEkypu/plt6qN6MAaYq9&#xA;GxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvmL/nLX8lmvYH/MLQYK3dugXzBbxjeSJBRboAftRq&#xA;OMn+TQ/snFXzr5a1ZZ4haSketGPgJ/aUfxGKFfXtEj1KZbiHjBMF4uKfC1Oh26HFJKzStDNmrB3D&#xA;FyCzD26AffihP5LJ4YVeoptsO2KSEmuZQXdz0rtihBSOWPI7UxVkv/OPnl9/Mn51aCvHlBZXB1KZ&#xA;uoVLMerHX5yKi/Til+guKuxV2KuxVD3+o6fp1pJeahcxWdpEKy3Fw6xRqPFnchRirx/zj/zln+VO&#xA;gepDp083mC9SoCWCUhDf5U8vBCPePnirxXzT/wA5mfmHqTPF5esLPQ4W+w5BvLkf7OQLF/ySxV5f&#xA;r3nX80fNzMNb1q/vIZPtW805it9/CAFIx9C4qlsPlR1Rpby4WONFLN6YLmgFe/HFbesf84b6FLff&#xA;mnPqfH9xpGnzSM/YSTlYUX6VZz9GKvtzFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqtkjjljaORQ&#xA;8bgq6MAVZSKEEHqDir4a/wCcivyRufy+1/8AxBoMb/4V1CXlAVqfqU7b/V2P8h3MZPb4TuKlV5/p&#xA;OoXGoKfj/eJTmtaU9/lihOieKknegqcUKDalO8Jjck0+z4DFNoJoGlR2DACMVI8dq4qlmr3cSWir&#xA;GvCRhxJ8fE4q+o/+cM/y9fTvL1/51vYuNzrB+qaaWG4tIXrI49pZlp/sPfFL6RxV2Kse82/mH5J8&#xA;oRo/mXWbbTDKpeKKV6yuq7EpEoaR6f5K4q+f/wAxf+cz7KJZbLyFp5uJd1/S+oKUiH+VFbg829jI&#xA;V/1Tir518xeZ/Pnna8+ueYdTudQapaP6w5EKV/31EtEQf6ijFULb6JZxb3POZvBfhX8N/wAcUI+M&#xA;wQikEAj/ANVaE/M9Tiq//SSKiIgeJBxVCatc3MWnyKW+GSiU+fX8MVfU/wDzhX5djtPIWr66wpca&#xA;rf8Aog+MNpGOH/JSaTFL6HxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL9f0DSPMGjXejaxbJ&#xA;d6bfRmK4gcVBU9wezKd1Ybg7jFXwJ+bn5W65+VXnD0AWn0e6LSaRfkbTQgjlFJTb1EqAw+TDriqG&#xA;tb60vbdZbaQFmWrREjmh6UYfxxQQg2PGte3XFVGeF44RO7Di+59tq4q35E8nal+YPnrT/L1hyVLq&#xA;QevOBUQ2ybzTHtstaV6tQd8Uv0Z0bSbDR9Js9J0+IQ2NhDHb20Q/ZjiUKo+4YqjMVdir43/5zV0D&#xA;VIPO+j69K5l02+sPqltsAIpLaRneOoH7Xrhxy369hirDbLyN5YXyNYeYLBHuLm4AM7zsH4OKh1VQ&#xA;AoCupA2rimtkpa2hIpxp7jFiq2dtZrMDMKrQ/a3FffFIavpLK3Mkw4xwLuWpQf51xQVaC3+seX7n&#xA;XrY+vYWgPrOu1GFPhPKhr8Q7d8U8LBNS1mS/t+DQrGFcMGX5EUOKvuf/AJxWt0i/I3QJF63D3sj/&#xA;ADF7NH+pBir1rFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxv8AMLyDoPnvyvdeXtZjrBOO&#xA;UFwoHqQTqDwmjJ/aWv0ioOxxV+ffm3yn5g/LrzldaHq8VLi3qElUH057dz8E0RPVWA+g1B3BxVcb&#xA;kPGGiIaOQfa64oSXVb4n/RkbYfbP8MUvtT/nF78oW8l+Uzrmqw8PMevIkkqMKNb2v2ood9wzfbk9&#xA;6D9nFXtmKuxV2KvMf+cjvIv+L/yr1SGGPnqWlD9J6fQVYvbgmRABuecJdQPGmKvjPyb+YNpo3ljU&#xA;tD1CGaeOd1lsvTCkK5pzDFmUgfAtKV74pBSxvOENTxtmp2qwr+rFjStH50sxAyPZt6hOzhgafhil&#xA;B3/mOzvLSS3eBwHGzVGxBqDiikiSeZEeNJGWOSgkQEgMBuOQHXFKq0luLBYlLGYyc2qKClCKDFX3&#xA;R/ziXfi5/JXTYQ1TY3V5ARtsWnaam3/GauKvY8VdirsVdirsVdirsVeI/wDOU/5sXnkvyjBo+jTt&#xA;Br2v8447iM0kt7WOnrSKRurtyCIf9YjcYq8O/wCcZvzrvvLHm5NB169km8va46xc55CwtrpjSOYF&#xA;z8KOTxk+hj9nFX2/irsVdirsVdirsVdirsVeXfn/APk9bfmL5Sb6nGieZtMVpdIuDQF+72zsafDJ&#xA;Tav2WoelcVfBXr3untPZTRtFPEzRvFICrxyKeLqVO4IPUeOKveP+cWvyPfzJqkXnbzBBXQdOl5ab&#xA;byDa7uoz9sg9YomG/wDM23QMMVfZ2KuxV2KuxVxAIodweoxV4rB/ziL+UC61dajcQXlzb3DmSPS2&#xA;uDHbQ8jUrH6KxS8R0AMmwxVOz/zjN+RxEYPleOkVCtLm8BNP5iJvi/2VcVVf+hbvyS/6laD/AJHX&#xA;P/VXFVsn/ONX5ISIUbytEAepW4u1P0MswIxVAz/84q/kdLx4aBJBStfTvb01r485n/DFUnvP+cOf&#xA;yhnBETanabUrDdIfp/exS4q9N/Lz8vvL/kHy1F5e0P1ms45Hmea4ZXmkkkPxO7KqLWgA2UbDFWS4&#xA;q7FXYq7FXYq7FXYq+E/+cr9Zk1b86rywL1i0q3tLGLwHOMXD0/2dwQfliry/WdPVI1uYqFRRZAPu&#xA;U/wxV9uf84y/mr/jfyKljqE3PzDoIS1veR+OWGlILjfryVeLH+ZSe4xV7BirsVdirsVdirsVdirs&#xA;VeD/AJnf84p6J5088f4ltdVbSIr1lfWbRIRIZXWgaSJuaiNpFHxVU7/F3OKvcNO06x02wt9PsIEt&#xA;rK0jWG2t4xxRI0HFVUDsAMVRGKuxV2KuxV2KuxV2KuxV2KsA/Ob83dL/ACy8tRanc2zX1/eyGDTr&#xA;BW9MO4Xkzu9G4og60BNSB7hV8taj/wA5c/nLqFy76e9nYRirCC2tBLRR4mYzN8ziqZ6D/wA5ofmL&#xA;ZOqazpmn6rCD8ZVZLWY+3NWeMf8AIvFXoumf85t+RpIwdU0DU7WWm62xt7la7ftPJbHx7YqnFt/z&#xA;mR+UcxT1ItVt+XUy20Z4/P05pPwxVk2lf85LfknqTKkfmWO3kbYpdw3FuBWvV5I1j7fzYq9HsNQs&#xA;NRs4r3T7mK8sp15QXNu6yxOvSqOhKsPkcVV8VdirsVfnb+b921/+dvmiWTfjqtxDuT0t2MQ6+0eK&#xA;pStqLp2hUfAwNa9KYoRv5b+edW/LHz/a6zCGlt4z6WoWy7C4s5COaiu3LbkvgwGKX6G6Frel67o9&#xA;nrGlTrdadfRLNbTp0ZG/UR0IPQ7YqjsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5&#xA;/wD+cy/Kl1qn5e2Ou29W/QN3yuUA29C7AiL+PwyCMfT7Yq8B8nxafqvkFpIYI49S0mQw3boiq8kM&#xA;hLxO5A3oTx+g4suiTX/6KHEX3pDnspkAr8x3xYIS50jykHUQ3VvPy/ahlkXfw4yBD+GKtP5X0ph8&#xA;IdPk1f11xW0u1by3Fa2r3FvIzenQsj0O1abEAYrb6e/5wi1K9m8teZdOklZ7S0u7eW3iJJCNPG4k&#xA;4+FfSXFL6WxV2KuxV+bnne4W/wDzW8z3UJrHPrGozIf8hriQr09jiqL06Aohc9WxQt1bR49SgIDB&#xA;LiNS0TtsNhUqT4HFQ9B/5xl/PF/Jmrjyn5hm4+WdQlpDNIdrK6Y05VPSKQ7P4H4v5qqX2yCCKjcH&#xA;ocVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqX+YdDsNf0LUNE1BedlqVvJbXAHXhKp&#xA;Uke4rUHxxV+f2kre/lt+Y2peXdfUrbK76fqRoQrRMaxXCj+Ugq6n+U4pBUvOnkjUIteeR5UFgQpW&#xA;Ymv7s9GQCvLl1FMVISG88s2yrW0vDI38skfEf8ECf1YoZDYQNb2UMLPzKKBy8cUIfXHUaXcAncrQ&#xA;DFXvn/ODn/HK83f8Z7L/AIhNil9P4q7FVG8uUtbOe6f7EEbytU0FEUsdz06Yq/M/y4Td6tcXFwec&#xA;rq0jk92dwScUFkomUSmM7dOOKqWp2ZvLGS3D8C9KN22Nd/uxVil1oNzBG7h1l4bkJXp36jFL6q/5&#xA;xT/PJtUt4vIHmOflqNtGf0DeSNUzQoKm2YnfnGoqnigp+yOSr6XxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KvCP8AnJn8iZ/O9hH5l8uwhvM+nR+nNbCgN5bLUhBXb1Y6nj4j4f5cVfJI&#xA;8161BaR6Fq4k4ae7RokqlZoaGhiYNQ0Ujodx09sVttNRil3idT4Dv9xxQrNeXBULyoB0AxVA6rcs&#xA;LNwW3eigYpfUv/OEujzweTfMGrOCsV9fxwRV6EW0VSw+melfbFX0firsVQ+o2i3mn3No1ONzE8Rr&#xA;0o6ld/vxV+Zvlxza6rLDMOLcGRl8GVht+BxQU9edTPz71BA+WKtyTyP9o0HgOmKqRdB+0MVSOaS7&#xA;0nVINU0yV7aeCVZraeM8WilQ8lZT2oRUYpfd35F/nXpX5k6Dwkpb+ZtPjT9LWVKKxPw+vD4xuR06&#xA;qdj2JVen4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWAfmN+Rn5defi1xrNh6Gq8eK&#xA;6tZkQ3PtzNCklKbeorU7UxV4N5g/5wh12ORm8veZLW4iJqkWoRSW7KPAvD64b58B8sVYpL/ziJ+c&#xA;8MhSMWEqj9uO7IX/AIdEP4Yqko/5xo/OWTzPDoM2juBIVLaqXD2KIwqzmYbfD3X7XgDtir7d8g+S&#xA;9M8l+UNN8tabVrewi4tM2zSysS8sre7uxNO3TFWQYq7FXYq/MnVZB/jTUniIKNe3RVl3BUyPuKe2&#xA;Ko6L0w5MpIIFV/1u2KHIGmkVC1ORpU9MVQd9e29rI0YYSuu1F6fScUqnlTyh5t8967FpGg2b3l05&#xA;BbiKQwpWhklc/CiDxPXoKmgxV9w/kp+RWhfllZSzx3El/wCYL+FI9RvWIEQ4nkY7dAAVTl/NUmld&#xA;umKvT8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYV+cX5g2n&#xA;kPyBqeuSSBb4xtb6VEesl5KpEQA7hftt/kg4q/OqyuUhuDNLyZqGlNyWPc1xVG3XmCWZ+QjAalKn&#xA;+gxVG+X/ACp5683T/V9B0q71I1oxtomMS/68lAij/WbFXuv5ff8AOGGtXUkd3551BdPttidMsGWW&#xA;4b/JeYgxJ/sefzGKvp/yh5J8reT9JTSvLmnxafaLQuIxV5GApzlkNXkb3Y4qnmKuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV4b/wA5Zf4P/wAIaN/ir9I/o/8A&#xA;SB9L9F+h6vrei9OXr/Dx48um9aYq8M8vf9CieoPr3+J+Nf8ApYejxpUf8sPxUxV7Z5F/6FA9RP0F&#xA;+hPX/wB1/pX1PU5V24/pPflXpTFXudl9S+qRfUfT+qcf3PocfT4/5PH4afLFVbFXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:461707ee-0fdd-ba4c-a019-e06b972416bf</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:461707ee-0fdd-ba4c-a019-e06b972416bf</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:461707ee-0fdd-ba4c-a019-e06b972416bf</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:38:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>201.681656</stDim:w>
            <stDim:h>191.912486</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -191.912 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 191.912 li
201.682 191.912 li
201.682 0 li
cp
clp
111.134 55.6796 mo
111.069 55.6796 111.069 55.7797 111.134 55.7797 cv
111.198 55.7797 111.198 55.6796 111.134 55.6796 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.317647 .290196 .301961 rgb
f
109.3 44.1796 mo
109.236 44.1796 109.236 44.2797 109.3 44.2797 cv
109.365 44.2797 109.365 44.1796 109.3 44.1796 cv
cp
f
65.2242 63.2377 mo
65.045 63.0859 64.8219 62.9736 64.547 62.9326 cv
64.3648 62.7324 64.1285 62.5746 63.8565 62.4838 cv
63.69 62.4282 63.523 62.3725 63.3565 62.3173 cv
62.9498 62.1816 62.5172 62.2827 62.1715 62.5161 cv
62.9166 63.6162 63.63 64.7387 64.3126 65.8832 cv
64.4913 65.8823 64.648 65.8486 64.7931 65.8002 cv
64.8751 64.9345 65.0196 64.0805 65.2242 63.2377 cv
cp
f
80.6637 8.91108 mo
84.6373 11.3701 89.0367 13.2084 93.2428 15.2294 cv
102.251 19.5581 111.913 21.7617 121.305 24.9794 cv
121.182 24.8115 121.067 24.6469 120.968 24.4868 cv
119.546 22.1967 118.751 20.1513 118.418 17.4428 cv
118.167 15.4116 117.983 12.832 118.123 10.3085 cv
114.362 7.85883 109.893 6.52973 104.944 5.59662 cv
95.6832 3.85004 87.0484 1.43696 78.2511 6.10102 cv
77.9308 6.27094 77.6222 6.45405 77.3121 6.63569 cv
78.4078 7.41352 79.5074 8.19526 80.6637 8.91108 cv
cp
.203922 .215686 .211765 rgb
f
104.593 11.9653 mo
103.876 11.9892 103.198 11.9648 102.542 11.9057 cv
102.479 11.788 102.391 11.6826 102.291 11.5854 cv
103.055 11.7456 103.822 11.8813 104.593 11.9653 cv
cp
80.6637 8.91108 mo
84.4508 11.2548 88.6227 13.0361 92.6476 14.9477 cv
92.6661 14.9355 92.6852 14.9257 92.7042 14.9135 cv
92.8917 14.79 92.9874 14.5971 93.0099 14.3994 cv
94.7037 14.2631 96.4088 14.2524 98.1183 14.3837 cv
98.8043 14.6411 99.4996 14.8593 100.212 14.9936 cv
104.518 15.8032 108.681 13.937 112.974 15.103 cv
113.496 15.2446 113.927 15.1142 114.242 14.8505 cv
114.281 14.8837 114.32 14.914 114.359 14.9477 cv
115.071 15.5595 115.745 16.289 116.572 16.7456 cv
117.099 17.0361 117.807 17.1 118.402 17.2997 cv
118.201 15.6269 118.054 13.6049 118.086 11.5488 cv
117.514 11.249 116.941 10.9516 116.376 10.6406 cv
116.369 10.6372 116.362 10.6357 116.356 10.6318 cv
115.275 8.61176 112.321 8.3725 109.776 7.91059 cv
109.555 7.73578 109.295 7.60248 108.985 7.54194 cv
108.361 7.41938 107.728 7.28071 107.088 7.13276 cv
103.347 5.39692 100.319 4.31196 96.5103 4.51508 cv
95.5934 4.32123 94.6768 4.14057 93.7647 3.99897 cv
91.5558 2.36469 87.9 2.90326 84.7306 4.04584 cv
82.4308 4.53364 79.7999 5.45649 77.4933 6.7641 cv
78.5294 7.49946 79.5709 8.23481 80.6637 8.91108 cv
cp
.317647 .290196 .301961 rgb
f
80.6637 8.91108 mo
81.3941 9.36323 82.1427 9.78852 82.898 10.2036 cv
84.0606 9.79828 85.252 9.44184 86.4664 9.10541 cv
88.7935 8.46137 91.2882 8.18354 93.6446 7.59809 cv
95.0787 7.67328 96.4532 7.83198 97.7911 7.48676 cv
101.416 8.38569 104.804 10.372 108.536 10.0624 cv
111.697 11.5556 114.874 13.0136 118.135 14.2807 cv
118.058 12.895 118.052 11.4291 118.15 9.98383 cv
115.589 9.00873 112.998 8.12397 110.397 7.2641 cv
110.173 6.88276 109.844 6.5644 109.404 6.42035 cv
105.324 5.08051 101.156 4.0141 96.8751 3.65717 cv
96.3248 3.51264 95.7535 3.41401 95.1598 3.37104 cv
91.7257 2.16449 87.1832 4.19721 83.9684 5.31196 cv
82.8209 5.70942 81.6988 6.14155 80.6031 6.61518 cv
80.5992 6.61176 80.5973 6.60785 80.5929 6.60395 cv
79.6187 5.71039 78.3458 5.87739 77.089 6.47797 cv
78.2589 7.30756 79.4288 8.14692 80.6637 8.91108 cv
cp
.603922 .576471 .588235 rgb
f
100.793 18.3779 mo
101.656 18.6933 102.523 18.996 103.392 19.2919 cv
103.397 19.1464 103.391 19.0004 103.359 18.8588 cv
104.992 18.3286 104.813 15.5068 102.8 15.5068 cv
101.39 15.5068 100.879 16.8994 101.263 17.914 cv
101.058 18.0244 100.912 18.1923 100.793 18.3779 cv
cp
.317647 .290196 .301961 rgb
f
116.134 19.5747 mo
114.218 19.5747 114.215 22.5512 116.134 22.5512 cv
118.049 22.5512 118.052 19.5747 116.134 19.5747 cv
cp
f
80.6783 6.70453 mo
84.0147 5.01215 87.5772 3.92817 91.1393 3.71625 cv
97.3575 3.34711 103.395 6.11616 108.914 8.61127 cv
111.301 9.69086 113.663 10.83 116.011 11.9975 cv
115.851 15.6987 116.549 19.2211 118.039 22.5629 cv
111.525 21.6489 104.554 17.4399 98.5592 15.7333 cv
91.8673 13.8286 86.2052 10.6459 80.6783 6.70453 cv
cp
123.156 23.7094 mo
120.458 19.3676 119.54 14.8461 120.2 9.79633 cv
120.396 8.29389 119.083 7.69428 117.905 7.96723 cv
112.664 5.42182 107.291 3.23627 102.11 1.51948 cv
93.0909 -1.46978 84.7647 .181097 77.0968 4.46821 cv
75.2887 4.33735 74.2618 6.88764 75.9898 8.1977 cv
82.6793 13.269 89.3912 17.2831 97.4962 19.5903 cv
105.064 21.7446 113.41 27.267 121.429 26.7192 cv
122.878 26.6201 124.005 25.0756 123.156 23.7094 cv
cp
0 0 0 rgb
f
182.914 38.4326 mo
181.594 32.2109 178.807 26.208 174.965 21.1601 cv
172.116 17.4174 168.751 15.1948 165.079 13.0078 cv
163.321 11.0493 161.037 9.79487 158.301 9.40864 cv
157.466 8.29389 156.562 7.30561 155.594 6.42426 cv
155.776 10.8134 157.338 15.4482 159.198 18.3032 cv
161.237 21.434 161.785 23.7109 159.896 27.0576 cv
156.867 32.4213 152.191 37.1181 148.191 41.7421 cv
143.836 46.7748 138.19 53.0073 138.464 60.1718 cv
140.475 60.0463 142.694 60.5117 144.387 60.7216 cv
150.812 61.517 154.631 60.9804 160.546 57.6391 cv
168.54 53.122 176.265 47.7817 183.522 41.9213 cv
183.349 40.6918 183.145 39.52 182.914 38.4326 cv
cp
.203922 .215686 .211765 rgb
f
160.658 9.54682 mo
159.05 9.26655 157.808 8.27387 156.409 7.48334 cv
156.155 7.33979 155.894 7.20795 155.638 7.0683 cv
155.756 8.72455 156.057 10.3974 156.492 11.9882 cv
156.51 12.0004 156.528 12.0131 156.546 12.0248 cv
158.162 13.0664 159.782 13.5527 161.381 12.2856 cv
162.314 11.5458 161.809 9.7475 160.658 9.54682 cv
cp
.317647 .290196 .301961 rgb
f
160.546 57.6391 mo
160.749 57.5239 160.948 57.3979 161.152 57.2817 cv
160.398 56.1806 158.703 55.7851 157.48 56.4277 cv
156.349 57.0224 155.081 57.9687 154.468 59.1508 cv
153.805 59.5493 153.27 60.1181 152.766 60.7089 cv
155.226 60.2485 157.631 59.2856 160.546 57.6391 cv
cp
f
167.237 34.2568 mo
167.536 32.9794 167.667 31.7148 167.668 30.7368 cv
167.669 30.3081 167.529 29.9262 167.308 29.6069 cv
167.982 29.2748 168.473 28.6523 168.385 27.77 cv
168.366 27.5854 168.345 27.4135 168.318 27.247 cv
168.327 27.2329 168.337 27.2192 168.346 27.205 cv
168.466 27.3154 168.585 27.4247 168.705 27.5361 cv
168.919 29.916 169.135 32.2973 169.348 34.6791 cv
168.777 34.2289 168 34.0414 167.237 34.2568 cv
cp
162.076 26.3808 mo
162.233 26.4164 162.394 26.4467 162.562 26.4614 cv
162.687 26.4721 162.809 26.4706 162.932 26.4697 cv
162.962 26.5722 162.985 26.6752 163.029 26.7788 cv
163.065 26.8627 163.115 26.9409 163.158 27.0224 cv
162.686 27.9326 162.985 28.874 163.608 29.5004 cv
162.946 29.5053 162.468 27.9677 162.076 26.3808 cv
cp
181.35 32.7446 mo
181.137 32.2045 180.741 31.8925 180.301 31.7397 cv
180.187 31.4194 180.06 31.1015 179.941 30.7822 cv
181.123 27.1484 177.065 22.1425 175.121 19.414 cv
172.038 15.0883 167.857 13.9169 163.137 11.9326 cv
161.983 11.4472 160.358 12.6899 160.516 13.9291 cv
160.687 15.2651 160.704 16.7324 161.12 18.0224 cv
161.265 18.4697 161.476 18.8842 161.719 19.2831 cv
161.607 19.3115 161.499 19.3569 161.384 19.3774 cv
161.635 19.5615 161.609 19.5698 161.306 19.4028 cv
160.766 19.3613 160.439 19.0805 159.818 19.208 cv
159.799 19.2119 159.781 19.2192 159.763 19.2231 cv
161.318 21.9018 161.594 24.0483 159.896 27.0576 cv
159.486 27.7827 159.042 28.4936 158.578 29.1962 cv
158.583 29.2143 158.586 29.2314 158.59 29.2495 cv
158.925 30.6235 159.334 32.3994 160.414 33.4145 cv
160.922 33.892 161.465 34.1689 162.02 34.2993 cv
161.86 34.7065 161.697 35.1137 161.523 35.5209 cv
160.993 36.7597 160.651 37.6337 161.187 38.9194 cv
161.418 39.4726 161.862 39.9599 162.521 39.9345 cv
163.015 39.9155 163.466 39.7983 163.878 39.6069 cv
163.865 39.8378 163.888 40.0707 163.937 40.2993 cv
162.949 39.9238 161.639 39.8017 159.928 40.0229 cv
155.655 40.5761 151.781 42.6567 148.039 44.6669 cv
146.694 45.3891 145.317 46.0937 143.942 46.8095 cv
141.727 49.6669 139.758 52.8002 138.901 56.1747 cv
139.711 56.7304 140.659 56.9677 141.685 56.9492 cv
141.585 57.0497 141.482 57.1435 141.383 57.2475 cv
140.654 58.0214 140.728 59.31 141.384 60.0483 cv
141.351 60.1196 141.318 60.1972 141.287 60.2836 cv
142.397 60.4169 143.47 60.6079 144.387 60.7216 cv
144.834 60.7768 145.266 60.8242 145.689 60.8662 cv
145.614 60.8002 145.541 60.7329 145.459 60.6777 cv
145.684 59.8959 145.811 59.1269 145.732 58.4731 cv
148.897 55.5566 153.442 52.6459 157.402 51.5639 cv
157.72 51.4907 158.037 51.4179 158.354 51.3369 cv
159.144 51.1787 159.588 50.6699 159.754 50.0659 cv
159.859 50.017 159.972 49.9775 160.077 49.9282 cv
159.318 51.8871 161.398 54.2353 163.425 52.9394 cv
164.388 52.3232 165.352 51.7075 166.315 51.0913 cv
166.414 51.1953 166.522 51.288 166.637 51.3701 cv
166.534 52.2695 167.107 52.914 167.877 53.1953 cv
173.507 49.5932 178.971 45.6303 184.182 41.3828 cv
183.494 38.5683 182.53 35.7431 181.35 32.7446 cv
cp
.14902 .156863 .152941 rgb
f
155.916 9.39155 mo
156.509 9.55805 157.35 9.36176 157.739 8.87836 cv
158.142 8.37787 158.258 8.13715 158.31 7.50043 cv
158.36 6.88569 157.915 6.07319 157.345 5.81684 cv
156.763 5.55561 156.172 5.3183 155.586 5.07221 cv
155.547 6.48774 155.671 7.94965 155.916 9.39155 cv
cp
.603922 .576471 .588235 rgb
f
177.43 39.1669 mo
177.431 39.2016 177.43 39.2363 177.431 39.2709 cv
177.296 39.2739 177.165 39.3134 177.043 39.371 cv
177.106 38.5141 177.076 37.6059 176.971 36.6772 cv
177.129 37.5068 177.288 38.3359 177.43 39.1669 cv
cp
147.175 52.4101 mo
148.199 51.9101 149.224 51.414 150.252 50.9218 cv
150.268 50.914 150.274 50.9023 150.289 50.894 cv
150.335 50.8735 150.382 50.8544 150.428 50.8344 cv
150.502 51.5107 150.973 52.1347 151.851 52.1347 cv
152.617 52.1347 153.072 51.6562 153.225 51.0844 cv
157.252 49.6996 161.108 47.665 164.972 45.7441 cv
165.347 45.6152 165.72 45.4819 166.094 45.3481 cv
165.893 45.7441 165.95 46.1738 166.164 46.5205 cv
166.173 46.5424 166.188 46.56 166.198 46.5815 cv
166.213 46.6039 166.223 46.6293 166.239 46.6508 cv
166.359 46.8788 166.52 47.0834 166.729 47.2153 cv
166.621 47.4423 166.534 47.6782 166.479 47.9277 cv
166.385 48.3505 166.664 48.6494 167.066 48.6992 cv
168.832 48.9169 170.503 47.5815 171.91 46.5673 cv
172.744 46.9882 173.895 46.7504 175.002 46.3862 cv
175.02 46.4833 175.037 46.5717 175.055 46.6655 cv
175.025 47.0029 175.096 47.3085 175.243 47.5644 cv
175.244 47.5698 175.245 47.5766 175.247 47.5825 cv
175.292 47.7607 175.338 47.9389 175.383 48.1176 cv
178.087 46.1757 180.742 44.1562 183.336 42.0668 cv
182.843 39.3427 182.136 36.6772 181.038 34.1718 cv
180.506 32.5234 179.77 30.9482 178.926 29.4247 cv
177.972 26.0805 175.657 22.6928 173.858 20.1635 cv
171.436 16.7568 168.551 13.0898 164.543 11.5693 cv
163.13 11.0331 162.057 12.8212 162.69 13.9804 cv
164.642 17.5551 167.911 20.3354 170.087 23.8134 cv
170.93 25.1616 171.586 26.6396 172.232 28.1206 cv
172.129 28.2812 172.049 28.4594 172.025 28.6621 cv
171.78 30.7172 172.012 31.5864 172.851 33.4125 cv
173.024 33.788 173.215 33.934 173.379 34.0346 cv
173.474 34.4955 173.552 34.954 173.617 35.4106 cv
173.108 36.6767 171.053 38.0165 170.182 38.7988 cv
169.167 39.7094 170.083 41.058 171.177 41.2016 cv
171.831 41.2871 172.229 41.247 172.526 41.2524 cv
172.224 41.6074 171.868 41.9135 171.489 42.1982 cv
171.422 41.5234 170.904 40.9272 170.106 41.2543 cv
169.77 41.3925 169.429 41.5107 169.089 41.6332 cv
168.924 41.5927 168.744 41.58 168.544 41.6323 cv
166.971 42.04 165.384 42.5341 163.821 43.1157 cv
161.723 43.6 159.613 44.0458 157.541 44.7133 cv
153.428 46.0375 149.623 48.08 146.038 50.4658 cv
144.825 51.2729 145.872 53.0429 147.175 52.4101 cv
cp
.113725 .117647 .113725 rgb
f
159.851 51.4887 mo
157.181 51.4887 157.177 55.6371 159.851 55.6371 cv
162.52 55.6371 162.525 51.4887 159.851 51.4887 cv
cp
.317647 .290196 .301961 rgb
f
152.939 36.3798 mo
153.199 36.497 153.503 36.5644 153.851 36.5644 cv
155.789 36.5644 156.379 34.4741 155.625 33.1967 cv
154.754 34.2753 153.854 35.3359 152.939 36.3798 cv
cp
f
158.351 31.1796 mo
158.286 31.1796 158.286 31.2797 158.351 31.2797 cv
158.415 31.2797 158.415 31.1796 158.351 31.1796 cv
cp
f
176.517 40.8461 mo
176.453 40.8461 176.453 40.9462 176.517 40.9462 cv
176.582 40.9462 176.582 40.8461 176.517 40.8461 cv
cp
.203922 .215686 .211765 rgb
f
178.184 35.7582 mo
175.861 35.7582 175.858 39.3676 178.184 39.3676 cv
180.506 39.3676 180.51 35.7582 178.184 35.7582 cv
cp
f
164.184 45.7441 mo
162.058 45.7441 162.054 49.0488 164.184 49.0488 cv
166.31 49.0488 166.314 45.7441 164.184 45.7441 cv
cp
f
141.974 58.2685 mo
141.337 56.5864 141.641 55.0288 142.886 53.5956 cv
143.906 51.4736 145.057 49.4096 146.297 47.4086 cv
150.391 40.8056 157.383 35.456 160.551 28.3466 cv
162.054 24.9736 161.525 22.0288 160.271 18.6625 cv
159.117 15.5668 158.465 12.831 158.247 9.8935 cv
158.279 9.91108 158.313 9.92817 158.345 9.94575 cv
168.345 15.4311 176.817 21.5468 180.259 32.9394 cv
180.986 35.3461 181.575 37.9033 182.053 40.5307 cv
175.294 46.642 167.868 52.1259 159.26 55.33 cv
154.888 56.958 150.271 58.0273 145.604 58.2538 cv
144.394 58.3129 143.184 58.3178 141.974 58.2685 cv
cp
185.814 39.6909 mo
184.182 29.5307 180.309 20.2934 171.953 13.7797 cv
167.815 10.5532 163.146 7.56049 158.247 4.87153 cv
158.242 2.47455 154.426 2.53461 154.252 5.03461 cv
153.896 10.1264 154.218 14.2661 156.116 19.0122 cv
157.529 22.5449 158 25.3002 155.734 28.7148 cv
154.178 31.0615 152.227 33.1401 150.4 35.2758 cv
146.885 39.3837 143.675 43.6957 141.059 48.4399 cv
139.493 51.2802 135.981 56.5996 137.302 60.0429 cv
138.474 63.0986 142.954 62.3798 145.604 62.2538 cv
150.937 61.9995 156.203 60.7841 161.172 58.8559 cv
170.528 55.225 178.539 49.2138 185.865 42.4633 cv
186.838 41.5673 186.564 40.3925 185.814 39.6909 cv
cp
0 0 0 rgb
f
58.983 21.3686 mo
54.3062 19.2626 49.5997 17.0351 45.0895 14.5903 cv
42.8668 13.3857 40.8419 11.7954 38.7452 10.3471 cv
33.3482 14.4125 29.61 20.3051 26.419 26.2534 cv
32.463 33.0766 38.942 39.0073 46.0519 44.977 cv
53.4239 51.1669 59.9117 58.3369 64.732 66.666 cv
65.2428 54.7968 78.2647 45.164 84.6168 36.4052 cv
85.6197 35.0219 87.4093 32.8393 87.4229 30.9125 cv
78.0435 27.434 68.1266 25.4863 58.983 21.3686 cv
cp
.203922 .215686 .211765 rgb
f
45.0895 14.5903 mo
42.942 13.4262 40.9801 11.9013 38.9591 10.4931 cv
37.4811 11.7172 36.3375 13.1533 35.8355 14.7934 cv
35.7809 14.9726 35.7652 15.1425 35.7818 15.3007 cv
33.1095 18.2817 30.4566 21.3515 28.1856 24.6367 cv
28.1036 24.7563 28.0318 24.8725 27.9532 24.9907 cv
27.5216 25.5258 27.1432 26.0873 26.7867 26.666 cv
28.9049 29.0371 31.0743 31.3095 33.3087 33.5048 cv
36.0982 29.7924 38.7716 25.9882 41.2188 22.0419 cv
42.8702 20.9692 44.5479 19.9418 46.3639 19.0986 cv
46.7857 19.5922 47.4718 19.8832 48.2799 19.7441 cv
49.9415 19.458 51.5406 19.1376 53.0772 18.6293 cv
50.379 17.3413 47.7003 16.0053 45.0895 14.5903 cv
cp
.317647 .290196 .301961 rgb
f
61.1656 24.7177 mo
60.4991 23.0737 58.8893 22.2285 57.211 23.1088 cv
54.5465 24.5068 51.8922 25.9238 49.2423 27.35 cv
47.5675 28.2514 47.4444 31.083 49.2423 31.9492 cv
50.2271 32.4238 51.2154 32.6352 52.2037 32.5815 cv
52.2452 32.8964 52.2882 33.2109 52.3614 33.5229 cv
53.0968 36.6552 57.7735 35.3144 57.1524 32.2021 cv
56.9073 30.9726 57.3448 29.5869 58.3731 28.8193 cv
58.3897 28.8071 58.401 28.7919 58.4171 28.7792 cv
58.7027 28.9497 58.9996 29.1108 59.3228 29.2573 cv
60.3985 29.7446 61.6217 29.1738 61.6681 27.9116 cv
61.7101 26.7695 61.5958 25.7788 61.1656 24.7177 cv
cp
f
77.4039 38.6669 mo
75.3756 34.3745 70.2223 37.0546 66.7511 36.9243 cv
65.2101 36.8666 64.3932 37.8007 64.2379 38.9023 cv
63.2657 39.8246 62.6202 41.0722 62.5553 42.7192 cv
62.5123 43.8027 63.6695 44.2084 64.5128 43.8422 cv
65.6119 43.3647 66.733 42.7607 67.8824 42.3686 cv
69.734 42.5966 71.5875 42.7748 73.4557 42.812 cv
74.648 42.8359 75.5777 41.9677 75.9757 40.9243 cv
76.023 40.9194 76.0709 40.9116 76.1187 40.9067 cv
77.2867 40.79 77.9122 39.7436 77.4039 38.6669 cv
cp
f
64.3756 30.4946 mo
64.3097 30.1684 64.2442 29.8422 64.1788 29.5156 cv
63.7804 27.5302 61.8204 27.3749 60.4728 28.2309 cv
59.7687 27.9506 58.8893 28.0781 58.2906 28.6337 cv
58.2794 28.6186 58.2677 28.6035 58.256 28.5888 cv
57.6925 29.2797 56.9757 31.0019 56.3785 31.9365 cv
54.3995 32.291 51.984 31.4872 50.2076 30.7485 cv
47.4659 29.6079 46.3438 33.687 48.3409 35.1767 cv
50.6217 36.8788 54.5079 38.2822 57.3521 37.3339 cv
58.0123 37.1137 58.61 36.6879 59.1349 36.1357 cv
60.4576 35.5707 61.6158 34.6982 62.5377 33.6122 cv
62.7647 33.5473 62.982 33.4487 63.2179 33.3388 cv
64.2691 32.85 64.5811 31.5195 64.3756 30.4946 cv
cp
.14902 .156863 .152941 rgb
f
73.2491 47.8237 mo
73.8385 47.7329 74.4308 47.5991 75.0108 47.4301 cv
76.9557 45.248 78.9488 43.1386 80.775 41.0849 cv
80.7413 40.7612 80.6798 40.4272 80.5704 40.0771 cv
79.7354 37.4013 75.816 37.9199 75.7101 40.7348 cv
75.7027 40.9247 75.6573 41.0937 75.5929 41.2509 cv
75.0997 41.1787 73.8629 41.8442 73.5943 41.9223 cv
73.1349 42.0566 72.6676 42.143 72.1969 42.2094 cv
71.8697 41.624 71.2579 41.1865 70.3521 41.1503 cv
69.6524 41.1225 69.0118 41.1943 68.3873 41.309 cv
67.1104 41.4223 65.8355 41.5502 64.5567 41.6591 cv
62.7965 41.8085 61.92 43.4013 62.6471 44.9877 cv
64.3912 48.7929 69.7799 48.3583 73.2491 47.8237 cv
cp
f
65.317 62.8496 mo
66.0553 60.0629 67.4195 57.4028 69.1231 54.8461 cv
68.7071 54.7372 68.254 54.7236 67.7843 54.7905 cv
67.7535 54.7949 67.7232 54.8051 67.6925 54.81 cv
67.4654 54.6293 67.1754 54.4936 66.7989 54.4384 cv
64.4859 54.101 62.2423 53.8476 60.0328 53.3203 cv
58.8209 52.7661 57.4728 52.1445 56.1002 51.0942 cv
54.4093 49.8012 52.7403 48.7104 50.6627 48.2636 cv
50.151 48.0141 49.6051 47.791 49.0426 47.5859 cv
52.4591 50.683 55.6349 54.0219 58.5123 57.5986 cv
59.4767 58.2055 60.193 58.9135 60.2608 59.8466 cv
60.8375 60.621 61.4137 61.3955 61.9596 62.1923 cv
62.527 62.3598 63.1583 62.3159 63.7198 61.978 cv
64.0001 61.809 64.3145 61.5996 64.6451 61.3788 cv
64.6676 61.9184 64.9273 62.4355 65.317 62.8496 cv
cp
f
38.5382 10.206 mo
37.8404 10.7988 37.2403 11.3906 36.8316 11.8129 cv
34.38 14.3447 32.4562 17.4306 30.4747 20.3266 cv
29.9342 21.1162 30.1749 21.8588 30.7232 22.3056 cv
30.6353 22.4531 30.5426 22.5966 30.4557 22.7446 cv
29.2203 24.0141 28.1866 25.5756 27.2613 27.1977 cv
28.484 28.5527 29.7198 29.8847 30.9806 31.1777 cv
33.0274 28.1874 35.1661 25.0302 35.4591 21.6513 cv
35.6866 21.3691 35.9039 21.0825 36.1349 20.8022 cv
37.6119 19.0068 40.0313 17.142 41.1388 14.9355 cv
41.8912 14.4467 42.6686 14.0151 43.4645 13.6235 cv
41.7872 12.5527 40.1861 11.3334 38.5382 10.206 cv
cp
.603922 .576471 .588235 rgb
f
74.3194 37.2582 mo
74.0147 36.7983 73.7643 36.4409 73.2569 36.1874 cv
72.6212 35.8701 71.9332 35.833 71.2413 35.9247 cv
70.191 36.0644 69.2037 36.4116 68.3009 36.9702 cv
66.7892 37.9057 67.7555 40.6474 69.565 39.9692 cv
70.2193 39.7236 70.7955 39.6279 71.4913 39.6538 cv
71.8648 39.6674 72.2086 39.686 72.5811 39.6464 cv
73.0763 39.5942 73.5743 39.3012 73.8189 39.1664 cv
74.4527 38.8178 74.7281 37.8759 74.3194 37.2582 cv
cp
f
57.8536 26.2719 mo
57.9215 25.7016 57.6734 24.9872 57.1114 24.7231 cv
56.3639 24.3715 55.7364 24.1884 54.9063 24.4218 cv
54.2662 24.6015 53.6207 24.9687 53.1295 25.4135 cv
52.2003 26.2553 51.6969 27.4116 51.6085 28.6474 cv
51.4903 30.3007 53.8858 30.454 54.3707 29.0209 cv
54.5367 28.5307 54.8692 28.3002 55.3014 28.0742 cv
55.5963 27.9199 55.5382 27.9702 55.9542 27.8657 cv
56.3097 27.7763 56.5987 27.6635 56.8824 27.4931 cv
57.3951 27.2597 57.7823 26.8696 57.8536 26.2719 cv
cp
f
67.2994 57.8959 mo
63.6993 56.1181 59.485 54.5058 55.9161 54.5307 cv
57.1539 55.9213 58.3565 57.3422 59.4933 58.8149 cv
61.6344 59.7748 63.7608 60.414 66.0089 60.7143 cv
66.3736 59.7602 66.8111 58.8217 67.2994 57.8959 cv
cp
.113725 .117647 .113725 rgb
f
40.3097 35.4409 mo
39.4518 35.4409 38.6295 36.1953 38.669 37.0815 cv
38.7091 37.9702 39.3902 38.7221 40.3097 38.7221 cv
41.1681 38.7221 41.9898 37.9672 41.9503 37.0815 cv
41.9107 36.1923 41.2296 35.4409 40.3097 35.4409 cv
cp
.317647 .290196 .301961 rgb
f
39.3004 30.0131 mo
39.2359 30.0131 39.2359 30.1132 39.3004 30.1132 cv
39.3648 30.1132 39.3648 30.0131 39.3004 30.0131 cv
cp
f
41.9669 26.9106 mo
39.8409 26.9106 39.837 30.2153 41.9669 30.2153 cv
44.0934 30.2153 44.0973 26.9106 41.9669 26.9106 cv
cp
f
56.6339 43.0131 mo
56.5694 43.0131 56.5694 43.1132 56.6339 43.1132 cv
56.6983 43.1132 56.6983 43.0131 56.6339 43.0131 cv
cp
f
47.9669 38.3481 mo
45.1168 38.3481 45.1119 42.7778 47.9669 42.7778 cv
50.8175 42.7778 50.8224 38.3481 47.9669 38.3481 cv
cp
f
78.4288 38.4853 mo
78.421 37.5219 77.7462 36.7675 76.86 36.5497 cv
76.8048 36.4623 76.608 36.3271 76.2545 36.1391 cv
75.8507 35.8085 75.4469 35.4775 75.0435 35.1469 cv
74.4503 34.6767 73.8565 34.185 73.1183 33.9584 cv
71.6466 33.5078 70.0045 33.9594 68.6017 34.4345 cv
65.4112 35.5161 62.7833 37.768 62.8009 41.3681 cv
62.8136 43.9413 66.8136 43.9467 66.8009 41.3681 cv
66.7896 39.0165 70.5455 37.1899 72.4723 38.1884 cv
73.8321 38.893 74.712 40.7431 76.4298 40.6494 cv
77.503 40.5908 78.4391 39.7802 78.4298 38.6494 cv
78.4293 38.5947 78.4293 38.54 78.4288 38.4853 cv
cp
0 0 0 rgb
f
72.1236 48.3408 mo
68.9254 52.3544 65.2003 56.7226 64.0899 61.8193 cv
52.8819 49.4448 39.6832 38.9775 28.2804 26.7543 cv
28.4205 26.3832 28.5553 26.0102 28.7018 25.6425 cv
30.8092 20.3486 34.9249 15.3237 39.9645 11.6293 cv
41.4015 12.3432 43.2081 14.0107 44.0499 14.5971 cv
45.9229 15.9028 47.7398 17.2812 49.7184 18.4291 cv
52.1578 19.8447 54.7335 21.0634 57.3282 22.225 cv
56.0572 22.0205 54.7057 22.0932 53.5968 22.3232 cv
52.1856 22.6152 50.8419 23.3393 50.003 24.5434 cv
49.4903 25.2783 49.4913 25.9716 49.1783 26.7529 cv
48.7667 27.7792 48.4747 27.9091 47.3585 28.2363 cv
44.8937 28.9594 45.9425 32.8207 48.422 32.0937 cv
50.1983 31.5727 51.9459 30.7548 52.7198 28.9663 cv
53.1427 27.9872 52.9034 26.9101 53.9796 26.3715 cv
54.2896 26.2163 57.4181 26.0834 57.4464 26.1728 cv
58.2228 28.6176 62.0855 27.5732 61.3038 25.1093 cv
61.1007 24.4702 60.7501 23.958 60.3077 23.5434 cv
60.8517 23.7797 61.3976 24.018 61.9386 24.2543 cv
69.5782 27.5903 77.3751 30.4829 85.3976 32.7192 cv
80.9171 37.8764 76.3785 43.0014 72.1236 48.3408 cv
cp
89.5289 29.6855 mo
79.2638 27.062 69.3756 23.3339 59.754 18.913 cv
55.7213 17.06 51.8097 15.1782 48.1607 12.6342 cv
45.7198 10.9326 41.9527 7.0766 38.774 7.29828 cv
37.9269 7.35785 37.0436 7.87446 36.8458 8.76703 cv
36.8268 8.85248 36.8077 8.93793 36.7887 9.02338 cv
36.7745 9.08832 36.7745 9.14741 36.7662 9.21039 cv
36.0103 9.74164 35.2584 10.2856 34.5167 10.8627 cv
29.8585 14.4858 27.045 19.02 24.9005 24.4453 cv
23.6217 24.7914 22.6612 26.5385 23.8458 27.8476 cv
36.3038 41.6074 51.2022 52.9829 63.3478 66.999 cv
64.3907 68.2026 65.8624 67.5781 66.4415 66.4692 cv
67.1593 66.2338 67.7423 65.6293 67.753 64.6513 cv
67.8248 58.1113 74.4327 51.684 78.4005 47.0019 cv
82.3712 42.3163 86.4063 37.6845 90.4112 33.0283 cv
91.3565 31.9296 91.0763 30.081 89.5289 29.6855 cv
cp
f
21.2398 145.721 mo
31.9854 142.506 44.2218 144.123 55.2906 145.128 cv
54.2765 135.668 57.2013 127.441 60.1637 118.758 cv
58.3399 120.047 56.1671 120.747 53.8424 121.409 cv
48.9337 122.806 43.943 123.894 38.9645 125.008 cv
32.6368 126.424 26.5103 128.086 20.6871 131.025 cv
20.2867 131.227 18.1754 132.391 15.858 133.565 cv
16.4063 134.912 16.9542 136.259 17.526 137.602 cv
18.6812 140.315 20.0504 142.994 21.2398 145.721 cv
cp
.203922 .215686 .211765 rgb
f
19.985 140.863 mo
20.0006 141.027 20.0318 141.194 20.0978 141.369 cv
20.1178 141.421 20.1393 141.474 20.1593 141.526 cv
20.5343 142.923 20.9317 144.311 21.36 145.687 cv
23.0274 145.194 24.7306 144.816 26.4596 144.534 cv
26.1622 143.675 25.8595 142.818 25.5953 141.955 cv
24.6764 138.954 23.8766 135.923 23.1554 132.869 cv
23.0807 132.551 22.8932 132.359 22.6671 132.262 cv
22.566 131.601 22.4332 130.939 22.2687 130.273 cv
21.7398 130.518 21.2105 130.761 20.6871 131.025 cv
20.3912 131.174 19.1612 131.849 17.6041 132.665 cv
18.336 135.059 19.0958 137.409 19.6593 139.625 cv
19.7647 140.039 19.8766 140.45 19.985 140.863 cv
cp
.317647 .290196 .301961 rgb
f
52.1886 137.951 mo
52.1939 137.666 52.1451 137.394 52.0421 137.135 cv
51.6812 136.004 50.5519 135.166 49.3463 135.462 cv
49.151 135.51 48.6471 135.745 48.6383 135.75 cv
48.6363 135.751 48.6349 135.753 48.6334 135.754 cv
48.4786 135.737 48.3238 135.727 48.169 135.725 cv
47.5035 135.426 46.7174 135.41 46.0724 135.825 cv
45.6075 136.125 45.2848 136.541 45.1041 137.005 cv
44.8448 137.277 44.6178 137.578 44.4522 137.899 cv
43.9391 138.891 43.9044 139.846 44.0553 140.928 cv
44.1759 141.793 45.0772 142.501 45.8561 142.728 cv
47.5382 143.219 49.3653 142.722 50.6397 141.537 cv
51.0924 141.115 51.4859 140.594 51.7662 140.041 cv
52.0348 139.511 52.2335 138.946 52.2237 138.342 cv
52.1056 137.562 52.0938 137.432 52.1886 137.951 cv
cp
f
54.7096 145.075 mo
54.9015 144.844 55.0792 144.605 55.2281 144.351 cv
55.0807 142.617 55.0509 140.918 55.1402 139.254 cv
54.0768 137.681 51.3736 137.952 50.9044 139.917 cv
50.7037 140.757 50.2281 141.515 49.8062 142.291 cv
48.1729 142.646 45.3346 142.382 44.8131 142.309 cv
43.3878 142.023 42.36 142.922 42.0118 143.999 cv
46.3087 144.245 50.586 144.694 54.7096 145.075 cv
cp
.14902 .156863 .152941 rgb
f
51.0821 132.648 mo
52.2765 133.07 53.38 133.052 54.6485 132.938 cv
55.1866 132.89 55.6104 132.898 55.9674 132.948 cv
56.336 131.108 56.7999 129.289 57.3272 127.476 cv
56.7447 127.482 56.148 127.521 55.4933 127.493 cv
51.8307 127.332 49.9742 124.473 46.1681 125.623 cv
42.7247 126.664 38.5489 129.06 34.6563 129.512 cv
34.5318 129.248 34.2833 129.044 33.8834 129.042 cv
32.8102 129.037 31.7423 129.089 30.6764 129.166 cv
28.9181 128.658 27.7218 128.082 25.3609 129.852 cv
23.4488 131.286 25.1983 134.487 27.148 133.301 cv
28.5519 132.855 28.5455 133.68 29.7672 134.128 cv
31.0689 134.605 32.1173 134.452 33.4513 134.261 cv
37.7096 133.649 41.8233 132.64 45.8814 131.29 cv
48.8722 130.295 48.5904 131.769 51.0821 132.648 cv
cp
f
17.9493 135.827 mo
18.2682 136.849 18.5909 137.861 18.8717 138.852 cv
19.5348 141.194 20.296 143.484 21.0792 145.767 cv
22.255 145.409 23.4503 145.115 24.6588 144.868 cv
24.0436 141.883 23.3897 138.909 22.5958 135.937 cv
22.1305 134.195 21.7232 132.443 21.0406 130.857 cv
20.9234 130.915 20.8043 130.966 20.6871 131.025 cv
20.3238 131.208 18.5499 132.185 16.4928 133.241 cv
16.6056 133.648 16.7135 134.057 16.8268 134.463 cv
17.0211 135.158 17.443 135.598 17.9493 135.827 cv
cp
.603922 .576471 .588235 rgb
f
50.4679 138.623 mo
49.8897 137.293 48.0733 136.912 46.9039 137.656 cv
45.9903 138.237 45.588 139.611 45.9811 140.623 cv
46.1954 141.175 46.6329 141.596 47.2584 141.596 cv
47.5772 141.596 47.8658 141.47 48.0968 141.274 cv
48.1871 141.3 48.2774 141.326 48.3653 141.359 cv
49.0548 141.616 49.9049 141.232 50.3224 140.692 cv
50.8165 140.052 50.777 139.334 50.4679 138.623 cv
cp
f
52.6417 129.966 mo
53.8951 130.522 55.1144 130.822 56.3663 131.115 cv
56.5655 130.268 56.7804 129.425 57.0123 128.583 cv
55.275 128.421 53.9947 128.407 53.9156 128.653 cv
54.0289 128.301 53.7135 127.818 53.3155 127.865 cv
46.9054 128.625 41.1114 130.628 34.5094 130.307 cv
33.6041 130.263 33.6085 131.664 34.5094 131.713 cv
40.2765 132.021 46.9859 132.181 52.38 129.664 cv
52.4254 129.79 52.5001 129.904 52.6417 129.966 cv
cp
.113725 .117647 .113725 rgb
f
57.2931 120.271 mo
56.6285 120.537 55.943 120.777 55.234 120.997 cv
54.4176 122.168 54.9332 124.245 56.8004 124.245 cv
59.2174 124.245 59.3834 120.748 57.2931 120.271 cv
cp
.317647 .290196 .301961 rgb
f
37.6339 133.393 mo
35.0548 133.393 35.0509 137.4 37.6339 137.4 cv
40.2125 137.4 40.2169 133.393 37.6339 133.393 cv
cp
f
35.1339 139.575 mo
33.2184 139.575 33.2154 142.551 35.1339 142.551 cv
37.0489 142.551 37.0523 139.575 35.1339 139.575 cv
cp
f
36.3907 142.247 mo
32.0528 142.253 26.6954 141.657 22.3067 142.875 cv
21.2545 140.246 20.2022 137.617 19.15 134.988 cv
21.5631 134.307 23.6837 133.046 25.9996 131.949 cv
29.7979 130.15 33.7437 128.695 37.7467 127.424 cv
44.0411 125.427 50.4674 123.871 56.8819 122.304 cv
56.3043 125.896 54.7882 129.565 54.4356 133.16 cv
54.1095 136.48 54.2071 139.761 54.567 143.045 cv
53.2638 142.935 51.9605 142.832 50.6563 142.744 cv
51.0675 142.578 51.4625 142.375 51.8028 142.085 cv
52.2135 141.735 52.5392 141.328 52.7687 140.836 cv
52.9659 140.413 53.0509 140.005 53.0929 139.543 cv
53.1891 138.481 53.295 138.905 52.1378 139.029 cv
54.6705 138.757 54.6983 134.754 52.1378 135.029 cv
51.2218 135.127 50.5304 135.354 49.9278 136.075 cv
49.2071 136.937 49.4024 137.742 49.1183 138.712 cv
48.9825 139.176 49.631 138.901 48.795 139.163 cv
48.4942 139.257 48.0636 139.211 47.7623 139.175 cv
47.3619 139.128 46.5831 139.046 46.4522 138.601 cv
45.7286 136.136 41.8673 137.185 42.5948 139.664 cv
42.9767 140.966 43.8526 141.868 44.9449 142.436 cv
42.0963 142.318 39.2457 142.244 36.3907 142.247 cv
cp
61.1202 119.698 mo
61.1153 118.372 59.8487 117.458 58.5885 117.769 cv
51.2589 119.576 43.8805 121.273 36.6837 123.567 cv
33.3487 124.63 30.0621 125.826 26.8448 127.206 cv
23.463 128.657 20.1793 130.913 16.5274 131.485 cv
15.1837 131.696 14.8614 132.876 15.2247 133.882 cv
15.002 133.993 14.7794 134.104 14.5567 134.213 cv
16.066 137.983 17.5753 141.753 19.0841 145.524 cv
19.1895 145.788 19.2921 146.06 19.3961 146.328 cv
19.4254 146.317 19.4552 146.31 19.484 146.299 cv
20.0099 147.115 21.0562 147.648 22.1749 147.115 cv
24.5724 145.971 27.9439 146.414 30.5382 146.338 cv
33.4635 146.251 36.3912 146.225 39.3175 146.263 cv
45.1739 146.338 51.0162 146.689 56.8468 147.234 cv
58.2784 147.368 58.9488 145.855 58.7755 144.702 cv
58.0548 139.912 57.9942 135.043 58.8375 130.263 cv
59.4664 126.698 61.1344 123.32 61.1202 119.698 cv
cp
0 0 0 rgb
f
49.3312 158.418 mo
49.4234 158.667 49.5206 158.914 49.6075 159.164 cv
50.7374 162.417 51.025 165.733 52.9908 168.66 cv
58.1666 176.365 69.9454 178.957 79.6202 177.838 cv
80.9298 175.702 81.9781 173.415 82.5987 171.095 cv
83.7237 166.889 83.1959 162.467 82.6544 158.16 cv
72.0943 157.2 59.8336 155.326 49.3312 158.418 cv
cp
.203922 .215686 .211765 rgb
f
61.5582 170.012 mo
61.7013 170.049 61.2911 169.706 61.1935 169.628 cv
60.8883 169.384 60.5802 169.145 60.2813 168.894 cv
59.3736 168.132 58.5382 167.295 57.7364 166.425 cv
57.7027 166.14 57.6168 165.845 57.4527 165.545 cv
57.0821 164.868 56.7789 164.191 56.5035 163.509 cv
56.2857 161.956 55.8844 160.67 55.3145 159.279 cv
55.3126 159.266 55.3092 159.254 55.3067 159.241 cv
55.3048 159.242 55.3028 159.243 55.3004 159.244 cv
55.2257 159.061 55.1588 158.885 55.0777 158.698 cv
54.9293 158.355 54.7374 158.1 54.5201 157.911 cv
54.5055 157.873 54.4894 157.836 54.4747 157.798 cv
54.4347 157.636 54.3824 157.477 54.3385 157.316 cv
52.6153 157.581 50.9225 157.947 49.273 158.435 cv
50.4093 161.681 51.7584 164.844 53.4698 167.873 cv
53.9913 168.796 54.8277 169.088 55.6251 168.974 cv
56.4654 169.846 57.339 170.684 58.2892 171.44 cv
59.5514 172.445 60.919 173.544 62.4215 172.338 cv
62.9283 171.932 62.8849 171.168 62.6397 170.649 cv
62.3868 170.114 61.9815 170.181 61.5582 170.012 cv
cp
.317647 .290196 .301961 rgb
f
66.5577 164.803 mo
66.2393 164.844 65.9205 164.878 65.6012 164.908 cv
65.94 164.267 66.1915 163.678 66.2911 162.909 cv
66.3487 162.467 65.8966 161.866 65.4478 161.802 cv
64.546 161.672 64.0538 161.764 63.2662 162.192 cv
62.1358 162.595 61.1895 163.464 60.4347 164.407 cv
59.0479 166.139 59.3521 168.21 61.1622 169.494 cv
63.4205 171.095 67.0128 170.673 68.5465 168.269 cv
69.4059 166.922 68.3097 164.572 66.5577 164.803 cv
cp
f
76.7735 158.03 mo
76.6817 157.822 76.5514 157.672 76.4034 157.547 cv
74.9986 157.409 73.5777 157.273 72.1471 157.154 cv
72.1368 157.23 72.128 157.307 72.13 157.391 cv
72.15 158.414 72.6339 159.336 73.4957 159.902 cv
73.9312 160.187 74.4254 160.352 74.9459 160.326 cv
75.2882 160.309 75.6139 160.231 75.9166 160.071 cv
76.0602 159.965 76.2003 159.855 76.338 159.742 cv
76.6158 159.395 76.6666 159.325 76.4898 159.531 cv
76.8751 159.138 76.9952 158.534 76.7735 158.03 cv
cp
.14902 .156863 .152941 rgb
f
79.463 178.102 mo
80.8487 175.892 81.9527 173.51 82.5987 171.095 cv
83.0934 169.246 83.2652 167.354 83.2599 165.45 cv
82.8751 165.478 82.5343 165.584 82.0416 165.893 cv
81.0768 166.498 80.9942 167.303 81.3258 167.962 cv
81.1583 168.01 80.9923 168.063 80.8243 168.11 cv
80.024 168.335 79.606 168.894 79.484 169.518 cv
77.5758 169.972 75.6651 170.417 73.754 170.859 cv
72.7613 171.088 72.2525 171.753 72.1143 172.508 cv
71.4371 172.52 70.7423 172.524 70.0558 172.511 cv
70.2647 172.177 70.3736 171.769 70.3287 171.296 cv
70.2813 170.799 70.1471 170.382 69.9513 170.027 cv
70.0182 169.003 69.234 167.964 68.0738 167.938 cv
67.2276 167.919 66.4005 168.195 65.565 168.31 cv
64.8604 168.407 64.1471 168.39 63.4371 168.41 cv
61.5606 168.463 60.8424 170.188 61.2667 171.545 cv
60.6026 172.151 60.3219 173.112 60.9576 174.143 cv
62.6583 176.9 66.3643 177.282 69.3292 177.647 cv
72.6495 178.055 76.0748 178.26 79.463 178.102 cv
cp
f
59.2369 170.1 mo
55.6744 167.057 55.2286 161.287 52.2413 157.737 cv
52.2379 157.722 52.235 157.706 52.232 157.691 cv
51.0323 157.94 49.8521 158.247 48.6935 158.614 cv
49.3785 161.676 51.6363 164.803 52.9601 167.449 cv
54.1124 169.753 55.3629 172.372 58.214 172.569 cv
59.6563 172.669 59.9698 170.951 59.1744 170.116 cv
59.1954 170.111 59.2164 170.105 59.2369 170.1 cv
cp
.603922 .576471 .588235 rgb
f
64.5011 161.736 mo
63.337 161.439 62.1573 162.307 62.1573 163.521 cv
62.1573 164.748 63.3346 165.578 64.5011 165.307 cv
65.2965 165.122 66.5899 164.762 66.5753 163.718 cv
66.5597 162.632 65.4132 161.968 64.5011 161.736 cv
cp
f
82.5987 171.095 mo
82.6021 171.081 82.6046 171.068 82.6085 171.055 cv
79.3038 171.557 75.9786 171.973 72.6515 172.191 cv
70.0396 172.362 65.8346 171.487 63.7799 173.468 cv
62.8902 174.326 63.4166 175.65 64.4576 176.035 cv
69.3067 177.825 74.8507 177.543 80.2071 176.828 cv
81.2393 174.986 82.0748 173.054 82.5987 171.095 cv
cp
.113725 .117647 .113725 rgb
f
80.8443 167.164 mo
80.9225 170.767 80.9952 174.329 78.7955 177.082 cv
70.6988 177.476 62.4024 176.285 57.7994 170.995 cv
54.8419 167.597 53.0748 163.033 51.464 158.612 cv
51.6051 158.347 51.7462 158.082 51.8878 157.817 cv
52.5645 158.42 53.4991 158.213 54.6983 157.171 cv
55.9371 157.117 57.1612 157.242 58.3702 157.549 cv
59.919 157.862 61.4229 158.367 62.9713 158.683 cv
66.4259 159.386 69.9039 159.101 73.3883 159.478 cv
74.3805 159.586 78.5328 159.746 79.5782 160.601 cv
81.4078 162.095 80.797 164.988 80.8443 167.164 cv
cp
84.7872 165.363 mo
84.7257 163.346 85.3219 159.785 83.9273 158.032 cv
82.5352 156.282 78.42 156.238 76.4522 155.91 cv
73.1969 155.369 69.9732 155.457 66.7061 155.19 cv
63.0782 154.894 59.672 153.342 56.0333 153.183 cv
52.7506 153.039 47.047 154.166 47.6505 158.431 cv
47.6764 158.613 47.7418 158.768 47.816 158.915 cv
47.6886 158.96 47.5582 158.996 47.4317 159.042 cv
49.1485 163.631 50.9093 168.418 53.7589 172.294 cv
59.0987 179.558 68.4229 180.896 77.0768 180.783 cv
77.7193 181.681 79.1148 182.185 80.2408 181.292 cv
85.2042 177.353 84.963 171.132 84.7872 165.363 cv
cp
0 0 0 rgb
f
69.1759 163.686 mo
66.2081 162.568 58.7535 161.076 58.61 166.162 cv
58.5416 168.583 62.0733 168.724 62.5548 166.593 cv
62.6158 166.582 62.6935 166.582 62.7955 166.6 cv
63.3473 166.693 64.0226 166.591 64.5875 166.645 cv
65.8043 166.762 66.9742 167.114 68.1124 167.543 cv
70.524 168.452 71.566 164.587 69.1759 163.686 cv
cp
f
180.28 146.285 mo
181.428 145.208 182.545 144.108 183.593 142.97 cv
194.962 130.618 202.992 112.807 198.361 95.9965 cv
198.34 94.7998 198.278 93.623 198.189 92.4731 cv
191.939 97.4379 185.369 102.023 178.619 105.923 cv
174.072 108.55 169.292 111.697 163.833 111.348 cv
161.779 111.217 156.204 109.532 153.12 109.894 cv
161.661 122.403 170.993 134.327 180.28 146.285 cv
cp
.203922 .215686 .211765 rgb
f
164.542 111.366 mo
164.265 111.865 163.999 112.374 163.744 112.902 cv
162.492 115.498 166.116 117.704 167.65 115.185 cv
168.205 114.273 168.847 113.445 169.517 112.616 cv
169.858 112.194 170.21 111.782 170.579 111.383 cv
170.676 111.279 170.957 111.058 171.136 110.894 cv
172.252 110.983 173.288 110.789 174.233 109.886 cv
174.883 109.264 175.256 108.533 175.486 107.741 cv
172.074 109.68 168.483 111.403 164.542 111.366 cv
cp
.317647 .290196 .301961 rgb
f
171.491 134.937 mo
171.774 134.664 172.042 134.393 172.285 134.138 cv
172.95 133.439 173.385 132.288 173.026 131.331 cv
172.205 129.135 170.071 127.919 167.742 128.561 cv
167.44 128.645 167.16 128.768 166.889 128.905 cv
168.415 130.922 169.948 132.933 171.491 134.937 cv
cp
f
180.53 107.051 mo
180.528 106.329 180.106 105.734 179.514 105.383 cv
179.214 105.559 178.919 105.75 178.619 105.923 cv
177.47 106.587 176.306 107.284 175.12 107.949 cv
174.895 108.337 174.689 108.732 174.535 109.154 cv
174.341 109.461 174.138 109.763 173.94 110.068 cv
172.452 110.729 171.415 112.508 170.478 113.735 cv
169.806 114.614 169.989 115.447 170.551 116.021 cv
170.599 116.66 170.912 117.293 171.501 117.591 cv
171.714 117.699 li
172.336 118.014 173.267 118.025 173.759 117.435 cv
173.856 117.321 173.944 117.192 174.039 117.07 cv
174.043 117.099 174.142 117.056 174.313 116.952 cv
174.973 116.551 175.61 116.078 176.127 115.503 cv
176.542 115.041 176.897 114.466 177.126 113.851 cv
178.66 112.658 180.105 111.357 181.056 109.706 cv
181.684 108.613 181.287 107.611 180.53 107.051 cv
cp
.14902 .156863 .152941 rgb
f
164.684 125.986 mo
166.291 125.389 167.771 124.534 169.518 123.742 cv
171.388 122.895 170.055 119.911 168.137 120.465 cv
165.751 121.154 163.797 121.573 161.518 121.71 cv
162.568 123.14 163.621 124.567 164.684 125.986 cv
cp
f
154.529 111.921 mo
154.633 112.03 154.743 112.132 154.867 112.219 cv
154.842 112.244 154.815 112.271 154.79 112.296 cv
155.626 113.499 156.462 114.702 157.311 115.896 cv
158.822 114.321 160.462 112.586 160.853 110.835 cv
158.719 110.394 156.09 109.838 154.077 109.834 cv
153.873 110.386 153.929 110.919 154.149 111.373 cv
154.275 111.557 154.403 111.738 154.529 111.921 cv
cp
f
198.403 109.078 mo
198.924 106.978 199.141 104.781 199.335 103.199 cv
199.844 99.0551 199.734 95.3403 199.141 91.7114 cv
194.166 95.7172 188.982 99.4853 183.653 102.862 cv
183.995 103.719 184.308 104.415 184.396 104.592 cv
184.641 105.081 184.974 105.402 185.345 105.595 cv
185.412 108.987 185.196 112.348 184.242 115.379 cv
184.176 115.589 184.155 115.786 184.153 115.975 cv
183.328 118.313 182.603 120.69 181.749 122.877 cv
181.167 123.146 180.696 123.487 180.274 123.949 cv
180.076 123.789 179.847 123.672 179.599 123.602 cv
179.658 122.897 179.06 122.174 178.416 121.989 cv
177.508 121.728 176.798 122.31 176.47 123.094 cv
176.027 124.152 175.475 125.21 176.28 126.254 cv
176.4 126.411 176.541 126.535 176.69 126.645 cv
176.665 126.703 176.644 126.762 176.618 126.819 cv
176.251 127.624 175.857 128.284 175.925 129.196 cv
175.999 130.197 176.652 130.97 177.487 131.31 cv
176.608 132.751 175.68 134.159 174.657 135.495 cv
174.538 135.093 174.344 134.748 173.863 134.48 cv
173.033 134.017 172.091 134.279 171.289 134.674 cv
174.036 138.246 176.8 141.805 179.565 145.364 cv
183.581 142.163 186.745 137.734 188.113 132.883 cv
189.031 131.856 189.736 130.694 190.321 129.447 cv
195.19 123.08 203.083 112.307 198.403 109.078 cv
cp
f
166.291 111.269 mo
165.969 111.788 165.731 112.347 165.707 112.978 cv
165.664 114.088 166.232 115.137 167.357 115.398 cv
167.997 115.547 168.784 115.308 169.104 114.687 cv
169.389 114.133 169.843 113.705 170.263 113.215 cv
170.877 112.498 171.432 111.675 172.09 111.004 cv
172.902 110.177 173.996 109.493 174.26 108.423 cv
171.733 109.788 169.098 110.934 166.291 111.269 cv
cp
.603922 .576471 .588235 rgb
f
163.832 124.838 mo
164.667 124.577 165.486 124.289 166.279 123.96 cv
167.015 124.271 167.737 123.748 167.591 122.937 cv
167.554 122.728 167.516 122.519 167.479 122.311 cv
167.387 121.802 166.795 121.391 166.294 121.409 cv
164.827 121.463 163.341 121.757 161.871 122.187 cv
162.523 123.072 163.175 123.957 163.832 124.838 cv
cp
.113725 .117647 .113725 rgb
f
198.293 93.8364 mo
198.245 93.3955 198.191 92.955 198.136 92.5146 cv
195.5 94.6074 192.806 96.6249 190.064 98.5571 cv
189.878 99.0888 189.789 99.6157 189.891 100.113 cv
189.99 100.597 190.838 101.589 191.476 102.36 cv
191.657 103.11 191.851 103.858 192.022 104.612 cv
192.156 105.206 192.627 105.566 193.159 105.694 cv
193.102 106.94 193.037 108.185 192.945 109.428 cv
192.896 110.096 192.812 110.774 192.711 111.456 cv
192.369 112.494 191.977 113.528 191.52 114.56 cv
191.274 115.116 191.015 115.664 190.751 116.209 cv
190.401 116.025 189.921 116.042 189.616 116.321 cv
186.423 119.242 185.345 123.593 183.743 127.493 cv
181.786 132.257 179.276 136.767 175.927 140.678 cv
177.207 142.328 178.488 143.977 179.769 145.627 cv
180.829 144.585 181.867 143.519 182.894 142.441 cv
185.189 140.027 187.459 138.015 187.668 134.572 cv
187.691 134.188 187.475 133.848 187.172 133.623 cv
187.374 133.496 187.553 133.325 187.683 133.098 cv
188.641 131.416 189.371 129.654 189.96 127.839 cv
190.107 127.568 190.265 127.305 190.408 127.032 cv
190.421 127.201 190.427 127.372 190.445 127.539 cv
190.547 128.504 191.549 128.945 192.306 128.31 cv
196.861 124.486 197.626 116.771 198.059 111.206 cv
198.202 109.367 198.236 107.54 198.193 105.721 cv
199.87 102.552 198.595 96.6127 198.293 93.8364 cv
cp
f
156.412 114.627 mo
157.346 113.328 158.395 111.953 159.001 110.459 cv
158.606 110.382 158.208 110.308 157.807 110.237 cv
156.918 111.14 156.176 112.239 155.483 113.292 cv
155.794 113.737 156.099 114.185 156.412 114.627 cv
cp
f
162.467 118.513 mo
162.403 118.513 162.402 118.613 162.467 118.613 cv
162.531 118.613 162.531 118.513 162.467 118.513 cv
cp
.317647 .290196 .301961 rgb
f
178.8 117.012 mo
176.161 117.012 176.157 121.114 178.8 121.114 cv
181.44 121.114 181.444 117.012 178.8 117.012 cv
cp
f
182.8 110.575 mo
180.885 110.575 180.882 113.551 182.8 113.551 cv
184.716 113.551 184.719 110.575 182.8 110.575 cv
cp
f
178.134 139.346 mo
178.069 139.346 178.069 139.446 178.134 139.446 cv
178.198 139.446 178.198 139.346 178.134 139.346 cv
cp
.203922 .215686 .211765 rgb
f
179.254 137.605 mo
179.153 137.778 179.053 137.951 178.952 138.123 cv
178.811 138.364 179.157 138.547 179.316 138.336 cv
179.437 138.175 179.558 138.015 179.68 137.854 cv
179.866 137.606 179.418 137.326 179.254 137.605 cv
cp
f
177.634 140.243 mo
176.578 140.243 176.576 141.883 177.634 141.883 cv
178.69 141.883 178.691 140.243 177.634 140.243 cv
cp
f
181.134 132.93 mo
180.319 132.93 180.318 134.196 181.134 134.196 cv
181.948 134.196 181.949 132.93 181.134 132.93 cv
cp
f
185.134 129.741 mo
183.218 129.741 183.215 132.718 185.134 132.718 cv
187.049 132.718 187.052 129.741 185.134 129.741 cv
cp
f
186.967 123.241 mo
185.052 123.241 185.048 126.218 186.967 126.218 cv
188.882 126.218 188.885 123.241 186.967 123.241 cv
cp
f
190.967 120.973 mo
189.565 120.973 189.562 123.153 190.967 123.153 cv
192.37 123.153 192.372 120.973 190.967 120.973 cv
cp
f
194.634 115.346 mo
194.569 115.346 194.569 115.446 194.634 115.446 cv
194.698 115.446 194.698 115.346 194.634 115.346 cv
cp
f
194.634 104.575 mo
192.718 104.575 192.715 107.551 194.634 107.551 cv
196.549 107.551 196.552 104.575 194.634 104.575 cv
cp
f
193.3 99.0747 mo
191.385 99.0747 191.382 102.051 193.3 102.051 cv
195.216 102.051 195.219 99.0747 193.3 99.0747 cv
cp
f
197.495 110.355 mo
196.55 121.272 188.876 132.117 182.204 140.454 cv
181.655 141.14 181.101 141.8 180.542 142.441 cv
178.583 139.524 176.449 136.742 174.228 134.026 cv
174.254 133.889 174.29 133.761 174.309 133.617 cv
174.451 132.537 173.287 131.627 172.309 131.617 cv
172.281 131.617 172.258 131.623 172.232 131.623 cv
166.905 125.3 161.292 119.199 156.684 112.325 cv
159.66 112.928 162.73 113.563 165.683 113.673 cv
165.581 114.217 165.733 114.803 166.294 115.296 cv
167.391 116.26 168.538 117.057 170.05 117.004 cv
171.628 116.949 172.882 115.849 173.183 114.32 cv
173.313 113.663 173.219 113.041 173.13 112.388 cv
175.081 111.682 176.99 110.804 178.761 110.055 cv
182.469 108.486 186.029 106.598 189.051 103.904 cv
192.181 101.114 194.471 97.5776 197.297 94.5107 cv
197.837 99.9023 197.927 105.357 197.495 110.355 cv
cp
200.643 90.5112 mo
200.503 90.6259 200.359 90.7353 200.219 90.8496 cv
200.068 90.5507 199.918 90.2524 199.767 89.954 cv
199.149 88.7319 197.535 88.7563 196.625 89.5493 cv
190.516 94.8715 187.152 101.637 179.571 105.338 cv
176.317 106.926 172.057 108.968 168.451 109.525 cv
163.847 110.237 158.29 108.441 153.746 107.716 cv
151.941 107.428 150.882 109.321 151.355 110.569 cv
151.287 110.97 151.354 111.411 151.632 111.863 cv
159.129 124.05 170.066 133.591 177.817 145.572 cv
177.875 145.782 177.966 145.996 178.123 146.212 cv
178.389 146.579 178.655 146.945 178.921 147.311 cv
180.164 149.027 182.711 148.017 182.685 146.318 cv
188.98 139.352 194.236 130.929 198.046 122.732 cv
202.718 112.681 202.044 101.32 200.643 90.5112 cv
cp
0 0 0 rgb
f
113.125 140.265 mo
111.465 144.933 109.612 149.69 108.569 154.433 cv
107.195 160.681 108.555 166.749 109.057 172.997 cv
109.496 178.459 108.529 183.582 106.304 188.207 cv
107.266 187.985 108.192 187.725 109.068 187.424 cv
114.596 188.982 121.12 188.117 125.925 185.714 cv
130.906 183.224 135.738 179.984 140.06 176.276 cv
130.864 164.433 121.62 152.627 113.125 140.265 cv
cp
.203922 .215686 .211765 rgb
f
126.402 158.556 mo
126.394 158.559 126.391 158.56 126.383 158.562 cv
126.047 158.654 125.741 158.8 125.463 159.001 cv
124.007 159.958 123.828 161.529 124.587 162.781 cv
124.504 163.6 124.782 164.487 125.296 165.112 cv
125.313 165.306 125.38 165.483 125.499 165.644 cv
126.382 167.506 128.949 167.011 129.839 165.554 cv
130.3 165.357 130.75 165.104 131.184 164.821 cv
129.581 162.739 127.988 160.65 126.402 158.556 cv
cp
.317647 .290196 .301961 rgb
f
120.018 149.993 mo
119.036 150.19 118.017 150.465 117.053 150.637 cv
116.934 150.551 116.793 150.489 116.641 150.436 cv
116.64 150.239 116.631 150.044 116.599 149.863 cv
116.578 149.747 116.536 149.638 116.49 149.531 cv
117.141 148.538 117.545 147.593 117.372 146.316 cv
116.46 145.04 115.558 143.758 114.66 142.472 cv
113.87 143.317 113.226 144.089 113.063 144.569 cv
112.878 145.113 112.998 145.8 112.841 146.264 cv
112.5 147.274 111.629 148.665 110.959 149.882 cv
110.611 149.562 110.258 149.254 110.041 149.097 cv
109.474 150.874 108.961 152.654 108.569 154.433 cv
108.51 154.704 108.462 154.973 108.412 155.243 cv
108.67 155.413 108.962 155.588 109.318 155.762 cv
109.887 156.039 110.408 156.173 110.923 156.217 cv
111.147 156.42 111.403 156.577 111.682 156.692 cv
111.676 156.789 111.672 156.888 111.656 156.98 cv
111.251 159.272 110.161 160.384 109.279 162.443 cv
108.642 163.931 109.701 165.912 111.529 165.369 cv
115.923 164.064 116.959 159.95 117.236 156.111 cv
117.256 155.828 117.283 155.561 117.309 155.302 cv
118.565 155.229 119.844 155.067 121.079 154.933 cv
121.077 155.002 121.07 155.074 121.076 155.142 cv
121.129 155.742 121.624 156.191 122.248 156.034 cv
122.434 155.987 122.645 155.892 122.801 155.834 cv
122.754 155.865 123.04 155.826 123.135 155.829 cv
123.516 155.839 123.845 155.722 124.116 155.531 cv
122.74 153.693 121.372 151.848 120.018 149.993 cv
cp
.14902 .156863 .152941 rgb
f
130.774 164.286 mo
130.021 164.852 129.292 165.454 128.595 166.02 cv
127.824 166.646 127.736 167.555 128.046 168.346 cv
126.204 169.544 124.399 170.77 122.616 171.685 cv
121.233 172.394 119.838 173.068 118.432 173.715 cv
119.154 172.351 119.091 170.409 118.365 169.075 cv
117.994 168.393 117.507 168.2 116.817 167.938 cv
116.67 167.882 116.041 168.094 116 168.048 cv
115.988 168.035 116.525 166.354 116.548 166.26 cv
116.684 165.719 115.848 165.488 115.712 166.03 cv
115.528 166.763 115.045 167.699 115.036 168.447 cv
115.033 168.735 115.269 169.16 115.265 169.306 cv
115.254 169.749 115.07 170.451 115.089 171.026 cv
115.104 171.48 115.305 171.697 115.187 172.102 cv
115.076 172.485 114.45 173.331 114.252 173.628 cv
113.587 174.62 113.301 174.477 112.222 174.799 cv
111.525 175.007 110.881 175.321 110.238 175.656 cv
109.82 175.874 109.48 176.053 109.15 176.189 cv
109.059 180.687 107.989 184.922 106.019 188.793 cv
106.719 188.702 107.417 188.595 108.108 188.464 cv
111.38 187.846 114.543 186.738 117.665 185.544 cv
122.432 185.214 126.953 183.397 130.931 180.448 cv
133.025 179.485 134.998 178.334 136.616 176.77 cv
136.765 176.627 136.87 176.47 136.945 176.307 cv
137.691 175.941 138.423 175.532 139.137 175.087 cv
136.343 171.491 133.55 167.895 130.774 164.286 cv
cp
f
128.658 161.528 mo
128.567 161.581 128.477 161.633 128.384 161.686 cv
127.482 162.208 127.088 163.51 127.67 164.412 cv
128.234 165.287 129.458 165.73 130.396 165.127 cv
130.626 164.978 130.855 164.833 131.08 164.685 cv
130.271 163.634 129.463 162.581 128.658 161.528 cv
cp
.603922 .576471 .588235 rgb
f
120.922 151.217 mo
120.379 151.433 119.838 151.655 119.308 151.885 cv
119.075 151.35 118.521 150.997 117.914 151.447 cv
117.75 151.569 117.6 151.711 117.442 151.842 cv
117.392 151.744 117.324 151.646 117.211 151.556 cv
116.613 151.079 113.062 150.37 109.78 149.912 cv
109.49 150.854 109.226 151.797 108.983 152.74 cv
110.781 153.073 112.943 152.513 114.741 152.654 cv
114.619 153.206 114.779 153.824 115.213 154.189 cv
113.795 156.057 112.71 158.247 111.838 160.316 cv
111.202 161.826 113.547 162.613 114.366 161.381 cv
115.69 159.388 116.979 157.296 118.076 155.166 cv
118.134 155.055 118.188 154.95 118.242 154.846 cv
119.714 154.437 121.238 154.079 122.754 153.693 cv
122.141 152.869 121.53 152.044 120.922 151.217 cv
cp
.113725 .117647 .113725 rgb
f
136.235 171.352 mo
136.256 171.568 136.305 171.778 136.405 171.968 cv
135.329 172.949 134.211 173.875 133.027 174.697 cv
132.734 174.901 132.436 175.093 132.136 175.284 cv
131.368 175.492 130.603 175.78 129.844 176.117 cv
126.831 175.475 123.885 176.755 121.017 177.926 cv
119.501 178.544 118.016 179.09 116.525 179.592 cv
117.33 178.922 118.098 178.184 118.665 177.308 cv
119.349 176.251 118.009 175 116.971 175.614 cv
116.165 175.958 115.42 176.477 114.706 177.018 cv
114.426 177.195 114.14 177.364 113.861 177.542 cv
112.423 177.902 110.962 179.121 110.074 180.061 cv
109.714 180.441 109.632 180.925 109.729 181.371 cv
109.537 181.405 109.357 181.454 109.164 181.486 cv
108.96 181.52 108.754 181.551 108.55 181.585 cv
108.126 183.643 107.483 185.63 106.627 187.535 cv
112.368 187.144 118.181 186.625 123.652 184.78 cv
127.692 183.418 133.838 181.561 136.604 178.062 cv
137.649 177.32 138.627 176.504 139.583 175.661 cv
138.467 174.225 137.351 172.789 136.235 171.352 cv
cp
f
115.728 144.007 mo
114.931 145.239 114.129 146.468 113.345 147.707 cv
112.898 148.414 113.998 149.041 114.458 148.358 cv
115.162 147.313 115.887 146.283 116.602 145.245 cv
116.309 144.833 116.019 144.42 115.728 144.007 cv
cp
f
114.467 182.534 mo
112.929 182.534 112.926 184.925 114.467 184.925 cv
116.005 184.925 116.008 182.534 114.467 182.534 cv
cp
.203922 .215686 .211765 rgb
f
118.3 178.924 mo
117.049 178.924 117.046 180.869 118.3 180.869 cv
119.552 180.869 119.554 178.924 118.3 178.924 cv
cp
f
122.3 182.18 mo
122.236 182.18 122.236 182.28 122.3 182.28 cv
122.365 182.28 122.365 182.18 122.3 182.18 cv
cp
f
126.134 179.87 mo
124.384 179.87 124.381 182.589 126.134 182.589 cv
127.883 182.589 127.886 179.87 126.134 179.87 cv
cp
f
122.8 181.346 mo
122.736 181.346 122.736 181.446 122.8 181.446 cv
122.865 181.446 122.865 181.346 122.8 181.346 cv
cp
f
116.965 185.832 mo
115.029 186.283 112.787 186.746 110.378 187.14 cv
111.167 185.381 111.692 183.517 111.862 181.521 cv
112.198 177.579 110.84 173.867 110.701 169.963 cv
110.566 166.143 111.863 162.143 111.997 158.245 cv
112.151 153.72 112.158 148.435 114.459 144.369 cv
117.655 149.4 120.178 154.793 123.897 159.511 cv
124.962 160.862 126.038 162.205 127.114 163.547 cv
126.81 163.53 126.538 163.511 126.319 163.498 cv
123.748 163.35 123.756 167.35 126.319 167.498 cv
127.591 167.572 128.903 167.533 130.146 167.324 cv
130.666 167.972 131.188 168.618 131.707 169.267 cv
133.352 171.321 134.963 173.997 136.761 176.17 cv
131.187 180.881 124.864 183.993 116.965 185.832 cv
cp
140.839 174.71 mo
138.968 172.785 137.338 169.939 135.754 167.96 cv
133.113 164.663 130.462 161.375 127.833 158.07 cv
123.292 152.36 120.45 145.75 116.231 139.834 cv
115.186 138.369 113.158 138.932 112.576 140.127 cv
107.655 146.316 108.75 154.046 107.916 161.467 cv
107.416 165.919 106.492 169.285 107.18 173.816 cv
108.058 179.602 108.236 184.115 104.635 189.03 cv
104.061 189.814 104.197 190.586 104.671 191.134 cv
104.567 191.298 104.477 191.468 104.37 191.63 cv
104.639 191.615 104.912 191.602 105.178 191.584 cv
105.19 191.584 105.201 191.582 105.213 191.582 cv
105.974 192.031 107.034 192.077 107.794 191.379 cv
118.796 190.375 130.516 187.307 138.927 180.025 cv
139.386 179.627 139.83 179.2 140.28 178.783 cv
141.065 178.745 141.792 178.256 142.092 177.359 cv
142.165 177.14 li
142.509 176.111 141.789 175.056 140.839 174.71 cv
cp
0 0 0 rgb
f
7.76767 109.831 mo
11.2374 108.04 14.6505 106.147 18.3165 104.732 cv
24.1471 102.481 30.2687 101.351 36.339 99.955 cv
40.8995 98.9072 49.3971 98.0908 52.7159 94.1621 cv
47.6837 85.1342 40.6402 77.5444 32.6393 71.0307 cv
26.1588 65.7543 20.358 60.2426 14.9137 54.1074 cv
11.9957 59.6752 9.21152 65.1835 8.46933 71.2104 cv
7.77207 72.1308 7.26816 73.3124 7.08066 74.7675 cv
6.97666 75.5737 6.37461 76.4345 6.09384 77.1855 cv
5.55674 78.622 5.33457 79.9858 5.18271 81.5219 cv
4.96006 83.7705 4.61728 86.1508 5.09531 88.373 cv
3.13193 89.6938 1.79306 92.103 2.49082 94.5156 cv
3.99814 99.726 5.7955 104.805 7.76767 109.831 cv
cp
.203922 .215686 .211765 rgb
f
11.9044 94.7705 mo
12.0269 96.6142 12.1524 98.4575 12.276 100.301 cv
12.2936 100.558 12.3038 100.815 12.315 101.073 cv
11.9415 99.0498 11.6324 97.0175 11.4371 94.9609 cv
11.5997 94.9155 11.7545 94.8481 11.9044 94.7705 cv
cp
4.36777 94.7968 mo
4.51328 95.8754 4.70859 96.9389 4.95322 97.9755 cv
5.09384 98.5707 5.39707 98.978 5.78037 99.2285 cv
6.61191 101.96 7.38877 104.71 8.06308 107.503 cv
8.25058 108.28 8.67295 108.787 9.19248 109.094 cv
11.256 108.015 13.3185 106.935 15.4376 105.963 cv
15.3868 103.823 14.901 101.615 14.6939 99.5415 cv
14.3409 95.9965 14.0343 92.4462 13.734 88.8964 cv
13.7164 88.6894 13.6446 88.5224 13.5509 88.3759 cv
13.5675 88.2304 13.5807 88.0834 13.5851 87.9316 cv
13.5631 87.6059 13.5255 87.2817 13.4728 86.9589 cv
13.4503 86.9038 13.4322 86.8598 13.4132 86.8129 cv
13.4122 86.6577 13.3868 86.5141 13.3434 86.3793 cv
13.5147 85.7841 13.7101 85.2006 13.921 84.6401 cv
14.2574 83.7436 13.9044 83.0727 13.3033 82.7158 cv
13.3814 82.6469 13.4532 82.5688 13.5128 82.475 cv
15.0763 80.0141 15.9708 76.9892 17.172 74.3393 cv
18.6339 71.1147 20.3062 68.0112 22.1031 64.9619 cv
22.8043 63.7714 21.2384 62.7358 20.3307 63.5004 cv
20.7164 62.6767 21.1031 61.8608 21.4947 61.0532 cv
19.381 58.9663 17.3302 56.8163 15.3307 54.583 cv
15.2799 54.7104 15.2232 54.8281 15.1739 54.9584 cv
14.7721 56.0102 15.1305 56.8295 15.7979 57.3222 cv
13.6461 60.1435 11.0519 62.8598 10.1256 65.7373 cv
9.88681 66.4785 9.84677 67.2241 9.98545 67.8852 cv
8.22861 70.2622 6.44297 72.7665 6.30185 75.6484 cv
6.25693 76.5688 6.59873 77.227 7.12802 77.6391 cv
7.03916 77.9643 6.96494 78.2924 6.88925 78.6201 cv
5.82187 80.5712 5.07627 82.6909 4.62851 84.8935 cv
2.98593 85.0322 1.42197 86.4355 2.11533 88.3276 cv
2.9039 90.478 3.64756 92.6347 4.36777 94.7968 cv
cp
.317647 .290196 .301961 rgb
f
48.0289 91.1567 mo
44.7872 89.1196 38.3355 88.2197 35.2984 90.9741 cv
34.7086 91.1293 34.1266 91.2993 33.5577 91.4848 cv
32.0089 91.9907 30.6895 92.8593 30.4195 94.5766 cv
30.1397 96.3569 31.1549 97.9663 32.9518 98.2734 cv
34.378 98.517 35.506 97.7133 35.8487 96.624 cv
36.7047 96.601 37.5885 96.1811 38.0475 95.3652 cv
39.0089 95.1835 39.92 95.0165 40.2345 94.9785 cv
42.2931 94.7319 44.2179 94.8881 46.1822 95.5366 cv
48.8331 96.4111 50.2667 92.5629 48.0289 91.1567 cv
cp
f
26.6251 81.0903 mo
25.2638 81.1123 24.1061 81.8574 22.9825 82.5615 cv
21.9986 83.1782 21.0665 84.2519 20.0196 84.5766 cv
19.3766 84.7758 18.7364 84.5629 18.0538 84.9155 cv
17.4474 85.2285 16.9415 85.7397 16.6832 86.3676 cv
16.2467 87.4277 16.3546 88.7021 16.503 89.8984 cv
16.4132 90.4853 16.4698 91.1098 16.7408 91.7748 cv
17.732 94.206 21.586 94.1152 21.5948 91.1176 cv
21.5963 90.6279 21.5367 90.0747 21.4986 89.5248 cv
22.6007 89.2812 23.5519 88.7763 24.5704 87.8071 cv
26.0348 86.4135 27.6998 84.4472 27.9259 82.3911 cv
28.002 81.6987 27.2682 81.0795 26.6251 81.0903 cv
cp
f
29.2359 87.4716 mo
29.1495 87.2206 29.0255 86.9887 28.8961 86.7592 cv
28.9063 86.3867 28.8624 86.0175 28.7315 85.664 cv
28.1373 84.0556 25.7008 83.3642 24.7853 85.1479 cv
24.4981 85.707 24.402 86.1918 24.4078 86.6577 cv
24.2809 86.854 24.1471 87.0458 24.0064 87.2329 cv
23.6593 87.6948 23.2716 88.1342 22.8644 88.5434 cv
22.6598 88.749 22.4513 88.9462 22.2481 89.1445 cv
21.7008 89.3496 21.1539 89.5556 20.6207 89.7998 cv
19.7076 90.2182 19.3033 91.7329 19.902 92.5415 cv
19.9605 92.621 20.0196 92.7001 20.0782 92.7797 cv
20.3634 93.1645 20.7857 93.5498 21.2857 93.6352 cv
21.3834 93.6899 21.485 93.7294 21.5899 93.7529 cv
22.2345 94.3168 23.149 94.5165 24.0206 93.9404 cv
24.4869 93.6323 24.9283 93.2548 25.3546 92.854 cv
26.1368 92.5419 26.877 92.1479 27.5177 91.706 cv
28.4571 91.0585 29.1207 90.2299 29.3346 89.0966 cv
29.4371 88.5527 29.4059 88.0019 29.2359 87.4716 cv
cp
.14902 .156863 .152941 rgb
f
32.2125 100.655 mo
32.3307 100.706 32.4478 100.75 32.5655 100.8 cv
33.8233 100.521 35.0821 100.244 36.339 99.955 cv
40.4308 99.0146 47.6939 98.2617 51.5431 95.2807 cv
51.1012 94.9042 50.5304 94.6577 49.8595 94.6318 cv
47.7926 94.5522 45.7115 95.2114 43.6598 95.3383 cv
43.2955 95.0317 42.8233 94.8139 42.2662 94.7436 cv
41.1891 94.6069 40.1681 94.6352 39.1886 94.8178 cv
38.5782 94.8041 37.9571 94.9335 37.2662 95.3706 cv
37.2193 95.4003 37.1817 95.436 37.1378 95.4672 cv
36.5499 95.7392 35.9757 96.0747 35.4166 96.4897 cv
35.2765 96.5937 35.1568 96.7128 35.0475 96.8378 cv
34.6939 96.7226 34.3395 96.5976 33.9825 96.4565 cv
31.5841 95.5092 29.8307 99.6079 32.2125 100.655 cv
cp
f
42.1734 80.8022 mo
42.4659 80.7851 42.7472 80.7929 43.023 80.8129 cv
39.8287 77.3041 36.3429 74.0463 32.6393 71.0307 cv
32.5768 70.9794 32.5167 70.9277 32.4542 70.8764 cv
31.5177 70.7973 30.5812 70.7187 29.6446 70.6391 cv
26.8126 70.3984 26.7828 74.4111 29.2267 75.1367 cv
28.0465 76.4189 28.7555 79.1674 30.8058 78.9448 cv
32.7218 78.7368 34.399 78.1225 36.276 77.7875 cv
37.8092 77.5141 38.9244 77.5043 39.902 77.7348 cv
39.9835 77.8134 40.026 77.8906 40.0113 77.9638 cv
39.7447 79.3037 40.6231 80.893 42.1734 80.8022 cv
cp
f
5.92832 99.1884 mo
6.06992 100.557 6.15439 101.851 6.11972 103.025 cv
6.09726 103.782 6.68466 104.118 7.25986 104.07 cv
7.73203 105.832 8.2208 107.59 8.70224 109.349 cv
10.0338 108.655 11.3614 107.955 12.7018 107.278 cv
11.9757 104.616 11.2555 101.951 10.5558 99.2807 cv
9.84824 96.5805 9.56064 93.4326 8.1705 90.9882 cv
8.17929 90.371 8.19931 89.7543 8.23984 89.1376 cv
8.36533 87.2299 8.7584 85.3632 9.18711 83.5009 cv
9.80381 83.1572 10.2769 82.5395 10.3399 81.6479 cv
10.5724 78.3857 11.4005 75.54 12.7633 72.5825 cv
13.6954 70.559 14.4405 68.6728 14.6124 66.4858 cv
15.9791 64.1596 17.4137 61.8788 18.7267 59.6308 cv
18.8917 59.3481 19.0665 59.0634 19.2467 58.7783 cv
18.0621 57.5561 16.8902 56.3188 15.7423 55.0468 cv
15.2174 56.0849 14.7174 57.0986 14.2281 58.0234 cv
13.2584 59.8554 12.3204 61.6777 11.4361 63.5141 cv
9.9332 64.2104 9.55771 67.0864 8.98691 68.666 cv
7.65976 72.3393 6.48593 75.8002 6.0084 79.602 cv
4.62656 82.4457 4.49424 85.9814 4.77939 89.6142 cv
4.75937 89.6586 4.733 89.6982 4.71738 89.7456 cv
3.70664 92.7973 4.99033 96.1103 5.92832 99.1884 cv
cp
.603922 .576471 .588235 rgb
f
41.3814 88.6606 mo
39.61 88.3447 37.8048 88.872 36.1588 89.5297 cv
34.8897 90.0361 33.6441 90.7612 33.6246 92.2778 cv
33.607 93.6152 35.274 93.8588 35.961 92.9111 cv
35.5265 93.5107 36.2276 93.123 36.6324 93.061 cv
37.1847 92.977 37.7325 92.8686 38.2862 92.7924 cv
39.2901 92.6538 40.443 92.6064 41.3814 92.2226 cv
42.857 91.6181 43.3937 89.0195 41.3814 88.6606 cv
cp
f
20.1905 83.8945 mo
18.9605 84.1176 18.1007 85.393 17.4908 86.394 cv
16.9054 87.3544 16.4693 88.4106 16.214 89.5053 cv
15.7647 91.4331 18.4405 92.1 19.1295 90.309 cv
19.3961 89.6162 19.7896 88.9301 20.2872 88.3754 cv
20.8775 87.7172 21.7716 87.2451 22.1305 86.4174 cv
22.7398 85.0097 21.7452 83.6123 20.1905 83.8945 cv
cp
f
24.8004 70.5839 mo
23.1114 70.5839 23.1085 73.2089 24.8004 73.2089 cv
26.4894 73.2089 26.4923 70.5839 24.8004 70.5839 cv
cp
.317647 .290196 .301961 rgb
f
22.2716 72.3535 mo
21.9737 72.2202 21.6749 71.9829 21.358 71.916 cv
21.0743 71.8564 20.7403 71.9008 20.5372 72.1332 cv
20.276 72.4311 20.2174 72.7011 20.0909 72.9252 cv
19.4352 74.0893 20.5279 75.7075 21.8907 75.2665 cv
22.4146 75.0971 22.8551 74.6948 23.004 74.1533 cv
23.1739 73.5356 22.9049 72.6367 22.2716 72.3535 cv
cp
f
23.6339 75.2519 mo
22.8043 75.2519 22.8028 76.541 23.6339 76.541 cv
24.4635 76.541 24.4645 75.2519 23.6339 75.2519 cv
cp
f
29.8004 77.2841 mo
27.297 77.2841 27.2931 81.1748 29.8004 81.1748 cv
32.3038 81.1748 32.3082 77.2841 29.8004 77.2841 cv
cp
f
33.6339 82.0747 mo
31.7184 82.0747 31.7154 85.0512 33.6339 85.0512 cv
35.5489 85.0512 35.5523 82.0747 33.6339 82.0747 cv
cp
f
22.8404 98.1323 mo
21.6559 98.4536 21.2574 99.9902 22.1217 100.854 cv
22.9859 101.719 24.523 101.32 24.8443 100.136 cv
25.1983 98.8305 24.1451 97.7783 22.8404 98.1323 cv
cp
f
20.8004 96.1796 mo
20.7359 96.1796 20.7359 96.2797 20.8004 96.2797 cv
20.8648 96.2797 20.8648 96.1796 20.8004 96.1796 cv
cp
f
23.5304 100.596 mo
19.8971 101.738 12.7286 103.049 9.00986 106.143 cv
8.06064 103.771 li
7.83799 103.216 7.45127 102.854 7.00595 102.648 cv
6.95078 101.146 6.67099 99.9921 6.04209 98.5937 cv
4.49961 95.166 3.70615 93.1938 4.94345 89.622 cv
5.64463 87.5981 6.7247 85.7387 7.19541 83.6284 cv
7.72861 81.2416 7.4542 78.8461 7.55966 76.4321 cv
7.8209 70.4887 11.3487 67.5717 13.9386 62.621 cv
14.6798 61.204 15.3028 59.7363 15.881 58.2495 cv
21.1983 64.9843 28.2511 70.3652 34.3258 76.3525 cv
38.0338 80.0068 41.4293 83.9267 44.3292 88.2578 cv
43.5011 87.8417 42.651 87.4682 41.7057 87.2622 cv
39.6808 86.8203 37.5353 86.8793 35.5431 87.4467 cv
32.1183 88.4218 29.4269 90.9062 30.0167 94.6484 cv
30.4171 97.184 34.2716 96.1074 33.8741 93.5849 cv
33.463 90.9785 39.1681 90.8227 40.6427 91.1191 cv
42.7931 91.5512 44.544 92.9697 46.5851 93.7133 cv
46.922 93.8364 47.2291 93.8598 47.5069 93.8198 cv
47.6393 94.0112 47.7745 94.1967 47.9137 94.3759 cv
39.7188 96.1782 31.5392 98.0795 23.5304 100.596 cv
cp
52.1139 92.5605 mo
51.9542 92.4824 li
51.6983 92.3574 51.4464 92.2968 51.2027 92.2758 cv
50.2613 91.2172 48.7857 87.7558 48.2887 86.9926 cv
47.2638 85.4194 46.1739 83.893 45.0353 82.4008 cv
42.4532 79.018 39.5978 75.9023 36.5489 72.937 cv
29.9771 66.5439 22.0895 60.7641 17.0187 53.0327 cv
16.1744 51.7455 14.5929 51.958 13.7667 52.7973 cv
13.7198 52.7426 13.6705 52.6909 13.6231 52.6362 cv
11.6065 57.5942 9.49521 62.1684 6.41416 66.7543 cv
2.26474 72.9301 4.62119 79.9628 1.90634 86.5991 cv
.9957 88.8247 -.0399445 91.0883 .00107115 93.5522 cv
.0586883 97.02 2.96103 99.5024 3.02158 102.907 cv
3.03769 103.79 3.52304 104.363 4.14756 104.641 cv
4.16709 104.706 4.17685 104.768 4.20322 104.835 cv
4.9581 106.721 5.71347 108.607 6.46836 110.493 cv
6.66318 110.395 6.85459 110.292 7.04892 110.194 cv
7.74472 111.424 10.1427 111.593 10.8624 109.798 cv
11.6187 107.91 19.0562 106.291 21.0226 105.621 cv
24.2848 104.509 27.5851 103.513 30.9068 102.595 cv
37.5631 100.753 44.3067 99.2499 51.0519 97.7773 cv
52.1227 97.5439 52.5396 96.7099 52.4767 95.872 cv
52.7081 95.6352 52.8897 95.3515 52.9757 95.0322 cv
52.9947 94.9609 53.0138 94.8901 53.0333 94.8188 cv
53.2486 94.018 52.9034 92.9453 52.1139 92.5605 cv
cp
0 0 0 rgb
f
21.3448 81.9443 mo
21.3238 81.9501 20.8448 81.809 20.7677 81.7924 cv
20.3194 81.6948 19.8834 81.6396 19.4293 81.6728 cv
18.3326 81.7529 17.5401 82.3984 16.9405 83.2797 cv
15.8614 84.8652 15.1295 86.7495 14.6583 88.5996 cv
14.0221 91.0947 17.879 92.1596 18.5152 89.6625 cv
18.8551 88.329 19.3316 87.0844 20.026 85.894 cv
20.0602 85.8359 20.0738 85.8037 20.0982 85.7578 cv
20.1988 85.7817 20.2755 85.7998 20.2638 85.7968 cv
21.003 85.9667 21.6739 86.0126 22.4078 85.8012 cv
24.877 85.0898 23.8268 81.229 21.3448 81.9443 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_6.eps)
%%CreationDate: 3/12/2018 2:38 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#.H0dc7Luk2p9rb`;_e
%8,HBF^\mr]bA[*Xrnj@8@Vn3iF4fU:FtTZapsG.Oo\Z;>me49ae#lr9HLB<]K9H\/Wu?'!<Um(H^%D*bl1ZiK?bZ@'lW6l#^\dHg
%lM7L4hu.A8ptM"!]3d_s7Xjr>pZ:f6kHFlrgHU2YoIk70oe4`p2p\)QhRn15ilRZq^09/+^>d-3nss#32o)'=?G?9T$YfIsp<=P%
%41R:Fs3^:a^7QJrXZV(1YJ7^Jk1Ors?9``,m+';Zob3jArJRbdro3Y+-i+4]g!=j4rOX/p06bIk5<\iAq&=bEDEUYlpuWqcguA@d
%rT7=kI)i:n4NR%pm*NMX3Z@kb;hokRe*d2AJ+gLYMu&t$rq;.\GWd3']9q[2hC`bk*e9Ouo-Me:^V>3emIM]DDE3GC"tXg(6`O3b
%#4+ZT^JMq&(V/>(QFt9V96OBVECp/jQE+'6Q;bLIhY!r#_8#s-g$N-r[eoO&:VOPkD.@tlqTTi&r]_8n^UU=L?.ldNY+"t(:AEZ>
%cYm1jbKFO:Ug#Y0RL[iN?@@8!>i'&*dEV81*;ZWNpg6,CpJ5+FF8JF[pso!)0hssfeYW<6fAF@<jcdI867SNhj>YuQ^ARr1s1qe9
%WH5'+]U/XL=7WVqem2L#+&(pJH/WJ!qe^<`gnEW;@/PI(K)1tgcb=\unn0Q8h+qhV-Gr&trTriMKT"_fr=?[&W_WT&ria#:I/9<k
%[kIX549*ji=4:\^Y($$I*drA1p#4F/N5g):lX$I)9:6sL?[ZG!?2qe!aXt7,f"QhI?iBhd>k%)+DZ':WYP!,4X5?,@?@M_Af<;pg
%p(oC^o]ktA+('NrlArEd?Trg^]@1-TptMG-Ia#5JYM]9Nea'uk?[qV=m?;[e?Ti].m8)SYdkC]@qr[.8cYmU$+*6KBEVoCQX4JPT
%?giI8a8[`@_-N^7G/&P*jJdO3r-b+,O;l?@]^FZ1fCH-DrsuYHFH4$3H38"I^&6j_q5\G3)s_b[\`7V#5C*(cp#rbH8jCC8T#dk5
%\&=-4DuT7!H\uKd/)A(SC^9'm-VV:$d%d2Fq6MUa[kGMqDVSOt]"U2=7b\u)a2=,(c_#XWqT63rIeIlmJ,T=iJ):/'eZ7lnmMC=:
%Si$J-^VZ6HP2O*gpuAF<cb=`\*](;'<b2!Ye*"2Ir9_*T[gsEX9`EWsJ+HS8kO)F($0NBQ3`E5-YIFP@IG23rdZ`aYs-]JL`DcKS
%V.XUo24e=&rrJb?#Pn#b1Jru&9`2Ako>P(/LrTGUZTl06U8".Wo^&F,%(e1,J+i#JSXZfhHjb:CpVibsI!a&)e'Ir$]k.%4f!TeZ
%qWUf5^7r0JgV97Sq>'>(?U'`3o4Of/`H74ph&YR[\'UnZ[kHhtQeQ*%%_M\kO!">dj%!Q:ptC,2T>Z+,=S!R4Z8bq]LD9615@lQ&
%I,ls0dd#j_EVH63p9-^.9r=91p"R:!d$sCu4a-c>41g-tQV$P5A\ie&9mlVr\(Q9*;/_U]abusUIZI:q)Yt6Hj!q<>kjB&$hgYV%
%gZQ'G[/8,6-SN6FKa=9XCkZe1Jo;NV$7S'hk$gE\i*g4Nr(E$c;-\/7+]3oY[Q%OA-0P;Sr9-1K-TU1/\G"NLNhr<-34=7IDYU1_
%\("jpbr;oggJUi?=SGgE;+o.k<\HrA9f^;BMMPic-'hA4^6.G(a$.ZuEm=AN3TcF:*%m/eO`'5>V5##c[$O-$Q"hdhUa-F_nk!F]
%Eq)VZ;`r,EY8UW08&U?"@Z\LJ,qe.'SE)YaK,jGBTnOsd$1^?O,\,rt?PfMb_W#KYSE)[+K,f4uY.]4YYJ/)/QV:_'mA3bCa2tUE
%E&[21a&.l1FP'n\7D;qnU<&I&Os<#5$ncL:\WPpZ*9B0$^\d+rNlIj:Oa3`Kg(ErhO!">X*$';Z2\&(NT<Gp'HTu<1a8Q;Cg2Z,e
%-V1'2ruh>)aDnoNbJ2[+[[.$N(HKo-@i4o*%Wi"`pdU:-*!\KC\d6;u'tJnVLk)2"7<U(Bm7*,2aNm-^S-Uh]Z(M4cL/a'"nMbJ.
%7@"F(lmY`^'gL\T;6Fq6(d='7OY97->suh1jXC-MjM-';n$O-0riPbK,6'5+*/K?jT>to8V(DH)nKX17P8l'3#PiS)f,o$96nZGE
%VJLG?KR>hEcPr'Er$ugA7q_Y95OZ+W'DW1]?&%Dcc?YLQCa+9T&XX](g17]g@1`fAdVXbY'QK;H';KqUMu.`k9+!F_Wm%\W3m%+"
%q<B0;E6'ud;aKP_Q+fA<=?;l#=iTH)7d*=]/'.K#d0Rc>I46B]AE9d^_Vt?9I3UN,7:M-FdC%'F8S$/h'TCI?70^4A%Ypg8^H2Ya
%`-ddSnDAQ)544KPUYJ_D;`H'Eq,Bc\>b;M(UE',O,?)[A!l/2?WJKcFS,IFKDbf=PEc`',&;5e1"!N7M71lOFT-do;@=up4Mss"<
%Ntb+>H_I0d/dN0G"?D#M5COm;N1XnMN'2mm89K31=\\SR3?9</.V,X=!AY>XZaVPKb%/(la2r,b*@G%Cb8>6aAPU1$#B4_O3E7eN
%:RKSs?;1-%SX^0FK'[5op9c<.CKuC-QfE1t3SZmsa8h$nP<k"F,T@(!KR<i-8Ho85*7=4Fo]Q?.-i-\@%N->8^)S1&OE;.">)!>:
%[13oUC:S?6XJ1]pONG/K@E76oZhsBWGq&oJ%]3,o#=-,c"n=QW/t*CK'[)"40>nYk,.Cf$.YYF,X3kpm:`MGdO-CqQ)VW_]6=XJ7
%JgX<99_e`16PY-&g/B^GW$4uu0rPSE+=Ii'#I9@dZ/EI.\5;-LnMI8>4VtmYe^K?sXHGNcSk,J%[m]?/jf_>8/;%48B/pBb_]ak9
%XHZ,8a]TNV*f!/[+d'*)G,_"ndNl/[N_%#QAE$d1M$]ZJ>GF`M(HGYeVG8<d#Ec<-H#/aAcdMJ`,SCL4_Sl^Pbha,%Z59Q/L+%(F
%EElI<nh_mGf3D(./gk7c/Firu64RU^?kJgO&1epoVUA[N4KbM:.Mn'iI2ob)oYof4,D/DdMaQXdTM*2>-/lqai0qhSamtJ05]JVU
%:1fkuRotngQ3<=>-YkV6P+tS7SgI#dP9eR!EGCSkW<%W^Drq=aO^t>FUCj6_LRK9LAk+V?_jRKDPj&ZFUL=nuk\LZW2$A-Z%bu1_
%O9hU"J\,e%m^`^Lan5VS)l_6`&N<:3Mc9O1Dq&^&D^?p,8<B>c3^]]7!TbhG>QQT\?Z7XuZ.'2+]mpX*r]M9PIsLk\ac"oWGMcL9
%H51>5`HJe?lHVZ(7(h.W8[MN^R=>c2m)2ALU;((^*(2<p:5C*%9n_mnCkXEL\JGi@M7qh8Ga!rg-l!?Z,AdW\V$g;8QSh.\BqtfI
%ZlQ(t79MrO7OlGFQ+3_Q4S@f;->Qt;Fn+i,n%@lX,r_6llY;HKMCS$R<1HW6;fg5"?<)*Il;ZH9\l4;aL>#iH?iSgF+h!@[_QF=!
%j(-2)5HoB.LV%qi!;JWG\9Pr=NjLsJ7diG0]goX5O?;=n]D>rkh!s?9[tbrD`s810nDj*\mlP%MD4KgS5d-quQ':Es7Jtj^<gd]g
%]e!",/Y69>TlrH;Z?@H#>`bd7;o=D\&KsB-Q3m1U$B76<H=l$M[&Z%Ip,(i*e2OCI&p6sGetK&iMfgu/*"B9XI9*[j5>3giaOD1K
%`n4gXd1m35[5V%N\@McSMKND[Qnc$aWS&Q_8"5IDCGX=V*6)ugF]gZWoUtHW%%"h*)U?h3>*&0=,G#q?c9^hg%-YF#4SYl@+a:$V
%H*k%&ElWBon\3%rn+bf_\`5(:q8^#*]/7[+:TB42]N\b^DR*=:e0e]7MEXU@6s#e.Z<G.\&MMUi\XdEC<*Ckm*$(Th84R[J-fPb"
%EsB5qGeZ`43b?klf3B.'k2r5[Zq;0=73MkC=WM+A29Vs\Gsf'>G#8W\"Wg\r1L*/l-tVE=[UC8#4`a]FS84RQ`_eg4UNO"kk=bt`
%36j@A@=f$=9(sEkVNO$teR!/Ymal1Aep8E[I(nXUeK+Zqn5j7X"p"dd8<59"S#JT`(2!V,rs_a>qk(GORW`J*(ECA&;@VeX_nfrb
%e8^7P2gP#=Z>)GQ:#0h&cO>[_MlsrC3DB9%:uB*@_?<[Xm"Y440W_b1=Fig>R-TLbQJ>@0*4/tEkLKoL;7dFWJl_2D>G6%(UlcLe
%C+coM<(@[U8bGT]OCEpD=1ZE8F1dQJ=((0I9qE07/WgA7>cVKpHVUmP[.ReOXkW)1/7JGr0-$n5`u8*kG^)\n*dYb[*-0()SOW\T
%6&47c_<:f!\ms>?2`E\9S%UA-jX/f:)gAkR*G+H(9SOfkclI%b7hH=uUA5XeSl"Y@YU9^F$%P'gT7B*EIHsSR'9FRA:V`M$3u.$[
%T_$6,R=^q9E>lX'!B1JA'T8]<Rh('.-ZG9rjpZ,G]_V=7ViF*6*TU1e;h7\t3Yh!\\8uRcfLjL(Yc#KMUIJ`^7f`U4(7"9,fqZMu
%pOko;<Gbis[TK&c%qW++#6"'O`7AEh<RpLO]*3S^8"Ws*B'H=mRoFMM2!l>K)H#@-Z/5/0dh+LYq2\_j\`8JXD\%&5cZ+9sEKo#6
%pu(3%O@/I2T_%T&ZS!5<`s876?g!G.2kMtMB8uIbUO:W@TB_H/29KQknl_`8egR0YNi#ZC.e<4mli2A10:AS3A;XF+mq%)dUc^#k
%)sX#Pb[n5m"^/2Krbs#\iR?QmnTbgX\U\dQ7<I:/`*%.G1V5.b5J%K1ZC=`,0)_q[;rf"AkFGt_Jo>4Ac2$i)24O5jdI?]%"R_k/
%!k1`RQ8N8=J=+(9N/!J/[DmYb[]62-ajF<\0k]XfQ3Xlm\]O$\T:\6;\N_(SSI4q\ht#qdTe%KJ$;m(RM*_o6K;?R,[hQ<KPhc5T
%7A9VnpX=e\ifVO)HcaFQ5@ES>\k?=VMidmKjLq)^5t!in%X"7<s68t)hsk3kpXAim-^Z#/?Ci:fIPsJM#re-Rmu`1&.)K3qo-,aR
%(rf1RTNbN'9ERe([tn1,?pG^jX%6>o6!Zggb^3;S[k`=g#Hnbk>_K2=q,A+;<0\&g3[-+D,Kph6blhnrIUYj[/L/N;=F,tgZ!,.T
%+>@"NDcLjZ:B4gkkb?0KBk42XNiE/Y2^:Cao2E-/WQk!3HY2P7VXKAPWLBI51K9!<W$4`Sc;JM6#qJcO5:8O11hZLOUXLEBfj1L`
%7iY#;M8l"-\io>LUWFN6f6'88\F@JtGi>kK\`9NYS,86C/@5!\Vr5545PWT!h6TK:Gc0rhNmDosh^^WO/e+9pfMkT&+;m\%k8IgP
%9ZYUl^EZ[d(XkRJIi:[JU)l>Y$QYQT:9Sb_NXRc#N'tHt)JN!<F;e=So<:k`eR@>-M:pHC<@<b/6-ZI]'LC&#K?3t)kUO)s#><@i
%4R&f<EsnIE>G.sNao)L$,KurlmiLU\!8CY,.Bl''6bo!m1(5"qp5MI(g;3'4`@:g.a./ZC4ltWEHB:\)@F*!_3Vbfg^M?'aJ8+*.
%lVY^-7dA63df1EOT38/KClb8MB+=-\*gPdUULUfQ`-[R;N[)^fo7N*EiMbpph!n.o>E8FF6gj`"Zejm?a1c%:QruU1]QCi@Q^IAo
%fYC.O-"C`$Tk=,p*<25apTN9Kbj?560PC,E,e&7,Qbl^JGZkKd/j`3;oDD+Us!;&eKp=L`h`rKmkI.VC3N1FNV*#ls/Y$nf8eShN
%6:kB(kn8eOlo9c\-I><OGS`,=_4phBTec[^4pV?U%&g]a_oT7Q+a6%aEV7.<\TH1=r3.DQ53.aur8pA-J)i\_!SI]\L?hQ7?$!?.
%*IONgWFDDgkaU$FVXoq88>no(.O<LdBa)qml(,b7$*?DV[7=8C`,aG:lKCBGNZLEr;g!1<[*nWEm\j2.p"H1DT+h9,#[I!9bG4Z.
%UhXJ@XD@/KWojPcQ)QiK5+U!B<$+?1)I`ln:UX4EXIslXq/FUNRhf'A-46`LdmEA6@!Z4s[5Uq<WW"[oW(2'.]$[bETr_6%CDJ!d
%2UR8Jbugm=9Lh9.db/X'8+%3H*<+g4^#Pd*Ics)Brm'QoUPGCQa6DE8h!kDX^!H50I)h5D@;2rZ)jC_;1Z,U_,gFh$&F7,#f!/C#
%-_KV-+/k1W0Jr&??j&5V`Il31MptR*QE_-uar`%MM>HMYC0G`qY$"3HBYP>6;J+KY-C[>2*f0Kd908G:AID<bs$T"oUole$Gh$Pn
%e9C-5"I4uB(c(nU)^a-Hl4Jb`Z4[E#(h<Z".%hYt6C^2</@iZg6FVQb[.MpZ>Muh^akN%+d5F*?@_,MAFh)&JDJ>BFJuc@N5*gsD
%^!KDN&)ZD,^$CbA^@Rl(*lmk>mWbYsj,VH0I%TGI6>;BAaBDgb<fDoQ&\JjC/iEM-(u@cfrJ?)@Aa+n^_h[)W$@9[5*q,8X^N0\'
%hc%rQm:=.?&b_.5Jqp<^CQqZB-G)8gVjNAl5[Y`RG*GsBb:9q((;6)N>@>jUnqoR^6rCU;a19FR:)VY3WGoPP@f@CMbnI;I0[RQN
%Z,kh_Nm89u4(?mg&BdTT%9TIcPl9@=="Y0-^qoEf0l,c?-4Q)?hmC(X`!)T4gb<t7+jl,\0\<\362BN"j96=joq3?=.l]$;&8]uK
%(+HnC-W\r`Kh(XkM\qsZN!=OefCJ,.mo^'MK6XZj4X8'u5l&lp6AhBX]lHne%a'rm\D7%^hj97UV]m%ij-_WNG18TD\T;SGF1L<W
%'E,(rrbgcON:12P.Di=Q@H!92R:8ZR62+uQFd$VYATFkA)9jolbM7$'6$'5AfkcfT,J%j3&5tAYVS&=)f>I517XgKDbYn&4RoH:o
%5b0\_WSoX@rX4U]f=Z<2O)n20Xc_mj*c2&G(p:3&M1kqR&)$%nBXcF4ge<qfO\k]nP;*uD'>S37;&*9cn6EE+S.`j^-diibh4eob
%<25:10`6''oIrlHPOHNP+\#3%*O9J?p[X@G6!gX8/WsL9cDq4D@oY&MgCUiaD'+3?UPi6Sa4fbZFH8#U?>d>.*8U3X>)qUP?Wrsa
%n-0uL]&"+8p35NJ,N@COTR?n+oGLS@okcC>Ca.\;5kDK\-P;A&U$=J.nsE5o,!;>k)kX"PSr?@NF_[c3_1]p_=oFY-O/;_)X-]R"
%n$>O4]oYn$a6HmQ"DF>/m4],A>SBb.9!gWW@X;0U131'!P\E:>0$TEu2R$Xa[3JGa6Kg=Zg)p1,ok,j<0@O@\N+#hTO%Uui05qH^
%(soQl;f]q?mP/O_DNSds[g$urjO91->E/rp9&*o@I`.q(*,.p^r+oC/>K3F1,/$"5p;!%ceq@5(e*]568SsoB_]IHo;@ub9@#.=Z
%@O_[!4fRdCo$D0Y>h!oth?VH1B"%o+--??+c$D(u-'K\'RJh.O4efq<P_hpU%%W.ZAsBS40cD/bZDMMs.7),][LIaQ"=TMkn@0W"
%/8"9;>(H$)S**(<jEpoS^>j_048td5*)P`$o/.EoE)3:(;doc<7N<hq-R1*tN.mthp,JuS3a#%<fccOtb[&GGJ>!=eP!XbOCU2J.
%6QPER<`V9+LtGL6""XCVb_b[qfk:UOleI'1\AgJJ_\ppn;@iE:>cYU[`$XQ7'AmD6S\*',k6Llh(koWum&5O:71R^4.js/$>'SWa
%)m)=Zf(o;p=Y84t,>?#[QbDn=#I!kBA7<,tHitD0TP7PWr;FT2q-=>]HOfXW5N/;[S306?@U5,HN_jgrEF#u\1dp(S_DIX\_;5*c
%iEsb&j$u!ZdKgb,#eA,U+%6VtG71B[b!"p`kMBpoqSn\XoPeuT`<uQVFVE4`ni06+A5]SY]NQ_iD7/B@LZt2t?d=93RkW&5cuU6R
%g3TrH_bWEP[JntSP1,t0=!ea3V8GE9\`6sKrM&[ka#g7XaRAilirLIi1cO96]I!15mVraQndu,p\-@Z>l]o/;0C7q??(pF=_/3*5
%RXfa9N@N---RQLO7[9mYgqcEjS9QPk9UT!l%P&nJ%;j]tqTlh5`)A()90g*X#0uIGAX(IHB_S'H2GE@Rk6/0hOna)p64;?H-)-A<
%1>4VI=$<E@nb:\"g!14[2>%cZYVd/4:*c;B^_Cuo?ghC@[<"\(9hu&7_5-"\Z#X2dE&pW$hPLNR$,JSP.JRao_06QFmnF)%P8&C_
%.^2e:53TM<'`='uml9IU`oTBX%ehk@GTIR3)[`+'%IXN!f&5D=!8]kI[lKt"R#X193WI=3^s#EZAN2d7VV1MLD&)Ctld7_&dW#3I
%NZ/gC50h"KCXD#;fGH'323&X&i6q-R$Ga-?7pG39D*Rb5E;,f?jhm.qMff%%q67ajfhZkNNb>%PX^F2k.-o68]a-st?`3*GHL<jS
%l_oTm+MoWMHo#L5D=NAFF_Z#:CbfRk&pfnSptaH=GKGd?)r=0%>Ut/Z,pc:-Q^cLJ.IFFuN<s&Q"=*B/X*t=Woqt'LmqeikJTjp!
%\qqGi;4CS(>,XTsgS2RqF]Z;qKU\3>4-!RIq"jK,=G<(Y*KE![1$9<5N\)?Wi!,l20\9VUG$`Yj6.^T;$L[j]&6t[M,0X(DTu:2_
%F.7'k8Q'<+4HX\*eYt9LY"6$tdG[&uh8I)e)XB3QZu/Wr7=Ye_<,2&Wa1NQ!e#JCsa[NNpf\H4i8/puG)YZD0pO(j]-f@ZY(-2LP
%q2u-d,YMcrgPgG$rVMtQRQdRI;u&#k\=[A^o;$A5:!bqkh*9`+s7o`d4e[AK"^:TI''JKlMFW,Lr#m`@/,/gpi#ntNs3!t_h44Qg
%Eu1C"51\^r]ptT@@Jh9<SP(_Z/YFpIdLr"`=>BbO\,"Yo)(m:b"O`[XBgu89><1#@S&25pM?4frW)'<QY%tPt9Zq<KY"%K#L13(P
%bo@]-?oRpo@`r_&rcM/CB,:6sibL?1MAZSm:g#T:n)PX)M\F=!)a3dP>/p)H'.qRI#IpT,&MML)LEe`\Wa')J/?`/\Z)f.e!IGUS
%kQ&%bnm(6uJJZEB!CeQfRc0@<ajD;YkTDnmRi/mca5LmFn39b+bMAds\X,i#WOX^"&4MK@Z.r$AGZ,G7Q\B756DhGsk2!(a)+ZC\
%OYM@`BU!qHV&jMVB^8u*CT0cV_rrB\=AY1JCDEE8kC%8!/j5-[E-3)2>TIoe=Z?[/XN7j<FL?jXp^4OI/-6WlQ/`$QAW*S4R*(;b
%&5RTLW8f</98R.sJ_$t/L2o(BT@9XrkE/=Jl)3Z<*lXR:Z-At%bFl?uHNK\=N#\3@3:boN^#d?$+a;/"UYL4G[iCS6.X0[ZV"a&h
%mb`%YQ&Kb(_Zd5WJ!T/#%]br&AL/D1_m@rM69EI"?"'t>?:Z!T"N(`Hi\[m*?;)rGEW1u2.1P%-L;V/c@HAid:k\5aiNM)2]dGV_
%)[CO@!Wah0e[l_X3RGkST*uWU15XHOp0d"=,K$No='b<DC0HM+.uX15^6n#"gRDU>Q.9G[oh)<?4?G_KEk-H8(%)AjL/==":E,@g
%Gt2b.Q9<IQ*O6I`b(\O;pkZP(cR1)D8Qf"u[Je^\>fi*r'LD.d\8/Qk!NC9^=4i7Fj8XN%?1^9JVhN8MhCMh`pH(>OMR\:ADIR/-
%I),j\TZ]RNg<1:l]aS+`p:cJR\PjoCYq@(U*n0C-D<R0B'8.(B1>t)IAY.Vq:TI\qc/Q<MNVaCm+IP!;!&DOQ'\2T(b'cp?^hn&Q
%V.s><f&^XMYT?$?(^fJRKUm$Rd:qVORpEigHdffW4:;Rfmn^F4/T3QEe6Uc^7j60#6\iDS6*HgIgZ$Eri:IIqf$.t+Q8;Q-:Fj'_
%'"4UZ-X@,*m(Z<%h5+U3+2`+S)4@<H9cj6j.Bp70FdTi<[]7i^;##=8\0Nl34&`\XK1Ete?_*[<895V^%4'2l,a"hCjOm/R@GZiY
%14E9qBAIk$3,_9:qWN:73[r(LYjOJ0Da^hcD/S'^M;[ZfQFb5i/6,o2>.pYqMLXG-7(;(;P-mp6,\(+,N"!Dk<&E0&mqqBG*i/HE
%HqbAMD4<P6S:Z*JeVu`12mHJdUB>1M/>^HX7n7/L8V^/8!d/G*(3O,Up._dHR,p@ElQ2:Ms7TTEfED1cK69(Uf5WdWrKJAY"+ciq
%F"ks^985V3F&9(g%I^L`>lYDkkbVWK6A8@ZcuJ6krb"H4KB9#^\_YO&m2IQQ29NaePP_g0s/GoaGOLgud7S0N`W>?<Y+"aPDI_N!
%V)<5BC$j42Qc9dBID0s\iiQAs^k%uf\ZtsnE_V+!9%UP@YDp<9R='45.GZ7MRAE[$.E0i9P*P,sN=a4I!kC@3V2/@m)V9M/&TYZV
%Z/&FFcB>_1@UsDJV;i9h@.7Z)j/Ecbf;#o5=_4M+\Z:hN(,3B;nrtMOJmC%m4YN4ds3\GbcBU&k<UrZJH9(S+Lj&\!]3`d0?A\se
%kZojPZ:DbAc=(VTQJ)S\%#k6S[L*tWJ:bn]a3)7:!7')I:F$B!$`<OP-4TDe&!."`0`/uQ!R`)GnOY$YBjC*W&YD`DC]roUS4@Q?
%a*ArnZ(+;tE6pY?oDG3#F;i]S/>'t*N3$\i2i[5f^@Ntdo*EZP4HHe-ZWJX!W.$f:DM^R2Q[*T=$d4\H6Iq/\lLVNh,<q7f4SnY%
%\F]JG^J1&G=UOR).aO83bCUra.C('OES/@M/.npVCe6p&/"Y*ROWiZVZ=SmJqmA".-GqSknpeCBV1$D>Z;gM?+Tr(m0K_IL0du+r
%i7l$(FW^##?`ks&nW$hW5OK$JIFiV2M<g%]B'r/#ecMKg(2*Eo*G;M$27U(Gc]^B`Tf_ubN5hts(+2$sgWjnXJFra/cDN,PlGqaV
%JV)K>MA<'l%CO*EY\mF(mEV1]Hab\sMmKBbNVr8!qGQ3eICgGS^@Q_.5Me#PrMPNa$t")Hm.kNh:+1NT2(-'J;aB?+fi>J@P!SN2
%XK"(7Dgf+fmFM#9hf+"aMrA-@$!pa.f:_c,TX!%M:$]e&^6.fpc#:(>^XF(T8=eZ.nKY*TF4R,@pRL,_ql[)'gYLD%^+POV?r:*e
%[>Nt(3Xl?.U;S-7<%6O"oZG.go#KO?)UR!.j)M6a0)b?NF]l8Rb0#'EZ6$`L@EPap[L!s;SKoo(IWa--QCb1NdhZtmiMJ1A-]"3P
%OAT)Ji$h=pEZFHuOYed,elZ+:VQF7F]CtUJmat6IK%YsX$(=t?lCL8]HQ^B-"?E&7&2=1r.t-TnL\AA"p:QIZRc:h$$@OS;RG)_o
%#M^VUZEGD6HN9Y@Ei6V^i1u8iaZ0JP].6)Jg2C?iU/aWeJ1.t3`OX3/bEX^A\'Gr[B0#C@+&0^H1FW'L?'ilfaL%XbS`/s9U:(s.
%1UK;H`Qr\s-S:h$#]4LVCmMEAkOA.6hBo18"%chO(&e;Hic6O$Ubt%B^f_j^aBGW\/j\(_K@]:I6qj;7M\QcWRYNL-n!8fSn!eYi
%/jq%&ceNjL+3Ss!@g/e?(u9-X=<@+jd)RF=l+>4&$*:kI^U<HEI;*W`s,6s>I6[-0FP3eDYd'G9<k@CQa"r^!0m%VZkL3(cjUoFL
%[K^WknRlV7_gj7!/\^Xh)H\tUh+UW"`=tD$2J.T3\7]M"L%GdQ2XWYQ6]1at?qOs!Hd.G>o/W2_Yl^/&9Gdm\_e4Mj1I1aGJF^$?
%I$TW81@\KohBip9^&[90]mG3RQ`B%'g#DsOaOeB!d6HTB[!i3d1_DGPElJX'Ya7JD\V.:f0I?W+UN"-le0rt:"?+o%l2REb%i:)7
%l$=Fn\Y[E]c_VHKoKM@,%sda%be+Is]K\D']-@"1\uZiNeWLOYqA(_FVHru7h%H\_E4>S3E<#OUcedIVdr,3`aj\"4VJZ>3)$Bbp
%JUPPR5%@um0sJt@fOkWZ1C!Oj"8hH>I`=H5bJ\%]pad)N0sFH-JP"$d^OGkH\$)F;I.Q^d2a@9*m&JCHH2QmXhsttWJ+q\FDr09`
%IOSV$rqgW*r:/;f3:Qm-46P'm&\hs+SU;1D&pH(<X![DC$e\hI#bG#.n[8Ab%tDRu^Xp5&H/e6&J()145P"";/ZjMfDV4o&pTOU4
%fmWgd=8e.`K(N^K47?LKq9B(d^YCZ,2uD_!-MK?8Dt4P@q<.(qDiW/8^3TG;jce;Gg\jgT-i)s(X&mVk5JI,NFjO3fYFiLRp%k`f
%PG`nmDZ&eoc^s$Cot/tVDgo"h-X?1ki]lJ`s4d9oQ_T$*Du,LTWAt7(ZF&u&(V5Z:oN;c;60Y=TPFMR@7.7DJ`Ydu@=A%G\&?\p6
%eTr[/.o=)T1B8MhG;A-[(6ls&hl]?WV86HJd.A#"LAgP>?F`TsV97p;7$M8Ob+4kE/TR]?J%O(m'e5\r0'94_6J<H!.@T':\!Gdl
%4K(hH/6=Tl]sP^.q$\o.q5T2)Ua99&&*!7[d0E`:akO:L,s&p36pk4u7=O(0<><W"pOf''XobJ%o2e5jP8tQV#eL;$TBc5rA?FF+
%'gR`XZsT)uF1YU0#9.Sf7K;aiQLBX>/6maAB30(bM>]JbPsd"eC:q\1I2Jg(@`W55#;:MXY-R702#*M\n%srh41'k`_J/SgMu6ar
%mp%El+Kle%^4;P/kh!ptRXDHSB?"ZV7e/Sadh-<'\aI2]DYDL98XmEg$$)WMf2<h`.-$;>FFXXYNgUaOV2l0[G3/V^m&LsR*WZ;Z
%1DY7+=[f]mfo-D\99P(hNX^-Ed`!uY=,V;8I)[@&=B`AMT!R8`kiK1Eg#3J4%!8hrgm"+\b&),4Y2E>r9D%8mGU49@BsV+q,IKd-
%fcjpVQEo01A+m07l9s]DR\744475FL=/'mZ?e>V_4dCO*$fp-HP?-r6^`Fr1,k1mb`TTAY5jS(m+'G[8'BT`FfjpX^9647UTn7#,
%<fTifJ)5K7RC3^\?Y&ueM-kBO5$NcKHZ>sbcVkD6/s'q<Y]@56E"eWQnjNp)@N,c^P4pVj16`Yn%JhYER;s>Zo2iZb@@3hHn\-l;
%<8(>-Y0Cs8Pm.+9F!<tbjdfT:?Y+g8]JKH@Y*-M]/sg;.]LX1E0!e45?W0P:D1NX6AHOA_^J"b1TKXVi"e\hrPgWG".:,u2p9Ct+
%LQQ1u-0>F:&PpQ7/I?ekBM#Hc[YTZSf#P=+"gLa30Q=!"W#-XYMs);HUt=;a:;d,Vm6le)*DrXhjjfmnIM/p$-Nn04Bb=PRI3H@_
%^?Vh2-0\Jlg]s1gCDRJB;fs4KLIag)llbiITll!p/5nc6N0\R_%(7Q\Z$Aal;ILBhe!OH1UdiQ[C/^0pe.7i,*1]".-GN'///qU>
%mLllqFFp+5]KA\;p!'A#(Bjp#[,<GqX0T]q,#'@\rhaI]c_<.fn`:9-nB43oGj1,/95"F<!F)S&D#H,.]]k:D*F`p/M&>5@qHY/.
%>4ucp<N'no.9V+2Qblc1<JRef.XFo2eB5a)^J$8FjT*1l%9!&!EeV0'Lu9#0N?)=MKZ12XAVb=Zd2QK06;*T/Y[<em94/q)V+$+I
%d247[XY^V,P>)o[3I<,C/SGZ6U9%bLV$YT_@u+&=KKhaZ>CSXi<sYBkE09R_NsL!/Zm=PqTie&9,2_"K>/!MnBmE/`Kn;AjX:Z2N
%O]dRhF[pu5_kT#6S)#]L>lu^=G]DsKl#!\sjV\s%TT&`rI]5lKgp+pV9'%;90UA,*0FeCjAp\3B8f&de=3;)TBa)"cLVF(V$+<ea
%3bVBm/1i'iIHFq*U&YnO8On>;`+kXbLE)&rkK/B+<RK57*-m_V&Z37^()]l0#(HB2jB:&T+u'o\0A8T493g6Y&W%bBZ>;+e`(%eh
%A/Dl30uoft,X-gH#3hHYacTL;(bo>2_GZ0GL&D..l!YZ6H$Qbr"P^S&Qko0sneUet-7r>*]0V#iQ8-C9o(![)8]4aQQDFa70Pf:^
%_\ubWZ?0Lf0hp;e&'^%-BfgF64=p)9@N7Z?06gUY;uKg'7:5n[]Y/76'p;URbHg1o>MDcZ>_1HoRcWq-pU[MI8XGaI1rm""%6J8q
%7D?R%;oEL)TZGh9X,Hb0dK(6'J=28_6EjDD<"@,-,U,Sha;\N/6u3gG'HNs^0"8a3&e&=<E*'reZuYT0drei'7$kt&7EY+j*]B,C
%(sAr-Q*<+.`@!Ps%WW%h+Mb.FcP*Djq]k=aM-7bM5BK7=_oP*L:1.1a5&1PME#:aC/:+/j^Y?hM*oG7#O_n5hm7L&2=]I7Al\Bpu
%WM1>Cm%nJW$5EnT^428b8]fHL9;S<#Wu\>b-;/SYi-USu=\9%'mNu8P4@=j.jpkU99mA-EHg/\GA[NR!$um.[[JS+pp`2Q\/gU"$
%O#d[TJ1UK*UWtML`9J;Df<Co,&QrJ@fq>W],8OQFe/hp_oU'Y=1!DJ:Bf5TQWJf'BGfr?0d8pp<W9>uU>$4S=*"r'fCnSVCL,>3u
%eCZ77)lFFP;+7CeaJ#ts7]Dn&@Zo6DX5Oc7EZA(YTW?I<Z'I^_ol]4HaWmU8pA0#Ie^YDJ/s_dH6Q'>jB<kHWnB9\/"jqIkE-Pj]
%P,^(><-'KsHAO#GJsbWS1-%o]:!r-E?I"PuNc\H7920^)P"KY0;!Cgc0JE!n/YZ.r@Y-0`@I`18OYQBa2A[aI0#DGAX[I^dl"U(/
%,b5I?GO70<>.!cRe1brgRe+e<SO`beR[V^OY28hER;JTXSr9K@-!.HFUd7[%1_c>!OfLha+^!R3i^7=ag4gg-e=p'.UF]]a_pJlU
%LMp<n[M*)sajXh?Z5.`k#nBfOo:ajE:?6Wi4Ak0+c%B9$[KMB)/&JW9Y02+14#HfJ>eK"P;1Y]2kL_Kd"gNGi(IIrATUnW-@h(F2
%GT,rgfY2RCIU;fIqs]LcrtIQ(b+mumG5qKZS(GtmI^AqAIXh=gl1Zi[pZg!:S9tfO/;dInL`6dKkr`)bP6).(@dOA^:_B#3q9KH_
%N3=(Z:nBEpa]2W8gT^:fP7ko173b+'_8n9k72a05ErZ=-Bh.:;[@/p5l<JQn<.>YK*:+-&(h2J`l;Fl'".b&Q45ssU<hb/qYOH#;
%F)%^`"Uhjmg9U\&:Z&#Km9`'Ah):o==6a%UGL\,MROk8V>M6/ZlRmo:@1]I2O?-G32dZ-a5@m/@=9u--d*'tMUT:BdEG\f<&i>)F
%9P(c8NY=id_@4C,)DoRQV'Z7]"`Y?hJCt1h1";Z50JFL:QOKIJ#'#0%72._\:r4:/[>B'\",6-940bqSGDM(rQNbYRgdJV0kZTIb
%/+DZ?GqsrH]/!_^]$5'HA?R.W;&:8J)$T=GhSl<Zo@R!J!Dlku,*!Fh&:XD0Ck``P7RR>SS)+Q'YQ>-hV0FKJ#@]kKY?%7/?Bstr
%r%RpLH;SNV1KQfK2q5sQQe0=0$uAT5Y%5a/)7V6CW%(5XnrfX[n`6(jlT'=4B8X*mqFV0$49F)?-nELhlNC6s=Ir8R]n1*p]f/XI
%LTWZR#a>!"5%$qDj`kdb)@RG7#dc-G*71",g'oN+@_GC;_mO@^+^qJ">tOn>7ANjc6sO85<sqLi7UU;Q@Y#;U%R>ph6'3`a>0rAR
%k]CK]nC;dm$JaYi$[`#.*a6LKP-nYU!(9t7l0?Sb0kKihT%&8>f?uCA-=)6UUg5$Qq'">?RbBbe(r^_pC6qqG=[8/l=a;^u7!F[1
%"?/ZT]i_`L..#;)P>n,Wi7Nqcpd8D2!p6oSAsojA:8F^b!@iH?9NgH8N-Hb%crD+1YTSD(1e[9bI#!Ib,\DiKHWSckGs.*3Zm8gg
%8D'aFC'W&r]di&1M^uT?5msPXoW@!ki+YfI_$/<#66)Ji\B5X[#KUH8bbR:M:#\2/h*>*DBLaluX9Lb;h(C1Kl\>)DQkNqaZ;j"7
%oPpXh?is89=knkpTV]b<G'aTtUF]s46UMH'QI55A;e4G%@G/"e&Ddr=)9nnmI"n4M,Gp;QOBF0A&-`aJXgQ!H+cIo-Un<s8Vci@M
%D//##]%sNkakhppXV9bhI.p;b8eeT?J)Nm5f>5RrdM:SDoGPGm1_A,GMh<(4QF\W4/L_r4U;X8Mo7Z/P@gk+X"_OX!K&SVCJleAA
%MgZ;(/XBbNTW^arR#)&tdSmlb\o^1WMA$8rbSp:Zl)Z;UMI%$$BXl0CKf@a7n:XC+dRM\/;*)WEQcTZ?(#G]J6#:NYF\tp;HL\FQ
%7JDSS&.hjcWTJa2BoDb^*`dH:oo)NEL1?Tc(]ZbmRsY?tA,)c1`c(U``*G.]8Q;L3]+1jJ'oXV]_Q"MA-]iSbNp@9/XmpS_*/QC9
%cXEFLZkPockYYCQY.W8Y:7RiE]'GcWUu5p4JjhH38c1/L>1AfKE/n"?J6aiG+Xp6P]E-brW,m2O_('hkHS%,0gEgd0#Ln%8pS%id
%#Oj]M[ISOF!1qDJ2;7FaDe%bbDTZUMrdc/^\B9Uf<nQF%TkG#ceY\c`8bkL]*5G`5GpAk'R*1;Dj=knnRGf?M1sKs$>6Rc53R6&[
%BZPl83Ipp?W()AE:KU\!7d*QLILIDi_h_&6_"pI(H?2^7W5(G(+!>"GdV5\fED9]WlN>^?\Oa1\I@jn9B@s!+`^'F/-.0jHS&&^N
%[K]6C7!qhG>ONjo6=)J%6P6pQVOUn@.,GGb,ak"%na6/haHQrcFmN&c`UoIoUJ!;SZl(#=F=(LL'lh.<bm],[`3o,]'lu]FW#Arm
%[u7(K#"ET2XBAuaKef,3r@<fJ/#&Jk0$"8pPp\UZ9jQofUtT/$GQ09?"(&\D!D&S+Y[b4_-TV]eAReT.BpZ\Z";2*l+!,>%#YV3-
%lSf4]0pgub?n09>6lC45a')LU&48:<93:.I;hU,7%qH=S8p%VVQUr#t2<G$A">(@06/4%'KN5r7_]jk8QURTDS(1i]5.jPLLFl@8
%$V$g$G#@L/C6/*)p"7p6:]`>2M@L\o!ZhXge5'=FnI3aZ!^7$)#-:V/:aM"AG;/c:C$U9NVP"UGJUqK::sp!h`W]1P_>lJSSHT\g
%1HjYO7.cZf'EKeO1=n?#</&i#QO\Fh&Lf=N_@nfHeO1rGcfh4(qU!h;G^kEEW.LR]E#uGS7ehjD!*I$u'oi8q)@-K^+5f#l`oL@b
%X=Vh)PWfd6QEc5ON6GH^Ls\#]KD(G,,BE..a>$0r(^%un?C-lOoa?;,%SU=d(m3"G5`S`!0ul<U]MUa"0Lphk(Di"I"_/q-?'CS3
%E!@QJd4U-h2Sb/<Q::KN2'&FhC9oP66Z='!"'CNG!.YW.1E)Q+pM3c[g?;p4Me@XL/<+Re@%A&:+^H:\;!sD>1(6H_&8+fjPU.`@
%/U]52e.$+_ROC1l&r=@SB-G8HO(hFi#f^;S&scLBF-3l?)Xg=RMhbt!4U\MR`TUc=)rsE"(%RAApq=BjN#K]_jHW.`1=;@*PC[,<
%qb+=a^:&>A?j%Vdou1kbj8PQEdLlS*%QGi`djdo]=F_M0N+-1QRVU8)!UpaH+u&<m^%WIh8g2>T'iK-".q5<9#L+0H9#JcZhSAPP
%d,WK?cmS>:2+#=X!M\3/!5Q59%Z^UjC[VcW_=,c:3Qsf`q%ql"(8EKY'8X+FU6H3r`Cq=)U)([GC[7fT6ZS5<@1>L-Z3AmLXK*N[
%`@aRrK;N#eq!0`o%Z?,tR*56&FKJ%@?5RInp/2;sjKd[8_%o_>nK)ngp!\-NgL-ff\D%cgMMha8Al@'_kWWI8BH=Q"ZQ7#DAdJi*
%lbjK98dO*0AC2O:.NSA[Rl1j^)n;#_Gli,k\MpaB7/#-)'ba.c7Q4$mE/*S/XO:@,iBB9uXq;GJN'Y<Si,>>M--9eQnJ!JG[D;p(
%Yc'$=`XJZYGV'Mk9j3A;kbWj@HE%WO&2tpj@Z$Em0c2X`CaDN+O;`+)F:E_Zpd7FH%>Gd,h4j]d,F^+']',Pg_6=GV1u%:<7VgBF
%`6Lq+9\CG2=(2BTdtf^!?l''g9IV5SdPe"W[TS!@o[<m9'&H!>DM=M&N%bN_J7U>BN5Eb^E7M>]JAi:0P%6oDH($NWgY^L(cD*+S
%<\ZMoK>_P5>R.qlRTK?REB74'n0<Z0!kXJA,;_2TF^R:Ag((DpF2@aIqf$ZEg]E]G%OQ^2g3![P+m'[d296HKTWRH1n.U_hN0B2k
%?3K=Y/W<=Y(4-2S)U)Q!1p'nf`&aRi(BZ/6_S@,BQ:V#jfeHK.)mM'-VAFTR_D9Rt#GqPROao''Mjhu]Bk'FM*^W^sGC]Hf/dW#s
%c8<gMZKrb:Y?uH'DIK&%(4ao]b6W&CMMphb-j,pbYB2Du0<L.(_IkX/7?eNTJ3b(XnROH_$!@,(=c/&'fW\N^L1um.0jEKTCh)8#
%QJlpALBtU"4>[p1_BTGJ<k*LJ+fg.&e/Xm@H_:Pe$OgPkb)":]H(s?D0JPD$O"#^L.4;AFc[;\3]6K-LG'l;)%tg`?,-(n9T,'Br
%dNVV;]IuCDU5:9iG:$#KFWrF\en=3[T$6ngU0\W/EAG(7+:VKXZKo`,O9lf:FUB&h?&.2a327&t;b]9'``kQB@T,gl3EABt+[G>#
%)7gZ#Qc<Jhe20/cc"IA.W=e^.K0!J]i^@02n0d,q1Aups]+DM:C-i>]G6>BBcl\`;U7#[6^*'eU;)JmQ&YJ>G01/]NmA^u)eAqoq
%Abe2fZGkjOYl<1gQ*d3#WC'6G6bT^FLbQZ@?;f2/T"("*8h(2-TTseT;3om'hup;N"t0k,ZDLB+khn)+:<e40fJG7\_[9r-C$076
%JKHikXpo%RRDY:M3*B1$+qk3]RY%:67)%SE;[-YM%Q>(DOT@;V+NuMDn=^d"#8f`7#=''r$F?jN:V0OmUV-^oW1;<liqUfpbFJrO
%_4lOB?P&+1h\GuYY[t,8*mseL//\;ll]IWuc3YX]C),YMog,ij_gt;c@VBGrE#<GnJAU<>%I5<P(Q^Rfefcj"FVosA;8Pg[g7F.]
%PA5a$e2Y=sF*7OeA=Ce?Ub3737*8J-*@sB^AdbjN.!-B3\9,^iU%o_7a8hkhrKNZm//Y`B`/3#1PCp)_p';noP(hk)j>S;iR?/C"
%IADsD]s5OPZs**jr4lP]6=r)jMo^W$#gnlo)J#_%FX)P)JCCu6W9B@gKEWB'(@s48O9j>)dRdL`S<oTQ!Dgi=QuGgn[)\ofg0"3b
%Ju]_P@!2%K9L2i=Ns>&FpD#8bD9'fF,VM!pJ1kS<ZCL(<5cA++AAXr-[+brEM9QE6L_P[S.h-H(DBRqD&<0g,pT&VHW8@G+D\gB%
%KbEs(K[/asBuXNR7sGsM:n@hO#S3b7a8Ya7+%gT!#7\Q[MbkZiJM`o1%"3iHr$\RUZk->+9,gIAU*eFX"tI`r/0IbHB?u[*C,CH-
%4n^arXT1:/.d`?W+G6*o:h?Lr<j4\0IhQOIa@Yo=R#+Au8=K16-sAq9:_8>uUaS57;jGJ&;TX$neauRX8A4.r_+&T@ee?Sm`Yo0=
%QEbZ/U5&bq&MQMb'35>\BU+Gn#tr(FIct^Z0U4s?"ib>6"O_J21''C2Zmr@M3<to^Cf,a*!1FH\ZkT/b^]oX#")ZQ[:'UTD=&oUK
%ZO7,eDfc#CmhSQa@4'?f*J)[]@AJRl!+G>1mY?Taj[d";$Bco:(D:+5Rc,)Xq&r^2YsH%<d#c3,>:bJe3Q[X7;.*$,$E^$n+sEq'
%JIdYr_$rf<_UF9Sa:L2j#i](-dO\P\J/5aY_?Quh4em*j<u^@JaFVr:1Mi-rO+au98"*oB0kKJN@t?#g-6e>.f:5Y_<Zl>Gb:_p<
%1'nhk$[N768GJ+]^7nr6/VlJ>*I[!pLG]//Q85K215f_*@@$`GD_ck8P7`b.E^G[2&-cZt^fW"563f`e:$>'F8(_M7D;kl#$#i%A
%)2L51!'1HNC-dV\$;4c(Ro3l_SuO/!XYWPaSiIrJI<1J*j1Eh'J]^=[4s;&8eW<5BIY*^?eVmf*`tFQmB\Pg;Lo/uW.%E0Z7pO$E
%8uc>h#j`elJ6jPGQFQ-4_tg*6O(`S!2R[q$;4D'hb!]21J3(om5T^TbWE6GS_hL6p<#i^`oEIG`B'RLT$-*d[HY@(("=+5Lop]L*
%^`j%#1rFr9,,U"-?5b*gh!KS-ifVXK9?ci6,XHckW!hiQ&Af6s0D0D*nm2k`f=jqI:7Y5k!9L.(:Wmb%/]=1e+_>?U79;u:ooYD0
%_oTYj<niiR'i2I'V7ho]n!ZBkXk;j+-*@AQLim`']ahgi$a&QL"\\X/.VPPp\\<:&o[A$LgL-ff\D(.EdNVscn49'U-6j7djb1,V
%*%V4,Xh[XNWm:,draduE$)XE9=OhN7L)NDMdL>\;,Xrai)AOKJ'3W!P".dUQnk='AYuB_i_kZj+5S6:lfTccM5fl0!h+cL%`7MQ\
%S*sT>[G<&36.d,,$lj95UpXIlSJC:IVP8Y5E@FlhU8cNBUdken.7@+rnNC_&c_,-+CaY#eSj<O7-n>B@BN[Gabg[_G!];"(H%!K2
%pIo9lC<N>?-7/499uttMVp%k<>T-fe.T$HYckZ[(VO7P3\ia(,V-UY\1r[+oSlej`2&T0o(53NlLRt-,L3YV=51(_mAj>.45RBL_
%ahD-Uf41p%RR']dQa)YQT]J%X,P&_bXO>T=D^8Q'rU?c>90N<<"/Pa#]r2KV5lmqt^sIqli.FX6"$q*BWPCf4b=K'N-LcV2#t3ML
%ZWsa33Z>4i*:o-01Dsl2KUJi"5$oV1n'D+tMChp9d"4Sq[P2XA0$P<0p!Eg`BFug,.?4T?i+CWI_^"]\0&rr%FpJA2.BW:dJ.]3Z
%;$[Q^`H#Rr`RLU9U"n"hj!/=BDLi#S-_OnM_a5]7jtC0(i6<BU.VET`MP>5S*.uDHR@][rChif4#W]d=5_Os$H(Ml-^jgTZ?<cBb
%8&2OVPS\[%1HcMH+'_bU,;0Q9@)9n!2,'<*],8>^1DV/9IrjS68?qUQ'JpI*oaFH-Am!1!mod$Q9V`A?Lgpfkf'LOGZl?-$@BX>u
%WR$lCBK_q$`Bm%NHG%XWMG+1_L)sRG6Q*:3XlnZY9;tKYA9Anj^,#&(4G3*SG[H$,ad.&V4'K7abm?jO7'8[L@6B1QEG/dl]$FF>
%BU=%rc&"bc$PE-]L8`W/GRO$f)tRk!3d`>\M/^1+5D:XbHiRY8bd[sc4/pY$-7Dc=XqI20f4N9C:Sr(2YV9E6R^%G[G->5oMRT\_
%7>+AiBg>&$"<j'q>L<IDG9E4U!meC[5:u2XXC5SH)fTSg*)/^JY2]B9C;o_a]kVe[\nDDB]U>^IA4R:^*r5DX30BoUTH)H)&nqom
%6XCb-l$-PN:*Y7+V!GphK.]Y='3dK9M3@q6VIG+fB@8*TqXOo(3A$#d_:0kf?>(h(>L8]`Qpl(*0O-Xj`@'$3MfGS8+iOrj5FeY1
%4en8[D^AR.)-fW*5YP<+j;+5NLnLT12H70;Cae2.)=CK*"0D-sBarl/>lcV"0FtsL,%J)5nT!!/YJl(oQNM_5e#F4Yk%+^p+cI*c
%glTLhT]<__fL(jX`=djk6;-3%o9,<6iWGG-"!^bk6EK`:[Uc1Ifqf6k[.`3r5bJu4OTd0E3NYpq^AuM$D:Fj*+Ya^g#AQOM>:bXT
%oO_h@ot:E:j%U?gN"l]g_OQB'qMES@p^0_W9oO5ao:*d:LAe@G'YMCUk=Cn5&>7X,L27aj7mgi3&<KCMimGW3rrH^n'XtCd\IQ\`
%A3k)ULrfdV7?R,UC9c47^lDA!_XIsAHhF!"!IP@9F5#_+UkK2]P!V3CB[_>1OMJDcJf3lpX!qYIF%mg*RT'`0W==eE"NIAWQI`Yf
%V/lsK?`U''1!L+aDukJ.FV<^5b]\/f!iZ9(Acd%(.UC8]A\gcR5mq1Z+9U(2k</-V3B_i],>@;,UpASQg*/;lF,H!1CT4J'&eO$;
%2Q"Z/Fe;&hWT/tX=>H1(5(7nEdPX>=RTf>:=W9&C62mTEKr0a#%\',91R.tZH$!tu<m,:[EQs@X1YV;[eB-co_CJGTbuWB9)EfX'
%E[dp,MAT:.<sYVa!%l<5QZ[j/(7'Z?APco3n)<Pam!V-A#_D3^Mo*;m0FqNAW$+D/AnWAd7u:&5!"Hkk\5KK9Z8i)NOhXRV!Q7'6
%-/r-j@;=cHW-SQjl=1reN3VqISqC'Y7FS6?`\9L!ZE/qKO(-J(0a,`=q\g3;TEUE:CVDY(&A,:N$IX(O:+U#1To9eD*o;jl!mfTC
%@8F;(+_<LZmm[g!?p^aW!dheq/h'!g9c<(BAR"Zn)pOAZ!f"?a^q%Wj[o#Rc",3R:N7pVg0\+iji;&-<qm4G]dsYY8\CsO\4WCMW
%N]1-h>",><4c"mj_T;po,LJP*<WuTn=r(gK]/]Z#,)2]R5-e'iUCToA"p"!=LGFSf,8Q:*@DmL3c!j(3"8!q+B1rr.(Z7?i(r1oY
%/-)l]`gDm3jG=s7ak0f@EaH-4@3c^D<,0dd??9ga5Xm>A<aZ8J;6q#O?M*'R2@3A.OVE?]1cY>Dc"_TeDN;k/[.%X$6Ps#0qMglT
%AqVr`\7q$:/XfuT3e0(OL["),nW=P:5m5Cb/.DoOFaXK,GS_c+&=!oCHN03UPaBj57k\<k?h?N^LE'55EF@u;!n!D,Me4.VJrt.U
%M"*DDmG9cUIULUPjlL#=X:n0Rn78lNDT&*_LlDLFW+u%CbL^\kX<H<lk[um)/S^gVA,F0Uf+`Xfn8KhnWEpS_nW;Spm[&D!:44)0
%o_s'HpLY4DRXXe_=20(Pm,_<(=5X#EX&jcpCX^U:^\[q6]BSEMIWt\Vm?9K<?[j@43IcA0rV.bP5Q"=TnH-,IHWK+!At=f+(A70(
%BPX9eR$]tPEq]pK`RoE6Ndt">H`<3<5ZYN+UC:dc+YA;$\QX0NM0Tm_'I0t_RRWc+A"etl$I)C>l*R%u_43fN-?:a&V$?$:>"7`]
%dbU9_;Q*GM/d&<!rr.PAKX-L.'W3*pKTAtgMg.2S$-/fD^Vm;u2[*q^/'IrM'p(.$OsqOS4rX!VU9(Kfh(Za.pSp.bXjIoDQeV*M
%G]6cjYLiI!6B^cr1iL]m8Y\^K`7Jop8h(`okgrfd.:m9o=.@>(0O4Z&IB!/QG>rYa*X\YC*R$?cf!>O&ZS@`-V_sXK!OO<9N0!6N
%6@TX.61,+`*n\N3ZX?rV$J]'Q6%-o>AnJX$]1.]*,m=YXWjmT,`A)e!0IQ96`k9b=isa!<"msM>7UE.a!?#WmNTF8Y#VD"dP=#LI
%-tq#\QF*a@&H[Xd@$n\qQmEGPp<g`FI=PUk_+eJ!q@6d3m*^Cm84MNl6:Y(@N\U.+on!:70u[;D=JWEo'FdC7(3AqX'="24=ZiXN
%csB4rH:<,hN.*%oU4j"'L+[/3UILi#/ett+fP+l7WKqHtYcG$>`%22mMA3-u+8,iMDI?M(!i&)8nQsP+SjdEZC[F"'!2Sg1+ROb8
%:p0+!+Z(H9lKn3Bp.^`Uo[4_]=9I&X=MG1:!(KG6QEu\eT0-5Gk\aWts3e6RK0^nN):n1X$Sf'D&\CFjN&c;]NGL3E5RZ.)+q75n
%705jAFn.(VACZ@:lCr<D82UT=,VGRPTSAcH*LiPL&hq^mDb!R"@eiHk5Lce'hP-@24;N6g4V?X)at.Icb.P,.OBTT*KQ"j="g]_)
%YA+21So7JP5%@VG0Dj0=10Vo$KFaj.2+ptpS6epJb/_L]'eb95#@:/?,KBH9&/)9J?!M^#/I=%mf%[Dm$nW??4bf'T<rhOK+m8'k
%V0hD,*&SZ*%uQ0oIn?\':l'o%"*g)!*$SrYO6ALCTO_bW=of)DW1rsXGQQ(!!YZ+:D:]\$n5"m,P;Jj@3(7&/Q>4n-7>iL/(X#@W
%9;1RTl?2f*M],,thBltB<%qNS2?N(EU8&c?-nq+27`Li!f-ldtc`-MP,@.]j%F%j49$7g2h$b%8BPATX5RS/3*A5q&6rg*%p$-)c
%ndl+@blPb5I4U.BUV9DS$RC6X/jBi+N91lMgGOu!FdBjob_H@MLPf5^03Vn^[!G6#g4=`Xh+h4#Ro7b@n4B0-o$LlhJKkOGFu6]?
%FoA#%BGW]]+[pJlqCXHn(drOMabZ1"K7J?u9]kIOM^(9>3q>[8/a*=&=^:?)<tu3<jN:,-8CT28<:6JhUnE6<6BmlWXl(@5>!=^@
%@DJ$9dE0hgr6/H%>^hb<Zpec=aKC?o$?U9!ECJ5X(Smqk3,0moAtB$"79\la&^#t"nU-oVrG).IH5YU4PX](bh/9k`i!/]<kh!pU
%l4$NZ-X\:+Q'bWLjtGfS`5.B9S-q/\RY\&C3Ud7r]bk?S?p:q'0,CNh"pH!H_UFN<,/b*cODlt;1'P&pp*;<f*t8X@l!"n?^pB:I
%#$.)6d&*n&1sTc*Z=@%D)k7p>TV?KX!XVD^^c`\&X<n*ASJ\njO&NY`(U.?`6pRe*:LJ)cNgYf/22(U05lagaW3)]$/;aa!b@%'=
%J^uGn;KuQn#R+%;gd?eRAO*7:K44Nld$B54.jcic[(/eP,!b\<CrZ`V&S-k_NpFJ2&Bc1'M_$eWBGQ.O0XEK%`Wg0;O;NO:.SM.n
%puH";8kchA6B_S?qksd:h9Eu\eA*Y8S<d'"dY!G*/rMK7@X4.0<<fYOe8fL`,'+5rqhdgnYD4r%e7I9QP17/s5WM-fKk/%%g`&+F
%@!RoXLnq7WmbJ_)a7/^2gcmKiJP$R48%rs%=#!ogJVOpT(.7>?`7;cnVbG^%I/ToTm<E?BcK2^6`DVGr/m=^rODb@t#":S;jJi>_
%AuA%N(dXi0#mORZ05J7Q7W4ZQSXBZ=Xd!L5\qp.2VBJpm5tE:eXMSekU8_+SV.>U2&LjcR$AleHOG\(F^jOc5p.0$j^m2RIYWW$n
%>hM7Mp-9l.77;Q[-WsT]`[P.SJ.N-",/"G0Kl5+nb`cQ;l.'q/K?,ANm0oc;.;abD]\o=>Jm&VD6@giPjPi`^q0#=CfRRlom2'._
%1:5=*G+*/Q9_kGLk'l!G="u1\aD"SS9&=Bp7H8B<P+;V'%1>6K*h$6bkYE)#l^e_L)W](40uV"(3+d]dUF(k]=Tfd"\4V+q!&,^n
%a^4WCg%7$mo2I4.GinH]76\4BNhJ+n?*N?CX^?1NfE#eA??98+PU!);1lsiNO3;>TR*]jkJ/O@O`"*e,&leAlZG:3$EfK=+]R/),
%8qr`*"^&sr>POqtS6^tKJRFNDTE49kit]j(nC)UChmFZrj&;A=%2[&1_kL[g9"))Dobr5S9IlNN0,UbZ`^("F=>8^@QA$lRVC%G\
%6?CT?5\\aaB*;gt#-h8$NbP2\f:%%?pU-ZJ&'3%-BI+UC)lC4P!KaLR3(gAb>f`]^VC[<<O=_mKKi'?9W!+sO"K_<m=p5NG2X/H^
%(+Z)o,K+b@CfqEd4T/=U&KtlDT0?1`.O4Qee0";]R27k^d(ms``p9G]3`,L[WnD3+)4&EW1pNluY+V0t7kBtn^8i(q7LG&]"9\7s
%-4X&r@@):p1!&7lS9oOl&E(3r0:10)*Ia!r!*$0n1+6]O]6lMC,(Kffam2S)g&MYk"Qq?dM_Q-;oV5!4`Je:$kq(A8P4MH--tYkN
%\i_\ITOhpW0UC$cB?=b1#bFlp\.rP)ecnWY@$%/$8'n`DhK#'gY3.C8QpOGbMoI!KKT3A+4YN5MF!;'"d8EBWWaW_Ie*IM"X>Zmq
%,6?A?.`kgrZfJ&#QVLWgbf9Au8)/Ze8hQR>al&YK9\$+p(@hYYH(lB2]f0mY=Zn,TWRTU8QdCp,R.OB\HIOY[<-nG;Q[6O8-kHT8
%'T8(XFWm2Vp-9f0jQds$:<ARE(TD/\+FshEUAD\sLh7EY"+CMpPF,ERI@m[dgrm8GP)HXTbTg6',r<S)0.e*U7`c>=kG4qhOpbG!
%%%;SGL*WtIij_FG8Z>fl47QP@pkkbE>fEP:9Kf3%,19A`[BQA4&X(j8kn%^6#=k$++``h`/Q0A?'W"33+t54nZ;0AM`^UGJPe/,#
%`kKgdqPGj?(-l>XS\?X0Gfttsm+&<b5qSae7NaN>SXlNNr0(f+WY([m.lo]$fP5[3O[d]27cjO:9<Y$u1J&"rKZD.`S5:H+A&"al
%R@12kHs&*S>+5Y.L%KGR4`jA#+G-]o+$*e#->56B*g\=XXGd6`LX8%I7Fjn.5?e`hl4W'FTY6:"dQ[`jA8N;ak(8@`YFmZlQjN=?
%1&2-';C)CBaND(]mtP8iTI`3XGa/#D8q98e:";T^32ir0(iZE]lj98L@=WlCX6Kd\QS+a*Jh[EVr0Q66,3FF7d`I?5UN663PmF+O
%S\DW/Ys:;!%qPT:Pg1eD7V!@H;J:(.K%4%j2Y8q//Z889[6!E(&qPiiKQ<a=1BhYV^KNA2N5;1bdk%rM)N'YW<>hm9Kb)E%!A4JV
%$nBRm3!Y.B9RD>-9q@:pktaP2VE/]04Frd([+-\(cXHs5(@61c(6E[mQ!PuQPnY%8"MurGSg8H!BCmPn*'OGK#s;'i^0)P1?DSBf
%5lJQnGFGgKBPCKW<t[r;Z3Z[D$i-gR-iD=ee:cJN)8;/"Q=QfJ,e0Ted4'h!W(Fk$l0G%s.RYo5Xg:TM"<_G3$A35&.gaGFp0*9t
%ApCoV_oZ/D(*]9__d@ZN9%=+JS=C3qB34<K'=)2c*a\t7-'$#D[<cXo8]1ulOrBnq1Fbo^3`b*cftm%mSSA:I^$HtGXpfN@)=Ofc
%_"9nb!$gpYiR3C!G(@,["d1IXX%S,j#hdX&-A7[aHE\7u'^6`'X3&2afJ.3P=(En9aigd6EK7j=MuF19EKiPPbdu(ZX1?i'Yf]#H
%Z.:FnBT5b6]-ZtK<%ES!X20P1?u^)nWm'&iV*+:_UbK=!4tGi):.\,gm$,U-AlM\RZu.,(r)T#l)7/FfPp+Urd)S$o(r)fpCf+&q
%7EmC8Cj?256K/d$c!Ku)Of4MTpkfEP!+<^?,'&NKV8B(9=32c>`g-gh)uHRGcEJ$H8K_Cd(!sdUi$;IAWPu0/&ckDjbulnC;``$R
%<-/.F-RZ^/^r6V7/B=39ZOATXmFHD1#nOYF.WZTfr'nsU6C1"4,p:RrR#8I1Y@8r9,f1J?,iAk26":G:70^q_(6rW\,^-$*GdB[T
%-SAqI@GYA@#_fRY,5H9@HY*^5$r#TIL^^![#T(C?BJ#1I6Ij4c=u?GG>$q*JU:%klRjf8Dp=P+pf@@/t0``"8Knn+i,;Q*"h^ujo
%"p:'r`P*#U,D/.aKp:06GaNi$2E&L0$j39EOqS2QZ"^Js^Vh-T&@*fYGb!>j33\9*6CC^Q0[h[UI>Ro8O:iQR/Yf>)f:D(QE&.S/
%1o&J=-o#<iWSWjlD?i-u@qW(2CCO]*J;E\g_V*FqUk"1APBpL9'k?SVqLS2T<Q!:;or:*Q-<so(L[IRY/a<'oLF_X.5pgYb9L.Vu
%>1SY!Y)kCNDY.-6i<gfJN,:r>--P1>9#_n'D*K^];%2oFQ*rJ,#ITQdN5i<o!!@_[N$]r=%4`[!Mc"lLof\L\R3&%E1O1hu2`#I-
%/]r04N!+>-:j#tY(d,$=l20a>Bo9F;W?p1i-GhSTh*j+ZC"VRD:)o$pm<l,"<3'$J34Mi9E:PjpML?:uJ_P8L3K0)-E;lQ'':SpF
%&t0BWUlsE8MT9NP-$<+*\6,c<N)UesBDM5E.F',K!*,Rf]GS-J?kd8'[A5TFEBp*@j620U?u"]PGF_OB<FZ9fd"u7LY"Mr$_GL>9
%=a!!8M5+NF1C("H6j:-&>iJ<2dhsr?M.?F8`17B!Q2%Y*LbEE%i<hZ$PrfseMa>inmVkr@c^dpgO-f+TiHX0f=X#+$8'1kbI(.&Q
%pirNESMqN.(l2O:Bu:m[daA>83/julr(7mQ+X&_kL,9lF>(Aib3Q$DJYS:qA)4iF.UGIY&Ar4R!0V#j%W+e2<iQ,nA/FSDB4_DPd
%!+Kd'g_M@71U:t/?**r[Y&NOI,,)\KKep1r\hg@*JnlXQ25Y>3R^UjLU2X//a"s1R_Mu4`8ed<`,8-,TM8C:B`e!*qM8DP]aJ@6M
%'FmGY7a&8/iS\VsT1\8QLE^:2onFe5hJ0@_E%Zq$h%%?M8]%`"+-l[r&WUZNU`9etE013<-+aeC1R8LmFMeV!mt8R6SK>EI99V8W
%E)JEgF@HbsMT3L<3B/E6JJo&:E:aYIg,IO>kbEqHJ^+Z6Xt:lGR@(fV[?Z9j%q]cu%Hm%F%1W^rLKuL?eDT+$%KYi\%F4K_9L(OO
%n>Tur#1mJE.D:WpJSG(POa_@=3S&N$gu(`7+T:OaN>-E\XlSDUbD%$BRp"9To\d@uZ=aA)3!m1SKl?4ldEGm##!Y)(&s0RVpqb)5
%KmauMr8>MfJM[mdE0=rfAGMhm_0))*WuiQN3#;p`h@>-VP%m"?F\`/!1a<h"=+YDZZ,ZXh:(RoQQq;TCIW4i]PPVl^K9I.0q[%@r
%E4"i[59#2n!3]"$DZ&F/i:%UI3;7#peaeG9*74,p*bXOIAtKTEo:GcoR7O2M\FG2-Rr\V)g\JYtpn9ffq8"'Zj]l!b_9kSeZb[/I
%\mHZj?g5D3=HT%fd">i!;EFO]4ZK,T<1+2AE'f*!ni(l6@Wo`5e5ps8/.!Gt)slLC)m_dSG(+C\Gbbc&nq1G_d@oe%i/UM#5YX:(
%3*N[II_u]a\5uc*.mGup8$"#inq//^7(B>iK9JX-d8a1qE(u<tiYatj-Zs<$K-/m4=tuVrK9J]ZS"oXgXE'8j%XN)qEskR#2tZ#N
%/4cT)lh'+9-8Eo#CQ!CLr8?:&ptb_]f:-o3E.'4PkF!Ds?]RCRnUn$;d+Q5-;l>AJCQFG:BHai%_APKr],8`9TEf*pd#eXdkeYBq
%8WhlVK=fp,U,kHI=&MSudXqX3A^/\i*ZVDQ!o][k**A_#TK54qcDfSqF@-T,=\Moq8e2DBQa@3S*h5?u8f0b@K4F0biOI9f'*),c
%E^TH<"\fssis1?P8`XgZK;4._h;AN.)IVe(_o`Kb#.\JZOQ6WokqG+n2Z2KTprK#Uq8'J8QB`P>]l_.&:+)%3^7?@9KN#GqWpt_*
%IVpn'GNB(M#Uk7tnUiWA0sku@&'eHM)/AU;i/Tl,Pd^.8K@n2ren9GN/1.HO*rOq5;W]HFq8(I[>FK_eE1R=LZ4hn$W?P@u'80kh
%>EG`;$,VsOe$hUS%abPibh[6F.W_^m(9e()6\s*4-O=p,q,lDi5rbj*C+Ll$30n7noF4)GkW4t6\eBa\?F84j&qi=HVnju+"Q>Vm
%R]c;@FYQ7+_[[0k*B@;o*#u1sc"1jH1H>t6\23)eaVpW8bi$Gjb<mW]cV8\mB3oNa=NH+1*'7Cn2b:c+cgfk2JnH3ln/mW&S=#H)
%m&XmARU<WP"@kS.l*d,ngl\!+L<d^BcE8P`^@?b1m?ehJFZsbF+=LUqbQj0j5Td#tJ[9qopSTc1E4"hP:E)Leb.[&VTEBt?_2T*h
%)`V[OUD@/"^_:c?o#_0.H=4InJ`$"Ps).'rNof0DT94\g%@@"[Sbefi?1_(IQD2[@Q<P<7-3`PO)[X!^pp(NTl_PH#%APkRTc4Da
%l>M(]J68S#Uk[7kgIk\h+/_W5+\Zfok=bi=,sH_['f`MgZq+u0!f,mR*RTfQS<SkLHo`''/2tZ59Ei^V\!75h>Fi'WUbdQ`<`=cs
%`WXTVO7&r`9]1FZC^Xod!b]nT@&DAr"AY.AeWgC[%9Ch1'7k5n<3T8D.W@4h2i,7ThdL1c"HN4f`FYqK-Z(>r76;5D?PIb[L'jG>
%4[903'f\oqV\J-d!bXBO=C'Z]#([RMPFW#M'g?"CkY0pQQsA;WJWgD',gr4hS;&lL+D)g:Z>-\0W"X_<`(7#[M80E'(D^r67,ZkM
%R^?^u#b9DN1_M]7i(T`Y#Bq5.=q*=H3Y+46**N<VjT4NKgFOE14Q*#NU\=(;i++u]:!87rS?[lB7*@7jmK&1XmD/mb(1sagH,.s@
%>h[=&NY\n*h9#if=@EFHB#=_rVfF4?*cQ_l9!geRJ?q@-K.Y(F:+`62cc-%sdnoerh!fi(ic*fG:'9oT<=;396N[fPKNUWo#+Vm^
%dG%+m%blQI2Hq5AY+,cN$m'ACr,3LOSHg,djLX-nJ320l;doEr]Z%=5*Al]a1'9Ykd"(_UUbM0mi&#7PK@ahQ*LTsa)%/F<;fc/(
%$TRr@=fA`:!G>^OG@B_ei(S0ce9)OG[OgQ!X=W:ICol,h_"eI2[2:IQo_O1P5-?HpXO87+Cb4N.0p6A^(3%=-ZH=$k3125k8E0\?
%%kcX<eL85\<D9OO;Ll(bYN<8lJE-;C.Jl11\5UP*]VPU@.ogSe!+u\KL$BB1CdG&sQ3*SjP.*$4#U6N!$5&g\"ZU@i@#X"(!,$d5
%Fs8r^aa;.*UR;3($NUj4_#^_8aH`"nSEF:Hk:I!"/Z7%k6$?,+?\:(TP67=3S]j1JE.F/Ld@490%WJq-V!]0Ai"-5g\sk^q.9':=
%SHYP*Cq<R5bQ=r@kq_dZ]2#RcGefTsf",DR!CsK8R#M?@JU["feTnr]$7NO^L'Sc;c!^2e!lpYljPCH!e,+uf#,,("FJ]O/&NF[J
%HAN(A3-q5dB)EJV3;"MsH92YI`j;"V`WM65A`N&<i!Kpr/DsbP&=qU^J4%mj;(u+fR4uY1iXH8TP=0ef=MTcPEH?l[!mUq[CmgY@
%$TLJP8r1nu^_s3$h8<k@Duqe[rK=bZRl0YPd"!pB6sOt("&:pWq8/C%SFrKWgH$"X<bp.OR[Lrs2<o_;"O<f-'(L)kE*+%$bICs^
%B2j[<4Ilcu=IS[Pf9sG%U9&e_-?(dt0<?s\it8_Jr6,:=P`Nc!SI(gSL,A3W'0%(+HXjqr%]RtVffBd+L6rsmK*e%[(QuUNR(sjh
%8tOM"^bJU>g2AZr1Jb-.Zj,&,]=-dc#TW)%*h.$U-?.3?!tMeK!bX\=!U3>_mT>S)1HeB392W06fhd7Kp5Lf.<8`d6nW6g%E$fgL
%2qe]U\,oo9o?1-cR=A2g)_,gheeNgR/__lr`7(^$]ebi$/JU8B,$8rNF@CrXf%lu#pWe<I/JU6+Xg/<q'f^$t>"^lN!XIF[>\GW&
%3.$]>XAn*tI/4!c.WC(1>&In1W5+PZX`?3pJV-s%QL1ss<8ak:8rLu+jm>a]4hdTkB*B-qY<*IY;N>n+MbXH$3\nDG9EgG+1o2r]
%/o[,CEMog3#*-16b5"5bJ`ClebB5FV#eCe\Dn*S+kW1Pk$X?nd"a)G:?E,S5(HB3[@r<tQE-.p2*Nr`+)BoV@'f_B'\L#+c!_8//
%C,6Sa`^0@gkZ$KabZ?uHUB8IrF;6]-i5fZZUrMjsi-]4[.hOam)*/cr7,[hg[<t"I3.eVsZPsQ;G]Ip82H8Vq^`Yd-VZJ4G4SJ1\
%<8\<qKo%i*3;q"F)=H_JB%tXC_Zd42VJ@[u3+G'ElKVX4BOO?gQ4'3u7Gi#RbOWa-+V3mTi+QMHhhDT1d31&qSIM*]&*'GVJ`$"r
%hZ\@S0HW8Q-L#kppqRpAmT>rfI,N_Pgdf]c^nD9+ksf3U?V6Dg+[+8)1UBo%?8O]^-C'dNA&AP3a]s-Q*VmL=%T9DOL?JUq9]cK2
%n:>X<C'N!e!312;2a6`C?i'"KofkDX3%L3nl>QL6BhH86*dllWI576$5&_.eYVpL=#EJe\CH;1*).mFd>iu354n3(+#EEDh$%i^-
%dtlBLTEE6A-^"=m%NJPbMLDB)B+'oq2g!u*"A9+`*B9WVbB;0_.h;aG&N=gioFOl25Nom#`in(!FPq,_7E4>Q%NKp[$$JBL33`K2
%ZZ\6GTE1;^k_9Ndc"-;\CuFf`Q$f[>JNIa#c*6]]#*.j2\1tCrJJ6f0b[[$n_!uT.I(GjXgi7C^;UZL&38R#j@Q/,]!:FT4"d-'@
%UP5Kb)_uBNiPC:,\A/\raC4'0B2ZlMc`"Vkb\0#=9]3ubAK='L!cPL\g6N!a=C;VYjT.lh''`'k%Lb%S;/g+JL\a=[G*%6\lG*1\
%"2*;n+'T*AAp\/!#&mroC>3YD^`D_ZZ<nKbd@t,[%,d/XLQa36AcN((*V5FT!B@/#Pl#;(^^ET\YPd:VgnFo#l+\)mJMjZ?s+YSh
%/mMod7NF^m8iui-ps).N]&ipG]i954V>eb.'`6r"]FRZ_[`%(mfp@utRsSBrFiRV!O_)KU[ghSG#tdZL8AEPPZ*T+cUu,u8,u#cc
%7Z10/GLCE<+CMZ)rJ'sM5(&H@_p`E8jYqEK?rLq\^O*NP+T+\\Scd/HkPL"g(sg:;Z#J)hl"&]%2B<lMhoHmToo/1*N0^HF9]()1
%#%e(g2aKL$#+_0rg!!D-A,9d>0VH8SN><EV>GgjY;T6'WIDb:WY+>*12lCoVT_V(%EX?_sq*oh>ZFeC-hcQ:V>q*K"WBeHn-ht^$
%]+/HJL>TV2m4e=K8VD`\gZcB`>OiqSfY+O?-?s,,\MkigZ&d2t%BYh^7Q47m,B-9KqbHO\\1O+qB52?Ao-4II2d4;:2lOEX,KGD,
%%C\9b)&*qKhIpW[b5E&I6bO&3PW%UZ.$Ibr?b*kD:gnikR(`$$J\9N&m*4_t$6D73GI)-D2T4G\:BrC5@RL5::OmHjYr?WOC?@+S
%2o0uSh@+"7ir5eLQ._WT571>ubh`V+/D/'j:jWit#Hu[Dg)K>o5@RH9A"aQC1T]*_=K1OQDlLEi,1:'.ZSrgA.D'5)D_tDI%Vfph
%0PE5O^$3$`ZEh^0hF*Kg#gg,q@9kQb5IeC8JM<n6jn>R6<-)0P]`HA25QV2"2d3TZB#F#<&@>4`[l<i(hu)F+-F[DAL@kkL@M0PK
%f%@ZM%4*5u?eN,,RYA,3Hh/a'?WM2cRUE3bfT:F^#hSp\:@?@HZ&noVmd4\oTEK'umS0P\+3R:3Xf+EO\s%Ki%7%qPQJC5o#N&R&
%DZrYKb3c=/Ubcb(VBd<i32jNY:nmjk7dZ1K!r)\`RCsJ/@I\h[p."4#F*96aF.eEXn$$hZ'*bAjgUY#^M^jA#bjCCN-%J"c]cHX+
%YYohc:EjPdV=l5A9U0MFhIp:7p7V+ki+#>kbhgReiG-i0]j]eS%qifH9rjm3S&Xe(I"<i$S_;b;dk)B^R(ZYbcR#MGHSb8PB&A?s
%)pY3VO*>>W31*+[#.:qgEEHfN9'm')7sF^keD:CEVNol)^aH7=%CJ,f@XsCHC2]i"apN%9hKUj9s''5V+T762%r-$)!WAZ#ZSu&Z
%1t7AqH.l^hMHEd*6J@5IYr>K,2+0L12rT%#42S);hF-UrP2D,0dA"fl-h[aTYF?PLLqSZ2Z$N&VH_VlQV[R$Q#3J%a\s_3?FXSlP
%Q.]C%$*gYWhK8B'WHModDt:(W5/Wc$&aIW6W>sFE%*:4IHc,6q\1pm;#.HOV+mbgQ[l7;2pZaGMD^n,Hh9,,E(4qVeC2YF=F-i3<
%m>\[&j^F6t1L&YFE(97i<)55=,PU>J`BXlQDmUpHkD%c]'@r/=<P>[MXmFj"GJ3lt!?<1d#mV3D2$t:?Drr>m)WSj)bq_GF1N[MQ
%P4(#8^TQAKRWo\'b3_n.[^_UV)fDWm>IC0uL;?<uOA>2F+_mWMC2\F=Q(-XSeD@PYQsJUK]p[?qeCDk3IJ6B!IAd&\.YTD$Z*"YD
%C7siX-7&*[KaCVQ_cPKF6\aG)ilE5F+t(G;!m=aZLNkT03u$:e/]3l2/5jsf?uRFseo>>t@3#MX=Gq],Z9/sn.!Ao@OX6@uREurc
%\jY%2+IFmH3ml0!,S2$&\iCmo(""k"'JaA^1tuXK/PGLlmaukl\,&?uODa,#[4[\-9Qkho067$<qs_0s(8*L)'nA$;BLB%!/SJ!D
%mFUST%-4b6Fq)fXe]N-(R"UeK,41erhD+k_Ur?sC$<>oVa=69k>&5!#XN0Ip0Q-Ni&!-.L!88/I/(b0,/lm;8=?JL)di]f^`Na=e
%_]>g^&`&?YaV;lYFf2(g9%DU2$Tf-2,LM-kU%!=^?5:+D+:G#!Mj>%^0-u!BRLLC2p#I0"1eQ_rT`ICM'=D>=\b0X`]b6E3gd'AF
%oWc1UIrO9S$=6!SW"2/LX:&Pg7?o3IP3*HC"]af=ZrFDC58[Btj2Ii8c$CfC!;6Cs7'+d6\;LGm@X"RL/@&qG'G]8.J0!-uf8_2&
%TR6n8'Zl60Qbp$P@+D8DAU&re[5V;^4.\<Heu?WN:_q1Od3o5bO;'rqNSRR]!cq]F4TVI>8ljrVXHFaYfsY&r!>t4u"H2%.m6Z(.
%(ijb7a(eJ%&6j)C'4(t(hl)&*Xc@o`*EZ8ChJAu@"f;toFmb)Gg4`+4)!UX%>l_9OV@4\C%l>bt\gqMe2M]+$NOnidLiO9m,aN/B
%1a3W_gg'TiAp&;FN5Vc1Z">d[4cgp&9#>)-W6S!CbLKO\GVrpG'?d*O[(uQ."'PC$$5c5l.NmsoeJ=f,J70+QOi74.J;f3!T!dCK
%Op96%5LuRC+W!Xr!c-u_[I[ER.%*7RJPe31p/Y3?PER83W1<,YpgX\V6I8(Ni>ZkYUEc1SLLr.!#LQSF5"A$X585RSm(gHI6M*XU
%K='*>qDa&\1p`+'o"CeE1nKnrcq,n`(B,T,!]"g!GEF/u!it?nc4-ofY%[JCBJ!a0Lt[G[!n)3JE]KdBAJ"fLQ0K`['*WapXRc\]
%6Rehp"sKMaK+e6n9,D.nit0W`-I,GQ2-dnT&Q5Nf?RtD\"iB;E9eh,209@(9fU\f[!TAk&!="Il%WZ0!mLBp:"t)&MbpYQmK,.sb
%A-OVV$IK]Bd6^EbSP4]i#=(_>TB1F&!h2L&O6-`CKMOjr4^+4Ba;4>T_hr:o!u]"C151#$e4m$DXE0.R]A-%t!\<^.BLk;\1%S,e
%qnScZS1:HEP7fG(UhY810-ubukfE;+JKSEJ"1]fJ"?3g-;j$r38oMLG$lNYD#fI&nEL<\U<R@;_(g8tn:jPN$K4^i92RB1b'"]:"
%0sF>mW.SWt`;K]s3'anAXCUjt^g5+(61-(_aq1X^QNdesh5O;^YZ\uukdc67e@8Ue%QRr/#`6W,7a`g4@E&j;pDe^UY0tVK?Cns`
%JiRr.S.qVC?A%m+fZ%tM[L0TJAfFLHb4C@ub71u.P+WB>]1>X]9;p%lVI@GtA$\[O%HS;3/U.K#4s?\ST(*k;h$>:VPEhRi>]n;e
%AHKEAaL&C0Dpe,6/5Hc;l!3ATa9V,nKRU&3s#O<j0GIG];<(7ol6bAV]kmn.l6\b_(j-JP@;NTh[CmW5*SdM+Ta?Cr."FKq`s6"\
%@/FQQ5<_A^h$"/5)&YO&Th8uP&<+E=N)8LVbR=Jf1@KofB(rsbS/7giToI:W+M:Ep%gE^L&t,tc#4AnH/_\"O:eUjcjDZ#=6BKnf
%>TK\</;mh<#JgO<jQkb8N+2%JQuklFaIUijc.na'jqpHr!NBcBb<%UX,JcIC/FEuR/u_]'+2C!mr%^)F/DG_t9b8o+O.n<7/K%k>
%hQsaf-I%\42NY/t*,ggMdF,B0r)g-7oVbd7)m[NE@@Uoa+OVbf5-sb*,4aN5kQGd/-l#c_)Mq[>aIJ!kD*M%(HUhSL?/80agSBE5
%>K7LQc/_*5]&.ECHd`UpBP^DS[rTka0@"('WFMFX>WGZoZA"]XmW9gT#_h\YM4)U'[2"$oTMgmoBYb"%BXK]573s'5#UJ\mC>.d@
%?%suoVRTH5o[[tod`t\B"fe_?OpD%$=iS@C@Z<Pc3B'`albbQN!7VIWcbkqr]pWF,fQ5`@+Ias>>H6g<gJ(Vpbp-t\Y2L7.gMFTA
%l!',j#@-ZMc4:h]"cg7u0\3IOGa@B4:6WW#d2;ZZpu-L7DV@&AL:O?HO.mRI+-AG3q!pk[*7;'6-:*)+2cKr)LF8d]YSk&:W<99?
%Rr)BO;G+GtD"65r?n>O?0Q<.]\%=m]Vfahb+Ve1e&\(C6>*u:D(@D32@\,G*%?8[KN-g@JKB_rXdQ)Qth1acn+A]V):Ig?m-.k^*
%G>;6jJ?NBOP.TA^]AT*2/&-H2Wk1N"-e^+H@tHAF(i)XG7^f<0b(6%=JD@'f`YH'6.7C*bH[%!m"@K01MJ_.&JS]'80XO1TMkL^2
%fL7_pVK"m*Lg=\-GCZ.de_!j%Q(G?1E;6eU.rMmd;ZP);.Q+G<.$J$-c?Fa6/q"\uo`9:6(qQQZG]M/k,3ei[D?-J+S0ohT[!KGI
%=*-So$!srtBghI2\7Vj2V,N4[a,%n5P0Hg*OpX>95-RZb_e2#3:ns%P6#A7E)[n+f8;D9,X=J,+gq_MEl[fijL[NSO"M3P\YoFK&
%__!ZjK5JD4[8H78gl<7I(=HP7NP0/O-=11a\k.`bnKuH``dIJZCokc%,g]`qm>g`HD2']t(eS1;-`ufl1!>4eI3oX>OeAtE`HXDK
%aY)k+Yc8KA6t9:_Zo=5ka*/9A'q9hm@\#O(P31>Eg&$.gMseW[]+9[iOTjHn-mBj1"ZW-A$PqlU"d6D&"3cQ%f/1F2U,/b1LTWZR
%#ZG92&<oU>G:-jD&1"&[[A85-4l=/U"8i,OHai,sN[n?/>nQoDrA"uU#ns>O<n?J+TPU5\LR.R(p5Bt)-PR*tMAUmE#6Z>gIf5UK
%m@@CHmNr8TT^E"74CaSEeQJ0HSNHRW/Vps+4R9eeLe)lJY<o[hQp4HRggM#/$D%LpOoVtiFbH<>^g[;bWK('r,k/K4^a,DLm"mVp
%^3!VC@;6F,)tjC(EFEOi*F+tTGcUR5rl>f_QI*LL9"UUWO9BK#q9Y*dS%oB+SHJUr$NOX<=`=GYE@D#D.#dEEHC3XQWcY6l;hDpf
%P+$L&Y%1)`e03*Tpf%n>e+k*q*FLt%#gTdQ(#IHk;/$aA"^<7'lr[uW0[P*e\!/#)!?Itn"PY\k#lS<GatD"E>EJAq*Vl`:YgBa&
%Q`mM)Cp1=WK$[T*&d#*kJj.=5HQ?T,>l]MqF6?W]HTJk!l]17DK9[RS%`]\e%39R.<NrZ(fmqTSUj+QUQ$AR&O3jF"5Gg$84AUD;
%*4G@p(i`b9bilakcO;'d(]Y.8hn^6%C;D%F%aK-m(\jZq.TN4_:b1nnrI^6?'&$=JH3%AU%!Rg<rA:2ucdmkf4X,i;Vd31UkVk)a
%"Bg'aa)Ze3*s-c^+CU6aM;'!;E^f_b?Qug,EF)6WJrIBK94hB`.k/5RUO?TJ)'3pN&V/4e"uYn+$cM_?Cgb[?<Yp+E6RTu2+GFm;
%Mh.1`mkg)t.m?t9@ohB;*%EE@1mk4=+RY*]5XK9=Z0(4mV=#./Z4(6H3Sjof+_*ZCqdDSHVf7c^(#Dp)5.-m?:c#\>-@E@J1#uC2
%Q$M80bZ7P<CXtnjA<JNt+?3.A3+ABRF\Ko0^BaaLP#]OF<PC;<+pkMoId&/]8%f4*;RgCL?XmdQAmp8m(n.a<%0^@t[X,E7[jYAO
%FCV(eFoo2Oi(<XDGUU%O@.i5>I>.(n,->erP3t)-.pb=X*GrpXKiDXc'i+ip6XEM#6'Jc<,o41IWbj8V8MHSi6$E[p."m^+nBC0#
%c`g`oBE?m-NGi?<dQ>iG8H\^hZIIpMp7W0N#2Dl8gVlL6oc9-,8k1T]21?94V/@$':eV3ok@U2I+PE-K(**+X.,TQB3jKmu0u*o&
%nAuhI70au`ruqb+13tKOOlB&E^1l/1I8d@P:p;/4KU5"RAIJ&P57TcG0XgnhdK*HA5[0GDdf#o'dlJc,>p;b6MtsLISMZM[-c:to
%>WT?hepg"Qh$D=9Ze[>ni]Sl,*Dajj&f2[qeFM37nB'HA0<cmVQ_7+Abru&K?qcWj]-rg8J0J-`-hQ'NeBWf4!%QqWOilenaJqQe
%%^$Hjq@2r3dUIj<0WVV^`[apldXEZc`.2n;<?f^;2jtOoRDb9n9*Zu2)!JmM0$KoK8d#K@!2M>7@hHhuOcqY[<b+@D,GBuF$^9qb
%kS?EVfW@UNE,hR^$EG`%-C&Oh.sEjC(e]CC"hEmr:U-`GI:",^@4V,r,a\!ST"s\A&o'd9GKam@:J6/J-^UPBN,"s)5&1$0HjTEF
%kh\-/?50tCW'_n+dg6V>2H)T^P=VX;SsH]/0B#sb1uSd97Z."Y-V,D,#2(5u%)Geq$pd#<(a0)u5Hof[HJ-B(04Z7Bh^"4B)m#is
%0f.*"]98"i8Lpc''8E8i;YGnL0OYApekEXYYQQ>:EQP#$,LG;[g(RH#3[\ngoH?rU,N2=Y`?'POfP--YDAEaVF<UZpE#gg&7[Q.S
%`&/B$p\IhFYH*GQ8O;"#W9udQf8Qpd0kj@A8mbJV42H0:7FZH(Tu307^1Fku>Z\<TVU.h@XL_.Hdn*Z`!cp3_Uk;n+(-!9kWJtl"
%OQ[IZM/^SiTFjZU"2\N.Umci&Z)2_39L'^1*ir06BY5,_f8)C-)C+[6&@9sV"Ul\E5`HPV_p^q-5o1506Ea1a\:DbJ_K878r]mK8
%+;Qa9\B1tF;lW#N@^d^72M)T-6C\7[3iiub:&leQP)=S&q<@,*O$_3L)j[0R'm5LXJC)N&^i`QnDin660JCH?aMs^$`m'ZWPcjlc
%DKC<?2i\R>5nZhO:=R([@W.IK#MO`>[4m3=_;>_JYfYV-l[Pqh-'i4C+qU.JJjb`(4s@[/A-3j[W>aPh_mHqREFn&ak]lPB7]J9m
%5BTiEA,CIHJiIE=N4#86s.Jd1N`/1Ka"ZNXQWKSb(afAE!71cMM$!)a5r3Xk%u&r[_IXd)/U`A@nMI53aD2q1ZRIW:fn8'-+Fjs]
%7<1q/:WkJ,UC^WbieoY4J>DeXcu>*!8t[,gKW7>n4RuFHFs-RrEs)6WJ[&/eXYA1(N+OG20=]Xn2Y&RUF?cmHEWod">>5O*#tP)a
%KgmeXd<hp&:;RmH:;3"KS]MD*5k)SkP=fGuer%`=9N"%plY3iWGT._tg![o81<G@W5h*T$H01>>BhTX-B;]QmVS]@NXp8P=:9/b$
%PR!UhjENU3j?7aLjuUGV%DoM>_EM#b[B`@U"aFS'W7M_ZhNUKO2=l0&?V!I#:hM:[TP$_c')HKH"Ms(/C)o^`&=<("G;7RJ)eQtF
%)G(WebU^"P4\u?UPke6[H6,Ad/dSjX5@L.&eY-!kE;2%>hHeX;)Q0GKC1TDU6;n6[4:?LtCt9>"!lg+-,t9-A26OT&3@67t6&ahs
%GsF2Y?2t(f3.),I^b,GE@d1-mgbIt1UYNZGCF#4::e;T+RDmo.I&d/(!coMRU"<ku4$tudnY(c6X0JKrdngtE';WW9c4_H(pHrQR
%Z)XW6_S#.LOh1tgE-)))X_]7M%uOX0ipnXC0TlsJ5BTkFNX?&ta['Cg(i"aMl-BYa"1U^-oh4nYJ=qI99$h-s?.[GTm3ME04Ws>I
%,U<r)Z*5!jSEVHC.1/?=`5Rs$32o^V#?IL"nX:+F%MCBVVGY3W":=`EXrKUi\d.SIlQsB"pJn^J,S4BGaX6]_0k;TNYP6ZQQ9C(l
%d<(mj'!0&_dftBp7Ns*DXHM&lp)tmc4O#E-o=-&$9*T$piu)SgD[+ksoucY.=d-c)9n+.oi&W6*2imh^qJ%=)K@C'A\Zc3:cqL_J
%#<3u+6[#9li\3*mjcu0)]hPU3K:1Hu-PVMW,%!$D,a@RVp_VoOJX#tbE%M^h=+Z47oW:Bon_VpLL!hjt^]dhE#]cn5FU<(63fBtO
%)t=Br(?-f+07B+BffDunGW_/t&->5d[h6(sJWL_IX`mce,/P)^865fK0p%Zq)O=k([)sI"#nOVrEqQ,#%pB-AhGLfcZsJ\&:Hr-R
%W1r9j&DmkF(]OaHdP8J_)7&A:#)c98.Ns?E`"(`D30<4$b,PT6-t-M9<>'FG'2]i)7<jgqmB,H:_LMuD)>^mc4rXV;Zm3^,Y#_8-
%5ijB2;76^M*P<Jm;FB=FMDjQ_LJ(7hZibP/4P=&3GVX&Z!32[P`([!raoHjI$qTAKV[jK^K;9&96:n.@mA*e$ER3bL9L5hd5'YlH
%fgi,#,<(,5)ptLJU.C)H*f+^_8brQM1Lu+Lim5[n>ND>A6KD9kMabcQ(LJ45]U<5Z6O;!MZAGP%.%L\R`R(ZV#$'^YBVo-/`4P+c
%bVZ.c&oI-C]\`4:PhOV/rQGCsQuIkTOAS<\,or@R:2_nSCb\qK&BHTPTacQZ5VSBp+9p&i5tX'EY:mQX="B'iipb/*hB/q_h&J73
%q&e]=Q5>)0"cn4QV2`M-VJ1_kY:(8<%+A5J0V:.U=a[Lukh<j-egU)K,]l0mraT[mEc?=PB;?3?>OYK9J9H4>%I,_PI7e1SccC]2
%9&/!bEf=!`VCYYKZpZLMOp<%Xi-Mf]@MIBu8R16>EXY#i8UUr.:05n%iY,_J?>g&R?;RcbD8BU,g^4iOD/,k;_Qh:c%GX[M<lZ&I
%.Zt4.%gP)IaNVmK<!9m`/g&\!f)fh'"E`iWUiV@M[N5XedG9=$BQZ/JB27=qZR5:^5seZf7gEI'U@:WE%Oe<%$d9b4,g.&&RkS[:
%NAHP@e1a\^+2pf!)9#ng7Y<\G`)XlnI*As3W#gSa,09i#Pp:R9>-o9"9u(>XGXAB0$r#)\#$Ve)jaa(Ykf!A@1=h!N.e(U-=:YKI
%88\UU`#(A%hV]kt2'8$)&s-eu8>e+W-\55I5u&B/ZLJnJ^Ar*NYAmsUA1%[E^8?bkAe9;\+(_AN"!Hj'7/e`Vi)o8"4hd'LHBB=)
%cm8]qi(ldnfL18o$W5m;OfLf(`;jO*!u-:Nm/!sh"=2HLXa%l/O]4^7>oF,gg"([ClE=%nYo?7S-5pf9's9k9S?]n$XMZ;s5<u7Y
%Zj%F'/S4tBXn&-MJsCj$aDG@E@-aGNSr)Dn5VqUY@P<O#b@8eJ0TPfh.Ad$jC$m_*"H'P)JK1N#J:P(NabgI_!2I2.;XX^YKbKIC
%W0m<=.#OuUpJ:R0/;mRjhEO)&Zbom5q-FVB;LCaJd<JjMk;WlI9u[PD^(mnc?=a/7#>#_VCQ25,YFQ"eC<S1WpdH=1;UA%ac`'Rq
%2J:*XUH:c$8PBQ</?HckAMg7(i$gp5?,eZkqDG`%o#NicZleT<6\MI6;G08k'c`EHnfunGk)g6.([.$R3?.[XN&tJZ!!e$_jZD>H
%Jt**+P@]M/1N5efY$CYR0f(Y*#BBEPB(1+Bmse1&(Z"?'e`i4lQqTgt"3pEdLul-/YUC2_;&m'DFCl:@Yb[Z%MgEbTIU9m\pI+D-
%T9JYsMbGi'!kH726PtMkLSkVIM7EJnGm.%s#uhIWn16F_/+@_@=qI0_D!`o<jCa90##[-"F%%Ru"kEe*g\#e==&KHa+"k3!8RO;F
%0;IT"$s*Q&]/LggH9tY0_S$e3"cG]<3o^Bi+Ze_1@8pK])+=K9hiU>uV2><eiV*O][J+"\[n@>G/'rpCLslle>$9F@Ogl3O=rRjU
%#NNdsP)?^]6mRI;+10hSOjJcpVi*?d`%=X'nj[5XA^d"ti\[Da=Wgn<ig.`cZhBaTZW_oJ8hFK]2.ci=5VX6`!)sYmH5adK@`"\[
%&]-(<6qTtr(/M8JN@;f2:aqC^j9pVd@8U4e;eC7r&jks+:JiU[2o)EK#U3mhkGCeO@W[cu'U#'IgQ3[P*i/U#NpKM,Hc[*6$#:u,
%TaB,=!j=Ee+V1hbJYe7eSPoI0TVJa%'eh=Ba&lA@Ob"uQ<>bd6'97K3#$B7Y:D")!f09uC'+/+"ij7095UYKe--0XqA95$dP?7pW
%<<Tj-[[/]*iDb8@R)M>'g!D-eO\*ue+C`a-*TZTM/*3+rJkKEX:^,c!RBRh_#@f%'Be,VGA4`jb:Cmou"?`5%)!,E4dTQ*,U3T]$
%]NiGT5ku[5TWgn-72SU\,G;"bjer<O"j=#Z#r:[DR9UmY(_Lb;4o)aRA<Fu3BC(WaO/uZr*6kQ<!ad:QC.[6kdRG5j+q52XQ>E^W
%<*&X!EXUe@JNNule5RuQ<jSn[To(ORW7*'*(b=:<;505U_'RqpK:rtr"p!I&:Cdh9aShVD3"5B!,O@q)20a_[T1KU8"^X"m"Kj,#
%]Pf&+SBU>VcN#)__HK@.8-`2+edrUXV!#&#^!["7i1eLK%gN]O[4Q,O+^s=oS3hnt+IleCTdc_g1mV-_8`26)IK1iE$!]QunL`-p
%L7f<6Q%o*M$"3jj.;34l'jCA]13<["cr;ud+C#48Ys:fOn4QDZ4;bhi5ale35`dJ(5/O8>as*N+IL$p,>2b.KJ<s;VB+\"$K"OWR
%ED$g$@a)mn+\!NE6+/sbE1;_;5qtqZI1k=_^'!T0`61ST$RP;R5r,*f6Br49kJ.652"t$rKb72ce$)T6(J#U'RH)VM-@f>8(dUH!
%B`r4&m_dNE94#.7\/&:7OCp6OV\<bf8\N?7,0d7Q]Sfr17^3Q>+N+e(JroI/Bf`b#O_:mBBt%-Y'd7-?"#-:X!l:49X^_5U>tI`W
%k2^Ue^qk8WGLRCp5!"^g-65#>k)g>ZF=dQ?i0(kg>;'PDFkE(@iTNl<-mh5fN7?jMDDj9@eM:OK(fMG5*r:n-%nc":'fUZ^-KYW=
%oM>sK%(L&I(lk<MV+eBcU4R:A1*ehH(t`@&M90qS`\;u_c9!;f^t[kqi^%2\=.^NuT^pVY)$8mj@_o6:eNFmoX<8%U^hg%AFc%pj
%O>(36Ypl&7;X/>`Q)?8`lCKK%<oD@2@)1k(13=oj!+<&Y*>4@V=92Wmc\'g]V"TI6K=d5<_"<UQN=cR]$-aoF?u&LZiTVSjeW%pP
%!OUYeL5D'-eQ^#qfN&P'"T<&]6FTFhR:$bKq%=@#LIRO"do&i7@`Q>.BtU)kb3fGa$%\e3(<=aOgCj<TP]ToH)_J(#@$dN8r2J-f
%+Zf=<H&t#$9JGK*Zq0!rF?q,J4"NVt^kTlC`jm!t/7A2d1H#8<4C=`p",.cc]Q#B=4%2*l=V8bN/D3XSp<iq/C-;e%:2@7,]qkZq
%b[:\C;_+64bgq@d9:lRmBY0GhM#GTr0'ks2O)SkNX>aa^8cODiS.i.:r[_l)!A*0I2R5fGaB9VRb:^Ui8a)kqFC(\HVFD>bZ.+V"
%YWO1s=;>uN&o5FK?u5rj/P91M3KGkU:-q@!")Lp9;^:HT%-'ef/2:X"(BVeL+(^6Si@"iBS\Z%.$lkd[W+`Gi&=(V;LelOdP6,>3
%R,(e^&d7)K%'EBg>fFAM&J;./Ea_RJ[MHcBJmqOYl9Tr$[AHs0",NmZOAlgp->j-b7&Kqt-"`.\5><+]#cFkJ^QB333a15.G48Dd
%dpNbI-9#U'!Q.2E7E[gF:4QDmlqV^;eK+kWU/d#5SrM.>?1OX;-9N6I'0CdX6UH$@9g5G-[&(iQX&(\g)n[)^%3-"FFs2$<^",/1
%@_id4i)p5Zh[:DJm_]Ajer#f!/p95HR#%2aVRB:q+f(Tm]*LQp`&.-aCn#r2C#'SERlfcGlgjNLVFM2H%-Y=,atf8k+J9UT;K*fk
%]`m%6StK;I`+aKRVn1);@3'H$&0?Z$I1.lpM=ppp4ZK<BK;Uq6ChS>+;_>9@5hld,a$=JK,S,e,CiM^EHF/jl.?Ml9IaPBOFc;:I
%oo@o/R-mg[*bM*7OIUMEgbiE'o:L;+#`Bq<JQH0&#;%1[]R,2qSR?G6rh7UHDD;h0Ec(Tgd/ki7W:;90.tl-KF;@EA,GI'4hV>gW
%INl@OXC?OoP&cG3A8?1@+VGH&aC.DtN?Un?Ga27n=DNYP)2XR;;hW^>-8&(gI"c>?`3G1Y$^X-jqF=#]"H\I&03&Vi3R&c9"B(@"
%ZI0SmFblMHV-F?/cYJ;h?hO#R(MIXLJ<M6/j%DmP."]:cSgC<Z(:7Y(:J=@k+Z`J@oUWX^9GL):7VY*C8`W/uV\$7E#$9%SLDCN0
%)Pk<u0Yt^>LT+/Nbg46<@H*eSgeF.=?)s&r7!+!5[O&gBL^`Qd`DRqT$H&EJM=cEO9_Pc;V$>*i+\&HnMahkH<Wn6^n4?aM$AenZ
%aO2216F@;R8g9gfhSlmSmd6Mgl/?AOFp,`AqKk>HOb@@`X5#,1b(HRD[A?KH+IB4X9JSZo&B5q+Ei4b>7*Hn`=;Rd[6HpiZMo`EE
%At`!'p$A8990u;O>RhdrHtf^5-h8u13it/@!ok8jErp_gl%=T:$@ek&d'H%iMGB%$(]h'=nnFo`ZN;':`(,(uUs/7bNR3Oojb(XT
%X>"&BSYWpjeeZFj@)gR__%dY0&r>4]>>c1Q<j)9"*fp*+EFEP2^P:jP@ijaMO>2MJ!GdWsIRZT[6pVrJ!NRt9p#$P>Hl6o<O0R1Y
%0Ak&)MAiP#=AdA%F>%V9:,!9(;LcL+2gu`>s.X*E0eM3Chb3%.E5+\OpCEDi$1!k9_4'a;DLbYZ0lrl[H'i>'Q4t-,%&p[G3(?19
%e#mHPLdO\A5>nVNdKp5MZ-9]GGTBZE%Y'@?Aq1PH;<M<jR>PtV85<dX<,-LUnEkg,kjSS,7*9'!1h^"giPfF<#r-*hjeoBE!'!7^
%'Y$G7'K"\Yi?^i<(Oh?d1C;R9'&#lW4`bdD7#H1J.L'3Tppkh+-Y&EmPt+]u]g^@ABm0df2b53l4)1(]rY4ZJ8if/rDN_li8;\d1
%$tO']LBmgj'?i3a8N>9Pb6m@.-d5;(_O>4VP@^d0=?GZG89obQ'sji@.TMY+)>eISFQ?QuU.U8_:8fk)CDE'\(:og;-Xd9,BEYt:
%;Ym)[J=IZ0Uga$W$JUo+5g]B5ZoZlK+Yh)1eW3\G1UBg@I<r&=<fV9BZ</fW&H)\M$mc49[kmQo&PrlR&f%a(CYfDcFk73Nh3>;e
%ji/l#*?`Sf,oV'SEY3GG>u(l@k6.-2Vu[#qXr,[0.MLYEJC_XaeIA>;VPJsM:g>Gs&k.aA1Zn2u4ND;hBjl`5e92+JLPZg8I3WlA
%KPVo-/eg+3s-0`_#.a*WfA[/cR;'$$9L6g/@mG,>V@MJjT0k+HF7M\I*,K,$9a$XU%RfDbOIe5;W05Uj,hQHJp4@<4!Q-gOO&(Pe
%_6^6cf-Yd)J3Eu(-O(E%EEbFdHV-Eec_tN`Z<e.46k(o3/?3gO-oE]ZOEAnc/&F$8(ZgOk;FVXO1fR"YL'&FAF@aQ\/<MS)N$)%.
%Hk&h2klc^V$XlaDMZXlYbdoJB\l`\_O_g6%-h4+iUbH:&m6I2+Of?[BWj-#]L9+jkX%eGN`Ztl.OK`bnQUa(hJ0&+^_2.(NQ(NXI
%X:s#91?B+["F^`uV;SE&?#;D2N(Y\Ko-hG-e6BkN.6k5_9dh"aW.l*44Q<T\O:!i1)Sre&6qQ[,ricI^+\in#b05Lk17M+.>Moe^
%7le=F/5l6]Usm7.V*C[dbY\Ch[,P%(^t9O,L1E7Sq's`$eE2PmZ/.iDTcb4WLd;>o"4@f"*bHE@o`rYgae`<XXDlJ4l39^k@jJOR
%TM,WY-!A"EDLngro".Bh/I;2-Fd)EP`IaD/a9d-U:fQLJlb/L4'ZK?L/@0,g`^?)<-X5aU`V%)O-.3)kad_E!6dd]b5qkt[I`td-
%K,A>gb-*8hV*rV;6"nsXjKE`<X,M)ghkFG:+V/+M5XLM`8HVPa%7O5pBZW8*%T3:cOnJu#&ZZ#!f7V$AKFJU9#[J<1E\IfH\j\M-
%+uHC*_8hZY(TUY/)$0AA8n=1Q;o4bJp89,9VIR8CU*Lk/E`'nO#9Sl>3C?#j1+pJn,.P&MM1q+L:E4goo$`(8=MZC_DZlT"TduuD
%3;'P]:;=Aa4E"O\8<kkPq^!3pe8gHNOu4^(`R?RO,^uT=V<+;cFg$q7!-*P9^gYm=&'>Qi-)ieAcS:AR65bp6$HW;;VQP1IDKC?@
%GA3Ya+LcAaLB`!'9Q"DMZB@4@Jd,9/<XGd:-qFF^@b5=YM._YWhlO<j&N_AfB31sacj)EAJ8_+>j<UfW?fBEu_QWY"oV\'%;AI]*
%5iTkn:qgGndJG$6I4`ZaN8PfcL9+63em9(!a$GD(>CdM>896.2$8Zc,P*rdDcWGUo\\!G!Kd[R])^q-8m2&!@Q\lXi/9W>kZD4g.
%b[/4:]Qd6ne2D2C$)q"q^*b?FO$YH$#sCHB94Z/]kJ/;EKh[SI<%B[Qnm2/u*[L=c1nnB!,/4KC66r%tl,JX#UM1l/pPAM9%=X0a
%E?Z`b:/H`TMZNH&R8EX9S;f]=`3C#s#fgejh'<f'JGi.uBrr6?1u:\L'0%O*P7ENQEWbhH`\nO66pZq)D#'$VF&d_44,/ht$@jj.
%pg?J\C(SqS5n$a1lX]KPA[7Q;1c"E.[6ap?WJN;d9n,q^R1"TjNKN9C6LW@6BJc"QkAnQ%c&]NY6op%*2j&;c.Fj7KgK7$1l-j$F
%W?WN!0<q$ef-`('6Yr;9)%1pE18+I]1T`W,+JqY]q7io!3fY$3<X<PVZBa-5aU2q/=[]H]Qg+\X,\_*/?3phaLbG5NjZ.li<.ln1
%Q:C.&`!T10<?Sk\Ua?V0*<o,#7XK]qL+3p)j9G2&[K7bT^&ZZ*1u_XcTK<69N:e'B&/UN12)\,o62!(?b+L_Vo>IFT@5posp]f0L
%MJ-prCP:R'$C@"+M"s7pJlmrS:m^6lNMp,kXs<-Ugrmj#ejs:V8be2i*=brRlCMm]<ie;uUk+1r7)R/n8UNf7*#[:Wj]l6BGXV^*
%/M(#TU^0Gm0JiFH`6;%:P&S=cV^$5<ea,jP3UG7P\8F!RY)=<'gHsPk_-sH;'cK\a#!-?tH@^=lEt;s+6)L:%F9HK<Zb^pQj%f2X
%K[m=e<?TRj0@3EH,f`_Q4p`5SPPK0.9#;":]'<Q?+4E)J(`MY%_tW?#;*lX\@6d&:'n0jD?Tp(%,J"ai2mAQD+tPNImY;c*7^c,C
%;;pq?LI<4hd!>i8KFoFPUI*)B;GdY!X^i7mUn!M)W0'I6k<cJo]4.djdED]7FE%ZM6fXsNRRE_MS0b:A;"nQ*>"0@@-**^pSeD!m
%!T</UI?1c$YeF7\=mr7^ibB_e9,9I^0Tbc<?u)uiaKGa^DPJ;hG2U)%j"re?ZGU8a/\flXWE8`mcP:Po'ZuNE$mc)r2hGJ\/-QIt
%T9a7:_>GE&TFf:(TmVL`U9[sd;&eS>KgL^==pCb9%t]%fFj)j?lu+pdjsk)V'gNuFY$S%aVA;uI:Pp#l"s+#RB10?*SV5^^YH4!-
%&`0AJ_'!r<PT&aL5TkU_os?GLQ**LZ,E]'`CRCV!<Y@'5A^GEjK2ZdtQ7N?&5BF/73G3H\ULKAD\kdi_\C0(D$0r;:<4iOITuCcC
%JAT6Lq.aBg6ILsDLO:Q$ej*A;8&dZn+VjA<:AeFT[2UOmU+:Lkif0"Z6kooM*M%F+flY*F7m]<N(*qQ`Y1D4`Rg!Df<QI`c]`l<_
%nZo<+B`q?o&C]".7lia%^;6:rF>b=bP!)YcGZqr/;1]DYBi$]fE(1IP*ZN^5]`sgt/,BF_;@?>($:HfH1re0oI;'p"aZT\>JQ,Ms
%fb@<RX69sGML^^87,l=)V92U$2SG6jY<]9"S5WSJBfQ_>)Cohc37]Hf&^3Tt]RjP6&;(X\(bA7V/"LCc<mk"S=JS/UlG@G+4>$eO
%T$1OmFc-ud?e-@n8oFk<V19?Nm+BDM'l08RjdNI&23e^S^6D*-mWgJtifctq2%oHU\b)jo?7L"5c_5iM2B2,iU)3eDfaA(:<b=jH
%*1[Tq#K46)6pPt;c"XP4\!8LlU0m+;S[+h!)Cu6E"c4Ik=]B1,i0]]Rih.!5*&`7!B\FY_!.YHNHDDj[KuS)kZr+!f<.:q$PU4ce
%Mo)I@8ZH>)C4a5h6(T;o1^Z-p:(tq(VN_W'f8,ADN)0V<&[3"4WAgrrI0(LIXWpa0.[D<^m5@NKO?g&`85^nd!_N_(K4d#(bLK9@
%!rip!,&#+9(-3+T;3k1$#KV>1f`C"4ZgB.a$+(As2uZ]#7Mt*,m#3'T1;*asCFh81Jd//>RXXHsn_$Lr[NG`=6!5NN'AhD>,!-],
%NbXK9q1(NS!XKf3U.q\U)GFj?6;rEj"tMFZl>G5UOZB5CnbGe&/@%HnORV$;fY!K`Q2pK_GDp"eZHS_#H'A`!8-#>&:4e=T$o=1n
%,DM'q6Lm<s_mgAkok5k)4*.m\JLdNi\6qYf6c+]B9iS4j+Cpk;jX07<YD?;h]QOo#ST^`EKg<O3Zq_MI;ooc+S-9lE?6&IJM)SI;
%XA4YPM,]1e@h5,]rfTmA(K$ie$'uHH[E,+Dm-CoLi&5f#H^ElWCdbFt$FBH+N2lLhXQ5?b4;!#Wc;5.n12b-4&F<es&J;1Bmhq"Q
%N(@^Pj6.+##mN0p:a6,\Vo9(.iV*`i)MO!.X\ubEjW`nP+h3a1rLkaPAPSFVET(!>Kr,'XGP1r*omU]JVMRqTga[7pfiI[0?jN^_
%#q.4;"kAdGX>-rB#ka)2V7n9e>T4I([R)e?Wn<]%6])F1K"Y^gK`MCF!F\_5&h'El(i'*WH-"c%<WUMl?,.k1IgOO]8Z=+_qTB<d
%1"f=@iYdO+-'G[OC'd0m`_;PABZAZi:KbHN10gU8@k;.W[)KfrrjfaqE,+nBneM^a2+C9A@Y72]YE?%_O5.u!+qqoR3+;eRbE3TS
%-*gqmd@q3]V&k,S(;3P["i6H>f75u]#mQ4EFNTd]RX0O.P#4_WaHD8)-=oX:69UWbSB!s*e%\eD6Q(Ld?@o`[Q#PYZ!FNjEfhP8i
%/gWf]Z<E%OJl7Rill1\a;op0"l'bBTJOh/JQ\=(Uf=KX5W'sKECM1>jD;_M)6=qL'GNa%:q80gDb\!^["&Oqc\tk`eb?M9=j9\Jl
%9p.Jh!KWa^APOVc>:e[/"?%nZ-nW5O;ui?uk6m!;RG#,:K6[lack^#B(?$'U#1-K;Pct3ZF+#S'M/^S0>t?A#iT`]!OY$Sq'M:.C
%*a5O2B"VA\#K9UbC$Jpp8fUap[*UY7DS>%qZ&ksS1KfrLb,@D'eg+obP.uVTV[`2q#Dc>o9YdRT\QGm7O_%0Z%qI+YXj@aX0AnFm
%2YAqS]T6&R%\BlbAI9a@QG[R_IW\hbfdZ.cBp@pfgHsR,)s21YNWgs?ZCZ'M+>DT.OWGd_9`nsdXAjuh_d[K2>kt<IM)t&rcsduW
%UQpn.ORc/NPZ0uJ+E1u4_JCk/4[afW>(_T7?)+<R,hi?BL[6[UoQqFmbt=2P#b2in5ta"%\SWlNQVfFbRR,7$3NC&3`!M<s?Lfnk
%:)u5e6)X*rjqUEil&XVi:8j_kr_HoTX;2$#b"Qp9<'4n0PE;:C&?U9UOqKLV5nb_]Z+,C&Y@H)'jbFDb9R^XA"#L'gI)sC[$ABa.
%gCSEKBO);A$/iqPb05U\&@HZmY/1bl]J.!<KR)P9FL;JN"H2&<P.naHXdMEC7[ZSI8<(\/*6Flf^D?.<M*G;!G$"_f\Bg]KWO^1Y
%U&g,7(+TQ%OoZD8PRGda,VMtgg8K':[c2a6*Sa3:$o=lm0p0?tU_]M%b9Ffugg,P!?3&Prjg/dW$L&g77N(-8pPlQeoViJ"V5of6
%]HAG<9F][O]m)8_nAA-ce_X=6,QnHFI:jho+c$[Z5+*i-H^.91rNV,XMrGUVrIuT#q"gdS?bf<rP[R"<A^6(BS2J?BN,TqROI6"r
%]Tdtm,<dF[aASeJ[#/#=Plc3)/XfF+_eL>i$JGm+WM*:9GSBbH[8NtshYX16UelC&X/DT?_B_]_@Q.t#GuW1WmtqU0R&[^_1eErI
%a+Qf=6L@#_U2XmJU2g%$4c-PI(:54",s^`TftA4TJ2Um1cbQ_YJ43"3Yf0]qNaG=&Z(oe7+5`Fd6%Sg4;lBCfN#2fE4=&*JdOHZ6
%iG]o?#8b=8R+k/XjBdEE'hR(j"B%iJ<EOW"qOf-9\`>Y>3iZ0A^i6(#!](6Qihsb>/e!'e*2'([9")-?Q!,CFigB4a)JZ(/2e4/o
%+ClaqG8lGYp\6"!Le7$'obmFi2H!rL=`t^1Ql*AEP>/BGHQWOFek/Ym4h*%'YDL&[SQJ>MmI1``cr*3P[=kV0.EbCi$^/a`E0O\;
%'a0Ll)IVJTPP(cKc3_M"fZU8`\MOF=DWs>'O:!oZ<$q]tQVK5'Q=P4#3+PT&5(^aDYmuT<WmF%#?RA*=ciS=,d@k!M7Q4M)EU#?2
%GQ]2C+-&F/VjVQr7.m!W:GP&tYUJ-`E+)B(CK)Y^,XNQ0"1)l>UeK1B9\15])@3Xu0]5LlKn,.#k8#C=X*'W1Vs/hT9XM-XfYdV;
%S2S)/6U_!@+O@/iNuK;%:/YbZ+I8FfNN?l$8+`-Md5l(9_1iN?8B^-h!&'(C5VWa"/*;[DT+_^bVNh`aXesX;[dY]p.QU`i9PWk8
%abTYLUf+Tubp='EQ%ZU(`=[Pl@,[Y4-.8;U-61h=X:0Vj8Zj[M-n#[RE^n,XH2ABJZ$N#I]*.F:]U/!gi!fgtka-LP5pK.T$H^mB
%K$Y@9:.F6Ui-bs,(kT"dRRR:G`4/Q>,&61?k^4C)&&!XP>Oi^m-"D]T=n9=!$T&8N,:s3TA`>$/+UaV;M2WX8Ih_8tr/\qC26&""
%1U(,R7Zq\g,j5X#9!U;&RQDglC_TU8k6#c;=:BlDFJCO8r*8(BNMN=Xi5A+rs!Zn_?:'Y`0Ob%CJ=c?JgD0Ci(fXpN7=mN;U+q>#
%P[TWC!k7toE:I^Ae(d*YWO#bG!FIl7nl=*2eYNs_$qp:Q035$69I6SBY#3<5:<OM"UrKWh@+Xu7bFO4f=D#i*Y[R_iXJm7:M]kQC
%B%jYo^Is8]O@HsLPU51Mn\GY*f.4S2o/!>C)4*\:ahXMbN9YCimseHsj_hYVC\J,=2&G69DT-i+&5n":8FdTk=-@FZ[=`r^R%>O`
%k_V2m..Rr,BW=-L:OB-Y?'QPY+GGP$G=-gAjNJ2t[d`<#UF+X%VoOFPC6`D-B?.ohS!q]fhBen`\-Y0%Uc6s";FDsqE)in-/Fcj/
%L`)8=U#bSlb]liXM:YG2nAL[WH7D&T3_%uIPR>abF>FRW]_X(2#`m#ieh@[P!hj53;iQ%kcul;j:`;HLBou%QB#16*h0(pf*fMN)
%fq&;,1X_E0El`febEi;g9;0/EpDA3r`XI)hbDRhN*asM;74J.Y]G1MCHUN>g[DX"[@D@`EaGi@Y*NIi8S2THBP@F#XWUIpJ%9BmR
%Hq1)e2\Y=83m<iYM%MnFKtt2L]Q]$(oFoff4H^,]<8K\=]9l@b&au8V*/IjhL%im.*&]YPL%ilcIb=O8_L%W>JH&[(4(q+s?B84W
%P*P[)8pZi*e2(.N44JV=Ht^TGQ`ub]:TT4n6taC(7euIk91$>IR-kGc$C!MN[Q@`F=tm5sZ9&\WBu<*0(ou;._^\o8TM^@a\5M-k
%>E`rD`,sV)O:Yj?6?Hj6AN1bEh&1khiHd.FG6SXqRg)Q1q*M5d*@%FC1`0(.;4-c2*Cq!F9QpT\OQfNY[dBLNpi5BZ/dupC,Y@5A
%;r&=AI"D^"IurFj=Ik03Y*Y*gmR0_[G[\3o>:Am=Cj-(C_7Wt_g$Tst$K=BrB4+:ll[-3)80e:H7!FuY$V;)8FE`H^pT9q3h*ES+
%6\XsR!;+(Gf^mo:Enuq*DTI$7i;Z4?^@L(\AVmf7Q1#4H8Os()e(k&oacjlLd+n^L9#r^phjkpO(4#\0I!:+/&i)YI];'liW,-\Q
%+]GYdCj,km,&h:n]/'GB@f1:8G@t%;bIb11h&2@k^e%bomL66T8,s[Zh&5cNRaBO>R0(3%l0]Zcb(&$Lh4Y7H3:_djNi68p-QKGJ
%));^h`>#aBU:ZQ+Y-?`e7Kcs8A%"IP=cnPEamKR?L<7!*FE\#$'&J(*G6c>NR0]Y$,6V9k@S_2<kW%)HNp5s?M<=mm?0L^8,M&HS
%d+oT%QTEUEh&3+Z/=#W5&hi[(+l/\8#uh6ph&U"Nekard:gN.0MS0imIHK?e[Q?f!P/h@VG"4q-;GARo*O-=s/1GCZ,-b`HG:-i\
%e<TI)Dl_7@a\-,8(TKnS[\1#E]">Z]L"oFL3Y7hT,>uL2R</cE5%_Fe(o*F_mERE<5p@[f]>Mk">gXe)47"]<2-74JeA"P&\?apn
%ia]e=)R8*A'3SSpL$]@P*"l'tCj21_W9D9<GCYB&?*ZWJ*O$BKhH\_$"AH+jZJ?*d;V:TJ^'bKiih7o>GD6ho+\q7hN-":-.s,us
%R',\"\i[f-(tuSh\iZR)$,Jp$]-E+L_6ZUQGCX38SF8dg-PAODkjJ;>Np,m2"<i/HL$fFaD%[F2FEc*>K%<#X]7XQ.VN!od#JEVW
%R5*M<:+nBJ<Ot7Z%+2NLl0\tR5sq*fh&3dc'[2A(E&^EkQo1VMK2aV.$Jukr@jn;Fh;OkJ3ouat%d0>^KbhBaj)+=t.c6feb#LAI
%(,@.GMP94Fj%Qc*X74p_!a7Np_KQ7X:[Y^7GDDqsQMZL,c6.>'9P0"I%VCc3<b11$1GHY9rj:k#6SP9X4kgur"N6id,eLsRS/G=\
%lOF_^Uo=BJG&'1=JJg9"$%5h.'A\3?`98%hk70CUD!co<NpFs/T&gFdJN#a4>muFbDFec&PW=u8</*Ka]TW2l&DY*(A-MU]h[UeC
%eqFod44A^u!T(m0]cG$b\?GOJO;RPJ(OA0lPYF$0[tE?':0$NF$pk4d^+T&$&."^"Lu&UT_AHrp[tEL&@aIGZ8"2u9EI)dii%6.l
%X-24k&pc4lG&,_)gH6_L>sO1W%SaGf[iMPZ;A*"W4.)GQWn^6N9lV8;`F08\7jJ<_PnS^cHepdY-*+k;"EerXgQh(A(57,?>ZFe@
%N'&']j.?r`bn",HJa5O0Xe5>PV#+=\-OGrh($_4SLpL_28lTCa926,%U7q+0,Y+0,N0ru<gGIirZOAr"dhCIJdMFrT9Par\Zf>Io
%M!\#/-Bq5YfFG?*E(ie@'&+#rR33j!CBoD7O:6F%9W,gdQ._2:d&-!61PJ8Eb\Mu0-Ab`6[UYn<L]tDnPE09`mYKPVKlo-FT%QjM
%R["O^YV^?BB/k3ZrZIbo[DR^NcELm>-7Z9k@<euHnCe`aTc!E$`"6,+9RI]Ig>P?Ojd"F-(C22F0"c@^F9aEnGjSntH!pBu)BqNg
%''CUSG)"*GZ)>")AH<IJdb4_$2c#*rd+XnNj^2`h$kX9/Y,AZ`U!Y..&Zm(loR0\B4%OBfD,4pPM#]&bB^K22&<N^9g-MG:2G.at
%Lk!pNEQnSmb(HD7g)3B-N1J>L_1'ieMpg<F@YDNjC$g^^Mn'nXg)2TU[0:Xd6UL(7@)o?ln<G]!?Wlcp.oD+&=m]TuYeXpGCM*oS
%h6fDJSH/qG;=%4ji'QE\^>#RJRRYEN.]XR8!f']Vm0muC><?9$j%IM8;crF#oaj?fYhBt(e=$]C*I91a/VV\LctaN))Nrf?/<%K#
%e;ia*=E]tZNflkM(-SXfWC5a"e.+Ed(B7B44*h'8P:!)KY_C%r>Y+7$N-0]AHV/$c8.XTQ3:.j]-M3OG`fc.YB='Gt?o;B0BP3-/
%*IZ7IL[R1$BmW<2FL2Vq\KR^g`RN+cd>ehPTbg0[8ikj))!t^3-`])coJ7@Am>:`sA@-uV+m;O4B:O;D/#Ad;*AOm[7[/(N!K%_?
%8ip9B=e8\TmJ%)d+ig*r#5O*%YF1M-]Yc2YS>4u<dpfg!V&_/nOuZGhm>Q7PG?HB^$m@[,R8DVrHBV-o!N@(t[0Ok3R+)UTTh$`A
%G0gKA.2P*LI%X)b>B<2J#I0#MQ.?EX@6Q?OFp)Ag^h(H"LT`&=Gi?%ta&iL0k-a7BaD:VSs'Sr@8hZ1pg7^)"kDa0B0E@YVU6!aV
%;+2+RYL)!k:h&-G>!#9efQ99YS[]/V;EGp0$qcONmBG(H?(n';K\'ilnVG[)LDoc:.]FFOB;?FtUiqK\][9JFm=;K\aG!_em4c8k
%ZoB8;1Mri-/$*phW?g45<]bQr80C$,[DQ&rrLMBj!Q@<oEJ<%?L]hO]&DNVKE0upCN[P+A\lE3$fGhO2DG4jO]-L8p(1KB#qh1WD
%&DN=cJhVHp@QW.M0H$r'gYilm:U_!H4$!GbJ5qEma@?iLNfGE(Hn,Yd&[<>b/k_kM6>QmN%`tFpYoRWOaZ)I.[R2?*0Ai&I%dp84
%OQTW"m4=0.2<*."gVNbTs)d5-6d[pi.Oq\DGpHS_/<5PR+;U#\@C@tF;q(Y>A;Uu!VJX5(foCfkpTA/;1Q7%"fJD8"K(Hg!)_p*(
%'9%`ib%sQT#HI)%ZQ5`YaZNmsmH>=]+/gmJ&UqCCgsCq=!B6c"qdj3EK7rGJQ.\pTk3;ja1>>rt7pl=]foEiXVumtpgCYgLB[*KC
%+;d.gDIL!6jHCX/`,%r$O4^j'ZQ4t[\Sam\FsnI(Y%`5p4!Fq6XihD(E.gX#V`/(n,6AJI!t2FUEP>!#>+"]5A0fD1RI*P_5VCGN
%D9#g#ZEY3`4+'O4)T*`-*UDNBgJcj8YmWbULt[mE,b1JnD'tLtp!e0_WCVcnG(fDui)->Z,79iXFq(G<+AS`J;eA+%T*s+\@CB[.
%OPJZHb]]?_d?TF=:8gTZf/)1?)=4mgYoV9G,P`AgYoR2okEOR.l1;207_EoG7\fcXGjPdG9m:t.[Nj68Vd[M[7hf$6N#$"e3f>L7
%FfkMY8f$lX0\c,p=U=LVdCbWGc%#&YmGn>knen:4,Fo:-\dGhc8IChc4efA0C.D]p(<dqRcE]3+amFa&X)eqp4+O!.`hnpR$.W'<
%TXUEe"`Epf]QXf*J\648*RWURCQ#kYoQE!gfZHg)#JK?T@S2q\7M6ml[hX'J;AdgT0C3j-+sNKBLu+/n(6VLloQDM:8Ym,u;8s[1
%,pR^thPE=,gG)tQ=+B$-8oM2qe,(6:7nR]d5NGW9Im<rlp\g^:TBkqp#S;C`jjiJE\OSTh;bs!`r:oX!r&KCZq=p^<?h<0<r7gc7
%gG^d$>G$:gp<-).[d';GI,(ees7i@$p"_8CJ+WHpO3Hn\fD)BYqRk@&^Z'23-i`GGZL!pC?i>-?TDu)t4jUn?m[K8%HIBYXf"sh"
%<W<9XMKS10..V\/DjBA7cUMd5^Koj<nhKr'W#j%sXq$K+eA;&.3=[Ia;!l[24p^#,"pP:L!TFR\\FRYiGFrgL')h#B=HT@3r-%Xn
%N=eDQj<mr6IkpdH]qiB22Pot=DdbEbL:=+/_ct3sB%Pp<jRSMLl^Go\BY5POXV<R(V3lJ1'\p0;7((*"@ZfiSYoL[=TZ$k5l!i9h
%X=ZQhddfc-TLShtrE!\L5XUdjS:5<gV5V%n9,B^J!]d;4\E`sFgA"^YECQK.UW#PYB$6V\`$6Vd;!%N_6',r13Eh/TcDO=Yl3>2'
%7RGVX,7@41UWNhZ]Cmsc.L4Qh7cjJ$THNQTcU6>VnRRR-M1j*dO`:4Q^&2.XPGI\fm:0+u+(N5-l/a[*gs7Q)8Y+2Z^ThbU0ibs]
%0qhZeUXe5E92j06E[T6?I!I)OZ@%ViB_B&9g!`OU<W'T.rpQ2?-a1geY:,,0=Lm\YhgRhXk-br?;8pPKg92\](\"@%37oA=:Peot
%s1P[kG'"_'k[OMh(L)?ZjY&jtkW`%'glM<Q)Y%<b&pL]3UOhc9@n"ltGH-6q1-2<D(3t>>s!MV)=FRIM<f1S=[ZcBT[C0)LWGR/1
%[c=er,Z"Gi++I7,RDEq>n)(QY7VcBk?0uS8A,j#nRQ$1Y^3)D\'Z'[c@HpjTX,<T5>t+'TLIM](rh!MVjeL?,"b7%GCqGK][-bg@
%=DPOiqmM89q"O<N\*B(LYtRk:s7kurs5hSi(V-N+5Phbd)5d/+hu36$QWMMZpuen^rf2L)D"Yn7?X6q!IsdDDnG<'<[l7r<BPqJC
%rq^1%bj!=BMs&])EZMBb:]KhQVZ00af?LM&chNQnjG!.XKDWUVTq>+5hWe#mcd%#fH*cTmkYsa3^S!^a`uT;8:1sPdUEBNkmk4N!
%UC4j)Xp\;qr7BWdc10?=bNJ[7O0?!Opn1,1\3p7EH%,?s7c-[2n#D`G[a$PhcYm.8k`S-=X3Q+lDr6%nnbV@hpZD0%SNiao+$B29
%H!e4&3jC\[_X4,f_o\CS5@:&]pY3$tdlI;Fo),X;qW@2<&%?cNqWuJ]M`D-Z4LhH[f\?:Dq=`??V`,tfT?Yb7_hWFr7;jjM1-)t[
%F7QA9]2]g-8V\q%^:cPA3SgP:#Mj[CkPfXR0l+'a:X;uugNm8aeUuV;YHu""2JIdSJ+l(lA;\+7H@('dp6Y*/f.YHGB,gr=F,kdo
%I91LQQeV/Q\0#m<*SEL%K5Or-5.a"h\[nB[Qi>AQn!BqRY?kSL3PUuk>or2[BL^kX!M=g\p1!^JEg>CkHdHeu>HW"i<GpPkc7`80
%k%Mb_G.G`^_bG$gC-B(rgl(K^r!=0H?Cei6mW-KVDRmqBGIcff\(p(W(o7..h;t6\7rXref82Z*ccoZrLNCp)55Y0BinKeIc`_e#
%6<E:4kOn9U*;hUq"E/1LIrY2R\Rn(PYVLupn#B_Z>eJm9;Z4V)gFfUY^RVrboB,u3np#NMp=jJVZ.tqs3MW27n;s*fLH.lSo,XE"
%o<u]rCTjcT0A`5T]ONl?n6Z-PI65MU4sRJqc.hP#-`:V7St932EQF(\hplbZJ;K=<`RClGX6Y96jlQ45f]`82F^?0O\O@hBVJa%l
%I<PJ;gMQiM&A>M.Ci4@kmD[3?e#UYN2^ar5HF<a9Sb91Shn_PUoC^Yqfpt1Vs5ZEu*;NLf1c*/8IqB,3s6T5m+(k1Th`VZchIOk)
%;=)`Nq"j:Ro&eUf&(_mFmPDT-Xnk`;f7Po+Afj-^ItZ\+_sp%5"SR2A*SR(IDGcFBdf;04[@cStQCi?1=(WFh5AbIlN;DK,g0jp%
%c09l8ms3R:cVYe.Y0W6N'-t?1$,?4IilUlhc-'1$2fg>.T[(Q8o:)pZcF;XAQc&>I0>Vl&o\N$!luGGmH?T8I)+O0>Xe#8,m;^Fl
%K7:e&jg/LnCj)PtkfpiRct6"oSgX>]+@R73EMYER]t1d7^-4XUT,D(La.C=^Nb/uK?_9GFIlh;RQ3VV\f6f,P=jPDI:?I4q&*dab
%@q#op-9Gk&h6[**0RNEVqXr%4MlRq4S@Eoj%=)2nCf+McWk9BO);q#WT1+&(5$+GuOA#EUFOgsY@Rc-Z^NWMNnPC2&J?rWr9uF\`
%N+S)qFeI:`5KpAP%qX59aLPVlqsb[K7W&1^DQ#o_GRb^d?sA*'E.Q99^"@2L`M5C^BC1ZVcPlUf`j.Xm'6?o]m\6h,dYVmSKEIj\
%4Lr*e]D2*dip:cY^Ld?k]B\;:1EqNsn)*t;G'r"kEW5+n`Q@AtX0^!=^Ri)%a<RTcQ2dr:rb+cN]R<QNa#S<=H#TsPaPNOa1Ybe3
%UXieCjQ:'-it(.\0P=u-`M.g=U=m;qCNfDU^Wi4*IGa=2MFe<kmph+Pj'Yj=SBa7noTU4"<S(<Uk%%B[Z!GW9N2aJ#RWAsEmB-uE
%2G7lM!sU.%*8dq^\#ZZ:S6qkYbfCql4h3QNld_M)i5)0M>@TJOkP6+9+F.^'h7,Z/*U*42S32:MIWPM[SB:";h,UXR/q,hVFiFRG
%6g*UmHKO`C:[Y5U04q(X^,Wm;R$[)aZ+J:d?<tiZEo;Isqi8U\d@qRB]W5qpYi:Dn.kgpch71.Rj6(W4ZT,KXIl2"JrqK;sn-FQt
%StmYGAM5ZLViN8?APQkJ`I2aAR4,D=@Ga#`US\G^I8$UgEr`n>>a4&+QQL?&b+'Jp-qDU7kG$0S/Is*Cj\["nZZa@fkG"J1VHf?G
%SQTu1Q<][3j0X)r\L?SBa@2Mn7/$V%>&mL6oXZ_hAe)eS54i*E=`^k:>Q(hhU7=EE>a.7>3L!g!T2D%Ebc.!fQZpdp]:@'^#1&d(
%iO-nJi?<(Yc9seY=7#Jc*Yj._kPt8S(W98Jrgl8@LNn9mnb=+3da)D*a*q^OT:II_]:mG"HL3>2/M;?d`Xj\ID:*-W?98G+p8@4-
%=j4:m>h`o!G(rGsBXL:0h+aq%`nFn'/R!#=C6(fa%3n3smi]?XDaQ9i#_$P[p7MJ;b;Qs/2JSRq1h-fWD7",Sd@(Bd.a5t'PYQ]a
%.j8p%m&hnF%tc5YX2(pbs*8eXou5%Vhs[6#ESo@<q;q4S([%.>\LL+;:p82?DSDJA:GI*;=&]'RYYa2h"rbYOh)Ql7'JjBR(,1sn
%p$*-@Tj45']%T4A$Q.#mJ>(b11u0Ypb&5_cb'[fjPmR9$RoTIfcgm_"s*g:6@J)<30"\`Hg]d4Zhb9fc79'%D>]b1RT0%sEr*Y]_
%kB5rT9]P$nl.GaTJ*6%ChUe!1*V+O_*poiaj6G1\X#Khqrmfb?HKmHSZX#&4VknSBW<Ho/M11o"@t*.jL7.#)r+TA/C"*C&6dp<M
%+1A"$NV_T,HQKWgF4:G9.(\\/:<2%Brna9,-eIN?041:+bW4r!p5FAAnARn;8024_if8)l<;J23IS9T_M>uG?Q_X?E%Y+fYD(RF2
%ha<5"5"[Gd-2tNi6VI@O5pg?'s"<j!?,qG/4X'rDS'P\MP"X#C:L-85mat]P^.Z[oM>?#]/tHF9T"fO?p<D:>X35>->g?J^CVSMi
%eNJ-:Hoi#*IJ!07HM-UW`Pp@\[s.6!r5Y-_q10okJ/+X&]BKiLAi7e/j_q>0jEnu'GoJu^kIPTh:KlT2O6BE/h4qqV[Wok/&)"jj
%eI,[LiZVMgA;c4ZXQa>aY_VZo'8ujr+0X#9/jIN[in7u?+?ohqlEd,/Y:e+<5.a"*rn5ipalV*`p>S<k"m!r;Ds#_ArnC+re)8oM
%*PuM[T2,CKr70PkD>\dVm8]b5Z('m6F#kM:6(@3t2rtFXBKT5$G*'m2/#,W$HSCBL@BZ44DdK',Au"G`_(#\5PTDMgeS3@ui.t\=
%a^/m9rRsL7o6%KRn'o2Q-]@"rEP*i_Qc8L#3*mB@bMmbL*&"cB]5Y*4j$gX8oY2r;QT`'6/rl:13*pd+59<Ulce^XC^=<V;6$n^]
%FGJb#O2PP/W-rc$'+aLdg8/CBCp8aV!!*J[`.%>ehn^Z%!+tRZfYh90^6kNp\,YXNUICW]35>:cjF"#CI5r;A=J7=%j*o4i^)rAr
%!JtO)T%a'_nW#Qdj_W`FRTg>j*Z"n,*ThK1?WtgCG-t".(n@==?_0BpqILhLH#-LV1Jk!8Wr0Ob#nF\>I0NR0o5-O1PfWLCh(>`h
%I@.jZb(o\;HgJH>\pEo+c.NPL_tD^SR4A$ZpAA"Yj+hjaGb<Z;S<neTS!aKiK,i14/2sq'\=jelr6+IXo]=c=bb=mkY"lVW-Ht]!
%*#!(B(=]ulbd!jbBL7+a=+B8nCnG([T?g,VeE;#Da&p-C+.42q/q/`]]$hY3+!WoM5K93W/:NPk^$-TlSmVC4M]ZHdAnLRC/:NN[
%nRHq`f1k&IDGFf?.6[D%g$(Yt^?d2KnRr-0a:BY:cMi3>p>9f7/l1XIS<N,[e[O!F:4u+@E-(jKeQ8Y--U5p,U)lM2X%p@<509F9
%n`A<sS.Z)&h5q]uc0kq`i7jamS'u6"[ZS0(ci*8/@b,X\T&/WNp"7go@g3j?Eu;R"^3VZW>2`u'lcBPnPFJU5g>m!m]m,cT8IJYK
%eda9>8ImRR$Wth=(Yp-_--`u.gacFRm[QLcJIQoRa3WZ"?N9Ng,*2D*3X'/!U&0</?9h<Cfp>Rpg+H[=G:W5f*2R^=)369+CJJO9
%4PadJ(RAU84n-23gH(+Rm+!%!hf#Rqs+!4)bu+(WSaeXaWZR?bIR\5#_0P'ZDS$Z8^A'p1oYp:I5!ADIgcW!KguapWgiAlgDKG\p
%'j>KrbAD.-c+W^,2rbtNpht40E!VcQgcf!*Ak^^j?07I&WoZ:NYDQc!c7RYYjZ9lCf=CCLY&dC_,Il+Flbmh?gP7<8XR1'g=1\FA
%\pFA9ouW`qj0@M)*ZMH(N(_IuaKYQRl-'5*"/19-G[-(/+*58`3'^`**Hpl@.'NLKaOlJ2n0/fl6:LgU5?s_Krq+l96s$Qf:=!j-
%rRY3/l8LZ:?HdC&l>sR@G;C,'%qZp.m*DAAUH`8I*TSiA3t[PDeG6nnS-LiG#G]i+&ErZKj3he*ShEn8.%agOP0\L#/ReL6>qNS>
%$rl,UT$/s27SiKQ=22D<Kg]mRFQZHVFbU>e2uURqqDTX_jNZHF(FQ+nF/NmQpi:ra:#22]:O=eYdX9'j8+,l,1D#>e0(Rn3\q^O:
%md(3u1XsOgs.$iM4"EKnTA3FrW2+Wfan&?kdhh2S&Y@7*0)tGb5D2YeR3$qbC!A5q_.";K:tOQ\U%_rrK,L#3dd]ESOk,#fZi83/
%oZPkcl(>/_0$it8_>Yg?;7%0/%qlY/2UT3faLAa9&)&GC,B*LOT<V%\nt(3t+5@-*SDEWq2)>a5TB9sWT6@_Ok4E(d>^t6.^YaIl
%"qEHSKA5]r_,&gW)>1i4qCHnSq5s8e\GLb.Sm7oF]R4i[Mg"'PcGtk7S$,W5[pC5E_f:_Pg2]1@a#r_ciAbHkpAJs#YG_*n>eK)+
%GW?`;J'EDGBB(.]O;G4=I5Q<l7`catHp$Uo*9<!%>SPtS).*#;gm!F"2D:S=$S]s09QVplC";Es2Z9UIDP'5oER*X1#7j*FmetQ+
%Qi-/.n&XKL7.(!=,W@Xa#3E!;E47d<MlZ0Y^8kc@XX5*U_=q%T4s%E^DO5_6i%[!Y49gn+-St0_H]O?[E*fE4FQ]^^W?-5L]DmCI
%-LP9;4j'UE!5XggQXGSF!bU\8%u*XR-it\"0K4?^'$M>=oRjNKLD)P?Rde[IdD6dOO6L&k>5Ra,g%Cu`Y91iRF,3+j]:.^D^H),K
%ip>RcqB&4'mqT<,&Wb,Sp#ifNVr&Ji)EDP6c"^BnLU55(EgY%o/B[=@<n["<P='T65tUS'Y"p\-]U6U4Y_R#nDH>$=)ejN!"^)fe
%]3'&.9tRg/(Y?^)fjW%Xk8+rX%Hi/kl]P`Q0I`:uoEBFa62Hqos33CXs69*",t"CX5kP#A=-m:W<erL&7-2I%5Fu3ls5i:%^3j5?
%iBMegl`2,10(QL4.DP^jp$D%abo],e<hFm>;7$,eQ]F@W>Q1g/I>.\Nfg"BmMSK+^r29S;Z<pY0=oEL9TDu)t4jUnBm[K8%HIBg1
%3D(ok<>S=inm)O%=-Vm_fuCXT4:@]CEq42K;mar3Kt]Y6nDl$&kiK'4Em_@s;7"BoB)?Kp6FIGg47Y+JUPD5'esdZc8)H"^pE)M2
%G0mYiEHq?M8&mi%!9HGc0<p[(q>2K#r;#Wul]^MpfsY,<I.TX;NgdsEeukGd(R"/:19QXbe+c[N6iQsB:N$.ETCNQOmn_)5oF&7U
%k:a(,OgiW=Nq65_^_[t4F*dj&VDpftg;Gq\&59k]9Ts9ti?Mgm7g'p&0&[=HCg-`[g=GHTI<RH7p!h'-]db8`HBSPR)8oKE]LaQ3
%Kk82pQ4Zo8`&eCLW7a;Ch51eQ>DT.>l>6%OLRhRdFs%cQ_a*(.n=\IKCE(8:\+"$(oG>tr14sS`1(I%D#'*l9rG,nZrE)&T7Q]gq
%Z_m(!D&-Kj5#1KaV":7Jgs#!@&CYs3"6!dndeX1ZRN6KeI2nhr)4tPHZN'7Z++Np,ffS(Ss7iA!qW&0fn,?h'N-adt<F5J'g@!%o
%f]G*HgkF$r\i*cBAFc)GCZA9t+l[9AHpET##i1V;.85E>:`K%IkOKg[_+>\`PDZO/qcd-`)<j!,*#Y6ccPhaJ^joR3P]n!H)uc6!
%-\Qb?]DU*g\3j`C2CkR;42.gYMHOfO[QR@j>L\WR*q-\A7CI$[e&`@7l)<u;.CSXmIqk(mc)O)7Ec!:*.;i%:dJkBU):N[3\h=$Z
%aQ42C)K[ENAk``'GSJji:L_OdFs[_f1e6-Or*g>"]$siQb5@=uXK9QC9WRXQC+re+#&&JC*js;gc+ctU;l#d.#,?'0esXRVn,M8)
%g$]AqE<V,'gk;Ge7hW#-HMm4K]f`d!1O=IBCd-,BlE;:>D<)okna!hPb,:6N/^iaWfL3gP2oN?oF@54k!Q>j,k/+?P31[QC6iP(P
%J,%LW-L:4^3Gu,:o@@['6ApQI:=a%iSsC,Zg1826]D?JQ?,=L:OR"^;9+?Y_N^4+G+)ZIY?06!):aU4L-1j-*g#kT]4f#\@n%Rir
%2O)BTBg*3@:ZIT349-LGEosM6jQS`A\/b-d0\_mDguiP/UqFQ=kAkob.m/ltK1>Fo-lS`XO=)14@EGRHc'k@A%@/l'p%X3)8)30r
%_A/[*cX`mC,S*W#<cR_L]DQEqjo.d%jU\]"XRPt3n+#c=k"0A%L->!XY4:n(L&]?jq/14/^4#t'pPiA80Paaf\,sFYI(jpuo&TJs
%l4kriJ&Gj$TYKB1Gh@ji]BL_HgGCU25F0i_S2:#p?!]j<R.p18F/M0fQ@\mi>fQa,g=7R/:c)pYLScqXr,CM:?"tes7u_;/g9c-r
%L-T1uQ#.rH/tYJM[i!OODmh"`..1oCe@+2L^<9^)LfKm\dDgMr1L9#MKt4s=%d&79`cPeLAR,q4PDAbPlW3%SDiUnnX,U'JNd]N"
%hjLY5no9M7QOiaOY'H;A%K:RWmIJ;#-uA,0eht"]fedY-18!384mO+2AF7Cal=*eOq4,=)ZWQN1U^2qb,BNg]e/8`8-gMLL9c[=8
%HbT/tk$,)ID.fOASAu8JCT#<,HQtc&h0QfV_Cqqip4\RhD!>j=*cd]q,C,*q"I/"tMqg6YH/Hn*3@t4,h@8B<lk\>$s/3cBXD+W@
%-d/AijnA;B.B`5rB[j8U]GYK15NgW?nQh;J0Iq453o8Ri?4-MKH#lY,GdC`TjGD!:Wl]G>^diBlr;#UAgK39;h=UM%<O^h"Ib`tq
%L+=jFQ!J1qp:P*5^?OVfq1bCM;cr'D[,n&X2Qb.^[:Wc?Xrr#FqK4TULN^'(r,$Im2Rg"eNlsgD?iNm3'&DT@53.A7HB^l8eBufj
%E+r"`nJK?lE*NY8Cm,C`\_PaJZhj=hlKWu`6hpNUT4\sIT3]2k41u6`f`+.GI"&><6>UNioTk=1qW-f$m/$:BZQINNgg"n_r`39V
%q5nY%YB0O>9]T+LoUE1N$`O0D5ED8s^:cKBJF,J?J%7amrdW7CeRn1E$\9(@I5?+J1[&4pkRq=W^Uu^ZY!1`Ia$G1E;gkt^7909!
%F&H;$S%O]0IJ`1)FE&ue%`ZK(\2Y<i1^>8oAlAqEguMk%>9&UlO;s4.MhA8PDiad90Xea.K<\EH+#`b<3uGjt#GW4t)"7I\%1^B0
%mhH(;.LsIts5i*"N(s5P*_*c\_^N-5lsX_Bh0TuEG8Cd"44hA0)T[^*0NN*t>5.["=?V(]i*fSTTC"Q:PRb^_3uHd##NP1&*m]6d
%rJRAZLRP=7('ilJ3#L[&#@h!YN/N>YSfNdF,h#+ONg?pP0J?GT?O[2L7cT456S#(XaRM6=^9_gcg^bAe:"KMjYbg@!8OnatfGAPo
%hW`j9>NGUEa@FmUSR.oA-E,bN=e:0cDSJYWn@Z3302JH]$1%T5\tSZjE'BYZg4&iGE\^`kPQ_R6;o`935%e-ONi0kf,^)$ld'iNB
%XDVn8oR<7<mRiI4-\n&3MPKUc-5PEgXk4QV6QSui2==jg:m=JUD64e8q4MZLn$>,re)@MfWW$3Ua(u/Nnbb`qmet$(Q9m(M<!PBn
%)[HZB<1XUuDt:VAGoFcq[tnU]#JQ%c#ZEW4oe:/"*m])Zfi42ODQdi=aB^0N\1L&NY9/C1/bW/p\*Q_ReV.p7"*rZ?`m.ku!*XYN
%[Y[&oa_ZXCT..tdDn#qV0\]1-R,"&h).@<?.6#t@k&R'R#[akiiE.pB^@1phHcTD+7phbtPAU#SgJ$qQ(nV<V]#erq0mSaqE0KIc
%Mp:tuXM*h\HEXrd:9en[_A?STOUZR@Cjt#\*UNU]1nWChnVi4-`D&,D=GQi5&+nLAS6'Q->ZD7E[./V';7=cR-D'JDo:=V[n"3*4
%5`aPE2,t<$Mp0m'<qfEXop>(uEpr3+mb@!f8U#S`&KQ"sGB/'tQE:<FkjW!N<H7+fVbqH\1FulR9l+qOA-9Df85e'>.WE,f%?%<s
%Juo!"E_?M]@<*?!("U?u3fWHgm%4K:e7he&7<.E0gtJL!ZJmXF.q).=QA;c*8To'eF4LP7,&f*>4>3J`J827TLmGh@MONiU>J>+E
%RO5nZ2g&P76Nu/N.dmT4(ATDR,-p?O,##Q?@]))#Vb]?T2-5=jdYG0klI:R4WlsY#@m\RU=`m0\"pX8+Bn)c@oYr*SRB-ni$Tjc:
%X:gHZ1klA>VZ:Ohe"W*rF(NN=X01INkW1j0Z:Um98_3f:Q@m6'40;.;;KG/GK3N3JBE-m:QI&#S[[6d-LDukq3Es?696anP:FtI]
%%kTp&2h`WrVXR"+&tZ$N$\o:bE1=`YY'ZQ*7,2'm@Z.;e?/^W>_?BC7i<`T''7Nl)@eP/0B>8X/So>2RSnPan*1eig_@qAsG_0Pm
%Nl)Op0&_XH1H[B5aEnFn`"FFgmt_WZCbgh\`'-<"V8bcOHUiGb?4r)jk_9%bhg7K_]tB4!5![LI!K)41:kVOD$D%Z!J78g]gi!BR
%DA/lc?CQN]c0E@/i$nq`+'HF.$M)]qeqb3U-9'r5nlQm7A2s=4,M;]q>a+>Z[]N8>c'QbEAjd0j*1n=2QeCn2%b\^5bDc`R%NT[O
%1#^YiF(W7MNcGW8>UG>:fu@^F_Ru:1^5<XmXd;PfVis1(UXV<b+`M27G-I*dZTYbm,^ES-br-3IJ57]1mTJe1od)$GgYs-\M&5K*
%OG.H'(>8K+W]Xgm4W?/q7HHTOeNB/bC440pE]cijj73ND@i<O/'TDP[b\*]YAS``d;b..\c>[L[Q5oV""`3Is68Y%bj\,P!++8Ye
%\&87.W@Hcp)F;Kfa2.CH++;B,K\uL-mpL%o5uoB3]U"Uk[*0P]<U4lOs0&PRZ+HR!NEfn3#`75fW*__\FP5hPnWK6@i&Vs9Q=V#6
%\4`L.T@M:.]pDm$Vlm.qW_([K:S)QOYLt[V-LZhrD>*O5+I^5nN#6L($'VpC2Mph<`^`1nUW*`jm^>TGDf&H$/ZpP[9r?!6`SOf"
%5R8SdgaCm<'(HPU;(Xnq)f)SBdB&$\'XHf_9ts8HpCH]$0!2N'7YM*5hta@PNKc"/(5=$?ff%r(hdnD%kT5?@Bp2g1&-OCS<HMNs
%_>0U\m6l[7UT'-Rb-R5X7.FOD[hTYEX(Lg:<P`tB\%\g!r,>NL*DGk#K%m;W@>2(g6#A*FMfSQlZH8I+EXQ*kW4$P0UEc5J;>N?p
%ZX*t4Qi<A[B=hKLKP64'FlIgH_YMhT:$p,M41u<j?8YS$m_l9dq@L6pkGYE%j/[Kk;cHUXQ[S5s6XEbiI_&0P'i!Gc746XH=i)OZ
%p]TQ>Y>;qSs%r6L/`Do(d?D(#GTtPi8an!CLn2K/Tp)u0El'`4Oct$V^r`I`aTI;mr%MsH2hXnAqYe8XEHBX*%/)@Z+W36QO)3Sk
%1K!1\&i82T1>*9pfaoj"pqe:a&i[j(\rq=rN0d3S>>p!c4^&IW#>='R=@otF<Y@?H8gO*d%@(aeP\^YjCl"9GQtd6]M-IhBh1dW*
%qHiO'Inb=Z0bWq6QZ1"LF]-*(9k;LVgJ8/91jV*;ODG8cClXQm$BM\kiK:Vr4Q8;R8*Wn]MDqunDQLfH\u+/n'/t\9;@SWXPoF^1
%A0asd4\%u)"t87BOHiCfU:#DW,\VRWcJ,I@&RXNA?0L;mGCSrKgp]mT"@$Hs`,uSt[*``NMV)s:NM7W%7R[MM)sud^NG>VWMDi%?
%cIm)nF10i]S8C4[B(N&]#"@$f(tWTV%5AI0V.-4U'G:_QNPkO1,o^9!m6oZ)ZEY^W0eM(7n&0mimBu7+)d?W1.G5!p+<r)]ClX=M
%rAfmo`!la0\2bTC2hXODcZ^9;BntZ/6+o`h_]aYYNSeTn0cH35776(3BSbOc%?][e)@Zul_BILcG;uC@)OQ%$G^EgB$i=m6d_GuP
%VH^q]>mZ;MH1IPF4eDIM$&:@+$QHtfO5/R.+n$i4J7#[N&>K6H+@C;dM<O']']d!!D=TtS\)aPJc8T@c6b7sD.oWdsbK;Y9=;e#C
%bSh[F8?-Q*EMI,e#%_C^cfH)dlnJ++hVR&X]:4E\d<&up*1nqLG1-_,JSZ7`JUB;;K6F]F+*N<?,I(s9Z#Bq813a:shV1ME6Z^;W
%1q.IX\)&S%_(G$Z?T?g[@4HabOiK1oN5&*TVXEM_m1lfsHu.94#P-7m#465jO'fS71`,W?2Xb,33n]P=Q=bb#UCYGlq"!_4C<=q2
%o!F`Gm3PR*6d*qbE2j_El34)3_5Ua[WiJp9_5Vl7=kX6Yooc0M]4>X%:=5Al@%YBO$9$Ht:L''-O2E(sD99=XC9aVS^uMgO[J)"=
%m>pT-;Dnr"B*Z;O`M8a$WStb.e&3RpBdDF_6(`"RPru^\h&1scVmY1p.LgTX>$:+4ck1q0EF"J#h[RM"L)IFnQ-DB+juo6$G&QX<
%];`UO4e'OaRFNR:UFC+3%\^^_("(L!+IG+sD@1iD%-CD#0Zr#(2%Z&ae!A7c,L<7XCj2AW(_s/kFF:A;;=0&,@X4tHoSYn;50m_F
%+C$(8bHs-JR.;jFGt3"FKuR>F38\`[1Vm_Cb**4Mj9@,)A+sX[`ipr98X;nsUE-G@B!h:.2*&ZKLV1$Y7e4_i;a*QL"(<OfUu0O@
%[cmGq]!YJA>Wf;_cA_;>>>q#uK7s3U2J0NkWC76S2(%n%0cj=Gi!d^CMZVWia@38G<GM`o8*-K6o"1<=ME?FFD[+(kSkB7&5TG=(
%DR`(1<Whud00(W\#t9)B\eG7_?2B<WqI?7)k\@F+iU@M8iqg3<<eh]")hlbg-lG8*.'Fugd7,"ro6(V7\/k-1j?:9CZ^-@rB=P?0
%Gcm9+%TSXBdFj@V5A27n7amWlBY1N'%nX_93@u_`a8slR6ug'#'GS-ShDtZ[,ALlXPUXa':#\h"3S.VCbn/a.CM^W:30lGX3,K`!
%J\5n+.`PGG^T+hN-`5:7`W?ESqUsZ"X`$]m`u];qBh)Yi'Fk@i+R_gmHeak?=4Ir)6;D<[4o".nN?r6C_a'9$=BS#MnDMtRShi]2
%g"Pam'qd$f%C.E0Q#3pVeusJ-.^2`tJp.;-L;p%[I-"j__fJNT:66njWE\+=^83u]!\pcX](?c`DoAM>5(7IFq1B]QGBG*R7s)#e
%V.HcB?JHjFkiYML.ajn@%(O=s3tOS-\m&07oFkN&oP>F&dUrA(Lof;p\C7n*.&utOe6S"gC<^9&]<jjDA]ONm*o)smj+o4'/Bil,
%$Jh9h(MR$,=_FXA+V*SCZYI3OH'sThbK=H4g!aDT(-?/&IhE=$\"bk>!Esj%5Zg3D>IN"@4IaK5fh#cHW>@02<@V$41gV^8qa[O1
%`h^[b2IEtOl%=YmVT@;GP_FB]W\Bo+8aW4a3RtPAnj$J:I<=2_@QMINSfH4_Q[WqBdA#qCj!]?^\Jj:9\8k:T/&b+qNNDYt6.8WN
%L/6Qn<8$d*<,UE!3b?d<X"DsR$rpsGV)!(_:Md=ah\H(-M0s0%93`9>h9Ll6c^N89CA-_\(kD]d\N"0TVN`mu@jFd%Go8Oe-)_Vm
%btkBYe7sNW0uVW+'8l:dHLBjOe3=?teO8hV^=e'Vp^'<-rS0]>_iCjY_J'm\;;j+9`j?k4Zo*U/]RbW,-V&T@@[(c_c!e,O3H,$s
%2^1%%,[TtD\M\%F#c&lM^gck6@31H&aj\F#Dt;u.fL:KeX!S?0gKq/NL*f\r5i[c2m@G9P%/YUnW?V.Fl_E.f4IZS%.'N#'XdGt+
%^N$1W7kl$WbR*-`)d`nJOW3%Pf<M_gT`*FPdSMnCd=JqPIVs)A*9Jq7Ps!ibm<#cAh`RU8WZ;KMh7[66%>D^;B#AkRi_Y]>T]uD1
%#;/c#h1l%X1D]D.g-@rah0#"2X[rW'I1/[L^K[D[j3&:,%+60>Q'QNC4/WIf2Im3n`hK;H\H;4P=rQgdc'\X6ktX=97"K[cFA)3*
%h;Whb\nu`]mf_j_A-slU!_]E+Ot!UGR0$SBR!+iGOH3Tt,r2f9p1]U;d$C&IH:Oht>;?BS>^=Z)*m]57AdYX-V1.Z7`Ci@(Mj1sJ
%[t2O*3#JWabrYA&WLDGWg<,r^)40-YYFg[;$FLS\7/UseZkO^bVdr'C9Bp9-!_a!TB\Drqr_oDMDH'5LCWjb>>%UW+1I:=&NJ0/O
%*sFG$@NS>qo0O\*c:]('9NT:Mem!F.E!>$#NoIGd`U&GJkk?Jqq=a19qXilIO0[91*.hs?WCL+V;%Cdc[+(j%odEHrb2Qu9]M+6M
%C%3r1odGm+*p"0)S>K&VO%1O],YVfP7EK(t\60(P-*W-I_g)^5(q&?kUX6T`5bNan;`<8\-JKn4G1ML0T0*;+$qJm+)2:_>06);n
%<`9etOQQH$TnY!M0RuKNGRj"0+VW.6[um%a(2D8GN9!rZQ!-mq6lCo^W/ojU[S#r>+PlNiO\;i5J>87DXYOZ+IG3VfTadBb4I-$G
%!S[%s.,U&smQqu\MS&:Y4L+=41H5g7?l10!qZ;/:b&H?dM4n"lTEaJGC!4E._gpJC^-8mbiu'GTf<1[[#7`5[IOnVuW<0LUTR=L(
%R?GQG4":FXQ$C1,D]^762WTRhR?B8n]:i&dG.+uGDat<?n]>sV-:J:!101nMLBf[`C@-^e)2Gm!6f[k6H/5Me_6K)3,>)]b?3(NN
%4Z*Pn"fpm-8a'KS)&hD2(60QWg'8D3'Of7Ecg%t[5Ff-?kpeo>0]cL$Z]u_,T@iMa6=*.<C9^=p]O$GhO@DUT8`&ulM)ZM%gElpd
%HbFO/Y(APYUeDS)Dk0.5ikPu"n64:&5O,$O:J8-5CLfg;%nGhi2%gk3bh0F2BmQ>.Fd2Gj\#g'0??8#jZqO3E">=oR^Hi?7O.Wee
%bQ`2+SPF<bP&:OX%/Hud(QI[\[XbF7MHP$Bi;9Du'io6iW#TOTBHET%^/WD2&FF#=Wj((-[(OYB*ekKIkeg+BGa:l`Cc]g/DGcBm
%(J?7bZ7Llrb<_'TeaN'2N&$ZhQWb1,9U?c`(KP0A@8SHkbJL\X^pcqi]s\d7AQRbX\%1:j4S_f+alFHe8u3t@&Oc-0X/q!eY1`Y&
%-BQTPVfuhLGXfU'+Mgf1gY^W/i85ArM"LbipKMJ5=!bd`Np0Sl%jERF1oQF/0kC\r!qrKc]pGH5doftsY/DsV6W5$F12j3eO6LHg
%-8>kcjp2]teG$Jg^)k`uYQ8N66oh-NShf:d",i$'PchrUVd%I7[dja3E-jc#>;UN/TCYhIYo_@(Rmf>r][pmZ=3p,IVcm*l\HU_9
%X&/l=`7$<UX?NerePF8n>ZHe4Rr+'J[<&aS+:@:dm-o$f_&TK:"(g5fn?dGmasg=4AqaS>8cDK_1,?`Vb9KAT/$Z4s<*,,0kRB,_
%KC-Jo4fH#'-d&6ca&HpkKbpb7;E^n_\nPHLKIOr@4sPZ2Lt5<8@81;ca&N'm.^/K3b!-9B*'JUA"kaSYoiNK!CN=pi9#bm3VF^M^
%Pi$!u-HB(i23SUZnlfEQPs%=mSY5i4el)odiSlj8oML=ra,#VGag5hIUdteiX8tJ[OCqje!qJaG6Rj`FgD8O@%k2IZf>XeG<8^R;
%+dF^aEXBu(SM]3OGl9+*Cti'/!#)%1NA:)6o%*A,bA"OW/W['+;:nIBSLdeVetRsYQ(%7>YcHAkkg3^ZBZh9Yh[1k1\l)_\Q`g\9
%GtR1No8!/"9(>\;V"4A@Z'n(c*`@)aPqp@"8EJ-$.=bQ.$E$8SFZ6fj4hcUCk4]-]hH[bNL]$n#TOT//fP04>6I7H%F!9aL#W``Q
%NeO-9+m<#63Ym=-UP5@N+mA\t#WghacI#kEEKl^?:?BeKnd1J:\P58$k8't;drm@`ifl>Q]HZf:ITKTicN>pLO'oOeg@/@2%>5%5
%`4MI"^83h5O1=(0GLPFZg<oPgWVkF;5/K8s['NIjBP0nf?Pj[3r(@!\hmY9pN1+$-i0OlI,m/UK_s,Q[_"UU%5mD`*F;e]*pKjb;
%#(5l_3e.W`5MR<LI8BU*!T3nE)=SC1_#B&spaok[dgUK1$#!c@HT,KNDgCdcBVBj!(Y!f/^tUFin@]40:OsV!TQZS%5O^t`8:b^B
%VSJ5so&6*8ELo,1DfA$co:/WpP7q^)CY,+R>@'C26=l.#LeaoIbCGYC1>q2U!P`0\muigLfXBGgG$*Xo(P",r`k$amb]V^+4BXpH
%pH[1kBjsuSXn\SP.XpYppW5>hLo])`pFa3*kO#(94O\2$T3UK_D)J0<`0Aj,J\:5'pc!3XNkTS8geQoRQ2LX9j[6N.2Yi`^(@.dN
%/06C8B72sIjTfH&ol/pdUg1^Z-^_NS,i>`IXc2WQhK?O10gC5g`LhVCg;DQ2-OFbZABZ7plJ5u"-l2(Pq5F,2lgYm-Y8b0HPU:i%
%n(SLs0"C.YaXptSI+8/ZrAacqf@n(0.fZU$(l[1D>c)*)?.)JeS)pF=2n\%Yl0ulCinEm[goZRN[)57UK7)2JjSe:T(d^:pqJV-o
%$A8%1@Hi!47WZ3n+dZB#RI[cSfs"dPgL@BlA"%k5X;AJ'2TVY_^4/NI)n(Yi'$'6_[=/C*4P29#ZZs&32`C];iY_F4B,i*uP7L-M
%4)\E-43O_/XNfbt7Q.sP2CtPd@aK):VX/asS`c\eq=$XD7oS1Nou+pP=^*ABnfi;2P2,u>mlF_,9'+LFQB,[cN!%kSp0h)8b+XA>
%BhT%=?-elB<%H:p=IF/ZbM9K-S7a]>ilL1oX3!*H'7KdlZ[>B0Eo6FL;Me3'6.H8n`&2gVPE),hSQfk7ntrT[fL/_'%NoYQ]88Wq
%CZihFj1JAUf!fL!%dW-%l?P9]JVX%BWRXLY4Gj;2I)8J5J6K]'YG9kgB>W$JQo8<Y(STW$Vs3P8]pWg'c4._<HLZlAM=KXC,@b"C
%C:o$LgLj.Rpq6+8^'Muj.60&6?i(s;/ROj*g91jqC[+d]7gcl1VM1YfS^Q,K/\@mI()u>0p;aB1DE?MB$F))/g8eL<*E[$rps!jJ
%2@R+f0#YSh)>)VmJa*J7D#gU)a:kt4-DRPp_^tW[pPd]nQ_pB)Er+*/9F8Ge''o*#rPu5rm>n^YrD2I583)%UmBe=sD&0Trnb3L;
%p[ciaPd/'8-6J1^$6/)A7bIC1Zrt&maMsQ]"D*GgmscY*mh50*\p4,;D"YQhIpA*(7a3Q*s!@(tBOQbpO.(JjEW64<DF)!@OREtG
%]*8#5`r-_7]>kQY?]a`B\Gn`8h[RYLrP[tQ$Y8OLYp$9,S"ZT:RDMueOFqT(%iZBa3^0%GF!/4,6Rf3Ej#+OP*M!r*HB\RTCTL`C
%0it*ObMNpF_eXcKYL"VGlM>Qch\eP:)2YKNhVRe7gOi,faR^:oXS@O'5;^71jt!Nn/N.3!A\="f3]Ij0n%9D\dbdI/FD\'U9\:b'
%+e4l6O_l3FZ*0G`do9^_J2q9WVTl,(S/5bN6Ii,.=)^laIYTS*<Z99[9_Cbg";rMH@Op#`#>/$3-c48t<H/$)Yp/,e%FGk`2VT\S
%eo],RZ!:opRqsn$"Rs/+&/I-G4("l%!*?>(Y_"Q:E]5pAlkA<GC`t-tg%+ZlQ>t3c]00Fkq#NY/5Th)Q5,hf6To84!XgjK]ZAGj]
%kJ?U2&W\%Nkl?V)/rbR[q&5(\pGr<WaK65>.MQPF*)sjV6_hX%r4l+O-Wkr;F/\`1r7Lhd[9]Q*MY#]iUcU_?4S7r=3*JpS$sOTp
%,gr]unci4k:&3YfT\\4'_B]1o$+^XlHArg\3Yr9<75j56C_"iQ)n.s="Oaa,`QW/oGYZG$U7g.cHJmR'Ln!Y4Ug\B)oN0[bljt:G
%m@(QLSLP5Il0XoZ-%V=$W4"HQLfjPA@5Oqsf3oYQ%(^c@cRR!\%T0q9729H>_5BUI>Z>^WC56OB'V3uePno,AJ_X[WN%X?a1<X[&
%0oAE^MD!1T7P])g!In&WLN,-V[Rd;#7;E%$1Duk-BgtMV'\fi.N^'YgZfY0L:Vr6.NrdQRkKNe,4foq94'MeSq$(@*Rqtqm^qq[m
%4s+(IZAt>m9``Hhn]O#rVFb:VpmVNZ]O*o90?k8dP]q]ZN8Y/%63@(P)mJ08L"%90UFINn'bZa%W3"RMHNMt.;rRN+W]Y(OkY6U6
%b;YS0KA=m^Z!l!i3/;j$M&@m"UI!,fg!q`KaCkkt/Kpl8AFuRLN;TPNdBG'1'Xi[RC,4KdKT+^KOHJiMVGoAn-7=#-a3!`;S!/3B
%H[dD<m^E#;V4qQpbfF]P'kKLIa/,Np/hs+\1M/HbaErsc`=ff9K)WaA%5S89Fqab?&XODo2VgH078_tp0dG-V@RbQkn+#c=11oU*
%b9'd1&i@1\TMa>U1ucW]"HA_?dI.o/WYLDTTM^tMU-il[2f"8_ki<k$j@Xf5+@jp0YP>MK-@qr"n!OnM_TM;[[WtKR"HN=<NsVR@
%:K-:Cq(kaWiAmNC1gehX0Q-Nck)S?TS:lll?On*`nGI!/<teM::AhaXS>M_;j1=Wq7]nIW+MBAN-r"7K1n=MFmJSO,@lq#`#M:h0
%j$q0u!=,K!0-R&G"Ls5r5BK>fAK*'YV:K=]l2%neZ;*bT/rGQ?fuckE@@0`Bj%l^r=ui;/nUf4#B>9L9[;jQ*3W!G?)fa!sM3m&`
%>_km6lIs&X!S_bgZNfAPSaa2W*m\M$*;pE5kH?a3'0gu3:E94M".Ss%cYa#CQs?cXlK*!W.n`HJVsld-Wrof@qE_T`_ifcdFC25o
%Z#-9T(nPI"1KRYmCKr=#'IkpD9d<#h_%eH,JPa.TlPf0P+FWiIGD^MXR)B8i(&[<5@9<m@3#q!"M2j>nFuV=ZVa"=f:43qZKjQ`1
%!!:AD3<$35LM&Zd6@"e`QG?T;<Z;9\nOtU-BaOq@rr&0bQX=*l?f'k)J+?"hFBB(Rjl;E9I*I.6no%lB]ZpKTeIV\F5N(R_55G-P
%eIQ;nj6O0m?EX9REd@69g%FX2lfVp4J%4kf=7WOj:G+9FZP%cdo))H/rEJ^WV^o6&I<2dl#+(9Ef:U=!5.<9G7:+"&qT8NkY^.m<
%jBqi\ioK7Q+8kNkmHMg%J!N"L]IZ;!C&I6Os5E)'pO@U<EH@]fb1W7[s0+Q4+jJIi*mjYOSDWWkmofiu7LjK&S/M;HF2e0Cs6l$3
%k1sP=T'pmPf=UsQiQI\qI!OYnZ,Yk\@28RGNrSj8Dr/-;hn7GfYl)8JNl(ZERnir7/*:bgI_@^foC5>Crnko"?S;.5B]r6P02>8l
%@Pq0besA=F=FL$W2Xd<d55dUEnt47nURs_Mf>F6,0Ci0(YFiNk3PSh@,9m,>-uXOrO.1Xmm1!Cum[kMl]K&1s^?Y"Sq:kM1D9lk^
%]DD0cPO"]Tn!s!Kds&NQU:G=L5Q>9h+J6P]7jmJ&iI*3)R3+UCj86rQos+AcDs'%qr+F3M0>>$sp?)5:-^g+Ul'a!blK4SBe#TS%
%TAs:2*1<j'^,XGW@/o_c^Z6^5c.S$QKAhPeh:B&2L[/mOg$07L^t`JPPW+#>q4h*peOKeb2eVq$H0P7oWr/>K:-F^3n=0*CHu\lV
%m.0tAY:dl1i4o6fan7Zr"mM,-LG$b4"5hHJGJQk`Y-gftC;;EV.h#9-/M-N@)eL&hnD39^K"n7,ouIL?-3*Qr"DlR\nECa7Cd2.c
%eb@2D_t^('n]#5)SVc$FoD7J-=8D0JnJV)2$riYH[B\`+efSfJb4=k<gRkUXW)hsG1Yi;V(V.Lhp<GbOk,3$hT/-I!bmh)l7_!AJ
%qo?I`-b>`&fp+Yf]Ice)-JUU#_"/rL!to"Hn5<bYNS+;g"/Yq]IsBS6%,gAtY8+Tn[dR4!IeD^>S$O'$@kZFKV#2J:D7`gg2:/DA
%GL(dmX8LMeq($WR/@)]9nuERFDZ6;mbO+k-QT),:YQGC#,d8B[8['[6/cP@E?'J+g0[q_DrB<)#EbKjp]4gnbdTY:+^SUt\Qgj`.
%B7KdRm..4?cXh*jiI5Lt/\_^T@L9p5C,`Y-o=[FRo>qd;/3#3dUKbKE[k"4Z(<1t[%.f6pa$#r8&SCe;?>[N2SDj1U-hqnor#]mX
%o5FX#ca2*0p_`fs2R1*]nb1"e+0Mc\s3%nKlgFOr/h2'IQLB+0pe>XrqqeSip5U_?j:Be0m/;&+3S8NTDtWt?[eF]>_S=tn1l-m0
%?&,IpB9>@20LmI41'C)r7T@EFMKM+u8:5sAlJF3HhS)%c4Fq!dp%a*P4kX2=[J4DO+746,=9;=0UI384S_b!?X;"bn8/h+P22^X[
%h=@_l]+)s&I<!Bch'LgahH<nPKE+fLX?]p,%D[KTQ2u,R,rY9Z<oAbpJrP;2>$S9RQD.a2Fho\6HuZnBU(>6\^URW8oS$/l*9s"P
%/eY3KqLSP%..$mV=a[Juci_i`[(#uVa2KooO8?>3IK#OL^n4ZJ(N7W#?_5*2fN4]kms'8%hFlR]8O!/EF_]-e2WTf=[B9[X??;?/
%"FKUKl"T^!)P'QO?[&t"%Z#$j_h93QSEgTG//eL(nZ8uBT^;+q'#Oe26?%kM_rCZFp>0SsPoN@0^!F#crrX^m;kaoG9H[9"?J\W;
%dRobf6rVoA&,4gs(hAeoh0#T@DG@=`CMF@pKFNTq!;IXf(0B01?:D`C-t/Xf$-5L@TbX7gg91(__2%V(Je-s)G^CHH?Kd05)'LmL
%KB:IT-b`%C+Wq&oF+/rV2rXak?psmLHmPb?0>N>Cl%.,Y_R5'#&7,.50Mm92rE#`R0/B't#I3K,>EQ^D"l7V8!`h+<kSSmK%70qS
%am%[o+gq>/Gu4O1#f6E48sXr/.7j45d_`bS('&pcb=LTAKG+8bKbV;c<rR<c9E),!pmG?2"7Y<CdD$WC#Z'd2:1NK!)L$W]$;\&I
%D#4(peb(QtpRgkV"Q^Un+J&@=H_>_!\Q3;&(>@*dfoCrLC;4-;N?"5_bfXR:7^!Zdbn1^Ds$5q1J+8U"3\#W6WS*3mHG:AGrMM:F
%o6n4/aS8AdoG$7]$sT9=VB[J=8iVO$KLa#c4qW]k/Hq9#Yk;#(dD4oq9a;u0lO=(>CV&3$<a0!*=*U%W#-N'arX\`A[a4kX*&dOR
%Rp9`VA(Hp_ZDWiY(mG<\9._^6=aO`53aBp#qu,MQ[FHpb?%hcr6.c8q*8cNHq"RGsh1ri4>NC^P$D/HIn<\HL8!&!kjT.L/Rdf^c
%k*k[-dVFk)7&,HsC`q0&<]l#A1r&Nni?NP+Q&e-S8Iqu/q]d)&#_R[SlsXs0H8)S*7a=m.51M:\GkO7mi*:8pf^*RRir]@!F3V26
%#/oqm[dM#L1bI6V(*,N_JH62W1+7tj[/8gD\46=Si\fI/=etG00)<#KQMAB!%Hd1*gu&@1?\A3t(,jN*0URda_Zcsi>^s7Kr/Df?
%,M5n=^)7?MAqK"ALo:TOiF!;'B+t..iJDoQG+E#$dUc>N%,sBsYX*XV9@-7$B7)6q(iU1[J5Ap/^25mCeBjHi&-o/>>X,#&a25Od
%\3+>`0Xt#hfq8jtDZV@';53,"!ON1>7PZ14QnFp5oLZ6#B?3QbZ*_bdCS!M\B@tEbDW#;&NL(3/Z"S7iSqJ#RKTH!V!j`o*ecr&1
%dY0HUk_1H@Y:P"n!im3#FiHnhkB#50+e*-kV,-e8au3u(EJWOD_i6E_RuqM7gnt].@sP:,@U5Tb%.[4eK0bI5=ecQWol5!H5l[9l
%oh`$kReY@*gN1"aI#QS]?C,UCK_Td7LIi?7-KU?24RIC3rN9,BEe^HiK,cRSMiK=nQlMFPGsh4Vbh!=@Kt)62e?\U=<ns@c1'&Z%
%9sc*(JeFYnYWN(641%d2=<36B3'a/`SXKWcl'#5d9;sms^_O9ab8@B)VEejIQU$9>N)-2\GN#l@\2N4h&Rs]<-oeFePbAp;,7,$f
%KnWb>#D<I)*j+JOZ[X5q?2@q8S#$n7g8hk@#o,uqQd7/B3$$(Si=%`l`qV-"`It@IEd6bt7QP'YO+Uf.#`KW0[^N`$HhU$@$Qra&
%;a[cscu;[)Su,5//F#^0am0@HN""(tNs\cl>98*8$"/cY0o(X=AMHY]K9q-V]j]C+824))dbH^Gg@fqY:40:#R4k3Pjl7`d0[t#)
%OgIX&0nMCBF%M0LE2p8gr-_r[G/Af4UdUX1=hZlXMK=;5e=$GG9`dr=,;Reh8<g^DZ-dTW"XkJrfZGC)$IrCS!phX!#;Q>1*$2IG
%1,-F'`8`lMjKc)!7EgD9WbE]$-je-)8J^;t>Rsn0S?:QYX=D3k*"EqmNCtF#9*g]BU&5FR]oF'q/Q;b$#ZhT[%:uXnkclif-%+!q
%"Jc=aRn"ft13db?!oX>3c5qqGOP'eO/Pci]<g"uZ>j^0#K*R&p((P.Md,>5Pb76A;;*AF3MfdR,['Y7TpqF@M\YL$-?2KdVh:6h)
%#Z,R[3YUu-%V_7\J.WFu%SRP,CXf`8'M=0YjFehK@0rJ^MIdl,_)NL1f[8CshUFHt65\[RUZD="SoDcJP/2`=^iU?MCbmd(fHs01
%YaW[&P3'Ch@4Q`DYl?6Z3So!sR!c/:N>1*/$lH/*.^DMAdr:q&)B8B`cilpV+`c3e[[sK`%f!1e&+ui<-A7BYO*hgGM($eA1_&(W
%`!5]qdSn;RA9V^7S;rbR62:BVLHnbsiCTi&&QPr\a!U4U2@MsI:^Rt#Y(uJR7juYlrX2CQ<;S;j#'VJ8Z/h!a.CbrqM25DCW3,:6
%2iAaPUNO9M@#!4M%;9#4&P;,#9uQLPL`nRr[/`N%%%[H-cjB^k;loaIMOC.p!$bcg%pO&U0Do4/U!+uI=PWca_:Xo=(jRV#muY:L
%S<,<&m);<IG&>&>$mZXW-S#%4>VWb^HZ`gIT<nT#4D]!=qeF+(.nl/>q[e^c=bW"+f0]Q=A>_t;$J5p3-]jtqFs$M_iI:m9=:T%Y
%Pc+$>cp.%?T4AMS,g5C9,rqBWn:MIhrt$YqMqf!lD)q6]^p4'!6s!ZiUY*[B+)hK1T#^k\k`V&OiS[;F^Vc6>2,+8rfXY0Yp&g8:
%EW^qu%3Hi50t;p3RRGO(&!$jP-!!EY#A9F[$m^1u7a8W:OBQb!8*,PPK"_pL;D=V36"@Po]'hc%n8X=?cR83%l"GYP*i4Y>SM5fi
%k?]UkX7uI#Trq26+[3RUo8esY)3*PIq\Y7N\c*+H<uV+0&KL*9_)g[q\,FXo?F<8/+$I+1."5gTl]irJfH9bNAbrDdkb1tJ4mf^?
%"DAL!k8"b[)Z/3NG<^HcSZ9YHq0DDG4*,!Ohe^E-452C*GccG'fIt\EI0"k*mMh(D'&[e[n"<scIe!)'AG0BT7LL+c(An&J]`af1
%?IE$ZS.tunL\Zj?)/30$Xu@idC?s\;K>H17:Oi/Xi9YQdp[DClgKPPp:`aKN>7mWDVD3PIqk>7b<Wt,b7Y6p6s%0/([9M0g_,@%6
%I]ZY"#u*_7KtkS29D)<h(+aoGP<^q%ec#U:jqfp:gAJ-"MZ5k<`:lgu2,r)qM9TDeN*eU0s5+.AcO5HghgSi^@,&F$_;d`&K3l=K
%r#:I,Ik-@.pPP>b6QHM]q!41@5J]:_TYK6-rj,_;=8V1<JA2%"8FdfcfDH_3p;.X@,M1m[mOu'J>W#<Wrd=3$e%^V7G46;P0e!(N
%#64@37/]'tQB96a=<;_-5OIe2?eX-#J!5:P946s_s1#1\egkj;pZJZHQ@Fh[Kl<6(\Z\oC&#KPWgkX]HGdbAo`K-Sh2HC!<bL?0X
%>HXj.q![Z[<e.XU>HFT&m2%9\DuBitnc.@%M,d6rjHjOtUc!A2frnHAK4a2?g1rVOVHbPi.((Wp,`Klrq)%<^V<<<8<UE89\lHD>
%5N;PHGBd29gQ1]&Hd@h<@]s/+f)MD+Vic6u(Y]koE]E9,#5t/T$"s#X$Qg.o=):#/MGMdD;7eXJ"J#)*DjiCZ2iGB$?nEj18uGbt
%SG-EkEkB^VTWi@>;%Hc-#=>67W@-Q3lZLq[i?>#*,H3uD*H!XJSoS+`pi@1!UtG($g;RqU!`QS?&J9<J/.a[^-2ogLQ]5RP)hoG`
%*;<5c/Ib;?`taOc=+&]jSIELBrGJmjlP+nEb.khBoh)#=`7!jfB8B)Dc]Qg[]DU@edWt,d_c-STM'Lam):spkMB*i/?G/@4'M%BT
%Mn/.=T#H-n7]TFWjh9NDf#0/rhl;f*oj@YgY#=^)9D(cf+"2-QU>"R0".ILL>JCo"Vo.mT8`=@'UYel0`gL_VPNl2,R6e;DjQqu/
%dZ&"L;J::"Mdq)Sq=4Y?^X95P_fE*2/eo<Qe]si8)oKN`DcC,>SXg@?)d.`tjEOM>bsqE,^Ju5F+NTGi6GW`DLd.4<ku!"Smjf0&
%V[ZG&NNHY3&@[YPcg>P0^A_AYL2H\=j^J<<fN@Ie('X=MEU#f"$7B7.X:ZoWRbH$t)NE[rcDt5=(4>uceYnUI(0g``"L(ejIF@U@
%I.Vu154Fbt&#UOV1.]gimI8.5>q\=;,?Rd?8p<2`VeR:B`,bnCImkl%Z:i4$iTmb)G/aa`l;0PCrO79WFuu'&#Y!ptDtK"^k`U<u
%r!fM*Ad(LP[`T\.Z?L`>NI$A/U9[Yp(Wa!33/B6P#>R9Q6,6Ppr%gK\go2>C[bgL4I9(=a_n,2Y@st<1L?/T_\HdIP)6's5rCfom
%)$,Gq)-gH"[OOabI]Fp.f,dfn$r=Q-Y'a36@rmJtmca;h:WD4>A[Xh*Qq%[Mp6<B,ba9&+)*>ZS7RAti*0`c")G8hX9cBJ_>;Kkb
%E9#L[%0rJb8L3WFG(hYG*U8njHV"-uHAd8H[>20H+5#9UpmtVX)'AVCTtr-9;%#9<QHknXdU09l&,5<XIj4XFV4+6Sa0P?c/gX-_
%I^=ih5>ELJBoTRi4>gIZ,nrW3=tRS9;.,Z:ftLVU^@jat(S<6kI/$"2$H,NqDWEK9mo0MiqS=6QcjI59a2aWtI>cpDJBO:CpVNC=
%hp0NPmTP$\rm(i9Na+gTg*VQJU^uiCeJ](=W'C7hHg?G8q\lT8YY)n&O8/0oaJcR_mI+X?G:SMnpF5Xe2hPNXfLtD<h>QAhB"`5_
%;?$Mq-@GfIjERJ@X7tF!@jChmYg@-l^7;D4[RrFIr68orF<h=L,IAT.CKN@krO5-pWkJ7-l^]@"kuQMD<%L8Blu]fFZLYbGeEA5K
%IU2g)m1t%"C47!PPeA@qchk.j\_Vl"IIu?Ahf9jB@`6Oj"_lN&g5PL!$h<iDVH<89@LqJ/5\kl#W!Cc\D=1b5h+rX%f'4V4ND?t6
%*`5Qp;=/;:56"H(\6i&Ml-'a?j7@,SlDUr$Bu:l-TeY/C'2lH7Y7Ze*<!n(8.C?'ndEm*X#-D!8Rmrto&t\95?VNTtS,Zai6E>DG
%"Q__nqOD)roYZfV+6=H'J"tX6'rp.Mr(]#`H*jSIoFTpkUt$EKHLK[[d5J[e,="$SEjbcrG@GXBXu0hNI62DGo(/NF$Be.oACRho
%/94T>/Q'@7dXE.jr9C3e3ek@lUJW>lC;g,LH;5fViTb#`51%T?8Eok>[L9V4IPD?GaN-]1idCPb-&n<la;O[^*P0!\V.958(\7#b
%PGA%k]YT66(T'E"0L,))&+r;^$AZ@H,0`O6osXbDeb>c?G>42fl`KV(Iq634oCkM"c1^Xej*!&-f2gCq9Sflc%D.Z>#%,S/+qQs\
%W*AN[`[07rm>A#HHXp%snP61f&&.e/7DLJ[Xn#8)`Wb.1q#4>"j@ff`g&!-4iJ7(#KDYF]N"MBPCba;2h5Lg3C/JmKe=p%C%YGeA
%h[e@l<knb))VUhLD/B)SXAlg^+%C&PFCC*D!UJ&g2XFg6GXI[Deu\bb<M]-'B2,!^o-ut?B[!t^@V;;ljIkND9cNco9MK2OZ+].A
%@,ag6dNgRfDIb&P(h8dQ'ss!["<jnNr:Z8g_g&NkK*e0(91Hf&*-1i)GQG;Q-=$.POR-20^<m4\ofm^LW'cLAmmS##$cXuH?bRPe
%$RTr(=)HE)<e'#6pKI$95LFfUL1Woap#A*\i>l4a3'HW89AAA6O&Em!AF]/j^5I9i_AS3da^OQ(LfHoT1^B/G#D\a/c"q<FDAE_j
%6>o.`7AJ8c^d$OE5=D^+fBqqQiKh6A02?ZAd\jMOfUfcs&<1idXQ[$tFcoun9_SF2IfK*Pn*k)]S=eZnlhp:n+49<-@l>6rT:(L)
%B6P\1=O5gH*W@ek+&!?5amS]-J.IiLr3ML5G>A\C0Qdg(9R*&kA9F);2#W@BguS:egDkU.R@uidO6,aLr,[Sk9\\FH#6&nhN=4A"
%Ac/l.J#9kg])s-e-ZJS*P]uatK26Q(ph'W)fpkX0(>t7!Cc-4<3V@]+_l&1jm%2DMH\EdDPEtKG'.8]$pol11gO,mPID\:qnB])/
%j8.L]ION&t^71G7V(V_g]CB<Hb&%V-j>43U[6N0Kl9+6%"`#<sRN81:p>3g%SR,J^8ep3/;u'[E?37iRmrG8HjdU('Anrm.40\/[
%CP5J&L8P]@Vde%dRGG=GATmWVfm5as-\)%Kh3mUVQ.i3%WP[ZF[EM&UdnA$3oltF&clN-.*Aehr=j7rFr9H3B8%tP\!d8#dM!Og<
%!O4`%G@7I-]Cu;TXTsh5QLTb@+5iXUPMq*N&P`,sFMkG'%h`>-I<Bt$3iQphVfPKcLK67$G^?u_B@gMBEmsF!q9AQ6H;)(+<u-s;
%=7u1k71G#87!cb57o3$MIXOjHgJ<J"C4?%VWSR,jVS9LH*7+$@M<*D\=iYT1q#b2(%a';!Z1PW6)i_&q]@pYl[BlAa>tDCZoqr/R
%pX%1>ogH7BgX*Ls>!AK^5'V?Yg9&=7h7O>4n(+h[ZJF7rba#8`6#--D<eL!kM5M0gj.#CYAU=W99/i"C45FkR8m3n@C3HU]hA5W_
%rsfoXick^jhJ9#a#LV^Z3[\^4.FDF[-SmQTPdd$IaOV,Fm;.)uJ,T>^RM5XPM#!*FCecNN@pgNN-Rr=Rd:i6j!TNKYU="sk5-B"E
%*8''Eh*cAQi:8H\^[08[Z1I3H'>qMiGPG5j5MPn55LdY],G+8H4aHhQ+qf0C3]]!D[iCAZA.PDu11#i5C#J"8[6kb@?tS*GN6Z;t
%DPD3_droh^G9mi\+&A]-$g79IdDakq9/KLLS;T!_e^pNroB8.`HFb$&A,XNJ4ZHA;GC"BZWYT(<;(Wj#;(oIu8,^*,'jX"]hFCYi
%oV:Ts[HS&>?!lJLN,G/h4[kPd&W`fUkHiR[:$a$lS*j$@o1*`@kgi_r2S+=hM+)V)#H?onEU"]nYS!Lc*_i^&k]&%OO.L7X44,kM
%ngo)NGaX@o[MNu3l\Dl\SEBP99LnQ4)n458K"DRGSY)EA/!lgKBW\SS(O^0;qpF#0CFe+D^3Y^G%hkG[\+7LB[(d`m-DK86_*kAg
%hOg01a/14rT.eM;igC6k@^.lb3+;1j=!haghh5\jgm@,n$1D86G%,$nFZZil;d>kaG-BaL1=%>G'D_N2B4CaU].pR7]6-)Q=P7mF
%:)_0TM6m2,@H,F]JSnDGM2@#:kefff#ufGV[cKpU$jLCb3d27.,B"O!l-Gm!fYhKJ1,eN94NHULV2O!cWS349qoXi-drmk922f0#
%lJkJgQ99H'Nb&`E%V&_@<^*s9n[]Jt\ik4GKpT3dfMua*-?eQr-=Xrh@Q.>93c2lCjR*CL'5O.LSn#IueC3KsiC7[)Ag-b&)8G'V
%T!VOA?RFUm=``$+I<_5dhsEfZ1KcFg\RhZS-hlX;mc;JVDf,%hZ+N)B]6&KY=^7!C9\/o]T-mtfH\9F8Ikreo>oB`[1fMki#CBD>
%_9D;23%254<'M+i>!86ZT1W=qe#CUTj6*E?h6jem;k6HS>tsrEVsYM-Dc;pf\sdqjGW_G[eB6&#BVjodcb*;=V\@P(cEs>o<i24E
%`6ED0Ssk@IVDm'$me$M?CMUL8]s'DCICr^O/m<C1qPic:9Xh;DM<Vk9gr7KZmp^9KZ+>$;j.,!QAlapnDJ.D0D.dJXn?arlFM#7A
%F&ARsbhN`#pLe7+.R)>:gO>OS^Etm9)U>Ff7;!8ks)M09C3b!i`Ttk4ngg'5q]I+r$a%nBg"Y7jH+($-fpciS/N)9YmnV*OUoWUf
%V+gf#:@ISPcY_J3&p'O\g"tL]ijCOc\WaRkHYc2rkN_@:S7_2kiOSPYfsga(@eqE0YO8]7o,CoZlhm&3=e.dKDAVK>g=?(G0V!%D
%?gDnpoDSC#9mgjHkq4U%p-X4=CSDNh5$GAh_*YRB^Y$<f`etMDWVFZNQ\bA`:,GYN0`)DS0?F(b_8>JHqdq#'bL[O?bIuQFe_QA$
%:k#cm$dI,c`Ss:dn@H+h[2r])bDW@=eA9nYibkOB?9EFMmD[-#MuCWH`6%W1i9Arf`7$[B#rQ"',a-IoS0kLf5'rDOhclXF'R.m3
%&riG_@qfDm?<p_s3@QP*Q'f1J)/S+^*A7*RV<bIYq^!@TGNnMY^1>L6VH,;G/G<gq\Ac+gdm&^mk>0b=X)r0i<XU5i;qnX*0T?VK
%F%^!0FRE:J(Ti+*f%*``7&DP>>=[jslE-Y@Ec!-UfA!ijgs+V]aijLuVQ<`m[=$_ec.I*je!@,+\OSaA5+^Ft3k]%\q3+DIAad`^
%-8#c[R)W:oBB%4jWh+BWY2U,?jnrZHWEr<mS=VmsF5sIqIFl6\'CKHZ1Zb2[*R;4W`@&iW>F=#WIQkH=4RoqXo')uL<B*!e:o20J
%6bW:sdsD#E;;.YCjAEg3hX=e9o6'l//)Bp3mT!*:llTPYX'8dKD`<l']^,6U"0]G.I.:^%8a4F`mZF-554A9e\`ZumYrW2]n#\2n
%ce#@\Q^@:W;%R(RS'+m`kK\+]Ya0uW<[N#0m1h"TR:"'JB6l(^m+pMjj^Mk7V-gS^<it&B]:-sVe5q^&bM0'dmriUAX`jZQ[^^=B
%=^.N%bcMm"T?D!\kEEMnSK6<g?eF0$Y-2D0GO#LGo@rRAfDA)?l^`?7H=LqLo=D2Ud(S0nm-Ga0'_;^cNGbZX-^P<%Q]`e7cQl;!
%VkV:*o<jd>hVZ#Dm,C`&Q)e.QV(S>lC8mPficBEXp%9Wu*tOh)h2^#[hkrDCkt\]-LM8N#K6]PBP'cM_dscco;_)^VB.#>;Q)m/3
%k[erJ'8c)3`H*N`H/(X//PWG#F(oQA/pDIX:$([3c)^cd`Chl!ZLmMH&#ugGq9i]d[i&JC>MF69^&-(A\HA@6o5:S@^\JY;lY]l)
%DItDGe:$/aI*Sj42<PoSgC&_kp$L8agroEE9f]QYibs!ajp(BaB>#4An!k/bmrk;KX6[C(LGup&[Hm_]h32U$#N8hSn'-17X1bnG
%M77Hu:1mJrHdCk60Dff7HG7.#:M9A/B6CcbP$Wtd`:_UN5t^6V%PHPh_*N/82LChDc`\=#mk&g01GMukI*94K*6IAQltCb+G&[*#
%^[E77mqRJb0Ai?\54iKc@%-+Z>g8h`/fe(B)to1R3VSgt:7;E#4/Ya%l*Jj`V3B?lrS_"Z&=p=j(VIW)C>iiOp9=&9YEdDqbNH.:
%oZcgpg%B(MpoI\%Gs-B?f>RLaoD8H3D*%E30pb(H@%*#';sir2g7+P@kgn=+QYPjSjmk)h]5m`>\mN1/5>LLEm+kh/lL%,ff?n'@
%G.mgd[rG\U=DhJ)F)u[eU=PgKfsRI?D^tLXp"R$bEqD7G<PQ8]/ToY5U3DH.R-&;J@(CB'G'plFf.JoP]i.n8qnqW?mCoadcQ3^3
%B=Wfb=eQq[Qd>3B3G3^.Qt_E/a8;?T\N%-*\h.eFcS(1-aeR>E@/K/tZuU2/<'%4Q+-jG/V3A3/cp*;"b,7CB;f;&A(Fs7Zl(rE*
%[^qadq9<0pfs0>tdFr`Sg;p@ceEj<HEp`AUE_q+b-1*'ag=oDYVpc/PYJ#,Offj;U4<H.4c^u/[h/;&ZSQi'8T.SsM>6fLgR(fMo
%o(L8kD7o\mH.lSOoqraofCNfN^\1tp`PuZ\fP=_$7(#$pfj&GB=&5=1H^Wc*c-6#?Xk\lFD3^Hh[J#2Io\2H3p-nkh[(b7VemYY$
%FSbLZBucu10[6*]\F.(:C_nJ1;*.YB-51Udh1p9hfpeJ2q>]p[d#J%CZcuB"n,&KoC%8[trh.ZBG8f#]]1>=,#!$N83u?3s8@Db#
%k9lOEiV36:hr*gU@]TF^mN/dV$Td.P4Y7Hh^G&]dfRNmH&C[RZIDW[HBU@G=ed*Vfs/Iu;WngkOdg207D9JQg4L6tk;4_M4g>0ik
%o9$eX&,@cNJk(*Nbs.`lMld=+c$,:u%"Ma?Y[6ksE?/j7P_XW"r!AZckS?7NT3BYEW(8R)XEjSM!Rs"Ym.l@D]WleK]9IKc2IGhD
%0<1l?HM*mrpo*[em8YCMDDfjlY!u(l/CLTmn]lS:o$?K6/(,pl4[k71#bL/u-Q^L"&f2:0pa,s#(sEXoa!N!C4W51:m;]nGJU_SK
%,+Sp[D7:_>8t@#%^h*#.:\`FY]uBpo,D<E8JVh8F>-S#t^Pr>\X-#Hn<YZj=,5:sTl[n)S)YGj%PkPCDB3aqL.nc-:_ngS01EXuk
%!*7pY%2W"470]kqHkJ=,"U,-1!@*rCp!-?E:Lcn>16TiWm^t>&Adi_E(Jan(qQu<ooj;#pH8P6fF7[8X`BHT:UZ,3pH`W1hbGKu2
%]fE[`cgq<+lhu"-?%24MS(0&0$X\\f:mh#l@cG_aRsrKZHtNJ\Na$q,;c%]Z[=R2K.mF:o@rcl?e=C)=a:p^@,[M#Q0[?R&O\o?l
%Z*94uel8XIgCLn5b,/V)h0LT5BHnh!iuNX:L<'%)_T9X(UoC(u])kO)fBQeorJN!%@a4A6aQA3I0s"O@+SiiUA^C,7b7&GPn+$-`
%a3AMlpMU?342Ndp@bM0e*%/77-[g3k+3T.`&3b'_A!\!\jbuDXaS1kULB;^J,NtKgpT'5qR2p!qgT<68j*S.^/)e"\"=7,XG_bV6
%@\Q]@;cQ.*KGTI8J$u%\-qh=rbl3Gl;L_SVN`,5I+3F9uNUKYSSCBbCb+HT$W315kBrbT[kFZ-sF,B!SaRiHBgFa6<Hc=mChc@>f
%F>`,@d=Z-2HuIorJNR(DjK@#dlt[9$=6rurc\#i/<NJ-.`KYe[^i:ntpIDJl5c8;VT%os4PP<)@Q[B<U.WKFd6T+:uX#h>dE3aYf
%ItCAhMl?E8jh=4eG5H2d@DqL-d;84%\^^?i4g:%iA"rPkH-AYN^Q0jr0C$pARtVZR-!u/E\eldDiCd5?RF'pjQ/oB[EB&@[?bKR2
%=XdZ0m+BdBMs4brZh_93e;E\TUC4CaR<gU8RoF$)3>GanSo(Y!3uc@i[kmp'm\$ZQ3P"TQ$-.m*<\O?5I9Nj%P:QBaq;gg-VjHc;
%asEE%\[!%=#-E(Fl)1ZD^#Z1l4jDL.f#u`7@clpm>^M_dQr%Ge;p5#`Z_)ZV90:a`$`R`bYF!s,m6AYC<G[cC3g1BEQc@5Q9TuS]
%4/G_CS()m]T-)tGV@&a0q:Ds5[TgI=Y.j&eP0:O,1S.m>)WYNi.lE]Kn<JKV_oUEs/i;]?0:-J=kC2Pr?]-Xt4AKP4@dbnZ\hS9B
%"2U^YRJWoZ2LLsB_gH)R^$*.'VG7q;/RHA,YqgiDr0Q)]3ELBbB/@lZ_oc_/b+=Wk%i-3@d<V&(<!W$\k<#s3Q#aG1MP'2(>]&qt
%V\[i];0V>iO3@4nSP$IJ[5##?NSb4DH`,>2\:M3Ob0DdiaOSH/>r'q[cSXZtq^Y=NH+R*!9=ca6E6*'CVfrW<dkb!P@9]#YH=j,^
%LFi/NAeu8`l%VB:nfFt-VNRA7e_!<._07V8Rbb\TZ#uUOhoAgE.lYYW'YC,[f3;1XV0+X;_dg5S([AMaW*3!3cDa6"T]_S'9AIM[
%ZV/9fl$P=:h8O(BIW8/Y:_T59.SX_@oLF9l^M5s7?K?:?I:aYsaJ6j-\IB7#BuS]UEsjb8n[)m4\l`0BWOs5+dqOOeL@Gc&DD2O,
%9(.F+\/R%dbc[LEX/\N@2k&#U&@sSTm\jpo;GIt40C`jqC%j2\/C$qd<U&jpFY!?nSgljhql-@4np[S]D'X[s^:T7gVoj/Mno8.N
%@YoqcN*>[WLSK-S7!C.@[&\AYG+,HC8n$N7>^S]CEl"Z,,Ju@K#8'0r4-r&)A@MG`jt,t.CsXVVDS<+/"QpT\l*c*A*h21o+%:U.
%.R%)W$<%o6[D?ZCgCS(7a'FFL2Q]"N['!$gj@Z+1OXf_i#9U5HmPIF1+.W=A2i9;j>B/L4p!e=f%8Qh9IWi:YQ[)UZf=@'P3hNNt
%]*h[4BPf&#$"G5Ka51Fn@7LmRXY)g"O_&_Mg$KS]1fAj"eN81pm\UK_e,/r7D9'!$DQ/fF<16l68O#4jc#c=T>mps>rOoW)oN!-D
%p21IE$/o,i&$qb/;cT4NGa/U\XP356qr<"[[k#@oL&P[sU?)4A($FKq:0+fMm96CDX"+gRM`4.H0"/GNgt,/@H+F;EI56RG[NAl2
%\_[X)IC]TMB#D)VHh3a*LIs@FqRD_pWis\0H%=VmQ:_ncgJ>r__KIZ+o8YJ4Ranp5]+$LCaXsk1A:@]6?c'Vir*9'jD*"&8(o:)?
%0g0q@ZNmdVD'jDRkff*r4"bE%.%G;Lan'm([<m&M_R.cgU'D,KOp+!sR+Zg:LbTW"5FnpQB(!]=_FZrk0Gf/7NIV"H<IqR5d^sE"
%'#4^TA"%&+q`Lh-c$!uu:gO5l*a\o*?V\Vmf9B"eRM)(cE<S9;`?p<*mdAY8IPp<6dC6KPVth+;0C1'adZ#7tJ`h/3A5qr5eE<C`
%H"fhlD=*sOdf!=kSrQS.jP8gE7Vl]1P5&`3-s`oWe^F#C=I@?LKJ6(JN-F9Y"N*IQ-m:CrPQ"OZHh&#g?)-iH$lO_pH)T6X@U?[)
%fb=1#h8s)h<Ktk_*[03UXu*RJ(_4L5i.U-#,fA`ILHS\:#qkCsejPG3h7u9)?4?7dpPd9^";MKV6DG!fTeYD6#oEQnXRp.U1`Z(.
%*21kr"i$mnC^dSjNH'*"aO\h_EJT9H6>8F(lKE,?-b00Cq>Tqn]K6Fek1sHb-cFVUE7tSkC)eI6['/G\1fQI-k&:p"8fp.Ap!3p4
%gLK22e#..l4R;K46YW0Ua"PdD2Vni925HT5P\YI6-,.rTYJ`^-7b3=+`l<e+iUn57_DEDSfA>mO7*G/r(`VMYaUJ'p\*mo<c=Y.J
%,BP_b[-L*=V8e=Me0cfR&h`]&'I-;OAiG"P-&qf&kT3mF[mWSc7hS'lL4c[Z-4O[1+clU_@\be786ZO9TN.R3:Wsj--U*-$Y?IJE
%C*:f/Cnh:7<%E)hHeJXUF1:a9J#!G7]<-HYLfZ-KR+cof[(*GW`*sT(:T`b$qM"b+MKKVmkKY`i!o::E3FZKW=:4NQW6ocZd-*Em
%;$0u^52s3]*upa*[$h#bE:2j]G>#,En)[LAlf8P$$0,6IPPY@/GjQMEk8"kK:3LjAbo*'!rD64ZZqeqFVu?!p0#"eO48s(ATCf$B
%J^8<k2g!AjL@(JI>O!o+4sJ1i=C'0+gjklOf%Kh)7k>4b;Ed06l._bmlqVd(nZr6omag3;CA6^)D.p8aZ`2R$hI3g-Cr/?##$$,A
%#[NA,pTDL0IKc,ZJSTh3Bmk/+h9FN2H`'O0UDkndF)MpS`bd_Uo=_X*V5jaJN-\,a6H.3S,CZ%Ab\(98*]!C)[BrhI:-F0m4"gRc
%l]55A<8+jn`M(sq/DS^oh/FbfBJ\@lQK+\$_na*7p1\MaK4d0Pf,qhZ4.ODTa0.6kp%>_(F'dn*)KSnbJbg&UTsot9D=eg.[ce!)
%<]c%5L-;D^6_bkVq9%lf?>":#o"i^S"!*GrHSFk,N%EM/XmTe/99jc$nR:8"DI2QGGjRM*a\?FJrOBnq\_D<lN1mU`0_+1C[WWGD
%"K@s<b.1-)=cqKB<!b_rZ2<)9f<=sBkO7m%A,0AFn0k44VAG?0lGDW1NMjsH46be#,jaZnH!g[SK<)!$n\OI85!)gP^)5:GHeQoO
%K@5mi[p/,+4mD^W$$lK,B9RVTN@r9'2]j(BqRT>80d_(mYPW;nr/YS[k$?!*b^K=fY!n+QKE20j\^G:rW)F0;iRbuW#Wd[3bl1[>
%D%*@q;'t]VNoM)A`OB60JkiK8?;5s.q&CCsr%N9)=a>S)=mO5k=k'?jTL2hN*QT]C?B)ZaRC;Y@)ph1R`uni"Ren:f;<[*_3hhjD
%3L`U!"P'=&Qrp<sNa>V;Zf2_DYhZJR[n.O)ZaCXmlM$t^N2JQ(mFkW`,Jp=3J;m&hqaEEOa+BE1F0[)lC-#R>Wi&(en]4=aNLu<*
%o5dE]Q$h/rQLXXK]D7LTr^&GLADFj12GW^(4;1?WCt@.^+Ib?i/CKfD:hLNm7)"p@d6o+n`Qh]"SmAp48HpT6W@g>8miN.<4gV`E
%m$\Na(MbX<I[P'pY+o/>1IhqFo\mU"#'?L0Eq+ET)c:$2l9g/$PHd&"\U<pJ?`@n-Ss%9`q9bm<I^=t$QS8o/>'tJO8o;u6,Pp1P
%[:[7Gn!DuAY?/$[cJ]ht(b2uW`"49%]7p3?iV`PbYu^qM[kX:tYZc8(=s8e)inQkIIun]7WLI/gW%n%lMDET'Vl<aZY5X+B/KL@Z
%$@>A*7t:'hnlKIfh*lgT3]^ET>HZk12)t8eGs%Q.X,$Asg(McWhE7/W[qGMlQ05"<Zc_sM-Cj^,'Q<bGLL8tb%8pN3o99ejk6hIu
%a,G1F@Ie7i5MPnphL-bDHeWR#7]:?Id0GTo7an@<dC`edp#X)lj@[H/+#diddFgc`m2`\!^MH>5Q7J6KgW(YmMcn6<T#kWFl8;S_
%(.Ggn`B6dG][`4hLW9ibZr(9'JX.^rYu\TO!TqMlVbRT@[uUY)lXf?sqn;'2I]B>)eE(<)+EP7/RZ/fD2gVl<^<(8Z:QElKL$X:K
%rVK\2P_jOQTAA2Qo=&W/I:FChK1l9UmAcH-a]'kh'YAGYE[QtM,H3jk*/`!,*3E7Y,OO<gc:q%s+H`ki8k[d,EO21ejqXa@:\,+%
%ku65Cr&/d!dP"POnfpacqmfUN*\VRcn&Ogb<1tud*@$u3m;UiD'@\eEZ,\%Kq"+1e.bT^@1T<I?*L#4p*R&.4$>p\mjRrAQWE^UC
%rKAVdGt^/*Rq_33-E%`<kY'/P[MB4Df`ln/iI'ZC\[pY61f:j3ZDKi(URHY&l0kF=X,40b[9I;+QhG1\^TgXJ'=TgClh1@h-b8q!
%"0,lNp#?P<<s2:,A)KXXqnk.SKblnncWqRa;nH,*1,A1LmQi.'C&/3I)%Tj(/-u3lf;G<!As(ktI!/"^2U$TRpl-B&?a;P=Vi`RU
%f;JP[a6m\+eS%ZR%.tXg+:2FBE;:W_FIV+B?!UnY:*-#[k&[7TRpSp]9E_8>0ail3Yb]k@WV*WelF>O7@Un\U-u'aH!I!m+:p;:P
%]A!u9k^(9@WsaQTX*i@\5JY+E9)7]KJcJ%0$p47t366OOIbaE^`jOuBkL]gc"aqJg^QMOa;KrBV/,@lcB$,V;4c&4+8,K4[WK%($
%k+_^:[+!XPO=?03"J:El(F9,]qD=L0_1,\2e]#J^kL3h>ktMRAha4B6rK5cBY:4*BI?pAiQ0qJGM"g\MH4/>H#f+97='naE\sJ_(
%[DJhOLmae@3nCpBp@I8@W,)&Hb7aK':>rYj&B=*U."d'5-*tS>c.gLBbrZGlk&iB+\A+BF!tn."P'oZr:9pQnE^-$QHsRg:hK?6Q
%cHjfg.'S`%.I]0W%E_hV<;lBualB@kZdHIH`[WlWIUuqski[GkZr'i[WRULF]:8f`8JB2eho>/D7d@A1WNef>e\kCt3T7Z1(f8>V
%c<JA]6[_>N>hH)G]lJLFPWBhTac?eKm:NhsocE>%F;'tm;#/01.K=1ai,ErV"'q>nb$OH+1Cjm'cYkJ%F/AT]iXbD`dhd5=ioB`#
%\f%+]dFf\>NS#Kq#FBDbooV:cGGC-Oi.o"?JuLoK6#Or^JN:Gm&1VB,VD$bnbP_"*;b]?+1q5m1OH6p>e>,+jJN-Bb)X3TTUL\P[
%Eno"/bg,?*T=W:8Vc9GD,`=,'TAGS4;t"+?ob4r\mka"T=Ld0h"fZD`FZf[(3j[TUUV_:hd'pH%2HSe@7Bd^b>KVZ]KDX(>s*-2d
%88377S%g!jW3pAd6lR8h1FB!#f,N'OQa>B!F=3s^]D]/86R/im5#)!)i<`8T2m8S:j/88AMSD@pH`gq4Ol-pPcHJu:(Dj\V.;uQE
%a#X>WoX9[Eakkh77!<e;mO_XK]q6,_)LDUJ%]Jbu#:.FYP$0IY:B,'Qm-B;u[C)9LkhduSP;Cb+GXbI@^DLAmp^K`dXcn[h*_a)J
%\U!QWDKDX@l6?,d:=nApZ;?>\ngd\p/@*L)jQJS-q>jN_RHL'i[s[Hhfid2#%GKji7&AanJ!)BrMQb_/qGLJ"g::td]!e.;6^lNc
%'R9X7O1M>.>XH3Y,RMI]41a!sa/u1cG*&HjjtW5H1Q0q6/%#m+[4mqr?!1GiB$7e0T0V&"%LSJ00aLEA1[+?sg7?DsSP?8mS:):f
%SYe[rAh\)KGEt:(mld]D\%1*f`u<?qSlsmm/_m1tcrW,\+^Mr$B]Ii.,&R9qIOA@2XI]FHX`&&_4`h`:@"rLi"noh916KO5&EeuI
%R-G`2D1FpZ!<RWB/PU!f6`T^%[Z=CqWm6VS9>IiG$i)5+$f:RHa[1.u>-g]m^l:EBS\N]QU`o;-H[>MDi*g,k[/BRh;_)'fho.%k
%oP*7<8H,uO;<>[W+OR_qm9\+a6P@1tJsfkh0QHP%DV53N?J&E&5:i<X^Y_aF:a+G>Vom$bHH\K7k@ZK(mYreZ*2'&b;sh'N&seIr
%B(,"dZ*DgQ:_YJL'[QN/-l@$6O23a2cd-E&jgU\PhZP"M`FL1)'9B]!;`FQ:\T2DX6=gH>El3Es'@V4&%qs%dNlB*.FE6JlEKDY\
%oE0?8'l_*X(5o/8WgY$4N^p?e;_,tT]<ek^D&5V6mcdJU>i;uO>REq&d;`+d7]`f1T#[q^*51nt/9OQQVu?2t071&U`C^*oU'ln8
%_Pb6!,#aQZi2s^uI(oNE[3c\oV"3>TAmU#2d$t)Ki2j;BiRTGdO'fNRBpU$!F<.5;HK-WjOnSccEP0C/>i*hV:ke^RW0)tYg#;$;
%Y3j+sH/%-Br<puI6[VepLfN$p?E`c2>N$fqs!R7Yf3>G<?9_;)%pIlB/t.O.EjsVJHhRZiG3_#;^TT]pqTm;3$X!3ppd;CVIV!X/
%J#=#?oT,+VQ_j96J,GXhLp>h=f7!jPhH@GbF1a+lpIbJ\Y?>T\&Ta)J(*OpQm=4g;=_HJl5Rt8PJC_@<lN*HHKhnE&66G^k``)ZY
%jZie8?N^4F83\p^4\`[5NP?i85Jlj";Xc>3/,YNTr#kJFi9?Til'HtAIS/?%J"-B,GPl4]5.ps_T+PL#p*2M?<i#9sp_"!%A^QRf
%l\Mcn+%B7mV?,D2*!4/(;Rh0d]I/9QgsoH6Gh6m?$:c&)'RG@`iqcuu;6CQENj'-;08>"C(rF8m)J9oUVp/*NlJh8bO#I3's),'G
%.Etaq-XhA9NCsrlm:or85UHD-1dQNt#'X?7iHr^;OA&bS&k!,d)$oXmK3`?#)MC^oF$o3HMF!7:"L4c,)1k(t:)e1a_K-_RTW9nm
%PmQPtJjE!19d%Ldq^V!d6!kcTZTM%9*]1fBXcei5pe0lXZ/LM_68[%fL:^W\E-S^tp0F+Sqn*QC>#r:c#Ci-]LA#%*)=CP9apF`L
%9atN[@6fkD(jE,!J:,u@FV5H10MZ(+$hrd/K]d"Qq8*l/:C\d?-\m)6d$CFHqOr&!89jd-p-<9_lg_.<9DW@F$[,0-CG/r3^Te8B
%VHdRR=8<.u,)J@@_V[J"l23F*!=fC/YX.Nj[^:h)6gl0(f&>THG^r1T,KTQl0VT^\O`4\TKXqK1f#S(?!UV.aJ.ug(7hednUO;?b
%5?P'6D@</HUMY_e-3Q2j2Je%3[c;@7J`;5GY2pO]oT1%)Lkk.:6YaE1,*8#X?n2A#nYa_7Uf#nqm](gjBY1J\f)t"uODs^!*=!uc
%fa`Q5;hQV*-qi#<.LYKHj8'bZ@KTqB@!9`TL;\5UODqFiNu2h$')7D7%p+H5!4mi5J4m;%_m+28A0VmK$a^0&UeSX4T't$`&S_><
%0iUdN)_+#e!eEVE$0::MA@oXB)=Hg*6D&n_&?n:Y!@LI\<8^nEPb/Kk98rZI.['.*,/Csj5/e3=e>F;p3(Ri?S7_'X?0"jY!2%Y9
%3^?!Hc*TKag-Q^V_OVgj[6bEIT0UOX&._O-NW\>BZ8t:JL$&IZi=bY]aS%c`6/"&q>U)Qti"tLCG1oFMkdc4T>8`NTEmR/TZ>Bdp
%+j>gp8sO=f[d2kYE#d"T>8&Ei>S%m`eu"]9]-12W7!U\SX["4g,6j<?C&sn.$3RSf"l$b*jnSr!KBr`,0t[mG"pruRKl>ZGC'is'
%b3T/N1n]*6E=MUEDM(3jp+;>)+0pT1O.6^)$@9[7boDa<>13L!70(]>V/X+#?r/onP)f!N:PHs0A]=lT5[IIt?V?kST'n.@D`U17
%-tpTc"n#EofrC%P7'%pVk90>D9/FX(7cZQX[PL%JdbGC*;(7r7=A586^e%YD=Z_qe+<+;t/K(4iXTBoql_:VF!Qb!E.."!N`Uc-p
%##bH9(q+(`&-X$m?=?h>9&4[o1U72EB@n-LdP=(E"Nn;?!.co`T#.mO#(a#+9M^1&WJiA1@>"c[OCjHUd&:@b,[KXhaA\8DQkVQ]
%%$7/rocVL?-qo24/0n2M\3an21<Au:?8DjRm<Su:["Ag=UE$!t!0L93S-LQA%.\h>($]SnIL-?,D8T5FYQ.;d(^*_QA,n)9T?JDD
%MaW8I[=FORAjcm5$\H`<"Mc?Lj,sfSiiuX@Jo\7$)6/)H:r&]A\n\*Z3$4-moq`)):jsV_C83,+okZUI-:>U!0Z)/AkR8^LL(cJ`
%,8J9O^&`LKZ3+&d5so@#DWh;!e4+5GoX!kPY$_^]i:s)k)sHR]g]S0jHtIe7>_*Uc\7@Kek0HjG^j0@8$OIS*6A5!=0@1WB"MPk0
%WZnZ:>gs,_5Bn6jKQ$Ma.Mc'V5X%*IHosDKC6q5j;`nMG6CC`&S:"b*(j:NA%Q+s77S<r195)-aYg$"Xi4-YJ_"In/OcKR.f&@>4
%>0&1EQ:,1PRe//g$!9iUoF/%On.B=9_1XI(_f,\1h"<p]\OmcX6SjH,!\n/PBu)4i$1#=rbg+#>;^CP6A[r6?_0BCf@3Ik(o*9!m
%Oa+9Mh?><&:U6YbI3ZIWUNI\)V.<:*q?#m+#YAl&"$YYW2Ol&QaV)GuKU!n@![.:EUiVc;&>dMK!.Ih_+A)lTKPlpSN>Vgf[EljV
%jTWYf/_HIgIULfAQOSDJW.;AtAlUaS!Hg<IJmi[q\:eA8VTk:kmhqPP@UB4[4Gg?NeI\8^J6[,_!!KZ@lna@<bfCaLk=OUuD7&$5
%C9np*k.pP08DFL*2Wc&O4r1=?:Oj`Npl$9JH[&r",!;*1Cj0T('t2dX_k%!R!heqMG#AGcc/Jr;1[+*+[`MJO\`E9#33+ROVKBWo
%AItB+,V^ZP1P%(/b95P<g6rP3r%K*"kg;p]cQN\h.k13/(l4hOI,:"qg`SE]"?:'j=pA_GdO(pt-96X-#^oTtTTKN7!7@+76T(]n
%C$1&*AD30%TWY*Md)U6QI'Vum9QB8^RC+H-3QRWL'TtW>Gq<o_G-h?Jfl/fE&[k'5L^YO_F"ADM49.Ci'5YCE).`pPE2K&S-U/CD
%l<kp0A[?g[%T+dFdD"NU"M&#-0MOIaCl]9a!A]=eA8n/+W3@E\oJ@]N.nSa\@69VcEceP[F+/'KZid0E8q.t+iB-\J!Z6:b12u1(
%9OOcS?6SMs1T)A0Te6%Q"IV97e7c^m$0fUJ>kLs%TuH3iJb\tVh?+'/@pNeA\C;>--q!8bJa=nM\%q,@*Xi?:&Q66%(;<9COi)e+
%72OcmEWi;e3-*qIL)u([F$jq("pG1_1aG/u)2*L-'9t92KWIUO7>K,E2Nc?/E>=E`Q!nl&p'0m2FTN3Z-o2Dr*`Eu'mSZ(+b_&o'
%9P5ru?U:+r_'rQj#c+OiN3h[W8r@.@$";d`k_ifB6Ok[S"DC1h<T[et:k05/`h2'a!p$(&[3\[`qrl8=5MT*L#t9b,BOG4TLql4h
%RZN8uhZH<*,$6qTLi3Yp8CH(tjVX'^1?0SZ>qVs/662U4k'u9%*09)DTQ2S(Lc!HsFqF6I&&9SS(n6Wge6i]2Tj4(C+5"nP:$VW0
%3$BnE3Cj4%'s$$8_%UG^V&eT_=E_K#[a]k3=$G;LE!Wn)d3pii"ITB,a)En]QWcGd$t(FOIK:It1l!_TBS!EuCFa?jOQesFo?aXm
%s77JAF-4Y(^FJHCcrAJid01Kp7LkQU5oG7jJ:!Fl<#-kc&@*_S4=23Y!!*!3_Icc_an*=sU`9t7FYM7>ggTQia+sqiPtP/G(RROj
%itQ0Ha&C"#nK%6e>q6>+TlCD2WmJmiY)sq]>.N9%/Ms\R8*(#(Xc8*k/cl%"3:[0r$4"j>*VA-Gr?a3jM1^@LAor^l!!t/Tj)!/<
%;"l:-(&BDG$)W7j;m]s'BabLq,lqX\MTcdm;W%2(qJd!4%2-2g,@]j:]B%u[nE)PU%L#D1?/fgS9Q-+]=#RW7jHuUAP_`293FDk1
%`$e<2+Bl#ZP/EL'Rg!D*2M[K9hgcF\@kspLK2E!2$`RBa8Bj4"7/0q_3#&3fLW]k<-P$[@!QHF&<==`%bIAV4bB7s#$rCDC,Xs4^
%7YE*d=^]2k,m&?AhQ!F*`^?[T89>-q&.;ck!8/+mfjPR-Afn#I0=-"E:OkSQC4L>,k94mRj3)+D;^*,VUn48F:r>\PFL(76#aPPu
%[8!"h:<7Q@C1nKob!ajC/BOD)O>"!^'!!kC;IYS"]7O,E1&8CE%gFF@JJ&>EaZ[c%G61p'-]]A[W1\Jd%Ekt2#)K]IGX@FS$CFh&
%]Z7j%LGl:D1tG(i9RdOAq"`\K7eX_Z%S1YM&'\^fMd"tuI"G]h]2+6^a\X[h,t#Lcj["U)*<s'QCCp]Iaq0QnQ/SlR)pj,.>m/=`
%O2?(13jNQ_7_l<D"D5+QcHO7$"q:i"OE<`#!u1sE,RG;,I:D1^ZtLKRaUjer=UmBH@a.3(_T;rd3LuSq[lKf7T^iPG'?.lqWmOI@
%A5=o6iG!_VFRO$.0FBtKnSE<Pi;^\ka:-2ng-l"oBGLY?8(dH"@R,j:KS<+`Z)j++W$@BuN/mC)#_DF7/J?;@liIRI&4&c_9,(bd
%95B(3Y0[Tr6jc8VF:?)T[g#,F\gJM_&aWW;[*g0V0/:6Lnm.rW`mH1RdoJ:WifF8%W$L$q,3<@g7P@]=dD_lE6')lL%+IW%`rmP,
%,>/a4"ZWXl.jd95j<SU&Vq[N<$)B[l<4o&dr'LhSh-tod-7\UAl7L]NT[Xs\3fcZl3>]+42%0jb)pKZ;e"YCWY^*0$kf[_ho5*GZ
%OV+#?^)B.`[`^+RK70"p9M6K4f.a@?qC;,&9j^`IJQlTQ^18-"=2JNck@cA2ZS0"Bc[7g).biq\JmW#R66QDn+WN4\;<76R+]*lI
%(o;^QegMoMbnM[<Qn.BYJS2<"a#!FFj^V@s0e7VjeZuWu<5ou89YitC:n45,[jX!Xd23E9#n%=,Up4?/&>?a>KT`fr:cs+,\YPf/
%6jlJ?CB0C:><D%b13M=i6h_F/nO[&]8H8lf,fY.);CFp91gtYDE<E.)[*lM=CsA_BN]&IeX@HGqU=$!nB0r)XK5_Ifc0'.*Tdi@]
%#")i@3R[tKZkHV)K&a&Oj5^6gZ(NMI^sKg#J8A:*?#3s1g@U*%JsA6u9nZS7])W+=>J+Lc;&KM9@(S2`0bEVQJp:5uK7W??&3KB#
%!+^Etb8HX5UQ0$ojsW1LOL[V^l6l]?MtdrNb!`QNVm/s'9:N&/QL+kIg5H$)29--'V;Z[+\1@`)"K>(j5k6t_c*C3pf]6KQ"u'<E
%),&.AHOQV3='H$65d\``+pdl`g*gL-$')Ru89cJr@UhfbG%./-JWiXc'j;_L!\s2)+H*NZU^&W#6^AmA>QGO;%qmJFAi:2[/"G2-
%8<%CMNl`$j'La\oaN*p%Je[?\#R&S:qi]lJV&\QiE"^!@)'np'T%@TW']g)_RJZ9bCc0cT6A=_0C6YW=cjOE58O6A[+i,l=9g@nm
%ck[0$F\2)W85uasHYnhfmnZYd)l$T6/!sWa*tV"+":6hU0[K-,V$2CFn+*ii"RVZZq(rY9b(GJ%@iu=:UmV8M(`i8A*+N5U."2`e
%CH&IV'Q!mi+[Zf%>mqrV=$1K]Z^h1Ja!26c)$5ufHBR$X(kaVZi<Gm=8+RqS[E*=:JQIRK:$*oD\0S%)XMaOd-316+,KLXd@^',!
%LkUO+?'c_K+K:.l8*Pdi"I--+T^6Ul(]a2q\:J"Tq]s3#&>TA+f/#gFZO4lcjiXHm"!5*UW.M:!`TQVmDBPe>]KM"$=5f7Al3_+2
%+N^m/0kO-G!!)h\@jJ)oaD0M2AT:)tdJugJ&dUcE>>5luF/Yb8o#VT$H*pW(QOJ7Q(?gmH#@k^r@g2fZeBVStd7R]aJV3&L8pQr,
%-4s^^AlG/8'cq^'8oUYhHnIN3P1:%')+k91f,AKK1#r8\r#:J#U!/g_A`<auRl)'U3I68YHherBWJlEpB]gU29,2u]fZTXc``thY
%>$)%cD?GGp3^(Yf?3p'gR4Yh'Erf]?C+*?1XMgDoHO.n6@Z3u/5>X/a[S1$XC*=-9J5Bdf%aSo`M??E0#\8N5#?D#]N2,urPpYbn
%i,#f<bQ%lRYY`YB`.Xd!X%)e-BK-?tIRLLK.V&D)P")-\AF1^2[3\Lg_4mAX!-qgPK9j#;@2K,e=:dl]bH;XK*<RTD!'qsP.Zr%R
%p>ESEY_Il>(Me.m@/<]1!^MVV9+mFE[S7mrn]h%Y14]`FJF2bYPd6tcZ@[f`<ehfRXZR#;+r-M[*FB"IP+gB*)Olc37Q8Q!+NV%/
%^2-GM]YlV4C=b3`='Ik>4:]m"g0>lI>n<,M_Os=2>#=35aT-7QJVtXPOAM)'Pq"_[ep"uP;eCHpR%[n=\;lMqEk6a7QBqX`?BB#(
%.*@uEXM?_;2Qdudh&tK,nS9odKV(hsU0\:\"dTKf,;ApZ!BV00+K>&9+^B=Y.=5,#?!WX9`ZVk=MT4XT#atU!CsEP(B%h;.s4isp
%`1\n!JjC/VS+6U!*ju`Ljli@._n$*gd``%\b],t5V*fg7,+i6lo>/>1i7sGb%Hh>eX6k5k(e,p:.d<1NYVh,F71aDn&3:0BT@jq0
%_Q^c;Eju2RJ=MqDU*,,`1?UD\d_8]?K;gCfq$0SK@t`+Fm+>Z2+DDDABR^6^aGU<JEGo8k*%/</kZX;"aWS6DC?IXZ#6Emf#/gZo
%#f;OSkmJQCd;Y+9p&^OTBqrj6/?d!2LIJ(E#bkhIH:HJ)@7(aP_/OoINh4n;AMgMBbe-1XVNuaQ?7na!,R[j,/&Y+BQ?=)j!nEdF
%ECe1Z"1;"e,:G6mI#S#;dbU(]ib4`Ag'r/5.5BlqD/(I%><-A)$eG1td3XF$pe>,Mp5B_^"UtTTV2=S#BTEd^A'YDn6[Q`%6!kS5
%IKFf5"UJ!gXi!8Y&0TlW<&)B-k5(?U9GNT8@^ob88q>,BK/=K/VQ]]XC$<,dD`=n,YUDeY?f_E=/S/aHS<r?O78Yt7f/%Y;m@\:(
%Hu-6=']s&F+L:HOe'LKtOO>OKCMCcr7X-I)@,<X.#XsHr#"SblV9fT\B#AF0&h.EKPVS%r=<U:bK/-hf\lafETd<?d;c#:ir;]'t
%]595j>q%=Y..nm!9V`jAA8/2N71f)HaE)/0:?u!_8jQ0rge_)RLtiIA8K!'FE*gT8"te8HG[<>mC12dW+QSJ)3g"$Q-^L_8[-(jG
%S3qT:9ZCOa@Qt:C>8/A!=9`A2I13qrSoL+5W6o-J!\O`]BFu(;doI$2UH!tp"lV_C.@Mlo(u1L_^<P%5/FCmpZM_L7!k#+]2&h9>
%:R<7u$GC@l''$ESec;:#a6M#;Z3A^P6M2aY.%F!Y.E79G:o%U3*&5g+(PK&iZ9r]\2t9.?8N'J!83@Wa3YAe.3@ZX@7:Nn<cf-Lh
%`nEbG9mb,f?jE_u,uHT@#,TQIkG?Cc/Y?m"+,r57)la_e,^1]0T[<THU0!q069^LF@n]d[6$*/_9!PTm0uQm?RVVE-?s92Q"Bp[$
%NtNCHAV.Uk%htG#A-E@$p6=5p&K^&9V;Os*"Aok%@ZV9--3.;+ZlE75=KiTd2QX"\$?F%ZL7/jJ`1d^i(N]jY-ru;=6!(%BP*tri
%6B`*WTGV?-rW*]<:(^S^kY@AqW\Ysb5fo6ia.qQ0+#m%[fg?*`/b7p)VSSc690UC@Lh:IE'"7$sp*tZY:Xi,^@u"GZcSH%LH0?["
%Ctn%M/;hV"Z7d204md%6'l>ufL#F)QY)Z?Ra\n_(->f_i;A&9FV_eN:KbU_7_kJ=eBQ!lj4VB@U",3H5)`4lHS&e(A+pc^@-iV2p
%Vlkc?>V+qZf,Nh,lP_.?A'b3rd#pZnni7R=0PTbJ@9AsUS3Y$(S;YhL1Y6=hpIZkIb;ImjU_i+JA8&,j=J=c;.:m8IZ%?+Ti5uKS
%'Gr^11c<Sno<F8!V6SYV)fg?,-="Y?rFj$,3m(''AVLL4H5Q$b##No:ab*uWD'1H#BZD&`;^[B&$BtgHW;dSbJ.*Ze_3E*^g^"9@
%"I[CmJf8BS5q!J&+EfFnP)EnQ#RV'aaR>cTQT>Lr`J@Dl:lQp.7+ZW-TBpaNEVW85Z@Vt1;(3X]-JO&/j!9.18-BaDf_l*PL*..Q
%:aWml1aGn2C%H9cjpeV]P!ebm/D(a8iFo7^o`9W[I:Rg9]Wp!24BD6E2`-+B!1=t8cZM^pL1ih4`^?Q&=6.,@^(IqufnPGo1lVCK
%Dj6Q)-=JXfj!![.-YkV+"cDG^QG<uJ`KAd7MBQdE5aU<HqZXIg#c`=QIDZU1$oU:\OMUtcf=36H$mZ=^(p.MF6@0s(EKK8nl](Ta
%:mq2qc:O!ReEe9:%6$JSTbXe7kkZ"6f^OWL=caq4HPe/`=H+KuHBHUX$n6u*P<IXD%uU7>@ss`oXN%Z#0*7K]7.<kbEW@Bs=#tnf
%jZA?:US+dk)*?aNpVV^k$@F3WgkU/>k,nYWD5,$8Yofcl/?W+<^o')1.S#UYN&`IBmD@Mf1ff[:#oCLKV4af8%eMf,#t2(&Z@stK
%35@ZjbQ^D$H9`(pZj=((\bUcmNB#9r"4ebM7h?6"5tF>1A>C6A-nu9Al3_?'#'JqRkE&).BB=0m?('fHnq2frf2PBL`HcTu"1o9(
%n9ndN;BX?1C-0j_Ui5#SUYD;5P%_m6liBa-*0V5h,1)A.Oh!cHNG_['1;u&lRnDHj%3rE6),r2Qad"mNUg.al$!L/Kb2jReP[^p1
%.8$>3;l3$@F=m1)^g1n"P8'=BTiBoS1KD<R1lPJ,\H<4_O4gUG14BN%I@#k#Cf:[mhONN"!QU9UQ\%45-47\dD7#)L-s@A>3KBeW
%:#\jY@HJ/^h^%eNi5l<W,YVTU1X/@ZR!L"clm!B\7]Zmf"jEjKb/id0\pVWQ/<=Xf9[m4f<4;Scf-5CrP^KoA=I3Np>S@k",r*6H
%-fB?8;SeGK)ENnA-Ak+nG:'i\\o&WS=jag^nEIZI@gZ/E*!G)G5>\[ULu<,Ka_4^=7ETI]QARsjRnEt5UbQ<gF7O/3A'dhoS<GmW
%Dn6nQ(p1_O1"I4HHom^gNao)J/?[1Fjr,t*P]huuZ@Z,EdL63+*-,T\G=aLcS<:4a[)lg?$`mk'@4W)@esJ3/7d#q4^sYi1M*UZl
%..i_"d)K=7PfX;p)p`daFR*ad:5qb/iA$t2B9)&K,t:6q'dd7B_pAgiBl-NdfE"Snc\drNar>*:)jKr)-;peWR'1<R"DP035L<j$
%hcQc@@RSl-qotKd;e01E-pCf&@3#X)kdkHTo7]!5S;<"c(Fe'\ba$8RS/SqhUJ)fmpi6lXA9a;27U41,(u\9Pafn,K.l2jh9BgbI
%M+aNA_)#Qn!1;XrQ8nAN404]i\3:)KMf^aH;nUrN@\1[sWnd?QNZ=T#G&IP=nBHprFBgpA!MtBl(TgNFF[-1`[OU*UVh>o^NYlMQ
%JrB#VV+oe[`3mXpQqcfk7M#]h^4Xr+fFE"OMf5Y0Zn)<>VXthYG+4(QM<QT<(rSU!#+<`Z!uOSg?k?pH'OCLS]2"#tM8<c)bl;pd
%jhL/jb/Zkfnt@kZ*PiP[nB;%TZ)DinYG#H77`L<X9:CK'&Z1.aGoA?o?l7%LL4h[89`aiNSGo4?bBu6N@`a4;mO?U")2-XCE"NpC
%cJ1r.+eq_O&BRY8ROc@2N%R^8;l+DBO;1&`pIG+tMtn1t^hEfV3&T5^&t'J#J0MrTJU%S(Z/n@6DrsJQNkK@f"ajF.0CXE$(Z&R4
%MFV4F]0T#u/^;O1J[G]r.>[OlK=I*,2kC)0Mho58T5A>1*1nH>Ld%esX[ZVVnXuumfhh#NO3BN$DAYUBRF6qa9n:QaRh`B&#_dnb
%V:3LlJEu.5O]a?k:RnA[gD5%G&50Z];B$kVGfu3nFcO#m&f@Z%?M:gZL+^VO(G.Je227O^&kE4,$E22`h^,"EMIUN@.CsGP2i'Hn
%#?&ddCBgES/p]&OD%eEZ>ciDiLo:Cm2-?k/1bkE[3l,;7BLTJq&o2&&Mk7riFqgfW#kPV0q=Q@G>W9)9<C!7&FZ:A"esF9X%Mu9B
%/NYEpK0ars!Ner5i399,V*bH>,kk"N]^Q2Zk5LQ4mhn$?$N];3<$4/tSen)\WKmY^/ZG/Uf3p@oKK".;ce53_1=K,+!`^]^6jFa$
%6")XD0l.ROqZon_S#E^fD1a1Z5"LkX-YDM"Urdn7ZGnJ(.bgc37<%>oJK,(fW/!\Y6$saq9lZo@i#r@1#qjtRWDGTGU0B$>8:%9Y
%-h!b%G,asWX@9M@HRr.iCn(+F`?D#uc1d("0A:g[nqK",>`2':9h@%?PeajElDcDQOJJsATg_>E(^*b'E[i\\C\%EQQ`jD!@A9R<
%<\Wj:ND\auG]VZ:3`-Q<Z8C/7dM"1E+G!GE-bX0::m>f,6bkl@ZVlrB_b\H8Caii\Su*ru8k^4jC?,Z;=0I;dDbndH2-Lr;7el--
%)p`+\Leu4B.Q/ZZQ"u-_esaJX=O]X+7G6])PM!6QbrH78OX?kMj!u>o&si/fM+aOkNciesEP/'$*I(p.BK,Zi'uj(G$)e2t/f%jr
%\MW';C-K5)k&=[_ED4O07HtQfPV1It_.+&__J?Obi?UELbXH@U":?q-^Y==cU[W%:Jcqtfq1L<9=O2Jt:7Z'L++KBN\Lk6&l.R5k
%^mGtedZB9''TJb)jV3\^o,U15IeXCNOS>D`8!9h,2g)NQ_1mVu5>pK-<_8$_<o:?<U*,UgTe)KHDT3Xb'LQ@JMn6_e7)If<1f2UD
%(i>ASBt)33Uq-mh(kik`/=o,k"Js-1!YnaKn0t+`7QKU/*757,0mX]Tec<_#7tG=39/[9F]mJP]`BZ1MCb6)WV8EmA<gf89.!u7<
%<?`7Z8PB85X@6D.QoATK7L'cE,YU6;Q_JT;_ck\DTt)W](gSS3UDh#hL,Cj>/i0A`4c[D8dOZlm4aVa(]8bfo_J?2Sj=D>/aMgD$
%JO*d6JuQNt<+j+M.>#a;W)jtW$eB<;1't9oF>XV^7@l=Q:jBCKD!97V*(><maJB\I(s<CiFFHR!JP8K9ka7mD^q0%_o=JQ;Pn$b]
%MBMMb#%lu]<\n?`q*$(;cJk;iXB;*,R7NsiCHZpM>R9**19AR:CPfcN!Y#mUGqF]T_odcB&7pm4^ZZNNi$sdRRWH#kY4fKDAU*)>
%*+?FbMX0lI+9u=hQ_g"q5_=%>ba&N7@A"Al)(m:bK*>HNP`c\BO[1u\`sJp;9"naW.+#%%<?r+^"TGu"@TC$+l3b`NQKFQ81kZ!`
%JaWNt,=g2#Gs&/C7M%8ZAru`1rI%B%3C.tPCak'>4/?#NLNtZ)K.c'=7M&qa-T/\_#Qcl_*tQU''m(1B</BiEqkpGmU/Me3IMQ%b
%M[$p8\gW/:&)oP+1hWt2EOIS-OiCC_V\E77J0<%FK_Sl3_]Va2^h'oUq6O*38iVo\E65iS"LT=0b.`q4>Rk,XF1gEk3t*"2*-]Z>
%-kli\[ms\F4rkBnr'I^0CaE.BOg8@UV=HdP]#@2#O=7AEd$,QGd3<9Yh[(GlS,f8L*tab(#-<Uj5QX;S"CeWo+O:M%Y;dUo%h^@,
%B/<ar'XD417r_cJ]j)<3:U*EF%uK4C@u+fRDkpKerFV:%_Ug-/8%8ASnh=ud=HY=,\TBo6S%<2BMZlo\nG>OO_osPWdK%uU2,mO"
%lZ*kr0Ln]Q<hRbgK<-NKPSZ;9@FYk&pd)/%hhW4CqS`*;"Fr"'X?[C+;t!I]iBlO]Z$bFf#k57H`\O#lFO/2BQ)p_7]+g#ET?3f!
%*CK$Z0ndo%-*!.F%bI_TYd^^l@XtQea&j\Q\U;S#=`ciXD!@<''0XMK`4lZ>bW$JsH>*Vf,6fe;H7#>AWAbhiIkL:[W:6$,mht]h
%$(E0rr,SJWbsFg+&E6,oBc:0DL_f=OJsR3XI)bFbmP+b'^Yi*7/=bhg39M=XNCpQr/2t(*NDV*jC_G@TU/Q;&+.[b).Z-Lk?Z"]+
%,0Q9_2fIo0\<@hSZ#.8M:eFn6.$+Y%M^!;C(+?d`<?\'NQ`l0i6tDf#LjNl[Nhq*tCHp%//R&up-.E$G70^7Ao"rKg(k\kW`1n?n
%p<tfC:jBlK(Q0K3^As`j"u:c7bF&VhJVkssinS*^TU]![qU1IAp9KOZ'USf#916XbfHY1R35,^2K]D*!$'Fj@PB1QR!?<HB$bR.K
%=R]PW(;g"Q,oI8NZ5uVfXrI@sP@!.diX23S8KS8M%90L/PTo\1B\hr5E-B9]'*2,W3[MhY0e,CE<R%k):Y5MAY.:nJFrWgL'hce.
%B5%HP-4WsP<j)od1p4=ni--B@+EbK,>98$^1^:=!em%fag$QbJ'eQrl9iVsd<Y(s.Ka<)GJfj]F86Dk^*nL"Zko"(*fXC(pUjAFb
%n:Q=)PA7%>6$Ma+1Uqq`6&`s"k'B'g/]'>q3+Em\dfgEW76&PQW*&u6_gQ`%nP30APXT.WiN$:sU_[D*#fA93fppIAMHWXg_0:\<
%%;<r@7<(10<Q*9fZ_gIa#R+9f$.V1k,bjOU>*#)t>&%*g2hd%^1bB5k[MIbVX4RUmO4u8OR=FWNrMOfo--2V[Y<<2DjEs!bST\lN
%Pq4quf"!"`aihDH>'gTaBT(@DU`K9M03bo)6n!F2Gh=4o''4e]c3jD^;g%1C,9ppFTRmWB'"4NEQ6;B+LShB*7-,<TT"TiOe4/m4
%`UJ68FXtdl&(uAP,8DkgE"/$+QllG?[cL#bpn8("FNqeS38ge2Sg3PY#_<!!Fp0A2(3l>$g0<.$*g^s]oIJl(L=pQ1>;IRe$"I)C
%L)U6BfI(:g$q#SdemU%B_/RE[<(7Y#_"dIncA8"UO)dbA'P%EJFsq5[?(ifb3EcWsgubu`2I:R()?HQ/q9';'`JlSL<hB;`?r.rJ
%qo@Fd-(nYlmL1YS46W-c,J5AGjti</m"K&C:GAPX8&Vl>#9bAn+N'.d\!7JlM8%Q=FC<[^)_rZ@6G11,:0675QBNHG6,E[-GsK>d
%b5Dq,d=Gq)BDDW%+$Y#$O.V`3W@%oO'#m:m@tW<+F$<a;i+p2KD$JpMdf5UQZkK/id]0U<=K6D]cUmIRVFgl\05K%7G+L&Qo0*^'
%:+80mf*G_Oo(nt3gW2AsH%3@^Wa=u\'Q9&u-*5sDi(*klWU0APE''%4Q4<<IouqhG<4<)-o7>I8J,-M(X87",fF:3^:br!t[joZ+
%a=']ui+k-pqDcqN^7D-OlhS=#La&F>mHpXY]Rpm.NLo"q#1f[-^t)SN*r>!Rqs?XJd\Yu"#<khBT6n7h^7CNJM@<Xs#[ZQ0RSQtQ
%Q8*n.KYnk/g19R9ll4@&JM=5&nnW01^"9Uj%u(e;##Fi=Nj-_VX?.SI&u,F5SZm`Gl^%7E:bZi#]?2]+!hXb.7i>\]^pKnh"%ja7
%*LODPIYkdA_@P-SnbqB;&RCc0j<76[=FtL^8;?<a'0;j;2)cGT1-6YL0QOXTL_-RF<S7WH`Grf6T>PdC%\5r]80K,r*E_QoXZ=Xu
%*%k#RA2V<RV_#\^<.=];8lY,^8HMmW@d894.<[&s+Tq/lJpX!N.ME895F3FbEu1XTj.7Rn6JrNn(OS$u.f?libhG(gU+QtI-ro-R
%Q=_9o2:/>l23P,s<JG!CJ)2k`B+P<Uh9qK,+":X_F6D#_.u!0u'c"YH15/H?fn"&do(/+K#^ng4g41\DYuAEVrs>ZL&AR+j<Ors0
%3M$"gAU,L50[jsn3sG?gG<U[+>+5P0`"Gu(l>SIJ9=VOg7:G\KY\7]G=I*>1XTLe79G*e-h4'Tc]t4Y]#BP@KKn`HeF$t2tEhH?O
%IlnO0F')TqW5M:U0%Hh$In%mXD'd[9jJhO6jMXZ^=4>I9>`L<M^27,b;E`?:W/=qO9\HPuKX/^,#4qY!Xs/e$1H)]t:/PmCTlCMJ
%kMbRmm9,p?^@<$iB-4uam=<g*YSoQ`e!c"3&D7%3H^F;X2UasDB,2dML]fH!4I6pa-)t>jQ/adD]q5NX003=l^l^H8V,)^'3arej
%-I_qOfSjRuCLDJ<=,1om-<$hCVU/nK9uPo*&`$ojp&72m.=V_tCN$5u!k1rtA;fq.d@4SkR=,iAB"(_R!I+],_'(i]TF&tEa#^bA
%JTZWIJQ"M\j$k!W7'JY(K0K@lPP:L>q()aWFh;K!E$DF_-)eDF@^-N&'JX)*>+/tjQF_+d@>ldWDtJXT:h_!@@#c.O,c^K+)AfRe
%84n(aDX2J*YDb's"O:N-JP-#"\1.V5YtWI-_Prjc=YcJBLBNd,L3Q9*c3ciKEE@JV>8jLYg*"2o-ghN?BJjRs*\7usFMdXB*TuHK
%8(lJ/0>sq2/#b*D\bP_7+JNK(gG+ne&ZIqo@LC2HLu>_+(4bYRhZ538&&Ue35$TL+^fSHLct8T]`4ZfI3p\,EJ5qc1bmG;5h2qr*
%S2'k7Q>=]]2**@`ap)R_k\1X?$o<_U$?TiOE`"PMUe13A+4`7XY0V*CM,VU'j9rq)!'3YVXHlk'_r@Cu!Ej8KH;DR3/'6r[^&T:7
%3iFN@A=(LYn&WLGh&g@X8?jM-ahX,X*aBpsQ:bO8F2#L/+GQIc(^17RGjh=G)+JH8=oe>*F?A/TM.*X#;n&#l\V0N*(P1<"\hal^
%b$QKSeT.Q+!^N?EfohNa,AIImBdkHn('oUKc)<(&]_QE&o$;9"Wc]ojOMVhXFGZbLdcM"495+QChQfN01(suu7E`&=b%WG)Rn*st
%@iR,L+<gUEWYl\amW,LmKSW#nE![[mG%4P0QDi-E-UebeF?#*rar-KKo:aN"G$.1D)iBKV-sW5M[MkC[Y%iWDP6C(:\Q7kQ]5ej@
%[L)-iW?pc^C<7f;8p:iOC(5mGlXg^lZHrlo1-2@i5`Rg5P>46^qN.$M8ci=0."\QC"J`oE*,I:Xi9lhu/4h<W<Q6PX4"(f9]M50h
%$T>304qeCh&XKM=U^2*Gg+>)eCF>S_eqJ*)OLV1%C4hlX'SH^5I["Jrqqd9bPhc$Pb!OM.AY:u<C&pTH"nNV/H)T/Em1JSe?C-(D
%n4H!_kLrth8$)$O0amXQEIT#@;UCnjqN*ub8m<aG;tn)!".QbGp1@7S\*6X6BrQ>#hdkR8E1$:b3j-kIVlAr!mBn&GN:?!tVlGuR
%:VO?*U>hPdP>S,"#h,FdJ)fuYT,*iri#q1L78l,^SkBoLW!q(N4sduuKK6pe&k<sq[C[e]J3a<nENscrDOI%U\:q7P#sU6H6Ol-S
%RDXT;4:jen>F2Ld'\,Pk0mBNK;CS;gG[Oq^'TP13Oc$A`%SY&ne'#7)KSF8PL6ai>%cFM`7Bg#iglQ5qd6sD&`Y.'@Y)q"[>C95S
%RhGER-]-?i@AU9J5]o=de$XE0%eQUq,T)cj%KJI17Do.]</YfJaaB(C'[Ob$U2`J=C,l9mR&._J`ot8$NEaMk%#fIF9RRl%:<h.8
%TL*FM$MB\(j4O^VMABbdOY\M@Xi!2YN=MKA4.pT>=YODScA*menT:6bf:^b]+I+6%Xl]-)@e_g&-+'"!%#p]W!"WHe>\@GrdqOkr
%C^XIZc<[6!aAdph*'uL89nho]>L/4D\KC0'+;;0t`gs6p'p=a#/dFJ1"C=+$RB;d$/:4!=*alH(=K(V)7u.M?HrV-C';k3D[,l<>
%Y+f]^f6iaA%4A.q&!$n9$'M=%[P02ZjtJ#E;)r\DmWWOE8(05\o4sMLilDHE9^#k4kUhHJb]5P`/"KRU=Iaoo6r0.*=)-AekC\Jc
%g`Y117Hu'$5q@5ROBjD5h2A/\3&.5o=C,q?/qO7kW@.NSEdCN>S-?U'Eu[]R'>e^cc-bAARWRUW[S:K;CS]]Yk!NFn';M<u#u,M6
%3@AGQMtqMlI/Ftu,lRa\\)XD1"nOs!0nRA;Q0nq`4&,)VGq@PWC=>jo'b@+++kGDE9Gu#&oo2OG^o?m\L8p:#ldQud2b-sKb:*c^
%[6@./\jf9:Fo1KojR>VOg=B`Kk$%Vu>;=0$3F5ghk;h3DE#GftinQN6>Q84Mai;UMa/5C.@'rrVX?^!?"L17`[a)gGQI[<36[U<]
%;s=CckkE*)CD;,KNHD>4:Qm;C&a*%b4#k,a8irelGXVkI'oRgVIDWjmGFdPDRnbQQ!"li8YnRfi,Cr6j3u$*$JR"QIQ?2MdGCr-@
%8kX&QHS7CILZPBBo[Df7K7:1S,-b,lcTQ#Y$7k2&kb+q[B-e%id50=T;^oMI;tV,j1,*Yp.lL.gUG7S(U7Wp3!sc69%.4\8a_dkR
%O79^qc1`bS:n)6cWOl.BYcaa&O+E4;]/Gd9Fm9M\<[;]833K,_I-^sQ._^ZM,$;XS,WDR_7@>9r[t(,KO"iXs!MsY59%'C;9bX*1
%FaG$bBC4>d!)J$7<TngQLUQ]9#I$^aon7cY*d'tXmq7Xf<_1S*?NEPsa;#+])le@(>:Npt5/%06+]MgW^-;lHbe`8`VG4,aPGFC:
%(+_*=LPecpm:"V.aQ'khe(\<)9nk4qK#g25a$do.WoIiJZh$A'5(=J($3\AiD*+Uo(e=+bcAa`$gG#`a]Vl"+&u&?BH=oKZSfZKG
%kMbb4h()O!@<82R"2E4k1OOXE1"#<oD*Y*o,CpLH?6qrYr2?uNZ-$.?fUQfp2:Vd;e]U=,,qsH:[*(YnOfSDZCY#7<UUY.iU0H%k
%n\2P7np[EX>N$]:i..1h/iRMOi-o+^S(-)%Q-J"^YGcGZ>:CfB<ugquPmJqX<TY-$CO#A>XnK=21r]VkHYktNq7S)JGE1PB<\=Y1
%eMIAl[dd<r4>"11NBF!16(p_PM%'HD>+[JPPK42,:lUerh[3"[U#O$[L22@?X2O&XB%]pT>VQ@*J2:!<#b4+t;IJU1H&:KW"P0@4
%-Whpt2J!:*QC\QY/^b]_Mc*F&s%dj>fCh0,ouZI0NG@'K/X0Y;8kn`cqN_Ck\T"jiY57</.h7-U[>ailHb^:->AIbI*t_E$*f:a7
%Rs)$Hf5buM^*.^/2&tqSm[`CjnJH#QoReggKREe.$43rS_ANkR*XGB@AgWG]EFBNSVFiHZo49djX/1uZ9t/n^0cLK[cs1&0W-"k-
%0$TY(@aK_oP?i*R2E6CjDufr2LU&K"25Ot&TA+\*.8OrjnksdCddbC=[*7_8SSsiO!OVC\.B=:&C5P]B3E^Tc2OW*1C-tVB1uSj_
%\-(OPET*_DC2+I#E<PFMB/Tc74S@L4;O-)uDBt$UCW18G@-9(/m\;cLKCoqn;%ggh>b9b85uCe1gW09jBi#Ch.JZ>ufara-4p:D)
%=?C"Y8fn>CUIP'da,W6XQIW_*D@G3*M"U/HjSd1T"'@WW3cuE6C#Z#q+h%*2"*Z6-1LaQTYeT#!*Edpc65ea+'K)I#23ekoX%^'6
%;AnfbgbeiM2RS6g*!e`=XI#Q+]C)S8W4PtL_`.lgn.^'3&#1\m.,8t6q92?Q5%]#6^Do2gSaZ)YhllkO>82%rh*Rn<$TKaGVNo%7
%0S1^4:pK$JcS]mGRVWF&-!7I::l;8_;N(('4c[F)@:mb^BLodRWUh>p:n?d4<.[UQF+A4L.pI&1-]]f/01Do_<(=QfYmb[1:9WS&
%;Od&!<,_((*'kcmL2rMr=WpOeAc`<4_X.tDg#G@[a'"(26n)WX$nekE@%]QTGIt2J:KV=/[1'b#D-eDSB8$R7>)b!;>#HG114WP)
%Cm8fHr0A'J>s7lKU)/T!4"(?W4"8\C4#Ep8,#!'h^MVZ7-GetGBB9-4^K><5IgE^DGCL!PF\C:s^]X"mR"n)djm7!Zl]@B^X1EoC
%G)=UE7%j;V"+-25oe#WAR)i2$=bj):p_bt;+dt):B7AD!Ju44g^jA:A^PB'3g<B'gfq''d#jV3EL7-)(EicSP0W_@8@uK)R3'Y?l
%4M<^$YBR,C\m5d+Cmuod@iQ_5LD3g'b1?C@MnD$L*?E#@$9*jk:rkt5Z&Wj9hra6GMOeZt(h$ge$n%8b(*b?L)>M^jo>]?*$isE(
%go0=XZoNp+rifl;V\KLNF=#><O2I+55:0;/^A;)D9scZ;K7^S(.k-/gE@9`7T/HTX7+'N)1O&Se!:VZIcM:b'a=o!Y5s:Dl"p8Y/
%?8)R:/+:^NOek'M$>U<E7hWBY)3`U);p2EV_iS,3I4G@fAgr1bh.Csj;VclD4W*H.pV3`[DMm_B4.TL6)2V$g1R!Ur+\j4F-r+Za
%(N[*<.Q7TI7N9m\/J06_:&mT2j`<GaM13Yg!%5nu6:q]UCJA,:W`8PfQ*XL[1@b0K$9j]<'%E/A%4LL#BI=r1R"hb)PlK!MpJ?MF
%qA*k:X#o)m?p).8WpoT71ZqIqheb?Y'Pn$'%8RNpIm3ThSQkLr.`"?/MDGZiMg6Lm`R.aL.E2Gah]EK]fN[\Eof^,2J=$sZN89HM
%nm=R<\j",a4Ru@+gWAZH26;r]$6NgC.Y@\,2Q4hBUgO(*Bd.@%*_9T12V::9Ie'H2&b]Im$!Mb(0V3`HMp,;;@rdXDBM-.RWUO%=
%V><qBTb9dJj\k"Kp3&Y(E/'$%,=Ct?3];bH9[BJIaIqh>13-1lAiPQjq=$ulpF*S:5p>.kX4uMh3tLureh:%q`BeLmQ`Ph44KQc$
%PFTMTaia1j&9b]7-="r1Vj/3E-=u>F<cnu5Nl:@iFWX[n@r`#PV<_'T[.\*I0SZXd=@#!#*)pH?/ee"0mdIj!44L[f]IKlkA6WAk
%Tlqms_*H5\25%R?.C[1U'\D83RC1c[UEX^,$L'"8q\CJYNh6C43,DJ$=-IQ1\%@+"%N-(<4P>u21qbFf"893jr:@5T.!ED1X_85`
%,nY;QRpdNE3QZ:2qh@GVd4X0U498ARQkIm`8u09q7Ld#iKfg\V>?Mn5MgV7Y/=*1<iZ'qSZu5(GdsWkH[:KK(m4mN#i+4_Dr_N`q
%b&ph\+AtG+^4fEOZA;%8b9dQVId1/=R+D_ooOEj;A_?),U-ZcJ<rp![hIq7KJt\oXZlMSk<uf%th2-tR!*?MLcB@c"%hLRjQ0SEE
%C$C`q4p+J''eiHDFT:8QU=&.MQu(_cVkrODNLGAOT&qf0#.8jh/eq)9h,HOcdsk6qMbON/8MM*!r19r&N!(Y)OM?JM?**H`fa1q"
%N81GE.H!<H;+ZIY50p\%XEfTLPgujO_g02()3f8pBda=DN!>%XML3q-M(GmI!j1g"^g%[%EHlt]>C;8m+K*gsE-\P,L2YhR#8d%l
%d6JQm%BA+V\=69;n%htCe*oOkn)](aa@U=fN2Y%MCKRR(Yo><5a+74!PnK6\*Ro(!lC7;9D),pKriFJJWabsJ3c:K,dZ=KHN0FGd
%`K%Bs\((r^n:QEn*[rNP]YMD$FG^\b_oj"`:._bo<?,/NMPEMJ]M-!'[ro]0"km9^%CIAh+A3?G]nTn$lM6?=m6gMaOTJ1\#$BNf
%nO'3DiAuGO=`9nc(^a^>2OunacQ:8Ng%2?X]mRii]P%g69^EZ$Yk,/:oHhtk1=0]Ln]T=3q*[DaBZXqD@9#e:Ar?8hk.R&8.7EC_
%b,WJe(HEa4OL'HTP+EbcEMXGaBrEGGL(kNgr3<giS;*TB5ooXl[#KVk*CP2JBqb=<@ZA`,9.e;Sr5(a?.k\u9339Tc?]U[$R/M[+
%qY>2Ql_oeWgWL>jZS,H?7:NcK&:L(d*@J@7+=BN/j4ms5Qsetj%!83qY9kfH@0Ge$K2]sV>qhpcg"cr&%(GN`EKds`aO`6j3%7=o
%p(752krjed3-*9;R_lGW37haVX&+F`(9d^R]uj7sW2S\1?+`pMHh!sh6.b0r;3R->kmC:FT5"PqC6V%B(O0(>d8OE^&`Gm?fZWkR
%n(;!3)SCBgih0B<58<?`NDb2Je]Jd)'YEFiOna\B-<CYR<E(J)ajYsCVqMdkUkl5&8OR`m_E&_<,eEq^9Gi,H>AtCK^Q$e2bFTdF
%1O+5^]#'`O-<qi?8+<uN4]U<H2D)r2$ZfM;^Z$ITWjW'(G*72To.d\]BEgO"Sn;U\6DhnoGIf?E8YfA1iP:E<.!uo^^HHjF2"cO$
%,:oXIEjg.,V4W<!/B0m"jUMP0oj4:MZqi_hgV>H\7GFpJ:Q"%c=OMKcg\?f@*CI.#r7+j"c&c%B`M%Uj9+3!gW1f+9I>uqnSf4MA
%o>I,*RR6('d6u5Lc768V`%K&U1L?E=B9'(qK@jlcdY(=69foBCY)6B#L%ncc("OC0'l<,r[aaP'-it5@c'*Hc7if\D,\JUtn<1&]
%@C0u-P.MpGJplHG2u93%*[M8Uh?uMYb.P0"5D+)M]I[O?g21+o458,P`2>-l>-Lf2i\<-r`?h3s;Y.[)68u=+I*9UB:2X205,YCu
%5;QmghADWmQ08T]ZJF&bLET"m^SsE0h'!W&FE6o;]:%6@V+I&&XNhY^I+PN$+TF:Id83J_`-:;OPn"8s\O%tt6*mi8AYY*D[7AaW
%:=M.T8P4Dl,B?MF]Y?$8+$Yb-!"m>90*pWEPJT4(=RZ>egH-9\p,Ehu,bQ;X%LbE).?8Rhfc`i9,u#QOGO.RH\m4Z\Xn3PBMmIe=
%!GR.I:+Z;49>iI(O`4DHK\raSZ<[n^Vtc'1[S*F"G$OAH24``hE$`oH2)NZ_N.P[_/E`i[9&3ajn1,l*STeHih@Qat.0jTE[<+i1
%[gZ[9bO!Z[q/AN7hCh(c4PPnn>83dUY?r[U;a>`Jc<_M,k(3P3WkH)#VY#i22:7E4`rBQNCi!;8P83E[dOa_FUhD..^H>eF6T0)U
%S?dQtGDseR2>jOa2lhNC9hR.RC0dm<CV+>jCYL19;Rd/$)%+F1qnmm^1jOlNrU_VBb@(f0s(0X%J:-S/p8fMr:#1mbMH-R?`2<6d
%'&IF7=c0\Fm3T4kPkT3(9@"/?Ffmu?o<M8)Ue%>:0dqkR-:.2A>+#N>d$kg;KOieuCA;>?1osY(.tZ-AO:*7_-i#m\*GT!I.N(.F
%Ni0mE^f.ophSVs4oN&VPD<)"4r!fRc2^CR'JGna68++B`XOj7N)IX<BU7A1NBeQT_hAA`tm7h]F*%'VSWD7^*ZkhM!SUB'H/>+KB
%'c:&`rK/QU:Ea4J)gSgXis*moW5):t#,Z6U)boEr'@f^[gO^`*#VICZ#"ar=An.,ID4mZ[!]"S"7I+BE/F%f--\R5E)"A8*XoX`K
%KUR`gU#uaid";LY>*,Y_g)F&J*!d7&KB0Qf6(,Tl$)F6JltgaA'#F;<mM]Z?d4Lf\W]%I;H::rU-@i$PqCi#2.6t#($n*u`Q93So
%!0P":lB3V7ChXVBeYot4jebLF7;J9PZWNRf=3Nf7m2hLf*?DLZ]+skjbY<J.]W'G<`!Lc5')4X+T9FSZZbi:F)\JsJ^R'-IAd.Ds
%:*GL^^JhQ7LWhhbT#=F:AXf.GY``?dTS!O[9[+;A'[Q-[6F!+1Te[C'ibk]C`ceBi@mYSQQ%M+X4ApMF;FKUNfo1Bd)65(sH)VJh
%YBRLg+)"_=*].@9AW>j=\Zne[,EkD%ASX=1m-.qLNTps$M6#)jfc"B^K@DSkl91t`O1R:@Am,juTeV1TW79@tDOo(N%B".&]q%Z$
%GU0@jEZs,V)Id4;^h;ll.!YCCE0Q68e52fS,8[&620*:`,gk9)jWBK6=#K&Z'TXFGAn4\Xq!THmO[p)5E)>WNlQC>_N*WDfR<VK7
%(pUG#Z*,4^887<$\7rG7mW.e%(0MC/-Aj!@FW%ksTm^\!s"fHVJR)H3>,J!rco,$]qfqJ>"]0e:;:CDe42hoCSFeBYNqaC#cogRt
%P.LIbYZBgM#p_A=rCt+P`%H62eg&4lIR!`)fu.6P%!N)k7T+V`J&hBmhc!\7gjXTGZ_Mh(E?ml!].mWVnV!&YPi0qnAqeZq73$_t
%C0`%taB*&O^-%2VlS@K9'uUdNOc7%ZB+*&O<4L$odYrU<aClmu@)B0<'?*\c"Y<2;?^iPslsXt'!*Q>$`nX]7gaHOQ)t#-)6=+W8
%Y%"?C'!^E8^*dg]3*V\1JR\m)>;W2CK<04jnA)!T7T(d<T_<fE5oD^P2Hq!oP.CT+Sq=n3VY57WGFS$WfLS'&hQF,WA7N6r0Yb,r
%;!\)Wr3T.bqU+G(:-]P$Z?@rf!U>;I3@Qi.F?5^h[@t<k(S*Os)]Z]%i3rr.('tHD\u)Z%3Z-Tc6/sjo;kclV\XOg$[ejb)9u]Z4
%4'=ON9TGi#,FoBN[pcWA<%BQ.[tF?o.GU)/OaMaVL^=F;[5MneDq)jL\&uYA\72HcCXhj33KV*dRoT`AXZs3P(JGLJ;AB<D@g+j/
%<""0cFe)5#oCHUU=%%%4`mmDXPWMkd3"XKR)F?n\QDOR$^1sJi@Ul6mqDh98O"bj4U%J>(5MS&V.Y#L?*5K<rmPmj-Ojt5,4^s8m
%/It=l/+@gS8TOfLe%f]Q1GE/Q)laA9EJ;=\9AOaNKK43s\oB:!FidOHaaWJf.QG'847!k>+"A\3)n0uLeXNSQ"8?Ht>Ul\>%RduZ
%Qm@q-;aKXEiD*W%?WQm2f78]k=dfJ:bn".2a%sPDfi@Q];Nicbh7)ol#RAosqj1%/DK<]?ruKprkLs7\B"3ig"<3&R/@@TUC3**.
%L$'Z,q-+6bF@r_K'\I.nVM83__3Nj!759EA@\4^!h<iNCAEVV1O=a6LVTSRM)E?f.c"$mWe<O]XU3@VjNXdm8ck.=nX(?O-?*WqU
%J(bkWbcs1YW7W2V*:]kV1ctLcW.^\[9nToi5.Jgue&sDjlr.CISaE7?`$O"3FcW!OBG8tJZr3hO"]dQ_=`D`L9)oW2M%@k7Xma/=
%n@I^GkWrJKVPm&WUf4=I-?TJ[jO1_pN`dR8X[5\tf"'FY*cEP^ZA[RH'm0n+,,Zf!h7gjVfZ"r8Ss,^S.7YJc0-.H'2X+47!@WnC
%/MWYh&W[a^,"ohOW`5&V5`RX"o&];TW`KVB_?N'r)JkS<[_NgP+a&tZFZS?$fS<ij7EuA%-=#N`<_kj#=)%_PmgcBD^T]LH%3F.>
%>;ZbZFE]coSWb.>>>kmKM>mf+ileGq]f$iqa'6`O3o`N7L'nf@.rGRL1(?1oS0][Lfg`'Q0fX<1)F])(aBbc'nD-UX9sVC!%62fF
%[^d'XX!17("2IB^^+9U,1f`Kh2j+!r-u0?#eEc/nZ45gjZhc!+'pBemQd*nR9@e7P"AiurrIW5dGM8E8llk#u8$RioLH>l!m\,no
%>]DC<$T*Fo:QqgIi-?<An?Z-b4[_>o&+I0_mY1hCU5/hu,l8eCT*2mglU'*-f*)f:eKf1XA&[/QaD+V6ApY=)Ws.G:c%]Z2::LCB
%T?8,ppNFo?-S(9=pgKWMF.3;OI.#D"Om4=_!R;>!TrPK\VB'jkB%PR0(g(^%9KP!E%bD6*O$=V3lJ!=BaSFf4D0K:+MGH\:a\[eG
%!G(3*EWWgLiH6kuN]7,B#Qm46S-q2?j:uX,)Sn>5\HC++q/^XqZ.NkGTY"?J]WmIo^0]`,60$J@OaE/!@L$h>6*r\LT`;/fM%Cq!
%^]u3##rT`[74+5QOc:f5'`d1ViM];seK#AcCGH?pRMdiYJcL.2Z)[l*Q?]Wd$h(W!a\SZE.[n!b\L8S^L9q?=1H<%RF?5&mMGubA
%9_Jmapq.HB<I#h%KmpC$AG]&Oa%L3bosM0dS^7EK2bYh2X=;PLL4\(*cq[%(N:QOK;jYf8/n\6c3L<ar2)RFF3fo%$1c9-oqq_ZI
%ko4smb#dP>b+U0`iQpRaPH-g&Itj;f;EV,?L$/[ukqK>#C;rcfiis*(4;G6"F0c0TXVV(FmG@1h2jIqop?&)>j!lrP,^9-&l/>KN
%8D=-fc)XMYA-A:.asnm'!:NISE;I@rWXgX.9oZ:dQiJT`gCgLWFh?t*Oo6`L*P0/Flp;[^;c\aI8&Og=^;V8sp4:7aWI1i]=8I2]
%`j27KmbIMkl)4#iC[U#jhpo0[T"l\9:H]9*ZS86tL=rSIhp0KO?4(eQDlal/E,0'3rb83(.79#e3Z@eA;nf^8>mru5#$C@o_JEc2
%%l>c[:Cm6Q*/i70Ja-)'JdZ\[QB5L`$T(F=;+t,Y2nbLqc+0Rh9n'>qS`u"r[(kN[,o.h9%G]E;9]K_n,^@f\_EV:YK/(M]4*]RC
%G;5o9I]tC'[)B"NP6<23qA6r)NQ.FlA$Wr#hoU$-aKfhtb>ojpWnO=SD#h>J9IjUtKLTp1L<>qB7U%ecILPs9/V._W4Q'S;>UuL+
%#=kbn&/ef"fen3N0q(&o%IBIEIc:$Q;h*`cP/a_b&eGbaP?#7'@j0r[;Ofnc)ee`32%YNoPlL9(/Y_b[>92Iip#M9)XU9@),/%Ag
%(s<!dDZ1[Aq^$/8\@'N+&16u8"+C*K[%hRi3V!<:'%7HgLn5ZL=aX.*#%H+/;A?bqM#`XlDms_tm0/QG;oWc]lYU%l+.AKBFK9U;
%5HSbL%BJ'%"RW4sC/l:sBG-'>FhZ0a=)Fn?+0_BYUo&.:$1&YF88dG8S^W0Ha?9-8"-jO`q<M`BR0YVHiM-$0fU.O5RRFCRb1U!g
%*:28%b1ErdF2,BKLU2+T3<U]Qf-`h#ZU*!)ENk3]5tnH](i/%=d3O5K&YPM;=A,O6TR]78mND,#n.e2CBSfiG>lOhirFU8'5uiin
%3.ndb;bNLD=@2^Ok8"e.$u3H0>rl#fLUD+@B+buPN?&N10-H`PTGh,THPc449C<jOj,rHA/M#oj'D,.Xek10tE1,/khs`5)p0c31
%3cuHsLZBpjQC;Q0O=Mk3G_5T,?CXij`IVM%PF=7X.:8+\<G;R`Z"9Y;/[O(aV]2\'4Dh)`!b'f!F\@CiSOhCY[-hT4.0;]%MHpd^
%+IUIj[2$Rn[8-bOMb<.?e-:;Z?1+\8<7c[SiFFKS8%)\[B^sB9&N;EGI)p`*!'oOb0-dZ)"ml/qj7f-"6Zot9DJon?4N60&<:ue&
%1E8oWOVR>CP6dBU.ndb*_`+'f?^G.%1pB4*h6e!SNEL?12t38,4:i_?bK.n&Qdc,-p1BGe3iO%Je`T+hO2?grWg7@!"d/@^FOZ"5
%L&#A&\TF5\"a^NkZs.T?@]pi5Y`<EcF<a/mF5(!e/&*1F33N,$p-UNo-9i(3l-X(/W\%("^@JQm`C0Fi*<WfC=dlV^Gt=Np)?N1M
%3'll7rto7S*#<\=Kj76gd7%auQnXSfMm8`@eMHU'0582#GT&js/c(KD:W`YDToFPNN-h[/+]f?R9VDL%U>&XD/qRfb[;=ABLQljf
%AiXuaC?7W.RN2U'.Sqe"N4&6JA%16:KX"i5?=<!#7CAHbbGbiPF`n]=XU4#2Jn7t!.p#6W'+T-Gg=W,P]W^Fh7RA5LOe0]p36db`
%JkO"VRn]?4p\9@"P0$2:_si52gEn_O,r()rE3YYnP)9/MZL03["nj[`4`maPo,8%!O:]d59N20W/q1^KJWLO`#j#_?OA)/W=*874
%A*3r^?Cpg;k+9q05k*?(OnP-C_Z?pBo;3YG7%K.cF.4+hcmk[djhTVms4k*LqQl=u0at@Zh/l",Hoji2X%\Wegh*GEENW#B/tJWE
%&#<q.Q_/W:Y&@uBrh9(NOh_Kl;<l%i9@*P@W9*W-EN;VA!nl]._"InDl,UMFo/$?nhk"Ie:C7gM<Bacu[U,T-YGT^XV*(ACe#1K.
%Zc0BU+/[*)]j<W^pqCOr6!5YNTq,9o6GuuX3bkH1#Y9'$?#?L?Fgnd'q'C_R6C<ni2h"Ie4W7=BL;)"[:^&A$oOCF:Rs*"_"SYA_
%D3bYRDmnqe9?F@Y%^3.+Kf'ki,jB9@e@mA]3c4`e[.tU]&h';nF<:.V[td\4YQ@5rF+KAcD=U?Pb,%31KIMVLoP<?fR7"^L[pf\^
%N(f//BA79gaf#A3;kHjnku2XO,'S2P#ZL3<^\3-0]UrD.KamL_L<-s&>gb*#l:]`?qSD2^BsLY\(\_q)Xl]-K[C=?ArChG(C!H3Y
%?bT0)m%m^ZAmB-5FaS(q4p?&,?i8B(n=WF(q74!#qM*q5[S0S`l;`3DO6KG@R?g4`NDcP7F)Ccd4mMQX+AD+sfA80MpX=.j!EmK4
%#$.iSBmhjQm<CYc?=_!oMf/ha9TPfm^$aVa!KQjtStuD@.#XDaji.%8At!s+W:B.+`sjAjT7?5)2=k.S4*<8%b^3d=Pkm)^dN-mZ
%?/fju9qTG9G'Q6TMq@^qA)FKcq-3'nnD#q6+uF6b[O2(=O_bg7.lek/%>fP?9/kGNSLlF%b&4Yl<XER%(U:R"4d9$%bbj15m0414
%d>^4n1<6))c-/j?gfMJ:0K"0`6g]PP/o,(c2G\/l,b*/m##C>P%a%\"Tl:O(Zo)l'(;D#=/2V?>`g/<ETJsB6Q.bU0kKKpPIKLh:
%VkFnel"bJ*Y5l(SP*M%Q(;Mq5il"XR@b%^fN\,Xcfl,2HA0S.32er(Q%O8'CC[IjQnN^gR;`>,p4%MU#/r.QOn<b`<3[$aJI2p^'
%_IAEsY@BYV8iF&<C-.h;/jaD'_VaFOKsYrp2cPYt$RnPs?+&G4:!C*ljHDjui?kG/:%A'.IYEU+W-i]eC#3,0T_Jep7Vk(hU?q)W
%^!bDQGDOLD7&F3kTBWCu:$-oBc35$iiupi^5WogMT6j-qH5t%+e3Xj!7"LeVII(<i0RGu)K]8to2h*.u4(#PVg_sIQ'o5s`jDH^>
%%bc%4-]]>G::j#R.5Eqefc`c94\"0g8Q/OBT&8rZ9>V#;Aq%+(")-V\/VTs^<cHps_Qn0_]G4,`cYS@<;f04;g@,C&pIIaW1O"4%
%b28'#<Ds?GDU#RO[lp9$Y(s?+l+m0qjB]iM;VqYHN"uiE(\1O@cV03lBM6D20boT5IPQZY!9$9Yj?\]sni7naI7>R(dDq%;I8>O/
%<Je*"l3%DRf\>o1iG05a$Xu90gB#L-dFhqTbdBi=/iZT<M*[l8)J5a@qp`.RP4Ub;-,en\W\,;,dDOC[_aP2>`oXgSq=#6FkffJW
%%a#Ok^Fe1!%_npIPGVkNEFmck1GQnk<oY?He>X=X+/]BA[-G$?<!tHHB]32X=N-*Bf1r"a^re&$NG(poG[pr5)G7-qW$*Nl1<C9i
%7aSVTP;1*N$"q3bhA8na)BPF\kPE#ZrVS`Lhoo!;WKGqqJnV4s"XLTW4=_(&8;Fq?cl1Q0dlTgoQbuhYfB9`q!G_Nh=.N7V/3bdZ
%Y6HW[5GiU&XSP4*`&#5k_f<WK:lg?7F0aC68=?EX4"8rb&TFC-_M>;I)f*[&7:<#4eCbsO)uBZ3I!J`g"Ybo^WJV#$51QEZ\3ql0
%.(ptNk.IV1)eC:V9&EAnJO-5$@MX/n'*eE_MMaLC_@imh\kFn_Y'LJ4HLTF1>]@c.LT@S[`[OnQkmtMRcU2K"Ge%Q,H8>X1`c5`s
%Z.)6X1"d6rolZn-Wi4%2O#<s_LhQpa/L+h0aSnXN*PG]Y!3'd[@ddFXZM=RHj9Yjnj)Tdt4B%?Thc,hZKj=AO%#79SLO9J'kLRK^
%0*5Dt>VuMHC\(>RnhjRDW5Dl%_$YC>._&n9.r=pKpR*8V>C\.XYlP_\.QXmE(0g<^#^126I.'g>UU(7)B@R!%G\'Z&hAo#L0L494
%5S^9APW?*$l7)O+d;!4o2]/OsJXjjWjo*AOr#CGAj:HOC)cVnui**BASR52MNGSdOeoJPsF1W4fJr#f^4N',-+VmQAOt,^o_nT*E
%%@ddN##$QTTuCT\1(G0<*Yt%fAkD5dgS\U@Y?:;%3(dVU/-`3BF@DCc!$Wpd^GanhCY[aUEPnp2kG)uJ/5&]6+QlK`Fi!(F;V]\E
%55[^?qh7/SCTJ7orLnu]W`Ho=jK0Mq;g#[[J7^.I60&oFn\>KO_W__F!jPcsK+Sud.NJRmSMI"P4*LWjTg;gJDlS]#@nf\dlK+<b
%L0c3MII%?"l:H4&%GG>HKg]>=Q9u=$S-/bhLJ#U-"I!)g@b_9U>4NtX.i)P,B\T.;fYm!HS!]5:ia2ScXiI5?>"Mbk8K>TF"=q85
%ne[06(Y&%?FRE0Y2QAH6kfE'bS&b_bWGdXZ0Z[3.&F)?4W^MuJK>PK67`P+o)g`U^Pa(N;,._e?A"=+%47LNB+"7`]3f4j#^0GX2
%MI\GP<ETpr+BE*A=rtb>L,>mrr.#T^cASq#(bRUKe@%>mE`A";?H]%_m6,%IL'ul-W[*dIXgf(&__]U&eWh`;kX%hU!39AE1fua2
%ZEV_b:]n7UeSo!^mp&*0'\Er)GPAYpQk+\U^t)Hj^ik4#`W]nQ86t>ba+5H>Yf%dUa[p5!8U6!R5aHYp@=j9WZq!i#oi7FRM^"-V
%T8COU#8N;a4mZcQ/TuKF0Rq8/?<9QWGi[qImL2\8Yf^.S#MXqQ5=^9T!_ch+I#!k<S#/!^b#]2_[:#7D$*9Yn:_GAYjFKRWdFC^U
%'2?[E>`E1=3i7)L')D+N,RGe4!:e%Srj],$raK;24Ki_<K(`^DWo#`Im7uF=fbp3H=%UMGs6jYP)R4=TQ2In_Bu&F0VYXQLa(?fK
%(A?(^j4P!4do7O#D%^-B'.>I`T&"MLaGMW#_@1m(cqp3c:FbC)[(B/jo5<imlgLt\:Fs_FbHK;oXj'3r!0#$>UgSp(.#r&@YNpf&
%W@\^en[,:u8Qd?D+&HdMW]Zf@m^RsgE\!TC1Ssfq);<`!X&sr7h@m*#cVc>/]S9#3]%#=\>_H"iQ_qLb)',KLPme`#Fo/[&FJ98'
%>AQiad]m@i2`6?Tnh+6H)e+mm%B!YeImikTH"M8'NCu0T>V.BO<"FHeVRna-pH162?]/YuE^AZ4[%>^+@(jW\;?1`!UB@R8cm\lZ
%mfZpm7XcB-2:=<4[r[9!4&;ufc3%dFr&)YaZ66F$e4-i6#c1brgg7)H1Jh9\QU"8L0R1*#_pftIL(Mm-QIspCO;\V_#g,s,=u1[9
%#JCt]+'Upb,Y;ndF)t61Z%>f1>?DtJS`3\nD8#H96T:`B2YaM_nrQl-bH\;c#c!hVLLLoT1X"HfogQ(i:b*Q(:d$397Wh.bYntTk
%6**^@0i6Q_qL-jtX,NMo-Vt)B1`8Z=l"t!.C8O#P)pQbM[U&_.!#:n(5]"L_W"fWVZ*_?',)f&(Kr#m%>!"d@>UL;U:poq)j2XTL
%hNDMZk9,"W+:'<rZsAGODP`X<Pm!tqePFPGGDa7Xm:#pLl-G3p[ZN+!1`h+BCtK+oWlK"7F7Z]ZKW1c*+`+*d7KV._lrKcK9/m5&
%^cIjml6n0<16\Wo%Y\\n<W)F%RXb5l/hFAdCPiL^O7ag"/(QEeY]9qj(h@=fZ(^6"HtFnS#9dg9QW7t,E51u8<L<$,qEVpY7?ZYa
%AeZuk\h1q5Zqj&<WS-mBF!qM<ZT*]pF$!bnk/FQ25F/%XU;D.kGE<&tA7Ea<J?()t=9an)A4\d!W4_Q,3_h%`rr/cYIMsZ#NL@Ge
%e!p;6LaZs`=9f3d\b.B[A+R^c/WJU<]n12t#51(M+Mm%A!rF5I0?9]%8NKS"MJ9^g2^oIYHutuR_'MQ_doU+_$?sC^:]P&SL&_df
%$'rP]l$]T%-?&Zm,AerLUpjUX_7ea?QP4QS[N,-=#8*m.oQT(B%Vqbg8o."TBE1,KD[nW)$pR/N_64bIa*Pq)M54Bk#'?lk_V3;8
%'&4&;[dK5+Trun"TkGs;l_u!?.hn;X[2^pg@X@&,1IkVsGT[-&fJV04d!Aoe-L9Z5KYA\_eM`b:V?5ZrG:!.!e^Q-tc;lL=28_%'
%G5orA%Pn]=0OEtBF@ks?K0nZOFMI-Ekn#<*:-TbM&km-j)TGN1C$Eck'qud#a.b(GYphpgEO*]mr)T'F9RG[%kO%`Hg^@@5<SU7b
%kIM(aYL*s"lg1kmN8=Z5UbX$hd[.)dDC0Z![*3#s)0&j0aXP2IX%Aan(Sr5WUfaSO:*qHd9o/3>TX`QhcO:>7^'OJ"E"*ZWRNO^J
%fb^Qfg_.+^Kiu]d]YPEkE3cMsXj!nU\PlVBQpaJmCg/6$YC6<)7lhtVQ(3<A+A?Kjs-)?c%Ni?IV%-k)qJu03OXV"r1b,lK?9<!s
%#Be2=b@;j^7mJZ32pDG?>&Ng"o/0i*!""p_m:$EE2R+0u>F4iZX6#7K"pcH_l/('=W$a@MR,$Up//Y=`QkVIKfU<j^KS$k_>*0KP
%dPKsOg,!PC2oZ<4kTBRsIHYa?/Qa4+q^#BG5rf&Y(A+N9+W>4XQd9\UTBY0GHI.jaU\Vf6#BnggqVkB#!*gq"loUQJV%:[pQXcs4
%':Pj>LW,>]=.5!Z<5N.VFdG.`4EtloF=5=mPR]eQq6E0+%I[7&M^#FJIY6&q)Y2T#ReagK>i`rB"XIEEDlQfM(U!5$D5_RYgG:;U
%W(<*Li$oZ%p+=cJ!,g`CjO4`u]49h5^7BtQVPqr-TLf+kh[uk)P;M.]@3Jf,le^4[IB,aM#>RdO7;[,8F$gj_,gc_[IU?j&#%>o%
%D[c?l<$[Jf8S8r5>_J]R@i>iq2dG'pL*U=aGII>B`TdiL%0n(hS1>tR3HaD'):YUA+L^R$!@F&$jXjl[<C+Jj*<N44dZ!kEPrIlH
%5%'F%8`l?uV,Kb'76hO0ES.b@rV1(88N`0M"A1mUD=lrAES@a!VPkBkA;o\mD9@*-;<-\%QkY/.5PK?W:Oh,aaTjG=iHua*q6llr
%154o$[]u`OD=ZDi4RVY?RHTNpT6n2QD[>j!s*tEOr=2:dm^BeG.,s`BhD1FeJQP)$gOZ-V!cIgD0:0me)<igt)dLXW"RMmO9Nl!O
%FG%%qo_n#ZRiEH5XtB*+&@dXam/,u&Y5<H&BBE*8;r7ke`KTi2,!Oc)R5aYqP"oZ'*(\QSrbJ]=rVT@mYD+g-T"YA;.Cq>TA`/m$
%Xc[BuBu\p8ZT?1*)KAoC&H#MObX-B)7&V#T-S^V22t]K]eorlBahHAU#MD5a,u07m*Z]4#&Ek9O0sXdbXQEEVqDs:g<=.BVib7uZ
%6+.*37FGq_@QeA&+'bRT9]JN:LQXuBCc2lc=@^WCpiL4-_0,IRVmcFW4LLFB7a<k'Tl@IKm!=h!>^2p=bBbKMOiK,Y*j,T2Nc>Gf
%_ceR]0U*q`!_m)[%n+b@,Eqs\<Kn=>J;.'t3(7;L^PIs!"i<+`'JN[F&$-j,FFEFTQO$^H/ad`HZ-\1&Ah_]US0tj5ISX+BCZEi_
%b"L)\okSF3ZreXe?r@Z=!2::J[?.ViIjBU66.6uoVM\B\1UfX!So82kU3*P(FOWZ$rEQf>W9?`'ldh^oI>$8T9X\"NV[Y:;6>UFp
%KiQQY[DSaUWZY[dZ/<B>"H-1a)J.G5-m<t,?dL`jidN%QE#PG:n-<+H&='CXl$N?IgP,%0r*Uk$4H[nPhTD=^ZIi6QXka!2$;MJ#
%HKack2E]beQDp\`*NV!`bSUKon;E52REH5B",%4s63FJfH@X2?8-EJOLP3iD[N?\WCYg9#JY"*\7Am9'3Y:JA\]^9oKH&jK/trNI
%64$41eNbqeFl-,(2Zu3-csgZOn.GcZBA3+%HF9L&R,\^coqFr5%aThCDf\ONU-=p+cj]Zil.a/4k]a&4CL-&),%)1b(2tUp>"e?d
%W,=]7XYlWo]='TaB$9@l/cnu/h)#N)pNnb\OU'0,njWMjS5f1pnG_QKO`\-0AU1P?.*r'H-!aYU-6F#oo>8c1"?Wu$>O>,D0[Tp,
%KQS;de1_eq30Tee%(/q%c7pN>RRM1t'P[6551!gOXu^VV?pf**gXMMlNXj+)R\-"@<;:mUc[sKX,C?I5p-)"Z63t91ZTOogCX-5G
%.+ji-CPr;,&;$]saAfMUD&B*^dCiK4q2K]hSZOrbMBN4%\PR@U@et<5DYT-d@<NG<Q[O)'UR09cnua$d>GQ/tWP/()@[L8RoLsk=
%Gt%10^^<FW>7-oN/^V/dTq3[!Pl`?"=?4=!3*j(Cp31(`OC$R\T%E&ijV88Sj*I5UQu`kK!CdGhFU,_33)@B*pNia(::25jBs&$<
%QS'0j/3tlt/QIdLYuH$"LG`%7$]H)pa;o<*')k8"O)Aa(9h4tFQFlYVgb'5ZA]5L)\7K&03Z#?V1MLTp1d*IH.QrF7[AD7)#0PW(
%7rNikPosq8>:70:Zpq&pkW4MhWf'B4>iC%g<eE=bOf#.g'rXN`%o(3AY1cQ+JR7F0h+=CZK8r8?58_6Zhn@:lb]W7D26-,*kj"M9
%;pECW(0?FNb$NL9"XX)8B7+paf+0DjO,r6qK_g(H&ho<E\H<o3de>cg)2C.9M0Qb]+iQ!-WQV1[HjN.tc0G/:3;.)mQ7fd5_U<S3
%Rgfbq&a&:&Y../u!X@dX*a(tUh!Kku"_hVJoP>'i:2*%;,6_b_G.#[0Ct3BU!V2&V$J2SpC%@M.5Z='bQ^H_mOm[N>(e9]`^t.L+
%Li63@7#I.uGI$IK@GmF2*$VJI'Un#ed3<iSV"2=A.5a!]0P!Q?/Zl$!T?75^U?RKN!iUOr1fV?nr35Sc<5&"Ib.GUpk>D2uZJ%B-
%#@caB(hhSZ\RL5<8u^]0i"21WTY(iP"tb*IM%Dl"H;oEYRLdk/B5qAD)+J&G!L8?ngO2qA)$MfRI,L;a.ajFjpBLaJ<B-pJAZ%EJ
%8iZLJ.L^_m(8&sjj8qi.$?=EN#Zo.f((2$lE^8%Eo\1_`cZF(NGHWJ=pJ\u/Fr!0T(Y5@ts5mr^,m#$pPq9e-eAC_S"<NU@K:A^@
%LF^)=/_M'K#U&>QC4_AV>'%_5L:,70TSrr2,IT]M]q&t3\>&c/_Z<Ch`uPE,S`AF^Hpt8r13QB@%4lQc7U]cr-V_g(oA':k8I%Na
%^N'MYB]``bO$_b0.KH[+aihh(5use`FLTeh*%r2,@)#d1>4-=)cMH:e`\:JnGg4ofkQ;e?X`'ZHR3ZjVh8=IB^COLh_>hL.iGq?M
%4sT"O5_dfn*...q%1^Kj%bn\YC!dVMTe&AG9d*AInkG!#)Pg:(ak82VE[RC*X8keAQe+e/kH1saKpTcPh3?rT@um[lfUqB,"4rBV
%ZH<js[9?%;kOQ2#gCsgP$c41ABj(H9P8.`@q5Uh0fCuCo6#BTQP+R@Gr$lTbW844mYh6GDjL,uD&uaO0m2UE5l*Z)2T\*<2^:31f
%I2-G\G0S@[:4mIcXe=M27D/#5:Vdqh+OB[_j:Qdm/NT"d1i.cbLdi+qe(lG[Jd618>o^UTS_Dar%+a:fC`_Pg6u9"he-:c'5gH:i
%0YbfX-pEHYETEOf!0Z#q:",oH5Amtf\%BM.ZWgbK5WX3F4fA5^)*L`W[tjpl]lN`N$4T'^(eoj'F>Hsm#'`:%o*hXrjJO-2FWe.?
%$lbYG<T2&BQJ1'V#8(=[<2Fk-6j2fp-kl/NJV[D^)h+rq7^*Yil/7+sWGYbuO'im<q[n1bYmu@3BbLnrBEpkii(0a:EcbU=\O4K<
%>/q]$,[s3[T7NRQ*c>/H#Y7-o5jE=;3=-ElcYZM?q,mCi=u.N&[8Vj8-?cK-lVhp+od$#irdt8u$8:af_tPf6K0[nlFVG<BBi3k?
%LKcK!fu@>H,FH:ge4o!jI!^$BCJ`>Z^2>#V'u`hhdNAXs.Cr#PUR,`/E,sf*L4VG(*A7@[5E@"]GbCEhh;'BoJ.I?O;%s(_dO!sj
%#MQibg_5$5Sf=/_e_&P_)8/a81CYuV$Q8D!mN`sn737F8*qgE$%l<[mm=(JbaQ"26T]JA/NU9-p`aU<ig9`sG32eNb76[uZF#K'9
%l[u^P(sdlh+a:lhg/45,Uj&]udn$i@GrmF"nsg`b!FbXfQ^pGL85G;[\MF[rN_jMu\g7Y*&uiR<j:'<4n=%qLU0AC<b=&EH5IWa:
%MT^BH:lM(K;[M=fg#CZ#obf0D/P[WVc;KKDgMqCb`MF"Uc\bs4^,:b,HmA!6i".ckYobo$/iJe(<2bbA%%W"P.9MRn.Y/2']>VnS
%kc(Kt`4<R$`E>o%KKg<4T0K5F.<r9i3ts_;W%gggAWP.+iW99l`FA"qqS.YR%\EtC?i%gIY"/f+pc-Z4TG#4d5,_e)J$ubp?UZKq
%K:GijKBP?d#g<#D:o!I!/j1*QW3glT5UZjoOU3dgm?J?%VF<8/G/-=a@TS7,I!)`:*WX<Xi8L=XjFH6LjSV8$=:cS6#di*4WCm@9
%AS%&ia6\^OS@ba+Lu,OP%6?S;U[UY1U54ml`u@\2]Km!N&4[fQ]bD14p8Kc@O&]]$fu^Wm1hB_D99H$:l=0UDSng%5q8Y$sc[*sK
%VP[aLMXr6&Q2V#-2(quG^T3.HlcBW;0KEbnbXQSH!8%sDF$-G\CCL+*DBok[L$.VFZWC1.-.30fTh_4/.<AV&@p6*Y:3m3[bS,A_
%(>\1R?_5^i!nn&@9Zur_C>K6-3WTGL@u9og]kDNM@T]JmnmT=+-(o!%YrJM\BaH<o\U9e,Am@frAbDA)'U[;sReH,'IHhjh3`,-K
%9Nj_K(`(/?,NG)a_)OgE"=A7VAjh$8c[D5NhX4KA^$Ncsn@?;EFegk*>;_!P6o:8X+<N9hM3Ym^4=7==:<;+tZcGn^'kbVLld?:C
%1!j#G@4(%9<-Goip),[3aF8`>I?kX42?3R0Q&9tnj@,`5GHh!jfYk:hC<c!HZ,PY!+Ne3MYTe4pdD/DIp+$maL4`sVEkm_+F+cKQ
%.hCmj!8rIlEc)jR(]hOBBspu\7t@SIOTVno)^@J=<_qQnBK"?net.R^6+>PM=2\#HhEP%2aNAc.Z+_OJVccgdLnV^F4B#3hn6Iso
%f@ZL[-<+0qUqR?!-s(+iE%.cC6Ld?3QX,ji!od4l);4YrMO+?'dot,FW<]15-HgEqE0ZEtC;8TG/T(3'\YX\.".).<+i%3.BPFa3
%Kr`psK87+NPg?K0MeR,?B,)[LiBR6J#'al:Qc<btj9-T2n0RC:`GqRi#uW^lg4If]`^OPPi7(/HQiP@7Fm?Rbh\o=I'#d(i_^dOh
%N3q9#nRtDW<Pubf1FFXG*-?<12]/YcHK;B+H3NhlC/&-:bPSjO3%?,a7j&I9bLZpQ78(s2Q@Bq9[i5,"m^k5VHm:!TlOeIC"tK=,
%?bf!<Sdo<%7G)ifI*dqd'eV9IMH7c_UgolPlL469'WaV9\i?NmV]((6_8$@ZWLf_/7igINE2mIS?k)@"/b05Z&!T0[/4HlZE:bf?
%.6+bgg,,RllbO-m%dKF"O+>*/j)$o,r[ccN59kBO_33Ls&0+tYL0%hh)O@6$Jf[c;g#,/2G(o@"2s+"tG6d]eSVM&*>Ng\C[/af.
%,ScBK>#k5.YjS:S$r2uurR!))]Gn`e7(+1XO?N-&,;b$<2Wl8NIWliC+.FIQ@F*H3=WtL)TnZm$K.Z&6?;h#o/U28hV(O=:b?7/9
%d;jX:c3p:N/Yo?I%"]E?6TUH^"Nl$U>8i4V#kXtrB=EO*fujNm<Bj!?DC=GI@P>9Y7f8<lEg'3CS\,R[%Z0`)I9BNCD-JquNq!gS
%D(ccUU/VjS3EGK_YjSDpWa\F,$9Jp,/9PLoC(,Y\7lA?!8t[>YHT!CoH>pF-PJH`g3/7WRV'?<+1U"Tc'PD&t(qgg!7?Ia_^9P+D
%eVL3[jjmUeYr]R:'k_>rAI"",RKBXJ&0#:NjECg2B8S\I+^j!9I=-^f+<!mI_PM<J_kh*k6Ul@`'"aqg"goO[c!6'!9+`[J9e8YB
%][iY5kk^Ht]4;XG-=pUDVd@Ej(S`Ekj5Z^9;P6L1%Hm+ZM`%6/#P9"'@VGSXCX8CVU-U`<8o1%`X7Cm5?5bB"'PW^kAAkgNGk5D8
%AeJaHj#Fb&LlORUD_A4a)'XjrF&0KOf5Od%mHg>GLI`b!?-RY7DTGc0r2.aATtHmfoRS`jNR\P?\.<N,-.<T",tS>`:`Z`$lSK2>
%EF5*RV>tB6qa[^3&QPG6B;HH0lRIjD:[:I^:o6NA+Yg^%6,9es5-<7]70'UW_fbX$V?p=egJisgXFeFCf:>E/?V"=S2gC"$TcaFp
%-YtE?*28rMNej48j*+U7bDEj^@0^>ZS5!#'>p3BkJNMRtW+?K>Hr-'R%S=At3)e/l(_::`!!:s@!0Y8/R)[3loUl]QrU\[R!rYPd
%&.4IeN@Zf:/I)7_gX:CU%4WobD#O`ObPCA()I2;m7BPf>bX*r8fTRQGYm";gD9M_6-_W:\7)si-THk$Ba<cIFp06^3U\6oSk]`o+
%SCuN8=%7(coW3Qab:6Fd,I<]30H.DM?-'qslOg#CVG/<t1ZbIg%Uc/FqO\,#O5A(5NfK0G!0%QOq`FfT=V<O/A#'fpN<#l*#o]cn
%rCZVPBVH:EFneZin8YU*Fu?1n808(slqdHP\[UlOE#T,"Ye7Qi>mL-SV[He+=]YSC77qX"V1B*bTn_8p"t;'to&9]W=P6]-i.Y\n
%G#Qp"!>fU/fGYK-o6Y]MSHC(\r"`K5OR>.f<OJ)Wq$u[>4J93N;YrgO9s"FEX^UDQM!P1nWgnBQS9_';$"!B]lqt\p7>5\)<?^`g
%8H2n3P5#<,AdEl^SZ(\B&F^c8MS?d]I.9'-\*F=Drd%/XVH'MT9J@dLT$Oen;4+rLbCOJe3F71&mCIR14,4*iK+T.2d-Z_hA>Mk#
%#,(gXPO3@m9b'\)SZP#YL?fg$^\2j(`)n'>>#WKU6(&GfD3UmLoqOe8e!Xq@7NkXVa)O727IM>qIa,pR&lTEn$N$-=)-X,\0[&[7
%bBpAR\!4adK7r>C";Hl\3M;+L$g[BUSm*'L8f;fGBN@&[hYHq.pQU.sf+M-K&;2X\%ap(._(@m[&AN0rU8E*q,JJQZ?4>nY]UkJO
%"^I"O)86WGl$WB5QV2f,(A^-QF*2>`Xnq/@o+@YOW?;X$RNRB0YbOt"^O\A3mF`^GOA(t*;YGP+F@tnD,Q1W?PElS.,+0]4#RgHG
%?moju[5?Cj&fbuLCI7Xtr,a4?g;uL3JLt8j@WogPG%Uf>Qnq&;6#bCQCE8YW+`D6pa\1P_8/#ufFnj<RB^K1l>nRrg$T[b/mun_'
%UcLJZe_oFo7[3fdOcn5f\ek,5K5WAjfNtQhOUoJje?%jbaqY(O'R3`InL'0L8j>.<:OD9)e]L/tI/2q@qh'N*QREA3"jU)jP;WGd
%!1fDSHjB6in4c"."ncRhWd*+$27gnZ@#C1jC9O26n%7*QTO\<IdA.8M7,149KiM"Zb/9G;5tB<dG!@6Be@YBH(&-00]D0Fb#E$iu
%K"TIT''+_k+K&i+Qn^?oE3$SocU,Zp6%S/sdPSENXR,-FR8h4=-/H/D(joO",^Y4`j-WQpWa3kG4p5TdRN3Sb0g/A;q39J_8aXa)
%dHjMC7,o[8KDOsZ9+q'qln6R1pOaA`/'3glWC[L,;ts/h1*!gT0OK%/G<P7tQaqBYop`5@]-nEP>r(@pPLqc),Co)LTgHFUe00*;
%7[@B.45kLqZtMCufEBP+<[,EC0i+s\7aS@hmH'J(l,Qg=h2<LLN%h6t6OZU$I_c(dBShK#"L4YB3\oqqQ!B[h2`<sVf<*^\;DaK/
%"7<9:ks&u^HTGWqWlBXu7l*4lWsoeE3A_9\%Go7^HMd6NRt3cO)9uKoF)#S@`E65@aTV\nOTtlSF]+AfG0$9!)gld<6a^MV,rS3f
%K<4Lc"D,\"Nj4jc#;\sjSEa';WfS0\`/(4$;NR:+\u"mE.]`p4$-<2)UPMOX:jsa;^HiZUi17tMZ$udTlCB)eOUq^E=ZK4u2$B2W
%los8Cl<qC<ER81;@@Ici6Eb-4)=Dt)A+YUU/2/XVM<%7;QDYdtL7<L?L8dR=;.79Qjg=L\*+pWZm@&:G6s:A#C,55$*!?M9AA.O1
%P4ZHLI[\K[C87VG#?$kmZMc!dI"C/V2#:C'[r-Kbl<1T$==!b'hMQdt256%;17H4nh3m5Em=gs$EZaR<7@ZrfG_]eFJK4m.[TB?r
%QG[G'X1OE<T$lSt%q0N;^Q=MT`#4"5]e/U(<qX'mLqK*.hq:O+0W0^Da7]4$9m%[cUag(j/="TR[4$DKE21oV;/[as5#Ff/,]X$,
%#uY5ol;CP.aM"A0<L!V93BHTIa_]/A]JUGjn3WJS9?_KK!Y9It.c0d^Y3F2%R)'ep?tfNP+mpRK1Z=U$A)Ci+,r:<H#siObO4/j8
%,X1jn</n]+F4`@ca0E_b2Z9PZ5,;qJRd'@Np3]&;Cf.!=bXkdl&_^sf4+i[t"uI@OqnUho+3hV,d3M#MEa6%?@$lKgeiBS]@5?aq
%<!!P&9m.*6Hp"0>-NOO+Xe0\8Q^L="4PVPIk*rT&YU(H!-fV-sIW1-uB(T+X%`ISTa;H#JZ'&Hm`-]'ZMS3<SaXG7]-;LpK+5jD7
%mRadUHF0hM6f<9XQ4TM3W9u*Sa74ae@FUK,2.;ul'#k(>bsBJ)b^O6Mn-nWdKaF"AZ/\C9iEgTeE$Q(iifUM&a-aiSF+04p;n-11
%T'P#?JX1\_H,R!,'\a(<f2tWEK)qgrp0>W0r9llJqg\O!hu11e3<&5.s6G13_]Sp)YCHPLJ%?''qp0cie$&f5c[Yl]s5V]qs5Q?A
%kq@Pa?bcU2a++'>J,AORs8)']]`.QHTDncS?iKn?J,],-^\l9irGPeWdXB"$IeV1gks,++5Q"mFR$n$~>
%AI9_PrivateDataEnd
