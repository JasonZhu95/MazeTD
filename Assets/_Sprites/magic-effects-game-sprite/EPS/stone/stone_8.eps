%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_8.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 255 266
%%HiResBoundingBox: 0 0 254.1020 265.7080
%%CropBox: 0 0 254.1020 265.7080
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:38:31+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:38:31+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:38:31+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>248</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD4AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FWF/m3+Z2n/lx5QfzDeWkl8zzJa2lpGwTnPIrModyDwXjGxJoflir5U1P85Pzy/MoX&#xA;02manHoWj2is0tvYS/ViqhSaNIpa6csvyU+2KaT78nPOesWn5Bfmbql/qlzNLGv1e0knmd2imu4T&#xA;ArRsTyVi8q9+oGKHh3lfzD50026tLXyrq2oW1/eSiKKzsJpoy8kjBUQKjAOXY9KYq+5NS/Mqy/Kz&#xA;8u9Df8xdRa+8xPbpHNFahZLi5nUVk4AlFIjqA0jEA/M0xVMPyv8Azs8j/mPFImiTSw6nbp6t1pd0&#xA;nCdI+QXmCpaN1qRurGlRWmKs+xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoDUtf0LS57W3&#xA;1LUrWxnvmMdlFczRwvM4pVYldlLncbLiqPxV2KuxV2KuxV2KuxV2Kpfr3l7RPMGlzaVrdlDqGnXA&#xA;pLbTqGU+BHdWHZhuO2Kvlj8z/wDnE7X9Cmn1z8tLma5t6N6ujmTjdRowPJYZKj1kptwb4v8AWOKs&#xA;e/Lf8sPzC8w/kt5w8v2OmTW162qWNxBb3am1Nx6KuJog03Bap8Db0374q9D/AC5/KTy/+SPlm8/M&#xA;Xz5JHda/axH6raxEMkDSfAsMJP8AeTy14luiitNqsVXzp5u88ax508y3fnHzKVmYtwsrA19JVUkx&#xA;26LWvpR1q3j33Y4qxbTrnU7ac3GnTS288S+oZoHaNlVSDXkpBFDT6cVfoF/zj7561rzr+WVhrOts&#xA;smprLNbXE6KFEvovRXKjYEqRWnffFXo+KuxV2KuxV2KuxV2KtK6OKqwYAkVBrupoR9BGKt4q7FXY&#xA;q7FXYq7FWE/m1+auhflv5YbV9RHr3k5MWl6cpo9xMBWld+KL1d+3uSAVXx1Np3n384NRuvNPmXUR&#xA;b2qq6WTsv7lApJ9KCIMOEa/tN/xI1xSAmnkj89vzS/LKZNPvn/xB5cjPBLe4Z2VVr/x73JHqR9Nl&#xA;cFf8nFSH0r+W/wDzkd+W/nm4h063uX0vW56LHpt+AjSP/LDKpaNz4CoY/wAuKHqWKuxV2KuxV2Ku&#xA;xV2KuxV2KsQ/NX8uLD8w/Jtz5cvLhrMyOk9teIocxTRH4W4EjkKEqRUbHrir5Q17/nEH81NOsL+5&#xA;hubHU4LCNpbS2tpJmnnHIErHE0agPxqePLc7CuKvIbaaCwtNR0+9glt9QYFDzBUqy9Y3QgMprir7&#xA;B/5wy1P6z+Vl5ZnZrDVJkH+pLFFID/wTNir3vFXYq7FXYq7FXYqk3nSW7i8na7LZMy3kenXbWzJ9&#xA;oSiByhX35Upir8/Py6/NL8xPI0zXvl29kOnxuGvNPmrNZvy3/eRV+EtT7a8W98VfYX5Of85F+U/z&#xA;EMemTL+ifNHEk6ZI3JJuClna2koOVAKlTRh7gVxV61irsVdirsVWzTRQxPNM6xxRqXkkchVVVFSz&#xA;E7AAYq+JPzn/ADi8m/mX5i/Req28+n6Xos9zDomv2LLcllkZVaSe1cR845PRVhwkDKP5umKscl0L&#xA;8z/L/l173RL5PM3ksfavdNdrq3jUb8ZoyFubWg6q6qPnim0psfONvf0hkjWGRhQxP8StXwO33HFT&#xA;Jjl2kM3mC2j0Y+lcyTRpG0VVVZy4ClCOlDTpih9tfnr/AM5A2/5Y3mlafb6auq6lfKbmeB5TCsds&#xA;rFAeQR/ikcMB4cTXtiqX+UP+cu/ys1spDqrXHl66ag/0tPUgJPhNDzoPd1UYq9g0bX9D1yzF7o2o&#xA;W2pWh2E9pKkyV8OSFhX2xVH4q7FXYq7FXYq7FXYq7FWHee/yi/L3zyobzFpEVxdqKR38RMN0oAoB&#xA;60ZVmA7K1V9sVVPy3/K/yp+XmkT6Z5djlEV1Mbi4muH9SV3oFFWoooqigAH44qy3FXYq7FXYq7FX&#xA;Yq0yqylWAZWFGU7gg9jir4A/Mz8rfN/kXz/qOiaRp9zdaZqLM+kSQxPKstu5LKlVBq8QqrA/OlCM&#xA;VSvyf5isPy51Qa5EItX84wq66fCj+pY2LyKUaWZ0NLiXgxCpG3Ba1LFvhCr3D/nH7/nJvU9R1x/L&#xA;P5g3okuNQmrpeqyLFCqSN/x7ShFjUKx/u28fh7iir6kxV2KuxVRvbO2vrOeyuoxLa3UbwzxN0aOR&#xA;SrKfmDir8/8Azf5MT8sPPWo+W/M2n/pHQLwF7G7I4u8FT6E8UgoVdK8ZFB6167YpCUaTeeZ/Juqr&#xA;rfkzVpomAB5wn7adeEibpMvsy/Rigsra+/Lf800K6itr5G/MBvsX0amPRtRkPadRX6rKx6v9k71q&#xA;SAFUP+Xv5R+edM/OTyzpetaHdQrBqNvdTTBC9u0EEgmMizoHiZCE6hvbrirIv+cp7sX/AOe0Nqfi&#xA;FhY2sNPD+8uab/8AGXFXnd1oOl3FS0IRz+1H8J+4bfhihC2mla5o92t7oGqTWV2hqk0MjwSinhJG&#xA;QcVt7F+SP5+/nBe+ftH8o6jcJr1reXIgufXRDPFCAWllWePiT6aKXPPl0p8lL7ExV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2Kvmf/nMn8yZLLTLDyLplyUudQ/0rWVjajC3XaGF6dpXqxH+SOxx&#xA;V8sW3BHjtLCE3mozsI04KXJdjQJGq1LEnYU64q92/Lj/AJxE80a36Wr+ebr9B6e1JGsEo166Dejk&#xA;/u4BTx5MO6jFX1zpWv6BqjzxaVqdrqD2hC3KW08c7RE14iTgzFSeJ+1iqYYq7FXYqxD8zvyv8s/m&#xA;J5ebSdai4yx8n0+/j/vraZhTmnSqnbkh2b5gEKviHz1+XnnX8qdc+p6zb/WtImc/U7+Ov1a4Xr8D&#xA;f7rkA+0jb/MUJVS2LStJ8wo80B9OUD4mGzgnoGXofnioD07/AJxk89ed9N/NHTvJK6nLf+XrgXEc&#xA;9jKxeKEQ28kweHlX0uLoAQp4mtOtMVZV+eP5EXHmz817zUtD83aJaavqMcDz6LqF2be7j9KBIFZE&#xA;iWZ2V1jBqVHXFWL33/OHH5owwC4GvaTI8Y5P6lxdJxp/K7QEdfGmKsbX8hfzLl1JdKg13Rp7+Qss&#xA;NrHq0Jmk4gk8I6iQ7CvTFX0N/wA49f8AOPkn5dvda5r1xDeeZbyP0EEHJoraEkMwV2ClncgcmptS&#xA;g6mqr23FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUPqMt1Dp9zNaRevdRxO9vCejyKpKL26tt&#xA;ir4S0f8AJj85/wA0fNl9qurWE+nyXU5k1DVNUjkto1JP2Yo3HqPxA4qqCgoASMVezeY/LvlD/nHH&#xA;yEmuaJZR615xvplsbfVdQWpDujO7LGp/dxqqH4UapqOTHFXz35u/M780PPx4a9rEz2D7pp8NIbal&#xA;aj9zFxD07F6n3xVmv/OJXmJtC/N1tElP7jXLWW132pLCv1iNv+BjZf8AZYq+3sVdirsVdiqB1zQt&#xA;H17S59K1mziv9OuV4z20yhkYdQfYg7gjcHpir48/Oj/nG7XPIbz+afJkkt55ejq9zb1LXNmnU8v9&#xA;+wj+bqv7XTlirKP+cLfIrM+see7xKk103TWbqSeMtzIK/wCwUH/WGKvEfzQ09b/84fOUMcpIGq3z&#xA;8z8VCLhgV/2JNMVYrqWjrYRhpJ6u32E47mn+yOKvef8AnFn8jdU1XWbLz9rKyWej6dIJtIj+y93O&#xA;h2fcf3KHv+0dhtXFX2RirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY15+/MTyp5E0OTV/MN&#xA;4sEYB+r2y0a4uHHSOGOoLN+A6sQN8VeE/kJ+dX5hfmH+cOpJd3Ai8t/Up7ldIVUMduiSRxw8ZOKu&#xA;z1f4iT8W+wFAFUB/znFqhL+UtJQ9ry6lX5+jHGev+vir58S5WyVZOQUIOIr32p0xQyL8nNK8467+&#xA;aWjaj5Y097qbTbyC5u5mBEEUSv8AG00mwUFOQpWp6CpxS/QvFXYq7FXYq7FXEBgQRUHYg9CMVU7e&#xA;2t7aFYLaJIIUrwijUIoqamirQDfFX5rw619f80avrEp5SX881wzHbeeUyH9eKlm35E/loPzQ/MN3&#xA;1FWPlzSQtzqSgkc05EQ21RuPVKkt/khqUNMVfecEEFvBHBBGsUEShIokAVERRRVVRsABsAMVX4q7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+OP+crfzJv9T/MSx8t+X9Rmgj8vofrElvK0YF9IeT/&#xA;ABRkGsUYUV7EsPHFXiV1baxqd19b1e9mvrggKZZpHlkIHQc5CWpir6A/5wdsUfVvN2oUHK3gsoFP&#xA;cCd5nNP+RAxV59/zlD5xfXvzh1CNd7XQVTTLdTtUw1eYkf8AGaRx8gMVTf8AJ3/nGfzN56NvrvmZ&#xA;5NI8svR4hSl1dId/3KMKRoR/uxh8geuKvsfyt5S8u+VNGh0bQLGOw0+HcRRjdmPV3Y1Z3PdmNcVT&#xA;fFXYq7FXYq7FXYq7FX57fnn+W+p/l759v4OBbR9VaW50i5/ZaGRqmMn+eEtxP0Hvir6Y/wCcQPKk&#xA;mj/lYdUuI+E+vXcl0hIoxt4gIYqjwLI7D2bFXuOKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ko&#xA;fUpLuPTrqSyT1bxIZGtoj0aUKSi7+LYq/Ml9TvI9XvrvVUll1WaWRrszfDJ6zOWlMgYVDF+u2Koq&#xA;HzRFHUm0Jbsef/NuKKfRv/OEGl6rEPNOpSQSx6ZcrZxQzsCscssRmLBa7MUD706V98Uva7v8jPys&#xA;vPN8nmy70GG41iVzNKZWkeB5ia+q1uzGIv8A7GnfrvirPAABQbAdBirsVdirsVdirsVdirsVdiqU&#xA;+ZPKXlnzPZLY+YNMt9UtI3EkcVzGHCOARyWu6mhIqMVTK2tre1t4ra2iSC2gRYoIIlCIiIOKoirQ&#xA;KqgUAGKqmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL7ny75fu52nutMtJ53+3LLBG7ntu&#xA;zKScVVv0TpX/ACxQf8ik/piqJVVVQqgKqiiqNgAOwxVvFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXE0BPh9OKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVhf5j/m75N/L&#xA;z9Gf4kmljGqPIkHoR+qVWEAu7qDy4guo2B64qyXQtd0jX9ItdY0e6S9029QSW9xGaqyn8QQdiDuD&#xA;sd8VR+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVx&#xA;IUEk0A3JPQDFXwl+ZnmCT84fzokis5W/QFjW0tJ06CztyTJOK7fvpCSpI7qD0xSFX8qvzc1z8nfM&#xA;c+kXvLVPJ93MWljTYjcL9at69H4gckJo3j0bFSH2xoHmDRfMOkW2saLeR32m3a84LiI1UjuD3VlO&#xA;zKdwdjvihMMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VeL/APOV/nfVfLP5ZNa6asiS69P+j5rxKgRQsjPKvLs0qqUHty8MVfPf5f2mj6T5BnvrS6in1bUy&#xA;sdy0bAvEpJpCR1X4ASfc/LFkEm1+0TUIDZcOR6q38r0+GhxRIvXf+cHtU1Bl816W0jNp8X1S5jiN&#xA;eKTSeqjsvYF1jWv+qMUPqjFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FUu8xeXNE8x6Nc6Lrdol9pl4vCe3krQjqCCKMrKd1ZTUHcYq+RfzO/wCcWPN3lCWb&#xA;XfIk8ur6XHV3sgK30KdacFHG4Uf5I5f5PfFXlWn+bPWjkt7qkF0SSSdgXHhX7JqOhxW3vf8Azg1A&#xA;wt/Oc9RxkfTkA71QXJP/ABPFXknnz82vOLfnTqnm7StQkMmj3s0GlmvKFbKGUxLGUFF9ORftjvUm&#xA;td8VfY35R/m15f8AzI8tpqNgwh1O3CpqumMf3kEpHUfzRvQ8G7/MEBVnWKuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvlX8zf+cpfPOj/AJmaro/lS1s77RtGY28s&#xA;UsEkrSSQgC4dmjdWUJJyQU22rirNfys/5yw8pebtQttF1y0bQNZunEVsxf1bSaRtlUS0Ro2Y9Ay0&#xA;7cq4qmf5x/8AONnlTz5HNqemCPRfNLfEL2NaQ3DeFzGvUn/fi/F48umKsU/JH8rvzA/KbQvPWqa0&#xA;bQRy6f61olvKZWeWxjndXrxXiv7w9d9+m2KvlPy/f2Ft9Ye8k+Oai0Ks1RuTWgPXFBTryn5w1XyD&#xA;5ptfNPli4Dxo3C4t6nhJExBe3mHXg/HbuCKjcA4pfoH5J84aP5x8r2HmLSH5Wd/GH4H7ccg2kien&#xA;7Ubgqfw2xVPMVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirE/zF/M/wAo&#xA;/l/o51LzBdiN3B+p2MdGubhh+zFHUeO7GijucVSX8lfzm0/80NI1C8g099LutNnEM9o0nrjhIpaK&#xA;QSBIx8XFgVptTFXyb+SbyJ5z12LUww1lo39UyU581mH1gH/K50riyiknm3Q4LH8xtPs7YfVzLdQj&#xA;1FFN2nAV9qfFQgnFBe8fml/zlh5o8qfmDqXlzTdCtJrLSphFNJctKZpRwViy8GRYxVtqhtsUJz5S&#xA;/wCcwvy615fqHmiwn0J7gGOVnpeWZVxxId0VZADXesVPE4qxH8wv+cR7DUrN/Mf5YalHdWlyvr2+&#xA;kSSK8To1T/ot3WlP5Vk/4PFXzRqek6lo+pTabq9rNY3lu3C5tZkMcikb0KtTFX1X/wA4Q3OunR/M&#xA;1rMkn6CSe3ls5GBCfWXV1nCE7E8Ej5U6beOKvpzFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq4kAVOwHU4q8D/OH/AJyr8u+V/X0byj6et6+tY5LkHlZWz9N2X++cH9lDTxau2Kvk&#xA;7XdR8x+ZtRuPMfmi+lvLqU/vJpm+KnUIqigRBX4UUADsMVe+/wDODs0y3vnCEI31eSOxf1OJ4ho2&#xA;nAXl9kGknT+mKpF+f+iDyH+fFn5piia20fXON3LKgqhkP7q9UAbljUSN7vikMR/O0paeYNG1m0dW&#xA;kZRMjA9TGVKNtvSgG+KZJR+ZmuXR/OXzNqJsj68uoXCW9s4IJUnhE1NyeaUYU612xYo/y3+Qn5ve&#xA;dJVuYNBOm2jCou75fqUZB7hXHrOPdVOKvrr8hPyu1j8uPJkui6tqSahdXF091xg5mCEOiJ6cZkCs&#xA;alORPEbnp3KrN9W8s+W9YdH1fSbPUXiFI2u7eKcqK1opkVqb74qjbW0tbO3S2tIY7e2iFI4YlCIo&#xA;60VVAAxVVxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVivnj80fInkeOJvM2rR2Mk6l7e&#xA;24vLNIqmhKxxK7UrtUimKpRpH/OQH5M6qQLXzZZR1/5ay9l0NP8Aj6WHFVW//Pf8nrGT05vNunOx&#xA;IFYJfrC7mn2oRIMVYj/zkb/iLzR+T7ar5D1UXOlo31nUhYScvrViFZZAkkdaiM/E6V3ANelCq+Kb&#xA;K50u1tlm4tJe1IKHoPAg9P44qmtnozXkcWqeZLs6RoLnnFRedzcqDQiztyV9Q9vUYrGO7V+EqvqX&#xA;/nFH8wtL1gat5X0Xy3Ho2j6XHHcw3SSGWeV3Ppk3khC85pOPIFVAAFAKAYqzf/nIb8rLr8w/Ihsd&#xA;MSM67p8y3emeowQMacJYi5+zzRtq7cgtcVeUfl5/zhqzNb6l+YGpmRxxZ9GsmJHFR8KS3R39isa/&#xA;J8VfTsemabHcJcpaxLcogiScIvqBAKBedOVKe+KonFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXjX/ADkp+TH+PvLQ1XSY6+adGjZrNB1uYPtPbH/K/aj/AMrb9qoVfFOjaZYX&#xA;jvbXRkhuozuoIBIBodmB3Hhiq3WtAls70x2iST2rBTHLTka0+IHiNt64q9s/5xT/ADOvPLHm8+SN&#xA;U9STStfkUWkYHIQXrABXp/JKg4t7hT0rir1X82vyL8jeXvKWvebPKHlWK48zQoJrW3PqXEEXKRRN&#xA;LFZOXgYxxlnCFOIp02pir46e8m1W8uNQ1W6kurxvjkeZizvQUFWJrsBSmKvqX/nCDRJI9F80a46/&#xA;u7q5trKF/e2R5JAP+khMVfTmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2Kvkv/nKn8lpdKvn/ADH8swlbeaTlr1tEP7qZj/vUAP2JDtJ/lGv7Roq8V0nU5b+P1KKO&#xA;O0ijscUPQ/8AnFHSItX/ADtuNQnTmNJs7q7hJBIDlktk9q8ZiR8sUvTdJ/5zD0v/AB5d6Fr+kjT9&#xA;DS7ltIdVjlaR4xHIUSSePiPhNKtxPw+BxVDfnj/zjHB5nkHmz8ultxeXn76905JFS3uhJ8QuLd6+&#xA;mrtXcVCt1FD9pV7D+THkQ+R/y40jQJlAv0jM+pFSDW6nPqSCo2PCvAHwUYqzbFXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FVK8tLW9tJrO7iWe1uEaKeCQBkdHHFl&#xA;YHqCDTFXwp+dv5Sah+VXmxb/AE6N7jyjqbt9SlNT6ZPxNayNvRkG6MftDxIbFWW/84eFLG+88eap&#xA;0/0TS9OUytWmzM87Af7G2+jFXgMaR3sd9e3khE7v6gfxdyWc/jir6k/5wt1vzvd2Or6bckz+T7AA&#xA;Wcspq0N47BmhhJ/YKEu6/smn8xqq+ncVdirsVdirsVdirsVeZ/mD/wA5Efll5G1CTTNSvJr3Vof7&#xA;/T9PjE0kdRUB2Zo4lb/JL19sVeSeaP8AnN2P0zH5V8uEyH7Nzqkg4j5wQHf/AJG4q9g/IT80NS/M&#xA;fyM2uanZxWV/b3ktlOtvzEMhjSOQSRq7OyjjMFILHcHFXo+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KpV5p8r6H5p0G70LW7ZbvTb1OE0TbEEbq6MN1ZTurDocVeN/mD5K8tflB/wA49+a9&#xA;O8uvOx1ICKW5u3V55nvXjtnUsiRrxWEtQBR37k4q+Q/JflTXPOOv2PlnRYvUu72XdjXgi/tyyEVo&#xA;ka7n+uKv0U8geSNH8keVLHy5pK/6PZp+8mYAPNM28kz0/adt/boNhirIcVdirsVUb29s7G1lu72e&#xA;O1tIV5TXEzrHGijuzsQoHzxViPl785vyw8x69JoOi+YLe91SNXf0UEiqyxjk5jldFik4qKngx23x&#xA;V83+fP8AnL/zvqOq3dj5ItrfTtNjd0tr+SMXF1IikqstJf3KBhvxKGnicVSr8q/z5/NYalr+ravq&#xA;8+q6XpOk3d3cwTqjRCc8Y7WhVQFrcyINv2a4q8UXUfXvLi9v0a/v7qRpXeUk8pJGLM7U3ZmY4qiN&#xA;I+oarrdlZatero+lTzKlzdxQ+osCMaeoYlKl6fOuKv0d8i+SdD8leWLPy7osbLZWimsjnlJLI55S&#xA;SyN3Z238B0GwGKp/irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY5+YXkPRfPXlW78u&#xA;axzW1ueLpNEeMkUqGqSL2PE9jscVYr+SP5H6R+WWlT/vV1DX74kXup8OP7oNVIYgalU6Ft92+Qoq&#xA;9NxV2KuxV2Kvnf8A5zQ8q6pqHknTPMFrPIbPRLllv7IV9Mpd8USdqd43UIK/z9u6r5k8h6vbaP5u&#xA;/SWn8l9LSNS9P1DUi4fR7iNj8IG3rMSvtTFWN28/p2LRw1NxcycCq7niAKf8EWpir6w8o3v5Vfkd&#xA;5AGg+dx9c80+Yrdb3W9HS3+syNG/IRW7hqQqsYqKO4q3IjbFXgfmLzjplzBfReQPKyeXdFi3u9Qr&#xA;Jd35R24gSXkpf6ujVA4Rca9CzYqxzynpVpq3mry9pIqP0hfW1rcM9Kfv51j2rtSh74q/TbFXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FUr80+XrHzJ5b1PQb4VtNT&#xA;tpLaU0qV9RSA4/ykPxD3GKvhb8s/yZ83ap551rRLmwmiOk2OqRXUpRljM/1ea1hRJCAp5zuOPioJ&#xA;7Yqy/wD5x1/IDzdceebLzD5r0S403RNIc3Ecd8hgkmuoqeiohkpLxVjz5FeJ40rirzD8z9futV/N&#xA;XzJqWuwu0316eL6s2xRIWMMMZr/JGijFWGtMV9RIWdIZKco+WxANQGpQGmKsp/LGxv8AVfzF8q2t&#xA;hbPNLFqFmzJGC5CJcq8kjUHwqoJJJ2AxV+k2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvEvOv/OVf&#xA;k3yv58PlZrKW9t7aVINU1WKRRHbyFqSKI+LGT0h9qhG9R2xV7VBPDcQRzwOssMqh4pEIZWVhVWUj&#xA;qCMVX4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqlV75T8rX959evtGsbq92/0qe2hkl+Hp8bKW2+eK&#xA;o61sLG0Xja28VutAvGJFQUHQfCB0xVXxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVL/MJ1YaBqZ0YK&#xA;dXFpP+jg9OP1n029HlXtzpir8yvSe4nuY7sv+k3kYsZqhjJU8w3LfmW6174q+uP+cSvzgg1XRE8g&#xA;6zPx1jSlb9ENKaGe0Xf0RXq8HZf5KUHwnFX0birsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dir5W/5yP/PL82fKPnu58t6PNFpOkvBBPp92kMck80ciASOXl9RVpMsibKOn04qxbSvz1/Mqw/Ir&#xA;UdQbWprnWLvXl0621Cekk1vAbX15eDvy3JUKtR8NSRvSirzgfmt+cVjPBOPN+rvPc0eOFr2eYfEa&#xA;j907Mm56Cntir60/On84fMn5eflnol60Fv8A4z1hIYZYnBaGGVYQ93IqV+II5CqK/tAmtKFV455M&#xA;/wCcsPzTk81aNY67FYzabqF3BDcVt2hcQzSBGaN1YCoDctwemKvsjFXYq7FXYq7FXYq+a/8AnMTz&#xA;z508uP5ZtdA1a70m1vkvHuHs5GgeR4jCFBkQq/wiToD3xV89T6lbeb4pbTzI62nnKBa2WtyUQX/A&#xA;E/V79tlMrD+6uD1PwyEgh1VQX5Z6R5p1X8x9Ds9CWRNbjvYpFkAIMPoOGkll8FRVJauKv0mxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8//APOYf5fSa35KtfNNlHzvfLrt9aCjdrKcgOdt&#xA;z6cgVvZSxxV82TQyL+QNrMtfTk813KS9ONU06Ax/T8b4qifyls7SG+uPzA80LJd+XvJ6xSRQO1Td&#xA;X5NLGyjLctufxtsQqruKHFWffnf+YVl+bP5T6b5ssrNtPvPLuqNZ6rphkE5ijvYqxT+oFjqjtAFH&#xA;wj4qjtXFXjiSvqOseX4rVTJdSyQoqL1MjyqgUf7IYq/S/FXYq7FXYq7FXYq+Wv8AnOWNDa+TZDy9&#xA;RX1FVoPhowtiamnX4RT6cVfNWrBbq4htYI2nv5GWNI4wWYs2wQAVLMSdgMVfXek6hL+R35A2er67&#xA;p0DecJlNrEojT1GmnaSW2guZkAd1giWrVb9nip6Yq8V8gf8AOUn5h6V50j1HzNqcuraHeScdTsWV&#xA;AscbGnqWyqAEaPqFGzdD4hV9xWN9Z39lb31lMtxZ3UaTW08Z5I8cihkdT3BBriqvirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdiqld2lteWs1pdRLPa3EbRTwuAyPG4KsrA9QwNDirzfV/+cdvy21Hy&#xA;PZeTFt7iy0qxuvr0UtrKFuGnKlGeR3WQOXQ8TVegFKUxV80/85Jah5W0O5038rvJ8QtdD0B2u9TA&#xA;dpPU1G4UCsrsWLNFFtWu3Ir+zirD/wAppILnzDqHkyaVTp/nC0fSkZj8K3hIm0+X5rdRovyY4qyn&#xA;/nF/8ttT1780bfUby1ki07yvJ9avGlRl43cZPoQ/ENnEvxkeCnFX3VirsVdirsVdirsVeEf85a/l&#xA;55l83eVtFn8vWEupXmmXbiW1gHKT0rhAC4Wu/F41Bp416VxV5xoXlHRPyE8qr5z83xQ3/wCY2oK6&#xA;eXNFYiSO1elGkYqdynIGRwdvsKamuKpr+Uut61+enkHzj5Q85363up2phvNGvGjSJopZFkCNSEIC&#xA;kciCo4/ZYj5Kvmy3096XumXcfo3lq5VgwHJHQlWVvkwpir6Q/wCcS/zkkhnT8ttfl+El28v3Dn7L&#xA;bu9oxPY7tH71XuoxV9WYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8580f8AOPP5ReZt&#xA;UvNW1TQ66pft6lzdw3FzCzP3fgkgiqe/wb9euKpHon/OKX5T6Pr1nrNtHfST2M0dzbwS3PKESRMH&#xA;QkBFc0Za0Lfhir2LFXYq7FXYq7FXYq7FWJfmh+ZGifl75TuNf1QGVgRDY2SEB7i4cEpGpPQUBZm7&#xA;KD16FV8D+aPM/mLz75luvMvmCYyyTNRIxX0oYgTwhiU/ZjSv09TUknFWSfkj57i/L/8ANezv5pOG&#xA;i6hWx1BzsFt7hhSQ+HpSqrn2B8cVQv576WfLv5z+aYY0/d3FybyP+Ui9Rbmo9g0hH0Yqzn/nHP8A&#xA;IjzRr/mTS/PGtLJpmhabcQ39kzrxmvJYHEkQjVhtDVRyc9RsvWoVfaWKuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8O/8AOWfnLV9e/M5vLzQyxafoCLBZ2xBB&#xA;llmVZJJwO/OqqvsvucVef6P5R/MrVkEOi+WtRnhegDw2kzR0pUVkK8B9JxVn/lv/AJxM/N7XZI5N&#xA;YW20O2O5a7mWSXif5Ybf1N/ZmXFX1RY/kv5D9LQZ9b02HXNa0GygsYtVu0JeUW6BVeSLkY3Nd15h&#xA;ivjirOwABQbAdBirsVdirsVdirsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:28214be8-9637-fb4a-bd67-887a38a15168</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:28214be8-9637-fb4a-bd67-887a38a15168</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28214be8-9637-fb4a-bd67-887a38a15168</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:38:31+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>254.101953</stDim:w>
            <stDim:h>265.707942</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -265.708 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 265.708 li
254.102 265.708 li
254.102 0 li
cp
clp
141.134 97.7578 mo
141.069 97.7578 141.069 97.8579 141.134 97.8579 cv
141.198 97.8579 141.198 97.7578 141.134 97.7578 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.317647 .290196 .301961 rgb
f
139.3 86.2578 mo
139.236 86.2578 139.236 86.3579 139.3 86.3579 cv
139.365 86.3579 139.365 86.2578 139.3 86.2578 cv
cp
f
119.107 12.8281 mo
118.991 12.7144 118.885 12.5776 118.801 12.3984 cv
117.572 9.76953 117 6.62158 117.242 3.57617 cv
114.243 3.82617 111.256 4.58594 108.251 6.1792 cv
107.931 6.34912 107.622 6.53222 107.312 6.71387 cv
108.408 7.4917 109.507 8.27344 110.664 8.98926 cv
113.382 10.6714 116.299 12.0615 119.217 13.4204 cv
119.18 13.2231 119.143 13.0254 119.107 12.8281 cv
cp
.203922 .215686 .211765 rgb
f
125.748 3.97851 mo
125.838 7.02148 125.304 10.2363 124.454 13.1875 cv
126.994 10.646 129.215 7.84765 131.351 4.97461 cv
129.463 4.604 127.598 4.25097 125.748 3.97851 cv
cp
f
148.117 10.5874 mo
148.097 10.6357 148.085 10.6826 148.058 10.7314 cv
145.99 14.5942 143.752 18.3442 141.155 21.8379 cv
144.545 22.8774 147.941 23.9053 151.305 25.0576 cv
151.182 24.8896 151.067 24.7251 150.968 24.5649 cv
149.546 22.2749 148.751 20.2295 148.417 17.521 cv
148.174 15.5439 147.998 13.0469 148.117 10.5874 cv
cp
f
141.441 13.2695 mo
142.18 11.3647 143.218 9.84326 144.598 8.50097 cv
143.629 8.07129 142.63 7.68213 141.595 7.34033 cv
140.491 8.4082 139.334 9.43066 138.171 10.4473 cv
137.716 11.1089 137.258 11.7622 136.784 12.3848 cv
135.138 14.5459 133.434 16.6606 131.741 18.7847 cv
133.253 19.3223 134.775 19.8262 136.301 20.3179 cv
138.021 17.9556 139.622 15.52 141.441 13.2695 cv
cp
f
126.51 4.59326 mo
126.26 4.54053 126.01 4.49219 125.76 4.44189 cv
125.786 7.34326 125.262 10.3799 124.457 13.1787 cv
126.973 10.6621 129.179 7.89502 131.295 5.05078 cv
129.767 4.68115 128.217 4.50244 126.51 4.59326 cv
cp
.317647 .290196 .301961 rgb
f
119.107 12.8281 mo
118.991 12.7144 118.885 12.5776 118.801 12.3984 cv
117.547 9.71533 116.977 6.4917 117.258 3.38818 cv
116.405 3.57568 115.552 3.82812 114.731 4.12402 cv
112.431 4.61181 109.8 5.53467 107.493 6.84228 cv
108.529 7.57763 109.571 8.31299 110.664 8.98926 cv
113.381 10.6714 116.299 12.0615 119.217 13.4204 cv
119.18 13.2231 119.143 13.0254 119.107 12.8281 cv
cp
f
140.257 14.8027 mo
140.645 14.2852 141.035 13.771 141.441 13.2695 cv
142.098 11.5767 142.992 10.188 144.15 8.95654 cv
143.128 8.56103 141.923 8.35303 140.74 8.15478 cv
139.9 8.93262 139.036 9.69092 138.171 10.4473 cv
137.716 11.1089 137.258 11.7622 136.784 12.3848 cv
136.066 13.3271 135.335 14.2598 134.6 15.189 cv
136.487 15.0312 138.365 14.7412 140.257 14.8027 cv
cp
f
147.685 11.4141 mo
146.884 12.8887 146.057 14.3447 145.194 15.7764 cv
145.626 16.1675 146.07 16.5469 146.572 16.8237 cv
147.099 17.1143 147.807 17.1782 148.402 17.3779 cv
148.201 15.7051 148.054 13.6831 148.086 11.627 cv
147.952 11.5566 147.819 11.4839 147.685 11.4141 cv
cp
f
117.209 4.2334 mo
116.051 4.62597 114.947 5.05029 113.968 5.39013 cv
112.82 5.7876 111.698 6.21972 110.603 6.69336 cv
110.599 6.68994 110.597 6.68603 110.593 6.68213 cv
109.618 5.78857 108.346 5.95556 107.089 6.55615 cv
108.259 7.38574 109.429 8.2251 110.664 8.98926 cv
111.394 9.4414 112.143 9.8667 112.898 10.2817 cv
114.061 9.87646 115.252 9.52002 116.466 9.18359 cv
116.848 9.07812 117.239 8.99365 117.629 8.90478 cv
117.29 7.38769 117.144 5.8042 117.209 4.2334 cv
cp
.603922 .576471 .588235 rgb
f
126.875 3.73535 mo
126.506 3.63867 126.124 3.57129 125.735 3.51855 cv
125.806 4.90869 125.736 6.34033 125.565 7.77099 cv
126.32 7.78711 127.062 7.75293 127.791 7.56494 cv
128.229 7.67334 128.663 7.79931 129.095 7.93359 cv
130.001 6.78515 130.879 5.61377 131.749 4.43554 cv
130.14 4.11474 128.516 3.87207 126.875 3.73535 cv
cp
f
142.116 11.7983 mo
142.728 10.6377 143.477 9.62256 144.389 8.70019 cv
143.355 8.34033 142.318 7.9873 141.279 7.64111 cv
140.382 8.49365 139.455 9.32129 138.52 10.1406 cv
138.525 10.1401 138.53 10.1411 138.535 10.1406 cv
139.725 10.7021 140.919 11.2549 142.116 11.7983 cv
cp
f
148.133 10.5498 mo
148.108 10.6103 148.091 10.6699 148.058 10.7314 cv
147.529 11.7197 146.983 12.6973 146.429 13.6689 cv
146.997 13.9019 147.563 14.1367 148.135 14.3589 cv
148.066 13.1289 148.067 11.8359 148.133 10.5498 cv
cp
f
133.944 16.0166 mo
133.21 16.9409 132.474 17.8647 131.738 18.7886 cv
132.289 18.9839 132.839 19.1816 133.392 19.3701 cv
133.397 19.2246 133.391 19.0786 133.359 18.937 cv
134.593 18.5361 134.79 16.8276 133.944 16.0166 cv
cp
.317647 .290196 .301961 rgb
f
146.134 19.6528 mo
144.218 19.6528 144.215 22.6294 146.134 22.6294 cv
148.049 22.6294 148.052 19.6528 146.134 19.6528 cv
cp
f
115.839 10.3223 mo
114.021 9.19873 112.204 8.07226 110.393 6.9375 cv
112.149 6.02685 113.969 5.29736 115.823 4.76318 cv
115.764 6.61767 115.771 8.46972 115.839 10.3223 cv
cp
119.92 2.47607 mo
120.003 1.07959 118.862 .450682 117.776 .571776 cv
117.777 .569822 117.777 .567869 117.778 .565428 cv
117.762 .568358 117.746 .572752 117.731 .575682 cv
117.613 .591307 117.498 .616209 117.384 .649412 cv
113.266 1.46924 109.313 3.14648 105.526 5.46533 cv
105.603 5.51709 105.678 5.57178 105.754 5.62402 cv
104.872 6.44092 104.634 8.05566 105.963 8.89355 cv
109.643 11.2114 113.335 13.5063 117.043 15.7783 cv
118.263 16.5264 120.178 15.5776 120.052 14.0513 cv
119.732 10.1929 119.688 6.34082 119.92 2.47607 cv
cp
0 0 0 rgb
f
127.016 6.61816 mo
127.17 5.87744 127.291 5.13135 127.392 4.38232 cv
127.886 4.49365 128.378 4.61816 128.868 4.75342 cv
128.241 5.58789 127.573 6.41357 126.868 7.20068 cv
126.926 6.99902 126.977 6.8042 127.016 6.61816 cv
cp
131.735 1.48486 mo
130.143 .97949 128.571 .618162 127.022 .392576 cv
125.929 -.447267 123.788 .0600568 123.65 1.91553 cv
123.501 3.91504 123.155 5.85596 122.601 7.7832 cv
122.098 9.53515 121.712 11.0146 122.117 12.8252 cv
122.395 14.0679 123.997 14.6816 125.055 14.0205 cv
128.746 11.7158 131.646 7.84765 134.086 4.31201 cv
135.248 2.62842 133.313 1.02978 131.735 1.48486 cv
cp
f
143.655 20.4326 mo
143.74 20.2827 143.822 20.1309 143.908 19.9814 cv
145.117 17.8706 146.426 15.8267 147.813 13.8335 cv
148.078 15.6079 147.875 17.4878 148.066 19.271 cv
148.202 20.5522 148.446 21.8184 148.63 23.0903 cv
147.706 22.7358 146.819 22.2368 145.978 21.7788 cv
145.191 21.3506 144.424 20.8906 143.655 20.4326 cv
cp
138.562 14.9004 mo
138.119 15.5356 136.819 18.0059 136.122 18.186 cv
136.586 18.0659 134.978 17.3765 134.66 17.2173 cv
134.632 17.2036 134.608 17.187 134.58 17.1728 cv
135.497 15.8345 136.549 14.6011 137.597 13.3437 cv
138.131 12.7031 139.53 10.4507 140.65 9.50244 cv
140.993 9.66308 141.337 9.82422 141.679 9.98633 cv
140.704 11.6636 139.672 13.3062 138.562 14.9004 cv
cp
151.971 18.2788 mo
151.806 16.2373 152.006 14.1963 151.568 12.1851 cv
151.34 11.1401 150.54 10.7202 149.723 10.7593 cv
149.858 9.35058 147.964 8.29004 146.594 9.04492 cv
146.652 8.36377 146.329 7.75586 145.834 7.35351 cv
145.882 7.27978 145.931 7.20605 145.98 7.13232 cv
145.309 6.82324 144.637 6.52588 143.964 6.22705 cv
143.782 5.72558 143.359 5.32617 142.626 5.2207 cv
139.631 4.7915 138.147 6.46191 136.345 8.62353 cv
134.157 11.25 131.713 13.8047 130.089 16.8345 cv
129.556 17.8281 129.878 18.9541 130.807 19.5708 cv
133.338 21.2524 136.816 23.3603 139.235 20.6523 cv
139.238 20.6484 139.242 20.644 139.246 20.6401 cv
139.207 20.9834 139.208 21.3252 139.308 21.6572 cv
139.878 23.5508 142.872 24.6753 144.431 25.4912 cv
146.455 26.5508 148.54 27.5562 150.861 27.5586 cv
151.93 27.5596 152.878 26.6416 152.861 25.5586 cv
152.823 23.0952 152.168 20.728 151.971 18.2788 cv
cp
f
229.642 60.3413 mo
229.268 62.1802 228.925 65.3105 227.83 67.5815 cv
233.947 63.7954 239.877 59.5576 245.522 54.9995 cv
245.349 53.77 245.145 52.5981 244.914 51.5107 cv
244.296 48.5947 243.343 45.7319 242.122 42.9878 cv
241.942 43.0527 241.763 43.1182 241.583 43.1831 cv
239.933 43.7769 238.272 44.4111 236.61 45.0581 cv
235.944 45.5264 235.29 46.0107 234.657 46.5352 cv
234.03 47.0547 233.286 46.9771 232.753 46.6191 cv
232.406 46.7617 232.061 46.9131 231.715 47.0581 cv
231.248 51.5117 230.531 55.9648 229.642 60.3413 cv
cp
.203922 .215686 .211765 rgb
f
217.936 70.1514 mo
217.481 69.8364 217.182 69.2837 217.316 68.5757 cv
217.452 67.8652 217.619 67.1494 217.788 66.4331 cv
217.674 61.5762 217.976 56.7036 219.817 52.4922 cv
219.348 52.7261 218.876 52.9526 218.409 53.1914 cv
217.735 53.7739 217.06 54.3521 216.384 54.9233 cv
213.229 57.5864 210.363 60.4658 206.096 60.9746 cv
205.813 61.0083 205.541 60.9058 205.302 60.7417 cv
202.528 64.4858 200.289 68.6772 200.464 73.25 cv
202.475 73.1245 204.694 73.5898 206.387 73.7998 cv
211.059 74.3784 214.356 74.2456 218.081 72.8486 cv
218.033 71.958 217.983 71.0605 217.936 70.1514 cv
cp
f
221.036 30.9141 mo
221.324 30.647 221.642 30.5283 221.953 30.5103 cv
222.607 30.0425 223.257 29.5698 223.906 29.0962 cv
223.994 29.0249 224.078 28.9507 224.167 28.8804 cv
225.063 27.876 225.997 26.9062 226.956 25.9604 cv
225.215 24.0767 222.976 22.8647 220.301 22.4868 cv
219.466 21.3721 218.562 20.3838 217.594 19.5024 cv
217.769 23.6997 219.208 28.1035 220.96 30.9785 cv
220.984 30.9561 221.011 30.9365 221.036 30.9141 cv
cp
f
232.616 29.8149 mo
231.668 30.5132 230.696 31.1758 229.693 31.7871 cv
227.564 33.3389 225.287 34.6973 223.038 35.9473 cv
223.124 37.2407 222.779 38.5713 221.896 40.1357 cv
220.531 42.5532 218.824 44.8306 217.003 47.0317 cv
220.119 45.5571 223.235 44.082 226.36 42.6265 cv
229.9 39.7856 233.666 37.292 237.676 35.228 cv
237.439 34.8979 237.211 34.561 236.965 34.2383 cv
235.624 32.4761 234.164 31.0581 232.616 29.8149 cv
cp
f
222.658 22.625 mo
221.05 22.3447 219.808 21.352 218.409 20.5615 cv
218.155 20.418 217.894 20.2861 217.638 20.1465 cv
217.756 21.8027 218.057 23.4756 218.492 25.0664 cv
218.51 25.0786 218.528 25.0913 218.546 25.103 cv
220.162 26.1445 221.782 26.6309 223.381 25.3638 cv
224.314 24.624 223.809 22.8257 222.658 22.625 cv
cp
.317647 .290196 .301961 rgb
f
217.955 70.5068 mo
217.349 70.9966 216.807 71.5752 216.468 72.229 cv
215.805 72.6274 215.27 73.1963 214.766 73.7871 cv
215.864 73.5815 216.954 73.269 218.08 72.8472 cv
218.039 72.0737 217.997 71.2944 217.955 70.5068 cv
cp
f
207.732 71.5513 mo
210.469 69.0293 214.238 66.5166 217.769 65.1821 cv
217.739 61.1719 218.063 57.1919 219.365 53.6206 cv
218.567 53.8374 217.781 54.0972 217.007 54.3906 cv
216.799 54.5674 216.592 54.7476 216.384 54.9233 cv
213.229 57.5864 210.363 60.4658 206.096 60.9746 cv
205.813 61.0083 205.539 60.9053 205.299 60.7402 cv
203.353 63.3652 201.674 66.21 200.9 69.2529 cv
201.711 69.8086 202.659 70.0459 203.685 70.0273 cv
203.585 70.1279 203.482 70.2217 203.383 70.3257 cv
202.653 71.0996 202.728 72.3882 203.384 73.1265 cv
203.351 73.1978 203.318 73.2754 203.287 73.3618 cv
204.397 73.4951 205.47 73.686 206.387 73.7998 cv
206.834 73.855 207.266 73.9023 207.689 73.9443 cv
207.614 73.8784 207.541 73.811 207.459 73.7559 cv
207.684 72.9741 207.811 72.2051 207.732 71.5513 cv
cp
.14902 .156863 .152941 rgb
f
243.35 45.8228 mo
243.137 45.2827 242.741 44.9707 242.301 44.8179 cv
242.187 44.4976 242.06 44.1797 241.941 43.8604 cv
242.032 43.5791 242.083 43.2871 242.115 42.9907 cv
241.937 43.0542 241.76 43.1191 241.583 43.1831 cv
239.933 43.7769 238.275 44.4048 236.614 45.0562 cv
235.946 45.5254 235.291 46.0103 234.657 46.5352 cv
234.033 47.0527 233.292 46.9775 232.759 46.623 cv
232.411 46.7671 232.064 46.9067 231.716 47.0483 cv
231.249 51.5054 230.531 55.9614 229.642 60.3413 cv
229.392 61.5723 229.156 63.3833 228.699 65.1284 cv
228.868 65.6729 229.318 66.0698 229.877 66.2734 cv
235.507 62.6714 240.971 58.7085 246.182 54.4609 cv
245.494 51.6465 244.53 48.8213 243.35 45.8228 cv
cp
f
223.906 29.0962 mo
223.994 29.0249 224.078 28.9507 224.167 28.8804 cv
225.109 27.8237 226.097 26.8086 227.109 25.8164 cv
226.463 25.5566 225.806 25.292 225.137 25.0107 cv
223.983 24.5254 222.358 25.7681 222.516 27.0073 cv
222.634 27.9326 222.686 28.9189 222.84 29.8677 cv
223.195 29.6103 223.552 29.3545 223.906 29.0962 cv
cp
f
224.076 39.459 mo
224.233 39.4946 224.394 39.5249 224.562 39.5396 cv
224.687 39.5503 224.809 39.5488 224.932 39.5479 cv
224.962 39.6504 224.985 39.7534 225.029 39.8569 cv
225.065 39.9409 225.115 40.019 225.158 40.1006 cv
224.686 41.0107 224.985 41.9521 225.608 42.5786 cv
224.946 42.5835 224.468 41.0459 224.076 39.459 cv
cp
233.639 29.0395 mo
232.373 30.0293 231.06 30.9536 229.693 31.7871 cv
227.562 33.3403 225.283 34.6997 223.032 35.9502 cv
223.118 37.2432 222.778 38.5728 221.896 40.1357 cv
221.486 40.8608 221.042 41.5718 220.578 42.2744 cv
220.583 42.2925 220.586 42.3096 220.59 42.3276 cv
220.789 43.146 221.019 44.1045 221.397 44.9619 cv
223.05 44.1812 224.703 43.3984 226.36 42.6265 cv
230.204 39.5415 234.313 36.8608 238.714 34.7026 cv
238.131 33.8755 237.569 33.1216 237.121 32.4922 cv
236.079 31.0308 234.909 29.9341 233.639 29.0395 cv
cp
f
217.916 22.4697 mo
218.509 22.6362 219.35 22.4399 219.739 21.9565 cv
220.142 21.4561 220.258 21.2153 220.31 20.5786 cv
220.36 19.9639 219.915 19.1514 219.345 18.895 cv
218.763 18.6338 218.172 18.3965 217.586 18.1504 cv
217.547 19.5659 217.671 21.0278 217.916 22.4697 cv
cp
.603922 .576471 .588235 rgb
f
232.99 29.5308 mo
231.925 30.334 230.829 31.0942 229.693 31.7871 cv
229.367 32.0244 229.03 32.2466 228.697 32.4756 cv
229.902 33.897 231.106 35.3232 232.087 36.8916 cv
232.322 37.2671 232.54 37.6543 232.749 38.0474 cv
234.244 37.0991 235.777 36.2148 237.346 35.395 cv
236.837 34.6299 236.33 33.9053 235.858 33.2417 cv
234.976 32 234.028 30.7256 232.99 29.5308 cv
cp
.113725 .117647 .113725 rgb
f
225.16 27.8369 mo
226.003 26.938 226.867 26.0586 227.758 25.2046 cv
227.362 25.0015 226.962 24.8066 226.543 24.6475 cv
225.13 24.1113 224.057 25.8994 224.69 27.0586 cv
224.835 27.3247 225.001 27.5791 225.16 27.8369 cv
cp
f
218.206 58.2539 mo
214.601 59.5698 211.231 61.4185 208.038 63.5439 cv
206.825 64.3511 207.872 66.1211 209.175 65.4883 cv
210.198 64.9883 211.224 64.4922 212.252 64 cv
212.268 63.9922 212.274 63.9805 212.289 63.9722 cv
212.335 63.9517 212.382 63.9326 212.428 63.9126 cv
212.502 64.5889 212.973 65.2129 213.851 65.2129 cv
214.617 65.2129 215.072 64.7344 215.225 64.1626 cv
216.087 63.8662 216.941 63.5352 217.789 63.1865 cv
217.833 61.5166 217.957 59.8638 218.206 58.2539 cv
cp
f
239.043 52.4492 mo
239.106 51.5923 239.076 50.6841 238.971 49.7554 cv
239.129 50.585 239.288 51.4141 239.43 52.2451 cv
239.431 52.2798 239.43 52.3145 239.431 52.3491 cv
239.296 52.3521 239.165 52.3916 239.043 52.4492 cv
cp
243.038 47.25 mo
242.596 45.8779 242.006 44.5591 241.336 43.2759 cv
239.756 43.8472 238.169 44.4561 236.58 45.0791 cv
235.978 45.5029 235.389 45.9443 234.816 46.4126 cv
234.828 46.4399 234.838 46.4629 234.851 46.4907 cv
235.024 46.8662 235.215 47.0122 235.379 47.1128 cv
235.474 47.5737 235.552 48.0322 235.617 48.4888 cv
235.108 49.7549 233.053 51.0947 232.182 51.877 cv
231.167 52.7876 232.083 54.1362 233.177 54.2798 cv
233.831 54.3652 234.229 54.3252 234.526 54.3306 cv
234.224 54.6855 233.868 54.9917 233.489 55.2764 cv
233.422 54.6016 232.904 54.0054 232.106 54.3325 cv
231.77 54.4707 231.429 54.5889 231.089 54.7114 cv
230.962 54.6802 230.822 54.6758 230.674 54.6948 cv
230.36 56.5859 230.022 58.4722 229.642 60.3413 cv
229.556 60.7612 229.472 61.2539 229.381 61.7832 cv
231.029 61.8198 232.587 60.5991 233.91 59.6455 cv
234.744 60.0664 235.895 59.8286 237.002 59.4644 cv
237.02 59.5615 237.037 59.6499 237.055 59.7437 cv
237.025 60.0811 237.096 60.3867 237.243 60.6426 cv
237.244 60.6479 237.245 60.6548 237.247 60.6606 cv
237.292 60.8389 237.338 61.0171 237.383 61.1958 cv
240.087 59.2539 242.742 57.2344 245.336 55.145 cv
244.843 52.4209 244.136 49.7554 243.038 47.25 cv
cp
f
220.351 44.2578 mo
220.286 44.2578 220.286 44.3579 220.351 44.3579 cv
220.415 44.3579 220.415 44.2578 220.351 44.2578 cv
cp
.317647 .290196 .301961 rgb
f
238.517 53.9243 mo
238.453 53.9243 238.453 54.0244 238.517 54.0244 cv
238.582 54.0244 238.582 53.9243 238.517 53.9243 cv
cp
.203922 .215686 .211765 rgb
f
240.184 48.8364 mo
237.861 48.8364 237.858 52.4458 240.184 52.4458 cv
242.506 52.4458 242.51 48.8364 240.184 48.8364 cv
cp
f
236.495 58.6763 mo
235.084 59.5864 233.655 60.4712 232.263 61.4111 cv
231.714 61.7817 231.09 62.3247 230.436 62.8784 cv
231.096 60.7993 231.883 58.3359 231.941 57.9624 cv
232.318 55.52 232.692 53.1519 233.161 50.7236 cv
233.568 48.6079 233.413 48.6318 235.289 47.7886 cv
237.448 46.8179 239.621 45.6104 241.932 45.0342 cv
242.044 45.3589 242.157 45.6821 242.259 46.0176 cv
242.967 48.3599 243.546 50.8433 244.017 53.3965 cv
241.467 55.0796 239.066 57.0171 236.495 58.6763 cv
cp
247.813 52.7744 mo
247.264 49.3564 246.447 46.0498 245.305 42.9092 cv
245.483 41.7842 244.863 40.5933 243.427 40.752 cv
239.794 41.1528 237.192 43.0059 233.801 44.0991 cv
231.481 44.8467 230.382 44.8594 229.642 47.4536 cv
228.52 51.3828 228.468 55.5605 227.572 59.5195 cv
227.084 61.6763 224.486 65.7666 226.075 67.8823 cv
226.614 68.6006 227.409 69.0601 228.334 68.8013 cv
231.359 67.9546 234.453 64.7417 237.098 63.0337 cv
240.607 60.7671 243.912 58.0405 247.487 55.9126 cv
248.791 55.1367 248.622 53.6216 247.813 52.7744 cv
cp
0 0 0 rgb
f
219.312 22.4707 mo
219.656 22.6553 220.003 22.8364 220.345 23.0239 cv
222.069 23.9697 223.725 24.9497 225.337 25.9595 cv
224.208 26.9741 222.963 27.8262 221.577 28.4907 cv
220.486 26.8105 219.611 24.5913 219.312 22.4707 cv
cp
229.439 23.6221 mo
229.448 23.6128 229.458 23.603 229.467 23.5942 cv
226.181 21.3462 222.663 19.2441 219.035 17.3037 cv
218.709 16.9399 218.25 16.7031 217.764 16.6206 cv
217.744 16.6103 217.725 16.5991 217.705 16.5889 cv
217.704 16.5952 217.704 16.6025 217.703 16.6089 cv
216.814 16.4834 215.868 16.8794 215.571 18.001 cv
214.313 22.7549 216.446 28.6631 219.502 32.3516 cv
219.914 32.8491 220.844 33.0962 221.448 32.8657 cv
224.836 31.5747 227.714 29.6387 230.043 26.8408 cv
231.008 25.6807 230.419 24.2212 229.439 23.6221 cv
cp
f
222.807 41.8149 mo
223.369 40.8848 223.913 39.9395 224.409 38.9463 cv
226.009 35.7402 229.874 33.7134 233.189 31.8159 cv
233.982 32.5483 234.754 33.2998 235.478 34.0947 cv
231.093 36.3281 227.022 39.2144 222.807 41.8149 cv
cp
239.771 32.7007 mo
238.66 31.2783 237.417 29.9331 236.041 28.667 cv
235.832 27.4033 234.517 26.3115 233.125 27.1973 cv
226.15 31.6333 li
224.728 32.5381 222.923 33.373 221.888 34.7627 cv
220.785 36.2437 220.459 38.2349 219.501 39.8286 cv
218.347 41.748 216.922 43.5435 215.63 45.3721 cv
215.233 45.9346 215.196 46.4863 215.373 46.9575 cv
215.45 48.2231 216.863 49.5229 218.414 48.8027 cv
225.757 45.3931 232.039 39.688 239.49 36.5806 cv
241.318 35.8188 241.088 33.3018 239.771 32.7007 cv
cp
f
23.5201 26.0127 mo
27.6964 28.0142 31.6368 30.4116 35.4752 32.9736 cv
35.5904 33.0293 35.6886 33.0977 35.7765 33.1733 cv
39.127 35.4209 42.4 37.7935 45.6734 40.1558 cv
46.0665 36.0239 46.6441 31.9287 47.6256 27.9126 cv
44.0665 26.2622 40.5211 24.5288 37.0895 22.6685 cv
34.8668 21.4639 32.8419 19.8735 30.7452 18.4253 cv
27.9366 20.5405 25.5841 23.1562 23.5177 26.0117 cv
23.5187 26.0122 23.5191 26.0122 23.5201 26.0127 cv
cp
.203922 .215686 .211765 rgb
f
41.3316 43.6934 mo
34.711 41.6704 28.4947 37.9307 23.3692 33.3687 cv
23.0606 33.0938 22.9166 32.791 22.8839 32.4932 cv
22.0147 32.0049 21.1544 31.5 20.2882 31.0068 cv
19.6441 32.1069 19.0172 33.2158 18.419 34.3315 cv
24.463 41.1548 30.942 47.0854 38.0519 53.0552 cv
39.6632 54.4082 41.2232 55.8164 42.7418 57.2651 cv
43.6109 53.3672 44.3351 49.4312 45.1319 45.5156 cv
43.8668 44.9028 42.5982 44.2983 41.3316 43.6934 cv
cp
f
66.5167 44.1553 mo
69.9601 43.8325 73.4176 43.7886 76.8111 44.2192 cv
77.8341 42.8325 79.4102 40.8027 79.4229 38.9907 cv
71.5709 36.0786 63.3473 34.2246 55.5108 31.2866 cv
55.3546 32.2134 55.1939 33.1387 55.023 34.0625 cv
54.7359 37.6074 54.4425 41.1519 54.1231 44.6938 cv
58.1705 44.4712 62.402 44.0146 66.5167 44.1553 cv
cp
f
62.2149 52.1968 mo
60.4229 52.1392 56.961 52.2627 54.901 51.0957 cv
54.4444 51.0215 53.9884 50.9341 53.5328 50.8418 cv
53.3917 52.2402 53.2486 53.6382 53.0938 55.0352 cv
52.67 58.8579 52.6749 63.3657 51.9405 67.5576 cv
53.6686 69.856 55.2838 72.2417 56.732 74.7441 cv
57.1002 66.1816 63.9796 58.7837 70.169 52.0376 cv
67.5206 52.1655 64.8722 52.2817 62.2149 52.1968 cv
cp
f
23.3692 33.3687 mo
23.0606 33.0938 22.9166 32.791 22.8839 32.4932 cv
22.2848 32.1567 21.693 31.8071 21.0948 31.4687 cv
20.7911 31.8838 20.4776 32.293 20.1856 32.7148 cv
20.1036 32.8345 20.0318 32.9507 19.9532 33.0688 cv
19.5216 33.604 19.1432 34.1655 18.7867 34.7441 cv
20.9049 37.1152 23.0743 39.3877 25.3087 41.583 cv
26.3653 40.1768 27.3976 38.7524 28.4151 37.3174 cv
26.6461 36.0923 24.9508 34.7759 23.3692 33.3687 cv
cp
.317647 .290196 .301961 rgb
f
32.5934 31.0986 mo
32.8004 30.7715 33.0147 30.4492 33.2188 30.1201 cv
34.8702 29.0474 36.5479 28.02 38.3639 27.1768 cv
38.7857 27.6704 39.4718 27.9614 40.2799 27.8223 cv
41.9415 27.5361 43.5406 27.2158 45.0772 26.7075 cv
42.379 25.4194 39.7003 24.0835 37.0895 22.6685 cv
34.942 21.5044 32.9801 19.9795 30.9591 18.5713 cv
29.4811 19.7954 28.3375 21.2314 27.8355 22.8716 cv
27.7809 23.0508 27.7652 23.2207 27.7818 23.3789 cv
26.8028 24.4707 25.8341 25.5811 24.878 26.7031 cv
27.5255 28.0415 30.0924 29.5156 32.5934 31.0986 cv
cp
f
45.6754 40.1577 mo
45.9137 37.6045 46.2179 35.0645 46.6505 32.5498 cv
44.8463 33.5063 43.0406 34.4604 41.2423 35.4282 cv
40.8512 35.6387 40.5533 35.9604 40.336 36.332 cv
42.1231 37.5972 43.901 38.877 45.6754 40.1577 cv
cp
f
56.3756 38.5728 mo
56.3097 38.2466 56.2442 37.9204 56.1788 37.5938 cv
55.9981 36.6924 55.4884 36.1841 54.8668 35.9604 cv
54.7057 37.9302 54.5396 39.8989 54.3692 41.8677 cv
54.4234 41.8066 54.485 41.7529 54.5377 41.6904 cv
54.7647 41.6255 54.982 41.5269 55.2179 41.417 cv
56.2691 40.9282 56.5812 39.5977 56.3756 38.5728 cv
cp
.14902 .156863 .152941 rgb
f
41.3316 43.6934 mo
41.1051 43.624 40.8829 43.5371 40.6573 43.4639 cv
41.7818 44.2417 43.2179 44.916 44.7232 45.3179 cv
43.5938 44.7729 42.462 44.2329 41.3316 43.6934 cv
cp
f
62.2149 52.1968 mo
60.4229 52.1392 56.961 52.2627 54.901 51.0957 cv
54.7994 51.0791 54.6983 51.0566 54.5968 51.0396 cv
54.3312 51.6274 54.316 52.3438 54.6471 53.0659 cv
56.3912 56.8711 61.7799 56.4365 65.2491 55.9019 cv
65.8385 55.811 66.4308 55.6772 67.0108 55.5083 cv
68.0606 54.3306 69.1222 53.1758 70.1661 52.0376 cv
67.5186 52.166 64.8712 52.2817 62.2149 52.1968 cv
cp
f
59.7843 62.8687 mo
59.7535 62.873 59.7232 62.8833 59.6925 62.8882 cv
59.4654 62.7075 59.1754 62.5718 58.7989 62.5166 cv
56.6871 62.2085 54.6349 61.9604 52.6119 61.52 cv
52.4835 63.3867 52.3175 65.2817 52.0182 67.124 cv
52.151 67.3726 52.2398 67.6367 52.2608 67.9248 cv
52.8375 68.6992 53.4137 69.4736 53.9596 70.2705 cv
54.527 70.438 55.1583 70.394 55.7198 70.0562 cv
56.0001 69.8872 56.3145 69.6777 56.6451 69.457 cv
56.6676 69.9966 56.9273 70.5137 57.317 70.9277 cv
58.0553 68.1411 59.4195 65.481 61.1231 62.9243 cv
60.7071 62.8154 60.254 62.8018 59.7843 62.8687 cv
cp
f
28.3912 28.5879 mo
29.8785 26.8818 32.0909 25.1011 33.1388 23.0137 cv
33.8912 22.5249 34.6686 22.0933 35.4645 21.7017 cv
33.7872 20.6309 32.1861 19.4116 30.5382 18.2842 cv
29.8404 18.877 29.2403 19.4687 28.8316 19.8911 cv
26.9874 21.7959 25.4415 24.0137 23.9454 26.229 cv
25.4566 26.9658 26.9342 27.7598 28.3912 28.5879 cv
cp
.603922 .576471 .588235 rgb
f
23.3692 33.3687 mo
23.0606 33.0938 22.9166 32.791 22.8839 32.4932 cv
22.4601 32.2549 22.0406 32.0068 21.6173 31.7676 cv
20.7413 32.8335 19.9688 34.0356 19.2613 35.2759 cv
20.484 36.6309 21.7198 37.9629 22.9806 39.2559 cv
23.881 37.9409 24.7896 36.5913 25.5606 35.207 cv
24.8121 34.6104 24.0782 33.9995 23.3692 33.3687 cv
cp
f
45.9273 37.7368 mo
46.1231 36.0137 46.3502 34.2969 46.6422 32.5928 cv
46.0919 32.7905 45.5528 33.1079 45.1295 33.4917 cv
44.2003 34.3335 43.6969 35.4897 43.6085 36.7256 cv
43.5123 38.0698 45.0777 38.4224 45.9273 37.7368 cv
cp
f
52.4747 63.2915 mo
52.3648 64.5718 52.2247 65.853 52.0211 67.1099 cv
53.9845 67.9424 55.9454 68.5171 58.0089 68.7925 cv
58.3736 67.8384 58.8111 66.8999 59.2994 65.9741 cv
57.1534 64.9141 54.7901 63.9219 52.4747 63.2915 cv
cp
.113725 .117647 .113725 rgb
f
32.3097 43.519 mo
31.4518 43.519 30.6295 44.2734 30.669 45.1597 cv
30.7091 46.0483 31.3902 46.8003 32.3097 46.8003 cv
33.1681 46.8003 33.9898 46.0454 33.9503 45.1597 cv
33.9107 44.2705 33.2296 43.519 32.3097 43.519 cv
cp
.317647 .290196 .301961 rgb
f
39.9669 46.4263 mo
37.1168 46.4263 37.1119 50.856 39.9669 50.856 cv
42.8175 50.856 42.8224 46.4263 39.9669 46.4263 cv
cp
f
42.0768 50.9336 mo
41.857 51.5962 41.6378 52.2588 41.4181 52.9214 cv
38.5841 50.46 35.5675 48.2466 32.547 45.9927 cv
28.4908 42.9653 22.8702 39.0703 20.4957 34.2642 cv
20.5655 34.0835 20.63 33.9004 20.7018 33.7207 cv
20.7354 33.6362 20.7799 33.5532 20.8145 33.4692 cv
26.1134 36.4336 31.3634 39.3906 36.3912 42.8179 cv
37.5821 43.6294 43.8521 46.0059 44.2472 47.0786 cv
43.9669 46.3179 42.1104 50.8325 42.0768 50.9336 cv
cp
47.6837 45.6592 mo
47.1983 43.522 45.169 43.1606 43.3287 42.2339 cv
39.8907 40.502 36.9293 38.1621 33.6681 36.1523 cv
29.4713 33.5659 25.0772 31.2725 20.7774 28.8633 cv
19.3438 28.0601 18.0084 29.1743 17.8087 30.4131 cv
17.5582 30.9609 17.316 31.5176 17.0831 32.0859 cv
16.296 32.4404 15.7765 33.2329 16.1817 34.2915 cv
20.2398 44.8926 33.2306 50.4087 40.9337 57.8809 cv
42.0519 58.9658 43.8043 58.4224 44.2765 56.998 cv
45.2184 54.1553 48.3619 48.6426 47.6837 45.6592 cv
cp
0 0 0 rgb
f
71.0294 43.0166 mo
69.5245 43.0918 68.0157 42.9683 66.5079 42.8091 cv
66.0821 42.4878 65.6368 42.1958 65.1183 42.0366 cv
63.8209 41.6392 62.3922 41.9434 61.1104 42.3462 cv
60.0411 42.2954 58.8404 42.2427 57.8814 42.4556 cv
57.3585 42.4727 56.8355 42.4893 56.3126 42.5063 cv
55.9737 43.6714 55.9073 43.6357 56.1139 42.3989 cv
55.5055 40.3535 56.5777 35.9746 57.0919 33.1992 cv
63.7154 35.3291 70.3365 37.4697 76.9933 39.4941 cv
76.5377 40.4673 76.0299 41.4351 75.5103 41.918 cv
74.3434 43.0039 72.4747 42.9448 71.0294 43.0166 cv
cp
80.3009 36.3223 mo
72.3805 33.9521 64.5216 31.3843 56.65 28.8579 cv
55.3463 28.4395 54.4459 29.3315 54.2457 30.3774 cv
53.7603 30.6909 53.3844 31.1938 53.3009 31.8994 cv
52.9615 34.7612 52.6314 37.624 52.3194 40.4888 cv
52.1803 41.769 51.5714 43.6313 52.2838 44.8887 cv
53.7647 47.5024 57.8009 46.3804 60.2374 46.3589 cv
65.0475 46.3169 70.1573 47.8018 74.9395 46.9561 cv
78.6358 46.3022 79.8897 42.2622 81.4957 39.2603 cv
82.1124 38.1079 81.5704 36.7021 80.3009 36.3223 cv
cp
f
25.8551 25.418 mo
27.4547 23.5337 29.2726 21.793 31.2603 20.2554 cv
35.0865 22.2388 38.7984 24.4145 42.7354 26.1914 cv
45.1793 27.2944 45.358 28.4585 45.0934 30.5469 cv
43.8731 30.8965 42.7403 31.5635 42.003 32.6216 cv
41.7408 32.9976 41.6134 33.3628 41.5094 33.7339 cv
39.9039 32.5942 38.3141 31.4326 36.5743 30.418 cv
33.2066 28.4531 29.4293 27.0825 25.8551 25.418 cv
cp
48.4425 24.7173 mo
46.589 22.8623 43.1554 22.0859 40.8536 20.9062 cv
37.7169 19.2988 34.7096 17.4658 31.5455 15.9072 cv
30.1158 15.2031 28.7931 16.2676 28.5489 17.4478 cv
27.8673 17.9307 27.1866 18.4194 26.5167 18.9409 cv
24.1681 20.7676 22.2892 22.8267 20.7276 25.1138 cv
20.8292 25.1758 20.9288 25.2402 21.0304 25.3027 cv
20.5655 26.1582 20.6505 27.2754 21.7643 27.8579 cv
25.9142 30.0293 30.5235 31.5283 34.5553 33.8716 cv
38.2965 36.0464 41.2423 38.8389 45.2218 40.7222 cv
46.6119 41.3804 48.1534 40.5898 48.2315 38.9956 cv
48.4132 35.2695 49.5875 31.5435 49.6788 27.876 cv
49.7169 26.3574 49.505 25.7817 48.4425 24.7173 cv
cp
f
29.6334 212.254 mo
29.2101 209.116 29.2291 205.885 29.6593 202.748 cv
29.4913 201.601 29.3746 200.461 29.3097 199.328 cv
28.7667 199.579 28.2247 199.832 27.6871 200.103 cv
27.2867 200.305 25.1754 201.47 22.858 202.643 cv
23.4063 203.99 23.9542 205.338 24.526 206.68 cv
25.6812 209.394 27.0504 212.072 28.2398 214.799 cv
28.65 214.677 29.0655 214.572 29.4801 214.463 cv
29.5079 213.728 29.5616 212.991 29.6334 212.254 cv
cp
.203922 .215686 .211765 rgb
f
36.651 196.529 mo
36.6324 202.214 36.0992 207.895 34.8141 213.429 cv
35.1803 213.38 35.5455 213.326 35.9137 213.284 cv
37.9371 208.709 40.0753 204.185 42.0987 199.604 cv
42.8546 197.893 43.5865 196.176 44.3228 194.464 cv
41.7267 195.069 39.1686 195.738 36.651 196.529 cv
cp
f
56.7633 195.945 mo
58.7936 195.014 60.879 194.303 63.0807 194.173 cv
63.4308 193.991 63.7804 193.813 64.13 193.633 cv
64.4019 193.155 64.8199 192.808 65.4298 192.808 cv
65.4869 192.808 li
66.026 191.16 66.5938 189.506 67.1637 187.836 cv
65.3399 189.125 63.1671 189.825 60.8424 190.487 cv
58.1886 191.243 55.5094 191.905 52.8224 192.532 cv
51.7882 194.599 50.7799 196.679 49.7882 198.768 cv
51.9669 197.548 54.2794 196.707 56.7633 195.945 cv
cp
f
63.6314 199.084 mo
60.0733 204.086 53.0045 205.947 47.4952 208.088 cv
47.2281 208.191 46.9864 208.209 46.7696 208.173 cv
46.2828 208.363 45.7921 208.545 45.3033 208.732 cv
44.7311 210.123 44.1637 211.521 43.5704 212.904 cv
49.8702 212.934 56.254 213.658 62.2906 214.206 cv
61.7188 208.875 62.399 203.935 63.6314 199.084 cv
cp
f
29.6334 212.254 mo
29.2101 209.116 29.2291 205.885 29.6593 202.748 cv
29.5084 201.717 29.4034 200.693 29.3331 199.674 cv
29.3082 199.566 29.295 199.459 29.2687 199.352 cv
28.7398 199.596 28.2105 199.839 27.6871 200.103 cv
27.3912 200.252 26.1612 200.927 24.6041 201.743 cv
25.336 204.137 26.0958 206.487 26.6593 208.703 cv
26.7647 209.117 26.8766 209.528 26.985 209.941 cv
27.0006 210.105 27.0318 210.272 27.0978 210.447 cv
27.1178 210.5 27.1393 210.552 27.1593 210.604 cv
27.5343 212.002 27.9317 213.39 28.36 214.765 cv
28.7291 214.656 29.1065 214.573 29.4796 214.475 cv
29.5074 213.735 29.5611 212.995 29.6334 212.254 cv
cp
.317647 .290196 .301961 rgb
f
59.1886 207.029 mo
59.1939 206.744 59.1451 206.472 59.0421 206.213 cv
58.7096 205.171 57.7223 204.389 56.6256 204.503 cv
55.0401 205.264 53.379 205.914 51.7379 206.52 cv
51.6305 206.667 51.5333 206.819 51.4522 206.977 cv
50.9391 207.969 50.9044 208.924 51.0553 210.006 cv
51.1759 210.872 52.0772 211.58 52.8561 211.807 cv
54.5382 212.298 56.3653 211.8 57.6397 210.615 cv
58.0924 210.193 58.4859 209.673 58.7662 209.12 cv
59.0348 208.589 59.2335 208.024 59.2237 207.42 cv
59.1056 206.641 59.0938 206.51 59.1886 207.029 cv
cp
f
61.7096 214.153 mo
61.9015 213.922 62.0792 213.683 62.2281 213.429 cv
62.0807 211.695 62.0509 209.997 62.1402 208.332 cv
61.0768 206.759 58.3736 207.03 57.9044 208.996 cv
57.7037 209.835 57.2281 210.593 56.8062 211.37 cv
55.1729 211.725 52.3346 211.46 51.8131 211.387 cv
50.3878 211.102 49.36 212 49.0118 213.078 cv
53.3087 213.323 57.586 213.772 61.7096 214.153 cv
cp
.14902 .156863 .152941 rgb
f
41.6563 198.59 mo
41.5318 198.326 41.2833 198.123 40.8834 198.121 cv
39.8102 198.115 38.7423 198.168 37.6764 198.245 cv
37.3121 198.139 36.9747 198.035 36.6437 197.946 cv
36.6119 199.646 36.5279 201.345 36.3946 203.039 cv
36.5064 203.098 36.627 203.155 36.7672 203.206 cv
38.0582 203.68 39.1007 203.532 40.4195 203.343 cv
40.984 202.1 41.5465 200.854 42.0987 199.604 cv
42.2721 199.211 42.441 198.818 42.6124 198.425 cv
42.2931 198.485 41.9723 198.553 41.6563 198.59 cv
cp
f
56.7633 195.945 mo
57.2594 195.718 57.7589 195.504 58.2618 195.309 cv
56.7379 194.64 55.2423 194.075 53.1681 194.702 cv
52.6163 194.869 52.0406 195.077 51.4557 195.3 cv
50.898 196.445 50.3614 197.601 49.8155 198.752 cv
51.9859 197.542 54.2896 196.704 56.7633 195.945 cv
cp
f
60.6988 202.079 mo
61.0074 202.068 61.3224 202.046 61.6485 202.017 cv
62.1866 201.968 62.6104 201.977 62.9674 202.026 cv
63.1666 201.033 63.3976 200.045 63.6471 199.062 cv
62.8282 200.218 61.8312 201.216 60.6988 202.079 cv
cp
f
29.6334 212.254 mo
29.2906 209.713 29.252 207.112 29.4728 204.548 cv
29.0562 202.962 28.6622 201.379 28.0406 199.935 cv
27.9234 199.993 27.8043 200.044 27.6871 200.103 cv
27.3238 200.286 25.5499 201.263 23.4928 202.319 cv
23.6056 202.727 23.7135 203.135 23.8268 203.542 cv
24.0211 204.236 24.443 204.677 24.9493 204.905 cv
25.2682 205.928 25.5909 206.939 25.8717 207.931 cv
26.5348 210.272 27.296 212.563 28.0792 214.845 cv
28.5426 214.704 29.0113 214.581 29.4806 214.458 cv
29.5084 213.724 29.5616 212.989 29.6334 212.254 cv
cp
.603922 .576471 .588235 rgb
f
57.4679 207.702 mo
56.8897 206.371 55.0733 205.99 53.9039 206.734 cv
52.9903 207.315 52.588 208.689 52.9811 209.702 cv
53.1954 210.253 53.6329 210.674 54.2584 210.674 cv
54.5772 210.674 54.8658 210.548 55.0968 210.352 cv
55.1871 210.378 55.2774 210.404 55.3653 210.437 cv
56.0548 210.694 56.9049 210.31 57.3224 209.77 cv
57.8165 209.13 57.777 208.413 57.4679 207.702 cv
cp
f
63.8004 193.323 mo
64.0455 193.323 64.2613 193.28 64.4601 193.214 cv
64.6334 193.045 64.8399 192.919 65.0865 192.858 cv
66.1715 191.893 65.9117 189.719 64.2931 189.349 cv
63.6285 189.615 62.943 189.855 62.234 190.075 cv
61.4176 191.246 61.9332 193.323 63.8004 193.323 cv
cp
.317647 .290196 .301961 rgb
f
25.4806 202.395 mo
26.027 202.133 26.5802 201.884 27.1207 201.677 cv
27.0846 202.104 27.0426 202.497 27.0479 202.653 cv
27.0777 203.54 27.1827 204.388 27.296 205.266 cv
27.3927 206.013 27.4571 206.712 27.4796 207.388 cv
26.8131 205.724 26.1471 204.059 25.4806 202.395 cv
cp
31.506 206.55 mo
31.3341 204.886 31.089 203.292 31.0538 201.613 cv
31.0284 200.418 31.0816 199.31 30.5562 198.217 cv
30.2779 197.637 29.4718 197.169 28.8297 197.226 cv
26.5699 197.426 24.1886 198.799 22.0797 199.618 cv
20.3224 200.3 20.4342 202.592 21.5851 203.361 cv
23.0846 207.108 24.5846 210.855 26.0841 214.602 cv
26.1895 214.866 26.2921 215.139 26.3961 215.406 cv
26.6876 215.302 26.984 215.211 27.2789 215.116 cv
28.1368 215.592 29.2647 215.513 29.8492 214.39 cv
31.1295 211.929 31.7926 209.335 31.506 206.55 cv
cp
0 0 0 rgb
f
60.5787 193.315 mo
58.0675 194.603 55.4122 195.638 52.7818 196.691 cv
52.9474 196.215 53.1119 195.738 53.3087 195.28 cv
54.3878 192.763 56.2164 192.354 58.649 192.013 cv
59.9527 191.83 61.2374 191.612 62.5108 191.268 cv
62.9781 191.142 63.9127 190.71 64.8292 190.361 cv
63.9254 191.732 62.2335 192.467 60.5787 193.315 cv
cp
61.2579 207.207 mo
61.2193 208.649 61.2325 210.122 61.3536 211.562 cv
61.3551 211.612 61.3565 211.646 61.3585 211.693 cv
60.6959 211.652 60.0328 211.633 59.3692 211.648 cv
58.9166 211.65 58.463 211.669 58.0094 211.684 cv
58.2921 211.542 58.5597 211.371 58.8028 211.164 cv
59.2135 210.813 59.5392 210.406 59.7687 209.915 cv
59.9659 209.491 60.0509 209.084 60.0929 208.622 cv
60.1891 207.56 60.295 207.983 59.1378 208.107 cv
61.6705 207.835 61.6983 203.833 59.1378 204.107 cv
58.6959 204.155 58.3077 204.236 57.9552 204.384 cv
59.2618 203.321 60.9259 201.909 62.2159 200.982 cv
62.0001 203.084 61.2999 205.634 61.2579 207.207 cv
cp
55.795 208.241 mo
55.4942 208.335 55.0636 208.289 54.7623 208.253 cv
54.3619 208.207 53.5831 208.124 53.4522 207.68 cv
53.4132 207.546 53.3551 207.434 53.2984 207.321 cv
54.3165 206.819 55.3145 206.264 56.2945 205.648 cv
56.4478 205.552 56.6441 205.41 56.8595 205.248 cv
56.2296 206.075 56.3917 206.855 56.1183 207.791 cv
55.9825 208.254 56.631 207.979 55.795 208.241 cv
cp
50.9557 212.14 mo
49.8292 212.217 47.7403 212.812 46.7022 212.426 cv
45.7433 212.599 45.7501 212.466 46.7223 212.027 cv
47.067 211.121 47.4464 210.229 47.8312 209.34 cv
48.4395 209.188 49.0387 209.016 49.628 208.824 cv
50.1617 210.521 51.5401 211.527 53.1432 211.978 cv
52.4132 212.034 51.6837 212.09 50.9557 212.14 cv
cp
69.4952 188.001 mo
69.4981 187.063 68.8614 186.377 68.0269 186.073 cv
66.3565 185.464 64.1295 186.599 62.5338 187.088 cv
60.0353 187.854 57.4181 187.875 54.9342 188.592 cv
50.5753 189.85 49.5084 194.021 48.1622 197.856 cv
47.7105 199.142 48.5772 200.033 49.6192 200.239 cv
49.9098 201.155 50.7389 201.815 51.8888 201.339 cv
54.4498 200.279 57.0528 199.279 59.5943 198.154 cv
58.6754 198.93 57.8297 199.734 57.1466 200.227 cv
53.752 202.676 50.2735 204.688 46.1715 205.619 cv
45.7916 205.607 45.4205 205.72 45.1144 205.996 cv
44.6671 206.292 44.4337 206.744 44.3849 207.234 cv
43.1119 209.893 40.4659 214.437 43.9366 216.15 cv
45.7022 217.022 48.3536 216.316 50.2467 216.188 cv
53.0362 215.999 55.8351 215.717 58.631 215.653 cv
61.6305 215.585 64.8805 216.712 65.4395 213.012 cv
65.8448 210.331 65.1397 207.345 65.443 204.587 cv
65.6861 202.378 66.6974 199.696 65.9732 197.494 cv
65.6656 196.559 64.9703 196.144 64.0445 196.025 cv
64.0099 196.021 63.9747 196.024 63.94 196.021 cv
64.3136 195.815 64.6876 195.611 65.0548 195.394 cv
68.0089 193.641 69.4845 191.657 69.4952 188.001 cv
cp
f
92.211 227.807 mo
92.2374 227.982 92.2457 228.168 92.2096 228.374 cv
91.3512 233.241 90.9503 238.15 89.8336 242.899 cv
90.5245 241.784 91.2003 240.671 91.8014 239.551 cv
93.8297 235.769 95.6651 231.865 97.4078 227.914 cv
95.6739 227.828 93.9381 227.79 92.211 227.807 cv
cp
.203922 .215686 .211765 rgb
f
84.1832 239.813 mo
84.0289 239.593 83.9308 239.315 83.9298 238.975 cv
83.9244 237.34 84.17 235.75 84.565 234.192 cv
84.7579 232.223 85.002 230.25 85.2564 228.274 cv
83.2379 228.542 81.2535 228.93 79.3311 229.496 cv
79.4234 229.745 79.5206 229.993 79.6075 230.243 cv
80.7374 233.495 81.025 236.811 82.9908 239.738 cv
83.3482 240.27 83.7384 240.776 84.1568 241.259 cv
84.1642 240.777 84.1661 240.294 84.1832 239.813 cv
cp
f
101.318 239.928 mo
99.6397 242.645 97.9791 245.372 96.3263 248.104 cv
98.8492 248.729 101.485 249.06 104.09 249.138 cv
102.922 246.148 102.026 243.071 101.318 239.928 cv
cp
f
112.654 229.238 mo
111.223 229.107 109.758 228.961 108.273 228.812 cv
107.541 230.229 106.696 231.627 105.826 232.988 cv
107.712 237.983 109.072 243.117 109.931 248.373 cv
111.09 246.393 112.03 244.3 112.599 242.173 cv
113.724 237.967 113.196 233.545 112.654 229.238 cv
cp
f
83.9298 238.975 mo
83.9244 237.34 84.17 235.75 84.565 234.192 cv
84.7096 232.714 84.8814 231.235 85.0655 229.754 cv
84.9185 229.424 84.732 229.173 84.5201 228.989 cv
84.5055 228.951 84.4893 228.914 84.4747 228.876 cv
84.4347 228.714 84.3824 228.555 84.3385 228.394 cv
82.6153 228.66 80.9225 229.025 79.273 229.514 cv
80.4093 232.759 81.7584 235.922 83.4698 238.951 cv
83.6544 239.278 83.88 239.522 84.128 239.701 cv
84.0118 239.499 83.9308 239.264 83.9298 238.975 cv
cp
.317647 .290196 .301961 rgb
f
93.2657 233.271 mo
92.5196 233.536 91.8619 234.015 91.2784 234.574 cv
91.0289 236.367 90.7667 238.153 90.4474 239.923 cv
90.6539 240.154 90.8839 240.375 91.1622 240.572 cv
91.1773 240.583 91.1959 240.589 91.2115 240.6 cv
91.4122 240.25 91.6134 239.901 91.8014 239.551 cv
92.9791 237.355 94.0919 235.118 95.1607 232.854 cv
94.4415 232.788 93.961 232.893 93.2657 233.271 cv
cp
f
102.179 243.386 mo
102.159 243.454 102.127 243.517 102.114 243.586 cv
101.437 243.598 100.742 243.602 100.056 243.589 cv
100.265 243.255 100.373 242.848 100.328 242.374 cv
100.307 242.144 100.262 241.935 100.205 241.737 cv
98.8736 243.908 97.5489 246.082 96.231 248.261 cv
97.2789 248.473 98.3443 248.604 99.3292 248.725 cv
100.899 248.918 102.492 249.061 104.093 249.146 cv
103.356 247.258 102.72 245.338 102.179 243.386 cv
cp
.14902 .156863 .152941 rgb
f
112.041 236.972 mo
111.077 237.577 110.994 238.381 111.325 239.041 cv
111.158 239.089 110.992 239.142 110.824 239.188 cv
110.024 239.413 109.606 239.973 109.484 240.596 cv
109.101 240.687 108.718 240.774 108.336 240.865 cv
108.986 243.339 109.518 245.844 109.931 248.377 cv
111.091 246.396 112.029 244.301 112.599 242.173 cv
113.093 240.324 113.265 238.433 113.26 236.528 cv
112.875 236.557 112.534 236.663 112.041 236.972 cv
cp
f
84.1832 239.813 mo
84.0289 239.593 83.9308 239.315 83.9298 238.975 cv
83.9244 237.34 84.17 235.75 84.565 234.192 cv
84.5992 233.843 84.6456 233.493 84.6827 233.143 cv
84.0177 231.57 83.2857 230.056 82.2413 228.815 cv
82.2379 228.8 82.235 228.785 82.232 228.77 cv
81.0323 229.018 79.8521 229.326 78.6935 229.692 cv
79.3785 232.754 81.6363 235.882 82.9601 238.527 cv
83.3341 239.275 83.7198 240.055 84.1656 240.776 cv
84.1729 240.455 84.172 240.134 84.1832 239.813 cv
cp
.603922 .576471 .588235 rgb
f
93.4664 236.334 mo
94.0177 235.236 94.5548 234.13 95.0821 233.017 cv
94.8863 232.933 94.6886 232.862 94.5011 232.814 cv
93.337 232.518 92.1573 233.385 92.1573 234.6 cv
92.1573 235.451 92.7286 236.101 93.4664 236.334 cv
cp
f
102.149 243.285 mo
101.287 243.303 100.303 243.249 99.2911 243.228 cv
98.3731 244.73 97.4581 246.234 96.5465 247.741 cv
98.8795 248.316 101.335 248.49 103.825 248.438 cv
103.191 246.745 102.63 245.028 102.149 243.285 cv
cp
.113725 .117647 .113725 rgb
f
108.785 242.662 mo
109.202 244.41 109.564 246.171 109.864 247.948 cv
109.978 247.934 110.093 247.921 110.207 247.906 cv
111.239 246.064 112.075 244.132 112.599 242.173 cv
112.602 242.16 112.605 242.146 112.608 242.133 cv
111.337 242.326 110.062 242.5 108.785 242.662 cv
cp
f
102.299 248.071 mo
100.915 247.958 99.5577 247.777 98.2457 247.514 cv
98.9727 246.016 99.5929 244.456 100.293 242.939 cv
101.047 244.613 101.694 246.331 102.299 248.071 cv
cp
106.92 249.253 mo
105.589 245.267 104.205 241.3 102.087 237.653 cv
101.291 236.282 99.4625 236.443 98.6324 237.653 cv
96.3717 240.95 95.4923 245.007 93.2008 248.263 cv
91.8893 250.126 94.4395 251.899 96.0675 250.848 cv
99.0328 251.529 102.15 251.817 105.236 251.86 cv
105.21 251.803 105.187 251.744 105.161 251.687 cv
106.315 251.599 107.39 250.661 106.92 249.253 cv
cp
0 0 0 rgb
f
81.7452 230.455 mo
81.9395 230.406 82.1349 230.36 82.3282 230.308 cv
82.3097 230.821 82.2906 231.335 82.2716 231.849 cv
82.0938 231.384 81.9166 230.92 81.7452 230.455 cv
cp
83.8976 225.629 mo
82.0641 226.285 80.2247 226.771 78.3058 227.107 cv
76.546 227.415 76.5313 229.37 77.5313 230.386 cv
78.8204 233.833 80.1505 237.374 81.9518 240.552 cv
81.9498 240.609 81.9478 240.666 81.9454 240.723 cv
81.9093 241.71 82.4767 242.315 83.1939 242.544 cv
83.381 242.821 83.5611 243.104 83.7589 243.372 cv
83.8917 243.553 84.0343 243.72 84.172 243.893 cv
84.1607 243.472 84.1598 243.051 84.1559 242.629 cv
85.0577 242.52 85.9029 241.888 85.9454 240.723 cv
86.107 236.334 86.2682 231.946 86.4293 227.558 cv
86.4747 226.328 85.1046 225.197 83.8976 225.629 cv
cp
f
93.5172 229.564 mo
94.1373 229.341 95.0567 229.361 95.963 229.456 cv
95.3634 230.905 94.6959 232.31 93.9708 233.682 cv
93.294 233.65 92.631 233.676 92.0089 233.773 cv
92.0152 233.644 92.0143 233.517 92.0221 233.387 cv
92.1109 231.903 91.9469 230.13 93.5172 229.564 cv
cp
99.253 225.92 mo
96.2662 225.475 90.2467 224.318 88.7057 227.902 cv
87.9444 229.672 88.1065 231.975 87.9933 233.874 cv
87.8341 236.531 88.0152 239.116 87.9908 241.768 cv
87.9742 243.569 89.9249 244.106 91.1075 243.387 cv
91.8526 243.542 92.6817 243.331 93.2286 242.542 cv
96.2989 238.106 98.837 233.474 100.65 228.38 cv
100.982 227.448 100.269 226.071 99.253 225.92 cv
cp
f
239.82 162.773 mo
240.077 163.037 240.345 163.294 240.598 163.561 cv
243.087 166.18 245.532 168.83 248.022 171.436 cv
248.052 171.46 248.082 171.485 248.112 171.51 cv
250.188 166.358 251.469 160.942 251.66 155.479 cv
247.542 157.641 243.506 159.948 239.82 162.773 cv
cp
.203922 .215686 .211765 rgb
f
235.504 158.448 mo
240.352 155.168 245.213 151.864 249.99 148.493 cv
250.326 148.255 250.721 147.942 251.149 147.615 cv
250.945 146.432 250.686 145.251 250.361 144.075 cv
250.34 142.878 250.278 141.701 250.189 140.551 cv
244.296 145.232 238.118 149.567 231.774 153.317 cv
232.881 154.859 233.957 156.425 235.095 157.916 cv
235.231 158.094 235.368 158.271 235.504 158.448 cv
cp
f
227.93 165.975 mo
228.034 165.148 228.666 164.688 229.322 164.583 cv
227.522 162.32 225.865 159.955 224.417 157.44 cv
221.715 158.726 218.879 159.621 215.833 159.426 cv
213.778 159.295 208.203 157.61 205.119 157.972 cv
211.275 166.988 217.844 175.698 224.508 184.337 cv
225.607 178.214 227.147 172.156 227.93 165.975 cv
cp
f
237.143 173.088 mo
236.727 172.687 236.32 172.281 235.911 171.875 cv
235.831 177.509 234.346 183.121 232.226 188.434 cv
232.153 189.341 232.051 190.246 231.936 191.151 cv
231.935 191.204 231.931 191.256 231.93 191.308 cv
231.92 191.307 li
231.902 191.44 231.895 191.573 231.876 191.707 cv
231.798 192.276 231.434 192.585 230.994 192.708 cv
231.423 193.26 231.852 193.811 232.28 194.363 cv
233.428 193.286 234.545 192.187 235.593 191.048 cv
238.706 187.665 241.566 183.871 243.988 179.802 cv
241.662 177.555 239.4 175.262 237.143 173.088 cv
cp
f
224.412 157.432 mo
221.922 158.614 219.32 159.47 216.542 159.444 cv
216.265 159.943 215.998 160.452 215.744 160.98 cv
214.492 163.576 218.116 165.782 219.65 163.263 cv
220.205 162.351 220.847 161.523 221.517 160.694 cv
221.858 160.272 222.21 159.86 222.579 159.461 cv
222.676 159.357 222.957 159.136 223.136 158.972 cv
223.847 159.029 224.525 158.968 225.168 158.686 cv
224.913 158.27 224.656 157.855 224.412 157.432 cv
cp
.317647 .290196 .301961 rgb
f
223.491 183.015 mo
223.774 182.742 224.042 182.471 224.285 182.216 cv
224.95 181.518 225.385 180.366 225.026 179.41 cv
224.205 177.213 222.071 175.998 219.742 176.64 cv
219.44 176.723 219.16 176.846 218.889 176.983 cv
220.415 179 221.948 181.011 223.491 183.015 cv
cp
f
225.141 158.643 mo
224.066 159.474 223.236 160.82 222.478 161.813 cv
221.806 162.692 221.989 163.525 222.551 164.1 cv
222.599 164.738 222.912 165.371 223.501 165.669 cv
223.714 165.777 li
224.336 166.092 225.267 166.104 225.759 165.514 cv
225.856 165.399 225.944 165.271 226.039 165.148 cv
226.043 165.177 226.142 165.134 226.313 165.03 cv
226.973 164.629 227.61 164.156 228.127 163.582 cv
228.197 163.503 228.253 163.406 228.319 163.321 cv
227.182 161.818 226.128 160.254 225.141 158.643 cv
cp
.14902 .156863 .152941 rgb
f
216.684 174.064 mo
218.291 173.467 219.771 172.612 221.518 171.82 cv
223.388 170.973 222.055 167.989 220.137 168.543 cv
217.751 169.232 215.797 169.651 213.518 169.789 cv
214.568 171.218 215.621 172.645 216.684 174.064 cv
cp
f
206.529 160 mo
206.633 160.108 206.743 160.21 206.867 160.297 cv
206.842 160.322 206.815 160.349 206.79 160.374 cv
207.626 161.577 208.462 162.78 209.311 163.974 cv
210.822 162.399 212.462 160.664 212.853 158.913 cv
210.719 158.472 208.09 157.916 206.077 157.912 cv
205.873 158.464 205.929 158.998 206.149 159.452 cv
206.275 159.635 206.403 159.816 206.529 160 cv
cp
f
237.345 153.674 mo
237.369 154.871 237.351 156.063 237.283 157.239 cv
241.54 154.354 245.797 151.451 249.99 148.493 cv
250.451 148.168 251.019 147.702 251.637 147.25 cv
251.711 144.659 251.536 142.204 251.141 139.79 cv
246.166 143.795 240.982 147.563 235.653 150.94 cv
235.995 151.797 236.308 152.493 236.396 152.67 cv
236.641 153.16 236.974 153.48 237.345 153.674 cv
cp
f
250.403 157.156 mo
250.498 156.775 250.579 156.392 250.655 156.008 cv
246.887 158.016 243.209 160.177 239.824 162.771 cv
240.081 163.034 240.345 163.294 240.598 163.561 cv
242.838 165.919 245.047 168.299 247.281 170.651 cv
250.888 165.177 253.625 159.379 250.403 157.156 cv
cp
f
237.143 173.088 mo
236.722 172.682 236.323 172.261 235.912 171.849 cv
235.836 177.491 234.349 183.113 232.226 188.434 cv
232.153 189.341 232.051 190.246 231.936 191.151 cv
231.935 191.204 231.931 191.256 231.93 191.308 cv
231.92 191.307 li
231.902 191.44 231.895 191.573 231.876 191.707 cv
231.798 192.275 231.435 192.584 230.996 192.708 cv
231.186 192.952 231.375 193.198 231.565 193.442 cv
235.581 190.241 238.745 185.812 240.113 180.962 cv
240.922 180.057 241.56 179.042 242.102 177.961 cv
240.432 176.316 238.786 174.67 237.143 173.088 cv
cp
f
224.416 157.439 mo
222.454 158.37 220.422 159.093 218.291 159.347 cv
217.969 159.866 217.731 160.425 217.706 161.056 cv
217.663 162.167 218.232 163.215 219.357 163.477 cv
219.997 163.625 220.784 163.386 221.104 162.766 cv
221.389 162.211 221.843 161.783 222.263 161.293 cv
222.877 160.577 223.432 159.753 224.09 159.083 cv
224.353 158.814 224.645 158.562 224.929 158.306 cv
224.756 158.019 224.584 157.73 224.416 157.439 cv
cp
.603922 .576471 .588235 rgb
f
215.832 172.917 mo
216.667 172.655 217.486 172.368 218.279 172.039 cv
219.015 172.349 219.737 171.826 219.591 171.016 cv
219.554 170.807 219.516 170.598 219.479 170.389 cv
219.387 169.88 218.795 169.469 218.294 169.487 cv
216.827 169.541 215.341 169.835 213.871 170.265 cv
214.523 171.15 215.175 172.035 215.832 172.917 cv
cp
.113725 .117647 .113725 rgb
f
243.476 150.438 mo
243.653 151.173 243.842 151.906 244.01 152.644 cv
246.011 151.267 248.011 149.889 249.99 148.493 cv
250.284 148.286 250.621 148.021 250.986 147.739 cv
250.841 145.501 250.444 143.309 250.293 141.915 cv
250.245 141.474 250.191 141.033 250.136 140.593 cv
247.5 142.686 244.806 144.703 242.064 146.635 cv
241.878 147.167 241.789 147.694 241.891 148.191 cv
241.99 148.675 242.838 149.667 243.476 150.438 cv
cp
f
244.726 159.403 mo
244.72 159.447 244.717 159.49 244.711 159.535 cv
244.369 160.572 243.977 161.606 243.52 162.638 cv
243.274 163.194 243.015 163.742 242.751 164.288 cv
242.401 164.104 241.921 164.121 241.616 164.399 cv
241.575 164.438 241.542 164.481 241.501 164.521 cv
243.613 166.757 245.707 169.006 247.825 171.227 cv
249.346 167.446 249.777 162.911 250.059 159.285 cv
250.138 158.272 250.178 157.264 250.196 156.259 cv
248.34 157.255 246.511 158.295 244.726 159.403 cv
cp
f
239.683 181.176 mo
240.39 179.936 240.971 178.65 241.465 177.333 cv
240.012 175.898 238.576 174.469 237.143 173.088 cv
237.033 172.982 236.929 172.874 236.821 172.769 cv
236.467 173.711 236.12 174.654 235.743 175.571 cv
235.711 175.65 235.675 175.728 235.642 175.806 cv
235.106 180.107 233.852 184.359 232.226 188.434 cv
232.153 189.341 232.051 190.246 231.936 191.151 cv
231.935 191.204 231.931 191.256 231.93 191.308 cv
231.92 191.307 li
231.902 191.44 231.895 191.573 231.876 191.707 cv
231.798 192.276 231.434 192.585 230.995 192.708 cv
231.253 193.041 231.511 193.373 231.769 193.705 cv
232.829 192.664 233.867 191.598 234.894 190.519 cv
237.189 188.105 239.459 186.093 239.668 182.65 cv
239.691 182.267 239.475 181.926 239.172 181.702 cv
239.374 181.574 239.553 181.403 239.683 181.176 cv
cp
f
208.412 162.706 mo
209.346 161.406 210.395 160.031 211.001 158.538 cv
210.606 158.46 210.208 158.386 209.807 158.315 cv
208.918 159.218 208.176 160.317 207.483 161.371 cv
207.794 161.815 208.099 162.263 208.412 162.706 cv
cp
f
214.467 166.591 mo
214.403 166.591 214.402 166.691 214.467 166.691 cv
214.531 166.691 214.531 166.591 214.467 166.591 cv
cp
.317647 .290196 .301961 rgb
f
237.134 177.819 mo
235.218 177.819 235.215 180.796 237.134 180.796 cv
239.049 180.796 239.052 177.819 237.134 177.819 cv
cp
.203922 .215686 .211765 rgb
f
246.634 163.424 mo
246.569 163.424 246.569 163.524 246.634 163.524 cv
246.698 163.524 246.698 163.424 246.634 163.424 cv
cp
f
245.3 147.153 mo
243.385 147.153 243.382 150.129 245.3 150.129 cv
247.216 150.129 247.219 147.153 245.3 147.153 cv
cp
f
247.619 166.594 mo
246.204 165.274 244.776 163.969 243.333 162.681 cv
245.372 161.431 247.407 160.177 249.441 158.917 cv
249.17 161.494 248.525 164.063 247.619 166.594 cv
cp
250.858 153.347 mo
247.093 155.7 243.315 158.028 239.521 160.332 cv
238.737 160.807 238.495 161.552 238.599 162.254 cv
238.332 162.891 238.408 163.639 239.1 164.248 cv
241.801 166.623 244.451 169.054 247.051 171.54 cv
247.589 172.055 248.208 172.176 248.772 172.056 cv
248.931 172.188 249.09 172.318 249.249 172.45 cv
249.378 172.185 249.505 171.919 249.636 171.653 cv
250.2 171.218 250.564 170.526 250.472 169.823 cv
252.343 165.439 253.246 160.824 253.547 156.124 cv
254.483 154.563 252.742 152.168 250.858 153.347 cv
cp
0 0 0 rgb
f
240.201 153.919 mo
239.413 154.373 236.888 156.306 236.023 156.18 cv
235.604 156.118 234.643 154.661 233.794 153.338 cv
239.083 149.913 244.248 146.313 249.293 142.539 cv
249.429 143.919 249.53 145.299 249.602 146.679 cv
246.84 149.56 243.683 151.912 240.201 153.919 cv
cp
253.36 145.311 mo
253.174 143.058 252.931 140.812 252.643 138.59 cv
252.523 138.688 252.4 138.782 252.28 138.88 cv
252.081 137.555 250.782 136.444 249.453 137.459 cv
243.167 142.257 236.695 146.776 230.025 151.025 cv
228.883 151.752 228.759 153.173 229.62 154.166 cv
232.505 157.491 233.638 161.758 238.458 159.385 cv
244.134 156.591 249.408 153.033 253.585 148.246 cv
254.457 147.246 254.12 146.008 253.36 145.311 cv
cp
f
234.577 188.057 mo
235.361 183.785 236.486 179.614 236.997 175.317 cv
238.371 176.589 239.736 177.869 241.087 179.166 cv
238.997 182.332 236.749 185.324 234.577 188.057 cv
cp
245.144 177.509 mo
242.575 175.012 239.959 172.566 237.296 170.17 cv
236.623 169.564 235.838 169.53 235.183 169.805 cv
234.225 169.855 233.293 170.491 233.27 171.726 cv
233.151 178.234 230.95 184.54 230.109 191.017 cv
230.107 191.027 230.104 191.036 230.1 191.046 cv
230.102 191.046 230.104 191.046 230.105 191.047 cv
230.082 191.224 230.05 191.4 230.029 191.578 cv
229.896 192.713 230.679 193.353 231.588 193.474 cv
232.193 194.253 232.798 195.033 233.403 195.813 cv
237.712 191.288 241.56 186.049 244.834 180.614 cv
244.812 180.593 244.791 180.571 244.769 180.55 cv
245.722 179.911 246.208 178.542 245.144 177.509 cv
cp
f
225.133 171.314 mo
224.786 173.863 224.949 176.974 224.444 179.718 cv
224.411 179.715 224.378 179.703 224.345 179.701 cv
218.843 173.375 213.851 166.581 208.815 159.877 cv
211.82 160.321 214.807 161.112 217.853 160.933 cv
217.923 160.929 217.997 160.917 218.069 160.91 cv
217.522 161.615 217.421 162.606 218.294 163.375 cv
219.391 164.339 220.538 165.135 222.05 165.082 cv
223.517 165.031 224.692 164.072 225.094 162.71 cv
225.386 163.212 225.665 163.726 225.97 164.19 cv
226.217 164.566 226.53 164.809 226.867 164.951 cv
226.02 166.998 225.439 169.069 225.133 171.314 cv
cp
229.735 162.947 mo
229.695 162.696 229.597 162.435 229.424 162.171 cv
227.511 159.261 226.256 156.065 222.359 156.176 cv
219.512 156.257 217.103 157.135 214.169 156.722 cv
211.63 156.364 209.184 155.793 206.617 155.628 cv
205.95 155.585 205.461 155.826 205.141 156.205 cv
203.626 156.099 202.081 157.557 203.218 159.056 cv
209.891 167.849 216.351 176.951 223.808 185.111 cv
224.65 186.034 226.369 185.818 226.949 184.707 cv
229.965 178.923 228.016 171.779 230.825 165.787 cv
231.404 164.55 230.691 163.402 229.735 162.947 cv
cp
f
173.997 226.731 mo
173.843 227.325 173.7 227.918 173.569 228.511 cv
172.359 234.013 173.269 239.375 173.846 244.844 cv
175.192 243.239 176.7 241.73 178.093 240.198 cv
179.474 238.678 180.893 237.195 182.324 235.725 cv
179.838 232.622 177.089 229.358 173.997 226.731 cv
cp
.203922 .215686 .211765 rgb
f
176 222.668 mo
176.536 222.099 177.484 221.898 178.157 222.581 cv
180.786 225.244 183.217 228.091 184.725 231.551 cv
184.828 231.786 184.872 232.014 184.879 232.231 cv
184.989 232.421 185.089 232.616 185.194 232.809 cv
185.214 232.789 185.233 232.769 185.254 232.749 cv
186.332 231.443 187.474 230.203 188.71 229.052 cv
185.095 224.212 181.547 219.324 178.125 214.343 cv
177.202 216.939 176.224 219.563 175.354 222.196 cv
175.569 222.354 175.786 222.506 176 222.668 cv
cp
f
188.786 239.684 mo
189.42 239.352 190.248 239.448 190.725 240.218 cv
193.761 245.109 195.506 251.113 195.815 257.071 cv
199.052 255.095 202.171 252.833 205.06 250.354 cv
201.117 245.276 197.17 240.204 193.272 235.093 cv
191.758 236.604 190.261 238.13 188.781 239.674 cv
188.783 239.677 188.784 239.681 188.786 239.684 cv
cp
f
184.161 244.735 mo
180.506 248.988 177.088 253.435 173.117 257.405 cv
172.657 259.084 172.06 260.715 171.304 262.285 cv
172.266 262.063 173.192 261.803 174.068 261.502 cv
178.954 262.879 184.616 262.361 189.183 260.564 cv
186.403 255.704 185.422 250.153 184.161 244.735 cv
cp
f
189.886 238.506 mo
189.999 238.752 190.129 238.988 190.295 239.19 cv
190.313 239.384 190.38 239.561 190.499 239.723 cv
191.382 241.584 193.949 241.089 194.839 239.632 cv
195.3 239.435 195.75 239.183 196.184 238.899 cv
195.209 237.633 194.244 236.36 193.276 235.089 cv
192.14 236.223 191.005 237.357 189.886 238.506 cv
cp
.317647 .290196 .301961 rgb
f
174.013 226.744 mo
173.859 227.333 173.699 227.922 173.569 228.511 cv
173.51 228.782 173.462 229.051 173.412 229.321 cv
173.67 229.491 173.962 229.667 174.318 229.841 cv
174.887 230.118 175.408 230.251 175.923 230.295 cv
176.147 230.498 176.403 230.655 176.682 230.771 cv
176.676 230.868 176.672 230.966 176.656 231.059 cv
176.251 233.35 175.16 234.463 174.279 236.521 cv
173.642 238.009 174.701 239.99 176.529 239.447 cv
179.217 238.649 180.645 236.797 181.415 234.603 cv
179.175 231.852 176.727 229.053 174.013 226.744 cv
cp
.14902 .156863 .152941 rgb
f
185.018 224.071 mo
184.036 224.269 183.017 224.543 182.053 224.715 cv
181.934 224.629 181.792 224.567 181.641 224.515 cv
181.64 224.317 181.631 224.123 181.599 223.941 cv
181.578 223.825 181.536 223.716 181.49 223.609 cv
182.141 222.616 182.545 221.671 182.372 220.394 cv
181.46 219.119 180.558 217.836 179.66 216.55 cv
178.869 217.396 178.226 218.167 178.063 218.647 cv
177.878 219.191 177.998 219.879 177.841 220.342 cv
177.662 220.872 177.336 221.507 176.971 222.166 cv
177.377 222.112 177.804 222.223 178.157 222.581 cv
180.186 224.636 182.091 226.804 183.551 229.274 cv
184.4 229.195 185.249 229.102 186.079 229.011 cv
186.077 229.081 186.069 229.152 186.075 229.22 cv
186.129 229.82 186.624 230.27 187.247 230.112 cv
187.434 230.065 187.645 229.97 187.801 229.912 cv
187.8 229.913 187.803 229.913 187.802 229.913 cv
188.094 229.619 188.402 229.338 188.706 229.055 cv
187.469 227.399 186.236 225.74 185.018 224.071 cv
cp
f
184.715 247.17 mo
184.286 247.374 183.863 247.595 183.432 247.793 cv
183.856 246.992 184.003 245.991 183.909 245.031 cv
180.354 249.194 177 253.523 173.122 257.4 cv
172.607 259.291 171.91 261.12 171.019 262.872 cv
171.719 262.78 172.417 262.673 173.108 262.542 cv
176.38 261.925 179.542 260.816 182.665 259.623 cv
184.537 259.493 186.368 259.126 188.147 258.56 cv
186.48 254.959 185.589 251.063 184.715 247.17 cv
cp
f
195.774 238.364 mo
195.021 238.931 194.292 239.532 193.595 240.099 cv
192.824 240.724 192.736 241.633 193.045 242.424 cv
192.773 242.601 192.504 242.778 192.233 242.955 cv
194.007 246.581 195.15 250.636 195.62 254.742 cv
195.723 254.668 195.829 254.602 195.931 254.526 cv
198.025 253.563 199.998 252.412 201.616 250.849 cv
201.765 250.706 201.87 250.548 201.945 250.385 cv
202.691 250.02 203.423 249.61 204.137 249.165 cv
201.343 245.569 198.55 241.973 195.774 238.364 cv
cp
f
193.658 235.606 mo
193.567 235.659 193.477 235.711 193.384 235.765 cv
192.482 236.287 192.088 237.588 192.67 238.49 cv
193.234 239.365 194.458 239.809 195.396 239.205 cv
195.626 239.057 195.855 238.911 196.08 238.763 cv
195.271 237.712 194.463 236.66 193.658 235.606 cv
cp
.603922 .576471 .588235 rgb
f
183.327 228.902 mo
184.774 228.502 186.267 228.149 187.754 227.771 cv
187.141 226.947 186.53 226.123 185.922 225.295 cv
185.379 225.511 184.838 225.733 184.308 225.964 cv
184.075 225.429 183.521 225.075 182.914 225.525 cv
182.75 225.647 182.6 225.79 182.441 225.921 cv
182.392 225.822 182.323 225.725 182.21 225.634 cv
181.983 225.453 181.327 225.238 180.422 225.016 cv
181.489 226.24 182.478 227.523 183.327 228.902 cv
cp
.113725 .117647 .113725 rgb
f
178.416 231.09 mo
177.82 232.183 177.297 233.304 176.838 234.395 cv
176.202 235.904 178.547 236.691 179.365 235.46 cv
179.775 234.843 180.179 234.213 180.577 233.58 cv
179.88 232.741 179.155 231.911 178.416 231.09 cv
cp
f
201.235 245.43 mo
201.256 245.646 201.305 245.856 201.405 246.046 cv
200.329 247.027 199.211 247.954 198.027 248.775 cv
197.734 248.979 197.436 249.171 197.136 249.362 cv
196.368 249.57 195.603 249.858 194.844 250.195 cv
194.834 250.193 194.823 250.193 194.813 250.191 cv
195.291 252.172 195.611 254.198 195.763 256.228 cv
198.09 255.167 200.252 253.851 201.604 252.14 cv
202.649 251.398 203.627 250.582 204.583 249.739 cv
203.467 248.303 202.351 246.867 201.235 245.43 cv
cp
f
185.883 252.056 mo
184.414 252.652 182.972 253.183 181.525 253.671 cv
182.33 253 183.098 252.262 183.665 251.386 cv
184.349 250.33 183.009 249.078 181.971 249.692 cv
181.164 250.036 180.42 250.555 179.706 251.097 cv
179.426 251.273 179.14 251.442 178.86 251.621 cv
178.636 251.677 178.411 251.76 178.188 251.854 cv
176.569 253.756 174.904 255.617 173.134 257.388 cv
172.741 258.836 172.241 260.247 171.627 261.613 cv
177.257 261.23 182.955 260.715 188.334 258.956 cv
187.27 256.75 186.512 254.426 185.883 252.056 cv
cp
f
180.728 218.085 mo
179.931 219.317 179.129 220.546 178.345 221.786 cv
177.898 222.493 178.998 223.119 179.458 222.437 cv
180.162 221.392 180.887 220.361 181.602 219.323 cv
181.309 218.912 181.019 218.498 180.728 218.085 cv
cp
f
179.467 256.612 mo
177.929 256.612 177.926 259.003 179.467 259.003 cv
181.005 259.003 181.008 256.612 179.467 256.612 cv
cp
.203922 .215686 .211765 rgb
f
183.3 253.002 mo
182.049 253.002 182.046 254.947 183.3 254.947 cv
184.552 254.947 184.554 253.002 183.3 253.002 cv
cp
f
173.326 261.529 mo
174.586 259.297 175.871 257.207 177.804 255.235 cv
179.695 253.306 181.501 251.301 183.248 249.246 cv
184.124 252.473 185.502 255.408 187.129 258.426 cv
185.479 258.984 183.773 259.49 181.965 259.91 cv
179.489 260.487 176.515 261.084 173.326 261.529 cv
cp
191.865 258.733 mo
189.325 254.224 186.955 249.982 186.394 244.74 cv
186.233 243.242 184.186 241.82 182.98 243.326 cv
180.156 246.851 177.174 250.232 173.972 253.418 cv
171.176 256.2 170.053 259.276 168.088 262.681 cv
167.308 264.035 168.271 265.303 169.436 265.6 cv
169.413 265.635 169.394 265.672 169.37 265.708 cv
169.639 265.693 169.912 265.68 170.178 265.663 cv
176.793 265.244 183.794 264.12 190.271 261.81 cv
190.26 261.775 190.249 261.742 190.237 261.708 cv
191.509 261.555 192.691 260.198 191.865 258.733 cv
cp
0 0 0 rgb
f
193.104 241.6 mo
194.126 241.568 195.134 241.436 196.086 241.196 cv
196.704 242.238 197.259 243.3 197.794 244.111 cv
199.124 246.126 200.904 247.883 202.072 249.995 cv
200.423 251.4 198.705 252.655 196.908 253.791 cv
195.961 249.598 195.323 245.256 193.104 241.6 cv
cp
206.521 250.159 mo
205.571 247.751 204.127 245.961 202.561 243.934 cv
200.906 241.792 199.684 239.359 198.026 237.219 cv
197.037 235.942 195.53 233.8 193.678 233.997 cv
191.494 234.23 189.601 237.136 188.398 238.719 cv
188.171 239.017 188.061 239.313 188.026 239.597 cv
187.655 240.279 187.648 241.149 188.339 241.875 cv
192.333 246.065 192.239 252.422 193.754 257.633 cv
194.068 258.714 194.985 259.12 195.857 259.026 cv
195.857 259.157 195.866 259.288 195.865 259.419 cv
198.763 257.963 201.487 256.215 203.927 254.104 cv
204.728 253.41 205.511 252.681 206.286 251.937 cv
206.278 251.927 206.271 251.917 206.263 251.908 cv
206.648 251.488 206.809 250.888 206.521 250.159 cv
cp
f
27.4923 118.735 mo
23.0289 114.781 18.8751 110.65 14.9137 106.186 cv
11.9957 111.753 9.21152 117.262 8.46933 123.289 cv
8.14756 123.713 7.87314 124.2 7.64609 124.736 cv
8.93418 125.729 10.2076 126.743 11.5499 127.62 cv
15.4298 130.156 19.4815 132.415 23.3912 134.903 cv
24.5895 135.666 25.7765 136.445 26.9596 137.231 cv
25.7384 131.302 25.9181 124.648 27.4923 118.735 cv
cp
.203922 .215686 .211765 rgb
f
36.7955 126.699 mo
36.4083 131.385 35.5387 136.098 35.2633 140.641 cv
35.2179 141.391 34.733 141.845 34.1671 142.01 cv
35.4322 142.827 36.7052 143.629 37.9947 144.402 cv
41.3121 146.043 44.6485 147.645 47.9728 149.262 cv
49.9049 148.519 51.6041 147.557 52.7159 146.24 cv
48.5782 138.817 43.067 132.379 36.7955 126.699 cv
cp
f
33.5479 152.661 mo
29.318 150.806 25.2145 148.67 21.0919 146.574 cv
21.8224 149.546 21.546 152.789 20.9698 155.873 cv
25.0855 154.519 29.3155 153.599 33.5479 152.661 cv
cp
f
12.9298 145.641 mo
12.9278 145.464 12.9586 145.309 13.003 145.164 cv
12.9459 144.318 12.9884 143.478 13.1656 142.65 cv
10.3487 141.271 7.55527 139.865 4.86386 138.287 cv
4.87998 139.018 4.94297 139.743 5.09531 140.451 cv
3.13193 141.772 1.79306 144.182 2.49082 146.594 cv
3.99814 151.804 5.7955 156.884 7.76767 161.91 cv
9.775 160.874 11.7691 159.813 13.7984 158.821 cv
13.3341 154.44 12.9757 150.055 12.9298 145.641 cv
cp
f
7.18466 124.386 mo
8.63095 125.486 10.0479 126.639 11.5499 127.62 cv
12.8936 128.499 14.2603 129.339 15.6319 130.172 cv
16.1427 128.901 16.6266 127.621 17.172 126.417 cv
18.6339 123.193 20.3062 120.089 22.1031 117.04 cv
22.8043 115.85 21.2384 114.814 20.3307 115.579 cv
20.7164 114.755 21.1031 113.939 21.4947 113.131 cv
19.381 111.044 17.3302 108.895 15.3307 106.661 cv
15.2799 106.789 15.2232 106.906 15.1739 107.037 cv
14.7721 108.088 15.1305 108.908 15.7979 109.4 cv
13.6461 112.222 11.0519 114.938 10.1256 117.815 cv
9.88681 118.557 9.84677 119.302 9.98545 119.963 cv
8.94248 121.375 7.89804 122.833 7.18466 124.386 cv
cp
.317647 .290196 .301961 rgb
f
11.4371 147.039 mo
11.5997 146.994 11.7545 146.927 11.9044 146.849 cv
12.0269 148.692 12.1524 150.536 12.276 152.38 cv
12.2936 152.636 12.3038 152.894 12.315 153.151 cv
11.9415 151.128 11.6324 149.096 11.4371 147.039 cv
cp
12.9298 145.641 mo
12.9278 145.464 12.9586 145.309 13.003 145.164 cv
12.9459 144.318 12.9884 143.478 13.1656 142.65 cv
9.81357 141.01 6.49912 139.324 3.34629 137.362 cv
2.30381 137.923 1.61191 139.032 2.11533 140.406 cv
2.9039 142.557 3.64756 144.713 4.36777 146.875 cv
4.51328 147.954 4.70859 149.018 4.95322 150.054 cv
5.09384 150.649 5.39707 151.057 5.78037 151.307 cv
6.61191 154.038 7.38877 156.788 8.06308 159.581 cv
8.25058 160.358 8.67295 160.865 9.19248 161.172 cv
10.7184 160.374 12.252 159.591 13.7999 158.836 cv
13.3351 154.45 12.9757 150.06 12.9298 145.641 cv
cp
f
37.9947 144.402 mo
39.775 145.282 41.5621 146.15 43.3492 147.016 cv
44.2975 147.11 45.2354 147.302 46.1822 147.615 cv
48.8331 148.489 50.2667 144.641 48.0289 143.235 cv
44.8663 141.247 38.6563 140.353 35.5348 142.868 cv
36.3521 143.384 37.1666 143.906 37.9947 144.402 cv
cp
f
26.3487 133.191 mo
25.1065 133.301 24.0284 133.984 22.9825 134.64 cv
22.9801 134.642 22.9776 134.644 22.9747 134.645 cv
23.1129 134.732 23.2535 134.815 23.3912 134.903 cv
24.5592 135.646 25.7164 136.407 26.8697 137.172 cv
26.8897 137.141 26.9063 137.108 26.9259 137.076 cv
26.6705 135.809 26.4767 134.51 26.3487 133.191 cv
cp
f
47.9806 149.265 mo
49.3199 148.75 50.547 148.13 51.5431 147.359 cv
51.1012 146.982 50.5304 146.736 49.8595 146.71 cv
47.9376 146.636 46.003 147.196 44.0914 147.377 cv
45.3893 148.005 46.6852 148.635 47.9806 149.265 cv
cp
.14902 .156863 .152941 rgb
f
36.7955 126.703 mo
36.7091 127.747 36.5982 128.792 36.4757 129.837 cv
37.9015 129.599 38.9698 129.593 39.902 129.813 cv
39.9835 129.892 40.026 129.969 40.0113 130.042 cv
39.7447 131.382 40.6231 132.972 42.1734 132.881 cv
42.4659 132.863 42.7472 132.871 43.023 132.891 cv
41.0558 130.73 38.9664 128.676 36.7955 126.703 cv
cp
f
11.5499 127.62 mo
11.5631 127.629 11.5772 127.637 11.5904 127.646 cv
11.9269 126.651 12.3023 125.661 12.7633 124.661 cv
13.6954 122.637 14.4405 120.751 14.6124 118.564 cv
15.9791 116.238 17.4137 113.957 18.7267 111.709 cv
18.8917 111.426 19.0665 111.142 19.2467 110.856 cv
18.0621 109.634 16.8902 108.397 15.7423 107.125 cv
15.2174 108.163 14.7174 109.177 14.2281 110.102 cv
13.2584 111.934 12.3204 113.756 11.4361 115.592 cv
9.9332 116.289 9.55771 119.165 8.98691 120.744 cv
8.50156 122.087 8.03769 123.403 7.61972 124.716 cv
8.91709 125.714 10.1988 126.737 11.5499 127.62 cv
cp
.603922 .576471 .588235 rgb
f
8.1705 143.066 mo
8.17929 142.449 8.19931 141.833 8.23984 141.216 cv
8.26181 140.879 8.30136 140.546 8.33896 140.212 cv
7.10019 139.56 5.87412 138.887 4.6705 138.176 cv
4.64463 139.325 4.68564 140.502 4.77939 141.692 cv
4.75937 141.737 4.733 141.776 4.71738 141.824 cv
3.70664 144.875 4.99033 148.188 5.92832 151.267 cv
6.06992 152.635 6.15439 153.929 6.11972 155.104 cv
6.09726 155.86 6.68466 156.196 7.25986 156.148 cv
7.73203 157.91 8.2208 159.668 8.70224 161.427 cv
10.0338 160.733 11.3614 160.033 12.7018 159.356 cv
11.9757 156.694 11.2555 154.029 10.5558 151.359 cv
9.84824 148.659 9.56064 145.511 8.1705 143.066 cv
cp
f
37.9947 144.402 mo
38.2701 144.538 38.547 144.67 38.8224 144.806 cv
39.6866 144.707 40.6056 144.618 41.3814 144.301 cv
42.857 143.696 43.3937 141.098 41.3814 140.739 cv
39.61 140.423 37.8048 140.95 36.1588 141.608 cv
35.65 141.811 35.1495 142.053 34.7257 142.363 cv
35.8077 143.056 36.8937 143.743 37.9947 144.402 cv
cp
f
24.8004 122.662 mo
23.1114 122.662 23.1085 125.287 24.8004 125.287 cv
26.4894 125.287 26.4923 122.662 24.8004 122.662 cv
cp
.317647 .290196 .301961 rgb
f
22.2716 124.432 mo
21.9737 124.298 21.6749 124.061 21.358 123.994 cv
21.0743 123.935 20.7403 123.979 20.5372 124.211 cv
20.276 124.509 20.2174 124.779 20.0909 125.003 cv
19.4352 126.167 20.5279 127.786 21.8907 127.345 cv
22.4146 127.175 22.8551 126.773 23.004 126.231 cv
23.1739 125.614 22.9049 124.715 22.2716 124.432 cv
cp
f
23.6339 127.33 mo
22.8043 127.33 22.8028 128.619 23.6339 128.619 cv
24.4635 128.619 24.4645 127.33 23.6339 127.33 cv
cp
f
22.8404 150.21 mo
21.6559 150.532 21.2574 152.068 22.1217 152.933 cv
22.9859 153.797 24.523 153.398 24.8443 152.214 cv
25.1983 150.909 24.1451 149.856 22.8404 150.21 cv
cp
f
18.5421 128.634 mo
16.8609 127.479 15.1798 126.323 13.4986 125.167 cv
12.7076 124.624 10.2306 123.396 9.18906 122.498 cv
10.5074 119.904 12.3878 117.664 13.9386 114.699 cv
14.628 113.382 15.2135 112.019 15.7579 110.639 cv
17.0763 112.001 18.4034 113.355 19.7569 114.684 cv
22.6202 117.495 24.8194 118.619 24.9708 122.878 cv
25.088 126.183 24.6007 129.652 24.7892 133.005 cv
24.3009 132.626 23.8448 132.263 23.4752 132.015 cv
21.8194 130.905 20.1847 129.763 18.5421 128.634 cv
cp
29.3277 136.063 mo
29.3272 136.061 29.3272 136.059 29.3263 136.058 cv
29.3238 136.048 29.3224 136.039 29.3199 136.03 cv
28.3937 132.963 28.8746 129.481 28.9205 126.321 cv
28.9552 123.954 29.607 120.595 28.7359 118.304 cv
28.0353 116.462 26.0074 115.158 24.6349 113.845 cv
21.8829 111.21 19.212 108.498 16.588 105.736 cv
15.857 104.966 14.9522 105 14.2599 105.427 cv
14.0489 105.187 13.8321 104.957 13.6231 104.714 cv
11.6065 109.673 9.49521 114.247 6.41416 118.833 cv
5.85654 119.663 5.42685 120.509 5.07773 121.368 cv
4.86728 121.619 4.73838 121.93 4.73545 122.292 cv
4.70273 122.391 4.66416 122.488 4.6334 122.586 cv
4.6832 122.618 4.73056 122.655 4.77988 122.687 cv
4.80674 122.804 4.83847 122.923 4.89072 123.048 cv
6.30283 126.422 11.7213 128.787 14.6212 130.78 cv
16.8976 132.345 19.1607 133.932 21.4562 135.469 cv
22.8775 136.42 24.9552 138.303 26.6759 138.557 cv
27.1705 138.629 27.5963 138.593 27.9723 138.438 cv
28.9327 138.171 29.7042 137.294 29.3277 136.063 cv
cp
0 0 0 rgb
f
4.94345 141.7 mo
5.14951 141.104 5.39023 140.524 5.63681 139.947 cv
6.77207 140.307 7.90634 140.747 8.89463 141.293 cv
11.5772 142.776 12.1202 143.44 11.9303 146.284 cv
11.6895 149.878 13.0108 153.532 13.0431 157.063 cv
11.7545 157.669 10.4703 158.092 9.20127 158.7 cv
8.82138 157.75 8.44101 156.8 8.06064 155.85 cv
7.83799 155.294 7.45127 154.933 7.00595 154.726 cv
6.95078 153.224 6.67099 152.07 6.04209 150.672 cv
4.49961 147.244 3.70615 145.272 4.94345 141.7 cv
cp
16.7789 155.807 mo
16.3873 152.916 15.7936 150.065 15.9073 147.13 cv
16.0147 144.353 17.0641 141.56 14.5846 139.541 cv
12.1686 137.573 7.88047 136.301 4.88291 135.573 cv
3.64804 135.274 2.53183 136.128 2.38925 137.28 cv
2.24814 137.748 2.0958 138.214 1.90634 138.677 cv
.9957 140.903 -.0399445 143.167 .00107115 145.63 cv
.0586883 149.098 2.96103 151.581 3.02158 154.985 cv
3.03769 155.868 3.52304 156.441 4.14756 156.719 cv
4.16709 156.784 4.17685 156.846 4.20322 156.913 cv
4.9581 158.799 5.71347 160.686 6.46836 162.571 cv
6.51181 162.55 6.55429 162.527 6.59775 162.505 cv
7.04941 163.494 8.13828 164.125 9.25888 163.305 cv
11.1056 161.955 13.294 161.569 15.1793 160.466 cv
15.8736 160.06 16.4728 159.837 16.8341 159.073 cv
17.296 158.097 16.9151 156.811 16.7789 155.807 cv
cp
f
49.4591 145.833 mo
48.2599 146.547 47.1925 146.179 46.1598 145.618 cv
46.3009 145.677 46.441 145.739 46.5851 145.792 cv
48.1651 146.368 49.151 144.924 48.9835 143.606 cv
49.3346 144.302 49.6358 145.016 49.8536 145.762 cv
50.2354 146.6 50.1036 146.624 49.4591 145.833 cv
cp
48.3077 142.324 mo
48.1251 142.167 47.9107 142.03 47.648 141.935 cv
45.5826 141.182 43.8971 139.818 41.7057 139.34 cv
40.005 138.969 38.2247 138.974 36.5162 139.313 cv
36.6832 137.513 37.2447 135.813 37.6622 134.019 cv
37.9303 132.865 38.1427 131.703 38.318 130.534 cv
41.8136 134.322 45.7667 137.853 48.3077 142.324 cv
cp
50.0816 137.754 mo
46.8272 133.265 42.5753 129.622 39.0728 125.338 cv
38.129 124.184 36.7926 124.654 36.1446 125.636 cv
35.4186 125.877 34.7979 126.475 34.7032 127.427 cv
34.2599 131.896 32.2384 136.349 32.4757 140.844 cv
32.5079 141.454 32.7618 141.914 33.1231 142.234 cv
33.2306 142.448 33.3858 142.657 33.6109 142.85 cv
35.3053 144.298 37.4464 144.953 39.3585 146.098 cv
41.3644 147.297 43.2589 148.895 45.4288 149.796 cv
47.7857 150.775 52.7813 150.196 53.8663 147.449 cv
55.0045 144.566 51.6075 139.859 50.0816 137.754 cv
cp
f
36.1944 207.862 mo
36.1104 205.404 36.294 202.833 36.9132 200.929 cv
37.6783 198.576 38.359 198.096 40.7032 197.499 cv
41.2872 197.351 41.9688 197.141 42.6666 196.959 cv
41.6715 198.983 39.7794 201.3 39.006 202.61 cv
37.9933 204.324 37.0655 206.079 36.1944 207.862 cv
cp
47.2921 194.601 mo
47.169 193.455 46.4713 192.697 45.2921 192.601 cv
43.1715 192.427 40.4732 193.364 38.4376 193.964 cv
36.4195 194.558 34.713 194.975 33.839 196.995 cv
31.8375 201.624 31.8863 208.497 32.7975 213.359 cv
33.1227 215.094 35.0421 215.133 36.0606 214.171 cv
36.8272 214.413 37.6681 214.199 38.0948 213.223 cv
39.7213 209.5 41.6407 205.997 43.7413 202.525 cv
44.9869 200.467 47.5645 197.13 47.2921 194.601 cv
cp
f
21.9767 153.836 mo
22.1466 152.918 22.3126 151.763 22.318 151.694 cv
22.4 150.681 22.4171 149.669 22.4103 148.657 cv
24.152 149.15 25.8917 149.663 27.586 150.298 cv
28.2901 150.562 28.9825 150.852 29.6676 151.16 cv
28.4605 151.614 27.2467 152.194 26.3995 152.48 cv
25.0831 152.925 23.502 153.552 21.9767 153.836 cv
cp
35.211 149.624 mo
31.6998 146.762 26.3658 145.614 22.1261 144.419 cv
21.3385 144.197 20.6959 144.436 20.2628 144.885 cv
19.2711 144.894 18.316 145.532 18.3731 146.811 cv
18.4376 148.261 18.4586 149.704 18.3619 151.153 cv
18.2677 152.561 17.7608 154.065 17.8077 155.459 cv
17.8453 156.584 18.2726 157.481 19.4015 157.888 cv
21.107 158.502 23.9347 157.447 25.5479 156.965 cv
27.8058 156.292 29.983 155.366 32.2618 154.761 cv
33.6104 154.403 35.4552 154.367 36.2105 152.966 cv
36.9303 151.632 36.2589 150.477 35.211 149.624 cv
cp
f
111.709 238.166 mo
111.375 239.498 111.014 240.861 110.54 242.175 cv
109.511 239.394 108.612 236.614 107.97 233.646 cv
107.953 233.569 107.924 233.507 107.902 233.437 cv
108.173 232.677 108.466 231.45 109.002 231.077 cv
109.402 230.798 110.489 230.866 111.492 230.98 cv
111.838 233.383 112.315 235.746 111.709 238.166 cv
cp
115.275 229.189 mo
115.18 228.077 114.434 227.236 113.275 227.189 cv
111.466 227.115 108.026 226.282 106.386 227.39 cv
104.896 228.397 104.596 230.849 104.037 232.398 cv
103.834 232.96 103.892 233.443 104.102 233.831 cv
104.046 234.098 104.044 234.392 104.112 234.709 cv
105.011 238.858 106.397 242.64 107.964 246.572 cv
108.008 246.682 108.064 246.777 108.119 246.872 cv
107.657 248.638 110.541 250.012 111.908 248.213 cv
113.886 245.609 114.742 242.354 115.566 239.229 cv
116.479 235.766 115.57 232.667 115.275 229.189 cv
cp
f
182.862 225.065 mo
181.214 223.422 179.391 221.991 177.481 220.672 cv
177.988 219.342 178.617 218.126 179.379 216.98 cv
180.342 218.64 181.125 220.409 182.192 222.01 cv
182.682 222.746 183.219 223.454 183.763 224.151 cv
184.199 224.714 184.649 225.267 185.112 225.809 cv
185.866 226.27 186.061 226.908 185.697 227.723 cv
185.629 227.853 185.578 227.97 185.537 228.08 cv
185.425 227.938 185.315 227.793 185.202 227.651 cv
184.464 226.752 183.686 225.886 182.862 225.065 cv
cp
187.598 222.57 mo
184.919 219.344 183.462 215.428 180.879 212.154 cv
180.241 211.345 178.698 211.408 178.051 212.154 cv
176.014 214.503 174.534 217.035 173.481 219.956 cv
173.145 220.888 173.509 221.612 174.132 222.019 cv
174.088 222.675 174.338 223.354 175.027 223.821 cv
177.143 225.252 179.093 226.864 180.843 228.729 cv
181.936 229.893 182.79 231.68 184.046 232.631 cv
186.378 234.396 188.609 231.917 189.801 229.922 cv
191.704 226.739 189.61 224.992 187.598 222.57 cv
cp
f
176.661 239.712 mo
175.992 240.379 175.327 241.144 174.628 241.869 cv
174.476 240.16 174.499 238.457 174.547 236.658 cv
174.607 234.386 174.305 232.144 174.186 229.888 cv
176.443 231.517 178.78 233.698 180.611 235.733 cv
179.656 237.189 177.733 238.644 176.661 239.712 cv
cp
181.055 230.934 mo
178.955 228.851 177.004 226.768 174.434 225.257 cv
173.504 224.71 172.615 225.002 172.052 225.616 cv
171.108 225.683 170.192 226.317 170.151 227.532 cv
170.035 231.018 170.611 234.454 170.494 237.952 cv
170.4 240.762 170.625 243.414 171.291 246.149 cv
171.598 247.411 173.141 247.979 174.229 247.345 cv
176.594 245.964 178.478 243.559 180.397 241.634 cv
181.803 240.223 184.853 237.907 184.947 235.689 cv
185.039 233.565 182.367 232.234 181.055 230.934 cv
cp
f
209.834 70.7603 mo
208.508 70.8105 203.494 71.5103 202.976 71.0142 cv
202.847 70.8916 205.174 66.0454 206.368 62.9956 cv
209.856 63.6724 213.421 62.0381 216.388 59.6763 cv
216.268 60.5864 216.163 61.499 216.088 62.4165 cv
215.863 65.1597 216.198 67.9722 216.082 70.7056 cv
214.316 71.1333 211.232 70.7075 209.834 70.7603 cv
cp
217.817 52.5405 mo
215.411 55.8633 210.264 60.5098 205.84 58.6797 cv
204.779 58.2402 203.989 58.771 203.644 59.5771 cv
203.329 59.8887 203.102 60.3081 203.049 60.8491 cv
202.679 64.668 197.732 68.8052 199.172 72.8511 cv
200.497 76.5688 206.989 74.8677 209.834 74.7603 cv
212.447 74.6616 218.662 75.8008 219.914 72.5879 cv
220.688 70.6016 219.855 67.5132 219.918 65.4097 cv
220.033 61.5713 220.601 57.8164 221.473 54.0815 cv
222.009 51.7852 219.122 50.7383 217.817 52.5405 cv
cp
f
60.8131 59.5591 mo
59.8595 61.1567 59.0938 62.8555 58.3927 64.5757 cv
58.2496 64.9263 57.0987 68.5605 56.523 70.7231 cv
54.9913 68.4873 54.0509 66.0239 54.2691 63.2271 cv
54.5333 59.8442 55.3419 56.606 55.1598 53.2813 cv
58.5719 54.145 62.2594 53.9893 65.858 53.6333 cv
63.9874 55.4102 62.1969 57.2402 60.8131 59.5591 cv
cp
71.4156 49.0322 mo
66.3766 49.5215 59.5611 51.105 54.7271 49.0034 cv
53.6671 48.5425 52.6734 49.002 52.1187 49.7344 cv
51.3448 50.1118 50.7716 50.9185 51.0069 51.9937 cv
52.1559 57.2363 49.1305 62.6245 50.3233 67.8594 cv
50.9327 70.5342 53.5641 73.6401 55.3517 75.6602 cv
55.794 76.1606 56.6656 76.3926 57.2975 76.1748 cv
60.5411 75.0566 60.8355 69.1797 61.9381 66.3994 cv
64.3634 60.2842 68.4835 57.0566 72.8297 52.4463 cv
73.9171 51.293 73.2374 48.8555 71.4156 49.0322 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_8.eps)
%%CreationDate: 3/12/2018 2:38 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-(N\EoRWl`+>ta/HUEBHu^H_VOm<@_@?+CpocFaKE<B8lBq4*pZj0+a]$8+HTHM[SugQui-qtejlg[Dj<
%]R'SBoliXT*WGcnjmH2G^6.;8fmS/Cr;!D.me4u!4T11CF8_$he]kG`[l:Ks^Nf<]Q`h/_L9Gjl^O.D1aUR``[[41HnNr\Y\:*s<
%hG*Etdsq#%TC:r58h5rEs6K,k^NoP/S(CHm4F?blJ,KMJ?N258XhVCEp5/c8DYCE-PN0^SbMD^^:J\]Sr^NNj>L/JI^A5k\\+i12
%^\JWshsm]t%rscJ47lm_NeW#\eDYoCBm9T3^\_<h7=EI"Is]*i]Uk4O>tjg)D\ooF%m\=!q3'sXhqu0CpA'n2[iE66dT+9m<`cJf
%N7ZmOI[Q-!0Cc/8HZcsIlBRF8ltZ,n[7Q;JEIgAc]4N)YgE3$Crq0p9s*jk+leC#L^=TRGI.?S'PB$4D?F`M=+K)9GP\.]1h=o66
%?iS<mB5aS9oo;bekZ=t%^3qUsYhnR*q%Jebe,fJs46-'2?@R%n7\oe/oC"D%5MO_bs6eLr^\HoS^YM4!SNZ$mhql*FrN#t72u[M!
%d^`"c]B(O0>cMquQJ@6m3o9Zh%<'!3DLic!>B:k`<^cR=YFg77m,cPsaLe(qi_=`Krqb="X7-n>X87>DLoWT8C&O++X*j`42n(I;
%b<,aSiE+Jb=K[,G"Wi)<q=W^s$]N&Kpubs1^e:(7cX2*1^KplUhoRIas44o<%:B)1Q!EhF-#WYUdBE4eorHt6s'C0Mo@L1[s7R6^
%s7GUHUE<imrT]HQ]3daKH+VO4meGP/m!d0e-a2G*p!rBCa?P1Ep$IrcMI/Mlp?bZ4ERQT?Er5"`T?hFkXWMWEs)Ir.c)]G?MdPq%
%o>gk_s1hp5:j0U'rT'r*Z2As=o8jp6W4_QU0A#cerP&lR?F5^)r-AH^4h^dPpA(b-V]4rI&%U_=T0IVsjRq`D5"\&\Dk>%KY.)?+
%[r;98TR2Q0Ik0?l]5.`6SL7+GHI/FY]_Slb%_"++rbgLss1,j(^.-iuElZ(]kKfcKoD6S<It%*5[t"ATGCSKJrme(4j6d_45Fs_3
%Nk`Gr&!Gkc^%gWgkKgkh0ci-[r)RA'g!f,n?i9<'2n';:<D<DD07WRkqrdBKfEp^_+=^<nH*=^W[scu?lI(mWQiEJFo#4Q$bb\rg
%Il3g-c2Rg:dKfU?oeTI$pItLoT(Bp.T8:Mdjg.1cA"o]es7GZS=:Dep^45k=G+G,+?@3,BFSEbHT6u"/RFBL[@_H@L9%LCqh>6A3
%hnGhq\D+cg:\jhP-XT*%2=kIT]#AWN0&7Q/T=<1B\$n$P0pgX+eIK4if8h$Plf1KE2L$s<!rh>&.p2B`rinFaq3MfbK>36H?%(ce
%e'dOA7re9uYP,.ad7pL)g%F+8_U+e=qE9$#(-B-\=I)PFRq9Ea?ql%AOgj"npJGjl508_YO+*-cnf%??qr902?0L\g`8?%DqV12B
%s0V[JlR+@#\V1<\[;:P8=b:Q0Ig[\eQghK8K(o$Zs&!9F'UN'Q8/.bo/IiS>an`[m5J#.l8WJ$9Y5Pbl@qd;NNc![V)h)PF/[a4t
%o?GC^e5JN]^%_c5QC;Tj^:J>`%W\p#@Td`.ia0-B,KEZAI?n)n-]+H@:.300%[WNpU`2<hkpXRqmH'F"V4*8].7H7EOr9Be]TM4g
%%s#al`YRYJ1#mp(j:M&20&\.Ij>_mH*:c+`KdoS!nj&]jA*)g5$dq1HnM`R*EZG$DNkHFa?9Ze=?f]!q-82k%d])ftjB-B2)g@J*
%.*#XTCbM>'?S*I!jN&sq&Y2#g(HAnZaDkCDEZF/dI^tc>nYgJ=*bgIS"F\5K8,kM<7paE!_b^<o.rYFCcW^1M^VM!R:Af0b7*9ui
%o)AqTY4m;=F1lL=):3eo,OI:A@3=PqQf*R9j>b8$O9;D=?sHcq)b>tp(qNm]LXOXhj>`%p*9=nl&/,W`8e>N(V$J/m,KEYlkoe$<
%noS1-,9@T].bB@4'Bp/*JqVZCV!M'@o&h.q^R+u8QD;Qo.fWl:rsJr7U*9*j0c]1q0)=Z",E]p.*%HpQq6S--&%O58Qf8r_2S4&t
%5+TgYNCbPtLn+1d=[)B%47;<#5-f:dIQ=r-j=?/LmG1>:-A\HU)6Qn?7)G.0gE@P*S7M'+.%f&L5+^2cJkVO]1[LK(npNg<\k"Io
%nr<9@OEk',097<C:1eX7Z+-)3\rlLi14DYK_Qc[>b")aTq'qPH\3=6VLl?S@Qm,FM/M_G]flJnPUNBLu_/4tFi@*^SN^5]\+6<P$
%;ifPNrUG,s43DXPVo0gPMQ!05e)>D56[rua$@,JK(^ql/&Y4*OT8qsVBcKX'cGBU6d-u*!6kH4D6C$W\j@^q<&@uWh4p^,0ieVq7
%<-6IjJRY)k-P5=YO$oN.F"NrfViW""/oNGEWBNJC6_mV6N"nH?AcdGTen%@>9K2;tH-O%_6jn>Z,>PqrM-09J:<l##.]2S>;juO#
%#p674dm6Hb?&d.D(8Z#1$de9]S.7K5)e^<2!7>mD#Z6Um6\0fM:V\L&@,QV]qYc3k?(g:I5K_+l_^!m%_h.uQDSeoe0]AkZTu'&H
%2ia>,[.+tgRC>-AfGf9_T0>#+AO+VY<9iZI.!WBI*f%p-1I@^C)%bb\pu4g)Q:jWB0K4)23_gHJ""3>qZ@k_8]/i]#9PdDl`2SbG
%?_Co-!\dGt.Y\%*`!J1'eKGP.-%beTee'AI4;\kN.NBk.7Q%R9!dLMe3q7i&nn-PgknE0EW8+u^FU=RLYY3q+LOjJ*,a!tLOsi(G
%9;BVhO@VS]EgFg"Q*X_aAG4C_8N;N">g"]R@C(&k'^>-37uPI<8VH1J;KaXQXn(^Z\iu!>@NepbfO0QhgYu-)@Wfa'74p*NMonV_
%L'?\-b=U+C`6=<3^&UXD_9<HA,-r/=j[7m(H4,YO[<+n"U6274!uHp1=<(j^YXi/AaBT^,Biqkj*4ZnkEu?B/hJjA\NlK2_%$PH_
%9/=bT+O]Iac%\f1'T(Yp,cPC=6lI=G%2(BQ@$'a"*.]i-bS5%R6Ibp0e"b@X87lm%1Gt1Jh-jtRXF_F_NT%'qi3(gc]5@fc@8nIj
%f58</2ZYS"rZ?D127c$3-HSi+MP'$jqT\Z7A-EYRP#Fb]LbpQPHmObF!9WPSmKF`!Rc1Ccn6sq`VZZEA04-ngEVoFs)f%dD_@=$-
%0"4X4)<dBB(],>3enQu3&#+iMfEb@H(T`:BBP#g&;$<tWYT8M$O@:_p,,-Hi(RtbL&ht/u,!p^Rc/>RCTka>-AuIbM<1o5Z"4a4r
%9;os'j]JGopJcpG^AQ,amE;[c^4"t2(Yugd-<#%mbu%D:`>s_kPGr,.cIp(8MG@0B.Q^XSWpn/-H`Q/l5C5Q3[S]KGQ/R%Zm'u9b
%(@UL,QOaZ.J*.(RO*K!5[Kk@HI7M$G./+g(a8:<e5O=In55ad@O@/I2T^s4RI(nWhB2$%!':fd"F`aa+'"tT,?Q6p5;pDV7"U_i[
%dgIVS/dGP1DIe;+ZIEH#(ss`Uj@@ZSJR1pAd77-]bWD28Pm6'9L>7X^7Q!r8cDf;S1t?-Am\ZGJJ_%6TC6n7B8Yu][RUa5PRg_$_
%!huI`Ar7U1GJHnWDN"`T``=ZKRq2J2PAtb_"r`N>30(<tlUI?b1u4JV;Rf<9H2:n6&`.QHZQn9dW#^]qh05(g+*Ba-NqGPrp@^lA
%pl7/epNZ0J+8d@-r5:i"(jC@o7[`m?'etJf$V\H4f#jT\7'&]%-V99\.T9/ECKN1JANDQT'CD)XWs+NYUU(g%-r0V,>XE)K@!;_A
%f-jq&bZa+s$ff(Y][N9L#t(aA_uM?h_[Nk`3HZ]fkSD]$C&tHP_l@:&lR*UIC`L5Km%^^rmcp0\9s`5,C.E-Jc;sD(BqPjSRH?4t
%n6oMbraXAUElYfGlg;ak3pka,mt6YHGPnq]j1c!$lKlk?5i<7=EFil@eS!Ln$ioJ*iQ5R/;n#3EDN41<K31gIiOih`fM%PkmP*uS
%Dk:*49aA;0>>F1G6*Y"KFdOG08`'^:4'5=H!"+D8d!c=VobJGrE!QGbh%8A)4,TV^Q7MU_)M'GS2aUWnC>EYU1iA++&d)+XV&#3Y
%W+%H[rhpT1XAJR^f,/prpG)%BbWN/Po:i]?1'+"_orMcOC%d(crl_ip48js]N1]-aj)k*!,:aQ@cY1QjO8+f(meEIH#QR*QO?5Z$
%h#Bujll,!Jk2popQc62aUml>`:,f)G%"4>]OCS^0j3@*B+p(:l+61`^$9]I("@4gE:e1!gctB+lSI'TDnc[kW\.`8J6CeI**Z6J,
%OAd;t"#r6tVEp\\;06dK+jf?SDA(Zn_+fP@+$\c7;2DQ2S-j<ed&Bj>Jt36mmO\cM$$l[He6$P:BWUDG!2.W3Z99ge[+O`:E9O^0
%%?&ULMpq6jN7Q"A59>U4H46dQg7;]^J5>k%;ldee?.F%\WfD_/h;_!Mb*t!6],krQ_WEiXEU+cl*&6I?iGS'D:2`:UZ?dK4HlO2J
%a;l@EhE>i/KgY;'i,eqah!sOhZUXbl;*Jc[cPknDh=7g@q5dFWCR!-`jjW&51s/?XT)RpLs$$FKbY]cD74[Bl1;PhGSs.>,F\bHg
%10`Oc/D:J]\WEi\C$pcO4:8>u5e=`T\nsRhXLXskh3F1r?&2S89rSJdIb1bPEf];Qc7`88\$ER,r-/+.:&;\>q"T4<G>CDRgE[TY
%)RCMN9ODp3_arZg@m;2B<E"M1kUiNr1\5)!K3P5.jR_Q\:EIj;+-,AV"aSI5q>6RVQ4b-jW637N+UZ1S;IkbkMHa"Omf)=B:k"<!
%Bu3L488$qqA7ak0Y]:oCV(TJNaSmsc?I&No+s(]Y]$72RFSG.jpp&`RBm]:^9Fr!n:Cq5)Rin2RRnD?-a?Wc?@BP9/&JfR!@jP:)
%/M&NOJKq[/`2kpP+HGqk,cn&>/g4N_4Y!+/)8;Pl=,B0p6<;-S.Z4J1ap:fa&XK.'jpBmV!k/G"0r3WkO_.NC]uKVF/RpIGQn=W5
%W]@+-J?V^hd:AM!Z;`\O<IrVgOe&NJWS?4XApL@=1\E$BpVbidbtm^EWkgGiOeXsMWA_YI'rTTSP8uTNZhjIEBp$="Y#DPLN['NO
%A'JT@*qdh+jGo\p3Zf;Gpu6;+E7g6,n^>b.IE-c%fm8HQE8K_!Ht]DFfcbRPe+Re%k<$EHQ(&n_L<U<HWhs]rN2+41%5DE@jCkjV
%Of@)nBckkiN?KWGNu[eGN_9n\=#rE5#+BF!,%*<g[&6Y[%BZFOfVPM20^nkVD!R[mP=C.sk#H2STP'ZYAH"E-'jSY/-0Js5FO\[J
%L!?eQd+#toIK[S$B%!o-%s&tGm4?$e=J2<1?qW*i"q4E,7NrrA@.hLuP^ea(:/8Emo'd/Q80lonkMu<,r1922[@_3L1ii6]W8gu)
%ok$&FIh2.sXAj)Ga3^?_#'E:ob458S0jH]t]gmChOl_W!_+2%TeFQ&qGc0p\7sjtRGC72/mrSD:hm"!A/>!he]&(:sbkXJ>i$H^4
%Z*i@`Zi#01s2jj/fBdtKp5=*]Zhki-gV8>5@4FE&XT_uHTd?mfrZfnl'!Sa[8t,KmTT[rK>?L,0<9fQC*g"ec::^NRM;DR4Ub.[M
%#t-7dS3od[BI%f7$Q6'Sd='s")#uK8"G7a"eD-6rjP'<h4.`jiqV\,R3p7'&fT@g/ElWNUo:a2hnf?&,m"6k,od6`B\QQi\5#C!5
%Z-FTdc"Rd=q8c/Re0/N@&o*N8!pSG2:1Cef<Zh"g,HEq93U9jkoH#k[O!!2W3k?24l$?9Pe16T+m8;J2$@jW0/p`E:d<R3>[5(b5
%2>.[5o)dIbe/^-5:?Q2gNuqL6Z%D'b>H/37:qa>c\7YS3MlR4!KiHN8Tli1G4g<ku)lW1(s-XAHUUsF[BNXk&euFE]MiT3SBLC$V
%XOC%D,G-"@m'uX3G758tJ+)@QEDU.0oUofGkOJ>p_p5UKo^5*7pjf^-kP.Q]j$qM%1g%*ob([$emoj:cAniBCFl4J0=KRXJ:\<9M
%e4+Bo)KcZH!h#kD_.0K6C+(XV=:.pe%i""kI<B'XXZ?jAXJ0O<?OLWu1[?KR9d)5%`-Tn/*QtCe"fR]9U7OGEf,ZobC,JWK4*5Cm
%b/Sf;RJ`cg'5KAr#fAH$M$%]*Z@G4Td#U%-c5nI$ggNsO><u_%HL%gfnCa]"D9A#T)kIj#>q1H;>V^H2[)uUhe_;;jb<q:rkbY86
%mr=lSFiYT\H-TWTj7sjB][QRoa6,Oucga2m1r^SI/ZoI37`DeAh?llARXG2Fn"\P7`5&ddoKoqD6gl]4]ja$`G=g!83<\I4.;>&j
%Eac*Vqo*<d_c3'^8gnA:h40a/bXE6hYRh7*8h.8\(#&eJ?Hff/Y\6s\`L[j>-sjIE>\7uRN,+YW\6`2js,P[mM-"j;khh;#jR7(Y
%B*n,LZ#"'/AYb(cXO;(1rpA8eQO.3\i-+CQ2=VrUL<-H7g>5?Z!mN96(qcE$kX5cFCKf8]I.9\s!fQl#:_/Bt*0kIK2Ja+d']-M:
%/+(Ep,P^as$r/0>"2+/>H$"Z4/;Cr+]NFs#OlSa"r+SeI`D;S%\Yh@kA][AGmf(`)b=0<I&WPT9bSWQ+lCF^*3B"mfh!pPaIb.,?
%[rH<*pFt&1@9E0+nAiXEZ(n"cHS`aS8N)M_3EDo6Af7"JmPi@_\Q?+R2T^O_?+==!W>R$]hFt0>@<rY5^IVsKWHm#gWm`YpcC(!J
%n/3q["i\r+hE.j[3N7eb89HtS2M-&[f3-)26@c\'m.(jt>A7Yd-;'[sW-XQI(lc`G@'c6!$8$%</mDFQM.;PZBahjrdC=S(dDR"A
%rjjh1(o;u/G@U1TUSdr!fer;Hq:C->0@m]M8['Q)<J73RWYP>HLg/05&&3tK74cu!m;rB?a-KaZ2dI8\meJ+[7rd<;/^>G_K9'AF
%mtkEK47VVKna'-"5(RhPN%).12OHljO_u_CH!I82#Y1L`Fdc-P9W/F5SkZ/C:X`oO7]+m#[F4PP_W8P7I`o:BdX@G39@;bnfd#`f
%a<f_RodsbWZqc3rQj=q>M'XSs=rf%H]rWY#\R$Q(ZlV]'B#eF$=>?],&Z9%\F;mO5%t3C4Z^./KkqHnm0W`I<V%o[?\;,&4BN_Gd
%\`7`)(q*PUaL9,nK0!Q6l,Va7a+IM@m]diuim9cI[%h)Z[]96Wj&%+bhOIJj@*Bj267pZ#pDgZ<2GLkn&*uleLaWK^`1pHiQ%Y$d
%<-BX7kd=PGC:aK7KBQ@B>6;nZAHId%4dbW"8X&A^IQ<Q4;<&207&1ELc9h^j8m-re%?M<-;`D[[TOe5[#/D>_'M<:gg^kD?ZZ[NE
%5^/jFo,oRS]mi6'nNZ^fs%XUFW,dOd)N=p1-W8>@YlHO(%[>t:&X>c(_GG?$*7P%\XJEu)O@]oD/nRGc:^(9!+i1rOg$4NiNq>jm
%/"L9?lmK)iQ%(FK7!>hOZickAm_E::j.#)fN+l%d#C9g]e_^jG'CsD)D_n`Fh;t4!K7,A26Jd*5e3SU/LZkFsPO:Ud4R;["et3fF
%I/gCO(@1f/-=VVN?MNf<fD?&`0]"rVJdl8;[&cIjraMi(/qq/*L\\3InBa6lSg%1>Y/k?J.(ZCfY$,$JU?rh,)U-aiDZA,R04k(O
%,F]H_"H>9lguYJqU5#/LL"%j=So`>$mkeR'A'%2d3'5]#L&SEiM.mrT*2O`4.9C4i/X4qs>4LRhFNjP6kJ;jH(hOHF3=ca>^"9mT
%V]M:1J*qX)kt\H5P7-X'@32u7nZJ4-d<;kVS^\S=GC0,TJ.csm)t,iEP'M0D\-EE;L]_j+K0nqtb20uOp@Perd.<^a2Q:al^qINQ
%Q0%EI'4,=Hb#;L3i1_u%]Tk.I9IqoRPnT45[VIDlBARUe.29<=T\UdokOc)99'6>aqbB?pVY%?=!o!TDHoi^L"m^^PdDcV5m@*UH
%*n-YSHgJjjB8OBlqMS2&RYj!NP0F;@MS#pmG;/%13?e0p-NrI;;K0ra\M#g"SYZO/dt=QO?lYIHr3iuj]8=Au-3W3t$GJG6fI1nb
%FBh?DrlB_9*:mh'EZZW`HQ*qe%gq/&"jY>HG6<;0E:6*nn"-c<*6pQ<`uM@SIqDnmAgQ1eS=O`MD#&go$ML"_kaXAA3<+$>%1Fp4
%BAnG"BQ/E:N"jYX`sl^$l$+-Ni7lMO/bJP@T6h$WHVM$@iQ'lq\c@;/fO:06-Tl@gZV[>r0HF2YFm-_L"JP[q;fisApDocHe3e'a
%i=um;R5FlNGf0/727b_)RBfNn]h;W.DX-5njMh',mj);DQ+b/"P,@<`:$Ui)G1l?("L/ntOn[4&5D6-7;]sJ3[Slq:4"(<h`/_p;
%bpm0Se/mI`d:%gA.plc&9hMc57kRhiIJ>t,_Fogta-s)sEsj#/Q4I):K?tL'CTe=3YNbnVlTZ-gp\l?B0$S#@Auh=r@]mDT9fM2[
%.5b1uaLR>re/1>MUg):2E#c6&@UL.7obi*[2^cQg5R'+r21!)KhN3>'e],kpU=gK%mX%[(%<k$rqju\l^@.X,E2FT_*<DRU8Ho0X
%V),f%7Qlk4IEYG\T@25gr0D!N:G]b2d^ZJ-BH>CdTC1M7r%$'ad(eZDXa4]<o5k;X,JQSEP*bBtH[J5#&CeOGjeS./c@CtdMp=U1
%C[nK4:/7$-rXu!O-(2:Z:`:!]$-chYR/X&=I-ce#Q]jT7C!>To,;"\QSEI1PiRN-@JW<[YVpc[<2;DrDAN(u<,P"#cZ($M\%LrTF
%)gsNIAN2LG\uF:;MgK@3[2DKRN.Op*XI7.RnrU2s$"h>>Sp;;-j7p!<(21,Y>giS,(MK\`Oddn%0!\fL="LLV<fu?k4UZRX!*^dq
%0(QThMe%\F,F)ufE(JdFBG!CL&=nL!N8B`Xn2=PH+"6U>mSC%A9;IEo>aRF*,/s1VDC/)j.1DWf68h7Ue)"*rmT$q/U_eR&Qp6$V
%b!+BS%lZ&HFYBf'<25dgoF_K^.*;1jMGF*@^:+iDT#Gl_3fRFJ%Q^XA*/"i'A6X8h>!kZ)"l*K$JIC,QnH,l!79*qnAOTRSV`]FX
%nW\U$`3Hd:CY&YU\J_6iku.'CaJ=Xa;tD>s@a1Y"k"qRZ:u%C#J^%4b%a5e1H1-mPEocnT46FdbmQKi>Nl_<e4)S?Pqf?3?D`O[e
%7_.R<Jlf<D96)Y?e]ZXO&eEjXfkVJ!*G:)/0\BDZ,`Q;c@>B8N)H]WcVO#UhJ&em[L2Bi+@:d9ZEg(5d_KP25f5CKBP8WSD"1oD$
%J/.S=>n*8Cki@Cm"q<MZ6tpsoY]B2p@F_]b0).Uf/OeK\7=6jtb]:2[9sFB7lE[dC-!!C)*M3kQgcUT(pB2O)-r$81NQ9DY,<&"`
%*p<&'fo#mm_X)Jo`*Kt;P7t'o/?5l,cKeQ7j@CJP+Eo<j[9L+je2t/jCdY]%Im3c_qAuB[6=h'R(9Nr#*?5JVgqbO#0f!OYi.-7&
%jWA:*jbq,bL93C]?UgdF.?r"X(CqIGC%[fNoZ<R/64.:ln/@`N:Mo-ieZG`]ES\%BI0p%;9US0HR::/nl?5MU^*Q5+2E:;+2(r"r
%E]#FNNuqX9"nXspc8VT`[./prY$da4l!QZG"U<9HVd&2I2k,6\/o?uN&EgWu6f7m9=3gPWETR^LqM$ooAi5"[)69F.(#B$!>LMVs
%Xp&J3?`2TFd]o'u@6'a7bYjTNO8bR^=BiO$9O<-O<U*[7r4H!6Or;iAWSG_6UZ:"1c:pU#3K1<LP3,T(8C:u=CaJ="mmK)P5HFUd
%mQ>]`2^:S9oK?EL']W1qGFY-],1u<A2f6H#E-4lJ?"If;Wi\[k?I;Ba^MX[YgM_2U>,?"tYq?\ZL>I2*)Jc;G[e2uudWu;8-4?]Z
%c($sm_*,j(`ZF-/==i%N!Alg&dU],J,;Ygb_^Hg^\i45Z\hQqV-<P00EZL'\&'DmVI?ks5J\TlGSW23C*"HgMV$H`[+D1?f%.r><
%ToZu/'^SE/qs/MD^dC&,knfCWi=n%hgps`jh+ud5q5JLSG;F[E`_'3iEj4K_rb]]*.R2>:]4F77P1mWiJGOr"B"P"r=LW`n%:"$Z
%]<h@1Z%YH80Aa-^X-Nm-i$NA[Cqc]M;dc'Bor[@lj)8oahjn1J2i1OHWKV?pEAab,AN<U46o(u3Y"i4N,1hOg2;i)"*3`:VGEobG
%A?M(4fir+R3/'R6r7KMDC5(jDW:!>[g$*2<.V-$m%.Am4jiO-&f?8Hc9;^d"oWFO%jbmu@r/nTtcFb!g*C%BCQh-f8U;9'?f1W:5
%Og'IZQs7.up44nb,J]DC_T"+!?o%8WZ>^"u1H",)8V>0;l+FJs_gBH,Uk(VOIPQ2!1l+hQ;Med"fDA1Y-^+iU_0HIP;4P[H*m&[Y
%kKsDP[#X?4^ZR>B7WgN1kA_Le.pCFsUH=P*]Z]\)_XeVjUMSsA(<SD4h[Y9CU6#"Z?C^o0ZK-\#[A/fZ4RVOVcXT2#rk&X,4T<KA
%dq)pQK):/BZR!c#i!;o3/;Qt>2Y&Op`$uF);UF'R-Zi0q#e7Qa=X*ThD2X=oY`+M<TC7,@h_DSk<W-qD!CAOM&!(*,$@+<"p@!4]
%7m$C1.uSG\j4<OW]*!E;FkpZh\mhJ'q[nLh!2t^m)?+d!=Y"S'Xt@igABoVecM[pAEGLfXaj&&<1L1qBrI2ENBaVEIZ+!Z)i,t,j
%"Y*P?m;OGS)qAK2o4H;)/PP<dCarI1s1>_Re2LUhmKTES4Q"AD[nC62WF?a_f:4sM^>"b`9&EFh8ajP2OSE@0Q*$flOS^H,lHJ6l
%hedeRp&3H#>i5'\\/8q3(Y8OB."*IVCpe'-\oE:>AG^99gMPj:FN-4:kBD=OaQi;cp#u*4k;V52X6\;ZG;Yqp94SlAPZD:rU:?sn
%"2]^>nWs_cMY7atE\Xfr0t3h\1puOlS?'1n^\h2><\CDXnfF7$L[SiBZ>6a_6:Xg!$-]S[h6aej-S+DfKq)bbBhQDOU8AE2e<MA*
%b#5qn7sdlS9al_5QI_gF.p2>E4hJ0bFq^<P2WAG&-J"a!-d_B)aDjF1Ni*@T9YeP<h`:/!4n"+gmpj&.33J'(h[=>!p>#':G6sr/
%/'.N-JENugWUBpKl/GEX%KX`?b0PV3gXj)O<=p#i9($J7/i27&V+^XOF,'QpNr.j,;mFaZ8j6Y7jYJ#7D<P8<G^G^SD8uG]D9l5P
%F'\]8b@WCogKQ+rjfIo2I(bZO$#80ZOr&:qs$3!^S-h/gND0OpQA?9]egd.^OS/RFFh/e0;lJ_c`P].HThE>9A`DPCk$F,WOU9bu
%pYN^+EZY-\!GV^+2k12?#CSQ'ECiLnDR4TiX7,CnD>RLDg)KlQ,=$P3O1PL"G&&pN/EO1&DRnft9]KCeh-Jh3oFb\["S%t`JQm0m
%R2Z)Zi6"fQY</3X(/A<tdh?p[`=Ac)fcV[1=dhl)4Tgt/qi9Npi][g=&t.-RZ_HW1%VBd`!9G(3"p)m9)5-m9:qd%)r%&MRA`C$i
%I$TVuai(qI5l#?eSmU?NWjkd3GlJcS2=Z%cDtkHWT>;=<7#ZbgnO"tr-')[kiTq7P$%Ki@*,u3@$8s5^%JFE15H*te7H/3rh?R>(
%Bl`Z`l%M75&%VU*SpWIQmmA_r:QEQ"a?@'dlUFm^Ur7r#`J]aj(]JHa7-YH@m6)iPs8;Jp2n/gogHU2YoIlSGRt#q-^cl79T/!Rr
%(t`I0ln\k>)$BbpJUPPR55Vd\nW(pNnQ@2&bJ\$%lr.>#ddkql?bQC)lXqm.4F?nK:ObF;lLSp85Pk&^r*@\,rV"@&2n,ttMAO&-
%rgP9bI.[gVI/iNXq/fWTn(C8[?cB[r>tjXcM7i1AG#p\U-P^QIXoJ47?h*%BocI5+\GO2$o\]\0r;D+<lX-J-G/)c0li1.3?U*[Q
%^Z1V&rE9*E],,.po>'082pLC-I_!#24jD`N]YsjKoC_E.a(J3*4F?blam6_/I\tk`r:Bp<X67):?iRu(kc<1acec<\rRLnhe%\F4
%IeESNcYpSph<iZM5M>uKY4t6OJ)fShg\6#\UON#WqMsX93=*X1[-Y"5\rU=m=V542l)7sQS,VnFn$29")!Y+'9&@)iY#;FQH7>(/
%:r5g\!$@hW1?#AOPfc&EY!`br_-OUuoFr[-rU-Xk\O]5eb2sO/P\$<+SX1TREi%E<]?ogX.[tT6k,Zosg)Y,]Rb]0sQJ9SFW(B`8
%=#-&S[)=Kj$nj4.WeT<)-!Z9;iq63s#?O+2gUDDR3l:>R6X7T!Ibhk@'[([oK:\C3!iB&j=$aK_*?&Yu]*=:flM5@/Xk%Y15`G`M
%?^7X4]36ln)fK%Os6XQemteJ)>_-['=)hi/rAoFn6mqA:]ZM:D(o>DbaCp)/07DKUZKN2`pmQ9m_MV\^[#,d=C%BZ0r*"",>V+;G
%Y8nFnJ<r4Yf?&*&I'^Iu`bG!5ni@uD&S\_bm_71gp<kfiS%\S'Eh9qq;Bn[[j,J\5J-_6sR2G=fNt=p,jnn-*Wu*?.!<L(o(3rDQ
%7C8iCN"0i#P)&"V%<]A4`A5;3Mg,h]`Ze#W>.hM>Zec2Ujg:]6i@ja1FL0$CPa7-JD/g8mi)XVdo]+AE,oXF1ZX,++[6R:9,%H.h
%ZInPSp9@ui7-%mITXi-*mQtVhU3@VbfE_C;Q%05MjP?u&<pAqc*\"B?nGt,YkW8N)lh)_L=fb+,jp`BbA=[.%F'6MVJncZ6N_C.:
%hKh>Q[Lq2"AGOu:?ZdYY>DBM3EMona;\7n?ODUDiEjt+K':BO)711#C)\'*9pFhR_PSn<IqCP+'EZPb_=2*X%R%rO.^,:aHg/To2
%c#J2t"oTol,"$&*SQb,>AV)5@1]-"2P.m&2QYG9g80Im`ZV0Ff;b>#HJK&!.""@<d9EY?g4sWQ#TN&"WdS]Qa?;ugUZ*XRfO_0(h
%jp))&:WeqS$%,'Q8[1+\Lk]`sa15FYYtS[^E2a8E(a)n<kTK&af@fC`_uM"K7#=SX;5H)1eXZ8\'!]5""DT?!&R,Hf+hroKlE+SC
%kuTq$#FESK(ClO*FWd!*846&9+S!pSFb@%P;a4<AQ?8u4[O=tWGspCb@2I>?QsN4W7a*H!;ib#0&!c8sSMnM8^IO25)cbGV'!t)L
%JtCH(4@_'tc)-gD"U!bki%$jhZGhA=9dN[9V/(V-U+rA3jY%qLb=#'Ll&-ZWBEPdG>H4W<rA&?)l&"sO@W'>F(ue!\>oo;8p2#jk
%W,[YC=ajqK_H%"DLTk5;H;GU2b/I)i9J2Ul!5hJ>;Ym51KtO:=i"_?5*F9tD`N_L9LiG)q)dpKK99kdH?^XV]?m4X.7>;5u(ame7
%1_CRg9c62VHRD97BFf'VXC0DO$.BJrLf6'^5=%,1IlT>e#bF_/Om\s)#^E;T,i@s^=JF.dhq+].^.7O(Gt&R'Jia1<&J_L3=c1UL
%7tB1.UGI4ch(F=c""oRXETmMgD6]\o)&_b5N;D"PWCXSTZ,e^njWh\tQC1Z*%LH3KHY@t&(F<`raq1Uf"h8N,Ig;)B[T"e=BMkl_
%/L&Dek$XUO!#3XK7tFsaC7!8%*/;l(ab2*CdF'!SH'8XKVS1"c),?:uIef/f=k7X<0c22ig--WP>hfVtM'NP9Cb;C"7`WV](VABU
%a.0gg5(]+*l'DUrO]*#40jYR2;MX+_r<.i=@38KpH*gNRgUq3e(@YW#(@nOR/Qc;j6%U/D0uf(@nenc*`*".IV$/>&CY-\G)I*-F
%FC>e::"YdCc&;@24*7>^/G!I_*'jlaGZ`s(rE*;n?i$5(]l2F9P#dC^ZK+8TgIeq[J_!5XjmAW5\up$EQ^4j4a0e\P4)%8T^;,t3
%`,((!aP&)DMti.W!?&e*R>LB!YZ'=V%a6[R,"!$b)dmbUC`BPl*M^;#\&5ll$tSaE=2VPTEpf^OF]r6BQcKP'b4(rC2N[)=bGs!U
%YVbO^-T3UfEXlS%^oisK'<McA,O"-D=i;sXF@.@la?[(,?s&FQCCA@*(d5,THDUPKgW4CVhp+*AD-99o8k_0H<AQi)LON^3U)R\1
%V/&$t'ae<^J!"_Baj]ZNV4bf.*NgJ296a4iH]_oC8d_]g-=4;H6\\k.%U3sJGUbOsl,oZ1[2p:rE>_NZqo[@^*BrU<,k>W03Xc:E
%/GQ`Mc7_#ml5QkWYb3oe=^S2^TX&)Q(0rrM*aV2*QuX0$bVYGr2>0J<MpB@fb<Rr4<tU@hkV=)\=\ZjT')?QaTY[R]1mY8nfIE((
%V\Q:17AmB2TsTVFWLP2BP16Y8i=sCS**#t2X3jhMQ9npNFl>!q,G^%eqKQ](eJ5bMQBfZ]).GI9Z;Yi6bML8Cd<2C,G[g0*W[tJU
%F"(ODM'o-OR,m$X3Ctu#dH>OVcAh7PFBW0I9mQDp8oJQCktqjC0CkqkU/KZRJh8Q_n_N;h1%C/[(FQOA_JI)k7"HZKC&GRgSI_H=
%m5!<t[.#g"0QVK-o?G"?8-'!bRa]TchXsO0D4iq]Ml-7q=0tPp5tiX_'U[")X$[UF=P^RJ6Y<[YL*GI'U0*SR/7#s,d0r0nDcouH
%'4K;1dq-M((4$2l%T+2:U"QeJjEL/W;<1'gK3YFb"GarH_R"EgbB_)h2#=pk]\q[EJZ1lsfJ*4,Z$^:&6M\iuSjnHE%Q>&G)XSKr
%^3@8>?MLGqn;ACg'K`eHUZ5-ns89j*f?[cPZhs9AJ,T$(pFh!ilHL!4Hk'C4MH2uu)\"(W4BWJa!XoWLm08\L&XLB2cO:JGY8E<s
%Sh_q?<F)'JYk,es'$!^8,=/TNa=iWD)9>-c!!DM#8*/C2RP[(j>^/5-Ihh8hlj]@"@cB?3;R%#?SV%>4ib;IpU4Ljun7'4TC8t\G
%$b7kCZMi'EhkgA??U!`12P:[al<KTueL:lp/>UBlfre?@/qtTZ&?>Aa3`b`/?M(WiAO8@Y#d@.PbLO.uX/Y`2D-/e21k/k+A\"k%
%'1H0C%)jA.1s*V2-3A&gE>Q09fa$Une=+H40HBVL%%`RcEI_Id'KE'g_B.L?M0=RTL$bQqZ*$B:Ll!.="jS(B7(5)<=t7uOnE%Z8
%14c7511*J]c"u0GY9?qD(EN8g"m[/b`MGuofMf*W:fm]ANY[-VIe\\7L)2.*6j$5Sh@(m<!X[e]GUhVV@QlBI<h@$3Q1&Sf0_kit
%;/K/d=$O)OeB+n\f>uMOCeOW-ABZYD\1Gq(.ReIMP+WNZjI"Wd3IAeZMRB8V8dnre!nL[+/'KC,"BJr5Sk_SbJo.3p2b`@hXu[=(
%PP5nX?qBGAG]C_A$l@P%Zn+?[d$BI@%4Y(]]h5KG[;Gsf@B@j^8c$e&Uf1Gb>\%AH$V'bX?us+mJJO:V5`6IFOY&h%d#cE6FD,je
%eThQ1guBdjHiepA>/Zbj[9njm6s4d!lH_sTAajH+e:6!"dP7.:?%X`)>omSQ+kG55g,VD8`HY-mQW8<65a*6lGqf+`GE0WF2aXpc
%=LSPam*Hr?<1[:OfS]Y&6XOs;k-aDbRBOS)Unpuj.XTB5=leP#GUS-i<?9;f+F^dV9CF6ULPH6_Ar%7M=4U#i4cCYn,[+kPfVJmh
%#L<sp.cWpT/&8#J$`6>aXkt/WBhFT*"k1+N*1N_5ar!\TaCO;SUcO$#i]6hj5Zn,$7l20d#!7Cl/h3IYL@r-F'4Qa&<BMZ$EMJ\)
%"&WQ2gkk*bV9*+gHOElL/7dU)6P44%dID0SAC\k3fsF]ih@I[Fc(`(&L7U7IVMR'i=Y6rk"qgs=[DApfN%3\[T9bV;=mS=hC>e]p
%h6*m%hMW>T'BDi7pIm)0'XJ3tiC=[8_9&(m(#<0f)8LYW&CY-IK-$,?\h'*u.3q9T`39sIK]CKj$o1'OAu:rIi\ZIC=.-.JI2%nt
%Q=%"lY=*#jM$JOY;nfNJF?gh''*tY_)YmM"X=25K?56XW\B0\`2qobMKLtjb7aiMX3lEJ6aUGBghP32!CiL>8;,7=@n[;mqpP6Ts
%&66rRk(*JGMtj(h<d',gN(X2+A!h!J!'^(FHj#C<pnAA?Dtgl^>r(S7<2=iP%]ZlNN%/e`WZ"5POEeBtlOb_NnTN>#M(q<B@@m_1
%'L[iB;-*=l][WZNS=H+\l^=EAi+RFg75D_Or%2A]e<LSaN`U7O>qd*=.8Z8A!S_(^F*L*h.X[2%/N);;-#]@[e9Sn)U':;sn2O:Q
%no(]3T$1k*g?h4FA)ZBab%HY3JKLGmb(r&Yf])FpBFuWBVOAo)q)o<0^fiL=,Fp!FbD;);0RCF#i?F:=c#8_K"\rVhcI-'5aFt!^
%JGErY7Y4oA=BANmkY53/$mJ0YLe]83qF%T7F%Y8e^cDrI+CX!PBrSIZ9jG['"4gSb8@L-uT3t*#fV?g55l7r8dE3#i_.LEi#"N`&
%Hr.R^mj0bV?8L;&&\B0_S6UOlh@>)^R?t)HmJ7X?PR'$elr2l^oTlDM9/+&d)'LSR-=_WBEPp/J%"O5R[IJPXF$a'/)I7p'Mkr]D
%7WDA.=^fs:17K!V.uVM"U7.#na9PS--TXRg?0;Khg0W*Ls"5Mu?G6LB8=1g0A%?P+3XpUN@o8e2QbmkJ&e!22*cD)c9</Nf2[g-M
%QfUA<.`la")0b>c>#l4H6St!"=5utQKT-0HA.nu9FLf&N8JkVgjoeZe/JW=mgas(j<Q$*!,)9-a7A3MHeR$'U]M%=@/Q!)f7\LB:
%;<_>#O7sF_f\"&;!\fXl%N^r<*XNk::L$]c%*u]j4q)$-XA?9$-&Tih0_]j,l[T&6TG,M"JS8.^dM!54"]/mL!&cj."V]uR4lA(`
%oTLL6!A0Tmf/+@EL"*&f%XiU7.4uOU'/de[6nC4AkbY6Sd+9FcIt^auJt6t%*k"C)pki2S=MU"5NW<-!#R(tci&/<ijBL]H/CRgf
%4qoW8Z%r[EbZZiZd5.qXp5u=!EpS\)0h2cl"3b=_Q]q7<$\4'D9O]^nOissoN`%\ga#X76;*,4@7tmZR(Q607@jfZ0PEq)F"s`3V
%/qq,"^kkLG7J6mB*MWIHZS'<dE#jT6=H)GDJ.R)a)O;`ECK5r>k[6f:B7dNBNGicDSJDAP>p>_6mZ7,u$peS=B2C.D,q+p.I4aL/
%%;AA%-on(9LqtTS+iZ*pBi(c7`aPq]Q;i-NOgV\;mn8CnLM/>($aDY0k[Ip=j@$Wqnr>R%]tPqS)TI-bPsm/Xd?PW6JRG>O9=7.$
%[X'W8"<eHO`GcRPrgZd4&cm4e3%*,&.S057J05Vd@UP+_CX=d:n.Qui0^B4^pD\9J+j*[t;KO38@\f(jbo2R6_o]@D_!XkBj3X1?
%-h,hI6H8d$U=\Q.^q9(GNrZ4rmggSXn'OB\bX,#!(Yu_>UFo@VLpnb+PRq3@9HGd[(;s-el_QL,EfV_Z%7(6)"k]9FX!/:t/k$V0
%VI0r0lSIH/Mhj*TbP.rWX[`b*(i-q\;@HIaZJV:j(/1Ln*d>?kds(-4@&+=CgD389M[3'i;UVl75%9Lb*Ocom*Q<tL#n&cZ`"Z-B
%#h_1Jd3-:U*VuM"2A'+3\<2Dh!d1ZV2m@d"p=,fO'1jN?2bbiBL?O8kdThIa4urJB&Jh=(6,H=RDk]6<a_-:s'Ird`_#fV#W%(0S
%%&C[`/J41@>);G,V1H1'WY8#:2^U7gMNo8<(brsF,t3WO)KA&b%KDC^91/UdL)O@RUA5iTRjcCika>bnYRb%sgZfnNCXDgoc:KT]
%fc><=@Ksp&LbQnX(C.uS.3q:/2Q)8;=aZD)dfT7VhF!KEKpg/D0F2rSAM+FN_TR.Be[4Xm`>2aBA4#O+RPR@dhp`gpUG7d00fJ-G
%`+rac#JDUU=8J>)3`rKQ,DI9A]8h=b1c&'Q?oqoQ%^KD^_>Br'E-1L&!gEs#-@f@TFU3OAjr,C#a:lIaXm%G,'8s>YPDi%="QW$(
%N(YrBHN`jWb[4m;X]]#L3hZEf""M[7^`1mk8H0FX0i_9oYqN\c(OMmn1=J)cV?/<2J1bf!Ra:J;@mM.W6;^C"JG<(r#nFGi1sT:1
%lllM7?Zmr;@@TY"JCMrh#]MSWMsQWU".IT?F>!YJXc#cfB/6_\PSHT:5oKstA2FT!=T#+#MMX^QYZ_0aBp=E.>M^B:A)+)MiH-l2
%#egR,1`8$b,7BK3\9jejX+7\/*1<%<TEWRJ$tLX+Ls6laU>sKP0f3a..>+$;-a=oBI&P)tG_g6\HoWnlK;L[RWs.sa(,ufP,#`m%
%00H)*M'tr>-;<]I+tb"hBB[%#bk@'k?5E6S1:^m;%9`q@lcbu_#oU?t$6'%PLYO=<UCe):9f[dE><Hb3;b3WC<^88\5jG`p\eo4L
%`aU[P1cYQ\BF#l_&b<;]3b$+g6sqk@-f>%]rIsdR&@ju>64AKj"1^bF+.G9bR:mPR+LIe=2%T-fTB\9e6W@[bWY_eea9\eWq))B^
%`T)?MrmefL[%M676V0^6]s)R60YsPk;UOEo\<J"+.LP1.Q$J!ZQJ"[a"L15s-jtF.VG:Uai%DZ;c$dae1bYiG$=qh(kA(0N+#k7C
%%;63=_j*5A=]9Ac'*kP+Jti95^>M7T#%8J]2\[?r!Aq\:bV07jTc3n8(dSN75SiquZ`S%>]2M(l]`LHtSC97Qps,\YSI&oEU4SG5
%&;n9<(&CJ*A[8'PdJ9(Z)#Uc,Od_EX#pDZN(#U8.6*Xh8JO^)WBP>J+(i?@)_W%6ulQp-ZO>ge&+Z%Yk(l;Qr_FHH:Sr&JkC4k*e
%35X9gFoY]VRa+a*/eN_(b#D:[/3[HR$aC$eF;hBnFN+9Rq&Qc^!2).HPaEUF(pk^0M:FnUK<TOm#U@o`L#HP&2^;XsO;ng[Ul]Q/
%Z,KMG>4e9]^g&'MAi4@^aG))Kd?KM,A>Y3+,D5<4e$iY^k`L+C"W^qco.Vq]#h/:k8QR(*Q^A6`:W`^*E)-)5a.gr7=Sf^_Wu+$.
%Fn2t76!?++#4G1Y'eN[-a3)^R0/U_"05+InSEAltW*sFO_Og8(gBueobmRg5'T!5K%<,Wk+Q?W;NEHtiX*V+NhY]'G(<9j;'(UF'
%cKB"X`aAF0GT-KVScq.\&#EFLrq0D98ol3^%DrX5:aAS_1n>6fI>,Q9.&pgb&6M7l)bJ#C-IqJf.`nbC+Aaq.c]FH-1k7nUp,/#8
%!&l>Vm?'=MK:3?JAYr(#YWO(Y'5<$=8b$YbM+Hl%Re2ak>!`-c&;A#t-ohi;Q-#q%a`P2GoM'Eu^#ikA7WqGU'@i&])@>2bZ$5u;
%LB2]50L<Dd<X0a\Q&6Id9>J,fk\mpaPsQ5i`bUA5dWWM`!BEr_.^DK'#FH$<;1TehRLhQf'VI%n#)QReD:J2Q#5`gM<X?gR$OY7!
%F9.Qn(/('(-IA)"J^\^LUkHM`@IIpuLPS7X8@sQ_Ot0BG&n!Sci>>;b+]M.?6+k"[OMp3a/;9$Cad=AO?qUt:XeJ?1+fT@1%uW<]
%%7IM=dt_YY&2`MTi`jCM/6Ut_(:uZF#-!)8UNB(/)sDOfJ_*ROClfg$KXXWFRUY&,A`a/+JLBM*,)VH5S5:J3+E-Pg0'52M#oTBD
%H4;Gspl!))U0aiOLc[..IH5^02$3T>190n#Me.uYQMKBU14]"\&WDHb6Am0%#%WA%==ASa#=#gpkXML@fP'8]iX)OiE'7nQLc:7m
%3XS&c6&/_Q941Vd;J/1bW[Bj01J,BR3?^))F-#/;]@>tob!Q.m+X!-%O@@<@Js#!AN*Z%q&sD-cgHe&[VVN[LS2KP$>fF9HWa\C&
%lm(>:?7!g]\EGWaq4q;WBQEAr[X+E?Rq&/76rX5<3m>N-*tcl!=0s?mL-'KV*5N*V#!E3'lH-mL`tbS#BP7q[,R:4>Rq04J+p\uA
%_h1H'VLuWi)C5=;m=,r3OjW2^bjPud6$m=E$gBec_ABm=olJ+C?4\pE^.atjSP]grjesD"bAk`X`175YASCO$=%>.@Oci>SaMC\R
%gQWEf:V5_b]oMaRRQW7)f]\bMXoqj_F`Ka\%_rYaXlbNF9DHFTBVKFU^3@?ads(*3@&+=CgK?G_,$dY,8=X!5,8H:$KX_X7/-HZh
%^eGfKcLELcAMu@OVP2"3eTAle)FF&D%.Zq77N<3_'dJ8C=hOt@S]_oA9QD#U;rk:&U\%YR&OBpZPmOf_aZX.i:"NFaf=Bt3mp%`X
%h'3+ifGc=L*-'<#[9Vse($:ORU4MoU.9-GDWR1gD7gi?H6rW4;4`(kYTP]6r-\s1B5m;uk.g$i+=Zf$pe/r6'2'&uJIDE#[9PI%4
%bG%EP-1W]`aOlZRbY;5F)I"43;$[NU('5PSR01aG4BN2l?+MF@`OqP/=AbbL),CGPKbg)3StDI+Gr1[Jd3fZ@5MhDc#s/[>^0gTc
%A$$]=5u,=aZ&o$ZjY_B0o"u*AdaT:U,[8+`n>P&64o^ZIV"nE3W"<Z/!N?^Id#$K7K1]_X6$?k>^d2VV8@DtSn:Gij7,%dL>d4)d
%)R)RKo8L^G)/-:.RAr51?R;H8ciQ:d/Q`;*JjO%W0Q5&cbo3AMd/kG(&M4MBNWomLB%XE,,Or5qj/MTm#RH;:XnElf&[h.+#Rf;(
%Eb;Vre=kWjgsDeU,ARF"JHk6aTOFt?67.rZ04Er"bogRIB5KnkU3/L:K?CipSs=qECAL4%3PuXuKS[$]T#*4tIs?KM>N)DK^pVCN
%(OInn4Vj\4>Z;4Y0+SJ!_8j>K9U8/[(r3(+(*Wg0F5`BTZ0q,r1_Tua$qb8H=NSeU=gZsXU_I^&@gc5dm)hZ%)m+g&Y@oVhc^&3W
%4e<A,6:QfX][;=g9Eem[*a?uY)7<JHkMa3LWC]lrFWFAo1@0HPKC=D:?\,K(Q?<Nr>.^3I#tAMpY!#Ti4G11aBOSK`cW91AQ[76-
%M*b,K&bj_.W7;3!$h5M^o5!&@Hmi6VE5#16Ke-&J!+Rt3\-ZJ'WR=Ed-rPDp&t6/YB$G*eVJlO>0OH;uZ%<a7Y?o>.\#fBoKM=18
%5XW<i+dP>sd/cj`+I<65caa0C/aJ7p@:HYaE,26h9gL52ir%YJ`UV$_C3Z/XBF1<DRAbRF8.d<mq=B+rOeKjh*7Q,EBb8'I?6#a)
%G[D4],CaU,lbf9G/k7-"><0ZZP5q>S@Y)+'dO!B=nd&hf/Vg@Be0m%XBI^f%d$H)H7<;ol>WOIU-d\iNEM[b#`=Dl3S>Y=/UQl^8
%-!D?->XeEQ9N`Y%(7UVGTV[r4<4CIq.,UC0mSs8iXRrW/%G_P#!ADMJ&&<]>A%+#ZERKHB`I\,W"92-FWY_DlAHf"UN"detON"r,
%j1V>B6^*;E&qoX=9A`&,P*;a%"-hpM,?,sUXR\$QA>EnlV%@4Fp=aXSTG\W0"XssBX\0_M!6lX'e<Sc30boNMC-a+L/;bVCAnhJA
%]`M^(9c*be'ajEHS;/3_M9sB>$;ETVN-4X]S&]?"rNPc*]Z!G)8<us]T\"dMC`2D+6Y.GQO@M^udDD@P!G4D-\$Hs_%`hd`6#Ig$
%aTRGhOn$5%Z-q%8N`68#n-f\Ooq(XRHk#(Vg>si\KaY/K698dndsM4Y^q#DU)=)=D.;"of9d+nQ<"3N?%?*1J`i'`?f"2ouEs]-Z
%X/;jNbmZIK!Iu,3'&ro7G'8cFW<677!crlA?-JIC_*i6.$Y,#9"4J1O4RIAR4auoG9]ubXZI]-2+u7/ZMN3=)WNMR#&E1D_VTWOn
%T0u&Gj,J%\16t!cIXLG/2*oZZ>4aIN)_c\+rh;]4VM_#VS"P!^PlVeKFDmjRbA73!c&*>og@(0RalIT].o8j_<n5804Y22*.At4D
%(fS7P#c-S_/]i%"Fb)"XQA(W9:h3;hiTc'^I6_o\J`t77_SM?g%psmd+[?0BBHg>EM,6_C%E*M$;Qd@33<bP-^J$rp`&hZZi`hLQ
%C>mI:H3;FW@j$;\Z1:S[K2u_Ue#BRk0K[ObXGW:(@aLMt"O.h])AS[5"ct]Z^,5d"]<hVHdWO;>/8!S/N#.9khMf8Pce?NM:UQi=
%AMhm)7Lp&<6Dj)NHc!?H.6du1)<NAZ>O_,$c&KRAL:g?u\]\*a;+4%YKr%%ng-Y<`e_+Zpq1fIWZc^,5I:6Zrg.DW6)m+gS2d1T4
%7AhRtLkklEaTQ9%d5ip]"^%0r(26UW3;U<4L7[WnZ;Ol$%nP"N!:2.i155rW(6.Zh`-WHJ@RN`hoHol:9G3j3i&\Xj^k[Lm!3`fM
%R#uRQM'"OqfNTM>?F8^#,T/77C=':nF(nfC7P/FW?j^REZPF3\o\HN*#ur44'S-uU3;R73C3u%[Nljhun7><](g@+=NL7@jKJOd]
%BoioYRU-FaJ2KNGl0;FAOVKB4"O&MM%1/>CI0U@/(FW/mPnRkXs-+goQd]Y=04Go.oKH91*)dkt@-@q!d?sN`Ag/CMO`XW[nM_HT
%hD[-;@+*Kbj^^ZY'1mWAA@'R!`1=c$N<<UfCA,Nff5NXL+kl\SB/nBmC7P?7qnp%t'Rb`*E%/Z'?6'pROPT?mQ[\d+I2gW,rcc!K
%Af"R<Idu5q^O#J;j]@4=hu<#D=+;E0e'DC9qYj^2l/bQeGPgdpP;fsXIjGUcIsTlJpa<[<r(m7`!k$L(<oK`aSVea0p$c=%CS9"@
%Qoi0*pBn=IfQ^>TJ5Qu+WKUdV<kJj9$tk)6/V8bg>'?WsGo%_?,IC@;7[lAITo]Whbtq$s[%>+MS3`,]E\?RP#3@UD7d10+h3^f4
%W)5E)"0]iGrI^\pZAS;hV]g)6O&7fnGW5=&a.leP`31:B"_p=RbPsF7O>/;L.3S[T)Y0,eXKD'L0Z0"HW](Qmd2%_.g[c>.E*0EL
%fCd`^P4%<dDpO&-UI@nqf5F#K.N3'cf2XCOASY7HS&t:V>lZ'sWVm3K<-/*]$DRVBbVXUrZNYKX0pRm!23PNOZmk$oO6S&YIhLd-
%mL*/=fZ0qs?s4NWggQ@3IELbcB"H@$7Z/T>"UbC3\:DuG0n"s6-gi8"][IeZ%*/k]mE>i*?E<Mq)/=2Oj]H=)/WA8E6Np.3B[PIu
%[&hXe!egV^R(ktT,nsYYdDA;"J6eSZ9k<5Z%UB,%dXV`s7c9"f7okk71%VI=JchGr`ECVkUpla+%77?9F73cUZ(M2%4K+[p?:T]q
%7=#E%IO*%0Ka]>`/nglP7\4lX'tUj+Bk2.]Q>]O&X0H3R/-u33'WbU_p&r$G?ri3fUI'Y(?I+k-7;G,'m5<)fV!'BQm=I&hY3QfG
%1aGZXm.L>N9p8iSdN#Ak"4URX^BsW77Ri3"Z]Pon4BS-;DHog6d^,s+5q"u9f'QTJ0t#aJ]0nW;3IOY^Cb>QM$e@B`%8>/<!^l6q
%ngmFEeV(-kU2kKL2$QDn/t80"L6fOoS"%tA0[Yku7o#pjq*h5He?&,qU6hT:(4(6h&`G=a/8p9c]X9&I>/[RsDoN1hZR^=)C'7%u
%Dc(gE@ob38qpHN@>0Nt!&#7Z493-;-?;6@#a2U(R086#'?;>5[`qJ@&'!bJB>^FXH#qhClgTWjM/K&^pL617n!:&_jkNK%EHftJM
%2&c#rMMQh58ZOsMLkka-Ga1Z:,%X!"kVgMTA8-'f!=cW=U@k1(!mA+U'+a_Pf,@ER:PhB$1nG1:79bY8C=D-1M^E6Vb=K$6U$/fI
%FnT'u)G"Gr->Ecb0O%F5!pB`\UE3qo0Ug'P`gHt].$>@lWUjpN?+">Tbu?\qb7Tup$l-WmBcrj0$P<ae0%T#M<MgZ,l=Bh`&.*$p
%!Q9M:/;HZh^.^-e,_.X&57W^4jq[[G23#%eQGJ*qLBW*]MHP<[>%FG9H:NnIJU^n[:0`(6;Uhu@8Y%^/d:%3L,7>Z<1q4*>rLoWm
%(HO,k7<BLF/hfj67!;_TLm2h1J:,g>k2mA9,<CZBnjH;+kQF.R>jZ'''b3mtb"H>;e1>iDm\4-cTR^$/PaNJmi#uW74u0*G^lf2T
%ajSf=b[$!/IZO`?7;K?QY))i[FE(l37F53SUo*<7C+4aHScMYV>3EC-b),WXI%DbbCADgp);e&N7U]KVDS.mc#4V$Df?%"W%8TJA
%?m`.DQrd,H0BD*1_2JPf$T)4ZLodL7n-:)L(hQEK5-tSK(9(C?"WXPZduI'F`"GY'E&*P2"gng5,VT!9%1JB`>8>&kZ]uR9<gV"V
%VQ>\4c=fbS@p-,WS/k.nU2qgd#tU;r4WNag-3Zr2(qG<\;nG[=Y[S>85cZM5?uI9MR>Y6+K_/Y<!)iosXe3'RM?uPk@%sBHeh1r?
%G[J]$"]/je6\XH05cPlX@JC\dQ@UM9-7s,B\Oq#h5k2j1`s,?PA;r[2lbG"^b9..M/2p(4(4e(lZS=kf#&6,Z(kG()9I6t=jCNm7
%9Y/M9P6I?NW!I4qc,XkS^b&NUQ;W(XK8S)0M_]ckH'7i##-Z;$Ec<cXEt2=LMFE*"LGVBJA_;$de@dG!3C2PVAASE')`:>tH'3<+
%Up*thh&(CWnFR4G5;8sc8eU#O^2W(50jA+<LD1L>6g9<Ce\ggQ9\58OrMC4pG\O&#jh.A-;MMJ0>+4**D[/r?766[oWWZ=6VaQ4U
%6(nu!#$Q=+CV><hDjZKSR0DKMP\=dBM"oJs+]R/]80pO&_JI,aWDo"VA<(mH.BB*KM8pd$MK5'!I+SAk88Ul4Q+Xl94TYmoff]i=
%5U6S'7"'k==]r5R.9nrb&.E(n]a]1>DTn'`P@O[XeTKMsa<hJc%&;3!D1r5-i1/eY=q-KYJM?3Hi^k]sG"EA"J8[./(LSjN[*ASn
%RVH2'q4g7<IbBib0e/"#BiD**hJB_kj)KU4SH12L$Tfm\RT\>-:DpD&Se=%%jNC(K`5G>/Aq81%-Amsh"<K8,8peqc0I<I8?M+HS
%oJ0)2<%@?]k3kW*5.EY6TeDd=Yi@F>?Z`@$!GjDqF'4?a,H#*0O?D*TbA7r]cuL"S)3+p>%iZK$<:KLb^hP09NTkSuHd\odL7%T:
%=Nf,spnG$`?&;F0@#kPc!U1<Y(!]&5ds'p2[3G&!;jj9f(WRf=U1AUC[^6nE)LVBT/"(B1(p!/G5n"?-0]BC)Ke/Fb-B[(MF40>=
%C"3u3"D32hYugOWBq_6PRX6a_[@i3aaNe@1,o_+KVRm'6OKY*49!;c1aJ9lS/:nh&/L^%@;(EE\"Z#iUXS/Gn"VM/#l-/u>/"sa'
%`-,p4=VGO4rDr\*+_f`(5#Yr@,P2&e+7oK"(HGF@^s=gVl_NT&;"_B!fkbODQHEerZ))NETU?Nb/=,\;Wu*'N$B&9p"7rT@%TXQX
%Q[4B@aPY"-H[3.5i4Pg<QdcflIZ;bU<3SnK-tO:.Ho>:TJ-;IclUqK:!"ZI?k:J0A0cHGOUIg3ZN+2SH/Cf96o1n6mAjfh64>?i/
%AS`5<QHrTEa_#c'Sl#R!'kDjG#"NB8OJB]`d'ot1Egj27k:NX"6;)9U`ZqjDNO8(90:C1.+q7l+;FJd0@DQ-rljVaP2PhE=!S2KF
%a]VcQjJWi\:07eG`qLNEgju%h/t0/hi1#a#eZ"0:ncgOgU)to!2fL0J4XVAOeCeQ&d$#!-oMo">e1hJ5HMaM)HG]"s&-db$Mie3d
%+duR-5U$TslQHj8acFgcWG9!eJI*TrqS>^YAep1)IL'nVQrdC<T<?DnbISORMmEi9,?VW*1WMX3/K2;laV4I4Unqgh$X*fERXG6l
%,d5JP\4)iXWE<.^nQY>SMP4!S`MKG*4f$UPdScgIYbDI:P1i:f&8eNS8!MCEEg7Cl;SY(&V*o#A.59/T:>qea7Lipm]-9;U^<l6C
%VCeSZ5[o25^+;!`bDLr=eZ^8a/YItj+>b[@SYJsXPA"R.&Xl?C3]Xb'C3]fA7aPg<jnnO?YG#D]8IW[na2fa#:a;cG^S6FMRB@3N
%=YD@1RfmDYoQ-B_FA,g[Junqn3abK*BJd%:QRT&<N!!1;coFB\ejWV(>7pAi'&f=Q]o3`T560YQD&cI9Jqm+)TJIUU$1]o-q$DFH
%,m(!cb.9t/L1/&o/3JQ0Pkf;kJ3u4heO(lIW3%QeE2[12$(dGkJ:MC8l2s_H/t2`j0a/s&QeeA[k()F=abcC[Er/k%#bm]W^:<sC
%5WI:)AGfAjc7>,KA/MjTBQ;s^eQS7soJ]f&VtEcl3ou)/JVYk1EhM)A"`??8=u"!T_4^_T/@N\>MNLn=)6B`i&'XbK/d&3a.aLRD
%#DHDVH\$$.SW55b:I"6D3cPcpJX*RKeLRNC@KME&lugDcOEK9B?7WXQ'GmeQ_D<a7,^"-?oHt_#4p&t84Af@t=W`9&V%nPHrPG7P
%R^-L<BiY^F&k-TA#a?bGq5W!nr6S6hK\3+=^5k[JA>J'-\>'qh.>H<M8]%7el_3#^6nZ]cZUo]N+DNM9K5P!G$-^]g>):I9Ge3C^
%a]siA,+QBb?[1^*eHQ,GS.]"<=6S6LZ=Uin?NNM>NlP&*H>HhX`!\>`)P.*g.S&ke<o/8X_<i)1C'8Oilm#W8%!S$Un$(W`oK`'L
%,OWq;dY)U`J@UL?OtF_T98(Oqg!W\DKU,S`YSdudko`-iahb=90l4@$A1`JVbH0-3NkkmWrX77rPWP8V]$<:9\^to,au[PIegm/%
%ND:h4-1M%9.t[`#_1os;EGl8cbguTd4Rp1^0Y#.e/*LA98PEU[PfX\Q<)Y$KDBlsp<g1'3ZfR@8+k(GXa#5Ca^S94o;,NWJbq.I_
%Gm/X`iYKSZ?Lm<BW0FjfM@-$W@)JcaEf"5$_POV@aX,NXQ3N?gql",PYSB;m+CHH0d(t\!,[%s_`NkdB!CZJ&=Z%-s3m!%SF9,Sn
%-bu^s`<h8Ma-qjk$o19=eo`JL&%e\gEua-97a<2EQU1?l+OK5;MRkRH@O['X_A^H?i!'BO@h6.>#0VB0Q"kUjG,<9)ZU#NX/nAj.
%hI"b<KsIEsq/YSDAdp$p9]2=p%&*h0(W2>J/W?o#e]M6&2$B(G?hqj=[DLXe.2nWJfS60QeZq_#!>Qo7LXQk\18S44/]Q*@"-^+2
%^(^#]K0?JnPh+-)R!X!72T1C["/El!'+39pBsHC,`#UrOZ7AOlSCUt*Y_k\4R8O)?dk=aMM>_(K&fhrDUT0:)S`_D?1BS7HUXC,1
%0kN5@hNTX1#<5RjB<g]:%:Lo?M""*Tg!kkSJ;,/0H<gReA*bN<Jas[Y_pa51W]R1,>[Mf4mR5JTl1mJt/*\$=-?Ecm5iXk.er5ru
%O>7DcoNM@T$6sJJD+!2,bMPuc`Z<ZJ5;6GA%.Ae5[PKfH[>js?`jY:8"+Re=-7D.h.jLjJ;1-da4d0uU*ha]4Gr6U$1ND,#b&gL>
%"EsuFF^#Y!4KrYdqs$jhMR^O&-.kj;_DE%a75Ho;f]Ju)*/@heI';[3X&[V.\5Cdqnhgi5I2@clgN3QYN0.Idrh5qtRf:PERLmc?
%P1d'sa(u\@F]*4h=K8`e<#kpLq=Vr\c6?g"<Lm%#(q9$C'PGq'Ubb>W5b97]k_.r'C?!fgSPQmu@gC`7M.:D*93PK8;#sd%G!<6h
%ULHJE#HX1Y"hC^>i^hqT))G3JA,CnsSIR]Gpp+pr05'A)$9O!-3uh=[6.As'E).G!SPb0'Qg)`QGhlh3+s[XgaoU.B\&@8#GbSc?
%2]NeSLgP%6_],,odKXJHN31b18fGtu+Z7]&1`T7oJ3VFA_gtgl'Q$2TSh5Ac1PVf>M8u/@SA$5HBfCFuaDP66mtf@SB#6;'@Vk#Y
%(+K&8Z>a8YXSalWE9>@gTtOBY1Uf9R1TGDGCF$tYVJpLC[b+WTE)rdT1RdgMNP+%='TW)9&s7!e_B$,*J`4t4_Eh>GUs_OC%RMU6
%bI9mui,9a19'6M9,%UiKL*dnsC9m2F/r/6<%`?[c_QcHMQ24/dNbfl7*"7R@OTK>F]+TcQQ4>!Y_[d7GK>cQ9*kVYLP;[T';DG(k
%7Ln:4`khs@3%-,))@p_)oFD8^2q6dLUPKP6c3t2c/L,Y2R))(rQ%79nAoMVskNbMF%LObB>qNM7i7o7]!U;r[cLGjI5W<HIWF_q2
%f4Nnh]o+XsC&ON`IWIk:ep>Tri(1F%rTQ;$'QVU'jPXgsL)jNg=k.3Xi4Kl3B*LLY$+f&KDs>*cb["EW5<+K4OLHq=_9(blI3#co
%i5D@@1_5%SP%lRZq4@DuFdG.i+!X!0(CH8\%YAY_C,qH":B]W5,8]NEJoL._`qn.Z&.ZUF8U;>)E:O0rqRZ9NP8K2S$$:c<[-6(*
%)hN#/Y=`,=r8;DLn/4AKpL[pcnqJ2*d-esrBB0_<T+>K(T)$3j8>].lnUiWeEri#iq8![<Tfd5g_&WpF>[$s>d6_`W_%0;P?R#td
%l+sW,Od^(4K4CHM3qj(H32%<kR14I]6@d;N2gTFPG/_VR=*eg:#p?/cm,3mCZToaYIW0g^U^Z#KK4DI>U$2F4N_Jq-9fbKu>-p2:
%_[l1F=',)G5<&^7X<lQjK-O,Z\?,:SP<uS&<E4Ke9oWH<)*bVYF`'p++5E&`0qQdFP=14rU\/6#Ef?P!H>os,$V?C<o\^iC8>P\>
%o\`as1!tVhMg&h3i7^m"h>"h<Rrs1!I4E(rR3,[@O$9`:K<Looftd8ZVhV*bO,W47+h&<*)*Ksk(sC0s#A6<KOU9Y'_9(G'Ol"H;
%]A/gK3^'uS;Fn:FK*,Upc-qt"*3bk5iLM#0=I_jR3^#IJWSC<l6P&Tf9NV0b%h<-:ZjhX/S34)L(d?E$A*Ouk\C#pB!*Cdm6hA;$
%9cQ1R#DZq`jDXO?UP7jdi!2aj@-IC'aq%5O\S>Z:j9I's0KDoer8;\laIUiV_6p,*PokCeFMeVa-]P[NSKFAT;n<XBnUm$SDDC<u
%jTig3."S)^K/7^+ZuX.sc<WmWC@;#XN]RW5[do''fZ)RpB7=eN-EMkAr88Dijsk3C_9o>gRWa:%Sd6%9'80kp,$$H4KO^][OJ^e>
%_Nf>o[m:Q8d0O.(h/K_NF0/IYYR$7VLsU;m#^9hT=POc[32r!S/1X"GQ>%*+%7)u;3gBr]'82QU[+)MsKKB13_(H`2iK\bYY4UXp
%0gg*$%M$5o3Ehsn*3a/%AT38X3=eNf1Z<N!)Og';i5I4i6RN)a9mO-Z?>p6RaFb6J4'Y048ATAnn_S5:B-<N0+,po'R$$_$XD#\D
%?b.Nd7m)Li[[draOdQ9*cGTt5Xs`\PnUWL`Ql@f'5&aOF-suqs#EIq3+0+p`Z[tL;V_UGT[-2[/)a<c6^$3D,",EG`N>">l3,KM-
%(1$1?'6>_qap+G`@(rsuhsoJ$DWsoVjkn@UOb&]*Qi-6AqO81)oMaA-U<^T@>8smq"m3fD$+IA<Z4_<GV&6<DUGnd<)[prUDg`.H
%=JLSGL=#_M93K7VVams79Q+q69E12%5(*PK33r%\88G((LZQ>md>SF&P_j@,3Ysb,2ot/U"jUklPmEmaS[+-K1P%Vg;hoP9"O?Lt
%m\jtri.*_%$YX#OB@0F]VUEZk:6R`hPmA?=<mWQ7JTL9ZYYoWoE&;euLqm<R@;&"2Nq[,(AZ#SWD(:];3u'_^'R9D-$CjOJ5Qs1`
%3)*eY']PniB/P`P?/&?`JJU;0SI(f$5%#8l9]3jV>hKa@P6mBtd[^Z6L,@@%Ag23"C9j)&'7hsX8?LBu^^18_(2qGci7uhNZtGp8
%SCFl%&iN/99V0'*G91^,%5d!(%libm=oZ7u!Ts[A/0=%<i1t.`p?b!#A3FHtbD$7lZ%u"?b:j7j!K%NW_#o]5B!6,u^sut#g<'MX
%(9t1$aoh'670\BV_ZS2^E[`[`E.[.CZp+)3ZTL^0/]Ilf/Yei^`WH_";"rl&n:5$.E8U4]"7A][$Uf&'!tI#<=[I`FS?M5*gI;8T
%gO[!q>97adS-XcV*cQo4D]5OE#95>V]%kY_444a?@J?S1`O:I@1uPl!"$G5_JFf2)0^U^T1i-9Hf4i#@R9&,]$TPk!F'C[53;GL9
%W3p%7B3l3p@Hf?$9QHlWFV\r)/ESjl/DtD^XOLCgq$os'(bFV;qL]ADXt8M4dNK<@/E#_HP&1UCE6#Ytar(LFR47r&irDR[0&0LX
%.)=519Wd/LJ?ofjjg\3=j7OEAq`=tk;p'm.V#Y-Y<H4o:B+)2&l4i/m6)j^H!h?uf[k4'T,-`C#&Y1KW3,P3oN8N[rB7DLV,!!H\
%Hc`(YR0+E:!>2!@!Nu:?Q'DKBk?sY>/I=BgVpb<*G#>;IK/%J3".V3=bWFHrJ<TlXRor8lE4CCnmMd/(&.2(ARlS85<)iL\"e<\N
%\l8%@!j86]1@]n,:9ZKu^m3R'\n'n'8$g1%N<bu)IdR6eH,+t<.(f;0#TRd-@.bWDa-Z&Oh@P7eqh^UCTiP9;V@GX!3,Z`^M%'tT
%HD!]=r"or(ocpM`3tJj@Z^5pV"--u)j6Abb$4X-hi*734S_UN$6e5C;0Nc,Y0ZMW%%1>.Z7!tJ+^kn"iF,%sAc31^pR@#K43'sT:
%LsfGA)6;3A_e0a(!]$&>P.L%M2=GG0J2<]`>^/U<:-2GN_Nb@roq)BA3YT#(CXVX>RD<)cl@@._cD3Z;nT?0t=;o?*\7#GO</<(f
%SI$9<RdTq%RD@4EXF;*8E&9@(X>>Ff&[m,cbQL\*O2Sl*$(RE<2![193$1b>A&AEZWRUn"3YOK-QlN_j$(MSDP/1t%^`amoT$s+C
%0i$NXD_Q_u:T]DZ#1Y$3[cE\Z*9g*;Rr/W]E6Smq%_#jJB0IC<ktVEM=HM5m4\JgK;7C>o:k@*hNA7M6i/U\)OB3oN-?sMhg'ne,
%!aJdtb>j.^IoP&>.WFP$'n^<SgFaD_e#C-r1Qp6>'fc(7=EKaK7>CNeh4OiDc@Fh)'f\7VZ3r].3,J"d90&aK#MN3`BIafWH]Kh]
%<8\aDq?7ffE.m^aDIkc*^ldi_E\gRDK2km:mBR[1i2km0Mp>nqm7bM_^7bU@"W5Fd3u'_QNch[d:'Jp(1;3QY"cb&hV(s_WE0ci1
%VlEJrNjm*Pq*(!nj)o(ZFY7V=\e_bn\A09O3]*B8>[)^^FY7W>W\$"C35C#RDD3\^FJU]4Y?^!(+q6%;30MY!-,Q;V7uKBB1DMmh
%620m4<8c!E=$CPt!lm<C'fJbDaD0%s`pZUZHt^VP&NG@[3ZU+Hi:n_.Ho_j!K"$WD)\Y2UEchdK<8ciQ+?`)i![dt1p?ieti"0:M
%M)lA2rQ<D'mc`YBgWsHK"g79jCF^2\@m!HMl<N7\@7B.@$_2!$heu$.o#TK-&*n&iBOH8GL(0[#+Y8A=%@j%$j.l3shsp[&"abVN
%+#m1Gl$I=C^`E%7=IWcIi7am[8'gtGTasNT7V&,u8s!I)4jnm;ZVYjP1cfS&Q'7#6_Zu4D>^AFOq7rC.;QV'rkQ!M7jojB,JTE\`
%#1$EPWce+r54H0kqWU*75<'`E/!L&!Du%1_9#C0@I,GQa17A\:E"^g-2K?V>NrGnk3V^B-An;9Rk6#oknRTfJNb4pjK+8mMLsZ*n
%"37brOo1LT**6m4IA[0[$^72AFPqNL9+*d$31`FZFjP[i%g2#-2g"!M&5d"'keJ(UYM$+$i,Hq0`o<9o*.C!VFupX&YlQ2XFuF<4
%!L3lQL(,-IAFLFPi:*e4I&sZ*4)QUoYjfj@NooW:0t"9;'AN-&A!krbnTKq?\t';cEH?J)dhs)ahF!]?2f.CPmV689Og0J4Kqob/
%12t1j_1snX^_(S-@H%?$;T_n`W5'"hBK<1gi5eQ&*C4<>Dmg>5Q3\I4?k.2<!Ct$?l:M-g$o!iAE+T-+qEc<JOFX\&^\X2t]\-U5
%>70k3HY3`kE*sl)gM[qE*U=WL?Q$Z,U17X@i/YF)P:Clj!!eo4o9)-8334*aqeZYT$UrRKr84I.U'&p0^DSkZ26^NhL3$'A>\!e'
%*C$Mq48Ci1c9T^ejo1"J<-U3qrm!nGqrA0u%nk<Y`8C(;Q^.96HX&@La&p*=A]5k&%I&'C8k(p6^X6&dZ\5HVheXVc9dfm/Mc,d`
%dVlQ:@(.H\L@hc8I#rfpdqf]Z2g@Pp;f3JfHb&2[r'i90"3Y6<qhEiBccEi*E7%VKADboq*?ShLa<,3jN9ZmkQDpu[hfro@Ad6^C
%5rthHSXI4FbZ#0aqITg`TY^8[()eB$VXHuP`O6D-_s%Q3Sah(dVg.$jq*rVL$#sPP7Xh\L]?V\Z=IEZ).D?Cn5fQ;Apr:=c%VGKj
%hn,<D0_i=QKS/ODl+I[5nf_l&]s0(7G\./j2^U2_O3[,%Xco/B2cG&JE(]j$:@50n/X^ruC2Ys#,6kP7>0+E:W4eTDa+Bik[l9`n
%'H#ofBPH>Gr=qpl]b%6/2WW^CP?<uT\\4\5@=N0^^%#Zb][]L<c0,<<*]gKKZY_QX`81nu#:hrH6ie9'J8tn"2fO7]jt3nu_1-"P
%$taG;rh]CTfpaBS$<+FXh?[.5fZAG9HP7J+YLSrm)s\;)@ShD]TbCchXOQ*/WTcfhWP*9qdUi`j2]EYa]4Y_o1fN-=C2^I5BJR*2
%l*rRUZHV+\7$3T;d(-hu>qf/@\@l=%0VlGEp83sOF',ud!R38_!XH1n>.!j4_sOQ;Zqi3]2t;7Pr8@8q[p_1Loa.I(&fF3jfY(u.
%,pQArftD*gKs["io.(S`<cW,I@&ucKOF%'8fD;mMm`c`VOSqf>m:`i!"DgHn9r8"7b=^QlW'3V\PC(af5fUd/gtSe5hc=c9"\6JQ
%mB*:^1MUj*,U$DPW4eTqUAP0am>Yc\p\pYM]bs@LnUG3F7cuOJFte8aTSi.*Y]>((#,g;3\\76c.YGgdm>[/QJ2t-Q*V#;s;L?;W
%,&4cep*L&=Q#>+.BOD_OT_<!U@nC=WhTX1%C=ATa@G`jOB>a(1X.LZ,`p=.^JLlGEg"UMq/Jla#]ijLD-)`VH1\6Q;hhKi(cD+9u
%GA;%UQpf7)[C=S(=CqG'm0sn&GPC=Nh?I_lQ.h_C-`r+4[5U`fJ;aqPDk_p-$?"AMGVe@Z>AA(!rJV=!C2\1prLaV+2d/d0e;:ka
%g1!.$=AmU7g5%>c2c(kZ6oqS3iH]?'_Q:]47-U,&hhf%oU<?plp','2RiQ@%]nu'[HCtpuUEr4($t=,ZjugJkRFn!O-n`#pfj!JC
%Z*)=-FS$6GG%YE*nuj<&_jJ+LlHQ!$*7WgRaY=rc_sP^Y0iEf3[l9Qqm%5l=2cV'rl7d*o.RTiab3b0(JrgpdD^HHFQ^5qaNOdBs
%@?>gl>MQc.7d`uM:GG?apZ?kB5RhaPZm^XkL>873er?J*]s86Pm+gHA^&*!S*$8Dl#8O0p$6*l$js;>mj2UK21-LdVFDc#[mk/4e
%Y2%m&GSo/Wm7dho\<YbeDQ.MX[A!;K_*uA*:@5/,C7eOADgKHhS)2B=hR"Sr?/MWpRFBL3e^!Q1pId`!Vu@J^Ke(TVXq7mRT^"fi
%,k1ee#uRP:=4i6pL>E9sa<1U0-ccPpb?>L5GV\&9'\@@W_j3,1;Ub2EE$be?EG)%T*<fbOMh"[14;^O9G$ZAT-("k(clE\/7+=@B
%QnaabdEHt`&0A-g3?X@td56q!12/^)gLgdD9C=h.fR$o5qESJNDWDkH/sJOnG(!jRErFA^n@DU8TJU[(J2+!96a9?;BMgnZfBFmr
%jKlgK%FC*bb'9;@KU3f*m?sm/1&?^%`FeuS<SaCj.H_XRC_n@ua6&sIDY1:HO7&P=g(cRtfEnK/<dMVb4>rAO+<c0PZ#9oc*NWEV
%h2;rg'ZrIZVkr$<e_+aH3u51Jd=Zh?n9H`p'td'[$`,M7Q4sQW-%&OX%3V88j;qS`9&Z85!C-2i[:>Z9ok;ad&s-AR5h(V^Z+qQ5
%E8M*3?9mAG%m\sP$Y1_UPpUmAjqL#`<U#+B<4$1#(faGn`MFU"H79$up&J;bXO0qUMZ[-lGG>6kZ=l'/("coE*Rp&"N[B"DHj'*V
%abls^_Qk@neZ(rIG_V*`2d8m9Si(B9WPsur(<QO&-jN#!'L6Gnh,Mc'F'e`,!N1lK<oUBcOs/H1[TX7D)"%&#Mqdsm6?s%XEcl0<
%C/KKm>As$F?3oQJW.4lMNdr]%=B#CZCnr]fVA)%5mYNpWKh5tql18Cj!4?dC$mSFV1b+Tu.r%X6LVYU&](Z;_EYda^Q>*6R+r#L]
%>kc'HFa#3l`2dRVAhuh<O<bK3_IK(6c:SJfePhr^2.=<7bG#'F_#$S'=ni(+(e-J7+R'fp(8*+,@2"`b`;R2rN.o-?[G@R?#1#b'
%etTl%(IriSCZjoho2[RoR6E?V;)8RQ<`UN1P9b.HSE^CT@gdNJcpKAC)g!'p,FNq7AhE'Kd8lo(7n"4Y'IjIV^qmNIoL$0A[*rX`
%3.]g@Z\t";]qZl1Ss,Gd8MB`PrZokm133PAOX/<UX5dg;%B^8FB_<*R/S#TPg4E9*dWIBe3M7j5&H-('l6h`."agl_o*=MI.AZ/3
%+e6r4'*,I6(M,;\&CMdMc;9c`>ec40;Q#R_/*_'W_W,l80n0iiO;[<8SYR>.iJ?n&#)fu$Eb94W%MT0Q-SHdj-of;#(1WbC"t`@Q
%d27J_6:m3.9SA'(5Xgd,ja4-3RmGD^jp:a8:I((+>*qe#(@knOMJYKY)8hdrKmD(q9rt=qF,)Tage2Pe/+2n?83Q]%o1dX0^n'>P
%.]<]<&hMq9C4"Yf-'B,/aRQln+C]X!\L6hK2n-\'Oo$k*DnoB^).l2@`!RZ-R&GR9d%/K"=ur<QH:1>WAth1AZ_Rj>]-+dAYY9,:
%K4Mj;r;eo<5dg-`AFZM3?-:5SmO"+>&?K9+"q%BdWD^71=iT+X\Ua8#\6*&I3FNI)M9&mjdOWUO`Xk*'*.XZada$NPT"rp/3HX&H
%'VHdZKCjuP`cE$+$G'>O)c!KWo7jg!%CjcJTFfeg852?BW6=+r@E!q1ZU]<NjV5*SGQt34+es^^nK)K%#UIraQ's@2Fj6^n!kG;O
%['k[,dIK1H:CcLN>ir93#OXU*I]^'Y3a)kE'N7e)j%:T^-Jk3)D$5[[-9sm7FV<bDCqREg]cMbGgnkdZ$&$MNJ3I\f#@OuJqe!]0
%5!aYR"U`Wp)*@2Y8n]miN53/d:uWVA$ik*!mtF;EpUnkC(SC>nNQgH+]M3\_"r%+ORBVbWm^:Fog;(9r9E7oME#MeEOP3$+*MuXa
%MdBQl_$!NolesLU@d0_VF@^`!S^e1ogmT#@(dhg7WG)gb4#TkZ_)n_LmLBLTWDPDm^c[>K1,KdugOXH@&1uCmU+cm*)."QEZaigX
%c&q!DOKdIZDiJGXd^0D[=K`>/W)_(]ZH)!6S7UIudOQ\/Zgc<co%\HQ"E%Kn'in<QM-G&BS;+@e5?4n67q8`.h+S=5Uk01_`th@n
%j?Ik"hes?Ydh8$]Ce_LMEm[9.c=<ZLA"2L`3DmGpKpcN?F=0umL$iQ0REZJS'mj5Z;NW&7_$PI%[5A^g,p5#M,jL8%g?"o3L+_Vc
%\56`.eo59Mc;<0tWig*"#QPN@`l"!LNBS%:2c"ti__dqbe.&D'_ilR`R:Q-GF4m<2Rk9J$Wobqg9iKKb,AN+=i>H.[CqafO>E'd2
%>j^7j%iUi>NkGNKf!'=BQK**_PJj]Q)#41,iH]6Wg,JYY\Z7fQU)Pd.OYt_bnjTl)dB[j@6%1(<<!=J$-_Zj1)7r)3"0KJ1D-P+[
%9"7f9n_1if/6h$dE04M:]0J0MFYoO1'j@pU\4Ha*R&PfUmK$^)Si%o*NR&>uH\b%Al10DR3I&j*L#?8[:V2BX7uSlCfLHg':09#s
%Y@0qa]@ap2i0f9L^O-!\]0KOIg+6!/JhO\PCIbTu[]0t_JX_LHgo'GW'tPhC7&VV_GU_;K6`J1bD;9hrChaY<ZpP4ZTb,]*75n#>
%EBsba?"dnqJ=?_mfMno:T!Tkapp=feDRi27!6t9g26^I:P@*h)GCKB@I2h2=!I+DX\u!2eEmTgjl1^*R!2N;Y-S(UlHG2FAF?N&!
%?F,W*7.A7,B!"It;i+u(Ls#LUbtqN*$9[Q:YY,5=B0'*jUQ/DAD(b>t$n(a>LNCM;.r<2[^t/_TJe]5[ma=-!]&?)_*#0[8/Mh^*
%D89Sf;<rM_NYtS-dU+5Y]kkk=?=R*K8VpdD-HlY5I.gNUXNDY2cs$M;Nq*WrL+e5t8mk^JXmUs!bCg^\-57#RTWsd$GWE(O0'[hg
%WYYb*@okn%2jDG)G88:9RtGQeSN4rXk15"7qg:tnm`2'6%u6g?"kn\Z+sKbc31lQG(?U/OP.:l$b_Q;O1rPZR1T9GkXu[=(;e2a:
%PXRBP-Xq92,c"kVUj\(_ho#K?hRbYcEEq26mu#JAka.-f:KUHT[B`7t!bM8Q3OGSXZ=i6c32(jf:rEVB3$9VPoBX.rC[]KYF>m$h
%!-L5"i>J-?XNmiYmG,6*CXkI"Lq/s:lbK`\8:-,q6FNJQ5>e`A@2HE\Sd4nN!4SnLKUmh4@K=KKN`[&Bn@_*&,b(h#M)J)BFBju;
%C(c+;p&ji)@;*+j>aT\ZX7o?fa;#,Ld))hU]:>(H"E.67d#C;[^^?j-"8?:5!+K&5E!!jq.0M:PN9T&BR,I,,FK-ljK#@YPRWQ'B
%A4Yb1+jLu#<"fnnq&g+e?ot"ecEm?^hUL+RBb^FJ>9ndd=D?PEd!<aBPTZFr*MePqgG4`orFHP_0$da+OR[?3q5XP#d'P'bYH8IS
%YICumcr[Od!in2150>[.*FfUc!/&42k?$Me3kaM<Np:;1Pouh3`un+d*H`3!YcgpWJCO^sGVA6FGa2]ud%(8'VCer5:OWip[d`2l
%EEb6Cke5Qn$m\1W!"hTU_&DlZ_'%A?c?#j!pn77/<MIK0/*u?qK9<PSg/R6]!FJt<GEE+.1ncGGeq\'),)h/P>uEHA2_CR'=aLe%
%Ee=<5!daP_@?!!ugDfR$7JDpO,-re>?:l2hN4iLiAm7#@.DKnuI:?"j*d)uFJC$4Z2=QD0`:^6K@+$K)(OM62-cn+dKla;QJX2eo
%1ln7Z5#naq<nr<I.OkQXR&Ek)mYU^(6>S6Yk3$oamMB?<$tHJ$h?>;N@m+5s@6<MIE06>!hGh6R[@?2Q1V/DiI(=GUjAu)AH/Ebg
%<_u\0ejRAcOtD>03):bY@[m4:9Z_q%#QA:t<Q?4^^,16^$*eK!kp<K&]a7M5\7f>Y@qc'X@=eOtR^-<1"_QJsHFJL8-s6.aA#"*g
%!kA0d8bT61.(=_7p"D][L$f-hX`+l8mP7lp?9B2JD9:dk<+Z1H:B<[I?;;,!PIEOu(;5C$D(D,J0UagaG7*:WKTRGIbj&?WY[57]
%!SeWRDe*D,44-Mh"8Aq'eDn@<TbK!]ge6kc`Bo=P*KXo+7kl8HIMGJODA@q'9F=\\At(t,fpJ*A*;Hrjhgh(TZ68Zl^]Y2;aWX>H
%#9eKp+pg(]H7W'Yi_3jrC"?mE;m9A#YTiOhQU3*3$h>H*%Qg48[f!Y`!E_oY>EbZ,rM#J(3[E?`,"AAdq5s:[1m6B:_iE5O3k(m8
%ImQKX#gWsdh(^eH4Y:=fccTi4(Eg!4o%,&SakS[*YUP-iTMFq"4oTS39TQZp.$=4R,$C9\o[r0QcA%M_.cDk>b2s&PW^8]UXqN)W
%%Ih9`@Y;-DX0r#J.oHW#IO]?UJ9)-!,0hVrRMTP'`01Bu#:kuTken&cbasng":B,KUbP,E&]qhNP;S4uA3GGfTo(?.PO,^@(-kOF
%X[W\;EM6nMX";IAQ#L[mG;Vu097W30\`s&gZ)&pu?QeWB/,7:5Qgc]#_!EK_C-u*Ib\Y0m97FH"Q_G4RC7`I0CAefn$1n5]hD>jO
%'Y6o86RGOV#n_hK;`N-f8>qfFQ*VbiiE"Vgi<i:KMYV*:80N9`fd!@&_,5pq5s49H+U2[GY_6tAfuTC2A0MfH,`Xl(XJCq41X75W
%P)4-L/#bZFL8/-Sp4ri*@16Dl9Y(D3"=K@PaeX/+d,)Fh'3)_--ZL4"+\g<.iCoBQ*e8@bBo!UD((X)\+oc(l*As0QQoH&'2&JgW
%qGZ7SX,!E@6.hd-mQ@c+N3FohBhaRZ?W)nG_0D_De9)t/_j24TA\'!h=1'-IcpqKF\kX6o8Qa(9F#<-WK3R(G3#jfTNGu%^kSC.S
%E66e+&Otmb_IAS%RXjk3VKY@#5TgOXXAA\+]GCY$Lc?Fo,OUa,Ze"RK$me8+N>AD/dm>fU(DKS1Y>;.-JBN5TF@J[t5cTDY(,H*'
%afq:6W]im][jNX`JeLC9S-GuSX:n*!!%VK@ML*/8l0.8j6I:N-QD$)LFcCKnd*.WfF]0/rO]r;L0?3b-`g_S"c&uV%Y58=hEdt_\
%NYChH&ke9\eA1BZDj/*Eg4<eB0S6XIh[Up9akF2hJ#_6LQ=s2@&=EfU7$1V9+hpEU"!+eK)Ve3-[(*,UA`,B.GjcqJW\c(fF]$4i
%qfbkg3+r&G[@TS[T^F=j;a:W/0]NA(=.*P8-NZ7-ciO?,!q%!n1Nd(9L#BndAKGY>I>4-Z1oZh_CEX7q.5A6`KA7gsJ.CR-E_'\9
%b;!_+&6gpLM_rD'V";[SE0/^ETGs/LW^5E&nl)?-+S`co"8ToeYuD@<0[a!\Ag^8*\C`_unhDe>5HSmF"^Z^`9an!-8-,*37PTtO
%H`LRM_AT7H^6RKEaUaP"nA,0i8nPZcMTtK];Ec,eBt)Q9)]q`+d`5';ab^3eeA-Z]k*.9.9HZ6+Veg^W_Q(MV#A*s2X*cjj#FT5c
%GW.&34a<(N3lIg'_R2_I5$$pUZ:QVOG\#*uf+_$;PX]aPo6XkP83n+iB.I&VB1>H*qJK=:_;Z#@*CRs[Qh@k41"33CB#<IE8JHBm
%/$gik:^3SWq,:CA*^RLm#dm;i@@hGgTiKN[pb"8W?.?2!Vkt8FAN>9-;[VtU$[[tOeeM*b`en7P7O.%QY.S:*-7a.'N8mQV5Vu)>
%!!A6@HjgY'/c1T<l*4"=1$9IMgq_ud,aOut8K.Yt`S2bfWr:lXF!3uGf4E)d6TC%pTnoJEZ)(4E:`AF/UrGgJ'-mVQ6Y>DaWhgBG
%]]p8p]*dtFF9$QfCa;@YMHq(Yngno;Oq4WYF]*:@$4*rZ6"8I`C5!qtcNu!%\3j`u9Co99TRh5Xct.T1f?f-:,khI*+S.-0,S7/a
%YSMSUkpXV%$:+R.`KWABWDE[%<hNRbRM.@b&hZ;D;8RY_$2#IE*'NSu#OHa%-,G6.<Oa8!&7IZB-M@KqA0o:"pXfY84c,QRFIZqU
%XMn`!#(cA8+s]IUP1/Fa+Y!ISbq(C:\0Nh&#%s7^)/;!H#2'+Ob3]L<PJdJrIiQ&X3[\o+O8C7"C*e:\e-0^"YQRtQ9X4d+3$_?g
%G,4Ka0JTlpQ'Y+V9s"PNRG.on'T?oR?SHIFPj1C+(ZFM-Pkg&Q/J@DOJqp`*X['\lhUpD5dP`#Z"^"t7EiDKM$$%:PMlCD0nI=Fm
%i[R&DI?fZB3`2&b4Hg-a!^l@a&[s-=O;OpuG?&`/_A2H/<rh,4OHlRZQ=BHmar_'!&%^51oq>(j=p80f;7Qe9?AoFk5@'_VU>g,'
%h[=oMrs/nY0tu!PZK8_'Mbf6\+b9^5%cJ9bOQ<FaWW\e>@:4^f&p6bZ;'.G[G`DpoXlPkdJ-pfEqPeR#)[$e\,K^\&<h^*ijX7rC
%[Kggn]H=(M6f/')2W[8\91m^@"*cUafj:4o12D+7Wh8@j9Vk2#!.B_58E*1<%i!':U_#CM8Z=rAUfPERcfP='6*@IVGhhN98$"Nl
%2h0m-dA</'8;LRnLi1[5q?/f7A:kHQcc@J<jIJV(jB6S_7ERh0?QL]0R::\6#gX*gM5_OESI,eEd&W]A<TEjfVI)s6]B(ck1o3YS
%D=FgChXZPgg=.5CbQNQcE/:3L;*i&F*LKl&D_dYq0ia/Da>)#7%=qhN0U#-P#0a)58iI0^0>-dU.u3?JnB;R&+0Ud^*&K\O+6=N/
%(P(EIO+D5GNQ2X.BnZnt-lFKCdoGunT/24)I'OpZg;,Mp..T>CF?LfH@qmK6E-`mEU_B_3n51K^G'U.ul8&Qk8nb<PaF[&Wgt%j5
%N)`-?/5o]Y6nPX+#9JBQHF;:4'\6M\>iFsg$p-I@I0u*3=49%d'4B6pD[-MR:p&eq_-eVF$5YC5C8=D;Z-03XgeFD@`u(<rOpm`h
%#<:DXbfq,,"MK76+4i3u!cAYSFQb3MF,8b_*X9@+h1-neFYppI:>ZVh-M,/A6<Fpl#@UZ-n4$"[.&hJ"bTRlMb8C/H0Po[,1Q<a2
%0MgmS`CVEp`Eij?K/h/p<QJp&bd;)_*eU+0aT0,A,C,ASZlFTj^h(E.6E*rn9[[JV>837^J>._\`;@\4eq!NFnB0*[%g*J9D?\;'
%(c@i?i$rFu+-Ug[OD+5VV_;j6JQ+-c:)g^KnJi4W!,V_>EF?(_-ODiJVMYOh&:6tjAZ,S2+R,Xhr[`$H=R%Y)^6.u4OWZC*,lq0,
%:ITlf7"GLL;;p8lX$SS\!,""g'S,K8qQU,*,h%FKGfLqh<($"X)@UK9epp6TY>G_5)bD"r)K0:(Y!NbkZ,&u4_^&n[5cY@$"r]3J
%AcLemnt;8"Q%0UjD./B2l^sK7M;^fe1[$Q&08Md7@aBQYNqGOaV>ehUmP32oMR19Q*2UB"J@9UBM@57@UV'Z+mfT,7'92mfR.iQg
%MQ&3%:\]2dMcVsr5<DoP_cT>&?4^UEHpGWtGZNV_3"/YY`X;p`'sVCXAHAY58JcVeNDaMpSI.\ubUY.;73Jj5cq;a4WCu/%B?5Fp
%4$eit9FT2tXMi_%1o87N.6qu\`\U0^27FRra>s"%+6s+uKW7aE90d;.*0Xk&,MS(;OV'2^k`VMt)toSV4(8^##Cp7E45SA:S-V*<
%AVW6$E(1&7>kQf*1Gj%UEV4*Zn9RkPIS_+%h<E&3l&ke/9L:94c1<B?jg[FW-koNU*4MkgAem#'UmSrUHI2qG?G`3+7.#r*PO4*_
%9JHDH\\sRs(kl[ZV[btK\GWj^"]6iX<"O-?/2]^Dn90ao&=\Yqm4^W_B8ASQ;D9>:74Q:\ecXFVolqic;@JF)0"ahK?nt;,UZ=uT
%<s/'+2]mm&6<6t#]bl"uMaBrqirs`P3otWq<*Xnj7/mhUO[Vg;M?4FLpBFm1pKlO^9+hged"A'Kdgq(7=k8h"\/0?m)[itWj2I^T
%MRO3d,_[ck[+s5pd"K*1M_g.,/PF1U7V7uue!M]G1nua-+Bk;pQHH/4p6Y9T>(K(6/Rf/HAcR?H0cXEu<"t@=)TF%3_O\m__CQWo
%8k75D:U=Vl.)qKJ.?39H$\Td6;-MpWAp>C16L;ch;(BLC^o?,q,%h;HVF[dtFHVn'P+L[fO<dC=V"mH>lqTinaVYHnCFO+o$.5@H
%Y;?P/&$]JmV2FH,;Z=h3UTh9D0JHPJ=B8@_JLX2j)$!MINdXG&=O@CM&IsrT58<f)$=DKGZdi)A-fCjJaCS7[F0Z:>=9G'n"M%:9
%QS@=U<.8SL`B_)hcmWmr8^`nI@aVY*jR#&[jd2ot93u"&"lLJjYTYD"@jK94/"--B8ZY$M&.@_*4Imf9j_+_D=n+hQGuNq>>fH\-
%q'9@@YXW_'(eKr:TW'C%W!&RnbH5=^1?VZ*>Tk7-&TN:`q7Ml$Oi^L6m#D@4XBr=Tc)`Q"?RD^d8_po)7NE-d%22@"Cp&Fj<qKd?
%$fDeO49@Fj<%N`(Z`PgQMD0OYdj;XD/(pjuU6;Xp-/LJ2TbJ=J!8Seo%guO]rL=T^%._Ialpn9;G_3;p8J&rH?8MulXs\Y1D^5j`
%bj:24!$J&R>"#D^#?JCd&/L>&kH_t<dK>*ZU<Y>$#8+5K/S[0e@GsG@6A4eMS6oKo.AGHOQ;quti%G4^!%K<%>W]:^/^[mZTGE-E
%LA>Tk@0)05BOe(X>50O%F9MZk<&fs^>R<Nt5Y"H991rMP(r(nmRWNC3O=I\&_PkPu,,$?4#TRM]iInpqQWA*=&Q+R?]LZ"A9+Nsj
%bfBc-7NS-e[Q\)<Ru/ga0hEdA'&7lK"6d;6b=,\E-1JK318'@gPnSc4^]b<,pJuQn&Q/b\YYLN$803STj3NQ/J6Wd*5s]'r"D`SV
%_pe0L?F^?O(0a(dB.sOf'58U]^!)fec)p0AMcpreYn=\m`"-O5ORNTk3k/"KB<WRo[oU9Z+_<5-0V,fW_3\f:@f7WZ8PJO6jE(O?
%_0D&ce/"B73f]FO*B*]TOV@k=/HU7VP/%]704cq^fU.ZWkXl%--:)$ueDcX/2DXjR117p8;]Rb;qMo(s9'7c@2h8jojpA9a:^hsb
%\8%cUNhPL09XmE`Jo9O&,WJ..fOP/Ba`bA;0S14g4!_YXgZ$T>6"^@&T,p4io$o!'!p&r^_66;X4WJRF+:kTiCo[&KMD?!00P!VW
%.@<h-l>u!NV_9I`SgpR;i6_g<^uYPOF=8F8@'M%!&rk.<!F(o:K@^^2p4Q%j]9&]$oSl1s&I^c.bpdsHCJGu1kp*C^NR1K&[+tq@
%M38S'>K-ct<Y-5RrFsVF[mmWj?kmYV&eg7[7[3Mn;G3fpa2/s5]V$n"mKM/JJYA/@a3T:j')>1bFB*B$/ZN>hQ_5f*WRDt53qcKt
%O>t$L0]N)=8DPG25pH1f/3j6OL;stI\Jes/@.t?k2?@#E?_A&7KcT]rE@Gff75sF5&]md!fh.4sdJu[M4U1s^CUHXFV#Ng+?jH't
%/"!3Xeq+o8T*k[5]9;93rQY6mlpJ(>E,-8k2eJUPs+;Yg'<r#G/8T8+/E"H)Z::P/=Wd+U0#9J<kb6CG?D:]%7M_2me;6Z!4=$4p
%'m9-]CW)BDD#tt78m2BYO"cYj6:?>+CfC@4,NgNbj$jP10k3Hb!mC'TAV_Yk-j75S_%f<G*1V/MBX*7&Q-c:^:Xn]o!bN48h,\J-
%"Q)$EY"t0b`OtpW&Zq7;@7jq9(;l5c@Sd0l6%E"DVH'o(Lo=L=<"Z8[D@*(+VZ%8UArY#!9cQ>&Vlt3WOV@jX>1rLjn5A,l?kG@F
%2eYGW_a,>4b<4BOJ6.*a:3I<$*X(]$<JZj1NR>jRnt7EY4<(:64+\&36?mZJ5,O"?V9!,H:c9",]GdFP*"nKZ+a.>.ei6$+_%eW]
%=TtVY$QLAY_[8?RMO.R#Fu],]Lmj!o[SQZAUmmX]#X+s$2"a^^Rt*;/h%t$s46F6Bo'cj\7hC+Xke"%A16u>kTGan1E$>k,"kY)l
%TNdDoBmDP5]$*EJ*HYj(*f0N<$o4$'p&KA$32Tl3Va"0tBRgFg/[=Y-g^K.^5]$iR%uU*tEBm`S[$'8pOO&r9dBJ4FN/[2tN^!B.
%mSRC6At_YTS9HI<2-uX@T6X<?M^,c`='g+V/L08fH\"JR?u]$BU!=*b0bah4D>:uq!\;*cnL.']KZpQ?(.b/EU,BgEgqFAL,.`3(
%@XH"UEf,HZCN5.R&ef!#@7$*9,"O&*PuR$NCPIlfM3HsuK[q"f/l,2hKkgn2Z&1IJQU)2Z7n0ffOGQ(Q<>#Nsbp)QY;NVj&dMT-0
%LmpB#>RCPYCPRRMp%+=_BPcp`P9_[=91NJ?K#-!/-)`"'Zt4ea9M,g=3`0qiS\1=`'hB64C-CEFj?Yi)&@GpN=3Uu*()!tmUr:V6
%_8Qt@WDW]>:W3fPig`m$9pc&hX,pdYFFf+R-,V9i%-h`L;BqnC_jtItoRe\gp9Jt?#0S>:7]GO.7WpUh"Gm9N8QbBfM$0NndNDLU
%[17^Z,+XhP`O1<cm@5BbiG))1"N34pHTZD4KP,,%gaKPPK;O:/V+Q:]Q`\Y/1-4\3`Zl%8Vho[ebTmNt(SoDEbpHPNaLK&uThbga
%m%-L96;.>X%NWZ=Brun5nhD%DXYO&]iuFS1!dmu3K7_PZJ#%YBZU-4#:5VX\!Ob\mBr't!!ZL[K7sQAUbjLCKd#&CrK?1*p0OWq3
%UqH?N(<\dI`mF4k'bho+LtQfQ;AC$LY5//?O8-5)@;+3+L?5OI*p(>%0o%UeCQ)DF7R5j!5p1d\X"l^.i"Xso)0$@OZ.'sNhp*^/
%)QU,F;9k)A06%(h0G/M,J&'8eIN2#\U1P?!/_rMG9B<!i^HlN,&!@&%l]mIGRdDD=J5],rF.E#NQteID'Gj=LWO?=s7R7.*Y%m<Z
%6V"UM;QZ>7#mm-,bd[%c*Dtu0Iu7HBJ.mN3k?nI]MK&5Z:1iQdC30LGm=J=$n,S22b%0HfBNY/j`FfSc0kaAEVm5:_3'eDr\3XC7
%1uAl',ss!qIZ8J+$.Q3mg.57-F*:DKMK_$0#$t+#\UE-YA!MV17o@XH7FFeBG6\C480k)pC6kn!'^I5@3^2SAP/>mCMC30JA8,M.
%#QD=KbVCeB37]Y($K\-4bY<&nRVH]'AZHPJ46ES7H%A9sZ`$tU<Ka'oqf;^YjB2/N8r7R`W%a-F'pL$\\sBWL@0e/m"M@0$qOsR4
%S/s,T@JDbggR!jad/+'T3n[pb1!*#;O&WqOZVB_5HEMBkNc]<I=>6Q_r<!uI,mfC:1\&Hs:^e3S'siI,h?oWmf+B:aPdMLm`[rSZ
%+O&pn)L9VK&Tr\2:CLju"IG+H!<c-"(t?VV'Aa"Ff#/ia%A`0aUkZ'L>Ub%57>s>bk4%t)a)-?@@>5WKFpNVRM&/R.,B[@HCa;\,
%'Jl9ZPd!me\a82)iX7-%Bs^N,6-<SF5]d1,%c7Vc6Rs$qnj@jGCh%9U"HrTk7-.a:ShdgSP1)H;fO#irJoW4>_`!=3:P[cBZ`P>$
%-@(]'4ok.$"rM&o><+in8j)IdW+`NC?4lZp%5NqpWc[5K2))(mFOCmS_D.c$jbgoQ7N?\1<(LYV"!#X/8BS7iOY7Z4+B&_s%SSqJ
%"GOZ"@8.Go!ud6E\hFi0=DAV6Cm2menYb0<0Ol<o5b+($WR&A[Z!r-9XCAQ;9o5mi,RMAMY]?.u7li8Q*an3JLuJE"T7S#`'@JQi
%jUo*-ILF/li2b:3D);la9.SE].)CPc>JuLM5IJX.-liDgL)2$riip4[$8h&e_6e;P8a;K<YQE`+:)P>"b_+S(Ro#MWi!B*J3PRU+
%;YV0+e&3Q/5GAb6;#u*Pi`$l4fGUfGA2k+q.aS[Tk(j;JhEt)4+;nC>5m_l?dLmE=AfW;m#KnO;V-[l;E6ckr#"E99,e';:9F."3
%=hj'9JZ?0L]12]M#l68uPOjRKJsM)2$$h_2<9-[;]p!s\`Th%dZYQDW6^N'G>N[*IotjlYdKrLeS)t#EdP7O`0MEjCbZ)E2(hu=Y
%Y:97C7*`5,B\EaQYBFKXN,nFFU0`g&%qM"l6B<]i"%fL%79!3!aZ2m%;?2Z<p')QMWrnX=K>deC%26eg>o>bF0F<*;75cY?1p!pt
%a,qAYX&qn1!VBtrA<cFZ_NZMCV]u5>A%Z$?,TqJT;92E9+,dop6U-Pc0#Q-^\@(g_Kp%9g*.DGhdsi]H_'i0!"ItsT/#EJ0os(bs
%^UeVODdG.hPqXBY,odQIEf1*a2(B?[ZSDt8I\kMijds>3YE?0lEIcEO@G&a6aqM!*WA\_A0oSjo)3N>SaT1h-Y'C0<Ee(fHBqE*_
%[rP,s#'aEIDIj6^OuZ0e#$0DX$*%Ma8-9rCf4gJ+B8I5XXLJBF4"&Eg=/L\u#;m0FDkQ(M,ciM'iR1!.YP%;TVjJ`-("@FmilJQ)
%^15mELEFrm/^/9pi#iA]XALt.?5F!i6%pOfJJB\+F!iRI1NWb_RC>E,=FI-Y]7L<B-k^nH.%0/`(I*V?MAZjSFsYbGUU=.H?Gn;*
%GYfF12JuG"WE8T'-Rfgl67r?H4[&@/ABD^O^`rr89oa3m.krOE?2RYC,kDF$U0r$d^C&mc,b([q`f"f2Bd#A.M"UHNIYoUp+sr(?
%:l#O<!VA"4;"om<NBRZeYnY4aa)/9@,SuetrCf%^XVgI_hF8k+3%R1U%ZCI0"7[,G2AE;^6'1VQq2CY]<I`.QL6,FCJ2'pr?pjO#
%&Co`*$rn/1AFMrtZBW3_1@/PZ638F3M(ge]Inq5U$\BR^OlRQMn'\d\1mS$;ElI(`O1`P%3eaarO`skUeVNtS=@k[?dpQF[,9RXQ
%Z(,gc-S$o=Cn2[d$\'Z^T_]N^XZ/fnVFQ:7^T!_aNYgJO#]4:]Q.e^L$?"$i7'E#Fl3%;:Bl+Mi#mSh60:OWV3It(-KJ*Us7d<.T
%$;=#k+M(sV-4btS#"h*LH\&Y\.MY;2#4g0M![Xk\!7Z-Ji`RY%3s.L%obiGp(R"hV2G?D&p+itsTK&)*`2"nl3(q-`#1BZ3BQ';S
%K\kYpQ^#sTq*-ij=Gt@!QfNUTW*Ni7,NpE.bK>jr87PpspkpF=%T0UuSo0rsX>t-nJV6lg_od9sHpJ8_):a9!>[c'*70?(4/6LK!
%#Y(sN1\T&2bYU6]E5U&#,BAUjlq&E^m*pm%DD6aHM]GsT6J/6Q@BE*9)G4uR3bDH>JU#ae%qs'NVOu7X"E'(&_0M@,:@i(NeZh)6
%+O4.DcqQ/=a&#>k#ot7Sq/Bk:_@3HUl<P>Ndkt/C)X3F&pZJk[677:l5X15CIVC-94tGY<\f"@(Ya&$//2L/kLE%I,[SSGNiU0Qu
%6m#[\H3D9A&L/Ho6HR5F;$O)'A/HMdS<)X-O[JKu6F+VC@]Ft+bQDs/E=1hqj.m*P7%OOO-*:BJpLXS47Mr``X._;?')e@%i91l'
%O0n5W^0,JZn#&k=C*Y3#(,r$CORNrlCTr!'Y6>YYUE@9pi4_S=1ccec_e'B1^XgK*=7lR>'m-&^b)it=,mG8HJmleQ"Uu3=Q>7\\
%r#d>Z&Bcr)I"V!aZ<EGh)ru0r6Arog#,AmCJp<B"bW/DaD`Ut^.VZI/5U-?5?Do`Y(/PrGMA]M#*XAo^7(W,`K\D]pXHa\9hPKGP
%+EqXd)X'@M+FsdjZnY@AY!`I=OfX@SR%+La&heWDcuDa3;fW52/.%>$F0f%1B6;Lq@ZfT[:Olc]db5<?lP-p0]Eu*A`G26"_Sg]p
%C1>[ZdZAm4Hn!Us5Zq&V`]U@H($tZir*G5f)^tZZ.sY7VNK9)f'aAk&STl^=FMba^69Gkr,hX]Nf%8lM"_Nrua@S)!"iIh>ZE@VM
%"B.8ke'P3e3]llG_4-=(2Bm7+4]*AI>/AK]Je@rq:c;<m7M9;S)qS3*#+)&7q?=Q1$W.!56oOcr`n5TcBd6<n4TZ=K<)P4!'N+D$
%kR9/&J;u$GilQ#5b"qC_]og495d(Td;d&!l3=loD.rmL,egFu?bX4.uJmc_4K+jId/4l`iSS>Z9dT-WUUd%T=_JY`'/d5s\b[2oD
%M\UhNefaZYDZpBBJ/7Y@fZ<UuCRW'#R^(9uPn4#2PX]]]Gq]fhP=dkn'(PgtoVkJi.WZHQTmr.^)t4'+(]G0&$OD;aAk.(cSI[I\
%`4LOf5^1;oBs`8sPq7<W?g'/6ZCVXH/.0i0M'JBj<,8#^R$/fTTG2bn2L[;mg*2.LJ.&&sUa;[f`c0qE;6K"[I]V1d-.<9\_PtpS
%Wau<JK"sc?Sg-lb$9!T5'@,1+PRnDXLl=6N:]ldkYSE;"2m'rF![!9$,?!hWQ6WR"2G"OC5d:qm;CU)s8dG]TB/DcpeP%\!rt@XA
%BZ_/-3YQg:Q;hi/aF1qY!T4$cm3j+aZkM"Lr_b"2(u]W(N$+ND]`PTW/2K_H#,jhVIcsVufh(>7+9b"r=XFpuhUtaM3uU;CC5\;O
%J3)*[#TZ1)9rjX"9PI6g;h3[..l#W?DV,#Q3M`tNq+>o`Z9Eu(nD"W.]Tp3s!:mL@N+1VKbaCY?PRNXE!21?,Jr,*g1R940L5Hs;
%nihoJ\.cIHBIeNnF19YM/#5kK?pa*F_MRDL<35p=A=0:V-L)k[Lfh*uFqPFYG+ri-5f5Cb:)XL=aVBDt"WS+\*:UXu2ca%^:5Z$-
%</$6?&"S:NP"M,Y;4s!WQPXSJaJ2f&l`j+@/pGB`QfaEH7'<*gZhCthWq773jGb?G&UkJ?:_Lc'DT>`glsQFt&[%u!)2arC88@VR
%kRo*H"u?]b,6\p^`=.shpC%KLKntel;S*V(,3V36\<H[cTe!Zb:6S%biE+'RV?X5Jp#/F6@;GJ3M+\<5.W?um<q;Pa#cQ>]-n)k7
%eWRGD0sHfHonqS%^*[Aq)]$`-68S/CfU.ghM@_Op]k$hj!="nl@87:F.%nNrCB+WcaP8gW!RE#s^aO;S$.:_'W@3#fb7,@EfhTNG
%)2HrmP-r)?#sgnt9Tj^8`n0NP=hhm1>bg@i/7_)S`P<8gWP4"(C@M8o((PdN7SKpnK1HKUOg%N?gs$c^'?&ih@K&X;OV_[WZ=+Eo
%U(Ig1*e0Rn]hlKJ_3GefJ39_9#)M5[b**O.H@^7&;+G$8P(h:1AOZ/V4dLVga$O7a^J^4^)1rE*K":N=E8XUp?cK"s:/0.h,seH7
%>)2Nt;N3d))htUraWSLcRSO9A810C`K\DU@]%Ku[78H$]B>(fli2jCSAgEC\k]*-g_S&mlAu5q<:lJkpUmXm!>I'UV#tqp*OuS*q
%O.9cm:+*\Y/Dm<-2D6@)/\l4&!1FJ^$\b:BfssD$GmoYY(1;e2i>6eEcrfRtYQ@=9I4OQ=E64bY816=Rl9Op&/HIpI8i#NM>,ao%
%]Nf%R`D[pol<EmQ*)c+0cnr"F^#G?_OK%_*=d3:9W&q*3,\Sus^Olfi%J!F&LfA+_^o,Yl=K;OdAP5]-A1:!MckH7/i%;Jtoeh*/
%O&\4NT!.3d$74Sq_emSGF]t?h.HphHPj;Q.6J3"kk&SA""Y9tcSoMIe0\hPJ*[JKp"(dIn</;4*@VsOuq5>a!3poSd@N:N*Q&h>p
%nkQER<'mN+E+d/,CbGrT7"@*tK83Z:USinngAuGPln=ImHPjZF8s@m5S/[GR9/AuHD(I?,;(sDe6-fTmWl8Yi$&YNbnh\6[*B$VX
%VsSfm'hDKlO5-7#W1C?q:LGiW('`gA9Q]5m4DGRoOIQ^jXa9l-&i$aZ'.R\#\:SS$A(8T]LCh?sIV8$M1]h-6aN2p>Kd9gU&9At-
%>nc`7i5s?gb_F.L[<<+a_@[j%0YDCYH/[b)[0l[3MqhHu^;1McR6U11R6k+KNQ<"Xae9B_(@/,[5@)rc=9'MSc^b3<\]Y;R!K$"U
%.g9UL!>oU:$dR-F02PBsW,j/kidOcGgdp!)1T@l=Oi&B=(7eLL,/U,1?%YIM!7l/OZY\>&kp01s);p)?NO9)bW=l&(X-87M+<ti!
%%G@SkGVOd=_brSHhGst/":@\JB-cphL_)%"R4/MjPtYK^Z%l>;iYbksL*WqsqP6Md^e9cR@7?&bcA0!$291K2E$8nVR/SPIP_"*)
%4sgQV;PV"6MHSSs!dLFkRSHGlC*?=Zg'biuTi?8]'D830;Q3=GqkfRQ:jVE-Vk;MV,Y;KT2eZ3:<7.$#M@PB.Wk%FP8X1%2KL7[b
%m6DnjE,/IJEVc7iM6s?"Zlm.15jC>^]biAP2IcC+^opI_77^Rc`E4[O?UuHIUXSQOhj=F1JbZ<FVta,J(^J;J,g0*6.O^bEE$/0d
%(W;/tgIQYO?@iIu8_I\Y;G&`F=F;[rTI![Mj>KOiW`8,rE22"d1CQ\2B>o'I%!ptSTVL14[^Bb5=sF[>R.,PCC8?nLA0^.XA0e's
%)iGX/p`r+\8a`&?)>0@T;IJioFrG^p(qF1@9s]t/+9pKL8kk+)\1BYDM85CI=@M`Hn.JLC;F8L5KWHRNb=l.KP0GFpP[:d5"H?1q
%@,NW#oqeM1$-'I,bGk!A1^#:Gkrp#I$9&Ss-NSdb:,#,&A9[)oA4[k,K#L6b%Z&Q5cp:*--:1\Y!d)?-Tjb#l2d1oTl8+!9"<lG?
%N]VQbR;thdopT;b1-Fj+.+gLu@7og#<$q\l66;!dZYiL59[U1?f,LV+#dVr6i(3BlJ;kH0(+)bVFd'&-l%=%N['PA:_u)$T2SLP+
%70&Vrc`L3.)^=69;J:b,QC4A)XD2'3oTr\-3c"E)L(M<pbN;Iu08=:.0b,`bk(tjc'+WQiPn?QhVU_-Dn0ld93a+@6C?is`L\Qe'
%;RKEI,ntBbKXTgX&UmA\iLMbNd[WoV*8LIn%"Mn\XtEp,-kUcG7`\t_q\Jb-HCkGS"R?o;QgFq6%0X-'QZnBS,>Qbrak%YeckriZ
%7cM)=I0u\cK!A"<7KAmq\5#mFC?/I[HlXmO]nD2Gnf'P7@tu:3o"Ra(1^l;f/I=(Ai[+7@$^UmNN$=+.'^[:GO3#O&W[=PuY[!Ye
%P&I9EkR6WIZ8C%!4!g_>'MY1^"*5&V%#!\`UG-uk>i"Y(Un_AV`((@<.-!'h6B2U2@K>J>T(<`P(%o!P<+0-&JiO^C0ncNj@?6o[
%GPO[HnS;%OgcqF1ZW\4I?TKP)Fj]p5V%d&@9D1:t<iD-S-)V$O;9>G*b8DP#`isu$fCJ4MSUpuHB$Ma-@K\EeW?+in+\%,sg9n#s
%98-E.7_Y.P-/OjU_$oqe/&%hN1T72hQU9'@^n2F%l>^/QITUN02r26VLP18JMsti'@QXc!WBWitGmpQ#agU]m_7pd[c]L`i6lRKf
%H&-AqeK('U]iDMD8s!\I6:7'N+[7#gk(k$^q!jGC'5ZFPj2"9o9!csPj5JK^:$>1;&lD?XKH)Yn)f0jMU(g/.Wml9ZGV"$VN5s(;
%nobd\]V_UFCF3;2i_+AV'cqfE,B%*bKkG,2R0aO5rKKX%a5]a,R"u-$:c$e(7QbqZ\l8_Z%3EBnaJBubi6e-6]:K-97[3@Xc[j+S
%kt#DHjM8[pbCQ+Y:uLG^%)"W1#/$nr7?mk60Yb,l'`L2N$3C&fU;)=aif0k?haM/<`h*)<<UF<l)fjh-0mKYHG@]_<X'/rGUXR&K
%$1f/XB$0neL`Xr1?sFK(4$k=k$0tk<8HrBKn"##89W.]BpWalk7'=eOHY6^r)k-cCHY6/>m!UhO]h;,9Ik0n,Zm,m\8$$pV9);.+
%]h;Dk)(Xkjl9.[%1h=6l=A+;p<l-qm1Z<MPI!<(HTjDV1GD@[P8fTA9*NhXZ(tf8L*JqbBi>tmU<G]0R's9XF.)HL"WU@!m8N/V<
%]'E0`LbN<^\hg3=S.CJE%)S*F]bdD)K*\n["/`\X+]kb*&^qa=N$sZ69R!!:U^L/!]7FM6F=1PPp.T].3:_/-#!6=XUi_ZsmL2?E
%5m>Y#8F?S]cGF_U91EH9+smT.YhcQ9P]g'83s2!\hQ;QLGE<.8EM:!#YU#e44l%,(Oo[;3]?A6KUl&3a4%#,,ekPAr+;Tj.6?d&B
%HJi9!q<e[%mR]Q#jL[5;Ij08Iq<id=`*/2DG6dacU]ZV@mK!%C8`a":mJmnHjHtYicB(PS4FBN142=Mr)5#@5;8<K;[QFDKWRt^h
%3rh)L3472j)1Y(/r]-^b1G&(Xh-0(2$qUibUb-\4#$2]gJ<&m^%/D&@kiqM/J`*JKGE=*3^['S@:kh[aq8.;F<%kNj%b^7YR0TEp
%$JQTKh+2!Vf^;id!j7M;gE"/4a@*.@GD7ZdjP3_G4+piFDa0u."6Q(HK[SZgK!#QfVn40q*9qC]FE`JXo73/[FEb_:CX5]<mL8\[
%Sa#D,N7/u:8p:Ms(\b_,m`psu.YXJ^N\P24-Z""*/oj.p?AtO@oBn-`*MF%dj#(;X,9d;j-C!nXfSU*''Xg)c=>QY_'/:Nm8pAmr
%<Trl3V6Qg(eY3d_d+Sl`?/L9$DC7Rf#Yt7/WFEY:3X#^0Ze]V[dEB[UB,KtXOd!*,@:i]GkRlPip6ad,/))*0?_fkjg$UE]Z![ou
%f^=iX/?\BWFpBQ.#q-Os4%hM3oOG<k^d=GAfq.R@=H#pl/o5_5-J;,HmKb-gm!2dl"UI'W:_pK$_hsur-ZjRP3VDJK\iWGVf5s13
%SRErUmG/rA*RM<Li1SHQ&]BXd=X1L>5V`VjGG2V^#p(X>GPt<-FE[_:&AH"JG6bK5M22nX46Tj6lQ+C/5qrbr7\RGHhBS<0R-kH^
%(E)Bch45^DB\W3%GD=J;+\h1g%,Dp2Ajdn(S0TZ0)U[A,.[a=kmuG^K'NFkqE)%"9Em/`_F&%6P$f@NF[Wl)Cn'61>WZ)TZ)%n^D
%d.?(5-<]P4q!JOkXW'(T]7]r-pKQak_bi#/IDg>BOLn:8ZbgnkZc=dNZLHZfR,C_hg@O,DR*iL:m1))Wi_CASh;LiKN2ja;LPnFG
%e,VhI[@Pg_N1'*e^8gRWm_Ag3FH""V#Fd?SG!^8jp#]`0EX.64S"AXmL;HkJUpre7*(jBa_]<Ju8cDZpmU.TO!d_e'LQDi._@+&J
%Bu%1XDrc`2%Upd?=*cr!%/ImN]q&l[VAdk:60rio.eIlg+Trrq(OA.KKZng3DheX-%(*7n_<rF#BHaj[9r#ol4hDa((6RTVamDD$
%]bb_$[;5\GSrrb"TYk&j-JY!C%TY;5#qM2[bY2GFmNo!4\<"_jY_RfTP(Sk=M86P_n!s<=e_ifH3kV3Sb&n,N69YLSW[_FH*Y*bk
%:C4&`#Hsf9ocLHic\EUjI4_+U"A-H;ouqTtfeX$_.^PZl-](mOd.fni,Kj4Zb]\YV)XuH`#+gG2M<tT5$QUuL[Y)9HnZXL]G,QW!
%b,.LA#MV*q-6s%Wm0N\b&/405K0U#>L:h],;e!_gCr^!ue+;:]_P03U[DOAU`2YTI0i'OBJmI!Ma0ICC`,*K2\eoh@CaTM5b)%KJ
%R^fpb*'H?4ONtr$iBh?nfJ7F[Q.XA9][oo'm0nVD%!jC4#VBm?5)aaRn0%,hb%lb?KFi/??9:Nc!uE>tG-LHuYkr2FOWb3kEt_kA
%_dnJRe(W3TJ;I?Am/X/U-c/Skm7bXmYI&J-#RbM$e(U5:BG0E_edc0c4t<ZT,e9h]VmV.FJ/(P\FtbKR85a0h+OL60V6r+t5O-\,
%k(,2I_,+h4%&7LU:2'$&^M0'(C$d#t6=?[tG/UQ&>`WUd$lIgS!]l2^+n\a;@ob\d8f5mXXEN*Y.)`-eG-EK!?o4ag1PDgsg7Hm@
%!/&'8p*h_8+n6K.m8J(#UZ?3UeIE4C_^V[1L:FIiSZpi<V.AX9XELssL`]W!m0k^ac%ORV4dD7t6>@n3[1$1I8aRW9`o07!8+\Sg
%]1Qg.8Y\5&T%)%b,4S!7LDrI9s!jug]`P?.'2gpE_W!$tUin`;\j4P(-+,P)LMnQ1G*%"`H:g8/8]9.8g)0srRP80W1ISI-^1Xgj
%pRB[>4ej#Yg'EVlOO9(tC?EBH7gY%!$_n^gSSom7Ftft\<LRt)R1,PX7/e&Zg-NpoFJZ?#:;-Rjda!B'R+XqR8isoj71;>U*Nl"c
%c`<RZHj6O2@no+<r5=cMbfCXXiKS?-dI5Lt1#.T5%[R:>S10\G`]M;SXH[m_&=q3B..(ueaf!C6e..u%"6FGpC'V"?,SjQFk_&)`
%$_An5:aNu\3MNp6=Mr<SCBo\MT,1ZmJhf.?1?,^Z<terRnCjRGXF_Pcg@9LM2>r)U0J##VQUZ8fck_3(7^R=UJBfsu7qq@h+pl1h
%B^JJA1$p-d*MctW\t7JJ>_bJA*=iAZ,tFbS=R(RB:f9BllSFrR6u%KENVPl*e;g+V;N2Gi42XbKBIBU!5hS*W67epU(gg]T*0JsC
%[a=(M<]g4YP3iUW*P?VB&0A13iN&7C:20*G@N`t+6>S#;!]E`.m7^D;bXu\A'E_Ur.^:#\%Gq:I-FSP4&uc?KYoWaj6;U^=mDq4P
%R(O$9*G[Bs$s&2On;=lVgBk,**J%b:.`?MkUBk$na-&BqPm59bfFA+P,u@nk[Y$YsA5SWENj\[n*$5dITou%7mn.C$G>o!lo.%\%
%QGp0Kn`ktui-h>L]("FIka[#8Q.V*Z&hS>D8&TQ^MoWC_gDRl-BmqEb`<]Jm[UI$h7mkpUf/)/!`kl$JRI(F!q-^amR-hfu7`7?!
%[NgJ.eb+aON_m5r*\Y`\F:6M-<1*%Y5Mg-mBLTslS'dDtZ7t$!6?Ja?CaWfcFT2f<m4?F*0EB737plSOJW6)bLm)5RAlMG8$lqRA
%0\^U<8WPrB[Nia]m+S&aNlCEk2^;orP`L+AZot`9&VPbeAI9&066bL>)_p(ZJVa)PL"VJG?R0PAb]ZB0P3.PDG,/OhQY<)$A$$6o
%fF,//^*<uEiK2fSokp>fWU6qB"eTd&D+AIVc;1.B'1qM9C-2Do,XZ<.6MUoVW)D@^KhOJ<L=CAX-W8kOZQ6?tL$>otgTa:?mVYC(
%43WHCb/.sBe0:mXRI0JPp=u%f%dE>BI#j!6N\BL8b%le)H.`lV?9;2_dJPH+G(eVI42)9\O_K^%0OhI8MCUDN$aUkE`KcUt<deF'
%Mt]c0m<I)2"F-GM?:h9]^\-*"EWKbIN)JDmcA"nrL"_P4"\bs<;;2\jUTd8sjq'gk=W+:$G!_8?\I#ee5YtQm;p"E[C9&B%gJ.VJ
%GBlU5]7u>2?G(uPkj=26`Ej@,3uM"6AYlkg??C$=--IV[#n`BU$G.<-N+i))Fup<K&P[F:Db!h98Z5R63th"X;@:l$@uou>&\T4R
%d[g7%R')FL^MX(K[p/=c_[l#GV74Vinu)E#TDb8VmSB0&o_0%&#ep2qlLM"2URU&<O$?\@n_"HKEsD[8i<N`&iP-]7\)ZduDdV&'
%55O:*kEZ$`eMVjOYZZDJi<RWmgRg_.i8'/1R+5hfn5gk,H)kk5_;G5frmQ@.g!;1`qWmE2s'N*YOam,mf,oJ2E=8C@$PVKAr>TQ'
%etkU/aQqfu<K:EN+17C6G)7$Ya5lufH6ck-3]Qt6#P4/?31rN([7^Vs+F$6l(`3YdLc<]@ar=F>I^\?2oV80h7?5+OS&n/Y7f;b>
%T2^+7al&f`P59LYPfbquKuou,hP0QMD^#.L?%5M0b>8,?CEfsWnVW^C;TtYr@W#O%\8UD`C6<q_,1"kN3JP:7M?!1q`NVd5>BmlY
%ji:OjNVGC-YL5%RL+'MkrS#Uj;0ag]/pJ'6E`Q=^eb9HZnZ?cjN&hnIMhQ&mQ8LIS7ngXjb4Q^*+PZU1Zjbc\:R@Bt%>[Z:KW)4I
%(7K\APn/Unm:3e.%^(5=b4T706.QL;LTm!%aVLih$(6,biV6o/q/%4;V!rBk@oTTQA&K;MjYC)rcRgb@S^5p&Z#KUq<PJ/]TiZ0-
%e_\JB;pV@^-d`3IGpd40I#R#tot=5UZUs=[r4`(-n!B@gYKpOV.#%q.\`r86IR':_XqSZL`Q"V*Y9H"Dn>H7FfHBHTM#8_%]s397
%F<%:D@f?6A>CN.)Y<MmB5?*J%N;CU6nO%[:GI/foJa?TN7FWi3We+8,3i<K(H%!:(-Ysl,I]rWLMJ1GHPD$KS[T1&@D1Ek>j0hr5
%:]GndISamL_/fA??aj90CLB,-m;N8>s0p%;2iNF(FZ=X\_>D2[l;`tIMP3.<7I*a)7LXnJT3dT?UX]AKJ.4\Y]8/APmDTK9CV.[b
%[YH[6p[OlblB(bF9MHc3ps$SRjj3*+\Z$*(pn[m,VY;Iqrq6('="hkokHS$9b<LEdqWOQT0.ui\I[iXlqY^572eR&CDJ/#/qIKHH
%l)XE6(Y<;?*O)S?rpB9Rs%!"=bqF"\pl?NYL%6mLqo%utT2%#qku4e2c@:(]ZfO42<'HV_TKN"i*Hc!iBDsod+91-b0)RK"$bu&2
%$Wl6cf@fE5n^Y7p(\n`*YI9GcTLUZG6iMO[Ie._PhaUE1WgE=ccHkZ,DI1TOP!6@Uc@#>(hgK\<k1.Rtk3ajm^R3Cj4S6[>?bC;<
%YrQR9h4sK<akO-d?_@;k]<f]03W!ger2qCCk2#_)GB`KOm-VEC3=<M`\?#&M]DHXEme)pE2^^h\c-\)[LNbaImk4/d3P2nEnuFja
%<?'geLG#dE\N.Dbh51A]h0I3,rcW`FCU-E*cVugWH=1XV_;3/`g#)4d[)%OT4qB`CU2R3k?([_ejne&_X7OdX8&45V,N*V"e_Ku^
%2Z5AuLYZ6+[Z:!Q)cpt'Y"rr<Y%RC'Irra.jk82M2cjqDDrto'8,<R]O`u;j-_I$E>^a1gjnA*`Zs;^YX5%`\gNJkRb>k]*RW4s*
%DK>VnPFJg\&+1e=o(jV]_Sm<mkAQ^!giA`cmW-KVDRmqBGI\RqWIIfi\W?+k\BW:a`1GlLjt3[P\`k*+rH*5Qc)[$E=$J@3X)dk(
%qY(+&rY\dh[l5s(5Ps\MZ_(l4RD['heZ\EphJG?RIc\gkQWCn/:>W[4H[^!\]Y/OdD)]dCDD1.B;(m*;8BpD:S0R=<%aV)!gLK][
%f@A'2DpN<=faS2!f=tkR%W[o^8F:[!meZ%el.J"n-PphD1?6E![G3BBiZh+do]kH$qHn`$[J`9I3^8+^f11+(;$k";)fOW(SUUBP
%gV,[9YO)af)kDG%EH;$ElLO>ealT%!XoDpErG1P>n5'(3F*2bOY7C7j3RA.(^(`NNN%t1$)2%KE41s='=hWI3%u$E1)=r7j]<j<,
%\iRU=Gs9QlouG,MN,Ng=51fE!+H;uG#LD6KU%e1ur2sN2qn:JhmETdf.*'&9J/O*qO)m5&O#u,I1QJmc[lH]CIIMT#0`UA!oYKqh
%4Da?HW"3LlkK)*YP2G;Qhto5"jSJf:ea'Q23>6I1BB-u,buZ:U>Ao>@iHU`Vi;7bFn"WEs3MCpc]Dgat,C,C%cMW[q2!<mr^LG=U
%=gEE544.[4B&?m-Z_h9ZPC.g,72tB'V(t3G]"0l85!/Y6).C.TT#YB%Ae]DqT=d.52eT[e#BtOHHn&9%0?u4Gk(K$2l=Mqa@La_3
%4(j[=Yl8l(Hh6P!c)[n'WukrD\9iH0H!4s!;-nUL]Ui"=i1*E37="hi=.uOR9DSd5f(Ut07Ye=bG>P.+=<%0gZX@E?_nL&JAr_.Z
%T[j"uc`nH#A^euH\R'%JnK#B*gA\eA:ks)\*&p4"[euHM!h3D@Z.l"2-ZP*jg)9d[2=g^)AT][Sk+'`P7pGAV'49&k#<mKWEd;qR
%n]fb+g$(VKbPG"Xe\BFB6jiD?^\+5cppBkpr9]u3PLHkiB9tQ,4aD+17o$B?s&lK&d>\'LpRLf8F6oLhi*Ipr]g&'"\=jC%XhR'A
%c-6O7+2i;1cHI8c7K!W`Z[]Z*G4o.Tc'jQ=hs,9?8IlI&@tt$D?rYdKc91ppPSjd-f2o0=A5_s&?-VJiWP#d1Et2LCXq/c895Neo
%"t.k>hlf/OX0,]t?_3h4a<<c2\N'QReXTUs_4s(r@l*91`>lf=H"pF:\3ApnkjH0T]QeFFF8jXYalso'<Nf.MIQmR=`WYBjkN:iO
%k4']mm]&o5B;SM>4MSCnQg/n%]?XYf?-ZSni.-9#94H(Xd1%/R<OZRBEPq40Q[chhgtfm<o/jWgS6VZ#Si&0NI&nuG!l/UoV^3!f
%0.pq9:FQrg:1k'UI<!&j.'odZh`&Q=V@5S88uX4[!54\'PheEfT6)^.S/l`#8'cbLU<G;C%jVtQ8K=P4G/jOEU7=ED>a.7>=`RB*
%>a4.*[!@hF.->`8M_[q^m/?1UjJ)#*F^`S>*/[15kd`+Jk$m5WqGYX-3ION1.!%Fj.(fI%UGRan;_r2An"DU^3L>L1Si81;CRL$s
%6ejYkM0RORf]<o3.K%'/rp@>DM5Tq#"+,h6nbej9nN.G\T;MmRrRe&54&rBV6^_*Lg3rTs>kHa/+^"BjU=U0oFqAue:Y/aTQtqVj
%[a/^U%#]5TC5Z-)T2o0T[Dc6P[+_8)Sr-Pf7YJM16%"%:L1J:8r7[8!5m77TD05epe1TKh`Xj]UB\>kM2%uEYR$!@VSc3q96K6qV
%?!1^Q&"]Su!l$erkLmgU(FQtF[tC-iI9XnXQS6WjSmQBuWZ5S:]fA0bq0Wr?`SfET:%]1:6@&G4BIJ(KkFf%Uba\uC^ef4(X!\1-
%EddZXC?t(:?mp@&L2rX.oUn`']2<o*o;QS--KP2E<r)b[c%"%=qe?%be`5/hm-Y'u+2jLo1Q@tA;;lG4dG7NGmOY+&K1Y'pf:Cf/
%)ZMusa1cKkHUj.j^8?;DO?Z#"BK$YJ=0LLd^!6<@0AgWq;nl5&m8=NY/%n#8/MP(<o])G^oA^<>bRB9gO5",9UH\GnRa*_cYUu,S
%e-EJ?o<>?hUHY&4d8^El3mKYUp\ntk\N[cRp%n#ec;B(qBB1:g00Y4[ndkm8pRL!7dVl,W>N3Cjr:dq=*6!DO!'Ic0CO(d:*^]f!
%8TJ5jn_`^S>2m;X1/U^BGDZ@f3rVe<&J8F*Hof`>>[kEol3c6da4:mp?"1N@bkKt;kmXWbr8l+GDpP"\?"T;_Em>S-qo-j^m^X;"
%S!cP1USi=dX'a.)0!9Z;]5&5G5J4SL%t&a3=OA#"S,Qf.<l5>GrpKVo^5'q'\+/L*Y5@qkUt+l2KFXj34^'sYMhc-=O?Lll^!O_N
%*jWaP[Wom5RVmidHh_J6Z04FNiVMp-o$_D$Spd%<iq"7p55jaDlJh0me*F=VT3bfq>],O:0E/:`5jlkcAtE;h^WlC0%A)D/+e30:
%l/[?>?ba5+`m6Tt?KK9L]4jGnV^(1][)l'a;a-P+`cG-q#J'3-14$gO#I?B3p=f?3p<D9)2G1+oX`@f>klES@SbDt&NnF#sm.Ig8
%YPlp7hdgNr?6/B^Z8c/+a33Ie=WB)Qj(35C/<6(9nT*ft$TEu'?IT?Ms3'DHg#F%8icr"pj(3H2j6>Y#m#;,3)nk_\Zj5i%GPJlG
%83F;;g*_Y6n`VU#?#$7S#+Lt^&?p[Zlpi/k*Gf0p@)fp59ft;qMtr3PqgU4^=epn4o:)pYcF<Z)Qc!g((#![fm`.HVqr.;aOI51r
%WP(M4ms,"AcGj.n\HRQKBd#1d@pTuDV$29]=3L5[K2_EeX-4?$5;+9>:TZ*r#3s]9Q+o7)_82JEcQJ*mYt^"6&t/a0];7B_%l;j=
%q9XS/O1j.O="dpp4hJOJ\3>6o;^EO>T)Xt%r&rm;hIh#(k%.rXB'']C+GVa%b73hMDJ7$Is)Ri@I<@G$F/V:4WtXr3'4u?!NX<*\
%$Yiuqk1EKl1nf@?=+B8nCnI?G?d),heE;#Da&p-CT9p]F/q/`]]$hY3+!WoL5K93W/:NPk^$-TlSmVC4M]ZHdAnLRC/:NN[nRMJ\
%Y+)qph42\];gRa'ZdT.SIG%=uj3\9?Omc*&T)JK]m(_GK?(T=r3%*&@Wc+dkS-Vmti9'UdlRu%P:4AX36p5pB=.OY_I?HhRiesl/
%3@,1+]/r)TS)4gJ_)F=92lGE#D'O60T)7:<`N8;B4h]0'lD^i_V[PC=k:h.+IJ%oH[DKt-f97(g-9#"I[)pkdHLW9.Oqt9tXW:T\
%Ore2/(9jT=(Yp-_--`u.4=F7Ym[QN9JIQoVa3WZ"?%;nB,*2D*3X'/!U&0</?9h;(mE;GID3qEZq\=B.Nm]qZN$jn[25`6WT'eJ6
%$VReW*dHT*D4SR9p?E*Ln$^dHs,K37bu+(SSaeXaWh5A7IR\5#_0P'Zm^a/b^A'p1oYp:I5!ADIgcW!KguapWgiAlgDKG\p'j>Kr
%bAD.-c/!]8RrOL7qR=!Q3!@E9DBCKP1FDDF/os[#eT.58=2hCKkEbGhEh1t2lWe[4f=?se'=cE6lbmh?gP7<8XR1'g=1\FA\pEna
%ouW`qj/Lr!Sf4rRN(_IuaKYQRl-'5*"/19-G[-(/+*58`3'^`**Hpl8.'JC,aOlJ2n0/fl6:LgUhd;nDrqP_M6s";%:=!j-q:Ad+
%lF/^e>g.1$l>sR@G;C,'%qZp.m*DAAUH`8I*TSiA3tY9YeG5Y^3=f_n%S!M4-.(\YVkr.>4C=]N;*MV',bOh$>Jg"K]390[)5t80
%4dfmDN1Sm+YC:pX$]3e.l-;N-m0jqWDYeukol!;HakM$k02G?hk"a\+n`9iLX1C$TTCu[<V>6(^:YanLB-7\T?0&cFF:SnRh:WCu
%AuLoWs#GT-DH;.^5.R`n:eC*UPNT3pVpE\',<VS7?2ikoIL)4SF$0X:d[FAkK>fUuTru'F6gqin#;[tEV;q<[,H^uVBDn<>ka/LO
%dm)_p?(TlQKDeR]UM)B>*mlB>Cn_17ODf4O+1+me:Ytk05@^$BjZW@r5IqH634n'lC1\IH5L.q95ONL*bj!$R\GiE;I_Yca%30!0
%#Ii<oJfhHb1[9VGoi^j-nlt;SEVKK<4LmYjH1h#M(@At)SW=TM2d`,GDnSIiLZ9F+[,l8^O*TCP_f<sam/,a$?Vg(f\TlF>n8^GT
%s-ii@SrJNh6!hV:pXSJQ*$p(ooC8bdEKD^1Bi/h6AU)liEDm?&fXu1;/\ja^0[YMhV,a;jg%;0l\U+PVa#T>b*]sRb\G&MF?h1DX
%hNGj#Lt_h#8T&DM%*Euui,3IV(K]4<]rbfAXX9X*_=pnP4s%H_DO5_6i%ZuNIL728+4%GIm6+(]j*@&9d[`%@UO(Qumf!:mRCJ$7
%p*?!Y!<c&e>_3t_$(.R(4W5O;P6dBm^te:i8hb>=d1=Zs*_t4DC;N?m70da-5G`uIC[KlCB@hVs^O@G@c63CGm:qBVs5rD>MmIo*
%l[Km;]rTiK7m&@>f:Ur+Spl*LC?2=!261;V*R6G;b@*"ZZRE.I>%P`99b-+s#:739]0<cQqf311_B,lUqcPe'Dku4$(1_E4lsdrU
%2!rkW?<eSAAqqgRT3Y\Q2k9VJY=jc7j.od@dML]&"R08Wq_uuOpSZ1NPmiMT!7?!t>[;fD>9V#5a!s;;qr.Hnpb*_<nAUmF%fc'g
%?XA53FcjEb:\iPeX64+KDuT67Zhj%+&";%X5C`IE]CLHrl:_%Vao;,0(]<\#j?NTEQMnHOc0DL5s87Akl:(^F[pOX[_8gEV_GP?i
%XA[ZIUX6Sqoc!C7glZHd)p#A4[RX(6md*g*pb3D*NG4Ck4F,'bH?oLRpU498RdD#39!e10H6HJuq9;*XDZ"JGlcfomUMm+%i<RtH
%LL&Xg%aR?:i:qX-T`"!J'iraQJ%rpl^KCGRIIcA[gNG*:O8b439CnXT>r>,),hlI4>TNX;nX[s[r:b3&>\B+Fb!U]oIpDuI?dNpZ
%ImIh16=\g93)@LdI)5>-VtY[LMY$GA9mi-4_$'\P1s*`P4sEIF7.?o7')p7sVSsYJFSOY)Dbij/cB2u/XCGpIDpgm'K:(q[RlHOq
%!In,S4OjK$;WCi2<qFse[FN*DGCp[*ahP1(Nuj<>XuBR=PA_;ZlhAt27ibeUL"sJ91!Q=d8')61$&^c"W>ioi\bC$e@i`V,aX=NL
%rj]*]H\9R`$#UTW1`Y`W2\V`&59/L*ZW4Ln<GqbfCU:p]D&A%@>K5hd([V1uqhH9k?$=N&00]:VY!2^"lJ)?k/>Lem>ZDS(^`Rig
%kH&I'2-Od;A]F/Zj=eF&`hWHmM-\"([-Ut?jJ"9O?>)g>5im91gehB_*1X[]o$W2[924=$]%YS'UG_#OfJImi$S05IGt9RVI7IF$
%Z?^LXQB#FDKlq*b,jf2\'_@sDW'?/BBABmT:'^[FN?951\Me<]T;SI_RH<Z][A"4Bep'(V);A\ueb+bqKt'\\7fS7F@nb>hkdgWW
%,F;WU.aY$AR5G^m@TKaN?>t0!#&!L#6uunPc!Or^p:&S/bl>c1lCbC`hr^bsa3Y'`^X2.4l\sa!e$dMNN*+*q:Ss&!FaX&BY<AKU
%>+^hdi37iT,G!$T#d:?[r9kK8jsZ4LkOneXq&oF4^OD"#ipm,cYKI<o[8#0LOf(B$&b<"m>,Q^-3")9io@M#R@>t"aEdTLCYr8Z$
%B@Hh0*Ta-><KqMGTks<)a!qEpD4nbpZFX>2bin#!lbe!^7H5a^0$aAI[2>pVM+:;4qJ:$[1YLEnX#at1TsG=]Sf=Dq*I1BVKY>ms
%,Lh(KOL9W54A[.W`i_30j68.r>>FrUQu1%.N@in\]Y$t1A@K:co,Cul:ESb0-20G"+ki]UF\Q0nm?-KCbi=npJbAd@hrSo?cPb>Y
%m[D8ojC8IdMjo3cifS4dbeNQ9]Xao'p&1KN4eDW/]]bi<f/D8h[MuF=J,(^(8oDZ#Y(-8M;=bb#m-5:/hfkD?<c;?9]K'30k3_/h
%GRUJ@G?`B&4#(J/SK_iR#57J?Z<WQ6>Z^a&N7fnJF1djo4JPa?=>&9ub5Vpa2`QNWP=6nb1s\Nq^OH*"hKRY+UG*c,37/nniu8&R
%c&iI<m(9@>o<,lj\sPFGQg&AYC2;QEm(9ph4"Fok517-rj3m$fJV00`X%-R+?ue?JT#k.f-79=.lcj0,m!29o3#1^`gp6HRDEO*l
%RFlN>2>MXkYcQR`s#\nX(@!@rlK6YT\Jl]]"ZS/"c6)7=!Tp^MaDch==lQlr=R6V]#.'D.kRBbQdW!i!-9pA`g`\6KpO);sbdW<X
%ZMBIs>G#9\r7[iba6(H=FE\cZZLZ0oJ8o#@V4d/Arugmq'7&.?`VbqmIttZk6[@S7AiUZ-s5"4Bq>:`G,lad[Krf!e[O97q=_.sg
%?^Kb%X1^u^]#gGH7e1VL_]qH3!jaY[WT.hiEI:K=Mr/&s2_3I?5/s_7BtH@o:)k@*G'a#Qp"*8(IHF7(Y'4%k&,<<d9$<^#K*@[H
%Tl"H5*>a4Ha%nlnZRqeFWj[<)aej2pVRGjWan<QkdCKVd)gAgk]"@$_h;$:f3B(J%hsd1W*I>LeIEW!RoHfJLXeT\#i54\Jj3caF
%gYoXP0"IJ5UNS9!Fi:@F3PN)9T`#G93reBr`E-^(0@*C3`%1Pr:G-!ZXP4;UgBtVCik@Ia\N.:9r;,c8o=$[1*07iLVdOsh>ks'Q
%1Qb?#PHW;-/u8=Ks#b%jqrZmCTXFA6s5j+T`W&*u7@URJ0*G&>p!)Dpc(K^^Th>N!s75UUKmJ+7*!c;YO7gaY'NO\tDFnstDXoI[
%p"eBoe&A`)\/#n4io4/>ICU,=24M/mj!NAegu;Lr#NT(\>?m*2G]Q!/CU*i_?&Pi]pi*'U?e8bSk?88rfAaJN]>:nbjgF)O9Z=D!
%FhKo)CU&`2cF%>p\/&Y*NEqHZ[r^/qlgEe:ChL?q8&P+HY/T\'9C"2o(TWHI%U=qWiIc-Vl)4/)VV\Wr2L-'N^\2p?C["rcq,oh<
%&*R/TRllUKnLQ;a`J=.<EgKJG+?<SZT"fYYE-]IhSY3&1J(/UQkUElZ]Snt5KBFE(H?,e9%QlgI*Z+LNjkGuF+S'J1ejMO4#+g[K
%pV^p2k<DDmG'uHc]Z[c3[CSEB@h>i#M0g>B%Ml61RC>nqqm'+9(lUc(ecdr/9K(R8\4f&#&i;)!)K2q_Ea"u.@]NuGS&!qEoq1u<
%e#R3KGQiVOl/Vhcq)kfa1iH'f&'DTS6mLan23)S_\D>L7l!P=9<fY2`Z^!&@$M*8:b.Cb[:s1ScUX24)OGA2GE'O\(B.DFDcA+`<
%\NQ5@@J*p?8Z:DRjD>]X),,>:o>VST?;3]r[&ahO#ZEW*<PN,JXD<tWSF*JE=?7EHWiJ7,dLu^uQ9E@eV7!_cH/S7]"aN$*!Y><m
%Xn)B#S]jUB)M9^S]kN'(]?pBE%@B3pA"-!'gh45Wa>E(d1$ME,M+-7r0#hA+6f*\[csYY9ec'QTD4N=94tfJ'a;]$7\B.74LV`-M
%JSXk"a<bt7HWd>RG[NiQ7sR:Tncs#W3%H&6>$G7oo3+>l]4LDOS!WbLOo7?@o?]^\$$0*nFT\b0=%aP.PHFFlId+]?4P[EelgqUn
%Ft1e[X"#?d<JdRCE[)m\?b3_fo:MaQ?/JC1mptHG96=2n$dVYjZHXM(*?L0JkcT<_LIT81MT7=gHR:Y^K8_JK/?:C'"[;CJhRpo;
%1rol7EPi?AR(&'?H#N;eWV/0O9<s*Wb_4H>Q](:SRlE7,Wi<)3N9n^t%Pp3RZQpmN`%a*VKe/"39B9A_>>X.@n*p,m/\7tn+@PFr
%DG;#-Q4Veo>tG4Q[jq+SH.tck8g5c=-c40):s?>Em6m>#/ZK%jT[@D#l]#)2=a<"j@QG<*ULiO%73,JM"fM<iY1&;%YbJa;[+e@<
%,?e=$B-)#q-UD&q7<_nb>qm:+N@PL"Y#C>;MR*:u36M-)D1r)Y['&f;PbTc?hM'M"NV3nN@YmcXRsPH;r,0Cc2ePd*@Ymi2d>9/1
%nb\2=peB.mYUMUF[R;L[!C\Bkk3.Ka*[NiZG8Hh&ip4?*3g!%%+Pmm)E&BZg2ao+V^@lgFCT#R:n2SgP[el?;$*tp=iAX1QBV+WM
%3g&hDSVV?^'B<MKnE<7k@=iSoR)$-f9T],7";`!:"R_TF"QP=OShPfd`;SS?4SugN:\Yj#E+Xr&4@jiDCl2#A[)=>Xpr('_53!Pi
%Wm.q#<me!t.'B]/90G+^qpaZ*O0'#3GYN)6c(a"Q:RXW(S#.n*gU&<R",&m4RkLBic%I.Z3BfYA#IAJCr)F'Kp=I:`j;je53&7`t
%fDJbHghaVCKrgMqZ?9'ZGE.@d>e.hS1_@\PUH@0S@\Ra,YP)b_*\J0tH]-)&Zgq\9OiTsL,u))q4tdq]^-kB[#?s&oD;pgA+(\SH
%9SLA;lc$DM9e^-m2@*g."ah"G=-!:MQp'Jk%OQs+YH0^q@Y"qt&[WaSQV^0[6^)E+Pl,Xoqf_DK?dG1VVU!o&dQD]>YBl[CoIt)T
%L]7g&ED@.nZVBj^;dK$@L8*T%E6(KRr8R"9T@`Z(h(A6:Z+.3&p@A7;l4gkf+kl,h2P3BH4<a3\LT=\OZVeq>*gCZ8&Hp=`nh8i4
%..QIX3p1"`3*$"X[-bK'ca^XFCmdK9jL`gJq9,Cm#>bIW@`6A99P,rI-FO;O*tA#\E#&uHm]KTOmqT8S>?]LlRnT!MVL>uPs#<or
%B!C`Y9%R-U4I,*ibDJD4isg,^H(%Z(CN>=PY$Gi"`/uf]qon4lF6$Q/F8SJ8*ILr]E6*?m:8b1Ci0RQ(%iD7hOAq8V4e,m?7GA9)
%%CBD@`)WDR<O%,E[\AS+YMIs5M"Ab"[MWZQiM).7jtrc\R]VH,YD]&\!W>ta(SQa#iT/I6Gs9bNkTQGIU!WrpG5?();<p)ZJ+6$F
%.\sIE-%npmY;=sj-Kai\;Qu?&mb@")3"N$KZ>GfX(!HK4mCeO[Nr7hATQZ2Rb3-+5AcMmMU5o.Kf+,ZQPK%Ck8Mts_#g*cG5m6;M
%'Ca"+<X?Z^$)-"^+V\iRLJXMq&4-sRE"YJd/PJM[o'doXinT8"8o8!;#\EW;^$p#/."3""nXDin^Kgu]gW^=p3oHch7+gFlolagN
%V>.#;+dD5AX)N+c`NFtmUtKGfV0p0a#c/e#$tC\)(1(]`HORmJbqTo>2TIKsTal]ub;To@-s.jd@OUOMZQH*Q(lDUWTkLd](eR"o
%DZ,3c0pK(cZGRI/jUWG#M46"X,j[Lin7_2WBL^-P<8g]kH]o;(h%W5]Rq!ji6OZE=:X^FYg)NN>m<U@?dLWl1DNE$g*ht;jJgaj3
%kf,$nV@jEQS$1)T!s_\d"uG$M.$eR$_tQH]TYV'5HFLmjYZ_l2C"kh+ErWTic[DjI:dPVb4F2F20q0C99f_E,0pGXI."_kfDKCMe
%FZ"p%=*TOYR(.13g$Hj]"ZU\e#.q^:S):V6L9dMk_`)a+&B3@3&7n\td;95b[&]02q042,@90L!g/-b5,n)Q2n4:#ta5$49o`C1+
%Dk.Se\8[6)PdYS$""7oWNWU\Urf%".<L$;\.&o2G!>NcbSchm$@0!,Wn6f4D>2\oimQ(JIgnsj<>*#:d-+>1L&i[d*VF$i2#EGF`
%:*UY/jEF*L]H>'fP"%42&@TSS\e76T,NV)GH9Cf$&jL).M4\VRh;'`5E_D5o>c>W#(e.2R\[99$`?:LjP-(6lQ]Kk2,Hne#^+lZ0
%q^&=NW1'!r7Ve464QFrKfaM1to'0)-CF;<PouBCL2-.AlG;aYmCNJjNNSQucIa%06N<>]>blaK)N<<><fd;48!G4L6L&o<"*K8(t
%Z$]qs+5lhSNc/cPb5cIo?2T$CFjglfaF2l$;u-$IS4Cb!hVBe+[A/3![9(!niNu=_Y4B[bC-122doUH+c,BjsblsMZ:6TTXW)IHt
%n&ZIClK[MHald"$\X.^3NSgu$F$J?*mKL[X!O?$^X;<#F"itujZ@5F1g^B5:P0X$\UiXl-jd+\1T>\1\VGH`5j>#kCJ]f,W;[@gB
%S[C9jW16d8c8S%HKRDSs87K#u*=/8P:Ke0Mpi,[RZ,r"Fl&br3j_\j9:e87;+#0iOR:<#T]a[2.Q8aG>J^;,bjft')^Dhu!8[qTN
%fXkW:YVj)^NP']rRHR"P\4<p'N?)'ugNl@drN9K!XC`$@ACl3)bg>eEW/8m@oljDEs'_pYij9rVVt0b`Y$;K@0+!E<(M`70GbmOO
%jnX1o;P,>a7V]<C?!Nu3f=dR7(r\(,AI%iKX3[4K"]1o98sQ:ip00A+<PtKC[,<fSZRa2Lp:%`OqD+h.mFUA(8"K5%:)X/185h]>
%Q3&ch\tn4kg1HEUWYpQ%!DTrI1-%&.^Mch`ZPd<Ha0m_O-&T,!N$+NFPDq==j)J'd8!?nlDbN'HH\\UY!ro$9;0?_#$*2_(DB_G!
%Wa[FME[!2[g`CmE850OU>6gcsKVtY:0bF1mn8Q7mD9]$4JT15j6[ALa6*#FS2N5N;E0LRpij)3`:ZS9V16a"8=cd!riJeT+V_eq6
%N>ZVLNh'E5``^\CJ:l;hMa8#m2O_g*]J3o)r_na*F'@'tOaFn(bH/M"'GOWE2Oi$:mhFhoph`G3Fd%Uo44hZrc?/F%VH[mWb*n1B
%DB@mh+1;:M@as-#0>.I9fSt&1m]n!05F[#,p$J^@fO59Z2o@?g$AS^EOS>Nr/T0Y'2)sQVT:FIZ]70?^Z>0]#lX^@6?P_3h2EZ%=
%%-NQlPjtn\<V3;UGK-L.<"&>eG3,2nJW/k](WQ4_L$AZb[HXq%L$;m"6J^2InZC'8$/jS2.[](sq/rW9bg[.uP\],/h4XPD'7!V4
%.JCs->1'l%AkuJ=M,83eFA]gohUmDK=jbs'V/2N4q4u&/h[$mI+irDqfn5c1X/=7jlj7W)RH^u2rThnCfGM#NHG*^@pe4q0@q"dd
%HMOZ;7*?3r[LUjSEJ#:VV-..PjT@r(aCk1OB>rXWk08\r"m$<k@n1COla-;f.dTAnpIm[9aRcAN=.HQ4>:JI63&H$55i\+bY^9m^
%D+ohQR#g:%iui90.MkagK1^,51oXJ:-uVa9BPk,b?SQ+Nj9DueL!(mE?!`jj^U?UlgVI&5KaT&*;qhcuXpJR/=NR>#-(Y?E^EK(/
%?#NDJPGckF\kn?_XBW<jK!3$fKtZ$#f58..5-a[LEH,9u2TgFb2h.SQ.c8mU)EdgC7aStN/oK=M.90,?!Xo06b/Qn>@-cpiD/8h'
%g1j[J0o3^75G8?YX1(hV7Y?I0(+m"-hs<TfqM(]VI.*`Y^1/*OiD^%q=I-!l@p6#sg)<>("Lt*GnfcEu2/A\lQT_D0js1JC*N:<o
%46-GTL2@%o)hn)hN1DHBIi94e]fbr,%^.I(eJ$?O2`S@L1o#k#rT%R<8Z^``#5>r_gos4A\(Wg/e_3Taa*B):m6Ie@VB*FVWkleY
%'73K9=@Sq-mF_idj^9;<e4-pB5oL*ZaP*WaIe^Ic9cHP8`K^_Dlt!O0h`U&-l9!Y%R))VKV)=JHO.$Nq3=7i2]b77;9,"fpq.2c_
%QJ>;]#[%3THF!F2V)u!dRdT[O"Feg_V'hTUn1-#TQ7RU]a:``fMPVn=!d@WqNHWA)1kCW$9:Im(rhTo`"RK?]#Q'f.)"qgiCO[S]
%[j=aV8J>4S"I:lq?)J!FY?KXgRQs'r[=63@$J9QT1kE(<m*dP#!c:XF8;!q=Hb]5uk$'];i*hM/DQR%+j4HY6Mg?gc>X8p2WLJ31
%H3>`R3STD'DeDi(N(\'=(XBsAV-5?S,5sMY"\5W`K=>E-^R!4,;nU5i]]J+"gr8L%W.sH[QB1KP=j(O-"O?>bQHY:!dKUO%?'uV[
%e=dpG?SX./o"L[X$_bA,[4#?s;9YVVNIHdhP]+iBY"rCV`@+A6b5T#@Q=?)T)!/!W9M7+_;N.mqUF]`K`QPW5R2.I);N11rMG`fY
%`mK(-#.C\M'f4;g8k)`c:9ERnJ9f_4LYF-^.qW+IM6n+&QnKdtKg7RCg-f(T2a7(%$*pm4PV`,m<>M;E=EIC`X+93bC6_6g(4DfD
%e9%fr5H[LEcPjq3hloQJN.gh,aW2+)X@Z'e-8o<s\l?o.r'd/Vk!oNnj6&jK6Qq*s<+q)h;/g8#"JPb,8P4&\R%f'!g)/_,b3hS;
%l&*XO=?NkVL<IVEN-Qf[.&_MZ7<`;sENR0J;OF,iQV;l(QA>&eNEFEaL7?len_GciY>(P6dL;#/ION<7WM6qI^rL_+ng09.P*BOh
%'K9+-cj*.Hc*gj+<$k`@h,(%qJ6CDMhi8c_FElDPAu'@q7\IY?`M=q$'=IO#;iQo<CK&^enu>c<,'Y8'mD*2s1`O__Ki&P.ZXC0b
%TIX9O#'Q$li7>kHqnRNF,-6([ad@8B0Jm@;O1)HBaCcG\>f6b_f8E&RSFE)r%.%/%(b)2@8jg?bp@3lo3$%,9-D9dR4]G=5C;^Q/
%33=*=`g7Cj-C@,H*J9i';MD"pkI*7-)*a&]'.l8]AZRITQlmEHbkjFn:m\9m8;,TojCW/@-<R=ljpc@bU3n07BgU?=Vt8\h8JQol
%.3F7aJ55!o<DB]$ADdL3Ip0-d22BkXZpN.0a^&4fk+)$lZ<1+/CM[1b`sa&Eo>&jD@)]@gXgk/)DD5Mt8nfS?Q3C+mG]3,cqHX,f
%XNY2;)pJue^?3]&A_#I3<E/8&ZEW_inajn*D-@7TRFLuYCCZVbGs+5GRh`7(on.'JRN,#'XE>-.f%B[IS/qep4hXA'a*0EmRq'UK
%V1+NRiVP.C%Ao^;q8C+hIpF6[ja:sbiul3Z53K?1F?sc26DK'ZBmSB!3M*jaLtWJ6U>JXIDTKo$1-M4+>9_&eHlJbGP1kcsgiW46
%c6kk;6ZHk-di$]<i[k8C$1sMhU\/qD\!:DFJ[,)Tfq*J5H;UibqKb2tE'e=*aJ)_DD)n6IJ/1+PZsXiL4Mp;FgG6e6eU#ho#*G1O
%8eGUdTu*(k>#Pu(`$'K>S5*5]6sg9RbD'*WBlU,;e#>OT_S/c#r11?,A9Jnm7HS)<peXa6?V`&-,0RJG-3s#0TY9ip[<t-.ns\db
%Q)8WqFM^/0;?TonVl\L@pmCnA'Of6r/uMYJ0FFuTFM_l^''8_9USh&A(q:fUe#>dU\0gq4)lcc+;be]\5o$ddR>AuLA?/H\Ua<2j
%ePam!lObETjjI_)_7W]jae4\Ee5=AW6eJ[Kce<\'75tX4%A7?44rOF!=m*>c9mMjYid;K=KmZlaS'&n(_[/pM$X4RkRTj[$fT$jS
%!IG*e$JF0>EnWbp]]OnEeB]q@^.rHX\g00:aQ`A:EelCDa]_\QXbUSd[VkSR9(bpgm4#sWH"bC[":KR<nD9VJEi#%8G3+)BG6MVO
%iD2J(Z9dN!?#$5X:=sKa'JGciaV4Ji[:peS%UIW@i3)_EP1c>^+tS"\ok$F/h\WkaKs"pZlWE@3(:oN[Y%+0k=Qhd]\rJkhOpbR9
%c=<"F?,nP/DP?B@dW?M=`ZogD],g#_-9IJW+3E+G=Q8`=;*0!sXIHY>0c$ChBorsH>=uPSMMJ8U-Dm4@hb$^VrOLRtVealsiO?4=
%Hu"(trn]eWqKm^%8>H!#;u-$II"HrJgY!nq[Bl[J0,+k2rhk7lmoq1Y7a3PgnOlp\Oqn#hZf6?3di^0TpHK+mid:^S3%M`>T+2to
%h@DQcB(saVB#V6k_d9S9T,#*E5@Kuq+#[O\b^Jl5XS=BNSRO6oO7%RF^T;[l,qH_(5P81L"96iQZJp6*e"!N7G'6paBG_i;r=im)
%K!K@Os4#<b5D;i2VqJ7ZG<g"jmDK%5,fMuE;LI8a'H`[;pa%Bgj'=Ds(gC_\)r)TO\URod.aM1fSghJMY2mls+o&E?R^?V2c5t-=
%lmIIa]hQ(45/]0&jS/i#n&9Z9D9!c]B8!<jjfrY[e'e(%"M/k4;kMIPM-+ukRCC8n6lo69kK8S*XDRM_T.LgM[okgs44!e'[>K[1
%%2Ko7*1iB&^A3F:Te2+HlZ1bVWIo:[q]j)^6$5nqpqlq&L\uTmN_>QjMcLM&a"*j6Uoqm2bthZ,f19(k1O;3C2C:*nH/G21F2h!?
%bHVCcK7)2JR'7aqV]Bj+bO6niX]?I$g7qn]kJpu7BIC=7nko9'hCn-iC&38pf7mYnDJf<J*TK*%8*s+/O+)g,jR]&EG"AejBQ"Qs
%^+WKUP@^0D;EH[5^@j]/f#q`2%$k[&e*iIm,-WWao'"Zb")I:BfIf(bDcb$Y&-mKb?.*?TFB<?rrcnZ,mZl*X19r5KN,T+Cjg)3^
%T;3uQZZs0G9eX0f==A`47\V<#ErPHg!@s!o_K&_fa6iB3k\R(XB55!7p+YigHugr4s79DX^:RsJB-&4Za5f]<LB_d%PO!4ioo/Fo
%hJbVGJ"b!kYW',orj*L_EFa%@C2cks6oi>taf!W;%kYO4U%ku8e-^LK6EeL@Rrm;g_%A$]aDe!cif0RUMqh+h!J]r7Goc$OjC<%B
%b@4QiO4MVJ@;\1YpLr;qm#GNU(S<ArTPi5]`TS]df5rr0%AqAdh*m!@9*\)<NS]V_6T5Q@n&6fSg5kF2Ql,/[;<.V%fmYmLJQAM=
%@U5@8;fZ'1YkCAZ,\eeN[GS%N:_1]&;V/>q(1B7JC06E*`)$o$Fnr!7nZ0?mNjcSeCl3,teZPAOXL)L8B"<+)#$cHjiaBk:H>SH4
%on0,"iR\/7_JC@@#h<aY-XZbBn_33ToM\3(Wfma?6<>aqFnph-jS>,8a4nGLoo7T1Y7_4b-;B?A]e43S@dY2(n)pTM-t@=>9g0EG
%'K4+aLiDZQBsW&tO\ILZ\B,BPhu>0ih^$?oFn+nmg$4'Zs0*X(NLF-^rCa6,DdeLq5Lim9Jq1<Qi%54Z$Nf1:J@?ZZ4f)QdJq1<5
%qtC-mDa_#q[Wot&R<i.TLheW'hLOU^-;MKAOK;#sfZK<:nbM7B"8Q5a9#fn5f(,',V/<gf]TUOi4JH_)NJ99i\WrM(7*J4H/,?Df
%JBkM#>i'53[Mi)T]=Hs+S"i^a-tF7@XE]GP:t3A,Aug]e'a'XK#b`^&n;'I]YBO<;W"'RHe$Z=S=;--@'#JE%9'+c'%]3U,[Ekrf
%)MT;Vh[*a2OQ`ds5Xf(n4KBQ_qRS4:o#8pJ_c`\4JnR539?CdT/*7!XH;*ZP_XXO(\H-D`><3Ri!mg"4C9I4q]>JTY]kg$DjoHV-
%IWV6pdF(`p1%oUR5bLiHE\Il*]Bs%!LB5A;Z@Z\sI!g.]4Gg^hc2(W/b/%[-54^p#FQc?(3$LQd]KG)k=IeuBfT]pY:C=aE;B!`u
%1H(?TfMI*fXo_\dP<pGV@(/OX"H6^sITF1u!ZOp_U8]n[k>TuUN?0Y-.fL>k4`[cOW6VA]r+T.@CY>M8VPHo!+Q@:Mo"C5aH`5JJ
%BlnX()5)mK0e<WuKZW0O0hD)g69,00o7l,mE$V,sToGJno'tNfb9"NJ:!]=7KQT*LSMZ?:SLU8-d/\a)SVdI4eAhg1Ube-+%A;tP
%[$bnh`;8'o@nE6d,OIHuOK(A8=WIb!qt,e-cLuiA]Yd/Yj"uu.pcsX^7U)3nPlmh@G(J^*KYh?i4,&J_73./bNk;lT&-t3%mQ-:b
%^`;Tr:!j8TB,e13[E@X&N*m\"_XXN5jJh-h!i/LO$kIlY2=%%2X:hDJf%0b^I#E"C?++FB()\Mh,6<ZpW7P22QO87T$""l`Y+*MP
%j&tJO!&mKL\=9L\4>`4/M:nnlO>CLkJEDWF9'U@1W[b!M.Ocl(X2&)9C7g"pj,%aGD7ppfQ(?H(ep/-iI'j.Mk,)">nJlGh-"=5L
%N!9lhk>sl$!M^rKZil>RJC3g9@,s6]LPAM(UTc%P'FlO!j>I7%>k]YcU%'7^\`5e]meFT9gfn+^)\I/#h6/@>2-U,OIT(57,Dj#a
%%Sc[((ra#dU[^$%Geb_n^s*Xr0*Z<]2^j6H!B:r5)Tstn/_-OGkE^X\)$Gods5)ehmq';UfCI9;7f3lRHI%CEfG$&Laj1SS=s?GN
%-"g,XH5oG6HMJgq"E/@fQG3eLE$$jX&&a<0@ReKV1hpZdKtd7DZ[tZ;X-dL%;s,U_&i:L0H(&0'a.sV0ZM@aA2a->VhU5/320XF`
%EuHhiES\s%L5eOS)kZl@lf);-:5dXHi]/l.P`LGPOB.n.Gpc,A!>o&2q0QO+1,0%)L`H4k@n%`M&3#):pE0Mn7(e;I+-D:jV1f[m
%HT[i.#d%mh-u0ES%sd+`b2ujcVo\RDRY\tlDjAegEQ*ACe:.2fXfqNrit7dBj.ESg`"VU[c?4fcK`$I_pnS9&^<Vfn#+M6%ES&[m
%T%i]'Sa@3mrd(<e6diEm3i0*2^R%aoqf)S(os2lGLHWj?3`G@S\fURl<Q^KQNpYC[r9N83Hr*nsl+!D[ZE8HYk*'ToN2B=_LYq'*
%.8:,0'Z-]/0hM5EKFMc@,k?$44B2lP[*okCceU!7,W9eqNSYG62*/^KPnr(A^De`9\p*`8OdEO<oCLffW:+;q"QVe,A`GE_aDm%2
%_L.S9QN,KiZIL=4[eQU6Il%<0J,eqpX37]LcS'5-a++#lb3>cErl^'=I.;skQK6r;\p0SAqoeI..t>?i++3_6MlZ<m<l`h\hS*1l
%p#P])LU6<sQe*n9Y5`Im5Ha'ST:K4lS7a/Ik10:,55MbDgJ:jfp#bCMoeilhT<(8HFa\.;r/84HDu7ZOiNRVQD<,(%q;UJtc6)uO
%lJ:^*[==K#hS(I(f4k0R1B6=`kkBRTGB%\q(WtFc:]@RZdNQla0HSU8S=JL%2n(Aj/L-%]*mP2oNk+0LaoD+UF*%62]]]1Jo^sj:
%BDD&[&RQUSEi_!@G?>$_XlKFEk*n:_fse/,$7u5G^8(0]bGLJQbDQ+bRpRenhL>79-i`r3lK:h>%3#)<j,9,M+'Cmp^\-.%+',"]
%Oj,t$Zqim/Wr/d$qWK<QeFE%ko8C93q!2Rr:<kLonq`,%+Ndo\q;^V0I<1%-hYskAPIK_Q_cL,L^3FjNZgIRiI93%gF`Mo:m@A;^
%Fo'D<-^m,0nFM]q&+V_CG'%br(#C;nSb_6N1;4iI=<FS>rcWa3_1/n0qVo]aDf2_]IZt]fT!!@5Y&:s;42&d_r<<0XaH=%0kk"ED
%#5/SBq+G$\?_>$U58\9oeQmV#A@VV>T<:B+&'Rak9mP3#QTqDp:d%d>I!q;fOdFANY0+N$j4"06&&2EMald;Tc7WJ:rUP",$i\nq
%T3S#;>*'69Gj)HW1[m9hE>P-5kuuh%rZUb<KA.QJ"6"Z%C#^;LrG5]Z2a:cbkns5e"Fc?A#X8&HO6rjG]_Xf1Hl0V?1uA#o]JD9(
%Dr4fir$$XH1-X_>Q[pXX\i*UefD=MZ6Wnk$DYqlt(Y*95IAZo"p`d1la54@LD19>;qDl_XosA/?2hori,M]c6rSqhbM/K1p]5mA2
%[q/.be0`+uA*fBV!=j6'][YTZ,OX@Jl[3Xjrc$V\$m=naY8+Tn[NAIOIeiQrgTqidA$=GuV#2J:D7`gg2:/DAgLn<g<W;jSr&))Y
%2VEJ)<;G(f[l8f`alR^AYKNCopXfKOFV<?anO]r77P4U\gFgXH6Ag\5IossUbSf=:-CXmaZkdi9YN^Q0-2d`/fq3^S]DV6=$X'!5
%\6k^!b::E)=FtM&g'o[dHuG+mr-/TS(4;F#dB2<3gQg/=$ffVNLA=3IiuZLW#daF.TXNcEc>`[-'DreRrf9%hq)<g"kLo)]I#RtJ
%S(QZjGk]+tpK(GRrT0OIFa*aA(R9=ubP/YSr$jYN6gn,5HcMF0nqUsSp3sUQ*,N7e[sIXPg\Y&%iSSMqnr;-ejMBtCF;D9dbu*)d
%E^YZ?.)h"Ld7p=[7i7*?Tsjg,Mi2e_cS&)PfNiq!hsX>6=(s6Mg;QRoh'&'a:%%3V1IrSMeiL*7<l("d<9^.H\Vj1np%!"<EcGGk
%ZM/Rb[]Ob>[6,VJ'.YS0elr4rTT6uU?!`@^I$>B@qf9MBJ3PV<f\`$i?d3`0/m<XB^E0*[`YcJ#?[qMPUSp1P2/c_F<djTBpVB_Z
%qaIgc@dfuqXFG&)qa$7#CDJ#bYP%bi/_be?Y)Y0lSZTUcK2&VS5+ga%qW>GWZl,'Trf??oQnN<t)*_keGD:TB.>"OCh=NOL16#&+
%J#L!6%L9q]`4BG9V!AHZ.iMC^nuT)CT]Y\k'"J)(6:d%%_r@9/Y_;3Q8s0+&p>0SsFX0Nm^!F#crrX^m;kf?[+;9j5QhQ`RZk=ZG
%d8Y>?_u99J-:*6h]1uGRXdO<Hoi@9m[#s;l'#:Or_`3hnOGOT:.mf#u?$p;7QhYP!Qf(7,Nos8q:!maE)'QFWNrd'eSbNuRLO^LK
%ItJ7jiVkLHM"VSZ8lGOmJ.D\/".^gP<oto#Qi8HC'HfgDQ0A"$%-RX[/:-#N,]I$tfiI$;!*[XBF,WB`L7nO0jRaOMOP9_u4K/9O
%K])fA--Ldg'VtVUC#M9D$\6%m@ANDM64&.B6Af,l/,u12P5jh`Ic_F&!5(:)o^BX,iG$!YBoF#uj3E]SiMe_f9qPe+\c-0urmO#g
%TUb$JUf2bZ%s/=6f;aLAU&BA0mAS[9pA7kHaAM3JXF0^gI)YkuNj*Ku#@_WLLO]6R;>E"Ac!ENaqpjWf5BYSMn'd7c:A@"9$W[]#
%LK^6bVB[J=b&@\\i?O\g]lNX?90qWLf_VW%B])6.9a;u0l\u)hCV&3$<a3J-Y4+!7%:&.LrBK*'Y^P[.ii'ENg#Q>sK4S=K.XMN1
%a.UAT^!snsS@)FaXbWq`[GNW$<EoF]Y_u=!5,8u:6j%TjimYq\AC5fB]Y6hKLo^%0A,$+0krXL@F".^Y;:gJ>7lJt85E]>og^tGV
%I)H45?#%>785&Pq*A%dRI@/0t=%C]6f%Bp5%Q]9Z_"d9)br+b%^pXT@U\9,9?1@CNGsK3Vi]sd%_j-5m#dDQ2h\mFF]1^kh$ObFj
%<)6Y=n2LXW0_!,U,XTlG7ml8SnVKXfVA3:1m<C8Z\=T!O;*:5dce\jZ&H*Ns=15@'jXOjr(Y=EM:9V5-BS#r%+3>b[;L#nn%%V!^
%iI;Gg!]]+Z31*,#fn;P9FQ/mi>pia7FICWAK/e75ROp^`-0QVM1HlQs$oj,>5U[s(hmOM2lHke*&-o/>>^o:%NeMiQEI#\:0t:,i
%fq8jtDZV@';53,"!ON1>7PZ14QnFp5oLZ6#B>d9^_$@mlfpW/9d8S]A1iD5e8r]/KK<]*4%\A=lSHM,?cm&Uu*K/JQVr6!W19'L5
%;Ij*:o[!uIAjFob)pptd\g',L-WBhO^S5P.(*A;;Nc_d.VJJ&Om0r_<6te+^(.G=jo7fOP8nfu8;)g'GJPmR+ViZ[fX%/o/f>O9k
%h4EZ'i?MHai,o>B6&:R,EgVN"D,QC]bgVSBh![k3/8&LN3lh=F>;W],HlN`7di4u&AA35s.)_sOV3[+%@`8d;//(:cg-dHC,:LJ$
%%@3o"A;BmC"KNd;%L4DhUf2?m+FOkqGUX@t&%KJ7@2Zrt`"XUon.NfuK(6Zj`*N/b1L-F<OU-M*ON>'@B-]i!6:MS7?jd@Q((LTd
%3'(6`Vl0NV3-FJ<-#AlNpoIf`NCg'6qRLuS6]TWHS/0D+j(s\3P#b9/=t#/M%VVY*2YB')UPZdR_-h&JCUeRQ,[195MB4VX$^Rr)
%ddo;4g1*tr`[7m1-t?e<:-U:#I;O8ni?a"7!l[9$*%["&qAMI,Gc3Q;3Z';8l;="^`_tR*cc>:^7U#&,DNp3SnA@f3q*`XP0h2Lh
%^?:XjGMlG76hjDa$?j:;=JS?Qi`WuTk)+515h)5(T77'0Y!XtpECc>*i3C[MPm&QY"PCj@65ll75R#eMC(=bUW]<1T0/PAs<Ii,2
%kX!D7eeTtN?E9r_fL&5D:.VZ%2rf4o@cD4cL9RZp$ZJ(E(c3k!F=eY,64W,W0\G^4n7eR'!(=>Sph1pgD;dN,qL![\'a[DCa>]/R
%5%X6AYQVfP:n0Zc=Wt*ZdTW4^%BLgVT"3R[Ba,(RJLhenN1e'!Pa<D(Cnl<rPS`SeOL2BCU%l@6A%ABO6!aAN8_qoX6j0I!%%W6!
%B8<ie(-or/JHO@hk8H301PHGcN1==uk-0Na$=haZ<%s>&.!Du+Lc;`$O!#]ABYjG<4lMJs-%cAZJE\U#fk+X/Yt^BB?o=.+,g1TZ
%_H(p&Yl?6Z3So!sR!c/:N>1*/$lH/*.^DMAdr:q&)B8B`cilpV+`c3e[[sK`%f!1e&+ui<-4Cjn+8I[n&lGHY1_&(W`!5]Qkpb^d
%Z9'm,R?!GO62:BVLHnbsiSc;[ej?B?q2S2)YA@p:4A\q[i,Lo-8pc6N/EU;IHD0&:;)Yp/M2N[8FA'IC/4i7jnj71^:OTS5l$g"B
%pE.V`R^`BXCE8RK^=G^M/r1?"P?\J<`5(:;&-e]a^G3]bIo4FKU]D=sJpZ.5'6qD*()Y2qU4^Furt(,@8VE5(!e3`<"lb2O!FRPr
%lF(I9(1A>ra?3>;J)cF&[GS#(9DP@e^uAd\'A-A:em?6Nah&)"R$q"ll$bc.!'k^b"K-bZOaI6+M9kT7T4%FITGG]o%?9omrf6mi
%cgaR2JP<A.r_nuD3=.oPdJFGAASmR!Jtstg*Y__"+HblfMf]Xp)<M#2@Dqd4rsrBj1*lA"JbXG2d\*JZ^]QZ"CWV$U;,V:>E3%@g
%8O<WjYXt$,3oJDJJ?d%M#k-]1ZC?DU+0&1Z05!g-3maWWA=fGI`JP?<-W8;.YE806cZ/`!MD<F)n/U\+Jd!3l8(!l9%-Pr"V.d'h
%l]6b24t29^oNoa+5!I8*r3kM'=;9*SJ,",^n[FG7;#_'W.<iDkIn'.324FL-\_TdG4*t;;<9_="TN<eq:W5U1V>BOm^YL%uU\Hp[
%T]jkWb=^X)llJ2fMr!sqgkY(:R:UcP-%kW%]+!`-qUo>m8<<3I!;tolZ.LH*0),)Mg6Lq>5HdIes4(qmTYY*Bhs],hY_h:0H:rdP
%id^8JJ'fg@G3.n5UXH9QhE>L*p_j,(7unLWSSn*AIOfSg/"m=3E809-(e$6?nV>s;%C*>kGf!i6BY!WI$!"*NX84>KC:)0fe]KP=
%.;6<^\(G)fhQ"AC`NO(jB]c\U5G6j1_FDGfs%9$\pQ6Z68'8$/U5k;er$BY`Q';4ISIke5:g!_af>Rg"rHf)<m^#%>p"Ra+Jb],'
%P3?qiLq,IoTtlGu:9"76HijcQ]<17G(G#5ps83h_p\t4bhS[Aks0"G0WS@XPM<4llQeQtlRRaCWI.0GN^P2T/'Y_K/q0@VmqDG#H
%RqtaVqi&ACrc)/Ws3e?)s-mgt](El!+*[D(HA1eYrk(&9no(eFiKHmJgfLK2#=AUlmDEf^r7YN3il=fD)k2G4j_9(g/Q^D'qY0_<
%.R;Va/_8=Np59Zi[f1ltq#C%s@MKP3q'DI;[H?m9qpe;ed#=JoHgShg'IsUt8o4qJ)9-4&GT(\fb&b>OWcfUWh(%:/%s`W@*So6%
%p*9IbhK.bRf]uVNofoD5.5[+M@U!>J%L;sXT`7q<iJ_*Jn6plp`R`M2pf*4m[6'"9^cA%"c]":'=mWg+CJhoG3lO_L\d)0!gPr?:
%%Jpn[omeoB+@I]MHK'@b?DlU$*C=L&OrEuI_bCW+KBq6dQW<gC@^f]Z(V>q<9\o,+7-'2G5h+GONqC&'/0itZnDVE-s$Y>aM"H.$
%6$Ts"bD,Ir0K/-=Mlg<`#]*E<*Cd#0,/"SS_Jd^2Oas#JYH<!D[1/r'e85^lrPp4=[M'S2O*$7"+Ri^N3G9*oFSEc0FWf">^C$`9
%.E_3fDbt6/QL8\A8>5m`IO&!opPYkoUYZN'39F')iE?>Pc4jKt'mljRm4V&iBZJ#j"Of?ZD0Jn6C,%O.G"8&cjJm<s>-/LmSb(jn
%?:-rKT\UF`H2*2gbso<ECn+HdK19bf$_cFU^quY5&AF.*5Zr+i.,nh`He%#RNDC*r7;>3+!lp*MbD>eh]XmhP$bt/FVq&dfYn)ZF
%`n]a#[RWQ3XuV8SpY+_<"!uT%lYqa`qMdIW+>SY7YS'u-9"q12o7KLW33r-j(Qem9IR5nA[*<'\?]P1fMS2e(IYNnI:sK;p'(Xuq
%`(L:`HG;Uj&YnY$O6Hoce>^lU9mfg_".iW_?i@0A,u&R)(d370(=CF[?saph-_UM5Dq/_1dfDh`)1"YG\4;nHj5Ou2*AAuT@^/r4
%@$A:i;f:)HoQnYLoj8inT&:a*U`VSX@0-LZ>2kn@i,PZ@T\+Rc2u9W6p.&-9n&G3#[11:eQu`f3O>9^H48YG7'J]^s@5GF'>\mE!
%hY^DQEj%X%$5f@\O^.^\.`^ZaOke@KT:_(SrQ8r+=ttdCP4k-V'?lgW4;g5sECN8PMB%jI%N7ppT1p5mk$'WR9Q9%C%h/c8N_(M^
%bBARo:*&Sa<dR76Oa;pmUtW^Ymgj5O#(4`J@E-?9HtX)R->LA/`mQlR;>NpDio*)WkYL7\4Jue*jKU8LZqH6R^#(@bj,[-\OL2ml
%4&=,Q6jX#n]2hS/Eth_&?aakg]<AmYmDUHr)'==SWrd:(\-j>>kFKbg?U*3'+'QL(qtR+e?f,<O'Q3_eo%rlm`j`9qUq9Y<ci<fk
%h9bhITIo"GqeE[,C(1Inm#V1`hYKU(I>q9,=J]L$8,RQrACOhkp33j0]9PdrqipmCS&)<<m%s=/mf)`DZX12k.0'8s'0^n5E]d71
%ebed!Yn=YgChP\0?V]5U>G[d5ramut3g'^7&1tul)O?>3s6Yo5C9RWdH=mP6\s7FT(!DXi4.U8@XShN*27eXkS#*mUDR%6Vk(hoM
%ZF@ckH/CM4[p.4lO1nie>7SSOK\Yp$OB)glbkR40&3nKXH3W5%lp3`MB^O+aojG@nc2A$NqaiKl>5^jcdHT69+gpqUec,:.o8eQ[
%qZW7Ic4!hrT5V>@7tpV1)r=,A`piBN;S/R)&WS+f"[AOlg/PRmkdt>W<\1IL,L6r.ch"iRVB(T=IkH/C<P8]jnf;Fm:,5gqD.M`u
%q$,p;.!EHop%sL$8L?EX<qV:j"8Dt4o`h8LHT*>-VUo_h81%ZGG/*-6Ci7t7`_=$`#OYQ?*jej3dV4A(*>XT&/uk`o.^rU8DhFNd
%%@a##k\E*q<O/_np?1%K1>.Ue2[f5.G-45*^IPS8^hrh(H&t9X$UosEjnFurAl9dbfKXKAr]6=)f`tm*^E611nuqQf&,'=sra`kC
%`()u?%t,oHqHAe6'7ncimQXe1LUu>"71u`3^8(VQGie)VJc;,*i=3ip>Quj`W(!*c?dTd8%iY^[bRkJDT+BGRFF3$\m$i1;<i[7p
%e47/MX2'AVI:j.2b<`3,;k%b-pDL^FeH%\Z6#?8oM'_paHMkU-HoFNNV*8)lZtOY5K:c>3gHW+0<PQFZL[k*@p7N.>^q5?pkB\*%
%4r5a"DY8bs)Zj<t@W9-Z1Q;i*(_>KMUn9O1IW-#NI.:@gVpE#ucPd]XmZZ;Vk7'H8pd<M"rB!pk>$u0M3$+I^;N*Gh$qD7>)+KQ>
%8rsB`7m]L4lRT_5'R1IUQ=)E*ZZ&Jq>ehM<?]>k@lYjWt56f6D[HJQh+Bnf/GChl_f`,8g@Coo0F7\MJ0tUgKGC.ju]s7G2VS1T-
%#Q0G0lSgX6hU[bR7#*_6`c6=WBpZ9E)\,faY@R1mXM0U<ftn'7mc5d>GJksU'$`e=lbT9l:,CYZSstFdXjE7SVP;IODVuW(U`Z=4
%lg&_;l#=gQaVUkdC['=%IVd>:3J^/:(KPY3ffD\W+"$l64hlLDLNdu#Gg9*'mWJO(j,[kqmP,Z?cHf0PUU*#q0WaI*jUV;-r<Le>
%A[6Zq/`=NW(V^_`qX1<`+/Y(Wc\/cq:0'<!7FTT8^eLEX^!4BKR2PjiHRs+(i7A_?R^Tnp%K(OnN=4A"Ac,`/Y:8qmm_FV2#on=M
%jW2%ai7$I"IP&>lRkooN!dpEV<YHjM;m-EaHs/MFm^Z$)='3>CZrAuR3*GUaLIFMDjtkQU)h'rfYD]s3os\*%:kV'IS!MBs/q)j;
%pol[<2Fe5IRG-KN+6m$PSo^`[23D7j%T3U[De%X!0.e6A$?*VWHnIQ8!T15-\^KR09susd23lu<f_:%V_P[j\dg<rkZ08O<DVP%D
%4*e/K4e@Rq5Q7&<9QlUlmF7b-@I`Vdk+[duV<?ue4?+#<NrMTSNCS4o1IjG)HHj7PYEN8-:2BuO*If1SFpIdPCis@a*oO6pT^frU
%*mrpKr3C`+>-K?J8KXRBGkUMj6>WO&Y"qqCQ&Y$MDCO_pMImMtDtiegqWh=&\pZTRRD)[^l.>%>6LsNDSdnWIB\5\J2]Oi2K$*`O
%>H6A*)WXukgP8DgQHqA[[B8P8DLYG-h_rV<T%hF1.!ou2ro9'9f:C`2I(eFf#"u(hjj`N]ZB_CR<UdGPDVhNDZIRfdc<]&ml/_EO
%bNmSo/ahibNAu9oT)FrAhUZ,<A1\3f]2u6USEEO-^$$QqA@F)D1GE(FO_i\7L-&D`HDsuP;r.#QLqie1a=%_B4#$D84*<T?50),4
%=kcW,mUA;HR44uF`Pb0Q[WlS#e,0%.mgn!>kT<4:Imddf@PJc')_jBNfm8KEZPO)_D`8>hDX@"8V%`",k2u+ZU2pR+DpeAlJ"DIe
%:D]H:m[_&/DmB4VgU$lU(Q48tZ8_O=iD5A&jO*5U`:Vl+1q&K/Lec*;.6=;VMl5/:?0$U*ASX(_]@"-FcK.gUdJ;U`6o9?TOcD&a
%hk*CTDf[SZ6tpWn](As/Md"B#j/D2+C=J::-_pCn9L[e%eX`XBLttS/Gj%W1jLuZ-o?LBYq(-h6>q+5Qc_G:)(HT.A^2k.I3+%#i
%-<hZ89eXh*UR@V(6SpaXSW)]lhNH9gWQo@&qlg`lmOeuIdCnPh6hFb24r6AN<nl$^;Q:d$h;3@MB@c0IoR--`&\W!6jJ(6:CX4ub
%mH'arhB+[oUQ5S&+^-ok3K7&l4-S&qAUQ6.gb/;qYLD''[(1SW(2Y-?2PY3PMmmAL6#KCb[u5lq==:dH0qF>!:Wu"0Sk[-Z)qMr:
%DsD>Zg+TU&fODT%dnI8)b<$Bo_9D8ab&Zfk@XY,`3g&c8]hN%/:JN;.pUe_hp>'n%@deL+E8n+-mnB6.Na!00rU[nEPm%9GVA^*]
%&#[g1M,G"aY,uN`M>A(ud#<,8-9=ZR2GV_n3E*2>e*^a_g=^_2c.,H'Z,KYL'bg;+(NZMAGg'q=Ha2,AQ!,_ano>bo*pald[SErP
%D"$A+/Tu5_m)05aCQ#Huf\B0ecL4HFMFYX'XSR%mN4m<g(RQQ#3lsM)HIJjkabdopg>pIEk%QT"^\L!+XmEbq]$[kHUjr:22S$QV
%M,%Zg@V0Z(:+]6/a"Q5iPD.lIj@*O'F7OM=r+NCG*4qW?mI*57^-;5pPF_\b@OerE=G(=bVCrJRVW*5rgF7,=Ce^mX.R(7d0YKZ8
%[VD^=S'T.$;u=1BF&SttOds"Ok[.*@2dYC=.PGp%p%%Ts1tARjS(#bWd@$SOXW1+aVOO,j7o-3[0-?%?l!uq7$e%dfWq5'2rQEgD
%FCBK(D>O*RZSYsplH]$#e\.AgAM4\FK>kBZRH`SIilkkSl#Od(^IueP*3\/CUj(S=bkC"0A`i3"I:ME6522L9+$B#<eC7KGVRa27
%0[kMGDP/hV=^R*4->NPAXRap4m+RBLT?ZJ!/naoE7a;cQVphu]\&IoSAZ)jngIPO`[\)EIR%$ZKbB$=EpsGVggKU<)\F1a+2W(gR
%\YI)YAaXRdF#!FANpb3Cf*aR_gfq[;kGPV(nbL,q9l+.lA`)W/[[btF/UOcaIluO>c<mu[p[_cPh9Nddmr%:bm>%2+gt^@a>^Gdm
%pr_/U.@tspC@Qq1Ca4D6J(]et-[J_]Q[LM!mn]HeQtBe#+dQGrq<`fge]%7,6EZZY0-$:)Z%]6j,C?-^B]g/"V:UXEM,rSXEH,_V
%^8RA7;i@W-[u85]7]j@KmbZZUO1,r&Mm%u$kJb9d[?ZQGDtXiZ]$s7rT0##,@eY9D,&t?+3ghDaSo#bl40?NN`/_OB[!6Uh>4O-t
%G:>?#\mIL'mb:CdB05i\5`Y9\gX1GkR[m0T>4u+ce_4u#H#'=-'XQ)WZ56R+fQOA49J!'LBD5dP+V*Y#`7jJ2Ze-m6qr4]ZV'q0o
%>I:i!cK3P[4XK4D9O+a0Et,[L\\F;oo8-1EWLdl#[MPF<kH_!;><-bcG/eqmZ]B3Sa1h-mPP32VPNPVE**P%UZdd=>S[DH\mHe)s
%-_/BUahC]eRd<$tHa;hS?g%<hJ"\7FbtM`l4^0t;F3BJ;QM\*EYLWPuH:)u;ED,EB9;ee/Er)G$NS0&4o<5%ar2la$5?Gt%L>0Au
%^!u62nl8c&m<RNgTX*68]^St2[Q<8_-LH'0lRN3HI5gu]`t"<]Qdsn:5<XGOnW.b;X8ZUO&iecQ?!*]%?QCdQk9luH^,@m9YH#p>
%ja(>e$e)1NmP`cL:1c;sP0M;E<XRNl]p6aZcHJnqBO.]CZS?Y]R<bd8*^,k!=,Yr&h!/,2qJg@lj!qCD5$s^^4"*:Zf,i3bGLnl;
%Y._QR\_CCsbEhSI%sI-Ff,q0iOTa5sp!33LiaV%mA,W'I[rL'R45)+F(U>"9:=2ii*H!JU;qdg7T$C)"PEk9G-Pa>0HVN24RsHPc
%\U$kR4C-H70/LT1oZZUd9A2TO1t0&WX.-h!DoU4rDE/3UA.f.=Fs\O0eha6&r_B=kg-!\V?4JGfI<a,^mMmPdft31*<4;D.J!sT1
%?E`P?hY^XHlo(<Te`WE'q3d/-?@HJMg!:a>?dJ;>_gZM[\idI1kq7;VS(huh36gUA<-`ub/O%eBZM`P&<q`Kh\omh=>Mj2@2kIGo
%$G5WYWO]R+mB`:&B)BR)m-`(,jMB,f2&>(0/NhqX4J,^,G@qG)HFmtEpZK.9eY3SkZejT/ot"4OCC_'Hi9m/]UuqECcYm.`k="ri
%J%_H!lkdt4ErRH!&j;':Vrr\sb2"%B\?U[=k3?gW0X76W3R$>ao'g7#Y]0B'H_!0[cc+Pap;ZLXkb3L`5E=UN#01&a4`Pl5cVD;5
%a0iFG4.0A8Z;*=E(O^>l/T%"7&'f>nQ`AMIVjg=,V:5=Z\P=;/E>pQUKoOX"dIQX4iMg07S^!MI@qY%qh;u!/e)^%%\$5FLmbY.(
%oDRkFrU\`bmc@n1IHnU)(TF=dfu:?X20%$GXlh=ef%nO2@=37[o'(;3Hkh.$e5t>8ZdRC[NV'BK`Hpotq0?o=]!/Eo^2E)qp23:#
%2h//L5Mb3rmRulTF)0n$D.]esI=#2`XPZJ8'%8PZh9*QSl0dp5FRQA<B]sf@W+,LVdHfM7?-f-+,gO\U&)4EW5Emgnj,\9,p>@[S
%'!IAj2uRc:Ek?Etgdn#D'X*]jVo?LGd;`m^jQNOa?9(5"FluCFAac:A%b$Y<HfCpXhVBebeAB[-jg],L/'[[T\Z2uG\^dI_lZBOs
%=ZNJ7>ArWWiPjoOp0(,C:U[X>T+4Yp+.cecmHCm)gfete>&'Wn2dX,P\oTsB;Em?L^8\ROp<YLA;+Ka8Qda]6o;2&c^%U_e2_)#o
%fp$sQ]l]-ke_IF]\/L0<F5jL9hFt)D2OjFr^XJX>ok.I=)0+C\03N)X"eFkdGIHjrp2aqr[3Mfk=Qeo?iN^jl7sA@02t(bBICn,a
%:3<7SU=r<gm`rETo6R`%2c]JLht<*NrJ>0VV-;aM0pC)GDq4ePUL3IHWi:3)Lg_.]ZrQHt4Mr;pDXj?k<;m>Vhf&N!5<fidjl^g]
%W'+J6nZM7n\_-\2Yr]l'o@JV^7_S(#me&rZe@)_NR&L%cg,Q*UCXl3*9^]AAIgYekhV^8:W]=a:,GBl_rc13`Z\Sr0j\[r9E7utR
%.W@6%7J8G9Jo-;9MVjK\@,%>:jI>('Y_5?Pf]i=`Oqp;OHKe;O_\W]R[_otR?YIV%X1,f9Ba8MH`ErS==urigru$KN$I@7/2,`dA
%,Q6e?`2(0m]kSX-m.V_(I'0n%]ctm'UtCR_C!L_X_42ro;6bm@nls%?SmcbX,')80J`1O.qi)'_H[?=g1n\Wr'rb7!oI'lJ"qUQ`
%%iVU[\6gLL8.-#sGW7qrp)iP.EM.>0;Q&6K@\cl^I_TAu0Uu"8?KQk1hOse*$f5c4WNoqh(sd$\"$.@9WnXr/K'L%jT_40Q6qr%p
%_#[QOaQ7<Qo2F>kfFa^.E`q:jGK.R[5q`,QM4[b>p+a&UbKEG31OhVJ077!j'/Vj%5#o)4b':X:>3OP,i>$j60*kbM[p/7jF19u,
%B&Qke1@0e5`(q$[J$.Z#9E+*9$WqQ,l5Q:G_X"-0o_)Sd_%8CLV\c)q*&BpYf\n%EqCiH?I$tTQj'm[qD9TDb9'tMbfYpB>NV`(o
%>Cf0MQ&q#Mr3[Ibhm3V6&"b+A'cl$D5[qE-+%G)$=Rn,rr;MOhhG?BGCXtL:IP=gUo0)q*UKl)kr-d7<ZWmA+)oDQ6nB@Di[_aK6
%$1?P>h];F2o%tOB%ik8pjb7&%isuRh]d3BH!$7aDoZR./<CW(oNjQ[j<Z0Q[4^,UcE*Qt+P,f/*o(ejSjO]pa6$Rr/s(<93%V=l@
%RFsfE8a9*obV7$8qN6`odJ3]?`_$-HU&6oEKls6`93_@H49#F^RnG;^6Dg['h0,dMh^e\4rO1/IVlLuuM&o(NkBm*W%ck_=Tt=@?
%Ycgc+?Emih4:dmW<jCNV'iXh^!lqPoh&jUN!M,t34h3dG-h!%_0DQ[5<8uiQLMGTt=*H\RiFM=VrrebZ(K']ObC,EUm.P@++lr=o
%BX[X#>jD3E*a#A]R&Kq3*qL6Hhnt?0M`UM)B&Q1gjQfTE(ScXEr5e.d1NYU+-+WDZ*)>D0="i-:<f34O48/=*@QN2uCd'L:[A#bY
%kec[[VHusg-IpdM:;rN_B:J5acGoG3mEC$b4"0EB:@<I-_Js%Ne]Y[;T,+NMjN;m[5.S8Okp:\gEXAU7Y3\Th6*$Q*qJ#8?0=g@I
%:G_[Ool;sQR!JN^f3[PG-Ig`He?ZgFlt9\nda%OF6E8_ql_V$cqp4eT'cZ5?cK%FjV(m#ldq!7F:?g6T-FI40kJoNjWBqqOrq3AO
%G0>*Oe^s_)Ek.NM`j6%OKDb(JV$>B[^@I>((tmX!KuRBZj`2sOgs8+KCGCR+a6@DCm(F]H2eF[e+BW_=F8p@>L/69:R.$!2(VQ0W
%eELGD`J_5W<X(7;s"YNHkK<5_D!'Dr=BS?mg!fK`_87ED3m[Abl<o)>HmeX#;D&bmnP_TBX6i(AeA>B=l>D%@EOgP5;b8pF2J*`:
%n_6?Emr\C82_^S'fm1R?\QV#.9;YnSR:^h`Iq;21DqF8a8_7N.*3u*jl(%q=oLr7lfN)RoSlmP[+cH<,fu8Y[\tP1R]SEQ$WFTUf
%20P*dn6O8'B")\XCgC]-p[Qf*b0@4C`U7Epp!sgnBjK!(n5sSXKfX)pWn,Y&F)')6k]pac&pLVZlr%hG3Zj>gGB"OT5MX^9e-)YR
%8e]qhI>P/j=3[YnMqfqocRe,uGr0dm[t0,aXn_a=DF%knT%;+N(Mg'%Q'[,M3mHW@@D'Lb)b^@9dQ>>mgl7UBB%Ke^<Ri7[)bjre
%#i1jeGLX$H.AmO+Q[#sI[/6.>(2"uCWcWEs\s7\G:DKJErRB5*Gs>;j2Ng<thd+3o;rp&aq7&-r@YoqcN*>[W8#(?h7!C.@[&\AY
%G+,HC8n$N7>^S]CEl"Z,,Ju@K#8'0r4-r&)A@MG`jt,t.CsXVVDS<+/"QpT\l*c*A*h21o&#2<R'd#%<KrL(,g0ch2D2>R,j"A6A
%9rlPAXfG>]\PhWeU^B3^_+/=U43\?%K@@U%7M1At/'_@nSpHHt_22ODcVA]H1=,7H3`iUfkHi]VGJU:#XfW"5_AF/b@rF0rYTntd
%<YlkLaKiF7m.Q>i)C`J"lCGXHG>j:kl2?",[c:M"[oCI^.a9K,Un=0pB"F\e/k1Jornc@OHE.T]Haa9^KQ&QELY9r(W@H,7]Lmki
%<c.Z,rGfO>gQgaH6@Z<t;=a\\MKA7s-S*rbFtHY]eJ3qd`LA)4(Yddbm;&Q04P^.35++b^gQ/Q*>jhg%52CfaZf0N8^%oqP6`$23
%IGDpse^nF)4@!aq9;N!mmAK#j@CqoQH,l7*c"c%Vh$u0faXsk1A:@]6?c'Vir*9'jD*"&8(o:)?0g0q@ZNmdVD'jDRkfeh:*>c1M
%'[A]7jEWqOg:]Oa@G5E@d=VW6ab$*Jbj<"X`0^n"T?c"c1\YB/i?Y%FR#=/W7R-s_Wk_eUl.rND$"/D;1!LBs4qDCNZ^k;KPh,nt
%`tuPNQ]pt42.b7?VM(gq>f"ZRYt6+N]=YJ<?d6-&oIK=kBthRR$iA&FFCW?`i-F.;(fbo%om%p1?<YcI>PfeBFFTU^Vk]G93B)5U
%&Y#3%,^ro%8f)8D[C!Ri(1o?A6Pq-a`]J0=K&P<<9#qG6Up''*:EJQ"CXdbl6O$t5*\+S/R+Lb8p-_)LGB2>H'dY]F7n@e_<uP9`
%N!A9UE5M-"P/HCb%stBS'3rfpXbdgE]7GN2]GTEQmhqIG#V$s5Kgm"U6Y!dL&ha$e=m9^P1`Z(.*21kr"b3A.ClGU?NH'*"aO\h_
%nIQ#)K[Sg9X5Vln:2p0doDRdgG]scSc+CmO:5H+$i3X(_eMp%LBO@O<1t6L0c-[^hPs0Aal^ndG\&Z@DVGG*XnZ8LhL=/73O'eOh
%CqM^^f8*bi;m+fuQhXbE]b1PR(g.gF)B0cIL=^W#$e#O3\Fsg<6aSD*O0LFRSBRobrVCE_i+tjk(o!M)UKnrR0/Z40Ucr4TQ/N@:
%L15g-ea+VY\>4+o(#>QPHqQ;LFX."+j`'_^c_M_$DTJT&NYq"S%+8131XIUIPUGT'kn>/TE3EH9-YadL?YlJCrDY:i;L@+$K6+Nn
%:4K&HkI[jD;M\C*F-t[/!498B.V,dmNi,qL&,j@mElC(s`cL=0>CgZrS.+'f+\Ue-)\m7G"H@j4)`=:Rj!!S[pu'NcVUZ+-KQB(Z
%\m'LBH7tnr?RL'=9,QPaSD4@:`bY$F3k)UqF0`CsDbbPGoKtKYdQ0NaSbBO^\bP%0m.dcDI+"YP"?slJgrMY=)7FGjDlLWJqM6[A
%@s'ZLE!'u->%clB%9Xg"V0mHLd^M:cfq%R/j(AIigo\3UeF(:1g<aGKB2c"']u+U:fS"T$%BB=a0m"u[hn'Z]q\<X^"KhogVY/VJ
%FZ3Mdm[Yu\O)Db/cFmfA(q8VFc1g)CQ`^rp'D@_]KSl7/8,P,bR*WKO4Cm_1C2'NqS9b7cG?t8QefV:`WO-YfM^,RM=Lb8g]?sGG
%ct9Zb?&j]/*sN5+ZVQL#)a)$C^&A9Agu1rh3I[5rWirTXS+@OgeX3E.$Ik]hO1]%gC#O+mg7fgB=m[%q)>9Hk%?6*Cns.NU^!>\&
%ie+#.#!*eMpL)c8#VFSVXmTe/99jc$nR:8"DI2QGGjRM*a\?FJrOBnq\_D<lN1mU`0_+1C[WWGD"K@s<b.1-)=cqKB<!b_rZ2<)9
%f<=sBkO7m%A,0AFn0k44VAG?0lGDW1NMjsH46be#,jaZnH!g[SK<)!$n\OI85!)gPIMgI[HeQoOK@5mi[p/-V4R)UV$$lK,B9RVT
%N@r9'2]j(BqRT>80d_(mYPW;nr/YS;k$?!*b^K=fY!kiF$j-^bEi%Hn:o>9U_QQIL&Te@ERJj=\g)*Wk@4(CfNoM)A`OB60JkiK8
%?;5s.q&CCsr%N9)=a>S)=mO5k=k'?jTL2hN*QT]C?B'D!RC;Y@)ph1R`uni"Ren:f;<[*_3hhjD3L`TnJni_N9WZ_J7k^jY=n)i2
%=Dh7:gS>;%fifB<lM$t^N2JQ(mFkW`,DJo#!?6eaqaEEOa+BE1F0[)lC-#R>Wi&(eEG-Z>`_T.Pq739?8j;QIbP:qah>G;:Ij#^A
%)L!jQ`p(0lB0n&=c+;UHA.p>U7Cpo%e6)r4O`+f)1_E8tZ1HPLB9t5POo\0fW_:[gqaX%gc`D"?]4T"G`L;^R?`'<Jl_rCSb`MuT
%I5nI7!So-:>^Tl.67Qe>I7R1L1A9iVQS74\/%)M-;f_[h+!-=$2nSj6$00C2`E*kYe.rK7dc[L,2%/i"^C4b"]ooL@%en&a:pE/2
%L+o%O/aQ8lk1AdU]`Ml]NQKt.e[irT$<[cKk8)eKK9Vj!h;l^KNOa76P_j!99tc.#od=j"l/4[(fLmDQqMQG^^H.kN0)C4MdE0hm
%ErFjq_5Uecj4T*e*nF,&90bF_o3f#^T&h%pSsS<[.bERHE7.NZ]\ud0rIF&g89q&W;aP;k0,PNG1YQPsag]7eCtkS/pR<SuD9L<D
%6^<Rf5$1K;RT9lRk4Mo[0-=LH=$"(j\2i#uc3B_Pn$kO\ALhN$>cEtE4uTrXbZb#=9KlBTYGjjs.+/PXk#l``Xe&c]4DrN>Kn[bV
%>,(B'>5@^nQm]M<3[l?34q^DfQ`71UpQE_qWM8*CQ^aCqbk]9*CfGu"dAus29m4-rEg1`"AH0R3hoDIa9W[:Pm*<VB^NH%7)["b5
%A-0hh=0:gaVJ=e^fU\e(4,F@_8bMo,:i$X$BXMRoC%#YVDK>"CM0q0^>.X-\S)q:@Y:r+bRX^,fT>D)u\%2C&I[S'=+&TW&c]urM
%GaW&e5AoAS$AIa.(s-T1&'*K^5qPGCHRt>4YI@k8a]9sb8_nsbR,#^F?p;2!E/.jk?EaBtaq[h.5C)gja)i!'RC9hGJpO,H^=:qI
%CS<F=gV?T8S8Z%e=4]O$-;$4#f(:>"<7A$,rLL<:20$(4G3dBMdU%q32`Afpig-Heh*(i5,hEM^TLuXi5OQmH7Gq]<"s1^j58n$7
%GgV0Agso7d[<j2LTiouj%k?7)dpEs8Gei$F60KE)5)l?mMraTlZQ!B,@IAceDu?:,P-+OANGN=C53;5rG$":77VdTbW:,NH8H9EU
%b6OH3g[+@rl4Vijo([;]T+eWcr,V(5+un,2=\o6T-+0%7Xf']Ka3AK<)cIhH;<)="Y]G#?Ji/\Hh4DDIf/l`2>o4Pejc`aF!=lhD
%b"(V2"SfN?fZBJq61uPmj+\?gf:JV*@g>sLoR2i#8l!&mi>FbZjCbrk.KB5;+I:=pm@WO=3Y'6!Ms=6h:1$(-VDQj9HlC[DPR'tI
%do[q#s0e)kMi#!jVnlE_Ri#\MKiU52,I>?q;pK4U/2u<6h4[LSn*su^(9Zm5J:eZA^7OJ/0.l@%Kho`#1HQ=nXERV1kJR,"C\8^k
%'(ld+_J^<"(q78R$j*#ebSEu5D`=RPmlV_]f0Q?TIkQ9V,`nNAqh.k<A4*EYIPu3@]G`!NFg]TAcd+0kY`>5&n2-:;b#tlHrURM@
%j/JTUn6X#;M@Gt\=dU'%q&_%;XNEVi>(1X=dgr'-OmMUT%"Drd:.q,r4-WW;4JeM\hFkq?8oAe.L?pqK2`/d5]iro9a+m0ae%qIM
%W*nCuG.UoGJK@HC@>PGYJ)$[e^U=IZQWGogQ.`A-`BHNX^sMTKp/3nPC2Y^'d&o'NEL/1>DGR'tn`c.\*`?1_-J:AgK]B4jl2]\#
%(1P&iHUS*:H[pb(RXYE\I/@<MUe-rfFD!5tdt:CQm0qG$$@tPcEo!]dF4LG5R`IA70/#i;luqL#TA>p+c!rq[Rkmj>7^5N#;m&?u
%*=\n&_=["?G4".!`iZLb]<M]@ha6UQrW.+Q\LGD4H"YL5[Vn'*hm#VS)_bL=L#msadNJR70:PLHp+SFT*@@_mC-&."OQ.2l;qC7D
%k_dR:Ci-`s;uPPO>5k4X=;mg/I_Y@T-dnL9bP1O*bUCHfT8c"cZGB(NMCE1MVX9;"h5-@Fg$<,g!Z67<`QMe1mW'M`]6!_4XfgMV
%N"1h1Jk$'qG-(k0jE=*HQO]pC[6+*T_>Ds?b!5Oe(A#Y9C106"Vhe]=YR15^,LG#``Ff].>hIiEp'S:>;B^1FI<)7Omj-R_L^!?b
%W45u@R:F@dEFAGAVD9sR2lglme5<NX]\a[8a.nJ`]a=]a>L!piZh*jdZ<jq[e_G:a4#[R^;Nk&;rR3moWa]oRrFV6=(aJG3=r/6h
%QL`]pMUJ!7@"ulVB(N.S5%rH_>l&SSFjZR.mtQ2k@<Xa\<(=hL//c^*`tN02/rt-5\]Ssd.3prKK0mdig7[mcFjf,n<9nIDY@5Hi
%d@?e2h9.D*V5)C=2Feor_A?nGgH$NqrG@!2>Ipo-!8FVoD-fAI*_B`Lg#rh1%hH`L(=tgA0BQcEHb?`e#13V\m+o--X_AVMQ,g4Z
%UoIF;G#VTGQ9AHn:Pi6DY)c?oZ9-I&(#B$OmKdt7<_JR0aA;3fj`c=f)^D3@Vlu^rfin8*:4]9<"5cT=V`ftg(H)MTc@'I%HHmIl
%!1">CjN<+3Hgbps0)5.Wc:\(EiI(J"DMA6.Ep\(NI!hU-bgUW^#'9"bfV4-'FOXp&rRP2iP**ZK?2Z62QMMYZK&rQ_q>LX'A'Xd&
%fZ*gaRE_`/<cdI`JHp<PRE4g7@r?PV7Xm0p/hL&$/E&p5(iXP*)GgA6%Ct#o)#9^tY1tZ?;MC'Y!7/"RNqh%31"B$!o:sk+./%Il
%-+S&?QI`2*K#le3h+<P5S2QO'_.XrPN[hi#oi9Z9R$F,8VgOFqSJ'=as89cu4^+-1V#PPaKuIrgUVYD';ifenXhJ%f^AO;)-5Tm^
%o%dtk?@^5GS,d3[XL*iCegY$g?b>',QQh3,*MsXeEAtOmpAW1nG`s_h]V5:s$M2/3To-qEdH)UUmDF_M[^k5k-U<HBpnZ1IX/t2A
%]t.-Y%3M>?J+>__HL%udlR0jB60nF%7FSJBmaesfmiDM:h0P(=gJu-es&o/.!A"0e^1R)p4'&9K/ZlOVItV,[9BF:qpb*3k@rDG#
%IKX$G/7!W@YD^c@dQd_HQ<Hes>\($,a@LINT=l?4Cc`$GiRSOdReL2Q5kD>@UX4"S&,<U''`PZ@k<Jr]J0,9c28dkko_)sGRl%g1
%h0#RPpIQl_`B8S\q#5J`Y<9K7GjIlQf'prFQbVRi*Vf7.Y^],q("nZ'gf]c^5N#$c#aON3X6FcFEuc)s7@FEm4)tTG"%_DIOg/d,
%.<@^Xfj_VI&2G4S4<8OE@8EG5Pj:_"jX.WJ'`bSY&/>,HH14WX4^<V7\G/\cZ"="+`s2rI`bQF</(Q:B3V7W8i@*[4]?juSoZhI.
%nKkl1gTl6!01-PYi\tqri@($hms7#<2%8d)YZ#qKH]s#tKs`&MG't`i&BjS]iqQ+I6m[5W*.fRJb:@'mfEAp\gNOn_Y[^07,4OZA
%a%\OrPQYtWjT3;PTsT\fYbM>oB+n*&0S6?6,$6Qb@/D",\>rWH&O8*2Pik,]#R">FlOcr\:M9qS4=pj@oOnoVd09[,d53(iF>_FB
%ml1X*'0*^\NF47uiE:,?Y4`JLco+0@cZ+5g!_,VGJ/(^FN<@4R>K59;9:Km3j++l2i@F%2hB2e=f-[0R>)JeP=q^rha($BUT1+K0
%g@aidO)O,LjM5AE3[<Ou=)uc]/7>pm[W7Vqe&jcl2WFQGke`ZKV[$1P$h<1@>gMF>83fB^"P.A!KF'*dfNmB1\AHdLHcq1!WM;pX
%kOZJj^#MXEJ9V\jHsA(<5RE^;T!Wc<&!!l.J4R!L"GB2L!lRM=gUDQb8=M[B6OR?@iP5pC`%S2[q_g8E0X!g]fg#[(o;sU#?@gnj
%b]+q$8738S?ht'A4ug9\OJF/9`m/W+ioBH7<>)_mJC(8?N94fCJAQ@123Tr&(IDp\:P&k:FU2t=O1AJ.?tqt@C;_>lkS"E[E(H"!
%'*P6U+V)Xh`VicQ[W1sIAV%l0<RMG:<!G3i3&S4#SL_l`I-AY'KPSb-T7\o:-]H_";87dD=L`?9NZqHWa;>t:>empf7AO?p&t?];
%^<=H(qnaLUCY*2gd^IC;Z]Og9/*qq@:FsJ4?dObSOXTF4PC2(VJiocV^tPBQFo(l:5m001(N'VDL/%fkb@A(mctqCN8k=dsb"gkD
%AHA-lh"GUK0-o#RDim`"!HCf^fZXA!#XI%U$aN*%1'&UUKEMl^kcg]^A@RAY@-tg0Hti_=(q7O`#ER*:]u\6Hhuif`oHj(Bd`;G7
%)r^FJ5]EM"\i-'(63KnmJtV6K#*fAoHHn3&!-.ITJ<nBQ"Gr(t#112\6qS[rT_2-Gf\19uDLb-3@l#\Bm<OA.a!I;]IZejs8H>/0
%?9gH#jRX+LUKOQ3:?:FNN@b"nop(W?Y2B\g.n?hT,.8b>"i^\e1lr8<>lh-\mL=7T+NOZ,,7%j%Y7">K@#B0r42/`UiNQHjTbNcf
%FF8f/"CqW47*8-4*Xd/<j`[;u']>5Fb1hJr)W_kmQj.a2:0Z-@T;sK;XUt0,Xi.uTXcW2r]O-K=-rKgu)<b5;-6UY=M[`5b%&O$e
%<M)&UarAGp`^3?,&m]1lYb(GkO$o<d81*$*N7nb0QNSdJH%tH9%V7p27[^WF76Q_=%O9@;INZ0P[&I^mA5?`QBb>hc7$[UA-'s7>
%/83?JcNRmJMq/,Bas6_>K%X_W!gmK6%/g1G8@BKPbSCg&OsE:X$EM7gK*\h=XOP(mJ<_Q?LRJVS9JCf!cUBsk2'?#"Jl5$nSKO)J
%Kn.;10U`$/5&J(=>Ul6?fe*;1el7Ya$3;?5&^!5.<459ue9=K@_Z1Se"qY5`;N49^!"9@4_p+*BE=k*ECfl\d%3bP5Ar%u4/0(mN
%JrXdW9Lu;d8PKkEbR(H8lc;T7";9H$^8FLcHU)6SIW.DVTUBX'I$>BRo>&Rn;0!'Bi-C+a2RC6je2@[:c[fS@Z4rEfZ.*h7&>U^C
%KJ7Gn_TjPufW5&RTtma>Xp,g9>a?9@9R8O]_7k!C1^9dCdQf>-Jde_Ba^PC([V(+=f*NW&Lh8B9@6B:;JgW&f\X&0VSC!O3N4Zsd
%Fb'UY,e-sa\;4K,a=Z<NecuQ8"%RB[Rp"$(_s)6Q"WIMocB;>`,e#<LJC%c11eM?\S19p9JHig'OT:j5B#<.Xi=mOu)]kfC&b!kS
%!4*giO!R?>JGT"3HD?hdYQ86Jh^=57WE:jiAp?B/C61GiK8T>UD:*OR^*R(Wrp0`n*a&t5*E7c1HVU6QQ"HCn]7L_?Qn)uO]4ceY
%^:)*h#7+'G-uhsJ9(NFY\J[D(k`jcU&bN\CgC6Sh`g@4,1&a>tOBF4_Z5pB:./O#Hr5b?Qe!Bh2s++ikPm"N=.</-uL.L^AA.H\r
%1_brn66Ap=dYfaG9Tb;7ia*5>*<$G$-]ODN%D.19A'O8%PCa3OYoa;C=[tY"1_=o)6Th)C$XXk4"t$V<9B4*e=@8&KL+1TAj.bTN
%821V/`,pZ%Z+/4k3Zu)p:l]0E%P@1u8X2;2TW`43"3n]S,9#2uHhp?<4J?qp9gW*1`k*Khd+Ff0V[3rK45A%-?DD,$+I_+PC1E3A
%c*&W@mn"I&*P?2WR.(5=,k#^dEnO,f=#r^(:#![R5\\,fG%b16?TN!U=tcr`aYXcHAKfHp]r$e;!(pcFmT;s#@5EVW(]X`.bQn7$
%KU!cq!-X<sn$=eU>L\5*a"RdAKHi2:Z6etfecl]>hd9ubUUgZ?k`UP'^l`*t#7gfo$6)]O;U-&@2X<T376KV'aM:)]bn1"k\]A>?
%$:c9YOF!_b;0WBO\?%%)]sW"@fXOPX)Zr,qRV&?T;8bJl,8kqQcg8H)5t^bd#kMeSLe,CFp/Ws>EJFS:3#jHd)=ZjZluI`QEJ?.O
%+O*Qs,,9#V`&POF#WC0>!T[Sk"211`ULNfs%$,!L2?p0dU)jO;/:<4:=K((.P`'4ZR[>>aB+K+q1'T-J?Q6J+Jc\2SY(\96A(a2:
%i<fq!O_b78EXC`/@]1!F28^E_8-Y&Yh`tu[nAMOI3F1Et,@t7d"U":2lr!f`%&mZ"XmsIDkXfr,Pd7hAm$"2`/m3B(OcB`>U#8;'
%iM-!s_)dPV'm,3sJ:_T*FUdcN0A+\Q!Tp[g[fb@dI9iKcKQrN^;I%]TRLErI,!Bmo!,1&CD%_P-!5ucp&X&Z9Jpa4?UbU:$&rJD.
%4P'HR[M2jH,-[4nZk41t?kt/#S[ui>62LaI<&@&bN/>B=JqrVf1ZK<uBSCH9c2utD*FVEE.H=r@4rq?"8nHMOe<,eK_^&n=q4Wd6
%Cl5ZX/(d3Z>L#%5M5O4]HR)WoZWa</d2I%2A%)J?g4@jh$\u!$J\>dA6;fK[pbf'g0QVV;ZbpSeb8`85q];5NN_AL@5\udp&=BP8
%%?7KS\U"0*`(V_Od,]/fXC_)JNNANe/0nk-ae0phR/pl\8erK%1WV;*?nl]De.:gZKIaD2V<&=s8K\*j<<P?IMC'#i\I8aB9!N[Y
%jK/N;UO3PC#Fl>"?5ZZF`&#GirLj`.'ADNZK"\6CX&KJ@;+D+oOZ2Sd5t>!Z*;-OlEIA_',RRgJ19.-,I]VYb9Kp0GS4b>mKtA]8
%RpHe=74DuA'[7u7$"Q%95Xi5=?5Q/1La<YTNYD55'U]N_&\>+&]No#FK)LP',amqrV\%jl6)RO78V4IT2C=bDA74D"XpF#W."D:!
%p(/mG`^^]gZ>I$3D)@/E7u(PjaSd1=%@P4Gmm&=[B/CXFh:)'OU1F(ORp"J8R"3g;6\j&"81M9mnje98ZO6KF7/O?0/3_sYa<1mR
%<-Znb$hf[5*]X(uD5I@F@g-H3#P-MYfA<s`$iqHl,-,(D7>(:ART_$P#->ti<00@BCu:r^5u+@85oYk9+U@Zl6S)rGOoY--2Lu39
%FcK78)^_7T.>-7>K1efJ/V?faUY,q'^)>\rQ,0]!h4Y_SE&U[!`e/KB@k`kH*n8SVg?\lmeFX'alUDCfl+df&*R,c6ggM(/bLg67
%TcL7/[+Jj2*i,\MUqF'k#YOH<d1d"N&8_\.BcM4Ig%fYnbN<\M3CpuP.W?m7$&!BX4K4-n4a'-=;uu08=V7DFK#7r"3/:[?7)Wd6
%J<*54TFA8gL=6J*L^=2[$B>5c(du>J!K`G]+`.PoKDdO3\A8XbJ?ETRfe.mO*%?&aAKZ/(YA(Aj2$#9_"!\4?-#TJ,j-cU.3&)VN
%3)a2gRt4S%$NZ$u8es2r^;l@aQfp\4Wkf1..-u:OfCW!rVBmE."5e].%0kaR-:X!rg$KY":lUV^=Fc=4Ne("k2:dhrP=/@PjWXi[
%T/.Y!K42Fe4<%1rjPNK`s1l=u2EN0""s_3'^t9H8OQ_Xb!o^@87HQ,2[;8)ALRP02-J==%ctG\\$bH^S9pu^rSoiUMpKTSO61&G/
%hbu^sENO5i#k?7d6&7l4Z\+FpS1ga*,R<jq1hdE9ED74,,']>J@ni]BHt^^%^equ$(A`u@lUN9MKiUcFU38mW0>gp8_,4a"e>C@\
%!umDm;3hY7P_)5X"nkLFUj?j>+H[O.oPE5;Kp4Rp3IVel.h8B<8W0QT3FF[$NL6qTP<QfR+[J4G\57cJ(,(t3?@q8D'T-di#WsBs
%)^j#g!D%u4M\n8"m-%#r[1B/ID'fW\\a8[&?iY7aShf`,A_\NRa<_0F@[>>03@6_mW$o`@=[Z4H`$LZI697T.htX/lV%LLIZ&Rh@
%a<H$+87+=WFeR:J#2?Iiarji<Ef^T*"YdXZCmM!Zp`,]6n39,m3u>H?po>kFJEd.M^a\2AU4LKK'7^e3nBbX]9HZZ0,s^`48q]WB
%E!Sil5Yt+9(t@amU*03W[RT.BPF)DibQ@si`A.[[TGT@]!7@b1aj<I!8/3(oBNkNf&Ro80^r&PQ^@E!^Q:;4hcoSMTo)n?s;<*5%
%"U/E@btrka`'O(U#b2K$4="-gJgd3%A<)A^NA._.214o8A\d@,SiK,&Rq[J!(gt>iEC7HS"tZdJ),Qf^2C5XW3[ktM*()1]Yln]1
%&BN]a#40_`dC<]o$j":54&qL26.[)E!XL^'1L`VuAY=a^)i_9L-12=r@R:/hI*-)2o"fImN#'S?"PT6E6jO#h/W?oAp(p`.B85Q&
%,01@>J7iu7iD:p4&"XC$+nCb+N$.WZG7/*d?XG9C#(g/1O<sr^jc"?l#"C=0Nt@9_/qc3_@m(7SU4ZZ.*<e<q:l.okaF$=1O7"Pc
%aFitq(A<1gLd>o<1G1MXF^\7i6^*nU2gBI/qTMK:PTlrQ@."BV-D6>VQ(iApV$J7jDV`5$&OWOh-\iB3"JLnkIK_Q$,&p<Y"nRJ/
%k7^76;9A\K*(ffO'T7c5-P/*Ri>$E\i8A(HKM;HipK=DgO0(R]5Qu7a&0O>3&-8O;`)4Z)L^iJ[/Q5l@eV-`X7cE!bni4dFBXa+c
%&>DGNH5)l.JPYV:('O^fJ-=^j)Ya#t$kuDN$k<<6k!4q2G=l<nQ8XUnH,f/;LaP(?OqNQl2eF9OcO)J/i-g53_;3N'iI3NNO-KI&
%c:fM+UYI%s.@;VB)(kmjl5]pe;B\'q9YLdP*Lt!e\PR,e6lGNT4s`[]?j8<eYXlRM&L7B2^]XEG6kY3S,jQ]?-?3oCbJoL?U1UKo
%!$XsX"2q'13'r!F'iO*iC,W^-d4H^9am524Y@sK"'-p02@/@jNK8qikY5"5174N7-NiXt_HE7Yii-ND'pS\eAAOU,97^US3R/U`A
%F+%*86OO!1*N`DmKXSmh(b`*q,nd(d'7tp+df`B3T<X5,#N[&!%663MdBkBSo`UD<a2_Wm`KmB'[7&p*A,?<R(YOpmA98`'_GE#s
%nTuga0OB80)/S'*:bo*]SN.Y2)64f`1cU.H;/&9<kY0V@q/%HHMEjeTTUTQB.9[$McD1*-+rLA_$5&>rNZEp1,<\oS\<p>`4SqO/
%Qsk/?XpJ[X2lXt/pL>]i'aFT[j@:?n$Vq\A:Ok]8l*;4K*0UEtK1n0O7u>5E.LaWmW^4*-V4GW-2-Ld*6dO`\56:kJJe0(rkG%+S
%%g\k>3^Q[7T\g+u0InPnC'cUA*i@%j6WK-/O*]pJ&cQp(GG![-+D0u>JEa%h&.>]jLQ)@B;lL=s?'nOr,WV9@_AJmF["kLpL<U<>
%;+;2c=HDY]E+dkZ&X^ibZ@uhiNcOP5gaJ/B%[t]G.G#8tJad[]Bh(T@aNkis7u5Jd)eg_[8ua19aB`+;;mo*_;W>&IZQ+>Rk`2@]
%M:CNGm#GeW7$'H?,N/tLj@*ke:61MOjRI`8Ak9>)c\s%aZOTI2K>-t[0GA%<:?A8;Ftc[b.-4&.Kq&XumpI\EO[?lEYkS7L^5^,X
%l5bk9cGOrZe9n2n0L&,L_/5B".iJZk"l^N\Z#9+dIq4e$1eL39!6oJ_$j7<ibt,5$;RQ4haG1c?'FNoXW@,jC8>9'R';<8]I3MXP
%CDHum]!gjU`/HF5VoIB&(,V.(NHku6<ESI?MUukgQhKa<Z\*u@7HB2T(/8ZW-ORp'_guLU+>Xiqdu(44cP(-L:dkX.,_1`F>"'<'
%7Z+=,jb1-6P6@,0@U*ZV>*NYtM0PblOc'tZ!^Im4,m,D@rtDgMm=oErBl"_9Y\h_o,hp=YNGW0ITLL9ZRTp@t`hN%W$:K'ViWfUJ
%\V+Rm-eYVr<][H[d/qb7!,S0/A>X%VjWObH9PGmT21!_^JiHl?U=!+B%.RT=*F1L`&>G<!b%se'GO#l)!:T_G,A*a638kF=TVHEV
%/fiZ>)t4,/8EjaiBHJI6#f3/D6%gC!Yh$mS8"cofA/1:i[``Jt@fYG.$dM%=iI2Db$q]-W/S6nuT+Z.U?mZLS)GQ9Hf\19nGqK6)
%bgIpaNt?8qG]4",RZ:>cJqsDai/YN0(8@^?mI/_bfp(8UJRKLUML^f3&8"j''*B'/Y`UHW`Lrki"k[o"i@7XQ`NJa]Y\_lZ]*iEF
%[:0qM3XkM^N.i9Ce;WSr$K`**@Y#3p*H[=@A)K^h1dMD!<<2BFEr;CsPK$&1Ua<XJ=JA:Q-k>o_geeKdOuqqJDq+B<2p+T>H)#t=
%6cCn)hP_B<UUL&j2bNMG)`Z--C_VFZC9oikeN`,S=s7f`Z.!Gl8fM]u;oTcq&/ohhAgD(GiT-"[JNN-W`Z6A!KG'aoe5-!>"B'[g
%7AWZN/Vu$:_\7oZX]W0/:n47OL-af-GGGWN!l<`&J!W/)N<*O(E`ds1!HpO:K*h^,(c-1$2"AX8Qfk&rY$<52a1/i3A-L.g$AhSn
%5%ac@TYRc98,H[fM=l<>khE&t%j":5ht97UL2aY1&+*#meX%m]7k>;$Cp$=\fJ$F=KU*@lI8P%pCQd':nAnA$6>_Kp*tu8[APtAk
%<mHmRM'k_LK[A+9JUnBZ,rR?j;TbL\Af#i$Vf41s[CDOU%9bo.fiXKO6%dWA7>.Tn0^O?ULSItgPj\ZAA)d>`T.XAV5fU0"rYDB=
%.3_L)N<Mu9.[!!iI3UJnQ]X[O?[<s\MNToM77HF"TWV[@"SEN[5%"-*)[VN3]b/1DGpDNQO>gVfDa]!7N.?f%PTX#K@`"7U0'$>I
%E?PG<QC;Ij"V.9[3$UofpirSm2fgG="qWO<&AYH)G0DNcO+`j1.>H5-Er%IJ8j81hQ7J<'TM-,1GZ%GLNY/daI;Mat8Ok-!Qd-+S
%ehO1>9:Nj:B2Z#,<7iH>]chu]M-NroSW6!Dr!E<AMG+E5!V%pGX^N60TSS`JdL[;80oh9(P8'jd-5(p7I5g_J>XE./AkR5jOl);5
%%JNd"L3A*!)^4-sBSHZfCrcg)l,\CI4ORC=PXJ0mR.g_liW9_Z"TUdFH6J+JYbK-L"sutQ+dCb.#lD2rX!YtY>Yn_"0ZC$pnLSQi
%\IQr!92$K9E]%A=,%5Z6Um85SGX`&C*"G7k<Lr+5qT`cRXL8[rTa"l0K0_lP'p&qs*C\<SJr3n*#<`am-Z?O5\8aD3=<*esNgc/>
%e-q8TaTJB^;B(6_HK`CH,g&R]Qm.P3=-$kf&Z#X3[*/FrphV_La/!WP9brM//?5nj1+s&md0_FsdqV4=S2TXm/rW(N6f*I?8KLi;
%g;I*MYAL?a$/>Nl0B&?fWTMhE'bk-6dc$S53*M()'.=ooga*L72Yg4QLHK'T#$fSb#[qMk</A?=2\<neEfb6GQH1b7(J%eh6V#iW
%:$$Ao(.qXMe')1?>Kp%HJX5?&m3%M'OKUgH"/>j]'u_uA;+u\_ZliufjZC$7Ql/5<OZA%1nkdU;0Uu61@#6;RD?ilM%b63ai%U=H
%p$3U1G;qWn8Ms2<3*75X5VOWEM&+efAt;a:TL<f("_3Yj]O;5hU+EB2+5bX[rt4)6g9GZ>+]N!4&.`[]R4+(%)HrMmj(sD<D3!7G
%UAs7FR(+Y$3F3Xj_nfBn$?8`S*<n06oT6$D6a3E&"rTl`fM4[W)279Hbsm8<YlkP^;HOVaF@?GqTSmIB(t,3n;=sY=cW?9`T*`;`
%g=2-[+WM,gFGC;$=]A6&CY*f*K7jZ`)bGgeplG<q%"fagSONG$_oNP6!m.90Pk%.N&UYB6UK(u`K)^\AYi>GP7so,j7ZbArfbC"/
%&p6"eEQ&<V*bRL[hno7NA;7Z:Qb&ktD(>Yh_E>sF^jN@1'B[=S-l@sVj>;.,[Tl+K5YgjCkWk8'&5P%!a7:"!T`.E:Y_"]g`AMlC
%PSA,AW5=r&A<5,\-cq[_:o6bbJ4e3=d%$t8Qf*d4']Ms=;0'Hk#Up^OHI<9^6d:6\#`Lq$5"C]N2!GT=-!2L?+gH3Onr]1*`u#&m
%D1m2h;^R--[KrEod6*@uP4-36(ppt%T;puAhY>L52\SUk6O%G'J3oIu4A?u6]LV1t`fDsu6WY*`&*u!d*i#ouo;"+Pkd$\55qPf4
%OW9R-7*S#HSn$3*^@+$K5L6$'@'nDR8W7V*];=.k7m70ALYXT%(J5"rg[)%>Ul$]Bb5ecNJ,mG3'4&rF@o8,.`ht&?,K)JX7O?\R
%EiJ7ECGmjX'Y$n;'huQfpS\rKjs[;NdugR/I3LV3G3H0'[)7]@O;eA#GK?-AnKoH;=)th_,1-*6ZWB_40hgr-%nb:)TbGHRF'?*3
%r%VdQHt2Vr&`YC*fu#3OKt9:kV,;UgJl(\_6gUL+L]+L8B6u17fuZX#'>nuQ2Q0/iCZ42G5B-K^*o55,7BiUJfk;gtaV[gXPaP8L
%]CRJAMI*/Kp6EtUDeL9Q4l!QjOZcp:4=4W"9lAhMXM;e5)[t,qBK\1g$)7A`41^YM`AFa[DM")M=D]P;f.K,7BMg$N88b;@nrGM!
%k-ON91)g6nfGUd>2c3CCWHpBJ,c=$Nes>O>\MiuYd8WN`QHq7B^lp*eWQG4#7`X]iL8'sN0j6kK");pJRjnX&%,e6g*o5sP$&Cp/
%+LZ-D;*U\JR6HB#W#5pBMLo;B'I!)O"BrAgL(cV\;Q;,)]Se!c!tei>OjZM]iJ\J06(kS*@jRLkQ:hF<CSHuJ@VmgZ)*s*/&u?I9
%b-]E%AX'EfrCTBJ8]AXqFCA</(cmtm6Za1s1=:q)S]F;m(ik0a?*a*i&XDEmlNG_u>GCp=E7*AVouNDCBb)@l2&=DGj<R1NZ'jVa
%QEXcI<&5rSkFl-3A]#BK3U000EtP?"r^Hmj"jek;QAd\`c;62nD$.TW0+3eInpW^\f_7H9q]l,iq?n%+0Z>BT,>$6pE5`A&rm&h.
%$$R:OOp$=UR1)"^+Mg<QPEc4ps50qFdW>R`Ee6Vc4]0Z."kj1^E"#),qcH@?Pe!ROj@6)9G"DUcLDlX:a>SDCA-\"*iVcc_&i.^e
%5__g@Nn'$rqZVL*l[,I^4_d@bGANfDe!9s($S=E<N$H;riVOr(*P)`222ZteN"1Ra3W9D<9G;b7g>]>t:r[mua<ZK'W.rGc!Qp:m
%^[693c&kT1OG"0LE^;c)/BB^$&bD`]8To`<.n*$=JN)MT\B)QBRZ!&W-lalt(E^1ehi&+4B"Ute-r1QB#jN8^TL1mj^J:3@,M'"*
%;mAgdO\(FOrA_bPOZlSYg/S*/Eo.UBCYG*E2F-oe<-0B^Z'X.Si>`)70!uSQeW`!Z]*QRtYSuBm\>W!a5iqf`q2,A$XY1,LP9juu
%76(th,?+90M=XXt$>E+iSl>$P&^Y&[i$g0W_hsFkU-OF_Cmq1YC0$!a-GlP`A`P)\N!X11EDDB#/Ssf044nd\K(Xi8C<Y0YEdCNe
%:'RH!g$M'5_e^E)Dlh3;B?UpIR2bV<KDlWf*`D^Q./]dmPZY:frkH@OdVQ(SKFHjm@RNTXgLc\[Y0HCDLNJ?apSG.,CfI[8=rcE1
%$p=s<;I(GD.9U-6A'T3:TnE2)en]AIYA@r%W+6s1d</S:BF5_gAd3n5-j2)s29O"m^([;mUkKe@P"M+sOY%$'g6_l;A/-ImYUG&9
%1AFrSS!%#i0bYoB/f6iPfX<c/+?[If:-frL>Wt@YKF#J/4M!Y3<h/8$NZ=!"IJK'G(MmQ$H+\dg7oMUO"B?%AjcRNi3!u3[JnW=b
%VOfV][','d!Z:73.FZYd'I7oCf^eNg=W#dH:QRgg1r[5n)P[&N2_AlAN'"mf#hMn"VHAEk%Ppe;]5//oOD_O:BT'%>+p8&_6'Q;Z
%.cWP,Nh5fnAu7[F";+!l0Y"Zi8lZKF?OCq(N"C5gKk^(k_sT)5W5;/LD$lQA+Hh`W`cR+Tb:BMf=lKT/M^oRbai<8(Q?!fpjO.1>
%Z4\!r\*ujG`OE8;U,XK)5oB\V'HBsa'V_N#TU=bcIYedY54L/\^V^bJD$O;u1rj`T?ZIA-T:^ea):+R!`5ftH*#J@VH#OQ''05'-
%5]:m+<1)%2M(nb,3nZ^%\;c4,H'9i^;j_@0Kk3"hSkk[q1`!*2r7SKR0QhO#)'in<F($#"2LVa-iEM2(+eooPD@$gA]-a(A-!r9i
%+48Oi3#J^DetJ0?QhA#KA*,"WOW('#Hh\j9Hto(S76HT"d5.3C*H=57k$^m,@`LrI]`o('V1r<bmo/$e5&A#tXF330@&OgPQP.PY
%CuX]Po$&o8=[=NVJBIRZ%%lt8A!GJd\X80tQ<8]HR;t:",t44;@>.TGaLrG2PU:LSd"fK^Q"PHX+_&EI"Y/XhTkc.,njtIFba.n>
%"h\5];r+-aWq>OZHk9es9g/^_*Z0b]Lba\30%E12k12>bU4Y.dNRfWg<dGMkbt#4'Ka*4lR2Rj<QuaZt%Fb+Er"ZLk/X,G-9HM4I
%>]raS78hMio1^5G(92C7=1[INU2I=UTpe-$EG??6-!B@_'.OXHPegc;Qq^.<]Na<`m%u.)b/Rk:LWeTYV1FB`%>@K(H6=(p!n!+<
%4cY'Ib$n8R?(5DXFG%.+,X<T'-pp9q2r+b:?#ZKgU.Z(bF+bl:n9"[MDu)P[h$\+^$E?"MOcMTJr!0Do396aE>\Rt&I[lOQdSC1`
%/7mf#XW002k^&4&I+--4rE1[f/Z]24AKjs_8=9b%"L1U!ALf!VnTH5_p][9K?1k"Rkg9`4rfVp$@\T00\7g'Dm7cX]aZ28q0"jo=
%j2$Gs,oD#k$)Jb,Y)a<"Mru:il'e3>6=]F29g=J1S]$;=@D\;$Gt*(*>WP%<KrZ^i*"^Z\l7IJY!bTeu5'gZ=h=lID!E63Q^3o\T
%Fn[Mh[P_94?<s4Jpa]KH1?'?PZkkJ7''t59-<X*c#&hVZKT4mGZ[Jspgm>Fp&a'"JNG<h54iX"%`e`j1elsMtps=$ga.;WW.>f`r
%Xrhkq*LRJR#5e[o,`;&S0K=VR[:;jUrDiFKqm5lLW#SQBFP73LO.\+@3aAA@:QL8!F6MS.l1P&S/C=XD#>43?$Jse.qMl=B5,;0A
%On='"3Hbb1$ZWo=)cW7)Fg,1RW2[<P)+r>$_Y0;\Z3sc?<q+4d*T;>jU"i$nkG;BDeU_<poBPIElO^W&ltAIph^XOW(A8K9]\_4]
%@95b1;iLFtm_eiEOXTc9/RK``#lpd**FE#!pqt.#a[7[/\?2O6HMt%UPoKH>BE0El<pgrql/>%)Y4<o;G"4aN+Cj9p/(7Jho`\M.
%%!D(,J@:L9"2.ekLg1csKbRM)+1h`e"f7?M@Mc;_S.jZVfCi7CX^PDD;-:&\SIc>K#mRTHO^+Z\OdHS4%-S]J?4:FLH%o0rCE:ur
%.toV_7fe2aW12uqC1t)`[H)'o:r#T#_75.B:,%sr8NfpA2G#7/9ocmt&r6L_D#K7PRgHo*!<Iqb-H.a"Y]+[]QR0=<XnoRABVEW]
%aE_"^HIg^&<RIus1I_V^T)O;WMp-RU<)&ZY_9+"dU*N1gWKOp<okOq+ZPmk]J0nM?[?uPT]+8:i=YD@HXl,2%J2J^phU:/^k(&c=
%&b99S4hsoL@FZ;gmd?[SHll\t:)(hOGuhl!_BpaQ+7bh!?r2VOX,cM#O]*ml6/44pZgVG.)_&HbZqFV=?CI3Zln83;/26g;5"X\O
%+Y">OJ`J6&ro9@>nG-]_lG'@1Dh"O^K*haHV.,cjh<UD1q,Qfb8^&#OANaiMn._cnqGLJe'79$892#>K1uh-Fs0u25$1$B\N0[[>
%$D\a&C)$pR$2m%Ca,^<`.FKZ@\UGYp[iP$,%-umf8@>%5X%5BNai\9;T>2\dKV`G(^'gf:L96)?Ob#NqH?B7UN1Ws0nhL6g+i.ul
%mRP5W1.0@&65X)I]^@ST"AF!XG-dG*BiGfVIqu/?IntlL^e'K"o-`tCi>/Di\qY$Fb`gb?FeD==2a]4CAN.Wm%qD*/F:[3P/cLk<
%4f$ma:.OJ+EgKhsE>4,7Q(=>CX5f!a0.Efo;pA:;24Se.^gqL(r]5dg/n9>-5bcb-2.A89H<d?(*SjG'ntbPjU1g"D)>m-&%9=+l
%.+PGB+dGgCE\B>HjCDH*J9XF3BhZ'$lIFo`K$+_08'k+)SgUdX2;sNQ^emFbppE#'`)11mLBo(-?S^G75D+mBN];*JKU?.F42U]l
%.LTAqP,DAk3SSkcPsj#b=.pO,LIu!Oa%^1Al]-f6OOr1%H51K?J$[c&XF74ulgRJT`o3Z#QUl:V00F!-a.TMJZ#);%%qVNp3+8i;
%%EkrD'Y\N.ED_blRO'e3SoUZlJ>%F.QFNeeF:emI8p_M#e"P3PpG%*m-kq10M'%4>:P]FunE3.7\SX[FZV?+h![8d22$NTZc:RE^
%g#\V2*#Ua)%]Gk9*;C>;cpB'pg%L$1\P!Ri]2q+MdP7Hg@[!hO5C3l;,DqiMqo5mZ<Br_rB&"m80uVcf<IITrhnS^2>h7HRM+^3U
%Sg-;pW2usD09:22T@b=,/tB\u9!%Zpon=.\F\Vn9^TW%UZ!3$$@N5!2>f*iL$Mn$7l)V?i%Nja;1?NLAD0`4gC"c![*]6NFF;1CG
%J8iX7e'i%.9j5%JfHKEbEGYYKDsO?C#,1UHliB(#jaWQ.8i))l,%t\.KJ\U=Clae5GI`u7Xe7k8k'mOGO1S\B/&OC/$Ai=WB',:f
%2K=rfM-+H\&PgM_ZiNH_'),?m,T2Au;GqN"`o6noP5@%_R%fD0TO@E2lRK0afIKp!f=k:b^[\_cosN@n[cW(]fbtTck<cSN``#2P
%n%qC[0hQf\8;d$k''^#.U-gRcm7m+QZ(Rg<=QWU`&P-*l8SS<sc..q2k'N6"$9=2*]M?1Ji]5"3=Tp;)GQXDii%,b>3;jE2[7EW-
%&t0&S[=#.e<3:X_ZPJ<hZ%K\3PLb/&UEG1cPmL$A'4#q$6H-4F-Bs'ch+miLgHA[Q2Gs;ME]@a-HJUB:XKP#*=tM003H@[/)'d8[
%4@++Vb?Hb42g9gCZ'%7nirS8HG_J#YVAo<OMRMfnSqSdt$FopML-/I-\saQ`;3L05<OIF<'Ao5u)'r!8^Lmle[lFMI`qJeUrpYd$
%$g*Bn_BeC-mOXsff<'5prP'6!N,q<Jg.^7T]>$_Y.c#^BUTBs^8WTm>G_AiN+!ngfkS!A(d\5\B2KC<"QQ7flP9Fufjq.YZ2o5`2
%R'XkBoR0GA)u3<@eiLnUW0%2d4,GS5)Eh9*[[aO=jr*Qc^2^OjRT6'5Ft'^Q&>Rg`m&ktr2!nUerublI8pQrJ^[8(,<c;(=A!`,Y
%7QF?5HL3r"V\T$"+'-X4J]g[R8n*j<SC2LSad>)Zf\EC/lC!Ki<*psjU8>Vdj=LKu^!<:?cT:g?anH7Z+i:bFm>VhAp\Tem->?\)
%T5r5*,aG7r;\FE1po)H<'fA(R+Gf2#pVsP:>t7M.h0htG:hf[=)!8Vb<pe\Mk'gl>U>&ESY?(eJ1kk5=9p%'kDL6%)Fk<!0N/7sI
%DW*&qR2N;>jKe=nN">]*193E4.oZ'sS:qEE"2d@ij"@:DjLY_-rFoVI.T6fu>_sSY1eol%&bCGLGoqMOg)d!h^/+P9m@A/2H<LnT
%"]kD8*ug(e:44(=@2&,c;<KEH<#er3'mm0T-n.^@o*4^NOH@sthKj:Bg]7),P<%)p\kS["36YApUCUJ?#Nqtl`-&E2EDd",+[ibH
%O[jE.kNAK4nRlE.UpTL,bE!Y2kY[-q),kU1BJT:>S3O^I%]ltJr-q=7G$.l)f)+RZkbBON-sBopfC(AOjO:]I[0o=jAMpf8p`s]>
%\=,nakmN8DPJMH+c&$s?j3N/IY<VP<gA:p`7)`Z/#Z3J?GuofT8t1@Bo!H-g(J,hLA$GF8$jeI[mn`fQ$U=Y<.c?KX@rN>1<r6JP
%k^*9]ihIRQ[7V.`+b48F+$.^7PEA4$l,gi*-UiAu$>i95PlWI,9-0ula3flsN@K3_QBKX?<,6M@bJ_7t3D:)&p7;"HK^p<c<ON7'
%2T>5?^K$G:q&WM;\p64,+?#G@P_*?dG4$eJN/=5$D7p4I+89o^O-35bPP<m"MQBF'q>bVoZ.Dm)Tcg/4_=S1j9F:jSA+W[bW<hH_
%3npMB-peJU:S^>)Ye+(`=pRD3>;'#cF,WM!,C_b^!#IN>DWum!oihm9;ebF\X8i*K>Eoul"@S@)J$\XD_@(<$QD6AUjW&l_:&uI;
%m\k)a%q(46n^\Cu#*hJ$8j.k+cF4K4p7GWb#aDe*LJ1Q7&sn.@4U><Lp=:be>49MbB*fB-G9qMe,ffAP#i$Q=-LJ"ZmP'[Y:;Z&7
%BP@"/lSa&V`4&9<RO4r$^ljP+q+Z4)1+4WQm[dr;SfL+jTn[]K*#PMa<_Z-APE(4jRuVT2He"3jW`JA<)cX,<#+3lX)m^;1H?F^b
%I>+<.iB$Cn,Y:QOdAuLpCIUi:=Y=8rQ+_sfN_K,c^lZkl3K<hpP]M^DY,=ArJs[/X*'r3_ThFU0BP:1tj@N(RGj#PZ;GUS;Y7sAk
%kOc8Xs61K=mMfuYNIlokF/!1W8IiU!`W&h.mKgao1\+%mRYRp4$20065n$,lB'7)Z2p.=*pM>(tPK7ErkYtTf-&<]PUj#arnPj1-
%b8&1++sqN:V*!6?$+P/CnJDbFLU^le-SKdCP*;'rdC]Y)\VEE[BNUZ-%fW]peH>*BeTe46',&$nr?#$)9>:Mc<BW(57?n7@Xnp^]
%#\Fp23Mi`UWdqO`dAPZK#CNnP,?2'9lXAN'a1Si3&5uX;.>hY(`1G'QW_9Cj?:V"rC%4[3nD'#,Us/*_ZnrIf_R1DI3b6*8Ofa7C
%glbeqH,C&q&O%J*7c7Z:3h*\cOs\;`h^E,U4.-9bJg<"Y3a8V$LY[*L^<46pe3N2C]K_a)N73/355R>M`8cm$3O75`ibV(%.UGDd
%ZlRk!+e@/EWf!sY;<b,VF\\aS0`0&X<e$tlkm&NH]@`))B[Sr&OHPNDp"A"28gR)05a07CQ^[fWCOW1(PfeI'n(=EM'<%948h=#K
%,s\M0.l]WQjsf'3$)lgW6anF>MOi=9htHsSXTEX=f-Vo,l1/1FBtJhkLOj-gPZ#@db[VSS\[?c0JJLPD,e32rc-k&r\u?5RMI;Pf
%FMU)hbp7r")D^>"Cs"h617&.=R=q`_d[H!7G09S8;I8h5o`X?L>TT.hL'gKpQr:\l@AkP/qs(d*P_,(EbD.%a-IV8J!i3)pp%tCa
%4hG]tQe"GQ2<f%[0aq5p[]9%2auBL!Dt/!uF:NdK>mTPqbW9(P["I"#jt5i:YN3DpTYb'$m1[m4TgWp!V#\[2l!7h=ZGL6D3lp8h
%Ck3Y74dKo!#FAbY)cq3A!.]bILo-lOIT=2^Y8d*=`Q/*8'8OHYfG>ejb;%Lj1t!eq:'@O3.^rl0WF6%g=5cDf;Of2i.3>)6r7t9g
%0V_?[6KT;%^QoL!iu1n2,bm8ejJb(5%.,O18:Kau%QE&FfG"@]rV7Z\SFTckOJu+ZEB0UP;c;^e"f:8E<q6g@*pb_8:AO%A*8<==
%nPSkIfI1?BHd)+T!O[W`EaE=p(n$JnbY#CT1,l,R';>X-l`9gU(Ic@rT:7.DI.^lpZ`j`ZZSYBLLqrFB_Xir7^NYQ-J>02>Np4H!
%[8aR$2'+\TnFL<Se+a28&fMmHMBC2]YH*-i-n-<&m[\oll5q%s5nf>C7K*(]bFdB(KHNb>QZ/p06pXk;B=L&<`H\RVHUs4OgTrO'
%$t!Yhoah.U;hXE`')B613^BfTRpqQ7%HUS^'KM<\Rr/)_@>^8FM2[LfS[`>f\$*OiE]BDD_%V`\JAPIkBT685c6]gP_X>;4=E:P9
%]t?)eHbH[SNoel:R!OtMoY_>%#&q=q(;YL'[Fh;#jJhC/1%8+A?/[mh@+IH^Sk5VjrfqP]OFa-J.Id+APTflraV[UT\iLZs51.d]
%Y1]?mTFGOVVH[1>0M7G9^DmF#;Nd>kfhVd<eN((#ha7RGd'KHPULJKg!P(Ph=:@2[TH)LDUXm`LWK4fs93+[j:i.hr$uG\tVlr@;
%n7bhj!W_K=pd;S]Q2@#%'-UnA^a5kQ""^<GG`D+"K\n.BX<_p\,7.;A7`M]m`ob!Mm$<<bEQ&$c3AC"e2;1e*"Z8KX,p.<M<B>KM
%rkTYU.M$;Yc4!:[[#13M96"9$'e68dff`FfT-[TpXu\m)le1+C1opM-=9^g)V]q4j&7d9[m!Rc0WEu;^-#lqJlqce)7k]F9*$J0/
%.u83_,seQf;:DI_RBp-C$EB?fQoMn)%YYJ!R/BEkeA:tW?>h]%FS7c:6OS:q/]^u'[G%/37gR.g+[Yc$gLU@W@n5S#IjVk)oS/%'
%8P;sGP=EF/(TN9dhVQ!8'10:l)mM=/D<,2!!8p>0/fYQqW0]HYEl0u3H#\Js;=c+rPsK&^?](qZ(\eHp\=IP'fUnfMBLLG82M$o'
%O>*%jMJ1>$KWL%6bn!k#hSC(="-gTbL](dYs0RIGT5UZm:m7#T66B[8i)CT521#asa;E;spF`^L8MIOG&P+?A1.uP*OOTjKlP;g&
%X;gk@V!eQS"u!0]S%QhWB\gb58@[34.HdAS84r']<TZNSGO:]N:7r8:@hkY.kD3Jp0c-5se\p:WO(kYPUO:"PjTXa80c=ILWuYd:
%D9>19;HeM/O35BH.[RVM9EV@DM6ib.L.Fro$U$_:d[4R_Pp"H]o"sJGftK@/BJC4cj5QUt\g*u^MJIk,d$KUC4]!_)!5[_#d>T)H
%llfdRhZeg;F-'mf@u%\*s#B1s/YaZ9QJ%KW`'.KE^;"?;n[Q!_1_hI*(tl04;3.CS:%`9nTN[E[8iK>791_E\UJWoF8OTle%shAk
%9dOof[agGIJ3%>-R$(XA&#1(f_3>\0kr:2&:I#LVePF/_eS+-B%XJFq6'>dL4+"2T84jrr;/=UXD_)E3;'Qa%eY>EnW"Au'O^1'5
%R6d8I!\+^aYIcj[TWFce%jRml\<V#6C)j%JKK`\:U8k<F?Z.>iHZC"c'<RPj;=(-Ki<ohKnu+O7W+NCD]TK])mAcSGY7oe-a.Tu0
%E-Pbdj7g,`UI#SKON_][BojN`ot!V@,(U%mb<DCm,sUdaO$<rSG-ZB34>]f_;.I%M=0NqWmX!2[f006kF'=Q!R.5f62Jd?n3?V]d
%8AAO?h=oP+^>XA`#"lPn6LH9[6N:/ks+='VG4.jBV(#?8rj'q2QPlQ&rk9`rF]PpS>f57hJn4J;7d\Y+Bn+r`6jAQXKXHo0fr+K;
%W4l+[0(M88n3l;5D,>/'9XUa^T'MOR",-2rLN@<*4_CdmZZ!UkKo\1.D/1DI4Ij.CppMWo8BI7?705e?<g"]OF:`@RP#cM=#8g5E
%O$iCAlQu"0\;mtD^2MVed!`EnOir9N5noBL.V.e(s86\+MAmTC/CmJt="+Atps3N<?uC1r5`?d<9Dl04]H5'=%t'1T:J#gD0l/mU
%,[g*6D.b,N)91/u88(JBeRUUV4-kCcGP<tqh)6gg3]t;'H*;a*WB"*\LgU-J3:_;RN.cOY(FQ)1PZk&4b8!\'3_<p=Tt4%`>KOkh
%.Nk?@07kn[?XEY;%7nD;TsL_+Af*7Ii-cFDcQ/XL?J.-`KBJH@[:Yb`Xg0<k&)Il@r6X0/<1>1JX3=dK=9>6i#[.OW/9Hb5ru??:
%7#LM:!nUr+#*b5?`+PoMVh1*@k"r?$?WpdE]TNksr,q;$IHAqeFHS<c#G6IaAc8`,0D*doW2J6o!fF0r@b/@9:PM+A)8;Gc-5o01
%P#;HS7LVlsHaJGT"6^2T>_Z-QelFsGP.oeh?ZT<n]T8)c_EgWuBg="VHh(ae)riBe0'MnHC?4iC&X;CFIaS[5makh@n`PJDrdon7
%S$]P?RnjYVA_O/VH1Me\J&C*@j,KS42UTQ]Yhe?Y]m'P6--8o^%NoXAHH5K'p1"p2.(A6U48Z5BK(cX7!=s^CMI696:O3<P:F\,m
%S!b]8jG=FId#hkBD9\b^U-ng2c._$<aaF8U+d(0<II[,D+e7Ri4%Hbq#%_;7F3Hgc=&2c:nfeT'o9'7+KM,RJSm&9PnE9`/;<n>V
%`[F`jU-7@MXf'qh>u8&Q&"^m+.G1p>I$1Ft4X&]6[k)L9,a(s6nV?1(++M]$F]"qEF1:@G!"b(rUY)JO9?d[me5<^3]g9d4;W8q.
%o=ZhM<8+r'):2)9dE991L<>[b>uuFj3+7_Wh.f&Z./E?PXC*Mr7"8NM;H_%eJO%0D8V[SrH/r*J[m1dQ>n+6=!h;'@A2S',aUGm@
%5,g6?2f[8_HPV7j;]VVO`TIUWCmaL.+NA*&3(5Y6iL0D*g9'0]9e7jpW1RG6%uL<N""MiYRuW`=JjK(!o2q:Mi"ZaAI*Z&@;Lkr!
%HF:[:IFi5Bdl<qs$@r"Fri6H"Jgi@7lRJ[eC2=R=L.mf"omr\fV:+LA_1ja[?*u?m0(G9,(=N,Es)k'=E/KqI.\si?rZ6)c9Pob.
%9D^0K/chYbUsK&1(]V'#T776O$1q@e/>5lA8;#.hrN`oEQlsiC6,Xps:f07K)+AR>#YS3IN*Oon^9QKZ[_]7$mr5@4?;u1SqsCIO
%=T0Rs'A3ZImYorhl^_%k-%<tOG>U7<c$$iG+QS@U39D0liZ0\+Y'c.05n7nN0qB;of^Up)"gN%]3Wh-STn_O'X%.7%9$)k(-cYf(
%np\k2N^C,9Z^`q)L2Sq<J>45)l9^hJc8@4VL=tQ!Y#TD#KYO3'7T8@<V]HejbZG5ZrGuLRA`+im><kV-84"uurdK@#R*MB2?#5[c
%s,nF*D>T=l\6FD3p,.&"Bc6)Sk-H#"A\URRBO4jaG!1^=<:HcKBK?s_475ug6b&4cCc#*s&V96mbqH2bGLi\DCJUEOqTJU#S&C]O
%D&[/N?,%c*d+aEhiu?3GSMb+;cT-@HgS\[?08NJP]!2^%1kKsRn!ln(QESL&nXD;K?3Am<fhH70&L7oS:%8f[DH;$>B0d.Q6"!<l
%^2k3=nS+Qed^9a^W>6lgFPl7T\6'T4D:KH:e'1-DneBXLMK$$s;@_)o1XP-(S@uNu*Ro[K7^ppV;C69^;Jt8j@G61!XATT9N(?[_
%P#C*9Ti%?jA[WeZC'$#uYO-\JH$/QoU,b1fRe77eh6Q%dBYJ#br\hQR[W(rJ,2bo4EY^Nqjfs!IWoZ-H9Xjji=F,/k*gK]1_)8Y<
%"/:W;2gnZ\e;P>;*4X7fN&S49=s33t9mO^/Q'8HHSn(eF7I/2fRT=JDX^S!S^0U&1[&2Y!57$$VK:^t<%u_W'\fTVo*JQ9e.[OF]
%=2rbCel"H&'h_@anSu4KY+ig_X6\N:6oeYoDgIZ8bLW=f;^HtL\9Ft(C;6+I.BV[)mXbIr"@<``,\Y_.#=k!.-Vho@M3$3A:+mBJ
%ZBiC#eV\aEr5fh+NLmE@qhTJuQN:g<ocom?NE-kbZ@BH%[:+4.!@I'IPim^*D7TJD[-bOip/BiB[E%e`gs#qWbA\1&C`E]O3A)M=
%D>CQF6?a`m;12S]3!#,KfZP]S?I&3=MO2fDp8>Go8>Kp$OJ,sUXrPf2q'ZTpI,d%qSsl?D^X522k0"9d)uQaoqYUp.bPY:#n>Gq9
%q_$oKnDT.<>bEGiW3`AQf:,:KNr-N]iD+:2UCE<paF+ITiBEBDP;VY^8jNkqeX<gbCMK[k"l"UAN!-j3[-[[Xc-k.13=LUmO,68u
%]>bSGOK+S0plqh4R'MMEDB3p`/=g7<*fD.,AqgORj4td^*!`0l1$M.=`iL97Q7jcbR9YD!MN=B_*jfhd`f9#Qb7_1B5Q]q[8Q=kq
%F7""6*%Jtl6WeV\%P]+8>lL`M)AFZW`H(hN_A1Lc<tUI]K'%%#>pK=)0[qun=M6fh)!(QW`F#+>/lX'#5EKr.XQL]b:+-4k6c'GV
%i-p9YR'Seap!dk:\ngT_[Caet+Da(;pgM-&ieK$Xg<IBoJ)gu1?X>u!:mXE5!!(OKqC:n`3e-T@Y8]KmCsabto]l2)SJu<Vfm,^&
%#N>QH>A>bIo@d>K3SN"b@GUgEPUM],^[3o`4/;D;>c+f_kj;-nd/X:44`%gnR_."km:@%kQRQN%ef=n_SX@2/W\+hjBqJF%mf_Be
%4QO/#[6BA$J0S6hGK$>Zm5Wf*#$G?qfcApepGTGqgGD[=hF^B4A/GWd^D@4e:lYleJW%]jRHD4A\p*Efe9uKIY.WK/&D6\%"`VCF
%'$IW9n.&!g5Rk-GEKOCS^>HGL\8gALEB=T9==]_pMhra^Pj+KBj!j4Pjf1"FUcnS%W-c0i@C4g5>auHij]t2%Xu,OX&4c5$+"7;C
%J(gTgml]e!#N&W>[0"m`=rfn+'^tq(QIDYcg#C&#n"`j*I8f.@eH)md=@M.U!14X)NdW4q]Zt_\7.OoFn#H/u2FtQ;EpC]'[E3pC
%kKVi%Fst;\WAF&pKeCE#.A_jPWtHK$oeY/f:,;tQ4A1lUC";X9,4h\%4_P^,fduTBONXSX:1Zl;/SJucWo:g%QLscU&9^#)+KBT9
%WAG>D^KKc3OF*fUJjc.5X59Q[2bHeFNRLR@6<G.'B.W2\W&1>UM;XPkH"M`e+Nr)5K4CfJ$T#5bmuZ,;St_Q3LY8=^Cf9<gHn8'g
%iX8>25]&U3CG>:P?B7?oi:VLs1s3*+oPR1lE0XuL*B@oT2ko$6(VZtE;Z$%CKLO=!e/>9G_.4LK-rU.G/0a++JTHK8j>rV#Skb/>
%B34`Ynh0_0``t_35H5#>arjJmA?F1YJfc"'Gl^9:?9nd([V2L*M(]0=S/69M!saap&<<(UL+\t(+O6'KPUDC0UP!]!">c5NKV3[H
%j5YiH[N\;/AnUTA/YT!T$DRu%L5"n3bM`\[QWd0b#.$rP^pm0)l(ASc1@@i!,AnUes"tLS`I`*?4EO,*AXF2!WtY`BUr<t!H,%#/
%]\7)69^%HNJ9)Kl`rJK(.6R?lb*I8C]u(.;VIkctU<!Wp6oR/8EZpA;GfD&.cCu>flJK>_/R-s-QWge`LFO8]fWcK]K^/X[(b^>d
%bWPi9^d[F?#Y:tnB6'&4*(1eSs4?hedHd[/?qj"f(Ra@&"a@[1Y7a'E8b't[VKGBU<g.Yh"'$fFH10LGq52arY3!J\Mm9$,d]K(8
%nXqnT^XgM1$o=F=f?cAUgU1A]L:>J^!n<Z^M'sC3b+MLKeE8G:&$b$5g]"c:++II4m[#0sm;G)7FB0rka4R96Oii8aDHgQODOnXb
%cZCs^=@0-?53SXHWhJgC9E@NQMP'i2-ZmA4&N"Y2M(g5H5iG7#&BRJh:qd3WVUj()2F7AYU#ZAL77<2-eEjet?&%BL0X8;6m%?UD
%IjZT7=OD$BK6&6m1D;Vp2^_!/.oR,`.*5!;-MATDYa%HhIVkAJSELO!Gq!05!-gMEpgle54:([NQr]kl0)$_3:I/KOXNHUhHn5-o
%XZHK+[Rc?6`WU#c@SiI=^nucsCf9akn7\nSXP<'2%JE1S!A+g#IaF<+]bD<MJhH2m+COO;b$Y?VTK39l;%7Yq1h7-n)lssteRN"q
%h=n21X]MQ)#j#lS+5^^=OX(iGLL^S?,,;pD@GCZ@]aHsPqCB#/H;k,<\5*uN3jCeW5T#I59Vnpo?d%!$eZ9YppU/jeQ]T.RW%Y@5
%j3I`YXiGfl$P(qY["X/5"!s1-/kP`#MX?]j,b>**0u6A(dKd64<*&V`PsNG5_74=Q+o'(P962IF02a6!<?u!\/0*!$[F<31*C?tl
%U%Xq&CpYSs,sH'UE#@NdQNVC4o)`)n-$,KW=l7:S4#p=u0$$r,lnc6kE2;-q)Fh7jonKB@j_p$cmUSNRj9_."FLID\>o_'hD]\XA
%O.96iNk&XbgGPYI1G9S3)%-e?ANaIUduA\b:KX<aip0hHDF3T(e:B,GE,"Xt_uu3g@[2Uda@nD;/6PQ3*f;ks"F5rED;Oo?o>?P*
%a6^TM&T@I`;G$`P)KW'Q0W$aDii]A]T`Ioe(*p6LChBV"[WYDm3jaL\\8Of;p4fBEQ^7Z>)5=Lq2j,a+d2edNqXe&Vr4<;kCTBVc
%cHHr&,HS=d<D?>B`G5-LmIlmK2T\EN10&0:nU>(6N".NSIc+U=f8&g)IL.beEpMbF^(p*0.@0o0$:"PA>g!(b4TF$>2&'83rk?YP
%4IBSM,a>Okq(;8Vds.W[-*"YN=Ffgs)M0JBkRNcW2O?g@[QB#Al<2sLr7Ar-;2)??d%3mRHp"kZb:Z0hS^h:3Wc4GfP&=dMRFu:%
%:n44-`3rtk[_mmWD<ioh`=0u7&*lftlc2hP`mepR"FG>7RHJlBNV'daM"?WCZp/+@PtJBu(]Dld5n8\*EnTU;Yt3Lj(0Oq,@b-ft
%%#!KrOiieXUK\\HH),@tC74jZ`rdu;,AceVHl.J#)$WWd7oAJ)(c*>o(c-/I`K$_J`fH9oX8SI%ha6GijSp[HiLN*Ja7\OQ^5_@6
%9F<$S>Ysn]BP%!7RckS`o[k.(1pM,0a&i`S95O@;Z$c-]5LJ6Mm&8]rLF@,@l;b,b``G>RSmCZhgkJHQ6K)W"du#q^;Q"`<:&]BD
%-!YFE12TGN3?2@acJT!W/UdSOff3bn>Qk.>nTZ#;gIA[&Z]^fD`imG3Rh#6)C#F;"MPJZ4r5hp"MIJ4$@uCtpfZb$Q8b8lNAO)1g
%^g]GiA&htSQ0&3T,06oH:]>t:Q>kO)E&/;n1ZMD=XUib[HHU?Dco[M4m`QrRK&KV.^IYE>Y0G#E7)6,ccD,`<-3XgD\f#M.e.[u&
%bDcL]`\:E>q/Y$dp;l<m(s(hZ4s$orSnuAK$$HJg;Qr5q\f-(2:[$2?Ku.L?*VP=+TY2OaZ9d%q+Ydf&3MFd7X-=r7p5`L'H:$(8
%BU5\?$BNf*:$o=d"&&1?M\p[epH$,PQ;iI!IXi.C78Ep&a\[dp4WMYi+d14H,>!XE.Q?:Cb[khCb/<;9kN[/iI<cVn('BoOXdPdV
%[&XS+FZ_I[Pi7i+g;VgABZTPaRB31qh)ANeY6P3Q81S.$Q04Jmp+4B.XoVYI6+0`)V\H7U8/Flo!aq9)a]+o&+!:+72m<^YF]s]f
%Y?0cB2k*VtO@p.43Hh]_mOAtR!.JbGfbYOWrk/`ed94PfpfSmC`Ne3.Z65isK__7k$>R]1jCXp8c=DLnM*&rG;_Xl".V7?)NEWNf
%0BIMFPDJ[IR`K3qFmkOK@%)Xe#uMb!kXqH)]I:'852<Mkaro/HUsje'm$6\u1P9DASJ(ZP.:"4C4))GJ?i?#C@@98UC^7S4+*JV`
%;65$^EWn!UBdU-<_\QiJ2-8>hpNR8U*^=;P/LF*&GjcX`4!&-'R%D&p"R_E12sUPD9XtqgpDJ''FL`N,P0eKX[nQKX2^\3lbpU-+
%7mP8GGa1\Cc[5'",Gc)G+]Tf.k2rN^ZeusrI(9;Y.=IJ$9Cj*HfI4k3mu?:<GpXY5he7-\lmi6M8Hd$Xo6sPr(L/3DoV]<%#`,pW
%3ToQ1rS=`AeM$!;VJl?Dc.\H#Q4Q$I&g'T&JB1T`2o7dGp4!6n,d@8hm.ki#QBJcNY!1tSiu5SZ&r72[VBkN$V"q$]M0Rt8Hsc#T
%diNnOY[qm9LNB;2b,1ISqDb'.m>,jQPpnOmg#Zc1jeMJd%gbX]9F"mnG%S@cQ#9"o4cqp7IZE7&*ELt+6N`tqSZq4\EN`2P>2e!+
%?]CT6]ZK>Dho(SFDO-6[<Vl,T/$i'Ub\r`k_DfqP.S`T7)Un;XItnHpjmJM\/77b.M'#r#'GY:jp>gYK.0<P?.'Z?6SUYEVr2iu:
%4E8oW7r7gT,Z!^_`p:(gGBPT#Q8jf?2(S"&_^2JViUYh+pS*T0W">-856%hPnh4.p@oK@+,L5K8agg#@p'M+oq8&X8\&/iHc-8p6
%b4Z7WCDlkLiX.DWKRcH07^8NJ21'DO!u^[`:9/(h-%oM6@;2;HC2E?fgk(2i75-O*;X1mjqj886?iuXkH8:kNWgDk8/N)*#LRcYP
%lIDE*@A,iLa0,[Rk:(j_R?%d?D8sLILj8)g0N&=;VWh&6j]?8'-?]Ap!1Q6iqOXgaSAN:.gQ'-//>c2K9-)]#n;BcbBBg=R+"X9c
%:SqI,eQ0/Ic;u%3%q.KmZek1iK\Qf.Ogh\)2I$"_NFE[;fD!tFHd9=1'e41ol(+fMdgaZ.Zfjg?l_3c.8:k7,pEL;p=cej+\I<-R
%p^5m.E>"I:oHGE^s7?rAaJ^CKG'%*FC@aC[fe5"pmq1!B/c33D]>c%gNP3?0aIZ%6khHY;E\`uQD7\R+;D\L$6diedG@pA/Q%p+?
%b$H,rLP8Wm9/GRC6;5Uu6)pu2JrUd-Y')X_!'G@DW;!0%]I)h!="SEUbu]GE1qo/Jb&#G$4A*)Y4IHn^i(SBb`B_;^=?ra!Y*F`i
%V@"i.OE9/=nO[d'(KP?0PH*j@)IU-eA\Ci'0BZu.JG`5,4pf>n\WArg-Bo+?*Gt>Y97UK)C.7(]M8,TIYZ_CE#"rjE$_0RPKhL*9
%csqqS:,+(4;TB<oeqKQM[YWKIS.,-Rd+[EG]HtXW>5Q":aJOO9n.a#1kE(p]6N5fH"edD385(cPe,D^f;GsOJ[$Fp1(S+?"Vi1s8
%7[(2UV/]Z]6oZO'AhZ"`>*X9Le^"q.o#:km]E]1o[AWhrGfoPl)lu7tc[sL=fY)q%`=-8c&#SGj-kWt%R)BF=`!Ol>3=RY!bB@M.
%YoFrg:pWEq?/!g/J&=4R;G5Gn/&Ar)=C3n?l=9KfbFMuNBLl:gEbBFm[#7-JXBM[&8hQ_L!fLt<;(4O0S]`X#AnI]R+#o"k:'M'L
%*6WX`BNGs9Q<o?\1!#]<-P[RV.td*&P\qbm0do?ZEZM]k,NLBtbfX_UTf6J]X;G:\P]0E9gds5:L?K,nb8"K)0gFVGSsO636gn$P
%O?Xcn0B%@>_,%"!6sVF+>nSB:oG^FTpI6!@d66KHp8H[(V)XIVjFWiciShP2mLd"@*t47<2%=d>Y!TNSPO5%S\*Z>BI=XXdUMk&*
%6rN;iOjEgq-!hm)bXT2Yoo">CUIGcupQr,+md'T3Z["ZADPDT2(n\PR8pkr,Pr@pfPUNk_!O"-cG?XtL#$!3#<I:%5VX=W=6"?,s
%oIEFX:"-E4mCGKjL'PeIHB>B&1.u/3b[4\5.US@=H6X1-%&":W5sR22Gk6nu]]Q\-2!8&'9%WXc[J=knRCpI.$B$ghB6_[:\A/SS
%rm'-i#:E-(+B.JGO'C/["b$2\"%iMCY*F/b^I2@JGa!PgT;'W=LoDF?,fe!9H>ca%d-F)N!G)F*I.-<ijbJ'#-K3+`S+VdQAh9/4
%-LHVQ+/_gD;>"G@WSJqfUsZ*\dlnHT?UDh$)-Hdso/HDX!4"p7q]'kg$+D!nWu$W?`p?Q.V?gLk:<S]h#(PM9r*Ke(M/u7U7`jYG
%%S!>L2.VqGNKoV.;7!9\4ZX7<6.]od%js#jrM\a;54E1UdM01^kTCrW-j^uZT6E[uk>hg.<e!22r6<-C454d)U=Ar*AJgW$K?dV^
%6Bb;IApL`l!\QcSC<275.>LU!6VBei1POTNBFIbP)AK&C$!#e2SnNT&THHhX,^B,hq*L(=oFKjS')#/O$c>MJg;iiQRbmQ,pZ6TP
%V90'+Wj>pe//4aGWs81!"E$EM3bg$<Sa][-%9sUWFMkG#&W2X-)o9E__@1QY1fs`.F:@EaNN^))DiSO,EZuCnUpF*eWgQM6*I1nY
%bFZNR',sUF#'6Sh\d\-"2g.ogdY^0p\C'^8H/E:e/]O+kIq+3-^b3;BhGcIi6,0s-c/LGY9XmDUD@>ba&\'<B4a,4K_G3!mlF_C:
%WUuhJRBU%*`Q-_M*H^MD,LepCE$HG*$Jp^e7>iDJ[fFkj-:,J9g*PM.]jXg,mTV!VIJ0!/4t:)m1$#**>sb3h#,,`0`7%Ff6,4ss
%,mieZKR@mI.@f_"@V>sk2Skn(=iH7ZP$?JWh%Nq8!ueY#H>kc<ni$>l84HlUd*rDWT!gW$H@%"_lq/VZW:H-40M\INh,GM3E>m@g
%TqB?Gj_dj)7V563Tgn\'X2t0Hp)X]H[oWBl'q6&%QZ5.B1$\lJ7!s0Q?W@DWBlf4Pi]jfX93mT!TYp%l@T3^LiU;sA^Ek#U7eo+@
%ET[:jj9JZZ;W_PdKMR^q>%G0!b4r7G?6K=UQ/0#]'qFVq-Q=&FM6@<YnR%*i#eq(/&WdT[l-4!CCoR"q@b]$`fiJt>oN$+-BG)[,
%dt(IH2TpUKOkB)Y`6O@\:*MFHp5$Xl7@'%oY;H"f"R*jK*/gf)1-M,PC]^r.IcF]>A6GGB.aR1_k6sES7s3Jg,rlg5A$GFE?im]s
%BH;$tYotF3@X<`-@^;[4R#<h>BoC-5,g47%0?7OO1Ctl^P+!)A#FjWedTES%KH):b\'*1O_$?R2)(6i2:3'!0>#]jf3@E98*:kSR
%KRfFi^0sL9+k.cW*U;\^6=`gO,u7YrM*%>CfQVhI*Xdm[?e',r7.PUCekNuWjgnE95>WT:?69t9]#@X]C6+[sKQpK%0/5%ZP,o\]
%KkXaKG#sr%]V#oGfBVCD%KL1EeLBki,i`(kWg#CbPmj]=bQ'$W3\f3$Y&e*_'BB#3TpY<Z.$cpM!/[oJnDhj3FuU3pSMlYir>$K<
%m,q!UJ_o;FZn5H(O1,?p?p>&#rbuPifO1l!8Kn5Rm8MVs&hR>,*p&gNc&DP*AB$>,`?Rg.d\&"NWa6n_'%f1(IGPp.S%sk3U.j0[
%\SI7gJg:.p`c#W)9erYSGY[ZO[Ae9cca8<3Xc/dt7hCj&.)OfDLJ$N+5DU@ph:POc/B!RPqr<iGo;VmZN];(g^KDE&+)5j.;"?aq
%!<?S:XrrkRVOr;8$BMrL*[;n#m)r1$::M-7op;u@3_0l9_'q,&6KZE6Gt'T5)]DnMUA/!;b+@[ea%D)5.d5SgirGsgl=uec$%'G%
%:CJTilEdB8a/s?XV3hA#Q(?N]gSN]ACZ%&AWUd76>>Vb4G[/GIUZbpi_($&SgWkGob\6R-.,ZNN$J6Q,]R;n]I#mGHOo!rV90dW%
%;mJ=Wn*TDEWejp,:9aEQ*Stuj(dA6^8H!H=K&jt#Sg1bmC@sT#"-A2U,tW^B!d@B!jtYlMbp12)r(H8Z!Omh!C2^F`&'3N.d]*5:
%)<<A@,B"ufHdVL9FQKW;ai9j-B@gX,^pC3I#%^q!-dS+3R6T_f"%1e1>@lE63Ii/-Y6`PBN5.3fn:r+9W:R-e[k[Ga*TaB=l3Xa*
%/D$bZC>VC#MM).;7F*iCeal+l)3fT(lqVk+=K_!W2f=fJ.c.m66S!sCSm-31A1=7W,Z7'SnC[=7\d]p;*^fMmgO0;k^\d=;Xroe0
%Bg2E"W5:DtE0o+*>-r5Mq%u/d&fNC@lE5ejMGRZ>;Hp>'DnO:l8#ff"=K6i56/_O1Gb4O3Xuh@Hh#n>S'8@(reS!CtMbXQC"@j\j
%n^)"eT;<O&n/.J'5Uk<)91NUl:o=qNC.\?a0[]LdK9%:%b8;)=:dCl]i1p&)\R(S:-GWmcCNk7-=rCe!.783f<q'D&k0(Ch<FSds
%Q4&;hmVnZmrUauLe`Yt^BUsiFTSmui+b8&g,jh#ha7]Sn3Yc=Hj5D=!flMDB.iY'Ro/qKrT/d)?,U;QsHe47MA^i9_QZ(qVfAdG?
%_tOVN2A4GI"%o-YZCZ/*rHc=EP7!J,MEC&$I-"V72WXX.E[!TXU<FubP$]SGk%'N2Dg(78iQ85:Z8^\tSVFWNW@#<D*;g.:PCsMB
%lf6)tZ2^G]P`f:AV%W-<Xp>Bo,`iMmapAi=F:K..3O1-YrVHCTrj8tjS/Z5:9E;0>12f_`f6:XK/pK:BZ_),ORBVS\YhMs??-2u=
%If@>+p\Y?5$M"oaCfX^=DlIPk1A2;`6<9`PFf1mQ@jKaI[IbQEOs$H)53^ZP9XV<jKQIJU]8PZ_,cKUS5=l&)@mAh+jO6%CZMg]E
%hNI=Lp!YkV-W(Q'E+UUgc2\45@pBn'D@bpW%.sM$83ZF3[Jg#FR3_1tn3Og:gZRGq&'"QiD/D?SrT:"sD[P"hh+qs2X.lS2Xl7Q<
%S\+=.497EMaW]M[l\t(H<8jnB(]JmM:."cUOO-LY\`h5nn8Wj0nqD40f1=gKM4[0;RXIpR<L>`%m-iHY@I9l$(cH]RlYHR.U'h==
%l8[1U*3r/V8=]k)0UK_N^:YXo1L7D.>t#Pn!XF5f;]Q(=3DOjjY4moChQq-22m'%5rS5'>8sdSI9\f7P%grktjR*=)i2G>q.-JuO
%r21BIGj9f`>kGe2k2>oi2khRM!#q!hNkDQ(bW.Th]<R<4E?8+B("E-+q4?F@H.RFm#JdUQRhW^.VTHYjY_]?S"kZ^]LCj0*`>:>a
%cW.cY`Fj*TNk=:_T_Ygg8@l.cWYni9`b]k4h+=E%#DQDF*mcF95(M&Wnt7(3;3qZF*b0khWoMtfCE,prYL=Z?[SWVcs#BDgnf)du
%dmsT@<+NM,;PnT<@(mtNH@ig5k9*>V#,MDKe[aMt_@@F)Z4tt$Qh4Da&UET/QZCtBEa_oUan4Xf'A(&A0TXk'*iI*DO2ZNNmR5nS
%hM^]8`ZLi?-4!n`2Xn%aGP0F&OLOk-Vco#A\*>gfHS(4B;i9B,m;\Qd'p/WS2V=pB5_O>V@bI2.3C:pS":'9Rja>YoQAHIJVtZCF
%q3Momn\\CUG'XY*%N-gWMZc\:I\V9S]R+\P.Srkoo9t<M+]4iV[<$A]luA'7#gT(+!M3m10dSW7FE6+!f-t2@0I_`Z*1:i\hUFlC
%8up#@g0e1_pTX%h'6af.g'.fJ0U&#6p8@RTm>Q6%J6A/lWGiXcnG/Rq8NZ@dC\.@ke"N<@T2]2nh]2<XekjZG/?UhVos*_1=\d1a
%-D9^7#/X>A%--#,Lu'H\"DONO,FUIF9N_>EoFYmf@af8s!N/oXh1qQc4'S-0l[6??7o:tSRerk9$@kjpjU.Fd#ZJXV&#E4L6I8%!
%!KSn'EUG:U=Ya`B7lMg+PK:2:s)R.(ZD=%RbjRL=0F.CKjR\:4HKJri8(k71:mZS+2OJsED.AocH%cAX[5c)ZMgA4I2uFWLlpZZ4
%.)LP$9XD2fO@!<"8.YOp<12[YE&b;q&"_i5iS(Bl*AE"k'dK$-RlQEgODlRUG=[t%i],R"__%$to4KXG089E#CGIak[+B(6XrmSI
%97O<LcR"nn6(]iDnRmUp6ao->M;1V:1-@BbJ6<n3In,6n#u=PZ6">):3tBo*"a4A25**QN;)OCAn>FNpkE1,3d@<"?\R-EN2th!\
%O!!D/9:^X@BQR4,_XF55B;!VX!IPHhbt04T^(D9I''WimD_[9)D0Gti)BL`>`oG'rUm.R5+Q9XtF2'WDoB]@VMGH><Nle.aCTU6,
%.4qS/W1lGPK]q0XE!c)C',2ol55^dIKh)Kp7/'@D=^2$EXf8jH$Oj**4\qfhEa]+Q`dg7_@oNqd.$>9cF&BUe`oPV=.sXmdbGmAh
%4U(Q2MhcW]kS=K\3F,!J21p@*:4p^f>#Eo:<@/[#EAa:i7s(mU;Au9H@nX^Y!W(E)r5U(j\fuD_/QV.!8pi>RLFQ-lAUDXS28V5"
%h(_,r8<m4*W@kS7No45C=rBG_PRrlX[sn(tQPKTV#BiY/L#WWC)^&^S)9`l"=Ko-kgK[$7@L+g#Z"H.8#6-;E"I<8pRg.RrH9[Ed
%<3gK@Xt<)ZRH-U7j!,=7q'-,lc:iT,@>K3O(ed)KX;g-^dj`B=kTbPci:1GU(%24)RC`i;H%^QGl/\9/S/X8kr9(HUjd+lXAi6T:
%46)N`TJAd2\-NVm6qV1u9*2,64_p*iQhkubhb/ZgQ_[+*(Ss*)Zt;ilTYa>=VL1;[DF%GK>ueDB>JCFu1(NZJB,Nbu>5hhdGM9__
%g8\mfo)eT!E5)\%]g,m]%g41RHb,j.kFM>B0A%@%H]=Mik/2*%BF.teA3dS<NM8ZAd')"L]cp$SYK53XA"$q@p*`3]fuU;C<P=(u
%_)o*W$bR&h'W[ro$+qmuEU,D.b^q&kKTmn^r([p1;t]NgqU1@s,4QA(&@j;;/]7uVeVFD66ud'fRW=:8!%8(NGGU^%.%2b6.A&9Z
%@V)2[.hnbO#BZ5J1?Y.hZP3;je,LOC7=#?[\kJ$qmQ6/fkW,_/eAeDPg<$#&@Y0;$$4@'9E7fjr8$[39j/+;%EJjLI:*+Y\?cO5p
%F4;=fbt<m3cL.t$a&KHY:/K8//Do'`lfE@=kJ"C[Cf@`k&\*LZXM,snm#X*SOmdoK`K*Gho[MY:hO2I'cuaBkKfnk(n*d:Yh5Y\F
%-W@?K#gljYo@X`6BUY0>2,DPG9lW2BbH"^n+9g4&;sc[62Y3_"nS6r%8<bEDBYb3*aI?W/r;#C=MpI+p(Mk8C.(q$GL`n,iHkQqJ
%QujPW:QJ)5`%P.QH?_r<_N8aObbfj&W2X7E.e,S.J"tlJ0@!P@\_LIZGcE4'1>g*t*YXI[=b?DD'Q[)iTACnI(9Qlu2GnkrR8YI(
%"aAC8?K`[14H=4+!1q-__lp,Y1`T3e?s.eHT%\lO,$ZK^+_6_*(5Y/S0C*o8q;&0RN5e%FGWVtTg`"'bNcgt'.$=Y3],5fT1[ISG
%C=b_j@5sOjrek1Ro(]-HUIF&fU^)>%\Ig/;^`Mc!fB8p@0MDk>VZM@SA?:q'[QMTU1.#;^?JI,:Obc2.Y=S8eqDJt94F'Aj41Huq
%p\<ee8>?Go4U,7/k0H]Q_nQ/(>t%?]D\eYl>Z,]F7*R0Y4!jbPT>Q*X,sas\LJpP2!Ql0s&[OQu8#t`MOu[#(BUd:b")b-4AI:`#
%)EmVq<,36Z;MRRZHt3W58K\o8@D7`'0J<t3Xf,!W<&p`0`1\mRNQLjF6sY1KImP]nPgSPkoQr!4^6#UO^1qH6o]1]_&>Wq6aZhHB
%a.J"AQaL!I'EU$8f8='X](6Ikip@Y(]t*#>nRC-4Zp&:\O%(^&71UY]hN5Rd\8m!]g7sC$RHLSkVR]lZT;GZsAkR`uAD%Wfo]kjN
%W8>nK<lh;H$JHbCAZ>3'>Sd@Dfl]Y$I,a^oHB*o)][kf+n[L9P[s%4]3t*nJpc]jaSA-UaLds]r7N'J&9)CV+PB[;ZU,`s5/i92`
%FjrMAGLWtIZc\PE79uAs';j9N\DeBE.5['8)REdIEs\3Y%Z^M3'&%7Q]ZiQ>Ab-Y":*uDTr<m=-e4o7C^+WfZI;7"7/EMqr46EQr
%G,_1DS%QL=pNkDBbd"9u;:r:<%(/mQdIJQAb`LrMVL`&/ZFP;8"3n=CHh.)h'2()Um.^n7._Y_iN2T3NhC<IeTN;7?mf_pHUk+5Y
%"@qHA(Fj)CR$8tkmI'EJF]9pPY3_l.$e.Xm9K=ZG^r:'Mc""kn0eTI\KQZg>bY6HP?*6\)ktl9XSZ\+ETc2;]pt5:ZNB_+$\0=$T
%Ba%(SS_6Zbn0<?+clu':YGS9/fG7bfe<IsD>uu*CA$9HoXX*=q@:HZn<^T=@E@O$k'n\"KW_$;*G\uuC#(,SfppLCRf$JZI6PKW;
%Ar74Jg-k?0OqKce!RY4p,G>rXf84"jh(O7G>pQ3/H#hW`o3.KPVY5mg]R6-4)[ONI)ag%)7ln=/`-P!"iB.Mp=(E)BI0_6V)!.bD
%X9(>@%"8h%)EAp;Q%OC]@clt[M$nC4IW(4M0J`$,"RCJ9]orBnRSUOk%Uthh3UA<5Hifdh&ddGE/t2*Oq*)\c`8i%S'n/0b\2p12
%qKhSE]3RKH*q:gP)g$Jf-hK-W&W!-Kl8YHs@TpV@6n<7[EPoSuj1?"6FPu>u@Z9r$QojUPQ5u=jW<Ss!=(caRGDnLjA:&:f<]eo?
%UBqj_WuB\>F)nlU\3gX.98<^2h]%*Qba"f<Wu9\PSA[L\^W\Wo+UTc>$VXV;859UGDk+dX^tPU<\?&4l18J>uh6gC'l)\d:_"DJ/
%k8r;1]j0nEM2ROg3Q@C72l#o"L!BH@[42ZoIsm0![IT)dkqC;,`buVZ@=q2u4bNK]b%C"$^0WAa2"cbBDoF[CrFGKAij"G5fOQ9A
%,BRFl/QiptStH)?r9u?oJ5qam_[8&I4g*>G'MTl>r.Iks,nqdK*&j='.<9509C)<O"&Fl*[s)l-"EH'3l-B7EZRX!,JkNDcW\8DQ
%FH)AFVh4F(+g$$@7nmm6-q62+ma?bpPsUE"^P^@/2GE;QE)K9O(aS0Tr1!?^gE[>q-t\]s"hc.rW#5\Pg>edi(?NJWW@eK;VgOA"
%kBRa/Zhs=]5Q8$E!.](6KH>Y8^KJ(`dG4DT,adD>-HB&:d>r3]O3oBBKYBd@`9El#%lSdt6E!M^>M=&s]dAhY$n,$S:1u&i1t+kE
%AEZE21P:tFdo<Yi),fFNA]f%T5\S)mR+8gdErd!Vam6S/7N5)c[9;oVmdp\1SGd#555mC/4e.k*b<83eaV431RCQ1hpqal!FM;3u
%aP1B)`cL`>,Meu73#.IB+i1.oAY[lbdr2EM/_;4KE!g*Q=IA;S<Z6ip>6U\N;+>FZX"Z2tX8^=%W+du7fRdY0^bila,gSO6*u^Pj
%24<A\9L7/s7Yg.25XqM=#S4rhNbE*`lJ(Fl+<OlIlHL%:4R',hh=Y`%h6/=lN(6gk?h+1Y;g=SF_iqj+/fKF"dL_Jkft;^e#5<:9
%1Jrs^q=PKZPiGG]L@?RJS\Ec1$`fb)3fi++SoG]'0M:i1@a=&MQmX9&K]\n/d[A$W\M1UT9-6(=de4,=R(s!Q7k[pB*<jrudNC3h
%(Cpr6S!YS">'ognNK?umn;i28lBGY*hmH5sg-?sqLDV.e?"1CS#/NEV/2J+Soqu\@S;MWX2[%cN9nZ&E=YnCrJ3oH)(Sn?k*g;1G
%+fLtK4>Lk]8Z(GXe`4hERfQWCGGE*Z`I?9JpGeGIW;\s1'4RNA:icC]:05K=AL<:*CUm;FWni/eO@hf:^M=s9EutC"rl-g$g&a0l
%hIkM@rX36$FN)Mh6_/N=b;9gJ]%>TBH0TV+n$Pr'2.\I:s20OY?;L*jOF^RuPU*C(EU/U=ANl4*3+;'WTb'4FX'ac`F\',13T`dc
%krM,Jb2[Ve&egqHC#D>'a"d!R&kItV"o@IiZUY"6h$DJe,TCZ[_3':fcWbbC2aV&OKIT^nqF5_JZn4[kK<d2S+f*-VC')^,!?&RO
%'ZTX:0f"<9OWHGmI91aTF=^31#lAmp:d'>*%gFJ;U.UKlGYCQu@K!I'k9A]J&)=b/SL)5]Gda3Nh^;&`DFj*d1)ZX!a-/?$QX>=L
%I's=oR#`/Xqj9-2""Hj46R?UK#`P2,C\A&dEq:/-e.gT$fh-oXd>F7]@o?>PUTapO=k>a*lA^!I9YHLl>*S+ar(CBUbuLn"*%G\R
%k#TG`8`b_N=HsepHrp[e>Of?eQ4Qj#;1UarclD*MA!i+3=$lMiDgGg1%B7BX0lO/[i;@T<ZO9o0i@W=bPO;huH1fhPlm4W]p%[$J
%,q64e[rt\Z^])04577P[qHG\\<*.`K/W8OZD1n2hF%SPiOhYgn,e9Cb8NCgZ,^'(\;87S?B9Y`&ZId.,f]OM)e^er<,q8N-Xa/e@
%8^@%Hp%s1Ubh_C$O8AMg5Q;MoZ(0I%qA?;C:VTo*^5kR7#!7g,3H%e:#<aI'@BX5Aj8G!ej/)-WXqV2^D.sr42CRgZ4>Ljcp0l["
%WcmY!W-d8:-WKDU]fJYcG+-F)4FSl/ah)9Afg#UW>#3jGFp1i\;U'(2(K?t*;/;RP_i5Es^nsD]6e,NGADf5^[,l:,#drD4E1?;Q
%N@,@X=L8.ecBboU7jK8>QaTUCj,RR0Cg&m/po'A2Ml(ZYoI[gN[>-qN\$2^Ka0S-fF5uk_e1GOR];H>[nsnjOZTVe-aaMZYP,qM$
%$+$9qB+..B@a9JZ2P33!<dJAen,X`392T)Z["F)CjX-^^l,3ngr1)a#<qOTSM?=-+8hV7P-O+]'>E-%*:/bl`SmYL#CVOAKRJNVE
%i8o#R5+bWt^(,CcGo1m[#s**(#YH\QjDE-e8U;p=J!Sd%K*"NOZ!g!JZbB0i4tcR-\hG5@_2k],lDDk(#_P=5juaTqn]LFF^WCG]
%l'?_-191le7uQ_N;?.5e5!"2C,:@-XnL+i[G!Co.7=1g4H-.3YL>bLE8O`F&7KAZP<7tJP(FpNIg-)5=jIY+p/pE`Jj,XkZdmYA<
%fJ.9(Z%^gDQmYHq8=9(?U.LHBA@b+BcA=<KGkEAHZ&q:@Tdh&f?mH[W(?2iPGCn7JmZ;B#Q%=SDRWXYMYk_DuFsiG:m3^F#r\<UG
%k8P%7h2Y.h?B[$hHD%1nL"2s+Ol-G+,TKDUe77l'8)MokNp@+ao>*kdTW+a\n5%V8b9r:PHIAX1@s+pe5(?sc/$,3'6<J0)H4+oO
%9VlVVS7Z]BKG2EeL?C;.+%b:3jd<uMq`lUIq7]A_Kc$(("rR)mrOT[le/ZW[!QJ.%:A91[JtL(:F?Bk:6J3R_P@1K(nU_p3W?BE&
%THU+^qXp9YoHs)<l2XOn#36m0"_u]E&V8E'9ED^\%t\iC3&r:EDd%*m3$CSEEb&,?;igm-Y%CFWiPU-o^=fIm_E5u!<6nnqTQ8g6
%:;\'ZT,6YM?P&^W"ZmI:i7=^o5T[LeG-=?e9g7h-6b5O$8tBdt26CX1PYB9*<V-SD?WVH2o_6qd>ohJ0#_;U<h3<nId3;NgfU=n5
%NW#!Dko`V)G$:&!c,EoK5aBLh)X\W1j:r[Fhl%S>aei\lG5!o/SuXV<I_I)E5,]EZWQbn&V8jYr]"D$ZGqE9VRR)m%,tb:,*!R/+
%Ef")rl1bb@DWLr4%Rh2IRp'U_*V+OJ>1-;_1f4^lZ9u/rH1>/pA?W%ug/<hn,BV!*j6Nc8M]YQj$g>T+>%U!]OQuM9dH19\(iC`7
%.&NtW[$To\eSU<J7](\#5./:AIELT,91*mpE*8P6#%;V]j>#:jpSl\B*>)<;U^,94f8q]:U5*QK\Xo#mb&eZPm5.5pF_WNo!SuO)
%7P$I)J^IW_!G78R7_jGm49f:L@9p^k5,"JZ2n%FhB[TG_Mu/1bf#Oi5LVXYh&ph(r][t&RrjnVDR2lII:a+*'6!1M8W+1THDnSWm
%(\Cs<n$DKC)0-Z[.aNd0n;%I>Sdu!G*<_C*Y,ZZY"Jl8m>r.bO"!N*@&#Pud-[=Fai_f<^5,TL;Mi6Yl)2G^"m0`/F3-A%C.CIF-
%kjT_ASJNR7EKqRgL[A74ZpQUUiQMJTO>,O)1TAmS0V(FK(>:k>/F2(D2$ZGsVDNQ7f8q=jl6WQLCd#X!O>4OB!hl5E1KkmX#%17(
%Gm<Zi(K4DKT:;@<4t6O/d/bM7#.]^iCu>qJ2_^Vd9SlGk34hNHoQ#3A_k<4bf^Fa,3B[dsE:cf6*.jMUbtY0;EUsD'd`"W]4Y9:J
%K%@5trGbmMe"XRj^s>4QA#19r<!nhl\O-Lr@>/ldl6M_O!LPgk"`9pIC<g_A$0R:3Ms+N_=EK?dWk*MFS$]6S+t2'@A4Ld+4)?[u
%H7bl6'qp7Erq1oU\u_BDpQXt)qkb<`AK&"OWP5j>I)!%dOAW4M,8S]XDZW<gS(p<#^Xdc_.^[HP@BS=e8QYFZ8u(X>f0<``oL73l
%YKN@aJ_fZd\l%n(Q:@tr6Ej(&\d96b6f_.g83Rs,dK.S8*&dEbCLR-hI2K![@9_5]lB*d3!LhbtUaVLgUrD*j_I[G]]4Ua3B+HYC
%IDq'B7Kn&XdRjhG4dGA'LAl!hTEdqhUM+b,RYKLSl-5lH\h`&`3-Obt@_DVB=X\AGP(H)q?EjON7@'_`F5H6@J9fj#oCK3TU9o6c
%\UonAnTBnAr1*-Ks%L9%X5Mi!jbWR5k+=(=8"`ZN"dYg9V3?E1D_QJ,E0Q%2Fp_=nkpa\7d<M[:l^GDgJt#V:qNbtERjB]tHCthT
%Y64ljoc$3CLG^'=T7'?CP)qZVY[bml'jGL"l/2KI*j0"b/"WPg,d48,qc<Y$np,?:T+HhJL#'L6QKi0tE5C#OGuQ^8*Q;T48Lqo\
%'i?WX?NV,u$,+3R>`0c<f1IR8;r4C+DMbTaC9stL4S/+?.c]aPk28og%pV3>/`XV0ijSil/nQ=\aIqANq'[]ic,,eOp,iN@87<FT
%lcEAqMl1n9UsK]Ya*3mG'XKc]^R(aQTM`lq'LVJu\p]>q3<bgb"-.p<83f#1Yu5ZT8B`*dhlJP[i<+5cUR-5,k0J'<lk+7,f3e;9
%"Sq?GiJki2Ep-KE+1*5h'pa#T3FX[.nt@;W&/bjQ]h?]41-&Br,tic?TjkK_1XE8oi#%#Sc\d3#nmQg&<1RGV'ikjcnhg6B]C"AZ
%c_5dAXh<t-gdR%2kgCGE*'L/f"hXRBLV*?!VWMP%p%U#4V]T$I:OhO.b;5p,%@:b?OS18tSkqce.Q,jmV.p+KUPpa$=GMc-^W:h!
%(=KP7c`FZN>d$\i8/cS]b<C)eKFh%u-9bp2kbd"Z.d[.966:,D&b=H5OCtV]9#r5nI&@RU]-3cOi.j\CB3_,7U``gqfF:tNU4O&A
%A)`8]QJBS@!i+tG^0M6rYQ!jVIf(W;BD,$><E(ofM;^rZaZi:[6)f0CnDU5XJ`,VBk%c3h`ninNNm!0DUSI_K)<hZM)o5Ho->4:?
%hC^/DPp<.D:U1io+0UoaN_LOf]:5Ofr:&8Y!Z](.-[0-`jE%CHB">+[m\^>s,p[ffNA.hVNH3@6.Vb+Xb;5$@K@3+5#LIcDk*'B>
%ZC9a"lF1U5gXZ8Bj&('q3]#QY+f>qgU92R;e&l5o_B?p:V?[eRZFM*0mX`9:M-mu4M&]>#J;d`CXL&a0P#J+]kS@>-l)PfNauN@Q
%aB9F^Qp]jM\<rADn^ql"4o1A7=6pObfR7&NO$=$Io[P8&[YI+T_L=Xl5o>\s7Tq`\b-3.dX0G2V'Y+&r&2k^>>QmVpFP.gogrWJc
%Os"..1%*PTcSnkc`$m'L/]f41Qa<&c'D_Pp[1moO)qultO_mUWnUMVij,tZc-JOW4;E).>,k!$VWXHpGdTVf?\?QmIn_ru2@Y[!D
%hh,ip"do"GkF1q'+8k?SMsJcWpu"2eEirE9d1=rs-t>%2'-#e@VuQNE9deoH*tLnR:$'sl-T2^@CgX%3'R#/,%p)q,]*X3Mn9LDV
%+\2C-UV;(ip<";G\+_^,B0nV6kmSO.<tQ,"=V3VU*Pgg@]-_^)P15m2^SK-hkrNsAJ,#K5nD>NtVm7,7/F#r(4P>$>BuZB86_]$8
%1/#;_daa\Foc<qsreYqep9t=UK7ol8!3'PEEBML90<a7M:OLeUlk3ce%Ng'2$Od<YkN,9(?#[(s<_.)pZ0tr;lmmLZ.]nl(Nn)Tm
%]hZ4*hH),&*,^-Ocd^g+7*<\;qRjLd@X,EfjksUUn%>OA@HZS[S=d$ZT'K?WOpT/Y]YeAXS,RSNPtMt/5\H\'Xp\T7S6OE`%nUq/
%me>UsBO=9DRhYg#F-Vhs4mTE?2nS&YC.5\_6F,U@chQM+chHQR!/^oSk`>JJBcS=oHgI;AQ/k%NAsKhe$Kb!s$4W]nN(JQ>C4#*.
%5((o$/h?hh`hH3R2RD*6^^RQq!"Ae::TqJ/XUcp`^H3VZMI.X6R:"848W^=9El-eQp1KH7'9D)X_RO5Mf1VFW(nH&<a4+ULPU.HR
%;T`01'B(\#4rm.tZ1%EQ/i9`E>H@WP9Jq.<'0Yqh;A_Yil*-Sp[a4`m;"Th8<Pa_e#+*PO"#]OXE,p7BrM6J:="jfAAlds.-i;X:
%p\itCrA0U<WhI8F<klta[Pp;6GG->RT7n#FQ2T[]83ZEF;S)hc1.e;?^OOb:h\`bF(c^6?U(E:IRtV%/6>]+@RGH\Zp$Yg5KfTUd
%2318os.@RKf6/\r6KTcfF<8/?48eGA';PmhC[TqFK9?\K]1LAr3#)^]--TVVjB59n-IfUIr*>'kTj"pX0%)C-Ts1!]WmT5MP[=&&
%p7]-m/-%OD+VGku8m[g1,M<r%/Kqc4E[7ONRV0SD.B3#P2=E#]S+'?P@9[r@S]n]49,,]O5n^eR5]2N+dEAW'rHK34\]0[Pp$4Pc
%J!)KEdF?g=EB7^r+["A;-*::MZQ[X^\=uA$W=[=rn/QLM$'I-1e?_C&?7,LMg8MgPH&a-J4eg/#EgY,9Q_LW/h:Tm1J/q/Cl]Zes
%/P%%B%dO!o!(M1Q\$rS1W,;L>KXG)'7u>1.bV!=3Q)BasrJjK<ddE*>k]ECBn=3Q#*bQ+.e`2in:!APa[:X8=-)3^'I3cHb=Mjc'
%ZLmJE370h;JY<j,e$YA7EZq==JPD+tOD60O(MoO[RUB6VHLg1_%qe9A8U5\7^5cB$8^%[D.<=8>SFc2fITk3Ud/Q8N;7W2cY>Z&P
%PakpD:$V>^XbD)%,@a=N=Y:=HFFZle<0WXNkO'R'!\"Ab_@JPNR5%TRhd)R3-pXq=(gOMZ'>PLHM8F!u8l-?-/a/SSBO.endo;U(
%j^$=I0s?6oI*aPraXY_r:>WIK&P'uemIK(#;t#<k9NXV*8F$KSBU=]e)^ssAgn(Zh#cSlg=lQ*Z5n;_^EU93?^'!I/b3^DmXo6&1
%5L#6h`oAmheDp'WcI-fMTj]'8^LWUiP,I=EF470)pgeFr$5"m[Ri@5V2GG2eBu#s.OeEP'?KTMP0\TqrpEGr/qSCq"Ya6`lQJQ+C
%a;KIg)q1<VC$q2P&F>Ytg-hd5cSR=DP"Q81&Nc'p2R?D+(p8nJ3(jRtY6s=1Hms-e0X1Cc/(#NO2&,I<,P@&QGKt2:#LfP'qa%,p
%P+LFIrT,b]`%6ANgZ`URMS%+nkg[,?F![-H,s`VAla5pr]b%%iaWR3IAY3OI'^lO0]O<GkTZ!mGnf'a>U\6Z(2"@>0_PP`!<T6:/
%%"Cp?]?7RF:nZ.dmAoOp2j<L*`nKrOjPB,edZ;NI(-[\JGtcEC_Qbm,cjl_Ik-1igXkk^A8NZ@JTZPS]qhGgXSil'9UnSi1M)nR4
%d&6BIPj?$X\X8]MWZ3U9qSL7#^V'<eY5gQH5Yp(%k-4erfeCV&nMjlVG\j:[k[d#'Y0=@!!uH[6TE(Ku-$"8?;UY,SLD0Qad1A+B
%f']sJedCO%j1+&FK;B%qa]XMMhVM)&hj@17&.,TJe<pi0m's$;E&ag"SMo?$T[J48>+I9Bf9l`a**l.-78g^b`C/TC1IML5?\,n:
%!u8Dh%u3"XM',t90(-T4=KdknYD.eqfteiRAYH@@#pZj_W5`=F>\BiMVD1#-S7?N(ZKtJ[5^,mT2m,1F5iR?!O4A2ZlLW,F8gL!%
%4Pno77)^K(D5MoLKWZ$k9:7X%D(;6;Ao"3#(u`X(\PXC:HE,[GKK>EDi0NSMp3Gg48nJm"STbU$"&gH@YspI6Ct&'A1>)ug56Ea'
%bD^$PPKPL*6^4$P?qa_uC\HKmBtO+M2mNl$JNRD%L#E*Xo<_s]qQu31%?r9JhceK#SFOdBqPe35S76#([l^-+Un*d,EusfB6$B?*
%=->M8P+.KU/QiJI8**l2PI[3iabDCm(6`,-1/sW7eF'Wi^I;jjI#0iU:jFOl(`L4)""2'U@[7tLX$YR@\`6ZV4N1dAB35cWa&H'4
%4SsFfLKP,hFpdht0n=/$dGW!C2MQ6,?Zo_ZLP#KhTm]WkoLQAQ1Y[6KPVY,[O*MbfB@.?9ArNKUntF0kA(kpp#3T%h#Z@uB9*kbQ
%5^[T1D'l>tcM^]VlGJS1F-/#A1"-RM:U8*8/*;M4IJ:M(`MuAV5#$F['];jb@)u/cSOK6o\;[a2Q9ggc\[Y7&h/9N,\t+Q%<<X2E
%i_7q&RD(tQJioQ4`9-%i5Vmkt)CZ3]P\LIk*?HatP%*G4FaM)TiH:F9o-[=A8@RPn8rHaX&Pq[,!emW>RiB1_)A#tq:h@::j/NQZ
%"lu]C:'3.4anq=4*ooB`gqc?rY%i:;^hPH.Eq]gC]_1&bcu:<$'lQ'=oQ'%u0nI;rlKRkQ*0NV\oMe;4D*p*.#6qts)N[OJX35p%
%RYL(0J?d4/(3C&KXR2n#Q_57h9L5WrW]Pm`R=O*[5tIP^<L_=73nMtho7P=c]rBo5d?8)>Ag'&u6B%3UcPjf^&cLsN@p:&<7T-go
%c&^qj>UPfQ*fp]X_ie\cRtB/X4(G.nOd!ZAe(<H0`7U7>9h'8B"45f)pc=e(>9IaL?<$&P9p_t-Jb"JoD2=[\J>'cW,jfuS_,$-&
%2p!t`KiR1uo9P\KNj]>$N,7$?4qtCtGLbsDOs[#.1<N"?^+.s-V=p;g2R0PtL8i)k9o>X5l?^-?LG;\!lu<F+i&Ul_3e--jcseF1
%hp3,,nh+4Vp:.oKj=of.W7#?p&,n,_V/DK=I\a](cHM-D>X^TF"LL*d-nSsL5mk@mU9ni:-rnk/]?t;[i;hj&\pXDk:&T\_*20*'
%B@J[C4j0]04N,LMp+/bXgm]WI28BCQG^O"a]J%TO+IoAQ8E3m.g`5>bVLfs_kZ.Wkg&Q.XZ2Bk!V'dX!J9\4&+=%oD8F5QGa.F[!
%#dm5!ltX!R'sXLi(h65b@`R7B:+[)1e?2\J(`Ob!Z+@BOCWh9:%LE>+_E$"L,9q<a1?g!k!%s>@c/t3H[YHncp!n4Q7a0<1VgD+E
%HF.rM&Q#;C?gB8KXJP(XB3JGK7OGseq;^d&r)"obl9IPd]0#[`m&j%"<hdR0DEDo&m"XT6@B.(JD>]3P[MTS^$,3(i9(4U)Yr$dc
%(b7c*=B@j<4]*e9Ed.hH%^'c]<`G^13?]:E2<:%ZY):lg:X-Z]6Z;&XM3EJNr3CC;`m*2nf(e?2BX*oa+$I.>YH&9$%-t^$fB)$O
%:4ar"$U%=7^rQp*'=WR&&/l+)7XImpMW/J6dtG>YQJ5[X6k5A2g'g#1?nZ.f^(;9=B\):DY/G*WV74\^)8SCg<$1]kK45)C6!MUF
%0:8!17b,cFm:d-!ISa8EW51:j\H0g`m(gCR>HHIOcM+=.4qj-?E)<Uq9^aJj50Wt:fYVWR)d`j$CN>eoNAA$Sk2%iMeU^`fmR+$@
%@*VU%_q6p]!=",dH[!U&0OGAtDe\<.ST)1V\/r*Bj+8fLB.EcO<$2=AJ7B-)D4i9;6>R4qU+%cl35`#*ZS%6tD%rTFHD^AUf0/_8
%=9=1R0kq7Q1>.,?mZ@RD2rZQq,@`J98ZjGfr5XWk>HF40%Pg_M89W7%.ti+4A)+Y(WfUc@'-Pn=HkEJpgdh&;$o^%]YLL*3j$!J8
%'TYa1q$^pEEh;:Oo/8Z$nLWu:hh]V"ZMB"Zf:'eZ;[CnX;0NP?mT`_4oCrZZ(/g1oKLHk[?%)Kn8UkrG!?FCu5hhmM0aLm:fg1Y`
%^dH!^bcV1tiChoTbk6tO2ej-7d*U_Il;#lgFW1dTcr9Pq=P_gg$t7mjQD)5(6PCqWN0g,9??[0k.70@N8_Ogq&=7;d@BcCa+=rfS
%il3`6#s?#Y3$YCcp`0\"hH=QViT#tF:jaLuo/nW,78N2fPDS)c2&U@09HaR'NuqXjEC9>r\4tE^4TZ[0cQHhQH:,6*f.f\!HODJq
%a^Yh0a"G/3WWfF1rlk"Gl[-Z!\S-j.[&1Q6D!`d[<3PM6-1OO"-d9JScO8j<DObTE23`i'3,OMYlH@%PNMHJae,3l\'qqh<F[GKi
%bsDrJ<k_;]=@pZh*rfA3$KE3dd_'eJ:bl"=n8bR%p3>QIHN^p?$u=VGV2C8B$XU7Z@S"C-nncsU2b\B#k/p/M%gl:oP"d$*PV)jd
%6KjO=#>NU05^/iL:(NN:G1?]\kCeR[km/_CSIQ7bHZYBS!I8sO+&b1r@Bf1lnuJtil[o*_C0(f0;U#M3LtgC^?KN;L$.Fm$>.$YD
%'Fo1M.oo;djO9[q?#u-p)"$THrAAYo-#jU+kTZ^!r9;5hk]>-+s-VIZR/`m(,NS9?2$B(RV;]*I!?_RR(u`=>gJ*O(L2epg+0BHS
%^AYqYk4JK87mdk@a`u%F8_Qs&,/@_WdQ,0p0g&Xo9^!dm)b`%(>pN?&qRN^";2(VcA7GB^^r0^5-E&i0(#7/#Y$+[Dh%2qu'0Ja"
%Kn"/W%sMqAcScUj_a=%LEn!>0=M<l-E@Ul7,Imj]T6>39qbJmELSG-5<PA$$cfMDq)'#_UaU"(<E*q2I>e8t0V.>rWbdIPIQ+)t!
%2AVh>UALU#<hBL_?17Z$oRSu7KO]U;<;KIQ:j:djSAT`F1`P`eAfGs)_l#"'RroV73DtN;+\&+P\Pbl<H7PiIqk]'*&(iMj<*Dt_
%L@lQ=;WeS?o?,0=@EsJ9@GFsTjCG+uBSKp1@J8iC<hiSLYo3'lP0Rk-Q_%-8RIqKKcl.bZ/0r>SRSU3W=B/.(&c;MpBlmi@o*`Ae
%Qr,d^+aXoAC8PNiIJLWV)uZ.W#<(Q_7erXm3Makq1=:Sn^[Ha=V-ZJdodaAZ@D0rr`n`NjV4_5WR&S\J-6;M\;kN_E@^P+URPbO`
%>)4o=mN+(iBQDh7^pDW/$7s?\hcegX,)LT[=*BB,G2nt.YLJNEBfj8:MT[/LdX>rRL[32(eAjE1,P6,NIScZFLMe2L.b"2#D(X7s
%QDQC(pA'`@J`2Df57^G0-:0I:S,/'Xa`:3i#$Z^WrU_$io+%N4:So_.%%\kd>DQ+`eF4@D*c7ah]r`-eI9D9)B;0bHesG"gU\95)
%HA!;G@*=M$5[cCT>=Aa1=Hh0!^2Q2XA"Ct$0RbI^HM6>1"Lu3;bfcr9ZnjY,)A9rH.?KJgW2(LDg1sgCb5)$jD7gVTjb?[5C0S^g
%P7CBTr0d"Ef6uO'/b?o@-`gH$I,"nO[^#f*=YnjcBE.LED16]='FANW`g5ZAN#S4tR1O.daa?4bp[t5C!2=us_'g@i+Yr8!)R%L"
%DR`m#].+&<b8ppU`$)464De(SF+9)cng#b)O!P*D+ar=<iDKbMEoLkaL2fpOiSJO?RS7/U;n(Hg-i=ir_;?_peJeE!;,=-bXhLtD
%/r>]<I<eCaXp'H4<S<Pr'mk8-DkR85c"/MOXWbJWIt2q,2gGqL'Z!-m)dL6CPU9F-!c>7rUY0l>B8_F,HU[ceMn6BQMJm6P$nL&2
%Q_,<+?)D`nnK=E_P7^Tj/\GE0;;\UXUa"rP')4T.=OXHls2VJ=rr)+6/E'`rX/R)El;pfqWlcgI[=qLDT<:j]g9fb/bi06JYPL^,
%-CDHBoiBe?DJuN+d=;+NI@S#\B<XpQTCVcM4Y!%oV"Jt+NRU,T?G!,+YiT\D'<#rRetL>4FZZWTUc]Sf5U+Pu)t#GR:<Usp*ME:_
%0@kJrq,Yu=C$H`iPEAap5KVU+3fo!DOK%BE=Br0/\tZs?D)Hm!?H[PaoNE_&Be_#+:&8UW*J/71+FhIp.ZCL[V$:fGP&cAa>NK].
%+_?Cc5gb3;.iV&[&*&47_$DTW:DgU<c#UbaX+^.Cs+DXdF]VjIQ65'gaTbi11_-#(;7Kf<1quc.gf&uZ7mm_gDcTq1&"l!G<<bTI
%VJ/^!W7P3A*epk8g+ZaGPonXVFHhha7"b8A)c5'Yq7rcB"Zhb3qk/dCFcmi_6AE9R%sq#$WT:.B?OmB>'CU;kLF236D,%CUTK%a-
%<%4K-X,lNSIU=(r=bEI"!/f%5TZ[2D;)fO9Bt]G)8FYs"s"S=)CRu0Hg?><ARo;Z9-YcjQi1mEj/9<DQ5?3.'RKJ884=R\c2Ua6g
%0YE^NWj>@@PLSP6s08n?6aK:b9h'ZVKGN%f,Lk^,PI"9.<C<$oDKg;Q?c$MW<`RUbI\ZJG2[";'pKD;oimg*Ph]5[3\P+W_QoGe$
%<D8BoVF'ICK<'2Bp5/3'3I4b\.BcQ`.5GcBF-jL'-2FjHT>)tir54$]YQ*/1rAXcTpn.TRJ,!CMi?/*gJ,8>Xo5@re^\],Qn_aAq
%s7FY;pqQdrs7FY;qHs3us7DBPk<Jq8O8n0'r5\j8O8o$Jrf>Z\rUK@Vq4IZ8J,YN/r(hh?VuQESra1iPVY:OLpNQZ2J,&L3otU?Q
%!$-lEq#~>
%AI9_PrivateDataEnd
