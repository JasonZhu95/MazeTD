%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_7.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 254 266
%%HiResBoundingBox: 0 0 253.6757 265.6303
%%CropBox: 0 0 253.6757 265.6303
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:38:41+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:38:41+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:38:41+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>244</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD0AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FWJfmp+YVr+X/ku88zXFo999XaOKK0RhHzklcIoZyG4rvUmhxV8lXP5yfnV+aWpy2N&#xA;hrcPl+yAr9SspTafAa1+JS91L8P2t+PsK4pAQ0v5EST1udV8xyS3LfblaIt/w8ktTinhYjer5k8k&#xA;+aINJ8n+ZLyfUHKKq6c0kJ9WU0SHhHI4dmr9n3xQX3Pe+d7LyR+Xumav5+vUtr6Kzto9Q40d5r70&#xA;R6scKr9tmcNSnbfpihJvy2/5yE/Lrz5J9UsrttN1VpDHDpeoFIp5RtxaLizo9a/ZVuXt3xV6Xirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVQ1zqem2txb21zdwwXF2xW1hkkVHlYdRGrEFj8sVR&#xA;OKuxV2KuxV2KuxV2KuxVD6hp1hqNlNY6hbRXllcLwntp0WSJ18GRgVI+eKvnT8z/APnELT7mV9Z/&#xA;Lq5/ROoo3q/oqZ2EDMDyrBNu8LV6A1X/AFRir5/8xw/m55flbT/MOmXkF0pKLc3ELyFqf77mHKKT&#xA;/WBPzxTb2b/nH78trTyLo9/+bX5iobH6vEzaVBdKfWRX2aco3xerNy4RL13PiMUPIfP3n3XvzY85&#xA;yapqUjWuj2xKWFkCSlvATsqjoZZKVdvH2AGKpF530ry/ZpaXGkRSWzyFlni9QyxgqAVZC3xgneoJ&#xA;OKS/RPymzN5V0ZmdpGaxti0jsWZiYV+JmO5J8cUJrirsVdirsVdirsVdirgQemKuxV2KuxV2KuxV&#xA;2KsG/N/819G/Lfys+q3gFxqNwTFpOncqNPMBvU78Y0rV27dOpAxV8c3mn/mR+bF7d+cdav1hKKRp&#xA;xl5RxKqMWEVuq/3cSb/H49ankcUgM9/Lz/nLHzX5WEOiefbCTV7OEcI9SjIF6FGwLFz6dx86qfFj&#xA;ih9PeSfzH8l+drH635a1WG+CgGa3B4XEVf8AfsL0kXfapFD2JxVkmKuxV2KuxV2KuxV2KuxV2KsN&#xA;/Nb8sNJ/MfyuugaldT2ccVzHeQXFvx5LLGroOSsCGUrK2304q+Y/On/OJX5ieWY5L7ylfr5gtE+J&#xA;7VF+r3dOu0LM8clPZ+R7LirxXWtQuJIHsNStZLXU7WWjo6lCCAQyuj0ZTir7t/5xy83jzP8AlFoc&#xA;7mt1psf6LuwP57MBEJ92h9Nj7nFXpeKuxV2KuxV2KuxV2Kvzo8qfml+Z/kfzFf3WmanPJcJPI+rW&#xA;lyXnt5nV+MjTxuepbYuKN7jFX1t+UP8Azkt5P8+GHS7+mieZXoospmBhnb/l2lNKn/IajeHLrir2&#xA;HFXYq7FXYq07pGjSSMERAWd2NAANySTir4Z87a1P+cn5z3LrKz+WNLLQ2pQ0X6nC1OS/5VxJ8Vet&#xA;D/k4pAZD5w1VbVV0W0Vbeyto0DpH8IoB8KADooFNsWTAL24jukMUsKSQn9iQcvp9sWBkw6z1G+0T&#xA;zNbXvlW7mt9QhlX6rJAzBxITTgpH21bpQ9ehrir7Z/PL88Ln8sNE0VUtYNQ8w6kwMltIXSJYolHr&#xA;yArXq7BUBPeu9KYqx/yj/wA5k/lzqixxeYLW70C6P25Cv1u2B9pIh6v3xYq9h8seePJ/mmFpvLus&#xA;WmpqgrItvKrSID/PH9tP9kMVTzFXYq7FXYq7FXYq7FXYqxrzd+WvkPzegHmTRLXUZFFFuHThOo8F&#xA;njKSgewbFUV5P8leWPJ2jDRvLdiun6aJHm9FXkkJkkpyZnlaR2OwG7dNsVTvFXYq7FXYq7FXYq7F&#xA;Xwx/zkr5DuvJH5nz63axkaL5kaS7hZa8RM5rdwn35tzA8GHhiry290tSRPangxo6Fdge4p4HFX0f&#xA;/wA47/8AOS1x9Yh8nefbwsWIi0rW7ggFW6CC6c9a/syHvs3iFX1VirsVdiqldWsF3azWtwvOC4Ro&#xA;pkqRyRwVYVFDuDir4e8/eR/Mv5Gedxe2Ia98p6m5W1lY15xg8jbzED4Zo+qt+0N/5lCkFJbnzBFr&#xA;DfW439VJm5zdjyJqVp2pipKTeYrm7jh5afEfjPFtqlQR1AxYoP8ALbR3n/M3ylYSDk0+q2PrRinw&#xA;p9ZUtWux+AVxS9M/5y01f9KfnTa6YG5R6VZ2ts6Ds8rNcsT7lJlxVgFzo+m3NTJAvI/tr8J+8UxQ&#xA;l8ehahp13Hf6Jfy2l7AeUEyO0UqN4pLHxZTitva/yU/5yN/Mv/HGkeUPM8iazZ6jPHZieVVW6hMm&#xA;yOJY6CQCtW5gmncYpfXuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8x/8AObPmjRv0HoXl&#xA;dSsmsm6/STgULQ26RSQjl4eq8m3+ofbFXzEupH0LeytIjcXTBI1VQWq5oAqgbsa7bYq9l/Ln/nFj&#xA;XdXiXzB+YV3/AIa0EASPBKyR3bp/l+p8FuP9erf5PfFX1p5X85eSNaaTTfLmtWepvpsaLLFaTpOU&#xA;T7CklS1R8NK1xVkGKuxV2KpZ5k8taH5l0a50bXLSO9066UrLDIPuZT1V16qw3HbFXxB+bX5K+aPy&#xA;p1Y6jZh9U8ozvSG+ofg5HaG6C/YcVor9G7d1CqQaVPbaxExgYDiP3kbH4lJ6f7eKgMt/5xe8u/p7&#xA;87Y9QK87TQ4p71iehIX6vD9PKUOP9XFWAfmR5rl1r8zPMfmJfi9e+nFqx3AjUmKCvuIkH04q1aeT&#xA;dRv9J/SkmsQrespkgsGaRpSBuKlRxQnt2+WKaUbPWrq2spf0lGwkiPGMnZnPh/bixp7f/wA4jflj&#xA;e6t5il/MfVoytlZGSHSAwoJrl1KSSrX9iFGKj/KO26nFL67xV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVxrQ069q9K4q+GPNn5L/mTf8AmLUfM/5o6rYeWrS5nZrnV7y4jm9UDYJZ20DPLJxQDhH8&#xA;PwjFWtL/ADb/AC8/LxDB+Wnl06prlCjebNcAaapFCba2j/u0Pb4lP8wOKsF80+afPvne+F15o1W4&#xA;vXryit3NI46/77gTjHHt4LirP/8AnE/XhoP5yJpctBFrVrPY1YUIdQLmM18T6PH6cVfceKuxV2Ku&#xA;xVQv9PsdRsp7G/t47qyuUMdxbzKHjdGFCrK1QQcVfHf55f8AON2qeS5LjzX5GM03l9eT3lkpLT2S&#xA;nqQftSwCvU/Eo+1UfFirMv8AnELQzo/5beZ/N8iFJr2R0gkpUmGwhL8krtQyyuPcrvir5h8u2Ed1&#xA;b3PNA4DJQN02Df1xQm84+qwNLIOESD2+4YqyL8mvyk1f81PNPKcPa+WNPYHUrwbbdRBCSKGV+/8A&#xA;KNz2BUvvPSdJ03SNMtdL0y3S00+zjWG2t4xRURBQAf1OKovFXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq0zKqlmIVVFWY7AAdzirwX84v+cqfLnldZdI8oNFrnmDdHuVPOytm6fE6n984/lQ08WqOOKv&#xA;lHXdV80+btUbWPNWpTXl3J0aVt1XrxjQUSJf8lQB7Yq1DHaW68YEAP8AN3+knfFDcczxP6incdzi&#xA;qZ/lj+mr/wDN3y0+gRfWdRTULeULQ8OEUnOZnI3EaxBuR8MUv0WxV2KuxV2KuxV2KpN5vhceTdbh&#xA;tAscn6OulgAHwq3oMF+EDxxV+cnlm8WGKZD3YH8MUFkPkrydrf5n+dbXy7pX7qzT97e3ZFUgt0IE&#xA;kzeJ34oO5I6bnFL758m+T9C8oeXbPQNDgEFhZrQd3kc/blkbbk7ncn+GKp1irsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdir4t/5ym/NPWPMPnefyTpV08Wh6ORBdxRuVS4u6BpTLx+0sX2Ap6EE98Ve&#xA;PWmmJb0ZVLyfzt2+Q7YoTSDSrqZWcIWCip/zOKVLUJ7aKJJJqRKBRQOrfIYoRfkT8vvOP5la0NM8&#xA;vWhSzjI+u38lRbwIf2pZPE/sou58NicUvtn8pfyV8p/ltppTTk+t6xOgW/1iZQJpOhKIBX046jZB&#xA;9JJ3xV6BirsVdirsVdirsVaZVZSrAMrCjKdwQexxV8Efn7+TOpflv5jlvNPQv5U1V3/R1wN/RZqs&#xA;bWTwZP2D+0vuGoq+if8AnEjyRaaH+WMWutH/ALk/Mcj3E0hFGFvC7RQR/wCr8LSf7PFXt+KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrZZPTieTizcFLcVFWNBWgHc4q/Md9ca413UdV1EMby+mln&#xA;m2qRJLIXkrWm9TiqNXzLpsQqsUkkniQoH68UUmmgJ5+8zzG08qaLc3bOeLyQRNKF/wBaQgRxjfq2&#xA;KQ9q/Lv/AJw51O7nj1P8xL/00qGOj2b+pKwH7M1yPhUe0ddujDFX095f8uaF5d0qHSdDsYtP063F&#xA;IreBeK17se7Me7NUnviqY4q7FXYq7FXYq7FXYq7FUs8yeWNA8zaRNo+vWUeoabOVMlvKDSqGqsCC&#xA;GUg9wa4qitM0zT9L0+307TreO0sbSNYra2iUKiIooFUDFUTirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVYtqn5V/lpqt1Jd6h5W0q5u5naSa5ezg9WR23ZncKGcnxY4qssfyl/K6xkEtr5S0iOU&#xA;GqyfUoGYHp8LMhI+jFWUwQQQRLDBGsUKCiRoAqqPAAbDFV+KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsC/Nj85vK/5Z2+m&#xA;y63Dc3T6nI6Q29msbShIgDJIRI8a0Uuo698VZP5V81aF5q0K11zQ7pbvTrteUci9Qf2kdequp2ZT&#xA;0xVNsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirTM&#xA;qqWYhVUVZjsAB3OKvhP8yPMJ/OD86nS0kZvL1j/otrKmwFlbkmSYV6GaRiVJHdQemKQhPIn5ieaP&#xA;ya81TGxkOqeVrual1atVY50U0EidfTmC9D0Peo6KkPtjyN578ted9Ah1zy/dC4tZKLLGaCWGWgLR&#xA;TJvxda/xFRvihkGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KvDf+ctfzFu/K3kKDRdOkaHUfMzy2xmWoK2kKqbniR3b1ET5McVeGeSNFstB/L1tRjlSTUta&#xA;Ch5oyG4ITtECOlFry/yvkMWYSTVo0u1+psnqRt9tT0qemLGRSryn5u81/lf5mXWNAuCYSQl7Zybx&#xA;TRA19KZR/wAKw3HbFD7h/Kv81/LP5jeX01LSZBFexBRqWluwM1tIezdOSNQ8HAofY1AVZpirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVY359/Lzyr560R9I8xW&#xA;a3EO5t7hfhngkIp6kMnVW/A9CCMVfFH5ifl55y/KDXfq1zzv/K93IzWF4tRFLsNmG4inC0qO/aox&#xA;SCldlrMV5AzQSBg55OOjqffwxY23caa9zBJPVSBsyN+19+KQEu0DWvM/5f8AmG38y+XZzDLCaSJu&#xA;0bxsRyhmXblG/wDaKEA4q+5/yk/Nry9+ZHl0alpx9DULfimqaY7Vkt5SPo5RtQ8H7+xBAVZxirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5b83/85Z655Z/NvV9K&#xA;+qW+p+UtOnNmYYgY7kPGFWZ1mJYMyyhxxK0I2264q9l8u+fPyq/NrQZ9Ot57fU7e5j/03RLxQlyg&#xA;6/FCx5fCejxkgHo2KvCfzO/5xB1bTZZdY/Lm5e6hWrnRrhwtwg6kQTGiyDwV6H3Y4q8R/T+pafqD&#xA;6f5itJLS8t2CXEckbRSKV7SxkAg/RipRF35h0RpGUyLwbYoqsy0O3YUxQs8o+ctW8geaLbzP5YuQ&#xA;8KtwuLYsfTliY1eCZevFqfDXcHfqMUv0A8jec9G85+V7HzHo78rO9Spjb7cUimkkUg7MjCh+8bEY&#xA;qn2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKfNXmvQfKuhXOua7dpZ&#xA;6darV5G6s37KIvV3boqjc4q8K/6HV8nfUPrP6Av/AFPrfo+hzi/3n419bl9nn/xX/wANirwv8oLS&#xA;2u/NWv2HmC3W41GaJxcRXIViXWb9+GB/a50P0YpCA8zeRv0Nq80+h3Mtjc2cvK3Kuysu9UZJFPNT&#xA;Q4pIZ55C/wCcrvzC8qyx6f5wgPmDTQaCeQiO9RfFZgOEtPBxU/zDFi9in1z/AJx7/PexjsbqeOLW&#xA;yvG1WfjZ6pCevGJjyWXx4qXX2xV88/mj/wA45edfy/uX1GG2/wAQ+WYzz+uwq9UQdrqKNhJH/rK3&#xA;H3HTFXl0h0p3Ekfqwqx/eW9A4A60VyRt/rDb3xV9T/8AOEcfmVNP8xtMki+W5Hga0aRSI2uxzWUx&#xA;MdjRFUSU/wAnFX1BirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiry781v+ch&#xA;vI35fxy2bTDVvMSiiaRasCUb/l4k+JYR7Grf5OKvjrz5+YHnn8y9SOq6/ccbCBiLSxi+C3gVqbRI&#xA;SSSe7tUnx7YqwTh+94f5XH8aYq+hf+cgNDXyH+e9j5qiha20fXON3NKi1Qy/3V6oAO7UYSN7vikI&#xA;D8y7rTLW6W6kuY1S8gWRPiBLFdgVA3Pw0xZHk8yuPNengNGlp9cVhxpKAFr4gEE4sAjdB/Jz80fN&#xA;EizaL5VvFgkoY5nQ20BHisty0aH6GxV9y/k1ofnbQ/y903S/OVyLrWrb1FLiQzMsPMmJHl/bZV2r&#xA;vtQVxVGX/wCVP5Z6hem9vfKulXF2x5PM9nAS5rWr/D8X+yxVk1tbW9rBHb20SQW8ShYoY1CIqjoF&#xA;VaADFVTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWHfmV+a/lH8urC0vfMUk3G+kaK1h&#xA;to/VkYoAXNCVAVQRXfFWL2//ADlR+RssKySeYHt3YVMMllell9j6cLr9xxVLr3/nL38m7c0huL68&#xA;FaVgtGH0/vjFiqO1/wDMK0/M/wDKzzHF+Vurc/MSW4pb1e2vIxzVnVVPFg0sasiODx5H7WKvh3TL&#xA;e3a7ljvlcXqOwaOWo+IfaDA78ga1BxVPHWHi3Nyu3wKOhIxQxL/j5/2f8cUv0H/Pn8pn/MrydHpd&#xA;nNDa6xZXCXOn3NxyEY2KSo5RXYKyNXYdQMVeTeTP+cK7cFLrzvrj3MtBysdNqqbCgDXEy8mFNqCN&#xA;fnir3Xyl+VH5deUljOgaBaWk8Yot4U9W5/5Hy85f+GxVlmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KvOvz7/Lcefvy6vtNt4w+sWX+m6QdgTcRA/uqn/fqFk8KkHtir4O8v2G&#xA;nXTSwXkJ+sRHdSWU0rQ7AjcHFC7zFpssV2YLGzUWPwmJ4kLsSFoeTmr9T0rTFJTDyf5i8y/l75j0&#xA;/wA0aSxEluQLiIk+nLG1PUglp1R6fQaEbgYq9x/O78t9F/MDylB+cH5fRl55ohNrenwgc24bSScE&#xA;H9/C20v8wHL/AFlXz5Bqa3EBZ6CSJSXHjTuMVW/4V1H/AAX/AIup/uO/Sf6K5U29f0PrFK/6uKv0&#xA;4xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8S/8AOUH5cTeS&#xA;vPyea9Kh46J5gdpWCj4IrzrPEfAS/wB4vzYD7OKsBsbqe5RZqD0m3BHhihETzxrG8EkYkinUrIrd&#xA;KYqCnf5Kfm7fflb5pa2vC9x5R1RwL+33Yx/si4jX/fiD7Q/aXb+Wilnf54/844i+Efnb8sLcX+l6&#xA;oFnuNJs6NQTDkJ7RR9qN67xj7Pb4dlVZv/yprUv+hWf8Kfotv8Tel+k/qfJfV+u+t6tK/Z5+j8HH&#xA;/Y9d8VfQeKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ksb/MPy&#xA;LpHnnyjf+XNUWkV0lYLgCrwTrvFMnTdG99xUdDir4GnstQ8j+YtS8r+aIGhnsnZSVqd6clePpySV&#xA;SGU/24q215BdwR3EJbg1eKsKHY03pXwxQl2ox2k1nK0z8XT7Ap4d8VfTn/OE+ra7deVtfsLuaSXR&#xA;9PuYBpkbr8EbyrI9wsbnx+BinYmv7WKX0jirsVdirsVdirsVdirAvPP55/lj5JuXstb1hf0nGAX0&#xA;61VridaioDqgKxkg1HNlxV4r5t/5zaUpJD5P8vMXp8N7qjii/O3gJr/yOxV6t/zjp+YXmjz55Bm1&#xA;rzGIfrkd/NawyQJ6avDHHEwYrUioeRl28MVeo4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq8b/5yO/JGLz/oA1bSIlXzZpUZ+qkUH1qAVY2zHbeu8ZPQ7ftVCr4u0+5khWTTrqM29zbFkeKQ&#xA;FGBVqMpU7hlPUYoRXl7y7rXnbzRZeWtDj9W5u5OIbfgqjd5ZCOiItScUv0J/L/yRpHkjynYeXNKX&#xA;9xZp+9mIo80zbyTP7u2/sNugxVkWKuxV2KqdxcW9tBJcXEqQwRKXlmkYIiqNyzMaAAYq8c88/wDO&#xA;V/5X+W2lttNmk8x6glQI7Cn1cN/lXL/AR7xh8VeG+aP+cvfzV1dZf0Hb2ugWYrSSKP6zOB4NLODG&#xA;f9jGMVTT8qvzs/MHSPJHnLzp5j1ifVLWIQ6fodveNzV9Vm5OPTr0WKP45EFKrirwy1jfUrufVNVl&#xA;e5nuZGlleRiXlkduTu7dTVjiqO1i/t4dGktbZBEs7KrIqgbA8u3yxUPuL/nHTQRov5M+WYCtJbu3&#xA;N/I3dvrjtOh/5Fuo+jFXpGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV85f85Gf843&#xA;Xnmi9HmryTao2uzMF1XTQ8cK3NdhcI8jJGsg/bqfi6/aryVZx+QX5JWP5ceX/XvFSfzVqUanU7oU&#xA;YRL9oW0R/kU/aI+22/QLRV6rirsVdirsVfO3/OZvlfXL3ybYeYLO9m/RmlTelqWmqSImW4ZRHcNQ&#xA;0JSRVT4gftbU3qq8CsvJ3lp/Iuna7Zo0t1KxjvWlbnxlBoQqgBVAKkjatCN8UkbMavbC+1XWrHy7&#xA;pUZmvL2WOGKIftSysFRflvXFiGZfnTHZ6Zqui/lbosvqab5UhC306iguNTuQJby4an8oKooP2aEV&#xA;xSkkFlZfoa51C3VZLGxAWeRPi4E7KCexY9MVpius39vdwQNCjJ8T8g1O1KdPnir9I/I9utt5K8v2&#xA;ymqwabZxqaU2SBF6fRiqd4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FUr80+XrHzJ5b1PQb4VtNTtpLaU0qV9RSA4/ykPxD3GKvz3s9U8y+Vzrnkd9PN3eJdtG8K82M&#xA;U8DGOQoqirB+IxTb2n/nF38n/Ny+d288eadKm0+1s4ZBpqXkbQyyXMo9MOsL0YIkRb4mHUileyh5&#xA;F5g8m/mxb+bdU1HWPKupS6jfzzzXDC1mljZ5pCzskkasjLWtCDTFWPN5F/MCOOUDy7q0cD7yL9Tu&#xA;QpC7jl8FDT3xVLZLHUHvLTS5baS2uiywrFIrK5aR6AlSOXU4q/Tyws4bKxt7KGvo20SQx13PGNQo&#xA;r9AxVXxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvI9c/5yb/AC70f8xF8mXJmPpzC1vdYXh9UguDtwY1&#xA;5EK3wu1KKfkaKvXAQRUbg9DirsVdirsVdirsVdirsVdirsVdirsVUo7S1imlnihjSeehnlVQHcqK&#xA;DmwFWoNt8VVcVdirsVUbixsrmSGS4t45pLducDyIrGN/5kJB4nbqMVVsVdirsVdirsVdirsVdirs&#xA;VdirsVdirCPzp88t5J/LXWddhbjfrF9X07ufrNwfTjah2Pp8uZHguKvz2i0y4vLV7pmaS5lYuCxq&#xA;W33qTuSxxV9a/wDOKn52ya9Yr5E8wTctZ06KukXLn4ri1iG8TV6yQjp4p/qklV9F4q7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+Zv+clvzp/Mvyx53sfKnladdMgubSGYXXpRPLPJPK8dFkn&#xA;DIiLwA6A1rU0xV4tq/nb8+JJXtdS806lBIvwSRJePF0JBB9AgHFSt/KbWvzNvPzV0TTtI1y9nvZL&#xA;6M3VbmeSF4Y39S4Mys3xxiNW5A9fnir6o/5yB/PQflnptlb6ZBBe+Y9SLPb29wWMUUCbNLKsbI55&#xA;N8KCorvv8OKvL/y8/wCcw/NGp+adM0jzNodl9V1S5itUubD1oXiM7rGrlJpJxIAzbgEf1VfVmKux&#xA;V2KuxV2KuxV82/8AObupyxeUfLmmLtFd38tw/wA7aHgv/UQcVfM6QfV4YoxUSBV2+jFCnp9/quge&#xA;c9M1LQ3L61bXMUtvFCGZjNzFI6Lu3qfZK96074pfpZEztEjOnpuygslQeJI3FR1piq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+f/wDnML8v5Na8lWvmqxj5X3lxybnj9o2U5Ac7dfTkCt7L&#xA;yOKvnPzPrr6t5Qs/MMEqrfkpZakK/EJ0X7YH/FiLy+/FJe1f84r+WNM8n+Rdb/NPzIPq8c0Ui2k7&#xA;j4lsoDWVkBpVp5hxUd+Ip1xQ8K8yeZ9S/MTz3qPmnVVpFLJ/o9sTyWKJNoYF7URd28TU98UFLtQv&#xA;prDzNpGoWo53NpNFNEg3q8UodR9JxUP0oxS7FXYq7FXYq7FXzP8A85wWU7+XPK96B+4gvLiGRv8A&#xA;LmiVk/CFsVfMNxqEs0kEFirTXtxwWNIwWbk9AqooqSxJ2GKHrllpuj/kboaazrSRX/5sanCX0jTG&#xA;4yR6RHICBczj4gZvAfQNuTYpSr8tf+cnfzA8t+Y0ufMOo3PmDRLhgt/Z3L+pIi1/vLdm+w61+z9l&#xA;uh7EKvuDQNe0nzBo1nrWkXK3em30Yltp0OzKex8GU1DA7g7HfFUfirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdiqldWttd2s1pdRrNbXCNFPC4qro4KsrA9QQaHFXx35m/5xE80w/mLb6foStP5Jvp0&#xA;lk1FpY1e0g5fvI3Rm5u6KTwIX4tum9FUw/5y3892lhDpf5WaAFttN02GCbUYYtlUKgFpbfJEpIR7&#xA;qe2KvBbS7gt7ZIY50Cjc7gVJ6nFDKvyZ8o3Hnn82NHsQhk0+ylW91B6VUW1qwkYN/wAZHpGP9bFL&#xA;9CcVdirsVdirsVdirA/zv/LqX8wPy8vtBtSi6mrR3WmPKSqC4hOwYgNTmjOn04q+a00fy9+QOlpq&#xA;OrC31n82bxGOmWKn1bXS4mqouH6cnI6Hv0XbkxVeRh9R1jVLjXtene+1G8czSSTHkzu37T+3gvSn&#xA;tihUuLG0lidDEiBv2lULQ+O2KvVP+cXvzgk8oeZT5N1y4p5f1eUC0lc/BbXjkKrVPSObZW8DQ7fF&#xA;il9qYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqwPzv8Akb+WPnXUX1TX9HE2qOixtfRT&#xA;TwSFU2XkInVGIApVlO2KsIn/AOcOPyikLFJNUh5fZVLlCF27comP3nFWa/lJ+TPlj8s9Ou7fSnlu&#xA;7y/cPd6hcBfVZUr6cY4gBUWpPuTXwoqz7FXYq7FXYq7FXYq8s/P386bf8tfLsX1SNbnzHqnNNLgf&#xA;dIwgHOeUfypyFF/aPtWir4gnm1bXNTuNd1y4lvb+7f1bi4mJZmY7AsfADZV6AbdMVRjPVwiPSOoA&#xA;c7beJxQl19qcULNHG4mcGlQar9+KXrf5D/8AOPGu+dNTtPMvmeGSy8rQuk0aSApLfcSGVI1NCsLf&#xA;tSdxsu+4VfbmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;8J/85W6zqGpfnTd2k0Eno6XBbWllEwI9RCgmZlG9Q0krCo60xVhWk+VPzL1oeno3lvUbmOWgMkVp&#xA;M0fiOUhXgPpOKs/8t/8AOJ35wa66Nq62+hWjbs13MsklP8mG39Tf2Yrir3v8uf8AnFb8uvKckV9q&#xA;St5j1aMhlmvVAt0Yd47YFl/5GF/amKvZwABQbAdBirsVdirsVdirsVdir//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:bb2124c5-f603-764e-a09b-4fc5afa6b285</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:bb2124c5-f603-764e-a09b-4fc5afa6b285</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:bb2124c5-f603-764e-a09b-4fc5afa6b285</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:38:41+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>253.675650</stDim:w>
            <stDim:h>265.630241</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -265.63 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 265.63 li
253.676 265.63 li
253.676 0 li
cp
clp
141.134 97.6799 mo
141.069 97.6799 141.069 97.78 141.134 97.78 cv
141.198 97.78 141.198 97.6799 141.134 97.6799 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.317647 .290196 .301961 rgb
f
139.3 86.1799 mo
139.236 86.1799 139.236 86.28 139.3 86.28 cv
139.365 86.28 139.365 86.1799 139.3 86.1799 cv
cp
f
123.036 14.5026 mo
126.202 11.6213 128.822 8.29949 131.351 4.89666 cv
123.428 3.34149 115.901 2.04559 108.251 6.10125 cv
107.931 6.27117 107.622 6.45428 107.312 6.63592 cv
108.408 7.41375 109.507 8.19549 110.664 8.91131 cv
114.465 11.2643 118.656 13.05 122.695 14.9704 cv
122.772 14.8088 122.874 14.6496 123.036 14.5026 cv
cp
.203922 .215686 .211765 rgb
f
148.123 10.3088 mo
146.135 9.01385 143.945 8.03826 141.595 7.26238 cv
140.491 8.33026 139.334 9.35272 138.171 10.3693 cv
137.716 11.0309 137.258 11.6843 136.784 12.3068 cv
135.138 14.468 133.434 16.5827 131.741 18.7067 cv
138.189 21.0007 144.81 22.7546 151.305 24.9797 cv
151.182 24.8117 151.067 24.6472 150.968 24.487 cv
149.546 22.197 148.751 20.1515 148.417 17.443 cv
148.167 15.4118 147.983 12.8322 148.123 10.3088 cv
cp
f
122.704 14.9138 mo
122.714 14.9069 122.718 14.8952 122.728 14.8879 cv
122.781 14.7946 122.859 14.7057 122.94 14.6174 cv
122.971 14.5471 123.001 14.4753 123.01 14.3996 cv
123.055 14.3962 123.101 14.3976 123.147 14.3937 cv
126.238 11.5588 128.814 8.30731 131.295 4.97283 cv
129.767 4.60321 128.217 4.42449 126.51 4.51531 cv
125.593 4.32147 124.677 4.1408 123.765 3.9992 cv
121.556 2.36492 117.9 2.9035 114.731 4.04608 cv
112.431 4.53387 109.8 5.45672 107.493 6.76434 cv
108.529 7.49969 109.571 8.23504 110.664 8.91131 cv
114.45 11.2551 118.623 13.0363 122.648 14.9479 cv
122.666 14.9357 122.685 14.926 122.704 14.9138 cv
cp
.317647 .290196 .301961 rgb
f
148.086 11.549 mo
147.514 11.2492 146.941 10.9518 146.375 10.6408 cv
146.368 10.6374 146.362 10.6359 146.356 10.632 cv
145.409 8.86346 143.026 8.45965 140.74 8.07684 cv
139.9 8.85467 139.036 9.61297 138.171 10.3693 cv
137.716 11.0309 137.258 11.6843 136.784 12.3068 cv
136.066 13.2492 135.335 14.1818 134.6 15.111 cv
137.387 14.8781 140.152 14.3371 142.974 15.1032 cv
143.496 15.2448 143.927 15.1144 144.241 14.8508 cv
144.281 14.884 144.32 14.9142 144.359 14.9479 cv
145.071 15.5597 145.745 16.2892 146.572 16.7458 cv
147.099 17.0363 147.807 17.1003 148.402 17.3 cv
148.201 15.6271 148.054 13.6052 148.086 11.549 cv
cp
f
127.791 7.48699 mo
128.229 7.59539 128.663 7.72137 129.095 7.85565 cv
130.001 6.70721 130.879 5.53582 131.749 4.3576 cv
130.14 4.0368 128.516 3.79412 126.875 3.6574 cv
126.325 3.51287 125.753 3.41424 125.16 3.37127 cv
121.726 2.16473 117.183 4.19744 113.968 5.31219 cv
112.82 5.70965 111.698 6.14178 110.603 6.61541 cv
110.599 6.61199 110.597 6.60809 110.593 6.60418 cv
109.618 5.71063 108.346 5.87762 107.089 6.47821 cv
108.259 7.3078 109.429 8.14715 110.664 8.91131 cv
111.394 9.36346 112.143 9.78875 112.898 10.2038 cv
114.061 9.79852 115.252 9.44207 116.466 9.10565 cv
118.793 8.4616 121.288 8.18377 123.645 7.59832 cv
125.078 7.67352 126.453 7.83221 127.791 7.48699 cv
cp
.603922 .576471 .588235 rgb
f
141.279 7.56317 mo
140.382 8.41571 139.455 9.24334 138.52 10.0627 cv
138.525 10.0622 138.53 10.0632 138.535 10.0627 cv
141.697 11.5558 144.873 13.0139 148.135 14.2809 cv
148.058 12.8952 148.052 11.4294 148.15 9.98407 cv
145.879 9.11932 143.583 8.33074 141.279 7.56317 cv
cp
f
133.944 15.9387 mo
133.21 16.863 132.474 17.7868 131.738 18.7106 cv
132.289 18.9059 132.839 19.1037 133.392 19.2922 cv
133.397 19.1467 133.391 19.0007 133.359 18.8591 cv
134.593 18.4582 134.79 16.7497 133.944 15.9387 cv
cp
.317647 .290196 .301961 rgb
f
146.134 19.5749 mo
144.218 19.5749 144.215 22.5514 146.134 22.5514 cv
148.049 22.5514 148.052 19.5749 146.134 19.5749 cv
cp
f
125.584 9.05535 mo
123.257 11.3215 120.892 12.3239 117.875 10.5305 cv
115.582 9.16815 113.343 7.81805 111.008 6.54266 cv
114.249 4.945 117.694 3.92108 121.139 3.71649 cv
123.846 3.55584 126.516 3.99725 129.126 4.7453 cv
127.875 5.39764 126.008 8.64227 125.584 9.05535 cv
cp
133.389 2.82049 mo
133.301 2.70623 133.205 2.60809 133.106 2.51873 cv
133.232 2.34637 133.36 2.17498 133.486 2.00262 cv
133.029 1.8449 132.566 1.67059 132.11 1.51971 cv
122.472 -1.67463 113.625 .428401 105.526 5.38738 cv
105.703 5.50701 105.877 5.63201 106.052 5.7536 cv
105.296 6.62518 105.194 8.03338 106.512 8.69451 cv
109.765 10.3278 112.747 12.1862 115.856 13.9846 cv
117.938 15.1887 121.918 16.8371 124.283 16.0915 cv
127.05 15.2194 129.074 11.0265 130.681 8.92254 cv
131.719 7.56219 134.934 4.83221 133.389 2.82049 cv
cp
0 0 0 rgb
f
135.514 16.8879 mo
136.429 15.8762 137.331 14.8532 138.265 13.8586 cv
139.376 12.675 140.543 11.1677 141.841 9.98455 cv
143.166 10.6071 144.484 11.2429 145.797 11.8918 cv
145.635 14.0109 145.722 16.0988 146.157 18.2209 cv
146.446 19.631 146.966 20.9606 147.45 22.2995 cv
144.793 21.3722 142.163 19.7004 139.775 18.6301 cv
138.38 18.0046 136.966 17.3796 135.514 16.8879 cv
cp
152.243 24.4196 mo
151.857 22.343 150.854 20.5031 150.323 18.466 cv
149.613 15.7433 149.579 13.1066 149.949 10.3327 cv
150.112 9.10711 149.266 8.48407 148.309 8.44256 cv
148.32 8.35272 148.328 8.26141 148.34 8.17205 cv
147.003 7.51629 145.655 6.90057 144.304 6.29901 cv
143.869 5.30389 142.719 4.58953 141.494 5.27801 cv
137.203 7.69207 133.602 12.9494 130.37 16.6091 cv
129.156 17.9841 130.054 19.841 131.784 20.0231 cv
138.389 20.7175 143.654 26.4167 150.315 26.9513 cv
151.712 27.0637 152.461 25.59 152.243 24.4196 cv
cp
f
242.122 42.9098 mo
241.942 42.9748 241.763 43.0402 241.583 43.1052 cv
239.933 43.6989 238.272 44.3332 236.61 44.9802 cv
235.944 45.4484 235.29 45.9328 234.657 46.4572 cv
234.03 46.9767 233.286 46.8991 232.753 46.5412 cv
227.924 48.5339 223.102 50.714 218.409 53.1135 cv
217.735 53.696 217.06 54.2741 216.384 54.8454 cv
213.229 57.5085 210.363 60.3879 206.096 60.8967 cv
205.813 60.9304 205.541 60.8278 205.302 60.6638 cv
202.528 64.4079 200.289 68.5993 200.464 73.1721 cv
202.475 73.0466 204.694 73.5119 206.387 73.7219 cv
212.812 74.5173 216.631 73.9806 222.546 70.6393 cv
230.54 66.1222 238.265 60.7819 245.522 54.9216 cv
245.349 53.6921 245.145 52.5202 244.914 51.4328 cv
244.296 48.5168 243.343 45.654 242.122 42.9098 cv
cp
.203922 .215686 .211765 rgb
f
221.896 40.0578 mo
220.531 42.4753 218.824 44.7526 217.003 46.9538 cv
220.119 45.4792 223.235 44.0041 226.36 42.5485 cv
229.9 39.7077 233.666 37.214 237.676 35.1501 cv
237.439 34.82 237.211 34.4831 236.965 34.1603 cv
234.116 30.4177 230.751 28.195 227.079 26.008 cv
225.321 24.0495 223.037 22.7951 220.301 22.4089 cv
219.466 21.2941 218.562 20.3058 217.594 19.4245 cv
217.776 23.8137 219.338 28.4484 221.198 31.3034 cv
223.237 34.4343 223.785 36.7111 221.896 40.0578 cv
cp
f
222.658 22.5471 mo
221.05 22.2668 219.808 21.2741 218.409 20.4836 cv
218.155 20.34 217.894 20.2082 217.638 20.0685 cv
217.756 21.7248 218.057 23.3976 218.492 24.9885 cv
218.51 25.0007 218.528 25.0134 218.546 25.0251 cv
220.162 26.0666 221.782 26.5529 223.381 25.2858 cv
224.314 24.5461 223.809 22.7477 222.658 22.5471 cv
cp
.317647 .290196 .301961 rgb
f
222.546 70.6393 mo
222.749 70.5241 222.948 70.3981 223.152 70.2819 cv
222.398 69.1808 220.703 68.7853 219.48 69.4279 cv
218.349 70.0226 217.081 70.9689 216.468 72.1511 cv
215.805 72.5495 215.27 73.1183 214.766 73.7092 cv
217.226 73.2487 219.631 72.2858 222.546 70.6393 cv
cp
f
242.301 44.7399 mo
242.187 44.4196 242.06 44.1017 241.941 43.7824 cv
242.032 43.5012 242.083 43.2092 242.115 42.9128 cv
241.937 42.9763 241.76 43.0412 241.583 43.1052 cv
239.933 43.6989 238.275 44.3268 236.614 44.9782 cv
235.946 45.4474 235.291 45.9323 234.657 46.4572 cv
234.033 46.9748 233.292 46.8996 232.759 46.5451 cv
232.273 46.7468 231.786 46.9352 231.299 47.1403 cv
231.348 47.6794 li
231.175 47.5431 230.979 47.4406 230.775 47.3561 cv
228.145 48.4743 225.529 49.6579 222.933 50.8981 cv
222.959 51.2175 223.033 51.5505 223.187 51.9196 cv
223.418 52.4728 223.862 52.9601 224.521 52.9347 cv
225.015 52.9157 225.466 52.7985 225.878 52.6071 cv
225.865 52.8381 225.888 53.071 225.937 53.2995 cv
224.949 52.924 223.639 52.8019 221.928 53.0231 cv
220.23 53.2433 218.596 53.7101 217.007 54.3127 cv
216.799 54.4894 216.592 54.6696 216.384 54.8454 cv
213.229 57.5085 210.363 60.3879 206.096 60.8967 cv
205.813 60.9304 205.539 60.8273 205.299 60.6623 cv
203.353 63.2873 201.674 66.132 200.9 69.175 cv
201.711 69.7306 202.659 69.9679 203.685 69.9494 cv
203.585 70.05 203.482 70.1437 203.383 70.2477 cv
202.653 71.0217 202.728 72.3102 203.384 73.0485 cv
203.351 73.1198 203.318 73.1974 203.287 73.2839 cv
204.397 73.4172 205.47 73.6081 206.387 73.7219 cv
206.834 73.777 207.266 73.8244 207.689 73.8664 cv
207.614 73.8005 207.541 73.7331 207.459 73.6779 cv
207.684 72.8962 207.811 72.1271 207.732 71.4733 cv
210.897 68.5568 215.442 65.6462 219.402 64.5641 cv
219.72 64.4909 220.037 64.4181 220.354 64.3371 cv
221.144 64.1789 221.588 63.6701 221.754 63.0661 cv
221.859 63.0173 221.972 62.9777 222.077 62.9284 cv
221.318 64.8874 223.398 67.2355 225.425 65.9396 cv
226.388 65.3234 227.352 64.7077 228.315 64.0915 cv
228.414 64.1955 228.522 64.2883 228.637 64.3703 cv
228.534 65.2697 229.107 65.9142 229.877 66.1955 cv
235.507 62.5934 240.971 58.6306 246.182 54.383 cv
245.494 51.5685 244.53 48.7433 243.35 45.7448 cv
243.137 45.2048 242.741 44.8928 242.301 44.7399 cv
cp
.14902 .156863 .152941 rgb
f
224.562 39.4616 mo
224.687 39.4723 224.809 39.4709 224.932 39.4699 cv
224.962 39.5724 224.985 39.6755 225.029 39.779 cv
225.065 39.863 225.115 39.9411 225.158 40.0226 cv
224.686 40.9328 224.985 41.8742 225.608 42.5007 cv
224.946 42.5056 224.468 40.968 224.076 39.381 cv
224.233 39.4167 224.394 39.447 224.562 39.4616 cv
cp
220.578 42.1965 mo
220.583 42.2145 220.586 42.2316 220.59 42.2497 cv
220.789 43.0681 221.019 44.0265 221.397 44.884 cv
223.05 44.1032 224.703 43.3205 226.36 42.5485 cv
230.204 39.4636 234.313 36.7829 238.714 34.6247 cv
238.131 33.7975 237.569 33.0436 237.121 32.4142 cv
234.038 28.0886 229.857 26.9172 225.137 24.9328 cv
223.983 24.4474 222.358 25.6901 222.516 26.9294 cv
222.687 28.2653 222.704 29.7326 223.12 31.0226 cv
223.265 31.4699 223.476 31.8845 223.719 32.2834 cv
223.607 32.3117 223.499 32.3571 223.384 32.3776 cv
223.635 32.5617 223.609 32.57 223.306 32.403 cv
222.766 32.3615 222.439 32.0807 221.818 32.2082 cv
221.799 32.2121 221.781 32.2194 221.763 32.2233 cv
223.318 34.902 223.594 37.0485 221.896 40.0578 cv
221.486 40.7829 221.042 41.4938 220.578 42.1965 cv
cp
f
217.916 22.3918 mo
218.509 22.5583 219.35 22.362 219.739 21.8786 cv
220.142 21.3781 220.258 21.1374 220.31 20.5007 cv
220.36 19.8859 219.915 19.0734 219.345 18.8171 cv
218.763 18.5558 218.172 18.3185 217.586 18.0724 cv
217.547 19.488 217.671 20.9499 217.916 22.3918 cv
cp
.603922 .576471 .588235 rgb
f
232.087 36.8137 mo
232.322 37.1891 232.54 37.5764 232.749 37.9694 cv
234.244 37.0212 235.777 36.1369 237.346 35.3171 cv
236.837 34.5519 236.33 33.8273 235.858 33.1638 cv
233.436 29.757 230.551 26.09 226.543 24.5695 cv
225.13 24.0334 224.057 25.8215 224.69 26.9806 cv
226.642 30.5554 229.911 33.3356 232.087 36.8137 cv
cp
.113725 .117647 .113725 rgb
f
239.043 52.3713 mo
239.106 51.5143 239.076 50.6061 238.971 49.6774 cv
239.129 50.507 239.288 51.3361 239.43 52.1672 cv
239.431 52.2018 239.43 52.2365 239.431 52.2712 cv
239.296 52.2741 239.165 52.3137 239.043 52.3713 cv
cp
241.336 43.1979 mo
239.756 43.7692 238.169 44.3781 236.58 45.0012 cv
235.978 45.425 235.389 45.8664 234.816 46.3347 cv
234.828 46.362 234.838 46.3849 234.851 46.4128 cv
235.024 46.7883 235.215 46.9343 235.379 47.0348 cv
235.474 47.4958 235.552 47.9543 235.617 48.4108 cv
235.108 49.6769 233.053 51.0168 232.182 51.799 cv
231.167 52.7097 232.083 54.0583 233.177 54.2018 cv
233.831 54.2873 234.229 54.2472 234.526 54.2526 cv
234.224 54.6076 233.868 54.9138 233.489 55.1984 cv
233.422 54.5236 232.904 53.9274 232.106 54.2546 cv
231.77 54.3928 231.429 54.5109 231.089 54.6335 cv
230.924 54.593 230.744 54.5803 230.544 54.6325 cv
228.971 55.0402 227.384 55.5344 225.821 56.1159 cv
223.723 56.6003 221.613 57.0461 219.541 57.7136 cv
215.428 59.0378 211.623 61.0803 208.038 63.466 cv
206.825 64.2731 207.872 66.0431 209.175 65.4103 cv
210.198 64.9103 211.224 64.4142 212.252 63.9221 cv
212.268 63.9142 212.274 63.9025 212.289 63.8942 cv
212.335 63.8737 212.382 63.8547 212.428 63.8347 cv
212.502 64.5109 212.973 65.1349 213.851 65.1349 cv
214.617 65.1349 215.072 64.6564 215.225 64.0846 cv
219.252 62.6999 223.108 60.6652 226.972 58.7443 cv
227.347 58.6154 227.72 58.4821 228.094 58.3483 cv
227.893 58.7443 227.95 59.174 228.164 59.5207 cv
228.173 59.5427 228.188 59.5602 228.198 59.5817 cv
228.213 59.6042 228.223 59.6296 228.239 59.6511 cv
228.359 59.8791 228.52 60.0837 228.729 60.2155 cv
228.621 60.4426 228.534 60.6784 228.479 60.9279 cv
228.385 61.3508 228.664 61.6496 229.066 61.6994 cv
230.832 61.9172 232.503 60.5817 233.91 59.5676 cv
234.744 59.9885 235.895 59.7507 237.002 59.3864 cv
237.02 59.4836 237.037 59.572 237.055 59.6657 cv
237.025 60.0031 237.096 60.3088 237.243 60.5646 cv
237.244 60.57 237.245 60.5768 237.247 60.5827 cv
237.292 60.7609 237.338 60.9391 237.383 61.1179 cv
240.087 59.176 242.742 57.1564 245.336 55.0671 cv
244.843 52.343 244.136 49.6774 243.038 47.1721 cv
242.596 45.8 242.006 44.4811 241.336 43.1979 cv
cp
f
221.851 64.4889 mo
219.181 64.4889 219.177 68.6374 221.851 68.6374 cv
224.52 68.6374 224.525 64.4889 221.851 64.4889 cv
cp
.317647 .290196 .301961 rgb
f
220.351 44.1799 mo
220.286 44.1799 220.286 44.28 220.351 44.28 cv
220.415 44.28 220.415 44.1799 220.351 44.1799 cv
cp
f
238.517 53.8464 mo
238.453 53.8464 238.453 53.9465 238.517 53.9465 cv
238.582 53.9465 238.582 53.8464 238.517 53.8464 cv
cp
.203922 .215686 .211765 rgb
f
240.184 48.7585 mo
237.861 48.7585 237.858 52.3679 240.184 52.3679 cv
242.506 52.3679 242.51 48.7585 240.184 48.7585 cv
cp
f
226.184 58.7443 mo
224.058 58.7443 224.054 62.049 226.184 62.049 cv
228.31 62.049 228.314 58.7443 226.184 58.7443 cv
cp
f
227.685 38.6364 mo
226.419 39.3576 225.086 40.2053 223.715 41.0153 cv
224.816 39.1794 225.582 37.2272 225.39 35.1379 cv
225.204 33.1159 224.252 31.3263 223.275 29.5856 cv
221.964 27.2477 220.922 25.2487 220.388 22.9704 cv
226.174 26.1467 231.429 29.5549 235.507 34.0612 cv
232.913 35.6086 230.31 37.1413 227.685 38.6364 cv
cp
239.561 32.3576 mo
237.961 30.34 236.114 28.4645 233.953 26.78 cv
229.621 23.4025 224.708 20.28 219.556 17.4953 cv
219.278 17.194 218.902 17.0021 218.492 16.9294 cv
218.229 16.7907 217.969 16.6476 217.705 16.5109 cv
217.688 16.6501 217.683 16.7936 217.67 16.9343 cv
216.822 17.091 216.058 17.718 216.012 18.821 cv
215.834 23.1218 216.953 26.6887 219.08 30.3742 cv
220.546 32.9128 221.997 35.072 220.691 38.1144 cv
219.709 40.4011 217.558 42.6891 216.138 44.7477 cv
215.076 46.2873 216.823 48.0202 218.397 47.6857 cv
221.894 46.9416 225.021 44.736 228.098 43.0007 cv
232.118 40.7331 236.097 38.3957 240.048 36.0114 cv
241.646 35.0471 241.062 32.7853 239.561 32.3576 cv
cp
0 0 0 rgb
f
236.741 60.425 mo
233.751 62.7472 230.611 64.8859 227.272 66.6774 cv
219.862 70.653 211.631 72.7497 203.278 71.7175 cv
203.914 67.6691 205.519 63.4816 209.083 61.5798 cv
212.724 59.6359 215.92 57.0866 219.434 54.9338 cv
223.211 52.6203 227.011 50.7018 231.141 49.1369 cv
234.893 47.7145 237.944 45.5241 241.806 44.5759 cv
241.966 45.0212 242.118 45.4743 242.259 45.9396 cv
243.042 48.5309 243.661 51.2985 244.156 54.1389 cv
242.677 56.4518 238.453 59.0949 236.741 60.425 cv
cp
247.716 52.1608 mo
247.174 48.9499 246.395 45.84 245.322 42.8786 cv
245.814 41.633 245.253 40.0261 243.599 40.2375 cv
238.113 40.9396 234.309 43.6115 229.3 45.5529 cv
224.265 47.5046 219.528 49.9767 215.026 53.0036 cv
212.842 54.4719 210.791 56.173 208.464 57.4196 cv
207.055 58.1745 205.206 58.5544 204.046 59.6852 cv
200.932 62.7214 199.467 69.2546 199.066 73.3962 cv
198.988 74.1916 199.736 75.1862 200.534 75.3249 cv
210.272 77.0207 219.829 75.0519 228.555 70.5143 cv
232.64 68.3898 236.424 65.7614 240.028 62.9055 cv
242.881 60.6447 247.455 57.9304 248.461 54.2463 cv
248.716 53.3127 248.332 52.5803 247.716 52.1608 cv
cp
f
45.3087 44.5622 mo
45.6993 38.9094 46.2901 33.2995 47.6256 27.8347 cv
44.0665 26.1843 40.5211 24.4509 37.0895 22.5905 cv
34.8668 21.3859 32.8419 19.7956 30.7452 18.3473 cv
25.3482 22.4128 21.61 28.3054 18.419 34.2536 cv
24.463 41.0768 30.942 47.0075 38.0519 52.9772 cv
39.6632 54.3303 41.2232 55.7385 42.7418 57.1872 cv
43.6754 52.9987 44.4391 48.7653 45.3087 44.5622 cv
cp
.203922 .215686 .211765 rgb
f
55.5108 31.2087 mo
55.3546 32.1354 55.1939 33.0607 55.023 33.9846 cv
54.4557 40.9826 53.8678 47.9792 53.0938 54.9572 cv
52.67 58.78 52.6749 63.2878 51.9405 67.4797 cv
53.6686 69.778 55.2838 72.1637 56.732 74.6662 cv
57.2428 62.7971 70.2647 53.1642 76.6168 44.4055 cv
77.6197 43.0222 79.4093 40.8395 79.4229 38.9128 cv
71.5709 36.0007 63.3473 34.1467 55.5108 31.2087 cv
cp
f
37.0895 22.5905 mo
34.942 21.4264 32.9801 19.9015 30.9591 18.4933 cv
29.4811 19.7175 28.3375 21.1535 27.8355 22.7936 cv
27.7809 22.9728 27.7652 23.1428 27.7818 23.301 cv
25.1095 26.2819 22.4566 29.3517 20.1856 32.6369 cv
20.1036 32.7565 20.0318 32.8727 19.9532 32.9909 cv
19.5216 33.5261 19.1432 34.0876 18.7867 34.6662 cv
20.9049 37.0373 23.0743 39.3097 25.3087 41.5051 cv
28.0982 37.7927 30.7716 33.9885 33.2188 30.0422 cv
34.8702 28.9694 36.5479 27.9421 38.3639 27.0988 cv
38.7857 27.5925 39.4718 27.8835 40.2799 27.7443 cv
41.9415 27.4582 43.5406 27.1379 45.0772 26.6296 cv
42.379 25.3415 39.7003 24.0055 37.0895 22.5905 cv
cp
.317647 .290196 .301961 rgb
f
41.2423 39.9494 mo
42.2271 40.424 43.2154 40.6354 44.2037 40.5817 cv
44.2452 40.8967 44.2882 41.2111 44.3614 41.5231 cv
44.5353 42.2639 44.9332 42.7468 45.4259 43.0226 cv
45.6949 39.4777 46.0519 35.9509 46.6505 32.4719 cv
44.8463 33.4284 43.0406 34.3825 41.2423 35.3503 cv
39.5675 36.2516 39.4444 39.0832 41.2423 39.9494 cv
cp
f
69.4039 46.6672 mo
67.3756 42.3747 62.2223 45.0549 58.7511 44.9245 cv
57.2101 44.8669 56.3932 45.801 56.2379 46.9025 cv
55.2657 47.8249 54.6202 49.0724 54.5553 50.7194 cv
54.5123 51.8029 55.6695 52.2087 56.5128 51.8425 cv
57.6119 51.3649 58.733 50.7609 59.8824 50.3688 cv
61.734 50.5969 63.5875 50.7751 65.4557 50.8122 cv
66.648 50.8361 67.5777 49.968 67.9757 48.9245 cv
68.023 48.9196 68.0709 48.9118 68.1187 48.9069 cv
69.2867 48.7902 69.9122 47.7438 69.4039 46.6672 cv
cp
f
56.3756 38.4948 mo
56.3097 38.1686 56.2442 37.8425 56.1788 37.5158 cv
55.9981 36.6144 55.4884 36.1061 54.8668 35.8825 cv
54.7057 37.8522 54.5396 39.821 54.3692 41.7897 cv
54.4234 41.7287 54.485 41.675 54.5377 41.6125 cv
54.7647 41.5475 54.982 41.4489 55.2179 41.339 cv
56.2691 40.8503 56.5812 39.5197 56.3756 38.4948 cv
cp
.14902 .156863 .152941 rgb
f
40.3409 43.1769 mo
41.6017 44.1179 43.3536 44.9509 45.148 45.3625 cv
45.2022 45.0959 45.2535 44.8283 45.3087 44.5622 cv
45.4176 42.986 45.5484 41.4147 45.6983 39.8473 cv
44.4601 39.612 43.2281 39.1735 42.2076 38.7487 cv
39.4659 37.6081 38.3438 41.6872 40.3409 43.1769 cv
cp
f
65.2491 55.8239 mo
65.8385 55.7331 66.4308 55.5993 67.0108 55.4304 cv
68.9557 53.2482 70.9488 51.1389 72.775 49.0851 cv
72.7413 48.7614 72.6798 48.4274 72.5704 48.0773 cv
71.7354 45.4015 67.816 45.9201 67.7101 48.735 cv
67.7027 48.925 67.6573 49.0939 67.5929 49.2512 cv
67.0997 49.1789 65.8629 49.8444 65.5943 49.9225 cv
65.1349 50.0568 64.6676 50.1432 64.1969 50.2097 cv
63.8697 49.6242 63.2579 49.1867 62.3521 49.1506 cv
61.6524 49.1227 61.0118 49.1945 60.3873 49.3093 cv
59.1104 49.4225 57.8355 49.5505 56.5567 49.6594 cv
54.7965 49.8088 53.92 51.4015 54.6471 52.988 cv
56.3912 56.7931 61.7799 56.3586 65.2491 55.8239 cv
cp
f
59.7843 62.7907 mo
59.7535 62.7951 59.7232 62.8054 59.6925 62.8102 cv
59.4654 62.6296 59.1754 62.4938 58.7989 62.4387 cv
56.6871 62.1306 54.6349 61.8825 52.6119 61.4421 cv
52.4835 63.3088 52.3175 65.2038 52.0182 67.0461 cv
52.151 67.2946 52.2398 67.5588 52.2608 67.8469 cv
52.8375 68.6213 53.4137 69.3957 53.9596 70.1926 cv
54.527 70.36 55.1583 70.3161 55.7198 69.9782 cv
56.0001 69.8093 56.3145 69.5998 56.6451 69.3791 cv
56.6676 69.9186 56.9273 70.4357 57.317 70.8498 cv
58.0553 68.0632 59.4195 65.403 61.1231 62.8464 cv
60.7071 62.7375 60.254 62.7238 59.7843 62.7907 cv
cp
f
30.5382 18.2062 mo
29.8404 18.799 29.2403 19.3908 28.8316 19.8132 cv
26.38 22.3449 24.4562 25.4308 22.4747 28.3268 cv
21.9342 29.1164 22.1749 29.8591 22.7232 30.3058 cv
22.6353 30.4533 22.5426 30.5969 22.4557 30.7448 cv
21.2203 32.0143 20.1866 33.5759 19.2613 35.1979 cv
20.484 36.5529 21.7198 37.8849 22.9806 39.1779 cv
25.0274 36.1877 27.1661 33.0305 27.4591 29.6515 cv
27.6866 29.3693 27.9039 29.0827 28.1349 28.8024 cv
29.6119 27.007 32.0313 25.1423 33.1388 22.9357 cv
33.8912 22.447 34.6686 22.0153 35.4645 21.6237 cv
33.7872 20.5529 32.1861 19.3337 30.5382 18.2062 cv
cp
.603922 .576471 .588235 rgb
f
66.3194 45.2585 mo
66.0147 44.7985 65.7643 44.4411 65.2569 44.1877 cv
64.6212 43.8703 63.9332 43.8332 63.2413 43.925 cv
62.191 44.0646 61.2037 44.4118 60.3009 44.9704 cv
58.7892 45.9059 59.7555 48.6476 61.565 47.9694 cv
62.2193 47.7238 62.7955 47.6281 63.4913 47.654 cv
63.8648 47.6677 64.2086 47.6862 64.5811 47.6467 cv
65.0763 47.5944 65.5743 47.3014 65.8189 47.1667 cv
66.4527 46.8181 66.7281 45.8762 66.3194 45.2585 cv
cp
f
45.9273 37.6589 mo
46.1231 35.9357 46.3502 34.2189 46.6422 32.5148 cv
46.0919 32.7126 45.5528 33.03 45.1295 33.4138 cv
44.2003 34.2556 43.6969 35.4118 43.6085 36.6476 cv
43.5123 37.9919 45.0777 38.3444 45.9273 37.6589 cv
cp
f
52.4747 63.2136 mo
52.3648 64.4938 52.2247 65.7751 52.0211 67.0319 cv
53.9845 67.8644 55.9454 68.4391 58.0089 68.7145 cv
58.3736 67.7604 58.8111 66.822 59.2994 65.8962 cv
57.1534 64.8361 54.7901 63.8439 52.4747 63.2136 cv
cp
.113725 .117647 .113725 rgb
f
32.3097 43.4411 mo
31.4518 43.4411 30.6295 44.1955 30.669 45.0817 cv
30.7091 45.9704 31.3902 46.7223 32.3097 46.7223 cv
33.1681 46.7223 33.9898 45.9675 33.9503 45.0817 cv
33.9107 44.1926 33.2296 43.4411 32.3097 43.4411 cv
cp
.317647 .290196 .301961 rgb
f
31.3004 38.0134 mo
31.2359 38.0134 31.2359 38.1135 31.3004 38.1135 cv
31.3648 38.1135 31.3648 38.0134 31.3004 38.0134 cv
cp
f
33.9669 34.9108 mo
31.8409 34.9108 31.837 38.2155 33.9669 38.2155 cv
36.0934 38.2155 36.0973 34.9108 33.9669 34.9108 cv
cp
f
39.9669 46.3483 mo
37.1168 46.3483 37.1119 50.778 39.9669 50.778 cv
42.8175 50.778 42.8224 46.3483 39.9669 46.3483 cv
cp
f
70.4288 46.4855 mo
70.421 45.5222 69.7462 44.7678 68.86 44.55 cv
68.8048 44.4626 68.608 44.3273 68.2545 44.1393 cv
67.8507 43.8088 67.4469 43.4777 67.0435 43.1472 cv
66.4503 42.6769 65.8565 42.1852 65.1183 41.9587 cv
63.6466 41.508 62.0045 41.9597 60.6017 42.4347 cv
57.4112 43.5163 54.7833 45.7682 54.8009 49.3683 cv
54.8136 51.9416 58.8136 51.947 58.8009 49.3683 cv
58.7896 47.0168 62.5455 45.1901 64.4723 46.1887 cv
65.8321 46.8932 66.712 48.7433 68.4298 48.6496 cv
69.503 48.591 70.4391 47.7805 70.4298 46.6496 cv
70.4293 46.5949 70.4293 46.5402 70.4288 46.4855 cv
cp
0 0 0 rgb
f
43.8204 42.3371 mo
42.902 45.7556 41.8629 49.1081 40.9957 52.5265 cv
33.9879 46.5012 26.6134 40.8859 20.6451 33.7927 cv
20.6646 33.7429 20.6817 33.6921 20.7018 33.6428 cv
22.6388 28.7765 26.276 24.1413 30.7638 20.5529 cv
32.6935 21.7453 34.4737 23.2184 36.5895 24.2277 cv
39.3165 25.528 44.566 27.5119 45.3961 30.3815 cv
44.0606 30.6994 42.8019 31.3976 42.003 32.5436 cv
41.4903 33.2785 41.4913 33.9719 41.1783 34.7531 cv
40.7667 35.7795 40.4747 35.9094 39.3585 36.2365 cv
36.8937 36.9597 37.9425 40.821 40.422 40.0939 cv
42.1983 39.5729 43.9459 38.7551 44.7198 36.9665 cv
45.0226 36.2658 44.9928 35.5182 45.3419 34.9504 cv
45.006 37.5837 44.336 40.4201 43.8204 42.3371 cv
cp
49.9986 28.2722 mo
49.378 25.6291 44.2408 23.8762 42.1793 22.6872 cv
40.254 21.5773 38.1822 20.7995 36.2472 19.7365 cv
34.4293 18.737 33.1148 17.1476 31.2481 16.2385 cv
29.9186 15.5905 28.6856 16.4655 28.3209 17.5373 cv
27.7164 17.9689 27.1114 18.4001 26.5167 18.863 cv
21.9981 22.3776 19.2218 26.756 17.1017 31.9665 cv
16.1944 32.6032 15.6754 34.009 16.5699 35.1447 cv
23.4474 43.8752 32.5528 50.2648 40.7687 57.6266 cv
41.8175 58.5661 43.7833 58.3014 44.1114 56.7438 cv
45.234 51.4221 47.2945 46.2795 48.2774 40.9533 cv
48.775 38.256 48.7032 35.4924 49.1861 32.7888 cv
49.4259 31.4465 50.3228 29.654 49.9986 28.2722 cv
cp
f
42.0987 199.526 mo
42.8546 197.814 43.5865 196.097 44.3228 194.386 cv
38.5772 195.726 33.0045 197.342 27.6871 200.025 cv
27.2867 200.227 25.1754 201.391 22.858 202.565 cv
23.4063 203.912 23.9542 205.259 24.526 206.602 cv
25.6812 209.316 27.0504 211.994 28.2398 214.721 cv
30.7281 213.977 33.2984 213.5 35.9137 213.206 cv
37.9371 208.631 40.0753 204.107 42.0987 199.526 cv
cp
.203922 .215686 .211765 rgb
f
67.1637 187.758 mo
65.3399 189.048 63.1671 189.747 60.8424 190.409 cv
58.1886 191.165 55.5094 191.827 52.8224 192.454 cv
50.857 196.383 48.9767 200.354 47.1471 204.354 cv
45.8844 207.115 44.7823 210 43.5704 212.826 cv
49.8702 212.855 56.254 213.58 62.2906 214.128 cv
61.2765 204.669 64.2013 196.442 67.1637 187.758 cv
cp
f
26.985 209.863 mo
27.0006 210.027 27.0318 210.195 27.0978 210.369 cv
27.1178 210.422 27.1393 210.474 27.1593 210.527 cv
27.5343 211.924 27.9317 213.312 28.36 214.687 cv
30.0274 214.195 31.7306 213.816 33.4596 213.534 cv
33.1622 212.675 32.8595 211.819 32.5953 210.955 cv
31.6764 207.954 30.8766 204.923 30.1554 201.869 cv
30.0807 201.551 29.8932 201.359 29.6671 201.262 cv
29.566 200.601 29.4332 199.939 29.2687 199.274 cv
28.7398 199.518 28.2105 199.761 27.6871 200.025 cv
27.3912 200.174 26.1612 200.849 24.6041 201.665 cv
25.336 204.059 26.0958 206.409 26.6593 208.625 cv
26.7647 209.039 26.8766 209.45 26.985 209.863 cv
cp
.317647 .290196 .301961 rgb
f
59.1886 206.951 mo
59.1939 206.666 59.1451 206.394 59.0421 206.135 cv
58.6812 205.005 57.5519 204.166 56.3463 204.463 cv
56.151 204.51 55.6471 204.745 55.6383 204.75 cv
55.6363 204.752 55.6349 204.753 55.6334 204.755 cv
55.4786 204.737 55.3238 204.727 55.169 204.725 cv
54.5035 204.426 53.7174 204.41 53.0724 204.825 cv
52.6075 205.125 52.2848 205.541 52.1041 206.005 cv
51.8448 206.277 51.6178 206.578 51.4522 206.899 cv
50.9391 207.891 50.9044 208.846 51.0553 209.928 cv
51.1759 210.794 52.0772 211.502 52.8561 211.729 cv
54.5382 212.219 56.3653 211.722 57.6397 210.537 cv
58.0924 210.115 58.4859 209.594 58.7662 209.042 cv
59.0348 208.511 59.2335 207.946 59.2237 207.342 cv
59.1056 206.563 59.0938 206.432 59.1886 206.951 cv
cp
f
61.7096 214.075 mo
61.9015 213.844 62.0792 213.605 62.2281 213.351 cv
62.0807 211.617 62.0509 209.919 62.1402 208.254 cv
61.0768 206.681 58.3736 206.952 57.9044 208.918 cv
57.7037 209.758 57.2281 210.515 56.8062 211.292 cv
55.1729 211.647 52.3346 211.383 51.8131 211.309 cv
50.3878 211.024 49.36 211.923 49.0118 213 cv
53.3087 213.245 57.586 213.695 61.7096 214.075 cv
cp
.14902 .156863 .152941 rgb
f
34.148 202.301 mo
35.5519 201.855 35.5455 202.68 36.7672 203.128 cv
38.0582 203.602 39.1007 203.454 40.4195 203.265 cv
40.984 202.021 41.5465 200.776 42.0987 199.526 cv
42.2721 199.133 42.441 198.74 42.6124 198.347 cv
42.2931 198.407 41.9723 198.475 41.6563 198.512 cv
41.5318 198.248 41.2833 198.045 40.8834 198.043 cv
39.8102 198.037 38.7423 198.09 37.6764 198.167 cv
35.9181 197.658 34.7218 197.082 32.3609 198.852 cv
30.4488 200.286 32.1983 203.487 34.148 202.301 cv
cp
f
62.4933 196.493 mo
58.8307 196.332 56.9742 193.473 53.1681 194.624 cv
52.6163 194.791 52.0406 194.999 51.4557 195.222 cv
50.4239 197.341 49.4142 199.47 48.4215 201.609 cv
49.9171 201.211 51.4049 200.781 52.8814 200.29 cv
55.8722 199.296 55.5904 200.769 58.0821 201.649 cv
59.2765 202.07 60.38 202.052 61.6485 201.939 cv
62.1866 201.89 62.6104 201.899 62.9674 201.948 cv
63.336 200.109 63.7999 198.289 64.3272 196.476 cv
63.7447 196.482 63.148 196.522 62.4933 196.493 cv
cp
f
24.9493 204.827 mo
25.2682 205.849 25.5909 206.861 25.8717 207.853 cv
26.5348 210.195 27.296 212.485 28.0792 214.767 cv
29.255 214.409 30.4503 214.115 31.6588 213.868 cv
31.0436 210.883 30.3897 207.909 29.5958 204.938 cv
29.1305 203.195 28.7232 201.443 28.0406 199.857 cv
27.9234 199.915 27.8043 199.966 27.6871 200.025 cv
27.3238 200.208 25.5499 201.185 23.4928 202.241 cv
23.6056 202.649 23.7135 203.057 23.8268 203.464 cv
24.0211 204.158 24.443 204.598 24.9493 204.827 cv
cp
.603922 .576471 .588235 rgb
f
57.4679 207.624 mo
56.8897 206.293 55.0733 205.912 53.9039 206.656 cv
52.9903 207.237 52.588 208.611 52.9811 209.624 cv
53.1954 210.175 53.6329 210.596 54.2584 210.596 cv
54.5772 210.596 54.8658 210.47 55.0968 210.274 cv
55.1871 210.3 55.2774 210.326 55.3653 210.359 cv
56.0548 210.616 56.9049 210.232 57.3224 209.692 cv
57.8165 209.052 57.777 208.335 57.4679 207.624 cv
cp
f
60.9156 197.653 mo
61.0289 197.301 60.7135 196.818 60.3155 196.865 cv
56.6935 197.295 53.2662 198.112 49.7813 198.692 cv
49.4425 199.407 49.1109 200.127 48.776 200.845 cv
52.4591 200.714 56.1544 200.169 59.38 198.665 cv
59.4254 198.791 59.5001 198.904 59.6417 198.966 cv
60.8951 199.522 62.1144 199.822 63.3663 200.115 cv
63.5655 199.269 63.7804 198.425 64.0123 197.584 cv
62.275 197.422 60.9947 197.407 60.9156 197.653 cv
cp
.113725 .117647 .113725 rgb
f
64.2931 189.271 mo
63.6285 189.537 62.943 189.777 62.234 189.997 cv
61.4176 191.168 61.9332 193.245 63.8004 193.245 cv
66.2174 193.245 66.3834 189.748 64.2931 189.271 cv
cp
.317647 .290196 .301961 rgb
f
36.2647 205.274 mo
35.6993 206.518 35.4693 208.738 34.6837 209.758 cv
33.794 210.914 31.2677 211.333 29.2555 211.747 cv
28.0387 208.707 26.8219 205.667 25.6046 202.626 cv
30.6505 200.35 35.5392 198.565 40.8175 197.156 cv
39.3858 199.9 37.5294 202.493 36.2647 205.274 cv
cp
43.6817 192.326 mo
35.7516 194.102 28.8385 196.66 21.505 200.128 cv
19.8497 200.911 20.4034 202.877 21.6935 203.554 cv
23.1568 207.211 24.6207 210.867 26.0841 214.524 cv
26.0948 214.551 26.1056 214.58 26.1163 214.608 cv
26.317 215.655 27.2071 216.526 28.4962 216.065 cv
30.8272 215.231 33.8888 215.194 36.0533 214.139 cv
37.8849 213.247 38.1495 211.987 38.7252 210.136 cv
40.4342 204.647 44.4415 200.244 46.1417 194.787 cv
46.6168 193.262 45.108 192.007 43.6817 192.326 cv
cp
0 0 0 rgb
f
59.1378 208.029 mo
61.6705 207.758 61.6983 203.755 59.1378 204.029 cv
58.2218 204.128 57.5304 204.355 56.9278 205.075 cv
56.2071 205.937 56.4024 206.742 56.1183 207.713 cv
55.9825 208.176 56.631 207.902 55.795 208.163 cv
55.4942 208.257 55.0636 208.211 54.7623 208.175 cv
54.3619 208.129 53.5831 208.046 53.4522 207.601 cv
52.7286 205.136 48.8673 206.186 49.5948 208.665 cv
49.9308 209.81 50.6563 210.637 51.5675 211.211 cv
49.5001 211.323 47.2857 211.386 46.0782 211.005 cv
47.5636 205.964 50.3868 200.478 52.943 196.157 cv
55.0411 192.611 60.4352 191.514 64.9918 190.167 cv
64.3971 193.46 63.4879 196.669 63.1231 200.001 cv
62.8834 200.308 62.7364 200.711 62.7501 201.218 cv
62.7984 202.996 61.8839 204.637 61.8888 206.454 cv
61.8932 208.204 61.8277 209.877 61.6158 211.609 cv
60.6134 211.433 59.5987 211.313 58.5777 211.235 cv
58.6505 211.181 58.7335 211.145 58.8028 211.086 cv
59.2135 210.735 59.5392 210.328 59.7687 209.837 cv
59.9659 209.413 60.0509 209.006 60.0929 208.544 cv
60.1891 207.481 60.295 207.905 59.1378 208.029 cv
cp
66.4059 185.514 mo
62.3175 187.321 58.3023 188.027 54.1065 189.338 cv
52.151 189.949 51.2882 190.751 50.2833 192.466 cv
46.9542 198.148 43.1534 205.459 41.7003 211.921 cv
41.3492 213.482 42.7115 214.485 43.9259 214.414 cv
46.0309 215.403 48.941 214.82 51.1554 214.868 cv
55.1891 214.954 59.6725 214.821 63.482 216.209 cv
64.6974 216.652 66.046 215.502 66.0138 214.28 cv
65.9635 212.383 66.5377 210.699 66.7467 208.851 cv
67.0372 206.283 66.8014 203.66 67.0196 201.082 cv
67.4151 196.41 68.9591 191.943 69.4151 187.241 cv
69.5777 185.567 67.6349 184.971 66.4059 185.514 cv
cp
f
88.5694 244.861 mo
89.6812 243.053 90.8351 241.275 91.8014 239.473 cv
93.8297 235.691 95.6651 231.787 97.4078 227.836 cv
91.233 227.53 85.024 227.742 79.3311 229.418 cv
79.4234 229.667 79.5206 229.915 79.6075 230.165 cv
80.7374 233.417 81.025 236.733 82.9908 239.66 cv
84.4098 241.773 86.337 243.487 88.5694 244.861 cv
cp
.203922 .215686 .211765 rgb
f
112.654 229.16 mo
111.223 229.029 109.758 228.883 108.273 228.734 cv
106.372 232.414 103.721 235.963 101.795 239.069 cv
99.9518 242.042 98.1368 245.033 96.3263 248.027 cv
100.669 249.1 105.349 249.332 109.62 248.838 cv
110.93 246.702 111.978 244.415 112.599 242.095 cv
113.724 237.889 113.196 233.467 112.654 229.16 cv
cp
f
85.6251 239.974 mo
86.4654 240.846 87.339 241.684 88.2892 242.441 cv
88.6861 242.757 89.0953 243.074 89.5143 243.335 cv
90.0816 242.424 90.6393 241.516 91.1646 240.605 cv
90.8692 240.369 90.5709 240.138 90.2813 239.895 cv
89.3736 239.133 88.5382 238.296 87.7364 237.425 cv
87.7027 237.14 87.6168 236.845 87.4527 236.545 cv
87.0821 235.868 86.7789 235.191 86.5035 234.509 cv
86.2857 232.956 85.8844 231.67 85.3145 230.279 cv
85.3126 230.266 85.3092 230.254 85.3067 230.241 cv
85.3048 230.242 85.3028 230.243 85.3004 230.244 cv
85.2257 230.062 85.1588 229.885 85.0777 229.698 cv
84.9293 229.355 84.7374 229.1 84.5201 228.911 cv
84.5055 228.873 84.4893 228.836 84.4747 228.798 cv
84.4347 228.636 84.3824 228.477 84.3385 228.316 cv
82.6153 228.582 80.9225 228.947 79.273 229.436 cv
80.4093 232.681 81.7584 235.844 83.4698 238.873 cv
83.9913 239.796 84.8277 240.088 85.6251 239.974 cv
cp
.317647 .290196 .301961 rgb
f
91.1622 240.494 mo
91.1773 240.505 91.1959 240.511 91.2115 240.522 cv
91.4122 240.173 91.6134 239.823 91.8014 239.473 cv
92.9791 237.277 94.0919 235.04 95.1607 232.777 cv
94.4415 232.71 93.961 232.814 93.2657 233.193 cv
92.1358 233.595 91.1895 234.464 90.4347 235.407 cv
89.0479 237.139 89.3521 239.211 91.1622 240.494 cv
cp
f
112.041 236.894 mo
111.077 237.499 110.994 238.303 111.325 238.963 cv
111.158 239.01 110.992 239.063 110.824 239.111 cv
110.024 239.335 109.606 239.895 109.484 240.518 cv
107.575 240.972 105.665 241.418 103.754 241.859 cv
102.761 242.088 102.252 242.754 102.114 243.508 cv
101.437 243.52 100.742 243.524 100.056 243.511 cv
100.265 243.177 100.373 242.77 100.328 242.296 cv
100.307 242.066 100.262 241.857 100.205 241.659 cv
98.8736 243.83 97.5489 246.004 96.231 248.183 cv
97.2789 248.395 98.3443 248.526 99.3292 248.647 cv
102.65 249.055 106.075 249.26 109.463 249.102 cv
110.849 246.892 111.953 244.51 112.599 242.095 cv
113.093 240.246 113.265 238.355 113.26 236.45 cv
112.875 236.479 112.534 236.585 112.041 236.894 cv
cp
.14902 .156863 .152941 rgb
f
89.2369 241.1 mo
85.6744 238.057 85.2286 232.287 82.2413 228.737 cv
82.2379 228.722 82.235 228.707 82.232 228.692 cv
81.0323 228.94 79.8521 229.248 78.6935 229.614 cv
79.3785 232.676 81.6363 235.803 82.9601 238.449 cv
84.1124 240.753 85.3629 243.373 88.214 243.57 cv
89.6563 243.669 89.9698 241.951 89.1744 241.116 cv
89.1954 241.111 89.2164 241.106 89.2369 241.1 cv
cp
.603922 .576471 .588235 rgb
f
93.4664 236.257 mo
94.0177 235.158 94.5548 234.052 95.0821 232.939 cv
94.8863 232.855 94.6886 232.784 94.5011 232.736 cv
93.337 232.44 92.1573 233.307 92.1573 234.522 cv
92.1573 235.373 92.7286 236.023 93.4664 236.257 cv
cp
f
102.651 243.191 mo
101.686 243.255 100.503 243.175 99.2911 243.15 cv
98.3731 244.652 97.4581 246.156 96.5465 247.663 cv
100.866 248.728 105.605 248.443 110.207 247.828 cv
111.239 245.987 112.075 244.054 112.599 242.095 cv
112.602 242.082 112.605 242.069 112.608 242.055 cv
109.304 242.557 105.979 242.973 102.651 243.191 cv
cp
.113725 .117647 .113725 rgb
f
111.665 240.58 mo
111.06 243.329 109.873 245.809 108.32 248.105 cv
105.001 248.238 101.664 248.092 98.5704 247.504 cv
100.232 244.492 102.043 241.565 103.819 238.619 cv
105.822 235.298 107.267 231.087 111.361 231.811 cv
111.409 232.759 111.284 233.804 111.399 234.68 cv
111.671 236.758 112.138 238.429 111.665 240.58 cv
cp
115.239 232.972 mo
115.162 232.025 115.449 230.995 115.175 230.072 cv
114.846 228.962 114.364 228.605 113.35 228.169 cv
111.924 227.554 108.405 226.943 106.842 227.432 cv
105.128 227.969 104.267 230.132 103.424 231.529 cv
100.173 236.918 96.7218 242.232 93.8541 247.838 cv
92.9649 249.576 94.7418 251.158 96.1622 250.814 cv
99.7833 251.635 103.639 251.843 107.366 251.781 cv
108.182 252.589 109.781 252.816 110.704 251.616 cv
113.646 247.793 116.057 242.819 115.991 237.881 cv
115.968 236.212 115.375 234.635 115.239 232.972 cv
cp
0 0 0 rgb
f
81.7535 230.404 mo
82.2369 230.32 82.755 230.258 83.0006 230.206 cv
84.7774 229.834 86.6012 229.668 88.4073 229.508 cv
89.8126 229.383 91.2198 229.295 92.628 229.217 cv
93.0392 229.195 93.4508 229.176 93.8624 229.156 cv
93.422 229.776 92.9723 230.392 92.6598 231.029 cv
92.2223 231.922 91.878 232.85 91.5255 233.777 cv
89.8893 234.152 88.6671 235.132 88.6095 237.162 cv
88.5909 237.83 88.8512 238.318 89.2408 238.639 cv
88.6793 239.655 88.1026 240.663 87.5553 241.687 cv
84.9225 238.529 83.2423 234.445 81.7535 230.404 cv
cp
98.4659 226.059 mo
96.3067 223.739 90.4845 225.301 87.7052 225.57 cv
85.109 225.82 79.7691 225.744 77.8951 227.891 cv
77.3468 228.519 77.2613 229.338 77.504 230.018 cv
77.4801 230.027 77.4552 230.033 77.4317 230.042 cv
79.1485 234.631 80.9093 239.419 83.7589 243.294 cv
84.4552 244.242 85.2262 245.077 86.0489 245.831 cv
86.5079 247.307 89.2144 247.638 89.9923 245.717 cv
91.3409 242.385 93.5299 239.489 94.8687 236.143 cv
95.9903 233.341 98.0577 230.803 98.9801 228.005 cv
99.2061 227.318 98.9376 226.566 98.4659 226.059 cv
cp
f
235.095 157.838 mo
235.28 158.081 235.469 158.323 235.655 158.566 cv
237.321 160.205 239.013 161.815 240.598 163.482 cv
243.087 166.102 245.532 168.752 248.022 171.358 cv
248.052 171.382 248.082 171.407 248.112 171.432 cv
251.633 162.693 252.896 153.196 250.361 143.997 cv
250.34 142.8 250.278 141.623 250.189 140.473 cv
244.296 145.154 238.118 149.489 231.774 153.239 cv
232.881 154.781 233.957 156.347 235.095 157.838 cv
cp
.203922 .215686 .211765 rgb
f
237.143 173.009 mo
232.22 168.268 227.78 163.202 224.417 157.362 cv
221.715 158.648 218.879 159.543 215.833 159.348 cv
213.778 159.217 208.203 157.532 205.119 157.894 cv
213.661 170.404 222.993 182.327 232.28 194.285 cv
233.428 193.208 234.545 192.109 235.593 190.97 cv
238.706 187.587 241.566 183.793 243.988 179.724 cv
241.662 177.477 239.4 175.184 237.143 173.009 cv
cp
f
224.412 157.354 mo
221.922 158.536 219.32 159.392 216.542 159.366 cv
216.265 159.865 215.998 160.374 215.744 160.902 cv
214.492 163.498 218.116 165.704 219.65 163.185 cv
220.205 162.273 220.847 161.445 221.517 160.616 cv
221.858 160.194 222.21 159.782 222.579 159.383 cv
222.676 159.279 222.957 159.058 223.136 158.894 cv
223.847 158.951 224.525 158.89 225.168 158.608 cv
224.913 158.192 224.656 157.778 224.412 157.354 cv
cp
.317647 .290196 .301961 rgb
f
223.491 182.937 mo
223.774 182.664 224.042 182.393 224.285 182.138 cv
224.95 181.44 225.385 180.288 225.026 179.332 cv
224.205 177.135 222.071 175.92 219.742 176.562 cv
219.44 176.645 219.16 176.768 218.889 176.905 cv
220.415 178.922 221.948 180.933 223.491 182.937 cv
cp
f
225.141 158.565 mo
224.066 159.396 223.236 160.742 222.478 161.736 cv
221.806 162.614 221.989 163.447 222.551 164.022 cv
222.599 164.66 222.912 165.293 223.501 165.591 cv
223.714 165.699 li
224.336 166.014 225.267 166.026 225.759 165.436 cv
225.856 165.321 225.944 165.193 226.039 165.07 cv
226.043 165.099 226.142 165.056 226.313 164.952 cv
226.973 164.551 227.61 164.078 228.127 163.504 cv
228.197 163.425 228.253 163.328 228.319 163.243 cv
227.182 161.74 226.128 160.176 225.141 158.565 cv
cp
.14902 .156863 .152941 rgb
f
216.684 173.987 mo
218.291 173.389 219.771 172.534 221.518 171.742 cv
223.388 170.895 222.055 167.911 220.137 168.465 cv
217.751 169.154 215.797 169.573 213.518 169.711 cv
214.568 171.14 215.621 172.567 216.684 173.987 cv
cp
f
206.529 159.922 mo
206.633 160.03 206.743 160.132 206.867 160.219 cv
206.842 160.244 206.815 160.271 206.79 160.296 cv
207.626 161.499 208.462 162.702 209.311 163.896 cv
210.822 162.321 212.462 160.586 212.853 158.835 cv
210.719 158.394 208.09 157.838 206.077 157.834 cv
205.873 158.386 205.929 158.92 206.149 159.374 cv
206.275 159.557 206.403 159.738 206.529 159.922 cv
cp
f
237.345 153.595 mo
237.387 155.735 237.316 157.861 237.019 159.9 cv
238.234 161.085 239.445 162.269 240.598 163.482 cv
242.838 165.841 245.047 168.22 247.281 170.573 cv
250.888 165.099 253.625 159.301 250.403 157.078 cv
250.924 154.978 251.141 152.781 251.335 151.199 cv
251.844 147.055 251.734 143.341 251.141 139.712 cv
246.166 143.717 240.982 147.486 235.653 150.862 cv
235.995 151.719 236.308 152.415 236.396 152.592 cv
236.641 153.082 236.974 153.402 237.345 153.595 cv
cp
f
237.143 173.009 mo
236.1 172.006 235.089 170.98 234.095 169.944 cv
233.981 170.256 233.868 170.572 233.749 170.877 cv
233.167 171.147 232.696 171.487 232.274 171.949 cv
232.076 171.789 231.847 171.673 231.599 171.602 cv
231.658 170.897 231.06 170.174 230.416 169.989 cv
229.508 169.729 228.798 170.31 228.47 171.094 cv
228.027 172.153 227.475 173.211 228.28 174.255 cv
228.4 174.411 228.541 174.535 228.69 174.645 cv
228.665 174.703 228.644 174.762 228.618 174.82 cv
228.251 175.625 227.857 176.284 227.925 177.196 cv
227.999 178.197 228.652 178.97 229.487 179.31 cv
228.608 180.752 227.68 182.159 226.657 183.495 cv
226.538 183.093 226.344 182.748 225.863 182.48 cv
225.033 182.017 224.091 182.279 223.289 182.674 cv
226.036 186.246 228.8 189.805 231.565 193.364 cv
235.581 190.163 238.745 185.734 240.113 180.883 cv
240.922 179.978 241.56 178.964 242.102 177.883 cv
240.432 176.238 238.786 174.592 237.143 173.009 cv
cp
f
224.416 157.361 mo
222.454 158.292 220.422 159.015 218.291 159.269 cv
217.969 159.788 217.731 160.347 217.706 160.978 cv
217.663 162.089 218.232 163.137 219.357 163.399 cv
219.997 163.547 220.784 163.308 221.104 162.688 cv
221.389 162.133 221.843 161.705 222.263 161.215 cv
222.877 160.499 223.432 159.675 224.09 159.005 cv
224.353 158.737 224.645 158.484 224.929 158.228 cv
224.756 157.941 224.584 157.653 224.416 157.361 cv
cp
.603922 .576471 .588235 rgb
f
215.832 172.839 mo
216.667 172.577 217.486 172.29 218.279 171.961 cv
219.015 172.271 219.737 171.748 219.591 170.938 cv
219.554 170.729 219.516 170.52 219.479 170.311 cv
219.387 169.802 218.795 169.391 218.294 169.409 cv
216.827 169.463 215.341 169.758 213.871 170.187 cv
214.523 171.072 215.175 171.957 215.832 172.839 cv
cp
.113725 .117647 .113725 rgb
f
244.711 159.457 mo
244.369 160.494 243.977 161.528 243.52 162.56 cv
243.274 163.116 243.015 163.664 242.751 164.21 cv
242.401 164.026 241.921 164.043 241.616 164.321 cv
241.575 164.36 241.542 164.404 241.501 164.442 cv
243.613 166.679 245.707 168.928 247.825 171.149 cv
249.346 167.368 249.777 162.833 250.059 159.207 cv
250.202 157.367 250.236 155.54 250.193 153.721 cv
251.87 150.552 250.595 144.613 250.293 141.837 cv
250.245 141.396 250.191 140.955 250.136 140.515 cv
247.5 142.608 244.806 144.625 242.064 146.557 cv
241.878 147.089 241.789 147.616 241.891 148.113 cv
241.99 148.597 242.838 149.59 243.476 150.36 cv
243.657 151.111 243.851 151.859 244.022 152.612 cv
244.156 153.207 244.627 153.567 245.159 153.695 cv
245.102 154.941 245.037 156.186 244.945 157.428 cv
244.896 158.096 244.812 158.774 244.711 159.457 cv
cp
f
239.683 181.098 mo
240.39 179.857 240.971 178.572 241.465 177.255 cv
240.012 175.82 238.576 174.39 237.143 173.009 cv
237.033 172.904 236.929 172.796 236.821 172.691 cv
236.467 173.633 236.12 174.576 235.743 175.493 cv
233.786 180.258 231.276 184.767 227.927 188.678 cv
229.207 190.328 230.488 191.978 231.769 193.627 cv
232.829 192.586 233.867 191.52 234.894 190.441 cv
237.189 188.028 239.459 186.015 239.668 182.572 cv
239.691 182.188 239.475 181.848 239.172 181.624 cv
239.374 181.496 239.553 181.325 239.683 181.098 cv
cp
f
208.412 162.628 mo
209.346 161.328 210.395 159.953 211.001 158.46 cv
210.606 158.383 210.208 158.308 209.807 158.237 cv
208.918 159.14 208.176 160.239 207.483 161.293 cv
207.794 161.737 208.099 162.185 208.412 162.628 cv
cp
f
214.467 166.513 mo
214.403 166.513 214.402 166.613 214.467 166.613 cv
214.531 166.613 214.531 166.513 214.467 166.513 cv
cp
.317647 .290196 .301961 rgb
f
229.889 165.216 mo
228.211 166.037 228.509 169.114 230.8 169.114 cv
231.597 169.114 232.149 168.737 232.465 168.216 cv
231.576 167.237 230.722 166.234 229.889 165.216 cv
cp
f
230.134 187.346 mo
230.069 187.346 230.069 187.446 230.134 187.446 cv
230.198 187.446 230.198 187.346 230.134 187.346 cv
cp
.203922 .215686 .211765 rgb
f
231.254 185.606 mo
231.153 185.779 231.053 185.951 230.952 186.123 cv
230.811 186.364 231.157 186.547 231.316 186.336 cv
231.437 186.175 231.558 186.015 231.68 185.854 cv
231.866 185.606 231.418 185.326 231.254 185.606 cv
cp
f
229.634 188.243 mo
228.578 188.243 228.576 189.883 229.634 189.883 cv
230.69 189.883 230.691 188.243 229.634 188.243 cv
cp
f
233.134 180.93 mo
232.319 180.93 232.318 182.196 233.134 182.196 cv
233.948 182.196 233.949 180.93 233.134 180.93 cv
cp
f
237.134 177.741 mo
235.218 177.741 235.215 180.718 237.134 180.718 cv
239.049 180.718 239.052 177.741 237.134 177.741 cv
cp
f
246.634 163.346 mo
246.569 163.346 246.569 163.446 246.634 163.446 cv
246.698 163.446 246.698 163.346 246.634 163.346 cv
cp
f
246.634 152.575 mo
244.718 152.575 244.715 155.551 246.634 155.551 cv
248.549 155.551 248.552 152.575 246.634 152.575 cv
cp
f
245.3 147.075 mo
243.385 147.075 243.382 150.051 245.3 150.051 cv
247.216 150.051 247.219 147.075 245.3 147.075 cv
cp
f
240.656 159.625 mo
238.969 157.389 236.796 155.393 235.005 153.229 cv
240.1 150.297 244.956 147.328 249.389 143.536 cv
249.839 148.592 249.9 153.674 249.495 158.355 cv
249.237 161.329 248.469 164.295 247.366 167.208 cv
244.937 164.861 242.72 162.358 240.656 159.625 cv
cp
252.839 140.089 mo
253.48 138.356 251.124 136.402 249.53 137.991 cv
244.059 143.449 237.687 147.097 231.034 150.896 cv
230.143 151.404 229.71 152.744 230.316 153.633 cv
232.554 156.912 235.67 159.668 238.116 162.867 cv
240.802 166.382 243.804 169.524 247.14 172.425 cv
248.914 173.968 251.441 171.725 250.344 170.037 cv
254.458 160.648 254.065 150.171 252.839 140.089 cv
cp
0 0 0 rgb
f
231.348 191.756 mo
229.28 189.359 227.223 186.95 225.227 184.494 cv
225.766 183.721 226.155 182.784 226.309 181.617 cv
226.451 180.537 225.287 179.628 224.309 179.617 cv
223.352 179.608 222.746 180.213 222.466 180.999 cv
221.063 179.172 219.698 177.313 218.405 175.402 cv
214.935 170.271 212.047 164.798 209.224 159.294 cv
211.145 159.555 213.055 159.898 215.122 159.737 cv
217.228 159.574 219.197 159.164 221.037 159.195 cv
221.04 159.448 221.031 159.698 221.058 159.954 cv
221.066 160.031 221.088 160.231 221.114 160.463 cv
219.189 158.783 216.358 161.595 218.294 163.297 cv
219.391 164.26 220.538 165.057 222.05 165.004 cv
223.628 164.949 224.882 163.849 225.183 162.32 cv
225.309 161.679 225.223 161.071 225.136 160.434 cv
225.462 160.663 225.784 160.921 226.099 161.233 cv
231.521 166.592 236.076 173.275 241.057 179.133 cv
238.856 182.463 236.479 185.612 234.204 188.454 cv
233.268 189.623 232.314 190.71 231.348 191.756 cv
cp
244.483 180.195 mo
245.238 179.497 245.57 178.263 244.7 177.267 cv
241.381 173.468 238.104 169.633 234.889 165.746 cv
232.564 162.934 229.858 157.781 226.706 155.941 cv
224.117 154.43 220.433 155.232 217.625 155.491 cv
215.434 155.693 213.199 156.044 210.994 155.841 cv
209.166 155.672 207.631 155.005 205.824 155.034 cv
204.25 155.059 203.408 156.698 204.097 158.043 cv
207.742 165.166 211.348 172.307 215.953 178.873 cv
220.28 185.043 225.208 190.756 230.131 196.451 cv
230.911 197.352 232.769 197.185 233.272 196.046 cv
233.32 195.938 233.368 195.829 233.416 195.721 cv
237.719 191.199 241.563 185.966 244.834 180.536 cv
244.716 180.423 244.601 180.308 244.483 180.195 cv
cp
f
178.093 240.12 mo
180.411 237.569 182.819 235.107 185.254 232.671 cv
186.332 231.365 187.474 230.125 188.71 228.973 cv
185.095 224.134 181.547 219.246 178.125 214.265 cv
176.465 218.933 174.612 223.69 173.569 228.433 cv
172.359 233.935 173.269 239.297 173.846 244.766 cv
175.192 243.161 176.7 241.652 178.093 240.12 cv
cp
.203922 .215686 .211765 rgb
f
193.272 235.015 mo
190.832 237.451 188.403 239.898 186.091 242.458 cv
181.675 247.346 177.779 252.667 173.117 257.327 cv
172.657 259.006 172.06 260.637 171.304 262.207 cv
172.266 261.985 173.192 261.725 174.068 261.424 cv
179.596 262.982 186.12 262.117 190.925 259.715 cv
195.906 257.224 200.738 253.984 205.06 250.276 cv
201.117 245.198 197.17 240.126 193.272 235.015 cv
cp
f
189.886 238.428 mo
189.999 238.674 190.129 238.91 190.295 239.112 cv
190.313 239.306 190.38 239.483 190.499 239.645 cv
191.382 241.507 193.949 241.011 194.839 239.554 cv
195.3 239.357 195.75 239.105 196.184 238.821 cv
195.209 237.555 194.244 236.282 193.276 235.011 cv
192.14 236.145 191.005 237.279 189.886 238.428 cv
cp
.317647 .290196 .301961 rgb
f
175.923 230.217 mo
176.147 230.42 176.403 230.577 176.682 230.693 cv
176.676 230.79 176.672 230.888 176.656 230.981 cv
176.251 233.272 175.16 234.384 174.279 236.443 cv
173.642 237.931 174.701 239.912 176.529 239.369 cv
180.923 238.064 181.959 233.95 182.235 230.112 cv
182.256 229.828 182.283 229.561 182.309 229.302 cv
183.565 229.23 184.844 229.068 186.079 228.933 cv
186.077 229.003 186.069 229.074 186.075 229.142 cv
186.129 229.742 186.624 230.192 187.247 230.034 cv
187.434 229.987 187.645 229.892 187.801 229.834 cv
187.8 229.835 187.803 229.835 187.802 229.835 cv
188.094 229.541 188.402 229.26 188.706 228.977 cv
187.469 227.321 186.236 225.662 185.018 223.993 cv
184.036 224.191 183.017 224.466 182.053 224.637 cv
181.934 224.551 181.792 224.489 181.641 224.437 cv
181.64 224.239 181.631 224.045 181.599 223.863 cv
181.578 223.747 181.536 223.638 181.49 223.531 cv
182.141 222.538 182.545 221.593 182.372 220.316 cv
181.46 219.041 180.558 217.758 179.66 216.472 cv
178.869 217.318 178.226 218.089 178.063 218.569 cv
177.878 219.113 177.998 219.8 177.841 220.264 cv
177.5 221.274 176.629 222.665 175.959 223.883 cv
175.61 223.563 175.258 223.255 175.04 223.097 cv
174.474 224.874 173.96 226.654 173.569 228.433 cv
173.51 228.704 173.462 228.973 173.412 229.243 cv
173.67 229.413 173.962 229.589 174.318 229.762 cv
174.887 230.04 175.408 230.174 175.923 230.217 cv
cp
.14902 .156863 .152941 rgb
f
195.774 238.286 mo
195.021 238.852 194.292 239.454 193.595 240.021 cv
192.824 240.646 192.736 241.555 193.045 242.346 cv
191.203 243.545 189.399 244.77 187.616 245.685 cv
186.233 246.394 184.838 247.069 183.432 247.715 cv
183.856 246.914 184.003 245.913 183.909 244.953 cv
180.354 249.116 177 253.445 173.122 257.322 cv
172.607 259.213 171.91 261.042 171.019 262.794 cv
171.719 262.702 172.417 262.595 173.108 262.465 cv
176.38 261.846 179.542 260.738 182.665 259.545 cv
187.432 259.214 191.953 257.397 195.931 254.448 cv
198.025 253.485 199.998 252.334 201.616 250.77 cv
201.765 250.628 201.87 250.47 201.945 250.307 cv
202.691 249.941 203.423 249.532 204.137 249.087 cv
201.343 245.491 198.55 241.895 195.774 238.286 cv
cp
f
193.658 235.528 mo
193.567 235.581 193.477 235.633 193.384 235.687 cv
192.482 236.209 192.088 237.51 192.67 238.412 cv
193.234 239.287 194.458 239.731 195.396 239.127 cv
195.626 238.979 195.855 238.833 196.08 238.685 cv
195.271 237.634 194.463 236.582 193.658 235.528 cv
cp
.603922 .576471 .588235 rgb
f
185.922 225.217 mo
185.379 225.433 184.838 225.655 184.308 225.885 cv
184.075 225.35 183.521 224.997 182.914 225.447 cv
182.75 225.57 182.6 225.712 182.442 225.842 cv
182.392 225.744 182.324 225.646 182.211 225.556 cv
181.613 225.079 178.062 224.37 174.78 223.912 cv
174.49 224.854 174.226 225.797 173.983 226.74 cv
175.781 227.073 177.943 226.513 179.741 226.654 cv
179.619 227.206 179.779 227.824 180.213 228.19 cv
178.795 230.057 177.71 232.247 176.838 234.316 cv
176.202 235.826 178.547 236.613 179.366 235.382 cv
180.69 233.388 181.979 231.297 183.076 229.166 cv
183.134 229.055 183.188 228.95 183.242 228.846 cv
184.714 228.437 186.238 228.079 187.754 227.694 cv
187.141 226.869 186.53 226.045 185.922 225.217 cv
cp
.113725 .117647 .113725 rgb
f
201.235 245.352 mo
201.256 245.568 201.305 245.779 201.405 245.968 cv
200.329 246.949 199.211 247.876 198.027 248.697 cv
197.734 248.901 197.436 249.093 197.136 249.284 cv
196.368 249.492 195.603 249.78 194.844 250.117 cv
191.831 249.475 188.885 250.755 186.017 251.926 cv
184.501 252.544 183.016 253.091 181.525 253.592 cv
182.33 252.923 183.098 252.184 183.665 251.308 cv
184.349 250.252 183.009 249 181.971 249.614 cv
181.164 249.958 180.42 250.477 179.706 251.019 cv
179.426 251.195 179.14 251.364 178.86 251.543 cv
178.636 251.599 178.411 251.682 178.188 251.776 cv
176.569 253.678 174.904 255.539 173.134 257.31 cv
172.741 258.758 172.241 260.169 171.627 261.535 cv
177.368 261.144 183.181 260.625 188.652 258.78 cv
192.692 257.419 198.838 255.561 201.604 252.062 cv
202.649 251.32 203.627 250.504 204.583 249.661 cv
203.467 248.225 202.351 246.789 201.235 245.352 cv
cp
f
180.728 218.008 mo
179.931 219.239 179.129 220.468 178.345 221.708 cv
177.898 222.415 178.998 223.041 179.458 222.359 cv
180.162 221.314 180.887 220.283 181.602 219.245 cv
181.309 218.834 181.019 218.42 180.728 218.008 cv
cp
f
179.467 256.534 mo
177.929 256.534 177.926 258.925 179.467 258.925 cv
181.005 258.925 181.008 256.534 179.467 256.534 cv
cp
.203922 .215686 .211765 rgb
f
183.3 252.924 mo
182.049 252.924 182.046 254.869 183.3 254.869 cv
184.552 254.869 184.554 252.924 183.3 252.924 cv
cp
f
187.3 256.18 mo
187.236 256.18 187.236 256.28 187.3 256.28 cv
187.365 256.28 187.365 256.18 187.3 256.18 cv
cp
f
191.134 253.87 mo
189.384 253.87 189.381 256.589 191.134 256.589 cv
192.883 256.589 192.886 253.87 191.134 253.87 cv
cp
f
187.8 255.346 mo
187.736 255.346 187.736 255.446 187.8 255.446 cv
187.865 255.446 187.865 255.346 187.8 255.346 cv
cp
f
172.602 261.549 mo
173.046 260.085 173.54 258.607 174.282 257.411 cv
175.824 254.93 178.969 252.635 181.035 250.529 cv
184.109 247.397 187.184 244.264 190.258 241.131 cv
190.543 241.334 190.891 241.474 191.319 241.499 cv
192.99 241.595 194.731 241.501 196.29 241.074 cv
198.615 243.659 200.598 246.496 202.575 249.453 cv
196.801 254.563 190.254 257.903 181.965 259.832 cv
179.303 260.452 176.065 261.096 172.602 261.549 cv
cp
206.927 248.779 mo
203.261 243.264 199.835 238.052 194.542 233.937 cv
193.695 233.279 192.546 233.089 191.713 233.937 cv
186.536 239.213 181.358 244.489 176.181 249.766 cv
174.395 251.586 171.875 253.475 170.56 255.686 cv
169.306 257.793 168.739 260.746 167.953 263.05 cv
167.504 264.362 168.415 265.265 169.48 265.449 cv
169.441 265.509 169.409 265.571 169.37 265.63 cv
169.639 265.615 169.912 265.602 170.178 265.585 cv
181.906 264.842 194.845 261.887 203.927 254.026 cv
204.728 253.332 205.511 252.603 206.286 251.859 cv
206.197 251.744 206.108 251.63 206.019 251.515 cv
207.027 251.078 207.708 249.954 206.927 248.779 cv
cp
0 0 0 rgb
f
32.6393 123.031 mo
26.1588 117.755 20.358 112.243 14.9137 106.108 cv
11.9957 111.675 9.21152 117.184 8.46933 123.211 cv
8.14756 123.635 7.87314 124.122 7.64609 124.658 cv
8.93418 125.65 10.2076 126.665 11.5499 127.542 cv
15.4298 130.078 19.4815 132.337 23.3912 134.825 cv
28.2965 137.946 33.0265 141.349 37.9947 144.324 cv
41.3121 145.965 44.6485 147.567 47.9728 149.184 cv
49.9049 148.44 51.6041 147.479 52.7159 146.162 cv
47.6837 137.134 40.6402 129.545 32.6393 123.031 cv
cp
.203922 .215686 .211765 rgb
f
16.8228 144.358 mo
12.7779 142.38 8.71787 140.469 4.86386 138.209 cv
4.87998 138.94 4.94297 139.665 5.09531 140.373 cv
3.13193 141.694 1.79306 144.103 2.49082 146.516 cv
3.99814 151.726 5.7955 156.805 7.76767 161.832 cv
11.2374 160.041 14.6505 158.148 18.3165 156.733 cv
23.2545 154.826 28.401 153.723 33.5479 152.583 cv
27.8624 150.09 22.4054 147.089 16.8228 144.358 cv
cp
f
7.18466 124.308 mo
8.63095 125.408 10.0479 126.561 11.5499 127.542 cv
12.8936 128.421 14.2603 129.261 15.6319 130.094 cv
16.1427 128.823 16.6266 127.543 17.172 126.34 cv
18.6339 123.115 20.3062 120.011 22.1031 116.962 cv
22.8043 115.772 21.2384 114.736 20.3307 115.501 cv
20.7164 114.677 21.1031 113.861 21.4947 113.053 cv
19.381 110.966 17.3302 108.817 15.3307 106.583 cv
15.2799 106.711 15.2232 106.828 15.1739 106.959 cv
14.7721 108.01 15.1305 108.83 15.7979 109.322 cv
13.6461 112.144 11.0519 114.86 10.1256 117.737 cv
9.88681 118.479 9.84677 119.224 9.98545 119.885 cv
8.94248 121.297 7.89804 122.755 7.18466 124.308 cv
cp
.317647 .290196 .301961 rgb
f
11.4371 146.961 mo
11.5997 146.916 11.7545 146.848 11.9044 146.771 cv
12.0269 148.614 12.1524 150.458 12.276 152.301 cv
12.2936 152.558 12.3038 152.816 12.315 153.073 cv
11.9415 151.05 11.6324 149.018 11.4371 146.961 cv
cp
13.9103 142.939 mo
10.3038 141.183 6.733 139.392 3.34629 137.284 cv
2.30381 137.845 1.61191 138.954 2.11533 140.328 cv
2.9039 142.478 3.64756 144.635 4.36777 146.797 cv
4.51328 147.876 4.70859 148.939 4.95322 149.976 cv
5.09384 150.571 5.39707 150.978 5.78037 151.229 cv
6.61191 153.96 7.38877 156.71 8.06308 159.503 cv
8.25058 160.28 8.67295 160.787 9.19248 161.094 cv
11.256 160.015 13.3185 158.935 15.4376 157.963 cv
15.3868 155.823 14.901 153.615 14.6939 151.542 cv
14.4083 148.676 14.1563 145.808 13.9103 142.939 cv
cp
f
37.9947 144.324 mo
39.775 145.204 41.5621 146.072 43.3492 146.938 cv
44.2975 147.032 45.2354 147.224 46.1822 147.537 cv
48.8331 148.411 50.2667 144.563 48.0289 143.157 cv
44.8663 141.169 38.6563 140.275 35.5348 142.79 cv
36.3521 143.306 37.1666 143.828 37.9947 144.324 cv
cp
f
23.3912 134.825 mo
24.5592 135.568 25.7164 136.329 26.8697 137.094 cv
27.4142 136.241 27.8228 135.327 27.9259 134.391 cv
28.002 133.699 27.2682 133.08 26.6251 133.091 cv
25.2638 133.112 24.1061 133.858 22.9825 134.562 cv
22.9801 134.563 22.9776 134.565 22.9747 134.567 cv
23.1129 134.654 23.2535 134.737 23.3912 134.825 cv
cp
f
28.8785 138.433 mo
28.8614 138.173 28.8238 137.914 28.7315 137.664 cv
28.276 136.432 26.7403 135.742 25.6344 136.288 cv
26.7184 137 27.8014 137.713 28.8785 138.433 cv
cp
.14902 .156863 .152941 rgb
f
47.9806 149.187 mo
49.3199 148.673 50.547 148.052 51.5431 147.281 cv
51.1012 146.904 50.5304 146.658 49.8595 146.632 cv
47.9376 146.558 46.003 147.118 44.0914 147.299 cv
45.3893 147.927 46.6852 148.557 47.9806 149.187 cv
cp
f
42.1734 132.802 mo
42.4659 132.785 42.7472 132.793 43.023 132.813 cv
39.8287 129.304 36.3429 126.047 32.6393 123.031 cv
32.5768 122.98 32.5167 122.928 32.4542 122.877 cv
31.5177 122.798 30.5812 122.719 29.6446 122.639 cv
26.8126 122.399 26.7828 126.411 29.2267 127.137 cv
28.0465 128.419 28.7555 131.168 30.8058 130.945 cv
32.7218 130.737 34.399 130.123 36.276 129.788 cv
37.8092 129.514 38.9244 129.505 39.902 129.735 cv
39.9835 129.814 40.026 129.891 40.0113 129.964 cv
39.7447 131.304 40.6231 132.893 42.1734 132.802 cv
cp
f
11.5499 127.542 mo
11.5631 127.551 11.5772 127.559 11.5904 127.568 cv
11.9269 126.573 12.3023 125.583 12.7633 124.583 cv
13.6954 122.559 14.4405 120.673 14.6124 118.486 cv
15.9791 116.16 17.4137 113.879 18.7267 111.631 cv
18.8917 111.348 19.0665 111.064 19.2467 110.778 cv
18.0621 109.556 16.8902 108.319 15.7423 107.047 cv
15.2174 108.085 14.7174 109.099 14.2281 110.024 cv
13.2584 111.856 12.3204 113.678 11.4361 115.514 cv
9.9332 116.211 9.55771 119.087 8.98691 120.666 cv
8.50156 122.009 8.03769 123.325 7.61972 124.638 cv
8.91709 125.636 10.1988 126.659 11.5499 127.542 cv
cp
.603922 .576471 .588235 rgb
f
8.1705 142.988 mo
8.17929 142.371 8.19931 141.755 8.23984 141.138 cv
8.26181 140.801 8.30136 140.468 8.33896 140.134 cv
7.10019 139.482 5.87412 138.809 4.6705 138.098 cv
4.64463 139.247 4.68564 140.424 4.77939 141.614 cv
4.75937 141.659 4.733 141.698 4.71738 141.746 cv
3.70664 144.798 4.99033 148.111 5.92832 151.189 cv
6.06992 152.557 6.15439 153.851 6.11972 155.026 cv
6.09726 155.782 6.68466 156.118 7.25986 156.07 cv
7.73203 157.832 8.2208 159.59 8.70224 161.349 cv
10.0338 160.655 11.3614 159.955 12.7018 159.279 cv
11.9757 156.616 11.2555 153.951 10.5558 151.281 cv
9.84824 148.581 9.56064 145.433 8.1705 142.988 cv
cp
f
37.9947 144.324 mo
38.2701 144.46 38.547 144.592 38.8224 144.728 cv
39.6866 144.629 40.6056 144.54 41.3814 144.223 cv
42.857 143.618 43.3937 141.02 41.3814 140.661 cv
39.61 140.345 37.8048 140.872 36.1588 141.53 cv
35.65 141.733 35.1495 141.975 34.7257 142.285 cv
35.8077 142.978 36.8937 143.665 37.9947 144.324 cv
cp
f
24.8004 122.584 mo
23.1114 122.584 23.1085 125.209 24.8004 125.209 cv
26.4894 125.209 26.4923 122.584 24.8004 122.584 cv
cp
.317647 .290196 .301961 rgb
f
22.2716 124.354 mo
21.9737 124.22 21.6749 123.983 21.358 123.916 cv
21.0743 123.857 20.7403 123.901 20.5372 124.133 cv
20.276 124.431 20.2174 124.701 20.0909 124.925 cv
19.4352 126.09 20.5279 127.708 21.8907 127.267 cv
22.4146 127.097 22.8551 126.695 23.004 126.153 cv
23.1739 125.536 22.9049 124.637 22.2716 124.354 cv
cp
f
23.6339 127.252 mo
22.8043 127.252 22.8028 128.541 23.6339 128.541 cv
24.4635 128.541 24.4645 127.252 23.6339 127.252 cv
cp
f
29.8004 129.284 mo
27.297 129.284 27.2931 133.175 29.8004 133.175 cv
32.3038 133.175 32.3082 129.284 29.8004 129.284 cv
cp
f
33.6339 134.075 mo
31.7184 134.075 31.7154 137.051 33.6339 137.051 cv
35.5489 137.051 35.5523 134.075 33.6339 134.075 cv
cp
f
22.8404 150.133 mo
21.6559 150.454 21.2574 151.99 22.1217 152.855 cv
22.9859 153.719 24.523 153.32 24.8443 152.136 cv
25.1983 150.831 24.1451 149.779 22.8404 150.133 cv
cp
f
20.8004 148.18 mo
20.7359 148.18 20.7359 148.28 20.8004 148.28 cv
20.8648 148.28 20.8648 148.18 20.8004 148.18 cv
cp
f
4.94345 141.622 mo
5.03134 141.368 5.13584 141.12 5.23398 140.87 cv
9.0748 143.161 13.2794 144.797 17.2184 146.943 cv
19.7374 148.315 22.2916 149.603 24.9186 150.757 cv
25.8307 151.157 27.4576 151.614 28.9332 152.18 cv
22.1832 153.831 15.6383 155.901 9.1666 158.535 cv
8.79795 157.614 8.42929 156.693 8.06064 155.772 cv
7.83799 155.216 7.45127 154.855 7.00595 154.648 cv
6.95078 153.146 6.67099 151.992 6.04209 150.594 cv
4.49961 147.166 3.70615 145.194 4.94345 141.622 cv
cp
35.4342 152.114 mo
34.6729 150.553 33.6075 150.055 32.0636 149.35 cv
28.5582 147.749 24.9264 146.479 21.4889 144.699 cv
15.9674 141.841 9.7916 139.446 4.75937 135.797 cv
3.04013 134.55 1.38681 136.684 2.01133 138.313 cv
1.97519 138.408 1.94492 138.504 1.90634 138.599 cv
.9957 140.825 -.0399445 143.089 .00107115 145.552 cv
.0586883 149.02 2.96103 151.503 3.02158 154.907 cv
3.03769 155.79 3.52304 156.363 4.14756 156.641 cv
4.16709 156.706 4.17685 156.768 4.20322 156.835 cv
4.9581 158.721 5.71347 160.607 6.46836 162.493 cv
6.57138 162.442 6.67295 162.387 6.77597 162.335 cv
7.16904 162.984 7.89121 163.355 8.82968 162.96 cv
17.1031 159.481 25.4786 156.953 34.2389 155.052 cv
35.5851 154.759 35.9659 153.205 35.4342 152.114 cv
cp
0 0 0 rgb
f
38.7862 143.018 mo
39.5719 142.996 40.254 143.042 40.6427 143.119 cv
42.7931 143.551 44.544 144.97 46.5851 145.714 cv
49.0069 146.597 50.0509 142.733 47.648 141.857 cv
45.5826 141.104 43.8971 139.74 41.7057 139.262 cv
39.6808 138.82 37.5353 138.88 35.5431 139.447 cv
34.9625 139.612 34.4059 139.824 33.8805 140.075 cv
31.4386 138.61 28.9991 137.14 26.5489 135.688 cv
22.8941 133.522 18.8717 131.843 15.6754 129 cv
13.3727 126.951 11.3145 124.865 8.89756 123.048 cv
10.2179 120.181 12.2652 117.82 13.9386 114.621 cv
14.6856 113.194 15.3131 111.714 15.8946 110.215 cv
21.6681 115.92 28.1261 120.848 33.9601 126.5 cv
39.7066 132.068 46.5123 138.169 50.277 145.362 cv
46.1695 148.617 42.4107 145.259 38.7862 143.018 cv
cp
54.3043 144.483 mo
50.7018 136.813 43.7662 130.628 37.8443 124.714 cv
30.919 117.798 22.9542 112.045 16.2706 104.864 cv
15.4547 103.988 14.4137 104.135 13.7027 104.726 cv
13.6769 104.695 13.6495 104.667 13.6231 104.636 cv
13.5885 104.722 13.5528 104.805 13.5182 104.89 cv
13.1329 105.287 12.8927 105.824 12.8995 106.385 cv
11.0914 110.679 9.12949 114.713 6.41416 118.755 cv
5.64609 119.898 5.11289 121.072 4.71787 122.266 cv
4.04111 123.13 3.95957 124.527 5.15537 125.292 cv
9.57041 128.118 12.7052 132.371 17.2081 135.059 cv
21.9708 137.901 26.8648 140.537 31.6295 143.39 cv
38.4298 147.461 45.902 154.507 53.4195 147.947 cv
53.8761 147.549 54.0611 147.089 54.0636 146.64 cv
54.5035 146.073 54.6876 145.299 54.3043 144.483 cv
cp
f
76.3727 42.7941 mo
74.9469 45.4113 72.9107 47.7014 71.0011 49.9714 cv
66.3517 55.4972 59.1012 62.2756 56.5294 69.7204 cv
55.1935 68.175 53.9161 66.5988 53.5401 64.6437 cv
52.9049 61.3434 53.3814 57.3093 53.631 53.968 cv
53.9361 49.8752 55.0934 46.3615 56.1241 42.4611 cv
56.9454 39.3547 56.9957 36.1418 57.7711 33.0368 cv
63.088 34.9084 68.504 36.1271 73.6788 38.3991 cv
76.692 39.7223 78.3922 39.0861 76.3727 42.7941 cv
cp
76.7535 35.3762 mo
73.4825 34.237 70.8507 32.633 67.4415 31.7892 cv
63.9518 30.925 60.651 29.9035 57.2818 28.6203 cv
55.8282 28.0666 54.8795 29.2565 54.8756 30.486 cv
54.4718 30.7072 54.1407 31.0871 53.9859 31.6672 cv
52.8331 35.9963 52.421 40.3967 51.1974 44.7365 cv
50.1827 48.3327 49.7018 52.0114 49.5313 55.7414 cv
49.3785 59.0837 48.961 63.1154 49.6788 66.4289 cv
50.4898 70.1711 54.0782 72.1305 55.8595 75.3796 cv
56.8526 77.1926 59.5011 76.2736 59.586 74.3703 cv
59.8946 67.4435 67.3897 60.3674 71.6104 55.4059 cv
75.0245 51.3928 79.0611 47.2971 80.9957 42.3024 cv
82.8087 37.6218 80.8204 36.7927 76.7535 35.3762 cv
cp
f
182.28 233.904 mo
180.019 236.148 177.758 238.392 175.498 240.636 cv
173.442 233.563 174.532 224.174 178.694 217.806 cv
178.977 218.146 179.28 218.47 179.563 218.809 cv
181.953 221.673 183.761 224.207 185.624 227.432 cv
185.97 228.087 186.379 228.701 186.827 229.289 cv
186.731 229.404 186.621 229.543 186.486 229.728 cv
185.641 231.264 183.534 232.658 182.28 233.904 cv
cp
190.719 227.974 mo
189.366 224.702 186.849 220.937 184.521 218.267 cv
183.232 216.789 182.341 215.195 181.194 213.695 cv
180.609 212.929 180.491 212.562 179.525 212.194 cv
178.902 211.957 178.014 212.222 177.579 212.708 cv
170.692 220.399 168.554 233.975 172.213 243.417 cv
172.309 243.663 172.442 243.864 172.592 244.04 cv
172.361 245.663 174.508 247.255 175.995 245.779 cv
179.968 241.835 183.94 237.892 187.913 233.948 cv
189.826 232.049 191.855 230.724 190.719 227.974 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_7.eps)
%%CreationDate: 3/12/2018 2:38 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-(N\6:P'=m1Sb(5nIe9BWrV's>]D_0qX=KWI_l6]\V^1HgWu@=`Mqh<JWT)(\X/Fji\:+28\$'.%^&@B2
%_lMt(?@V^Uh;N9J?LE:8j;[p>PMMS7c_%uKlYcb#aj\#G2:oT6?emhkIXC\Oont29G55l]A,(ots3#V,Q.u@hB7'I>(GDTKMq^1/
%jQ5IZ3;l@^qtY\iUpT^fn\>(kp7#^P]m9S;c*LJ)s4:%clLcg9hYN/bDkH5HjCUX23B;O>^YBiJs7GCLkAU!\]Cd`Nl^OO5E/Xa+
%pR?*Knf=pVnfYt_Ys\QQl=fD%:EBGDSp'jHpq,F;?.A'8p:!OS_s7VSfu55Op3)#!o)Q/qQnO:;r;H#@DkB7>F3>_#D7Re+6KaY\
%'kP052"_5f4F!!,*lG\7[9iYTj^#"M.bD%K.4eQGVdrl1"+U3cZeN7oD"lh*T6u(ag;`m`op[V+rI6S_5)$%B;VCl9Y&[XWSaa8[
%TARB^Q^?%T8=*qs2'&K"^&%U!\TGZ6URUFB3:'QSnGhm7h`lDbc0ZI4hcJ.=`u+bk=-rou?[r+8QV[U($]0!!OPbG4qssKbrWcg+
%Vl@5-i+q/ZP3%%k00=8PQC3l2[6`Mh:h:L)j/9`]O21^5\,MnLEVupElu-2pqrZSTT='c)5HVno/H>Y@Z`dG-/q-mps7f#aFo'S`
%++&"lL,X$g?hQ-mri<r?VFe$trTXbQqXj@E_lFRjRIBXk]hF3J1/jdZqSmurre%tL>C?IQI1%".qXlALi7UcYq!k+dlgO+?^O?*p
%r:9$S?[_tA04+YBe`0.a^AduZ+)cA<I.m,SVn_$W[m/REQu,W*^\R2rf7/p4ro37u-gQH#HLgFWT=j3]?i9$Zc-nnLhptsqk/RG]
%p?A&JY=14]hYlSts',JR]0O'rIfK8d;u'nupGh=Z2j@0bh7m="jZiWl+*,'Y*dRSS#24BLq8;Uk=5Qb3f(0r'a59(1o('ogd:n#n
%IZWGLO\oD&M%agbr8Bs9'[cn\\qP@]%a$k/R""_$7m2.hB3?^%?[ht0\@_`]I<0dq[QW]3LF:E?5PsU9PAgL!m-/EfqYTa\]_hZ.
%=3nqC0Dp8]C&T-&Ke"5j_1-h%a&gTZIJ725Ao@FHaRHO6cYpSngNRRR+#^-dr3'K,k,%dth64$rc9FSdVdAt$DuXbQZuOWm-cn%A
%1HjiXVsKgEce/534NEoj"$WOlo',IQU(Hd]phr=YMn_FfNW%%5Isf:)75t82fh8RlG$fXsm*4oY2da8n(1uh!Ma'H%p6IM4TD?HP
%bOh($C\,.1e"=@&7<<IXIlX.lo@HdPIO8jmcU;o6)'`Fu430X)Tgs$>?clk2\'(clG5JHb5Pj!PO-Zj-C\%RVF1E$eq%!F,S?)Q\
%$M_HpZBuFlns=')@YMeWO1s>_r^8]5?=qf-!t.J7ZKq8;oipeL%Us&tZ#>p3pOP3leOSJ.s4p2Y8bs\cP!8_*507U(>O7EO`-.id
%7hC1IrTeBohu;*m2m8jdr8nb=Gh0/8^1@VbAc+-Uls.Eb=ps3IDu<+b_,4HXoc[1cQF8bXe0X;XHMltf?RIknFh%.s:6)0Aj>aSr
%]5IDC/[s5=$dCUXa&5_+=SGgE;+o.k<aT.C.0hk:&[<mt`"L"<]TM5&a$.ZuEm=AN=^95<j`#Le9=g8GP`Bc(dU!E/<2rMPLm1f%
%_^Ciaai,2Z:@TH^]P;7[*YC2'Ld;LmQah^<E0B5u%W]YRKGLR----1.P)PZm5;#M$LhCbGj!;[m+6;(tE@q/dK3o`+?8@AT*5-Ho
%r&?\P*:Ch;j>b;eQO_bCVoVqt8;N2kZ:f4+-]c(Iics;#EE\BC*9>Fp\X'#\W,cDiBo.!9IDk/9s#3G<?HeDH:]KN,DuSS=>5GM=
%_&ka6r,[HXb'srmrs(QepNu^W]l/68d!_$$m5'K*+65\Ri.Z+136?0%"/h&b>Z[%,8<*rm\lrX"daN*p3/[VRjM6T`'+kUE&7e>.
%#TnO@a&-C3+NL)EFC"D]*Ymd/]MK$/8=.C6,ciUBAZ'R556q#a^&7o<*)6E3q>VZ=?Q_<>%?Wl9i@%?%o$-2b,)I[-<#Q;<B91Xd
%E`kd_`DNLKG3O[-3g7l/P>M/h3UNTJI,^cBgsLt+AEg](EcR)Z<u/p4]9<Lo&4p^o>c4f^KI?#m6TBr_akV_M5-)YN4Ja>-R4qWQ
%fJ/rXqo&#k0>EhP\<3?i12j5cj\`tEafNcC(=t<.2_n]*`ik1f3&^"o)<i7g?UYS;f>m1rOV'5Z;acMG7A`g(HVUGGPccJk\F"5p
%*(Be]0h<\SUHF'VlLF_\59>l+8"!-2P^)7f&bU3n3h24Nkg,5^+YO0&K0c=XU=4#RdrE#\NT8+-=ZAYX)L`0L#f79EW02OsHmsaY
%6?b#u#9c3-*-(G$M@R3?:i$g+"Ch<(ObbfBY,*rJ'_3L!jUGfZeYhSPLfCC9Z%<5%9Yf!2]'Li/l%U3+YISkIBONQ(`2T(`&M"p<
%agpS6`O%d:9!`k!iIc8n3lhT4X3oVPU,9#m!P2Qse)BG."77<8+IZ%0+j,p`-nl5'$$[a6$s[a>^E:ju$acGf7p.i_GXVFLGVDD2
%:&&B>-G7hh<#DRq`_j("2BG44oCdnZHc+1tdmrQ"$j\n]8f\oP"cjJ<j)DPB7d*c%"!YAh?i5`8Ef$_/k(^$.a2pYfi$:H`QLJR$
%=2tW,M2_h537TbF$ZleW!![16`GhK-3'kQW3^eRm7'I`R3^Uf;#NOf1K`f<CW.t"N!0:)T-[r9lhCO!tIA5L0Q!9Ti/qL>;Ft&sC
%0Mi77,Z:mF&k+-[Bf()T''Y0>c8+(LEgB@^bW\'3#mZTLCUk`<CmJsu,!B8nBG$XnM6Isfb-'j2<B`Q=f11ro/49j^)_<^j>?o<W
%X:?,BaCW>1;)ubIYb56B3@VP0Ql33N(Vg;:Ql1KEA2ZfZI)qdLDdi1GQHlF61m7KNi.B>mMh?rs('uN%R>Z\M%1AMU,8YuJ/d!EC
%3t;A3d5X.S@<-3s8Z#W'6lMVtfe?!X,-cK`,h5SO8;"j[5pE01%$J;l,;;TMR3IY\LmfE#H;p=Ra\31WVT)K13t.+'<KNu^1&TQ5
%giY\tf?HQ)N+rL`\dc18-K$3!s!)HX7e]F.,WR!nn^G-J^R;g$XFMK\Ef0&hOX:6uYG?.E^g)<(]`>uK1YhX)54&.?F9)=%ji]#)
%DSP%V@nl/e\,dE#jn>Z8"5OU[@NQlC>"rW.61hAp)^1+<JsC9dXUI97ML[Pr[c=S,ZA@UK7._buJeR*;,0$?V7&Z0R)*F0:<:+#C
%$rs3f$FJ3(TXkhK#rNU"*",d+T'GgpQX?/^IJMF4[kGDcU>)$iA?)f53GL%D\DpD*1:9g#3Ep`.dAa-EAZ+fg'j_bmDcM2`B<R*C
%2Q@%p10fm(*B3r4i]S=Mnf\(mmi:<G&aqa.p7N>;n&Y5Ejo.X8Gi.uTLE1EULS*BDEl]7CFPaorcZd%jN6/PKU/M-,NilAWU/r-#
%CP,`#W`f&$5XDl(H6J!rjWMb#N@]$7QF]a!,8s"(r+K7\cmpP%qIo/^GmDg$d\,@DO?6=sW5_EY3L*d'VOB'eh,JGPd(8pRc*I:%
%aj_G3F)2\'P9ECs5]kN49X3XC%[\]rNNlm2fW(c[PH5jC1=!&I5f7RYa)T[Ah.Y8iVV<k2$9)ZY:]G2n_HW%FG,.2)[3IE!qi:7*
%UTTC-Z+fDKhL<Ndhf6[5*Y6!FK7DsBTD7Rkj,WTV.$Hio,3JB4JSDX9>1liHLc$UW,`*+=AI?Rp%BDq19IJtGU>8^][D6d(F;?)A
%`CZ\X9BaS;lu(b[)Puba=fYeK@6BpHG<42&@;$C0(k?1?QsnPsVs`UTh4iUl/YEi'=LH@lrC!EFN<@gfIFRr6>oe!hBf6l"mAQ#q
%g$5+a%<UPgdl`?k5"mK_InZ;'mW_f[^&>HJVnH=#IF.N[NrN.(r-,taSK/UO#Ws:oY"W]0qWqCU!T<l74B_$#lF(B[XYF.$&;s+;
%S/2V>S#K<+*JWD2bqmPCl!QGmb=OfP.(1\<%[5s-l+93/#7CkP5_6-Yg/#PhhEk]U%KTt?)hM:78'uD)EeU)h,EP@]7L0B*Xa=o=
%`XS&"@XtJhe07d2<=C5)+4W]8'rkU))PbXK5,MV:R3sn<?M(Zo-K&sIT%30fboY6_IlXuUV]W0snT2?^S1Yn!AEDh0)6J2J&Kc&7
%*?TAE!T42'ElSEWqd8TJ?)-31g`18+Z5AmsF;&QIl/m)PTl2\(P"\/c]K%$%6i`)+@m#'(TuY'B+D<)%l3Mh?qJ>f+1I4f%ScCkR
%G67,1W)J8m,@b9lE[o"A!9XRA1h]f=M@OMf"PTB]9gY=*\7tHpj%#V#$?:6N;diE)3YgpZYZ'N+]gZ?[5u5:f)N0RnN>3H;!7Y.N
%[`;s?(7X+n%_YoN@56JFEEYPjdFoH0a5[_8O!.M']2S&3n>RIWC3>o?X.!p(eT&sCHi.PFH*bJ9f-=$\fGs'=DE['@,=]=/gs&"&
%l)i!'<fc9nO2F<p\`8=f]*HWmE6'%AI-uKT45Sb?egR.Jb%H_)=egAE4+>a/T/Fc(NUg5II(DD.7N&2He,N\QhoGb[3=83PBMC%d
%8fB/)alS8gV]p2M/T*iim=i;[86,FApHs<LKifrM?!n9#2BHkhgs=44b/qs^`2i7%</!u[ldli]8+LrgQ`K%Kfj&Ut]7/!OrEqI0
%Hp3+n-_J1kP)En2faf4&Y<&FeUi3B?T967U.7&"H(/`;DH*QJI/Q6QXq=EbsO([kka)S#/4Qs9PrCeV4M2ai$;6gHN$H5;/A;sfN
%>>n/^roKkNIZ"#:_Fj>hBB$U8A`[:'EZs880"scqr\F%NcMf"3*cQnGc)CYap[%ADZ/>FmHg_VA&/Quq&8=@u+Ie%R9%`mZ5ZSS-
%Y(V'4(3^0s-!ASH/2!fN,IgsrX>hmVNpp$oXK/!H+^O4n.\Ku`^7'[UM*N[[<l]S;MZp-'#Z)NRQD+uR$/T7q[g52QUtq?!AlC7o
%`q!4`@k\I]/XElG3NFNXYY9/dA<f!W<&I0GJ^^*NSZ;LbgYC:jH)Wq_od&#\`8">::[K%"_(nuPUH3%e2T(1_Vq%E'*B0FnqY8HP
%Oi-Og;m7L,,E5*$c"5]Pp!1tGNgf8p*ueJ[ic2VMfT4hXda-0da*j9,HAGL=hW>o-BVt4N+a:TJp2S.94210KRin&Pbn4clVJhQT
%UVV!\0kD]mBX6NXWS<>F+4WT8+XU'I*;"rF9+Rq%3]fh9RVkS=?oF"OVbT8^Xe^6pV5NT4n+st=l^k,?7Y7;q<GRJbB:2%rr\S^3
%>f21?k@gH/eBka[c*&_GeAL?r"N1mad]dp+F!H5&/AMs%TV*H99.h(d$rZsl+s62[ou5pTIue)7::m+gn..ZQ,hfKcj7f)ASsA3@
%T5).uEqK%'j&dQ!Ai/b%&+e,K<,T.bd%%EHF[M54nbCKd>WC`V7s`4<jc9/Q8%ETgo0_qjVsQ'+HhS\-I)&nRF8TP*YntV8T,M%I
%hSMq0q*/]R--qaZ[G4Tbr-OJ(an#>\m!e*jMftJoq]D!U^Of*e.Qonr"^Mq<-*MUn,LcZ*YdD8>ReL`nP1Xh[=Qpf)lB"mbOO=n>
%\cX78hHlnO/Wb&\6n3AM6Uqf',^6m/)6I;oIGiHi!&Pc#K,t6Hgll1-g@gUiT!c*)i1jO<kRN'oOY7esa*W:,TuTCg*RB9&K.Oq5
%-EF;[=i:e6:tnsSc6Mu+BbAhia@[`-+__Z(C65e(l.Yc)@_.4n+8+>4X#siOlWSH'*]6HK+5NnW\f"]9H;f%;/!##D;:eSNJ1CaT
%HA^h3Gq)_"10)m_p(GpI!nGHC*A*mYk@LZS+'B&XK&n@aWXi-,]siC!B)55[Ws]Sp<7>QTFYkd8Yi+4SW:!XbR1@`A]2IHu=S#A?
%WeE<gO!^?06d95EdnuteT,m1_\FUqh$l9D'n)<,C:h)`^TOr]:nbCMLcElR'mR-F;J@"+qpd`'Y7anRu=L8O[Ks-p5>%Nk/C*&1R
%i$.JhXcJZAo[j](7W91_FV6A0RAAiYA#_t4-nNPD$;omq']MN/F_!A33XaQ@U272D$Yq1IlRA#l+YaMGHIJ]2bG_]MW0Mk,Si]j%
%*BLiJ2+m-qFDlcR`dA2_r1XW6CGPPg__YGP")n[SJ3amrO#8*+*\*K2@8<M#6"4#Dl`i&2fr!hIb*$EWSej+e.Y>6:13L(5b$2^4
%gERf`6]PL:V5]7=ELbm.a;s/`c<H@iq&sspe+Re%k<$E(nNNX'`ZAYBXpZaL`O6'/$;-YRI/scFUY,Ra^pUK?6F>]=mk=pY@QKQo
%8^$!O"Qf)$BpEisA$-+7`G36,<15[:-tnh#S<[$s726rL&.L]n.^in'gB*:>bdB%,BN'2qSee%K?Ff*$AoX`-CQqf.?</f\Nn3?L
%=*>GEhhtUtmr:j1$1]+AChJQ8Uk]/UdW!A.mFEeS$"VuPG3YGPnKa<QaK0=6hFHQ,bq*`L]Ub/J6jf;s>1K9nnOE'NMtqZq%uD#@
%Q#I!eC__jBhRsRQmE!-hq!^]\:+&L5]^]c_FFs6<L;6*f=SSJMj?K=8BhKVg:QSnnV`+ila[KJ&rm^D[7Di%9NSO'J(dC+ISYOt#
%2TE;_nWJ`Xf1:D#EGiej0[g_E=S/iea2q#[US4?-1W[.!2N0CO<hkUc)4>((2p@r*=0l^$aat+1\7(2m)(&;=9X*hkH5.[>87lJ5
%H.>WhdkIH?R?l@l))2'o`RAVZ40?O`WJB%qFZPRAJoqLR=iJ<GJ@gU'neAH8Bk;0/8sr5KHB?5cNQ_]:Z^@Zu/SfS`>?FXW@u_4:
%%)Qo0\9t=(`#KWn\hSLJV2!*9A+C2+VYgqW2=Z%hf74tsf")VgYU8O5KVbrR(&;^&>L'Yf^PU?,/4pB<!d'JTX^5nV0HAp?8Qq/6
%\6iF05O\k!^Ui88^\2m2f-B;.US*#:l1>ilB_?3rM/4Bl=?uJf:+$X65,%6uU%4RI*?mV8:`H%(c(9kf[<65\iPC2hK3A/=F-!0p
%/?>,3`UC-'d_1`8^;oMCbQMUM"RRlT7U-U";G+;W;IXrT;_iC,8<dgON%WA8aYpA49XQ*?_a<QFK%_=C_"D=l4"o&ker4$>Q]Fci
%68*9giu$.K>#TI^jmFj>Z#5\@O1,=9aQ1g2_cr-+ZV'"_5CUPEG8t<e`VaOPq-1k68g:r/V=q]l8(N>sVUOrnDFn]6HG^fVP>Vui
%%Ub)_ZXPBj'g8P_:@cbIZWu"'!T"(/X_,$FOsS6R(<q.ZgEi%1d@'rR,X%mA+-_UQ,7L,u#\K=,&2>(G/$c$iMCCj7#.=tk5m/U#
%hXJ#u2CrJ-6s>-/5+C_$<oeW-I(nWjloY3;4<.2Z#4j\j$ZJn;U/PM%A4@Oe`?ul[M2[.^kk7!7"ZfdXPM%+C)U)L2KRfa'_NI6;
%JSVRA)+,G/O]GLDc%t"JA-4@^>g/&k@bGE"3pYRP`ONoHa28eDS5Kmi_Ha.V*Q0;cRhO[kAt?QW46HkG>Sr1-q<Y&4!(@CF6RsP?
%I9LmHlPlrj1"Q1"?Weu3ocm/K#+*$meH`;P*FrTkH[Gr8aIm6MIJj&_;#+B(KmO=$@mAqGGFUcaWa]7reW*IJ;fQ*N[PUD,1Vtu9
%X23WkUZ#S&pu=k&/^anCCC%Jo;'/492g5Y/A'-stV!$TKaSNo>NV%15XMkPFB6=m:3:]%$5@dZpd_&a3ZYd,0_h[KDo3]dq$_&io
%-I?fT,hdRJGJd3>1q!><ooddp?rnZkd\XiDEk1490E%X4B#d!429>7[nDaNqkVP6TFhB$lkjEF$(@i%Bm^NITf^"g9KeMfWD-`ju
%28O--kF-pJJW2/&h'XP^c:4(s[+rJdAXmuq?VHki@Lan9*Xuu<<r1.TiP\YCE_A[070_'%B4[=Q$#'((IPsmaDs%81qiUYs:-o?>
%"!s\$)`$,)j]=UB3UujrPM+4oIl6m8Ts-BhD,)@G'>P<+='tE(`3jYQn4c[a`keJ/T!<<CC2c4,%Gmre:C4is/1L@2Bu,!,KC;M?
%^697YD^qtglosXCO;.VT#OaY7cc5'19FgeT3-ZJY]Gh3JR18Thr79f_K`Ksm@CJ7eF-qtJ@QFJ4[_U*Z[UhE[kGHr'%;cjH3U>'Q
%A(#>qjc18s?p;lQ"`)KCr7Di8U,@rMd,<@B2@@7/Rn$]HiGCgR)K>G>E94uu_2EF:!r9(<0\K6Hi/VHD6EOWVX=3D]LV3s[oj=W\
%2L=dQ3:!Mug*"6_*dfbXqJGbWl#g`_Deq1?RhC%6\G4n0`HTF^q]"B`^g&C:M^9ZDad8LHb:2hahi.qO2ZtAoTrWVJ=nS[XU@2op
%npu!]%(_99O\qTJ`*0*&]\B0u%Wtje`.XVEBKM5ZXSDY]HWYug(`eVo=Y](T3fYd6Yi#_Z1GIEe,BdDBog.2Z/.1hD71`^mcQ^S6
%1SM`lHZPZobXk]IXuqhf*S%,DHEKfJUs\-\B\gVB2B(m;p9\^4MFE%(CfG0AK#bMI"k0K2S&n+*2qZp[RReCcIN%rD^\<-54X]/]
%3>OXW1AR(A!$k3MHJ=C)+T;2)SXMa=WDiUEca]TZIe0@T?VSm.SD?Ec\c;J,S3<Qqb6;)BdLta-&rK2.L&<5Md4=tdLu9DSKE'(c
%.G^Nq+*/6hK0IlG=hU>q-t3$"7\*1-F"O%A-INNq^K<5h;7HAR)&Y%SI0@uca(\"H%U1s>AXgQ;mtq/eVl3Ch40EA/eP+/(:9I(I
%I>22i&'Z(6#%0CdAn&r&B)ZpOY@eXFgu<**Nf"\XUJP)LOmh?SB8[GIPT)dW3*O>lBbN)FC^7JGq[kL.9SXiO=fP_;]e$?h>d:@S
%_Z>*"o]Q:`9_)HLFb(@N'ELZQe!f6W\B3,BHKZJ4$(DgG--+t]\F;^ZhTO`I?FcCn'</MrD%K-nl*9#;RWqaJ17*]2MF+2RX6/6=
%H5T7,!0K!cr+M=CXJHtU=D7#,<bn[(0>m!"'Ne1pm;!H-pud'D.kWuCm;R1d]3H@u<`qBf+0<PlmW>jkLA2+c_(5X(Ya+5P>\/hn
%ba?P1W";aMr2AX)"&"J\Dh6KB#DR7T8tXS/iocFq&a?4U9ch9B7Bt+236Ru)07*biXc+6e1H=s^,JE3[lQLJrS"nbce@-E]""JNM
%\to)`_X?<%9U1QWa28(aBRc?/>Rmg$ZXkF(]Yh)-1."(J$=.)EX^4O:`rs9iqr0H:Q<m6:UN-9nB.4;EUkZe0JmmafePLqddc%Cc
%p:Vh0cl3450`hA+i75FX2EB.+$(hVEDDI'so_)\ShBTq<B3/C.I;2rC\gr^6AA4GmDVLXgn!2F7C%Y*"L-.O]+*+o;*#7lJ4GH\$
%3_p]UTm9.GLmC0KiuPEA"3Q>Nn+_^NFO)<^>"Mjr?+#+5Y?]236khrT<4H_QD?6_\E*(\HDWCbEpg*MT7&Pa=]9J6)bP_n\L*H%n
%QCA_Z2.(=<53VQu[J'/[@kYaNS%UI";=5.@AZUfFNQ8F&9,m`gblf2DZ:oKP9pqofn^HdS;mX"%>2qdM!D'*3+Fm.j3(7sOTlT%R
%,&eKkH)[5KX*(tA(9GQ;/qsH(*b"6$;KUXf_e)uSc/*QH*mXlikPN`1EQair5'<2MbYa1;h9_j6J']_/qmJKU"uq#uRru'+^?(;R
%d*i?jJV5W>nk%Gb1]+B)Cj5-rb/^`V9L`VC8WuYo9a[u(?QCJs^9&l-//3P>.PAgOlcrIIk2=X,lrWAI+OV6!=p%?;-qU4J13p<k
%FI79HRuEuir)n6843j<-TK`4DX\OcD.]b_Wbo772GFP)1@3W4mVPUH$2+uJ#U/nI2V;bi@$.8-!\n%qk29Ase#pVh+4;Ei5e9fsH
%Ta,;F"^dGs;qknZ+/e%g@s)8lnP(PMlf\>;*(t"OdF")E:"!I7P!IhBZUN];VL9+/2eKU\`OZ:cj.ANY&"CAlCp;2SlT,N2[\)!#
%HQWm+HO^7+DTU6q?k*P;UuD:F]F3Yk)nkm%8#UA6)*71jg&LK<D6Wrf3k)_h^3sK;W^]!NE,tuej$/g$kjI7^+Bh?Rh`*lL_H!pJ
%e8;9k^U+3J3j%4@rR0=bT[+Em>J*s/!]Y._2`EX%;Q_H&:$MLTo<n+t30WgV0Vt8W.^RVr3Mj5(<O/p#W"C3k=<LZmXq[#a6K8u'
%1I;T(.(6`[h,uL78W<#<ZZM_S*t3U7C-8o@o6OA[-EHKT1j9Zig]E6)6D!c/:U'0H]]US>niqHPbIR2_[S$P?>q]hs%+1*-@+WSI
%cV)[D+2-td=8#2;_)]^kh,=,8R%Y+"aAua0'i6TPpfLZY"2L=nn;3r,A\iKFgSEdkj8m]E*G.O(4?sfQ-9eCs0TGCH-/t-1KT4nP
%L@Zh=j#E+\4I5SP!Y/C(FIqC]QqjEfRH=%MNfb&.lDDt"a*6D%FroUfN9='HE>Apn):`Y\_(F&)q_BhMI:69!6HIm.7suHQFl__j
%T1=Cf"a;#;jgXJ00MB616025^Am')+,XiJ:-4Uu?QmH4,M(L/iCrI&K-o(q\?FDDIHb[#.`FN)j7K1X-]sR6q>F):<3J7AU)2<o:
%0F!6D(OZ,S]C)GbqTG-m3SncAouGm>^$iOM1N?\Td`hXq_HHq=`8V4*]&Tk,\d$cPj`rWE5'5ueK$h(cb2VJoB%r`V%?Q$'hYB!^
%>lE=0.8]Lp8?i42X.a^H'@r.XZJBd^BC?T_F)a)QX-*Ef>@6ZbX`&Ccd<D1#k/Z5QZ2[e.N8\PISituua9e^3VrjfL@1#PQ1:t][
%;)64@PZ;j<nZD8g^>8X7lPm"qGVNH^1r0RcrYh$8'/[/O[;"I,^c/QI\,#F"mrpg&)l`Ej5(7&8Gg:VWqk!DKDVs";C:h*HcIX?t
%$nP#OYuX`W;5XG'6Bq7<LFP`>MI*h1=T4]B:]m.iF?Ik!gneA,X=c"><EXSX:"I4+1JHIZff#P!Viq8Gf<9)Gh9qK%FP9&V1Yf@6
%iWN+W#;YR:'0KhT?]Lnp-'BU0_AZ)5dBjXiGh8PCgE!m49e[OV1dMf@:>HTIGRrlFT-20Q#9kMQ@AWF_pX#LU_k-V-?;hhF7%s&Q
%2cG'@pOKjY;"bXbHk4$a<USB2!M"9%-96h]AU!6K5l9qa?F6_g$P4WY[5aM@D7S)kr:W.gr@H"fnY<'cBa,k*Yj:it&=GHKXu!`(
%9%5cZI>52nWqa+WrhO,3(SU5uPg+7"pDgp(aP-hTD'6q.]>B&j9O(<rS$^0^!]Wik$<_/0bpCI-IaC.3ObbI9EO"M3>P$2finZB[
%mX9.0aG%]gm?r<>i+"bXI]NOW!M^UZ"NuG3)u@&i+apiQ4Fu%,p:%JYXY9&NrLX[p]^NnsJM+Pl)E*n%fh/a/nT^r$/r&dHmX0<e
%Z93a6c.9Z^3W;^3Ii*-9Vo@8Y9`kbNZ((!7]9m%4e&H3c'DF%PUl_1!b/Sj"Db+l?##'ltBWkRdF$9i83EC\$N!Y+:AbZ[1IKh4X
%!Dn62M9dsI=XH>U`7nh^h\Vs`[s-.Omo!0@-<n-4%f)Rg4o.*bOOhb9M^BXf6-f8!(\X$41RE'($DrKk@2+a3K,On4PJ@BL1]8EF
%p>I382dPm)0"3[JpUTo_T&,6-rZP(OS!j!oQhMlJA67i`>aKT.W`i;06Jpcka0Z5(\Q^9N$1@MY'CLALq:V7lJ(j:^5C*)Abd>X0
%5@\)n0sJt@fOkWZ1C!Oj"8e%.IE'&d@pkpWgWt,bB:8NG';&jq1C!QP0JI5:lIW4Grq?#kQZ&J/r8snASR(pa2if'ZqHNqOkjNut
%jNX1Kf.Y+$hgb[NP<Zd-"UDdAFm".`.cU3hUm%uk?K*T7G1AueFs4Ju*5Rhr2nmlCr8FjSn+ZYh.o4t!iG\S]s%!(f^SUV,dLEfq
%mJcd./\A2.o;^\f99B.SIcoMp1uET:m['F*nRfPkguP'hm7gpHs8Mijopb!JVf/0?HMQXphf_65m7I;&s6A/+h2eah@3,!jl0Du#
%?G6>Qs5`EOU`7)FrNk[r?iBEdl'n=3rWu[(TD61knc/!']us9fr&9$oo$eW^@p)uYfF-M*1&@u-ZCl<hYK9LgGbXrbG%1sR.P)n7
%>R4C[f4qu5aqZ=5V&=fEcT@P6<sqW3SSqRRLXP+`>\JG@'>o:n<3KQ&UJbZE$mNhL:$'YnOqtT+m(Zh>oa6sY3u@KgBd)jR\.m2*
%O^$#rAKK>H-^H9Nb$J92Q$e=QQ@)\"DUK0#`!>gYWT\sbTB,BD]Fl7DGG67`iZc-Ti@9^r]DFli932/CX8/e=hT66:22#6;a%uC+
%2mQJ"]*]\#J(h(ue[\s;R"LAWYG2&?29U23>SaKX[BlnnZc%<`^Ik5aFu<T;O$8NNAMI^P^k7t;Cfab]%2sW=\T_K$Y8pe8%H0/>
%kXBqP[s'G?Bopr,$X^]m)t`IW3DI4jhD=1KGp@STOm.\/gK\r0C,^M(R\\27quf#UhJ9*Q,F%`<5rq768B4D_p<lG:-+i_rEqWLl
%'p!lqi>IQdUT>Znd;2:-\0]87E6!^E?Kko:iN#D[#X2`1,qLWS?I)bm#P<%?d-U6<Gm:k5@r=n37-1j:$<M2I[3bZhBtP&fhR$E=
%Q'#5mUhl/J5YG8Hp+cHs06JIZ1/6,#j;iH<Zn'P9N\B`$s.)ctKa%$bf1E%8F^U7E=d&O[Q""j+I%^.YQ&dKIUC$MrO)2,IYbel]
%j%r%L'.ZR"MEc$mSkRmpln>[BmDQ3>&t^aCg:b!pf&nK<E#6U(9N\i0Ek$tM$2L;!%C(ls=ipQ-7iBI.[Kc[GU.dS.L\WIXn1`'`
%ms*`Y6n7RR);""1^WM.WPrXsM[.6tont.\R'&K&TDHBEe8=.N,DI+S"s-D=ao<5-hj0l`4Yd/hEX'[1T!)Oc#U&n.@<_DU)q%PJ3
%7Jg1jJ\t$b^Cp,?K8:o:b*E/o+ge%I)I#Ts2XBC.Y(Bb&1)RN###l"mX$q,lF40C@F=1MtO`mHeVN.V'RIY)fH9[6gi"H/LPdH5u
%K>*FS7:5^gZBFi1*U\PQjg>I$aJh33b<mPL,^,:El-R"->*c-0.n3/m;[-G?W7X5,D5jatk\3_o,#TZJ(:C-^/*_m^F,j"bA!>fF
%7@&q5C3L!<,!&$9BjRC+Qhk=CbDUrQEE_iHSQ4A&5`qq,.0%^Q^h;&^d.m0u')6%4-G8t>O<q8bgjgtV<475n38X9qq$o,<j[9OI
%,5j,)9.bM!a=>]L`0;gfZ:eUVKrRLB0bli"%Vk+bVI([:b&W#@V?SLJ;Ro,#;ag*^aMn^n&]3P[SMJ-nQfnm_@%jF>9%^>kVBrI.
%o$S^LL1lO0kuO5YN6.q*TU`\/UDC3A3)N^1kgG.KLbZgs)8`!gR]X=ERO\M:-FcTjd74=%<*GH'p/!;;BT_cL;D$cNp9Zq,MaG6#
%"4i9cf>oM^kdi!(lf$5/^!1G]_6*g*7_H8'JFp9Pcgm$RF\kR+BtmWC>jb_T)5Zm9@Mm;4.2[hn/$hCG5c'AOZn#^De[,B_\AQ(6
%a95]s(*0c\<gFL5k!!jj9Mkcsk+ncf/n263k<f`skjr?%PcAD2%Z\1nL'Z8b@uCbn8-?VS8b+Fu3KY/;Or%sWO<lOIKSW$Z#$JAM
%;.?<\A?q,!m?hD/?4n?r97uk0KB1*&$]GoU$=To$n%sO*_Xt'nWk:Gt.Y;MD1e\;P/pRhM<g+<#Y2(3d&'GgM7!\Tefd,Q.&'NB&
%'puDpjC+$"ITa69M3oXVbD54Kr3RJ*;]_6M1GOo_KGQa%nYpsgY+dRt:#=a9l3^*5`+<(lTWN(->HU5,,0f]Pc?ijK\>2bj=IS:(
%VhUbLU`s/Rasgf.5u;+ZPgr5#7-T5\@DL+*G9PTfDCPm')%r(*$02OL3[2"l=,N$c?C0F*?3phAG.=S]>Zs/^dHN\D0qq>%Kd(+'
%:(J;bF,X[1kt5'HoAUFQ(C)sU0b@aEb3+U^L]%g,n\d!<QQNf4P$qmo=XPmS8"[0mAiPa@=;JSJrnD:#3KJ+AR`MogU37i[S#iV-
%TCkQ9YuK,11A9-R*/+`R0AjOc\>82"pSCd7imeOj&!J;%-h+f?ZRdDV<d,4\?(N3,/oue"\L'ERR_<fSd'?gc%YhJ%VqQQ1C&AG_
%Eu,I7Zpu,@"@*`Mgem5N)IiB!en\C7Ru".!eSJ&bZ4W"t*,6!;+aQgBNYlAsaKul_U=;WpA%ZBGRcpf.79"As%BZ_/@Le6B3B#5l
%<'qSI<bcH9ac4aVeu5<A=QE:^7&*`,&MZjlf@=htA3#Z".aZ^ZWE;e:YPPj"QfJb,6@4,C[-Hq6?5LdWk+N3gRPWWr3V[1Sj+?JU
%<&cupGY(o$=fT#s0YPDg;F*usDOI"?RAT1h3A9PbG=O]rZ)+>1H:asB2Q66r#+-5&dM>]ZCb`blQE^/Po#R3n7@T4!=VkL)iDu\g
%P4UU1?'<J<dCXQ>Cb8ic(i#Eu4O*\6hbKsI"AR/*B34QuV9Cho*R@/Qr/rSa,gmg4',h5%jN,lFM@ck,?1B)E=`$NgDJE$"a\eA,
%hVi.&T#8#g.GK]`kiD!6@Ta)PK*6t.NVUq;=srl&H(HF)U#nWn<Ek'miYCET44iRViuK%d?S5[Sn#4%OT6"fcrdn69[0r[UAl)8J
%__Hq9#s=4@%;aq6?9^+@ds_#1O+3%X>NO9&-bFm-im$e%0>H3=Ge_"BqXjY$^O,Y9#u3Yh/f$l++N06DP'!:sMb*pR#dJQ*8>lee
%ir!GD$-$&*7jq.NQfP/!c#)*Yi^o!eVP93GfO3bVaJ')RTfIW(osCK7lrm+%*H`ts*3-c2FUn,"9FNZG)g/.4Mh0/>L)ofk.kB#_
%l;r58i&N[FY_%Sa(2_`RkGRdss7S+<oPPUEM(<_Ob.Hr'"\fc\jK37MWc],qOY@&@H:T&,p_tm_g7L,D*%V4p.-TdXgsOYOqRAGb
%*!r(K0;c&1<QBq?/n'Lo&.P(=iDL<i[t;,J>eo]Ynec+9A/H/Dpe(h;8:rn;YTaFE<%)/cmb1(@_L]Std%+:jTKC*1NlqLe%;qnE
%)g!ZsknWu6j#i_pdTr9E,2HihDR.k*X/Lpdr/?5M%e&CTU3Z+)f`3EO!"h^/5R9UP6T2i?&gO-%VbM(6'j-"in5;@`n,kD;Q<,S4
%?a%WH2L_$@!kkP@W0s]Yg)K><f?7r?CBh3nI9/19QOI+7B2k-?3dF:nMKj0cm.Hm^j"nYX;LKhq/fk%/09d46PB?r-0J$"tTO,IC
%d,#]go0ZS"$\ZWK$m./Ko5_K'@h"/#C]mq-*Y)l,6gY)C-F$mRfATmlJ<2J9kcQ1ZkT\G(/Kuf&ZE"-RH6]XS@'MtT7gG\UN1e6-
%+>%7tATTsi48A)'"pOF7PQa7%5n>R,9?Gm@7KB/6]QEi0UR3f]2,EL%l>,XO9TuWq(=FgrZMY8LCJF19+H0bl-ah-t]I]^IO/tI2
%IA/gD@Y,Pmg0Ujb";H#mO\%#u/T>OFIf,nC3W\hUFL03C@OKUPW;r2HAu7-ME(2sS5j53XAloVZ>FMD_'>DB%"VNW0MnLY,V7[j=
%&m>o"1aMG9"LWkpLgH?dU;[jTe"?kC,5TmZ%e)<Oal%bb?6P?R;-[[kU]Y-_EFr)h^aATAr,/1/!43u>%9A+P^hsr'cZR-O?-EV[
%6eNr\'Df498[*cEYq5<2EmW6F0Y>"%X&0Wfn"HE\2p:E0\1+`KjfiQ).L>JJjG[\J@6R')RM"":)9AnF=U5+dJC`F^edt:cDphG)
%aO;\`T/JRrH/3Aien"6gNReDV-GFi('d\`?L;34&MsK;39^.H&0)?"74rT7AZ,K!>85!6Sb*Ea)+]2]NML!'YkqNA[TE6oJ9L3Y:
%7)>otf#9f[aqi/R>0p?F1X*di5NsWS=C!s1%`Ja-<G%5<XE7JWAOWd0/Mu6n`kn3^'R7KjH>0/=O=2./PfmSAfF%(ESfkJON4Pr8
%!kih_Z(h+_@0hZ=k#?E;s0P4B;@b:i_0X+t!5gNb2%0JWqFs-T`\Dkg#iiDk?/dK)o->e`]j1kCg'U:a3+5gHTbBu0?,uVoQI^:B
%Bo^-!T]`Q*!a5pT7J%uYH<4Ef;(#+6:>PS::f;6h4i&<[i?\C<0eMZ_#WTjT3P[6aN0"`%9&>)81"83GU0n^"`k@\,mHp&qcNEIF
%i-WiQqu_26W*9#+<rc$.Zl8=TTsq;rE&Zmb7K:/a:0_AK*%Pjqpe\>RPA4#jPbe5K#S(5oRCn[-&Bn_(7<06YhTTpN8"/SLaK5NA
%Z5dNA0/Vb,KcImU2,kg:Xs^;$.jO\`/3a=NUL?Qg&n$-^=M6_kDH(!aLC]J#D<\E,g:/K4iq3=fXB_Q*QG-/!U,2.5BOd_6g6-,\
%Ls9<`?X&/X3?gYchlZX9)'Q1$m@f>A&5u?,588$k5a'>afD'Of$Y2j4R6(&@n7$^ee'TJ/?J:@"(-7X6_2>a2k[k#a7H3$G]o"fn
%/Q@_4^tZiV+9SCK.FtRSlp@+7MZ/m[j:tNd7Mk-<W6,boTr+u6"B'*?kIZ51OT@,mJH-rh'\KZq\.bD;^p:5DcEp7'3Wb-Al48q7
%!JI<"L@lL?L7$0T*\`l?3MMJEoOBJR#`'Xmaec%XVCBAOK*S]=!%#3]hTI/QXVu84.Y<tD\KL;U#f8'#O^XA>Wlq-`Vp/t[?m"5O
%o#$clL]sPM#eR$W0"&`HMgB2U@42-n7n!ZD9*(*,%dGFEVg*r/?i_>R1BZ2U>Gr0'jZAk,]X2fH!E7@%jhO,</1Bb>#ibt71gpBR
%SBc_CnsLP<)'\q!&W2)S9:9Ra%&uX/e4YS2]SI7<%H3-^j(]d(RV27j<.3ur&A5cp-re%.3B.OR+X;BR/-%5/a9kFf.h..5M\#:q
%?t8aZE`SLj/P7)l(X#oK"@cuT)T:hWf0T;Te.F]a7HBg\#`JfH19\mCr;$T46jG'D(lZOI=<L*_R[@TU!8aZF#+2/Pd>Nq%iI\=u
%kcRKM76#o3nn=B,?lS%B,0M2-Jsm0HI^N;pj<;#C_>u2WF9"Q3^)7AQPP_bf5](TsU;\q)>*d/e33Z/9JrhSs9doa+Hl7[31l*q9
%(<R7(ad0Z,EU&98,YaLC;@1;"Q*V%^QH(h\<!;58<XDF!]Xc*e>`JJ(_o5!MQ_&o`RppIoYRPUsh?nNu)Z3q!'LiPl4n?`>'q+8X
%NQFGidf$#r+^\G:(bgQ'M>C\kMK+-k-Y\D;49qC?k\1d-H7V;m$UukT7Em^RQiQmf&J:CQLYhn;4/EL"W<t)cOqf]LaFe)a7]#'S
%>AmpD-0T>^9^!.7m2@-XquG.1Erb-(G_\e>e[>.,OPokHTH%PeVYl?i?AhYsW!UDs'2_AXY@8i>(/YJ!WO;CsRj#>_Q*?"9"5*`l
%:"E=,MIMnrN'UCH#Q464E/-m#(sM)g<4^YU"YYfl@!a=,.<=,1cX7-Xd<L^6htlTLokcD2#Ma/(,K3(S-Sm2c=`baj7^S31N7j5#
%7^Ic%S98:u.4'X`*3s5h@?h=Nd7p)9XUX(,_*!90fA%=t59bGhd>Ec+';M$D(-"\R5uq\P_Jl+eIFe`4<5p%h-L`tAS<Dqh_KZEQ
%qV#>.7T`WT+_(^S@(_e]aX/UXFS+"s>WpVo-&<M((bs"PNu3fm@^_FD6qE<I+M*;W7f9)+rWY`LY&;X7O-*/$A6nh$Y@,uf0:Ha#
%&>M,HHXc06(8gF.]IP]=jCq"!A?^uEA#9s'+_dFp6JF%T8c!.PHO9/78[lQ1Ak!Vj4MW_=#"IS541K%ZFhhIE/kIgloK:A9U?uma
%&EhFX8#mJrnj27m0Wp%7(!S9-bW$Uo<qm9E%tS"V^Ccp&WB.7(12R8!YIWTid![mbG&@=Q":#T*0't]Q^^tRHO;d2:@F3Tt(ANa*
%>K06(,VK4>UDCkG)2gY0GR`dg17Hdq04GsKregdlBOThYCJ1K'MX6_1X,YaJ?.4]p;.5mWRKHIhQ:O7W\4+YTpp@:K%hGA4V)pqi
%.[L9n>A"je/Qm6/J_)Qe't5kl+U^PMk[an,)9#&<8X'6MkZ>?^J="j+,iLPIfHSHF,/><1K6T/?KENiTe1ASW+`(74!lHie`0`.F
%%^n*0<Qf?mR6q*a"<O"j(u^U27P!7Wc]D/B>AB0lb!"+'jokrE&nT#DNBGVYAsaF([`=WKb`n=DO_6l-j'=c82`naDR"mt+*Kem(
%pJ2/:#AK;L52I*I;UImsUcT5:of<[$&F2.E?;G0[7o:oIq`(#!0ouUA!nh_Y:WS3Jh)^6!JZ_B.'V*R,LoI8A5iXGf2R+\Vd2XYZ
%QOk;4g'h8G[7b#7(i#KZJ7^V@P10b_g-H`6@rW\H)Yatb!L`r(pg&\\+#P3r_7P8'+m>!3*77He%:9ZMd&<CgpP;W<R[50IZZalW
%<bc.Je[#+A/_T-'5$7i"i(@0L[a_"HU7koG3CK6B;D5"_E)0`]%ODhnER;k@_'mKC,&i.d+9Ri35$:f30m%@N?DlpLASdg%e6rNd
%m'QAlJ\Vd9%bColL<SW!*1X+03K].#<D>d,Ij/6=TIGLI%Yl!\O2q<i@1[#f"8G\%rr\4QK``HUH%jpP[\qr\U![0I+B6X#)0(%:
%dcJaWZX?YHa"I]ei84li,hOm*;30pg9,7qbg@\"]8EYYf+gh[HOSYVPYi3Bm"YhhjA2oN+<^:*`d"_3+ZO=hn1[C-jl8jklY:/?S
%)K!ega%<[)CMFjJlT%$,/M^%5-rQCf5pBm?W=B[c0XHI8"Va!,=BrGss3UZR=_%NZR=7cP&/G[X']R'rTZKK%4*uVmCWXH_1%LeG
%Y=qIsLd"^-\DGlt-X&*J9n$J&&L"KL[7+Un'SL-l71D$$`4D)IFhm6G03%R74Ml]108k)m)+]EpGj2$)&C*pBLO^c6!),AMHJ2k+
%BPf=!?GTVM+0[eO>G`MpRR`!SV>H,cY-qj%B9F("A&&m;/6P_hEZijc2)8T9GhR!<n&4@B/jtRbL6Vs&0/jG^/r7LuMYgDe=]B<g
%QoBr`YX/YA5!nFR[P["tq]e34IONMD*JB3rXCM;,X:M/<Ob8DIL.*L'Ud1AD$&6/\@=Anj10Or7Tr!aE@Sr?SFp""?<Yc7FR^6Wt
%9/RVQTcX(La]<q]'UAC5)j!?[#cKLW,qE)hOM?XZ5iea92U"RbF<jS,8JJ9LIjp2j@8`=0LoJPX;lO:ghJ2m63i$)'Z="oh-0pD&
%7UqD\DTgZoI*oh3]a0uJh[-=c&@>%uNJ&Tc>sItj>F8#+MZVor6iq)7@@;Y9-X%8<U7;>0#I^SH%ff=[*Eifs(1;b_Y(8KGH7+@D
%^+1^ejOj\?kVp'Qa`iZ>bV0^obDsAP\hI#K@">KU2"sAUTQ6ja63YJrW!`p9)U35[VYguTVV!"t?t`)?nh$.o`ggS`OsmO\#DH2U
%,a"0f\%md<Rc"Ao=lJV_1h6k1Es2$8@VM,ZEBoH<*FXTM^Re<6UoOrH4QO:nVAV;5O@R/lVB\eim[,d$K!E*)EYB&(a(nEu&hB&&
%ojnq\*LVQhciq+;(*rfH@UDtceJ?(DQB".L]u(b>HqP>WH'uW,a=tebml)+LqT0"46TLi/'*n]G6!u7.5,!V$h'R4ge0AcdnM]n?
%e-*:QZjakl7K=G4+17cZ/qkUUW(j6I+&CE#S^s2S@*b>SR(g,OmdXRto0DC\!1sgabA,*BAO""%n7otGq-s`QDm\o)+%4TG'GSi]
%oHUMJ>pWLU+p@V%DEtB<AkQBNR,NG@Y"(</FW4Puc)Aml:h:h#!C.Z;@\AbfkgV-:P@;?L3\$0J#'ton"#KU\iIp6Ke3,WF#Qg.k
%e+ueE?=4@u$_$%j,8&D@?S;j$J+!$F$h;=%nKm>l#*PXm1t76O*XL__hO")L@X0V_R;6.V9rH:8#(UaDOf.;#jqcrOKoe'spS+^`
%RefQHV.&Fm.'%4-MMe=fo$Ui7qKL2UQ<%gDbn=(Z/AsS0TO%l]LkSn$`I]C`@ML`I[p7h&?i'"KokcD2#Me\t)ekG;,'YA.09_NU
%a)XLO#n@^PMH8X^%TV]e(B6-/RKV)9A#sE+A4$g"H"dJ.,SD>^$]U%+^ko/LJq;5/%!a21N7]TMg#5eS/>.fl1$m$c>+jrJZ0nK)
%/)ol"o$)B]RbI0AK-9N?'aB].B@9tdoZdeb7oRgNq7)Y=!R]E\!Rd_HWt_;-o(\fbM.b2D5dh=o'[NER6^3i:&%!l/+_L##14bl(
%ft9LVf6aAO,dh42,*NZ8QR66Za]%?!/1upa%[AFF"_\8E&(A`'B3cR[Lsdn]'UiLf92DXfd$fn@",fL(bX9]P9uB(38Y>41$F:gm
%8"bO+LLf9qqs1N<%F$#niQKkE!7:;*]b1'K$!(d*N]3-'i-ooMmA6D(aT9h;Y[1:b[%MqK$"2sbD=Bh;Z[j5\ZW,kUZXkCd0b\fJ
%]*+jFJQXVXI2rdL+c^ifj-^=_=Mda3*1sDId<B8T*Q8dF"DC)p10^-TA=$nfdJ@MW&@@7ZLD372"`Q86g#8(g>F4kZGrl-3`KXDM
%&AX+UpaCe!ls_t2fja6nm8.\6dIE>V!k1Dso+TKTemT^89(SB'Eq!\&16o1(+@X[=*KEEshFu8<5rLV!+G?9D$QqdSg,r0i(uRV@
%5d.<ZdNd[RB$-#pR@,*(cjqb/LQRo.#-d#qi#3q8UKn:9e/8W+J\Sbb8u,S`GRBmrJU.MH2)D=Ek4^E1DC/6g2oMtT.;O*<+khq,
%_Q[)uR+,cl1UJ3!MIIa(6p9C?5t.XP0gh!Rkb3shWn-c\i2+r!-aL;n.:3s95G#]86+jD:fOW/dKcR;ObiT$Q1EtElW%agZgc2Yp
%?/9-DF0nS'lfLU/WJ-.TBg^D8"MBH`P)]8pD&keSY!b8,W1QBl-pE0d)eRk.YFSYW,ngul4]_s7fk[qV[3nm4!*GUA(!TiH$bKKD
%AAqd(r$'"TQo(HZ@"Js5T<7;WV)sd^!eKN>JtJA%7+O%HgC:YM;N@WI'N]:'DmeSLjBa^V9O5#Y:YncE5;K#?'p&9<5b,nlA5Ed$
%&;`4Li#sb6d<*#S$`B+O2q%BXc9[elObp31il"Cg;,a_bh)";YBmk70Z^d=KeR3-V(b[]\i%=.c'?m120c2O6QJrSAeA\pq\r^A+
%ru]P8n=J%MN40EONsr08Hm#:;&orn)917-)9,jncCGqDqbRF6GJ,r^If!L2"LTZ.DA=*U05`r<UQM<FR_:N/4JBNLnVeOZh;=h'p
%e.>*,'lM*%?dS=L;s^4"_dWqhG+kc$TR"Z$;Xjc[o77LR&g:<O(L&Xm[-U\H10T%l3Zue.N6$U8LRcpAO'dELO>cCHm?!]m_umCi
%Ot@Hg&:-,iK)/f)Z14]LI`;_KG@Ae7&,eo[A:0*.SL2?;q"`0E2T'uGGRE;:UiRg)-4%t65sr)>o:r!7&I?H&,4T>Tc2RdM*K&V)
%N*HVK/@$BW&B&+2`1k=t@'s,$BOF?1"(?G/KtVe.p]/#4nN$"-("0sQ=@jYV1pgs\!D)-R7_t%+\^_D#bIOJ]5#&$][+#:L)ZjMK
%$qonlNmbH@frnE)e<jj&)Rod_NB.AcIqCdS7=iqh/2Mi;5a<s6ag,:u\=eP\7$)t6NH:\7]UU%Xp^nip"B*q=!,W;cj#KQK_6m7o
%9*pDn?lRSVZFWi+U"&VP3%Prj*?RL0Fm5>;Bh^2UQ`LX`^*%pQTL)RG:kqbA]U?nBNBFe]:oe09J@K2[N#D$W8EsaV3oLf%V.QcC
%A;qWG6+N6/@mu?Ui%"q.F+BQe\]_QL'ar2Ob;(KOVY>'&62!L83eTb?j[J.d8=5195h$>f!])YFWM;j0,_-).4Bs>e=kT<saN.^8
%T`F)CZkDm\a=t#@B2lQqB([ki5fQoO-I4t.[A)nb=C[_hAm&0Rb""2MbSYroN.$\C9[Ei3S2FZBIY_95!<q`!D'p+*lqk\06k=4U
%@"Ds-jfkXdd#^#Ol$&m-#V[E#G(Deb?'geJJu/tJPd2lcpl4E*@0&`%.,`llXP9\JUk-B\+@^4AGaRd_2":E1L](B;i9@s010eZB
%KV"1S6H:#s5-:R.PTIc\IGn]<[#o$m(TRV=9J)/ZW*LDA?4fQNF<=X7XjIBLB*//-PX?>+Je<o1p+YL>NFjmhU]GcTb;1IOc3nS3
%?jts\5o,"&>%>cI47^=NR:PZd&32CInM$,b(Fh<+=g,@m/Kgf(2CgHb[&@,c#qu-m<L\ZAO[tAF$5sn4ZY$U.82j%M,?jlJVBLo#
%!W>J]?8KHd&DT+`L_`^g"s(JtT>PdDXSBkoPop.j(RBdYbIYE?#eUNZ.>Z-'1qeC]'$AD^[%eElN\>^NW^DfGN]8_7"bC@2q*d*%
%&A^mu/&_3%Ncsk1(dB]gl1/l#+P)CF5'XA9B/egF@Dp0:0N9oViT4i7)qGSfHh9*6l5$d&J?f(3h.qm36[6*TiDd"@N-NE]GP=`p
%IAadgBmTfkh0ZI9/5<nSm]0\XH1pg0_lI_Up=63.OgXH:Y?u_XXkiX?-,7(jp@cUtgTSATLR^TBm=+tsh&lVDrd'.Lkrl*::pWnc
%'8q230=3U`B2$Mi@C^`=g1"m2.7ZY&LqV;00d%uQL/E[]^lT>J_d"cTdDW[*&rI9).8?R3S?Yo3"bgP:V0#nei*aj'7M@cuoMU<^
%)(hWU"6j\s,q7?B)OH$,AH2Wp:I84'HA^/_3PrfbRmjt/qh4"WXC'sgOIH<ZTU"X=RL7+Q(<MdP!$;Yq8l=/?q/2R.aEuGVM:Q?u
%`lmap%6QU$g"5QdCEZ8nELOB"_5,JQ-K=@#+XIj42>$47QB\[4WiOBTHC-;bOhT?EKf^bF!"Xe2J.?1[4R:[P]%NInaO;&!h#Q/n
%EQ1Lk';7XInK@R[/._)We6+IW%L)8Sae1h/F>G^YkZsrPPELM$!EEC?ki.uD7@4a4&nBd4NH#0`L4XS\"=(,#pOEZ0\]/Y@2M;i8
%lcGh%-5<h#CeIs_kQl`+!&2W(+j:RV0)K<jU-?AqbhshRE.*ME!-W'A"sbF46_P_T9#m=peU#%4c'[KABe7]e9Ss#t=c9h7[#%o3
%JLhkl9PCW)6G4SV#"Ch?AC3_u'13SCcVYq54I6C\>O42P[oCO0-eQsO11D#PIROTEY7Gs]?8jPg7Y+D[_K`7s9$a6>T=+A2AcPa$
%(6E^U(b"#/M@^\h,^&hWIf$!6/p_5l<ic=:0!*r`HN5987*F9)M,,0D:38EIV17`4e\N@BTFC/[XG*%qm>,$l*6+L4Vae*1I\6l1
%*K^Q'kTYR$of@Aa-*h:&=*7A#4JWmJ+VL,992IuKhi>rUCC-Bl`j[0?;mH6Ee/rGVGAkl%;'$+Y]UjrK(1idj6Y5-.&kFT`=2Hn+
%L4\*D]N6tB,L<hI4eFGZQ^<,7%iHt]<5OF<lC'"L4AN)W7HJ#hS;NZMcN>gJ[1QpGE!QbQW\,p;k*?,d8aC4q+,6'i],j=1mjeD2
%o8n%cf$Z_R!0.s,q$0@,^qZ[F*[nroquOH&+qBa@T1<uBA5KQg3N[f9>u]3t:cs<j>_._:qR1/K-hsUXTLg%t#FqM?78(&Qn=i>b
%[Yn^mg8.Vf=nOh&Y!ieq12di6""KZi.2r<[!RXaT1)(R"A0^,.Jnl&lMs&T8[ZR^r["`1m*2Va&b&2q@@C.j&9q[2rKano7EM=r3
%N-]V%IX-_P[,q?t^cn(%U/>8EQN\!e)4)EM7n3(Wr9]qBgH*Mc5j#t9^-fjj^)&@V;Hgc/7I@n*X_oMh]M0j?=SS[e)YrSN]>0P_
%&3Ce8Lq<T49XG1uQB3<%%=K%[,Rbm/XCO`A[m<9nBdRnBMT$0u6lgOsW"sIVTId6hZE"=f-$&)n1F-]N4=YR&0N(`_.NusYNE5N[
%1+aT9e1b9%LZi:5COYEK6S:UE!nsA+>@^f'Hj.*kZFD)lXUA%UEu_S%5r6geW$8?bg^*"0pintuP^^#f35(8h,tapdX_p(()fPoS
%G4b*2.eSOoUD#>FfLj@<..\8GE8k9F!mUt<024jcdiA,bOBr@%,qpEEKGTPG/;"!6<T.Z4,nXUC,Y0n_8=>(`#()LLrJq/;aRlTl
%@Gog2%g/lUAS>#n72feq,h]H(faZ4:,Z)n!'nHK59&La#F]O\-UeZkR_T/Y3V$gD1$6l-CQRB#H&]`*aXVsNPYTSIq!7]TG>8G0\
%TOffSd6MK63%;MDAqU5a1[^r'n1l+dO23Mt$u!gLPnfJu2qhL_3t\-1A%#kLW!K]K*QN<\'o6E4Kgh;s,;b<D(RWkm,%C^4*(Z#R
%+r-u<=FB\F5U@a_B;*EKb^EFn[dN9f3GRIf.S`X94m>7$BpV8V5I!>mqC7-LAnj=c)3HoaXF8'^^t1rB+mLh!3D&Mm(8.1jmm8d<
%!Ubr9-EoVS3^ckJ/GF#j]OQ24#OWZNdm,49miu1!nZ/$/Z+r^6$]C_N6K79=pJ[sT7_X=MM0?Ng;s/2Xd:+Ol=ViYaCrj'f-A*K_
%8odp`.^N'J6B%R6M?F#5]pH-56)-A4`m2e[moE&f1gNLsC=<_Dm3&2;+BDpZ@F8&SaAOc`]SMeP:kcjJ&4f7#945JLIs\!",N)2N
%?e?D#"Kq)4#C@SVK-I$R`07:(>N6F#*C'l716LFJ]0\Gg7cm8tJFr+flp5.qLj"O#k`iNm"(#qAEC$]28"i28EcU[qQ@-<?$#IC9
%R.^nA(E(q=IlgB40;eZp+EP<aaK$-m7-(^(<[D[mgnO<u5fq:OQ%ju5((\ZkD"OV6fQBuH*"DIMU_mQM-6+g,k>;m]aXdK((gNoN
%BE4D4d:BG,Jo#b$V0OPUG<GJ@TctR`*QQMCbV%OfR+<q%<U9^o(U(BN7*:Y@1)`\)lc3Qp$VY6E%)<9A"6,(F%LFW[H!+O_'"Q$S
%3o3#6<@("+q?!a0kq.;1=O+(fW'IT-"42R?MX_&:+8G*4o']`op[P4Vd"[HgP$q4n4XF<9N-YpsIAW:R\/1*(GiKp$#V;?^>0B6u
%8Q1gDDP9()FeH*VM_bF@5_I^iH,m;=ctglhR/:(6_?XW71:34(]FE?GK)ito9cU!21+m*8%oX7[%EK;!pVNjD$e,4qHid>q;QU!,
%"e0UGI>a@ei"9G127BRm24f7Ir.pFkmSBIS0pN>s!U>_ks3-Ck.;7Z&)<5j;EZM+T>h*XK[gYo@1RctE3EOSOMB`n[G2H;Y&L2uu
%0S4k$<YG]gNj)/>_\hHQA'Vd#>R5<*d?dMkM[mKkB`KVb,T2iPN*SUd0+gGNcfFbq")WRD>(Z>]Q,ORL9`!-^_dZ(ir,e6>5fn;L
%E"k)P/R=qb!73L0$lI0#X0Z=m49WtY!Se#;5\l"I1bd"ui?RPj<,XeA=4d$Z<(ru3\4,Ei>/Eb_p7@UEkW+b0Y@oAZB%=+nX_Dq_
%DcW@UNfa<W4I,!/XBBRCMb>EK"D6\@O!F'X:F-fOg19\I8#GS$5mqsjPW[?SQ/3H>PcUGiOAtN3ZqKW)#>FtD/3W9c#:dE8dRu`3
%Fqb476&NWPK=VW=/:/M%"nM>J#cHb(k_iCt?')i)&lJU8,XaEr_uW(*\4OmpXM.J3B's59%*?Ik#3HN!hNF;eSsL4P?DHQfr,^:a
%29?"R":!+7!CN%%AoZTMc(n=?Wh&peFaV/).^%c/;l1VaC(Y//d99XLKa:9;Tlc+!eq53ikRb9sM\[c")2_=d1m&K>BN_6P:LbW)
%1!3c6*FiGiG(%gT;@=U%^J8.%(qaG!62#'GOe<Id73`A4QHmcQ-iQ[o1XucUV%oPk>\pf1J4Lnu1o'VipncS=Z'cjAAAVhe'i(\>
%d]m0,_TY^*$,3L-(9L:4ZpOULbT8gB/.b*Jrsp,(,SN#'=c^aj<`[3@X@)3ATH`\GX.QL"G]el4:!d39$gAa`E3_A3.<E<mVcV65
%%a5'$R[F!U5,f0G;e0IqTm+DY@Sdi35s3<f3$l?`S#5Ho(*(iT'b!'$0_PWFb:l1H[8ll#VFq`MI_hD''E60m;%[lbE9ZFObYbqL
%W_*CkbYDMMr)b)3l3B*D.8&b<8g?*M>Ud$>E5?9@9,m^HX-V62VHTO26]"&r(.(%.m$RpaS6rCc@`DePrb3-PAIZW"Wi?KYe%u@P
%qZ)t6<X+h%,FjBQ/uH=t[\cg?Q1UuHG#Oqk$(erT=k`-Udq:B9718h#A.-I>m7ORIh+EQ_<<D+s(/L)S\MO)G%h9\4joh8(0&Nak
%6*J^o5bNSbcoXtT1:/kgLF\4U2-C()P_FKblP"a2-Yc!7dL>#',"j[hD\CjQN9CtnC"+EedId*.D&"62k184]5QVKS(PP.6YE]6&
%B6u3uB/;YUpu,a97gfo(hr-4NF/<W(!DZArXg9PMlNu7M@#lslTG#:TWEMGCXsE!1)+b:`Jf0iKFr`+%^?jd$N(u6^\6ek@/6@S<
%bD^YtDI@d`H@QTOk\t7Q3'4q2_ue&Hj4,HmAqXu7-kep?.QuDm#`<_cT%2o[=mQt`gafZG_W59/kr?`AJjo]nl8Zp,9P.RCSCQE\
%3ETi5j&kW49XI8:PMMCH!NHmNrmbCDA$EI%#$#:$r)0-]?W%`rA"OKX0W-0C0m:]M$T"f^&R)XU@",/ugl0p,ai]_039Xik'oZKs
%C::&hbG&U7CUUkW59Y$)j(9rioLMs(>^Sto:]R_.;A$IXYYsFXg8j9ICL^!>a,PLH1M>?tSg4k$Op^D\7W=Nli7)4=98NYCpu\ZH
%N@CE/67TQsXcjFV<8ca=6^D6,`*!;4U3>k6Q%Xou;jB?QE.0$E&Y[C@q[sJ(E_Jo-R9-YX6P<ge@hN__K:oISh'.J_5)W#j4VGA)
%AA$TgN>!*`[kR8(C4noV;3?7:nia=6&dB]P9LK*4!JHA>8@0.%=J9Kk0<H,o8Zf1DA^O[imEH?)9RCTndHbOMUmQ[iP/>+NM%Q0(
%Xm[%cB7kb,g1&rrplWCafKr2GB0=C$3u],J7#$7iA'#%2lI`IGm9ei_*XLF6,s4rg/f[t^+JDIX!LW*fX1lOO1J!?4Ng<OB`p:ok
%'Y'P3$(=_*%[7g:R8e)s(UjL:W3N\]oX0FX(I1B5-K/e+6rH:fO%I#;JVl2U')b)kN2kiN_0XY&<"lDf]gHufl'Cu>T#2:cN?FEF
%1FAdb*%bsG934ZP#WMU^J8g4)2o`;"muldN-7.]4la@n&Y:,-L_+NH"RtKEaHq%UMGCY7Z>=K9jTSA^Dd`!WKkk^lB\kJ/]OI<bM
%NglFrm1s9E-q8eM!iW]4$Oe(Y[e+ujVDL_HiRAM,,nj]*Msd;WS2>&';C@LBY'.N\F/mcjBcPp,C,l#-#0":a`P?=OJfMeO00'!Y
%cO!>GAdM0;B2Zif=N+dYNKQ?%3*\"7>"1!%s0DQKjqMHj14ZB".:.tfGVG"2l<;URTf=/jP&YS1EA07ilatFihQ!g_D<SpC2V07W
%/E*N-X=QH*fu-`BTU>o58tpoB<\AA;n*,e!WPl(?6/kWESP"943Q.7?no0:'_oa![X2Q2r.sJM$NT\Tc_oKrBk&@tNYq-J"LEkm\
%Cqa-5E-sdqZHaC!%Lg9/\$Y*':2+Ep2&sV:CjmZ>kE(cDBgWdK-S<-+ka^VI.ThS:Ta]85^<mh9;mXF&:)Ha`&_+0,^2RUA/s^_"
%kT2Ng)#uD"E,LSur#&WsYqB)V)-8e=As(HsWPY'-)r2B335IHbj;LrV3)*Un.oA8Vdc23>Gi;+uDC#W[rXjuX[RB)7>N<M<kX=C&
%/7_ZC+:8@I'VjboU2]T\OAD_EKL:kWJU0Zs%W=4-FuYgUmV[g=kTo->ToVfoV?f]#&5iuB6b#Yf[ZXo&_AQ"%&%^^)L\F)DmS4;L
%Ju)$X4#j4,;`Z-.Dae0pK,bjFP<b*42`UYh"RR.CE:d!qM*P\X#M57R^.cc/T\<"'km'"([taKsU':i+QG]j@>AA-F%>OrVTEaS(
%3$t:;2>GZV;hJkln!)ZtRD?3/bt,U[Tc@j]Ao;Q5?',&-S43jrkZ2`n[:R5cY0F%_1jX,t$e[=g*h3@=nA;[,i+V8U/V>.86j^q=
%)#W<&o"r*N>CLO#d6O-*5<)6B(:&>6r8>.ZS^id`+.N]B88e`!3(^LtagrjOE12oIo.**dpK1r(BdX1A@E^"1%6liJJk:CHq8#W2
%`Vfp#5r`%il^nVP3.P'V0/n?!2K8GM*h7S`Z"ePO%h<8sA</P;$+%q_Z?adoi(PCp-f"L5RE`8BdI$ki#lIL?\,>0EKlSfJr8;63
%\(T[E-f(s<L9L7-=KG'<2<_l]:+;b2L)uj]%][_W4ZFTMB)*B/3&/$SAa1d/30j[Ye.$S?a,O5p&N`3:5Whr!D>D#QguqRVIW.e(
%Gb?CS*ulk9)o(>:GMK5Lqir6CJKra/D#(mZ-R)gHq8#WGg$#Fc5IdT10(FlBglje.VSNf28Z`iUkeTh7`6H\U1KHNU:'WpAf"$L1
%`uB>D&/HNhpN:e$/!H@a_6q7o1Oa:[-N%cZi9SWK5I`nBi:G/'Y-1>;fD*26:ZuWQqPdE2e$V\8F0q$5%,m-dS6_*8B$c/d+R$n"
%C\6QGmA*9kkeUQm9Mq?%gaahL>NrtTZ*NM+9+MM79nDe/%h:-c,>apP*9U:=.(Z)WpFN2BI\d8SZ:io+5n?^3=X=KKl+o)sNH!\:
%_$L)m(:g,aj+8V<SFM6LZR#*#pqb?Eo5=&M,7Q>Kr*e[l-\GY]1.^tgPB<1^-Q@MR3dg!`lMTSo;Tm2n^0\D0#H*d*>i3g;:;SI9
%$.\ge8O'\Oo=ORG@g&%3d.kGF],4^3is4a"UC9#(IW3>u"\N"p_*MmID!NlA3#30.64\Na$n664[f#&seh'TX5r_XC$J>a&YuD;c
%R0ga8cn.demKDLk]BS&m#`!'r0]m74>*ZX!.goG^a!!ia]+]iZZ@"4kN$+Wi82Z]u+<8S3$MoK"*-@ao"5O:#8M=7^>7&.eJC@nm
%%YF2m4\]"(n@G!\\mYi!hi8\Y:(@cd[,s-R_3peu,2AT*]4;AqG%U7'Q0"\QKBK,Eg+tBA"YA_#$]Z5[U)Tod\`\3U35IB^9DFQ;
%#u8^cF`peBABcd`&qV@"_K=PX#O]Z,!CLMZ")$5LGMi22R<Hd`R5uEL.hIrKIc^`&F.a&oq7p.LT_hY*+#mGG];H)[Gide(@F0SC
%cJZ\KSIM)IN)>M9FPr!9(3sHn:H^Dhftd(Om=2Te-cbdrkKh5babEIfp.kQ\MD"b)CJ.Of@*>[3=d&o.j,J^r>C9S1](Js[eqVQk
%cd3,U48$(s#=,B<6;g0ar9^=3j,_Y6fFXph\FZQsaV(40JdNK#GZpn#;h;jWi/VJ?"]!3.3'Nl@*0qQ)F/B"O[G+:VcE0iE7FIU>
%*NQ/,4(A>)pd]PX2C<B.)n#pW0nH[p-88A4Acel%Sa&fMNWq#tR#/VhG:H]D3u'^n]Gj8sY4"'O+Tf^]ZJr/gJWhu,aeG=5S1b43
%Hp\(_U)os/SI1l6YYtmK;Lu0C8$&l\.YGMESB9%Zc3bYt%!3h8@SEq@M87498J:8_"AV=QBb3'43*A+A9%8^5).KCBl9sP5KF<^I
%Ag223C/*Eg:'=>W=W.Sc,&emTi.F*%33<B'E1I4RFH3I&hsu;=K5DBbF<5DL[8HgE*cSD+ZDM3N"3t":-)+t<"SVmbM>#j.7glZT
%[liS`1+mG*!Cr&Mfl#mPGH<!@6*oMNk>So*(_8SlE[=n]H,*Q(UVR`+!N25\c=c/<LM<^aDf0g80la^AH)C[eUoFTm\Y0$/(r@ht
%5m,D6p#p7f!Jg&-?CNMW3*/iX63[t16iK$(e'8&U(33\uBYYX&M5d_+;Vkm;_@@K'>aYU6ChUW[9N%7$)K6TQXMO3Zi/UL3mYh;h
%hl4.<SHYP]Rk3(CY^eM_M7^!6(2tT\;<g1M3*R/>)cd_n2`=_%/Dtm\Ufn0BE-hK!#Tm+`E)u37$8rZ=oGG\."q.s$?<QBK"J!]#
%I&(b4UB_TQX(i@,kUNH1D^iJ)Lt?ZP.DYKMNg0L5!o,6d6f(^kZ^%Q#;h23.gHp#iE42E=I7jT9?ch&g9a$S\&qu.eQ3*Sb:,'\+
%Ee(L2(-@Wui8hR^da?8>NeMuhd,4n*IH8OC!mYkkbO_#&S<d+<q]NMLeZZe+]#atJRSMucCcK5PrTMKW,R6<a5>q4b%WD]--/Hfc
%i"RXjqT]/fA2`6mG@gm-cub\#^g/<i)*HhLChm=^npmLg@a)goc9OVgJEf8T5R!D.Hp\$s[q;jj&:rlbFE2;U_!1ec97p%k/36]7
%SHp2oA%fg8#95nR+u=\,#FtXQ<P=q.>iXL14Q?H4Za+Rn*cQf;<u,bX%>[bs=hl3HX=+o:i(OttC@R#^S4Op=9e>3j`je#rB)uWH
%?+*GNPm&/$<$ars/DuIel0dLd$TJ0Tb'lq<p<B%M2e]uE:*M='T`M&3WdNdJ"4$a=Jo.%b>cT_rGKih>Xr;FJB*)_o+,TbR'0%NP
%j^m4$JMScD(7reS%P1?Kqs-r6BMhgF%21^iR2=GB_!q]b5(7)F-d"s=i6DJN9LG7kSI(esV7j-B!f'b?rbS,3*(*D[h8'6>L^V=4
%2GE$?&LGcf9]-a8DXBBM^mV+O6X#--P$M;_8d(1H-'(bZ"r"N/LB31b0S)$PO+;>M!d?1dm?sOlX/2cL[;;eWC&>me<[r(/W-HB6
%'fZl>\/Xgi$=!TaX81j,_9>+nljX[hF6e]L[[(bH%H?VOi8,>ClBVdII1\$A8\-*5Hg>QGJU;#pn<OD$SQ=DISI->pGHI^3;1Sgd
%.k\2o$CnfM(KN#)%R0iC%2CihGV-D1)cY`doN&MjW5-5!.a*"g%4Z>JE2?"dZLW/ciu[)SJ[5E:jk$%1*%Aq>fgVe?B-!DsIAR'9
%'q/#<(`,0TbICJN-NhCnAEA32ah[GX[,j=b3!<NFgG`Bq&9Jq]c3:@&^k+T`3%rgJR0t"m^G.Ya(HB"SR#Y6#E".qaPmSL&khHeZ
%:k>C\*4;1A*93]=G]YESB'(V9[o%_:*4cIr-?*M'B2[c6-?)/UjHTuj_$lkE)^96KPZg8A#TUZb`S$4W*'Cbm"rf%2EaY!#Ti6LU
%!$6L]$n?3%Yeif!$ClQVk6uQVEO5&qZJbjdGLNsb$_/pm-?XG`E3ujDE6AF1[A*-!ULe`3m#[!F2K1LW^2LmncKGfT_p/J3c\M&<
%q7uIorpPG%5*ukN.?jBe2gjPDH$?>a0g9RD;!t)kI,NA,Tl_NbcS$TcY`Kpj^mS?(4"hKm30VKV`3J8'a(-ecSW8*U9F%Ot&4:O>
%)^]WXD"tfV)E!01/-+53r#6aQh(Sa!SbaFu&"FA,!;3gKi%ub=Gn3)XLcu\N#9Po3Cfm1:i<)T"e$U0Ci!crt"Kq?I]:O8QjTA"/
%d"F[iNbLoFIaEXUg65'V9*^J-29!;YJ[:'PcPnoa5(]U7SIQXcT]J5u^m0ZUoS=GIE-d>=Z6+2H%-,t+=#t<1js";T9*YqkSclZr
%%@l&NP?Bsd37*1J"*DEbNb1%k$oW)"eOi$Vft\UeQ=a6DAckPEFkiA<fYE@2H0-j*CuBP"7m>bS#4B"34fR\)%34i19X,NpDub)>
%Z@^0M^sPJHNsusdipbmD)I23V392c5JMS`dWFo2g#\LH6<[MeHV6Z,S1P%L>$#N<<%P0;h\FP0F@0q(Q!=&fGaXB-TJ4"`.&3EFu
%=nQ/#aoU@8YE(7=GdG(>"p6h=&[h!b%,d.g%G@oni+ULm0a;U;h8;f!4YqV@b`6s?SH'X1%a+aY"Q4tXl<!t'<,U(alL`sBR_Tio
%Y^aR$-5WhiJ"r$r<2H/`)gl:kBAITX_d4h*R8SNI,)Ueh#2Y-3BNsJ7q!?0rqoq:,RCZn0hoN*4OkYW_]*'E)*i.]WWn:Ik<mknE
%PEMf,I\T=\aueiH>7e$nP(#cE=W]gu^Yrn8M=MUu+0[3'N8M<REY*\p(=.PCZL`L^D2`+<hcRDPWH>H7C7C4oZ>\fb[<b=89h*=U
%<i0fJ2$5Xel'ifd;M37gheZo)LbX=a!>s0kqF1i%OY,%+,H5-VM8%s@"kV%E^7/'6DU<d+B"<T)Z@!n3=kR(nP&IGGZ*"euLf>MW
%UD&#bj';mGI)GF/b]Xj$hB]tSo^2;-Lb8Fa2XK;Q'b`\cKA7E0Qe4gkp4h/?9V\)V]b*4MqgGC9<ns"b]ed&TRe[PJg)DVSh]()%
%b`QDOcA('mbmXpfEc8<ADrps*V4h4O<D"3NDj3gEafjLV:oLT_2pC.RZ9[8],PGaA!X0+*f=T_E)B3.(L8TZh*\jAhN[I*&K@h-Q
%5;i%ufpgna12dB'2f\jqr6"A#PTPUY>@qdV.i.J^4fH&NO+Z&!9C7`3M]X[P]s5q@Y8LAUDlhH1U:8Y/3"]l2K@u_'NKi6TZT">P
%D$RI-=r9(6gtm-X)Hg3TDJu8j8-J/3hQSULW?9pPYWs%'hf=(m8?+\OgtmSD(Ee9]gD__JH*cK'<X@EWQ.qf']l/@=H^!2<)oMN*
%;DF#e,AZZ&["a_UWitdG1sJ?jah@KbM_?Tk2bbu,,&G?6!JG7e=ss&VN`aAO-22Si=\o1.+nm>4JWF@gmT*:/,2LASklr9j@S?.V
%e:VZi\[R0c@HI46;plPk2cGkN/f`Bt9INd;!i,HY1kC#Rc-5#QUp0X/1OGm<R5m?r]fAp.p30WL]a9>?md8fdoL5$2AENU*`tH0-
%gtn'98Q_t*i?o3phGS\6"K"dMC2Yr5%!tft1[qZF1M1Rfj`%WlbhfSmR>8+Wp86A9P"fH[#/3?g_9VE7\ET<;B?]3`oB-b9RD##6
%7^I##m1&5UWQ.*.2]PMcB7noBkr>cMI\l`BN2+"3FD>^r2:G1b:#M49_hQm7,r%[)#.6Be6=g<ZC2^a&nc(2K2irL.L^1=H\q#7V
%L=mNJ,T>sdhE5Y[*CVNYBd%?3QIm.TP8YX9fUMBC[iJmX@W/"59ZcbAhIt;JYS2?cZId?]2T4IjoiOB(M7q<"TMl'"2Zn,m@,4NC
%brQOTgreucnUt"GAoBa,M,_)CZT%\]&t`UVh?`ddcr:KiDhd>?OM0WHB&"4P7"a6`aq49mQJ7lYOaD3f[l9SGcYhk<7LMN'%CJ,.
%Nk%eUkOupNkOL=J]pUJ?>W<u&-E<u2UQKnE^1*`>\Mm]V_K/*4bmE]*d]-X,LfS\:n%7HT])[j%Y(VE7e/F#M[l<mk'9."lp1B^6
%aVd.K2p$7[ZX6dODbW>&D<:Jg"'aPQm1$O(\#n@\Hc+bc@n<Nkee#5b/%%=Lj2t)7Anl8<'$RNIeDAF6BBj6pp:gF#T>"8($^JRD
%ku_!m=Z'%K+;5B4s2'Gfdbu]m_]_Bc"`\&a!g+.,"G(-dLdO9BmN%1#\X$Ys)A];dGq_2k"7*J'dBJW40<@UX-s7T",8<3mOiS0Z
%JkYA<#[JY>*Y?O48Y'O,4q\,3=kt'Za,4OK8.(bA*1H7NKU*qY*-^b_Y$6=I0M"-CO'3>l+""V6Ynss"k^@^3.LT&k\I-+h<4&@O
%VA?NeT(_Jl(C'H`@_2j.`bK'I9ME;r&<Z\1;stQO7+,PNI>+\=;<3u5%5#!r'%UQ6:Dc$:g4r2m:&sYgS/(An<#7&J@4WH=a_?iu
%^>dd(K]*DAXbcDaM.?s)S\!9JCo-E5[Y5_0g6(Sb^/4U;(p=9Q,`m`.QUOQ)K9m37.*Vr-c['Vm/fLSUc-Ut_qMEo\c.mWPk["Qd
%/oDeH7/C"nO[$AE"pHY&Dq##bDUntHQ(gka5"TgQT7X(b6!>aAZ6,%*W:AlqNb5s=!s![u/L&bZ.GVlC/[;q8!>\fp)N"l<0Ye05
%`bS'X4A\4nHAZ6%dn=+P&[6"MTe\_t`S-e5V&dmN2XAlP819DWrb.Mu+@lj4[Dm*aBRr1IrLSO<7O9ST=B<P*lYKe-L]ED-H\04R
%qf\Yq#7S/S[:?Tm5_uPOp^&SVnS_AlJ6#1UQ4>IG!H0mEQNC*CS3$C4*::V=1lV)&YqCQ13)bPDV?\"S8DP#g,b)\ZQU]g.!CSr+
%EY?R&;]65T5AmY$@'dGV'1Ut]ZrjXPU)ljg#pnQ89iPc%L#qU!9tZq!i/)#B!F"E0UOauo!<ilV*#4QWNG8jJ'YppZa@P<>>X6:q
%@F*YF;+ZCQUE=8KhiNa@5(U+_o\+Sk(mI^dR)#X<"a_c#P0$:Y3)iXq"T5M.4<`o3QLG>ENmWt_^-f4Bnq1U+:nOMWM]W9@"a8g3
%>Trs;gd0Y.1OYe/D49-H8bq5j&fT*<9'E(;H4,4cBE=O3J\+I9BS"]R1ZnsD#ZnD0$FCSS$:J_s.KScp)S$haPqn/EYtF[&ab^'_
%#hJg(oUussFFt.MkeRQ*gSKf`QuNDr&JJfUar7Ei`X&Qma0-5#\,tW/]V_(2M&46lFR2cNO+;1;pAfh7>R*8F2g5K6"G;o)P%GCJ
%j?\^/9JV59,_]n?_.]Mfa%dsJ_?6GTaNsE?=+SU=kXT[sI)76RaW<$-,@h2XY[PMZSq2jZ9:<Z0B^-qq<7\TIRU,?X2h;]fGVl4f
%qj@2Vk^DAaDb_$HKh2T:Dc3u+m?\GW%!:S*h*;N+]n+t&GCl==iMjos(o90!.u"Hg+Tu8.O>oq`^aeQnB+-@4:aeK$Ud6e6)k0u.
%"GpEGhAB@l3Rg>M@H.9:*#tX*GZM-F;W'0=j</X[8S&0.YY,'%ea?Bc>hCT;D"LstH"pS808H&O#_YV,/L0Kpk:gD%RsPX\:KM8n
%CbJRlCV^uODGCO8'<a]J6u:no$sNm@/@,d5<onVEguS`FBLu$Vls6D6TI&*!E7;&N_Qhc=]nUQbg(lf'<M,@M6I0n;[;H,1lH)ZC
%(Tt>]dP?C/<+K1e_RF3()jVk,noQL*=QBSY*(%D@gOC4q"W3,rVl4S]&p4k+c/(>[7!0.c+cJGgnh;t.hV)9H_%(?]MU2JmAe[M&
%[,V6B>HiN3i?+[7^[;/Wk_tH@p/!%l(^NT=?UcG`&7u+H2OX;+,dVi(B[2N3qTq]DEY.(S]a"WH!JsKP8-AV?kSA#C>pq$"-uq;,
%.j7H#+g);R.$d:TXb1!_-h?s"(Ik\%;G9+s4ljoRL1Y<t$Zh7MZ@LH3L?0GFVifmX<Yfla"IIUdR1E\s6@Kf@$^U0F\gE4Kl:4^=
%KU*%M&b"CX-^3[`E>qI$D2u(pZtO1-"b*Q)#^Y"#jpg#(nM&6DD@l&t';&EPBG#OX4*1P5/sH^D.ZMBK3Fkn&fs[NQf=draf<0!<
%LM]r*Lok.pVIoCk45K?aN4ip39Jj1)h-7F'U)2uIdaYPHENYf[?J33>13^<n.>1$3Zc()MMV<s$/l8Og&%(8J4g`o]MkUgq)?^[q
%75aIQcRqR$F&Q<l14!`G1MLL#liL0g2+[q$M(I]G8[1`,MO^.`_"D+S:B9[7eE>d^Q/53?I-eE1;39%g`%=u1QgLY!l/iR87G%$f
%Z#)C+\+HfBO9;Y/D<D.`bQ>iA!>oTS4$:^V3i>PYfP$4k!;u=K2E1"BHGeOgSO_':R#f<,COGrP=cR/u3g1[NOrLD&Oi*AZ9A#2/
%T@AGCiQ\g5A18h[.COJ<@5+!!E#?++YM3?URF=28c&`:7fa-@Y!A2Mp6OWVg0JUllP_R3@$H>6ITttjH5j97NkO(ZU09E*f_l"a!
%PS3>XN&rDg'u8G*,KX5-i*Gir_Nj#lJ(7gIXV5OeV_Q"(?&Z09=<h$M$0AtI6pU0=FlNhbPS>=kPs)dECkAA1AApIp_E^":$5hKj
%KuHlEC$_R`-e#Su!lQ]JZoc(JJnf,%eOiWk'0(Bn[2$1+U+(V)I$GUP0U0[4Giq.QI@%YWnbRdJI14q0?p$G_8!3H@75k3E-I.g?
%9NjSdSL_:CU'.[Q`\\n7@pH?@U=-#/Z"$15I*#tK/4g#:F<B/3KAeVW/#Z=cX.VA;p^MrkH_eQiA(DC'@W(+>Jp"neNC.o(*<P'd
%U0*E_Ol;TD]tlVbYhH&K4Dr1J-O]1BOiC_9AJ;7%/D[*iYBU`C!b4E@.Q1==&/+1YJ9FHYL,Qr964>0EX-6TY_jG"%N'7m^Le,nF
%b$r"'fjknA5$6?n!MZj"+5.[VjQ!k0jbh=!2R1PtAk@&Z^[-B_Udb#fdG9RFd)Z9*6PL+EVZNAabQSCG^]MX5KE5]'J86(_9$nMU
%o0ZS"$\Tra;[CO?RCa.4J+ha$3KE.B(4K><r^4FoKRCXi.dpB4-\8ROjr@RQ-eU:r9UnpE+=L\%!ZVc9XSMNrY-iIc?+Lt'8:\8j
%WpksADH:CMhKJ>BQaOU=JqPtNQF&<]q<hu<(rTZRSonFC7&7N6=!:dDbb$:dm][(("j[9s8Ut$p3l90/?nhZB<(AJI')5cU@$45a
%p-bAs?TKg]0Js0Q%Jt_O\1k9g#8a6XhWfNQ5B6p[,p[_8BpWlR>/Arm5'/$r-Et@#kJ7%`!'grC$Vhg(/qr3eKeZl5LC%k$8uKfe
%,tJFeWC_m28qo/t*TET?:UNW#3Zk/k")J2V_0K(r_OHu6Pt&#cYXM`W*@m*g#!+F56j^.:cp=[&YV"=[csI!Nm..fs"W8uFOhVe7
%$V_hUHu5E^HbI*-KYEn?&6Q%HoMM45lPP!4!Z32S42:@Ce*.<KG>q'OX99D`3!OA;kbuCtJpiX$#-8R_`HsVK`2a;nK^KiT0l:pl
%H1HUGY_<>&LteA,7dma6Afqu.!/MKg%b?_C$O4FjE1Sl!^^$];W=h(CP-C/E%n>,BBN(Jf"ajl9gdN.RdtFkd>9C0DLbK=1G"KfK
%hm@J<AF6KYQ<X.a+eWHY'%Rn`\@piR=*,P[,r3)9c:a!]OKl8fA@<ejP4C+^g*[)iiDBgs!=4*`:]lcg5[<3h"t#mMFg203F=UJu
%Ui9)?(hgJU:@n7kinMUub_gb/6Uc]Z"qrj$`'"\S8;OAof)4=+eGV^-Q=9,;a1D<tA?6#P5AY!1'J=F3_OKiBVfm,$C.:/0KJ3'P
%L>48n1@Mi8fa:>dc'h1j9X9?`"QsJ%7r2,=N[]8CpV=O;ZK`:&b*Su$,U#(k0>5<sW&F`L$5ZG'CFkI\/5/k?6W4c%Ttj@VUj">6
%Mh4r)2`<^0-\0ANSn-0)LN3b.<j*On=6ONEdL$d6kq7Uril/g_O\-BBUbWU^GRF3`no@nG1jPQh@aRiIg/R$)K$gA#\l/l)+cHh\
%B3*?)L@l`[$fKlTHm9l"hMDpm%GW=BWQ0SW6Rc%E\<kROMhMT*4!;k6NabOor$mq'h'ro.QkZ@Abr0u8Z8"!a3:Lc^^&]s2A3o3b
%J-d:TP=(^p%RTsi71s9EoN8+;`L4_ne#^gjVI6[%?q&oY0836F(?@i3*-OAOD#&(I"0dr=[O+/6qaDg/F\&aK7#XYQo3:H@BdB`T
%L)m8(FDaUNs+H':&Y9qR]45ToHWncWSsR\I/jNmFjf_&0PIY=4?rI+[6(Qf#Hi33FQl^0i;'PB.7C"UCkcr++SIHqI<5MY0/Xn75
%Ws[rJ\5&.L2o#qsM[eO[XP*^mY=K[)ql.LG"3rW#M)_EgBO6p7/"SS"3`qfg5UVS2@J5@R,#F't+H6C?Mb"&4S?,Sp,3o7L#ut55
%Qt3Bh[fBUKDDbUJM[Lh0=Cko!D$^Fp\Z8TE=9>!DaA),QMChimqZ9V*PMe*X>f+C'!jedqW"!1k0s_<R/c"Y&>`)Q9Wd,Z_W:`sU
%--uaeHdbN1;<TL'%[f.J-U\O"9]86T77+-K]UUR!#q'<5KIaDe;Ts&@5ml!qa<!'I#`^ZN#i[SZ#Vf0QJL,uub=8@V+VV-U-?78_
%?mUMcR;j;$PtZjH[?B6"@5nT@AWK@^'?7h!c(nPD95l'mQY[CT"PT>HH\1Nak9S?*5,8L2,b-<hfE73F3t2e>c/O;20'&W5Y+t.-
%#SUj'\-Bk7?@U,pFnJQfD%O-'W]O#C2']1q9NkAid[-3Y:,(O<&TsX8kcgn<:J;RXl`0Zr'`&)o<S*(;\eS8O^`6'0l/:.$"V+$s
%C*T6!,e?EZ,$].HBS;NDJ?[ZNW@$PMXQc8e'+ftP#O@R;)XiBq2'S'9`eaL;`2rWY!COs?:nra/n?e9Ncilk%d-FV7>eoG`@6,VW
%Iiq`W&;qD-ggjO4D-MFI`,9LmfEb4P$#pl^lEF#'3<?478Lj!3kGP)E570\$DHMY=<7EeR!CAS4!nU.X]L?]u^q:NA,9(P?1iCl:
%7d7KKi%FcE0?/"K4\0&Hd>8cd;s\@apcpp&X;49E2Yb`d!h1a;Y5bJ=QWTtV/V1u2&1!.Wnd5+<+rfaED6(Jn2,&q/)HR,,K9#\4
%@\cV;nl$?Y4LT_E-&?W.cWKMt_[l%Hi]%*pE""O?E-[^/L2eDf!rso<O=9&$&N!Dkp.u#i/6q>Rf$\2e),HHBM7aT*0q2@D2LCP_
%"9d(;]LWNHltJI,D%pGP7XU>q(m&h\)&`tt>7#DHP#+#lRn%pbe.)UGG]"Y=3&$XjU(p/OMUCdDklhn#`^W/SL$g;p-Wf403,)hm
%9gB'$/2W60N8@bJEtZd.mGqKnh:_Wj&dU['?rG*?Q`Si`cEt`l@m04&)K4YG.9lYY8[`Z6!>%,m@%KA)8fAA!c.OQ#SuJsZYj6iX
%JC?"*%HTn<)*-O_$@*.'Uq$siBnLB,OKadGHED!]9*$*%1[6j:P;f<M?-W9gfG@F^#1V>K($M&_dL(C].tV/K#dk-dA;JETgq/qf
%edXEDE/c-#46Df2QQ@OW:s/\b/3T%:?PeCLV4TG;\E]0?1`X4;N-?*2XN%7(Kj%UhT[8q?43tbb,b&qqP^p$u=GbF]H&X=-=cUVH
%>S,rj;B?C/Or(oa,7YfJ"E;Q`UKDiD'6h[2`[Ec"q&5*$\#?)3JB[$?'0atGE.PRH7\SFFau_sMN:ETtUT:Yr:=E#XjV+H07*ZGk
%!V\rnjKY_]'>hEI(6Q39mVm7JGcbd-6P#&[(uk*;FYJshX?Ui*F,gS5ZH5CAfGJ@W,jEV]-j-tH@eECcXam'qF\:"lHsP@NK'aiX
%"[+""/0lJPYHb<b4jJ-`j:hcjIc=hZ*1XH6!s_l"=Rhgn0Fe^J4JkumHNXZJ+g)eJlFI5eH1I-V_>>_;&JBo(SR`C\JJb\Uj4AYE
%!m@0'b\0%41C;WAZ>"s,Gp<oa+BHTuEVg:^!1megQ$HUIR3dJAbOGuuRQ#lcJU6GOKWJn,!DS%`]&5UsEArsU-2M@&I=p#QWE`PW
%.VL/3Jcd!UW$+6#G&`ldg%*9YV;A'p_-lE6_$L:?S&cC>*!rH&&,o#-Gp$\4+^Bp.qj$(_/U],\E4e-,\kl;"!F1/_Kcl^c<0n^t
%U9g5Ue;/#K[h)X"H0MAGRB7,KM8qE_!$O&GIN*9R&dX>Fg3Qgh-R)gCNcYHo*<TG)WaR>7:K%1*89iLPQE(O5HI+/"nrCj5T_2cI
%Gl$[Q6kpGlKD8dJ]D+l]OH/jbcB'X@2->60<!`jF+Ee%:^k!b4<E:EuQ4aB[==$h21_KEN;M=4(d%2N''F%M:bg;EIo@Y7JTH-n$
%E4$=,!%L2NNj:g0leq_,PoBKO:p_Yf3a>RWVB*IAiQ:fY`04?A"&SqA-Y=h[;?l>`A3^bt3dmY\*[HH<&P>[oBd^;4NdEZ+?j^q6
%otfZXcTYg7)7fPfhhWnm2N!1OjalVRSYT&C1IF&++o[FJZ:3V!,Xe4m[ofI(A+AZS_ODtY3/$c@+e+kaJ^UO5:^k%km@\26+3jFN
%M0LBh_b=!D,gcf<bNga`88W,=US!r^&/,O.'J_./\>05Ub3;X_OtEPg&HXuT3M[5M"U$Wl"Cf0J)PhJmnG:!0J$j<Q/e62iiVi9R
%g!)gHPQ+M:@<hkZ?LSg,<n_d<@@C5qn;<C&_D#7Q&+_ekR)LElK!$+6@uV[n6UKB<i]j<;+pY#iE^i*P\cj0U$d^Me[6]4qTMGlR
%obgnO8Vu1?;i\*iaHU6cMjC:F<q=&d%pZ;;/Oj0nQ,FE?0#t2[PLQKAl#\dg,<c,TmIbXAi!%Y'hA-N3_Q@bXe##Tl,TOG?g;)P:
%H$,(^W?THGq/CkJNQg2%5t0/da7=3ZF"Q<.5sU4.699l-DX1`h)r1sZJlYATI-1&10l&O?*$g2+EHDb(,mnRdjFED^\%iuX6*cHc
%^Bqd^hDitt64NO>r_]2-P#:S2?o3]"9O*:Q`lCcBL?^K!.Zt2?>WIrPWC=u2fE>G;N$jin`P<a)B!=]I=UliPLebUd/7T-FY6(m9
%NV+tZJ`KkY9T2idkmaeYV"pCZPCQ&j7ll',3sh]d$$+b8Q&Xsop]Y=5G`;fh,s+]FnMO;t0SA"NqC"]7(][,L-1Y]""34<+l1'at
%f8BcgJZ]`L"o_IHLeSRcYRhP`*P!XF;[dU\1I(u>cE86N5X7)!fSXk]&kOt!hPJ&Mb-hL2;La[8LttV]0[Y,4;Rd'*E5i),Ymutj
%r;`rXcl-T9[$:NM\&s>($<@4/+Ld%ZJusN+H7"@W!R7:XLqOr)/;lXn_Dp-@Um1^CVn'iE'.D-A#BH(*!Wq*,,qCSn!fZ\V8\GXV
%(/?^SULN*?TI?\Ggcsc\Yq05GGlR,4bmn4qja0:P8aufn8)nl7TAqUn2&S%Ypf>>)H'JQ#*[G%LXYi_M]lkk2WA1TPi"ps_8jOt!
%5Gp,b]::%Z(u5L59O_IMAmm"".AJ=T##>8olS>%td]^4CO@RU,Vu9^V(a;qYQ!+5uX5K?ZP98IQ1lmT7\NlMRbh950AD@cD!&sre
%/)TlW(?@m!R4LG<R=R.LE94+ONgZSl4,BqE1P=;+qXB.6YinhXY"k&%a(,fl)/,U;5qL(<JOQ8gMW2-7V),GsJL/8<?IXlknFI:L
%]I.H,r1%R^>\&HN(W[nW*5X*t4$7Wc9#Ti3bq"TbX[!%E#L?9],_<F7e:Q=hA8?tR+[8?D0p$u)R4D/i0!HCihQFm\\WUDur,CV#
%C'>rJoJ0%1`,IRf^O,R7W$c*j-/=E@=0O*+Ubc>M(SXj"(IlC:QU16SnJtbc<2q>h&UnZ6<I=2"ICga:Yl[':ME(PgW0Lpg)2W][
%VmWc`HSAbG.]IZU+<i7Fq4QiXNeAbG4^FR<,]6aOQ8^S2/=XXi&Z6M#aTBlL'Xq%2S[H4cT@F8o;JHeZW%eAS"H)0r!hc9,eC-)u
%&JOSCNY#gU+At7P<'8Ek251pd6DZMjP:mK1KLJJLVp+Wo,_Xg4T;#;@Dh(cu&OanIkGCeO@W[cu'U#'IgQ3[P*i/U#NpKM,Hc[*6
%$#:u,TaB,=!jAsG669UN!_X9S4/Mk?5t>@)&hl"?a&lA@Ob"uQ<>bd6>9*O%%'ZH<Sg#-uYC@te-PX;#`Fl6RJ53mS99@=tOj2!/
%9O\HM<Y=E([Cq7h%]Akr_^l#Oc%\]EMbGX<#pL.5gHj]AZVl7/._+%;%&s=*,82s<j^=%#3DGZ^:R8rAo)u=[:;G=mJl.OT+Is6#
%,apZGcHB5S&!Tik"q#-6=+l](3<GY<;N=AR=g6[bQ6:6TQ,saRJe8Uhf9=O]Pq4[nlAXO2iK;[6QD9l@7Gu>l<NT7[Y-_'HKLj"6
%OsQSJ+dEd*R+qbQ73IYA%5ekn+_eBm,ubK=%s>I:(Lna12+giR27USoAh]GN_Z6>kjQU(r$b;n9!f'&_H%c,%[K]Nhp9PJ:Ee,$d
%!eKZ/+7C/j"",mOb@^g:;.2&N<MT_t>\aV'8()H]iEkaL6#]]aQA:*Kf\.)uRujlD+&3urG7`%Q<G77<2N;:u>V#:[!^?Z"dgB>A
%ZgfWp?A>*gJsD)d98'ML`"]S`eI!o+'H+I`!,*i%8._p,SlhX1-2=;_/fou/Q9^m\D*ZHKCjgt6Od/@%:&GP^d'UXrI/u"'im&aB
%*!LVMW8a*aDT%p)!CD`-4G.Hu^u.*c?%QOK;#443oD&lhk7TEaFY/inlNYI])@BJ>#bD,77*s_Qnd6V;#c;%$/h`;K&2VA!'28J;
%-np7)b0gRH!o8X0jd3W#&TB<K6',_5#,`,K+\BAkQQj\VkIc^V(e1bB^*(?)BS)?8$>DQ2:m#Cp,&&DTi/3W%Q3!Au?%LqWZW=>[
%>?sfomH3JO"MhiuOE]1iQTdHjPU7D/pu[\Q!d$!qHJjt%&mI##1Nh?;NT'(n"t1fa@#WUpP&<05ns(&r@#V&p)\7?eZ3R5tQAQWs
%@MA>9=F)BM5mCT%;%1LlnPU]=+]1P7E#B:Y+Ui1&"c:?E]uDaX)U:Di_8&uhB^qb%Ju_\.+&McJOphB^H*Q;ZU?Wd03`_>t,VY^f
%I%@"U"XFLZ;/?SOdjk%$n]K;s'Qm3:;A+42!Z5l:J.*Gj#ln)/8V]]D1KM<Bjn%DQ"K=PXdbl`'-np(E:h'V1Dh[<f4g6fAO7;e(
%fBPh=VuYOh"2dO/'\-F-"5$Wc*!H4ScpG32Z'eu7E;:+[NJBufo@$T1[)J&Z6.1!D?'O.QX:kY&+YA_H!OjBGQRM*uju-CBahTMp
%;ts:h5sf\[a7:?mJ=0f`rFqD*6g0,fm-h.Y"TTJ_:Di80N3Roh;p<ksD"2n(DAakhM!'ajH0Q+"TP$\=40`<H1"o8&&?5=B!'%+2
%)YK9m%l&\WZqmf3RPJ(TFtA%o"JG-SQ6Z)^o=M4;aZdSD?*N1QFXI%tRW)$?2YaV__$.&n'ALSHKd(/X]J$l"h^"nN7alX>EnN@V
%R#Ik:1kOg4Z,EZ@UR,(-Q3:t:+A!tq($%Ko5WT2`!=gfkrD/ECX"]JO4g;k`!F5s^_gdmoQ@u"EoQCF?$o)^?etJhW(.(teO!6bb
%Y>5Lm=^ZE:i$8TBBc(*I,.WSVmis#[-fr40^hbTW+U,iX#1S8*X_LS2A-WZC[32Fm>YWud7Ysh;.8%f&R=CYbHk9%[l$aj+"E_#V
%k@sE`hU>jE3$pRt5QSbg*_"77f1pitHgFLN'@e-,kb;(5PFdc]a^+J1.4..rWY7IG&OSm0G"k/tKX@Ss@]N<`'H=\'TFDkRP]e3n
%@_L>P6XmkH0Aot:Uu)P",4<>U2jVBT/f-ShH;$_DKr2:Sp`ZH&Q+I;bUVo"^;/D_P1MPY]E0iZK(Y@d-%8;g*r#!e)hiq\'_a$IC
%>c$@H+F4F"8N];J)Mur6BQ!,k",1mEPsKX;g@m>C9X_;5aQpYseJ^RKWFA3s<1%EWAI%4,?p"X.;]p?^]P!-)g<ubHlCA"Pm-#5p
%.p0j5k[*`A_iO%'($8p?&q]2W;rOnLVO[\1P<r@kaUPoR_E2EK&a.sX%-dtRKCTOqDK(N-0T^(f(QK85#tBnE@9OgbDPa[)&fhRd
%&bbA\NURV/m:-mc)jZ^e'I6n@6O]*E84*k#MJNtm1;U#e;TDrsI*>-O*1nF^c7j6`C>paK1E_]X]NM`QK$Z_;RO*JXjE[_f365eL
%E@6j*b`J+0E32L_`$seG&9qMC,lF[7f6W"fQ4>lGZ80.91km1k>jY[G.Uk\J(APgKkoiGB8rgWL(R(g"8]+*$a#f,?8EU\]2U(*Z
%q;BUdJl[Mg(`Fa2(ud5,lC[mWfHEqY1Q&dNPFtPU.7Q]A88)3_b_!p/mT(kr,-!?PM3^[saMMI@Roa@/Cb*FPeU5ccNlHr!OT7QO
%b?Z9R+;@s?#aJ5g"/(fJ-_ts+8^P/A;^=M2XiZTRfLC@OLG"bZN(qHS6E<4^3`mk3$3[n57Pi0MW'_D_5ffKCjq0>3-t$>B645Z?
%?nES_#+L<1&_+.6"t^-5rF7j0,kE<b!Dhcd1j"m9=p!_(S9"aZ<9]$edgCT#J^C_i/;d2[8f.T;9_)nnkd(=/o>F.E,c&ZPMiH)@
%&ESPcX/n!_j.3!Yo[Xf$4(-(TnA,hR,SGpdEa)EV(fmg9!?R<s\8bqJl<hI"ehN5+@`XqSRXd98/3bAPDk\A9_15P=3q_DFgjBuZ
%'T]NK+tqj!.Z,.FYujlKMf^Ul"&:N^G>`q+bVstj9E1_u)_ir#45W]lVf9C:BD2q"":=CZNPV(N-#S639JLUYpj&6A1tF-/Or.)r
%A2m%E"4ODfm"e#![m*cmR*l9IS?^;Ims#jMk73!!>@rC!Jl1]="dt6eoghhijA]l9!V#K.<9WfOL.'0piA>4Mqr,M,$jeY%:Z\LZ
%j8_/*)&0SH>nf-Q&E+p&-5V,jFYa?RYnGb]<]tMI;+-:c3%>,=:\_JKfdC9pJX&`&d(Ml2UpR`9KGu2"diC;=<I]mK'dXlmEApJJ
%Ca?u`2$U?CZ,6\Dh$I[2QR!PdQ=YbjdhCjj3+5Oh[`Ph?"P/V/.T0TG:rOt8Q:dECd>WLaIl_VOHVpV-3@@dn`O-%F'+8)=fiqkj
%-"mFo78iuUTR`OR.AUDI2[\<+N'Pbe#IHPF@3IA-PH#_(JnJ\beGJlCl`;)jjCGN'8g4$92Af%!&8u4@N?b)51*e>]"4t1#0^Gkd
%8@g6c3Qd=c:c^k/b=a\_SE1s["M:6Bbg$MI)c6\CRTqSGO]<a@&HJqiX].6@Sstl]^-Zh9n4=<Ko$!K=cgr-c!N(Pg@Skf&!$3In
%&G;%4I1`cI0Y($(E;ieQ3Z7"aHXD[aS7JME/hmMYK8foZ'pq%0.sqgu1?RYQr&E?KfU<'koc8k2]c]ILE)@pZF\&aO7-k*=:'-/!
%LlY>eh8-G"+.$/VOFTLpng=VYBlT?,SinA@p1I@3=]qp6GbPB[7i#)cEKhB/<Cf18MA>(ed>N$6@4<F]4;o]F1W'6RB0%="=dI-q
%%7ZGY#!N8=STKJ#i.\B^MT#UU7qQ$D$=,2?Mb(:uj4!RsgnZW6,4.XcP`_rk^oFYKI>4h4[&ZoXWlA'PL*:!e1,"]1>Q?q&d";qL
%!@g;;2cqH'@:[M*Fp\'^N(^ugV7YGp,T)kKU?>C*#H>1g)cM3#Q((T2##Ga^7!QXYJKYbAehr%nl%kMP[JIcJJ;6*qO=2mqB$5!W
%AT!&Di#h(YlEEh<CQM:)Q^%K*7PI=9o[/OpD#e'YZl5+d4QNP.4&DCk,/ed<4b\JuC`s!/ljZKYA9aJaT[Y&7UEl1PV6Rlt8#mRG
%ToG2iEe6%i@+NKs/U%S%[?]W,ibq-0O/\V=5:dSW,XbDKRtRL[='G'`"JdGH2e/7]Or=j:k+-=ZIh^KBCR%F<,UIAt-O`SeO9WNT
%SbOqo$6I,^"&aSB_(R*T[LGRP7Nd2g/!Da2_1.Ah2245T>lk<q[Nl;-WAYGf9q`lr+?;sn0Ljb8GXSVC<*g(Jrt@:a+<tu>nArEk
%m-,;=XGG6-_?M)PG$M+X+_:f'RjjIsZ;1d*VV%N$"IP5>DMaO,nB"*B1ECio!p:!j1s3<::Q+/^_C$*k-9cGEOi^E!R:$2n7(j1O
%DMG<](?!]_`]F(`hXS7(`?80tK^>%E85RJ](.d#T<#![%1m%Kt:7&m^L$N%iB`[2nTn1+cQQMG>?qXC7i1=EqSV/aBV%o-oi([MK
%#i+MAq8K1U!e[$(Q4=AnVO6/](h=q6Q37YuZE4a=a\^=oI#)(+;'qk\7XVQ%&k))V7%[bQ(.'+m9E;eXL6Ih*Y'bq=#82Kf:XbqF
%P"8SLhZ8QYgHt^rBh'7o8GBMGcS:$(-lB6ZiE1G*/0"m0Nbel"X<>cY\1#SJ&P-Njr]F]`U#tbM+r$bBn84h/P.+fr'OE8$1pGVt
%>g&/Y=tt@9Vsr\3F\pi&9smO*K(lsD@dtl-16Bl3,JQX4/:7pi1/QWa(e:tHUE\U7O6&Y_cTi]^2CJ'r!%p[FBprqP#WJ1f;KIn$
%Dr9KNW"LIeEp*X[aKQLHmuf9fIZ^ta-\47CiY^Xac*j,&iY&JfM'g?%iD/EMF>AEb_DCGl-m1G[?X[b<iCXde):+VpGWAjuVn?LF
%Br(eH'86rT1p7*\*?N-qKs=AW5?&t&.81u(:0&kj5a%QA;q(C5'U$!L.+/r(mNM3TXc#YIfmbPS4Pp"WMbKpFpj-08mOG%OnU;E-
%W@**4N%9#RAE"o$1[b*M-"_t8'-q)HDaak05@Z$sEs,ru1mn<tQ;bioJt%G?Q6oh8D3V-[<6c\6c+I"'0H`r&S+'$(O@FWNHn!AJ
%PbK@L6*N1Dmib_>8u_s?"X>mM;!]l4qD$\3]JWZf&0a&pO#@</W;6Qlf?oCeSUg,:j=o.t'LH%u!n>jV"U3T&bUS8)7*ZI0Y(Yc8
%'ui1oG#^qWb?Q:a%Tg/@3K9F+K-Q2[\.!LOmam9K($7Q/:;X]GltDA8es1p'=OQ.>7B>k@`3a!uBd4'4N$90@ek>!1HJllC"t\pE
%PK#*k5\a`DZ6i!oEeTpdB-q5F\rhXbL-?W?6`alq)TcEc:;h:-+`q#VaP%EH7L]iC9rcQ:MDNU6]@%)*Z^uM/9+E`UN2@h=9:QI:
%ZQ+1X2^>Da`MioYep;mbH6G;'9(K+20f#.-8#@QUTW5'L[IGtW@tgV=/ie</4rYei!Z2.6dobRqB(G'T1-VG%&Tn1[#pmGD'BO\a
%&Ro8YV%OO2*d($G_$-r2E(h*'&i(r$Cb-<4YhD^(+[X?I(lfLp`-s<aCV21+'el)%J;u6W_0fpdPX1MSPCU!8FURKkX?ar7@jeQ#
%.cVu*h\cES:=8f,]+4.r-(":Ras=,ZK!Jp,6OEo%:B@m.CPVgk:uO>/!Gi#/4#B^-'-]MSk)fAG7S^Xs#C*DEqkR&C,VbN#B\WlJ
%.C0^F<.%lPM$3F&R".LSf7`](b)=DW9h&u]gD(&I,&8'TqE>2E6.RdR1pOg[>a_Wne#`Tg&TID0XYI56g3?N>^bYC=J3>.*^$d5r
%Y'aePC.*<5U'H>+Yu,8/qZ)0M*n8ZY4B8s*)2pth,-G?p.Tf9Tn<H;[0b$n".9Nl$3<%.H8oi5@TLZsF_0)@M]l9gE&ddk<\l?<K
%\=plVV1?G$Gkl)`e3_TFI><2!e^cug<(FqjXW\GGpJ1Wm/Sd:AqF+KVYf%J&*Jl6SmQ*E!=L.1EI?0&+,V3V?YIIbCLMmrq9i`FH
%K'=j(^5\J%%8.q5_L^>Lh0Pm''CQmQWCUYH67:G"'nRe>G)d2okYHi:WIcph0_<r,`p,Fk'OB*>k`o>-)GhQ^\Yh1%f'>sJ@7or"
%TEq@A[O%Ce.Xi,'!Cd[J&VXnD10^aK;nGbBjR=\H.g+s6eot:-7"rX<>Rc_d$!@E&O:8<8QnlV<"=47FdcjA:R]_p_'`o08:KqsM
%2bY9ZJi$9c0:'2g$GeB2&::7_JqHrd$[?i2AGM*?:#L':=Qu8H#Q\:),<>K\(^TY'-/CHlnbTN_WGB1HjtNAoruc/:i!i(-r%#&h
%&-AuXNpo"h+(Pk;G6*PNmZ<peB_cP//:=1!kV&L4Se2kl$I]08,FDV5CRj=MP9f.\'RUlYIP5Bg,(flG$__mB-(ot3E8mZAf5`?*
%<c#pABnf(8eEA1.1'0=!@%ndiOX1nLRmO"ZB5:F<#`*7a7N4gq!QYQ!MTF;:Ui;sA7q1e?e@LP!LhjV>,md,8=:$7P'P[Xp"GFTI
%R\&VUVAOma#p9g:AIJs;$,%`[Wji/l52ki.E.Q\cP`Q%%$0rO[.2!kan2b_^OA)'KJ_DuIR3Fp!e0%IMFK#!$,]d1O!hc2;PD]b9
%lmRu:%3J*J`Q<Km*GGP-%Ns.G.Ad;JRTlI7^i"di(i+7QCk9YI;VChmV*#MrT0c(nmKdXc8mb3kH.k>LZ#3_,9V4F>#"U"icj_A=
%`'K+q99BfR71LJdT>Y0n$/Kp7'u-<M>O'!=;C5X&U%BMe7.V`T<dbN7bgUSGFcofo/6cFB$&MD=d3^$`n-lF_`kk\qKck"/7t_Z`
%HuI1I.kF^K`RI;U_Srd8c9QkNV9FiG:rn=5MmlmN;(MA5fHkL'46.3Ek)jIJY+?!,p83eKoGammN?UIsIML.)'#l\Ea&N];@%S#C
%0%'D%78?;t[J+Z_M3.pnR0KUP!fYT;L<8q3L'EW(`5e\'mR4Sk\k`V"jF)OA8oC'GjA9+VeT%:^_<YBTpecIlg:V.Z;?OB8>Y?tH
%h@^4tof<*W"h:4/&skH[<YD*4Z+JN;KT']a_V$1k'5rbf.6410+X>W4AmZB_J/Jp\j<0!T>)]]jJ<5Q1X^`+89[X*'6MHfhD:9sL
%"]'WY5pI`2WE;:CE4\ND(0E.3BTY$u8j,#klh.0W?XanU;=ZFW1*P@\?jm!:ha'4Zpj[Ps#JV0%VH0rf,_suB=JeUVjpdFZic(DA
%rulCC"^6b!fL3)["@K0/?`$7F'Q??WV8Y;7cY7t3@Q9qL,_`+%TUfWC&K%fa@AHq,Oh=MO[6W#I+gL9=.ES9B5mK'Z>l%&PE,>V_
%`i%Kb:"$1]"eEeN*P)VN2=@\e(rgGd"rU1fHr:5<3bc5PeCJrJRk9=toYe(Zer/8ec?_!O7cJZJ*lj[%gcNJkB"BYr`@.TVR^of<
%-$r4TYf,9AM*i-LaB;R+FMbZ/nnh!,o2:1g!o-6KTF#VP:`,XhSJsDQa1qst!Cg`7I\CBSNO>;i<o@YoD^@OY/fD#($&'^2*CrB"
%-")Kp8]KOQP"K9)b@Pin4;D$oI>_Eg6Y`/-RO6Uf=55PH1)56bMt0LYFbeN$$JLI"mi]J]KDa4",*a&[nEG$If'5M2fb2a9=c-',
%oS!2OGY9ZsIE`i%A!N(,k::hG6HQ^uE8.[*SQ9BH8if3UjndP-.!oF@>]/3!J0dM41X6d>L6EJ=61Wbe:tE][Kt(\r/@Cos+#P?A
%a1W4p(e<Y#j^TX5]FuhBPn5DNgf^m9gIjgC&Km(ai8I_gkU@^tG!Ok,q[4\J*l`0*dNg^Pk=/t.dL8uj)p?E9'F]k2d'GutC,$WH
%Jg.1\r(O@oLJ:^oBtKs^"]ACt,<)M6C1j[K'A*\nKu(8S'4&+"*]8gH859AFUu&gdM&9.;KF1m6Y$g#M(c?@0+iH'uhc]gVNIVif
%1:";STp;]rLcH$RY)2oVn763DB#A,7Or]4VE.eHL$u[+o?FVt#8HGGkOZQ4a2jg<so*=,#;eQQ<&Qs`23HX94@bip3V^pL3$QoTH
%\W\-nG<%rG+;*F=V#X4F!+V"/_)^5l$WN<JlC<Z%geXr&)p+OW-5AHdE`e"EU=3j[7!Os.CJ`([^cJWGQ;(R,SRfkk"$H(eYr7.s
%<MHjBFg@)FA-@pl+hP)t0.%6Z=DFbfgId$M5QRkQN9!,)&OOGa1M(!uP,YKHp98:/49MYAOMhl@h^["in.I!X=HR'\o:[dLc1)r%
%>R25nVLJq+AROANNsPlneEAQf@MX-`!1mk^VGkpI>):W3m02M!:b"T?M>EC:<9fY@^?HmlPb.a:l"@CX8^a!Y%9caQ<OCl"U4XVd
%C@4,W;J!g%iR!Q\44&d3gfftVSA&W3+t]i!/I6;%O?--[089k-NL9Z#n7r\F&Q0B\0c#]-(D9=+kVW1W2eG<O+?o,";uA%5N.Y^`
%P%CWC.O^bEE$/0d(W7m[[up=(]`\uuP-W=<Um,JkYkV>m5pBC@j>KOiW`8,rE22"d1CQ\2kJ_Wt%!ptSTVL14[^Bb5=sF[>R.,PC
%C8?nLA0^.XA0e's)iGX/pf;nV>IeP#B@LGF8:e$YfkKe]@cW\H2U+_ZJJ_d!.lALDi3MFV[KNc"`%$@WLR2t3Q4ceB&[J.,/2M8t
%82dB];0pnr&2_,O!!@/-X=l/J:,'E$?>^.C91,B37/,)Z<4J'`3XH))FFksI,eG;A+\V\$&M-,'F[20lKaoU/1(g74(8)V,%Llo*
%\rd]HWQt_,&VO\E3:?"$B$)8/eSBn&amc7HU1!#sKdj");4RiO#^Ig.bdoZo1.BME?#Q6J+NRHuJ0W#L!]FY\>F76=lR$%9dg,''
%BP.LRL\Y"2D1#-6M?#1nSs*08)^=69;J:b,QC4A)XD2'3oTr\-3c"E)L(M<pbN;Iu08=:.0b,`bk(tjc'+WP>aU#7FdqVT,4:8KR
%NYW(fR_!P1+oW[b<(X+#KL2i)cka8R_J]`3]Q9r<RbNu3#<+jt"(58pX327c8q`e+&MdJF^4gs9hWM^-_)_ehANKp;"+`'#jW.jX
%Lf5TCq&2X4)M?S^8=UL/:I,[^0U>;Z#XFRjf-s<[NVj-SY63p\QOn-\^O]<=FuYX2s-pA\_f.E[P42?r?;_lNE#FbY.$F?qd=/t4
%Ls0,!C/R(pbI)%0q1_Ln^6#KC9/E]\;c:b-dH#R:0Gf;Z5Y+X/$BrNVeXbPf3Z82tI.Zoh1+qT5j9Pc2#!`[^3H)0.;/_@Y(%tWQ
%R$/[36eI\[m#b6)0#%ZEISJQRpWmL;XB%g+Q]?oM;m^sq.7G#iP5WX`'l#!maXMgW<:Zs9ElJBa0e=I"[Cl?VV]Z#+RBnJI0nL7n
%<0*rr&0jLtm98)u[=qYC7_Y.P-/OjU_$oqe/&%hN1T72hQU9'@^n2F%l>^/QITUN02r26VLP18JMsti'@QXc!WBWitGmpQ#agU]m
%_7pd[c]L`i6lRKfH&-AqeK('U4XjT:--.l5TcqV8O<4unF2X(jr-6;]#r_JKGVE$td]E*-GW9j#-M4*X/Q#3sKH)Yn)f0jMU(g/.
%Wml9ZGV"$VN5s(;nobd\]V_UFCF3;2i_+AV'cqfE,B%*bKkG,2R0aO5rKKX%a5]a,R"u-$:c$e(7QbqZ\l8_Z%3EBnaJBubi6e,k
%>u-%W,Kb5=kJ6,:F<n14Eo>pIjZq'g..HdjL0gB)"('LJU.Tr+QsX)q$ND,bK`M)ndGI5An]"M[mijQ.@o%Q/Wcg.q%Ctr'(d(d_
%40ijY<NRt4dHTT6K_^W<1M(rC7#u")0J3b%*MF/FK_6sY,_I\6pWgQ,VUKq2HY3lp,1gGc]e_?t%8D?2]ecT/p:d$chR-+oIk0n,
%Zm,m\8$$p:Q1U>6HIl?"B<7VIW:qG1d#de#`EFHJYnGn*SI)bEjh&D^$2&=K\iX.G:uYU1mVi>%?t:cuG9dsQL3lHG<jCV<<OhH^
%UBj)'V7ORQ-JdU9l)mAs+i91lkg#R<E'>PY1C-@boj3IB$mO?4*AH=2$b9_hN0s%[?pn]s@CkK@+C1Wqh$kVsVE5CEe2,qNj2f\T
%)!m2q-)Gr^F_:^F#qCc16#n&TFV_-l?8<_:'/;f2L$an;TsUl+h&5,Ro56^%]7X'2L^W%0JL0Q^n*06_OUR$Xh-E2s,ZV5"h&1h"
%-T@a2K30OV$Jh6Rk^eYskIWP2\gR1+ORLK1s,$5njgtW;&o0KWh]:(-O:F+E]*$uT-^@o0])t`kOCK'?4$t&@o'd+amJo$hA:.!n
%7fau6g$\>sVIGV>mJtU%i7(ACB)iF\pudJ$cEP6RGAF%e1F+Q&PIAio)-gm;!'7!h1ZX<JTr5LY"bNMth*KI=s'<roLGE]*a;;9H
%U3_rmE6*38a?0_C;qUMomR@i$_KNs<&TDTGg$TD`74)aq]/*t8-Kh8Sh'(iOGl&*/*AHA],*_MU&9KA>T'hWcEN$>ee(klScN@Lb
%d+oR0X?AA5]/.YaFf)(K1JWj1.bu*j?JGWM\iWOtW&F9iGDnOd5@M/kFcl94m)97q1[i&`h%:!V4C08@4!IRaC-pVALona+8R]4E
%M)>sX3t]r8Y&nl9>D;K??5cJJ:b>kU"g,Jbh=WoZjEAu#J`*mWOX^RZUf1[j1#!_h(qm"eGD<pD&ihDq*G-X<7??*hYf?mu>hSOA
%s!%-pb'%ESNs/Hq`--o0A8uH&[Q@l:83j/Yh-%=_U*$_t!>`h"XmOg0JAoV%k/)9h@$9?1m>bS;_Od[u?%?l-%qT1]1T]48EC+k^
%S5Wd$Tt>rqFA:B9h&2Nqd,#ekh#WL.#S%3t*C7mTSi*7S"!iNWHl'@UOl4&BGLuk:7!AkY#iR9bFE]ucPDE>7]7[7$[,)DN*>Gh6
%D%sQCkWMhcN9TbLHBE3MdbPdMLo.>Q]/,*E%IJi:cHtC@?q*P9_b%_^X:a8/UloFlq!Rns6U?Fp%d+PR.E?g[39LDm[.)lhDi<4I
%q<j2CY.??mO<GcG$pEJgB9IsTL%!:ud(1qF^,r9CEkbVg3uleVgdca9#.aVA1+R`r0RFeG+q*;!JI1c:V`ioXJf2]'Cj3Z,&9l9Y
%ljbspAlKMJ4'Vnl9ar5P>O&!gB$>?EoMqk<\cW%jd4k^K*Gi<Sm"FM]lcmD?jUMKG2a,2e%#(Ts89'EL3L$mML-*ntP5M9jgqd*'
%"n[W.%NuM:Kbo%sdsu?;hT-;B*Q1X]YOm"")"NY&H99T?9f8ZSK@o]h<TrfY63ool0(a;u#atLEh@:49(hd?eKAAh&cpDV?Rmrfc
%H?MC./L&07P1t['H8"?&CY/?n4<qVNJ.?cDRW)bS4'9It,cj[_0JeD_\X+R9E?C=^@1NN3,R5KX'7ik@n!s<=e_ifH3kQYZjZ8,b
%+eJd:<L#6_%u7sqVZ^#kK3(n-qN"bEkJIhp^)#'eJg=cYH=f7ulktNjQ.aHGP=2HbB`'!pOl\,=Aimjf%=%7k"&Hc*`--h+Kant6
%gVMb5GZY\i44KB!AQ'b\KC'Qs'9\*gFp*:ALl(]V6(eK/6XDk'.C!>n[UV&!l$;Yi@F6.fg>S5e@TAi`R&:d1_63+b@p,0\@^]cT
%>n"G[[M+=+jhqf`9jHKlNZO`U87uK#E$;YGCmhei8o/,WhFeMg42W0TK:[r;6;*f)%jPCB4@m)so%N%(+b\X)f?TKG^r6V`*@s;`
%m/C0UA;EV4gk=;)0NfRm[!&f-@,b0i4+QVYM/X,34&`H_/$5?c_F!O6>!!B99qiWTg-JEi8#<VG,kog^[!%N:Yel4I%]0C18Lgh_
%,[+TN[!%3!7pS3ZH/M>@0GI\P_^LtY'3[KMD]34b>!#96&==oK*O0B7f4.uG"%Kb!5Y!OSUg=COb\@Ai$01iHeW.3RKijVj%X&!`
%N5i5JL2b[Kl=oVo0F3VHT+V5B'!Li]4uLqK9"n>/m3!!#SAK#RL^T^=K[l)9,pQ2o[A28>r2@JIB8BE#-DYhKWMHm8;EI1JA]SUW
%C'V!t%Mr#)U7YlI<DknN)SK;GUirUJM&0&Oh"Y%M=%VfC'lZl/+glqS/?[u!C56<#$fp)A;EI6lpb^s:K@HC;;q`*^,-INbc4GNV
%KF+EE+bFk/4ej%3hm?,C)=>eu7Te`+N-5n61D`MB8k=VA)!ra9I$ubC_5qOVdZi5,AC.\2o$<EF%Ut0c/#AeVlK,46Fp<',bVgA:
%g)1)C@d#9.E;a<m?KJQS1I-X6F4qMm-^MDW7`Op-Vi5\WI[<ffiC9&T\/\'%9VJgLhFZR8V6i%3k_s+?Bnu"K5&CM"G1b:c.">`)
%4,AS7Z-_2j+%3#3n7;'?.M6RC&Zm(l)I?HJ4%P&#][5@EPaMQ=&[*4hReYlrf+&g2(&XHNNn5MZkn!]E@@8RX1s0Th[KrB^U:%l=
%FIn=Q8o$p38Kb`6CM,tjBb+qF+RNXeosAo%3p]H*GW7B*3?klK;C?R?P1gLST?5"r;EGk5bR^_LG4_;eC:')V).rG/4!D!6b.]#8
%@Ni.sp^5L0Lt'_G6BbJQmI4%G[O\G&nD]QqGg'oXY?(K]V6pD_JN2ZsZ(2F4fJ"JW1TeN&<an.b(uX[[M="\hpa3L*YoW1o89J$j
%mGRFHK!I^Z8%o;HjGeu_=Gt"+YX3/]=6)N8-H((L"Hied&DN>.,%qu;9A]GE)B9u23uD4g5^A(9%dk="79*eYf&i09Hphe+8q(*\
%/$U,M;)'3>Wt=#g(=-a6X!b?.pPJn6_J=q$F7N=1@QX-O,k*@FM!Z<#O*+m>1PA]Ur(^d[&ZR1S0O_Db+mco.RI(Dmi@aiJG)"q&
%YhV^lG2`WL@\#:/Ohu\7HGjVi-sSNg(M5b?"mH7Ab]\X]:RW5+d4sQkZt-p&b]]'Z*N([I8_H5^Im[g0bOPoIJ25jkfE$,&@qIg^
%,T*X$'b^^;a3Q?]G+<s.j,TMo8F[;(e2,jafU_>?`,(5"1%1R\1YWL--tln`+Fta_69`'pZQ0X6L`]`dm>1@&o%(Zo7jK<nI`Q=q
%)?t5=(2>q^lB%"=E80>5U<j_e\a<Mff%HYK%Z=W^)+W2"j<ij`'P]^l,hGuLnY[QK;VMf+7t=*pg5[Rl_V$fB[Y)(9"eIL(+o>N3
%4q"\;MhL0Z2Is86Cl#5Fb]Z<)dWRd[*M1*=)\^sLSNW/)Yn5[[V0l$`m>sLbRps<Oa(dH"5D@^LE8,KT(LfH]9lV(@b]ZBo-,sV,
%[\L1=;Gu,H:TS*s*XT.nDjl@[Nt]bgWR^pUT%ZplTIc^4C-0ks0WD*LgQA:^C"4GC4/-m4(2:T),3UR.A!PhEkcm0-+h%OZ$>XH-
%\XcQ6V#e9ce1Yd-8)tK<ck4?W\'P`#*O3'*lU#M;K8Qe4oQJT>/eq<jCbh.b0tFEjgQB@/[XV_p,7tO8A4Q98A@7MP3i0;1nP3:\
%@2`_DO^0`:\)Uc*;nj@%[;klk/YM`ZlTK[k6%,L"G54N)PlLL,IrjNHl11\MSq6sY\"@#5I[PP)P<8I(RECT:^<`E-pm2LUq"u`D
%Xd+At^4-+MF`$H>cd.&Dl/,NIo7mjGeYaL<d&atWl,+%gJ,"RtIJO_/2+!qEqW;GgmJl63rE#<`[.:94Y5\%m263)>GMdf@i<R[A
%Ht!C/_OLB\fN,(HImK4K_gAF(^O@nP/-"uL0:%[@mm6V;^2S46oX,^`:Qjag!Y*[4%H)ls%;B3X0H;4l5`[F6>^c5.Q7pXHNe/!+
%qSKE`+5%M$_bY_Zjn1!RJ'q!TRqYeNht.[2K5Pplau?ter+gKS/O_9Vq7Eed]T0u^@bs^3F&n1/IAPl9N?]nrqhR\4DoQf+ItJC6
%(T!$uMm0YZ@S=n*[=T=eC\1u1>lY=2DKGZ^+\>OV0:+;9'ErMX=`Dpc$aoLr\8b!/%AUm/2eHOD%,qk_Dl@^TL*4RG]c8Uk2s8X9
%Z+9sUWK@a7p;fSLc`$ENn?.1uQcd.PO&<H:$n03.iU[V(;EUA/3mf-mD^6<P9J=0J@p1=/>l,A'lc0jI7XDTR(\`!f-)pM3qDT1M
%5GlTT4sopeD7&#DH"lQ_<:2"MJM6K19U:_o*3Hq6.XOAD]S_4'^An)ljiO!uQRdre!EO*Lq6qFWVRc#GE)a)^W:m9Jc3=-F57TT-
%q@b'&b(">G+cVL,'j[oUs'j0TZi'KO+8gmDObZdU=X/BO:Z@BmAMfKsCTN><j\Ag;,boGW@$0'=qgZKVJ`ZX'Dl&7:D*(=V>AII)
%S(\'+@N)_X,'j%bqs]5Qb7'][J,d+A10Odtkt8i2N;_WTCYg`XqUXWd;$?>(LT+?DXt#1sF;:oB*?$X<qL<fIQB,&O'EC&dYjEXg
%d'a`H@'/f?n(So/i8;S)hPrqlM.LE?q8]]=r@`Xa^W9,tpqb#DcS3$sroUC;5/2Dh`]oNdnlu+XPLW2'Huj:qs7'7k_!CU\hVXj:
%UUcqTqs0I11T.G&04%tWa`YD%55r%7S,ON"?T13a4l\bUPS_KW%.4eHLOM@rGcsoV5!/fDp!&fcTMtYgrds_!+*Z5*3M$!/N.1\G
%^Us",N%Y%@].R?:pKqR22of"g043j;4MKN-ie&;ciXYe]jn[05)1<Ge]rPJbgH%Qi^V"hTUJ(I=Xuc1=^O?"D`S8ulhjV0hFT-;M
%J+1f,kC)m7l,;__$$VHIG:2k)rd9.fhs\lD:Zq)ban*-5kaV=uhqd,!la(g(0BO\\o&-[^A+/j/jnguDSDKe6GW&'u$m4?f'YV9&
%bN/$XcH39XlrItN-QTe2qYK@Pk&d(2*-C?aTDRC=`N70"4Zu`sD!QY_XTs%l?Y=l#CXND/Ieu7oA;\+8H@L?hp6Y*/\$++RB,gr=
%F,kdoI91LQQeV/Q\0#m<*SEL%K5Or-4hEng\[nB[Qi>AQn!E3=Dr+g64272m>or5\BL^kW!?Zf7p1j9BEg>CkHdHeu>HW"i<GpPk
%c7`80k%Mb_G.G`^_bG$gC-B(rgoKb)r!=13?_+r9mW-KVDRmqBGIcff\(p(W(o7.&h;t6]-ZGQEf82Z*ccoZrLNCp)55Xm:ip52D
%0<]h.6<E:4kOn9M*;hUq"Rg57IWkGF\Rn(PYVLupn#BaP?+f'<;Z4b-gFfUY^RVrdp[7t?np#NMp=jJVZ.r[23MTpKn;s*fLH.lS
%b8m0Oo<u]rCTjd?YMPi+gp.k/GcuV5^)c8eT97jtmeugZPLHkA:JWV*3+U$imqTC=^r/a/ip#"4eb-]VoQpC_Cik.*4Kjh:gnGF1
%<B&dJ4ZiW%rO.,qLgJgR2E*\qro3#8q:4T=S!2#U]itHXcMH/:n)0i;q=a+Els:_!Ir_1uNdN9nRMfW-5;NN*Is-(G&$pSemiDfl
%D_gJP.!B<7I!Kj`H1PL:L[1"^pDI?(<dg\)lTlFPZO`Y@5=4i'iV6^!"SR2A*SR(IISl,Rdf;04[3+OIQ61:[=(WFh5AYCkN;DK,
%g0jorc09l8ms3R:cVYe.Y0W6.'-t?5$,?4IilUlhc0I<$2fg>.T[(Q8o:%C/cF;XAQc&>I0>[DQo\N*#luGGmH?T8c)+O0>Xe#8,
%m:jkdUOL1Fjg/LnCj)PtkfpiRct6"oSgX@3:5UsRdn41tIW]dQI!p235;U0":Hac\*6fnu^-6gfrdN.5/J%:CY5)&&Z<j,0SBM9k
%+4SPO`l&ij9Qn]*HXQgBB_LT=p"S)"(K]M?3-"]^)Y18bfV6%P<-^X'1;Go85)]".D6?3$+d_g-kcF5b`/G1=J+'%&j0:N;!GB6o
%RYH7J(sO&ll9MEI^RJ^n*m1@PO`S4cp>\5`+1;&o]:f_ri&Pb,Jo1<8_Z_s-p0tL"(Jj$-S[C9I5AT>l)9_;Q:<Y_h\W=2Q8LM6@
%&Is3fqW.5<m,I?;MmLlXrg*5Lm&GQ-cA31k^OPQ6g$reJg%i7h(FQ+nDpBtRrd+//+HN%)<W9=.qkG&-na8F!+6V9>jh\W2,("f#
%c#?#jN*:^PP+.pQN^&?c_OR#S'T;fJMIum7g[+:9I[`22qnCVD'U'R`hT$')a2+^Y3LtHdkp\D$WiiP^bfQ[?A%S2Q),kg%2<Psj
%g0GehD3ii$#7OA)3PJjGDHC,S357R;R?9jcH?+$%f;gp2^k5.$[`2q'cc\>)61WO.\oE/<44)f33I1Gkr9!pt3KqoV\uT/.>l8^7
%o8F!uLX+/douuGfT%m>4?Hl0;I!'mX0e_)M@X"BR]XjW>jM1fprg(Kgd@qRB]W5qpYi:Dn.kgpmh71(Pj6(W4ZT,KXIktkHrqKT&
%n-"9pT!_3<b$J?":7kE2b+-`sMYlC`1JqaY_nL&J-VYJ'qNOlTjoB]Z\L>(6/jJT*PW:hj:l_+LcUF71=rp3eb*+eUBC1ZVcUBjB
%9"??k3j[nA/@d1D`G+ohF&C0M+;\UT'&!02Burfse*Fl@R5kt>qTs:\B$J</DtU#sMfSZYE`(t@k"p7"6Ukc"0rJX7>i%h`luF]h
%)a&%>L=\0oLPNBZ3"th\?a7d-GZ+<jTDmTST+Ol\gB[E`*THlPa5_@l83]lZ*;d!<Is.homtW[)kdC<O[CGG.)+1Xl[7.8NHL2jI
%g7POSA22[OF)@Q"g)1[jU=C$]G!E+;(i,&7[V3';X$%3"2N.oi]7]nP^(&2C+o&Ggfn0V30&,UhgF+Z.BZ:T7gM#80UGW^R<LAo.
%.%U?P<^Pg(fj.`k^CQp3X9-.!s6&(SQPV#6J%L?%a*h18kEdjJ?CbG@kGfM56G5ND\bU%W4N673>tsu*_ErPB(2,+?GNYX':s>F9
%>/3sXe>jr&L2q_9k%a5G0462T!JYW]dIa)&.(`?'/+\U7<[Qo-DH?T55KSE#s8,CeLXkG7\ErVfEZ`5dI5?kS(/a%/E7*K9IdSb]
%nUjEmT@]Xk@iGA2:WL1frd..rp:dDOl]==rn7X`q+'3C;?G4PVn1WX:do4"ZTC#Mg4>4B081cO5:\;Pp*V7/Y2p;\cjU^*T8u"TF
%*Lb80qQMQ:C"*Bsht+(ST;+T;6d\m=E]VK(o_8?$4LmYjH2ZmlB$O8'Y\3#AJM03D6h1cj&bhgMV:':]oNU=i9DnOu]c>"@G5sb8
%DejWTruON)pITC6/FhWb*EqI;O"sR*r-+"tmQ1>?lOa_:gO(d*P$DJ1Hg1slF2uiEo3Gh>9?d.eG3KF9o_d7?p[?D!?X79-k&S`c
%>PlCbXR<V<kNeO$n"Ze)eZ5=g/hX;U]";_okMO%gaU^Kq"g$pHhG&L(1TOr=.XusH.c3VUcJ/-a4kG,ZIa[NTIR8h<llI`"ZGf2>
%GfUrhXBt+"(D#3Y+^7'>@neo"KKX]AR99*RI"-QfG54_<'$ib`#P%Wa=.fD8IW]XRo?$[Yb>5:D:G0,r[28kr/g,@MGVdYuo&"'U
%Rg.4,lk"&Io]bFdcJQ:LfuD>sg0Wm_*P6#L4/X=_"glBHF&P8dMoH-)CBqE:ZSHjD^'Cu(+84FanF#\sBf8Sd+0BQk8*L%1<h8s^
%*fenGTBu6Zd]`Vu5Mp'gp0Jd+J$M%?(<=VXGZc">MrSAg]I])0`US!3YmWLK3*t)B6iY?hGhM*rki-itO5jeqqW$i$q<X(Cl"e!%
%*4,t8??c1XpIIESMV9G52Y#u`UKqW3_ZlTt!t_\e:$b@lp)RsY%Ud;jK2"Hck)9%lFo-Y@5$=\<Mt<Dk:X6HGgR#ftNtpAh3:=gL
%m/,c:'Te^El`%Q^([lVO?I$PrYIOgfl"M:ph.'b-oVD_>BiiLMGCridp$7g.=$J8^2,C>(Ig52f;O,!U-GdNbZd0bOI(;t,NY7cZ
%\\"[qV[kT9<r(*kDi_T`?<==:]fWjBDR_lW3E%4Gg7J=rIJc7b!Ii/W50_9d^<OkHL-Z;^;O/9U+l(G'C]<G`(&IcC?KP(4E*"FD
%1D=ABB9!;+6ORX8-g'&X4#EX[+'3sPkA6c_c<njhHdq5%n&JPGQCjNd,;+G("1lr$]H<ns!e-(gI9?CaH[F4)Zou2!0c!!n^<Om]
%a&r6V#NEf!I9\^N6b>@HQ)=3'mq8O/SGKO\[)SjY\0Bh$]K?#^p"=i05J'%K@rP27hc8Q/B/gKp'YquTq_qlPhOOL'X,))sn?+hF
%lM;cU_St\>kAs68jEGfkX>[g<3.nDQc>QIe3SR$k%QsKpo8?c#20sS@GLTPmqbJ)CB[1&UlMBej*,C7hmB.fmfM$1ck%KsZh=]c!
%U*VC!8R"9`J0dA$6nMe<[k>6T!)&c%_0AeXUtn%\mK4F#=H9#g]taR7rC%dn_fQ72Z9n<aik9l6gtJ)liS#ni[J)3B=raA[4;gpE
%iG22$p,q/H:)B4,Y<DBhceCL9PO-g=,2[:=s8O*bQC=T2krRjCnl.gsGPmETS:gFQhqW?+=FBXggus[RV1![JGI`!6@CaW7\%1TY
%\(p->j!qFkk*FcWEgs]62E0Y;oCQsB1N3VcbM59dk%7<:_-Q2he>hUk\$(Zt\]ueY\`Gl]T@^XCUondbbS.M5c0N;gV;$bUh5p!b
%3*3]k\@R"^rUn:&oAch-kFNTu`/I@8!m%VC]BRN@q?*FB4*Y"e"Wqg%PrM$6M&gd-kpW`j!Q`oQ2t/"1E^E4mYMWWUSGr$"8jla!
%:JT5SIf@r%hWf;D5@;WS'C'YN>'Db?QOd[Mc0WcMCnj4)i>pu3RQD*Wn^RB*HT;UKSdn5j]d(nao;AG>SigAOnkhTc\g3pBS6Nl&
%(V<jiZPf^U5!><Fk)>ng<Ngjt4U[,)6Kudfh0+M^4#d,SY51(%PN:QslW5I3B60tfr:k;`rDh[@bti[?kL+ath'_X[N\_6%c7\\F
%B"Ea&cgL-*E&6"cao@mGGs<fC;kMiFJ#K/eJB@Cbk0mu+Zk6WgM_>&"0gC=`i.W5(#AMF7QGI#Jlql<jMkTlQXFhCWLskg?gl^0;
%ZEsPT3:tDGrop%nY:e/he\V54Mc$hu7?;*r/N2"/J&p6QLC`)e\gMFoStE8\T(8J"n/pHl>+FE`FD>D-j?LlA0L+oC^Wbr[[^c=8
%%t;:jYRMRae-EJ7[t5^14YuAUg%AM=FRiZ!qf2B1>WfP\^Noe?C_lET6(O&Qk;Qb>S8Z)-/r/I./%"DWglHa5pVV!r4RDt(3+#JK
%rOI1!)t7l+mf/aQh4BU]kWrOr#5?[3GoS,[3:l[=?ZD/Xib;8/5@o)m4)n1/1>'6Y^+I,g$S]t\Co(.,s4R%B._0m1q8YLZ<usI,
%NO\^Qf3e*PhqaI7FbncMbt2ej"q8Y&<T%b5Fr+63J%_soqlM3:QGN;p+[-s^,&W`okhn0NSim7=N+Xs78pcV^nT\B;STO%Qhl%T>
%Qb39J5pl#.UclhrFo]@A-^S4r:]b7nDi]WDr?MFj#;A)`Y7f&!G4^EoVhYpCURL]!G1",Fe5,=:`EN0$e_0Vfc`\G4R<+0M@Cque
%lG#@Tmc*TjkP?8j:[`&,q%6EG`V&EgQ`"12U`)6cX(JajZbopXIlY_aAens$8?;*%Vo^*pih.RlDq?A'mp=7I;V8lEIm9uGmu=]$
%f7GQ6O'ShHRASeDdYmF$e*JdMmF-uOjbEA"fB\T/q)BghO7WVM,XM9n:]JZrhu;m2AL0^</3rjpk?"!Wk#R9moM"AeBA]=g%fbY.
%%mGJIg>P8FrUZNIXtK:Sj=.k?C%^KPe]f1"Cf[0Wpd)7_k,/_SG[LHR=abl$.bR&Dr/ADhTDYVeb-IX?VHNk?oq28f=hW%oroU6l
%5BrK'di>bJQrRd/HfVfcY22umg*>?s2iq[GZU[b3DXC<.0ogrnGLYTn;moNacD2[$_eRi(F/HBL5G8G;5\Su9O.dLU*+HD.C+gNU
%_*Hk,DVs``A*]oZr50&*^VfQ_Iu[lG*I[SS9?d1Seb@ZC0@-t9\$GhfJ(>SsNG5J"2+K:+[^4&a3q?#*4.QcTn)HO<GuT0\7f\$g
%<rSh#cuhO%5tXZ(3km`$'CcE:E.#mOrEkrMr-ZZ#_4+[8-K#E3Bl.,6,@]_("<X)8`?2\D,lAh>jE((03>p/RF,c.1RkipDRs#p@
%6#>k;2f31s_E-]&bD<WM`4O$DeZ`0bDRX>uq\EXi8cGt:5FgndXkA8EoF8K]nA0OZK<B&.LYTb=1!uUfa2nb0$*-&HL'Ma%mepp2
%9PGcBI\Rp*aQ5u4[VB=+1e_UCd!8;ZDIrHZa<NT[FWd0t<4i.?IB18GXcL?j/Yhoh$hf)KrPK0F/j&6cQQLYf=!.BLp!%u&Q;M:C
%VMZmR5jFBBM^c,LEt:<MF_)nLAFc)GCZA9-oCdkL+->sm9m:.&[[d\nTe<9aRld%)&A.850WF*D^:SMj`K<2;c&o9upfS)4^apaT
%A5hDaZh]Z-F$c7,ZqJ,?fqDup.;P]kNVU$N-t]#ifA8J-lq]QdGe3"*/c5-]]K]]N*i2Ug@fH(/gE;-<on8:ag.\G7gnY+Ks$KgB
%VWeL'?2jMZb:R6FkZ[>fW=I.U#q=t[a8BO^nmk42A3IB/#tJ8OZ]f#Qs!'`YlgZmZh)BU6R&i&qc`>ToUZ@Bkr*'Ru)mPLrp+Rh;
%meHF@^\<!HHUD+D_-mk0E7BWT2"9A%`W(tWbEG"KT@^Qjk*+T(rq[cR7m<SLI%Ka';*JcYDNQQT`?sTN)g?s(.17I^$a#a[5L5$r
%s)9eT5+'*iBnC)Q_&hq53'$E32WgR\TEU7-PU7<B#Z&VNGH!I[LL#<F_scSe.-o>^S"Z0Y:np5/p]d4hZWTF/2IKb]2Ib5"5=JY<
%;Vlf'Dm>qgI#LP&3oZ:r4B!AE:(H'eEBLpGJ]fL7#;[[/E1aUVe)hB_3jcB)_XeVV]]u)6EtjV[Iu%7fk=q4C9?N\Iai;LB_0X=Y
%b9Loql-C*9VpAcMHknaZ2ug>0YBF1m!7uDi_e^\Nr"m*AGkQJob\&EF4g2=)#0pn5s3%nI>&lF5Gl>gpN>g`ZBNM+ArP$$o\U+#H
%jR(Xc%IY*_`+(Km^YO3ZfSNbCkp0Ed1U)*gPi^?U@nJttb?J=Kng_sI3d9;%>V8i[Oit7!>J'`B&W0'&o?\cC`t.3dBbQ3ZW,YeY
%q(RUJ:mP*m<Ya^AceH_m9Vfp[Xbf/ro1Erl2!n]*AYmChPK,"S:YtDol1,oFbh\Oo0JB0O=BkK)<[G"no!%Z3Y/[6n**JZ2)lM\]
%I@%J49\4Elj1`]LH61\Nb#<rmSSYq9Fga_?ZYiN@]rdl[XMSsf50JTHUZ:EgXPGj@5%^XYD$fPiMmX%;&Y\`&40AOI3l>CdpoI8$
%Cdl&;_RCT4Hu"Pb:Bh.[YEcbT_V1](a54m5FE\cZZLH$mJ:6D"]qF\p!++_>-LrKa$W*/hm;f:`J\:=:P2e[.n(mK(0CH&=np`^U
%adRrfHa7IV<OTpe*&h$d2/:c<hMa=TTCX!CnbNibPrVPZDf$tn*VmbO4IJt6B"e&g1QrVTPO5l2HfFhqe'le?Dn`foku2N#DS=Nq
%GeeM4='@L4]4CI*QoZ3Hpd75.nmRt_OfWM"q5BKOlS;5;ff,*6#Y_J6D?fYYNRj`:6OrduWL^/3./I8arge'SHGDgpbR$(I-B516
%UO2IfcKL#C0t:`5iOBA8\Qe.4FtU7H`2l-d^:LnKq%18&s6&(SQY4pRc;&;r/bZqT/mhqdRh2(D$G@bF^-&s:3P3$'lKnE>G;n+n
%O1uF5@")lrjfP!OcU9D)O2!_;\WHA(r:?kDmd#dP_:Hnar0Qa@QiHgHB5PYk^CWZHf/J=`21lCiLFs1$rQG*0Qg4"PEua6W5L_XX
%:fPEkq^'d^\B2S^fD"aZ:D_pJi`fZ8Mi2NDpZ,Q>`GFgDN153QEJn`i*ft<fDt,D;j1XtZ^;]`6q\GClpomMCZ#;APhm[k1pMTIP
%DL&G\(>IhQS@W#JbdZ6C?g1e%>C;@7a2Yj4eEu&#kdpZd(=R*Wib0;RcaR$TFR?Z#cc,20MZ_k2](g*Nq58<d[_6H2CiV,QIdQ[\
%f@$uBMIWRkMeDQ'4H"3CB/)$1`Po1Yd%3[DP3EQ(#KtckQe/8+DZp6h@b*RB:SF&kA`RhN5G)07/GB7m:'4K?T!c"H`IlV\2:c/N
%R'C;%pV^p7j.+3A7r>)h[]*uklKYG[,4)m12L\ufes@cUO3.[M\tSZjE5#LE[J]SmjCGLc6"KVXBtG)@S8g`2Lst@)&mHA4BTk97
%eZE\YhG$(oji-ZKn8_ZO\5%P26rb;`Mb-[ZI*/q<nRXC3)Hie[/5rip/;F'-D'4a@mQ-l(VQC<+iL"IJW1JL[_nB\B+:;8KW=F7r
%kQG[J,0)_/9hIk2%cf(>4RRhan4i7;fX`^!=k5DlT(+)5K.>L.?IuP.cd1%8a_F2`#l[$J7:G>0:SOr%X=lnS+HK`ZTR#Ce=_I6Z
%%pcW#TQ`@7_)l?RO1]1Y#[;s%e`+TmaUhZlI(@LF.EEdTY3kj.dDVdFnm+2?ha<u7*.>@-:\NI+m]ro5@si_e*TX`\R(S/336:^9
%`THK;K4Dj-lF63(6H.[#laD,]O"AM0/IuJE+Ihu*prhj.Hp"08Ci\!.1Y-$McM9SG%L6g82\TgZCih4ohO+cgbJYhmH+n?(jSeZU
%"m@D)2-8<rfd*m^MV1/B;#Qr3ZeT#0jpO[rVAH_QmB_i:X;;c#:WTiT5_G(-[_?LZI-NO<%UQejVTfe%kl/\>ZZo!Gi_id<m3($8
%(0PV\f`:j7Q56.3j?UjKX@oQTNU'd$57K0Ce"W%ak/pmffiFA;em(\QA[WpSF60)hZ'?o22-4VqB7c*ecc`8qTW5'9W[h*"eHZWU
%L<g6NU5F3]bro?6;*fB-b.E3eO1SI.O]@_]@I'CZ/@?gIqBYLqWd+YFQTjcIB[qp_WlsY+@mX(AQ;q!#D#df<[(jk.H=KNQ1fr70
%3)2IQ=`;fJJDl*q1!nXS\WU^1Cg,b]<d.'ckol.J.Q'ng.'Ls/<W@NjWB)3KF1Br6c2POB/4#,%D(h$.hf!&bk%k>t/:iX(0X1a-
%ISYM$^F:iK2?bGEQG>m_<&fEDK\IK6E8BOW-K=Fp'3h")df@3,0%$![5eJ[$iG)UADMh*2II6Rkf1s3rnSuDYWVa)3$*tp/iAZH:
%Qk$mcYXEi1YXG!#Q5G\CK81a^M%?u&`!:+YnU[hR95p^^5i?O:9/)Y[E="^_9AKQ\a0X[H^kD.Y'5!(p4@E^(Cl1pE<*1=X94[%U
%F.RB40\,C@'W#JDh\X=6Ynm8Yrp>o0V[g.)/D)hj&Q`"geWC;79ks):7PJ,ZG"nRK3La&]g4'!l(L+WFKauK(`P(VW/AkbY;H&Os
%(+)f*lC"'g#!WmIkU:eH2)8%qaqSu!M\$iMR,XDMLa2gZ7Xaii`=3XeV^?3b'</Lp@rbR"A:q=QYQ_[BZ$ok_-bdMdEbeFp=PNDH
%%bHt;;rQrhMV)K%[o6Ws]MQ>kEQt7]cMm@,4m/1BV['r?c;tZi'T)>Xlt<@V0sCb8++/Dg2E,\Ik'GS]\V7+T<gpkmns+ZfIm1Z+
%gYmWL^/1pYWTRCr]<&)lIm.J>_JakT_raKIT7(%ha"po=JRb2)l-Wi:?X%qfpH(_]\\R2IU@#m\?iF84ppjJ=jlJkET+Jr`o#<9L
%&h*8d2)7\Z,sj(eC\g<V\FI2ocfC!BS/3r1-D,HigB?[-a<N+l(bt%2)^a%#9p9BEDLU*q(![::n#f]PmqbuOY$FuCRnT!MWdUhq
%Iou,+D;;&CO&GHZ*`6c:Q03eSb!%\=bcR/7jQB7dY0!q6&HA6,?bbdCQLB2u1^E$JY1)$81.;dBQT=o5TRTl*VZ?jH;4a@[ok74@
%q7M]emCIjl2T?MLf2Y80XdRgUJ>)18?aY5nWufPZ+56"*q6H`M4':;2b>Qm.0Lh4*2/:kY\d5/R$R]<4M_/``V^f.^NK.Zn8(#6'
%1$eLOJ+J^tT\ZtEM9uskLL-4LN@NrCXgUf=3l/4phN@E&g*i#+bH;tJ(HU0[*E=-U_.Q($'QrIjA[Xhj<?6@p9WL3XCV<c=<9n1R
%TI^Zh6r:T[!GD=?Ki$Qj&;lqr6A]SQ#fU_<Tu7j5(rT6C$e#rMhC,u.Au@qZg;9p6b4lpUn8X(/IMbKCRt<''>mr$jbqYGDi1lB%
%gu+reDG(CL;[?r_]K7/&%3ZFp.>4uMJl9<j/V6kuZ%`jT[:Rt>(:H_0U>$YRM.LH26PAB3QpadIDk'3l8pG=i6CA<^)@Y(u#fUWf
%TnEk0P^]L`oadY6:c<.95qggN%j+/1Ru9A&YMkYY\>-AD@5Cjde)HCNXY:*V\4o7'[lK9(2?ZmEDm:'Gkr&cDkUp'IU@^h@LV%&;
%FiS`ZC(Ot"#2L+a8Yu\hqW\RDpZkcJ^d42cK,JP7#g5&l&c*VBcsR&`]j"tp^;NjZ[Z@-;s/j=_h^Te6:dZYnd47;Kfb-V#Z0P6q
%V5l>8^9kdoY3bYlL/@`h%T-sS=)Me4]5gmRNa93;D/eT_[j?\?C(-plmBCIq%)ohe%&GWE8=Mpom:tZ@5$hejQr@I&2q2tdM1J@d
%3ndd]@r?e\H<&"OQVOSB%^W7SqTZhi2,;3.'2aCGi(6qEPMh:D1FL!P^EIn92j\[.21/<QnJgmU"A^qq::^n>'9flC:=?#la],2p
%n\DDnj>;aV5Aiq),DJMNUt$jt>fp8\-XDS"FK(=lh#FLs1Z'[ePGTq:P7;EAqo)<J.I;T^[+GqbBZVBTFqh@JZY7Bnb/W6\+1?5\
%6@7a?@obbP93Ar%264Bk$k`T";cdT@mqC^gqH>uAqR.=ao)Y^jEO=TUh!sdV_9HXS1XV6/R$bL"J?_9r%<*sB%qOSC2YeR.0^C,F
%$o""7?pk3[j^l)QJCg8P^:h)%"2+;AnGo.r5PW%Qc3RAEMm47/3nsc8%f*=LooZDji_9`TD0g=X+2=OgB:F;>l:n%aGTXD?+7mcl
%nkCLkJ*l^H&,H(ek%[KL?;e>#<:8"FdRu(adnJk0n>dB'l34qK_6;_RLg9GM(]<PccK/C%X-[)Zh^4\:Fs=Dk%Js2MX&.+[j=,;c
%_I3kA1apSWQ3MuXWM;?GH1HP$#e>C7A\.r/UgEi/\C0rY212oXQe9ka)TejKctAQ)/X@3;QfqrY[+$tA1u'6TAYgbA(D%(qFXabK
%2\81mVVj@(2Xac3&RQ@lHMqa(atf9;HR.nm6(PM(]WJbsqX:GYk;@[lAPlAf"iapYIb7&%c2,$V_X_-hZC,ms`DiG2DPJZF%#+$B
%1eqC:>q=6DJUZ/teE:PQOZG(d;AKW59eYrL9?>9:L9*bD5&-Ne:->/6.ShW%>;oYB'!pciUZQ1bU2<VSPoVE[B!h(("ZaRuLHO6]
%,PgGp.A%bVJH-BiX5D97l`X(feau2l9h@Fk1-%&.^JC`8C$W]Zn<f[/'#ikV90BB#f7nNLdsr)WTD=@ids.(&T;jaMrM+C1G59t<
%9Z70$/iNl@?Hl2u;6"Z4VDau5ZtcqO1p_V`XbP_0Kr:bC0bF)UIi*]$-H^2.2VSV[h_:;H&+5o-F_tt8:.O>Tr,e^HRJ;q8)eCGD
%gUU]_"lSh@$-bhk1YgV&4'/F4LPj0gip=UX+#FRGURB=80'bkJ7O0<b6"YF'J@qC?>N'9'MJ?%mSA:F&V)*;8'NNXXU.WkE.N^b%
%JL'>X)[EYq,.F&^GTa375eWP"m8k%SlbdnQRlU:QqU+)naer"NZ,9g[dV+;g_VoJ-o"it"MjnbUW_*?GamIe]pYS*)lFqn'eM;g4
%f2X[B%?I"gK/k.`A\@>0't5Z^,b+'K@+FC<Ic[&!!K677^)J>@BcJTu<^)$m4;T3gK7&MCh:^ZTmHo`B&2t<>oVTm:7'&_HIW2%T
%Olk%mIWZiX^b.GA]!>A$0(':J*YP1+mtFpui#4Zg4tg)D24sCP/`5iu1h\-TiQRsrg-)sgVIBs6]*E('hgiuD>f68Xm07PEmF35$
%n4E?Q,-JD[0V?gnGAn#Mr0fND];H\9BJ.U0AZQq$0@S7IZKK3b/G@>U%4*,jDb"Z[n[%qlJZsNh[VVi^GqkTEP#G3<`:o#FBj@_h
%BXCYAArfWYNNHZLjl<kL365#sjK4ln&Tor\KI]b+TtE,1U,?f0[i.^O/WP4f.dKVF32U%9rSfT-7Fs34;8a#d27CbKjdI=cM.J#n
%/Ffn/oFh3p=)FpQnT66=WRsntjQXhU6`@juL"5BQX\Du'SQP[4aS7TU>r!;Y'$#\V2f&&]>1))>mc9uW5mC8uG[aTM.\))*eB!1p
%0B/j\Y>mTI54-$lZS7_5$JfIl%97XVh0!`ol5tb3C*Ik6heXqcJ&>)h5IbWTe?u](3%[KSWljGSQrNC3\&M5c!A(1)I#)6kY&EGP
%HX6s&8JYhVkoMfH]N0(_g'E9c$L=nJ3^nk`(tq$a4S6'W?B&5i#dnF5i/6n:c>I=]<;eVe&!lW`q0:\6V"iK[Z0[I@c,2Z.QY)mi
%9U!Kb)_/[$(e:Ge9L"uX1W;393-J>O=W.as:cKH@?9T3RmV]pqj^rHWH+5'IFKYLZT$g`+%M%(5+Rc0[XJ'HTctjQD;<7!+PrJZI
%4FrESTD,*cacD/QSgI:,A9VC^FEa1hPK4A=%9n8)@\kH=,Ok#7Q,^*U8)UNiJ]F`hg6*\"=/F>YCM_9.fN>+p0KB1F!Vb0jK6qAU
%)")7aCO[S=[j=CLaUhQ0"I9IISS&4EX]X:cL&d*LV09r(WZ<!'#c&*5Df82Y82W]+*>C'\pSGnd?`No&,s>W<YM$gTcjWHMUsrt+
%?I1Yt%3q'X-&Ll+X6`<$D.cVcN,.7L0:@[_)R\))7/Use[1kd)B51hJ9*n[MIN]e@>9;%aS.@M6Wh$\qh;]C?8eFcR3V.`3ThNd/
%_>&Kj.cK^#FENt+cYGS\R_6*#@UThXZNA*]"cCtH=4(q`Jb&Kean=oaV$(?Y5rer.dSb\fbM>fa$-H.tZBV"5,q+\(BlPgY%]74]
%[#Y]oV$,o,8l4r+`+eL!+seiUKOUf[7EK"r\5il[-btM\_g)hk>rN)GCIMp-29#L89"9"9&)2Y%YpMYXeql@#m'863bq3a9KrN4u
%%7ua!]e>C?U^]1e''lG)4T[[#,_]D]+5B=OdB"[QdQY[k4Ca[TdS*,WP`Tj_jt55@XV*cT+T-I]jHAF0*,,R27Cu$oW/\*6iqK<M
%;TjSq0l;,OK^VB=G9N#g7:CDAQWX!tR9!^a$rYf-5s]G4@,bK1>@4Uc)DH$:gE-&*DB%+22m_W+3A%#XaRgB`&GLlUhj4JE[\C7o
%lYT)5c3*F$(mVKcM'efKiB(8G7YJJkX<c[4A?)f=^"rNAHk`e[[S*%skrL[4i)jG[L"[-He3\57o0'o6+'ff+.pbpVNeAAhd0o\b
%DADh+2>>H$X''H<(/T7E)o*(`(dm'./s*EN#\tbL?2LCPZ[OW7jbaPFqDutFl?gCTCC>D"H)n=r/W>$:La!/$=^.2$WK!=i_s&Sm
%[KXadfBX2$Wo'$tZP8:_\&p"VOpY,IY&QXc4/p*GP%:&@N6'r9Lo[PELY;Ha:W0q=oBI=.rcP):Oo`ZT:46,fdPO6''\-dd"s10Q
%IShF1<>M-#F;pe3P</XjADgTh)sDn(9KNb!rmR#1X%CL5'*9&SX:"DhQ(/:<9\-3NCJ@Nd>KlSF\.4H]giS-NM*+-NV_W6O_0DqP
%,tV,gCS4ikM@r*T5Kj@:MT@h3V(M>?e]!jAE*LJ@CrmGd4VGJ/o'Wo>E18k9+1:6OO7LL^Y@N81W'4p;+-I5MF.odj^cAd`fmj)t
%TdT<#e*un`%<HSu\Z_8e9TS%;)/Y3&m)[d^m//dgW)HIS"IFbiK=IGsTKLf*YdVt,?sbtD4"&28S2E/>IP%&=e%$b*[u0g&c6cr"
%AI5=WcO%X57K<&RI!3"nR(`p%SBk>.)=a#DXho8(>N/g@6Wm,e8-Mn,lhLsLD;!*X+8B%'RH8^p.&E&m2B^HN3a8L_i3C[[D3X&d
%^NdJ(N7G''^,cIdM5seljftdE:k^GLMU>/X%GBS!FFjfEW\DpC0=''d;CeYDH'EH!S`KE)EQ#rR2CsK671)eURMfI--R]B:=2j)?
%HnrdP7I0I`oS"1=R@4uMf#&r;RH+\gG<)2a_%=2$e:T6PREO]2l5rKLPo`]rB6\ut2f^lD@mhI-WlD<b&D'VT[L7eRUE!%Or3UG^
%-APO"3lqX6H**f9@`#Nu&!S8rE]/J#>`\BgO"/XC`hOg?=G(6b4dsFu&ldWOd=emlY3i-t*)1^8fi7<,4dnW&?C%]5:"6/A1;A0P
%7@iNuC1X<0Dk`]/OqWnF\0.X"GuGV[hk.BBG?R#U2/6uMojkoL8n###<EREd;Hp0<lbfl3VP-&)UnG'eABJgban4mERD)Wh@*G<k
%jFd&Zq;=l9:H=j6lAW!>9X10_FA`j'<B6OhkH31=YH<H+Tr5I@gln=9qKha;`$B9(hX3nBqa/T5OE2u6*"+dI6I)itF"HAl$TZ6o
%cEWIPlua^s+m2tK3I[U]*4I\Eo]C99ALOFTr5Dc%79)'daG90<iN6uq5.b=p<h"b!LtgA9eOSD9J;fj?Qp&i7GV!Cs@*0I/968._
%2lFk3&"E3/qTD2Dbt^?c^DP/7E$p&qgZ67qQ=TcENa^3&o^DU($Q[-J$btc>0=gSILS&lFI.):ujMLYOVa2q_ms#c6_@IV^S,?$.
%Pmd&9HXjD>kok-,dr1fc?SN)XYK2FTJsUF\0)Y\*]-.u>bBp-p$gXXo&++`?Kt6\r9.kV\Hg5\2#JR*Ajh_O5:G[%Me*L?7d5X=]
%mjZP%".:cZn32!d]MDt"pM'>:fDSKL?9@gE*MiRHmkWk^VG-cpAAU!fnBW.8'E2<K%*#/R<ob"E(]!5/T^/>W^46i;+a55Heoat&
%PhB+/Q1@?i%HUGa<&a\K[`M&;[&/+fq>GPUVsWQ5Fs@FW.VB*TCm!A<BfhP<I5:gL*o5e!DO9+74L?Ebs).YZT=%BWVQ[s"kr+Gi
%bND<dVH2@N&oQfH*`'o^b^>#TCGdPZKA=W%N\FekgE3a8Qr4&:b,E)4296g*#4afeOaZWPA18oPl3@'_q8qsm)JQAo]q0<mIN\+6
%'5Oaje'I"o@Zu2hroj;OP\sa3KAT\[=fjV"[7<6TAc,i^:2l]aU\6XZhmr"@bBr7&n;H)(NPDi1r+>c'rQ4racS,KH*q\>"R1okm
%D8O`iZrhCT/0VJ(SN]i`p,sAGb@k)gQ>:<7h^.TBcF+2Qkbdh+d/Jde,.PR2\mDK\@NH&g9=n=hh3AqKIo4UPHf[$nNNC5,,Ku^f
%0%ZY*elUF7nTlFL?@!EV:lC^)KMaY(qZH7K&!b=nL[PT#GT*(h(22i6`KV0!6D[m-cLuV!Z.47%GqC,aBGh&bK;7WbGnA,lJM1_b
%%pE8bQj,At0</-2EO,OGZ1LsP39&$;8CcXcC5G,jZroR=8U5"FrTM.sm@X`==jUsTQs(Lf"2:O%4-V[PFi#JOno<<$S(pa!Ts]'H
%]H?>(o!,VtAML9E7r.;,0J=KeHaIK*^8"f'`$_Vh%_21I@62PJE?u#fNG7uQG7i*UG+.JUe=-2jmbC)*U)/_d@QaJ*`)r@e)XlS,
%p:Gl#Zr.6fF]%7K;bfpur7VBIb5&Vre:(ELi&K/;dZ;n#WeQ5"cCL-MN:"2G%?!sO;>]BTHT)s^H%jlbmFnUH2]Z"7a8!o"mktTa
%oIe(uOr<oG%ajPH9l3.r(P\jt6lA]V)eR4D^Lt2;\p!qL,%nm:KIjr@94D0j+olnnV>]q-?kL\/,>p,t.X'O1m5BmO>1e6joDSUZ
%$>"$kY/pq/g4kT-2'VD`;VE[.CLlHu20cE[r:dtCj>RD;?X:<oF11r&kMIr>G>#Gq$26+3rmgHdgqQ,3/^S\Lo\BRsGA"F8J\G?]
%mg^l+^Hg[.!WTi`^)JclqME<u<lieX@RFB62a\[,CC4![0.5dp5)+g:$qVIHN8H[\hh@t=4H='V:ru?lC\IE$M[))1FXnsH9=/gH
%,iW?&NNM9j^&_70qK$r.GZB67RQJ6s3@G%Ar126bMI3<?)SF/c_[<\Ze]:-T^r$gj@o5kY%>S%Li7-'>;UY>Oei[ptUuO4qlF!<*
%`4f8%:>:@/"5lIT$XAXhK)ChZ2YCh5.G.3M*9<;jP_QM:;\bFR^np*^;CfI;+D*']>;$tG>*/p0`?L*`c,QW2ZfSMu3]A(e4,heE
%lR$-oh?!g6!1H?Y>o4,^nOF_GFTmQD_1p'Trg&<[^mb<PEI*\3O(Yid/21No]=+*t'7-s865o9E8dCpe?er@<FKTjHo*$S_ih*];
%R`+ND,4?@)&ks]h+O;.r\cN%80WS$9<A<gQ.kJ43cLL)Z"0;L_@0JQg/9;e0?)&d*o3)n=GE87F*\)=_*3Z1_Vn!41,g?ZL0,BrE
%jD5aALK[B=7@1J%ZsRoHB<g!tYUrNVAX$t2(;W!M[lk]Tk]R>@bflB6B=(>cMMZfLd!7lI2q),,_s#V7YHd-7+b78SR^hUq.Zpgs
%'/AeQEO_$5R:\gfIEXC4e;6]DN$8IsX4l3=D;<UMG?#SpHbjo[;n-N$I,.gg_^_HnQFaY$Hb%&\PVq8f;E=/$7_u]AdDjkfBMI;K
%!$W0<@2o]-4jp<,O`3[Bci@<Gdif>peAoGrV\M4>$&SdVLbe?P+PYtU=Wb*8F[TYRCKr:F@XNZn/IEs,.F2DTp\F_"WccOFCC5B"
%$"2mMW1.sl1=^mH5YeE$_Jrp>;Vh`q:pXg\@$8(C%3MT>lB'"_23P'[#tcIBAntC1!EI-<iV:ljWfaTAU^bCWZbb:o_ZiBCRg)TA
%F1<TaOO4[r)MF&U>lD#tN0]:I&i!Q67_bjWOl'+\)E($C_Np!TbsORCLlpF30ll+1'Ssb]jPl3k\@CQ$F)c,Dm;Kq^S[r04*br.%
%Mu9IC:rX,l>9;MT-XIMM`f%jspu(\:=Q25C^qLYp@H*ruD7Vo;`0J>/9m96Y-u6C??=X<2UAM_"GkQJ%0Cm*<hZU7gN#j0N'K-,R
%E%3C>UEs=?Rg+gdg#F>c<6H"(OWh6'S$i0"G^p#2,J^`^jGXp);p_b>BujuTHY.tjo!q!Sf&eF7&i/`>4=Dp%KQrq(0nN=dD0jJ2
%>gqI^A9;$sa1!uT&L/+D,=Vt\5HX'_HIAJ!/Y"/So<bY$,M/;<Na>[\DPDsj"FuD;Yk`WSc#c0%mjmrOer2Gd//I_ZR\l.gFIdaR
%&S?8o>"GboJrP..[XH)m`P#<br6_I:<gY<u?n3S0nWt!$QoK*k5bkI0!@/a;])HBaApO/aX;UQGqh]+E*\$C[h=.8"$WdF@$uLGO
%,0]5uaM34+]>o-)X5<gJ4Jdi*maje%M0H]M(erf\E;l=!ZHd?DHe>o5aOTsnLTZf*P]dDMe$pZ2RtDg<$T]mW_m4Dm438NE4e(nd
%pO6FOV9[N@882ToZ>kR&XVWJPF'YHP*-?,5eQlWi`??t5]$OAa=//.\H"eG0FLn`qd1&_,>3j_&mp`Qib;KYs)Y"`e`a@lnf"hq2
%$b]RkZ5.gfBshBf(0C.fMP_NSn)&SCFnt.lq;k?Mph.oP:(R$e?U"DGo=+Y,<rVL0Mtd%^^\I63ncsR;_+1-3]__&4FaX/eh<WTu
%:G,GW5J(6MEW,Ipq@@fKj%B=Dq8pUpGuijA?_<tUUOUJ#rHRF)Df:Y:?f?1unbTRpcf[4+^W=Un[\&L#%]d(e7fLB!02?EQr5%9n
%hOhMgqe'X'h<XWQS]3<8o,h;"IfJ$o(H:N&Tq&gnp^aDM*R[%ZirT+4POi#Wk-d^_A`PPs_jTK@0j"9;q>^G-DJgPc?hf(/ID*i(
%)8<b/`0U_C*,A7)*EI`0lhGsjq<#ppp>'MT!mCVUmjS*sA^ec9A]=T?c-I2=mlp[-j8XIOp!Y5e"qCOYn\rW7&$2AFhtm33&$(aU
%c__^>g;fgt<W;#]IIuR_l>ualq*j.Tr:T[5-g-gHGsoT#&EU%?r,M>S^:qEVDu\M\ah./niN'+6?bSb>g%KgE^8m=04Lr2Zp<G[j
%3dp2Y'@!((q"[Ft#Pf>\4$#CJ$L_JmcM[07);gK5XH1oPIlkEUi'1F(IIY;Lf/M;_5KJcl:Y.^+=#XKWSR,m@rY#5LjN(SSo\"M=
%"8dl2r$="iYKgJ9*t1*HlE7jL4C!B::KAS%#NdAFVS)0BbO<soW6Qh_^,jH@a@k]7=68?#EU&+VLYo66jKl2%B9t:/I;q:H"omuI
%:Ti#X/P(Y-4EO`g)>K)t\-l%uFNMBEdstj:[hf*L=r?Es2Tn#XiL<WP7=,t_2g#Q*:1Cq,h#eaKQH/]_<F1(q%6f_X3Z;paG2AXS
%STf!*:4AMDDAf'dO39eRH!M@>rbMK&QD#kE*k2*iMMl4,hEKD:E.!dP]OUEc\i)cb$iQRr<bZGnI5&Nd/)*;fp7CJ[]!X'_hK`=k
%Uhs%gJ9$TS.t7gG=a>9a2Ye8DTQ?=#o"f2<_ej0EJ>VoSXiSbnrLh=(Mc[+=S__($HbHR)jWF#2gU6%>JR0AR4p/O#ni%BJDqJ'Q
%aQD6]b-,-b]D7(S0"9#R?/E6-`st)-PJI0X:P)S$C@RqNG#:F<g:1hiLXk`^S+5<QU=gVZCLLlSRf6Aq_Va7ArTVA/b:d29Pf8K6
%qk\SQKJGZI,m\^qh;E1qpBLH;B3V%7i3+,ZDZ,mWY)K_=N(74ljq$R6HT:=8bjPL`g4BPi_s*jBpc#YZ+*"=PDuTCTZd\[D)#6Z[
%Z,,VnrqhoJY-,M;bLcXWmeCWO.ed&2^[Q:6X5#ZF]jo=R*F%+9+0%3Oqs"*$YjMGIlKp7YhS2qps)nLl+;3CN*Nl9179M/35nT3B
%+ZO4H6oEbs0]s[>`:$N,rS,<1q`!])-ZJFT55jsE-i9sO(*Dr'UYY>LCB7)rkR]PLdp(goQ(!R7fn)CbUR3YlmB)_!)jZEZif_!i
%9/\*b/.6_iJ1"AuTWGU,koUorJ%E9*Oh:;m/+E;pJrRQo>$S;H01EXEl[iELpu6`c6m%@BIW<.%hA8XYF!tbZ\4E^tkQgO.UTjKN
%AF[Xq6P!<!f\Z=S*#I3X53cM@p%_h#!In2l?bAU-I=;Bi@UFOI^Z"k1GqWkfVY0aLW`*EAZls)[.(KJn]]Q/0,FEf/9i$s#e*(?=
%LUt+bE'SdX%24V8Du^LQGXV_/(7mD7TL8hK(:[I#0#Y*K4tQ,Y$qlDZ72Z^F;6$81QXpeh8Wgo!*?\h#O,&3/it4B1[WJcCOtt42
%\@`Xs:Ri'u3TU.&#:QBP`ZlIW-ScmFMnCS=s6RF3G;;aQ0R>tP3V+=Xa<;g.=Y@$kna[`HM\ScB@="gJ_u8s]9NG$34mI6;p@dp"
%pM<'HK!^[!,;M!MVgNjtO<3UJ,oo?t/tu!f'aF4@,6(8Wr'cA3Ij5_oZs46RN\E$%G;&Fi-GQ%F"nFSToq*M-s$27eqOch7rD+U?
%oq.L#rrH"OSc;=jru"u?"TAoVL&Vo\pfeJ2r6VSDGKNSXY?Udi>BgPFd\o%9%m,GWc$$9JFpPK;57rUIg'flfIX5f.bJ=(SHPV&j
%a"^,_iPZf$*a69V%GaAJol[_';QD\qep&F[jZg*Bq:kBRj81fEiT^rlhW,LQpoi`#B:,.&Cc$o)s6Dmlc_'[TNCV"_@IV"C#j@%I
%SSi!_VmU7nL#EA-`Wa'_Mm"]-OcuI2Ffj32pF::jf5r#j*d".@<kh]$">(Xf%$(j&dfK>1fPAhtqg3&4>UbS9COB%20umj$U%T=f
%#hkbG(bTIg?,MiAC-q:u9$aojYS;0kY4;^(&'T!?&3>Yd]TLJnnG3pr,*%R7Nu@`)]Ug^r4K%`M*d(b5<b-"%nfjKEgDQd6^umQd
%l)&QJ#1J\3W2$'5d\d>^KuqZBZ25b^F9qhrnMuH.F]6,lQ5_kTl$67?i8NA\J:_j]^1+F#PthepYcW&oQl$CHS$[;C(+*apau/D@
%E=NCbi0SmaKV7.^LVu%Wp_Uq,6Ar3ejcGP(Uks#;d9qi=h$,MDr>O0eQEYlLr4s@X+"fOZmWdaqiXbpR4G%,OjlsV.BdO\r*t]7H
%1Dn>(lrf!*COG,68]UOk@ld<K8g@*i@h%GX=Fs;bZmWlqKE4Tj#mcm>#iB.MV$=*(O#TCiJSu39Wj*#gX,"l>XUp,sY,+)@!T!',
%MF!J?Eg-Q-q#k1_,5%<5SH\Z-X@moa7]pT!Mof#7D+5&?l"M-pf/+d[6M/<me_tk!lgFNn4PVS%Qt75D2E1kq/sMbV]e)\8PsJ2P
%?o8%lcGYMCU<jdaM0)J@,Pr3eRq_A3#ldGJNA>)2OXrTHV\#Q,P\gtA)'3]5jIp:&$t9pr#Y1QCO,LoJG?>ZA*/c^N&qAVWH]FGI
%n#pKBlOY]H&0DEn1C<*q9QSEg9%o04h_AEgYfEW>N>rM87756!-AU\22+BgOHtdY!LdO*o%1Ae:`=:NP'0sE<6n<j6.)G`UbB%*&
%S+^RnX!@-E#:QB>Ve3h4H6egG;C[^pF+pI.17B_L.8ZJk-'0hbj.g;+?23=qY0Blj6JrDKADX+FQD#-=,73D:Kn3J:#D<I)+0FqX
%K7>.A*Vs.LMkq1QeEa+@$0=fELX.I.39eV#@?3Fo_Y>]s`M=f6C\,gPNHE7Q*XBI0&K!YJCi*r.p[3`G$R"9%B80g1T]):1Pb_#(
%(3O&%ni?jjA,>E]_Lg:$L-cD($-_?Yk!3pj/B6nSrto^J2_7!,;iK8%WUCappi8J=Vrq`--%3@E4oBsT`qmq)P#fL@+iJZK+X(a@
%WR?OjpOF^F#mXq$&nQr5q-rY?c9;;,CC5G()(8dFA?'L1.!<=8UZK&kTR[S]\HWXDT]UV:?qmR[O9qlJn=Wcp@!lpLa0Y#qA_3(L
%0b7TkVN"]/,h+2PZ4PXJ.U4]J[d/UNl7s.5E8WE`>RK^66BHj/jF7a-[E\2TTaCcf3%jaK=OpZmZ!$^EpllL"8E%`N74+Y-nR/[+
%_@9>3h&k<=Af%8NPW9f;27`;%Og[\7-m/YuE*tJR%c:>oQERR$lBtITUq8tAddi(7pYB](+h`[B(n+.`Ng(\25g?.i9Y<GKUg:8+
%67*$ZQm=_ZW+hYK>Tpu*#td+.&iq7rAIhYS3$+jIQI6o4PSQGI(u_*[jSR=sfORpKrdojMF9[Y>4YYjI,"_1.Ra+?bjh;R?.m.@p
%J!P_WCcjFGTiA-_MVUf=$s.B_fqSJrE1_<B)"r4(#=iVcEmuabSnl(\n6L)Vl;-50#TE^bq(f#a;5An&%G2Z="tmUEM#:YDh');g
%3_I]niUcdcHqB0MB-L?/<42&F(3.*)R23mHf+]c\*/.1q7juZWs78r<<;ZH8.f;(Dag!t>V;Nc>,U.8RTpA>)^)?RM+0Fl-#<f.6
%DF!5cL*W07,n[lo,)4;e`rHB"0R*YP5s+j[6F#Ob-t^KI!/u$94Y2d1GejUe$tWJero2danAdFYKTW/6s,Qm_`!P)u^g8SA/]SJT
%_E`.(H/]&.9e$@fHEV2pf-;jI((XW>^qS6.m1lEghL4n6PcV_mpWKfA!4$Z;E!k5/aX<1Bphh2L"MoRO[2:f9BU#Fan(9j%[RW(Y
%A<NYZT5/I&-gCFWHN,-becrZ68D<4YK*'4+,SFC*0l<8J%/g3^d,K?AIfl$r$jdkK)ZCbL1oP+DnA*>7dUYR-.k/Lt\D?\-,U%eE
%=JSMn3oKOjJ?d%M#k-]1Z^\[>&(IPlQP32Ro_#.#1/H8`@RUWY'.IUR=.%8pcS9[7@`%a,4\%OOIt>Y.EHERaiV^5fMY<NliC'X1
%PB)ITn&>4bj)[\R\,AM1U3Nj@_q1/#Ioli/qL>_E\_llT1U:Age*P,7mL[A+r'dqqUCRU)6*imbPstk?lLSZ+DN=e"ddPtCU/)H;
%;tB@3m\*R]e?:^g+5WF7bP5[B)VqrA"ifj:F/<<%T'u7Or,U[_Cm4p$#Q';4C@-q_=!R>:C:?7N@&Yt&p7#XGK`@4l1>nu#h`Atg
%1eXcQV9s*ZqmF_]G6\#LnXne8M8B#@cJ\6%;LbnhW_a27rN1`M1u0"`(js^BCTI@L"s\T?`W&Z2l?#+qT4"YKXh<5b5=1RkFRa:S
%_/ck\Ka!C,C_CFDX>W2:h>CZUiT>V9;>g;^&`4hpB;fM'':V5GN1ZX4s6kX1kCpdqDa,$Gf_4c"n@6feBJAe]rs%KO5>%Y#K+d>'
%:ko)orgZmd489!qoQONcs"7=neGo>'T^Vm]P'hf+2?0j?Hdd-$f5(<m?sdf`;:A=@rqbROVLK!LD7fQFB"%HW%K>[+7/]'tQ7(K6
%eL(60>JL2O>JL24[UhL#d`()Mqpi.SfrWVUhHt1q\,9HH06jMXbC,Yf6a/DoiBHNc_6Nsd(-d!=gDCYN/^M#'I\i@Hg:tCX<<:81
%Dm>=GD-3fi\b-ai`r!4]'<CDcacC*fe=+#,*n747;*/f%)g#:/?*+eLPhlur&d2d]H5cJ?cL\9kWV%LVr>K"j&%R/+).1qNnKJ4G
%5pLDR)@UE[jr[Rm'UhO9Z&FMl8#'L22#L?$@?5nJiPP`k9:b6Cl+%Qime0+5T6!3l/Mh#(G%pI2YJp1$dOS=Ghqap)dV\Y7.-OlM
%21=&?^(@:;R`Y<k#/0GDHjJu-8:!,Z#+P7i#E$>9s&t*m.J8JXDQ.!&^sq1h6q!V,#t0andl,b.NQk!YLd(`Wgcs2n4=7aKXrtA^
%nR]U^1)Lr=qk_T2<rt:Zr!oJYX-(489AuMg&.tP+,HmYUjg>JloA&d=VuFjcL:.a6f8K8n4Ws5[ZTW&g6?Mt@geAp;d]`qNeL8Z4
%?>iYUig0R^[7IRrY@/\`D%95#AudraPrL*fX^J7p9kR+ihb&O-nb/;D@7sg5=b:O]m<<pAI]\hTp%r7E%_+";Wn",gDXX;VZ.I?h
%VeGjZ^CKUoX]Do9C7Wq%UXifS$_cFU^quZ0&AGQR5Zr+_.cFtaqmG<rX\TL=7-]>2JRcW*bD6S*^3]8`$bt/FB=6<6BaBOL_;scS
%DEqQYXuV-CqqXlDKbA3rFgsjP*ClXR(R`-8)G)/!-"#+_Ki+o4+5')bO2uok5G8uS[*;K]fSff28qTnXIYNn,:sK;p''A3lLmKYj
%oKbG2&Oo7oa)h^tlIG+@-N6of,G&$:?c0'\,sujt"?h,q(=CFG?saphc_pg2Dmb$)o)XF+%/iRi\4<1Pj3hj"*AAuT@]<<%@$A:i
%;e\+9o[B&,g:onU4i9R58O%1:5m@D)>392V_;e9$5d:d<5O#M3gE2bn^DlK+fetD-B?kqX6X!-RS_Rjm;OA%m#[@;Qj\i"Vp#``P
%P'cR@<P\+RMr`#N<B2e#LuaWCrqp<^m3f7=BuM&U8D6uX:GAhFn9!Xm-Q*6@-ur-&3G9sdIr3W\1uF`V'7q14I\]!nCdK<`?a_I[
%E9^Q/FLkuQO#/rr,H:hsp&;bXHGK:!&nZOHa+jk-DP@n_Ah7:C)eH`o,9H:%NW+gjrJ,-R`u`Fp9=LEB2i$c51B&Pa"JccMhg97U
%-Hdff](LB4SKm#Aq6GF\e:/KdBJ2PPcK+Ji5n/X6`*MR\5OVPPrVF>Os3M+]42eUsI_NdM.,OOVjFcCM`j`9qW4Umpci<fkrQtKF
%^F`b<qeE[l=rdnnm#V0SDo2Qd?_\>N<k6`[-2r6617Fb[pUf*/rG&XmInp":c!]0.p<m_uqg\O<fq?c/<IXtiKT0n@N^p*k#2bt,
%2PM8u$`lhXb6\D]X43;lDam*k,AGL6d=V1"_m9")^E'U`)`40Kmk!En\'jZ=@ejTY?E]tH/-!4NXaW%tX4#mC[kqJio8DQ/fj!V(
%]Pe`j\fGHJ7,MkN/I18b6>lK-Uf@dq1VTV:`)!.$O5Tto4c&9KXo2Ct!DGG\\UUip?O<TUB:,d/HMr.KUm?Hu[D2Zfrits3^7[70
%R3AWko50h`W3F!M_]&p0R,^1u;`^PS&WS+f"[AOlg/PUpkdt>W<\1It,@ue/;P*`"g542SkL(/M2;96%hiZLQ,ZCJqNNE+W^&e&=
%9"hH*rP%67OpTF/;gYBc!.R:<K2Hp`hTZA9)%9_5P)5N@rGT4[S*P6g#nud^JU>pS&)+'.l*NdP"r1X1b?B1ZlE-?_]&;`&_C"IL
%qRWe0NGPYWrV?,V9K(q]c,4q%SZ@nDmu^isE81D%*[Hio6BU7io6X)u0WC-iXC$)5s-u\/m"6tPh_.]ab0P<b#CA*tIq?IoMN7t?
%+,3`RoX,HK-[i2-4)EF'LUu>"71sH\^8(VQGa8!k^AaQCi"a;'HkpY&\4^F3Hpqi'4_ts_0h4bWIQgTCg)j!\Y]&6\3h:/%;]kO)
%XaCY.n=<"`/OuASYM)YW\Bj[CY9(cQ*b'3[:TVACkj]JWj1@$4/G7\*TLH=k*W<!,V>I;/KA(MdlnSKgJN[ZM*:U,)osrr![Z+1m
%f!#$]`0NY)[cAO7r(LV<%OQfe2!JYtqB&s2$=A23o_C;Ho!=))N;FlDp3B"83rYjfX8/<c#q[j>=.0OkHmqP=7#'`]X9K8HN"Vrb
%er`c?deLt'%g="$UEpaNpafY_%Ms**iMZ2IDZ*;>k*JB>D_:fdbE(6Sau_m0=rMiCZETlaT"b'lm?i;URJVV?Q[Z7:qkf"tAe4fr
%cKdDG'Ah:nf80uUG`@pZYhLbuJ2\IFL7`#Hn>s?^H!.uo`U:rim-^6@7O4LVa>Ei_9qQ!@G*J2CK<<R#&2V^I1dCPkG;G<-l\u?(
%[sYRMXVOMbrUnB;r?/OeXWBs,rC\@rCN#iB<fU'FY?<ipqa2B0NuE`*Xo7)uJ,Bn<`h.;!kec+S1ciB5"iDg&5C`=Gq#=`jW0uqC
%lj3A?h8_a<BmKa6Je'XbnB[?Qb+rcV]V='`2K2P1pMY'H0K2LOk+=+b]D1P=rL'q?l6cLU`/T[6Pnj5'6@Yl_M:I4ho2@XD>$;r]
%eDX>R*WI\-1g>%CoHO4<J?>\D[q8qW/bl\tLu%[Uk+K5CJ'q5c>k2uN!$@L0I9XeDqJZ/l3W?RRJ(f.:`t'Kka)a"JUYMb3GrHeG
%c#qb##)-mlIf0fO`pGYSje=J0=Nc]P8S`fs_9+;^*N+g6K:,%iZX<jKkO8$(l':".I;XBY[l:T6#]#)h$\kPm8>KbCL7-f$%a<`#
%m>CFU+\r(4A%">P:V#n2o@Y]J?/M%FkYc$'dG@FhB*-oZJ*<Qq#g_i5#T$fc(`<*m\e!GM9d-YQNs*Dh!8iL4cL!apr3bcJSm&rT
%3dQHtG#$'cQ:*QtPI!tph&Ri]<p'8@1jrQ`SB^,]@lCH&55G-MON;:OY30H0<sr6#4812q\l)g-]j3QQ+c70KH\D$G,DT)lSUGoZ
%\%Bt]_HLC2aE@5,(YRsIp.?NYYV/mmRh_@4mhZI>CO/tUj,`<Rh7[K2A([+d9:an(o\!]RPANKbn[aKlheaW[[DA`ahp`%%eB6an
%lge@F@E\AH3.JE/K@QO/p//P?/<8/*f<IB,k=[#*jIP)gG,dWF0O1K?C0?sj1K0T[Gu1uurQ:-k]R'=n-rVM*0_^#TI5Zs@&t-C8
%hb&h+;BhBs/#UoqE[k-t]!HFFK7f0X#HLYm%jL.#U9V41MT3G$N)!B^?_Ys'V%(AtcUO\!]0fifPWl>H_YmFjIX(N$?!-V4LtMNF
%To%pgq0W#i<g`>*it(m)WKg!`im.tH>!aEoc:4^DmoQ6g`S=mDg.[a+1D73BG5]KJ/soit[\EA_XkRMOJ(BT3m&_V0M3Fo4FReAL
%,._l_Iu,Mq9C_6:F)sKZ[#\"W@N]G`.lNoX>,--tlHHEu7bu&96WAr`IT3-RXJf4)\"bJ:d>-q#KmrVU\itHiUDk/a8(#S>p#g"g
%,8/DJb!I_L]o>0Eo<\D[B]8_<(#>JGh*lOJHEl\jdO6-l0?lUK%lY0lkjbad'0ReBS'eR5"$:gH>b+A<7P@]fX6sF\HLnZ'^hN5>
%c=QY,UidK%.QWL8o#9ir[!L8lNn16Mqp@mB1lT/o)V`[5b4SuGH^*<C^/ZfCU;KE@HRcU*)GS1sR=hKl9Pele^2\9ZQ,mh];bMb2
%V^^Z!ZoVcTK/QCZjh.\]:8u.Aq5Mo0cJ@!i>\S%)e\?R&au3#@V@!i\p=.Cd:2=VEDYn,4W-ViIS[M9S;s2&Vimb@:"5TeX;cA`i
%dDr5,)lBdAm[-qtEu:PjlePA0Nn"V71RpON@oI%=l.E)NfndV:jic<)RCaIQf!UAqZW89Ig8.)Om:isL9:`fP`,^XF8$VG;UCc1p
%HsMdRhjrE)ilh0rloGoSMqr`nWEADpe;r.Oce>W?F70:0M02S"NS%VsrB*5cZrs#m>Kf9,-Q]]7e&L\0bHqpGDbk_(O)NJdHbJWb
%2CIXa\#o;NoKhKbR6FmrXA<1M=15!pQ7n8r9.R:%l2&5&A,>k40UhD=[urPpe^6EO1GaB#\3H/oc/$X#_bt-e*MsK+CPT581Dus:
%2RCpnC!7R`XiG)"A26#`4Z0m@H"an*buA&=m``l7e+$,8?>7_TX!N+9m^7?rS"+?iAo0Q93kKD`DJ)nmoK5f']B*AcboU-'G%QZ=
%MsI].-X5]cP0pXLT52a>CaXFpS/j3#0BZpPQV2Bm[H4GLqr0e"[sG?+2j`4`g2f>GB@XQQ]8b(GbN=1jmU=U)R&djNM7N?ZcK!^L
%278:hE,K/K3hNL#=7`TXY0=)aW8W-<Y^/0V!&AT/fK#Fl^Ul!rk,Z,-rV9L6E9E"E]rCd3VH/O,B+r=*\\Glkhg?7dj'-H462W_<
%>)cnVAhW1?h<81X\P^:ZibpF1/Bm23&duh7gXq+)T6jepgpUQ+[]SfJ_T?W'ZuFj'4Y2-BFLUbn]Y@_hFrtW9nbD^(_Go@3`9R%q
%3K\YDlA<Et>Usf>E7IaKV?Si5QNNLH%&ZiH9X?_Y(s=J!Kq6-#[AE<Y@X_-e/fn!sZ,Q&+@r&@?AE=W^jk%\PWD;u+Bk_0(Yp<D:
%dS&iB\'(V]<kZ+eiS7R/:Nr-19<ZId`mX)H`^hF3[g,KK[bOKP)EjT;\T]cXRCq0ZRnf:CcF9">h+ha2C=cWn?915$0<8j3=jE&9
%+-qsgL=Yq?q<l-UOJB/[G5P/pk3(3/L34Pa2)_"'_:TbLa,Gr>gndk3YoKM@'8r9Lq0eW"Lr9"n=?h^&`(nE6&Ed>5MR(<H7;)Mm
%_OPmeVG2,[/n&X>o.>#:qf$CY/L7gLC@+]`Du6e"/"Sig=KWZoZEhd)\TKGZ]@OYSS[)SqT9VQ^H"=]Ip@9o,Yh.LfXM&tOR'Nn2
%VMB?^H?rs0XQb;"G[2.IhPH`_[^+R(kC!(RmSoLD%HhSJ6+RF3R8$b>Vero)=[$nbVe;'.\M`8bhn88X\Su2ndYh07W8Y0+p9*Jq
%LA<="rU,7W<)M<g**oSPmHpM!b@YR5Za"hTRX;"M06WR84gVS@lt'c^HJV6-Z0"4"VLe?hg>^7AoD3!/V(`Vfn[5p8Ea<JQ<gq##
%*)*\"^";PPg=`UFC+_G(==r\'pK+D^]5t$jP&\$Ebf?6]<;*0!G20%_XHh:@I-n%bo<c6=H(A6u=K'6k%nho)qW#QehKj+lYr3B,
%pA,`o\ao^=iSMGs`oG;EP/'Pjfpgf&>0=QsDB/B=2ii:^a.&pB@W&O0.s\,UUTNWW>$?!HZh^#&WnMphV5"RqYA(%ZgJ$e2f?`^)
%kKA2JAZjP(bcSRmAA"+'41!NpqO*,_<\2_c<t[2]2L2f?A^ff@7eUXXgs+En>8Oj7X&1`%Nt)E*h4nL9GCS::kB]o/BDLZBNFkAL
%(?5/]]4a7_>\II\jt:!FL"5:>=#d:pSeoO>_nfAq-,.+T/?+E,SbO@'ZZSK23S8XN`;A;D\!Ppr*VWpMY8[4rmIim4H"XCl\$;-W
%a'X#8D_'M3(N6@h)]tK'],S.[@eZtV\DM..e2I$_O)>2LlSf=jH`+97#K!f-gn.[Hli$KH'//>4T?X2Kp)=gW0*cJ/]f=YXB!MZ\
%o;6g&P$*bc-KK7.0^\"@%kjL+iF.*#/pEOB.'+KO*XqZ(G&"C/oTjut4#S%Sf^[8Lh<=WRpb4gehUb7FWmI:t3V)<F@%*:*_Mt25
%0-;.2S(<K[]hlnAVsVCnh6Z4sm.o>cnnIpdi@*P57]5Ye79/,J.itn<*u1E'p%%oFjW\l>\_UIM^H"rXSG.rBY8>L%]!s_5C`H^0
%BCddCn][C1dp/cBlfXTnC1cb:?f/q3\_Hj3=%A,CeZ7lbK?A>rBj+j+ma').pU@$2M3aV'S!D"mk"Ti8V0g\:a7jL@IB[\&B0AK7
%<ZfI'GOb>uoI`5S]XbX)pGVH7pW6R*k'luBV0mcAEjgJT/[j_m?#jEc8(!h&6W5V-5:4_&o8c!)69\GQ)MtB%]eauWG/W^q_sO[+
%RbfLNPr;PWQ_g2$nQBS5F*pkl4Ztt]?W8\=bPd.cBgj$P04:6kfg+=n\pHN8Wk8'(;E^urrG)5h2I<_6%B"B^IZpb=ZE'mGC\t53
%5J"KGeR.Vkle+%qS`ccSfuN:-5r[N%:-,G8j5ou'U\3@02sn6PC@gM6jgNi&gdf9S`BCBj]U[e(g+U/&Sb6'&[T.ahaJJ"ai2'Li
%XlW>XlZsgkmA[/[7Q\#$eo!^>L#(&0]JnHac\]8/A_C2S0$<7Z]=VocFrTP&[@V(P`HoR;O&*H,,.\02]W%e<kO!;f1t@Xja]^oo
%]YEYp0$(.\I&??1^DgZAq@h158%$"u@jYibheECkf!*hCe^En1&O@8pXAeCi2IMVO^\#iJ.fY+h&%]Nlf8lb'V:"ZPG:*bZhR,MI
%PZg9gX&g2t^)f[$)Ut?uY92JpG>'67M<;QfXlEU"?McRrjF#_Q=(.]r>J)=Z2$_rd,kQEDO7ONe79&b)O)p#qZXKh3KqnGrZB#"t
%C`CkSIQsupD>j$eDh:4Q&rQWcYP5)`ZiDT(bD^3X^/tBC%17H2d$?WAm!P/Jp=g?TKAgCDI*o%odgmN8)mqs`;X2jX_aZ5P;db_R
%D2;9e#EaKoC7WG=K_,s-FWu(!EDAX[1F4Y'%Id$i))7L+W/aSAc3H0[r&`hc'*J9k*CY9+kh>DlC=OZEV1?bI6(d\DiF[lB77)[7
%(kINr!BRIbaKUR)<GIXCeQ.qZXV1C**UA=9N*=I5(R,G"Pm/jcVj!muL@JY6Z^q]kBEYC(f#J/5%O.[n/&$h.r.9NKWdp3^rFYM"
%APWt0GT+_9I<XON*A[o1oRdfAXZ[b6DZ.W!aFl@!^M[BU[b/W=H<bd!m7`c7I+bmZDmmP6r]FQG[m'#!\s5b"gTKYr=SOf@LVgu*
%',,kuhXjJ?k;s&RFkdjLSV"`E\-qs&?26d:)4f4a;0STL+^=5OOa&\'_q:S.7)HGN@poU`Xm'm#[pSK2/=XY-pR3+0U4l31-Th=o
%L<'%)_T9WmUoC(uV[>t2esetTrJN!%Yib[UAFflu(t>X.OSj'lZKHT,A]M?Op\=Wkj&Wqeq_s3**T?6C0l;VC:(l?kPJ0-FO6+-k
%&3b'_':0MaElK1<jEjJfMZS-N,3[)Eq^EbWb`9'ISPB@@nNC'jQ#Ku>Js*/o^;KVX0i=V)W@FSA_@&d-5J,8sOJQ;pB)fdqWBVgf
%_\E">,FQ3>nboF\P59r$q/_o1lUq%E>Q'.8rrc9d9.YQZVPbsCDRhUZ0E#5S[aOhM=$s\84c%\8p\(^0aHI?+GHH=uY:X!cBillD
%7dY5oe85*%P^U$V8M$=U0?%Z<SYFIo\N`M1mu<_gq&[aZio&gOC>:IDG;^r2ADPQ#'UeHGW;)V=^./9KqmWd@np5b![LSd3lMEpZ
%/C\/r<.7&mIL#oIYTik:%fO(DGSr.0qGYta32$ghZ?jh$%d-WNg\0dWltp5!Ed_i5FLAVoboSHJ;Z3_@A*(67h(;#2kNB.q;K=JY
%So<fJfLkFVCZE4e>hQl]4%T$7'j8VI#AQ`\G0DWE\X2+CU+r3BI7PudeeWUbe6pU-L1sPdqpE.8C3Q%jhEKUgXkC+gCib$"P"R.b
%Sj1H,?bM1#AZd_n,&aoE\X32PIC$;JDKkg[l(,.h,I-4I7YR?qI@5@pc!A1C\[o%MrcGM]l.+n7amEBFQq^n74_qR`b'e$l[;_aA
%)'msngu?PV0Y^Vi__d%M_@mnYY'tjL0irY.;U71SfnR-O',Z"`buM^]>AA"rmZIg,71Z[7cOX=V2#E%'c=gf]]hG?MQ=:k@`)Wct
%Jn_laq*ZN9EDGZ&%Jt-f/NmUg-8L@7:RL?.04\jnKoM#H=C\a:.D=`=Ag1U>Dt)8n=>%^EF8BUIq64)JZt;5ZQMQHM;0r7Yp'iql
%:Ta%C0L>-0?JMI,S]Y2!Z$rpg/DGC7c&&7^M?ns<jE:bEJ2oVkPF%S4?"mo;95qu3@"!K<Z'K+Gj#6AbH@I9,h-#YAjqg/cF/?F<
%>;ru6Ze^DTg-t[X`@T'tC#"]n$uBXq?&7IEgq&j?8I&,#Oa2qu9:A+!Wr%O\Nud;I95CkfB]>nMe%#1l"-#WA?lGe&[:@Z-M2fB@
%rj6j:hrFF``V^C1AmUrg5f$Mk@UgXtB]_4FfC_CqlYEQOQbs%hc!\LEhGM;_Vh%m:h-^Q`j!BNWoi#[,ZO,b^1V$"B2s/+spVqW\
%Ul2dM7'=8:pQdItk,'qPq>=c?4867I/iG2so^R%b+C-fU,_<>8^Q(UXl:q9CBlatrM2?G.=s%(kUT%;"^[3,sFZ3Adb?#"H0Q&>2
%fSHY9ngWP=0MVOD,VCkGeSZP\ml/PZQ%R7S3[NlEq_"Ds_I=_<ocDt"F)pSTeGH3(_o8<'[?4Q5bnkCPOYM$M(&2FbB_"D-DRl6?
%/In],`SKM:,<"GMAdJ)/l!O+Y#fF4gq^pJp^IQi<e>j>HB7'/b_`b]TQ]8D,>clmj1ht(sX2.CF,69k!\'g>LJnT%=l)B1a]9gb/
%]Z?8%!dq$5m&dsf5'k9i'XIC;AVe$?[?.N!Y=Xn+EXl<AQFhT+*o%e(YMWm!Mm;r!Mnhpjql4h(gNoEi_-A@'<#B&n="_*,fDE9f
%"[4LJ[sCtacV(@nL[T2f\hiR$Zcteb-.08FHYg]3458eDXk$NbgVD:9E?qiB`;8oHY!;7D*QU&F^7EqafGZqSgZc&Bh;!$lID3K!
%eE=9rFRc%$S@U-:PR;\YEWspn-&hb-J<=/eZ$U."B&/_&3;AW&YIqToqD/\XZq;mHB5cu,5ut/7V,(=/KlFYfdPcou3Er(5(6[pq
%la%(uS]2;uDt',Db1WQVr``5nW/u_d>Wk7E0VK+S$\cWGZp>W3!SjXTCH:L#hteUK%:1D=:T4-lW7A"fI^*!X#=P.g!fLD[-T9O]
%Mn[^f1sM46DD$f@MRgF6mA7['hMK^j[%$64%_")4Uh2Ba>pG3hFZX27WA^4RG3Yg7/<@7N:.>!;4Di>4Vt4MJqB7AtZMQ*KZiQCD
%er<jYAQ(/*B/]o0-57dgEDqJJT,ElT=mAS.\nCp&$%BK]h1HTN#g;^6l*[@>FI$sFk2T/hO%n2%6=Y@qjFXotf]mE<&5Rol:6(GD
%QG4%(=J[@SS7>_9/HU+u"/U8t\5V6?/di7j7+`uK2P,ZCG`O.UoOkMYT0C\BaKnHk;Q!OmQ8Z$/`[3XaeM/70c`8Do'$^cZ_),rd
%h2G-Kj4j2(nR9'l$(0l2@;mU4f6D8g#bbuG,O;_?nXhX;0_O"A&XZ1_37*Z2#k-MXiC24n?sc%^peOUuT9@5*BEK4B#Q#FgbBqC^
%]D3(Hlb$<Y+<Mioj'?0TUX/H+Nb)Xf!0-=5FrI#bATEaSalR'RIHfL1Zhe;jB#"u69H<H>R!>Sb+s[$mbH(n@4:]:8PH*J6JT+3@
%rY41^7=7`bKQSO@`+:Xt`b3_]2AblHT-Hfd'90B,?j9frWN/GbLd(>@"FHF%7C!E_r5I*AcqAT2VtK490KAfQn+9,]Gd5jLUkF!3
%15D:"7mMtgmtNBZdE0U9iGht)8?EfNd7!unC>7?W9@G%',@i79GGE%BOJ(!>@&!q5E['SW#nJ#E]o5#X2IZOW96X%3hWu',f'Dr\
%GmT[=8s&oMe#;];+nJ?bFZ[(Aq.>D[aZS/&Vk(0co\"2]SPST*cVK#E.\s_FT'p`j`lIKbc`hIpHqPPm1WO%ZBWJ0sJK&Q,d5mcP
%CWHR>X-N;*[(P-Vc0b3@Sj")9m;1\KV"ZK;d"^+e4.gfS)B@<(g*YU!1SDnZP(@D2r8+jVhQJ&c_fm\O1b$c>CO<Vgal%!GH$fuH
%FoEu9`jfSTh1"fEIH`5t1gt<:9W5H]G/UT47toaAj^Yapi\%FcgG@/`qCW%=bJoa1Vq!E&DJ<oFBaa[:F[$oS$!ND`^WZ.d(P9H=
%7dbON^<&1$=;t%D^`C[2)i<nIEcY`=7A&0WW[:u9=.oP'@I,S@9FIK1nMVBgb\G*Nb-94!YA#i#P-97nfaT;&0cqBR\'XX^]*FP6
%6"m7SCMb^4>H0"W:QHH$DX1KW_/%AdL:Lk;]H?kn)S^X^_e;Zcq\)2bjQbob/We\?S/JNmR2*i77?uf9&:7NKIJo&<ADuKr+]c[.
%7Si0*f2b'AX=[1#h^Vd^hp%Z2VdMI8m6_m"(gYI`:Cb]'$FtE3s'e[nh-!+ZNloD^ra*,op8$RN-d8&]4I^0I0"R4ufQqr;l0CM>
%a-bZ*]H/?6n3=(:R<Jh01(TdSF$2S`+p]#&/(Jgd5b2qO#eq7t7F3L]AG3caC2H3VL7,Q<4@s?qPhu<UMDDTNG<H*^Ag9>spegm(
%X82m1ZedW>k>@;cJIZ+:IUq#knETWLb-]F5?plC0SUcNMBc]l#7WFN>m"oatomAA0$EBLhCML7@3dsX:cV)kD_b/*#gncQ(cLt-Y
%X5A[n0V6iFFR*;]N<ksgI5VRrp-UaH-A%?:F0]5cl.K=pY+>NSNC,3^2L\,I0#WfTX+d'b@jX+:mh\.tq1E?GB\`Ot)e\jd)h_*O
%RgjRcPY7TKQfq%3TX0OD<2#N+d6o+nV;>FcR9RC/:&-3.X"?8F%o8#0JR7/5DI&1LbB4%I^R8dXD4k(%0LlW?bgFMC!HaqDnqdOZ
%*`?EVl9g/DVdjWp[;u)o>chq2T2R7AL%%ni^Y-U#ar#n'/\\Z<m;CD2+apM_)Y;n4%kDUR2ljJmmqA>0$obV5`t2kFp50)Rj8%e*
%CVL.DDf[u>BQWZ`ojSC5`;.C?_'n]Hd^T%pE@_%6MUKnrkF#D5Y25B_/0A2oMu+sa7rRYPo%3#&r?ZBH5!E8d?YM^&3h6'.!hN--
%l='Xu^'o+i^Aqlhh0It![B]XY<cd<'%4D)o`>_"KnJ?FVUU2NFSs*X\@St&$R*eYZ:;8@qk.=sth05U+^LN;E#ZNE/qJ[n4C)_:<
%Rb&L&A*)o8[G(5ja3EjlF>hKFWfukfQ`[4.9!qiOqq0tA.;*laF+nGTI8(N!-';o@Qnln)[q9C:kbLY&()AeMBSj#6l]nMT@%Q.>
%qQuW9qa_j76+4=Q0M&;[AkMKgHaT,%b[,)iAu"\X)nFP$gu`c0VoK\PdN!]qrJ+JhP_jBXR,?`TpU9Mt6Z!t3K1l?WmCB9Ee*22H
%3Hf>aQ!Q3R7T+;94;=9;3*O#H7G>@ZMbhY],*B(jbKDiX8[Fr=VM__/B8+CYll#.DEL20")-//%q%9H-_gFJNJ<r8s%MI?0\lbJ^
%:6<]^:,)+M%Vf_3fOp?5s*=>BQ#+JJg%7G[Ni=%X%Mj)C74/?snp8"$FM=-.hW_@Z5@rQQc&D1('@[C9oVLP?S],&G[Xk&O]\%U+
%X_m\a9pB@7N7h"HW+B;uL:\?#HKom)rQ_#3d9a6Z2_iI&nrBSmh)PW4,i9%eTUY5@Ib^dsMSR>7$p9=bD`l$s:sm0Ir;(Z*hRaQR
%d&cP[LXfY;m4D(D4CE$t+S:_$T?#BI7<8.%iIk;kaF1;f9cS=`Ecl<0Pq+LEB>"2@r`UK$l:b%`oc;F&$"-)=jY4;oQeU8!>@ni"
%4?6Uqj@+L2Y`_2@nk\q!*Y^n[fj-8,2_sepccPR==u.6g;<p1OfXX48_4&U8m7^r]lQ%@T/WPjp$RoT\#RB69(SV:q!rUhpm,XSM
%6.Q_=j/*0CCG!cNf`@@,q;A0c;D[c>GT%*nL&%9_g2#Ia`X99:K<rEgcNZCN=aNnHR2^LsPhJ0M:Lh"p&qObB(<`T6^[9P);DS7I
%1tZPd$\QZIcmis^A@C-+g7HW\kN<*3H^#u=4hclkiXHn0E:D<Kf@-8WB?YV6purW)DRYL`oj55a3*HU"<o:/5;1IL<I`h^Wh#<Tp
%#^BZfY&q*p[l(L7YCL:m8"mr?rPC^Z5\cbS'2!D1%IL#&Elk)r>)7D^gr4/>+hm/lF_&gKVib^kc>p>T<A&A7ceU_pmkl)cfJEu:
%Mc4+Ms!+@o<I(cO0?im%H/Xr6P!-@6i>8Wg=h.UHLXL:BShoa_ob'$Q;VSmoJ3CsLL8MMgek0uUjQJRO2EEc].N#(UgM&SOTZ8g)
%=CTH*4<;Xj?X!\(.r-!carXOVA"TC(DeLQ&]3NIE]A#unBNL_;][)q9G,@%^`,%tW#F$"08N%*_i4,8M3e2FLKc'<s?;\Pg+5n?O
%(Z)qIh`2+01^VWtrnLL^G1<R(lqmsl+`PLiXueLTcRTR)aa>W1noC8Cm8Ql9\_[)W!p3F*3:iAPQ.fb'jbL0(;1Ik:9WrnSfC"-#
%ghI5++0-UY/Z);Z*^OF>g*/)<G=P#1kB:Y.*F&<N!OJV#>WI0[Ns\YnAfE2D$?G_s@=h[dAO>)N3M%r[A%^ZMY.0qHeRs4`GITS:
%00H\+bELC3*u:L-6j=$>jWSVu)5Y:KZa&L1$]G5#Pd]c;\t6Fe>>D6$_%>oD^sLgb?)7bqX/Xn2mep@m[e;C44uDs=Snq6Xoc?Ye
%]4H2_Ho1`Lmb$+nmq[9^n2S'f.\u3A`Q=(19DkN<NUJeGK=4N,2&&`o\@$ISMKel:0n#I:G%R64,Zu8.I/+L*DAHCO=RpPR=T*cL
%b\Z<_mB)I6:A%Wt#,CTs1spI'KQilcA4s,:L$!DEY$(R(rhdDn%ml`7j:$;5XFRm^jBk6gh'*0F83=PJ`M`+b6>i$bo]?II+`g;e
%6770])RUF.]WSChBsZpWOO#'9c:5e<\/9lFUE9&<.c\GT=D*i$Y2l0AU/O!!`\aPMqTdQfh>J^Fj":6KG,u;#RCTa(r8N,O$@U1m
%32B4B!c<>:7&4\4/aVWB=1(t7]8c3[lc7iq$-[pZ^;,2:5WZ3\%cVl8&9I^rgRDR^D1]R[Hcsd)Jrm!X1-\1,>'&#NX38;akDP$3
%0b<.6am!8P2d//WHf2n,iEj1Ie"e,o1])4Sh;CS/UpS#*c#Y76n(oE?d.D&1>>+sS_PhKpCR"0KV"\cdC.n\2;D=H@N2@ZGdC*'I
%XMs#G_W0Xpb59ut!u:F`GH-%2TVq-tUG.H`F>^>e@"=i\Q0u?qQEau].!OR]N_Q=`a.csQ[rcUD7_sbaI0-kI6"+YHVQekdr$Lp+
%/uOoDh*fHn:Ycpak:>Z5.[;;bR[Y5NSsmXIImcYAD'DGu02nn^9;?S`.j)S`Xb%e3]MqLIe$[&;FZbO=T3b6ohOeFkB;[.upWrR\
%`WaXkWF^Q9&08ek@)V1Gm!6H?c-n0bj&2dcFOn)!n?PQ^>+5/V0Di!+D1!6a,I5SX/`,d9-Pe1M3FdB76RpuMAetT[%.,K_#0tCr
%(iGlVf&X6Nh/55n7+YiOi>[!WNO8F5MrRMis71p:r$oo$6\R!6kJrpM\@)nijm@*#pFedeL\R[j&Z`"j]jBMFFb3+?s%hK=DK]>j
%K42(6*Hf*"?.9;gQ%$FHp?i6[S^)!RIpP#1qTnFS$X!?tn2muFIUmR*J#3r>oT.@;b>NWV5Q4;D`5GH&9.tn3mVFrZCV1-DpWNU3
%YBak'&b3qkLQIYd%mTrBXRhu&+GX/c6>PG1nHdCcK;[(9To\tij(\GSlC\+OY7Z4CU>HhHQ)(%5`h/HlhdCXJ;t(;i]D*?:pd*gK
%^s`h;dglOVr0"K#r&"6"n+bKeI!PhG59n%$*(4]5NC`^an0Jp)Y$p@/e'!OImXe<l86Z0JgDg;C+f94kaCJ'J<Of*k>2ii*0dmlU
%@T)Dma3J;FFr_O[Ng!HA@K:(t0l-n6H%p9&)(`a#3r&=)P77QR]c1cs8m]YrIW=2J?(6;F>M-)To[E$.>5APGa7`4'I;Zsn9_rUJ
%iOJeQh/H>r6O2Qu(E++taN9Z<)pSq;j<tOg&fmY]S=>0\*)@hCjW`M`<mpYG)aJSp&WT8@9H'Mn,$>u7nP!\rP-An=-p@J3DM37+
%cS6u$LnlVQ(]X].nnd"p64M7<%$`0$O!F2Hj710p&Hp$a&]g8%aDq91=mkTHSedWgKEht2Us&/,Ub^jn*!m]\,oL5AgYlimraqY;
%]9S\$,1%DM)E=1bP+M%@!Yd38ANUjOGdLO"kugn<;ufibE;PH1#$HbmO!rSt,X`7\6`Uej(OHfQ!U^E77]6VALJr=)(gQR)4\%8Q
%9#oDMPnjdr`L_$&Nbdr*Jr`SfSgSb:f/Ac.7+/AG4fR[,gsnqF,o?_*rk'1:Ct$fH+9YRB*1j9G+!)u"8D*GHXObmjF%k5GiunF7
%P"c0V)<O=ZnI13"Bu-C/;J7@qU^4p](O&R,W@)QL.m3`@Gq/r\%J9,J$j&+9>i$tr/R)Be'adDr&F@hROCc<:&0reN$33'jYLsX;
%0Upu\,a'aNKZE.e_SP!873G*g"L:n;\_Ip^a&(EbZ4o/1[WEB=^jC7cPCq-.M>maBPKD1L0*>;.ekkTk4r!]Y+D'5p2Na^>K_20.
%.\L4>cUIu0C(`FI7oO[S6%n313k(n?I81S$2`5"gBb8@.Khi0_PJ<3f*Zp3Umg=hfq*<kH!kGJuK4#/l&a9l5a@-IR&#:^m$qSi:
%p*8NA4j>1R;@\hZNO,m/!_UJ8*cMgdQ[urK2KcDAm1qr071`0YhRm:tfuh[SY(5]2L;N];:]dm-%8r52#QWh])!%BXUqXX@-A__a
%J08VQ8JhP@2h;C`7-Oi,G`H+9B7#"i'',W"MQe!a&BZlV-#j)FBR,1tU'oJl+q]XVnjT;=feuJ0gXBH)j_-(q?!,N61/U$"s.t\a
%@E"D/)J(+oM$ZeA^/VJ9k>RVNKMS<pOVE<c,63"X4spXs,ShDoKop5))FC\W@#NG@('Nn*5sU]=PSlA7,7%)#<%ihS4HTu/<6)9q
%*t%'p+B(<baR_70d),li].B`l:k`a@H9dhtHQ,5tSo>P-==@cI0H7GiX!^#:*;_)l4d"Jr*!:t!/<5;JgqR)6H[,I?cNpb.":cA)
%%*aqBl._D@oT%$[9IX3AF#o?.HjV(>Tl!q!C8h7;VKhPF*<Z$.ZrdI0l`uChJP-+PEl6qbE"9^ih)8MF+PDe5Bi/t3_6h)>L+89r
%A-8MZZ(2Gs<VU6$->&X_[`EgtaqQC.^k0ATn5q!(0FT_!X"$e<VJ@Urmm,)4Ocq.!`rI;Q,UMA@L:GTf<=_u_UGlu!852X\K!>CR
%cnf4n'.W]u!([O[P/ISX!Q32JA`X4Tg'iPY1nf6bNA_#aJ\Vdg_.HgTGd()$6m^PJW7FcMTHjVT7'jK+gkHq_8e!PPNH,V%0JFN#
%D6PG_n5in`PoNcM/dYA4.@8#4blCPlVA=]J$@5m1m0c%sUIeb1_G28bUIbGidqf?cZ'677Eoh".d>!?E:rmrLl%T\>4bA4MoPgsI
%>J<L*Lh@?matced+<mXg$0ZN$,c]GqYQn51E[iV;4lp>XC>rPGN97E<5s](gW@2%A*E\_%j,'FpntDAI)i=V@=etno!^M8mSebk?
%@OZuZ3[U92N\L,%KKu(UnZn]lM$'&o0?JeBoqAoE)K7OK]bWU8XduX@3LVTHB@-iM!JUj[*@)M5)Q5qJk^;"3EX5XDeidC@R#Z&4
%4GhWJ*0lW>U3%AJOa0aZ'10&G!aPgf9DB\DFX?<_bI>KFa``Co4ADB4-NcL>LMU\'8I])0Teo<5AH%5cZJ%ZuH0df\=[5r'QGnld
%0a$`Q8'<b!N>CaYhkMTCQ*&:h1<-\dl?^0:nLV'9#fMKd%4-S$@9>fGD36&KR=V?s.?[L3nd]G4pct"Zo<\W'"%;u``\^CAhSFS\
%[?Qf"1^@kDP!stFN![p"BMf6TKh^P>:BUrhjL2F\7_d+rjTDCZ3\/`Jqi^>D+=nX9Q;B1qP9c$:1%?7RpTg'M_dFZ;m4=WUZf#LW
%iun:kL)OTf_JniiR7MOR+c[>jE2\N1Xs$,;2C"n=\Ac$&bA]/4^t)s+>J6uu=V6jt"O^j09J8taH4F^de0ep0IGCr#N1LM(i&%mA
%*B]1A_]Amt6F7">$(XYdV[q5DLFMS/4/N<?4P9NkfrS?o@2LF`;$.d0*9n6b28Z]a"'@4$QuJ?Ln@O_*PVhqN9:N'cFh9h/gLWIp
%6Qa,jquLeNM9KuO5c-BFN=.q^n;d[=>qcs@dF#IJZnP"b)^2@/1s#8>e*i/%(8_P<T0r!2c!*".JAD&g,5S3H*!Ut,-<MH8Ti"@u
%`o"]=UE4!<<4$,(oK8Y>$S"W8G-Cs60bj[&1q(i4OL1d@/1.`IZqr%ka:tcmk,,7d%d7]?4<d=%M/F/\/B?65,FIR>ol[)Q>ldD-
%^;fZ5$'7,!W><idJijk]$QqT<NioVB$5*NR>.t+T#+Oa'AoVmB!^i*C7eT2*(d/^TgpD&(-7mL/;6WSqF-;JQckD^Xq\H/dBL]DI
%IL.^([!5b^?Ebg[Tjk8-C3Z>Y)mo8:5ZCFQ"qi>0>.,N[nBaR;Zcd$O-EdF)00q),d+jZF6NM^DQ/u]l:15rq,7Z-0X=&W+ce^CP
%D[&d"/Ul&1'WERa!U[\d0cY4I_)QYGeRFV7"Ub>MaO1h73hg]t(p5Q?o1&VBMQMC#%EZZm]R"B?JuZfKZY[bZ]5W1")"D/$fT(Y\
%a!YQKS:2O=Fs&rP"f2^$@.:,>5f4l4"[N3m!/F/T_.!L#k7Pc:@[C704/V0Fd1[t:eSQMb'$.Mh:/_j'!?!B>3^Lor"Et#p/u>b<
%'Lc\#7TkJC+pSi"MDSO@^9Vo5?QIkSB!ZS%9@,_B=258<6c\\#J\B:m&H,"`N=hgTF<XQi/)b1M%7N39*Nl<$ht:79HRFPZCRYdH
%<S)0k![iK;,":cXSo,h$Aui.#ASIihjC,;UPT5fB;1,k`EKO`kg0q7NX-eg\44N4ZS(0PX1kkL&XFj^-#._ub#KAu%an#jurG&8[
%Pp#1l=Dl!lK=io6CaFd*O;;Z@'p/d;>Tfu)L(-%_cn2)-)).`BW5qJl$8X>S47$-b+_)p$(S5QHRV:l1Or[`P&,-'ZYq$6iTY2a^
%8Lk(0g[*@7N"r_^UuD3k^s=&B$eS!F?jJL;^r@sd7%d1K":$;H3eu`$%atJ4`56bN/UY$7#"BL*''rgPjm&Bcg&iruBEgc>f"hQW
%fcCXGEc&dH$B#';E]++_L#L'RO9<mJdc@:MAs5RW2JpYnPudB$#>'d.*M+#t'dktbgX/iVq'(]MV'D?[Ad(@>:,\1NnGcg*4s%8G
%r2XiGTOT\bMCBE&Im]@^6(fo."qV?77pmN;F%B*b(o(qZ'*oklA.UbI($l<c`q(.$4He&fE!R#3$3UfmB4+t9qB&!--7BG5Su6E^
%J]\5*JI@+_j:rdC]H9*^kb1\W!X2[<TV7a<dCpiP+/&mZTo0,:K<h"4(le]Z!)t`YJd'i-g5\[+Y'=92_KRU;3b_cV'4ZDW#p!Oh
%$AltPrtq9iUrOVK&+FKs2oI)B(5WqJ$olmtne_KF&X.fgFX05Ff7ia-=/#gf71\64)E&0DbnZRgJ4^Ii1j0&W`']s/:o#ZGJIuNM
%8>&Lpaf'2B##RW*fB]0hZuE(=2(;_i>2!Wph$$G</-3g\j'JBUAa1BWp-eA*TP0;eITX]9!"BWIY!_nC6;5Mp0Npi,:^QO*pU:DQ
%P+n`(%Se)XNla.8OMGc<h<?\X4;8um9o6]-=:#QQfits<'D3/t):7%b&J;j6jQH\4*T<V,a`[eijNIr>CZ%u',03#X$O;[j)Cn*F
%MM>0lOUO\`n;S#*6jk6^+*gA''PPCp'_a<.cW'7/.#YuAe=(uV85c&MCuteXRNVD+RP]F2[QZO%4r.u=q#VHGJ_GjP)9B]tJ?*Wk
%7rtelM3fcg:e*K"Y_f4YnqE,&+q#W89+5Fd,S3f`fpk)jW,#6##I@Wn0?c:O&.7HGR,F8U_AJqB9knQ&'mi6f2X!JSQCko(Pj1V2
%2K79*'cd!99P=d4M.2PJ6gPX3V">YGD_U:+qaR)hmfl#e#4&3@L/1p/UNAot_iVCM$6;J8KOa7kg:*hnK$VLrob=(O'WP.MbV:Z(
%<t)A9(P5e':0&6GCG:Uo@@.r\/dVoPP61eO,-d][-WEt=X'Boi>FAOMFKub(`NkDP3A_DW%I=@:&>dbVp^N';6k:7cT-&q!PPoYi
%)LC?J1,qa7l6HJk9Gs.7gmFPi&<j!BO!Z4DYUd(WN*F?__-G#V%3!$gg_6?D@Q%W7ON1->17o,P9RWL!gH$DF0<Z0[Qg+@2A>8mu
%d.3@RTE<<'RDpCN&82/d8'1['$aJ+CTX/._QL^Nd0d#pi$!@.sfP34,UTb$3V;OYUi3=0\G`l,qGqOb@'P(A7l;3F8J7GP]'095P
%(<^>("6W)6[]LK/(]i0"#22iBJ?T->[?9kAKn-)cOmI3B(@E6@;;$\iBOA#``sj6=@1^g1c&5aj8sJ'C;fe7jn&c)!LVi9YPo'hJ
%"o8;W9+p/=nP7"5PRioYM;Q261AieaJ33gaGf0^$p'_(cq-q_V'3I,r?U2g1,1LV.DnoHbiRVN)QXmL<CP_O4(>kXN,"kA/1J(D=
%g'kB?K",`,kXafMORtYBoNNO'CRDh&5\ltY-JS.Z-5u;JfhJ((gJ+7tS&gg:ZUkNu1n00&IBs5;0pta2?oD05[q6;S22=mh2Oi?(
%,I>L$Z\`/GCc30bCi[n*e&og$2qLKBa"`hHM^fE,5Yn2A^iOKt[CB2&@Od+aam):f)+m"XM.,II&+^m]8_=&2HDF%f<c#-6*8cFu
%WZAc1ZFc@LWE"MPR\a047l&ds;C`479ser^"p"S,_@[iW@NK-90O':ulBp:'0ViL\U>MYhN?InPb_`<817eLJl9c0i3'c4=L+BXp
%!Bh[\P!L!A">AFM9R+K8k_/dTnr@D&33luYL5og3&!iAfEsG7]-'0g:$O@J2]>CqlepS",[?WKujj._I`%sM:$QMp1:*=.3&j2Cm
%pVjBq;,J[50oAGZe0Zkki@m@7*KTtp@?h)OfOtFLY-s6SHCOp`;jg1@9k@7mb'%/BUHM5H16EuQaqj:t(Mtb`;iFEge.=$qfDs/n
%$n*<Q/9$p,kkS+Xo$IV.9er[gNcboO+EuI,98c=V6+/D7EA7dXBh:lr9aGcV=+_4LIq`a6'-u\u-X1R'TkH0J-cL-p&-e"_'#U^&
%IUCD[jCN#6:*AtM>$G.`8sbbH5nFYhK@!#[Y%[L$`^_EgUEkeMd*\G8V(bdFWH7!,i7QLa_)_RT@d+^uRh-i9GtO%X&VD:Ke1?Yl
%B@>62P4(m`_r$,=hBJ7kR'rU&&t7p%6sFB4!4?cQ:HBBs)HZLB'Eq!S3qtfjou/-l/h:JeU,Bi3fjR?R`Bts3d?WG5ZI(#Lp8Lrc
%%ab/0aMP3hD+c!C@LC"hjHN3+e'G<[#C)@><Fi_p'HJ=u[7l?!SfiET7Q3Kl)\iRRjp=X4R)7pE9=(@mdRF^8`#7Y42OWr2JY[T;
%G)gti`PqroMZaj,2OL4\I*kIiXr-FrEr-;h?YD,,F/14oD+0/GBO1D,*D^V_N;&4+&MBo]R1$g:2NU6[FcI2,N$iuU<qcc_B^r_J
%j'jWqE$ZToMrb:(W=e^)R$TNt7=?oc@QKGM)g+0@CTa<CMBY(E$[Po4W3h3kS:i.H'[MYZ#$Sq.8%L`0@<!9Qr((6Hf$("drCrX&
%Gm6me:h4!R3M)nfPpIWHfK.^-Zk3q2UqA5s+;2f-m6fRbnBg(!Lr,t*%PE:Q`BoB(*i5us?PO>4ZMIQ@s$:rBb0l"YAJl&t\N<up
%d%rV`ZO+\G/M9/7XMo4.)i$!CYFS^Pl]*[)BVAW&cqpVQ5.&"V7HP1P^+hL#2Bs4D->KLpaoj$34lr>!`Xj.O;$.OJ3G7P:EpB9%
%<eHRm!\8sMPDDf%%)uXGY#-U`e@qp@a37C`EA\./>KHk445ON*&^Qbfe+$?E31R$:*)q&LaWc9JEeAX9='Z-^*gVgV.1ScbCtni9
%-g.'(asSaC;5c"d\&X"G>(rd.8Sd:.!DfSB4H`eJTe7'm@UGI"":2;tUHKs#qmo)tI2-C;!=DR'pQ^oifa'oFUt&&S7l+`XZn1c!
%+6m#fmh^Y5?A^,OfE+'&`<<\]V3M2c?%3>UKq7;c\U#Qb#oP>_TW^1(J'#.I;$o!n'X*nA!/Aa5n8fBd#BZrJ&nt"+/7ke)"$hB\
%K7Y`u3%m?'\@WF_Ub!A1ZY_I)9)n+SU)]/7-%4[75]"CX*dP1&nH'r\j:u&(R7K`N`C(ileE3Rbi^/V&@,=i:SYfu^^/TDG+D'bk
%L1BhfQ:[2K6[P#"J&sm/M#P<`!l^QqEF9bWb@bS^ird2_h%YM\Cb)hJ9#I'[D.V0SoR:)>rDU'74f(+#TF6Dqa&,%#cmShrc/WWp
%?Vo3?+V5rA%0/i:g4%PgdZGquLe.=La)?dAK+rVdkU]D<9GuL3#%pF\qBL,fM[S=ekYW6B*?BC00tX*jZJ_N`PMrbm@;q&)(/1)]
%#g:]M&((<9+"?,U5!gtO7qSsSGmTgbI>X2-`nEcBch)X6O<AjMMMG(@LmT"M-8n@OhdIu"qtd1LAbT:4$[X.shbiUoiEXO$_\'bK
%Pd_3Q`(NJ]"OPP<80jt6ND[9qG!u/_!uCJF3m\D+>;F:>\j)5RgH+\8R+gCd]jagL"iUJm[A+>lEBBE08s725":$s7PYj_keDTs^
%'hDMk*-=4bej!,X81>8$"IP^b">_4P:)Lj7n`Ys2YZnUu@-(6$&%&*,U1&-N<'e=8T%5fkCU2U^")LrYX`^`UFu^OPf/=Ms),OSh
%`WR#j3CstFBY_-4)>OEYPt==FN?STX+?1WuN\lGqOR.Xq@i2)diHi\QrS.o\3#NQ^9#j<pj9IDUbLAfdM((ioMKSj$2jsVh>+jAf
%Cr4^?3Jr>k3mRo``a,RlM]fmp6T*N2_=36.RbP_^YOY$tCfI.HiWh0a<l/G#Q4>m!/na7d;RDYu@+ZM)2%^R&>U$+!;tlQ7ChaAO
%.*(dk9!Y'D0]Aq0i;@]0_8Gme*eH:*!@0eQ3`C]b/iTH(DA(V*d4&$9,_#Y""Xg!+gS[$WF8a;s\[.k9*,CD-B.ebF\;!:M^a--c
%D=E_/KCL<=f;>&G?KE>nFuZ^V7]b*F0gMJ2YU.F;MFd!-RGfViDcDA-P6uf;*lf@"9:u;Z5pK!!dpSF0"V?r.d_]7[PXG*?;$7i]
%e0o!@G^?nY-?V>X7'7/F[<1C0<?dje(^@uB-TNb>."N+5Jp"2n31<."3Wb4@.5GfVQBXFH)H/nX65PjuT\([iW+\XK*H7?;hoHG/
%-n(gBcB[CA2:*n+dfF*RD,bW<*)kH\P7p[?Nh2Ai((,eC/ZBCr*Z5U=jObAOeL6uL`f-P5:cq/ThS?4Yo(6<hh2<.5/gnV@%Eu]R
%]H.e516d/9!YI@7#[*<Ulp1VB(kQ$M]J!\1H:66re<':7#f0IS5o:mREeWb%F^;!F7A^*Bp$P^>R`_J@dcYcq6q`h02i\iO1$!'c
%d]ttFHs7G-ArfpTH/VkQ,[g/6_pLl9boG0('^RZ([i4(K7sk3qp'M8:d*P+@%Kqm":V$Y/d?Ooel3dZ_5V4`.d@uAIl4T1Z'\3Oe
%psUL<):p;X1C/kA'G!MYQ:hh2+k_JjMs+C/S/-[ofE8UYhq,_94Fo>;A(:]XCE(Lg86pDCAA/A#:lN#"kM=NO2c#gR&uC9mk*(a3
%>,hEf[c:K&?1#r_RYBh:Y3ks@>TNg\H#3o2.nh2?4Km1X6$&)rfr/i2>K,rb2pO7,T%"5&f-:abVqDA0,k[soH!>VPW.)*i0fbRh
%3oAma1X'Ic*bS&M=!JbWch'p;TkrQ3&_]6&b[:d9F0<;&52IkYN4XBs[-;"XNuB3BF&WhUV$O@9V3,Cp,+-q>I$B5l``ZQ9DIr<T
%Pn,WE+(PQHlLY(Rodj=:7t+MAP</p+p`u;`;K5KiJS5`Gb[PUW6Wu#LPslQ(jdR$-:J3-$\7-:I8$/a/%YH9^$U;@dg(WKp>!?Du
%6._F],a-PA[Af23rV.*VNmLpsG8<ooJWk1)885J)(EBfqU\,BlHn\bp+PY6\"q)rCU_0O>J"9`uf42](,@H1Cc(m1dMq+^2!ZtE4
%k*7spbLauM.LBelYr'CmJq]%N-C;<j*3Sd^JsQ^!Aa6BH$BTYfD)UHFr?^]CONr:e$5s"`QEV..c%e&FppDR;%?:7"OH.,d3j'AX
%6r9PtGdn:UqIs3!_1"D-Iq9Vu/k:k/'*,`Q51)$n19U9JKm*t.O?_CYPX.Y.hll8WI#_`G$*9tACT*=E"J#Z52Gm2Y07bV.QS,:4
%2?]+h5MY>4]I.6;MkfYV#/uL,H9pVGNM-bi$%[bb4:u\cO:!d#QiL0s)+'k8Ys(kH+1;soWHGQX`gA)AIXNVqW14N$^5'.AW36`[
%MMF@eEC0g'b$5JO@G]/A;tZ2V.f&'7L[0>`$=+#((N//Z6ckUi=NDuEn/$IT7l]O1(HbX^?7s^23'a7CBU+K>R$;SoTs*B7L>`@!
%OmV&L1B[qF%$tH22Yq&a=+0koR1o\Hl<4kp\+-bYiGcVhYdbG`]cb9k#/7Wu(Y4in;PM*knCot7+\2BB1fFW-*9#5Db>.T'3+d]a
%_qT/:nuqZC9g$PJ&qXou.=P`Q^9LG0iIiU*.K4%70P^F#$`kK<CV(q"3!BYg&ctkR:mduo>`;<eo*/qlMku&HkSSl0Pol_i[4,r5
%MBol#!?'@I4&RU9f?DkF\Z/=n1""@UrQMpmC,JJ3db+qf_snoVj^VKN&:TS,97P#3G&0qKJ:?(dd%m*OZsR+f0+mm;<9W'c6E6`o
%-\CF6Gk`0Y?@jHO5]Def/&D!1%I.JCp4YsEqPOTSFbgR3EYtl&-i"l)GssfaP,pX0jnK]*N;M?j"A78k.B(+-5uFq5L/*XWNb`t;
%L,fENQ-eW7$L8HUg1e/[e0J>=!Dph1qiFoTkP,3A.`c?Qp)9q.88p;mJL)?QLX!AM)!gUB!t\^[AokBs*D;$g*k?aENQ(THL#)[Y
%01b;/*%Z,l0t`Sa9bWUkX7RVV=PIZf!?#k*-!`dSm$-LWLb8Rm)?lHk6#YlFr<Ap=Ug[OAJ]Yhg""c,S_+^@D.BVaBL(44ja5MnM
%NpI'%EfiY%Vg_6g$M[>u!O_`$.Yb"/PR3=80L@==U5fR[R7SG[Kq'l!af-RZ(Z\\#BSiJ1G'+t6NAh`^OeGED.HD^q,o5/NSuIX.
%d9#G.!]#>qh;^(H^XN:Ji95H5>bFHlAX'/0]':(&C&3D_hD@)!SU=C9SqC`nBkTA5A'#oAi(^AW6A#S/<O`<c1C*!G@WKJ2p$GX,
%3KOrKEmYm_FDfq)FKihDWQH\W7D%Wb\er2Z1NZp:e3mlb*^tde69uF;;,3YZ*#IY7%L8[j'(FQ!ZRJ(n7@>.$&8X@B=TNoI9ANi?
%.kcZNZN5h.dO**DiV@2&O0@'k@2lXuL+MCq8_*^0NjDRHLEnnHlAuNV=^Y<]qUDLS?:E;M'rc%Z$5\,di<^snq8leiV_m&!`JC"&
%rK)Tta*=H+@<9d:4U8tChY9P.5\g\De?siC?+dsd:f(%[7=A-p6/b\:&hF=7E\W;$BZ<RQMFoA<:jrhmTg4ST`!d*(j@;^^Pk#ht
%IW#6aXN9PCpm&[!NF.^>^`SGRSVcF5?n,*l:D=.uS?9f$/>h3!V\nKX!4sZ:l2Zaj;;,Y=Q!i?Eq#6^6"aal]lUgB](7ks"mAMoM
%0eN?%4_=GSdO'6MNkUiSV/VI\P7)$m\Dj-l!a2"Wk=>!a,Ni4p.mAQZl+s0G9HF"OCg3CV9&n/P%*esf,DaKln.pe3dSD7GYh6mg
%E'-IPCMP-r1qjWC0KJIG,8c0p.kM5B2Q8c9/qQIU%d]^<,c!?^/IU(Yb14$.9G';i?%^`4`jW^k$oX\)GK$'fd^\]?ifENJ^u&6$
%Y*2R<#K:OZR6k[B#7Um,@]-"i"UZ/UF;p@AW*nCG#3O^DNLla+.r'Y,fm&"#.1-3B"\TU,hBs&O#qg[K:kdB3*==O]gBnES1WFu`
%XNnUcpCs@[^^Za@>_2'7RCqM1a*H0r_UP1GE8^-6O6=AX_\#lJT_6#uliA?\&Y?E?Q&GB5"l2Q-o)dJ/&Oc-+,DHPC;)n\t&0tkm
%Qk_oAjd0'f=E`^12[D.tQRlqm4CZM-K9g33'?H3tau?tX.=u#38M>tk.l%0E&m2^Vfu/29>TOVNEu>^i.UYn@`JV`*L>q!u@q#k(
%AK_g0iiR7E$LW(6WXST>;8nE)HjB"[>-X&XZ[GacFgkkMIN:LB&%%l6Um+[S*56IW0eTmM*IXt.T8=2XIt`IASprkplsFr)rZg1)
%R;IalO_YrD&s6tn"W$)9"(Obff_i_lhY&e9+:T*Foms[t.0:GUU&&@U>%f78$ng8,3ts"t/)GSkUi/(n&VBKU5P/fsIZ#-Wq[+gP
%omDKO\`,t9>eb/d+c!f/N_:Q-RY?JSc7R6CiNu-gY0pl#-GEK4+@)'dICos/+Q6CB(kt8YM/l-'oY@c&#_FTpq$*po85OPkd"9+i
%=^Tfl#^G'Roc0W&)qj$;Hqsb()fCV&eti2(SF<f+]<Sjr`>D1(=g"nbU:;itRDl!\pf\QLWKHj"U:s(uLP"ot&BA7B$O2YZ!X`nK
%9miepb<o3o9.TL_21/3C+b.JGr@%l`'Om^QaR?Ce6!V7">'.M&^P[OGZ,,$BD"^It5]P$j\ZIJkD)OqgkpmN%]sNBSP)E^%kDW2R
%HnP@p[UI%D@_,N4JsK#u#:0i!^8o3<ZK,(()J"u?_p`Xkp(hLn.0?3Wf1VCB"JBKXK*6`m&;Pj/FD1NB/OCcHR1SC,'_/-#Z3VUQ
%Z]6/`mk:n!i@0oa4hm3a4U]:9h@:Z<'43pk0hjqr.WI6:>8AcV[=i_-OO>;!K;B'T_(@/M7MF?h3Isec(<[mL8Iq1+3aG!$nbC$e
%?s'0FT6kRC:3'PU/k4@N9-grQm,ugG%<R_8C-0PDnZam__B\u16UU/%%8;(PdP!u+G61W+41]l<OSkpG2ta8:p<0`sZRnPrr<r7"
%:a9sP$/^!Fq_SF1%35U2d9NbdAL=8!L'u=<Xf!^S)jhn4EE\]gBl)m5_1Et?2afH^*Z`,l!^5X@6:qsL-aEL4*r,s:PRbAUV>T8b
%a/VFG_)$6l;5]oY_@c60E%0lJ=51?oB\"ceH@:AD_q.cWLj?`lmGo)m!k[F*fqeA)%5,b=#oink^X!`//$g^H$d:6r.\kR@f58gC
%NYnJ5Z4[j*+_Bb/EM0^a>X?)2pIK-W)GTmbAWge1FA$$mkr!.\,_@?Lalt<%_;Wil):\GtL4Pq*HLRht3l%nI=VgJ@V>E_t@2LqX
%4c3!TejJL)#[3q0ck<m_5-)bZ.d>;$TUi>nb=5Z:/H7=L1i1GoJ5c![QK[F>7XCn#@>\'+Fp[PB6#:4["U_1gI>;L)/O5T0ope+i
%$(]u)npr;ppklrhs'1JWqY@X=0S#gBaLB8])_4<t/Dmd?Ys^6HF62El-T^d$`*l9E?M8/p4_)P2r0C:1o&n4l,+'O&=T@fsZEg^:
%BP0JZfe(+%Bn&IIeSV61?&r$jqs(tObtg+hH]M2WoX'/B'eu<,S6sa&c;XX^_;N;a#fg:iF)sn#K!)/Qi?M=YH20Ml_RgK/U^DlM
%2n"J:aj"INF`D#PDksN,oej_cCF=p*WX(;Z]l83<MTbk>),!Bh3kXS*B[_`m?mec]Y$aMHK$2;&=[?"Oga+hiM[1M6p)]K'6P%c+
%Y3_$%C5*7tIYc;)k6H<H*K,*e6H?2\IrUGeGULR'L@=T&&ph.UBn^XqQfER@*D%0BCbuC`.:R+,H%Q+GV9B?8\0;RUK'@*;&M!2s
%`8L$j*S&G-[Xm&3P,&iO:.60To?s#e,:D9%c;%6F-V]>oY8ViagF^t^MrPNZWdpJae"a=\]`Y>@'0"a%KIDZ-d-u2@%DtVnW/=Bg
%Vq*?`0P<SaRLXGm(7[fa-]`giYtp?MD.;55XldlN_[E7b<fM/p6;2V>0hgPq=nITZ1J06R2;$h>k8P?)LKhL1i"5s-:qh?`b.5M8
%U:?VEMJ,@TmqbR,s$c\11EMaZ,>5A<)rc"Bk<1@4N4146F^0,E9EQ*,L,]jI8"FJAofU?9$f*/DKa8$NH>d>gUrj!$GNPdbFJ]M@
%;?[D!QX:khTGFLmdGZNH4["s8%m);ED9[5=5aOO>\6KFEddjAhX\2V`K_^nW7>m,#8[^/=`"O.uWa>0+[>f"L.N]8uNRlkWML94A
%RZoEKW.=!\7,>GbU%:!j1YTl!ld%K^7\nk2\A@:rG5s'45"nu+*=!?>\8dAJD/h(Ib-)C`+aSja3r-tAa/OOA.iL`^^1TjsN'R<B
%^31^&>_efRfJ7*kW0K:)fFX&=X?>=[QaN30aPVs$*eO!O2n;9n[N&;^<*Dl1'nIciQA;4X(,CS.@QVs;)bYV7eNYGpAULh?@@_(h
%\-SI[!oBlYFEQg44Ik=XY8gHF8:!\C6AH$?4s,Q:/&L#.4V]Xti&;iXT9D[QUCOM>mn@#U;/JNRK'>pgg/5=@$XS.Q.7,(.$Q!5-
%j-o&dY!":83VY208,5t,@>U*-Qpeo/5LFto/IHY+<CN?!Lj[.l1P\B!AZ;X>"%e76i0,K1W`F.L\XoW?k=X7")0iWU?IX2^3a@oL
%9'u0=B\7LYRT`qa%`@+!;?b#0/`Z`PPpo0p@>LGg6DPMA_>7n*!;Luo3#=8^6LaZFY$0$OCqhCUI^9/%gXdQF*DtJCIFn*IUArh>
%f[f&kh8CUrX;](7ZBbBa9n7rg7-f.fD941q?jg-NU/m4^=jbAEbH=dSnJR\,Z=:]c\\9Qh<UJU"dpm3sj[uT"kVG02UDaS6i0ugh
%Q2K?bWan_GjAjN^hJOir$(*d5PV2.)XWYZNB[i<n>!.?:WT#<\S7ebp/&nonYYB85F!ElcaVZlf1.lj;rPlB_&D(\^+V@s5,.\Ml
%_@6,uJik8UY:-]r+5_J"oZ_;&?+Hi9kHf)UXZMe7O<u;o+Hd4T'gN4m<%pe6D#K3D4Bckr,F1qAp9=:>p7%W@G"5s9BCL%*WA9+G
%AIiB7OM5$YMS%<fk_7hKo&<<V43d.`>WibCcmWCg`I%E)?Q\t.G;Xchme7ZD?f9`^QGu`2!P*$oqa[1g*d9[J1Q;7T)nB[KA[H::
%Q".hhee4'"EKd]VlV:>''rAc2c>N7bEt%38UU+#%Xm>E3'@BNLg%Rrg%rDrmfsJ32pa8_6!7(4ZJ+L1b/anY<E`cXd^_:6%`B1Ll
%8YsJqkc&UFOQ](O#=ZlLV&kTp;d'9D0MKsR9d=WLkKAVDh$UQZL?.A[hTL.mm0no3FT1O16K)O,>>jJdf>I1o?QRf\F,5oe7Q;tp
%R<T6S^J<``'(LDKI-+!bJOaU7JTq[sKUAB]mH:P4mD+3WUQ6-Jdi\QijiJ;_[%t\.Cn/_qB8/sd'E6VH!s.2aqYA`l^$%sU_/_EY
%J3j2I'oQ#B-`KKqij)T"G^l5%U.@Z/o-D\1TX^TI:VZVbZ;6);rsoVm>a2_<I88/55=0ZO@k"&U@J[)4?6TE)UpNg2N$rUe5tRfU
%=jmZgm@E18L"/RJ$qObdc<qr1gd0j[:IKSlU,oqs7Fpk1\f''mC19Rj0@M]je4%6k@<IPLmK);jgLdHf)UWlL=>7jC*XCAsZ^pHb
%-;j>b:%g_k6iu3"bam%m_M:st+WWF8D#@@f*MSgDk10/qKGuO80h0BunI]2m*>a/bf7$/aMUh[D4U5C,Ch:-G=EqfrqRWT+a25T=
%pK0Ja1u%)t=(F/;FjJYF*4>\Y2q%6Df9?%JKE<\?;kD*,Tl&)UC'8SFj4s&jMkm,0hm+Z!e&I>Wln9m[rFa@;`49/:qnH@"mOKlk
%4[KU;GuDo)o6JD0!eF0Gbc"0tW?o]t-0$U?fR_9j.2J+l0PjhoFFq@-.N1X5)QM=`-!kLia@$Sf""8G6%&D']&&dV%H_`MId0[Bh
%&/r^OPX'(\3Z!OtmPB<00G#NtJl;b&>&Xl][Cmc+'9[d2S9II[f@psWe^_"`PTFr^"AdHs2;!N#.Db4=7CPYsHB>rsbqnHQ8.*@#
%;;##*Ol2_(U**![iQ;FGdAh&Z%k]@m_]r*gMCs*:`pLlR,P9m*;mc9EfN9HgBnYNNBE=G4#X`MqR@dVLUE7C+:)e&?oibg`NhDrM
%OA9qB3]s/f\&BDjOa*+)kh=oOfYunW(?#I$7Q.cF`@e8nj=S2qpG13&jP_.\F=7+MbA)M+`&l-uSg8Ybo7V7[+#)D7gF.e]I,kj"
%e%/pc8oukF"?8`ZJ>og6+R<Krlj)DqL_X@$'.%nBWng/6HbsS$rH&AB7+P\'OUe25H:1V?Eie+"RA-B!>W,3Od<DY^Y^QJ/);f8_
%e^\M[]GY<Dkk-HSo=MOs*4Z=:^mpkHmU>H21r%C*Wkdk%1/s'jrU[R7!l/T1i[E-7#Yd&c'SuO"jTcNO2)Sm-0FK9#XOT1@eD#0^
%dUhJN1J438OmJj`VJ.9uY<>B9;?,._,\ZC#,9UKZ>#Jp.nsmP?NN%g/rY\0u+*>PtFu>')r^jt];K)COrM_R]8.;AmZ^%$AK497t
%W=G4u?<5',BL]FSjtXi@DL(Rh0A1lQU4Q"\.Yt!?W9([;#J6tV7ITIbr%EETrBD#72IhKe9*r7Krn27B)3k5j$a]J_7KQ-a@?_m5
%Zrc8HPl\*<:ciFh^m0<')9kt-3#,g<qRJJq;aKEBJu\ViBgaubb!<NULI<&[M`S0QEK,/'Ru4MIKn0B?"E\.AWq.O5gD$8%eePG8
%'e$c-TGursd1Sl8?$[=n1cfMK_;Kr*(hV+Gc`)cYG"F.A_F1dp!a=&_)I!els"TmX5c?'X\C5C,[1#[7cc<)d,5!BJLkDQ@TC.B_
%GJ30gqES3*VrjqMS:m=m8lMfQ/j7=Pns.pdIW.\L)?:-P)MMmE0V^fq<`^0H9_ooI%?T$E;-aYrn'S+e'UcRU-Qn]:ml!maKJf];
%9BB))>-tM#^$8?04Z$>U&,>JgO[q&>mmRn2(Aqs-,@^JJW`:mJ0654NA]225kpR%leXPch?^:DLY;Q7:cIt?Qq85/4'KIP28:tRn
%]H0GY!oLZPh\^73G(.*h1e?^u8Cu(@?cVXc,G,Mf7ZV8/MIEQ!in2QDj%]r7_R_2X.W8=]k(VW*fTYC6:6oReeT0OR#8<\r2_"`u
%iP+..2q\;ta;/`l=7=bM(ULSmY&]orMPUrA50U#_e#$jl0;aF^6HW8<70V2sm56VK::FJ_e!.FuLl>Fq)WNQrW\F?F$OdBtS9\ks
%+185=SnJe^3mp<j9[9V6`_nXXj[^[>Dk1<oW40i$bFl/F`H?uMhUnKiAYB`'QO4T%T!SWVH+oe-nm6X97R\O7nDpcg`]:^hX#mn4
%.!eN`*ND$U$f#t2op\Gu?C1`+'`l`B[u%g;2(/nfe3</?d66J78fUoS=fg"4QW*VRP)2K%f@2H(q<b.5L/)/D_jFS1'QQVl(^E\H
%q-SqYWNI'VIuWZnZ897]MAic-#0?r0&a2h*;a3eG?=YUC'U;25XOe>n@;'Zt`O/n0>Rg+_W:WnaY;Hr;UZ9408;GOaC]TIJ%$?j;
%7.l*kXjKXFj;=qn!AkR#P?%JF,Hm3ET;iSl508s`:!Z[pMp14-UUh6fWOpBmm#'OiYNfe3NG+@NR?kDN&N/pV?LnUS,>qr,,i,Ct
%<;[6^,-ltVdAm#!$A>eT[KTYRB=9*X;cs?C>q;sZi$oqo-(FM(L;B2A?/Au?e(r]D@.KUM*pTl0L8_5U)t,2VTLZEj;CmE+nj&p*
%QHE&8LfE9EC%g7S@rpjER:<O`gD_UIPCMdRGJT+55L\-[3f.oI/EH-cKdqr]8/H4Nd@1"I<1q1L(ebj38?SudjQ\A$s1Ed:ILdod
%38JbK\JR&LefC)?FS;f=^hBuGe?@`R%-3DL6Gbj,i7re74]4lRMYe@]W94HSa6VHS5)?d.C-#l_Z9h<\ql0N[MY3FCCJQ_N#R\^#
%>!H$l?1f"^iStjOh76i[lPb,UbGF3ANTVWN]]&;sIn9Z<1NFc#/V_S[dRp<Z3uli,/"997'O!>I(+5_X63W=,OqWY\f0l;Ic:U%$
%jO[3!p*>39ooiZKX90-M7@,Ih2Io$JjMa*_6ZI_PktflkrL\9qT1sa-8EC-kB=6j)G[a@U_P[u9m2eeD_<9faXtcjW[b#Km`'s3e
%hhoX15*-d)(dq#qVO)33BB>ClCVgXW2/Zl`LW2%mS4A_.oRIg;1oH_T_^;9hBM[dX/nG"pm]h21J9V^_l&`;$]jaQO),[G'/YlH&
%V?n[siQe?5,NM9n*di$t]c;GTVU,"s@^683O^'#9\2GPDi645+*-o(=97S^M605[YiJ:L+VC:j*AOWEBSV2uK2HY&`4AdTplJpm!
%o33b1O+D^B36pKFH?IblR'$Zd8@Cq()NY;l+k9iqF3E2Af`PXn&;f6spWJE&YbhspJ>9sj&jtL)Qu9Mk`Hf#dmZ0N),$6O#R-WU6
%ASDZEH9hV9LTP3,T\V8?DmIX:+0q>\9U^I4q#(]T2miDuFrp.$VJG#:*\#A2h'MDdHebi;"[7Y3R_-rrBpS>6"0ZM.)F/+1:0XU5
%Unh(;c?A,hM&s<E8L@,jSo=F9>H)o9/N9CW0a0#i'7(>>E7+4!Wd+P\cl+]pL\"EkaZh>AAWs`'q+*lKi%n>Z"g1#,<5-45er_Cc
%QLt+]H)dB.orqi`jk^:D'';bcRZe5-asLX&hG0(Dfmq';Bp3DWf!RJW7&blU<^TPWp@]?Y:+c3)4Ql*^iSE+%@TS\L/Wn%2>)r&6
%h'Q'm4bK5oi=g$`%Qk[%N6D/Vl\:iZm@O>+@<,+67>%UA>U-OO)+]$dV5IG1H]FEfP._r!_<OO4p5,]Wh9[4&Nj7=&DH9eEjihhW
%]1sXS[)9HB5ZPO$'\6'_C=)fi7DiN@#?e+M:j<)37EWVe?0epP"5QDIS,RsU\__1/X.t%\\:dsLD2"sD<@b;!eZ4MZh)k*:.\YKP
%+hAl8>aII"lq-E8@Sr-"e*.jSIiJOR4<<)-,/>mp!@"f5V"`hdfenDj7T3QMT3j+1J*FaL#Ge'H9_F(G"!5oaZW?-29D`(]]nk&m
%g*dr<HYT@emKaJF_u0Y/<rI*SI$mbJqVQkV+T6C%P2l*lpB6#P^"1k'h5igL)*F%B$%NIc]qhTnr;dj#O^JRt-c<l<Qt`fE@s>'U
%5_q8^n]bX'(&#:o?VuO;h4]d-_KB9416Z1RNB#&0nM2Ra!)oC?q2l$6Q\0lM[&CNQ:T-g*\"`gBfi6qK7eeDN]In`:-K7VH@]f5+
%kC#)lqVj:j>bkT4^?pNr-#_n0a3oc33`6W%lS0Ml`iZ0U),!p&Nc-ah^$4YiQ%tGN_5,BmacF:(1LBpEn,*+==sL;&[UQS2Zg(%C
%PP@;'%L'h==XtcGT(T/j?$L&s=6Md:#HRP/B0G"XbmnfP[45mJrIR?M7JM>cq!#R5XCb59DSsbK\`:06Bp>gtMO/5L>#Rg3E3!8;
%\C?eFCXJuo<p>%D@<t)[H9[sdV2e[2_ODd=l\*0N%(]i=hI.=T)VI2u*EinPJVU*2e=!#%?A@!e-+2.Br2Nma%(mt?91g0QOY'HE
%"fL[sSe@oRj#LPZ5eY:X0;f5CeD*ro/CATWCo,H'])BGiM/kt]m\S\RB&'Q)1,4p<0]H9$_[s/1VWss9K"C?h^`;.s,/JCDq7.dc
%q3bC2V*KGRBd8Wc2hS;Unn3+6]ucl5B&Cgn]>%LLX@J1Xg\1&'d'N`HAlX4Vg+)3n9`2s?`L8f&A.A\6.VrlBOfE,:43[1:$qJut
%,s(@l@m_]ue(f7c\ke%'0Rqgl.hN]/EBY:Pm@A<\Q`$hOCp#(%:ct$6A(FBSADJWbm!_Qn'nfN,E@hOngf5Er.VYR)ZWWSkpEd1Y
%!A?_!jp=:XA-N\3QWNiWIJ^fjYg9e-C+eQ-,D5!)",[7Tj[Uf4bG>uO6m&164DFqOYi^D_FZkF".SIHUA:NennO0@J*\j\#>ERPh
%=m!TNNG.B1QB8#3G\Dtnf6f@OdI%(8Tk5FQW+YKMqg*Xk4D4bP7#>8[Zd'68J2V5g.qIhU<r-jr_nitoaE1Au$$\l*A3REI&]YV+
%&6V%KN;M+<]2u51/\Fj\Kdl"Pm>B>M0##>[XhKo0T\I%R'In9s%q&Hg8Kib[)2R?c3pCma5KUgRQ*)+p5qielcCUKXI@Q%/."Th&
%'kOOCI.(8K869m"E<UD%BBCNp4oWCYm;B`35ni]EdNtGZ.QO_3K,iZXjfJ%fm.uc]QK"g5Y7+l3(Ke-c^=MO)_OAQ9NG-#cBp?7/
%I.$^==XFi'7a=6.,94]b,QFju'%'MgqtUG_J:&SWBj>qqkVn7Sn64SR_uq['\+>`pY9\#X*#e[T5,t*GR6'%O-tdnNTM[r)RKko)
%n(8l<hV*fngWJ<O7rsIJ40:UtrbShRc;N(02Q[XlaK)lGoY>8)\/aWm4ub@bc]WdMf87AmEt+[DS135OK0=V"pW.a;RIuf>?66@5
%7;saU8u:Tq-6DmfMuiooA?YMJPX_RP?6Ws[6G:b*UPCb;2uQn7HbYnYNY\NS1[]@S4#']kFMm?o"6Ypb44cE#XVT]/>3/6Q+6B9"
%dS>]9Wg;,-P_LsiOHA",W2ThAOqpnMhV6]Ib\#9uI(&b>9LEB`I+UC/ck%RfT(Fc,Q6'@-+_I)(2bjLaI`[E4*fuY:3Y#a;$X#`j
%ACPXD>CNo)UXA%b80Ft&?ME4WItVpTH^(<mk+b@!`AWXVcc6JiH.BZGroh/AD#(Uh7C1R\:hJ_`f(()pbh"CG[u-)[@6,-GqG)u=
%do3(>+u!:*c(a&\nr_cfh1P3I4-oH)m5[$\I@$q$d5k0?mbG=7?e!U&IjX;h!ks"EpD(hr)?i6;!e"pnlfem4%5Wdk74gsG:aHF=
%DbQ<8E@rocQ]SX"5b\oI!\O@SjN5Y8l:`^3,YH%FFeUQ(V:=I<[BK(N?N1Qo;1B/<WI_#sFW(5aLTAm%JJ8Z@N$+i];Z`\q;$$nD
%?Os&4WG?5-&d-f68>#4'S^GqLPZ#&@g29scQY@Z74+8W<PfUc\@E&apDF+a/o`[j#)?MW`a0`R'+Wfd+c>3e?1E0Y=l6#Dj!uFq_
%kH6O3'%-%=]U'HQ-PlU=5u#"*lD))XjTu'2NO0(^5@I=<\[nc\0BEf.>L-;4AF&72d_\/N=o9ml!suLsT;S!Z$Tp[\j>rm5MStp*
%aRbe=`/0)#^%jYr0]>Yl"!b7"*?&X3eQ0XYf[H9S2cV'8!>iG9"GIZ?!Jn<(X7ZMPL&(R_hgSeZ4TnrGKcm0%hi11EMd4a7BY5dc
%moUR#,V;YTr;Jh+oMbj%LB8^+#-sB9fALl#k+dHZjJBc*,V-D'k>Z6sn;hib1+HH;XO-=fU&l(nXu(;[2Hl5e;lUcD3H6!m5fb:T
%Ru)KoI0TX8$"H)c'Qdg1+3$QZGq4RM8lk&-=jlTn;=DT6bj:iQiko</b`^p)eLM8(LeP*Z<9&l4r@D*BJAOY-Om9igi(2*@es!c_
%(,)+ua%^Uc[Rq\!+ct6Y511Q=^8_!`;%,cf]_P22kC&F!h'c,mjJkkIB0\;k((ZNZjUZ)n8[L]M+]0+HP*TbSX"]Ym)^kuK1i\f"
%/79eK_(6jH2lud6B"jFMM5OtP<,OR;kXbF9U8!ga*JE16II0p7V'XPD$Ah1!Jk1,cM685k8djJpkDIhi+u.([R`[T5deITGCIbl0
%R%@n4WQ#.8I#HX#FFQ[@![0Vp?o(tcV\4)XmN`]*Vpl?MR:`-hImS.YY/`,?ZB:S[ZtE_%p\MRVe)I[15OL1O4`n.k<pV=tl@+C[
%</1aE&j[.fWLAQE+pX?gp399g'FToo?dlI+=X^jIk!AuHKBnr?7:g,rNud&;]S%eU\#GLVYmjkGm6.)KMqTFr2WkQ>Cd^b)&k[:b
%U%@pB:[eakF5>3ZUJ:2KO@F&HflL`'EAC]MP_AD&#c)rXNS8h83U^<]nGDYTHgI/l\Yi6T1qJ7MTG0#)_Q?dTW&9R;8#/.]&s\i2
%.tcZ(I$C[Yf=CmL/VjF8#WOd9-Iu#%XN*FLUl1t*N2?,pWHJk6&Zui^H]Hd]`l<l>?5EG.Zf$qu`#(2LWjr:qRd"DMR85tafN#5i
%.q[AR##WB+U(fX(7r8X>p&dS6[LfAYp0Re"9A",8M&K!7@]70ZI2ge&1096*_BiKM"fGkO>9d;F5(8?qX):oU=?kod?!K<Ve9=*d
%847Po!mK\oX`C3Qb@eoX\5t3XRN1<:P@gU38!/?k[e0P8/+?`:F=KL,!7nj"RNHJ@OT38h\^4C9O>W3f="m54%%jhrn<SYq#Z&MO
%'.]6JO!fSi`"O&.(&V'-aK:@h0QV,JkD2d5>%Jd$o(!r9Mq(1nR/X44?arLS?89+#>4g!Mq/',PG5TEW-?SSbgTT).0'J!Kf"h61
%HX.;i@krf1C:,!J(ktGrX":+"J0b+>YKGa.`0rG[=n7`V^Z3*bjUG#ifO6SFOAci"VQ+RQ(Ran7/S:R,!6O_ecp&M6apV&,d*_p=
%,\&%!D-RV0,C2VPJ1')%Q7,MB'`^#VV7%E]9W0"c*=OT)<q$.'bedU.%dNR2MeP'*Htm$7><g$>B%QfDIu%QHoB/o52@i/i[glT<
%CYai`3%Y1qe\;]5QXp>,Vqa9%=#)ZG/6MWKR;n4IX"dYFlf$AP<+luIe4PqSVKo,NS#Hm)76=GVMtDf70Hb3f(8""Lk4Urs=%E@$
%j6Xu;6Udm`jk4RDp[,FIl:Y9m^7>sIEH=/*<W.CQ75p6=>PO.<9UIG3%hC24#T2EuWD%L]JX>p-9hIj,K$\WAV-VEc4/pS"Y?#L7
%/Q+)K%9I5(0$C(R-0NhO&\VnAeJ20U[E]+ba!\(^YN[TkgM1(9lB^XcB_^te&n"=p&M_I`-K*NgBo4n([5-:tH=Z(Y?f1,Fhc*h8
%-`2$#a_%TQAr#jE3<_Q3[-EI?TG0ht-RbSI`4&9d1ZhDK<Dk]M"=Ad1+u5EY&u]oUR"edZn,^Oe.jm)!_s^Z+ft%@o3#;$:fukRY
%=JUimmXC`"#`=brrhDRjOiQE2i@:3USu?>(@,/Z,C*jjG5Q_Ku8EWC@?jiAqp731qQ:TSGn4UAESI!:skSB^Y6d;n+D/pX>F::"I
%C@:EK.(RVq@A'[)BIcrD9UGLJ-'8o`L7$loH0V(lbG]^=0bSV7Y`q!o>!Kai7m6tMd<gMFG&"6Qp`,REBI'#CJ`k'H9@@_,6kD0H
%fk5N=^#Sh$Y+j5WM*7T6;SF/niouJ$)gAYBDj9o=bHONg+/aX&N0ERJ,9sG^FJ_"c(*,=`V9'%\;*u!MZ;K(s@,+ErZ2!D[.7gd8
%Vu`Mc,sYETB@?2P.No/8lXUM?Wg*,rh^93Vqhi&o$[,aZ\8'6_On=Lf?3+s=fY_$O.$K%YB\E&RJagCoMmJ\9`r!).,&<($V0;P)
%jaL:E>i:I=GL=AsQ;P7i:k'HX@:\!Zr`DI>6UntB-NG+&WsHRJ44/$#l*TL<,E<H!0`FJF-!#r>Lid*$5#a3E^FQ&+<[=tM+@WXG
%LdS^`5_)i3f9.c^:)JQ1;Ug*^$m2E/d2.7*2o\naQ?i^#G^LI,=ma77kc&*a8e<A2m;&qH<8s.[-MM&=EKPWAX0rac"\,(oNV<?B
%6VToHL3]3t*>LtJFjroW06)$;X]Q<L3LA.-^.mQQE@Qo[f0J=DI*J.:3.(g2[T-gf&auGD`++m!]Ys4JOEW4O^2&+t-0Q'K(@0Hf
%/a6UXdcZTBN:Vnecb).5h&2e"c,X-?KOu!9[1;+WY*iFfF._g<IF:?&.F!E%cFeB<G)(glh.#c1'6JLV6gbuJUfAY'h]j@6&Z!Pi
%g2?IHo"9ErR7ATf'HHWDgdkCKe07nOh/RM68$ZaHA6U@]KSc%LE1Wtr7RCFKHg4EJ.m;ab?Ufp$6W->I@)m7J?a?1\!tk*734dd#
%['C5/&'DAmO\N2X,;Sm8B3.PHX>N>XGW!rGqoZ)_g`j>X3fpO-_mf(j^tN%&jQ>_#CFM(,bf&Lj.JqdjA8?NP:XZM<*APoCdK(j(
%XHcm2S,(<THM^L>&SVHU/$fHoIlsq=n<:<1JR!>B)K\5VTOld#Z_`^+&!/`g6mAqc;JHUr^")]jX5T$l>Ft+/='Lk<appDNHd![R
%n+E!i^,4)J3J<$6C:k$e,Y`E*_02hLf<%'b6;fY36lJRL8/Wn6G"Q41eu$0_O@JiY3[8Mb@M$EV7/,F_f4d%=+kn`1ZhA'"^;>[W
%*Tp9V78U*08QXPC7;^pkAGUIjkj)1j:%`7I9!l!4.D52+7mG0<#Z:$B8cu%,'5B-A1X8E\0"ZL!&*bn,5C_;Z(dZ5pe2rb?[pPjI
%gK"t,\r,m[2<Is$)f=k"b^GqS*T8qa5,\_RLapf15]g]YGW3"mSnYeT'W7ue[:#@8M.oe1oJgf.9oX`)hi!1\@JA9Ck2%)LjI)O.
%;ecZr1>WMIGK`kPg:$DsjLL!e@M$*$I".`c/>sGgrCc`290gbOQ_92sY4GE:E,MH2,97_^8YDknV;N#GB`]7c'3S&M;4&i@COC39
%(2`b6NAtR7)T@4_N5kkZ"24`;!gc*DPL4cn@=XlFg.?d0Xs_][q/.RobCW!Bq+'2,4[^k+I;]]2F@ud9et>9jd%C@qlq\_<G_sd_
%SR]"*60MWoUa\8WF>%$`,f"pLB[WNHLX=H06najpk#\d"2g\/<i9Xj./[n]9<\.;u>@Mj1N7"(b&+s0qIHrC'jf^fjp#REhGi%/G
%nT2aaRk.ZlW*4;F`f%AE4jALtU56W+\R6:3'/ujMD][-f;RDIRSgN*:%oEBoOa7'L;A$'F*b?k,]c23]Da*SnbkVBQ,"jht\O:mK
%H8VH;Bnpe(F$BPbfg,%pB[iM@)C%:!L0U9WUFWB)6)-_q7ZA%7PT>r"Y>j9ii&b9(cAX@V%(/pgW^6i*!n%!_;O["4RO3c=pXmMt
%c*q@Pd^aTjE[qE2g@:=TL177K\S,n9Mq5tU7;lauEKaC"hSNpoooF#te_>#A:?]S2WN-]rc()2AR<(gG`#-)2e3d;>faUm/6IG&?
%_hl"IE(F$=-\9BWZ-N#-0%43/2<0d@C]Fi!gnQ8DWI[#Ip?lMY@0pa55m?p6S=ChO>[eVGRV*<cBoftlej"jtEF7=hDSB4fMpfU1
%6ld/mb866<4]`-D,^S$7fZS536n^&-(HFPLVLOKN!($AA;a$aUa5%KJA\EgYOGYBZZ$k,&U[>\V@Fd%uZN\QjZ?TSqML&?#SnaLf
%440k"@Z$ia`TMU)`O"SfFqN-E_7)p8&GnIlN.`iZB)#SnPL`+R+\*[f)1Str@Oje^DU#hSdrR`93-KPs1?#BL4tk&L+)aFYeNt3I
%0f(+op6ZZ0ZHX3bl_8*c1I`r3l5,m3h$k3`G;+@ni=^30ap(b>EI,[AW'oX=a%kf/?b4c6BlsCC.N!*>>db4FW98WoEVnm$j!Cdr
%BP+^Lp'bu;G2l=olQNgX^-nd6(aJ9r)0/Ms3)iMQaa$"";:i?2?6^Y*,EZ1\Z#'0[4BHF'53SY*eFP1lm*)?s_-8-8[MM;/Tka:t
%iS^2u))n$g:"s[D5prL@AlaKP0G?_a_7==TYs2QpYM83ll1/[U7PG4?iFqf,Y=^gQ3;<:.">7*)_AKJGR0-T>f0tcjCCEBnpKKQ,
%&_flhlC786p@t5cfI'[13Tb>)O3upFR<[s+7hIUs)djDT.Xkh)-tnAp]4:8Od:/%X\4[gMFq*%!&#,'I)qk"G_a@J\</hR(2(4ZG
%ThH,&3=6-+0pL<I9/ETVg?A+8-uG[1^tg;MlFNTq_oZ5q".P)iB0hiYCs&#V)N]_H\fPXo`E&[R#n&.KDN2`#T"L3^nBZs&OuE&E
%L!N.i;j)3p`kH=J[k!JjU_W':\V.#Ue(j2,QZ';rR>GlrWoFZdB@-_<@Zfp+MUJk?Z/Oo*LHDXGCtEht1`;)Ec+8/s%tbU!?*k3s
%P18k>m9&&!DU^;PTN4rQANCj384b)p*2kVSU(YVIH:"J6QJ1'>,(#ok.k%9<aUuCO[b,*O)+$1H=.rZL8J*fXg$R?pdrp+HdBl&)
%*FoHG?J=N#ii(.&(N1kA!XKR(o#MFM0[3#9l#Ill>?4FgDT]t%ql]%;ZT$pA-/D3%O^U(NeWQ4f0'J=_?T<.S,r%_ZlIn_QM1S0_
%B[&>?6-ZcU;N'%l>M#@D:B9ulU;XDp#7*?0Vr*q6#A3eg('eUBQUIKiolC>`0:F<?A!WAfQ64c\V]dg"/AC$h<g$"NP-FsMG?i`*
%kA]>=Qf8#pne[cr'PZ9e%daQEjOQ_jY3=@.0^+p"Et>b@\1TcBO4JD[K$IpKA%=FX]*M+d;;I+eY">94RZSr+GF_X:bK?<Eb#,)]
%\EqNO"2.Zta\W,L8W/^Ai/!f_-Gc-YVO/-K7:37</Q+fA3`NkY+`jr+.<"`S^&#.u2IK662l4SnMg<SB2tC<K1HqmnG+7`]1N?Nq
%g`>p9]$ke:cfFeg%a2=o!hNLl7G4EM)ERoCW.rBAZp,c/0ij%Sb<8FUZc>@STWo_d^'[ElSjeI6<n'&iD7-:,ClXlTdYZpka:U%m
%DBO%]YpbcM>Uq`#qG[m^auGg)70AF\p+^pGe]&mWU4t$NkZ'ul?((4RR3Q@L\bB?#Z-tJhQu3P`fUCst6M#KhcUnuqdcNVrgjRUT
%,\bfWZ%8c?^?85BTsp1X38Yb6-UPiK3'`IH4GCQ3L'OKAV$`B(3^e<4f;(.ol2R!I+l"Iql/s:ocMkjChtFOq!M&s`4@3%p3qh_/
%\Rg%l:DVu[C:9!fS&DYaNU_L=>@W\AMd[Ja:6)<*AUE6`Bt&jrDlWq5`m!mAdR"uXY+i"KL5=D;IX?f_oUQb,X?>+0TWf]16F,Zc
%QOj1;o1G?dhk9[;Q,V5/S#=Q7&b"]gNBfeB#K-bAc\Ota0rL#:7%tiiD8HX#DKdO1YN81-n^C-+s+._!/)7EJ\<^E@nf:@8"JYI0
%UIKo"J3r08XtsRKNG`$R1l_AU%edF!p`R/Q3i'Z2[?I<S,iOAAGI93=,ToQ%l;rn@o\W1L)BO;g>'5kq7Mro:l9<S=E?G^n;MX:h
%f_70VC29Jr/;4;/Y:W7GWC2$CL#N9-mPQ%dcAa'D%49[@EuW[L*D#]`hFh.:iI73'E6\-^9i^%s4mAnWO#U&WbI$2&Nn[-+D)ILP
%1\iZb?YC"!cNZ.T0QaVdkGH7*i_i6p<nG^F'qEE?h07h/CC+05M3O^7V<2;#hS:lY%:o(Qm-[QP>\1$HY.@iXm,uXkZr+3I2(o:t
%L)JJdl<Yoi3OHZ,js*8`H,d2rU`JnV6BaW5#T,uPHPuIX2khI!nR]V;&8h47Uis;`'#B^*[I&8HWKGY>mQ4sPc;>X41IV,_?JpP/
%_4Z*4=/$<?2+ftY#fIIqTMm.Wf;KO[YKukm&O-4'niNXM=m6E%r/t-;>-#C!?aah>B+bY//IPL&]Uc[4>0*hE>q_;<;,48JV>Y^Y
%7-YdW24TOHIor`6+#t(jDYaE"*J*BTVa=7>h(M4Bg@ZaZBU$l/=%*n@M&FP$C`-&$;^8F)7$9m*1X_Zl<J.2lc0VZfLC51?fXGd\
%3\lTa4q+Wf_r5OBO/mrYm$%Xi;cU(aI(-MJhs/mF8;Ag^mB/I;TS0r#fLIa7U[N3PLmmtXl$ATQ@(;@-_3Cj-d"pPN@=N/(muGej
%06hfsPeO44hZ,K:Y#=EMXiOA3,*/ul0aK5[m;m]nlXNbV.P'=P"*p=#bF4\;O]isC/u\NcZVb(*pW(>eE]Ba#Z.4/K)O#6[ZP0tK
%g+"P,)\Ou`9DO7(adT5g:j7?7+urrERW_^;p9\!i>0PcA>3*g+7$X]dC`k9>TpBu\n@=/(*U0sl<jFIFCMddJDN2uHkbi'AqebFA
%fdc.oK/2A?V:5,.P_Nk+M1TR)kAu!/R$%$Dn`taekkVbrXrF!5jL78b2]<"o,LX-B"-BLR&cDkX1q?=G_+VI]o<[Z:Z2$<LdDpe^
%GcWg+JoN#=k(MMEMC.?ZD6f]a.OSTa(_7eZ,_#.4H[_L6^V0FB]"slCc\pA_+!EM?.A]7ek)bW!I',m+5.;I]oD-04dDsT3I,4]c
%Yja'72&Tq(ieBqN4:krPm7^*PndFW$2%>55WF:=GlrYrh2()]Xhk7QZhAmD,Wl+\gbRDjbi2C?n&Z!TaDh1t^NM*fUe6J;a1i6+%
%NeoTWgTcCWEr`r8^j5hrQDmNkH.mWTN@`#VcJ8"oVM8rAb^paT5deapI%2%JGR;E5ToT9fai$BXp?OU-?<2M*<QXAs^jsJ=4]71^
%konElVc-Od*\"UfW]gn\1r`>+p>rS%!/CC^)M^gU`(E7sjb;3Y'"?MlT7/s_6t'Zn$@NnL,a/f9[;R[epN,r>&O"/UP11EtV*BmF
%21@_JpCPd5%J0D2&(/GDrI!ES2af"$4Yb:Qq[&rBH9HN5oYl2A1IU\dep-,gF.=M%4jT2fHHj*h'>qQF)!AS/F"6QE.*2b`pA.fR
%:(5O^?1c_rrTQS(qYg>%^L$O1DZPb($reEMT[!1cAO^322<,67d`$Ylk*@t;5EJFXKH\l%"*](J&M;C":<s2]laTM]K^t8`X]MB(
%^>.P*FtLjiBN0#Sg9rB5$eGY`NlpVn*aJ05P.%6/(#_<eZf]<a,q"4s"sK6[8_)tA!M8j>]ascbp_`d:f8SF`D:RlH;+@?.e/\DS
%&@-+6@a%BrITOpe8A[]UY`MgCEnk\='U!>-3Z,\!M5I:^?N"1?"SuIhd+\dbP8b#n&Y>(gqV_ljHOoV!l_Sjk.q@$31HKHP\o1Uh
%9l":dn8b2]_lSf=>W0H,i5R0][`o"J2dIoo)0M]C6ajSdcslb\?]%G8=u<9J+\jb!]YrbCO*o8rZjE'@Jg:G((jpjJAk!btZU`#N
%[5cgr=\P;>njS8QXq1Qo9tc%1<3phecWh`08jm&dD6/,!T=`s5_P0,e%Xj6LNk6<u;TgpR)c6c8McAWmb_")mB,FPe=c>Tn[,F1l
%X_>c7YGWc_%co7L*`8hmC!+*W&kYmWC?-)`EQ!b'\X^,d7g5-N6CoWUH/mBl)d'YO7nX2V^-koX>V7'CAHm:7T(oiWD,506HdA2G
%EaMi*MhNO5R\`!m77&o#Dch"QQO:5,eQEane)RG;Qm>0*&LU0+g#A#bU1o:L]=tsmAm_RGi3\3nEe"(G54Q]1#D-hGs.[jHqdJh(
%`'Or>9[0!cEM(CF6(+\!!/_tIP$af\]&@t6ZDT(88!rVjs&`$'$FJDbEYND;Fc0!-1$>@$mJ]%)4&J+_Q/Q]uJTNF.E,R;g1%.\5
%k/l.:[u)+dZ.CLnGJ;`4T/;S`]P9("ig98S%UHe;i`Bh6%+beeZA]YSp,YIrVAa`$V<=<,EumQC5VD^69F9NbN6=^&HtG]\<a@k\
%;FMcDOqp76pN;u<cZ@j=F-kWO/Nl.V]V\=S._lpjj@6]a^X?;B#]5%JX*NERE-s27ZZWX6Sh;B+nr;X;iZh^$"YBj(,0KJ8LH^Gk
%]U\9&*U_?"g`8C]")J#BE].OVa9jeD$q5"\Oc0XnU8/ELs-aL*SHf[i%l\EWgj&Bpbl_DGEQa;^Vt9@%3TH,j*/qXhScn-^l@\(g
%";oha&JpjtS_hQ:`o&u@Psoo.DU3SCnn,9IHT=Ij($b!E1@d@Ea*[\R14KN-9*9t#adLt9RkbJP#!PB?aK[4hHU([_Pn4H'hS+U*
%YI0C]<=uBFY,ka*9iH864L>S\=Xq""gjhT=I+VGGmXYmN9^bjI\`5u@.YQ3ZQOt+(]m>%B33rdN%BsQ]Spf`f2EgHkM!!Ac.k(9>
%M\KY\W4f3Q62&Uc&VYDG#_MIN%Bq%8qOtgN$a'sV>o*Q7I18$r;,R.I^3KP$K_n+Pp2lUqcHo<qgK6br0Rtc-Pd/VO,aiXg(Rugi
%9E7f8b]^?a#MpIQ@B60OVdKSRrLrfDU0,&ucl0UkCRf_aU;=(L"]cILj6@d\/P=LIZEZ9K*-UZ&eSh<a)GUtsU@4VM!:M*?j@]U&
%7dubg'fHMYZYUs@0SFH$Y[J`j-icLK?FR!6.IIuR6ss$HNq;SnqG"Cid[]smIXT*G8'f6&C%@g#VaXA1Pq+j]Pk.G;W[c0N];-="
%AtGJ$W&p3gMc)?BVGr<.qJ(lR[%6bYU2%F;\1<)R&Fr[Q\0pLaOLQP*"Q/'/97(!r"[E6H7@Yd'OOoK@l$E"!IMo&Nc^$N@Qj/7T
%m]^"/F0UZ![6d/G:F":916?Hq/Qdq6m\uc(Mnj8?KTN%CSkjGBSNEb"[b=H5?HVQ1F=p(&NaG:pfp:L6*_$NcF]70VTAoV,4Oo`s
%OqN:-B7+<P"'%.>n2bMNRF.pgX63#1*WiNd!e5pR?!UX'3c',B(J/M/#GSVHrUq+g%SFQS02CF8YN)3B9;134RY7QL'(dIp:u_g+
%L/u#o+6b&_+?+MPX08GDkRm*'h4+TEp4H51^^<dI)Tb7L[0l[5j7rg&0!!A[ESTM1ndH+aM$,2ts-Hgbp3T'Y&1!k.H_MPBLP9#T
%Ut(O6V,_D"ql3+l>7Z[/GZ,8Qkbr/2T^`:s$]4MHC<Z13`.:u)FNm:5OcRL;&P:AT/F?rf!"Y=6Ap0\"1+)mSL.HLMb:O4\+KFd$
%'W*Clef=S]#Ge>69L,OEckN%Z(WR"Q&0.i$9B^YfH5i'gl<jX8lMO0444L`Q'+uk17'CDmM0=%[0"_Ul#Z8!B8"uZg[)tg94B-M!
%I&N$eS5j..PNJcg2us9@3%e0Z1WPpp.WNh'iFsKa.(,MtPj#J:fqk\)FGuX.6bCgu]s1+\kaM,Jga.aXOs5'Wd)N;d\JF74::lFM
%VGQ$B,a"paCFL1J;-)S!%5YQ`?7MV&[>:l@M8lu)@1b.Bg*LU#HdE0<CQ.M$4^R/fA@tZ8IPBl72?:GOSTlmUFO;"/md-92'[;$\
%k42^3RXFkl<Da_e=05JlpcG=#3>GMdN1"+KLk>B?dLfB"^WAVmpY+1X,70<rA/KQPKJuf8MULS1,$^_,d).l:i3c#aoL1TG!#'Pr
%G[+is;M@KF4XZ8@'C(K!c8?gk;q-Ei9Y]5U,F\n9Z'+@Le#g"9IWeEEnO@+-GRImiADK_O1d7"eI!*?7HlTs0jBXSGT<6jJHad&m
%p]K`V5o(T#4tOrse%:4L@el=6%kgp7kItMiIp+)afGMDYETnUe[hd?7orq-6b&YB&0+dH*.(3UsSKNdQM!9N=37`0#1EWp&98r*a
%IWoaaX.A1PG]1tU@f@HlM'6na@/"\6'\uUF*fcMEC:#cnRg1/4\gp0``g'^j4Xp/P`"C5J[G.VaHYN)8)&W!7CY#ONgQ8m`s%^"C
%MG,`c2s)j`Yq;np,hP_-&$3BLiEQ\<+iV"07&U00_pRhHY9aO%`Y&lf.V?Zt?Xc#$a$<pr@NV&e2`)_9m8F+mmDTHhKI>;cI<;>/
%.ZhtiJ>G-2g\o+]Jn>Ro:TPMo>G4=s7rb,6oT<,Eh^mBgFj(nM\5c1OMpS8WjeA10L]q"L*7j/1Bm[EFcY2`6(_u8XTqB*:,]u,Y
%"[Z;';pciJkZ3WsNbHT]Ju8-+L#CgIUD)2NMSqe<(DMi<!I#'8'rM&8N8Lg^adWlG=.NUNp.so7X2`d^1&HC`7VPA_oVM)#5gEX1
%?=6GBOs"+rWs_2)9YUio,Opo(k6V2*+A^eOpk[Imp"_h&2.^!O%+#?se^`_bb&;&6^4TsM5)+cH<%6_!OQBCFnsK&cE+/<u5qNHk
%0nKnH?->.`lr:*QoMI5>2][>&*cJe&\iX!QkK>Wlmt[`$kp2$fgo8JWOE@i=P%d*W;'&5eRi8R-qS`q3O>10dmhnED)apJ=d9^SG
%Y*KF.-_e4ia5JIfGVGh>nnFJU\6)HmLGW1o9$ir>@<dAaqL\gj9=XMSTggn.WuUt",L5W_[<::N!#k-KrVEDJIN&h6DH8h#lbg8f
%(X4dPQ&\+M,ZZ>XPsDa1AdIRGYq"MgPSb%tC7J:b@/1Gk/$m!rqSWP,!+EueGd=+.>uoVQ'j"Di$kh*FI+]Aq:F!2I4@`%gfMmpC
%iG7nTn%=e1,H3iEq\f.&0fCrQcCXM_ClYY_+!+OW@(Z2;_mQMQNQ`KFEH@PPW6S$lZuAK]![H"1%);8=8]!?(?X+=.AkQ.[+PmLd
%S$Dhsc7+mPl8U0++L_AeKnf#B#IDZ(dI.-`rQH8."dFf%Nffr5MsZao!'1b?m!rAT%SB4RF^7'qOVK@pkYLVW3cPKbZDLDNUdG]^
%/qP2L0QG8jr0p+ebrEWD/W-Uh5o^0iMP;3R3-tE9EaEI6?'34.j$!rn1rX3iJ0#/0dD?:+$Ae39K@tl(X[jqdP.dH0H?(t-#5(\j
%3Q[E*catR[MDZB3Tj-,&e$t(58gYgt"A9XtnM=r?q(D9n![)0J:@hI$+M^VRJRo1j$5nr-:,=t3]9,5mGj\``mVaAOPT>L/-+8[E
%];!NN2&qbEK_?/B`K96:971qK0P9Gp6k;dmEukQUo4E-:3X7K;k5);/cY$L<-uacPE88(?PT\Bu'2u;DOc2&"!%t*;8/T6KVf&l&
%I6Xmi%PgsG<fndpWA)og`F8@5UK"&g\72\>"4nD&47+(Y&qGM`BV1U_PIkaX7$,Wp!s]7VX>\P/,_ZlCqMKJeB?ANA[;.ra=]\^u
%atQ2POE$.9R^g4l.6:qeSe<E&YXbA)YQSV[+qj\77*sL?aWW%&[j@uP*9BWS%[?^.G4i7BSBOpT=ZC*(Lr?Dc#='+&kE*G(Xi.Ru
%r;/!DI\>i]\a%FggmQ\RrcJ=`.El'A"KomAG-@VogLT+$<GepVH*5pLNAtsE6mB[=VV_(-o[N:V(6K8*O72@k$i7s1fjfB6p[3K3
%%b%Ho@iHh:IS0!3,0![li0W7=],EP=L(XPPWe?M306]jL[i&)iB8df7e"eFbl^O<bj;$%LPNh(73)E:-6&0Ds7#289+]4%D>`gL@
%5Yn3p`/%-U1^EBdj&1[ZCQC_cG#:17m<hUXF2Fis5Ok`'J0!ds.\HG-ESl3a`0!R<B:pi5eB3hs)e>Q^Td=M#[6M^'M%`5h-G44J
%Rcc@MD1DPa?`t:M!)*VX<GN-V(N@fumgl*<Y^)h2k286S,b\7l_>88@\68.\TDJ5<=c+UV(U'^l@58ep&UjX_";3qi[%lGD_$fu.
%Vo'kR0L,N_kDSFb$sQrc7Vr0G,RPRGJK_B'k0Gi#GX%`9P&RH0cJ>D9QBT7ZId5N8I_:[+)dFI%=:[IfOF7l]f)#3L#Q?3Q+MEj!
%0M1[c^\$"JhZ"@=R`GkE\<B3*5Q8RCB:&r%37WYi]/LsgS!f#hoI5@HO&tQi*s6\;R7qbK>2j/33GaP%5*=o?.2ghFLs<$F-GJ(P
%N)gk6]56u3V4e",$*-)UmM2br)^0Z/U:\%hNH`rh&;P?.cQ"=AU?iO!YV@?]<dC_MiV&QZ*#YP]!:CRuS6*NP>C(DZ?69-lO"\qH
%8@/HUHpn(f&.Y'HOGN,k-5j9<MPUI`Ra6iMm?%s-*D[rt'hM6\831THqPh]JbUA)EI@/h#;?8bP1]o?Rejmt+BEGT,aWk:XB(INX
%,^(T&XW=4:*R\&03Qts9T_=-ZiY<Kf"_c#2Tdbr_D5Fm@Hcm;s_(rp7b<OQ#@(l+bBd;@qg_X_b?WZOi-eqBkqVWU@"`$UJL[##b
%Xc[n^7I*52839EdHe>E4/YWK%MHAfEBd!EIn0/kkXI8(4a,!;\MCASYi9i)00CO9:s0Q8\boR`tJ4;&)?6h+c;g$4-c&pggFJ=I7
%(h(M26-:,C/c*4SJi7#Z[\;<(X=CejSm'uf8`Tm\-cX:#/r-"S=#ndZ*"mK:i]3+$*59ORR=;f@+W)+nKh'7#/@X7#8X5R@X2jNL
%bsNZ[BElClD!0C1.OtSQIsh3TDuYZ5L&q=+`o9r,`>dDBfr9O$'W=ad+$Agg=np,b7'aW2TFo`;=t,?LbYIs/2'KReap`=.Yn[=_
%s4Dn=CMXS0<*qL1dNS!O)N_=i^-P_+."$l-&@n!1giao>mlSgke1[MCg%d[(rB]3[&UE!!:]MLKBkF5+aq,P4kd'OfVTGRDQ5Uu$
%BptdtkB!(,"Mt;:8r&^]m/^$1F2>Z@H>='/P/LeWCXR\DUutQJ*'5H!Y"%VT:!YqV'[kS5Kb*4>?]$-X%8ZHnB^D>rH&IN,`f.Zt
%ga8Ur^gKH>1W4?PhjDN6T$ge"k>R]nlbF=;cDc9!-ELhaIE4p<7m'@e*fs1cY.Yc^3PLqs.)FR2;H-$1j`:n+hT+HWP-U\lC;'Z\
%!T^8,d[3YA'&ukIP0"+fYHQt8SE>Y2kr4pN@aX.\d$$,`6\-_V:$'(u#VVDo5XE;jc5#b&KP[*hJOOa/_M)?P?SA_TJ;D=mn?+\,
%C^/VG6]on1)_ge1$aY4M@)o`T1;b@Z60$D7o!*AHc_PgQ\9Wm]_[?Y.XD,_=gdC*$nL2-I2"/0eOho6)U3C4i/_8D^moEF$fl?"e
%@)lu)%3&((lG'dd"A./4.=gZ/NC,N<<E3.u4Gu%;a0$uEf0a'UHi);"pHG="eV^GDTUC>Np"9(UjsR+T@DStpP]N(Xr#Z2&^ebHQ
%g87J_ATT/%aZ=WlXP6CZQt:J!k^!O&<u[A3fAj)BYA*m4f=tc#2'$Dll8c(IMA[ard(.3W.5Z$kl5_fX(%`sl*0PO$jTJXJRQgs3
%B,Q%S`2bd`%?K6&7DV\Q6JBejLl@Zh<7giS]r)2jh$b*I%,mt(O\7m*"5BA0Y04*kU+2?p$ou&\A;lkC37&\M#$TPPD*lQ%0,0DQ
%Q[,!2:e"X,?<`8%;.1);Mr6Or>p<!1P6`b+l<dq\QS``I1*'"[Le4j[3IY,ODa+I:4Lp!(dU`U]LEF5bbu^"0d4CdgUQ;YIkUH$X
%UQO?f>(s<Qa+o%>K@^\"^/7hg9s`7edTh0o8&_UW;fLrlkbb!5Kn_$OQT)H7o[.9W\'T(dA%u0e/MdTDg(D`URp<B>H8Om?)RcJ!
%`ro;LmQnk&iK,:A\Z<3.G"*s&bikga];!L*GViB'l*A1)Ri].@J5&4$CHJ3&iu2BfFO[+(fi<s5C)V[LNI8?C#udE:7<0Jb3JgUH
%.3&[I%--`p-aHpB8]gMK\r3==r?b48a+0IGGr:Xd<r8A.]F"X2oo3UJ7-0l/,!:';5ma2]":Ra!\tInDNE_/N_?9#OmPm=H*Mp=-
%jW]D$("'Gbi%#=Th2)XRkI-[/'T8Ug6\5rE6_"lQ36>daqj@I*43Ec-"#3aDA:kg:6m@[$KMO?+_%?qdAa10\+INM;\5o>:0W=Z%
%;Z6O`c,4ui[bpjNE539T&ZT4%`iGQr7#51^jZYKE@l-214C]G!pn:o.J\-#s\C!XMWLks&\@XMNbN56&:=m0@h(&O:%9,8&k7*2R
%Y*l3I#g@UB0(F=U!^p+'"AoJW1%"CgKk(n2`cu3##hLCrIq-nGs%U]&eBBPKW$>!gpWhiLZ\S(/K.9B?'DAK+:8J@M%G%^PT:JGb
%%.a:q[%aBfOSF!t#%p;pVDf^18(Nfk&I:S2-Q;g+F]V7P(ubX]$%^b2Z6IRORN'WXRR``RdQ`T2$q#I0r(8FM-]cZ`07q#fR80@*
%K>+nakUp4F3c7RCck<aK,#g7jDN9qJCVBOKF)E/g9Q7GpG2a\I-%@!Br!)NK:m>meo>'Yh#cVLdX8:#N*Ck<4.HmF7*mqMKbY7Ku
%q$>^:C8bB)n,)dDX$<3VHc,dJ,<g/<k\1NKZ`=iEhM"/,"tUtH\Fje.fP=>g_]44q/]E+ZZR.%XW_%7OiM:JN?Y%Y#`gDh\b'!>_
%VDZjd7-nl_4\f:,L'T_45uC94crWHBQbe;C"MeDQpAA\V`AM>#R/4<C)\AbNLTN[5K1mL*rYh]s'8X6^RjX1s:hC+@,)!$S`r*&_
%WI(a^JenMt7<R*H6CeX8<Y`./e70dT>mQ4u4QOI1dMJVf_p9%ug%V0ZdQQY\<T"?8B])C4+%h4,/!6d_&8<i/Zp8^P=\A;4TH9lu
%\+6W/2E+F8AH_"03lS8p-K$aZBKd[ZH-9*fSD(r&NW4HZ0q,N)lqJou=PN.J[(<XLIG5;n6&Et%9[>!394/<mUgi^.Uec\bXQl`L
%Va/)_'LX_^ZIF(Qa0UD,NVF4GpSR.8?nTX;YA(orCa&_EghQnf)DR68`[/D%8[,UZ5eY0$eYb"m96":-Nn`-8f?<oXp%86qi'#sc
%C$C?X-n4E%E)*!j7"'cF"GB3\5?XY"CIDQ>IC1`5LZ:f,[n7XY't-OC*?L4?@F<"^6m]2[VfgEaLpk_Z$5UcI)'2g<FVVT@(`M\8
%3"]5+N&Q=GnU_uS[3@1Fddn4%"YC4YVRZhc/eog'U\`b\+MaI697p&sKa+je\SdfQ0J+V_.:=V8X+i^>_?CY`MhA.3U_cai(==P7
%r4$#95-B5g:;`mNU3:@2>h*QXPTI:9-FVeXgIY@jC3[IW6B>Ifmg%HJErZnUh'.?WGt`1ipA6i7bD)ZrdlGOF0.fM+Gn`*sMN18"
%](mdHa2W(a%NMp_FA"M[=h</_9%)Y47=MI*c89'$Ob`/oB$!8G!@1hnS1jtD'OI`[:4AUFpa+G&<'7LE,:l]Z\a#$8Lch^Xd0U@F
%:M:6oWZDeu'e=Cg\3q43W(XTNo6k,^X<_06>]D2b1i4,1H[cU_@Ge23&7qAYgES"UX`NsQa1[AV["MVsJbt+b_-2'5#[/5N)T")g
%*-*dnj6Aq%I#8/X%h3?G)',qj`,BMX:AP`]_rBe]4[%A&0?>+ria=Jn5gcq$Ki-:RgMu4,+7IS[hO6+nh#4HqG6`j#A7Oh"3fH%<
%AQ616e>,LK4V:M*d*VP)[AFG^ieZ`u'atR%f4@?+9&*h#&8[``?1")uq6"SkrEHpF1Q;uLh!U2Dn#[J6C';u^AhBq@n9lQ]nSoe_
%3AiJ!e9%:jaTIXC]K&hJB->]_nqa)mJd;B,68\K8djtRVU2AZeSk*Q*r+S`3EhK@$:@+_`ZK^E!Wpre>D;*hk2U.tV/DIaRLajfE
%Cp9hHo4qj\E*$GpT"1FY#U/Ij`rZPQ4d>"ZOWTG%1`U_aX3GE+<P`7!<)#4kA\A%8&G8,JV:6(,pa,N3CW'Z"(?mSGC69OJjc&ut
%F$gXJe.VT(VZROQP^NDaQg9CWUnHVIYN`Z;br7K(oI$W:g.=T%IRB#0]&F8q^oA/e:KUQlZJUaE:ou!'?]i<`"7L1eFI0)aX;7`-
%FLlG4d+,-`[Q(GG&8AA$7"p=5#!0uH"ms?-laAJ\K'Dc$Xr&?TJdc;8D`X89ms4Z(hJbhD20[#mC-b=2Jq40+H@Fq^3$9d<m^-b%
%k'hTjmnZ?C$"s15^@T<6.QO=@fdZ>A;LUeg7.4GdX.B7=JV`mUioe$\2f=FN9Ipc!#e^k,bJe_r80s]d_JRQKrH)q7_UHfSk]>Z=
%eG.LrICX1NcZ>jm-as]X7Y[KM>,%9M0M8h2k;1.GDT(\pFo6@:$(duS+8b`"+!7PJ)-O74!VhFOH41*(GK-@RhVXO6aI3f[SG<^?
%`2Mfl73jZ`gTeHDftl+OJ2\-jQZ=;cG@m49ZOTF@[F/<u\O"I_>ULE)YIC%Jndt2&G.SCog7e1,p6.b_US#k*KG"f#4=^!`^gTdZ
%cTh-P-/\_<8.ON/\c\4SYS!,>mm.pM!.*jERQ=bs<j#^T]r[+$2)?Dl3_)sTV-Ue1>9bjVle53gl!\+,nAZlRkft7b:C"b.hmpUR
%;h%0EANFRoGUa[c[r*YBUs(6s@0-C!\F^^(s+h"*_`I`F*QY.&G(nYA7)>9;ga%Ia9-3BQ#eT&D?R6.5m^W%*Af,P)%+XXK,.BU&
%Pi`_iZ;,.t\#!1/[;0"*%Ls[YM1Q=`e#YDj*ju50:FgGQEXc27-d@[SMu7UtN:)hTK-<Y$;lYlt!_AoM9-mGo[[V14N.OJ-MQ:Xa
%$)2rOiVK*a<gO%(drH/LE>:#e3"%1n%f*!Dd-_7arC6rX[sEYS0C:oVRR*Wfdp0uqDg.C-nd&^OdV!Ca'#d(tSQ,"nF^Tn$&J)1;
%)iXj&,<bn`)"$Q2.J.L/B/*'`GbV\/S%\FmWT<"6qMaoP)t,ED?*VE2E'^SkW0)>H$fQ>0N86FFOGDK/XU7J\0O9*H:UQr+8)Z`d
%W"aZ,6LLLPLIE"'+rO<<LF=b(@\\7@nJ,3TP9a18dQpJi:,&m&6KHk@'k^6?e6bD9<uVOn7#M1#CUcKKMA-1s<W7oDVG(^\4`TN,
%+esgB^jWEAX/78)=I&OK]"g1E,IFPUe7dCJ5#Xie)RR$f'S*fPW:'GrII*N*Xk#$p*H\/[kt32M]tg,jbgDHiT3[/dT]F\Bk9qND
%i35>Xn!cc9rlm95Ou2JoL`k9%+3(#p-c=m$7X5RjQu@gl>DLN6O1Rf/E19kfh7!=U*`Xd5O^#b=3XOKB4#_oXj'CT?J6Z<QG#jkU
%#$RSuasFS3#9I_g-'M<+m4':/Vb/PsK!Z=[K3!q&Pc-&0J[_a2IG`=N`4:6;D:^H;<3me7riYRJ*n_i2R4$<s$@d`F"&pNgK[:-u
%nmh>]bOU(CN\+%\ZUJmAN7;m^k4L_:<e++.`#3eE-.[Yi8\-T*o%FKVe@<fOMG%WF/r3^,DNRXtRV(4=e/oG(!RET4V6h/25nM>b
%iCW8G"h1/._c8j(H'B0k_+A(<2F9(`*p"hZ%c0!"R9AIpAn7==<'FeA$VcItjQNHR'?5rRj7._n&2THU0?LXd+MF41XGiP%<62he
%H[V5X,Mt08*MV,j0VJDbMitih:TG2*CSgY]eHa4[fJh4Mp\r2l46VlC<qpQEE^d6.D^ge9.ho&baFs"LH"Dg\8/oISZPXSOHrO=;
%-P"WO$q_Pp%OXuf+Im^A@9$uYEe>IQR[Rg=Nl0(1Dk:"-nPMCYBS[^L]&LN(J?"sRQ@lP#(G/5[Br"el)pGR['\K=b_&3U<PUW47
%hm`6T7/32hZ$pG6?Y?3PXNgFRAn.U3IoHl&)PUbb7Vc-B<>.Q2*$ktqS^JLD_ZPmOPJd;qXK:C=jZjXXi:BE8;iM\f,^28(<<YQ2
%--mtO!Stf$KTL+BP.UeG;3E@n<N%rmYf=9_:uiX7m82Nd)n+.n,I9IAPcU,6?:Ipp58V\A*OXT!U`(1QY6BYO"!5Q090K%mbHu^%
%,9-FnjTp/4TurrZbHu$g6S[rk-/70RpA`k8dC3-HOmOek&m!l;qu@Nl<ts@Y(am^J."uf-JV__tSfLINRN%A+J.;(ord"AV3W!74
%qMfs@VA@8=*=!C4.a*gr!pAJ-,DJNADM?CkW=fL/d&Q5j=bcusU<)he<WgZ\F$KlG.Hp0qOpK]e&TnbbCWE]nEC#]C-9W*37\.0g
%,:^kQaL[/V:X@3BH>*tZKnK8$-TNA>Ue#fQdfClE$a&=PdJ0'26"s*??gUH`J2NNt^"WXBhJN,6;HL'SP?s;>4/fgn.Xb^[Vok:q
%/b+RIgCgL_Q7H8ar%M#/$8h$3Nqi9gY35.#QBo%^H[2Y][uJb`$mL#2qqr-WPVnrs,=+k"g6uV1YQgMdMo.JXMifY-S2^29p+%_.
%]VcO;#Egq4#I;DngK4NKRo)&BR9*)"SHqB'fQl7.3BJK$g=Ea#)gB_S-Hf:eEor:>-Z#Q>E?1093j$@QfdQ6?J:>0j:jLN^9RRl;
%XQ7]nV;KcZJt"_IWOo2$K#@`ubb_LN*9F>fN8oa7-WWMFm**au*Ad"ALMjl7.+22AN@b&5VF[_3.m%V0M30Z\&Y,XuA9s5,!NgHT
%H>t8G3`GpE24ur[OO$qeSn)K/^#UK6<%T'&!h+F'R!dAqe!TJ,iGE<cR;&g=^;04i#7IrLigb7'h2'8U.%PuPM=e3ER'qbD[7A4p
%i%.114PMV1-/(c9gLd@8G&*TT`fCr)L#+qjc'O.;b$(]'=$5_AUm`WmMT4P$gi&^,g(RrL.0DC-+_A9QnO63eWa2B!`P7C_p6oY?
%kT:`INt]5%/*Eb:CrW9Wht/l8/5.\GKk`4,37%HhG0%AY\M[VJnJAI.'o4f]rU.s)2%`LRdKVQj.#J78F?iLNX?9M5EXpm;-<aYa
%pithGR\l\UTJL^C]q--cN,A/O07[9pPaXKb["QXDrRj>Y\(i@Zb_EFQSkTPsHihcl6tgZS\]rmd#>sK$J#_XoMhti2mU`HB)J5XB
%HF0!AS$/da(-O6aW"@iZRDB53JXi_tc=>*f/JaC-`D!5E),_9oKI?nHRR_3b(X=ZAifhA9p"7@[_V"#7T8aGg/6od98'DZG;k+*K
%GP\-ML/SSN[j>t>&jVd*'FmfTii_3M3-t>k:Wp^V4IEh70j+oP3eB^BAnFs<DptHZYWC<uXA6S6UV9sk#$A=Cc+)t$+r[*XjTHmI
%>lCAXX?B.<!4X1DWX\I@DNMUl\^P_),L;>2,E*WBDd'L_ChLV`MkXV1Ue&XBHfI4N?A3PO2m3S8Ct?tIk9&T/SbI%cSU^M)s8MKd
%iP573kPtBcs5eb-Va(-pJ,[W@q(FD;5Q&iWqWC*C07WfHs7(U<q(I6tGQ7SZJ,6q[r5YH/j^8#[huE?;J,[2hs7ODss5hT,p@&%X
%QTtN?Du]^Lr]`q5krI]Ero(Wk:]J>is5!\[f&,i(~>
%AI9_PrivateDataEnd
