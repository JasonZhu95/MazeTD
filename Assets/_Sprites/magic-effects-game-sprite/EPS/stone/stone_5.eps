%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_5.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 107 123
%%HiResBoundingBox: 0 0 106.6820 122.8014
%%CropBox: 0 0 106.6820 122.8014
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:38:57+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:38:57+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:38:57+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>224</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADgAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWOec/zF8l+S7MXXmXVoLAMC0MDHlPLT/fcKcpH+YFMVfO3nb/nNeTlJb+S9EAXcLqGqEkntVbeF&#xA;hTxHKT5jFXjPmL8//wA4NfZ/rfma7t4nqPQsWFkgU/s/6OI2Yf6xOKsHur/U9RmDXdxPeTE7GV3l&#xA;Ymn+USegxVQZZoZByDRyCjLWqkeBGKp/o35i+ftEdW0nzFqNmE6RxXUojP8ArR8uDD2IxV6n5R/5&#xA;zB/M/R2SPWltfMNqPteugt7ig7LLAFX6WjbFXufkr/nLX8rtf9ODVZJvLt89AUvRzty3+TcR1UD3&#xA;kVMVeyWGo6fqNpHeafcxXlpKKxXFu6yxsPFXQlTiqIxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVRvb6ysLOa9vp47Wzt0Mk9xMwjjRFFSzuxAUDxOKvlz83P+cwGVptI/LtB8JKSeYLhARt&#xA;tW1hcU/2cg/2PfFXzTNP5l80600s8l1rGr3Rq8kjPPM3zY1NB9wxV6H5b/IXUbgLNr92LNDQm0t6&#xA;SS08Gc/Ap+XLFlwvRtH/ACx8j6Wo9LS4riQdZboeuxI70kqo/wBiBimmSwW1vbp6cESQp/LGoUfc&#xA;MUrpYopUKSosiHqrAEH6DirH9U/L7yVqfIXWk24kbcyQr6D/ADLRcCfpxRTA9f8AyBtnDS6DqDRP&#xA;1FtdjkpPtIgBH0qcUcLzLzD5L8zeX2P6UsZIoa0W5X44TXp+8Wq1Pgd8UUu8qee/OHlK7+t+W9Xu&#xA;dMlJBdYX/dOR/vyJuUcnyZTih9DeQP8AnNO5jMdp550oTJsDqumgK495Ldzxb3KOPZTir6Q8n+f/&#xA;ACd5xsvrnlvVYNRiUAypG1JY69PUibjIn+yUYqyDFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkX&#xA;nTzt5c8maBPrvmC6FrYw0VR9qSWRvsxRJ1d2p0+k0AJxV8KfnF+e3mr8yL9opWbT/LkT1s9HiY8T&#xA;TpJOwp6sn4L+yOpKqSeQ/wAtNW81Sick2mko1JLxhUsR1WIftHxPQfhikB7/AOXfKug+W7L6vplu&#xA;sK0/fTtvLJTu7nc/qHbFlSy/836NaVVZDcyD9mHcf8F9n7sUpBd+fb9yRawJCvYtV2/41H4YqlNx&#xA;5k1yevO8kAPZD6Y/4TjiqAaaVn5s7M/8xJJ+/FXJNMkgkR2WQdHBIP3jFU6sPOOs2tFkcXMY7Sir&#xA;f8EKH764qnUfnvTZozHd2jhXHF0HGRSDsQeXHbFWKax5C/LzzG7Np0h0TUGJ48VCwsf+MRPD6EK4&#xA;op5x5o/LPzV5dDTXFv8AWbFd/rltV0A8XFAyfSKe+LEhINJ1jVtHv4tQ0m8msL6E1iubeRopF+TK&#xA;QcUPoj8tP+cyNb05YdP89Wh1W1Wi/pa1CpdqPGSL4Y5fmOJ+ZxV9SeUfPHlPzhpg1Ly3qUOo2uwf&#xA;0yRJGT+zLGwV4z7MBiqeYq7FXYq7FXYq7FXYq7FXYq7FXYqhdU1Sw0rTbrU9QnW2sbKJ57mdzRUj&#xA;jBZmPyAxV+fX52fm/q35keaHunZ4NBs2aPR9PJoEjrvK4GxlkpVj26dsVU/yv/LSTzJP+kdTVo9E&#xA;hJAp8LXDg7op6hR+030D2UgPfXax0vT9lW3s7VAqIgCqqqKBVA+4DFm861jzBf6nI3qOUt6/BAuy&#xA;gdq+J+eKpZirsVdiqi95bIxVn3HXYn9WKLDlvLZjQSD6aj9eK2FXkhHUEfPFWjJGOrAfMjFVv1m3&#xA;r/eL94xW020zzPqViAsNwJYOnoyHmnyHcfQcVQmt+XvI3mUNJNAdE1Rt/rduvKJm8ZIxQGvyB/ys&#xA;VIec+Zfy98waGjXJRb7TR01C0PqRAf5dN0/2W3vixISzy55o8w+WtUj1TQdQm06/i+zPA3Ekd1Yf&#xA;ZZT3VgQcUPqv8pv+cv8AS9SMOk+fo0029NEj1qEH6rIeg9ePcwk92FU/1Rir6Rt7i3uYI7i2lSa3&#xA;mUPDNGwdHRhVWVhUEEdCMVVMVdirsVdirsVdirsVdirsVfK3/OZH5pOpt/y90yagIS811lPWvxW9&#xA;uf8Ak6w/1PfFXz1+X/k2481a6lp8SWMNJb6cfsx1+yp6cn6D7+2KQH0xDDYaXp6QxKttY2kYVFGy&#xA;oiigGLN5/wCYfMM+qz8VrHZxn91F3J/mb3/ViqSvIka8nIA98UIb9Jw8iOLcezf2Yo4lr6ov7CE/&#xA;M0/rijiQ0t7PIKV4r4LtigyQ+LF2Kpnp8QEPNlFWOxPhi2RCBueBuH9P7NdqYsC1JBLGAXUqD0Jx&#xA;WlPFCMh1GRQFccwO/Q4shJGLfwcdpOIfYjf8cWXEEg1vyjpN0jXFuy2ktKkr/dn5qOn0YqQwW6tJ&#xA;7aQpKvyYdD8jixeiflL+fXnP8urhILaT9I+X2blcaNcMfTFTVmgfcwv8vhPdTir7a/Lf81fJ/wCY&#xA;Wk/X9AuqzxAfXdOlotzbse0iVNR4OtVPj1xVl+KuxV2KuxV2KuxV2Kpd5j12x0DQNR1u/bjZ6bby&#xA;3U5HUrEpYge5pQe+KvzQ8z+YdR8yeYtR13UG53up3ElxL1IBkaoRf8lRRVHgMVfRH5Z+Uv8ADXlm&#xA;GCZaahdUuL00FQ7AUj/2A2+dcWYC/wA+3fCxgtQ1Gmk5sB/Kg7/SwxSwSWRY4y7dBiglJpZXlcs5&#xA;qew8MWslZihLdY1qLT1CBfUuHFVStAB4nFLHZfMmryGolEY/lVVp+IJxTS+38z6pEwMjCZO6sADT&#xA;5qBitMpsL2G9tlni6HZlPUEdQcUJlBc3JT0I1DGhoe4GKQSolZIJRzWjKQaHFHJXur1ZowiqRvUk&#xA;4pJtDJx5ry+zUcvlihGXxtfSX0+PKu3GnT6MWUqQOLBZOKwv8sVSe7gSRTyUMp2YHFKRXmltHV4K&#xA;snde4/rilV8teZ9f8sazBrOhXslhqNsaxzxGlR3R1PwujftKwIPfFX3N+RP596T+ZGn/AFG8Edh5&#xA;rtErd2IPwTINjPb13K/zL1X3G+KvWcVdirsVdirsVdir53/5zL89fozybY+UraSl1rsvrXig7i0t&#xA;iGofDnNxp/qnFXzF+Vfl4a35zs45F5Wtmfrdx4cYiCoPzkKj5YpD6YZgoLMQFAqSegGLN5j5i1X9&#xA;JanJMp/cp+7gH+Qvf6TvirGbyczSiJPsg0HuemLWTbriwMUXqc+VPtClOuKmKXXV7a2qB7iQRg9K&#xA;9TTwA3xQwjVLwXl/LOPsMaID/KBQYpeneS/yq8tXvlW313zBdzwtdcmjjjZY1VORVOqOzM3Hlt2P&#xA;TFkAkPnPyXotvcRP5elYWoTjKt23xM4J+JKDpTtQYoIU9JtIdNsxA0wlmdi8hQHiKgAAEgV6YoKb&#xA;W0/oycwOQIoR7YoBpu5uDPIGpxAFAMVJt1rCsswRjQbn50xUBdewJDIAh2IrQ4pkKQ+LFxIG56Yq&#xA;h5LqPdaFgdicUoQ0+jFUNLHxNR9k4qleoacJAZYRSTqyjv8A24pQekavqmi6pbappdzJZ6jZyCW2&#xA;uYjxdHXuP1EHYjY4q/QL8jvzfsPzJ8qi7YJBr1jxi1iyXoshHwyxg7+nJQkeBqO1Sq9GxV2KuxV2&#xA;KuJCgkmgG5J6AYq/Or88/P588/mVqurwyeppsLfUtK3qv1W3JVWX/jI3KT/ZYqzn8htA+q6BdaxI&#xA;tJdRk4Qn/imCq1HzkLfdiyiyXzrrnoxfo2Bv3sorcEdkPRf9l+r54snnt/c8F9NT8bdT4DFjIpaC&#xA;QajqOmLWrS3k0qcGpTvQdcWRLE/NNhdyXMdxEjSR8OBCipUgk9B41xQEDp2hySzI15yit61cCnMj&#xA;wAPT6cUvT5fM8FzZ21oZlitbRBHb26rwVVUBR232GLOwxvU7z6zcllP7tfhT5eP04sCUJihMIa+k&#xA;lfDFC/FWwSDUGhHcYq4szGpJJ8TilrFCGuxJUEV4U3pilC4q7FWiARQ9DiqEdCrEH6MVSvVLKoNx&#xA;GNx/eAfrxSnv5TfmPqX5fedbLX7Us9qD6Op2imgntXI9RP8AWFOSf5QGKv0Z0zUrHVNOtdSsJluL&#xA;G9iS4tZ0+y8UihkYfMHFUTirsVdirx//AJyg/MgeT/y5nsrSXhrPmHnY2YB+JISv+kyj/VjbiD2Z&#xA;gcVfCmm6fc6jqFtYWq8ri6kWGIduTmgr7eOKvqYCy8s+W4beIfurKFIIF6F3AoK+7Hc4s3muoX0j&#xA;NJczNzmkYkk92OKk0kjuzsWY1Y7k4ta6GCWYkIK06ntioC2SN43KOKMO2KqUqc4yvc9MUIB0ZDRh&#xA;Q4paxVwBJoBU+GKoqG1p8Ugqey4qp6jq9nYLSQ8pCPhiXr/YMVY/cea79z+5RIV7ftN952/DFadZ&#xA;+ab6OQfWaTRH7VAFYfKlBitMotbqC6hEsDh0Ph1B8CMUKuKuxVLpVCyMo6A7YpaIFAQdz1GKtAVN&#xA;MVUp1qte4xVDkAih6YpSC+tvQuCo+w26fLwxV9f/APOG35hvqnli98mXsvK60M/WNO5H4ms5m+Jf&#xA;+eUp+5wO2KvozFXYqp3FxBbW8tzcSLDbwo0k0zkKiIgqzMx2AAFScVfnh+eX5my/mF5+u9WjZhpF&#xA;r/omjwtUUtoyaOV7NKxLn5gdsVT38ivJ7SXEnme7SkUXKDTgR1c7SSD/AFR8I+Z8MWQDJvN2s/X7&#xA;/wBCJq2tsSq06M/7TfwGLJi2oQ84/U5U4DZe2+LGQSzFrRNpdCAsCtVbw67YsgaU7mf1pS9KDoBi&#xA;gm1S1sjMpYtxUbDvXFIFqd3a+k3FqMp3BpigikKbWE9qfI4qvSKNPsih8cUKV9dC1s5bgivpqSB4&#xA;noPxxSwOR57mcsxMk0rfMknsMUvUPLf5O6RJp0N75i1gW7TqGW1tnjDLUVozuHqw7gLt44suFIfP&#xA;XkCy0XjdaJfHUbI19WNhWaKnclQFZffb5YoIYvoktxFqMRhruf3gHQr3rihm8MglWoG/QjFC8gg0&#xA;OxxQgrxaScuzD9WKVDFVW1UGShFdjTFUPMD6bYqhcUoLVYPUti4+1HuPl3xVkn5Eecm8o/mnoWpv&#xA;J6dlPOLHUP5fq91+6Yt7IxWT/Y4q/RXFXYq+bf8AnMD81pdJ0mDyJpU3C81aP19YkQ/ElnUhIajp&#xA;6zKeX+SKdGxV8seTvK935l1630uCqox53Mw/3XCv22/gPcjFQ+ktShttE8rPbWC+hDbQrBbqvUAk&#xA;L18d61xbHnGKpdqM9WESnZd2+eLCRQWLB2KuxVGWd6sKFHBIrUEYsgVK7ufXcECiqKCvXFSbUMWL&#xA;sVQeswevps0INHcDh4VDBv4YpDG9K0y+gv4p3URiFuYJ4tuOlBvim2TnVL8mvrGv0U/VitlXfXLx&#xA;owoCq1N3pUn79sU8SWBEDMyqFZjViABU/RixTry+q/vWP2jTh8u+LKKM1MJwQ/t12+WKySySNZFo&#xA;30HFglxABIBqOxxSvhl9NuVK7UxVY1DXwOKoNgAxA6A4q54XMZ5oQjClSDQ1xVjEiFHZD1UkH6MU&#xA;v0r/ACw8yHzN+Xnl7XHfnNe2MLXLHes6rwm/5Kq2KsnxV+b35x+aH8z/AJn+Y9XL84ZL2SG0P/Lv&#xA;bn0YflWOMH54q9R/JTyuml+WBqkq/wCmasRJUjdYFqI1/wBlu/0jwxZBNPPuoikGnod/76X8Qo/X&#xA;iyYVPKIomc9ug98UEpULe4kQzBag1JPc+OLXSs1nELQS8jyoD7b9sU1slMt06uVUCg23xQ0L1+6j&#xA;FVRLxD9scffriqsrKwqpqPbFDeKuxVbLGJEK/cffFUA8boaMKe/bFK3FWwrN0BPyxVWitHJq/wAI&#xA;8O+Koxfgpx+GnSmKtszMasST4nFVr/YYVoSDTFCW0OKXYqoyzEEqv0nFVFSAwJ3AO4xVNLm7tmtm&#xA;AYMWFAvepxVhupx8Lx/BqMPp/txS+1/+cO9aa/8AyjNizEnSdRubZFPZJAlyKexadsVezazemw0e&#xA;+vh1tLeWf/kWhbv8sVflyS8j1NXdzuepJOKvr2xtYrDTre0Siw2kKRL4BY1Cj8Bi2PMdUvWvtQnu&#xA;m/3Y5Kg9lGyj7sVSPUpquIh0Xc/M4sJFuHUFjhCFSWUUHhiokhZkMbcOYYdfh6b4sSl93GquGHVt&#xA;yMVUMVdirgxBqDQ+2KoiK7YbSbjx74qiwwYVBqD3xQ7FXYq7ivgMVdirsVUZLqNdh8R9umKUO9zK&#xA;3fiPAYqpEk7k/ScVWGVB3+7FVNrj+UffiqkzciSRucVaxS7FUp1pPjifxBH3b/xxV9N/84O6pWPz&#xA;bpTH7Js7qIbdxLHJ+pMVe/fmpdiz/LLzbc1AMej35TlUgt9WcKDTxamKvzasv97IP+Mif8SGKvrD&#xA;zHcG30O8kBofT4A/8ZCE/wCNsWx5c7BFLHoBU4oSSRy7s56sa4ta3FDsVTGxt7d4AzIrsSQSwBp7&#xA;b4tkQll5YQrdSBDRK7KO22+LErBbQj9mvzxQoXUQQgqKKevzxVDO6pSvfFXR3YQ/CxH6sVRSX9ew&#xA;PyOKqgvIz1BGKqiTRuaKd/DFC2S5jTYfE3gMUoWSeSTqaDwGKqDyIvU7+GKqTXDH7O2KqZZj1NcV&#xA;RVtYNNGXZuA6AUriqHmiMUhQ7074qtVGboK4qvW3mbZUJPtiqxlKkhhQjqDiqXaytbdG8Gp94OKX&#xA;tX/OFeomH8y9UsiaJd6TIwHi8VxCV/4VmxV9Af8AOTetJpX5LeYDWkt6sNlCK0qZ5kDj/kWHOKvg&#xA;zQbN73W9Ps0BL3FzFEKf5bgYq+kPPOqRR2i6cATNNxkbwCAmn0kjFseeaiXEG32SfixYyYdr2vSW&#xA;sn1a1IEoFZJCK8a9AAdq4sEoTzJq69Zg3zRf4AYppn+kXFnPpdveSKsZmWrcyKchsaV9xiyACncS&#xA;gTuYHohpuh2O3tixKrZ2kc6M7k1rSgxUC0NKnCRkrXiSK/LFBWYoU5beKVaOoPge4xSl8+mypUx/&#xA;Gvh3xVB7g+BGKqizsOu4xVXSVW6HfwxV3NOlRXFVF52Oy7D8cVUqGtO+KqiwOeuwxVXS34rz4kgb&#xA;cjiqtHPJGCFpQ+OKqUiB25OKk98VcAAKAUGKqsNwsIYsCQfDriqCuZfWmaQCgPQfIUxVL9VFbNj4&#xA;EH8aYpeh/wDOKF4bf87tGiFf9LhvITQA9LWSXev/ABixV6L/AM5reeFludF8lW0lRb11PUVBrR2B&#xA;it1PuF9RiP8AKGKvI/yO8uNf+Zn1WVf9G0pOSkjYzSgqg+heTfdikM383TmXXrjf4Y+Ma/Qor+JO&#xA;LNiuuTiC0MrfYjDOw8eI2xYSeXO8txOzmryytWg3JZj2xQ9avPym8r6Xo9o9/c3L608SmW2jkjEX&#xA;M7tUcCwVeg+LfFlSQ6i9v6iW9sAttbqI41HTbrTFiVtm/wATJ47jFCKa5FujSNL6SftMTxGKpTN5&#xA;o0uNiFZ5fdF/5qK4rSxPNmmMaFZVHiVWn4McVpMrS/s7teVvKr+I6MPmDviqvihQ/RU9w7GNQy9a&#xA;k069sWQCEudPMEnCRSp7eB+WKFH6unicVXLCg7Yq2saL0GKq8VmXPJhxHieuKotIIk6Cp8TvihPL&#xA;cR/V0C04ld/44to5JHJaQC4kK7pyPFe1K4tZWz23NQ24IFF8DTFUDiqyVSyEDriqvarZ/Vf3nHlv&#xA;zrTkPliqSan/ALwyf7H/AIkMUsp/5x1uBB+dXlVyCQbp49vGSCRB/wASxVIfzS81P5r/ADD1/Xmf&#xA;nHeXkn1Yk1pbxn0oB9ESKMVe1fk/o6ab5Gsn40mvy13MfHmaJ/yTVcWYSTzHHJHrl4JAQTIWFf5W&#xA;3H4YpY35htPremPBy4l9g3h3xYySPyV5QkTXLbUdTlijsbGVZ2QEu8rRnkqKoHdgK8qbYoATTXtf&#xA;v9Qv7l3fiHdgQOtBtSvhipKUYsVeKkEUlzL8KIpb6BucVYdqWpXF9OZJCQgP7uPso/r74pT7Svyx&#xA;886pCJ7fS5EhYVV52SGoPQgSFWP3YppGah+T/nuygac2STxoOT+jLGxAH+SSpP0YrTD/APSLab9u&#xA;GZD7qwP68UMg0PzBdT3KWlzR+dQsgFGqBXemx6YoZZa3ZgqpXkpNT44pBp19cRXHEKuy1+0PHFZG&#xA;0suII0UuKg+HbFCFZgoqegxVG29uoAdtydwOwxVXxQjLOxM1GevEmiqOpxZCKVebNbh0sGxtkAvv&#xA;92A1/dj/ACh/MfDFJpKtC16e5keG6oSF5LIop3AoQPnixT8SFkUBqoN1HbfFUBcxFJCf2W3GKqWK&#xA;qa2kk0xC7DqScVQOswtBbSo2+woR7kYqnv5A/wDk5PKf/Mcv/EWxSwa+srixvriyuV4XNrK8MyeD&#xA;xsVYfQRir6Y/LC+ivPImkSIf7qH0HHg0LGM1/wCBrizCD8/2gWe1u1H21Mbn3Xdf1nFLCb6jWhYd&#xA;Nj95xYy5JfDcSwklDseoPTFgDSGuYRPI0uyu25p0OK21FbIm5+JvHFVDWIpJdMuEiBZyuyjqaEE4&#xA;qxzynb3L+YLKWKL1BbTJNJyWqARty+Lt2xZB7BqPnnVlFZbsQKeiRKAfo6t+OLIlIrnze9wOM81z&#xA;Mvg7ch9xbFHEl2oHy9qcP+lpVqUVuJEi/JlxWwlFlpeiWFw08LTTygEQ8woVa7E7UqaYsdkximST&#xA;7PUdQcWK/FUPdyALw7nfFKEDAMK9fDFUyRgyhh0OKEfpeny3lwiIhcswVEH7THtiyiFT8wfMUnlV&#xA;Y9D0pgmrzRCS+1BftRK9aRQ7fCSNy3Wn4LIl5SqTTy0UGSVzU9ySepOLFkmmaeLSI8t5n+2fD2GK&#xA;E4s2YqwPQdPpxVq96J9OKoXFVrTyQsGTqagg9MVSzWZ3ltZHfcniPxGKWV/843Wn1r87fK0XHlxn&#xA;mlpWn9zayy1+jhXFWU/85bfl3/hz8wB5hs4yumeZQ1wxA+FL1KC4X/Z8lk36kt4YqlP5B+ZOFxe+&#xA;Xpm+GYfW7Sv86gLKv0rxP0HFlF6Z51tvW0N3AqYHWT6Psn/iWLJ5pcr/AKI6+C/qxYnklGLWq28D&#xA;TScAadyfbFIFrrq1aBlBbkG6Hp0xSRSj0xYoO5vLmSZmLlaHYKaDbvtiytQeR5GLOxZj1JNTihrF&#xA;XYqvihlmbjEhdutBiqvBbzxTkSIUIG4O3XFSicUIK+dFblXcChGKUJAju/I7ltlGKpxBEfgjHU0G&#xA;Kp1/jXTPJ8KzfVTfalLVLaHl6aog+3IzUbdiaCg8cWfJ5z5z8y/4l1+bV/q/1UzJGrQ8udDGgTZq&#xA;L1p4YoKp5eCfVXIA58yC3cigpixTiOJpGoPpPhiqc6ZFbLyV6bAceX49cUxQGrGL60Vj+wOlOm+K&#xA;lBYoQ9w1XA8MVSvWGpbKvdmH4A4peq/84f6U17+cMd0BVdM0+6uSfDmFt/8Amfir6H/5yt0G31T8&#xA;mNVuHXlPpM1te2x8GEywv/ySmfFXxP5G1iHRvNumajPIYreGak8gqaRuCjmgBJ+FsUh9QzpBqGnO&#xA;kbrJDdRH05FNVKuvwsCPnXFm8mnjbjJGwo1CpHv0xQUixalSGZ4n5p16b4pBbnuJJmBem3QDpipN&#xA;qWKFOS3jc1Io3iMUqDWbj7LA/PbFVn1Wbw/EYq2LSU9aDFU10cRW/qK7AM9DU7DauLKJVNRljkdA&#xA;hDcQakdN8USKXXEpjTbqdhihKzWaXiNwPxOKpnb24jWp+1+rFUQjlHVx1U1GKoLzLp0OrxRyxkx3&#xA;kQotfsMp3of64pJYi2haqrFTbtt+1UU++uKp9pOnPBbiIUZyeUhHSpxQnltaycOMalqfaPvitOZW&#xA;VirChHUHFUvuG5Ssew2H0YqoPKqbHc+GKoUmpqe+KpRrMtZUjH7Iqfmf9rFL6d/5wg8ukW/mbzHI&#xA;uzvBp1s/ugM0w/4eLFX09qWnWGp2Fxp+oQJdWN3G0NzbyjkjxuKMrA9iMVfnV+c3kT/A/wCY+r6D&#xA;EhSwST6xplSTW1n+OIcjueFeBPipxV6j+S3mL9KeUlspX5XWlN6DV6+i3xQn7qqP9XFmEF5otPqu&#xA;uXKgUWRvVX5PufxrilhrfaPzxaWsVdirsVWvLGn2m38O+Kod7w9EFPc4pUTPMd+ZxVcl8V2chh+O&#xA;Kq63sBFanFV63MLGgND74qhL+RnPBN6bf1xVqxi4yCnapJxVMMUOrTFVjTwrsXFfAb/qxV0c0cle&#xA;J3HbFV4AHQUxVMdPniWIozBWBJ32riziUJqc6F2dDUKtK+JxRJJWbipY9sUIUB5HoAWZugGKrZAY&#xA;yQ44ld2r2xVjdxKZpnkP7R2+XbFL9D/yD8lv5Q/KrRNMnThfzxfXr9SKMJro+oUb3jQqh/1cVeg4&#xA;q+a/+c0vIv1zy/pfnO2jrPpcn1HUGA3NtO1YmPsk3w/7PFXzv+T3mL9EecYIZGpa6mPqkvgHY1ib&#xA;/g6L9JxSHtfnfS1n08XqD99bH4iOpjY0P3Hf78WbyC7d4gQPtVIJ+WLUgSzE1JNfHFW/Uk/mP3nF&#xA;VI3V0RQg0+nFVMyzfyfgcVcBdP8AZVj8hiq8WF425X7yMVWi2psxNfDFVrW7djXFVvpyr2P0Yq2P&#xA;X7V+n+3FV8d5KladTirmu5WHU18Sa4qpF5HO5J9sVXxW8rMKDfFUzt7dkbk3WlKYqiMUIGWZzKSC&#xA;QAdsUumuDIAtKDv88VUkgE8npluIA5GnXwxVTkVrO6BU8qCor4HbFUr1y+ZlI2Dy7EDsoxSy/wD5&#xA;x5/LlvPH5k2FtcRepo+mEahqvIVRooWBSI+PqyUUj+Xke2Kv0IxV2KpP5w8tWXmjytqnl69H+j6n&#xA;bSW7NSvBnX4JB7o9GHuMVfmhqmm6housXWm3amDUNOuHgnUVBSWFyrUPsy4q+nfLGsQ+Z/KNresQ&#xA;WvIDHcgU+GUApIKf6wNPbFmHk+sWvC6eORd+jDwZdj+rFhLml7WkRWg2PjihT+pH+f8ADFUdp2l2&#xA;8hZpauFpRa0G/wAsUxC+9sLaB1MaUDV2O9KfPFZBQxYqotbgqGCEg9MU0lWo6xptnOYLg85k2dUA&#xA;bj8z0xWkTbm0uIVmiAaNxVTTFVktma1j6eBxVCyExg8hQjtiqHhiaaYINix3PgMVR502NV+E8m98&#xA;VXw2dD8dKdgMVRcUJJ4xJU+AGKqr2lwi8mQ09qH9WK0VHFCXSkGRiNhXFK3FUMJpFkLo3E+Ptiqy&#xA;SQtykkboCWY+AGKscup2nnaQ9Dso8B2xS+8P+cY/y0byX+XcV1fQ+nrev8b2+DD40iI/0eE/6qNy&#xA;IPRmIxV69irsVdir4m/5zC8i/oT8wIPMdtHxsvMcPOUgfCLu3ASUf7JCje55Yqkn5BeYuM195fmb&#xA;4ZB9btAf5hRJVHzHE/QcWUUx8+2PoazOwHwuwkH/AD0FT/w1cVkxbFrdiqsjXFvRwCobxGxxTuFs&#xA;s0krcnNT2xUli2u65qFvqDW9u/pJFxNaAliQG/aB8cVDN/KHnryK+kEeY/Uj1SMNyPGQxSU+z6fo&#xA;1oadeXfFmC8nkkeSRpHNXclmPiSanFizfRY1gsY7cmroCWPiWNTT78UI5mCqWPQYoSa6kLyH7z9O&#xA;KUVpkVCznrT9eKpgDUVxQr2lt67mpoq9T33xZAWmsECoAkS7nsNyTizAdrTSaLY/XdRglhgJCoWQ&#xA;gsx6Ktab4qxi013T9SmcW6tE4HIxuAPmRQnFrKy5VVlPE9dyPA4qhp2KpT+bbFVciy+pVHHnx67c&#xA;uX6+uKsb1a8/49kPvIf1DFL0r/nGn8qz5589x3V/Dz8vaEUutQ5CqSyVrBb+HxsvJh/KpHfFX3ti&#xA;rsVdirsVeX/85I+Rf8XflXqccEfPUtJH6TsKCrFrcEyoO/xwlwB40xV8H+WNbl0PX7HVYqk2soZ1&#xA;HVoz8Mi/7JCRir3j8wIYruGzvoCJIrmEhJB0I2dD9PLFmXneLU2DQg9aYqjLq9jlh4KpqaE17UxZ&#xA;mSCxYJHr2mxXjh4jxuEHEk/ZYeB+WKWPNpOoKaGEn3FCPwxSirHRLhpVe4HCNTXjWpP3YqyW1r6y&#xA;/TX7sUK94T6YA6E74qghCJHFFq2KpjDEI049+pOKF+KufWbTSomluSxV6BEQVYt7VpiyiU48t/m1&#xA;5O0yF3uLG8kvWY8ZFjhIC02ALSgjfrtiy4mM/mP+Zsnm1ILK3tTaadbyeqFduUkknEqGamy0DGg3&#xA;+eKCWPeWo2W5e5p8KKUU/wCU2LEp4zdWJ9ycVQ8lxI6emT8ANQMVQN9di3i2/vG2QfxxSlmlaXqO&#xA;sara6Zp8LXWoX0qwW0C/aeSRuKjf3PU4q/Rb8pPy4sPy+8k2WgW5WS6H7/U7pRT1rqQD1H7fCKBU&#xA;/wAkDFWZYq7FXYq7FXEBgQRUHYg9CMVfnF+dHkj/AAV+ZWtaHGnCxWb6xp3h9VuP3kQHjwDcD7qc&#xA;VZn5O1c6x+WiQSNyudEnWFq9fSbaI/Kj8R/q4swkd3H6dw4HQ7j6cWs81HFDsVdiqClt5AzECq9a&#xA;4pUcVXrDK3RT8+2KouCARip3Y9TiqqQCKEVHhihpVVRRQB8sVUkmBlcM1BWij5YpVsUJbrmlvqFs&#xA;qxsFljbkvLoaihGKWOv5d1JCAwQV/wArFKtb+XmqDcSCn8qf1P8ATFCcRRRwxrHGvFF6AYqtlZ6c&#xA;gtY1PxEjYnwxVCTzJFG0j7Adh+oYpY/cTvPKZH6noPAeGKvrn/nEv8lzpdin5ga7BTUL6MjQYHHx&#xA;Q2zijXFD0aZTRP8AI3/axV9LYq7FXYq7FXYq7FXzJ/zmt5J+saRo3nO3jrLYudOv2HX0ZiZIGPsk&#xA;nMfN8VeCfk1rUVn5pbTLmhstYiNtIrfZ9QVaMn57qP8AWxSGVea9IawvJYTuIjVG8Y2+zimQY/i1&#xA;uxV2KuxVCNZvy+Ejj74pRSLxQL1oMUN4q7FXYql0v96/zP68Uo5HHpKzGmwqTihRlu+0f/BHFKFJ&#xA;JNSak98VdiqnMxVNup2xVQa6aO3ZGYCLq1cVY/fXjXEm20a/ZX+JxS9i/wCcbfyOk89a2Nd1uAjy&#xA;npkg9RWBAvJ13EC+KL1kP+x77KvudEREVEUKigBVAoABsAAMVbxV2KuxV2KuxV2KpB5/8p23m7yX&#xA;rHlu4oE1K2eKN2FQko+KGSn+RKqt9GKvzWmh1HRtXkhlVrXUtNuCjqdnjngehHzV1xV73rdxB5l8&#xA;paf5htgAZYgs6j9knZl/2EoIxZ8w8t1zWP0cioihrh68Q3QAdScWtLdN/MHzZpZc6feLAZPtkQQO&#xA;flydGantXFIW3HnjWbuf17tYZZCKSMsaxFvciPitfemKlONJ1eLUY2KqY5I6c0Jr16EHFCPxQ7FX&#xA;YqteREFWNMVQ8l5UEIPpOKUI0iKdzviq8sWpU1HbFVuKteon8w+/FVjzoOm5xVDTTBVMkjUUdScV&#xA;SO+vmuG4rtEOg8fc4pZ7+Sf5Maz+ZXmARAPa+XbNgdW1MD7I6+jFXZpX/wCFHxHsCq+/dB0LSdA0&#xA;a00bSLZLTTbGMRW0EYoFUbk+7MSSxO5O5xVH4q7FXYq7FXYq7FXYq7FXxT/zl7+XEmhedo/NdnDT&#xA;SvMIrOyj4UvoxSQHw9VAHHieXhirEfyZ80wJNceVdRf/AEPUqm0JNOMxFGQHtzA2/wAoe+LIFDef&#xA;vJGpfpP9zQyR1VkY8Qykkq6n3xUhKbHyppVvCV1eat0TXhEWoop0NB1xRsh7/wAs6PQmyupQ38rq&#xA;GH3/AAEfjippFaDpQsY5HMgkklIBIqAAvbf54sU1xQ4kAVPQdcVQNxLzfY1UdMUqJIAqemKqDzk7&#xA;LsPHFVsMTTShAdz3OKqkzvE5jpQrtXriqj8btTdieg64q5lZTRgQR1B2OKoe5vIbdfjNW7IOuKUl&#xA;uryW4armij7KDoMVeh/kx+SHmH8ydXBjDWXl21cDUtVYbAdTFBXZ5SPoXq3YFV96eVfKuheVdCtd&#xA;D0O1W0060XjHGvUn9p3bqzsd2Y9cVTbFXYq7FXYq7FXYq7FXYq7FWL/mX5C0zz35N1Dy5f0T6yvO&#xA;0uSKmC5TeKVe/wALdfFSR3xV+c/mDQda8r+YLvR9Tia01TTZjHKoJBDKaq6NtUEUZWHUb4q9P0/8&#xA;x9N8w+XYbfVCI/MNqQOdKCaMDdwelT+0vjuNuiyBYnM/OV3/AJmJqfc4sFIzRjviqItbyBFYO1N6&#xA;gUOKrX1Ov2dh223/ABxVRe9LdSx9u2KqZuD2XFVjTOwoemKt28DTScFIHck+GKukSS3mK8qMvRh7&#xA;4qsZmYlmNSepOKtR6la2c3OVgdiOI3b7sVS7U9ee6lJgT0kpQE7sf4DFKVASSyBQC8jmgAqWJOKv&#xA;oT8m/wDnE/XdfeDWfO6SaRom0kWm/YvLgdaOOsCH3+P2H2sVfYOi6JpOh6XbaVpFpHY6daJ6dvaw&#xA;qFRV6/SSdyTuTud8VRuKuxV2KuxV2KuxV2KuxV2KuxV2KvJvz3/IbS/zI01b2yaOx812acbO9YEJ&#xA;NGCT6E9ATx3PFuqn2qMVfDfmbyr5i8q6xLpGvWMunajAamKUUqK0DxsPhdDTZlJBxVSg1u4VBHN+&#xA;8X+bo39uKoyLU7R/2+B8G2/sxVXWWJ/surfIg4qvxV2KqtteJbOWahBFNzTFCElv7TkzGVRUk0U1&#xA;6/LFKj+mreJuURYsOhAp+vFUPPrs0jFgg5H9pjX9VMVQct9dS/akIHguw/DFVtpZ3l7cpbWcElzc&#xA;ymkcEKNI7HwVVBJxV7N5C/5xN/MvzG0dxrMaeWtNahaS8HO6Kn+S1UhgfaRkxV9Qflp+QH5eeQfT&#xA;urC0N/rSjfV72kkwPf0lpwi/2I5U2JOKvSMVdirsVdirsVdirsVdirsVdirsVdirsVdiqQecvIXl&#xA;Hznpn6O8yabFqFuKmJnBWWJj1aKVaOh/1Tv3xV85+df+cJ5DJJceS9cUIxJXT9UBHEdaLcQq1fas&#xA;fzOKvH9f/wCcdPzl0Rm9fy1cXca/ZlsCl4GHiFgLyfeoOKsKv/K3mfT3KX+kXto42Kz28sRr16Oo&#xA;xVLAzDoSMVcWY7Ek4qjLbRNZuqfVrC5n5LyX0oXeq+I4g7Yqndj+Vv5l39PqflTV5lO/NbG44dK/&#xA;aKcfxxVlmlf84xfnZqJBHl42kR6yXdxbxU+aGQyf8LirOtC/5wm86XBVtb16w05Cd1tllu5APcML&#xA;da/JsVeneWf+cOPyw0wrLrE97rswpyjlkFvAaeCQBZPvkOKvX/LXkvyn5Ytvq/l7SLXTIyKObaJU&#xA;dx/luBzf5sTiqc4q7FXYq7FXYq7FXYq7FXYq7FX/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:427e925c-198b-c543-9458-faf815500386</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:427e925c-198b-c543-9458-faf815500386</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:427e925c-198b-c543-9458-faf815500386</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:38:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>106.681922</stDim:w>
            <stDim:h>122.801388</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -122.801 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 122.801 li
106.682 122.801 li
106.682 0 li
cp
clp
103.362 54.9989 mo
103.293 51.1527 102.842 47.4745 102.197 44.4349 cv
100.877 38.2133 98.0901 32.2103 94.2483 27.1625 cv
91.3996 23.4198 88.0344 21.1971 84.362 19.0101 cv
82.6047 17.0516 80.32 15.7972 77.5842 15.411 cv
73.0881 9.40516 66.5813 7.03895 58.9446 5.599 cv
49.6828 3.85242 41.0486 1.43934 32.2512 6.1034 cv
24.4314 10.2494 19.7004 17.9804 15.7185 25.5761 cv
12.5227 31.6713 9.27951 37.6332 8.46897 44.2128 cv
7.7717 45.1332 7.2678 46.3148 7.0803 47.7699 cv
6.97678 48.5761 6.37424 49.4369 6.09397 50.1879 cv
5.55686 51.6244 5.3342 52.9882 5.18283 54.5243 cv
4.96018 56.7728 4.6174 59.1532 5.09543 61.3754 cv
3.13205 62.6962 1.79319 65.1054 2.49045 67.518 cv
4.67698 75.0761 7.44455 82.3671 10.5256 89.6039 cv
12.1633 93.4496 14.237 97.2216 15.6076 101.167 cv
16.7375 104.419 17.0251 107.735 18.9909 110.662 cv
25.4016 120.206 41.9446 121.909 52.0686 118.426 cv
57.5964 119.984 64.1203 119.119 68.925 116.717 cv
76.1653 113.096 83.1189 107.919 88.593 101.972 cv
99.9621 89.62 107.993 71.8095 103.362 54.9989 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.203922 .215686 .211765 rgb
f
56.5422 11.9081 mo
56.4787 11.7904 56.3908 11.6849 56.2912 11.5878 cv
57.0549 11.7479 57.8215 11.8837 58.593 11.9677 cv
57.8757 11.9916 57.1985 11.9672 56.5422 11.9081 cv
cp
11.4372 67.9633 mo
11.5998 67.9179 11.7541 67.8505 11.9045 67.7728 cv
12.0266 69.6166 12.1526 71.4598 12.2761 73.3036 cv
12.2932 73.5599 12.3039 73.8178 12.3147 74.0751 cv
11.9416 72.0521 11.6321 70.0199 11.4372 67.9633 cv
cp
79.9416 15.5492 mo
78.3332 15.2689 77.091 14.2763 75.6926 13.4857 cv
73.9445 12.497 72.136 11.6117 70.3752 10.643 cv
70.3684 10.6395 70.3625 10.6381 70.3557 10.6342 cv
69.2751 8.61414 66.3205 8.37488 63.7761 7.91297 cv
63.5549 7.73816 63.2951 7.60486 62.9856 7.54432 cv
62.3615 7.42176 61.7278 7.28309 61.0881 7.13514 cv
57.3469 5.3993 54.3186 4.31434 50.51 4.51746 cv
49.593 4.32361 48.677 4.14295 47.7649 4.00135 cv
45.5559 2.36707 41.8996 2.90565 38.7307 4.04822 cv
33.7737 5.09949 27.259 8.14734 25.8352 12.7958 cv
25.7805 12.975 25.7654 13.1449 25.782 13.3031 cv
23.1096 16.2841 20.4563 19.3539 18.1858 22.639 cv
18.1037 22.7587 18.0315 22.8749 17.9533 22.993 cv
16.7697 24.4608 15.9006 26.0565 15.174 27.9608 cv
14.7722 29.0126 15.1301 29.8319 15.7981 30.3246 cv
13.6462 33.1459 11.052 35.8622 10.1252 38.7396 cv
9.88694 39.4808 9.8469 40.2264 9.98557 40.8876 cv
8.22873 43.2645 6.4426 45.7689 6.30198 48.6508 cv
6.25705 49.5712 6.59885 50.2294 7.12815 50.6415 cv
7.03928 50.9667 6.96506 51.2948 6.88889 51.6224 cv
5.82151 53.5736 5.07639 55.6932 4.62815 57.8959 cv
2.98557 58.0346 1.42209 59.4379 2.11545 61.33 cv
2.90354 63.4804 3.64768 65.6371 4.3674 67.7992 cv
4.5134 68.8778 4.70871 69.9413 4.95334 70.9779 cv
5.09397 71.5731 5.39719 71.9804 5.78049 72.2308 cv
6.61155 74.9623 7.38889 77.7123 8.06272 80.5053 cv
8.3342 81.6278 9.07834 82.2181 9.92698 82.3949 cv
10.8366 85.5678 11.9182 88.7133 12.6594 91.6273 cv
12.7649 92.0414 12.8762 92.4525 12.9846 92.8651 cv
13.0002 93.0292 13.0315 93.1967 13.0979 93.371 cv
13.1179 93.4237 13.1389 93.476 13.1594 93.5287 cv
14.6828 99.204 16.5622 104.729 19.4699 109.875 cv
19.9914 110.798 20.8279 111.09 21.6252 110.976 cv
22.4651 111.849 23.3391 112.686 24.2893 113.443 cv
25.551 114.448 26.9192 115.546 28.4216 114.341 cv
28.9284 113.934 28.885 113.17 28.6399 112.651 cv
28.3869 112.117 27.9817 112.183 27.5578 112.014 cv
27.7014 112.052 27.2912 111.708 27.1936 111.63 cv
26.8884 111.387 26.5803 111.148 26.2815 110.897 cv
25.3733 110.135 24.5383 109.298 23.7365 108.427 cv
23.7029 108.142 23.6169 107.848 23.4529 107.547 cv
23.0822 106.87 22.779 106.193 22.5036 105.512 cv
22.2859 103.958 21.8845 102.672 21.3147 101.281 cv
21.3127 101.268 21.3088 101.256 21.3069 101.243 cv
21.3049 101.244 21.303 101.245 21.3 101.246 cv
21.2258 101.064 21.1584 100.887 21.0774 100.7 cv
20.9289 100.357 20.7375 100.102 20.5197 99.913 cv
20.5056 99.8754 20.4895 99.8383 20.4748 99.8002 cv
19.9826 97.8222 19.1916 95.9056 18.5949 93.9574 cv
17.676 90.9564 16.8762 87.9252 16.1555 84.8715 cv
16.0803 84.5531 15.8933 84.3612 15.6672 84.264 cv
15.5442 83.4608 15.3894 82.6581 15.1662 81.8466 cv
15.9148 78.8822 14.9953 75.5687 14.6941 72.5438 cv
14.341 68.9989 14.0344 65.4486 13.7336 61.8988 cv
13.716 61.6918 13.6447 61.5248 13.551 61.3783 cv
13.5676 61.2328 13.5803 61.0858 13.5852 60.934 cv
13.5627 60.6083 13.5256 60.2841 13.4729 59.9613 cv
13.4504 59.9061 13.4319 59.8622 13.4133 59.8153 cv
13.4123 59.66 13.3869 59.5165 13.343 59.3817 cv
13.5149 58.7865 13.7102 58.203 13.9211 57.6425 cv
14.2575 56.746 13.9045 56.0751 13.303 55.7181 cv
13.3811 55.6493 13.4533 55.5712 13.5129 55.4774 cv
15.0764 53.0165 15.9709 49.9916 17.1721 47.3417 cv
18.634 44.1171 20.3064 41.0136 22.1028 37.9642 cv
22.8039 36.7738 21.2385 35.7382 20.3308 36.5028 cv
20.7795 35.5448 21.2258 34.5907 21.6848 33.6561 cv
25.0656 29.2689 28.2986 24.7538 31.219 20.0443 cv
32.8703 18.9716 34.5481 17.9442 36.364 17.101 cv
36.7854 17.5946 37.4719 17.8856 38.2795 17.7465 cv
41.2951 17.2274 44.1125 16.6205 46.7043 14.9159 cv
46.8918 14.7924 46.9875 14.5995 47.01 14.4017 cv
48.7033 14.2655 50.4084 14.2548 52.1184 14.3861 cv
52.8044 14.6434 53.4992 14.8617 54.2121 14.996 cv
58.5178 15.8055 62.6809 13.9393 66.9743 15.1054 cv
67.4958 15.247 67.927 15.1166 68.2414 14.8529 cv
68.281 14.8861 68.32 14.9164 68.3596 14.9501 cv
69.071 15.5619 69.7453 16.2914 70.5725 16.7479 cv
71.383 17.1957 72.632 17.0985 73.219 17.8026 cv
73.8493 18.5585 74.9807 18.4974 75.7502 17.973 cv
75.7771 17.9906 75.8029 18.0101 75.8293 18.0272 cv
77.445 19.0687 79.0656 19.5551 80.6643 18.288 cv
81.5974 17.5482 81.092 15.7499 79.9416 15.5492 cv
cp
.317647 .290196 .301961 rgb
f
32.5578 106.805 mo
32.2395 106.847 31.9201 106.88 31.6008 106.911 cv
31.9397 106.269 32.1916 105.68 32.2912 104.912 cv
32.3489 104.469 31.8967 103.869 31.448 103.804 cv
30.5461 103.674 30.0539 103.766 29.2658 104.195 cv
28.136 104.597 27.1897 105.466 26.4348 106.41 cv
25.0481 108.141 25.3518 110.213 27.1623 111.496 cv
29.4201 113.097 33.0129 112.676 34.5466 110.271 cv
35.4055 108.924 34.3098 106.575 32.5578 106.805 cv
cp
f
45.1887 89.953 mo
45.1941 89.6683 45.1452 89.3964 45.0422 89.1371 cv
44.6814 88.0067 43.552 87.1683 42.3464 87.4647 cv
42.1506 87.5126 41.6467 87.7474 41.6379 87.7523 cv
41.636 87.7538 41.635 87.7553 41.633 87.7567 cv
41.4787 87.7391 41.3235 87.7294 41.1692 87.7269 cv
40.5031 87.4286 39.717 87.412 39.0725 87.8275 cv
38.6076 88.1273 38.2849 88.5433 38.1037 89.0072 cv
37.8449 89.2792 37.6179 89.5805 37.4524 89.9013 cv
36.9387 90.893 36.9045 91.848 37.0549 92.9301 cv
37.176 93.7958 38.0774 94.5038 38.8562 94.7308 cv
40.5383 95.2216 42.3655 94.7245 43.6399 93.5389 cv
44.0925 93.1176 44.4861 92.5966 44.7658 92.0438 cv
45.0349 91.5131 45.2336 90.9481 45.2239 90.3441 cv
45.1057 89.5648 45.094 89.4345 45.1887 89.953 cv
cp
f
48.0285 64.1591 mo
44.7873 62.122 38.3352 61.2221 35.2981 63.9764 cv
34.7082 64.1317 34.1267 64.3016 33.5578 64.4872 cv
32.009 64.993 30.6897 65.8617 30.4192 67.579 cv
30.1399 69.3593 31.1545 70.9686 32.9514 71.2758 cv
34.3781 71.5194 35.5061 70.7157 35.8489 69.6264 cv
36.7043 69.6034 37.5886 69.1835 38.0471 68.3676 cv
39.009 68.1859 39.9201 68.0189 40.2346 67.9808 cv
42.2932 67.7343 44.218 67.8905 46.1823 68.5389 cv
48.8332 69.4135 50.2668 65.5653 48.0285 64.1591 cv
cp
f
26.6252 54.0927 mo
25.2639 54.1146 24.1057 54.8597 22.9826 55.5639 cv
21.9983 56.1805 21.0666 57.2543 20.0197 57.579 cv
19.3762 57.7782 18.7365 57.5653 18.0539 57.9179 cv
17.4475 58.2308 16.9416 58.7421 16.6828 59.37 cv
16.2463 60.4301 16.3547 61.7045 16.5031 62.9008 cv
16.4133 63.4877 16.4699 64.1122 16.7405 64.7772 cv
17.7317 67.2084 21.5862 67.1176 21.5949 64.12 cv
21.5964 63.6303 21.5368 63.077 21.4983 62.5272 cv
22.6008 62.2836 23.552 61.7787 24.5705 60.8095 cv
26.0344 59.4159 27.6994 57.4496 27.926 55.3934 cv
28.0022 54.7011 27.2683 54.0819 26.6252 54.0927 cv
cp
f
51.1653 22.7201 mo
50.4992 21.0761 48.8889 20.2308 47.2112 21.1112 cv
44.5466 22.5092 41.8918 23.9262 39.2424 25.3524 cv
37.5676 26.2538 37.4446 29.0853 39.2424 29.9515 cv
40.2273 30.4262 41.2151 30.6376 42.2038 30.5839 cv
42.2453 30.8988 42.2883 31.2133 42.3615 31.5253 cv
43.0969 34.6576 47.7737 33.3168 47.1526 30.2045 cv
46.9074 28.975 47.3449 27.5892 48.3733 26.8217 cv
48.3899 26.8095 48.4006 26.7943 48.4172 26.7816 cv
48.7029 26.952 48.9992 27.1132 49.3225 27.2596 cv
50.3987 27.747 51.6218 27.1762 51.6682 25.9139 cv
51.7102 24.7719 51.5959 23.7811 51.1653 22.7201 cv
cp
f
67.4035 36.6693 mo
65.3757 32.3768 60.2224 35.057 56.7512 34.9266 cv
55.2102 34.869 54.3928 35.8031 54.2375 36.9047 cv
53.2658 37.827 52.6203 39.0746 52.5549 40.7216 cv
52.5124 41.8051 53.6697 42.2108 54.5129 41.8446 cv
55.6115 41.3671 56.7331 40.7631 57.8821 40.371 cv
59.7336 40.599 61.5871 40.7772 63.4553 40.8143 cv
64.6477 40.8383 65.5774 39.9701 65.9758 38.9266 cv
66.0232 38.9218 66.071 38.9139 66.1184 38.9091 cv
67.2863 38.7924 67.9123 37.746 67.4035 36.6693 cv
cp
f
76.7629 62.4301 mo
75.632 63.0248 74.3645 63.9711 73.7512 65.1532 cv
73.0588 65.5692 72.5051 66.1703 71.9817 66.7889 cv
70.6428 68.3729 69.6418 70.0414 68.7439 71.9042 cv
67.4924 74.5004 71.1164 76.7059 72.6496 74.1874 cv
73.2048 73.2753 73.8469 72.4476 74.5168 71.618 cv
74.8576 71.1962 75.2102 70.7841 75.5788 70.3856 cv
75.676 70.2811 75.9568 70.0604 76.1364 69.8964 cv
77.2522 69.9852 78.2883 69.7914 79.2326 68.8886 cv
80.4006 67.7709 80.6945 66.309 80.8186 64.7577 cv
80.9909 62.6054 78.4338 61.5526 76.7629 62.4301 cv
cp
f
78.0266 90.3339 mo
77.2053 88.1376 75.0715 86.9218 72.7424 87.5639 cv
71.7326 87.8427 70.9284 88.4711 70.1477 89.14 cv
69.7917 89.4457 69.924 89.389 69.5871 89.5682 cv
69.782 89.4633 69.7141 89.4623 69.383 89.5643 cv
69.0471 89.6561 68.7404 89.8021 68.4636 90.0033 cv
67.007 90.9608 66.8283 92.5311 67.5871 93.7831 cv
67.5046 94.6019 67.782 95.4891 68.2951 96.1146 cv
68.3127 96.308 68.3806 96.4852 68.4987 96.6469 cv
69.382 98.5087 71.9494 98.0136 72.8391 96.556 cv
74.5715 95.8163 76.1545 94.3265 77.2854 93.14 cv
77.9504 92.4418 78.385 91.2904 78.0266 90.3339 cv
cp
f
29.2356 60.474 mo
29.1496 60.223 29.0256 59.9911 28.8957 59.7616 cv
28.9065 59.389 28.8625 59.0199 28.7317 58.6664 cv
28.1374 57.058 25.7004 56.3666 24.7854 58.1503 cv
24.4983 58.7094 24.4021 59.1942 24.4074 59.66 cv
24.2805 59.8563 24.1472 60.0482 24.0061 60.2352 cv
23.6594 60.6972 23.2717 61.1366 22.8645 61.5458 cv
22.6594 61.7514 22.4514 61.9486 22.2483 62.1469 cv
21.7004 62.3519 21.1535 62.558 20.6208 62.8021 cv
19.7072 63.2206 19.303 64.7352 19.9016 65.5438 cv
19.9607 65.6234 20.0197 65.7025 20.0783 65.7821 cv
20.3635 66.1669 20.7859 66.5521 21.2854 66.6376 cv
21.3835 66.6923 21.4851 66.7318 21.5901 66.7553 cv
22.2346 67.3192 23.1491 67.5189 24.0207 66.9428 cv
24.487 66.6347 24.928 66.2572 25.3547 65.8563 cv
26.1369 65.5443 26.8772 65.1503 27.5178 64.7084 cv
28.4572 64.0609 29.1203 63.2323 29.3342 62.099 cv
29.4367 61.5551 29.4055 61.0043 29.2356 60.474 cv
cp
.14902 .156863 .152941 rgb
f
49.8596 67.6342 mo
47.7927 67.5546 45.7112 68.2138 43.6594 68.3407 cv
43.2951 68.0341 42.8235 67.8163 42.2658 67.746 cv
41.1892 67.6093 40.1682 67.6376 39.1887 67.8202 cv
38.5783 67.8065 37.9572 67.9359 37.2658 68.3729 cv
37.2195 68.4027 37.1819 68.4384 37.1379 68.4696 cv
36.55 68.7416 35.9758 69.077 35.4167 69.4921 cv
35.2766 69.5961 35.157 69.7152 35.0471 69.8402 cv
34.6936 69.725 34.3391 69.6 33.9826 69.4589 cv
31.5842 68.5116 29.8303 72.6102 32.2126 73.6571 cv
38.7834 76.5448 44.9416 76.4276 51.2365 72.7177 cv
53.6242 71.3099 52.5227 67.7367 49.8596 67.6342 cv
cp
f
48.2229 91.3554 mo
47.216 89.6576 44.385 89.9081 43.9045 91.9198 cv
43.7038 92.7597 43.2278 93.517 42.8059 94.2938 cv
41.1731 94.6488 38.3342 94.3847 37.8127 94.3114 cv
34.8752 93.7225 33.6003 98.1596 36.5647 98.8383 cv
37.0754 98.955 37.6076 99.0595 38.1472 99.1547 cv
38.1369 99.2313 38.1281 99.309 38.1301 99.393 cv
38.1501 100.416 38.634 101.339 39.4958 101.904 cv
39.9314 102.19 40.4255 102.354 40.9455 102.328 cv
41.2883 102.311 41.6135 102.233 41.9167 102.073 cv
42.0598 101.967 42.2004 101.857 42.3381 101.744 cv
42.6159 101.398 42.6662 101.328 42.4895 101.533 cv
42.8752 101.141 42.9953 100.537 42.7737 100.033 cv
42.657 99.767 42.4895 99.579 42.2844 99.4447 cv
43.5989 99.3617 44.8791 99.0795 46.0276 98.4579 cv
48.6272 97.0497 49.7746 93.9725 48.2229 91.3554 cv
cp
f
85.53 66.0536 mo
85.5266 64.2157 82.8103 63.1722 81.4475 65.0067 cv
80.6726 66.0497 79.9499 67.0189 79.5349 68.1561 cv
79.341 68.4633 79.1379 68.765 78.9402 69.0702 cv
77.4524 69.7318 76.4153 71.5106 75.4778 72.7377 cv
74.8059 73.6161 74.9895 74.4491 75.551 75.0238 cv
75.5988 75.662 75.9123 76.2953 76.5012 76.5936 cv
76.7146 76.7015 li
77.3362 77.0165 78.2668 77.0277 78.7595 76.4379 cv
78.8557 76.3231 78.9445 76.1947 79.0393 76.0726 cv
79.0432 76.1014 79.1418 76.058 79.3132 75.954 cv
79.9734 75.5536 80.6106 75.0805 81.1272 74.5057 cv
81.5422 74.0438 81.8967 73.4681 82.1262 72.8534 cv
83.6604 71.6605 85.1047 70.3597 86.0559 68.7079 cv
86.6838 67.6156 86.2873 66.6132 85.53 66.0536 cv
cp
f
54.3752 28.497 mo
54.3098 28.1708 54.2444 27.8446 54.1789 27.518 cv
53.7805 25.5326 51.8205 25.3773 50.4729 26.2333 cv
49.7688 25.953 48.8889 26.0805 48.2907 26.6361 cv
48.2795 26.621 48.2678 26.6058 48.2561 26.5912 cv
47.6926 27.2821 46.9758 29.0043 46.3781 29.9388 cv
44.3996 30.2933 41.9836 29.4896 40.2077 28.7509 cv
37.466 27.6102 36.344 31.6893 38.341 33.1791 cv
40.6218 34.8812 44.508 36.2846 47.3518 35.3363 cv
48.0124 35.1161 48.6096 34.6903 49.135 34.1381 cv
50.4577 33.5731 51.6155 32.7006 52.5373 31.6146 cv
52.7649 31.5497 52.9817 31.4511 53.218 31.3412 cv
54.2688 30.8524 54.5813 29.5219 54.3752 28.497 cv
cp
f
69.821 42.2284 mo
69.8274 42.2191 69.8342 42.2108 69.8401 42.2015 cv
70.718 41.1146 71.091 39.747 70.5705 38.0795 cv
69.7356 35.4037 65.8156 35.9222 65.7102 38.7372 cv
65.7029 38.9271 65.6574 39.0961 65.593 39.2533 cv
65.0998 39.181 63.863 39.8466 63.594 39.9247 cv
63.135 40.059 62.6672 40.1454 62.1965 40.2118 cv
61.8698 39.6264 61.258 39.1889 60.3523 39.1527 cv
59.6526 39.1249 59.0119 39.1967 58.3869 39.3114 cv
57.1106 39.4247 55.8352 39.5526 54.5569 39.6615 cv
52.7966 39.8109 51.9201 41.4037 52.6467 42.9901 cv
54.3908 46.7953 59.78 46.3607 63.2492 45.8261 cv
65.8283 45.4286 68.4817 44.3099 69.8083 42.2465 cv
69.8127 42.2406 69.8166 42.2343 69.821 42.2284 cv
cp
f
86.5207 40.2592 mo
86.8195 38.9818 86.9504 37.7172 86.9514 36.7391 cv
86.9524 36.3104 86.8127 35.9286 86.5915 35.6093 cv
87.2649 35.2772 87.7561 34.6547 87.6682 33.7723 cv
87.6496 33.5878 87.6281 33.4159 87.6013 33.2494 cv
87.6106 33.2352 87.6203 33.2216 87.6291 33.2074 cv
87.7492 33.3178 87.8684 33.4271 87.9885 33.5385 cv
88.2024 35.9183 88.4187 38.2997 88.6311 40.6815 cv
88.0608 40.2313 87.2834 40.0438 86.5207 40.2592 cv
cp
81.3591 32.3832 mo
81.5168 32.4188 81.677 32.4491 81.8449 32.4638 cv
81.9699 32.4745 82.092 32.473 82.2151 32.4721 cv
82.2453 32.5746 82.2688 32.6776 82.3127 32.7811 cv
82.3484 32.8651 82.3987 32.9432 82.4411 33.0248 cv
81.969 33.9349 82.2688 34.8764 82.8918 35.5028 cv
82.2297 35.5077 81.7512 33.9701 81.3591 32.3832 cv
cp
103.404 68.08 mo
103.925 65.9804 104.141 63.7831 104.335 62.2015 cv
105.397 53.5521 103.793 46.7699 100.633 38.747 cv
100.42 38.2069 100.024 37.8949 99.5847 37.7421 cv
99.4699 37.4218 99.343 37.1039 99.2238 36.7846 cv
100.406 33.1508 96.3479 28.1449 94.404 25.4164 cv
91.3215 21.0907 87.1404 19.9193 82.4206 17.9349 cv
81.2668 17.4496 79.6418 18.6923 79.7995 19.9315 cv
79.9699 21.2675 79.9875 22.7347 80.4035 24.0248 cv
80.5481 24.4721 80.7595 24.8866 81.0022 25.2855 cv
80.8899 25.3138 80.7824 25.3593 80.6672 25.3798 cv
80.9187 25.5638 80.8928 25.5721 80.5891 25.4052 cv
80.049 25.3637 79.7219 25.0829 79.1013 25.2103 cv
77.9055 25.4564 76.7551 26.3998 75.8195 27.1259 cv
75.7453 27.1835 75.6833 27.247 75.6252 27.3119 cv
75.6194 27.3114 75.6145 27.3109 75.6096 27.3104 cv
73.9846 27.1215 73.9548 29.4525 75.2512 29.9574 cv
77.7937 30.9481 77.2956 32.8822 77.8733 35.2518 cv
78.2082 36.6259 78.6174 38.4017 79.6975 39.4169 cv
80.2058 39.8944 80.7487 40.1713 81.3034 40.3016 cv
81.1438 40.7089 80.9807 41.1161 80.8059 41.5233 cv
80.2766 42.7621 79.9348 43.6361 80.4704 44.9218 cv
80.7014 45.475 81.1457 45.9623 81.8039 45.9369 cv
82.2981 45.9179 82.7492 45.8007 83.1613 45.6093 cv
83.1487 45.8402 83.1711 46.0731 83.2199 46.3016 cv
82.2326 45.9262 80.9221 45.8041 79.2116 46.0253 cv
74.9387 46.5785 71.0647 48.6591 67.3215 50.6693 cv
65.1379 51.8427 62.8542 52.9437 60.6633 54.1805 cv
60.6262 54.0902 60.593 53.9965 60.5437 53.9159 cv
59.9197 52.8905 58.8933 52.6351 57.7844 52.7929 cv
57.7531 52.7972 57.7234 52.8075 57.6926 52.8124 cv
57.4651 52.6317 57.1755 52.496 56.799 52.4408 cv
54.4856 52.1034 52.2424 51.85 50.0329 51.3226 cv
48.8205 50.7684 47.4729 50.1469 46.0998 49.0966 cv
44.4094 47.8036 42.7405 46.7128 40.6628 46.266 cv
39.5119 45.704 38.2014 45.2606 36.8713 44.9096 cv
36.4787 44.4794 35.9392 44.1727 35.323 44.121 cv
33.4299 43.9623 31.5373 43.8021 29.6447 43.6415 cv
26.8127 43.4008 26.7829 47.4135 29.2268 48.139 cv
28.0461 49.4213 28.7551 52.1698 30.8059 51.9472 cv
32.7219 51.7391 34.3987 51.1249 36.2761 50.7899 cv
37.8093 50.5165 38.924 50.5067 39.9016 50.7372 cv
39.9836 50.8158 40.0261 50.893 40.0114 50.9662 cv
39.7444 52.306 40.6233 53.8954 42.1736 53.8046 cv
44.2248 53.6845 45.8308 54.5717 47.6887 55.1244 cv
49.0998 55.872 50.2883 56.7313 50.2776 58.0048 cv
50.2639 59.726 52.2365 60.8734 53.7199 59.9804 cv
54.0002 59.8114 54.3147 59.6019 54.6452 59.3812 cv
54.7004 60.6952 56.1155 61.9164 57.5691 61.6805 cv
58.49 62.6127 59.6721 62.9745 60.968 62.9515 cv
60.8679 63.0521 60.7649 63.1459 60.6667 63.2499 cv
59.9367 64.0238 60.011 65.3124 60.6672 66.0507 cv
60.6286 66.1332 60.591 66.2177 60.5554 66.3231 cv
60.0989 67.015 59.6682 67.7225 59.2619 68.4462 cv
58.6135 69.5414 59.0383 70.6371 59.8669 71.2211 cv
58.3508 72.7504 56.3694 74.6708 56.0632 75.5712 cv
55.8781 76.1151 55.9983 76.8026 55.841 77.266 cv
55.5002 78.2763 54.6291 79.6674 53.9592 80.8847 cv
53.5276 80.4887 53.0774 80.0966 52.9035 80.0067 cv
51.3625 79.2094 50.1018 79.5658 48.4934 79.495 cv
44.8308 79.3344 42.9743 76.475 39.1682 77.6259 cv
35.7248 78.6669 31.549 81.0624 27.6565 81.514 cv
27.532 81.2504 27.2834 81.0468 26.8835 81.0448 cv
25.8103 81.0389 24.7424 81.0917 23.676 81.1688 cv
21.9182 80.66 20.7219 80.0844 18.3611 81.8539 cv
16.4485 83.288 18.1985 86.4891 20.1477 85.3031 cv
21.552 84.8573 21.5456 85.682 22.7668 86.1303 cv
24.0691 86.6078 25.1174 86.4545 26.4514 86.2631 cv
30.7097 85.6517 34.8235 84.6425 38.8811 83.2924 cv
41.8723 82.2977 41.5901 83.7714 44.0822 84.6508 cv
45.2766 85.0722 46.3801 85.0546 47.6487 84.9408 cv
50.2717 84.705 50.2639 85.7636 52.3186 86.7645 cv
52.8874 87.0419 53.4084 87.1757 53.9231 87.2191 cv
54.1467 87.4222 54.4035 87.579 54.6823 87.6947 cv
54.676 87.7919 54.6721 87.8905 54.6565 87.9828 cv
54.2512 90.2743 53.1604 91.3866 52.2795 93.4452 cv
51.6423 94.933 52.7014 96.9144 54.5295 96.3715 cv
58.9231 95.0663 59.9592 90.9525 60.2356 87.1137 cv
60.2561 86.83 60.2834 86.5634 60.3093 86.3041 cv
61.5652 86.2318 62.844 86.0697 64.0793 85.9349 cv
64.0774 86.0048 64.0695 86.0765 64.0754 86.1439 cv
64.1291 86.7445 64.6242 87.1937 65.2473 87.0365 cv
65.4343 86.9891 65.6447 86.8939 65.801 86.8363 cv
65.7541 86.8676 66.0403 86.8285 66.1355 86.8309 cv
66.9934 86.8539 67.6096 86.2557 67.8215 85.5326 cv
70.2317 85.0404 72.1228 83.83 74.5183 82.7445 cv
76.3879 81.8973 75.0554 78.913 73.1369 79.4672 cv
70.1819 80.3207 67.8996 80.7675 64.8274 80.7675 cv
63.3781 80.7675 61.634 81.3578 60.053 81.639 cv
59.9338 81.5531 59.7922 81.4916 59.6408 81.4389 cv
59.6399 81.2411 59.6311 81.0468 59.5989 80.8656 cv
59.5779 80.7494 59.5364 80.64 59.4905 80.5331 cv
60.1809 79.4794 60.6018 78.4852 60.342 77.0848 cv
62.2834 74.5326 66.9904 71.183 65.7346 67.9623 cv
65.5515 67.493 65.2004 66.9882 64.7424 66.6801 cv
64.967 65.8983 65.094 65.1293 65.0154 64.4755 cv
68.1799 61.559 72.7258 58.6483 76.6858 57.5663 cv
77.0031 57.493 77.32 57.4203 77.6374 57.3392 cv
78.427 57.181 78.8713 56.6722 79.0373 56.0682 cv
79.1428 56.0194 79.2551 55.9799 79.3606 55.9305 cv
78.6018 57.8895 80.6809 60.2377 82.7082 58.9418 cv
83.6711 58.3256 84.635 57.7098 85.5984 57.0936 cv
85.6975 57.1976 85.8049 57.2904 85.9201 57.3724 cv
85.7912 58.5043 86.7253 59.243 87.7868 59.3456 cv
88.2229 60.996 89.2263 63.2538 89.3962 63.5941 cv
89.6408 64.0839 89.9738 64.4042 90.3449 64.5975 cv
90.4123 67.9896 90.1965 71.3505 89.2424 74.3817 cv
89.1765 74.5912 89.155 74.7885 89.1535 74.9774 cv
88.3279 77.3153 87.6028 79.6928 86.7492 81.8793 cv
86.1672 82.1488 85.6965 82.4891 85.2737 82.9515 cv
85.0764 82.7909 84.8474 82.6747 84.5988 82.6044 cv
84.6584 81.8993 84.0598 81.1766 83.4162 80.9916 cv
82.508 80.7308 81.7981 81.3124 81.4699 82.0966 cv
81.0276 83.1547 80.4748 84.2128 81.2805 85.2567 cv
81.4006 85.413 81.5412 85.537 81.6897 85.6473 cv
81.6653 85.705 81.6443 85.764 81.6184 85.8217 cv
81.2512 86.6268 80.8567 87.286 80.925 88.1986 cv
80.9992 89.1991 81.6526 89.9721 82.4875 90.3124 cv
81.6076 91.7538 80.6804 93.1615 79.6574 94.497 cv
79.5383 94.0956 79.3445 93.7504 78.8635 93.4823 cv
77.9631 92.9804 76.9289 93.3295 76.0871 93.7772 cv
74.5022 94.6205 72.9865 95.893 71.5949 97.0228 cv
70.8244 97.6483 70.7365 98.5575 71.0451 99.3485 cv
69.2033 100.547 67.3987 101.772 65.6164 102.687 cv
64.2336 103.396 62.8381 104.071 61.4319 104.717 cv
62.154 103.353 62.091 101.411 61.3655 100.078 cv
60.9939 99.3954 60.5071 99.202 59.8171 98.9403 cv
59.6701 98.8847 59.0412 99.0961 58.9997 99.0507 cv
58.9875 99.0375 59.5246 97.3568 59.5481 97.2626 cv
59.6838 96.7211 58.8479 96.4901 58.7121 97.0321 cv
58.5285 97.765 58.0442 98.7011 58.0364 99.4496 cv
58.0329 99.7372 58.2693 100.162 58.2654 100.308 cv
58.2536 100.752 58.0705 101.453 58.0891 102.028 cv
58.1037 102.482 58.3054 102.7 58.1872 103.104 cv
58.0759 103.487 57.4504 104.333 57.2512 104.63 cv
56.5871 105.622 56.301 105.48 55.2219 105.802 cv
54.5246 106.009 53.8811 106.323 53.2375 106.659 cv
52.0881 107.259 51.5139 107.572 50.1584 107.47 cv
49.2424 107.401 48.8645 107.38 48.0412 107.896 cv
47.0769 108.501 46.9944 109.306 47.3254 109.965 cv
47.1584 110.013 46.9924 110.065 46.8244 110.113 cv
46.0237 110.337 45.6057 110.897 45.4841 111.52 cv
43.5754 111.974 41.6653 112.42 39.7541 112.861 cv
38.761 113.09 38.2522 113.756 38.1145 114.51 cv
37.4367 114.522 36.7424 114.526 36.0559 114.513 cv
36.2649 114.179 36.3733 113.772 36.3283 113.298 cv
36.2815 112.802 36.1472 112.385 35.9514 112.03 cv
36.0178 111.006 35.2336 109.967 34.0739 109.94 cv
33.2278 109.921 32.4006 110.197 31.5652 110.312 cv
30.8606 110.409 30.1472 110.392 29.4367 110.412 cv
27.5608 110.466 26.842 112.191 27.2668 113.548 cv
26.6028 114.154 26.3215 115.115 26.9577 116.145 cv
28.6584 118.902 32.3645 119.285 35.3293 119.649 cv
40.5129 120.287 45.9553 120.439 51.1086 119.467 cv
54.3806 118.849 57.5422 117.74 60.6653 116.547 cv
65.4319 116.216 69.9533 114.399 73.9314 111.451 cv
76.0256 110.487 77.9983 109.336 79.6164 107.772 cv
79.7649 107.63 79.8703 107.473 79.9455 107.309 cv
86.0774 104.306 91.2531 98.4808 93.113 91.8856 cv
94.0315 90.8588 94.7365 89.6967 95.3215 88.4496 cv
100.19 82.0819 108.083 71.3095 103.404 68.08 cv
cp
f
63.384 89.2543 mo
63.0368 89.2543 63.0364 89.7933 63.384 89.7933 cv
63.7307 89.7933 63.7312 89.2543 63.384 89.2543 cv
cp
f
62.2234 90.7382 mo
61.8899 91.1552 61.5569 91.5717 61.2234 91.9882 cv
61.1838 92.038 61.2541 92.1093 61.2942 92.059 cv
61.6272 91.6425 61.9612 91.226 62.2942 90.809 cv
62.3342 90.7592 62.2639 90.6879 62.2234 90.7382 cv
cp
f
76.6281 11.8192 mo
72.6438 10.0297 68.5276 8.63172 64.3967 7.26649 cv
64.1731 6.88514 63.844 6.56678 63.4045 6.42274 cv
59.3244 5.08289 55.1555 4.01649 50.8752 3.65955 cv
50.3249 3.51502 49.7531 3.41639 49.1599 3.37342 cv
45.7258 2.16688 41.1828 4.19959 37.968 5.31434 cv
36.8205 5.7118 35.6985 6.14393 34.6028 6.61756 cv
34.5989 6.61414 34.5969 6.61024 34.593 6.60633 cv
32.2898 4.49402 28.3205 8.2782 26.8313 9.81531 cv
24.3801 12.3471 22.4563 15.433 20.4748 18.329 cv
19.9338 19.1185 20.175 19.8612 20.7229 20.308 cv
20.6355 20.4555 20.5427 20.599 20.4558 20.747 cv
17.7102 23.5687 15.927 27.8163 14.2278 31.0258 cv
13.258 32.8578 12.3205 34.6801 11.4358 36.5165 cv
9.93283 37.2128 9.55783 40.0888 8.98655 41.6683 cv
7.65989 45.3417 6.48606 48.8026 6.00803 52.6044 cv
4.62668 55.4481 4.49436 58.9838 4.77951 62.6166 cv
4.75901 62.661 4.73313 62.7006 4.71701 62.7479 cv
3.70676 65.7997 4.99045 69.1127 5.92795 72.1908 cv
6.07004 73.5595 6.15451 74.8534 6.11936 76.0277 cv
6.0969 76.7846 6.68479 77.1205 7.25998 77.0726 cv
8.1008 80.2079 8.95334 83.3392 9.82688 86.4657 cv
10.0207 87.1605 10.4426 87.6005 10.9494 87.829 cv
11.2683 88.8514 11.591 89.8632 11.8713 90.8549 cv
12.6516 93.6097 13.5578 96.2972 14.4885 98.9794 cv
14.4885 98.9877 14.4856 98.9945 14.4856 99.0028 cv
14.5442 102.559 17.4026 106.339 18.9602 109.451 cv
20.1125 111.755 21.3625 114.375 24.2141 114.572 cv
25.6565 114.671 25.9699 112.953 25.1745 112.119 cv
25.1955 112.113 25.216 112.108 25.237 112.102 cv
21.6745 109.059 21.2287 103.289 18.2414 99.7391 cv
17.448 95.7885 16.6438 91.8617 15.5959 87.9398 cv
14.9035 85.35 14.3567 82.7264 12.8093 80.682 cv
12.0461 77.8856 11.2903 75.0873 10.5559 72.2831 cv
9.84836 69.5829 9.56076 66.4349 8.17014 63.9906 cv
8.17893 63.3734 8.19944 62.7567 8.23948 62.14 cv
8.36545 60.2323 8.75803 58.3656 9.18674 56.5033 cv
9.80393 56.1596 10.2766 55.5419 10.3401 54.6503 cv
10.5725 51.3881 11.4006 48.5424 12.7629 45.5848 cv
13.6955 43.5614 14.4406 41.6752 14.6125 39.4882 cv
15.9787 37.162 17.4133 34.8812 18.7268 32.6332 cv
21.0588 28.6405 25.051 24.3612 25.4592 19.6537 cv
25.6867 19.3715 25.9035 19.0848 26.135 18.8046 cv
27.612 17.0092 30.0315 15.1444 31.1389 12.9379 cv
33.9748 11.0951 37.1389 10.0292 40.466 9.10779 cv
42.7932 8.46375 45.2883 8.18592 47.6447 7.60047 cv
49.0783 7.67566 50.4533 7.83436 51.7912 7.48914 cv
55.4153 8.38807 58.8039 10.3744 62.5354 10.0648 cv
66.6565 12.0111 70.7981 13.9042 75.1262 15.3822 cv
75.7199 15.5853 76.6184 15.3832 77.0227 14.8807 cv
77.425 14.3803 77.5412 14.1395 77.5935 13.5028 cv
77.6438 12.8881 77.1985 12.0756 76.6281 11.8192 cv
cp
.603922 .576471 .588235 rgb
f
79.1858 66.142 mo
78.9792 65.5077 78.3029 64.8085 77.5588 64.9027 cv
75.3684 65.1801 73.6164 67.1556 72.3567 68.8192 cv
71.6428 69.7626 70.7551 70.7284 70.7063 71.9804 cv
70.6633 73.0907 71.2317 74.139 72.3567 74.4008 cv
72.9968 74.5492 73.7844 74.3099 74.1037 73.6898 cv
74.3889 73.1351 74.843 72.7074 75.2629 72.2172 cv
75.8772 71.5009 76.4319 70.6771 77.0901 70.0067 cv
78.1867 68.8895 79.8044 68.0375 79.1858 66.142 cv
cp
f
41.3811 61.663 mo
39.6096 61.3471 37.8049 61.8744 36.1584 62.5321 cv
34.8899 63.0385 33.6443 63.7636 33.6242 65.2802 cv
33.6067 66.6176 35.2737 66.8612 35.9612 65.9135 cv
35.5266 66.5131 36.2278 66.1254 36.6321 66.0634 cv
37.1848 65.9794 37.7326 65.871 38.2864 65.7948 cv
39.2903 65.6561 40.4431 65.6088 41.3811 65.225 cv
42.8572 64.6205 43.3938 62.0219 41.3811 61.663 cv
cp
f
64.3195 35.2606 mo
64.0149 34.8007 63.7639 34.4432 63.2571 34.1898 cv
62.6213 33.8724 61.9333 33.8353 61.2414 33.9271 cv
60.1906 34.0668 59.2033 34.4139 58.301 34.9725 cv
56.7893 35.9081 57.7551 38.6498 59.5647 37.9716 cv
60.2195 37.726 60.7951 37.6303 61.4914 37.6561 cv
61.8645 37.6698 62.2082 37.6884 62.5813 37.6488 cv
63.0764 37.5966 63.5744 37.3036 63.8191 37.1688 cv
64.4524 36.8202 64.7278 35.8783 64.3195 35.2606 cv
cp
f
47.8537 24.2743 mo
47.9211 23.704 47.6736 22.9896 47.1115 22.7255 cv
46.3635 22.3739 45.7365 22.1908 44.9065 22.4242 cv
44.2663 22.6039 43.6203 22.9711 43.1291 23.4159 cv
42.2004 24.2577 41.6965 25.4139 41.6086 26.6498 cv
41.4905 28.3031 43.886 28.4564 44.3703 27.0233 cv
44.5364 26.5331 44.8694 26.3026 45.3015 26.0765 cv
45.5964 25.9222 45.5383 25.9725 45.9543 25.868 cv
46.3098 25.7787 46.5989 25.6659 46.8825 25.4955 cv
47.3947 25.2621 47.7824 24.872 47.8537 24.2743 cv
cp
f
20.1906 56.8969 mo
18.9602 57.12 18.1008 58.3954 17.4905 59.3964 cv
16.9055 60.3568 16.469 61.413 16.2141 62.5077 cv
15.7649 64.4354 18.4406 65.1024 19.1291 63.3114 cv
19.3957 62.6185 19.7898 61.9325 20.2873 61.3778 cv
20.8777 60.7196 21.7717 60.2474 22.1301 59.4198 cv
22.74 58.0121 21.7453 56.6146 20.1906 56.8969 cv
cp
f
43.468 90.6259 mo
42.8899 89.2953 41.0735 88.9139 39.9035 89.6586 cv
38.9905 90.2396 38.5881 91.6132 38.9812 92.6259 cv
39.1955 93.1776 39.633 93.598 40.258 93.598 cv
40.5774 93.598 40.8659 93.4725 41.0969 93.2763 cv
41.1867 93.3026 41.2776 93.3285 41.3655 93.3612 cv
42.0549 93.6185 42.905 93.2343 43.3225 92.6942 cv
43.8166 92.0546 43.7766 91.3368 43.468 90.6259 cv
cp
f
30.5012 103.738 mo
29.3371 103.442 28.1574 104.309 28.1574 105.524 cv
28.1574 106.75 29.3347 107.58 30.5012 107.309 cv
31.2961 107.124 32.5901 106.765 32.5754 105.721 cv
32.5598 104.634 31.4133 103.971 30.5012 103.738 cv
cp
f
75.6877 92.4345 mo
75.2473 91.7523 74.4944 91.4555 73.7029 91.6268 cv
72.8371 91.8148 72.1413 92.2509 71.3845 92.6889 cv
70.4821 93.2108 70.0881 94.5126 70.6701 95.4144 cv
71.2336 96.2894 72.4582 96.7328 73.3957 96.1293 cv
74.1252 95.6596 74.8557 95.2411 75.4123 94.5643 cv
75.8957 93.9769 76.136 93.1298 75.6877 92.4345 cv
cp
f
72.5915 81.9398 mo
72.5539 81.7308 72.5163 81.5219 72.4787 81.3134 cv
72.3869 80.8046 71.7951 80.393 71.2942 80.411 cv
68.2795 80.5219 65.1838 81.639 62.3078 82.8876 cv
62.0749 82.3524 61.5207 81.9994 60.9143 82.4496 cv
60.7502 82.5717 60.5998 82.7138 60.4416 82.8446 cv
60.3918 82.746 60.3235 82.6483 60.2102 82.558 cv
59.0705 81.6478 47.1623 79.8876 46.9153 80.6552 cv
47.0285 80.3031 46.7131 79.8202 46.3156 79.8671 cv
39.9055 80.6273 34.1115 82.6303 27.5095 82.309 cv
26.6042 82.265 26.6086 83.6669 27.5095 83.7152 cv
33.2766 84.0238 39.9856 84.183 45.3801 81.6669 cv
45.4255 81.7929 45.5002 81.9061 45.6418 81.9686 cv
47.6135 82.8427 49.5002 83.0844 51.5642 83.6596 cv
53.4358 84.181 55.803 83.5043 57.7414 83.6566 cv
57.6194 84.2079 57.7785 84.8261 58.2131 85.1918 cv
56.7942 87.0595 55.7092 89.2494 54.8381 91.3182 cv
54.2024 92.8285 56.5476 93.6151 57.3655 92.3837 cv
58.6897 90.3905 59.9787 88.2987 61.0764 86.1683 cv
61.134 86.057 61.1882 85.952 61.2414 85.848 cv
64.5529 84.9296 68.1213 84.2723 71.2795 82.9628 cv
72.0149 83.2733 72.7375 82.7499 72.5915 81.9398 cv
cp
.113725 .117647 .113725 rgb
f
96.3264 45.3734 mo
96.3889 44.5165 96.3591 43.6083 96.2541 42.6796 cv
96.4123 43.5092 96.5715 44.3383 96.7131 45.1693 cv
96.7141 45.204 96.7136 45.2387 96.7141 45.2733 cv
96.5793 45.2763 96.4485 45.3158 96.3264 45.3734 cv
cp
103.293 52.8388 mo
102.819 48.4847 102.055 44.1298 100.322 40.1742 cv
99.7898 38.5258 99.0534 36.9506 98.2097 35.4271 cv
97.2551 32.0829 94.9406 28.6952 93.1418 26.1659 cv
90.7195 22.7592 87.8347 19.0922 83.8264 17.5717 cv
82.4133 17.0355 81.3401 18.8236 81.9729 19.9828 cv
83.9255 23.5575 87.1945 26.3378 89.3703 29.8158 cv
90.2131 31.1639 90.8694 32.642 91.5154 34.1229 cv
91.4128 34.2836 91.3322 34.4618 91.3078 34.6644 cv
91.0637 36.7196 91.2951 37.5888 92.134 39.4149 cv
92.3069 39.7904 92.4983 39.9364 92.6618 40.037 cv
92.757 40.4979 92.8352 40.9564 92.9006 41.413 cv
92.3908 42.6791 90.3366 44.0189 89.4651 44.8012 cv
88.4504 45.7118 89.3659 47.0604 90.4602 47.204 cv
91.1145 47.2894 91.5119 47.2494 91.8098 47.2548 cv
91.507 47.6097 91.1516 47.9159 90.7727 48.2006 cv
90.7053 47.5258 90.1872 46.9296 89.3889 47.2567 cv
89.0529 47.3949 88.7121 47.5131 88.3723 47.6356 cv
88.2072 47.5951 88.0276 47.5824 87.8274 47.6347 cv
86.2541 48.0424 84.6672 48.5365 83.1047 49.118 cv
81.0061 49.6024 78.8967 50.0482 76.8239 50.7157 cv
72.7112 52.0399 68.906 54.0824 65.3215 56.4681 cv
64.1086 57.2753 65.1555 59.0453 66.4582 58.4125 cv
67.4817 57.9125 68.5075 57.4164 69.5354 56.9242 cv
69.551 56.9164 69.5569 56.9047 69.5725 56.8964 cv
69.6184 56.8759 69.6653 56.8568 69.7112 56.8368 cv
69.7854 57.5131 70.2561 58.1371 71.134 58.1371 cv
71.9006 58.1371 72.3552 57.6586 72.5085 57.0868 cv
76.5354 55.702 80.3918 53.6674 84.2551 51.7465 cv
84.6301 51.6176 85.0031 51.4843 85.3772 51.3505 cv
85.176 51.7465 85.2336 52.1762 85.4475 52.5228 cv
85.4568 52.5448 85.4709 52.5624 85.4812 52.5839 cv
85.4968 52.6063 85.5061 52.6317 85.5227 52.6532 cv
85.6428 52.8812 85.8034 53.0858 86.0119 53.2177 cv
85.9045 53.4447 85.8176 53.6805 85.7619 53.9301 cv
85.6682 54.3529 85.9475 54.6517 86.3498 54.7015 cv
88.1154 54.9193 89.7863 53.5839 91.1936 52.5697 cv
92.0276 52.9906 93.1779 52.7528 94.2849 52.3886 cv
94.3029 52.4857 94.3205 52.5741 94.3381 52.6679 cv
94.3078 53.0053 94.3791 53.3109 94.5266 53.5668 cv
94.5276 53.5722 94.5285 53.579 94.5305 53.5848 cv
94.757 54.4891 94.9885 55.3925 95.2199 56.2958 cv
95.2453 56.5287 95.2712 56.7572 95.2971 56.9808 cv
94.9631 57.7064 94.7527 58.4384 94.8908 59.1151 cv
94.99 59.5995 95.8381 60.5917 96.4758 61.3622 cv
96.6574 62.1127 96.8508 62.8607 97.0217 63.6141 cv
97.1565 64.2089 97.6267 64.5687 98.1594 64.6967 cv
98.1018 65.9428 98.0373 67.1879 97.9455 68.4301 cv
97.8957 69.0985 97.8117 69.7763 97.7112 70.4589 cv
97.3694 71.496 96.9768 72.5302 96.5202 73.5619 cv
96.2737 74.118 96.0149 74.6664 95.7507 75.2118 cv
95.4016 75.0277 94.9216 75.0448 94.6164 75.3236 cv
91.4231 78.2445 90.3449 82.5951 88.7429 86.4955 cv
86.5549 91.8231 83.6838 96.8373 79.7092 101.047 cv
79.1145 101.677 79.1047 102.402 79.4055 102.971 cv
78.3288 103.951 77.2112 104.878 76.0276 105.7 cv
75.7346 105.903 75.4358 106.095 75.1364 106.287 cv
74.3684 106.494 73.6032 106.783 72.844 107.12 cv
69.8313 106.477 66.885 107.757 64.0168 108.928 cv
62.5012 109.546 61.0158 110.093 59.5246 110.595 cv
60.3298 109.925 61.0979 109.186 61.6653 108.31 cv
62.3489 107.254 61.009 106.002 59.9709 106.617 cv
59.1643 106.96 58.4201 107.479 57.7063 108.021 cv
57.426 108.197 57.1399 108.366 56.8606 108.545 cv
55.4231 108.904 53.9621 110.123 53.0744 111.063 cv
52.7146 111.444 52.6321 111.928 52.7287 112.373 cv
52.5373 112.408 52.3567 112.456 52.1638 112.489 cv
47.6955 113.238 43.175 113.896 38.6516 114.193 cv
36.0393 114.365 31.8347 113.49 29.78 115.471 cv
28.8899 116.328 29.4162 117.652 30.4572 118.037 cv
35.698 119.972 41.7531 119.493 47.5022 118.655 cv
47.5871 118.657 47.6653 118.669 47.7551 118.663 cv
54.0979 118.245 60.5852 117.828 66.6526 115.783 cv
70.6921 114.421 76.8381 112.563 79.6042 109.064 cv
82.6804 106.88 85.2981 104.172 87.8938 101.443 cv
90.1887 99.0297 92.4592 97.0175 92.6682 93.5741 cv
92.6916 93.1903 92.4748 92.8505 92.1721 92.6259 cv
92.3742 92.4984 92.5529 92.3275 92.6828 92.1 cv
93.6413 90.4188 94.3713 88.6561 94.9602 86.8417 cv
95.1067 86.5707 95.2654 86.307 95.4084 86.0346 cv
95.4211 86.2035 95.427 86.3739 95.445 86.5419 cv
95.5476 87.5062 96.5495 87.9472 97.3059 87.3124 cv
101.862 83.4887 102.626 75.7733 103.059 70.2089 cv
103.202 68.369 103.237 66.5424 103.194 64.7235 cv
104.87 61.5546 103.595 55.6151 103.293 52.8388 cv
cp
f
63.7639 68.3978 mo
62.2668 69.4999 61.1692 71.2499 60.153 72.7963 cv
58.8655 74.7557 57.5979 76.7284 56.3449 78.7098 cv
55.8982 79.4169 56.9983 80.0433 57.4582 79.3607 cv
58.698 77.5209 59.9465 75.6869 61.2326 73.8793 cv
62.3484 72.3104 63.6906 70.6293 64.2463 68.7684 cv
64.3225 68.5126 64.0002 68.224 63.7639 68.3978 cv
cp
f
64.884 64.0512 mo
64.1145 64.0512 64.1135 65.2465 64.884 65.2465 cv
65.6526 65.2465 65.6545 64.0512 64.884 64.0512 cv
cp
f
63.0559 56.9613 mo
62.2575 57.3026 61.4304 57.5165 60.5881 57.642 cv
56.2395 55.1889 49.8254 52.0995 44.9455 52.5814 cv
44.1516 52.66 43.8039 53.6517 44.5305 54.1137 cv
50.0197 57.6054 54.7634 59.3075 60.8244 58.8441 cv
60.8298 58.8451 60.8352 58.8466 60.841 58.8475 cv
60.9284 58.8627 61.008 58.849 61.0827 58.8241 cv
61.927 58.7514 62.7956 58.6395 63.6975 58.4823 cv
64.7932 58.2914 64.2483 56.4525 63.0559 56.9613 cv
cp
f
30.3098 33.4432 mo
29.4514 33.4432 28.6291 34.1976 28.6692 35.0839 cv
28.7092 35.9725 29.3899 36.7245 30.3098 36.7245 cv
31.1682 36.7245 31.99 35.9696 31.9504 35.0839 cv
31.9104 34.1947 31.2297 33.4432 30.3098 33.4432 cv
cp
.317647 .290196 .301961 rgb
f
29.3005 28.0155 mo
29.2361 28.0155 29.2361 28.1156 29.3005 28.1156 cv
29.3645 28.1156 29.365 28.0155 29.3005 28.0155 cv
cp
f
31.967 24.913 mo
29.841 24.913 29.8371 28.2177 31.967 28.2177 cv
34.0935 28.2177 34.0969 24.913 31.967 24.913 cv
cp
f
62.467 18.4105 mo
60.552 18.4105 60.5486 21.3871 62.467 21.3871 cv
64.382 21.3871 64.3855 18.4105 62.467 18.4105 cv
cp
f
65.467 24.2435 mo
63.552 24.2435 63.5486 27.2201 65.467 27.2201 cv
67.382 27.2201 67.3855 24.2435 65.467 24.2435 cv
cp
f
65.134 28.682 mo
65.0695 28.682 65.0695 28.7821 65.134 28.7821 cv
65.1985 28.7821 65.1985 28.682 65.134 28.682 cv
cp
f
57.634 22.077 mo
55.7185 22.077 55.7151 25.0536 57.634 25.0536 cv
59.549 25.0536 59.552 22.077 57.634 22.077 cv
cp
f
56.8005 15.5092 mo
55.3899 15.5092 54.8791 16.9017 55.2629 17.9164 cv
54.0954 18.5443 54.3249 20.7201 55.967 20.7201 cv
57.0862 20.7201 57.5471 19.7059 57.3591 18.8612 cv
58.9919 18.3309 58.8127 15.5092 56.8005 15.5092 cv
cp
f
63.3005 17.182 mo
63.2361 17.182 63.2361 17.2821 63.3005 17.2821 cv
63.3645 17.2821 63.365 17.182 63.3005 17.182 cv
cp
f
70.134 19.577 mo
68.2185 19.577 68.2151 22.5536 70.134 22.5536 cv
72.049 22.5536 72.052 19.577 70.134 19.577 cv
cp
f
46.634 41.0155 mo
46.5696 41.0155 46.5696 41.1156 46.634 41.1156 cv
46.6985 41.1156 46.6985 41.0155 46.634 41.0155 cv
cp
f
37.967 36.3505 mo
35.1164 36.3505 35.112 40.7802 37.967 40.7802 cv
40.8176 40.7802 40.8225 36.3505 37.967 36.3505 cv
cp
f
27.8005 35.682 mo
27.7361 35.682 27.7361 35.7821 27.8005 35.7821 cv
27.8645 35.7821 27.865 35.682 27.8005 35.682 cv
cp
f
24.8005 43.5863 mo
23.1115 43.5863 23.1086 46.2113 24.8005 46.2113 cv
26.4895 46.2113 26.4924 43.5863 24.8005 43.5863 cv
cp
f
22.2717 45.3558 mo
21.9739 45.2225 21.675 44.9852 21.3581 44.9183 cv
21.0744 44.8588 20.7405 44.9032 20.5373 45.1356 cv
20.2761 45.4335 20.217 45.7035 20.091 45.9276 cv
19.4348 47.0917 20.5276 48.7098 21.8908 48.2689 cv
22.4143 48.0995 22.8547 47.6972 23.0041 47.1556 cv
23.174 46.538 22.9045 45.639 22.2717 45.3558 cv
cp
f
23.634 48.2543 mo
22.8039 48.2543 22.803 49.5433 23.634 49.5433 cv
24.4631 49.5433 24.4646 48.2543 23.634 48.2543 cv
cp
f
29.8005 50.2865 mo
27.2971 50.2865 27.2932 54.1771 29.8005 54.1771 cv
32.3039 54.1771 32.3078 50.2865 29.8005 50.2865 cv
cp
f
33.634 55.077 mo
31.7185 55.077 31.7151 58.0536 33.634 58.0536 cv
35.549 58.0536 35.552 55.077 33.634 55.077 cv
cp
f
22.8405 71.1347 mo
21.656 71.4559 21.2571 72.9926 22.1218 73.8568 cv
22.9861 74.7211 24.5227 74.3226 24.844 73.1381 cv
25.1985 71.8329 24.1452 70.7806 22.8405 71.1347 cv
cp
f
20.8005 69.182 mo
20.7361 69.182 20.7361 69.2821 20.8005 69.2821 cv
20.8645 69.2821 20.865 69.182 20.8005 69.182 cv
cp
f
49.8005 72.2162 mo
47.2063 72.2162 47.2024 76.2474 49.8005 76.2474 cv
52.3943 76.2474 52.3987 72.2162 49.8005 72.2162 cv
cp
f
54.5471 60.9349 mo
54.3645 60.7347 54.1286 60.577 53.8567 60.4862 cv
53.6897 60.4305 53.5232 60.3749 53.3567 60.3197 cv
52.6057 60.0692 51.7561 60.6088 51.5549 61.3427 cv
51.3352 62.141 51.8244 62.8934 52.5774 63.1444 cv
52.7444 63.2001 52.9114 63.2557 53.0774 63.3114 cv
53.1037 63.3197 53.1301 63.3207 53.1555 63.327 cv
53.3928 63.6561 53.7707 63.8871 54.3005 63.8871 cv
56.1281 63.8871 56.2102 61.1825 54.5471 60.9349 cv
cp
f
67.467 77.5155 mo
67.4026 77.5155 67.4026 77.6156 67.467 77.6156 cv
67.5315 77.6156 67.5315 77.5155 67.467 77.5155 cv
cp
f
83.8005 76.0145 mo
81.1613 76.0145 81.157 80.1161 83.8005 80.1161 cv
86.4397 80.1161 86.4436 76.0145 83.8005 76.0145 cv
cp
f
87.8005 69.577 mo
85.885 69.577 85.882 72.5536 87.8005 72.5536 cv
89.716 72.5536 89.719 69.577 87.8005 69.577 cv
cp
f
85.967 61.1083 mo
85.3791 61.1083 85.3781 62.0223 85.967 62.0223 cv
86.5549 62.0223 86.5559 61.1083 85.967 61.1083 cv
cp
f
79.134 57.4911 mo
76.4641 57.4911 76.4602 61.6395 79.134 61.6395 cv
81.8029 61.6395 81.8078 57.4911 79.134 57.4911 cv
cp
f
73.134 38.2308 mo
70.344 38.2308 70.3391 42.5668 73.134 42.5668 cv
75.924 42.5668 75.9284 38.2308 73.134 38.2308 cv
cp
f
77.634 37.182 mo
77.5695 37.182 77.5695 37.2821 77.634 37.2821 cv
77.6985 37.2821 77.6985 37.182 77.634 37.182 cv
cp
f
30.634 85.3949 mo
28.0549 85.3949 28.051 89.4027 30.634 89.4027 cv
33.2126 89.4027 33.217 85.3949 30.634 85.3949 cv
cp
f
28.134 91.577 mo
26.2185 91.577 26.2151 94.5536 28.134 94.5536 cv
30.049 94.5536 30.052 91.577 28.134 91.577 cv
cp
f
50.1633 115.561 mo
50.133 115.503 50.1023 115.445 50.0715 115.387 cv
49.8703 115.004 49.3401 114.893 48.9797 115.101 cv
48.8005 115.204 li
48.0539 115.635 48.216 116.799 49.0383 117.025 cv
49.9011 117.262 50.5613 116.319 50.1633 115.561 cv
cp
.203922 .215686 .211765 rgb
f
57.467 113.537 mo
55.9289 113.537 55.926 115.927 57.467 115.927 cv
59.0051 115.927 59.008 113.537 57.467 113.537 cv
cp
f
61.3005 109.926 mo
60.049 109.926 60.0466 111.871 61.3005 111.871 cv
62.552 111.871 62.5539 109.926 61.3005 109.926 cv
cp
f
65.3005 113.182 mo
65.2361 113.182 65.2361 113.282 65.3005 113.282 cv
65.3645 113.282 65.365 113.182 65.3005 113.182 cv
cp
f
83.134 98.3485 mo
83.0695 98.3485 83.0695 98.4486 83.134 98.4486 cv
83.1985 98.4486 83.1985 98.3485 83.134 98.3485 cv
cp
f
84.2546 96.6078 mo
84.1535 96.7806 84.0529 96.953 83.9514 97.1254 cv
83.8108 97.3666 84.1565 97.5492 84.3156 97.3383 cv
84.4367 97.1776 84.5583 97.017 84.6799 96.8563 cv
84.8664 96.6083 84.4182 96.3285 84.2546 96.6078 cv
cp
f
69.134 110.872 mo
67.384 110.872 67.3816 113.591 69.134 113.591 cv
70.883 113.591 70.886 110.872 69.134 110.872 cv
cp
f
65.8005 112.349 mo
65.7361 112.349 65.7361 112.449 65.8005 112.449 cv
65.8645 112.449 65.865 112.349 65.8005 112.349 cv
cp
f
82.634 99.245 mo
81.5783 99.245 81.5764 100.886 82.634 100.886 cv
83.6897 100.886 83.6911 99.245 82.634 99.245 cv
cp
f
86.134 91.9325 mo
85.3195 91.9325 85.3181 93.1981 86.134 93.1981 cv
86.9485 93.1981 86.9494 91.9325 86.134 91.9325 cv
cp
f
90.134 88.7435 mo
88.2185 88.7435 88.2151 91.7201 90.134 91.7201 cv
92.049 91.7201 92.052 88.7435 90.134 88.7435 cv
cp
f
91.967 82.2435 mo
90.052 82.2435 90.0486 85.2201 91.967 85.2201 cv
93.882 85.2201 93.8855 82.2435 91.967 82.2435 cv
cp
f
95.967 79.9755 mo
94.5647 79.9755 94.5622 82.1552 95.967 82.1552 cv
97.3694 82.1552 97.3723 79.9755 95.967 79.9755 cv
cp
f
99.634 74.3485 mo
99.5695 74.3485 99.5695 74.4486 99.634 74.4486 cv
99.6985 74.4486 99.6985 74.3485 99.634 74.3485 cv
cp
f
99.634 63.577 mo
97.7185 63.577 97.7151 66.5536 99.634 66.5536 cv
101.549 66.5536 101.552 63.577 99.634 63.577 cv
cp
f
98.3005 58.077 mo
96.385 58.077 96.382 61.0536 98.3005 61.0536 cv
100.216 61.0536 100.219 58.077 98.3005 58.077 cv
cp
f
95.467 53.077 mo
93.552 53.077 93.5486 56.0536 95.467 56.0536 cv
97.382 56.0536 97.3855 53.077 95.467 53.077 cv
cp
f
95.8005 46.8485 mo
95.7361 46.8485 95.7361 46.9486 95.8005 46.9486 cv
95.8645 46.9486 95.865 46.8485 95.8005 46.8485 cv
cp
f
97.467 41.7606 mo
95.1447 41.7606 95.1408 45.37 97.467 45.37 cv
99.7893 45.37 99.7932 41.7606 97.467 41.7606 cv
cp
f
83.467 51.7465 mo
81.341 51.7465 81.3371 55.0512 83.467 55.0512 cv
85.5935 55.0512 85.5969 51.7465 83.467 51.7465 cv
cp
f
102.495 69.3573 mo
101.55 80.2748 93.8757 91.1195 87.2038 99.4559 cv
79.7883 108.723 71.571 114.132 59.9651 116.834 cv
49.8762 119.183 31.5725 121.93 23.7995 112.997 cv
19.6858 108.269 17.8703 101.282 15.5832 95.5678 cv
13.0754 89.3031 10.5686 83.0385 8.06076 76.7738 cv
7.83811 76.2181 7.45139 75.8568 7.00608 75.6503 cv
6.9509 74.1483 6.67112 72.9945 6.04221 71.5961 cv
4.49973 68.1683 3.70627 66.1962 4.94358 62.6244 cv
5.64475 60.6005 6.72483 58.7411 7.19553 56.6307 cv
7.72873 54.244 7.45432 51.8485 7.55979 49.4345 cv
7.82102 43.4911 11.3489 40.5741 13.9387 35.6234 cv
15.9363 31.8051 17.1145 27.6332 18.7019 23.6449 cv
22.7141 13.5658 33.9485 4.38367 45.1394 3.71863 cv
51.3576 3.34949 57.3947 6.11854 62.9138 8.61365 cv
67.907 10.871 72.8244 13.3129 77.6286 15.9481 cv
87.6281 21.4335 96.1008 27.5492 99.5422 38.9418 cv
102.352 48.2421 103.334 59.6683 102.495 69.3573 cv
cp
105.331 47.1869 mo
103.845 36.4393 100.001 26.6146 91.2365 19.7821 cv
81.2297 11.9804 68.1438 5.50916 56.1106 1.52186 cv
44.4455 -2.34387 33.9367 1.53699 24.5168 8.86512 cv
19.8196 12.5184 16.9963 17.0956 14.8449 22.5814 cv
12.424 28.7538 10.1189 34.2421 6.41428 39.7567 cv
2.26487 45.9325 4.62131 52.9652 1.90647 59.6014 cv
.995823 61.827 -.0398217 64.0907 .00119392 66.5546 cv
.0588111 70.0223 2.96115 72.5048 3.0217 75.9096 cv
3.03782 76.7924 3.52317 77.3651 4.14768 77.643 cv
4.16721 77.7079 4.17698 77.7699 4.20334 77.8373 cv
6.8303 84.4003 9.45725 90.9633 12.0842 97.5263 cv
14.3069 103.08 16.1692 109.414 19.759 114.296 cv
26.1721 123.02 38.3371 123.21 48.178 122.587 cv
59.906 121.845 72.8454 118.889 81.927 111.028 cv
90.8147 103.333 98.1242 92.3251 103.046 81.7347 cv
108.055 70.9589 106.92 58.6781 105.331 47.1869 cv
cp
0 0 0 rgb
f
47.6482 62.8588 mo
45.5827 62.1058 43.8972 60.7426 41.7058 60.2645 cv
39.6809 59.8226 37.5354 59.8817 35.5432 60.4491 cv
32.1184 61.4242 29.427 63.9086 30.0168 67.6508 cv
30.4172 70.1864 34.2717 69.1097 33.8742 66.5873 cv
33.4631 63.9808 39.1682 63.8251 40.6428 64.1215 cv
42.7932 64.5536 44.5442 65.9721 46.5852 66.7157 cv
49.0071 67.599 50.051 63.7347 47.6482 62.8588 cv
cp
f
79.2063 63.4613 mo
77.9924 65.3915 75.5598 65.893 74.4909 67.8734 cv
73.969 68.8402 73.9445 69.8905 74.0578 70.9564 cv
74.0656 71.0331 74.0881 71.2328 74.1145 71.4647 cv
72.1887 69.785 69.3586 72.5971 71.2942 74.2987 cv
72.3908 75.2626 73.5383 76.059 75.05 76.0062 cv
76.6281 75.9511 77.882 74.8514 78.1828 73.3222 cv
78.3147 72.6552 78.216 72.0243 78.1262 71.3593 cv
78.0529 70.8148 77.8215 70.0619 78.1828 69.5663 cv
78.364 69.3168 78.9299 69.1439 79.1926 68.9794 cv
80.6281 68.0785 81.76 66.912 82.6604 65.4804 cv
84.0354 63.2948 80.5754 61.2855 79.2063 63.4613 cv
cp
f
68.4289 36.4877 mo
68.4211 35.5243 67.7463 34.7699 66.8601 34.5521 cv
66.8049 34.4647 66.6076 34.3295 66.2541 34.1415 cv
65.8508 33.8109 65.447 33.4799 65.0432 33.1493 cv
64.4504 32.6791 63.8567 32.1874 63.1184 31.9608 cv
61.6467 31.5101 60.0041 31.9618 58.6018 32.4369 cv
55.4114 33.5184 52.7834 35.7704 52.801 39.3705 cv
52.8137 41.9437 56.8137 41.9491 56.801 39.3705 cv
56.7893 37.0189 60.5456 35.1923 62.4724 36.1908 cv
63.8322 36.8954 64.7121 38.7455 66.4299 38.6517 cv
67.5031 38.5931 68.4392 37.7826 68.4299 36.6517 cv
68.4294 36.5971 68.4289 36.5424 68.4289 36.4877 cv
cp
f
51.3039 23.1117 mo
50.3493 20.1049 46.2658 19.7723 43.5969 20.3256 cv
42.1858 20.6176 40.842 21.3417 40.0031 22.5458 cv
39.4905 23.2806 39.4914 23.974 39.1784 24.7553 cv
38.7668 25.7816 38.4748 25.9115 37.3586 26.2387 cv
34.8938 26.9618 35.9426 30.8231 38.4221 30.0961 cv
40.1985 29.5751 41.946 28.7572 42.7199 26.9686 cv
43.1428 25.9896 42.9035 24.9125 43.9797 24.3739 cv
44.2898 24.2186 47.4182 24.0858 47.4465 24.1752 cv
48.2229 26.62 52.0857 25.5756 51.3039 23.1117 cv
cp
f
45.1379 87.0316 mo
44.2219 87.1298 43.5305 87.3568 42.928 88.0775 cv
42.2072 88.9393 42.4026 89.744 42.1184 90.7147 cv
41.9826 91.1781 42.6311 90.9037 41.7951 91.1649 cv
41.4944 91.2592 41.0637 91.2133 40.7624 91.1776 cv
40.362 91.1307 39.5832 91.0482 39.4524 90.6034 cv
38.7287 88.1386 34.8674 89.1879 35.5949 91.6669 cv
36.3313 94.1766 38.8889 95.2274 41.3391 95.1932 cv
42.5578 95.1762 43.8562 94.8949 44.803 94.0878 cv
45.2136 93.7372 45.5393 93.33 45.7688 92.8388 cv
45.966 92.4149 46.051 92.0077 46.093 91.5458 cv
46.1892 90.4833 46.2951 90.9071 45.1379 91.0316 cv
47.6706 90.7597 47.6985 86.7567 45.1379 87.0316 cv
cp
f
35.176 105.688 mo
32.2082 104.571 24.7531 103.078 24.6096 108.164 cv
24.5412 110.585 28.0735 110.726 28.5549 108.595 cv
28.6155 108.585 28.6936 108.584 28.7951 108.602 cv
29.3474 108.695 30.0227 108.594 30.5876 108.648 cv
31.8039 108.764 32.9739 109.117 34.1125 109.546 cv
36.5241 110.454 37.5661 106.589 35.176 105.688 cv
cp
f
77.3088 90.6195 mo
76.1115 90.6068 75.4494 91.5526 75.3088 92.6195 cv
74.9934 95.0101 70.8606 94.5897 69.3195 94.5009 cv
66.7478 94.3519 66.7561 98.3524 69.3195 98.5009 cv
73.718 98.7548 78.633 97.7382 79.3088 92.6195 cv
79.4514 91.5394 78.2873 90.6298 77.3088 90.6195 cv
cp
f
21.3449 54.9467 mo
21.3239 54.9525 20.8449 54.8114 20.7678 54.7948 cv
20.3196 54.6972 19.8835 54.642 19.4289 54.6752 cv
18.3327 54.7553 17.5403 55.4008 16.9406 56.2821 cv
15.8615 57.8676 15.1296 59.7518 14.6584 61.6019 cv
14.0222 64.0971 17.8791 65.162 18.5154 62.6649 cv
18.8552 61.3314 19.3313 60.0868 20.0256 58.8964 cv
20.0598 58.8383 20.0735 58.806 20.0979 58.7601 cv
20.1989 58.7841 20.2756 58.8021 20.2639 58.7992 cv
21.0031 58.9691 21.674 59.015 22.4079 58.8036 cv
24.8772 58.0922 23.8269 54.2313 21.3449 54.9467 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_5.eps)
%%CreationDate: 3/12/2018 2:39 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-Q_N6F=Mc]2[WAF5a,b]AU]:>[GIQJ#T6?LBU?>jJ<3fb*YC,oN-srh#E8g?;e*gZ!^3oP,f<:e&IeV[W
%ealkG^\c^Pn@'buGJAIpNVqq\m`XAJcX6Wn[t"D<l!NM?lX-HkDOs#+]m9;I`KN6mI'p15I)V$DjZC"FDLfL.]mTL2(Xhrpm@-'*
%DK9ZcrhJBLHp9hn>'^&@?[m:sc*Qlq]RKG6frLJ>lR+[bqA3:QrPe05:\5HDZ_-XGdrmsA?g`r`IsU\ao/HNih0PCbp!$9U\AeKQ
%qouT`q2SNfH'%'kfV/=cFYraNV[i`2:V6K_r8$hY0'[M,qqE?eiUql:lsc,bHb7)LGlV#sba1^.rr2W1\'L\Z\^_:.l"]/_VBC@]
%m;>S39LaZ$pf=PF$"<"eMc[%c^T5UdV1tk5ns*F2[u8h"^]!-Em9b@OqsV!i^:o#4"+:(Dbnn_*58d#$jJuOVLmn'>F`Gf(ptb\j
%DdWOfb@bah:G^aoNmb+;I=:utY$5gdoDAp8IHgn5^Raol-a1:qI3\=[lM:/kUn@&>dXV#WmpH"`akptZP0P->Rr<4Prr1IJi%+ga
%0C:7a,&^PH#^<7s[p8$bMf_gu]=-caW\P(0VeNO8,B,m&XZqU4l*hkA^NoeERqFC(ejA6lZkdSsr:AOd^0YB]8-eJ\nVaR8oV_@H
%p>XL0Dr09`lsJcM=,1-WZXUKAeJEK&l/gNP="c6_hr12SR1Cr^W]Ye(NW"&!#Ce,1q#4Lp(,gR5lW8,CZ^82lj%$l8hpnoZqttg:
%jj.;KqYo5V]_p6Za,b[srUm3UhX5jgm,dV0J%=TXJ$Sr+gRc',o@I'Is!%L@`RhRpeeru1jOq",H,iXopri&oVggnFXgNW%NW7&d
%dl4I:Me%:Mqop5_\,6>PJUZ;Nrq2JQo#:1gER$ph.&6@EJ%o73J+in+jEaZeo())U[.X(^LYM!q^7B/Ck<7md^O?+Bjce;ke+tKk
%+MW1GUUo:p-f2T5_h7A+UA_39$h(AAP]r]QrTZ\0HLg4EZ<#bpr;+$FGQ$_$k4fj3HcR3<:S'e#p<DnNhu<H)e(t#rpYYppp\S$q
%Sr^Kjq#,Hcr&alb=$B0,s7YH5YF[uUm_sFph""[3iFbrYhgY+)n(uh`CfE.b?bcN`9C8@`?XY=PIt6`Y^#m#brnmE`j/PaJP$e3$
%HHI%"fe\tdZ2N3tN]$hAHqGLAe(;o6+l5$Fhg3QaIsiLZqj5Y.pl:2gDZ8+kQXW2G^A.]\S(i('^3]<$bgP;`It$tU/S@gCo8E:-
%kpoogk&p!f5CNEdk2L:YE^&UJYFg4@9\.F[M<Yj47_3\cOFQ+RO5Aa-PfI$HQW6-6p0U%5oWO;t/Q^&P\J4NlQWq:pn*lCW\]V[_
%J04\@Mg=8+J!lU'+$YXp++:PHrJ>DI^!*Y:"r;sMACp:TlaPO"*Q6;u@c&^EmK77aX,jp<rk"5;POqFQ,^o<3I$3+.\(Dd(M=!WR
%O!+Gqqq'^h^\t(dDdGYRq9:KZn>p1OI#HY>/`UamA`j^*elqPaJ)`b.%$'>1Wt1%2['[g2U+SJ+fAfBQq)ZV0YJ[c_G&f/$,fd1W
%gNCD0D7QJY>A1`23L4uka1AJFMcskuZ23b.9f^;BMMPic7@_HYnr4VZ3VHTnO__s4at\\<j`#Le9=g8GP`Bc(dU!E/<2rM0d$.Fm
%6Ti`9O-5D[Eh),T%XHUWU-'W3S.L;m4t^g]2rQ%&0c]89cNu1&3D,A<iZoBl07R5gmKnfdiGk%@kRV_#jgb$TOhUZ9#@902\[@c!
%PohBoK#?ESP8m(Qp<mArknNr.&W%]%G"I_Xj>"0[\`H;@drL]5+Fj+.[2b/rPp>lk9=,r-,9B)G^H"@G@W!07qCc3$oC%.ZdZ=>9
%rn)5MT+`JJrd0b,5KIiXhohYXIG;qqmY`'!T.pcO+:#I\075"b8WJEC3*c[I\r,9.E^[^ieKR)>Sou@!;<6m_#>Tr>LfdK*+@@VI
%q"PdgNZq+$3VJ]8l\ZeSW$k_MHo)8)LO;D)l69,L.S';UOT44]s'NssjA2'@0Co,HJcjC3q=>G`+qAS+H2L2YnK`l^j$E\2nbPU*
%Mo]HFab4JRl%FFFPKt23;#CncmA%"8ih(GMd><7,$S+SbEf8"?(<P=CP6ahn8Sp4fVm(u1-gA',3/T];gkellX2TKLV'Q;50ND`;
%0qID&Jp_^'?9%!bl)>fs[RsmJ74b"Rl7?Fb/L,?^itZ,&MJ.ZQPJ39D%PmTT,iN]j]Y4sqnKK\VV!(uml6N[uA-tfjWZm)M%Yqr!
%`8;SfFCIGV"8Jc8YE/S@nL/UGknHmL7m7Yb5M)gNkpV>dgrL3#U&Zka<%9(Qm:JR'a.(O;NZ=UD!sG=Vk<OhG9MpHmaf!7I;V3+6
%f-5SR_B[#3pKjf^TF1h?2F1(\`fD3u3901*3b(r/5>keD?rg3SH;95dV$\(jG_"!@r9UQ/N\[#?fQ$JNHcLsYp+f+-HC5GOiW5R>
%HVRR7gCpG@],),E==:#!N$,_NSUE(^iu/`,gZ:C8D@SVP4u*,4l!t@"*6Ep:"!O:e=-CD8"\84^&O!]jbDC\4Ps^9rZnI1>"!l]U
%O-X4k9<CR8JQcq2261EN0k<%XDqM<Rr9QUqA=gqoTS'5nd/d)5GX4G%Q]#I/5/f9"_@,nQO2ro>Le;)nk\>40///=adN`<0O+qh#
%SC!YUR,Eg"*E0[;a%uqIT_;=n#HERnA.5J*,R@!Fl[c,^<%N8J/hU*_:cs_PB[6kO8G.)a#HQq1Z7"'Jat6K$Fnt>936P]r_H@?N
%j`!a7'e:S-A9*u*PK+i/IRrNNP?fYN\MVFpUEbq@&=L%o>@PH]l..92j$etDOf=NMb<_rj=rpo0e$F.E'T'apZuE:d'!o'dV<l1d
%O<KKd<ZDp@P<99^au,NLU<AC]+cC^KN0&[[+]q-E1BbmV]W(N=(6<7qN64R68KS0i(k&YKaN.bO^uCHd39\epE(N$00t?@$:pRao
%0MiaKPEQk2f4L=ZRO(7qdE.gdPN4,)];J4ubp8-&8=USD@VW\$fpau'@jIHkib4"Dq4XZUV:h!TjD\^G*+c_!ctHMb3BA+s?OahW
%[f^j1$m`]g7c:H(J@f\#?8DIDnj[A9J&G'EPP,\Tbo?>Fl!)7:-k[f'Ls?QG;K2G()OCHJeJI!K5V+e1>qb-RY('4Pi*Tg)I.H:j
%leOMNKO0?OE3W\dT=Qi*/J0Z05n^<MAEFt%%m.$.U?F74#m\l#YS3`:=;,+)%U1*7=RJUG:LYt:&`+dB/4r?aqFI*l;s?X!mUaX>
%FW.5E)f5h[92V!OPEF"m:aPP/%SqNKQ-%aH?X8'V_E0E^IE>3\lFNFZVP8r0%M^?ibLE&gKi]"[W]F.'WpWjFQ(dnP`RfV5HAHF5
%MQeVKof1WEdgn"de);o$+oqVf&M>-pSg/(_WmU^(I.'r#5NIk!rN:V%+a8>/g$Kr<h!m\n4oG)&a8=/LHlFFo-.(uA>3.#UAJ)[8
%LfL=@AM4E*FGm%5;Q*k2ZE2m'!Z,CHbLA5?;+/KdVI]hBP!Yq)VOj3"0^U>!\igM5'D7?"S4&oHWHDmSa^X(#2+IbNCS0-.gCKKA
%%5Kf]L+tS(@WVcA8+"P840J"%R:=th$YG@">&#t;qU$YMm+Mk)*/AMRB3j)J2Eb`b/]4E(PD8]$^XaXBjbRP>\oU\0&d,`6-kAN,
%HH7,mHQMSALYVD?B>!^'i&a-t8+-//J,V1jpb%O]l'!T+%dt1#L7>904nXY6K;)/)(su?\TWH_K>/\U+@W!RI/X9?E*(NM31"&ph
%oSL)2cCD`=#2ZO\\k\[$au(!TK=Q9*1T_:E<`+YR=B:1pB$GA]:>X>LWa4*U>(MH/b7)uu1eQF\J8Nq/?-h<V1$>!;UN+eDg1[%Z
%hDs%M(QL;rA!l2l[*nonUoEF8GI?&WO8F(R]=$K#*M;fqDfs*M(];h:Tg=4E,LYVpe7P`,Y/M7Yc@<`q`VucQMl,;Kiro[mQrLtK
%d;Z=X.WsNTfM13bZ`KT*G#Pl?`&!$TbG+;V8Igru$e0C)TJ-B\#eQf/'Fa:Z1fiNG!9Uj9\0Z>54U3Q?kd`PP=k%>BYb9OXf2cS?
%&8<BoW1$@2,1TQ0?rHr#/YlLBlBSM,qAes6g(g!#@[#tDDbFUB51f(&c(<DN!H%e%F6e#G&PEs*`s]rPo!(Yb/fpV3RYMsS+c"kC
%60Ag[IaB6^I.4]HQ1!9^b0A2UnRaG4@C\rgiPqF+:.H2u-BfUp'QhBbj&&2IOD$htUF-b%4R<B+AceWci$Y2D7c-6?oE=4]^_:Z7
%^eTSE($Ib8<i.";6C\7!DSSu!2T;ESi9!D"bmE/NZoNc.#&c\S`2TLCB*UF3k#A!PThYbQ(%0j]'XeYH"RN+mfVm2"d89m/SOI+:
%>kVj9ffe<@CK2;hUFd7Zj[0ofNBr%V%^G[D;H:+d`GP^KlHuM1LKV3gkpBCN#>MhNO%,?m>HE$3icKjuEW5"L6gcpC`7r2cgiK"B
%H5pMh3'R*s4QMSc53TY+i2d<Ah!r5Drn"^@c-9m\nl_`8egR.Jb,;i2B8uIbUO:W@T/Fch];'))Obu:"ch7<dr%FJ5:h5I7`+#dC
%On,#IDQ%n317-\R(1bg!pre@jKhlbS`91!RjT<j6(=@!Z&SKAebj;L&r9Qb_b&0gO\FdC^9p'cJT6Gap$GMeM2<Va?f5/kG7`3:0
%'=`D[$/?l<=Orl<!+Pf)1E&aZef+E'frCJR,Y)bb`LN>4>9;QTjX-TaIt$s5k5K<>G:L[dI`pWpKX-ip-q%'9-43Tu%[&#Ogeupr
%;KDLb(PVEYgeSSaMFT]@mj0J7s+6LDkq7,K/OK/tOnWni(D61f44J+:rMR8?J&dWKhG;mQT4!8\G^4m3qq2,*,huA9^./C5U'Pfd
%b_r^8@i-`<Jo5":0b#,=h'-IMJH9bDY9IC\"a(.91@J'@h9,6;*5"lHEY5T<k#5D6:fTu8lA2YYNA+/t2A<Shpk^0][Z!&4@d,b9
%a(cKEJ\Z*,]N*3Z4TU4IU5LA!UlhLR3N<FVhMgf#btm0XVDcUjm?sq$RD('2VJ:QpcVP(:To'i?3D6at-EK2/rg`>bd@Ab-O%tTQ
%Ap9et*H<'5,T:GNlh79$N[Au">hAf(i5-:kj+YC"jGoRUDXKUSZcpufS:^>js567#FjCQ.j.3W>4$MQlIBVE/\MS,_?rJq2K4Gr2
%Snj-21Ef8PrJjS-?;16prb2cqM0e6U06CHF35*bn3ASs'1D0_pBr!n7dV3A@c,2.s<JPkO-Y?TW<1PiY"?!Ad;Zo8,$mP;@Tr[)i
%*\9<Ao;&.9c7Nj]D1SQ*-MJ`-N\HZO]mH+c!GlBLVSE6:%09[RaY7+ag,BZ?BEtRk(8q(W*-6/Soot5]kWpE?L-6WnkN)B=r3#ut
%"/_3UY=BVR)Q>Zj8cO.)IqGNtZTX'*S2I5aH;opFO,i29&aqm24,tk9bRZn[Kqk4]ElU7YD`QO`&%U^&c?c,C+8_)3?tT5anC$tF
%?=M4[@080.QAhs-L775]F8Sh"hnNdt1Ug_u_joQ_OPKgM>RFEoiFsn-\d0m5c1<$Frg//3'irbqIfktST%h+SkFb_.Pk'?h[W'Y8
%-qX()$70P?Ue;h.Z/ZfbRQr+.j'B`>"cMdNLX#mmq&gOH0VIR"$mXB4LYVF$`RP28jjHG=nAC96q2d\po:$7RrfQYo#%Sfd)6Po$
%Fj8/TG4:(:VM]L;Tl3\aR*J3&,,#K<X,p/1U_QGPVKW[%-+*NIf,e)V&^+>/Wh]<e3I:Ve:=[b:cq;oZ\t`SWe8(,VISp/N+`Ph-
%/<A(TOfF\GZECI!W1Fg(<i5:uq/eYN;gnSbC5<TU5M8q_Y_)/Rjhit)Dd$COQmec!:(+2!Ja%^hfA8c8Vu"_]TH;pSl:/[[LU'r4
%XBBp-fgHco2Ii;<1*-2W88#u6+1YmkE;4bjpPskEqk46Pq`BkZNuiJ9*N+*'ElSETofgD\nf9ZXL8D_\D,;j4c$\+mP;H505cb&(
%=iY9*S:%'OI\8TN_pG?GJ.]jJ'b;?a/Q+rE=iO?q.Y"*&-gI`WX(g*e\7QIeU]"@u9:8pYR;<4eGp(\-0'ub1Pq>8'r"JbYOh0u-
%iDlpU;W"0p'3$mPA'!^ID4"FhWCIesa\!P'@upj&U4@]o$$#Z8Z/cC9$Jc%%e'_H]D1U"k-#Z_J7,.4DM!7eLeE)jm];8Na$Ei5,
%q,e\YoKk3*4a`=NoWCRLps*s;H5t6A\`96hO#oP_nU6Gl$)KBM+DYt&=>;;67IX>S]%$'S@!Ed4p*U'IQ),:k%3KnO.HhMqH+ZdR
%rluZ8InrY:[$)DL7G'7o$Qc1nXAM;MS*]:=S74+N!.fi;fMPPO/Z[M>=S-(*D1P-Fat*1m&4Q-3*To294(VZlUr)f1MYVJ'2G^uk
%_a+6.`$0\l4$$#rmtbO:6S'HF1glT';tb.=?F``P!sc;6a/k+FR5@<DIFImR&f54nEPp`%KL@1c^g,?g#3Cb%Or%6Ef7SB?XPg%1
%6a1""=JYHSSQKSr(*:;I04Jl]0cJu0?d#2X]Orr%%cYIEpP^Bt!Td*]$7UFUoZB>13@INQic=dkIU=]GSr.4BNb?B,fhq2Xjj(+c
%cK1(Q9_>qdqR_`.1VSX4V?k)6LP7rfAr7T<"l5Y6ekNGYPf^0KAMhTO/9AR7#0jiMA[=rDN9J+f6VP`YRIXsA>n>Db)#6TU1J>un
%DGm$[!Hl\pUk[3Gq(F.f?M!#f4jHV^Zpq(EH*e0bA%9f6-5H[<4_0nWT\W3jF#-\96pfFV9ZCaV:&pd&6rdo'_fOMJE_7<mS4I-$
%G)OB%;iN-d_!os8dDI@i9YMI0LDVo1GK?qDhoib="F79'[7Gm,3NjVXNE*+%DaW<#[XIpFN%SS=*c%Y]conhEHF`:WE-0DRBfV(2
%IVEg$^`.\!l?Z8(g>@`oO,.G0K(]MHdq;@Je[N@?ZAE[5!R9XcSO>I6KW<LSb%!b\M"#4ID1%d1HSRA,eu=ph#88EpB(]BR4dPNB
%XBpc"^X!rmpHgM.*ij36';0I\[)59KED7uU.FIEOM<SSGaiO-!;5X"?\hlJqgVA\$eW)Tu$_c;\C4GFLf:TJ;]M+)`1PT=D4t`rC
%]tcdi@mJ4P:!"EB]>q.p\ja%jhAXleP>=CQD`Jl_.WLOJp^r;<EMOTio<VHYD]+TcM=fqpg&kh+=VGP<::o]!-+.IP%=;JY8ju-.
%J0>uYMQ%k#oVAcSa[<8VE`(QpGTT>_Rb\TIQ7*DK2!_toQV<i9BD0N2oS=E8:aRBG0Q\?[Qr2!m`+X\&aI9[hV?AIifJW^6&YMsH
%_rHL(YaDg3B`YgBCn:l7Omi8?q2YK[n+_+tE'T[-bh$MZ^cdg;:5K.9)0);`T8]]o1)>V=gZ+qBk[Yu6Aqs&p0R#5b!er019*tt0
%Y/s^W%!A@9>$:)H,@Wm"%BTJK0dj8bAYU:0XE+U^iu6ep%qeRW8j1N/F05Fb&=\c":4/P!Fm^mNS0.*=@2/:pZ_J!3'KJPlXdjM-
%C#N3uDm]M^=QfR2A[PXlO"_.b>kZ$9+2$HSOG35mnI]R[K;N5Qnb3hej``-fmQ&LPrIfs_EUjgCMKM?g4$q=h`HB_bdL^9A#h*1a
%#']s*L4:Z4O!!&^80_fL+lk7GI2"Qogb#=^.JK?rSpR@YlPiJTd_jbC(+]$LeP/`taQ"]IO@cuTo4juC[ag6G+/WPnIlS#lCr.lq
%5gO_;B^<@g%6sO4eG=7<929\_?("qgQO`W.jc4PuoS^/I*UffT+MZ[KNsCoBe(f3"nWqCo]>m':a@@5[iu/V@Y?1E5^9FNEFbQF=
%"LgsnCBEo-2QA<PT:#+/)c`KXEX*DGET4*J0kFgN3NS`q1pgOmks+co'2P=C/HP5S)*"OdPu0RiT\XhgfeB8;SJ0B<8)i8`#q]6i
%P__58aCs1i?hKfK`8>'#AiiZ`e^RrZ_U_\n3K\,Q!)qZYID(7Ff?O]=2a&<$#Esad`l`_/_<EL.Gafa:,m<84Uu8_Y"lE#_^,I51
%:/^SpWPD!.qk2t9;Xd0t]]5AD)jgFU3S`BIi-A/gDCBI92S:!u>D%8=!dOHmh<&\%@63P,jnpph!])@[QJq2#RqBi&ZrO?nX@MH4
%8]1@j4)SGVq)A`uX?hL1@q2<jei7P4K1j8>-ii.B*c7U+\,G)t^tieCPn-(`0@g:4jMMJFA3]%(4._-5[=[YIU9$^(p*'dmJ"<=g
%kdg0?XJ6hOK*\Z*nBIcn\&B;`f;[02Z,r5I9'BR?ice<;h^'rDDg3W1F04d\QBX3P?Z&apVmOWr2^X@:&<+8WY50;PeXlo"^9a*I
%#Mqa$kU(I@7Vu0<CSCIkDMnude6Vk_'5g^Bm5T-kip4MN@23*XF?%i^`LL/r34=4MJfBBg^g)5GfQg3C#@7A7.(K!f6#^O%M_JA[
%KG&@nc#($H-V:;JnjLcG<2[b"\K]jm7Yg#sFV=l3BWTP4e%.Og('-1p;5qqN*qP+#9WL'h-5Xq`?ut4@,&OjeC#&I\hXc0iS:EEW
%=Qg%3j@_6.O=ZseD):I.o^?:5CAO0l:?ArIj*mHmc'-.q2*pPIG5l[Iro[X.p4WDs(MM>l9:VnQ-m&1!ns@!WYMA._JqK^+r[T@m
%FE[q:b[#<#qH/Ygol>)IK^kBGFY:e[[=H\m85!Xq@`@t0h<&3[A@S0%&P-CQV\s2/CumdGD$mJ\.ggBgU->.9\?=dk1G-4!\JgV)
%)2d641imUQJDKFYM(QW5q:A?SSlsiiMm(Ab.V9BR6=nD0^6=>B/P[uuDY205BGnjg9sd0l*T3+K8%_)C*KJocWH+-oZFjXd`Nk@0
%#OGU?UBB.(a`ETr"^WHQ";n+3CPG49-:a!XTnDPSChE=**/D#^_Z)lH06_nlj^'-*UuoP$5nkcFa)WtMi_<k&>SaUo$CUUjRWkt#
%AK\Yd7)o/pUJ^`iQ?p&LTriZEXecrL%&9.c?pRAmY>o](TD-%$\F_>\_prJfEco`3A`4bZYThi5e(#?Ti[`pkZNsgO<fRu8PqB!k
%@k'"'69OB"UQ25\/1$=i"^8MZ(s:)OI86,dT1:4sUn=)7Gnb$0`AWM2/;)rrlj7L:13-dJi5g8+oTg`*LYOV&NcOSchf;C#W8)CY
%P2;f=]78!Y<AM];%i;mQrE5;)3NQQ4QBc^a%aSJ)#jjT%FG7Q>H6HuB'+?thMpoIFH82gd`q_]fV)3"P)@e8*L6\6-6P6b"LVJ#e
%pR]SoD]IEK#R%5Z=79nVj?P(?HnoBFaWsL-gOkc<Nsr(\?$4!XWG*gHXt8Rrq-oZ%D/Y$>=&tZaeLRmCo'H.!aQ;Q(<4F=F(d_s%
%4Dd38jrLuU>4OY6GK=)!-l6L1j!4!?4eJ6X-"TqreM^mOE[=3g;$=F.iND"J"f1"k?""\`NW8V/GL?-rSJE^(GdD(sh!a0/.,k_K
%\VZGOo*#BcK.d1+CG0$Op+gHtg&!N;j\DLS`k$EIGYG0Q[%U:P9Ft)MbCnKoP^.!_5HSfd22ge'2==BSJ7Qe2!lu(6;cL4>.ebMD
%!k6"6Q`>>9>*l:(_0Z%C@ORo<&U(l;7Al,0Cj$!:lqI`NnLQA5^-CEl\%LD\;g2rn*/-B(%3><=#JG/lDi6DiJC?Ha=Z<DG>L$=S
%4g"2p8D'(XT6)YEZi<)2G*e5kHjn3?A7V!h1jS`FUqk^\eRA%6gT"/l6K.+(if_NimS)_S%NZY2IW]N8,0aPl239YMP!k0SP@lC;
%LNt8YanT#`T69>-j1H61lD*h$lD,9#_Red_]Fhu'\%-2l-A&:6>3[SAZW(cfCA!Hb.fORS&D_f19@bRuPDjXP0J`:G;pe]7]sk*c
%HB?]^n24?&[;G'uE=2+o<]B^`ho'!/NXh`(Z'6RS*?CR$,TT?'$.QXC>L\XHg,HigA!ZF_XF!c%ropceYR16P#4$*4Y2aJ7q^F\<
%#6HWlk?stGQ4/0Ek+H*X)W"iI])Wn`d7_6!KF4W=U#XF`rU53h#0TfEF1[q+gG`0-C6X>S-hhO@r_rWLmbTMtU6X7%N<@ZX>W(8)
%h8[&!95EIce(UAC09%OdqL%hA`ET_qJ-.`UF(=efjdH8"Pcep^?Q4KQ1\pGI;n>Q%1/"1&;i7VQ,qI/q)Bk8p"`ebF8eJTd1p-j<
%,NOB7@_8\jSL&?B`5pdr9?/LZ_;NA2``"BMY=E_JZH>p4F&sO&/RWfVj=*n("M8!cHX8HRs.aeOS1@r_X5o>solB36&FK6!G.jF?
%]G(hSdCW_*AWMKbSAX.1/[Z+B)&`O1C_\j7!<n[DO-PDT!1^"pT1Bl"(/3o)9cDkU*ZtpI@J5o,"/J4nifct;e%"79,!MDgfEfc4
%303&]Nq5fe@l]Ssi1P3\kP79%kqoE0=[%o4(g57\DAq>VI-4dQk7O<+GTLE8B<b:!;>kYTg_,%B0D"2Y(R??pKWH2BeE:gY7t)NV
%H1^9*E9HamI[_qlZP;12<1YCEQ3BcL;Ii((iinQ#=X$n7fTLj+<]m(.,"'05A]k^spM3u<9SR+`jSsVb9Daa[AZ=s]6O46d@<d#"
%@o16n_7+p/lTX%%^Kap+iuPU8J(u'sql]6C'A!sDc.n@&X9CjX/C*ag43h$'CN+,nSgSUI6[.rO(l_ap/5C(p[[l[:!9s7<SPN2*
%eW7D7!X5c['J!"b)JY$h@GRk/gRU9Ep24:o(M?[O)Yr9uoqfCUqK=e/IHUE<I_8r)qbIsM(r#.ng%4$[S5B'2C/0'sVLZT4Z`@m_
%-%juC=]K)Mhth6VgTBqR^>\pK(W43_'>1R;Y<hD76"?s$S(<Q,Hm@BiS)8,\I]#!1OZL8;j%!.2kH%1_mlA/Ip0Ct-[_&U)HsIr6
%^nS1SCDFf/FW(f<7#A[#W)C"#k`q'Wjc?q]25$p;a5^FL?2E['lEYG-Q'M*jA3G<!_j"GjD%esV3_<_.rT^99/Nm6&V_-sd_bF>b
%:(T:*+JZ(r_,HZjjZ(su,&(L7XKf,R9j>GkGO=(sh6EHr"LA\9'/Zu^e3/ACpHXc9$$&.N+CYBn<r1*e&++X$m!0]=28sQ('`)-T
%1UZCh&%G74AR@aKpAd<_j\C4G^e#>\P&gn*G#s+s[,8U[7B;<U!)[cDMfY<>Q7H7`DkAi@cZ7e_5FRIpAl/%!].T]VO_I2O3lB^Q
%6u=a:B4uXpMP'4o:KfZ'&_c)6fdpcacf+2L]M25O#*QX'/,TXp`8st&8S`,dJ?qYFOL8-B>_9'G#HcGqM3pUM(FpQ82%Nt:hCTE0
%hDb1\>_l)+T"4S"5*kfu`sPW^0Y64:YWV-]ToVhZdW_2*'3KZqIr!fjqU46Irttj[qgR<@kd"Ef@:LaQX`V`,O(TC"@d*7>cDR!O
%b9Mi#C^o0_j3Q6MLB1J">(#/Z1pCp3]:#8#M^`g'D9N2EER3'$$L&G,Cts7,L(sAr^m)p!p6l^ZkAr>H@g+:,QnSeBL<fk]B7TOn
%!9Ij]pad)NA`C$i]M0aPI0%K?Hh[I//lfl-ZGl_(OKXMuUOU/dC&JISBHgn*jGY1,@4umgEsZKW?qU257cB.bW)9cR$#Hh)e,M^N
%+"e1Me+GogE_DUCT1^iul$^Y7+7eL)R<]lpH%0j.G"(i@F]gZ'W[/r<oIXBk9Y9e\]-U@Ii,8!DiVr#4T=qf6Vqq@JPG`oH9\]LB
%1C!Oj"8e%.IE'&d@pko`Yg40=B+4,_#56`ZrJYrJQANpCnQ@2&@pko9"-]%SIf8QnDdP_Uq<$ARDgqQ3fi=YooD$_:^ZFp9rpI6k
%hRpCIrDL<'rV,23q;\MWE8^V#GL!+e,(@j53r(8f-155W=&%ae(UCZq&Nm%;j(nV>+9%/tI]rdUo#0?+rhf_pJ)p(u>?_%Vh6?e,
%mU-"GZMXJQYPK9K"R47tGM^"uo:6-SI^s/6Dt_B!:$u`PhW-!^n"6dj^H"K)qW?J3QVUrfD>,jBT&cO<Y?jBLrV64*ej3Z6^4,e<
%ea'F4:S.PS]()iY5C7kVeaICJ^A5n=T5_dLM>nM:s51QB],^LeJ(&Te:X)0ZQDJ/J^!M0AUX+fG$VEqfRb[Oj-[Lhj2o\[t_G]sM
%KlE;tXk$.=>_*MgRK<3Y]TWYG[@gLMq0"')-k5UeKr1b-1$j*[ou]]a.TJCI+JLF9<:7CEBospbrnE--Y>EoZF"q$e(=MW$9@<)A
%\[C4!k!;^^@_%Z$m%l"7a_,j4a]C@\-8"1KHk<KJME\Q@8`%2#/("rX-Q:to0(S<DY+f%,]-$[PF;6LCR_K3hSa=^"6eF88r)D!l
%,AX]qWrQW,Vu<VpS_M\H3S8TJ.f+'bZ[>9]A`3u$41gA+9C1:+X!B`?=6!<SkeefS(.1On4F$,.G*PMJTY]6MHP]`\g7_Nr&5JFM
%?KB^YHfnk##'oUGn--J;6,-0de)["[4Yois2j2c)R>shMc#rcWG-dO<8_WOM:QY2/]p9Qs65a\]U]X#8FNh[:07ALMZ7Ff[B4&V[
%nH]C;T!??uass,+c";'R>EV)WGAO5DPqJ@7^08I5i%l-G_U@H*opk\u5VK#=bmo5cB:t_Wk,,LR<,RVhE!<^S>G<4+`[fHp9q1fR
%)6!d+aqbis[$8OI+1%%,;C<Y9dfdoahJj?(]+VgCpqf5ahl-``=<R'US[;!r#PL]N-&E./.7Vq2#?n<4q8d#.RP8[La<p3]>FN_j
%%M_r)Z#XBLq"*)&ag@&KrZ]PC:Ah+Bn_#[nh2=@+I@c#rGCaSRKU'.qLRZATO=sea&DLl[Q+VTlPbH<7CX?uCb*;LBR(r2$&&TC[
%Nq]YIUscE/EG^a-X"<I9R1gH)/+:t;s!\U4iLSZjG*V]ZFLb*2k!]@ADjalds-cP@D@>5".iV$iqILiN!;.Ka.KH;SV3I"':[t/W
%[#_$u3/f]k.ks7BLj2h#Ce<Ou6;*34YsgK[ZTc[r.YqX[K7Q[,5fE`6>!rTU-b[f#G9R5&BdZM`lA-p\.Bhm0pQLC:4s<`i8W24V
%kR72doMofU.nRM(iBFbN?Ft0,S>l[r4@CAc@L%a^%]p\GAXWD"@^MpeA["USMTmC"Q3t6[T#UCP+uNhI;4DmEU40$tkNK952YfL>
%AD*o]G*ejRU(d0hk2eULWGa].]I4U.VZgGT=d:QK'PT%Rnh48NHkq\JNA#c1JR9a=_Fn5==[F(K%G4QIAa>\6j%W=6mgsP=:;d\s
%ddQb2e?W_FX?qn>9ZciU]+h\OW&fSH;pg6WTN3[_qIO]H/-d#(C66jsPq1oQ70KfED!^X0+Y8Z0.79&@M;A4?(0[`>K`0&0=oo'\
%0.eqiLrMEBDP`3*Qu'nFb1Sj2C-d2s'4h?"/kq^n(djgV+oDY@g%rmc\O,drJr=^eI71k<V'YqL&&f08(AYZseabk4:WkQ"-ktGk
%@#_+0NQb:ZXuc]l*Zgm"g[')$ll'hW`/@8!88jFZ/C2C>#A)DWp.Iisjc2d$;(<Y2L9\smJoO>k1>>/(<4XJD]2FAc9e4#548_0r
%9X(@&d6W\*ASD`bmP>*k'Et.;:-&aK,$)='53+DV5#3M!WJ[#(i5hBuLbS3Z[`EEF2"8\T,gWcf'8aORH-u<d=lSF9Le&e*OC`2>
%,rReZ-G.p\N]H7g-1MS[1e>A<8<04G^khNT&=,BL0'jr69Fq$!b0-QV,1u$H_mFs_P.-Nc2/0nlg'n\eY`(;3PaB^`9d7mRYUhA&
%JQ]T[*nK!'Q_b(RLhX`?HtZj):YVR!j^FQ9'B9?jGeq91TBaJV.f.TFjR%ArY)p"W>a?Z@g=fT=jU/@AdO]>*][q:c9=hK`V)b],
%C=l*N.e3b?S0DPa"@^m:=^AsAPRbbO#0]bg(P84;VK-(1+V>T\5i)L9,@]DPV<Ac`Fh&O\Q!b_MLV"JEV3Q*DSZ^ES,J$9L-rPfg
%oWWm/a&lB-Y(WW300ZXdEKG5Y!s*SII%G"ofH3Bq:Wt#3q4S`W)+Fh!FTTI$oN>C+L;W53A^N$i^YMAFoD!L3M/:?ZC0+lUaf:g"
%=[2Nl9,682@kV-*;5d=do)4K*91ke!?Rc42?L;_10Nl86!oJnmb>M5OFZ8jEjV]i713_B6CVj#Dfh5BN/Z\R&@#3!FWngaB`p`CO
%G9N)=HdlIh!+`pd*Hch)+]dK6]nQ^(M9,Nkbm'FZ)mSVLU%[sgU;rMYLgd0;9WPEO8mQO&``iYIM8"jL6q*Hqd)p)Qk)dZN@fm00
%25IKnV8cQ(gc2EDN@HuC71Q._1eQjL&X0#6>n*]&QK+p<!aUeOMR=/hWile[8KK$,[+E>cX0/VhFg8#Y*m,%p3Kp#&K4"=9/r6Yt
%Ku4RVQW.OaV4($`dn;eP'uVB\QH;^]Bo5*@o5\_jGGN\+>AD<]QW/9HK1_26J9d81D%W&U()(Lu$&e7)O,Sp&[(//aFV/4!DC#W@
%8PeC(-0]dg]k`tNetRkZTn\uQe!t@Mm6h:Hd+"S7G4i"Fb%q11nQ[oi0=dfO+q8!BTqT7qNa*U)#f5fW'd#3#eM\-+VA@.6*+eC"
%*KFaq3IK#5ZCM8Z:7a'gQF5($88sC=Qk.H=FX"SakD:B!C*)G6[3[d`?4id:F'['IhP&?kjl-IDNXAJY3QHm508S^g]+E+t#5'f.
%*-8WX^scuS_"PJ-p%-$bh1oA8pnucT<?<01ZMWf<hRn=2nseHrp\X9S:VVDL]2rpBi8et;@SsK66JQ5s8a"4,QkWqY&8O4\KSluZ
%c@9Gn@!oq<K^t@I8Zq@,gkM@ISs23P.N/VN%7Yet/BU3nRKFC':HL&HY19>q;<Pg6U&(flk?r5L`"3Ts;4!0R)!DrMfF^okZ4[VJ
%IYARGSl8Ps.p0l0d?a0DIek\qDu]B"n$W7^\5MLi]W4e1ct":ohTC#D>'D\@$%l'NLX`S\^[\&%r@&Ds_*W[+JmPV**F2C9O))YU
%OeDOI@OfQ,Fdsl>&nWO%d@a&H/i=5[.u:gY"jB.YO.k,mL4S<>^LZhm1l)5B/#'gNKbF+;Y"c8R*%5V6h2-7`\jK0X\1DUUi$Q%C
%6.]#&?@aagcBAP[h3IdcdVWUV-@63,MRr#ecR;oYn1H=>R`D"g%=l:s&95&WK^clDA2CkH0d7N\g@SuRJJC]U0?$ij57mF#H+!58
%or<CXj+k`(d#2XsR^r9o]qJ2M]t?hCAmeikG9paBahVJ-7TCn3PEuEKLaU6e?I.:d5#\O/eQ65<iXrEg6<R_\=XUE\_t%mVl4n+C
%mCcp`5BPG\5a]4)n,Ym30?8u,emQ#'7\F>WiIJ@!e8A)s''iPD*NjMe#RP"#mRko_/g?k7,2sdk]36n_2ZfHN((7KoF9#L_#`<F!
%dXm3Q7]/V[K<NR1:uEBb=l9r1o["erPcXgm"<bk(936U,MCF0Zo;)A\^6Xf$2!Gop+mnhKb7Ckdf$qtG_C3EF;S0$Qb6".)aNB.g
%-b=@M-FaYfmDZY*5[fE`RABE'!ln@.`uk/X'/6UY2p6S#Fs8N/$;fDcB$);.B>d.DKWaTJL'@+ZV-/+/iB'/,+>H6rfXnFqb3NI]
%TdA)Q6c(HM:cioVkZ&KJ>$M(d%9bG3U2U"u!)HO^$ndq0(#mjc`DsoK3^>#*B-u.0C_G(9mfpoA5Wb^n?o?RClul7r>W8b9`LIK$
%Pc`q*ToU.X"<3.8bMl8B#;&XSZeJ]g)J()`*ZBoTZ]'p"Rj+n>%a1`GK(+4Sc=dt.jtlY2))4jMJ]qksKeSSoBWV_U%:N6+-N1<1
%4O%@0Bi>,+fBm`u:%hoKBUp8Yik&i,;50Fhp^9<l\.29RPcj6<U<`i-UOedR>9*9c[+&ZdCe5cf&g`:/QmWl?*b194.PNZt'GRH2
%'YMS!?0n>ZCpEo4"aq[X_b<2fPFh?)eYNB-:n0dQA_+rC8nURi<qNE=6GlN0/A0Y*JL=-kQSt9BM:*PB\P-UcXmdCn$"Ah9W/GsG
%d#5@J/%RqZL4H43:,N:S:Ktabort_@XCkcF0H@u0_Z92*hrH"i*5`SP0RgXk-16pV:SK&`gN?>hX^G+Z'3<X#3e>6(F^0u@BoTTc
%k"(F;H4Kg'TVWc/7$"XJGNGY:FlMKCe6UB',m?ff'.f:Y:?$1(e"X!uJ9/Ad"71WU#YBTAj:0`W6_2+>$<H+qghWnBhCa*F4J9t-
%^)&B:5Cge2Wg/'\"n6%lX3kf$H5d5&G>g\0oFLl``)T:NZ,.9;%n2C9WA`9p8]pLYhuM>kaW'IQ_-BH7,_se5bmYD.UhP:9ga[7m
%bAijI6:3A1a8sLd6T#MCHG[8!1.#p%nm`4c)Fefu!S/WUeXKM&7Kq@_p](WLQ;1)LNGIN'?6?Dkb!imQl2(T63l<"m2?qm=/W!M_
%fF0\0[5Bq4,N=@Ph0L`B&b;C<*fASR1$.Km6h,=*,g!]@NGmF`5c-r2WFMP-0;c3@*F49]V9K9[TedQ"XG@gMDIrlJ,d*-YX-aRK
%6Ik9,]Nm&t1,+TT@a,7t/sP%bk[.Id?4k^uF?r*HW]\Z@C?diM+P$13^AE*l)=[2;#XH6pJK;pf44.aB//sN49Y2"A,EQ$#rpY.G
%5Zh3,=MJ9XLq,)*!E2R],KdMh5M!,tJ/G#K>e1hdRNcQ)GT`I]:nl.p]hH;iW\Gm",&!sC$fZ&T+KQb&)&>6.\h"2:g8suTp>K:$
%5AZ16=>1)9Y_u-:;L?'cW5lmnL(]#V<-7W>'_"ZWTRPmHMJ%/<(@Y`d1LPX:Kdor!^4WuB93VW80En"L%LbbCJs)^]0J7lB'*b\_
%kq&2MTBQBC+ekSKTa5>:Pe![5TIQa,]l`J]Mb%j8&>#gTXsRVWGt'GUeVCjK_>>aA65AjWKCc;^1;[,:!l+klXDe<PdQf4bp].Ju
%2C@<*B4[LfU@b-uZ&D+>?t@i_6&_CT*OLl$*Kai57#j9Z^_gH3o=CI9Y?q9'FC5`>_2)?N"`fj%M)j,ni/QH)J2o(n]sq/a/f6[,
%m[CL^KJOGgO*2r\[K0,SZ7N:7W9FlT=.==u*eN]#*5H#O#69G8S'eGs\R2BEe4'Zf>!*J"ASHOE"7*<B#jDuLKQ;R\QXL.lK/eKm
%Te&KlD!>^QVf#$mdR;2#Ps>aa3=@QZGt`i_75,3]Q*@(,Ru=AeeTbFV>WbE$kuihU.7P*UgE7m'XcRb&_=.%k@FR!f,HiXrObp6j
%Qja*Jh-[0&o!R##!@%l<W%Wn+)#*3@P*QBhF20emSlS.W`rZCK?k`]Ie6IWd$%SWZ&V4)/ke5lX;[QBfWfWr*=V2m44D<;Z<#SN?
%o`fSHJf]]eKKat=Xq<G/%hQE<#6<V7GBa6m?$h&,$%@p>b$c&pb.m0&[2=%;RR"MK&Z(0U.VA6b&[`aQ>$EYf)3T>O$#9f-O=e9!
%A6fqL.!@&V(c2DC^gE]7G?@7l_-F]EV/&4tnA890[[1Hb,+&9-%(9O^NVBsSXe3=3hZb<R^tlFQ;HuV/16[le7J@C07-hA-R-c;6
%1eUrl=XU)6;F8IE+c?O:<p@sIh6`$cg;&[fbS-prc+S],,I43_XdDX70tM(.JMT\9A<l:$%/7lkGE&glAIK2`!e1m..7l]JN2KLO
%Y727\KLJlY11hX4`bUEuCskXD7kY=qePi#@K"*Ol&Q>e/Lr"ljAh,;sK[becU20O:`*XGBD_T])l5%Y=(th;Kej[pW$ANuuU=iQP
%0j94D-[&7"@ES#R]+QnbSjnB!#.liSAkF3aP.!A&[*@ToUn8F4Qgc&bF=YRGAqWIk""\M-?kcq]K<(kT#;!=IOsC]5cdSC-gA[rZ
%E?:*Z[#2+;+!b.pj#ZC(dCdoRN75UPKc`&I&D2-t)ki[fWWV!!drpiGRL@s_h1qb@k8'^YE%h=Rd]PqC$o-?>WBm*m#&R(QJY-&W
%AXm:!nff28C11A9Z.L:Wf3nS%UM8!L,1Ze^^DKdu('`X*[RBtqaH!72g5(1)28.WU'pb8j3A;1UM$.pO>L\%T:E']4n.:I\\c]mK
%E_15[Ff'00P%>FAGl=pPE=:e@Z2g\T?:KI7;-[Y(6lF@)I\hAtG\LGW&jDM9/Y]<h!Y!L2LaSrh8AO4Tbu.4T_M6Sb0MJ60N7mdi
%?lS-,[1&t&3CN@*i1\8K&KY(g[)1Yj$s<bHV<5jpg]K-A?=4m#;+>BYa:fS4L5DU<HV>=$9K@qMH0.IWhShj(ZfB5cGo/Bg&Qp]1
%s0TR]O;=8Dj*fl8'hq(f\hdbmY7kmVYs(PDojkLT'_Sc9O-@[+")6+3OBlMuKM9J>X]*j`kW7d"_&85gQtjbM1u@5+':V<$c*7=j
%#m!r-c-XF3]/1:]Tr,p4BLY?38WAh0*RkZW(+00YJNj/OOQeEWhhB/E;%mCU]Gnp,K)XEH&^<_un-,KhNN.8KO8)\XGo<>3CKJ2_
%V+*pN/^(?NOt@a<KCuDPY+u549-$VS)X<$I6\Gamoob1:pV`op:f:.%#Hc2hN3^YS![id51-f"#P;RIq6O.hoF_^>C`hn#Q*EF<+
%:-2f%#lMKsE,@jUa;hA,_9&.7':CgVeJ&_r-h7EGRPG0/E4DV:L^]po#%<6@J.L3"5JRP.2up7O=.!i9HeP#/)XS7>6KO`'&]])B
%?1(B?$PjJ)r.7`JriOO;Jh<0,on^o&AAR3%?'!KoFA<)Z;QBd.W=Oji)\+u6&48fPL;R\7"V_^_D-/GG]7@OKZOWD&Y/<g&M@r+I
%dIp7US5^H7VT'4^T!JOG,1CXg,'A_Z,Z:M.l<s,_1L#Z85bZYW`MG*a&'aR)70Wa_l)2H.@DSU*+\o*KRN.!gZUYk;Q7NFd,JP,d
%b(Si+kTbe7l]!KFU=H!ij9Of[&MgCi>=:A;6&;C;e0$PAX;`$^#FrO$6:HsR,:r'RZC$E0JOGl[QVP+!iOm*N#^B5W^k?d/V`bfL
%f#H/,'jS`I!NVEnAI?k[Gr0bI]!#f+C-,IF-@):F#(/_SP3"MJ#=8ku,89d(VqkDC:2F8#6DR._=D<<WEWZp:JnWB&\6mdU7J5eu
%H*]I?/!Q.Y,BQ+^9/HRQ5Jkn-L[m"C6$Og&3qfc'qG<V"3G97I=G.ka$DcpN@-B*Tk!r8pUP6Jr>1uLs(,`(/2c*(XAH@@^3I?Lf
%<20I.lEROTC^%=?;/)*(!?'C?J1<?TZ@_0Eq3sn_6r&VX_b<Hj8(+3"7*uA4Q\$V*-:Q%-R&WhDPtIq6Xep$26g?NV$T>:pZC\",
%1tG4U[Z%o;(Hi2RMgu-)SZk-T6*!u786>rEog=5@KrGcl-nnsp,`oGRQ3kWXU/d=-auR7b@#GBi!76DOTqqa+!B*L0)JGnCG;@h>
%]<XaoSm>0CI\R:4I(*5#$o<IKlj0,Y$R6r#"pfQOF$E&$.S&2E<01@A\rZomd1"'/aq(1TM@JPKL5$s#hdS$FbXof*M#pn%:hUS4
%&d_-P$[c'X$#UlK'qRT_6\_6g7hFQ-Q=e5O#IN.>&N32YlPZNl]%TEi6Opb@RULgWGpL%63mn`&N[Zb;(^iGL2\Ao7]]OkkYl]2L
%?Zn0UO\*Uo?-mA#6,HtSp(d6uD*crcl0'AD400%8\!0aTQWYkl%("1PIZjf.T8[/7PS74WJM82c"NEdm'0>pAD*g0J4i0Z%D\Go3
%9n;P$b<W^K"OL$8;%#GO;HO!Yg6=YinPh[!Bq7fsp<3hol'm%d*oEeP%oaSOn-K-+XG/9(p(NAfY@d-i5F.E/7b\FL5r@t(6/en:
%5N40D<DjP^6=:o"#4sBR[_tUi)9sVsH:3rq\$=K<N7o6Z<@4FQ!7YF(#5X.+:;*Ab))g9DUZ)PsTJu'p0N1a_:,oCIh*XP^+<WZu
%XktDi"VsD6TG\e5&htF)p!OuQkAL=3&<Dbk?XeJ&+:6ap6X<7OJIoQZIArhhQM5uu\b9U_FR"g"!%:>XH!65<DB\FI#Ur,f0=j3E
%WK39C)Fb3kZJ)1WW-I#J0C<nXJ(O%$BuNQn/9)uO6EH@Ql?*)e=D0R!/6Kb:<^@CIbOrRGV4YJ#hZb<R^tm;AOV[12Jk+hm1)['9
%/18B$i*[_$BE`;5:j%e:nLq5B8MCT2`i>n'2Ui;,QY)=L+u/)ed&7cfSB0tI)!G5MOCsa"Ln,`^*?M&t!f@7%_lc\+"\S2#lYa;B
%,/2>KhgFUeWU1`]#f>G#@Glrg-EZB%n#S3e1_gIiO%ZGb&5A-*+?`o48g0WQO7-ePGQr!mA33(FnI-m$6s1Ds5g/.!@]',Q'<(/W
%c0GIT]k9r);Hjng1+A?8BgTh*4CrEQimQKE:l.M8J@6$Y0[1SVf&a`*..,GOTdf-;oYcUoXiYfCYUHm"4S8R$1sD_WoSGc20`1B`
%"A7<l8G<"f^E.1HcjXq5^5S$S!%kD-)j)5.@$RVWGU(lKmY=<_?L%?Q*$EK2lU?Lu$OTFi!/=7u"s6f")[N`*9*Ged>=Pn51P$@T
%9-Dq(R,rqUf?o*hig=@@T#j6U--T?-nbFXHI>8Tj;/F'8J//hKZ\<ZtG%oMEXcF4t6&TE%89$Ig!&qf]*?L'PFW!u?[mNDW9PLm>
%!K<t:O$Zsa/s\;W/Z'$6%crE\*?SE/E!nKV5624/*>UE(1k,fV#B'eq;`SUq;A?7^i>>PVc1J(WA5gqf6HC%Y!$Xh4c1;X0!WKt=
%o\'X*4T_ctVS(QFRH^sVrSXDr(jUC7!"1spY$nUmg;O%]SZr_<pmVYp7#H,JVkBFpW+Sq)1W)gsIa=bMAg4'j6QB<tZ=[/RU>9K7
%%!tEq8U\$06gO9<-l+R1eDlN(<+IHi1\B=O*m1F`C-<(4?:mq<,-1$kns*YXiu*4\`;9n#9t%-%f[8EtCecZ>,BE1&$KE#JNC+*&
%eU=k]8%[9WDGCn7>)9\T2FOZB^fuUJfpH-qf&9!T8qceqqC,s+iWC%0@E)%2g.@Q91-q&VF-Y+B]f'Y4HSU9WJ;*esd>SgIY^?%8
%<kN"g0-Y4i8HTk4-4$mSfnp89\c]Jo&9uJHph<l,A.93Yh1/]Sj_+unE>@[2<\'2#mT%0Je4!%*jNU*c,=@>bn]7=-`/+mk#3DKf
%O[t*)*qJ;-9um.:E#SOn,@)DZ*-=1ZRFoY2:7MFu2&-MK4d.LdesAl\b@rt9%AlUOnNp.ThL`Hu_(;#gKAk6m.6`;X?&U;1$Rp8g
%s5?'Lmhr7OGUq24aP\Pb#@bh"+h-+26j,*L[%Y(EAjcC6b]'`m(gs1Y9l&sAkR)Q#L3Wb''H+MoM3!i9Hn?*B\/b9fRT@*52(pIF
%%:Q&7iJ&oW"Wd%h`?(I1/=%Dp(L$YFR[9Nq'd')**uL\$&Rq#TYpCV`b:\JsUUA^V!s6`gLb))BaD"rNp]Y=8Bqqid%Z./U4AZD0
%fj[eeTf5mpW:(H<)fN=OB<4pS(ZmjXcqf<i``Hj-Bk"/rTAMbC1[KmNVr0-r3_-JlJcNJ"1h=ch58l!bJUfj,&s!gZr!tL9Tt$Z<
%aE9bn+q&Dn5tiUr/;fAk<f<6'#'Qe'&;Fh"fW4b"&)_47T@5E"+Y?rTPn_Y46_!3OJ-=//'[0[G>>6iaS8/Jje"g_D95S(D+YZC)
%YdE9K.%O"mrE;'QNG3"'JI;J5W07eeB=>-N'M'7[1)$#W<9[kX/.3eV$X+B?"<!TX39P"rbN\PT+(7K++I0VMck_`uSl9_N>YB4Q
%P^j#E[P;&?X8=.\8f_i/_ih:[naYX<Q`^XXf$pFDakD:0$h>)C.Pt-.Fk?i9S#HhCaJ4(i[9@/MLhg&0R*gADUeW8?'4-5fC::-3
%f'$NSPY4#"<lC@4^-Wr"#A?\p];uB>Z*5dd/;#-^H4O(!AFBW#6O6(]?5*m0KR*>"6k'/@0LHM93_G&l!b`^r_j,85Q-Cb6N;R6"
%$6\1s.hUZj$r[OX7b&Gk<Z_DEA;lddnf5#7/"04e229duQ=X'tHk_4YN$2l[f[m(C">,/B=nAKSLY/F<:lqj7G%*2L%V<:<o^HH$
%(3nD2%XY2Z%4S'?IQ)S'!#%,!(YBDPF\2BXBZ`#).GKH0he6mA(,4g'!mY)k\rA13)CR-?@al0NLT/Qo"4'2RfUl.RT'ct2_pqdS
%kh0W$FM-#\djdCQks7Ge(JZ;B)i<-kYq!Q3e?VVtg;VJ.'f#>SpQ:`h)LXks2?7,\3Ku6L(pRab%jTrcBGMgZ)PB$o4CaQ4]E$Oa
%`W/1:A-$qW29(T^,>\6)8]KToOn5:^%jT2@Ti-N7opSP&!]"M!ZN=&jMjh&@n=oAP[7R;8M51EYTY]#7CKB2BFE:D>U4k79)T(,F
%cu6k`2'\Ut_+fQ@B[QHeciL6<3D<N#MN=i@#pNc+@;/9:XQqs(^q2joJuG21e,-$oTtHmj4*hM!pnIM^3ol[nL]^"G&;\>r?SiE&
%&WENl6B&\<B_T5lnH4u@/h\R[@\$'TK.!.2FsHDh7Vj%M6WLH/?G;0#@1CVu7mFnbDGf^&(u$.h]r(!LKSN24:A*nnLkk>?GJEe!
%GO!qEVY@j[]f3R=de&Id^A?BDB.q"\]__>??bQ:L=dsm>qUP>tg.a5-o"3XpDkF\QrVA$iaSF<>m`.QFrS`7cY8=..hQmP"2="3u
%Z)EHX6<aP?`l-XEQFg4s/]Pf"EWhVafLqbL"1$ot(hGZ/$u$;9bgj!4:!C3lTbsJgdPT[r)%2.':hYS]8uM=j%d"171m)iF0/Y/E
%d5"<YORC+fP!Y/.E>a!qp?s*q,a;<1V`5-J,CGHU=i@qW:H0E?qB^Ro\LC>_>$:j.WITq9O\?&^nBm>q'P2-HmtM^7]N;e/BT9H6
%]\K+1^k9OfID)eu(6WbUVg3V19H#Kt,//LF;Gtn=6bfd=8L[l=]%TiTLZnjOktCDN\>,c#n5'r2k[::0Z^rbIRuOD+4KXaq%A6E5
%B7*Z;&c.\.%ru$uo"[FYSH[L%:uDhI%-gb\2`&p:hDJIn.4J@1:rNTs/ro1#KK4$"1$5%X(hZ*O-tm6_0_/Cq&'.S2CFmM86YKo8
%SfB4f6:$OL[\RJoNY!TA!5n^L_CVDEZB#bJl3$Cq$uR6sf6?Ec@$_(.5V`C"'KWOoFGuVpXVVu(N%*&8`Zi+@UhC=&[?u;2Rtq4g
%aPoM1K_@GVe18s_@.Y[8(+j&V0m#_Y*&[<2F/dNo`D.Y)9=9.gJmF?^,A'7*=/96sqQM@*FT\sZ'GqQ/N;%XqoIO2C=_k3L"s??Q
%!GN@/JT>&"#b`D5;J33%[r7_rU6k"U`>YE3_YR!:#;@o"[%*,GpuK9N7!IZhqNmdR*=P78b-5d0>)906Nn>Yp@EdtWC1M,=#?n@g
%&SYX1/eT"!YENU%,-*&<<>Uq<6`MjX,&u;C"?!RYmF^4$Q@Og0Hol@((!A6srLmhOpD1FVjg!1Ul\Pmc;.b)0<9C;7J^ble-%%L\
%.%";^HW;:MnpHADo,4lTH.ePXOO7N4-%$Q3Y$&'Ij7I(i<'E4[WH]li4RdAh)_nc3LQIUolJg6-DFnf0[,-Q1@;*celS4(b^&h+q
%%lm-u/_rc)i2G%bIo&NAr(C5TJO2K;+2Fp&iXdR9Gso,-"slp+dgBd872;p0`=lA!'ps6=DnFS>Jq$B$R\]Iq^a[u8ZrEM)03U2@
%]3%P&>ma#e<Nial>1>eeo/9H-TRtj[Z4T>D&0:Ed6\3WQ2DWQ'\42UfGYXfB)sO@kCM9Tf;-K!Qlt31-7S<j2"BpU`k]!dB-`SrH
%W)kA,Q\S*sCCVHklsi%,)YIZ^=Wda0EVXTnA2LL*hl^\#Xg8E?A3MR.4&jG`HdO#^V:@Y2e.2E2l?;10gQ\FmKhq!0OcL!Y$QN:T
%Z(o-hW9Xu=7(^f[#q;V'd!(%4_B?/-8k,V()[,5kAhl<C=<,^[e<),1C-a3Ib2R.`];fgP,$/)+6_\2/UN..[,6\7P&u*V*BE\ni
%e+/Vm%0Mo<Lea8Mk%F*CjRRpSTIj?R7<V,<=.kI%M^sD1\f`jna&,JA2"M-+.agAuNDNB'O6?+&kuZ&`e'%MeU,35+l?;3q!B5OI
%8&%fr;K$e@3WV$nXi.l(14LGX-Os`>i*;rNdR7V/c%/(Zl,>>\!qW*SGd0fY1+;'W'qTSR&g<Q3JqT>EPUWPJYU=_Ds(Ger9])ie
%#+hsh0X/,nL,NUKUiAjkOr_`7h;IWb!Yq81&P,0]"Rb5FB/M,'lGUaiI%8nr\ptNr+9G_hGli=3EQh\;WZe/C$Nc\&5]-J4APl,$
%=p>WT%CC;8PJ[337OWdJiuTZQ0*>,F(_"=&J@5kc=YXW1UWlfE'*3tLAiho$MBH]iEEi`TJQN+R=Ces&6F-r>JXMK@1,_tHJ]%g>
%;IM&3`@!;H<+=9u(7Heigdae@lY\nPUBYV0ij=s(P9*\fG$1(*'?cT@Y;1?>VNuju&Xd^Ug/fg4Hp+8CU+X?LPGIV`!Qk`F/gM)G
%i81DH!m?e/6R7B)Epq#`4,0YWi;S9^%9/Mc54XC@^P^\W$Tt5hYS]tc,d&235@qEDjQeaiBZEb%FY;ht/XA/VFj\XUL3u'j1+:SE
%,Zc:j1-6d3`!?^H82/E=HWfYL1j[&Mm*%$UDP]`odm_3Q2@ZA.%RMWG@MNJo(/:W_/1#AUMb$tS<Cf4^JQ.lG"Qm>i[mt0p!j:V_
%L$]I;i6(J-YQl@4-mIqD4NYaW2,<,a!JFi''BsAD.s,95A=b%K8?]26*^ho;BP/0A:2)4@i!&9X(Y!2='FKLB-PoQfagXp3^]o1=
%BtjXhOeHXc\'n=R@`fc%1AAtP]S]QP6r'4\<UsbF/K0ZPPjAfTBis"rn^,M&7XrR2?2'T)d3)dcMBO<Y_D).7*]6fZbTcP,_,]3I
%#(S-7:%kS7aJP;,R\s&/a"r2].e:F+E=@93m"-75C&Oc1`=?:&nX@WnU`;BHUOhL2IU$Kk^kA#s!6fC=+F_u$OJ%2tQN^D?O_[Xo
%j5#o"<AMLg0>LbWhSL(gjm5Tu$3Y]<!"DJs(p@oXJY0Y,s/m)V+.p[YD7DPP)&=OQ;mN7=W7TtVB3NE9Hbig<2\';Q^k)lj[4GjV
%1c:-N(7LFf#>2&*3$U*b1l/i6G>&AR^"1tk\ZZ/gHpDj-6S$j2gG%GH#_7<Q`)1h,j$G*c0P(jOJ8@Mk08s)>5V8)6-Xa>0eLHYW
%YXrKY[o`q?*[.srA':<;j6=%iNsJ>;rq)Ts;]28FT`1>Qcb.>eJd-[q0jZ4Rf7BsJ<R#,sbHOr(UPURnEs9gi3+B./pKb`T0iD*V
%,8ce\20#k[#eSSBN'[G$k1n/'K`L9VICZ/fkjWAP#,$Q:P!LP?f]BI0&cj9I9O;'ecj"`n,rfg?=cCbDU`W;d/7oU6:M6X2Palq)
%7kl7:dcH;d!%h^(J?aL13_MBK6h$$I^o\^]Zo0m9"+qR65(^L;op4'SFZjY/`=uL->;RCp-#BAoms3$.SeGi-MO#H$<XfGfRV$4%
%B!j)T(^[Fd;b>9WRO(J3\9,SS?oGan38tG?<-$B^9a9KsA?&BF[#d4;aV4VTl+MX8am(ke8Ys^-]7cc'^ne0Nd\DhJT[MRB^!m^-
%7tE?2Uf`R4W!h"sZ3M"F+C>Y9E(YS<^.;8Q"URjF&_.C]68Z#6*:Q=GS&DtVlMG[7k$HWXOBe;e?lm/L/X\WeH"k[i2+jIU5:8$_
%P?cI$@*n6R0I1p\(<8#T9M3:(g54]ja&`\Gi[QQ<Aa1G@(6OmqXb@KiLlg+-8r%(q4ZK0p%[!g!BTW@fTdV3Z'1mb3Q?<Q/1cB@k
%UYHU31%p<5f/IOi[/^j2lh"bF_-9q[A?U_.$#0K@1]j@bl0KC4ih&Up;iT./>1(I6`E(.aLbs]Q1Fh:;?[<.rRn7'S-9OauiIi*m
%*W$R'bfk1"i6-F\dFoj2/#8fTm%Iq3!YJu9s3Ld61-q\'osd\0ARujs3eYcb.^C\4qUpaV=-j3M"RTd-OT#7d-Yqb(1)E&pH3Kl(
%^eBifM9/QOP:@/(797t[H8c6_#%ca2`1tP;;Z[rEBrW4`_*MpD_14lV@o)U$$j-W3>?)bQ\oc?d(Q9e&iP4^p'eoq%QVL;o*0o9^
%W^IE;m.A99Ns3D"IN[[CU3'_81a9iYPsUB2(Tc2n[%Y7>C,rD7WmrOWPR'Zf+d<)RSgeX%q:1?OAden*T4Y?.ekh=,Wle^4/UUs?
%%r`D"APdY1_Ds%*@bM3+C[-"H8UpSN2q<bKi!HKTV6+&YI23JmZs^(1[XbI.Y4PoNXe`I/,nQYVnKb)t4/5%9i:%=l:>gugo$."J
%oI?sK"R6d5^!i2t6VFb+\<87DP=;-<=ia[P52h9GU*df2c1$-,Z6U[f-G^_ILe][p7SOL:9j\F]<ZuKlDOjK/,QL\_;&FEH>"N+F
%[b!if2T+!t+&:s=Zk23g*WEo3=/n.qi8g-L3kI_nSrbN3p@o7+.WIS:WmtV>8g7T'OjrkOQr,kYf<Oo7b78F1kYrd_lX_0SEb2bm
%b]np1#,VX*#8hH9%[SN$ZNJEG/<F[.?<nak7`^mM1*O$#dY#epTL]=P=\TBt`K"BE]cq589O;=rNcPU]=S,t!NhbCGACbnC=j=XO
%K2pJWNjW386u-m"fe&$sTNVro?O\nM#)dh<:h@)\0BJ&j-&'/up/sZdF%TmSA#E#/0Vb'TTlh:Tk-pf'c'U)LX:1MWK0H_@_>"bA
%ArDPP/8Ae-B$2^o',%c6DYB5`O$ohg`E-"E"TTJg'p2,t.hs\5]h0o^2RYG]gt5+SF,$g\8HJo;WIPIj"=M:u:+_d>PR&ChDpGB9
%R*nPQUnS7L3]R49"YNP(A3&47S7Rd2C:C?M8U/lF<LMkIk;RDs&\8C^0*-VVa&LQRGnit4,SATe-36%Z#TA':/M^GjZ`$jP,I&af
%`g[Fk3,p*_$hO@l7OXK9(!2dmh_T$r@:0/_6t?iL5e%Yc6u-4a'rk=6d]+IPeG@<h(9J>&hFu><[)Y'E]rmYiM@$40.6O,d(m-9'
%qJJ$:2AhgW/bY`k*uXF%/Yoas`l$T<Z`tZCA/H.@QCLdMN_PG^r[%!jJWO/7_W/#k_LY\i'$?FOJ=1kkl:^J.K9YTXBGjf]]^@mP
%JX[O=TGa$W5`%4b8bJs&EBCsm)EWjO?Y]po!CVTR'$d@L,R$%&R+1F7W#0"td1;JfW#D6CXB44L2<"D[4*2j5DFr1C3F#G5#Vqf(
%@fdRpdB[AsFG5s9E22:t#Zhjg@r*+\/m80c;DR[MDYo"\MILfHXL+P'3N-f5B/I&>#8m6JAMc[ZC02>s?&[d$Y4%dSbOc&DRE;Mo
%\=&3&DGd9h@O/H.J?%A8^u0cT9A`f`8lNYC:+a:g1(gCgkUr=?8]*G6FlGCIC?Kq$Vcp3k`kdY7L6JfL;!bej%,@^)aC1&*K(BNO
%SC$nHQI(;(-C)f0<BOmJ.&iDf_o5NMAYe>\0?^P3:2q$u"/tLLil/Ee#GX8RXsKVNM?EDp)+Q%g#?);F^?^1+XVs:JL/&_(F'[5:
%&rm=7b-LW,9cOlMRQ4cX,V$lHjUt)ST$E^k8fZS-,jod$WPk-g6[Um=%p.C<XPDdE=q%.6Eef"qGj^MOI(W-c%`dlNb7Yt<3)U7%
%k.;oLa2\iFlb)37^d.g<9,laGPa440_dRB#k#]uM%LK+s2Pf;NdK9?'c5@+nJu*-"b4'63)kA]G2+p("K]2PD5u"uM$V,C#@X1J&
%mP,B@!>&`KkI*q'T94g@lXJtJEJ62](('B!.\+&Wd@F-g'3lbJXtbW_e$R*&&r!Y94eC&S(N/<q<haQo+-D@i9,-g(2%C%M:)"2\
%67.s-U2UZ90j;:;$3u%_q,BCN3#!eTW&HQln5b`aLN>K:mWKG-:(iR-qP_nVMK!)6+m!)cKSpOP/(p11S?[22TGr?!GTS3nme#Eh
%=IQV%K9M0QV)*/]<\tRUaMC.s$.O3=K;3oed(Z1X7it0a#]sZtE,?KObJXf!WiZDgIP?CqCH,ZKC2d!W3UCLcV$?,>E!T8NC2f2g
%@fj5=K24'T27PRA:?c&K#u'[BN:`SYb-BN5jp"?("mJh'Br$iKDC#Np>;kj+g<?QdUBftqO?GD`_+DuW076D'Nb7_51AJ[WP^pE#
%_%09f0C8#/jTd.K%A\:=K9K8M+j9W(&$EOo=oB35_7<BmoQCe!P>o_fXEu,sV]!$)^Cl3@O#>L\G(OZM`_=h8n:QoXR+0`Y+.U8G
%geXRVKVLuFrn.j9"*di:EoRC;",G4d_7;KDX-P^:i.,u@p,F:h0`-5?S+k,;c9sF1_MoY-fpiE]h9HOk^^oOHb7F#C.-K%$%uqEG
%Rgjgcdet(mpdu'W`JW/MK,u#uPg[*\keRSeTZV)tK+e;sQG:h"'=02iVS:K2@n?Ydh-^J3gmA6`Z1ESM`$8jGQ6.*iN=JD?#Bs^1
%#AV]__9o!bnJcpra1]'i?hqMM3+=J]Q6.)d,/Ro^+.O%.NNT;PK555g'$p?h4fNL<)Z8Nbe;EdT*h4KBg`3FTA!LQjFO5YMSQeX2
%]V,Q8@6l)[?`+.<15Ui/>[+j&is41J_XGJT^>>s_KBlGB50s/bqKhdRN?<QHK['e)T/nhl?$g*=7gllH&C0LUfu7'2#!FpJJrWO7
%7Lr8N:5\[u*o,l&'\2Ha]ok^nPo^n^.r1`bo\b8M'F=1"i5">/!nHPOEDGVMU)SDtcXOKN=*eg.];09\o\eem<Pn6n*ZS,1#fhoG
%S,g?6OW0`J/nj7c)*^)C9-Sk<*uljhmfl!9dJuYT+'*i01<<H?K-WZ@8VbE5ZJc%d_aj-jc4@'0[B0;al_PPLE&q^Wp$M\8,b3;R
%:lQQeoQ,pN^FMN.7R.7gN?=\$MkQClIW4^1b#!0B#C"s+TX9t+*5jbT[Qa;8@khC<o\]tpO>9mGb7BVFh9rYDK_%U)OI[L69,4^p
%R33IWh1@KF:(XS@S%]>`E/6s`A+#)H<LIX1Z@GA_*(#=e4$gA$bK&Vf#f9/e<+B&;_Qce8TPk+Q6.`(ud%);LoV/1jPp"i_3":&q
%+:,1+dr_DkYDX9u)g62qmE!]?jPYP_CG(5YSB6%!_OV"B9@hI+B*L"q=WTUYG]([)4nF8(^d9*Li7R!4\j6[pH]IiT'0HB%K`>_M
%i5CRZB4jY#f)3rJ+ZSI19XjD:i/Z"q0Q\X*E-=BipPf]RBuf"jWUk\I!^ZYIB0L8k#Pq8f&"F@C\j)JMJYPZCHeRt?=7/d!"s#\i
%$uVT^ft_=>(q&R"#G.;mO]OI1e-#<5%K)7Drc_"ZE\.66req8UCq/PEn'p6jkb=]\[M3io[bTT(2(:4<hFP/a`Kujg>;*s/D&BtV
%%,G=$;h++[!5od-,W17phd4G\r]!&m%:OR@4(%iV/FhsLW5+OLVaXcF'f[`TmYGISi1s&"j3tQS@C\ZfB.@k$]<+KZh!1,(,b57s
%Z'm_\1F@'qIrn1t@fcnB@9Yu9'0(nf!]-*R-?,F'WNJYIBX!)KR0]=0Vh12>;h:^[]0QSfq@5k3,&k1J.kWmu3,)<R/D@)=q4b[B
%2cS]dl2`B]WPE3L4/EK9'f`7>`9Q'Z1'kP.RI!W*XRH865\C-G`oP:.#b4SM,a%L_i&%6t"u-dBP?!gC7%FUR+\$4C:'=<W\?L3n
%-3EA-etbIp7,Xl4V3.u*!b_'45.L37dqYNVf6P.tkK*N"/Isg"fOjYEk5cr9)msVI!@R1VCK`VYi/C*(,$K^mE">d0BFc/'ZnQiT
%b6+moj3gsLE3tFdm8b9Ia!rh]1`IKT5*\clnUM8u=/,AU#Fsm1)Jh,LE,$9PHo<$bR"i3Pk(X*\'8QING8bEjW`gO6)]E[G+j:Q;
%1uNa]O5;c5E7bZ][Ft,$F6,e4AFP+2jF>W<m6'<?+kPh1#2G?,QjUGQjXmnmm%=C"Po8MrL'F0o,_]s1!N0AD)SAfIm`;d#c<.mP
%SXS<]=hr.oa[3*=$TRa@\-krB!G@Q/V67.TZXkl#@:]I`@q2@\!mZ!TWl8?HVq3#Ln8W"?B9`t#?t04-O-+6gY^eh'PuZ+#^r]9l
%7iDUlH>qiOW^[#LY$u/=Q3*S1GV-t$!Z\E48D2lL^n"@ej=LNp>H*KA"ZT_r/QAVJB+%>^[hRcmQ+Ute6kG2$;2FFP.DTZ`"Cq?V
%#<;TrYnP4[:>SVj*R,S^=9s]_%1[@-8$8p=i&h7V4E!g,BfVHm&$h*sr>LWgRiL@^l"&YeL'*t$O5A)IEe)(+,B_o%!/FBQdbW+J
%:8+DVmk!BjB%*;kB,5Fq9p^\Agi\46_#pjY[al`T%lg"0`b[cq%.nTOW6PJT<']-]2alSKCBggE&NIKu-hi?$SDI&K1^LM+U,-r=
%M84*eek9h(^sN691?6E"^o8DYe_>Ab24hM"1ELKl.iVRQ!EWrRAHCuJJEZ'["WXhnMLrYGc@dpL(2m<jR3^eH_u`\EN12VF(2tVI
%A]r"s=hkVA<C2qq!mXo5mN+QuJ.n$Dm$H4=hlM*IK*Ik),iZZ[)K=E(aqq3Ci2lr(f[cJ+[9Ac;f?=BcW_j"C-?(=1Obg1sJ]#o4
%?H*Ef328fNiTX%o^s[>>^WltB(1m0n0S-!eH"!6M*07>kj(B]XU3n3rmS)Q_1o+:+RDAVpg)CtXE(HhncdnN"0uW/**DGCM\<%,2
%_ZUG];=^7&"HIK]ep`5XS9\j4Uc#)'fsN-07,UUCo%8%o0S+"g(iZto'0,UZ#Y9.hE6!R[T'9C`>)KmsbD$@o[Vq+5V#kk"MMJiB
%JMY-#]?tMp^_Pe5RU<31bl"6QhGAbZ\#pQYCY<mY+J)=3m[]K9DQ1G)(Vui8Uan4-\*aG8\9A,[DlLP"BpDuNWPDq`f36<7'faRK
%i^-kK^tF'^@AO%gi6s@3:k9jEf5`CR5m<9:Dj?fK$66.AZ>>l`TE8a8='B\u.rT&UmdU`$3%MdHIbh!=O`IOm?$%Q8erf4QB.@k"
%Tdc7XEIkI/N&t$^12slp<mLH-$llHD>HW$u6dW6NIDZ3u6._gp>i=<;/?!W@o29Fn\\J7F)fpXOJYO`Tl$2:kf+;XuWPFXLc7KV4
%'f]C@;4FQ#0b1dM8#HE$B"mh])\k?XTrYD+!_6:<-8g6b!p;pD?AZH0bg>UY+Tf\SWTDTc^_+4ZSDBRJ_3:p0Yb;+G#6sE13YaUT
%i3@LPTE9lK.nnHl_!+pDc>Z8i2qrd6)_Q)P2dKXu^_u0@;HN#_7gggS[p7ir/,F]V>*_\(%XD/h"%NIZq_i9KN"08NltkVXHl*rr
%&,_IVs";saKDE<N1.gAE_[#UsGK8DOirdmCjZ\"1#7c/!8iIskr)/+T$gEc`S=,)Bo:jW`1T?m4*#h(\9]jdPl,X+TFHC5@0gl8N
%@594OL(BfT;)<IB!`6#B^[Zm4rR+L!WW0g1^fd?6:k-Xn:/_dspYZ./k`aD9n:?e=L:)jW5&g-Q?-C%hc7gbAi&Vsil\Qun5&`=\
%9c/!1Qpubs#9>e$4c/7/FPsZ,;sZRd3*VdJ]V,Gj,?S-rl+lft>-<Jf>^7/OO1:kcVh^'Xq`tJ40Rh8qV#uKg/i"3OFPuZK8[-t&
%^kiLSRC0AP!tD1c5W<N;BI8AP?iu0kXlNu_%GYr5Bnh=S2K1KSa,R'X%@l(BB-+t7#*-06jO<L4i/X;]PFBeL_!rJg'Y@cU#B3`h
%.u9,n*%`H/fT:Y/%M(b)_$,jT6OjbG30R7+H:A'u?q/=RAHGA..dI@$'6pjSd'c@#^]JS5.h=TXQ;CX$E+"3YN.Nhn37J`GZ%E1L
%<WCUQ*8o*8qUe\r2qpE(0Rs6=;;6Q;!:Et@OT!<%NYWWK@fU`.4e,L!1BTVXm$O-h$,C!2T\OHY!+%(JIc^T!jVAl0:B/S3$*8[e
%q_t$\Eo@r62sU00<SGR0_06*0eh-VTm%qRg.J7m3U=^i+i-e^b[O(p-cb?Kfhq[7\WB8,rN@ZRq\SXmP92ID'62HSDMOc&0-2hF3
%.;:j-2d2H?]T[fN"Tc4ekr5E)p#1Pq)kLZ2.)3Uq!Ln,Qpta+>#N7UVnJkXX45W!P`csuHNJ3:^8gjM=[d!Q0qaUQeX(PDhA@,$I
%AbsDN1GCVP^'W4:2<`9Vc"<i1(t1D_J,p+VDm[k&feRt7Ot*o*kSm9(E:&VI]/djr#0f)AQ:m#ab;]!]Q/-R0q8UPslUp],8-Lb4
%3l*a5hK:Ni2uMOWCkojq9d1QNhbNX"fTHbZ_sWLi0u5Y%aLs<RM1'J`DeP]c1qK+/)hCqnhfigR`GN`P4&^L$R3+/^^!T1?]g;&1
%*'"f$Cq.1+bb2`opI7gI<pm.f)X<#YV6hE?7[_2Xr6"C9KaR]u_sE@9$fnEJ@W+^h;"2hW]pil>Yp&gQGWJsk&L.Y@GQO*kLqSB:
%;_r?[]a=Z_o4B\''DF0!YKYikq,*NjAbJTt@_kgjKA)gi3-_R6eD=<Bp^r/4)[i53RUN&d`_&rQH;!Xb'9P17R(_2"8D--^H_["_
%G#3O\KgCp=m7kWtOd0M?p*PZU7"ESM%I8V.qSDP.$\T\r/[mZuUmf3Dm1!`X!>7B%^!WR>2]HXQKqNit\\3jWqrS-m2n9C(0s"/!
%'pH]uZGu<,CFC'oqTA5#dk%;[gm_ZUpp-'0dfa/,_M6hb5e,CKF`ME_LkY1sEc4I;"XROqEc3]RpfLSVDFO4Ad[f0_D?)FE[cH:?
%4nuIKHRh&o<c2h=-(Rn[1F3@d_EmS6KG*B"0PYMo'=deobj<S>$B+pGZSsq3RBqP!RfcZ,Its<DRkQhhhTkL_?W7n2Ao;O7/-3u2
%mHo^rKU(71IM,N</[[N'@&e=Dp-o/-YQqQp"!:/sA+jM@%Tf.Flj`i`GrQaTDd*)bfed;Zi!X'5m*+=HRr5c]`pCr*IkF$XfpeCB
%2#B2\hJaO$HG!1'_ndUE2Q4<SNl*@4=))Zh34c^lVtN#F1Tf0`"?pNWCoG$M&d)Z\:jWj%<*!t5p;WR6s5-_$"6jHWGYia^$g7h4
%R(^m>U7k?Kc-mH_;8eWd(=GZgM7nI$W?K]H]a<#3gC\$Dp*NDXPl+;CN>>e(40^^eHen%%6gRNPO4=?'fGcCK3b8kL1GItuf$2.i
%X@%!DXj#W?:Pa.)p84UW8@:N8H]rq*nJT@5NDONt:$&&AAk7pgfc+gI`f6*I1q:5u$t90P\\4sT\Q=Q+HW(gYlrJ"BZk.oG:jY"W
%R(K_IDK!aI/e<TiS(ZfHKemafU3_\W)S%fi.gBaMH_X"Y4?)?XS?QlVXm212BP$B#^?aUi$fLg<8iWb7X\m_iHS[<0d24f[DjKXM
%S=t"NPC.R/qfV#of#5JQ<c2h:Yf3`ohJc,1gSt^j2[h;oL3.0K%8m#0;L?kSY2&Y]VY6l=_<h"nmEM/MVQP)[n%2s'kr\RQ:aoY3
%Ncg&;<<H531*M5C02.0O*PTBK*&@.e&4ZpJ&33$G&6RM@35h$>hP%HFCDjRV@?I"E#D4feY`:da%I5G3_HI)$P3'M66F$+pM(HIo
%aFru3cm>FS!Ps_We;7f",D#?Ge]e,?XGEa)Ul\0cU"MUsBN]B%EQ?r%]%%#mK6/@4W-+g+@C#2<H]dWLhM9^bZ2g_`WrS)E72q,$
%C-dd;BtmDe@3D0o[VLD2XB*?Y`$Dtu&S]QRoo@Ei,V:q/=/bC"78>l#csjU0@6HOCKQ3cbI<]l&"OO<e=i!iuFg9@.`o=7cS-B;a
%.uo$F)"(e^MWeB:8>]57WB2]N<iXGW>M-3R*Jkiu$\cobnZ(M9!a-q"=gXtaGU_U(dVJpRX=*c+U/;9T$k<!*T;WdZbcOBnmZi=`
%iWc,HUlPZpq1JQ^;"+PW7XY:%AmHNX.B55`P;K34.B#iTUnse3qn]4g)D<`1B\#g2!3c^\,%?Ot_He/.'"])'@$*mQTr>a2"72[m
%]QQ-J"6Cc+VasiF]bHbI!NT69.`4&AXM*:bg@;7YZVE*4KX+/:O%),0JtrBMC[@pU(7=^Img1sb<3d-tAX*\7cF28\#f(,g-Wo04
%D\pQ;^lYU$4'%7@K\1U/TC>/Ys$d.pBQXGol+j#3n7Enn.57U>WH1kRd4S*b_apCAlN4#=1M%D3HD",de6PpEZ8i>:C"0g<5a8T'
%-a??,V%KEjj6!o`2QOGO@3f/JM`$tIl@C4K:_Fi(7!2O6=K\7L`2a1PSlcaCTEX12)T]c;:r"d%;#s8?W3u\#!=YHJN$Ri3"_9.u
%p8mWsPr*_DqQUh/%CnIX'3I=dYFW.[6-8bU$&k<MYd^nfR@GOZ6fh9;^`Qdr'7q97$/_E9(`g`Z4#C^r5DZ`Lof4M5pn:M]?j@1]
%'quem*Mf5ae&MdMVO:_SPj]VEU%+YSKMHim\*tc%(6Fq'\;MVh(0DS9F)GrNE(-h25\hOD5h$RF&s08kOimc*.>-h#X&M<GS1*<J
%@%BMQ+%d\F2[JB$*h357?+MG:)2F:p0l_rJXPs"eN0$)Kr)usQ.hEcBCPqqWG_+(0a6k5O#REqB%kq,(Fc\D#F*F9B0K=>,Bh#p)
%*jcd-,Vs+";M`=(N##$+lsq:c49-j_r%-`H("`qHIPaR1-[YuYm*W[,6FMsd)cge@)9<Z/PUXh7VJ]j;AXtoYg#ZOd'3K707mlRP
%O-spDh?WK@k#=WHR$;"S-<8gLIOUDt5Y$jl%0R9l)ot0f-b-]-Sr2<a;0i>Q@`U5:66K;7M8M^jXFfkf`mE-7L!h2<)Di,8Z'cn,
%OOsa$NIbZ06QIEc-LMDc_#^QqB-iHh"n#8X%WXLj</+ca]/3>\m7rq`L!;Bm7aD7&VoH^HEl\Q>5Y+<"16Ps`%PrjL\`WtjFHq$p
%p@8?p(<iK4k+hu7nJ\2n`&=41YZ9&h1>?bW<Lu.n?#IH3Q3;o_hF2/\>!cL!2[q8i*1K+>CFH*ZD8A#1oa)K^oSiNHlUE"rSugFh
%iMpZ?/JH3"7AdIEI#F<"@<llA:ZjKg76Y\:+nTQXrR]FpJ>&?VMAfP?;)e$rltmt4<&Xgj_PiY@%qFY]XmPcmm,0du#YcFP7KN-Q
%4$EYN"ktsLrp^<clRl"icH+XH%okrKJRAWSAV:[$@:fLIPBefL1:u_'k.LJb%rGi(#N9OJHSD*(ON<*/1iTXXDUA[>Kjk+6,)=XW
%&q\UKip&4O@Ti?O3X@'O,$tk1@2)?f`M>lL6gh$nB]dmQ0ZP"S$V4!-=Pg<.)@>8/AT;oZE(Q%Pq#KP+jHlRN@+c$cCP$5nIM@K-
%BZ]`^nXe!J122a_[t04gk'1Z0MjC5Gi5^/'TLZ,!hN0lA&*#5$#*E4PnX5)d(6Rdo6RQj=6E.2hdR`/^6fp4qD>U;Yh)cO%mHS;(
%fHq>lfK-HKC*rtke,=a5fUJ2B6t:#\]p4L&H>suN9c_t.kK8Y@PqC32F/M*f67?q79?_4TW3+_<!gSZ@5RU?>6`[>o-n57k5p0$+
%<7<JolnWZ;2oUIpUUPt>PBM]'/l6[jP=,D<a>+g.'Pm?7aLQQt>T]j5"JBX'I3+tZl-1Ksa.CHq"kd]`gep"Rfl!7ADB;YRF:HP5
%gLg&"9AaIm3T+Z(G(.fZ/9'qrJ?aj:_m:>dF.+A/NQ0$E^^nb$F47js2p>R`Gnf(bq1u,W`g8?IjbT5!1C<Us\Y1Ja3BRVUK[&0B
%8KDIbhJCq=Q;YSj@Z/hR#%Q<fLOkB]]%mOY3N]((%&qUBNPJ7$d)&I6Zu?NU'D&:kBkVms@,+*h)GHJ.Pg7*dmOeY:!dWK_Hob_1
%.D\3j\9#Mj!IP><P2+"\h?D4V>l!4Q=5=&.3mhPZ)A@MG`E53R26p5I:_)8S"QVaH2m1M%8KgE+fu$J)-5]?L<c$eK$tN;3J>!ue
%=:BnN`\+iJ15uYk5jUg)]*$h>W5b]<Xn8DPJ]"Bk>B.h<RK@0B=/g`S6^dk(GJ<[tGNminY7J.ta3ZCA`fl$u'M6&HF9<Xsi]LAc
%Ut,(e\YAC=9(89d9I#-R`\hNX.\00G4%<2hQY_DnP#U@2pOQU2(d?EZJf8dE$>OX=hdAFK7lm/%AmJgqjp&OH=;S'k3-:M<+j^ZO
%MWLcJ)/bki)f,TdX,U</j*&XcZB5&(C$]D82Xq^'dS3@+MDnrr0]o^>@UiCB+bAJOBQo\ZBJY#b`)$NI3b`_$N*.LGkVJo_L]i^>
%/B5kq9m0CsK2oT%+<%lgTtR-n5/+("Y1O_1'C3kVQ8H)EbMMDT>')tEh0h6cN@`F76kL#N._tku>d,mm/<J(M(gofA\>CFP'V.NI
%s$(jKef;_mA.-/q9`Lem`_8PHKJKupaO-2:Fnb9MWTB>TB@Jgt-A0+.L_1C4#YM5poj=6L*g)ku!!s!/<C,;;9;!N=fK;9D3Tm<7
%3Z:[=cV,K1Mb]<p*pb"?8Af=:q\#FfY1A.ibh;&[#DPf<g,jZsZLu06BdLqCG(H^PGsF"hE/RmifNAJ23e3acLh/jRh[9Q\ZDl!<
%B[c$8`uu=t-6]m-57enQL3DqA_R.3Z]l3I3/mto:#d5`FEXkDK]M7KT2Zdgt.u\W]glE$I`3?Q*"G5Z3#[U=Ee&Andi8gn[W[q)#
%_uPshFL\Ja87U6pc5HCV',&c>+UoH"4.ll)ZhbEneEEhfMZ&,QP!F2l1iDO@4QRe6aC[[>W?T0e9Humm$prY/H"m`8?`kW'2#nD\
%894P&FFroQp/Vb$C0!Z/[^Miio#tE1ha83q+Rr_4Q1pkFDtpnJFgStWOC!]P&A*\j3fGQ@f;NN$C]RGHQi0Ohb-4D"c@I(d(0@(T
%56s/OG]8VOXVkaC?L)5.Os(6aLnX9F%=,?h&8VU73R\@`:jSBV;.D!]4*c<ab?>4#<9JQ.?Wde]OTtb@Te"I?LFbS4N.\$6;DRGp
%/WBm9HP4A>K)ZnoHM/IiNA6:E)m43MpQ7P"fp+NL,n<5\hCauEQHVtDYM<f\(fZ5[*FK!moPK4!Gf0dFr)P^0Bb[V+4ij=\A/UKG
%3U1.JjlSYLj6)@sQ0XePpE56+'`o:Ie0kn&7!p+#[[(%eF1Y?E$Sbe=Z.9o@!gJeO*jGUIST-/bjCEs'eZVd9k1J4CDW28BS@]VY
%X8L+&mlG&2.&f(>,%37K&jd/"]+H$f:&R,MjMB^Us"_]rgE9M11jrO?@UoGd6X5[u';2.?d)<N8e-O:8"9gJ9A\f8lbd<@U[Xtt:
%=S6cGTlY;W\GY8Vp8iKeVgr1JfKjq>jp!$3E"\?%10?&54DZ%CAFVu9,Ct`MJD60PP=3dYAPS(N/"p]fKej$)P:#Kg+WQ1i1'I#J
%4mO!JM\n$rH_^+jN(eOF@Ol0N4t92g2JaI-Z!tMZKYC_cA6@^iH)>Zt6W2rGTiC;XE<sOZ+E_S1kl[*.H"b$KDi=/qLoDU,&g%3L
%n,T(#_GkUg_Y5^H5U3&E;ACYS2!19>D:UoY((1IMjIPd<#c2?'530amV%^k7+'0?\.g]m)dSdY`<,u0S"KP26LibAdQ+iGOZMLBO
%Od\r+G,t;.OAImQF2Mg<%#oL-$X1UBZC&Q681_1HFU3@MpWO"]9&LkkPB1f+IiTBTj6<_38:*Ua/BecRCp@bg_asinE0Nn)E<TlQ
%Tc=<X#nm1@pgImA_-<:,>6*[uW<6j!PrN6g5)(O!kEHq1Mm?%98V<jlR7Rg/iWp?4:Ilc5KfB(\(ne-iADkPNg58pA4b+cNMCT@(
%m'ULB5YKb27LO0TTO\D19["iKE,_&J)C:=g^r_2`o_qlBWCl%aLjBmAJ!o@1*l\k\4[h\S#j[M=D7I"7VgEG5>/@0"IdC:@ItB>)
%*WTK87`('M<sa#jUhMk5K$\*:#C7!h[F4ZP\)\tXPt_ppct&r>hfaScU3htb@`f6%A]PG$AW@@3T_8I\#eQF?RIZ&*`8[9)2J7Z-
%'Ja:?H"9u3&M@cD[:d?q/!uPa+ot@S".(m/D?2<)JRi"@.Gb?;2imY8eZ[7ilj%r0'D+iJ;e30=+<>VD,)2T+!u"t]58d]rc(u"!
%c3A7tL=*]kb4BcK:c'U,gCr,.-h`u@eg2ZFWDVnQb&JdGDmY>3:*ar6;Su#%$c7$dgL1G;"T#.a`%dg9Pq4UZP>40K[;CK4;3T]>
%k6d&`OdZQBS.-BFA3M+ep6JYkn3,@p:5B2^`6O#.8KWrd6K$QANe`B%pIU0Dlh:I8Os-Jf$e+'K+dnu2MC,%;Vc6p:ANsTa,9hU[
%<C%1S)$4&RR*I-\+!\&F',;J&#p:Bd"'$B(M'FBuPqYcu4lQ0XFRut.d"i@$TedF+NHB]tb`T\`;]0M9>7N>?`qRQoRtAZ)P%9f[
%qZH8,J%R_#'@&lV95gB"JW!uUPJd^[JRl/BK!W98#85["0m<Mt\m3r%D+XpT'1%^.1<V'+:.."e:n+K$h.i;m7lAR#Hj1V[]u3I,
%k/sg/(%U#V*L%\l=[$>tV%;I_qhjDJ&Ag0G\A@-(`Yc^P!"K"9!(!?0o1%)#*S<_&33dFj#?sin+_Ei2l6Z"+#fLOO9PsJGpB_+u
%K6WLudTFu(:"iX(/K+(IRUSP1H-=QROP!0u)jQ)V6/4SC.oJG?r8>;?r8PLo.Z%1CBe)ZZ';cQcll4^M1,!`6;)l)f&&;$U6YZ[#
%!+qp%b[\$:C7(3(`i5/?-$O"mK-V"UYe[&tR4_[JR@QplVdhmWFrG;ZD(/]c3(YIMd/\t@=>8'k&g`MD`9-END9l0`FkHB&%)?bG
%c\?H`o8F[8#)0\p(XcQDR'].=<_1l`._Sk@WMKTUbSg)@ilR\<Lot?=&*sZQ-j/aNjU1Y(-qQb_c&*WG*($c[#T;X-*p5.fRWZMA
%(`XcWif8"ietiVo!0f6WKr*rEjQhCo]CZ3f$!/.AP(pkuJc>(@h5derHD+B*%4F'0nBSAE#K^R`0dU5/3*'KF@UA*999s(n1)Ikg
%^6BR)UZ;S4i/#:k+9C9's!X0SlbjfbY0kE%9YNu*fa3qN!K^GHIDVo9D_<^[;ChCN9R17VLG:t,EHF(He7fgnUO7[CR)jQ),iF'k
%N'(.KF@)?rh'-l?_&87C!3_ZIAEZ=a$U\0jV%,ucJb<%k2<Uog+Ia>rL(?YRO<jcb!G)7T86c&@Hn-=Q@%@pP).1uQZsYu;I6e7^
%4:;H%`+pnT@Z</a"Z]!PW1Q&:1']0AC>cl7'J!L2!ldOCM8qGFG`Nu@5/`SY7pYk>4c`n^4Et1d4$iu\[ZbN:0+^KOEr:6E?!u?L
%L`&q-DC32'$oVr63,^'/'#Z7[/T)Z)!l3:/Z8.J.,-tgaB0#CR7e:5R4]%3pSrbg$*74>uTa@lC&pNq,?_XZ'dPj^&&BfVNW.JWE
%,ri[`Bf0Ekat@iN,?nK"WRTZ:,oFk]2E7C<F;+J%M'J]nkJ=n=2\2_.2hYt/@)!=:Unqu5!flH`==6^W1k5t<[LhLrMs:r989>V7
%'-$HNi=t9$4>2,JM:jql,k6++(E`j8g2A3R:BD[o:g;8GBLE50Zm/iWI)eKQDUks*RjT\81aLl?:<V%?2Eb^gE-On7%a]OL6eqW^
%C8-TCh*HEAr*B4F+@o$&6>+B&o,9/D/ZOI,$4o:PBAc%<UFN;WCncT6%9?'M.8<3Y]G0<b'!t0N0nfWC!&O7GBm_fE,\T]4-QK6V
%++VL0\t^eej>qNM:o/o\$P[I#JI[I"<mqQ:c1#7jFlLNEi;om+OqTX:(+B@X.5E$&/Y,(%C_)[qe-I@shV(Q'LuXrK)jl4^@t&C/
%dCkTCBgtksa>]hd/[ZcGH?gXE9df0=jNN\h6ARiNT59X6$42i-d4?%^s&=AkW:4DV!B)*+8'!$SHD#@00GHmXFrF>>j.i#k.1u$i
%D4#$0N?m69@sP`K&Lk]KDuIl_K:$V6To`,;_C6Lm<_dQgVee(fN"F&bcQS$.0-HY(,nL/jeKC\-L;t)OpoBZIFE)Qf$1EpVaD)3R
%SG\H=%a+r>n:J]r\'i9+&(@mPKi]cB.Lad+o.]VhL08o0+R%Oq2V';I3$`T/+oYtd.WTKS->0+fWE\jh-%L/abRNhn"FWmUXO"t>
%91n!j(io7K5c-)2=gURKY`]54J)GXlC,$'2XsC/hFub;JS>8?&Q;1N12<#9WdU$hs#9H^DjDD_@-JSqU0PtR#8A_XTX::[oT3'&M
%S19[1R5Y@1fuVC^*)m'SIOZGk0\6AD'*NF@.\q-Ai3j[2^<tJ]-tm`[_.QO#&@3_T^d1:h'LrC:<hf(Q8e*8KGmhh>*_;SOpbuX6
%^`-o)9rMKlcp*DO:,7^?&r[$7S;F;.ebBtqdni135t-qHJ1F.\+LPlC!1SMfL@KppWu.5"b7(g[8<s@8&m?[>=-g)q`)hLkL55FU
%0S/:ccqKBq_s%W5P,S2DXHS0&+-1O?_KHP_[1[#ZJL_\k1%>Xu#4NN9-;/NFT]9gf=C;?<Qh4.0$IAg:5"an^!XFab0#Q]g.BaNo
%&d)DPO9OJj'#Z+(/6HR#^)aa6,Z>+j(,J2VW6VR74$Z%d:"Y>I$kc,h`7h'(&Bh?`1fAg^@Yii2i\8c)6WCQ&8T;ZN,I%`BT`"km
%2UE@U`3bd%O138c<XMk/Ag!Fo0nQNW>$<8-%fsqJa,%DOp+2+b"2[%KpS=%"UXS".W!O/NMZ^MTq>p`PegW+%,Q`qq>Y2U>F;>?C
%cD+k*A"tHL[[]S@kHQREl$33o=Nq=c&`n@*N(NO?&P(l,EM$_s6o>hm&GT;ESp?P(Ql[MYi2O,L;L<7[&5m!Z8\m%]M3WZnP('RF
%"R^;b]JmD8e<n1mi69&3]I:HB/I"uOU?g7"6.2sIjH)mWZ)@P&(Dn>q0hEqtYuS#&MTLoq-^mOp\6P\"HKK%r>LMtr4THH%L6_4P
%7LQLH?r*('ilo1U))u]fCWFZG^_Of@YF35m/UdChI9:Th-Wd39k$p.QYm`IMV]_;cnA(bp6q+B:U=,H4\A48:!\`h-)u+[bDr)/8
%1O`*-)br0)oF'^m6OmNT9KV$P!(t2oa2KQbC.Y(MR"K%N$)55i0ks!j2R9a.m#]s5FUY'R7coS-N!l]lW42*d:9LBN."8\q/gZ(j
%,e]/"-S\j8bjXD9,jG\=71&]tj:s3Q+mFq%k_7S:cO6N-H=mff6[VB>+dFMa8;,k>E7NflA`#+37'&WaMBYe[$u0?V;b#bQS7uhE
%Qou9>%[C!U8e@+!ZFnP)=gs&2loeVo3@&KF6C'Pc\h'>j?kK:SKujDDiY8k$HC_IYKV-d%,Z8@hCT&ri!!J2<hu]RGE7E>j-4pp:
%A<%45fcX0RJlk.[Q8PE#;aR<;Js.i!P(Z8\_PbWI4sYg6O]t[4`&GK2h$>3;KQC';<\ZYW8d\-cnSLg[,T"o,,"HgSTY4lpL4lt!
%[a9]kXhZG]6HDO\=(&#eHDd"Bdci/rNWKF)l57]Z.Pag(W@@umC;RCiaT*h0i@2Veo(\!WIR<!D>C<m5$KqWJZimp5MJQ&=@1m@+
%Z\fmWan?A04.OHqL04r'Rgk>i(RZPp&k";I[Y)5`H_oMS._+OC##t[&OU2tYE\OqT3K92I:R8rAo)u=[:;G=mJl.OT+Is6#,T^k2
%SX6D0+"3`a$l%i[c3PYOEWe3VV&Yb.ZXC>O/4&F..[)A."=#,YY:#rDOt8AVlAXO2iK;[6QG&^Z7Gu>l<@t0h=.W:dKLj"6OsQSJ
%+dEd*R+qa&73IYA%r*S[6I]ge9;j%n+6mqS0?-UBC6Vc@f&.0ZRR(!^$j2%JOJdkj/ED9*$607qj:V)1fGZk<g<LrLj8q!g$3[LZ
%ICsJD&"Ll1M:V_MUV^3A<fmlnEigK9hNFJR$MR.'#_I[iQTQ6U`7DAqfn>$4s)8;W^4UBRYsMBr@aeF[bp@qU&GQ:)Qm?Y<bf7+[
%HPqE=#Z_k`0+u,'&6$rq<\(Or.l)2M!74\)O<@d7gp'+79(5JH>W`k<M*RMOD*X14[Q_R,aN>^#->iqr1p(^`?bf=8\?gu>[t;7`
%<,kPA2e("P!$OfQY!KK[?uVTm/jV3`.")``I(f^H\\uZ[>mhtJ\j8*EL-h.=K'0oQ&N'6\]YXq'Jn\>Bb6oR+`6@c75SHDc'c95&
%ASD9_JaUG)E[QoQ"C,`;+NQ>UKADBkOJH4F99JAfF5F<.(e1bB^*(?)BS)?8$>DO\:m#Cp,&'Oti/3W%Q3!Au?%LqWUK4XKPKkGN
%G&qU`!oT_9a?+-p9-4U58s=E;I.Kl9!P0$I4`Er"M63,MRG)N%`c-#G!u-qA0Lfes8N5BZneE%H@#V(.)`N18Z3R5tQAQWs@MA>9
%=F)BM5mCT%;%3?KnPCQ;+g$?6i@lN:6g305"c:?E]uDaX)U:,a_8'Q#BQ9fRJu_\.+&McJOphB^H*H5YU?Wd03`_>t-nq-jI%@"U
%"XFLZ;/?SOPEbq!Gie/tMRo]X.1/0U!=Uq.5_]cF"9:"(UdLl])(T+\np0^cK%-AgBlFk$'UZU3W%imT-_WOh$Z+)P,<UCt@s'"Q
%;ugdEJRP8u7J2u:!'Vn=%YEOU[*YpPCaN6fSA)p0j/15Hrb8>X;R'_?O>L9?(M37@l\*&M8;lM@^hnr+,tbbK\W%A)19aEu']/+3
%8;N$!<%]F+0GBDT4tTZV#[NP5rXK<4!3kGPKQ407(^ntZ`JdO,(=*6L`'@a$4Du4^A#JMp4Y%`0M'ZA_d9[`A8?HM0^hKq%W0d.+
%L`,QPI;/r7PhB6EA*J%X!,YfC*3m5Ghh?2Dp(8qEK([-b1MM?cKQA?G_4QDb/q=*FfLG!O'KPL>I9@lk-4)glRa+QjbLFUD16suK
%#aU7a'!%aE]u1gD-!6W:8OQ.N+Qj=@dRf6#E.B\9[i3q$@2Lr7@>Pj(\e%tus!V/(#tH0&kmX^3@c1Xt6UcnbKW'PF7=:gNT+iuc
%_!FP,8J$9u0K;8(j=9<&O,.J?PRCCkZaCX)'GQ0<:_*W7W\poA*C*$CJu"9C2/u8+,r5-oPaF<`r\SV>+e69pr'jQik\+PNj5?ar
%VnjQr9Q&4-!kO"HMO&OjSH,kefUZh*W]^X77B6t]4Wd-@GKGK7R.+pj:@&6U$jknG2>NUPdZu)8X[:];D")1i2R#hNg4e19oigAa
%M$6tnJ7fUYIP5Yr3"IOp=;3F!*:0oo0bH8L9l6Nl6V'-dB+]GZM.u6ZZ#'R9Uig%[?1+*SY04^%Ql\Qg0qduAP\D])5X7+FV;O`a
%H4-rK4@-FpM:6K\:3E"V_E-o)+?U5&q_lMd-JAR_ojFD,%A)FVf['U5VHRH^J[cR7O+H"!80/K6g#@OjoOoO6;]q\Qm@n"mlPLMq
%lOA:;52E!N4H)TpOITr5S2DqArm*\UKZ0)/^`tMFK9d*hT"Vq4:9Z]+s%p`?V\faC\MeioBRuFVe9D\)'gh%`3X[4\&^_M*D_Bo_
%INl@OXC?OoP&cG3A8?1@+VGH&aC.DtN?Un?Ga27n=DNYX)2XR;;hW^>-8'L:I"c>?`3G1Y$^X-jqF=#]"H\I&03-F1EgfGP$)Ab$
%AE@5ZefeqjP]A2Y4Kfb<Iaub;?D+R"!D\fZN%YWW6P0`ep+/KEZ(NZVHt$!"#gnKlU[R9_A?%oC0N.6,:*L4s3JFC@1Uq0`34+d?
%eK?/mL'\?EfM%;$B7;=R#SZB[iblUYkb:D$&^^apg6N/R+>Tmr'iU*J.L^O\8YdG=@Bu6=.lCEe#r,%0?So'`Yp)^aJ5=%&=%FSB
%7@".O&up'S<"eGKoI_a']!la<Ukb^&fb"eMkg/eG71u2s;7TP;Pm:"gMks$s+ICJh-5dhH#icL&\^SJZ,%_GkX:%p>Tk4t>7:b1]
%Z-XkMH?RW--)%/b.[uH/^-jL0M7ee%:/j\U@%;jj:4SBTI8FldiK#f,H<,hjd7I1A,J]U:5)g8)<^:0_paD2VPhCJ%,IAX_q&o5X
%.h)4B:/YDECQ%9p0Oneki!9Z&$,gYj/?&sb.p)ZLO%4TQ3&!bnY@2`mT=;+98>!egJ2P=t59lh>U*,Q6J6A;1H>j4/^@XCBa&m)=
%Vf-2_7?,i"X=36t\sKo--^]]OWBXeQ)aB@ZJ$!<%0eM3Chb3$2\DNscq[5uIK_`cG_4'a;DLbYZ0lrl[Go19Y/1E37(fIVL34=DC
%VG5Un&\F'@J#$7&V%XJ$A!q8mnMm8g*SuZPAq1PH;<M<jR>PtV85<dX<,-LUnEkg,k\pWY7*9'!1h^"giPfF<#r-*hjjpm$!'!7^
%'Y$H"'K"\Yi?^i<-[q%t1C;R9'&#lW4`bdD7#H1J.L$qippkh+-Y&EmPt.sLH]'.ABm0df2b53l]@AH4]bU.=Q#qDnh'@]\OVCUB
%(s(4F$4m'J'?i4,8N>9Pb6m@,-d5;(_O>4VP@Z6OX<$n4UqAsdMHNn0Pq#AQN.!^93c_<K;5HZ@-WHJPYmO):'4"8aP;%Y&1]lMX
%.K*(>5RrhhdP1UR$JUp>5g]*-ZoZlK+Yh)1eW3\G1UBg@I<r&=<fV:-ZWJoX&H)\=$mc49[kmQo&PrlR&f%a(F5@7kFk73Nh3>J*
%b)'>!3^B(U6T"A(jWNgk]:Kk`c3Z*B;$.)m>VW1><@5?j!3Kt!<&]o1S!"](6?/jk8JEoMba?;or>_^9VM,ms:tm,n*X5p^oo7IL
%&[INQ\PULhr_pZp)<A)M?]-S-A>[a,0a0"Y%g/OV0Qm.kp`-#=bfPkB37u5QRKt23%;;#R6!DFhU.S0rQXG5ufF,im":ScO+.m_g
%K4eCQ/ge,jJ3Eu(-O(E%EMMll4XD0#B<,^P11(X_6k(o[/?3gO-oE]ZOEAnc/&F$8f?+\ZV2X'tBW.$<$l_1/l&_-B=X%2g(dY#;
%p`,ZCdKp85(W)VA/.Q>U1@)eRkh8q@Lh*"15DcjiOi!&kBa8+FCmk,.X;WV?B?2PlS(a+*C7?JW(_Tk%oC,;k"jd>[4W(:\5il$c
%K69L!7]&:WQb[OU\.j<j\uL`ZJoPHMH6+BBOEuhp1$)H:gk=*0J80<P_BTNu%&lLuXq=?#8!Kf%l&?DX%ro`7;.a^iQJ$r6g]C!]
%5K`uU@?SLZ+H7^#.K'j<@#bTXUD9]\!63;t2'g(baB*q9TJf;.M"Mh#$O+Z)64?K=)j$B,n1a/nWBXKS8M9[.@tf>k<];^!)^DoT
%"D'p8/BRfAB+%\HQ2;Ki[ijnTe4krF-4?Cj6r(gmKVBYl>48!bUaTh6A!pVe)@rD$SLg=]'\<_.Pt38J-#]5"$q\L$#/N!apb>\N
%%q;I<.DMb<QP)=5#,,`UOMBM7;&SKR^I>gS6QX<$JV5(KOp7(K)iCSkd#rI3*2EQO,OGq&,$$cTcNf=,#ob4Q&\?D9jBrVoFGjs9
%6tf\2K9%6=/nVAM1'6[aPfP9+Vh?Ktlq^+Q9ZMCe6qKZ=jB<]_*IKC>k7%;Gb.%jUMr<1'-Pf<$5&p@[a\Vr)?j3;n]b,4$L9?mZ
%i7,fe3rS@#nN;*)6)oSEfe;<GTU&ed+B_pFU3L"!J]+a6\jW\M*;:@C$P3OK%31,9r1H.Q99O#lk8_D',a8liXcNqkDsEc]i%>8U
%H^Ek$%!%S23]+W@0tEQ(a@bSG#oZoW>:$52TcaelLg?oU-LN0LI'_fF7-pF3T3W<M66F]N!5=#=PEW5RI"b2q$,>'3eQXb!Uai>3
%JAdReTmXmq6Qa$8pU)^$0nP$+(pZWi=M#ssNe7[/[K7s[OQK;C'P?P7,Vr5GT!A,gF*@d"$;i)D2Gc0Ndk>TmQ\lXi/9W>kZD4g.
%b[/4:]Qd6ne2C'#$)q"q^*b?FDhVF#&pelb:1VJ`kJ/YOKh[SI<%B[Qnm2/m/gU#s1nnB!,/4KC66r%tl,J?pUM1l/pPAM9%;nV"
%3"_?A-R_B;`;k4M9W7hWc:4E/i`M(JK]=uFDN]oN^j[W!6n=!RNOR<\":bgcU][BBgd$7@YmlC;;%R8#>@-?$?e&A+`XpQj!AGi-
%+)GU3%9dn!&472P3Z7ilR4P0gNH@6bXcNNSC*F'\e"9Q0k(96s@jJU?d(?Y;)GOfCW>tGQnfoeCO\Xm$:#t,18i>W,2HE^OqD9$j
%l3PJL9.X_GouThM&6gMQ`kpVj%&eWn9GHXq`:R^ss#63Ka74[!L!Z,4>H)J(XPd4S,'qMH<$s@B8Sagb8hc>rI+`lrpBd(Y,()\\
%1fEcc<a\P"!mq0UC@\%M@A*7&Zkmt&W)=d,DBL$<'IZiO"e`#n&^NK=h&4:BXNr;J\<mDtZ!dtHZBptZ#/uFh-RN+*_c[Vl2ir2_
%7!m*^,I@qN\>5Wabl>Kp`*-E#\g7#c7-t>&*C2(3?<26V7NU-GKYOsk_]an<h:%L#`L>7F)Ft]61p!dF`##erO\lQic4q[c7l5bG
%_Lc>nMI>KP1Lna)bRAV=#r`9@3[0>]c(6bT_bQbYis%m73n]Y'/VK*%*7gQXTqN05TOW/A(Pl_[pOJPLAG@$:8)T[m)]WMDmPJiO
%=<3;u"lcWV!o<K8EX\5oPL)$>R1EN!,g;p]X.H`h0jS:CTogrfI"0ul-$02*#.2i]iKn0Ijn$nbU72a;"'Z'X_D9T_q2dbXa;.Ao
%.bm2POQ_<)>*%U/0Oc;<<%-F%.`u/,Pmg$5Pk-fgC?,rl\WEo_XI(JF2"L\f?(?NBco<J,-BTYVB1_D)e@f"9Q4_,sA2R?+;kh#_
%!8KV(h]qMLXDaD0f(1>S\/G[rP/RkZ$m[q=fG^h3nnUOFgXZmC4)j&MES<GsZGU,]O^Dm7f;j4Jq[/cf$=uaP6]$B6NF8,/90kqa
%Vra::0L(@".)^.#.,U]1W3"Q\e-<HhU!P!hQGKNgK-24G*HOshqjYlrYtCI&"ji'UUDI[)W<LekP@=`^J[Ya61EtZP:."?j<u.W%
%KP)`[0ZY9h8e#ka+HXBkHJ4aa8lm3hO[rNk0hc`o.u>(V1?^]p_'qAJ99o_$T=J*%p)38i<j>27ga>??>\UH2_E*B''lO.KBPk.T
%5[e-7Ho3Wn+_f$36b\e"CS35Y,@d=rO:(].-[r8;g's9qd?QgFn]").6kooM*M%F+flY*F7m]<N(*m$5Y1D4`Rg!Df<QI`c]`l<_
%nM7:VB`q?o&C]".7lia%^;6:rF>b=bP!)YcGbSU/.)C_r)O*r2S<8Jma20]7O27[VMLIjpe3_Z8!g1_bNBXdW?ePcaEfU2h+I/0`
%2FX\A<HJE^76j?W,&q8(;WXg"S"@^[=.iV!cDdo6ZlFl/N>8uB*:"9D#j*9J?9p8VLqsBi%$m^<Q-M3l.qpL:/CIad]!*,#O%Vd-
%-hA-Ih:`4P067\?V72&/;EtV7G2(+1'l08RjdNI&23e^S^6D*-m^Y%`ifctq2%oHUWO/Wt?7L"5c_5iM2B2,i=tfe(Z5*uQXiugp
%3'&-l%#B*.M1G#US'u'HDNl]"U0m,T:0GmK%Ftm8"c4Ik=]B1,i0]]Rih.!5lo';GB\HVo!<<p&ogh_@$]X,`M6.c@WVfl'.9!)]
%(55\^P>o^2e-(>ZJm:g3BG>7iSL0l/9dq5.Xq;Og(nh-V,@E$*VVX^pqZK(qT8lIEX&tBA[bE'!5Q\ns+A&D+$Rd/@%%bl=/6=XH
%#lIHuM4c;-R-76-79NO-*?b(_7gFPPbdO:",g]:ghfu%iN%i+ah\e^8AU4Mpf2uXB":\1[1k!uLij4imD*\MZK!J'&-G6[[6rl-l
%*7YfPo)X!0"V<_F7%:-B)GFj?6;rEb"tQs\e_RG5>3:ph_WNH2ZBk/4KS8NG^uDKg[02Sh]jhcBQ=\A6aeNBs6imYME"G])a=q*Q
%11I3'+XHN?3/fqm>AnAtDeJL(3cKe;#mX-PI7Q?E4Geqq++t'o[%'OTj:r9MQH)`eU=2lE;$]!@6gLPQ0U5ldaBlY'iP>QPRs8Cr
%`Tj7dRRgF<3;1]:BJ6?LGn:,dR;dHA</WkR`P*D*"R^;c]Q\'2a[Y@TWA&*(V,sML?mT_*iJI')E/'N0Q>o"3Jm\iLN/2G8^1Sj7
%1*W^2O0)'6,T+`^5`HIcS/*nS]&,;#BG;Z)NCrS5P`)4#K]#V^pRA>HQ8qYL`IVA:(Rc8ThUI>LeVC9O>>8@;i)YDEa[XBVJg$dn
%-_R+4(K=&eZGs[R,1J,DQhm/4EG\f;)hhn`U=bir6])F1K"Y^gK`MCF!F\_5&h'Elf[^$6nrUD(X9+tb\q!ZArXu#DP#>.rpQlOM
%@^;P^`A8"592!h;X!IlT))FkLTc%4@\$CI>A[k4Oa&pE9BT%Enr)8"KiRHfcjXD2IC5eN``<MGE?6`mH*k@af6md`-EPhX/aIX2]
%-*gqmd@q3]V&k,S(;3P["i6H>f77,(#mQ4EFNTd]RX0L-P#4_WaHD5hPHlBXTcQilc=8$&l!Gm]To;8B0>Uoi9%\-_J1os3Co8Uo
%Q]e"?=fk&86)hjEed]OLWFV*!GKi4'5bsU`91!L;CY`eUe=n=^[Bj2p2K75O+YsbO47kN+I,Wp2Ai%ni!@UDl?.-rnjXJkUnq8=G
%-:o2oJ4Inj18bfB/XC<R!h5MhPSW16.KE2!o7b'.bj=,X_)qokBF?L\Msq*;"*dr5Pct3nF+#S'M/^P/>t?A#iT`]!OY$Sq'M:.C
%*hlUX1L;]/KArkl2"e!D8fUap[.%a<h0R$l@j+e0B<ir#P[8R$X\$lO,_$%2:)i7p#Dc>o9YdRT\QGm7O_%0Z%qI,t>+m>9?bfld
%1%dDN4HEK'%dpO]AI9a@QJHE$H?ED^fdZ.cBp@pfA"i7')s21YNWgs?ZC\>9+>=eS8.Um@VLc$BAh(`U@Bl1V=2*4L7.'^oBJGOg
%dE9L'89lRb8h(u`&@f(#_JCk/4[afW>(_T/?),#f,hi?BL[6[UoP5<"bt=2.&ND]fK9g,*Ena\;/mH/bBEg$rjJWih&N_D(HHFL_
%G3Z;G$9E%U1Ts'd8q5paF@,Arom[$i@C7d+7qSJ'VrCRKR"XO2J;ELX91m,6K-jRE@W;S+?Mg[`_[doFRJb@a#A=7YplLW?'adO<
%[NT6Qd(1R`'>Tg*Q'i)B/rFf`Y/1qq]J."'LO%h;E('qXJjo)Y8`*p5f$#4\UJ.@5Udel(No\QD?]0'Y`1O2K4"PmnguhFae6M)<
%d==W,Mj4?#aT--mPRGda,VMtgg8K(eNT,Cb*Sa3:$o=lm0Tj6sU_]M%b9Ffugg,P!?3&Prk-JmX$L&g77N(-8pPlQeoViJ"V5o6&
%]HAG<9F][O]m)8_nAA-ce_X=6,QnHFI:jho+c$[Z5+*i-H^.91rO.JaMrGUVrIuT#q"gdS?bf<rP[R"<A^6(BS2J?BN,TqROI6"r
%]Tdtm,<dF[aASdW>/`&Z8c_'%(/:^&@C6Xo"`4G&e5.XM]SZItX]4SKpV,l;.?pG#lKMrh0M0][fF;"aDH4(*]:sp$VJ>N[9i>QA
%1#^K=:cm$[.,8!kBUleL:EhBk"YC"!$'72kFt\RXTT,?;1[o/n?kH9PCbZ]`m2$C,m-$;'a#@Tq:`qsfe1#h\,K<#*&';,AZjM\&
%3#mb)_$+g&ju/AD\X$Vi[A7Up!\'t6.P*b!I1XM#0"DFSN[g;S0\km"^^(%)pj)D#$\KK\#O#j0P&9ShV:LHU3$pb[L)T=:$/#SE
%#T:bKh8Z813Bd`\@Zn'0]gb/^N>*4VQCYHI9T0ssaemb43=m3ICS`Ar*aG!Nf0nQ>:95Z7G'F9?BITY9+sAI/ataX^Jn/p0*2T!5
%"[V14"rMU-A:80kF+Wp6p2VX1/e*Ah,Mbil;W1)sl6IMAdKl_kP3e2KLFh]-8$MceXW=.C.WeM7Q\c7gZiJp$FD)Mld>b(Y:44H#
%[icsn_f8381fFm@W*V:H8VT_Ued=;F>aU]Ng8^>:&g7e)L09ii;PrY\VX'4/%0TgK(iZ;G6GUU"Esn0YC>C0%C&6a-'CDkDp+ZLR
%]8c:$:_A4(aE+`REC2#,8IDR2`%pqjO]frhLu*t+XeSoMC^<msZtta*n7'HCe@#J&MKtr?kCc41M:)JTC0I`rKh%h;dF"[s;H$Y?
%5/^eRPq#B`QVbb''&%pR8,+ZeKm1h,8968KE,bET1'!Ud\[lUNTLA"c)'OXol!)6Ll?OH;'!,U4?Bu7T2\=W9?f!LANAsoPP-7.S
%TeVq*N5U"Xq\2FQ"CmiVN;telELigleB"i?q)Vn)H3k0Rnf'P7@tu:3o"Ra(1^l;f/I=(Ai[+7@$^UmNN$=+.'^[:GO3#O&W[=Ps
%Y[!YeP&I9EkR6WIZ8C%!4!g_>'MY1r"*5&V%#!\`UG-uk>[?TRUnaXD`((@<.-!'h6B2U2@K>J>T(<`@(%o$!<+0-&JiO^Cd=nQa
%@?6o[GPO[Hn7tqNgcqF1ZW\4I?TJD^U1jGh;JK>C9D1:t<iD-S-)V$OXcbo>Q9@].NF;k(Y3"&t.g66`ba_C8`<]pT;a$]f6];;q
%ZtifoQO9i;NI36*90=T^K,NgT7smnkB2DA[/qos^JNke)e`4)%I(.tpDS#ks*YJfp.`0[5MX_6#V#D3nj>!%),hp1O#QJ*a4\$R@
%'5b?JOb`^$;r*R]fV>`p<J!>c'H4:4%JfOU1Ipfa_N0J2RUBW$Ns?o[.a:T3Ne^n!25)D2911LS/*(q,]tq.D,"dE>X%J@aM8s'q
%b]p2t-#[F)`bTlm]Olj*:OJ#%Vo$@-D9ET\;W1cIDJ"S/YC9(e_W1?c2,(rB5cC+;<$NGH1gMR3PQhY,>3++m=n$*#a0$f+K+[3,
%gN2:m6opK6%QX#tpi<$>.27%&*()C)QiXD@ntJa,8!mX';%!=D:PAfJ*mrk2/b-bXf^E!UjL.5I*NIi8S2THBP@F#XWUIpJ%9BmR
%Hq1)e2_3*rFI4N;'-hfk$\<;#Gjbp/kZ:mTE_eIC;L.^>ls`$#8%a$ME?K:=(>_+TF4ek3(Z%6+qI/j)(#HR`"T5aWhEa5dn9W$!
%Q`R!d<78BhV4Or4hP&eYj?l;S]7d^_G[_u3,<?K52p-?";\JBW`cQDa;P:t5ZJFIF'Z%jkaR2SMV@W)<`E:*6'3=)'"-"N&^m40p
%bF3O*,Gr'_KnK^f(8<m#.`;(Dkft:Z$.jMI\hf.MgGE<Lb6N(,l5283iINRQ,7;m?LBHcBQ0E0/))C$)fZ'NINZUc_m_W@E9TkY.
%1"Dfqa=!o/q?tDnJD")8mX!!2lqYJ%JJYaV4q"2mQ0lis-^\Q4+kn$56:"l?mL1X<B73R"#DltVN9K^#Fs3iZQ0up/j?C-i\iY_%
%@]7Z0)1Wd<[dEnY%(Ydt4ZDH61[ol<Hsc^;J?m*sNllPNoH^47NToj2puG$.<p8rO'.)_,L%!<K7uKKW6bYXt9F2T/dbRd9!E?Kh
%grNI]1#!]KRL#Eel0\tqTc!eLdG5\+q!r7'FE`J8"`Vm*\iYNh%2(qHFE`K;O='UAGG[WE<4Y.^P4IN'Cj.;F-B<I^]-F<lfa3FM
%GD==o:bd[kNp(@+Yq'X7X:YKb`gH-'@9-p5<jFeSQ=4fO.bu+3Y(X8+dG4ip9a3rKmKc)p6eg)G&NUEp[UZm16fNC,9,G0$j+t*U
%<p8r[o1PY=l0aMZ,*kiF#Dj8k^l\!0Op!7gT'hUnBBrXOmSI3MHtn!_K)3^'YAAE966qWDM!^4Y'Vq0o[Q@qK10@H,mR1O/$Jh8/
%ktkHm]DbremS7*BQ?8g(ZsjDHH_J(;>>WE.Unn10C#:.8%%'Va^u/_248(C4=kW3OK,l4X;RSZG9]V-RZ/&iJ$*LhEh4ag:lGJnS
%c4V3,VU1.d%[kDtg+I2c^uCH+;IR2DF@3Hbb]X4n.+9KsZeYY?Om1,Em7tGB]2c:$Jk6;rT%8)d_G*.WL$d0i@OJN5FEb_bp#Qq"
%4%N&sF?SHN@4;WPh'(Spd("beT[;L,`/NVW,J#s%1'l0LTt:sE/hD*grN.<U3rhPP?X]Y?"'V0^`!Y<@FKM5/Np,o(R"]7Ld+q"V
%O\04ZGDG"4N,t9Pc4E?"G!4ZP+Z*k'.s,uimLBCV+qbl=&f,)=kjBRY9WQ$Sa6OQL.XZHmVhe).k.AMp-U=AZn'6/^]WTD$B=r98
%NJW>t$(9MooA+C3=m/l\mL0,u)mdD*#PCm\\&roMX]hV!M!rV3GFqQ@L$oL`O(24$iO^m"_4BH:oA(RW&RE_+#93baV[U]8E$Apa
%<T1O,5p0lV!284X-T*SfVE:KTMET?-(dO&R&U<_Oe$[T+d+iWT\[H.]K0eEicZ.Qk_G`Ch\3nCY8m3^^*GSnPr_s0k?nASbHGj`W
%O9t6i$b`*F^pa;^jG;Y&@OBl3H94Y+q8NfUSS?6@)U[;*m!,BWoQCE^"<h+gH92Ccb^;fsLB1fl['8<$mN=5t+h+4@UWb\\],gAV
%OlBB_m6V,m(NR-qA,KW(OnUK$_c_aAgmHh+<\Z$0/!D!t9OUrh,uIUr7q?UA6bsAV5tL**?t7ME-[2j7Hq7(h=2_6]a"St'1Z5:5
%&n^35',]V!:c1I^"U2(/Lp_CiI$a8:!M(K,&ltrD[Nj(h@45!@m4:7h[#0UX&!@o8c8&k;,AbhZf?Q/@'MM;=7n@"NO>4!\m*1Q[
%<?\e<*LT_^'k08WY/)h9Bh3&1n7R??.'FWoMEirX[54?d.op7D(.4R_f?P'Gm4kdb5+*ZsQ._1CMP2WSFe*n2$Zeh^FtB_1KC>5q
%"JJsYnH;Ju7sB]_8,EhF)-K%+M!YVC9\`#^[PJ?\`>)]@_]TYGSr+@O9:LbK,@3H:8@uP*g>N#TK\V:5cB.J0[4An5YjacZqeHY'
%+V'?M/%g%[aU2l\CIcPL-=3OV"/p)Y#e*-9B1eJ>V6r*I=GU6YCM,u/8X(H'4,E.uW3g`0jHeMked`;n<Z'6<_6b=-8YrhI6jmgq
%f$4j,W(Z0>#JQEA6_UnDN1q3%6>Hi'9uAMSCBo\.!]-[\,BbZYH;&*e^uuOAkU=#qe4[W<=mb,t@6D<1g/1qG&?E+j_6.0sd?rM1
%&?`U&4ft7U#(]Y<;e"ZOi\eI)VrjF;ak&#C*@(]A;crDqEFGVJ@C>,gaiIC_m:c/(5H:sA).M*a'iI-#<)Qm,WL]^611W6f[=_Qu
%LC:(%dEaN6.]FF7NLh\I;EIg6`!`Ob:Ac[BX/'q2$FhFbOP7Md(0>K![DOoR"`j#[WLY1qHsGX;K@HC;;q`*^,-INbc4GNVKG?s<
%6Nl`+pPa:jIZp5Q1YSOrNNgJ5)=8iLAhK$cP`Q0a0\TCPq7+:T#I?HoV(&=7al(R<a?N$]4,=c+Y*=+LWL(@tg)86L1YZS2BkJ9U
%BL>R0LZ9c*o.$XYY5p-6R+'>'5I'9,1GX]/3+\V$oXf3K$oaof_r3j9B*tK+nP8X-/#Ad[6t^:9..(udah,fJe..Dj"6FGpC'V"?
%,SjQFk_%G8(HbiJTLslAF$sdKZ%eU1ed`=$4tj9d"D)2\A]/A>Y9pu.iO)%j=9UqO[H$euC\e-_0J##VQUZ8fn14Y(NG._+!M*kt
%O4)`Z71tE[d+Xma@bO1Q4%Qull$?MpE?4bKG2+&SPT5h>@B(!P6:pPMYKpb=&ZHd/2<G-D;EK3M82XRAm0kdr>J!4:#F'X(0#U(k
%L]/$c`=])?M1m:[YhJ&:8[^.NG4=LR5^:LfLTabT4/K=eMLdbI$F--5$.uIKChJpJ@9-i!U);hP<f-3ODtkZh0sMbcP*YC;&DP%Y
%-Nn"7fT(=mKZP/FgT_NHa^BhT%^3rh3j'%Kd1JnRX?p_n5)Q"UF=_^t>A8&8M!\Sh=T[\"@QV)@8/>3^m9#iR`pjYG*@gl1po_PY
%E(@;:H!Z3WcE_[q,@3O<*P>2?:D[>!'V1GkU(Z4C7j<OtEC=UJZ$<>XZ^i80Rc\f<;iFO10npET3uYum]:R^$0Ga*1T%VC#S.Cq?
%LtPOn?pq(pAiimM:gK-Lm0JD=k4-<)8%0W>5_[mOnDdAe6Rt2%gl.QcQ\F*&&u+DcAihH2Vu(DRChHllJIYLg3s%L:%W'@*8"9^W
%25=W4T^2B`L"VK=:O:e.ZQ1JYg+N*CFt@h"]GWHYTmY(r-MGZ,6kB]/QRPJ`#`4X=Do?H^"<uh1(1oYfI$)(L0\[2]801!+[Nc4`
%\O6h5*G]f=`a61Bn/\XX(_4+D=RXhoT%X[<?18_%e99n"iV4+%4-;q_;qphCOUS5V#j!;HUIoAn'JeY6)H,<US4J4/b]_&k(T,Nq
%Cr[_C3P,`gm4]HQ.gr\S:lD-PB=>]8=E@t]4/B3ljEiGrG'kaB;dMP]cc`%"n_15dNTO$q[3OHbh=63ON_E@kL(Ua4;-\r4>+"^@
%/?Y5e[H\D]=hI8ACr_`O+i*,'o13URs/i3-P635VB9_,1F>chX.b&Ve.:??PLt[lf*JHpc0S]opbK<p5[hF(hcE32_!<e*62O3&m
%W4(]9hJUjsE0j)U]kcg;jMb']Lu+.o>ASGU\!'S+;HA**kX?;G.9RE(8Vibh<nQe1@78kbYhP:rLhO(=H98E984&lqgQ?_.Pu<u=
%)1,nZN9KYRQL<7@a)l/<rH/Dp^"n!-+21[G.(rpcO?_k,Iem.?h4H<,lMVD"#ep2qlLM"2U79r:B?sP+]_iq&cJUW'Idk;qr[u=]
%Nj%?RI9iK<d20uu(](U0fDOUFB(>,@+#JmoJ,\qiG9;9A(8&=W?]EFq/\_/eJ,@"VVuP&JT,2tHq;OX=X'**ZpO2r3LEAX:n;0T$
%#T*/PYcV#ordl>tS+frDmX?m:<rUi"?7[1^hh13VI,O;JkXur?:Qjag!Y*[4%H)ls%;B3X0H;4l5`[..]D2*K/RP4oh$R3DkR5..
%q8gR3++E=;.^-;iI\hhLMq(=sI+);e%(bCL.c9_2nupa>[hQC.nopW<GohrX`3bqAVT]`qqb4hO)d?90p(<3F0?/$SItJC6(Suss
%Mm,D(`Khl9edQ<3YL.ib2?>X&q3e9j)kn%3pMsu"7o:C!Pm(6;]20FgKc=[SfJ&aFFCRekbTIt3ndSU%h[fqD[[6$rd*6i[M6(S[
%>\YNPSNX:*oJ<Lpd(O3:j/$d8m:0+u*s2kUDKn<tSJ4jhUeW1GmYun[O6Pc8I8#g@a0gt*\UKJLCS[:iGB#c9*0N@TO+1Zupg^=O
%m:/JdhF=ibQ^:4U=Htt)7c;HO0pC^/%"#$nNQRir1g\/i]C,]JH$OG8I(>me)IVN)(]X1<_DHK(&<86K*NK&fU2p?"p"R:e;85KZ
%:\gWB:Pbe584D_-mm#]MGF$#Cn:Ua;-1WbT,AY4.nO[!5VXt(uDiGK/YM?)aU1AAK?<H:]lMaje5-Xr;qPP%Tb-RWabcO$4jdVhN
%E5X_b[Yj/2s6mi9W\$#o0)tP/VTWW_%#6>C8$MC\p/p@0T$XqV#EL'R^Xu8o.WSNDPcLiurT_ac6.#Ys@OrVG%O_<.nDU^3BZ%0i
%QiV!K0(T"p_\)hDpueb?jF&RXe&X2Wq=hZ%q<U4.lGF,rY!9hrrqP6o?[QkdEljro<r">^qIK-D5;1;8o.Q`t&%k+'rnYii/^<[!
%gg?\T??>u>m/5u<;N:j&naTs>Du*i#?T5a4=n7n$jb`O]KCd%NU7Y3+hs".EQY/Oq^=dNIF=Jre?ViBQj,TQaV(r"?d#NVDG8#Fn
%d"GbLf7^3ns*K$;F+!ZKnn%g=j/[#[5%r=oY)pD*T&%&Md'h?P]5$H7V=X<3bF@)sR\\R&W\L.Fot+#Ghn2/KcJ76OZ^2?ZK8]^g
%m>L^5-T4Ih\@WQk5C'm=oC_[(hCUBVVl[q(lZY552t*oa^UnL;bI?rcV^VI`iNAVZmr$>1]8J=<Dbbab:=1W1Mg%0Ln':M]=l.so
%\a.OQeVEUh6'k[1gmm2jDGu1?k.KeuIlf`a1g$NR-RtU&/MOZAi9ouJq7!s?D=HMnO2F_IkaSVsf;Hg,>bAZSI<IY[$b2_4"^LK-
%RQJ.:VE`)fYe+\let*p>j6Fn[qW-f(H9tj496\$TSmPd9\U&UG1MsZbdT=eS]__dprbVCFn]?0CgUhORI$C+]Eq<.GgJQ8B8%Ibq
%_Kg;gamHu;DSg3Q\<G^Kl]_5Qk?hJb]q*Jio3#rpbKX\1q(+IsjX(h?r^i[BT%PK1R[_la4[77eRokGedQ(Y5ZonBNouYCXTBFR$
%g%p!lHNG/dKHn=fS!Ta!Ilc'Fk6Y2OnFBkmlhg9tgNKT(H#hZ9(%@QRGAlB1SQm4SDr#lsbnHu/b:.efb8kIu;q`p:MgDqO4_i^A
%fR*".p$1)^jioBXiIKPVQYbDBY4;mu*H0h@^H+A\IWKgU5/e[$^3j#2m2RH:Z4p*<cEFDNmH<*UcXWaKo9X0.Pj;qHn>i#Jp<E1#
%bBM^lboqCM-eR3foXj^YlfV?9Df8B'VmL4;QCYFeRGP_DrU\:ajml^elu+o2"%PNh2pI">qVMUMo"R7KgP8A&fQRj[R5Po2I2'<#
%0tt4[]=`DDc,94pa8:g6FK*"$rUh:mT#hqthJ]+^oPj`2@flNjeILujF2'-D^1i*(L>%\e(<_b#>UpJr[NDt=5XoV[HYkJ:kbb`'
%mIrSVCZhW*B%Qq$dg;2p@u&t=4n7V0m,mu[nn-%[*7WhiIWk>5ak>5Yik.8mjrsL`T&0>mP$JR]kKE05QKZGC[!&<"[&5o*O89T4
%QHu)_Ze:0nTf)`86CTeWH_0<i4"8l;:Fh^pq:4$knb$qu^D"J-:Hac\*).jJ^-6gfp28#p/JmjKXSGi$Z<j,nT1fPC+4SDK_S@-b
%9QnQ(HXQgBB_LT=opaQ7k>slAfQ$ZT)"P&`fW;aZ<-^X'1;G?(5-shVD2pqY+d_g-kcF5#`/G1=IIEh$j09Bp!GB5D)MWZI(sNcd
%l9MEI^Rnsq*m14LOE3S:p>\5`+1;&o]:]XFj#M(/Jo1<8_[/6/p0tL"(JeKZS[:0G5AT?W$.J0IG0DCp\W=2Q8L(s@&.X*eqW.3f
%H2c(ZI!Icthm.^SY1iX7KLk)#gUDXTNd$u=cJH8q5<3"U/2(p*5C%=3>>DLQIhlfaRaI1?O"#RK@eZ)ppKEF?rU)MY%<X@>rSf(e
%DF->^+H?h.7cmMulK9RarVX+Ofl-gIBe8t+WD=ri4\35H$3$!<;.3BAoAnA!-6uPr?X6@IUuGst)TrFSH#kiS+1g03)k(W0f['j3
%:8TJS?b(&U9fYGM>b4X1+[8+M5Q1Lp8h0>gd[eXf$01Vt$=]*%[B!nE06mc5].GB`?_6)DrA8))qFc%_Wg!%H:O\]c5^Chh3Ot`k
%4iru$C=9/>.?q$]cHiDb\t8An0pbt.;l1NoT\nRgfJ8n;K8Xs(X9hq_Y^,?l?a(Dl[r?`n:/;WQQY.+u`oW8Bo`\+kR-e%F1K!l*
%J9LdR1/Xo*k"shL#FpW+Bc-Pl@6A8H^sf3GMD>@^CX,B%]lX!@kFtXQ;2;IM*-a*Y"Olp,E`&FH7QP6pm!gY1ku5_nRF7H_(M1l\
%q(6cZ-^fm%IL!D3PEa/FmnRpVb+9XjVMr`m=O`+tM_\utp3io)eQe?fVj*)pV(mb2l5qcRF,2h6PK*/7>%<n/H._&#P;9f5OZ5JA
%NPcWi8,\<NI_h5b0DtIGhgIsVQ1#dH6Ze.]f+a;'Tcj:r2/qp&7fD#>@_El+bcKFaUY"4&Y>+54=g-(rD:WJ-U"B9cSL(VQ2OeLZ
%XO`])UpF*k[G(Sdg2*k8`nINEB!(c+[+[2Xo\C#:g\]PJ'>!,RL1CfE!&uX,q_+^(0;AhZ0JB2H)3*cPBGP#C2PN&)lU_D>K55[B
%Oo7IgP-PGmlKk.do<6G8Iedjd237VmQd79k/mk/TDWe#>AO=(5T%n]O$(bUFmB23?$"9O?I02<j]:3k<==@e(!6nn"4)3:Z"@K_+
%?<h@7r>?#T0>LEP17B6u$"Z&1Ddbi7c,,/3mq.^^s%32Ms7_`TMoF`+\ErVdEZ`5dI5?kS(/a%/E7!E8IdSJUnUjEmT@TOi@iGA2
%&')C;rd..rp:dDOCR77Nn7X`q+'07sY28;^pm:HXl)A$hcZZ8nSsS"KU_]?U-i.i*MYV7I$YG".o#GT%V,830%Sc*mD:k/s1hqZt
%mr@"2c;>P)U$/KYfc;FZqKot9Sm7oD]Y7M)9\J\AG)q"rnAQc[8KM=`igsXA=8L1,IWPF2NrRtFQ)"-C%Y+fYD(a0)ha<5"5"RAc
%3W?Y(6$)tu;$Lcqs3C/l?,qG/4X'rDRnkA7P&nik:L-85mb!t<^2qMBNqqPd/tHC8T"TICmd9T@eR^XQ/uQpu[6&PDF\c:&hb40!
%+'lR\<rK<d5JR'jm\ZPIrUBY1?h!CrYbDe7[sGs;XG.%]r8%%HHk)Q*DWAq7>kdX_:92S8$#N:u>;U]JAe3S]+a]`mHDZUk4_1mS
%D"`sM2;JBKp@-mK@aT\r_tA%qq+8"-Q_3>uq!<d::OY@:3a^`kEkQkrajp(+jjps8lp'5.jN[mHk41Y7D5+dZE:(q/iA@6&-i\O:
%na:!.5Mp."Pq.(FVYTS;NeeLu-9KIHq+M8:03#%ojL!7UkR%,-bj9`0CZiUi2p9ZdP[$FVjhQo)"")5QD>?=7Z0Smcos3#LrR4!g
%A8CmF%IA#$*A=bZATk`1NgJGh1-8fSa33go\T?MZRme;Ml@kr3ATk`QnHj;\]\LQtZ9/$TFRjhQ`e!cA*dA1KK64:Qr8)cGSm"SM
%P=(gaFI1B-2:Gud9hYQnR)(-CUCI)12DG@hA)G*LSf74>oYe?>h\Vn9d_tt7buZ9*>Q*s\k.&G=D;H9,@iY2jF*n<c9[i[ahX?Bs
%49<cTj0%S#N55(m&=Dl?Xu#q&N4u["C&5HX.Ji3"aig`WB9J^]<g>lMF_\)%h]%d;i60e$&4O=gVF*k19`No(e=+g?$#HZTBYTnS
%hJ9<q=0LI5Dm1._QS0_dj?m/C?a>[+a"tO.N:,.W%.)`i4CT/gE!Bl;TcLuVc+)nCm[g,UQd[^Fl@lk(nXc.&TfH%FW#]&<di's[
%L>&=-p%p`F)a@p0r-\3Y;VImP[sL?Z%(?)Pr#"hfa#K_Jc,'93dM)+[9PME2a4T.1m\-cYfoIlb1%oHpAj=<%a#FVp`p_rtM%eUf
%aeUbiVg^fkIGiVAh4unL9u%M>roEJ;ce$A?H+1FKSRQQ@>ed>JSPF,J4=PfMbBFb0T&-"81oZ:WGk%pTp$2B!J&;!t=(bH(*9=gq
%)ce&q,<1<oDU*,p[lN24mLELr\$PZt__o#OT3'N@=8Pc2BP>P#nETl8@Z%S1bBDL#$#CqI=&ZKJea?W2,ghceYb\B1R_b..AY<Y>
%Ug#5&*e5P23FFrt<mpE+5PK^<H7[+_hqhXgs6`#DojKlb-X!/?Idipp:Mt$mW,QU?Y1iafH-MAt.@uJGQ1-Z-0mfM[25LV#ZI^.B
%hkr&s_b'Re%?^+fec5Z04A3pro5pPn2gM?oO?7nXDU-(Dj)=?H(<jMf5Ap,4n'XB_n?^n,[4n68k0r+5R[[)oqf*==:NQ,ADEc>$
%HCC=BNd:K!\Ht4uo3lMY%W`9flJN.nF)'6QSD.,a0H]K?j4o$PgX"nbGZ)SmBBBL?kb^4H518i9O`&V<3Lh>MIp?9mr8IK_b5Uq\
%cZ;mA=^o7AB*Mo!rRl:%!W@Sr^`>P?`/Ka;j%::6Y/CehpN2YO_Z466`Z'/o%6:++rjV@B:JQE;A0I\J2^bM92o#:F,]EA1RpXI=
%\-_i>?-U!<N6;I4N[D3t:mTM$1%>`o'ho^)Vmu'jcFo_Q1JS1Me_Ur&nbLY^D,6`V:\cE2?X8i@HcddGoo<<P\B,.Yhjg93135od
%n#BAP^Rg*HE3=<GcYhLTL5fEN@9;icO@f$:h=[h4e)f(f)dbcN@"204-M,\-be>p)EVG;O]\<aK6d,*![u'P3_6lAZ!o*p$Eq6tX
%([i]iBBkboC(HU%%PW/LbC'0QN&JP2C!l$,53@Vs$,"VZn0"jDfeSpHK,s72HSP.6N--i5&5a?pO#,5\/N[b*KMB4/m@XCRk3?u4
%Y6O^0bXTur'Kr0f1ttD/rZU1_)Eqi0kaoHWHbRPGH-1L%_1-POBQeR6n'Fb\aFB_c@"-niHC<39D/oMO)uP/o@2h2MW"!XJ:B`t#
%]4TOsZg5<cl/]<KpZ(]A^3F[HG4YQ>3Jhq<T_?FtZ^\-ncF+c;kKS"-(#$;\m`.<RqrTkL*;4f%S?Ad`IUBbN$$b;GpOCKeDYM.<
%oH;IjKDTEU4H>RhSFLjRY;jT@n['^ST/+(GS[^*R)/Pm)he$8j)49VRQI;MT5F[,%P.O5G5>E*/EoA0T`4b'>rfZ`!HV5.++_pb0
%PPhos0IZZqJ\+(uSR5ZPITs_`>>743KC>d+HoujHgb.4*_.."<HO:l5cR,0Ip)YO?n[qOWC!N'[;*F7u=8r;R9\dNVH]h=p!.lLm
%0#8$k"H:dd*Y"8.8H_Wq?u5OC-($.JkQbft%gQi92;t72U4YD'T@1`:\b>Ekjn57lXrkcRF,3+j]9qOA^H),hI/350rK!_SG;\+P
%Lo9@oqX_>Be#s9[N?#o+Z^@ZDiCpSm*9K(6ZSFV<=a%I,j:EAP:_N]8l]]N$YGO!&m,=JLT2i5l7bYOk6"\0X/nUU^dr$c%g%DUa
%FI;Xml1t.&_Kk&73i?(D:5\-XIDJ'<OT+@j^RF;s5@)")A4VpgLq`cGlLM"R'OhJ6;u,tSLU51_Da+*WM`9`Xr8flP>^V$DT"cQ^
%q:3fL(X#l=J,$6NI/;e,c/RKM5Q'GFq57ACM1:fWT5T4qhu7Qnl+aRkkCmUcT.g38^RE-bI.t*WJ,$jd(qTF^gTFb&D&85$cn-jm
%DN-`8?"\J'QJ$N4n^?'37j`@m/@=eAa;:H=ra+qsr[HO>n=_Q^I;&Z[,3/VFG"59]`6kE`?[q3'3.1`kgja,>d(WBCm=5,o#KP_s
%hrN,RCJ:C^rdK]tI_#74qW-a@2X(u8n+b4tUS]c*[>X1gKk*9'7&qQi1qqF)OFJA80m332-h$j)BB:fC!F>[ZIq`e#C>6^I*eIJg
%K&^@$lG$e=oCW\ic>R_HR"-8PPAIkH8$jj4,5BOGVWJu3geRd/#Jp_Pq"A5\fXWZf=Vmp@S]`[h@WZ!+QfcS2K6:[tG4p"Almg;O
%mFr0g_hXsr_hQI>pL@Oj(YI]CQp>H5*!h>g+,Kf4m2nB&e6;b@rI;i^I^[rnWUHG0p`n7tfSf:B<+"mNXD:jij3Odc-68osA1a%$
%[[l=&4atbk0cf@7O06^UHgQptiHTJBqPVnWp.\_/rU\:)nq+4>?iU,a#Ci(Oo'OU25A1iTrF,6`Ir(EJ1OZ.c#qsUTc/gCE^F1+F
%+aT]7D0H\R0f"bAAPE26I_R[`^C*O\Qu4I^EOb;7fJJsPm$<;Ndo)I=[B6_-oMB<\i@%ma%55[_ZCJni;0#7*<pk$u\7EL>Bq)Q'
%a!Sr-]-A75^Q<*j:62lfK@@Xt1o!]Fes>('%Sp0W@I>V3)nD&*2:aeT<#tqF!Doo-8^k*H%p>$^VDD%\q<fJoT9/`99,OC'4_O=%
%`Rlf7[<Vd^0V5]7aEed@cV2CeY-C$<`jQpqOG0BJMf82,0Nft3T0M)NUZdZoHuGUg+`WrmH+>;d2<O0#^\<!DH[V4qCr/M4q0J5e
%hchu2hpHks;&X;clRQE82XM<QIu)5+O.+/9Zh[09Y>A@>\Y6GdOLsYr)O]4i,9*?8*(D[WK/Bgu3&gFMj4^SCT!,<!g]]<ND'a7f
%@\Ab*^"8\f2'=YW)S(ds7s2^B>MBY[mYZZ21DXc!(Yd`#*AsK!8$0ZKbf_H0X0]m6B'+!?2O8KNB>/TBT<d$a/E\lSW:AC+H.d=G
%b6P-Chru^+>B]MoClFn;5(?Cmo#s"_b:@1AB'6;PV>MBQNjAZ05I<>`,j)(<ifW?`bG164,2]"W+V+`8B[5s,;`SZ]7!Xo5^,NHF
%qW.s+.C[&L\X,=_ht+P%PM_jBH^bpi#C-H"?;fgOr@d'i_oBsr3;"r^2/610:0jCL9`+8Kjl5[nP;g\("]#SW`+:WZ^Y?>$fG.n=
%e'>5,=CB0u.+?/ifZ@c]C_c2hh90l#AV5e;1[bUrTpWXoL5QF<0+p.28"n03e`b/gf!9isRE=$FQNcTHjfPV`]El\ab83Ze0aiUs
%MKq#9fLD5Tm;KMcnc6`.5@/-se5!T5Um@dIkLWS>'(JD9fjpZAMnNT(d29DRs5,J!I@>)4SQQPj!Ou^O74pOJjgEf^\R@`cm,cmX
%^FQ?:It^U6U+4Gl0@0KV[mtB-#&(9P4&oZXH7J&@o6EF7@^DH]:^D=m=H(sg>H')gDHg/-H*_\iQ^IC5q:=S_Dp>U;Rqp[9ZSKg`
%4LJsOa;lcT?d[]?Rp^20SK4p\l:03konMHB.q7\!OXCh<G-Ql+EW;+Pi]Nds/([#T`>p9rrmThNeML7R/(:=tjS^^7olcI_>bd&.
%pq<%5q(f^672t>%0GY<CFM.94kg^H4@!,F-X3cp!j[$to^M=)RL#_2h:J]kRI!p.dkK[$aHDcJeJF=COYH6+A5iM*I?Mo*%i.l^(
%bo>hCQac;mb=A+>RZ)F/?G0H$>'N-!0NIK;5b.6:gVkLVI)n3cdu2gB:_#JrfU7d\:ki;Ld7JD(J/t-[_lteo\/[&,N$#>o4F"s/
%[PjMla2_7_k;3[c=(hP<Sq"/\I^M;O&QdQ`3OsN_^2>'0ITG\"%/8;oc->hUo'>BJB5_^kfbJueT"P!PG2X,60eI%qa'UJqcD>%V
%^E,P4qr[fMn?@!6roO"Cjo8QaU5uSF0*JfRp!)Dpc(KX\U.[mOs75UEV7L@/lj()]a80E8MQ5T]?_ViH2`V%+J+r['FS5sbrkR2/
%3;WfMSj-&s="F9cAs5H`g$B5c%`BHV2Z!T/I0>%mrN6$L;>kMp(/=>BfhMI]0[1[V#QDO9^NY;pE6EUI*uM%CcodIU0`5[8@,0`P
%/A@%)5LAlI+6Y*L"79WK@/+U:J^q5qf)9V<<52ZVp]K%uB=lEtdN.PO4#"TIm_HrJ4eDLRH3:3$d*BA@?gS4XRs]d!p'&aU^^'H7
%EbVWC2mS@#rH6-@@BOd&n$_e4G4b2c_gQ(V,90u00GQOh#FDnK3;&.(XN&2>cp.bSa)qJs"N88[fdtE@hmfcF<UL*4mttZk%(A8"
%5Fpu[B_')"WEeZAZ8AioBY$qlc3L8CHO/,n9^L>R:5*tKo"))nX?Psm[$HTt@#&FjKY0qJG-(#K#2.[;7QTs=E$4</Mg9#pcH,S%
%"fd.OPtg8m?rU*6$h#&/5m*<IZkMOm`H(tFqQ\=M-M5PIb,(qabu"_2VXCe)ht+^?3P?og'=L8I8EKfD!m@@$N@O[MA"j6WA#&Hu
%H2+IIg#Y5t+.[aBmlC7*r'5_>/R=Tbs#_#X(&Ct#P+Pf[S\)"46otoMj1*QnKO]ELFYoPqe*kF+\J(\24r18\U%:<e1&86t:cfT8
%frD8Zo;Sr'7FgMU,P@pZS*-%fWQ)qu`*HMYs1$72DN)F"5hC2IN=ImaE,B7"bi[r<M_O+Q3h:\eXI)0%GLaO#B2uC42I?koGFhIA
%pq!@dq09c?Z-KZjmD`>rf6NCshH_$V(FsNEA\Rfn@'#"rQh'?\m#N+)K<)?D8g8/dmr_B@+uNF\<)Id,C_>iEDOdo!.h(KAF*4LZ
%Jk8OegcQa=:gIhKk/l?n`IeKRkf*?;(5jgt.qP,qfk`6(O1Z][18R'BX6O`0VO]+Qe!["$Oekd(+54a"G@eI\_>rod[&@Qd>VMuo
%9o(-GA0X_n^QrkS$JQt)`A+-V23c.SE]HTJrE/5g'DC*Db-e'uo+mfCn!Y`cn^_lQ<#!rcb57dVlT^eH@qX>'7Hi]];>[Gg0o.@O
%^Ph5/:gL*L]$Q<!E_p%BGF4aY'kZ!mm=WP2:Vafk,sAhM6Ydh`dA.V%38g`6j1jP*N/bW.Wk2Nd?!1fP/#2kr3gY`TG=I9<^6)?g
%_\(h6:@D6UB?Ie9`PoiNp(+<8M(M[WHO_b-*Wlg0b;m9j`u!n5_Alp-Eq+j\gCR_j<lHc,TM8^O0@Xfi]oOg_$nqCr#VVR9Kbq2-
%lG_#oY?D;eUuLNTVhGr8VXVI`pE!+ZYCm_G&mgCYOhqM*=,.UGc/Ah3=tAP8)P4PJ0<!8[+hV20LDTl`L)8S'k>/S^q.'*h44As$
%35atDGIPL,i7ZQRJfDWEmf2/(amVZKTm2HCS(nulpsft2AlFAVR3N,]K]+)\NH$^-e[!mCD.j\L'H^?DDB>1R<GY.=1'^m#g`TYT
%&S=Mu9+GTQGJ`=uf#2i`8pN'nHanOICAr3+B$^AtbL.AQNiU]A4!r]R`UT=4),!15[RQmUfUC8<^KoDu?]5VYSF+1N&<9k"*('fg
%<faNN^U@$2?ndb7.d\i':UtUb;$6UpZ")i<moij%e.4A!$mR:0ET4=I3[7(bN%J:<c)PaTB`iW=Ko3XYJS.r/e\nV,n11('S=M\Z
%SZH`21(Q!<#Lh%+Hr7`qXqfhoMk@l?+IC.(OZ&erJ5)TBBqaeO0'fT50(s,Jk?c/X6YM?q]?gEKGu-kNZ"KQ'p"M*:gB=jcGhAoW
%pisZ.Z^T2I5&7s].fS&%Nii3GR>me1Zb;heod'E;<mSbH*j^HbGZXm'IRmY6#[>jQ((0t.M6Ijn2`2+9VQA8>kMJFU`aqfbQ6A(Z
%Rk9[Q@qZ<t;1^:']BNCu$t2%aYTu/6gU7]`Z6'S8S^0I5qmeJ4l\><a94Y,>+"RHMfqCIpe)#l5n-F,l``s6KUXFr(gKNu8*p;b=
%`Akt/\+XcRL['-W$XXUmO\\3p5,M6J33ZFXSF''E09X6;agCAOrqp5*9VH4QPb0,qDBR038ZYe>JNRik9HE0J<#*=#0/ckY`7WOK
%e\n.r@`0Ac/](O_SFU)T59`<d:7#,P2p&-.a'[E@@:)\"+<eB=ZpRQ&Uqpi;ena9Z9ICof;%pNE)O.u^CZ7DA9i]/X)iIEm)rU:W
%hGa$=qP_U6!blh:``ZO=;6'K6%)*)mGh#<CBJmN]n;BJ^a_@e>>'k]Mri!9O*!Q/o7mXjM!Tj/&KgA=9HSl:r_W3sQfFeL)2ap'M
%VGKh9&do#8Jg'NY?q@dt1aJ'qTaDl#*o_tF&AKY8@Xl:?8D"Od$(E+_Bp1&*C^Gq4O52K8ZD#<kp@rr1Us?W\a0%j"_NqDsg(Y<*
%SU%J(iKh8MfFf&.)aYe7.nEmYE@!LU2oJ2:qT09EBdGg'b2QNMl<8EXClXRtNkZ2K=^ReR#HZ)j5"*h9.D[E-hdHhGoja\T,@.NO
%K2Jo`L+s>.nSsX9L!<I-R@0g(8PC)?,hX<n'IN?U[inF#)"TRh)]K/>d`VEN:s#$r\LCS-C33j['I.E$Q?3WX/4gbdE*H^F<aun^
%+"IX9ZCk]OCT%BF1/q_p5#cS&[iS=nWru%B%@"@mYJ\H=\N*Ja,14:nM(N/T@3((]>O!or)CQKQ@JCR[TYetQ>JKUAD47]NLE!\?
%94EmIo]6o/""%Fn0rY<o:3+BU+sq<7Yob'k*[BH@(kGJE^kLT@O0L"n+nZ[0?II\fc>qN@f?5nW]QIJ>&J$["'".p9g.fDHYT[0_
%[Y.;jVKb\E+^U=k_bCj`;30Zd'cFd>MIY:,dZmkM-5oDnLJ<0*-#D"H$Ce+&b>:<?fH`Ke@$io&J.W#pPGA3f,T:J.S&>ptd1,2#
%hg.ETXV*MuRS.PC]"dZ^;3P3V1Z5>_'4D_*)5P+Z@hs\jfMS07]0k@<jGn'K`qdV*HD$P-IZA.YfnSYe2GW(tB(2BMG["FS-tRpu
%@.h)hO%?^sML5$ak8iIZ4>]-o??7quc^7hHTm&4K2Y?E&4RC)(6ahdm[<GaVZ)Mq%>mJ'j?e9J`QJUHe]]7b=\%-^l*\&5H=l&i=
%cro1l(%I1sYob.#1j=c#MOV.\IJcNRg2;0$5WjGli#u=CUUP.+_qEMK_:+bf90TB;4Y?]crgnLtYHMiHk1&]Wom0BHSl;hb>jCtj
%ofPT)cVVqDeFO+A4@;7RFRo)5ofOU/5B?>fjNMD]p[+=`Q^'p>'5`k>S9Q7$SRCFgcm)[J&-.Q]"n2OF*8C?FA??+GMMduA2jj8s
%CTVqG33i;bFEs5D8Y%(a8h];nY*"fSr[\kU0@()X:Q\ZdS37Gt.BSK<i8$X\b*mHJ<pWr@+=8crkPCInqQ>ELp[Yt,pllPh\#D<!
%oO04r?;pid>BLu1Tt3M%'VuJp?SiJ^=/jW)X0$WO.Ygl<qBQVD&'U?:.]Ba8nm#hiB70u3*ncd%DHmlqH&[)9mY`(^Z3[4`.Vp=A
%,p:F8G9Vu0p/=GTm.+Pt;Uqi6:N1Gg\N&s(1(E%NA=QOAjR`tu(@+>5]h8No-Bq;@Th=WL^#huMqbn1#>1]RWp&Kl3[gGJ?']eO(
%FaH5.Yn4K95XS$#[E]eZ+5ft)PN#*>E&,qY5dlI.5VDoXG18>afK.-V#bgf>CsbM>i;](PCjdjT86m]LQ@;15b,,LC*FJ0YEcK6f
%>q<t&qUhK\p^KT9rSYM%qke5oLXTZr%K3iK6nVO$UEq[[kCKm5:en;_KK?<Ia(%h"=O?7p-\mRVp+fIA#R-(:PpZQ%,A?mCCNV/m
%KfGdXXaD5rC.Be1.e"63RX&,/ROqpf2jp@HAY=Oi3!?$/1Y(;:kd(,6=?dc%Z/uFlc!<GrfB5E*`+mkiF]ao:(p7?gBc=JO`E]$P
%f+-Po/ZM/VaKT`?_I64MjgEjR]T)85rI0JN%3@C^7[<@1rr1WS3^ndRoQ;bqKu4pC6SD2j(E)\Q7E(!RLj!\B)!.HHX4'!G(@1Rt
%/JPoL!M^-d2&i^9)7O`o-ip))T6G\[o5r15:o;ZF0u">9.ZY0.C"/_KBC)9NX)$5M0X6q6A9kK1[QGl2P0kB%Uc3EeiQD_Ek]tS7
%WgWc=?H<D?+5NQk)<X*+8ZsHN/2+'DeBl-Jl#%DVA5EE"\EcWDCdJn[<)nM6$f8Ni[BU9^>eS%T0:[WCDQ8E>bCe$^dG'U!W&+B+
%Q0Gr)`KhAsKWn8r%.As%BC/,TTmg#7K<DT@`Mu$Niag)95A[Ul@cRA'fJbRY8K8?o's&mEnkeCRCuGlEK;?@BML.Gno6[#6ZY:*L
%WDYnk:DQ"no-YCJhNXF+kEHps@-[q8U*,>Xeo^qB"I#i;?f3uG6:$"9VhWdr:\@Ip%ioD2BsD/GDqma8)N(aXDD5)BAgLJC-X_X<
%nQP\\;:^,c'jN:tC_a,iU:Al_N<?`f;mTl*<JhMbYmB<[[(^bJ(-+)GK']0'Z.U<ZXuM+-'3'-YrGHZ:kqC;.<'L,$ULt'j_[dU,
%ldlW<g:(ib-_+rO%!*M46*(jINY]Q0DIF?Jc.iH,3B&KrkD".IDLrm8>0g>sM/$m-Gs^Al9rXhdp.R+J,C?;SS)0`nJ>:S`_Xc3h
%?+Wi@g;/"+g1KH>V_'_'6-fs_<Y'GbNW%Ma1Rl"$.'LsJ-Ad^&]l9Y8L9VPF\-_ZHn;Fh$UC"gr@lrs<Xg5Z^L;GXMB6njgm@!m+
%L7,r^hn-IOe`Sh?kRiMIhl]"/LA<KF/e*NPrFA8KNe0\qYK#f)!r1q+^[+J8:cfH\FTfIpZ0o>2kjB;%3W'`nDcnU_FMdgf^.N(!
%jA1fs5>$LRQ=0]_"[\sfYq_c`\No@DiqX+:V3Z"Wk@9?AJ^?bOWGQqJDZusqL\'\JrZ'4U_th&jXkbe'^U5J'LZ*WZ.4NRtP61&n
%&C-=_Yb#_=kI7iIBM]@an!>(kI&TO*)3C.tr]8`a_iV87),H3Y&f'i1[0<+ZV.:=tXKU+*-nio7;P8WKa1ag8?!!l!TVTPV;c>BM
%H<(,KQ+1"o!bN"qD7R1$$eG*uNCm4=I.Hf\-VMjE>M84iARW`3FG<)S!IR6PR^RD4k^#]d2TX'_?HcOK\(,qPXo0r#iX>T7C-TF8
%Sm7o%Sr5hqifCcq*6lGEF7I<-\r>e2O1G$q0)h6O7C0I:p(kp0U:L'ZJ;ZY[_N:bWQp31V!pIhgVnaQ!S#9/G'S$CF=]efIoNtR+
%hYa*3TaS"OjK*]<;G,F=Un%kD*)'<I6aH9_:f*3Y<o])(AFk]_(sF#Z#W50ABim_&CWBDun15(OWf?qKY%2!Wng9#tn.hYXj>H/u
%:sd_',fi6>=d;UA98?+C-G';)\WPYg#Yh?jqJE,f$i(*`SOp\,;nmRZPOCsmc_d-!;9O#>F`rC%%52Yk?AIpqq#VH%[50Oc5nToS
%3dE<F]\@;9[cQ'OP'YTS4nna>kH`'d=b5*B<$_E=e>`25k/06UiEh`WW9@DZW[0=91F=UY0sAXkhN\ul7l$VZe&8n8,"-%d%BfrB
%[nXgg;QBdIRqg*FrGYqFTpk4]1#u)m$hIO2[$QoXkJXCcE,nQcX<^1`CWSs,UWU9N.@eqmYuY93fEOF!eKcd)Zn'bj"&$(=Ptfbj
%2Fi-2q8K)qM/'2+L2?=hW"g3lVS#%-$>VD>>?;/2<lX*?Pl-tP[%V+^nhOR:6o!jnaZI"399OD_gVW:sK^QB/ZH,d6g8A^g!AhC>
%k$sZR@;CN73h*Z,'d:/]NjKIK.-tI/bfQomHnMj9?+R$!Q/##8pC7J69hQiA&*%-tJkJGE$RtnUR,eSL,[dE4Ys4cp7?O]"g=j(V
%UG4e[)IN&Zo687&Cb;r]"mY0q1:T7$A(lX6jf/cW&%)/3,'9a`W`-lNasnm'N)V"3qR,#?1F:.'\=b9u*W46],r72VUWa_"]5dsl
%'fk+uiN$:W$+F'bpX*]r'uYje:fim(GB(pK8pARfa'+kgRVgZb37\`Qo^j185/-p1jLdG=W`K#oqUYNoK*Jc%*"H;1\i\ZX4*rq'
%7"`%]4(i!"`EBA5%,_F/VWrma]5p6s7*Q$]Fa">44KZK;%c_t=:r1?Cm(l(r!-?!Q/\<g^Jso<fd$<FtK=t+PMNd-_JC'2lRY@n2
%n2oOYmC<<:Mit<P@'4rU[d=c^9g,Pl-C$Gp[c]cQS`!l8#ps>bRfPIco.@YWm]1QFgCHl^WYk>i\Z>U+.f'&"$;lMYDV^q*-O8%Q
%cu63SWU-uOcH?,cY@U"*-hKBhG[Annl6PI4NgZV$8Z\W_'ADf:DIu'8<JHK3XVL.#"9[*_BVioOPaAjp9>.Iq:V"qhfn)%H7J.d&
%G,KX4$D)?\b+3)hEBQ1%F,KIVeBKG.,jqakHq7S9TUV-HVPHprYd-3uWf`GUDqEu[XfKS0+uQ534-[Db>G;G!()C'/^g5E4/(_AD
%2s%1t>41A8hF%j5I[&%4P`OO(;iJ]d\L:NS`AB#j;oCk6HcgCSa%`L?/#QC/CWL]cZR+5g'8#RP%U&;_$a<>N/SafQm>XrOVE?#<
%'1[IIAGUiSY2mThVG9q,%[p<mrDT^X'9)6h0MSj<&f4_?,-]sMAFs)9<["_a<k:"/\\G*_PH>c;l>q=r.Ok6@@NVR3@:^@I%\;#'
%i/mU''$Zp',.Ml=ok$GZdUt1jREK(%Z3W7Q`QVmJF'6^l(,M:G2fi-G>S_Z,I[mr"AhK#!-'uTQ6-(+JbRIG[P?SX6=:pV1:Z<DS
%rZQKqWLLP9[r$+`"7C%?l#WJ9Y0PuLA&aUG+i5Ckeurk16fKTI_JRU\^AW?"[ICtGlTN=H*tF9;&\hE[%j=IJ&(r/p+#7K7cR]8f
%B@FWYpWY5nF!CLOa?CuW5J]b]JOc\8AFDZRK1,Ea7qmlKBs/3'dpO24oHcY.,.mfU'A4o6J=W!&DDrlIDh0NC9k9<S?k4U!G=*SO
%QM67m.Fpo\opXEdFsan@,(&+.a?FPioni#;B@<Z@mGfP!pKjXi:8Ek5UcT7C_f(a[hVRD?$,rI!cQqgOV!^,g;U&\^EK_2QnnZjj
%86]C^p*/2-oHN[&'"ch]`,=]_p,RtX2[fo<RUSR)cLb/P(d!fa36be%1Y?K[X)DfCr<6T&;gI]H&Be3gr.r^@i:tqUp*2'<p-H[l
%j)Z5(,`dp6XW0q(<i\6CN&Rk&"M'\4T6\2&/9^Z>>Js5p(7Q-f8I,4*7D-df)Qds2XGKGGj[Ge;<\WP)1"FuieMTq'id[#V"JTMQ
%X\$J[2'\X@eOPZsr/$"T24<#+hji;g/N_U`TCOKnYm!V7Y/$dtio.4F?B'^p#uiMEMuG>0!nqhj@:GW^.pp5i^q+d_lnN]MJlsjR
%<eXW*14\>i7-rWm&!CQ^AtsVKR4Br!afKTn]RkEAf!!@>,3diojV:hEo[^suB<St:i2?`'jM@nWJ6?:,N-1))^N&Dp`Jp?:?N#oW
%=YZB:rIf8=1N-i*FCp`h)7*H<d]Yi]I4^gG5RQs-V!/)N^k4(*?,&!u=`9e$rM"oBp?H0&Q<4k43n:@8EY/PgnhDnN@bN4OJu>e$
%[RianGffOE)`3;S.ES1#<G;J?(P(^+jn.HrrKp9X*!1%H[[K*]gu^tEb19G3ZCgjOisAN$Y12DEs-R<s\d-$+dcD?Kq'jIPOV]c4
%*F;^U0==<aam.qUI?'a(G%<5X@P3TVNm\9j_7FluB&^^cmmV@^H3d.6\4Ti!2UZ/M5[.[Gg-Z8R`N@<BJ)N;*1DZGs-V4RA\kTh(
%cX"P>9g"jo08A`SjMoU)O7mA!+hcIq%%`cj^2@">@MGjU)=?jmcRq89T]T;?WP\/,Z0no+gc\]fM`'PB/loiXGkgY%<^'$^^Yr5/
%)hRIrKBGer\QS_F=)*^q^2`r7?6=s.o9l:5[ad8i/&S3l5obr2Ymo:&DY/neSHIr[d7_G0#ci"l`KcIJLU;6"GkgY)Xg[Z9C%\T*
%f`tPAIN>7*de.l%lIJ0g]_WYD)).N1rOgUR6FSuX`#)Sk]2J++1,2gq9L%8XHYBe+pirJ7l;hP\9,ki#MeUYHLN?j5%")&;kfU:Z
%/7Pjd]%%Z3=2.VN5&GPcVMP&_rdBfqms/?]D\=S83e)@Y>l:5#+(j`G3FY0BbiafX'9&=)cu1`4gC4$=6bgmmD_q%?+\0dikdNQe
%^0Bg1&_lWmS1PCb,nQOK^h)T*k_;i:QRZcg0*`A.j20_/!lcs8qQ51h*<?Y##oSf+=K=9aB$U:iHCVn9&HLLX2&]]_K?pd+A'tpD
%#M3a)f<<@fMke9oX3lp=T6G\[o-/XIGHp\RMJjlLlsL>G=_3nX`L$cF9WG<U-m$bf+/j8#W@]'`eW?I\.?9+$1O;t[8#r-aWtLZ.
%Jr;rI;fGepG67"1^/,C$K*CP8M>Z9M+u'AEd)`XeTL'h6:kDT5k+OP?iV:<:\T:#C.YQJX2eXI*ZFVsdfc>8$jCsh(1+i>@][YV<
%'Z2hO3YX:J/L"L>*eOoh%BV2u\%*GSD'fp0iffEN4;n#lkH&$_8mU,n5\^_['f?YAmR*c+ffZ0\=ff/<>,*_BCjm,!g6*Z\l=+<Q
%mtKf4eB>0%f@Y\-<"PNqRAB%^[[\oX$D)R0i!r%@ok`b.<G#06aIolug;M.jY1lS*,CEZ0Nk_[<@2_KFa\rT0:u7s/?XO%=HL7D<
%'8@+oHdM"2\JmCYF>-7QRnk;50*XS&LLB_m/HKlAlcI'm+&@,:QVd&"GFSoV1[Ac32(@Hm7;Q%WH&CrGb,4D!Z8!^hhQ(Z2_?#:*
%oeE48KXGa_rV^T`.O0Fm4k=6Te9.$X4O:7+M#f;2+g?hNc6$2^r2L;TRIAh$WuT2c[LG9k>Op)0!##_U@*un.R^hq\k/T>9)k*%.
%!mPP3fcgDh1$d^62'9XlK(.A"`uimUo/]b<94Ds6H\';,^M0sPc^n4hm\X*e0&j+_p1MsNN'*=p<CR2U;Vf6<-O[BK,E#j!E8I`'
%7peE@47N.^oJ0E9Gr!>?\)jVFapP4aM_`FN:h:?V^g*.%/BS5UR&Nt:X55Qbp/Zn-JZa$K:@pi]f?R#ZJ;-0#h7:sLd\4SO3/;nD
%OH5'B?<mFk7ssHTcQ)JC,<emUimVugC*[R3@i4a`VQNC9C?F-^7srb)J<,2=&kR/+`6dnYJ5:K)B':i8rN2H\rN?_+[$q.]]!PK>
%5!6jR.c@)sc4^7CAob]-5AJ!3/V06?YZ2+E`*05*9HWc_$tHQ:];8!F<hQSQ"p(@n^\<!DHP,`rIXBs!2og8oFhFX*'^obuGg@Au
%q9>jeqT?T^]Ot'R2i@@^HqFb3nK'cNpZ0>saV!u=MOW"'`_#$fh_HY;K;AD$eXB!<9>"mKSh[#0N2tnY$g"nW\i((@LWZ#N\EC<@
%*T-iU7XIguem7pNGjO@)#(f3:.ZRE`#8]P3jVmPY?!EKRRoTr#$f#mmDQ2X<%tm;SEZc\0P6QAuIfU&Ukk^YROkSce8!)YSq#V@r
%Z9[KOHlqhI-<\_!Sb9rI/!LBd=Vhq;?9#62X-g=h=86W[P^`,+;S0of:7L=<T.k-#O7(&kEQ5]e%J6D35W>o7L"rEIf<tr0JA5RW
%TYKg/`tKMqrqZ5gU5/Bef?0VgJ%gf\rcp3fZti*lh%7$@FW9DEX#(dW0la=GE:$k9%-mC/&e3G@#fJ@<5$aHaLrGPArU["`,97:m
%r[u,L"2ft7-nBf!5fdG7>s#`ioI-:,kE@L])_q3G%:49LkgY&f^;36!]&6F\m@_\YRni"<SZR'_=XR>i[I'u5oPM8]/nG0Oos$5$
%=bnk.q;?8%boZ!"UE&dtn%Q<Cr9F.Fng8kaZY(bcUNuX(%mTjK%=a`*G@-oUbQ%S4qu=q`nDOToIJWO"qrQi4qVBoXMpG0O:OZDP
%0>>)J\\.pZ?,'XcDkEYlT:]]frT<e+WF#G1gtIf*DXllOB^mt*'-FDbS$dWm`qYQVK5\A5HuW9$O_<`:rd908F6=!^]6\\tHL9>T
%N46"6m5g25?KN>9O7*&Gh>,;uSg_dk+9,bhUg9FE@GIRF3B4e(4h".;/Nnlo*f^[/Nj7S.o)F/KDJnp4pO'_[ID*gRL+dHdn`><T
%`uL:eLIL.U3r\`<Dr*TfhnIYbYl*[u^$n57VN]nK`Ve!*0B^Nf++E_Ls1>r?q3$5[LApE3r8dK?(,=ohI=:^B`Q)=r_[[UPj%m!2
%s(PUhrV3pL)?,#,SsLAaIfB3)luF89M"hLT]_.^XDSGM-)nbh:gQ#(dSt-?uF`mNNh:^&]la-:jI/MO:p!'ph:ANDiGMYO1>WIGk
%58mkLlYtP)a]VYh+3SWcMjL8i5M@eU(*ESDm,jhQ[X@`CQe1-M>[RFX,;S%[o0?U;I(_YUb'O"4IN)h@>^Z1s=agJ-LO9#`VpO&=
%=8@U0JlpgY[Z?48Dt1s/,Q5FUaK?t1qXj=`[03Kk$BhTZq%\2?r9^N^:+iFcaEmXKqCS<kh^gEf^A[VCHj>/qmjH_"ZkfH'dN:M%
%o*B_<459ue!OllR3rT[OV!0bp0sr^ZRul(<+27\q>L598@Qf`B5NcC76aoNj"!<#Yqt?4BSp_[i5)`i0l>M&n?C;Y$[r9PfIZ_B_
%l(;sR91P7e?0a$?[beZn/'Hc/B7I5FUfr_Dcg!PN50m$;A*r&42a?F<qCr)p_pfh)TSNEBD#a:b>G@&?eu%5Lj_^EK2T:@=E8,P-
%IL%"Q=*[ETpOs0!PAHi#)h,;6:?FoYHG:?.H*eYm=ap23e_B0pbd#dc$;u>0hegu&UBgGVnFdI`AX6\nT3\\#j?L&WaKJp`^%m9j
%/sjb2?f&H+`sOf)S\Y5bGCi7<C@UJq<Kq\2\:SA<rfEQh8MImU9f2_LBe?Ef?do#>9DJD=je%!*?@M_@V+aWH\=]5ab6u4aR"B:c
%g'u?YHu>%lI's2s$GOYKn()F1mECCX`-Cp2@K'*K\;)jn_W:DTW%E7U,9.eOJ:D(Prt1#Iht*aq/l1B`A)ru(`!2jS],se^^Uj:0
%0Al-"]Ap@\W8(ld^?=J7=1N;lHGu>p/%3Za5?)F(pXB*(@+kM1ilug%mpE&IJ%L_S&5_i,%S,!nU21Fl3%3[I/iZI?rZ?=Woap:2
%oYg2p>Q+6mr8#?FjTup=MbjB9h9#XGXk?3+qe3H#`)>V7H=YcrC"cfqa>68=6p?^QejjHhe"O5;[_o]do>,iuakko$)^BBh;3hjs
%4L$XDA\L#e)"(MHe)cu'!pW:CJ\NiSC`?V<]3p,$MLI;1"ZpMig&65Q4r@f-m!eoH:Q2%1:nYI@P$%D)&)7C[@IGScm#/Q4*jGXK
%^$Q'X0<U^keA'T#o=&N<rjXpOJ%&[1Z%PiVY<JT9nG).YQa@WoI/]m%[EXIbjG\_m+Wp%.5Y/#:@>!fYnmE@V9`Iq%[iKXJO.fuK
%OU]TYL/8QnOLD[N=;+NsGLR7Y!rYH-MXB6ZSk->Deg2"R!H>%7R=(DLXni"MHdCj:O^h8`IWh"V"">]uU4=+h##Ji2c;]g_&g\kZ
%XM+MirU"NY!D)KQg2lV%pUIB,p+b*bf[IBX!*^s?LQJ\.^VGWr++b$b4.\qc2FUsqAqW\t#0W^LQM;6KLO^LKIt8+hiVnU?7/Mjh
%-)#`?^kWBI".c?CCY?EgFQq,g5QO4D^ChRe,/a5+&;qTY$-4EfdDAt$=95Ij\)8*SquoCb43?aE&0[>=RlmYL9n_I'HR6kMJJ<e7
%s(LBK6OSF[s(/"q5=,[+WBuIa\s<;dnrj%9(4P<[h>k2JB_:a_*Q$9OZdTaPKZ9Q)Mo&D0#+Ie@]s7QNi;UVWgHdj?&P/i!fH05t
%>-:jC\V9bUFge&SUY>0<Gp>hU5I9q6S'`b+GB8Fkb<HPbit).g\"iLaR$t^5Y4o!5j$.\,TC:5<7o&in'V6L2g;?r=S*A!c[1Z5C
%.GH*-!oMi7^25-OS:n#JWf74sG1(J/6Fkrld'9I;h.j>4[WHB4o%Cen0%g3_?GlK)hi#D7SgVXf#34<V`N\]CUceo._Y-=NQK#!Z
%ZD7t31X^`epf),'Md[E+H+m#*"#Cp(kDX=nogi^tG^YKt&Qdr!I1&8WlT7"mk>WM<UTWRb2)a'^+%`XrmLYADn@:eUBZ2b5I)c`m
%`V;&gS-juar'iPeIr#?1_I-aPHe;R:*XjUMa>r7<1F8TQVHtsLc+2h!Z,ps]ir]@!F3V26#/oq][dM#L1bI6V(*,N_JH61,(mIG@
%[/8gD\41jW2N2@0/5eO#90TMV"],mDk4(O>nVnhQ@0^/K"*>(_k2Q5V_<Ei/+"e*h_'=1-.;[<hK;$af0`3")(#^qg9Ha$SThc.o
%h"1"=7qOcuAQ&72i]N2nr,jQ[:'+e44usH%%)7'\YPqKp7_Z5L?>A]H#)E@\iCcTAWc9TFX,kG&EeM8oP%K?\<h9Vn=@A!tUBD@H
%Mhqa00I"c//tE/pUh*7^6T.i&V'V>-H'qgPP+FAV\:Lh41gWKW`hM!DGS4b9&jG`M#Y[8pXUS%AV$gj$=cR!uH"C]9].(Ic%`i:!
%6jllU%bV!B8EH'6MR![Uj[nGT37;c@9\F#'l%Jr@m?+Y9=;8$CcPm(6."oDZ7cCGr#aG1.EVSsf2;?YKdH56(:PWi6n^?oDW^cKh
%KSptk`re=q_RMKIL.p`Da!:"rKi43m1drGGJ.Z"-A3'E3.bLUW6pJb?m;PpY9/fKql.A[[%a,!:Y``\=jp4S(^;9@SN9nnTSR?Rc
%hVeHO/a1\(#N$M>d6%3h27$?!(".bH$s+!=TJXJX+@?KZ?&,ruhn"SYo0!^0E!QN52rP0V-q;9K_?=[`+kOR3i<"d)lhCsh+r$q-
%rNL+[;@?jDX1U.n'hCQUcRS!8*QVsL)027cpap4!K[dGNGisTH3b20MK+CZZ`XE&UgK_Y0q]iBMOKRdn6hi5:=#&rj9YiGH(3QD)
%jE6247KhrI7g1?Uf+gG2r.IA/Qp\j/Z5B@?_5huO]clWJKKW:q_V@!a>5CE)VsbO<V$";+55rD@6iH-\8UJAq,DbqSQ\;l$Y?**!
%!sMW-'+Vr)--?qJo#3=bS-&ngf!M8@9WU`p.Sq57/U2*=>\2m;<Cp=AM[1b2F+F[[@qlKa!ie7CBQ%Ehr#Pj!kKl;SQ.-R(%pl<6
%NQ=p/RM-;b`6Ge5Y*_1Q\Kb3VN!20\r4j/09-ITa[Rif?nimQV3b%`g:^$hC>Xa#sPdSq_*>X&e^;u07U`IN8O%_`KnDLMR_@9>3
%4W%<FZeM:`4>@gX$*HC3[3KAi:XY.fBeqXfI\=>aTWsLA),jk;]1/TmoPMSAh&XZb]a3oW(JO+seg!S5R`j'GrU0$6G0'e&0i?lE
%1srj':!65(CjQjV@EE+`6>)9efgf!qNe]$+2"2:F;i.\!,YVm@mmh`56T128(2O4LB<fN9!u$\@8a:iV9J2JZpOrlWi?O*U7leZ\
%`acpIMj8%Qd#MYPE!9=*/aDeZqlnQ%YXa<u3,/h`_euaP<;h!UGKkE35BSb*D#@Z2AQU7Q8/or56IDK8eN`:IjU/:T1l)<1c3<1u
%pHJ^NM2-j.`*40Xe]N(]EPIYj%#I;ZZf#gdI,TC)i[j6,_"9t$n"OW;LCtCr%dB:2lWJgqaQ8+J7B_'U`.qLIq]BEP:#(9=[2tH@
%^=G^M/r1?"P?\J<`5(:;&-e]p^G3]bs.Yku8cpcqD=/PN-h+tp()Y2qU4^Furt12A8;*,'!ric+$cEA)!l/+ne>4[4(1A>ra?3>Y
%J)cF&Q1*7_V0p\m@.CJ?$1+]-CTfEdo'T"%VIgQ4\mGsO!0E`q_.gfA83VV&`0^1[:D!LA:lFFsL.6Fqrsnu@cgaR2JP<A.r_nE4
%3=.oPdJG#ZZF7hK6.-N9%gjjLO@XKD76$0q%.aRV0]IBUs$N-3$jh<l+T=GbBi*8hi.7GWT6@J0Pa!+(ghQUNOqE?$QD@(d*UrPh
%^fY&7KQhBig!)dfLMG>ob6b.:#C9@.Qm_)jYp'@hM%hed.tmfFEsuDN1$897Sg,7MYe[%+0Y.q;E;nWsMY?>Kr`H,bK5ubYn&>5'
%f@Ln"htHq)(<(@n(Z2APrd>=tlMk7_Ejsg&7qAf,UY1^"gO0dNZfh!RQ%&'1HM'$V.LpbQeRq\Tm1'.8`S\307A%R`2tHB`o?aI?
%m$=:,IX080=iM7^1?d#lb:m8'T.Tbpo_Q9%^i/W[MiAA-Ee!PN?)`;DGU5-BcXrpU%2Om#I^`X89a#C_>6:</s$qk?(X4_`Y5DOC
%<4^W2]Cu^<O7AkAn.gS^e#hKEDoHU4AY_Y<[-_d#N1u`[pn7@Q6`dBshCocQ=t]_#TrQX\<I]Us7_AS%Xo&H!6.:P&`!/m-<Ws7T
%s(%<Y1T/e&!U]"S)]`epY9]#*5#UaNOn(;-eF=9C5N7WoSFli(6MU.=@JRC)MZmqof-#=nB6hki\!qjJnb6rJdH+[HF)S!EJId6*
%WW*WZ!t4t+Xlhp,Q$]ogquu<]It8m6iTls4A'WrNDb]/6Em+]k:Ug:-26U!XrnrF+IgPr<3r"D.bPl[;s83a3s$aA-4'LX!Ok$r<
%qY`q]qYdV'02#a;eGj\rs/9#_7dp(U1G/VFgC%bU52B;>h$6j\4mp4**B`'uD=Q4QIi5;=`8t][cn/>J=T%pF0IoECr?^%BXS.Pe
%YdaT8Mt-i%MhtG-d,[\R2q"/,hs=Dpog(BS;XLk2"&l?:%[>\Um78(Z!V:$PThE`1C9-'J*-J<,97OnSZeaSGm;5(n?gU!H:5Z`6
%[9NZ`8tJN70jUS4f&^ktmgT'MF[FUpHt;3&"n!+0:P7Y*20.47$p"FPI.6qeB'O!5pDU+Z'[3+W-#h^nWQOTtf7:`P`C<!u9cXM%
%8uJ8*hlbRFpP4Ncg5_s5rH>]m!.2k2jm[=+I\bW`QeKDr,m%#S]+I-q`*"3`OTIaQp1\"Kl%\/PDo_ei9hRk%qfW.<bI'QOpeD$'
%K7:;^l?/!"-KX,nP^4Y()e*ORgDP/[T]aC3X'L0k"6hpjgYo,]]>Tj!N/['m3lMR?Gd#sD1l<N"pW;35+O=N3$DUTMcLP:[:i#'V
%mVgWHU&*)a,Zgu>Mkt`ph@Gi1Al3-LepsVR`R\tHhW]"V9*21#a2>Ikdl>fnG>d730f/$:LR]B*<Ou&0<XS6>H#[Z(,7dSsnf)us
%^*IBud4Q.Q-e6M8d2U!?88hI8URdqfHlH4>ZK-7,`6CdFWkVOQ+!AX^e3^tQa,$A2M"IX]](['M^XIq8e](Xp%uAu[m,rQ#7uomc
%S710cG.H6j#r^@\Zpb!Y8";UORJ766KJar"?W5_T6),#3fm0u`aF^<3:lQCHB!Kmi7fY'Yh?OKS_FG[rk8/TQ`PX-\QOHdaIQRJq
%U?dNRF9E!:<9_[TI]DN2:Fu7drb&U$-G*fI*^1[(BP2.ccOR>rd!tr%C:Ag%JP^HKI%t>]8!i;sibpLk0Im]DYuUeB-@=@Bgo,G\
%CQshD5=)G8_*NH@5B+bR$3D8#nRm1;\5POeCq\ddI9(=a_n,2YA,T<7%Ef-HEt@u+1/_aHqiR>S70F=AAoMn'fW#e%q5'tL?@,3X
%0Kf"P\alf$*1P-3jGm"8r++UM-aWbc`B8I.[&4>(@)e_pak-o[1D6]bjId3-cqs"VDpluh?^`]ZJfD1JBK5L'9HmW3[O[;Vl;4[k
%g-bFle6Dk,e/m1es2*?!_"Z&.b4rK-?Q+lD'=D4(A*KN:./bS6nSfRfoK.((hGgg<oN7Dcg8.3:hJX0ln].US,d#JfSYtUcU4`TH
%?)o:(3=;jN:YRgdh:LL:mHkFM1Ht`0<s@S/EAqp*+*T2eIf75,s.pHH[uW1XqY:o=,6=-,-guaJ2nkfQA)4QhkklM5fH%MQ&@BEg
%A=kH_;QV*.N;DR!fNUR.g#m$;KiKUG^Vt[-6q4jiCO\3g\Q_Y4]2+:@^).:5^g9(JmHu(R2!^DgNUlO&RIL"[P2h\IXkm-WN/d&e
%@%l+aI6(dICmAbpq2<X^ksu`"7qb29eZ`T^q_*`+<.";9eiQP"_l^;XW*$cNg$*SlAEA<kW6n=uHq=+Wm1t%"C;(Q<PeA@qchk"f
%\_Vl"IIu?A?ZI9l@`6OjJ[B0"D8oZ,L%oq2dp)=U@h7S05\kl!W!Cc\D=/LImQ86aC\8@+7]0I+O/SoDW:m]mcT`*bmO(t'3ci7)
%pitPi3\%3ag@.R$B[$/*K[B/-CP3oMQ%C)Q$>h7t2"]>'5q<`'VNL&o$.&4Vc___@c$q9mTiJc4K(9prI7uCrqJ^!,>PSKah^EY;
%L$I8!^QM90*j+]@]a4*Hdcq96^%ZEiBU`>C&KmKd\_@"F40c>1f,?I8^)XX]q0p[c"\GUH129oH(:gB0QDi_VBtk*pIWa-C*CF2G
%dAW4F2.D&a4suQ=E-8K@+)'h0V"B!ZgBHAU5FD`_A7VB)EPD4:P/^0Fj:(iYL[NKfFNcrD7/hUMEg2'n)a)c"@JZMuo,SqG:d=TO
%E9M?pdS'dMDnH$SI37a#f+^f`hYN-#8&d&<Ih22'C_,toDW`d"D+-%6K`)dj@J<X:i0-/j"QIH(FXu;)\-2]'?*VppO)4)_]MklH
%KC=5"&TGoZX8H7mE<5eG^Alje3R^91pATV3p`VeLj$(0r@t^[B=q%cOG:J76>*Re![HLW*_I//hpC6hh'l^t#L@SifNGY;GQ"mf)
%c%lfJ?.`V*_"o:8%6GC;hU&&?2=(8$.T6'$US^g/H'KI/1hPMJZ*TK1EmX?GVN(FRVC&[cfNrP[0_)+ZBbD9n2mO&cN%mqd$<fqh
%JrnPrIeu[o@6@_F_1[ld-)9E#%QXGD?GN\X#hOGC,l?#aD`!&ZrHI*)lHj#?CQX><K(7(@QS6DGK#ug8<SR/jlE?]N?L&X$-X*]\
%d*1^^^0N*I]VB6^Vh^gdBcF_D;/5kt((\aVX-f6\SWVQq(rl!(=CjliEtIS^E2]bbbkAL.B&R,JoIbs!BJc.spd[F1LZm:b]$)cI
%DYYgYi`(+RI9PBdmE(WGBXE+p7Al]YPN;:CZL?E:qmV'"LKB,kr:K,XkDqk,LdpPKZdJ"7bX=9K]/'K*HL>,-n;lQ.@%+#bG)s+L
%pbCI@578ogpXF^8;oeCRKX[@E<]>:me'H[^9qL7Uc,#I/)>Z/`=PhoN5?I'p[.IBWnBXI>>duC>j.BoZ1Z]Y#%fD]b^qj)NhU+t*
%Ia,"RT*:ToF!d#QJ3W2$e\oSleE_[=?OI+k4dW/B$;:.A/_/)m:)83GA'q0Oq+S3nL4>fRT8U8#os\*%;1sFH2_CUo?2Bb/j29T8
%gDi,mB52X+J#I/5H-VZ^ejOsE4%L[YhT!3%0.e6A$?*VWHnIQ8!8k,,\^KR09susd23lu<aEtcBiD[V_F9:u3/G^p'gN$Y3-Z><Q
%a)h.=O$BL'PMN$447st$=M23\\`dLKl++>G&'b<hj8[Lmit7m5bRr.8?8HQ]l!tU7':V6l`ubSCh#Y4l>FjH\#P`'tBKWPY7s+M+
%:UX&R$e@^&l/U5%:Ym-<m*51Qoh"GEZ8%oq/]A]5d;7h,m67+IIpL5l[kHo'e$nTsrOQ6:8A8B[dj#Pa*;0s.%7_I*6"Toc/_+Z%
%%J$Rqm6d^nbNG;ig=C:,\%cQ'h_rV<T%hF1-oj:9s7+.XlcsB)^>A<nK;I/EEp@`ifuhg:.X9i<2fI:]fkPFmkH8UrFE738j`P:H
%(3all`]eaYT)FrAhUZ,<A1\3f]2u6USEEO-^$$QqA@F)D1GE(FO_i*\_jr8k^!s+)<4BMWa'\d,A<_r2*LM2WSN7cZTB#1+W,8Eu
%mUA;HR44uF`Pb0Q[Wj=/l2CSRpBPJ/oFE/.5GGDCHSHE@)_jBNfm8KEZPO)_D`8>hDX@"8V%`",k2u+ZU2pR+DpeAlJ"DIe:D]H:
%m[_&/^LI#l[V,Q4/f#DrA8gnX_afVUjO*5U`:Vl+1q&K/Le`hP.6=;VMl5/:?0$U*ASX(_]@"-FcK.gUdJ;U`6o9?TOcD&ahk*CT
%Df[SZ6tpWn](As/Md"B#j/Ce_eYnH"-_k^$VP<MNl:t;1`9sDSIcs87jM$TLH"SY=HksDVY*A1GkL$^%$QWM[h`6X5S?G(EP:\j;
%9eXh*UR@V(6SpaXSW)]lhNH9gWQo@&qlg`lmOeuIdCnPh6hFb24r6AN<nl$^;Q:d$h;3@MB@c0IoR--`&\W!6jJ(6:CX4ubmH'ar
%hB+[oUQ5S&+^-ok3K7&l4-S&qAUQ6.gb/;qYLD''[(1SW(2Y-?2PY3PMmmAL6#97`[u5lq==:dH0qF>!:Wu"0Sk[-Z)qMr:DsD>Z
%g+TU&8:/)XdnI8)b<$Bo_9D8ab&Zfk@XY,`3g&c8]hN%/:JN;.pUe_hp>'n%@deL+E8n+-mnB6.Na!00rU[nEPm%9GVA^*]&#[g1
%M,G"aY,uMuM>A(ud#<,8-9=ZR2GV_n3E*2>e*^a_g=^_2c.,H'Z,KYL'sm"e(NZKc4Q\MZ^"DW18hH>kH+ArH%sAFm>GkLc[Wh8Q
%(-B)jG%-/l[DgcuCi1SCkBA7^`M6m$<dd#G`a6UO$VV4LSRe=%^$4%qjM^"HD/s53o/%?"hgD$&<d%gsh<8!_d_C3TRp=k<6mjcn
%HY.:kVA:QRitq.Ea[0o_nfk?O3I/5YIPb24NnmC[p33,V?QXWIa\I=A0bmt3XMH_le!C;d;t7]Jm?E#qCe^mX.R(7d0YKZ8[VD^=
%S'T.$;u=1BF&SttOds"Ok[.*@2dYC=.PGp%p%%Ts1tARjS(#bWd@$SOXW1+aVOO,j7o-3[0-Ak+e&coN(8dMV<9LmBqj4Lgl,*)0
%g@Y(.AnehieXbs&Wd?PXb$H?j#E*X>1Xj$q`L4^1dcHF/I[?F)3F97e8aj*YRI.o@b089#qSp`JIC:qQ5Bu%WWMurn9QP.L@Aa'n
%gd#R5Zb@3G:"9*a=ll^GfsMX"5F]j">gDbiN1;K,:8_`CDi<`1b"cSf[ZS#JCd5Tp0fP<!QKOPhnY8+X\$nQ1ESjF5D8'S.F%;)=
%b1u)Rk$mb`*Sm9eY8;/H\[R=Vc;/$/iq&#kS(PBbbJ)5>CcS]j>B7#1IluO>c<mu[p[_cPh9Nddmr%:bm>%2+gt^@a>^5Xkpr_/U
%.@tspC@Qq1Ca4D6J(]et-[J_]Q[LM!mn]HeQtBe#+dQFGq<`fge]%7,6EZZY0-$:)Z%]6j,IpX"PduK[l1JM*U/cGD>b"uY0C%Z<
%e7._$m:((E;/7hV]=2hNnb-FAnMP=W]Jt/I[M&-&c$huRQPt_AEsJU7m%2O0,gQ-b-POJTZ`QW*Vq"n<fTE4-M^KmK-*Ir&QSO2q
%qk_3l^0J65gUUYmEcdZ)Np]QkltgFeP%V%$CVqadXe#GgbW:6r?<F%6kuo[+fUgfgh1KEXqd=<`?9=^)[^V1G^4"S`_CjN0[b]Xu
%3Yt_5oop#'1NB\Vc8EOXk5ItXc6kM=V0]/\gKn\cc=KdU;E8fZ1?1QiaWmA5Oa$e8;SMK\H-X@IT`rn)9DqQ>=^0G*cH]F;_RZ2/
%loWauae$tFP<Cl(3o>/[$U*HdAhm<Qg!\iL>@)]_gp_u_Xlefq)p5K/[o>Q)FK,ZqV[ofWQu/c\s(Y``h`=C,F-Sk&\BXp,97=N,
%??N+!T%CX_.\$CS$ZC0'X5iSZdZ/Ob^2i/^GEX\/lnBl9;;FD+e'mJ#s#Bbcl9A;sJb-S*L#r.,ea`3NINf-YCL_G]WqtLRXr#Zp
%0[7c$DPOo)A2a$0g$DCNV3&CF>H(lobcLGpf#=XH)fo)ER@!d8d;sS[[HQGlXhN>g+4h8eXtjeYo9HkoKAprtmGWG5GHJ43b4UJ5
%h<t,C[WK!-YWKV5rc#Q3,d?.)GG[;7(Gi66lNc7XNPj&ud7,k*OPT,DMLKU1E-!IrdW-[[3]e'N<gp4_<:p1X2'n/>oi/)7op!%4
%\u;H3Ar=q!RFToU[!t2OVKY+&2gq=TN28VlEZCsu,S&sJ-7/B:1T13N:8V(G4O6c/%OtV0GgOY%*$u<O]8PiO[e%"YRTl4eYNO?j
%r*8[V2O_e=kF5QKR>[D<IV%cscQ?+ncgmpMIW%$R4L_c`/pd8]gN*TZc0!h]H%5E;51eVrr8#Rtp8Il"FnqP3heLFqT!fFB]Be4N
%\[e'oZ^YuIqo.IZm`Z-Y_9R?a(>h,(4Q#NgT3'WgB+Jp,]5-$mkIW+lU(>,IhVXgq\lX5o%g$\.m[_Y!k4bInDdN/#m-+9EH9IhP
%0:^S3r_%P`H4\\(cNbna]/dB?@g<7`e_BG!@R%VJR(]uIiQ];KiUAGn3ccR<Mm9&ENSD:s6iXlM*5/B^NkKgeiqUlmSUtR9CN24U
%1:qX=SSZ@`I<+a-D4EEnc?;sLWmbUYRnG-*e,.%n:*DZ<)_ZGiNRbnno'BfDWF%0Hc'QadBBboAjg4:%jRHB^Yk!,.hQPVqqp4U*
%kI'R0bJd`_e:D<d;GX^,Med6GihBX]cX!QQ]9g^Yq!?/be*DJY.fME,YHi@bV5q3IiE\s3p"K*0oA7K0@:?]ph9=.2h:T-lr6;Bl
%]"b6"Qe$*<f#lCpbZ+Q;p9rIR^PgqpVI>q*Q%S2Hh:_>_hHdb?d.^:4`U483f<tLeSj.QmS=Sa_[V'IU:qh=;5L):DK?$[/IXSlD
%l'I<lgSNZa7e6JOGb$rX/Io4MN_:lM7n9EIb5"o64't#tHO'LjR&58bZZ""Rh<eZ?/Ng^GNltJ4dQG:4X#`>.><Q0%:0/C&Q'7Zl
%H7RSW0.mL;f32'98KkR8%SruESmHd2kd*BhXZR[W2:%m6YMF*P\Xcs(+.k.Be6<0)BUHN4U[n-%l#"*/dWsPQHhF9UQ.PVD9#((+
%3lT*Rmau;[%I@hNij-,O9WjsFS+e,Ae!c]tB3Mh`qmKL2ZI[_;3mhm7CrqV/F(p'1,HSdbkNMQsZ."_'G@6jumr@03]@\`2FJCTg
%m3WKjkM:o=^"JmEWql\PqTt6$^pD9`/arS(a_C:SlMdI(YBLo8e@S7>(^<!;'g!5X0M&WVr5T&-J)U"tp2BHqU"ChZ\%>/tnUcdF
%D,8?o`Xg)S'`64K%q6IMW_^.V?eV?bKf+I=qEM$?UM@8=r@l+LIbF;(0[K(p?Bh@VK6B1/o(pELk<hFjW8LMoAb-G1rF2f/8+T_k
%*s3Y<2QU!XH<^^0#3@"8"Fl"L'Y;7YkI[%e!%QDi%r34M=TGi=$[[?LQ8_i_I?i4jg?+=,r^F5:?Ea>Q#TjeQX1`8DfW@X>cddhC
%JOOn852Ou]7K2g^D+/b>Uo-bg'uA@hj2?R1;rXN\%j1@d`*f1@3]7R1ld<N;DiadT%K(R"&Eu$ECV(=\<pK<4"^D6BqLl$jY.(oJ
%A;$$[+u"!r5R[9-l*kZ*E]$amg8\VX;<32@@pLdY;57I[K(@ckr/;$?DIofQ@5o+MCutg\)SiB-[Gc`&]uZl>MQ]EBHpYXM<PZ];
%DS>XIg!eRcSrDa9^,k_AM&CqNqSA#\<1ik=\,PE!Udm4jh`!39=mQeY4XrWq\&ZX95&FKeesiEbr]"6r[,,`1g?%L8]33CqZ1)ng
%?O@H29MGApHIG[cTC4==eT%X.F:&AYUGgKR=60Z1AkYs<KXu6K#ao.WMo=pi*le"0+Ynq5+VqL@f:"1sJ,<go6eO<_]3B1W&oFFt
%FM-Y[DKpQR-B('7QS_]aCf^UnoiaM;\pq$H+4gAhM/6KH+2aOi%[%om<VCg"^<A9to,`CRG22F"J,b+>^EPcr-`4"bb&N%1Emf/e
%rG25t2o5f[HL14>:X8_O#5MF8HrC$+mg/d[rdMuqK%Z8e\D8V:42+5NQP,=Z9MfaEL3L-k/1(^h4B3]g6$Rr/s$n"hL9gH8bj:t3
%,kWNrjs\4Jr(+irBRG4Xj.u[tU&6oENTs.!7pGqF49#F^RnG;^6Dg['h0,dMh^e\4rNalE];m)^M&o(Na*[^3%ck_=,Bp8=Ycgc+
%?Emih4:dmW<jCNVM(/=>J`BiHm^HZ5J54M54h3dG-h!%_:\c'U<8uiQ0@dS)Y3pC._TCN6rWt@=%oMj?bC,?Sm.T>R_MHh8XkDF3
%F/eU=4g:%iA"rP[H-D39IihYnT@BRL2[_9.9>:CiFYQRg_a@JnRF'pj8TNS=31R^>Y?n<TX;!<(G3&;S@QN2uCd'L:[A#bYkec[[
%VHusg-IpdM:;rN_B:J5acGoG3mEC$b4"0EB:@*=+[c>:WX-\7V4tTm#ad)bAHuaA'dnBCX`=bk.>hP$YK2t)4o[DC]??4SqSn@8'
%lfDq,1%Y%\>^M_dQr%Ge;p5#`Z_)ZV90:a`$`R`bYF!s,m6AYC<G[cC3g1BEQc@5Q9TuS]4/EHXS()m]T-)tGV@&a0q<,)E[TgI=
%Y.j&eP0:O,1S.m>)WYNi.lE]Kn<JKV_oUEs/i;]?0:-J=kC2Pr?e]'-H(<0GmCg!ilGh$O%g7gYAaZ2Yg[K"T%J-.<oV2(8R6"W4
%[<N:M`QA1XnR#ngj]pJ%T$9AZ%kF][.6/DE+"TN`U@Tq.W=J(BcZ`jE/*1gA'n=co\_>mr:Mj</7GY(A4tbIUG:MjseAf^A2h!hZ
%m@@"ei<JG-.m)(E+BL)VGKEgb4O]7mmB8)*k3Z?#/Es`^LI7B642#^NS=Z_F$Y`V,l^=Rn*4!8m2S6Iq9fM]APP9%(2jMU'YJr28
%$bhP0dd6[eMQQ2<q`_`??Fa2SV:ZfJ]AB!./Zl)L(`pk[\kpF!7+HV[F\XM,!^3aR=nZ-;5J'm"S^'acf3On9iIcIqKpoe6<bZ$t
%Tg.Q&q,R$%ocglgm5#-\7ikB0M/ApD9.R`jSm)cZNMeWid)F`(9',0mSk_(H0oU=DG(XM%<I-#t_VK/;p?^K>[]2@kF//!d"/-ZT
%j,U]O0BH.Vq\%6+Q?M/+`T#*P>*[Bn=1>IGl`%aB\XtpO/FTJD66Z`3o\ELU3`W>(Q]E)<&5,^0A(5i)3ZQC[,e@3rTj>(4[F8B7
%:^Z4ukMkg4Pm]c%*#YWq4kT;rZu`dA:Nj@rB?p)I`<MlrkLR6P:2kY*So4H"n$+meohj3DW8b_6TeNkd?Q75OZOK!5mC:@/c_a_*
%J_!i#SQmW9-W5Yhrnpjo^,sROe-Dn$fo70alW0Ob6p:2a<J(t"R\-/=b[mBra`XasXj1R[h<okp4^)%r=2Gd\dBU0KHJ#KZk#N9?
%o>n5LM<sqo/fH1SVs9he20VuSpZ_X(VRGMfp26jmcW$?7,Y:3[LWsp.X^)>?=8fh?lh"4$[e=SN=:*qk<Y)O+Y>\GglZe[%,HTVi
%7Jk^0^2I)-?OQhWc:#eKj"&Ek4.NBgpY*#K]iS8\3Yu^p`*@,*CUgR5lLK$1Gktq\M/5Dj[WB+qbkcDh1/5X7WP/,Pr^3NM3dof*
%0%JQco/o9TAkSs-qsC<BH""=Pc[!Qt0[4@fb2%dhl/WW6#9lC7Q7q4T#C`iRqDKA<5`F,>ZC%5tRFq[F\MfX4BlrK-gDq*>5SVL'
%qW)ocOkRK0D.2.4.+*YO&'9Ep50WB,($mXi1-_>3V.T/9<5M3js"G7;VN$*+DH27qgsWg4!=<.df.kN+dX<1dl=N,e:aiLJ,*+C-
%`@iV!lYB,@;c?"]5H`r,U=c9'h;-mjbcg0a3I4<0H(&Ykqndf&.c&a^&pR_A6UoV_7Xa,bSsPc8dFS;R?+N6nam&#":<ZGhBC*me
%?4qai"/Xaf<jf<I@5#i:2F86-'ZN4S;hEu#Bp=\sl:HK*dlh]0:Y2Ol3(!mYBc\b3\sV+;@eN2P>^(5@A/-CI[RWkHS1BT$%Yb)U
%1cXIh(s-amlX>hhC4aVhU,C=BE&TIIMALn,jZVY0&4$JQXjCb!BkWJ"=MdLV1b8MB+:X)g*ChN#>/@,DOc:MB\M:7I&_VJ63=_0j
%8gk.H=WQ>Cn-%@X4Pq5&`k.FbC#0j7G=$Zd#H*OmWl?d!7f+,'8OJ21D[mS7WV!Ft?2o`M^-!0;2#RdU`Np'S1mI\WH2N1NYjl&0
%Y9CTlVd-Qt:[tj4HR0./0X<Ul2)[Yr#d<]!(8_Dc\Fsg<+^12Pa4M59:1i.FT"^[O31D&nNmQ&'dB4":QPq)(;BN-e9";g7:lI*-
%Rbd$2QSe,+d64dk08YFfN[0.b$jU/>8/fq=66?)H`(4NMOL?(Q5c["ESiq9g^\A)O]kV\]W.?pXO[]rZWE/;[p9Y23kAKIRr^[dL
%G?am=D80PJ_pmfNTZ*I%,8SJ\G\T,9cnETj=0/014El7b($N*FaUoJ%`):jK7ZFiDJk!M+N>g0dnIas/p;*HU9rf/9$0Q1iFgq"c
%oj0g.?RL'=9,QPaSD4@:`bY$F3k)UqF0`CsDpIQ'l%a$=Uih!L3pgiEF7Hr?g$tu"I+"YP"?slJgsA4E)7FGjDlLWJqM6[A@s'ZL
%E!'u->%clB*O.m%9)7g!V/LQQZ9-n<a,^Eq\Qa:4WSNJB[%YaucDFo,H\^.SYmL/()H?NL,'5CL?b7(\q\<X^"KhogVY/VJFZ3Md
%m[Yu\O)Db/cFmfA(me^kk%eo";ca:&)>0;MKSl7/8,P,bR*WKO4Cm_1C2'NqS9b7cGMWP2X?UHJ;JG1V(5HLcZ#EJXGJg,9TZq0M
%=cS9+%g*(&fr)g"%A)N\Y!7L=G;te3NaH@`lK`6/k.J]22<LpO!qdr36Z3iRg?:O:D:&s2X>5N-L-;D^6_bkVq98#h?>":#o"i^S
%"!*GrHSFk,N%EM/XmTe/99jc$nR:8"DI2QGGjRM"M+qX_rOBnq\_D<lN1mU`0_+1C[WWGD"K@s<MRc?>=cqKB<!b_rZ2<)9f?a4b
%kO7m%A,0AFn0k13VAG?0lGDW1NMjsH46be#,jaZnH!g[SK<)!$n\OI85!)gP*Xlbs4`0H860ZJEgF[Q&T(Mp<KXcKMZcP>e7[N0$
%Rh$#1IGH4-(_aOGfDRZGr^X@>o.FNPk!&_netU%e@DKZ^Xu%(5lBDB=q"6<nJkk80Zi@)(2?q[I-kge;a75/\i`e*(5po`WY9q'(
%I#a3tI[E1PXLu@%XE?u&/F(\EcloL8%R_$<Y=9%!VJSHi#'A;m0o/r!k.V+2'RI<FNa58[SBW<KJni/>9WZ_J7k^jY=n)i2=Dh7:
%gSBMaCb:CIqL,:Ej(XL#]Cm,ufO<5q^rE.ErK*$#=:k%=::>gJ9kR*op%2HH*a&fTnIlOWIdX/>P0^_k,//MK2ui3*5DTN&N4V$c
%`p(0lB0n&=c+;UHA.p>U7CpnZlE#T+aL<oORKt1KfQh8aZV-W8aT/.neYVHor?J&DB3)L0>r1L4@a.?d0@J+_F]<-dk/`+;4rhXZ
%5kdi'(S=d:&J[4"4sVO6)11t<b85*iQ.f:'.Cjho+!$7#2nSj6$00C2`E*kYe.rKWU<cP4CDP_$IMpH#H6le_*:ArKTji@D$t1?l
%>M,PbcEGP5HNhcD)j@f;X*'c2's\Z!c7QEt#:VU"]#g4u)KYAK-kjjQRX,/%l;-X#d_U4/Ya7b,oG<!_rp"=*]BBc'7jgrRbOp4c
%#,co)O(U7XorrmK>6;ChRg6:]p+66Jo"=UD<jDYTKTgkBiXMOFn,]-4+Q\kL:C2C6I)3VVR*eYZ9YN+@BA<F@]4Z;$Dd*Xj#ZWK0
%qHu&6BNd89Rb)>_^3k0j>j;%WYF@?8k\Qokp5[o!T=1I@bEY]amFN]:Mcn6<T#kWFl8;S_(@?4]Mg:UjGcN3Y&!%ZOBVWH,(L!R"
%``i3/#+-dMT/nDHhgQl5=>*T[g[?GTo2A)cTe88[#FY1Cctl[4^<s"SnkF;>HubHp/k#`+e%^r46((iqq:V<u4b)cUh_tbF3QM>b
%gTF`5SP7S>:U)uO06\$H0Tt_m_kG^&`6i>M2U^I,lJ1IM!ttEEY-`<,))o`aD-gXsnhg@XRm)NH`c#qm0E!Y[/Up4RAj9?hcf8Ss
%jo)^%8JMT]d4pg;fFGsX1I3T[)ga-!K0O9=TouN[5*NP[gG-6udD:3RU#:Z67UE:uR`Z@Cg-9lRS]>gc[[FQfD1[)-Lq_Bo@V_YK
%RVgu\(!\aEPH4!i9G=6A/Sk380rjKiRJot8\XGM4>.\ohI^E0ds,E!nS%,;/?FLH\4it*%),MX6W#p6I^*7O%N.D4Rm176>[_:lj
%IdZL"TA$ua.jMC'm2f64Q);;MQLTL5c%=;,I!lo*@i!2Ra(KULA]*:.Mr4:qq^#J<G8f/_I!s/pHgIot;iT?2`DGG(%?^]<"IBWS
%9=NU1h:3g[iPb9N@QnGVB(O3FPDS3s04mK^'UI6P5.-t_;]Rg/?#345,)R:/F+Bgn',7O)m-aQM#.iZ2dd"^-kUN43q@@Q7X\q>D
%^L2\dH\S)=!?<@,JKHh`O`BL\ll8*[\tJMEoN-(u>mep9@3n.Mh+[Xj[g00cp1XI_5Lja=c<O>@OtqIQ%%5OG8+:;-G>TP<V,(Th
%'`>G*>[:%II67tIRbkt*o.@>la^:Gfp6p#6dq?5E?Khr2MZ"T'<c?rc%KSP6n`o^[:A<1GY#b=:%!uTaJr]MAWr7<)5O)F#`Nho1
%Ti:_4",([k)p0;]H&6A-FRsZsC@f^QU3Rc<2"'homskP(P@U:^Wfq74Q/'\4%\HfmLj*,V[.Em1$OWs[B*pb\A:nog.oj?3DXr$e
%kA57DUTo[cO^D7Y)#F'C;VJ'!mo4&tg"fAPoV@=SO)JP'TTM8eF_^8>$8q@<DGGF0,6h+fX7I+4k>:'_1`(2?W)nuiO&Dm.1\%Mt
%EP'okB"\Fq/DYt*2H9ZqJ'.fH.QC[>`B[L:^Tn[Qprih-_t2VUj]ndu[J3J._XtfQY5#LiO`&1:7s&oFBd5OX`k`r@GC?7si8&&k
%%/A"P;8La'i#oMkhnU5h4p[E1$.G7/b[l6Ld&En55oNuOE6(OSGA>Qrog##oEfK_7b>C%,>rh=cG@kLZQquQ#bYtN=Cm)c%lVDFh
%K;j&K^&!:c]D%G-CFn7YXFes2O?/t_!1d81g7uN1B@+,rD`1\SYskl90O)\Rjb*HY+TH[>RRh-JbfsLU'%C)B4e`CIiu&M/f'<e/
%MTa[hD7UBZrS@HVrh5HV)P<mU^[M@Rd[Sk3p[M2+.)k)9NLXcU0G9mbb*eZ3qtA"s;Tdb\os"u-%))&fA[47=3K`.R\U2M#=77Mk
%LW1COUB>8CecA?_];1`cLXSKTNdZ?F^:(K@&,j,ZHuc)f(shCpiYNhU!l*\"ZupEZfn0SI2E.hQ_JQGT86obuh!+Ys8JVZ<5^nEE
%RmiW'Q5gnM<^0tA1\6"#qNant,s0<I]g7!-R]+`*m@Rq4RGr"*^:mRtX"mc$?.ZN+@7ZTNS-&/Ok##1pK1kDeRj>feBh-ddn@5lj
%cONj;hE1uuA7dQcDl*.nUDE"?Y:HZ3`b]oZj:_g2dm9Z_/-]P)BEgVk8@rqgXL$#KQEs@3U=1qI`!iLPqT_tdmCc#tr\jL3l<#:"
%dke%O\V7Y;'`*^L0VhA:!c<<h8#39%c0o19QdlaW]Ci;NX,"tF$-\Kj5/D\m5UNeH#3("b+&h"UXUQt?2F([=^85O<@7XB<ch<L$
%<n5l#AI2K4C`u#Sc[p@hI'SjiM:ScU4`KGAXj5g=.FJe'WBIrmDXakb;HePGqPfa^[I<)hB_jFPD'XVb_l.TaF-,V@Vfo9,]HISh
%8\n*'4IEYQ%_#ubQO>l*q1j[qjnH@n#:efgmo9,X5`_>2kPPbNd(Q\QLBDYJAubg\>JcPc_sC\-.Q3Uh*f>R2S`9JE&-ZRhp+b4>
%qtZZ)WVfdQoUEXK\sQ0%GN(?$FQu>F106([<2_A,6>RKXF(-%`rrES>eZfteSPH?C0+Lm6N.(cQZiZ9_dUFr]:0$o'eaY&.2RS]Q
%\N<IMeonmThEB[$N!l.6P"WW)+?GN4^khY`f^kJqR\R?>$qm-(d:rXYQT'8u.`G!Zl(SQDh836GVsR/@H@r^'Eq/tr>Lo6JCluka
%UR?BH>__AD3!3fi9anL+flI#Eh+kQr3Mbsp^!RdCiJk5=D\gB_Cr,3Bm0?XY^C2tt&NMqcI)NF@peos,[sS,Zkg:P;W,om,lZ[9N
%mM&ma9/QZ!mmF7e?5pS,U>-fs^91`u%=@2SXo%h['gUNUf*Hh4FnG&c.j$<MjmV/`B&A#JFUGn4MAuEhaN%kk4SeGqZQo1r\%oBn
%_9Y1N(I,t+,':$\pV4sNl\I\?fkV0T;Vh=B?cY:_c2r$ro`MS`4]i6Ar%*413\L%*^Ghb$IkLckpV.1,a!#lqgN&NG?\u33A^`$h
%Ks^*.ordWUK"_V08Y<cMDS(cj&<.ctGNfdW<qpP&bMVin*Vf:/Y^]&W/$^8-\[*KF^V`Dm#aOEqHtgKQl.],ddU\`CUl-ociE46Z
%+NUgAK-27#!KA4icq6q2\KYJB(RWCu=!SbU@pdh\8B:BJ9)8kUqDa1L!9AD*EYBLCH6,>#6M`A<p6?i\COg,eYb`ut8jH1q+cr1T
%8cZe`jU)qM3oT(#i!h0p,])l+E8&@YK=fLW:3aL,%6_M*Z;j<GIKF_H+?O!nE6?hbG47<7!hgO)8!N,Os4c$<7M?P2CZ22/*SeAI
%-%#mV_KoMF:'ap1='rbB.33tji7'koYn'%+m<]H#N@/PaI3$qie5rW&A_FF-Q&ldJgJoqt[]lJ!'(DM4J]8#T&Y:h.(0^:AY*6);
%anYKjXe;5Mn/Pdieq$.EJLp&Tj,lT(\6D'Yl/7G))a@FG!>HkCl/?5[r5cBX'1fYL%L0\TkL79,Dq@hheZ]bG&,P6E#%Rfrir:MT
%4bUVRn13nU'qZsD$;h`^!C$3/3X[&TfUO:MFp58dY]L_KqPo3!#q8,/)T\'[!f@;[JNSM%&;2-n7hD?L"59Tr3qR!*KZXFAPs@gg
%'=NsoI).]VS2c%LfIW]c?rl75'L5.uigo;iVTf1]fKRY),1c<j*8cA8_";_.^_W)h_?)KIkKj^;h9pg``s;603\WgUef$h>f`oF:
%0pZto.$+N2`;fs3K$f+uJW(l@<<4[$*6a%DI;K5M"@'/l<qtKrTL<Kbf$R%I5dIOG'6#oj.1hju,p<S\A-;80VlLhG=NaDer5:XH
%!5T:M=5!AFF*NFU"/I8WYKGG#=-qJ^'93,N+Y,%gkOg;0AlTJY_%,N-]5eP"A2_U;O>]uBK0/<b6boq,L]Cfo=9shU1$JfKY5S<;
%o)k61=o'PYJ,qOL8f&!K73kJlr3Em88V(5\QQR+cKF%R73^AEAV+3i1@L&&'(,@(k5`c_p-#JAD6jBkQd$TN&!@AVS5cas4nqplU
%QBj)ACc;n@*YOg!%=ooYf40mQ-NYD0I^hpEE/m*f#OVsr3[0=TMAo/#]a0570h;kd'*pKdOpm%pCEscO-HK=_UD0L]_hi^MSLq(3
%@#2[,fG1'fE"1;1^lBO]JRnnE:N@&-%qH3o7Gn?1<X_q;8#-u:9ACG9K^TcZ.R<b18>)2YLa-";q(StR8UQ+PG*1R2)*AGO#:6B8
%fn)F>Ns#I^Ebs!KTned8.O<pRV(5rjArqWN`Q=o$r;e&!3>MuNk>=VK'KI$f/05ll!tIVRN_2ZBQ>:dJ)cKP^6EC>eHiS_LmKI]p
%PQ`Tu2NFV).(N"c=rE_;;!F.56,j$;U4uQ$5%/cl@>IS1%3U8e*JM/SU_dH:63Fh#QR"+JZ5=EX==@WD34^Am5huFrpaf6,Iqkr"
%l<0u-W%X2tb&\hZ>Tk*lJL%L7=qjGh</O."k=H:iN[AKBD<+m!5$SZQ+<aPtTqq6]hua\#$u%-7>([_s(/=q*8de@g8O\LQ+9JqP
%:$[BW6R#\W;PYQm$XAQ^#19>r<3r72PY]L*UNj4cVSuJ2*^_MR9*UJPWX%./CkNq_V;m?APdXSb(q&g0?_h!fA^ksj/UUTY)J&n`
%16=Gd;1b*H#Pu[Yb%Ii3K4%bb&K@Jd'L%/6:YU#RZSg2d67q),W9]WW"[ku'B95r763%(-'7g3bVCs(=kJ_u1jLM?m'm$io+oAQ[
%">b^1,76+BBL\?1"b7_5d1Cg_HrcQS+#[n-jTSgfLqjQ%;c$,^<@ot)E1s_[Q%6+%9q\&S8X=u<iVI0*@.\\S=:1$pc=CK=1uV`U
%g25?!W:C++:pBXYre;oUQkl>8I#m%XCk)S?m3ROtb^cMYA:S4FUTL5opD'/\^.S\6@bl*i:C8-g$6Fm1b62m=VaX&4fW=d4cq1OE
%PiFb4P%ZQnQ2.d"ZjjeTAl9CX4OY8ciYH5=B\N'^+\H>\s(KUWC(VhZ_iiN:GXc_Ie?u\W%7),*L,N5s#XXT&D%0<c*m]bs+SuV@
%BF4aTn@XJKO5Rj=U@UZ$`UcJOX7AqG)atE,JE)VH"(rtuA/5RrBsB>sp(CoL!@$G1?r8=<Cl)'*!HI?9'7bpt1;NGL_l8e.-A@m/
%m:.td1hp-WDpm6$K,h6G:`A!#CWmh9[BG^P(5YjIO+aqnPbARBVU%/WVfB$MZjKE@!nk!h,r1TC5f)0[D3q'/_d.+iI5i6d:Z1:j
%2\N&TZ)^?0#^HcN$5Fq>J?!i(l(J[8kbe0E6,'1`TQ!;#o84R/bQ/F=1.\.N6kFU9JjI1G/<U`_;`fN(Rm[$Bff"IF<%nRZX^c>0
%$dVM),(u9k\t7<$IL[HTMn7(Y"m!51=X\5N6fZT\21juqg)Kp@<3^\!BEOCf!p+)E`MO^s4>.R:/0Ts8#a3i<G2sei7)N^M`"Li2
%%1C&TW:rh#+r"_+Nj/QIP9GqZ*JueO!%g&AR>!O\9aaIPl2_?.E8E^O+#k>D_)"kAQ$FDk)1DL9R>6;Z)5(oHdF6/=A?/oY!!Uq8
%.-@b7%`X^@'=8E?ODR79FTM_k!XFn1!hf%TUk[7HoMo'+":SG^#UnER0o-_)-T2&J[)`@^Td'RCL>F%V%-.mC,V]*$Wd.WS8F?g+
%Po3:(Z[^.AgE/^02)Bu(?"sVbLai_=ZR4K1hD/;4$;H#:`#YG%XTPU,1_)f[@i!`!?7=PjPeq5XBL+*hXBgP4VS5+\9l4!t`L`;]
%jGjf+fA'@s(<=4t^>U,T\SQ:H_&Bf05"2.KrgNohH5Hds0lA$dRgf,p2kclJP@&%"*bYh49,\;:4,P)DJVq*Ucp$CC)lj+l4]tLP
%oDg1h*(%X$0DM6LD6]-MaZP_7RB<]on<AKM@&l]J4sDp"FL&m>#E<qb=-3#hH%@+Bf!nT6;CL"UOU!":'kopT63%)MbocYEAjkNF
%+om_dZRqi/'oF,(1'BGH$G'EX1/R*''UD1Z*^VR-iM$C?"p3psW4'K*EZ"*;aR9CDK+;]1b7UVT/WK?4<g49ClB/X\W7GLI,49\!
%@*,uls!0`=ihKLeE9r.:&to;XB1kE0E7#Z6U>XgP-(^uJdBIXB*A6$Q9gb!W4KZTB1kJO5d+SVjBcs+^J-gsr)CT=?(rS%0)JB+"
%M@oo)3J9FI6NgQn`:+cGMbmph</=7pe^MH$0Uk^Y"UI4EN[V,aQFZ#\65<`^M@*cO`AeMr1Qp!uc]%!j7'Q`s>[oRa:uN6)C@OQT
%Blp-WjF]BWdgD8Ep^g\DmL#F02[&a\3RaqL4>r9Y/DWWR!B3AmF?CCr5T2#:$ah8"+t2A>_(Ks@NY[1.N0+2,i0c5)GM5PMa5ThR
%_%VaD041F0dQ[PigfI,Q!GhQ@!c+"G#8Fej&LEE3UlDWBi".53!.hBY9*#bS1iYW[$t-*A)25(cOhD&tXcu<b@3pds+EP%G$q)-[
%#VOan41=A58^1*$/-2T?fR,T>4d>9rR\6;<O\q0fNRIF_Ce]<+[o)LET!4GtV?Pgt#c'Ul>/>2ufG6l`j`s/%'J+TOpP!AjSjQ@'
%_SR-47lDcEAg.5*;rsJ88rNiraRQYET/c$A,07+4#XtOk6/]RLK>TN6A"FeiE/Q+Z*eA^tRq]uM.W`*e3OW(r%rqik,+sku6\N<1
%0^8ctZKTM?IdRN,l&oP3B8_miMujA;3*QX]:*?3"'9:Va"X^b>fX)EE=r&suEcig3J08MkJKZJZ:bJ\]%aY4*d=uU+Y*k#T+:uWQ
%R$.)i6_Q+:^WIOW!ek+Ch@=9>"_pP!VGIha(*&&A(^o:^\AtHjp(_!-.W%`0Z8&ik%@*V`i-A`'&&M^cMR?S(B1'GQZIm^%J>A5l
%15+B(2boqg0aY:l+;.)Ocgm%<_nm*RSe3:L"X``lmISF.`k\S3n/pp6?P:Fi+Xp6h":A-5km;o)X3^/iqh?4]*1L$H$j%!\$WN&n
%2CZ^tVInuG"U:E@XERn1THf2lCn$&5'N"H.#6;.OMU8+'Jg(Y'+UB$!*7Pl:6.ef-n/oYa:&IYPTUUS@$"=M,_sGh3*#_Qg3Kq@Y
%#Qe/e##SUF#m,u:1(Fel<Nm)PSX'ePC]^PJ/6P9kBst3&C*).@"c@\=TP4?J#UmtUL:B]k$o9`o%W$4AItmj3`]+di81X7H!8qS;
%j?hMNo9$SkEMkL$74nUqppd5s<+*J)D$;%9D/BJkQ\1?t1Vd9-%.u_\"ZE7$4O_ZTKu!=9BI*cT*)mK*+e.*C.oLa/X)O%S6%'Jg
%3Vs8)&?,Vf8#0rs"E"[?0fhmXh%dp)()i3BguqI87at<_a.O*TM>"O#^pl)DUISWK.645M3!%[l^)6!V4a+H%V#@mgSX9NN.A6G$
%aYGMZW_&BfLd?6=Rr92nS#mGE?K`saaEC:JK#eHgaqb3B?p$'ZI0KGLBXi[XifKV9#n^Q(!]=1%?3P]!AWVV^2,]X$*=R[s7mLKY
%i_Kq^0e$C=:l^nC#lREF<EL`(RXBmp84!q[.K^l!N'J`VN1kR[=G.%(fm,bQ%g$./!^N3<B*c@1bcjfLBkb"a9/PBX4+Jm-+:LK0
%6rg=//3JFBblST\<J)\)TqmfU"0p407#99%`W2$)f/?K=+/?^p6NoET3D>(dJ3k"T]*P\ki0COOLC/_)MpAt%Wq&t'e(W0\5s_J;
%.>0E$@@TqhGn*u#i42]EJJQ;[b<d;5E,K(sOjJan*YT#PPJj3j(dKB.@RL4E%2tsu68IN`#_eBpb=[13lsO:(Ne;$90H-k5!e$#!
%:s)`m#btm!0-Gt3)Re!IELCEi&e#$L0G1`hjqT"2+BApdPH\VWq@6;0_MuV;Qt#lAH]2RP1pKhZ$]-#k.qC0pC?)re&fl5()m(6U
%$9Ra5cTO_<K"carFt>I=7?n`fTR>.SP[e&+ZomJ+&-RAuk-_Sd/5Q[h?4@ft6s&$Y2t:%tfRh$e/D4]O?^l_"7am;R3pbQj1DS/T
%6*;k1@o73-\7.?2k[[70`PGP".Rj"^IC@9Mm@(1#R2c8g[MS.U.D3GmLHTAS7?a9US--,"9dJ=%TWO2"@=oB;B4hD&"Xk$'7UqGW
%7b7YA*g[HE9!$cu%.TS0o:@W]WBCSuUHPBn^t4s<2KOUPMMZ`+%O.>i^k*_)8HoWY^jQh[^Q=-]_\dXiM&W[&!gBf^egVY%Np,":
%%4[>6:jO.AGFsMWY/ugd/;EX/VJV,m!%KGdJY=8Z&f82an/6WEl<KC,!)D<*>6,8\kK&QLo??2RNjLe2i8I^!c5MgCV'LY&o(ju-
%PO(>W*,R'1djBJc0el$-$SSHA5`a_W!f$8('H@?rh\P9$CWp?>Af/j:3%i.XR)Hq5(C"o3n,XjY0Q;s;Ui2X<0g2@-q)7.4mFbo7
%9Th1\HqY6a**9!cP<b$5_ts^JKEt8#gB!0l99)hUGjJhmQ83^sLE1#0%j-JC^pG*dWGPD"!E<a!:Y+ZmQ:*BY4CUR._\"#XZem*#
%D(8p)Gsi?1\2M!"+6s:OjKKTk?s5Cc0ELanUp0AF]8/S,(/$<R0hjCA?YIgu.9]Nq%<@5e/Uk(Q'`7)Hmb*M;;%$q@Yjqd:!.)*-
%UP]k(jd=Dc(K`LB5=g!mq*RbI,ILtd"MGD:S5YM;_D38Qm0B=9NMMCs$h@iLX2&hX-?]doU31&cgCg&O?^n\QV%Z_8H^&\RPYYpZ
%6$#X+5s^qV[a!YSnf`bK#fO,;)!n+R$Y_NRN+PYF2*u@gd9\8fJg?5aBST[q6R3.E8m^HG.+Aul%\j84#K]oe'Oq?=/HCKU%%gJQ
%TVj41!]D*7QSN>#h^/)X:^;\.JscBGU`:.D^8HUt3X?g0-<-%&Kp7Q>Qbs&!@[)iW,l?Y^+<?%:$4<JS:)k^ggO+lTfUP^T$83)&
%!+?J6d6M`3,aA]0IZ[2Z\$EPB!#:Rg,/4a7'.=&0Hp0CFC<uL^Fq#0G4%@;7aHan7&n&QV&STSW:gTR"Q'*K=J^J>\^jN/K!Fela
%@gn5CY"u:/R8^XCBC1>]P+5ArM[q2Nao[__*'/6\`.f%^*3fjLb^D&Qa'`3_D0>[l\"lB5WEp'#.Yo6W/!L.c<sO"F%+nHL&oPpV
%AeL!GOfQPQbb`0*N^]UT7a_LYdoatO<?'#`VCTY8Yq3iQ(d*D?T]-&*-dMe?JB'DYRh?AK(&&R)3fF]r(oBk*l;JC^TN!G9K.%4]
%O=U[uGsPf(od1`hk:-S1TGg7e3$@B^jN`g65SSrVCb05W\?WsJVTBDf&QX^u=PJB-*a`qi)\"RK-4j)`<fL8MY\m:!gd?ea;3;RT
%U0Iep*$?$r\?8[g>-lMnplhr(a@/J9_n&=l7Z_!caMhCF`j]'S?qHUq%NK7/Te=[tV^XlUHDI!GF=<sCBU6nTSA6mB4uWm`Bsrt^
%l_KDW1eX6e#e0u"U03e[9bP?fJrgisretiP'm'`.**rl+`d@b1drkfIcGjOCfq=]M;P6l[3s.5L61BXBWDlH$d3c(+5d=UNLZSp"
%/_6dj9gtQpJe`pF_VkWPYXD;fJ=5j]f6-mk=(pSg-9A"DA"j8GCUt'??=5:1TM`5"i!MOk$K%+2KuG3Zbdu_!59MAO1b)2:AX`B0
%EXUMa9PtoHMOd!u7B)XZi7tt`=9>N1Cgjta,@ZdsU_Nm;XZ3c2=_MguR8Q?#fu@_L41i]oAPr\.3+J</3BjE<o'_E[Ym/B27R#rt
%K<AI@"RRbA\04K;#SdJ?>T@G:WU)fo@=4BcFbErH:padR=,i%W"BdMLa$?<e\RR0V/*"0<<=sg.Qd:3*B:5^&O]Ub@lC]X]#eL_8
%9o4%H"FI?d('@6Dhm1n_%O0:A$%!&Z"3^$bmd(Pm@<`d2$E[BL;AL=BoUnL#_oY`5-jppMp.]uM7%pDtFY!k?j)C;<EWkbngH[V#
%%Yu"Tjg$S59-BIJJX>fW5mX"GP9hHm[Y]6Jc)sX@$B?k@6Am(^?'s*lBXM8*);S(fcC-43Pp^sZUr:n%!iXURdLQAAJa+U3\7T_0
%&P<PbKFr3/hkUXVF?']kL)EB\EIie<R*j842g-!([0e^;W/)&(-'/,$-nQ<g[`Jr@78aU^HJ3U,Y!pHJNCDB^IBua?ap8qj/>dt+
%/M@Os_9(DC7*"K%&b)'Fk9?2O)\?(3R3Z?uWuO5Sm_b#\@2sg)Xb5u=9n&@c<,E8<;A`>0RF3Pt/Z9&UWnXe21p*EK%?)Dh-;A:/
%`oC*!3i#m]H!Cl3bX&LHbTkjXq_Ohg)l"VVTKpAe"aq$,<#93kNLOB[-M).sq'\d#@b<GKr]uPpL.]U@@HN[#UF8XC9Gp6W[Z+r0
%PMp2+8Lp_RPHGDn;T0bTnIC+DKb]-FnK6,@2?MLIP%jW1feSf5:gE/@EQ1d^cH$JOQQX;-PNOC6j[<.JR"=U@j7``&+U&DdU-+@_
%(I"="Lh#))BkU@s5uD=6bb2f[,E,liSP?.>FYf'H"e-W=PQJmcfnHk.848S,oE+YF>hJ(U;**AR<#(+R1&*0Da0XPD_JBOI=-AI!
%ng(GR[5g$O\BgDt,@.gs#`rV344&'ZEutXX&Oc;(+#&-$2<)"Fho&17k\d\-+ut@.#dYqlL650aKV-&Dijc7eAcP]-<JEXc,HNVC
%,LH2&.OheMKuXgi*&A'1@PGh4o!"K1n4c:-Tqj1e8Eg<$Ze91P;*>mnH@?E*ZC(cnISk(Za^qP_F@\q4V[fW4N?HVjBd0eLLn6&H
%(c2mC&_E6g@u,hA7M?!4D;S<MGZ5&B[p3/?iZJ?c!'Hta!*RHL!5LRgUJ)ki]G:WaZXA0:75\8&+Z,/IHc'NlP/\R7n9tWHo2o'k
%7*]G,M*5:o.gS#d>dAn7E%!&iUrf,L0ck$!5b9[\W#l.g/\IrG]<IC23TS?YAq8N5Bo,D%N^O2t"I_qZ]NO8V`q2Y^8PTtHV%h)d
%S2;<8`,Z]qeUF/40fIftQWngq71K^'`km&R0t)s[.<Z\sKn-U36"C8CQ9>`)bSn_`aolb`4,12KJA^Kk4qg$p=;PH[$JOIN,+,W*
%Bh]a[a&k4-2Dklj==.,a+/hbb)*h,)"]WPd@b[-5Ts]QI+hHmrE`FI^C5,'?_mN\_?K0%JE$#8Tb<FB:CG5fm->TJM`L8PXTfJ+K
%L!9l9=@kf<phq,#%OQq*"l1WtdGQ`:p4>nPWRO\9U;u%FPnN"\&S5k0GiZ9E%$VTXU&kRl$iEhL3LmBpm@^MAAuh<REBV?-*D6'6
%_5fEe;5Bk3!Z8^O#3:$+T$P=?10cVj#utEn7$^s^==,BoA!rp[D+`&8LSOrfbZ7,,\0_rT'iOl508EA#*^S`!GX5EOE=GecP_,Fa
%FUdUe+h001P7RjJl3:*5+g`]hdhmKNSO@JEQ\/D#3A9,FkDED(^:8el8eGI9VrJ`UEARi_d"0f'_JIC*_r9ZnU.t"&N@3XJ)%\N]
%__J'/^,(3uaqBWT4XAl5E/>_MC9bl1Z0Fk@FKnA_*$<-$>8S"])hRjkc,iK9]a9J4%?9TCA\^R_;ap`f[Uj!`_aR2]irsRO*oH9M
%&.lGc[2MbG"M$Gf]dSt*A&M=Fbp4u.ek%XVI?,VrR#Wps/dP#n)aTe%JSQjF)i.!6GbL!-<[!jgB%L4j^-DeCPsIQi\Rg:D0\4u$
%#`.7A;1T$)F<+JWUMGBBANXbE"`ra$_ia@Ae@1$+Jr;?Uo!bGN%:'B5+:=q&eQH-D?"W^hHm]55`o$olMW5-]Vqn=aKs*RGF,X9>
%bUZndXq'YX`k8;#Yh5*d2rA,QO/'3/E:[@jqkE2(IMUqeZV7pEUHMQE_?KcM2DH#UYV:gT,D=u3,(d>q!07CeM@eljSqo"=nQdZp
%4OQ!9'+_8k-p^Em-35&3-rR>0Mai<`Wd.K9LH$J39!Ha$Sn^Wc^7ukoE.pk@@RuZ#N@BqWQ8KQFC#@^_Oe0U)?631[@MOJh!D(?`
%6ms5eAud"%;opnjB_c'l(IPFT-VaaTGRijK(27%G]*(X>LrlK+XohNbF>Okc?5uNi1q>1O1%n=)X[b6mNWD`bb<?/")<@LmK-3HP
%'1#7f6!n]tNp>R\=42)m&L6G@_g+?$nUb;%0Qi2Me@ArnY8gDS'Q7Kl-BDO`T@8Ra>s,3C\%FtS=jf/E2J.rg8lQI<p6<n'd"i6P
%)^H3n"o3*N$HF&Dm;l$,CK"Xj[);!U>X(RS'hW`bd!*/GG3q79iF8:o[P<!M+O.;)=:?fU"Y_!di/J#V0n[;bcS[]g$DUHtg7lqG
%?CW^c&1StOVS],5hZ#is)^IdeMrO;&O=aISrC7+bj@S?MoRQ1$1b*mUnO"9h/k^R^`Bfa>`qh'?#3-%Aecl7'rZJ0.E<(p#j`$/`
%)A(j25q^b6;ll6cM,h6^=ug!5(HGcT@:N`g">(9Y-<1jM^FU]A%$%k<Y*OHR*TJH',Mg4A3CCVejtO9dUemH5k)5TnBG:4(S$G=k
%%=qn.?8#KO9VMe])Smi7_q!CAS;r/1]!&*CN#,-&c/!`Jl!Q9^0YBgjf?s$ETYA;/F=tQ..=BEBiilr>_q-m4VCt4a0opN:4YAC\
%V-jE:buDLkGI.[AR?n31XI5;1hO"!'?uMFn__d&8"rIo3\c7CAE1UXPg>mSTiVc?\`Fk<$_A'7H06mIMF!=V'[83!#k=a+uF&b;#
%/JfmEjdul+Sgi"'4+CA!9Z[jt17-p9hrDn_FK^cZs%-o0-YoH<Y)O/]*7V@*!m28=N=acVnf;!LaitZ3@On%C*_0Wb8+$s'p)Rdr
%bkRH9\e<9e#21\3q*;-"E.`\DUj<;+4pN</*"'RX.,Mh[>BuNM@b+MKJt&K]FF:EeC*0Dq>n^]^i>Vdd]afWe*[l)J.,D.&/K<g+
%0mSEG[!dD@!7jt+%'nQOU,7kh5cqq*_(\Yp9/KqYU4Fil?-HE]"OUg4bat1e/^C>\&Rl4c)C^N;R.IUcNe`hX`<@lj67!CP=I3.T
%`OB4=@MtU[*a]n^r3[a-Jt=It9;jhmE0h,%KnoBt@QtbQJuo`h3O"/ZaXL..:1uMl;Ku7$P7;(.p#,Ig#_t_.@("otPaOBWG/oNf
%LaYr#Yl09`Nd-hI1)=+sN3PD-Y`0i')4MOki>C#L:.ZA*@!rR;$u;&I#K8IblZjg]98+\qimKB((PQ>)au8OVcBu5t==kS]%iFg_
%49`tLXc+DomjgYbF?"Ao`hpY9-L?UM*D3XD`Z<'idB(1lBeR\&b@.!a'RsW0)%C=Q4h9!C)-iPh-F<00e@0D,kanGRO>\K>`#pEu
%F??##,4l!L*Ro_RY+pWgB[.a3*59HDL@k<V>LC\&;jn77r`"8_'W<33+)gbU+X?fO&Y[.*7L)LXLOjrW4i8d6foT8(;@L3]M8VY]
%=+S;t*?bM_e6J5lWWQUe5ZGQ'Kr>S;6VPGDV2fZ&;p0\@[*;d@,2Q!.VYH_SX._6XFl:L\N6dr,l'a2\@T9SM!g[?!Z%,m6$lp1^
%/rNe'L'8&-?$eu<jZ/j?dl%eqCN4@sR9!3r$a8_#&XL/#l8lM`Mtp*>,Al>ZHL6k$E%l'G>59#OaRDi6[)!)1,FI#YpJUKQ/<1AT
%aL@,"&EX]01bYaPEF(25+nkG['?odJ01gG4hM%1Dn-?L='<`I(FMRt#A,'UaR-['ML"UEdpY-/Kgh8f`/saIXT2:[^oGI@CP(gO-
%pY-h2;q/o$>V8JM!*Z?O/-M[m^'H8(#;`*+qq>lY3[26+K)3r)rkV11!X^LZF"Inf4r/TDEBAM2o]dQ1MAU`bKt%/JMC5X8,Qt[=
%J:pBVJfNkU<UbD7QRBVB"]iIGBh<5dOURBeg-Ca:S+8e&V=54E][0D2LNkV>9:Y7k0kfWXR6$lk??)=S%4Yp7VaXG&U8FSB@PF+q
%bRtoS<gqGC%U+7W`WSF9br>GQ-L>c[:i\t?nMu=s=+=cMjoOG1bK_/7+#=$kfg(FpBr3!eYoZF5*%0Y[KgBVj=uJgqpsL(?0cCHP
%>N#sA4:34*H,WAsCYs_!@e9]2Q:72,o,.81R+j=7c=Qb4?6XE2i!kc0.a2*3m%=QB.tJ_uPYP\jcr]@X6]UR26$^3(3]qe<&?`u3
%T+7KSoR+A0AqDB?k.=<gd4snj?Y!`"fub9NV9qh>S(i.3kM-SXP`d=T^8Sh%"_kuZ6BE_-Ra`UkOS+4RE4QKo?C@W1aY?CQQC3BK
%Y7\]U%t<8c%cWu+G0D!1HbRR[F:cN*GhId[O,c'#8(+ORdZ^R&"!Q13kVNpD_mfBe;XuZrSdE\^!6>IQ[Gb=5Kjq?S\Ao'dga&`8
%49df,GZBF-9Yfbm_-Kb\<FR"J22_.hbj@2pE^XH$)XH/._>R2iWg7#gigB)3n'X8$`5itUnh^@P'tbZI;Pfal_uR4^=L8F[4F3]`
%oM#\Be"6*10QD"773-XHjL4RF8kH3s@IXOXH46Md66dDZEY$o-MHqJ#O!VK8`5knhg6geS:>f;A*mV_@,n\3+b#3rbs0qYQ4d.55
%>'ipA&&#4NMdtj+133c(K7mbA(*M6MNJ`iaU2=E[&HA>J/s0/ahe4o2n\)DX0:@q7c\3T#'<k^,g%.'@Dc\ZM$K,T&$t&8o`#2It
%XfLUX?"XTUG:[qJS[E%\Mld'9Nnp1/A(;kf:lS^g>H"W@DAQlrMKp,,Z?V'3rpG3jOna`bbc-Xl$#hY\.s"o`.4g7\KQm!HGeU@k
%]4<pV2OeI#,L;c_!<UTa.CpR[Lu,Nj5#g)h;&MSL^>WbH\NlM@/(Zc@<rf7+n4(h(Yj_\3'<:n2/XkVu\.b87B*_ecd%&>amtN,D
%US.6"I4!I,iJ%Rd)87b!5hrA-6:2t^:San)$<,tN4_E%pnQqt@aX;h+X>4$qr>a@(M0[H%/2TM?>UQE,_4kI>Z66;j`&!tX/a.RE
%5\eU4%;.QsBrFf[$*0X/A/F*jfG^gG"gu<pV+iY-e;lCji\0t"'GRB*^hU!cm/qA88ms_i<>I9Ae-79i]+V,_Ui@Z%2,Q?a'+s(-
%W2+]#p;U,8%E0Y'639)3,E)2B&>?_-2868B_&/lNK@h8<@R(es@KOm%"'B@TXTYr.R%E.$#K];[?GM*tW;n.=FDD_TER"kZP]?W(
%aNdKrOdigFEZ1Ed"R?u1cpi&7OA%W=Yo(TsSR5@3[^n;.EaZ)pZ+FUuar(1o$Iq13*8C'cD$"K4Y]o!)Ff)0n>BnAD-B?b`pbE8m
%3^>7]@l[_X'XfRcm>]T>O6Rt)]]YUohb9dhckpIo1:>W/3Y[fMnlC]hVZ<Cs!J;'S0a+D?Fp(qe#dpI`c'=^ZoHF\t-qlTO@B,2l
%.#ObY[k#qC_cD8oJ14.j&u-tr'Mqt:l:QXF`<(C:[q[<mh-Rf<'0\b'!Hm!nDt8]P"Ukm^2%^RWeBXI<aE(>Pm9<+r(n+#_H`kRM
%,&cQpGTZ+]'tpV@$b/:j"h>Jsq@,+V515(1-Ad2<UNs^DOO(?Nc1qdI50.#6mQ1<`O6VH.`<6'#G3,NW+aG=V0W%0@SNFJH/p=#$
%<eRkH1lgn!8h0q'jE/LIjN^uX,*BhGLgdUl?mSXf[J6iLVl\5p1NM+'&m.7R9I!`<OG-S;_jr;/BTebKO,RogfCZL>4Ro*G:''-W
%k\9(`jV&l5G5IK\F[Xe2Nc#oJ!``O@ctj2S&Z-rr&=HR,$9@e1V:TOTV]*,oKL2_U>`fU2]H(-4c]Dq\DN)4dm&;@0d@771(nT3K
%"g&8<oA;?raULo5X63(u66bp*.-C-PQ@$&D*:(`u5k(^4X],Dqh9X#-IJWmHWY/-%,-8C"Ug+RHD(a(am1fF.\%BVm@c;0DqpnX,
%<]s5s@lfI[?p`39;rU*j+\>FSBmfUCVBk<79@n,SO[8K4'.7/Jg8a+>-+I@`3maF_/O_dY!cPLuAIB?Vl562Z"^bKbBbL0j!7o+i
%iimt/\,/c'ldE<Cb^@_k,e]$Q`#<>e5Ib"d[r_HJ<=G+X=k+7^(aU=0&</`Ejp,!Sj"$U#C4r+GR>;$r<b5c3Acq@T*QP;>Q(fb+
%S8A/,WeCpT+=sNZKk,MI\[:Z7=^b.s1NHP]8IF4Wi<l/d0r_7L_2e@c>7'U@p?CQ0mAOX1[GKHJ-'3eRk7jT'ClRhS3t0h/e7CN8
%go/r2)u,IT"Zt#QUj:h1*@pmOOk3hb>J1sg7E2cZ5R2r&['16OX3U#M&JPG,El<R:l8k&p#df$l3YA5BS8d/NTANOcJ:WI%<#XXk
%`1;jSA;#Gd6jabgGRJHid>#h-Ef:h0[Co*k7=^*R]8XpsA2%cQOIKaYnV^ouZ=Ko33o@(rJ*fGC+(ZAoiF?!@cjJ2PAkdd\eYT6E
%aZOj8QW@(9>[nDn6OOF6<59V%cM?R-kr#L3/4Irs5\/AUM5Uk-%mklj:c6B@+ML'WkC>a!>)/p%n]97)e*D7%3"`'+_aC7i[t?ER
%[4U#sNsrE.C.f8A%V@k\j]C=d1df9)&QR!W$9tS$YU,4KQ=d`<%5YnPrMNUR&J6m@R]?d`4,gPTesuuieu(;1Ar[:VP/kddpi(RA
%\QE/67D,)=#G@GCCST,\-9J-*Q3m\Sl<S]6>1!j8mS<LkgjA+L(b3Xn\J"?pig+,=J3P:si8MOFL)k\2f$)Z##K],.h%<m_Oo_M@
%]&%n+Qo$C>3U$-RmWr$@01MQiC$BNZ4U5$P%:S758'M7'rP<$s3Qko8b5%`1aUMZ8T/3!F#(Ua82eia7&nXq))@.`$ZO]1b2m[hP
%;(1Ls5hBWei:S'4,0:8:ML#:<6n+iP%YVd6&UT3\Nq@&Nl)f,m58!;gH$ns&KCrV4NWD]ebcIX?9D7c#Ek5ON?pG&Z-ngFU<m$%A
%,A1rZ#Z0/k=6GQf/OfdO]4rg,Xc[@_Tio*nf0mu\_7HWI3<l]6$Qc]&l;<Q;U1BK3(205h:VLD!2C;<5%Io=KQ-<pAi.i^bq!$_4
%7c4mNU,pIoS$/2fJl!\VMbgd`4DQs/(2b;D:jNElI;g?V/lgW#6pgfDZ8@VWfsl7\/c"4`AHMacj3Vn(F/eohXf(YriMm9DSs1t2
%5Y3XdV3<lhniulMCD]L^YC_O6dr3@"7n($IQX?YA0fA]"bspt;Yi=Pn^heKG'_6'+kp5;P$i/g0(hHn]`><K;QJP%!J<#qUlSNOf
%VY/KLN#PF;8J3V@Z#%QZgSP?;,:4gM=,I1YW#s:I]h+8b;h7(^9#\#OMD_i-*RQdd/']RX5m[/i9gq&iL9SP43^,Mg;dV[m)5<A)
%,rM</Go%_Upekod5m8sr8(o]Elgo^s*9>orPm@ckD,[-J]^PG\ajA,/"jip[&iBa>UKSVo?LjeG'YWhZ_!+=Y")U)@/Wd[a_Vd=f
%aUd&hYV=A+'1gp=D?PLM>nX!Ll>:6(m+*`.\k@pGlsXnc19Q^r\.&j=IKKmEbO&EQ?A[CbY/]RtA'fX]^.Cq#<u&-2]Sqiq[c2(\
%KNf,f(Q'goGHA_`Dd$4![:<C?^eP1%qR#=V9(mFO2ec/XG66GmBoq:E<0pT$)O&@=XeG_ca+WoZprl*l.Yo!>G::^T.;SQ<7qI)^
%"DqL#dN;,<jR'ldEV40!<niQK$J5rTTa(nJ%eV9Z@AUI]V-4H=@K`b-Q4=BS^u2KF3N+2^Ug#o@7h6<_C0sPYH0/K/EHm"A$M4"T
%22.,gG3j2<SHY"I]F]CCL$q=dQ)6KcEYU@.`,l-6N0S$(jqP%A`AP]o6S02^.p$nHMLp2ea=j5rclH<7WeI6'&ac>"!$j:BWY.,,
%6)H(.4$K.>0DLn!A@g)(*1:QG5g#-o*H`JaM/4Q[+`9)BlI$Z9g(F0L3f=o?+tO$ZF"kMKd`JnSj;`_:q]r2=C"C=n)A>!>1$1#0
%0pgJp5WL8]4XC=T=K#p_O.$W7SKP8A]#I6oMsl8r/8MX'Bii)(,*Z;g#dV2C#!2&HMsJHC=.MWlE_%nbC%Vr\+=f#oOAs@p!28C7
%F/U;eMB*IK&+(lp+B\P/OS"?P6_T,qhjTiSj6[c8,n0I>C_oIUdfQ)NX$c0E7]./V:O6!`"\OFYY<+sY"G^P$X=?o2g$Z2l^'tAp
%ZH6aeXCpT<`VPirqOI)eiXAhXPY5g6CMkr05O\&bKDYbK-cd,)'A[eQL6%IMcXEts0kWBpE+5S&U@pL&M.\2fH:mN2i7Yrsp.fQI
%ELA67Ts(;hG.`Gg0^e.5JB,k;%KHdnd*WI5<'NsK@VBs4O(_IN)LbqQ$4Vdq"2GIOUIl#lbLX^lfd`42U9,O+>J)UP@2(bOMU/9k
%mVBHBF[LQ5dI2@/g,X;l'[sY*0!-78=%:RtNc89gjl(5$1n:#G'PlN>6hL8sg/=ca'f!Ks"df7:YhuXq+R=tBC#TgLqOqRn1FJq-
%GlUr$[:I@,*V.pYQcgH%L'Z?/e)>a:n&'/hJ/tI%(bJL3)"oH--W%6?js;o9_P,=?a5EN#%[e&WeZi`\L/U,M(^NhI)rml2]2cI1
%kT&1Z+c__$;>,]q;Z6"hFJ*\WJFouImb_=;7t<"!:U-TRoQYnLo(_IYl6]oMA-uN8\NGX"9KO1k=sW(#i.*SR]u@cf?=8LP^M]#!
%oZO3F%)PpCbH7[J%WJkh.O6=?H=Neg<B/]0^ujQp)/.1Zpsj1_K4Q(G9<,6N">W;]I@<25B;GW1m;Z>\RqX>9IK5onV/NH9_mkC;
%%P0_6W?Ru((_MD.-U0L7kejMU,E]3T9rpK.I0.]$qj8_^-QnM3"9d?L!UF":J1R]4"=@P%jXPHULQLn%/J+>,UiVQc.$T1FE\g.5
%9O^IJ34:S'[9]jQ+X[;a]B_;1?u_HSFF?S?G,jogIR:nr(F`XM+sS20E^t:@h+Im_9EmFC"a9^?Yo+=djod-BT%[Z?4qdUH*e+d.
%Hg+\7:en3SE4:?3KbqI]Zea-3_/CN5!,V;]%,RgmNJqgeHS^@J`kE"O[t9]qfiS#k"<#*TjYfUBh!P)]<dRTN*kiGITFd::SYF4!
%WKr>LcSi]JnZ;);(p2#n)aWI8F`GF\V4_W9AgpPm'Bb(^2^c<hR;[Dt8G$jdJM-##1'K0M?//DLQ1cg]C^s(ZDu-2m(tN)aPg4mh
%NOkQH^R0^"D]6g"Z.d>s8Sp=>6q3uj,sp.J2dj=rgta/7P,dW_1+ZZT')<l_HXl'=7gkNj;,"S_>U0h0?EfDe7C(oR_A%S&f$ad,
%#'4No&J?]H(FtMIcAOTgCT:N(+t-0(0YA)e%m$Z/HlB-!hFks14G'0<5;$:aI^XjiZOo`6j-K*uKjHMA8b7SZl"2'mCals8ro9.g
%ZCsDEm@5UK@WtM5)NT7dS+TTD%6Q*5^T:#T#a_&),p63^d,j8$5GM3"9?8>F=>KjiRYER_.&r^m9B[I7"m+cq!_D@LN5q[#7SP6U
%V3%C9hC`*+2gs>cT\7mR>V:jEU"0ihU8C)JZ8E&jI;Dsb$>&TZ2@Z:0@gY^6Acs?RhN$.nN6Ed-&)6S.A/?P(<Ps_AcHq`^hl]$u
%=Vagsr"dV!R#rXKQ!<m'6b,J8a0=D]Yh,"nKt(/`OX<[cY)m&q+g0s/EHcaM(lqdeR9BM#.D?agZ##N0UU\W*ckDThk;5E./Yu9a
%_qO6$*mU,3YulF+/tV-O#_``?>3qYacPefG<4P^(OE8GQkj&ku>)m_o;Q#7?AjI$]QO>fSG)`jL#mIOW`'l?R!hXCBjKR@ED:kgY
%3\Q^;*"jGk-L(+rTp$e1f`ZXLgp3[J7rYKJ!4mN2XH5!o"SDF,0C'(];;=UK+sHW$%Gb5q:YeTt.dP5U:>&<K*]TJ$4M0bpM[[BD
%E[Wcn*)G'hP\L(a7Z1fR6ggWum7kBjCMB#Pb4I'33a[3M&U\&%`8gZ;%2o'pFZE=$Qo<Vcbsj9&j=O8L#US'#\r]&^3PH\M6KeR<
%[mCa[eh@e.8>uu8(,VX]WGO$o*7OKa$UN"E2TaO5jqUmge]-./;+hn_\,EnP)n.kMMJ]b;;B<CD?&dL.Y3)h@$<NsWbfPT.dAe\a
%lh*RR$]O;B]@QU-(an8B)l$?3Wt.-ge=hLZ!]m7[E2;/R?,cpGji<AMEg_to"fKd\N6IKO%'baaW>,B4hsBm;m9j/!6UU:'Yj^YR
%KgOL9.6'7.#Ecs[P*\</5dfon.ds33UY;CRW<3oq589Y0!*B;9,)=@T!'T:D`#!pcBM5%dAdAGOg!r[7kBnPT=095a^qlZ0AXsMP
%=ksH,:<_ND-H(c4c3lT4Z=soIo9kVlL:bAB1TH0LC#)umMCjg[-E-ap8Xmlj&$9JV8>-MO6elQOU6?a?omeA`KZK0p%3gfl;)i8'
%q.D*o71!O+]dX0>dQqd4Rpt\o-jE@DpIbiFmp-[6R<"4Pk(.KWTj).\6qoTO<Dc0>s67'X/;hm(`s.W>JC]2UQYrNPm/MkQ,spIO
%5s\LD$mTM66T*#BG%d(qGm;2DZ\:9C45=OmeKn:;L?0B.g+1h\Fes['"i)R(@g/af#`,L*p[<oH]iu7`_oS7_r#6HM2/$W@<X!sl
%4s6)e]bK[%BgAOlr2HF[FJ@fV"l$rkN[k`o&#[D+,G*>Z78dkrD+K!A^>366?X""mUG8>,m.!^8j$_%/9aP!QGs#6Y+SWol'@K*o
%-n;Gc(0ctCf;V\LXeDWW,ke<mLfRVSY0[a1)og1?KLGGY&8#Bjc,q.(c0f>L8.N3HmFb(nBub1B;<U0cI`9BG?(WLfGD+e8(,S1^
%;Mp:Te8DE<SUg:44.WRa$7GU7di22cR4[U#)(P#Wf8b<:WDKI(j[?uO#RLr"5[QH/r7#cU<(Jqed7@1/i"q.Pka]BWqrF48(rfAr
%eNs7MmTY2o>NXoTm%VDroPbmR_Itd:\i'Rl/[@5DJ)Y3T#AkYt\1/m)=hVN$onr"FGCg/rQSpL]CUiiU]);-INROSSq63l.UD-t3
%28>pB,$P%pfHnkU[kt]`[E[f2ksM[fKAs],.>Bu)W'fG0Zs_5.$[qXsGi']!?>O)cR=\,3)k_,rAD)&o0fsHFMo_l(`gg"#ZW"['
%.9t91hF9[QI+]_'2=adN#^fbU?to`'IJHX=HSirMNEkT6PqjAQ4@tKE-^G%$C48KZ[M7eYIbV4WVWl=lcr,b4Q6u$W^@V$Bn10-R
%+;0[R`[hkfZ%C.IV9\0>>RV*i-5Ke]fHIq4Z/?dQ5(R6<l(928:D%d!F6_]Ki].#-X!p$ALkd=-bY<XO6ck=A'I2,-en-]74XSiY
%p?J>e5&nPE;:?jH<`:2S-*AjsWj2:"dL>Hl#IWMBA@MGur-K4]*\.mbNj/(Q%*5JN!1kaTWZ*bA.-80#;1D)nrEo!aj!>$oeH'm]
%(9EN<ScX]c>12_F2EA@,g7^0mAg1$!Z>qNc>]:jNPfdLo89:m>R-taH@*WNbdHUVT=jQcHTh:kF]PoVTc(^t'Af3J,@2X*l[#WXA
%onMZH-h(i>_'j.)@%>ZIQ$(Md?*m(-%iY.O)/e?9&ER_@YE5n%O$@jIN*-H9ROEs1FM$$9-l.'U4_2TKKX/f'$MDA5%t17hChlat
%f&sqr]_Pp:-4M9T%(UR)!C_,t]@9n25hZ?NC$J7'LFUrV4]bmK6KG$1X2jF)/P2\?drH^0Kgm>W0bl"&O5k4jo6)-4]$\\8;Q?\3
%p\;EbT4f!.Y`+lj1/kt'5DP[%p@ZHegE<&9ffZ-@Gl+2a5,%m&q1O:b,t?<4$>#^U#?EItX_+"bb-Iu7,'t<>9+ek/TjB/6K(N^:
%;dJKOgknAdGl4N@,P2G]HR#n9dPgBpL,RW`#19]e6fDp6@#/n3M=hp>+[r&>-hj;l)-[VA!m]B1!lE/@IR@]Jgq.UJ/&cD*M.SJo
%<V3h2WGq.3hmg_[\Tt>m0gQsIHB.OFlNLo5&[9p@e>]jNhhQ]SFn:KhF#1*H$A9lY;/Y3Gfi!U!Vfh2J(8ekDr`gK\q);WJ=j[CP
%!eQi6;GF,OPZXp`a1JI+KlHr#+k=iC_7S,e)h94+0FNi("#dTRi1jPr?=:LIg[sh?!t*S4,XCq!AN-u0W'_C'\*SDS?a-U#-pBod
%3VG-k?N!^7Mn/g7-JC^h.ZBO6EtUfeC([`63Nr>>W1iN8Q*><,BlmY7Zj(S'R`%Ker$kHL$0_dNYZUIX!S([T=\1MkDkY"-m#d-Y
%XJAsMW(o9d:=7Ruk>H&,qT!/c9$#FFN;%C*lN[$E@:1t3SeVlZ"DtNs5PE&UDR.b1Q]Ph5X6@s[X;G)FDfC.'g0IjcYcK(;J.]e^
%RGp6f-]@tn6s&lbO84AmaJm+tV\UI4(\s_*H4WgX?qEl!\eXuOKVtd#`2fZl_YU#JKMbb>b,)EGN/\<JL>R\]X@huelh&%_.eo\$
%TWpn(j%f5hXR#l;ocDR5o>inq/NKjVq`^a=%HWnCW(+<A>AN?Q[lQ66T^f2>.\PW"W2#aie<Tq_%!p&6.SCsnp#tF*NJlASE,4%a
%VA<=EA]*9pT->?dot\$sAl2UR`M)h]X.&4&ZSgWlB^C\AW+D?BgTKl'W'G]#iD/n2D#f$[jottZbOU:^Hf`kQmI=17Bj8c4[W>HS
%8OIND.L2_8)P\Yf$Q99jPi86UC8)]Vd"I39m:>2aQ5Jj8h(-;!jOMYT3aV=,DYQ=B-3@cf$fX]'S=q6H4"sW,]Hdb)GR/rtQe&dL
%]Dp4R=k7["Fa66g%C]i(@<`VJUk+.r`a.Rga5TT;\P]C4OJZj7-?g(m*%+H_KH>nfP3`kg]gI>WeIJ#?Z;"h?*Z?`3Jq3/*6B$nq
%:mV8gpje]pD0_@?Ib1bd]=CP]6sS^&k;ksr=-r\<X6EUb!dpo?kJL]9cOD`pZ(H_1#/]L<P(Q;c[@Yak=BA^cKH;[P6qW5P:*WRE
%ibI"A3jZrr$.5ou$5s*l0O-)rdI:DQNg6n1eUHjEXej-Q?cq\%5=8KR49G]:4IIbhk^&.qd?Fh9Y^k&Oj5IfC_I%gcI'K[f(%CfQ
%8UY$o=_de11i%1E`.Ut=dZkunalpL9:<Zag&r0\nqMR[s/?%JV0eno<$t&?q0&f!d^)kjeQVSQ69_1cQR**mHA^IFGj%HQ))!_=J
%qmVi!(=eNX,;'IujnH\]Xc/"]<2S"b!Z,]_Y!eiAY(!&edj]@m!LL,((!'/A(dF[P#On6o5gfKN[AIokPU7$]en0a#Au3nk:]EuO
%9(F48bB&\[V=Xel6[;K:<SHZr(#jOcKL4uUMg;6sDj0\Sfter7V67h>?(T?<D(f]+!QkPIUdY>&;8i(-oLZ6LWMPKT(Vk,;jTS_B
%_C@U8K^Pk`S@2.$8A.$cP]maTlV>H*32\^_#U:ci'm(S?'<Kb;(H5V?ndPR^[jBLC=Qe(1Qm9mdr@QmNO<!LCD6:;/mBcc_a3'U?
%d)7Sad(;OEE$qZ.>)6\-i9>H,#iks@Hng=WjUO<+=<"+gd\l#7[8MFOm(9$p3H_hT17NYD3MA>#&#nJ1*MaaC]3$mJ+^0Z2Me,iq
%7%M4s':A_;=te`B;,;l?';CDg_.2a`8\$kEflQ7q=#P%P]i*CDSB2Ij)Tt1O<fJ))$7F]^ZKhV9llffn^@dUskhi7F9$h+UCLbNY
%Wp`@S67M4qh\V6Q91M(,h5=+V9(q3ISCYoH/g)Y<U0inWqnh;eeU%-uA:bj=-'O=eN4q$7X7e@uPZ'#.kS);cn3Wr,;Ss/O>uHDH
%+RpH84[Rt$Bd&LK.no?B/<Vk^b/8t`n4&61kK#L8-c)uW'HX$mYH=Z06mS8Pj:I2F/Z!)nG^b^Dn4"Y3'"JFE-h8JjKf$_GQ27*#
%&82JU!0&]io$cGh0bFbXnj&_jkp+EP6RDtWPcgaK^KWE1+uHBgZ`#G8X.:"-U9d-^5'"`K(:T49nY#'fG6%k8_g'!4(-/T4A^\*E
%OR<P\K?dM2C+MiSP,;r4f5/RPm?Go63-s$4iuJ&IX#r((1d'*BU24srlC$cEDAX\SA<bEYh'#s/-56@Y6sOnFE0*g)f!<kW(eHUd
%r9(Y2p^-i\*^QKgmAp';"H3T"S@]C7bZ6'1&tYdu[d6h2"oY[SbE)rrNlE%ERLL]\hT*3'p.3Vj;Wh%"JT5R`UDD]SRp^2e\1-=?
%p]>\'W(=R'bo"qZL^s6Vl88qWljj-77E.hDWf+OEB"+f=&f%j$I0S!OXJn-cS3YI'5QH*YCCT#3=H"t/<)>,VSaF&c[eiU<^YsaD
%_(5+N>,7>c5cVj[pkjGZ(R05;RT`CJ6,=q:hJc$a4`%2XjR;=(:8r+e>%5&b:CA8q&=70?UQ1q2`Y1A[NZrQ^e;?eE7*e2-0GnZ]
%3cK]FDl<0\1b5UF1fgVVXl^s1&M4hKI+767;6TjsJD!2#REm]hjGAs+4!p/'/ISo+p.M3fFK%[tLNIQdESe*OX6'hkZAe(@bLH'o
%f$!BBn>9a'O$6WbA_8R=]lOKt[Y=YP)ZNW^!DsH35hi*P1.%6O7/2=s>6lWN9a,F78GT`gRn4KuIVF(UVI5Z1&D(P1e/Hp3-XWg8
%RQ9_U#jC%7BkZBNOIP&U^2)?#P4iM>;h?u!ZpagdJH_ZE7`p&-?Q'.f5kRt2-)b?J1RUQNnm3`%70ih_6]M!+-uIO:'stMu8P=@H
%4-qHTRKmsHZ_1T_hZnd+r<'%JL=fR440bO9Q:&!dRceNmd=L:72ndtX+lK/@77`*GcpehFP;XgNc0#dX(>70;#K#@^DUHl&PG'dN
%od58s.qB_3'ht\lTLB+5qFuL8B#`J,04K,50ub,"3<\]rm"Ke/;K#Xe4(0%_3W$^9pHbJN<e`&O</a%i09]$7-mGq*l5=;QG0/$"
%#u,-S2=h+_Mq5eoIqhST*a0(5p"iQEV`6*u'l4<O.k+"ShCqT+-i%4bnYKMSj^!IMMrmsb7to!M02WU-+*]1MC@3=n=LgL0&t4!c
%OH<V`2[TL`9=K)o@jCZ386De0iOo"Zc:ZC9Y&[7hGNIV&;AcK60V4sg+1=&oQ($,-`Rl9>)I:);b"FN@H%uTaCA-Hr]7`q2=h#k^
%NLl#:r#S_dW^grqBJdW8ER:k1BSpI%nPK2-$mAfSUYmiY`A&LB5cpM[7<`g=GCoLk&H9,l.BHH,]S=?fMi*V2;0RBQX"dDsK`[%@
%mJ[0d)Qii:Z6%6X<\hhu`rm-HqmMX+P3(@')p/-a.",ZI<?5E0ZZ?T&=[BMb.]&ps]2R-5]p//DQ<3IUA14p%[L1GScAcFFAGKUe
%5d7uuqJ3j\&Z.0M8'JB4r$:%#E)Cd8F"Q]-K)Tj;\[5PLqVmBUgC?UD?_gr&7AF*.g[KJTk:"e-@Ul8'U%LR2/T+(h:rb[UV57Eg
%s4V)FhlY2<XIOIq)bZOKe!/i2`-kImAsq;KX\HqiYDIQT^D+):2O;<HpIP5g>S#Mj/a;`8gu7BKc,c!^'T.l2e0Vp+jYj`_=b'XR
%BqRcR+e_jfN]F%/3ZV,Rs*[[uGWDSXSrX=0pc.,kp@CitD]Z3<BEhNpjtU-VDa_c0%$<"Pe4A(T)6)(I]bieQ=n6SZ3#f9k`Q9*9
%#CWis4Ms'n=&aG_G6+C?;%^=t4Rtl*/%)%\PSUPO(Pq+?I(pXB!TWS4CNM)*U>oC!ajM_+B[nVcg<Vbse7L>11?';%ih-_5`OB*!
%>UVh-BUSMCgotJSNS08.=Y:>]*IF*]gJ#f<NL!$AKsXVMc!4S.?G.._0uCarIq$-pgCX'^Qth(q[#]E(f&qRoke%8=DL/QOLSN!_
%&$dXgKQ2pZ4brFfjiC1PdZq4H8"d"fr.h"8%l'hYeMl_,.2am.Pk0Uh$$QrOBsj3C4aD>sdh6qh'm@G(mWgV\&7e'[b%nV\X)K-I
%.-I)"@=Od_$DM+nomsH$UR`&?^Z*G_ebpbn8g==8"41(&Eaon_INA@q%6-t.m`U^\_\$SOID_fuji?=Dc^P^RT'%kjM^!Y"0LNiG
%)3p?Dnce\`I>>1JL)pE?L(N:H%;2uB?AJDuhAl8d*n28cM/A;//O`Vp.d;/CP6oX%\P2FkLkfDa+hop&7(o@BX=ksGX',0-0I<)2
%LZ,la7iBb*^tXG*FK^*K`9Z*%4g,=h]qB_^0B[aX$a(>A0*`!4%n/j^qM]lX:kef%eLn9=C1;VKlpgEJIQFIc*XW:3d4o/:qEs:h
%gT4+^<$Bq,<#LM*n*A=fbN^R'Gt&[7lh]pd?d>,W"KFpGkFi=3J[p$U^lVDOZ;l^61^gO5#]1/lBLljt>HWuG^+V*o6NZ6#'sKi:
%9@*Ltm@Hqu^rFF8Fs'I02`%-@c6^$78=%W`?K;LH%=!,mTOpdWqU\O<nloInO?[pJj7=9/3ML'V1Xq`3-Eg_0H>.J9Lj@b!,L"35
%5#;$b*a4#<kS2d!28C@$G`+%.%Il#toPaUfj9A3N*P!,`9<NIa&,5b0IRd4kd3%LuNPR#mk^1G8B1PDUa1ca+7T?#(a+cNp&,4Ou
%Est6V*%gHVr"*Qc<)Ur=6Hss,b7jsFlGu?&7^jU_1IM^kcg+\?:?nmR>tqS#7?0'\H9QBA1UNIPKs+dc:\I@ZqqG`#o@*TA5#7VK
%'DVl2jdO!H!P1cADc)8=>m-E'Xc<('*I7u`<+KV:g(:E*,!=c#I5u4P:es#lXJ:YMZdD^c&h>cLhhoL#'UgP_V_.;I."LhAbAIa;
%XU4Z3DGdV-$u2c;/85"dCU3c\MjhWtjE=<tg35U(m-.>-bS?Dt]Pf7PnfC*/p6Hm/_i$0?VJBNMS'rum+u*t>.o-Cl,hqVK)_]G,
%+JGe]DL%4M],Rc9$Ze(NFmOMS`_Faj5P#g\oA25D"@EP;Q;N@IIRrGWn826^*dYTRm=4")Ts6eAp>r[Wl.15V#*kX3Y%Pq+lP3F@
%$^$IHiqokg3PX(]HYmt(L\G1`c^L3l]$C/@O&s['326gTdp4gQ^\5p6MisZm?Q6/<O'd\>Eo)1M'KkK7GCk6$o4r&<ChNt42SOI_
%AL-S-8AtV;URG":l&Dfg^Hb_=,H;%*hmn\UkT(GI[BHmsmP:I-ZZ]p_Q_YD&$!=2c1^oXrIf#*tcJR(@Y-V3""(TMO0Vb6`3eDhI
%g2^S;3AA0ak(3'_=J$tc9]s+ljQs9sS\m,NYfee6-TDXF\$ap"g&!hKF9N,Q[!hFu'QVprL\lDS]HE=.__"Jq3S=bj\HBFZD9*&B
%CaCho0iQE&YnGTd14#K'=[,2n%:pQ*A9="t84SEQs4ssQF1hS?_]1F`,5\gF)pF^<-ph#`YH1`>#f93o=qZk,Nr<UGM'!=OOo_#"
%R8?F<Z;94jDFagH>mY\^IRR>_Mln,XQf`2B2e;9+BXbrpD?\5as'JYZ%+UOnOs:o.,11M!qC%A#)396Zmh(o9_Y&`?%.'ARZfu^o
%IcI,NGE-rhJPp2>j^hW<1>Jfq`)Y5m=F0\OY<rg@Z'H(:\/T&D*q%3sSRtb$4l>L\.fBkYSSY-g;21O"&9`lA]/npUCf,3;DMJ'r
%>&O(:?V[%kF7YgnQLpp74Z1r(QHE%I%Q8C][sd.shTk][H/F^W;a1cdjh,k)GD4JI*Vr.U*N9ri:_?&%Ae0H-E_hHsrTX$\+[XR?
%NqVS9GrasfT0VR;FVFE,5/o+OLsD\4f@t`a4bP*JX+,#CcrtA.qJs_`T8\`H1UNRW8qWABhkCOEj&/'l.e!6qjA,J0+&Racr&EJu
%oB$54`U/%W^=@9@,Iun3#]X/DZ"kuLlFBQM\'8gO*p]_fAkLIR)ab@MdE;RF/3'SajNsLo_$h'u]PE6CK&\N5;=90<EIL-mDk-O/
%4Rm9`*h$"I'JG^1A5o7jll0OhDu7!?A[)63'^'@i:s6;=&,51uO(?+l!EEN,7gFu/#eI1d=XG/E"IPJnB!"rDZ]HsS@_trl[s.RI
%&!Y^q3*N+W;l)]&=!ok6/%IJDN>*Y?bA$%:DMATu*Cq"q``=>FBoEZ3.:tWC,6L$D-,n@`NIa<n_]7A/4gKq(H6(TBgV9CQ:>0au
%/h^SoCkIJ1LpeN7Ztdun81&@<rc/NU2("=Xm(G?UfOmd_r!!lB+-S8FpKbr]0t^&2l4m<4I3.h"BsYD!4IHQOiP$.7N6WrP8/S9:
%RoP[(Sdr<BU3-6K6ZSjrqpBjVl)PeknbuSS$.j<;oJ>!%kBlUM?KFGKC[[`5,?Wf`om+t*eT496n7okap-[63XLFssTj!A%:ga)T
%o^EG[9Xsg+Ds/81Vt7WcJnNACd+"J$@Ns?@JeT1NrN\n+QE:\7+ksBV-UORi9>QS%V7[8I>Z2:)>YKD"6?kQQ0mj&rGTWAjX\X>)
%8?T=;BW9$9M=h#^=5W'^^j,%VUC/u6+&[47Z\<9NeDrQ;DGDW@pJD28jO;?(B#8[-<N');=r%uoq`89Ga-`h6ljXPaqL5rXkC(n2
%qu%5sRmNQ@[(#7382%d!^@t>NbH%V'%EFb'IN@kJ]WYDGq%['7_,uW)NnrQd$ACciJI^N5^(0s5TqLZIL02gPcbk/kmjhgnbr90q
%4(5H$6UhgE8N[IDPe!h=:=s17rI$IicMTZQQ]q8\qCSQ[fWDardV]XUUC'_&+H,+Fqi4l##F6]Lh7MVtinhS$4`=ZRm2pn-PnsR_
%++*B8b)dMt5ih*REo6_.bV2C!oCQok"c)k4gm@Wp"l3,oE!2gjIL(L'AX/c_Kpo!"P^%W2<KY<,g@]?<APoKMa80gS?d5O;5+s<d
%h\Y4s8f0A\):E0hZ1%Y*&9[O(ID[#8L\p>K?S4kh.XbY,qX/Td.Pt'^L[1J>IEQCl7.gGW*ujpT9\mU74`<NfF4\A-QHB@'8Z'JR
%"X2C.L/CJ+D;Y/(>sT'M-UrIFQ*6b/Z]W#kVt7W/+KoU4TXkq]>E'M388g<nWH:G0IEUr.qJA+(2S?03fAXH6pN8c)ANWkRpDn9o
%/#/`1i2cCQDra"0F,^+Ncm>lV_gS-NouMNW'4q;mjsRV(o^&MC`MN<$+e?)j*V(H@mKM[+#Y>?jFgs*fIAIa*lcc/Ec/ImQ).c@X
%qb`'SH/#_RdRFFJ4l/,%WN#bUesDTcCB!rH]bEq;B/R!cf5j5?p^d'(U$=n8lb`\C`!6UM<'Q%RI5RBj=,V3&kd'0u9T(2o@)NIC
%$#$NP4_;]qI?Q?*P:OKf=n=keG6p-,_C3\DiVk"7FfCNZhPt-QcqftHfWI(LTNWEZ87Yg"_SA1'[6Q=,W_AQ"9gVCME[gK@XX@A"
%j!&n^o,Jb_G$VOjSfO1cF9dhGFs1]oljE*AjP/'a6%Ml7\2CfT-j,9%'J<U]l-n(uI_(cK#Z8SNp?4qj3!P]D-Q(kP?Pt_4)*u]F
%D[<jt+q`1=$>!7kNm#0/?0A@e2btC!(#8Ht<DcPBJ,haMD))=*QIqjhhQkt7?7jF@ARbq5^i;mh>6oeX_".UA>YJje"=!<>5gZ0e
%dlN(YU.RteqJmHU1@WjP)&+9_bEtYs]agLh!YMu6VRB#!bNFV45][!%N]cTfr%UJ%3eC=h$T7]_=:D!)di&J6'9sh/P_>r3ecAuP
%qCnH$UmL]b%WlC@9O2XRShf:NFL^ueA?-a4.<R@-,]TC"OupaqS7c9WohF?t+KW>*Y)bLI.qi,G'Vh]/GDdPeZ91_n#T.,nA*[=N
%cl^rmXd.#l?%QLD9NK(!+^'d3.]Iem>0(Job"r5[J<gpiPTdnOohOaal>9C]G7Cfl8]-SKp#HOr1/JjX6LY*;$:r`1BaTIC^nT7,
%C.R0]TQBB5.^g(.=VBb`KVp2a+"B%9K6kXX@2n.DB'%;j#_XP?i0CPM98LBTJoE67+a>h4[N:AclUVOX?\@uJ/\X2so$D@Qb(B(:
%'1EhmX>W"PZH"ms=r[5F#bQp`h*$=!IObnA;,Xh\3,Ir'k/JnRH6GVuUWlXLg-8W6$aq"*!nXUrSoNg51MEK"pMF1J(qt@FTE_\>
%a?m>XQ'jm"(d/6L*QiQss)^%,+A#cs+JKkb%gS'E1.Xa0'[(7.&d4K9;9*Mq)t&Yr-Z.*_70qP)WY0]l-l?;:V@Nug1rDZSSL%]J
%\fI2]*BJLDm@K=PKkdDRe'#;A`us&Um,LEUb6uqs:m=SJmR%'d:/.Ykk,a"_CC1%[7$*Pi=SY%=jZKN./dMN,6#5VmVq(,q-i!Y)
%DM><S2rut^q8^HogM+:cV'3F#I6r<>/ZFBtJ>AREh#5oV8+VN#2+MlXGkutHf/-oUZ/)uddZ2FM=L+!N3XIg8k;KeZBBP>5IDdTR
%g'ZnV&S?+4)%YWA[2!&5k'"(`j=8$HL4ApT8A6dT%?%`f<=S[jMBVf=-HbJocQ7bmDOIh3Z]@$@ZJH%5JNYBI6G41mOaBh]9kVq\
%P\8f$-?tDqAFq[Nbe[JbWT[&$rbjoj[gn6ZJ&hp6D,!["B&VIDZ4"CgPAEp,*(f@FB9#,\Z,-@62EARm>Df]3\``1Jd]/gp;N1uL
%ZSmL2<F3hB=GWObS/$kV^S.2S=0\G<"ghlVHujHs<Cj2^q?5@I-H_!A@sA/NJn-U\P%KCn"c?rOIN+O0j\fBi_`,gt\5L2Nq;#e)
%N%$SLQ0c1`C:d"!f&O23[XSLp9si_n^!/b%4<,`-)lW"rJuCZDW!NOfJrku';8NDW<Mu,#0??-?qJr/kh#""#I,o4q$XQ9_,b9N!
%lG>U>XuU\7C3@r48Khag//Oa+Xp?$l(HqPTVu+rhr)MmWFm*>T%+O*Uqg93dN!JKR%dsQDq&^J#]F3F9\6X&&W9J$74HUW.?7bJI
%ljs;@eMZ[u`E*<gn`-=Q6?gjuFYA93W!Sks!.#KL]uV`Xe/[D#J;GPbM3)="?qnW-6gC9Z8%3<F#tW^;U&(cUgkY02J=rG"/.lpL
%g2R$gN^(V<a3<qL-$HDaK>i;!%qs=e2,f'j&ci,-AcS+68BK5YW<\VD6U\DpPCoNUTg@R&L5166F5I`$q4lKZWf=ctnhhAZN:^hY
%f'5Vqk96N<L^D2S'Y.c')7J'W^0)W2T$-?L02H?rbJll'_pI2\lRb0]qbBX,!(=`_ctCG/7Pq?Q04/m]cn+Efk)HWL[aV`!Y*+DY
%P4!WC["dVh=,U7e;Mp/)9=O3qN=s^lKbcXG4AT4m9N$&AB/sA!eX>6r.9?l#'nBNr-%,W9`iAiJCl>4>W.Oo`>>hM;678V.REd]m
%f"mV\;,u6lZGIZ7Nt*U)`6i?kR;,lX!;8fa!<%j-O>Ps>a\/S)^cOSF7%I=mb"G&,o\\>7k6[YhJRp?CNE&m:(\k^^luu9k+)@]m
%Hj;(hq[f[G^-D\3EtM3/dVT_-WcF1$X"Ore3BNnZA914_-lktL;m$/B_!Q/9r9;2i)oI>kb6;)(WrEE`O_tZ7^Li@#eM=QQX3BST
%SRo@;Z0PBl[]C!-;eajnHNIU_KdLnC4f!Ul@mp[[CC06'Y$'99<ohSYBm319fV6fJ,$)6eM37(>e8PNARJ.bl5s^*)i;RopREqBY
%Qs'qW.XtMNXW3d+_r[BBEo/\/5Xu>d"$UTgA).@fWoYRW7gXecTu`V?&pk/J$]cDoTN:HW='SW>&?mE=*4^MYf$1iiD=i*i4bN$\
%;cnl[T_h>$!LuTF.DTHTe%sYm/P`e&jHF8_fWB83[cFgn%qu6=$A^+@LDq40Ipj3eRN'UpAR,G4aBSBY$LY'4b)ZcU[jbP-I32tC
%]"bqlMc9)=hsVoNB\BJTh^np6W)qF7jND?:GZ4LY&1<On;^<Z,D!5'WndbTI#^pT)RQ]T5KTN#(.3*=)]cq4_h^L>fU-M1l92ViH
%Wu,K)q>l7UYZ+pS+(p[9+H',Kl\7f<dS%m41iNnr1TOG*85Ks<98:o96cp'M@$rMU=6l]$oufb$.6Ih#3JQi=K@EfA;T^n2]cJ9j
%+(n[oU-e-s$_JJ@?8s>=rPi]'YKie][Z8,L!ssl-!Xr39;f!`dY8/F,G_6@$agh4kmE<-SqCtZQW>BR(LK.W4,,$p0bI1iC,P/h+
%<aCHt+Eq:jV('$p9^f,@;pAUA]=M-#,DhV0A$KG5O9INe^N%*WP5b5n*9!%R>RnmUp$7T`>SO=E<)<dQ7Z('QqL&Vb8oD,>oqDaK
%N,GQ"V*aF5!!p81a.jQ_%PUSBiQ5,3og7mJ2Y*Z]Pbn0iEgN4;p_9(f6-N1H>$-60%BWh8)83Th'W7rj*ChFk2MOPsM9cT8>JC-9
%WLW<q&TOV`=E8b&nUm(ID7%Sm_k.;#i9;P:'BH[ap^=1i@Y)5Had5EGBU::^.KY0gg??n=l+ABF'iTgR#+X'PZJud%aHJE<oNnnY
%A?S<dJ<?FffkG/7(qHeKLHDA4F<>5F,S<FtFYCQE&s=,t^G[oRQ:d+VC/V_W2#cT"dL5c@J,d.Pm9fhXDu]LFI/a"=s7Z3%qnp2E
%p[_bkq(Md8:VZhB?iTgqs7?`tiBR>4k?n8<hgYACs7=jWrVh"jrqeAKkLXXer8fS]rPpSkq"9,"s7G^)J,Ap-s7kp;If9!7s8LXM
%M[4L;48e%Js83u<h=#jfrrGC<R%j~>
%AI9_PrivateDataEnd
