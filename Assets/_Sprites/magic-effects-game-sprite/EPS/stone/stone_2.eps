%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_2.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 139 141
%%HiResBoundingBox: 0 0 138.1479 140.3062
%%CropBox: 0 0 138.1479 140.3062
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:37:10+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:37:10+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:37:10+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>252</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAD8AwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYqtkkjijaSRgkaAs7sQFVQKkknoBir5a/On/AJy2khnm0L8upEJjJS68wsokUkbF&#xA;bRGBUj/ixgQf2R0bFXzFrXmDXdcu2vNZ1C51G6c1aa6leZ/vcmmKq+geb/NXl2cT6Fq95pkgNf8A&#xA;RZpIgf8AWVSFYexGKvoH8s/+cydZs5IrDz7ajUbQkL+l7RFjuUr+1LCvGOQf6nE+zHFX1P5Z81eX&#xA;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&#xA;oVQFVRRVGwAHYYq3irsVdirsVdir/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:34cbfa95-83aa-ad48-915b-e499f85a390a</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:34cbfa95-83aa-ad48-915b-e499f85a390a</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34cbfa95-83aa-ad48-915b-e499f85a390a</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:37:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>138.147878</stDim:w>
            <stDim:h>140.306203</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -140.306 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 140.306 li
138.148 140.306 li
138.148 0 li
cp
clp
52.5508 49.0178 mo
52.4864 49.0178 52.4864 49.1179 52.5508 49.1179 cv
52.6153 49.1179 52.6153 49.0178 52.5508 49.0178 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.317647 .290196 .301961 rgb
f
125.262 90.1497 mo
129.042 90.2239 132.721 90.7024 136.251 92.0359 cv
136.71 85.5603 135.608 78.594 133.862 73.012 cv
132.524 73.4514 131.23 73.8953 130.076 74.4192 cv
124.49 76.9583 118.822 79.638 112.751 80.7796 cv
108.329 81.6111 103.161 81.9485 98.4337 81.7083 cv
99.5006 85.804 100.144 89.6785 100.538 93.7288 cv
108.501 91.2019 116.91 89.9856 125.262 90.1497 cv
cp
.203922 .215686 .211765 rgb
f
112.751 80.7796 mo
108.864 81.5105 104.398 81.8606 100.162 81.7732 cv
101.335 83.0696 103.107 83.761 104.955 83.7395 cv
107.355 83.7117 111.374 82.5843 113.277 80.6638 cv
113.101 80.6995 112.928 80.7464 112.751 80.7796 cv
cp
.14902 .156863 .152941 rgb
f
101.155 89.5818 mo
104.433 89.3304 113.07 90.6883 116.258 87.6453 cv
116.642 87.9217 117.113 88.1111 117.618 88.2351 cv
117.705 88.2766 117.775 88.3304 117.872 88.365 cv
118.721 88.6717 119.614 88.7776 120.513 88.7273 cv
120.591 88.8606 120.679 88.9871 120.776 89.1033 cv
121.726 90.2332 122.774 90.2371 123.783 89.7014 cv
123.696 89.845 123.629 90.0027 123.55 90.1526 cv
124.121 90.1512 124.692 90.1385 125.262 90.1497 cv
128.641 90.2156 131.938 90.6087 135.121 91.6414 cv
135.127 91.552 135.145 91.4568 135.148 91.3689 cv
135.2 90.1043 134.976 88.6682 134.429 87.4842 cv
135.451 84.325 135.273 80.4964 134.911 77.531 cv
134.729 76.0364 134.443 74.4939 134.077 72.9417 cv
132.663 73.4041 131.291 73.867 130.076 74.4192 cv
128.406 75.1785 126.726 75.9466 125.032 76.6858 cv
125.184 77.6629 125.351 78.638 125.486 79.617 cv
125.525 79.9041 125.537 80.7259 125.591 81.7644 cv
125.266 81.8382 124.947 81.9768 124.658 82.2068 cv
124.366 82.4388 124.046 82.6507 123.715 82.8513 cv
123.041 82.9837 122.385 83.3128 121.783 83.6389 cv
121.617 83.7288 121.456 83.8186 121.296 83.9065 cv
120.351 84.1746 119.377 84.2903 118.44 84.2097 cv
118.056 83.8816 117.547 83.739 117.052 83.7766 cv
116.634 83.1448 115.905 82.7669 114.997 83.0135 cv
111.956 83.5506 li
111.495 83.4368 111.012 83.6277 110.765 84.0354 cv
110.565 84.3665 li
110.385 84.6634 110.331 85.0325 110.382 85.3889 cv
107.314 85.6277 102.689 85.3743 99.2149 85.0564 cv
99.5396 86.593 99.8145 88.1155 100.039 89.6414 cv
100.427 89.6287 100.804 89.6087 101.155 89.5818 cv
cp
f
127.017 88.2239 mo
127.25 88.1883 127.464 88.1477 127.682 88.1082 cv
127.482 88.4793 127.493 88.867 127.643 89.2137 cv
127.599 89.5423 127.596 89.8826 127.672 90.2439 cv
127.674 90.2508 127.677 90.2566 127.679 90.2635 cv
130.472 90.4617 133.205 90.93 135.853 91.8787 cv
135.833 90.6985 135.682 89.4998 135.473 88.303 cv
135.513 85.2366 134.917 82.1365 134.158 79.1145 cv
134.12 77.2117 133.746 75.2307 133.182 73.2386 cv
132.087 73.6057 131.032 73.9846 130.076 74.4192 cv
129.871 74.513 129.664 74.6072 129.458 74.701 cv
129.522 75.055 129.587 75.4075 129.652 75.7635 cv
129.281 78.2029 129.709 81.0032 129.506 83.345 cv
129.438 84.1385 129.38 84.9295 129.336 85.719 cv
128.418 86.0281 127.509 86.3562 126.581 86.6419 cv
125.547 86.9593 125.995 88.3787 127.017 88.2239 cv
cp
.113725 .117647 .113725 rgb
f
101.801 87.5179 mo
101.736 87.5179 101.736 87.618 101.801 87.618 cv
101.865 87.618 101.865 87.5179 101.801 87.5179 cv
cp
f
117.978 79.4148 mo
118.274 79.8103 118.738 80.0857 119.384 80.0857 cv
120.554 80.0857 121.147 79.1922 121.169 78.2835 cv
120.114 78.6907 119.051 79.0677 117.978 79.4148 cv
cp
.317647 .290196 .301961 rgb
f
130.64 90.5916 mo
131.123 89.3216 130.486 87.5779 128.717 87.5779 cv
127.128 87.5779 126.452 88.9905 126.683 90.199 cv
128.016 90.2635 129.336 90.3919 130.64 90.5916 cv
cp
.203922 .215686 .211765 rgb
f
130.217 83.0179 mo
130.153 83.0179 130.153 83.118 130.217 83.118 cv
130.282 83.118 130.282 83.0179 130.217 83.0179 cv
cp
f
128.884 76.9646 mo
126.607 76.9646 126.603 80.5037 128.884 80.5037 cv
131.161 80.5037 131.165 76.9646 128.884 76.9646 cv
cp
f
117.723 89.0887 mo
112.382 89.239 107.134 89.7542 102.062 91.3391 cv
101.849 88.5721 101.408 85.8553 101.193 83.0901 cv
106.356 81.9846 111.647 82.0413 116.73 80.3938 cv
122.069 78.6634 127.075 76.0545 132.601 75.0345 cv
133.623 79.4925 134.279 84.1961 134.218 88.844 cv
128.988 87.949 122.783 88.9461 117.723 89.0887 cv
cp
137.607 80.3719 mo
137.289 77.9275 136.823 75.5154 136.25 73.1306 cv
136.56 71.9431 135.963 70.5711 134.428 70.7449 cv
128.308 71.4368 122.984 73.9407 117.248 75.992 cv
111.152 78.1721 104.77 77.9348 98.5684 79.593 cv
97.7486 79.8123 97.066 80.6546 97.1002 81.5218 cv
97.2672 85.7454 98.1739 89.8426 98.1832 94.1033 cv
98.1861 95.2942 99.4771 96.5125 100.715 96.032 cv
106.205 93.9016 111.865 93.2537 117.723 93.0887 cv
123.141 92.9358 130.403 91.6087 135.581 93.282 cv
136.502 93.5794 137.225 93.2224 137.641 92.6184 cv
137.744 92.6717 137.848 92.7215 137.952 92.7727 cv
138.33 88.6272 138.131 84.4007 137.607 80.3719 cv
cp
0 0 0 rgb
f
40.9254 116.094 mo
44.8033 109.178 50.3946 100.746 51.2466 92.6985 cv
46.5054 92.5603 41.7501 92.1194 37.1451 93.5813 cv
32.5113 95.052 28.3858 97.658 24.5035 100.534 cv
20.7081 103.346 17.711 106.545 14.7232 110.098 cv
14.7681 110.168 14.8082 110.241 14.8546 110.31 cv
18.3111 115.481 24.2222 119.364 28.795 123.481 cv
30.5924 125.1 32.3658 126.584 34.2017 127.925 cv
36.2803 123.91 38.7012 120.06 40.9254 116.094 cv
cp
.203922 .215686 .211765 rgb
f
33.7022 127.195 mo
33.8878 127.401 34.0753 127.605 34.2613 127.811 cv
34.5611 127.234 34.8594 126.656 35.1719 126.085 cv
35.0982 126.007 35.0245 125.928 34.9507 125.85 cv
34.9986 125.559 34.9312 125.242 34.6602 124.956 cv
33.2549 123.472 31.8443 121.975 30.4835 120.435 cv
30.4674 120.356 30.4468 120.277 30.4132 120.195 cv
28.7828 116.242 26.9415 112.393 24.6939 108.75 cv
23.6915 107.126 22.5176 105.088 21.1343 103.311 cv
19.251 105.015 17.5342 106.837 15.857 108.772 cv
16.2051 109.333 16.6026 109.867 17.0679 110.364 cv
17.2398 113.753 19.9 116.869 21.8404 119.47 cv
24.3248 122.8 27.0924 125.962 30.2828 128.634 cv
31.6236 129.757 33.7877 128.732 33.7022 127.195 cv
cp
.317647 .290196 .301961 rgb
f
37.3697 101.63 mo
35.7672 100.49 33.8077 100.203 32.0508 99.4055 cv
29.6031 98.2947 27.1881 101.075 29.1187 103.206 cv
30.48 104.708 32.2613 106.045 34.3214 105.934 cv
34.8253 106.49 35.2847 107.119 35.7462 107.799 cv
36.984 109.62 40.3458 109.13 40.2037 106.592 cv
40.0875 104.508 39.0621 102.834 37.3697 101.63 cv
cp
f
42.1285 110.026 mo
41.7188 107.765 39.1661 107.611 37.1431 107.466 cv
36.9175 107.127 36.586 106.844 36.1314 106.686 cv
34.7642 106.212 33.7896 105.297 32.501 104.733 cv
31.7447 104.402 30.9351 104.275 30.1202 104.187 cv
29.7169 103.705 29.2984 103.239 28.7989 102.849 cv
27.7423 102.024 26.2388 102.762 26.5269 104.172 cv
26.9268 106.131 28.338 107.946 29.9009 109.16 cv
30.46 109.594 31.1451 110.083 31.879 110.539 cv
32.5899 112.715 34.8223 113.548 37.1192 113.424 cv
39.1456 113.314 42.6627 112.972 42.1285 110.026 cv
cp
.14902 .156863 .152941 rgb
f
35.4835 95.8299 mo
38.918 95.679 38.8096 95.1043 42.5836 97.3714 cv
42.9947 97.6184 43.1866 98.1175 43.7061 98.3206 cv
44.8956 98.7864 46.2437 98.4685 47.3419 98.9261 cv
47.6216 99.0428 47.8546 99.2127 48.0704 99.4051 cv
47.6505 100.165 47.2882 100.982 46.9498 101.888 cv
46.6417 102.715 46.9688 103.557 47.5704 104.12 cv
49.4019 100.359 50.8458 96.4861 51.2466 92.6975 cv
50.5352 92.677 49.8238 92.6531 49.1124 92.6258 cv
48.8731 93.2864 49.0826 94.0506 49.5557 94.5877 cv
48.857 94.4236 48.1949 94.5462 47.4737 94.5149 cv
47.8546 93.9886 48.0108 93.2683 47.9029 92.5828 cv
44.2779 92.4607 40.6675 92.4632 37.1451 93.5813 cv
35.4395 94.1223 33.8043 94.8196 32.2232 95.6253 cv
33.3995 95.7459 34.5372 95.8719 35.4835 95.8299 cv
cp
f
38.4034 103.803 mo
38.0313 101.267 32.6739 99.4495 30.7139 100.908 cv
29.6675 101.687 29.8365 102.814 30.4473 103.498 cv
30.3751 103.54 li
31.3712 104.335 32.504 104.33 33.6749 104.733 cv
34.6778 105.079 35.8214 105.911 36.8931 105.785 cv
37.9918 105.656 38.5635 104.894 38.4034 103.803 cv
cp
.603922 .576471 .588235 rgb
f
24.5445 114.321 mo
23.2115 112.718 21.6861 110.09 19.7794 108.698 cv
19.2471 107.842 18.7681 106.96 18.3111 106.068 cv
17.3917 107.032 16.4971 108.026 15.6129 109.053 cv
16.0562 109.734 16.5137 110.406 16.9981 111.061 cv
17.9132 113.188 20.0792 115.223 21.4058 116.728 cv
23.9219 119.581 26.7852 122.109 29.6949 124.55 cv
31.0142 125.657 32.7774 123.948 31.6007 122.644 cv
29.1617 119.941 26.8716 117.118 24.5445 114.321 cv
cp
f
42.5611 92.6145 mo
40.7398 92.7376 38.9307 93.0144 37.1451 93.5813 cv
37.0645 93.6067 36.9869 93.6389 36.9068 93.6648 cv
37.3721 93.6912 37.8384 93.7112 38.3008 93.7093 cv
38.4737 93.7376 38.6465 93.7596 38.8209 93.7674 cv
39.0308 93.7762 39.2232 93.7571 39.4088 93.7249 cv
40.5528 93.885 41.647 94.2366 42.8043 94.343 cv
43.419 94.3992 43.6046 93.6116 43.2686 93.2224 cv
43.0645 92.9866 42.8204 92.7918 42.5611 92.6145 cv
cp
.113725 .117647 .113725 rgb
f
46.5103 96.201 mo
47.1534 96.3596 47.2657 96.3377 47.1207 97.1531 cv
47.0347 97.6336 46.8985 98.1087 46.8013 98.5877 cv
46.6881 99.1468 47.0455 99.6575 47.6324 99.6785 cv
48.1539 99.6971 48.878 99.5847 49.3707 99.7244 cv
49.4141 99.7371 49.4454 99.743 49.4732 99.7469 cv
49.7042 99.1355 49.9229 98.5232 50.1187 97.9104 cv
49.5289 97.7874 48.8321 97.8509 48.2232 97.9085 cv
48.1104 97.5979 47.9991 97.2874 47.9083 96.9715 cv
47.8145 96.6453 47.8262 96.1668 47.5733 95.8972 cv
47.4561 95.7722 47.2755 95.72 47.1148 95.6775 cv
46.4175 95.4925 45.8292 95.5032 45.2125 95.0462 cv
44.9 94.8147 44.5826 95.3474 44.9049 95.5725 cv
45.4351 95.9422 45.9 96.0511 46.5103 96.201 cv
cp
f
40.5508 100.275 mo
38.2432 100.275 38.2393 103.861 40.5508 103.861 cv
42.858 103.861 42.8619 100.275 40.5508 100.275 cv
cp
.317647 .290196 .301961 rgb
f
42.8839 103.042 mo
41.1348 103.042 41.1319 105.761 42.8839 105.761 cv
44.6334 105.761 44.6363 103.042 42.8839 103.042 cv
cp
f
38.483 120.318 mo
39.0894 119.285 39.6905 118.25 40.2857 117.21 cv
39.9923 116.921 39.585 116.728 39.0508 116.728 cv
36.8926 116.728 36.7051 119.776 38.483 120.318 cv
cp
f
32.7174 114.018 mo
32.6529 114.018 32.6529 114.118 32.7174 114.118 cv
32.7818 114.118 32.7818 114.018 32.7174 114.018 cv
cp
f
35.0508 115.582 mo
32.9244 115.582 32.921 118.887 35.0508 118.887 cv
37.1773 118.887 37.1807 115.582 35.0508 115.582 cv
cp
f
45.3101 103.082 mo
44.0274 105.972 42.7613 108.807 41.1656 111.543 cv
38.4634 116.175 35.3873 120.525 32.9913 125.305 cv
30.6671 123.359 28.4322 121.323 26.2535 119.358 cv
23.2178 116.62 20.2178 113.771 17.5948 110.621 cv
19.981 107.051 23.834 103.678 27.584 101.126 cv
27.3702 102.892 29.5289 104.579 30.8541 102.898 cv
31.7281 101.79 33.7579 102.491 34.9049 102.854 cv
37.003 103.518 37.2589 105.042 37.3829 107.063 cv
37.5406 109.62 41.5416 109.638 41.3829 107.063 cv
41.1627 103.483 40.1622 100.468 36.5215 99.1751 cv
35.2725 98.7317 33.7535 98.3484 32.2877 98.3284 cv
37.5103 95.8191 43.0308 95.7141 48.7213 95.6048 cv
47.9449 98.2102 46.4009 100.625 45.3101 103.082 cv
cp
51.1573 91.5511 mo
43.3511 91.7679 36.1026 91.5823 29.0982 95.4803 cv
23.2506 98.7342 16.4107 104.189 13.2271 110.098 cv
12.5831 111.294 13.2427 112.414 14.1866 112.88 cv
15.3736 114.295 16.6456 115.634 17.877 116.902 cv
22.1031 121.257 26.8087 125.842 31.9 129.761 cv
32.626 131.026 34.5338 131.544 35.2442 129.884 cv
38.189 123.007 42.8931 117.196 46.2823 110.567 cv
48.9073 105.432 52.5386 99.3577 53.1573 93.5511 cv
53.2701 92.4944 52.15 91.5237 51.1573 91.5511 cv
cp
0 0 0 rgb
f
77.0884 124.379 mo
77.0108 116.349 76.3243 109.069 74.2364 101.443 cv
70.9532 101.004 69.3399 99.1902 67.7149 96.8821 cv
66.2589 103.065 62.6368 108.568 59.8072 114.269 cv
57.0382 119.848 53.4796 125.048 50.6705 130.596 cv
53.046 132.106 55.5704 133.394 58.4273 134.421 cv
63.7896 136.347 70.7354 137.786 77.4693 137.634 cv
76.9947 133.258 77.1314 128.825 77.0884 124.379 cv
cp
.203922 .215686 .211765 rgb
f
70.0611 122.124 mo
68.4771 120.534 65.8184 120.488 63.4947 120.387 cv
62.9371 120.207 62.3726 120.042 61.774 119.958 cv
60.8941 119.833 60.1607 120.431 60.1749 121.221 cv
59.629 122.288 59.9337 123.907 61.3331 124.212 cv
62.5411 124.476 63.7647 124.705 64.9962 124.854 cv
66.6729 125.137 68.3765 125.239 69.7691 124.388 cv
70.5601 123.905 70.7261 122.792 70.0611 122.124 cv
cp
.317647 .290196 .301961 rgb
f
76.378 112.429 mo
76.0152 112.141 75.5689 111.96 75.0455 111.997 cv
73.4576 112.11 71.92 112.372 70.397 112.83 cv
68.7178 113.334 68.6812 115.44 69.8853 116.245 cv
69.6607 117.745 70.9683 119.577 72.69 118.923 cv
72.8765 118.852 73.043 118.755 73.2222 118.675 cv
73.2247 118.681 73.2276 118.688 73.2305 118.695 cv
73.5875 118.523 74.0596 118.388 74.4786 118.13 cv
74.8101 117.925 75.085 117.648 75.338 117.351 cv
75.859 116.901 76.3121 116.369 76.7125 115.777 cv
76.6207 114.656 76.5113 113.539 76.378 112.429 cv
cp
.14902 .156863 .152941 rgb
f
66.546 107.923 mo
67.9664 108.437 69.1475 108.023 70.3233 107.421 cv
71.6768 108.724 73.8282 109.312 75.9761 109.535 cv
75.7242 107.929 75.4151 106.323 75.0528 104.71 cv
74.0665 104.577 73.4659 104.461 73.4737 104.394 cv
73.6407 102.94 71.8853 101.789 70.5967 102.202 cv
70.8653 102.116 68.1148 103.224 68.2716 103.29 cv
68.2008 103.26 68.0797 103.037 67.9385 102.752 cv
68.6724 102.36 68.5181 101.018 67.5582 101.103 cv
67.4893 101.094 67.42 101.084 67.3511 101.074 cv
67.6661 100.522 68.0279 99.9978 68.4478 99.5071 cv
68.7296 99.1219 68.8433 98.7381 68.8472 98.3748 cv
68.4571 97.9075 68.0841 97.406 67.7115 96.8767 cv
67.0074 99.865 65.8082 102.698 64.4239 105.467 cv
64.4542 105.456 64.4898 105.445 64.5196 105.434 cv
64.8843 106.267 65.3023 107.473 66.546 107.923 cv
cp
f
77.0977 128.626 mo
75.5743 129.168 74.0836 129.761 72.7354 130.499 cv
71.69 130.396 70.6485 130.249 69.6109 130.065 cv
70.4351 129.807 71.2813 129.452 72.1773 128.991 cv
74.3492 127.873 72.8023 124.669 70.5704 125.178 cv
66.4571 126.117 63.1021 124.694 59.3282 123.472 cv
59.1192 123.206 58.9376 122.924 58.8204 122.605 cv
58.4415 121.571 56.6998 121.306 56.4473 122.605 cv
55.7164 126.367 58.7066 128.152 61.8038 129.455 cv
62.5416 129.765 63.2359 129.989 63.9141 130.167 cv
63.8829 130.285 63.8604 130.407 63.8546 130.53 cv
62.8521 130.358 61.8555 130.151 60.876 129.853 cv
58.0723 129.003 55.5933 127.459 52.8057 126.64 cv
52.1553 127.784 51.5215 128.936 50.9195 130.103 cv
55.7584 135.352 63.4805 136.777 70.3389 136.779 cv
72.3555 136.78 74.8492 136.843 77.3614 136.662 cv
77.127 134 77.0992 131.318 77.0977 128.626 cv
cp
f
67.9258 110.126 mo
65.5884 110.126 65.5845 113.759 67.9258 113.759 cv
70.2633 113.759 70.2672 110.126 67.9258 110.126 cv
cp
f
67.2554 122.899 mo
66.2867 121.386 64.2945 121.598 62.7784 120.974 cv
61.2755 120.356 60.2388 122.559 61.2618 123.579 cv
62.7169 125.031 65.8804 126.522 67.2554 124.172 cv
67.4761 123.795 67.4962 123.274 67.2554 122.899 cv
cp
.603922 .576471 .588235 rgb
f
77.1675 133.264 mo
77.0347 133.356 76.9024 133.449 76.7935 133.563 cv
75.4591 133.544 74.1168 133.579 72.8233 133.518 cv
71.356 133.448 69.8868 133.389 68.4175 133.332 cv
68.3648 132.363 67.7359 131.567 66.7574 131.41 cv
66.8038 131.227 66.8033 131.034 66.7457 130.842 cv
66.7725 130.869 li
66.7608 130.825 66.7379 130.788 66.7213 130.746 cv
66.7208 130.746 li
66.4805 130.148 65.7774 129.864 65.2076 130.114 cv
65.1968 130.116 65.1856 130.117 65.1744 130.119 cv
64.2022 129.692 63.2081 129.305 62.23 128.889 cv
61.7496 128.684 61.4561 129.366 61.9503 129.553 cv
62.6763 129.829 63.3839 130.101 64.0313 130.535 cv
64.1978 130.646 64.4132 130.761 64.5772 130.895 cv
64.5469 131.045 64.5499 131.195 64.5787 131.343 cv
64.358 131.413 64.1524 131.541 64.0186 131.783 cv
63.9493 131.831 63.9249 131.884 63.9454 131.943 cv
63.8282 132.075 63.7418 132.216 63.6851 132.362 cv
63.607 132.47 63.5377 132.586 63.4869 132.71 cv
62.9288 132.65 62.378 132.581 61.8472 132.482 cv
59.8082 132.103 57.7779 131.675 55.751 131.232 cv
55.421 131.065 55.0904 130.898 54.7628 130.724 cv
54.2769 130.467 53.8126 130.512 53.4488 130.722 cv
53.0152 130.624 52.5806 130.532 52.147 130.433 cv
50.564 130.073 49.8965 132.438 51.4742 132.874 cv
52.4239 133.137 53.377 133.381 54.3287 133.632 cv
55.3868 134.247 56.4664 134.82 57.5601 135.367 cv
57.7418 135.699 58.0518 135.957 58.5079 136.048 cv
58.7574 136.096 59.0045 136.143 59.2535 136.192 cv
60.7925 136.9 62.6758 138.088 64.3267 137.393 cv
64.4498 137.341 64.5601 137.271 64.6627 137.193 cv
67.0528 137.599 69.4503 137.948 71.8951 138.176 cv
73.7281 138.347 75.6817 138.665 77.5997 138.74 cv
77.356 136.925 77.2296 135.098 77.1675 133.264 cv
cp
.113725 .117647 .113725 rgb
f
74.689 106.125 mo
72.9644 105.386 71.234 105.38 69.4508 104.875 cv
68.0645 104.483 66.7877 103.816 65.4698 103.272 cv
65.1514 103.975 64.8194 104.675 64.4732 105.369 cv
66.1622 106.104 67.5982 107.223 69.4888 107.592 cv
71.3419 107.953 72.9649 107.835 74.689 107.056 cv
75.0367 106.899 75.0469 106.279 74.689 106.125 cv
cp
f
65.2174 110.886 mo
62.6236 110.886 62.6192 114.917 65.2174 114.917 cv
67.8111 114.917 67.8155 110.886 65.2174 110.886 cv
cp
.317647 .290196 .301961 rgb
f
74.2379 101.447 mo
71.8526 101.13 70.3482 100.087 69.085 98.6541 cv
69.1207 99.7322 69.8272 100.783 71.2174 100.783 cv
71.2725 100.783 71.3194 100.77 71.3721 100.767 cv
71.6802 101.407 72.2901 101.89 73.2174 101.89 cv
73.6387 101.89 73.9923 101.787 74.2852 101.618 cv
74.2701 101.561 74.2535 101.504 74.2379 101.447 cv
cp
f
74.3839 123.529 mo
71.7598 123.529 71.7554 127.607 74.3839 127.607 cv
77.0084 127.607 77.0123 123.529 74.3839 123.529 cv
cp
f
80.5508 121.184 mo
80.4864 121.184 80.4864 121.284 80.5508 121.284 cv
80.6153 121.284 80.6153 121.184 80.5508 121.184 cv
cp
f
73.8839 135.351 mo
73.8199 135.351 73.8194 135.451 73.8839 135.451 cv
73.9483 135.451 73.9483 135.351 73.8839 135.351 cv
cp
.203922 .215686 .211765 rgb
f
66.2174 132.746 mo
64.3023 132.746 64.2989 135.722 66.2174 135.722 cv
68.1329 135.722 68.1358 132.746 66.2174 132.746 cv
cp
f
62.1505 132.91 mo
62.1085 132.727 62.0816 132.542 62.0342 132.362 cv
61.9078 131.877 61.3453 131.679 60.9234 131.909 cv
60.754 132.002 60.5958 132.112 60.4288 132.209 cv
59.6187 132.681 59.6944 133.941 60.5689 134.292 cv
61.4713 134.655 62.3677 133.848 62.1505 132.91 cv
cp
f
62.8287 135.542 mo
59.439 134.592 56.3077 133.006 53.3546 131.084 cv
54.7847 128.559 56.2149 126.034 57.6451 123.509 cv
60.4117 128.007 65.6768 128.765 70.5152 127.07 cv
72.9288 126.224 71.8902 122.358 69.4517 123.213 cv
65.8717 124.467 62.4263 124.362 60.5772 120.535 cv
60.3795 120.127 60.1075 119.859 59.8028 119.699 cv
60.7667 117.997 61.7305 116.295 62.6944 114.593 cv
65.192 110.183 67.8238 105.863 69.5064 101.1 cv
70.6187 101.796 71.7393 102.59 72.1773 103.375 cv
72.8179 104.523 72.5416 106.518 72.6412 107.803 cv
72.8741 110.805 73.5572 113.629 74.1568 116.573 cv
75.4874 123.109 75.2593 129.676 74.8311 136.276 cv
70.8077 136.666 66.7921 136.653 62.8287 135.542 cv
cp
77.3926 112.804 mo
76.7818 109.678 77.4849 104.746 76.0836 101.837 cv
74.9835 99.553 71.4175 97.6868 69.3785 96.3284 cv
68.2984 95.6087 66.7584 96.3333 66.4405 97.5237 cv
64.8287 103.558 61.3404 108.866 58.2877 114.257 cv
55.2706 119.584 52.253 124.911 49.2359 130.239 cv
48.69 131.203 49.0191 132.123 49.67 132.683 cv
49.5762 132.887 49.4771 133.088 49.3858 133.292 cv
51.9742 135.047 54.6495 136.597 57.4088 137.817 cv
63.5767 140.545 69.7032 140.611 75.919 139.976 cv
76.4923 140.154 77.1636 140.088 77.7071 139.779 cv
77.7227 139.777 77.7383 139.775 77.7545 139.773 cv
77.753 139.765 77.7525 139.757 77.751 139.749 cv
78.2652 139.439 78.6549 138.911 78.7071 138.155 cv
79.3101 129.386 79.0748 121.408 77.3926 112.804 cv
cp
0 0 0 rgb
f
120.262 112.15 mo
111.956 111.987 103.677 113.222 95.7838 115.794 cv
95.8814 117.237 95.9586 118.708 96.0137 120.234 cv
96.2086 125.645 95.8233 131.102 96.4478 136.457 cv
99.1583 136.19 101.791 135.636 104.218 134.701 cv
104.386 134.716 104.546 134.746 104.722 134.748 cv
113.156 134.827 124.747 129.395 128.647 121.545 cv
129.76 119.304 130.48 116.769 130.899 114.095 cv
127.56 112.68 123.881 112.22 120.262 112.15 cv
cp
.203922 .215686 .211765 rgb
f
108.829 112.821 mo
107.372 113.017 105.919 113.243 104.476 113.526 cv
104.355 113.818 104.268 114.11 104.241 114.403 cv
104.218 114.41 104.193 114.411 104.172 114.42 cv
103.579 114.653 103.105 115.129 103.114 115.81 cv
103.138 117.707 105.427 118.262 106.846 117.534 cv
106.97 117.47 107.084 117.395 107.195 117.318 cv
107.919 117.168 108.477 116.798 108.949 116.113 cv
109.34 115.546 109.327 114.747 109.069 114.112 cv
109.148 113.653 109.041 113.208 108.829 112.821 cv
cp
.317647 .290196 .301961 rgb
f
107.669 119.335 mo
107.547 118.523 106.777 117.614 105.855 117.733 cv
104.891 117.858 103.829 117.837 102.892 118.103 cv
102.175 118.307 101.111 119.053 101.497 119.936 cv
101.828 120.693 102.78 121.007 103.499 121.262 cv
104.362 121.567 105.479 121.719 106.346 121.361 cv
107.196 121.011 107.817 120.317 107.669 119.335 cv
cp
.14902 .156863 .152941 rgb
f
120.262 112.15 mo
119.177 112.128 118.093 112.132 117.01 112.158 cv
116.636 114.359 115.628 116.195 114.71 118.106 cv
110.521 120.211 106.335 122.329 102.093 124.317 cv
101.899 123.883 101.604 123.491 101.195 123.224 cv
100.809 122.972 100.406 122.862 99.9825 122.795 cv
99.5616 121.963 98.898 121.397 98.1217 120.866 cv
97.5035 120.444 96.6807 120.495 96.0303 120.836 cv
96.0845 122.744 96.0758 124.658 96.0694 126.571 cv
96.0801 126.583 96.0865 126.598 96.0972 126.61 cv
96.088 126.613 96.0787 126.616 96.0694 126.619 cv
96.0601 129.525 96.067 132.427 96.3282 135.303 cv
97.6509 135.072 98.9302 134.742 100.086 134.243 cv
103.259 135.368 107.551 134.722 111.447 133.569 cv
113.388 133.205 115.196 132.528 116.863 131.6 cv
117.202 131.455 117.527 131.311 117.835 131.171 cv
123.205 128.728 127.017 124.679 127.886 118.919 cv
128.062 118.273 128.203 117.58 128.326 116.867 cv
128.9 115.849 129.336 114.733 129.639 113.608 cv
126.646 112.572 123.431 112.212 120.262 112.15 cv
cp
f
108.361 113.084 mo
108.316 113.013 108.255 112.965 108.203 112.903 cv
107.056 113.068 105.913 113.255 104.775 113.473 cv
104.695 113.584 104.614 113.691 104.54 113.811 cv
103.501 115.491 105.938 117.424 107.301 115.941 cv
107.368 115.863 107.44 115.79 107.516 115.721 cv
107.654 115.63 107.788 115.532 107.912 115.422 cv
108.243 115.023 108.304 114.935 108.094 115.159 cv
108.558 114.579 108.802 113.768 108.361 113.084 cv
cp
.603922 .576471 .588235 rgb
f
123.088 112.299 mo
122.621 114.053 122.487 116.477 122.36 116.732 cv
121.352 118.762 119.544 121.646 117.916 123.559 cv
117.537 123.403 117.087 123.41 116.624 123.698 cv
114.703 124.891 112.779 126.08 110.861 127.279 cv
110.534 127.483 110.326 127.742 110.212 128.02 cv
109.999 128.21 109.795 128.411 109.61 128.627 cv
109.446 128.819 109.338 129.02 109.275 129.221 cv
109.046 129.265 108.818 129.309 108.59 129.347 cv
104.446 130.049 100.284 130.734 96.1016 131.17 cv
96.1544 133.322 96.2867 135.464 96.5953 137.589 cv
97.6915 137.41 98.7467 137.075 99.7247 136.487 cv
99.835 136.42 99.9298 136.344 100.011 136.259 cv
102.105 136.052 104.198 135.834 106.289 135.599 cv
108.648 135.334 111.45 135.475 113.014 133.649 cv
113.142 133.614 113.268 133.572 113.396 133.534 cv
115.547 133.137 117.587 132.444 119.181 130.916 cv
119.185 130.912 119.187 130.908 119.191 130.904 cv
119.503 130.701 119.815 130.503 120.118 130.281 cv
123.037 128.137 126.565 124.843 126.195 120.921 cv
126.426 120.559 126.663 120.2 126.888 119.835 cv
127.7 118.517 128.102 117.136 128.466 115.733 cv
129.386 115.728 130.287 114.924 130.509 114.07 cv
130.52 114.027 130.526 113.984 130.537 113.942 cv
128.169 112.994 125.64 112.513 123.088 112.299 cv
cp
.113725 .117647 .113725 rgb
f
111.217 126.807 mo
109.167 126.807 109.163 129.995 111.217 129.995 cv
113.269 129.995 113.272 126.807 111.217 126.807 cv
cp
.203922 .215686 .211765 rgb
f
107.217 130.165 mo
106.056 130.165 106.054 131.97 107.217 131.97 cv
108.378 131.97 108.38 130.165 107.217 130.165 cv
cp
f
100.217 130.079 mo
98.3023 130.079 98.2989 133.056 100.217 133.056 cv
102.133 133.056 102.136 130.079 100.217 130.079 cv
cp
f
114.217 126.949 mo
113.207 126.949 113.205 128.519 114.217 128.519 cv
115.228 128.519 115.23 126.949 114.217 126.949 cv
cp
f
121.384 120.746 mo
119.469 120.746 119.465 123.722 121.384 123.722 cv
123.299 123.722 123.302 120.746 121.384 120.746 cv
cp
f
122.717 115.378 mo
120.757 115.378 120.753 118.425 122.717 118.425 cv
124.678 118.425 124.681 115.378 122.717 115.378 cv
cp
f
127.353 119.209 mo
125.92 123.29 123.395 127.15 119.836 129.685 cv
115.603 132.7 110.654 132.767 105.674 133.237 cv
103.453 133.446 101.216 133.788 98.9732 134.143 cv
98.8233 130.576 98.7276 127.008 98.751 123.437 cv
98.7613 121.908 98.2149 118.599 99.129 117.318 cv
99.5948 116.665 100.41 116.333 101.338 116.149 cv
100.432 117.381 100.907 119.519 102.803 119.325 cv
104.38 119.164 105.866 119.954 107.405 119.235 cv
108.078 118.92 108.625 118.419 109.001 117.772 cv
109.4 117.084 109.487 116.355 110.434 116.322 cv
111.315 116.292 111.888 115.799 112.165 115.171 cv
114.131 114.987 116.098 114.805 118.064 114.616 cv
119.15 114.512 127.086 113.474 128.629 114.243 cv
128.331 115.931 127.92 117.594 127.353 119.209 cv
cp
128.112 109.857 mo
121.152 109.345 113.442 111.061 106.516 111.727 cv
102.787 112.085 96.7437 111.653 95.1505 115.918 cv
94.2496 118.329 94.755 121.866 94.7486 124.363 cv
94.7383 128.378 94.8575 132.387 95.0587 136.397 cv
95.1129 137.484 95.8653 138.107 96.7022 138.274 cv
96.7086 138.312 96.712 138.349 96.7183 138.387 cv
96.8731 138.366 97.0294 138.344 97.1842 138.322 cv
97.3648 138.32 97.5416 138.292 97.7134 138.248 cv
99.7564 137.961 101.81 137.665 103.886 137.424 cv
113.282 136.331 121.318 135.94 127.386 127.685 cv
129.8 124.399 131.31 120.671 132.178 116.762 cv
132.466 116.527 132.679 116.169 132.749 115.661 cv
133.251 112.004 131.813 110.129 128.112 109.857 cv
cp
0 0 0 rgb
f
125.371 58.804 mo
124.272 53.3455 122.42 46.6912 118.857 42.2605 cv
118.678 41.8323 118.478 41.4168 118.271 41.0056 cv
113.544 44.5872 108.771 48.0838 103.262 50.3577 cv
97.564 52.7097 85.0118 54.2288 83.6265 61.4666 cv
83.5342 61.9495 83.275 62.2517 82.9503 62.4109 cv
84.4215 64.4959 85.7174 66.5052 88.0709 67.2332 cv
88.7276 66.6067 89.9962 66.5823 90.5015 67.533 cv
92.0596 67.5257 93.6212 67.388 95.1802 67.4012 cv
100.095 67.4422 104.723 67.2317 109.449 65.7498 cv
114.709 64.0999 119.595 61.6062 124.648 59.4446 cv
124.943 59.3186 125.256 59.2058 125.568 59.0926 cv
125.5 58.9983 125.444 58.8948 125.371 58.804 cv
cp
.203922 .215686 .211765 rgb
f
103.337 61.8748 mo
102.67 61.6736 101.989 61.573 101.306 61.5222 cv
100.826 61.22 100.205 61.0764 99.4669 61.2073 cv
98.2208 61.4285 97.0279 61.9832 96.1212 62.8719 cv
94.2032 64.7508 96.6925 68.1116 99.0255 66.6365 cv
99.2354 66.5037 99.4249 66.3841 99.6129 66.2722 cv
99.9639 66.1761 100.313 66.1116 100.662 66.0891 cv
101.53 66.2405 102.359 66.366 103.337 66.2263 cv
104.299 66.0891 104.994 64.949 104.994 64.0506 cv
104.994 63.0437 104.289 62.1619 103.337 61.8748 cv
cp
.317647 .290196 .301961 rgb
f
88.8995 55.4173 mo
92.0245 55.1985 95.254 54.4304 97.5103 52.2913 cv
97.5469 52.2566 97.5684 52.2166 97.6021 52.1804 cv
94.6866 53.0379 91.504 54.0135 88.8995 55.4173 cv
cp
.14902 .156863 .152941 rgb
f
95.1802 67.4012 mo
99.8951 67.4407 104.348 67.2356 108.875 65.9114 cv
109.063 64.2908 107.411 62.7127 105.577 63.0554 cv
104.517 63.2537 103.622 63.5354 102.899 64.1741 cv
101.548 64.1746 100.274 64.5808 99.0787 65.2117 cv
98.5816 65.4739 98.1217 65.8367 97.6011 66.054 cv
96.3384 66.0252 95.0797 65.9016 93.9395 65.8284 cv
92.8028 65.7552 92.0548 66.5579 91.8023 67.5061 cv
92.9283 67.4617 94.0548 67.3914 95.1802 67.4012 cv
cp
f
83.6368 63.387 mo
85.9107 62.4295 88.3809 61.4427 88.4053 61.6165 cv
88.6217 63.1546 90.9634 63.6624 91.9175 62.5437 cv
93.6949 60.4588 94.7774 60.0242 97.106 59.1878 cv
99.5587 58.3069 102.72 57.095 104.782 55.4939 cv
105.149 55.2093 106.61 54.1375 106.693 53.7674 cv
106.965 54.0071 107.364 54.5076 107.702 54.489 cv
108.599 54.4397 109.345 54.388 110.062 54.2542 cv
110.095 54.4221 110.129 54.5886 110.17 54.7464 cv
110.381 55.5628 111.086 56.2908 111.914 56.489 cv
112.362 56.597 112.779 56.5554 113.181 56.4695 cv
113.163 56.6292 113.152 56.7508 113.147 56.8001 cv
113.028 57.9173 113.946 58.7449 114.859 59.1458 cv
114.727 59.2991 114.671 59.5711 114.701 59.9783 cv
114.244 61.6599 115.343 62.7752 116.632 63.0012 cv
119.311 61.8391 121.957 60.596 124.648 59.4446 cv
125.152 59.2288 125.69 59.0388 126.239 58.8557 cv
125.002 54.8352 123.22 50.8948 121.019 47.6551 cv
120.754 47.2659 120.277 46.9783 119.791 46.9119 cv
119.058 45.1609 118.123 43.4563 117.273 41.7591 cv
114.592 43.7761 111.878 45.7361 109.011 47.4412 cv
108.978 48.1101 108.826 48.8484 108.895 49.325 cv
108.917 49.4827 108.952 49.6316 108.991 49.7771 cv
106.717 48.5491 104.08 50.6536 101.685 51.9842 cv
97.4307 54.3474 93.921 55.1048 90.5543 58.0042 cv
89.1363 57.3943 87.1422 57.7024 85.1129 58.3655 cv
84.3756 59.2674 83.8516 60.2903 83.6265 61.4666 cv
83.5342 61.9495 83.275 62.2517 82.9503 62.4109 cv
83.1822 62.7395 83.4097 63.0662 83.6368 63.387 cv
cp
f
100.768 60.8592 mo
99.9927 60.5779 98.7525 60.9285 98.0704 61.3626 cv
97.1285 61.9612 96.8555 63.2254 97.3746 64.1853 cv
97.7144 64.8128 98.4605 64.9007 99.0074 64.6048 cv
99.0328 64.6053 99.0577 64.6057 99.0743 64.6057 cv
99.2847 64.6043 99.4981 64.6111 99.7091 64.6077 cv
100.73 64.5891 101.711 64.0511 101.992 63.0149 cv
102.253 62.0471 101.663 61.1834 100.768 60.8592 cv
cp
.603922 .576471 .588235 rgb
f
114.343 47.887 mo
114.515 48.0901 114.697 48.2845 114.906 48.4588 cv
115.637 49.0672 116.653 48.1018 115.967 47.3977 cv
115.85 47.0125 115.732 46.6267 115.614 46.241 cv
115.855 45.5193 115.308 44.9251 114.666 44.8069 cv
114.771 44.532 114.837 44.2639 114.908 43.9949 cv
115.421 45.1077 115.925 46.1316 116.254 46.9373 cv
116.7 48.0286 117.121 49.2298 117.573 50.4451 cv
117.457 50.2971 117.332 50.159 117.181 50.0476 cv
116.492 49.5393 115.121 49.9529 114.86 49.2044 cv
114.722 48.8098 114.352 48.4436 113.899 48.4729 cv
113.768 48.4817 113.633 48.5105 113.5 48.5286 cv
113.807 48.3543 114.086 48.135 114.343 47.887 cv
cp
98.2716 57.0301 mo
101.531 55.5398 104.82 54.1219 108.112 52.7063 cv
108.855 52.387 113.053 50.2732 112.956 50.2327 cv
113.027 50.262 112.945 51.0862 113.267 51.1844 cv
115.335 51.8157 115.973 54.2581 118.419 54.322 cv
118.68 54.3289 118.909 54.2019 119.081 54.0178 cv
119.569 54.9993 120.113 55.9314 120.767 56.7429 cv
121.144 58.0457 121.499 59.3582 121.829 60.6858 cv
122.765 60.2659 123.703 59.8489 124.648 59.4446 cv
124.826 59.3684 125.019 59.3035 125.203 59.2327 cv
124.53 57.4173 123.74 55.6189 122.925 53.887 cv
122.223 51.5198 120.921 49.242 119.946 47.0535 cv
119.136 45.2361 118.317 43.4217 117.431 41.6394 cv
115.374 43.1892 113.297 44.7053 111.151 46.1048 cv
110.94 46.9636 110.974 47.7752 111.672 48.4065 cv
111.891 48.6048 112.138 48.7156 112.395 48.7635 cv
110.595 49.2884 108.732 50.3909 107.166 51.0872 cv
103.902 52.5393 100.692 54.1126 97.4908 55.6946 cv
96.5904 56.1394 97.378 57.4387 98.2716 57.0301 cv
cp
.113725 .117647 .113725 rgb
f
111.051 59.6844 mo
110.986 59.6844 110.986 59.7845 111.051 59.7845 cv
111.115 59.7845 111.115 59.6844 111.051 59.6844 cv
cp
.317647 .290196 .301961 rgb
f
109.217 53.4011 mo
107.287 53.4011 107.284 56.4011 109.217 56.4011 cv
111.148 56.4011 111.151 53.4011 109.217 53.4011 cv
cp
f
120.834 58.1453 mo
120.507 58.3245 li
120.427 58.3689 120.498 58.4842 120.578 58.4461 cv
120.691 58.3928 120.803 58.3401 120.916 58.2869 cv
121.01 58.2425 120.927 58.094 120.834 58.1453 cv
cp
.203922 .215686 .211765 rgb
f
116.551 54.8509 mo
116.486 54.8509 116.486 54.951 116.551 54.951 cv
116.615 54.951 116.615 54.8509 116.551 54.8509 cv
cp
f
114.717 47.3294 mo
113.767 47.3294 113.766 48.8059 114.717 48.8059 cv
115.668 48.8059 115.669 47.3294 114.717 47.3294 cv
cp
f
114.928 60.2791 mo
111.933 61.1624 109.067 62.1985 106.134 63.2605 cv
105.781 63.3885 105.431 63.4993 105.082 63.6077 cv
106.008 62.8108 106.284 61.137 104.935 60.2708 cv
101.371 57.9832 96.5494 58.5916 93.6402 61.6565 cv
92.7642 62.5794 93.0133 63.7366 93.7012 64.4466 cv
89.8204 64.1477 84.1539 63.2752 88.7164 59.5554 cv
97.5753 52.3328 109.896 51.9583 118.777 44.8762 cv
120.743 49.0725 122.495 53.365 123.891 57.782 cv
122.877 57.782 120.713 58.5764 120.306 58.6961 cv
118.514 59.2239 116.721 59.7503 114.928 60.2791 cv
cp
96.335 64.6009 mo
96.379 64.5608 96.4254 64.531 96.4688 64.4851 cv
98.1973 62.6638 100.81 62.3728 102.916 63.7244 cv
103.156 63.8792 103.394 63.9656 103.625 64.01 cv
101.236 64.5779 98.8873 64.7117 96.335 64.6009 cv
cp
128.103 57.8855 mo
126.459 52.3958 124.26 47.0647 121.782 41.8919 cv
122.621 40.0794 120.174 37.9329 118.577 39.6306 cv
111.679 46.9627 101.472 48.2688 92.73 52.4148 cv
88.6417 54.3538 78.7374 59.5042 83.3902 65.0325 cv
85.5303 67.5755 88.5831 67.9934 91.7061 68.2639 cv
96.1124 68.6458 100.621 69.1175 104.936 67.8938 cv
109.555 66.5843 114.053 64.7063 118.681 63.3445 cv
121.274 62.5813 127.203 62.2786 128.251 59.2698 cv
128.425 58.7688 128.331 58.2976 128.103 57.8855 cv
cp
0 0 0 rgb
f
97.73 22.2937 mo
97.3253 21.2566 96.6617 20.5374 95.8917 20.072 cv
94.4405 16.6951 92.731 13.5125 89.5982 11.1619 cv
84.9073 7.64285 79.1656 6.88699 73.918 4.68875 cv
71.4151 3.64041 69.7169 2.3201 66.8546 3.41873 cv
63.6573 4.64627 60.8404 8.1741 58.4512 10.4636 cv
57.9942 10.8631 57.6553 11.3074 57.4102 11.7766 cv
57.2603 11.9505 57.1124 12.1258 56.9664 12.3015 cv
56.3487 12.159 55.7056 12.1341 55.067 12.2776 cv
49.9063 13.4358 44.8238 16.2161 40.3775 19.8621 cv
43.5674 24.2361 47.9527 27.6761 51.3814 32.0305 cv
55.525 37.2932 58.0811 43.823 63.6319 47.7327 cv
63.7584 47.7337 63.8848 47.7327 64.0113 47.7332 cv
66.0577 41.2254 75.4278 38.845 81.0953 37.0061 cv
88.1549 34.7151 93.9634 30.5442 99.7486 26.2615 cv
99.0118 24.9895 98.2818 23.7049 97.73 22.2937 cv
cp
.203922 .215686 .211765 rgb
f
89.8292 12.5428 mo
89.8624 11.95 89.6085 11.3255 89.0836 11.0667 cv
88.5137 10.7854 87.9337 10.5315 87.355 10.2737 cv
86.023 9.40213 84.523 8.80008 83.2032 8.54812 cv
81.8707 8.0242 80.5377 7.5032 79.2208 6.94802 cv
79.21 6.92361 79.1983 6.90066 79.1866 6.87722 cv
79.2623 6.77517 79.3414 6.67752 79.4005 6.55691 cv
79.5767 6.19656 79.4688 5.86306 79.1568 5.62722 cv
78.0631 4.80008 77.0484 5.21902 75.7535 4.95974 cv
75.1588 4.8406 74.6217 4.62771 74.0919 4.40945 cv
73.7139 4.18631 73.3326 3.97342 72.963 3.73172 cv
72.6407 3.52078 72.2999 3.54715 72.0035 3.68582 cv
71.775 3.41482 71.4786 3.19851 71.1466 3.12674 cv
67.2442 2.28396 64.9444 5.63308 61.9493 7.54177 cv
59.8126 8.90261 57.9713 10.3133 56.2364 11.887 cv
52.5084 13.5916 48.8458 15.9676 45.4146 17.8416 cv
44.9044 18.1199 44.4039 18.4085 43.9117 18.7058 cv
43.1304 19.0852 42.3707 19.5056 41.6651 20.0276 cv
41.4141 20.2132 41.1793 20.4124 40.9478 20.615 cv
42.502 22.6136 44.2872 24.4339 46.0894 26.2591 cv
46.1988 26.1619 46.3077 26.0642 46.4175 25.9671 cv
47.5953 25.4778 48.7266 24.9007 49.8253 24.2649 cv
53.7564 22.9192 57.7213 21.5926 61.481 19.9007 cv
63.5782 18.9568 65.1929 17.7019 66.9879 16.302 cv
69.5113 14.3343 72.2359 13.6165 74.9073 12.0989 cv
75.2047 12.1341 75.503 12.1619 75.7999 12.1995 cv
76.544 12.2928 77.0391 11.9837 77.316 11.5178 cv
78.4678 11.7693 79.608 12.1731 80.7423 12.7957 cv
82.5084 13.7644 84.377 14.6477 86.0616 13.9143 cv
86.1768 13.9461 86.2906 13.9856 86.4068 14.01 cv
86.8863 14.8738 87.212 15.7996 87.7862 16.6057 cv
88.7286 17.928 90.9464 17.5403 90.9615 15.7459 cv
90.9717 14.5774 90.5328 13.4973 89.8292 12.5428 cv
cp
.317647 .290196 .301961 rgb
f
80.1798 32.2571 mo
79.3897 30.5012 77.8311 30.6653 76.7349 30.4148 cv
76.1944 30.2913 75.6475 29.8289 75.0465 29.6936 cv
73.918 29.4402 72.6309 29.7239 71.5059 29.8543 cv
67.1226 30.3611 61.6436 31.6355 59.7159 36.1082 cv
59.2349 37.2234 60.2105 38.2229 61.335 37.7278 cv
62.1934 37.3499 62.9913 36.9817 63.7672 36.637 cv
65.1143 37.6136 66.5196 37.4695 68.2213 36.9832 cv
71.6324 36.0086 74.4903 35.489 78.0557 35.9583 cv
80.1143 36.2293 80.8384 33.7205 80.1798 32.2571 cv
cp
f
80.6343 37.1531 mo
80.4913 36.9749 80.3336 36.8074 80.1461 36.6702 cv
80.2266 35.6673 79.7447 34.697 78.4781 34.4915 cv
73.9464 33.7561 69.6671 36.3841 65.2794 35.5506 cv
64.0421 35.3152 62.9371 36.1287 62.4976 37.137 cv
61.3741 36.8601 60.7672 36.8679 59.6348 37.0237 cv
59.6065 37.0257 59.5806 37.031 59.5533 37.0349 cv
59.4717 37.0462 59.3965 37.0564 59.3091 37.0691 cv
57.7325 37.2996 57.4634 39.4656 58.4171 40.4495 cv
60.3795 42.4754 63.8214 43.178 66.9034 43.4021 cv
70.5631 40.1345 76.463 38.4842 80.6343 37.1531 cv
cp
.14902 .156863 .152941 rgb
f
82.0025 19.5882 mo
81.3062 18.3977 79.7227 18.1385 78.501 18.5257 cv
77.7115 18.7761 76.6925 19.3928 75.8912 20.1839 cv
74.2828 20.0735 73.6187 22.0847 74.6397 23.1336 cv
74.6846 23.3435 74.754 23.552 74.8731 23.7561 cv
75.6392 25.0657 77.3824 24.6951 78.4229 23.9993 cv
78.4376 23.9895 78.4512 23.9778 78.4659 23.968 cv
79.4752 23.8743 80.4532 23.5696 81.2081 22.9973 cv
82.2633 22.198 82.7003 20.7815 82.0025 19.5882 cv
cp
f
85.6851 35.1853 mo
90.4625 32.9656 94.7261 29.9656 98.9439 26.8562 cv
98.2667 25.2581 97.5963 23.6585 96.9254 22.0613 cv
96.3594 18.9939 95.1627 16.3728 93.2159 13.593 cv
92.1343 12.0491 89.3453 12.9246 89.9893 14.9534 cv
90.8067 17.5286 91.6695 20.0877 92.5816 22.6287 cv
92.7144 23.2371 92.8594 23.8465 93.0059 24.4558 cv
91.0557 23.824 88.6256 25.7727 88.2125 27.8689 cv
88.1436 28.22 88.1378 28.573 88.1827 28.9143 cv
86.9224 29.657 85.7818 30.8206 85.0826 31.7029 cv
83.9893 33.0828 84.5616 34.6057 85.6851 35.1853 cv
cp
f
71.4986 30.9705 mo
69.7056 30.7981 67.7828 31.5984 66.1065 32.1502 cv
64.9381 32.5349 65.0455 34.5779 66.4151 34.429 cv
68.2027 34.2346 70.168 34.4466 71.8995 33.9353 cv
73.609 33.4304 73.1446 31.1292 71.4986 30.9705 cv
cp
.603922 .576471 .588235 rgb
f
82.0718 6.83181 mo
82.1197 6.50222 82.022 6.15261 81.7637 5.85574 cv
79.8809 3.69119 75.4761 3.83474 72.8106 3.74392 cv
71.4434 3.69705 70.2247 3.81765 69.0958 4.12576 cv
69.0621 4.13504 69.0299 4.14529 68.9971 4.15603 cv
67.3917 4.61355 65.9703 5.46756 64.6036 6.86843 cv
64.5938 6.87869 64.5914 6.8909 64.5821 6.90164 cv
64.4102 6.74295 64.1885 6.63699 63.9195 6.64968 cv
58.5709 6.90701 53.2896 11.0261 48.7125 14.3108 cv
48.0709 14.1751 47.3951 14.3733 46.8204 14.8308 cv
45.6675 15.7483 44.607 16.7595 43.609 17.8289 cv
42.5577 18.5706 41.546 19.3279 40.5699 20.116 cv
41.6177 21.5208 42.7828 22.8343 43.9996 24.1136 cv
44.3497 23.74 44.6968 23.3699 45.0489 22.9929 cv
45.5186 22.49 46.6378 21.5471 47.7237 20.4417 cv
49.2911 19.6302 50.8585 18.8181 52.4049 17.9715 cv
54.773 16.6746 57.503 15.5921 59.6671 13.9236 cv
62.5972 12.7957 65.4566 11.6165 68.337 10.3167 cv
69.9908 9.5701 72.2711 8.99734 73.8394 7.8367 cv
75.7808 8.32156 77.6173 9.1492 79.4962 10.1687 cv
81.4434 11.2249 83.3585 13.1736 85.5909 12.0149 cv
85.9205 11.844 86.107 11.4627 86.1133 11.1043 cv
86.149 9.0574 84.0928 7.75613 82.0718 6.83181 cv
cp
f
94.6114 28.1687 mo
94.5225 28.1165 93.9859 29.9007 93.7989 30.51 cv
95.5406 29.3367 97.2476 28.1067 98.9444 26.8557 cv
98.9278 26.8274 98.9132 26.7986 98.8966 26.7708 cv
98.6451 26.3255 98.3741 25.8919 98.0845 25.4705 cv
97.9776 25.0989 97.8389 24.8953 97.6715 24.8406 cv
97.6881 24.5393 97.5621 24.2781 97.2462 24.1761 cv
97.1837 24.156 97.1212 24.1355 97.0582 24.1155 cv
96.6822 23.9939 96.2877 24.2586 96.1778 24.6155 cv
96.0782 24.9387 96.0323 25.2913 96.022 25.6604 cv
94.4185 24.825 93.0303 27.2263 94.6114 28.1687 cv
cp
.113725 .117647 .113725 rgb
f
66.8336 41.5203 mo
67.2037 41.9046 67.6719 42.0838 68.1739 42.1404 cv
68.2115 42.1516 68.2349 42.1746 68.2759 42.1824 cv
68.3238 42.1917 68.3721 42.2 68.42 42.2093 cv
70.7427 40.6136 73.5977 39.4661 76.3087 38.5442 cv
75.8306 38.2312 75.1236 38.1736 74.4957 38.1966 cv
73.2935 38.24 72.045 38.3533 70.7984 38.4197 cv
70.4757 37.5047 69.4757 36.8328 68.4239 37.5052 cv
68.1358 37.6887 67.8267 37.864 67.5323 38.0579 cv
67.2696 38.1936 66.9991 38.3142 66.7008 38.4192 cv
65.0489 38.9973 65.4078 41.2981 66.8336 41.5203 cv
cp
f
68.0508 17.6013 mo
65.3062 17.6013 65.3013 21.867 68.0508 21.867 cv
70.7955 21.867 70.7999 17.6013 68.0508 17.6013 cv
cp
.317647 .290196 .301961 rgb
f
62.2174 21.1277 mo
61.2222 21.1277 61.2203 22.6746 62.2174 22.6746 cv
63.213 22.6746 63.2144 21.1277 62.2174 21.1277 cv
cp
f
63.8839 23.6341 mo
61.3956 23.6341 61.3917 27.5012 63.8839 27.5012 cv
66.3726 27.5012 66.3765 23.6341 63.8839 23.6341 cv
cp
f
53.5508 27.4676 mo
52.9927 27.4676 52.9918 28.3347 53.5508 28.3347 cv
54.109 28.3347 54.1094 27.4676 53.5508 27.4676 cv
cp
f
52.8799 24.8899 mo
52.46 24.1927 51.5274 24.011 50.8824 24.5086 cv
50.2266 25.0149 50.1905 25.9373 50.7452 26.5374 cv
51.1343 26.9593 51.4771 27.3015 52.1065 27.281 cv
52.6441 27.2635 53.0718 26.9261 53.2364 26.4207 cv
53.4322 25.8196 53.1763 25.3821 52.8799 24.8899 cv
cp
f
85.3839 32.0178 mo
85.3199 32.0178 85.3194 32.1179 85.3839 32.1179 cv
85.4483 32.1179 85.4483 32.0178 85.3839 32.0178 cv
cp
f
84.3839 26.5178 mo
84.3199 26.5178 84.3194 26.6179 84.3839 26.6179 cv
84.4483 26.6179 84.4483 26.5178 84.3839 26.5178 cv
cp
f
84.8839 24.0178 mo
84.8199 24.0178 84.8194 24.1179 84.8839 24.1179 cv
84.9483 24.1179 84.9483 24.0178 84.8839 24.0178 cv
cp
f
87.5508 17.9646 mo
85.2735 17.9646 85.2696 21.5037 87.5508 21.5037 cv
89.8282 21.5037 89.8316 17.9646 87.5508 17.9646 cv
cp
f
84.2174 15.5178 mo
84.1529 15.5178 84.1529 15.6179 84.2174 15.6179 cv
84.2818 15.6179 84.2818 15.5178 84.2174 15.5178 cv
cp
f
69.0508 23.7459 mo
67.1353 23.7459 67.1324 26.7224 69.0508 26.7224 cv
70.9659 26.7224 70.9693 23.7459 69.0508 23.7459 cv
cp
f
76.8829 37.3245 mo
71.7652 39.1736 66.4283 40.4148 63.0621 44.8015 cv
59.7213 41.2273 56.8057 37.034 53.4234 33.4929 cv
50.9053 30.8567 48.5382 28.1302 46.3458 25.2151 cv
45.2828 23.8015 42.4346 21.2576 42.7178 19.5388 cv
47.0128 16.3626 52.3516 14.5467 57.0274 11.9851 cv
59.6544 10.5462 61.8785 8.81424 64.1436 6.88406 cv
66.879 4.55398 69.5001 3.74441 73.1002 4.80984 cv
75.2984 5.46072 77.2769 6.93777 79.2227 8.11648 cv
82.4053 10.0442 85.504 10.7278 88.8043 12.1687 cv
93.1041 14.0462 95.3394 20.3626 97.4342 24.2635 cv
97.5972 24.5677 97.7554 24.8748 97.9171 25.18 cv
91.6436 31.0125 85.0997 34.3562 76.8829 37.3245 cv
cp
102.073 24.5418 mo
102.09 24.5286 102.107 24.5159 102.125 24.5032 cv
100.086 20.3782 97.9737 16.1013 95.3502 12.4226 cv
92.4942 8.41824 88.9151 8.62918 84.7364 6.65408 cv
80.0513 4.44021 75.9864 .504665 70.5992 .0393335 cv
65.1011 -.435276 62.5845 3.47 58.5616 6.35476 cv
53.3477 10.0935 47.2408 12.0784 41.9927 15.3938 cv
41.4527 15.305 40.8692 15.4265 40.3502 15.8836 cv
38.8077 17.241 37.4175 18.0886 37.9796 20.2337 cv
38.8087 23.3997 42.8023 27.1878 44.814 29.7371 cv
47.6778 33.3665 50.9439 36.5764 54.107 39.9348 cv
56.9019 42.9021 58.9258 46.4851 61.8756 49.3006 cv
62.8604 50.24 64.1104 49.8889 64.7994 49.0901 cv
65.2183 48.8636 65.5313 48.4749 65.7217 47.9969 cv
69.4713 42.0471 79.9854 40.5774 86.0841 37.9846 cv
92.3204 35.3338 97.0303 31.6853 101.834 26.9729 cv
102.62 26.2014 102.55 25.2454 102.073 24.5418 cv
cp
0 0 0 rgb
f
80.2276 32.7532 mo
79.1202 29.0789 73.0704 29.0569 69.8785 28.8538 cv
65.0484 28.5471 61.7081 31.2097 58.4727 34.4739 cv
56.6588 36.3045 59.4859 39.1345 61.3013 37.3025 cv
63.3521 35.2332 65.5113 33.0061 68.5938 32.804 cv
69.1016 32.7708 76.2579 33.4412 76.3707 33.8162 cv
77.1119 36.2747 80.9737 35.2273 80.2276 32.7532 cv
cp
f
78.0103 16.4075 mo
75.9561 15.1511 73.1524 17.2576 73.8951 19.5896 cv
74.2125 20.5852 75.2994 21.3284 76.3555 20.9866 cv
76.8497 20.8264 77.2794 20.4827 77.5469 20.0471 cv
78.0411 19.9114 78.4854 19.6028 78.7281 19.1443 cv
79.2427 18.1697 78.9644 16.991 78.0103 16.4075 cv
cp
f
12.6734 72.9373 mo
16.9229 69.6858 21.4693 66.6385 26.5801 64.9217 cv
30.6661 63.5496 34.7618 63.5198 38.9156 63.6233 cv
34.774 59.3518 32.2921 53.699 28.3536 49.0506 cv
24.9908 45.0818 21.1519 41.7835 18.1583 37.8011 cv
14.0025 41.6751 10.5621 46.2737 8.40631 50.9095 cv
4.65485 58.9768 .73737 72.0764 4.27741 81.2351 cv
6.85065 78.243 9.45954 75.3968 12.6734 72.9373 cv
cp
.203922 .215686 .211765 rgb
f
4.46881 74.5047 mo
4.46979 74.5257 4.47028 74.5476 4.47126 74.5686 cv
4.47858 74.7239 4.50348 74.867 4.5401 75.0017 cv
4.62702 75.533 4.72321 76.0618 4.8277 76.5891 cv
4.98786 77.6912 5.21198 78.7674 5.5318 79.7962 cv
7.01276 78.1223 8.54303 76.5135 10.212 75.0047 cv
11.1182 69.7928 12.8082 64.948 14.5894 60.1057 cv
14.5748 60.2024 14.5631 60.3006 14.5674 60.4011 cv
14.6119 61.385 15.3658 62.2176 16.3839 62.2176 cv
17.334 62.2176 18.2442 61.3821 18.2003 60.4011 cv
18.1724 59.7698 17.8497 59.2044 17.3546 58.8772 cv
17.4029 58.7337 17.4234 58.5701 17.3253 58.4397 cv
17.2003 58.2747 17.0889 58.1546 16.9014 58.0589 cv
16.8013 58.0164 16.7012 57.9744 16.6011 57.9329 cv
16.588 57.9217 16.5767 57.9114 16.5323 57.8797 cv
16.2266 57.6355 15.898 57.5027 15.5499 57.4983 cv
16.4659 55.0149 17.3731 52.5154 18.1793 49.9495 cv
18.4381 49.1258 18.1695 48.5388 17.691 48.1883 cv
17.7608 48.1287 17.834 48.0764 17.9049 48.0183 cv
18.0548 47.9739 18.2017 47.8889 18.3467 47.783 cv
20.3702 47.0076 22.1485 45.68 23.8692 44.2122 cv
22.1031 42.3909 20.3638 40.5882 18.8091 38.6419 cv
17.6871 39.781 16.691 41.0554 15.8629 42.511 cv
15.6387 42.9046 15.6422 43.2752 15.7764 43.5803 cv
15.7579 43.6062 15.7393 43.6316 15.7208 43.658 cv
14.8052 44.9339 13.9703 46.262 13.1954 47.6287 cv
12.7745 48.1721 12.3824 48.7522 12.0079 49.3504 cv
11.9522 49.4182 11.8931 49.4822 11.838 49.5501 cv
11.0543 50.5115 9.00983 52.6966 9.52936 54.2737 cv
9.21784 55.034 8.92731 55.7986 8.65631 56.5579 cv
6.66217 59.1912 5.51715 62.5745 4.93317 66.0584 cv
4.7901 66.1888 4.66608 66.3338 4.58796 66.5008 cv
3.59674 68.6077 4.06403 71.2825 4.32965 73.5291 cv
4.36823 73.8562 4.42048 74.18 4.46881 74.5047 cv
cp
.317647 .290196 .301961 rgb
f
25.5548 51.2288 mo
24.9024 50.5799 23.9678 50.4182 23.1236 50.7747 cv
22.4815 51.0457 22.0694 51.5296 21.8223 52.1399 cv
21.2584 52.9026 21.1846 53.8015 21.6973 54.6736 cv
22.0757 55.3162 22.7281 55.8592 23.5157 55.8089 cv
24.2379 55.7625 24.6002 55.1385 24.5035 54.5813 cv
25.2037 54.3919 25.7867 53.93 26.046 53.0877 cv
26.2442 52.4427 26.0259 51.6985 25.5548 51.2288 cv
cp
f
30.0777 51.2625 mo
29.5289 50.5081 28.96 49.7664 28.3536 49.0506 cv
28.2764 48.9597 28.1968 48.8719 28.1187 48.7815 cv
27.0089 48.2532 25.588 48.4734 24.9058 49.576 cv
24.4088 50.3787 24.4791 51.5149 24.1695 52.4114 cv
23.9298 53.1053 23.567 53.7093 23.2081 54.3177 cv
22.9649 54.2791 22.7481 54.2312 22.5884 54.1853 cv
21.3389 53.824 20.6265 55.3538 21.3912 56.242 cv
21.689 56.5882 22.0342 56.887 22.3995 57.1546 cv
22.7916 58.7024 24.6715 59.6848 26.1656 58.2761 cv
26.2379 58.2083 26.2945 58.1214 26.3629 58.0481 cv
26.752 57.9514 27.1387 57.8167 27.5132 57.5955 cv
29.3731 56.4949 30.5269 53.6345 30.1592 51.5447 cv
30.1417 51.4466 30.1016 51.3582 30.0777 51.2625 cv
cp
.14902 .156863 .152941 rgb
f
16.4166 70.2195 mo
19.5836 68.0511 22.9366 66.1453 26.5801 64.9217 cv
28.7051 64.2083 30.8331 63.8611 32.9703 63.7039 cv
31.6216 63.6179 30.2574 63.7498 28.8619 64.1707 cv
25.773 65.1033 27.5816 64.3299 25.4434 62.5696 cv
24.8555 62.0857 24.0045 61.6653 23.2198 61.9822 cv
20.8907 62.9221 19.3409 65.0027 17.0928 65.9939 cv
16.5484 66.1292 16.0045 66.3172 15.4605 66.5877 cv
13.6094 67.5086 14.6378 70.1394 16.4166 70.2195 cv
cp
f
3.03766 77.2801 mo
3.17585 78.0926 3.63678 78.5579 4.20368 78.7527 cv
4.461 79.3055 4.73346 79.8484 5.0196 80.3831 cv
5.97321 79.2903 6.94147 78.2215 7.94831 77.1868 cv
7.66803 76.5345 7.39801 75.8758 7.13678 75.2112 cv
6.68415 71.8079 6.83893 68.4016 7.70954 65.0569 cv
7.82575 64.6106 7.96491 64.1702 8.1109 63.7312 cv
8.4859 63.576 8.82184 63.2771 9.05475 62.7835 cv
10.7735 59.1433 12.544 55.5296 14.3892 51.9524 cv
14.941 50.8821 15.6119 49.7928 16.2276 48.6746 cv
18.0855 46.4793 20.0196 44.3753 21.9942 42.26 cv
20.7071 40.9002 19.4669 39.5178 18.3394 38.0452 cv
16.6456 39.6306 15.0938 41.3889 13.7105 43.4622 cv
13.4761 43.8133 13.4654 44.1746 13.586 44.4886 cv
12.4576 46.1419 11.6588 48.1048 10.7667 49.8347 cv
9.6988 51.9055 8.6612 53.9915 7.63874 56.0847 cv
4.01764 58.7864 2.71686 64.0286 2.51423 69.0974 cv
1.32135 70.2063 2.01032 73.0535 2.7486 75.1927 cv
2.8321 75.9256 2.9278 76.6321 3.03766 77.2801 cv
cp
.603922 .576471 .588235 rgb
f
2.54499 83.2669 mo
3.51911 82.1194 4.48298 80.9856 5.461 79.8772 cv
3.63141 75.698 3.9527 71.2962 5.05329 66.4373 cv
7.20075 56.9593 11.5128 48.2654 17.4288 40.5886 cv
17.7764 40.4544 18.1026 40.2215 18.3658 39.8553 cv
18.5889 39.5442 18.8267 39.2512 19.0655 38.9602 cv
18.2159 37.9187 17.418 36.8372 16.6993 35.6883 cv
16.0757 36.3557 15.4722 37.0569 14.9141 37.8333 cv
14.585 37.9651 14.2745 38.1785 14.0186 38.51 cv
7.55817 46.8758 2.92243 56.5818 .854069 66.9759 cv
-.0150717 71.3455 -.588802 75.8924 1.01032 80.1638 cv
1.41315 81.2405 1.94001 82.2722 2.54499 83.2669 cv
cp
0 0 0 rgb
f
39.9586 61.5017 mo
36.5875 57.2727 33.3502 52.8738 29.5928 48.9763 cv
25.8126 45.055 21.6729 41.5447 18.5098 37.0686 cv
17.0357 34.9832 13.5655 36.9793 15.0557 39.0877 cv
17.5269 42.5838 20.4864 45.5554 23.4976 48.5369 cv
23.4937 48.5384 23.4898 48.5384 23.4859 48.5398 cv
22.5601 48.8782 21.772 49.3787 21.1651 50.1648 cv
20.5396 50.9739 20.2613 51.8177 20.129 52.826 cv
19.9923 53.8675 21.1465 54.8699 22.129 54.826 cv
23.2681 54.7747 23.9088 54.0208 24.0967 52.9905 cv
24.0924 52.9944 24.0884 53.0003 24.084 53.0012 cv
24.0875 53.0003 24.0933 52.9895 24.0982 52.9837 cv
24.108 52.9304 24.1216 52.8802 24.129 52.826 cv
24.1226 52.8728 24.1143 52.927 24.108 52.972 cv
24.1202 52.9524 24.1339 52.9275 24.148 52.8968 cv
24.1841 52.7718 24.1798 52.8113 24.1568 52.8777 cv
24.1827 52.8206 24.2066 52.762 24.2169 52.7439 cv
24.233 52.7156 24.2847 52.6536 24.3272 52.6013 cv
24.4068 52.5408 24.5196 52.4451 24.5323 52.4207 cv
24.544 52.4143 24.5601 52.4055 24.5655 52.4021 cv
24.5987 52.3836 24.6495 52.3616 24.6934 52.3435 cv
24.6583 52.3567 24.6143 52.3728 24.5494 52.3968 cv
25.1998 52.159 25.7491 51.6287 25.9473 50.9827 cv
29.0025 54.0862 31.7305 57.4851 34.4258 60.906 cv
27.859 61.3577 21.8409 64.0359 16.1221 67.5164 cv
10.5162 70.9275 4.91315 74.6858 2.05231 80.8069 cv
.969303 83.1253 4.41608 85.1585 5.50641 82.826 cv
8.08405 77.3098 13.0914 74.0428 18.1412 70.97 cv
24.4649 67.1219 31.0167 64.3318 38.5445 64.9158 cv
40.463 65.0647 40.9258 62.7151 39.9586 61.5017 cv
cp
f
24.0982 52.9837 mo
24.0977 52.9861 24.0972 52.9881 24.0967 52.9905 cv
24.1002 52.9876 24.1031 52.9866 24.106 52.9827 cv
24.1065 52.9788 24.107 52.9759 24.108 52.972 cv
24.1041 52.9773 24.1016 52.9798 24.0982 52.9837 cv
cp
f
24.106 52.9827 mo
24.0963 53.054 24.0953 53.0833 24.1378 52.9309 cv
24.1397 52.9241 24.1407 52.9217 24.1422 52.9158 cv
24.1314 52.9417 24.1197 52.9661 24.106 52.9827 cv
cp
f
24.1422 52.9158 mo
24.148 52.9026 24.1524 52.8904 24.1568 52.8777 cv
24.1539 52.8845 24.1509 52.8899 24.148 52.8968 cv
24.1461 52.9031 24.1446 52.908 24.1422 52.9158 cv
cp
f
24.6934 52.3435 mo
24.8223 52.2952 24.7725 52.3113 24.6934 52.3435 cv
24.6934 52.3435 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_2.eps)
%%CreationDate: 3/12/2018 2:37 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-kEic$+bX-WA`mNZO!">a8,rP@mr#m%5OGI=4nU<#Pi_gj<Ej4J-sY<\.]tnJHM[SugQui-qtejlg[Dj<
%]R'SBoliXT*WGcnjmH2G^6.;8fmS/Cr;!D.me4u!4T11CF8_$he]kG`[l:Ks^Nf<]Q`h/_L9Gjl^O.D1aUR``[[41HnNr\Y\:*s<
%?;BpJdsq#%TC:r58h5rEs6K,k^NoP/S(CHm4F?blJ,KMJ?N258XhVCEp5/c8DYCE-PN0^SbMD^^:J\]Sr^NNj>L/JI^A5k\\+i12
%^\JWshsm]t%rscJ47lm_NeW#\eDYoCBm9T3^\_<h7=EI"Is]*i]Uk4O>tjg)D\ooF%m\=!q3'sXhqu0CpA'n2[lT2=??lrf>f'L&
%n[dK'09afA,sQP>W]D$X<rH$$6JeQ%Y0msQEB[]?+0o1Y%fG])cYidZZe^,GIId'uCE)0sf5JBJpA`5o\koRu?m%>M<EQQ9'7T]S
%o@qmso((HQku,3+dm<i\X06H6bB<-1DOs)OYYREts0je5s5`i3[r4Z`?TnE1A+[*5?2F#=rV_X]55Eqb,gt@5Ie2sobMU)2++31B
%\g=#Qjn4q?Zu`4t?!D=k8EkH`dknl=[^ZS1d-k6oG/"b8rQXY@h`Q8]ZR-^edosE+n'>?*qg'"7iceE&O'cm,Va%<`Z'U_OJ+Mgr
%AUf'i^H2:-RL%*eYJ.fI:G9IH]R#.Vp^[>Zb7o1MZfCk^DsXt!5PR=N`V89D\$4hl?b_a3T"W(%+$]V0riU_CgZRJ;07Wuteb@u#
%ioQe=4b!%`l`X[onTOZMB.n1IqTBn/qifisg%OM"S%l[`r>5:m0>>/KZ;0tk-dTO*aZFD:`F!N?4T4mID6<J@DYu_:T>#UD>,:]S
%h/E;f^Z?QI$WP::pTL2OPqSGQO)l@_6Q)0@rVP\[rj2Y!+kMXdOdBEnTWP,Y5MSGPp$Hj24msP<r9a)'0;#luS^p<q#PlUX):eDG
%3:Z^e+!,N"&aaM5>BlM%TY0lLkuSCAe<;h@QK@*!jk&CL]B_]52ojN`gI(CRGk1e.ZYs/7q=`.\T'l<U^]3`J]ALALomGQn_XGO/
%k25]1\FMour3mJlI.dEjG;$sGk*Fn^$pT+8r:Z&`IJ;mt@AA_%s8(hq?>BMqr<bXFqu]?"l8A&'pA_Qs)cp<kP5Ol8do3u*b+?09
%N:!ggF0,1%i)BIpT>#b$$Ls^Es428*q!/U@fY;h-a*13VFRu,r]bHrEpVlmQhV>8To@8b;@>aKeq"'\fD`Mn8R:!&)9OGoQ2Qp=L
%rTW'<1`(B5Qh)XjJ,SHoB<l.K9N8Kg0%-T.KDb<VHM$q)V**m\]<'^p\,Z<pUOR^i8B_9FRh,:`bH50sGPK5<>if<j^^pF1`Ot]&
%^J%96gFM]@o[Ws6-b@Fl1:quS=;Z@J?,+F_hdU5B&DJssIBtK7&$1Vk54UW/mlp#2dO0=&o[3-t8R=dA@XhW/[L:nSK)"*h?[qtN
%p7HNCH2Zgc2n'@7Z^.`_/PGRbj)6)Pk7[dF>4<S_j$.8eNoH5&%uDL;[)M!u/iis`j%%_s3lqu;_mR7&E\-T'a0G$dFi.!l=^8_o
%6M&IDZ.)]8epWfje5C@IeQ5gib!D%g6nCt`i[,G-Dr`n#Z-RHK>Vgh,N]CW'LW`=sdZ#6EFHkgIp2\6L;AINQUm.Sn508aS0&FZh
%M?c0&<FZ^*[D\";@Z\LJ7JrUDE0B5u%W]YRKGLR----1.P)PZm5;#M$KZ2j<36?14#<DKu>^Q9;?[\%=0:BK.g.S?dO-=(iiGRFB
%Nh[S@l*.jCML;gf7$/_+,Y)tI(gQ"SE[/V=3Qc?'5PsPGNlIj:Oa2bPAOk*;4FZpPF*-K^gc56(?bZ*nhu0XQ+8[#TZ/`be-V1'2
%pE9KcOQ1Z%QTs+![[.$N(HKo-@i4o*%Wi"`pdU:-*!\KC\d6;u'tJnVLk)2"7<U(Bm7*,2aNm-^S-Uh]Z(M4cL/a'"nMbJ.7@"F(
%lmY`^'gL\T;6Fq6(d='7OY97->suh1jX>Tgo)F(4s(aW`r2K8e7K1%eE$-&CIicL)QEoS@a,`V$:NEBj*otWgY<V*RLg4PS9ZUh4
%:<9=hq7JEg`?15k5!$k7rcuO)S]F<eY1kTW[toECOhA@hM807Ve0`(U$B%H"P&<@7UPP,XSJ^Ip>27.s>#LFg;e:\(dn.8,aB'2B
%KgWS:SdI5kX7YLN`6uc/c8$0e1.!oT?9uT7Ldj?^kt;oY+<t5^&e<O6lPkru0+q2OMQTCF:*P$[VI5Xk.PeO$E&\h+r7s(u-g%0d
%J:HkSqRAa2O)daY:>qF^jAQZ`F+$*>NcO@0ND(KK$35]EV';Y_DYDP!]K(u3aO+-M5S+i_%YP,)'Les`I%#F3Kag@m/]%`94Am/=
%mtHW/\fagc'BB:*r:lD11OcL'1\MOR,LtlbAi8,:kB)MZWfXK;#KTTScec8".$NnM*@J&$GFW>T04Vr"QT5X.*l,n.k>]F-4^gsh
%HSOK3F`KOa#dUMYg"2rTY&OKR?&mCmk&:Fi,6K'W:'MlaO_cF"&Fp-P,oI+rE(%G_dA%)VSENIG3FmA&qf6p85giC%BGi/0e2gPG
%W9)#rZ\gX^6RMEuL)kWYcgK7Pk,Aap3g`M[*<68((W>?Q\S+Ir;_/"p]F\HJLtm$-W"eBKY"$IR6?1p/4]7U8BP:Jf$&se$$(a-,
%1$&db$rm93C/;ffTSb]p`h5@\JtPN9*lpB/`I\?Ti^/>$`RCc?p07TY<)4ljYY*b'HQmm4g_,lVQbP/(ZOD"+SE2G$%Yl<-Yu23'
%->.$LGoRI]LIBECfqi_T99[R`3[+k8Obmka,pmGoDN,i'?K>c3R6$2/*(7rPjfqfL4\OBsO[q#k$Psa50md,0b$M.Z)5>2``Gna8
%aj[Je>]VnS\t#-*ZH*it#W\7iJjj3.6a1sZRn@U-n[On1W*D0BoPrf@d2.^nN!pI./.S)+K.[T@Q\6S"K53(A--J@["3&YI3LO;r
%D.ZA:=V=+@SZLKu8WG""H^Z519Thr!`2Q$HV?RHl]pU*!7Zs/`N^ehn+)6+$RN9LD%VMZY;5QD`NJ:GpUU)]QeI^MY4)ifr5U)/%
%"R`i1\EbL"-.Dl=Dkoks8),@MBi"9J]MZG3^6PdM,!g7,kR<S#"dH3dE='EcIDNSs`)8DHo`@>DqY,(3roN7b-SKAPhL/m.kZ,+n
%(Ye'FWB14<'(KEQ,gfdiB)Y*gYS.s!MZ/3mE"K,[4!BK32%d:WYSFI"j^(@I,kcg'iCtN9U/XOZO0fcePqH&'?IfNbVi_=nd<;1o
%'P.S.)6"S`<T9V8nC3e3RB1i4e]#!N]^qlPQeZ,OY,aQt.]U#=:iS7u9[,S%GZE.jW`*K,l:r(#)/=(iI/R]]LY+Mb#eMisO-:SC
%rP7DU*U`JA!oWMeiSkI<3R[Vo)SPU\pE&Gq6gf3Vn*5ZKElWs-h&^UX*?TC[_iN,f]^Lg$[rJ-@!kjVs<DK8i(@c0m=CnL8p9HqL
%[s33BL"bW2bM#ZU!'/L)Y!Fn%#l2lT9V>HbB_9^%1\2*R?)9irV]g8Y^/9lRW,jGr%S\f`XLkIoBV9M8Z^PJ&@?RTUVWQMb`[4'3
%Y(5`7]pW?MeK$>BX;bZcN3QAUbpHRXg16^ZRt6=S0TP1pbIZ)u#>M[=\.ii/E1['\HA&aIna&ej%VeLC5kc;\_+.cA\RU'6UV6Vf
%420a6pH9RF`s;Xc*C')?5K4`$V,8Rf;FSggh#c&EPI7]o4qVR,oLTZ?]#k_OeJ_JHGaV=Nm6nR_dV=?nkiaQe3f9+b&XUk41YCO!
%q__!t.C3'ck/)?s2t(jc<Pm*4$8DP(l7g,W=\dep)nJJGMcr@rn??YqiVJC#.2rMr%K!*iRCbNB>gmLGNnR>LXg?P>B,^!NEMe!i
%'7?0J])S-SQ/(o4p3QUU^J9-bf))-#o,[k5meH7&^H+G5#S;5KH<cll9_I)H3!6tlDg8S?s3to5Zs.%Qi#if!C,djb%Q77^N]RZ]
%adZq/<R\d%lB[WYAl*;HF<)^M@FB@Nq@48T-@c/+2mf3/@D.B7$60,_>W2epjGottT]HMD[mhKug5QXZZs*4X$B5uKNPkfsF/_U(
%3iX#jW^!M;'J!.rdPXLdj*aV5!]*Vgo"=1'M+k_J>!8q>F.,7bXoEEZh+g1D$012niAb+,f#Z"Q__YKfcm(a8O?5Yi49E;/3ol;3
%552h?*P4eO\[a`Wlt%n&2sD[E\C8^e-pum&1*i9>mW`e8MMM6Fc,Y)$KL1`T4[IFg!7VVY"SCC2>A&PZJ33jW!q$3DWDKJoSO^]B
%']`5Ldf@Z&\7s<e=;2e2HjI)>JX_<NB5l>Xc,Yl)FVNj%+K*)H$?RcIWF2X@SU6:3<e?on4Z*uo2&[u+$37$2W,.O<*\B:^-QIH7
%C;XMf`T"7P.&41)k`<b-[N7f9Wck;m/`9PjqUFda934",UoNIJC%qDMM"5/9or^fTNj(OhJ)#@k*Cl'5HaoPlNmh3nUT>NW#9S_V
%*-0()STbU7FlAED55<q53d86Iq5dFWCR!-`jg.GP<-S8A;*Jc[cPkoO7eq.M1lX7gOf/5irkFNo-$'cX9[Sam]hEC)Piq+J6et\'
%\]bhu+H,s1?S8-(I%'pU5*&#](Q^8RLi+/m3,@qpAp<@tB,BQ-G#PEXV;Lr]MVKHP]^s<Hn?$N03WEC"As7Zt)Ep?W^tk2Mi&8]r
%ZGu59&CX^Od4j"Xf%A<i<n3EW3I6T3k01Kjo&,f_2u3CIo973NpP7e=;aDJs>Q0'uPbl;f+f_h';2@PYO;(jXQK$J[P.Q4S.$U@`
%I[[K=4OTXB03MHR(T^k4GH$L=&[K01]U,t>Lkl;kTl)[O5M\L"4+?PjIbNZU";A_mb7d:tcR-^[iMI7]4Yi*67@5T6?A-9<_cTJG
%F:4"bC#B9b(,7<L%#?-U'aa1UW(T[JH&i<r<edg?i)Lt_MicIDT?:VoW\OWT7td^PKR&0YRD:Dk:CLsHAYdun9<YT_<m)<g"D3SR
%X_Q/H#p:c4>r5\1N@\)S;,uQHAn7fSId/gM[96gNcV-LDoK=of<V'.9L2*q$<TL+(=fT_#@DusRk@DVmk,^aqFB[`Z]B^0tLuV#N
%d9(Hm[n",Q1qBCD]$A>#(VY,60-'[1GJ*QhF5Lu0A[WZ>'V)Z.#9TD6HZmINn$IMunbJ46HfZTqV."EJS#Y]l,i`S->XM2Q#s"I@
%G@^"4@bO?F:Lf2Pe0>3HU#XS=l'9Q>Ob'C!OU.=K,OMIo:.$OG*d6eI3m>3"1#':;lD0ObW-Qp^,3W0A&=G`l>m8jL@*(Et-QP'd
%DIN-P$T.N1\K:ilKUF[`h8A"R?on`M"VrM"#hY;5L&lqV^6-K,4'6p939B&XR$6"%V`alE%ha^Wm.pE>-bj<UGO;:H0T@'#4mG#X
%8A,m8qVT3g1Fn`[m4gH\X?k[hUN/JGF:8tGGjgdOEFcUiIdg2e*;05k45O[ubL,0pa;l@Af)$HefQZZc1Wu\NQ`dge&p+$_)gKK2
%A8EhVe1CWkj+"B4r\_<[\c&6Ck3W)&jS#e8;OC&e:MW8J7;0eYT)Zn(^B?*iY`e/I)lP%Ug_NpO#F.?GPR""kKp1pi8YW[q-ts&7
%>lp.G*Ttes"<,B&mm9Jo=EGWEF9V`i#Jm'g!B'U^(qI(<jGmk)Y!2V/QO^TZ+*Q_gLYVEkhgFYXO*nu(+T!;)E4sAnCMjomK+HHi
%<NPctI</T1F?ZuC$$AdBKnL?iX['HU]p"g9U")ZHp;e_E=O+KY*PFtfdGm`@WfCtO<k@/;*VIRM?@12pP60YLJW$+/H$#X8<38iZ
%FcF(&ot3Pt13H+1VpfpZlJkB86`a\kad24E'iaWR+0M#\e)KZ06m:*&>%eoc9Fi\ap'.NYeUOFup#rPX2]C70PdP77c/PM?-JD;&
%)=)C/l,[L-3]ld-a;r0P_r#gNG9#,b%m?lEhg%>5oW[rR35,3N4$MT(pGr58n$pb%/.EA3K6#pdk.=Z^Um[YV@NDu"3`bS,j:a]M
%"18^\L.7^:N'J_hGjq)8OW"SM16t7+q#c=1;-t>H9rlRV26/,EmFT3Yb051SA5c%C"0p^)Bu`!/C]S;4T;^q5e9-NVY?HpKq@;>N
%TX$9o6RKQ]_o/!;4i6\^<oO*!K.LCA"nZ;!LpMko-$P_TkZ3e4QJQq($[fB3H(2)bg4ncZ9UCX0/sf8f/ZnSEE:rqGa7>=e(OBf\
%iHlQBG9(_EGFnEWj*6$o*Ug@`h!t3#mrQ-;.#kJ:=c;U_MG^W1K"$?[V.O'7_ttjj5;@,Z/A2U3ps;)r6*H[$j'C+(G7Hq7HV.J<
%SSXZD_LAann1^,>N=lTPA2e/_'Q[+T#V8B]Nfo9:=iIhbU).lf$S:"2?EpD^.#M*o31!e'.H;<m's<m'beKp\H/b)0#5\'<(AW=4
%d92'K7kEC4@N"F(!NS&IZ@BLZb%1Vl34PM?AkbD0U`hMZS$r'R\3Mj.)[:4.,W_%hk*f=.-ssWL]YJ!j*n3Pd"\0jYJdkr',)(70
%`(E+sn-D4*&VJPhd/\+_=rs6m4c:J&&2+g5B-d9`."BrK8F[@h=75=t6!84?Qb,KTqf:*R<(%sT4>Y"'NdBk:GE.Z&/pFs=U>IiV
%heemQnNG)Q72Qe'/GsKC;s\0GkhZ`RDNYI(9TIXOUKL&uRJRFLB^XD%Rn^1r6l0_X@VUY>PW'9BHC/$Xa=i^E=__8cPNjt5W,ng^
%21,VPImNVsReKSCEDGem2,^!jUQ&Y%_f]!7Yn5j]+hKi?m8dDYRu(#i&um!`1.EL0!n]%NW^=lIT$%n8;rX2)6lL]^>;Rt)C,@XM
%L;.Vb*_*,;o%fZq`2G-"6Zu3%?N)f)aG[I/71u]DGnjb%XD11Q)rd0imDEjOF:h1==?Bf=m]iV=b=re-UO,0rb>B8R98iBHhVdEq
%f6cN/r_EB;6p,f1Zqhg85%=r%^'uEO9r&^9BHGdi,f7qV<1P@8*YYP@KP(s5j3tBgPEDiQ:9??8QnWe>X5@scZ#lULohr0lIJ-4C
%(NRXl=FH*q!3MHX*@AXZCLTk-M,m,=9J:0R7]mPa19H>ZV:dTV#$-\^G/S)s#i.sHqa2I8riB\oANJ&(0b!C=EG7l*"n#e="'S`@
%9('4E4bbQ>/[Fd6et<M@I/7i-bOJt@M0nU0O#Zcl,OMFsT<0SmbBQuXUc54$*Z4LiRS_1Lg-*J.WD-<0fE6Iu.O*"9%.S"39I6C,
%-^ELZ*dV[hMqTf!q]NK#m$9oB7%(ib=V#,VAC;_aZX8`g8(@<d1(e5RU%8i3N)CE87K[0if$mDK-"tuI[K/(<!/8i?*]M#l`N5V$
%$dd^Bo/t*OI.*]RGPmMMa1mgn"01-a^.)T5mYOnb8h>M:L]aLKA4.`+YqQmJ*XB)<-S&md4(M6A\Vlje0N:>?;FiK\9t!)mW$=IR
%b"AQL&c7E$@-+#=3K[Su)son'SNF%mfD+KQ3+JCUl@E9/C\>/hfS"WninM\YF*Domr*Z-)UQ@F,*H_pda<>kCjeTLa$dX-IU\-"S
%3oBrfX2VZ!KSe@>Z5:7Oi:Xg:/<"e6O'i&-1bGbh^V:U8^It8>cXD:h-Tq$]PG^rOX=LU1&W1HUY,g->L1kp'Qj.Uh\D)Kir(@oW
%r5ba()F7jB+a5s3UT!/6DBX-r\`]LTgcGsJhcR1H*mTeR=J>brDIOMS*_5IM9ZgA(<srTJX]BiE0HG66bB\&8'8G0CHHq.2>OV6&
%po0%Get9Q\Ek2qNb2bn#FI5QNGJ*7<?aSYUGUKm'q;!*@4J2hJk/P#n[q$Q94mp-Q52s?uf:W\%]s>-:Kg!,O/+gJ$\4u6n'6#V/
%;.[<8`.ZaqW:H1=41M5J'5uuj.2,@u@HGG&U$^Q+s-Yg9GR?lW$#$fh^cD@pN7']emCq&qL+3)gS:GcI'&Uu+BYf"f7'pr$7_>Pq
%WlHqDrZ6DAgKEO>VZ%bR[\feDM.CZ/R,[Q!lQ(qoG"r=Wkm>0cQk\=3<piTi:1pQBg[sDQ+W,t\"huW@phjR1]a;N!P(N-s"ZD7o
%#9=VDJj8ha*QS*2\D2k]iSFbDc\$gn6\.&"iSB%A)Vhq9^q1u\2MZ>`dkO?DkF^ECQs%P>$tnbY1g@\fXb&]K4Z[4L)U?+QE<?<e
%a'#o[%2t`Y)^@eY`c2)!>WU_2!Vgj0BF?u9mH7dXmTpR0I/#F@YqA9a+*JJJq[!egnLRY<'hjAtAKCWO(I>#!lP//Ec[?%2*VE5J
%7!Q\'D^J2n/`&1p:6"\$9r;`*6LPO'^RMh0/pVGd_`J0lCLqFhUnfI8Eg(f0V-Wf,0gY/\@,sImeINh(rY.oqSZPjTn.(=A2mFS_
%C9re"$akb6>BJMkm`Ll`E0CoOa,u8p?QX_-X7-as_m(O=k1i;DZ/l''g`U\Ck1XUhc>1!Tkk^?/_7dShJkP]<K\:)ePaH6)DUXS*
%8P76m-ZZAb3]0CQ($V#@3ZJC,Ri'dI@su@gf$-dk#`sUs8r[0HQoCgK>.&?+\S1[@S,6M*BuAb&j1a^NT's;S"Ipp]6:X9f?]kG?
%AEcd+Ro']lIil!qe#,$F._k'_pX@?)Si#l9$!N+jqklOM5Q?VI-hM>f5c\3pi]LL5n]7nq^Z6\ejW5KU*!CER?TBR3]//ATm\4dL
%a'(U+Q]i(/N5*<0F%KuH"dI"p>!hfs/#GPr2BP"*_r[\T5T95Rbt-#d/*FHZ;g@t@;4uq`p$$S=FUbgKC"^bQeVLla;!d><R=iBW
%lpfl+C`1OB^M`?0bi53uHu6l#0r&+j.VgC%SNPtLEIsU!ULtW<b;_\&U'7"Q!1.dliWYe8E9&?=Q&D`1jV<\(Q;qHT@*aEG*Pdt4
%Sr:66n048E^dr$?1E7#d3Eef]*CM8`1S_G?34o\:rWgSm\bji+pC_0a2&E,!U.@"%QCCGZD[JkoZB.dXaL$0A]R*X3"6ft31?OW>
%NO"VQeAD_'D;EBM/_0&r(qkS($VI^QXeHL/]^K^VV.[%RY"iJnX+S\I$O>XC("q0/Y1Cr2?NE*Q7Gn6UEkHq'Cf-H8;cs\Ii[Kp1
%FZa5C.<4]+d+\0.:i8beF1P?K4>J?0rRAL%UKFiN[Q,%7)&2gV:LLMoOTTY/8)ATg[iBZVjGnM,P^AJfQ=Fr#jc3Q3o_r+JrEG;]
%P#:Xl\DS+hc]XgA@J+ZLXMfa8GkP<1BZF8L.h&l:$VBBG@+\mpS-IQmMlC8EcJS.CV.#kCE*-6sXPBTiMQgAIr3b:npLFJSj1m9:
%+CGAcH<8!2#<Fm(P<m)\-;g5g*j".DA6ANkWXHO:9hS?-AJ(QY(UMn6HP>bZZFVTh?A[3oB?01&/iSid_EEIj&5#maC#^p)n&Psc
%P/hj\6hXtS\M3n$+*!Y8q;apo.>t4,[eKW`.licK,06;^GO<s5+S?64$JWpEr1=M7MnXu1Zr!11RmlZ)IKp*F&U,qP9oR;b00!>]
%FSWs\HhjD@QXT4)hNs?QG7*Fef#>PH@p8i-%=ReZJri<%-G5)1bZ!9kBm&a@=^60QEM%g_,ZA:d5c.YRU:Qml\Sk%O\.-`r<6^?O
%\m.r;f&K7:6NMUrYk(R<3c4e'ZRa[?D`V!]B7YX*rTVnCjiqD0\k=").)`Z6kg6e'k`taf>F]s@SA(]A\lhbbElKTmBnc:H_No<>
%Uhdf7rRYbl]6%lN@ouJQ,I<W1aeQTt"kM8.%[0uO<g>]]$9p0YQXkhnB.>i]nE;k*X)h2NBauAiJYY;j,Z6Ie4BkB<bWF3H`m8E!
%X?4`KkKO9/++;I9-cL<FefEr9N<lu)btZqH&R8Vj;HMP?V.qMXX&lZ+nZSF8kk5s$Z<$4YA?<t-OeHujMT-S"]l!_pK='KeYK;Bq
%D)8)N;fL'f]!7%c-5MM^F9#$qV)6lhkfCspkqG_$T^IfmU2EZR^'U)EZWtO[h1N$':S6a(:#KqJ=D+CO*J[#::[,\Y&;]"&#6R,u
%AEY6l#6fJ&nG[aj"n9lu?M_Vc<&fR?*I"[QJ+qDM=FP"UgYGQ\^9J;NUDtgE\UWB(T?9rOpMLi[Xe`CD*2#LSWnB#i2V,!;=p%is
%f']VgBl"s>kDQf$hPqk&*4X+[)k/K0f+aULFFC4cgA"mBa`hBbdS429=mDfQ;I#22=]nML#a#NHOK0$rMTBq6E=KDq+U;ftgKgZD
%/=EOa7eYD93_nWE#!Y"'Sm()u4fUT-<H^El]*]En!Q07-:O2LYf_':Ao9(Qu+2."%>kqi5-%G!YQSU:LBZEoQlfGeBV.f@ZhY!$^
%HR.t9*9NQ)WI5o5cj2=9X0D+$.%!\UX=TkBi(Ql?7+.a6?omanddS=K!,:@$Z_'o4+:TM.T2[#%`q@%Yn]>=Y7W9EdGnfF]S4@T@
%bBYoF#H]43cgQ-QVbu9onp+K\aGLaUe*,*;47@2OO759Oo-i?QMhSHqlF4[hQKY)lR2>&#YUhdXAF8TU5*,S%o(1M[UHe4!4-./I
%gN4=#V;T(\ngk*R/3#tZ+q#S.LQ+F?'!]TtQ4u0aiX$V>)$4\/>F*@D?eaRL1+_H0s6'8cg3:am93&_H6@b.+_o!]9K0nE&^A[q7
%pX)b7jiX;;n$r&ej6j_>G?q\G\?6Z_k'dGA/H@80EJAu!ERkJ&K58[$4IL74\oWA;B\XM;EH3kAm7c+98A?88I%!C)IdHG9.!Qc.
%=Fl@[:cmG=lUEbbm_"soG70VF31GfUaT&EF0D3T@\%@4T43okWj6b:IJ#ZVjn22T>T'pj`K[TTnF40q>"XH:"?"N=M)<=!(W]IK]
%eot?UDLK:m%G,g:(bS:Hi.Z<'%8,La)I)U_Zu0.,)qhs[r-$ih4.WX9eG1+,5I,StB0EhSchU;En*55,h-Eb<lOk'>(8]P`X!mD7
%dss+q9)PMQQ(gE1Y?VJeJ';c.!DP.,*p7;+dP!gcQ^*K/XLs<8lf#GnVX0afS']R38HSML=#]Mal,a8nD'>epDVA!.JuGXN)0Mb^
%T!FS6a3i`V8J=I"NMZ;]g'UlnCX;G9Nno@8R#Q?ZTS[fhmKn!J#BJTqOQ3;B&JOZ<dW`u`B[=;!chghJ.?5pQd.`-]WBI_;^g.!i
%q[.AX#N5D-GO#&*::b\6S3qh4]CIbNrUr*%>#iKELm%X=SBK-b>j5.8qjcVoQK.u>d8[2(K9?btFnlH%9H/<0);\[GC7F`W6ecZ^
%r*1%fd^%Pad.UM_Ai]1(%UX/8D1\37OQ;+$iBL-c/uO:q>%83HS0_WuXL645&nHDTBV"Q^`"_LH=RiVtH0>n2DOGbD^:>'@6=dt,
%be5t)Z()%`<e/nSd1'`?j[%c5I9_qs^>!Iq_!4#Y>MHmCQhH15cNmA(pZ([,Qe`Ph)b[_XV-EA44O\Nk6['>j5.q)%*^T^9CZ(Ku
%J#:4M%(NUlip4meJVB<?c1Jq[9X04a@lDDbH^6!V8C'P4j1_9IUps2&VF5%'f<"0rT7bf:.mSC"KL(,DHj1u`"-i6S-pPnnB:8NG
%';&jqD)1YM$W-iW]B>N)W@DeL/`&^IHqjM[r>RpklY#]U'+s7IBDg*aHcb<99/o!:;o7EG$:il;NIm-]@"Z.\rXWc@E07Z"Y4k5K
%>FO@E>^@PhmmA`-O=/r1bkmLFqibNq.rnFgbIUPN/L`EJDt0Q3g4d;s/Wol4GC.XBpHS]Um*4o^mInku4T,Y"g?.:b0sJt@fOkWZ
%1C!Oj"8e%.IE'&d@pko`Yg:&NB>!929RN._cSG#."8c%7R'_86lW5`hqtf!h2pYfZo@'>WY58'ca,b]J/UnT/GJARsk0<;ZQf?!Q
%^]3H<+()^5"5j-iF$<kEnU#H-a]C2ME>MQcC*G=COPNosi(:m,?gE4@n5oP^Hi8_b-gq!'2uWLN,CfaNde[&0L>B%Vs8'Krh:I^5
%eaL!o8:O[ToBldNmlYR`b>%SQZX7TfE_l<#-84n=s*XeAc10K92pYgDI.I,P]:\?],lbN,p$2A@a4J)1%f5J_os6T\?@TA4o(4T`
%NF2Y`g%3t%IWt\]btiN_KId$tr87;Es7X._jeuPcS%^+mC(>j#/1isML$k]QI9&a=:cdmnjJG.(d<f]A0nsuhQBHGEKWC>Q[9a4%
%$C%dC%)BpHSP6Po"f8NM[k!S.BlI-+1d/g7@D@/h="_ouWNnMg&S7B-Ep"`?Md._)h_)9^L!$9`MtsB[OELk6MIs?=Xl]73%r.7@
%bEYb40.l]d5/U#d^8`>8BaIl#K6Y(/oYHego(FYAM2q'ed1BB!O^GS:'udK7rLg'bX+9Hbr)F<sA;>mX_QJIMVgA=]=f\r9"VB]Y
%m8p.Lgo_F:_8_sGd=8csjZ=Y=$Wl9?fi=PF@_^2q-.,;r)R$G:+%GM#(c!#f_+PlYX":gd%DLu[]<L;H%]uI[E121H,/9Gu3u<f3
%aD8hM0Atq$qK;A!-JpBCR;n\.Oh?^qF@=i"Y.H?pS%Wo<dUk.]Jt+4W[FE80b';qh*?YEZ@jXZlkp(kE?26ZEq^TUC7mOlZN()T#
%<Y=_42PWXpP2p&]@maP*FKpeoeKS<&T<X1bQ52-WkH),pH9!QjG5-tX"5W;u2l.gpEa'N;/%F-`')f<s?ASl)g8pX`81bBN[`B;Y
%V(?feR!n=f3Y=B?->5%&Nk8-AQ0;Mo(\WF[:*ni8!dV9@UfI7PYXaR%8UQ%\0tL+Dd!ECJ7i(F<KR&2?2Ha\FdTi)XW1_k$Pp6s]
%T=8-&VJS`p(Kp`\i`BEBc^#aA?JI!qo+XU&$Y3HgXP>BfgdL:XI*mP#fLCLpjSd8s$tVn4K742*VOY]Er0;2F)!7c@]PgLgQ$/FO
%CNH"QAO4)RSB)7FH)F^=:RPSsn'$6iX/'[0b@Oj90+s(jbNtDff2U1<>Mo]ffg*^10,"?dW"2Hs!@S[5V0%rLMAMPPI4VM9@AMR`
%M>;]g`054Q9*1^s>#Ho2/YXDXol2Tc5qEZe$sY7a.L*uE,!*e*l#h0\'/>#.4&I2#7o\_HGr6t_T0t7"$%X!e>/Z^m?c]FFYBh^%
%8c"\^pVE]sg4]Xi<#peV+VIWb4%T9kB\ad_bLDRfUEuH[K.RF0C`_!4<7jY31o==dW=a30g=5-tog>Q98#OV:am[V$b=5L>]*)s_
%SY5.&0@/$=IC&2"7DXL6/bk4KWbc[J85i*EJ*@m0ZY3$GI/-DAr%_+_?MYke'&#Tg^m6H">JCRdDgJ.*LR=QO,)1?)I[>hdQ9AG_
%'l$u_8sWi;V6H4OeKM#]MB3H:[;p9909]%?3P[=IK9Uha>Tp:",'X9%@u&YA@<(X/).MAooEJF%cr+F$lrRfJ&m.\MBosQ+1rdXZ
%.np/dA5`\/cJFCT$eb]Q-n?-VBu4u1(ugbgiD1$0emAp3'nReH>bo!q,6Ao9/]fqu.$c9gaS0hVQL>E4>+UjFU#:q3CIH-WA<p\H
%h%?=QnE>hfB",rkf76L=?<heAH<[I`Gt,e7.&6dK?Rer+G:`<D;Y^SQN+M,cN'kIIfcF=idR=JrPqp9m=og82iSQq3Jh7^q%U)g^
%98a'sT/g#N-iaEldSXBgZ.e=2+bsLuGqrf#<O=Rf8)>LYKPBn[7>=a:JR?,:H'\,n8.7u0Mma/;&f5aY6m>3T/6e#\Z-dPHfu:+;
%bV<``M3$Sk62IEDEo`Gg7Z8.;Ygf@j@6[%dHIt_f?61[5_)<qbV?M@6]S/JK8IJSNDNLNHAW1W']R7_8&oj4mASH]&bh@41Yf7Hn
%/7"W29G@-]6h;LNg('Z&&'MVR(e7E>$QbW/<'M."d?hQoDspnQKqoICZ7J#_f!a!Y=.hF5ApJad]rl-Ud\S6@c#N,L_bOB5OY8EM
%'J\>b.'e$=l6:\OF?mi"?tSE1&F:)iPln?$M9+$HncfpO&_k;U7E9)FbO'8P"9Vdggsn)2Xdo:PFIe^7d3\?MOYV<^LCN<)`j2Ud
%,qR;dnVPMKK:Kgr#dA++o0fXsrWp)[@M\LW&)C((0J_"V',[%1ce8FV*(E^TMd@k4m5D8?a1$+aA6TgH]+WRe<n3/TqOsN`Wouni
%Hg)H/6A<:CmpBU1;Y%3l;CQ;LC5;,1aV(0Ypg0b!QBFS8]8>,lc]B<:\\j_<':oQU?Fhn*=fho66X5@EmCok_IYWup$].""UCIA-
%+:CC$W:LB+Z2-rU2([rc7+R]>2Q/1[LdbAT[>1([4f02h$o:Ug>)dr-lD!l)hD.o%oMrgR._<iY<`W-RLIAir)e^q*+cU%`27CZg
%`b>Tl<7*-GE[WN6;(CabQmB**C,eYf*(L_Yk\@J(XJM"[I9lV@nd&s']fmK@F`g-VMe+4+:ki)sRI&ECr3H':6$++s*1e"[UajP=
%eQb_6?K+PU+=9+X9MUaE;tRVjQZJq6,G!E<;H$o8Us`Hd<-f5\b_pj_Ml9U`Qs`Q[=F>=<A5)oqc,If+M_LW>.oB\GH5cf98`t`i
%?+UNR(+jnB29[&3k'XLR-W0qrVWRNWX*=M?AfI\/kFsDSaVAY*Bb8`"%0^?ajQ]Q1#ZeF;plO11[\65N[4%@%-qdY1E&9r.iEMV4
%m6k&unoS$>XG,LsJj\&-HtYF?'D\1]:DC?9o,sC"/\tlcMX[^<lZ/Te%ZS1U(GGQ-<+,";3Aq:q5qJY^KhsrhW2Gd:R)@/OSjrS]
%[dRM*T,7Lk55aE\5K1pMo'#k4h*6DZk4Q'Ihs>g)hd8TrqYc?0]mB8Q-_CJWMkUpti^O#A3`">GU]:LM=M$jE<.lQ;r\MFpj"&+o
%Pc'I5E`JIg2XEQrUr77Od7@)M0_,T^;$O>Q*5I)Ng/0kRXX9$f3YrhIeR-9V#CAfbL7%aq\lA%85j'9-Nd09CQ"XRu/%f!RS=41p
%_*W$t[VW_Mds(&+qj1*)[gf:SPr`".?$4;A-4=PY<jleo\r5N<(kaA%UlH2fN>I$1:RMb(('6$$oQ#*Bk\;Sq>T6_("O5g?;d&Og
%j$XKG0LKi9##2CBWJQ.06/4m]@.lm3%(.E;$k,Z(-%fj+5oa97&HtoZPctC:D5(=p5[f$':986X*F`KuAV'FW2pn`:\sCM2$@KC(
%SkL9kY09t0DDN4jfkZCDe3sUk7_q-@GB#(Z4SI9@!#-3!Lnb+rKHL1:S)Hem&^eDCVDj,7X?Zi3.@pnAJXB6VX-KTd=64cJ5>47l
%?;t.YbgfMV%<_7-jYa>$"5B!Q.iGZd"tkfiW_*ko]Hemo4?7$IHHtC;R:7bI^(LMaO+=VSapRa^3e:9JQD[YXY@(RJmgYKVTrX1W
%_W3k7%iCIT3F85\#/^U&!\I%U#INTdG(WDN=Kg0=E31'E8/Q,a=->ah&a>Mq&Jl><eUeCH&_J)-=J3X."4/5]:h0rq(,VgB3ZXY0
%I!$K_!r"[s!h[9$LDKEVAF10X!)XM<]))"q9GtL3-hSSS[<,*>8_7>XBpV=mIYbD>VKNF\7PUKug1=8j(=8jI<Z]IKd@Fc%_2V9.
%0@h]V$9PW9,aG8C34<9\rm4`;J9``X=lsM)'5?]1JBAoh;\jX<,9BH"FB&Q%/;W18c-lIqhr3MqM&G<lhNdb3?4S7e/Vt5]&p@u@
%g;,R5YKAiPiX2o(d"3\YIHu(^Gad&kE5=B7&BEo]XtiJp!A^'&1T:jlPB]iO2c*NTg(DR6X2.P=[u6.,\m`9)k(MB\C_b8&IGCbH
%fKdqg(3^r_BPB5hh;3b6-juI;cqoCbATU&i'Nt*L=>h`GK_GRh7^K$IT:ooBLhWRlA6-l)KRlNVCMbb@#c!89l)/+RBbn<VRi;(7
%DRXCsZM3?JlNB3]h`]GG'#cE>?hfc&F`9+5F@CBiI0OX4%E.nkih-OPV(PDP9+&e&-o!9l4Q3gB(kW5nJXIsaTK!CTi)M,i@NPbb
%Mrba,kUY$uB&^Y!oTX9q/fbLYiWR+JZUR,Z3\-)nU0!$a)K%<?iQX7f4CM.$[*`tdPR_]UAMO@(L%cuk&6iC/?.9O=?G*CBdJ]am
%"@NuGW]B!eg*/_[LR$\'4l]Fji>AF1#(TMJ-6E9K(qs[:n_=!pEL4mp&f%D&Y(J3@"euEpYc>^i#peB1j*F*dCV62p7q,0=F4b++
%/Hq7\HB]/X.ke</'.50*mWp3..6*cf@$-Ce&q>h,(3Lo+SE#kS?l'5@8.$%WDnrdul5UjBYR2K4?;&Q:G0-6:!Hh`<]k@HG!Ba+V
%Xo-p(J1!-VNHVq\gK8^1S+>7,J)EgEXtjIH't/@7-sFP\[AbKF;LVCE#I'LfhFM8bjtbp?3K.9_B"3XA:%MTM<e41PNjJ?o)KOe'
%%Ud!hWf^]@'@rG6&UIBA++oBs0VVJPYWbpchOIJ&.^4rN#=t5jFBU/2>SC3/qLCG(0%)=Eh^;OR)>5Jc1!kAd8[L7kB!@],XhiC)
%&KfNkepGMtOOoHb:rFuB.4<^hMRPqq8`ljbI(T@]1*qNG*W&f\0tl]5kRpQBD+7&(S]R7,7GKS=1BX9oEG`?p`LN#*W^^(Jm:'dk
%JPk2:CK;9qU!+iPs2ngAMPqks$h?S_jb]!o;qF#2WOCFMh7q.SJ=#^i!"pUclrYmqM,".\fiV3dg8/a/J]%W_LW>ka_U<2:q@,eZ
%b[l&1QqHoh;8uo<Z'JAm`":2Sda^>+'OdcQ"5-(m&m[-YAJ0_uNB'9>5tf1%&9eKb@26&gYfJ!<APq[?B!k^E&+:/,@7sS<Jl*qL
%>uWkOg>fk84Z9`&PQ6Z;U4^L_J4Dp2ob5qU4MrtZJ.I:#!UGq$</I@?*R&q<g,bmW.Hn]j?m$@'Pk7@sE<-cB0RukmB>I"39FnWA
%&cLbr76ld-bV`*!<?X6bV*eTr7#HnWn3i7U2%`L+1O:LM54it'hHs\*WaP!0S;45.&\_]i!#@8!Kd4Bu#"!m[#C$]^1&2SF/'IQ#
%V%89<ALo#,,I8-p@e>WFTRCA9L`F#NEm,*u`W1(JfB$Olr;pB$"-Zgq7cZ<UOJ<LabcsnCDq%MabYb(t`PphU_:V>$f;,5eSA>JV
%ZqFi3%<,d=AW_C,9nt.3g8k\Q&6oJ!!#?e?!$DF%N/"1NrE<3o2ED]&igF1+9B-s2=JnSR8=,,ZPku]>$q!i0`#06sAI46)94,k%
%F[I(1-;"cI"CglC=bq(@@iA;rJoMX.KI'XT>\#Fh`qtqXiZ[#KcU-tm0tJ4S#!!96KtJW>I]mYsUPA:[H"E+q9Q[,NA0>"=r_i-F
%YH8iS(dZ52I5,!G\3K/?ZpXnc"3sL1ZjK\o(*JD:UDVXXjr/>8!;qM+#gBkIn,8!3;M_VXKbRh7MARf'6*j%UdVuLo2mE/loJeZS
%oEi0RNK>lDJEZYd!:VVR_]ut^gA=6.n9Zug%^Q^Fr^AcL`Ma0o"QJg*-mcf50p>+cW!2_@g3TaCOPJkg=@:GdC]Uskl`*KEYtG\K
%TIJLqrq[&5_]iOuk41Yb?0fmi(WIAt]bH)5\a9''YQ`Kh]Z6R]rUeqB2AkZ\m^@h3iZ`u<R?Y'0\rTr<>/tL"Ce$4T=i*MN3\eU<
%&jeJd=Ytr=8r(.EVG2`p#&`L0Sj8i^mLAM)OZg*c`C,lGd7k8^S0@_OX#(W$\5/.!CP2j@@urAXpmYql8b*a-4G?CUD6Q8M/?6jS
%0`rjY?;&4IP87UgH>-ciT'F6,`/R?IQt#/I$q:X[>=fDNUdeT#?,JlOrmD@-K:tb9[qNLra<jNb/paBr0^OE.c*fZhd2MX?Z#`eN
%;g&E&Q'_UC1a3>`fYtZ];[UX.[*<<YD&/`hrNsARK_Nih>@Aj7,7Hm[@$sXiU[[gp>W(n0@'N.e,ahJTT&pI/p,@,Mo4X)X<K'ZJ
%+Rp?ef0QTtk*:C-S.6;br.s<e^ojHi#gLRm*S:ji[Y([5>k!4+4rdii[f@_+K*`ZeFr`nWLq,uG%J%FkBPVo%r5@SHj!5k4(BM'D
%$ffZo`?%=X#4iWK9l&;rYmtII`IJ<&0_!)i-.793G"gH:7dQ&9l,B6mYfq46JZ/WB,bPP#U?47Zg/sGlLJZLK*?[P297k'`1QA`,
%/A$_Rl^-Fb>8X9""X#\p1'66iiZe7Fb((i2/)<k69C$&Mn<lsd&S2+X@$$+/4;gj[!Z""8Q=Ahb2QR[F@2^G$ba*GXgDIE"AN8Mi
%+bD?K%o#NPnAmqk(%.Z+a=?+"2+K"T*b[k2!Ws<s11KiET'1DT9FOYMA'/1kb":s@1EYoP/fpaV*FDRc_k<uhaD/QgVZi*5[)`q'
%mgDpjBHg'sSI(L+SVRZ0obi(Z-aUL]W0`3dS4r>f8:sroloO_cA4":RS\g+Hf-,>Fc=fVa<)ZPbnJ4oifG'K^NYRXK#`s@LL+^L"
%V6O,22,+QG1E$<dC4n_:TT5DE3"Zu:r!Bl`9RgLK/juk'RLmBph*A+SoZ(R(BI;Gf0*j.C<6`=-`2@q+b7KqA]BVg82)9bu=anV]
%D"0J,XFE*H,qUNLl;1C+:bV/T,"s\iQW,fO-SAtcP)=iNBP$%.P[u`b3'hAB!QkJ9XJqC#3k,R$;feQd2U+n[YQ@sNgA0Gfi!0aI
%CBIa-k&=lA:=dpbaM`Y0VP*-;OY8]@PX-.A_[XRTA,sk.#W%D?I&Mf"!CkGQ!Kb:5_JCaWe*b`4BWhCI.d+0t35.35EbBu,Yc-L?
%(PF"%DhU@fCmjXg7s)Hk$O/i_HDG/KF$ds0=p9.AI8DKIE8],q(`F;J*(CktTWiZS_g70m"ltZ2Fi[7!*Ccc)Pjf9E[V)>pUtVJ!
%23.2!S/m+qRAMbSWCt/POYYHd#E'+[fg;bA$CqAP/m\!sBRY^f1'$N35:'nI$O/0iEFO(;j<1Op4i3#_A7>6Mq9=^s-6rga+"8I?
%Df"qWXVSSs5;8F[OBKi^,-i@!68YO5#+917h8nM8i:O,f.XE?]@6qr#`B9(f,f2CNFOF.pk9Zum^lrd=-Ce!tmBJ(H2O8fqi$sHl
%=Im)V;ihd>UVXRjI74NFgTg<*aU??Ji!UHh/>kKg&8IRNRBS&$mC%Uj@e2o&,"3]n8ctTM)i-Hi6t7"OrMn^*W]*/dS&KALTnGNM
%U%:9KRdlaC&Y91kP\5OW_F&%gZ%%2QLXOu!6,RZZ+qt>]+AJa:6XQN@5Dgp./HhBddRI->W(D-DJP%[J$OB_Vfe]G#)@`?9O+!!u
%/&4l:8pfV.aIjj_<10_K'eE/%haCWjE`.9(Ag1,6Os[jfMH5hR'L^n6.7t)g<+YX"<&,J4216,Y;Qi)`Y`[b)ogC[4Ysnf(AaCGO
%k[B!J"AFpGK[g)/>,@r__@j)U+8X_D9Vmh>JajX&J[F7;9L-l:Xbpplc2m&0>?'McJ0r2E/HoeqYX'Jb5T;SoPJM_*PncXVm",<2
%)dS!T]>[Z[QjNCr8)Q40(b$U^5hLFPq]TEF3RVf=K&fPRK`kM;AiN7YIL$ZeC_/6R1aFgO(/#f\:,6EQ'\JS$6E;Mt84]abi59"u
%E!)6(nFU--1'ERsK(rBO1eX,oTZ->ZYX.P]cR<)IeHS&UEo8h($l``u,N16'Oert>9UU1B=PsLrM2:0O2(')p(!)m@ZAZ8R9L8sI
%JmLeP')j)[YGde&$fVXh7j#:u@?!OdV2VFeb[MH#Qt=#+Rg^G<A-A[$SC!u:KE9aK0G[9Qd)"%G'=ne@&N6)&Rs5!L!aJN)#3$(:
%J<#5B>0p]E_@fu#VUV#pVs9+6lV%qqB2/_+hqV`9pb&t"T^iYE:C,$Q2.ViTT3rph2.P89Z%V0sg31gRU1nfY$>3*0&Qc6?P,_Ur
%!rGMITN;H+,q_7&E'A!f,FY.6NNM&LeE0l31(fcOTFNb4cpn4\l4r^.Yi-'4'h<3F]g9tqR<l/X_Jr$0*Z>q"!Qfn,r?bZ#YR&)L
%c1'YRM!<j$QNi:2GPg9OG\$IA'(^GP8^Lc^l9]e-K^_G!9Dr,#]GJN1[4d`@;eK&35WS,NdrHFL$ZW(28/^-.dFD)gIAE[e0QJk3
%eM^u-`RA^MBs/c[]4Oi3.lOtNM(8TB@\"K8Y6/a^6EBok_%Jr:$C^0_Y4(1"rUcZW2AkZ\mWOnUZq+714;+QYa[jB\3?bO.#7CQ$
%.rZ/WWcNQGJ!ga?Jn_/<<](o'Tn^q,1kRn'M%Rd^7`@pV6rn6B5j*0B4Hj#>lkK9^n0gF8:diYIG%C_,:ialaGLNr7nT?J[juZX=
%D>/iP&GF*N"%V-&Be<D4B8*mkWG(4;>Y:93BPR/>l-Y)_$IMguHr&M81MBu8gBf']B2F.&b0#5>=r*/11\F8+5Y[#M?6?E;4]<8^
%g9PCS8W!@<'/I#W.<AE'Qc<']8ecjY["X$cC$'rP/e:uNBpUFZ9el+5-WX2[9u`BJ7A304U$&>N@31E(:\754foNTe:r:LFZL=.Y
%oiUO7ArtL2AS`UlBR.kZM#=I[X#+t>)p)-"5<Pt>;U<,=!,4W!0.K@n:dD#`0Qa$Ipn3f'5`hO>.WEbf16Sc,$,#2%!n"Hl//RZe
%NX"h]a#rDP9EnZO@AYN7cW>te41)e`@LEqQ[%L6`/^.G)9=)WOIC&t[>"$P$MPIuh\/DaAn4<JZbBU&"*<Lh%8uk)\?pnjZ'Z'op
%Z(.4u0m2]'-o\NsprFA)>G-QC$#!H,Y`K0fq+DPbGV_mYb#o[FU1g)-a.P2+VJ#!5S!nd;6I,'(&0YM"Su6N9n/i^Ef2d.\&TB<X
%ji*h89TKA@#8bq.aNFYf=R\%a%?mX9/d=#pN.m)'hctCP;QP4-"jOtN4bJod)-/NaHPS1l'.JVSin2,427p.*m7(l"fIIk6lEfRi
%>)t%"Z&hhW*cJEY,#a&[TuRr@:e#;%lZkJZ;JOVn=^?fIY7/#bceuDXhH+*$Z=TTDNn/)[F+TMlO_YJ,(scT-**S`4m^&0=g81B`
%F/%%26H$RE+_l-$hElV3`r):6%Nc$Z,+NT$:E^)[+2HM<1N%fr:9*rL$&[6(X+]X%[9<+TP:7IO/BjH<AuqYZh5aV_i[nqp&ReU3
%)UK$L6&=XK<cil?*QVfC^iM-E:Wn&.CRCLV#2C+G7oN6AX#Rl'>&cZFY8U`E/m?+>D^MJ+),c-F8,bUn:1Pb.-jOmN6lH3tO;GrN
%3o63We&\.#l2#A^TZba(`)]WQiZs&QWE>h]R<6QX^-%!M:<T>G0JuI](Rb^#(A+F0B$m+c%$s^^nHj=&@U(?f8?mgI&*IYOcY-n0
%>D\Y9#$2C#&5s>N\](El,&!sP%Fsi')p1*OL3lq9!%WJ5>!r$O=252!bQBPlaOi(;I%7S%CU%9_jhSX[[-E@DH!(/_#U@:q2e90H
%k]j9[p<_l/YlnLId*d-b]]<V&p]./d^^*qs&?G_e/K$!@Ft#fsXhAlu&84O&A3n@*:@"(`00h<a)g17c85)J3JQ`W,(5lW-]pTd)
%IBUH=Ggf)G@the30^%DMINikh^-^:D'4W'\r8o`'@6Z;*"`H-D3Kdqe"R*7d+^;t^d865:"QU/WGdO^;It62^`U.J2Xoi\[=caR.
%@PU5Y;.Men>-)g&YTq\L0Kd7i?G._6!+1BRS9F]8C#MC[UlZ')g,,E%,]GB2@)fe5C5U^+>Z1p#-<1.OC'14?JMAX/V=cH2l!/i,
%f;`P"9J]$F>QE\OSV4L;Z^opH5jA?8RD9f88f+gE=YLFmd)&m/aM>1&3DV_C:6/c[#ST6#WU+bX[YTn4S>,'%>,pnb"@P5RNTkId
%h'^THl?HeYQAjpcNut"*FA7k(VAB,'ecnfTOM>I*TrB67_^6eg9P&`D*o1&!eM:>o>dGWoN:qTDFY\65n-YCXZW/lg7LtEM>fu<9
%,0!UO'`t?p5YJE<AR1sdKk6rh)&-6&HarnpHQQ')66Nl1U2Y&sbemL)C'YB%)4HB2;'H\e5Q`_^Y*A7RCed9,j=c]n!:`ffM>.is
%Qs.!UWnp"IqA9J\A#qeVkFe)Dd<$k>1!ED!/?<7AUDS)b$pesS^.(O<BE9C(RP.B"`%J0BJoohW'8p":.,tK*LGr_I^pCIifMaA8
%8/]\E]?p]`R#ic/^n.d59?L$r;hfQifbQ^J7WY?/J0?Q[E:,L4D,aB\5[c)QUUEu]9QbLsGlFDSriC/0FC,k&Y-ns0cUM]Dj,FhH
%<mbVR&)uQ^E&%IJ8@6[#<<6-tQ:2_A/rkCaLnSImO0"SskQB8>!<@JhTo<ErLd`P8)"HHPZPX;&!546N)3Y3d"h5$r#4S</$c$P[
%0kR4%H/ck<1A4b)S/8;P(eM^TPoB:rf3Fa[OAQCT'po&+e?$WB(O`cm9g[B$,Xl)E%?A/*Ze?IrS"m8$/UU^M&B<:OINp2C)<"6p
%DAm%RMl'R.%Ub:B@CgbcHt:2g&-;A191+;B?/IpNh?AcN7--h*hEPQXjlLU<d>Jj^(VNVp+idPP*#Q8=5W%X$U7"Q.?mM9X@f-[*
%]Cubn+.0EWGr]"=lU4Vm4P?gB)f_c0@cK]jWg^WjnhlpHCP_[IqABccMcqLDf`(C.2+=,\4C!b_W`M\[4Ckq5qk]q!;r<<d^&QpV
%^"ERTVI+`FeZYQ,Hhl4Ne[L&*lIDNJg@Y!gYJ1%fDL2,Ahq`a.qrH#hf3cWecC`s:5Q8dm&-!;m]g1uWSlL$6=f8!N76UPbg)B02
%-K^>mgq?$k0fImQ,G8#S?L"='O;0Fd.)Qp18;lD7Y*PVl@bq7p`<`T1VU6a9==E6^68Oj(3j!%60P=4WM4=s"WBn(RQ;RL0F>p([
%'P^U,bJ7o!J,c/hTr_]d`G(,JiFA+s,2S<-_XV<j0C^R69n?Kpb4:$V"_8%"A4d,XO+ocn-u5l22p<u:^$:SFCU?Ojjn?=k*ZUL4
%lZN06OJKKJc.hhtdV)Jknb(XuP)=u4qK5e29%b-5eRgR"9G`4M?Y]VX*>KTFLVd^i#;])GokZqMCeSF$BoSp+!,]k<j.j2Bd%A7$
%OS_A1#PKn;/=73.!dC#B:nKMSR@,]"Y0it88\p"/.P>+NED576b_\E<1%2Kh3!41g5s$lSOk8lF5_b_4@lY;D649R]jA5jj$<f9p
%,qWnSKKp[\)!8"5AdLnmIC(\*+(//^E"cBa^-bs%]/1W4OqG3td#f'>A'Fjc^#4EQ9Q?@T(?oZ_7>$]'`S<Q/6nIOe((Y.,[+A0K
%?BJOrUE<(5BHb9MTaTT;W0(_a980N#FrK%<Wo]]`ltS'h0ag=_+pG%!LHP[A)jhA8^o.fQ][ns9B@5GZ>'g]7!%E4%8@r7<Pj<Wa
%#Rs@g3dZ:iIFBGX]ei50ec7QDeo/DgJ<:G<j_X"r-P$t?\f7!a^\"Vm?k<ZAL37jo6;6ci`%DW3@nrXp,?kO?d":qN8-;e4Ohd')
%SNP(.=Z,0=\u6Si;N8L(M9DbBW1g&+a6'8,"AEptgQ@]!=FLkI%lN[b\*0Y:O+gnH:IKGc1<Z/\12h"9U_^3ciL;Ph_<aeNWuAg:
%k?F1Bc^:!@bJ(?=N#$IaiPT>Oc&re_VcV?Ao!'oE`Co1QJX;SSLp;@fKS1mV(RJHL97i(toerl^6VE/>O!1=n'nH.+a>nQ^koP-N
%7u`9$K-Fd_?d^D7']L;8!+$r`LIg+E,J"=>-s<"/<^;9iWb=ODT"oBL^r->'gU2bLr)7(O,`S](:=5B%V:p$9d@ps%`A1?Y;CK,X
%HC[4NU'=M`[u&f>(!Mu.N<&g*kbn_($B-=;O`;_a22\3KF6YmB867BH6Sh`&dW,J%2a`9Q=rN2DcpGZ;LPrQ";3bib]fI%G4@B6S
%Er[q&+3S*?W%X@X!XYNYbE%9#UNm%BG"n`KSRjJto3jrBTjeepM\[0ZXkqI"G2V7Y[hDj"VA+/(Hr;>OHut`]i5e6@*=XVh?%6N7
%g4`9p8.j[4^'dUI#*E1l1*Yi7+<]PuPIW]mieU@(N][nQ$T\;b(0<TN<JA='\akn$&iC%<Q+L]H.4ASh&7sun.sM>fQB+^S(pKf'
%FL(Nr5BGF"QQK`=D:+e(Z7@-5!aT&6>S4?o"f^`HN`q=5R:cM!Ok)O1KQ88a4J*un^KNgk?H0GeV,<U\[i;L[\,gt=qK4QYHGe4Z
%$(+;#-0>r,q$VI-EA1l'k5rnp-6hbi%f?>u08A-mQk(dcMa]+]5llb@n?h5=#dHc1,b.Q(9L3NJ4irW]7fu+hqGtQhn8+qVJ^rj;
%Zmk;bNADK9lr_j*#%n/RW9E#o5QVQEE"@^bX%<=i-Uo`Ij4*MF"ftf0&^[Q$'A2&qA*0Ld%3[l:&AV6FC?t%7Mdcb7175"RTX@F_
%'])nI635RRpJ<#X)3Cl=?l2'3Zt5oQMFi^FD6B%m#Z//ggT^cY"BjcFj#ZZ:`%m.c,0S4CRRNkWb\R]MZ%3f',Xro=$<'MI5'^;(
%&sKK)ct!1>4t6V<GOr'Z2/ip<Vkqn7oUqqcbG*4Q=Is&OQ,.5l[2b]qaIE@`^1'stlQOLaFW%WX,^"#5:eoA]+doP7pI7jj=Is%D
%+t5(/HT)/c0g*,OpCE3sTT[7fOY<7"<Qpb2i$!f.`DCk(EV6R5.FWDa?b`R.4'nATF#i]&Z':r`Mj>\JjP'^!6'2X'\LKn1fdTcA
%7SkL%Jq96Eb?D*Bd2OEBB4eu(.j\Af/g<KeBaBuI&5ifGX"`;4BI["m.@DDe7*7!X6K2tjUnZWj0]0:Q4]:#HE$as+Cl\Pt=*BXW
%4V5_$&Q'Y08QOEEE=1;-+9Ve788lCOTc5d4o->2=H?C8%+L2;A42Y`R8mC6T00#l>TN6]?:`rFl\Te`[^0T.i2W,NJqZW@F$uN>c
%SYk*W;uUHl\R0O@<K%8/EnV5.OuHT_d<HY(A7pEb_nlnALLsRFqGRUb\u.rV#5L#P$o'IMNZ"M]W/76Z(4c]!Y0pW5!)/5_Z<'1T
%2SI>_4I+&NT)#upOUnUTA*=;4([O+TlPJA,Fo^9Tf3D?#jiD-R%4%#-j"d)--F@"^@"tEWn\YQd";UjI/?i<7>[r(#n"-ndOs)0#
%!S4RK(;=H5B3/PA+P>]TBL"VtG_P`"r:F:jGHH\upf&SR_o4@PYUJ1rOtA7T]`t)mdn46-$cX[/E=bJ?(/-]iAKf6mWC\AEd%%I(
%:g19G)1bq`61!.7@p3R0[H8OSI4]-k"0utc>007jL?\+l!9C1-Nm]Eq(G_tF.?!*gA.+9A@FU/<C4QdW!NSA_<e5pU9ffVp`C_QJ
%#dN2(>LnHG:VRWn6qA6jVpEk[ap>Z\ouF^pk!dQ02":*qnN&,0%TIkZC,VPcL8D0n9l0'a.qiP6&W:54mjc>5Ohr:Z_8&16M1ZO5
%fVP0J%.^k^k?_II"?>l6b9cgMLL6f5!#7&J$qa[B/t\,i#U"\2o(pdc2S_[3_0Ls]@Z1L<rFh@&0r#S73_M?'jLeDNMA_PB/l)lU
%BGk"YN9.Cr=gAndJnL;JD?UoN[D>]Y)!'oM&bIZT\")T]lZijfVU,t2U@AL@@3]W9cV#VWS4J96ZkQBDC07^k1cp=KX%d<K8:WRh
%8odt`/30`LV%XUGZgk`L&U0nGP)CZ(1AI^k;g%AuKtK]DT'43emgU7/<mM(C.Wopg-1p7#-@HVp*d,[/Q/4^hV4KA&$A?5<`F>W/
%?&3*Y4cm_dq0GSb;t=Gj7B2e/872LUW.$E5U6u2EJ0+jJ,j#hBhkqt\pTcE+jPh]mo*AB8ainbN98c9C;=Xkh3GGI]jFS-KK4^a+
%+j"N+3,Xjj;CY_t:Ai[(^1&K*=)k2g;\*TMLpWC[/Zbm;KV\<<3^d3<_%C7#Lg6cFM\PXh74D*&8.&%tXAcX,Z&up@jfXE"YqIrG
%^1dtS"d#*YV_:[OhQl,`HSt.\:^a4r&I;*(BBQ3,s!4&$C4t`tMG?o![TX_;U_,GP;>EERdVGf69G.F_iA%VF-e&FdfWSssAu=ks
%?e.l.eg:E$+oNBm%inRaL`ibuLCP/a#o_'ia(7jn/)pW\+`pIUO`cf:cW11]\jZ<?BJ6-7oFF2H=W<-\\_s11/*KY3AqE->9R[&8
%</JC>ZEioF]4"er-k"?D*bBej'&\jG;tU\0%Vk;:"ro*0H\//,(a,L*Wql_EV2Js#?qeBCs(/[<LcJkQFE/SfW8)i%-%[OWV_9ZO
%/.bSL!u_+QV=P%j&K+'@'NuKd@'u;s%K28db@uB'X\QF#6m*Z]Tc@b>9S$EnY?"=O@k]>21lJKAL14[n<<hc'i</\"JBL2.K?CM4
%c9WTidp?Ed;lAYJqU86PWD8rd:LN98D=reNZ^?9;"aaO\"_=0IV:Wk--,mhQJaa)+-V9la)?%Y^LQ=]A!`'MsDq;t%=(t)G:qpu5
%SYg3@>+1_oPsj#g/-9D*6GBJm#s\%q2'I-WL@6@L,oN[@$1;IrFGf$6C6J("qKf*K$BY^;lYKHA!Jm2&_P!CM8cl?*]b[?K)4iJY
%E&*cTKa=UFn/%\,;RO=@-`;XKfbOAVKPXeqa-T%fM;tj?XWAE_'(LR4UkWNuN65#0Ng4fqG&TN4V]%j+0Dc$@/&U1S`]Iuq0Ki5q
%^kb'o\27Wa*FNboJRlsol4RM]6FJ_8$)&Z1*c)#`763ucC3&epFpo>X'j1oQnhR7fS7?NSUAmQ&*9@YWZ`Z+0C@:a7XKmk+XS#14
%>,.;'DFqJ@eV[c7C9XBd=POjJ.^O8H.8Tjp.1GXLcO)_#;\G924(Y^O):d4BXkO+8^XZk4`b`1rA]Ss5oWaA_`igdJ>?$hu;)?BQ
%>@)lQOLW8LZ^3e#,V!@X^7mqB!8'!)Lg4CkWGj<R<H<r(Z)*$3`]gDj1MfKU&dT=G"`uFC3([.iC9ak:6i^)3F&pQ*PYNtW'j\W+
%aU)o9E,gIQbHY[=/;$Vn]62q%_S`OUarCXG^QGjYct1RP#mbW5VP:6;X'!LfM6OuS$+POPd+EtgOhifF7AZFoM-VPchJCQYM$o_U
%R.hCS6D:KZ8A8@)SlnDe!u#o+,(o(Z_Sn2S=plRV:pok\<XjVUelTSkBW\N4Ar9'T4gs>5FgWbu9L)$<iSh/^LeR'aGDl!t_8%=5
%Z0t*YaC%e[+f2S&*p0&bN=@Td_n`4UjFfjBCg*q606%4-K^=R/*iF,s%]gk9:o9HWbk-fn?Xj$QUdPGXbGZoNFltalgrt9Oc)<H(
%8rVFsW]-c4gAt(!fNE%e>!ppM+<iq3E&Mh_.A5Y?UgBBQ`>ErYI\;'XeaTqR^$8@m$.kO#Tf\BY96u'5iJP39ONF"1'@:uaQ8R^!
%/#5jl)uWf&\AH<+A)#@SamqBSP&\NbgCMM0'Z7OjV<s5d6#@i1UTpp_^qehZUBsOh_o`8L@ME0kIEs0EVFN&U9O:H6btOXNM_\QP
%,JbB$<8H+/"qN7hqS#!hRNenRC'jTsM(joXGL6go)R_Z*'?=N_45[)!eS<Vk%W56'S9tcu@c)lKi&2TA%V+Q9S:BbcKVj7*KI2@.
%WFRogi\B1W8Y&g#/s[t=,8J7K=aiMTMR,hk5ZO]r0?.ik(r[A8/a83j*0;Pi3'*`mR$tPX?0;l>e_#F2FQ-Dll]P;7E)Zg<QCZ?<
%ii!^@bQ2K*;*cfbQT10&FN2O(in45QEMnFa-,-H#il`3b\AF87jUT>]@M#r445A<)F(a"]j(18m3*s'rQ3`>bO`CF[h^rh-5+ZFj
%k7%Y$#3(tRg@,<E['[Xf%V%"I^QO=m84\`I+Us3j(>qu1c>[/+/4J;iL1a0:k`"K"=lOEK%&`P"C>',(33jJ>b<'0TO.!3\J/DKM
%[m`pgN%CK$(G#NE/"AW+88.HkiQSE`mYiWci#2oBN@>j;VCf6A.%D%:nVeg-E$I$F&qqS1LdWLmU2\/TEF:bJU2WpE19#@,KnE3Z
%dIJkd3;=H6Vp]k-Th(S:]qGaf\!ej0SBE("\&30,P&Td78#8CJKHj\,.0kJK>bh@(afYd*N2=Dsh=-'7q]IV;V[%.Vd\MjCS5d]]
%SWSQ6U9X2R%M"@fTZ2U'*;r6Vp'il=qC&(+TJM4QCWcuj->%3nD'bkIK,L1`_tc>jK7a6K@98@=2)t>b6\'JZK6'-p'@;^WHto(K
%_6qs?9(/KJ?s<SBUu0s(NjW1L2`QsQ8:NZq,DBBE.lmCYZ=+!iAl^c-4ZMnam$U-M:4b*CiELVI1iq97_%0;8"QV-CIW.&f@:+dA
%5<,o]+O,N\S>9<r=h\NtE8@A9lGpsVc@l=q[t>fnUfrdhh%N(6c,dm"PouTDXKhc3'847WAs2#*+.R_pUqZ9pi$=':IKH&_*%ebp
%c\<P^^oNWb)a?;$3.+1+cFqn5[Ci1<#IHRu`u4]+g#iIj]Ou\4-Bb>ADZ&G:k$3H#G(+B5IOL7]IW3=o3L<cqE3t_]D"*(@mah`^
%=*eg:<i"jro\`iLPg4\E%o+MX<G$k)S.HgLr/DbfQsHsPop$R<9*,Ca#!9?T`[oJmSKAgo*\#"8r8:[pF=917\0DYL:m908NY\aV
%hsc7[ma[U$aq'NJ&SjtHr8<AE&MEDIi1uHNFB+SJ>Z5.!GfC9^8Y')7i!9"P<fC\`i$8ook%MFGWuPWIK,u#ugd9HL%6ZZV$PKH9
%3^(!<8PJd7g>^p+5I`TbIQ)`Fok'a:>b=XXH0,@`f;"CBr8?lgF>e+:e>_Ekg*<@Q>0&:ME(1A`0#hofkeS,JFC`6GH>rFu;PZ8D
%i%B5NW(mlkPn_ZKo\dMe=nB"s#7%?-5^913#8X3LW(mk`F"0*_h9^e$(=Q9udXqYT-#LPm#:GS6&r+a)i0_)F3,\BH"993qgsE]R
%5ncc6pqbol')<LEi+Sg02u(4O"rKE#Yk!F16*;+D,l,8J3_[h_%6lfm5&r#nIW0/'A`X/(0AZ,Mdn+&PDs%?QiKWb`CAd"cT3KP8
%?2;;k!_Qj6r8>e)%'?&iK6*AVL711g\Dtj9V60[R+LX#5opHmAM[:o-#<t2&Pdq-*IW..0QDU2qS0nAllic9LWecqa"Q<JH(8NC'
%JoKi-oPG.m6Sni]F#P)@b$;!4"Y>8c&0eL;$,R]c4r/?3&5F^N)Tt_aNb)AtI7"PU\k_@<mKDLE(G3%s"Q9j+Bs:586$VL_VCOfS
%?-H.$Y_0i37ugUt#7#'KEuEck9[3_PmS(,rZA)sQ1O/H4o$E60F&QE4R2;@p(@n+%`srp5%8u]NF1aH%i#.=sr(!Lb-YDF#4"D5T
%k*Krl_%BIO\o$U4G@[S$Tel4iZg5`FDg^J:46D8kSI_5*#g-45o7<Ysd"gn6i2g>5rMb_d*%ebXdtSCGEc8NCkeLV>E8uVs##6,W
%W'scKnAH<)]X!*d*glD4i-5+m^K\:5A,3V*B4Tq2_^0eZVuA#3(]DjkV5SI>jjqGQ8V+GB7`)8Z^8s`YH7;=!_s!(mkQ\qqqHMhZ
%+P(3LW?F+tp/74Ha6=1P#h*#5q9o:RM,,3Z"cb,r/^g)e^gVM-7l6tB-Y4JAT?[TMb74#&;h;:/D']8H<i<#CktL#qe^U:`0nD.Y
%UH<30'0)WogB-)r^fbamR&MnuJ^^DiFX7)ZK,&LP7,Zi^'s*Xj$60N3%3fcCG8T$FJ`D/]ES7>,8XkTJd7skj(BkkoT`Sk(%o@gP
%"\o``.>9a\^feo,<nDM[6/VplA7ksVKb%8i3YOJ--<IWDi+.EbM0(*HV]j;ALm\O=XI:[dl9sP=0iBNE,&dV#KuI7P&ND_W-LFq`
%![mXlNJ%`Q30S"E_4:h$<W`f@c3"P;8(R]YH,-u,2N('d%lih-W-p`<3*?bpe$@p5B.Tbid5"CIH[qhYHglQ\L"Ycr*cNtSQaZI8
%UID8#\+5&2<ft4kg$jO`WE]dh#FlpI'!9JBi%0r:@#OQ*;p-TPZgiR`1t;I_2a$#c38D!UdssMXeH4.Rd!u3,@@#95!U$M0oX<.t
%_fd0+c'AU).jkBAK*U0Ts-q#Bk5e'\\Lofti/Y1_<7j>_Dm=.f#7WYqbQ&/31uNa..82f43"6hXi,orW8#B:1`WD1heD-A8!`&_h
%(2@\g^mUP-?!',q30Tj\Fe&]+/W7.K.grj+)_6%HE4uEP/HuSB^&DDmO"1StX)nUN)[eWON+<l["l++$XE$c3:1d*^dQ#%iK+#.g
%2%";E'iV0B']:O\CH8O3i-9Z?b5P-:mZd8cD^iKT8laXq^tHSATfN?:>>V?6V#[EsjDE'eJk.GL6:>HZ!DZiH(umP8^tE(QSOa60
%nm4*9B]]<869kZeE.FuQEb-Ntk;h2VGtS36bGk,^OBpB$f3f$Cj8^Q%-h@g+*8on,oO\l%"!$_NWVZl)3/#/3mUcrJ$5F;(B)uX#
%S*lM&Z[ch)\kG6EXqRlF*cNF6[4YU-^sQsQB&`o)TV$QrFWPLp!m5Dp+Tf\g1KZer_!tts\Mlq7oR<O26)YM6SZ.6:"HJtV?=LeS
%NZMkr)*c+C:Ar86hTc5+na%QnnURB;fsj'R\3bfu$TQ`B6moGpi/i(^'FYar-B'[eGf'U.,SAo\(2tI-gmk(EJ2;a/>:/LT!fg*W
%&u'I`E5no"p[FRSS:F:E^SGcEB$Iq,1uJci&Js<NJC>!.^2W07BDj3o[a##YeXEkWAgVIuNB3^gJMZPO7!tO3*0u?M12`Jp)&4>'
%:M0_6QDXQXFXD(7.')6[#oq46$gULEG_BoU5;Rj(jWebaB*)_C+jIUD"O;eNhUjN56Rm5.[a##9+XY7t?ijuZKk)kV-?+csP36p6
%E/YI>p)?]`bZ!gNX[.*OXt=oF!_<*Ma/0f.$!d)>JAZ5k^mWM=5e9mF3u4Xc9[AmP;Uk);2H8VAI:E[9't@aQ4QMb7S-`NWNHRYm
%XoOg=r,S'1jrY?3L'jH]Fi>J-bI3<5nT67"mu/N79*NVT#Su5A?'1hoFZ687]e^dU9*L>NX6bF5"V.$6el'el^k&p/(YVIbcJIRh
%.ht#KT74V2$615%Q<W#O.W?YZX5$BJi*[:bA\7:5'f^!=d\:ecGrq40O)Lu4=TQP5lV7VDP[iP9U/QWLN_Jn*;h:\N9rSP[$_6<i
%go7<;J`A>fEk]k1i-8P]Eh*RXK!*)[)_Q(8\dhHt!nS2q6(JCRQYO^f"V1%ZQlCtl**m8Pa"%t9L.K3S"cajMDM^'G^sQVOg.V[1
%ER6j23YaV1o9IYVW5*B_?%i_$33q6oWUW%`3$2>p8d(/^L/*L5&NDsH/Y>c@No7&!m)B/<Sm3:g%2Ci_0M'O:WPAf?O1flE'fZ=u
%@A6L#:;=)UL-)uVg%KL?E.P(%l.X8`c57(U\iLWe>$+Y3jT=UKdJ)DCZ93/NaMU%X3#YoV[p]AOF9me5B*7>[_t`GCi-0SKGJP=B
%bQlFX8c#"t5&eQT44^8G+1QJBpX(c\E9P29\e3WYQP*h28<7lNbUh87(QAop8`_5Wf^OH%17+S-7m:mhK2a@W+Zb,_P;toeI,J7h
%R_a%\J8/BhN=YsTQ[\d+r=@0Yc3bkJqHH.&RZd0Q#9PonT8]Y"&"Eb\XA.L>JYU!E=q3`8L07X\fD33f:H[>$JYO)r_Oq"O1a7$+
%keJq?8L2'I"36[q@c-Fcftuh5%37DM_:!p1#EEHDEZK8[b/44*`!m_H4[`9&%m"ZanS@hK*B7;FOg2Em",@soK&+]V:2GI&XITe?
%BL&Bp\mY\21Dr:Z)`[b1,p2Ghi/SaL1FtYpJYTb:DG4n`i5G=Oo,)'tE4h_dT5J9DGMLuFe9&\7NqZAIfF8cZJ@c_&6"FfiBHa@q
%L(#&AGjo,N/oX2uEgXAPR?Y#,1Fd>H1KmO('0,P\=\$i,^mj_E[Ntt[(77HoH,.h3KY#T^!s=Km'V&=ATtV(o*@0REqQGA0!,o<t
%a-He>g"mU!!?@J_g@cHiE6#PElrOC1[-3ko"1[CZiM;@&)8JOMa1S3C!"LLajaLD8n3R`[/,qOX\**g7qJQR4?k$r)^YrF]$eO%G
%;9)J4dSBcN^,+-BDRmMj0,<>;WP:5$`BH9an&&&1/b(cIp1:*!jrW,Jh(dK!A6H1YD+"/*Js$]VdVj5-lmuQqkr5)'8^g8Gd@q?:
%Sb/C'#hWuc^EL:l%j.V)n2/lfq$l0kfT]U[mp7V,#es5pkJ/k+q7bfG`\Xo=/6qgH3n\_b9udLl2tG!m4eqj#ULe0jdl6-PJXO@H
%9or,L6"d'52D\@OR(h5R$tq>CUP4HDQKc#D<3`Pnhf/FDCM,cebpcsXBYI?M>XD[u^6.<Sm&i.d2cf'C=,Loa.Zj2J$,3\7Y(IV+
%iV.5%3t-RV'&d6pG'\)FQ@)4BG&Q`)$(dPNmZ#=]m%\WK6gJ9[dEU1t#b7(V^/KA/DG0-KRG&V)r.mZ+N>Ahg%;KhDaK],c_sNFq
%"pG4A2d2ZZEdrek:bTa:V%'soas<;6=)Mq)<7mf^AoE'"+E+Y"HS]u!JqqY;h/$;T%C%k0e%nY;(f::R';4,Hlj_aBRX**C:%06m
%2hTeQ\:5rVAbIInO2BBuZT!IN$[/fseDA-a_/$HTp;ZsJNu6C'=Qm]T$nJ_E<ba\C>AA)HLpYjOm*18Sb3k\N)pQm@KA%7r%%7TB
%D`TM1X=Q0:2c4*2!d&<u=;QqG%rQ;f+:P5f\\2]&eJqV-Da<n%OMJ^"N>AY/fl29g"RX[\m7mN82a=gca_dE)@=:JAQperV20NnA
%6cfVa=*AMNAg+;;hY`8MQ^-?q-5\6F2WW]p_R4ipPC#)U/7cMYHTTq4-ir(aH^!^0a0H>%/#j,Bmc<5H"-@N--22TJ_7,]b>J\^k
%EdR+$l&=>c.7jd]%Vfo/PUM$4;0sOV^qKb[Ao@lO=T%'E^!XC7S/oi1*2m?D4075oKY_BsG&D6pU<4T6F*lqW$"+6\Db%GcXOQ+r
%PDC,qWP&T>;l(G@2]>eQ4fH%3pfPr^ZT%Jr\Cu%:DqOg._q?_je*8=&VD3E"?QdO"BD-N(FN_WZAoF"2Es_-UhTS*Wfsd[KL@_@n
%j.4mC%OTT061(dr**-4W;L8McdG6rH[C:^UBr1MMn4BZh6g`-](a*=@g7'LaZ@X%'2r9Mgs-D@X83^V&KA%8M5X/r"m#>$Y%<Z,u
%T!m:3,*p`cO>^Q@lj_H9%?XEP9mGOLN\Dug2c4mujEG'O[-09tM7irClXiX+@W17PX<-TDhIoL-.>-9BJN6N1DC5'h*Jt5BAbO]"
%6ED]D2]_ibWnj)rS,=dncS/sLKR,Ff.L3@?6ZPlAhJdftDN#:(_<js.#lA8Xm7ike]fM,,S'')j[rQhjKcoH2g7&DhgngigHXlJb
%Go5W!bSGCTS<8.3ePj]>aLsT@0i3MX)_F\@\KU_0KQSMR<Ng4,.m(67?17bu!65=G_Ee??NP^G)RsBjI`jg#8ZV6G@%%Z.BjL^?'
%Y:I)k-6@oMEdQ8d/T.EYL0L\4<c+eK@;q>`Uf2VULt\blg7-r=jeasm[5Vq/B%M6ADs$[JFgZ:;hu1u!hl6X09&YYLX=Jt*)Q7tD
%#mn7o@7!rXn.iCjOJ0.83&1bja9aVR^p7"Z+eB,:%`Ph\bHN9%Mq#*r(n?G6FkkY`=@[oYefnLd/.[IIMOg))A-lj6-?KKG/eN4:
%#\K$k:,FaK$&")8D@X`t75PH!KhNBpc1W#AbE@4448*"4XZfPuU`6j7XUCs9P?m(uMd/L=5.kcu"Xo@8"^h`gg/)Ta$X+6?qfTIX
%"8Qc<>m#1Y[5&dM-K-8,8:0KuGDn^0BsH@*6<1KCEm"34(>B!!l`muJN#OqI_kVQ+J9D+A$?cKNMj9kf(6=I91e:/EEU4X]E!NFE
%7/,\/153#/h.\=H;KXnP_N"fe8G"$3."#?[<s:5ia?o.7U*[dp9*l])Acmj%4h4'!NDfO`BYY/W7.$@RDEV0FY66*e2\7hjI4VVD
%+5D'mJesM-l2sjAlN3JH;5FSkUcHCi5ukK=/JTkj%n9RKG]@FfZX/LiJ3C[`&Sn`fmc&b_f\P`kM_#bU70PRd?jARL[A+$L-m(`<
%7C&ZPV6I$,=LG/*)4mO2mELsFNb;(UF_YnAPXTVB1s,h1,R)Ou@lIDp^ms#*:V\ESP*L8CX(9:o[]NRu!(QiK_;_nO]25($L0WQg
%Z!%ha`7A/jKGT782_#q8X!;"F#8Yj?2]M!SJLO#_SU2Q@G%"8e7f*$b(I0RB.DlG?"-!Y`mYY22c!dhLU[J'\U7=Y4M.PBiN<k4[
%2qNJ^=l%m?,Om6eXP""Z%j]8MP47*NWjC-jEqRp/?;4Pk`3Q<A/b$L%5Sj?L!eq;I$:q`t[0:4N@+YTm,]Q%$+Ch+LB5P,VUqsCb
%O0tp)aMea`^tLepmCZF-8u>BX@+:-e]p2U>j<R;:.]5</rn%:D&G-N,p]_bZkX[&XTihd!6*qB*cV`*/%u#lB4)cmV&H,Gn+RQP(
%5#1#oc0V1#I.(_TNTXguFOEgqKg//9JBZfa>pN"K_!8FtF+Yur.p@?)=pnI:U:)20J92fk>Rm]))+;5AV>?&06ieA4lhj'F:^SY_
%5mV,qhunStdR>%t3/$p[M)/+B%G*7CK[f8Hf8;UoJabX*;p=.;$Y2^fFslNE5WGKbJAEG4K:J@!])r4g_9#>A1C=W_TZ("[R6_4D
%68XF)Zquoq-PIZ^!DjBhBDJ."^h+/MUH&B>i=h;`Nu"T)ZA!\YY[Uh_5fW;i9OV6aFVAO?leEZ.0)*e`^kt39)H+n0b^<@]5&dDY
%V[BH@U]ek"WS3s;98Onu3cb.9+GcEA5jl`U_9MB:<9/LedMoD*6\_!?!jP'_*%#E.'m/UpL6`;tPTE]MTUDa<bq(;q`%FT!$nTjI
%l6)KKEIU4`%T%").p76KE0i>#OLp@F1'B,[V1F55GH)?0CmHe6H7kjQ2(k2]6V\I$66budOn=NPQncP(4U9oCX0crVQRB#F?k+29
%-O$H*f-!4#[ddUWXb&0kfnL0@o"8E!EW[r$,Uc(S/lEA0''_6^BioB6f^+`,6TISP$_G27:WOrXB=u8g2ZcSDA>SDr='[UrR6YX>
%19GEP>I;$PbEG;=3gViXnpu,tTjOkf^Q+T]%)p^pe@6-J\r!n.D]8_O\d=H07\'[-(`P,HD6J_&#Ic-NBEB>5$D:2KnH#"/fY3dC
%O&(jEGC`)&7`GpbW"L!W"=(-(,Et.n1BRWHb^1Lrff^uFkJ\fsBHo;n#]Gp`K)p[V6maI\JU;6UM`.dl'GCH\3Ln*S&>Z`G=,/4=
%bG(?S5qmj'q0MfDUKDgk-686jEbBM^1Uj683Q;V55\aK?nrCuD8FR*>Mn9(C959^8#;Aps^C8?jbB>"6'1<6$UF8f&98;&SpM@!r
%8TU];%4(9ua'0clZo%.O5LsTQ4_e!gL@"GT(hX^FM"JiHcR_2cLckDP3e:KO8qg917cMu=18j)IgJ?AchU0tk=#Z>\2Q:*&f!,BW
%1\o@fme7[?hR!D4)I&EnX^!^1Mt7d"lIb5Y=&'I5CggqD45J!m6D;"o@V0[MD8fftW)Vg_>&_>">&B6f;$dL;!f=L_RWc5SQ_B>J
%.4u;P]f"T5Znk[)JZ>c>,QbbLQLXI?=JHBqcHR$\qCmmV!-LZooC/PJD^JUNp0@;>aC\*)QE%L=G12[to8&j0CO!kO2OgmSqGq+I
%!EZnAo7KMEJRe-KN&@[WT&k3fdj-Ya1e'Y/IWup'S+[<)@IEF+UZ_p+7q@T:^3n<Z8$jh<8WY%9%97u#iCTsoCrWVRl9O\)B%p@l
%PS3Bu>J.Bu(s<[S$s_lFm4Qc0BcW1F8;5W2"E'BQ(1sS?KmNfeQtHk#6fW4kiu[4,@(L`YF:Om`G9OI4aOBS9dh-(^$2.69SJ0Q]
%i+pu-j=W@[/pM!eb4"3%l7S1LM)L:@R,ElT`nD$+OfbX:Eo:OR+SVkHEJ8:&$5)RG*aVGs_,+mP@N0N"+Ia8Q%.2EY@OT/OG1"Qu
%Bj=I8@M]s:*T1Nq2)a!"V'kX:*'WcDMHauG'L4Ig8e!<gb2aAOo:;Mf9AbJKIDFZ&L2JFoSfG,48G`:Z)ZV<#kK-=CXe)`A'jXU4
%K%FgK)A2m%Y$!8Pku=D00qpG;A2=pcU]O?'&+%`\n<qQ:e>VD-:n(,U#/c9\dc&t9lO$iN2t/]@\mWLsTt@ZAJSo^0/4YE8E6F3s
%?lO&eD:EkQ[pt/VL%Ntf@kZTBM:WT1DGm31]ErY10qUTD)lk_"$1nuu];'a@S)I!`L(`.h8ZV_sbVC>2T*YZh,\V"*0j]lVZAUac
%XQmb)dFct[m1!XtnQj+S`TCQt=D(C8Uq*m?p-)j3UAM4Zm_^2]A:_04MMR'e!R<(TJq\JXJRiZ8!&J*"2%=Q%kR=KeTrX1W_A&Ce
%"D-!)h20c)":8dE/SSR$chHr/ZhJ(VE?%QYn@Qp:+6mF]e723$er7hR-\:RN486$,I8]fE[>g0f+L!8'KS9M[;JUa[([&:uA7dDY
%Jc]%S:c?i:kf>>6%hE$mWHDS[F#F3QJRK1Rp'tG`CcsM&)Td#T?/R5X*mdP(gnN(-Fqt.7%NqZ1@Tef.pAtAZCoXcgg,/WRECbh`
%8I04d&&cMBTq+6S0\u4t+&)[T"Up]ai)QUZc9Z+IDc?JYX[&Ak$DX-opL=7)0ruocJ`+$PJeo-@FK'.)34UN0.a+&!Z%/Vs*Nh%5
%db&\uEs=hY(5_:gOG47L*DckT=T&SFC@Y=B`I>W9BgHpD1iDO@4QR5&aC[[>W?T0e9HummN'c24G\W/b?bRb72#nCc,.W)L3l1N9
%HRfGO2(Kh(>8tpZ"_Os5n"C+sO9D`ab'Qp^2gjG@3ndsf8?]ocLg<Ap*C^e1CK*3"[K%a?aF5FAA_85LkJ3/CMCU?A*sA&b4?-Bs
%edO?hT_1)CaUeYA`6`_4L4WS_#e#BWSEU2#._SH>W%jNiS\2_A@BG2HWq3oSY:PF?8>CX&d$8806^Ac*`kg+V.2hcIQ:?J-]bSS.
%$i`Eoo^"l\)IjDh)m43MpQ7P"g!t+J8fWGA]j2hg/X_lg?eK+^(fZ5[*FK!moPL<@Gf0dFr)P^0Bb[V+"3@0?aYFumF4//qb:Rh)
%a3PX\<j#q5gk-TH;$^hh;56B=&Fk=)fNMb/cg=?\0>qB=``hsr$W'10HGK6lG/gY'OcpO:<kgi+RqGeY\qrq1EpdDXXn""6]^(uf
%TVU/?M1itr9*dh&mRD06Reh/#ab.>5rah6m2c6T&C&0Y3`5_eQLU\Du-:1;_TS[fNW=bPP#mt'Rb(;JbR;&/_C^"`SFR&,16KdQ#
%E;@>6**D`-:'&c,Z%Ml[c&G+pi?T])ATU\[Gh>&Tal8"R7KO<#&[ro:V\Od)bFB3#<^P?6$>1!R-;DjX69#<\A;K$IHIamr(GT(n
%pI=0^)4C+lUdieJ6W04rCtKns@`=.E$%9FQaKWB'nkA9rL8;hm@]@kZiY[SF60d6AdmkZ&o?`'uh\G5l&Q;18,X)F"i"8.5KW4/X
%K^W7nO[_g$V(,C0C!8N\g8oc<//Ar$a?/@W&5(W-I)qAd8gfQL5HZgC<YEd1Unr1JW8t=/$!*CK&a<bR.t&d7ZMLBOOd\r+G,+`&
%OAImQF2Mg<%#oL-$X1UBZC&Q681_1HFU3@MpFHSd9&q.oPB1f+IiTEUj6<_/8:*ae/BecRCp@bg_asinE0P%ZiekgW69,O9'.!F6
%nAE[`K=<P8[Ksl';?tX!.WNC_I10+"hCCNg&7sOP-Ol@OAgT7ZM'H8m4X$'r']K*`@t;QCP(=u.CEm#Fo`1S:._\SMZIbgR!%hWc
%N#(@25fj^@R@'j'iSYto2+e]YJ<L/Il2@_d;O+sL'(mpbr\DSA!fSK\H]!L1&CqjXgMgrM:ClMaFFmB7rAZW;rrc[14TN&OXb7LE
%XqL#]8^hcJ7%qj>%eNdIe4S'1hNFdU;Dq7Z6<btZr2p^/&D_uo&Q=GB-pr_30(Y#5"194Q6J/tV_iufb+r9&][Q,.pUl[;e/g.ch
%M/]Rt;?nNW2hFWS,8.eFZ#Ei%kn_&I*(\'q>K%P4p?'boT_d2!M>a(XBn@B4H\tMj#c,@56c<rM"CRr3q'Ug\W4B:P`+]e7?l2&j
%XZTrl%u"_mYWYk>"_+Z<@9m?jRMqHbU`=T1nOAG8lU4'p/N%ob\fb6Z[2l^&8"d&s:)q`bY`_H;B[THW\$df+3,2>qiERPR/Q*8@
%P&jJFN6DN[`SQ\k!ku^Dh?bn;J_57P53\gK5mU^7`:<=Ni][Z'C].ST:bi/aZnNMl(6T"#W+ZfiHtnQI\EkS:B11ekUacXZ0ggJL
%%+Db(X,iCqm4B%l_$M5-:'4K:k(tH5J<MZY76TW)FEI+56I:N%QDHAPFcCKnd*.Wf[Af+oa=RXa(ZTjQj)(R2c!&4;?2"TZjo0LC
%*%.8/,aR;3;$.WRhBn'iZieEb@0C4q57JmBa\qF#>BRJ5-/-i]LeIqKU<"mXO?4'-5XSg]%IQ^'ZoG(*B&GK/GjcqZW\ddpoo5'R
%p@"XWER++mCFsu0:>JtkVhbnEA]>/hY;4*O:'>M9TEPT67@Z<2B'R/QMU@?9b<4E\q@#+=Bi6UHk<^G+;p3\Q!-4]f!'5oPaWZX$
%/_d(:K\2G"?_f,?,b6k&%7c8W7(Q5eW#EY",I\l)"2PN9)os[mN2;\NKorfQ1j`YW_85!<L6i(;qanZH'mTdSRM\p9O<Q@dX^W?H
%ohNDpKJRL-q,VN[[UG7#Je&Wa<&2oK-T8<?Xn(_d5eET,gNZrFQ9J',XmB^$7#`abB24;H`^F9WG077+/$(euH=-qb\&r>N\WD)+
%SnE[BhLc2MY!Yn:+<2mWm,O=:/">$dJ4Ja\H;"Y+9eiBCRGS,D641kc3a9,r"#EPQU$lS^&1e<bej4rtES5k`(Gj=I@3uDCO[O30
%\2*A*!+c.&RCC&]$OH<G;5dds!=OR]N_)g[iO_@)GE)%@fJS:X/'A,29e!^_/F5[.=]\9'(b;2C(e2_b*-oYH9NL;-(rqt`K.oo(
%!!A6@HjgY'/c1T<l*4"=1Zo[iCgcfOM.O/pUlBoKioq+?eUDRj\^36$YKN/SL2\!i6P2gi@nWAiTbul)UrGgJ'-n1Q6Y>DaWhgBG
%]]p8pZO4usF8uHGCa;@YMHq(Y$7p>(Oq4Y'HDrnp"U*N>+L-;2C5!qtcO2-'\3l_MQf_KQ5m-G;TZd,AcHq11,khHo+S.-0,S7/a
%Y_4mZF;3dM7A,+h@*0IZ[SR&r<hMGBRM.@b&l(Qd;8RY_$2#I%*'NS5!:4t<P2O1J.bkUKLiAnq'*j(*Eg#J7HgDs"Sj^e93d*:c
%embjtK>;aW&X"PCa_>bl&/>2:AsS\c*"nYcK0@D!&%.ibKC"/8j:6jEBuL*IIiOp84"kT_JFb)@l6Le1e-2fk=J@9Y-<Yp&*0NcY
%G,4J62_hTQPa>"U9hBrQb\_tG$:Zt:0:4^396D<RMfA8Qb'ZRd(('[b_*_E&:*AJ>DG52I,bkBFJ@3?ELK[ZD+@i/I(n,!R2hY+c
%YOK3s<OU-&BdAN_0Y%0,0[tPUEI/<(M1OB,<^e5O\=u.N$K*uMZ>u^pV:[n%q4f+l7X&$r5.'Q?X+8)L.X-EoM]UmGVc+7/<9t+S
%Hf=GQ*s"YgqA21[Q<_dEnS(iH,Z'$D,<Q&5OrRJ)Q/Gh<(t`5]7%MaoeAk2oSg-OJOrRC;:_>BK5F9B&K0Y$37!ZYs9(W._r1lEs
%nj'?F#Qn(Al+94.VB"f=880pJ!8`Z"[T>,RbShOQl6eSH;e_@L5bB5&P1\4I"3'sV.7?WR.J;7eC.18:Cu2rAj;RWBgPtWL`(I@V
%njgD+?#"4$&u(^_U>'dQ5!dI&=WiCmZgu3JH)H`8Go"Y6On-i;Q\PodVAN\S_KCNJ@]BZ*V]nJ_oP1jfWc<DCdk<$,S[]+b:!#r#
%%6g)u>98p\eFm*21Vk1\*+CI0<02&k8#DR#S'3<c9GK&\Em/Sq1"$F8Ao\3rJ6=a%l%\<iKa7TljUb];SpA3Mit\kgUF%AgUV+M7
%!"ae@1%;<Pn^t`9X\e!,8;7JhFO`Ltqi#)%T.C8ZG-HrD7375;Xs_/;Ce[?Y?I.\kF<Yi85,oBk>lf#!q@#Z^&fU'lZJ^lY[l&m[
%I2.knb>]6/;2_O:J]AkB?E%+e_O<!3/"Bn:@4*_-:U-VBeTOE0!_h>6mGQ%fWft(I(sIY;i<6#PN>+rDG+#ahZg%)H(kYaUOs0GZ
%!%/_R\XA)-T\%NOis]u\i&3kdLTWs)LBqc:@,P6p%>]U:7h^:4oF3Nj1(P?MKLPEQ&8!3qDkuHEP+&kq*9)N[)2!DPL(1e8en@AZ
%o7[*?S90ok*0ahfMW7B8Kri;786\IS(^1XG3WQ<&ab/*;jToZ(:)h1d9!)Q5OtJQC)Bi7D-q\0cG[FUn)A-<[?5Xg8_n\['><t&"
%7Lc7S\4VqHA$Si2&q)mjkmQ6;,h5MOh$1#u>fXc95T@LS*18A28V0^9WFCu-`'MgA)(IlV8GX`s578GjVRd130N)41&gR\X<^7FF
%X%3ek.'R*a;>>=qWfTn/_HG(_"e[og^@)%&aY[ERhD%PHeIZM_#"'l`)UM%R0o@,t.uD/3j,HXh.O;hJ$]N"b9S*`V[+\&d^kc\R
%lQ:&1$_8!57*InK$YooMs0T.,$m,P>6&uV)60q_iHU`[.>j+a.ogZ-qa&!Etc5$Y*,P;3C[&m8->Y"u7jggP#+6Y6qBUhT3]Z3K=
%9Ple>_U%7E][H?Jfs-td`ZiS"U)9*R"!WcFoAVsSAr(1W*['sSLct>X$SX_7]#[fc,Gk+fW$nI]4Hb;'";3'cXX*jMFU?jb%!cc5
%-`AbVM8>U6R<VST;d'U$!^tY:5GP#]F3,SdS7>@lYq@^uW)>.R"N4?W2CTt;ZCPYM=lFCP0'Se1@;e`P,PD+V!#Sb1iu'GkNds8q
%<f"3eB4U)I<NdE!6R,YDB>8$_YIF/_48!%0SXs)W*gr)2,fDIb4J%.,Nl(sW64jsOG)Jt*B&NeaM@$qo(H(^R'&L8KC1mI7Cc@kp
%K'=)n-&*DV7[SA/lN!0*duTDg&Cjs8$=XL:UF&M5Do\d[Z.[4L%^SN?6e!iRJf0t,;DBf.*h_AmgH2s/R]-#?_Rn;)9IB"8PWXf]
%C1)Mbjs*`!a=9fl(Fu[s;$]a+Jj:tG??oio("YOBkTAeGZ3[F/;*Z?'hLMX:+Xm528KqUIH;kSuqI*2NbF11!pYnm4R_nF-G]Bg\
%i^n`XUla\lNm#!W1h#k;ilE9_b7V&8aQTpG)M:JKAeZR"7#P.%;X&>TrXsZ\/!*<$7B@YB#65#D_ncLA7H(2C@8%jlSB3l:bd'O1
%F9JRfRN603dAMXi0nPTB&<_]88]%CLn3/+NfTBB8.`=9]WGMd#1VpUN&uQS;A0lr*Vtd\G8WjHqIZYke;p\i+7RP$r8lo[moN'n8
%[R/&&lrRSoid.em^XD?pCeb$9`p+D]C+:u87B%a=+DQgO+-HY*1r<1E6fdbJL&H\A=17m?[2%$p\7l7ifda9f=bfSM!R<0H>dpl&
%0]1hgDRI\t+Ppok8mGn2H'TR^dC1.XmG'5R:/o';6"!Lmi#eAk0e*E<6^Z=JRJ15`X?98i$g@dVSMj[5BEHUbnNu7*[a9<qMZ&+s
%8\dT"Np)G+Osigc;d7CA#rW0W>K7@eNiOqG6:*@Mir0/QH*rf(-<$J?4!HemHJ,P^ZbD6CR@pRflGf*%e35&(0VN%!k"80U71U`S
%!)=-I,N+2J`DT6qD=%U/K^hF#0&acOa[V9<.+oMDil2D<;IC=AFGDtA9Oo=@o1n3ta<QbM+2QOd$.="*Jj:sXU5_Fr#1CNs,C/3X
%AoDr(!&?%*7H5*H^a[kR_Vu$h\X[WBoRJ&DW,p(u5t#O+LRLq.=SNE)&E,\VkEdYT73a^MA(=g7n.u-j!#<ri>W]:^*RS2JTGE-E
%L@IoiYQ2TU['A'e/_l3l>lar4'b2Jr<s!Rsd#et=dLd9+`c"Km9tE5*BIgMT_PkPu,,$?$":d8jE'dpI9<5S/LaY36]LZ"A7h7Of
%bfBc-7NS]u[Q\)<9gtDAQm@oi(#42N"6d;6b=,\E-1JK318'@gPnSc4^]b<,pS>I=#Ut@>=GJC4,S.i;n`N.N5ct\95s]':K!dl<
%iG#id7kOkG2+\A?)2uE"6s<,Z0Cu#2F6bjT)D)AmfEtssiWh;+89fhF*?;$!1K]dHP7qn(86O+99]rQDnE!NJ=MLu`,c5a+E&n'Y
%TKgLZlAA4V%7a$SFrPi#8.#C/('-R;8779kOKt;.D9U#hF<q#'P9;P[C2lg(gG&2`(pID,WHK4>I8@-RV=U"1)o,nro)r0A.#("l
%>d[E[qp=q2-<q^RJo9O$,WJ0Tf[^?APO!OS@0JNYB1RW*VrH(_7csnUT,p4io$o!'!p&r\_66;X4WJRF+HK*%2HBR!7@B')(ilA'
%'[3FSl>mo/V_9ObSgpQ^n7VqYi,er:3g:6WYZR)!M8j.tJ?@#X_<VA)HU=RF>t@e"qF70u#R9,mbpciSC/,l0ko1\ENR1K&[,"0*
%M-;@.GDldr=]',Lo[]spDFUn!?kmYW&eg7o7O.f.UR#SO*=IM<"@6=XeI/Gl!^e+_Nh6?]-1[BNl)NmS>#`VZ/jWE\X4JI;)YS6_
%O>t$L0]MqN8DPG25tgoq=F^I'%?DlqF#Cs>^`Fn9C]_%i5!ZRc'R%Fd`h>M;MJgeI,*JL!ZBZ9oV#cD%H?K:YenU0K8cOR5_%,1s
%:,#D1XT^eP4r4:IFsY<Dl^R]U=GLE/iR0>\Dp18+p.%h:-Xn%m=]jS`=MTJF1.S%Z=W\a..`"&8keUpn02X?+,Ep51l9m.)*YM,I
%MRj*,CW)HFD#tsh-*;ch7i4cM+X4]&VRF7ib.\5#f]\&9Admli?lAs=FKm)2`Mf[j\718FK=qa0/ZoYZ&pb8^M0aPI^rukdRfk*)
%n4hs$psbD+R--XWU30?d9F8qo@Mi!>$u/$j#gfU&Zq>KA&QK4%.`0`S/Rambelu!\An:gRip]8oIAQa/;@)K"A]rQ\V*(Zl,4J9D
%d!u2/K05$OH*3\<YP-V>CaQ/F#gc#@&3E#s7ONE%K;P%*CoC+q#Y#4/iRp*aQkIi5,)`QifhcMTC4J4H92O>rfSKu>is^bH=1j&r
%'p/D;E/6Ia/)45>0=`(hYj!kS[2#.a52h9YDGJJ$oSaF31c/[r7-mM2^4<iN1%/D7LGpnMK(*88hn:Ge=Ls'6AiNE!M*U\K@$:_F
%DAe;[EbfRY1]rGSe<rUI+PQQaP`]cr&!5CqIB#/LHE1LB"&tY&M.HqOAmd_*C/Z7#:qYtK"5;.te`rP(q<Vc2%4bQ$aQQrKkem/Z
%*YmgG'G?#Y4B(4?EDcFZk"-^INoUBcH/TccN/7)l"U9+$`Bj=?3]8t::`.<^&IM#9X9>TDUG/e]1:P\7+Gl,7ed-VDq)7^UdI#s.
%gDcHC<tlo]MaK%XQq0RS'8gT?;)5tgUf,5o41rd0S/e.F[*C@F\SL1T]GV:$.c)^]##XS+)9idZ-M"fK8MeG%(3(^`MTh0ILZ)?j
%\;=;0V'tiGDFjP&5HbLtN@bV/P%8,kBkS0<?uWJc$*&dbD->d1>G[)dSL?Mp?=$=&$7$'*[3"c^nfXK%LtXP8X6,%%$OKuG;IX=,
%i*_Ace>e#\k@03#ER$'%-;9"D.ARdm>p,hXaY4)HK=Y5@eVL0@E$q5FqEYlD#?e];KB68[7]GO.7WpUh"Gm9N8QbBgM$0Nng-MZj
%C)m;>6olL)MbermmCa_.iFkr/"N34pF$+Q,KP+OfDA6:9;:E?ZWDXk[A[7ar7RnK9GQ^A$1bk&IR7%)AU(ge0f`Z(&))kYKoSK64
%4YUP@B^)/4VB_K^aU*290;G5)PgL*\kMVjDi1imd'YRQB,7T<t'k1$^;H1L=Y[`iWOeU//BZqJ=jcPW[]<<qU.mfI2,-S;hJ.M)o
%je]Gp=Pa'7L5$5!THK@^ba-G8Wkbo\2%8u!`5di>6W3q&VRQ8E,<LYP3NNNhA'FMM!r=5N!Z;E6Q*"*u:;P2A*_5`;9.f`,m@9oL
%Yo8N8jZH*.&jP:W'6,Dm#L%SUa0G9?d;1&)V$A)gM;/I4)g$7Q+\@bL?hlBXZb=9fE/H)VNY=Vf6]Hl/MMia7<%8cGNM(i:;`/a:
%Y+s_nWE)^WKETS&k1b)BNi7#S\)NViiIkUg3BBI',$[9oP8QBG)I3>jq^<1?gjgQ110HRG$u8(Zpl$@>#48DFg6<QW0.;GS2lMpl
%jr5MWAB<iMYH_slJU1?`>KNmXc7XuFnIA@6^uG_c[kIVhX>7*PW"F,iOX)CCmJu2MM<&b;R\d$n@U:pTNmG5)Ui75DnRRW19MMVX
%aPV?\/E;tJA'M9[:el>Rg]T"+Xk#C5[Z\G[0jdAl$P]V.7E&0(dOL]*.-FB%NqFNpPUP^J$?J1-6"sf&CFOT\%&!f`J@A'A584fn
%_]sjl%0&6&p*Dj5p&"im:3K`1D!Rq_8#kL8fd?AU4kD_F7lo=+*10W[rdb6-Op&_XR<[`u.#&.eMV5d*mf^kGlNiYkb?SrG`%<AX
%+O&pj)L9VK&G:W\:CLk("db4I!<c-"(t?VV'Aa"FehjL.2isW#OrD&$EM`.r'J]1&R)@8K*2`h7Kiqk]]-..q#$ql6Xjhb2ZB6iO
%:s<nX;o1R5jKaP;M_D_RVU7$$"Y#'7"/7;"Fnf#4*0OjVac63XfZ%$^#UK'PBU!j0>0>ct8ks/g@"!kk#g/\@$r[i^T6@i%B3RSQ
%[;mDkI/r>($o$,h-J:P/8j'3$7aYgZ^*;Kl)J!Ye<9_=u1,,bjFOCmS_D@q<a:X-&N7d]7W0#:5)`Y"bOHep1,$u*&6)G'<%SSqJ
%"GJ!)@8.s^#;dKiF^Z\?9rV8`Z;'bZQFCms_Mi2B#@aTIR/.5m)CO*KbUQ)OC._I5BdI1)&lpXVn4:S'ciYg^(l^L?j]6>QF[@!9
%VEA=S^i.'!'RWolWi\aBEG-YE*[S=XHAf9fj]8;7K[MQ)C'5]s,7Y(iWCXA@#c=FG8lF:+N>2F(EQT\,Ao>hQfn@N'!_:$jb5Tq"
%P/>fnN@$8,r=MLQ7g8P4M,S6k@qW1fP2SOaX$AaCRj0,qH4ShcU1A'`"srUF85!K<R!#(O+"X04Q[5L5_ELJj)]59g8o?XTR1M&f
%AcA"%"fg;!I7F,d#l68uPN.G?JgUke'CmKDW5t7THRAhCMV66VAs]=56`52W9BRD9otjlYdKrLeS)t#EdP7O`0MF-KbdN*.1":`<
%?X*"mM4Et-d'OD+?gZ"3N,nFFU0`g&%qM"l6B<]i"%fL%79!3!aZ2m%;?2Z<p')QMV]D&cK>deC%26eg?0OIl0F<*;6T-G=1p!pt
%a,qAYZWKa9!VBtsA<cFZ_NZMCV^DMBB=qHC,TqL*NKBP<4r/]jL45(:0#Q-^\@(g_`KH'R*.DGhdsi]H_'i/>!m]';("35sqUeoJ
%?emep-a+jhPqXBY,odQJEbc"-CSOiCcc\#(pm"U@`&38/SrpA[EIcEO@G!(=aqM!)WA\_@Z&DFE)3N>SaT1h-Y'C0<Ee(fHBqE*_
%-TS"j"'cP(>8`'`ABp@2JQ9-YJgqWFg49d>lSQc&]u5eH<a:64SWi9D/&O^;K:3+^2pcO7'%W>OnEiKXY754=<X]V?$L0\qnRPiP
%hm(n^L[WZ>/^3gFi#iA]XALt./rGACTu)qo^krl&\J#d5)*.i@bgTp,X?P4j>sX-1'FDJ_PYCZ?Md,/:@R^HX?-0M@Brr,V(NG<T
%*`NZXNRLjbe15e$>:C>+KNn]oH@"XIABD^O^b#YB9qH?(-S[+A?2Rq[,kDF$U0r$d^C&mc,b([q`e1MC[#g`'`-Qc_>>Z\A`8oPW
%$B\mSJ=\&keGUS(UJCs]/B+m2ELUf(ai,Q658-bS'>pB\gLt4$LIGV!JQ4sQ+MP_FL;K3(#VqtlY6hM<lE*0Y#\g+8(__T62DgI!
%NB01XTaG;#%">-KQ;SPEh+h!$,X@N]#X`+uEsg#o&/6j"P'[JJ9C'H..f7QRLrY]$H'*r*$=@^EhHcsW,MoVDP'YQS_>$nu5UKfH
%3TI2:<apg93^GM:r`3Ppocn(43(G*g7t^WPD:s%o&%G1:D/$;@g.'0k:1Z)Qf.9I8!X"Um[L',?")5]?c'NIC5Ue2"(BdAUoc@QG
%[\PAa?*L"LO,=q^8j>dlJ[^@`'ggtNo$Je8&li9=l8jlKed:Qc5Rq:P<[#E#,X@=u;c&RhbcEQJ:?4Mlkt2f<>%)d\Bida1GK_p2
%lYqMmQ.(Qb5M1QiMp"q`jF3)e?"'l\kTns,b)U)p@9lJ"CJ$W-U1i(?SX<HZ3GkRCKMb.Taot@a5modmeUZad@FBBg"%Y!p=Os8R
%7]nF$p<:J!:q)U,_pG;/Eer328Llgfe;6/&0SHTm*Eh,`fVlVpX[s6G8oY&]Alf1fGh.9RBZX,+T@%``DMb^9EL,ueo4E[+YrG`+
%c<;mL9eRd4:e@>q3^tIf@EXmg),tb/ZSk"E1JSc*l&rsYkIj_Z-\,Vj4090FBdR1N0E!-,),W>sPu&YU1Q@n8fgC^7Ti@c'h4kI:
%5.IQa#bD>I<^K90P)Z<4$s#I30LSGlDo7Q(%^DT5aVrK_D$>l1*h]Eh;_T;PQSN4eGnP(^Zu/asRh]TS@I-B_6Y/A+qE"epNE>a8
%d]ULaB$"UIT/)8H85PU'DFe1Yi@2Rn@-s%_$S'ph@0#&5o+$c/`X@nL(3<1I=t@3keH=T.d!S_>6]r9YN&5DT_j":2)Cdp&a$bOT
%5tjNeQ>8h_7cd'M[3hY,aR+k=(6Q!5<dc%mnK@.bpR9`Q3a]n,eT<<l7RS60:hr`VTJiAU1U%;#)8MgUkrs2%C0/-T,W-c.9@8AX
%mat!DT_e_?"<Q(A`]R84&fHWrZ6G<;Z7@n+]Ejcga"n0"aXL>t,WPeIbt>:fBW!eH7=sP`!IE]s9-k5%.<MP6'6$9RWg*Vm'-$#5
%M,=Y;+o;cF;Q?jMZD`eBH!3Qbf^GC+]is!)T_+/FjC*m(5.Vo;0Y$H4`+-od(\U!)ifUI<Q*oUeI3$%)?oD/Ag^9pf@/-05o,<oa
%["SUe*P1o7B.)OpGZ0aM7YFOB-Ro6p''pSa(suQ_ZDiF3OtcK0\CTn!\.i5r0,TpWL`0)4ZFQj[a"HRKNA)[Q#Z(Y%C"neFd3sGY
%SH2b'ck1tF\MH=Hnl*.p:ZV!qcmo4]<7Z7s%Rc#jMHgUNoa+b(o8jBa.$ud.huk>19@E&sB:>ueZkWWXl)h)!YRQf:V'%@Oq2;(e
%9nhMl3Jb)k>JX/cTERHi0f"0rRO3!aAup*O&jjC#@O1-.)Zq6IWME`C&[.g"S%:LKAId`\oFKA^"5Z9VKRZGA!^`QFfb#8q+/4\p
%nLbprclI.J=tSW+P(c^($bb">lPZD4)I^3"E<J(UC5ilHF-8p2Q%G(Q`pX(*>JhQ`i'O@`BaJIH0q:5&O^gD:+"K6\b*ZU73&N`g
%[B)Vf&==lgF_$=u_5>Rn_V&Zr#m#%*aCrHs2#nKp>L>.t-7R^tn<*Kf6u%.hEl>6=[?:Y<:oje_<!p$h&d#r.=\[652,fILrreF>
%RPKVSc@fMg,ur_$Eh@;m!4]g\4%`$Fm=k4mGDa<G,J<`@'dQ_T=.j_rAYr#F!&]Ss]+,RJSRcUG;?.Dq@ra<_SNS:)U>b.2[Q'Zc
%W$<=5ciGD,P%&/[V7@>0!j":^M+t,?L+Ub+LK#$Q?R_=!XA9ub4BDY$Dl'W`J3<3>X&uh^F/D_S,m,D*5j3rT@%0H:),$)(6U_J.
%H(W#`g^2e_j!oL>F19YM/#5iu?pa*F_L^i@<35pEA=0:V,jH\ZLfh)JFqPFYG+qVrTFi#E-]Nh^j9ecX!qlm1%f"nH-WX?N?Ab_=
%</#s7&"S:FP"M,I;4s!WQPWH*aJ2f&l`j+@/pGB`QfaEH7#miGZZ]2l<S@m_Eh`n9KO9EhP_?<#gMmus2cs]\KM1r#6]mQE8aUqB
%?",(q@&<s>V#]P_QsnGAJY>B1&FiImC3QCW6sV/CG7(&$F="E?CN:g5r9Cf=eDU"s5('OtCi/$Dif\js"g0/<,]=!DJ9mc:Jc]1R
%/W%Xh"#Gd1Y?5)qCI6%KA`7G<RYcr3@nI4[6HBH+P1^WU(gmQ$3B9^)J/2Wn"$jppk0e5VGUDYV<h]C`OOgd27D[ee:=+g=Ft+9R
%38?+q=UUac&@BNGBr)l>nb%2Yl^(_.CR':+KhR<2=P1JTf67d$%K9_+_SNFqLoF<h&BWn=&shdE]6Q_RJiF_tb^W1MH%B!?)`A9[
%N*n(,prg&.K`Wk6Y-b\Cj>p!h5RaPhStp&b!SU19*J#A,(.N&('e'F]=:=1P()#C$Q'*-0(j$0!bb_Lr*S2(rAUKs4e0OG8<m[h9
%etMu><9#%cL10GWA<:5Dbr^VEUm&ek6>^Sd]%Ku[78H$]B7m^2i2h,hAgEC\k],tb_S&mlAu5q<:lJkpUmXm!;f[u\#tMX&OuUA\
%O.9]k:+*\Y/Dm<-2D6@)/\l("!1FJ^MhRjmfsst4GmoYY(1;e2i>6eEn?B?"_?t,(orY#;_BFPT+ed89WrpI6Xp")f.*7j'9N$_k
%Ge&bCMPjpaWGbL-ifI?AKgugB2CNG\$^h>dP=,/BoX`(ZD$=cGnokZ(FAZrKJ4QNV"FN8$MmYSW=gl9@5aGlS'm`4H"hZ.Rg:h0[
%kHRY"_>TY39X3[5ZFaCFY?n7c4!bmiNH0G_.[3)U@4jM*=MU(BlP]R-!lITgoI0NP)CRBs;^$#r(/(dlau>cPW;YQ[>)XhL[.5pb
%;VheIP"Gup"R`@g0\]5d%hTqdf&5LdB64rPA36IPOSo?GILW'a=_Z;$JTIS@k\,]![uKG,Z4RKP1MBo:8$s1nfKkYL97Eb8;hp>]
%kd4XA]E0N4rK3Su$+7+jrsA%Ge&#K4R>EQO(69BQ,U=`>6rIr1X$d@FC-i(U(14<5[?$7dIL%[PjEK0=5U.DkLQ$&O:hV.j)e*sn
%X_T+E!B_6'RG%)nU>uO;.W"&u#f@U.Qj55R=&Qg]=QJ>$oF7[2c2<,Oaqi\tC.-Y28.M3c[9.WIr9;A4_ZC+[II8@ObuILM%7imr
%3%7+V%)A`0\_nHEjTVYUNB/GU,jm&1_+(_BQq>8NM&[9S[HOu$((hVLmMZf1!jI\@T4QJH810f\aoDsbDlc[+:R*=[>obKW"^-Cd
%11Z^]il)&;%nl:hHTN[<&1A[oSWUR?+@<%%A>UpE<AJ^igE'rYMJ$>i>EZMUlWY\3!a^JS$nG4,F$A+8X>rITKSr][`:QjaV$tRP
%nM*<pQ5[Hc.;!!i$K-cLBKILLX+`NMe5d\e%AgqdS#A!^8Yn%bmnG0$U%Hi9:Htn68Wq*3DU>D(X.h3''cd];<HHc+Ot%uB$&<DP
%g4;^]iRY"sj7GJ>&ns?XBL./AJCLj1#;KH`D8be5JR=lHMib5PMm6B#^Q:uq8#P$)_:ScSJbZ>$:@Y(r0oh]J8=$)QX.X-\_gto1
%>S+B_gd]^:f+LcUL6QOU+JgnnKuM*,%hcFq-+?1g;5H#QL)[fA(h"O"5;0`l@F-7^!$0<ZZE450e;QqSA&@hOXH>]<OKFUsOHH'i
%D+n]7j')ONCuqa$Y>L@[OTORYZI>\+M31.`fee\Y"4=rf<bar@^h(W-D$aJ#M,a]9%M.M$/L?Wd,%O,6=_?YsP\a*GUC=H0+>BM>
%!!?#bX=l/J:,'E$?>^.CM]ko:UAJUh.VpB/:'-"iNF7VpamR5iaHA`7"H/>0g*'(h63e6RR0ZYU$d]>QLPBpih+.n5e7Si&$UV-`
%*-_$M1Za^Sl8?JNA9cU4NF:e^Kdj")NB.@g&b8b7R!!*eAW!'j]&#Er5`hgs!Coa1"Dl:AG;*`oekO#QV@Us.dEW&-&+d!/gOu.,
%'`hEg4=@$J2akNrUsKH7/2KMMb\A1hoM3VD*OU3e+[e'5Z8iQ5M]j$9dgRcXk(tjc'+S$+U^,VLBsfi6*edcd7uN*n9jQHJ&:]gA
%W[-,"66TE%BFA,diO8q*hKrHNc#(RUK:AKu!O+,se`@,A,skDa$5kBjha0M-cgtP2?l_T?ZCCp-J\W'"nt%RL`2So]Hjq8*`aX*H
%&f1]>;\6nZN+LEo!mi44onjAZ,JQS.l[a<u,Xe0DDr?n>*KF[Ps!B>E0\hVo,eT@uQdgdA>QuH/MBr0u[%HhP+u@iNRZth-E]$=L
%Dl=rF$gC9h1t.mT-)EGU-I;XA\Hj_j6?9Y;Qooi#Y&koQB]qGGdDJ2k\4i!G,6WrB!'-_8]Z"n[]e)9FfN42C:53G(@9^mY7o"WI
%r$",qRF[c&k;.6U.jNtFa$<rFD-pR@%?"Z:rYEEZ[?@NM'u@:Tnu'sB`sAY!/0NTQ4Sj)p+9@drZRo96U);H\O/Kr.,=43R>1VT=
%KiX:)^6=d-Ss/]\%.i'q^81?VW2CN"6I<ii?P&1]EEaO!>AnRAh>_1"#mE1$iTYg1GR+jYIuHqh(ee"oD;hmTIkTNI,EM&FY$%I>
%6[ZdNG@VcgUhj>%+O;6cL+IO9IQZ]8&NdGjiut0E]%#3h_+8]@ZdQ2?@Fo?jlq-YLU6t]jEkI.`@+S$`V*MmtV8dSp@rW`*4B@3"
%\$IdKR@Y&;XDm-T0@BMnGdtA"GTp'94@dlFXt\hb:FS\Vgn(m-M7=*&23XSG`.NiB9-o,:i#tdP>l$/_*pr4Aod"c9U-e$h%QobB
%7l&72#9F@^*n2`p!\^0Ukf"Dqi&+\E<!i%"o8=hciP4EP&A[0JqE(W%Sp1V>?,MWVVC0,G<BHVtL>6uN$m$ql*SIs=W`GMUk]@)R
%L&$`=1M(rC7#u")0J3b%*MF.a$L;!c8HrBKn"#/<9W.]BpWarm7'=eOHY6as>FPQ.HY62?*(%-OHe3QEs/iYPd#KBa*jOS0:=<2n
%l!<VNT!<=mU#(F_6USl*(3>?%`(G8EF=*MqPj]*[,h1"sl0`Md5`&u^]>G4/JW['rh2tf5+5B5@Z&/u<XMT)b)FaFP/(GZ+2<b<8
%9QqKa#n^c#7!I3_L@ZS9SOFA.Y4k8)B+_t'm==FR+351tA&NJE#<!ui-qnh)%\sJ3VRqCiaE/e=Q[5MjIN3XE$\P"XXe^'"WU;<&
%5!]A"?V'Sebg+(Jf1SSDG9S@>]Wg5^=X`[;Cj-XS_)tp4g$Tst$K=BrB44AX(OEYS80e:H7!G!,$V;)8FEa#npW9Vch*ES+6\XsR
%!qa8e:!\#ra`UDE\KTk$L&VhFqoX*fPU4n$<5(Ge-QsLD9Qp`WVa)`@6?`[%-m?V^I!:l=>3+W]o%a=Y9$$dlmZ%>YTX*D47]'XU
%g$Sje7,ZQeG@ppd`VAVPm`r,VQY1*1]<`b7J<RFgh,t_3O8q>=]<gRR['?O@ZNYrUdbR4;.fWf#G)%hhilDqE4/.%`ST)YnB?<7A
%'iWcQM!d_F]>Aa3)A-q*N7mV1Ajn%]-+gKo)(+ODdbQ)-8pL4Fh&S3,A0@-)NY$:]2Efk:U#Ssf4/TWr,b>7RFJ6=QSlg>_L$m5A
%^XV#0m`p,1@]=HnO9BP6%-d1"8YFeie(lb@m(s+a*NG$FBU`=eTK_u8/)))<&BWri@_3j/"fWi5m>fhV%$hU94-;M76?aed3n0G_
%Y('KG]9AR>-!dGbXgiu6?KghR()1dNC$@m%g@n,Q"(ot30_h%&NdZje<jk*5?jDOYPjJr*P;o=-Cj/ukJnqN*GGp"RqJ^#XF2Z+N
%.5YMG6RK+K[L:h1YW*o$<7pUYh,$f_ZeYWtb''oQg$XC0aRnW3Fsg[\h(%/"_'F^t:[>Umi?fVg_KKQpYnNTA\i]5kqXP!L*@/'L
%>u,ZW=UINCG=Zo_1bKq2.!0Y90dCqoM!bb7%"e(VkjCij$ObcrJ*VpY%R:TB='4\SJCZ%ZYsNX>>q9U%,J#rbAmsCAFEc)YUllVE
%h-p%%j'8FmZc!DL>u,ZW#n7g-'tQJ"GDCbf&IAq/#n+(/FE`g=VH)Tej)kb6'tucr;adN'oA*iI';3^hG@uOY?<?7#ZU).e`l(30
%KM5,,q<g5*/G(E>GF!d1`iege62d#EXn(:VX-W!6ik)P<h'\ChiOa`qj-^Wbq!K\,E3HbEI!5j.,i>ra!CoE1.7:C&SB.*q<OhI9
%&83pYJC&25P8]fCe"+ieV4Ql\$m8UJ#X!=8l'g[6B^Rk;I+,FW_&s#lkI>;:iMdbog`^5=,qYD@%Q1F8IjtSF0G[dl4lWq<aFn]p
%L#1)nn1DEp3MO!8QjNMPh@:/k^@=O.B2)N.,C2G-4jR)]hTd<u+QViTD[1iTR?-S!0Hc=*(3Vdl*@(h@jE@nEPSpB3[fbJ2;S4Ki
%>qD]D6>j8UN5*Olo%jOl3:"qE)fscM.OHHMA[6rV.BL\*,\`/5Lb'$O.!d't#cX=">j?UtjA&a.%ghOjMU[pO(aara#$b/._MgTn
%!omJkWYPfBTYU:DZ.@3Un'ZV9TT]LM_@#t[G/W(?$mdC0SKfM=<mf:h6'<J9=[pVYKP_Xsg,TA/U@!g)#jD^;1+'G^^"ID3.`?M/
%,884s6>Qn]20pSp%>jHXr_*k:jgB_+&P.YhG.(=Y`QE#;@VFNfg=a?;4m'/i-^2KK1>=NZ0fB3IY*4oX@IAs)NeMUM$pCqf+>bSr
%SmZ9lkg"/>B`C@Z,AW&BZ(:!?M4:H^G*_+#[)-Tk)2)JG;\;B1Bf#9f`+t,9BpVn-3ufArOLt#9=je>cAqehH(1$uaJ#sm"`$+Z"
%L"FU*=eY(om:]Y<`2g7g!7f<riE'^[Cru7O[!%`@$`WH+m;+VJ6oh!LK:'B68o"Z'DQ2r9m3!!KKb:F-9FCob<*D@S[(o.Fm4@dg
%\oq?M^mB(O.("/`;)IT>B^K3BBp_>'m3&Z#@&C;S`3.']O(mu4(u8'j*CZ<VH7?E[WuZR6N9=8C46fEP@T?GjfG,qk)UmDC_GtfZ
%VmWkH+L$`O8dnrqK#W$3e6HdRI''^.5pC8-L"4H](H/f=<]e$[N')gEN`H\\UC+&m,t>"B+gj[1-)IH"g'N'W6WQQP4,AT1\<,DV
%r=%/XP1icBoOQ@5g=](D?:aI&ib.dg-+0LL^mfM$e./pk\;CZn*O`4*P&jDjm4@M\dgDunUqt'Bd`sldEV596Q2n!EXt\R4,$6dt
%B=,SNgX`0ld1-UC_BLpL[%j"W\M2`766c'=BLbW1dL)`ibj*b.9f`/G(68qnrY[KF6-Km^V6mR8^&4/Dc@V(Dfg[2Y43IUm'73>5
%*'[St=#oYm%8\4gS9>\DM']?nOYOMd/*!.thkee2\.PPX%L8.W;^h$Ln<.uu.IAZ03ZG[tBnt_ChJEImG$*5p.">`)4,AS7Z-_2j
%+#I<7i5ss\<?g4e,?d0b28$#tG*!"$H(hVj-o1rX,@3HZ2=\WnY8nP$.eka%*KN]Vdi\@;AXP!\1s0ThB+[+A6u.PfkQ2EGPh(jE
%P!FDKf$;8JdiQrk6/"2nlY5b)FkDo3EH>MaE^XYtWD;Xa-++u15*LgnUitD?Qlf:!mH?PTeS$,6ZcqKIg^:#$;"cKO&.>HXqH'%"
%8#1;d'q2ePC56">frhR5_2CebiA%AR^09diPh$<m#3(Rl`-+Hmi8P*KSS])OZP)")`;iE;8o+`Z,FI]8`-/@X)QL\AC^5H^&<mo=
%47Z)W->u:ga'&luK,%iW]HXQDZpJS!7j&\R$F(WI.&,;?Z/gm_V84l1[Y)EX#aADHmGQ85=]?]U@r4CIa%+'kW9!.#]+Wl7*S!R=
%GnjdMa5U6]GkK!un355a?$Pa5FABQ-8o.!=M$0Eh&[<@piit,[G*[)^Rbrrq0gaEd'N^[hBF'COHY,@_=L`9qAiiY)5$2\IAik!a
%&[>*!m7?2$FZj3B,8;bu`s]3oh1G8$'kTPEO!i0]XlpU@1HMgK(1oX!LlPE%mA+Qim_9pOSRZpJ3^B,##jd(&YVEI)E>#A(N/@pn
%Y2e[\AigJdl#B5;G,4nH]$rOjZ.PW=B#JM@o!.+IlC%$q+;D49;ind,&g<n(LtRdo7)TTeb]^r#,'ds4[Ngrt4FY@f7iDSPM&'hf
%f'8?V]l;`b3uXeI*-0f=hQ:i^[2gU+i%pClmDr#=nL;t2,"]MH[c=J6),f3$b"$tPQ.h6HAA["WUpboc,mBkqgEHH!Qp(na*K,U3
%lo&C__e=k//Bi9(/^ef*ZQ63bRMupp+e?:ihd[h<j%FZgo%G78?5CM9f8eBp1k,k9*T=HkN\A=oA=DL3N0s!gi_#0W_JD_TEM]J6
%<M,Z#i]Rod4.\8:!?MK77oH8\D`tM!*'dXjUXXI_ZXHa5Tsc1;!Rn&=e947I-nNeu3CM4s<lQW"S^:khIYHPe+=O=rWT84h[?Usg
%G,p(C]0%;+>sh+)0:kL#oQJ1,@]KmMSTH?IZI7Jn0D\XAag/uY6H%rn_JVjN,MN-Nh2Xlk7$AY=gQC#Q''b_<Nl4"r.>9M!fH[G-
%6uU,PFJjRLVJG5UY=h.FmFGM<n=BDDl0\%sr$h[?o7-Ahs69*NhG6Fji;5120#,[`]#fqXp.XSgb9-?=%"@g<7pj!hmooPCnb'N'
%YNrMYq/Z;S6N=LXbTB#,MpFWea=P(&jl;EYIJf45I/X>"[6gLpq!M5]mJl7>r[Z0@=bOb$(]X#tB(7Y6pY@bMJ+P;.-^J-a>h$O)
%[UNP=$]9ORhHT*Oqo.c%q/;UEZ$]5o&#r.jJZFEuYO,_HOrO]@BW-)/J.I5j`5'/r3'b--!Cu!Yn_NA4^-k2s&Zj($(Oj!eOiE8#
%IcZkFYI=phV2*QYeOQTddp&1J]&>4jhs_EPYIX>8'Y3#iGF]Cm*fXgN[$bC$bS5F$9Ykun>?!r_&W8b)`c?196&GW"d_rXa=J,(l
%bEF#`"rZrHoO"Fh!"DeSk3CR<,Xph.>ac4#'Za-__,]AFeA`lp`YgWlN[>.iR#*[VLe"Oo6^?sr6p\9Kj`iP&F5C18WuDV:)@98R
%O"<-dN%,okn(PebW>o1?(mXF-J:ajA?4UHl`KLV-'.l!67`+]9o^^a#VNo$=[?"1qIZ,"WUmF_uEBPZhP.Ha9Iq.I4A#aqD@q)Xu
%7^KdpQUe_kQ$\?Wi6+2:PN?:*H`M(Eb+>dn?H)BFmf.`]H#g0;\Y'cX@,Y0's7Qo=R_*_K:DMUmeUA7\\U^=Km9kRFh]_Qgr:e2Y
%UsX@]U@\'PT5V8%b?obsdJm,knhB>RCW);(8R0ZOoEMU>XV4R8go1XDA9=t\=QK/?r`<2cYl$-MV\IP$Zb7X.XZ]nMS":(.`&)qO
%MWF(&n)KJ//MibHs8C]Lb@h@oLFWg(Yj)2]=Q>.-d'jJiO!8h`fM0%/nl7E/X/fq4l=e*Yk^R_0QB,V_'EApDnC^7;iRpN@J@0#+
%H2m6i#l]8Mo2Zn&5*i0*o#ktOr@`Xa43ruapnLXNcS3$srU-jB^:\d&jNh>:r0C]<[eSpU([%.\Qd>4-?D%2cmUl9\k&rZNY>83&
%3IQ=!rpk@a`rW[Eo\V9>qHr5h2o!(0ns?!0M=N<Po>L-mT23bikuFpRB0X,EflA*T.PJtP:bM\+Ng_c#1&mcjNdpJ@'7QM!KO8rT
%KW?3oCO(5II.cpuAcBX.X)1!`B[J?5OM>.oh7T<*[aEX;C?;h!o?5h1S(A=BUt>"60q\L#pRe(mH%#7s]t6jK0.4+3(]A@-([mhg
%1e/nLh$ZH;]NtO4HMQIeQC"LJf&OpG],Kn&GLo(7h72e4gNVgZ'RmT3=3Y`/\)m2:`E/rr-U08^BU7Vr],[PhkBWLImr"ZNF_A&G
%_fsP%bH#Q"c>HCdWPLlAhX\7mSXiOpXO5Q3Q-H`Qf\9SKp\)#mgKfFiq!d%Y@4+G7mFAi7e)ar>:Yr`J4.WSZ>Y`rR0)&YrSR$-^
%+6.OSh)/_Y:Cin6ok&JtEcZ@dTe65>4'jSdY:e[:]fiuq[Tjm<.qhE/r;iO>Z$`tSCd-#/h)T.4b0<Geq'``>-l;$@S2m$WSt/Yt
%qf%^f0O#(U,kpU#,_*],QWIg<kHirkQCH3@o3#rpbKX\1#mP*g;J3OQmKoEGVDVi/cZ@P^f&<-@NgDs`cbFmVo()(43HS90INJN\
%^rAUt8FZ?8jVQ+4cSYNEJsA@/Hro_3iV_N?Sa&/*gidB8r8m"qgUCfCQcIib\)2B#K^&2Nar^4rLRZeX2GDeu?LDcnR^P?P?@,tk
%HM)H,F3A;Xi3iP!gNJ[ZHpVSggNV8Q:/7/5St;HJEQF(lhplg1LP_'C`RCmZX6]fYbNnQYZ-iRHla/RmFgF^8:!Iq[ApO7']5?lr
%&A>LcCi2*+h>,1co;g'D2^aqj>.&h&cIup.2t0WCHujG@]N544>7U;@OUoFN9^&8ORF!D_Zbs+tSCEFEpJBLVK/)1PYtH%rl`7A8
%RhsO9>^q.6chLP-l3lET&(9[0]^b@e(4&aea6u&9YhrCHd*=cJMfS0R#+/esrA8)jr3XAL11=tqBq#38e:t3Z#4kW>8fR\WO2JDL
%NnRlb]oP:H+Se0Dpq>Pu:Ti#]?=,7%V@:[7m>^:A2d`2ID*9&fS)[ouK(%aa]oOAjjad>QH2Zb94aE.?cLcha1rnWR^LGLZRBq9!
%44,C^B&?m-PD3VoPC.g,72tr7V(t3K\iN'i?7u7j6J1_*k:tYb$&.3e-SNg&9pr0G_VLe@T1W/8bHpf(.A>jU3gi\ZR"L7;:75W'
%X?RcNhRpFKoD7bMlGj2mmN*E:SsC:aQ.MTWYGY>(32P&9<aHm1..e3o8Y:OYqI)_7k]#,I%]V?,COmRH(@7i*f_:).VO1Ei>2B4r
%'[-#C(B&oVlaaGGhspTBmGHY%FXS3TJHHU&bAS7nYc5#H].LU='&2WGQ*L?l,<nkh<X5s@:2.q#[+.nin]c`+i:GPJQ^>neDjTY1
%dqSfIoilUi^<\/p$LcldoilUPgO+#7p<EETl1/;/H1TXO2[?nTQpphW=SpL+I_:#$q;W1$Vd-a`8n@C7V[77>K2LqN-i%`q_XRkN
%>aR9%LLO+F8($[1D]>8Geo-bl@c*OKP[`'n`;>q[s#:i12Pi-(5!<ID6IkbZ`KX%G?FHo>S1p0d=&\gdX512"CpV'75%&=b:%A2)
%Fh;D2q:Xm#A3pe%l,ibc?a$?&!Y6p>fc6J84tifV#0BlWC<#q0B:ulkEq8e_g!/3r;[0/7FB>S*3WJ4%f*MPD2k?G%l\XA[>e-m^
%]pb<Tq<I>EHs3Q9q<f/BH$),Yb(0Zkh(=I8UIdDSGZW.Y@)WSE='kkPRrNW[a4KePA8uX8Ftm]9rqKT&n-"9pT!`Vdb$H(7:7kE2
%b*9mcMYlC`1JoJ._nId_-VYJ'qNOlTV>tqe\L>(6/jJT*PUS-J:puqtcUF70=rp3eb*1IK-`r@+cUBjB9"??K)DgQNbdf,D@^gWG
%\L@/qOGbkcM<t3/2!:V"l#C.Sa;g(+IH\3iPK%(hQhjY*76,cg\L:ApF""*g+eplLQr>eT/FT8iFubkD%A#L-_eU<M_aE3=S:Pq7
%YLqqQ4=U3Fci<D008QOsr<%D&%WVN;ipf)EUn=OhNr@V/5<DlHpHt@:p"Fid=u5KP$!f7N[99]XHL2jIg7POSA2`%OF)@Q"g(KTk
%enVNl]:W,nNO@GAS$gtOeXhY!)b,Lpha)X:hn!>b(];jGlp1dTk@Jc8AX)=g1nb<>AMc'8d@?&*&LV*68u'.hP`Rl7G#oI4mt2u:
%X2(pbrjb/kqY]F+mrqV"\8QHam.09/e_0&-Y0'Tge=5RAbnlT%.0eDlC8da9(<YAj5XW)o3<t7l@]'X]%#2'_<]r`&Pj@GMe^iTL
%_,0h,%-9+:ks:G.G,+aHp+p=s2WfLY7K3="q<.\5cgi_)O&P)E]+`86&7>.U1jW=nKcf6G]:8`R8OVSDPJf\f3PWTkrd>iJI:)pH
%NZRS9:&3?mIt6J)DCRiQ0&BjHc0+T"hJL_?^JUWj;@u#EXZK'*0YpQWe!(U=dgd2<"Gc)7gL<dM2M<*>c4ep9/X:&"#/B'UYcXIk
%2V:CE<<ofk:,_b=IW%?Z5.c)gZ+QL1eK=-!q+0G%:L]MM`'D7(a*+WXRk+I"q!T4&]l,Dkn_Y>e&+81WT&[S@&H@0A>SqP[GC+u)
%q!Xsde/\LZj1i3ds3c3]"PB-g-<cRRb]cig6$r%PRUa'Qb]f*ChV0ZR@$R=sHM-^no(ggI2JFeAbd"Q;G%Pkm>r^_:"F;.q]rP34
%\i`3lqW7.BSY,lUqBfS=lkH[u'3_kk_p5?<$**pZorEHMR6#6GbP,99mJBYZbPMT_8s<I9HcTe0g$Bl/S@s6GMk*"AZ\NAjOGu-R
%";CLuh.1!BJ+hpqEd@I`[M"q!jc0'%a/dO85.`j_hL'L[I/2IGouZ=H\G#8RgBHZ`"E3Gn4TB8m^M.ZSc8OX)6CUaLkNq3abr1$b
%dIJbgmat8*`>K[.0;)$_R[`l%*&M!#>!'f>T9[e;p-%']q68JrLUV2fVqEK/I^I7K*Mj!7R!%-RHT5KdDqXGfV-j+tJ%j%Um(F=i
%h_I9"B#i*]GaTR*Zf>V?]ZcD&g$s+G[L5$P3*t)B6iY?rGhM*jkj3Q)O5jeqqW$i$q<X(Cl!$=?*4,t8?>'&HpIIESMV9G52Y#u`
%UKqW3_ZlTt!Y@&<:$b@hp)RsY$=LlfK2"Hck)8J\Fo/p,5$=\<o<Xpi:X6EFgZQh$NtpB]3UXpIm/,r?'Te]Zl`%ST([lVNT(g61
%caapEl"M:ph.']&oVEFRBiidUGCridmH]t&=22s)2,C>(Ifeob>a<&_-GdNbZVM^$I(;t,NY7cZ\\"guV%"*j<dE)A09<fu?<==:
%]j9K&2-_eA:/o>j[cY>6)h3o]JG0r;Vg0-3[uksS0Z`2]b'ZN;KG0gIk$RPJTs'g315G.K]@ueHff5Zc;bX,1>#<Zd0u\n$TaCDh
%3;VA`Abl7Ep2X'bUL(EV5K4,?r5ALMc0WJ1TJOj/q_?ePi5_55L=qWm[jU!!>P#0CA+jF!gW7TfN7j83+F]:,a)Mb?[%!7NBhD2"
%I!5A%W@tkTCHS&9/+UU"gZ>'2QiI#%H$MHii*<gA=)C$ii'_ff!&p850"sB[3Vdqu&bYYQ>rCotoh#.9o.R;mVNa']I<RTN5(6"@
%#2e:-h4/A([Z0&_\F+9JkECX9FS.i$W2HflT/+d?Pg/.:p!q"qCPA,BXsFb69Q%#1BToLQ[GjcP--]gh>8oDO,sBC9c!X,P::`Rg
%9:Bn:GYkK;h)TuQ!upl7Nh=)"]DgdFH1("9F:(dK6MLH:4bK?]g6PUpg+H[=pFGg'*Ml[s),Da@CJ&+14PadF'BWi/4n-0]><7P'
%m+!%!hf#RqruHBNb`R1^cM3kke5+.+59VuKi4SS=G9%''?i2!)qVl^5T-!c1DOOar:NQ,ADEc=iVn)ac$I,KZq(t%&k&*?,9fU0U
%rR9O)*.mu?[h"8)#m5<hLUfFQC-Kr1X(%HWF7XBh50iQYE@sGSj4lHf":fP&)DN>up>JP$C&&aoOm`6T?+p1+qIIbJn^Pm+:Q8Ld
%_P(THAD$k6FCG:LJ^D1Q4KcV]O#c5m*$DE&%NG.aPh3eQAF.;TGb,@)Td'JC5Fe@9rq+l16s";%:=!g,rEkc$eSfAT4eL^\eE_98
%mj9eB+3Zd7fUbH57XrFr431DYFWd:8Y4FaLEZWFa*K4$G9;'>g:J8/[H+lE&UO7N58NuSlVhES^FuA5*1JiLHH8<Ud)-sqV<rMT8
%&e`$kd[`V7D%@RDDY8`i[;SAYakM$kY>.iZ;ho4;q0[_k:!K'L:O=emdWELb-gpJA-6NdMch$$@\q^OBmVE:#'@b.Gs.!B-RhVKo
%=73(O<73kDjEW<Jl&.@O#VW&DQiHiJ+$q:C68u`5[,tuD@($JeW,(k@d!IIt_1Y0DC%sj:8F*bOXF1a?rUR@GqWF?KbN6DUf\\G'
%7C,k`Ldod.'0Z,GI&h&XTT,[mo#C.o*]rO6n$r]'d>agPg&8WP1LVO.C!)&'Bnu"c8fP4Xog`j)qq[!Di%Uoapq8j+r3Yj[;&el)
%pQDG<h`BSS]Dqcfan=?3l\jjMg4b15+4&8N^-4R3HA%eIa$!I:oB*P)j08!Aj-4Q9pW[]hT%a'inX_,dH#ML<3VU/A)\:>K4Hg6B
%X3pMu9)`eLj&*SN+D8XAU>ULCn?R8tVAs-NH00LDJVduHU'Fgn$_r20rDY(eO!&qB13hot6dUX9^NKK$hu387/?V@imM@8HE>)_V
%m]-D5Ha5`J])M#4%GPeYn[&_=V[Dtap_@e\>XJaWOn%ceJ7Ld3E)t\>P`3ZS1@:kt?[\SnfNkZZ!sY1'LQV9UVqM.S9:fC?*C:&L
%V8#/3,5%-*PT7Kkm(H#q;qTJ.d[hKie:_SR6X)taDbrZpN>6O%]3!2A5G)4GOu)84K>ML\_:=$Vo#(:ohl$;m7p#.o[.t;0bJj/;
%GF,5b*2FK58dhtmVqL$&ZbILB1paMD4/?#&][PpQ*cY!hr3u!UbI=[P0IcAISA1[rZhHrC]k]oGa2]fES.*ka/a:s]Z"\<Io(MnT
%q0^&)ht]=2=?]K;jWf2i4\:b7jn!u.k5.AK^8tj9PXUDBs75IGlhhH+$p@Pbnaa`,bMdA'rohNajZ38#\%c8IE-7be,nKh%08gXi
%=#YX(fIT5dp`m-?m[&u!H<:)#Mm)WRP5Y".YP?lPaZo`*QMn+nB(=KlJ,H3I]ZbSLpW^`#4\M@=7kVAA(E7kb]knQ%'ROoN3'3@;
%@0fA[f;<X()V9pY>rZS=h'qeGil8PSBC'+&aF%WKA9iTgnb0DL7r@SGdC!h,=.`Vaj1"dBr^6QQ%U6<kqWArMFSl5e:&Z-I`q9)f
%n!=mTQ\urh:L9W(K5TZ=IfIV3).SYI$ZkB=lT0eXX.s&rk]@*khoC"1]fQR<nGN0ine_*%Dju8Qc&Klj=<-K)G_Ie153A73/&jGR
%T3TPuq&!te&(\+uAb_(YiCCft:"SB[Xt^5I1bOJq(Z1dBL:VA%3pT-/\iI($9`mD%d-7sh*d'*hTr`G2F6W$8cCLMR)]-D)U1;pe
%S_`1aH/V-_j(n8a=aas:)nj"D#G9^7F3pfWp?2>QN:HjUV0eXspY\pEWU2s2GK02KG8-$46eUbf`P*Y/:DUi<`l;lZ*B3?@4DeSt
%-i<C:bjUg0p7dhgZ"kH85B>DN[FRS"gaOm949,!B++Np,=XN%>r:m%!n];jghu1=71?t\h<&rq1p8Etb_)J28kDdr9fJZ7IHQC2)
%YoT<fpZLYcQuHSABSWnG`R1D5im_G[Ybg\-G&$5F>,G.QdTFe'!KAbW"-jZ?423qaq0s*uUF$nna<(TS6U-WkiH*IFFL`Rc:_Sc8
%ft%Yg#OB`rY$G18c/s.n3a.;unOJQTV:W_^49:*,Bl)n!lN<e`Dj.&6_B6'-Z)4j(B$X@;ngUH;kBra@[&3#&*lO<6]5npc`u$^[
%"pUD1Yg)(R)Q,1N6=/1;$h@[bT2ej^"*oddDp;3;TWL+g^,HRK0UsKc[iL4iq"4OBHT_,;:#:\hl#O8RXB>':o"A%%ruKp.NnVn3
%]=nn9Dpi(af8hXjo)0Rm0=G/Xm9+pr$F4qh3=gDek+/0Qg(.KQT]/Wd72LP.NReuMQi)u[M+%mGCFeK6laXCo_jW2T8R`n>'g83F
%>oh`ulJhTei-WH/oCb#*EGiAc*]42&3&f6)Ba"'S_V3-Sf6'Z&\##q3-)'Yi*mkt<-=T3]6^VL;pB0"g[1,&)9`:jKL:Z5sVmf?;
%fu9_1.<0NdghEY1ZeKZ[qt8X5[s)^Zq)`Xnjr^7\A'3VaV8N\-41iZ\@ke6QABQ)K5L/]0.W+U+B;*4F1`PoNo%K)._:lh([[g+[
%pO)AueCV-3AOb]6\N>#"ncTh+mXP$rT/LT,kG`t,hPa]h6ZmC+6g_M/Q]&>V:YmW=(HaVR&XU<\rdO0ViE!&19q02WH@[7:YtPrM
%jeH%HRj?0GV2a_M`F;m/Q-H_r"rf0IPASYU2hF-pH&[e:L2mbN5\Rbll]UO1P8n0(aB2X^>J<"6,$Z\pMVr.gjS^U)O?Vl;b6uK]
%_g1@UC^=7u*,TR"A\"M;94E6+TljqO[7@AORnd%NX*/XB;+qWmU=/qJ/@<?LB"P3]3\IdU!Mod33>qa=AY%q3F)BB(&LVMfKTCC0
%6e8foo(iiUf?M!=0B"ut<r#j/(p_e%Kk-1Z:LCl#3W_cmQX??II;TL+qtn)!GiDBNe/TdPm60R9k\OMY5OMV\q24UcSOCu%c3fpN
%VV&/^RKoC>?`]'#2=P,dh^6?"kf*3<gVe@Y%:6U=JM6FF5OtEV7k8)JS6%%q=lf0R556smXPJi(D<(A"B&q.Pq@u:\!FmkC6-%_$
%KO2ph2QRAQB%?_!ZYYZ`g"/(`a27B:kGP6H0#"m-l'#_ZqRk:eGeeM4B33q!]&`AS-4ad-+F_BZgq6u8FXD#rWI34;VRb?]R&Ut_
%;an-2L@_6tN>kU'FK66nDSniMM6d7'Lt=gec8Q9dR?'@)QL:C(H$".Om8&4LfGFKhYo.^uIo>)R*^8Y*>8uqge)RL0EuG5Pla)'n
%cbEdm^KR5cL_&g$T3T)m?T/BO5:cI$L&_#1k%8meq9AKNZaVmFm#&Om(LDQ+ZcGYSr/Y\Sq`asjH#bOF3r&C3&`'qZB**aWqtDbq
%B.s;RnlL6u>CRemIBRPnY;1_7er)-m55i[:Z^9sH]sAgANh>U+[4A8+n"#:"qV1'?r9Lu(B;`'\E-;B0Nkj<[ps^:7EirSc"SrRf
%5ektakRYWEBK&!Sds)lqLa+U$E(=;6LE+T-n*LC>di<q`^_(hkpMOpQDL&EF!o)]?>kO@EQm4<`<_":6oo4ts=^*D:^h0L)^udh@
%^bFFRQp-HRY^4jRFcW&,W^eZN*.dC:F5=i?`=Efd+0]T?3<CSCp3>S4eIQ>O+4/;N^u+>[oUFWdIWbh=DSV$H"*.,;mP_A+N*LKh
%cb&&TY7@TI\tNW[b9eud%ur9gLSesQG]\)H5`.YIjqb"a`JEBnnrZkj<U\U1EBZ?%6'8.rp<mK?<m<,_Z->S%:I2;/o7RTS0=6"l
%F?/I=`EBn*\!@CGYHb_Upsa9461p)]>FL(f5I!2@eHKYRgZd?J?Cm6[='g`h9ObF'@cT-Fa'ho5A6'VC.^8oBOfcp'lODa;\*@#V
%Aep-61[=sPMFrDA@sA903/79[W0^!;R=CH:[;ues<dW6D0$fFrG4\mqbq^6aWJGCENmVpWbr95BU(q+#@bIr:7,MuqP79k/U:Jb#
%:3j(QllOW@m`DIX7FS9`_7&Dq(geAH]?E_;:=aYZp@eD`A'.(3e0Y'rkY_t#Z7-Q1)Pbl*d_@-+TSbkXKci`&IHZQ3De6mIHs\bO
%6gHg>8]ETF9rmS%G?N4:B0^R!Y3`7`3h(?K%BaLt!F27pB]E<>1>=QUTseAQ'o+\2,&Y"PDZCg'^?XIEp>k6?:PRWTf[c$^f5G^F
%O5.90T?W8-.aHrLc9,+T_"jJ%s&Bm+kjlA&DA8/7cB%<[Sek)TX.%tGhb>"<VK.LL/<4SUb0)/!#ukWe[@UB^%nn1g6LL-NAt'p!
%!m"G(;\`?iA=V,,I4K3DI(885L,6$N3`.PcBJuLU<@mtR#LO[J&c5@;e-7[2qoOpin+F#mZ'j*'%V+b1.,pu)o'/'6W#M6AAN_qg
%ng_d0O<eU#?tH@LK"Pku*b2lJWlE;)[&U1lji<d)7K;j*$W"m%>3_'J<#*#O*-$]L`K[cq(L`Mr=KF1m3k[;:Wb`<TQ!WgiQopZF
%o=CP^RoGc_<MPjVf(u<C!A/J@4L%A_<UOl%j#@I]2:]KdASb6c[.4O#C9)/.juu[a_c_79::7?*@;'MB(#s783%^=T+)QY5,\,kD
%e*?c7=0;Z;WZ=5m&Uod<KU_'C7$rT4EtDai,!<7UK&%,/E#XB7DK?B**D-mZCl'>mNt=bL]8IkLn]9T'7;.T<^R5j+8=Q=ZPM^^L
%q7RD082Z:O4Alleq9;ciG"WOcDMfVlf6h4.KQs+;JtF#OBHB$gckL\Q]A9%HiLa+oIb.(%36O@>k\LbS0GRU)#]:2C\Gpo:VnQ6l
%#e#d=b^kH))G"h:!XW`S,g:gm#KeF6ahUs#C/[sF/:NiJ<:b=GTkR`MmFXF2i#-DkaeSX)ZFn(idR;>pHKI(#@^dQ$p&stqmHN_B
%<ca53Tr"__^g<9M*'j!O25X6O&WW\Gd(>UILc0/lWt)'*p;Tr7Qs+3epWgc<^ES@*2>(:H,).a-=ER`8-E,hJMMV[Wd@0&6cR1DH
%!r.@`?THf1\l:e&gi^RaKdYS8YM(9?X+#CK:;29uph<*82Te`q*)<2AZs3-qYAE\YSbASE3ZKt9Za-aG=HRc9/\WWa$/:<s.W:Eb
%Xc9tWjGpV:X8lLpD;o`4l/<[ro*m>FCtGT?K)FM^=MmaC\'J@;<f_S+ZmKV$f#*X5CU3`2k8rOZ>\kqqIcJfWrn"7nXo%LL7Ll4J
%n5@k])RIUZ]c>\`Kb\kp*0#?IQ#\g.4eRI7e0nKfV_eoR_3TAVp@u7Tc[$*2VSd%@PN'%@bK$L8LCuk7j^#TPrLD%*_04(=B(NG+
%8KEDQKCQSF\]8nY=3%LM;o"m(O0P.%T_*Ptk<hsKP1nZ1Y.Lg)GZ>f5B18CLnQP_m(-[,oWtcj=`>ZAbo_L9q2Lj`p<>l.e-('r1
%Mp/%o;8RVU$Zu.(.jC^0X6tD79/0qLYZ7qdq&'gj(^L4=BLN7%idB63inMTO[OC+;=7)\2iOkjg;jFSf8iWlu4T!=_n#@#Ga#`P0
%et.,lK[0<HX9o3)2AG=K;W7o-\"QCIUEMZq_J>^n/)_CcZI#6"9&U:j*Um4G..NUtL%G!Q]O)]Pns&!$o:Y@SRgl[e(m<'XZ`'X$
%ePS:'/CtSYKJT[4l6t0dRleX1WfGXO?OJrqd5)"lIeU[>Y>;s/r^bEI^Era8VaWh?h]2S#)o<]"\GlfmO)k88pd7`nQ1.:GO+5[V
%Vo1ehn#s%;NIQUir$-$8J(P8Is)<F.r'NPm*<0^'h6,%ANdkjPJ#r<cX*qZ)r))V1atm+n+6Dmjd>sH10T:I^::43mh\uH4IWP-K
%*]8t,W%0!.rk*7C,Amj<XRqMloZgY8UTB.!LT\Q[qSBFPT=Ps@=C6o;mp?_mI/G4+/u!=(T0"HqLjgb9pd`*_a$g[gM-q"tnJ_NP
%IWGM-D[:ll-YXk,dVTDCLsp,s!7LVL*QU-?;2c9b`]l@7`(fb4Deo9GYG0C]p=]d7E;ZK]0SJ>89Hmo$:r<jL%t@!,6I8N?2>RnW
%oHUemo],ph4eDLNM1*;\qll,f6.*4pZ&c2YNFEtU<]I1R8/hpbX9gcVd2,W8%N@K>KA5UK<HU6@`l]H:jG`cOD[q36)Z/_K-sFA$
%qhW8e@I0bmT^\F;+73NI(Hu.+7@[?!d+Ad2'Utj6>!UJ*5&Nkg\a-Zh"Vb0m-E@:anGiY5D:fQt&A*!'ps@9'*;HIUlUp*1\gBpu
%O0BeuiAOb68.^0FK&VEa2$Q6$?9\pIF;k9'.;]B=V"MOD85sp8JHI"9CCC9DMd'[&[KIaY*(2to%76_[[RNHl')BoQj#u:G4RoNd
%qI!2]6Q[6snEq+h\>>,cIL!7t7_t+R`0s/(LH^Q;*:%9U'b;C,7hU+(XGpNXGURS1E+B_eSQh<P=6lobZG%]ii8Q9SYS,^`X+Go=
%<SXBo4m_spLVZPq>[#6eGfHQ3%K20TF@3fDnOa%Tc/$),lpp>Bdr"AObgU!%e>r.6^851<+*N%t_`%8TecWel\=.17n]96sgD07:
%OVj]NSFGcDnaI^]dPS"c^F9*4%<&B.Q,fB=+1(\-l60Eu_q@tu_,H_f8NuHBPi<PSHh&&g^:LkD1T'>okrE7"PL"3nQp0Siko"tr
%FR>%%4QA*@prbJmnr1>2B_g(4rplR4rHS.dPEViBjRYPg(6ib.QD[;l!$&6.]*c@jPS9kD"r[`Dc.=lXE[.W"5B(&P3_B-d2%Vr)
%hCm>Ki+gNo&Oq3\nL%IU!g(CV.k9j1.$u*A%F6d_o0."pCS`IIpJ!he@U?1YZ0:4ErbRtol=A-LAB=L$f#?L=drc?*KMZun(HVW.
%1lL=nW\\;_>ug[4jrG?h'cO]F0LHa?H3hr/=5Potl%eME_b)^kN5Wr/Nks<<RABP%aWfS$<M&LZrM!o,@s"1uE.6k\=BFZ!j@to_
%AsQM"lmQB%\d3rI2?ad0gC:"h_s"bjLk<ND&e/XQA)(I@`R2?akMlgOSFYT=*g69N-Io<("fieKq$(qW)uD!Ec$>7%S\8?G^$4+>
%?t"J@d'QN>\7s[(2F@rC2PbuFo!M46Pn25W&<5[TZmZWi;1Z^p</etl0eq6_8Ii^sQ:">!m%F6&LnS,b\>$oBe]0EWeB4(\^S)!W
%qZOo80gX"%#"QrmIVLMTI6eSY^:$4HfWOmB3$!->n(#rgE\S>j<lr-7N.%^g:<GM-_gg(s%Ze$BE)j7-jD;)aJ*aG^[:6cZ*n'k[
%[2W6l\.p.slYTS?UrnfANAPU"XLDb2Y)bG1WStJCOc*eDM>ZSl8cu,Ae8P.8h^pa/jn"p.]s3b+ipmLkQWQuZWnhu$3;R%J$Q%AX
%(hbCi:#f8e]p>,:N;KLhN]V;)ms?)`*!c;e(h"Ti]PqGTqemMdFPjmMC`-X$f4icZc=jgmn&br6,9)$>W/sbkDUYJe&TX--64$+j
%350!,)lZ*L\5D++A%1F&#ZJQn&i[DfBud\H9f@LQXr!T"2U-.CEpA\K&>ci/:$>6NE\$bi67@O4bc),ICU;F>Up<)G^=2cH+]%2B
%[RrKIX)1j]UKB'6A\&uV&'7=eS#iKR(PBc6-;,qfTu#d>rNrl*TerW>h7C8$Wi9>GIK3fpff"uo8BY(ea7]anXC/'E;oN&ik3uAA
%e$#48Hrh%H0=GIICrU94W&dImoFUdT<o5fsl%`9rkdVK`<lB8s@k;CjS86nojnuJL;[2rU$uFB*!u3\C[dG9&V^ba]3NrG%ka($.
%/a`T[QW$Q.\=*M2#2s)sMFK:Z]O1;=K]BU#Em"sTiX!)VEd;[]S@Gh<b?*>b`F9d75h;A%F'WV3I`[mN\\At=WOHslF@A0nF>.>d
%bY>l9&nQ#^^=LC`phJd--l?$&lJ5nE(12U_."=]^X0nK3^Q3:I8?iL`T3$:X,_m.\&jpU4=;]2s8i^G\L+5<f0"E6.Ck$HmZRGK0
%rDS'rkR4D8n?qqW_fi/+_J/8,^>N!m`OHD$]IF+pGdjKp)O+GpOf^4p.XYS"/;u3aVlr2r[9@>7ONs2uW+t5^69hboWk@_Fq^.tt
%8^YNBA$L=6<_^<E\+PVkHibi.XR]5tjh&B=;b-QDc,M@WM"M?V-..F32\#E9k]<^HHs$8N*4n8hN8'kf=DGcDl[,NGNk9<Sn,",`
%g(S7B0LD.WK\TcLk5*?'bY+d`K=Na.M^`^^+<#,LlQ&!C,<`a"U%aK3T:c%m&&geB,hq@pITYr..F?n%rI^0s08>O8Zq?u='\35c
%Kg6m1*7`pfeUNf=TZp@4]?5YYb@#BjIo@63JOK/Q"9u!A/ZOl./Q)K7Tjc<V]_=e0TZp@43N>;6p#i:Q#ES.g/I'p+<'T[Q/^(D_
%b&R\`rDWjbm4D36<29<->+kc,oQ]@g26+E9O@l0MbCD(F;^YU674ZIb!Hi@hh@uoWT%J_7_1"gXT/*5s`OC<D(T'%TqQn\72#&_$
%:Q/IKojqDe>VsS7@Bju[/r]kNGA^BSElV[Nms_>PX#)=,=22-cAUkOS`a:,=&o&L!0%]0><H3H0M]!?2[XsR5"Wqn`r&c'qi8`SR
%an=oa\`.,%pt/Bgcs6)q=+'A8DeQ<Kpb9FU\`.,m%F)V\ff(bbL(;9`1fo&E:;t6o0JU"r+9:91*dedg<K`mTPp2oMMju$.gp=e!
%DcG@-)D7E=q50<ZdiNYO-rXhq6HpnC5^f\4K>A6[>G(Z=Kn/nY>I&%U,_07cmh-^3cAmP6_jkMR*oK-7)kQ21@R@.agk$ke;J9j'
%OH]<&4MdnX`0T#P2-n>!!n$FoP#'X_pQC2`Xdi63oW@-/GKNd>ea6p6TirV(^0'jc]0XGb?E661Gi"TF\&!]OEQVKArgS:3KPtd%
%G:)[-+V`uW,in)T^m9l\9smH]BG7"c4QX[*(\%k$lC\pWa.c=7ZDrs)THdg.oVO%W:+Q#a[3W'3k^(K?A\:DX@+,NpRWIZ_?-L:R
%0?mO*ZCrd,O]Vb^l_WH*/Vhg7r04!`j@1$7kQFROYpA<HiU!pR!2bn;[j[ZDV%'Eg1d<K>*@Z"kX&ThEd+&nbTs3Zl3S-0aMkOSM
%IcBH.nghnG/R*e+l3Te[B*NjM@],mSad]$"$jhp@$W3+8f8&=,R,/0[Yi>q=difQlCLNUo$\s+/I8Bp/!5C2]?s%-:$;X;YVfc_8
%g+N-/E\lk\MY&XK:-n$,1UVih`a)Phh@<2TLOL\^P3]\ZXciQ/Rn2XiR.$#8RO"FInj1@*LQ*Q\q52WZ2$[gje"S#VlrS_c'VtL)
%!8`]:ZeKTU\TNcF@En+[E`O&a*:lhWP&0Gq01N7>PP">k2o+*qMHES?7Bo]<Zl\=]ZdNXDP.p9mMDESM.ClDp=<G1N&Z[3fXaV(#
%9c=Z]RqBHQL@]i#R>3^R09iP5>0P"GNS!h.,6Nd][I1i"Xk*bf`;A2N85FO#n_F`<U;2%tXU\c^fDTPpK"S4O/L)?DZ/REo]PPee
%HjZUBb/Wdu^#'OY7E>J5,V`!=b6D30AoP2s')R5-9K-QZ3bXfC`gj/Z-Y<?"O9uVuCFes-T^Hr8`d,td5+B"IbfJo\+.*.T57,IT
%F=+$7'sRVU[WQ(L0q20Ti3oa&Q$GAJ8]oVi3c;&PdBYF#i'a62D<8>VdrhbhnldEAe*:6-m)-[PFdNte"8W5PGHiF]>:Y(6ZAcu0
%A<.F:&t2O=-'=`6Ip(HilD8c-8[_Jk'Dbqo,D21:H4Sr_\hDaJ0.#])-f)Z18PSlN2la;kh3[]ATX(7<UR-B8'bs>2hpm,]/D.3H
%[@mrn$)m2`ojW4TA7$O%6_!^M<;*0DEHuUV8ge:e2H4F_C/1Btp*J-)'udX;&1dWU=0tjMgt9#`7k/-_l85J&8p@01Kh4BNK/OKR
%h7]rV`n+Z9C:0D7a]*J6fpVEf!(b4\S98JeF0+mX4(#af:+2[CARgT#Ccs@k^Z-2q$<[&,,[\Jpl$S$2.INC"lc"S-p)BK<N0A*%
%"Yhh(Vj=G6pN5TYGb,\E[QgHGG3._\*/VKpm_rX*22lEI0MT4IB8Q:U]?oi).)m1,6`WXJY3ejDHeFkYbVH>=9jQSDYh5+V@qBFj
%0o+atdj-mnHD.se$0g^9NggOk;nTYeZOa%t1[i9+40cD6o9jf3r6UjU@cj5KGpd4\M4&Qsk+.lb-YD4lR<RZTnkRu/D-d7_lnC0>
%Qkf.LOa%V#,hsjj53*3OZ[qgfMUU6*e@XV(KW_K7!P?=$*?bH!V-UhcAfGMalM9Rt*T-]IAOh"'K_#P&i^SQ0=2Za]iY?tT(N1$!
%+#9afcb'?IQdNS2pW^>QEu+VBKg'.C5Ii?;hIAC`6E_H*5o+e>(lblKH]QQ$LX@/SU"b-7Zbu"CZI$JocU+g+!U_mWTl347=Ns0N
%2B`c.Id`"BoI]MHVbpZh7dEPD6T^:a1CJWh1`C##=0L"*$bc9Qm32qOG8a2s64]9dcprNZG[@.WP5?T'%:5gt2QotP6J(;7pO2G?
%f4abkf=XQXkVV"s*;&*%1rquWEt8&:KDr\i#9j`b@6QNQlV2i5FgAMoN9u2b,FAZ\.1^]*4ecs1<SlE1;[7>/=s!9Q<hIDJnHbc=
%q$.YlLN%D/+aJ<BA(Th`dg9bm)ADM\A%5E'T/jZ;c?8W5>K,VuFP%;pA@\ra+4H-LGuXA<kVgV>oArE5&m"PXbn5*WMGk-sL$9W\
%b6H4@gE<D.]&L\6Hi+_$hj(cF.\=KBID2iN#4`SD>Z:=8Nj]#f\LnseIc^6I*0WFAnU8gB8)q;(#LD`6U.7'/5>)IjlgjT;a6s8U
%D.L5%\Z[3N`[HA4mHT4B<*$_kcZ*j/I.[=Gn!CCK\+Y:.Y'.S$"UVqLI8=5hhR\+4r6bC1jgZI]n_jB%O<S*%]QK<\O`-\Rpb!A[
%au=^oqKs0aMLN.VOrM+j?_X>:Y06bJ0E0\sf9_C3jB]AU?gSEUG;0'*M#I0R?$lF+b1KqSiT&;(Wd)n(EEsGYc=Jm0*mmnl[oknH
%6[uB6[<DZ>0Fq/m*Lfsm>s>CR"mdJJ6s5r:!pDS#BY%(ijE!QIk&%XgKVN?Jf%g+9:HkB>A7YBpG^UVHjBjhSjGXk9Ii(dhJ&*;Q
%<_FVO\ejEIVe,pD/-Z;$p]h!m<t1+nQ5G`$XGcIjm=^6/hi#U&oc`]7VVo%ub6&M;TU61IB&tc2`B9f:<SVKi`,4M@]$k2BgeO.S
%\+)1Q]LK`>'4?H?3+#u#F3ZigR7`J!5[.CPAZ)qTR/uYT[o'6\A8DXT5.t\]!0kB!=8]6#`M%1iI\fi"lC"n3f-?0Vb=BnI?QHAB
%gOVHXU;%u`h44G=FGK3`5=p(WFnt7s]oI9I3S%CaXa2]K]%+Vq@j8)"JRV<Sb=Bl#^UaYD)o#Q[iR_CQg9ls[F4?4PPE2>C?7ec<
%[d7VneX]SHX?LA>M-]2=RV_Y\>aR"un3,gB0q.k8[+'C3]/DUdH<?O2%H6HWkDr[IF6$Af@T+.qdb9S7h.HJ;V7?6oiRHKs?XFNY
%H?I,/Vd(d.[+a8L3NUDnDUWYb7HFLAmrMHWcc\7281ac*r8#>4n\<D!S8mNMM#86TT-No&/g<O?_CZfk,!Y,)c+%^K0&2Bn2rhd"
%\8ZL_rn15+akqXW=1MO*T!eZrle#p7<CClnc4iA0n<-+e/1.GqCAdQMK%)OGNNIWP*Pi<&%G?8K==ZVA7a=Y?4XQ=NOO!"MkH)ZH
%C1o\I&ZmLY*s%0kZ!"gMeIQL'KA?:,j'*T0%0.6Nd?'5Ma0u3K!,)VGQ3rM8D+G*n\>JhZk?Y^(8N/UR()C-3"cYF[:8+59O=j%-
%MSKGe(>mgQ["kV_?Ee5[_CUqYN"2qnPmYqg$qO&h55@XpC0_Y*,p/nKEus7:`:&s%'kp+Fnmt6"N"_Da+DljQ"g6'q;-*"rG)(W0
%H-SeX,6AVkY'dF*#UD#4##,&Qd$Vi#@/M=[m:$=_n(-e-ReYt(#u>H#Ulg]Ila*S<>mtPhD=2839HY&DlC[`T/1V?HAZ]#F[+*$G
%nkr?q(aZC:_VpRcjlRu-V4s#N4K%no-nlSA;R)=NH4\Xk0;%#J?sH`qU%6Xo9t$-Ka8D20NWutP=DlF;3#&KB=-7*93&LlBXrn<:
%7/bnM;hmNc4Mh*pCbrq_5ddsrK0mQY.jqC>[M5@qUT;N"Yq6b^$`((+Ji</@`tP&geJ"4bICRZe+OF7en8:]W:%`"WUOAh&IZ<Es
%(8=rNGHXOD;O!>OIE5%/_V1p[5(6l3ak4]WWtt-MJH\[u:TpLH;qAh.-/MZSS:BA*AgF/Y#!6%3?'SoZAA+s`3=+pjc7;18PG2gN
%]ZC@^MeV_':99.hp]gGI(ifm)"jsg\VNp9q7'Ys&fufWr3LSia-/7^iM\r#AQD;MnY<B'0RaaSk)G"'_W3*%V-u8=TRKgR);RUKg
%EEHA5-/s`.[^74tIe6I.=+4nSWgof=Z2t^W/nED0)Tqqbl=tO?WeRf'#o1`$J<-QI6>`bg=AH8^6)F!O2#aR#bo:=oe4]k:8JcX@
%YM7$nmZNSMY/E?31IlX7](=qHQT;Q3#C#=gc5bVbC;Cq&WSGp=#jr+bHNq;,G::9JZ_cNaH%^K:J!c2Ac*Z\0H>#e3/arX7N6ogf
%Y.&5V7!J!pH:s"lFr&njpPJ>5ajHYV+$OpkV^Z&?/XTTFZZp`>29aMAd2gN<:24.F(L2\9VTTFc4846nn^R;*GfTLmQZL:1D[l0F
%:#R*OLNhnMc3FXDe<7RdGc-F#_Dk*W:[?s[pq1?dVb(Skbj^XUh2IrRXlc(e7sHD^r.0b`&&sq):*5R;m3!O8RR/QrYHg''\BGmT
%ELfjMf^Z'S@rqt$rABAC;(iq@fZqE!GrW)j&?\@fa#1GlCo^/!.<VrFkNUDM7KA3kj3rm)Cdn'gr2^r_?-*rAC^`XM_\c"pW^@gn
%J`l,6S63(9aMWJ0N^]9d06P?[jXd*o!ZlVo/X+&_0`JFcT$<YJl#Lg8FG'aJCdj1&FkS+=r.Gq4Y4F@@L,6uk8kj;rQQiEA4#Xm[
%hf<_Td-HK`Ie*#^-`^0p4aZAnSaq2sd)[Zn(\3NUngm#[i05>Ar\[ELP,_u;jcsq_4Jge/@^u7d0*X:\67`2I-nOeEZ9O\pirD*o
%ohP>D9N!7Dnou=^fs7gnRTk'M#!uc=f:B[Ck@\q7<Mt3X9%:t9e@WF&%1+'.cc\7,6cU)22^#9<..2P>rBT/Z>qmdSehH:!("r*"
%L2q)OXr-YRdoY[nr5/$8j%c(Lag3KXipYcSH$/rUp"AG$rqL-P<)*tqn2DG=o]7%kY*ImmIJtl!ql:h<.t>@T++<_UbGu_NMrX,I
%DdP0sH?+<%j77Ndeb.,IocNVuj[+Fnr8deR/?A4uYKou:d_FnpI_,$,2`F6bDfCI+FT'ppjmt:JGN9WhgF_HDj5Q%\,N&%So95Y*
%Dtr);]@5AI^QrNFI9gaB@JoCGs6t>Vs'OZShjiebZ@)Q6*u7B#V0Not*Vu@[o:bT_D%^[L3K3WMAGCA-(&sErpD^HL]l2d!rI4G4
%55uM7gcXT>,@?Hk-LZtQaL?<ik:tl,H-3jLX[D%Ac[C0!IAT^d^WVN1gRDQrQZ#+fkgTQYH1f?,rrrr2amo2Kkt`j0b2<'ljq!AG
%^W_EQ1tnk"B3"s&Z<mClF7h*^q<U3s2;\<0ouYnK67rl?+%1D?21OD/gUB+dl0Yr#T=d<K*PUh(o&[KiRr-bimCW/cl]^Y(D=="c
%WN5L#IA",k#.K(;]TCb(ZD3ViXRJE=iQN)k9E0IH@=BakrS-#M3IgGkkju!\^V.1lqFO.e\@^mS]"7]LH$YbKqFg`Eb*KU5jGUAB
%#.>':r$>.4DjITt%Dr@S\>sJ=%d2a/Zc+<gJbbG!.<#(\njg(jWXB/sDjL26H0Y=pWr,UEV]Np*q!Io0?S((c042Hll>h7WJ+rCZ
%f4VH+Ud<EN3\Bq/Hp]F>7k_-Uj>tU/ZI,!J4kR&J)1d.>D)_I`h<3Oe[IEnpgG*BR'!o"2(&7EZgp`n-o'H6an6u7C;1IW4o?,#8
%]R=jMnuM\29E0rT>WSmDlWRZc\+Sl8?!6S:5Pqbj-e2\=Hrek8nTfTC*Gaih\bR\Hd#T(>lD@%k#<gj,Ac'O*h@a*f[l3@).rWUq
%FDYb))/bnGPoh34NPH@pZ:Vc<==[2&%6rW+-hC35ID6Z1H*eYm=ap&/e_B0pbd#dc$;u>0hegu&UBgGVnFdG"AX6\nT3\\#j?e!g
%aKJp`^%m9j/sjb2?/E6)`sOf)S\Y2aGCi7<C@UJq<Kq]][[B#M_eOAU^P)$-B_D\Z>$+qBV>\r2nFsE85Q/7-r9EB:R@JM@5;hnr
%&;Eh4"lX9?)k=&+g`W6bC^URb4I(QUXl$G=R??Wgn`UY(rh5j%%qf4eamFRS>OWb*3'Hm6IpgJ"&ViF)o;@'j:Z(,@jHk84#+rrJ
%+&@?q]))CZhsR\[j22j9mP-<No5O5hgc,hX@dW4k>NX!KW\rK,l2G1sm/D(rk.R)TDcFRqXs6akdNH%'lpqBH?%X]5fQP[H7r=Ii
%LRiiV_"e7!nN56$s)rkjmc*U("HM<WkPtMKA:Klqm%^,"[+cU1XU0_'fqu$Rdo57gPMuk#oU_/C;(RU,D`tbF3$6pgQgFZVZ71@,
%'br_@E3hS-A\K&CZZdtZl1.M)c(iLuhj4_ZM8#HbYeMt_^R4;<S[J7ZIQ^(@N4!);^]*(;7T"6*:#7j$SGMFSmXq:EpQK.]`SNrm
%\FA/-p4M]JDe:*aDtWu)/_be?/WS07/JhbH@8lNncfYBOhg>]m2IkL's/8\0nt?LQj%%4hI&qr&Tl"%l)ba%s#LhsGL5.h%mBArE
%MZ5nfhq?gJNhh"dcT1S=,g0?!9S+NT3\!4(3CcM2[ZVB:Vu+C1mC*-f;9ll2ZaY/(cImYJ/qF:^$;VBDPX,IA_QbZ<Upj/;GkI;K
%NA)BcjHku#rX%Wn]pRf#[TNPQCiQ94i[(CR"jHK-9XZT$dPR47FpQ8'hA?*os$QQ)4h@_T2)"S``lnu%KYanWKdE<Vp^e9q5>(f%
%5FdDu+2SWO8W&dd_D`#^5>8:&(d-a\Cj^4=^&[J_1m$#poiJHZ0*9H!NEgRj-->(+VI:?kG[Vlq(Z8tZr.RE742pIAO<M%2-Ugl3
%P6A`#pKEl4K.%#gIq@Tr,7D<&s'_Ykh]`AVX$V[cL6[7c]]=R[_N2RN)k\"&c,![F+?XMJ]$4);W5JG9/3MHp0_G2*IJ$ALpE-Qk
%oZK7T^cDqEej/uVEpZK_(>AN7foCs7l<mHMKcHBWaNS:8_H2]bk(jD3^E`Km^\HtVNliG`CA+CY(f^I;s3M4)^/$]Q).1T2>Y0<"
%8$,NEdufi/,oFL\VG#hkiCO8`gPDI^$!L\9Rn\:fUjbQ9M8(e/G<4;sZWF9;K9hP^)BJuci;iifef(pAr)OdpG?p+nCB2,P,=Z6?
%U%Xk<#hfYt)Nmn`V.$?22PKjA`M[Ht:^eC"V<aPf4b`@@_@JuDj>.4W^.#;_,@-/6![`S6[RotYaof0*2:JlURqn<+8[$gmLlI/Y
%\3NV6aWh'Yn_4oj(Qgli"l0K6Po>EBVMtVMhm%\hCp"'\3jrR4+-l"dm=L+?cQ/I%<pVn+/"#RGLHsU!o8KpanSpifG@4m;VWpd+
%2BKoS"9s>>QUI4JqGES=7h]7?[UpDN8QtlrA6c:<"MS?73ck*Sg%_^,PIMhgdfMQ!4*,@i38sLuj,GCA5I;ZF#>:GeV`VehR:u@[
%&h;mRd$[/e=i<L>[,^pRDqgnEE*1UqbrAe`']8XrdSA_)Z,:tj_shdWo[Zg[@cU\el6%;kb5.&!<Z1\l0.f&iJSXptHI<-L\<N:c
%TVnTd'.F,WU>RR'[.4Ai0I(_4%daE^P?q2]8<'E^.#Z&F^VMI0=K^#g3.@qX'OF,uqkDcs\.`ni'-=<C"O+.\RN(UF6Pmmu1i1oW
%G\&:LZ"X9G5->mkd6JI.,;i=r#`nI*g,<C/G*r8p"q,"aeid/ZYYNXUp#X&d89I(%0\A`91^>`CB7r';o)7VplEKNOO_OD$l).7b
%kBLb:,#rK)*TDdFio?&8(1E`&&0iKBQ0jb.4$lQW*^NXB2'@Q@6drkYMh5NO,PHc7=#LkK3-;LVY\]L,ct8aI(=j[40fak!m&rW:
%#sI%M:>;B]R<R:K'45"!EXEcMO]fOoWS"hd'p_V<BWWDR5\kt<5XlBF^EQ)"jZ#@]cQs5+RikOQ'DBM%@YTgmN3=!$C+]EK(JJeT
%[C0_3.me=Bcj.IqfP9@aGGRB5TmZ1hn6Q8:VgLRCg*;T`0Rl`%0juM0g:VH6,Aj`ha2'EO#"Ee@9A<^h[<j(O!_esQOs,2pM^)Bs
%^ntM3/t9F+2gM!GN=e?9]s&[Qn-reSYb2uM@h'I`gLAC@qJZ$9r.[WZ,Ku9s'`+u;:mU;7G']1W<m$aJl/=#f0_0-'M6opu&Rq9n
%3b60GfMu+:!tn;L:=p,1S1%#mgD=($EV:9+?IQ8t;IUBHW??U7[h,glFJT!h+9krr+@-@iSF6N\0fOl+h#fTk)srA@<mjh"T1uL^
%QBj9sH14up/]7uIU#$s/7U5]Rif$I8V%_jgA1k[[^h-",4#Tr$9sTk3r=>()[Ku=;\c?,k,>!qc[am2SRnY!=-AmbUD>NtN--.Gk
%+)JAN\,a[Xq`RSOG*BS).n1OP_3JYnZ7R!2"[O8a",emJo6oe5q&WbPSh]Cs^+3_G/^KZ/hqb/2glf;C"H0jd<(I;AF(mWjhs;B+
%/g5`V7"GeG,j,Lt/LuN3bqO3jP0KYQc3SLE6WPn%7kD*61.X?h7DH*XS5:QiO2`7O+eS'rf^tHS@$@]S-6?B%WI7dqB9@l&(F"gT
%6br\r1W]++A)64(Q"m,AM.?Ur6E%t]qRc/ZHt]V9UL=Z7[=u\1YLn<(IbWhNk1nK/\sX*dr\)5Glk7^AKfffP%T3E(+8IAM#f7Sh
%bQ8m3q<@L[++-_<RjV#^6EXL<[RJn'/a.p_TeP0h3%hp\4[OE0rLXV6d-Wo.)k<&0`KEU"V;Sk<+<bcMU6_UA^#?e_T%D^-\m%VW
%JDaUb/=ECM$,6QhL1$0S!/2+(+p$\r*W.kY=Rf`T1F$Z8+Pl*+/AVR9_$:'m1:q4LEc42;I1%f='WJm_,Q.[b6<F6;MiG=0==0Lk
%YZq<,AFSKd@rSNYm`(>0Gl^/mN&X+OQ"9=u*0\&2i:j5'Koth*,6IpT-cp=rYTU5Ippt=]iIMsGk=^_APD;VS$NH.G'A)s!#(]K(
%[/Z>A%s&AT5GP\0!bZ@HR"D%a7M-=W4(Zct$t2d=1@th<6C[0.ruZo)"=3IGVYKUnVnl(@^]U+-Pi+Md4"82TgiE$ROq?P0/b10M
%2L)ST!1)7Li>nH9l)&CP"#m7KjTO#+Hp9)In-!5MG,,,.a?a=M69&m-a5H%nA!)fo3RZLR'0JmJZ9(>^kE!<QBWof*N2=*L.#7Te
%?HbXk^WpNj[bpse'T_ooI(Ri%%te7krs.kSHbI_.OhGLh7R*ns#&&HucPr-!IFoY8)eJlG3:*D?T043:\jU3IJ)_</I2`!ROZ1$(
%%hDZu]lJPhh0\;V1qm(TAp:[^LAonZCiN:IfD#(DIWOCKDNkEnqg/R=9(eCO=!G!NC,Obm@'M[.oGT#XK`<C4-/_Ab^U9QGBTu?*
%EkTl%oW%:;mhtc4`d\2f<t*AL\,-]N'RTeD:k`r"m4UoPU?T\m7K8R+=Bjn%@5-]M>kh*(<P-__re*qh:AL_iq%9+oV@.m3"dU(o
%$;B+MaWa#_:90!L>0RQn)K,OU$H8WMMYT,.I`@6L^1-\(RdlT4rr4SVJ(uG's716;J8P<-!fuXu&,UuSlYg21riIBUgb7[?)u<CX
%_k0TeItumrK`5l\q9Mt#IdPb%JUIJ.YiL4[?1WQihO?D,`k`D):R>@jl;t!7^[Zd%^P2V%L7;#JqsF7ZoeW$8S#ctC[kKHf^KoH0
%5?cZWJ"(T>0?GX2gL^?;W6g7Tn!BnUr]QS1QPt:`Y#8m48-8t^_d3EHgE/$;rBl&R:dN\'Znq'6X(e[6qg4tCE-?_hH*jT(@Kk]@
%?SEAd:JW<<d5dC4a]tc%5CTqGXYbd7a@WesBb#9n;UA9UgGC-@;?kLsYY023#M""*(HLb\nWJ>LoJ<&c<UFWVZ=!"N,:CJ0T\=2Z
%:)-QuEV(KA1%r]IE6oU8^3dr.8&)=uDM!5Sp=$8@</hl?]#1\S3?S0.)(Tj1fRNGS&fBbKZ/Wglr_V]OZ_pC2Zc-Oo=&%cqO\3*F
%Gh]CYm0lIROP5_jL4`7*8=t7WENIQk<HsX8Dc#^5H^+jFh<@APa:fWs;.E,K_Yq-PM"H;c_mfUDJYo9+k^>OFn8uoN)nrSnfO3&V
%[enl)W(HeDkbV.5oLE-ns)`u5n`;e%ddE?,3ZpIZ]hYfthbGo5S5?t,Ug*2;JG1"b@C$f6]2-FaJ9Vh7<TpPWBpQ5WK3FJIoR<c/
%$IsV8,.U<U:b4JmNIgQ:nIX4Xk3C-3VV(mEfKUB.In>0g[9Y=Vd#Bip:,g_((,Nj7Dku';<i);9C8K;ASeoGu)Z'"-JRA3<i#P+Q
%btb7j4K3LZc2JOr6;O?Y$U8H_poSB:g61K)&JlD>X8Z"6I_['N;@<m@Ca8p_7\iiQec!fnpl.3pXZ!YG"(9nB*e&!>qt0R%Shk&l
%f-qN*BYh\lLKbHHE5\GuPA/_W,@Q8,j@a5L5AW7V/N^00OBM)?#>ud6b:L(,N<jL"f`.W'8,O3SjLiqh;`pS%H-)^ImrsAU>'/P-
%RuUlCh'u^``*]Ni^`CVsC[danU^<BHai!:iOmJ$Lp=Z<dIJN@0;XJVs4<Q>KTqCNT5LC_Q\G-F?#KdC*=DX>]@Bqi<PadXbr;^E8
%qCf'g:TtG'aq*iZDup&I/b-%:i-)$pi7Rn$TCc:&jc@Qiht6TEC`B87/*@tT+f2<dG4m.>Bo30UKMDL/Ej8otIe-3.a\V;t<'^3M
%'\ScGY&\>01Qjg\rSrP#@m:ju%m/qC7ad_\\:Y[4K-t.j33Gg97T"e9W'MZ/q`UaK@D7CL@tkqhI],-nFNbpHT=-8/C$NdCZo]N&
%O#5Sg;lP0romWgi]#2#"&lsBba1DOaD5%dS1R?<hNRFH!&U4!.6GF1Xs$\e<UPNLG\Pl+b)M;'&'n9I\!mq@amln-c&g]A"SQ[V]
%_3'dN5&K1,p0RUag7'0XB>"+M^C%hLjt=$/+$W^/s8!4d^M="r*T4PuI_Na,.,XU[i;MTn`g<HAWk6gfO8j3T^!Q][^F`b<qeWj/
%C(1=j*0:,-D1d@MT<f7Q<iOaKQN(5E)3&gAo@<'d?7""`4XGRQU,-TfC['D3^#-S=eh;6:jkkMB@/UIqj.=E\r`?^jNTeF!!n:n2
%3aa&68i9KGU,Q%4Z3Hk]/;UJJQ?7NSAXAZs^[]g&K7lHo8uIH)jkH*WDD+:(s/SW6?6]$rd9eN8fOn.S9m;0U/TGpiQ]91Z2DcL`
%m+227"*#*M0`)++WemPi?V)()Vr",6i-hLEUiX9%rhr[9L)XRh+3a.7_c1C^&s[(<=6kOpdW\UdbKn3N)%YmD.3kH&66..$]@9*$
%ogKg+84^`?r*`djHospOP->]!E):4HiL6ID[LHEF_:FTNgJ#-P"21<84-l?8f_Rq87LKXd)q"LaA?,:6Od0kP)i0!MfF8eMY8_q%
%R:&85eL,YRi&@C\+-ubA_jk\8rh/L3R<6!nqbfM\\Sg"?K6UaHgoYt]Bt&\gdgYmf</a6uWhh#A[p%MS5aYmf6dRR]FdgQ)@B0t=
%r-V0RS'gS7@6F&)Pt:/K8@Ac9m<p`"$:nj)-ukjR>*?lJ'l&KrblbYO9Bd9Wpr*/[$TZ?odgba3XYKba_0i.NIIn$PWZ1fiMmO+G
%eCtkjX)CpBDjmDV2VMM0I]1#%lSm^Nc1^[bj*!&-[oVRa8=6$k)Eo2H#+phd15I#re>r6<ith!>G/\X:'3`n4^/HOHK("2C#e9!#
%?2h"O\:OO5huDtnS`q=WqnHSLINX^/KTC'J#cZ<DPCXL?DIrTKMfS!m(B*N"*:,H\^>U-?!Y'D'd/)C5A(u=7;XIK!l*4r3#[?p[
%=FK88@0P]5)]J@DB"`D^,,HqVCARR"<;BBY%HBXnSUK:TPE+NWD)T+[Ra;+WHc>Nn`2@4C7:J5[a@_OK`[jEuD]K-1+cXh-p/'aW
%4BmEZKTFP-iH,*u*.F>0i7;82CVEN+I>R0W9g;k^?$(Z^ZoIj7A77R75CN4db<C7QR="mILOQQ*l_aWI7Mk'@p<+7-'408!o>H/<
%4NDGef]eX/+W:h`_bX%tE3I!uH!.!bb2%nOmd>m:7O3?cO`'r`RQA]0DnAa[2RYrUJs_EbUUd(B[$,rp?ELD8fqlS<D^Ab\lE-mY
%C\tA"CZQZWm9LRVBm].k\U9baG`DY#mI0K%eZbX;hV@Grrql03khKZ+)P*LgLdl$$-D4SpfukE855H?0',AXGn[8`G-@>N#+f4Uu
%RdabN)#fqB2q,n6-I6A:NX_N>q;(?VI$g=q5BDnIm2c+GL&ObMm`Gb5H,tsQfB$TAZV5kGggdAm+(cn)o@9(PoN[#EF)1P`!J]9t
%8Yd-[O*PP!EO%UtEaZ_]K`c]bQYH("9DBl/e]B.5(AmT0dA1^PR;21*s#e1`(NYZ'YI""t#lf-E>1?2.qNG"@_;(j8)E#TKC3OI.
%bA5e5k=Pnf,/9QeV@qJ:`k7RC>!,Cl?Md[s>^B]V^M!"UV9.hgCi*d"._@dLmYP_t:CFb3*JgV&dCRD:>PfU+H*_<LSsq+Bs$#80
%lm8L`BfsMSimkHX72OEGp""HEh\15SruZ)7DW+_mDrLW;2%r@7:A03"YmKK6r.0\!37)kWWAD0\5_!MCN@1$3M[gieS*cEeKG=ef
%qY50M[;HKfk%=JTqBU2]fpGOtQ=;bsBK#DQH6:J9^T?Oo4.#Q.l!*tNIT`g),[[_nl&\;m\iiH,_k'4HW(at=VHTOg@=C)KI442p
%q)m,.gKKX#p@lellUG$rF*m]bBh])\^]2%?ZEkL0Y7GqOF/cjZS2sqH[PNo@$=<I'XkWM:[bBV8\a*E_SQn@'ITbC,`GO/:1!e_#
%B7FL)^NGno)%4@3mT$=mqtV4-07(Ytg$QrU%!7hR-C\&IktIA,>3a_@<3NrO`a?A?<0W7"*>j.,P<'^Rlg]'le2C6;D_[j-b`l#n
%@U^Nc>J.ALl2CSR[i;AloQLr1hkRG:F"nR8N#8+aCct:`faAaP\!Mq@2g,Bbdg<]rF7XShdCFnQfBE.<2c%<9]*h??p<MOR?a9NF
%a#/=4(Q6O_Z9S*Ei`D$djO*5U`:Vl+1q&K/Le`hP.6=:jMl5/:*Ro\/ARdMW]@"9JcK.e_dJ;U`6o9?TOcD&ahk*CTDfa7P6tpWn
%](FKSM]/^mj/CX4eYj3%9Lc/CR>a2UX#j1h&A*uQo:ZtCPP\D1bM-7Kjg40!FJV[GGog7\^/35Mops"a`qe=e1taeIdId!W2O_15
%4[aA?]uasekVX76Rd/a![h$*UkjIFa(#:B84[]f=icEMBBt56I/u9K6e*VQFH=gER7F-b8'@G"K68!T_YZAeQDD0=8o_u@G)gs7s
%$dmDua_A,&fq")Q.dMH/HD``Y^.]JMdFRm=CUA/MfSmP104(E+"gKosh(B0b@bp\U`,n$u4Y^0U4I_.>2N3L3rm]t]Z!Ub(Yg!%]
%$o?j)0CMTE#;`\"/'I>7M=m:rl9qq%ofA57T:A[;ms"/UmCVcJ`89n4iP]/9hjufA*k*NB#3U\s.g%iD9f4:F*_rI@';ZHQ?!Gtt
%'9+g3TG?eL9luHOD&d.AF!bB1VnL4)[(T=tbr&*0Z,KYP'f2sB2s*e<nX/&\p1(.a/%&LMjS:j&4kMcRD4MU@f\XTj>3tJHfT$]<
%f+qjtZ+6:TS_'Eg'p"6c=S:pc'mg_.cS/%oI?LSMqU;FAabdopg>pIEk%QT"^KI0c<d()_S`j3ld^spPSQt(>7OKupF(TI98hEg+
%a"Nt)PD0"ij@*O'F7OM=r+NCG*4qW?mI/UR?QT*^amNOm0bmt3Y/)eje!C;d;t8hjm?DlmCer/=.R(7d0YKZ82JT-gS+Yh<eGemi
%gsi;q,c@dl#+&9_c'R%]b&]pF4[2%M9m(75eo\8s[&7PC.`^"pkuN#^<YI"4b=C^>FL%$tKjgi;jn\?:roHe"\hLh%2LU"d=dgr]
%%=@rNlJ,(BZPSJ_iSrY3b]NkoEFuJeF?*j'h^)l8N`U+2d^pNHB)D))137QL^+j]VR-i2S&*s*K20fq/C$fb%bR@g@)e][nf%6Y&
%M4/WK.m:F*]CtS$Aomd5bLq<JOgBc8l1F?0D6Z3-g$.qL2UdDN*Mdm,k%<&lo%[+iIPdtrp=ACbme_jOc.?c]mO7U'RCh7r>g,?S
%U:YK+o`>UZpY'_[q5N^rHp095':Y>4g"6%Z/c0+.bF5NX+&@*<o2hLJrB((Xg\I2Uh9Gkjo5GA8RsV`)$b,^=?eLkr`NtUp/Ujpc
%D8n7&0736K7"6]c]^I3,K8C6F_^s"q`6o#;^O<>j]%FPraS#.aKu7pq[W$A5A1a#fXkZ7DoQ%2rd4W'_/l&Oh(Y/(cC,'l#HEk!7
%XE><)SQfn"nb-FAnKi0Q?Q;78)i8h9Aj7H:9?fl1hSin9]B?L:M=\F2a[C.CCb*ogBfDA*G-'5j`KQM6P$<c'9:=birR0Zq^fn<5
%gUUYmEHILQO7#Z\ltgFeYg-]2`eIF9)`r\IQuW+i]eE(!Q=I:1?up(0Fq9<^c%EPQF7"(PDJg8MIIjP8KNU&d*OEG%F=sFs)^ur]
%B&[:5PA?'3bl*g:S53sY9(c/?f=fgq24$IC>LK*iZnfqeR<>=R44]r]RC&R[Sm6X%im<3am%lupDQg1BBm]"m5%.gD:CcaVeR[S*
%>EaI_r\?]W]F-UUCh>G$cIpY)S5WaA17ZsMGpVY:di6^m+1GcE]lY_3-`7K\e=:Bu=79m-c/75QH#o65HFV5sh+Mn)/m_MRf9o_=
%$9F[T_[C[2CTHdhB%",7]tSOF2Kk;1?L0?p4Ajoto$Z"M?10aS?hGJ@PG%a>lGE+>j6Cl73Bn)Zo<kj6Hr[:mQQ(Xd/.Aj?\_HJP
%fU:"^8iAc[?R]OSp/WXZ4#8C>U2dGQbf61'AELG-H;lP9Y85sK\^f<cp#Fcc``6VfID.JGG#59,f,i3bGLsDfNjZU*\_C=qbEhSI
%%sI-Ff,q0i;$>I^NUHGYiaV%]A,W'E[rL'V45)+F(U>!nDUD*0*H!JU;p(P#T$C)"PEj]l2\j$@HV%AZRmnl/\U$kR4C-H7cSNOd
%H=lj33UIgt>NstHd7`Ap2e2)iY8i=+15UX//!CTml^?5<?mel'D4YAf08Ggo3]uV=G7G:Cm+k)nQ0gd'TB;H:f,M9-4$T&n]8`\.
%NVV.*IcfY#T3ka$Hhi<Zb?;Q$39Y9MQflpXSON:%F*m<TLY9>0.dq;i`ohYPL:<Z*ar^4^[P$mVorZemo4`QFYe.W?R[\Z\5.`7V
%[\(7XhTjnQ*:0b.A+?,=6N(f"IU6=;SNXXMn#fsRTC8@NM]N_]`aE`9m9T+]4UA]R]6?<"Rbt0<h`UARRF1X)ogV!K?T;hWrTEfF
%oH:<.l3Ac+]/dB?@L!.?e_BG!@R%VJR(YGsiQ];[iUA`!134`+`RrT3`pN9Z@;nFjNo&<@a)8UIEI?up:;JX)[CD_gR9_j/:,]1d
%F`Qn&D4IsCc?;sLWmbUYRnG-*e,.%nDBV&\)_\^TNRbnno'BfDBi$=Nc'QadBBboAjg4:%jRHBVYjui&gom./qt9X\o@e<Sq-kt)
%C;V_AWMeJ'`O.cbERChhk:YlIh=K`:I!4WBl".VW'n;`Q=4t3ldad05E3H%U7dYN4^:/)f=BOur[rQP:2eK0VJ$WoRh;;3"9C''.
%CZXbsAu]j!HX#d<haQuHdkK#%b/&,_md0^jn#fT&WdD?+A+tc+le6bSc(@-EcH^G@gU!c'-stQcO)t$gn1iBM?QSZS#3Fk*G3QHF
%OZ^B,?71e/Mo4qWj3l)ld8B/@Edh!Qc'M2Jm_Rg$L+/bgc'r`dGIpt>$W#*6j0I(5[*EUPWqMJ3<0,V5e(&&BjeQL*]p<Gh(RN%n
%9.aj@=i/mA3]rs^G^AUuU35e3]i%'uC7WtG0>1]0^7AJB*1nh?1ti1]#Y^lP;0i'7oJYQPmQPKk]m/#Nb0,&gV-a#Eh-tF_GO.5k
%L1[hNES4N6-!*lHXa?2fC!Y"L1[WtVH.sr))/GcHPo+Ud[]GB^]sPN-'uj[`HZ],Rf^6VP4#"mZqmc(,?>LE*H;Q1im3NEikIlXr
%[Fq1AWd4VgI2#/#&D:ZpQM57AjL"\TFar$`1qLqHl:iTL8;!G@Mqs:PFHZ#+J,Q&20DL"2o*]sE:i)KaS_d4V]V+:ZgXC2Jq1HDm
%`BjIo:3<7[oa07HY$GdH(a2X2r`*eV<I;.=LD_H%bEh%^H"M!aSikOCFF'(rgEV2q*qE/t"h4%NRt!C<'\aATR]eLDQiOt26+u:0
%rS#oT0+[k&q;Y8Ecms:OhmK6d:m#(1<:fV$"K606f^ja(]Wam&X!;JrD8+XE>Z=AZNU!]rqP[5op8a<bY8S;.WtBa_(?nm*G\+W3
%q6aOG8,>Z=Vb"'5_;1XAK*T)fUd`6dI`Xf!#3,j:Z&-P)T/q^Vqu#5Oa1lbOO_tgRmBe+g8qYusJCEFOTC>RmNAa!;#mo$H"9o>s
%BZ'ZkK+<'(Y!s=/>?-V=Mu;@K=;MBme81A[TY*K?f5\[^m4;6qN&p!]olqTL6^W"o2O[I;*uVLon;XB':F+SZ$L#%UCNR<AHQ(YU
%PL*I`=8SQ93Ff9d5M5LilI.qgXoEVal0ugPpWX(Q(Aml$O,?``mBJF<:R`,GNE1;D+.jAEXnOpE::]6I[&R9](;:7TXt]C`K8Dfn
%Du-I4o:6&d3c5J8:I4#`e,ajlWr+!tN'>\u8U$10+]I`JOa&*1LTs'+&..r;`.`%jCJC'T^O3AFO_l""]A%#r(+iKP3r\'`DKpQ2
%-HnT"Pr)K_Cfc.DNERRJ\plKs+4gAhJ^_9I4pEn1S0U<9X6fYNI@8Jcc<L9rqVYthptHU:qj$+(1%Em'LE%,?0*cp3g$d+6^G.pV
%eROp^I^7#_']a%&n4`pG^*;d]lhdY*#ZaHaiHDgAlM-[I?WoFl1-s)`(u=0IYa?hXnl1m9#NGubr7;E@(td84:1jOA-)j+B1W'k&
%o.:ipU[e#[N/RPE:&/:h$N!Hm7n`eK49'h/lUrdY^o"$P]hYOdfIQr%rNalE];m)^R3#o)a(tPb#P)8Vcs<[oXD8KI<ub0IojOoN
%/iK._J[02@36jt(%fQ&1'JLpBh37_'Eq1!iI&co@;b;TLn#C@lS_`P7KS+F$K+h5$+0slnQ2@!Zpt24u67D-p(:F\k>jD4(#V>Vd
%R&U"0*;prVhnkE3P</?FYj`iAo(@db`TTQ-^1?u0#m/DE*,aLMLXS3PeVgi'Q/^oBN\u6pQqm?5>P7*UG'#)R?'q2)1l@.hUcdDS
%ak1Y)Cib$^hH8XHS_6g4L1QXrM1'Tj[-a5hoWulsVZgQc\T4=0:Tc<lqoSi?=FstE.so[8heHecIbHj>9<R"!dnF7g]pqeBAtIk=
%[9'nj!ED$B[B-Mi#MJ:P[!fWtOD8q3qPil25s;q7A&E]FT"ITY2eOaNQu(%".=Kk'V"/9cr:oD4<QHH259Dc<DYYoqqNATd0)$$]
%G]mM1R%N39e6j-Q=8idi,?qdl:j?#d\QheZ#FW072TIfJ31VXjH`tQANL:1B#U\BRgcsV=i7%<KSp*ZQMsg1Il?"c3k"/en.mk/n
%H_-4`F(ONZ2H.(,<`W-teoX$&YjdGRSS.alFZ@-b^([QNPfq#^r7$PcC3t(Eg,,+QWn3Vc>]/?c<79$jNL@alr-"I]4.Ui>"jA8o
%G3X<;/m$?eP,WVMVA3Im?Wg:/gU5&RU$K!%FBQoWoZr)0C8S!`/>KN+a=J'7PKj'6fu8Y[\uC]n]S<K#WFTUf20P*dn/OP@c#2F[
%fXf4Imc1A2Q()>^MVV.Elg6-'d^ks0iO7O_$[LMs<ir9,k2`6Pd.>DO@G\usZV/9fl$P=:h8<YHIW8/s:_O\c-r"O4oLF9l^T'N#
%?K?:?I:aYsaM!E\Ymh=nBuJWTEsj2(n[,/T\l`0BWB;9Xdr#@GLAh\3N^!rZ9()m]\/S/YS6\4m<`PW&:,JMi+Eleu\1OoGF#d7A
%50(";V;9a.YrFP-QDLqJeZJ2UHE'dp%oPo]jo&.E===5"Fa"RQLFUodbK#TN^a0cQ0kn=N)>3,M'>5uIe#kabg1d]V/;8P2F7JqU
%ap%5Hp'ek"*mFD)g:l@a-[WQ'RD$7_YsH"_3fT_a*LpJmV`Wc6>AfHS4j85E<P5lp'cq51f7pX-Csu&s43fVZZY;8+UNK`),Zb>*
%M,[nr0RV3k2nKr:]taH2]dV=5DT.'!1fA6p2*CE/q:Y$#>c',LY&bn!FZs$sobNMOdFq2H'BVj$NkN]e_i@;D\%;@%8!Vn)A@J12
%;-O(X<VQ-n[@94i:[dI&[2mjQG>"3KVUE%"9DZIgCo3\Bm:+SU*:0e5Vmd#<[5X;b8dP="HC3N9RB",+a/`/V@FUSr3q)8/[Tsb7
%/IXPL'.(t_YLj(uGd=X2n'j+PIRB:_>eE'0F0Y,7dCNAYbL8&il'"+AZMjRPcLm2^lI.?;1^h$gg7-t>4B,L`e&S$G;IaQ%cQ1MI
%[UcDBhg%hc(Uf7tS9oVi_lUk;ghjihDJl.h+S+!%q%>T7kiKr?YLEIVUaXJ3S*B1,R6@d>CGVrRAp6Gom^Tb1VJsOU-h[:'CA7##
%NQ4d=Ms`NK8/B_I@:nu9@#hdZq<;]I202"E&l/#nLUh)h('4]M>m8c!8oMH:70":>N-V#Aj7D202`nR(6?s"WH$fWBIQ89Q?]u7R
%X%R+E`t_ia'UofB]=V:*q:1uk8)Ma0T'"e_^9F6"8iLsQ"Ramd85YYad?qD,kG9JI['bBmQL<'seoZ!h-fucE1Zi:]08Z=P6.4"8
%UKUjX0Ge=W)Z^BY'ZM6SVF8<ddqBm\oHaAa:\Vd^I_/(1#:!c@QKG>JX,D8b/7q\r_f[nn9ifY.@sb"^K<`kWl<r*R%tatEpQ5l]
%^E,MB6;;D[7l2T^"Khqi9(?G2V7^E1(,Dh=Zk_kC1^s'IQ:j4%O%,s1IAUG>VrJ2^LK<nK>0+^>S(nina,Fh!XW.R>3$jjp_lSSo
%1YT\<0DG4]S+1)<@$imB_%.^(7\/!pLfNIT=eg,!rhQ]KTf5K*^n^P,%:0!)n@mZnShtj&f#=DErm[,)Tm6K#2R)^XYca,$]Tla8
%RSWae`bQk0ni=!6=uA3%r.qOp<#12pfXUWeV#aeda8=L+T2'"j/:ID-<.AgU$5eqqZ)q:R#qn/*Au%UeR?_0;7tDOd;:V_h'/-?B
%T<^O8M(aR;\;hb`]F6i.s2Z,,iW:/!A&:c`U7&G.N'O^3Ofg]g8=t,7K!d(RSu@3#J$u^/oMY)+8aU4.!9\7oNW2Nac?J%=UhRPN
%RD[P:"0fb4Pp+($4J#a$57@njaVEha)UFs]DY_"`EAE2%6:g'P(_pqD!f_1%K,X7%nPJ^eH4\HiVWA4o_RZ.3__&9:]pDMt09\I3
%-&aK+:>l9`j*#SSQ!7Llg"G2@=$&N<qOs?=BqLun:']OU>^UI(G5U*,53YdarKuVUDA8]4#hq:lf@44UI72.GUTW/bD]h_BF>gka
%&->]Zjg1/8]%oBgme#W`5O'BQCu&s+Ft\jf6gM:R9tbB:&$%jQ$27sK>kr4\#V?ZrLDF7;'a-PpciSPmlKk[bS#m_*:R;ti2ZTgu
%Y8IQ)QC,2X3a2A:<.\PqdF(Q^EH)tS?`">)g#n9K9]K8.XjgNQ:B5h+9jl0@UJ`J)%aJs3"Ih6b4`0&8\jCu!^&;RI*caG8*3<eF
%(?[T#KO\fr&HLVF9VrlGat,F$f9Z)YNO*@N<-\N/:ZP$n1>9,)4reFe(;QkL%'p@h/GiU?6SnNhk*TIfE?FG]d8gn_O&:-U*ZKd0
%lFg/@1U*ZI4TG2\mU\>\<"5SqS1qmY^&POuj65:cRi"Uf>0\5bnMj`7Mf43tc=b+$--*#Vi@MPCO,_fjlL`84qPEcWGOr(eY!%.H
%;dRZ?7::7HEp:SDjh75WnPKp"F4E=uM1FR8<9j8:oK8b:X8$%\AA0j:W0^rWaOo6!F[qSdgZ4$tI_i_>e8M,*nb(.^#@G45'!R@P
%h=Sm>*.\&dD5=hfR$G3X^PK;]k_gQl?n>A_9`ogd!AaS!PS_0/n:T-glCg(c3X@6U2fThp3%r#B,8=*tAbTp@6Hjat]^s%jl"9#p
%p1CESP%RXQp45,1D0@>-.!RWG!c?X\]g&<`p5Zu-_D(^QkbHMN4`nqHEoh*a&PB&0V`D"[)]h/?$>7=.(h'shjDU4t9P8,qYgmYj
%*LKW<ju]usjMhUs(47tLp\$s3[`4Jl?YcqjA84/0ZE'n\Wc;]!W5_U]d.t5Ik"7i'>`8CRe_U0#/q8rl#kbeG;WIE+6_.>:Ha>>K
%L=sL:AWa-;"?rk/-h?Y`c6e,K/p:S`NU5*T9%%A:9Qd=@]miG9p@[c1ZYS9b?E?0Nq*hl;\;kHD%#u=[l,03;%I?:CkMl*=(33h.
%ksL#bPHe1J\U<r$=K-/&Ss%9`q/BDO^H'7,8skB'0>>#:-+BiEO?_>kNEHPM#A)Q*l]l:oHalQ_6cSid(t(fq\$/(O)IK$opBojS
%2C<JU7f+fB.qCA#S6P4D%oZ4YFd"<t2<Whh.%SV1RX,##l:n5Vd_U4/Ya7b+oG6=[Is![&>P*ZLUQ_Odji4u<K3c6Za1VeQ*qiBF
%9-?0?o)N!4cghSsoqf-mMY5R:m.=3jDtm:%?f6AB;f8T3PVBSl(GlT0)0&hgnoZZOg[XF_HtSc=[`,2+^uaRO%i3X=Q;IaXH+B7,
%bD00@Q*+c6?^u"(HNR!-Heb%hZkYH$Y#J#sn!dQ8Ae"3T-D.9[QW,,41t,/Xjr.^f[?4]X4DrTEKoO>==eaB)[IWDg-r5"NF](cE
%^))l55LW`hmjFIn;an5?0/kZlRIcC<2G2laW7=B5-G*PI3D/$B@dn:0mpf46-H:%SG%Y=2gUbW?1dKV2R/h6]Pq0J1WET!EG%[l;
%DB]0*WA-X&MW#]O<i^C?p23po-Dqn]aB*GZV<dP//EaRSL$?_.r'P;s'NQ'cc.tSpb*9>^cdL'(Y*>Nub8e_&EU+rO-qm.O6tTpj
%k]]fM[Bsc:Yt=Zh]_t5j[UT&+l41%.EZ;?;q<UGa$.=bp?gf;+/#8DRo&SJbknYg+D1(%?rB_*+WO^"A66Ukr&>p8g2dVZJlWlV"
%8iPMEoETeDdk<M0S[<f&EON8uCX;olXW%5!oeN#HV.!]=%j4!VFi"J6P9':V4*4gA1tdaP"EEggqH,Z3kWs[cl=c:5]eV+3;:ft%
%.bRG;>8THlJ@WpVd6E#()HgQ.adpJ`'2mNAm"<Q$r1NYOXa*"QCh^U<jm>5)<qE;&H\-::DhJ<`!"T4!%l-eeg"kK7-,so`piJ6_
%1Ma>mjj_D*^T/0Wi!9Z_E\3ne:Wo`?PMIiLVr!i9k0Y/fkO&H^CEgC&4b8Hm2k%+b0Kcqh-]PqECj`jZO3TDG&EfYD6_48eZ5u:R
%2r%6Ef)4kS#GA)imeu1LjOBYD4O&YHr9SSWjje8[@eoB<rb6h]CP/1gW'2N0oX-h[8r\khdg10F6"!<U`\K"<D_&B0R$dbq(i2(C
%M+Qi6BU,p\.pM?dA^@7"EjP_m*SM5!/\d8D_DQ03B^k$3kJNhXV8Z]An6mF$bYA<DlePO<IQ/DZXhI\9P5ZRPr)*QI]_r;1+Q.^*
%D"2W=G&qEic39ne)29%?p@<DM!m+$N-Zmj0(g89\Z\cTrC.NU$j[(=Z5IVa9*SF@&BdB0iB":h4b3/U@:[Xa,f,Dq7Cl&#3_SdkJ
%IkPME=5L(/o!>rt??iA>A<1Y=pdHu]>3aZuTG2G+.G^G3T0iT.\^c*;e8s\hBUB0C[A[,d&!'Vd__^i>_)T-pG,s!q5F-3''UplX
%\3K)'NX?8_=#&*ffrsb]52L?&BXhA]WLPJ][MHVl=.$_3b7u,.-do-lFNA)"Oqtn[)[D_6h2P5O^mj1I$M\M@k[8-9Y`W/]Y5lVP
%%g"+Q`q6f#F.&XAG,o>(R"eEC!qK1O:/+ou/st*UY*j`f5"]Fr/'!;/cKo?gcVq=Kj=/V1[KnVL#1M=(J*7n8?MslUmX54U28\b"
%.O]]QWT3dZn<rC())fc%_h#(@Zaop%/c=-!Cag0d&+3*.r8YJ(Tqki-g&,tpT[p.-O>fFaB22,<0/qf>/n_Mul#'0)FpDgYLLt"0
%I$hqP_@u9,IpO_aa%u4n.K4L/XLYbC+Mf\-m$X9%B3spWV;0>p!:(0rk\V+hPPr&8M<sZUh.sI1H9X.<1l_h_D/e7;/m+:k-+R8A
%SGqd5poF_Jf@F"%@;r]C:X2oIj!T/9oL0]<5AiF^Dk1.7].i0[k2s'U\BU9GWJg,,1Ym:caT<^LgTSD4ZcUYMP,%E[l3BGobg^Q3
%?h:7lA9W=65O=>A';^(6]p!7m;gc^42jVU$e]Lm5f<t!NOOBpOVkEpbH1Y**rt>1Q-<W$7g<m;X4Dlb4ZbmItD]SuhR9@brgSoVj
%W.heSbKB+EL+R>THidf%3\46"`?8t7Ff37nBkK&ZFZ-eQEqUqm3d$'A9QOCDmjrV0fmAtLYB)AU^`(mrSlsmm/_m1tn>p;_;S'e"
%nA_pHAD6nGr(a\B=Zlen>Mn/IHK[PU_$niW'CH)EUbdpE@*TS[1"eYFg&OCF!=!oF2,/-!;QA`$G(<Ju.aO,)9;&S'$i)5m(8C-T
%PD/?uZt>!C^l>t'4FaK0a@#$dp=/Z&c@a+bC&.#ZVfoN"\VjC\l,1HK[eshUZc\!H@A8+@g:a)!7j<I0"Z*^[E8o_;gp.9Y[BR!#
%Ion[;I_2&AUI)-T`g)U/oU'p(k@a8mh&Vu,cp:`NVE1pZ,qKoobhb4[@Uhpc,?(hZ;`rqZZ!]-84pGi9T:af,b&=\>\-X@XMoeA1
%-Q[?G6T576\T2DX6=gH>@RH>`'@XJg%g_5sa)^6b._0T73(t&Bl2`*X$3]?]MoAXC<R$S:a1YT]WKlPeh-!ph[gQgAmcdJS?Jr2Y
%>k34DdrA=f7;T'BR`A6>No'=].Wn?OVnM\GDt[jGMNcoG71U`WKs(\VS!cb<#&j1riq)9`X>.9<-C=0h1\2rH%'9gA#0oi1Qu8HM
%Xmp1N4.T:1OKQLn_`."8)ej6J/<2[Br6$&%o;aS&FVUp4S/km!in?SD.;t!r]mU!)\;Lm_*3mZ_c.f;2`HL_`c2Yr`O;mSRAq,mj
%GD>LgCDV-2I^rPG]tSaqd!#:4Jj6FWIf%I6#8:58BCJ!hDgl5>$@eof(\H&#Dp)%(nj!._7a/-0!`r\2J)+6ephRMP;YNf`r5U@r
%NgOmM]f%SieJio."'K9k=^V`KIXp"^#3,`QT*;Dba,*"<c]+jlT?CUAq2Z\J32GFL(9XC(O2dfUVVbd**+ACK8k])AH2M(0&&?X)
%bL6t(O8Y6M&c=K]j_sqG%X`R,g92+;M!RWLmYj]uTC=-,66T)$D0cpOD.+esduLdldB^`I3)3>Jj[I1],Z:$P[A7BJBfI:?]o<I.
%:Y(m:$"_c;VOtpfD/$TRHfUJAl$'l_gCs4SfS8MXcdeMFjBoq3r^_fFDcq8#0F\lFE\71mAV"X&/<s&7k@psT7P*:ff[A:a;g8e6
%m"FQ42Nl:;!kq"&C"Z7uG*GChRh3a'G*XA8KPsVni(IGfo]kD($j5)A579!\T7&)ejVf=P=^JsD$HMYoP6JX%QCDj`\(lfC>>>UC
%+3bEP&#@@$X"6>A$'fI[5tJ9pVIq>#RJ7HF1_hNLJ=t8qVFh[t;3)nEKE6-Pc%K`>/s>_3X0<b5Tb=41l_.?+CbX,eJ5t=I"?0`p
%citc+*_7E8?sEr7@X&4<3nU!]^G?DsP2UEZB7V0"j6W(Nn7T0]B!Z9j:4BE7/-)pOV@kN])SJeY5n?jg.KHS5;?9_r#WV36rP#`c
%4IZNS"(nob;URBb?7*%1Q(,#<[UV*L4CuqR4o>b.C1K:HS[9I9]lQL,?uf-V)dULM9JMdj;.n%UKI5Z]Nmeb7A;b>=$J]rY+,&QL
%KoKOd?naDo1h6I*nI.(g"]<l>pli-hiZ!2hAZfNkZL]s/5`dLf&+#U42Tu=42qqfAA"X\!32W_k^a9)'&r,Al7`4k(a\iOH$b6aH
%-fLKCba#%P."U(t,\T3]K9L7::e#b/K'in7;]UYI3Pr'YKr6)&IluQ.Q7s`X%qOKt:BrjHr,Z9TTnbKFS1dDVW1@g:J.Bu*?38VM
%1B;UMU5$*!N<PJ\gCB>ceiFq)f^ZCQ7`&2l@\u,V$On[$)@Fq@fs"XQ,TP"Sh3jSFRKHM.rl5I2QW+nL:.`]?OC:F#ToBIO5H'ot
%e<RajE`$10rG=Vm&eB3L6bPe/#+FgjWen.iou5=l$'7[#L;>/b5Nns.)8&%%<OUIZJbG*pT$S_jIuBC[dUX!UDj_^?Cc7.nr;u='
%P*BA"iJ(K/16jUtS1In/@F97\i4?,rL/_\[%DdeDK"XN;JS.9?,b%$A!#a8G_Q_N$%(bU-*X"#5>>O13,%KsHck/1U.(\+LgEoNE
%;Ji+4ifq9BK#SX5l=\+=U#!W*GqR;KXf(:UOoeR%8L7fk!47#F!X$@*$rkOslNo'rE>rR=aTJ7>!CQ8e$1u)GgFg:cn[S'kOh(O&
%4Fng]8N7Vm#D4HJn(MkTV1fM8L"?>PcEgWK,dNA7J>7hB@']n=##)MpGtaD`"Q/SQO+^PZQM)A-7p(dK)T]X<Y/.+C\tWG2)bcSt
%`C(B:R,XJcFp9$>;`?J:J$"!^oIVS='I86/pm)Zf(aoT'0?F]s!S^\#_deDp@!@i([K?0Jej<uD=pT4om"qC#0Kn;]_;r!\H>JTE
%._0KC-/1N!nE8aiJQ6fG-;#)F#f%=7hN><Y8F-a1K'/'i0O6hK_Dt9mIqM7EQq5!H79#2hN9MXQ_t'T`JL&:cCB0?*aTeJN$GBPG
%_A;SpeO6o<<002"Si.;;$5XaR>>D:/9sR&:\46ks2gs&j,D5hp;Nkp+1&qT@6i_R4NX5-,X2kc!6ng5R=%AE,7"8W;p:&205,@[J
%'O7!(a=j=S1/ROlj>c56ObCa@]mgFJ"":<BE5Ad[2:;^`p./&@.jP-$do(iC9cl`<$A1j9T<u!F6^ZM8U?<umAL'9.9-WNjgUX,q
%i9Q'Z02bn'-.l%@$BQ&/V$T_$LpVM<UEe1(3_VlmWuhM7W?%4B4WYC*S[RmVm9+a;6^rQ1).2N=D>'2b7*%_08%Td33L\qh*Iq)B
%DLbA;4mfL*KmjiqRdQ7EK*QpWK+57GGZ=Ofo.@T7)L;h@67W?fT.=TO?mCdZ"Krmi!%c?D('4Ri9TJ;?f942r[SEE(P%F@rE^h+i
%(SGmB/:(+RZA"Qs[=De7[^Ocl_DHT54"^rd^B57>*sK'ZHrhJEit4UZ]F+-.mMA('`NA\O%pLq.^Li?7qGDf.=\L);2!s]cOs!Qg
%U#nm`#_JpF&/^g/nedPl&e?l+;)nY%n/W>snurTQPD>aU[<Z#t2a"OL5o'B.XinH66Vnr)Tda6kGL/]()6Rg3#s9Q05]hR?;2%?#
%aV#j=MIh<KUZ/#N=MiVBDiU?T7iojm84Ki,;RT&G[R2+uXla=S$P;*u>n'@WN_kiD@>5U2a!h)'fD(Or8#Sr^0f.]D*0L0U`Wu/g
%bb#BjdCk(<;(TOA6N.aq>sj^eoahHBA6$-X3XS\A8gZSVM^'*6.VlP0&3_*l"MsaNXX;Ke)")^I+1"#:mtj<8,mQC06uYRSY0tt@
%`\!$p0]e73E;t<mmNHo,iLrNPgL@1`I!b'"js@W-XqeDTTbn+^ppr/Ybf8@:m&#Ah&>U8"2PdKmC@Gj2<`<29LeD!W's`Xs$^M".
%[N50O_TWF)l1&l:e[(nmOnG5Y@g'r8N'HJQ;K*HTj6(AK,'e)f)]M]@$ue[N3K[tmI4o1m[Q>Zg`R*UT;5>:[;Np``+?6gL)PT2o
%iQg;?a`Ejl@Y-1)_I@kZ$Sa@!0u5d.#6SZ/!E]DZ_TuDZ>hB[%X.rnos"1)K;KGrB4TeESm9iE%@hT03-Zft+N=oE:AXIoZ#LEgS
%B/'5AEY:m1R/O5u$_p7litXCj82=H36[sX-j<5Wk+tnTtf.sbqG<O@m`!DAF%02rY%<+lXC'TqG&;3-BdNfVX!23fS%dOn'-+;8,
%\7SP%7#uoC!b$d'Actk+Q,P"QV_#WiGlFImWSsB++pJ4.k@4P=7EgN$MfqmA)#=GhH5oF'nA#gZFGT$,Hri:%O7PPoqA#G*J!n)m
%LCfljS<hHCpbik'JT:p^&R2Mq7q&WDpe!aPUo@b/>`p\fd/bU;52K4tAC3*s;.36$rCNjnLZ2Rk"f;*Z#"I>q7kR<G-CT9%$6js;
%hO6L9!$k'e=Wj,e9dF:h]PV+Q8-9UNXgpJ#!RR2Q]#rL#ga:\F7XVWD5XbtM_.Gm<39apVL.8S2LZ+:#qo]QUO?e+,3@<AIFF4Q&
%2Fpb,HJL8$a)e5Rl1j,h6\@q>fet]5:pri]-72J=*<Hl-&JT\-M?9_NdVUM2c%:pX8KG(HVB<`K8sR2NL!Tk);NqrI&CT,:Wk\W0
%JB_!G4]/3`<R24K#BnN^0gMff*??>S8+M$EU+Ag4)1Xjk-YPK27/N!IaU`Wtc-b3/rrN/_7:t^,QPY-Oc5FP3C`+[PK@>IP@NO@1
%0Qb-B8t2"KYW(KO#tc_jj1.SK4Bk0e!6sSlKnC=YBlTrMZZ$=Hp^&8r'4rJ*Zm$IsTaDV^BEGNcNb>XA_m[B(#i7+)<[\:*"7u)N
%?fk/tV?3oTXI[-p)9\"+6j91c-1RoqWA(]3EJ<M\<s%He=K@PKR"SQe,'R,qOiVbkaT3bU,Z$I)PD&2k\;E-P39[YL!lYD\-1u=q
%bQXHB%#8>'@#!dH(L==@JDGtQ>0%N/cX>CmObWfG-quUNBf$HWU3m,"ck)GFYVDc#Cka<RS!NAJ3X=gA_=mk>GS'%L41%Va)%tb0
%MlE?P*`LI\#g-in!!3Mo#r!0<`piVq#,YgC8JX>h_,RcF8<F+E#?[IPBk/K/'3L=?BjRUGCtjO+$AVe67<(Cc^^umg(FS[5KF)5g
%.!25.5UcR^qKXDJkj+=@)m1Nu&<X<+$<Y8\:T5Mk1GX=f-E;SDK&@_B*:/QZo?0NZ#llt$#9ZP=8*)JIJ_a]HVlLg@HS"A/8fX59
%T#1E0*JX,q`[0b.>aL\n[`QukO;&//:bj1$VhXCZ:eAG,#rYi47=t]C5S26')cR-?JsAa_)3`)M>uN4N0EHODh17.C'#rP35;))K
%kh3btJjHXrI3Sl'35sSSO?jH"2(97ndJ#%)$Nqk1R;duf(V!cOrud]IGtEi4JXJNb9FRki-2C48R:%GKlED95!Zts<X&Vo'k*d0+
%=9QTZb\8Q?]*;GbS0-m<Ps^/i=ENVTb(gPf"!(cC/`9E$-3>:ko0KGs(_TX`'+>\%$!%PgC6qLiGU,V5frQk0_.d\9&[auhTH&VE
%]]gJQ)@QYXiK9CF-%um;2*<QJ688F%4=kQqar'K(-(ZaKUSs@(-\9W+^3Vc]dMC?LA0`eEYXl/uK\2[PSl,hE&a4fZQ.\K<X=5kW
%C^MpfL.Bf(8BRT<+VJb('dha!c$WS?2fR'.YfXDcL8W9Xa<C-B/W]q#_`2a>3Y2BJF>7Rb@Og"LV&+u\E)%GnCPeA%e8EO\S?RD4
%"PP:FT48(?$)2akRA8cWBZ*:J`?_;<H/ETD9VJH6,TDAFW3jE&+H*V!^bWUBPb6P?9Gi;Y[RGd#?.M?d9p3G&)!u'-9A='D_mBj8
%Y8!T+Ob*T^fD(bMSCB_s2tHU7NkjEia,(-S+@[tkqsdA%A!2D'&S5#l[LsWO)"]@58l:WtQ3Kqi`\;dD.hOV3#Jf\kX^t%tLAF6^
%()hl9&%7V]HDLK&l7m4-*0Gj2Rmc<[[#bC:j1R_@/(sANMBK%>4L_EnMr[A;F9]rt<#'Fj&s!:u2$,I'fHqX(!!uJX*Vhslb1]D=
%^2!_Y"*iX5.fgS@V$944VD"(m34.e'MhE.l@d"*-aHd%r*)MpFE=_/e\04PnB$6lA>`45892biQZ)pD)@l)I5lNU/mg0m6=\d9W3
%Kb.X1%;hRs4Fa%P;:OhI'W;B!1aHe6UbFBZ2B,2i8J[c^)X@SklVUt1m@Qf/3ts6P<kB2(+f(?m`WcJ71aY[A5]2@V-AJ6c;Pqr5
%!nbH/Je?F'5[cGXMk&lpD0#K'AK?h%7765tn)1=m?I6OZ!?^0e(b&m+NoEGkO;*"J#7[r1AJXKBkui_<2]D<L2L9UaBTX+LJ/7b4
%fU\iV!+X]*n>JXH,nNrOE+,=BjAaOb&4m.6(Zok:nl[O>4C;Mt=RVtnb_d&7]Z*%QmMKSq0J^O4_2eZF;VHdk.-?^IG5;WjgBl>/
%H<>km(j:'R'k!o;2hR1%8[*mlH*P`AjRWIBW;ogeI<;FWj<jGKlM/BV`ZnZ=Z*&cd$U0)T1ssA`-N;d(q>if-EY.0'Va0`Zq(WI&
%R5,]j9O+!eQ4bDTS)r)7KJ+5R5-"[?##A`lc(RC])L4YB.OE[e/^gM5ZOq7`$<>J#P3!hak@i?KhEh!'dH&(W72jd_a/5C86dW,K
%)$l!mVREF`+W-[S&eK3nNpfe\_9N<[M*le0@#6.*%;+50,8kN)HlaEPmV@RZ/?h88XGJVJH"ED@-@$B;j`g(?k0>0?91ToG!b!P!
%<st't\5S95,_7tFo/U?l)=TX+A:kgTn[ed`C*GniGS9>$F<H@,%BS6Wprm*9dLlc"(#sVrc7j&9T>K0MOc`,[C2o4;U(ueD5*U1!
%9!q8R$V(GWO7J^6eD*J*`"b*YJ2>0"bW)\74>.;2fI!^/0FBN<c[/K\/;,7TI*d2gYZr9]'D_^($p&!_%s9G?An^j7ek"0?-J2uF
%FG,Ol6;m%2"h'De`M#<pD!5>sR.)`#*&r1>Y#2EWi=kb6_.j=7DB6LW"jMipj1a:$^[,?l*1c&'lRMD^XMoGm>G'Gtrcj6:cu1C8
%(O!?dqE2rO@>=:#DpVL;Z)Y\U3nG_g@!%#H.<UFr\KZp1(e5^jEM`]:0Gpi/[VoJ<HSl42^3+UYd?H5Dch]B'&Ze-Ue;o2EFF9SZ
%nu!jF?o\j.cQFTL-piLKe>-E;Bs@9>nVkH6B%XH3_,?`GA!5k4KFp\.fuC*<3ERt9%!dq,-lbbn2^HtJ(]qf5rUj+S;?IN_oGbAt
%An_h@C7f1tq83GaX2?;W,#NMN@<UL(%)F[u@HspHphb3C"t,b"6tcsZR]@Tn<8-[^12n[Ca#&tB>)XqI%[Q>2Rj\c=]dbiCG(;Ab
%*G5D=EGYn*!7`YJJam?=C:T''5piJQ1c44g1F--,((^Re^kXcIMB0FQ&-Z9h)"=:cQ+hGsYc<:GSu!AEY3QZk#h/?9)S\@YX=?&,
%@Qki)H8"eR_.AKG/39.a')nXm8Y'cUCm7gi1Di1HoNWJc.+@g\oi$?J9=\LEd3iPn#\hqMa?WP*TS/F3j'+Wa0ndk%LX5Q+<kDb\
%JL![^\L7TD(b`-(;J7%Xf`;*7)D&f.kY"Gt"EOp<MfC8hL!YSX!"<[nF%niS;D'>=&bS3-7iuguN%i>:L*eA$ECPbPZ4I.Od,8;h
%a7?,pa1BcXCCh':!6F56&KP##+g1,cg'1NMQ`HLun'p8K9](-,Q5MtB"bR`TGb1O3jUfh:#h<N,_,qq,<)^0D9.k2QRj#`jlfm5e
%)AupU5(Z_#r@e9ln%(i>W'jOTNdVB-n"XNDP27.9.tgD%Oi2g4hqe0LrQ#Cg&JW2m/e3L\*LXGRqeD3)FRNmaD2Y]WBKTO`=(tci
%hbhhlCcoTQ%:t_/U$ckX"=9'K\G#N)ka=eHf2$)(:h's>qS:PT/qXe3n##HLU.kTo)4\$?.??mB:busI^ub#pcNSI^KH+Y1_@7ML
%h@4Ze2PeZ".p/A^'_l-QWAnUlWC5aO:Q.SVL\&"SZ^R[m"(AhZCPX7mP+]F2j8Q#6?4%,Na0.^M%E\$0"N>ajc=h8o7gE#qa0dlq
%Vt2=$daL3;XE8Ql/Ik%Bl*u2"`(!EEYiOQd`tVWW:Zi7Q#gc,k+U!hm\?H[r_3cD[6MO[`5b8Nu#Tq6Y_USJD=H[*sj]S$PPRJkf
%.QB/B#I5CT5<M<nN$PLZ_.4$!;MUnFU(^R0_`)=p7HH!Cb.+Zea27qZgZAd&0XQfjFa;"j7[6r[l^E86ipdU#k#DQ[72)F2X`0TD
%L=9NlN/8UW.kL!/g7`AI<1p&^7L,\IbXt^5+jFD9%Gk?;<[,cXc`erm^g_o9F7jN+W1Jfm+;ggD;aIGKl3L1Z3,#QoMUKY7H)5!R
%KM"9iMoRrE0r2)Y`S2rjpM4.bW"d%A[7QC;;&S!r=9dk9n^Kc_dD3mb*Eh*D>)fLUb(AP[S'+8ni!_SDB,IMSH+).%!9KIV%31gf
%U-Q`Y.P"3A9+%Z&kYLEP8=4i;KIJH9Q'9qJ@9'm3&W3=8#@g$@7<b9X7LPRAlln\@SV<lp4i.s$M(kTr*2hbbFO/B-JuMT.kK47Z
%A)do1#mq2h%F-a(Y1hgG/q+kr+`5*+*.gt,M2!2P1D;<YUr^@B(FB%I_=J90hjaaL"MUiZP"9[.#"]n!MYeEQMO,e@<Gi`/2d7^#
%3&eZVHN\YT$rSa50EQ$a%k8R:e0Nf!7u[]pB4)Y)YT,mEnKE[G3?!nfFS%k,$B:7%'hnTmXmdVDeW2K<b$i=\n;8G"$e%0mnpq;K
%>L0eKW83Utd%u'%(/pLY]31Uu%.Re]&pdn->Xf@Y9\7kY$PjOU#YJ]s9QMp7+XfjW!Bk6+E/-3S)@"[</NnoIjQ@kT6p--SkAi$k
%pCT'G\THMXmBP^[3FKSjN(0E@iWT`I7RBph%:Os+EOO:Rq03RV?ZAXng+qcpTu@uP^bH\G:Pb`C:o7LGi@5=&2M(7s$B?".>`GC-
%"c%c2/W:,mIn?Jm8hc+]Wf6'nVkNWG'^I&Z,PZN$-:Wg4#CH'oTj-.`QQo.f?:1uQ<_?Es3P'/p.*R*29sQ2&_8@PQDe1/hT^=Nq
%p>_oME]]Y3((AA;D$B^I<.cl+C&Gs\gttBR6*-qnOFh,gR'/l?d'd#EL>G17<.#8]I=dI*%nMkW/Y2fL:l1#eQVT:u9[9m$;C4I4
%U0<?bEDK;dJo+13iqfXuT*:'&Seb=1OR3(KoP!QUIk(P*#T!4YM]LZ#gcer7:1NG>E;dme\cJWsg%nCt^]LhQG3:M>]#+n<JqFWQ
%Z\%cQ=@j_hI69-e>THC`ZNVbI-cG=9T&7Tm/Y_@")eUgTW[(EQ1!RNlgGfBAFLX`fAjnV1Cc(_,%QpJF#8fj<hhP?`Zs1TZC&'%n
%qYD6GD(QeA1Z4/1:n678$m9GFCN;u[K3s6OLJ.AMCe^]D)S-SSidnTFD'P5A&f$1(aa/kEY%U)#+`p(08SH;p2%tgO"Hk=-0g[!H
%Z,Lc%JdsDB4/F%,nb.O,CL'h&Wc[Hc-**%Ie0?>l=3bnuKX^d(dpXC;*s;YeG53=!;C-*$'aCs@0r1Mr#pG`]Ot@+`&/\MRY&0E"
%6O^W>JYnQFd.A1t*=mTA:cbVn$k_AI_W3L6!&?6q&bWKOF;5"h*5[%?d>;F.g0hKWq5;0>l)t9ZG4Fgp_eC7S+CF&l=?/WNM)YE]
%5iENC\;8@^58=k^]UC#rSb.*hn-+*[M*NNmi(HJF7ss!I!#-VO'R<W4qg@NneVn*ZONcu^43lIP'EV^k+k0`>p0e^l&FG&9+*:&I
%dt>g7M_#TDKOOZa-%gU7Kk9nt3N=2JMIYt@%e?U%#"B)&3T6`\3^@,d6PQa72YV.JYt[\<UgO16@MtQ-1&,o<\oUOjihM$m/Iagr
%p1T];+s%uZ,$h'-E>f04>O`VRN<3-k.+<[qjsgC#"]!h_+MU[)\>U6X?TgWqBF16MUGO?jTjc2!201n/p5pA1,EWt*\njl(0jL']
%a:#mo>;KA+C8juX'G\\\NDomTq;u$=$;m2b6A7fdl0(j;UJQ%PD#D[J8UnHTK!XLu[P/7[MPYE<`cBbm#cWCu/9h`EeX'>u>f1rd
%A,)l7%R'Y`kB(#2Ob?I#6U6S2Qo=gW?[p$f5E\^,5TU%s4a>b>7[+F*Z2Vr[<hPC6D`f^`kNQFNQ>Yorg'(Y"ULT$EaoEW+N']Lo
%$oK&Y#prfB^d=4)\!h,=g943oh8Q9i5>7p5oGhHF\njE[Vo)elco,1oA9Ck3^Z1\L6I^tp^stCF"&a^\#)O!0XRUBelBIgh6KEhd
%'\8__*(+33"-W_l0@UrNCa!oK&!8(QScNL*4,N_FD*8CRn;p3Q$&%&^q^g;fg:ET25%/Xnhu1BU(Mbd85L'YhHm:Y%2P0%P\-tZ]
%"o,(kJrdH.$RL'l^5o+77rTf?\'ZPS.er(a2d;A$&q0i`<@-oU*h"e=$BL)J=Xm(RU,l)'HG\*N"("kMGVi6O^Y+iL7Mp$4\gl,p
%RuUn4E@bChBR76h!V80rBb7%7>:1J"+O(R?/dVIXPj$5?eRGpQ[p]iZ`KNU)!f1a)DNq:/fPI8_@^nTnQ]5E*"0[]`-Fj[nX_hKA
%(^hAR[QU5ndOctFq7bBZ,`>cXA!(PGW(*9)4-"#8OUm]-GHH+-A*M-$j_H[+7E[@*,q>+3:21YKmhpRTPI.qV9[atskiph+UYai:
%qq%)ITOTZ,X^dsAQ1G\&=sWN<Ob75DBF)Fmq?fZ_!OJh)kLj*1T+98r\tuH"\UG7Q#JQSjR(ALs>8a#5Ge.R]Q,i#<*PudF=c?V]
%.NP*OqCYCd(deYp]3ZWtalE&8'La;#g/'bh)LKh<l<e`N9Q+oYOhnUD-%]ge'q3:X^mfQYH$VU(`YW&+M/H6*8a&6mJo9mPI"bN^
%jrbb^f=>a-RURMC=BQ+5<h5mN<`X@+$r:AY>E`l-keN$RiAbDd0R`\3RWKB8WH(DMk_m!C)_J&6m`mO8/>lAU;u,;'2i*&YD)Fn_
%;\]NU@"nET&Bi,M;%CJ%`"63OJ>MXI.S!uJQS%mjY+puP6").(39=Z9(O>eLU(!V^WpW_')7#1=)EXlW5Z"-k)gIB-#QQm6LB=&a
%#?7f>+@qMg,1hQ\i$':H^1m=`2(mfoefCuTg@(1?$-qm_9VMS<X\Lc[]qQ-IX?AmJ@'XVu3OkEIT?Du&Q@Us!;P5Nq"T&j2UC>Aq
%)k9l(b1"'1J@k"-=?P?cgbW5kf;_KXOeIG)&2jkcD_GM4&_>srrj_37\Ud;?6H.%DW73(Xc-h(UJe"E1=G:A(2[rX^4G,eNim\5L
%]%d4j!c.>uA.1ga"BADPbk,obDT,A/DQPAf=Uo'u)+>p)$>8I74clPY^"I4G&>T-K6#<L+=;IS=FCQrT@Ulqem49/L9aTeuo[mDq
%Bq,%G+AUZ^h4&@s"br)3q9fd(3$mV_l!i/&IbYN=I4/bEIQ9Le2,=GqR+gZS')+kYcUOSr$@`^Dmu+YG9LJ^Di7q[Kadj2`HE@<^
%q]+iF(/*SjMStjT87-<E+3Bq"Sca\jT[]Qi8(`hTGBc#@`tj\9ABV.aF6H=,R]7d:JL(C<\fk.ZcBXKH&DF:5NfF7IE(cP?UP_%$
%Teo2G$1V+-f;5:g$(=u*j`AS=0`WX^=MKB";/cq\OkY&9mrZ:\36"I/(d,Fkh=)mRjpR9H4AR=V>tR4g=ZPjn]gtfJFAPs'B\9%1
%LU!c:c,C'a(oBsX5PdX&m:YMLXW4]`(?HMQBA<=c)8$>P=")FVF+H+_7-dbbe2pIj7r?C9;+RXT3DsY)/g.Ul1s6QHSTPB6iQuoh
%aNEH:*$[HpNCG.Nn[D51"cK`--OA5pi<N[1`ZoHF)">]X/1c=eC(#L<NQWTbdtj@[SYaB'b=CWH3@M<)dZVQeQ8a7q6TMf*Clt5c
%7CUct);P?=.#.tA3k4/g@Zj>br71UsKb+mn#Xk!o@<06)C,rj9iTPZ>@;9$qpp)A![PS'+!iAGb3aB>PKd<%f:2H;XN_[-V"t(UK
%2F)H&^IC]W8P0WJ;P2W5_r^7sHE!(2=)3n*\=QI\i%5_XGX%"\6AZ8?,bG8*=A\N>=hGtEj]@\Ae0fs1K+[<o#60B;FN_Fp/^[AY
%bu7RJ*2X@*Mi/Q;U2j@nos6hRDkFqTR%oBapD!7Y\pHB=+6Ff4iNrpRSnu]_;;%A2WI1ZJ_7f$`Sg`@U7$#MMEC!u+P[BEfr*hB3
%ZLW5^*TcK`2T,5Ji78S48cI<+Z6R+-ea+`5_8j?XJe1N_#^.WFk@]fkb2?c$*4lG*EAr%&<KF.O6.ScQZ%g+K/YT88c,i/bi0r_6
%*[[o<$[cfWTc::s6^H_/l3CQ8.C4J["/ZS;bNHTLW">(?m"hJjY8f^iPKNkRS.oHBnQd&f*U`=^TY;r[[7#7EJr$P*WKo,&e8^X=
%nakD>6n7f7r49qRL*P-F]CBlnnE/%=<XQS]$/M+eB_b-lcNeHYW_#7S[p4Q0D=fBA['WB<N^))K+9gT7)-8U3m@Feo9MW@3fIlC3
%S587N<DV#\)UQj+50::kXted0ZL\Ftp23u^5#cO\_[j\1/PY?-\qokbS&)]e4<GX@7rsQ'$j]rRQ4Nn)!:i7mk(X(Il62B^R2NY,
%C[1=MTs$LsTtTmA`<n"Z?HHQ5_CB7F_%->R=,6i\>*=Fs?6d:G+^ZWSm\*iqe=F^L)6D0Sch1+La<+R7[q&1U%N&PkiTf4J)d\g0
%<6Z(#!A6^V1G6=mUgn=Kq^$*^>,NTR9Ba5=K.a%Zm<3n\#tpJ0rQ!j;Y?duLMQA+2Q,Dt"D0(`fe1#^_L..`:)4\X<!X,T;TJ0FC
%e\R%^OCYr*mZ%jSL1(S,g5p1Y&R7[^c*r?sp@qJ>?sJ7qnOh]Z_jZ)(eYd3T-;;6GI_*,Qs4-fpX-P?XG("r@TfQrF6Y>DkBlC/j
%+KugQS&=r^CiDs8P&:-k?K2X.<n6%>>Y_8"'mn4`?^^F(1#a>U%=#h5n<^h/oWVCtlO]Wo=,N"@#>V=96%"#b\LtIo%k&3N`X1P.
%pB:KLRpMXNe#gn$3FOLL!p!YR3A7$Ci.s==Tn!R2`uY]p_\j3_X&8&e#kDC)cD#%0FQOkUQ0"l:s$O*4\@&^URLm\kCYNX+N"Ni_
%fU2_-og,eajSE(RO7TV<G=i<"kc3cAKTtjko[nLB71M"#jelcc$P+=]nm(28nT0T@+PN7R?U*5sn#4H>0eQH'N^W/jfh>5?K:U\/
%&=*UNJm8>)(beZQ3"+T2aSWJuhI!Kq8FrrWeHTLBY>Q$V05kuV`s1:u'tcoU_.c?B<AH14IJM&Net2RYnuK!#>hdQp.8>K28j/?A
%Xs%O7WiU31L)7dg4aZ!JdX&6544CB-1<aA#fuad6CWki17QlFU8>XSigE/B"cg'GeB3P\h$4M<UeV"nB_I2s!:ZatLiKtiIE>9O,
%0QgU!9t(fu0Ghrf17hPb]IR=4Gcl4VT2TfSf=0.BDkp,eK&_Y*d#-noM[3/K/a/7B!RXPo)up(nOYEMb_AcW'C,7B$"hYt"$O*n,
%Glu=gXqDU(eV>Y&84QEVEa<FXQ#l,)@iZ4:`LX.1jB]C]JEk^c!oOhWb+`3X3[jPIO6embID_I*j@TRm)oW7VW61Ig/6QOX7?YA0
%m4o+)6_B4dXLQoYRYOn]Ems*i/b&a8KSGV9;l$ccKd>K_(bS0R2QjD*[kOH84Jd\?Ko9Q\E>M\T5oT\=j#taN$IKJa&6K7%j$BJY
%Z,(_nQS>4oEbRrlat^Pb?io!3#hMA4j>&I2F-h8qZ<<LX;U+RY'QS&gqZVH[O($7EHQi"`]<Zt'OQ$F1'^$fNa:DLka)GXJR[K1e
%P\i&EPX<s:L+]!)<@F%"Q0h$hC$]F)Uj_8-Uh2n)oHYo2XL\K*)apd)#]9S9,ft5\"=uk$Bn4d>7D=(q9[nAPq7]'E1^5bFHUOOM
%X6DP.m1,USYR1q8c.b-?O9jt6<Pj"?8*BgZjd*2K++pNAO[siW0DGj-kQ9Pcgm.f?Z_n@Q"!S=(;$<15Loe@;28*FPJY,+7JY>WO
%Rj7`_4=!A%)A$4Kh$g"@(]i!76H53iebmc#!Dk6_RbUl%%\7*)[Q9Z>VmK1$erfqT^cfbX6fdrQm%nGpdY\7ORCs?2C'Jak)E4p9
%)W0=:LuX2rW`d2Ri\]UT+i'pb%Blq?q7W)^U%loUc':-6O&&^%:^5=qGF6lA\rH/Z`7p?HL9H,gX<\H?X6*;YHpb7UQPDW&G@^t`
%8?P,O0C7CO.pN8-@f+Z]80`u(]QFq%F*q=A4GD5kffLUIUQ4?-Mh.9hI,0DqZBL0d?N]Q$dIP5\L1-2ep>QgAOP;1!#"aFJ]UW":
%A!NMW>D7nV`*i)F&k!KbUZ(0iE3=/hQIlbUL3h0]O?\4%?6\J=16t^BYk5lk1Cu'f)b@H)-CW'4MrB/S*3`rUET.UPJ7t:=f,!oM
%TO!"7-;=kjE[jD.R6UN,LUT6JXckk4BRo+Vn"dB0-p*Q#9b(cj:ZEJ5oen*AE!i>[8XX*T/mAa"qQ_epBp2r5Qg;>3d-r(KcDeCe
%7#0QTh7M)<JUt2-JH:b'A6:?99uC>I,O>DKh\L4MTP]j0.6sQ(I=/,]6*o/fdB]lK)cf%7JM-GU(3kb-#'U/R6W(5/]KU.f6m@XW
%s2;"jHLKM+UQ>LB5M(n9?pc/-IFsC:M!&@@YaT49n-0K'9u"AV2$4nq_TR*>K01ce?2`aEnG/!n$-["['SdLtn34=W$YaLmj@*^N
%G+)bH<'&hY"?DW]1u,p_M@,r6.cmHRJ=7,65+J_6`!l6mUV*#JreVHlb>s&8W"^BW_s&$rSX6S49<q,D+-K05M6qZ@a>e2__pHOq
%S32_O/BQK0R"W,%-JhII'+4C^RC$cCX6o`k];@J*@uKq^2)&]:BE<Wg<n]$D>JHSee3m5.*&m"[[CN,7<GlZBo7aXOc*X;oLEWdj
%L+6/"MpY0Xk9"su^D_4rRq-IJZ2e/QG`Gm']+hpm&6qOI-8UH)Pq66<o%4qH&Ds9\GKFntYtG<LrL5\+[u=u9[?1h,=Sh0,+gE%U
%2#f>4cs64&[P(gYeoXib?dLY&'s;l]&(%#3pUt34#DifS02sZ`%>JAV#?K6/_4Ts7/B5i)]Jm9.HRK*b6:o3f51E7-0M'Pl,DW(^
%^;5]@ZA7$*]*l17!MQNJ+@!LFh=0k.o5g`a#Q.;>JAdO>nq^Ju1OPSX0;!XDpE'RD+fhTj?@\fEL@A3k2Ud/'kZr10WndSuZ^cAn
%GmS':R$Da:2%GjEm_+2h!n>I<&1d,A-LETq@j6he?$[1ABW(tj=>:[3BOI2f6uX2U='&E.TRdfH^lW.=_r9U4RNs)uIuLD4!qSuD
%R,5tW<]`S<5ieU."4H\Sj7CI_lj5&3KHM\)]&135#7@267)MQ.S@DEH1GZ5h6*6kY6]S"kq)/s?c,3"&S>$9nN*4>02s\Ih"70Q'
%3--!n8s3=.Y'0D94"o@<LSi5oesq??ZLJR6Kk0l%8tB4jm3:=j)+V'2d8C;!#,R-]"[oI#8;P,r9A=#%6B_/^UF@]\8$H,@(5D4N
%USMk<gFLrk+4-BSX,_O3b5$b*q$^Z?3KAs:atZ]]A+JE_@58]N%7:=j/4\Tth*a[&W^%C_>kVbgLWnf$R`h(e9]Y+Q.#2XaO*O0.
%700mVoHZ;8d'+:BC<uN(K-d,BmH4j[;)PPUF_?LjUk0Y%@Sfhm.Y^oN-'XQa*MN\$*@<!Z3\<eTF,5p`.SaC'`m(ir:.l/@Q=qdO
%O#4?!<A[5m+hV4CV'-Q1$F\qX)PhMe;3&[+&;27/jqb""S>.igd_H1[?WL$RcSd@9##]FQ)0CgqFcD`4/6N3G'*0*Eh*RDmoq,_U
%]ouk?g)n[13_q=<";m$,$+n&be+(X.puU8YLLD/`E-3[Mc&k"fMk0$)+#kBc>-2_S6:a4sTH0u%9$cLL2LbO#eOEGa]?1<fs$"jm
%Gj+9kWC02[D0h)c1F7=5=(iYB4H,GE^A4`=f6"*J;!n8CK\H8PH>^>6.@'*4h)I:Wj]m_V?X5U:*XGVpU&8sRY3R#VqrJ=rlLV&3
%D-?_BPbN'^':V$h:US7uYY1V_5`-1*mU,j1faL@1rW*2OR*!$i<0'SL7*Sc.!G:qLY!od\7nkDX"'^f\HiDfUlhZ?>\V9j&CW"XA
%FflO[7*TFUepLiN/[m\Jn$quu2glf<g6M[6F!%TT2tSAd5aA?2>XspbY8=0+e]OTge+@sh7D'de".X9>CbH6FqRM[=rDePP.PCJ>
%+!fA6'Lu);!''%i[dZDd.Yb2X]+n9C0rPA;9[sSNWE)kC1Ro5aj((E,Fk<p&4K&8@7$[70!X;Cga,Q&OR<=2D&^`W)5_Li;CcMSc
%9I5T%cB>$thO+@/:YN1(n##]MF=,QJVN-LU[>Q3jj*2J)KC4Do'?_H=aE]P#;!4h\BCWO'+WNr"aLMe:UX(eZ,G^MHqZ%H1aE+g1
%S>/h*>bR[YmS'aFf;5*o1knUXc(tn24gY"J#+AP^.iG0f\lY#'(b-r.Wu;:?\1+a1&C:9L)T%k\`rZ)jkD[OK!s8$m"iWB=+=ZO?
%k21OVLN`_*3E,>ml+gUSjM3J"1nAjGE9B=bLK^eg%9i$@<^e3Jo%.WZ$^aq*eHhd$WXk0t3)N'P<cbQ!:<r]b#JAPXq(O+QGVFE#
%:Cr4t2`_?OFbmGP=E2Sk22,YP7B#)[JK12[JuH2#c;QkDq#Pt#S]C2=?/;"%7!ETi/[fMV#<O-9VMN<==GWfY;'b(B-sbEk.0-"=
%cq'.6NBEK5P#Ha%d_QeBmljhNl.Ca,SCVe!(S">sG%h?GTEP*`kICmB$7_b6kmDQDNe=hJ9b6o0TBX;R\Eps6?j2-2irdSDlq]+#
%TiPC+*h=6Y`%mh.S5)f1k(MUR9G#/(,2^28BA.+[7>rJnU9bA#>Wo=<b.?pP_65WM1Gd'U#RX1*Ve6Ni4q!jN_^.!+DC:.\5e"tL
%b()p5h]V%K`F'67+L1(\-op#S#iTF,kqOt7+P-!Ro5:6jOYR8>-JIJ(*+jf3cb@AQ9/uXmF=F-VQq^^U<Ag$["uCRL]S%Zn6%bMu
%.9CBo6^A*[b"oIl5IJN-fU(YJm0K[Xdj8BhjVL+4@0&HW4!4uTa/hYt.cO`-QDJq<pPkC#b9jc`1?iK-<*4fk#1sZ0ITFa.`d#r$
%Ye`S;"(rMWM00g`lTc)+/epa<OR&DOdI(rl_;fmP]-'l?N5Npl!mnH4UIQ\"JZ5rl$t5;Ro*Lt!1VdTVmuf[dL^#2E"t.Au%7>e\
%B,&WO>8KS!0,P9^+,=uc)]]$*:_*kk/`KDU*1J'!bb6X,3\K'>M)cp=B6*uF@+ZFIYrFV$<t[u`HK5WaTteAR;#1D0;E_fd+(A>$
%1,U)9c"-b2WM$Y/if@&i&C'5,7m3&++huuNUe2_/cV!>EcHTqc!:M^qA(in1JT%]tU"GCZ,\nERUN/C8O9r.k&<UspnJ*8_Le*?o
%VBu(X.$g[@29gBH,Yj,NA5aQdo%T5+-&79qq;KZ@!aer?%Ni@ocG2!p4:f2dOc#SZUKhd"o[MB#V3DXh)-750&mEb>$3L;RW1u\4
%(U>:?kP!?(]qFWOM]=7r6'H5^r+(Kf=-5jQnF]=A68tq]/jTtOQ;Lg2>/_Cj:U&(]0oKAe>;oX:;Zm\"H^ZRq_*Bis\O4+Jk?1,D
%-n!JF";,i]hP,s00?7-:23"q._1>/T`D^?`.\R$Y/tKf@pF0-7[V;SAk:\<1^"?bLAZYtt0-\hkhfCBg-f&!J]h;RUa)c\)A5U#>
%(l"9]>Ru4`/ndnsOVg'dUnUCMU'_[(9W6fo@>9ft:a%.+-CCmdYn;sn!%"Hn\^Q.I>o'8E<0tkV]KhGZeBO]%;bU\\X0O_TaW8,V
%7/rp3^1or-:rH!1EPr`$0'74X6Ria',F93$Rp#!Z>%)7<g%J%H^B8[X2*Z^WSq1f2>Y)9`cnJXR@o45,@%UibjmUO#Su^4^QSX/s
%JtlMf(,`[E\cNqWk0,[KQa7t!lm^Iao?!$9XDCMj8mP1C,#Ps0*,[22A)%g0U_sjN`WN-1/tRDjWaU"6ZK+B2&`+^"e3]t:"[>A!
%oPbs;0VoEm:5O<MC^]UIVmb[tZD;>]D]At!!(gWtjS_Q=%3V$I*QMn,]j->&Yg\cfhh(LrN@&n9?kQP+.013PY5s;@_j6_?KN<?W
%g?tnL/T.!=*`n/2694:j>i%;)4hV/da0f.`VKUoA=OVVQ^p6/#4@Z(nJpK^e(Vd6.JB=o#N%*cc2In<l*460#dtn(i;/YENTJtXF
%fNlY@0llXoTui+5YG',\nb6Vk>K-_$(f^a$Egi&Q;c'rYZp6I6K5sN[4g5pV27@?/>`^;1i7*.1@ZF`?kJVN%Bk+^iZT54afB$9F
%f:7D7kAA4mV[5?b.=obs!JNtp]Zc_]p<R`!O>HT#,M-oXi>#&G+!2m=8!2@IYXe@m=6qR7\d&QMXs\M%j?IVM,c?Jr).YJnbtcWk
%k<\_m-$B)E9m_PL"];EY"/hQd44TY//dAt%C+;+l70SQWSnb@qSa`u<-HW0r3@q!Cc)T_k!W^ccl[('<eV,rFUErfC3a.s?hg4`6
%V(u5,8FU-6ILa2G81S[gOKim6a/;,^%bCX@J\Xn;D+OsG@SiN2a768ci$SjEU/TC\(kMnj%k6d574<g`W+F"'G75CBW'kW-;6k]d
%@#6BtYV9f&Jfq(Bm]j?_%qG,9f52lCb0/7I)/KT*[mZ:49Efede`%tJ((`VrBJX$p8ifM:h"^S>,go,TlhLLU\Y:;+-m)\NFpLOH
%$,&ZY,G\F=$AdhipOrQ?!HYYe;(eY5QkFBMN>,tT;BS@#_r8W_feV&[#AJ3tE%#'6EK]OF3LT-teLA$;H:#1][7p5a*&^lF0f$N8
%:PcD4.*#Nq7!pu!Ng4K#TX17-+Sd5,oDX'W7NlfqIem2eI@A-HA*ucs;jm.Hiue*]3FR]Gq`K&c3EA,s#Zj)CSYc-2-HN@bXmHZ#
%E]`^skVLYdkFcc2pqg*fOJ9:)bD8LA8gFOu"kIsq>s:qR:IcYQl./7N&_T?_`gEP^d'[3eZ5[A5m`M7FM-9.;6Zca>N/JoTT:PJW
%*D.?eJR)>hb1-lV2mkVB'W9OAcS<%ij559YB=e+5!&.$NSme+)e1&+DW$2C>oYd&B0YKOaX7UO\lB%/Citee1BhhrQc-gJa$e.3!
%Em)%r+qG]moR3=.9YNZmG'*.7dM6FR)-Q/BP%732D%Fh^4cA,-.1n'(!22=!4`dI`B&AmnA0n)F7<Fk$:ADKOj'cSQghjK1C72tt
%g+AcZe@!Il+(cXI9ckTsq6j_i`%YmMJls%c9%1<Op9$ZV-3\3SUr?ld.aeh#r5K^CUj!!\'s+P-&+$3k*:Ol1\Vlah%gk"X[qg_.
%;05I_W0=..aO#a0h,8*k]@!F3SceHGA@80I:N4,4@;6125KWC]b<q@am.=L98q#CcNN:iC?oe$")7Ko;*UI5O9S&HTRa69gPU,44
%fR2,kEUe-Rj.fauo^J(e>V\'QncU=eq.SWQ6maJA/caYC@#K0:5h\2#cFb`G(+`iEV/c`HLBqTrqMM_mJ12dXbmpu7#XCN)9mt-j
%_[@t]?D"7@@Rh]F-9slXbt'T]l6\E(F3E,Z]c2-[p.mV=5E+(U[.+aZcWWC!.%7B3h^OH73_:IVXaV),Tb=0ffi#Dfg:cQ$3/H5[
%9[@hACLgt>Fcr::#]Z1NY0>1<r`mnVYP,cCV_g]\/f/pqcJjj:2DT_iZI\R/3UR$EERHN-VIAfGf:cuYrsb\)%pCS@ZR>;Edo.2c
%^>BOo#t5[S8.g3KorKUrD;A4WN;tW0l1X86:P(H,4Bf>#"d.,Rr7N=Zn*j)\aooW81-SDIgeD9PY__#):UlllQFP>^2a"o_Bb<X_
%K[@_YIMrK*?W@Q%oEDeXU?,AoM'j!VXR5lj4*_5oMO+I0%M3o$[*A.(f'3m-IISARVDm7!d=LX=QO"k2bdmK0jjhL0<#K3@(WgX<
%WX7u2&5C.G+.)KOX]>:\`9Zqm#jBcQ$3<b'Nu.&i,!m!X4h$eFJ;S-NqV?]udIZP8]rhqU0Mb:t5`]JC$cpmW?A+J@8"pdT;cAqT
%_fi;O"!Ngc/0E/3dJFFV).B<-lKEc_8Ac<3*[C4ti*ZApUigh#c(2(Z\8]?2P1I0POenG2lu@Zo/esF'"c>\96=-$m#MHQp_FMrK
%mt#-6"$',E#I9VON^-g#Bn,js:-rFQq.":O8,?u"=,a!5MMME3p=sN1#"If_0eWbq7F.V'p:=Quf[0VdmZIKpGAFi^-.9ZIc6)I<
%R;!'XZKCWK)lZ6t`h#EhiO\Km)?quiAl7K"Z$&+Nf10J^9t<`im.=.?_Fc28X9>U;RUfGAAlM<J9=P^1#i"Q)lE!LP_knCp$:@7`
%/+P3d9po>t2*08t76`-i*X*"uFN:-@rFD(2/'3V""S=un,N$BG7BA!F2OW&]XER>mF8@Ib+SCc7Er6ir]qD;j7PWsOA\lQO<ML)P
%2-Z!eRa;0l??\6P^gge/f^:rg['d5Zh@q]K;RiOC+"i;c.Y\^^dPDZq7X-%-'&dR;#8Q6f*I0u)#7-fE*.K3M&"e_Ki2.#kpd/!0
%p)4d-BWDZeipF_N.G5HTkg//u]R\)?@Lstg#W;;8[))tC0QN/IQO*BYiP\h%D5"S9S5eg,*E?+aLjTrZj9Fith%r*<:T4Jn8?rCa
%6lMhsaO?l>,2!jP%Y`37NVi^5:e]b1le>D>F%p9PaV*^Lk.)3l+GY#mHQBH47,DgU.sLbSL50J#73Ti]>1qW$mQJ/')RIe@I4E#'
%dKP73i0aN=Kag5!=#9!B9T'sq_f/RD37,9hhHEj[n%R<Yp=KGti?;/8H-!`[m?n6JlFGSOL@i1dc*"XmEeXo@]k:s8@836tg86oC
%/qh/X-[n,PBH2$1qYEmX+L2Eo>)1nO.c:dpe*PmZZ^jCcC9^T"6c?I@@B*bRMZsVR>:eDe5f5.t"rN^0^=(>!`?rb-/*3tZlHL$Q
%#4nUb>Jp^ua)[VSWq<DE9:qWc/Xp)%LF)WmcU<a8mBd`0UULiFQ*6>dcD'cD%s;*LWk'I.!)<nm_3UfQN*%T<f48_!W$h6K6<DWq
%#-N[oWm<T&>G'[pU/3n0&1C!1d%U/^I&JY(rDGC!ER[>\'h&Xs/JPP\GDnC'UCRW0\/R\V5]/s5b#*rsMME+:)712c(&0$edLbbt
%F6?BmOS%9t%tS%:P<K*8'RgHf:k1!W*7>B-;Nd77Ac&E8hA.e6.(KS-hQGl+[N/eglP.82Oqo8jh=Q$O,rp?02SER+)6g-9V<F!l
%VkqZ^gU3qq!'[68Et[TC3NZ(F)YdiP#3F&Al9NX)1kR&COt%R*3R(M:-C7=;!'H8bdS&2SJ-I\";NQ["'^->P#I=DLFu$n[iR=Sg
%PNgDj!E,=pLlJ68r1gU;\K]FjE[RdKZ3`Q$MVVN.RK7O\$kqn+S:SLbh-Kc`m>D#2F4est7G"cC`&QBHnS%-X>=+tjHeC,KG.IUf
%4=r^^:7.&_#c\sKEZJ'^jR5"aqi???:p\Sj:62:J.cF?e<Jta/-^*GAl]oA>:f&9'!(8=b\fGOhXUS)t"+,jt>i$,6m<en[j%BJ%
%c7hK.5mK-.TTa2ZS+VS6;@KTDofQ7YL*a)f,jXA/d,o;E#AJ'8KRHKB1lreX:QQM5+p.`#`%uMfiD&]*qR$Js-7im%%lLJMP2R;J
%TG\@t%GXpi64h8JKIRfYP`ht8LgkK?_3%#u8ihM.LZm]7*/TLIiH8/lRqR)kF,<o(0%*r):S0R-^)f30mRG_oZrap\?QA;skrBs"
%C]Z"mi^i=mW=16@TLaDcD5lA!.MBC(J7=<`+G8huB%*P[ZeT6h/s`!8\"sNsE[4cRQGi3cgKEmbjJ`Y[:00mJ&3JG4'F@P<GLJ#C
%a+2Nk)'=_I_anKo5(T.=g:]00<&9*GkH?'U.qVVt`siP",rq)Q942H@EAK=>W)X3@$PGF=+rRg]AjeVr:bEMfCH:$hR<\ngF0gN(
%c6LV9l"#&ns.-%9%S<!6e2;6G:t/)."007YHrTc$CNT8'):abe!mP2^_ZiL_34.&/8N-c3hr<=j`KQ9)S<uabBm4UF6"c7VL1i&\
%!TRML]k@\AJ:E]m)JpVAqO\1!"#rIk*3&o-G0t?MjUQ%*aYA]FV$575g%dW=(a@DDoA#`n7*KK/2C![<T;$7@g&^;)@ff#N(/0/s
%-nosQK4n\](br"6Er7#CNQ:b1SouKc.FitSidaaDU[plS:drmJ)RFDXjDiC8c:Pp\Pjg/hR.V.j9KHIqNL5_8k!PU&()rPnCtidN
%*"(4;+QAm.Aksp@RlLqoqPN@M^L3PWF8O!!%_T=,fYgHHhH[I>iX$nEiJjMk8<'I,K55/,j'dfu:msDbcKk$KrMh?gI'g^m/;Lag
%/MIHBFOi!AA$:#J2r1P;c+j5F33!^f3pokdOn)b!,3isZNQ7MLLif':-:F@mA2k@\Y%JM0L!H7")+tVYG=n]n/;GNh(A=VTc7E3'
%-qSYG#7N:mQ!3-12&=EN\$U(N9gupO8RP6Z?#'52c"KdSG7Uo)D]Z"p3^?+Fc1[PW&N/U\8APe(d5o=I'KIu7PjOeLT>\]r$QMt-
%;rKR^hZih/#"X;MQjTX1'Y;fd@uL5i,bDHEh5f2m+lNh&:cn6#aGqkc3-&4c]HpO?bT/\M2jIl1Ms'(>jT*\7.QV4L5br0t9D=_T
%rF5H1>gFp5X*-@jb3L"Z%jWu,^RY1jo?D8[<0Bc_:I9Yha<M2(Ra5=s2u<fP5bJdT4I]I(6E@J1eYm/Y$XXUYcTV)GU\G]jQ[o@L
%d9omu7uq\mEZ2Yr(@OHlD@-U(SW>q#a/"i]pS;_#,5htt=7rK^e0Ij:0\@[e>eOIjOlAgimNe8^gg.'V17NE31>*@\K\4B]V`fds
%*5LSPOB!#J%5d5..=oFY6W[K,j/&b$>,SBGY;HuVb6o@<#88OrNT[ts^SkdqdXr1#BErt@5tFdD=QOVn;TaFuJ0a*6Uf5=Q*[s[C
%Z?']MGOGs9;5oNt,nVYt&5r@'Zn*[o:J2a!O0%E(4YLoaP<u!@_['*X2$//#JW`j_hB(#j1.F3?2"@Z"Y;h.a:97pW3tcP`j#gHV
%j_>FV^H@`V*aW=c5^)(t7:kk0i6p#0,!0S(Fuqs(8Pp"`-+RJ#2<GaE<5B:o:`V!mB"G^2NlY;KfHM,O7ougD,cJu-4%H!,JQl2@
%,%>=/U,[Y]]9"=jcEIkg_o"ojY2NK%TCt1DU>To7a>foC=2,qIjg)l>=]"4H/EA'I4K?=>#D#V>Qr]BO6:@'V]<#rto/EM:<qp8D
%+<!u5MVA(YRVBT0_qQHuA-hUDiFrMLK.,,0(.dkPbu6cr$1DH*b6:G%m80Dq^n6#/GCO^^L?@ka]1Pc(M&_h?Xj2Z(TZtS*$Bq1E
%/$c0kKLMWnXE!:]U)ZV"9=GA(:+rao?V:rq'"=Bl>](3h/^(1^D>c^U/&$_`8C/#8NdQIu`gZ_f!2A>4R2-8Y4r7\O.:A$lh#i8k
%Z=QMcK9S4](nPISB"9F[5+;7tEE-MfiAqbgc6*WEL_i*":KJEDl5B(?2q-(if[@E=38*apQefN@@0L].#g*f24lq:N#?)BX^Y(?k
%DRRc!C`@.&78:0EWB(Pf'XY@=e5koG4InCCH.dXf%UokU4W>52.\.raUR0d;Vpu942qe6_YbC#8;3gfd"PP4RlKs@$!o&ABFktV<
%55M<"FuDqXrgW(I%Ohr%BT\\UZ(tn<5UC=#)FI2]n3P4E6Cd>An?8g?5UL:K5;;',jOBscG_1$^pq`r]D!o\5;e5^5Fu&JPQO/(p
%q(BYX$MFcj)7^tVH._klW-;7[O&F?XWMhaim?*Oh>32oZa%;/FM??76*C"N(Q9FLB0KbA*0OHZs6p-s[(3n11EfMuI,5f/X=s`$,
%Z1ie#YVHM]WWsYbd^.l`*imU!s"^ntP8%YEC?\pFac+>@*^hJ%O\"?@#7Tcf<?i)"Nt?Fo7;:KihD$-BdJ0N4E%0"8YF.csTl8fc
%F&R`^&s\qgnc0V&TlK4]fJe)WVbLfZaS;XcM(;$_d0m5fn%>.ZFJ@3L6T=#)2''Cj6m8P!KBTFY0s#>5(d.ZBV*cs<Hn,1=Uf;oD
%3&ra3"e(!=;q0^+nk^TbXVuCX%aL`jKL&PB'ogV2YQJ\%0H)r%n@q>k<B^Q8AMn<Z>-:G9e!X`9)MpK%@[0H$"C-*VimJF--"T.c
%Gn0.01e\%mM>&jme%(d@6nJkBTJ^uL&H32ahg)BP%a#YCIt^(&Trmf:bUX>84R$SieupqLSloYc0duj=@aiD/&G,es]'*L`+^Q(B
%"/ep5!fUdZaOasdXTE3d>>0S3j#&UT&0@O5AiSfNdXF']0r$T]=(0`BZLR/<@'6Z0Li*8A?>S=@:<i<RqgAj9'=8.gHsqu]AGptO
%XWeH#KIUr6l(62'S@e/cm3s[(lTItZG%h5NpA@:e<P-e:4mYnkZ^7,$[o4aBqN?MAgmG6&ffQ$*r?;!\fKDp^M&iFSjJ-`hoCE(2
%`Rm(R*jE9'QsV/!PpVs[Qs!F&2sbF^ZRQ8J!iW\o!\?7E!%>h9DT32te%VOuqcPYVT61b*;ah4Y!L58cq:'3G90N!E%;!HZ8QLSn
%pI="cVYEt1JB6*c^4c;)+C5pBV!T-e6L$H;GfXF05[30<p@tQm=U$#i4[l9_d$Ep^:P(XTl^6Q%5e0O+TNdXj\AT@bSZ&>!+?"`G
%f0iI>M:Nf7am=:f[qrNjQF0rg>"s]H;0DBR*msOIJ`I3kG[]Z-<=U%pXiOjrg=T/tNcAj3F'>]./!O?_3EP_g-WL$llfnAn7lOhU
%6$E[Uc4%8$hPuO<`a^MkX_P\M?P:Kb+9u$omH%1r#,s_\UP'<aK0pTG40YODcl![VH;^c2SDjK+:B;iO6_Z+s/>aBNq(s%(\34,o
%3s<B[#DkTUI*)biWL;<qY\:<LK`UP@qEV%s,]S-OBZm-/?)uDSP>Qsu"/Q>P3.R@V^d`FEb+fnbo_'k,.,fk0PfJqmaZ3QH9(e2%
%TR!*E^%4LTYVjWifn,p+/C&Umnc9EMC+DMCOnn'jW2dPBZ3nt&9.jo@i-*pr>jlf4f<nTNX/fjUPr%LrITT9^5HH2g=mQ4<OX.hS
%XZ1_k;sg7jSq(o4WF!OTqg,D6n+m;6I!dsDr,gsTs4W7Ok/Jj,`e7i!6t:qHb#tRT81C"^pJZi[QKG^n]urC-=nXcZ6DUP5J*u?>
%o7h9H'P$%,Ae&*5g?V1"OZZJ0Aho;B4?#](hUX+4*m!ROrL9GVE*_?4r!C%tS;uU[=&m)l,F)/aRM=KfZhNdrj-"gX\fK&.*4X$-
%hu)8blfJXBBrj-5+Ed>d4^;?l:6a^)l6b'T%f2Ca;p"<iq,lRnSQf?.72us5$(ro)*+lF^dj-+3KkHt[E.L?3PHN#!bikft_)41R
%e:H\nb`/,-W`g^EPDSguXp>G[)&d^@"<$R%holm=PqGJW?ZkL.o[P\JlH&5fmPR-`37Y&4fB_,?>r_O/KpE-=<cqF*GpYt'ZT.O8
%]*#5bJ*l!Kk0:7`?_$fe<PlBd#q^.Z0m&E,1ZR=c]2sGEn;?eg^:ib%AodpAkF60,#a[kN7X>NX`q.FIE\m=2rr%CLPeZqZ7It,'
%Y($Wbl[G_0m4"jLYnT\8ShI9[>/Zo`)@-1\*$f11rn-tsI(r>TWNGmc.flJJT<`A<IeBo-]mc`0_<g>D.Y85Hrn'/r9`;K(-8.#>
%ni2i@^ITY#hDlX+GL'!G%1&B<?B.)u`-h/l+"mHiX74\RKN,]B?/&8`mndMPWLo&MBXW4G(c3V$V)li!`:dbSfrf_2U]?q<Z%^"6
%Xbb$4S;a=!7,_ECalq\sY6/Q1((ap=!5r;CnUP+GES]&6:FCbF3DR#mWn=Y-KCc=6?E!&rk^PSlN>`f^>K!Zq,U9I/$-m>%8MUID
%I,STJpS7jI`<]T4J=8gGY$ip+k9;TF6GYPe<084@`-d6rC4Hl2+!^PHpj*q$JQA=Xo6PNa!$>G]d>s1GS2c1*&0Pmd>&Y<u:rEp0
%?Xb!&NHoF(*]aND%oRc,!^+?&.NI:R(MV(_BK5&o<*hrg&%dFZm't?^jpmeUH9I7X'm`aHID<#OF,7A9?;JgMi,4p^^!:<EG1Z#%
%@qH<C(nRJE7G,cGE<(R=?pb>0JC4(:LS^Ul\/o7TD7O`UW+H"WoT6DIOT+'@a][BY()`bN3lJkTmNg_008B0%25??X)hL[^1EeQr
%S`J40;pp[-(n?Q\8.ep-fprRQQ0eo:n.T+@6m36LK"(,g^Y?2802psjh!r<A(/[^:ihU2:7cop^pIbKn&=ce@AMq"\!$&^$c^i]'
%@Me8EJUb";R8IJU83l.n95C+^`jB)o2OMFCa:tY.!3$#GWrOA]%Rt**$qA"^["<cb@>tC--QH7PUHXBc5nfd[E1A=l,SY0f!um<J
%9Ea_hjgsN@&ZG7OTTW')S!kRSZo"$s74ui6W_44']KQ?'P64(;h-CG)Ob_YF".-]cl.Q@-RI\BU4:Sc1)L,9"B#H_5/E(;t+Y.7_
%S[<AkXcDOj?3j'S75>K$=TK+b2FX/.`K6\$C3Pa(eDB2@,cKmsFeh4WZ<G^$cqAaFn@b`"LtU=a3Xj6l"E-",9m$d&j,SH]k1Zf;
%e?D6'`LFSHRHWShppcRG0*GRJJ72fI*@"okc?)qhJGQ.P?+123CNY?O;]W-A0WfI&q\e7H;A?T&kO2"&JLq==%H&`]b9q/.X5LR6
%?,4QS@l)4Nn#X>fNmpZcY.BZR(\(M%/&p6lpk8.SGLkf+P-"JXiJY!&EDeiUTN;Z!ZFgDQ1D"5Ch?JFn>VR037E<IWcMKnueohr8
%YX1UoLKA<dB@#q:_Zg4Br)YK/<U;6\?*r*W;;HV7^B0DRlouu2(S[V.$AAA#,,*gcWL^0mKq&2(@!13P@2>tDmUunG\SY6_;%=RA
%HQ**2:?2UEiY[i'7t$,64ROh^gU<?N"F9-)LBBYC`>++6X:7Q9E0"YfYkXj'-G@/9h`_W<:)!?)'ZGt),/L:Y]>*i@^'*X/l7u4C
%`N5L.`ZioPL/K-9&6l@se,A6d!N;?1Sr1SkJtU9K*hb!bJok$-9O#;un%eL6X"s5LLen-@&UXa?HTS*@FJNT06%=K-6%^c<;h,>`
%Yki>.+a-^s/k2KAIhX8l.LSt9K/-.M5\fDZ"AHFCs5[EsYZ2#[?G!k:5hGuNP:$2epc9O^,LoU80oc%=KB)AZK'!Kdq?q6rBKkS3
%)LD(uf6RC)\ZFKnl#'nj&UB=g.tq)`e`fb"#Z[e`Ur5-:%Or_up,N?;Oa`%l[:_S/F[u-Fq"o4J8;TfNi3Pj')OC]9*Ir"s3RLO-
%oGX(+>(#aINkM"J;D&eC`8M/I-Bg1N]&IZ0`1(W!:U!5-Ic+%q>R^V7PLjY^'\)?4l?a#cq2=O(4Dp6IpaYLEL.#^o"Yp5jqe_bP
%,6tSQlE3XMEY,NB,ZG.sg]0p=BXl5;)m(QSrWR-L2'*#/C3('M6P&,1OVr`bnQ\b_M>GJJ8Fo<oTB!A2?_V_efBXX(?;-ek#X:`?
%mRd70;?T6a:%-T(XU($F0$N<jf]==cI?hk_>NjU$/g7QfIp4CD6Z7=_cVHBFcrS;,iKK^Y.nENWP&#q47Ii#Ms4knlCY?D7ZfqZ\
%:=9\&RuUB:"9]_!9nob/T0G]5-28<P`dtUV\5EkdoZP5d>Uj\QeJ3t3At+(rW$Z"_*Y5HrbR[\nRJIE:KFU(@FKmY@8NIH."!1R.
%=s?cR#kDdW\&eb@h-XfZbA'_'ae<HS4rd<WUcbPi^j,n0j1!Fn/3:f/qcmGk)&@3c+RZD"o947)r3U-/g<#/%dVFJmS(?Qb.L<s%
%67/DNhOJCEE+Dh#Zmto0Ppr.%?P.HX(hC2<_,o">3`VjI\L(Ja.AZ1g(DF2(5`+HY-TOnGHONE25&EAQn>95^"JM@"%T/2=E`q&9
%'N#N2dRA0]OoDQ`T2mf%`nPp#Aoa$YXV2b39&kR)'T2(p2'OJ?peek6(oGPc6O#rup7XDe\[):&l4>ZTDCBE>SjbDfoL`*fA</%=
%qp_;d-7n?IE!2'G,V2c5<6/`!>:,:2$b]6i>&JDr9ig8>0MR+M_of9gM%EMDKqtbH\sbh4\ia\h-5Qg\&)BesoH;gFlot*M]Rm,#
%PHL64!GFX*>q_1TU4JIg5Uj5mmhBHT<j<Nj`ZT_]BT)\Sol"LR=FWI_,*ucW/Ei`4Z%BAG$s=]^":ro@lMk7chk'acJXU$SP95r[
%nZ2S\3K!DL,kAsT(.q6D2qVeW`i8r,AN22o#3%WA_1d.Sgh:huXK,cm:6<o(\7p5[H?Wm37qiYp,f0@mOdr-s,QPIBp@okul?@/Y
%j_ljM$ulL>`3(ms"HnI`$;E&03cGG/@D]:0gR'sO4/V24gr/b]dg[IKkV1MA**JW5(l'8]e1EY6g8BjBR*W"tHpQu1Xl.RucuGe^
%!A?ghO+$bBhOfXj?]C7fgN*kolblDFQ1P\H2U$dZ!mOf04AN&6cb3sl_VIu$(V_c<Q)tnUV\5N,0s0idYkNn#XtkV`\>]2ol'kBI
%B0'd12ZF]Y=4h5jlJ*YUHddOSmL0eJV`t'a%B(2%kAROQDYuE^4G2bPOhjA;<g#2UPpC6&dZ&sP<'C^?3.F=/(#Ye]gJ"&@1H]WI
%.npQ]@Kjf2R.A'Q9u[Z<*V/bA*_ju2ho&(krtRdSYbp+tbMI3^2@t9LL.,QjK5Z"5k7QPFAA`5$I7mlh^3+XgdoS<CRk;Lp%Ls/K
%pgQYuF&Mo[56_Kudm[Ko\Vei43U%ONU6'<Z"b8`93B2,ZQokAVl02KZdrjUh6%2<647g(b9PcPIE\6n*`D/i)p\B&Z$Wd[45?:25
%f)&tk83>8q'o=Ao#U/&86jm&VC>onI9a6_'3cKqQkOXLQBl/ad6#Vhf58G7t'X;nmPL[Q'BJ6QrhR2T"0\[^Z$$)'#f>`IgF4U8(
%,Eas3@FAHnIW8%A6?n!!oKZ+qk70Fe[?BLa!ed'j@&0-mri@Ji/p[;aDhjNfH43c$kVI$P*\+1PpGrq@#"$VDY0S(83PpL6,r^OF
%3AEPsM\Oq'N1ef,=tKHmK8X'#(fetEQ>L&/D#a(JGCB?s5\kCb._%m+gAn%lGr^o4fsjJG:JOuIk^>]AQkJH(jdptSDG?3?gjI6F
%H$EFR[u%kdiTjIa&%nfGj-nJa4I62Z,a(4&m]:N2VJEHHkLj-k+Le*I@`5QF#M,K@LH;O7\\0f[Sl)(SPSSQV)9!kTFur!$#^],;
%XYeC*>4c*%oahGXX&^:NC@&R6FW]1&m(VoPo/YW`/HX*,S4.ao*?$JrJ:4:?;%V2:p,,A$,`g'u(Xa[3]*.\,^eiXG"_rZ4c^sgi
%Kj+-h64Q!1l.ANeVC)DPBs3>IafqZh^L%pbSEQT-o`[=#.\'X>Z^OIl1[O@81P8s8`%O+A/pjGAn&U<!0*B)B2Uued7^V,M(fuHI
%fKsa?'?jr>Fa#2Kp!.o>);Yi2`qFA-7.21g,f"i,DZQWa1WTYTA[pk\'nhfF>EbQq(tO");WBcP'7N-/'R]X&\Fe^o*uiee]r%6X
%$Gc,RBqZ*!ZI/qr*.touk1Tif,c(154C,DWR75u*1e#d'(?eb93,sfQ1%1`/aN^3_r*\3KH\DkT*4!DkAr$=Zj3&h8,1CT4Q7=ra
%SfKm%D$jq\ql8g+J\XY1?jfP!"?Tg+!Pm/%/IhB)0$-cpq4TcBl>TLt65%b:+='8<.l_I?=pMO36$bhO/2?r3%+P*@6fg#-QHaC2
%AgYa,hu,7']>D[(;qrRknU`ou^-[uLGq/UGbDlXIcs>,%5fL<"686S<7RuW0Zfi"4be1$]-ib7<VNb%[P;)Nb]fY>^h"t8nd\CI%
%d@@)3AW#Jg<UYL!QqeccJh46P@W$`M"Fh74e!L`KM#[N!e4cNJb?A35La;.G%OskM>tV1MYn\C:4B4rU-@#lu&V^#?XUj+$d0@uu
%oc226;mjiS/>ha,S5$h&KhOb,WrZ2VRVRAP`oDHP(hI%R2uK$P2BQQP>8,d:3jW@'0ot(:4ACk>BHRdq,9pEQMh@,iig()!kCMc#
%;r4aGL_/lhk2u/&Q;OO&M<:I`3qYd!@>K6Qb6'CKP^1OQk,t".B//e*Ot@'N#M)G^4eROrj+unj<r.W`*9':gP8X/B"\#WF3ZgcW
%*p*;>Jr/J\al3(])""S?i'#5=\N4c'dpPPuhTcD^))c`$a5NolNK>,`d`8",GJ=_?+ZZ%PYk^:3'a`@C%e3UUKATU3Ngus\)$1"I
%$J*:k>pS,e4o3uMbnmd70gdA"2(2?V71ml`'Ih)Dd1SUG]="GV@/!*)rZ(f/.@N+_qd.iQ^XTY`I<`C6=(CooI!ekWQ?s`ncTG8C
%_t^c[dCmC<i`"<W.9so['gb9cqB<dQ!`9p29qCG=/dDtd,1L+a!)G95Pb+e5G+PTY@5Jp4.2k?<_!"_XGn(Q1`HnCUWZ<:,;h>`_
%]ap291(M\M5)><\[uAu2#D7[tYQH'r?p8*N2K`c)e<Vsf[:^i#93oHi!eL<W6td6km&Mk?P7sZO[k6:\Qg^<3`/KL@[fDO<mng$a
%*tLb:%HmT:RZgT-[o1^Ld/uJ\PG1u,AXHM=1-ZApQEs7L>T;JSr]bEV9)4(T([;.N?roi$li8(4,u75ikBqf!.iG<5ZGsf%+/k*7
%p;VjmX$B9Sfi4B\rbtQ.E=*MAdZ65@XNIf.$Ofi\%QR/6JM2itK_AbaAjVZu8^T0$(p5!,_bod`AbX\g1_[PG3%T$U$1>fE(V9n1
%&8YuKF6kelHZe,!I!W^&QL:DS+9NY&.u10?VqMunD5Bk7#ejf<9FaK9f@_NP94$=BrUDb!GB^+K9i7pmhW@%%GurY!F[_;eCXu\S
%&tgZ)$)OWk^m8XsP6[-DO#50R't*R;F<bFoW1M>#jWEoE?Z5,AKp8l#<MGd'QI;bkXu\)plBT'7e\J0Z775/dVcJHseS:Z$pUBR-
%qkf'EL4HB^T>&$eODfV(+69D@!Uu7!/U9/.k2>\Vf5_UN?[:OS>`XB-dEP"pX)?h(3h7^7kO6':5?M':X2:CU+0/L(NAd'N*g%@a
%`96FSmF,G?r<FUihu!0:s8?kco=KMH+3/m0f0B5ChuEWSIeh1%r6%Is]Dqg#++O)>J,/nir6JaLo%W("nZP1WT3o>1r22dXq/8Lt
%m?dkGpsYQoroKK]rpA$]q;oe,s8/Gg0-iOAT('ALrTet0&&8(frs'uY2h_~>
%AI9_PrivateDataEnd
