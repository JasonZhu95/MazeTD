%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_3.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 201 225
%%HiResBoundingBox: 0 0 200.6240 224.0092
%%CropBox: 0 0 200.6240 224.0092
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:39:11+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:39:12+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:39:12+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>232</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXz3+en/OUWneWlm8v+SpotQ8wbpc6iKSW1oadF6rLKPD7K96n4cVYd/wA4gP5w8w+f/MPm&#xA;rVNSuby3js1tr2W4keQzTzSB4R8Rp+7WN6fy1oNjirEvzR/PD8y4Pzk1yfy5rV1FaaPcy2drYw/H&#xA;a+laHhKXgoY5AWRmLMD7ECmKvYvyo/5y28r+YVi03ziI9A1g0UXlSLCY+PNiTAfZzx/yu2KvfYLi&#xA;C4hSe3kWaCVQ0csbBkZTuCrCoIOKr8VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirzX8yP+cg/wAufIgltru9/SWspUfomxKyyq3hK1fTi9+R5eCnFXzJ5z/Pb83PzTml0jQo&#xA;H0zRpDxexsCwLIe11dnhUeI+FT4HFWDec/IVv5R0Oz+vXAuNcv5CRHET6UUMY+PrQsxZlFTQdfni&#xA;kh9Zfkfp0H5cf849HX7yMLcTWtxr90rbcucfK3Tx+KGOMU8Tih8leQdVvINevNceUtdkNzkIDF3n&#xA;bk5NRTehr88UgstvvL3kPzJzmmVtE1Jt2ntV5Qu3i0Hb/Y0+eKdix7T9W/Mb8vZ2uvLWu3EFlG5P&#xA;7hyIX8GltZOUbV91OKCH1l/zj3+fUP5jafLperrHa+a9PQSTxx/DHcw14+vEpJ4lSQJF7EgjY0Ch&#xA;7HirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfOH/OXn5h+fvLcGlaToc76do+&#xA;rRSG71G3DLO0qNQwCYfYXgQ3w0Y+NMVeLeQfyz8r3GjW/mTX75buGerLaozLGrAmqyNs7uCN1FPp&#xA;GLIBmNx5strK3FjoFpHaWseyMECge6oNh9OLJ5Zqlpe+b/zH0zQhKzz3tzbWPqH4iDPIAz7/AMof&#xA;8MWBfWX/ADlVqcGg/khc6daj0I7+e00y3RduKI3rcB7enbEfLFD4nt7rUrOzgW0BUXJZ+YUMWIPH&#xA;juD041+nFWWWVxJLCgmHGfiDIB0r3xQmN3G40zgxDh6FR3HfFl0Yz5f8xap5F856d5k0g8ZbSUSr&#xA;HWiyJ0lgb/JdCVPscUP0X8teYdN8x+X9P13TH9Sx1KBLiBu4DivFvBlPwsOxxVMsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVYz+Y/kLSPPflG98u6mOKXC87W5pVoLhAfSmX3Uncdx&#xA;Ud8VfAv+53yL5jv/ACvrsbRNaTsk8BJ4LIQOMyeKyJxNe60OKQU/ubxyisko4MtTx2p9OKCU6/5x&#xA;W0T9PfnXFqUil4dJgudRavTkR6EdfcNOGHyxVm//ADm35rjku/L3lOGSrQLJqV6g3AMn7m3+kBZf&#xA;oIxV4ta2ASxt4T8LRoA3zO5/HFCKigSPpuT1JxVqef0wO5PQYqxTXNQtpl9CMc2VuXMdB7DxxV9j&#xA;f84iaV55038v7mLzBDLbaRLOJvL8FwOMgikBaZwp+JY3chlr13I2NSpe64q7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXj3/OQ35GW/wCYeijU9KRYvNumxkWbkhVuYgeRtpGOw7mN&#xA;j0Ox2JIVfFB1LU9KS80e/geK7ty9u0UoKyQyKeDo6nccd/kcVfUX/OGXlGTSvK2uectQAhg1Nlgs&#xA;5H2/0ez5maSv8rSNx/2BxV8/eb9S1X80PzH13WoJYoluJHltvrMnpIlrERFBHVv2vTC7dzU4rSQX&#xA;+neZNIdy9wHWI/E0U6yr/wADU1H0YrSZWvmCEaalxeELMagIvV6dwPfFFKOj6V5v88awukeXdPmv&#xA;LiT/AHTCNlT+aWQ0RE92IGKX1j+Tf/OK/l7ymYdZ81+lrfmFaPFBQtZ2rDf4FanquP5nFB2Wu+Kv&#xA;ecVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirxP8AOb/nGbSvzD8xWuvW&#xA;Worol8VEWqstv631lVI4SUDx0kVarU1qKeGKvQ9W8orZ/ljqHlPy1CqFNHuNO0qFyApdrdo4ubbf&#xA;acgs304q/PfXPLfnDyRqQsde02fTbiVQ4hnWiyIO6OKq1PFTirWlp5o8x3q6boOnz3t5J0gtI3mk&#xA;p0qeIPFfE9sVe6/lz/zhtrt/JHf+fL39G25IZtLtGWW6f2km+KKP/Y8/oxV9ReUvJXlbyhpS6X5c&#xA;06HTrMULrEKvIwFOUsjVeRvdiTiqd4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYqgtX0TRtZtDZaxYW2pWZIY213DHPESOh4SBl/DFW9L0XR9It/q2lWFvp9tWvo2&#xA;sSQpXx4xhRiqMxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoDVNf0LSGt11XUrXT2vJPRtBdTRwmWQ/sR&#xA;+oy829hviqPxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kt&#xA;O6IjO7BUUEsxNAANySTir5//ADb/AOcs/Lflz19J8nLHrutLVHvq1sYG3GzKazsPBDx/yu2Kvknz&#xA;X5l81+atQk1zzFezX93IaCWY7Kp3CxoKKiD+VQBir70/IX8wR55/LXTNTmk56naD6hqvY/WIFALn&#xA;/jIhWT/ZYq9DxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxViut/mp+&#xA;XWh63Doeq+YLO11adljW0Z6urP8AZEnEMI6125kYqyrFXwV+d/54/mH5q1vUfL968miaNaTyW7aL&#xA;FyjLCNuP+lN9qQ7V4/Z8B3xV55YaVFwEppKTuG/Z+gYqjLpVnV0ZQnIUIGwH0Yoesf8AOH3nd9E/&#xA;MG68rXUnGz1+IrEp6C8tQXT5co/UX3PHFL7UxV2KuxV2KvLbj/nJL8roPPh8myXkouxMtq2phUOn&#xA;idtvTMwfkKN8LNw4g9+uKvUsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVfPv/OUP57ap&#xA;5NSDyn5ak9DW9Qg9e81ACr21u7MiCE9BK5Rvi/ZHTcghV8c3drfGP69clpGnYvI7ks5Zt+Tk92OK&#xA;vtv8nv8AnJfyH5j0fT9K1u9TRPMMMMcEqXjcIJ3RQvOK4b4PjpXi5DVNBy64qyn81vyQ8mfmRYF7&#xA;6IWetolLPW7dR6q7fCsg2E0f+S3+xK4q+JfPPkXzb+WfmNtH1yGsb1e1uY6m3uYgaepExHUdwdx3&#xA;7YqhDeWMkIkMqBSOpIBH0dcUJbpfmCbRfNGn69prH6zp1zDdxdVBeFw1Pk3GhxS/S/RdUh1bR7DV&#xA;YUeKG/t4rqOKVeMirMgkCuvZgG3GKozFXYq8G/5yo/OR/KXl9fKuiz8PMOtRkzzIaNbWRqrOCOjy&#xA;kFV8ByPWmKvmi1/J/VJ/JH6dMvp6iw+sRWT0UG2pUVY9JG+0O1KDrimnr/8Azjd/zkbcW1xb+SPO&#xA;93/ox4waNqs+zRMPhW2uGP7HZHb7PQ7U4qH1jirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;fI//ADmZ+Xeqrrdl56s4Wm0ya3Sy1N1Bb0Jo2PpO9OiSK4UH+Ye4xV4InmKwaNRNbuDSjqpBU/fi&#xA;hIR6Z5lmIPVAFFCa99xx2+eKXr35K/8AORnmXyDcw6Zqbyar5TJCyWTHlLbKTu9qzHan++yeJ/yT&#xA;vir6/wDPvkPyt+aXkmOyvSfq13HHeaVqCLSWB3TlHKganVWoynqPfcKvnS2/5wh80tf8LnzLYx2H&#xA;I0njhmeYrXY+k3Ba07epir2v8uv+cbvy18lGO6WzOs6wlD+kdRCycGHeGGnpx79DQsP5sVeqYq7F&#xA;XYq+Bfz20Tzpof5t3+u+cLBruyvb9p9PlYn6tcWcb/uYUdaheEQVSh+Id+tSqmfmH8xrbXdNSTTn&#xA;MNmihriJ/tq4XkQwHZe3Y4siXkep3a6nePNBAVehLGtSwH7TDxxYvsT/AJxY/OseaNFXyfr1zy8x&#xA;aVH/AKFNKfiu7RBQbn7UsXRu5Wjb/EcVe/4q7FXYq7FXYq7FXYq4nptWuKuxV2KuxV2KuxV2KuxV&#xA;TubW2u7eW2uokntplKTQSqHR0YUKsrVBBHY4q87vv+ccvyTvXkebyrboZTVhBJcW4G9fhEMkYX/Y&#xA;4qowf84z/kfChVPK8ZBNfjubyQ/e8zHFUTB/zjx+S0BBTypaEhg37xppBVemzu23iOhxV6IiJGix&#xA;xqERAFRFFAANgABireKuxV2KuxV41/zkB+fl1+WU+j2Om6dDqF/qIeecXDsqx28bBRQJ8XKRiaE7&#xA;Dj0PZVd5N/NT8rvzx0C48saraiHUJ4y11od2QX+Ef3trMAvMp1DLR18AMVfMP5y/k3r/AOVuus0Z&#xA;e98sagWSw1AjZlIJNvccdllUd+jD4l7gKsS0SO0aE/Val2P7xWILD22A2xQ051fyxrFnr2jXD2t1&#xA;ayrNb3EXWKVTXvsVPSh2I2O2KX3p+TX5paf+Y/k2DWIlWDU4D9X1eyU/3VwoqStd/TkHxJ93UHFW&#xA;d4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+F/wA674+eP+cirnTQ&#xA;fUs7K4h0tVr0itByuR/yM9U4qGF+cNNfyh5tTVvLM0trFa3IezlVvjgnjNaK3dag8a9tjikh9nfl&#xA;55z8ofnV+W8kGqW0NxI8a23mDSXrWKelQ6b8lViOcTg1HjyU4ofOP5mf84t+fvKmqy33k6GbXdDY&#xA;loTBQ3kIO/pywjeSn8yA17hcVYFJ5B/Oi4QwSeU9bZJPhKtpdwBv7mEU+eKvXP8AnFjyd+aflb8y&#xA;nXUdCv8ATdDvbORdSlu4JIoTw+KAhmAUyCQUAG9Ce2Kvr3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FX5+/lRcHXPzS1LWZ6maVbu/q3XnPMoPj/v44pCWeavNWlPFNaA&#xA;C8lkb94o+wDWu7eNfDFJL0b/AJxE8meeh59h8zwW09n5XW3nivbqQGOK6EiERxR8qepxlCvVagcd&#xA;8WL7PxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvzDNxrP&#xA;ljU9X02Nzb3gE2mXpFQ4CTD1FB7EtFQ+1cVfVv5Af84yaNp2lWfmfzvZLe61cqJ7TSbhQ0FqjCqG&#xA;WM1DykbkNsvSnIVxV9HIiIioihUUAKoFAANgABireKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxVi35k/mLof5f8AleXzDrKTS26SJBFBbKrSySyV4qvJkUbAkknoPHbFXzJ5&#xA;u/5zR8335e38p6Pb6VG1Qtzck3dx7Mq0SJT7FXxV57p35/fm1B5r03V9W8yX8sEFxHLc2fP07eWE&#xA;OPURreMJEQy1H2du2+Kv0FR0dFdGDIwBVgagg7ggjFXjmo/84zeWdQ/Nz/H9zfM9s863s2hGBfTe&#xA;6QCjmUMPgLqHZCm5r8VDir2TFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;xv8An9+dn5r6V+amr+XNH1iXTNOsmgjtLa3SNGb1II5OTSMpcljJ/NTFXmFz5/8AzovarP5o1niw&#xA;oyC/nRSOu6o4H4YqhdM/MD8xfK2v2mqJrt8bqORZnRrmWVJQG+JJVcsrhuhDA4q+8fzP8k2f5g/l&#xA;9qOgiQK19Cs2n3JBok6Ukgc9+JIo3+STir8+9Ge50zUbvTrqH07mFnjljb7SyRHi6GngRihCa4OT&#xA;RydyWr9NDil+jf5aak2p/l35Y1Bm5SXWlWUsp/y2t059h+1XtirJMVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdir4t/5zN0dLH8zdN1aEcTqOnRtIe5mt5XSv/AcB9GKvKZ9c&#xA;toRvOXaleKHl+I2/HFCRarqKXroyoV4V+Jjua0xS/RX8n9WudW/K3ytf3UTxXEmm26yiQUZmiQR+&#xA;pv2k4c19jir4a/OSKHTfzo810/u/0ncSkIAP78lztXxfFWH6hfQ3MaqisCrV3p0p7HFX6FfkU05/&#xA;J7ykZhR/0dCB2+ACif8AC0xVneKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV4L/zkl+Rnm78xtW0K/8AL89oos4pLa6S6do+Idw6yAqr8h1BHXwr2VS3yV/zhh5PsFjn82al&#xA;PrVxQF7S3ra2oPcFlJmf5hk+WKvYtC/Kn8tdCiWPS/LOnW5TYSm3jkmPbeaQPIfpbFWVABQABQDY&#xA;AdAMVYVrn5LflbrutT63q3ly1u9TuafWLh+Y5kAKCyKwQtQdaVxVi3mX/nFX8nNbCmHTZtFlU/FL&#xA;pkxjLAdikwni+5AffFXp+g6Jp2g6JY6LpqGOw06CO2tUZixEcShVqx3JoOuKo/FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXh/m/8A5y7/&#xA;ACy0G+msLGK81u5gdo5ZLVFjtwyGjD1JWRm37qhB8cVYbc/85yWCg/VvJ8sp5bepfrH8Pj8NvJv7&#xA;Yqu07/nOLTpbyJNR8oy2tmzASzwXyzuqkipEbW8Iag3pzGKvpy1uYbq2iuYG5wToskTjoUcclP0g&#xA;4qqYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqxP8AMr8zPLP5e+XX&#xA;1nW5SSxKWVjHQz3MtK8I1Ph1Zjso+gFV49+Qv5/edPzJ8/aroer2trDo72M13BHbKyy24SWOJV9U&#xA;sedRN8RI67ig2xV8madFYW2qTW+o8WSMtGGNePNWpXbt164qyWbQ7IKGWCNVYVBZRQjxBpihAeS/&#xA;KVz528+6b5c09aC+uBG8iDZLdPimlP8AqxqzYpfpRFEkUSRRjjHGoVF8ABQDFV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVh/5pfmfoH5d+WJNa1U+rO9Y9P09GAluZqbI&#xA;teijq7U+EeJoCq+DPN/mfzb+Yut6h5n1yYuIkYqoqIYIlqUt4FJ2Ar/E1J3Ve5f84R6VEkvm3X5v&#xA;hWCK2tY5KGnFjJLNv7emmKvmYg3b3lzIwWQAzcQNmZpFBA/4MnFU2fXiPLEVlUm5LNGr1+zCN/xr&#xA;x+WKvrb/AJxO/KM+WvLZ84atDx1vXYh9TRx8UFiSGX5NMQHP+Tx98Ve/Yq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+Of+cyPJfmuHzZB5slkkvPLdzFHa29KlLOVF+KI&#xA;jsJSDIG7mo7DFWL8vLnmP8sbqXRIVsb3SbRhd2a7EBFLsST9oNQsG6ncHfFl0Z3/AM4o6olt+WX5&#xA;jhSfWsoPrR4mjUa0m408N4TvixfO3l6IMbmRgDHGg5k9ADUmtflirNvyJ/Lr/lYf5lWtpcRf7g7D&#xA;/TdUAFF+rxMOEPh+9ein25Htir9BURERURQqKAFUCgAGwAAxVvFXYq7FXYq7FXjf5t/85LaD+Xfm&#xA;yz8uvpj6tK0aTapJDOsbWqSH4AEKP6khT4+JZduO++yr1bQtd0jXtItdY0e6jvdNvYxLbXMRqrKf&#xA;xDA7Mp3B2O+Ko7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqg9Y0fS9Z0u50rVbaO8068jM&#xA;VzbSiqOh7H9YI3B3GKvhn85vyZ8zflVrkuqaQ8s3lS+Z4bS+U8jGkwINrdAd+NQG6N1FG2Cqd/8A&#xA;OJ0r3kvnzy1GSZNX0GRo0XqWi5Qinv8A6VirwuC+khs7m2TpclObeyctvp5Yq+7P+cYPy3/wd+XM&#xA;F5eQ+nrXmDjfXhIo6Qlf9GhP+qh5EdmYjFXr+KuxV2KuxV2KpT5s8zaZ5X8t6j5g1N/TsdNgaeXc&#xA;AsRsqLX9p2IVR4nFX5y67rOo+dvNeq+YNUkIudQleeShqE5bRRLX9mNQFHsMVesf84m/mFq2g/mH&#xA;H5OuZ2bRdb9VBbMapFeRxmRJU8C4j9M061FegxV9sYq7FXYq7FXYq7FXYq7FXYq7FUFea3o1k3G8&#xA;v7a2atOM00cZr1p8RGKrLbzDoF3KIbXU7SeU9I4p43Y1NOisT1OKphirsVdirsVdiqD1jR9L1rS7&#xA;nStVtkvNOvIzFc20oqjoex/WCNwdxirxT8ov+cbb38v/AMytQ8yLq0U2jGOeDTLNA/rmKdwVWdmA&#xA;X92qj7NeR326Yqxu9/5xCdvzYh1i3urd/JEl2L66sZS31gAN6jWqoE4NG7/CDyBCe43VfTYAAoNg&#xA;OgxV2KuxV2KuxV2KvkL/AJy9/NM6trEH5e6NL6ltp8iy6uYzX1Lsj91Bt1EQarD+Y+K4q8attGt7&#xA;OH0J2KTKvOZtgK0qTU9hihNvyQtbvUvzu8sjTlZzHfpOzCo/cQKXlY+A9NDil+hmKuxV2KuxV2Ku&#xA;xV2Kvlj86P8AnKrzXpHmzUvKvk+zhtjpszWs+pXCGed5o9n9KI/u1VWqvxBuXXbFUl/5x6/Ob81f&#xA;Mn5v6fpOu61Jf6feR3QvrWaOJFX0rd5EKKiJwYSIvTtXFXpP/OZd/e2n5VWItbiSAXOsQQ3AjYp6&#xA;kf1a5fg1Oq8kU09sVfGtroktxAkwlVQ+4FD8sVXXHl+9gIqyEHcGpxV9B/8AOHfnnzlc+cLvyvPe&#xA;zX2gLYyXPozu0gtnikjRGiLVKq3qcSo2PXtir69xV2KuxV2KuxV2KuxV2KuxV2KuxV2KvP8A88Pz&#xA;Qt/y78jXWqoytrF1W20a3ah5XDj7ZXeqRL8bfQO+KvhLy+txPfT69fyGWYu8rTSmpeRiWkkYnruT&#xA;v44rapx17zp5gg0XQLR7u7u29OC3iHxSEblmJNFRQKksaAbnFX0l+Udp+U35N+YYPL2t6vHffmLq&#xA;/p2t7NbxvLb2ZmYcLUSBfg5sV5E7nYkKKYq+l8VdirsVdirsVdirsVfnt+bix2357+ZeNQv6Smc7&#xA;95F5N+LYqyn/AJxKjab87XlSnGOyvZGr14kqv63GKvVv+c2j/wA6DoQr11UGnytpcVfL2llRY26c&#xA;gCwpU9qnrihT1m4MEbqZPUanCM/MfwxV9Nf84V+S5bPy9rHm65QqdVlWzsKilYbYkyup7h5W4/NM&#xA;UvpXFXYq7FXYq7FXYq7FXYq7FXYq7FWndERndgqKCWYmgAG5JJxV+fn57/mXcfmT+YE81nIf0Dpg&#xA;e20hTsvoqf3lw3vMw5f6vEdsVYX5b03zN5ivLbytokD3l1fTD0bZACSQNyWP2UUfExJoOpxV7l5h&#xA;8weWvyH8uP5U8pyRah+Zl/CF1/zAAHFkHAJhhqNiP2V/2b78VxV4TajU7XzFp15dsxvJ54rsSSnm&#xA;7M01eblqklmFTXFX6eAU71xV2KuxV2KuxV2KuxV+fn58RRw/n15jVNlN3G5r4vbxs34nFWRf84hz&#xA;+n+czJxr6+n3cda9KMj1/wCEpir03/nN7/lFvLX/ADHTf8mcVfLkNxDBZRM7UHAUHc/IYqnn5bfl&#xA;5r/5meb4NH09Gis0IfUb4qTHa29fiduxdqURf2j7VIVfoX5e0HTPL+h2OiaXEINP0+FLe2jHXigp&#xA;Vj3ZurHud8VTDFXYq7FXYq7FXYq7FXYq7FXYq7FXkn/OUvmLWdE/J/UX0vkrahLFp93MoJMdtcch&#xA;Iajpzp6dT/N40xV8PeVPLXmDzPrVvoOg2z3eoXzcViTYcRuWdjsqL1YnYYq9m1TzV5e/JLRbnyt5&#xA;Nni1P8xLyMR+YfM6APFZ13NraV/aQ0qfHdvioqKvH9PsJp7l77UGeSeRjKxkJZ3djyLuW3JJ33xQ&#xA;ralKZfMOmEkniYUFTU0Ev9uKX6YYq7FXYq7FXYq7FXYq+B/+cnNOvLL89dcdbeQLd/VLi05KT6oa&#xA;1iVmT+Yeqrrt3FMVZZ/ziJ5L8zr+ZMmvXel3VrpdtYzr9cmheOJpZSgWNWcAMeLFvhxV7P8A85Nf&#xA;lZ5q/MHy3pNv5bSGa70+7aWWCaQRFo5E4VVm+H4T1BPTFXl3kz/nCnVpZo5/OWtxW1uCC9jpoMsr&#xA;L/KZ5VVIz8kfFX015O8k+WPJuix6N5dsUsbJDycLu8jkUMkshqzuadSfbpiqeYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FUPqGn2Go2U1jqFvHd2VwpSe2nRZI3U9QysCCMVYZqn5ZaRo/kzzFp/5f6ZaaHr&#xA;eqWc0MF1bj0H9V0KpWYBnUKTVadD0pir4a8w/lN+Z/lW6ZtX8t3saxGpuUia4tyetfWh5x/8NiqR&#xA;XOvXjykTwqsifCy0K0IO4IPfFVTR7LXNa1uyXTNPmvrn1o0igt0ZyzBwQtQDStcVfpzirsVdirsV&#xA;dirsVdirRRC4cqOYBAam4BoSK+9BireKuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0d3eee41-bdf7-464a-9339-a5fd6f7db39f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0d3eee41-bdf7-464a-9339-a5fd6f7db39f</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0d3eee41-bdf7-464a-9339-a5fd6f7db39f</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:39:12+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>200.623993</stDim:w>
            <stDim:h>224.009170</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -224.009 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 224.009 li
200.624 224.009 li
200.624 0 li
cp
clp
88.5508 81.7191 mo
88.4864 81.7191 88.4864 81.8192 88.5508 81.8192 cv
88.6153 81.8192 88.6153 81.7191 88.5508 81.7191 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.317647 .290196 .301961 rgb
f
172.857 115.238 mo
172.488 115.319 172.122 115.411 171.751 115.481 cv
167.329 116.312 162.161 116.65 157.434 116.409 cv
158.501 120.505 159.144 124.38 159.538 128.43 cv
164.669 126.802 169.986 125.726 175.353 125.205 cv
174.197 121.804 173.473 118.154 172.857 115.238 cv
cp
.203922 .215686 .211765 rgb
f
192.862 107.713 mo
191.524 108.153 190.23 108.596 189.076 109.12 cv
186.388 110.343 183.68 111.593 180.918 112.693 cv
183.242 115.759 184.477 120.587 184.7 124.866 cv
188.326 124.968 191.857 125.455 195.251 126.737 cv
195.71 120.262 194.608 113.295 192.862 107.713 cv
cp
f
171.751 115.481 mo
167.864 116.212 163.398 116.562 159.162 116.474 cv
160.335 117.771 162.107 118.462 163.955 118.441 cv
166.355 118.413 170.374 117.285 172.277 115.365 cv
172.101 115.401 171.928 115.448 171.751 115.481 cv
cp
.14902 .156863 .152941 rgb
f
173.403 117.82 mo
170.956 118.252 li
170.495 118.138 170.012 118.329 169.765 118.737 cv
169.565 119.068 li
169.385 119.365 169.331 119.734 169.382 120.09 cv
166.314 120.329 161.689 120.076 158.215 119.758 cv
158.54 121.294 158.815 122.817 159.039 124.343 cv
159.427 124.33 159.804 124.31 160.155 124.283 cv
163.236 124.047 171.049 125.23 174.624 122.847 cv
174.143 121.137 173.749 119.424 173.403 117.82 cv
cp
f
193.911 112.232 mo
193.729 110.738 193.443 109.195 193.077 107.643 cv
191.663 108.105 190.291 108.568 189.076 109.12 cv
187.406 109.88 185.726 110.648 184.032 111.387 cv
184.184 112.364 184.351 113.339 184.486 114.318 cv
184.525 114.605 184.537 115.427 184.591 116.466 cv
184.266 116.539 183.947 116.678 183.658 116.908 cv
183.527 117.012 183.376 117.1 183.235 117.197 cv
184.086 119.631 184.568 122.342 184.7 124.865 cv
187.925 124.956 191.076 125.355 194.121 126.343 cv
194.127 126.253 194.145 126.158 194.148 126.07 cv
194.2 124.805 193.976 123.369 193.429 122.185 cv
194.451 119.026 194.273 115.198 193.911 112.232 cv
cp
f
186.017 122.925 mo
186.25 122.889 186.464 122.849 186.682 122.809 cv
186.482 123.18 186.493 123.568 186.643 123.915 cv
186.599 124.243 186.596 124.584 186.672 124.945 cv
186.674 124.952 186.677 124.958 186.679 124.965 cv
189.472 125.163 192.205 125.631 194.853 126.58 cv
194.833 125.4 194.682 124.201 194.473 123.004 cv
194.513 119.938 193.917 116.838 193.158 113.816 cv
193.12 111.913 192.746 109.932 192.182 107.94 cv
191.087 108.307 190.032 108.686 189.076 109.12 cv
188.871 109.214 188.664 109.308 188.458 109.402 cv
188.522 109.756 188.587 110.109 188.652 110.465 cv
188.281 112.904 188.709 115.704 188.506 118.046 cv
188.438 118.84 188.38 119.631 188.336 120.42 cv
187.418 120.729 186.509 121.057 185.581 121.343 cv
184.547 121.66 184.995 123.08 186.017 122.925 cv
cp
.113725 .117647 .113725 rgb
f
160.801 122.219 mo
160.736 122.219 160.736 122.319 160.801 122.319 cv
160.865 122.319 160.865 122.219 160.801 122.219 cv
cp
f
189.64 125.293 mo
190.123 124.023 189.486 122.279 187.717 122.279 cv
186.128 122.279 185.452 123.692 185.683 124.9 cv
187.016 124.965 188.336 125.093 189.64 125.293 cv
cp
.203922 .215686 .211765 rgb
f
189.217 117.719 mo
189.153 117.719 189.153 117.819 189.217 117.819 cv
189.282 117.819 189.282 117.719 189.217 117.719 cv
cp
f
187.884 111.666 mo
185.607 111.666 185.603 115.205 187.884 115.205 cv
190.161 115.205 190.165 111.666 187.884 111.666 cv
cp
f
187.351 123.291 mo
187.333 121.465 187.23 119.621 186.739 117.875 cv
186.23 116.059 185.059 114.416 184.29 112.684 cv
186.755 111.903 189.262 110.819 191.734 110.303 cv
192.702 114.68 193.306 119.282 193.218 123.822 cv
191.269 123.246 189.445 123.129 187.351 123.291 cv
cp
197.023 126.25 mo
197.264 122.499 197.08 118.707 196.607 115.073 cv
196.251 112.343 195.72 109.65 195.05 106.993 cv
195.02 107.003 194.99 107.013 194.96 107.023 cv
194.694 106.412 194.121 105.975 193.223 106.065 cv
189.169 106.47 185.211 108.501 181.207 109.389 cv
180.091 109.637 179.619 110.831 179.811 111.849 cv
180.22 114.028 181.742 115.797 182.519 117.858 cv
183.44 120.303 183.356 122.941 183.352 125.513 cv
183.35 126.934 184.626 127.634 185.884 127.442 cv
189.077 126.956 191.025 126.961 193.99 128.355 cv
195.175 128.913 196.282 128.281 196.772 127.385 cv
196.832 127.415 196.892 127.444 196.952 127.474 cv
196.972 127.255 196.973 127.033 196.99 126.813 cv
197.032 126.625 197.04 126.436 197.023 126.25 cv
cp
0 0 0 rgb
f
37.3467 179.6 mo
37.317 174.8 36.9854 169.99 37.3448 165.225 cv
36.3814 165.872 35.4351 166.545 34.5035 167.235 cv
30.7081 170.047 27.711 173.246 24.7232 176.8 cv
24.7681 176.869 24.8082 176.942 24.8546 177.011 cv
28.0201 181.747 33.2423 185.403 37.6119 189.147 cv
37.4522 185.978 37.3668 182.8 37.3467 179.6 cv
cp
.203922 .215686 .211765 rgb
f
47.1451 160.283 mo
45.7379 160.729 44.3824 161.29 43.0621 161.922 cv
44.5352 168.548 44.3526 175.305 44.4298 182.046 cv
44.9049 185.433 45.2545 188.841 45.4771 192.269 cv
47.2369 189.091 49.1402 185.978 50.9254 182.795 cv
54.8033 175.88 60.3946 167.447 61.2466 159.4 cv
56.5054 159.262 51.7501 158.821 47.1451 160.283 cv
cp
f
37.355 180.233 mo
36.5279 178.609 35.6544 177.008 34.6939 175.451 cv
33.6915 173.827 32.5176 171.789 31.1343 170.012 cv
29.251 171.716 27.5342 173.538 25.857 175.473 cv
26.2051 176.034 26.6026 176.569 27.0679 177.065 cv
27.2398 180.454 29.9 183.57 31.8404 186.171 cv
33.6719 188.626 35.6612 190.987 37.857 193.131 cv
37.5552 188.849 37.3936 184.559 37.355 180.233 cv
cp
.317647 .290196 .301961 rgb
f
47.3697 168.331 mo
46.3082 167.576 45.0899 167.194 43.878 166.791 cv
44.1021 168.732 44.2296 170.681 44.2989 172.635 cv
44.3067 172.635 44.314 172.636 44.3214 172.636 cv
44.8253 173.191 45.2847 173.821 45.7462 174.5 cv
46.984 176.322 50.3458 175.831 50.2037 173.293 cv
50.0875 171.209 49.0621 169.535 47.3697 168.331 cv
cp
f
37.1802 169.366 mo
36.6968 169.619 36.3809 170.158 36.5269 170.873 cv
36.6553 171.503 36.897 172.115 37.2061 172.7 cv
37.1841 171.587 37.171 170.475 37.1802 169.366 cv
cp
.14902 .156863 .152941 rgb
f
52.1285 176.727 mo
51.7188 174.466 49.1661 174.312 47.1431 174.167 cv
46.9175 173.828 46.586 173.545 46.1314 173.388 cv
45.4498 173.151 44.8663 172.805 44.2925 172.448 cv
44.3834 174.877 44.3985 177.313 44.4122 179.749 cv
45.2369 180.053 46.169 180.176 47.1192 180.125 cv
49.1456 180.015 52.6627 179.674 52.1285 176.727 cv
cp
f
59.1124 159.327 mo
58.8731 159.988 59.0826 160.752 59.5557 161.289 cv
58.857 161.125 58.1949 161.247 57.4737 161.216 cv
57.8546 160.69 58.0108 159.97 57.9029 159.284 cv
54.2779 159.162 50.6675 159.164 47.1451 160.283 cv
45.7383 160.729 44.3814 161.286 43.0611 161.918 cv
43.0982 162.086 43.1368 162.254 43.1719 162.422 cv
44.004 162.502 44.795 162.562 45.4835 162.531 cv
48.918 162.38 48.8096 161.805 52.5836 164.073 cv
52.9947 164.32 53.1866 164.819 53.7061 165.022 cv
54.8956 165.488 56.2437 165.17 57.3419 165.627 cv
57.6216 165.744 57.8546 165.914 58.0704 166.106 cv
57.6505 166.866 57.2882 167.683 56.9498 168.59 cv
56.6417 169.416 56.9688 170.259 57.5704 170.822 cv
59.4019 167.06 60.8458 163.187 61.2466 159.399 cv
60.5352 159.378 59.8238 159.354 59.1124 159.327 cv
cp
f
48.4034 170.504 mo
48.1715 168.923 46.0001 167.621 43.9234 167.219 cv
44.0836 168.701 44.1973 170.188 44.2647 171.679 cv
45.1133 172.066 46.0259 172.588 46.8931 172.486 cv
47.9918 172.357 48.5635 171.595 48.4034 170.504 cv
cp
.603922 .576471 .588235 rgb
f
37.4361 184.503 mo
36.4703 183.345 35.5093 182.182 34.5445 181.022 cv
33.2115 179.419 31.6861 176.791 29.7794 175.399 cv
29.2471 174.543 28.7681 173.661 28.3111 172.769 cv
27.3917 173.733 26.4971 174.727 25.6129 175.755 cv
26.0562 176.435 26.5137 177.107 26.9981 177.763 cv
27.9132 179.889 30.0792 181.925 31.4058 183.429 cv
33.3238 185.604 35.4439 187.588 37.6314 189.491 cv
37.5455 187.831 37.483 186.169 37.4361 184.503 cv
cp
f
52.5611 159.316 mo
50.7398 159.439 48.9307 159.716 47.1451 160.283 cv
47.0645 160.308 46.9869 160.34 46.9068 160.366 cv
47.3721 160.392 47.8384 160.412 48.3008 160.41 cv
48.4737 160.439 48.6465 160.461 48.8209 160.469 cv
49.0308 160.477 49.2232 160.458 49.4088 160.426 cv
50.5528 160.586 51.647 160.938 52.8043 161.044 cv
53.419 161.1 53.6046 160.313 53.2686 159.924 cv
53.0645 159.688 52.8204 159.493 52.5611 159.316 cv
cp
.113725 .117647 .113725 rgb
f
56.5103 162.902 mo
57.1534 163.061 57.2657 163.039 57.1207 163.854 cv
57.0347 164.335 56.8985 164.81 56.8013 165.289 cv
56.6881 165.848 57.0455 166.359 57.6324 166.38 cv
58.1539 166.398 58.878 166.286 59.3707 166.426 cv
59.4141 166.438 59.4454 166.444 59.4732 166.448 cv
59.7042 165.837 59.9229 165.224 60.1187 164.612 cv
59.5289 164.489 58.8321 164.552 58.2232 164.61 cv
58.1104 164.299 57.9991 163.989 57.9083 163.673 cv
57.8145 163.346 57.8262 162.868 57.5733 162.598 cv
57.4561 162.473 57.2755 162.421 57.1148 162.379 cv
56.4175 162.194 55.8292 162.204 55.2125 161.747 cv
54.9 161.516 54.5826 162.049 54.9049 162.274 cv
55.4351 162.643 55.9 162.752 56.5103 162.902 cv
cp
f
50.5508 166.976 mo
48.2432 166.976 48.2393 170.562 50.5508 170.562 cv
52.858 170.562 52.8619 166.976 50.5508 166.976 cv
cp
.317647 .290196 .301961 rgb
f
52.8839 169.743 mo
51.1348 169.743 51.1319 172.462 52.8839 172.462 cv
54.6334 172.462 54.6363 169.743 52.8839 169.743 cv
cp
f
48.483 187.019 mo
49.0894 185.987 49.6905 184.951 50.2857 183.911 cv
49.9923 183.622 49.585 183.429 49.0508 183.429 cv
46.8926 183.429 46.7051 186.477 48.483 187.019 cv
cp
f
45.0508 182.283 mo
44.834 182.283 44.6456 182.325 44.4732 182.386 cv
44.6192 183.446 44.7574 184.507 44.8795 185.571 cv
44.9366 185.576 44.9898 185.588 45.0508 185.588 cv
47.1773 185.588 47.1807 182.283 45.0508 182.283 cv
cp
f
27.7335 177.489 mo
29.98 175.124 32.2842 172.798 34.6583 170.551 cv
34.1402 173.25 33.6622 175.921 33.9791 178.843 cv
34.1861 180.756 34.4263 182.692 34.6915 184.628 cv
32.2452 182.379 29.8702 180.032 27.7335 177.489 cv
cp
39.6568 190.625 mo
38.9395 186.635 38.4044 182.345 37.9844 178.306 cv
37.5123 173.762 39.0982 169.687 39.5045 165.255 cv
39.6763 163.382 37.2755 162.816 36.0904 163.841 cv
31.6719 167.662 27.5103 171.853 23.5201 176.115 cv
22.5777 177.121 22.9561 178.397 23.7779 179.079 cv
25.0777 180.682 26.502 182.187 27.877 183.603 cv
30.3345 186.136 32.9625 188.741 35.7261 191.254 cv
35.7515 191.398 35.7735 191.545 35.7994 191.688 cv
36.0059 192.836 36.9117 193.237 37.7979 193.103 cv
37.8184 193.121 37.8384 193.139 37.859 193.158 cv
37.8575 193.136 37.857 193.114 37.8555 193.092 cv
38.9019 192.906 39.8995 191.978 39.6568 190.625 cv
cp
0 0 0 rgb
f
56.9024 165.955 mo
55.9659 167.64 54.9366 169.273 53.9703 170.941 cv
51.0342 176.011 48.3599 181.285 45.8145 186.578 cv
45.087 182.48 45.6675 178.632 46.2242 174.234 cv
46.3795 173.005 46.4659 171.783 46.5001 170.565 cv
47.1573 171.359 47.3023 172.454 47.3829 173.764 cv
47.5406 176.321 51.5416 176.339 51.3829 173.764 cv
51.1627 170.184 50.1622 167.169 46.5215 165.876 cv
46.4717 165.859 46.4127 165.845 46.3624 165.827 cv
46.2715 164.772 46.1441 163.717 45.983 162.661 cv
48.2769 161.842 50.734 161.845 53.1724 161.81 cv
53.8248 161.801 57.8731 161.465 58.754 161.753 cv
58.5889 162.19 58.3438 162.887 58.0157 163.851 cv
57.6719 164.567 57.3008 165.268 56.9024 165.955 cv
cp
63.1558 159.387 mo
63.0591 158.732 62.3673 158.144 61.7589 157.99 cv
58.7496 157.226 54.5274 157.707 51.4058 157.841 cv
48.3389 157.972 45.5137 158.305 42.752 159.721 cv
41.9175 160.148 41.6763 161.135 41.8326 161.979 cv
43.671 171.91 39.3707 181.518 42.9092 191.182 cv
43.1422 191.817 43.586 192.205 44.0938 192.397 cv
44.8394 193.58 46.6881 194.03 47.4376 192.435 cv
50.2623 186.427 53.2481 180.304 56.5284 174.53 cv
58.876 170.398 63.9073 164.488 63.1558 159.387 cv
cp
f
95.2862 207.373 mo
99.9356 203.011 104.285 198.364 109.119 194.25 cv
108.681 191.224 108.076 188.211 107.236 185.144 cv
103.953 184.705 102.34 182.891 100.715 180.583 cv
99.2589 186.766 95.6368 192.269 92.8072 197.971 cv
90.0382 203.549 86.4796 208.749 83.6705 214.298 cv
84.4854 214.815 85.3267 215.297 86.1842 215.761 cv
89.1202 212.885 92.2691 210.204 95.2862 207.373 cv
cp
.203922 .215686 .211765 rgb
f
109.934 202.893 mo
106.716 205.539 103.548 208.248 100.455 211.053 cv
97.7803 213.477 95.1944 215.998 92.609 218.518 cv
97.7911 220.239 104.213 221.477 110.469 221.335 cv
109.995 216.959 110.131 212.527 110.088 208.08 cv
110.071 206.317 110.018 204.595 109.934 202.893 cv
cp
f
94.3331 207.913 mo
94.4327 207.935 94.5338 207.952 94.6339 207.973 cv
94.8507 207.773 95.0709 207.576 95.2862 207.373 cv
96.397 206.331 97.4883 205.27 98.5748 204.206 cv
97.876 204.146 97.1715 204.117 96.4947 204.088 cv
95.9371 203.908 95.3726 203.743 94.774 203.659 cv
93.8941 203.534 93.1607 204.133 93.1749 204.923 cv
92.629 205.989 92.9337 207.608 94.3331 207.913 cv
cp
.317647 .290196 .301961 rgb
f
102.885 199.946 mo
102.883 199.959 102.883 199.973 102.882 199.986 cv
104.357 198.551 105.848 197.134 107.379 195.763 cv
106.026 195.896 104.705 196.138 103.397 196.531 cv
101.718 197.035 101.681 199.141 102.885 199.946 cv
cp
.14902 .156863 .152941 rgb
f
99.546 191.624 mo
100.966 192.138 102.148 191.724 103.323 191.122 cv
104.677 192.426 106.828 193.013 108.976 193.237 cv
108.724 191.631 108.415 190.024 108.053 188.411 cv
107.066 188.278 106.466 188.162 106.474 188.096 cv
106.641 186.641 104.885 185.491 103.597 185.904 cv
103.865 185.818 101.115 186.925 101.272 186.991 cv
101.201 186.961 101.08 186.738 100.939 186.453 cv
101.672 186.061 101.518 184.719 100.558 184.805 cv
100.489 184.795 100.42 184.785 100.351 184.776 cv
100.666 184.223 101.028 183.699 101.448 183.208 cv
101.73 182.823 101.843 182.439 101.847 182.076 cv
101.457 181.609 101.084 181.107 100.711 180.578 cv
100.007 183.566 98.8082 186.399 97.4239 189.168 cv
97.4542 189.157 97.4898 189.146 97.5196 189.135 cv
97.8843 189.968 98.3023 191.174 99.546 191.624 cv
cp
f
91.1856 211.111 mo
92.3502 210.063 93.5142 209.011 94.6651 207.945 cv
93.897 207.694 93.1226 207.43 92.3282 207.173 cv
92.1192 206.908 91.9376 206.625 91.8204 206.306 cv
91.4415 205.272 89.6998 205.008 89.4473 206.306 cv
89.0279 208.466 89.837 209.972 91.1856 211.111 cv
cp
f
105.735 214.201 mo
104.69 214.097 103.649 213.95 102.611 213.766 cv
103.435 213.509 104.281 213.153 105.177 212.692 cv
107.349 211.575 105.802 208.37 103.57 208.879 cv
103.298 208.941 103.038 208.968 102.773 209.01 cv
102.001 209.692 101.219 210.36 100.455 211.053 cv
97.6461 213.598 94.9351 216.251 92.2198 218.897 cv
95.795 220.067 99.6876 220.479 103.339 220.48 cv
105.356 220.481 107.849 220.544 110.361 220.363 cv
110.127 217.701 110.099 215.019 110.098 212.327 cv
108.574 212.869 107.084 213.462 105.735 214.201 cv
cp
f
90.13 212.069 mo
88.7125 211.43 87.3033 210.782 85.8057 210.342 cv
85.1553 211.486 84.5216 212.638 83.9195 213.804 cv
84.6046 214.547 85.3526 215.206 86.1426 215.803 cv
87.44 214.53 88.7774 213.293 90.13 212.069 cv
cp
f
100.926 193.827 mo
98.5884 193.827 98.5845 197.46 100.926 197.46 cv
103.263 197.46 103.267 193.827 100.926 193.827 cv
cp
f
94.8389 207.785 mo
94.9874 207.647 95.1383 207.512 95.2862 207.373 cv
96.0655 206.642 96.8355 205.902 97.6011 205.159 cv
96.9796 205.025 96.3453 204.909 95.7784 204.676 cv
94.2755 204.057 93.2388 206.261 94.2618 207.281 cv
94.4317 207.451 94.6275 207.62 94.8389 207.785 cv
cp
.603922 .576471 .588235 rgb
f
84.4742 216.576 mo
84.711 216.641 84.9488 216.701 85.1856 216.764 cv
85.9844 215.953 86.8004 215.157 87.6314 214.375 cv
87.1944 214.19 86.7794 214.232 86.4488 214.423 cv
86.0152 214.326 85.5806 214.233 85.147 214.135 cv
83.564 213.774 82.8966 216.139 84.4742 216.576 cv
cp
.113725 .117647 .113725 rgb
f
109.794 217.264 mo
108.459 217.245 107.117 217.28 105.823 217.219 cv
104.356 217.149 102.887 217.091 101.418 217.033 cv
101.365 216.064 100.736 215.268 99.7574 215.111 cv
99.8038 214.928 99.8033 214.735 99.7457 214.543 cv
99.7725 214.57 li
99.7608 214.526 99.7379 214.489 99.7213 214.448 cv
99.7208 214.448 li
99.4805 213.849 98.7774 213.565 98.2076 213.815 cv
98.1968 213.817 98.1856 213.818 98.1744 213.82 cv
98.0152 213.75 97.8531 213.685 97.6929 213.617 cv
97.4737 213.824 97.2564 214.033 97.0386 214.241 cv
97.2042 214.351 97.4156 214.464 97.5772 214.596 cv
97.5469 214.746 97.5499 214.896 97.5787 215.044 cv
97.358 215.115 97.1524 215.242 97.0186 215.484 cv
96.9493 215.532 96.9249 215.585 96.9454 215.644 cv
96.8282 215.776 96.7418 215.917 96.6851 216.063 cv
96.607 216.172 96.5377 216.287 96.4869 216.411 cv
95.9781 216.357 95.4791 216.289 94.9918 216.203 cv
93.7872 217.37 92.5865 218.541 91.3848 219.71 cv
91.4263 219.722 91.4634 219.74 91.5079 219.749 cv
91.7574 219.798 92.0045 219.844 92.2535 219.893 cv
93.7925 220.601 95.6758 221.789 97.3267 221.094 cv
97.4498 221.042 97.5601 220.972 97.6627 220.894 cv
100.053 221.3 102.45 221.649 104.895 221.877 cv
106.728 222.049 108.682 222.367 110.6 222.441 cv
110.356 220.626 110.23 218.799 110.168 216.966 cv
110.035 217.057 109.902 217.151 109.794 217.264 cv
cp
f
107.689 189.826 mo
105.964 189.087 104.234 189.081 102.451 188.576 cv
101.065 188.184 99.7877 187.517 98.4698 186.973 cv
98.1514 187.677 97.8194 188.376 97.4732 189.07 cv
99.1622 189.805 100.598 190.924 102.489 191.293 cv
104.342 191.654 105.965 191.536 107.689 190.758 cv
108.037 190.6 108.047 189.98 107.689 189.826 cv
cp
f
98.2174 194.587 mo
95.6236 194.587 95.6192 198.618 98.2174 198.618 cv
100.811 198.618 100.815 194.587 98.2174 194.587 cv
cp
.317647 .290196 .301961 rgb
f
107.238 185.148 mo
104.853 184.831 103.348 183.788 102.085 182.355 cv
102.121 183.433 102.827 184.484 104.217 184.484 cv
104.273 184.484 104.319 184.471 104.372 184.469 cv
104.68 185.108 105.29 185.592 106.217 185.592 cv
106.639 185.592 106.992 185.489 107.285 185.32 cv
107.27 185.263 107.253 185.205 107.238 185.148 cv
cp
f
107.384 207.23 mo
104.76 207.23 104.755 211.308 107.384 211.308 cv
110.008 211.308 110.012 207.23 107.384 207.23 cv
cp
f
113.551 204.886 mo
113.486 204.886 113.486 204.986 113.551 204.986 cv
113.615 204.986 113.615 204.886 113.551 204.886 cv
cp
f
106.884 219.052 mo
106.82 219.052 106.819 219.152 106.884 219.152 cv
106.948 219.152 106.948 219.052 106.884 219.052 cv
cp
.203922 .215686 .211765 rgb
f
99.2174 216.447 mo
97.3023 216.447 97.2989 219.424 99.2174 219.424 cv
101.133 219.424 101.136 216.447 99.2174 216.447 cv
cp
f
100.997 198.833 mo
100.37 199.418 97.5308 202.409 94.4156 205.571 cv
94.1114 205.185 93.8262 204.753 93.5772 204.237 cv
93.2847 203.632 92.8326 203.328 92.3453 203.243 cv
96.2164 196.981 100.192 190.771 103.377 184.194 cv
104.359 185.154 105.352 186.088 105.982 187.334 cv
108.735 192.767 104.414 195.644 100.997 198.833 cv
cp
86.5831 213.013 mo
87.7701 210.844 89.0201 208.705 90.3033 206.581 cv
90.67 207.277 91.0909 207.892 91.5587 208.431 cv
89.6207 210.34 87.8092 212.044 86.5831 213.013 cv
cp
109.344 184.798 mo
108.184 182.626 105.87 181.736 104.614 179.519 cv
103.933 178.317 101.781 178.114 101.16 179.519 cv
95.8536 191.515 87.5963 202.138 81.6177 213.838 cv
81.253 214.551 81.338 215.239 81.6632 215.779 cv
81.753 216.082 81.9283 216.38 82.234 216.65 cv
82.3111 216.718 82.3834 216.774 82.4586 216.838 cv
82.4351 216.89 82.4092 216.941 82.3858 216.993 cv
82.9107 217.349 83.4415 217.69 83.9737 218.028 cv
84.0064 217.993 84.0421 217.96 84.0753 217.925 cv
85.795 218.718 87.1138 217.972 89.0914 216.181 cv
93.7593 211.952 97.9796 207.258 102.521 202.899 cv
105.712 199.835 110.752 197.076 110.78 192.124 cv
110.792 189.961 110.341 186.663 109.344 184.798 cv
cp
0 0 0 rgb
f
95.8287 219.243 mo
95.6461 219.192 95.4683 219.129 95.2872 219.074 cv
97.3819 217.116 99.6148 215.264 101.617 213.225 cv
103.632 211.174 105.633 209.115 107.699 207.12 cv
107.754 209.132 107.726 211.184 107.881 213.113 cv
108.066 215.415 107.772 217.691 107.777 219.982 cv
103.772 220.367 99.7745 220.349 95.8287 219.243 cv
cp
111.826 221.459 mo
111.35 215.137 112.178 208.618 111.283 202.318 cv
111.054 200.709 108.933 200.557 107.94 201.435 cv
104.735 204.268 101.783 207.347 98.7886 210.397 cv
96.0098 213.226 92.7745 215.694 90.1002 218.592 cv
89.3487 219.407 89.4478 220.395 89.941 221.106 cv
89.897 221.149 89.8536 221.192 89.8096 221.234 cv
89.9395 221.294 90.0684 221.356 90.1973 221.418 cv
90.5899 221.815 91.1187 222.056 91.6617 222.036 cv
98.0128 224.486 104.329 224.251 110.754 223.474 cv
110.742 223.399 110.735 223.324 110.723 223.249 cv
111.395 223.004 111.898 222.41 111.826 221.459 cv
cp
f
169.668 201.286 mo
169.679 198.811 169.663 195.653 170.221 192.721 cv
168.053 193.218 165.903 193.805 163.784 194.495 cv
163.881 195.938 163.959 197.409 164.014 198.935 cv
164.209 204.346 163.823 209.804 164.448 215.158 cv
166.268 214.979 168.045 214.656 169.756 214.19 cv
169.421 209.888 169.648 205.479 169.668 201.286 cv
cp
.203922 .215686 .211765 rgb
f
188.262 190.851 mo
185.956 190.805 183.653 190.879 181.359 191.048 cv
181.15 195.214 181.371 199.391 181.212 203.583 cv
181.105 206.445 180.9 209.299 180.716 212.154 cv
187.315 210.109 193.895 205.784 196.647 200.246 cv
197.76 198.005 198.48 195.471 198.899 192.797 cv
195.56 191.381 191.881 190.922 188.262 190.851 cv
cp
f
169.657 202.347 mo
169.521 202.19 169.373 202.042 169.195 201.926 cv
168.809 201.674 168.406 201.563 167.982 201.496 cv
167.562 200.664 166.898 200.098 166.122 199.568 cv
165.503 199.145 164.681 199.197 164.03 199.537 cv
164.085 201.446 164.076 203.359 164.069 205.272 cv
164.08 205.284 164.086 205.299 164.097 205.311 cv
164.088 205.314 164.079 205.317 164.069 205.32 cv
164.06 208.226 164.067 211.128 164.328 214.004 cv
165.651 213.773 166.93 213.444 168.086 212.945 cv
168.593 213.124 169.136 213.244 169.693 213.339 cv
169.469 209.671 169.615 205.941 169.657 202.347 cv
cp
.14902 .156863 .152941 rgb
f
188.262 190.851 mo
187.177 190.829 186.093 190.833 185.01 190.859 cv
184.636 193.06 183.628 194.896 182.71 196.807 cv
182.228 197.049 181.745 197.289 181.263 197.532 cv
181.274 199.546 181.289 201.563 181.212 203.583 cv
181.107 206.386 180.908 209.18 180.728 211.974 cv
182.188 211.585 183.569 211.021 184.863 210.302 cv
185.202 210.156 185.527 210.012 185.835 209.872 cv
191.205 207.43 195.017 203.38 195.886 197.62 cv
196.062 196.974 196.203 196.281 196.326 195.568 cv
196.9 194.551 197.336 193.434 197.639 192.309 cv
194.646 191.273 191.431 190.913 188.262 190.851 cv
cp
f
169.573 209.171 mo
167.753 209.437 165.93 209.68 164.102 209.871 cv
164.154 212.023 164.287 214.165 164.595 216.29 cv
165.691 216.112 166.747 215.777 167.725 215.188 cv
167.835 215.121 167.93 215.045 168.011 214.96 cv
168.609 214.901 169.206 214.833 169.803 214.772 cv
169.635 212.919 169.579 211.043 169.573 209.171 cv
cp
.113725 .117647 .113725 rgb
f
191.088 191 mo
190.621 192.754 190.487 195.178 190.36 195.433 cv
189.352 197.463 187.544 200.347 185.916 202.261 cv
185.537 202.104 185.087 202.111 184.624 202.399 cv
183.47 203.116 182.317 203.833 181.163 204.55 cv
181.042 207.254 180.858 209.954 180.688 212.654 cv
180.796 212.553 180.914 212.466 181.014 212.35 cv
181.142 212.315 181.268 212.273 181.396 212.235 cv
183.547 211.838 185.587 211.145 187.181 209.617 cv
187.185 209.614 187.187 209.609 187.191 209.605 cv
187.503 209.402 187.815 209.204 188.118 208.982 cv
191.037 206.838 194.565 203.544 194.195 199.622 cv
194.426 199.26 194.663 198.901 194.888 198.536 cv
195.7 197.219 196.102 195.837 196.466 194.434 cv
197.386 194.43 198.287 193.625 198.509 192.771 cv
198.52 192.728 198.526 192.685 198.537 192.643 cv
196.169 191.695 193.64 191.214 191.088 191 cv
cp
f
182.217 205.65 mo
181.207 205.65 181.205 207.221 182.217 207.221 cv
183.228 207.221 183.23 205.65 182.217 205.65 cv
cp
.203922 .215686 .211765 rgb
f
189.384 199.447 mo
187.469 199.447 187.465 202.424 189.384 202.424 cv
191.299 202.424 191.302 199.447 189.384 199.447 cv
cp
f
190.717 194.079 mo
188.757 194.079 188.753 197.126 190.717 197.126 cv
192.678 197.126 192.681 194.079 190.717 194.079 cv
cp
f
195.353 197.91 mo
193.92 201.992 191.395 205.851 187.836 208.386 cv
186.3 209.48 184.669 210.179 182.977 210.656 cv
182.974 204.779 183.428 198.912 183.414 193.035 cv
185.411 192.846 187.409 192.753 189.423 192.814 cv
190.662 192.851 195.753 194.019 196.6 193.117 cv
196.303 194.746 195.9 196.35 195.353 197.91 cv
cp
181.402 189.256 mo
180.346 189.387 179.378 190.066 179.402 191.256 cv
179.55 198.504 178.824 205.732 179.001 212.98 cv
179.027 214.055 179.743 214.676 180.562 214.852 cv
180.559 214.899 180.556 214.945 180.553 214.992 cv
180.7 214.965 180.845 214.934 180.991 214.907 cv
181.329 214.915 181.664 214.846 181.964 214.708 cv
187.097 213.595 191.623 211.507 195.386 206.386 cv
197.974 202.864 199.517 198.832 200.349 194.615 cv
200.454 194.427 200.537 194.212 200.576 193.949 cv
201.631 186.778 185.091 188.798 181.402 189.256 cv
cp
0 0 0 rgb
f
168.605 212.6 mo
168.003 212.691 167.399 212.785 166.796 212.88 cv
166.502 207.142 166.577 201.463 166.178 195.73 cv
167.094 195.307 168.01 195.018 168.957 194.802 cv
168.438 200.786 168.72 206.58 168.605 212.6 cv
cp
170.675 190.457 mo
167.933 190.85 165.489 191.419 163.088 192.829 cv
162.518 193.163 162.041 193.869 162.097 194.556 cv
162.659 201.432 162.441 208.226 162.929 215.118 cv
163.009 216.242 163.83 216.874 164.708 217.011 cv
164.711 217.037 164.714 217.063 164.718 217.088 cv
164.836 217.072 164.956 217.056 165.074 217.04 cv
165.26 217.04 165.442 217.011 165.619 216.966 cv
166.635 216.825 167.657 216.686 168.681 216.548 cv
169.023 216.662 169.427 216.66 169.879 216.49 cv
170.289 216.337 170.697 216.184 171.106 216.031 cv
171.965 215.709 172.545 215.045 172.574 214.102 cv
172.8 206.933 172.17 200.089 173.135 192.917 cv
173.352 191.309 172.294 190.224 170.675 190.457 cv
cp
f
161.845 73.9466 mo
158.819 71.8113 156.049 68.6546 152.615 67.2137 cv
151.348 66.6819 151.403 65.0301 152.196 64.4271 cv
152.069 64.3543 151.949 64.2713 151.823 64.1961 cv
148.237 65.741 145.261 67.8543 144.627 71.1678 cv
144.534 71.6507 144.275 71.9529 143.95 72.1121 cv
145.421 74.1971 146.717 76.2064 149.071 76.9344 cv
149.728 76.3079 150.996 76.2835 151.502 77.2342 cv
153.06 77.2269 154.621 77.0892 156.18 77.1024 cv
159.383 77.1292 162.465 77.0418 165.532 76.5721 cv
164.303 75.6937 163.075 74.8143 161.845 73.9466 cv
cp
.203922 .215686 .211765 rgb
f
186.371 68.5052 mo
185.272 63.0467 183.42 56.3924 179.857 51.9617 cv
179.678 51.5335 179.478 51.118 179.271 50.7069 cv
174.544 54.2884 169.771 57.785 164.262 60.0589 cv
164.047 60.1478 163.82 60.2347 163.587 60.3216 cv
165.417 62.0491 167.194 63.8304 169.019 65.5667 cv
170.302 66.5203 171.496 67.6238 172.702 68.7215 cv
173.157 69.1351 173.61 69.5535 174.063 69.97 cv
175.239 70.8987 176.426 71.7991 177.591 72.72 cv
180.284 71.553 182.942 70.3035 185.648 69.1458 cv
185.943 69.0198 186.256 68.907 186.568 68.7938 cv
186.5 68.6995 186.444 68.596 186.371 68.5052 cv
cp
f
161.845 73.9466 mo
160.792 73.2034 159.77 72.3358 158.74 71.4608 cv
158.146 71.7425 157.593 72.1102 157.121 72.5731 cv
155.203 74.452 157.692 77.8128 160.025 76.3377 cv
160.235 76.2049 160.425 76.0853 160.613 75.9734 cv
160.964 75.8773 161.313 75.8128 161.662 75.7903 cv
162.53 75.9417 163.359 76.0672 164.337 75.9276 cv
164.409 75.9173 164.476 75.8909 164.545 75.8699 cv
163.645 75.2264 162.746 74.5823 161.845 73.9466 cv
cp
.317647 .290196 .301961 rgb
f
162.092 74.1229 mo
161.399 74.304 160.726 74.5711 160.079 74.9129 cv
159.582 75.1751 159.122 75.5379 158.601 75.7552 cv
157.338 75.7264 156.08 75.6028 154.94 75.5296 cv
153.803 75.4564 153.055 76.2591 152.802 77.2073 cv
153.928 77.1629 155.055 77.0926 156.18 77.1024 cv
159.378 77.1292 162.456 77.034 165.518 76.5623 cv
164.376 75.7464 163.235 74.931 162.092 74.1229 cv
cp
.14902 .156863 .152941 rgb
f
182.019 57.3563 mo
181.754 56.9671 181.277 56.6795 180.791 56.6131 cv
180.058 54.8621 179.123 53.1575 178.273 51.4603 cv
175.592 53.4774 172.878 55.4373 170.011 57.1424 cv
169.978 57.8113 169.826 58.5496 169.895 59.0262 cv
169.917 59.1839 169.952 59.3328 169.991 59.4783 cv
168.169 58.4944 166.114 59.6502 164.137 60.8328 cv
165.209 61.8572 166.269 62.8948 167.331 63.9305 cv
167.524 63.743 167.669 63.575 167.693 63.4686 cv
167.965 63.7083 168.364 64.2088 168.702 64.1902 cv
169.599 64.1409 170.345 64.0892 171.062 63.9554 cv
171.095 64.1234 171.129 64.2899 171.17 64.4476 cv
171.381 65.264 172.086 65.992 172.914 66.1902 cv
173.362 66.2982 173.779 66.2567 174.181 66.1707 cv
174.163 66.3304 174.152 66.452 174.147 66.5013 cv
174.028 67.6185 174.946 68.4461 175.859 68.847 cv
175.727 69.0003 175.671 69.2723 175.701 69.6795 cv
175.532 70.3016 175.578 70.845 175.765 71.2962 cv
176.358 71.7547 176.949 72.2137 177.535 72.6766 cv
177.568 72.6834 177.599 72.6966 177.632 72.7025 cv
180.311 71.5403 182.957 70.2972 185.648 69.1458 cv
186.152 68.93 186.69 68.7401 187.239 68.5569 cv
186.002 64.5364 184.22 60.596 182.019 57.3563 cv
cp
f
152.615 67.2137 mo
152.521 67.1741 152.449 67.118 152.37 67.0672 cv
152.098 67.2742 151.824 67.473 151.554 67.7054 cv
150.136 67.0955 148.142 67.4036 146.113 68.0667 cv
145.376 68.9686 144.852 69.9915 144.627 71.1678 cv
144.534 71.6507 144.275 71.9529 143.95 72.1121 cv
144.182 72.4407 144.41 72.7674 144.637 73.0882 cv
146.911 72.1307 149.381 71.1439 149.405 71.3177 cv
149.622 72.8558 151.963 73.3636 152.918 72.2449 cv
154.198 70.743 155.123 70.0989 156.408 69.5428 cv
155.209 68.6136 153.963 67.7796 152.615 67.2137 cv
cp
f
161.845 73.9466 mo
160.77 73.1878 159.727 72.2991 158.674 71.4051 cv
158.068 72.0662 157.939 73.0814 158.375 73.8865 cv
158.714 74.514 159.461 74.6019 160.007 74.306 cv
160.033 74.3065 160.058 74.3069 160.074 74.3069 cv
160.285 74.3055 160.498 74.3123 160.709 74.3089 cv
161.139 74.3011 161.559 74.1951 161.926 74.0042 cv
161.899 73.9852 161.872 73.9656 161.845 73.9466 cv
cp
.603922 .576471 .588235 rgb
f
178.181 59.7488 mo
177.492 59.2405 176.121 59.6541 175.86 58.9056 cv
175.722 58.5111 175.352 58.1448 174.899 58.1741 cv
174.768 58.1829 174.633 58.2117 174.5 58.2298 cv
174.807 58.0555 175.086 57.8362 175.343 57.5882 cv
175.515 57.7913 175.697 57.9857 175.906 58.16 cv
176.637 58.7684 177.653 57.803 176.967 57.0989 cv
176.85 56.7137 176.732 56.3279 176.614 55.9422 cv
176.855 55.2205 176.308 54.6263 175.666 54.5081 cv
175.771 54.2332 175.837 53.9652 175.908 53.6961 cv
176.421 54.8089 176.925 55.8328 177.254 56.6385 cv
177.7 57.7298 178.121 58.931 178.573 60.1463 cv
178.457 59.9984 178.332 59.8602 178.181 59.7488 cv
cp
183.925 63.5882 mo
183.223 61.221 181.921 58.9432 180.946 56.7547 cv
180.136 54.9373 179.317 53.1229 178.431 51.3406 cv
176.374 52.8904 174.297 54.4066 172.151 55.806 cv
171.94 56.6649 171.974 57.4764 172.672 58.1077 cv
172.891 58.306 173.138 58.4168 173.395 58.4647 cv
171.595 58.9896 169.732 60.0921 168.166 60.7884 cv
167.241 61.2005 166.327 61.6385 165.409 62.0672 cv
165.87 62.5159 166.334 62.9608 166.794 63.4105 cv
167.567 63.077 168.339 62.7405 169.112 62.4075 cv
169.855 62.0882 174.053 59.9744 173.956 59.9339 cv
174.027 59.9632 173.945 60.7874 174.267 60.8856 cv
176.335 61.5169 176.973 63.9593 179.419 64.0233 cv
179.68 64.0301 179.909 63.9031 180.081 63.7191 cv
180.569 64.7005 181.113 65.6326 181.767 66.4442 cv
182.144 67.7469 182.499 69.0594 182.829 70.387 cv
183.765 69.9671 184.703 69.5501 185.648 69.1458 cv
185.826 69.0696 186.019 69.0047 186.203 68.9339 cv
185.53 67.1185 184.74 65.3201 183.925 63.5882 cv
cp
.113725 .117647 .113725 rgb
f
181.834 67.8465 mo
181.507 68.0257 li
181.427 68.0701 181.498 68.1854 181.578 68.1473 cv
181.691 68.0941 181.803 68.0413 181.916 67.9881 cv
182.01 67.9437 181.927 67.7952 181.834 67.8465 cv
cp
.203922 .215686 .211765 rgb
f
177.551 64.5521 mo
177.486 64.5521 177.486 64.6522 177.551 64.6522 cv
177.615 64.6522 177.615 64.5521 177.551 64.5521 cv
cp
f
175.717 57.0306 mo
174.767 57.0306 174.766 58.5071 175.717 58.5071 cv
176.668 58.5071 176.669 57.0306 175.717 57.0306 cv
cp
f
173.792 66.221 mo
171.702 64.283 169.398 62.5887 167.055 60.9622 cv
171.148 58.4959 175.195 55.9598 179.193 53.3411 cv
181.388 57.9095 183.341 62.5906 184.872 67.4202 cv
183.003 68.2645 180.99 69.1546 179.096 69.5345 cv
176.338 70.0872 175.642 67.9378 173.792 66.221 cv
cp
188.941 67.0687 mo
187.174 61.2977 184.802 55.7039 182.145 50.2845 cv
182.102 48.8963 180.694 47.5672 179.216 48.5506 cv
173.687 52.2274 168.062 55.7366 162.35 59.1214 cv
160.994 59.9251 161.126 61.744 162.35 62.5755 cv
165.321 64.5936 168.315 66.6111 170.963 69.0496 cv
172.423 70.3939 173.745 72.7899 175.538 73.6649 cv
179.157 75.43 185.291 71.5438 188.627 70.0975 cv
190.074 69.47 189.861 67.93 188.941 67.0687 cv
cp
0 0 0 rgb
f
153.318 74.2176 mo
151.203 74.2552 147.5 74.7318 146.748 71.8846 cv
147.021 69.5892 148.082 67.9759 149.93 67.0452 cv
150.205 66.9993 150.436 66.9324 150.624 66.8436 cv
150.991 68.3143 151.92 69.5394 153.472 70.4925 cv
153.902 70.7567 154.331 71.0047 154.76 71.2498 cv
154.722 71.2884 154.677 71.3182 154.64 71.3577 cv
153.74 72.306 154.028 73.5013 154.76 74.2049 cv
154.28 74.2098 153.799 74.2093 153.318 74.2176 cv
cp
157.469 74.1863 mo
157.8 73.8377 158.169 73.5604 158.556 73.3279 cv
159.084 73.6155 159.607 73.9105 160.128 74.2117 cv
159.238 74.201 158.349 74.1966 157.46 74.1937 cv
157.463 74.1912 157.466 74.1893 157.469 74.1863 cv
cp
167.902 74.91 mo
165.977 73.1478 163.947 71.5242 161.712 70.1649 cv
160.282 69.2947 154.038 67.3646 154.407 65.0477 cv
154.5 64.4686 154.36 63.97 154.096 63.5692 cv
154.075 62.9847 153.805 62.4051 153.171 62.0037 cv
150.704 60.4393 146.919 64.0755 145.205 65.4964 cv
142.9 67.407 141.623 70.033 142.815 72.9559 cv
143.927 75.6878 146.134 77.9979 149.117 78.3182 cv
154.717 78.9193 160.83 78.2088 166.488 78.3245 cv
168.177 78.3587 169.185 76.0843 167.902 74.91 cv
cp
f
74.838 19.7327 mo
75.9898 14.8675 76.773 8.76886 78.6934 3.67169 cv
75.9717 5.19709 73.5469 8.15656 71.4512 10.1649 cv
70.9942 10.5643 70.6553 11.0086 70.4102 11.4778 cv
70.2603 11.6517 70.1124 11.827 69.9664 12.0027 cv
69.3487 11.8602 68.7056 11.8353 68.067 11.9788 cv
62.9063 13.137 57.8238 15.9173 53.3775 19.5633 cv
56.5674 23.9373 60.9527 27.3773 64.3814 31.7318 cv
65.8922 33.6507 67.192 35.7381 68.503 37.8055 cv
70.1075 31.6151 72.505 25.6819 74.838 19.7327 cv
cp
.203922 .215686 .211765 rgb
f
110.73 21.9949 mo
110.325 20.9578 109.662 20.2386 108.892 19.7733 cv
107.44 16.3963 105.731 13.2137 102.598 10.8631 cv
97.9073 7.34406 92.1656 6.5882 86.918 4.38996 cv
86.7281 4.31037 86.5587 4.22882 86.377 4.14777 cv
85.0123 8.86408 83.5953 13.5701 82.4449 18.345 cv
80.877 24.8563 79.1456 31.3236 77.2999 37.7596 cv
78.0382 37.0599 79.4757 37.0926 79.793 38.3685 cv
79.8682 38.6702 80.0108 38.9315 80.1807 39.1736 cv
81.2613 39.6404 82.3204 40.3182 83.1436 40.8758 cv
86.6817 38.9149 90.9551 37.7264 94.0953 36.7073 cv
101.155 34.4163 106.963 30.2454 112.749 25.9627 cv
112.012 24.6907 111.282 23.4061 110.73 21.9949 cv
cp
f
74.9185 19.3782 mo
75.9551 14.8802 76.7125 9.39972 78.3419 4.63556 cv
77.2247 5.49689 76.1417 6.48273 74.9493 7.24298 cv
72.8126 8.60382 70.9713 10.0145 69.2364 11.5882 cv
65.5084 13.2928 61.8458 15.6688 58.4146 17.5428 cv
57.9044 17.8211 57.4039 18.1097 56.9117 18.407 cv
56.1304 18.7864 55.3707 19.2069 54.6651 19.7288 cv
54.4141 19.9144 54.1793 20.1136 53.9478 20.3162 cv
55.502 22.3148 57.2872 24.1351 59.0894 25.9603 cv
59.1988 25.8631 59.3077 25.7654 59.4175 25.6683 cv
60.5953 25.179 61.7266 24.6019 62.8253 23.9661 cv
66.7564 22.6204 70.7213 21.2938 74.481 19.6019 cv
74.6343 19.533 74.7696 19.4505 74.9185 19.3782 cv
cp
.317647 .290196 .301961 rgb
f
102.829 12.244 mo
102.862 11.6512 102.608 11.0267 102.084 10.7679 cv
101.514 10.4866 100.934 10.2327 100.355 9.97492 cv
99.023 9.10334 97.523 8.50128 96.2032 8.24933 cv
94.8707 7.72541 93.5377 7.20441 92.2208 6.64923 cv
92.21 6.62482 92.1983 6.60187 92.1866 6.57843 cv
92.2623 6.47638 92.3414 6.37873 92.4005 6.25812 cv
92.5767 5.89777 92.4688 5.56427 92.1568 5.32843 cv
91.0631 4.50128 90.0484 4.92023 88.7535 4.66095 cv
88.1588 4.54181 87.6217 4.32892 87.0919 4.11066 cv
86.8912 3.99201 86.6925 3.86896 86.4918 3.75031 cv
85.5186 7.12335 84.5201 10.4915 83.6002 13.8807 cv
85.025 13.2059 86.4732 12.6151 87.9073 11.8001 cv
88.2047 11.8353 88.503 11.8631 88.7999 11.9007 cv
89.544 11.994 90.0391 11.6849 90.316 11.2191 cv
91.4678 11.4705 92.608 11.8743 93.7423 12.4969 cv
95.5084 13.4656 97.377 14.3489 99.0616 13.6155 cv
99.1768 13.6473 99.2906 13.6868 99.4068 13.7112 cv
99.8863 14.575 100.212 15.5008 100.786 16.3069 cv
101.729 17.6292 103.946 17.2415 103.961 15.4471 cv
103.972 14.2786 103.533 13.1986 102.829 12.244 cv
cp
f
93.1798 31.9583 mo
92.3897 30.2025 90.8311 30.3665 89.7349 30.116 cv
89.1944 29.9925 88.6475 29.5301 88.0465 29.3948 cv
86.918 29.1414 85.6309 29.4251 84.5059 29.5555 cv
82.8409 29.7479 81.0201 30.0535 79.2945 30.6019 cv
78.7349 32.6653 78.1607 34.7244 77.5753 36.7806 cv
78.6822 37.2337 79.8555 37.075 81.2213 36.6844 cv
84.6324 35.7098 87.4903 35.1903 91.0557 35.6595 cv
93.1143 35.9305 93.8384 33.4217 93.1798 31.9583 cv
cp
f
79.793 38.3685 mo
79.8682 38.6702 80.0108 38.9315 80.1807 39.1736 cv
81.2569 39.639 82.3126 40.3133 83.1348 40.8699 cv
86.5089 39.0057 90.544 37.8406 93.6343 36.8543 cv
93.4913 36.6761 93.3336 36.5086 93.1461 36.3714 cv
93.2266 35.3685 92.7447 34.3983 91.4781 34.1927 cv
86.9464 33.4573 82.6671 36.0853 78.2794 35.2518 cv
78.1885 35.2347 78.1007 35.2342 78.0118 35.2278 cv
77.7716 36.0819 77.5181 36.9319 77.2735 37.785 cv
78.0035 37.0589 79.4717 37.077 79.793 38.3685 cv
cp
.14902 .156863 .152941 rgb
f
95.0025 19.2894 mo
94.3062 18.0989 92.7227 17.8397 91.501 18.2269 cv
90.7115 18.4774 89.6925 19.0941 88.8912 19.8851 cv
87.2828 19.7747 86.6187 21.786 87.6397 22.8348 cv
87.6846 23.0447 87.754 23.2532 87.8731 23.4573 cv
88.6392 24.7669 90.3824 24.3963 91.4229 23.7005 cv
91.4376 23.6907 91.4512 23.679 91.4659 23.6693 cv
92.4752 23.5755 93.4532 23.2708 94.2081 22.6986 cv
95.2633 21.8992 95.7003 20.4827 95.0025 19.2894 cv
cp
f
98.6851 34.8865 mo
103.462 32.6668 107.726 29.6668 111.944 26.5574 cv
111.267 24.9593 110.596 23.3597 109.925 21.7625 cv
109.359 18.6951 108.163 16.074 106.216 13.2943 cv
105.134 11.7503 102.345 12.6258 102.989 14.6546 cv
103.807 17.2298 104.67 19.7889 105.582 22.3299 cv
105.714 22.9383 105.859 23.5477 106.006 24.157 cv
104.056 23.5252 101.626 25.4739 101.212 27.5701 cv
101.144 27.9212 101.138 28.2742 101.183 28.6155 cv
99.9224 29.3582 98.7818 30.5218 98.0826 31.4041 cv
96.9893 32.784 97.5616 34.3069 98.6851 34.8865 cv
cp
f
84.4986 30.6717 mo
82.7056 30.4993 80.7828 31.2996 79.1065 31.8514 cv
79.0396 31.8734 78.9923 31.9168 78.9342 31.949 cv
78.7784 32.5159 78.6138 33.0804 78.4566 33.6473 cv
78.627 33.9622 78.94 34.1819 79.4151 34.1302 cv
81.2027 33.9359 83.168 34.1478 84.8995 33.6365 cv
86.609 33.1317 86.1446 30.8304 84.4986 30.6717 cv
cp
.603922 .576471 .588235 rgb
f
76.4049 12.1317 mo
76.8013 10.2083 77.2432 8.26935 77.7882 6.4007 cv
77.7271 6.46076 77.6646 6.50763 77.6036 6.56964 cv
77.5938 6.5799 77.5914 6.5921 77.5821 6.60285 cv
77.4102 6.44416 77.1885 6.3382 76.9195 6.35089 cv
71.5709 6.60822 66.2896 10.7274 61.7125 14.012 cv
61.0709 13.8763 60.3951 14.0745 59.8204 14.532 cv
58.6675 15.4495 57.607 16.4608 56.609 17.5301 cv
55.5577 18.2718 54.546 19.0291 53.5699 19.8172 cv
54.6177 21.222 55.7828 22.5355 56.9996 23.8148 cv
57.3497 23.4412 57.6968 23.0711 58.0489 22.6942 cv
58.5186 22.1912 59.6378 21.2484 60.7237 20.1429 cv
62.2911 19.3314 63.8585 18.5194 65.4049 17.6727 cv
67.773 16.3758 70.503 15.2933 72.6671 13.6248 cv
73.9249 13.1404 75.1656 12.6404 76.4049 12.1317 cv
cp
f
95.0718 6.53302 mo
95.1197 6.20343 95.022 5.85382 94.7637 5.55695 cv
93.0508 3.58771 89.2535 3.52863 86.5743 3.46564 cv
86.0904 5.14533 85.6002 6.82404 85.1129 8.50373 cv
85.73 8.22296 86.3267 7.9173 86.8394 7.53791 cv
88.7808 8.02277 90.6173 8.85041 92.4962 9.86994 cv
94.4434 10.9261 96.3585 12.8748 98.5909 11.7161 cv
98.9205 11.5452 99.107 11.1639 99.1133 10.8055 cv
99.149 8.75861 97.0928 7.45734 95.0718 6.53302 cv
cp
f
107.611 27.8699 mo
107.523 27.8177 106.986 29.6019 106.799 30.2112 cv
108.541 29.0379 110.248 27.8079 111.944 26.5569 cv
111.928 26.5286 111.913 26.4998 111.897 26.472 cv
111.645 26.0267 111.374 25.5931 111.085 25.1717 cv
110.978 24.8001 110.839 24.5965 110.671 24.5418 cv
110.688 24.2405 110.562 23.9793 110.246 23.8773 cv
110.184 23.8572 110.121 23.8367 110.058 23.8167 cv
109.682 23.6951 109.288 23.9598 109.178 24.3167 cv
109.078 24.64 109.032 24.9925 109.022 25.3616 cv
107.419 24.5262 106.03 26.9276 107.611 27.8699 cv
cp
.113725 .117647 .113725 rgb
f
79.793 38.3685 mo
79.8682 38.6702 80.0108 38.9315 80.1807 39.1736 cv
81.2554 39.638 82.3096 40.3113 83.1314 40.8675 cv
85.0738 39.7957 87.231 38.952 89.3087 38.2454 cv
88.8306 37.9324 88.1236 37.8748 87.4957 37.8978 cv
86.2935 37.9412 85.045 38.0545 83.7984 38.1209 cv
83.4757 37.2059 82.4757 36.534 81.4239 37.2064 cv
81.1358 37.39 80.8267 37.5653 80.5323 37.7591 cv
80.2711 37.8944 80.0015 38.014 79.7051 38.1185 cv
79.7383 38.1971 79.7706 38.2777 79.793 38.3685 cv
cp
f
82.5508 17.9261 mo
82.5167 18.0662 82.4786 18.2054 82.4449 18.345 cv
82.1929 19.3919 81.9229 20.4339 81.6632 21.4783 cv
83.2193 21.0438 83.5186 18.9818 82.5508 17.9261 cv
cp
.317647 .290196 .301961 rgb
f
66.5508 27.1688 mo
65.9927 27.1688 65.9918 28.036 66.5508 28.036 cv
67.109 28.036 67.1094 27.1688 66.5508 27.1688 cv
cp
f
65.88 24.5911 mo
65.46 23.8939 64.5274 23.7122 63.8824 24.2098 cv
63.2266 24.7161 63.1905 25.6385 63.7452 26.2386 cv
64.1343 26.6605 64.4771 27.0028 65.1065 26.9822 cv
65.6441 26.9647 66.0718 26.6273 66.2364 26.1219 cv
66.4322 25.5208 66.1763 25.0833 65.88 24.5911 cv
cp
f
98.3839 31.7191 mo
98.3199 31.7191 98.3194 31.8192 98.3839 31.8192 cv
98.4483 31.8192 98.4483 31.7191 98.3839 31.7191 cv
cp
f
97.3839 26.2191 mo
97.3199 26.2191 97.3194 26.3192 97.3839 26.3192 cv
97.4483 26.3192 97.4483 26.2191 97.3839 26.2191 cv
cp
f
97.8839 23.7191 mo
97.8199 23.7191 97.8194 23.8192 97.8839 23.8192 cv
97.9483 23.8192 97.9483 23.7191 97.8839 23.7191 cv
cp
f
100.551 17.6658 mo
98.2735 17.6658 98.2696 21.2049 100.551 21.2049 cv
102.828 21.2049 102.832 17.6658 100.551 17.6658 cv
cp
f
97.2174 15.2191 mo
97.1529 15.2191 97.1529 15.3192 97.2174 15.3192 cv
97.2818 15.3192 97.2818 15.2191 97.2174 15.2191 cv
cp
f
69.3414 30.1361 mo
69.2608 30.2684 69.1861 30.4061 69.1251 30.553 cv
68.7974 31.3377 68.4317 32.1058 68.044 32.8626 cv
67.9405 32.6644 67.8018 32.47 67.6002 32.2894 cv
65.3355 30.2611 63.317 27.7728 61.3716 25.4422 cv
59.5797 23.2947 58.1798 20.8997 56.5743 18.6483 cv
60.711 15.8358 65.6549 14.0814 70.0274 11.6863 cv
71.918 10.6507 73.5982 9.45832 75.2369 8.1546 cv
72.7657 15.3289 71.0523 22.6653 69.3414 30.1361 cv
cp
80.2642 .286929 mo
80.3175 .193179 80.3638 .0925933 80.418 -.000180163 cv
80.2535 .0432769 80.1041 .111148 79.9449 .162906 cv
79.2178 -.0538911 78.4381 .15021 78.0069 1.01837 cv
75.7716 2.32013 73.9249 4.36164 71.5616 6.05597 cv
65.8394 10.1595 59.0421 12.1507 53.4849 16.1077 cv
52.9307 16.223 52.4268 16.618 52.1158 17.1429 cv
52.046 17.1995 51.9737 17.2513 51.9049 17.3084 cv
51.9268 17.347 51.9532 17.3821 51.9757 17.4202 cv
51.6954 18.0804 51.7139 18.8758 52.2882 19.5662 cv
54.5626 22.2991 56.2388 25.5091 58.5435 28.2708 cv
60.1627 30.2112 61.8389 32.241 63.6549 34.0399 cv
63.7545 34.2283 63.8824 34.4139 64.0675 34.5877 cv
65.0552 35.5125 65.8194 36.5145 66.4547 37.7093 cv
67.1788 39.0721 69.1524 38.9422 69.9083 37.7093 cv
70.9254 36.0511 71.7925 34.3304 72.5723 32.5565 cv
72.8179 32.3265 73.0123 32.0135 73.109 31.5911 cv
75.3287 21.889 77.4361 12.3167 81.4029 3.14191 cv
81.941 1.89679 81.2139 .743472 80.2642 .286929 cv
cp
0 0 0 rgb
f
91.2344 35.8978 mo
89.2398 36.8182 86.7755 38.4544 84.4713 38.4495 cv
82.7896 38.4461 83.5162 38.5745 82.169 37.5335 cv
81.5953 37.0897 81.1031 36.7244 80.6256 36.4578 cv
80.606 36.1556 80.5093 35.8392 80.2896 35.5169 cv
80.3282 35.5731 81.0069 34.1151 81.7315 32.5067 cv
82.8218 32.5408 89.2633 33.1614 89.3707 33.5174 cv
90.1119 35.9759 93.9737 34.9285 93.2276 32.4544 cv
92.1832 28.9896 86.7467 28.7728 83.4532 28.5887 cv
83.4771 28.5306 83.4986 28.4774 83.5084 28.45 cv
84.5655 25.5174 85.1856 22.5902 85.7174 19.5311 cv
86.525 14.8851 88.0972 10.4466 89.0299 5.8421 cv
90.1226 6.4715 91.1783 7.18488 92.2227 7.81769 cv
95.4053 9.74543 98.504 10.429 101.804 11.8699 cv
106.104 13.7474 108.339 20.0638 110.434 23.9647 cv
110.451 23.9969 110.468 24.0296 110.485 24.0618 cv
104.271 28.5379 98.255 32.6585 91.2344 35.8978 cv
cp
114.342 22.6341 mo
112.539 19.0062 110.643 15.3382 108.35 12.1238 cv
105.494 8.11945 101.915 8.33039 97.7364 6.35529 cv
94.2071 4.68781 91.025 2.05597 87.3692 .654605 cv
87.3199 .830875 87.2681 1.00666 87.2188 1.18341 cv
86.4019 1.37336 85.6505 1.9798 85.5162 3.01203 cv
85.0318 6.73468 83.8018 10.2195 82.856 13.8304 cv
82.0611 16.8651 81.7574 19.9813 81.0118 23.0233 cv
80.1265 26.6361 78.4825 29.8558 77.2227 33.3265 cv
76.7652 34.5872 76.0655 35.9056 76.6383 37.1605 cv
75.296 38.681 77.129 41.4398 79.1334 40.2054 cv
78.0347 40.8817 82.7203 42.7567 83.3048 42.7391 cv
86.4893 42.6453 89.649 41.0535 92.4708 39.7493 cv
100.476 36.0501 107.245 31.3338 114.396 26.1502 cv
115.746 25.1712 115.356 23.3548 114.342 22.6341 cv
cp
f
91.0103 16.1087 mo
88.9561 14.8524 86.1524 16.9588 86.8951 19.2908 cv
87.2125 20.2864 88.2994 21.0296 89.3555 20.6878 cv
89.8497 20.5277 90.2794 20.1839 90.5469 19.7484 cv
91.0411 19.6126 91.4854 19.304 91.7281 18.8455 cv
92.2427 17.8709 91.9644 16.6922 91.0103 16.1087 cv
cp
f
9.22858 92.1771 mo
8.3028 91.0623 7.28815 89.8494 6.37018 88.5565 cv
6.25348 88.534 6.1363 88.5174 6.0196 88.4998 cv
3.30866 96.1942 1.5069 105.768 4.27741 112.936 cv
6.85065 109.944 9.45954 107.098 12.6734 104.638 cv
14.5582 103.197 16.5064 101.803 18.5318 100.539 cv
14.9381 98.4315 11.94 95.4402 9.22858 92.1771 cv
cp
.203922 .215686 .211765 rgb
f
28.3536 80.7518 mo
24.9908 76.783 21.1519 73.4847 18.1583 69.5023 cv
14.5523 72.8641 11.4879 76.7713 9.33112 80.7747 cv
9.53083 81.0189 9.72419 81.2684 9.92536 81.5115 cv
12.9908 83.6268 15.7657 86.2596 18.7003 88.4715 cv
21.9034 90.886 24.9703 93.3441 27.6026 96.3201 cv
31.3497 95.2601 35.1085 95.2298 38.9156 95.3245 cv
34.774 91.053 32.2921 85.4002 28.3536 80.7518 cv
cp
f
16.4571 86.6942 mo
17.0562 85.0311 17.6426 83.3582 18.1793 81.6507 cv
18.4381 80.827 18.1695 80.2401 17.691 79.8895 cv
17.7608 79.8299 17.834 79.7776 17.9049 79.7195 cv
18.0548 79.6751 18.2017 79.5901 18.3467 79.4842 cv
20.3702 78.7088 22.1485 77.3812 23.8692 75.9134 cv
22.1031 74.0921 20.3638 72.2894 18.8091 70.3431 cv
17.6871 71.4822 16.691 72.7567 15.8629 74.2122 cv
15.6387 74.6058 15.6422 74.9764 15.7764 75.2816 cv
15.7579 75.3074 15.7393 75.3328 15.7208 75.3592 cv
14.8052 76.6351 13.9703 77.9632 13.1954 79.3299 cv
12.7745 79.8734 12.3824 80.4534 12.0079 81.0516 cv
11.9522 81.1194 11.8931 81.1834 11.838 81.2513 cv
11.6212 81.5169 11.3077 81.8782 10.9791 82.2928 cv
12.858 83.6834 14.6544 85.2142 16.4571 86.6942 cv
cp
.317647 .290196 .301961 rgb
f
9.22858 92.1771 mo
8.66999 91.5047 8.08405 90.7855 7.50153 90.0457 cv
6.2071 92.3455 5.39264 95.0184 4.93317 97.7596 cv
4.7901 97.89 4.66608 98.035 4.58796 98.202 cv
3.59674 100.309 4.06403 102.984 4.32965 105.23 cv
4.36823 105.557 4.42048 105.881 4.46881 106.206 cv
4.46979 106.227 4.47028 106.249 4.47126 106.27 cv
4.47858 106.425 4.50348 106.568 4.5401 106.703 cv
4.62702 107.234 4.72321 107.763 4.8277 108.29 cv
4.98786 109.392 5.21198 110.469 5.5318 111.497 cv
7.01276 109.824 8.54303 108.215 10.212 106.706 cv
10.8409 103.089 11.8507 99.6502 13.003 96.265 cv
11.6758 94.9847 10.421 93.6116 9.22858 92.1771 cv
cp
f
25.5548 82.93 mo
24.9024 82.2811 23.9678 82.1194 23.1236 82.4759 cv
22.4815 82.7469 22.0694 83.2308 21.8223 83.8411 cv
21.2584 84.6038 21.1846 85.5027 21.6973 86.3748 cv
22.0757 87.0174 22.7281 87.5604 23.5157 87.5101 cv
24.2379 87.4637 24.6002 86.8397 24.5035 86.2825 cv
25.2037 86.0931 25.7867 85.6312 26.046 84.7889 cv
26.2442 84.1439 26.0259 83.3997 25.5548 82.93 cv
cp
f
30.0777 82.9637 mo
29.5289 82.2093 28.96 81.4676 28.3536 80.7518 cv
28.2764 80.6609 28.1968 80.5731 28.1187 80.4827 cv
27.0089 79.9544 25.588 80.1746 24.9058 81.2772 cv
24.4088 82.0799 24.4791 83.2161 24.1695 84.1126 cv
23.9298 84.8065 23.567 85.4105 23.2081 86.0189 cv
22.9649 85.9803 22.7481 85.9324 22.5884 85.8865 cv
21.3389 85.5252 20.6265 87.055 21.3912 87.9432 cv
21.689 88.2894 22.0342 88.5882 22.3995 88.8558 cv
22.7916 90.4036 24.6715 91.386 26.1656 89.9774 cv
26.2379 89.9095 26.2945 89.8226 26.3629 89.7493 cv
26.752 89.6526 27.1387 89.5179 27.5132 89.2967 cv
29.3731 88.1961 30.5269 85.3358 30.1592 83.2459 cv
30.1417 83.1478 30.1016 83.0594 30.0777 82.9637 cv
cp
.14902 .156863 .152941 rgb
f
27.6041 96.3216 mo
29.3887 95.8177 31.1763 95.5374 32.9703 95.4051 cv
31.6216 95.3192 30.2574 95.451 28.8619 95.8719 cv
28.2379 96.0604 27.8199 96.1761 27.5225 96.2313 cv
27.5499 96.2615 27.5772 96.2913 27.6041 96.3216 cv
cp
f
15.3507 98.3563 mo
13.6622 99.3284 14.6768 101.842 16.4166 101.921 cv
17.1114 101.445 17.8174 100.985 18.5313 100.538 cv
17.4195 99.8865 16.3565 99.1614 15.3507 98.3563 cv
cp
f
10.5479 81.973 mo
11.6978 82.8021 12.816 83.6849 13.9161 84.5931 cv
14.0757 84.2811 14.2281 83.9651 14.3892 83.6536 cv
14.941 82.5833 15.6119 81.494 16.2276 80.3758 cv
18.0855 78.1805 20.0196 76.0765 21.9942 73.9612 cv
20.7071 72.6014 19.4669 71.2191 18.3394 69.7464 cv
16.6456 71.3318 15.0938 73.0901 13.7105 75.1634 cv
13.4761 75.5145 13.4654 75.8758 13.586 76.1898 cv
12.4576 77.8431 11.6588 79.806 10.7667 81.5359 cv
10.692 81.681 10.6221 81.8279 10.5479 81.973 cv
cp
.603922 .576471 .588235 rgb
f
9.22858 92.1771 mo
8.35553 91.1258 7.40778 89.9808 6.53229 88.7698 cv
3.74958 91.6429 2.69489 96.2869 2.51423 100.799 cv
1.32135 101.908 2.01032 104.755 2.7486 106.894 cv
2.8321 107.627 2.9278 108.333 3.03766 108.981 cv
3.17585 109.794 3.63678 110.259 4.20368 110.454 cv
4.461 111.007 4.73346 111.55 5.0196 112.084 cv
5.97321 110.992 6.94147 109.923 7.94831 108.888 cv
7.66803 108.236 7.39801 107.577 7.13678 106.912 cv
6.68415 103.509 6.83893 100.103 7.70954 96.7581 cv
7.82575 96.3118 7.96491 95.8714 8.1109 95.4324 cv
8.4859 95.2772 8.82184 94.9783 9.05475 94.4847 cv
9.30866 93.9461 9.57282 93.4129 9.82965 92.8758 cv
9.62995 92.6419 9.42536 92.4134 9.22858 92.1771 cv
cp
f
29.2691 92.9529 mo
26.378 92.9173 24.5465 90.7396 22.4444 88.845 cv
19.0782 85.8109 16.0806 82.3797 12.4307 79.7068 cv
13.9322 77.1419 15.5987 74.6649 17.4288 72.2899 cv
17.4693 72.2742 17.5059 72.243 17.546 72.2244 cv
21.129 75.929 24.7681 79.2908 27.711 83.6429 cv
29.7676 86.6834 32.5596 89.6419 34.6246 92.8231 cv
32.8487 92.8514 31.0924 92.9759 29.2691 92.9529 cv
cp
39.794 93.9417 mo
37.6212 88.8948 33.2027 84.618 30.1197 80.0765 cv
26.9381 75.389 22.7071 71.9456 18.8682 67.8094 cv
18.1973 67.0872 17.3726 67.0574 16.7047 67.3978 cv
16.7032 67.3948 16.7012 67.3924 16.6993 67.3895 cv
16.692 67.3973 16.6851 67.4056 16.6783 67.4134 cv
16.1988 67.6668 15.8096 68.1111 15.6192 68.6302 cv
15.3795 68.9236 15.1407 69.2191 14.9141 69.5345 cv
14.585 69.6663 14.2745 69.8797 14.0186 70.2112 cv
11.814 73.0657 9.82819 76.0799 8.07819 79.2205 cv
8.08942 79.2347 8.10065 79.2488 8.11188 79.263 cv
7.60505 80.1273 7.64508 81.3367 8.73688 82.0203 cv
14.4449 85.5941 18.4771 91.3499 23.9009 95.3392 cv
28.0001 98.3543 33.2374 96.4344 38.067 96.951 cv
39.7535 97.1312 40.3184 95.16 39.794 93.9417 cv
cp
0 0 0 rgb
f
7.26423 104.863 mo
6.13923 105.83 5.23542 106.927 4.42682 108.093 cv
3.87751 104.955 4.25348 101.669 5.05329 98.1385 cv
5.52546 96.0545 6.11432 94.0135 6.79596 92.0101 cv
8.80622 93.3655 10.1412 94.9984 11.543 97.4246 cv
12.1812 98.5291 13.8013 99.5369 14.7222 100.61 cv
12.4039 102.156 9.42926 103 7.26423 104.863 cv
cp
19.2017 100.63 mo
18.9483 99.6053 18.4879 98.9832 17.7672 98.1771 cv
16.3409 96.5818 15.2921 95.4695 14.1671 93.5867 cv
12.3057 90.4725 9.65876 88.7474 6.43171 87.2147 cv
4.70319 86.3939 3.13385 88.1102 3.4195 89.4915 cv
2.34919 92.4808 1.47712 95.5447 .854069 98.6771 cv
-.0150717 103.047 -.588802 107.594 1.01032 111.865 cv
1.16999 112.292 1.36286 112.707 1.55866 113.12 cv
1.27057 115.019 4.12116 116.394 5.26813 114.412 cv
7.13092 111.193 8.7193 108.44 11.9639 106.366 cv
14.1124 104.992 16.793 104.278 18.6871 102.576 cv
19.2198 102.097 19.3673 101.298 19.2017 100.63 cv
cp
f
25.9464 81.638 mo
25.6348 80.6756 24.5377 79.8563 23.4859 80.241 cv
22.5601 80.5794 21.772 81.0799 21.1651 81.866 cv
20.5396 82.6751 20.2613 83.5189 20.129 84.5272 cv
19.9923 85.5687 21.1465 86.5711 22.129 86.5272 cv
23.2681 86.4759 23.9088 85.722 24.0967 84.6917 cv
24.0924 84.6956 24.0884 84.7015 24.084 84.7025 cv
24.0875 84.7015 24.0933 84.6907 24.0982 84.6849 cv
24.108 84.6317 24.1216 84.5814 24.129 84.5272 cv
24.1226 84.574 24.1143 84.6282 24.108 84.6732 cv
24.1202 84.6536 24.1339 84.6287 24.148 84.598 cv
24.1841 84.473 24.1798 84.5125 24.1568 84.5789 cv
24.1827 84.5218 24.2066 84.4632 24.2169 84.4451 cv
24.233 84.4168 24.2847 84.3548 24.3272 84.3026 cv
24.4068 84.242 24.5196 84.1463 24.5323 84.1219 cv
24.544 84.1155 24.5601 84.1068 24.5655 84.1033 cv
24.5987 84.0848 24.6495 84.0628 24.6934 84.0447 cv
24.6583 84.0579 24.6143 84.074 24.5494 84.098 cv
25.5289 83.7396 26.2974 82.7239 25.9464 81.638 cv
cp
f
24.0982 84.6849 mo
24.0977 84.6873 24.0972 84.6893 24.0967 84.6917 cv
24.1002 84.6888 24.1031 84.6878 24.106 84.6839 cv
24.1065 84.68 24.107 84.6771 24.108 84.6732 cv
24.1041 84.6785 24.1016 84.681 24.0982 84.6849 cv
cp
f
24.106 84.6839 mo
24.0963 84.7552 24.0953 84.7845 24.1378 84.6321 cv
24.1397 84.6253 24.1407 84.6229 24.1422 84.617 cv
24.1314 84.6429 24.1197 84.6673 24.106 84.6839 cv
cp
f
24.1422 84.617 mo
24.148 84.6038 24.1524 84.5916 24.1568 84.5789 cv
24.1539 84.5858 24.1509 84.5911 24.148 84.598 cv
24.1461 84.6043 24.1446 84.6092 24.1422 84.617 cv
cp
f
24.6934 84.0447 mo
24.8223 83.9964 24.7725 84.0125 24.6934 84.0447 cv
24.6934 84.0447 li
cp
f
170.886 116.584 mo
171.227 118.618 171.402 120.609 171.846 122.617 cv
168.19 123.243 164.723 124.378 161.26 125.688 cv
161.14 122.91 160.437 120.239 159.784 117.465 cv
161.389 117.306 162.994 117.161 164.604 117.049 cv
166.323 116.929 168.899 116.404 170.886 116.584 cv
cp
176.304 123.731 mo
175.232 120.608 175.176 117.502 174.523 114.334 cv
174.38 113.643 173.764 113.141 173.126 112.937 cv
170.976 112.248 168.076 112.826 165.838 112.967 cv
163.043 113.144 160.254 113.387 157.472 113.702 cv
155.848 113.886 155.261 115.599 155.722 116.727 cv
155.656 117.009 155.647 117.319 155.724 117.658 cv
156.563 121.363 157.636 124.821 157.148 128.639 cv
156.992 129.857 158.563 131.01 159.68 130.568 cv
164.453 128.678 169.211 126.779 174.375 126.263 cv
175.576 126.142 176.763 125.07 176.304 123.731 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_3.eps)
%%CreationDate: 3/12/2018 2:39 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-k=XF<V8cdhD<Jda*^BMKO8f$_hq`a*IbIeYQ)@q7+.A^,Y<qchVI$)1E8C'7e*gZ!^3oP,f<:e&IeV[W
%ealkG^\c^Pn@'buGJAIpNVqq\m`XAJcX6Wn[t"D<l!NM?lX-HkDOs#+]m9;I`KN6mI'p15I)V$DjZC"FDLfL.]mTL2(Xhrpm@-'*
%C3"6_rhJBLHp9hn>'^&@?[m:sc*Qlq]RKG6frLJ>lR+[bqA3:QrPe05:\5HD1\j9rIOr7h*H1uMjSS+YoU3>a/G\V$TBpNTs'tem
%Dpe+rYKHDYa()AAs5iNZkf6I>rjSJBpM]i=hh>@ckPY%_7m+]T$$k4C,es%rJ\1LR[/?:EM&uTnm>GnT5C%=n!VA-P*WtVpoPk.\
%)YulX(;/S'Y$Il%lE6@nQ"5Dh8cDV^QcE`?Y$r:#XM]Ma_mA+4rbV>dDkDE*qq=O6qXp=2T)F-oMLJ^2ZB%*9j41FlDnl>.pWmbb
%s3&SuDkoTRgR=/LY?lX*qcpjb^!Fsp-QMaBoD/E0`p]P4roWp6M!h>,hd_1c[]<($h64SCn]N;0]7i4*HcU->]m]_R=9!nkr6q1j
%<U`lJ5]unFf-TeED0)#rO_W^[-2/":0lT<N,MaGmqr)Gk3<b'1>ERLo]RKS!Z^3ml+n'k`M`3s$q<M[#YAu0MWTsNRMlu@;VtE:J
%imJ9ShV>j3?fLubLL3b3@_)?c(O5T:jk#8h0/,*;iLbIb$SQ([4Fd$`rHA,EIj_`#r`f782LP2`=)u-`QalSG8&*X4eZXH!r-S8$
%cX4H`rnCemr6q^eO+)KTorC=6mXFuujm>fm\`7UXZMQB2T"KODf2o0U,6.S[f=+Q,fm`VTfsa1ka%a>DbO(dsIm1WL[=6>Zs2XNU
%2m6PG@",fdboctpqu_.oDV>!fool<E`U`J;c9lItU[l!G^Kes3pA[>;H;Qfqo'6alp%7g1gZPcSSSkOl4lhX<IK&<hPLlSYqC):b
%^Nh#u]&"&IhS/g'KC11_rN1/Ln$3suGFgMel9UJWo&e9(:>ES]qR^`krTF%>p_n!ra;kdeSj._uc0Hb7rqY6rh>[*Ahu.ipqcBtm
%O1ScorHQcg48oRg5"L;*p>V.:Sj3,?`H]V^nlq78B2>/WIdso9hV:;2<&+2U^\l>Lm@V!t@4.RpJETeBk.TXNhtCdEW_6-N?iF\a
%aqmk,1RF]<rRH.Q2?*o/8g!-Cf?Zi.hD=]ZHHm=VI3KU,Qd>[+NerX2rmS3?@Qs.mq#8s9gN@DJHLWR<dbP^hIe)kXB21\_MtND#
%.p:KdFmGqiIJ\oaibnd:53:t2T7$T2f$'bCl4tm>\o`.XJ)3MQhVPu2a'<MK<BKR@?U'#3YE'bW@NsFd"9.G'.p2B`rinF;0DPEp
%+8d^KH/TutR?gkq5Dm&pIC4S'M/G)^bc]h-(5C[VfC-!1\(K@S`5kV]h^f0'")HnsO1`a:]8q9%oLW@7IIql6P1S'ifH41Om6Z#X
%+TD*3fAAd,rMSIi?9``2bq2?QXCWo0b7]3Gpfg;B\V.`*(;.]Fpl?>GUU]CM6_Xi<D/m(a9@!S1psF5u:3+;=E:'j"*(rB8EGYMq
%h=+?IDQ1SjRVtr]V4QtWm]68[QC;Tj^:J>`%W\p#@Td^`^S//b,KEZAI?n*uRdlS^bTV<n>[HuaDWEdRUE#&rQU;gZW]2.JV%i%\
%8S1A2nOAO;4NJ\L)I&Fr`/G@=OMf*b0&\.Ij>_mH*:c+`KdoS!nj&]jA*)g5pp,r&KuMs=36?14#<DKu>^Q9;?[\%=0:BK.g.S?d
%O-=(iiGRFBNh[S@l*.jCML;gf7$/_+,Y)tI(gQ"SE[/V=3Qc?'5PsPGNlIj:Oa3`Kg(ErhO!">X*$';Z2\&(NQ`n'tG<]m-a8Q9m
%lo=O]#ne]e4imXFjLF(8jj3V6m:AQW7?4b$(l!I#"'pKp^6.G$a$C3*/qS(K7;a5.,%0VLOW@%i]92,%noKlp-ULKp/1<fG+dF7!
%r/D[dOem[MHcjf[`K,7CPcJ%&L/4U<j9lT$(Ql"%3QdtHr;U+&s&tF0J#`F]\?YT0U(\u**lCj@ZK.LqO$jUVEi:f9jNemN5NK,+
%>\9*laC^c6aJUii]J0`3+-G#93m/oMH,gqra@DQ!gFjq`LjWcr]Y-C`^]]eL-Gss5ioJ9fY;-3?,#0n;@[,2RE?@tj8O4[sPo4a=
%-i(J!?X9HD%f&S?.`f9)d[*H99..&,b?/#m#i3RH"W>'!)WB>E04gr3N-l@33*[Q/Da[(-85'UE\e^\pM<m6jJl0+ZaPaMEiG]M$
%GK1hsR#ge<ri*s(j8O9carP%SKi?un:IWdZp$$EVb+V$Y153@h!"9'sMMP$>fh]ZYjtr)C7q^c\6"p$R&0_BY'VS.iC%A)72@/-H
%#Tn`h89)S](FhK0Jj?S8O;!H?j$t<=ppl^9fMfkP<0oP2ePr04dihVg6H0?R+>X$_Hg@u49VrbPS@n"@EMA0#N"Msok!Z:q!%6s$
%;\ddTKIP16`IncQalsomaKA!F?]3@B`WbRL3DP@!_[Wu6%"N"P)2'D.ZD#'!a=#o2A2%u=&cI/HO"Se"U*!t.OPpf=bMg8;8N5V'
%AXMsblVM#_Q5`?=.b]+UREXD)G3fZ&]2'N:V_TCY?n-;@!#.P%&<F`jU)BY#YmcHX6@A;JEm#c';OAE7)BC15`IX6F86Ng)Tj8Zd
%1aY+-GiD]CPV:B<;umi74Vbkc.cLRKKBa!SJeGnG+R9:J$Qb7b$Pa-c:SSi^EreC$4e;Aa.XAAeM=cXF92oe7rji6X1>&FBQGYsJ
%*0Nk38kB_bS>FWoECclI&in-GQc`G`9euV0La3s.-EcHrR'9`)22_$NOeY?Ul6O5e&1P5Wa&`$./6s>d,-_\2>\pX_ltp_kHa,VB
%La&0#a$o)8:W%d)c/kbbEaiY%,$t<pjBuR*(6R8Y_=Aaf._UPTj'"L=Em[G+a+4Uf?Ru[B10>g+3+OWO\hksC&rp3*Y.4t*/FPP,
%'M%3EA;846R3e858J#TXZ=_!"3JtcCBp)FO8KnTVVZr!F)DF_UAraYD8S3i>)BijEW9I/nFsJk(S=(9cRI2ac)HK.acGo?T6ZCZE
%^g/l$M(kqA\Ec'2Y+'s.9`L0dOW*$tEKfIZ4iL4g7f?rq<jDda"N`*e1IRZG>eZB@,li#Z"nr'09?hG-$i$slhpVW$Q^9@t]X[od
%pPh&(=5a?gCmWnSmL421`/B&*6u+ZJq$5<b:2GS3q?p?@6*rE6KI?oQ7+dO;<lcJNHP+YhfF(H-2i/B0;A#TddUquJ\koe]=Yj$J
%7OlbSgO\WfPU4giUiJ"cM0l8?;dXubZM*B](Z2srcAQRIEg*K6Y3)[^W8`h)`Q?Ub2<Sf7<CNgc:6hBM4&pN:W4c4$oq/o=@b[h*
%m)j91:3PFb",lnq\BBX5JA6/YMatGC8DAc3oY)R-H^+C<\`8+QWulN+*?T`RHcR@SI*d-L5<dup^,%+n`edFsoK'Qa3Jh'F`30VZ
%Q)SBKb5qk'iou.2C6sQ(CH&Q7"^1+G22l2_&b;]2R6[sOd-.7(BBC4.]1R]n:IFP<IA7].;<Lnn*L^`K=Ed]gd6R$OB/Rm+_^&05
%9[0hNN(o$D>li>MHS`X$X#j^d=?"6O).T_5RSC):[)k;>2?OE/@3!<jQZ]&t&"7CZE%0S<iB7(Boa#Irin9I^*7U"eJF5MAK9*Sb
%El\$J7sk+VGC7FKms@1lNXu,O4+?1]IuHJ'9;>2WUl(PW]*5(j->R0gI3R78k`[8]FHn:'X#6sonM6Z&gPL)HV:>XfdEu*UF;-*N
%+tfQFB<]"!pM6"r;eE.Pc%Y[qDVjVOX+[0H'Oh'.eR=28Z^eUj2fssm(U\coi*k.k_t=\&;Do"m)tm.\1O!uc\Ye%n*4;P">%am[
%c8<n%j%T%]-MT9sFT4(0._4SFmIg25I\$1MXnP-%k<&ZIh=9A+Is#pJ&0UIuoXHZaRHh+oE<^sbhsb0]s/FbIBt)*,_*KV!eSnhO
%*,MKE*Hr?DP;gf=X/:O*e1E'<bb3UokW2D#_kc`&oc5S39E575DJ26<_g2]M'fZ>H\S_[jaW3gr6-C!hDN-ms[2U8?BXR99'cK#!
%)MnKpk#.+.F]:)_<.@jT.9<BnV/)#Ra8;6I"_O@YjE]/-&t+9r[<bl[k;7NN>Q<g?\t+;g'#r8f_K!/7XHAd+LM+!VTgsLO+a8=\
%Gm&X>FN>IEI-uK\4*HU(F)uE8fumi,DUM7hEMo;T;22g,A4SHZh=9WP'G1?kRZI"&$&'E2H\.oY!2q.;$0\_C\'>+>!I4b9"Pa<f
%;kZqi3ff5b.EJJ"VZE;,E7:ISYp_ZCq%.4\!]LF&cJYS9Ru\Y2l6sU(5u*+o($JVq;o)4_480MEXTUcfHYP)iC,At5'ECsB;;!"W
%4^)ZF:H7uMeV;%VMoBE+:e#51cl\<9Cd!MP<UEPd>JR._oVpALQEFu68QEese*cb$&`q7QlWoQ2*FX#Zs1%``4,t0Jp2Dtb*2g7e
%7p/!8%mCI63TQ223q"+LlbXfhI.4]HFmaKqo3%i9egR.Jb%H_)WUBOaUO:W@T/Fc(NUl?%BGtHX,#A5[rI5ph9BIW:RA)RDfICU2
%4=?I7lCNmWA[])P=gT"EEZnHAe(bK(Gna_uJ96?2FPD&Y=`Ze`].56n]+D0ORo0tRrN9L+j;uG+SR8OODe4"7q="/;S+M?\nF?;W
%m[ee-[n/3<2.f('R(hjEL693X`dUCcWhop@d9B!nBBI1!#IdC;alh!BT0/^U59._7$M'kIo(Or6/1!1];3dE'655<0UrXI`'Xss(
%h#5DbU&5W!dtF"GOj:mlai_c@@-'_d93lq'OSrbO]q#$i6p0B;Fdl8.l0d6^nRK?.e+VWGQln"fSflI12F05-2jLW9Ob'S^_H[E=
%+tW.!`_*P0>?G-("%R=>Lfn_*5TJa`86AqZ>sc-HHW38>141qaY7cCkKWL40<#,j@PnBZM+tQ/-bS.Y6"E"g#@S"*_,L*)fHB%$k
%>/jqm0O$)H<HD2:!+D;ZU<+m!A>s=(WWK(W,<Jos;n'<:c14bZB'MsbmtnTSR\/:i<.eb\,"He$;Jh-p.o*-0-Tc3&BD(eidisS#
%?)M(#*(Lp(`gY)^4mJT5aW37jFZq^nnAXF4iNOE7j/&B;qi:P)Zh4m-i4R<!ps;^jZU=/*VsWN)cZaco.lTaH%@\Tp<))6m)+T>B
%)Igi_aO+P5,?)&fdlsd])FI2m*]`El*L@gBYB4rJ$oHe!7)3UWBht:A)Ho`(YY.dB@G^[6g"&;d-]J6pc)]D06-h<=aS]c9._(3<
%9?tpIl)::s$_(L-TW*^gr<S3(bbS\9*p,olgKB%UYWtKA^m84\$lGf6NC5ta_<Qrt.K:I0S=Facjl%;-O@Z`ecc>K7q)p7CCHp@"
%C#nLD;9,q2lHO"jruU<p=fL1mO.eRH%I/ZhQ/hD0A%6KrH]RfZ,Kh,!K9('3W98rknP7hCNqVm.meD==hWO[S^1/g`=["^UFM3Bp
%R.Gg[^e:7F@r&WKB)20@s-)R=YM&lum2,.DBD4V9[snRJ_Gki+=pqno6;(YVr(!Xa-"(G@Pr.se5UE\u[]n1?W72ue4<UIPS9,!.
%'"ttF8R!>%&r9NR3/<M@cq*SL(G]11UAMa"1B;)P#R3F#W4=:naL1CYG<BY\ota//FO2'+YTmL=jGs!4k!P2Zj?&q6f`tZ7lV1Dc
%F0gZCI%[pI@\$$QS'rRYo9#;/W'eu_,h*rN"k'gCS]#UVXZl$X7ojoREn7Y`kWN[@*^@57F`]FHde0L*W)k&5g7tgC'ED2?>kA`R
%U[qH\C1XEHC[<@Ik67lNWB49IS^,DX+$[%L@KjqN[T"?MTR(PPE6\$E(0;;!$E9oO6L/;mH=4Rs2c/>0r\GRn7sCf@dBMc,XAoXD
%(*?7/d>"+7=Jqof7m9#_fl?1FmMIPrrnbQ+j.OD@kX!JmcK"GiLRi(ul.q-MnH!:9cgd'Da,Qs)Bs;7iPRChShmLTPc."ielbGs?
%Z!&4sTBNO%W/]^h2!Q>o">WQfK?$rLe5085YnWqT+"5'aqWc.:>'1U`=[h"W^D>BuB%Bm-RmLR*M"RW<4-i`T$W&AR6p5aiXug`M
%eS:>uGNdldQ&YSV1AO?X-Iu_m&Var(&dR>3A-%<2TH@r9S39h&\\jq([t;Q*o[[MVi3Q/"gQX#32EWX%\l8fT\RauCBpH/ZX1(S_
%QA6Hncq@:Jhr?]0l]=3Bo:392a7D[dGc0rhNmDosTAt>dBoG3r>$MkEN/DHa]G6Y`2>[FlhFFjLM1KGRl%NfgLYcGHHGstImuj!O
%EsTqG;pm/_Ur?RNp5@IQLT*+GPYf^R]/_C>R#<FZ?m-G3PZ2JB.^fKr]pNS>@*tkBMENOZ;7pqi\]j&.):p:9E4r>^rZ/,c'<gaV
%d(^C%aPZ$<c4]2"@bK$<b=E-Q=Jau@rS+GU/ec=A_<o`,CZ7o4%?XfN[(VO="e&TL0R,Z&d>8Pkf<hPDq;RCp"W$_&TH4^r3%Eku
%CtL3Q.D1!T<n`[i8+>Jq(n=?[#'f1[o&p5F=U]k6Gd6a$,KYF#q9tWrMOu$)E_gT`b*%[mh#450Q]$Tr+r\#PR5'/6e2p12F)6eV
%\`4tLrN;:^DWBN2mpW(B_Q`64iK'1j@RidOpL]M0PAD(IEi__Jbq_&tgi&QGF0B3/Cm"rH\o>Ou;_q+E]U<0Z_t5EJIZ_ju;Y-oX
%<2X.iSMMjsiA4m@$]:k6]Q[P?F&EONOm7$0D$9/AY-X"BK`H<-g#XYr\'iFS9U%;p;"Yrp0cHGn^h,;u'jB2X>dgl,'#tt>dMRYn
%U2g!.UPUubr,lNA0M2e<n&FE37SW\!Z>8Ionui'[?EA9$P$h#0WsD@.<@dXp&@\0H++=luMcd""g?AZ\O"IJ?DRqMAh=F3ANoIQU
%>+@hH"s:Ukh@mZtGN.4!in:*"I0/[*),k5AD(pf_,2H?do=.OC&WT&Kl854*Qr"eI4I].dT;Kl)N(gX%C8Kn*KZSjLrK_McV>DgE
%Q_MIfZU`HWOA!=.l<DI8BUo:n0G-cZ'2)4qZoV)oH<F0%EkP#.Bg%D-c&Tn(Y[U;6,>Q-CkVe%H+8WeGB.Z1udp^gd@9AkW9.N=^
%E"CtGd'?hREl[;00l4+4O_p/g#'J#JduVCNNX)m_gg`Qt`1_ApBh-/?CfU:8`hQ-M]fDq_^mIXCKNb8%mQ#/VD45dg*nZZS&Q'$G
%Le"d\.L?hQWU*CNctfsme91lL#LTYc[fhj?aoiL)H8+)"P:"\FrGj/HU;e:>M+Aj"SVIJ_Pd1iT)B^Q9VJ_8?6-BJ@%=g_I.$WTX
%\03a]B'huiJF5Ujk<W/0HiJK-j+$DWrgc.k:uqoQ2&ZjA:Sa^`@KC"/*%8cR,:\P/Kq[`(32d!A=\4h1+d3hg?-ItPTaJZ"6@sc(
%ZIKg[*U/\e<]\K]fM?#[/,rkuM<n^)BEpTagk!GS`](rU):P*R&+m_DX1o[n-KLX0he$Jk]?<;!#Q%aCKtR6JW.P(=%adWo-f'2S
%Gh21"XZnPkq>O`(/_9S>9Z..%^$sPWYP0&J@D$r7"<5FTBj#l^rP_V/>mc:4%eF0piLtIc4@Q8Z?'3Zt:ioWU?+%*t7,'N71mk>[
%h>X2.?cr0(7lDsI#T@Ia\][hl71D2"$`RXY4m/X(hJ((-`fc>RE-A>%$N4U['@Sr33(cDG;QeH\=t$^o[Go)Zl'V'Lc@ZLo0[(lj
%EulU\HEVP1:H^PBrnR10e"'lJ-5Y+,_`VtMj'=>:U?uR54/k*Yn+Q82!@?qd2r8\i-1g?gE=WiU&I7a6#)1^qQ+_l)m-/@mU$";L
%D,TPcJ9uj,.a-Wq-G7VnQ)D"E_*qq*GUm,pR93o..jlAID:_hbcb/5T;^cZZ5eBGhcKStQPg0SKpRQak9^-KY"LS&gpi]D!$e>D+
%U5^*Ig,7tn4f170pXk\_c4YUaobX=+2&0t',b#I_'R*VcmpO)AF$f@j:C+tVUu7iLEaNR#3_Kq=V?]m'_)Ntppha`]G8#Vt9aJIs
%'RXgKYYjaNkdZ]gr/h6Q39JQ,jZZ?JpGP!U*Yc7+$CmLnmfr^@i80.fhE>;V3Lk/XN]CQ/s3.pebY#<T3'6<#g%#Sh($msHd5b^b
%E;nsZ)]2sHcGBa#d,=iS(b)1:NZ6@'dd]4&^pfe'>Nk$_5PH(8pR6'__iMWlFTDR>Yer0J:O(fXB;%Yo?okA;ld1F##X\2kVs$$b
%mQ3DoW/'(L_CH[T1MQ]&nV6:NC34B111cpfHC)/:h:0Dfac$$8hFYLf.sm1#,u)LJS(,V1mBYW/$">gr,O_>,IL'*LVa.!FCo-]R
%G>J^ZM&h^URoRC1W'.fJU;II`=2)V+S!7SJNa/[\qXAi6KpNVsN\srok8$+=/K_4T#,*h,f3T\F?ISR5f7,=YmeoQc>ait_bZ6Nn
%`*@Y1Rr6GA;JN?sO`MPnWA/_%8@PDBiAbN,`5"8LlSJ7ADGH'XJ.-6nC@m+u]HII-Wf<Li7C+r*h"R7.)t&.npH?:cI,@(7i(Q-H
%3W_)4Oph=994rS*N-ZWFqj<qC5,G5Wq(9q&T4WQDUiBa9coR]Q5M`mMq,a(LTmt5h>4p;VkNNV:7t-0i,qmXrp\9R&+K0qmb"4&<
%SH0gR(S-1Bf&BiGS=D!9r$=h'9/:Q?TJS"D&t6R;1&XtYq:HQ&/gl&Md[8'h7Tp:+3R;9+_Q3-_!Ze2;:T$:WCUhngbAL(X7c\uP
%@Q+hB*#o/j2u7,qbA_(mF]5JV(AHVDCGV!.)$Qd3=Yl3/j<8/o'?l[[4nCX:`pmaV/^S;=\>9!60@3CJ,<&c*>\(N!Y?5&7X<PO_
%HPZ8;!4GSl>i^$Y(Wd?l7OllUiK1Rkd3<o#+?Bgu)8.?:iGH*o5>^4[h4J#aQUhdh\M.k37>g?7ge=/];]%9VKkuW5VS0%mh5bi>
%81st*0n9+7P^TX0*c>(nlX!V-WCAPYkTppF:m13]'qP-_I;^Vg4cA]HFW.ks*HY=b3!^V-aL:MY[>'G2$Fmo'!Z/)+irr\!MlP!g
%b)3,/:O2l:j!b('M.:ITeuf74E\g=[e"u'eO\$/LVrg\p`L96#c(R,?TXZY%!h6<N*1/NAo%kV)jiHa2GKcPOgj@P[*0UISGMKd*
%pZKE]hf;DUN,ltV"g;ThQK29\X-^/(,p'_:Ze$s!43e1=@Bck?8/fMO_[cS'1pE9P9J*#Zrf1V?%GR\5_odR>jX/MSK^I4HYMJoc
%-Ss*g#Bhg'!A!*Y],ERfd)cTd$lX"=M:2%i@--5i_l@?N?1<8W>)KmAMtghsR,r5?Rpb]MeR`If9!!b04$Fa,\To/0mKl"1:msF@
%)ip\<7rF-K4O2t-Z53VcL"YqiLq@cT-RW(h=]A\7:"ZXSacSt*61.^^CU\0^WHW;_fS4;(s*XTIoK>U?Kuu7//6X_$4#e(7\:[q%
%@V"&;_#aG+b<OS3b86/O$sRZD^5PIj;^e!;/flnle*8T'k`[q=KG;QaiAEH'T%_1[X'8BEijrobq\0/UR50Bp1<&5eea8%4I7oI5
%D/eX6C0n!mj_@u'*^@4Q$KuhiSSq-JC#]_n?,8FGe%p>m$OiQo:Ue=qD`7LB?.pu&+jP3tLVE^QYFP(9iliA"oF5Zgc"d*@1KHe;
%/%c*"[\V(o>mnsE^J;,kV.2"t_f@LMRAD0'*rRrFYdT"'R(W:(Wmn:Mpj&jK,VuM`;n8<K8&qlASXY4%Eu8U#,gE#.OeTtYfh0\$
%hMH,*ITH&Qh0JEJDao9Rk^0a!.E8EmmPm.D7'PKaDVBi%i9Hbs]#rST<Ek;`]qUdLJ))A<\)6D4[7]$r@pLF?%))731tGLlD<lru
%V"GLN9bpE>RlPneJpWO.NBP3=Yun*&"))^+V9)1s7qOYNLJ^YFF`5J>F^pm69sEE?jZ41C*gDY6qCFjI!e7Pm3ZG3e3#pY$8e:?@
%5g8XV)!JLV6Q^k>.+j`<pXf!hJ;8%7dOuZ8_C9$Z\8u6]]:ZOJnl+l0mUl=hNKpF\j^>pHrS*A4<.:RRGKYMM-+/0]!;-Y"c#usn
%Z#9Ng)S#(>G%^J@@gdiO?bC7G<\4X9^eN\@fR-9$VSG$blW_Wc`o#cL^,s5sDA'"o;CCRjibDH7b&X4GLh'nE>b/B&7'6oWCV\1#
%3FJW7mOE?la]p,HZFA--E=.1Lpp$gge-aOf;;IYAZI@4V<QK+e(u>XGb*,'+Y*\aOQV>O$kZok)aqre^q'1*sS9ZhW4+;ce0BYJO
%7>$*^Y*WDH,@Li?0Xl-sm/pdO7XuXdKoK/!_.;P8A`4$tB55:2Op70Tds5kqLA-c78-=('rFGI!Bb6^-U_:L#Y4n3;:F6`5K(Bi)
%UH"=p4Hf;<cD(\*BH>KGIa;LbNTt,Acf7&U<j\fp7X#p2H'd92K]b(]8(kmb/<j^F^E!Nf6m(g>]K#Y>A]Y6%CI]K>H/.#6T>uC%
%rHT47H2NrbVTZb+"nr1cB1\J%_%DhE=V-u\Cuf#jLfGe1UnFt-:["Im&9*!LZ:+-Zg(kKg@2TmW5Mu4`^12%`Wqtfg!eb)$*Zi-7
%'_5T"mGIBDO*9eA<u0nBa0!r8G6diUlak?ZFi?m-pEKrZ!DjAd1]6R!ZW?9.>[*NWadi7TSbidaj45W:PFItWB=]udqYb[%dhHiq
%@rJ81_<W5_$<4*]g>Pe/2lauCkKTO1>F<XRfi5%Brc`4-WGf5Zh$ld0H+o[gDjSKC;oLMHY;pn%I((=JPeNcYPMV'D+S!S?.U,Eb
%+SS`6eX=Cc^>&L-lhdf&\A%"BE&#cD0<G%d;#3r6fP9$8FlNP\aS+HP\(eXSl&9JTcL:Q'Ok&JPld>*Hc>U:B=4aM?mV4diQcLkb
%.':Km7<(hg#)!:[i\)=P'^[>qj^MWn@r=XCBPPrb3*10fIeg7[XB\_9jZPG'&)YVcA_1JIKT;X!&t!%@\nQ@]:KGhV$TZINe!>k)
%6qn]CW%1U3PbiafNqSc0RMZBI/?MFk<j:RhHZj=Olm=R*CrFd*9rpF!:S?`2OQ1eA*)@T2R"0sW^2r-uHeo3YhT'q:EEj*0^),Qu
%mCD$TmLhe<=-3#:!7+`W;r7h!d`%^:*!2A\Q(J*E\$())WZj&\PhamM>\:G+8sf,'k7%*k*;@L7VIHA>P^L9Lb@a(Ng<dIWnFe>/
%gPkkEg7GA)kIUGPQH``h[^T-mb?<_Dpj+0''@aC?,VSKks+)qF3>HAY)Oh#j/.jCCX]79G+RAnjlZ>W@VGP=PMMH&n6^NUQbJ_$e
%c+P59+qqCtm_+14jZN=C!n7F5DE&:\&,L2-j-#)fh.H6]<o;Tfg@hqgZo@W,7Y('D+*Rt$m+,k&=NY2*h/^QrRDuiU]">KDkp=FA
%#i[dI"1R@d1H#/?^m1H+?["C;/=aXrVC1e@MB,A0ZU%@AZS[e2H3Pi<pDppj`I/XY,r27/Ajt&A*6dPI!Qm2F$j)[P1I1aRTR6u0
%q,o%.bJ\%]pad(sPDOcrJF_US4hnX&<H4LEnbtQ0CZ>*Phs`p85D(VXL_p@Wj+gsn9-2Da_V$B*')mV_38tE_'PpGE)skiAIo+mT
%Mo=Fn]aq^0dcB9JdL1>H+*.144S`l,hM5@mT,a&#OaD+Ser?\E8Vmb%M\dD_0)XgKM:<o_gNu]*s7thjDf5Sh[t"D<l!H-n2ZNc8
%JUPPR5%@um0sJt@fOkWZ1C!Oj"8e%.IJ.MBiuOb'ij2=+QANp)fVcU%UueXa^O#_1f?[d;H1pfuTDiqUe`YgPIe;rEq7E<7qsBS+
%Df/ps'JFq8rAROOq!&S6q#8m9oBE92hm8MA^5@2m]9q;P'7&8bm&k@3:Fb5r>6"2L^Z*#clT_I5EVG7'l+d6?q>:2Xf"Xg9m!cA>
%fDi8F^4+;,I`F$+qQp$hG;%<jkCL6PDOSV8rGltCH^_E&H&;RukNg`<NmF<2H1pObPLk<=rCj[Jq<.^W=3l(T^A`h/cr[-KT=oOC
%qQ'RYVgjhHr9F%&T&5"i]A'6%I^8hu>k*='s2N+Z\*ruB8,`#9oGu%PEtF:AC"ZoJF<AKcZQdPDdS[b+2uV]lhIG<"1"<8.Pe;&\
%>bt]+ohm2>TS/SB!'WU8AAVV(.$\qh?&9OnK=c/tkp]@9qqY2aEflASQ-D%>.*FH44"j0/j@Z]WG+mG:<&X,KbZCWpZod2D1qQ1o
%/[q'l:m7DOY%0#/Bo,p^).$M;<=QK19=PTV`9X7o&$C;C[r:e/FG/P.L:E,!r47T_.$j8g#<aYE"\c,^YC_!H4#GFuFq#EUeaq\>
%>-70AJ/J<#^FE7HG-t]f2Vu*(rnGsSh[sj2\,t:-Y2[Y<qfVlfM,)dTGa1Gg0M7\NOO4%=?M^m3A^NAKn29CcKb_@GBGECXe)[8?
%q6f#7\QGXn?99ce!AAB<YES-+q.=ouN76jIjE3kf,LUINh0l9Ym%nK\2LFs-j?.^kV+-JA`Z#0I!"g=o1GRTV+!Hm8b4j$2=#!`<
%!Wn*h/Fnh,MJ,Md)'._&,S.d5)sVaGMe.RF(@`UDN(&u8[!6jZB>#>4b@s8K_dDIBk[omd.4l-sgYsVd_6):Skf9Oi8i1eAB"_/5
%C4VJP7E,<ZA[1"1lsmf[M9*dq6$&04gkF1Z7.31NYRgYU.KL>$aLb_*XjYgP4]5f^iWE/;d<5#2f'?="Z<3/7bSr[MaZ@>*k-Bq5
%"k?AL*185S]_-S+D'Q@$aRZeR^ZnF=[L?mEi_EXKV]`i^+PSY[j_i3!-8Ht0M\\.f2B$*Pmp@,I-o9QqoNR,,jZFUHYC+7*0Lrh:
%I;9Ip[&[_BS)aDr$i3lc7#'(24134\aok@^BD/rC-%."D0%7CWO[/hKAs^`VVNQto!]Rp;##_UQR0WdXI7T5&5cIj7V5**M]VlP3
%@qc)V,L-3[bRY++Ss1a0')7.,P%&-A&ImEpO)qi=@[Y;Fi)1Fh0gMlWd6Z&LYHu]KL]KotM%Z4;U.T(@X#]GC,[u=##h2]!,.7pV
%6@KYteQ^-fd][c&%ka.!/fZ"3l9Hm2Obf1Q6/ne0lNV'+VLGT`/a5qHCf-j7o8'iO_ChR\0tiH8NL3r"VB2q>+"GMq3c0mOIZG7I
%2QEe5-"r5#"?iZ.H&c4rRnYOh$3nF__,k_ZAW$XZRS'=P9@j097:S[Eb?mm"Q\h1#dMG38cj"Lm[T$,WqIST0dhCh)`8$Rj0uT"B
%]0%XPm+ES`:u`0eZM_itKrl&h%Um=UoUn1BQ&D,\R9V5b!J[!\V"@=A$@,>X_(-WI41n#gMdptR&E@)k2o($!Q7=Cn^G;:E^d?1:
%M[UJt0i"TMBd,5XRkfM7p.gQMclV+5=i$b(';d"o&>s%EItD@Brc2\T&3QB=,2G[0&b&V28\WkFYsb9S^9:2;I#lq/nr,+,"a:AW
%,:["EZP92#NW?2:7q_HP]3PWQ#$`):imIqWgL<=h1G[NI)>0p+;NZ"1A!(Dgb"%7r/2O23*"oEup<Wl+/kXKnPTa)V$?4r6rsg4d
%CoLNYd%X]H>""bTbeZ&'!@X>!NWQhKeLmI)3=M\/P6k0fU89k0ng54u9RDgP17TNtr:2/UZ`N=X@PCD\[!b3*\@<1r&kO!Pfige#
%NK04E/p=X4N]DGXHiu)3dOu&m,H!(H@_=+BV%10Hq[!VY_`k*knn>!.[X$7S/`=8%/`^&/>-PS]K*4=g@uM)_jYLM4LpK2p9++^,
%euk3l27E9kl,"]TR]nFeRMYMCG3DVF=Q[lH3._cLn?Bj/qQ[Pf^@X:.Hf(hR,cqWEA]]M3[Zta@!j.;9bM,,IF^=$j/hLLGNbb7*
%G1)P2I"<`ELtMtuOgS+g(\&08"#>T31DAZ"@&LN6*11;.7#!%M2o+X5fJ[%b3_"I%DMNQb(s(FiY(gq1jkNA(la4Td/s-s-Pi4\e
%C`q%YQ;sb3@;4#F:Ma>Wj;c0)J6a[t-X%Pa8'o3gZ\Vt;k_;]aOb%,8^p"f,eeXY30R@22oLept[uoc7^7B$`gTlXhQ'cHpWb-Y0
%&,jFE75rBA9@n+s.MTUEs!$KdP,I-&8jSA:4'Y!DQLLE[pEIkfPS@<W9tYXpL((W:*Ob$tn5O)pdZm,AC-=Nni\I$=pQ_TF4+,7X
%8EA/>FVkYi=n$E$SR6&deMg[8@6nfUZG';E6"S/-/@ol#4hQI31$(B(Qt[bnC@$jV(S-WWQ@WeFY9F`Zd:G5CZC6Y2,kC'L5_DoC
%Be3JfYuN,0:+KGAMG@TB6YR-l;E77c,cP'N_^Uc133&oB=/2U$/VUk&lb["l7n=$Tp$pD/X"/L%/1[-D1;mqQA>eSJQbAFfU?bY7
%nAO62<EWq5k#0(g&l2+'1!-t;Efst%U<hr6S/^9)l*SHrRe#_iQ/:5fd\@Xe?K=a`7&@3."C#'Hik*AYA)\;A/l$"aK\;#_M#p>u
%e+e,Y3ZgcYg1@LrB]3I"@HR&9kF6l]OTH(N25d'P^$D"?gH]mD(JXEmY%X"iK:#DI-npi0=,/7lYe"trLWjA<%7Rk-7Bn+.=h8p7
%UD\@fhm0%o-c2UAVoss//bBMc*25@R6aLKtaRA28U<&%W#J!fN#nDkpKP0[WQh-/[B_6_`Geq.i!`OToZ!mD8@enM+K^tNs4cKlj
%*,[+m1tjmmIIDL\]^S_ki>4`X.<]To8&q7grqVI2YFiN+B(t?arqbm.mpH"\eXIpGq&HnH'Wlls2]>68H*T%L"W/B#g'o7"+tSTB
%T,Asm?SNUq4Cqc\X1C-s@HWIp-'"IP7Y5*%O^B5h16@4P!!^s%NlnVB2/.0^\aXR:r[QJZfGcS#`5HTDV.)(^3X6OG`7(lj6j'Js
%iPgE3e5X<m(33WdAc&$j^.\L\^O4JAD*TDMe@@'tW`'Zi=\+acZ<aN^>ms6?+B7SKFfaM>]]a-\b(O`<&7D3)Q`G0t=&\ADg9>TC
%B`>`5b&UQ(-]5Ee)2^d<BTe'B9a'5Yi\#6PZOb2gW&9]G?o[.!)*B,QiW-lR-u`(XKKZh\'C?,3$JRpl@U4WS&/.,X$_0/cM/I1W
%[8a#)i6.,OA-,>HA\O%DS(Y<n?:1fg/irJX$J%5MMbAohZ);19TWeDa*%_.6r9t6M$nk53L^'G/]bsdW"VSUDnPm:7`-b`pXZV$F
%.c9"U@Ia`sU=u>RY't,(W0:RAYE>q)fTu/8ad??hE*8].<Jp#$,sa!>aYC-RF7tX?'Pg;5Po.#U"K]:5<gZ\6$*;"J4Iq(M"ku@j
%Dj\`Z?$.\0-LW[:^lZd`n`#Kb(bW$)BN]X@TIg\^)cW9EHBhflCY\tW_H<SFP4YH+8>ihN\B)ao(6%I:^ug0d!\GH6J/0kk,$TT)
%THTTJl-SeTX7I/B\AqG^p]Lda["p@]CVL\eLpHNueXqn3b2Cf4WW/p#V.28T\cuA0]0+7,6`dCI[<$jPMXd4d0!"QKJ0mFbnmM0J
%mMq,kDM2bOZ#1.MfV(_\WB@T(Ynd0+LVE$Vb\PVN11,s185#i^<;)]IZH0p$nPB:\X#cVV62YV7QJPF4%M'@HbRcH$Y,mu\H5K4e
%8[Qj+YY,YZ%\=hi<Q9k2=+F"t(/0SK>JE88e!)23$`83'3&X9HPqeF3ONGG/8Tb$&`,kL]J[,@(NbC=Q%<_fb>uWr<%I8-k-c?L+
%X*@D'j$k?2#,9,C\.ctM99[3Yp(j`!=ie72L*GD(UZ:=1aJtTEZ>$9\]H<4kRRMr+$pAAq9G:t[ZW^ra$mYmXCP,bW(fe4?5:n*U
%Ze0][eA16i]3SX)]b`V2-ch_Nm[7+?-tX@r_N-7NK9J$d/%W@V1P#@9+K!0p#<a1]F]g1u;FlO1M.%jq$-/m_(hA.(bY0_p`G#ke
%Y;05sq^<js/AGja?]!&^'+b)<VgMusl$t`--P0=H2=e$#=](Cu]dgD9E0D.IDmiO$$'XYNNM](;FGNjJP8RaY]LR7!f]"[OU7MY_
%ibcYlmLP!p+KCf-blRjn(@asZXR$/W)4(C5a"Z$t!.=&jq$7hXn3nR\hsP]F]4B3NW(?T)*E6`'(ffLI<AfM++RsUqf-=I&j6`X&
%&n?Nb_`eHA.>S\cUTEZbH)X6'3&s!Af/#]a_9qlXMe%L)pfk\DW%0%L*3\E']3m<Z;P5F`"1H0FkO=:Z<VRF*>&(LT9AVcAW:PW0
%718Sqi,PK+jkjAF4IOT3[+g;k`koXLPg:-D"$\hdPnA)=Yf5Wid3;>c9f5e2np;Q?J@/qY7QNmjQOt%U@J"k%_aPPZRbo<u$Co7Z
%S>F!IO:)kF!;"`;N<HkbYcb'dd$q?=(ds=;&Y2OEond/Nk*3GSJTVqr5f0n)do'o?R^e7,#HY1NO`"=u5/E-%YXbCHJbEkPU6Ql[
%K?\d\%?BS,pn3)FhFhI6]OnO+,'H7G3P#,c]H%&F1+uqng\!4].1p+UfVcTEkq,\$QXG,R1I>:/9Z@2cieF.r)#tD.CZG(;k(L*<
%27`j-(JBAhN8g^:ZbipSAMu"6<u.!$6o>ifO:S'8:NV8Y]$:mY[Cr1#r`qtt]R0qcO>'O>a)^-6F;b/&`hGNC/qrTs,Sm=C4Pg2P
%Q<"sUD\sC%0$AUW<0HF#1@ESO[B(PpL1hp#Y/Zm,#TF3oa<gtQk]1r%P;'@YbR(9T=t8Zd\6C']X,'3!71Q:LMaF$oX1a+5GaHJ^
%>G<;WN'\]SU=-U%*q(]GZ*B"V"CN2a*BYqX4;']RT=CKP)4lB_Hl1'9=J'E'8edQZ@.*X7ec>qJ5pqs#"4=?GUaI@F$_Yk"!Gld;
%$RX#/HGF*JkU/kK!a7-dY%]Yi$E6lU*W#=N;Hu&3-YeU@M-+Mad7[@0Ts$iQrX,Ds"Zto*4D]_1n.i80Y^dlI*!*3!&.0sP^h\I[
%ag]>o=f/YVI4/>O@hB:iRC-]>UM!g:m3>P"jOb30@u_Zc#+3TH/gp8V(B>*hR)EGf,*u_h*2R=XNcbDJUNRP`NXA3./f'3M`_N8?
%-7otk$qA=5>mc4$J.mhlMsLgd3^ieoAmLLRi&V,KYSbag!$V,L1b;Ahf;\n[dD:VScNJ#d)W0Jg3\:\*\jSBKg`Q&t(kU0YcCe8f
%92Hm<qHCn<)q'g);0#2R&;+'06B#+ie"BSNN5JaD/?/4&,&;0UhNnWe&(+^0(1M3>dD`mZaGG-lj;ht(H[Sg022q:N.uRA;U+8)J
%"2RV(QYM;'D=q;P#XTm'Mr?/*rAgLG,m*QUE)*.*<KQLN!'r.Q`P<6Hf:ZUTi$Uo\@+H?Eml0Tt6Bn;rV!(EO`(2$^RPc"KL6HJf
%J_cZca.Y5]:Z/WrKT,F'7'Fo;J9Trm*W]<nhB,(9hkPaCR"^pu0=lE\7U;Z6&8t?4.3ZE_R64Y@/Vp=Uek9k7j;qC>)M/H0$a;Kk
%=%+Tr?&C<?9u.n?f4Vl>((k%1Qg[f9>)sH30\1dAV&6#LA\UH^/XT#f4mm^`Vsi3G_+5Ye[k3OQ(D31]UnhSLIDd&O3c6`c4,Op#
%&f,N=M(,<d&@-;sU-XH43qPj"D'H>FE$GVZ"R965Dd`U$m&<E(-B_&]DOO\c%+,;_V7?lLI<+sc,:lY/K7oZ.haDNXP0XEo.9,SJ
%K*<0%;,r@0)+]>K=s>;_Zk1^69*98.<%!tSDG4NX'IuCW0Ofjk8r=0'2<'5O)ZCWEQ\P8S$oPW-7IrZ32GoW[d5/If@3<-q[ad[&
%etDJgSWd6EZ9.QY`!ha*&Rgd;/e3o0;FlP<D,(IUZhPg1VZlK7]S@ii$8\(f@1_u0b?Pr&KpV8dWbL&cM_2Lcab8+61hVWQ^SsSj
%7q3O@@Vj0lM:]PQ%XM,3YOjX2FKem+7gqTbFrgNNBP+.,^imf+*FukGK(hY,iTT"+"Xjs&9E;W1lOX+bbV__%O=,cK>LQg7-PgV<
%-Q/&Z#fr!/(mehcp'BY8R(p^U>-kr!F[5gW##q7LJN'_`Oo?l:A#c[i@UF4O0D7efAYs5Q9EeNB!F=V!24rjV`e$<8KVFe#!:d$n
%&fbe[Bq2SAfgQ$M^[,"V_Dm6#!3)ZY&`@78(YL05"uN#\l!=Et=r3BUcX^LC-nC)RK/="ra_2;"YkV)%'GH8+@C6@LdjPf<[_+]S
%`jf##_s(bC&UY18BJO%M7i!#FE;)I^<WR-<3AN&X5RX"s(s#74&Xt`M7)td*@VFI:;[,$V:1?_bq,!,rnIXOCpi9gb##05.<X[bK
%/T;]*7Afj)?[,13'2aq\9UO>q6sN!Ycd7#%RI)"`]e&O1A9,^U)RKi^f9niH'/Fas'K-**%_5MW7O'+SRW8Ih[s6WFVN=2eXFOPB
%JCJ?jF>;?!NQ#A*BlX3Bd1AiH,NNPDFi96XM83f_:V[-Eq?u>-+``"\KGXp^#',Ej5;mRN1XS+.6"iQZC*)4V51OFTL8`>M<A.OT
%OV(R9nnY[EMoYX$rMtK"BgLEMLQ[OLH=>tJ@=h(aUnY[gE@Eu6<#!8:/+Wt?/@12K$"AMq:_rh:9qB5L_-M;VRer>SBjO\m(!*]0
%cIW7%5B&Se)pfKYLF[FbZDQbP-4X!4"\&HJI)1B2%)OtDDC@[m")*ETQsgE]6T+cP0S1&MJ1TgtAm<r[G,L'aHNepr3N$H,nXW7<
%3tohi70OdJ+;BBV/+es3b@F++U@Ts>0_fA6,;g^:'1.H'._nF:K4;ZO"-459d*Rm50\TV0KuHCuek=4>+E,K*6Y<@a0G;'nKTBfR
%4VJh`eHW.TEJ1OYli=E61nC=2>p9K0Pc:N@=F@p.(1J"TkVQ[el&,L.o/gKF!C1;o.5=1l0PF=>'<?a4#@[#d&OriJ$cC$+DaqAp
%+ZU\A80Qr<@uHsm[HKLDJ[n1%b\G]EOUY/!U+$g7a@m957L%HFVf07Fd3J/e$Tc!Qk$_dC&Z4N`PHI530/4IKSs0=2iLK1IO%#bM
%Z1NAH=##*<lJufMK!]24%GmB<.pBI:Ng65.?>,?"?dQ#f3R,Zs:rCf(KK\:.[hZOhRhrXI.2!M!)W89`5fC2U)RCj[=7p0&^%l*n
%/<7UT-04k-S^6!;N5+_?n20p64:?6B*_Nc!rTgdRPibFF)MT1HTh(7HBf[OWq?hrP;,kYN+g?Wc2Niqd9rcqW<0CBe5bMl;Sfo]9
%BE3a4lt[kN!H(e7g*:N$"uRQsb"S)%@!P*<-IMsXPN(=N'9U_*2!H;`["A4P+:<lq;0!eV.[*Z)P3I4ll'pmuHHjQ`NU2t4-`S&D
%2%mDNA+/nU%g2GJ@"NbRX:@MB.MXfRQ@O,Vd,/_L.YTD\N7SUIV!WnJ!cjlG<Fh#.%PT!WU&mOZ1a.$U.6q*f%2-2Ug8O8,%/0S$
%X:UP-(DNP"kQ3$e/XA009V=%#!iP;"8-shJ_VWbs%hXH:O`h*I,Zg]m,f".O__IVN6`?A]K6Vs@+c4=M=:,peOtfV(^m5rS>"+QA
%6;lV@*u8XD)i/$YV[q7<+_](3`4(W#=gGsH/Tu>k%9!4P7d6)=2ULuU"0\,)fH<O&$#c5l1rZt7b0175!`-m36kg`H3MB!F5i1"W
%?-IG%&i)]goGUnpn/$q07D2Z)&9h5;qT/=>CBX2[AQ7c&(<[i</G$R4A,tjA,8^mOKGI9)%*/X(Yu(:M%XrSjd#Ck_YgLDD`"Pr\
%i-Ng,&8rBdF;0,PJe#C,QGB4QV9XHN<DR^?B9Id.F$a:2jrV.TGH&ghQ%o?e69m0(+cDT`"=(a`)8#$l,p^7Q[Y'#?9tO>#3,?s'
%\;GEo<5j_+fLNLR]h4YDERA3Lo1?P8dH&eoD"T]]2TJ.LM5UOWFdS#:4sHXuY@p^d%<q$73.`+5%=/N.e<>S"N[n$%d*Nm@8.J>Z
%2p$As71_(bL'Nc-9F$'\1e@PTg]&nE,GW;GR,8iRK(dVh(XdXQKJ.XYlK=&d]c^piI@2p_3hmSnb#([#QK+?:LcZ><b0]"'Y)[8^
%,:/V0Ob9@/[OE^VSp&:MHQDA.21&M1Z-bF%>R@VGlf<SB*Io@M>0RikQLK`2cpZc3IIDXLVsi-E_+5Ye\$KnH7CnB7OZ:$J7OfJ&
%$#q7N=9p<YJX\VuS`<rPbA:i)9LFfEWp,TS22(+g)<?oNN&WFH.RjIeZ?cl_3gVY`RH-,4VoWM+8*R:/,(dh=.hcTIP'b3[S$&lL
%YB.fEhmmK:]139]YW#T"39$N$CUqkT/'K#.70D`5;Q9jf;kjRgNu"fpLo/>THeKg<6/)Io:(U8bK*i#a<X(\5Z?V%iWB\N.C-#ns
%qLDl?RF72HQ:6^*9&s?JOKg*-R@CLl1q#GEU(A$3/He101C'FmH*AJb]6$n`MKpj<Z(aR#17en*$8""D4[1e5o4TCtU/*8_I_6\P
%&p>=ZID>-Pa'(DYK:IZL@j;">bA6f@jG,$`V5ZQ58@F-IiDI"LHN#2q8FsZD;'FA>!`C=pTbFiM#F3L;K'^]ZJV276O_i!1i!&Q^
%LpdJ!\R>/S1gl(ujr'4m1=0J:1KAFB^.LfNT`oTR>He[3"bk*8@G[/QRPdS#UBNp0,$H$c*"<\!c*1c78)eGm``)!d&.fOS>4"TU
%,AQ86&/ML.jih7nWC+-^\Y2I48(It$!Y*@L5f6c\KhNo>?c'n#RmG1rcJ!d_7I,%T#*jHi4Y$cjeF\A)EeZ5t#SCkD4G@9qs6p$%
%[_b[uJ8:Q%0D8pgH7V<G\>UH<?60s!JrbIuQn45?0n<,6/49X?k/&X2@bp&nBI3rK)3iXpY`bF3ZY6n;81E=*`tkPRfp.8)2d-U,
%?I<.YT.SC9H9<X6Ko?Z;GbYEWR0pk@4gq#=12<jncbk=#;Nm]nl8k_gA_?s+#2]US^&hf./aF*o[!"6p'9(.k>^N-\GQr6Ld)'mI
%T<6>b0(l<8'8<;!,4;9:;6(B"(?.tFk1?t_pe\I5iI%DL$<a%s!6/oDE>-!.;Pf^R:o*ei,rB8<c'm7U9]5tZ@D5\t@g+IN?G2L:
%Dcu[i#b,;OJ;/R\67dVpU'$YJ5V<EISoY3e>1O?i_o-@Mi7:FZRY"FB`VI3tMW9hGeaP>:d1SWg1K"+lO<RXdo&g$n,"%JY3N,:j
%dNF'q]JrC0n\-QE7fM16f7uEm?&hB$[W76=-NQV0`<(2.Ue@TXjUo^W=q4PbWDR-;cr>P)TJ'"nMrqrc\9(o3:S:W&j%AQ&MB2VE
%3)@G=7Op:O9!g]9\;Kd,R'K9(/N,0m5t`eHW,Afl:qeY?goCJ\=Qs&=)S.$%!a^ss*e48[`bnr=j.licMZj28#QC9k<A-bbb6h'5
%(b&Lq+cCb7a*UOcLF*Oi,m`7ZQG/"6,pu@)#:Rh%7]8q4=QNn+a[jgb9-MGkmBu815Vk/>$W8$d>*h@#!Lc=.W%5>E@O`!$e:L6"
%=;4-dc.!$aHNhF/RkFOT.hpio3=e@H';:W['q0<7)!g,C2ilW#qdJG4G`.^0OXutE5d(>#feUj6L<;n,+HM>sUP1T*"3bp:DJ(bG
%*K[VKK%rU&P6hk[,3+7)@\oiN*N9O%i>EF)l94).p_q*6[*)NA$Q!7uKlk\gVYL?;JTD\41Y1Yg;p6lWRR6d+W>a,])]3DtN);;\
%X`lctk7V=?<_ZM&RMfku!WY1E,fKYLmHbSl;?sGM"Qf\a\sOeeJr/E;(<-tQ#,X9'H.qe/HMlbmR*ZF9AZl3C7:_A?'HIG1;I(q%
%+Mr\H9UErf5)G"l`uF'CA1VqPr:nd<CP&?>[HLu'2IQB5r'c5F9bfr72F6kF.K_Nukh\Y.QIu?!RM@Ph[,3+-PKE-D=.keHXf@L@
%H<:=3;GN8f0rBQ+&4k%H>*@u"lN1';/.4&QTZESY_po"FqgdrC!n!8LKnCUY*kh\Q6\#HdcpX[i&ttBe)Mmp&V-IYEEsa*9J!krk
%Lj.9>`4$l,eA@bRo`gl8a$9VBA*'+@#HcL5VGgo_@<S)N=VWG/`Lo"s#b!RC2(C@I$QsH?HtiF#G%h*oV!GI[=Nn'<)(uOa]GZ>*
%T!aj$Sn^PYb%R[0N?04XKM:&&p4RQo;LStA1<`\>[c$+'RN$qa%!eOsF-j.LUPb3=$;5pe[>!UKWjC0io+)l8B9e+IqngEn[?V;L
%2HgJ/Dm];HMG@)r&.eMhP6oT*U30eD$Eu:n/CL27EV+TH$pE'fA>QY&+-<''!8(3[AIJr9//m3ZM"`fr`JBT[kY3VSQm=XE^ib/^
%J.Dfd!+'H#0dH),'0g)lZ+!'\]P,:%82=MMe=^Hfk0gVeN*=l8^_G.iAh>@Bkdsi3&unDF.0;#5E:hDDeb1-A*0lLsiQI[E0X_2X
%)_lW_#\QJCdi]l=1qafL!,Hrle((ea,:cfH#aet$)A4Ueq@4_=/l8>d.OW[:r[CJg0;m9Z?Gnh;k^BH@3Mnjs^sEf!U+tgIbsXl$
%,O)9@j)6p2]l.<V^ndgMbK5?<-^+>aa_%+"Lc^;&)[F5Vea/!VYMj;"6aZ=0cZ#gee2dWMp4mjq.JaJ3iDP>-]fIq.+hQRd0E(O6
%qDP/6rU4pubq?4WrSkGmIeDdTbHDDZ^AZefYPpr@VOtVPp&2@Ce'"*Ume5Di-Z<n;r^n5Prq*YrnP==Xpn.?I"_st0XMR?L3Yb@?
%lJ]M)ej,i^0mA<4mM0JpZ14\2!Mq"6;CBG6XEYUP)9r4L=p,@W[Hp9po.EQ^7VJVTNAbdr66R-ZR\>toBg%*$3J/5EjBU&)%E`7h
%N7&64].oSH:nqc1#%!MlqZf7jAJOM[:.+(J+/<WfnS[\,N^pF)M-iPd$IjZ.QN(_M+CeM!;aLJ31up)S=^1""@>5ro<Gs-dUFdB;
%\*#X<i36a!YNrBG,i-FRhOXt97Z3^kYMY)!<&E+OYH(i)b1<Mo2O!B6\c>.p;Yq9uW9=4D'Li0cQtc,mB++!:@k&^!CF"$)BN)ng
%+4X)=rZoL9g_[7YY`DXo_6c09\AKSEqNTCPb]KP&N>>5\$5NbDE<2hmA,6sL:>AF"H)EO>)3>dEg6iP3]N3nl1=YA'bH]\2=r=@h
%LC0DFd%[csBj%2U":>1F0Rnd19.7C<UP4R$!4t"=S&iJ>*P)=)V#_HqN5,mVNiXWLA*-kY"U?koMR0+`88g:5)MDWQk2+K4@R17)
%GYg2i]oEHmMY%f(rCE)?$Q2\J?-kc*NBHf;.WfO4e&^BD/`3(+=(B@.=V1EE.9O8Ilj7pm^oS@V7YM-.]q-Z9Mq3@.g2!&V8C:X,
%g'(uZ>h:JmBLn<9g$AP&RjP]0V)__a#,o):IM;,MN/S<"B-ScfH*B9Uh7/^KV.Wd5K2@(RXP:&s@VW@sG):/TF8DCFfin0%(9D^J
%)OR7W"GYFljB7eiWX3%_7HO$#C(,hf>W+0"%4uui2E.`a@%nUtNgre^nr$=oW*/#k75%)T/G/LZ,/RQK=l'RPH#$%q[>8)phi&E[
%AlnP0eHh0thkKaj`iNEOp8'o_[$Xbu+%E;HQE9R8]p]_%O,\-/?4&n-]U[J@N:"M+,\3mc\Fc4o&mQ]a[pa\%=u,Gj$mE<f!7]=^
%cI#ihpWs"%C,Fun'G1HIP#ck$&.e:9n1'8S7*9s"d;=t2ajT7W!ZH/X7I*80"I=*4-6DC*Xu2a-T+Zc'BfmDTMRF3NeY^6B(/<F6
%QB>pK6IBAplg2.t23>tn:"0ZO@()kI"OIBA7m4pi?o4"*N&(dC;'[`b;s2h'\n]V2R]1=lQ6Rfi)(L<edQfX?(*XMT>cbo$W_>56
%e]IUJ+VN.j",I!T=:U6YI@4=U8-!4+IN0=Fbq&:mCDq'U/;!tk%h&4D'sm[A[)bdPoo9fq"95g@S[e5KV5Rn_P<*F=UVlF"7i"GX
%BQ,-[qEm'd/p(8`MWctj?!rgLM!VF1&LlTA!VrU\bfqRP7s#AdjGBO5cj>6.\D#'-.NFbqQ']^VW*/VggdT+O5ln$>-o3ec_*c;N
%Ht6-mJ0c51PGPJYRC`s>r#cA\Mq2^,>nQTAki0bEMP.@0857EMe5?Fo49M76[*EY9PS<$9q)hONeah\k1;9#%NP`'6h0<eP%H-!g
%YEPs8)kN'b^eA2f0s@7o?c^-AK,G%V(MLN>&QqnNi"&)!1!Gs!HtX*u/5i_]$92"=V]D*lLaA3,iFF-D$>LOH8RD$R)Aj[I[jm,`
%B.H+RX=fj59j&9HSC*F/a0K;93'33e7H[\S&s+MmHT9MX9aZtC0ldRBVfnCZ@)XUOJ6#sI^tqO#1DdH6#jK0W!2]fo><d%/'GH"_
%_*g]oX^0q^n@k>'$D>\SLC1l@J5eZ9_sfCR/H]!R9Np4bF-Z)[JDuRANX_X*a;T7Bf7@!GQ9c3#=`08H/-9*bAn-XU%Ff>>0`m22
%QqCiXaiaaNQunmQ-4;O%;%_HlRuc[0JQo'4/Z&0:#8O(@(1mK`ng*P%$soF&jksZ;jrCW!'oN-#%r$csbHU(RWI%j"Ee;"5ab0i-
%2enesng*N48R\mZ].rf8iTVAmIpbqPPpF))I,W#I@^a2V%k0%\L=-HdX,#M,RB@M)qFr9in^:+%bBZU9V$pp@Zo#$2h[Z"^MKC8g
%<=,\L:5K<4JjLn!%(,Y5ep7LZhCog/1CLp$.FHRc&b2hp6`@AEO@k%*L"V2L;lLs6aW0gp;H?'u&s#C&($.'!q6'\`OkPhG.sZVQ
%HNXniZ?mSXJOg9.M#%ZYZEeA-;n-uN+W/9gH5l8Zh3](J-clA:X6ZtpO\HtP)+LB"g'S@8_)]I<[2L$=!b'6n`KOEpm?/g#!T.;=
%0>Lh'BUetf1tB=-nje>VrN[ZO@T3o$e#$64]\.=``o@%F3s/G#(3WeB1paL8T/'g+4XG,*aHr#uLl%O=bQ+2(9b\n[#WuL6Q1gpQ
%?qNhN^$5p0l"-1CWDqaEbhn,3HuO3J6XMOZ@)l\Z^Z\_'"5$qmk->UK7o%6@+F1%1Qe<oDU#e$01E6j[+#Z)(W8QiMJ^mBR)Un"s
%pS:fS$o-uSYa2,pn3phI]+Uk?_&a+P"4AX</"D+IVshdCCIR%!V_UOW/riMX7EP7fChYWh2>Hg3<\i]A0NR.lK,>f:@)?V0$X"fN
%9d7-%k+pOYd]+nE#g<>Z@^"o7dm?F*2>:MHCI&=MOIaSA8iH5u9Qq!K+C@!GP[;JAO@_T/=TgZ+>>X)_UK/pB$Y8`5=RA\f$7$=%
%d[Bb[<^M@-M!`dGZ6n(GqQ9636INA.IAY"`7d(#S5N_o#063q_JY-S6f1F),T^$SuZe=+h/="In@S>lh5r1$O==i3T=#!1''GeLj
%#3K&_*3;-:0(fW_OM?c8p[W>J^j/FW/u^Kbr#2C4W*k`u:s(P:q/!]3!!tcOf9ZuS!?Pt^c<F6`@l,n(8!=@>)9)*o=fMKKkFKIe
%b_WWJH"$b=bLeRX/>'&iP0NJ-4JN$u/'%^m%?AlP+@h3JTPm]@jYU=McWa4#KpLX4NCRXg)en&R?8A5;6lN_4V21R?_h,:nfbqG*
%D+ZlZ!j(okP-_H+a\aWBSZiZmNUK#j\-"mZ>Vp/Y_)EC&W`'-Sj:,#X6pF^uDr=HtH;6_'WO(&+TdLp9l)V&\W+-mIo_(j0on;!q
%+:JH'(*a:R68Z%8JOC9pf0^aPOrpGP;UokT!Y\*mon/A<bq'D2r".d50s@hX5$aSeQZY#.(M=VQ8$I;4Ar_4E=u:PbOsfbF8P@SZ
%(UO_j2#@Ca8R@n*EJlZ;;R*6Fij[M/'gnt1MG$[3H:Y)*UnpIp@7:nT,diEU+kg*1N[UYij=2`bUk!)+8r:ta;IH51S\dOLN?#qd
%G=?V4IA,?e9j:.?JAh@HI9C%KQ5'YXX'nMM>!Ng^5\O=^4%Gk:-dg.;,;b`fFE2E,ea`\aNM+[Xb4jk]?:2\DOr08eO-*F%TghSn
%IROW#1L2C'Z<g_A2@7_;l/saIka8Y@"Bk[fFMNu3ctI#S/lPqV)$dAUTlYgCXGa0/[NaY[-,MT,HPnE2IfR@-g,PnP"V7/16"`54
%'BEk:ne:eo8d%nOQ$%l=%E"&h=a1/@..cJ`!/GBZWeX\q:g7!Ti)%8B'0Ika!!1VNeH_Ho>r;E^@gZ!+0=sYAbQ5VXP7oZ@jn>`)
%&O\?8I<"deJT.V2aS;Y]SQ@5!a=qY2d,MhEX0jKqk\mP+:@"BaFik.>!YJQ@jZp.b$J]ZN[:5"2K0f=2=_s?\'I0ZY10@<[+.2L!
%>R"@L<1](g%LTb6p&a!;3ZV;MT75KgFlFZk!\7ntX&hue`<6l,f^"\P+R?Bb]iK;,.5"X-KP+CL8a>B^kYFB%Hj#lOGbV]qZT\T,
%8h0soqLq<*1hFkWd]=Fk,`:/`&L^Qnnl;efpn==Y$*d,ZHln1ra[j*:E(;^Y;[fR$PCuHTf0crGLg6<OB9NB'5h'$Q#2Qpm&t#6W
%[1JnRn9!WEPIVYb6o]UM^[TI4WXT.l3@2&XY0a@"ABTQf^''$[*06q2p"6d;L_jSI2*;7Y<0#[TXM"G9KA/+AeHk/\fgi8O)=B+5
%hI4$Il%/+#7bj]TV$Z2K!-8e],[6:1QO'&mZDF6g#VE%J?o&oRdQr1[PCmMQA(Yb(aBAk5QW^0F*.nV7r>2Ko.!IA5Fe*MQF0Fb7
%Q$&$qX]I:*)P'QF9B$,R<Wr;$K+3gVinbMORB?'RH/a<F@;q9U<m\[QP*j2?.?c@-W2<$th*uqjXX8*FB$2JN6`/n:O)7iMIRU6h
%U7s2sRTZfHnd>;J`%@"=^#[Qc;(6SV'bs%9^kPELj:]@&KhH-`P"Vm9/I`[Yp/0))@4QYe5eoo?TS",u8[<qHMe+Id!f5j*ZYDCq
%FHQs0kQ81f:4Q8oM\?M%N\qJ_).\WYXm9"#*d17XjuC0PNLWFj/q`Rb5bQ:T'm4(o`DR1;KJec]^^U^(`ZB5[%$p]?.b4/^lq3E1
%AqN!:>fb^;]YCBW$=uXpo&\$gbSj(jR(tKi)+4]@/qtOs=r:\%Wg1?+C'Z)m^@IOXCPB/T;`$8sYmj4,X(@E&!\-eL&#U^CA4j>F
%>E#0`"t"&BI4+#E#('ee.BT020_apMCkrZ@#"FRu-PWRjdpf_7M*#r)A65#b33Bf3?kn6G18P+]VI-G$')Tut,s""h7TC>043pd^
%Ad0Mo7\r+A@a&F^]d[7B%WJ/^c=58S)T#e\&`K.2Z`+U0!=_7?ost8U`n3rV"6D>=L8P4@<Hh>8\A%SFh2.q3ddqeq=4B*Z9]jQd
%JAuZ;X;NZs+_;kQkdLW1'h7$sgP3F8QG8iPN'"2sIUKma(u>EHD.dYpC)c[\NG[JP#6&KX9i-E[<^oUrU\LSLHR@u44[MGHnnL4'
%B&^1%Pj+nZ$18(llF&<!G[T4QpXP\['QJh*9<aaVKP<!KMe6qVYg#b13"ERSq-M=F<i`*;E20GljD,SHq^rQb\*40=(aHfRr'N[r
%2#Wmi1a/A\-*q"pO4cE`lD3EYYuGETWAsn#o';]BS41R#W]Hu$0lH$f.*ec,8S<_9J36ECd0[e.eASKX3hLYt`X]AL'?Ag3QaF&O
%UB7[*m!NCY8&^!j%Tk6<$?B:[`0%^11M3Ksa7]ap3urDmnR^en?d?a1'm:!9G;u`@K;bp-iLVs!4/39-0@Q?,n[c]F6qA;XPQS/c
%DMc:$nO1P]D`B^1&AR#KL,V)gV%)!p(gF9@Pr,!u6>E;*BfMWi!.U_aL'+Ja.GBM34BqYOB+.S\&s#+_3.4:ndr+rtOkmNLh@ZN0
%b_0O-`7Vr;/Q2.PADtJ<=SZT7iQR]Y6@5U;B5VR.B2mgmf1;!=9]=ndD6^32iN,S2B/JS$)gSuZ-li%Q,U1nSKfa13"2gfGKnH[m
%8Yq%f*/%4KQ>_Vs_;@LAQ-L$Q7EPbu%8AgpeR[@l>Rn<V*JU>QKO]d$.eT2R*8*YL3>`1`+pHUkFsRE,/0-q<L*%Dl#DouQ4a7@#
%->i,-Ugd*`N#]JFNJ.m`E)9402'1Q2kT:GEDlCM"7hI$KSJ`DP>=SBC0nY*n.flIgbi%7pcI[mk*#)Kb]39$M_7;KE!n;i@SE&Rq
%J8Wlp;p.iDY0F[ZH5C,oe+u!JrT8iTXS&$m_3&h*qU9F&.HI4-ahcSp%6M'XZ`;F:_0I\EcO>,=&p1qthpR.PRCfm9IW,oG+E(]X
%K9OCbq`8Qh_21S_Bcd31,h6)>nicSslRm<\5=U*@/efGA*<b=HeT)r$Sd<2I7P;ui"QA-GNV03?+<6+jPOpd2i8b7mol]F&-SZ>0
%'BfSXB[Nr32?_t=?Br1YpqbY!iA5e!m`ibOjUF@4T\Y_ncH%BW4s.l.4nF:^O\D<bis03Tk5n&\o7J:W6[@JXK0'jk\[:p[UP7K8
%K--V*^IB'SdXu&7+uRuF#KJm%FRC)oE'cR`1)olDKE.G%DtMu+m#%(-YOpaT&jT8PfYJReAq<G<r87SF8/\kt#KLk[6db_G*LYi:
%RWO!tZtO=SL*,2jYHI4nIW,FM=A,s]#=k;?E*;?/-\Z*+X/c*URMrfV1Oa:=lJ.g45I`)K@Q^Cj-]&Bn8*eE%jVU'"o\`j7(6T_W
%keTPeO@\3Zl+sJq@\O+Z(@TQD_6o^#]CCNW2s^D"qG`'m1I&C`*dq;R#@B]hZ[qG?:(:"N*Z<5M6>eN21O="`0p\:p&'f]u,876-
%K9Nd.,/'ZTGI]LuFaA#1Ul]Jj#7&8kR\q`#3++TI_E0n?YW.V-FaA"s;n8UcL*#-VR'-:N*ZW6RBc@7>3-f&"0RT`&a4)u`EMEad
%!3fSdL?=I'RQ,?-%h?pKaPYn\7gmSR_%2P_^sMV,PolM)En/5RaU_.p@<.rUpqc4aOZTQ6K54+3.mNfTl%U:M:)\2%4$P\2VfX:c
%is-t1gg\Rtaq'LE:]a#E#A<I6B]Y0pS@a_8eD0l9*Hr8ID<2!-Z&Q#jchu^'9NVTapq\\\bZ3<dK;2SY2!kG)4:ruP-O@aj7BC#H
%#ff9@+AKB[KIcMgDhB/PU(P2.]A[F'k$"l<?kFB6&>AJd&FRX1Z+)TAE)Ik0=B:#m/CQ*4)hN%UFXdoD-O;*5BW5hp#^68DK3^MD
%_CP@;?0T2k@YX0&*?9MiEjRkf3+14(bMWS;EZU$UB>X&!2)O'U_2DB\LJA8LS+:=?]\jL.O9[?sG.<?GOFlYej1XCScTj&?58kh-
%0dG<'=j`<g^N<*SNd(o[D*&iL,;TK3SV[lI>u0=*ir`rJ0fNY.I,M(k:qldo%iiiF5#g\IB*EqU:M"q3B[Q4=2LOGJHdd[7#7`hJ
%)^f_cE8!!8/\9A]-g"OlPmokK^jKbs^Z2g'h9qi6bJ0T4,6K;40)=6`of">2kbkR87@f&_[l.hm$I"Jg&oMRVAL6Wm9/0Th7W1CV
%2]1u4hteAoYso*m%AE=$Qa2Q7:6/dMR,6iJQi8@*I/4*uE+IpAOk*20%a0JdU)=\*.21\8F=qN7DNN24$CoXa.hObM3b9$tB**:Y
%V@N!P$(Trrh,2po^]A<)(=:&(cD$fD9Vn-`S0iBY.hO`ZXIs&M!pAF>@&<3hi+VUt&:qI-_pF,D*:M(.b>&49g/K>UFt.IF..H^8
%'f_+tJ-pBJE14R;.E"d]c>"E*]!eXJ!\\L>3tjS(I)%MaRD=Y6\[!L_-PIasUcT/J%;D\*bXCB"eRU++-N[q:O]n^tJJ/SI/DchP
%^q$F%C!SgP32pP),]&:PR66*4mQBF7)JHp/*cTIdZMo?s"3q@a=Zk,X^e*-ImFup%aa2$sQ44?a@hFu^Q=1E]!u*'8K*NAJb[02t
%J?-f%[$:k9/Ri;'Pm?*LM@9^6L'O5Ej\fJKhuq/eBRT"DB6fF?>DrfW>"1NEN<^H#U$f\+i;q!;iP+EE#2G?@(5V+-"rq"VZ\/Ml
%3+(42[uCS3[KCel[QNJQ3=uN74Q$_Fh_\(i%ldb6Fh+1HGGHO^_X:!@Merh`BY\V!#'dAG!Tu71@G5G2C"TWoYLA"`19J,D(3"Z!
%k-f@IE:RqQ:i!rMcFbFj_U;T&RH-c8lR^t1=j1_b=hrkG=K/WWo,Wp-0j)6Uo`l^h>ZnjFV*cZ`=MW<o,hj.ei/W.qPqs%l1/mb+
%`W;)@>e$o9;1PFBQs.2"!,!H]bAj?Ya6Pfbp3-j_Vj%^;9**==Wo?bSc5(:*eLA;eJl;7n"ZUoVDd,+36t/_%,!&p8E8!@h(r+/n
%cMh#66umgApQA*<1C#lT![9m^"'kM].k:occbV6[>7tmY:8RE3m%ROq#%QjD#<6EYR<Pmo!%7N92m\Sci,J]eh)@=/+V^5a2fjLJ
%W2SoA$TO@'FJmo^"^FFDA`<`7SR?$uJ1In,Fihc.Nb42()\4n1rS.LTo7-oX:j2F>&NJX9_<O;hN\Al']cdHTpCf+f6ERKU9HA4!
%E86EF&fVm2oK\>Ypb<h/l:4nJFrkU^B.re6#9;"2`mo@M'cL=[^pu?G3k8f&LTIhV@'G/;@>q2))]!B>M>0!6J.ig\jp[daS-a;j
%1,2iGE.h,S&>c^`1KL?aLX.O0"Cs"Z-$@s$CYmm?!G=BK\F>4WS9Ck%Ke!ZnlTY]aFXD(0eth+Z1P*/Qe,c*HS4S2Uip0:rYV_T2
%EPhq)W"<*V3YOKW1u7W(1P);i=oC6Pi+Q_/=D%]U,Ad8PR0fB3+,PV3'0%cWC"@DRE'BN[`eFd>;Q9Q"FXD&90faC^'0%3h,_Oc(
%JO;hi4JsudA":':hd?LuSluY=%B<'ED94:?37=-U2Vf3Di0k_l*,`Xsc?qeWd[^a#YopGeHBtXuU2JSgT`V.Z)e3!L^`B30+g4l'
%9^q%ZZl:K6"h:YrQ`C6Fs/<.\<8c!&.gF[1[Tt_GVc/.nB-aH\.WG)MYimFuM@AmS]0QVgSH6Q2.WBK5AJ]G<E7isRQ?#Fu%^`@J
%crMW8p)[RCWPCOhoF!QVi!A;LgraM2JKrQHj^t4g#HOdSgLW=B^feR?(7iXkgR4"IHp\(_$8@cQG:IR-*:%2QSI1m0A:"!<$63&Z
%8nDC8i%-PA:0!hn*,gt)o6hqfa6V0>lWi?ZF=hCfE.LC'F_EfP\@)AFl<N8[<*NreE.Iu.ggFCFkXo>G?Fdj/6lK)UE$V,u98#S7
%NYZ]cAh%bYKC7^GWPFpiYC,1r"cdZf.VtKfOk$$pNSg/>q9Y:+,&dZ@F?45o_!t9:q/dg""E,#f2^WM5jQ[RuW5-N+6$e8\"\o&B
%m+jIr^`gK#'6PdDqN[U-gsO*c[\(`t$XDL^f2aMC`d!m#e[`KC_MZ2^(HC$(^>Fs:jcQl:*nK#[dD5Um%3%:%6WaaY)`U&(`^f1o
%^Z54+$hj@'5&dAmdeDPdJNN#MYr9Sr^pQP?O.Plm6Q_'2NQ=;uPT[k1HDCXUAteY*BQW0+.OPhKL(>8f\b'u)nprS;Ufp%md/e'N
%bR(T6"6XFK%%ad*<9s*nI,K4`o[A$LIrISj<[\!uhsu?IP_A3_pqS'LA2G<Si$>O8D;p9\*;rU`Eq"W9bfUR.c3Nc`ilRJs*6g_^
%"s#\#&Y](f#EELo,5Ef233LaFqb@CA(+)7akeR!"Q54R'E'/c=l_">]*X9t9DWnn#+em,.d"+!3?aF,(^u:`?N5[@h3;e"6luk:+
%@KT;9m;1]G""Fc,%3%9qal"o+^u8?Fq,h83GMH;h@H!U`*6m#R@qoKU-ar3+a"XiNj6[i^F?:GOj6$'2VDC,L]SA8]DV2`*gssIQ
%,%C^F$V<K>ADi9]K+Da:JKs09_o)`(Um.^I;1TsZd;iEY^lau+3eGW[hJ=RH/J0tH^`;@V"-/*^e<L4X(gnVai6264on>Zt+9?-*
%J+Y;sGdG(I[M7ZEp<FK`i4qb1[bich44Z9"^G:>77E<=`^`@V0-WTf_!"LbGjs>-OE*,+KpY-=2(Q,.uq7fe;70fd?Ikta>CLG'Z
%%Hj0b\AnN-3dstlG4KS@SUmATbP_lsWUOLlrLJcnp;n1s+-rX<M8/#U0.ZEKpUFi#Nj4$XbDJ`+)q+0fP`0jKI\WrQB*hd6^Y):Q
%RSN^=(8WGJUu,uS^hugA%I%GPp`TNiVqEE>Dt&4kVVEqUpN"AApl/H>#F<KWpC4SdSrnG2iM*6uahFfm3^1X!O[%F^):^Y`/Q5lA
%^@Bb_bRC@eJojTo3\u2jRAhCMoZ[SJ5_J;?/Mol(9](i*MJX[9L=6rD46--S:@Yn]o8T4#'&q()NVmC"GF_=>YqjA2;LB]eJW,Xb
%n;WEO*R+!^^NVKg@ISW-#RAhfdsE=Jj?qY*HXg,NnB;;]DbOJH+._.*=sl+cDPm+si0<U&S_@:f>;GrueD=m$7gs-N[#f]S:jXug
%NWhK`DJq?f-nr`UdF,[mq^[ncH6H<<D90Cf-F"i2EdL0I_Z&=EHfN9NH)lqWS'_TX4EOouB%q':LqO[t%T[noL]TQ-!9F]"DrCWE
%bZe[tK)`p))9gsUrCcZ2ZSta1'W,c9]b.>JY`naQp*Ms5?E5Zc2qBX2`1ZhD679KZ=K0!=;U^KZ;L@FlUs0B]D`0FMG0eChBVr3Y
%eD=kIct%*BdrB)4AXU*BM'=/VTQ>It\mV=_E-oJ(@7Ygim7eh)k-/lQ".ESI":f<fZtSRGL>,oUBV/=CDrUN*q8)GmDSp9!lOun0
%,VkC]Z$Xq<8k,bnZ?t%W$Y^p]k#X+JXQ84p_,uPu+nl0PY4ZS$gm^<5+o@P[gX0V!$.t!fRnO&NQBesa;147B-hjJWJ;fC<\[PKJ
%^9-JQ$BBk+gKRHFB@Pd38OBq+:jY!l7/74Lg)JEBmeo(#HS^c#ir@<jNQu+tlsTPL5S`&2@HI20$r4FDF*l@P<<eSRgD_5-!-<++
%45qPpV=oY97+?HSm7e.Z.c%&:dD.O(61)q4a-+`8]pY5)eYY-L_nKb)cA(#A<^0/6NS,9G!a,^hZa\tl>:uL%HaCqg92K9pB''uU
%^(%J/S4BCsn'p350SuA1C2]s/Yfcg-g)D`+mdAK%]a`Ib/%%<e:Ke2HC2]EV!#Za*hF%[8(#5b$nRf`>\('8"qACM!eDBBjqEZ'4
%DmY[@W"XOL[)I2&Z)"7NZk6MODkKj?Lid*E_XlW-KNX/FM:+1+^Ctsh7@1hclj_$B2`o_)HP>"@ofsnu7SA>.)8tA?b^"e_1U/n)
%:g@riZa[pf@U5D8l0'KmmEWr4jBkK+L,"$"e=/a&3N0V/P%-iPL>/2;A#'YFDJq!lfKWSXDlQ4neR@7i</*TKQ.m60"<f_RhFook
%/hNXK)fqXp_]\\c[^^D;N80o$Smm^Lm`kQbJK!V+BMf,_%CnDFX;aa3H=\=)ft"fbHM?k03'Ohb%Ot:j'K4b'bY(Vd`f8`BAU5V7
%khP#?hd+HT?+IX+nM%>8gRA[hE@\FUgeut:C.%@tK8Y[3S_@:8e3:"ahXlgY2nbWY]kL+n]=q3j1T-kEX.A#Bm[&D!:AlhF$<O$5
%>p3b/5h1K\8DsFS';A*SYHSIk%)!CoO[07@:66%jQF.nHnRT.R.'DZ8L+R+AUo*7ii(OQ\j3C-33XWO(('11@Gqb1Rm(>_19/$`/
%TfXB=M5Ybd0OlANU7(gJ+?X1WF$LcsU1k`!AC>F1[a,LgQJ?Q:Z1khIomst&h8h`o>pt,gm/"_.jSGSEiH;1P5\]:/!+SjQL16WU
%d%Yd=YL?boaCgFu)PA%MQ16O_#qnS4g+uO<A+U@)Mp:r1Wk(W];pI>/fIf]sO3KgrgurGo*o/mYZn$)rYS0i=XRq1NG\eY'5skF*
%A)@iP4'8m7\ec`W.?nu?:.qjWWjC@oFt@;sU'LK\iU^Nk.X7(@(.qpL/L_099),&9)aHOOaZ[4KPeo@H"+KG]C<&/Pld;GR,p9b.
%JZ'1F@t@)Ji4^-E]R[Xl++Uq*(W]R5.S][`bpe)KWmV&bWG'D&0WLkeMb?.#ohl1uliFPN=JM^3(C.=cmR@F`AC5'=.^6_h4/a%#
%*DQ#gq$?77Oqg\EKk3]gW`=bqn-g%IDmkmR4DWZP;i;lo/<]n*;%A+!.=ftf];_M.k.LD7!_sVuXMeUO,t"iAD7(Ph0\Yt%(:W\c
%L%63;jQb<VeY3$e[bg!k]F`#r;#p]$*<BA*Yc%c=fgoHW9IY#Ig_4\7$^9!mdc\Z^!,CId)+Ku7BN-*s=4ECL%YJ%*FmfPHjXePG
%/CR@.6n%uC\aG*plL%CaM-&)6c";cX+A!oEKZ>uJSWstVX/@lGC;PQMQ:1sjJbP-.ZLA)50T9sM5ghNi/O357_^6KNM>M8n)%2-]
%CV*"]%A&Q.X@7P)/ro]0f$;ZYkH/2i14<U5ULk5,XfP,A-V<;o3Rn`2`tn/tTSHXd2s<4j7l'lMc!&1!U9-\/Nf#H<-r^o5JV.rr
%k_F0`BrB5JE<<U`AeucTHUg_B4=;YQP@!N+r(3UdAEF*a,"\L4<l`IT)dFOkdHW7/>0&0)[0<N4V!D^TE^3XI+Ss&,eP@G<$MY`G
%k7?!r;Fo1E69(_F-NItL0$7SA+f%V%S=qEJ\:,;?UeW#H<n-(8KZEVO@f@]\+>_HN4%VX<_@bT+$l3h'jNQE7*@MI-:0pP];/hU%
%/]KQf$sJ`,U+leGKp!E;R0X*0J;PI6bP,6F2M7YEbn9FOT7A26ZnRK$/`ag((#+$=157Gn$M1!kRoiTlk723L\X2.U<nuZ]OF$>)
%k*r+>JNLP*<DXDW-!7lQeb6@W8gH.<OlLWf6,`C"E_kNuDJk6-,55T3hLM^F1<bC_L_W890MqqQTKAc#ZueR,oSAY7bsZDbAk<R[
%G!UFa@%$.R#K_XUqZCkXJ84+Ial5sE]9JG1geB&Z+]uQ5%2;dR;l+GAZ])0:ErkC%EO!.rEl&q1&s9Y^UfX)(N$3*,3<29LV4Fs+
%4FsU<F6L+o.6pV?#3c`)NTW'5'm-_)2Omm7k7)L!)fVJs5p<OXOd^fd:m]!m_hniBArlR&ash(0n-i?G6:M8Ej#tu)&P/oL.lC\D
%lC(;f"EIG'Bl+78U?-5oSfGo%\]eKE&);43rE=(<FgMij.&NT1`g'*E9tW?1gB\A@9n7mNl6OHgfQ_[WHT_Kn\4nD='*t"'!.E:U
%&&<"tp<A8?I"M:-$P]<k13V;;Q-`n](kI)QTu96a)$&<"h@#IimWkKd00\Vf)k"f6Gan=H$n)6(11;=8ghWZh["3@nQiNf#iA@]j
%+LQp53_Z5L(;7'bJdIsgf>Cr4`R7C6l&bP!40'<h\MYt_0o!aN;UZPMGANj?Jp1="g`6r2;PRbdJ9_LtAS<\u[KGc_+Bk]c7:?g4
%1;$)hB60V;RNodg+CV`>hAXe9V.gb@Z!J[=;6--EA<4dK36SftUfU<=B&TFPjLOa+$/E*g.]fX,'"@"b3=TWUI]?`KNlGD;\sXPH
%8Hg?IN\-Weaa``#^Y^a=VBmqDfU?o#je@T<SB"0!a#:uKEh[ei$T#u]kt\)e$Jir>1Rfn0/,$P>V'8.NJeRk)C25AX8jI&$8CSC)
%[*(VE$sh(OEM:J;Xl7R$SY<=s<*e$"&HF/`N/&e")LX#SDOpj[LM8jOW#JX,LF6)J1Wf3mkH[TD2Hpg'<6\^WS#3!N8(85Y__]<@
%fmMW([i.UD\D"?]+#G_\*.%ouXC:Mc/B@(H-Ac0+1%GA7_t2O9Zu>.;F'!Q,75nU<,&=:Mjbm_2U1NR_K)A/WW!Yp&:I6XA1Nn1E
%#?lmAgU<9AP]3PQijFKV=LQ"Ri$,pRGCa@$lY&+B.^We4E0CF30N/E4g]P@14DRb3)P8MspCN)ae)^\.F7>^3$c0MASotX:NYk\e
%Y`CR-S?Q#o?c.mLGHl^C_(uI#IeWhAGCd+rZrrp="CH7*erF-tCfMdG"#gko\PLb8.s+]fLeq1Hn5?OuL/O3MgUIUng!hEXBSR?=
%6Qr>3Mf,+[j+7UL]?npm!&k:cZ)LbS4_[^Mn7gKTgiA=M!1NFXC1+kS-GSK0n,2f`qDQ:X"7Gk;FA%2TjIdM^ddJ".!(`M;:KB5b
%omCnbk^&+!]Oi,3Lu=>6c!#rrV\6t/&XDl4S"[&3'mS/T@$_@XcZH=_7NJ[ag0EVr(f'F[%d/jT=4iD@JZfC2"Y2J@h5,6"FMj#G
%3@[FO>A!L3gOR1VUXo%H*Aa3:Uq]A;HeF]Z]Z.0tP7kRg9pc<Iq<Y*5=Hu0CTXOpT*T\6o$ss>rPeaFs>29^!Q3f;B9IM#-6";F'
%nT&0(?.A[X<A+Q4`iac(D^^g1mjaVR2@&!T3cg`9c)prMp\Bsfh2b!K*tCR]$a^@?6q!OPE'>um/Be2(,]aV'Qk9G'Bo"9.B2Hh`
%?$.\0VYL1tpMS5q**9T<]-?khqILl3#ns>_b"Lj[8YBlAT0lmJae"W)@R:*H9bAUT3$9VPoBX.rC[]KIl3gF]!-L5"a)c';Zaqc7
%ft";%Yu1kM,,r37^^bsJ1n9l=0>[J@eikdD\XFN8^p&VcH\]'s[@WaM6)r^K(UOo>&*P;\@8YblFqt.;!?e:$E`nJHp&Y8QCoXcg
%g,/WRi?Z=j,Qp'm#NFd\d#JDU9KVn3?'AW9!JA?]6rdrfEtUOMgJg@Y,L@dA_J&*Tr"oH"$nD]O+9X<Ni!#)p.FuB>Su^;=Z:tW<
%"%[1TiO5RL)Q+'bcG6@3TeN#Rda/$'".J-f]3c.EN@gDbZ!X_(3fk@4N>i'_0DS-FWYt;W<0:QmV@fN:oKq6mkd>[RY;VNX)?:.>
%,e8<942LW:HcleF2*2tc=p*u`*37[Gp<Wss8/ui&jh5<R)mSh(JMpU:1?o,Rimc=PLJ\6P)P%=>/O52;EaD=:)>4?R3J_2!'$>:V
%#Jji,#`b%O2:IN0C&cCB15#Z>1%ZKf+f?(aP3q0iB6f("9!;,=C(*O>-gr\sm$5q%V7%30Oi;8UWRk2b](0ZcaOVTQ3-a/R,_L*c
%nrY&1mj,-m+oVuQ,C>NVa-ag4%<o@WqoCEfg!t(K8fiSC]d],tQHVtDYMA>#0r^+f3ku"dkSq/QGf0dFqGoL.q'^D&4-2gR;Ir*#
%kGX;iQCCNNa3PLX<N]hTgk-Rr-j2AoW6laUM"j5%Ci-H>l_`,)$Sbe=Z.E1U!gJeO*jGUISafX3aN4d-C0[CbXlWA8]89b%icd-=
%<r&$Fn$];u:f;*&7)EJt/VGB/:Ep!OS,.:Za[<]GnR[k`#;9As1joE3Z#P5l'A'#9GUP"#Rb64o)P0rrTE'_D/6G92Q*sP<.n#<.
%eOVVW3bQKcb7B_Ga,Yr7"aI(c#PAfqf+VkPMi`%IhHGcqiTQ)oMAK0Y$$8:Tr![^.SHt[sbpfpm8uUHGiCpo3U'ZQQ#Y-%s%%_*4
%c[(?=,";suhIq;3,*UE2(o.Sq7:iI=JaIi!<qPlS(u*"rL@sq2B?EIo,W1)59;cYBHXBGR;WhY]hP8_j:(%PZ>El<]:*!>rGSsn@
%Hc5!,VIG&eZ%%m\)At](W^q-,Z/.<QZi4"0=O=8rcU=!a-tNeW+^Y^@SM7L"\afd*P(9tf?cqkr8l"]6@!@GER4d("13V):<M'[]
%8okm*%bgph$$@I:2lq2Ce4B5=TQN@MRn5qs`)=csLVtQUc^_eJGWJ,^r8o(#g,#Wsmk./.h4mOWjp<9@346*O,_/L+-+^Cm4K>F.
%NWXKW7)'d_=B]Ns(1u+Z_0AE65h]![O6CSDThD1uPoIu)ZKrj"#"o1OP8NN%&MD;!O@f]aGlX'`5[tDJTHtt$&?X$&J<kj<D-<6:
%YJk,T["P(%BEKk,8sZ^(_JHfH%Z]PL;8QQ>Jh3ipmsg3H<U'BC;%KG[09]YX_0?$fVb!`q@GS2o%6lH;l&K#+<\UP!*kS*D:P^;N
%!hanh8:".s.\R>T1sI.r(YVRA5jq*-Xn98r/U7XmA^a$qZnp.SDj);tkS[ol=>GOp)(Gc/=j%4.;#>eiK[\*KQ@,A=Z,@u/bZSk\
%KT)19%b6gqK^6"/g9G$F#UX,D8,s=C+Cr`k>6%<8,+4ea'Q4-.S$"n?okSLZk<Y`g"?dCC'NscD8;Bc8`!E\/@%n&)-^3l[\MV1A
%fc[K71qM/.d_DpsMPg!^p-a&dLqRDRFbrP&C/hcBEh!9mN>>A`,%89Q)EtH3&>?0$*N%1R@'!7h^iUs*A=bZI%+6<#D$q>DRaaed
%=%IFkdR8cLXOdk*lN(G!#?"8=p/oL"+XS<C#7oB5@l2I;JSRLl%lYa$P7Y(OpB:sO;a?=#VBaMU1;VNlRY87J>mUOuo7Z4aaS^Tg
%"\C7G#]Pu93Hnbg0bV+3ULGH-!@5TtTW5mjBupZh,u%97:H1Rq@K%APNUX.\K;n'MA,q9pN[1csb'8iuEe&Ei^IL3=c>2:<PD[f]
%GedVDO8$Y6Jfc8Ko[&I6\1%&/8UR0O86-*C3#hd8+G!6&A*SQDgEi)#;b%rc&U;DAZ[G/hM9H/fe99C#%[s8KX2^EUf3mOMQPeu8
%>kr(QKKQ\m"sq?3QIf79dYApoIDp3s8DtCdgq\3#3JMMtJ-,d'5a'4+hsagK"+/,d<\.M,_:I1MLm_&&IYk]Q4>E<dQ8UgdqfjC5
%6+f_uC$]Oo->a<'94iQKVW^m!*gdl>P$@GbUQSI(9:/4uMUDt[5Bq(=^=Y6.8tm&4g5=;5$I]A&qo/hHk(N.M$7D1<"!"^&U_Y(u
%?ks["4N>uW9lgrm\4cCqjR2BiTEkZR/24&6VMeJkk14XsVdgb7FrG;Z@jtXYn0C(Ud/]!ffeCa@&g`P-`9'b9[V%(k3p_0##2ll2
%^7efQ3hr"T5p>^5Kf%C)->a=L$;(+sV:Wj:[5?g(3MX/7Nk?g#k\A]C^qPnb18)onY!C$bP"t5Qfb"@F6`>-h+[]Se_=(j0=W1>X
%^l9Us46Df.QOYDG:s/\b/3Sb6?h-PNdSH5T>d]Vb)NNGR`]F>eX)Vl8TiRH]a>]sccEXVZ`Fc*:&hm?iG%*:;?GkkNb;!.f$Xt(t
%aoeA8ncBYI`8P3h!+FQ1'MFL8i[nrK1!0r!^.*.r*BImt+LC9[,,X'9/he*Q+S<5rH"RJ>3Bf9>UmbL[>)(HRT--!<C7ZR<n./Za
%a0(^RKR#F+,/+D33!KAQFuGMW#L+kpEB1Hg(o[bkT=30hNXc?#a['B\1\;#Gd9eDs%,_U%2(m.O!eLX-.7'<jG,_/=S##`]?U3aV
%84Xk0F(#Z-SE2/t.Iob&KO`.CS?>ZjHZl&aM4,)3%MCBVQ;JiP":=`E>`KkJh#[433[sQk^PZu`,U.&fC18P%6WRt"qM:\TgQRG]
%9ugrpa]_@rD%Hhg,X^S1.QK(h+//fZd`f-T#:GX61,uUDStSX>Al(We?#E0RRSEq2N5sljg=/aOc,%05[ot6<+E]t$%Z=Blbp#f"
%J3sr+AOjlq%MLX&:3ifqg(YhNbh=rXTjVsUq1=;F^3&N]^5+HRUoZLCBTZ];P!#P:DZp3&IUfGe,rV4-"^%8gima^7">ph6@VT?s
%Yp"?8D2%.aXKl?D:66Y@a5R/r^sMsq,j\)F,UR9,YDSAH#Xu4u.mWG<aN?dX9<ic:njc'aKC6+V5.'Q?WrV<'SNB+&`<c#+e"qmR
%.Ll^R^$p6&O+8>nisVD$>L$rgpp?t4&h$$#,!CPYP.7OY9!B<^9Pgq+U+U.(lJnR/c]Ok`8rY8.-kD]=T?>2eK0YTC7!XB"-2IU@
%IPMmSH_As+\Uc4fN*W)j;]IhX.7),e&C#0)HYk'l=jmILr?Nb&.4n-r(fOs3&k=umTK"!gKW#JT9)WIe?BLP#2BQ<6EfKb.j$q?Y
%@\jt4r)%CNOBNGg6M,:oFIOQ;'BIB!%75k8,Hko\G7"Y=BCT,@;Z<Z6o$H@?&d'+?\;lYF/G29oP\2J#;=/8J23+#8q5%W7,EH9!
%.5b":K9rE]9,FRc?%;LQ&e&6d+o4Mp"UUO&B3@6ia]u-j<&$]^a#]">4emO8-C7+/QrUi,DA]r<FSMo%6Zd<9jpCL;8'#TA>+GMO
%ndJ.r^cTABi)=@MEJ/%0Tu/BOKaQ:NeND(=N+!HnC^>c=E/ZZ34:VZb:WWR'>)MZNouWWd7-PIr<#n69*7b>e)3R002:bi>+XA@B
%CJ6b.b+hk#V(C>pk1Rk/Ld,jl@^R&,2-1,d\@Pk@SQ[Ijnps).P8]8aY\:5LK0:5S.s5&MQjL7="\bC(-'AQ#Z>'KUl15f16Vp4/
%+nOZC+<-`Z=bDU-f2(Mi)V/(7Ck@<M6\PpY&_tsR^c/hDO9Mb;-H++G)e.?.SiB7HMpa@GR$B(oO\u9RC>K#5L`;Lg%.R%/2MfA@
%7LNs5-hNH4Um$[FVZ`c$!bW,qA2c\ag,)ci?;Qbp!"d;83_4*kp:r$5Z=,qjoI>/&l*>mm#g'AB;aP.DqT:]sO8LKsb&F[.#0)k^
%$CZf3C';5d<>)\\PC4(*kj;5B?eA+9WE-[%2@*mS3Ym/Fg&Ou[cXP!A"ZifPMKr564"27_WW3,DjeG6C/9'NLl7tN*OnO*`TJ3V;
%"D!'J'a\mo"W#;eKl9J`$HWuFK#LD[!3.jJ@g<91Q3gcPN^4kcL=j*p(h21LJ4Ah[.&PXV'Fke9f11OqO90'20G<]U#hfa7C-A\M
%7SHJ.s*1PKBVf.V@g-mW(aI]0Vrc+?n0+GBoGFhL`1CPHVahZG\t5-aJ(SN'1"6>pZR(,AUq_G1[WT\a#`/PVoIHp8J^2,hL-I0M
%4V!?YC5`+K30.YB8tu?RfZan9&aapON(Jj,&P(l,$(p636oPu(#eV[.cZE_!V?]]`oNHmSg?V7S+Z6,i$@WRXX>I;IoQ)l8E*"aS
%^!WCD`Zupd?kuf&72\hq@dk'S].W..V>Qcd%X$j&HeOO'K-<Ss46\%6[L/$d1&4]67.\J*QO@n,c^YGk9?&!_#ClolY]>RaR[4Zg
%B<plcedR.mSh!m;G,u,Fgd,3D=rG!PV%5eh%u]lJjSJMiHqYk1[XmT:'Z>#O%r;SA<YWS+3h9E-$S3_Bn=j9s6(F;2julR'oB0Yr
%i?Aq/5>Nmde.;gmg>T"5:a.MVDI,V.lNA\n20bFU+:>b%ZPLJk,?m7R%f%!JNh-s/W*GIFEImc_ol`LTad!RQieIp1;C=/dUmFsL
%,c7Vnq;%O$6p2]o.,eKk4G$9N,b8oV]b"B/H!s`YJ*BE%&DrUE8>V4G'&iQh>d\WJfsaTd&Ne@QU51T8K3h^SP``Hl5-59Jfn9*0
%?V/53,S<Tkb6oo2FW`ML+6he/TlA0fZFl=QA_T$gM`Asp9GWGM<cLcDeCj^lpfZuL,,H'[L)MiJ5bJqp/c[@.7m.;k&i%3MCC+F8
%%3hVnLaCJcfcuA/,udJ]3;EV!8Q_3*I*,.O6UHSLq'fL$p]L`-)aWPD#]>O<.Rkdg8Km=I^(!Ysj?f;BjN(('g.TG!8D$RL$VcHV
%'R6IF&FpD0'j.KG^/`<_)0@\n7f`^%GDp)l'cEs_FHlk<[DT6[aT*h0kpaImdeuOC5G@S3/O!BU"`sfS>(U"&MJQ&=@1m@+Z\fmW
%Sa@`)G;tk[)HJR(Dq6j>>\#n+QQT`l[dE2@4=fN[k^r,j^n;%M5:U*T<t<58R+!IKpLHjs4AQLrkl`3$`Z+#Q!n(5.6K7^9d!<#6
%qZH5LJ:YQUd1p)c:l^('VR3*2C_eS2Q7^1J=(QE+KO@3drH72mlD0;2Q9')27!N8:ZK5b3IGsuU5um5-N%=Y$@mZu"6HPD8Q&s.G
%*_^GPGS-l!i/O1_V%C&gg(LCko7oM8_Mb[_N>a)kfc!3:9f!VYJRJQ**U<:$OG2Jn[/u+L*dOR[#e#IYOFCgi#il%?)?^,nOZqVZ
%;?os/p5[`)+JZeW"KP&u<k6eC(([5(ZGO<'"+n<ckE\VgLtLDs4e%P;nK1%?_KQR:032bD+?#3jf3B]m(BQf$("3Io40.m'd9_R#
%(4qg+q29p1!5oSYZ.0=9r"KmW!WZm`*/GE6"J/_g,:3,],q^6thi9sj$uJ8V<G[)Z;,NTI6;@@h37,%L$%7@QXl@VMUDsD^Of79*
%&T6Zs;#s"B4C!MRIDFc!'jZE#P#/_bE:`l6T]Zq@(O[m"+R00QJ/Sc#:.UrY(IZX*U[ea:V$Nr,SLu:O4:nj=T+ap!\KESXK$)LI
%ecNaEVra7e\Ho\\U*.N5)2$Cp[#h(ik!N#.eoT[OD%*2l#[\/6#;e_;G_Imn3)nrVX@V'm$Fh:Ult$0oF".`KH.FIrDl5+BV;7Z3
%6i\3c#C/gV$0gKf;:;8XL=eVG6@c4-5S#g\CpA-22H,BjeJKl*aT0:*#`OmP>ggk$B"fH&(<eM`@H4'=P3bL!]VXWmYh6lV!L=dq
%@8Hu+D%slBD!@/j=%H07/N?+L1PC>HX<97Ne8#I;W8[@l#mMGD5`5l<'jQ/Vr.)pkMe!*T:WJ'*MlqC0kh&2hUVL]Gnnf+QcD+dg
%MIKL<Rnfs/NDlE4YGcfJPbPsg&\rq?!G(Cj8cZY9:HBbiS$<%'0!C&/,=q2.Q%j6$6%KmmKc20QGUG>Gp]=Z8q?Tk=kZ0W/6Nth[
%l^9*bUoE3++2E5K_*QG?H>Rb>'UoD0!LGGod<K=-3Bo+'6s&_W(aP(Se4&'(^cEVm'[#G1)@0QAIYj4e27Lu18g\]fR_k]*RO#h,
%rDYBp%PS9L\3DQ;G6hL$Oo6:9TE&@EiX+XMNA3>q4,TGqJ1[?5k`1M:6p,BIjY83q6-kEZG%.FO@^_U-+A1r[!!lc/2<q"8+(?QY
%BV/JE1hF'1lr_84#XFkOPp>u]lasA3aZdSD?*N0fFXH#7[G[R2D2;h5K*u&f-ao-p$:W8>GZT%phFUTUNL'/Kjg&Z40c<WTBEZLG
%Ef!dn#:I&O/.)"s5SDJm.`cmgJSZW$"?=3Lofk<SY/2l1oY;(q#';#m%0'1Z=:1)$=76Qk(h2F]X@#L9/VL'U*^tOP\k`[#=^ZEJ
%i$8TBW?8WGJR$1dqhU&oUg9?#R'"=]UnARSJ9hd"<UFLcl2W$.(*lnUX,1&t/<Qnr7>k:no1p$T(F&&nTAN0G!<]J%ni1kBrA7UZ
%/W1Q)Tn))EO.p3VCD,RU*kRW.M/Eh*FO;SV8^Ek\aBe)(.4..r\e>anL`mp(]+uJe6J>=:YuN1kM@CU9cissd>.]kXYtfY9+gKs_
%(\"L-ddI;K&cT#ONCA\eMdqN0O+jO'd+%am5D4-bieoKG8k`/"`4#1qPLa4EGD0P`].X[j@!Mn6a+1mN;3nHq!s-[)8g0!UoG1hu
%3.c$*P,IEhgsos?$>ZgqKCD.5mt6splt?okf7RS54a?g%`J+Sq0\$fj%OB96HjnN%5k:Rnc^"R<AONRtT*"]Ppb!IcY`;T.^&F]9
%5GieWR"nh#8<VH"K!0/kc@=D:+YA`6#.hI'%U*J_l$ItISR?G6rk?Ye]GLu=\Md^OBRuFVe9D\)'gh%`3XZYL&^_M2Df4H_3"a%l
%<jB>H8[XG-A8?7B+VGH&aC.DtNP\=7Ga27n=DNYX)9J*&<J8p@-8&(g]LCQ`Lgq0<(*Nc5oT.4.#p9n,?E,7ZC77S]"B(?sZ>qb2
%Fi^&Z9"F!dT%=GY^Zt--:8"lR"'R.Z19Q"<n3o$MmFd(@@R436pr#ql+[d\MNIEAg-;t)*L/D-8B+fKO_'ro3=M\#'_4cPcXTg(+
%1ecgEi\35.TD>J=+Y9->MRs1Y+@Utu,GGPkZn7\X6"Wr;/!_(c<LE3mSObud`agHd=*h)e-c@F`I*p/uk)(:D"?m.8gHm)M.'d`P
%.\U#N5UDOf8FOtr62,8$7FHg(9m-[#2L7S/\k(7*2C^WmX`CW,@'Of&&EGSbXX%DL%V\$,+X\kc,@Vus^lk$R$T4D]/Y_5/RtWR/
%oWpV+/I=$-;`Srqng.H?:ZQ(DFJ:No!ok8jErp_gl%=Aa*W@Gh@:Y'o'M4`cQiXWHnnFoaZN;':`(,/"Uo`tlNR3Oojb(XTlnIAB
%PE``Pee["%@)gR_JI;et$05p5/ZB'c4'15<O%3[7E#>=hf<Do1b_)E&1?Pef@#_G6cNra(-jWd+?r_BP7W8]P^5P%?a4P-hQZ'0e
%U;h(%G*LI<mNq7N'26>9q@?^(`g:3$?dNO4QDM4Eob.'L_JdfSrIlL__Kt=g@*SD.G(<Lb0l*<SHC/I&XA`@L0r/9XE"%=&VOsm!
%,7Ya3r[>0`8LGbh`j4Gbd2gWm%Y"g=dj#.7XL#Bf9LZI;'IP\X.Qt?CphmcekjSS,7+u/`1hbP=i?W"D#r-*hjeng%!47>5-uagM
%-tp=<_b5_X0)V1(AeA_":1tkPorQh8'.KO#;DHN]iTp2ST?L;]FrgfQpD->bf'WYH2b9aA4(snZrY4ZJ83&m*DGn@)8;S^@$tO']
%LO9#I/!smQOpJ-l[M=[t-d59j_O>4VP@Z6OX<$V,UqK$eMV1r[SLU2))8"mX[cCP7U.U8_:8fiS[gG_@$XHui4(/C@BEY%ude]Z1
%J=IZpUga*Y#ht])J62aQ>+P#aOI329Xrln[B4[S)qt+.Zll8T;Z</fW&H)\M$nVe,\$PS$-(l)),V!C.f=VhPl]_[<DTZ,mic,>u
%#7,D87&/%1*77fkl\WI5[Xu[le,Y(I<t&hCPmM@35\i\6h$p1CVPL)mcs/#I&k.a?1Y2'e4GPl2Z7nWSC-)R6_o)qW^6-,_68fH'
%(Q'*HInJ?@K3EH]C@akEQ"dTu9L6hZc%,!b9H?;30o%.lF7M]4*,K,$9dGnu%g^=k+CE:PU.S2HOC3QpfEo]k,RgH7(nV:bMo`?@
%>jUN<!r;o<T,:t3`Jnnap69gST0^k:A\B;HM&p1I=]FY(;/0K>U$*a:/#$TE08PP'<^n'S1fR"YL'&FI,S]?C[`FdE7ZaSR0aAJb
%,XGjX6<Fo>idf#nZRuZ?'M?[qMJ_qZFSmRH.En/E3tNcN@-KJOC91O05-#P!e>?bV6RN&TOK`eoc6EE-5S#Q-?j$ddb"oh_Q@q)R
%9R4Q/6/7';.E&6.<u]Be_eCEC*[S=XHAf9fjel.i$0B&)Wo8U:O#S[EUcco57PHDuU*QR1Iola@OJh`6A`ggF=\Yj=/I2LWURYZt
%M\NE#q.ScN1*4gKk,<eo=p_2<@-ihq6Sb3fH51)uC3*p=f^GN3OI(hVjIh1>!G.*]&$le2qL`XLjAN0<<]K8UFTWkq0iD4N:aRI3
%3a'5:[m4#!q->68(*ri\]#jcc@_nUga9d!Q:fQLJl_BYo'ZK?L/i,r\n^(j=AF'/gKO3<36olK*H.+f_8.ni>"N,%%NnIG%+Jp&R
%nnSS].?Us=(Rd5`q5[d=Pu/%]>P+sNjal\08/STXBcp!TTnmFi/NF'X5mi,sdbZ)j@We@7HBA&sY[ISN+dKkg#EuBi>?%pQ6c0BQ
%]H#UEZ&47"&O:93A4F[),ts_9J$pW<CmjaX/-uTSg)sq'K9o$dS>i,M)4(qL&_pR.`-eQ&-Or?jq&)C1XC/E62Zh:Le.p..>)fel
%:VVX.*'LL`V+[2;rK7Z\C:T$"aVpD$id$pr'#-3c'"OpumPRlX+9<#l3)"\06$i[A,h3+s*5h+gPS#@H:^hkfl<6U6XoQOi\)mu*
%EYL/I)W7?Wgr^IEV/hk)%ICC&&p25lcjaH?.;>*)B8Mc'XFp_=4"&Eg.ap`JK3ASs-dZgI-*8\9d<5Tuhq#csT43sS<D]:g8P?LG
%nfFhRqX?k`YDmfZ1H<I-TkY9m[>SMQZr#_[<a`rTb1qi3_?q<7A>]+aR&fthG#o6KO@;KP""f`/Idp?)WE@Q`Alj")\$X_Dfo%tH
%P6bn2[1.&S6g5>[n!u:n#9fFbKTR>O-)tJfF5W13`ho&I<%BsYnm2/m/gU#s1nnB!U:pum66r%tkse1QdB\j;Hc1C1#!YPC3"_@&
%&elP-AcVKM47rKGAtq!\C"\ARK]=uFDGlBc^j[&f6n=!RNOR<W":bg[U'%0@gd$7@YmlC;=V+Op>@-@N>h,Ip`t6Zk!AGi-+)GW%
%#!i>4`))/m:'Nq)-;,j_,K!8W.hk73RKuj@oR7.h>`]Y6N"l!tHC*2OUS[<A'c2q&+*j!*FGa1=8)@OJ<$U7<A#8gn08!t3*s%dS
%M<,.QT<,t)YpD[k(B.?65kQpFU'*t/Ajh:E^KijB=us/j#]4:]Q/5!0$BF4!@arUnG6/G@['g:E"9WAVQd(<VS3SSSdME$Z,P<*u
%"f@M6&7$tdPC(7Y"/R*G]tdi>QO4mV4o&cd5`'5,!.>lI7+M\.c9r.`I7>Bu`?[^0%80Mo^!*K3-r/8SZ04dsc8oB]")1h*[(!+o
%_UlVXl]fkSofkEffSdpPQdgJDW*Ni7,O$K/bK>jraN[U3p^<o<%U$.WSrP?Pes\MF5f+qD@:buD^>KB&19(Au\\b/i70?(4/6MVA
%#Y(sN1\T&2XACiRE5U1<9B6YbeWWI;fVoPCDD6dIM]GgP6J/6Y@I6W$)G1;?[]HWR!qEAT*mg(`9L#lJ8DFhjKC^Y7S^u$kX()I9
%5b,6RB:*!rNhMV@-Zk:uk/3<1"Z,B-WkLAt-8eg@)B"^Uqrb:_;C@!'^ip\Ir6d.1HsXf_F>L4??n7p==D!0[LE%IL[a6L$iU5*K
%`#,#rIY=!j,=YR#Kp%FtU.eTlWA$_43?Q.)1PaW/Kk-1W@TNT*=U3S7`$q&a9e1)-,k<5=/8<qQL,UX01=Fg;XG4lB9([<SJ4$C$
%H_ar&p!&fGlCYA<X-'2/=klij5f-HMXhi^7^D9eY%;l1#!IomEBkW4A%\)-A^9*MrYNc.[/,4Ki-pnW89(XrX"N-I($CWG./T)cK
%r#d>Z&DK(9I(f*FZ<NMq)q9',6Arok#,AF6Jp<B"XDPAL^I`:1X%pj?!#jhTHD/rX>!QpeBkC`lGSn5f&aA-u8[U'U=d0s>qGN8[
%O?5?k%s4EdOMlc@g/t8q:a2*c-ru!?-DuH\_@'E_FBY!H.6.Q9Q3>7#[96AP)'/@B=<qk[$.+T,=tH)GUsPqN9n8!7Wg*Vm'BA/U
%M,=XP6hVPkV,UY$D,H.KH.kV8f^DDk?6+AOd/(^Xo!$(P0-,iu%.6.\n^t/#$MtkNnOQd/a^/[sIi[BK?oH\lg^0je@/)WTehnuf
%D[H_Y2[o#7c;(*PLo-o:N<l(c:K.Uk.+gOP0VUf)b,,Nk8A`S\iu4t9E+umm>gOq-&2g+GA91OVN31Qa2St^6,<ui3V<^`278Wn3
%"p9f.THailnRT)Vjem9kHK9l40Ih_5<7Z9I%Rc#jNa,;=o`\J$o8j;40:4N5huk>1>LFB]B:5ofZ5!EVktaAM@5f_YQ\I=ejtF0S
%KaPXLCCkih[t;:k5RVg[BOppr2,3"LX]S.h-%nN7V3.3n*Xm_sUlt-aaa!b`^+"2"3cg\7@=4.p)t4&`'E/a"$V5hLAk,6/>N]Q-
%Lj&lVJF8MgdqJVrPU_'T?g'.IAN_7p=:h>;&kB13W:i1o0IK<-?7GY/Cj]U:ZiqcW!#Iup84u2eN=j*c6/6K15B^kcP%fYFiRI':
%eM71`6!tlif9%?t%@]\^M-t*t=pTq"6q/,-VuasFfS[JmS#C:u^dmD?Of<1JQ6Y1.gIW!=5d:qm;CU*X=pPCdB='e%Xd*>ur[35L
%f9.j>F;FMC/ZI_>OSa^;"2G(@gJL9MkZ1gCpe-_d@>*7;1P0/[nd>#lZ-<sd)P@:KqOp9sB9LDS5mi-oZ7IUT]Q6`&ltF<sW\%!.
%"6rDb+ERU?2Gl1d=OPt29`]DVXMdrI]3u'Mer\%ok9K)o_#>$7_K/4To2b]k!m&jI0oC+s2J:%jd5!s2!MjTm#pp'1bh.f3*%G\/
%anm=aj!8a4_,gJWeo#1%=%Jb;?pa*F_MP-;.TX5!1<e5,M7-;`6nDQRSV0D/SS4c0BK2m?8Rl0Y\Up0SJ0RD$!Undj@thnU8i&>e
%Wo,l1cl)Ub;CU',"U^Z:H-rZ]*OT?`O$`tmKgX_/2328mid*)ug-llZq/3F"2i@)mpf.Ga8JoX`*ERg$K7-3W\B*;Y'KI%neDA6n
%,t8LUAf@=3)DFpE)(*8iQl7dg&Kd`F]+a;ClTQK%PB6\r/%&rj(5Kccf>**+#-WOA_iO*#p?&Im/i<p8+LG[Se1JKJd&7US:k/qR
%/TFp'?mQEM't[+K9rPQ[Cn-JO1N?9.9W91($5prl1Aeog"3c9L-[SE!csdD@!JELEDB5d.B2U?i'Y;%)Bq%ks.!YTH#E>6i;R&X0
%&U"Ik/[3qqd%OpGPC@3-fBZ5c^Vi$8UZ>p$A4!`D^_ZpK5(dfhM#Ym2#JV05VH0rfUk[Jl>,FgXVME4oE<K$=rt%3]!j+jKCa*%>
%Jt^]S0@QX3$90]KdLmI[la4G-3Llm-8\V/6F=S)K"GSI-(pR"?,U_)O*K]mF88S,m8oZ8#d,%>LQa%/5>Z\_-nS0t]8Xd4cd&F,?
%Tsn@-``qdKVQma26&*iGT+h?h:)YcW[<57AAkSm7,Ot,kFV;,KYhf_TOTaO7a)U5LpJ*H4=Y:+J0o?j3Ah>UJA1,>0Q?\lEEUX&O
%3Qo^<,eR>thkgN70-t9`J2\qX9uur%_U-Nl>d)73-:VYV0LLcj$R5b`=dPAW!_7<[.d;fJAC)qS'Uiu`T_QToKH1sWR</+"3g#g`
%Qe=[rPjc!O/N>$dWI7s[26h%iig-j3WUM]HZsUtS[ofc'TZp%+%PjR*b>2>-Uf(\(5+TO/g)Yu!>@MoO8hk"7T$VrfDlJ_%hm5h&
%XO;+XHmLG00D2anDHlgMX50188I%e]>b;oBAPZuAb7-NKYU$/n`qb5)E"jPQ97<9Var4E^&9gg+`D141K9deJ\9EN?dh4ZEq3VI;
%h[5[48dH.7m]96PmA6M3#`qN&nDMhSHAY7u*Dgt$rW5[+LG@TN1^T/W\^;8$1ddM^`mVC+JjIcm^<De9>)Yq@TIB(O5>t)kY\=G*
%D<dNj+D%H8C3,P74)=kg^g:,[%#2r!FQ'Aje0lXe3>is67f,4m@Ye=u.VQ)o"l!A(W"J3J&Ap&JBC>pZ!ci[eaOUiT:9(`Gk!7;)
%-K5]SPG+7E%?DZiG*&lD&al2D]Q&VhE,iI`!^=FED_4Q<@#EOX+%2ktTe3'0A.O^Mcq.K#IFlE0Y&$19J.UN!,Y;b=Ee7si,.b`c
%".E0hL773jE3tf6W$Z@<3"_m<T2Z%S;Dl?a.W.r0YR%3sdV`2uGa,gUd)ZU13j*k=9j8d3AB?554G^_V2h<\`U9p^W=f;]`!lrfP
%?.qja'*pg=[8ZI0V*RG@J2DF=nfEAgU#V?%ZEREPeC>Xf=LDh6J^n[0iek56PirL"#uWO[8?o8ld#bTbplH*5HVG,/5)"bI0lJ>W
%"9DY?oTrT5$WCbi-eb:d8fC_LEB::1JNPfS$4h'L^-jKB]&^PCOq`U*;I:[IlkUp>)@O/CX3.2p[X9Pc(h0N-PdEuH*QNh#2aZms
%,GK-m<MFKQSfNZpX>[F._'MA338'i>/q>ihp!4b`9n5Z'fs&G#/<4(.Up)(XooEn4J=o/:em22O-t\FO<Z[E8WREIJRc+Mpec6N)
%*AP$#oZ4]K'.T*Lbm:,0<iWD"=S+m)=1Qg=83*\lk.kqGe,hE77,mAUFtO2Lj;_R#fh/Z[A!^@D'&o;*5P6n_7h=8Y3=$ME);W<,
%L*,:Z&7R$$B"^YYVN!DL41:]7*[X@HCpIb5iWiqCD=,i+fR_5/o@aed15T"afFFHkJsI$A/eYIaPUs.[btBpl^em/G<Y.*jdf]cd
%9_Og=4sq3)@P;qZc_Vd]EFeiX5UtP[;Ompn:-O7UZ6[%,a!"[`n.KP$$?\Uu<eUQ(`\N[NJeh`2NWBT!27jG8`i6-EiXpiQIg#0V
%SS#te&_1ZN4j!2l_h):V+G;2?Y<ddDO9g+[%a;LA;)6,31.,uMC*:Sq_giuN'`p9oS6M@;;>V\K:GW4,ZI$l(@Lqe.E8%gn$l'(N
%JilQ(&N=7;>:H6\Jll'&2R9@INp&.$U35&PKaf2_;3oIp!+$)eJ3k)T<icsG4XU<29p?7RU6a>u=EkNp(EG(G(,_q/nfe#WV,U='
%\V*;PP0auW35TS?/:?3@P%j>V,ojf"ljSDU8Zj[M-n(4(C5n=kdeagNZ0KYf?%RJ5cH152n-0M0N6A]S5pK/?L#d$26"g[--Soa;
%n3."Q%*;Te9d9[5@bb!],&67Ak^6TB*]ck)8+IV+9#clVZIFAf(20(Q7Tg?Fb/-g:6T-P!&fFCVs!ZSsp`EA$CK+$Na1u_4)C`Co
%P$fgdQ""Hn2(']HC_TU8k6#K3fF3GmFJCO8HsPRmNKg2Hi$:dQpaG_h:/[)`0Ok+DJ=c?JgD0[q(fXpN7=dH:U+q=,Bu:tq"n%8+
%_!u3OVR_1>;mP*pJQOr[ntKgp)H$oYL*c_d'._R'V,F?"Y!L1%:<OM"UrKWh@+Wj"j\A)B/1Y?pY[Vi3XJm7:M]kQCB%jZZ^Zu6/
%+H:b!,tmlon\Ruk<u55dq3fa]MG#,VAE(oA7eQO\++@=1$THoAD@[$W2&5*7Ia*+.&5n":8Fi-A=-@FZ[6o>fS":jck_V4!:uie7
%dF<,GT(]+!?'QPYTS/%NG=-gAeBALd[d`=NU;ks?e)S88[7[dRZfC#om2FlGhK;4@BiiCG!i*T?QQf(RJu_M'B8OZ<8'H5E$mfh)
%@E*)/9"\bi$Vt5gD,5k@?\^n-9W@M49fKDqKNDNW&E3/(dN0ap66OfPG,c,b*^3jj!L*d!Bj0$7O'1sc:WLtKi5(4ian?^!S<62p
%b97*3S?E^X/;4-Yq_=&hN#D,:[MMpF4Mq$574J.YoEkWs4ef]D>,'&9f^AklE^NWOLTYeUV[^3*U`%rhl8u:kK2o$-h_F?QbR3q^
%"(o^N`/Gbb6==%6hE+%O\eWf.4H`CH<8K\=]9knU&au8V*f+'jL%im.*&]YPL%ilcJ(V<=_L'nB!rcD<n":[mGWfNLl`?>S<78D(
%8j?hI]L0F=abPV0G9,6IiJEihNp'1+DNsT"?5!+r`cQED.F@'Vg$[c"752"^Z9&\Wl&C$\0m9h<_^\o8TM\)s\5M-k>E`rD`,q?m
%8;K*4+hBJ,17Sl3mL7O*#e_%K4+dsMm067.fcaFuNY0_\DA^_=;4-c2*@M`&9QpT\OQfNY2YKggHo^b>(Bus23[s;7;r&=AI"D^"
%^Q@4U=Ik03Y*Y*gmR0_[G[\5E^!PJ5g$T8fK'?JMg$Tst$K=BrB4+<>f(F-/O@TPnM!cl;(K)_dl0\sGmUNjqG6bBL$l-?8"42ZY
%KV%YXOR&LfF$mZ'KD6hBpQb1W-qipgW-ieS:I7(gR-kH7:QAClL$fF);*p:Gq!JQ9[)g-DjLYN<P`YDah&QZh5\7RF%p=cQB"J.1
%'7j(4h44R+'_@qA\i[eF?i&>GG@sHMJ08^&]/+D?:]NPR]//N'1qom"1BiB*dbR4;.K<]"G)%tlilDqE4/.%`ST)YnB?31@'iWcQ
%M!d_F]>Aa3*YE@.N7mW\Ajn"\-+bsD)(+ODdbQ).8pL4Fh&S3,A0R9+NY$<[LS!pocuJ9Y*Rig^'$gYd]$T9$Q<8KGL$m6j^9fa\
%h488fM5AYV6/j.P0Vl=e,_>6.:NsjLZZRd7GN^Yo>o.fAP5;8lYAAE966qWDM!^4Y'Vq0o[Q@qK10IN-mR1O/$Jh8/),ODG]Dc,j
%mS4fA9"@c8>-S75^!PU.?Vni2j@]`0dsa]b(bh/U!eZQemPr5]b0"m?R-YrXPHs"QAg1=KM!Y\!9Q87Am10(JdN>W.GF&#+0SMu4
%GGmoqcurj0!u?Y;PR?09AJco,1#!^VThO`fcZTOE7[>tL[Q=MR9WMuR"HsPn4RMS=KUY@X$eq4\a,UZ\FEaU!23q>-mN=6`8Nkn#
%@4McRh'(Spd("beT[;L,`/NVW,J#s%1'l0LTt:sE/hD*grD,q*G6!4+^;<3\#IHD2L_[K_kZU:<*RW\/0alH"Tt>s6,F-K?mLH-2
%)<WL*SKW`$9Kh4&+Z-.d<p8r[_]9(r6mOa^,]([CdG7)<Pu`V-Nn6!#<;>m#:(a%;b]eh`:4PY=hjnbq6sZ)Hc8apc)\WSs&i'XJ
%oA+C5g#uH2mL0,u)mdD*#PCm\\&roMUKWu\M!rW^G+VH?L$oL`:WocZ_KTX#K"(U*T'm02N7di?GJFfPE6=:/%N[V\WX@>u*.^jX
%!sn90POuYLRI5aB.eZ8S?iVoB7c:h09c'O0Tt030CI?Eg#D9g[T&VHu_G`Ch\3n@X>$<Dn*I;$`r_s0k?nAScHGj`WPR76($b`*F
%^pei-jG;Y&@M[a#H94Y+q8NfUSS?6D)U[;*gsW)MoQCEf"<h+gH92Ccb^;fsLC%B!['8<$mN=5t+h+4@UWb\\],gAV;;tTtm<hL=
%(NR,F2u]u$aEokm_:P@e2s.Q$<D6$%b%(`5;co<38^nCI&Qp+IODg!:+Ja$%Yd*A^P@(U7Hq7(h8&SB^0e<ZW%>:a]KGAbl"NEYP
%W1"YfJqCF\M7)f"p`\JF#!+2p,cjhgCe(!Y_c3?cgKAQ[BGV,;*u$`@SRo`U8(a[>YFT7aad\mSNf_!%+_+tCfUI_Q<?\e<+.5q`
%'k08WY.eI5dZE+Ai6MN\;-l<i'S0f9CM/eC.op7D2FEt*f?P'Gm4kdb?C<'>Q._1?MEVa@\g/rP`nV04*?4<rG<N:'+>bSrSmZ9L
%F_<a]FT.r'OhJYdfZs!3`(a3?42^\s>iE(H9L:JuWJD_)Zs!/XijH[X[*'u'*?5>.j=\)gL3*Z;=Q-Z?L$+!B?[IS;ECef,L"FVS
%=<[=DG-if.i`0/DJEl9RBNJm79W@Td[!%00$Sh=]G/cIE6oh!LK:&p)8o"Z'r_hM"g-Hpu$6r_9QkffMWO-i1BS2;mg)8llV/G)[
%^k_Jg.("/P=YsViB^K3BBpqJ)m3",M@&C;S`3.'aO(mti(u8X%*Q=,%HHFnrWuYXqbi`&.46fEp@T?GjfG/3V)UmCX_H!Mde(P[I
%&/`AM,mGtI:@l)GBs)07I''^.5pC8-L"4H[(H0t^<]`L0N')gEN`H\\UC+&m+\&S:+go4S8kDZ![1i19VQ>NJFq>&AE$;V6qAGT)
%-+0MD;9tsa[54(=]TCj`j(Isj-+.5^TP_7T;ENOJ&h5N0Fu[L)-g.(ag)8>V`t_?28=f96V4Fk:ip%EK$isIi?X^;t7'I0(B=,SR
%S$%T2UE)P*&Jho#UE.>'b_=H)&e^lS7QX5*M^sa00WR:92!'ZP);NpXq.Ic^#;K0(Q.!sb)We/eFp<',X>Utog)24cK't/Ui-qsp
%YB&@e)PBEW3UI7?'2)Ue1LkZ!X,M*Oj"<omiC9&TE"8[aVGPtaf1Ok1V6i%3kR;'WdLP\>5&CM"G1b:S.">`)4,AS7Z-_2j+,!\*
%i5ss\<?g4e,?d0b28-)uG*!"$H(hVj-o2Mh,@3IE2=\WnY8ofc?1;?141[pWb9-Ka__tF_Bp@3ZpEFS5Lt3%<O;nXVPh(jEP!FDK
%f$=&RdiQrk6(1-(H<NB:*VQ:P4<0`Q*0Jr`W=uj08aQeecXPlGW>uI+ed#2Q4%@Ld2-NQ<$nHUU>p6TXb.]#8@Ni.sp^5L0Lt'_g
%6BbJQmI4%'[O\G&LuOO^Gg'oX[oW>eV6pD_JHY!?Z(2F4=MI1=B0(aaXMf9M0nARjM="\h\Al!f@QW3gJa0HNgEGE$"D*;>NdMLn
%aVtiHYnr&3@"m5CO2uZ/Xq9>B&4d#,6>T.U$Enl"CjG&>BlK#em9jm9!p(/+4+qZG(0-4YfUG[VnI`#H3r/#f=(47EUOl",=!>#Y
%CnB19=&3XfkS*"*L"?f/kN&\B`-14(Lu;DU&_fT&&aR;MB*bE4opr#q,?.BrIYHI8L9P`9cYR6]$ZADYChF%!#Kpu&CaVM&,1\3L
%*@Vu,Y"-]ZKYf&,G[\$j=HINq_JDa;nYijh'cdBb7SEHu_JBG`d;^YBS[?Wtr&8/pZYY]<!%>/oJK<)B2J0BB:4glb;)(?jFF;o]
%CraXF4mn-ZNYEQY`LbbCc0egq,A'$EO1D]U4gQ.@KY7"i$5,<r,372l1#!:kM"lOTfoA%!,]>9YG!n*KgCK_>8Ad\Fd6_]j?6->V
%(N)=I7h?TV+h&Khh3.0)mBG4HT5d897rAsb:SG318Si`g48r2)6Y\\Lq$?Jg;VMe;9K9Y=e92CIUqfo@4&hg[dq<*tA!<#LDF8"t
%b_G?(_JCUL,$jK%m;NO.gmH_(jm7PGO+l5H&*7rVCPVJ+fb>Z;4*ICHr$f:%K\L)u^(B%]Bo:@n@^[M=.ksL$ZQ4\;Q'/_%I:=Kq
%oLPA:k\1e64AI_=;QKJ/4ggh?TPU5tC-0ksYc+U!gQA:^A^r#?4/-m4(2:T),3UR>A!PhEkcn$t6>d#>'_^0YE]]uKM?A1:e[WD#
%&WuhUTd,X8^!IA)*O3'JeV2jT"r1?Fl0Y,[gK7.kZH5X(`8\5BDFY$YgAZf^N^Q9'P9&'*Ojuc*lBL.c`&h7=KkZdV7s<"1hN#<l
%d^U=@[GguJ(/T=hoe1ag6%,L"G54T+PlLL,^UE%ul11\MScTG=G@+T\I[.\3-@aOOB.?,PrfCK"n1Pl4nAQ@G>:9GoI/WL#l[#aq
%^0(BId(_/1o7mjG`MXf,cn)p0q83a"IJA@rI/4%s2+!qEq">O%mJl<5rHFS+]PreT(]X;<c/N=6h7$a@pqa:mQro#uE)HW>gPUFD
%0.:jeG]/l-f.TVfb(%%AKB6\8F3m(5*Nk&\?^G/LOrO]@B]sVR!$?l-8-8sHkl?PE3k2h2na35YhF(^3#Zg$M%DQ%kai6jkIcVqW
%?@Oa*-Zr<?<c=i*9i#1Pk_?"6I)An(^Ll)i;WRD4^[%?0lY*pTVQCOgAYkdK<snkB*)R<u7r7b/(s=Z3%9i[:PY^pUK_5g.[bU\`
%<_t#\NW-'P'0npLn%&;'5"\b!0:,IRBF<h%ZJhh`0(d.RiPla`X<0#0L+sp"Arr'UH&!m$GOU3#gWOSLkiR9(7!:L30/XB:cQ6)"
%qAN?t(uDZeERHkWp+e,LQN77m)I<q_P30lBdYSI!HR%MEAU=/h0@NMQj4_\T>[PL,2:BZZ\@A.US>>5Oq_o:N?`(ut?H2a)D7&#D
%H+DI`<I$+J#eYEq1Ke&(E4#JF;;(Q+O&tlKmeab+?CkCQ?S3a]#$A75Rt(;9@@Ff'LmBMK%+TeA0t;`uouFlQ;1Cpn=8AJJGDN$S
%84D_-cTg=XlR[Pai<TCV9&sF18(NJ<ig%$K9c4C>h\n#>?F`uL7&fBT]s,TDebq^@qnVd7kjMD;/,*qX?uGAg.c5>dJ0W)(]i?=Z
%s*l,>:i2W:Equ>7[p2C<?oVG33.mq)gLJJI7RE_.S32Z?rSfO(Wi3%WTj1kllW<sQ%"eJN0#mJ0l@8rO"s;^6Lc4&CM&EO@miq5h
%4e0@'O8ljmLV/[ZC)ZogDuT\gIm,s?\,,THO6`EHH@Pk[k:aQZHF`+/a&`!fs7FFmUOQU??flicQ='.Xm/(ucbI9=;ZZ1JCZ?jd[
%la-2Lf1U)gm,I'??Jb>SM#Y'^jirtgpeb?Gs"a'kL)9f1ErJh;HG)H<iUtH]l_%1%=al!Di?*:93E&-(T+es!TDSQn^J+EU?Zu/M
%=5X&Po(;)>lJ:RFr//NrgI?S[7Ba3grdK-9o6/![NNV-g=&.L25G,X%Gs1,MoX\=VbboshmaLbdY>;kgGCS&ob6d'YMuG^'NV?-p
%2FibAHPF1YH+X"Gp%!Uh/MBntm)PCWG;[c,n#jF?qr=iGDr7*];>B7i?%%aHqcb]1?$ppDF7Re#MIm`4]ZVaMGFk/Co'VR&?etN\
%p#\@3TZaBSDU*,p\#I3[kIfo!Ilf`a1g-TS-RtU&?XRdKK"I)IjkoKp[)%[X4qB`CU2R3k?(WbLEddN@p"AS_,N*Ub&TG;LC@:G/
%S,O7SLY^dAC`VcVB3`,Q?D$"X>u16]rmDhUQfhEdDm%rgh+ZQUO7X2E,O^)4O$?j_>'r*;EdQsSc*#jgb0@*E2HS2KY$?$)_4R8]
%\UEu.-EPdNoAj4`TB''5s5N>1mHi$@^>/(uc+`!"bK[cV"G>2e.:;M2I0/9\[#`j\Ir<uW3ZLrYGkohZr0u:c0<]hr;ci)EVu-2k
%%fQbe_:tHGT.PORe*?*&<p&oB?%(?!kO5jM<56k&gSGYSQ]lW3hk$BD*cM(irO/1C/@UsEcD['k4J\j%_iuD2jUTV8C"m.d[F`s0
%=)XEa\*ShOhWnP>gCA7j:FPUTqsO=2am&Ace!'AP!L`K>]39+80_&#:G^=L]Fo?5C^Y\C>NR#jWVL>4E2lhU=obh]*/5O$.[r("B
%@aoRQc&Id5GCFT2r9Ek?c,o(3Y?LtJcG$KMrdfRqkF8Nqjh3j^s2fgQ*8)cYRL*Kr^Cph5Is:,2qak/"mh#m_D)/!/.!B<7I!'RT
%H1PKKK^4\[pDVrQ<dg\)lTlFPP7O7u5=4fViV6^A"SR2A*Lb;q^F[F>Bn-MEg5f/jbE"a?.hdrO+1DD=7c3.tg0jobSam6WIa>p?
%mi6b.g%@ArFHY_Z38sW29K]jL]6Sh0]U:N0#B_qrTA=m;EjjLcS.EZXFFrrpl+N-%g#[m9^:aGRM30nkCM3K5H^aQrW,FClq92i&
%RtGAf^1Q7iBTo<(c\m1"-VYQBBpCG:^UcHj^0WGlG=($OWRikmUBuq9f-`5thG%.UjhfjMRSTb0lfHgqact<G6$[&U-K\]VZ;VOl
%"7)"<ZT#(jhn6Za^\VBUM7\O\aO=$sZgugKjn4kl!2jr8bf]7\EJ9uN/a3qq=l3#r)'.$%hEdLJ@r:];Y(E3$%K!joRORCLJTgd;
%5K.Y*PYFB9k'HI_a*[_JHMdG[6QO=cF5R$%gZi!t$Z'SH`GV.tT#<?EBkQd^e]@IuQIWgAQr?3252'a!+7]#WFPucB-^U1Co5BrX
%bL:1qQM$m:lMEc9O=@jBpT=I+a/@0pB5c[tT:@MeQBsP&T=d2*,H"\/s")b#BL[KaHVXCW.<\LtE3GPJhOdOV_GCK4eh9ehm3\Xh
%&&MV>1,F\p;*RS"m,tk&c@5)g8TV0*>CB+"ks=<W9Se0<N!c'F0i,MGAO8]5p!q$G8h+/UX1=`SPrDcCcCq;pI7(?c&f\i@_9"M[
%p++b^l;Q!S/sdq!C<01Hc;-[>RSjJT\9)A!Cr6+_S:VS'=7,9/Y*\d3mf&N9QS6[&c@23;3W5edqPobNT20p(0L>N]\N.3lGWa*5
%]DA=)'2'`\SXlBK.s4#4h8`c,>u"OCi.-9#94?"Wd1%_beRqU\ieF(,*rZ=-j6eQ??b]OcioK[s@a_penZgs/#lq:plfLg(]l;=n
%T2HuXP`IhhnAPE0U.h#1IGYl;RPOC).@$W$!VDgr;0F$dIaYVP;g-Za*'FO5M_`,U4HNa2-ZP5Cg)9cpMfSZYC/LjUbZp&]f:r0Y
%Vp1F,75;Q0>*MTNAFE<l\JAaPh1[:6F!qgsU"?#4RYuUOl;+f'jn("PU.kBM6eV,CRADp^R[QfhGn7$^bIK`On@V=-?Lpi1*ob2u
%9Z3^?`@g'+8`:J7qUb1",G*&%%ic`R`:Ib:`:$NaI\%H;p1'lslr:7H%qTA(C\Q4l@Ff3-L1&SJZX0-og-Or15@%pDCp)%Fg-2RF
%,o5aHeRkq,5HQg_CU:9(CUI<G4Vb(WbQrX+KDbGW%EX8HppDR(K1Z-hgZ\Xk.*gR\_@XrGB\l4R2<10[T2:Lq+8tl.K#GL5]<]M,
%+$<+t"b(UfcfOt(k9n#l[tC9mI9Xm-QS4]/c7ZSI<K8Q&hCMH?5+;[N0t;C.;uMBR:u8ne)Tpm.F&5seB$(8$?mn,5W[A(,EkT,q
%g,f'd(s608U"j394X^rcDUdO[Ht&S!nbKqh7K3=Zj?Mi-r?VE\ic09LG3=G3#OuB_9V\LS<;7Cl]"=rfSO>;`0Lbog53MZB`kTjK
%Z1"1^hV"[;mj[-Tj:@>7g.fW.e]"#Y\(M;lo%c2eodf^g/eu4onoY2:"X_0EI[m]RIb`n:R1QV#EEc1PoF5\nVXoIZfN--OqM'1.
%k@*+hNkW=LMQT"%drD[e^\;C$an=?3l\jlLPb\4cccATX?[NKAj<5iomQ%atVr-:o2s5\Rr9o'KEg6U[!V#$]XlVSCHO0H)-cq&s
%kC9sjd%(,aP_kk#^N9BufD/cWO2q=Uk*(XfjIGhtdnnD_#I`cbn!s!?F2%CW9.*i<B<PXTHb4ZSFdYsmb:.4Cm2%jj\u0G9D^GP!
%O07?i=8fEe5JR'jmS>o/qr.3B^>RZn?puGjh<GMoAi37YjmT?ZANs_j]T"T%F5==o-`q:T-Zgb2rh;D>2FkjN#he7.eMCLt*$Ldr
%A93E?XQ_(!Y_O;I'8ujR+0LsRb>5F/\GRTo`+M;>IIbk?ebSduPO%>R:Tgir0"9uNkP3^_+Eo/#1RI;#D\M/*K55[S#^6rrl/[??
%0&GE#j6%@uYB&`b__e!V0bEjVg17+h.A)HlnNtd[5q`&9N1P"T_9B`N]ad6=IBu&\7`k=uFUmc:4CH%+dkAI++Em]2HbHQRD?'7S
%2qaY5f*D"6R0,*`i+3D2b^l*@n1k5Tk.o.[Ge*Fu7@6LF0,fOQr+-ANm'-dV#@?g3GhJYeGWKt2HP8[@7NJ(QNZd0$LYqub`)H!#
%I<'!7Nug(1V.Mc)Y_ae/!AiBHIXK&IK2##?bh.-DM5S@@0tjf/s3JY3M_oF&G4X8+g"(EFHoUQ!6CSM+rKr@g59-9s'%:qc[J/kD
%4[%a!Cu"]PRh;$Z(';rJk&j.#RaIIF[7l'/3(;`;5'_GHo1W'Re@P2uTMEa;q0QTa*.0jF"JWu(gN;YXOQiCL>?Xt>@05150A>m^
%Z1lu<lIDrEb8]f&lfH<H.f%Hbr0R?$hkL_O5-t,CSUl3YR7Br'*6tA(*nhc^BVoYGjmEl[H9&*JW*[!7'CV@Z'0^&d$+3,.C>)0O
%Z(Z>S6N')QJ)dDBT:aG9:+CV?lZOAjR),)\=<&R0EJt"jBb!=ed63%?`ftD/iu!./koSQMTApc0*+Rl<Ar^BFEJt!VA,JOG9mC>1
%-^2];T"9DpqS8p\].%MXRXcpZrQ3gUT<FU]o58i!3lU#^\UIW;Fuge&n>$&%0&Kr^H$XQ&e"e>UiPiG*W)qRuq%_2i\2p,-iZQ"J
%o>Bk\G6DRJc-=qdl*b!S.,9C>rcWHKBt?c8n+2Qcl>$>J!t@sb$sm4H>thM(GhMN!A-/7Bc.*MFEj`N_G`l`31K`)V&":=t*bD'X
%YbYJ>h&_(m9lVj.'J!mA_4UV?#!H#FkATgl^OLI!a8.KBJs3:_I<W>:d$%\KA^n5ub>@U)R_7cJl'+`YP:H?rnhGJtmPX)>k$kMW
%LqZ[>3epZ#eJf^iD<q6%*CZ9_UZUeFj)=Kf5G<&oK\DrKMoOZ0jVH(FpciYT`UD5=4`FbGRTc)l\_3IA]t)gcgCIA!p?#t*DYE41
%p#[Ur0i-\rRt*j[4*1;WbY=J'K6-2;d]1ukgK2?J]5t;?2nO/.l-B)Pjj$"F:V`Znp(=W([gt+IV!W4_0&;"^?+p0pqIIbEn^RNJ
%VoC8B_<I?g)0YJ<:2HRf&/r'2a-E%^0kXaJ"2pJWiQ")%jn1;-)7t_0SnCDcW/1K@qt$$#+$Wnakj$F7l.O<7s#)<0rV#B?o-n*7
%]l$p;DBe-3_<dqRhfC4#kg*@U#J#bi:;g'nFaiLNc@_O_K@+FP$2"#jC$E&Rc^1PWPg?Ncalbh+93D/3Xqof'#-)T::F;JiUT8V3
%<Bn6iKLBd^FQ^tf42Zdp\,(__IG]]MP.0n_?_*]>VbZ"Ao%ATm<M)"6TCu[<V<NrN:H[PU-6NdMch$$@L5-#cmd(3m-`E5ms#mu=
%2^psiYM@\&:eC*UPNT3pVpEY%,J9D0?2iko^'L">$U"V'd[HXWK@r$4Tru'F6gqin#8<V`o&9?4Ok,#fZgXB&ka/dWdm)_p>qYU=
%Jc/AVUM)QC*mlC)D5%8bO`,=P+1+me:Ytk05@`k;jZS[_5IqF`#J8l;C*jq]5>Klc5ONL*9_jE[H2Z,L\GcD]D;[+CDeSn!/,4,=
%25>(D]08lZ:4;I#3:?d<M^R+h2m4m#P@taBl?k]Y]D:aQCo[q(+-(]Ld,r5c5NZD3&'$-jYj[A-F?R&+kMeWfi;%3Es#'P_4W=nd
%Jio5+m]4b,3(j0hk2T=riZM=@e"YcLb4)]\ihd]+Z?bS[Rt6E.@%mnZ8rH1=Zft7cEq^"5O&IC/>^-MmEUSsk^Z8b:]qpVP&@MDS
%8\X!`(mOot^tj<[k?$9-htCLUXX9X*_=pnP4s%H`DO5_6i%[!Y4U$q+B+oZh]gp1h]I;6(53L,HW#p2L]DmCI-LP<<4isOD!6LBO
%=($e_!bU\8O+p4(,SDC.0K4?^'$M&5oRjNKLD)P=S++dJdD6dO:[)9+>5S$Do(p[Ff8gWi3Q._t>tbOshjf(D^AR`)n]0&-]:*TN
%`7#'5rV>:2l.60>7ZQK&=j5(UE0f0a%We&+=d^;Y.QcL$E<ohiZipErqW.57X!p^LHar5,B@Z@^O`p2"O?)g8M\RVgZs-1L%Xi/^
%*L=?dH@A&)3:FIck7YtY.C"8r2n14Ad_C2+=4;QkVotEl%#H_Md<Ar&?%/(-6B%UN.R.8=E-=8>QOc=Ui_?ros7)Rc0##(]cgR$p
%r9EIaMrh"/5CD*755ju'B(>97++E^^r*Qf*')tt3J%kjbJ,@"V:]Hts5;,^:pjDV(s4&Z,k$NW8onOVOMoi=rf%WW.I5kuqG&]f^
%gDgB4#3%1TmO7YKfGp=+FsC-+O*n\.PeShKf=7U*=M#F,d@!u%=Iredr,nA(;:jK=G\,Kp[6%FBkh3YVJ'7hOK<JGVmcP[@E;VkR
%9E'#1)XHO\^L(H)?S6f;5'_F>/\-S[#Q;!kW+c[sU,ct:B9Pc4eWFVcQZVTU^Q7tc[e@dbY3"Q5Q+tE3>8(7jJWN)F1gtBoL]/%F
%i:r\'q6-14I!r@BT@A1*4T8`Wc@uL/+p>W5GJ6WhrfD%4nV:MIo4IO[a_6^*kr;QW1="k"pb)8LN1SQMo/Hso7^=epcXiW)1lntY
%;d9b"LdC_"j'7(ne^-A7NipU,B(_1tD#!?H*P>s5a8Tl*^,uAkc^<;0<^nD.UOr@glapJ^kP=\]r!,pd5dp5q72jTOk>POZElU:n
%l_EGEA")#Kmi"!p''ji9NkK6k,A-<pq`>;%B(`d.D]F`Q>`A^ZpCBL`]BkDn?[hc9=FBar`OGlP=[rA]R49@BgZ0/g"(!ArV:IV3
%G9(=$VlpQ3i@!USfF<*8@<E)L>rUQr72cV9$-+8ZX?-o)XC#+2NZW!_CU%#3(Zsu(q[%lrR\S/1&c/9\)t)"aVHXl5Fk\`RY-lik
%L"s$)7D!A=or!E_B89Qkm%_(1a.867>eWqeMIu2P;-n<=`mT&.p%l2!DVLu5K)7o9(T'b..dL707r@lQCU6.gafK24PM\IA4?]C_
%DeAPY$[L8_lPIl@I[.(@qYnTZ*cDV\g<U,pgH>-U.mNLn[W_0hijC]D2Qp67E-:rg\UApnj4!aPmd]B$k'>6NORhnPXI8[7j`@Id
%r]>ifYE.)Q]"S2'T>>F8q1i'#q=b3!fB03(O,]qba5f[#>KHEcR4bm.%`p#1aHW>^b*M6BQY";mfu@.&I_V`M<lk<%GNb&RMU[Ga
%7Xi#E7ARO>*Q@)0(V7%VYt]=-OfZ_'$pEsX3)>N6Ko$t6fMaNdQOnjbb#cTEooggd.fUf>S/HV>2,-`ODnDbsn9BcbE/Y65BmobO
%Dct\49`*D\aG$0$;qlD>@@NK?chbM52T[n-Q<uG8X<O5>S$u8=YFZ!<Ep_t.c;W[1[[W9Pjrqg_DY$Zp&3P#5SRLPs;j2tA^ITu,
%^X#B./F<+Ymd\fiFtmdY`aW@hA`9/ej+[Fbhdo=;B'_#GbBJr7bcjALVsmdF?+sRVI=:Zu\[\;&n4-^fF8*;K-\Pb[6oUYQCO64C
%lA)ZMXI#:I2JXMi.OoR8f"'0H/rRBC'3BI/]&G2"p&%)Nk8A5a$OnbC9$U)"Z@"K^cDh)nGAh%S7:XM!b8:'6\5CtTQqngLX#k@L
%`SYL$jnXkld/%Y/OUFY(Nm8LpZSm</:"W5blZ/=sfk4SS+3Hk_]%/G;K,jJq#!W`cEPH(G7IDmo;@88-//pYG)tJlHpm0G^B(MS*
%cr'b](44c5r.ZQE6f-NlN6Qa7-]V('Nb#J5J.6+qX98/c<Yc^Ws7K_s4hs<X^<(#/PJ7=fr;@[_4Ro+NhTE+^M&pLT#ohJkNB9$a
%^*;BYIY^JC<<6*<bK3W+F\CtWOgIicQu]KWDj/2DQhGXU,&IN[>CEgoG8M:p57-aUf(ID1.uU3+A036^1LZF==ek]Dkc%Yqq'rk&
%5q=U=)7]Q%a4kKaZ-5^,=I[FWRe!4d-CZ>V9OSJV3'R?6o^ptYf2jnZq+K8(GM3W>poNG;ar2crBBJTRk;"Olr#tqDq0^CMFZt.]
%H)[!%$S[QWdYkB^JCCW--q.2`5?qsn<bY6sm]],p#1D$\'@5b@#OsMra=r-#oJ)-XB^aE<_)V)dT-'#&msAr:%dn;HmIe``j5[2@
%Eut5XX0[:.cbEXi^KR5c8-%rTS6Wcj?U+BGhoka07/PNVc->hUo'>BJB5_^k3=:6dn[JGGY](W^cNGl1O2#"mS4fUdrcrUDoZd3"
%TNLBNrQFlebQ#'L7;l\f*sbEol^P_cR_]6[M_:.hr6)^YQPru>Eua6W5Lq4J:fKU77fYDa[jdR9q7F+KVfNPjNoJ;\]K(jnW)5\I
%O]J3$m<TJMh&++H%jHmD2Fd5rB[o=8'[Qa/;7rjT2!EomNoKkK;7pcX`Ol.k2am2E4BJ8%?&dj37uH<F?Q6t:rOjqC=2GHB-skP3
%'JE.@ijm0.]_L5LnS1In>E>X=TgmMZ+H!)51n-E&<.]A/"S)'DC^T/rIdHUCa(c%/bV?a8MW(t4@X.8[_jb.\^G^heh6;4FaN6/o
%[H4/EoG2f`4MfhA"*6'g`%\VY]%FKOfdInHlnOD2dkY(lC;cn[IDo-!&4e5nZH^f-(.PB65LYNre#<Z([QN0I/DF(.[I[RF7^'-m
%/Gf]C]?tC5\95*fZKAL!R"Mtp=kFWrHWg5Y;e`HL)qQC,[c$3VE!)m'&;ud?RYtJ^Vu0l+DFZ[`<"Y4iL75ncfGd"+T?U[6.a4C/
%b+Y0(/6d"BnYN&m3=g>j_!@g4lK',L;B8tD2bb1FV@In.kh0?MOldlDq<S3^\.1N88B3ME:M_p,3YCLeG'Zb@9qCGt@oJY**cuXm
%EoY_K=_.-0N)!DBhQ"f:QK2+8=DE/74CZn->\*#cUQb0#1h@l":<!n3cpfD"m(()E4Ccro?6"A0<.X5?i5BrGD(nDZGHqpGpSg*c
%?.UFZ7#gFHRl8h^mP:%H@usJr-p#\&1ARHr&;iB/DJ^U\S5/+_VCkc618tJRnIC$&[FmeP0)-'LSoj#Q#rflLN\DeM3pYD:H:K^C
%]\9E\MLD]f/#kF^i*o-9K>=7_o,5&83k.'uW[-Sc-ai6,]RslJ1dd7%?0"^XXDPmVMV.W3-YkN=Ut.9NT4L,-+j;9`CXatZel5)'
%Q_1[3ERRLpXDPn<iJJ#&X0E&-M`BJ^78LbQFOZ1NUR9t$20bR;6ZIWnl`@g%[On8o[kW</70=>hQ+&@&(:KnTf%J%6.a">PPT=7-
%;mdV+.B)%BnoM!\2Z(6h8_")pMgVj:eN7_QoC9>nNOV8S>fRf'N]\piC($Yc_YhW\fNcuR]eZ%VU`u%&X#Fq8aN;_-<`6%@,Mja^
%>3pF;IA#q&HV_j5F[h<%/X8gGiAF@te!ZpYo=]6`S4R;?S#0r"CaAikeAAFZDMpk+)ATj/GZb=Z7f@%(dFj:t\q_3Y/N3!sIrN_+
%%\O`bF!BOdQ3b!'c?Xq#%l!/IjugGQjoN]'4FgTD_`Rq6E\.fp)>u_E"#QJ\!TCj.!U\/F!F(0@[j;*e&s*XQ&cl]F,%0t_O!d.n
%&ckg89E^aNOV.]R=!n'\/VsJ6.1s?nn(f5jr:EBB4#mla*]4N@8jpDJ*g+LjU_3E9qEt<"=H\'Up.PI%5p[3&#+:#=5PKEfF!VQ/
%qG]^AVZM<I._opo"kYgM0W+snTUZff^St8`VR/Uppd#ZoWM3+1@(u?B[A-8/,3^pM=2eKT8fa3c;kj5fL2ZYO>Vp6UCl4ZnrT<r'
%0/gQ%$QYNTA1(dt1R=61&W"tX;.;qaA"5+=6#58%lmP([3,\YkDsuo\4_-nhKF"5oD',E"nuO_?\Y(\?L?84JJ5/d8BSil@iGG'T
%/_rZ$'XVBXZ?7#=:dU<?Qkep#_.:I8J>S-^d9p#X[6GE:headfMVL$7GiV3<@5YbN8,CB44m0$ZB*X!ecIIO8@1&[.Fg9U29h'>U
%2L*eb^>.e0g?cKND3lj4DP8rAD>)".`Po.g*_jNOHJasKF@fX=r+h.H#Gbt?>mUtoe<p#aRi^I8;jSjiB")EcF8pAuGj9`J@jBhW
%bdj+PU^=NkIIY0[p..ShL,390oo(jTNWF"qU1V4CK?Nn:I#Wobh>Zi11MmNMV)+I)?1cmK/t]Lr$mbouHX#B:1j.L6YZZs'^,#^;
%\FJA1ES'6_mj`Bkf9G\M>@Xa<+0)h6[6s=c$d2'%k,)nN'sZ(g:;ij,>./a&q.FS>N"e`obkf$%Yb$=:oj4S_5W13?L89qrCq?Wj
%o3pf!]#i[G+u?bBS52tC?5037W\bfRNUn[;Qm]IW49tFnJN%UKB,+YCY3FKI.sa-)@r"ahHIl32S$cjM<UZfbGLKE!<5iH:L>F0)
%I,k1*E;4;QH2]iX@=P4X(SZqgnP8`Eg9C6r\,,P'!IV6%BZ"(D=13$*r/0@U8!\4FFjeH-qXD[\.\VrZ(r^AdVSSV1W.?<t[)_+4
%Ca_m]I]9A?-rqXYrOb#s>(]jn?TTd<NAIIbIa>!OY>2l"r]%FrlSg1EXIklnn=.lC@8m#3`QM35jogFrOMM2A1)PId$H%mq?Y,:f
%`,NU>L>.s2BRdW>L>S05n/Kdmh1h;shjh`k)tFj3KC*fcf/":eZ)ul)23m,Zk;#Z7^aPPSZIlbbqsE&F^EoH0fCKmFpA<+<2bn&)
%%1/$EiUMQZ=\WV_Z56P[\sh+;)j;1fe[;3mg0Pc3s-i`Ao,;=9J&Ada61PqC,jW%h[NB]Q`!r+D*U6L:_toA'%CpR,\Y2lqEH8sd
%NQDV9DQP0C#'4VcZAi]2G-huA]s2i5DTZn-[cTLQN=LD9Jg3F#JtpdW6b<Nu6h1Ygjr%X#hsd(H?o3%BHGc$?`W3+$rXV/`qG>:N
%pmTrN+1oW<HNdVo)s&mqju,Ot!=kS=nuCU&j:H'DA'j;p`]?@r)oJhR+KNLf8$Q/*]S=],NEGckK16*\.Datu)32G]5te],)%O"*
%3/3LGl/3qs*5m"fVo.X:Km#MAr'kl-DM9UOl`ocH%U2gUX.9aj&CVS,@sTA988n8tq$k(b_,6qeUC9ZFOPsm?0Z29s4,B<6g?e<5
%Cc5lc1`8O#E_+Vk--O]4/Qn*sGoU?T7\V[9&"Ma;XX5#]]HuNEC;qD,dN"fi*0?fHRc[-ebn9h(a8I*+4Ro,.k$V"RdN%RYEq`4J
%gsYhFTS"kJ@:Gub5TM0h9J$_qjYanld_Qsl./D0OFCQ(LqM8MQN1*19jJL%3X(c?cZ9BTXii^,FKO*64?^Bllima("kacoZ^@cC=
%ip:E^e1Njn1$e\/iY5Z?e1)IL?aFaN=7?#WKA*,\K8Kgn*/8d-\$lh3g>.d-^"_[8h<HIP5]F7Dl7f_a]!:nH8;]t5@'.K(Uk:a"
%%(#1V4:jg)o`nO^pt!^0f3#_)%0s%qg`.(LLB[:paK"'h;5UV5VZ>]AX.-0#\9T]ESr9*$io]3Y*)^eJ$s!4E[EUL,nI/E&\'tgd
%4@9k0:rPp\<:O5JHt]q4P7*kZg4Nf_>""c\0jaI<kJaXp(unlcq+"_n'9aOlm19ZJKoaXnA'3)2Ycbkd8Fa?GYaU[/VV$SAL,:/"
%A>&`=bE88<99RZFYLV?/et`>R"ktY-*8K+WpG&pMHn<9,pB0rl5q-SiZ;F+IK<Tdj9t.]b!mj):XGF4)B5P*p4\:8]UR+m3o3*]t
%8/KT#!eb\.bjZ)j@pON25c-32GBGF.n7"hV%;5-f!]+.tnR*Tl)X*IZnQ]/WB=5GnP8ZK;:B,]eB;u2)H)U9^i$EZiI8XM)JXm/>
%1cl:9*S8gc\SqD[EI+IU/Yq[&eO<JKc\n*T-!8)=HEjg:463XUYrlBk+'RNc`s8Q[H=*`GM4J`+M9rV(>.]E<N@@2=f!WZ+l/M!6
%D"-[E1*c>Ck`2\?l2UWMOX9Q$VETeX>/=ZFq(n>@)FH@a]Smssb!65,hdcHRnq>Y4!N4<!U1D`odFl9%&aDXg%%h!@QAZ]lP&>[!
%?8d+^?JN;4J'YrTXUi;5BTW((XDX)WZ$<W=#%EK9YmaMgUU+sTW+E\QrA*$J*&f5F:89l/(?\gJ:[@J"D(ND8BOm)5KQ+`uZ8jN%
%XN1j0:pFsOrioYg>41,*;j^@<_cY#Go7Z(LeLuj2mBcs$''C1FfJJ?/CSC@>d2e&/9qY=12;X6TlW)j3FW3:meucZ(_lASRqI!:"
%LD\#U1D#S$E?O_j*1Iks+N)=;lLR3B9^gn^dn!Eh02'!U?=-5*g$hsD+2\E<*<XKiU*OkFD<`QX!HB.mf1;d8X`8q.C;-Qho$N?c
%YdMXoS:`_aoZg`d421B*Ek]0Yp5e'@q3Bl/=f3C.8T!,`Du3k=CaJ9a)!C4"ZM>&P5s56'gNad;fl$+baIC5,4^s2)Zr:g@`%R#-
%ZYKKh4(Rg8TS8-+@aQ$?PZ*3JB[O15Qo$k:d&E1;=qc*[&_0%ledaGglYIgK/sWIQ:$k?#7]sa;0+P957o,#F.Z=.$.XPK<aC;`>
%3%`J_&C'\SLf(6;BctlkWhI]--bNOnk6&Y(CL!WF3)HASCg8%aK1=uZF?V7_nZJGtPfG7T_`&)a!q$a,FW[nC:TtL@?HBif.Jec*
%`f+8he^J8LVC]*WSsdL#C0c=!r'-(^D>U/u*RO?]7UYrJ?(.G$cRRB:pU+=n%\Vss?<cc^e/L1Tg*.LR1K^XB9/>sd-r>>%n_3ch
%`2J5=.Y(Cl(U9$9je&m]2Q-+YN0Tju-7u%V0BbahKcuot@8O)*o$iIA2nEiaJrPnA`;Ud7n?b[9U)9j-`=6"orV3Nq2L^9bgqR]U
%cbXh-&&N#uT>!ER2oJ<)l=`Nn`%@]h1-QkRoZ>9XXDQfNgq4IZ2nZMD<-]'jlV`4fe<UlHC;]\\0X>,5\a=7$r6[umK"?ai:2-I7
%K7ip`Fj8"(X'ZXC9@o5+#EVTjfJJ>r%C:%r#NC%CkR_[gpgF892genaNsQ[ZIU2"b;B&(I%&gs,1Mea#"6!o1#P*>fZ'AMp2>35d
%KdWgABsV[uo*s5'9>,4L?Ut:Pn/PRQ_bojbl#lO/?e52RjHk;YapB<G^8B`(@S[n_mS:FL_bRlEB&,FB+ntu:qf(]iqq^N28*RhB
%P(CBK")#.A2s0$WG2O?.')k/s`k'ofn81b6#P6:B@p>Q%>60]-8bb:P5:>FQ,lDSFK\tL0Z_Jd.>3Vgj`_>ZLZ%FTT/.(k7Q7RD7
%=nj[a]t*l)O!d+jZg`kXl+FR7mAB$'XW2j+)C4)8)S]aV<^ltebn2#`>%;QcbERaCXOn>;6V(>2SY_#bi-u%fd\pkZ+-q>=_XqX8
%_J8YmfmIX#UQ*fCs4$oehgJjG&rA+e;STXPA,s[38!jNm:1>7*_<$j-=;0;u]U2"G\$TC"D7M?I'$^5(=t[NlSm7o%SpN*PSr8"(
%rQID@;r^&_cc+[\1&"qs4Vr1LB+F[[iLW'b1\Y.u4Vs<4<_T&M5bb.t\eas8/?%f0?R8kNCrNfV5p6ZRaCe=-7S>&b+bmQdJC!"-
%b&$8\?OMAspg04uO4:B`6tnl.F&jYS'm>IdR?`O=8E>3$NFi';?6&dfEd\O/gX=LZ..bs<RF=Jp$>hB]Z!-Guf-ci)_r-MP.=Hel
%pS*n&"dV]BYHKb$(sK.U@`/MJBZt[6=rC+<5e^F=CZBe$2L"JniDHkjo22%EL8Yr$.Nce-hq0sna)4Thc[Z,ELOqdDrgE\]>:sg"
%_C5';POEl]jj*YdkZ8..qgP1[MDDTeW%Mt=$%5\9P.Z%)^o0.c.>.%4j/FI"ZYaF:0HgjY=t#_];IdT=ibSTaj0Wn^[:0a/&!/CP
%[2_q79N+Q%iAa6T'g<;lU$,/F>b`j<BF/@ZL8mTS9C4a\]0k\;G23TY)O#cP?f6[U>$>KS(If3.alLoSBeO>T(&ohSJ#_mmj/nmS
%=Xb*9g9mg9@Q,S'7I\`?4mr//S.;Ss@0J!L&U?(O'O88VMTUb&Q',\p3b94QeqNWA(?&sV_SiuE^,?uhSWXW_0$"UA@8^6Cl3LgY
%P;mc3[=u&2@-FYC,e38I<@iEG>$*kaAc&AXBFBW39N`Y3;Q,NJq>sgKKVZS"#ls@j78Mu-5l2J%"Tjs,81UB'GMX!QZqd[+(1^U&
%,9L0\?eok47TRfFppi<HQ*'9[&e!T[ZePj(T?KuSiU"J_QVXXHZHK7JFa9iX=XS_GDj>H3qkI7\=)lY/HET6/KA2@Jq^Al'#_?_`
%n(H;H]<BH5X@0-A!c>::>)2rs(OHYR.5sH)qo7D0WG0t2#$-fB?PiagkA*(<*:PTH$(^>fm3S2DC9!fN=br'87Z;ra@q.F)Ai8*P
%)O0<VUid7AdM"YI.C'<RK[(@J'nZL1ckAIDTWY$1!]+.YkWJ^p"R=0=on8'&k9]>WO):%bMpRok6<d:LgYT3QAi)s`Ed_#Y*"CS'
%P/pQLd:!=BJ-NDU&6rdF\_bI'*9mR<2U!)@HIiDr&.VRFfOCA/g@JKc%l&>IA0[Gi.3GQj[:*-4-P`5=3*A84qMPg<KTJSX1ZTa`
%l)^,b,>$kZq./ddPk@MDh.PB*;&*QhW:$tQHii17=qYR!\XlS>9/]8)Y9$NEAe^rGIRFoO:Il"praNkToRHuJ6;$MbPliMN@D5lA
%4Kd17k<Ct8R`?Gk!C\o>UAW"eZ#W%)U6h%)7+Z#il#ac0Lkt8qX/.0X]Gr"o^/9UW&2uM,YJk5*koaU`V&BAob-J/l9X>d:H&Vu/
%.dQb5_%0gQDE4@N7.fe+aTL/:q#['I>LnYD'8iBp`!$PN:JA/][Cap1E$fP^_/SAOi%RXH-`/P\M^p;XKfT2GDNJ#33#'uSJc6AL
%4mr_<T@afogq[>VX`,2PYp2er3"3dS.%O80Ft1Or7l+%+Sl._CaFmZ1hokPS?,^43@ad(l*QF`#^g2842;l_tOYse^HF",.j"lh8
%9]WG,dd`aH@<BtdaC-E9R#)ep,);T-@4$#^M&^+OLRH6Bkn6#3>#&BUB/_5nCRVO#`E5/*&950Oq`ERFF`*k^6]!jnfQ<T"MYf_Z
%NV*e6+p*-5NAj@\,J*Qki+oJN%bu*6j'1uLMusSq9O>P.r,>-L=ScJX*<CN:4)C5VGF5GSB0^s+'E*9,h@/U4(RNIej`>G;_%r@J
%JjFg)GomIK&.@23$JO\&Emoq)7Y)V\\D7&6`T=M*hu8Mmnh#(dX2X2V-7j_iceVE&^?)m<#O4o$BS.3&^i?%A/M8-`J]>[jK/c\7
%>X!rGD=C4@[CCSq"54Fjg)L.)X13O6I#f'F$BnpRg$)cQ!N"O;5c(p%PQeeiA(O(5Rif6X!h)d*IpHc6+9*4CQFCpLq6\f#>[%+l
%E;lF/J1qj-1qc%*[S7NMjZC8DpE>dddhmg1`ke]<jEV`f\]i+$Ph!A#/03a0g@jL$dof4CmZ;)3#I>cFNZ(mDEKjoG<c>kRiVFbn
%Fb\A]gMN.7hCdP.W>*D1.IL\9S#%X2U3XK%7e(G?]]b9a.StFT)I9rn8q^0+YX`*(Y*?&jM4HbBKH7XElS4@3/^9C,0`@3ir1bn;
%iYT:1n\.N@0h'i%(CtGtnmpO6AXI43?hD+-8`%G:Ru-fL<aJ<jrAF-/hW%,hl,t_lqHm7Ld;7ZoQ(*W_a43-.9s!/!*o;7]USTlq
%Y<JCD?c2CL0l>jraPnP,F`M9WdCi&2(-Q+3d(k9(VZF[6i+?bDlQY2ip@(Q&9bX_Fanj-s/c0ukqGJ.h?5\>/Z7^%HA*^2i?Jc6p
%!8>$77;2rs\V"J%=ZYDYS*p3K1=K981.idm8-]7^fCh2Cgbco-&^?Nf7e%$`Hr[.?8isiYc@1f*XM^nbpO!0TF(X=cA+)=p]C5DU
%2NYB8jKfmV\1JM0YG<tJQFTf'oC7Jqj"sAf?S?JM5\POFs/=_3TkA'fLP<Q^(uVb/-ONLrA$c>s@'pKuO`cbcFYM5I,NSlIl"I--
%LQbJGBO85:Qa^aCf#0"5'16nfPd5GYXkX'=i8!V2a8F>55&IWJjlAr\d%)M$m&#.%dM5[E1?!$.iUV4J/G2KkHfI_b@BY_#]["#h
%7AU6N<SA]uSM<1K=70>d&O=$<:FdDcIAX&XC)@Ik,Kcf$fj5DEHX/bHGQ60?+$JmY8j?9rTNesf*-KB+]SnMG4Y,ON]mJRNlR=b:
%NDJ(;YUadkQ9[C#mpZU)M21gH5IC_9)a.2[J?\n"VHY'5gdI-P<Uo;0jf+t'jO?o):JH_[^N,r(W,`K:?EKKZ.I7FdM:^Wq]F'B$
%]3fo$P$!:S&,#-n':1&PPuY&oBa-)Z-"l7D(((^Mf;u-"DR4KUqCZ!col(LZb#PW9#NN>.Kdi>4dB!b[maO+68/lHP+h.ERJ"Q>e
%qqM)=Rq/q1cJMnY(]W[bLD`'gc>Cn<m5_Y(Yds-=3,N6Ic+n$LE7t_j2?Tl%^hJ.eh4B2Hk3Ve:JCB7;V#u(Pg4H*@#JdP0>!U"7
%_QIE2?P*D,-Up>5M+ObA]@HYc,:W.VYS`>JX99t2j+c>W4u<nr05EBd:f]\d^H.Q8/!3Wt-KX9,mBXC*;AWN]8)/C!j'1u,SY*4!
%*RCY%B%kNWfs1lt<P5PP0PX$A$C*jq=a3*a;a/ra=`8.tRbu<V@lG1_1cM6UC*8Sa+%Zs+VEfq;W3/s^C2!c04pM5VMV/\)^@$oR
%anU!8UFiSmU32kL.4`3D"?RC%]N1:"6_t/^^S.o%1ETmQ>&%ommP%-Y0,P5<5bQ(>`not`B$3ss![bWMIS,f,0_M0rFtrWB9r3ta
%igl,Xg_ja!rgR,!83tNQ;Y#"aCY"3(NZ)<"EEntIb%?<8f<ra[l9ZnT-RGAqg>1Da#_t2oP_4Hk@8LEa2p."%.U$!(W<[u#f782?
%H$SME5]K?M<JK%OYSJGCGgpl5P)cTJQ<g;kB`)0dL%3pP8d1M.qm'W!h)&LM[>lqlYbbbd@-9F_6g-W8!"'H#6gM%aPl9&_f=JW3
%9r7ZQG2qTh2s/]]mJ?ADJ?WCG^g*)s(Lu^>OMhn+X-)&aVC[i'#.l'+=AS;]g.b%J!ite;LZdEl84N,p?WD#NC;CW]0r-dG.FKuB
%*q`f=^%p#J)BZ%IfNa6TWK-<+!&SJC/n-2]C@Fq#E"DC^]!mC]XnsEZYjF8l1PknfBG%icTB\l@3`o9`04:PAi)SaYMcDbcblo&L
%YZ:P5flUZ?o7euH?:Qdm.0D>U7r&JeS5Ig$q4LF3(]Z[^dT*c>'pUAMWB_"Z]<3.^7k[#i_djNu(UmEC!s;8,`D%iYVaGF#WT+ks
%ra?gSeN^5%T+7"?TZ9f,TZj4iEE+iE09p._C9T\jL-Z"EmV+/NE]d_bPf$3TVe>/abi6UlcZ=8AcHaYeR5m?MW7`&pWUiqb&&[bX
%TYP0$SPck:ca,FPk17H>i2qe%6.-U*C$D&XcnraHT)2a>(l)JSHJ!(+c^7G/LJ6Ok-9^CeVe=`*l']rg4a;9"PVgJt/175bE&8:H
%.+>),\A6`"f\Y&'kR.5ep94bcRJT5CGj9>r4_+?N_fef$r2TCJh3=M9F*_FncTH5oVRF=#dPFlacGO2EWJPETR;<H,l']np<ADoX
%9&qb=8Qr+V^41GU0?6AC1sa(*oLtlQa_*l2:Pl>gB97Ls)_OK6?Vp=Y]5Mk?lcg\8e"lZ(H;al_TIFT,m7V];oZeV#ArQ,`1XU;J
%SF3sXQ<V3J]a!#>Rd.S*A2<l<]WiuE\?ZJbV!`oGKh2hbO<^Q]F7OU%""Q8[6L$bF5"94lTqrq*e.naR0ErAa330pDRoOIfTit-0
%Rq*N.cYg"-bU1<Z-`e-kJ%K\kRqX@dJqUmu/tB"bZT2a/?0m\Rdi"d*kMlkmf#[]6\^(@IenYf?.'d0Uj2a9N\CMnj!slLsPZFP/
%An50r,g&j0H=,OOHb:3f].$AWXAU`_?'HSEll2SkNAZ,t4^)%L#R2e@'loHX47Wpk<d(KLaRc^W>^LHST>_I^co4p%7aZ@,r44Rs
%0HC&(]Rao:!e\#fkjTB7A8cGn816Gt5jkpHi.<fQMK&&s"#8fOa]0gZP`u9fC5dCSbiX0>mlDNVnb;Ld\@VV'qX!c"^\kEN.VG,n
%pb*_<nAQ@G>:9IEebQiThd:j4ht[F>r8=>G?XA/q>T@+cHi&-Zq8qa?&'O:XQe*mWf71<r*uFLOcVMj4ca(uJoD7fQ0E#,Sg5d';
%im#`qibQ%3+0T%@FaLjCp_S5GhY*0'`I@>HmZE"hkOXn,4+Hb/X*:JFfD\q@nb.,$\PD1OQh_/q8&,*%h>,;u?7="++9,bhUdLTK
%@6C4O3B=k)Df/b^>=K*D4e*Dh*HT4"PQ0M^a3F!]o:F9H=!->^rsU"+4Q=7A+-&3*ch7amV^;?"@m520P(!42Vnhm'mQ1dEZYYg&
%>?8u*h#)3,I/Dk-+90+!X.M'@2e_E9NmCKrIq6/fIb311Ioq*r75j>%d6@OdX7DmKp!SnnCCoINBBOQ@n^l)oT:B1>j:W()6'Sib
%o>f*?qrS(n^&;Ta-Z@=+LQB$XI/33sB%uu]q^t)3lK%eRgG>b?lKU0DT4mY__9Y=a?HDGOg!RoE<d5_0FQSLJAUH_rYW`gEs6]18
%SH!DNlgld5^U^nhqGCj8Ge3$o]"7]`H$YbKqFgaeQQpSAd:[+f$2d!bjtCudID(#nIk]XhMn?^jj5Ki=I'WN<?SL@m2<@E%?N-U`
%5`IZfo(=b&+toM%?'To'bGb`P*e(a#PL#P5QBs8^IX*sQ"omuI:Ti#W/]\1=Gj)HW1[m8=n(+t22iFciaFE[cUhA?kDhE`uhY=8.
%pkNcPh3N(M<7c\Wp#l8!j2A"G0Yk`$jg"bpO]UF1K,<R;NlE$ASTcDmkO"c1P@*CS>K1=R`FY^b]WR5/s0_iNb>=L3O73%hJr=@u
%hEJ";i:oFlnW(;(le;9(GNe4k3V)!\n_TYm*fP&fQgHGUqj6MY](K"i^%8Z`8__2o=l']f-\(VRqE^[6bng,,H)nSs2uMXC2<j^\
%hetr$T'Zb_Q=%@PolbT_F6rS2Js:c'^MVS[UDrjjnFd`=AX-VmT3^qb8a:#"O^GeJHh.K5>],o.^:\`4Nu`19-\;4:T*1']eD`^%
%m@ntXFCEbe&$+A\bMprgU=gVZCLLlSRd[GbKYP9-rop?Bjd.W-b2U@!qk\SQW\.P6-&<,5h%4&?IY5;qZRm"hLeeLM\%^%'=%8\r
%`hP0qo7u>c*mV@dPJ@,`D8CjpiV:b5r#8l>O#Y\c2h1\eo(3r/7fJOZfF[Y!pVY,I='+;XjdZ2XGPj@Zauu'PHTDtX.ZEuG44[*^
%Z"8pmTj!Y.SF/THg[;flDr,8Vs%4U8gC49h4Tb1X8?H#/Yr+f%oj*_(39ij0IlQ-5e!c=O'#-eNp"/g,G8FnY-OB&k55h*t-i9sO
%jr!J*UYQt&lPeA/+rc,"_^N"FOd/Ck#+4[.;PTTnRdO5>h>5fET0opY&';iT>0H=Pn!.]Q0.'h?%B@tmgMp+tM+r5Z(&7Y5_$8eo
%3<]4@;tQ!I+kTqUcf*JCN56@kk4%^*I:3gILHaaXMo9@hILn\&npA,Bk#gt5oRM(F*Gn$^EG:n&7f@+t5(Ca6i/`fVo68Bs(JEBp
%q\o)%%GeME3@UFPS]h%1SJo:!MQgW-@s7/L5j3fZIY6m!nmiZ09_VAtgC=J,7Gk>BaSN>>L56HO\kID#=9FFRKNf!s_71%e@f*C:
%:LmT,J+gUW]6PVoE1d#trXYg'9SifXK`[pgXIQ70)'qmK@^+U9f\aD%'L7b;*kQ&JIATei13m$mk"l66b&[%;;8NBFpj"4NZ\^G3
%7hIe8AIIr7I)u=!Hmhe%/u@27]ssC@@KA8%Orcf=:RVI_!<h*$(\k3Jp4!?;*)BG5,TM280]U%Rm=E(ehR1@=;UF^81m!b0kH@:o
%?fX3H2e(0W/4Bot2@[k!_[@^J5KlSIj=_A8hoSXnL(('S5:M3\T>V$'^K7c>)d#DYs2tfM*aSgLrXWLmrt\B)>90O7@9E><NgKZ^
%=SP`qGQ[HpT[CL^#DB#JAu@?l#^&*kP(fg?)=74toTo?OM>IhXD#214N^,]!8+o4BcuQ6\kSDnHf@c1ANG?48jc(7FrlE5pDo,S7
%n)al`QbOd=7Xt3r5E<l.@;>Mq\_aOd5Q@F(rHt5T3-)n-/E&(qUH*.5ZC-`C<%Gd!L,*%T/eXb]+h!C*R?O<:<OL5iLIUP=8go(Z
%T0MO1e'2d<g'V$;-9`E7**cp)ru^SbBV5+&3,J#o(5:>tr49<R*d\7%a.u,M?9"gU\8&2Ub6_2_C;4,'Wj_cCTSodScQqk.)iftc
%:3aWqa^uB7I>_PH>N+%U%=DTc-V\X-l$*2h\n67hA96#d,3^t!&(,%rNt3WF8+@#)E;3"_L5VWe9SLe!iWl?#pgZo)#lT;XlsXs0
%\1k.`6?I<3O3TA&8:)E)jBAg,fW8JWUB:R6F3QL1#/oq][Vj""**TAC$mIgZJI)b_d6A7PddDlXiYkPd$Y(*K79\-I.E6KNJ^;?5
%_-DH'2+3!4f:]g_9RKI'5F@Gr_ZcsiCi?gKHlnC,&M.A%SfS;mAqK"ALoCZP_-d>LB+b!A+iRa=Z),2T@5Fsr)KDp497/si8X'd,
%F=]Zo5.?oNi2N*'4Nii!e0("K&I56iCbO]bC#E;\>b85f!j7ca2s:;"lU6UrS1$?iJ8`!M$mQUOH;'fA!I`C3NZ<q=P(mI$gZjQZ
%,n(0Ca4&[iX=5.%K]nIcX-6'\25Gn\q]uHQUd8bu.bJj:9IN8#PMIb,TnejZ0^Ic!OV&$jTfj)'8'uDEM63U%$mpboP;Lo?F1*.3
%P/0=V1GkC*M^$RAGf-0bL!U[T/=[<t5cOL9;^fP\m0m!akE('`\in),_hXt$`G6,>r"L4`,aj@+D*eYbb]T^SdVfMi$orDu,t^GD
%(C_r$KH-<<\jQ+Bc?CNU$F/i-WF8A^),RV6!"E]UYF(hG$0^\.:Vk,8p*osjOa766ReW+&jAR1s7qr>`V;g^Q<*215USWQq!jr>@
%!Z?$_D+g0IgZGnh/u]C)JjA9haIs*_$lNar?RuVM=s+A/E(F0s8MW`5:2Ti8QkjHhI!Vr97l6I6rG8?2+E<FFVbK193",>eA/,cD
%@k,S^#;d'Uom%PT;.j;/@'I&`2;Ge[dOfuk7?85$LW%i&=V#T]Np3jL$Y,CP)<_prUXKT$;@aiUL("I,i>^ppE3Lt7m&U/>hS=#2
%6l9>Bc(iX0NJ1kf*g>'Z[C1+'^/5r#_@K$2jq17u,TIuGH*0k6>QRo>6T/m;,s-Z#"rU;#Gh+NG?ZGcOLfT^G4oh,@KQJ\_+7UpN
%Cp[GYcncWg==Ae=.55hW$*ZnC*9[M^F%Bt'1pE_`LW>VNk[S0a"pkfHX/:kYJL8k\'!0%E\1XqO,[8qFX=D3k&-lQ?J`BX#f.]qI
%OFdBAP.abHWJ)Z!&7I)PUS4iu9O"gfo1XJp4@ke&lSk/85,Icl=TdUe.*q=BXAIPDZ<FCJ%]ff*4L6&Bd0qW]!dQc0)3]mF)_]CD
%f\5tV(b`1#+`1q=oSdU6SesW.QHZ`aR+6&$:0PF9BXoslR:ETkhB`[TjIuXj*9)#E/M.?a1<hLnJg6c$&NV.qAIhYS3$+er3fZM3
%kudS<"N5t'o)37RPiPaLJ&/!8F9\d^4YYjI,#.H_R]])BkIqL900J=JIoM%?D*0RI^0%@($LL@g**3C\fq\Oa\.:Z\%!shp6D1au
%3U@Mc:Xs@g*,EherLo\e60%uC/AieH<EdJlJBpMj!<49*V//GHLBD:BMfX@DI/JW#.?SiV\KYRa'gB0jen)ZOU^DgtMT9o1\`j^K
%ZflnQl\/s.7bqG_2(fq1Ug"27CC"AnRhofgHGga<54lG+5NlMrOp6$2SWG2i*/Bp="r0LCP&12P";i<`_Oq>:N>P^oMeZk&%DYOo
%\VDK@J/<Se^en\Wm4WATK0Qde'h4;mr#NorW"\_*5eL3u>IJ+K$3SOAmYM;MN>`#U)E0U0o#M/ga28rGLp*T+H3IlCYn-i$%\#/X
%rQ\4?!8Ar#S0i'.oFjDcgYqY;%K?1Y@S!fOW))C@0KsKQ7lgotP+h98&mWXPGlET?56T![TJ-OP>7;`)nE_-I<b)K8369GgE!WS;
%8,jN]AE6;>bJ<W9OO@O6ah\'D(LPg(L5_Aa45=TG5a%5HD-CIA'G5R\&oa/h&E+Y"@<L&Nm"$&)pMp=QEI9ht6LG0";J\n?E?YLE
%q$LPk7?54%.7PL'5B8$tp^92V&$n>`%d/m9V.d'hl]7jQ4ua&BiOtV.^42[#k\\*/\L='8^\DoIdC4J\;#^dH.<iDk?R'pJ)U3a'
%h!Us6SNX/XWq9_Ld&WMtVrFA)>(-+OhsM&K;>cDX;"eVaAKbQ%G)&iC@^l7tp[1%_H5U(+8Y\B%0#Mq9I^[l^dc:4P!'e#4,WA>G
%bPf,,G,>&WcRY.2Il//sBWtV*pUg)2Cr1[bh@ebBptn-V?SkES?2;%fW-#)BZ0)Pl5NAC8n.C;Ze#hKE0?%gI-$2I6h"I'YB$k^1
%r1WjV6TeT75@H8*[p8](6<1)BWr<,oNHY-*>58c!r2'jOM[c!;XU6W3r5g::B25N+"5;!12B$K4=#.ae7uI+";LX@X3^.$E8!<BU
%9)jBRKKlURQ@J_@>/7Rr%u/,QQ3Y*P]D4B^J,`Ob?1&H4p4bI>jRD?&qVNGTYb8bcHN(6=\QA\$Dnt91"#P96+4pE46[KteJr2ql
%!naF*I]hs+Wd[`g^ZjWBJ"-3g&a=bV^OQ3@VuJB]10f[>2tF]=f5En-f5H/&I0k;(^Q@@@lIU?9mdknB1YqV?Z+Jpc-(jV+eF%sa
%JarGB[gmEFO1+hte)/0C+D#iP*d#TU1`lVmHT2aJli%[cBNG#L$@#d)_.(&A]pMnjVbDQXF.q1?rFWfJW=PG[PA7;W)!Jk0_*Fu:
%du4Di)/u/O*P1gsYI:IeaAKF(GP"7bT4ngSC2\H]rG(d]E`28sX53X@FPnT)O7$Hp,@(carQ_)9>piP\?a9*<JU>Aee"HJ8N?#>f
%K8qTF+2")%Kt:FR^%uMAr_berMBBG,;jH*sXp,&XMiG;$RZ=R>.\1lp]Nq_imLP/9g5_s5rH>D:++&lOnD\B1M\Nf%;S1S`6t#;'
%2e#7J\->?\D'=W1H".HN#0DX=a8H*791.;-Fp6jdR\)JXe%s\0h^u9_SK`k]q)9.e?A\</=:2f'_i4Bg*-lD/bHGbjSYp?eT_c,j
%$uI@KXr$=:42BdfH?7F]LA:2#\a.&&`I8OkX&>6pghor(P*YMheOZD1YC7`uWV;=IHDB?kD)g*CX^J7p:M5Qe?])PGiV&Uk.D[aU
%;[L$TVVCO7]%(8%d-V;h4-6IaUKXc6g7@ipaBh4uStOsWr],3kct9%Y.Q1&%SO'#0Jq[$>1go:f15'SJ.o;QP%uRmMaBnP+C?#C!
%)3J*q=FcA*ZA_>8N`Ys='B(Z]GZns#(&NNkD6//'B7':Ba-JMp]@SYO)lUSB>)-;r0Q+h.I?eMul^]^r>4OPYSKB[,50;*N>soJ+
%q>o3Hco-faIQ[a7.J>r=p^o^d^cClEaV58`TO'CpdJN=hV2D]#OQd#de>^lU9mfg_"&^]EYPr1IOs[qSKHEB"Mg/lFYg8-ZnbKru
%9=<NjE^69Y6Z;/ppZRch>l4c&"(;@&/@N^iI'U"@j[QpNYF99,rrm`9#mg&MrrA=:!X/G.`%U@@Ei44kfQtFoqQ/WKLSqGu`d2iD
%)oEK*V*3Hu8o(!blpk[9'G3#)S,UCg@]Q6jk*MBsHgMtX_!oj3oZDMZ3AQp=aW6rOn]A;q:M0LAL,hpug/A2)R*cU1)55ue+JBZA
%#tglo%CPWu/e(PHV&M4b\8ghi=oqJi1m7BC]>BB"%dclh4_4R`]u;WnmGUY*G@IZZ*#FpFi8[#X2$chg[9tq'l(#^@rM^Y(E$&ui
%4*L@j;mS<>=I*:IV*q<>D\c4>8%BmQX`40_;tDkD63YlAeIiiAq-M1@m@2)_C[YPUo7Q.`%R9/WJN6<XKo#PEV_ZoVGQ.BL<j:CD
%5-!l1>O7*m/Y>ep$gqkZ3BLlbC\@2p*tR!5>sIi5i_?`)Q<U?>O<ML2p^d)L%oDs[>1$`CMVW4@hZ9!>Dq3QKc!Kg='(,*cig2;&
%_`"`cc?$Vpq_ucGj\DTKgJ9/Drds6VUiNO1'pZ$9]c/Nl)N@N?m")?<9g!n[)@@L!K6E%e`)dC@3kkW7a@`jAIqjsg_B3Zlh*o6P
%D9G\PRijBaX%&(d,4q2b0=P0PZ)[V3\3TeSpi,)VNQ^])2"+r@f)&>HE>>0$qZkiTJL<7fi\&0qF.8bPpRQPjbkY<:UIID6DWl0A
%@!1?UVHU$mW&-Qk>!$8\^>mpSIQmd.H.\a.);35qfCAC>96E'n?aSdOKQt_\pWYbma(kg@KXK`nP<t`G*uXp4Cs\%S[Vk.u1Z>p:
%qq8>$RJDoO0=7`<5uEZIf#K=?V:S1;^=@/;rf(A7XAlrPpm#FmHF0\JoGGA^=K=A/ou=n>E1:1Ki?Ob$\_@![3jH55f,AZ!^)XX]
%q0p[c"^.`8)DsK.(:gB0QKYj/dXE.Pr+ajf*C4&EdAW4H(%ORRT9Ir?\@Ph1&$0gu;Yhu.m/h1;T?Mor&m?](gou+s0dhsj<%&X8
%2]]IokL'tBi"Q(`XijT@R;DA#j3%!U&*>r6lCiXie$5UmX[k8,8%n<hF*0Uq2:`IE[,1Y:o0_Q'S%ndmCUT!W*4Ku,]X4CK7Det]
%f<BVS1&,:>O@&kiTPgU\)qA>'Zn&RgmEh`ej.0BL&Ua$tO+:FE>355,N%2>unGTO#ka;oiZhGsk_%6>2S+(E6N0$SYZl!K(mSjDJ
%[4&N!CXK23Ku"8Zmi1UZ/!,:dL=XCg)r!Om/(JP1Rh6SdL9O+=^s5Fc)g3p(]V.n]C=[eL.T6-&US^g/7?nrPe8F%H\[.>9EmjKI
%VN(FRXsUNkgg4tW1%D4]BbD?p2mO',N%mtenlnUN8P%mJ\36($(sS@S1?#!M8N:"k.>OPX$b5jGl'cOSA7'ZTNJ=(-s"6>u)d;TX
%Xg51%5G#Ubo&Z6EE1+>OC7F'^rH6TGCV9i?7-jLRSdB?$gN?u@)d_PQ5O>aMgCOgL\`"o94J^M/3A8R?U"l1Uk3e8^A449lLihH#
%C?dX^^$XNV+Dcb'">LXN7WS\#BIE`i]indPZ:fsWhFbLAeQkh?f(NU#f#g98g:]27drOb"\U9e2HhI=9mI0K%e_iGP]t)bjrV,3E
%dCI;61cdiW&WP*(9Ydm8]pChYIJ?$o-7Y27j)#Gn9QorA+m%KB2;lC%1&RGY2q,n6-Eh+Z)&q5Mo=MIlpb4Kk?ZV:im2c,96=83-
%]<Zup&%Q]=]"Eu/bOd[R*a9Z[0KXi<YGU*MQPt7?>JmWJQtCCdO]m8go@Rg;A97&/^k,>i#M;2+WV6`mpm%.[B+lYN4nu6pd]`I?
%[JP\ccg^70mW&2B(-`MlO(YB0F/_f>GrHeG:"dd"K7'P>\+[GF<h8DYWF/E\=0mNY_V3b3\'dp-8#a@0D^qAPcO7P_ls6bN\U9UC
%c"p*cG6c\^@?'bj_=0jDGUaJW(>3P??XtO&QArq+oAoZ'V`U*uUf';I-WO9]\e_j?@X@:L\K:KZ!o<B26tdk)=\Y*!rq2_2TjK1Z
%J=Y<qi]@'(5jT!M*SBZ$mQJ?ml[IlNAL,[^"8oHQ10h%N9TqY(h/KLNK7pe'^:HL"SQ%MEe%)<BU_V-$T&/nqg%Et)giWF6IPZDQ
%*n.=9Q%e;R<BVA^W8Xt9aDX%Y#R-LXf=+_crA;U!k-kkdg+Aq0l>'VIn_F,8R=*a;47V*4r]jVMKC\KG0>6f?7cWh5Y+r8Og0%1A
%/gOYhqGRQ9HT9:)ogH7BgMh2b[<t$GI.6^<Zs/G]Vg2dDNNHiCA\5EoQn'$^K@K<hX9S<EM5M0'j.#CYAU=W99/i"C/)@G-8rg7-
%X')E>H/":mH?Ubc'?<0gpKfq(3f#u?dlC:[9UX_UGVV'R9"Bk:M/7&!f#jlapXdFlX"!m,1%Xk]fUTJhNId--SZ$A<7&/EC$-_/K
%7&(\_I9c#i-J7,Oh*cAQi:8H\^[02YZSQ`tM3d#O48]l;caI->GBL1CLaROj:G2XRLeJk\N_W:*/Os:Yfn8LaLmOi7%S6-^g7aL(
%0XGS37V=Xu2po1kBfeAj]97uiO!iB'L%G35ki-II-(656c:+(kl>'7lH#t#`HVQG5`VPcqCN-/Fp@RWF<%Z&VUQ5/sNOm5[/*c6X
%<cn-gH66EAdjrb>CXX(pFFAT#0Y28<p(U60b]ktX4J.UFDIO.(giR`qRQl*k7^o6U\'aT\:+Wug3(QL4MGk&5K8oY2oOqEF7up<B
%HLu<+?UiA#bHpF.i+4*Yfj;`gY92>eELPY*1FIKugpi>-(@6`gl29U!>.Nun7Ve:^^$'OLfT3aA)dC_Po$psOI@/ZG^6LA.UAY8#
%2%eXs%OPYUo_udN3]9,Uqg<ZI&^P81'8sQ'`sH7j\2%K\qb<Gi_L>YER;`[KAg^WF>IP:31W@n$AG>A+,4g2&3g%27PnVnrgPq''
%gTAAM_of]`3,'AA-I2JNKo%;^#.dMd-70d/UCS$7-;7]LfbP7o1Dlc&leG3VNneKAVE].!@M>Zqak3uUG`L&!9,FkP;md>rXXc>B
%:L!@VgFW&-X,ed==RtP73gMq]3K.gG)Yr%B`Tp^okk8,u$861QZ)cO49^L'j9Z2fY`GVdRFP;\eLtrl7-It6"4NDcsWMdjp_i<C2
%bX1H+14I"64DCn`^.d8.Zf\'-qsZMS^>"K>B!URCjHc'7SD904fTRZj]sYt?`:E'OmF(gXA8sVQ1KiJiI@bh7ljY:'rQW8[FChZ\
%dnEJC*pcV?#;`hfk!?70V>@1deEXmBqGc1ISPF#c+$WQgn#jo0SN;VgeC?teEpCC/qDM?!WN3"bLW?0h:9E<AN`M$XHKMVU4IqjW
%G,D)lYqj"?ADU!-l`"$SApRCHmnW=Y^:'mHdgKs?f>jAWl(V%Adna!@B"F8@85'O0k:UADHP_SrMq+ZI)0p[tQruFU\Xc=\[cPa,
%iFulck]VAak+Y&oRCOD%n'BM5<IC[S\,A#0InagR2OmoWMp<YahW:j0eFMt[MqalKj]='IpH_<p(0[WbZa[E_nn_m8ZT$W0)eugR
%hOU%'8QX)V9:>S&S?o]65.>Oh9?_7eAUAJgM:]o*j\FrIm]degSZAq1E14>HL25+2A`)M=M<UM^]Xl;#c#7F?fD."6Z9!Ith(Hu[
%[B'&ni&KQ<^Xhjkk54P$S+tdodp64gm>(JZejLsYI5G^/K8"+dI^+CUN>Esg;t63&2\GLSS2`4I_X'W@]ccn##7ISjm@/f704/'G
%/GET]=*I0c6M]$O/Mp,((Q/s/_X$4@e9ZMi=^FcRV@MH8(3^_*p>WW2CFqa,?L0>Z-;L-K#>`r@,+cO%:T3MU,E[BAi&$;Ho@]&?
%q;1CIU:>QYQ"]Nk)G:`*f':]Ca[p3gXi0S&b[Bacl#=1O/R>"9gb/[ig.Q?SpEa<m2RR:%B<bNJ__1)2Sc2L13.K(W(o:`c2Hhf>
%3OM#^#Lf(&_;(3aFuoA6DAS:\o;q<bZXd\%Ao$_r>YMi];aRS1`5R$af+>Q^q^ZYHT@ajClDZ#bp0oi/>kYO9.67-9AaIGnlc;Zd
%=EiV4dX'SnEok6YT`NW`V1'aDf2eGV\T8LXOI,R&I9F7Pm)bhVfsB_Bo6oB*E$jqr9P2F2><8:\bDT/NrO+EKW;68]L2tPZ/X9*b
%SZ9QKl%:HCAfL$[]:*p*Dl%Ke\OmnpgueS'V/s@'?Ca]t4n&"mBPdAQ0AP*[XcC#_8PAf(IHA8Hmj;DSfO7[&U:P^4V5MX$hJqt/
%eU+AmK&jPE$d8/7X5i='r'V7Kf>ctD<V<o/>VE0i@@EJ'h*u`[AiB62g$DCNV3&CF>H(lobcLGp`l4r4)m`V0R@!d8d;sS[[HQJm
%XhN>g+4h8eXtjeYo9HkoKAprtmGWG5GHJ2]>O)Zd]A<.fD!>j9@!@'HrS`&E=^\pAmn@XN/nSEKedo?9)i'utUQ&`3+hQ.h'YWSU
%iT=#nj]F=\e(L^6ZI4-fUn[U-Y:6Ms;buL)=&5fRVi+aDAZ#6mSlpJi8UJL1ApUprFOU!KbuhR+/]V:g9]BI:b+uu4HKMTlhoXA?
%S*/JHb<[H?*$4aX4,8Y\p?pp#Q0g^%TB;H:fB]uS4$T&n]8`\.p%d`MIcfXdQX<mAp@8I=f<]khYi"2o0$gY:g5GCtk4[R2::#4)
%<SlV\MpHOT$u\)2Ps+EHDI#Hhf!h+>NMl/t_X@8DC2WHNqs:2Mfm`HL]/t'9ENlcUNQ$*:$dX#Ycf`jOh:]]8hX9+jrV>kQ[HN24
%XS;I$h<rhMg4R1&\9k,0WVO6jo:)*F3AYuq^Ks]Kp'YMUZ2]tnM&sU+Vrr\sb2"%BfWg']k3?gW0X76W3R$>!ip^PhY]0B'H_!/0
%cc+Pap;ZLXkb3L`5E=UN#01Vq4`Pl5btc)3a0iFG4.0A81/9a/(['l7?.q8P*h;Vf/legq:,eM78uME=F.GX>i\k+^$QH.#UZL1H
%_Ge3M3h%dpa3N*l]?=j=Vodu*DIMZ"gqI,OchF'`pWmX(\X/5boVmLX/lGKQZ\rUCC>tsl>L-TTXh0qC_t`T@jjWOEq'uA'l!.fg
%c:V/^2o<7g(@/Bojla=:lb^MZqmr2bgUf1U^%n.'lfnDGEaN"bSQdU7D_k>bleC/lBDjH/Q^EMAmT'g`96Y$hVgEXT6Gp@#72<F!
%N*b-(ld#F]6fRG`pTQer3Y1>qkP4)-g`ARi>3>/2rCt%3SD5aQ(,qE>(WG_$d:mU)I<8^t3B9,MSQF*t9&9<k8_H8jT>NMIe"1h`
%DXVHZ.r+&-V/fg!\s;FRc!49:(j>Rcm5eNiA6)H?f%+'9G'J!eW4gcFerqD]mAIkNl%c1g?9A""*Of(@O-Z6tc]-Oo[k;U^<pI_<
%b;]+F_&bY70C#LKrGm3'Dn^=b[b"j!ksje-4I^@tHS:q!@l8Js2Qd6r[5i6[>]1rj:RfUUOl'ltb^)(Igl-O5.PDZTm0+lbDsqLF
%([^D6qJ&M;LU#.Pl,.#/*KTX(1iMgB])?fW?(C+JX[KRd9\c1_+6K-=hV;)TqnMI70`$FC2G7\.a)`T*`F#YBK1<W4BiJ#@R>;sp
%EnW!d/tQL5Cq'3*#:KP'htPm?^s<P1<r';^4_g$!kSS)^=tV^^0NP+(J,Xg,h5FD'_S*[!QeE3E#SZl\<?"HYDQWbDL<9G#j`bF1
%fc.RN:M10kh+6bgO[$"(I$@Jo;BBE@&#]A8Wrf*m.^P0B&8W;U=8[ALM/E4O+^ZLEr$<&g`D5U.QF$WQUmE-oH2(nNe2B;=o7OKa
%Z$P`:P.'7+?gRG=Who<5oiFA+<-YS>Wf^c")X0If,J"!nkuIV*A%riUosre6oSU^cO^]hme=>R9K;L(h;6bm@nls%?T&=^,,')80
%J`1O.qi)$^>C-qG1n\Wr'rb7!oI'lJ"qUQ`%iVU[\6gN"8.-#s3#J:lqiCC(3)I.(WRKP#@\cl^I_XjP@%^Al?KM@O]g;H3(VJSH
%d`I7&?p(ce&,9f<X)?OD$``qFK@VP:&2ita#Q%a,,F?%8c?I=#7S%b:Wb$TImu5O0K3nBT`D<L0qcI)&nM8POb2;s<$XXtKnXCR7
%T;pWja*9db>3OP,i>$iI0CW37[p/7jF19u,Aq;L\)>;n&`"*4hJ*ai4Vt//X(@]gnX06@I.^,U*nCq$b%g'u=RU1f^F"@Tb@YYJN
%f7Q,Cr3.:V`l/JsgK85cQ.j!#Z\tMp)YW!h[sX/N3^Pm]nRjdC^(qAO*^3/a:3:;R!/^AP4ik3aZK*+!q>CEG]Ke[cB@](7IP>fJ
%kA0^$L:*Okr-d:=ZWm@p$c`.&nar>R[_aI`)=G[>a,']nq!U/a#=q!uH/U,-IO?7FCP$I7^uH)[I_<Ff$A)Z*U_RdVarl`)B`1iH
%nL5.$>_V,WXq)$V"\,(Y-0.@;JL^]-%35OVqFP8l%pY:oK/tg4Ys0VXkT,YdWA;W]mtgPT0GV$]njcp_6ot?u;!Ub*ImBp0b2%6?
%f\\4Y<rMTblZZDt^/@+MerTS!V'!dB'gd,HI^$"M>[F[B/NaQ4V,jkXpk^L_[_P`k$N"&8>/6dZFAM<8n]A9so;UMtRn=;uG]t)#
%e((!!8iTtceNZ>Cr#mOR'Y1EpJDL2=(.(mE[r,urc:<;4(kIBeN2Xn&kL#@,s"/$m4unB^mM9,^O*pmLmp]BqLEG3^B7b[*-cKr5
%EB&@[?bKR2=XdZ0lr__lMs4brZh_93e;E\TUC4CaR<gU8RoF$)3>GanSo(Y!bDkVsgR8"NG>NJR3O/$JR8V$5UR-DN4tRV8ad)bA
%HuaA'dnBCX`=bk.>hP$YrDl#Yo[DC]??0%H:G_[Ool;sQR!F!:f3[PG-?QQhWFb7=Z_)ZV9?ZY?KiGClf1TtQp7LC2.Q5@\jlAl,
%V(m#ldq!76:?f[D-69;PS0-YDV@&a0q<,)=gF_;/='tQCalQj'):'p/%J$ipPo<=`prYf&0s\4!$O:I4Qclf/F$K9_>alrTH(<0G
%c+UUIlGh$O%g7gYAaZ2Yg[JqR%I9S4oV24<R6"W4[<N:M`QA1XnQohfj]pJ&T$9C@LR$E>PVjIW+"TN`U%9h-W=J(BcZ`jE/*1gA
%'gL7/\_>mr:Mh"C7Aj@^HsEi3mo7_pWK!=bDZ"[>g,kjS_[Xg9=*C1?5d"/5mujYNH);HdgL"*(R^[)*OeV0I)%9Znme"d*F3[J0
%\Zh%8E]pa."<s?4CU8p,eTA\hC@WFKp84"@mFBiXDS`Za<gqjY;6b6ke%UmHSl]fq74ECMj0#kg?q]g#5)*UY;&AN-KrA0N^WrfI
%c(O6b4i=pjm:VcCX4-lXr47g8./`%q7\M._NDZ.sQLlK;SmU$?<\JL*gci'+HfWSmQ.Q9N^,4j8la[1]h0<,P"'r"1Y#J^;mYRCK
%MIF08[-^WkXjT;I'(1KI0PB!4YZ4[9b`8R,%tni%ND"Dr?HT66p*H<4/a^:6MT)"*ZmqUeYARnnel.:cE^+\'=l)phKS:t=Epg)>
%d&D&V]6rBN"B]-q*T>THfAUC\,LP?<M0@FpekU9$67IjtS;XSk<\Bb33&40kHSFLCBmI7Q:Nj@rB6&:t@Y:W?g@_TM$I1<Cdr"Q&
%*1N^-&#7uO'b_C=_U:o$D(qI*2U&P5@kY`l9r#u9XfG>]\PhWeU^B3^_0^!Y;)<lOTDFo1.)PK/ML8(H;raepS9WT^luZkmo;k]i
%F!Y==5$RDt(Q@Y,g.JR^`^kW?^!5'EN_)@B](hX_Oki`B[pPZ"ecJNFp[kSuRl\2Xn)lL7*S2uh99jn%d_$buq>hTpdg`^.0cXHk
%pXZLr>D:_`fHTf1KY4B-AiF(pW\E&p.NOI%C<IF\pZii<=,'KYrQWVUan+LBnmDkR/).a\/Q;,g'rfKtRj0X(gYNk:CSeU)h#s-0
%R6r=UO0@qUn+a4Qh1AD.i7FsAq9An+V3sAmgrV2!f4OV:5](++V$d+eVrW,3]9ppTa-SL)C>?nd"rQUc(>9!;5HU5)Ja`ap=+5Re
%p1GL6BbX]E:Z'C_JZ`7I8Y%\!oAOl5`@Xo?1X\:/Skl/*Y>/;(FrG+;^VN:Ci(P5)p>-/=L^BKAcIPlLpEM$D,bKRRMa#TZ5QS?o
%+Bir&lrTe_YefX]jU$(%#ID"pc7KaQCOjLd$P;jOanY_$ZKPA<KVj3'_9GER8Kk^X]="#5c.R11/+)J5^;]IIqoPgZA&h+_]l&RV
%lF7f+H'pcJ/NH=*q^6"?r[_VT7ji@eDXou$DJ&U*ph:a.h-;b9V<&/-@5bG(^p'Icg52:3%)8Z:6Y<8EI9!1liY[/NU[Gr,)2+i3
%W7:*AhQ[m'-fX*rPJ\`JW1gIZ6F+F4Bl%oG*/LN/#tN$,#0U?aHE9pV>g<q`M&(ZSJUp_3(u-S/)4-$_.NiP]7N5)i@uOn((]Da_
%o[QGM%XC*m;!PE>^X>S0L=kS,\2m)ilY5H?5f+tD1mhl4]UL&Jf>"-MO,5S\$(,=`(u,Gf2&r,E6DtgAa;XG]pm$R@VVW:F!__c&
%"C;%`n\-7V0:G'.qr1b6?T"a0a<!S(%;`ZnltaZqj.*/oo-qE)GcrAY5"=+X]>hjG+5q?9A7:o,NGE#c%FDCC3l]2'E\bPHo]t/2
%5&H#U(uh"sd]O+KQPq)(;BL_=9!H7/5`IIulJ:M-QSe,+d2cE/QV9bK7i"?p#(s+/U^_$ZJW0R_AgEgYUoahWcmhhUCX*sK-RM-`
%=%Af/C7rjZ/8Y[+<%E)hHeJXYF13r;5>m4,h,Z^RR]gt[@;>B7csk>$ON0+9Sm'B'oF(94(#p\\c^eE\q6k-[1?;qu4GE;Z.bkLO
%)WM$FC;;=>6c#8V5sVcG<\rYIcJ<jdDE06!Hhip!3k7UT_W[<F'L';hDL9ECEf1;_RGH\DPMp6(&(T0$lgu`Ng>?f1id4>)UVA_X
%8T1Wh`uHIJ_siUtfY/fIV%,<G,P#ZXf@:kW%>:_ESW3%pjFK9@jg1/8F1ZLVh<E3LIPa=4hR_H:m9Ud-&$=H,2YFZ7403V5:Um=N
%@*3C$6"lDU3jeZCXrs(K%kV`Wa#Uc4mUg7T^!ihSd1*V8\[Mu/j-H(Bq)V^U1fT'@_U6en;/pXsLgR"ho@]IgLJ7Y8/ZmNk;bu?J
%cC9?Mogd%_WO-YfMaOsFHaou5]AZT-d!E)!XM@3J#Dn*+m*jtL#1%7)XZqC>G;te3NaH@`lK`6/RU2bf)@9DMJbp,V@C1tS/PLqp
%/Kt5>C;hmMYfFD[Gr2mkcXMq!F_:BA*#rfQ0^op6#G\OiBW9j(FZ0D,Wl4Li&*mPFo?+$ue=I>.fTc9niuU_RDT?3'c"T1filC(q
%m4>sX>!&>kF-R`',)*@:&j03(pT)cHT?3F`^V?8!j`@Q?UR:V@Y0R0M$^44BY#F338KT$#@5h94".]]7>YV&T%o1IBft!"?_iX'9
%dt[HT-lj1P];<e,OrdCoM!J-<:$270\f>)7I!G/VlRi3K9^JW`pZ(3,+4Z+_]8Tm\qt-pkM[k4B&dH?rV:dQLVAp_qYD7B8$jo4d
%rNDer4&?/j+mpV9iu@1#2h-R6P?ceSRXbt@3BB4r@Hqs@ncH1$l\ab+e0@!c&_:P!U5Fn2UE<=1D*7Os6tu*,<%L^a?\C-@^"buq
%/1"BCAeLf5R]m_E/%*4@9<)r3]Rh#e)b0fbBu+hu('@i*T'F+==sMq-IE"3Xd'V_hEHni4MQo%%K`##:%A?\KfoiG.IOiF3Q(SsY
%+[bGUNZ'GDXF2\[lW8<%mt^g,2BXjE?:^%(HOnGU;P_RKg)4E7-^@-3dLk-5Jssci1-1m1/@a>XCY,mcQRbWLV)-YukN`!jU9ph"
%\!^ONlL\Q17a!I5c,4Z\CEr8gJP7-qXD:)q8M:mP=1++r)fd#UPa[QE\]Nrk\,&^6X7VW]^<D@f@f=Op^/r061g9G"Ke'Q"K88g(
%DJIB^38Z@k%Bij=e^!+pq%tTi-Y!Dqg"jOE`,L1g]WkN<bI93oHSAWIfifPW$0'`,H[h-_PGt$Vq5?#,k!eNNk0qg1BNK,hkq*pG
%V[@cBPXfZ^rUO$&PMJZGO?,F*\m)>p]/?8X`B;QqjRoa*>$D'Bfp`5Ujn:8*Yk#F`5-%e8CBC?)U3OSR3rB$C2+Y9Sc;VU83a^5f
%+>`k.KupgCr+t,W)uIl2m;7d?(kKfJ73=(X)bm(39_3S4es?oNOt.R!I(q\tNbAMh*V[',s(NuuZ<XAnhVL3%?Ha>Eoh7PJ<NiAg
%[V2NWDTjuV_HT16I!FEhU4nlW4'nZH``i3/#)"A9T/nDHhqg.[XI#oimIudeq5L+B:m[Z>K?X-\i&3(BhDhS/nkF;>HubI;(S^qi
%qY.6C(_bph5J+8,kAB&;qq=?eKM2BXmAcH-a]'kh'YBRSE[QtM-`K9o*/`Q<*3E7Y,OaHic:q%s+Hs"k8k[d,;7E(IjqagA:\,+%
%ku65Cr&/d!dP"PQni]T(qmfUN*\VRcn&MQ"<1tud*FY@qm9n^4S^c*#Z,\?Is*FPKQYaY3RFE8PNlc.^%d()*"Zo72np8"$<3D='
%]TX^=5,OgRc*["T'=8-9N2>YP>76/#D1agME5(k2>[?f+R4-m)):K[d;,+gNoQSaSC>s&Fm8hO1BWp.i)]<3FED+cnDBD,gP&#gV
%:aOk0+*Zq_,"T!SK*^Jj)ih1>]$Z0.gso7d[<lIc6F3i^*`TG1VRJ6WnUS$lK$ll2I2Zj1<lsaLB0.BE61'<TDu?:,P-'!kNGN=C
%53;/pG$":77VdTrW+/MR/:[o?jb(e*D0C,IFbtN+EI>?bc^D2or,V(5_Pc\<//WuUP$6&,f$eB6@qW9/NN%-%W,XX!fXX(0`L=m9
%DGOZ7CJ9ml(C!B2q4uDf!5c3;q<7a.$$#ANG4Gc,OS&nM\D`1^[H;,b2un(.cFmTa8ktA2n2)1eo!@)qPkTQP&Be^Ip.t9Y*=7&S
%UAC+]darLfPhJ3N:IDmT$@sYh1mU_L^THS^@UeccBs?.[-75.!TiKBa05RoFPakI?j^rk944G_A351@._DMo+,^AkEo4^todUK@[
%pi$X_AuC63okpf.HoN2XXhGENir1&Kr)*NH]_r:>&<L3B><L`Sh4333F+J%3#GK09^&/nT5]W%c'.S-f&$;#lfu2k@C5@/eeNu>^
%5I[<$4-EMRBd=WsZWsJUj`=_J;`eXN]nUSC)^<&&0JSOXhfDuRP]nUbr9WjK(T'$om."p$IqYWQ9:Zt+PX8),V4/.d9?;ZVDKXe;
%nJp7%Rc_Ij/NPE&LI\>m_3oOd@-hcS]34TR*D8>"M%,`"gn4.$pBhCs=#&*ffrsb]5,PmZBXhAqWLPKH[hc_m=.$_3b7u,.-dp97
%FNA&!S/1Ze2@_?jh"B#SJ?dKg!r-Z:BOGQc5fg)'2fQgH%g!tMb4MMlF.&XAFK0%884+d.!I6)8V^BYk(Y!.Cf1<Zh*$qrGQ/d=:
%B6H1op!di]4J`t8-@&:qrq(B`T6^acWuq,EHQP8Wg;E<t.`d#GWT3dZYaOUM)-5$EK>+U=Zai+D(B/3eD(-9e&+3)Cr8YJ(,,\R0
%D>lT?:i"U'a;U_i1FAuXf,Lq/Qa>B!F=3s^]D]/86R/im3_fR%i<^p\Rs11ej/6!VMN?6+RVQ'a,fjFecHNXYo3unmj_jegGRa`o
%^$XfjZ8ZtfOknj(HcoGkmjEiXj+uVjK%[;L5a0tUWTDReoM<)/?Orm7Xf_Lgs)'Q`S>d8n.sd*674T<ADE%]5SQpPc@D[`Cc"je-
%Rk#4O(YL0_\j!"5![[!pYJ>+`b0jhB&NT@Q"-t\ucSqnCq:&9IZb507Zq%HZ9"gYL8[b-<^1QQo94_bdb#NN7[I%4\d\J4f+T&'^
%ZrKQp')Kj"BeW$1dBuntgfhj5#:V-@*ePCeZ^B"H;Ysj!$ZkRaQ.8=j[Yt[k"Np.S:oFd5K<St;K-!gamC>?NZcQ45ZVMapW>cO\
%)UfUQB;q*ghP48(RsPSLeqiJ\bj&MPi@Z.)^7mV]kn:_G)W0*XC$T^/45&%no`W3NI;AH>U%:e^1D$<WYTFEIB,9)aSM0,8WdDCd
%!=mK]..#d!1p&2tWJ]`h5'#2R3]j>mJ]OE7jJU4)Loue7(:$$LRM"BY2t!'ur2l8/$^%(8F-aiN%iQ[jjeo;S>1m*V/l%8#%hmi(
%o;>m<.MjuJM9^NapNk+*Z2bppR)tTu'DLqRQ<!FUKq4M,_nu6?phk\7$G#kt.3BSo1%Y%-T>;GW40n'XJ<&>W[GQ:'G\#khHWRt>
%NKh/4WaL+MGeQC1_+:eY%)27\IV*XN^XWbP-A\<I-55('Gg$Xnh<7Ysb,'e!*D<mR)]IM%Qq$@*THgp,Os@__Ot69bK2a#S4@!F\
%JO"TsZ']:(WqkW=GSFpO[?=e*4%hZ;m=Lb>Hb'lX(H?7WQi,5rFW=CH&F6C$k7K@)7o/pt*d((CVnM\G:\JI%MNcoG72H`OKoZF6
%S!eTp#&j1riq)9@X>.9<,*Qq81\2rH%*](a#0oi1Qu8HMXjLp.47,r,OKQLn_Dgn7)en>.(<;n\roFU0o1rf/)_,qREcu^'LsPeR
%6[@GADYsgfi?:BEkD6%;a.?Vn.COh`B`;))LKnc22L><i\NOVSI<JIHm$52jmb?A=J@8[c&U_3*put!n+"Ug]T>>;Ta54'^Kl:\E
%%K/*TC0<Thr6Kk[&Td#-i/SViQTGQo?cHk+FKb>_J':gVLcH:)CCr="h>Tq5a#_u#!ckgD"172R(_>!k/9hji0(]2%2P.cMQbWOk
%*s;F[8?WmHY![,g`j\Og/(e]CR/B-^Ks-la%jo$jS_bkmmfabXOgYk7RJcV7r3c^"?3'\7`&&\8OdeEW;Y_^<#S*P)$=?Nr^kRP8
%\>G3A2:.Lq#TSOXVWC69HP3:$>qKWU@h"3d@'l%fTkB?^ODkW-,eYAUPfe+4Fl\jfkdB<VoE;i@gTWeh>J4`$IQ9=E8(k7rbD%YE
%7W6cJ/=6[@fOUqbCe$k_WDAiP'!>^M#+<@##UDPMO[',D*LCA04(1+/Ki!mC_QY8NjX!%,FV09;0no!t(.?QQBlbd<ckV+&eZrSd
%d`'bHDSct#>6o74':7_$KP<e@bAn64[;e/B?eQ"FLOH!i85nJ^>Vk?s*7BE<>1?:m>XLL`bD*DD#*!4@/E$s$C7>N*g:0'XkTDu<
%Jfn/Wm1%^enO2F?<+UjuQ@hDH80PkN$3>o*%[E@lp^VY&=tZJn;GP)M*#\i3@_lO4?c'budh<!(R)j%lfW#)`$;`Y^.f^P=1EhH>
%3)n8VF(%@P67LYVOI^>Bc_J`5Hm?)_0kPtJY\SrGi;LJ!J5Z_!V/%h1'Y`e$qC8-YA'@Qtb/Q;cYW5oB#RCgU3?mF-9I7J2C_s]E
%<^PN#@aYPf8;ljdRj`lLbdHBL%oC5)"BIE$6*D5/Q7GM!V*jgT>iCf-S,.j$`5_GPEa*dOV>(.!CbdXnJ1rT,i-Si='*b`go:kE8
%`*j_$c^Ymk2M`9V+tt.Rm@5$/;1c=1[A@IA__F7lbV:ZB621Y,OoU>DW>i]LTs"SS$6aXp+V>GI^9ue*[6Q1c`%VG;XTlY"8]m9-
%q`Ak9lP%+80dE0rWRkriP*+[sSmW\6fSo/OOPY?%r9[(B`PlH/6*2:6JSZ!fe+JgL/1gk/9Yq3',r3R`6VUOh"GQ5FeD"qIRp!Vu
%4;LN;1,MN'6h?*h@49Uf*L[k-/M3eb^fVAO$r:#P1rgA_`c)rR=^,"$A.W9%6GI:<()2tbEL!^qOH$1l/B/i6!%<rN,Lp8X`%VH0
%(-t&00gYm-9O`>8]S9$[8KtG"q3hK/DqVpI%M9]s!^(8pb/X)_]j_@nKHTM>6K?A\AE5m"I9g>0Pg-!/948YiOVjb,;ab+<U5*as
%+R&-s@Y%fE,^c`praFdWZ(Oq^R"D$-@Oq\qD_W&[SjM3-R@^]],s/3+P`8::JKAbIjFFC'Fp6D"hO2D,&3a]KJ9ht[G1[*TN(Zdb
%+B+%&"*iR1e\sT)PA#e8Sen&mg0"D<J`;>*S;ei8?jO!!(2N$9Ku#33h?V9n=fbbkB5?1BD67SVk5du%7H-m)Eq+:9"LWsB;F@Zo
%\tQJ2/$+3mpqX2O?<tb&g^JuT]K0!ECi`9\LiJue])q:Xb^Z:K*CgZd>iBI4dm6h5C:hX=VN)'SL=sFdaC;]90Mc[U:M>iDgL1X2
%)ZWIK3m9mRk\.Bm^qQe=,D`Y@cJW4eaE/Dc2Z^dtVo9qnNrhDtA9S&b#Xd?A5`6ZYJ<S0j.0)j/8G1^Mg_otHK!Kn;NpR0B`k[6^
%D>Kor3t3?K!)*Yp=%f,#&cd6Lj(Y1)odf)Pdr4C^_gsoXcds5r"YgabTk.mc#e&a,+?6G([#dfiB\%&VJc;&)$CJ**!c^Apermt?
%J6YmE^Hp=h=!0;62!kN=iR8iJ2a^\[+Zn<pU-.=F]:.&3)k*A\&^)o]Ooq189P<jJR4QM==\\hAoBBo"L7Z;i:oXQW@g1G$U%d`C
%;o/@?5oe[QY>D+Id^EdED^n-c99X"XUkq3dr>UTZT/@kY-fqs"MX2[?UaNR!1!o"@/d-&#eWgR^KXV=5@JQo4Hl\9</VeQ/Ti(bn
%LFFL6Y:+s5W?K7o";*tE"`I4i^k-jG]-J@`]4m;#\08)c#"`26#'oQBJ6iZj"KiLaNH?110g)R4<XL[L.pU3fg<sRp!-Uj-9/^(A
%=E"`mb+XP$L05`>#%hhNaWSt"b1A!f4,mWs>f1"\&iR:s!0V"-;-#7,C*R:"Q**Uq(51Ld"KPX[&.0s2OaZ(ZT(YjnS['OP#jC3n
%$%YuY;$N%I"@beS4bXB:&.35cN\qf.r6[t]%5c;$NgkR2^tGqo7YEVNhZP>18Ql/IVI:)V@W]NR[)j8rd;')Ab,h.=LE2tZ+cL4S
%>'%4%eCN1@eV(5URS#uZ'iG'+HqWdDN8NJF=F1b/dc9G6L*+nXcnL6Z&HG8"U](+P(8h1'ar+na+E))#OXW/OTWPQQ?!!s3I'mhE
%dN&B,@X-Uo:m;g^WBkhbi7V<Z%08l^.2ZlK:0u-A!)jn@@M\U\a9jpKkUZL;!%`^o%,;`@cQ=9:3'[iE[aF/fd:`If@Udg9`&5VV
%!_!:iXe;3f`YSW\FF4*7@nCmkApL7sOsgm[5YI4W"*MJs1alXK4XmB4cbp=s&ZPm\l:_7^Pd)Bn@55h/5UM#'?R\^tZ5B1.iXK-$
%"PG\Y"9q=l(5!m4DQTHP?rIIkP\#uKnAs1UH:Dfk@onJZI>&#L;-2Mg3*'r,=<rJ0TUDW>>;QXE]''i.TTsIRhZ;6U=96N"ci^^B
%ah))i0G(Z@l3/>38olAiKZ\N*5g=SU-j;]6VBLB:k*_)m/3B(_dbQ%1FkM#nSnkZ2kHM=gL[Ed5XGYh=(Y]n#O!AheW@qHc1a,m"
%&o9QKMj_LK7uQnqiO?UGNosV<kt@D%pS3F:+GaMi*mKqP-7_>)4O?pRiJ's[nqN''#W^N[;+H`8gNA#R*st:8ZS9IS^L6Cp+Nr<;
%*"hhmJJ%Yo#0%GbEa?LJ@M#*fbDf7*TF@QV)P6ZX^nu.8$A#?%8/\N%,UQVM,s=p(P'c7N>1Y1Wk>;U+C>P&$P([jD`'N/n(2)#M
%0u"pg^_O6(ChbWBF'->JL*(l4P+=2h&s\!4"U^mqE27#G!7X0N9+E.KC0N;Eg*X)Q-5sQBe+VfY_c5@g(9G-p2Hr5XPQn,_ED/)*
%kKj/'&,<mUR@T7@?MmgV6\*!hUmhPG)`0*W6kQH?#I5o)^dTA`_uCq+a<Y90R(?205[qCMR5f"r$=Zg<Xso/X0Gk'CiXt';K2O0m
%_0@/cnCU`qE""i?65oY2n-Rla!0QiZ&7`M:Uo-anJYR`gi`T-PRH31,kc9:8Z]7tqToEN>+D"C5KHO^74>0)/MO6e.Ooa,=jC;CC
%d!Z,4^s.Hl6J@jcA%EWp,#m<@J[7qf$>^+G;V2n1mnh44$N*fK0LU<4jZo2%\;)MIo)M5R%d&MNFijk1!`L^<J9#*OOm)_K2iA-!
%9E#UeCL(0=j`DqJ;IC20+G[<Fm$AtjpJj+K',CR8"1mt(B>I8`;?]AUfe3=*%nBb4pQV%:dAVU=&#TEhaKA-c(YH?[JdF)Hhh?bK
%;[?h=:-V!G%,-_n*/P"30T@4$,9L*`n'8HXnB'&#Z5?408ruqEWsJtj0R;^],l94TT.W5;XUW-+lqS\KROeKVU"$]i8-`o3+9Kt&
%_IktJ&S6L[1D7^S/egtihBD\V(+O<g!>@%+%>Qqt#tRQX!Tbi=0Ob;X18$>#lZ#9.'b.IW?l]Hh!=BEL@1M(bf4Ie\Tb&%HVLq9d
%"_)oPd2ZIK7)smEY"<>S!0O`UI3je/@DT`I].b3urXt,\9)4&<!>-ag)-C"[#uB9X@)db2daa/JrL;^j84Ct%f5%+8'[dd[M_U9o
%kn9#-(m<+M5go_El3$ln[,fnV4+ShW5meAiYecPZ_UK^j.o@Wub0ii)"M#onQqakDaH;u85Ua0!QsVb%_[rKa";]'4VB^(3K7j@a
%RHq+8-QkL0%(3X:,&`c4NeU@9bn/XuC-._^NKuC9bH")&MTiunDdi8i(^*(WKQ_phS9[o'2%V%)L.@8nL$g5Z"c(=a<g`gJ]I?0-
%:<0J>^9Fpr+uohiiB;Y5In>V"7Ea^.ftnH2A,-0R_'nUQ!+d?jKd\5I+E60TUm$;4E.tm9XSWp%VN_+u9b!@/%^QF3'V*eK.=c+t
%D<X;Y#]9n4al@OkgFL&eHIs;jg#kZI%i7O!>_D?cUqt]u7=sJG`33f/BeZ<!C7SsOWa^uoX'qi@TDHWE#dQG_C6=H1O+=<8]G1^#
%/1)j63DQY!1V&r]PpuBt*C5+9Kulol0K'C8&2kY5T.$qRCga&WGq"M;+N9'JS7E<`h:Emf&SUYCS!N6*Ng<ej7[8Ln<B`qlRL?Bt
%87VgqD'G]+nB=QnRoqG<1@bI'[H0g\W=3W?"KL-%6U<G@;dj/rOW%E!"L5Ceq)a.DDbs\6el^ZNKf(cPJ[e7%[17&nW7Yet#frq2
%\:k9Y\tXciH9>8l$+)E]lKO!NMu,!T`jfLBZ-'O0.B=;!3EhHZBCnKI1s/<(OPL?9R)3`qp=sUsb4FEtiO]t*P7=0Y?[ta?6irH#
%[6F_$\k+$ZV\qHBTJWq+78UlWQs"5sH;*$4MisE8R<j7:8ck/+V0$(n(+^=7`]=O&'K:&`Km=jBJRg!baj%U@!')YEo>MJ("9tTT
%(45r\NLHsmi09VCLS?'UbQ2HLU*GEbU_qML<LRB]cB+E[[2Hk19$6m]*S9=`g&XY*fL/Yp)T?6R"Z*MhR'A<&L.$Ml0gfZ`6hI.'
%#"#H!e:RX`QJcICkZpuR,81G!K$8eo$51_(don(;/LQ?NOLIqIWPhauH="&#Z_E_im<?jCe=>`Cbf<PcgfTDSaH@\P_SsS$Ep"7"
%-.X$Vo`>BL`Y=C9TtcEg^b@3AJot]Hak5gATbTk[_U=R*5cue`KEAusanjLVNNBCY9]C,d[q(F:(h.6dmeAk6p@57GZP(u7r'Y_!
%=Tm!,PcWOHPKL,>3S_-qCp#P$WW\%$hR%G4:bs5G:h+R4)YL)jb`s=FR$&Kj"XE:FT3Ih56;(gNKmgF7XkM.bi=([<S:V^TUa?iS
%d57V6Nin\n)<:4RNMF"B',(Gj`[2W0N.u.PO?eO%DEr,8Eb,`50Zb@XLnr:-^r5+3QW+&MbiBnb&(Eir3J^W7!@J.iBbVd64BL#&
%[-7Xi8s8otU`PJZ3I7fn146"=EM`-IJj-LXC1)-T?+E(W16)n(6]`O<+U08G/:UjM0nPC@_P@t8$sXO*nYFOuiV$!8ED.FNlT;G-
%6^+0K6goXo?e,pi%Aic2/Pb5SkA$YfncMIE`(+37D`ZAZPa!-7*jaouEf@Gp^T-3]MUQOPZjO1V,X,n/*GosBMRA93PXDSgQkS(n
%5)ZZOC9i!!"H)gqm!.4m0eml;116;QN$)C]-3$gZH9bDleCl&4b3phhG!$p'n9g>EU8J&ClOK7tH*$<d64kb5[aJFj-#MPX!#On=
%!/K7oHuZ`K\k8Ii@Zq>Ai3\4KJmGI.C+J_W:%WC**Q[!,9f<5C9W>].LlbbJS*1[b^&tpq!4$]66lds/Jdg,c^I"]s%@_/0%:+)=
%BG0EA*G]&Nhuh\J+-]**;@@`p"s'6]6Qt0k)(P1S!uW2E6QqraH.^3gdn"!TgG_<V9A0r<csW5.<_>-YYR\nhRqmTg$Q1_(>LKgb
%&QS$gctFsF&p"hO/Z@bLg8LI-0[Q]J1UISpKqT^WbAj1%n@/riDC1i8C^"Xj>lgsYmRqgD!dU)LBXeoRiINl3PS-MK63%0B;*u):
%aOF&8P&b"?EL":g&,f/W<B0(&j3\a$>`,Fc>i#X!9AbSJ9[iIr-U,=WYW8J57;^6ST]VK_c\PijH]7;E+fPn/A'.h=;r#:sMa3<P
%*gfiYG^KrWHbq\P8V'7H-NGE+CrL36(fTY[@1Z%Y+["XVPL:h]an6j7j]->KkV.\`nu,NE^6Zf:!r?u@D%Ac`8g`J9,Z6T;*XqS*
%6KL[O`O0^X5f%0n^6Euo)f]/E]f3oC1]ZSjRbrt<?^E"3b_)tF=Z5Obh_"Br$n+CJjSCk=4Ot;5WZbR*'c5a*AdC+]7X@"i+8-P#
%V9HfO:.Co:?'d8.6OC[KJ+QFU8r*7XOJ\#VLHpV(&L:q4\G,Uk),M(#3%S?,SVY+TbOMooBV\Mg8rJ^u#WbJl]/9:N%b_J&C@)Pg
%XQ2V[@r[_0=r(b%['_5LcPR!.E:V$XB;?\!--hEGW^]E@=L'$pMdT5ta39u5:#f-ij$ODhH'[@7E&l=AeI24r;?c$aY+,eLP]/+.
%.V%05Y]ZHgHt;IDIK\_r/-;4gKO9R&OMm)KBZ1mcZ/G.LdpYVd@ApG*N:$=7<F*Eh@JPP=a:?ghaDJom+T&+7cB"A-r98%2p12Q\
%VWc=BUEe"Oj?G*=<a]L]jM!Zo[9W]ao*S]8m495_MSRaJWRZ`[EAqJ!"kt4^PGlR7F1Jl8-;[oWFH-+K%`W4CTsLu)?I1/^Ld&_0
%`OUH3(!@iO(K:V]-q-)F,j1PP4PEL5#?aL*n>kAbBks2Gi-?!AGChT1SA5;89X>cX7J(JOeGc4uZ+dBQ(p;57X+_E]',,MC:Ad0j
%&Pur&#_<8&4Iq2Fllnk&-CtRP\_(C"Ee4>FSf_Xuda;%s=))(MTT3mR]WNGIL5@jY?"7u3'k_K&C&?Rjb7MCs$kAYB-n3PXP'^js
%aMO%(1WPN1i;$U5<?HsmG)e_W@E)];6'P\BO=nB^2sNt+jH*(M+0dUV'7gIbpO$3e<^E^VjncqHXS*g$6\%Ho;$q-86#d"WfQD5d
%Yp@A%dSRZ'E;d;_oF!6M+JZ4^ZAtWr+,FK%!]bYD9OK$aO&eBSid_Hti2K,7_K;S+dC9gq1H6liUR7H*C`OgIGjs-_=(pVCj)=5D
%RuP_Rqn3L*R":D3(kEWlN\;epfOUpr34b(/)OM2$(p-Wgfu>!4GmjI^,(XQd8(f(84Gc^-E2)lHZq(aslFqd/LO=.`_;UpbbUR<+
%hZ0QTO/Pm20Gh]j,Mo@1Uoa)SS#9a$n@j%0m.omIJ:[eijE[[m[(C885m%8C>k+-$0tuU4P.<W/J/)>K,OMQ>FF#A'T^'"hNEAK2
%KuXmp"!,kQg4Nt!4(k9pL#F[7:MK)p0LnreY[&:\e(]IQKp$@+R(>a^TpSL7-g5@@70(pmQW&<0EB9*TKSnmXjU9+ioW^qjp/A%j
%-cf#`,7$t^fs]2Y)7\)g9G*R6N$iF/45De_)]Z1l&s)o4685dRa9_)/NDMZlE]=M[aXN:3`<f..$S=(kPs,1BL/t/_4E1!`qotK1
%Z>DBgo2nnW;@V-uPZQrL/6;cZP7p]=2B5TRH."XXVJpYA`tf0*_SXV:3G`7]jhYP\:<0k1_:>d_/keAKN)VS!+>rVLYCIK);k$#5
%H@Bm+\;UEfr3.TrR8sBWka7HR]^L`c'uM](85E<C=Ogg59M'CB";e*m,dLF3$4nPh#=<^T(_ITG5Z;2A&7kWGS7C2;?,P$;nRS@h
%&A+OB]<8-CcK/0*G3W@T4*2sf&3;jL*rE?+o1+gpbC%L2Ft&-h`HgMXg[Tn5a3kR(&irQB0HWmVR_`]GbStf0?O6_9<'r5u."NZ&
%$W%[Hi8ku:f9E,lAEE[P=$,ml/3H1l,:l"YM>i?pSBW&fJF^JHKSY7\77sHqGb`+8*.d-XfbO$hfR/oMi(5&L@Xg(=->'sq*]$fL
%$qrq_7LPlPMfYi<$m^dIqZhHOqEPlg\ob$hB%(8[+XVbqP5KqM0'4+,CF&[aRR#XP6T]1;SNLFYWQ>5-2%2Bo0E`\4*?8*pXXGlJ
%G7Z2]DZHT(<>M,l-9XhPDS4;NAN1B0_t1+""fkIq_$Pc<3F?V8I.b<B.&nYrTddX+Kc1%Z^_r;#PWUbc[[4uG*\UIA%(G?Hg*lXu
%#`,*<nU"%L*EK^A*:f6>j-.'gNV?]!JM75aRm:eQRfsqI=<nc0Qu7LY*%o>V$62)J/pT;g"lTbG.]D:"D;6csO:$.2_PQf]YUA6o
%1%8QlQ47e2O3X(2Gj*=?l,DP)Dff#_(WTfO(MsSnXb!C7&]E3m_o'V.ou256OW,sgi!G])pN92.&I.M\%$Y]j`H8J/')atb14NH^
%O7sr*b"Wg7MT<FP?EA*;ld=C01sU@&hDK_CCG9q2#g4>pHeWeDT0k4>$HSe>#eFc4LR7a!Ad[Kf/G>MN*sRl9e&sp9J5_"S%f-R/
%p$h='d.Ks8'qaST0a3K1l(SN8,b>9-OPgHbJu#i9YSb>'Ak9XjK-67qLHuCg*nluh$t)dp4%4DYJ?M_@gl^OBV#uTBE>$/sY2bBC
%Sng''I"8<>QWaft0!b7#:/i@5KOcWp;<TYoV;PfQ8fBs.KsqY`51&qQ\4I.82+V/Q"@7G1)F9b<,=t-JM]>jk]MXXq4=9K9*+S!i
%"IjK]\07YK;3;]35$]X"faLkoR;b-Ve1_'`*#*M5P]`Z:Q<YHA*U*#=&ke2e&p2",_"9Ng`cp1f#n^"Ei!?oq?g78<8Uu`L<ZMY?
%j=mI3pOYn,0]2.n/Ocn#J8iO%nK<P8^*mQ3;5s)V<=AllVu^0(etF$s2rE\X$V!d_<TB?%7KQ%1kcpioiZ,Zdpk!UBeY[-YVFb0t
%!^Z1OTs:>t45Db>;IX`u(M1eF'g`WsU=0qB$bAk35.G!?q$6Y/8ZC`g-$11/T_^8DVHU2LMPpVEjR@-P4!E_pe'hX&/bQ(mBEreT
%;cF7\B'd\%3Ac6,/HAYNdOr2k8+]2Us$3?$aIK!rX<U!^[!481X=OQ96E=n/*#@M#S2"Ig/Es[u>W\<;5S0P&6AY#rITL7[FY1f+
%\=KB*d7Nu8BcWjfFOA>G3X(QPk$u2/2`7S&m?tPeBi$"(5dh/(V6,FYpLS;!7%m)s#j+5qjr:9nLeH49:HT+54l;`JfMeI7D3t`P
%0V6`]UoHC(:=IUggFVHif1p9n$\;:4,t1L-HobEq0LTod"_B7KW;*_3ngh<T(ipNt81^7A^6:SE&h#kgMX_8rG-JD+N-OO=[FhI?
%%[e$T9VJ5>c4)jYGa6'T!N2*mAeicZ-A?Y@/W]Q\A\?[hi5l\%J]M>/8P>[6<$!+Fd5FVU.=)+GQXUk#T.rit/nC[#&j$%%:t,(g
%helk]%N_)"1lR"=-ZhiA>dZ0(q^S5;n.L@o\=r;q5N_6ms#mBh6Gn.00"Z1LYY&l?!gODG&##.AF=>OYd2>5.AS#-=Na.o:jF:og
%en"D_FqMn7kX5f!Qoli43s>-<_Os2Mf_)ch(JgP\lj7r>%3h"OlsQLdNEHBh#TYN`@Og,1^1r4t^t'e)aOrK8j>0/fc$m&peK3iT
%bP$Y0Topq#$eE0]j3`]@"IU)aIHj4(F;,<A5Y#aSZ'=Rd^3!0daU<)@XopDtl.`]22"2Y3F<emQ+f@tZ^]f>*33jaioF6G+hCW%\
%7ZFIB*,U49Ug6e-l`fT),(@';">>f(K"@!7fVdgU+:+,?qsUsbdiu_29F??%\[FJ`?oc*(R`,ku9,C0UgfW2*J>G*+d60=Q`rrS/
%GYj5r5%7[/n@!ja8d7;#+p?p4)bJ9Wn['[((O-A.[=]i(On\CCVl)@]T`rFq7PXb%9ef2fIHea&D;(bKq9"0qLVXe5"G'gh4%k-`
%V/<Z8o-PfFB]'5:)`Cum0g'lgo_ir]++d7I3ugLHLg*b]'Ot>j."g1=U['%)Fo-SEaCfsc1'Ks2!nefn]plJ.Q^q'L]=CQ2q[Os>
%FC=$/[ME0cYD/3]cRE^-M$BRBrlho#_lT-)9/dm\RLigI`&eK3d3SPJ#?0Qc)+PcJU+8K>CJ]3n%ehjUCaJr-6Lqdtn:LnretmH!
%&l*.KFN5D+Hg(Bp#1U8,KFD'&SmItlF]=?OO@,uWgmfm:eADf<5Sr5j*#jmr.eAuIGbIX-#`HSnMOg1EjVoQQFihBu<81ImKP>]E
%->aq\S)?%Sn`Hnf"NC/K"ABQ_Os=U-3X[L2s$:oaD4T+mCJR"B`LGs7fi"H@+qWV67h>fjg=2d)%]37?%M=H@10DEDI0Cs0EQKii
%gudQXI9o:7JIiab@+AL1%!SN,?!,/R+/!A9BX%$j3W1)i!`tRc+"Te>:gj6^<1f>&6TVkO\)1>0RJt`CNcZgJ"6j&TKbmX>,Y!IJ
%$7]8(V0d"32IY%!(G7/okKmdNSSV/d*@.e\,02_2"LUt+i2@Kg6)Mr`E9mZRLX(UX)B<@TCjOA<6.%pSdnmsTI'okoGKQ]pLndk'
%(Wmk%QWFG2oL5]";<T9ae5m]]Td#bl*_%UQCk!(:rCu0poV;ngPj?2=*L?)FYf)2;+TdbeG9(]?Sa@S%e1e9V#@kit7H1Rb?AYX[
%[gjF'p738)CuIN\9_,N*KVTh-jJm`5FTTd\RY79aF9SQnkb/`M(Zk0>5iOVc4A--SCsPn_3HT+s5T0^Df[a>n#!oa5//b0V+,\>]
%Xi)o8(/K/ZB0.*01a`:8"M0g)R1(rp6Z=h%k"0k=#Ij8p*nPNT^T[$<Tl[/?n)1TD:U@CuP:VkgJ\dc3ca"DhGZqmnI+!:]p8[?O
%KL8=&L'3(0K>F%Z-NFTiOe/KI\aITmRUc/oY_3hfrjJXZF/C.J&'nNSmC1L-B_'Y)Tfk6a5G!X,HD1^3WHNs@fePQ4LrVm8$P_Z!
%+i)V5`%W5dD!dsZYsa\kNer\Q/?crFr3?0a*j&M,N2"4F+WbN$d^)aYf=t@?]ZI]eI#<N)_Ab7`kNK&]r>X`96T=%e!SQB&5me'b
%Q=C`'GX5/7OjZ$>^F=G/Qh;:=D^)UN._\0A;[6]-2,n$&MpphLY#4Tgl/cA#LAWBbC(*/bj8)BtV&D0<:AM=LP/j7@@gFi,XcdP?
%GC:o5l3[u3RuU^Y%EmAFJjEmmh[bjR8l'/E';&F(ZpDLo2eD7;L7f$=pnAfrCuJknT/cmY<;NR&ID/R?Ve*2D[VVMj0MLm3JL9!j
%I7g;L;$QjDM&Y%nrl0QmN_\&j[Z7ckj:*_0#q]/%j[O.i1P(e]OB`WF0_N;Y'RHei5E8#K0Z3R*MMa$uo&fn4S.7T5Y_9E.IEi:o
%<oZeX(@gT.."_4ZKSp.M2t@!$bC<g?g@cWR@,aOj2"@eD6?YD?&r9=D@QkEsEY[m*K/EC?52&/982j`%aDgV1p"^!,\CgXMT7sf&
%!Oq&=XdDK8A0,($-h?1%@jsETjmpmEYaC?]YC-P%C/rV<CSmlOVZX0O-p:Lq-tkn1a<rR3IiL?\S46lteL&[r#ll`F\+K9"P*4/d
%(]qmq&*Z[.+^2^`)AM6DPo=?bK/7D25!+YT!6`e5@Hq(E#h<sHLRS_.cnKT04rs,6b<o\r3?<jr)^@mt:m_do)8at?dHA/pScM@u
%AK7fGKH"At`fT0,`[B<LJ;Qft5O\ZN^A<U]5/lMK7mT$:\g)V0<9CpmT[&[S6dTe^d<U?o_4N?^i\RGK:&#\lf5U[LSP;oY#bW)H
%1W[E8,boboUq)3)+ceJh5f%DLo4fO4raT6\g=+mD-L1i\1BpYW8\ILp7m^L0OKZF`]M#2sbD%Z4g:M(BJ*J^2()B%FUnV^3s0T>^
%MPBPW*.]Me1'*pN<G[W1M:-UW%6l6q_7/?d%u)\`@S6IreTNQ,\np&"mT]6DlqTEtf)=$MP`_&"Jd-X&9$.?pA#$=1nb2n@)fnL2
%hRQE*W8lafo0d--^LCL2A]ult5ni;^S-CK]H2b<Porh6q%9DPL'E8Msn>^sdpGnK\T&D$"lYM3TYEbQZm;&c<E`W%1MB=1hJ*Ag/
%M^ma<p;Icj<o:I]M@2_pbB09mK[A8qI)UPP`PG`C#@)j$f'r@@-t$S#5gbJR_!Da"_@p7mU5a/4`^UsCqQjVq);cad%3]@08#n^V
%)N6;o9rZrC8"W<XS)<;7_FgW`AXt'JZoc>3I06>epR]sRUs_g;c7iBT3TJ^@:3DFh&:e6`hU`^#oA"!0=;6"k*5B_*7\g`t'G7E+
%L\c%OfK5>2+$C:#@lj:&'JMND36g*M6CUe-QqT1*EZ7K)G[8m<pYnST7p4)XU+199[;5NSr."_LTN^j"7>c?pfraDuN)['^iel9N
%/mk#05!Y@N.nR=72#YYRU?X\-DkqUlEBr]QQ"dhbjK/*=BS0K_b>,->lU1g24[FCZR:A>V.UV'.,=/gEjhr?Vj*cfDeLOk+>/Ca.
%k\ZE%AXW+O*7X89XL`-JM-/^RKrR8'UYER+@+m!N,Rur%qkD:OZQ^MGAH_dDQULb:l%5,"/l&VWNcgt5ln0)DL"`_*%pV'0a\NTn
%Ko1GR965<qA#)ii":qE:\FWI<]J7862$%/"Z"P-!/+V#dQ>Y)Dn@.0a;^4L)aWS@u"Nr6o8GYjWG%eO;Z*e-#9i4<EgK%:@/surM
%jEE+pj^SNpJ6;.FCr:nt^9JCh75RCFidKU%<Cnq`\Qj\])M+C+T&"JUeha(7f,_mRo/4Rk]kK!o"p9NX?a7"pcX#m8b'L;Nkm*3:
%@%l2JN@j77XNW4a>t:]uDeH]6\M6uXc`aEX1h?"5rPQSLJVeE*$<DU9"dM#c;>eBr1=WtNpWtSuW+I\IfBoW+ZCUm#<-uq6neFJ2
%Y?lO@Lcu!=d-;YNO>>YbUeCE%Lb#*B]>@kOI`&r:mr"qAjF%5!5h9!r*S/rVpUh>?/X:+hY%^J]!"H&DB!B-V.FW;Hk-2G_\"?@7
%c^UR_g3\ND`>Zs&a#,?W:STmFctHP#="=/<(4O8i+7hTdV]*V5W)TM!ZaD3D1hS27"Q,_P3EHqrHfOM_(5VJO_uaog8n"@h]8HT8
%KW4hD-#9o`'RS[`n)^a(daS>4n]XP##jG/Up_G(?E_WWa*4XNLCUQpHbSd>@JTi_]E>=3U;P9G4H+i\Gp65#prtbeeMNrKeLS&N%
%R)".:,Z]?\>?f3U?W^q.DIm4%q0oRRT'@SYLrZ(!Ti"'ckX57`:Rt&T0ObQb-;ph;=)kZKf%'['"kaeMBZ=-'U+2t51)X4IDB*dC
%]_c#u+7*33[1==aCEWYc1-f<kO$/3&_?fFH+_><;-Kbqk[h8s0Hq$!a64!Q9@/DWP)m%nYLo0XoAE)EiM^"mgdD,WjPi!Peb#1m0
%8!L(ahT+hcdICe.BCR`)Y%J&l09SPl>seB-V_pmqGg(Y6?U(c$P6%*X?:VSWShL_Y&ob(E`88)U]sEF\9sa25?P+6Y@RHR'ngH'@
%A);fuDY4hMT_mOn[-PK88$M,E?Z.qO-$qR:AAlFgO#GY%eVS+kCBPH$J.!o2S@:We`O5(IGK?_l)!8F,bTV+0<3ssN0Z`^t$!rV;
%C*\aC,9;`JGg^kC/kIcj^d&\V!LgnV8PY.hj)Y^6nD@b>MC3`DJmoAOSgJ%sLS7YY)\4)Bn/n:t9%7NPY;'OoLC-=NLr[FP75MaI
%XfQC%H@!,nP@ZN)[jI:KH</i+!3^b<]X_L4R?R8$qP9KPd4Hi"f;GprX@<LZaa;c6+Jji^Ir5B3Ka(gV@jZ#g[?&AjAMrp5L(DbG
%5<cJ%iP#S7U+k;$?Li6A"RnRf9pGV7:tgbs9o%L/'Lf*aDW+>5b2J88l"C3K!U?gHJ(d(Y\46*?a`L8g;`i%kA;hFVY$RIdR8>bl
%,"KlllnLu:$)i-3,l'25hu;s`1BJQ6*Wn-tE!W4LG1@;IF2u&I*l0ceN,=XL0Z["r3V@5kJVli7[a>\r<YnE]S??,CKLP0e^f5WN
%jHVcZ311M`f+M/IF,PB<o1V72pT;06mp$c?FT"!7gPD;I<C\&kgKXd-klQ:;ZgAXGTUAt#HKC`!l;7E4)NMZKKt<"LeN@MK:Y&.7
%*H/_b:a$CNnIDHW=S1..gB&.t<XD+Rj0k\4KB_c2ZlROP!/Zap^X`9+<;,e,Q?_0m68Tr_DZr["50ue(C$Kjk\XC52c"s6(/mcYh
%kX&#/D!+0X5c/F0J\_;&"Oh'a]UdLfm]TQm\iK-l2uU:Hpb1dCf8=6$eG>nC,b]gQ.34+@bKbnO3]G>GD_ZJ!8#Xa'!T;N"6/=S<
%$iP&G(1':j0+]!\79ZrnR#I+pP5#$a;2dRLj"jQWLui,RAAf'6T*`p$abl8)hB2FAn4r'6g0rY`"14XhK'k`IkKM/mq_#k%aIFQJ
%5[.(O1&[oS]BZV.8T---e'JF$A<:knJV62gmb*6i=TQsFMP3Ca__6LE:rPR`E'cFk'736+-84Rg9?uP&Qqo2"f/S<GR:]]2CW(MO
%U'$'Kk&O:l?cM0F_7bW'hV]oe\R"o:@@#8/,\0lB6tAQ=`t>;-E1UfT]'frfKW0"X%01#S,*4CRXI*\M1.ipfGJ]@,g[\[,-a5eo
%7QL(5ZK(DW)Gmtjg*^OZ[\d`Y>N^l*l.j2R)a1C946ZR,S.@9u\cb@6oT@N8OsICqLJrDt)=Og'hU6^EU4<&6PDT<N\iid(_5pEl
%',k##0aG7i>0JC1!PHEac,<RN]-\NF-aps9LUY3>RN20^Y$%O'dnTJiI;!Zf*Y*/<@Y*RO7Mu\nC?-Mm^e'TiH[R%WO$7-J2P&+b
%[97$EJ8/`N3*RNsK`I%W8m%QZ\CY8r'C5UL`_l.'noX9hO[]Zm-!B'bY/!Xq#H$]SJ<8HMPMOiOUlG*E8f1MNK@gT)d,,5u>`T3#
%Iorjl^R737:<\t/ihM\30:o1o^d"nY)''0Rb*+^O%25@?>jHH\^(Aa7hu1)=ccm;B5D?B>e7P)+k*/WA9hp*gf3CMs]:S!jI+0D>
%oXOC&+6gh<qsrP:B<r!]"HdBCd8G0r7K\$?D5o>hL@>J@mg[`mODD>GZ/S)D[sn)7^-)-CWYTkqEL'T4CQJDA`QWOk-=epcfC1Zj
%$@4k'7V6>EpYAgBc15UajB$ruFeC#uSj'3f6(.F+!PbJBcb72oO7:G%ISAiHj442QSJdGp&,<V;XNIktpVc,jDQotX=ZRcEm\T'6
%4!NFQ/c@uX9eBQBo:&7[amlcepCjFSepL_+LjZGX*U[mKcg*0dM+D*SF7UPaG>Mg@35S[1M^WRK(Nj;(08LXiIW'tq]=IH)n7oLh
%MH=Fu%CQ6<SS"'+Sm[BMJ5+@S%8\]O-ap@!V$+2.qVq[R%GLfNe8=\WNZ0?dZFT?dp:$YfVb_S.IS?Q&]I0QPf30Qmhc$3^Icnd/
%`]DW_):NuO.\M_j@&T#8dZbVQ%G"Cp@i*7;2O`H6<-OQ3HLll%EALTPd#=)(e;U6<KQY)kJuHP^)]:9%^TIE5ahILf((siVO7*b!
%.<Ut6e_BZu%"8QO`BWh;"sMBHD@M4>?G&Cfor&rHl\<mhp(9KI'*fC[:Ho`WT9Lk%p,7k$'!^2+O5-Dm`Gk5;f1,dno7?m;g2VE+
%9W,DiGtTtd<JWjE&pW/jlCp1>8DN"E"&oC3C>R*V8,f1tZB?]8]$[[j#U.[NM(]i+ZnI/CM\Qf@G4CQW1#,X4?1UH6A3Q+.bWiIJ
%DB`dHnfUUV$G\J$fojnB0uh@?k8@.O7?<V'rPV+=]T%j6[/0_!hD2/\A`$9aR;,];GroYCqcZi1SgjXsKSJa]19\5g*Ij<l#G88l
%D&Oulgom:7a^+8(.JgBOeIh,==mo,-dFAkd=[qc#,6*Qf;5@Nd59iH%AD1TUF$uFEQ56aPrE&OAjsh/+XCM]&66WV&Zkh<Fd6gSr
%($u[;`Ot9V<&1dmYNIE).8gh#S7t:>)<XQ8$D:.k7ZsM0#;&_saQ^DkK$ScYJQN+TGg!?[Fo\<!_DQgp3d.$(HQ6[_5,*TC/4HiK
%-';H*)\HWs;FR[+S_q'<#3`/TH0]H3E!<%@,CI`5lE&HAI[:XtfoB=SGf7$Y[54*Nb)kO1+e/1h?i0OM=g8Nbbs`s]FGRduUSkL.
%`DhEBBSYHV<@Pn2Etg]Xd5d@ICTu>YX=;fDeYXTB$r@t1S&0m5@69dU8b97+l1a=E+nE"*B0[0<j2.[c.$F]/1;2PoLBt80.M=UU
%!1+)$^uZn"Ft@nZXh!Ph6D(q8#]%i\`NMG!8X$,1&'Ju(79?fGhA"a/VY8@mTU9-^<'9O,Y/)]CJPOK^7rDJuJHAB<_AWbqe(5bC
%gDfhQYUJ,"ho^FfCK=Rqn;#^E"J&Ghe>#PD5TVKkZ+efnm"[%2"ApWP7Y=]P7*Z1o.P]&]j/bOZZ_=p+F/pl"+*g"acQ#2`P*u&6
%EVe;_P]$>:h*`=e609T?'Z>]o[SPCK3U%8c]nXIqX)^<=IHSlCCWN.9nBtm]pY$'o@8_qQT$[]1Zu&,NMgJkLeltl]#)js$`J)_"
%__3@Qf!I[/&;V6H/l,]`ATXuD<D6,3VN+WnN-ec$n*#9f_6B=]P'r*XY9rin8jmF_nCeP6pWClJ!Ief/R%?AJm(QQk`+<R%5bqPY
%.Nuh*I6!^+[GJ6Y@-,qSU5b\@`+2m)_),50=gJ8L,_Vn8j[[8hC^j!YcRDj$VP=KbOZl_%6;:A0?2K)/^-"rtW?3as(cC1:4Sj2Y
%0EYphMC.;<D@N#l;apKp=Fj/XhjU-a)`r6meg&F3/M;E2pJ.W658E()/*ui1D5YF9Y\HYVC[(?q-<A#_;a,Mt'8'SB4K'L5d<CO.
%I[-0VSt-.t@0+BN*tYG]@PODpa'j]/h)L-RJUHlp<T4H(EeAPWO;G9]:KgUSf5IUpON9g.8#?d(Sb7&A8?[qS_&pD%O[,[>JChpX
%cNV?$:Y<KJc!Ib[8=`(@aD=e>jLK'G\g1@p'2%WN&Flp1$:ZBV3H^f\ot;q@OE@2M;g@W[HXJcn$t%X;;`gt=Y@$,?ro2'JhRLTr
%6ma8'OgS)_Ku6TE,c[1-GprnbqGaA<+`nM)iWJo:j'%jZMck\Tj+gtVNb.M4(IZab\P+_@dI,+7cVX6V3V';Cj(9<bq'=fqbkU(<
%\e,Zch9.Ff.4r8*6QHX,C&cb!R`RMG]?m+gMYkBQIBUpQaj^4bR7>-drL$^+F/Dg_<3:7rl0_)BB[T-K`u(<PD_>-K##r*uT7!8%
%e17"R"'1W0p("_?aB)EXeA:'ZRO-[!3CLp1CNNVSbB3(+H)SP.s0AZ1U00FAUP+s_#UEt2'Fo5`Pq6$2eNHN0=O_bsXabnAe"8.W
%26iq/U$).$_2nhY/Oi(!IQ2^9&4%6n3W"h&"V#7bVHG+F.k>9W=X+"$_WNM?r,64ao^=QUbVK&A6(j"!ITFtJlh7UJ9VgIbK?pF0
%P$dShC[)a*e)$`2^'*65a/*8okVudJ82eTDe8FXepQc*@X>?j)=9g(J;<,u6!sP:1>pY1*%7H0]Vd"JBeA"E>@BUi#BOd/#Lj/*d
%0U(1Jlg1tB2]'(nlGJPX#aFW#L"\@<m<mqP\q@^)el8LZUt,#J.enu]!rO@n6&eC+`)O2kdq%!JStB*8PU:;pCBO.#q:sCWJQ>Vp
%6jA&-C6(89XN/$d^BV7F)]/?5_W4Ln>$ucMCO-Ee)W_drLTHuJ:19Q*I2$Voip6q0Bo3uj%f7[\//Cc.S*:`U9`dlDM6IoYeoZ5!
%KjRqZ?FG9OW)';BU"X?u#oJe'<)uBu!'=^pGJsSYF<j?_DH&\i1\6pLFfd>I3K+-8DbT(XB(F4$<1\32EUrm,[i$ZGkYh>9\UWGY
%\tu2qV0s,19?=5TWBs8U*f#;t22J?gG#4n==V+7emAA(R)RYe%F_cq$i+q!?Mlk59N3'l(aAaDX'A-,m[8+7nJkMVbN#P&gb1\8l
%'-t#r[fA%C%RRG"pcOHgm$s1K&`'o_8I@_MO<RSiGJKR1?IDXfr'gB*\e9;/+u?nkL>Nluh`g0:AZe`rUgq!@c5fghoJ@*OVMWV8
%feQMZ:AElu!UBF.XNo!DEe8c5n3Rcj/SgD,G<5W!n_COl/?K;p5l8W]f578:#ep@B1B+"l>b17Ge)\pKD@a2$'oN^XbI;S&<t)A"
%UQDC"ZVnrNs&pc/\)GI(1ELu#&bC*U;WWXlm3#sDg</i/llWXSISQ+ao.*WokbPC,5StX4'G`P&gF--J5Ne&m:-BNeqFp!=&:W0#
%J5_LUZ9?7\UcLR1l`iJX3Q80W6L>hDZIMaJGQ1ubqUrH^M;H6^OeB(qjn+itm!-RQkNmHTVP?c<:tbAbSZ8\JTnk1RZ.*\5qt53L
%PF0"<<3]/5O'd+S58W>Y@R,khBcR*`Yn)2-'MaLRO]#uOpD+<@HmBkq5p5spib1Cq'%Pia-7!oXaU7ZXjh[qc5LhR4@TS9P7_W-*
%NNdb7L-qg?&lC=q)D?$=qjch/Ru4b"U_.]LZH#a?\@HFbFB6Rip)<n<e3T]HnEOg1&5]^N#=AnH,oc=jllXBD>7&lmp*i*JK)1)%
%gGkn&YD\O1\,(n^G1;*aUdt?s)W9Jhe(`0L8:=:5B;JVln05!?jo[;BEEFcUQ?"W6#]f7nDODYC;f*U_@]qSh@kNC-:$^:o1H.CF
%ee-@EoGo$'\Fb0<0d=5-I"!'1iUCl$=2f:-rU>4@D3<V3bfmYiGo@OTqIZUtL-m"^lcF(W[Xq_GBt%9pT*1Li6fePOM-L(l[.@C>
%f*%&X$a!/u"tdJd./:+#><OOc+_V@&X?&fTWt_>+-_Lr2IiiXFF2P$\jeJ-UYp+ZRPa@KR#_";pL7bs?j+_9<VX]ornf<<=[QigJ
%\06K;/FlFsI22,q)@66c[2R\^-kmeZA8Q9WoP*u#B5Ii)cej2W<P3a[B$;,P+FW3sU<5^V]'jm#\M\_EFR\sA34tj.g&hH<N5J<2
%:J4Fj=f,;crD5duSg65=(ksK=lAYN7/A@3P?(4568YQp8"\^4JAYj`cr'bi@AMR#i_.:=IAsZ_3,KXr@c!GB?b-cE5B0:eNBR]9k
%4fIhN6]GJGed-f`eA.',YIpEt6pXV\fa.O8)<ku,Y%M*HW!8t.rPV$A,8?l]<I&TK@n5n,2BB:GQ%(eOB=D9QUC=GM'1J/`WO"Y(
%&,IME#?Q%;HaS?=RSMbd(@P14U/pC->8tUV)`lnE`VFU42+LOFqj7Djd[2#I;KLu2P-\L)"L5=sZe-.RLb`]*VUQJl&\6dQ/b/+S
%S\cIkmGA3?1f"QNSSVFS<LS?)Tsi_-cLcHflQ-WgNW=;\T7iuLDc.qZ0!^ub>Fr2(*Ocga(D!,5i'@g/dl[`Y3<JQ?fOg_bE1U_N
%=aNPi!:AuGIRe"0B(YZ'<7o>VT_hSprSBpEqtKiVkdMp%>X!0l?2.k)piG=W2aT:E?Mj*sn4SZODm!]$=Dd'E@^hbs^3OXa@]?q-
%kL5.&%;DI7gm@2Qp"]OR+B2!NR5Y2`Uan:m1)pZ]dC!W5OhT4WnbnPbGa[XE7ZW/&^_:Efn&rMC!C`I2`@q%#eXr-DJ++Z&;*MRH
%n$U^R\MrIXM%6qH%<PD[DXQd4Pf%.j&DOGQ$6HL5JIu5-53IB=msOoW^br4V/,*gDV6#W1Di<tG*EO859(dt'k:_K<`cZIF%0`&@
%o/CGtK`cdiC&]'&1*[&jm$ud9J!(HF8sc!:7\j/E.-3^[>>_.Z7H7=EiA<'orbGk)m<==8?2WZ$FB'E3Z/Z_`YUoR%Zp4eV+To1r
%B-uCkANXJWf;X,gS18saGeCqX+45.>kH<9e;]R2:-Oi5O4pkM<I\`Jqo<GDdQc"fM'uII>#8BWb1giEkP!HWJ#i%?d\cdug$<QD^
%n_jJ&EK"UuTq<9NS=7QL1/RF(_^*L"=s=-Q!n/fo=M%!/i2M(+4!Lu.ekTL`Q$A4Ydt@.p`,Bo!TC+Dio4UP2=2B=h*2Jua:=c-\
%(M!Z8%2\#na]i>n86?g92Eo`M;cM?!U:^m8U5K^FNk"H1Gp_"]b64@?)35H*MJWJ!POo0/_'ELQG3T6'B>&<LQHnkqa;O]KPsBZO
%=[O"[haUaF?">5t$QmBZEZGfU!'lIldifs=apHghn-$q.[nb4gF.?\q'kdZ!R!dpBVobX-G7k7k)u"*]]LO<_q74HOQh3?2O*]]'
%;Z);anc!53p4NDZeW3Cg0^q!;d36]8):W"RaqUSmM"F1F8e!7N]gbcTdQO6KQ$jtW3AiLQYLmR+BoRK.=])Hg]t(dZDWW+tKu_Y;
%9iJ-#IRlKp6`T`6Xl`t0%.0BgS*<Z/)cn4MW_$PSRm)_7KFga3>#_CC,YY47D(RPY^%@1Oeo#h%f4rng-Um:jSeebT0$;PCSWdr]
%]e[9HB4f/\L_fY5oL<=o,+=k?h&D_V[%RhedVnPBTK>!:ep3F#jLE_"E<Aj17e@LqSel[U]u`+ImbVc#Lt.^+M+hFW=D"i<*4#:P
%Fi<??7T*V'`#[m4]'#8i*%+DEAA-W+1,2CL_%/\sHYQ^U<9eVhf+aW()o_TVS8UXfZL@gFa=If=[WD3k66pUVVnIsK(A]5:E&$hp
%'n):\iSmij_ia^uge)4-(SQY"_Xb;%>Ns"J_RugndH-j)[VtSuYM^,:<KF_I:mAD>``]/FA[k]qkD?6slalGR:/5,l\])<=[Uii$
%D/"fhfPp7Kc!`bko*-HUdoIY'&h5_G@1jZVG4nkf@;%J+Egoo]J/#nPP&&odRH+m@AZpZ\f,3Cf6iMnFX+uN"lA!shG-s`V-ea+i
%Q"*^5>A=a9LT[/2CTr.FXm[M8Z+[^YV0RSH//uecDFfh\Hb?gRq^;@NV:mn7cKd;P)Z@jTGRKP=@uu-S29?O7^b<-^NGBc9`,1\,
%J6c7_-b)irReFB[hAH+UN)kY3<.mQlF(;d!*]eTA#kcHo8g7r>'2"j=(f%6ue>m%[=Y)hPFI;>9dNkq>"EROp6ENu5VVF2%47Mpa
%e>9)R!HI]5L0]p#F!dBp9abAa:"<M6dOEDIVA67][4>XkFV3a+0E*"t>]>qK`A6dLJ:;T#-5p"VeTNXoc^A[p(>N$)ih4YcUq7O`
%,L`GW9)$mO6H2X&<I@K)#W0Aq1A;L*(QnR2'EqMp--Z7jCR)cW;"r?P9B1o".jj$QREic9?)7'S:*U$,Gm:>hC'X?NQ?IkZB(2aR
%J&R8ScLbRj<0HgOb:IO.O.h+j6q(291P__rq0!'fT^1j]."g0+E6%-DWlFsI-GTR]kU`j-"bn#bQ5N)Ng)+<Q;_!OJ0[blU[B=jT
%/_?KTOW2,,^k"MS(<IEXNu_Kn?GK37eu\[l2>LIt%[64)Ah/7-KOg[DW\0.f9MQGa@uYs%+A7K!^`-eE%@s:?+qV>4KoUA";=$mh
%0pN9W2Y#e1?q]%Eh2jd-)QM.dg[3!\2(3P-VU1m[Q\7-#6ecWt;N:on&O2$[l;;1PQ'7/"EfsgL)GZs>GJ+b\>S)<cLMK$`2,kMU
%Db+P$b@>mR[3%o$oH)I5?WSIAdS!9)&<c^WM7]Or6H9>BlTPB=]kZsud>&,8c5[na..82!D!473fNf5HKME6gFC6mKqQ!ee3\6iG
%1Fl@9::,3(a52o=-i_n0HBo1b-gHXG+\hKL''C-/La/9;9aQF$H\,oX%cA?G+N2&V]2:56V%a/9ndRlr@EBN^6W^GHC*D3h\K^Bh
%Yt.1RQCqqRGL2-P#E`?7&EgI#cYBl"JN)/cQbF^BQJrrHT$OYVTJL=:CAD?GonN=6)ALN*#q!\OP;?RMp`)-0oZqaV7&g0'Z:O`-
%Q8sOi\cg[;$Q!RG&lH87Q!'dI)\/3pYeZ'#Om$Q5\r[T]Eotr\l)nNFkmK=8]1"5iYI<n'j"0f#8F#[?`)?sM0"UCTAH1>V(qRX.
%\\`Z2coQdLj89So%PGShV@`taNo(nU0-DBt"mB3&U.YcG6!1TX,&+"_#a0(Or9u$aiPEpZ9G%:W8+5ui]4O6,5f90GKUA\M0s"e<
%?[$f,pkM!lVY!e-aOp)?04;:e19nVP9^)p;Ts<HK8etfQ]M&/7Q,;RBSIm5W5m^I?TLX"FPi)[TnnDOH6XOfp1F?)J8s5Ha!6;me
%8\@61Brh01M:m=^AFdR-+">#F6#NcqMo(j_`uK*YVm.U468X&tWps?El6?G9>_s&$kM/A]#M#SCV=QLamtZCZAU_g)XZSC32ad;M
%Pc:@LXX=)&887SVc6I#^n3SeWjtIfr1Z1N*]Am`,\4=NpKmk)B9QB$*T+,))g54_:$/)#gV#0$bPE/@[af$]]]9Za6[@CmI3]4*P
%lIQNS[T@(5._1Li<#\0o&'krf<h5PtV5]Qd3Ti:W;;5"jiGa1=*E$[2H@UuZ*FB8YJUHJYXh;gS/r7EHk\+T]PKpu\Y/69*9;JmD
%asr:C5_-:bb4]ZM\J5`%p.:B1i*$oo!DQ=CAIUO6:*ElS<8O;1f,U>$7D9\)k*[P_.#WW>0_^VCE[PO(jX^14f9WN_)&/?l-ns7g
%op5EkVg\S>:t%XKWdjgrSEcM+or-hJ;d[J@^1O*&LRgt"FWecY`sbP)5(J?C:@:1_EGl@`SFC:$h+?9IWp#qT[P7&%Gl!q!h.Bbu
%neI9lRqbFc)I9s$S)+cVI7DLg5'e:oD;`DN)Hod\-G#O%Oon"V4,eO=Jb$kO2<Ih!R\\Hj*V[5Ebn\eKPOkFZ*2\X.:C8[mMhN5>
%9TD=Y@V4Q_VH(V>#!k[^1i3kCL$"Eq@*NsK`":m.r&%4AH%.-qqE);)gYd/#!@jKZU.8d@a"/h]1PXXg=0YL)@qaBUV%Ya_mkHVi
%/9B*uJLf\+;cqPp_dSK'RrjuQ\4.K^_oY$8f+daGq6$7N7bWba1&@JQ*R;oeB+`O+2.[_J/rIf"iuiK$pVc6SNNjF;-72bMbX<Au
%f`TNU=<G*tc;rH3;M4b!#WpTL6>;Q9P"?Ue&'^\IXZ/r7&>@MTdCV8FX*W^A<Go=5cjn&GT4BDedA;2RaAm=DN[>)Ua"^4XKREf:
%o:p)JlnO(C=@!4n]Oc@Hg_H?E,E@_hJg5GEO/eWQjqGfOVjn;/l6d9"dd+*4!Mif%H0e\+FAULi]jl6$.,m5&/io!=6,CkQU.gk#
%/4:JG34&Nt8IYDh13'>?&^6hCjb><B*2=%Qr)%Y@C3p@&s$tB@b"8kC.I1K^+`__([":]f:O/h:6FT`X"_E$E*1b-J&:FN4,+*dk
%A6!6?,FN.;0<ZWq,T7kJ5m1+f0Xf<;Y!E)k>C23Jq87R-a>9J.GX+k8n_6IO+P809*L[?5W5q1p;5`m8'))[2+HlgM?dknPg(-")
%m5NL*>DVAL^Xa"/h_4[R`pEO#*R](UE$`/QVURe$X6C(A3DOq1Ha"#UQ`O)#_rNsQVWqID%_P7\Uc$\>l..%Um3nEsPeBV^8o$nQ
%K_Bs7+lsT6?5FNVLSRbWnV@jUXstft7a>a?$C+H$LWQF3q8M["dU&R+lQF[`W+j4LPPA<CW-c>PHDRJY@#OR1V+%c^r=I"E+k4bY
%.(am(0=K0B"@2N_.mSr`S"XZI;WUa@N\cqSNIXN$*'3tR.X,qPERYb$-!`gHF_"m98=04QYc@O6EGG*=f__5-7kHerjb[p!F2U*W
%hp"@MS<cre?;P3;R4P\#ksSK"]I'2Rr'b-_<-djmiZK/(g..hQ;TE2,'hZ;J["Nk]<e9Wu]r%goERH00APjapp-[2=6Ulk]\hcK4
%[]LO_rd<ZT3l@O\U2Ch>/Kr-6Wq#1E(BLiJ+m:J8>`(:R+V%!-[!*5gI[[4=58PhC>I.KEo[rOT2!N<4)X`ERcIh%(eIup!4IT@4
%f61[lVqL:ok;nJiU(cnu+Sba^9cUO)MiDAu#ns[F1r1#4Tqb@Z:tP8=3[+i]Jr7eU+=.i<Y1SsZE&VPCWBiQ(BQ8u%V,+>08n%ag
%>)PE6i#8SoaIa1mU?4c7>%TBWrNM%5*oH;5S($YraB-r0a(jQ-i?2Jd;C@BY8HOkCP`ebo)6LWu\pGX-!M_WmkE.,XiQ_0/;d*R$
%JLPFDrBuYLRT>$Q&NM0r/@"Ik-[c/-$Bk;:,=,&SXG"6\'tZL>maKjR$0kfnHc,GDEn##4`.DZj?^a;d[6W;8Y*'a9@8MpLTY,aJ
%7B>!kPigG;"M)JXq9^&V;cdM-PT=`m8*T)O_YFj*()f8N=Z$P4kXWRnLX\2h`BC<]G+`0l0KEhAqIT7Xr6+1VcZFDD5@Cmg)CfU%
%b@"=jXip^^j"RZtW8L";'\SU9hI5.t(cTB_XrI3JD]Cn-DAp"AGLQ"bHU^KXP=m55RnPtM7W^/_b*4['W78kicFLg9hr7]/(!)d^
%W@2+)6Tja:m`e-]!WBG?Jtu.2LJZ#FMWKp-m!8%RguF'd+WF!IDh$&o%_cgWO<i/IrC1fO'($'hE+o`aphR,,@IY="+mBiQNh4(>
%mjn>cWUB2[j)*Z>7/.Re#Ekk*!<A19o6a.iN2YoJ@Y6pFH&)6O*:Lt,,B[^3*O@;\`T#PH3hQ!0s-LhS&Fh`NE1B[Br_(@a<[40n
%((\h"+14d@(/^OdgX4u&q,J;e;k1iY:-*(33.!cW%-3H0*QZWd"EN,(OI\^0T$a=%8]j*lVda6=.8=cS.:jIO"NA="WSKT$[cs<\
%Nrfgh51QAQG2#23='X&\]P`-M>*$^:mUfV$"lnFMCJG`W8i6Z^H7$-%lbp#R+R<n?6_kBi0B<=+r<`nYC2fPChupRik-$k*&jeP*
%?SWbY)Gu(5IPmP_>8/>?6C569*mct4m'ejhSY8?n6^`d6l_XQmP&1X>f7q;?\J0`UfJF\X-<=^M@N3O+#7#QYJ*-B"!(OSHrknWQ
%i@\6#TuBol=<Y7"`8L,C*EGkiCKG5MD1G%2)l@iZ`FDF,o7bO$If=CqSf>jU5R_9G[2k.&5@,`<?cVgMpG(jVFAVjr/(I9.(k];W
%?KA$`7ib;>pWG$A=!A+;eIB:ukR-`WIB(7=FHH>?62?->^l(ku]+M,7IL220Q5@\V#2sFWW6V7A(.E31&P'sAcN)PV4I#Ca^@Rd'
%j3RgD+7Y+pqFI'BDA++b5(_s/AL)Q$,qfYo)[3tp'oe890nguPmi"DspmCWUIK.ZAR2"[K(bK*,k0&E4/5ZXiI`CP4g[d0VTD[N!
%O"(+_pCI4IR2,Gc0etQ'o$[<,n`bZ\T(-g`rq%u3Y4:P+O"(+_pCGN83B@-0nb;XC>4!D$a7"JjD:I=<44D.D>HIl%E?1@W5Q@u1
%T:,.'JhgAH`:K6*T_bm@B8E8]I,F+*'[Vr&$SgHZrn)FUI/f*-q`%4e:A_;,nLn=i6^P2ro9-(RLZTs-5+t;q.6%L@28Tr>$H^=e
%':jpiD%c7W-\Dmn*j@teMlqXLc^9[h>c-f[Kr8L:SM4Zf_i@rJ,hP1><rLcCliu0Y'/A@bCFQ-4-o!V"a"8Pue1q<+JNHFL;?E^i
%TMG^186NCBMfrdb!efRSaDbVVXeED-DLH08Q&G9Q<A1o//_N+?gXDLHHFkZE6D$_4.pjNsVq][GK50<7,BepY<l*&Nf*iW%D85Ym
%&ZH)ufAs9ZAB]ZGH""AY)^stiX0H-,PW(i]L6/,K$q'U3)m06&`V>Or>CnN6kTX(`^,Q3.i&gYq`C#VQToP9@BpGKZTQj+fZr^>_
%/WQl^**-Hm,?,>u:D+N9Bq)`NYSOJtn[6V!VAb768&K]pL4ZCO+V']oKFn8j?oD*-OlMI.%aH(M&DuAkZ>WIf*^1it^a4Fu,:?"%
%@>Vqgh1>P+,W0XJ"EgB`D])<\4NhG[RlPdR[&#)h6r?X'7:_[k6IFW>B8%?#UXRWW1_XDE;&2XMqH7*h!32sB5R9G:NV1J4nb,Q-
%9B]BbI-<*<E:!jX&eU?dH%l`<ca&0XE9\t1rq7Pqnh:F)i,?2$e3sUpHPi$0DORVD9s,PW'eDjOijao8>).K9)Bs&=[5?^\e>!/[
%'HHJp&Ba67K5X:D6E)]V2;@-0f*&88Pc3n(]GF\K1-\7_#Q/*a:RD<kY%N?@P"5lYP51P*nl4pmcdl22A.nFK6F](<*"buFbAegZ
%(#KD)UHki:-X$l_Ek;STI-*6Fgu3F'!,,d%.9Vn02#m7/^AUHV:eAk-g_ea_b#$)1TgJ9i1uE5.UX#91FOW*Z,8HVjQX\Z^O]*18
%djg3ZPV72()GGc=h`-66FVC--A^-'FJM3oUT3uXqa[9</21$^Q[RiZh;Rpi1Qc<Uf7GuOdE2VW9)=E17gOh>bEAgfEo$RC"IO9J&
%7MA46Nl5J$')'&%qVG2<#s)uKcU`"-f2=^Qp/=/b!_^IWYh"!I3Qm@%I*V"b1+LbOfA-[oHQ71N<KBaDM^ln)nVL,8-&N+I9(,V'
%W;YCiYG%WW;&;=r-!!'o=!0AH+r.Lc3>P\Z6.2pC!djZ.b#&6u_=%OgJIjMm"P`,V&AD++'JpH?$Jn*>JGRS=`s.?d&"lR:YtOnD
%'9\I5$,6X4_[7ZYo,Y]ToU5A4Y?<dVDY`_A'5VbRaY/^H%f2"hS#D'[+tHYc@a[J@_FfRAbKBXnZ``=8996,E2Lf_tj$o;,8>K[1
%faK!H0bkP%+%OS+qt^P4a5mc34(@++064$pbaWHB8k@a-0K0$p@(j15Kju%6NB#M/e=Rtim.iVrh66uqDhtur'Z]!KiO[jJAs?UM
%K*So&SrhIMKj_MTUSA6q^3\f:IA<L/"SF4YeNA@CBQ#\YWgLmu[E]f`T!b0*nW[!><N"ulJP&44NPW&mL<0#VKX&;qceVIe!-MEH
%C,JL?ZJR,q1AMnm5QYc4,F#"G/4G#r\:RegJp3*OmP#MrGPJJi7ac(5KHdFL1>Uf^*.r&I.K'5IUNZU@49DSi\\$=(@n(Z93<1@k
%W=rR=cn>;5"%<B^nf%a5c.]T-"l;`l;b:G6n(p(EK(1g!-(.3`oJhkDic(r;=H)349OjqSa\9pI)ra.Q=0*]Nk9"/IC5?A3rc]YT
%5cVj`Ejdc':g;2onLWLqis3GP+=_ZgAg/FK1K?L2m\Xld^Tg<,r9kHhqf?5PZ+-EtE+1p[HC'HT@)Hn0/aM9I[8)6+fn0P%n_fl(
%.e0"ULXb4e`X&+h"[%j-(d0W\B?Zn)_%`SbREc5&Te0!=jp/1B4(_6"cq^h3'.1(q'FfbA^KnIF?Q1kUCD+ls*4J>U&%*UL2Vr"t
%:VM&^Ii'MniG[V$<gB47&@<X6V%4b[0L/8UPPM>l-d/Ot(p6jb#SD-chT(\\AE6nkZ@Wn@>W)IW/"mad+Gm3qVU3_iVe2+([NHJ(
%0\rQGWF;O0EMAcunj3LY0qUn2JID!=@FM4QW3fa\@YJ-Cs-0qs:0*fF9VYIA@G,*))Siq&A1JH'R]HNd,iSAdM'C*3mp2e[Wb@@+
%7YoAbl4IS[Xc>&e*/PA?E!RDP@Z>ngkbeVJ?WC:io`q8sp!(a@J=urD-!OR;Y1rf.PissD8^hL7-=G>1&&[C5bdK[V(d<eu&?Rdp
%$X>SJZa+H6=]aXRibce!n^*GXT1oV6NQ(;L=uXN14aI.hdMH91(02/:;7P.=,=^+"G?V^UGEh?]QrC_^_IEmE)9Aj[jSV&8`S<]R
%Lf-d=5Zb@%ZN""3_7in^\N\'$gH&.WRcDCN&cL,5o(C3(B!hUcQ^uW,%28NUf&P?F-LUfO7uh8Vbt,"mRGB\Oa93C#bSK`SA]BF9
%3c-7O+!dND?J6`FU(n;C7#k2M[YCKjal1\;1d'Y>+k)I"h7,D"HY'&/V<>E6UIJpm=p:2+"HcRj#f7%qk\:l3V2=8@?4h6(].\S)
%>.Dc.[2pS#Dk8h!f')IS;p9`n7R&bl^j8on(0o#,(EWOK0joc(rSg::qPGJL<MAu*"?XPe[@\15aSlGnba3#0T(jS"qJAX`I%.Z9
%oL7fk7NX*@*'8'21C$W,FBShM]b^5jG,cSrRa%Wp;Vd[F9H0i4G^V>>6m0j(ZHhV*H_SJPjWirLR[d";AT[4^=SLjolQ5\WC0:#+
%.!CB"W)&^NV[aZaYq%,9kS%Wj^oNQpjZ\PK<18Ck$JkXVVU&86SR`Vndmb`YlM)kh'2<1J%FE_Wj,i5$:U8sLWnOedZ[g;7@5?D(
%8INjJ$#N+V<Mu(hfCT:u^6Qjfk#FnPKO#1t,Td#5k>Bh0PsLQG"@CD%H4@ug8sRRH]!F-amatmE?oP/PaX.Tda`Pa:?V'<YT7SKZ
%kToJj`TT7gC3C\c(U=13N!YX$$MKEV#Uqs!3'6$-RAR];*6)Rf13Gi:Em:W#[MZc9d1MVK&?&UMAF)3&[h0t\*qaJ@h_tYqKPh+D
%$\lcF20+u@#GBV.GXn0_naX>_P>0d4l4GdW&r,*MMFrQu?DdS$2h24n/8X6.\o=_3=7`6DHu?u?(+R2s8%it"S>ZM1Lef`J,1/_r
%Q)"PH2.rZ*?$'[16eZ\Ai-R5)3"8`lB3_6K#_r4XHj(mdr3;TL"NYu.@0jFS/LS*78uC7;D^uGkC9b+68s=H8a__Kd>D-5S2r>SN
%cSBXjU<>C\To0fMen6'WoP85^JpEKJdW;r7I:cbAL6nr;B]hDN8K5!l-a4Y']'M)Z@^Zh[Kj1rk<s<:P;^r8=,Yf:R6f^%sdH/tD
%;c#*f%/=3r.H/pZ12[[(E.m1m<c:[m:&#1P/n1UAN]j-dZ,8p43>lfrPMZ66ES`pC)1QW>N"U9X];#^nf-RJL$D9U5j:sYUO+ULL
%Zf,QBN3'ugQ)KgF44B_6`\b,;,a7K&<M:GB3AZaA1r*Xm6Jh4tHQ;se?-T!Q)9T#o@Raif*L<4jD&K@ia)]Fu6':P1IspmG.]!<E
%;>pQY^3gme3XofHRD,.G<LQM,>9K*k)S$#<miKK*O%8fQ/On&#^`d\p;XlNg?*ch187!#W1WM=05_AWha7P&p2JsPkr`X<=?)DIN
%dX$Nh_<Q=Y1p%c]k5l.AcDa0&a?KlD32n3<\Dc+U^'.e!B=*+1Z-+%_[&/PS031UmbI#e1+]Ge@;^:09T6B!/pR]:,#k#AMe,tA-
%eAdVZhWsXN.M9<7a/g!`2K=J>k#@t.jM&L/i\;$>H>Z,4g?G"-+MVJC-X3)&#lVjhG`,*b;$-4nU4iBENnXHk/^T.3,W%h+hW!JP
%i/X0l;s7bF&Nn^R]?<XP(4.)0lmRppC)#G#$=I((T.8h8KW7&?o.<A[cL;_%-qalbU9&QOUpFR$/QRU_ADc!G)ZGf5e<Ds!7CVSZ
%EYtp-W*_qGEck-.1Mf(8-)W6RMYKX&+"&<g3ImpRNamlZ%''^:%Rl54a1%"cT<P&Y6)u!/,b@k81BirCp$F-1r:X@&=&`j/@[ie/
%X?%?;Agl8N-dPtFEd5%1*Q"(V!`MMM>5TGP!'P^.!'MfQDsoGIn6$o2g%i+q!:ud2JfF=[18,FB35+$Zp:Zir]c>EXc2A5_ocA3\
%I1dmobajQ@JL[b0P`]50F4ZTfed-0_)>MJbdJGkD^oIj/i9]eQh;)_'r9ukFLpkd>,+BE,EY--.*W;kO"PA>>VRg.WJIR<F9VFQ!
%>\UAorZ@X+kYD3JRblf6G-N"MK9\QJ2MZrJ0Ja-HoghhZn?4dF$q`$*oj&cafEbu8R2#[ffHKg?aqW2-V7OXiNHN)V-W$k[MGdtj
%]k&g3`*-Ij1*CZX"6[))Chem75S^aL3@-O74,20m"?O0R+iT[:=28i,dT`c-MlASL:Y$[[1.LJ/e#)As6(q/pguB+&Fd;=LpKg+T
%Gf@V>MFA'mO9no/R4]p-SF"U3a1Z,<W3AZAHfM;[P'`NqAZE:#L.rmK!D3REVnfubM?pNn#G`F3MT$U1)(A#&BXi4:l`d!38+oD'
%=%A]363BPPSW#@*.m'L+LX#*"d)nBoYo*W0&1Qr6]1c/^lh2<"+`[8/^7in<dYhi&3=-nRSDih0YkmK2eNE;CWXsH6r5N:d70OqW
%KoNMc=bdZ>n'9<lH?9uN<5EHLJProb[X@kBS/If&Cm!W@peB=%^Kajr[&Dn`J>ln64T9gb<gBk6j*bj]`2lrXY)_"Y[.Qp*R'p5O
%N-*:I*NOY5.(kG>_F(=C#s]$3E3[H_Rr(7UZg%lQ4.nk-hFOiLVZjOIOWr8`%hhS=ZpBl=eNS?JL9:\gjFeAL.jNN!'6K2_0W@ik
%N<IdQDa)&jKlBMe)p6-*Gu`*6V^JU+A5(LL8fl*QnkffEj!aF`/)?.3qpXS$>P(?k=$-1KH(<Ob&OuZk5q\TtjDLZQ'<]*-[&jM^
%-ebT]TpAgn"54IBTBZ;JVZ^[Dk$tEM)4@Uli@sMbB00/bkr\He-nAbIS%238*Pc6>@:p?A%M;8f9pS,o@qHC/6r)AmPR'<iBZqCj
%'!uf!h7r#?jinXG.h<TWSbA#)$i(!/VU.0RdW7Fo,)7jdD0B\sD=/LKeN)1S=;Xm[&bJ^^Vpo\;PJ*8lnrr2,.@S0uZ[uq_QB:p]
%/#7J8V(s^/PtS='G(D=)*3]YcV2@efT9cb.VI'MgoFoV`S`)3OSOqnk<]Wb%B*sW(-KRdt3iI[6D;4;R1:6<&]O#B,Oh?QF:7Zs8
%_tT7"S>KW<:A<meZ\p;\@lI5o[k\Uhf=J7E"rGB-],=,=aC/^S,r]8FP_-6kWkofRDXu'.#)A_YWs@pU=L"(<GY?W.9RusReB5OT
%SbK=d+jNL]TS,^]fO8+n#prX)0e$DI.6#%IEl:]*>taV9g..*WWRYfXnuob*-t6>T`<2[qN71m+!`O*pkE9F$l+`d\Qi%aG)HH]o
%1MDZWo3?V&(mO!Q>OdrRZ>IRlQ1>loKqf>LNm'>HUh[#(9$*^ZpK<'!D(2S35Ybb)(8_!^3*k(rCM7HK;YKdQi5s*9?h@R6eW(='
%]&M#!Rb!htoAQY]Tm'KKoiRWD6,tfsj;m?P&M1N9`MOo3'i`ck!49q>5]B\sSn>>QI`P8;$%+J^P.NHuH0A]\p#'c6Vlj=SXUYAp
%'$X;MbL*I:"t354\Q*5c0-<=8bVKp]#lb':obHb%L?$t6X8=ps5OCCoJ#b`_DReXYG280--<.GV9WBA>"[u'BW[\/mC#3;H4Zm9P
%[eq=S(7OW\2dYXTPNb&LV0RM[\>h^7MN4ra,j87PZE3F+9JgU;T%*&FCaWMmBeW:.7Wi/2S/]*/A2I7FF[!<-*:L6shl`qD<AHsi
%rmpERf5cSr:@Y`W3]*!O-B<7EPOFcJ&<M;oIsgpRG6\sLN:Y*8nNWPs$&'OV3B&'XFLJW6-]ba0(.;oeJ$eg1::9]HK!6RW^a<))
%jjtMJ:2;_fr%g.6>9gtsSiI)bAE7Btr217NNN?f%FU4@KJ6N[F?q+U!V&,JcPdORri#\6Gfj/K-U>shugo?uDC8U_rA2Da[Vl1*U
%@ac3_GWMThhQj#mVlZU*F@!e,SkO9\aTYM/K%pnf'@mt[GY$(Dk6"5O<RZ&]a$pA/^m=6oIAjN]mYD5!Q]\S]4;Z/hi80b+$;m(;
%s+E2'Z_1Fsai8bhZ*?*+C]"Ie1!1cW:>BTT>eQ%>AM!6lP"B4^9GX/\h>7)[Q+]d+64IN*]el_YiM/5_klf.km!arc)DVl_Wn])Y
%7Xt\O=I=)*lQ=7I+A%b38jLNu46dSpT6OXP.H?g3Eg#]^j7Y9<=l>g*`@+MUG@ilt>THs9#*8$:G[kmu'";JrPUTiiX@@2K+d#Pn
%Bpo6]6@*T49mtejnODMfUg#cU),/5YJ=ZJ@>J*J;oZ(,29,aE_1hKF^0lq>n^AdK9HAnW=N3)FBCU#e[Gb,i0ZaT#-RdHNfH/W"X
%DLTo:#Y1-+IZZ_@<:A/"jPN*2rqnh'.&:uYRan:,VK$(mS7g66o#tFe[:.>Ijd[lb`OHaAJ73kbhgSln?J8[r85db//&R]<jSM00
%5NH<[le(cS/bq.H2P"2X_WBGtP[*mRbNhXp1]'Y'QgrQ=mqlML9`=t5+T,LrM=26Q'KB`9o"Zff^c,K#j4SmqaPMCB(OuGg9DA7s
%5K#9QIj0Lka6f'mcG^*e5hn]5QCh1=%292m[`Isu!3.:?h=h88C?mmZdnuY_S)th]DK#9=#WKB-kdX$,:<Wne<+\Znlb]b,AZ)RZ
%r`\AWU`QkG'5Z.:94U*)0G0W\AA`',qt"]V7Z\0?Dh)uHaPSQLK"$*G5:P&`:=fdX4[YF.>GE/'6pk+6i]H/:Q_QHdmrgll5<G,&
%?tRG"Q]Iq`ZD0i4pOIp*Q*O#;&4f#Z['mHI][rB<`!sjP+?KV-Qm)Z%)/+88R)sB$#8bX0,'3bA[%P_;J;X&@=t!)gV_%@th^tqZ
%OV\8PE/S:h-=H-HZW;#%IPRZ^q:PP\X65"=V+6$?'r2eo-ec(_<i29@YZpDGXO-WneFm+&IIn3(VM(suiLm#u?u@0$W\V;K&tJ@1
%XG3,*n\#!h123buC9#bH__N5G/.FCbm75F-69sUHJ0ZBt#:WN3qVMPlW>JZk9f0/g>6hIlmZ:Es+],Ja3Y>^VCE!.*;K"c7B__P@
%q<Pflh7rr5o0<3@5Q'^%s5AJ-nP=Z+2_W);rkfiWrf@*L:Oi/Cs6YksqWkomqg\I[s8:od5Q&D`r8U$AiLg/Fhd?ELgY`%qO8nju
%s7iKVIf$&CnrNfD(>\W<n@RTVmD&\1J,NIK#Hp7NX8~>
%AI9_PrivateDataEnd
