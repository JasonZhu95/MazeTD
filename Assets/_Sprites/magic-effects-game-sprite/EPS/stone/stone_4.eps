%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: stone_4.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 201 226
%%HiResBoundingBox: 0 0 200.7421 225.3159
%%CropBox: 0 0 200.7421 225.3159
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:39:04+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:39:04+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:39:04+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>228</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADkAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXz/wDnr/zk/pvlVZ/L/k6WLUPMgrHc3wpJbWR6Ed1lmH8v2VP2txxxV41/zjfrOs6n+c1x&#xA;5t1vUp5l03Tr7U9cvJXLGSBIfSpJ4qpkVgvbiKdMVYvp350fmZaeeNT89aXeTvLPM0l5BLzntBBK&#xA;5MdvKhNFjUDilCCKfCRir6k/Kr/nKPyR5xWLT9adPL3mBqL6Fw4+qzN0/cztQAn+R6HsOWKvaQQw&#xA;BBqDuCOhGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsU1L81vy603&#xA;zNb+V73XrWHXblhHHZcixEjGipI6gxxux6K7AnFXyt+ev5wfm7e+eta8gR3Q0yxS+a0trS0pBJPB&#xA;LQW/qzk8qSxurMOQX4t9sVY2v5caV5O8sX+t69NFd6ysDCxtQaxRzSDhGwDUMjKzA9KD8cWVKPke&#xA;VvL35H+ePMI+C61+5tfLVhJ3CkG5vF+TQ0GLFAflxqcui6XPNG6/6c376FlDq8aVUKwPzbFINJnf&#xA;+TfIuvK9zazNoV+fieNFMtqx6mkf2kr4A0HgcU0ClOj/AJh/mh+W95HDo/mCQWaH93ZtJ69qyDbe&#xA;2m5BKjuFB8Digh9ffkR+d9p+Z2kXImtDY67pSxDUoVqYH9XkFkhYkmjGM1Vt18T1xQ9SxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvkz/nIT8/8Azy/m+/8Ay98phtMiglS0mvIS&#xA;Re3ErqCVjeo9JCXAHH4jSvKhpirxbzV+WGt+XfL0OuX1ysl1JMFuYEqxi5glWMlfiPIUNO/c4ppP&#xA;/wA1L6fzT5T8ofmVG5OpPGdD8wTg1Yajp9Ghmc/zz27B/wDY4oYx5x80vq2mWfKUy3F0BNdEmpBT&#xA;4eJ9uVafLFkSy/8AOTT38reQfy98kuDHerZTa7qsR+16+oyUjV/8qJYmjxYsD1O/v9LS1tbcCONY&#xA;lq5UHk37Q3xQ2de1TUZoLDSbaSS8uCsaJChkleRtuMSLyNSenfFae4/lj/zh/rmrGPVfP9y+mWzn&#xA;n+ioGV7yQdvVlPNIgfAcm/1Tilm/mL87/wAnfyaU+WfI+iw6leRuq6jHZSiONSlR+/vGWd5pVrSn&#xA;xU3BK9MVe5eU/M+l+afLeneYdLfnY6lCs8VaclJ2aNqV+JGBVvcYqm2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2Kvm7/nKT8i7zWi3n7yvEz6xaxr+l7KIEyTxxCiXEVN/UiUAFR1UC&#xA;m4+JV8/Dz1P5m0/9G605e5EXpRtsFeg+3T+eoqfH8MU2mX5MGDV7nWvyt1eRYbTzVHx0+4fdbbVr&#xA;QNJay+PF6NG3HdqgYoTr8mf+cffNuo/mdFaeadGubDR9Dl+sak9xEywzmFqxwRuQFkErU3UkcKnw&#xA;xVLf+coNSvL/APPLWYuDMbIWlraxUqSBbxvQDvyeRiPniqYeQP8AnGT8zfO08V/rit5f0hiC1xfK&#xA;RcMnf0bX4WH+z4Dwrir6g8pflv8AlZ+T+gT6ooitPq8f+n6/fsrXDA/s86DjyOwjjArtsTir5x/O&#xA;b/nKDzB5wkm0Dyd62leXnrHLcD4by7XvyI/uoz/KpqR9o0PEKvELnT0trasr/wCkEjig6e4xV9af&#xA;84S6nqs/lHzDp84c6ZZ3sT2UjfZEk8Z9eNT/AJPBGI/yvfFX0jirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVfJv8Azk/+QAsjdfmB5TgK2/L1td06FQBEf2ruILT4a7yDt9rpWir5&#xA;vt9dvbXWLLWbZvT1GykiuI5f+LoGDI+3+qMVfpn5f1i31rQdN1m3FLfU7WC8hB68J41kX8GxVc2i&#xA;aM2pjVWsLY6mF4C/MMfr8R+z6tOdPauKsY/NX81vLn5b+Xhqur8p7idjFp2nxUEtxKBUgE7Ki1q7&#xA;np7kgFV8QfmN+afnb80NUN1q84t9KtSWtdPjJW1twa77/bkI/abfwoNsVYqL+xsUMdmvqyn7UzbD&#xA;FXqP5Rf844+b/wAwp4tY1kyaP5ZYhjeSLSe5TrS1jYfZp/uxvh8OXTFX2p5S8o+X/KWhW+h6BaLZ&#xA;6dbA8YxUszNuzyMfid27k4qnGKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVbL&#xA;FFLE8UqLJFIpWSNgGVlYUIIOxBGKvkzzZ/zhhrtx5zmk8ualZ23la6m9VRcGQ3FqjGrxLGqESBOi&#xA;fGK/tU64q+qdG0q00jSLHSbNeNnp9vFa2ynqI4EEaD/gVxVGYq8E/wCcrfyl80edtL0bVPLcBvrz&#xA;R2njn05WUO8VxwPOPkQCUMW46kH2xV4X5I/5xY/NbzJcRrqdr/h3S1NXub8/vAD19O2U+oW/1uI9&#xA;8VfTfkL/AJxq/K3yh6Vx+j/0zqkdD9e1Kk1GHeOGghSh3U8Sw/mxV6oAAKDYDoMVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVSq581+WLbW4NCuNWs4dauhyt9NeeNbhxSvwxFuZqOm2+KprirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSTzh518seT9Gk1jzFfx2Nkmyl93kfskUa1&#xA;Z2Pgo/DFXyT+Zn/OXPm/zC82m+TIn0HS3qn1vZ9QlU7VDCqwbfyVYfz4q8RS91vTdWttcFw/6Thu&#xA;Fuo7pmLyCeNxIrszVq3IVxV+j35e+cbPzl5L0nzLa0VNRgV5Yx0jmWqTR7/ySqy4qyHFXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqtkkjijaSRgkaAs7sQFVQKkknoBirF9K&#xA;/NX8ttW1RtK03zLp11qCsEEEdxGS7FuIEZrSQ1NPgJxVlWKvzc/MvVfMmrfmBq8PmfU5726s724t&#xA;RLPyoiRysoWKMnjEhpso2xVD29pHAo9GIALv8W5b54oUb+IXEMi8QGO6gdiMUvob/nCrzywbWfJN&#xA;1JtT9J6ap7HaK5QV/wCebAf6xxV9V4q7FXYq7FXgGu/85a6Bof5oXflm8sVl8t2kgtpdctpfVdZu&#xA;ILv6SijIjkowU8tid/s4q96tbq2u7aK6tZUntp0WSCeNg6OjiqsrCoIINQRiqrirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVfF3/OUH5y6x5i813XkbRbhodA0uX6vfLExU3d2hpIJCP91xN8IT&#xA;pyBY1+Girw+90qSyiinikZnU1dx8PFv2StDX6cVfaX5Of85O+UfNllZ6V5iuU0fzQEWKT1yEtrqQ&#xA;AAvDKaKrOf8AdbUNTReWKof/AJyO/wCcfYfOlnL5n8uQBPN1sg9aFaKt/EgoEau3rKo+Bu4+E9iq&#xA;r5C0y9mimfTr9WhuYWMYWQFWV1NGjcNQhgdt/lihH3JhSNnkYIB+0dsVb/LXzwPJf5jaV5miV5La&#xA;0n/0qGPZ3t5lMcyqCQCeDniD3pil+kaMHRWFQGAIqCp38QaEYq3irsVeD/8AOVH5xyeUfLy+VtGm&#xA;4eYNbiJmmQ0e2siSrOKbh5SCinw5HqBir500L8nvrnkafVb6U22qzp9YsEY0RIlFQJR/xaP+B29x&#xA;iyp6x/zh1+ZusPfXX5eakTNZwQy3mlyMatAUdRLB/qNz5jwNfHZYvqvFXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq/Pb86vJmv+SfzQ1abULV2sdQvLi9027IIinhuHMlFelOaepxcdQfYiqrEp&#xA;PMluwPG0O4pxL/D0/wBXFCQ4pfVf/OJP5vebtT1Y+RdV9TU9NgtXnsb56tLapFQelI5+1EeQVK7q&#xA;aAbdFWT/APOQP/ONDecr1vM/lH0bbzA4A1CykPpxXdOkqvSiTU2Ndm9j1VeXeSf+cPvzE1a/jbzd&#xA;NHoWmRn96qyx3d06g/ZjETPEvIftM+38pxV9OeUPyU/LDypawRaX5ftJLiAqy6hdxJc3ZdaHn60g&#xA;ZlNRWiUA7AYqzfFXYq7FXxF/zlD5J80aD+aFz5vvLZ9S8v6lLBLaXM1ZIVaONAbSbjx4AFDwX9pO&#xA;5PLFUl8w/mp+nNBM1qn1QwKPrFqSGPqkUU12qlem2LIlkf8AzjU8Xk/y151/Ni/g9eHSLUadYRM3&#xA;ATXEzo7pzIPE8vRWoBNGP0rFmPkX/nMq51XzjZaf5k0q00zQrzjA15E8jPBOxoJZGc8TFXYjiCvX&#xA;kaYq+owQRUbg9DirsVdirsVdirsVdirq70p9OKuxV2KuxV2KuxV2KuxVDajpmm6nataalaQ3tq+7&#xA;W9xGksZI8UcMuKse/wCVT/lZ/wBSbof/AHDbP/qniqNtvIfka1INt5d0yAheIMdnbp8Ph8KDbbFU&#xA;2tLCxs04WlvFbpQDjEioKDoKKB0xVXxV2KuxV2KuxV4j/wA5N/nTrf5e6bpNh5ceKPW9Ud5XmlRZ&#xA;fStoKA0jb4ayO1AT2Dd9wqhvyl/5yD8o/mfp7eUvONrb2muXcfoSWcoBsr8NsRDzJ4v/AMVsa91J&#xA;7Kvnn84PyH81eTvOU1houm3mp6FfEy6RPbRSXDemTX0JPTU/vIqb+Io3fZVPvzqE/kb8sfJv5WLS&#xA;O/kiOueY1UgkzzOwijYjrwPNf9ipxV5TqehC30mGZR+/hH+kU7hv+aTih9nf84s/ma/nDyCul383&#xA;qa35d4Wk5Y1eS2I/0eU13J4qUY+K1PXFL2fFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXxB/zlta+Zo/zbOoazaSPoJht4dGlAKxSQRqHmiElCBJ6zycu4qDSlMVeV+ad&#xA;S8talfHUNEtX0lzRns9jHz7tEV+z8qAfLFJfTH/ON3/OSF5rN3a+SfOU3q6jJ+70jWHPxTMNxBcE&#xA;neQ9Ef8Aa6H4tyoYz/zmX5M1q2836d5yiiebR7m2itJZhyZYbiF3YI/ZVkVgV8SGxV4Z/iTULw/V&#xA;razWSSQFTGA0hao3oq0xRT1D/nGbSfzK0X80tMurLQ76PS70PbatNNbyxW/1U7szSOqpVHQFd9yK&#xA;d8UvuTFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX53aH+cvnTQ9a1&#xA;E6lcr5o0y+lYappesA3Vrc0Y/Hwct6bfylPxG2KvXPJXk7/nGj83ZTa6Za3vlLzM6tI+lQ3GzlRy&#xA;ZrczLNFIoH7KqjUqeIG+Ks68lf8AOIvlXyx5v0/zEdautQXTJ0urWzlijQerHVo2d1JrxfiwoBuM&#xA;Ve7XVra3dvJbXUKXFtKpWWGVQ6Op6hlYEEfPFVDTNF0bSojDpdhb2ETbmO1iSFSfkgUYqjMVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir8ztS+u+UfNGv6UbeJpoJLn&#xA;TZY54xIqhZqcgjVBP7v4a18cVfRf/OMf/OPesafqWm/mF5jc2ZjjaXSNKAPqsJo2jE05P2Bweqp1&#xA;6E06FV9TYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkHnnzz5d8k+&#xA;XZ9f1+4MFjCQiqg5ySyvXjFEm3Jmofo3NAMVfLXnb/nM/wA16gZbXyfpcWkwNVUvbr/Sbqn8yptC&#xA;h9iHxV55+UnnvX5vzs8ta1rWrXV1c3V/Fa3N1NM7s0dy3pcGLHaOrj4egGKv0HxV5d5h/wCcdfy/&#xA;1/8AMWPzxfrO10GiludNUp9UnmhHFHlUoWP2V5KGo1N+pqq9RxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV8Zfmr/zkJ+cmi/mnr2j6Rqy21jY3bW9pYpa20q+lHutTJHJIWYb&#xA;t8X4Yqxa9/5yG/5yC1AGP9MzW6N+zDaWsB8Pt+kHH/BYqlnlT85PzI8seeNP1jVte1C/gWZG1K0u&#xA;LqW4jmtmbjKhRmZK8K8f5TSmKvpL/nMPRJ9V/KaDU7VucWk38F3NTcGGZXt+Qp/lzJ9GKvkbQblE&#xA;09vTRRICVdqbnwP3HFCDlu5NO1uy1CL+8tpI50pt8UT8h+rFL9OfXh9D1+Y9Hjz9Svw8aVrXwpiq&#xA;/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq+EP8AnJ/Sl0n89L+4jHBN&#xA;QS0vQOgq0SxOf9k8THFWEz6naQbPcqSOytz/AOI1xQkOsX1vdvGYuRKAhmIpWvTFL9BdE0IecfyM&#xA;0vRtUUxvrPl61hnZxukslolJaVO6vRxX6cVfAep6drPlXW77RdXtXt760kMN1bP8JDL0YGm6kGqk&#xA;bEGoxVL767W5ZGClSoIIrXFX6a/9Mr/0Y/8AMnFU1xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2Kvnr8/f+cbPMf5gecIPMegalZ25e2jtry3vmmShiLcXjaKOatVahUgdOu+&#xA;yqWeVP8AnCbQIFWXzTr1xey9Tbaei28Y9jJIJXcfJVxV6roX/OPv5OaIY3tPLFrNLFQrLec7tiw/&#xA;aIuGkWv0Yq9DAAFBsB0GKpRrnk/ylr7I2u6LYaq0YpG17bQ3BUf5JlVqfRirHG/Ir8n2uo7k+UdN&#xA;9SLZVEIEZr/NEP3bf7JTirN/Qh9D0OA9Hjw9Onw8aUpTwpiq/FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqhdV1K20vS7zU7rkLWxgkuZ+Iq3&#xA;pwoXag7mi4q+RPMH/Oavna5unXy7odjZWlT6ZuvVupyoOxJR4UFe44n54qxa4/5ys/PEsZP0hBAm&#xA;w4iyg4g/N0Y/jirKfyv/AOcqvzU1DzjpOi6rBba3b6ndw2rokAhuFWVwpeNoiqfCDyPJaUHUdcVf&#xA;YuKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8+fnZ/zlTpfliW4&#xA;0DyaItU16OsdzqDfHaWr9Cq0P76Re4+yp61NVxVLv+cf/wA1fN3n3yb560zzTdfpO5sbMyWszRRq&#xA;zR3MMyvEyxKikBoxTb9ojpTFXyhpOqJYCcmL1XkACA9ARXr9+KvRPyy/Irz1+Zcw1F6aV5dUn1NY&#xA;ulIjIHUW8VVMtO5BCju1cVfV/wCTn5UflL5UikvPKU8Gt6pETBd60Z4ruZGP2owYvgh/1VANPtE4&#xA;q9QxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8vf85Nf85AXVvcze&#xA;QPJtw6X3L0ta1G3JEisdvqkLL8XOv94y9Ps/zYq8BTyhHoVs1xr9ILwAEW70IXkK0oK8moe3TFJD&#xA;03/nC69nj/MrVrFV9S1utJlabbYGKeHgx9vjYfTihlHnD8mfyM/K/wAwTeZvNmqS6hZTO9xo/k5I&#xA;05u3LkEPFv3kKHYcgi9AxPQqvJfzU/Przf57VtPgH6E8pQ0jttEtDxjKD7AndQvqHbZaBRTZe+Kv&#xA;aP8AnCPy3f2+j+ZPMUwKWd/Lb2doDUc2tg7yv7gesqg+PLFX05irsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdir4x/5ye/J6fyZry/mBoNw4sdWv2luUJHqW2oSs9wGjIA/d&#xA;uVYj+UincYqwzyZ5Q81fnJ5muL3VL2PTtD0qFX1fV5AFt7WAAnigYgc34s27eJJoMVt9Ff8AOPvm&#xA;D8hrTXNQ8p+QY7g6skZebVr1KvfxwsAzRS1rxUtXhwTxC9Tir5K17XNX8+ecr/WdUuGluLyR5iXN&#xA;fThDUjiQb8VRSFAxVZpfl+98y+atN8q6Mgaa6uFtoaVKhnP7yRv8lFBLHwBxV+jHlHyvpflXy1p3&#xA;l7S04WWnQrDGT9piN3kan7TsSze5xVN8VdirsVdirsVfNmpf85h6fYfmZcaO9hFN5Mtpzavq0Jdr&#xA;mq/C86r9loxJX4QKldwe2KvofR9Z0rWtMt9U0m7ivdPul5291CwdHX2I8DsR2OxxVGYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FUBrmg6Lr2mTaXrNlDqGn3AAmtp1DoaGoND0IO4I3GKvmT/n&#xA;KXyV5l8veVtPsPJunLYflxApk1e109eP+mF/hlvKfG6cVTizVAYfFvxxV4P+TvmOXy7+aPlnVYiV&#xA;WO+hhn/4w3B9Cb/knI2KpTqcFx5Y8zaxpvH9/YT3Nga/stFKYyfmOOKvpz/nDr8rGtLG4/MHVIqX&#xA;F6rWuiI43WAGk0+/+/GXgp8A3ZsVfTmKuxV2KuxV2KvFP+cpfzWfyd5KGi6bLw17zErwROp+KC1A&#xA;pPL4hmDcE+ZI3XFXxZZ6VFLYO0hpcPvFvQADx/1sVfQn/OFHm69j8w635SmlZrG4tf0jbRMfhSaG&#xA;RIpOI7GRJRX/AFMVfXWKuxV2KuxV2KuxV2KtO6IjO7BUUEsxNAANySTiqna3drdwie1mjuIWqFli&#xA;YOpI2NGUkYqg9e8xaD5fsG1DXNQt9NsVYIbi6kWJOTdFBYipPgMVSryx+Zv5f+aLt7Py/r1nqN4i&#xA;8zbRSD1eI6sEajEDuQNsVTyDVdLuLqS0gvIJrqGomt45EaRCpoeSA1FD44qisVdirsVdirsVWTwQ&#xA;XEElvcRrNBMrRzQyKGR0YUZWU1BBBoQcVeAXH/OHflVfPFvr+maxNYaPDdR3Z0MQiSnBg/px3BkB&#xA;VCw2qjEDviqr5t/5xK0PzP8AmRf+aL3WpYNJ1GQXNxpcEKrKZiAJAJyzKFdgW/u67098Ve7afYWe&#xA;nWFtYWMK29laRJBbQIKKkcahUVfYKKYqr4q7FXYq7FXYq+Sv+c2/Kt0mr+X/ADYlWtZrdtKm8Eki&#xA;d7iL/kYsr/8AA4q8St5tOlshcyLwUR8mIOwI2IH07Yoegf8AOIFne3P5wfWoEP1e1sLmS7ahIVZO&#xA;KKK1ABLsPuOKX3FirsVdirsVdirsVUNQvYrGwub6YMYbWJ55AoBYrGpY0BI3oMVfnz+Y/wCa3nj8&#xA;zNavZLi9lh0FJGez0kScLeCEE+n6irQSSU6u1TWtKDbFXrn/ADhBrlwL7zPoTysbdore+ggJ+FXV&#xA;milZR/lB0B+QxVKv+c27ic+d/L9uZGMEemGRIq/CHe4cMwHiQi1+WKvOvyMguIfzr8u29jcGCRrh&#xA;41nJoQr27hvDqpIxVhUq65omv3S/WJbPWtNnlWWeOR0mSeFyrlZFIbkGB3xV6P8A9DF/nV/g36n+&#xA;mJ/S+ten+muMXr8fS/3n9Thy/wAvnXl74q++cVdirsVdirsVdirsVdirsVdirsVdirwb/nIj/nIq&#xA;68g3lt5d8sx29x5gkUT38twrSR20LD92vFWSsj/a3Oy9jyFFVLy/5gt/+chfyS1bR7wQ23mqz4rK&#xA;ibIl1H+8tZ1BLFY5uJRvD4/bFXy35Y/LD8wPMfmYeT7PTpor6KWRbpbhWjhtzG3GV5noaKhFO++w&#xA;qTir6E8r/ml+S35JmDyhpHra/qE0iDzJ5gtRH6frA8SOTNRliqaIhoo/aLcsVfT2KuxV2KuxV2Ku&#xA;xVD6jFJNp9zFGOUkkToi7CpZSAN8Vfmvq/kHzpoELy6/plzolsZPQ9S+jeASOu5ESsOUwHWsYYDr&#xA;XFX2F/ziv5I8i6T5LPmLy7fSarf6t+51K8lT0TE8JJNusNW4BS1akktselBiryv/AJzdhQecPLkw&#xA;H7x9PkRj7JOSP+JnFWAfkBa/Xfz58tRj9m4ll2NP957WSX/mXirv+cm9DTSPzo19YgFhvmivkA8b&#xA;iJWkP0y88Veq/wDKi7v/AKFV4fVj/iT1f8T+jT95Thw9H+b/AHj+Lh/Pt1xV9WYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYqlHm7zNp/lfyzqfmHUD/AKJplu9xIoNC5UfDGtf2nair7nFX5ua9rl95m13VfMWs&#xA;Tcry/leeUjvJIfhRAeioNgOyimKvdf8AnCrSPMZ85atq8MUieXlsWtbuc1ET3JkjeJF/mdVDHb7I&#xA;O/2hVV65/wA5Y+d9R8s/lj9V0ydre9126WxaVCVkW34NJMUI/m4Kh9mOKviO90trXT7G6Zqm9EjB&#xA;fAIQB99a4rT9KfIuoHUvJPl/USeRvdNs7gtvuZYEeu9P5sVTzFXYq7FXYq7FVK8uBbWk9yUaQQRt&#xA;IY0FWbgpaig03NNsVfm/5/8APfmH8xfNV5ruqy0qG+qWlax28Ck+nDGNvpNNzucVfQn/ADhBr/LT&#xA;vM/l92p6M0F/Anj6qtDKfo9KPFWOf85uThvOnl6Cm8emvJy8ec7Cn0cMVYZ/zjBE0v59aFIlOMX1&#xA;52+X1KdNvpYYq+lvzN/5x007z3+YelebbnVTbW9okEWoaaYFlE6W8hcBXLLx5huLclbb7sVew0FK&#xA;U26U7UxV2KuxV2KuxV2KuxV2KuxV2KuxV2KvmT/nNfzld2ukaJ5Rt6pDqLvfX7g05JbkJDH7guxY&#xA;+6rir54/LX8vn82ahcXOoXI0vyro6C58wazIPgggrsifzTSn4Y1FST2xVneo/wDOT3mXRrmPSvy6&#xA;t7fQPJ+nAQ6bp8lvHNLIimplndwzepKd2ofpJ+Iqpz/zlZ5wuPMOh/lvNOqRT32j/pi5hjrxV7+O&#xA;A0FSTRTGwGKvEtcYmysYyQRCvAAdtl/pir9D/wAopUk/KrycyHkBomnqT7paxqw+gjFWWYq7FXYq&#xA;7FXYq7FX5kebNFv/ACr5t1jQ5VMM+n3U1sQw6ojngw5dnWjKe4OKvZf+cOdG80L+Ysmr29jONCaw&#xA;nt72+ZGWA8mRkRXI4s/qINga0rirNP8AnK38qPzC83+b9G1Ly3pDanYx2H1WRonjDpMs0kh5h2Si&#xA;lXFG8a+2KoX/AJxk/Ijz35a88yeZvNOn/oy3s7aWGzikkikkkmmohIEbPxVU5VJp1FO+KvqjFXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FWHfmH+Unkb8wYrVfMti081lyFrcwyPDKgenJeSGjA8RswPtir&#xA;FPzD/IDStU/KlfIvk1otCS3ukvohJzaO4lQMrC5k+ORuXOvL4qFV2oKYq+ZNT/5xU/Ouyljjj0eK&#xA;+SRgnq2t1AVUk0BYSNEwHetKeOKqv/OR2ha/pnmTyloF5bs82leWdM02J4QzxzSWysJjEaDlSQkd&#xA;K4qkGi/kh+cfmOS3WDy3exwzkGO4vI/qkQVhXmWm4fDQV2G/bqMVfdv5b+Vp/KnkTQ/LtxMs9zpt&#xA;pHDPLHXgZOr8a78QxIFe2KskxV2KuxV2KuxV2KpBq/5feRdZ1NdU1fy9p2oaigCi7urWGaQhRRQz&#xA;Op5ce1enbFU9iiiijWKJFjjQBURQAoA6AAdMVXYq7FXYq7FX/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:be584f8c-00b9-0f44-b6d4-acc5d86f683f</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:be584f8c-00b9-0f44-b6d4-acc5d86f683f</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:fbbcd752-40cf-47ea-8f9f-de9f0e8f6b61</stRef:instanceID>
            <stRef:documentID>xmp.did:a614c27f-509e-c84e-98db-a810ebfb5c47</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a614c27f-509e-c84e-98db-a810ebfb5c47</stEvt:instanceID>
                  <stEvt:when>2018-03-08T16:57:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:be584f8c-00b9-0f44-b6d4-acc5d86f683f</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:39:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>200.742095</stDim:w>
            <stDim:h>225.315887</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -225.316 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 225.316 li
200.742 225.316 li
200.742 0 li
cp
clp
88.7471 82.0086 mo
88.6827 82.0086 88.6827 82.1087 88.7471 82.1087 cv
88.8116 82.1087 88.8116 82.0086 88.7471 82.0086 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.317647 .290196 .301961 rgb
f
173.053 115.527 mo
172.684 115.608 172.318 115.701 171.947 115.77 cv
167.525 116.602 162.357 116.939 157.63 116.699 cv
158.697 120.795 159.34 124.669 159.734 128.72 cv
164.865 127.092 170.182 126.016 175.549 125.494 cv
174.394 122.093 173.669 118.443 173.053 115.527 cv
cp
.203922 .215686 .211765 rgb
f
193.058 108.003 mo
191.72 108.442 190.426 108.886 189.273 109.41 cv
186.585 110.632 183.876 111.883 181.114 112.983 cv
183.438 116.049 184.673 120.876 184.897 125.155 cv
188.522 125.257 192.054 125.745 195.447 127.027 cv
195.906 120.551 194.805 113.585 193.058 108.003 cv
cp
f
171.947 115.77 mo
168.06 116.501 163.594 116.851 159.358 116.764 cv
160.531 118.06 162.303 118.752 164.151 118.73 cv
166.551 118.702 170.57 117.575 172.474 115.655 cv
172.297 115.69 172.124 115.737 171.947 115.77 cv
cp
.14902 .156863 .152941 rgb
f
173.599 118.109 mo
171.152 118.541 li
170.691 118.428 170.208 118.618 169.961 119.026 cv
169.761 119.357 li
169.581 119.654 169.527 120.023 169.579 120.38 cv
166.51 120.618 161.885 120.365 158.411 120.047 cv
158.736 121.584 159.011 123.106 159.235 124.632 cv
159.624 124.619 160 124.599 160.352 124.573 cv
163.433 124.336 171.245 125.52 174.82 123.137 cv
174.339 121.426 173.945 119.713 173.599 118.109 cv
cp
f
194.107 112.522 mo
193.925 111.027 193.639 109.485 193.273 107.932 cv
191.859 108.395 190.487 108.858 189.273 109.41 cv
187.602 110.169 185.922 110.937 184.228 111.677 cv
184.38 112.654 184.547 113.629 184.682 114.608 cv
184.722 114.895 184.733 115.717 184.787 116.755 cv
184.462 116.829 184.144 116.968 183.854 117.198 cv
183.723 117.302 183.572 117.39 183.431 117.487 cv
184.282 119.92 184.765 122.632 184.897 125.155 cv
188.122 125.245 191.272 125.644 194.317 126.632 cv
194.323 126.543 194.341 126.448 194.344 126.36 cv
194.396 125.095 194.172 123.659 193.626 122.475 cv
194.647 119.316 194.469 115.487 194.107 112.522 cv
cp
f
186.213 123.215 mo
186.446 123.179 186.66 123.139 186.878 123.099 cv
186.679 123.47 186.689 123.858 186.839 124.204 cv
186.795 124.533 186.792 124.873 186.869 125.235 cv
186.87 125.242 186.874 125.247 186.875 125.254 cv
189.668 125.452 192.401 125.921 195.049 126.869 cv
195.029 125.689 194.878 124.491 194.669 123.294 cv
194.71 120.227 194.113 117.127 193.355 114.105 cv
193.316 112.202 192.942 110.222 192.378 108.229 cv
191.284 108.597 190.229 108.975 189.273 109.41 cv
189.067 109.504 188.86 109.598 188.654 109.692 cv
188.718 110.046 188.783 110.398 188.848 110.754 cv
188.477 113.194 188.905 115.994 188.703 118.336 cv
188.634 119.129 188.577 119.92 188.532 120.71 cv
187.614 121.019 186.706 121.347 185.777 121.633 cv
184.744 121.95 185.191 123.369 186.213 123.215 cv
cp
.113725 .117647 .113725 rgb
f
160.997 122.509 mo
160.933 122.509 160.933 122.609 160.997 122.609 cv
161.062 122.609 161.062 122.509 160.997 122.509 cv
cp
f
189.836 125.582 mo
190.319 124.312 189.682 122.569 187.914 122.569 cv
186.325 122.569 185.648 123.981 185.879 125.19 cv
187.212 125.254 188.532 125.383 189.836 125.582 cv
cp
.203922 .215686 .211765 rgb
f
189.414 118.009 mo
189.349 118.009 189.349 118.109 189.414 118.109 cv
189.478 118.109 189.478 118.009 189.414 118.009 cv
cp
f
188.08 111.955 mo
185.803 111.955 185.799 115.494 188.08 115.494 cv
190.357 115.494 190.361 111.955 188.08 111.955 cv
cp
f
186.767 121.404 mo
186.186 120.277 185.873 118.931 185.441 117.738 cv
185.22 117.126 184.159 115.344 184.336 114.684 cv
184.723 113.245 186.597 113 187.82 112.542 cv
188.292 112.365 188.764 112.16 189.237 111.946 cv
189.554 112.401 190.067 112.723 190.793 112.723 cv
191.436 112.723 191.918 112.474 192.24 112.099 cv
193.001 115.923 193.459 119.888 193.411 123.812 cv
192.056 123.589 190.71 123.538 189.302 123.277 cv
187.91 123.019 187.515 122.856 186.767 121.404 cv
cp
196.803 115.363 mo
196.507 113.088 196.083 110.842 195.564 108.619 cv
196.128 107.249 195.086 105.292 193.264 105.858 cv
191.387 106.442 189.804 107.576 187.957 108.269 cv
186.233 108.916 184.363 109.377 182.758 110.309 cv
180.245 111.768 179.831 113.714 180.7 116.358 cv
181.618 119.15 182.493 123.974 184.644 126.079 cv
186.902 128.289 191.593 127.159 194.435 128.196 cv
195.119 128.445 196.13 128.101 196.57 127.477 cv
196.766 127.567 196.956 127.668 197.148 127.764 cv
197.526 123.618 197.328 119.391 196.803 115.363 cv
cp
0 0 0 rgb
f
28.2774 181.182 mo
28.6021 180.9 28.9156 180.604 29.2476 180.33 cv
30.2286 178.395 31.71 177.085 33.5328 176.334 cv
34.2417 175.67 34.9546 175.01 35.649 174.329 cv
36.1861 173.804 36.8887 173.825 37.4268 174.13 cv
37.3594 171.25 37.3257 168.374 37.5411 165.514 cv
36.5777 166.162 35.6314 166.835 34.6997 167.525 cv
30.9043 170.337 27.9073 173.535 24.9195 177.09 cv
24.9644 177.159 25.0044 177.232 25.0508 177.301 cv
25.9722 178.679 27.0796 179.958 28.2774 181.182 cv
cp
.203922 .215686 .211765 rgb
f
33.9048 186.205 mo
35.2305 187.292 36.5542 188.362 37.8081 189.437 cv
37.6939 187.171 37.6299 184.896 37.5889 182.616 cv
36.4834 183.933 35.2593 185.138 33.9048 186.205 cv
cp
f
57.2862 161.762 mo
57.6587 161.527 58.044 161.498 58.3892 161.599 cv
59.3116 160.929 60.2544 160.293 61.2124 159.681 cv
56.5474 159.536 51.8716 159.134 47.3414 160.572 cv
45.9341 161.018 44.5787 161.58 43.2583 162.212 cv
43.8565 164.902 44.1744 167.614 44.3545 170.338 cv
48.2217 166.894 52.9019 164.516 57.2862 161.762 cv
cp
f
50.1631 173.688 mo
49.5694 174.188 48.9732 174.684 48.3785 175.181 cv
48.25 175.602 47.9537 175.978 47.4419 176.17 cv
47.2896 176.227 47.1372 176.284 46.9849 176.341 cv
46.253 176.942 45.5162 177.536 44.7705 178.118 cv
44.7139 178.161 44.6539 178.196 44.5938 178.231 cv
44.6045 179.599 44.6104 180.968 44.626 182.335 cv
45.1011 185.722 45.4507 189.131 45.6734 192.559 cv
47.4331 189.38 49.3365 186.268 51.1216 183.085 cv
53.4585 178.917 56.4122 174.198 58.5816 169.344 cv
55.9932 171.054 52.9556 172.186 50.1631 173.688 cv
cp
f
28.3706 181.1 mo
28.6646 180.846 28.9473 180.577 29.2476 180.33 cv
30.2286 178.395 31.71 177.085 33.5328 176.334 cv
33.898 175.992 34.2583 175.645 34.6221 175.303 cv
33.6783 173.757 32.5957 171.927 31.3306 170.302 cv
29.4473 172.006 27.7305 173.828 26.0533 175.763 cv
26.4014 176.324 26.7989 176.858 27.2642 177.355 cv
27.3296 178.648 27.7588 179.901 28.3706 181.1 cv
cp
.317647 .290196 .301961 rgb
f
32.5816 187.168 mo
34.2637 189.367 36.0708 191.485 38.0533 193.42 cv
37.7998 189.827 37.6661 186.224 37.6001 182.603 cv
36.1441 184.341 34.4869 185.887 32.5816 187.168 cv
cp
f
46.9546 168.247 mo
46.0474 167.734 45.0611 167.409 44.0743 167.081 cv
44.1988 168.163 44.2886 169.247 44.3599 170.333 cv
45.191 169.594 46.0591 168.902 46.9546 168.247 cv
cp
f
37.3765 169.655 mo
36.8931 169.909 36.5772 170.448 36.7232 171.163 cv
36.8516 171.792 37.0933 172.404 37.4024 172.989 cv
37.3804 171.877 37.3672 170.765 37.3765 169.655 cv
cp
.14902 .156863 .152941 rgb
f
49.0464 174.622 mo
48.8238 174.808 48.6011 174.995 48.3785 175.181 cv
48.25 175.602 47.9537 175.978 47.4419 176.17 cv
47.2896 176.227 47.1372 176.284 46.9849 176.341 cv
46.253 176.942 45.5162 177.536 44.7705 178.118 cv
44.7134 178.162 44.6534 178.197 44.5933 178.232 cv
44.5977 178.834 44.605 179.436 44.6084 180.039 cv
45.4331 180.342 46.3653 180.466 47.3155 180.415 cv
49.3418 180.305 52.8589 179.963 52.3247 177.017 cv
52.0259 175.369 50.587 174.845 49.0464 174.622 cv
cp
f
45.6797 162.821 mo
49.1143 162.67 49.0059 162.096 52.7798 164.362 cv
52.8111 164.381 52.8345 164.409 52.8633 164.43 cv
54.3443 163.548 55.8316 162.676 57.2862 161.762 cv
57.6587 161.527 58.044 161.498 58.3892 161.599 cv
58.4371 161.564 58.4873 161.533 58.5357 161.498 cv
58.2525 161.506 57.9664 161.519 57.67 161.506 cv
58.0508 160.979 58.2071 160.259 58.0992 159.574 cv
54.4742 159.451 50.8638 159.454 47.3414 160.572 cv
45.9346 161.018 44.5777 161.576 43.2574 162.208 cv
43.2945 162.376 43.333 162.544 43.3682 162.712 cv
44.2002 162.792 44.9913 162.851 45.6797 162.821 cv
cp
f
28.8702 180.662 mo
28.9981 180.554 29.1182 180.437 29.2476 180.33 cv
29.877 179.089 30.7149 178.107 31.7144 177.363 cv
31.1695 176.728 30.5943 176.14 29.9756 175.689 cv
29.4434 174.833 28.9644 173.951 28.5074 173.058 cv
27.5879 174.022 26.6934 175.017 25.8091 176.044 cv
26.2525 176.725 26.71 177.397 27.1944 178.053 cv
27.5811 178.951 28.1944 179.829 28.8702 180.662 cv
cp
.603922 .576471 .588235 rgb
f
36.6783 183.644 mo
35.833 184.557 34.92 185.403 33.9395 186.179 cv
35.1924 187.424 36.4942 188.62 37.8277 189.78 cv
37.7417 188.121 37.6792 186.458 37.6324 184.793 cv
37.3135 184.41 36.9961 184.027 36.6783 183.644 cv
cp
f
52.7574 159.605 mo
50.9361 159.728 49.127 160.005 47.3414 160.572 cv
47.2608 160.597 47.1831 160.63 47.1031 160.656 cv
47.5684 160.682 48.0347 160.702 48.4971 160.7 cv
48.67 160.728 48.8428 160.75 49.0171 160.758 cv
49.2271 160.767 49.4195 160.748 49.605 160.716 cv
50.7491 160.876 51.8433 161.227 53.0005 161.334 cv
53.6153 161.39 53.8008 160.602 53.4649 160.213 cv
53.2608 159.977 53.0166 159.783 52.7574 159.605 cv
cp
.113725 .117647 .113725 rgb
f
48.6792 187.308 mo
49.2857 186.276 49.8868 185.241 50.482 184.201 cv
50.1885 183.911 49.7813 183.719 49.2471 183.719 cv
47.0889 183.719 46.9014 186.766 48.6792 187.308 cv
cp
.317647 .290196 .301961 rgb
f
45.2471 182.573 mo
45.0303 182.573 44.8418 182.614 44.6695 182.676 cv
44.8155 183.736 44.9537 184.797 45.0757 185.861 cv
45.1329 185.866 45.1861 185.877 45.2471 185.877 cv
47.3736 185.877 47.377 182.573 45.2471 182.573 cv
cp
f
35.7144 173.918 mo
35.5591 174.214 34.627 174.432 34.3584 174.574 cv
33.1426 175.215 32.0328 176.006 31.0083 176.926 cv
30.3428 177.524 29.7388 178.362 29.106 179.139 cv
28.3028 178.252 27.5171 177.349 26.7832 176.407 cv
29.2061 173.586 31.9151 171.113 34.9454 168.972 cv
35.0005 169.604 35.0542 170.236 35.1519 170.857 cv
35.2417 171.425 35.9751 173.421 35.7144 173.918 cv
cp
38.9893 169.558 mo
38.7867 168.021 38.7891 166.551 38.3721 165.05 cv
38.0328 163.826 36.542 163.177 35.4341 163.854 cv
30.4136 166.924 26.065 170.761 22.4517 175.41 cv
21.3902 176.776 22.3511 178.527 23.5708 178.872 cv
24.1958 179.671 24.8594 180.438 25.5357 181.188 cv
25.2085 181.838 25.2696 182.62 26.0396 183.226 cv
27.4244 184.316 28.4913 184.954 30.105 183.78 cv
31.1026 183.054 31.8526 181.748 32.7173 180.853 cv
34.1177 179.403 35.5122 178.505 37.3233 177.648 cv
39.0142 176.848 39.7369 175.878 39.7144 173.918 cv
39.6978 172.455 39.1797 171.002 38.9893 169.558 cv
cp
0 0 0 rgb
f
36.4273 186.328 mo
36.5835 186.195 36.7398 186.062 36.896 185.929 cv
37.0293 186.312 37.1568 186.701 37.273 187.092 cv
36.9976 186.844 36.7217 186.594 36.4497 186.348 cv
36.4419 186.342 36.4346 186.335 36.4273 186.328 cv
cp
39.6744 182.056 mo
39.0914 180.618 37.5581 180.13 36.3316 181.174 cv
31.6612 185.149 li
30.3057 186.302 31.2408 188.001 32.5909 188.397 cv
34.3526 190.108 36.1636 191.81 38.0552 193.447 cv
38.0479 193.345 38.0455 193.242 38.0381 193.14 cv
38.1685 193.212 38.3121 193.273 38.4712 193.321 cv
44.5015 195.133 40.5918 184.318 39.6744 182.056 cv
cp
f
53.7837 161.787 mo
52.5899 162.53 51.4117 163.297 50.2476 164.084 cv
49.1763 164.809 48.125 165.56 47.0826 166.324 cv
46.9585 166.272 46.8487 166.212 46.7178 166.166 cv
46.4673 166.077 46.1871 166 45.9175 165.919 cv
45.9307 165.325 45.9497 164.771 45.9297 164.492 cv
45.875 163.705 45.7398 162.83 45.689 161.983 cv
47.7471 161.26 50.6011 161.14 52.5142 161.061 cv
53.2955 161.029 54.0811 161.02 54.8663 161.016 cv
54.4449 161.326 54.0601 161.616 53.7837 161.787 cv
cp
57.2857 157.005 mo
54.8838 156.944 52.3863 156.95 50.002 157.246 cv
47.9039 157.508 44.7828 157.737 42.9527 158.806 cv
41.2349 159.81 41.7261 161.572 41.8462 163.29 cv
41.9869 165.309 41.6294 168.302 42.6021 170.123 cv
42.6646 170.24 42.7525 170.326 42.834 170.421 cv
42.9454 171.774 44.8702 172.992 46.3477 171.842 cv
49.0664 169.727 51.8775 167.735 54.7828 165.884 cv
56.8404 164.572 60.4136 163.387 61.9395 161.479 cv
64.6333 158.111 59.6172 157.063 57.2857 157.005 cv
cp
f
51.1817 180.527 mo
49.8829 182.95 48.4927 185.319 47.0674 187.667 cv
46.8682 186.33 46.7261 184.986 46.6695 183.621 cv
46.5621 181.05 46.5005 180.254 48.565 178.609 cv
50.3062 177.222 52.4483 175.469 54.6465 174.098 cv
54.126 174.98 53.6104 175.795 53.3985 176.223 cv
52.6827 177.67 51.9444 179.105 51.1817 180.527 cv
cp
59.9048 169.769 mo
59.7632 168.718 58.3692 168.088 57.4449 168.372 cv
54.855 169.171 52.502 171 50.2872 172.514 cv
48.2315 173.92 45.1412 175.424 43.5879 177.454 cv
40.9346 180.921 43.0396 188.513 43.878 192.328 cv
44.2456 194.002 46.0747 194.084 47.0953 193.213 cv
47.7696 193.28 48.4717 193.031 48.9346 192.294 cv
51.6568 187.965 54.1973 183.535 56.4908 178.964 cv
57.8536 176.246 60.3301 172.921 59.9048 169.769 cv
cp
f
100.375 202.927 mo
103.294 200.056 106.204 197.187 109.315 194.54 cv
108.877 191.514 108.273 188.501 107.433 185.433 cv
104.149 184.995 102.536 183.181 100.911 180.873 cv
99.9986 184.749 98.2344 188.358 96.3477 191.916 cv
98.2862 195.372 99.751 199.017 100.375 202.927 cv
cp
.203922 .215686 .211765 rgb
f
91.1651 201.726 mo
88.7691 206.034 86.0865 210.203 83.8667 214.588 cv
84.6817 215.105 85.523 215.586 86.3804 216.05 cv
88.9009 213.581 91.5743 211.251 94.191 208.851 cv
92.92 206.619 91.7374 204.227 91.1651 201.726 cv
cp
f
97.7813 214.024 mo
96.1104 215.605 94.4532 217.201 92.8052 218.807 cv
94.0987 219.237 95.4703 219.637 96.8965 219.992 cv
96.8804 217.986 97.1841 215.949 97.7813 214.024 cv
cp
f
106.156 208.455 mo
105.626 212.387 105.133 216.914 103.66 220.885 cv
103.639 221.004 103.615 221.124 103.593 221.243 cv
105.924 221.535 108.306 221.678 110.666 221.624 cv
110.191 217.248 110.328 212.816 110.285 208.37 cv
110.268 206.607 110.214 204.885 110.13 203.182 cv
108.61 204.432 107.104 205.699 105.609 206.98 cv
105.99 207.342 106.234 207.881 106.156 208.455 cv
cp
f
103.082 200.236 mo
103.08 200.249 103.08 200.263 103.078 200.276 cv
104.554 198.84 106.044 197.423 107.575 196.052 cv
106.223 196.186 104.901 196.428 103.593 196.821 cv
101.914 197.325 101.877 199.43 103.082 200.236 cv
cp
.14902 .156863 .152941 rgb
f
99.7422 191.914 mo
101.163 192.428 102.344 192.014 103.52 191.412 cv
104.873 192.715 107.024 193.303 109.172 193.526 cv
108.92 191.92 108.611 190.313 108.249 188.701 cv
107.263 188.568 106.662 188.451 106.67 188.385 cv
106.837 186.931 105.082 185.78 103.793 186.193 cv
104.062 186.107 101.311 187.215 101.468 187.281 cv
101.397 187.251 101.276 187.028 101.135 186.743 cv
101.869 186.351 101.714 185.009 100.754 185.094 cv
100.686 185.085 100.616 185.075 100.547 185.065 cv
100.862 184.513 101.224 183.989 101.644 183.498 cv
101.926 183.113 102.04 182.729 102.044 182.366 cv
101.653 181.898 101.28 181.397 100.908 180.868 cv
100.204 183.856 99.0044 186.688 97.6202 189.458 cv
97.6504 189.447 97.6861 189.435 97.7159 189.425 cv
98.0806 190.258 98.4986 191.464 99.7422 191.914 cv
cp
f
93.6202 207.825 mo
93.2549 207.703 92.897 207.583 92.5245 207.463 cv
92.3155 207.197 92.1338 206.915 92.0166 206.596 cv
91.6377 205.561 89.896 205.298 89.6436 206.596 cv
89.2242 208.756 90.0332 210.262 91.3819 211.401 cv
92.3213 210.555 93.2564 209.703 94.188 208.847 cv
93.9961 208.51 93.8062 208.169 93.6202 207.825 cv
cp
f
110.294 212.617 mo
108.771 213.159 107.28 213.752 105.932 214.49 cv
105.721 214.47 105.511 214.439 105.301 214.415 cv
104.929 216.575 104.439 218.743 103.698 220.771 cv
105.687 220.774 108.11 220.829 110.558 220.653 cv
110.323 217.991 110.295 215.309 110.294 212.617 cv
cp
f
97.7803 214.028 mo
95.9786 215.733 94.1929 217.455 92.4161 219.187 cv
93.8726 219.663 95.3824 220.009 96.9063 220.258 cv
96.8599 218.167 97.1578 216.037 97.7803 214.028 cv
cp
f
90.3262 212.358 mo
88.9087 211.72 87.4996 211.071 86.002 210.631 cv
85.3516 211.775 84.7178 212.927 84.1158 214.094 cv
84.8008 214.837 85.5489 215.495 86.3389 216.092 cv
87.6363 214.819 88.9737 213.583 90.3262 212.358 cv
cp
f
101.122 194.117 mo
98.7847 194.117 98.7808 197.75 101.122 197.75 cv
103.46 197.75 103.463 194.117 101.122 194.117 cv
cp
f
84.6705 216.865 mo
84.9073 216.93 85.1451 216.991 85.3819 217.054 cv
86.1807 216.243 86.9966 215.447 87.8277 214.665 cv
87.3907 214.48 86.9756 214.522 86.6451 214.713 cv
86.2115 214.615 85.7769 214.523 85.3433 214.424 cv
83.7603 214.063 83.0928 216.429 84.6705 216.865 cv
cp
.113725 .117647 .113725 rgb
f
97.3707 215.595 mo
97.316 215.65 97.2569 215.698 97.2149 215.774 cv
97.1456 215.822 97.1211 215.875 97.1416 215.934 cv
97.0245 216.066 96.938 216.207 96.8814 216.352 cv
96.8033 216.462 96.7339 216.576 96.6832 216.701 cv
96.1744 216.646 95.6753 216.579 95.188 216.493 cv
93.9834 217.66 92.7828 218.831 91.5811 220 cv
91.6226 220.012 91.6597 220.03 91.7041 220.038 cv
91.9537 220.088 92.2007 220.134 92.4498 220.182 cv
93.8228 220.814 95.4683 221.819 96.98 221.536 cv
96.7999 219.576 96.9375 217.551 97.3707 215.595 cv
cp
f
110.364 217.256 mo
110.231 217.347 110.099 217.44 109.99 217.555 cv
108.655 217.535 107.313 217.57 106.02 217.509 cv
105.574 217.487 105.127 217.472 104.681 217.452 cv
104.4 218.622 104.071 219.776 103.66 220.885 cv
103.594 221.249 103.524 221.612 103.456 221.976 cv
104.001 222.039 104.542 222.116 105.091 222.167 cv
106.924 222.338 108.878 222.656 110.796 222.731 cv
110.552 220.915 110.426 219.089 110.364 217.256 cv
cp
f
107.885 190.116 mo
106.161 189.377 104.43 189.37 102.647 188.866 cv
101.261 188.474 99.9839 187.807 98.6661 187.263 cv
98.3477 187.966 98.0157 188.665 97.6695 189.36 cv
99.3584 190.095 100.794 191.214 102.685 191.582 cv
104.538 191.944 106.161 191.826 107.885 191.047 cv
108.233 190.89 108.243 190.27 107.885 190.116 cv
cp
f
99.355 198.68 mo
100.95 197.839 100.643 194.876 98.4136 194.876 cv
98.2247 194.876 98.0533 194.903 97.8916 194.943 cv
98.4517 196.163 98.9454 197.408 99.355 198.68 cv
cp
.317647 .290196 .301961 rgb
f
107.434 185.438 mo
105.049 185.12 103.544 184.078 102.281 182.645 cv
102.317 183.723 103.023 184.773 104.414 184.773 cv
104.469 184.773 104.516 184.761 104.568 184.758 cv
104.877 185.398 105.486 185.881 106.414 185.881 cv
106.835 185.881 107.189 185.778 107.481 185.609 cv
107.466 185.552 107.45 185.495 107.434 185.438 cv
cp
f
107.58 207.519 mo
106.958 207.519 106.488 207.753 106.16 208.103 cv
106.17 208.219 106.172 208.336 106.156 208.455 cv
106.062 209.156 105.967 209.879 105.869 210.611 cv
106.171 211.179 106.739 211.597 107.58 211.597 cv
110.205 211.597 110.209 207.519 107.58 207.519 cv
cp
f
113.747 205.175 mo
113.683 205.175 113.683 205.275 113.747 205.275 cv
113.812 205.275 113.812 205.175 113.747 205.175 cv
cp
f
107.08 219.342 mo
107.016 219.342 107.016 219.442 107.08 219.442 cv
107.145 219.442 107.145 219.342 107.08 219.342 cv
cp
.203922 .215686 .211765 rgb
f
95.2554 218.148 mo
95.2505 218.53 95.2574 218.91 95.2652 219.291 cv
94.9649 219.196 94.6617 219.108 94.3648 219.004 cv
94.6499 218.711 94.9498 218.427 95.2554 218.148 cv
cp
99.3189 215.412 mo
99.3394 214.363 98.6851 213.749 97.9024 213.555 cv
97.835 213.452 97.7603 213.357 97.6758 213.272 cv
96.8506 212.447 95.6832 212.583 94.8472 213.272 cv
93.0855 214.725 91.4317 216.32 89.9834 218.09 cv
89.2349 219.003 88.7325 220.138 89.396 221.272 cv
89.9761 222.263 91.3975 222.549 92.3892 222.944 cv
92.7789 223.099 93.1958 223.065 93.5772 222.912 cv
94.8331 223.303 96.0889 223.607 97.3443 223.821 cv
97.313 223.685 97.2906 223.547 97.2623 223.41 cv
97.3116 223.413 97.356 223.425 97.4073 223.425 cv
98.378 223.425 99.5499 222.503 99.4073 221.425 cv
99.1436 219.431 99.2803 217.421 99.3189 215.412 cv
cp
0 0 0 rgb
f
108.385 206.88 mo
108.537 206.732 108.713 206.591 108.898 206.453 cv
109.416 210.874 109.328 215.305 109.846 219.702 cv
108.878 219.909 107.343 219.851 106.631 220.04 cv
106.217 220.15 105.823 220.295 105.437 220.453 cv
105.377 220.455 105.317 220.455 105.257 220.457 cv
105.627 217.848 106.011 215.242 106.429 212.639 cv
106.75 210.637 106.801 208.421 108.385 206.88 cv
cp
113.917 220.27 mo
113.943 218.874 113.517 217.378 113.478 215.96 cv
113.439 214.529 113.522 213.096 113.46 211.663 cv
113.327 208.616 112.912 205.603 112.345 202.608 cv
112.035 200.967 110.065 200.893 109.002 201.726 cv
106.021 204.062 103.896 204.761 103.045 208.752 cv
102.063 213.366 101.551 218.139 100.918 222.811 cv
100.648 224.796 102.984 225.885 104.154 225.012 cv
104.59 225.126 105.08 225.093 105.585 224.816 cv
106.257 224.447 107.126 224.239 108.045 224.063 cv
109.012 223.979 109.98 223.881 110.951 223.764 cv
110.936 223.671 110.926 223.577 110.912 223.484 cv
112.56 223.032 113.878 222.243 113.917 220.27 cv
cp
f
87.7349 211.666 mo
87.1016 212.398 86.4761 213.137 85.8389 213.865 cv
86.606 212.489 87.4629 211.139 88.0562 209.963 cv
88.7417 208.602 89.3829 207.184 90.126 205.833 cv
90.1504 206.065 90.2017 206.302 90.3194 206.545 cv
90.5928 207.11 90.9107 207.612 91.2496 208.079 cv
90.0748 209.266 88.8238 210.408 87.7349 211.666 cv
cp
93.1045 200.51 mo
92.773 199.784 92.212 199.48 91.6275 199.474 cv
90.9537 199.105 90.1114 199.12 89.4361 199.876 cv
85.9717 203.755 83.9908 209.123 81.7115 213.739 cv
80.4014 216.392 79.2837 220.174 83.9126 220.344 cv
85.7032 220.41 86.8516 218.718 87.9444 217.512 cv
89.731 215.541 91.3707 213.437 93.2378 211.539 cv
94.4585 210.298 96.0391 209.471 96.1094 207.628 cv
96.1929 205.45 93.9878 202.445 93.1045 200.51 cv
cp
f
169.833 203.916 mo
168.398 205.579 166.879 207.169 165.342 208.746 cv
164.998 209.114 164.643 209.471 164.296 209.835 cv
164.336 211.714 164.427 213.587 164.644 215.448 cv
166.464 215.268 168.242 214.946 169.953 214.479 cv
169.679 210.969 169.776 207.393 169.833 203.916 cv
cp
.203922 .215686 .211765 rgb
f
164.261 201.58 mo
165.963 199.806 168.057 198.266 169.971 196.85 cv
170.046 195.576 170.177 194.273 170.418 193.011 cv
168.249 193.508 166.1 194.094 163.98 194.785 cv
164.078 196.228 164.155 197.699 164.21 199.225 cv
164.238 200.009 164.252 200.795 164.261 201.58 cv
cp
f
193.002 191.482 mo
192.86 192.264 192.717 193.048 192.576 193.83 cv
193.49 197.032 194.261 200.583 194.459 204.051 cv
195.414 202.946 196.228 201.773 196.843 200.535 cv
197.956 198.295 198.676 195.761 199.095 193.087 cv
197.153 192.263 195.095 191.77 193.002 191.482 cv
cp
f
185.772 199.884 mo
185.721 196.973 185.678 194.061 185.781 191.155 cv
184.37 191.181 182.961 191.234 181.555 191.338 cv
181.347 195.504 181.567 199.681 181.409 203.873 cv
181.301 206.735 181.097 209.589 180.913 212.443 cv
182.334 212.003 183.752 211.451 185.133 210.809 cv
184.596 207.393 184.962 203.564 185.772 199.884 cv
cp
f
169.833 203.916 mo
168.398 205.58 166.879 207.169 165.342 208.746 cv
164.997 209.115 164.64 209.473 164.292 209.839 cv
164.324 211.329 164.39 212.815 164.524 214.294 cv
165.847 214.062 167.127 213.733 168.282 213.234 cv
168.789 213.414 169.332 213.534 169.89 213.628 cv
169.691 210.392 169.78 207.113 169.833 203.916 cv
cp
.14902 .156863 .152941 rgb
f
193.002 191.478 mo
192.86 192.263 192.717 193.046 192.576 193.83 cv
193.392 196.687 194.094 199.822 194.379 202.927 cv
195.218 201.428 195.803 199.758 196.082 197.91 cv
196.258 197.264 196.399 196.571 196.522 195.858 cv
197.096 194.841 197.532 193.724 197.835 192.598 cv
196.272 192.058 194.648 191.704 193.002 191.478 cv
cp
f
185.772 199.884 mo
185.721 196.971 185.678 194.056 185.781 191.147 cv
185.59 191.15 185.398 191.144 185.206 191.148 cv
184.832 193.35 183.825 195.185 182.906 197.097 cv
182.424 197.339 181.941 197.579 181.459 197.821 cv
181.471 199.836 181.485 201.852 181.409 203.873 cv
181.303 206.675 181.105 209.469 180.924 212.264 cv
182.384 211.875 183.765 211.311 185.06 210.591 cv
185.074 210.585 185.087 210.579 185.102 210.572 cv
184.617 207.216 184.981 203.479 185.772 199.884 cv
cp
f
169.769 209.46 mo
167.949 209.726 166.126 209.97 164.298 210.161 cv
164.351 212.312 164.483 214.455 164.792 216.579 cv
165.888 216.401 166.943 216.066 167.921 215.477 cv
168.031 215.411 168.126 215.334 168.208 215.25 cv
168.805 215.191 169.402 215.122 169.999 215.061 cv
169.831 213.208 169.775 211.333 169.769 209.46 cv
cp
.113725 .117647 .113725 rgb
f
185.288 202.497 mo
185.134 202.535 184.979 202.59 184.82 202.688 cv
183.667 203.405 182.513 204.123 181.359 204.839 cv
181.238 207.544 181.055 210.243 180.884 212.943 cv
180.993 212.843 181.11 212.756 181.21 212.64 cv
181.338 212.604 181.464 212.562 181.592 212.525 cv
182.87 212.289 184.106 211.943 185.235 211.386 cv
184.707 208.619 184.812 205.555 185.288 202.497 cv
cp
f
193.002 191.482 mo
192.86 192.265 192.717 193.048 192.576 193.83 cv
193.294 196.347 193.928 199.079 194.264 201.817 cv
194.398 201.201 194.453 200.566 194.391 199.912 cv
194.622 199.55 194.859 199.191 195.085 198.826 cv
195.896 197.509 196.298 196.127 196.663 194.723 cv
197.582 194.72 198.483 193.915 198.706 193.06 cv
198.716 193.018 198.723 192.974 198.733 192.932 cv
196.898 192.198 194.966 191.749 193.002 191.482 cv
cp
f
182.414 205.94 mo
181.403 205.94 181.401 207.51 182.414 207.51 cv
183.424 207.51 183.426 205.94 182.414 205.94 cv
cp
.203922 .215686 .211765 rgb
f
184.646 192.913 mo
184.803 194.45 184.688 196.552 184.714 197.728 cv
184.77 200.223 184.371 202.847 184.327 205.36 cv
184.295 207.153 184.1 208.947 183.866 210.731 cv
183.59 210.821 183.313 210.909 183.033 210.986 cv
183.225 205.018 183.085 198.942 183.068 192.991 cv
183.586 192.939 184.132 192.9 184.646 192.913 cv
cp
188.313 190.753 mo
187.262 188.274 184.07 188.925 181.85 189.118 cv
181.079 189.185 180.544 189.601 180.237 190.14 cv
179.58 190.402 179.065 190.988 179.065 191.91 cv
179.064 199.466 179.32 207.264 178.865 214.79 cv
178.783 216.149 180.204 216.988 181.397 216.719 cv
183.812 216.175 186.147 217.533 187.382 214.767 cv
188.115 213.127 187.921 210.524 188.131 208.721 cv
188.44 206.068 188.164 203.417 188.444 200.77 cv
188.604 199.271 188.719 198.163 188.571 196.665 cv
188.406 194.99 188.965 192.291 188.313 190.753 cv
cp
0 0 0 rgb
f
194.276 194.119 mo
194.942 194.41 195.755 194.805 196.441 195.124 cv
196.196 196.162 195.904 197.188 195.55 198.196 cv
195.177 196.905 194.61 195.486 194.276 194.119 cv
cp
200.742 193.884 mo
200.585 193.798 200.419 193.734 200.26 193.652 cv
200.341 192.809 199.923 191.984 198.824 191.804 cv
196.643 191.446 191.494 187.41 190.082 191.472 cv
189.55 193.001 190.694 195.376 191.083 196.842 cv
191.869 199.804 192.578 202.695 192.559 205.781 cv
192.551 207.015 193.467 207.652 194.424 207.702 cv
194.412 207.851 194.411 208.003 194.396 208.15 cv
194.524 208.002 194.651 207.847 194.778 207.694 cv
195.696 207.602 196.552 206.97 196.559 205.781 cv
196.56 205.608 196.547 205.438 196.544 205.266 cv
198.75 201.801 200.061 197.916 200.742 193.884 cv
cp
f
167.858 207.614 mo
167.956 207.51 168.061 207.413 168.16 207.31 cv
168.352 208.354 168.451 209.441 168.666 210.376 cv
168.854 211.193 169.065 212.005 169.281 212.815 cv
168.261 212.967 167.238 213.128 166.215 213.29 cv
166 212.041 165.929 210.706 165.86 210.042 cv
165.858 210.022 165.851 210.004 165.848 209.984 cv
165.849 209.91 165.84 209.837 165.83 209.764 cv
166.374 208.996 167.363 208.142 167.858 207.614 cv
cp
173.415 212.791 mo
172.905 210.98 172.462 209.151 172.089 207.307 cv
171.764 205.703 171.64 204.131 170.716 202.743 cv
169.975 201.629 168.576 201.448 167.575 202.338 cv
165.568 204.123 162.479 206.667 161.638 209.313 cv
161.453 209.895 161.608 210.507 161.95 210.987 cv
162.171 213.412 162.459 216.624 163.973 218.352 cv
165.854 220.499 169.537 218.308 171.608 217.64 cv
174.233 216.795 174.086 215.178 173.415 212.791 cv
cp
f
162.042 74.2362 mo
159.016 72.1009 156.245 68.9442 152.811 67.5033 cv
151.544 66.9715 151.599 65.3197 152.393 64.7166 cv
152.266 64.6439 152.146 64.5609 152.02 64.4857 cv
148.434 66.0306 145.457 68.1439 144.823 71.4574 cv
144.731 71.9403 144.471 72.2425 144.147 72.4017 cv
145.618 74.4866 146.914 76.4959 149.267 77.224 cv
149.924 76.5975 151.192 76.5731 151.698 77.5238 cv
153.256 77.5164 154.817 77.3787 156.377 77.3919 cv
159.58 77.4188 162.662 77.3314 165.728 76.8616 cv
164.499 75.9832 163.272 75.1038 162.042 74.2362 cv
cp
.203922 .215686 .211765 rgb
f
186.567 68.7948 mo
185.468 63.3363 183.617 56.682 180.054 52.2513 cv
179.874 51.8231 179.674 51.4076 179.467 50.9964 cv
174.74 54.578 169.967 58.0745 164.459 60.3485 cv
164.244 60.4373 164.017 60.5243 163.783 60.6112 cv
165.613 62.3387 167.39 64.1199 169.215 65.8563 cv
170.499 66.8099 171.692 67.9134 172.898 69.0111 cv
173.353 69.4246 173.806 69.8431 174.259 70.2596 cv
175.436 71.1883 176.622 72.0887 177.787 73.0096 cv
180.48 71.8426 183.139 70.5931 185.844 69.4354 cv
186.14 69.3094 186.453 69.1966 186.765 69.0833 cv
186.696 68.9891 186.641 68.8856 186.567 68.7948 cv
cp
f
162.042 74.2362 mo
160.988 73.493 159.966 72.6253 158.937 71.7503 cv
158.342 72.0321 157.79 72.3997 157.317 72.8626 cv
155.399 74.7415 157.889 78.1024 160.222 76.6273 cv
160.432 76.4945 160.621 76.3748 160.809 76.263 cv
161.16 76.1668 161.509 76.1024 161.858 76.0799 cv
162.727 76.2313 163.556 76.3568 164.533 76.2171 cv
164.605 76.2069 164.672 76.1805 164.741 76.1595 cv
163.841 75.5159 162.942 74.8719 162.042 74.2362 cv
cp
.317647 .290196 .301961 rgb
f
162.289 74.4124 mo
161.595 74.5936 160.922 74.8607 160.275 75.2025 cv
159.778 75.4647 159.318 75.8275 158.797 76.0448 cv
157.535 76.0159 156.276 75.8924 155.136 75.8192 cv
153.999 75.7459 153.251 76.5487 152.999 77.4969 cv
154.125 77.4525 155.251 77.3822 156.377 77.3919 cv
159.575 77.4188 162.652 77.3236 165.714 76.8519 cv
164.572 76.036 163.432 75.2205 162.289 74.4124 cv
cp
.14902 .156863 .152941 rgb
f
182.215 57.6458 mo
181.95 57.2567 181.474 56.9691 180.987 56.9027 cv
180.254 55.1517 179.319 53.4471 178.469 51.7498 cv
175.789 53.7669 173.074 55.7269 170.208 57.432 cv
170.174 58.1009 170.023 58.8392 170.091 59.3158 cv
170.113 59.4735 170.148 59.6224 170.187 59.7679 cv
168.365 58.784 166.31 59.9398 164.333 61.1224 cv
165.405 62.1468 166.465 63.1844 167.527 64.22 cv
167.721 64.0325 167.866 63.8646 167.89 63.7581 cv
168.162 63.9979 168.561 64.4984 168.898 64.4798 cv
169.795 64.4305 170.542 64.3787 171.258 64.2449 cv
171.292 64.4129 171.326 64.5794 171.367 64.7371 cv
171.578 65.5535 172.282 66.2816 173.11 66.4798 cv
173.558 66.5877 173.976 66.5462 174.377 66.4603 cv
174.359 66.6199 174.348 66.7415 174.343 66.7908 cv
174.224 67.908 175.143 68.7357 176.055 69.1366 cv
175.923 69.2899 175.867 69.5618 175.898 69.9691 cv
175.728 70.5911 175.774 71.1346 175.961 71.5858 cv
176.555 72.0443 177.145 72.5033 177.731 72.9661 cv
177.764 72.973 177.795 72.9862 177.829 72.992 cv
180.507 71.8299 183.153 70.5867 185.844 69.4354 cv
186.349 69.2196 186.887 69.0296 187.436 68.8465 cv
186.198 64.826 184.416 60.8856 182.215 57.6458 cv
cp
f
152.811 67.5033 mo
152.717 67.4637 152.646 67.4075 152.566 67.3568 cv
152.294 67.5638 152.021 67.7625 151.751 67.9949 cv
150.333 67.3851 148.338 67.6932 146.309 68.3563 cv
145.572 69.2581 145.048 70.2811 144.823 71.4574 cv
144.731 71.9403 144.471 72.2425 144.147 72.4017 cv
144.378 72.7303 144.606 73.057 144.833 73.3778 cv
147.107 72.4202 149.577 71.4334 149.602 71.6073 cv
149.818 73.1453 152.16 73.6532 153.114 72.5345 cv
154.394 71.0325 155.319 70.3885 156.605 69.8324 cv
155.405 68.9032 154.16 68.0692 152.811 67.5033 cv
cp
f
162.042 74.2362 mo
160.966 73.4774 159.923 72.5887 158.871 71.6947 cv
158.264 72.3558 158.135 73.3709 158.571 74.1761 cv
158.911 74.8035 159.657 74.8914 160.204 74.5955 cv
160.229 74.596 160.254 74.5965 160.271 74.5965 cv
160.481 74.595 160.694 74.6019 160.905 74.5985 cv
161.335 74.5907 161.755 74.4847 162.122 74.2938 cv
162.095 74.2747 162.068 74.2552 162.042 74.2362 cv
cp
.603922 .576471 .588235 rgb
f
178.377 60.0384 mo
177.689 59.5301 176.317 59.9437 176.056 59.1951 cv
175.919 58.8006 175.548 58.4344 175.096 58.4637 cv
174.964 58.4725 174.829 58.5013 174.696 58.5194 cv
175.003 58.3451 175.282 58.1258 175.54 57.8778 cv
175.711 58.0809 175.894 58.2752 176.103 58.4495 cv
176.833 59.0579 177.849 58.0926 177.163 57.3885 cv
177.046 57.0033 176.928 56.6175 176.811 56.2318 cv
177.051 55.5101 176.504 54.9159 175.862 54.7977 cv
175.967 54.5228 176.034 54.2547 176.104 53.9857 cv
176.617 55.0985 177.122 56.1224 177.451 56.9281 cv
177.896 58.0194 178.317 59.2205 178.77 60.4359 cv
178.653 60.2879 178.528 60.1497 178.377 60.0384 cv
cp
184.121 63.8778 mo
183.419 61.5106 182.117 59.2327 181.143 57.0443 cv
180.333 55.2269 179.513 53.4124 178.627 51.6302 cv
176.57 53.18 174.494 54.6961 172.347 56.0955 cv
172.137 56.9544 172.17 57.7659 172.868 58.3973 cv
173.087 58.5955 173.335 58.7064 173.591 58.7542 cv
171.791 59.2791 169.928 60.3817 168.362 61.078 cv
167.437 61.4901 166.523 61.9281 165.606 62.3568 cv
166.066 62.8055 166.53 63.2503 166.99 63.7 cv
167.763 63.3665 168.535 63.0301 169.309 62.6971 cv
170.051 62.3778 174.249 60.264 174.152 60.2235 cv
174.223 60.2528 174.141 61.077 174.463 61.1751 cv
176.531 61.8065 177.169 64.2489 179.615 64.3128 cv
179.877 64.3197 180.106 64.1927 180.277 64.0086 cv
180.765 64.9901 181.31 65.9222 181.963 66.7337 cv
182.34 68.0365 182.695 69.349 183.025 70.6766 cv
183.961 70.2567 184.899 69.8397 185.844 69.4354 cv
186.023 69.3592 186.215 69.2943 186.399 69.2235 cv
185.726 67.408 184.937 65.6097 184.121 63.8778 cv
cp
.113725 .117647 .113725 rgb
f
182.03 68.1361 mo
181.704 68.3153 li
181.623 68.3597 181.694 68.4749 181.774 68.4368 cv
181.887 68.3836 182 68.3309 182.112 68.2777 cv
182.207 68.2332 182.123 68.0848 182.03 68.1361 cv
cp
.203922 .215686 .211765 rgb
f
177.747 64.8416 mo
177.683 64.8416 177.683 64.9417 177.747 64.9417 cv
177.812 64.9417 177.812 64.8416 177.747 64.8416 cv
cp
f
175.914 57.3201 mo
174.963 57.3201 174.962 58.7967 175.914 58.7967 cv
176.864 58.7967 176.865 57.3201 175.914 57.3201 cv
cp
f
177.42 71.1942 mo
175.431 71.1077 173.114 67.7005 171.705 66.2386 cv
169.917 64.3831 168.159 62.4989 166.407 60.6092 cv
168.575 59.452 170.607 57.7196 172.761 56.5399 cv
174.874 55.3826 177.005 54.2596 179.144 53.1512 cv
181.442 57.8929 183.5 62.7498 185.087 67.7718 cv
182.472 68.9764 179.968 71.3045 177.42 71.1942 cv
cp
189.142 67.3709 mo
187.349 61.514 184.932 55.8387 182.228 50.3431 cv
182.108 49.0765 180.725 47.8426 179.217 48.6126 cv
176.372 50.0653 173.544 51.5516 170.742 53.0863 cv
168.276 54.4368 165.894 56.575 163.344 57.6615 cv
162.16 58.1663 162.083 59.2855 162.596 60.1493 cv
162.138 60.8553 162.061 61.8099 162.792 62.6019 cv
165.001 64.994 167.23 67.366 169.495 69.7049 cv
171.025 71.2845 173.043 74.2557 175.121 75.1312 cv
179.542 76.9935 183.192 71.5355 187.321 71.1004 cv
187.831 71.3895 188.469 71.3973 189.112 70.9032 cv
189.152 70.8729 189.192 70.8421 189.232 70.8118 cv
190.534 69.8123 190.4 68.055 189.142 67.3709 cv
cp
0 0 0 rgb
f
146.241 69.8992 mo
146.96 67.9408 149.092 66.5042 151.021 66.0311 cv
151.67 68.2782 153.264 69.9217 155.19 71.3289 cv
155.074 71.4378 154.947 71.5311 154.836 71.6473 cv
154.105 72.4183 154.163 73.3504 154.602 74.0516 cv
153.711 74.0921 152.822 74.1375 151.932 74.1761 cv
149.254 74.2923 144.397 74.9256 146.241 69.8992 cv
cp
166.221 74.1605 mo
164.728 72.6771 163.148 71.325 161.394 70.1571 cv
158.956 68.534 155.328 67.5399 154.702 64.3172 cv
154.45 63.0189 153.308 62.6761 152.324 62.9876 cv
151.903 62.3475 151.159 61.9139 150.206 62.1077 cv
145.3 63.1063 139.162 69.8348 142.449 74.9891 cv
144.034 77.4725 147.016 78.2635 149.775 78.2689 cv
154.77 78.2786 159.817 77.8079 164.807 77.5745 cv
166.5 77.4954 167.493 75.4246 166.221 74.1605 cv
cp
f
69.1856 19.764 mo
70.6358 21.4569 71.9068 23.3192 72.9761 25.2933 cv
73.6539 23.5335 74.3457 21.7782 75.0342 20.0223 cv
76.1861 15.1571 76.9693 9.05843 78.8897 3.96126 cv
76.168 5.48665 73.7432 8.44613 71.6475 10.4544 cv
71.1905 10.8538 70.8516 11.2982 70.6065 11.7674 cv
70.4566 11.9412 70.3086 12.1165 70.1626 12.2923 cv
69.545 12.1497 68.9019 12.1248 68.2632 12.2684 cv
67.8506 12.3607 67.44 12.4808 67.0289 12.5936 cv
67.7852 14.9744 68.5279 17.3577 69.1856 19.764 cv
cp
.203922 .215686 .211765 rgb
f
67.3765 30.8651 mo
64.5328 25.8978 62.1607 20.682 60.522 15.1995 cv
58.0972 16.4832 55.7579 18.0618 53.5738 19.8529 cv
56.7637 24.2269 61.149 27.6668 64.5777 32.0213 cv
66.0884 33.9403 67.3882 36.0277 68.6993 38.0951 cv
68.9517 37.1209 69.2295 36.1551 69.5181 35.1927 cv
68.8199 33.742 68.1055 32.3001 67.3765 30.8651 cv
cp
f
82.1138 27.3641 mo
88.7139 23.1512 95.9253 19.8787 102.99 16.4242 cv
103.983 15.743 104.989 15.0789 106.002 14.4256 cv
105.116 13.2259 104.079 12.1165 102.794 11.1527 cv
98.1036 7.63363 92.3619 6.87777 87.1143 4.67952 cv
86.9244 4.59993 86.7549 4.51839 86.5733 4.43734 cv
85.2085 9.15364 83.7915 13.8597 82.6412 18.6346 cv
81.876 21.8118 81.0708 24.9784 80.2334 28.1366 cv
80.8594 27.8763 81.4903 27.6292 82.1138 27.3641 cv
cp
f
110.926 22.2845 mo
110.722 21.762 110.452 21.3211 110.137 20.952 cv
107.941 22.6341 105.704 24.2606 103.48 25.9036 cv
101.882 28.1771 99.6133 29.6449 97.108 30.825 cv
96.5967 31.242 96.0743 31.6439 95.5708 32.0726 cv
93.7046 33.661 91.8916 35.3436 90.0259 36.9427 cv
90.2447 37.3436 90.4585 37.7479 90.6578 38.159 cv
91.9541 37.7332 93.1924 37.3534 94.2915 36.9969 cv
101.351 34.7059 107.16 30.535 112.945 26.2523 cv
112.208 24.9803 111.478 23.6956 110.926 22.2845 cv
cp
f
69.1856 19.764 mo
69.6812 20.3426 70.1514 20.9451 70.6045 21.5609 cv
71.979 21.0355 73.3438 20.4915 74.6773 19.8914 cv
74.8306 19.8226 74.9659 19.7401 75.1148 19.6678 cv
76.1514 15.1698 76.9087 9.68929 78.5381 4.92513 cv
77.4209 5.78646 76.3379 6.7723 75.1456 7.53255 cv
73.0088 8.89339 71.1675 10.304 69.4327 11.8778 cv
68.6714 12.2259 67.9136 12.6073 67.1587 13.0013 cv
67.8702 15.2464 68.5655 17.495 69.1856 19.764 cv
cp
.317647 .290196 .301961 rgb
f
60.9258 16.5233 mo
60.1446 16.9749 59.3711 17.4168 58.6109 17.8324 cv
58.1006 18.1107 57.6001 18.3993 57.108 18.6966 cv
56.3267 19.076 55.5669 19.4964 54.8614 20.0184 cv
54.6104 20.2039 54.3755 20.4032 54.1441 20.6058 cv
55.6983 22.6043 57.4834 24.4246 59.2857 26.2498 cv
59.3951 26.1527 59.5039 26.055 59.6138 25.9578 cv
60.7915 25.4686 61.9229 24.8914 63.0215 24.2557 cv
63.2906 24.1639 63.5601 24.0706 63.8296 23.9788 cv
62.7217 21.5511 61.7471 19.0658 60.9258 16.5233 cv
cp
f
88.9961 12.1903 mo
89.7403 12.2835 90.2354 11.9744 90.5123 11.5086 cv
91.6641 11.7601 92.8042 12.1639 93.9385 12.7865 cv
95.7046 13.7552 97.5733 14.6385 99.2579 13.9051 cv
99.3731 13.9368 99.4869 13.9764 99.6031 14.0008 cv
100.083 14.8646 100.408 15.7904 100.982 16.5965 cv
101.145 16.825 101.353 16.9837 101.574 17.1117 cv
102.046 16.8826 102.519 16.6546 102.99 16.4242 cv
103.373 16.161 103.764 15.908 104.15 15.6493 cv
104.138 14.515 103.711 13.4642 103.025 12.5335 cv
103.059 11.9408 102.805 11.3162 102.28 11.0575 cv
101.71 10.7762 101.13 10.5223 100.551 10.2645 cv
99.2193 9.3929 97.7193 8.79085 96.3995 8.5389 cv
95.0669 8.01497 93.7339 7.49398 92.417 6.9388 cv
92.4063 6.91439 92.3946 6.89144 92.3829 6.868 cv
92.4585 6.76595 92.5376 6.66829 92.5967 6.54769 cv
92.773 6.18734 92.6651 5.85384 92.3531 5.618 cv
91.2593 4.79085 90.2447 5.2098 88.9498 4.95052 cv
88.355 4.83138 87.8179 4.61849 87.2881 4.40023 cv
87.0874 4.28157 86.8887 4.15853 86.688 4.03988 cv
85.7149 7.41292 84.7164 10.7811 83.7964 14.1702 cv
85.2212 13.4954 86.6695 12.9046 88.1036 12.0897 cv
88.4009 12.1248 88.6993 12.1527 88.9961 12.1903 cv
cp
f
90.6568 38.1571 mo
91.774 37.7909 92.8521 37.4564 93.8306 37.1439 cv
93.6875 36.9657 93.5298 36.7982 93.3423 36.661 cv
93.4019 35.9159 93.1495 35.1898 92.4971 34.7811 cv
91.6802 35.512 90.8599 36.2391 90.0303 36.9505 cv
90.2471 37.3485 90.459 37.7493 90.6568 38.1571 cv
cp
.14902 .156863 .152941 rgb
f
88.0694 23.7469 mo
88.0899 23.7826 88.1182 23.8035 88.1407 23.8363 cv
90.5332 22.534 92.9688 21.2996 95.4224 20.097 cv
95.3677 19.9212 95.2974 19.7479 95.1988 19.5789 cv
94.5025 18.3885 92.919 18.1292 91.6973 18.5164 cv
90.9078 18.7669 89.8887 19.3836 89.0874 20.1746 cv
87.479 20.0643 86.815 22.0755 87.836 23.1243 cv
87.8809 23.3343 87.9502 23.5428 88.0694 23.7469 cv
cp
f
103.548 16.0516 mo
104.583 15.3494 105.63 14.6649 106.687 13.994 cv
106.594 13.8573 106.508 13.7215 106.412 13.5838 cv
105.331 12.0399 102.542 12.9154 103.186 14.9442 cv
103.303 15.3148 103.429 15.682 103.548 16.0516 cv
cp
f
110.122 22.0521 mo
110.063 21.7352 109.994 21.4256 109.921 21.1175 cv
108.654 22.0848 107.378 23.0404 106.095 23.9847 cv
106.131 24.139 106.165 24.2928 106.202 24.4466 cv
106.01 24.3846 105.812 24.3538 105.613 24.3397 cv
104.895 24.8675 104.18 25.4002 103.464 25.93 cv
102.857 26.7884 102.148 27.5233 101.374 28.179 cv
101.352 28.4237 101.348 28.6673 101.379 28.9051 cv
100.119 29.6478 98.9781 30.8114 98.2789 31.6937 cv
97.1856 33.0736 97.7579 34.5965 98.8814 35.1761 cv
103.659 32.9564 107.922 29.9564 112.14 26.847 cv
111.463 25.2489 110.793 23.6493 110.122 22.0521 cv
cp
f
60.3418 14.6087 mo
60.2315 14.6742 60.1206 14.7386 60.0166 14.8216 cv
58.8638 15.7391 57.8033 16.7503 56.8052 17.8197 cv
55.7539 18.5614 54.7422 19.3187 53.7662 20.1068 cv
54.814 21.5116 55.979 22.825 57.1958 24.1043 cv
57.5459 23.7308 57.8931 23.3607 58.2452 22.9837 cv
58.7149 22.4808 59.834 21.5379 60.92 20.4325 cv
61.3121 20.2293 61.6997 20.0179 62.0918 19.8138 cv
61.438 18.1058 60.8497 16.3719 60.3418 14.6087 cv
cp
.603922 .576471 .588235 rgb
f
68.272 16.5965 mo
69.8726 15.8011 71.4825 14.9788 72.8633 13.9144 cv
74.1211 13.43 75.3619 12.93 76.6011 12.4212 cv
76.9976 10.4979 77.4395 8.55892 77.9844 6.69027 cv
77.9234 6.75032 77.8609 6.7972 77.7999 6.85921 cv
77.7901 6.86946 77.7876 6.88167 77.7784 6.89241 cv
77.6065 6.73372 77.3848 6.62777 77.1158 6.64046 cv
73.4898 6.81527 69.8956 8.76546 66.5298 11.0262 cv
67.1216 12.8807 67.7124 14.7347 68.272 16.5965 cv
cp
f
95.2681 6.82259 mo
95.316 6.493 95.2183 6.14339 94.96 5.84652 cv
93.2471 3.87728 89.4498 3.8182 86.7706 3.75521 cv
86.2867 5.43489 85.7964 7.11361 85.3091 8.79329 cv
85.9263 8.51253 86.523 8.20687 87.0357 7.82747 cv
88.9771 8.31234 90.8135 9.13997 92.6924 10.1595 cv
94.6397 11.2157 96.5547 13.1644 98.7872 12.0057 cv
99.1167 11.8348 99.3033 11.4534 99.3096 11.0951 cv
99.3453 9.04818 97.2891 7.74691 95.2681 6.82259 cv
cp
f
107.808 28.1595 mo
107.719 28.1073 107.182 29.8914 106.995 30.5008 cv
108.737 29.3275 110.444 28.0975 112.141 26.8465 cv
112.124 26.8182 112.109 26.7894 112.093 26.7616 cv
111.841 26.3162 111.57 25.8826 111.281 25.4613 cv
111.174 25.0897 111.035 24.8861 110.868 24.8314 cv
110.884 24.5301 110.758 24.2689 110.442 24.1668 cv
110.38 24.1468 110.317 24.1263 110.254 24.1063 cv
109.878 23.9847 109.484 24.2493 109.374 24.6063 cv
109.274 24.9295 109.229 25.2821 109.218 25.6512 cv
107.615 24.8158 106.227 27.2171 107.808 28.1595 cv
cp
.113725 .117647 .113725 rgb
f
82.7471 18.2157 mo
82.7129 18.3558 82.6749 18.495 82.6412 18.6346 cv
82.3892 19.6815 82.1192 20.7235 81.8594 21.7679 cv
83.4156 21.3333 83.7149 19.2713 82.7471 18.2157 cv
cp
.317647 .290196 .301961 rgb
f
98.5801 32.0086 mo
98.5162 32.0086 98.5157 32.1087 98.5801 32.1087 cv
98.6446 32.1087 98.6446 32.0086 98.5801 32.0086 cv
cp
f
97.4136 15.5086 mo
97.3492 15.5086 97.3492 15.6087 97.4136 15.6087 cv
97.4781 15.6087 97.4781 15.5086 97.4136 15.5086 cv
cp
f
62.3101 28.285 mo
60.2891 26.0492 56.4507 23.2801 54.9654 20.286 cv
56.4854 19.0369 58.1612 17.9896 59.9156 17.0492 cv
61.3863 19.6815 62.4454 23.0374 63.7666 25.597 cv
64.6412 27.2904 65.316 28.8924 65.878 30.7122 cv
66.1119 31.4696 66.2798 33.0833 66.7002 34.2376 cv
66.2437 33.3973 65.6578 32.3045 65.3453 31.9051 cv
64.3746 30.6644 63.3667 29.4539 62.3101 28.285 cv
cp
70.9742 33.6258 mo
70.0118 30.1439 68.9068 26.7762 67.2207 23.578 cv
65.5044 20.3231 64.5249 16.2674 62.3072 13.3631 cv
61.3418 12.099 59.6182 12.4071 58.8487 13.3167 cv
56.8887 14.3309 54.9927 15.4354 53.2266 16.7454 cv
53.0728 16.786 52.917 16.8416 52.7593 16.9246 cv
47.9092 19.4725 52.8931 24.1766 55.3892 26.8509 cv
58.0606 29.7137 60.8145 32.4222 63.1539 35.5853 cv
64.0591 36.8099 65.0997 39.2845 66.8653 39.6287 cv
70.3374 40.306 71.6617 36.1136 70.9742 33.6258 cv
cp
0 0 0 rgb
f
69.0899 12.5501 mo
69.4668 12.3577 69.8555 12.1776 70.2237 11.9759 cv
72.8506 10.5369 75.0748 8.80501 77.3399 6.87484 cv
77.3912 6.83138 77.4415 6.79671 77.4927 6.75521 cv
76.3252 11.847 75.0953 16.8084 72.7183 21.514 cv
71.2017 18.6942 70.1626 15.5755 69.0899 12.5501 cv
cp
78.9082 .951008 mo
76.3482 2.20638 74.3614 4.47835 71.7579 6.34554 cv
70.1958 7.46566 68.5508 8.42122 66.875 9.30794 cv
65.5088 9.02376 63.9078 10.0262 64.5279 11.6737 cv
66.3912 16.6239 67.8536 22.1493 71.0884 26.4212 cv
71.9888 27.6107 73.6749 27.7952 74.542 26.4212 cv
79.1949 19.0506 80.565 10.7977 82.587 2.48763 cv
83.1524 .163898 79.8653 -.917156 78.9082 .951008 cv
cp
f
104.24 31.5159 mo
100.954 33.4491 96.5025 35.1605 92.9161 36.4891 cv
92.6563 36.5853 92.3741 36.6239 92.1373 36.6497 cv
92.5831 36.2918 93.0293 35.9339 93.4756 35.577 cv
95.5103 33.9486 97.5489 32.3265 99.6084 30.7298 cv
103.015 28.0877 106.488 25.5448 110.049 23.1209 cv
110.245 23.5135 110.439 23.8973 110.63 24.2542 cv
110.931 24.8143 111.225 25.3787 111.52 25.9422 cv
110.979 26.4237 110.14 26.9598 109.838 27.2171 cv
108.056 28.7406 106.267 30.3231 104.24 31.5159 cv
cp
113.36 19.3338 mo
113.082 18.1243 111.814 17.1439 110.483 18.0169 cv
106.483 20.6409 102.604 23.4251 98.8042 26.3328 cv
97.2442 27.5267 95.6968 28.7367 94.1553 29.9539 cv
92.5699 31.2059 89.6563 32.7576 88.5484 34.4315 cv
86.9541 36.8387 88.5723 40.6868 91.6768 40.9354 cv
94.5855 41.1683 98.1124 38.3724 100.678 37.3895 cv
103.594 36.2733 106.202 35.1556 108.749 33.2586 cv
110.676 31.8226 114.8 29.3846 115.717 27.0711 cv
116.71 24.5643 114.589 21.4276 113.36 19.3338 cv
cp
f
88.3877 5.67513 mo
89.7837 6.39388 91.1099 7.31429 92.419 8.10726 cv
95.6016 10.035 98.7002 10.7186 102.001 12.1595 cv
102.398 12.3333 102.772 12.5565 103.135 12.8011 cv
99.2496 14.8045 95.5367 17.1717 91.754 19.3826 cv
91.816 19.304 91.8765 19.2249 91.9244 19.1351 cv
92.439 18.1605 92.1607 16.9818 91.2066 16.3983 cv
89.1524 15.1419 86.3487 17.2484 87.0914 19.5804 cv
87.3345 20.3441 88.0318 20.9544 88.8199 21.0452 cv
87.1216 21.9725 85.3956 22.8397 83.6231 23.6053 cv
84.8799 17.5384 86.4644 11.5672 88.3877 5.67513 cv
cp
107.54 11.2039 mo
104.865 8.43489 101.635 8.39437 97.9327 6.64486 cv
95.0074 5.26302 92.3169 3.22737 89.4014 1.76986 cv
88.9952 .155109 86.1846 -.253094 85.483 1.77376 cv
82.7134 9.77474 80.5689 17.9154 79.0376 26.243 cv
78.7832 27.6283 79.9356 29.2376 81.4981 28.7034 cv
91.0572 25.4344 99.0118 18.8787 108.199 14.784 cv
110.065 13.9525 109.16 11.6097 107.54 11.2039 cv
cp
f
17.1319 100.976 mo
17.3887 100.685 17.7603 100.495 18.1988 100.495 cv
14.8409 98.411 12.0005 95.5662 9.42485 92.4666 cv
8.49907 91.3524 7.48442 90.139 6.56645 88.846 cv
6.44975 88.8236 6.33256 88.807 6.21586 88.7894 cv
5.48442 90.866 4.82377 93.0814 4.29643 95.348 cv
8.12504 97.1556 11.9644 98.9075 16.1084 99.9437 cv
16.7232 100.097 17.0396 100.51 17.1319 100.976 cv
cp
.203922 .215686 .211765 rgb
f
3.55619 101.576 mo
3.46098 101.514 3.36821 101.455 3.27348 101.393 cv
2.85698 105.58 3.10893 109.695 4.47368 113.226 cv
6.46635 110.909 8.48881 108.685 10.7886 106.655 cv
8.24418 105.211 5.79008 103.485 3.55619 101.576 cv
cp
f
20.5967 89.658 mo
21.5489 85.5833 22.5093 81.5418 23.8394 77.6102 cv
23.9004 77.1102 23.9424 76.6073 23.9732 76.1033 cv
21.9903 74.0555 20.0381 72.0316 18.3545 69.7918 cv
14.7486 73.1536 11.6841 77.0609 9.52739 81.0643 cv
9.72709 81.3084 9.92045 81.5584 10.1216 81.8016 cv
13.1871 83.9168 15.962 86.5491 18.8965 88.7616 cv
19.4561 89.1829 20.0044 89.6107 20.5542 90.0379 cv
20.5557 89.9163 20.5655 89.7913 20.5967 89.658 cv
cp
f
28.9742 81.5775 mo
27.9561 85.514 26.3824 89.3177 25.7881 93.3289 cv
25.7539 93.6927 25.7315 94.0594 25.7002 94.4241 cv
26.4244 95.1248 27.1265 95.8494 27.7989 96.6097 cv
31.5459 95.5496 35.3047 95.5194 39.1119 95.6141 cv
35.1255 91.5033 32.6641 86.1209 28.9742 81.5775 cv
cp
f
18.543 79.7742 mo
20.5279 79.0135 22.2759 77.7191 23.9659 76.285 cv
23.9698 76.2259 23.9693 76.1663 23.9732 76.1073 cv
22.2388 74.3187 20.5328 72.5448 19.0054 70.6326 cv
17.8833 71.7723 16.8872 73.0467 16.0591 74.5018 cv
15.835 74.8953 15.8384 75.2664 15.9727 75.5711 cv
15.9541 75.5975 15.9356 75.6229 15.917 75.6488 cv
15.0015 76.9246 14.1665 78.2528 13.3916 79.6199 cv
12.9707 80.1629 12.5787 80.743 12.2041 81.3416 cv
12.1485 81.409 12.0894 81.473 12.0342 81.5408 cv
11.8174 81.8065 11.5039 82.1678 11.1753 82.5824 cv
13.0542 83.973 14.8506 85.5037 16.6534 86.9842 cv
17.2525 85.3206 17.8389 83.6478 18.3755 81.9403 cv
18.6343 81.117 18.3658 80.5301 17.8872 80.1795 cv
17.9571 80.1195 18.0303 80.0672 18.1011 80.0096 cv
18.251 79.9647 18.398 79.8797 18.543 79.7742 cv
cp
.317647 .290196 .301961 rgb
f
12.4571 98.825 mo
12.6968 98.0653 12.9429 97.3079 13.1993 96.5545 cv
11.8721 95.2742 10.6172 93.9012 9.42485 92.4666 cv
8.86625 91.7943 8.28032 91.075 7.6978 90.3353 cv
6.73784 92.0408 6.04448 93.952 5.56157 95.9432 cv
7.82328 96.9974 10.105 97.9959 12.4571 98.825 cv
cp
f
4.19047 102.094 mo
4.22709 103.261 4.39799 104.44 4.52592 105.52 cv
4.5645 105.847 4.61674 106.171 4.66508 106.496 cv
4.66606 106.516 4.66655 106.539 4.66752 106.559 cv
4.67485 106.715 4.69975 106.858 4.73637 106.993 cv
4.82328 107.524 4.91948 108.053 5.02397 108.58 cv
5.18412 109.682 5.40825 110.759 5.72807 111.787 cv
7.20903 110.113 8.7393 108.505 10.4082 106.995 cv
10.4371 106.829 10.4771 106.667 10.5079 106.502 cv
8.29789 105.226 6.17045 103.726 4.19047 102.094 cv
cp
f
30.3555 83.536 mo
30.3379 83.4373 30.2979 83.3494 30.274 83.2537 cv
29.8599 82.6839 29.417 82.1331 28.9727 81.5838 cv
28.2242 84.4749 27.1783 87.2943 26.4395 90.1771 cv
26.4786 90.1297 26.5176 90.0833 26.5591 90.0389 cv
26.9483 89.9422 27.335 89.8074 27.7095 89.5863 cv
29.5694 88.4862 30.7232 85.6253 30.3555 83.536 cv
cp
.14902 .156863 .152941 rgb
f
27.8003 96.6112 mo
29.585 96.1073 31.3726 95.827 33.1665 95.6947 cv
31.8179 95.6087 30.4537 95.7406 29.0581 96.1615 cv
28.4341 96.3499 28.0162 96.4657 27.7188 96.5208 cv
27.7461 96.5511 27.7735 96.5809 27.8003 96.6112 cv
cp
f
17.1324 100.976 mo
17.3897 100.684 17.7627 100.493 18.2027 100.495 cv
17.2832 99.9281 16.3907 99.3211 15.5469 98.6458 cv
15.1387 98.8807 14.8912 99.2069 14.771 99.5662 cv
15.2159 99.6951 15.6573 99.8309 16.1084 99.9437 cv
16.7232 100.097 17.0401 100.509 17.1324 100.976 cv
cp
f
10.7442 82.2625 mo
11.8941 83.0916 13.0122 83.9744 14.1123 84.8826 cv
14.272 84.5706 14.4244 84.2547 14.5855 83.9432 cv
15.1372 82.8729 15.8081 81.7835 16.4239 80.6654 cv
18.2818 78.47 20.2159 76.366 22.1905 74.2508 cv
20.9034 72.8909 19.6631 71.5086 18.5357 70.036 cv
16.8418 71.6214 15.2901 73.3797 13.9068 75.453 cv
13.6724 75.804 13.6617 76.1654 13.7823 76.4793 cv
12.6539 78.1326 11.855 80.0955 10.9629 81.8255 cv
10.8882 81.9705 10.8184 82.1175 10.7442 82.2625 cv
cp
.603922 .576471 .588235 rgb
f
7.91655 97.012 mo
8.0308 96.578 8.16508 96.1492 8.30717 95.7225 cv
8.68217 95.5672 9.01811 95.2684 9.25102 94.7742 cv
9.50492 94.2362 9.76908 93.7025 10.0259 93.1654 cv
9.82621 92.9315 9.62162 92.703 9.42485 92.4666 cv
8.5518 91.4154 7.60405 90.2703 6.72856 89.0594 cv
5.21537 90.6219 4.2266 92.7152 3.5977 95.0189 cv
5.03276 95.6981 6.4683 96.3719 7.91655 97.012 cv
cp
f
7.10307 104.321 mo
5.87651 103.459 4.68705 102.542 3.55619 101.576 cv
3.27348 101.392 2.99565 101.216 2.71391 101.034 cv
2.71342 101.052 2.71098 101.07 2.71049 101.089 cv
1.51762 102.197 2.20659 105.044 2.94487 107.183 cv
3.02836 107.917 3.12407 108.623 3.23393 109.271 cv
3.37211 110.084 3.83305 110.549 4.39994 110.743 cv
4.65727 111.296 4.92973 111.84 5.21586 112.374 cv
6.16948 111.281 7.13774 110.212 8.14457 109.178 cv
7.8643 108.525 7.59428 107.867 7.33305 107.202 cv
7.20512 106.242 7.13139 105.281 7.10307 104.321 cv
cp
f
7.32231 106.924 mo
6.45903 107.586 5.40434 108.326 5.20756 108.541 cv
5.05278 108.711 4.90825 108.89 4.75932 109.065 cv
4.49418 107.858 4.37358 106.627 4.37065 105.371 cv
4.51811 105.464 4.65239 105.572 4.80229 105.662 cv
5.58744 106.133 6.4644 106.517 7.32231 106.924 cv
cp
11.4341 104.649 mo
8.86576 102.764 5.88041 101.916 3.44828 99.6947 cv
1.60502 98.0111 -1.11177 100.623 .481488 102.369 cv
.0400814 105.66 .018597 108.982 1.20659 112.155 cv
1.36576 112.581 1.55864 112.994 1.75395 113.407 cv
1.6475 114.117 2.05278 114.745 2.66215 115.115 cv
2.69047 115.162 2.71293 115.211 2.74125 115.258 cv
2.76078 115.235 2.78032 115.212 2.80034 115.189 cv
3.65922 115.636 4.83696 115.59 5.56157 114.597 cv
6.73686 112.988 7.85795 111.314 9.41557 110.04 cv
10.5884 109.081 12.105 108.567 12.3536 106.908 cv
12.4996 105.93 12.2271 105.23 11.4341 104.649 cv
cp
0 0 0 rgb
f
11.0415 96.3973 mo
9.68852 96.056 7.46049 95.7044 6.19535 94.8822 cv
6.49223 93.869 6.81352 92.8651 7.15825 91.8709 cv
8.50053 92.8861 9.82768 93.9207 11.1143 95.0081 cv
11.8936 95.6663 12.6709 96.3314 13.4185 97.0257 cv
13.4556 97.0599 13.5049 97.1019 13.5464 97.139 cv
12.7041 96.9183 11.8872 96.6102 11.0415 96.3973 cv
cp
20.2124 98.9725 mo
19.2989 96.5389 16.6206 94.4837 14.7139 92.8367 cv
12.2852 90.7381 9.74223 88.7742 7.14116 86.8953 cv
5.88871 85.9901 4.67582 86.8758 4.34477 88.0511 cv
4.32573 88.0203 4.29985 87.993 4.28325 87.9608 cv
3.5767 89.7684 2.97221 91.616 2.42827 93.4827 cv
1.81401 94.1048 1.55034 94.9676 1.90336 95.9832 cv
2.45756 97.577 4.76127 98.617 6.16655 99.2137 cv
8.24369 100.096 10.7754 100.644 12.9844 101.12 cv
14.8164 101.515 17.5425 102.076 19.2935 101.231 cv
20.0245 100.878 20.5025 99.7449 20.2124 98.9725 cv
cp
f
19.9761 82.2918 mo
19.6651 83.1405 19.3345 84.5443 18.9214 85.784 cv
18.7105 85.4505 18.5122 85.1336 18.3311 84.9007 cv
17.7354 84.1322 17.1387 83.3616 16.4795 82.6458 cv
15.4385 81.5164 13.9488 80.7259 12.8003 79.7142 cv
14.2579 77.2508 15.8628 74.866 17.625 72.5799 cv
17.8838 72.4793 18.1211 72.3016 18.3389 72.078 cv
19.5943 73.4198 20.7032 74.9832 21.8047 76.429 cv
21.6348 78.4261 20.6543 80.4417 19.9761 82.2918 cv
cp
25.4351 74.6258 mo
23.2715 71.9593 21.2837 68.994 18.5035 66.9344 cv
16.9131 65.7557 15.3736 67.5306 15.6709 69.1048 cv
15.482 69.3411 15.2906 69.5731 15.1104 69.8241 cv
14.7813 69.9559 14.4707 70.1693 14.2149 70.5008 cv
12.0103 73.3553 10.0245 76.3695 8.27446 79.5106 cv
8.42045 79.6951 8.57084 79.8758 8.71733 80.0594 cv
8.63285 80.5931 8.74028 81.1683 9.14408 81.6883 cv
10.4849 83.4129 12.708 84.3592 14.1783 86.0741 cv
15.4502 87.5579 16.6216 90.0325 18.3555 90.9842 cv
19.0694 91.3763 20.2173 91.3612 20.7793 90.6717 cv
22.2427 88.8768 22.8609 85.9949 23.6573 83.8358 cv
24.521 81.4925 25.5381 79.1517 25.7818 76.6536 cv
26.0088 76.0189 25.9629 75.2772 25.4351 74.6258 cv
cp
f
27.6827 93.8924 mo
27.0777 92.3074 28.4849 89.3812 29.1148 87.9608 cv
29.6211 86.8192 30.1455 85.7498 30.5245 84.5994 cv
31.6997 86.2869 32.5713 88.3236 33.5469 90.0872 cv
34.2735 91.4007 35 92.7142 35.7261 94.0277 cv
34.9039 94.1146 34.0821 94.2078 33.2613 94.3221 cv
31.7334 94.5345 28.4571 95.9202 27.6827 93.8924 cv
cp
40.6875 94.7342 mo
38.191 90.22 36.0376 84.9168 32.7305 80.9442 cv
31.8467 79.8826 30.6329 80.2122 29.9439 81.0443 cv
28.8877 80.3846 27.3311 80.5765 27.0406 82.1273 cv
26.2012 86.6112 21.5699 91.6785 24.4742 96.2694 cv
25.4375 97.7928 26.8208 99.1658 28.6792 99.1497 cv
29.9639 99.138 31.3423 98.638 32.6123 98.4334 cv
34.7183 98.0936 36.8335 97.887 38.9605 97.744 cv
40.4707 97.6419 41.4556 96.1224 40.6875 94.7342 cv
cp
f
104.592 196.358 mo
103.738 197.442 102.617 198.358 101.544 199.309 cv
100.165 196.995 99.3536 194.195 98.3565 191.788 cv
98.3267 191.716 98.2862 191.656 98.251 191.59 cv
99.398 188.949 101.123 186.703 102.573 184.277 cv
104.078 185.714 105.49 187 105.92 189.333 cv
106.403 191.952 106.273 194.225 104.592 196.358 cv
cp
110.439 192.585 mo
110.234 190.244 109.952 186.887 108.842 184.737 cv
107.703 182.529 105.354 181.941 103.839 179.88 cv
103.051 178.807 101.07 178.37 100.385 179.88 cv
98.6514 183.704 95.8995 186.864 94.2715 190.791 cv
94.0132 191.415 94.0943 191.943 94.3643 192.345 cv
94.3873 192.506 94.4258 192.674 94.4996 192.851 cv
96.0308 196.55 97.2295 200.699 99.8648 203.781 cv
100.535 204.565 102.022 204.549 102.693 203.781 cv
105.718 200.32 110.891 197.757 110.439 192.585 cv
cp
f
168.185 194.452 mo
168.398 194.372 168.617 194.31 168.834 194.241 cv
168.934 194.955 168.956 195.752 168.929 196.439 cv
168.062 197.235 166.975 197.872 165.844 198.384 cv
165.804 197.508 165.696 196.635 165.541 195.759 cv
165.544 195.757 165.548 195.756 165.551 195.754 cv
166.4 195.253 167.258 194.798 168.185 194.452 cv
cp
172.718 194.24 mo
172.506 192.479 172.333 189.915 170.002 189.864 cv
167.871 189.818 165.304 191.254 163.533 192.3 cv
162.809 192.727 162.543 193.383 162.581 194.028 cv
161.876 194.432 161.373 195.203 161.58 196.215 cv
161.931 197.928 161.952 199.573 161.75 201.305 cv
161.599 202.589 163.149 203.591 164.281 203.233 cv
166.598 202.501 168.804 201.473 170.769 200.034 cv
171.55 199.463 172.489 198.843 172.793 197.866 cv
173.14 196.747 172.854 195.373 172.718 194.24 cv
cp
f
165.51 125.56 mo
164.422 125.853 163.001 125.992 161.982 126.494 cv
161.716 126.498 161.508 126.512 161.331 126.531 cv
161.334 125.952 161.338 125.375 161.301 124.798 cv
161.165 122.72 160.411 120.612 160.26 118.539 cv
161.858 118.636 163.462 118.638 165.068 118.553 cv
167.106 118.445 169.291 117.61 171.331 117.393 cv
171.837 118.642 172.126 120.135 172.4 121.334 cv
172.596 122.076 172.737 122.828 172.822 123.591 cv
172.815 123.739 172.815 123.864 172.818 123.98 cv
170.528 124.689 167.753 124.955 165.51 125.56 cv
cp
176.823 123.319 mo
176.498 120.69 175.917 117.182 174.594 114.855 cv
173.493 112.917 171.828 113.273 169.911 113.765 cv
166.301 114.692 162.229 114.951 158.519 114.409 cv
156.595 114.128 155.513 116.307 156.24 117.519 cv
156.117 120.339 157.294 123.108 157.349 125.963 cv
157.383 127.762 156.818 130.082 158.95 130.835 cv
160.979 131.553 164.027 130.106 165.986 129.576 cv
167.551 129.154 169.112 128.718 170.689 128.339 cv
172.107 127.997 173.966 127.972 175.277 127.358 cv
177.015 126.545 177.036 125.044 176.823 123.319 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (stone_4.eps)
%%CreationDate: 3/12/2018 2:39 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\)jI@?,moV7`=/Tqif[\);ks0]A*95i?b\7#OMOAnW#/T8Oregi2`EZWAp4)B
%5MEmKroMbX?@K51p&G#-k=XFX&9abSSQf!=r9-X8qX;aZGPg4l=][%4SpHZf>ibg/j]e[nW*WKm1TijSHM[SugQui-qtejlg[Dj<
%]R'SBoliXT*WGcnjmH2G^6.;8fmS/Cr;!D.me4u!4T11CF8_$he]kG`[l:Ks^Nf<]Q`h/_L9Gjl^O.D1aUR``[[41HnNr\Y\:*s<
%?;BpJdsq#%TC:r58h5rEs6K,k^NoP/S(CHm4F?blJ,KMJ?N258XhVCEp5/c8DC1u(a,f>K]Ar:NSp^S9NBVEmSgAl7o9124nUKnS
%o.=.[j&K5'jEN5!keC@C%K6($_uJ<:mf!ZFpUdYfqOHIBp5!@+4WuJjR,llU/oZ"UJ<h;K-..@[^O>Y>o-\Ho3J:]CCr$[kR')%"
%fA2aAR>_>'q5J.2`MHl2l,qO'IjsV3059T9/luq)af\a$rUu"Z[t"A0m_@XCq>0fmNUHK*2d\]Es'uiBZ<WYC+62I;_,8j(_XG3g
%If&tK?9W]\*NCd?FGPD=lKd3fdK/ZnDOs)OTMOIks0je5s5`i3[r4Z\?TnE1,P8<J?2F#=rV_X]55EqbjO)XJIe2sobMU)2++31B
%js<PO<9`3'Q7H;Y);)![7FkbEFk>^32P`)6cDPBTq]g&EgoWf=?ke)@iqf.rcb=\unn0Q8h+qhV-HSK%rTriMOGi!rrBGbY<Ls,r
%rl8>M]&Co'gR%k3SH%mDX(b0W=24S5O$:8TqXEbR7clf1F"`a9V9G.dYJ.:!Y5dGKj;-X&CZ!!`YC?FB/pR(&2h(\gfD<,UeSh(0
%0>IG\lW;tnqhpejHM.'\O0?<IouGhC0;#qjh<?S:r9[:'5A&Z6f5LZblLeNFT>10tp;oAOYF[lRp*]==knei[IIm*WkI7kMO1Ff\
%\:+59eSC;kYBRbWj8YEpi%@hY]ALAPnl3>*r]SPPa:2][?MEoTC\c<UhhPGiRR^\5]n*V`?N+p@r7/:*NV0r>h!ql"T=fRBH?<=4
%V'"bW:LmGV>N3TU2h-)!4[l`mQ#>Pd[Y+.r';f,"kYY.4r)jemgQu8s2t!jK>i-N.UMUOPj5J,OkKgkfrT)]t5C9ur^]+5E5OX($
%lIGKGpC"_X:RZdR?fB-48atVDr:/>/BA^B>O-s4$.l.%hl1<X_rq>0;gP:b<-NECu^NlgWF8%3OK_#]crMeD]fA$>[5&FPIkt1Hh
%s%H5ai[K6:dPJ>H)UG\Ns+!o0K7*OlR4-"#-N75qq;SSR6t?8ffcT*+;:3X<HM18'LYWd(5C7I`cHTED^4fFqqr5pt^:iXPl">IM
%hD0L*le9!hrUd"+?dW-6m9e/:r;?5OYFiq*q(kn(@`Cs*mLJg6>NjJhgR%JubO)TMLY_sqa,g5mnY>1qq:^53hct%&CVI\N(+85J
%Iin04^L],QI,ls0dd#j_EVH63p9-^.9r=91p"R:!d$sCu4a-c>41g,IR7Zb7A\ie&9mlVr\(Q9*;/_U]abusUIZI:q)Yt6Hj!q<>
%kjB&$hgYV%gZQ'G[/8,6-SN6FKa=9XCkZe1Jo;NV$Rn0(n@-ue`lI!3NuEYG\E)pBU'N>fEO_r?cN!S4d<3/uEl@9_mB<'#90:78
%D#8D3n5EP/WPoXADbc=hT'ETKX8J]XRVT"=\oL^ZEjR$"=`T?F'UNb!36JMPEf40YISu1dA1r_]M`;V6Eh(QTN^MOD+cf5qS</n3
%MK8J;1EsAS,KD5SjH*H&/]o;I`X+B@iStQ;E"bue*5b&Pq4&SAWuNG,"*'K_Q'X]f8G@eVhs`VIEV'Jrp2XDbq+,K:MB$l_jQ4s!
%3`UX!*"*7#j%aV7jk*4]mA3bBX$n:k*8)VuU6EXU!p>jg3DRapNe@8_0@t5$*`\6E,;%<'TT=?qkl9f/aG[TKq!#P@jitR;=\D!Q
%2u$n'M189^8GV^?rr4+]omSQDY4lcd"1g.+Uj^6:m"6;A'"m^n*%*`VEo;$ON9_s6"3D,U6W]34:jUiT*(Q-`K,ci_@No8I$%`Sb
%']J(jj>`#J*TYjOSusSm`1s&3jdIlN,$cC"OKc<PPb#rorZ(#!p[\@9E]!Sjjo:8:It?NC1dq=*L8-;2aZ#8&M'S\R:h`&5T06M1
%aCPsobT`I:bq>QK:M96D@hOY`,,]j2Q;@GMN]T:aO"=SG?VYJNq8sn,HZp*R#pQ?CL?fNhOmjXPFpLSM-^d%Nb%J,lO/K@\+;:Wp
%$p1>MHs_u=0%(,_Hm:chADUAObG0liP?FGf/?WQ;DIgD3N*d0VE,<sh1=AHX^5=0UY)h0n+sUD>VMGplMbK[0p7+gm-s]h`E80>j
%3/[LC@usI07sP+7eDp4AIlne6N\[0B.IkKW,3n@fF>t<&d%;8F6=(?+#(oN:7&Sl-VrN#C)TRu8ZZ(F;2#J=!&VMTj:aPooq,.P=
%K^N#s%mkN:39&d&'chB^T\(U4$,lW/,8"Sd>YA_r.HF"!b8\Z?W_^t*&?/VP@g*C)R=LpCFkKV=dg\B6??>QpdDB50Lf5sJ,$$gV
%PB5'LMJ7FSP\0Z!_?]DfFH@)F=/3+*7;6#e!d)$oVo-d<#22QO5W##?6Bi_J:gbF,'C\UL(qAL[IQsPs(MGhVO0WfIn;-f"n6gdB
%S++f\9R*OZW%_&kNMC)#D*3PHk3WU>p4f3qViT&#)%^mDPr^r+$6CjVa5M'dN6nJ)#"3\Z^A&;NjUtE>bRIj;Ng#1V^e&jJ/E,"'
%Y)X/6',qTIEN3Nk([)^9!"@AKMW$f8EIs-8Fbg/dM-rK.FbGVU&&uSB$3uHd;%;p'!$8,2:AeLb]NOqrqF%k?.^q$[>lnXVlr#gd
%@A"SM8Yfgl,`5:@dV/22,gm3[S7T!!jXc`FR=00F&e6*!f5aMXfIYhs7=)Vfd3:>g&n*eVP[2IBX*f5ZY)ach=GR_F2HXG^[^_R8
%=<0.bOirXBU2lEp@6qHdE`.!>0f*@&07XXT0J`iiaD?T=q2dP#hSS8l/Y,bLBI)j&^]gJd('b]p/.u&)1)C1$)AXq37kP"t>R!fd
%G8pgEUN(<0_rTOqP"`2-Lbq.qZXK":7:Q!J8ZJ1(OTpY@K1&BB(aOGa7pq9$1IW:C&2c]%oVaT.P*m<89T>f@G8M5-WusoFA,*)J
%\Ee=rY+'u1(tAoIFW5;O9u'E!s$tp:NUDk;8TN7Nihq'sIPZC&=TLsCj:ouZ,#&Cs?V08jJ@YN.HNAr!B"7.1I+\,\klCY)bEl"2
%gjZs6`gY8TE!%`$bO&5P#.c,?`BHhe[@5>;KBQ_k2F8,V"Y8OS=rDKM'EMtnCr]s7A.d"uM!.Fs"Xh0V7#XR6Leo1-1O(BTW7nqd
%)6-FV'kjB05]nNu&o'1"3>SX54k8Mj0>B8FqspeGDdRbP7COq\a])PIF4=/gEQ=d4A87O$F11S<U/P'ib"gKX._IOdhQ$AIcX%-e
%D,_*jA[id/4)XnG`HsZ$j[00dh`8Qm,MmL;m6NUUhi[@jb5I+Nn\3o2%m/j4%mRZhjH)Geke)ZmTC7$^)3]"!7&L06*F5_97'A0$
%f*8M&<3tq&JV%e0oKinmb<_H%)d2*N/9R@!7Pou.q9cQCTN>$)o[2/Eo+%X'V*VSg+a9Zp;2pd<F"4R-9f6(T];aq+TQTY.RUuA)
%P,UaEk1DB--:<`pJEWrFR:=4e*ACEn)e6^CYuOHA-<WReA=QqpJVN2=NoR4a]$[A[9t+]D'Q2?<T)R>fKXVrklpu=1C.D_upDrA3
%7pQY9@su[u^&=$S^>k1H4W]!k#QMjc5Om&a`Z<s5;'p]h7Ej`H!n2+P[Bc\o&Sk588J38ZaqU)j)HMc@R81un7(];DC4YF/kU]1a
%MN^49QdD-Vf\O@?2+lILZW=X!_K[anmrYF,_U'b>0`]D^0Z0tp:>O#2\ja#b>!OV-Y\KTbqM@Zj)[ESVql&hK]/o(Zdqgk$g//fk
%Zdh-M)X,%XVKiR`I$dsGs-PX.h!qQ@HM_]s:4'J$qk3!@*WN80q!WgL3]f/(&9pTh>aa;>p"?`4"2O_NGd?!%e8<U?>@Y>(+;U/U
%3%l0[2H-H43t/aCRqJ$ee%oqeQBQQ*:i'9V*@Am:dW^9=%Mfa*J-'.<[%DqY]nOH5*!3o\2[$VNNhY^0jU+/[7NdWCN=Zl4>5-_X
%N>j($_uNeYWC<UDWYeF05H9DO.oa412+F4uI8%6S1J_iX]]a3h9Yfgp4fd7WRQ[=Gs)N#5:-W1oj6([G3*e`!aNDK>1KsCs,<k1M
%4$Mjj!l,=-jGja7pV5,s]10?A\N/O5AMG_pkpG2qe'7,*6f2E0,aj8PG]Q!)L]A(4a*@606B?mb6-r:*e.MT]o\&G4B7c_*499[.
%mKD1A:o=Ac8&i[cjA^ra!6u%`C!`_Z'HPtV#dcUCRtN\4E7<aia,`3&']SI%Vo"r2F=Pe>@&Ll4H],aAJt@KU2&7,g)CmiU!3!6&
%Clca\/N13g*."`%_d^!lij=(]UU;i?O2iEP*^cs-G,NtEi);f8eES_\=#Jg0WoKadp\<-lnn*gQY","BYW:!Ygj7$^7uV\>\=7i*
%dp%m.X<,Ce+,>UkElSEUG7U3diK-,bptYm1GJ(K^XAM/sPg:90ZUXaiGPnO>5&6D/)We:pq/gg;NA=CoVuO=,^Q8C@EtjL*d@+0R
%Pr)C1PKODX:IXD$>>Sm5rIr!k86,FApHs<LKifrM?!n9#2BHkhgs=44b/qs^`2i7%</!u[ldli]7m\faEYWsPRqp<!f<<l'+,kr8
%cR3]+j:f$tEj;]#qZ4Y-<G+.IoW:"E1U:"<,tO'Q,)SB:0=F!QA]d_2J,]B,n]^sj3:9b-#Q9t'T*]'XYu-=WX@s>&:`L`Lf!qQd
%25TC%?S2]IVmr?GX;$_;-JhBr<rN7Q(XcUSi`h*&0-frIln9RB!I(KsN;?=oci/qHqn8W1pHHCrEUiT&OnQ*fZ:VR*KRJmiA47*m
%8sgE'EQ9b6Op0[YiaNfcK"FIqM?<t?#[^$;\dI^8dUh:1!kOZUX#YEi#im1?Fj-bh=J2[Q!7_Zi.2lWdi,'f[MsqBIg2.^A2T=*[
%/<A=:"p9G0@X5#CZ[)ZYb=!.@<_4N/<HD+S35$3_WLBHjbtW&@QeF5o:GR>obY?Xce=N?P/41.4WcOJ@1JCnj>5^J7EMGOpNuso.
%3R$nP"Zt^'dRZ4G>h8:>mi5'iW4B)&Z,),I*leYDrQ$!4rS61Pgh3%WLH#J#D>qA,B'Ps.ElU7Y+*W+Hj83/n$$'b4*5SLeq?G&$
%)EcU_;eA@V-MngO]"OL);>nr\@M8@T6!ricoPf,QZZBZMl"21BB%':tlD2nU8t(N@HE%JHY#!9Mm\r6],RA-k[AF4UQ5N*Q:IA4"
%2*=u]Noio'%@p_Ur7V3H4\Y965TF2Z%=@h'2ZhXW!_e.K$5ruSjH<re+LQ,5o$IqJ?S"tJpGh<r[-K.Os3QBdU()H5Ia?.)=nuA#
%W<Q$@7ph<<N\s^Q7[*iG0`T?hj^riJbrKQ92tX$gNuoC[Kd5H$Uj!e]m[,)DPRBuE5NIiKg>6kWG9:kG#FtHNa$98<HbmqsWSs]>
%/\K#ls2,%IngkY_b7->P^ZYBa/AH\ZmUpFPBSSU[runrO/%?:jd_jO;cufq(ns\`+1Arj,9.R*>H2e'uM*8>%Q-M[l%OpK?.;e%>
%4&D+(m1i7I!_J_DUghA)F>SP<ElYeRd0^ZF#7d:*5k@8qk[?a$4W-_lD%F2;=c9<k50B^Smbij@q=5\Q]]V3qHMf#FnI3K&a>."=
%ZKdmJ7I8q7[7qD%4@7qq(,;A@X@,AqP#`a"#"^>,Y"e@1VFtUq;6N-gas34YY#S!\;02C)d@I;4S"Z+M2g%X(nu1.]FoA*9\3f,J
%VcY"2V]o+k;e96E02Xkc:p!FIdIQOD?DdSoOjt!n=FRQPqHsKWHcq1[VVebj\hHuP24YLd7g%3B$a.0ol;%#Eks.DC/(KW62%O9#
%>$/-+BX3IQe83,c*G%;&foaR?4$Rc+E8g<\*pt$R2>0BJCA)imNupOO4?H=,53._739u!QJ)i\/1_!*17GFJ?pmV#]<@2FWk(-V>
%0!^MfqDe:=O8V=\"G`[J-NPHR8LbcDVHTdM_Qo,s&68]p+\pNg7on*=ZZ+/=b!u99Ya.&NShet5'(\Ai2dP.BN%/%^>59Q2\Kc7Q
%Tu3p3USPUkpElhTbf>ge0A8+b-<#sZ4Hl$i!662i(dnE'=;0]\Tjl+ajqPBA,c7EI*npagD+`Z^/;^goGnJN%,,i[2;g1m8]G4\b
%4n>j?jQM;(RX4`Ma6?lbh!pru]_+7U+*,C`D'*tL^>o)1mh8<'lp94^]!,XCCl@5RTQI0d(VoN(MX=1J>UrH#6lS>^%TC_)VXo&!
%[/?I^;#[&L<bWp7k)-BMX;3olV-0RHJi;<,=ZOH+;um%.dBKCA@Tum</[4HX>h]=<2O.A1Bd&AnPrm9&(3dp27S/="AJOh*BPj>c
%AVYj9]nf,V*d;^l+Q!dSG(s*gH>()D%B&RMDS:(Y5R%^9ViFmn:GQX?bke4(I3^Glbi4AngBi^3Uk$"Q<=R(eD^7!?R'-bfOBB=r
%$&;p+<j>3Sh)hmiN\!;E%q!95FCI)B)o%\/-[<sH#TUd@L$omNrWC<8[M2X;"R21uH?2oK>f>al:]8"41cuN#a;rTcn[#"I3Qdn&
%A":^_0:D$JNV%E6k@T)P1JJI971TcUSBM[/)@F&7K<1PQ_^L^Y29KTuO]ggq_[Mu\29TTq//Zcg)hs`K@5?rh"M5_P=#'9(A7h-r
%=5BZ5%0PmcBh8c+!V9Yp4MBmjds@OJH>&:;Vt4RH=N>BO<D4qH\9l:L:I2UX<p""gP_k'n#FUOuaIE5gMi"I\ZA.PJL#nOYjuALC
%+RBl'bGQ7Qb^n`V)l&0cC7'B--4_hGb3tEt'>Kl`%1)N6X_X%%CN<`M=;n5DOl(o'j_Xh`Ri#GL;E`T+(SH+kC%ZMqL#M6e:XX7t
%a8OHGr.-g%pso&/ppIjM^E+!5*X1pE8>je$6E>$W8RrM!`WDULFZP@uoEeNq$'iPal4Dq-K\H2XD>%LNWi]2M%1adZ*mEoYS9lgC
%B3Dn^/Uj<TP4"$/ni^%2@O=A+,\Vsi0]JO'P#A%)OV6-dRZ`g!7A<KA@<?4,9X]KeA#^Ph)AYZK&_-g,#Hg:,fm/tqZXsW`\pRad
%&UK"T(rq/meXDX_/pE@bMfjqoHb;576RJFS*8Y]uQrW,eqsbm@^#MXF.ctBEb24rq<>+Q@.CBE#4L-<`17`U7ED(&qe/S+sSs5+g
%EWAHhRMAamW9?faGER_fS)pBQ$h-?9DDf$PO=X6UY\;U?fe/[LM9bIS,O#dtrh)qQ)I_hl6nkC#Ko"+V=ckRa;bRL$2R%#u$mIs1
%oS1BqZ!fA&-di'<pXqY>Z6J3'kOT_oA)HhFjPbV=2jger=Fb`B'qGsF+>`"B.6\VH8Rs@\7CU<'/^VU3R`l80e6q]R-3O`W&=+"C
%$s]!uc5>h;O0l4@Bh$$i+raY[k@.1s(X#90croNA/B0Q]3?HJ5k*11b(Znp"m3";1hjjI"1[Eh%hDmgQkJAY.c"BNe"=S;H*a1Sg
%maK%Z?JfGpM6YA#s2o)]Xrh'r2Rr+-Y<I3EmiW"uh;]a45R's+lJq=dL<As_.,8m2+8Z?T^#S0&;AJMTXEK8kRu6O3[A>&#Se7j9
%>Rg,p*tA6J`ZIFNBotm3=@:/8Nqt/=\@Gg7*E2Ad-U%3!6e42^Cnuim@kCaF5HC9@`f\;=qB;&CQ0-U`R;Ju>+$NB=SH!UN>hF^<
%2M%Ik+OSbe]c2FcTrI_JY*Y[H"M6G"O=hR9Oind6HKc5_2`okfX[.EFLE@$T6)V9`Y2_+%7sC#@Y`Oo*E5sga`*TY6/UUu&DsI`n
%Y6f*13nFMi$Z&dFmQNAaFZ-6^V<&1>.c\HOq-qLb&p%/8nRuUJ[aKZf%4@`6O]qn@/M_9?5:`LN:-cG[oWqsuIlf$Nh2fL`EtVZ\
%*[hV;glTpd.DP.&c&'3UT$2ADpoCC/#_fC[BQGBNS,fFr]D?gY,HdRNJo>s%0FfE5pPbC7;M3G$C@F,EGY/7]@7e:R9+/J'(jp6g
%n=?B5HW,KT@eW1/Kr!Xf4F"n$Il8qR@</le_85`9i8%5fb\VM_i3rpb/d1\3$+nI@SATHm&^0u_[KU8DZ7WuI3B,3KDeQ1ZcWQ=S
%)3]gH06c3e!:t1G/m*`1kJtS5&Zp'.J-M@#[o!.>h)sCX%r_?Uf7:KbKI\-n$sp"C&BKVIL<4n]"*Zj8'l!p$@7==S53t]LWrG+K
%\']9S_-'8ke-6Lkn_fm.dr1.'9WqBiHXi6ggQ^'s`5V2B0"stbgu%Tr!p3\>>:_4;9"s)V?;>4$rGG:?]-/#:%peiqaJqH.&q+CC
%Pn1N[@aIj9LlC&h,1]*JiS>7iG,W%D,pqEC7,)_B@`?rShnpqV`9;0Aabi*fcuEmtJ-@k;SUn?F)R8n&Xq/,C@o74607r-1Hkp/!
%RL(;&g7-i=@nr1bF6/7Kl_mR<d;qaf-&iDT60fj%[aA3LZ);_c;Chl[@&$Vp(Hggh.@=.Qge9>h]trjFf0n>3pX?Y@q7YtgmPt;\
%b-B;*ONEi"!$GE*e(\Ka"6n^`m*tYV9qBFFH,fe>o:%+eqeC`6iU$R.cMc)(ip7!M>;":&Q^0U,QV]g8/*&@/M-da57g'&_*W/u6
%9'PaPpmA\W*;$KOcg'WQ6j_m,1$W#,R;2i"0p.dKr5FQXO1NTVcH'rbkp);04AI]\EnJN[0&%(HI9.-H3(86Vh/Q`<X_(a[F)j,^
%mkYZiH"c?u0EA`42\TDM1\7f>H9JUEk8%EoEE(.1(kp,$M0pZ]3Er"]VVLC'a3cZ&:Rc$KAimdSh2cf3Ai^pBa\q4ElXb@\ieh:^
%)%P<*TLT6kAWl4#Y7&!6V?ekRRFVe%`(c7-d6e/d8_D8N/NF;Z_hJ,Anm:b`oZFj8RRk\WBnIg39TS:Id_qWlOLZoQ;\V"S>rD(W
%e]U4(!D(4j^SC.*/bO)#6<j2i>"^`!)+H9Q^k._c?`WD/5OWr'ETpVBLTAnVjm&MFb/-I>?q%MHVlM[3`)j_`AeDP'XW0"P.U,k`
%``,u,Km:c#7ibAC=@sQ[$ab(?0U/&(qOB/Q5EAKq83\tMngN'?MJWjB=U)infb<"SA`UXs_3+I5kq,D3&%Q3,*9H%P^?(_%:q>W;
%-+uMZG5mk<Waq>U*\M\+qm.R2E`g#F/M$AL*M0s1&__5*kR)rZog7(d-5^pY(T2hloO;PQNUq?V953$*2&oX4$nF99L*CH#%Y*lS
%mld(ihDh`t&I;J>YMRg6aam2^pgh`jP=_"9[g+GX*Z8!A]BY":;q"Xo?!5)no>N8)gYN'[YH0?LX&iafjOs)!ONYo/W,PPj0ne!)
%H.mKObr]r5[,c3JmuY4":bKt@a%+p]HTjI;9$3mnWpRZPj[tOYU'Pe;_Hjcr$V7s`]>?IJ)uo*=n"T7o3\==.nRg0p\_k6>:rFBu
%EYB\(jpM[O#@7>6em?((lt+gqZhJ#Vb+1l0N-4ZpnX*@,Bg\N*R38;%Q3jag.J)%IITkQRC)5E,CYYg1!6LHC"HY&JVl4J\<:3sg
%"E&iJ03.UQ[4YP0K(\od`DAhW,OBeVMG>+?f^&sRfp`K&j&odJI"/^bDL&SAVs_uf3=9c/)`mWY%sm>bh\Kk]!2jaKZYigm\"']1
%H<T8jOK^$:53Z6iB)d"Bm4KD`q&#E]aiH"ZC%CJk8V+;BX2F#K[oK8bKu2//`?gp\h3lF1*'?9BrT`/P7%2"aCER=$-&E=1-I5_U
%%eEG;POYuJ5O6U9a*BHBe48E&eO_K%KltGHGp@q.DKF8b9E\GK[+&*aAuXKVeERdN<;c&/+hIVAQ`O2u-5l,)@:\SmVkUGNH>d"P
%oH:9Fi+oW+C>6tsitU9iXD[AJ^59g<*?@D/@jt,13]]%&8NMf.&u^.e[\t.oZu:QX`[o`H=SJJ)r6o<S@2&F*%G'3G?,tpNp/?9V
%%g6?bcbVlm/K+BjbX'(:1q^SpG6'gJUR-H"#Sg)X6cY`Jqqq@Z%@3VikB8f5[r8?9eL1Y1:@@"_r29*!h7["s6n>8()[E<;\8&I1
%\rCjuQe&rPVmSUe?Q*,So_IK`MmmFm!!dE4k/QOVau'@".:(hG^,Gs+BCajrVKA#(AX5A+V\E4-8lh5k2*rPj$fpTkPp16SBNtXW
%7`YTL`HG=^4%n]cM35JoQB"o=K>EUCNMfg%?B=BsA<i^Gk,q%*>JT`7aA\].$$O"PpUk$/r^ZF'3ENrI<llGolfH?K+klH"m!:\\
%Gps[0UNaE4arUjN3/>&@>A>5c1Gf.Afd^gN!X^7f+"I_3!'!mj5*7\#/==_0Rl%d54?sgp_sAb7#=sKg`$^fUVK';Q7!pbXYS!DG
%E#uuD*9WHSa)W4q^d7:BcLZB(dqMc?Z[<hG0s[NBh))_7ps-M,c6GH4nN=rPc=3IuU\a@3\0^ub?fo><0.]ak#['7cW6aM<Nr2$5
%oB=N4i6LAdr&.gbAgt5CW'!_i/.7K"Ur\//`*jl$ZUClMYpBR5Xa!/;7>??IbEaGpn(5"XQjh0JaT)(MQhDG@b>QkDLCbRR_sm.$
%`h8FfJoC[<f6t#)J%;j5a#e1PrjY%opKcBf-E\jgR^jM+=:9Y:=Ie>WGFZ'-fAPAg4AY+pL[Nr)0H.Di=e+9kCcg+R!RgGW4.iC3
%Wul[M"U\Q@.9<*N2:N+[_R`T=[QAEim+oNh0$^>'2=eLtlUuZ4p$HW>qTe]Wr-5h1p7Eh#0mq6fZfeq@3MH*De=?.p9EBuGAlmYH
%8d;heZDu2$^@g=5[p.a.IDb^u08>CI-?rtT?\?dNK#Uj'2Q[o7pdV^\2S\)ArD%!A,B\IUa,d;CcWQ<HhfF7qmCTr9D0K(1q78tK
%JOO91egcP=l80VWL_>4%:o.i$d46"8b9(dEC-Y^UNlS]!]Ca:-eRdj:.P't]aa3`"L+0_]gEq%7FHXH;qUJ<P>C*T,:0YeRL7>VN
%S02S35Xo$nJu:0]bAjnu7+0"M=CZ&.R^Re_n(P*p]43dn$"bER->6lEWI"[emsuJQ'BFE'5f<dfXRr(T*np4'f^h;XCPq/0..k42
%AnoZZ*cRGGb.`Itmf@[Ib+8AmJ<MVB,j,`3m&p6pBYSu?McLR4!M\Yh(?[HZ/Q]NJh`b\_TB3RIIP_cic(O,"G$R96,1D;'Fb[A,
%M:uRScd;Aj'gL<hT<rG.,.,%KZ<>KLT#9/!H(1J(%4$4-=83;jM9Dl+PLeAS!,%-j+`"3c\HH'm%pGkm&i#)$/lk)NCEC&T]NZ`>
%]l3<B\Ib154`g'$Hn=HsNtn<G@!';S@!U+C6Q_X?V!g42-a<HmrmnN]oqf?qs"a_@p\hT`ct0[U_o>S,>NqG8*mZ\"`R*G[SPLn)
%Q:DM$fc%@Ha.K@$%g0!$[.q5=BjfmFFu):$(K9[.g6`=iih!!''[ed6fspM7%4U_oJ16Tum56D?cKARn`sPY70jtWd%%dRCcN*&g
%!6WVCnQ@2&bJ\%]GahD)qZ<#^p?qb<?)ie:A;g3.+^Ynt8,n;SdeXi/d6to4a;I57_HueXjq>s7_3FFJN5?0N:nqE.'%gT1VZ2;&
%5$TB$VX&ZWjd%7f5*oTse,,6M5NKq11\3fko)@^;m#'S^l`tD-<D,qXkZb^`R!.FAG>"_q_;3sh_YqeF5C7JK:V6Ss-VsboRC;qc
%B+4,_#5/o:qi$)S`kXcJ@%T0XcPY;I%.(<=q\ekt//+Xeij2=+`kXbQ"stp/rVG'fhnFR5o$+M-hu*,EZ`?:ik4,3RJ'6^QrS;Ca
%]QnSqqPAH,qsV:Fo#Fh8i5#*%m[R'S7JraJFRiGU9AIM9Y+!GT/nB0k,C!,V`n1'Z5Pu8rrEfM4jb^T6r([4is2a*t\$Z-7\mb?6
%h7rrmAbYk-?M-Bt$.>Hrn%=!ujuX+/rGp@LhX$SuS(uK*]u`qFh`kJ_IWKo1oZa^D0;#oVg[8^c4ioqW?bLd"qsj>4XFn5JIJrNW
%X4L_GT03(1FQ6H;J+ig6X5D_sIIiZY5N.M"'E:!TrkElbG<+rTs/,6USsk:>/5+.rH_L<b7\:Dm(6jjU27_r^:\5^_DN(8qKr*k$
%$fNSs>-4,X\H4(Y1^!7;Gpa9nC-ei#oBf02:`A,S$VaE:@bC.@lBR9L<2sbp5t"kQWSDbjdNVbMrO30:?D4Z=k@2.T/Yq2'Q_N.b
%Ebi5!b_)AF`,[/&fh4uNP0`XGP-8WA9j5E!p`Nlr'n(&_PIu=%=/$r;:,Kmh>iaKg>Xbo6G<b;*kpg(e21H@Z45$=$L9PIOpo0kb
%7b2<k<rp87:]".k3k)-nF0P2s<V51OB).ICbJG"(G'4U5QIrD4=%RM^Y/[O/d>(T1/;B)fGjs.:m4+$s6%c@$pF`QB[6q!n+e0l$
%]u[D=p<LW$%J&4mi<smUK79@RVo^m@HY/cpD^;M21*)L#S*TK8m:J"WPI0#$T-3==HS%*qKJMCD8-aqNl'R=T?MXr$A66K@cG#1@
%iXl_U4CaLtPZ:+5Ra(%-[j659mat@f.pX\NI'nbH_.P<nKVcZ2lT+:uJ6ktYRN;AOcTjF9bY;f.W8&.Yi<jJ1[R<>4NE;jjRl9T/
%1/\L5PV"WpBISkq5%Yo6V+sERV?r]L]]1W/FsVIdnV)DL^JbHKYX%(43bakn%d]<%9+i>>;N.cB&%#ZHnr^n;1h#8!O\OCE[PX=^
%*%In1@cb[!n`R%+PA(turC*$eSbQ2dij32e],,\6qE+onmK2(-#qL3m%QBM1+^_UL+h#c@.s_0c-psEMetCnePUYec0Rr1'*el]?
%*Ud3r8>TT<j4YL9='<nR1++i1<o0fUr_k.G_E5*]m4.?>l#N3Cc&2_ah_MfSr\]s_g_RC#<]6%[ouf`'!9upL;ufP08gtc,TAi;9
%BHKktE#<<_=(6Vd&FlQ$foj,uKU*<F@uG$AApp2m<=m>A"p:47J;OAJ[>5<5:3rJ%mR.I+dS?%Je.G\A;dR^?mjA\THpXK\Oqt<6
%ckl8Rkc<Q4<g%p._gQL']QW663E6;nH&+kQ`"!DE*EkBmb;/a#`FqhUb$^,/'q7_#/JWF@4cS]+6u'ZqU,M[h7K$%scI$?ID";q[
%aKeZCm4L\/6mq1Yc-(2#;Vu;:Gu67<:(+e1ZRT0!.+2'-j^5S'pad<s)INJA!l%FYKU9CYZ@k,t)mH/rb183Ja.&YKh]_-ZS;8=p
%Uu19BWFaBk=bRc\R$-Q4Ft%7(:j!$oVP4=76*4DIoZQ;n=Um.0e0(Sp.Ta],M?mMhg">7@6<G5>;hc.`'"n;]/@8AZ$2^"@Zih.B
%?<Um\&<1Zbh+A?31"hclPd>RCe:RAo-cuc#?(*Gf0nqY66hh<_Zh9YPF+rPo";g;TqM9ZW8k\a"*f;6N/b4<qWo\TGSsF#";(/qa
%^`$)?)O[E=?$?Eb4Zkd#\(U.(fJVU8L_lC!OPUc==e:b\%a(_7m?`]pb8lL'UJsED$tG\c"lk\`A[[@0W,tmgG,5VPRT=qHGPH@n
%R:&\,U4X63b0hKNgh.+_.1/>VS9,It7BC\.I)o_5I@a-";ACe._3$[u&7O:>Cm!ZjC#G=28Y0KV-PD&/ntPLRZGa_Q&<TN3+Nr=[
%8o/U>9Qm\A*HTHX9B%1@BomdXO;p8lJJ$p2+Y7d"?._qLQlbruQ'Y!67Bk$pL1p\G-#XsQC=7^a[2UCT@2WRF-nh2IRm`e.@9Hd,
%!jd'@4KPg,02!*.&^uD]q9Zd1T=.+"b/5uQ-H6X^n:HEA51P_5<V3,kakQ\n>p3p9\1C8_['d#Xb8"\bUflR2H*?NPQZQpJ964A8
%e?G.&<9+E\3CV.M#`>^SZFYja-lnC(%%*IX/d+8T:$'/A6R"9BJ\2"Q8&Vk+9$oBIlZ,)B/&=L%%X0dh9.T0h3aJX07WaL":o"NW
%l!X[>Nj5Z8>mX/F?@65RiZRD<"p4-pq)m'iYWm^lSsVtEnj>?815lVulNDt(kd._5%#<4DbG&(\J%L[kkOIqE'A8[?e?6`3P>sL#
%Z[V*cQ7BIC`a662UJRZRjnfi3Q]sW"^/PGC]\;?@@BtRL"MP[dQDLD(l>GUhb;3\MAaZcKf7^%gZ^7g'>#st*_%;sl<4f=bNSi])
%mQr+Yp8GlZ!6BbQ46l`16`e#LH4:7.'9VsaRLL`>2Ib(!6g`hY7#re;&]79UR9!g)Pe-(+N403p'7CV#Ll*gkTp=/-bTW*%`s*H@
%C.Mjf8r]r.\T(fh)HCkdM]>?IBU$Y"+sonK\f+>+/B:UV"hGU('l,8Z<F6RAOuu'7BWmJP<aB"YlXF#=4Hq!iF!`t+#J]VR>S(1r
%$ATu50<*)L9/W%KVO)O*.Yp[A/X)ADdhI3_kN1L_mRX65[a^OC0<+Tp#*g7K!:qCAg*/#3/LK,u&f0A1*Z5X+BQJ/KlQXP"ge&8_
%P+K\.9@EVYHIjd%X[NU>6Obi,V`EZ$gPHVpTW'sMm-7lkPh?8@j1/i\?ZJT)6lO!c6:6<l*4\+0&VAQ8.m@K%X)0959eD5K3Qfe#
%3ulMlF82%IANLJ>SNL1Y/8Lr'OPg\X0cuiYlU61LcP&`"e3(gKC.iMJ]HTIRkIR0r]L/I_bJakg*>Ot<F,g^I?P(DYFs3*r%-hP;
%39G09JZ$o0JaIg9lfWtO\duRNnP?E2X#rHBAG=DW]QsJBjYsdnn+YF0T76h"GH]jc_9(lU`M.#LKXfDpP0T860e'm<+kCNB#o-l?
%SH$ee_>&oX#j!MqP$HP6\ICVr4=P:*<&>4%)iX[r=d4Ig1^>_-Sp"(n?)pPlUX"RK6hONccGAA!M'43pUFm:.1!hr%YTo`_AL/6s
%r<b1n4K#%p<j7\?U+P-gr:F:khu;`$hJE?EEM^r\GupQBTZKNh]Tqkf[I.K`&dG%%&#j%BJ)`t)qbnhpK7s:5"he0341^kQ+4l74
%,=1qq`Di/8l8VYZ--T1*U-Xto>\YJ@<Y0J;$^c?=*^d&d$j4BZJ'$UdBb1Ld<^_M&$75&T?(5M/3)J6K\eFBJFGH79EEV54_+f#e
%K<D%+]`MPYS0nt@\h!APUta,5:%fK7'm7oTT2Di<iE]\\1ljdW)ZYQq+Q@&8#iUPgaC]Zo@RN'B[->i.!\9?4?AbW^IN[e%nnR:N
%lW*c;`Xe8/TGQ,o208FhHUFA%H?kKdc+pc`mn1UdP(Cg9N2fcD-SGcu&PnFT]q2QSI&:"=Wis@V`?SdXKsJRCZ;+dBL?7Y6e19/e
%g3^_JId!eAJM;A1i<+gF?B,h7XMJk,NBk\8_Z=V"W84,p,hB$g3aCtT&/)u$h3FcH>sp`M7DqVaG-t^GDZhs'//DphkQ%uG&JWn"
%U]h4,N)#.?#@F%BTYN^NZG7hAkb1Fm.9ZPe#XFW.Q`g=8'N54>k"5MAI4ZJ'C!nlk6JCNuQ60RQXf7inKMd]kUion+QN]51Od-0X
%:NYc%9Q24UgP^34JAMdJ1.gT,"cf_;O$E8:-X^8=DO1*%lpP#<'qhkQb`kO;cA75g#[Pus$k)'=9=+8>_KU775[oImZ$0cmPh3fD
%6;+&,L4ij$TQ]f5dAo#t[($0R)RNmE7,Rjs!M6/F)-el?/&\\QMQ;\uFF[%3c:k5?fHd&Ph[PebJ9F>e_.p1ff^5Em\SbNQM`Dr(
%-sOZ366A-9#rW>PQGoCc%U,;0B",6W29J8J4Z!l3Af2U"2apc\*0s;l"l]E1SC&l;b\--B1Lce$".@[p$Xk.icrqC4)T&H4:&8QA
%H()_?e#!=5YM8HuRd@_td5jS=`-9P7U-p`Zn/$OaE?1R..:(?W7@sV97ftJ/[Q*IOBrT9RfoeZW,YAJ<0i'b]4iSTH<+'<q.4@rD
%.!V$!]%BM=fjabG$i3J;L7*;U-U$Q1X%N]9Tf@V-b,g_dQ-P8]XQWZXKnc)@=Eq03!`,1_05WNd&u@scEgb,O>N%`f'>tZQ;&Amn
%TGMMs<cig>$is5ES8&Q/T=0POl="6_=O4Jk?oWn?L&p42^WB!]3/0()@Jk;`9ACh7SjZ#I\*K\Z>J[6>-`j=&F97<.laS"`dMd$O
%c&ihVoGmR-5YFD=L`U+rn&e9TlGUfdWOn`.8d^TU-WhW=SAa;/VF=bs!U"\R#M934&X!2aaW%H9L,t)['Wf0l\CXWb]j:3kGsIo:
%HnSZRIfPNC<@e+C$K0$b<hnJ'oJRI+m\YB?kTBTIM5uT&@tcKU+,UhR;JiFjP*Fi;_#^V`P;go-K"6iM8.MEHRi*j<8CRJP\Q.Qe
%QK'OpKn`jBO9:lRL2&!don7I!AVAp)ji8KQ1lUWt!j#03X#Hs+N=)cIn,X0!/Y/2")qW#.]KT__Q&Bb-de=&KFG;pcD%*dY>8"%H
%Yo.B?CMRlG8&PZ*]CfJc,NL_W4VY./@`lgcLZ7\48<S8_)W.]IJP:nC;o_':?;,9_3k>IC9:HOA6>&&#=:mJ#h95kt86d+;="u(u
%KrWN8Ge7&rA7-*1`L7Nr>q!$NdD)uS]HXAtk^n0n<I(;`eC8W$5cX5EI/!(b1>q7U&:fFj!]u\UGG<Od=>grFR<C#a7j,'%rSd8n
%J?ZE7Y^XL:&9D"2"/_5D8!J"[I]R)q!AQtu\TB^S1e$&1n3AlDTL>-iH^TP\<F\d#7F4pe(W>,26!-Q,1+[H:F]fFTZruc2m)-G'
%Ib58JZ!\7Q@2G3SV=o.P;3-\g$mbo6W9E/Z.H$?862eap'[Q7W/E"ERB#+7R$WWq"Hj=_bQaRAP?j\s"*#OKd"XQ;D@9`ed-4F:G
%doeA%519Td6UX.!64qRR.<A4I5ugI8HKieC(Qm^O+ZrV3>YW.7o8I"5WXjLuK(i=`Kdt_8#NoMGA;%.R"b6ab=lBX*V1DHNnGuqu
%CeVQ3cH7oU7Hm1u@Mt)[^rWTGK,?c33bTV'3[2VIL`CI=JMFrFk&i\P?bZT.keJGZK+YX&$fi^)'6C5g^`0]1!-;*fH?$2L>VL=6
%h)/oG#\PhX*pliBC]g20A6EGM:t$T1Y;Y]u49X8%3.Su(%KHdN2kseqEkbWiW/V9V[!3p"bL6.i#M*Td&CMl!$0D/B0>e?c#&sjd
%6<Smag!\J-:>M"dUkt7%.Y/GLEY`->nsBWHMI7FD.Ubo62]#VTX7<o7\9Ni'd^'L3;iE=5[R![,>9WH+KAZ!a_PgnU7p]>o+qn7]
%0c:6t]"_3+jD1e$"%EhW;-s`51%*B`,V9UYkC@Ud4fs<8Ns,eu_'fMrW4<*Q'*(6?+p,+=d!NN9V\GjV<?Xe4Z6DaFH-iY?W&1#\
%lOE3p"?d6S$%2lY>pEm=+!>lX%KO-Ln*gUe](Z+7')Wd[Pf#&jP^h**CGG)U21^"!,"`13<QsOO,&0D+[C0CV1F2_)'%RV9+BsAu
%agrs";=%260k^pfJA48Mm]_KaK=QAj9%SBri.\E?CbNaM75"K9)/R,G)Xh\/><dPF^(!R.J@fZ,Upu6=A0rTSMs_h@Lt6R81##RL
%BU5laZVF1KV1aqi6P^+TXO<dq\nMhO[=K8WQmY_nRX5/67q>CI=tu.M@W^);!b[<Qa=>G')"*T_mi#VcaquDJ"TBa:;j)Mt(f-i'
%?Q1QC#`G]<AB[:GN7S[sfqa=hNa<WkX/A"`"E@oa,GnT=&VCZ_bZ7Vp#cSCP7+^qSLqbdbhdED1eLd6Y0sZY!XG`\7'b'ut7C0*+
%@^H>f:[FV$_N`l-G9pjO4H0W!%!HW0b`kFL,].U+BUcsg8O"eG0B#&NkuO1nbQri_#?^-:^aQjC#?OX3%TmPp,tTGJSu4S9[/E]>
%i]J.>BGG#U5"N<j`c]Y/U3WT-)5i,+$9r"p+gC:r2aT;V<<os"VX5Ml2&EnI\dq<_c7M;<i*ZW-V-Sif(h0W[;M.(d%,.0,!^Er7
%b;dV"j@)=OeAA^PA$JN8YJL-*7amh!7B?UFIkdSt/I]:3D2ImlOW@AC[1W;1CO365.P*A]F'pK5&ddb'\#B*2T/IJGi?8oCF9dUt
%jc\P@lV-??--InbnG6_*iYKN_A-#41]o2qMUU\B/M)(_1rCZesnC"n8,^^pP>=;U[";mqC&5PcZOFY<2R\cB2KFOtN@$jE?(pi>[
%_)B<8C)Kc*F,8b4^dF:t,<W9YBSF(])6sTo9?iSj\Hc<b]YHd%U5[a;OXE3H$kl"Wp6[V&R;rp%o#ul8]ShR/B#g5Oo.XjX,I1MB
%rb6rD+>#@fa8<_P.[l0VFD&Id?74_6@XX!flcEu3.-bAP+"*76#1B/E+M5qs$(6m[>Gn\KcumF#Jhn;W1"DL%BY;=5-8pQ'RUZN^
%&d"k8S"YbFG%iKC6VWaHd#<]EOr>K>4/aB9/5?=;"+LA)+Oa[7^C-1iUF*o5GW1^7"T>Tn,FXIti<qs[)HHCu*q?49o.i^Feuj>H
%8r\e&>*`O%-!NLW#O>_+>Y,=GQ9(701t2mpLBnPel6R/SmYOTiTqnD*%U,8Z(hK+0"ATLIA:Uu$-YqumL(<XgldX^fN(ro,3ikT4
%ST__*&GUgoiS&h5O?$R6K9J/M-Sf\7W[T@m:ZMln1h@6<iG_0S&K*hi%)NE_!$A6"It/-<DuaE'Y;"_Rp9Zn=1tjG[KZZ;,,ED4d
%]%i]](+^s1p][>sr*,kU"C!37l4KS*ab%?)],mphl'r;?UfIL;;BHS\2B6tK+GPW*%#<6M$7IGHg9=mmFockuAfWX*?&+R+'d\5q
%U[=K532nfL9oUBF4_G"m7Af;X7HtL?8>Jp:e\U5IB!r8OJ3p.7Mb@.L+.D(1M[TSHdnbf<_Lb(36C_-u1cYhWB9+`U/QioS7Xd/Q
%PmPP5d74NMf,Irl7&rb[aUcTA,%O`\[YSaUJe1YUW'P$a=>r"F%QJn&Ko-q.7p+..AMF]?",S]@0:d2"_Kh"&&FcJ8J-kC<:O=W"
%Xc917/%CJq"'-dfb7pa@o4[WrFC3G4eTS%l9_(Mk%/>F/--L!t%YPat7OII.:V3aeS_1U%Kh.?IYgNO7jTZpS"jr]+EPJM4MsAOt
%o4Dt^<[]-;8*G?GQ=g&+ItX`9&*6reKCD^+FmNJ-oq=3$EmQMqYR![L'M-\%_9c73b`AJj7LObn['Yrp/8A)=DP30:aoVWEF7p#V
%WC?t<e72i1fa;\^U=(*."#?e]!EEa3A-L-ini)[HLn#1:L7*j^Nhf6"M4taG0*P349T"u80iaWh.[<]J>>=!CLX^*7(2RNjA3Ef7
%BWR?3D&I\U07"J.(BG314(373Jl\kLOg"til\GI_$WAKb;..%k80Db.//+-:7&qM9P]MBN^_R[[!MBb(6V@I6!c3t>2:+femprZ[
%G@cJi4M.6drC.SGq/3I%).iqufb$2<(Ih"&$kW-(k'i+'<0"=iW$&V`FWgcdUD]*>PTN62'H=su$k5d%^;X!kR$3J3&d>`)T[50G
%,SH:*(AP+9'APhu.m/6IL($@XNZc&9/Bs>(%VW,Z,A`J<f/$$cFL?[[LE(Q`1rBM8njn#KFJLA**E-QV0G\n"DBbhMGg-O`@Kl>"
%^?f=3,En2i\tI[%JqUm0lmq@tg4HiPda:RfG??)OD^hG20=+ab).o<*r?_V;58h:N-muB8!b">P#`OJc-ZnjagOsHtHA%8)hBnhE
%RK1s'Q@X:u#b[sNUD@t(V6C(<[4-7\j/I@!dlNZqm$SLgdl7$R4haR+*iM1(i"H04=UeN0lmEVV?Hq+[Ik2c=NOBl"K4ru0K#1ZS
%I`,6fX/%4GKYTe"%Hpg/Cl+&[1Rq7ponXrmDI]`V)7;I?W_>f,!3!e/%.k,4SU*_O12OHf8&Z(q5]>"j@&BMHS8__q\qc"E5sTHu
%>/*Y[$S6mK5r1WJ,[rh0l_Qo,ce\SE+W_La^;Ts+5SCGjL:WK'"!N'>qbfX[/FN`sF7%/Hl-pU$!)S\:o!BCWgd9eq&5n8V??C<h
%;]dHf1lNC_A[P68;=V"t?J=^9s/t&(dYa$e=lN&(Kif]-eE[)SZ-[7"=KmHSXF_eqQKrnl90[j&^(!R.J@h@`,;%>D"HULcAMR0R
%=AFZ&_8/H'd0e[IU$<WTia6:bP@,;DN)`T-CoAL60?kW#6t4)STi!NW30D`q0[RA#+jVF#&N`EF4$6,r"V_P*L0^34$^BF&f%kFb
%7=:Y!^A6&S;qjHE&;7a%_S?cX9NoW)hH=:TBIXo[+.#kO+IX335^KeFPsR<-*oGF)nI4+eaEE/kiYb^'LpAeoJX48"`(^,,-;`/7
%S(@o3HI%h1Up_gXA5XWOdY*Q2H-4p,`MKiiTb<'P!,Wn;@@B47XNQ52;;.k)6;u*Tl%p,i>*JJe?r:U"H0G('Bp_C8knAJC@J8aK
%#aDRbOR2jUIm)AoTc)oJHl3k0!*W^82^1I;_(&18nOBf!g^fIG^!uX,3C'#Der'lt()2i[!=YNt%6g_$2@sD3Q3nUR[Z"`IAcaW1
%QU%o00ZsX3YG2+[`%fS_4Hk=39:2]9j7?7pq@5*]UY(0P!%fTuAde3rm*_si=s#<rJelc)OQ'rX!,dNC4$4.*lS>%]Dhik9R*o^[
%!Z4cR+,-qL>qBV8>>-'K*QegC3^0i=i"g!6IKCG=3\4f.C&S`7%c.UlVK15lUaTEE__J+6S*='9aJPgVKTJ!;!CV`GS*)4?"8moZ
%kd;.3H3@Kr9R3lj1Xfh7qS>Vn0_4eM!#Bqj>f1)d[#4sD3b'<Wn2D.iM%o7s:I-ck:sYf1AqlSpr16@#bsY1_L,cUqA^.A/7(^iM
%)"rgkPPT*@L=YBV;(Q7BW5fi/W5qp\B'?K'4d8fJeTr8H]TelW6rqn_jX\7:a#!KCM"_W$Rqu6*YbSUqfplG\7c`8*'ui%s)i#3+
%X8?^ENcqC7h4,lM[1I=2D2;AdJ@?(sZ8'+kXi#q2PmHOloi&p5`<S)?_i1)C[?E)RA:c#5k:3/cHYq?Hp1+L8!"8CpU)>Ip@JB&P
%XE_pW?UWN\P6NiH9Ft\/ZP=LRF9chh+RkmonC+\7a;QC;])fB1b0^ofi[W7BX]?F&goH0rWJd)3ad\.P7tq_OifQG9L_CY`%*CjV
%,*<'14QOI9RZ@,RiAC,g7_1e=3TtK?19m*CS2^ftC+:!tHR<#RXY5`CQIBlQ)GH,'j+X?3]EN^tJlsoX#/d:d;LAP:\enL@(K0VX
%s20+#hD8?'nQ)CGOhk%N&&a]$6>j&BM$R:"Bg[#ic%beKRGhHe0Yg<<Rb#jackZ&%%.aH--o,th&g&JQpf]3cE&mFV1p)'IC0jqk
%)T#%M_@9Z7$Td-[MENeA==cbj0!t6k1bUjl.R$+34to<',/bu2@S91JQ<ahp7Vf25#6^KX&Qt4dOOLf%nI*\PdRINQ*>2;5Gb>g?
%ZGiOT6>r_j:u<cW2VrQ'cWHn10$JV9Tq;U]N3CU8e&5>n5JMKfB%RV%:Vg7oFH0nb"9Eg#BZQKZIPb"N!WdR7,T\P=q&a"Q6ZG2W
%Om@Of72FqgJs]5n=;2V`X;3<,%I?W.+:QT#YZL9"+2HJN5,V]#6<^l1.k.9HL,R:(!"#1=.%%7l\!gcL3S+t^Vb,EhQJ0,f6XYk1
%@;3Eu;*($dqmC1-)Ulo,!uCsI;(!OTcYR7'.$-K?AL9)9W7&X9=Va[6(UPl^#Vn*9ER*$nQdat25Ji)65Uq+$TIh?t4K%C&\<cE+
%.01"jCh(%]<qf0BPWIY<LF$H@j5\1X/mT,9Xf4bhP-k>>(Z[4f<+r9;lECSP2cCTeO[o-]C:28$&D+">0r+[g8Y&O]-bKMWe8/-E
%XO4p0.$nt#XGASGI"ah#%a^@iG?G`\@UWDQ=U%=GoH(/!aPI/$LCf9E]I4a>$1mX$L`-=_@"p!PFd*/c"OKDmLF_II/"9HK)>VH$
%'L9<p<[,6])5\2;N2eh`X?Hgia;?GRj>gnM<]$?SCCIPu/Bb%qq'ZH<)+2c@Z*.#e$!I=cZfXp0&$\bXTHIOLmDNJ"*QiVXki'c'
%/F]aC*;3>>)H'$\rGM6-!@D@"0!H_)l]Ug;d$.t1;RQ`>^X:gb/7?O,"e<2`FW4>F1f.9]`2G7%%o]$i#+g>.YWo0.4P^fCL9%G0
%d'M,'k]ilAVc@i-dXueS0:Y^d2A3.`@T@rDWF_1r[>Ug;.q7_1mNX6Y2>VjqC]M8BE[YF"0OiGN*_*fOd4@b?1dGtgH,_,GGlb&M
%Mue;Sa9(j7CQ'-F8"TK1PDm0i,3MBF*_)=_6DXlLlSY$+"_?-"Ad,&^(,]k^iC2Y+C6MIO&kN[;6%bqNeuZ:bl/np\6jmAQ1k`+k
%T\kRICIU8sJsur^dA#mUTEA<VF-s,%'d$S`&k'P5_U=NR=k@j/JTlYh"]7:BVY<kh6?tS^G4ZuunO;nFFiZ;f&I4&n+:sMm^M"r,
%+rEmaKc#<WdI)Dbis-n_?!^8A`&a%1#>[8DlpfbZN7^*$L8ni=]R10$_]#7tO+)gNh4iI,0Xa3YHVMn##S37GSEeXe&J*R^mXFDu
%n'nfi:%*S@HZ+(YV<JfRIJ'WgcX)'CGkLI]^3]H"Z8V[ZorIPr[@:L:jEJ)jhEH4+qt4%]ORoBZh2d&kqnrHP?S>5;]k8'$C=]@t
%@Sm[9Ksh3^N/>(i/9e9o>E"P#jTm7LZ'RL##%Y]r0Zn>=(t'UQR&adGR[A:b68:eWV.m;n1DU>.T[4+DPYUN^*6];MBHlVk?><:h
%ULf[=+Pi$V,_[.:j"g+mm,(%k8LUWA:N79s8,*p4Z\Wg8T5Zo]oh52iE`8VH['KU:;ZRcR,+0&Fi1hGk.E^?oh[M@MH*;N=d2HlL
%Ge#u@JHprVqg)Ot/L9R5:@n0AQo&!r7""qkUnj`YL43FYP#A_XFg[W2&(:\)d[/\&E(<>%i1VhCd(rD>B0BHq2]G[5H!2Gl)aKlJ
%cM4>U,4m6;*ot%sjahi=3X_h(TthZq):YRCDJ#aR]kaug;Gs_ATSa*o>o_>&#]o!#@a$p91!Y=):sdLH@-"`l*g!'Bf3"'PL=!eN
%4ZQKWKRsu!D+Vnh*?e5b!/C;"KNUXhAKNKte-FWk);IUqY4'^P^b-);J7Je#.!/ugknl4k=t_k.),m%ONCA/_8^SY+CGGRD2A$<X
%OMuj@$12k7W)oeH_!":O/6^,6@d&F;3GRWCk>J!hMk*?2Q>66X"M5RF7a-J2Y=QLpojLY3lNUt?-nm,=)"7,kkukCeZdrI#$p]^,
%!n&\<"6I+#&OJjJUs<<(Dr3Cn75)p5MD[ZDL%UpS%q&q$BK7"ln]?F&M=/B[oIiA.3Z*MOP[WC>[1H9K*O/7j_jJp9eB$4X&%#`X
%,LX@A>pM,"?74()6rm%WW\,cVLK%b;7,kLd$#4/<gTe;'/HHO@pib_/.[FFpqErO(mO``6b%%-3f+SbQU<N1?W6AIM!i\WT9)*#B
%:b]MEpSp]%jS9Rfk;-`3o!0q9+f!#H9)()D?*e'qa6D-]W-iE?;t3c\H/Re[2I^JE%Nuuge]"B:glgS>BtXuA_pFQTf4,*NI0H9m
%*cd:t>.TJ1^epjMs.G/bpm8A1",1uU5Ccg,`$&%Po8%::$qcg4V\RROM^hm@MC5Wu.kpKYhfc-\"TO]'1eH`lJ5`hOBW3m1?F4C_
%G-R!*]+g,TX'TGb[A\XUk&$i95R"J?AKu^h+?JdRL'"-,Ch0&-E/c&UnXMYd2UYT`f$I*UUU2",g!*>:N0X[B$+(8Kd,AFc:/ken
%;6Na70+X1qef6p`fZ/#72!W9FZ9SI>j7;6gaCnn2^Ko<%>A"f^aF%+:GGpnJpS()G8um0CW#bZBea:;?[ja`d$_Pp?,9Iq<(HA]3
%@Rl%Y;:cnYM0>TA&lM-,U$i&HKL'.8Q&J902@.A_c"(]eYrJJAW$>(@eUgNrPf;0JG#dM*7'=15L.':<8*)?A7LBK),t+03d0^p]
%VWB%d)?qbW&=kA#c-P0faQ3Y05[1U-MsQ=WY<Wn*(0:X@F[9bgNh_maB]^04<MXbt)kic-+4',,d]\rIVjHqU6tm@4ea:@l")\+r
%NddNmV;C]`F96%e>D[V/Ac>";:)qJ[^pu`%V2<9>RKJ$>dYhPB"Qi(0n7%N;APg19.Qm+.,XO&E":6Fh.8s't?r-?fs3\UnRD)ZU
%$p7bY@:45g$uO.u8E5Y`,Wh;L]><0O"=cIA,*7=C$/EFlc>$7-e;9;\pc,[nF9*mm5m4R[nc\YEig@9T<C9:f('H<+JD0jFbG(@(
%Zj\92)JJLN-\_<FN)0Ls`][9,?3[4j0c5Y+!Gr^QZ=;8A7[pGh-NY!#b][e&'g^E\j1#T3!jN0.YfLj+KOth[!](c_A8Ion",RU\
%Ur$(DMbdXpW5PLt/2UL[\W;W`f%k^)7h+6?`G$d/-U"CVmBS/3-^H,_?Y/`\9J$Js,;SG4[BE[Hpj,Ie6sYO!-V<.K!gFAj>t?:n
%^qEUo"I:E<LI_c1jkbuJG77:9_#4@F)Q4qOIH1b`IMK18(3iAY@54!Q86e=EI`ccgaOb>[d>jQ*l<MUr=tF55l_:54%Jb1_A5K'h
%8ZkZ^ATg[FL_1=nO^OiYpTi@#B_7&$fU5n3h+ENiVMg7+D&Pa;*J@An`%&th/=K0G=\@h4(Ql!1WfVHF!i[Sl$-[V\Di`Ck"C0(G
%$elnV^m3a9?k5YG:difgG`n>7CRi8L!sl_.-IUXf=6RZJa?3#uOBu4J4c!nUdEXEaS^LP`^^JF:/u[=Y-klqc:+i-VP&H[DJIVAY
%ds_>[,"(,ODl9T.`KWS*AF>d)Gnm*+Ln$BBWoVEj>;RB+.+oK2d]fsnih;d*NW,.C]C%,1UHuVQ'LPR<KOY5M4DLT=R76$7K<)?q
%%00<NRd=$MOA.C71f't=NbA>D<9/\4iu%WEf`aGIe+uMBMB0M+i\d'f83(]o7K^bBrOC'`JI*op!LVhZ5l@k&+[H8r0+4j^,1i2g
%a1E_$WapoW?\#O8]nJ*XbLr-t'aXMX!#gqo0j`i:"$_38r`q&65!G5<g2M%*1+Z&+VdrGY;6Rg6ca8iQpO]XWD]H\,JHZ]^CK\_6
%Bke:&/MniW%[:"2ECO=OBFoMJn!Fk/HEF^_F'f;Ypjh^9L/tUB[pcjp&-2O+M50]8`e@+O@EKe(!SN(a?5U(ZJQa1K:V^^@W`:18
%@$Am;Dm9o^4@3kn`g/KU`m\j[*ta[UrTQ*qVD:Ik5lEG+T6ZPT"V(AlA%YQ/Xoh[rX.%;qQ=6b/7MAuek6dY\EPu>>m^n?2@\g46
%7PHOBC>rX?&U(-d(k_a'bdj(,$N\O7qJo/UdG`\*%6t)T,_K!\Z--e?,m$WqRCp7UTFLBe95ra^Z5B?f8O&YS=Ni1JT?^=D-op`1
%NabJRV99MS!*[C.!FtqAFd?iuLYs$rJ6P;DBPh^Q"pR(KHj"kUl7Jq0l?_<=MCGn8[qIlj9@ueihXcm:4X\\9'eMl(X;VkU29jG)
%c"^220bRlRVimR82+rsEETr.1^heDeEPrm]WT9dFRgd$qaAe]kBH_;UOsg+2dX)(OP1=UTP"M:9FpU>-J4X+%V+2Qt5c(qcHDr:9
%NWNWC8?j"G:`#joAIg&l5e\9PiKX6WI?CP,$PJgl,,u`DKP4tK38fPl2i2g6ebA=Nbe:*9+h9SU^c[5!>;C9To?sA\CQpr4Inj1I
%-Foe'^nB@.?qBkB/<3r1R?WS/[1g<_Nis9l`Dp/Xb1&d^/Kubm=plj\&0\#9PRc*lH>l7i*?nR!d38`V6W$I?-B\ED/aF,=Bl)ia
%7_(%DA*aTJY&E#\C&oUBfBLHkK=@pAaBf<;'%?u_BEUZNdb-YG`'9)jVAc/=[%`bJMli9M&8;9,AlQJT^[rEo2Nu(09R)Mt_?i(d
%3qb(-R$m2"_3aiCU:!RC<_,H1fgEfE"X;%Qs.KOLA:d9,lZ&?@b/u\oFU4NO<+K9Fos5A6Y:^F$$/3R9+oMKS:=dE.AM/5koEmY.
%JXIWV'9f'(-WM@0MQEm@oPPLH%*HFCLe!jTVZ\tido8KKJqMdgJcUW6`h)+&)$UAF[]2O,FQoOQ0,RW,_LL5j.Uil)/tJMg3@_LF
%<J_iUg$+EQ*t*a#rBS@e7HqHOBgd]<.tn`D/m,5eBg[A[eT+jN<3&r8-kV9V67<)-4]C:)o;`U)bSUc25L!Z<XJ$J6<L(CH>55m\
%+5ep$b+S<AKQBu2`O$H6f$rroP5b+&DQ4?t_%Tp293])=qCEtdBYe#AC]R\:?0Sc&>=ih>8g$76i^m#qG=I)Q_;QWcSA5fWjdYot
%kZ(du#h1LIHD`2rL6cH5E$\Ag-At-WZB28)IDQNn6qrJCRc4-7A4]8U9nGHq&Y3AjNLD+TR_BiCX[;*cgcCo=8-#CHU+kfn[?A>l
%Cp/QVCkehq5FfsZBHb7W48aeFY#K6l^r\%!F`rIf4X"#Fm-uA5<8r-R<NF0[Psi8-,H9X)0V`[<Y%-SLQQ=kAdA]SHf?6@0jiVOd
%RILdA%87:3%kuuQ*A1&'B*Xfn=<Q:;]XgM`N0#V#AO:'%V$EIj6'2Z*Z^MjrM]K]iHUZLPR(UWm*Tn8EYirhu*CmYmafOfeZ^Q5(
%#HOq9*,E6NM:Um$Z<Iqp5d_fg^D^p%$l8TWTZV)A?cj&^9+$;um'D9Rk*3e0`_Mq<@7E+36L-N2b\oA,Rk\,"=W&t8#CUE`K(1?`
%bn_%*=k(Z9c'DGh-R<SLh!?>J*f3LWMm'&j$32tX.O(2r<[q?HH^.iFD/<qE\?V*0jpYJAP6:qV;?7f^#YpNtS6@IZ.1nfZhjd]Q
%0r:(-84=?!F`IPR$='*/aE"AM36NFCe8AR$P45\kW\VTqc>Vbp,'4]E?NL:7NiAs-o.$&H80Y-T9EK*>&2a*R>@at^B2PY*7q,PW
%N&M]_ET0=I(?YQaNDM#R.ZuGd^1Z"n_S?;GM9$f#J8d4OM:TNL.o`YKV,]l*WV)O[/6XR*]pYUWBod*jH<i+\'GF;?;Kt/Q0d9Q-
%p"a*TCbRP7>O4E`5;Lk)>=`JqN/+rVB4F;fa=o;_/30D#*LdhFrCbq^"!P:NKZ@f_K`e@],a9`(!&OR_eX+p<"t@s9d5%`EGhmY*
%!]MnX5r1"8JJ)HNPNkm,ic]hc20Kb)^=Ekh!f.-.,b.T"8.'&*0r`bN:bfsrU)teU;)LHf=Kf<"C;TY?GN_dIh3+AeF1@sI&S*Y0
%`WS,iULh\pkmAjQiC:Qs&?[_X`n33A?*aCQUh&8#h=^sB'ufYp=D9j,F&:VIcY..\%P[Brb@lJ?e?C\p\erC&?/IG0Qg#(h16Yeg
%EAJ9+h4dRZ`COr<!*-LNJ\_H3QG0QJPbs6eS6CNXA0O]Wd9SS]PD3pLlGR\pe^!o(::47_NIr0M%4>N#T\+I^(q<:1OM_q2"m7!(
%3MG]p/>3C/9IcG>X*Djs;,SbVLPr!$b=KVB?^>'FSDl(t##Ni!`J\^T%n:P.>t[4''F3\j16,*X%]1RjIFn;5>;^Ss%@oK0k.7@R
%,odYMQ"B,7RlDl%1ipH98Q:epasE)/4e4;`PrQ3:8DNI&;i*.XL\PmZ*j2_W=Ll=h[2;;KjUV$ln_>")pir4P*0/W&Q6elWE24J(
%c$)f#NfPPkep50LJV!UXQ8ZCl.4oD@L;VZ$c**r%*"l-oD+MS'U]pN,SMM6f"\[6$Pi:<D2`bGnC6j,"$,c!hJspl#(QRk%`U]$+
%h.%c_"!GT!c>A],59gO`f#>crisKGE//$Yu<B,&8UH>4X-b)Wt>[n*GVeM'+,mn9RH9@r/0AOXlX[M-h59^]]Q71O.CE+0$SL>JB
%KhNs:7,]8Q@^LMU'Ft*Hnu6`&E%"U2:iC$aiN4HM%d.lRh<cm9SKo1:oMMU6']I+K6H[,P#T"r*<jF5A3+M4B5r\`"n30Ceh<Da[
%YV^'(#:C7-8n[5CX_985OFr0p&ub?Y#"S]TTRB0:N]r=K&a7Hsi7]s'Q\cS"<*KYWrEoimeo8>ueDR"8EnJoO9+B1[i=MY'eDM;W
%`rpLZ#+o(2C2e%`S^P+u':@@c)<j(=P[giIbRKT.$dtZ-dmtVuh+A0k[VXU4[@($S7M!dk+a[hJK9Mr9?MKg-*6m9HAak>9-inT$
%K--UW?J*k<b7@?!)G'JX#:HM%6C.).+'a#hZhcEIK6*^dl0TT!-`NCV=nb;q:,?p1IO,9_*c%iAm0)B%N1$KNi<L`;0WD6;5<+Ln
%\=Z#6#Y0ejrNdXQ#OnbSji.hV"qI9QK6(rh<\87R_#`q`lu>KY@J9L^2Xd%US;CeAKH!-8ZT/gE\t'o_JKN%pQ64ne:sPo&*ulln
%2B2SPV#*$dn<G%7M\W5%#!Frs.A_+Cd"<"S6'^,r#:BYq/:XE"-Y?G]9RW`Ba-$FS]"nmE\1n@J@cmt$Le#Ul/O)4\)]ag]&+7LA
%&(IEHK;1kNj#?noNdGn[^[d"%E5YqC/O)5S7"i`E5<();)dQJ*#M7JX-(aXZHW'%X2#+mMW>4G24ZH#d\2d`2`[]$]l(A:%3k(4C
%GXDuO_Lb2@^.o2VAJ,Y>\@-X+`Xf5sK\qb2I(`\G#M5jdI%L/Mp%@P/)F+#n$(VN15BU^c](X3YNYZYn+e6r4Z\u*D%!ljs"<EnL
%N?4V&SJ:;t4h/\+.B:jLHR4Af.m5jG<n9BMl+mD$.1kA#_1BR>"KKq'j.+7$75sksT#Gg%YOpa<G"LFBkeY@cX+]Ff4ZK=A&WRen
%3!"QK+u_>s>gUEO1Oa:fQ:1]V5<)h[h@4pQU]H415HOe@A<<i]#"a8_Oq*]IAA\pQLQC4^SKD*@C0CAKf1S(#i,mD7leD6O8N<P.
%Tc--Tl/rh'ITLu;N.;NX)F$3&(IK]cr8?@APbI6b&+6s65\V`53/DF1D11OOa'unXkeRdi+_@gnQ6.*k\ts*g#j7%0+ZhtLQ7?>i
%1I3u9\clfjSKM0_2glVJi=LtK`nV"nX"r:AAH@_I3.qQSGCjd(QB0"U&VQ>TWQ)4VKO^EN6/N6,K<A-uTK>G!ks\6^.m^ZIE#S)k
%5nIA5Vs-ea?5GCs2sfJlgQA8]ah\"Iem&D<30Wr!KKBibQ`Qn6c4"$lZ935<nD'70HfbL0J;$+!_6LmHFFt8ipDiW2-[5i)$3/C$
%_20&?cH_<%XSJ\s6?'kAQu:[S^`Agl@-C:3i9Yd\mMd6-duLs^;s+6q"bQ<qc[=Ya%eQGU+#kbfFFPe#"%S8epU&l]YM>U"$p&@[
%);I3FZ[pS[0l#+$%QlJd,-Ph@W<_QI)u(GgrU6'?jB2EKr#$A3fl5'jhPn7]d7$9BD(4`iCq6r.CJnPX]TI/KM_?SX[pFs>g+[j5
%)7mY'VuG9A!/NL9888Ei^V,kCr,I#c)oD4_GJ<]6=lRn#:k9i!:Q)Sl.WAK2g_%f0^e'q"a/=!0_fCBWc;``'G$Bg=\^`.083.Eo
%@l8CBB2%4ls6,Ks`WQcb_mY(R-?'aV"D0..9].b,;dG6qd9m+u1D)V@:'E.ZVZKA@GCp1Voc8cF7,W;s<a9etE71U-=gV+Yo0n4c
%DlCHSe,r[C;h<C#G"NoQ.WAG[Lt/n=AIs*;1YJ23=lBIKJ^+BnN6.>:&NH1$8KuuI^hH=q%:UXc-`\ReM)l5.6]BMeSHta9E+/:f
%9E`X8X\!ljM82\G9-[k4"O?'GHuS6LVq"$7Y4I0rcB7f">97a$Yg)0ic3$hQ2JV-p"&@E7f!K7<^_r'/7'mAdi#\O>d2kF.BOUW2
%Q3UYh`hfe"i+N]QgT<TrN`BUDBJr!2Hn(HairLMuY!hS3%lhaB1tZ8"i7'O)q.r1O0F`1)bmb1C-4]c%mkis_<4+tJ2`0Fm6^T/V
%BYaGD*kcDIi346CCU<+'kK8WHaP[)CaT&,Wg3LK]6E\K@%CdW70bnk-b$/[dfKfV".l4tn%1P:h8IEpA"&?ag20bYrglZ=$S[!_*
%4#OLDZ[e6hPD*0Z(3&C^E>Oqd!mW&=8mQ'1B?Ob%_o`&K`l:WA"e>%3</\Qo:9Ql!iT&&^c70i$_8ZP:*[B@X?ibK,/$#2&J<QCa
%O#.>co\dT'<K.&"?,b=Y/Hn*AnQLr'"ZTiGOg;`#J30TTaBK!j[Sdia$?3Fm>Gt9tc5)YED^iKd.s]mTM'*F(U(G`*;Lm6I$-)a7
%%WM-n@OI<@S@k1^3gr(EYn.HI)B@\8O'GgZ^j-E5H/=^7drHpd+(Q1qqDB*W2`\ZFe&f7T%0nl'+2+(rj8au48*[h)!=kg-Uq<#s
%S3fY5hc[a_bbdJ`c7IllRP#6a\Ea8JK*PY<D66H3*cNr?N7iHk)<g6):n7h2W.;1CDhu4!edPRi,&hpt:@8Q'35(qtBb5$57;(nY
%'7o1UXI%T/J>3?QAB']#J5\\<WjhSMCHQs#B0>*c<]7,+"0U#/ao]kr!R]"@$TM[f'a93nS-`\!/`*^^1J,NoM$9Ej(cQ*k/Ds3p
%bEe!qZ@F0aWe;dk"e;hIh*$-t!@K!gfe9>Z^01'q"q<Q08]6<A1uP`.PqQBf^fg\/YcT^4CUGMVY*fUO<ML&f9]/V@,8"9q!f*VG
%]SmdVE(5Q&_UFpgJYhU[J"6lc/^!@f@0/qTo>3O%3$)M_a3RH;7/9@ngmPsGBh5S51P,.kZo9m:i/gReT<0o#@u/734.*f$E?Q4D
%L'\hDU?">*#or!DXo/G;3:kXG88D%-Z>3*>M857fjK[sh?insX0]6mh-?/,=&WlE[i/Ru?4k$`J[1mbqQ44QgD;Q2J8d4W"'b>Sd
%!b[*$GGEtjJLeNI28<BBR/'7+]qGL?DI#!<f!=\;5s1\FgcH`Ph,8g107lVO8QTG9DqtjPE:42@hGSp"djhu&;h;jKY-jKM.WD%t
%`J(`uJ[>+G_Fb!W_5CYET`R^iYN8f.K*iTThC:Gt'f];aA_A]J5m>OPY-dCt<o2,4guB>'E)qLor45gX,NW#d]BE5PX<Z3+cW&i$
%6;o?9irWk=)0`+GADh]jXIS`8))trh[TqtsLS/F&qh>IuK!%Ji\\PTV=A\/^kG?lfF+FGk2s(>)!_6<1e+(QaXs)5t;Lp&!SQd9H
%.WDb^UGc&%@iTS$O%ol(b^AOD2C`[96W[^6"HKSW9PXLN"O;dg]Foc?R%_u;6NiF1;TksOJKoE?34gnrK-sa@?pb)m%LgcAF=M52
%^gli)5m7`!<g]gaJ^^ghSDfJ\DRTLK2I,2*DS!8sJMY<`UoquHNYYY0DRmQn<qQ?6Zn.9.*V-G[#*&o=pMJQu)'-S'f\+(9q(Oun
%+8?l6s';kL#P3L&AWjdjL(E&omuFe)`WrXeb'io@%ikF"P\rn_q5"33(=FEJ3&:qbk=)-JB2UaH3&Z0BR*;D)dub02koeL`@YbM%
%_dlN(%3IQ2ULs"c"e]%cJ)^XGqk]q!;u_LAJ[7ZLT`15fS>IPon%f5=d3k^Rhub?X%;QV9I,O4,\s@sZS7,Ha^i_h[f+UrgI,JZB
%RP<s@0oZIp%m"Z'HP4G=l+h;8VV$)RE4.IrGs_h^8$K@ndt-NsZs3hV\FM>(*cXOP:(Iq:p4EjF@JlSm8d>jX>\#C'l+l8uP@1l+
%JJ/u112CM)#9$EQJ8X#Td7ab*_$1Ca>04fG)n=qJdL6N0CuB!0NZ1n9)`Y)ccTHrM%30<LaJ[eG^`>AC-T.I"J`AnX.<`T5%cFKZ
%<Y-,f3*Jl<Yos3>*$0K0K*rY2LE%WnE$hD4oo'4t_2O]/aoma;<7VY'-LbV/Tl#Y%JHb0I<uu<;/>94'i4o=;)$OXgE2YDm@L!3!
%X8]/,3P_-Oos(=nDmjl0?iUEYU:1#T!Sjr_+o@N**%a2u`W5G:HT8"!B*N=:feG.Z'7e!C6+Pm=!5),rrQ>/"at5Y>Sc5*E'3G>U
%p2;qBjMEeJDq+<@WjIt>KC96@XBY+2fLpoW;sNgF7'TP5_#(>MD+jd9T7'jV^U_BB;g42n)d-2mEnc\)Q_7m-KCg*g'g#(@9)?eE
%;UT[8DmUo]GpiQ&$NbKUdVhZ0lb`tl2a#>C;1=/l"#f8,n[k,\%`3/6i]45:G.qn)NU_to)[dHFPtq$YD:A#@p5T!T<mR_Ya_7*r
%b4L\&Amf4)I1rDTC=&C5S'=VA0rAkI!!=-5he8],Z=WlM,ZSY2d5RT0i7]'pGB8Yn%@V4b/=-oLQ>bhC/%b+@nr8npes556OU>WH
%FFnFI]^&s[Dtq#8fa`YlRm]6'^7F+"YpCL?L><f\@Y/6)OF(L.')UnJhU"<OBll/=2Zfmf^[K\/MVF<)GGb('1I#>FH_Z;]H\:%A
%3H?\'fl2;5R6cBimZ!OpXk[9W1t2o<8ngZ\NA?>:q3B\R$5N9tL=mMQ(<B]s`86GZT\uO8H8jSZ@mfV-n8tn_,=WB_nH:7a&:4NR
%Ve4d@HP?<Ik07<--LP5u?^\TantRm]bNt3r`IaY^#IQM\EU[.KWP,QcnKS7G2\nIE28`&RNKor-oTn2M-R*DN0RL."Og9=Gp-pjG
%m@a/B$\KdYgRF3r,:gs]m7e94M#a+$)qG0;on2!<('m:m>Ae?t8Mu9ggDeN;![M`(H_X"[D`6D-$:4QrEdJJ7pWX4dDfQe/@p#@"
%.OL9tA<#E7eke+gop+@&VHHG?\Mq94nRX$@V?t77KFPINJ8hVtlf?pH&I[9qjPGnT$VJ2mjPFE.n?K(5h2:JbUcZ+Gh#LtjCrsA]
%HLPbtpJu5iXPDZY8iia@AkE]QKnJ*K#pm`$@+=%h-?/FgRG"'\'Gg^mAoDcD1M6s!2[?A8rXLHf2dp[Z]q*oI^8NfCbhV(M=9=kB
%gY3;n#qNDBr$8#V>AA).^f9Pfm>V=9@1R*k#!S>p`pCs_*3M2jfc0WJo5HV3hR*,NZ>%P>^_b'IfU9Dn2r/NEN7j\3r`k%9ZSs\d
%B_H;A^#;('om!D.L4`(iCf#I/*J[YGYLMEZEHHDc:@2nkAm21I$%109fMHq$,R2?BT_9^)W3"oHm>X%LrkG<'#1Cg7nY#SF(XN]H
%0RKR[6pmNtS#7jHUPL3R/YnBY&pj_';F@5nHP<"F[Nj!glqN_9.J]Oe)_JW0G%,ATp:Ar)L=i!**ifN,Yr>i!FNPa"AmimtXIG'[
%=bl!g>FE/^Se151lqKu7O_T)Pp*Tf3i\QPH)kl*sR`[q`c&`nYZ8^RqN#O!qBQ/;s)8cC+EdL_2Ej#u5p80V;fra&dBH[YlU%W*8
%0m@?rgtnFq>TO*[2m^Jo$YSPW7.h781idN[<t*S$pI:'=G](U93FU`7>1G,BdE9c%IFl)\(VoRWQ#KQN>,/=\p1@W?U+pQ@hCR,#
%3CE!'-Md(=p?TlgXbhh,Xk_cT@#J6g^#>:B[T+8]D\u_i%-c9u)PZq>V=pd1>e0+D9^PPYK%]gfg7(,$9O7&@hKQa,ds(),Ti/BE
%*U=%UWs5RFA3p@d?^MC)3dcWu3+V6T+H?js+EE'm+L%p^EJQ![]gHckf.q/6_]gri%gHZU?laGL)V.dDKs_1'--LpLKOX*j&m9fh
%O9s_DTh@f0"+hC8W>!P#7fqWmX.'4^=:n708Kj:P6aM2qd'D`(j,Uh)FfQ#e#3eVF;<pR5_dq@Xp*/*!]aq;NAH>CJ<rj.jMDc1'
%e:JITdsdkU_E^:hCtA[C=KRO;M+Mpu,1<'.l5cX\86Ti<Y>Eb$MO\_$TuD1@_Kp%d$0+KNqs`h+$(tRTZ\"`ul=-S;N5]9O3=QVL
%<uh*l0\jLE("']SO\DIM;g2E&X]1k9[]j7-3ta]t(CHcNj&NpR"L:l#Z=lgLn5@+.V:bk.=\nJ57ACR2)&i!35>aM>R9P^fh(&NJ
%`=54p8083jnd"pFT\p"7NVWY)c+60;;H.AI-YZ?G;c&`384uBEp4H3W2-sPAdB&[D!+6>A7Dp)rKtB=;-$D4.^`n\+6W&CD#1u5d
%GjT0r#KfP5:Q__lH7:Bq!`lEQ</,%a=F7BN[,Y<<At<*F$"]7S+,t:@"A&X$f%<\3/MQ@qh\0tOW+71qb:4BMSSbDB&V/8X:U%?G
%h_(/VJ0A"'G,uG_#dO%<5N.;=rf%6jd-:nhdXahEi6=af;IE+Z;s0a.UKs7OL64YaecekXB?DpFoK]/QWOnmjA9/USd\qLWJ1,&-
%:1BW78g?[]a3A`KCfYb(_FV=s(2Gfqe,r8tTd2b/M<_1LYZs?!M,t?+4L$Fe5RY5C1m!DUTR^I(UB6U];/H?&!Z3fr)+iVE$clEu
%lri'p.V\BgoOBK<)ffr:-a7cS?9<'?K9GI4',WU%?uKUV1-%o=LWZTVJ3UJm-NlTN'#$ZP0fkK>GA,PoILp?"l>opHnO'"E^^_?C
%.muUd4%MGMVN2D#9f'C0.Gm3j6K:(/$(^]dDrFJ)/Kci.E#2(Y/[.9Rk1nl%iJLZCJ_!.gJZ(.k,p6J`,F8M4;?kN%<iLNl3DmQs
%_)d(-5*SBkD@jZ&4ZEIM]6$mS1CbQk@c@er=i9pU(a4%uppHh+=!0Vcf+dg8nH,,@Nnm;'&J0ud*al4.lQBj&k3bKc?uY[7dYrd1
%4D6I88S6>$U_&M/(bM!5fZ?NPGQ:\Gq,tGp.^0cnrFh4A:\Y&<fqX78KPVeR2QYQ^1QX>=.8uTM:#3aVauX`;Zcg&S-EuJ>O+u/*
%+#Ddg]aro_c)H;p0Iaj/9rbY"rDFhrJW:_b)[IXb2irCW:2k894;GCKU\"b,`K4LTKKuUM&r2;^=9[OVN1m'M$Dg7W1h\4N@l$c8
%+L)=&)["8?LH7sQ9\^_OK*,'lcUns[$J_J:*9:u]W=6TMG%mVBg79^I$_(^dNLgM+:Q::ojcC,[JWP]#AL+tK*+fV!F3am^kpl(j
%mH"Xj/XSoGbt.qNi\a8fLi#8@@B6&ZA[^R9W]Y3e]A.oE/I;cH]o1AC["Q"!DAlP\3&Z,Zf2,4>gOa(Bl4YpFkS`ioer;pm4^"c[
%_H#2]=sf?#MG.eip_GH"_t)kbT$CmWMgXHS6g3-:qlcck!(/L6'K*$]U2Jtmg"SuHW,;Y^KMa*_*lc4C>MJHefYMDs&Xku+Mur4,
%G'j:%$ast#r8SIOf3P$\SWU1p*iakt"2P90b6TC(_TW"q-M(Q"A9Q9,c$AhN+54e0%`6trpL$60+HZs<C#E;:h4b@[$cN5K71Q58
%,m:2!`789'`Nn^(FV%7)7(s`A_C1^VMFiT!LYQ%gd*/V+@?*'1(6G!9Ye4K;1_RI=b2Vi>i0#!)o)['6a=fo%_6P(Pf*'Jfr?r#:
%d$!?Fi]WdsAC;GHD?C3Wc10A@(+i7m^lS.,6'#4"]HMVa*l_@&%3iK+i\LrQ/L&MhLJHdYKi2>ZV3/8FLWjHlg\+S=\p$")g==I/
%YY?SaZ#sm!e4fj_Vu-FIYr=7cM8n,BHRfn,o\qu&RQ@l;cBT'^.pJBDk"^+UKi$uNQC-?1;-U<W"Y(8_JJOc[LK7Vh;,dT`K0Z06
%W2<kgfk'AVDMefj7W/`[-LD5,?(gJ_-A_^VO_$X;.G!]MO`U*s\3<UH#sd=.qE-m>d[NgoO$/gm$F8?J\><s.ZJ@>`h)qF/kSg$I
%[a!t#QG1ldEkp5.mJNW>=l@po!+QIRLM&VRk;5a=)i]sjJ01B'k,*PoDj\/Jo-h0No+>,8NA"Wqb7Q=!B+j8qE^NhLEd/43$(J3c
%P<.&O]\0`Y/>\"]`>5X/%*#RV%KdOCFh8#<F';)/),d.c)hFJ(TS8eKB]1!4-K\H`da7bo_757[1mfm;.%Q"Rgg(3R"nK$IpiOHA
%;M'=]ET`"_!r*[W,e8gB]F1<6\FR9+YIY+;Fe[.?1a`!lMm7F.CLjIqTcCS1#fqFoDHrm)P!Xi5ZA4d09e_g#XOtNu(s&RD!CJrU
%YS[^%NEpYtA/Z7`JCoR1FpGN[:lS2W>3SV*!f'R`[c3TW1^26bY>PH1L,/Q.msO;rn'\Zg?6=-qO.fbbN$ekt.$B%okQX;p`-JYO
%8ZV$TF%+\ZPi+FRQpq4.N,.!:<'$9mG)WAY0A-bf-)n\DmK:(C0RTa="Z>Ri("D@Y^VOkuO*!@*bdtYlbRJqoYV'%_ETf$W6_GB)
%'['>s1>FX[2qS<S<ZAH<a6f8QA0Ln/db)aOCuR=,V43_5'lUro@*E7Z`Q"nd63=h(d-`=>ct<&NLnOrpFjfQ((pcnld:YcH&IB@[
%=cA[lS*Zlp#HN/*5W!ZW6[M1gI!f##>d6<A-J"U6/89"hQbC_3[-2ri])-FP)Hi_MLa"&&<.ORs\R8he=<O$$0YiVaE(r]).6<)r
%Id!eAJM9N)$:.fOF*HXDcec8ka)PA;_XEB/J*<5UO=*^MYE`+_-\8ROHk(;p,^W"@M$X=g2FWRDiIIS3c*..fXh?NkW\6bk!nc=:
%KkG4BZT>/X[WCWGX9EbY,c'D+UjWQpG@0[O+QdDGX96?a,4-Db$JB`7r\Tf"%_KMXn3!A17(>[V-gWAe%KeskFi:R.JaWaD-J;@0
%:UFj,V;m^I;j.dJYTJ[^$U[!uE+-?:XZi-MOUE!W0u9n_]:>)3$JqZNTj*(+JJCX9#O]V8!+K&5E!!jq.0M:PN9O5'9Q5&Q3`VIp
%6"0jd9fcNd18JpT&EaILW\"k4q&g+e?ot"e0!P0ehULVc1lD6`/^f7;=D?PEd!<_\8s%;J%T5`ID4*kHr\=gl=5^24b'<`Br7(dL
%0T"l][<7)gp%DE#qJ'%t@'qncNsa*;a4N`q^`Ws=q3C]G:2fp=)g/O(8ruo*@h>PmN]N+Kf[m'<^hNmJI$!ql]ZRHKkg"`$dhPqj
%+?p,A>Bk+g\?-W\$pj2l#*L,<J;Bof?k!:I?k@,Zk;h!!6<&8r.T'\(#s3G4@)H.SD6!3@J?LMY]1A]GRa@=4lU/*%&]VZ9/h%\1
%S!Hg$XM#@hEXVn3"SD%H_AZns[i=aU7JDpO,."?3]TbAY)1/t`Am7#@.DN194u&uEO#k&^5j6rj2=QD0`:^6K@+$K)(C-$h[ut;f
%$Kn4CJX0O(1ln7Z^9(Y\XLJKq<21#O@%p,AGTbuJ$*gnVR\/?"\mL9815rp/Go*-,N:h_gL[C%m_F74#G[(.Ce8CjFc0-LC#j'p^
%OB^gJk'bi;><ti_=VD+*8[]1^i&m"WLc+kkR$%](&,aTrX)=Y2q9nnL8;N8s9.t9Jl:lqp_F5.8)G;;1$PO5id$+]L-o070l.l^'
%U?L+UNK)6:M;[rW-TSEjU"f^Ddq]3]'tP?@[),7&]$'<-Gk#`pUlr\)WQYJpSg&W<]UW"*-?!rt*-qokRjsq"[$ig;G7*:WKTRGK
%bj&?WY[57]!SeWRDe*D,4-:FQ!tRt+l>^3e=Gdh<mNqMm@NiYcNlX#QUDT.4^P\jc[u+ZH-3^AiZV;O(Cs5N[%X_?BDa[8>=ciCq
%@"LoDj:J2_K+PbHO[L**4dN*=EMbJJ1i'G3.9J,L=HRgE9-KP*"o46%LRh0W>CKiA!3@H=X[u=QISn4$*>7]k&L5`Cr)WYhN+DV'
%YTl#lcL"*e59Z_<K]e*Cm[+p_See\nVe%Z@$]nJ*q<JUeAF<S3fTaHM:ac#"*re8VVT7Fs,E_\U,$C9\o[r0QcA%M_.cDl)QH^/,
%<J>H5>UN)7)rZRK`<L6h<c&G-=/6>%rD_d4&a("27(cT=ZlmMs'i,`!*NVqDTG'i*0RH,9&LbQuON%9[73ht2:=_nA,3o7l#uu@U
%Qt3Bh[fBUKDAb%A`J'I(XKjNS>Je3JmV7t?Q2i9?EmsoX@S9_t^.?bk,l#P.QO#::_!EK_C-u*Ib\Y0m97D10Q_G.PC7`J>dJ>6c
%''KAC]kJe*.!1_NLJ4/6'-[d#VJr3;,,&%`>0`GHKTi]U_A1d..HYiF+GK"sjGoT_"@j=b"S%jlKG^Zd^_4NKjVk"D+VV-U-?78?
%kTkk@R;i8\PtZjH[?<R)@CQnCarZZF-B*Z%RRssgQJb.d0%h`2#dcOop&rpLc:ON2I7P%D82sOYYt#oWFrDQZRjA%J?-#5J>Y!&8
%'dc\.\-Bk76%@&SFnJRu2@A1PeQj<kRMFC"-EX7E)+r%k-Q$d/Lq6>,FP'L/-`.9gF]J<I$[i/tWp@SXh$PZ8A<&"-FDu$-!f*Nt
%[2$t%'&=`h&M?'[28[F^5Zm@^W@$PMXQc8e'+ftP#O@R;RLk.f[6YcCN=knVLfs'<!euj]+JXYTn?e9NcppNgd-FV7>eoG`@6,VW
%Iiq`W&;qD-ggjO4D-MFI`,9LmfEb4P$#pl^lEF#G3<>Y'8Lj!3kGP)E^Cc&egor?#WMjU.",(9H"KkI1]L?]u^q:NA,9(P?2/^u;
%7d7KKi&:>M46&<Z*[J#_`etbF./#PjI%VKN<XU-3)uOCmJPDG.fDegZ92hQZ/V1u2&1*4Xnd5+<+rfaECTG;-BUBQ:26I@8"s*0G
%`(H<Wb"mF1jK\YF-paB0I)]>cmse1.'uqaIKO^EiK?L=>0oQbH)usXQJj^4FNMr7+Y_Q][@c9'Q[['*Eb]oT+9B<JlM:pB6[5icm
%-R+'Ni^IlY@o(9&ko(_RAAf9uM@iGC%7A$1@OmRY<"c3#EV%7IOkPBE#L<k?(IuJC8[Q?*>;;S[0YQCRDd:3#K$aHAiT,m/!%1JL
%W<l*-R"\QqO3r<P@8=ZW\".ms\NAP"8-6U4$VW%<l&l^Lg"TR'FBkKp:?-2=/7hHr2p#)q1]X7>(<eS46qLl4YrOmWgTqVq*HjS"
%")qH*]:h@.4<r1a5p>^5K/D1'->a<s'b^4[9!=LSC+6qCF%3j?"S/E,dFHJ0JUJ[FAO)fg>_.GD-*>O<ZQ]YjLJ[:Z6AE!d^qGYo
%B&,-S#1lD?\78j5FW#]b!2[o3_U8etno[g.?2=j8KWC,)8]0N!^j('_T%,eXK2=)A!>J6W]F-:W6*aWp9F2OdSs:-^b\LI/a`:'U
%k(4GjQh#Y\8mVK"N];Cp'#6*rO(.@Y:>@Yg)P_+Vnem9q\#?*^JB[$?'0atGE.PRH2F=UjP]qk$(umsq7os1nSYi(tjV+H07*ZGk
%&beY)jKY_]'>hEI(6Q39mVm7J"KcJc6P#&[(ublRFg.#>X?ZAUF,gS5ZH5CAfbeIX,jEV_-j-tHRd-7%>6."ll]e'cpq"btK'aiX
%"[+""/0lJPYHb<b4jJ-`j:k%UIc=hZ*1XH6"%QCb3:WFN0Fe^J4JkumHNXZJ+g)eJl?WHsGm]_m_>>_;&JBn=SR`B=JJ`Ejj4AYE
%,0QQGb\0%41C;WAZ>"s,Gp<oa-s"H(EVg:^!1megPm(D*R3dJAbOZ.MRQ#lcJU6DfKWJn,!DS%`]&5Y'EOUJq-2QmPI=p#QWE`Q"
%.VL/3Jcd!U7RM?pm,B]RZ5&Uj9"dqjK#,ZJK+eS]2j#b\3"el,*rLq8o0CHG6b!m<p+*sH>5Cu:i-906FeL(U!F1/_`@.'V<0n^t
%U2u]jAAgE[>DTKP]_#44bgpJRM'k!f!$O&GITpf=&dX>Fg3Qgh-Q9Lh4m<=33sN!2UP>Vt4A#@D+lP_2>-:&rks;A#b<%1tJC]Vj
%ip!@6'3/!O%cVion)>Di5s!"%3^^>\csZBX;'dJaJCl)/!sauo<EYUF>"TXa@$O,cdR;U*9+da?6$nb7;]&=C0LNU>c=_bpJp'P-
%_UV9N!N>p,36Lq[Y!WHs<GLd15gcH6k\s+-2!k;"N'OgQ0:pB+*e<N'3AFHHOYT1o+p3ufdcgkQnK98K7OT_YVk)=pGja74J18Ps
%ed%6T4o:&#B'&09Hm?5Pg.!>U098N1kp1\/S/JUu#k;QhP9'3h+X-D-]#>lT?]$KI(#DV=^`eBo#hd-q&!TgXL19AsD?j2%ph6O3
%9#Ng](hT5"O[L.9/?cOq,.4E;O+(\m5tj8V=NIE`iKB3p/#P=o9=C3;<X@cRkE'/K(D+gO&r6RpC6[-UbNfNhr7/q5\i;hDK_NM;
%A2d"Q:B!b/LZ8O\#/Og->A<,;KP=V`_Q/e-'o(tQH'lnqb:Gj1&9R<t(c.%3%LHE:M#Z+rMB'=daVj>2l5"bH/O6oLectdbJj(J;
%en8O0,pdGE9KC*B,#af,/6\b`=igc,5B+;6[2=TT<t\TE\idl*?;dD)6`7!PN;*OC[+F'KOV^tEH!;ti$+IbT9UcqLP&TbCCBJe0
%Vq!L+Vhu`ek/.3p2DT>0#8KP.?cpD,k$#Q;Jq+>:Klde:gbus`\%3Li"g*e3prqtA@b,(]3(O=5ioqT08eg,QaT3\FDh0o:K4GjP
%IhRPG]Q)M964NO>r_]2-P#33`?o3c$9O*:Q`lCbW6hM9"'hJT0XrPQ9e=u%1C]Z4.`Y1tH@UtWS1Y<Th=cOn&BY8Rs=iM?l?NjaR
%)XCg>,0?s[R2D]Rdi2O<8b4Z>-NT&^O*(68FqRBS''6KO.iZehnI*\Jn/=eD96QJk'5FOLA-R%8oML>M0E@8"9'";"#EGW5dh@\)
%f8BcgJ\Dk\"o_IHLeSRcYh1@O4*"=lVAS8CAq0qZSR"I'J:M1!YS6IB,a)nu]h<u$Q#-tDV#D:O&A+4G@A<;3Ui7'3i/A+7@N?d]
%LB1RqUbuPu[$:NM\&s=u$<A?O+Ld'4JusN+H7"@W!R7:XLqOr)/;lY9_Dj1?Um1^CYIV\M'.D-A#BD'^"U)3793,:g";p76P'S56
%/=^D/8&`-]5uC<m\UVKBj&itBnc%4HRN9Blb4hVIPMuZgNlKQ-50%)fC,0*<n?%L0o-t,%4\30*>AGI[p=cJoUrL'1JmSWn-O$Ut
%rEOIOgu]#jB65N"0o:b'R>$oN;+=K1%%[Mgf4@(>UgJ2d+ci.7:]%D70LVj;/%#Mu<l$L>-9nf,BHC=8Ee,k-RBp=?ag`Sh!,qoT
%<h\Oo/]rp#1KemW[f^8RjN:K+*A^&-G7[ijAd5I5o_o*gIaO]-?(E%)O3&Zc1=/.UJln&V",fJX'ub0N8nVbp!_\CW]VlW(nFI:L
%]I.H,r1%R^>\&HN(WdtX*5Y14G'N9PP_dMDRo^0O>(I#i%\BFB8-3_MW!0HZaOUj-6[jcg@jD4610:8\>[T][]j6\CE[<S?n\^')
%W>1dod`X%a'#W88r9hg"U7RHHP]/9V?GW?IP0O2]?>."B]J(h<^Pnn:M!rD/Uf'V^M=>ioXu_6/m+WhCL_],N;8h^S6*2\Rb"1<G
%40<9*ZNoO0Z''tl#pPO!Q4H#ol\<c>]r-cELVtc7aDrN3bHbhU(3,d?Qn/e#??&VLe62ZApfX^a,,H'[L5[,Q+A`IO(B>2(URm2p
%M3r60o7Sg@#*I=GUuH*3X:`F=&h:j+:;/ta&f)c"T/+=]O:YkkIYq#H^&^uG,D_irc:sE\`TSQt.3q'q[j=V/4@o(%*8-m7p6%-K
%'%Tsl65-(X"^YmnKKR2%"dUX0pIb63K9!h2,[b#]NcD.t+p1i0W\ORK[Q*t().5lX4@M4t?N3jS:FLU%MpGF.!M+b1Q6;Nr,+Fd=
%R)Bp$X<P`.lZrm/*DY^oQ<=X7RuKmoMejn\#pL.5gJQhQZVl7/._%AB%&s=*,82t)j^;m1F.+BGSh,_`k6YT@SUdWe7]RM'5WUE%
%82P5mSX6P4+"3`a$l%9KXp?P7EWe5,V&Yb.ZXC=d/4&F2.[)A."=#,YD]kZR.p6Dge/>kC_BZ+J*ChpOMo_4kW`lH@>\Tsn$'BrK
%,tg-t67OL30Y%@+Ma/<a)_r.$+_eBm,?,9;%s>I:(Lna12+jWSCN,+L1Di`8@0"Xpo(9/JL"t!9J\rUk4MlOM>D":oqq2;X\\O+]
%!eD:]+!6I&JWlM8jYHnXW3@%s;ksMn>\aV'2l,VW_S+A"K&EBK/Ir'uZ*bTe2BcMf5Fb&nmi\--WmDH>fJJUgF035b#lF[%9Ik)L
%bf4ipHPqE=#Z_l+0+l&&&6$rq:+N^@;e5)!!2-H5+AoW]G[c5aPi.mg\9K]V>68Ne[/iQtZ1S\u791012=X&l5gp&foEDn7ME?`P
%E[/Y`6ksq<E$NA]$kQn/i>H1l!s[@VF:!gr65`tCc0%0=SkH_$e?r*SY8\_hC+*%A+a=K%&4(A5at&F4,+++-\q33<5g13t:,E"4
%)M&J7<#-]\$ZmJ^Q='4*7DQ;X$%b9l0fY^p$VBVp^(b:!4m-+GKjb["i<r!MJ0kO.YE5W6$Pdpk/!>'r!j2eXCDhZeg_C+/4DP\t
%\(-b^e8A#V7fXNf#C/gFETs7Y886L\K5Vf&+[FX'TEd(U/?oX^2H,Bjfbg<`A:S,%"NF%c0'Qse7_TK;(5suu@H4'M8bSg!hGS=q
%=DVH<!)!jA0Z\dF2N$T5H="aI/#6%h/R4#5B*\Uo3^I4q?*>uaTSE%J8MKX5**PJgSD`\]is/PtRNt7NHsSB![A^ZlK8p]-0aZ($
%.UTA-EtJ^G:)'1LfsFA"DM.NP77H$2V3D*(N;s/f%Nn,o;??h6CXOBRfSgKJFnn.E*C4F9W&2!l#msA`.+B*M^g!Km71WYJkp&<=
%_eZXl)Cg9G]>u['.n0,knGp!4"U@>C)R[r:-oMa?!\RhhU@HTDjSX,L&oFm`@??j!W/Is.JTX:e.&=iP1Z5]0rXpM_e_F2`.N-kb
%BF97S2+WO`rDF[^%PSQT\3D!3G6hL$P5QC:TE&B;isFaNNA23Q#DsCgJ1[?Gcn,?R*V$d^.8QM/)t^4fA1*[Z,t<5q!$\hB!s#7,
%>,+C3rul!YKD)8X9N,P=_2bA<K`JJca`>?!AptQi+k]Aq[0tP)Zd,BH;%q63fEQg@2Ri`&E+4g.;(-J9a+prnn4aOA0Ug9[PfqY!
%@^;"Td0c1p`"K,FDM#eFYp<G@!(fLKX!$R;#1?/##]P<nm=/m4>_QU&oY;(q#';#m%0'1Z=;$X'eCtjG0uUlD=bhkM<sVY04c9#&
%]fmlQAqAW0Js.>PVK$R'C<0E!HQNjI3[klB"D2F($n3S/24tunBN8hO,s-X5WWbs/iG.A<0M5mA:JkS5AH$<&n3K$^V>E_[#j>r5
%cdUgK]ViRin4[`HJ-(IX4Go/EY+5Qrp=Pr&-E937cpauH-TrEDPIomA;bVEo<$uhl,DLm@m$`;q$#*%p`E&[K.(4@X5T;[...'@f
%`!*8_L;\Wn?GNlS8:M117,3P4DCgX2>V:1ZoU(Hg$;GB0n3]`*-[-/K7Ytgt)R4-'cD5Si^hrM,GHT-,)jh[4pbAH1?Bf"P_a$IC
%>c$@H+F4F"8HM2eN5TFU1q.UqJ\jJ5arieXmJA6Q9X_;5aQpYseJ^RKWFA3s<1%EWAI%4,?p"X.;]p?^]]Y.Sg<l\GlCA"Pm-#5p
%.p0j5k[*`ArK$1a($8p?&q]2W;rOm!;9j[R8KfXFj9Aq9i>m$!M"C$<#'GO:62AP^2n6h'(s0/t$:bK*"KTP;0WbmA\'eD%M2mDC
%#^^Xi2XhC-mGeo8)jZ^i'I6b<6S+@e84*k#MJNu(1;U#e;TCg[I*>3Q*1nF^c7j6`C>pbV)%ah<hCMn9;<T)>bn<8go"7pn1WX8G
%E@6j*b`J+0E32L_`%0qI'R3qC,lF[7f*6fGQ4A.2ZEg0G[#%4*\D"7l<Q'Kt/F\LudR/gcPT5*)0.'U$P(o*&O*;4^ONo:CD4&.>
%o>.,S"K_kW0f2RC0uRL8eN`XuYsXm<B,,V(-:*t4;N-DaOO1FHQj&U<h5sdo6r[U)'.o>qOG1eB2QtV<\Q4M`WqiBO*K:e"+p!'(
%QMWum5q'$^&1XAW#='St:.Xj5PG!8LY=NuL>*Bs-Z&S`(%p^I>)4-R,KiWKKFKe`E'F8`IXCdXC;26hHJWMrfbTgRD;8BakKbeD]
%_-07H%5nTB,,f,b$sF9IqNl6d8ENQc!hRKRB]p^QZinB/39LG>W6to>Y8.%-"/0@]=;7;?PqW:+R,hbQkd(=/o>F.E,c&ZPCQ-Vt
%&ESPcX/n!_j.3!Yo[Xf$4(-(TnA,hR,SGpdEa)EV=B;SZ!?R<s\8bqJl<hI"ehM+(`/l^/2$%KO=ajC:haBaQK)r$Yp$0@B\G7o>
%-lult7:*^!;\V)iA$Mbu([58c#Fo0Gm\Ki4R;`!_QMrb1D8`gRi'T/[T>LO2S_ZM$&gXP[2?ms*QhUSV0u_@VioaaMd9*HZ87G,d
%P2Y%!)OP\J@n.M"])@b+`KX+gi/D6]IE1Z03d:?tgbL+E&<&Y?-cf8?X%.1c,H"G7$\3.;V*]qB0I0OC$`APam7._[0dO]14dDWt
%,mV3nb+QNZlCssIL'TFM1:cmiXIDeSSs@Z'ZKdjaM]u'3_c&;ZHG\"qb<?fEN3#-V"Pm9-8P6TV5e'*(3Sf[,WTm9aXr9mPBA?3Z
%3/s_YZGo.q-?aXp^O*dJj-#(*c*=?HDL01T"=L:Qei$[>P/,d+?U`*F'WRNh`DW\`.[k?*pJ4SFocU9!.-H6jF1>7:Bk!cO.=3QR
%T`g@*[n'+U'GQYX,D@r_s#.af,pNuorW0,rG$%:Ol_Wl:Wo0;u-M9Pcf/bEP3]U=_Qr8b>JIR?s"N9&_GiK)YL(&orft]K6"O+IC
%#a0)K>&NE@/LVV^biL,hH-UFBon$IF$ter3Q]7pE"AQ$9eAs*Qh?\Y_1p'_9OIhr))SSOXV=7%j1%NPU_p@oo[fN@[=^k4>+TNQ1
%?4ce3e9qq7OYF=Bb]*P[_E&RqZA2870>(hmd4V[-.>*T\d1r$0Hn0RS8M]GhL\s-a`n6^c,kW0kP^>]Bb2B!d:@"!LIu-,jb+/YD
%;\U=G%_IL/><aaJnfRs]!9?oa0[er-3B_^]4RCB`d:Qt',2e:rA/n`Ol,6FS0WU:WdM4:L1SWLB'nrKC3:^a]ONn7>31fArPil-m
%?T&`eV@7h^9KMD@Kcp_19d:DY1`i'-@464lWEDWp9cfpm5NO5G):QqB`(AW9obgjh:9;d/<K)+OPc/?G9#<8-XBaoLOcBgB#?Z:+
%)KC;M:VdLk$#(6Enq^QQ^BNXqn5\_U[MfIlV3U7iPi+jm/`Od7T/u'\P`>cD,7"l&EEHU>7@J?g0J,FbP.F\D=97n&Vi27"k/$DO
%9rQ8fE!6*6S6m9P.=;TQC#Y<(+(5:n<'VOr37S3eG#kXe)9tU`$FBoC3?gekpWuhe9#_WU:r;(>Zp]Y(=U.Rt_(nW'WE0ugS9)'K
%JIuXujH^ID#m%A5eo/*'TW5-lcA94=5sM5aErN:Fd#nr#+`A!NMHjl/G7p"3=P\pIG"HF2FI@?YFoG6C0<A.tSWK)KBq@"(*CC_J
%_t;s/Cb'`A6OcT^[0==0aOr0Q9cJZ]eZMTg-jTc(lI?aB5^!GZo[o<`OJLT,6oB[aS:flF"i(shDr;4I3`()b8Gl990S,20Q,+[M
%PH^rHA@!IH_[7?1*8,>:MM79,5]=)!7`dh?9UT@>H4jV3`k*Nh!l?>B#asr8@hC\5kf5+31-@.?>77'*/=H:OiC>4ZrF^]sN"U7X
%i7n`H0eL2AO,\;Ye\)W@o4k"!#nsUO_BDc.\#)Er2G-F.ZqLRY?g2Z(gf(`N)+b2I#7(bYL:tHs498ZLC'42MbNL49&LjiD$ik52
%RRc9o#KSunjp;H:P$9t(^dTugPqg?Ojt$fW=Ck\_W03jI*V^2X:8:KF9<@o#`?g>m3Jfr31+e/CW0mX5!t?V2@9r[9h[Uq0g5o?b
%MFf!l6%&t`Snner4'"Fhs$OB$KmB7%*(7W)2%%CX7Bpeo<&h/u=L!H7GN,>N6Ur8eH2@u.e]4,j.u7#X,/La>P"FMZnPa\3R*i]Y
%=)om>>&2+D7@YQX#Lu1Yj#5F3oa9RM<f4j8+d[b5Sf[\RZ=Mp8i/rT--I4ZOP8G&1/q,5[P'I6M;6W'C?NkBlP"jDIj$hU6>"Hn$
%@_KIk:JiE5`8oPW$B\mSJDMSVeGUS(UJCs]/B+m2ELUf(ai,Q658-bS'>pB\gZW/LLIGV!JQ4sQ+MP_FL;K3(#VqtlT*]P@l;)]G
%&CO/O0I@,KChR,a)Kg996P[U%)>m=!/>Y$iL7PDH8:VsC&Z3S?pCre$+=L^#,khjrQe$l<<;'\A'ot:<nfeb3'Y`Fi]Xpe87_E*g
%,k[s/KCPduJ5!VoElMCWXMbOPFb4-Tr2n%jl=\<fEK3:XNs>3*gN)S(?>u)>g<sL^[>g=aSB=u&Y??tP"9p,cD%g4^#1A;\RkNk`
%JPoI#0*mk5l93&mCe7VL\mRm"*YgaFP^\Sb!cJNJ.YPm&jJ,EN-*"ZZe9)VuX:rsOJK2]+X?q`$8Uq]uVP#&YR9=)tSB,tbdZlMV
%[DM\Cd]SI@n!ImDhVegn.]3mMIrGOq(71^Iao*,T]>@fCcq1a6Po\+?@pM\$CJ$W-U1i(?SX<HZ3GkRCKMb.Taot@a5n?'qeUZad
%@FBBh"%Y!p=Os8R7]nF$p<:J!:q)U,_pG;/Eer328Llgfe;:\Q0SHTe*Eh,`fVlVpX[s6G8oY&]Alf1fGh-pHBZX,KT@%``DMb^9
%H'[Jco4E[+YrG`+c<;mL9eRd4:e@>q3^tIfiQ.7:),tb/]/DjM1JSc*l&rsYkHe#P-\,Vj5HPTJBdR1N/`S(e),W>sPu&YU1QC0#
%3C8[@Ti@c'h4kI:5.IQa#bD>I<^K90P)Z<4$s#I30LSGl+2a(-%^DW6aVsW*D$>l1*h]Eh;_T;PQSN4eGnP(^Zu/asRh]TS@I-B_
%6Y/A+qE"epNE>a8d]ULaB$"VtT/)8H85PU'DFe1Yi@2Rn@-s%_$S'ph@0#&5q[SV7`X@nL2KMRi=t?LWeH7p8d!\e?6]r9YN&5DT
%_j":2)Cdp&f0k5d5tjNeQ>8h_7cd'M[3hY,aR+k=(6Q!5<dc%mnK@.bpR9`Q3a_$LeT<<l7RULp:hr`VTJiAU1U%;#)8MgUkrs2%
%C0/-T,W-dY9@8AXmat!DT_e_?"<Q(A`]R84&fHWrZ6HG[E[j%?]Ejcga"n0"aXL>t,WPeIbt<$%kb'kl7=shh!IE]s9-k5%.<MP6
%'6$<SWg*Vm'-$#5M,=Y;+o;cF;Q?jMZD`eBH!3Qbf^GC+]is!)T_+/FjC*m(5.Vo;0Y$H4`+-od(\U!)ifUI<Q+c0mI3$%)?oD/A
%g^9pf@/-05lPc'Y["SUe*P1o7B.)OpGZ0aM7YFOB-Ro6p''pSa(t"sFAQ&bF,[oi?ENR]*E%/Am?SEn9&2g+GA91OVN*Xes)IZ8+
%&YKE*d^CHkU/Ch<3WlH-THafknmloAjem9khT4YWTN;?CWN>Qq*/Fr]'tG5&lP$Q0jrkUK;(uR;_$N^BQDDupc88fSBe'<;d\!u5
%_DY(/Q\)S0jtE%32&1^MefaZYDZrY-J/7Y@`lR]cCRW'#R^(;/8dGH)MNOEU*Xm_sUloVT7(dstIHoN/PrXfdcp('j%<qtL&H3Et
%$OD;aAk.(cI>BW``4LOf5^1;oBsi=I8JXM;0D(T;=jI?_ed0_.M'JBj<,8#^R$/fTW"aV!2L[;mg):.r!#Iup84u2UNT%fINEjZ+
%r)g3Q9?%Bu_PtpSWau?KK"scOSg-lb$9!T5'@'WW8dL5g6q/+bVuasFfSYE_2bDslJWIb#&ZPF<b7W?Lf1H[;5d:qm;CU*>8dG]T
%B/Miqf1[n#rt@XAC<@A/3YQg:Q;hi/aF1qY!T4$cm3j+aZkq:Pr_b"B(u]W(X<<od]`PTW/2K_H#,jg]5BNk!lm-XVO92)J*0Z9e
%n*DKc*=X)\[Dg785TT(hKFT,%P8$rJ.F#!A'O\Dd8o/6b2f+&"3M`tNq+>q6@=8J+iOL2;Gq4:p!T[t`=N.j_R599^-lF.i!(&W7
%"PX>?bZKa](b0P3anm=nj%egh)cuRaRCf:*>Tm[q"VXKM&l(9%U12YC+i?Do2c25R7DuLn[?H^9ZkH^X!fb"B3b^-]-!,nC(2uZd
%EPV=W]Wo=_ohnIXUafUhHftn1QW2,?L]W9(\@d'e738jG?]SIo\%+l_\MT@X,BEHVR'hi-WmYgiOrHi7,5`p\Td5S.glAEX]"pQT
%,$^l2)2arC88@VRkRo*H"u?]b.g6cf`=.sh%h&nNKnsZ1;S*V(,3h?8\5N\3Te!Zb?B[`riE+'RV?X5Jp&7JSIV\OU':0-_.W?uM
%,^E$:"Ou`?'GTJWC.V[](g'@_HH#;M?P>2t/IQ3TcqI[Y)cLcJ&OJskQd!/t^]6/5bfN]`"gf,9)?<)F1:N9B^b\OuYR92nK!_CT
%.LMdHEe?hT[SsGU`o2)TaBIN/KV1cR9Ioe_N3Cj*Z@7XA\5p_l=NH//MhNb\977'(eDUAg/KF\'N0lZF#*Bm3.q+he\XPNG-A]QZ
%_Yf2-OV_[WZ=+Eo_?bloO2"AH?7=a+i(AoC5b?F-"2o.>j[k?,?D+uBe.EP'A7;97=cn;4O0q6u@j/,E?Ra*jN'YK,_-Hh/3,i^8
%?cK"S:/00>D$?KQBcXdG8i?%AD]$K39*Q8/f6gI%6oo%p,h1BLXd^nr>4fb>FuG02#0qNBA4GR'LE=L(0AJY.ChC74!6$@`9:EDu
%]HmeSSoDX&,`+l.nAmUjk&eJP`U[k<@.R9JdK82n"eZ0A^/u5@R@P9SR)cuJD#m+>&UpEd!0+CW&m!q(Y&>UL&M=s.$OMM6>TH@!
%E[>+K6:o2PA!0Gp`lhq::coIs9mpf/&r4st/Mp2'gRu&f/7^7.9Fg0N1?op][2$%dakoC;dma)3#=L%!-K*A;>ccJ,aKd+h#I5$_
%Xj@aX0AnGXeFkbH]T6&R%\BlbAVqekQG`+4Ie?m8fdZ.cBp@pf;k`Pl%!/sf`r_P0=jK'7&/\/OUdrOFdm0=`PmVNSYZPWt=2*(H
%6ll#&csf,"UQpn.ORc_^PZ0uJ+E1sNL"Tc>HADQ8[0@/N3hrU/,hi?BL[6[UoQqFmbt=2>#b2in5t<_!\SW<>Q]5BLQpK%B3NC&3
%`!M<s?Lfm0SN:R\6)X*rjqUEil&XVi:8j_kr_HoTS/)=hb"Qp9[Wp:M-6YAe+Hh'J=s[WK;%kEmZ1rofY@D,(njA4A-GQn\!?(tn
%5%J2>KgI:mgCSEKBO);A$/iqPb05U\&1'7@=5aFG5oAH<_Rsi-\rm+Y_'8W6Ui.qUCZZ/?;7=ge;BrIO7rmh3YJn(gi_NXa*>UmG
%mW0aAC@6+oBL!cQ`CU*!A,nMFap$sA.ka^nC=G8k,]Q&J%Q9J-_b;Ot9]WD`WC<`8ZA@uuGLrLL(P$X5q(/"Y69<5Q;$M:'I:I*q
%IB#\Ll0;e&0?=J?P9IP[&2,@AITU?_g=o2MKKoR;mu6<j";*u>-So=BYEGlc5PD<r;*4r]hibnm?f*?\([r%_AQY((RId+)B?fri
%,@$0G,c6%u04ePJMN8&FZIJ(kSRN@XV#[*#MmcR4YZck37dUB=e5.VW]SZKJS5ed:pYL"T'M;/Lp%5RoQm?B>lisRAO"/lS?.$J"
%;`/ci-E4<1QuM7iW#]P>'Q1$F1euqL+H_u=JeeL!"@sO\HP"'ucpl7Y)>LTGYQuZc[MXqAnI(1!G''2O'9!qC'St)Hm1_dB&`]gX
%LLaP&[0he'3#mb)_$+gOb\\UgE\G7^C.R#i"]@rK<EOW"qB1p$>]Lc/*E=S1@(=U"JJeY9n^HJZ(C!$C%a`Vi,hkAa9$N0F3$u;1
%`Z"+%%G;(K#T:bKh8Z2/4h_XR`)c;pobmFi)C[?M/3@]pQl*AEP>0NI4V._^C8E8q!F1q\f9X4;SQJ>MmI1``cr*3P,skXsP[u2E
%7EO[+36EAu$3ClE%5@:;anjF`k60gLm,b\F\JPA_-b>?CUr#TQl6IJXdKuelP3e2KLFh]-8$MceW<8m%.WeM7Q\c7gZiJp$FD+dS
%d>aqU:44H#O!#_F_f8381fFm@W*V:H8VT_Ued+/D>aU]Ng8L28&g7e)JQ]H/;PrY\VX'4?%0TgK(iZ:(6GUU"EsImUC#('$C&6aM
%'CD;4p+ZLRVbQBs:_A4(aE)CeEC2#,9+%d4`%pr5aK"BF7":%.Xg;%M1k[8H=uL!pGVN_2C79]b`B7#[F2FVcP)MYq1p,?+_P9r.
%k\/?tWMqBq+6"r:8sQ3@9.8jN$#RM:,Q*kC_L$2oUq&(FE,bET1'!Ud\[l%>TLA"c>9SX\m9@ZPl?s`?'!,RK6+.GW2\=W9?f!RC
%NAsoNP-7.S_-!d67cK$XI0u\cK!A"<7KAmq\6`#VC?/I[Hp'.oK7o$oq$k!"Z,;\Tq;7tO)MX`DQ@tS[nWNa1L!,!77ZkVRMY7__
%7qCac<KkiK=K]Y7ndUieI3DlfQ=a<AVkfPHdH#R:0Gf;Z5Y+YZ$BrNVeX^S'*=W)u5'luo)4(XBEeJrT"!@j@S@@.RW40a=$Mu:c
%bfLEU+`'dhp;e\%RpQ:75LUNlpO&j`Bk7Epl'TPMU@#!SWF7M4g#%B`TiNq6]HXjD9)`p9c57]^L'7^lQ<.G]'I:ILF1)6&7MNb/
%lLD4u@ROn,?-E)V[a5B0aENfQ`-X7'Qsou?`Kt[q#5'h5;@#<$p^;[N4mqY7&*r!*9m:OC5,"XH,!=\`(_6X6lAlNK*eW]LZ7W_4
%nF&g#F6!ord5<EgH&-C+lAj*;Ss6@X''*2kd#d@,aH)+H3F^#EIQV/j7$i4G4;b%mBi]P'4Ij!bM*:*/9,&&S6B9[E)shl"U(g/.
%Wml9RGV!aNN5s(;nobd\4O[6gR2%>:nKn%'$4jmh)W&Q"$I@+AZR\^oohu20*fh\N@3R<,6Hs&=)Y)aZlV\%^1jB;T,+!c&Jk(/K
%FZg$PN2Y+6Scb$0dZMaoaFT,iQNoB@TtnkG(j^2A%![bt(KCN!_YiDN;Y]^*.g5A9M#Im!M)V$CIb-7u\*;$':t8>'Zm#17'SFFu
%I7H25Yc8H#4$"C6?"(IB_b:r?(ssR3#`QsDHUm;<Yek^Q8!:]Sb'Rc0(Xm(^ik;[S"-IB*nD7<8_j717nD7<t%u8N6nD:QZ^jdm%
%*OI$tY=G[<XcrCB8p])MWFr<&GGt6Yq9Y5nY/OQg4L#OU&Y06;)s+]L/ID)jA%Fa,.8]#+g$We_8ml0[A9T:7dtW3?0ikR<L/kbO
%5beTLE2C.`[O0hgM!;'0+X+^]L$6h9b&BNi]!DZ0_Y%5kmOTR7XrT4PjU8V.Fc;^UcsVLSLr+8Sks2gFA\&gOL.le8G,],cj2[:[
%].hl?gIb*4R-Mruj:bK(rIa/p_!3IUGJ.NTFsgaN^^Jm;gHoUUA\5:a$0L&iaE@ff:_4GS3t"^0]?o$_5p@0X,J(L7>Y(l.V7X&:
%\PI[.mLE^"(b0WO(8(oHBmRKT9<NV>cOK^</Gu+GhcINRTId@6U[m4A4UL@<A%F`%4p=ip'tQKB6jYkciOcGWd39+YOREZ5;aSL%
%FE\F<!gW-_5@c8;R-b@`9a"4nFE\MY:lKmakjBupI!N2%\iWR5!]Xm%h4;NM"ppr4\iWQ68/loe4'Nge.bu*jXn(BBCj.;F-B<I^
%]-F<lfa3FMGF$I*:bd[kNp(@+Yq'X7X:YKb`gH-'@9-p5<jFe[Q=4fO.bu+3Y(X8+dG4ip9dW3kmKc+F@aif^&NUEp[UZm19B(64
%9,G0$l\W#^=6T''o1Qdal0bY),*kiF#>#L$^l\!0OT_\D4l%,gc7Z3&h4_F$LUQHd#jO57^9ZQ,$B[GW,ITZX;NPW[g$XZuaC%SJ
%]+^%-.s,tZVF+YRmeX@!h4;3c.Hs1,BZ1^np-NuTpRmW&8P]SCdsa]b(bh.[J\fBCG8t,bZEi:h#!5B:Uhk7BRD]h'@_9N!'3oTi
%]0lOTe;#R/SKg<69VE'Q*AWbr[9_GQJAiZ4V8@E=k_<ihR-bBf:pt.FcZTOE7]&*\[Q=MRlrMg-#UV"eH!9)/#WM9M(:H<JMOiD$
%d+qjneX'A$mNAd*l$Bp&b>K22]0j.kTQ(:S6(tn8L`+%87W`j)A.Y:"6?adi4BUh8qO`f3mJmA5I"d:B%VT\l&M%sId'\JV4/0?>
%@MYi#6?`[J7k0o]h&T6D1<rn24%g"0eFdp-QI);0?(nm:FE].#&Wu!jP-?WU7!Am8A6K_^4$L\]:uT%(3CS&41#F"s3<9I=I!7KY
%icS883uaEbDG2Tl8]]E"T'q[qa[32JG@q4qD<qVe*Rm<ah^[M(NbV_b,JH6tgjLrG'tubs4e>f=L%!=("S_cAT'm0*N9#>o45^C#
%4(Us+LDr60WX@>u/cr/P"q]K?F]&;tB"AZPWmh^<JH<^S(kLi[2I2O%$I'UCRr<V=3uA+:p)J9N/3J&BME@WXTqnM?gnEkqjA1Kf
%%`T\CTL\p'#aqnL][5D9"24q`,=hBL&2W:Zdb@&saZ!PimAqb+C.)tFZ0.[Xd+_]V&;5F:kj9K(1@l*k*@?Fod)'Z*]7\%pL"q\H
%NABPdlup0K7#G%l[u2R)?HDNbY48uH7c(\+%X/q^E+<cI=N.']XA!dk1PJi>QR#:F+-FNN%n08>#9f?GJP//pSG\Q#i'W)W]HVL[
%3eg'HT)i"nPqXEnLVW\_"B>h^=&@iPO'(`2r=A/,(=5X),[lCQAio#==b[QSg!5_D7&t!7r#j+DjX_Wg42NlbGjQIQ:XSmSG(fLA
%%N,r7_;=O'=;>:,e<(&K;^&T%m2A,$P(pnu"FhbSM=T@dTElf1?9?mjZ!q:Q@kk@XH0oEVd2qo5iKHiB<LN6AV\knT?.[3=Z7pL@
%CraE(-AJ,F:(WkZ'2PhhEHPnRH?B-/SWU=tL"O\VA`>$dZ(5HN0<O`t=U(Q:oMia?>1uYt)"H>=6/(Fcf+&T&+lk8gG*[4T^00F&
%K7t+lh-XrR/9+4n?fAE!9NGhQ>!#n'0_$Wp*C+c=7/.L#4'T#g/$5?g_F!O6>!![_-;fe:m3&:pUXIj^P'cJ?>!#7X=CFU5#Le9T
%,aHpj&hU=b>!#CTUTPWh4Rf10(^dC9AJED#'j<]OD]34b>!#9V&==oK*O0B7f4.uG$V%U)5Y!OSUgAprb\@Ai$01iHeW.3RKijVj
%%X&!`N5i5JQ>kA[l=oW:0F4ahT+V5BP+_@$4uLq1-"!^SG)utL:1:Q:`.^p'L"22:,pQ2o[A28>r2@JIB8KK$=%M`*;b:[PUiq>r
%bE189e.,qr*%n%16pJSpX/'p'(qj)EUis0ZM&0&Oh"Y%M=%VfC(%A)++glqS/?[u!C56<#Mr`Yl;EINtpp@nP#ALEIVmNdj6sMmM
%SL"9:N@Ts2Q3c&9kS`dWrO+S_B=(#rNNgJ5)=8iLAhK$cP`Q0a0\TCPKs\^1#ID!a8lJJLP=<rOa?N$]4,=c+Y*=+\X-^S!g0)c7
%1YZS2BkJ<VBOXbOL[->2o.$XYT)gG&R+'>)5I'9,1GX]/G\*E:oXf3K$oaof_rX-=B*tK+%:8TX/#Ad_6t^"2..(ueaf!C6e..s/
%!9J,mC'V"?,SjQFk_$l*(HbiJTLslAF$sdKZ%eU1ed`=$4tj9d"D)2\A]/A>Y9pu.iO)%n=9UqO[H$p.B_hi2?s.)609,PVTe-?/
%NG.]5!*s!,O4)`Z71tE[d+[/T@bO1Q4%R!'F?Qas\.3j`4!"k?8rcI0Yg`tbTqljbf4Ql/Lsuoi)Y8S2W?"-7U`(h\G*\Q/NE[R6
%"3S>((LePq_tXSfieZ+0VF$JJ=RGTV8[^.NG4=LR5^:LfLTabT4/K=eMLdbI$F--5$+RK3ChHt+_lUe"6nuL-XV0C)h?YJ)0sMbc
%P(r8+&DP%Y-Nn"7fT(=mKZP/FgT_NHa^BhT%^3s#3irtJd1JnRX?p_n5)Q:]F=_^t>A8&8M!\Sh3<J:W@QV)@8/>3^m9#iR`pjYG
%*@gl1q6%YZE(;btH!Z3WcEVUp,@3O<*P>2?:D[>!'V1GkU(Z4C7j<LsEC=UJZ$<>XZ^iD4Rc\f<;iFO1.E*$63uYsZpn$0a1)B;I
%T%VC%S.Cq?LtPOn?pq(pAiimM:gK-Lm0JD=k4-<)8%0W>5_[mOnDd)]6Rt2%gl.9[Q\F*&&u+DcAihH2Vu(DRD!+nAJH8SZ3s%L:
%%W'@*8"9^_25=W4@-IBrL"VKM:O:e.ZQ1JYRP+9WFt@h"\f!6WTmSD9PBph&+p^W>b7l4@KLEnZ2e'3?!YOr)$aUjn^.@*aR-f]?
%,g?jfm7>,[0%!"&a''LhYnq:>Hq,D<L-oi?f"6(-VmaKP(OX47[2leL3'W,N:*dsUe9:bh8;>W;K^o`5;5L]G$CPjV%B8_;DFoDW
%b]_&k(T,NqCr[_C\[r<=m4]KR.gr\S:lD\dcYSALYij$EG"?7aaS/emmJ'RCVn@1DT9i8,ijE8R)U4nkCIbmO]&O1'*LWca%3oIH
%U::hGZnU7^=^3DTCXje5Z?VF`foA#96@d+5k*=G1r``08-PoUFcR?1Al"la:<N,:U;S][)&[`WV3spnQ?k*cjQBe^IDC>'YSR3PL
%!sf6LCauud:i3$0^"o\qi&6Y;44hgkaG[OS&\T3i[b0n4D^U0pXfV/<d#1(&;mL3pOq9@YXg$QB_MGXM@CIHn&^b,ZoQFcQOG#Zk
%[j1E<>=r=_1A8dA):@4/0&<MaNp59-qWennHFrjAhZ'64;L5tQ+b.Z7qtXUt%tD0<Y.pkW6L_lo=-qh**o5mP4aEdmj5j)4EsD[8
%nOHs"ikMnlDo^IJ?GERYIIbqZf7j3@d@!4HC_iXmr/k-0s6I]I^%qFJ]D2:=rb@-NDt3dEptPhnJ,8UbqfNJd?S;?L^Wb\_rn[>+
%If.TW"J8eJM/Z>l#2>#Xl-CabH?a@nj4DUHD<8N<il1ICq)tYtaVV)iNkVrSq+5TH:nXN9`;i(-h@KbkKAch#"pS=XS&P,oDtt%E
%kXMd#7pl&Ib"!@#Ie]2#<-eGai1KY)HEl1gau@"fae0U0U@Jb3+oe!8InPpI:]@M4,-Rd3MO:hMm$*cEhnE!-ho67nOF>%kc\o%J
%_f&B2s/^;sD@tG8So&3;TiR6e^IJ6'g',h7jYg2T2C9k&n)_uOJ>,<S.LWEUI\AY`#rg/.ZZ3?Skf-;tR6`rEjVt4)^EEriD(eE&
%d*;B.8ZZep>\YNPSNX:*oJ<Lp0YD0C';TYfm:0+u*s2kUDYQ>ISJ4jHUe\;<g`$R?+4JEjp+`Z`5-B<mb4T8G=<kLaL5YphiKD]E
%I/Oul`ue7ACEF4:oep"@]t?2pCfTmL)M'R1`(ZJXYoKm[2_'0cdWlSBlb<DrjlOV'o(dlHBRkeDh>H"<#]"<>+Zrb@1K=6O7-=XN
%e/no77/[FS5NRAQ[ZEu!Oc%H9hg`B%f3/+Dj,a1,Q,rp&O/rpX`[>argG0\g^9p^(]lL##8<VB2qI#H;Vu(t\p4;=LdC3"A.rBW)
%Qs4?1jdXs.3+<f8XWi&es82SdC<I$ObQ%LSjYC!A_s'e2)/T/a4k.,Q,kS4VaeK-u0+LpaML8D4jln6uIl\K&#l9%^(s>FM!t##I
%I+WTSD.l"e)6h\8OnW]'BCPBM5B#'qmp_\g,QIPp^]3EABBQh)O$EKJrY_U-Vr*""m&R2M9E'3QQ+uFQ5$NF*c\qD<r/XYE#@=&$
%puZ2aRc\cOm]TDeT/h=FG5hDc.G"U0q"1bV2uPu#^M\LI[H'Q$Or)9U%.4eHLOM6DJ"ofQ>b:odnn-'dd&DCDImJALO#uXPPg92J
%69kI[hd-"o65P+*>o0Ymr9rb3c10>RbNJ[7O0?!Opn1,1\3p7EH$8e*6Jk7.n#D`'[a)'hcYm,bk`S-=X3Q+lf,m1@J+`Bn#CCfa
%cCRhq%j(T-ZnL8pSS4$W]R:KC4F+X<oC_[(hCL<UVsMHhkBAf22fGjK]Y/C<bL^[XV^VK6i3'ZODXYd1Ru=IGDbbaa:=1W1LNbaI
%DpIr0=l/!qq:2V'Wf?JC6^Lm3h43;kDGu1?m_%\'Ilf`a1g-TO-RtU&4g8kj_<o:pno)!3g>Km+4qB`CU@58A>b<YKEddNDjk8mO
%,N*Ub&TG;LC@:G/S,O9!_sOTO>=X"dNN6.(l][g=lNr"(+5QI9H$XW'lK\&qc*Zm/5[Qf5o(EUhoS_gh`FndBDX[!Zo2T\Bb0="u
%D-+8%?ffMZK_t+`PM:k^gk=4(E&Y<Df-gA-cG-qOHTg9Jk.BDrQ^dGao3H7Jb=sZ]_kXfd4`QP@2E.`OH[_TV[]g8)VK9EJAU4:2
%bEM*j^WrOREqJu"pBV9.$!2`12p]6@rc4mhcP*D(iT%Q8f8o*5[[gC4oB*JS/)W'.DdL1B41RK1hRi`pRjTbrk>T[)k;tf%VY"<>
%&bUO,B@O<UZ1lu<lG\\5bF?!-L'-;u?aFYU\]Z@rG.`9FrSlm[q;(;Wq%SV.q!hWA[r[r3aAP.63kr9*[pNK[^Q4B"cekVm;4a7W
%_XHd0lW;9YYMX0N2i$V)SR?N6dr3N-Y+K$+^:lV<SC4J2TBrY/ApO^^oZpT?QchI5YlDgr?9%MPfU)tToY2%DjaVK![uZ`!Z0r_@
%4)HaMq^?W%@si??G'W[qRYU3i&,-t!kuN50kNbDP4d-DJ]g"jPki)<0@flP@e.1lkF13R<^1i*(L>'sP2TsE.gaa%u[\(#h5Xp/-
%HYkJ:m&0Kln+Sq\lfY2WG1YouisCn+iIp+c1\'Q&m,mEKnn-%_*7WYdIWk>-ak>5aid<^,jsBdTT&.(-P$LiHQcn]eQ5I_r[!&<b
%[)Y0K&,I#^QHu)_Ze:0nTf;l:6CTeXH_0<iJJ;tRa-Fg>o]k`>pj0LKh[*`'a.C=^O!YQa?_9GFHS]6DQ3VV\f6f,P=jPF>:Srf2
%&*dab@:B]n-9Ge$h6[**0RNEVqUNcio;eK1S@Eoj%=)2nCfXkhWk9BO);p`OT36HQT<$=Ka<c6;3pXfm0r)Y>h`IdbGc2(#^fdn*
%VIA@@L7)LW*GBTqO&IUM6eV)FEj"TZIXK1k;;8jp)sU60Sc]3GfTtDM>[UKG06UQAnL0FF8NUG^ZUTD6YcJ>s`158D]4e79FQ2$]
%iP;?E:G+;ekMIl;Q`&=1/aGXS<W>7T&1P8=s42\*j4!.KZe)D+:JR5mbKHA.:L5(&O^f0g5Dup6g<h!\T2Y`/MVV2PghS4ApSZIC
%2q5[Boo#$hgk9YE6!P5'bflb_e5&puqrQREB>=,oUq,.PXZiSKoH<Zf-MTe87YOS$bbIs0R?16fI<@7jPDYFgC+^l-jiu>?F6I@_
%I5'D,Z(V[FS4lk/^[g0_\oN7C\NH:A6[j?%Ier0VPZ6SWUH;[i'B\KR'Z;,>C006$?LeSJHXBO>5<lb?qdmq2oT/F?="!1GT):KT
%K(>UVF)jG6G`jFueYO&q;^c"CSY&\NFZnVfB.gA?V^siI5ehS;@`rH4%3FA+[jG3s_sWeVJ&Q<\hS\mT42"de>b54pR[66&e/(4K
%@(%HMS;FNf(UVZ3P_h/l1Pau(38dJp8^jp4)rjdo#+e#U<0Sh^??7aAm[_O^3YuAMN]NE"kJ2.9-CC)(P)JlZ%amp1A,gUI:*3Ce
%b*:2q\L;MOb54/8*b?s]r;^k8-7P(j5FpqAPWc]49UV;9Z)A0r(M2$"m/'h5XLTaWO!tlV8nSWFfAC5*jq)TK-I(Wm[)O`]o!#t%
%-=qGH1N@Yq)i$3]&,I$Qr.7Fm?hjG(J,"V?.R2^pLZf;qY:1O-6UCQoCuEqVNV]t[`HjJ-R9?`L7B\ST?CNVOZX0-og8rm96Eg@P
%3_O(+D)U#>=fj9\88#%_CULcg[FnZONO;oic!'M>BXM8:k_C1s\+a`1-4I`Z%ETYj!-$daGMbl(hF805@,=BE2B&]cBGPSS2PP<i
%gIV^.K4fC>OaS'/8Qc4GF8!rAq)@Ia^\tBhR`Bh\b@d0fQS6W:[rYQ018/#+:N!n6"A^asG#qW@Lp0]^^B,=rmG0cN//10WJn?^$
%*VJ\0JtZF&0<VaDrX=Oe(LSZ#),9j_KX)Q)\$2JbZ`l1a[oqels"+11s6jUr*u5Acj0H99aB]?ap<>F?>XX;7iM*rRr7jk3is1dd
%5HR!h@N,81:WL1fr]<W2p:dDOl]C!kn7X`q+'08^Y$U:<pt'Gml)ER>cZZ8nSsJ4RU_]?U-i/,2NqmsU)eO]>o&jjEV,8>O%Sc*m
%IFsk.2!T_Nms3R:cVYeNU$/KY3?9IdqKm]MSm7oD]Y%A'9KDAKp5FAAnARn;8024_if8(A=8L1,IWPF2NrRtDQ_X?E%Y+fYD(X*(
%ha<5"5"[Gd3W?Y(6Z`2"5pg?,s3C/l?,qG/4X'sob\%S@aZ8LqVll[UGAPMYh`9g\a*d>lQVObWcX+8/o6U6)l8"hcQW)Jfg+RV]
%F\ggQhb=6"+$I<<?N%;p5JR'fp9'sYrUfY-5Od_JYbDeW\,(`J=Uc$Dq4$[dq&V;6hStWF\aJ5HP?,0e,<D&9pLs8^boX1D6hW3H
%oh6/`HcTe0g$Bk$CUsg!m,>Ru`1m:uVsEI8o!<-Y/jIMan_$]>TD`eRFhYNam!AL*Z`EDUbH5dOfmgF<aINXobiO-LgI-P?i7XYA
%_X3"?Sc%s0`LE?6r-Y:,<M&!NS*#Vb3[1.]S*VsjjU8V44B&Y2ONTg<UIXZtYd<q0YFQ3-?S,'[;0)VCPlj*?&"'Td[-)XP`30,N
%YIBdGm@XCR.U06'l<sXUg$pgZ?=q7$m!+p=0=0\MG.c%ZQWoMV\66c?U0\]5?Y7@%*oB4qa3.a.0>#[TO!i7dD]D=*l%S;n4\0e.
%_sb9/iiuM55!$'-#Bq'Q;DT=OfYeJSJ/N045PhVQ?kZH=1\Mi*iit4F9M_bEs)[_X,#+T"h0a9a[aj8!+-(]Ld,r5c5NZD3&')_@
%`&(aqmJXS?`uFMq2XYn9bm7"($\@OPo/`X"c0.g4>,EAM:=48=:S(ql3g8&U[]963W)Ib;rna"F#@Gb?JLL*b2B=hNAGYKWQI_9a
%9OM)d6i4P[p0N)O]m0'nH%Xpl]mN"@,p1j4s-eB6&FTVf1:rV=19b[Qo7182_jQbbL3<h]2!`E$gqH*^/uN7jeH^;@i]XPd6?f;o
%:cl%WVKH@*%CJP:lGL..gG!49r-J'a;VIm0[sL?Z%(?)Tr#!]Fa#K_Rc,'93g.1)AR*pcCO0Q/Qh*]rgZQE]NA*hsob^PN(O)Z:k
%N"=s[M&Y0naeUbia*p67^$!n3h4unL9u%M>n`9B6ce$A?H*b.GSRQQ@4MRr2SPF,J4=YlNb;U5ETAH+919$(Uq!bFIp#>fnJ&;"_
%=(bH(*9;=QG-!U:,<1>EDU*,p[lN24mLDAR\$PZtdkuGtT6Jdp=8S$rBP>OsnDa<0@Z%S1a*-'u$#CqI=&ZKJea@bR.++2iYb\BA
%R_b..A>3\?Uphtf4TJ-DEl#7eXJFZ4J*m@WoMCR?^V.2Wn]c>#lbdfO:9m4\rSftmT"MHaUVaEE\n^\7j>B"kVg's<<Pm@PcKohf
%f9@o3a^0>PI@mrj%O]r12ai,I<r`1#H'Z[:H+_GtRlo5^a;mJg2s9,3nMdp_$YEcD+#j&UGA3Zjpg%d+>*s5Lo5/BZc-<`.rO<3Z
%\%2;m2rEcSHCLCCO*UZ4\Ht4uo4;e]/oq[QlJO:9F)'6QS_I5b0OO#*leHlYgX#1jHrS_.-h\-Wkb`K3^=)DdQ#>%D3LhVUIp?8B
%s69Ajb5(S[mrOPL=^o7EB*Mo!rS;R)!W@Sr^`>P?`/Ka;j%::6Y/Cf3pNVqSr;^Bp`Z'/o%6:++rjNuq:JQE=Ca#OR=!snY2o#=G
%,]EAAS);Mh\-_i=?*1_qN6;I4O!aS`:q"cDZ1&6D(JUHVa*?lsi*O]]RAY\bC9Is9q"/Rj[R\Z1VgO_)Y:dr[4lr!6qMSW2\B,.Y
%hjp?4135o\n#BI(^79jEE3=<G:Yp8L%6M&qK3e.g670h?2qK]X:7"nWD>a0VJc/m1R*8?Q0^$l+`na/Qn89Qq%P?#uh^5pi#LDi)
%#k/MWaiXRS?+cR>T;bWSW]sJ242Bp&..c\]1YN,\VF?jOplHRa-1FS=_1T,WB$4Sj%!JRbn&3S"0\4'n918%>*UZJa5M93>-62mD
%C]F%Q='(a34*@e-a_V[97aV;V7C,^1miV+kmbrdVMXJP)^ZT7rS>X$_*rH7%JnAZi]2$V(KDam])s6<(m[#ANfG<'\oc`[G+1?a<
%N;DK,qH!+W[V&'XYe*(l*`%7NF?f3mT8P)KB/_IsQBPtu%dJF(5J-aRjD=,sE]tK;=J<upj*o4i^)rA6k$d-Xa6@nbn'As7hLOdq
%EW=YG#CA?MU'Grj)r+Mik@'VQiQT>pI`4UULrVs#rKuPTDoGF2aC+V`q)/<gc+laAZBZ1ps0Lrc<H@sFnrH]rY<7%8)KG5,Y.s%)
%^OAfkf-+o'Mj)rO";mB8WkdHIm*;f;^O08+p016R/q`Vt6@:nC7GKNid(s4&4F%>X),DU7Q1c7Fj5IXE46b&Bn#7@OQb39J5pl#-
%UclksFo]@A8!dV=:]b7nD\%Rnr?q^n#;A)`Y7g19G4^EoVhYpCTpkJtG1",Fe;rj%`EN0<`U`lOB@d[TbW3V7YZje?p"u;;GeX+M
%WW'rce%;&cI`18eEW,^Xjls5ZWCDor_CXh\Fu[\308I*^m&\D@BpB_-1c^4j*0^U+mJ>o7ont7m$@B;Fmq1,:]odL$>*.G-Z&9>E
%e$N=PH?O^QRN89<I=?W/hf.Fp^!8'm&!LJu5[SJ#&u:$Qr3+]Ln>FImPmiMT#gj/i?!VoC>9V#5'9sXmIlb1]rl`>(IJ'VI_ghUP
%[u2?3cL\O+.DP_%nSJ$\jprQ'`TJ=mA/=)&qXI'ob5[mKfD)P4rU]u+ptPhnJ,8UbqfQ>lilf;jrg-bMcbKJYgQ+RFOuhoi6>6=l
%ZR-`=kF0?njk^ub2T:50$UZo=jC-d`L$6EVkaS=_:S+kG?67"Hm;0BO2;>LGg&;qJO=dhFF(FjVNZN(B]ADm>3;SA\]`6nUZ\,E_
%O2KG-5<AcU""=10IYj?^akna+kKar/?(X5DbI66DjeMj43ASSmk8*4$a4>AC)-9>ER*b)6aF>;pan>'M[))A&:Wd&*$_hbMh\qM[
%1i@<'Vr@loi:r\gqlcCHr-WN:hrJ:S&V%$^bo_n*BGu=f%+0/Krm3MLi=Co@+kjp0-S)O[,T3eD1?,jlJJ_n\b-TJ;jo=Vc_D:%F
%A\b?/%sW,c?OU/`6ecJsn%JfRO;MdiIQ0!W[8mOLd3f@`rV$ejm<c9M'QOS2`\`1M3_JdIPWE`DXE/P-a(o15D>o(`f<K;V)rmSY
%2RKbKC9o7')Q,8/kUmpQe:c5e=RKtL%YQ?2A_0.kd-RE@lf7JVbP43[K)O<9J,I^OA`nI@r8Wj,`@$.;I/b:XA^jmjW9V5)\>-]N
%3daqOK[Gm8ff#5l.$NB']M0NmmuI\A&'^6EYo*pt)QA<<G:'dFA(.9e1'<kTds&8R+>Zo/c5i`hrV5?aYZtot@+H<#@qE(0V&L=j
%jZLpC\:/GP:0R)VAuGLLXh%?9dIuC9g@*?AhFahqY1^*H:KKGf?A"4NNL35f#+K.FA!1HUAjR6l-7.;t5:k1[r!C_b.BCf0;c\I`
%D0+T8<M44">>foCP@*K-ArY'1i:7N)"4jk_pW8BI&GT8MOgDc+I%M4-boMUCqBVl3j=uCYI[er/m''fda\![krl+El]>+)bnp?l(
%L*jH"BCbOL=\[qa<JUSpUR+cldJ:Gh+Z>tR@I`I"=>0Bhj>.5YS+VK[I2&NBQ_2HZ$PT#ULns>U'-!Y=6CpO`V17IF=K]s-E%^p[
%&GeQ@i9]GElgi?h4;B6p;-6g(.b#Ke*HdqGj+i7/k[WNF'd8pAWCB6.GM,l5</gTGSDAJV[X"ZQBu-,7]"H'E;\+ufm>Z`XT;%n>
%;3AW:1t;L92T@@-%clkY(:Y@TdCYXQ_S]729q,4oc0t/f.m,=`hr_>/5I7WAX\J4Z9R4b5PVkpn/XH-i:RI!'2`<jh.m.T,:0!ml
%kV6B_IbWt,SYF<^e)gS<WCsP6hsnD#;r??,p8I4:%'U8p#\gris5f#`0tA0/^&I*uUF%s:g;PN/^Mb`s04)CUH*pm^n:pI'49kEQ
%LTP3E>;9qQSKr!_"ubqjZ<T_0]R4m<gSET$QcH20)On5n;I3rUfC@cEY"oh,/D3,t:"K$5LU$B<ClL_o0nutQo9*ro#\2#cRO]=1
%5F`XEQ'h6-a^uRV2m9Gr](`u0nfBSHk-12`]^_/VR<b8]$?L]&,A(\SQ(r6/2B/MOas#7\^DMrI*`*O1@cKS`A_/6r3nnd_51Hh&
%9Puo,Z;(W(]<^\lNco9g;DT\=o)&""jk6!urHP@k1b1qYot5pnNBQI/dMm"hXRbs.DYbe>7_lIS#Bj-.OXpGP?[=j)V/>(_GqEE3
%o:&)4r7[9RbJ)%nFLN;DkZqCo#&FZOXBjT8s&S4,<oePn'^JOqo.>!L#4b&AgZ3WK%Gn_rS^21.9_*ZogrGAIb$J4.As&.CHs:>$
%H&!6EkuQZ"-'Fl.l]7E656A/HV5`LW9jrFU]jfS?GdC0DjGD.49YSV,"6[Vmn`QgJD_Ac;]'0lHWa<Bhp:/.e%9H^kS%IbNp*NRN
%(\ic%>NV,+YO-^0V=IJ2S(;/[C<9e`gchGOXd^dN@C6$^D0"6GDJ-$*%-?g4.CZ!t*7Tb60M>Kqk\`Gmoa^DJc#>cLE\e]e5s*i^
%K6AlVFi5mr4heKgVs+c-3W&"1r0ug@Mrj2_35tmCalW-cFn9$_>HtY(r&5u^2p:O1DjN\Z]tV&>Gl4]="S5ie7CEWrs4N-"n^DEC
%-g+D*K7=q"d=$4f-HOndOT0?LpAFqBJ(&#bq?m<;I!meqPo4\J5'2X+lsJV>4]c:bXlCP=ppn+ALS?9thCGS>`(f[=0AjE+4.SNm
%ZY+:O/C'j+&'D4,Qa3l/0m"?sM]uF#/;j@%4H!p3B@2caa*i4Kc272c-M?le9(gK$`Al,K(^?SN]>&QBB5u+A`Ns69B5uJjEc8*L
%s1;QpEJnU02VEt'dHuL#dG;dLBW&EWrVLRd<]=<rmc&$9lJ`0Rf:mTd>ds7$i`XLV:[p"49qK>GY<AKP>&c+%^,d%afs,cDNlBXf
%E\,LR`S%A<Ir7\mO4E8\%[F<RcY'rG?O1te<siR'-M0E%7de:do<%E.7eu9DA:.:aR`QqT\nU_p`A?io7W'5Jh/M-0GrPLN:Pm6]
%5i-UW3qL]gcgrdto,0-L5-JdpoZ:X'0=rarZQ\SN5.R?L8P1`k%?AJ(L!_Y@O:Rb,agM*HF<N]9`#,;(4R:YbgbR:!3<opJ>*65g
%ihd1G^T$431a#4+j:QOaiV?PL8lgX?B;1oQ5+e(9"it72ioUhg$T^0XTqo3n7sVV'EOJSI=2r\\@ioYf1i%+BM^T*ob3_Hc]?P2'
%o%:j,8n$2ihLZ5[4J)(R2Va1-c!t[D2XIAmZJd?%PVlIL`hU]IV:`t-(hZLF%II1k?.OQr:Ao"@4!Q=fNLrnoY=ahu0FO(YIBg79
%Fl(4_S%Jc%\HbcC3R;bg0bo\?MRmj_331$T^bumPB?Q!RA[hWu2VZqrNLMR0oT:*Vqn/.PprK_NnqcD.:Y,?D\uomUXEjWKffCOA
%nfsJcJ'5`KR:faH(74j(QB*E#$r=)^D)^$W^X)pBp()N6du+rdFL#;#J$O!]`JS#Kr&g%]NUl'"q'2HOo7Ch*`RFV7MW$]t<-;,U
%PNPT5mo!.nDBNk>mlOc]OqT"b;$_.c;^#[[ZF26e(<3I?S2FQuCMTLM=b,2TWBLr1<$12o<V.*1\3\UjmQ`M*NKc)W6)Hh,hs,E^
%=FBNjVG<%i0)>t<E[TQg6%=15S5!b#$CafaZ1#9(rugE*3c(=`ra$s7hmn-5g8b`,jO4kkqPlHj`Rd!e[$6c6X)^.\`t4dkWbB"6
%KM<\W%SS`mXZkF*WkIu=)m9c6-VhB<mSO[?<b/j+;OI,YX/6NTK%#%@KA*)pnQ>rF6mq+sBk92M&gm`5"-1DVNf\Xh.A("JrpmSD
%4*>iP/'V\>n!^&hI#,/8IiPToVe(;J)CtC(q8L@up(-S%M,%$>HO`o#YT\mnjW't],8>3P@ZF895,8HQg(^5o2ao.K/J3l'Z>^?e
%MIoM7_ECGC,$W$E*CVBbGl(Pe"mmF!d?[<h1G(p*2ao,A^\<!DHR2!U!u0^F!Yk'H#:RHT!(GTUTWgNIQ*(<>ls0Z,Mi$s1pRq&5
%V?@7[[fd$^G*iC>;BMOh6=Zh,^El,G2i._e#4[P^^\2p;CF)6^X/uLQ\iE#q0*-rR6\(o!';+Fn`Vh,Iis&qm\[<ki@2;'B^K.TQ
%m*PInj_jEn_\IgDl^Br8-OWSBjH'!mBf9,P.9r/$5rO#Rf30h7Z^M+^OE5YqP.d.,MgVL-cs7BuZL&)pRik44KR\!d=d@7p.!ru+
%,r-o.iU)L6Ib[nNik7HMD\kHWIlf)rJGgk(.lOmll=l=!W%pU?X_$E7+&uV,?#bP[@os.>pp:LF!h(?<YYgFb4NOS?iMR.H\LhgQ
%e,RpB*S1j-3V(4Cp69&JRNC+u.9f7XX4(e%IXG1**PRg&:=b6XgU1`JmG*l=SeZh"#,uASR`=chKf42>E>I\(.K==FVRXYCr:?;r
%^T/FPC`G<@gV`j@SCMAQ8aXu15+^+Vc5M<TQdK.=f<,%V],dM50!DL0ZN9FRF_r)@9rcD"[`$@`)9tf3,<?KrX!I$#B/Mpjl/1X2
%.<K,eXu1_+'O%,G-<I&uhkK[^gbOY1YJZH39Lb%%rJHjh9F.?2c-MiC%ruUTE!C5tp\=H*FoIge?+e9-)/J#S.g$&pUm1b`qf+[2
%/S]?$T(9Qrj;jt:CZR*DgGRbA."B&bcZEsiLJdl`qKG,%'nVf[?8bb8i<X]H(WD>rF"ZdPBVJ]='*P7/0l<Ss<QSk/f`eu3b\*fV
%Z.X]`B*B,V24f^q[_8Dr73cFIf\!3d?.I#AaZ#o.jK<7Y2J_BHlEoZT'C+JU8#;O]5AVao/P5^<Wjc\o%VQ,So^V4.p%l0O)tJeE
%V6t=i`(]at>37P>I@QB"@+XPM[*q*WmStXr&a5=ka"UlT<1O`(:9qe+E_XqQ0Sr]k:]7#O/0ZlM-`o75X&#`-1^?n?+:<]Khjf3[
%rh6&7G"WOg:5tum]/b`mBc8L!'X:52U*ujleL6<BN[ms@k;G_*C($6"-nF1OKF]"j$,\/`=HB20Y'kds'Q5p";09Uo;3WDDE70'E
%3Jp^_H,D&QqKTJ1hA`1;A_jJr\f+!dT<K5&BhD^L0T*0EmS[n1HPFHRbu#0hCaFtE.>ZE%i])`<;5)M_b3C[7_(_tp;9IHlCN_Rk
%da+.`qqfj?b(e_4ket(1raR?rF.%e:hX4g?a/1>I?4i-s4M$]Y0T)RV9ed?o-&,kf`DFFK(eWL%6P4OqC(R3`nhf,AS'*opp*Vdh
%g9Nq%#>r&F6lD57kS8M_.df<SdV:JRDZO?N$"a=t#>q581?e&[)FI(BL=.o,%-?nq4eDLN7SrpmMWl1r`hV9.6E.fe;$\Ju&B^Zc
%UYT28@9j>9oJI\0K.f0$G3-^QSm8hoXE\cfh&JYApr?!X7qXd!:TPSV:\k-RG#JC;=_o(sLF_kMdjcs'%0[fBK-4q5*mIo_@r?Y\
%H@a,&fZQm<a/VN$5iO/^gDiEilZ=G%U?CDnIT#RfQ2!pnC_#JQRM`[M5A>oCPJ4gWPjh7jcPoVG-gdeX8QlXqZuJb*A0k%r_37U@
%P<90G*'Hl"!u^mlgB/>M&#(GR"u;ik[REtq>G<KkQFu6^O!hYA_^Cn4SmT8#ZFa?9j=N51Sa3W-7fef>-LE4'1!$.2#>CT@jF_Vn
%a_K/6_:V2;r"@WM;.]iIMD9*Z^%sbD_2Iks[`-je-dKM%YkhV=2Sfr'2s]kU*P]9Jp_Z_slg\4C@;bM1&]On*1r9@jGU1P"O^E&,
%JO\:6Rn";'G;plHF2kq*K\)\T^88B",J<\]E=[NaIUkrtCYQ#7T<62pfPd<uPIhQZ1Xa3#]c'Yr9s5VZa0.1$5&%_/l>p2Lc.Vj$
%c1dU7:;/aMX%!"ppE=f*?XDPnc+2VN0)(mZ]fAl7cK0MN\_K!$oo*BDj&jVeeh`>/ECS55erM,HHcE=^e%$PaSU5B0[j2Kn@TrS0
%ZZZdu0R8/c&0OQVVEq[tN!3I;;F)'iN>)Vc\rCqU1U'i3:Q$UF2%5O_E0f.\dRYE,*jZDI]N@oo_q63J%6OB"8Q9b_X:Uh/_ap*]
%=Gad:c^V[j6hupS,&R[lFiQg0nci]4fh8lX][4(JJNU^%\cUWZY:InkdC0kLe!^SWUoJ.qJ\iUN@FPRgG1U%Z'^E/Ab@.e3cW9.Q
%hZmbkWu5ZkLhn#Yh<KlCWlt$mRTkhEDHeTu!/I@#;,k\DPrFkGR16:>R\PD/>X>nS8>t_!"V6\PKB8kZHcS9CcV-ddLAocU0=6g1
%$a;8-0Z$bdS,a/=7e5fuq!o<6*cM`oX"AGH0^)^NRZ*Y=#b$.0FgC$?*k1'I\X+)C0(]IH$s9U6e\!n'<sF*>Q<kHl;2k[+%AD^+
%AF1-/^dIE6TiL3Kp:R4+!aJ<]/'^D9A"\TXlK.iri%Q30M\K/9LMZu"7B#AuYa("H1O(ldG>]s#]"ZjKE:aSAH2k^/Z\,E_O2L3q
%S-D_th(9Eno$M=mb2&1sAKBs2D$o"Eoc5*.4.P=I"D2G>*pnMr@`?!`NC;jJCRn&OXb^qsYIGeZ\H,mJ6sXm.9rfrq[F+p@O`,7b
%cceX%`K_R0G0fgt=?"0M8O0B231<WYMYH7a*m/7[cnq_jr`._GWc@[a#'J(*>5N+9a.NWWeG"?LFg,RLUGNOBL3+OkUQ:u6j9QYD
%<Y:Yol:_^P3/i!*m9LRmndPtB-legC)[:@M:b(f*DGe6O>1>EGLe?e&J:\PqKSOrI"R^4?F<rDjo^ct<F1<!0pehPoh:g`UgY3C:
%^i-00ktR`+$"J[ZrDqI`7l>Lm#IB0Ur!D$h.eO7lr=;l@\58"C0?6Lc_>/1Y^d67]D%Sr`8mO;S*(>>pMfW=^82bdAdqTeK[=hqa
%))]&2QB3c6WppCN,)%YZFa726<51m"&@I@QDCbpR=RYabK3JLqVd]u*ngH#1oK)/j.Sda\#^)5&[<T]-.1,;jN#I7+B^Kq0Tmg5=
%XKM3Wfr@0,2Bf4_&9.]n*G`QU)43`G_/3sL0iY9SV[DP"/TN_CZT<o%*p&q/GIBdL9<4qmYr*-:%)^\oPdt0b&L&at52C[MKoo0?
%?^,%[8'5[NBdDbN*Qi"3n^cXXRKm1afQM,hEen$2SnnRq(5frWoi;WWFGZ`GJJFF$DnBGKk)IapnD]=QD4GBt2r@nNW7o#N]kI3h
%T#b>/re)n-De#c7N/B4?$R9'9#2-"FhMDh(C)6P[,NYHo2\b4bp#O6&C%-(*`_su!jIk1WE:aSAH2k^/Z\,E_O2GZLU-TEHmZ5n5
%hU2<>b'cIJ;E=;b&d*:*SdqMYm8s@R#4d(=CLha<]a(UUQ\$hII<na1R6J=>p81XR\EO]5XYuXJ4gr?-*ILtmKN>:6g,mnn'aNb'
%:U+UM)[E].I5[/X:gVn-C.Z^P]Q'SP8"U6p:4['rIs0[UZ/oPFd._p*FUcU*_'fbGUELZ!bNNG_H_rP/AdJi"qR)1J5BqnIWqJ%R
%PkToT2&$N2S.1*2$;!Cp\u0aF+ZM^^D*R<QgfV)d)$C+]G5$,Q[q-,`f/fc6b92%jF\IiLKA^qi1<g[>GKh7TTLu(5)$IEK16&`_
%jqNDAPtVFH6?"SsE:("HK''f+i3p;m4i+tZ.0O]!_43hGV\&2YKj\\!e)JK0EX4qd+lu.9;E2E3j:J+"c>VT<e5T?PL,D\LId-C@
%QYI!2#E^l<lPsU46Wu8kIBd6d<3VZ8'S%o=_GuQ'hI!fj?J:fF<o[E!kf[_0Fd6.q?lJr]CC83bcfi/RR&8HcA.-3JDTfqPX<Xke
%<S6*\o'qC!V:HuqSG^.2Sn<eN2?oa$;q'6i*^)0%([LY?cEipQi7:5[TS4k=:Y\G.UJU'ajiR2[bILM^Y#IC]5LWl:niQbCF/@#a
%WA7PTb`sZaRq[%%c#0E3c*WgTVR]UdO=F7J6-c`X'!q<!g)e3m*s,#rRtHps!mpb#:5(C!TY`fo<eMg.AT^6=GE#MBVCknCF(h#:
%X\!0,_PYdm_djM).N>aX5)jYW?ddhn6f_A/OC-hN^<aKONb5@=Z`OB&6HLC)&.G3U%$K;"##&7-3jT-&U&m0\TL40/;VYHt$jBF;
%Ousuq]`M#S8fX9=E8E&HV?[.<dk[4>@sg@C]8p7]iS(uc"`rK-B)u/+c[l#/,^LkTZoXSa<<=OS0n]u'7dZLs9jX\\DcZPJ9l0WM
%6He^QP+9Ok`I.p?:IV6p"1f5TS.GYB(Qk%[A;V)BFZW1=27V"SG=A;6\l.^S=4U3HH%=T)mSYum3#dU_)k&JFS/;Oq[ABl1C.b!3
%2l`_qB;K6=P*E_GPnHf)E&`&.URI5P-X!<K^*rTP`>Dko2-$aB,\bW4""Pb+1"BTtTs1DO"W+bt_ZVa(Q!PB<&iB\aURk!X]'E??
%gVpGFlB1-7$&'U81b8Xe9C^6K9UlUADNS4:jbs0i8$!8^"tA%jd@8.BN:!L!b)2b\S&]q._UFZ]l5e&hL(EJCd41B.Ybn;%brS5_
%l+FSYr;UoBI:nh5[SqZU?EN=A6#3Sa(eh`p%3?m@(_DSZQ;/<YR5.?8MgcKm"CODb$X&fP4W/X[WI@2Oj>,m-O`Y$!fVr.o=rlk=
%@Z.JQSU/,M+$L)D6I<s8Hnm^i).GK/7G+7uWNI#?M6\OpMNYbkl3HM4-Zp`W3^u],-5q"VX/.t:U!sup.2dfQ!p?J[SDS,JiGE3"
%?1](:!="NI`8&PqhUg#.ZR=Z(qH=2D[QSCe,k-Qjj#++#j4bO8*_G1fG5M15.K'([%e+)q+d0;h[f8dYlTlPa+69#'l9UD7n[=lA
%_G22W'"d!d;9nEncfq<;+iA`*kB%EhDADFsS[Gcr"V=tcl)Z[>`<lg!J=P(2&8HXTX_>jC%J&j.?8Gi"!X[g.ZsnsQQ<+q0)Um5h
%3q!QBPdn7u[4Khe<[<@j=_/j_[^dI/.")[UmG*6`?7@irGU]5%).W>W^$.\58C(;tLc]?"*^UVi;=S;JRku.k^WS?s:KOS8Z)u'2
%$;ZRuXW1:<_j6!HUfB*=,pN^r\WZ9N/WOYfpEbIRPfd/s%KdUkM$93<lL%Vm\T1;Nnkap81Zlk0Q+&\kmR7)@;[VR61uh=F@D*SE
%;lW#TO+JrU3Prk!PGapK=_jD%Sl29CNX&C1(DL4:V4r!"D4HF2EH-f6>,`8)nlg=@Kg%]_;_$:#$U(?W`jSKr?MdiXodohi](*Zt
%OS"d[2L^hT&?GmqV=LAEl6tbn/uKE/jA=(@o"hPAD)"u3.@'HFk[uB+Sm4R$A*^K71mJS=13Z8a>DS9'D<Lj(L;MDSm`%_SCQ]Lo
%,;0HgV%>]<0Z@G9W_g_ZTr^)P4PZ1U?@WY';r5H=9#9T^?,'RUpKF6<L/L'7^,KIk94iW5Ua#^iooSJ(+ba3g$>3!l4i'^n[4lC>
%iH4:omKRm5a-YS!hFEh$k3CKGjMK65*]'_7bipj'HH_m#1T/:;kqR7*ba]_1VoO8,->-)7RFC2Kj7IS3rd0^/k(e5,`iR=TXiOS*
%=2JhF5s)QcX:98s;d@m3R<B5OG+ZLONoD4)aH1<ApaVtCJ'N-q$iO6er3kaJhqjmo:#'e"Hk6#c7akjKjj-ug@ka.]SSdp`4*,<;
%9]E;=Fo(k1^6uoJeEi\D5GuNIWUZ$5288fHor7H`^JiqKGT*Eu%ie@MO;aaG]482)krr&+c217qY=JreGGN5s5uC`YN=VKi(ad"A
%6YcObpI]25XUkp,jg+XKH@!Wepp_V/^3;^LEoVMue*_8:h-G']HgfE8\af[tjMj.-gd#;#pSjYEII`l?:Qo.tmX<geg/[T?rd[B.
%54)Wfr4r1daGbWKRr6N0J%U'sG@GM^_%_e/(_QFeTGA)ZnF@<hk7C1D/*XB2Vs<fN)lrOW,fYC?<r<:NC@="4+s4]@4+H/Y]9;3W
%[$,,`NaS0Rgi]Ki=a%&SCBnnKf>MRMB5WpfDFL--V_D7km,iHq5-@o*gD#<j@U20$50s'f[>L$;bn]-<q`>s^)h<6%8]b2'Ms39G
%O01E+VD3%t)UsiGH)S@]d1,0_H9(lfc,rp\T[\,[\G_]eUHP%p`BM'#In'm]a9V*h+_TB?X0\;WU\;as2op&Q5'm$1KoX^;K2Ht>
%GAEh)AjRFqb/_c1^HOJoFnk&U-"hFE8MT=M4NqV3Ooj7sU\74HQhRjSgulNNj,e4gd%>I!I?AGOQ50Li1f_9KHe+P,BNOi,26M?A
%f1Oa@n)E%kXYmi,<P1R3qphP.dgub0Yk5$S-st_l)r#jCl'-P>1Cf;DaTp:4f<kY@gf:+FP%E1Rc12I<r0et&(.<^L0&Ka)`_\Q>
%r&^Ddm/e00n5#G2<KI;-lS4#5BgIq!2Ohr%S!IV>2<00ibJt9"7`)EaMs)=p'(jCuHR:)kZZq]j-?!i7Z951.@F7@n1bcY9eTTI'
%E$LRA.ji:D8(<n9@Zu2PLVgaJn&RN'dLIa(=<b'uG9*62+D'f+Ygs<F^9:Dd`+_F3cE2,n,0r440Nm7no2bZ:@<u&elgiI"GrEg)
%LS_0R5!JF4]s\uB1GS4g/b2^X$,c252.(JCOPU*.9KnKnN9&F,%HPi]3H^Cl.k@8p)Jen`qu*SCPan3&@j=tu,HWgL$1`94PN5\L
%Q]Kni27KUkVB$\]?*u?PlMQKeO]Ic6YqO\hj5rjM*WX3>h^kWn>['51Y)Osd$-d)XW;Z:%H%hdJmFnV9dP\-"@NE[!jJD9]7BY4Z
%'`!LP)(giqqX,/2Ztgc%KotA,Go,'rBW^sTD@kFKb!&LaCT1NB@a8hVYAUk0m11#Qjq.N\Hn`r+D3g)7dB,!rB'iMcmbOa`2MV/0
%p$ZtSrt%drhFk*QlMSoGEq+Y)I[\[R7a94%s#K0/k)fUQ&,FObGV^8pN.s9diQZ%\:M)Gr7i(]gdI?:ss3B$]#5#NN`S`>+@l8Gb
%2Vkr/`X_sc9rOT%]c7SY8<"Rq,D[rsn(RX4g_+#rZB>YVS[D-;/*T1Kl[b@LU`aK[E)qT1IFLAigEeL`M6Z-Zh>ghsm5`W\-,s!'
%/%<!3r:]iW&mXa([&H$>Z3kc\Md'hpUFHrs'?E/<jpN#)Btj[s'0<OB@qRW]R4kLI/;1]O@^.Yg(rp5H!uKCc!lRXfY#,q1"u2F@
%8X5Uj't=pHjHFAH`c`\d3f,$$ec6JE=$#$I)q%hJrj40#Qb<71W82F$^pW8WOb19S;7jenS\/uP56"e/"%G6aF;f-BONB2,S8/HY
%Q\T.>c,%X8S#jqFedK'D-FS:aTk2sY-DjpQ9MIP"5Vnu%_UHI,lYo.FY&Bf8/HO1`3d&cH.+h+GG6Pqem(<=#%YTK1)N'(^((2OT
%_H-bb9@;to#FJ>$F?TDOT9^6r70<\PA>lQa=*eb'k:.;g]KL;D^c6G:_U58]1!F4-,&L>bQblUqjg/[FmV=7[%Uk(m-4/X(ULj_.
%!m"FiCC2Y[$i+t2p"uW::#6Y9?ID+-PX^^PD3Xo%Np>0DjrQ85I")rTUZ85d]<6kt(#WmZ[sbfW(In't3O"m>eulD::5N*QSj$D0
%HSKI'E?$U02uSQb@3r0:[VFc;.O9#&!E)b%E,JEY%0o3:A>\5UHSH)s9NfP5_3B(.TqPpq_YNdtXTQQZ45(-e24MF*P!3aA-^9Yl
%(2_Qc#f7mHK]=_diXcJ7-kXUt^ISiR/hAmjg=&*SW>M^-1J+tSS@;VRIg?&=?tP[sr9I+p\^EeN>9[?*[4B,1-P+2lf$lO^YM6(4
%Z<^Q$`_=oMfbDV&\Ym4qHAI)t<=ae`L[qr%=4s`VjZ#42<e[;EX(#2N=JOTM%WIADd@)Qf-=]'kO`R%+NY;l]7*i#bS\mj:QtQsC
%c!d?cLD2(-Rjpe[%:LIJmWrGX8O5Fo0N#/&9]R7j1/sF^%Z[$jR2.-,pW^srjh:,>S(mo00N$I8-;'a76gY@ue5jITp+BdJ`Pa0e
%HdF0<;kc-R0YSC+@D\[*CJl6#i^../VLM6I-n8[_8i-edh>Ob%;dV%@,(^Y)OJnY$7/'Rrg270/204^iNY/t>(t"ubEYK`:e1$Df
%62<oGbd;@1@5j,W`AXm@&L12^TM[d$C$09h1FYeH0LG6"bu:no7b!385WdGMF9'^k+X39!Ks]f!PFPt+:+%oCr:]7u6=dsE;r89b
%*ure'F/Z(^8ZET3EH+h,#S@c=N*'gUnP/._S<tc8\%Y,u%u"NjZBs`uoGI8D@0)Fc:GiX2'&am\I=rB-Q>c75M[RU'2(7Ml!1=M0
%I]FAA<a(BnO,?Nc$cel?jfiZ,=(m1P-R03'V->\Ia29gWY<QISL^QD*rTXfWnJfCQ?`LX,hjTqo>95[.m[6%TmbcahnW]?Y_>fVr
%rP"5(m,.9n/,jsY)TDB\:-1j,CgnjR)T^mp=2'jG:*Fp%QNM'sn(Y_%!r"0Xfe1FX?1nhCdqn=JqdT!1,H[JLLlj%CU?O-Vg-A3M
%k@tS#o)+Br(@Hr?-#.67hc;CV>?KE*>8q6<3dSlg*RbItm"8+!agZ,pms>6skIO[PnB2#VSAPV(CU7<AS1?=NgL>TXAtS_^PGTJ^
%mlu2BFns;Tg#Ys-pa8j::07,X?U"JQX&o5.<rVKUo/HK[^]*c<o*9[@d3kPN^\Vr\350k5qW6_[PKT/^QIh%uYFdJOs)?^W0'$B3
%St)FFAOZU`jk6UsqR>87:D\KMlK2dM/T)GuY!8EKI;WQmMnG#+p65$aEUcZTaM7NAq8pm`5PX!`S(!^>s"&$"IT_-&e+iTIrklq,
%n%X6kIWLekb4>5'Iom]TOQL6o&*Q)McMRI_gD7VkOi(E7B81oV>k.jTs8+%p]R=VQnbmq0ofiCgpi>tV09:K@esO*3/gB3(nc'[$
%c't'dl^'X9NrO=T;0\F=e&f@9`VeQ:Ds,<q++NqIs1>r?ooafWLAp9/r8dK_ekY=FI<kF>`M['S'+Z#Ke'G?Ms(,=TrUd)c*r^P1
%T!oVfrUf3ng#YOA&b-r2H0[89h#+MIDXc)`s6TOAp"AU!<EGO5hjiM=HTl6&`M_U`>i0@EkEJbJIHT?4RQG0Oo1t)Oni8gUFE3Z^
%hPW-"q;Gm&hbQ/3O2\#H41dN95<CcOrq5r.2qM+qbDZj*f/uo32r?5`YHhJaNdm%/A1g(Ai[hiqrPNRQP*aP)b89sZ_[Wl\X`'gA
%fAGSo`@(M5\]N-]2gp/NP?J%<8Hm5FbP[71FT-G`r_4H3*lr[&p%hIu=M@sF5(EP(jnKYi[spWQ5,5M.*Kos>AXR2h>8lQdHAU,t
%Z7-V-`#oK4(:.p!/9DQ[G2j[Ys*S&'(Pu5pR:s@tIi\iEXniAgr?@<iB8aG!4rJ_b^N;<hq!>XL0fuRGSY,g,J))kDiuXP<.eC50
%<rCSGj"3W$IQ_TGZNV/q@_@+ipVHBFDXj%+o@C>F.9l$!/Di2:%HG,VbWZm&^6S(-s7W&JApS5om_&/"/4l0]lA-rL%DD1ap$1J`
%3bjXA`";Qc%S8JBIsB_:N,Sd0du)pCg\7^!^OG_4p$r=LfZSC@.K>3RgTD8]%J8rTm5#<r._dr-]3n]3-L4Ql?bL]4o*:gkDO:C;
%]QnXT*H4h&JbssnJjhD/nXm;XU3nH+ml"tTqpauRSdF5"dHpV'[BQud:]IIKiU<t:J,3`%q=X@BZ8g6N^GPDF=b]GO"Q=NH)r.Ul
%hB8HdA.)c\S<efTXl$G=Q'(3_n_aemrh8+e%qf1dao/tU>OWbJ38O<3^Ltai!N/!Yk"l"^T"`%]a?Qte%6fh35Fq^sFnNXZ^>!"=
%a8<EGggO@"j5o9E\T.%aa4eWs[]GTU<,8f6e,AH;g\oa`eN7X:hl2:dh`u]=XQd;+=&WX&i?$`r$0;uip/0R$.#cgnl[45Fp]._P
%?dI'U>b#)k^p1NHr.!Rnm'"j+IC->AG.U,C28RWagGB]=ZeS_S:.d&-Kfh5CQpcd(#M=g@?/AkW0CH/>p?jQd7$(!io0hY[kmE[J
%Ar_K5*=ID/]Fms1+=ls!EksZ]GI%\N"&niMW@lh+MpLhC6hJ2s)eSj1LV>I"RR:ZX`^Sn:7mCr7*6#Tu,dT/t%XPpEL\A.ujLBFj
%ql#"JfB7)*#5iadI/[`gphC,)@UFOIn+$8:6]eYmgP5VJeYu9WZls)[./B+2F`8J1ND"8Dl"Ta">+NlV?[&t"%S0.<0VR_1BCA!m
%>=XiudJJ:Al?<g$/HmDM9L+nMhG`:Z8sC`eU8dR\+8=H,I$"^JPhgJnAo:>H1M^a7'M9<.+sRbGkUs+8%1<PFdFm(VgV_j^\E)6l
%J/<[cibPn\rul(GUuUJr;VWF+KR"n'A.r\3GTmZ"BcOc"q_^Rmrt'S!_"E+NYt=pEZUTa<b[A!Zg^2ib,5EAbiVqAoq!d;"IgALX
%0's3G#Sm+X5&AXg#bL%IAHrk3;I?8O6A2;P&flIaj8;,t7:/'<'s;1RNYR9b<]kana!g"e)!\l"Sc0Q`UsB";#jQmQ,P_;PRcV;8
%'nl=2H/ZMn(C5Tlb?3_QKG4>cKbV9=<rP2B-3#nTr%'D3-?u4cn(pM9_NW\hX$-dp9fPA%L$..umJ?bGeb(R/pRgm,%a-jB8NV'M
%p;$FLZAinc(>@*dfa\D_9"/$P)`]JKR?^QT8$<cec7g"drW)YHs6u*L3\5]6WTj#P>.5.Dq+k;ifD"M6,KGGP&\_d<g4NGH)l\t[
%9"@0?-#K9FMg-@-MJYl#bXoSBAYi_R_j.*O'G<&SLP$'oh.Tk>NIFOHp8pSA\ABKj^VABLqt0?26$(q-34($qfD!4Vlm^@(8VqnC
%TkmBe;gW4=WkXunqn9jVV9pme]@`;(`57-`jC\ReJP\Pb$k([r3#;%[02X6-;i'Sim%/9DJ0&j`%\/Z@<IBF2eb',[Zp^PpP_>3G
%#(cO#3A1$al-iTgSC#Tal0u`:&J0[!$eiM<Wpj_17n2^@plQ]G7r^1#d+2jKTj`$=.if[m?lQ.t2)HGe$f8Hb$WF];?Wp-Jb^fm$
%rYUqhfY%*tOB<_K+epcoa<DYVpGg1cQ,!WRGq`U?\P5pDiYpH"a**7L_SJ@9%gu.7HGO!?po9D%,<3R6"#CdGAqo:ER&LpprP8W@
%k:lb&!QBIoH#C,3I.bqQV^&EJ/Fhb&2H)rP_da:q8>;IQ[a]+-30pV3g(.a^`"B"#0BdJ:CLOCIQ7&5ZJ4mPpUr?>*h]u)Nk!YoL
%"Ono3(nhOU`q5W6e0hZ(gjp;6f2@W@>P#cN?EOiO)D@%,Ku,.SE%G=d$VJJ@,m*G")9d(P?5lbXisTEb>-;XVpW?D3/1TMU_`M#K
%&b.j+W](J&,m?JG`,+i#NBaNd6B_%$W]AgmjLG/:g3.!XT-)\Ia1-E4U^r/5(do.bMIrOBa2LWkYjJE@C'ta!VouR4o[<4;X&6MN
%j!%1el%**a_H<9="!R9$la-516K49q^+8J8![>?lA2tprZlIsFTV$>?Eck68a#?XCa0dc,\lpJCL38kbCn3lVdl1O'Ules>V]2e!
%eN4Ai<e@=5&g7?X9=U4Dd6jmP9NoG,"UbL@#qgc;3#M+aY]P/^?<c?o$6^T!#]JK=kYPg2=Mof$@6nYuj`4P_J@'4PZ71Adp%Sd8
%G-oi;HbIiLdSQY2o/*TG&uS&ZD7]n,F-+.JX,*s086>98a-5Ii&m^QN5FN">)2u#4Z&64"&`#cEQi,VM/XS)ZAj+Qk(t7*:/rEB:
%cG#;N+Zb7S+q9du,JoA&E.itVD`G*V7eS]e'=_s>*%$WK#NemN]>d/t6(l=;GXbo:ODeZ[TCBb6^'2a/4psj`EImS`&pK24]HN=q
%R$4(/&;uOHk'4"8>][kE6m/S.mC4^c.\]jIQW:"T&K<B)>(crHJ0QXXUqW6)9n5$1k"$l8b^n,iA7-]8V8mZQZ"</JMhMDfWd,ga
%?P==b$*D.j\3<s;OtF?Q<i*e;&I7dl@U)[m>.2ZoZEO<*a^/%:W<Er#LqkA[M#.Fgf!.A>X$/Y;`6-H76iH/Rb9m`?>ciR]!RA$,
%,>/<SbuW"(K7TlGQ"Q\/*M1(p7UQa^2IeQ56f[9](>G4J+lgPM/#"U94FG6Eh-J36]1D'F&=V-4V'8S5b@UImIRcKh/pdR1(PN-l
%R*QKuXVM7XgJR&(9/cYnFB0+!!DoJ04@$00GG3Z\3d?OD0qiE35MESPp8LHi?oo&`9<2kb0]Ueo9c]+[3K%FoI==S2i=X-0ZST\]
%`^@Z)$K]E$^,_?'a-At[m8<m?go$]tL-=n2.8ZKU3G93IO-LdlI+MU6oqu[SoGdfP`A6-m6D[+%%J^tp#5!C]Vsn\L()0XSqJ\&\
%T>1CLe<D)I!*;Q^[1$;qV-c8?%')^'CW5?0Gc?+Eo.9%=d.N"DpRiJ<J]:.#+l?2eHqQ.,H$Z0EjCd@hn6so@rWb6\@VL@6XWj2b
%:l:[u,8J+6P%PA["dgJ7`h;)dDof0B?`9BD2BXC'eib"H&+KE[=QClG'-/^nr=@l>JlNXX.eN0p^.=g!00nNnQ+H!9[T6fP^BUSf
%KH)a+g+[csHZN]URmV-jD#K"fq9sT3QE=6gR,m'6iL!6,0XgppTE'f8,V)WZ2T5HKoI!u6j-ZM>?cXgbb8)#mPl;]A-[=F+/\AAA
%A,i@OLH4lI>g`EjqSq7K0EnO0"q_Q@B=)nPQ>iZ11<^7G_PlYVs6YSPlq"XZ2#TM/1mr'$nArpU9'A7M(b%+[\E2X7P)."m4)@J6
%'6lbTEgF'U_B#/_l"6mIqe"@5bNX)+$LOdJ\0m*/Zlpa9M%)<4'uG;63VFPm(lE^XaH9%-0(:PPaR8\A3.L@]U>9"N4-]%,U`ACC
%HSPQqpmfb$D82.B-p?2^iTj+R?PpUUrt"CZg[4,f7s6C_T)J/XfnK9n5-'r!r52jE;_.C1$G?qVqXd@gfj[4[n@NSSfr(MSQG!+=
%4a!b=g81^8&+@`1AULg1KC2F>7,p/9R6nBuchE+nrGpdlDNk/<Hb91"Eoi3D098g,la>TB"q--&[p:N4-Gl,A('u@Bs3Y9SU0/]-
%8l)j@\Qrp^HY5&11]HVKSf!uhCio)p/$qC]OUC2`gYW@ZU7'$r6g'A^W3$D6(`WidcMo8cWmPW^IK`C;B'H-irZsCT:$;Nl)_BPY
%AQl>:/"7fU3N7,pGrNLBd:i-dOt$BYUtFQLjk!=+_\8NS,T4?`l2TWYiQj$.V;H`-/YMLgKAj)];QnPd^A\Skhg[/7/p.L\H\2bR
%3W+"prL]/j>0u/D4o\ZZgo:;EDnt91$T*,6cSbaCclV)'EU[NrErkXND*M%EPH$h\5&C))d,290ER1uANuS#KY;,_-A6Ze.i)A#f
%DsR.)g=G_BPALVRg>!G:O5'MDXiqT-J)6W.q7#!_s/D/7pJl$QajWMjIF,,o@/ET$r7L7Pj&E7k4DFNCV+M*&It&!4JrJOC@NDY;
%DP9blemGYKi87kb=P;b/IYm53X`aC(]h5idHQ>,LFIMloWE/9pPh`S3Oa^2_]Vf(omlYeENCnQYY[,'krCH-bH\8BQ>J\BeV=QNa
%>j-8[mFiXenJ%D3FE+CU/dK(-X4R<LPO/joZ1)1Q]7n77YOGX33Gc-MX\a%%q50PqlISAc-!Z?:QdR@J_q7,BWmn,Z%B/0n:p5SI
%WBqn/DUmb8gN?]EmXPSbXc[.tg[&i6`1HT`BCN<d@&20;(7U#$H%`&4[R]\H7stZ]NBMhgqL$suN3rK8LEFS8'2=Aef)'FjdH0(h
%2LMETd@f5H1ch`?M+QrU)PpIUkmXd1rH*cW'(YY89;>X9BbK_o[[V]Fs1$"gFs>rN,HX:j(q`domF;RV^ADC-)R3qK>G9FoS7[%b
%2n1_<9Dc3@8A=YumRXcklP>AcHEA,)E?(]6rO%ABSLuaJ.s+MjgKtZ'X'?`X$)V^Rh/"ClPsW(6D@\#)03+utV,GSt>A&Y`]gi!G
%%*($tkPcDd)tdgJ:d;+iHM,Pp(*^G#^nRCU#el;$J1`kI'sQARh9'Z$qBlQS7]LmU6=e$d1.F<0?etNMK\oqMP=g80cm?VIiUCn=
%e)<N@DE7T2GFPEq*?&amFgORYJKq$%<Mo0'Xgf+nOtXqZ>d%HE8Tn-K"'P9J:Uik`[TR9cCEnLt6KaPeTAcP<SF]%<CiOqkl6Qn"
%hJ;gL`p!5H1*+ep=r"cWM(dE7K4<M`Fhcq$'`01Dr:'A]bWA1EI7;XdaT'NB.d\"s"8]#RnqirOO#H=EL#6Q)&lrJ[6DO1h-[XIC
%<3N_)':&75^IYOk&g>!M+/3fU"G6W[W5$a_E[NqZfK+X\qCH.RK<jif@soc[7f6`(ZqGa:)Qg?2q92Od@Y>0,7X0!bcmTjFq5pLC
%]lq4,1d(MA^%0QM%aARGA.MK8r+*CnYKZ^<%<Ibq]VdS7Qo5X@*hqSs+Mj"'Js)4gJ_'eQV;Z.&F^p.?2n"0C,k,>8,?\B^b7@20
%^ofM_"83h92>"pg4"0e$+P(/?pVIOXI-fl\K;^VH$ghOWSnToOI47X3\5,'['>'#1eLV1SQGr$!0j^r(?OIGC@4pfN<j[;@nb"27
%KE>mhX)T."KjMlfm9^7gQd1B[p*\$$*kp7*&9G.gM\,LO:*m3L+8kX>X_>=P][cZ?>AQh#/RM90l!N6@G'9GAY1B?=Im.7%ErR7u
%MlUAq/[nuaJg$lYpb2!9gIKrKBSF8P(>;"4^I9WIeu1LAS%[<(a.)J:pi#$uL,QE*el/pR`t-EUV,k;%ql`]goF9".O\1VYG>q$V
%r]"$;CUCgGYX?,s-3!P]BFm5U#0dE,M!l5t9mm!.OQB*4p=OWQ$%KOOAfHKda-Ni.43h13GE(nTGi\2=heopMdAl>aiVL-pW2oO(
%D-Ug6W-K2a>N]2s`$us>p+L*[3_D3Bj"B9QWQC4Zr?NF8F.q.`XAObM)u/4'Ye$G@;mk#4Qg:bs[2C\l5B6(/^HVZ_H$E\8);EAk
%fCA[FM_u?QDqaE77!Qo`]XUepkA)?+7((sNP>[mUXr7(rCt)'-Ct$JG#Eo&$s(^8]eGSL`QWhpG8Q!33Xj:.I_V^>(s/=h2rTf/<
%<2k?(n2nl_oOq2Fq&R6m=KBn$G2A!7d5IP54[_'KEi&`:FJ?<[f,/Pu^)a^`rcujk)6?btN7tHP)`b)9(V/C;EN_rBIO492%\^(/
%Y?0AcMYNfNc`,T0Ye"P;O0!DJV"jgXVG4R;Ik_HN,dL6c>TgcDU`l'3P2Z>cU&F:^3ohB1U&TR`3D.%5)g\a_b4I%ljsN1S^clkN
%DWkjdner%6hIcM]nikUsXsmJ[f(b9s,NG%qIh1quF9bke\$B`'>*01:DL]W@kT4jT^6g.>&3h88?#Fk@2:skT$B7M2ZDin0k>l!o
%htbPBcn0U(dSF_7(#3Hsr`>$M9FKM>r"Cs_I=D);I!dkB7&3"N%(0cWb.XENPaXhEkZ#:6?q]PK#OG;<P(7`cS^6[]g--7oQ$28E
%&aM>AfKr,:opNdr*=O<6Ggap,[6K>%SA+d"l/QDRj_#$^)tuqlm.5rml1dWpHL3dqP?K*<<u=\+I&TSAR10B?=mfp]OX3PQX[aR,
%8F*=d4d(%,cB]T@n6*=JRP)r9LL8:BkgnXeCOSs?II#;4lX@7$Vs"7A[*\bXAYEBhT"4^gm?ha2RG49)P<W4KIFHJ7X[VbJj5h5O
%M/MY"FX#b'Y&TgN[[Y5fMM@n]n11D]T[e6H0?85\\N;Oeh&U6o0bQX%8C^&$-;W&o>J?FI_Nt!HLl#4bQL+j2gSt)&jk?/e=Zk=F
%Q?.b:p1ilg\i7(`/FUVgm;jd9l#%OiQ4=P`TU+?Eq85G,lojGW2g/DTr:*9.2Y3#e`Fc#;A$P:c;&\$[G-_F'%/u<bM2=XtBZm7p
%`nU8GT2`:\Fo#P+M#J:b2c>LTL0i9g',l+PZeMr,qI+,rJ'C0A[^P_l1B3e`r8i)!HCu5?Y=_I_[D]g,r?J4/5>7,In<Kf!pfsYf
%AleG;Su12.MC7TOQW^[64l2QNfluYXq0dA2VJDb#,(AXMHC=Qu6AL"lYkbK5FJ\qj?Vg4X6M=jTD&PVQkb#X`M5OgPJ(;.;BPl1E
%*Akj6X1,-Za=GqiaqjU"BPo-F9?*OYoiWZM\8[hZ^NClDg!m)GHr&X3MrRI^RHi;a6tW@[gbI@sT+2=V'UVOR`L]J0bLmPsn`qLe
%iQOLbj,_=5GWR)1G3r/h(G;mZ2R\]NI!T(f$Y_r`nNT]\ORTVl83$KeV1FcDNjf<VA#$j4gcYbeS`&80eZ#*$K"ogP`hQ0LdD8!E
%Aa=TF@)Yg'3]^F<SX]Sf]ofn=3_g`_f-aMM`A*]\1`_'n]:7!F]rYfnRhrCMW>kYpH<D`D-f-IkW<c!'L-5OO@H7\$b*+Jsak,Zb
%0=R,!3fnB[FI')3DD'1FpNGrBgNlH9ATr4mdM_M=rqL!nAU>d_\(5CHK;HT];Y"?^d7Dk1bIHu6?>nESR7_*tAZr,E<+9SAq.4QD
%3p3NpC]!b[HM3Z63h$B-U,Ch$mTbcPM4W%7WJ09o3jViCR\Jb=ogIV-e\-g6;N%*GPAHSom(&J@(4n;fZqYW12NoN%f[F(T/#jO[
%]=fnb85Btar^(uh;dHnQ19%t#[J,>3'`EZPq2a1\N4fcA,9JWu>2FXe`A6U/0lK,oMlgoAZ-lK:YaO2!dFc\B`ER/%.@=[Yf@6WD
%7XCtNn_7/`]'3FKaRb,^>bX%Gki5GH@.Mr\Cio5k.5j)VfoM,N\RKAAOVCTo*dEcuW?l=)2SEG3Nm2*1R^(P:j`kV0BJ^Hn5J'"8
%/_jm/A+AQq9Pj7([MlJY&!(1C7oa$D=EcmioM/uARp=X,an`3RR'Q280gDr+`.FMk)-].]h8P[Qr6=iclK#L5XfZF^`7E78+(L.^
%4VpaCc":GLl`p=hG-X7Pb8n;C@[e%5S(Q:XCFlp#cqDB%$PW9>rUm^hf\rX]MB*Fq[FiUPSf9c!/l#nh^$!eq7<:X3]=M?t_DF1f
%V^ck6<548QjLt@kna-#r<k`7,a/\7/h:PZ4d#G_4>+;eKV9?>Mo,taZHRkZ%`ObYMF#:=*k`(V1;L>1&WNjRml)0HgdCJn\27h/&
%GSmj^$Ho3)^%Y.JN-`fCgS=cIeF_tq;WDA2D5sfqRV6'BNM`>.:I]DL47;=`m8eXWpLa#)oUrk[NZQf5)Pa4dZi'$`70D?kl_C6L
%-aEQri[[`/?/?3h[8S"%Ff]^Ig,el80MQcV</us0[)^36h=[\NR9K-.CuId"NnM^S5NY[$F(>2bTej.JYZr2A*'[eiAbNSD`\pVo
%gt;&jbNda=c&k)RIpQCt],[<.)S6G^ULT"q6@5g)Gk*oh/9[V!R^'kPqJ!#eR=#tr4]nnJ:X,dZa62kKT#RnoS`auGG5=6@gt]Z(
%YO/]+j6;Lc288<#(WQ43cFrc.q9J:#H$j=9r+>KcE4iD3G!00fgNa]eH0Fn?>MY;66u9EC9%-I-?L7,Ubk7iN-LC[t@mY@&Et^)$
%PA:g\X*QP+nT=C[Z+%&#1NB/KM2BF'm`!+MrT.mjr*5F!ch@s*'<Q$6FYZuM\<BiEjeKrmjD/PZ<MRa$98E66A>5B[VJ.A9jOqi>
%hSi,t1-[e63dGkT;4K1>20\Vria#><1?\2LhSRM4e7@`i@;;LAGVS<Oh8Z@YO-X^];EITsC?sfR4EYnT[Q\h?Rr1sVoq(lSWq(1J
%l?.=:I]E:.=GJf)>$Ht\a/d%qZjc$Do]id?S^-A`0;eJ77o&4d-^3"<2hf\%H+UIG>u+UD\sqCkSXE)M8i)Ci\\f;m]=Tu-Ib0G&
%CqO=?1PbLeo$#'rqL%G!);CRYXlV:^bZiotAg]?PF0kDYl`jT<RsCK/hfN4;2kBK]m*T@M0RMKSgs)#BF>Nel]=jg'2Xdj4AnE*&
%kCha*T3L.l/^@oKXQnU?I&9)O^3@tr.u\Wuk+;>Fpfr%8=OAtse+[@OH'-k8T3k`7?I*7G\_?sIWA?G^H$ec!QQD[`r+kiaHssCE
%Ip#m@=IWMk9+/jqjSmp0_G7eu>WD=mS:u`fo=]jEq!lg"n+"PXc_[f=ic;>,O!gN&QmTOg2LQW2gKb\X(NrP4j7Ve/I;sA`=]nuh
%4t\JajY:[.h:oSH4BUl0McZh2GDjD"hW!;K?.#+4:9I^El.Cp%mM0cnG5#t"3d])@>K%i-ZPk[*4g?lX9@MPerlh+MH8>)&D\]?:
%qm<>U?*r'T]<QX+-77Sa8Kh-4k/:FZ>8KBc]1[,u)rD4gb)$aL]44db9]i/089a448UCuGcCmjI41E%N_Kk!do\Ipd",j$r(VAol
%GBH>K]%`QmU[H+fGh9'&Nd'9=1Z%Za?=pfUE3;[DNHBK`4'at9nOa1MQM3:%X5rV`C0g]0_ktYS(/JK?puG`sldL"P(0jV7fc+"m
%@&BHHL"j,l\PQpSi^K-eburRG_q=;rSGOh+Rk9+;ST=\0[H2hO[ZbqG`XWV*&=&g(+>nGq$BDDf/&=SaS0[!!R9uDb>okRLj[NaU
%^=G6//h9`"V-8=*6dmTIn'miMDL*P:SB4HIQLgO!h<"5'p=+,l@%FK'dpq6,,5kbN3IE;nXVC]&R?b8He\g[hqIOtqD72R5\mK\3
%Xko\0n#Wt+4_JV\A#I#KROR*rmI/8:Xkd@OJHaV.[FXF8_F"*1I;Q`I]7/,\4^9Z$jtl>j<Zt!b*c*ASP001bS4l_s''7`3<\eiB
%qiZ%.f<o.tI/0-lIlsn]T;N#lWMu/Lk>ZEMHVNn7XENk][5!t^[7bQt9fg!Ql_K_RG:e6km;Ai&`Jq4JpdMBV;$Zuhbk==bT"."6
%8nM6;HRILcagG;1jj24_:N'^aCi/n=1,j@TgrV-$4pALqb0+M%GgPho`0P"92nT=oDI[Ho+4G&]:6bH1hWAG(RoZbWhTQtJ?T'R/
%Z>5r5Zh;A@q>AOl<cVg7H0b+6Php]r2VQnA4gDc8<Z.C]506%FDEj[leomo$Xue_G=*J:=a-AtVb-T[TSbCg)];tZ-QZ..EVNS9t
%:M8;*HS]j3Ci?GA9(1k;CLZ`m[2dqn;ia`O8X[9K5PN1kpKq!>1'd?_h"!bnc4UB6UV6JU\*V;fTm/&G*H&":oFC?%GMT%HD7+TK
%kF//9#Jp$89lj:)P;C8.MhfmR](<"`chtcTj4F7Ym?>N3jQXe+ic4MLmU2oWO,`#?jo,,R9)`dDqB5gjXVO]F94qb4WU$+Oe#S\N
%d:k\Wr,UrUXkIE7:MY;ie]I1Lq+U(lV.n5=O4D_N.t;%#]Nngd?HCCGkDOu'l/diDQbCi/gr$Y5bhSd*05n%JIhaK`W`Mhh]B`Po
%q5*6(CNa=ag9,U2YBQMW]Bf#nEU@@M[1p5E:XlObDMkR(gXp@jP,>cqhHqbhSfXHhhDXtJFlsP$f\Jj[Wd7`FZ`!Qfe'm[^f!MRI
%9,CBF%l<WSmigMk?QSX<];<C><q3&kSiAeb>U9kU$GERZUZ1k7iF28XI!/V.cPDR7rdOU#VCA'Xm-@PjB<+jpo8h5ZUQX.[^Re`W
%<8;?6WuS9KV(201no<45Hn/2-c7aLoQYOB_FG.!nG]5E`s7k#V`h&]q`q%U;ip58rrMA>Q\Ml=f[A23IlWReJ(QRad4=k>4TA7Z(
%5.;TB<aUI#HMQYRP>j3+k>n:jP!/C%QT_tO3dU>-p6o)DH%!@>\a@DdF>27d:>%Rcd\=/'S6,5uF*l@rDa"of<a*@$(i(.`gcr07
%F0TSNk08BXoA7d%$D[!U'<ebVn_:DDrN+`:bY1ugs*&;k7Xl'(B"40$IEpoLn69J-=7=^Doh+d\-DI+:3GB12k>*p*VHru[-^B2[
%^[F%0UHdWP)Ps?Dqli(cd.+:+8Z>PdKs=g8maKd?Qq!Xh,PLu-?#iS?&PU^R<N.'@g==?D)(+h,Q9V3kVQXu8Sneh)m?,KUOhZ8b
%nl\EcUccl^mSCEJ7[Zg=?"P/b&@CiV.t0^cMmd&>a>_55E!c>`U"0"=,qje,oMU=1LG'FYD>T#M^X-#"XOd1783:XW.s/AcQ/YrK
%o$9"<P^f]T.O0XjAYf3&))4Wh,FqFC=8"^#s*Uh'7QL_Bdn$/e!c$$EK*ObBQD-\NJ(1)&UNu^dZ13t*%M)85G'(KmJU_V37Tss"
%g2)^Iau+W@!R&iB52rEt>!r$'M(mBU#Yj(rTL&Gskr(7mWA7B3g8`"\]qG9$Nk/Vm;8$#Y"m):]km7aSC1Oi[@5+(?fuus6e>$#&
%X+LT+3[;>X$XQ5\J&/rE=4#$bG-1F9g!^K=O!A:?hpFN&ElOoAIY$M!Q,c%XXoIrI;UL]CT:>#Y/bTL?*YoeI>=2sa?T-0<CTl,#
%Ist]8[bbdXR\cp*o<j`)ZKU&I*srZG4dc"coql*=^V7%)WoHS#fG#a;_^=p.GNB'Xba:3"#^9ph+J]As>pNbBT>S12*f*4(0u1XA
%c<?FNk&3KN@\B1pI<TFc:npHO8;B;+g's,3`C(p]:J#Ura&\Ui=KC$L=naS8r/3GIJ)W;gY93X!lT.VO5?->-4o3TZZ^gdbqm,6O
%]C>\VN;FXUR5o8'Kdhcpmb:=j&c6)6mgmQr83M'?iE'^j5sW09"@!U9j,'F9hVYLDK$`Mu/)4m(80$N^oihm'X%]1snq0#/T,&+5
%NBC8gj@FQY.fX.F3qd^\(FQP=if_f`e<s0orH483hpM4j.`8@eJLH!X;c-c`rmFi^ONp'6eE.CeT?uiE;S-'_FE\,-=2(eYrTS(<
%GH(m]rHrP@qLNsuI,qH\0C3HVb:@Zbq5<(bYu.IMJ&R\$\%lE'$L^KmRR^0g\L7-LpuK+Eo;16+S&uA6s%n^Pjm#Te7829KFH7Su
%^PIbC7IGLZT\I58Kh0_bUYFM)ku-DGN5-W#L/d:/o9aakIubM"0C$pA]7oFqP-7+3>mq4ml&XQ2Vu$MXY8hGllN`X*F"?FS;p0lQ
%q/'d8?m1eKDnJ7c4Z6d(\_-iP<4Z+dGK/b/AlapD,u-DMp>#>;h4(CW7(ZMu\ZFHT-Z%BTZ`Hpa3V,4KN@1%\ij4K,q,Sljfb'-!
%9k&B,edbo$G>jQl8%XTm[rRY7XfdpEnbCVoLUhTOQSbDYj<g2BeODLhI%,/[(?Ugac.u-8l_OD7[jK.A\VrV!SpIP8S^TE`WjQ.1
%FL6$&<7T[Loh@36Nh:__CUDpGD.;TQGFM_"`*_[_o+SgmoL?A`dkJLV%n)@Mp%DYLXR]i"RX47rT@B,hKTV&39Zc.>9<>3jSa1i?
%d@Kpcj'@jtRXE"uB.UIK5E@0f(<.8=&Jp.AO/<5TVrp\*P'8aRIWFnD=-=6BjBQGLrW*7pVn$oG2nO7A4nc6f.MZ:Z;f+-kh0m^M
%gX]h"[;4e59=;D!EiM=.5./b/]BLVc:F=u'JXOIIp(IqWjmq)A,2"A=^!<bJ/MF-US(66>U$Ilt+0q-am[OmOe5Sl-4'$X+Q<l*R
%OmTj4l%Sq*Wich=oc>`0-PG[GQ*KrII,Ntb1p_<Va4=5$GrN3Q<k_lQ`N`VgGHESc>?[5s@j&t&4I8PITP?(O1*[SDK:\?P/c0^-
%0=+b_REWY4Y1f74iX^5q$9+YmXQ&H0bJ29'j]9T$/*GS+h**uoIF+aG9<go*Hst:%X_$ZaB)Q`"%!94pZ<Vk8^LM$P=%qWpUqCXb
%C6dN@0B%)Y"FGIf(p,8?_n9)$F3j'ifsiQ9jDuc<cTKNbWf&rWfg9+^4=,o`7k:'sqmBu6WROW`NgKI&H/X8WP3Va]N&m6-Z54&;
%]fq`=o+#d+h901_^E.<3L.&XiAu[6318C)R/^2G@N@gc<.UckV-@9[WSYb,"m9HCAIQDV<p<M9X9"nAB9;:A2r*66>gqCbjnCFA5
%%oK0[MkP*s0t5l+c=Q9ab1cQTkar<bV?^:g`F`R>h]5GR\%B>7fR-36#jOeB?aO<nTl.htMq=-\;:R`<._4fcekGp3*a`K:f#hg+
%dVdB8Q,D/6r^o":qWQSf8D\:>b]>9B%loI4:->lUX9qE)BWCnVDm)7EK=fW>/m[<,/UOBtcDA^fQ`NbCTu0@"/m$@(K?N]Nl;_RT
%5IUE+&ZCA%0.I3pNL,J/c#pD1Kb7@.l+Hh3^$j^@kbn7E7Vf@J"EVcSr]?W$DfqN!FKJK*X?%0#&&lcFf&g@IbE\pG=-Dh.))0b#
%h!4U`Fu\gJ%I#^)r]7;G]@";F^Eu_t[PNiLe`iSFTK9J0PPMoSA)]&S<QJbMUC3N&A^8HToJ+e:c8YJdDGi)m&E.t%[e0,K):$$L
%;D2]@4aB2u9=f.d.X>9;bspG.'fJVu::]ZbBf;R<\NFTafP.#+_Zojl]UCrRn%RoN+VQUmRAhO2mY4EPE@uH"'78_uO90<!8@6%h
%]>'(OJ-IYoQ7(+/QH\V`1HV3^XV)h=c:Pr-`okoRV8Id?,rE$)1,]q9PC-tTB6,6*P4`G^YIp@FfnOC:hb-Y=lJ#>ZoXZ(LWq+bW
%ZYnd(\>TlrpQ"Y#h.b<*N/_JhbkPJthFR)^nC&:q]"MiYMG*:/r,d7u&&Wt8E$sJ+@JD\`%@Q@Mr2Vs5'hA&b.X1@-O9R84LJ"^#
%jHR-83>V?jXXopB5XV;0+IW46.C@eN%&Bf;KYq:FqTE73pK6Q)=O&(nM&1a!cp119)!k5j)9W)5npi=`BS1#DN;$GkU-G-4IgqNp
%+]!h)b+4jg=5M$p!1UPS<i6P_G[*Gt,N4;Qg7Mt'\si^(f=n*M0,*@d-"r`k`6b'*YJK/0&Ot;)7TOeAK3ro&rmVm>7GoSBLnJOU
%1#BBMd>R.ZqYS^I%Xp:*p*k@d!cOb%DLZ!qIX08MAiF)VCK9hg,q-^Ql<r4WI./"[hh`mYdmrH`]:JZCZ8=\`qXAORK>.98GI*%2
%)$jW'Dh^fp2IKj/$tLVJ&Xhb[&eFkS7'ioH9oa58j8LO>,E)>_Bc-/D!T:7JptBB7O>kdXd6G[19G<&cQ2V3)b%'\j1C*iA-:*-b
%8tO#&Us>SQ@gI]t,C*OBg`_GoVtJ>a,kGY1NEj?/?Vol=Z#NQQnYTm9A*G".XQ8f]q:W]lFVpUkSm?/e[V]G8iaYA=L%f"TZlKu%
%EJ&FLa=>M)Ji>caJ7^/TVoU6U\c+A>;Ti.R\YSgP^<KNln<W2rI%Y3Ok-h+l$hI@WZa9Yn7]/i6=-CU`PLJSaGO%+J\%=U_r7?6I
%&PTRKR,`F'&>&,([]]4?ab+^#O?FQCFhJ:DL;Ho7B>](UGT^b3FF'HV2quB@mIonaB*0Emc.fA]cM8'"BX>.rM3j4I6)AFG_HiQR
%;goDKLDKFK6]:En$?eGHciTskFa@9Fa]+<^-]>CMCN?D\De\Tt4(@jYqe56;:l2'+7S<hQ`TD7bIZZb6AY.6:e$Wi!\6OHQGU1mb
%eg@c*4XbGXDIR_r"1QBs\0pt(_,+NQ1YR=Zi#ub1M1`4[j20$OT&IanHQWR]?n2+3GF;d=XfX2nH4?Wa-rbI8mZ6N8d5#fIPR`J<
%9EL[5)+0]u=7a/bdE"qoME*$81qO:Zi,H#_^gdos%*&R7V$8T<SMY2_4I:E)?OJV.Q`<YTHWF6X_qfZ(mSRf_k$8C*3%Z(Er,@n"
%T$D27f$7jF9KB.BOi(=hKKq&m]9UL)YN/@<mVZ[XEnNqN5thEbI`MR@oAbb\^+/MfViD6#[%#7jI?Os#>tuZ+p.rtSR@/*jLB5^[
%-S>#>.iqm+42obnP('$n&6CNX:&=*$[PYJ%EIT)$f57&!(uIoum*1[QIom]smh2o]GGuC`)B8UJT.mL8b-,pq2J!s9^Dc0%&/9RK
%qd2LoEM3$#6JRG?c)mTQhSL0$.^?X-3D(IW;f$^JKB1-Dq3bp&g(oOo=MT#d,-4Q66j8NNjZc#.XZprS9^1Jk<%Lab=.h;=Sa:dJ
%/gcl[VrEi7RdfU;bLPJ.F#&5K\>1".l;m="iQuU'(](`>IB!DF[!JlXrJGO[Ia`Zm`mN1_;2h'>,in]_C^HN"bS8mUacBmN=UE%A
%&Ib5"3NOms1>\:`>J%P=rA`jkA-4%9mRG,S[<qql-j=J=jE<0i5;"VYQ&`T'b0/1;,Aj`C`.AB![q74uGd3bE;*%][I&bsb!2U^B
%\rFq6;5`TX*\>&s]cO8kX:;]bqek\lk?JV1O#u%*=]p`OYQ=KLU#c"$S"EeDJ#b/&2iE`RV2JT#.':7,L`[=nLP?ONRD4uU4F"f9
%S#4anL%F+5dI:m2;e[9=ZB$0LG24mg6tRg]2`d=5S^hrUAGOfsZhIM\2H.k5O<Dio2tqVi09NomQ4E4:n%:'4c$Z%++mg2,Wm9W'
%=Yda]J34#D+.'_tSS0YZ^#\/BipBY2cE@l2cY#P5LtAEhe*8.Ic0d-n/N9T<qrO`ppToab[o]<r@gk;D.YBs9?G3.ACd#f*c*MZt
%,;R/4bE'CijJJE_be(XC`SE+#(o)"iZ0;.?<;k@I'%=KuagIstbJ\EOYWm$NZt%fd;ro)YB>89%9pWr`inML#<solr\=1R:/+P!S
%cP5_Fh&l5?1&k9I/0,_\R:oH/o7<8'FCV_#ED=<6fh3CL'5ns1A?:utXmU<E9=]n2>aH6Gl2C8-HJ`S(TtO;R[F020X)r`VEmI2K
%"82-&@Ur06UYPM8qJNN_PNs+lfaoo6m'\.*GK,isbi@?XX-QrZ1c\.8ftgM=*Q2XA8e\j]]eVB-E=XC'aVG\r>/P6g?CRRZ*'_R$
%O%l4m%d.`8GL,(XV_(--FJG<WVIjh9@qfl,\PD;YPHc9s=l8M*]5*R5L,X:`8e-?aq1;6ta)^G*/btE`/S#*-RJFMI:G_;/"u")7
%5,j.oa2!*o^!\f;esB*=(CGtpAel<Vq7bTQEE`?Xr?\_Sf"s.=Wnss,58g5ZHC=&9VqfJCe'6D^GNtOgCAbi?;5WA44O)(#5(tB;
%AlJbAU'^_,c1_rEP+==b+Kg=4(e_:ZgX",L*d3`/QZbAElfucE3E(A9k(c\oBPl4ooFG7L#MN:\jQ=@D(D5@"fnWVCF8O5F9JtJ*
%B8X%'M.$(O]ol%>)l&ojIE+0P!?;@tmACb=1-7QJMqWq"7je\TXBhCB/L?HJ6`Q_RP9J"#b10a;/L;cJ?=p67TD5(:lA%0KS_IX&
%ep(e>CD;W.GET<gh`JKp-*6Mt&\_,d`Fe:MMK;S@.1dajc3)2K\fVgAR@Tqs!N=/A]C>SG1%FZ;cer4l2nemQ%%_A1a)[Tc]p%5>
%b9];m??o4(W@N08Pf>eZT*B`\*s<q@a]LSqs(s)`(?.-B:P2]3)b;aA:og\h;:rlpP4!GW1csMBhEn-mn*st3k-(-X,f'kT?VbaK
%Rh@O-r24&W;qkjdeiV"9e%oiW[/*O.RJZkIiO8m8ceDgu#m0<:151pORuN8a>G%;FV&*k$h9Fag$REaF5N/A4p7Z&,0,$Qp>)=s%
%R[e<YAnU6PGt79*72h"DT33dJK$p&Ia-58UdCi"j($d'Q4?kl_o078!e<IGbe_KfB7M)CQZg?)a)#d?-SePC/*Dd)'qNuRLoq*H=
%<+<3,eecY`^#<\NSX"e14utYsT(Gds7g%eZ1L%&j%b\,:.kS"YEt<U2_:N#0_9rZ'?0T&nmb$\Z%il*DBJ,UV`TH="&+/qOkI9-]
%_q&MdF`&sDZhp7.nO_=+08SDk80,LXd38Ye@BV@=eU&M$k3O%tj'2D/,L+C'\NP(tS*[O4.CYY<:l#2D8Ee>n?Di3LVt"Rdp&'3)
%aD@-&\s_sMko@uI\+Id@Z<hceO"&hSgkpeaDrZ*8'>J_b1[!>6\F$OV\8OQV1j`"VZh/!&Q1K1&CMd?qXLo4)E&ZjdPk%KEGK!nV
%iD.%;e"$Ejr)JuT<\(/*21WV\9MAPAf46BaVDHcEesPglFB<PXp%[P91pssk8"rOe<\<.PS_unMmQGEWR>+((Jm1dW;cCrV52TL:
%qAYtXl4D%agF?GR3\qSIR@Wa"[nLApDKJ-#*>(EDA@ANjdNgc0EiF:;q5`?!2k]AMF#/$t]j8]*VCME#'0XJ.@['S(2]S!g:+SO'
%1u\AP`g*12aVOKio?<sg=aR'gqFW<g?[]ho<L+e$QH=^C#97<PT<;8PEll3eCMC!$CCXtjV0oV%j%Ln-Gfe1\(/&D]a]>]KeZEXP
%V9)G,8G5i"YZ6DH')M8*CG:aT_^h"%fNcX3H:^<W4<c^pC*AdV,koBSk%@RFb:<t?D0\)$,:U6g?G8NM#18me%!jb!nn)p@ZcSN"
%163$tBc?'Q%&OL1:6W`Ch$:La2Y.OjXF]N`eB2ZPr\bLd^>a9sdUdfg286$jBkqXngR7%ijd<u(D0+b.^@f8KZS+dT@)#J[P?D-:
%FhWqVPO5-iF`N;h8R_)#V0G`5Pc?^3mXhK?jQU)uO[Snb4uZnG;fmG04J1;e<NYI+FQ8Z=cebZn[Lg!+?+'<Bn:"kd>&NorZ&u"D
%Ds'+-oP*=>B`=6WXE&cb(N8+UGHPQU!=PQr?n,CGNSaI9Rnc.dk-p[up[`#jms!5&.%b@j1ZcLV4es0lE`4qbpP0O?+.so=P0LJ]
%,"b<71:O[7Z([r]JLXdU/tD;<:bWT"+-CKSQ^c]raDJZbj!KYVcH"t5mC=r)3d&+tSh1]?b?U?P0%LL,F`\8G^P=&C16a#u<JfhL
%KjHO,<qd;rQ73AP>UUkea\$HT3^&?VSQno@hk$]E@k2J1DBEd#ncC33`*t\EWK+kO$"@b*p,qE4B).^Q6)ddF2Ar$5GhJih/rU$r
%kA=Dh-CtE;g$)],)RoRKF0h^PN&A>r@$C&ud^(ic%'QE?%%J(lOD^VnS`+@.gWea!!FLWH6uUlRDkt'r=WBBR_TNlJ#cfXD$l,at
%S/tp!d^=LJPddXH]mg&D3lECgNi974pNgt_d-*]gq1%rVEink0mr[TdB!:`Qm@n=I.CH5D[s(UJD)GWhn9NRJlT`Rb/7A8qrU7tE
%qoJ%*51>Aur?LlM=Y<MLa+)bep<]_Q<A9$.3suR+j7NE./cOeFVRcAU4YsCu?t:P;h9S9HFh3h]jQP1he6;=W\u4\grMS#Id!L.X
%4GeP?rqVWTlJ[L#rm%b;'n8CcT9JDUY^;tGo`q<>^+kZjCjZ5S5:k,&"s3W([akC7q8MgtD4?!#-J1OQChmR"jSIFG.K>&"8.M>T
%'&TQf,Cu"thf_Lr%Erf\+#X6u[M+T.F^ms6pN*-?%l`fAqBJG,UMa)FpUIM6l12<gD-,FTIu)mb-%GF=Es'6c_mZ(#J#D/sV#Do'
%+\$djD9&D(pm--^3]%4Amo9IDj!bGU@o&+(`-l2'L=j?Q(ub`V*$?$U)U!/+05`6#&5^<!Ye1Rg$0$NtqZOaIV6hhpTto?j4`4aC
%MFK!PFWB,1ldIU/5Agd:-:%KZ#T,O=h"I\7j/BKW4W;JZ8(rgQd#eNPD+Voim'sq%Y+kr=cq;6)Hp>gEBZZQoOdrp+I)5bD4!(mQ
%D2@=O,&g!OTd=29`#'s8,9LohB$<=Dn:1_=#!P!Q30QX5i+)E[3^07[OX_D#L$jTrLXo#r`I3,`*Y@=/-D_r$Ih$I,i;.FT!7%A\
%GD-+D,]sNC>)=>fdL-??`I0*>GRG-+]ab*5,U&_%.Y2a!'MV:1_%>5kD;MnCLWm<(,UtO+S@Bq0/2a(@H'0==5T37OGRuPp#d:U(
%oM\N?ooru2#t6+-/&qbcBjJTL5CLJ0`Yl%]XTX,E>WTT,8TbaUWq8`qJngcNPr"p#=3*NjCnpgu"1u6]G*BA:1#NUE'D62\`cIR(
%!bF/,"o(bORTLV&&T\mG)89Mh;Ca2`97>.:['u87n3G-:KSJE[kfhm9(f*)s"_\=5#pFOWi;s$$5/Zf6>#M/);Au.&;8[(@/3OW,
%#P3+dchUh;WgZe%cdkas*EV^aLZC7ME,(I#C)DH:L=qo<8P=ZUquJ,%$ANd`YodhLBW;5e?k-9N5SqYKX+<0n-@iH0LV$a4pR(Y(
%#dg8XNhmmOnZ*_U`@('_Mt!5Rer^k;guGU?#c+4c;P**q^TS>mY&Hp=!9-T.R[Pa2C/QNg)N=_tiJt8P"bIDL-k`bQn2rB.+MqPP
%^n_*`E3)XQ?]<T%f9\+R;?]N_JB3a@9Vk!Y=oiW=*U4(uYk17&C]b5-:dX3b$J^aS,R`.W*L@gGQo)Heq+OB^'&.r&7'-Hp8.aLG
%cUrf?Y#qQK5s3">'lI8CKoc98aP+Ln`75?=)<i)B\hE]8#CWUShae8-;j(B9L+(Kt?q/R0j@BF_+aML@9L.#1MUtWtiNm^4fJ8R3
%g9c@3JQVd^,EV!moS`nuS]n/U#RC_ZR"tp_dK&8@/Yu?ZRt/n'?9M"V7,VWJi/!ALB/Cq#/HSHu+F6']7HJ9JisEolAn5Ut1Y3d4
%B\fYC-@Y=McZ^ARWJ"iV=(P$cNJ%b@^XK*X+0gT1rZZKbP[I,Y_C/Mj6%"Ke5#;Ha`(E4qC%!S)(C(3QUi$qR%<8TW%=rXELb#kO
%;QsG!CMQ@Cj]5!(JhX@Ud1BM2S!QmEC*pm[i':aOrjF'pQE[`Q,=Hc$+1\`m.WFCCJ/,NUP*<^Hpa#Y,KCXC5=bYTeU;oJ8?ct]:
%LD-9leCOb5pn(q[TE5RDZ#U/rYtZa@R>OC3"@a,fA"p5'boB@Y8Q;PS80YkoD><!7).aQE`o.u,IY85%CBHfJ'07b5O3gI]ig:%_
%+&N_eak1</(b.o;C&k:Ud+pJX)&U!N)_NIkAd=b@*+`ho92)FSUu[AI.S,K\Zgjq9,aRUtH?e1qS.`cuJQD-Q#u`PQ]Od.+h=#P%
%daecV$Tu[^&dVo##s=\W8mnpQiPI?ch$-"eNSbo4]Fi'k>cfJ,Qpn)^?oOm(4BeoE,-eaioFq$B!P:OQf?T]N92-Zt'r1#05N$/C
%h>n2)oHTu%6cdsaU&Q=$V*-0%Ui&ZWX!')MJVF;DpIQn/BgIaiYQTB.Ld=i#_5<=RnV-Gs)*QS]m7i=$L+BZ[Q9qn36oT!QnW"8_
%(,WPig'f.D/486$Zf=O;_RCN0,f5188.ZT'$R4M:0n@mYN=!`nH@7*HJlKN-&_[DDHk7Xb/qE(:%n6iOYmFg@[WNKH":ti"L:R[)
%RfH!,A.LWb6c+t?VX#ajIlf>-(*YuY@J1M?V&_`$;Ac,3g9WB#3=R\G0@=8OfRk+VJX!O-nJ+,/rFRmdASF$[]=+trNY-U%K_0>:
%AS3.6R`pdm^5._3XOC9uC)?A#>Up3q).qQM;"SslrJ!@e+X1M@a$rLe0dISW-p!c)#$<4-rF6/U%Mc/,\UGWt!EPjf!/Fm5D?aQN
%6&r;cD+5)8RJoJ?B%)[*m3,Vo@A\RI`.gV_2Q7Gh?kI2Xb)"g]'h7,S^N-SSm16fi`$,c'n/dLkEe&N@;K3pbMf1De[QUabLqcn+
%[n)%j*Io*Gl4tI<,RKBUNoapbbD+J@4s-1&URk#^*EYWfK"e(*9K#f>:o'\!hQpi<9S,J#*%0f*V7dfN^Jar-JaI3#kdmi=OaRMB
%(IgU!AlB4(T[]!hjgf=__-J%[G]58q&ep-3TWm3jV&m;A^shR?#sCC>Xs&/hg2jM$:Knjf,QjOuYp,k&42;:SGZq&+qoEC%CcodO
%#e5j.\fWW)jUe[PC`h\>%n&5Y8mRu9^d&U43LUR5'Ks>^7LHYjB<h%:T:&8C&naKY#\&(1YtW4hpt?H1G=?L-?NiKVE@HDUH-\06
%'7oc-_V;ebMd9MMOTX]a_uUUmcD1QsTd(^FYdOKI"@@Hu6tJ%$c/_te`g@rjJ@B@$`stTXYn:54?[KVtj/[_IltYrGDBf&02>leK
%iA3PUb.-*@\,=T]pK^:9A/p**EO.Mf8n344n*>Gl=,c0J>Fq-V=!1ZoLc"[:"bHAG8W<QJ,\263`<OQu)$[[?UR;Dh,]b-7-]SJg
%#L=&EeFnM[qi[7^)3<JXr=6+99M##D'8A9j;Apt9"n^ciB\uSWr<LZr&>kaZ$lKkBJRi"Cr[b&)i'9opgI3Q0FOKD<repb?(n$s5
%\N'ViEbXSh&fD!aKK\m;aaZWdd#pHF!g*6_,Cm:[EI:40K`;.1$Fh;uAgA>Dk\,>lh_tS-YQCK:-O=`u1]gA]^6AaDD#c)>N]&XN
%%Y,%e:oKe4]C.JmL]&P+L&&V_U]KE#+;\`2Oe<PQLdTpl#`dE"j`*(sdkrDD.%DFnTaK+:5fBD8K#HBMIR&9+!\%AC^]]IK4A%jM
%`7I$XLLrG)3Wp^^69N$kZ[MIuekpb\!_Ebba9o5iUS*VmJb00R)=?/\;W/FSk[El>9F6:^8g(#M>6_!Y#[7Xj8P(mNLaR<qNsm!q
%Ua97T&K3G@)%$LgTS;cR58V>bA!6ZW&3a!!3s$N0]9kdH-H0N>'soL>B=(nV&N2q6$F4OP+cK"03A<pkSN;p]35,l#!>Mc&50%A\
%^s-]Q"pE>]e>TgDC5T];)58&KV[pa<k[qb2(h7VOl$N-Fa-E)6^kOheJ:=/Qh-jAY5VsY=!-3)o&.1?Q`'H'e#^I],UG-FL^njJU
%$D7nn($lll"p(]46l,p(+c.PM7^hREC39ZPn;2rH9I(I8DFVH"/O?l`;Xd5/=It?s*6f]jT`n=#Ti5%*/u5Y'+:!Ed-O=/o*G82Z
%'rTU:bd,T=!%>Z.&MI<!&;$!tG7>e.VOrWkXC5Q=!@Or3Z4[F6+!I6OLf:FDKHR6!>7hh/'U:GR$"efk+E@t].O<tE9-p&DbSW;j
%hD.KcJ53HR"q"m,!:_Vd@qFW24H?HU.tC0($:Ygn`%D.KT":?^=geUqn@$GT45^h(41;&"FF[]>K&]4>!CH'R0uT.^M-AaD'Wu*7
%)%j+D_FWi^>;mdPd^i6&h_`G[0UIj9e(/gM5Yluc"3k0]JOP5',"'9K"[%u"OQl')j6_HkD9EQ<V+CGKemtESGbE,J3%20Valn=6
%66hh%"X\m5[0qi]4@Z<RP<lp7O/dV@iNO>EH(=tPZ9YF@fnN<R+FD0`3T+J@`eK(VQ7''B6:%e)fGcLWq+GBjI-NuLh_RrnDu[:B
%`1YHY`W>$r+j"TFRBWr:QnsCpCsJ+RAoi\OQ+u1G\Se'k4u,<PBOQUGK9_!?Z^%:/T$Tb?RM!9@8UqR%F[\Eg,U:WjVLfh^@0MQB
%YbP8LEV'k,AqVi\6MSDP<mV#g_9%ebo3'Mc7mMq[KO-eq![C")Q0*Q+.ff)OT)djpf>8Q%P&8JD2?cZ7ULU&D@5*3JrK.qjFg2A4
%YWZrRD-^ruc7l";@"DH,Z(P\7@E=PH7d(l.M6]H0%Z:Ef!Zqu1<]2nF$8dA[e]YtO'ABl;YEd\!",.ft)].,X[Y=W6Qb*D\h"nNU
%Z[QR#G"p%Tn<@Q"*`5e8H8($@Z5Ad7d$iRo*NaTYEdWTi="!`E6$mF4OIZdo2tLI:+]gciX),k.<nW$;C'97>'/UrG@^?,t9EH:b
%02!7NiMHN27pG=C+dI_KCf2=CK^cWZmGX/<ZaGDc@fco>6lNq!DQ!fsD96n,=HS\R!W)sCoh``4_+\<-eukUiG_\JQ_kJ8n1)f@W
%2QM7u+u,D0pF?]0.)?m,5WGh8We$3$[#UpF?EglFOn`HG<5;$$:U"'?fI_?OCpt83Cq#AV1&uJN6aPmkl\.?LRPT]BB8GS@"-Jne
%)F4+Y+*J'?m;oj&ZQuLiA8_LbJNY5D)LtI(ZX,$/SYH8s&oXKB&O`_e]m>7Q^(b5$(^ZM+h-L,M;4:nZ^VIM8Nis0>`<#\R8(r_\
%60*+>Dl5;;ZFu>IUkHPoU^9cBh89p-,"ZA;g)Qn$i@D/XbSCmn95"P;B+>@>fk5Dd6Jt"P[e?s-@@Tf.I,abL>$[1@YN)sI-t*QK
%pVd%?n(%S4[BiHia^rZ@a)ZJS9A=cNr.Dg^VBbW&XarHRiY`??1'HPfY6pE)DPP'tP!'V+\$"b1/*6:6LtpG+,>#=2E1L:*;kXB8
%Fh[o:#Jmbn"<**geT^Gg'^sgk*Q>jcL8EGgZnUpTfcbmKe/[GYdaub%1]p&s6,4&\c&R&-$5kL/,_m*9M6lM]U':nn4u-?0LN[[o
%`BK>Yd2GoCj?Or*BgF+<"YWE$6+mMA#^Y8NrSW>p4_IQt.CLD\`XD@!\7D4e*A`:<rB#dL?i!#?X)J\mjgaZ,#V!1C='2)<MR44`
%'%RDI=t)EYcrsJcYpQRVoc:+6iP8i7;QW!u[rIYdpLH*3^c-mkh)bO(HuA7m>9;?e[XbfiRFm*E)<gF;Dcte4+l?%1DMrp*&gM)o
%]E7Z-h9Z75NmJ/69(t\"L\E#U4d'i^<glX7XqN.8GUo^9KN\N+c/8VR#<rhFoRL3,k)m^/LTRc6,B;A"<*0,WUWr$'O*uI*&@e!5
%":fT\f=6cY"'iZK$Hd0EC3E<N/o]%P5*?8[De7=^qGDNgLekiLf\0%4%Vo1P*1S,/38MtWOsNH@$2W@s[-(ukpb#<@(nb"$I+Vg&
%Y<%bV-#0]^#iOk0^`I7+='Aa?DM-M@?s?M2522.E'a&hfegN^WmfIC(@&=$*2@0hc`@;<OkNB)<>YN%#QgHG?5$sb=_U<uNH)lLI
%kee8<NB6\:.s1pFeI^jffGCOa;4R'.p5iBWYC[`%O'Ak5dJ[H"&9FVPM'oZ(r9**.>cZRD/$K$FBl+ApjnR%53k=2n"`2%?RuK1R
%-pI^MdER1kUjk?l1g?93:;p[!h_r`,QfCOCa&&?SNb]MR3CLd"/cZ$'2%SH;2I$i_E&*b,jE9-7_QJt5<.$GBYU-R4=+Z8TKo6jr
%'Y(Z=Ap)B7!oi-GRlQrI*%6FfUCT),-!a/4S)N"OK5;6EacVW7%@n%BN[Ju6c`77r3qm6:m+hi*BkA6<9F02Zn.K9hrGj0%h1Ga[
%L</@^#U0_M)0(NffJ++A%-+\q?slH1(+38dET,%N(2=t(j+6\fZl(s`Ed6id48cQ_h2#*"<&QV<6\aY[:=n/2JQ[cA"iQ,g%reJ@
%[3?JKS_Z_&?IDH.oT==EJjAV^Yn_4.'ROe(arYDmgRuopUs10WAg4TLJKos)2HrU@0q/ERhj1$)#@_Q\IE9nORQ.!+CuH#$m/Zqt
%U"sYS``X\n&ge@R=iN'=KN-\'O:1=<j=t;Sfq?7;ZQ/#4+hd1YQ\LqXab_$pe<')h]Og)42AjLU,@LbYnH*F5Lbu]mSDtcDaG-(Q
%)Nl9d7qk5@e3SY`/WIl"9:V2cIS"l-']WE#:3ftJ#8(a8;\J:6NRU&kHRGWr3nXET`\AoZa&[c5fu&C7D4QD0)29jE8>+lngSi!^
%FdNmdZsebI:.8R$AidGRJ^1Y_LnuegEnD*L^JQ-&rdi`HB6JYh0f5mbla@;G?"cfnq!kbiiWOXZJFMDNnH_.TH8WY5C_mXs>0:?V
%H"!^E-[FW$>P`$K2mK`D%(3-s!X)CfJ<6e\Bh4ekLZ@PHmF)XLX3dL/R7[b^Pbmt1(@2V1+N<c-X%QJQ'X_L:oqX]k!^gCJp'8^7
%<]UCt_8O-O$$[j4XkJ3D7GAiUP0]A/*+O4S?,4IESJrQ*A#KAr.4+$EkeeUo1]#<3Sre7)A742TO-CJ$U@m%Fdp#AfpBn$^iZPN2
%g.f"\XX@p*Sat_O`[7.ak0V%*r\!p&k^s1Pol^cn4;L/4%%ki$.6,mBQUfcDamZJNM%jHE@"JeM80OtGc2?j??Q6O0b8-+0L+1E%
%3N1(X/tEd])X)4;b7G-PI*P(\^qWNLf=qB_@*]^(>P`Taa%6qg6ST=[@_lD]L^@+Ta"<@'3/q?-_]*(75XiI9q1.LLne*?G_h(*X
%'kWSEa4#;nM=?&/aT,5;=EQXdN6e<ppcQRkV&i5M(u;W7VCZ(u[#k](I3I7`7fM!0qAlh6!-p^g9BBj0$"6RD/^(Z\Y&aDpO6#J>
%LY;@n&S9lnf)V$^h!c*.T.luLkIhJ5D%Q&!+')5Di.6H::Pqu4O$ZTri(-h?DAYg3(@";`aai;O&QKJI`,Qmr!(aEu@-J=/99U`R
%9sRJX)d++or%u,)A)i#g$53M"".Xo5%`AR30PWC/VFn*6ok`guK%Rf>:Js(1$d5%gqiIO;)\djuBPB6T^<k+E*K2-CAOd2<Yc#_o
%MmeJbNB0qj`Pr[!+\[(+eu;J1i&i$]SCMhXV/:7(Q;4p*YQU!.g4Iut7[@RD+YX^=*0ZqE`TPSKa+)+aH_:uoJVhX5kAZD"M!H6K
%MLR4rb+Jq'jg_6)p=ftFOcRGA8r1Bm^3Wb:gi(FTcl':;57&>#_g)\:7kL[=A>]oK3J#IH.E=CsE)hUqdnLTV8tZZ]6O"r4kS:o=
%FtW6U:B\ljP/i>D!H^4)2b;UgC#B]\2@q#6h1g=Xiso8$YFR<-EjcJ`p'0LaTbAU1punCQbG5.u@foFs$ZcDW;q,:``8WqD5p<4k
%3d^!W;E^P0#b\VkSl)O!Ug=+2+?BlWqc?^H$FZ9@(J0oFhrK4mU,*R<Gt[F18tfKI%!Z$R8YcD_?.gXG$P./!8<@E;[gba*0[CQ.
%Ef*5cJCB=_^)Or[Af8ZDrBIVuW"\,GE3M2,\m@8@dA]Ri4OOPD5k(X&,]WtK4L5#-oibrhZrB]`;[%SOO%jt]Dk%qdLR?7tM2.jZ
%\d5'S'J<$mP:K=7@8c3WQk2/R1`e^mS?+MMa7[?f3O[b\$Cstq2q-q:>XXO79i@]t5*V"f+&AHdS*:Ws6nn]b$5m1kL+-uJUbs:%
%_sT-]2][I5ERP+gJPuQrMip'-p>%F//@7:>Zs<oZPT/go:`"*/^u&]*%n@uQo<PM_(`#rr8f&$5HsY`>cb[[m&k8,dnY'tCSO3qV
%]BKUP37Z"c^`.K?[O@A;Ba6[TA:)>*JDfDq9H,6%nU`RZnDYIZ6KJPkhA07G:m,\Md1/40?UD-QI7&`qqE!SDgJYZH!gcGMHC[7s
%RODOJ=>c9[$d;JHj)H!-C]*k1M\9o74NIcZ,sa_6WcJfSjW.U9F."mG+O]F#K+%n16*ltNfE^-!E":>tqT+"#V5=4;+tG:@K"^_;
%I>A74qNfEfp`9c4^_X:/G]H!NN8T;C^gSiN:1.bole@$ll@^^K74ia70R>-HB7XKpdcXPYbmFq1B=K1hLRDOE5V^[o/76G4')"^9
%mgJs-H<la%;fFHBP:s]\4Fnp+L]JZRd&S-l46L[%YXps-/YP!tTnkfp#'-@F8M#saeW=4HQja7I]aQ9bLZm2l<cnt)OZ>kd+E7k'
%:09CrQ2]]_JZCZ,!V:;pa"`i2qK`[@_1r6X8k0,WJEVdm2`d%iiEM-c5K[R2d/LO&kec2Lc;Yp=NB:h]WX<&XU0Jd?ZUi++c7P6f
%ol.2@.uSb?TE<)6qKBcs/XidTeoZ3EG8t"MY][kubkHLm'g"Yj#plE3h]Y<m$Dck#)gD<uI7$`u\M\,VE-I$W56].p\cEV^E'$<-
%M2PT>6nDWD^`?]+rHL$I#`=h?!@*Eq7uht%W7_/qfRh;&/#D4@Yc`8E3De;K8*bVk?c"rT0HmriPqkHP34XcRm/Z,TKkWon!$Yj&
%#pKK#cZWS'nPmTp-u)2i);i4%NJo!cK`?bg"9gFNKQ^bg2A!*-HGZ;/D1Kkubq><"ERFq#<3]hdbTJ4fd:ZGeRbMes\GQLka)gm-
%!+@M^llHqs6(52Vo/IU1=EZ"B$/uFKDLaJ<E*^?$76]=nbFiUgKi`o=I!i0`Es]=r$\OT>8;ko'F81fK@L)8Y_/EDK2NoP'Af.QT
%%Il7Xod1*`V#Z5mf>[Uu]&XZB+n13BLH`,1I%]FQnOW/B9H]s^8$P.O]`Fp:eRtc-.9>5T_f\kp*!&DTI+(9Yi_-$IO72'L(IM"a
%JMjYQs00I=4HW6EXX5p[Z?UDOY19/9(<0_MJ.ssUh,oK0f]PLoYDG?G?GX$P')?iJHPB,ZB*':ep/"uq"6WX0I0796O4:X`1_9,j
%BsG2:^td4<Iq@l%G4(-l%V$gg:,Dq_TqfTIWP3.C-_S@r2nGg^3BePD,Kg4t#O0cm0ojQM@=Jb[+U@DS&B!M^NfJP\8KenA$<%7G
%BhV[<$,&K'h]PB=6DMY]/(cZMj-)eX>]9h/0k$_L/?ZlW-DM<qk\SViae[o7@QfgjAXa%Y&<52W#B52jjllP"_8g]4[[#!8HKADG
%"b<LH/D+4]k&eh`/Qu`ieiTg4`F13YZb"<#)]Y>WSa>%FP1n^434u1rBC-UN42DY^Srj_'L'ol#\4+e0UBS,.@'Epa@?$W7_,H)*
%oo''-a+bf`5/i'G'FGQ`-84AO:l!B]KJ)#EDVp';&JnitdtV304hA.)B`M4g!tb*O8Zp/91J3r;*7nA_pDqT3L4<<a8k-IT`'n&A
%%>LPE<LZnsR@ral3)XSY>\$D,Tt&icLnurDnVir5C\%;^_rIaIa_"ZOE5_:.!X_X%d77,3gSj0]l&IZ:XIt+>;PJ]gEY0?FhgjO&
%:P#R/LAFJ/HsES)5=_h<TD]1k!j41`cTrJf<Vh/3\56F\5r7f$NB&Uh^oK.N7^`Zja*rcbp9D^6>.\j,4:Zm)%?MX&jnOAPcq'qu
%!qaNu%4h'@V(!4t77446LVc<uL<iY++>F/6lE`-tLg0KdZ+tcP"sP-;\AF>O"P)IENT#5]%G1B.qG6QY+RO$P)@8B[!\_R&1dlTX
%>4MTCB1h;?,G3fnkd"QG2;?jC#<3KOICG>c7N9'TAF-ph;Zc@=+OXb!.!D_7mcjmlU7Rbn(l-0)6I3ksO;Hk'&VA@SFL;@i2AbGN
%+Bu.p--a,?1aCO(Zlb$+#/O;p%.X!(.e(8:?glc+Wh3)BR3Eb.*(dkj`;U(u@S_u2>\N>$A+./*_,/`tS8+B@[W#k#Pr/WP;/hub
%o1KM5=HROg+\MA%XcJQVKmoWobq)sAG-`JOO)(82GiOrGNeJTb0c_:Z#`_);_ta/ZM6ASs$&85b!mQ'!PI.ib$;V/,=k]q=MK23K
%k^3m0IZ#B6\@u,1]Ds-q-63R%_dn>;`X*27[P69!CK&^05`A^Lp^TX*)+2(#8FIoWrFP($r*0RA$uh`q/%fVi^.@8S?$o?UM;q6`
%i:RSWQrZAY5(mFA_Vb`[Bb-7P#g&n_R\SgA#T;3Ri*Md`,aV[<g/#^OFQOOoeFETk><7;eS>>6_84'/3)o+po#YXD1c4ReY-j!q+
%,]`aQVR2!05ut/0AIB/iE8FR2D2$0lnk$>Qne!gS=htDd(dA=Z1Zdn[irIg&Yo&';Ee\PE)oBRj:(V?q'F^[!!80C;_T?8Ci^a[%
%Mm+_e`WVO?YPgrkfsq2do8u(8*X=a+P.%:c\W.G;=.+\I^*C__&A!5q&AaAjlV1p3!HBs3%Vlm5__EkbEK\5UTAXs`qf,jg6G%hQ
%d6RBlMPE%r%;1Z192:?(@AL]iG#R!V6!4MXQiI[n6YHp@BnIpPW,mE<7I*9B@fG1BGs'_e/sQU%o9-V_a#X9'\)BKf]N]!<IcLWI
%Vd*^7E1^,8[qmQoS1DC*EQ@cI(hcM\(n]/o:1,RO1`]iX0u"=mO^eTM1Z3:@`.uc/5.Dj\1sEqn0HB:r<XL_b2dla7_&?pI@<=#B
%P*^a6df-a0?.7"*@j,FLV4"s\*"E=^#_)f*rGb"u"pDuIJ-_[k0LV=4+J3"Ud+4K*?J.\9'e"$0\^L@9%-Pbr%^@&3KJQ:X]G+f=
%IMQ;]^f;gbp*\qUPs.Ebj6.'!ij)lU35^``o6IBh6YXjW6OlGZ#.e'7^f`=X(L0"0*u60a&2leTn9,7FICSA9J<&%YI%ZGojncsj
%1^ls6K,b.%;DSUN:#\LuZrQ"Tn[,G0HspnAkWk9&-h7"d%-`KIN37_0>eB7*a6U!K`n*kC[5#-)C`ORP8M`Q<iY42lXG970Ls.d>
%?!$jk%9IV(Mho1"91NC9@1H3Ef4VY\#:Wfh4f,@[Qa?j,q10#@q6X&gf/Vo?,V_Old_7b>$D:kK(>%f]3"-AD!;`/D+446fb=]F3
%aYN^Ucd"rrKN!h<1GJ=+%CWgk%CnV<M&YQE1V42rdMQ%je.QUF;(^**RtFGhM[PNc:GNb[L8]h[-c4AJ%o/Ql8PVXa3m8LKBuk'\
%c[*a0B2+qQcO[$hT[IhnNSL2/lRH1Aa0Rt%/>:!T.2g-Z4pNg@\\[gNnBGMTcIod[ENFHS+XA>JYhWnJI`f_WHTC^aH7&RGNMJ."
%E9mp5-`ARK[c4#7>Gn(:Hj8"p,Y/eik(`PONkYB$^9KY%$Y*b;!d263X*!tcP\$:dVV]0%7X#@&F<K0n]>KF6/TWn+4:;5a4qJ:R
%)]E2E(t6P-a%jbeqFNUl1eaY5>m"?&$cIZ"TB=o/PW01>pa2icrB-S*/EAi34WV;p_bm(Dgh]-GcYbWWr,RN=Y]UGEhp!*V0SGg@
%,l&9$g.[p?YJHO^A&c#OHtaIIOG>>=-A;gMLF46a#i]h0&FIQ#P4$Ce6Ol!>6O#mec.McWs6ZQt^42#7idBUlr''rPY"T*X&=k7o
%HqX'0^EZ)S#P7Nns'KVUZQi\;*9THc^;JdNP!h]_r%=fI"UH4n/[Q;uV#_l-QP>1-"MMLs54cjqlDu<\FO.+nGFkn"ET26<O1Erq
%O'Ts#X1nSPpYUXA'S5DhoVg@]csI>Y3h$>kX4%2q9<'$s3(,5eE\stt)#47,@9t<4FI`5I;:OdPnqFIIh_X^P`;A"s,@\d!_7>md
%j6-@"10%1Qk%oh&:.,O/WK*.<'M"XHM>(4Fd0,,'E,1#t'?qSPa1c[[!<@^3c\p"K[H4>q$rVq!Ft?broT5&J@R[%B.ru*X>:m+j
%\m0b?\<=CeQ),2+DJGru)hNrX7;!$=0?;6k).R:rB/j#f1lp96atj1V1U!jaSAoII/@o`TlY>9*B[Q!sKMUk^+%Q<pZ=NKHd%&mj
%:I?1Da2-7'OOAR"-">t4hP[-kQ`Z=lVFDhP\"Dq1c36_W\hpQs[cchn[Er&&Wtd-X%bO>5FM,5Pjgc=A(Q9"Y_].iD7@&>:FQK*5
%;PHWRpl/Re]C^,/gp1d7[\b*Np&:tV44_\%()Q3\/[/U;k1_g3$dEY9>E)JkSPHG*jHNkM`EJSE=f_c.Bdud!'Pl$bq`Cgu;>HA:
%n,CfD^R7_@CFh=`ID(8r!].%I((Vr&Z?20m.TX,lT]UlYN\O7]MrR\;OJ\;snZI45HM'X"=F(0tBscjSP$IbB)F!)*6LP$]FY,Fa
%1Pn$8E^Pd@@5_78gK0DHA<m$(ResosG88YGcBu>qgR[$C9t$]/NJ<pIIWUm4HS2Tt\-eNU+2i"AJVk'Vf#`B&4&FoV%/8-tq<4l5
%Cs?<XMag1J2E>a(&BZc6\EG"O=aS6VD1Ib%Xbbb%SrCTceIeX?S"MV9mUmK<0uCR#%T`WgZE3Fp(8;3gRc*@_%<knHW#re)(G5`7
%fmfI5_;S6DIG(Ki?UpeaeF'45Xdgob^1Cp`]U[t\9CrD;[_WJ(pEH4EWRT-AJT,b#7FV8.hVTRj,AX:%0o+_>WcGQ=]WanG1@HZ#
%V7dRjA77Ak,SB;F\kpbF;:M'/'VJn[!6N@knbd^oBBNnkDRJR30ZN4Qefh@ObEh_+N+]Y%h>AikOuofeY&#J\,*D:GD@kD?cT!(?
%Fa-u3DCTD]7#H67Q`'BQNSDhe$<tI$0(NXF,QP*0US,$+@U_!0<0,30%C_?DWGC].%Y$%'&50G1AkS7ne]GB/@/!0W1uXT(>1Z2=
%?1k_TWHoNd3nmK7/R4<iD,(ni]8S:SK`[:.'-p49J4GhTc)c7Z7$W7_%OFSj)tT)GpOojZiXD]>b".-aPhb\maGrukC>VXD@\;Uc
%d;lWb+3os8D+"AaC=R!4OOCjtTCi:RZ^cbYO:bHiQL@sf;edZZ)_N&0Hq#G;bqo(i&3mpolKf/Mi9)cG72UPG^]^dRg!)6HG6Zu[
%$E&Yh9.,1SC*lAQG;"Q:W)BOb)8rCg%WL3/WNBc8L0Pc(KFUq0?MbkVgMW3mTCrW!,U/c5g$VdATG[F]5Y2.]]$X2IiMq9"CrAql
%Ogu.60gnE!+=Nl6gokMH/DC5bOb*1!"a(Jdr#Uo1.)Q'&"Dk)V%o^4ql2+g!g]\QQ6/^tPp64V80M8'L=naP7koL/jTK<rdN^_98
%di`HE4f-p+6MaV\BTD7>'[?C?q#G\?hfPE6!7oFjcGPbJCuY>&HUO[#I+:2Zg[Aa4<+rGO&fqM]5(t,<=7h$1%1;OODmeK0<&/cI
%9a&]*&$Z\j5EJh.F_)OpEN]dV%]G?'/#G\/)]f2/*N!qlJ@##BF!"r1U*a.4aT_*8IeaD;F5[[Ci+saC?^:d,<O?kUjpq\AiE6F,
%F1QuaDBDAUTGr%P=DqPI6NbCE?REu?$V!,82Go1MPo`T+LE:*iUTJQ!p8hJl.gr'05Zt02n?Olh:\oO=)X3r2MX@=$]c%/3`]!L,
%',(pB<Yu;Ms7#uZ*9`.8XuH*Y#UA8CVHbRE7_&?_%NXVep@$9(M(\#uXf'u.r^7U4M&9B/e^c1\l'lkqDNun)M<I7r/![6rb[u)X
%:6m8((So`RR28prHjofj*0,?bN5;I<ppr/i@'l3+M$K!,j74S/;_>.>]k(:[JFgubnD_;urY&)9CiNo%^]72/<0a6@LPFdtkU[Ul
%=\hdEnQp+C0D(fS"V2OJC^X]PIH8UWk];%+FWJP,Kk*9A'`,8eK5>MJ=8&,E]=G$sh`EpO>=kCRq[mO:hU,0A6%k8^=&KaM=^H_m
%ZR8Y&Ba@jTOZX\-)uKPX?-]q:8Kn0OdBAIa:X6;Do5*_RcgbpoT"Col'^I"sY8X&O4E8#HSFiCEbUqjIA7l^+!:PcrSaL:WS'%2f
%>Wul&j[d^@*_1OP4.U0E-j\u\+DbXVlkM-`(tHujc84$=gQ?I(^$WjdYPtPJH@NN^DTlltc%6ZUld.pI^r,K,IeFquk,Vs_[e(a-
%7+?tdKbG%AjgSPa(rInS=*6DDm&&qg#@<RHeIV$LhA_Dm*BUbbX`os*Ea?8A8Z,agr0i#h+LhC`WMaic*D(mp^;F3U:8)=kiMI!N
%S<YSdj!"e)NMo2L+C#V%c_Io)Spue!Y$)OPm-r@DpH31bDu4Z?s37^%A,NCndJ8O_M<rrPL?Qkuf$:8%SFs\e8l5shC)RY2g!ZKj
%"Moh%(_F\eo`D%Pb,M\1r)i]I@L9\f&R^R'O-./YT0.>^)[C"tnOMLiam2Q7q7BW8a.bX4U+4OEna#V':_5iJm-iFsF3LE364ONB
%<TgGfcPqj#dWajj<X4(@"U4fE1XW5&8)C2'`c5o!g9@AKn.2=o_qUPh&_BfRr0#Ebg8a_-*#=Se:1X"#36L,076l6C1QpGfop)9t
%<_ThT6o"<qH_)GTGfRQ&OApNg^nWGo`H-n9lpc8a\?G-eonsWr*j8)nNOh0ipu^&G`AQ<.p!m:QLh%XJq.8R@<Q-)n>7&)q301jr
%*+Mda\me8&!o(V8F]j_t`p0rG$b_Krr8jI.DtdpZR5*5u1I),hTgS\3OS/4.hH*gdIDEAsMDN/>cV>Hb$GZB+Z^k)"Dr)$9^NZnI
%D>9^^*__%mQ#]`-&4-r#VtNEV-.19U>5Xsa)@W<&X,L_/1MKVhd$1D2mn)]Xn?K6jOaurO4;'A1V%cilCs,K=N)(m+U^dmnMC\NA
%P)L?9A)VAOCl/)6=\hU:F51FV7JJI)2[ST;E)8J<l]KU)3:=JcR$hku:f@IA\K.l$I1Y;V_u8UHX#F?Y'q0V>5^YS`"J\j/@"Fg-
%,DjXn+Yo;r5tfW`UM5m()3c<'\I<!))t*j#nW;'g:)8j&Qlf<`=XJ?J;d]kSW-8?PpH2*BTm6="jN?dF(5,$^:,^I*8PS%M78Mpr
%2ojf5&rf?a<me?_opOV<,4`!ZTk6neaZ-bhE$SjHk$IuB*.i9EbfTY0q-g.R'2"u=h$Z%(b5$/ngAg^M^AVA$5L+tNkhIb'c;3nH
%!7=T;/`D"N#j(U@_R-t&IilRSn&MZ6rqWUDq%nNZcO]_kqEpE9HM@`W+#S_gR/YLB_u%QF-Nrtui"WALd4&U$H+_RB(&D('EAA5c
%E^F9PHS5kYk*+qVdK7KlWLg.EUOZq"A2I.L8*T>p61C)6fuH)MmY#P[Z>=a0CZ_T`UlMo;(qIp:oh[okl1NuC`l0Vm/FZnpUA>Mo
%3nNlSXk[l:!`'@f!`>Ltd2PGgp#j=cb4spr4N@OW%rmb"lZSB78<O*9W2c.\??_b`VW-,2+'[*M%L,'jl$fR*C8j]r8po"kNiWNq
%;GAuV3e8mp&hC=Gc`7&S]RLM9Yi$mblH$`j*!)`un[`3oPo)*JY[$EPC:3/;L@g"D5[:jc7c>!2s(_!1&K,$6\Yg=VFjBN4\b8UU
%(CP35YU00GnPk#_kK\D54K48s1,mrY":-rMTh@E=gt^ZSYDf=Sn4]&d@NO"_ps()HN]HO<[+=k4m)%$r%XXU/'PSm0cSu?n_=(`a
%>Z!tK3E=U)mIj;u)#W]_Ia^(]AkO@ES&h&Cc5r5@%n-nG&f:SU+r3XN-rS/bf@A[iX\89=<i!DP94(gBfcmSa092<r0=^N/m>FOW
%n["Hs+FtIQVP1>TaFa3]4J?1E8S^&f>anbGen,tIc#ehN8f"d-W6"A=mNdmJpu0^bFEL>--u/JnY/S_ajOau4)MB#M.idI3JY&sQ
%Y=pB2CWXrkBiE8LXW`I"IG&Td\RZl%l=2FmP=4Le>ZT-C5jj73<QQ&K0akoDl/(t9pUJ=R"!(eFbnLY]4/#kKT2(^(?RTE,ZbRKU
%8m5$).'\,pAL:_qUu7r</-N9d5Es<IHH'ZGEG>)WZb:d-!/b)<l@D[mVgj-0T;M`U+q@]DKX;n$CaX\jC!6GI`^WYo%t*>G58cFF
%K-(\LmoY)$B)[<?&=-I"iiEI"MjW)Ppi<"a]i9;7F1O5,jSMjQPpS9sTQ??5$oXUl9lrVm+$FC1UZO"UMO+FjWgtJ('u\df\^`GS
%=J6lA;YT-UM.RiE&4dPHcIR/kS_CZ\REG$P8.=grdjHJg4p$4.\hHIFlrWu6?o7Vf[Dk1u/egS&'>J9q+\Bf:Lt_q+%=pcNS_"7T
%kQ47>_6'6/;D6J8'Ha[*]i*sH-r]D>X2M^!a'p(`6R<t.Rc`HJ$APaE[@2qnY1p5q&s>(0<;@fi?5cAXrIcUl\CYBgq6Zk?G2,T<
%DrI,HXrE%fRB*Elq3;$h6i'pNID?`U.g#haX=[m]d$_9:HM0E68jdSu<6LT*N*ZKAc5Lg_75c[%^:J]ciL%)HGl%hA4mG6gG,Gc%
%GoWL^d_t+,IqjRT1L7]`R?T9\06mh4D5*"@Zj)gIB<;(-;<::"WWh&']NIM:@.?JAUNG0^iXH4N>g."e(`g==!90rcE/Q@4@1Ln$
%-sPouS_EHg-RutdO74gVJCD6!XPXVG:BX/Na/PRXOX;Dgp&5=%,4R/A@hbENj_$aY,Ut.m@^]eOOqFQH=fM`9Np)J`m)<=_gsepk
%P;chRbpZ&q^8Wj$r%U#1!c%"898'#%+ZaTPEuZpq*'U71&h3g:&>&`)C\B2IJ-pi@\C5&EJ,R59DFdnQl&pa7Se0jCMTETrST_J5
%iN:@14?h7nI;V!q8#"BrGSmFeoXPCp^VQg5P_M.S\hA[o:VVtj31"q$%odqDbG\T9"<`k^Ti5ckY_8GN=Mdm-6unQA?n@Q?M\3d-
%1aT*6fT:IahONsnOci;N$0_U#n2fF&[g/XOVl0HuA)=QYdqR-AiGi.+\1NR]NgQD]8nXhN//8YY^FE0M)Ie2`[.Lc_%'"(E#O=Cj
%R8utE#/RpXSB#?UCt^I:I.bXYht""/'<l*g2EqI0d9R<Rq;W_tmW+nI`l!hjL-4DQ;*$e72@YS`-dN%OR)96PbqiZ#m>Q=q?NGr'
%i@Wn9;)QV1inO(<1;Y!-K;!E?<-3/0pjABJTjGI%R?UGIbqmOV`GePT8BXs.!GKY+S.`P/(-%_&BoW0mH5diAN:)9)00B+e?rPd$
%ElR?NQ&MEt"soXhJ!<u&"X/+9`ES"2[g/G\rVS%+JV)8!YQPk5*a+SGY[Z4kAOYn!+mlkhiUEQr&_Hrc'?cg.QOW]_HOWREMGmJ[
%:toPs)Z<d1Icr3/Ra`iOhY6a/6:]6mXQ#8IHF:OtjH([`>[Ym0L:+7bL[REU^r#E2h(<S/@YB?8G*]e.F&4g""O,E^b"-Zhq\2?`
%OgJIQ`2aJ3=X\k*33?Z5(hNc0EM::.aMRGI?3GVA-3']S,fa9+Opi;eJlj*_6<BFXXIK,V+es>9'\W!;-,"7n'a0J\e%WAPKV_aW
%f_d970t/N<,7`Q]_f"94jArQ+SN+CHVg`^=<<1^tU@]h1S9RpldX_NfGoMR@HUDNfkeZW*7b:&G3VR5B430&mQ9jF"psC(t!<PRM
%j!A&82\m`<[t^Yi!@#bY^idIb0i](;(GkX*?`U@&@jI].KP>l<D/l3_A'd5W,]*MC$R_t9Y`J$jN-6l(8Yj/`=&1"Dnm>1eddKb\
%Y^H#$EY@2uSS?=9k>(j-$LUe,LXT79p<05P!k0Z*)EiL.Hf_stMjT1mgK&=L]'2-DF'AfJWrK((?omsCbB^_pKBa"^HVp/WCn$2/
%8OR,>8qf9ab3d"n3S!uq_'3bg3H'4WHsJbMI:q7mr7s?ofs"e"gf',%%/M7>;2XX`LQO_ui`*4B7-7rX9hWLHm`CN(6s(6)'.Q<H
%Z]%)>!PaMTr4N`t/[;GFX2E6U>0p.SW5RA5T@H5,=m?MK"i)PRFV-jYG$%te_63BKVZ)[91j1l).6!E)/R+7\1G#P7l)X4hQ.)#f
%l+3.0O[I]cnR6K:fa#QEN`kPN7/'Eo_7cdN(B0O#.M;bkQ>SFA4Jm>;+#?`$$fC%b9otfa!NF;#@r\DWV:%K"64OutW_dh5[*=Fl
%7&7nI5h>M5O#p@d"MInlDF\n#3*O<49naQiOIP:IRE*RNAm=G."<IYGD1Bc"#o4SUqNggM(STb0nB_H4Jq\J*'Ig\IRP?::m,NP$
%mdRr<16[c-5j')XB>q!Y#aM-'JJToAb6W2oc%C5:&LRs*\boHg;_YF0Ur.o/*N#TUZm^N`_":Jt3he#,1b2Es;EtfI87kgZ!%kRL
%V*k[b.0Xo=)E;<KPL>BQB,i9eY[C?O<Ct%$51ZpW56ma'/QZYHG2UXng.CQ)ZcTTf3Ul1s(<M)[#h?ed9K\YK3eor':+cY=QdkB"
%NAU5\.NOeN3lS+RIUWo*+-r>(U>/G[].t;M6mgK4+^/Qb7);cK#\D;fGL,^_0[[2L,muS)V,LSP`PWt@m*?Zp.>J1@'V`$JC1\Ym
%TmD1NUeY#2/4FF#5b)P6Rk0ioq/a&.:$2-PJ"geb*>3Q'Ms*&?h\7Re#]2O@Cc16/M'+d3*$1BlnuZ*/$1$[AQ:De+9.8H`n4'<K
%he$N#1K\:OetkkrN^P"P/Dua$5b"[PfjYlBeQ5W8dCKE>r\gDKI0=\A4drOs8HrqWMA/*lanj7J,XQThDbsYa@R\`OIV[KsFBnb5
%'b8IbW4oJo!a[%;*;]2B-kYpDe^\#CBR)*r6W,rfHYOG<V7-ba%-KK/nDAqHkfu^>gU6ldH1u5.!k?l2**fEKE"-A<8f[W.m_Ccb
%gO&`k2,U7d$q.G$3\1NFdn/:A5b3im#T]_Nb^1(33$rk=I8p-Tg%q2C2QC;ODs.VuWT?n4=4o!"<m;+j$5#\],&Apg<h21Z['ar3
%O)uX89*i4np<QSV;g#QNRFiYSW[S.l3MH6P5":L,,E;[3V1C*M49tF;Y"53Vp?$FC$:sC-E&oXZm=p[59ZM.e>Nk89:!BO!F0S&M
%-.C]\pU!alc)Ya&ERrq4r_8E&('Hme&0E*0UI<M/5V#1]8/Bt>/WB!(ffgCkh\(Dj8efa3#1P#"jek9s'2YX%Z9>o?A'9Cu,1if-
%COg^GA@&0;-&mku+@rB6,DSWt=R.6U;PHp;=,I=\o%J!(Vd`H_D=jE2MS^78ND:]0&N]t.Q,9-?M%W?IcEb/=&)1og*h.qC='O!B
%B^L?p,a41A`XA*gC<Z_hJD@G:&!i@b3!H7/NPn\g-HV=b`Q6VH%Mb\Yb?,o;$_`T%F&)7Mr8!&KNNnY(#\r@TliWBZO+T#]`9N=r
%+p0hR`.jbj@ndbF+;N"YCIUik>o<su>rke:])?qknjk$BlSAsC,bj5TD;-bfUB+dS(D6fg;e;#R<"8akarUfEJKM':i,_8&0Mq*+
%R=_o?[R$u\El.6Aj*>rPC`4JUaW#X0AV9^rH'ZPGLd%l.;>tcUi"F:]_5<>Z?Lp&I-<;jY5KHg89qlg,N[OrrS&u1E<APNgNGoKP
%"AB[HgekYDEb]oU]*<r$1N!p_n$d)`*"t.-r7#^,9<>(9,;Tn*"^&p"!m&<nj5j11\oi7rSsjU!D=4u,Y%-L0L__TR>"$)Qg/TWT
%\oDZNC:N,Rq#CNM2S"0,\0&mX[:E-J,Y<W(Yig7&L+r=gi"5BR]quKB_/8LGi(pEi^:gN*Un'?P`PG)ijR5.o$FM31ENpk&KKn[k
%U_m>s+)naDZGq5i!tbn5F?7eY]dX$@aYLgipp+s*3]"MannROV.%7_G(+gF:a[$3D8fIp^iT_r2An/#J+-,NY08#2i4\eU7]_euU
%Ul34l&Ot7E:NlR^*6O]?NIF`$ifr0rf\"4SCp*3A*S/Qg]>(b@@<r8YRH0IF)#TXUI^/6FS=2SogrU^*FuD?E5(2d3q=psCIkgO=
%i%uZO/;tAEI!UD<a_Fb5lW&]6l+JuLq+CAW`G3l%?bYsin%QeHs'Gab0aiY%FlM3[\/i6uKE*2JZ;^J#BX%@&(mcHf`^So/4&[sQ
%&*pJ'UCOB681eU3#$.i6\gNZ0Wn6td7AkOfP$G4dAGUdD@7EP6#O<8,Xgn>giB37ST)D5R2>nY(GImNjB!,^9[G>FY\VkkfYm9?O
%4ThT)N(N,L^UqmcnaSeLUGEPf0PcCSfmV6UUqg1)+O-C2d?r=/^?r@1G,:$=oF,bZY4UsZ#LXLY/fWo'Xmu,P=E'eEDaa$bBk:05
%e8[hdACFKhh$oSc;k3h2B#?kj/kY%DqVX]G;:Ci97i2qA>&g9q*[f]t2]OHR1G6CZ'dp#?(1>Ks4r2[9Yj?=]WRP/j+m.9#e#tAH
%iPfOhDJD0tVYtPMIL-4SMcR1DdrO;t-C&@1bABH6iL,r5U/K)%NiQj*hq56\m?1]bMKC<]lIVYRJJa8X[_kXH(5QS=T/c[tn4aFr
%Nh+"8V/cZ:Cs+r7m5Ai)ESH`3^c6if0Q8(Rc#4+88Z*`45&o`Jgf+2+o-pKnW8;pOO$-^P?'6Xo`87"VPnoD/[f-4]KaR\co[1jn
%^4-4i&s?^8JdTNrV`/s,=mN)9pcSat_]Ckl5KZmBp4LHi)jlJR]SE_i:N1nd(ZT%?K@!pjp$Gj=o2-rZ@&0!hKV)H8dr5:VbkOR-
%r2!%@\ebb>5^M_GW<L5].^^ta,7>G>X$h<Ak!Z$qSX3/YNKNb:%^Q@P@ca_frV5e9dI:JG))=h;LLOr=Yq":IGl<MrV=N4=q8Cok
%4UCR**2lY[cAISJDhcFoP<-cqh1o-96LX=adIM^2I.*\6/4g#9QMk3Vdsel=2/!;s:^;A<W_P]^Ae*0?D;XnjZ_0rDG#NXV@6lf3
%lGt6G'R,39Bt[4rQ;\_pI#G.aF`2h[[Ok#XYsR3seTLUSob<UJCFi]g>Ar^eOX8tM&M@t&$QFn:+pEp&ZEgmT9d9@nfK&A]IOYj7
%[ZO"M&Kk)R!RpB9-$q9qqYh96jtrb8K%qR`5U:4L-nu!GfgXo(m!90JZpgbn\aNp,=N>Q?HQmU2^_;_*?kW]EUCV=Yc5^j3I].Sr
%J>g+;\_V$u`BZ)(PFlp&X-8U[:-kYP55p?OhKu5,PB7-7S(RYh7_g16$FqY%5pCd:nPTKY0WbhBK+W41U^1I2LcGGIMH%Nc3^6X"
%Y&$7(9cliiK#PGL>i2=dVj/hXJ`n(,Bc<,K[DUoYCaJLf[$'F;ZsX?9>2OVm0YG#Kh.lc%Y-qJ3D<B@G@&TnRdr;05nD#=6<_7uj
%8f]jMLZm%cRXCK;Wl;X=$6Q/CR0KgkXUf;ZGMRP5U2`K.lBj>Y#Aj'EeLAI2lDNCl@n/o#Es0WKW?g+_h0.\;%X/Mn8QMd8;e\?K
%WPV(/<2m/,U+M!^ZIB3n9%d<q"Pt%c4'k*<V].lk*gH;n<K#kWWB)/(X<e:^E&nIN(0)oLU.p\8.Gr$H;jQ0W_!XiCr&&f9P@&n'
%<V"p!$sp3=\#sicic#IP92o)[k\lbIf:T^tl_#Y=5BV1;!T964B#don6;k3BQpOM,RRD,\Q%$lTLd.Tr;dgc(B4pFb@9Sa(n*ip?
%0WCoEjQtj'5)`%Z/sFgT]t8dhY<m<QM_f"/A;S*C:g$eXEgoo#<)RYEG.RLLk9Q]tWh/iEYfs$tM7'Tn_Y04^/cfrY8622Z5W?PP
%G<Af*(N2'Sf/9&GIEPMp0PPZ@]-t8J*q7OnpU57V0US&(7TT=,pU=R[A4VKE9pB;N;BOEP(ri>Yd'jbe*:6X[Z!X,>54ZlZV.gi<
%pHNM3IR0=:1U<7.(?@\3B#?6!hr)U1/5dP(R2RX3-J`E97tOjkls2GarC5E;+c6kV1As>FG/[AB'"K]`lOmtDb!+OlB0G@6C;4!,
%3i<l?D^.IP+B,0&23e[28.OFOSfl?\RdP4l%C0>gV8NKK";T8#i](ZkD95L%Y+%6=AaO9&D[8`P-Hi]1Cnblr2!"]IfM-]Uo5je6
%dQpo!hko\$DJjYVY5W8"m-(2Y_K\K%VF`-kUMN$6UoB-nj^fL6,XJa$+P[AEMru5haiQI]SXj]m`V]+X9`)5r5eZ]l99EnD%Q5Dm
%ln?a7ED5r3X6VX,(f2@N.!beF3*=_437jigJu:t,d*uR2bAoVK;(c_[:)#)f3`LkT7n%Vl'2s<b9Qd-jMIM0"``<&f&Z`LbjA$Bs
%^qQW@gMu#Q`?<3d8o*.h[><I1?a_o*H@T>pNPI<1b@6Ei4"_^k80;n4f=0FI#s3mgX]f,Nhf+ghCs-fcWDP%%JqI[Xc\rn.mHSL1
%fu34EQHX[O@&nRUO6&T'>pAQ%p>]L?ej5G#4;upn1V]X@`N#BP8?.K/[>>;,$C\!D%.q'QF07j+r4=0f<)jagQ?C^T@#)TTqQ1(G
%eYZ<&pAD5JU/9>G#\kYT#hL"IeepDo1]^c:bB.0?Cd!\@T#M[6;KaTfQs$`+Ud?6d+%=&"Q\j+)h/A.//Kj*gA1jf-nZq$+earAu
%gO-_Lh6M4+>XcU<9?MRm2c%H,H.g*<,9YX;QDe)*N1aDQG\HB^E'WBQPI=ac/%>3rnGu?t80Ltf/a9JraR/4%>R&-Z(8=gDUkB-8
%ffsr[:+@?umYT^M)JHc,l&:oX-0o$6$$(6qN9q$<*GI;(kU8dRfm%6E1cIu3R9HCahRJ&FE&%^==7Qmk9"peK/Ph*b9T+m(P#$O`
%>3nc]e-mb;kF17$SU)RKKb[W0SS#jF4IJ7kmK-HP5Lo$tEH/Q'6`"F`YP%\C;]lhQ$u5^&9:5[(PXc3F7Ka6Tq4&3`:#!6R`sMm8
%<\;W2GT=R3?-B\30R>AO&K`je#C=@_3S):q\e1R[f_[q\$>jFebaK8@U:SU#KQ>0)kM!jA.\Yc,_.\;HNLb`i&o"Bm*So;B$5)4s
%r<I$Sg)'ml&O,MSR7WL"173,$BaF5p%6rU(80t>_M7cVfH.T<meF.2/]Fh/"=HaP@Qj1l5(.s#o/1iA9iYe9[2C%B/#XC9U-2bA%
%j=D1e)l)bCa&C@MN0VsmG*3_)>ciIKAVkj\h9hDh\(mX0o4=ASY\[sVW^39Y<c/TT;.%XW,KV:;c:A/Y<nV#`EmANuO&O]QC(KIj
%3=LAEAt\KjEQC!7_5UlhmsM+&?>m)]]UK`-PaU*D9^<KiH5)kWJ#c+fa#3PVlkA,DLA&CrM<d5t<d!Bn5@nSLnl'=2d8+_o_s7P"
%d_\Jch49-=R,[s9=Q[,C<S1mgqh#M"J"kK#=?#?0RW)LYX"sk7/U-qO#a7E86^dHA0<XjDG6*=X4Pe?Q1tBC;k[n(>Wud`qG-+0P
%^bKh:ogVaZV60\1[pkHS;6.it1)7Q.i7WF6S/iZ7^hU@0,$q5\q*B>5`5RE4=ii9d[!$BF)$0>&Y-TK$C[1QWrLM]%+FMoTo%KgS
%/H^*<gG>#Mq:bn_B-_tI"lN@0?)i6f%Eksg6DKM11Te?&?sT#qA%ID`RsLZlVs(Zo*Ba]MG2VgM5C'VK%b==D%4NmV`bJQiY.5k<
%8@R+0dh[DdU"S^CCL<iI[+:K.]I+*PnB"VaICGTG,Jmna,F5m4r7%!;T*Ps>Am7+cB[sbY_%t:!m:!btYeTV<qb%._C;OhO]nX&k
%q"[Pp&2/N6%CKZ3mSkY\/Jf*6+dire&!d"5\*iS2H-c,l=tkRbMY_)qEE)g32=sq:p:&`Z^oof#_[u0"Np^Es(N4:/,e=jZ&=1D3
%h%5K4;?fqKabGN9hYh*]DR[2i-.HC7[iJ$0q6jbo)7imAY=hK6i1h$[QfZX$[)>.EHW`SIq6d[=+P&70>1<>JWG==@B=_Qt]gg-]
%ND02$EfSLPOd7<HPdeD&AYXOc&/d4EF+cKi0VpS*(k$"1@)pD&6C=\%_<9)FdAhY4<3[`'OUNVbSnYg/\q";A$s^ED_S_U)2K;b@
%Vq^[<D?SENqWld95+6H02\J;Y;Wo]2l:9.VD]$n1><ee-Em+R$K7XL$/R_a^)<IPJqB7hV[)Ud277RFc;rpdHWGnj+I#9ZOfEcsT
%O)tW%_l8$IpSueqfKfe0d,&s_9JTadO/E#*[qP8gSTa!W&[[D\:hQEHU0anu2M%Q!@N'EXr70'.+L&@K`_)GXbDo2I/']X0>=iS!
%43tm$PmWJbfT'mb(Q__/&qb#5TWOZIUJX$Z(O%?#K;<67-^d<YFY%$/-VuQA(F%K##o"N"\R"8^/V4:^lao1$Loa87\l"<-J1P*?
%*.qFQ7N*u(YIu#3g9("-24Zic[,^jVF@tf`DB2.31Q%rmWYt]1s/NWYjT>shikJI;B.U5n2``ai?KWA03rsR%\JZI-m0)VWp:Z_<
%L)4KH234D$;CG]Be+o'B;Q0ct.Fm:BAu;]1am<XqHOOj>jhE6TiK&eO%Ya`1LO2)j.V;(4P,>L\/30E?l";BjT8H2dP:BSQ,_@Lr
%XPKOSHDX:Z_1@X>j9S_h3V>H+LMq-]8V*0jHIl#aocI:mSRtD+R$,h,fgF69n-H]YHJnQ\da\UA[ROH6\)<Kd)9=T@-<%DmU*O,m
%E"6Ze2goYa9)Y3BdI,tT^f6mS76\=<DMQB!['"SCR$eaULYdihf/;q(jFsOP`i*ZEn6e.c@k([qe=c>teP+KE8Zb2/<$MoL1sM/h
%l#GV(rSsB&Rnk%BO`QjTh>aN?10:UpF,S;5Um]QQQ(fN8834^m2nL\$8qarWa1J9n13jJ!09_Q4"N;VO#+8V1nNjaCaDi\#CX9p0
%H!R]29c"4lO%<DhZ0f%<X(Gj5Ptp<u9U:\Qg%D4NK%TP5^T%CPG:_=*@Tmoo:#)X3Sko`a/'h$[ApG*1;r17\c\q'M6VBP%3Hf/7
%jpp9+770K*liDB(Oip@13ti]J7r4SNqk-U\L:hW?m&?:%EB)B+,p+AZgG_q%Se/YB?rb)aj4li:]IFeV-1+u2C73PABAYS5Pac;$
%Cku<?nbC;u.G]8FKL\(@/TSlZcc\5<kN08;j]j%rJ)4EcH.`H]nu1rb6!@m/+IT3IH)V/p6?RR<!$RWfds!=9Efk<iLa_E,-Gh4V
%Jg=jP4Lob+kn.I#&QWboCO;!k'EWpLLp&*L\tLIX=.nFnDiBX*2&B<"/38n5QQ#J>DjuRUaPoA(Tp>`pJAlCOl0Cr(]=0&(RX9C)
%U=pjNoS$3Wc2J<EMRj#_G0*9oF>]7mZ@bu]G[5;Ioo!E'Y6Dm`Kr&QtUMUdR3FDL/n(1/D]\\oR-"j2?J9CPo/=8*-e7R:PXdAct
%S]GIA;,QNZ-(@>@(a\EIf'L9/WEXf*RC?h]pMl>V`X5:^pW`YC=$8-(k;IX7.Q!L&eqYt3_j4</r;(CZVK='5h1[L(I%'K4IJor0
%+*,3h`cQ3=7YcKlY^J5_s+SeN[HFZNgKj^Oi34KVf.[$l-f9E;AfN!APUXNjT%cR8;.i3iJC6Rn'XFq.TEs6pr6KW#-$iaFL,.n.
%c_8d'54gs\anI[8DSREa:PNEnp74_obN#'4Vq%klopU<#mW8c,Vm.iU,O5S2%''LW?e0.C7O_O_F?(i&%HV$!=04K:Q^=6A@!>=F
%eSUQIP]F;sM/Kb/JOTe/>mj&\.so$+L`X/JBJ7^(VN,;!Wk')q21Y'j39Ep47G$IV3[DlcVBubcQ&q-.>'<ra_!u/niCA9cg;coi
%4e77<=2Bl:M[:3,H'dj*8t#h7B)K-r-H1t]YC#:-P6d-hh/n!6@U!X(ZtT2sB*^%/%8YS2b8=^7i0i(g:e#[0QI!*:Tq2e+oZARs
%9=G%bV>``hf2*Pu76H5$fM=/"N;,DGAHh8eFj9<O](>]2/WUH6c!1emp8"sNk^5I9<fA-'g%-97RLMGG@?G7Z8kh).\8[lO>hd4T
%cf=AhS:'q9bNHDo:SX$jc^t.nS<Y$R(Q*9K8qUk72S183@)3%-eQ'V!R,p9QkPZ@).&#7ibPXp!\;irFg!++'=okgt)MrJ@^a5H(
%F7qhe_*,?6T_`_F@Mk#&4\]E,/,,!LS(S5g!e]X(P\6n?*W"4$T"*7U*TGh1S;d:Xh5X,oD/<3Z$*btXb;9u@gGpEXC=ebNR+34!
%LM;PM/L0q9oS&P)P\Zq6(?ZLcNp2S.[k+.EehpP.!<YL18l%pn<ngPs'!NYI\[,YCah)AO5RFfII.MI:5.uLslM'TZgId%5%Q@?J
%c\0V-^:C=]+Zoh@`(I+Nqd;R^E#qj!TYBq'%Z'SOT3`+"KlXVMl8&TK.GG$rdkeejfhIJFfc;QlLQpZfIT+S'SnQ6ZmL@%-akuL[
%X=1q92A4i0eO?>uhL':E6n(IPh7b!OU"ue7^0.MGmh?`6)Pm](Hi"B(A5DtW;E9(cI\rNa'Cr[^\5S=pNcl:9;7GP49sDOiDQMmX
%;<+>1$"&,*c#les(#7*jQRNXFppHMdPWdeH=amZ@d6>K?CGYeta[R)t>M874$C:Lsl'0QZI!67jM(_1,)fB)9]=KTI5pa9c'6SS,
%qrW;m-<W2Xg/AZ3]##gA0.N,:0$L:bQ5(!h-cBoI7?1/t>1F2IZqb"nP"3ob9S\8dr[(OS-9/J1Q?KR&CBfrLRFfN$(P9>diI=5#
%nMJ:i=fGF6ojp@8If3734a3/YZ2@O"S8q796&s)RU1YMF2PXm/(5^3Ui`M#;-ms-/aoe2ESgLEA/_]l6P8WbYVNnYk4nIl]*EDp3
%rNgEiY]lfWMC4K"8G!9"PN/du)V`bDKj*u-AXaI[1UPFhXW/!Rdpok^<0O#Z.uKmS?sCeXs69"#8R-!Gm@R\?TT!,3`@La\:8=Jr
%Z\nn;jRt3ZpM-+qJTrOAo^%knn&C]oEE1J!_qgj)k(jtLW0tir\RlH(EiTtLr,FNuP`h9<fY0"GF.ZieeS]p7\g>'PF#Pu+6l,h3
%aqdmYf?qSB_BDt3Gu)`Ja3o1H-,,YIG<okr26Mfk!q2X?_SV=4k8QV%;[MbjHea9U)(/'N9WW4D'iF#4P\po_Y3\?71_(VZ"ZVfC
%^K)u^WlVXYac)f=8h';=pF**ISB>4&ptN`&@Tq/k"dOBhJq7Yq]8!J4WViDlB0$kcZ>#]Y@`a5OCoWb5].=,%h1.l:>&!i8.()\#
%ioTEPId,C,&)q1q>`8V0d7.R-cX>6\JeN;PNl+_;^<8,7N@Y@sb?+XE+D>'+1>B<('-/*0KeY3Ol';H_78:X34Xmbb/1o9Q^DN=S
%=%!0kC0>Z[KN&Uh<%<LM@9lqVCSM^N*Mrh#$[fff_^W"!oU>!-hC_?:*/XndNfA^2_9)E=CJch[@4HLA6DX:+pbp*T\NP6(6G6-e
%GAl#S@Gl2CDq1%C@+AAo1"ne=ALFeiOH9?67FuDPm`60^T)4C33\+'HZp'!`cd'rc\O0&)jU"[E+F;@VRj"o:HI3bh[403)lr<&I
%o56Jr3.J9.hYr,u2>(L4oI-C!T!kfK'o9.^n#pEklPX:bObMMM/9Lp@6I&hYgqlK7;b!VOP;AuTZ-&!'L:5%`0SsiB5\)\0WquZJ
%)<e11)7K";W\(BQ.UF$g,%^Aa*4na\!kD^kQ@LKbreTR;`pmRGVh[&(gP(KJNtk6^3fHQq$m7JdF/m7JTlf^]Ur$--ED&#J:t($D
%oC5PTHAMshO\gt`4BRqeTi/!?S:lNhki6Yulq]h,>W(-bkMW8@gSjU)+Qg2t3`ULIbsp^L$@'krVVJ"c^:6WBoGo</Fg4]s\XIcK
%9H@RIIQ"mV3u^H*,89TPB:ZWsW[7/MoO]/d=qKoFKOm@RM;rHRohrkW^hN%H<%D5`UgnSu+0WF4J+qW6U?^.WC%@d?<"dTm<9-\-
%%<%2-;jJ>W$?G&6XCb=G2'H*HJf)arKiX(rjWqa@EQaeCDb91rF2_O[WTG"K['h#IKpm"@DVG2$Al>T@DXHs4']t2do,`'HMr@7i
%"_80V<8TX+NR\Zq<>57FR2rsBNR3+>kKUAq]ZO+b>[:b[&;_P67J2:/G]s+gQ<7=HAp1m+=lIu9.GP-E/rJ*Lqc'CRTO.;DFlI)s
%F@,]ZpAgu.[3^f+-!chJHsI>@h<P`ud\tfX26EjMoQVdSQR1`V&,H;VHAPW(+p;KtPdH<o6aq;:D>%3\7NFuS<n0QK6':scM5TWu
%/357lM6k79&/C!'2m7h6P,aF1mMldh(bK1`(47c2a`?24`h+]OWLBTQp(MD?ZoVIsiZkr0>h'Q'c(%*&'jhmo!nn<&*AXG`bE[AM
%]o)`6pk<_bV%Cd[1O;;5p(4f8n[>lQP,D?=j7#srAa8#iiAJ7seb%K8X0O&)Bsekf,ge3;9tjB$`A1`!PP]l-1[,li3kA8P`o6VO
%^.JC-DSimBb8>%Se_).DOOpVR<+i/7Z+C_^:341EGCTk^]q*"W]I9nOGb>LiAM=m,fBf]YZ)B3%3+>`6(e_/Hlb+Ab9`<*b`f[la
%$W_P86J$kPARj,]V9J[X1gY7RIWu=`<ct0QB6B-+RpkL,%:-ju'F?\pAMs$p5cU(?8X0<<8BW8XaqZrj<g#bj_FVI>h\G2Y%6XT"
%"eWKH^!R/H)\#eb[!C/b2ckWP*-Or!c`5Q\H1M@;8@U,k;p7Wp+Z.nM@O^(ESeUmL"`7]BMJ<91Un?.!#9SR9'sSAtII%IbCKeCm
%okp3qn>/4%Ch/*Z?5<l#LER4YB%N(O:$=+fE9KY_/]5tths9$=c`E;*q^AVL4L9p'1^])4#H8,3M7*W2WpZcZG&iNTIQlO>dN?"3
%'P[52WcC'ZZ6L.??]1aAHVUes`cXW*1g:`s5\`aZRfp:WX5?jimGfie4$oi&0u/?OUH"^B=t/:lPmZ$M"Y=Gq3pPXf;I$%?9um0S
%D*HsK-*``1d]#^C1VR"-4%^>>2p27Ga'i.L%q3qe)8m:f>&N](C24B6:c?69*.]Y^<*oq%r.*Uj);$giG@1PsLdfK8+T!KbOl`Ab
%&MY,&HRJ//q'egeeIo/iLq<4BP^<@95TDUYk!54BD1clFV6ZK$.r#BjF8#=?;7*H^fI1'akZTk&UB34Pp>qM*1pGS[\;NUD8Yn-*
%g*c:K*t8*k4Z._Qmdu8+&>*drklDZub%BC7WsSs]L)7;]P$1,_??013+AN50EA:4ek0(j+bJSi,IGj=#WRt$e/o>5EXt1+)*Q38(
%!0O+!!05"]U7O(:R5&bN"I0-f0$rt@5,amO^g!h+iM4"tTGEAm08L_1/7G;OLp7#2Xj^,R?qJuQGtq.GT'4)eR#Kr0A=6V/"^qmg
%d=tgBQK=o?;3+XO?:,CMDAP'6VbKVX::dD_1M:Go7&6GWT`W]=LA66?EJqgq2@d>sP^Zcb)p]s*dUORqWpME^%K:5ds8'S7V7jaH
%UEWUdF5BY$;dViLQ!%NCNUFc.L#YQY-d$6o/L\>G-30g6J)W^&eQ;mqr:BQN8n)]mPkobk9r3\VYrZ5-D58BlM9"qc]=skam<k*V
%f:+_fQ$K\aRE1OebIkBHO%fBkO",XA1l@E!n\n@@oU)e0?pWpJ5..QhbV\H*gH8lu301]O%Ao%g6sKp$$FSRUAP9]P)4gLBRZ1)3
%:"8\4OiX,`aGq@G$hO(=!H7(3)@(9)N;q+#&dk5,rbCPf)%M5/Vtq*\RH[;l<;HElnUC=rIn,C5aT*WZQDhgGmo]i=YhW[rd9etU
%*CQ-LfT&Jn*/Yfm[KaLdMJ#m#Ych`M9[-A<F]+Qfj/4T*kdVurmoX_i9WOY?G9jEW5b`'A)3$$WNpL?6T!d`;i!QN%W6nQ>4kls;
%J@\APiLrm#hal`/),kf)XT+'pOuYQhM4u<o&ru?VXNo1sWQTF_/h6YHUOa[r!>jQte_9!Ze7dl^K=HO,3Y";M25c\CMF5_/f\nKU
%r!a^#ZbV3Lda9iU1('kEn$'[04cK?[AO)jn)7i0cnQ>V"Jo>pIV/!M<2:/!m"@g9u8?]mSG=R,N4sAn$4YsX%A`4JJ<a)$%&#'f9
%[rPF2@k)mLHX$Fti9Q99OEgZ1!)JRa(X'sAZ0ZHAg[>['3?65A!hj)'@[.loTY//N'&d(QnqB;1W;igpQ4=`EWk<;dqi.M>H_M_&
%8X$sSf4T)qOhc613o,h_VsA8cLQ?-W_a+n]%"tn/Y>g7^Y#ScZ@O,A0?0FR=M:F7k)`a4[I9q`nLhmK&@`TJA@MIT5Is4YR<^ldo
%9#<`Ar*,7J2SpBmoJRs$SHrrLC%q'*l'NJ*MWBTd?77(qA4@'.5oaFIH@jo.IGkdTM*MN?J>Q^WrLTMt$ARN*lQh83LYF6F=]`si
%k9EjRFd&hI56$Y:pUtJoe24tP%ZE7J;9+0)$JRo#P@'.FiM\]LldRR%St>&)eXi'os*?3na=qhHne$b>%)Bod2?.-19d*Ygh)0,c
%"jC"U1`QETZLshK;,VcgL'9_<[Uh9[D3qY0BdL[ZTQH?j0&/7n&W_(bO:/G/3qmp,9&!?^ei39\@T?E2:XQ4lAqbt/('k.l9"7i`
%;bF.lT`#+>VS)3P-n=0k"G],?f6-EFGS9)1*9'5HO/X[ZKZI((:R5/991",@V-))p,61VEoD,]-FUb&oh_O\o=Brs".7g7SYrV5p
%+drOMgH.OWIZ_+&c9E=:Z:)E<P\U/r\o0T8N@.k4n8dC(ZZk#3hJ^E6,[\_;Z<B/_<!1guKtM.=<Qb3GDk<o],c_DT)eB]B7I=[`
%ILRM4k<]mVh_W(r:ERjA),sulfokDQk<`ObgA=CLOS8diH5O\G3l>jP*cf)ac399/;n<uqmC^$UYVZW7?%k,2\rC<&+I5!ik9')%
%<jEM(Mj,=3=-PoHF3iotXe%'gVh=^H965Q1kpj5_AkiRt)m@`hju0FfqLaEmW(h0D>+T'qN@/*(Drqic*`iL<Z8?L'ST4s0%U3Y\
%rH*m05HD.:lGt=cZV)ZrQn1\)Fk#u(Z3j(A`IkH[[ZS<f*Y%O\6hI]cFTjLL%%'p-DN0%A#bX>87e!e2hVu<$=02UP@rt%ng/Ktu
%['j(%prYoM+Nqt9kYC)EZ8`(5WYdc"BM>q:o=N*^RE%>^r==li:^\)U4W^:RB2^j;A8loV;sH'_TL(CVr,noqf$*t>T@^$Z=U<F$
%@V3HAG0bug%sX5GR3:T.+\bgY*n/1&.OJpV8"$iW[@AM9'n-RiCBV2[kJ9s[/DCsHP`002:$Th=5!C)(f)"pBA%oU8b`HrP1"uRj
%ZO)7;LPoq/Z75'/'E-EC-PeFlqTZ^4B9Q"K8?-_U>F%"!T*ZcW*.>=EYS[&1ddbfAHh993J`1V):$$cREDEfG@8-O-)]5_cD@C3d
%K(.?]pEFNI]ibeE4j%n7DR$.+j]HB9Oo_bdiZhUEpPT4K=UUQ\$e:4\ZugOb\"@d4Q2DIprQA2hrs&#q(\;a^reW6\:Q\Aron7Z_
%4-EY]`aP#NeXXueh7MLM[%joQglc`fdtST\bke(+QA(I=eshb4ro-%0BJ+<U,tZ?26ki26ph!/B)>A1(Y0fr?\sY:>IR/U<<!@Y\
%(omM[BrrH=Gk-DO?UbM01ECa,$J9Jt+%f7@!ZcL?1XnJ/4bN+L:2<\9-B5p2f$tttH3X;ISp,YmFil93\Xj9^:DW_[A?!u:SrZ<O
%+=^kI)\R!-(UNtN^X0qN&Y9n<_idWU:7e[aC>7Q,/JP4PG+`D=X)PU8OG3\%-#1b&oA]$?aT?EN2"d$0d5TTqHTZ$lFh:,QGdWH+
%UrPVSVG_/``X@(q6Y-VBO8dt/hpE"/A!,<pGJ>lfjf7q-Y2QmBO^psaC,\<@&GQ+gf)G#VjK[EZjUb8F:E*T%(.=>UI<dnr%99#C
%aai2+W*o[5HLmSV=etetf]LWc7^=_HTXk6R*3+FoRVOfTSulp$]p,6#18ZQL(Cj\#DT5Lh8iI2!O!UPlIKX43mZ!HpFahrc3,/)2
%Q<T"N7gsWREN.Q]RR82O,ce4af$07j2m&WZbtol!oPBg4L3+F2Kf"tBP4,kE^!*1cM['!;Gco(X-KF-$$S4LV0i#sITWIPuC6F$l
%dm6?o?Pn;@?QS2'\+lI(?WX_99ILfq2d]c0((R1\X-,fM@8R%HPsTaW`&kU2aA'E^Kp4>8Y<MX,WjY%G0*k3MY=?-*4gUET&k-m:
%fu5]VQI9_q^D_/T@d6.%'mr?6L&p0M8,t`Eeqf8nC68\tf;k,>QSB,ab$/h4`"_DN6ue8)b/dsppXIi+%#?3_XU+eX>kjg]Hh@b*
%:^n.'Yrif!cEtMb*+3VQK@=L41Z<>;.eIp98(A9\k(f#gC)P$85G-BP=@GdXGY`EF3[fT4iUn(;HE!kg#<o)5h"dj`nOUC[W#r1T
%:QH).\07ob#*2]2IKY#,(;IN?70INa=9Mmt^0(E6M6H4dR[q,ML)WoTImt4+CC=5:OViL/5TT.C22HXs[:W-%SlS$A98SP=b<eNK
%egkp=82Ak8X,a:?]%7#1=B,>-Iqm+Vl5$i*L#&=E[r?scI!3]EYr$P-eJuqPaQo:D(I`ibIVbZ/WZuL\,j38&O6sS[$r_-Raq5dQ
%[_d+ZJ_Z*^UK^R]$O2%W7E*h^%<#Y;bphSJ+as1-NXU#]qaEWBjKs-Q%Z=X];'!g-eR+&W9ss%8([B>F0tl*<YHW23C&'YE;?q?B
%![@RWpli3_Wi_>ih(J^FoKRKjBc4??J$L%gVolm3pR<fu$IrZTC)W!C&m6^>+3e?^>G:8\E<3$Q<&\ZW!5B#3n-7_gk,%A^UYUlM
%e3kHuMt:g`D#qWjBN8_d/?lJrQY=-=VuENWXn;9!r!)#[#G[WOWSq2Jp<PCe:2:;SlY`,6q.XM+r0R6e]Jrh+l3hMR'kd9cQ,cbo
%pp2Etc'g5NNq^b`.'.g_$LMh8/(G"UI$Ik8rCJ,jbEfCgpC7@]s/gJd6Xa+l>PdJF!S1WdY3fACD2"C[M2HV"?:6YQm9Lor2uc.U
%buVH:h\Tnoh<^i2b#-HYYC;LrE;F>Jff@%#a1JV/4`S(e$i8,;(`pZ\^2-<IIKdXu_]-lfDTA3V)r0)OZl>ia/7YS?mBGTDm^8_2
%Uqo!DrE?9Wd?Uni%df[[e6FCi<:QGS%^Pc%5O+LSSRNFff!NH!&j!a0';]J7DD5P=C>h\CT6hb\D6ZB=IC0VBKg1q,Bq&tHc`d\u
%..$It+Y6irm5e.1+tlnqBrg#@[<X)[*td-p!=4Bh<<=4sU+BfHVo0V;q/,Z!NP$7;6MgCT38X'ekl"Z]/uc]B3@-*uNFO[T+Ioa-
%'_^alPcD4Y6cMos?2Df2rt5,Y3#f5@j2^Jls7A>r4VH5ENMaeCe5u?%n*V5>4X+i#hdH\Wl,295RM)Hig.11aDkq1,3a]<0%B91[
%ATQ%W]SH?A;\^^oa$\*,o_]UdVOoB8K:_@I\:iM6YT.9O`,ellQG[HNqYmMD99sU%hSY<8Kno`^3:g'pF>io`.Rs`0<3LtYZNWf@
%A%GU'R'dR'V4>_q2?!6.eGiI#D)m8KPYmE,@>q)0OG?;j8amuKr-Jdd\VdRPR3(W`dR[ko#84:M*QS4D.%kPB4r5\R16cdDIoL#X
%rh5;j`QFZc(OuBQ=Y[k`:D$iqaZ\Ml=O:<OT%8DC,,lp=;lWG*VJC;BOhE4^-U.kLBJa#F#Z_\!l!ZD*Y"Fo_J]<tJn#!c\Rdh(W
%2P:6NEMTM,HCpI."J$*Bpg0rH_>I-MfG<2s8of)]W4Ym+T_Yu?q2fK+fRV(<;0.BSh*R7N8fg^9'PhKr'W('a/+.IVD)W*dN?1"9
%Cfs`.7YX]@"8rkX[eJ:d;t)5bW3r]Qa.%#lN4+&g11+?uB#6SNVfB_7>YQ<=Dgd;H(60;`=LGNqP/8BBY&I3f8WcLPA'EcWL`X]1
%%$<*+jkn&YEm#gn!(Q?N7!6pT.ro1E92aGo['j#[Y=h&)GCX1LeYPG3Z42uYC?=0l?7N*%hbuftA]O]aI^Z*HCQZB`KY<BN/mRKe
%=u0$]d=JZ*Wdpg=hlF..q_hHH%*XmLV=^a9%,\30VoLC;HJRbkZOqhj"sG,2f_`8EgA)TYdV5UQCBPufhX',3]$s8CUb]$s9-kOO
%nNn0(K,9U/fG;0`]LFLA;k]cY:O5`fo1LldMWs0cR=DbU^<`#CrnmbK?iAs@rQ"G8s6_!/gY`&$s8M9/J+GT0_]SmL+91:qs5hRV
%r#bt1:OiB0^\W_8ro=%XduQ`mj$3Ol^\mV/rq*rHs6I]ir:s.gr%J*Bk<Jq?kPtNWs$mi1oXs)mJ,$YUoH4)/YPoV)bk'r~>
%AI9_PrivateDataEnd
