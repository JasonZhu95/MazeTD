%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: freeze_5.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 275 150
%%HiResBoundingBox: 0 0 274.8096 149.7458
%%CropBox: 0 0 274.8096 149.7458
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:18:59+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:18:59+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:18:59+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqhdS1K3063E84YqWCAIKkk1PcjwyUIGRoNeTIICyh7PzDpN0aLMI3/kk+A/edvxyUsUgxhnhL&#xA;qun8waPDs1yrHwSr/wDEa4jFI9FlngOqXz+c7BdoYZJT70UfxP4ZMactUtXHoEBL5t1Sfa1gWMeN&#xA;C5H07D8MsGCI5tR1UjyCjba/q9ndpJeO0sL/AG4zTp/k02BGE44kbMY55xNlk8uuaTFEsr3KcXHJ&#xA;QPiah/yRU5jDHI9HNOaAF2lF350hWotYC5/nkPEfcK5bHT97RLWDoErn1rX7ytHMUZ7Rj0x/wXX8&#xA;ctGOAaDmySQX1e6X/SIpQ8impaNiWB8a5ISB2azGQ3T7S/N6CIR6gDzUbTIK8v8AWHjlM8Hc5WPV&#xA;bVJAXer6vqMxlhdoIENYkVuPTxI6nJxhGPNpnmnI2Ngm+jeZlmItb+kVyNlkOysffwP4ZVkw1uOT&#xA;kYdTe0ubIMoct2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKdc15NNVUjUS3L9EJ+yPE0y&#xA;3Hj4vc0Zs/B73aR5htdQrGw9G4UVKE1BA6lTjkxGK4s4n5FLvNerWMtqLOFxLLzDMV3VaV7+OWYY&#xA;EG2nVZYkUEsisE+qK80BACgu4VgAD0LEdPpyZyb82mOIkckdaaLpEsohUmWXuoLADau+Qlkk2Qww&#xA;JpMv8LWQoUCr41Ut+JOV+NJv/LRRceiWCChUv7E0/VTImZZjDEIXU/LsE8PG3HA/ykk7+IJrkoZa&#xA;a8unB5JH/he6iP71Hcf5Ar/xHkcuOcON+Wkmdn5bAUNxEdRUEjf8d8rOZujpkzh0iwt19SUCQqKl&#xA;5N1Hvx6ZUZEuRHGIsV12+s21B5bOMJIUETSAUqASakeO+ZGLF1Lh6jPewQ9hp3rDlIpYv9hRWp99&#xA;sslOmiELZJB5flMQ5yCI9kA5UH3jMc5HMjpzW6W6nokyisyUA6Tpuv0/25OGVryYCFOy13VdNURT&#xA;L9Zt12WpNQPZv65KWOMmEM8obHcJlH51sCP3kEqn/J4t+srkDpy3jWR7lWPzhpLEBhLGCerKKD/g&#xA;ScicEmQ1cPNOo5EkjWSNgyOAysOhBykhyAbXYpdirsVdirsVdirsVdirsVdiqhc31nbD/SJ0j9mY&#xA;A/d1yQiTyYymBzKVXPm/S4qiIPOexUcV+9qH8MsGCRaJaqI5bpbceZ9WugVtIRAp/b+03/BGg/DL&#xA;BhiObRLUyPIUhrTSruWQ3EivcSk1LbsK+7HqcMsgGzCGKUjfNC3MUM128DB7e8ReTxSIVqvTlXoR&#xA;7jGGVOTARuVHTmRLgu8fqBAW49/h8PnlmQ7NWIXJn8VvHFaFJQGDKTP3DEj4vo7fLMB2wDHPLDNL&#xA;qRk7NAsh+kU/jmRkPpDh4R+8LK8x3NdirsVdiq2SRI15MaDFBNMT8wa68jejE1FHQDoP8o/wzKxY&#xA;+pcDPmvYJTYWLTOJJASpOw7sctlKnHhC2a6Xpq2yCRxWdhv/AJI8BmHOVuyxY+Hfqj8g3OxVA3ej&#xA;2s+6fuX8UAp9K5MTIap4QUvk8uPxJDJIR0BWlf15MZWk6Ysd1OOFIV4oqsW6gAGlMyIE24kwKZH5&#xA;TvQ2hK87hUjkkjV2NBxVvE5iz3kadji2gLRFz5n0eA8fWMreEY5fjsPxwjDIsZamA6onT9XsNQB+&#xA;ryVdd2jYUYD5ZGUDHmzx5Yz5IzINjsVdirsVdirsVSPVfNNraMYbcfWJxsaH4FPue/0ZdDCTzcbL&#xA;qRHYblIp9R16++3KYoz+yv7sfh8R+nLxGEXElknJDpYWi/FcXUa1O5Z1QV/2RqcEstLHASmunaZa&#xA;SuBbxPL4y8GWMf8APRx8X+xrlMsxcmOmT+DSbSMVZAx8DuPxyszLeMUQjQABQCgHQZFsY15v9FDH&#xA;KAPrHptGW78XYU/4icvwDdxNXLamIXlzJZ2ccyj+9lUH/VT4iPpOTzy6NekhZt6TZX1jqtgJraQS&#xA;QyqVan2lqN1YdiMxXPSry9pV1YXjRyAGOG3SESDoxB2I+gZbKQ4Q48IEZCWQZU5DsVdiqyaZIk5P&#xA;32VR1J8BipLGdf1orWFD+8OxA6DMjFj6uDnzdAkdnaNO/qy1KV79WOXylTixje7LtG04KBcyLT/f&#xA;S+A8f6Zizl0c/Dj6lN8qcl2KuxV2KuIqCPHFWB6tZ3RnEYWvp1B9jXM2EhTqskTdKVrpEkgVKkgV&#xA;4xxgmlTU4mYHJRAyRTaKsScpIZFXpycMP6YPEZeDXRDNb3FlKtzaOQ0ZqPEf1GS4gdiwoxNhlui6&#xA;5BqUVDRLpR+8i/42X2zFyYzH3Oww5hMeaZ5W3OxV2KuxVAa9JNFo91JCeLqlS3Si1HM/8DXJ464h&#xA;bXmvhNc2CWV3bxfEU5t2cEGnyzNIvk6senmE2s9ctImJZCa9yNx91cqliJboZgEx8uaXo6XlxdwW&#xA;4Ez8WVmPPjWpJQnpU5jzhTm4snEyPINrsVdirC/M85mmLV+FX4r8lBGZeEU63USspbK2nXFktrOG&#xA;IAG4G4bxByU8dsceXh5JfZ/pHRbj67pkxniX++hIIqv+Uvce46ZjTxGLm49RGWz0rSNUttUsIry3&#xA;PwSD4kPVWHVT8srb0ZirsVWTSpFGZHNFHhufYAYqxzWtXMFSTW6cURAaiNT/AB8Tl+LHbiZ81bDm&#xA;x61tpLqUySE8K/E3ifDMmUqcKMbT3RoorrUWt1AMVqqvP4At9hPpoSf7cxZzc3Divc8mVZS5bsVW&#xA;yzRQoXlcIg7k0xUlD2uqWVzK0UL1deoIIr8q5IwIa45YyNBFZFsdiqGu9Otbk8pAQ/8AOuxyQkQ1&#xA;zxiXNVgt4oIxHEoVR18SfE4CbZRiAKCpgZJdf6LbXCl4gIp+oYbAn3A/Xk4zppyYRL3sQuba6sbj&#xA;14qxTQt8QHVT4/I5lRkJCi6+UTE2Ga6VfC+0+G525OKOBsAy7MN/cZiTFGnZ45cUQUXkWbsVdiq2&#xA;SOOSNo5FDxuCrqdwQRQg4qwnzH5b8sWS/uFliu3+xFFJsPduQegy3HjJaM+YRHeUkup7bTogsg9W&#xA;5I+CEk/CPFz1+jLp5a2Di4sBmbLPPK0F0mkRy3a8Li4JlZAKcVP2F+hcxTK3PjARFBN8DJp3VELu&#xA;aKoqT7YoJpKL3XohCwgqrHb1HoAvuPfLY4y489QK2Y7JdW0n7oKZq9Qorl4iXDMgUXa6AbgcooAF&#xA;7O5IX+J/DIyy02wwcTU/l6/jIItgCvSW3cNT5huDH6BkRm72ctKeiP8AK1tPay3UbwmIScZGFCql&#xA;unIKehYdflkMgHMNuCUuUmQ5U5DiQBU9MVY7rOtxqpeMFihKxV6VO3L/AD7ZdDFZ3cTLnobMYhSS&#xA;7uC0j1JNXYnc/LMomg4I9RTdEVFCqKKOgyluRPlZRZ398khHC8ZZYpP8oVBQ/f8ADlE4m7c3FkBF&#xA;MpyDcoX19a2Ns9zcuI4k7nqT2CjuT4Yqw66v7q9nOoXoMUMdfqdpX7IO3J/F2/DLscHEz5ugXaU8&#xA;yzC7b7bMCo/yR2+nLp9zjYyQbZtmG7RZcTCGF5SKhBWgwgWiRoWg7LV4bl/TZfTkP2QTUH6dslKF&#xA;NUMwlsj8g3IfUZWispXUkMAACOoqQMlEWWGQ1EpTo2tSSTNb3DcqNxVj1HhX55Zkx9Q4+HMbou8z&#xA;Ww4+qo3kRlY+4G368cJXUx6rPJc/KwnhJqYpOQHgrgU/FTjnHqZaWVwruZDlLkuxV2KpNrvmBLKt&#xA;vbUkvG7dQlfH39sux4r3PJxs2fh2HNja2moSM0kcZu9Rl3UHop/mdj0A/syzJOhQcfFiMjZTHRPI&#xA;kNvcC91WUXl3Xl6f+6w3ia/a/V7ZiuxArkyzFXYqxnzFrYMfpQNVK0B7MR3+QzIxY+rhajN0CVWe&#xA;lyXTJz5TSuK8K9B75ZLJTRDEZMmsdAtoApkozD9hRRf7cx5ZCXMhpwOaagACg2A6DK3IdirsVdiq&#xA;yeFZomiYkK4oSuxwg0iQsUkF75ank+FGSSOtQSSjj5bMD9+WxzU4stNfVJrry1qEK8wh4+9DT6VJ&#xA;y+OYFxp6eQQQmvbY0aoHg24ydAtVkImLVYztIpU+I3GRONmMiYJrF20YS2vjHToCEb8HBOUyxORD&#xA;UEKLRPJKLi7me5mSvGSUii+PFVCqv0DGMAFnlMkGWN7c8R/cR7n3/wBvLvpDjfUWTaPpvIrcSCka&#xA;/wB2vjTv8sx5z6ObhxdSneUuUo3kfqWsqDqVNPnTDE7sZiwWIQPLHc+mTX9uJu/Xp9GZRGzrQSCz&#xA;XMR2iG1OJ5bGVEFWoCB8iD/DJQO7XlFxLCpZfQvwx2SVQGPv0rmWBYdaTRZSK6lpfHrPGe/dh/UZ&#xA;jfSXO+uHmxc2F9ZzlraVopB1WpVvl75k8YI3cLhlE7I2DzTq1qQt3EJk8SOLfQy/D+GROGJ5NsdT&#xA;Mc92TabqVtqFuJoD7Oh6qfA5jTgYmi5uPIJiw3qU5gsLiUSCJlRuEjdA1NvxxgLK5DUSWC6b6j3D&#xA;yOOZNS0jbmp9/fM2fJ1cObL/AC7HH9QFyu7XBLcv8lSVUfx+nMKRsuzxxoJpkWx2KpNrWsRR8rKF&#xA;qy8a3DDpGngT/M3h4b+GThGy1Zp8IYmrfW7su+0Sb0P8o/rmYfSHWD1Fnmn2SWsAUAeq1DK3ifD5&#xA;DtmFI2XawhwikTkWanLcQQ8fVcJy+zXbphAJYmQHNdHJHIvKNgynuDUYCEgg8l2KXYq7FXYq6orT&#xA;viqDu9Js7kHkvFj+0tN/mOhycZkNU8UZJFd+UWNTCQfDiafgdvxy6OdxpaU9EnutC1C3PxJt2PT+&#xA;z8ctGUFx5YZBQW1vqGMBgp2IrtkuIMOEsg0PSQ5AYfuk3kb+ZvDMfJNysGK/cygAAUGwHQZjue7F&#xA;VkzcYXbwUn7hhCJcmEFz+kkA/ZT+OZf8Lq79TOgQQCNwdxmG7V2KsF11Yi7MNiJG4D2JzNxOqzVa&#xA;c+UpZXiaoqpUVPuCQPvGU5hu5OlJT2a3gmXjKgcdNxuPke2Ug05ZiDzYrrFo1jdpFKPUsrolYZD1&#xA;V+vpt9H2TlsMjjZcIqwoeW7lrPWTbE/up6oa+I3Q/wAPpy3MLjbRppVOu9U8yag99qH1GJqQQGjH&#xA;sXH2if8AV6Y4o8ItdRk4pcI5BCpeWUKiNG2XwByRiS1iQC/StY/RkZggn52tSyQyoW4cjU8SOJp7&#xA;ZV4DeNWj383uRsVHuqn+Jw+Ag6ooSbzPcSAgySUP8tE/4jkhhDA6kpbcXqSQmONOAY1bpv8AdlkY&#xA;U1TyW3Akb2M8SShZ5lYAk0oaUGRyAllhIBtkel+bYjCsWqxSW12gAdxGzxuR3VkDdcwzEuzE4nqi&#xA;pvMtsfhtI3nY/tsrRoPpcAn6BhECWMssQkuoXs000LTOC5cCg2AFD0GZEI0HByTJKf8Al9y1pKP5&#xA;ZSB/wCn+OUZObmYPpTPINzsVdiqT6pr8cClYCCRsZOu/go75bDHbjZc9ckPoX1m4u/rEtQVBLVNT&#xA;vsAclkoCmGCzKyyDKHMdirmUMCGAIPUHpiqBl0axduQUp4hTQfjXJiZajhiUZFFHFGI41CovQDIk&#xA;22AAbBdgS7FULqcnCwmPiOP/AARpkoDdrymolhVa6tTwFP8Aha5mfwut/iZzYmtnAf8AitfwGYUu&#xA;btIH0hUkdY42duigk/RgCSaDz3UnaW6WMbkbfS2Z8BQdRM2WYeXYFisjTu1PoUDMTKbLsNPGoppl&#xA;bkIHXLRbrS546VdF9WI9xJH8a/iMIQRswq5kEGqQzf77eOQ/7Bgf4ZmH6C6yBrIFO3asV1Kxq5FC&#xA;f9YmuTPMNY6lU07T1ukkZq/BvsabAVOCc6TCFrXtrcFvRhurkIaO0EZkUEdiwWmVnNTdHTEoR77R&#xA;4W4TCdHHVHXiR9FMHjsvyhXpqfl09XYf6wf+GDxl/KnuRUNxoMookse/QMxU/wDDEYRl82JwEdFR&#xA;9LiYcopCK7iu4/DLBkajjUfS1C2+ySyDw+IfdhsFjUgv+s6hL8KR8fEgU/E4OEBPFIqtrpziUSSt&#xA;zkrsoqd/nglNMYbs10+2+rWqR/tfac/5R3/DpmHI2XaQjQpEYGS2WWOJC8jBUXqTiAgmmN6zr9VK&#xA;JVYjsF/af5+AzIx4nDzZ+gSu1gmmkWaYEyHaKPwr7eOWSNbBx4glmOn2gtbcIfttvIff+zMWUrLs&#xA;ccOEInItjsVdirsVdirsVdiqB1o0sHHiVH41ycObVm+lhcZrqrfT+rMs/S60fUyrTdVt4rYRTEqy&#xA;V4mhNQTXMaUDbnY8oAooPV9fidTEp4R9x1ZvoHTJwxFry572Y3byRtemWRuK1LCv4ZkEbOGDuynQ&#xA;9Shi9SKRx6cjB45BuAaAFTToNq/fmJkgbc/DlFUU+SSOReSMHU9GU1H4ZU5QKF1O6jgtHDH45FKo&#xA;vfcUr9GSiLLXklQedatcBjK6nqOEdOpPQU+nMuW0XXYxxTFIm8UW9zeW46CRkHyV9snHcAsJiiQm&#xA;eiFUtjU09RHFT4/5jKsvNuwkDmy+0hghtoooKeiigJTfbxrmI7ENz21vOvCeJJV/ldQw+44pSm88&#xA;neXLoHlZpEx6NDWOn0LRfwxVDf8AKv8Ay36SIYpOSdZfUbk3+t+z9wxVE2nlDR7Wnp+sVHRDNJx+&#xA;5SBhBIYmIPMIqTQ7Jj8PJPYGo/GuSGQtZwRWDQLau8jke1P6YfEKPy4RFrpdrbvzUFnHRnINPlQD&#xA;ImZLOOIRReRbFC4u44VapFV6+A+eEBjKQDFNX1hmcknk37EfYDxOZWPG6/LlsoKytZJZBPNVmY/A&#xA;p7+G36snKVbBrjG9yyzS9LMJE8/95+wn8vuffMWc72c/Fircpnlbe07qiM7miqKk+wxQTSVJr8Zl&#xA;4vERGTs4O4HuMsONoGoFptlbkOxV2KuxV2KoLWf+OfJ81/4kMnDm1ZvpYIZxFfySEcqMwp+GZtWH&#xA;V3RXNd3lweMYIHgn8Tg4QE8RK610ua4lMaq00g+2kQrx/wBZzRF+k5GWYBshp5ST2LygXjAlKRHs&#xA;VJZvpqAMq8cuR+U80JdeUdRgBkt5FlpvQVVsmM4PNqlpZDklZnvoW/eKWp/MK/jlnDEtInKLU+pE&#xA;wMvER1+2wO1MAgBukzMtuqJ8qaJJqd4mo3CkafbNW3Uj+9kX9qn8qn/PrmLkycR8nPwYeAeanr8Z&#xA;TWbpSKVfl/wQDfxzLxH0hwM4qZdDqMcUKIEJKjfpTEwsoE6CJstblEoRC0XI7Uaor7jISxs4ZTbN&#xA;bd3eBGfd6UYjuRtmIXZx5KmBLsVdirsVdirsVUL64NvaySj7QFF+ZNMlEWWGSVC2IahqUscfAtyd&#xA;iWAPie5zJhC3XzyGkFZ2bSt6026ncA/tHxyyUq2DXGN7lmGk6YIlE8o/endFP7I/rmJOd7Oww4q3&#xA;KYTSpDE0jmiqKk5AC24mhajaahb3VfTqGXqrChp498MokMYZBLkhdbu1SD6up/ePTkB2Ub/jksY3&#xA;trzz2pjgdhdshPwsgZfoNDl/RwurMrUs1tCW+0UUn50zFPN2cTsFTAl2KuxV2Kpfcatp3rNaSVft&#xA;JtVRXbc5MQPNplljdFLrjyrBJMZrcqUf4gGJpvvsRWuWDMaotMtKCbCMtvL9rGgEtW8UX4V/ChyE&#xA;shLbDABzTKGGGGMRwosca/ZRAFA+gZW3r8VS/V9UFjCeI5SFS3yA75OELac2XhDBrrWHCksyxKe/&#xA;c/5+2ZZEY83XjilsAv8AL+hSa7cetMGTSYjuehmYfsj28f69MbLk4vc52DBwbnm9EiijijWKJQka&#xA;AKiKKAAdABlTkJFr3lKHVroXS3UlrKECHhuDQkgkVG+9MIkQxMQeYQMf5dWB/wB6r24nX+WoUV+k&#xA;NiSSkRA5BBatoFtoslt9XlkeKRieMpBK8ePQgDbfMjAbBDhauIBBZBaa0I4wkik07jKzjbIZ6G6K&#xA;i1q1cgEFSegAJ/UMiYFsGYFHq6uoZSGU9COmQbgW8VdirsVdiqjeW/1i2khrQuPhPgRuK/ThBpjK&#xA;NimD6tBItGZSskLcZEPY5mY5W6zNAgozS7iKZ4WkoAHUSDsN/wBWRmKZ45AkWzLMR2SVeYpP9DEI&#xA;O8pNfkB/XLMQ3tx9QdqY5b6gsUKS+qUelDxJDbbHpvmQYWXDjOhan9bublj6C0BPxSvvh4QOaOIn&#xA;kmelaJJLIJZKlf2pW6keC5XPI3YsJO7KQAAANgOmYznuxV2KoS/1KKzKBlLM9aAGmwyUY215Mgir&#xA;Wt1FcxepGduhB6g+BwEUyjMSFhhV0Z7O+kNwhCvQcutKZliiNnWyuMt090nV40iWKU1i/wB1yDel&#xA;exymcHJxZgBRTuOSORQ8bBlPQg1ykhygbQ+pXv1O1MoALVCoD0qfHJRjZY5J8ItJj5rKg8jET2Iq&#xA;f1E5d4Li/mvckuqaoLpW+Mu7kcjQgUHYZbCFOPkycSt5T8v2Go+tqV7GJ0V/Sto2+xRPtMR0arGg&#xA;zGyyuTn4IcMQzaONI0VI1CIooqqKAAdgBlbc3irsVdiqUeZ9NnvdNP1ZBJcwtzjQmhYdGUHtXJwm&#xA;Ylqy4hMUwcnXEFH0+9VF6kRuQKfhl3jjucY6SXejdM1Uhl5N3+Bz1BG1GrlhAkLDSCYmiy2wu13d&#xA;Pst/eR+B8RmLIObjkmiOriqmoyDeC53VELuaKoqScUE0oWt/a3JIierDqp2OSMSGMcglyRGRZuxV&#xA;A6rpkV5Cx4j1gKA+I/lOThKi1ZcfEGD/ALywuypB49x4j+ozN+oOs+kp9bavdpCPSlrHT4agGg+n&#xA;McwDkxzSA2KVX+r3E81EYu5259foUZbHGA0zykluy0WSWQBgZHO/Ben0nGWSlhiJLKbHRIIQGmAd&#xA;h0QfZH9cxpZCXOhgA5pmBTYdMrb3Yq7FXYqxjzZIvqfF1VVCeIYkmozIwhwdUd0b5bWULIW3HFQx&#xA;8W3yOVs017o7UtMhvYyGAEgFAx/UchGdNuTEJBh1zaXWnTOEFUU/HGd6f5+OZQkJOvlEwKN03Vyr&#xA;8oWo37UTdDkJwZ48tckTrOpteWTR+nwVQWO9akA07DI44UWzNl4hTHbPRNY1Nm+otCkcYHNpSR8T&#xA;V6UDdhksuQxNBGnwxlGymEP5f6pLQXuoqsf7SwqSSO4qeH6soOSR6uXHDCPIMysLG2sLOK0tl4ww&#xA;jio6nxJPuTvkGxXxV2KuxV2KuxV2KsZ82aLyQ6jbJ8ab3SKN2Uft0HUr39vlluLJwnycfPh4xtzS&#xA;PTtVMQUM54/sSLvt9HUZkyiDuHBjMxNFMz5iVV+2GPiFNf4DK/BbvzCM03V4763mtppONR8DvQUP&#xA;UA+2QnDhNs8eXiBBSm1nksrvgDxBPKFvAnquWyFhojLhLMbK8juoQ6mjj7aeBzFlGnYwmJBEZFm7&#xA;FWM+a7CGomBCswLE+60r9+ZGGRcHVQHNi6SzemYUJ4ufsjMkgc3DBPJO9G0WSR+nx/tueij+uU5M&#xA;jkYsJLLba2t7WMIlBXqx6k5ikkufGIiFbAzdirsVdirsVYXq85vNVC/sKeRHsuwzLgKi63LLikm+&#xA;n6rb2lqyOjFuRaopQ1yqUCS348oiEBc+bbj6xRPgjHUKA33k5OODZrlqjaibn61I9wJOTSGr7eAA&#xA;G3yGHhpgZ8W6XX8METc424SdeA/X7ZbAktUwAhZtVkUcJJlWo3B4gkfrwHhHNMYzlyCeeQ7xZbm9&#xA;ii+JAiM0m9OQLAD8cx80wTs5umxmINsxylyXYq7FXYq7FXYq7FXYq7FWNat5JtrmVp9PnNjK+7oF&#xA;DRMfHhtxPyyUZEcmEscZcwgbf8vZWPK81OQn+WFeAH0kn9WJnI9VGKI6IS7sJtDvFidzPG61WSlC&#xA;Vr39xmTjPFHzcDNDgltyKndXlrNFxowYbqaDY/fk4xIapSBbi1eWNFopMgFC4NP1YnGoyELW8xTq&#xA;45yKG7BmNfxOR4Y97MSmd6Kead5lldCGAcj9ltiPkR1GVyxN0NSUo1vU5rqcozVp1p0+Q+WXY4UG&#xA;jNkMiitD0n1ZUD7Oasx7qvt75DJNlhxWWWgW1lbmlEiXc+JP8TmLuS7DaIYZrevT3N1SNuEMZoq9&#xA;icy8eMAbuvy5jI7ck30jzETGqzKZE6FgRyQ+BqRUf5/KrJi32cjDn23Rlz5jtogOEZcn+Yhf65AY&#xA;izlqAOTcHmBGIE0RQH9pTX8MJxrHUd4TGO7tZF5JKpHzA++uVmJbhMHqgdQ1mGONkgYPIR9sfZX3&#xA;rk4w72rJmA5MRS8t0upXYk8qBWA2oBmVwmnXiQtUvL2JYKxsGLdD4e5wCPeyMu5Q0Py1e60jXj3D&#xA;WllUi34irSEGhY1ptXMeeUk7OdiwRiNxZa1DQtf02QgW7XkP7FxbAliP8qMVIP4ZOOfvapaQXsaQ&#xA;9rpHmPUJBHDZPaq32ri4BQAeNGFT9FcEs5PJMNIAbJtlml+R9FtI63Mf125P25ZtxU+CdPvqcoct&#xA;PLaztLWP07WFII61KRqEFfGgpiqrirsVdirsVdirsVdirsVdirsVdiqXa1oVnq0Cxzl45IyTDNGe&#xA;LqT1p7Gm+IKCAeaQJ+XcdW56ncEH7NBSnz3NclxHvR4ce4KyflxoY3lmuJW7lnUfqXIskXH5E8sI&#xA;tDalz/M0klfwYDFUl1zy/Jo9Lmz5vYr1/aaH59yn6svx5a2PJxc+nvePNKreaEyiZzzWvKq0NTmT&#xA;djZwKo7pkmsxxuHjDh13B2H8ch4bYMtclPUPMFxcIfUfiOnNiABXwGwGIgIplklN3lny/HrUr3l4&#xA;jHTYqpAtSnqPXdqihoP8++Y2XJxFzcGLgG/Mu1XTrrQbj1CxeyY0iuD7/sSU6N79/nlsMoIqTTl0&#xA;5BuKWwDVdWuHXTYDcFf7yVvhQe1SRjLPW0UQ0t7yV2n1PS3EN/C1sx+zz3ib/VcEj8cMcsZc9mM9&#xA;PKPLcItdWUj4oz9B2yzgaeNA6jq5ICH9r7EK7sxPTBKQh72UISyHbkj7Pyb5guofWmuI7ItukBXm&#xA;wH+V4ZjnNJzRpoAclyeQ9ekkCXN5AtsSBIY+RcrXegKgdPfAcsiKTHBCJsBnUEEUEKQQqEijUKiD&#xA;oABQDK25firsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirjShr074qwDXv8D/WX+re&#xA;v9bqef6P+zX35fB/wOEX0RKq3SA/Vf8AtY0+jJ+vza/3f9H7Ey0z/AXq/wCnfW/U7/Wfs1/54/F9&#xA;+VltHk9Gsfqn1OH6nx+q8B6PD7PGm1MVbu/qv1eT636f1an731acKf5XLbFVPT/0d9WH6O9H6tU0&#xA;+r8fTr3+xtireofUPqj/AF/0/qtP3nrU4fTyxV55qP8Agz1m/R317r8X1X+7/wCSnxYRfRjLh60m&#xA;3k3/AAl9ZPo+p+k6nj9cp6n/ADzp8P8AxtgZDyZrirsVdirsVdirsVdirsVdirsVdir/AP/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:b68223f1-c06e-7645-8837-415f3cac3628</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b68223f1-c06e-7645-8837-415f3cac3628</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:71ad8656-4792-45d2-8f7f-8ae4641badb7</stRef:instanceID>
            <stRef:documentID>xmp.did:2be6274d-8182-ae49-b6c2-c4441239a92a</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2be6274d-8182-ae49-b6c2-c4441239a92a</stEvt:instanceID>
                  <stEvt:when>2018-03-08T14:02:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b68223f1-c06e-7645-8837-415f3cac3628</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:18:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>274.809506</stDim:w>
            <stDim:h>149.745761</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -149.746 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 149.746 li
274.81 149.746 li
274.81 0 li
cp
clp
115.95 149.746 mo
114.868 149.746 113.793 149.688 112.73 149.572 cv
111.525 149.441 110.336 149.235 109.176 148.935 cv
109.079 148.907 li
107.501 148.492 105.972 147.912 104.52 147.139 cv
104.312 147.022 li
103.436 146.542 102.588 145.99 101.773 145.363 cv
101.312 145.008 100.861 144.629 100.422 144.224 cv
100.132 143.956 99.8455 143.679 99.5662 143.388 cv
99.3142 143.127 99.0681 142.857 98.826 142.576 cv
97.6619 141.231 96.658 140.323 95.489 139.795 cv
94.7644 139.468 93.9597 139.302 93.0301 139.256 cv
92.8338 139.246 92.6325 139.241 92.425 139.241 cv
92.328 139.241 92.2296 139.242 92.1297 139.244 cv
91.7898 139.256 91.4451 139.273 91.0662 139.313 cv
88.0378 139.632 85.2527 140.246 82.1658 140.257 cv
81.6932 140.259 81.2107 140.3 80.7234 140.362 cv
80.6277 140.374 80.53 140.39 80.4334 140.404 cv
80.2849 140.425 80.1375 140.445 79.99 140.469 cv
79.9031 140.484 li
79.3465 140.574 78.7869 140.677 78.2312 140.771 cv
77.5896 140.878 76.9529 140.972 76.3318 141.007 cv
76.3298 141.007 li
76.0396 140.747 75.6622 140.573 75.2446 140.573 cv
75.197 140.573 75.1489 140.575 75.1003 140.58 cv
74.9422 140.595 74.7791 140.635 74.6131 140.705 cv
73.7644 141.064 72.6124 141.24 71.4133 141.24 cv
69.7617 141.24 68.0209 140.907 66.8611 140.26 cv
64.0418 138.687 64.6482 137.077 63.5672 134.976 cv
62.74 133.37 61.7566 132.435 59.9265 132.241 cv
59.6717 132.214 59.4207 132.202 59.1722 132.202 cv
57.9307 132.202 56.7614 132.508 55.5924 132.814 cv
54.4231 133.12 53.2541 133.425 52.0125 133.425 cv
51.3241 133.425 50.6132 133.331 49.8679 133.091 cv
49.285 132.903 48.7224 132.677 48.1775 132.424 cv
47.8201 132.258 47.4812 132.062 47.1385 131.871 cv
46.9725 131.778 46.7996 131.696 46.6365 131.598 cv
46.1873 131.327 45.7566 131.03 45.3337 130.721 cv
45.2185 130.64 li
44.7596 130.3 44.3181 129.938 43.8904 129.558 cv
43.8875 129.556 li
43.8865 129.555 li
43.2693 129.009 42.6727 128.439 42.115 127.829 cv
41.5447 127.205 41.0144 126.548 40.5017 125.879 cv
40.3787 125.717 40.2566 125.557 40.1365 125.393 cv
39.6463 124.729 39.1736 124.056 38.7361 123.374 cv
37.4802 121.418 36.3806 120.052 34.0359 119.408 cv
32.9764 119.117 31.9049 119.069 30.8572 119.069 cv
30.5956 119.069 30.3354 119.072 30.0773 119.075 cv
29.8191 119.078 29.5633 119.081 29.3098 119.081 cv
27.0598 119.081 25.0145 118.842 23.5652 116.25 cv
22.5896 114.504 22.8806 112.389 22.696 110.425 cv
22.6629 110.08 22.615 109.74 22.5418 109.408 cv
22.5418 109.404 li
22.4685 109.072 22.3708 108.746 22.241 108.43 cv
22.241 108.43 li
22.1355 108.175 22.0154 107.924 21.8611 107.684 cv
21.7204 107.465 21.573 107.283 21.4236 107.116 cv
21.3289 107.014 li
21.1775 106.858 21.0232 106.718 20.863 106.605 cv
20.2878 106.199 19.6619 106.054 18.9919 106.008 cv
18.7664 105.992 18.536 105.988 18.3008 105.988 cv
17.9759 105.988 17.6422 105.997 17.3005 105.999 cv
17.2637 105.999 17.2267 105.999 17.1896 105.999 cv
16.9449 105.999 16.6958 105.994 16.4431 105.979 cv
16.4314 105.978 li
16.1316 105.959 15.8279 105.925 15.5193 105.866 cv
15.4214 105.848 15.3273 105.839 15.2365 105.839 cv
15.0855 105.839 14.9439 105.862 14.8103 105.9 cv
14.6844 105.927 li
14.5281 106.011 li
14.3464 106.109 li
14.1599 106.279 li
14.0682 106.364 li
13.6453 106.411 13.2322 106.458 12.8172 106.505 cv
12.7215 106.516 li
12.4471 106.547 12.1717 106.574 11.9001 106.603 cv
11.5926 106.635 11.2859 106.664 10.9812 106.692 cv
10.7449 106.714 10.5057 106.735 10.2703 106.753 cv
9.80153 106.788 9.33379 106.816 8.86694 106.83 cv
8.75636 106.834 8.64578 106.834 8.5352 106.834 cv
8.51638 106.834 8.49755 106.834 8.47872 106.834 cv
8.45716 106.834 8.43559 106.834 8.41402 106.834 cv
8.36088 106.834 8.30775 106.834 8.25466 106.835 cv
8.17153 106.835 8.08842 106.836 8.00528 106.836 cv
7.77293 106.836 7.54042 106.833 7.30741 106.825 cv
7.27043 106.824 7.23347 106.823 7.19645 106.823 cv
7.17713 106.823 7.15779 106.823 7.13845 106.823 cv
7.11823 106.824 7.09801 106.824 7.07775 106.824 cv
7.03397 106.824 6.99007 106.823 6.94609 106.821 cv
6.95387 106.805 li
5.86015 106.748 4.76149 106.61 3.63647 106.327 cv
3.43339 105.146 3.13062 103.962 2.66576 102.771 cv
2.49488 102.333 2.60626 101.925 2.86108 101.618 cv
2.48511 99.2663 2.4871 96.5539 2.24976 94.9655 cv
1.68432 91.1784 .546651 86.9777 1.19312 83.1369 cv
2.04371 78.0905 6.01343 72.3024 10.2732 68.6359 cv
10.034 68.5632 9.79375 68.4953 9.5476 68.4402 cv
8.30447 68.0749 7.84161 66.4734 8.78198 65.5407 cv
13.0574 61.2985 17.577 57.3332 22.1072 53.3674 cv
24.3474 51.407 26.6443 48.7639 29.2801 46.968 cv
26.3152 46.4548 23.3475 45.9475 20.407 45.3366 cv
18.5369 44.9484 16.5095 44.7424 16.1658 42.57 cv
15.5008 38.3601 22.2048 34.3986 25.2683 32.9582 cv
31.8259 29.8747 39.2683 28.4597 46.2058 26.4875 cv
53.0037 24.5549 63.7224 23.4064 66.8728 16.095 cv
67.119 15.5247 67.8469 15.1957 68.4813 15.1957 cv
68.6394 15.1957 68.7919 15.2162 68.9295 15.2585 cv
72.0994 16.2317 74.4939 17.925 76.2576 20.5539 cv
78.0476 19.8723 79.948 19.424 81.5799 18.4841 cv
85.8298 16.0359 84.0017 13.8273 83.8435 10.3317 cv
83.7899 9.15047 84.8183 8.46312 85.8528 8.46312 cv
85.9861 8.46312 86.1196 8.47454 86.2507 8.49778 cv
89.3309 9.04319 91.8308 9.95088 94.5379 11.2326 cv
94.6785 11.1369 94.8406 11.0573 95.0388 11.0114 cv
104.868 8.71456 114.673 7.68379 124.333 4.45872 cv
124.494 4.40481 124.676 4.37865 124.865 4.37865 cv
125.403 4.37865 125.995 4.59137 126.307 4.98067 cv
128.041 7.13982 129.821 9.2546 131.633 11.3469 cv
139.573 8.79216 147.547 6.3054 155.545 3.93869 cv
157.097 3.47947 158.522 2.99995 159.951 2.99995 cv
160.904 2.99995 161.859 3.21359 162.853 3.78927 cv
166.188 5.71995 167.718 8.48801 171.854 9.42845 cv
172.074 9.50213 li
173.442 7.13982 175.938 5.49237 178.26 4.05344 cv
178.529 3.88747 178.891 3.79125 179.249 3.79125 cv
179.576 3.79125 179.899 3.87189 180.141 4.05344 cv
184.738 7.50217 189.192 11.5754 194.129 14.529 cv
198.977 17.4294 205.559 16.8767 211.065 17.28 cv
213.656 17.4699 216.314 17.5383 217.095 20.5241 cv
217.816 23.2785 216.707 26.9914 215.715 30.2502 cv
218.969 29.3312 222.225 28.4236 225.484 27.5197 cv
227.673 26.9123 230.091 25.9523 232.439 25.9523 cv
233.228 25.9523 234.01 26.0608 234.771 26.3274 cv
237.416 27.2527 239.391 29.7687 241.337 31.6716 cv
244.601 34.8639 247.851 38.071 251.104 41.2751 cv
251.954 42.112 251.888 43.1433 251.383 43.9108 cv
251.806 45.6784 252.182 47.4524 252.541 49.238 cv
253.084 51.9362 252.747 54.115 255.486 55.3151 cv
259.081 56.8903 263.047 57.6022 266.657 59.152 cv
272.67 61.7322 273.552 69.7502 274.224 75.5285 cv
274.43 77.2986 274.669 79.2438 274.696 81.1682 cv
274.756 81.2346 li
274.809 81.3127 li
274.706 83.3024 274.73 84.9582 273.627 86.9406 cv
272.787 88.4494 271.736 89.8356 270.614 91.1599 cv
270.449 91.3566 270.283 91.5524 270.114 91.7463 cv
269.907 91.9821 269.703 92.2179 269.492 92.4499 cv
269.107 92.8767 268.719 93.299 268.328 93.714 cv
266.799 95.3391 265.224 96.9245 263.665 98.5212 cv
262.129 100.093 259.633 103.454 257.409 103.929 cv
257.26 103.961 257.128 104.01 257.012 104.072 cv
256.812 104.219 li
256.712 104.293 li
256.373 104.379 256.068 104.475 255.778 104.577 cv
255.537 104.667 li
255.314 104.754 255.105 104.847 254.909 104.947 cv
254.741 105.029 li
254.506 105.159 254.291 105.301 254.092 105.457 cv
253.967 105.564 li
253.806 105.698 253.658 105.843 253.518 106 cv
253.407 106.121 li
253.253 106.308 253.11 106.512 252.976 106.733 cv
252.874 106.913 li
252.758 107.119 252.647 107.339 252.544 107.576 cv
252.491 107.693 li
252.375 107.969 252.267 108.271 252.162 108.591 cv
252.084 108.837 li
251.98 109.171 251.879 109.519 251.779 109.903 cv
250.962 113.043 249.793 115.067 246.399 115.887 cv
243.328 116.629 240.011 116.906 236.871 117.063 cv
236.477 117.082 236.045 117.278 235.742 117.581 cv
235.571 117.785 li
235.558 117.807 li
235.445 118.015 li
235.417 118.112 li
235.373 118.274 li
235.36 118.367 235.357 118.463 235.371 118.563 cv
235.604 120.33 235.923 121.966 236.262 123.695 cv
236.717 126.005 237.285 128.606 234.064 129.638 cv
232.952 129.994 231.364 129.829 230.221 130.025 cv
229.851 130.088 229.497 130.175 229.151 130.271 cv
227.575 130.707 226.213 131.45 224.914 132.278 cv
224.79 132.36 li
223.749 133.031 222.739 133.745 221.685 134.388 cv
221.526 134.483 li
221.356 134.584 221.186 134.685 221.013 134.782 cv
220.907 134.843 220.799 134.899 220.69 134.957 cv
220.559 135.027 220.429 135.099 220.297 135.166 cv
220.117 135.256 219.933 135.34 219.75 135.423 cv
219.544 135.519 li
219.292 135.628 219.035 135.73 218.772 135.823 cv
218.764 135.824 li
218.728 135.838 li
218.617 135.839 li
218.529 135.844 218.442 135.843 218.346 135.866 cv
217.085 136.178 215.988 136.34 214.956 136.34 cv
213.005 136.34 211.287 135.761 209.128 134.518 cv
207.844 133.779 206.417 132.474 204.871 132.375 cv
204.623 132.383 li
204.617 132.377 li
204.278 132.383 203.949 132.44 203.63 132.546 cv
203.629 132.548 li
201.564 133.232 199.91 135.809 198.677 137.822 cv
198.595 137.957 198.513 138.089 198.435 138.217 cv
198.357 138.344 li
198.291 138.453 li
198.14 138.698 197.995 138.933 197.859 139.144 cv
197.472 139.746 196.734 141.555 196.223 141.931 cv
196.082 142.035 195.92 142.12 195.75 142.198 cv
195.634 142.254 195.513 142.303 195.387 142.348 cv
195.387 142.349 li
194.657 142.613 193.783 142.71 192.912 142.71 cv
192.842 142.71 192.771 142.709 192.701 142.708 cv
192.699 142.708 li
192.489 142.705 192.285 142.697 192.081 142.684 cv
191.994 142.678 li
191.807 142.666 191.626 142.652 191.447 142.634 cv
191.256 142.613 li
191.114 142.598 190.973 142.583 190.841 142.565 cv
190.638 142.538 190.446 142.51 190.269 142.481 cv
189.966 142.431 189.676 142.368 189.389 142.303 cv
188.383 142.075 187.455 141.807 186.43 141.799 cv
186.394 141.797 186.359 141.797 186.324 141.797 cv
186.179 141.797 186.043 141.809 185.905 141.819 cv
185.758 141.831 185.61 141.846 185.458 141.872 cv
185.293 141.902 185.127 141.931 184.972 141.98 cv
184.64 142.062 184.325 142.174 184.017 142.299 cv
183.845 142.367 li
183.566 142.489 183.296 142.627 183.031 142.777 cv
182.794 142.917 li
182.559 143.059 182.328 143.208 182.103 143.367 cv
181.999 143.441 181.896 143.518 181.794 143.594 cv
181.635 143.714 181.476 143.835 181.32 143.961 cv
180.251 144.815 179.241 145.781 178.149 146.606 cv
178.097 146.646 li
177.955 146.752 177.809 146.855 177.664 146.956 cv
177.54 147.043 li
177.407 147.133 177.271 147.217 177.136 147.301 cv
176.973 147.403 li
176.834 147.485 176.69 147.56 176.547 147.635 cv
176.401 147.715 li
176.397 147.716 li
176.373 147.729 li
176.095 147.768 175.815 147.884 175.56 148.127 cv
174.529 149.106 173.06 149.472 171.446 149.472 cv
168.222 149.472 164.42 148.009 162.378 147.034 cv
162.063 146.884 161.746 146.717 161.426 146.541 cv
161.346 146.498 li
161.065 146.342 160.781 146.179 160.495 146.013 cv
159.764 145.589 159.02 145.146 158.26 144.746 cv
156.856 144.008 155.399 143.425 153.889 143.425 cv
153.712 143.425 153.534 143.433 153.355 143.449 cv
153.253 143.459 153.167 143.489 153.07 143.505 cv
151.081 143.82 150.052 145.314 148.525 146.316 cv
148.469 146.355 li
148.237 146.504 147.995 146.642 147.734 146.762 cv
147.537 146.853 147.346 146.914 147.158 146.963 cv
147.035 146.992 li
146.853 147.031 146.675 147.058 146.501 147.062 cv
146.483 147.062 146.465 147.062 146.447 147.062 cv
146.245 147.062 146.048 147.037 145.856 146.995 cv
145.857 146.995 li
145.855 146.995 li
144.572 146.715 143.497 145.57 142.385 144.505 cv
142.244 144.369 142.102 144.236 141.96 144.105 cv
140.281 142.571 138.678 141.155 137.244 139.377 cv
137 139.075 136.621 138.937 136.233 138.937 cv
135.687 138.937 135.122 139.21 134.887 139.681 cv
133.468 142.537 131.377 144.881 129.422 147.356 cv
125.235 148.745 120.711 149.693 116.293 149.742 cv
116.194 149.745 li
116.113 149.745 116.031 149.746 115.95 149.746 cv
150.4 90.9104 mo
150.481 90.9104 150.563 90.9126 150.647 90.9172 cv
154.438 91.1252 155.262 97.717 154.693 100.482 cv
153.579 105.884 147.551 109.32 142.721 110.804 cv
142.187 110.968 141.88 111.331 141.751 111.746 cv
139.682 113.083 137.873 114.998 136.102 116.597 cv
131.765 120.514 127.057 123.161 122.41 126.585 cv
119.331 128.852 112.496 137.395 118.959 140.046 cv
119.79 140.387 120.584 140.539 121.346 140.539 cv
126.809 140.539 130.628 132.714 134.778 130.56 cv
135.312 130.283 135.83 130.163 136.337 130.163 cv
139.356 130.163 141.975 134.424 145.136 135.103 cv
145.766 135.238 146.397 135.289 147.028 135.289 cv
148.649 135.288 150.271 134.956 151.887 134.875 cv
152.126 134.863 152.361 134.857 152.591 134.857 cv
156.008 134.857 158.448 136.133 161.596 137.446 cv
161.795 137.529 161.981 137.567 162.153 137.567 cv
162.641 137.567 163.009 137.264 163.211 136.846 cv
165.484 137.22 167.863 137.633 170.189 137.633 cv
172.071 137.633 173.918 137.362 175.647 136.582 cv
180.114 134.567 182.182 129.719 183.276 125.235 cv
183.992 122.3 184.299 119.282 184.964 116.337 cv
185.267 114.994 185.762 112.242 186.651 111.265 cv
186.937 111.257 187.214 111.253 187.481 111.253 cv
192.265 111.253 193.95 112.538 192.538 115.107 cv
192.237 115.91 191.908 116.702 191.549 117.481 cv
190.498 120.173 189.184 124.133 191.953 126.305 cv
192.911 127.056 194.077 127.327 195.303 127.327 cv
197.315 127.326 199.485 126.597 201.144 126.071 cv
203.913 125.194 208.107 124.327 208.722 120.922 cv
209.357 117.403 205.817 114.224 203.523 112.154 cv
201.888 110.679 198.634 108.427 198.513 106.026 cv
199.546 103.133 200.796 101.687 202.265 101.687 cv
203.158 101.687 204.132 102.222 205.185 103.291 cv
205.694 103.758 206.169 104.257 206.609 104.789 cv
207.644 105.959 208.573 107.224 209.56 108.436 cv
209.851 108.794 210.194 108.94 210.53 108.941 cv
213.989 111.851 221.371 116.519 226.265 116.518 cv
228.704 116.518 230.526 115.36 230.937 112.248 cv
231.213 110.162 230.069 110.684 232.46 109.039 cv
234.307 107.768 235.519 108.201 237.556 107.881 cv
240.297 107.45 242.342 105.933 244.296 104.049 cv
246.636 101.793 251.789 96.8478 249.78 93.05 cv
248.422 90.4835 244.773 89.8396 241.481 89.8396 cv
239.843 89.8396 238.294 89.9991 237.16 90.1603 cv
230.058 91.1706 224.432 96.2785 217.541 97.4611 cv
217.106 97.5358 216.649 97.5718 216.178 97.5718 cv
212.222 97.5718 207.266 95.0239 205.877 91.3835 cv
204.528 87.8508 205.958 83.7526 206.561 80.173 cv
207.063 77.1985 207.05 74.195 207.168 71.1877 cv
207.327 67.1135 208.186 63.1564 208.502 59.111 cv
208.671 56.9426 208.443 55.1828 207.833 53.1545 cv
207.601 52.3854 206.981 51.2883 207.009 50.4909 cv
207.043 49.5097 207.393 49.144 207.878 49.144 cv
208.636 49.144 209.725 50.0356 210.465 50.8684 cv
212.33 52.9685 212.641 56.3518 213.05 59.0236 cv
213.679 63.1516 214.505 67.2467 215.133 71.3728 cv
215.737 75.3483 214.778 82.3 219.408 84.2731 cv
220.172 84.5987 220.994 84.7418 221.839 84.7418 cv
224.97 84.7418 228.423 82.7771 230.435 80.8367 cv
234.465 76.9518 236.34 71.0959 235.466 65.6169 cv
234.962 62.4572 233.754 59.4646 232.914 56.3884 cv
232.52 54.944 230.223 49.5447 231.017 48.3786 cv
231.45 47.7422 233.531 47.4248 234.624 47.4248 cv
234.893 47.4248 235.101 47.4439 235.212 47.4821 cv
235.59 47.613 236.121 48.4152 236.374 48.7126 cv
237.334 49.8439 238.177 51.1462 238.908 52.4421 cv
240.853 55.8879 241.669 59.6296 242.047 63.5383 cv
242.558 68.8327 241.689 74.9289 243.409 80.0373 cv
245.09 85.031 250.246 85.8142 254.904 86.4445 cv
255.862 86.5741 256.811 86.6561 257.73 86.6561 cv
260.961 86.6561 263.816 85.6415 265.316 82.1105 cv
267.545 76.8649 264.482 69.2634 261.174 65.1223 cv
259.026 62.4343 256.482 61.0373 253.471 59.486 cv
248.803 57.0812 246.835 53.7048 245.519 48.9714 cv
245.647 48.6936 245.683 48.3596 245.567 47.9763 cv
242.827 38.982 233.94 32.8263 224.591 32.8263 cv
223.805 32.8263 223.016 32.8698 222.227 32.9587 cv
220.057 33.2033 218.026 34.0334 215.89 34.4269 cv
215.326 34.5308 214.788 34.5889 214.278 34.5889 cv
212.646 34.5889 211.297 33.9952 210.284 32.4015 cv
209.024 30.4186 209.677 28.3571 209.213 26.1702 cv
208.293 21.8302 204.663 21.2668 200.828 20.3894 cv
197.283 19.5784 193.623 18.7278 190.187 17.529 cv
187.086 16.4465 184.383 14.5784 181.353 13.341 cv
179.619 12.6326 177.996 12.2767 176.44 12.2767 cv
173.941 12.2767 171.611 13.1934 169.253 15.0407 cv
164.651 18.6467 161.916 23.9362 158.594 28.6179 cv
155.531 32.9343 151.506 37.0798 150.051 42.3039 cv
148.059 49.4528 154.526 54.122 161.028 54.122 cv
162.131 54.122 163.234 53.9878 164.298 53.7087 cv
169.168 52.4308 172.245 47.8728 175.767 44.6565 cv
177.309 43.2472 178.986 41.7795 181.104 41.3952 cv
181.404 41.3407 181.694 41.3147 181.974 41.3147 cv
185.44 41.3147 187.318 45.3041 186.727 48.6262 cv
186.027 52.5632 183.151 56.3718 180.83 59.5505 cv
177.163 64.572 172.349 68.8317 166.327 68.8317 cv
164.994 68.8317 163.601 68.6228 162.149 68.1672 cv
155.323 66.026 150.054 60.7643 142.994 58.9816 cv
138.383 57.8166 133.631 57.8293 128.95 57.1462 cv
126.877 56.844 124.694 56.4914 122.744 55.6867 cv
118.697 54.0178 120.132 51.6003 122.234 48.6154 cv
131.453 35.528 144.095 25.133 156.118 14.8537 cv
158.151 13.1149 160.06 9.5549 156.114 8.69158 cv
155.858 8.63547 155.597 8.6102 155.334 8.6102 cv
153.712 8.6102 152 9.57238 150.611 10.1897 cv
146.233 12.1335 141.768 13.8513 137.324 15.6379 cv
135.114 15.4509 132.88 15.0539 130.821 14.2688 cv
128.495 13.3821 126.627 11.7092 124.348 10.7668 cv
123.062 10.2346 121.806 10.0294 120.564 10.0294 cv
116.506 10.0294 112.608 12.2231 108.355 12.3596 cv
108.15 12.3661 107.945 12.3687 107.741 12.3687 cv
107.366 12.3687 106.995 12.3599 106.628 12.3512 cv
106.261 12.3424 105.898 12.3336 105.542 12.3336 cv
103.683 12.3336 101.983 12.573 100.61 14.299 cv
98.8816 16.4714 98.6902 19.6902 98.5515 22.3425 cv
98.508 23.1655 98.3889 31.2941 96.5009 31.2941 cv
96.0591 31.2941 95.5203 30.8487 94.8631 29.7605 cv
92.9305 26.5602 95.9197 21.1935 93.9783 17.6023 cv
93.1825 16.1304 92.3204 15.5439 91.4605 15.5439 cv
88.7607 15.5439 86.083 21.326 85.5535 23.6471 cv
84.9558 26.2648 84.6687 29.3781 86.3103 31.6857 cv
87.5613 33.446 89.9509 34.5691 91.5603 35.9358 cv
94.6248 38.5398 97.6384 42.2145 98.697 46.1931 cv
99.4781 49.1301 98.167 49.9618 96.2634 49.9618 cv
94.2994 49.9618 91.7047 49.0757 90.1287 48.7023 cv
88.5709 48.3332 87.1399 48.1147 85.7154 48.1147 cv
84.1304 48.1147 82.5534 48.3853 80.8191 49.0202 cv
76.5964 50.5666 73.0662 53.4572 69.5057 56.1174 cv
66.4558 58.3967 62.949 60.674 60.946 64.0089 cv
57.246 70.1696 62.1071 75.6096 68.5068 75.609 cv
68.627 75.609 68.7487 75.6071 68.8699 75.6032 cv
74.4402 75.425 77.8523 71.5378 82.8601 69.8723 cv
83.7992 69.56 84.6106 69.4184 85.307 69.4184 cv
90.1767 69.4184 89.4213 76.3392 87.3025 80.1877 cv
85.6629 83.1637 83.5583 85.8381 80.4402 87.3147 cv
78.0195 88.4612 75.5079 88.8259 72.9638 88.8259 cv
69.7839 88.8259 66.554 88.2555 63.3943 87.9289 cv
62.7268 87.8599 62.0555 87.8312 61.3813 87.8312 cv
59.7322 87.8312 58.0669 88.0028 56.4033 88.1743 cv
54.7396 88.3459 53.0777 88.5174 51.4353 88.5174 cv
49.6405 88.5174 47.869 88.3125 46.1443 87.6789 cv
45.9591 87.6109 45.7849 87.58 45.623 87.58 cv
44.8197 87.58 44.3237 88.3427 44.3318 89.1144 cv
43.9295 88.9656 43.5925 88.8425 43.3885 88.7843 cv
40.2244 87.8796 37.1208 87.1189 33.8621 86.6462 cv
30.9115 86.2183 26.5876 84.6665 23.0143 84.6665 cv
21.9883 84.6665 21.0235 84.7946 20.1717 85.114 cv
16.8123 86.3733 14.6726 95.3298 19.2214 95.9465 cv
19.2989 95.9569 19.3744 95.962 19.448 95.962 cv
19.7444 95.962 20.0084 95.8806 20.2361 95.7487 cv
20.3337 95.7946 li
20.3152 96.4138 20.615 97.0524 21.3465 97.3215 cv
22.8074 97.8581 25.2439 98.5085 25.5984 100.221 cv
25.9852 102.087 25.4265 103.941 26.1746 105.774 cv
26.4577 106.468 27.0774 106.768 27.6815 106.767 cv
27.9754 106.767 28.2657 106.697 28.5115 106.566 cv
29.0056 107.371 29.8162 108.057 31.1707 108.6 cv
32.8035 109.254 34.5848 109.468 36.3005 109.887 cv
37.1062 110.188 37.9363 110.476 38.7732 110.769 cv
39.2576 111.006 39.7645 111.23 40.2634 111.303 cv
41.7283 111.843 43.1619 112.438 44.4285 113.201 cv
46.7625 114.609 48.3171 116.784 50.0896 118.788 cv
51.4255 120.298 52.7722 121.847 54.699 122.608 cv
57.7 123.793 60.6414 123.072 63.2693 125.5 cv
64.4137 126.557 66.1698 128.632 67.9973 128.632 cv
68.3609 128.632 68.7276 128.55 69.0925 128.361 cv
71.8064 126.958 69.4226 123.958 69.4402 121.928 cv
69.4503 120.776 69.5606 120.349 69.8244 120.349 cv
70.1456 120.349 70.6946 120.983 71.5672 121.712 cv
72.0994 122.157 72.5291 122.773 73.0193 123.271 cv
74.6394 124.917 76.4041 126.478 78.2801 127.83 cv
83.1619 131.349 87.6365 130.374 93.1404 132.1 cv
95.5847 132.866 98.0652 133.676 100.537 133.676 cv
102.022 133.676 103.504 133.383 104.972 132.614 cv
107.759 131.155 109.479 128.313 108.947 125.142 cv
107.345 115.605 85.9861 108.736 95.1101 98.216 cv
99.3582 93.3176 104.902 89.822 109.88 85.7541 cv
114.433 82.0319 118.99 78.3317 123.917 75.1071 cv
125.848 73.8429 127.876 72.5515 130.05 71.7536 cv
130.866 71.4538 131.506 71.1209 132.09 71.1209 cv
132.572 71.1209 133.016 71.3479 133.489 72.008 cv
134.592 73.5461 133.743 73.7673 132.596 75.2751 cv
128.942 80.0827 124.882 84.7253 120.685 89.0646 cv
115.537 94.3874 107.356 99.9787 108.931 108.505 cv
109.806 113.236 114.442 116.377 118.939 116.377 cv
121.52 116.377 124.056 115.341 125.807 112.977 cv
127.059 111.287 127.486 109.299 127.857 107.269 cv
128.254 105.099 128.173 102.221 130.008 102.221 cv
130.474 102.221 131.065 102.407 131.819 102.839 cv
134.113 104.152 135.373 105.217 136.935 105.217 cv
137.966 105.217 139.129 104.753 140.808 103.591 cv
146.066 101.596 144.838 90.9104 150.4 90.9104 cv
23.2637 58.2633 mo
22.8129 58.2633 22.367 58.4757 22.075 58.9929 cv
20.529 61.739 17.3865 66.0446 19.0379 69.3776 cv
20.376 72.0775 24.0902 72.5691 27.4258 72.5691 cv
28.9295 72.5691 30.3569 72.4691 31.4539 72.4265 cv
36.8308 72.2174 42.4714 71.0266 46.5095 67.2341 cv
48.5525 65.3157 49.8474 62.8127 51.4568 60.548 cv
54.2645 56.5984 57.3318 54.0881 61.408 51.5509 cv
66.1775 48.5812 69.1121 45.3752 70.8992 39.9646 cv
72.1189 36.2692 74.9783 28.7863 71.8338 25.3161 cv
70.7472 24.1171 69.2731 23.6294 67.5745 23.6294 cv
61.0999 23.6294 51.3834 30.7254 47.616 32.572 cv
45.0164 33.8459 41.0457 33.8078 38.9216 35.8606 cv
36.9197 37.7956 37.3992 41.0236 37.2791 43.487 cv
37.0203 48.8396 34.1756 52.3659 29.7303 55.0934 cv
27.7556 56.3049 25.5632 57.0817 23.659 58.3161 cv
23.5293 58.2817 23.3963 58.2633 23.2637 58.2633 cv
44.3318 89.1144 mo
44.3318 89.1144 li
44.3318 89.1144 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.654902 .648627 .64549 rgb
f
13.0681 103.363 mo
13.3972 102.984 13.8982 102.747 14.5193 102.866 cv
17.031 103.349 19.2351 102.159 20.8611 104.684 cv
22.4842 107.206 21.1062 110.64 22.5652 113.25 cv
24.9949 117.596 29.0984 115.326 33.0359 116.408 cv
35.3806 117.052 36.4802 118.418 37.7361 120.374 cv
40.3943 124.515 43.9715 128.512 48.8679 130.091 cv
52.5701 131.284 55.4187 128.871 58.9265 129.241 cv
60.7566 129.434 61.74 130.37 62.5672 131.976 cv
63.6482 134.077 63.0418 135.687 65.8611 137.26 cv
67.8631 138.376 71.5955 138.559 73.6131 137.705 cv
74.2752 137.425 74.8982 137.62 75.3299 138.008 cv
77.2312 137.899 79.2752 137.264 81.1658 137.257 cv
84.2527 137.246 87.0379 136.632 90.0662 136.313 cv
90.7986 136.236 91.4353 136.226 92.032 136.256 cv
91.8504 136.225 li
90.5799 134.962 88.7107 134.318 86.9295 134.845 cv
86.698 134.914 li
85.9656 135.131 85.3543 135.503 84.8552 135.972 cv
82.9939 136.456 80.1717 136.198 78.5593 136.318 cv
76.1912 136.493 73.7967 136.831 71.4177 136.814 cv
69.3152 136.799 66.4773 136.879 65.0857 134.913 cv
64.2302 133.704 64.3377 132.026 63.2361 130.796 cv
60.8992 128.187 58.3826 129.082 55.4412 129.34 cv
51.1004 129.719 46.6248 125.834 43.2224 123.054 cv
40.491 120.822 38.9959 117.02 35.6463 115.682 cv
32.3572 114.368 29.1238 116.42 26.2078 113.818 cv
22.9295 110.893 23.9138 106.183 21.5115 102.924 cv
18.8562 99.3195 14.0701 100.647 10.2117 100.835 cv
8.04763 100.941 6.57205 102.139 5.94607 103.821 cv
8.28689 103.941 10.6043 103.644 13.0681 103.363 cv
cp
.764706 .890196 .921569 rgb
f
146.734 143.761 mo
148.745 142.836 149.757 140.871 152.071 140.504 cv
151.55 140.567 151.03 140.662 150.514 140.827 cv
149.18 141.254 148.012 142.027 146.929 142.892 cv
146.729 143.052 145.962 143.626 145.501 144.062 cv
145.889 144.053 146.299 143.962 146.734 143.761 cv
cp
f
97.826 139.576 mo
105.576 148.536 118.041 147.801 128.422 144.355 cv
130.377 141.881 132.468 139.537 133.887 136.68 cv
134.288 135.876 135.656 135.649 136.244 136.377 cv
137.678 138.155 139.281 139.571 140.96 141.105 cv
142.227 142.264 143.411 143.68 144.857 143.995 cv
144.269 143.325 143.27 142.26 142.959 141.863 cv
141.909 140.531 140.834 139.137 140.159 137.578 cv
138.532 133.821 132.066 134.835 131.329 138.733 cv
131.196 139.437 131.05 140.139 130.905 140.842 cv
126.781 141.017 122.996 144.12 118.803 144.826 cv
112.614 145.868 107.323 144.404 102.262 140.904 cv
99.8318 139.223 97.2508 137.646 94.4881 136.795 cv
95.658 137.322 96.6619 138.231 97.826 139.576 cv
cp
f
195.223 138.93 mo
195.734 138.555 196.472 136.746 196.859 136.144 cv
197.143 135.702 197.461 135.172 197.809 134.605 cv
197.245 135.264 196.739 136.081 196.347 137.085 cv
195.572 137.691 194.927 138.526 194.387 139.348 cv
194.693 139.238 194.983 139.108 195.223 138.93 cv
cp
f
203.871 129.375 mo
205.417 129.474 206.845 130.779 208.128 131.517 cv
211.428 133.418 213.699 133.768 217.346 132.866 cv
217.497 132.829 217.637 132.821 217.772 132.823 cv
221.873 131.37 224.591 127.819 229.22 127.025 cv
230.364 126.829 231.952 126.994 233.064 126.637 cv
236.285 125.605 235.717 123.005 235.262 120.695 cv
234.923 118.966 234.604 117.33 234.371 115.563 cv
234.26 114.725 235.142 114.099 235.871 114.063 cv
239.011 113.906 242.328 113.629 245.399 112.887 cv
248.793 112.067 249.962 110.043 250.779 106.903 cv
251.689 103.403 252.65 102.071 255.712 101.293 cv
255.883 101.125 256.108 100.993 256.409 100.929 cv
258.633 100.454 261.129 97.0935 262.665 95.5212 cv
264.224 93.9245 265.799 92.3391 267.328 90.7141 cv
268.702 89.2556 270.062 87.7321 271.239 86.0905 cv
268.762 85.1628 265.361 86.5358 265.013 90.0568 cv
264.472 95.5261 254.918 99.197 251.572 102.989 cv
249.673 105.143 248.47 107.915 246.54 109.971 cv
245.776 110.785 244.611 111.302 243.857 112.115 cv
238.78 109.687 232.809 114.437 231.8 119.26 cv
231.466 120.856 231.595 122.388 231.865 123.913 cv
229.613 124.05 227.387 124.875 225.521 126.125 cv
224.293 126.948 223.395 128.368 222.115 129.048 cv
218.631 130.898 214.29 130.413 210.648 132.236 cv
210.368 131.752 210.086 131.279 209.806 130.818 cv
206.37 125.164 198.497 127.927 197.986 134.019 cv
197.977 134.124 197.981 134.227 197.98 134.331 cv
199.428 132.003 201.396 129.217 203.871 129.375 cv
cp
f
174.56 145.127 mo
174.824 144.876 175.114 144.749 175.401 144.715 cv
178.61 143.114 180.709 139.543 184.398 138.879 cv
186.184 138.558 187.551 139.196 189.269 139.481 cv
189.935 139.592 190.805 139.693 191.701 139.708 cv
189.33 137.558 185.73 137.062 181.976 138.579 cv
179.25 139.682 177.425 142.268 174.727 143.034 cv
171.96 143.82 167.537 144.109 164.666 143.785 cv
163.117 143.611 162.112 142.843 160.654 142.309 cv
159.512 141.89 158.382 141.924 157.261 141.746 cv
158.685 142.495 160.057 143.404 161.378 144.034 cv
164.442 145.496 171.47 148.06 174.56 145.127 cv
cp
f
258.265 87.0178 mo
255.666 87.1608 252.505 85.9489 249.997 85.3049 cv
247.834 84.7492 245.458 83.9206 243.935 82.1857 cv
242.733 80.8171 242.519 79.3503 242.767 77.6062 cv
243.25 74.2116 243.979 70.5583 244.8 67.2263 cv
244.955 66.592 245.39 66.2692 245.879 66.1848 cv
245.764 65.8913 245.665 65.5949 245.565 65.298 cv
245.107 64.4538 244.825 63.5813 244.799 62.778 cv
244.808 62.695 li
244.29 60.6989 243.812 58.6989 242.825 56.8195 cv
241.342 53.9939 239.56 51.1574 237.86 48.4553 cv
236.385 46.1091 234.207 44.8356 231.769 44.196 cv
231.273 44.4001 230.825 44.6716 230.428 45.0114 cv
230.452 45.1799 230.47 45.3566 230.475 45.5466 cv
230.519 46.8498 230.189 48.1599 229.827 49.4729 cv
230.052 51.0505 229.874 52.7707 229.807 54.4416 cv
229.686 57.5246 231.582 58.5188 232.538 61.0314 cv
233.259 62.926 232.993 64.3269 232.715 66.2736 cv
231.943 71.6828 232.285 77.0017 227.689 80.8674 cv
225.676 82.5607 221.752 84.5886 219.084 83.3669 cv
215.475 81.7146 216.061 74.6682 215.551 71.6184 cv
215.084 68.8332 214.499 66.0041 214.246 63.1877 cv
213.951 59.9182 215.018 56.3005 214.081 53.1062 cv
212.967 49.3059 205.701 44.258 204.521 49.7175 cv
204.473 50.9377 204.515 52.1838 204.593 53.4377 cv
204.973 55.3161 205.704 57.111 205.854 59.0568 cv
206.281 64.5998 204.916 70.9929 203.771 76.6325 cv
204.049 76.9533 204.212 77.382 204.13 77.8986 cv
203.484 81.9528 203.608 85.4304 203.952 89.4777 cv
204.067 90.8405 203.716 92.7219 204.064 93.9953 cv
204.642 96.1115 206.506 96.5915 208.19 97.5173 cv
208.743 97.8215 208.95 98.3024 208.925 98.78 cv
209.034 98.8371 209.139 98.903 209.253 98.9548 cv
211.128 99.8161 212.926 99.7561 214.887 99.592 cv
215.109 99.5065 215.332 99.4191 215.555 99.3244 cv
216.837 98.3166 218.345 97.5661 219.719 97.1818 cv
222.105 95.7731 224.233 94.2883 225.569 93.5485 cv
230.383 90.8825 235.146 89.6154 240.662 90.4357 cv
243.1 90.798 248.934 91.592 249.63 94.7263 cv
249.864 95.7844 249.314 96.424 248.803 97.1867 cv
247.701 98.8317 246.553 97.8991 244.931 100.537 cv
244.196 101.734 244.005 103.003 243.103 104.132 cv
242.009 105.504 240.443 106.343 238.746 106.72 cv
236.526 107.213 234.238 106.043 232.174 106.449 cv
226.876 107.492 231.445 116.854 225.016 116.138 cv
222.927 115.905 221.56 114.455 220.039 113.217 cv
217.246 110.943 213.843 110.151 210.993 108.04 cv
208.873 106.47 208.314 104.623 206.929 102.512 cv
205.946 101.99 205.027 101.222 204.2 100.132 cv
204.129 100.038 204.079 99.9416 204.039 99.8459 cv
202.973 99.5773 201.916 99.6105 200.868 100.208 cv
200.716 100.95 200.117 101.429 199.42 101.435 cv
198.015 103.015 197.421 104.916 197.88 107.039 cv
198.002 107.607 197.823 108.073 197.505 108.4 cv
198.51 109.682 199.863 110.949 200.842 112.042 cv
202.676 114.091 204.729 115.596 206.729 117.44 cv
208.701 119.258 210.975 122.582 206.859 123.22 cv
205.913 123.366 204.659 122.654 203.746 122.664 cv
200.968 122.695 199.332 124.37 196.957 125.259 cv
195.531 125.793 193.637 126.535 192.271 125.437 cv
190.873 124.312 191.437 122.687 191.87 121.25 cv
192.45 119.318 193.531 118.133 193.539 115.946 cv
193.549 113.195 192.384 110.121 189.862 108.727 cv
188.162 107.786 186.833 107.655 185.801 108.053 cv
185.459 108.376 185.112 108.696 184.76 109.009 cv
184.116 111.801 183.484 114.623 183.312 117.491 cv
183.235 118.764 183.317 120.051 183.053 121.311 cv
182.899 122.045 182.694 122.588 182.439 123.004 cv
182.123 124.184 181.595 125.289 180.87 126.444 cv
180.966 127.674 180.799 128.903 180.38 129.899 cv
178.783 133.698 173.73 136.659 169.744 137.036 cv
164.472 137.535 160.926 132.665 155.621 133 cv
155.47 133.01 155.336 132.994 155.209 132.969 cv
151.188 133.661 146.585 135.474 142.513 134.821 cv
141.906 134.724 141.368 133.967 141.412 133.375 cv
141.42 133.281 141.434 133.19 141.447 133.098 cv
141.391 133.047 li
139.059 131.125 138.152 128.863 135.094 128.254 cv
133.598 129.665 132.122 131.103 130.681 132.592 cv
128.22 135.137 123.824 140.802 119.472 139.421 cv
118.998 139.271 118.708 138.964 118.537 138.568 cv
117.946 138.415 117.43 138.028 117.147 137.304 cv
116.621 135.957 117.719 134.224 118.542 133.233 cv
119.441 132.148 120.678 131.224 121.934 130.363 cv
125.864 126.311 130.065 122.535 134.678 119.254 cv
140.261 115.282 146.339 112.087 152.034 108.273 cv
154.683 105.6 155.477 102.875 155.435 99.4768 cv
155.155 97.78 154.823 96.0905 154.369 94.4152 cv
154.189 93.7526 153.977 92.6306 153.656 91.5564 cv
151.907 90.9431 150.159 90.3293 148.41 89.7155 cv
147.041 90.7961 145.802 92.3772 145.045 93.3215 cv
144.962 93.5241 144.861 93.7141 144.792 93.9274 cv
143.157 98.176 143.358 100.772 138.989 103.441 cv
137.822 104.154 136.733 104.723 135.379 104.247 cv
134.826 104.052 134.485 103.74 134.221 103.383 cv
134.123 103.288 134.03 103.181 133.95 103.049 cv
133.764 102.74 133.605 102.408 133.459 102.07 cv
133.259 101.725 133.022 101.394 132.661 101.119 cv
125.761 95.8811 126.422 109.271 123.881 112.016 cv
119.22 117.05 108.951 113.403 110.266 106.093 cv
110.986 102.097 115.277 97.988 117.974 95.1867 cv
119.996 93.0871 122.229 91.2961 124.505 89.5588 cv
127.959 84.9445 131.541 80.1618 133.803 74.8479 cv
134.333 73.6013 135.322 71.489 135.003 70.0769 cv
134.348 67.1926 131.47 69.2023 129.69 70.2087 cv
124.587 73.0949 120.077 76.9499 115.773 80.8947 cv
111.833 84.5065 107.587 86.5163 103.167 89.4436 cv
101.01 90.8718 98.7967 92.7277 96.5027 94.4201 cv
95.5769 95.6633 94.4256 96.6535 93.5593 98.0051 cv
90.8318 102.26 92.9705 105.605 95.7205 108.963 cv
98.3338 112.153 100.895 115.17 103.166 118.618 cv
106.651 123.91 110.682 127.136 104.072 131.913 cv
102.053 133.372 100.896 133.4 98.8474 132.147 cv
97.0408 131.042 95.8592 129.841 93.7263 129.418 cv
91.1033 128.897 88.8074 129.858 86.2615 129.805 cv
83.1267 129.739 81.1131 128.731 79.1717 126.244 cv
77.1472 123.654 72.7879 115.981 68.6677 118.028 cv
68.7263 118.715 68.2957 119.509 67.5818 119.634 cv
67.3982 119.666 67.2234 119.687 67.0613 119.777 cv
67.0564 119.779 li
66.9412 119.92 66.9265 120.165 66.9129 120.388 cv
66.866 121.154 66.9968 121.926 67.0584 122.688 cv
67.0545 122.882 li
67.5554 123.844 67.8582 124.923 68.5564 125.752 cv
69.7937 127.22 67.6804 129.352 66.4353 127.873 cv
65.2996 126.526 65.0047 124.632 63.7312 123.425 cv
62.9197 122.656 62.1092 122.113 61.6072 121.302 cv
59.1336 121.346 56.615 120.961 54.4256 119.983 cv
50.156 118.075 47.4861 113.678 43.8914 110.829 cv
40.9197 108.474 37.9793 107.957 34.2869 107.625 cv
32.781 107.489 31.0301 107.462 29.6492 106.764 cv
26.2312 105.037 28.3445 100.532 26.575 97.632 cv
26.4334 97.4001 26.3689 97.1721 26.3552 96.9538 cv
24.5476 96.197 22.6863 95.5764 20.784 95.134 cv
16.4109 94.1164 15.7918 91.2092 17.3084 86.9079 cv
19.2429 81.4196 25.7039 83.0808 30.2556 83.0705 cv
34.3572 83.0612 38.199 83.2194 42.0213 83.6193 cv
42.4588 83.3396 43.0261 83.2478 43.5652 83.5173 cv
43.7322 83.6008 43.8982 83.6843 44.0652 83.7673 cv
44.2146 83.8767 li
47.1189 84.2541 50.0398 84.7771 53.0818 85.4914 cv
53.6795 85.6315 54.0047 86.0192 54.1121 86.468 cv
54.3689 86.4919 54.6297 86.5197 54.8943 86.5539 cv
60.3904 87.2605 64.9578 89.591 70.6834 89.3127 cv
70.9676 89.2985 71.2049 89.3576 71.4051 89.4587 cv
72.409 89.3469 73.4129 89.2395 74.4197 89.1516 cv
75.5056 89.0568 76.5886 88.9636 77.6775 88.9157 cv
80.7556 88.7805 80.5779 89.1247 83.3718 86.905 cv
86.3406 84.5461 86.9343 82.2624 87.7752 78.6125 cv
88.2527 76.5383 88.7361 74.2897 88.7918 72.1687 cv
88.8152 71.2766 88.948 70.2038 88.616 69.3518 cv
88.6004 67.6218 87.3933 67.0896 84.9949 67.7546 cv
84.0545 67.1628 83.2371 66.885 82.531 66.8952 cv
81.3045 69.591 78.9402 72.1345 76.4861 73.7033 cv
74.2693 75.6418 71.3601 76.5549 68.4177 76.7346 cv
65.6922 76.9011 61.0984 76.4992 59.3103 73.9982 cv
57.6189 71.6335 59.3279 67.7312 60.3142 65.4177 cv
62.6931 59.842 68.6111 56.2341 74.3679 54.3044 cv
77.6638 51.9255 81.0935 49.3464 84.6023 47.9953 cv
88.8015 46.3781 93.1121 48.7785 96.9568 50.3664 cv
97.4705 50.5783 97.7625 50.9758 97.8826 51.4128 cv
98.8679 51.0598 99.5916 50.5168 99.7176 49.717 cv
99.4363 48.5422 99.0623 47.4997 98.6092 46.5373 cv
95.8992 44.153 92.7976 42.1799 90.0476 39.8596 cv
89.5838 39.6213 89.115 39.3913 88.6277 39.1862 cv
86.3738 38.2351 83.6189 37.298 82.4783 34.9094 cv
81.1951 32.2229 82.1804 29.2087 84.0154 26.8776 cv
85.0017 22.3479 87.1062 15.737 92.5584 15.2502 cv
93.0955 15.2019 93.574 15.5773 93.8533 15.9929 cv
94.8113 17.4187 94.6951 19.7219 95.0066 21.3596 cv
95.5017 23.9611 95.6316 26.569 95.6668 29.2009 cv
95.6863 29.2883 95.7068 29.3801 95.7302 29.4851 cv
96.3806 30.6057 96.8914 31.8908 97.0857 33.1477 cv
97.2215 33.3864 97.3533 33.6281 97.4832 33.8713 cv
97.7293 33.9753 97.9988 33.9074 98.2957 33.5935 cv
98.9802 32.8698 98.9041 28.0109 99.1326 26.6428 cv
99.158 26.4924 99.1824 26.3405 99.2078 26.1892 cv
99.2019 25.3757 99.2273 24.569 99.3318 23.781 cv
99.491 22.5856 99.8855 21.779 100.521 21.2487 cv
100.49 21.031 100.478 20.8142 100.49 20.5998 cv
99.7537 17.2116 100.027 14.1882 104.201 12.9216 cv
107.261 11.9929 110.699 11.8918 113.855 11.4846 cv
115.864 11.2253 120.782 9.35958 122.769 10.2414 cv
123.534 10.5808 123.807 11.2453 124.385 11.821 cv
126.059 13.4919 126.321 13.7185 128.158 14.3059 cv
132.2 15.5988 137.39 15.4148 141.436 14.32 cv
145.853 13.1257 149.109 10.3542 153.191 8.55635 cv
154.901 7.80342 156.429 7.5168 157.997 8.17012 cv
159.174 7.91524 160.278 9.28877 159.679 10.3244 cv
159.621 10.5793 159.502 10.8313 159.306 11.0607 cv
157.212 13.5134 154.509 16.0202 151.645 18.2512 cv
149.261 20.6174 146.333 22.7219 143.621 24.5598 cv
143.06 25.2121 142.444 25.8386 141.806 26.5192 cv
139.081 29.4289 136.527 32.5183 133.862 35.4831 cv
131.128 38.5236 128.348 41.5227 125.681 44.6232 cv
123.277 47.4177 119.991 50.5446 118.085 53.8356 cv
121.764 55.6291 126.328 56.0134 130.187 57.2404 cv
134.582 58.6374 138.754 60.3757 142.817 62.5446 cv
147.956 65.2883 152.506 65.9035 157.977 67.3454 cv
161.713 68.3293 166.085 71.8977 169.967 71.6726 cv
173.482 71.4685 178.084 63.7829 180.155 61.1921 cv
182.237 58.5871 188.089 53.4216 188.633 50.2263 cv
189.106 47.444 186.666 41.2766 184.013 40.5275 cv
183.744 40.4514 183.466 40.4323 183.184 40.4392 cv
182.233 40.7478 181.287 41.0637 180.379 41.4196 cv
179.923 41.6872 179.466 41.9909 179.011 42.3064 cv
178.997 42.5114 178.956 42.7233 178.853 42.9445 cv
176.723 47.5466 168.233 54.8718 163.034 55.3698 cv
159.961 55.6638 157.34 53.4924 154.838 52.0339 cv
152.567 50.7092 148.477 49.0056 147.317 46.3742 cv
146.489 44.4934 147.479 42.7087 148.623 41.2312 cv
151.335 37.7268 154.744 34.7063 157.548 31.2502 cv
162.489 25.1599 168.075 16.5388 175.462 13.153 cv
176.168 12.4357 177.462 12.1027 179.168 12.5383 cv
183.345 13.6047 187.493 16.3894 191.246 18.4108 cv
194.392 20.1052 197.451 21.4201 201.042 21.7873 cv
202.32 21.9177 203.608 21.5656 204.779 22.322 cv
207.28 23.9382 205.724 26.4709 205.871 28.8127 cv
205.903 29.3308 206.026 29.8767 206.21 30.4294 cv
206.741 31.3723 207.21 32.3703 207.711 33.3127 cv
208.878 34.9665 210.416 36.3625 211.786 36.8855 cv
212.948 37.3293 214.031 37.4138 215.099 37.3166 cv
215.219 37.0236 215.368 36.7321 215.57 36.444 cv
218.075 32.8737 224.93 32.6467 228.714 33.2697 cv
233.578 34.0715 237.817 37.2004 241.317 40.5451 cv
245.687 44.7219 244.617 50.2287 247.095 55.4328 cv
250.108 61.7575 257.3 59.9646 262.038 64.092 cv
262.902 64.7282 263.683 65.6189 264.339 66.8161 cv
267.47 72.5388 266.98 86.5378 258.265 87.0178 cv
cp
17.8172 66.2795 mo
20.5681 59.0817 27.2879 50.9885 33.3631 46.3298 cv
33.9177 45.905 34.5135 46.0207 34.949 46.3855 cv
35.2703 46.0368 35.5974 45.6926 35.9168 45.342 cv
36.5447 44.6525 37.909 43.5788 38.9519 42.4143 cv
39.1707 40.7458 37.9685 39.3103 36.95 37.757 cv
36.8328 37.5773 36.781 37.3884 36.7576 37.1989 cv
36.0427 36.9743 35.3582 36.7688 34.8631 36.5451 cv
33.3875 35.8776 34.2879 33.8435 35.6209 33.7502 cv
42.8191 33.2443 49.367 31.2839 55.9529 28.362 cv
59.9011 26.6106 64.1072 24.2263 68.3406 23.1838 cv
69.572 22.8801 71.1658 22.7512 72.1277 23.4919 cv
73.116 22.9997 74.6697 23.8 74.3172 25.2111 cv
73.5584 28.2429 72.9959 31.3366 72.1033 34.3327 cv
71.2752 37.1105 69.9695 39.7619 69.3445 42.5925 cv
68.4851 46.4802 66.9187 47.467 62.8318 48.759 cv
62.4343 48.885 62.0213 48.799 61.6795 48.5925 cv
61.4363 48.7214 61.1609 48.7658 60.8875 48.7522 cv
60.5779 48.9631 60.2771 49.1936 59.9802 49.4323 cv
58.5789 51.5017 56.9588 53.4646 55.5222 55.3928 cv
53.9812 57.4626 52.326 59.465 50.9265 61.6359 cv
49.7273 63.4953 49.0652 65.7966 47.7459 67.5432 cv
45.8679 70.0305 42.4802 70.1232 39.6043 70.5329 cv
38.0349 70.7561 36.4666 70.9235 34.9002 71.0783 cv
34.6853 71.1384 li
33.4431 71.465 29.7254 72.1921 26.824 71.9523 cv
26.3133 72.0246 25.8025 72.0998 25.2918 72.1848 cv
20.2605 73.0231 15.3445 72.7512 17.8172 66.2795 cv
cp
269.96 69.571 mo
269.63 64.4299 267.963 59.9533 263.416 57.1389 cv
259.804 54.9035 255.493 52.8449 251.202 51.8391 cv
250.305 48.2902 249.723 44.6169 248.131 41.2761 cv
245.914 36.6257 242.368 32.6467 238.14 29.7321 cv
230.797 24.6687 220.975 26.863 212.804 30.6037 cv
212.967 29.8669 213.121 29.1286 213.26 28.3864 cv
213.733 25.8635 214.723 22.7248 213.716 20.2502 cv
212.771 17.9323 210.39 16.7067 208.045 16.2473 cv
205.397 15.7287 202.908 16.9611 200.219 16.3615 cv
199.849 16.2795 199.494 16.2385 199.151 16.2287 cv
198.179 15.8132 197.207 15.3903 196.228 14.9685 cv
192.882 13.5266 188.018 12.7199 185.399 10.2121 cv
182.774 7.69893 181.417 4.79463 177.142 5.21065 cv
174.481 5.46993 172.283 7.0461 170.26 8.79366 cv
167.831 7.42891 165.668 5.4587 163.063 4.39766 cv
159.448 2.92549 156.401 3.90889 152.963 5.32881 cv
148.733 7.0754 144.108 7.61788 139.734 8.95967 cv
137.221 9.73018 134.76 10.6394 132.331 11.6335 cv
131.508 10.4724 130.681 9.31319 129.869 8.14131 cv
127.089 4.13399 124.698 2.67989 119.927 4.37862 cv
117.862 5.11397 115.809 6.0251 113.625 6.35665 cv
110.912 6.76827 108.161 6.47676 105.445 6.98995 cv
103.099 7.43331 100.869 8.40645 98.5174 8.80391 cv
96.4285 9.15694 94.3855 9.07442 92.3279 9.50118 cv
90.9832 8.55831 89.3269 8.23604 87.6355 8.9792 cv
85.322 9.99629 84.1502 12.3952 84.74 14.8781 cv
84.8543 15.3552 84.9734 15.8317 85.0799 16.3068 cv
81.5476 17.635 77.8728 18.5739 74.1111 19.0427 cv
73.907 19.0822 li
73.9041 19.073 li
73.2439 16.4543 70.3172 14.8767 67.7537 15.5808 cv
65.6004 16.1726 64.241 18.113 64.1365 20.2229 cv
51.1062 22.3293 38.6492 26.8098 26.1267 31.0427 cv
25.3631 31.301 24.7371 31.6804 24.2381 32.1413 cv
24.1248 32.1481 24.0164 32.1423 23.9011 32.1521 cv
17.5447 32.6862 17.4607 42.6486 23.9011 42.1521 cv
24.4773 42.1071 25.0613 42.0998 25.6482 42.1149 cv
25.9871 42.1916 26.322 42.3034 26.6482 42.4851 cv
27.7879 42.8806 28.8064 42.8635 29.6687 42.5612 cv
30.2459 42.6628 30.822 42.7731 31.3972 42.8942 cv
28.9646 45.0773 26.532 47.2614 24.0994 49.445 cv
20.4607 52.7106 16.8767 55.9133 14.3211 60.1081 cv
14.0613 60.3088 13.8142 60.5241 13.5515 60.7214 cv
11.5701 62.2102 10.8181 64.6555 11.4392 66.6867 cv
8.43533 69.321 5.85232 72.3435 4.19998 76.1848 cv
1.33181 82.8488 1.59646 90.048 2.86794 97.0476 cv
2.96072 97.5603 3.11501 98.0075 3.30935 98.4045 cv
3.79373 100.658 5.62087 102.594 8.48708 102.558 cv
9.74392 102.542 10.7517 102.144 11.5183 101.52 cv
14.5691 101.276 17.6101 101.1 20.657 100.756 cv
20.8875 102.316 20.99 103.894 21.241 105.43 cv
21.5017 106.062 21.6306 106.734 21.6961 107.426 cv
21.9715 108.356 22.3406 109.262 22.9021 110.122 cv
24.1433 112.028 25.8426 113.228 28.0359 113.742 cv
29.2635 114.03 30.3709 113.724 31.5467 113.825 cv
33.8211 114.021 34.0213 114.173 35.6336 116.012 cv
37.2224 117.824 38.3738 119.844 40.2576 121.409 cv
42.0847 122.927 44.2859 123.821 46.1941 125.215 cv
48.2 126.681 49.7224 128.239 52.3035 128.644 cv
53.491 128.829 54.8054 128.728 55.9802 128.504 cv
56.5271 128.335 57.075 128.166 57.6218 127.997 cv
57.9968 127.942 58.283 127.882 58.5281 127.821 cv
59.6248 129.092 61.1199 129.465 62.5535 129.206 cv
64.3738 137.075 71.8552 136.086 78.6629 136.013 cv
83.1873 135.965 87.1551 134.54 91.742 135.173 cv
96.072 135.771 97.6306 137.192 100.747 140.033 cv
105.829 144.668 113.386 146.228 120.068 145.022 cv
123.391 144.421 126.428 143.107 129.094 141.047 cv
131.59 139.119 133.358 136.355 135.822 134.433 cv
137.951 136.709 140.214 138.847 142.647 140.843 cv
145.745 143.384 149.529 142.286 151.004 138.637 cv
150.359 140.234 151.633 138.433 152.092 137.773 cv
153.226 139.246 158.26 140.78 159.663 141.345 cv
165.553 143.716 170.957 145.24 177.061 142.678 cv
178.127 142.231 179.137 141.678 180.135 141.103 cv
181.287 140.16 182.506 139.344 183.972 138.98 cv
184.259 138.842 184.548 138.708 184.842 138.585 cv
187.54 137.458 189.971 138.593 192.606 137.716 cv
195.352 136.802 196.442 134.484 197.734 132.14 cv
198.837 130.139 200.19 128.471 201.77 126.962 cv
202.358 127.205 203.03 127.344 203.796 127.329 cv
206.783 127.272 209.257 129.449 212.062 130.243 cv
214.752 131.004 217.572 130.984 220.135 129.821 cv
222.912 128.559 225.299 126.669 228.135 125.413 cv
230.744 124.258 233.283 122.79 234.311 119.966 cv
234.543 119.33 234.668 118.62 234.739 117.903 cv
234.604 117.134 234.476 116.364 234.371 115.563 cv
234.319 115.177 234.484 114.84 234.743 114.58 cv
234.721 114.292 234.7 114.004 234.678 113.715 cv
234.679 113.602 234.676 113.518 234.675 113.42 cv
237.604 112.333 240.853 112.383 243.823 111.559 cv
248.948 110.138 250.57 105.538 251.629 100.931 cv
254.671 98.9772 257.672 97.2141 260.4 94.6814 cv
263.992 92.3908 267.244 89.4323 269.521 85.8664 cv
272.709 80.8757 270.312 75.0578 269.96 69.571 cv
cp
f
97.9822 31.9348 mo
98.0545 32.3991 98.7615 32.4475 98.9666 32.0637 cv
99.2078 31.614 99.3816 31.1369 99.5232 30.6472 cv
99.2683 28.3107 99.0388 25.9856 99.3318 23.781 cv
99.3513 23.6359 99.3855 23.5153 99.4119 23.3815 cv
98.906 20.6975 98.1775 18.0212 98.0564 15.7854 cv
98.0193 15.112 97.0086 15.1018 97.0017 15.7854 cv
96.9724 18.5246 97.2635 21.2258 97.574 23.9421 cv
97.8787 26.6037 97.572 29.3205 97.9822 31.9348 cv
cp
.623529 .803922 .87451 rgb
f
53.0789 25.4846 mo
52.8982 25.4846 52.8972 25.7658 53.0789 25.7658 cv
53.2595 25.7658 53.2605 25.4846 53.0789 25.4846 cv
cp
f
36.5857 33.6574 mo
43.4041 33.05 49.6648 31.1516 55.9529 28.362 cv
56.951 27.9191 57.9646 27.4362 58.992 26.9445 cv
51.2986 27.7478 43.9929 31.2053 36.5857 33.6574 cv
cp
.921569 .956863 .956863 rgb
f
36.95 37.757 mo
36.8328 37.5778 36.781 37.3894 36.7576 37.2004 cv
36.0437 36.9748 35.3582 36.7692 34.8631 36.5451 cv
33.8357 36.0803 33.9724 34.9631 34.5926 34.2897 cv
33.3172 34.6745 32.0379 35.0207 30.7517 35.3073 cv
29.9402 35.488 29.5056 36.5593 29.9597 37.2546 cv
31.3269 39.3522 34.822 38.6657 37.4597 38.5139 cv
37.2898 38.2639 37.1179 38.0119 36.95 37.757 cv
cp
f
16.2683 88.6525 mo
16.1023 87.1481 16.0144 85.6384 15.9744 84.1257 cv
15.947 83.0495 14.3709 83.0598 14.3103 84.1257 cv
14.2136 85.8493 14.1824 87.5725 14.2527 89.298 cv
14.3084 90.6799 14.3523 91.8464 15.2351 92.9426 cv
15.5584 93.3435 16.0994 93.0437 16.2537 92.6735 cv
16.8064 91.3557 16.4197 90.0246 16.2683 88.6525 cv
cp
f
34.2869 107.625 mo
32.781 107.489 31.0301 107.462 29.6492 106.764 cv
26.6619 105.255 27.8992 101.624 27.0779 98.7971 cv
26.5027 98.8913 25.9529 99.4069 26.0476 99.9782 cv
25.5652 102.921 26.201 106.375 29.0603 107.821 cv
30.6502 108.624 32.406 108.548 34.1365 108.611 cv
36.1824 108.686 38.1629 109.27 40.1961 109.304 cv
40.4236 109.307 40.6414 109.174 40.7849 108.988 cv
38.7937 108.15 36.7019 107.842 34.2869 107.625 cv
cp
f
54.4256 119.983 mo
53.0564 119.371 51.8533 118.502 50.7293 117.511 cv
50.6433 117.468 li
47.6277 115.751 44.6843 113.283 42.3689 110.7 cv
41.7097 109.965 40.4275 110.933 40.989 111.765 cv
43.6521 115.718 46.0076 119.331 50.4383 121.517 cv
53.7595 123.157 58.0086 124.27 61.1345 121.807 cv
61.3084 121.67 61.3992 121.495 61.4324 121.309 cv
59.0144 121.332 56.5633 120.938 54.4256 119.983 cv
cp
f
93.7263 129.418 mo
93.1814 129.31 92.6541 129.276 92.1326 129.273 cv
93.6951 130.149 95.2732 131.197 97.0506 131.051 cv
97.1551 131.018 li
96.1248 130.315 95.1316 129.696 93.7263 129.418 cv
cp
f
85.5183 21.8137 mo
86.4168 19.5881 87.6922 17.5158 89.5369 16.3088 cv
88.117 15.8112 86.6121 17.0529 85.8181 18.1066 cv
85.032 19.1511 84.6824 20.6003 85.4627 21.758 cv
85.5183 21.8137 li
cp
f
101.386 14.552 mo
102.016 13.8713 102.918 13.3107 104.201 12.9216 cv
107.261 11.9929 110.699 11.8918 113.855 11.4846 cv
114.823 11.3596 116.468 10.8625 118.134 10.4787 cv
116.475 10.6364 114.951 11.2258 113.235 11.4592 cv
110.598 11.8176 108.034 11.4436 105.396 11.2722 cv
101.608 11.0256 98.491 11.4572 95.2195 13.467 cv
93.991 14.2214 95.0623 15.8889 96.3191 15.3488 cv
97.8406 14.6955 99.5642 14.5109 101.386 14.552 cv
cp
f
141.436 14.32 mo
142.797 13.9523 144.04 13.426 145.238 12.8332 cv
145.072 12.6491 144.821 12.5261 144.587 12.5017 cv
142.893 12.3239 141.54 13.0564 140.019 13.6857 cv
138.144 14.4616 136.285 15.0344 134.246 15.1276 cv
134.148 15.132 134.075 15.1672 133.991 15.1892 cv
136.564 15.2443 139.178 14.9314 141.436 14.32 cv
cp
f
103.167 89.4436 mo
101.63 90.4616 100.065 91.7009 98.4636 92.9421 cv
97.865 93.9567 97.3269 94.9904 96.8826 96.051 cv
96.6775 96.5402 97.3885 97.091 97.8123 96.7653 cv
100.898 94.3923 103.428 91.1452 105.781 87.7902 cv
104.917 88.32 104.047 88.861 103.167 89.4436 cv
cp
f
145.561 22.3767 mo
145.209 22.7165 144.87 23.0573 144.513 23.3972 cv
143.763 24.5158 142.808 25.4494 141.806 26.5192 cv
139.081 29.4289 136.527 32.5183 133.862 35.4831 cv
131.128 38.5236 128.348 41.5227 125.681 44.6232 cv
124.735 45.7229 123.653 46.8757 122.571 48.0686 cv
122.484 48.6657 123.249 49.0627 123.771 48.6467 cv
133.33 41.0446 140.365 30.0993 148.74 21.2448 cv
149.017 20.9519 148.969 20.6013 148.783 20.3527 cv
147.703 21.0925 146.626 21.7644 145.561 22.3767 cv
cp
f
230.535 107.27 mo
230.222 107.875 229.891 108.469 229.535 109.049 cv
229.199 110.167 229.107 111.477 228.912 112.669 cv
229.445 111.994 229.897 111.237 230.318 110.533 cv
231.105 109.217 231.546 107.892 231.958 106.505 cv
231.361 106.657 230.896 106.921 230.535 107.27 cv
cp
.729412 .866667 .886275 rgb
f
203.746 122.664 mo
203.042 122.672 202.412 122.786 201.824 122.966 cv
200.757 123.782 199.711 124.642 198.685 125.46 cv
196.935 126.857 195.773 129.04 193.999 130.312 cv
193.619 130.584 193.741 131.188 194.241 131.207 cv
195.574 131.258 195.549 131.145 196.587 130.24 cv
197.752 129.225 198.513 127.855 199.778 126.876 cv
201.247 125.74 202.762 124.645 204.268 123.559 cv
204.635 123.294 204.982 123.119 205.319 123.001 cv
204.763 122.841 204.211 122.659 203.746 122.664 cv
cp
f
214.384 122.359 mo
211.141 123.857 210.317 122.484 209.15 121.362 cv
209.152 122.083 208.739 122.694 207.653 123.034 cv
208.604 123.325 209.568 123.826 210.706 124.055 cv
212.308 124.377 213.537 124.094 214.987 123.391 cv
215.682 123.053 215.075 122.039 214.384 122.359 cv
cp
f
235.4 35.882 mo
236.625 35.9631 237.746 36.2561 238.641 36.9206 cv
239.535 37.5842 240.143 38.6496 240.609 39.8938 cv
240.845 40.111 241.088 40.3254 241.317 40.5451 cv
243.649 42.7741 244.43 45.3835 245.03 48.1223 cv
245.11 47.9206 245.121 47.677 245.019 47.3942 cv
242.776 41.1291 243.915 33.319 235.317 34.2097 cv
234.503 34.2941 233.676 34.4157 232.843 34.5495 cv
233.719 34.9382 234.575 35.3786 235.4 35.882 cv
cp
f
218.466 34.217 mo
215.518 32.6613 213.534 29.8542 209.907 30.2351 cv
209.37 30.2912 209.13 31.1648 209.767 31.2707 cv
212.763 31.7692 214.602 33.5998 216.886 35.1257 cv
217.361 34.7722 217.892 34.4719 218.466 34.217 cv
cp
f
199.869 21.6267 mo
198.506 20.5881 197.029 19.7243 195.287 19.529 cv
194.686 19.4616 194.092 19.4987 193.496 19.5515 cv
195.537 20.5139 197.606 21.2561 199.869 21.6267 cv
cp
f
155.216 132.971 mo
153.832 133.209 152.382 133.573 150.904 133.932 cv
150.892 135.154 151.671 136.384 153.246 136.384 cv
155.234 136.384 155.945 134.422 155.4 132.992 cv
155.216 132.971 li
cp
f
269.082 78.177 mo
268.678 78.7326 268.507 79.448 268.72 80.2482 cv
268.286 82.0896 267.577 83.7707 266.529 85.1408 cv
265.082 87.0314 263.638 89.0915 262.067 91.0129 cv
261.787 90.7043 261.419 90.447 260.964 90.2756 cv
260.221 89.9948 259.368 89.8586 258.585 89.757 cv
258.139 89.6989 257.675 89.6462 257.224 89.6804 cv
254.837 88.1032 251.531 87.8122 248.74 87.0808 cv
244.891 86.072 240.888 84.6423 236.883 84.1916 cv
238.589 78.8747 239.98 73.2067 242.409 68.1955 cv
242.69 67.6145 242.716 66.9997 242.569 66.4333 cv
242.878 65.8791 242.937 65.2048 242.529 64.5251 cv
242.54 64.5222 li
241.133 61.4416 239.506 58.4743 237.928 55.4885 cv
236.81 52.9318 235.389 50.5329 234.308 47.9685 cv
234.25 47.8298 234.158 47.7385 234.055 47.675 cv
234.389 47.0637 234.409 46.2922 234.469 45.6203 cv
234.493 45.3327 234.067 45.3024 233.985 45.5549 cv
233.774 46.2004 233.501 46.9182 233.578 47.6135 cv
233.339 47.6901 233.154 47.9187 233.224 48.2678 cv
233.691 50.5974 234.265 52.7736 235.049 54.9689 cv
235.127 56.194 235.248 57.4157 235.507 58.6335 cv
236.018 61.0432 237.193 63.1716 238.288 65.3498 cv
236.436 67.7092 235.707 71.5197 234.756 74.3127 cv
233.827 77.0437 232.852 79.8566 232.611 82.7429 cv
232.393 82.8107 li
228.137 84.5817 223.885 86.3513 219.662 88.1984 cv
217.263 89.2468 214.556 90.1828 212.156 91.4924 cv
212.144 80.5666 212.254 69.5197 211.557 58.6467 cv
212.443 57.9397 211.035 56.6828 210.609 56.1833 cv
209.599 54.9982 208.481 53.923 207.406 52.7971 cv
207.046 52.4196 206.365 52.9187 206.67 53.3654 cv
207.544 54.6472 208.358 55.9606 209.303 57.1906 cv
209.534 57.4909 209.905 58.1022 210.344 58.4899 cv
208.439 70.4055 207.838 82.7497 207.358 94.7922 cv
207.262 97.2277 210.317 97.7434 211.601 96.3259 cv
214.42 96.2941 217.677 94.3796 219.988 93.4768 cv
224.614 91.6706 229.206 89.7912 233.795 87.8957 cv
234.361 87.6623 234.775 87.2985 235.059 86.8713 cv
238.638 88.8449 242.868 89.8147 246.708 91.0822 cv
249.857 92.1223 253.58 94.3283 256.961 93.9919 cv
257.457 94.2912 258 94.5256 258.533 94.7185 cv
256.277 96.6579 253.676 98.0471 250.455 98.2722 cv
249.518 98.3376 248.454 98.9265 248.262 99.9421 cv
247.633 103.259 246.633 106.355 245.225 109.408 cv
241.043 109.347 236.665 110.372 232.585 110.749 cv
231.115 110.885 230.244 112.006 230.513 113.467 cv
231.104 116.664 230.812 119.6 231.498 122.381 cv
229.153 122.339 226.836 122.435 224.611 123.113 cv
224.513 122.92 224.372 122.732 224.174 122.558 cv
220.978 119.753 216.898 117.822 213.421 115.325 cv
209.345 112.397 205.348 109.361 201.406 106.257 cv
201.878 104.717 201.86 102.984 202.112 101.436 cv
202.214 100.81 201.305 100.526 201.14 101.168 cv
200.766 102.622 200.171 104.177 200.055 105.721 cv
199.147 105.865 198.451 106.942 199.335 107.712 cv
203.105 110.991 206.952 114.166 210.906 117.222 cv
214.338 119.875 217.699 123.195 221.508 125.255 cv
221.455 125.48 221.436 125.712 221.457 125.944 cv
218.402 128.057 215.678 130.464 211.877 129.393 cv
209.164 128.629 205.137 124.83 202.2 125.339 cv
200.131 125.697 198.636 128.677 197.498 130.212 cv
195.824 132.469 194.001 134.797 192.803 137.371 cv
190.037 135.756 186.59 133.777 183.631 134.634 cv
185.258 128.254 188.424 121.983 189.546 115.531 cv
189.673 115.577 li
189.883 115.63 190.13 115.429 190.048 115.202 cv
189.957 114.95 189.838 114.715 189.705 114.487 cv
189.728 114.32 189.757 114.153 189.777 113.986 cv
189.825 113.576 189.363 113.436 189.06 113.59 cv
188.281 112.678 187.273 111.907 186.466 111.071 cv
186.043 110.634 185.225 111.222 185.6 111.739 cv
186.356 112.778 187.167 114.037 188.237 114.851 cv
186.448 118.103 185.439 121.831 184.23 125.31 cv
183.121 128.501 181.939 131.795 182.414 135.168 cv
180.067 136.512 177.935 138.624 175.787 140.252 cv
172.014 143.11 168.845 142.787 164.477 141.642 cv
161.443 140.847 158.985 139.554 156.266 138.073 cv
154.903 137.33 153.637 136.672 152.023 136.797 cv
149.298 137.008 147.038 139.209 145.914 141.656 cv
142.428 138.651 139.41 135.349 136.844 131.5 cv
135.952 130.164 134.232 130.226 133.33 131.5 cv
131.662 133.856 129.995 136.211 128.327 138.567 cv
126.221 141.541 125.156 141.966 121.399 142.279 cv
117.238 142.627 112.054 143.458 107.789 142.398 cv
107.917 142.264 108.028 142.113 108.118 141.946 cv
108.658 140.944 109.768 140.438 110.309 139.355 cv
110.601 138.769 110.605 138.034 110.899 137.475 cv
111.264 136.779 112.025 136.124 112.51 135.525 cv
113.621 134.15 114.61 132.627 115.329 130.999 cv
115.98 131.065 116.66 130.831 117.23 130.131 cv
119.446 127.413 121.965 124.973 124.462 122.518 cv
125.922 121.082 128.534 119.128 129.497 116.963 cv
133.237 116.109 136.592 113.234 139.81 111.22 cv
143.388 108.982 146.992 106.783 150.566 104.542 cv
151.042 104.926 151.9 104.535 151.759 103.769 cv
151.241 100.966 150.498 98.1618 149.396 95.5363 cv
149.249 95.1853 148.625 95.1716 148.659 95.6359 cv
148.849 98.2282 149.377 100.807 150.079 103.319 cv
146.149 105.079 142.241 106.896 138.311 108.656 cv
136.07 109.66 133.53 110.521 131.257 111.708 cv
130.367 109.012 129.593 106.249 128.872 103.5 cv
128.719 102.918 127.901 103.175 127.99 103.743 cv
128.337 105.954 128.501 108.175 128.915 110.376 cv
129.069 111.199 129.178 112.034 129.522 112.739 cv
128.923 113.139 128.346 113.564 127.83 114.051 cv
125.284 114.435 122.712 117.501 120.981 119.038 cv
119.294 120.538 117.635 122.044 116.065 123.645 cv
114.839 120.576 111.774 117.987 109.803 115.455 cv
107.103 111.987 104.847 107.621 101.785 104.372 cv
107.05 100.226 111.575 94.7922 116.072 89.8767 cv
121.209 84.2624 126.309 78.6174 131.604 73.1506 cv
132.06 72.6794 131.379 72.0178 130.891 72.4377 cv
125.119 77.4216 119.24 82.2854 113.481 87.2854 cv
108.199 91.8718 102.337 96.6247 98.1463 102.258 cv
97.5593 103.047 97.8396 104.024 98.4646 104.672 cv
99.5105 109.356 102.963 113.821 105.564 117.729 cv
107.178 120.154 109.141 123.822 111.696 125.923 cv
110.13 128.326 108.788 130.721 106.955 132.994 cv
105.539 134.751 104.691 137.025 103.669 139.014 cv
103.465 139.411 103.357 139.821 103.338 140.226 cv
100.196 137.817 97.4187 134.124 93.7508 132.837 cv
89.9197 131.491 83.9656 133.289 80.0408 133.707 cv
79.95 133.717 79.8504 133.731 79.7576 133.742 cv
77.0642 128.887 72.7039 125.054 70.4129 119.893 cv
70.0418 119.056 68.6551 119.651 68.9353 120.516 cv
69.8572 123.37 71.3338 125.87 73.0008 128.351 cv
74.2674 130.238 75.5711 132.361 77.1267 134.116 cv
72.3084 134.855 66.6267 135.634 65.1131 130.489 cv
64.4451 128.22 63.8865 125.842 61.1179 125.732 cv
59.2478 125.657 57.0916 126.715 55.2547 126.976 cv
51.7234 127.478 49.366 126.823 46.8855 124.271 cv
42.9802 120.252 39.2263 115.736 34.5984 112.54 cv
34.1228 112.211 33.5955 112.261 33.1707 112.513 cv
29.7 112.879 26.6316 114.119 25.2713 110.347 cv
24.2957 107.642 25.0896 104.486 24.1902 101.832 cv
22.5916 97.1184 16.3035 99.5114 12.7381 99.6345 cv
11.8191 99.6662 10.6853 99.8127 9.6199 99.8073 cv
10.4441 95.9841 10.4851 91.8801 11.0974 88.0036 cv
11.5115 85.385 12.4861 82.4953 12.4344 79.7766 cv
24.4519 81.6057 36.5017 79.1096 48.5691 79.1184 cv
49.074 79.1189 49.5105 78.9655 49.8738 78.7165 cv
51.7078 80.1691 54.4763 80.3825 56.7293 81.0632 cv
60.6785 82.257 64.4988 83.7497 68.3709 85.1564 cv
69.031 85.3962 69.6306 85.2609 70.1092 84.9289 cv
71.2185 85.3981 72.4373 84.9279 73.5857 84.5109 cv
74.366 84.2282 75.1424 83.9343 75.9187 83.6423 cv
76.6336 83.4143 77.3494 83.1579 78.074 82.864 cv
78.2644 82.7868 78.4617 82.7106 78.657 82.6345 cv
79.0857 82.4777 79.5115 82.3147 79.9431 82.1633 cv
80.1502 82.0397 li
81.9324 81.302 83.6336 80.3781 84.3689 78.5744 cv
84.5213 78.2004 84.4549 77.8576 84.2752 77.5725 cv
84.5232 76.4533 84.1726 75.239 84.1209 74.0461 cv
84.0515 72.4714 83.9422 70.9279 83.7176 69.3669 cv
83.659 68.9611 83.0408 69.0817 83.0271 69.4606 cv
82.9715 70.9816 82.9343 72.5324 82.7664 74.0461 cv
82.6629 74.9743 82.2927 75.9025 82.1795 76.8156 cv
79.866 77.0524 77.3865 79.0446 75.283 79.8137 cv
73.8787 80.3273 72.0125 80.6252 70.5144 81.3356 cv
70.3924 81.2346 70.2566 81.1418 70.0965 81.0656 cv
66.4285 79.3156 62.5574 77.9357 58.6599 76.7946 cv
56.8972 76.279 54.7625 75.4074 52.7449 75.2102 cv
52.7957 74.9606 li
54.6756 72.5505 55.864 68.9104 56.8718 66.6452 cv
58.1287 63.822 59.5037 61.134 60.8953 58.3752 cv
61.4929 57.1926 61.9158 56.509 62.0496 55.7497 cv
64.3875 54.9304 66.6765 53.9768 68.949 52.9929 cv
71.6326 51.8313 74.5427 50.9548 77.0711 49.4792 cv
77.8054 49.05 77.2888 48.0358 76.5203 48.1726 cv
73.8142 48.6521 71.2097 49.7995 68.575 50.5886 cv
65.9187 51.384 63.2722 52.2102 60.6922 53.2307 cv
60.2566 53.403 59.9842 53.7155 59.8455 54.0705 cv
59.0662 54.5681 58.6804 55.3215 57.8689 56.6062 cv
56.1834 59.2795 54.5662 61.9802 52.8543 64.6335 cv
51.2869 67.0642 48.5945 70.6355 48.1189 73.9016 cv
41.9021 73.1828 35.74 74.5017 29.533 75.0358 cv
22.9793 75.6003 15.9568 74.0075 9.57888 75.6491 cv
9.28201 75.7253 9.03787 75.8718 8.83962 76.0598 cv
8.18044 76.3249 7.63455 76.8986 7.55349 77.7883 cv
7.43337 79.1135 7.30544 80.4582 7.17947 81.8098 cv
6.77908 83.9343 6.67654 86.1828 6.40701 88.2033 cv
6.17361 89.9504 5.75369 91.9133 5.55056 93.8684 cv
5.15603 91.4362 4.75662 89.0041 4.39236 86.5681 cv
3.72439 82.0998 4.22927 78.9089 6.64431 75.0261 cv
8.57986 71.9147 10.6219 69.0417 13.5691 66.7961 cv
14.5554 66.0441 14.8582 64.4314 13.5691 63.7419 cv
13.0984 63.4899 12.6336 63.2697 12.1668 63.0627 cv
15.1404 60.1218 18.2195 57.2951 21.3299 54.4953 cv
24.8103 51.3635 28.3572 47.2683 32.3601 44.6901 cv
32.4343 44.7033 li
35.0154 45.177 36.1218 41.2248 33.5252 40.7482 cv
29.4031 39.9914 23.6814 39.8757 19.5681 38.2951 cv
21.0398 34.9221 29.3064 32.2741 31.6599 31.5251 cv
37.0818 29.7995 42.5623 28.2365 48.0183 26.6237 cv
54.9617 24.571 64.4207 23.1027 68.3406 16.2863 cv
70.3787 17.1823 71.8611 18.5681 73.0574 20.6257 cv
73.5457 21.4655 74.5994 21.6799 75.4314 21.2482 cv
75.6355 21.1423 75.8426 21.0456 76.0515 20.9519 cv
76.1463 21.5842 76.4754 22.196 77.0662 22.6037 cv
78.5232 23.6091 77.3181 24.5065 76.7478 26.1179 cv
76.0574 28.0651 75.4197 30.0319 74.909 32.0349 cv
74.0476 35.4084 73.4715 38.7854 74.0418 42.2399 cv
74.1258 42.7497 74.406 43.071 74.7605 43.2595 cv
76.4197 45.529 79.5877 44.7439 82.1375 44.6047 cv
84.1043 44.4973 86.8181 44.656 88.7322 43.7067 cv
88.8533 43.8205 88.9812 43.9289 89.1101 44.0329 cv
89.7078 44.5178 90.409 45.0222 91.1785 45.1677 cv
91.5554 45.3713 91.9246 45.57 92.2468 45.7805 cv
94.1121 46.9963 95.9988 48.1174 97.8015 49.4309 cv
98.2918 49.7883 98.9314 48.9685 98.4549 48.5842 cv
96.7693 47.2277 95.1472 45.7722 93.4109 44.4841 cv
92.4607 43.7795 91.4187 42.7033 90.2644 42.2297 cv
90.3035 41.9665 90.2517 41.696 90.0281 41.5158 cv
88.0066 39.8903 85.1199 40.5354 82.657 40.4724 cv
81.2635 40.4367 79.5086 40.0471 77.9295 40.1052 cv
78.4861 37.8488 78.8933 35.5485 79.5447 33.3132 cv
80.4138 30.3342 81.8592 27.5256 82.7146 24.5642 cv
83.3718 22.2927 82.7898 20.34 81.2615 19.2614 cv
83.1443 18.655 84.9148 17.8469 86.2517 16.1457 cv
88.0955 13.7995 87.5281 11.8425 87.0213 9.53096 cv
89.2302 9.83077 91.4617 10.1799 93.615 10.6442 cv
93.8416 10.8156 94.1072 10.944 94.4373 10.9577 cv
103.955 11.3606 114.047 8.55977 123.149 5.7629 cv
124.872 7.98653 126.613 10.194 128.397 12.3698 cv
128.869 12.9455 129.819 13.1228 130.503 12.9265 cv
138.046 10.759 145.547 8.44795 153.057 6.17207 cv
154.912 5.61006 156.86 4.56172 158.797 5.02559 cv
160.477 5.42842 160.887 6.28438 162.224 7.3879 cv
162.935 7.97481 163.671 8.47432 164.43 8.91377 cv
157.741 14.5051 152.009 21.7424 146.099 27.9792 cv
142.541 31.7351 139.009 35.5153 135.474 39.2937 cv
132.201 42.7937 127.575 46.3781 125.683 50.8147 cv
125.046 52.3107 125.984 53.8698 127.396 53.9182 cv
130.337 55.5617 133.776 56.2346 136.936 57.3942 cv
140.707 58.7785 144.378 60.4162 148.155 61.7814 cv
154.278 63.9943 163.242 68.0822 169.77 66.5266 cv
170.273 66.4069 170.641 66.1496 170.887 65.8186 cv
171.278 65.6945 171.663 65.4323 171.995 64.9904 cv
174.553 61.5886 176.862 58.1003 179.119 54.5022 cv
180.121 53.2385 181.073 51.9074 181.657 50.5275 cv
183.05 48.3269 184.358 46.0705 185.152 43.6037 cv
185.337 43.0305 184.657 42.6418 184.206 42.9138 cv
183.914 42.5046 183.677 42.049 183.384 41.6452 cv
183.136 41.3024 182.876 40.9655 182.618 40.6276 cv
182.323 40.7248 182.027 40.8215 181.735 40.9226 cv
181.755 40.9509 li
182.129 41.4616 182.503 41.9836 182.901 42.4758 cv
183.174 42.8122 183.459 43.0739 183.709 43.3835 cv
181.22 45.9045 179.404 49.0319 177.284 51.8586 cv
174.701 55.3015 171.983 58.6628 169.332 62.0573 cv
166.457 60.4816 162.878 60.1984 159.716 59.3806 cv
155.701 58.342 151.76 57.0959 147.846 55.7282 cv
143.145 54.0852 137.694 51.4123 132.403 50.7937 cv
134.667 48.6506 136.644 46.0256 138.664 43.8542 cv
142.408 39.8278 146.156 35.8044 149.874 31.7536 cv
156.079 24.9934 163.491 18.341 168.693 10.6677 cv
168.999 10.7512 169.306 10.8308 169.62 10.9035 cv
171.146 11.2565 172.205 10.1867 172.453 8.99629 cv
173.569 8.38643 174.417 7.64864 175.548 6.75899 cv
178.428 4.49239 178.912 5.47383 181.633 7.4587 cv
185.622 10.3698 189.604 14.1818 194.217 16.0637 cv
198.335 17.7439 203.166 17.6223 207.534 17.9519 cv
208.416 18.0188 210.126 17.8205 210.909 18.2067 cv
212.548 19.0153 212.015 19.7448 211.772 21.4426 cv
211.375 24.2048 210.394 26.9904 209.721 29.6994 cv
209.341 31.2356 210.718 32.6525 212.269 32.2468 cv
217.933 30.7663 226.346 26.7688 231.945 28.3264 cv
237.61 29.9025 242.807 37.258 247.006 41.3742 cv
247.202 41.5676 247.411 41.6994 247.623 41.8015 cv
247.902 44.5803 248.311 47.3444 248.671 50.1154 cv
248.845 51.4597 248.837 53.1784 249.768 54.2697 cv
251.231 55.9821 254.697 56.5407 256.686 57.2639 cv
260.518 58.6564 265.098 59.5461 266.915 63.6608 cv
268.66 67.6149 269.693 73.2473 269.082 78.177 cv
cp
273.756 78.2346 mo
273.696 78.1682 li
273.669 76.2439 273.43 74.2985 273.224 72.5285 cv
272.552 66.7502 271.67 58.7321 265.657 56.1521 cv
262.047 54.6022 258.081 53.8903 254.486 52.3151 cv
251.747 51.1149 252.084 48.9362 251.541 46.238 cv
251.182 44.4523 250.806 42.6784 250.383 40.9108 cv
250.888 40.1433 250.954 39.112 250.104 38.2751 cv
246.851 35.071 243.601 31.864 240.337 28.6716 cv
238.391 26.7688 236.416 24.2526 233.771 23.3273 cv
230.742 22.2673 227.409 23.7082 224.484 24.5197 cv
221.225 25.4235 217.969 26.3313 214.715 27.2502 cv
215.707 23.9914 216.816 20.2785 216.095 17.5241 cv
215.314 14.5383 212.656 14.4699 210.065 14.28 cv
204.559 13.8767 197.977 14.4294 193.129 11.529 cv
188.192 8.5754 183.738 4.50215 179.141 1.05342 cv
178.635 .67354 177.774 .735551 177.261 1.05342 cv
174.938 2.49239 172.442 4.13985 171.074 6.50215 cv
170.854 6.42842 li
166.718 5.48799 165.188 2.71993 161.853 .789262 cv
159.368 -.649214 157.133 .173051 154.545 .938676 cv
146.547 3.30538 138.573 5.79219 130.633 8.34688 cv
128.821 6.25459 127.041 4.13985 125.307 1.98067 cv
124.886 1.45479 123.953 1.25118 123.333 1.4587 cv
113.673 4.68379 103.868 5.71456 94.0388 8.01143 cv
93.8406 8.05733 93.6785 8.13692 93.5379 8.23262 cv
90.8308 6.95088 88.3308 6.04317 85.2508 5.49776 cv
84.1013 5.29415 82.783 5.99825 82.8435 7.33174 cv
83.0017 10.8273 84.8299 13.0358 80.5799 15.4841 cv
78.948 16.424 77.0476 16.8723 75.2576 17.5539 cv
73.4939 14.925 71.0994 13.2316 67.9295 12.2585 cv
67.24 12.0466 66.1804 12.3825 65.8728 13.0949 cv
62.7224 20.4065 52.0037 21.5549 45.2058 23.4875 cv
38.2683 25.4597 30.826 26.8747 24.2683 29.9582 cv
21.2049 31.3986 14.5008 35.3601 15.1658 39.57 cv
15.5095 41.7424 17.5369 41.9484 19.407 42.3366 cv
22.3474 42.9475 25.3152 43.4548 28.2801 43.968 cv
25.6443 45.7639 23.3474 48.4069 21.1072 50.3674 cv
16.5769 54.3332 12.0574 58.2985 7.78201 62.5407 cv
6.84158 63.4733 7.30447 65.0749 8.54763 65.4401 cv
8.79373 65.4953 9.03396 65.5632 9.27322 65.6359 cv
5.01345 69.3024 1.04373 75.0905 .193139 80.1369 cv
-.453345 83.9777 .68435 88.1784 1.24978 91.9655 cv
1.48708 93.5539 1.48513 96.2663 1.86111 98.6179 cv
1.60623 98.9255 1.4949 99.3327 1.6658 99.7712 cv
2.13064 100.962 2.43337 102.146 2.6365 103.327 cv
6.17068 104.217 9.45583 103.772 13.0681 103.363 cv
13.3982 102.983 13.8982 102.747 14.5193 102.866 cv
15.7654 103.106 16.9353 102.934 17.9969 103.008 cv
18.6424 102.983 19.1502 103.023 19.3845 103.176 cv
19.5769 103.303 19.7322 103.447 19.8631 103.605 cv
20.2156 103.854 20.5496 104.199 20.8611 104.684 cv
22.4842 107.206 21.1062 110.64 22.5652 113.25 cv
24.9949 117.596 29.0984 115.326 33.0359 116.408 cv
35.3806 117.052 36.4802 118.418 37.7361 120.374 cv
38.7273 121.919 39.8474 123.443 41.115 124.829 cv
41.7029 125.417 42.2947 125.993 42.8875 126.556 cv
44.6277 128.097 46.6013 129.36 48.8679 130.091 cv
52.5701 131.284 55.4187 128.871 58.9265 129.241 cv
60.7566 129.434 61.74 130.37 62.5672 131.976 cv
63.6482 134.077 63.0418 135.687 65.8611 137.26 cv
67.8631 138.376 71.5955 138.559 73.6131 137.705 cv
74.2752 137.425 74.9002 137.62 75.3318 138.008 cv
77.2322 137.899 79.2752 137.264 81.1658 137.257 cv
84.2527 137.246 87.0379 136.632 90.0662 136.313 cv
93.7888 135.92 95.4802 136.865 97.826 139.576 cv
105.576 148.537 118.041 147.801 128.423 144.355 cv
130.377 141.88 132.468 139.537 133.887 136.68 cv
134.288 135.876 135.656 135.649 136.244 136.377 cv
137.678 138.155 139.281 139.571 140.96 141.105 cv
142.733 142.726 144.338 144.864 146.734 143.761 cv
148.83 142.798 149.824 140.686 152.355 140.449 cv
155.602 140.146 158.604 142.711 161.378 144.034 cv
164.442 145.496 171.47 148.06 174.56 145.127 cv
174.815 144.884 175.095 144.767 175.373 144.729 cv
178.468 143.2 180.531 139.84 183.962 138.982 cv
184.406 138.84 184.887 138.774 185.43 138.799 cv
186.747 138.809 187.897 139.253 189.269 139.481 cv
190.904 139.752 193.768 140.001 195.223 138.93 cv
195.734 138.555 196.472 136.746 196.859 136.144 cv
198.137 134.159 200.068 130.397 202.629 129.548 cv
202.925 129.016 203.256 128.957 203.623 129.383 cv
203.871 129.375 li
205.417 129.474 206.845 130.779 208.128 131.517 cv
211.428 133.418 213.699 133.768 217.346 132.866 cv
217.483 132.833 217.605 132.838 217.728 132.838 cv
219.988 132.048 221.828 130.624 223.79 129.36 cv
223.993 129.226 224.2 129.079 224.398 128.954 cv
224.791 128.709 225.044 128.395 225.195 128.055 cv
226.067 127.606 227.082 127.383 228.148 127.271 cv
228.496 127.175 228.85 127.089 229.22 127.025 cv
230.364 126.829 231.952 126.994 233.064 126.637 cv
236.285 125.605 235.717 123.005 235.262 120.695 cv
234.923 118.966 234.604 117.33 234.371 115.563 cv
234.26 114.725 235.142 114.099 235.871 114.063 cv
239.011 113.906 242.328 113.629 245.399 112.887 cv
248.793 112.067 249.962 110.043 250.779 106.903 cv
251.365 104.649 251.973 103.296 253.147 102.408 cv
253.139 102.397 li
253.18 102.385 li
253.825 101.907 254.641 101.565 255.714 101.291 cv
255.884 101.125 256.109 100.993 256.409 100.929 cv
258.633 100.454 261.129 97.0935 262.665 95.5212 cv
264.224 93.9245 265.799 92.3391 267.328 90.7141 cv
269.283 88.6384 271.232 86.446 272.627 83.9406 cv
273.73 81.9582 273.706 80.3024 273.809 78.3127 cv
273.756 78.2346 li
cp
.623529 .803922 .87451 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (freeze_5.eps)
%%CreationDate: 3/12/2018 2:19 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bFmN4Qa8CBamZ>=,HC2CMS]8e`0M(,M1aMbAZD9TA2dO.BeCIf7!*5mA.Ub.+1/oXLs6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7b\<(Ob"c&XI"kb2RSO\?nAIoTPpFpLh7UrVk*!=4,XU(V[;Xg1nM?bEWSanZj[3K#>":=&4<jEVo=Omp<bT
%HMd[8LKDf/^&J#o]>NNt]\NJ^ag^i1-bHR"T0IhufA6H%PG`nmCT`/T^:nmdr:]:'lPE@Rm./]D`pbi=rho5H._,TZcM$i%04.9!
%Qa^niaQps]q9HbT`I<93[.="V5QC`VgLoEYH2ZgKZWAg[f?\F$oe3Z.qTIX^T'.igB(D()r)A-U45Tu$aUc_TkVIGK=n:0'5MP-4
%s2XQ:hkB.Y?BsV<NlPUarl`j>d#Tj,bL:0Ls+\;c?._SocL64+`&#&tOI'6HnnW.[\2t3db>7qskeTL=^A.-lP;fs3Lai5%`^,j:
%bVEQBReh^n*dWs,m]+h^V^1`7EXm6T=q+PUOgZGcEXTKm*W+S5TABM>kI^bCqrF7$f/CS!YMXa'm/N9CoHhZ1/W!H7WtJ@='7Tu!
%o@qmso^^ZSl.+"dVW7=7=5VdsQWI=.FS#D:7t0_+rkG#oLF9:?]mV+lr9F(g(oEqolI(1VRibu7lH.q$+dC7no%WVN?iK$7s55DW
%OaYu\-1$pJH,3JGXt@2FV"D?a)7,?B^FAT$lhd4\#4Ha[V8%HWm+Z/+J)3NKI8Pn]!WL((BA]f]>PtYhs7%&2lL_"I5PD,JiG[T.
%^?k=Vr7?^2:GZFiqXp2"o]bHrLK?,_(>n/EH^OshAU6Igor\19r<Ig"\+noDq\D);rL6l/_6]K<n`*-SdGNKXJ+rjGq;j89^\Zp$
%?bZHeX2g9MHMu*hJ%=D6lIjA8Sc3ZMhu7Hd;mni7rT:;e?N3Inq9*\oT<,BslH-C$IeJekIef>b2c'I$ITpUdQlH'dgS\sr]bXcK
%B(t&0q;:`Rg]]`MpP7?rT#qkm^W/>F\Y4u)li-j'/cXN(qiL,4iQ03G2pg.)b9(Yp^\ViZZ(C]O49"[DPF#'OO&##9oV;?HM2^_G
%9:U8(k)U%aVhk%jdOi,TG#7%@_Xsl64mL.Y5KinBqsp6Fa5-E\l^QpM[-]#\4?Rogr7SQ_T7$CrB2<aKf0=Z_kM74d]m;m1Ic:%]
%8b;EG.pVlm$3&\;IsL_bg%R/>A*0*7M$uUqqY^'1^O?.Ep0j_RaoD5!DdR8Zh#.RAiVWdGA*Pr?p%JEs:E*A@HBS3s5LNKEI*/%k
%oSi1@`cJ6Whr.N1+J6An-49:7M>u.J^AR:1dFc3[p+Pm%W9EA.4aSUn_sY\iT"V[?kN8f]hn^5eIJN%Rhq`>8oJ=6eDje>*F_tHo
%^A-^T/"0,CrQG#$?bCjYbqiKYIkIa*$lA0Vh*M$c$U&f_qbeJV\Qr8'YhO[!psD;jIO&NXYK[=Mc/i!1ju`KNEN\jc.GtG\b@4fQ
%aBtg@M&@"O5P]X*q@h[qHC8'R%4hq$afaN2f5Iq#4,@mE`4ch]5je_iip2Z<c2RU$HB[tm?6jskH[M".d'qXL=,H<2GE3mGmYBEO
%4hprNh/?XbH26hZ7.@9h.t#MQI*;:h8D1P,^U4iq\sL2%+#O6mEQQad6kNVVic%b]SH%pFU[*;ujG;FHg0Zp%Q?JGOf_4^DiMX->
%;N!+`hjbZZ4k4&u__i-@+kKhEFlfJ?jCh!#ZK)Wk-naDuEKjt*jVGC=r1k<RaBf@CQb9+53DSfea!'j3O@Q.9MB"'63IHu-O^,P]
%itN#EaK*;rjUj6-KG`e>EJ[>u#q%`ni?3o':2$?D;1^nA-coJ9q;['K:K[N(O-:PRIun.na0h7po[Oa<n<1o:XhAhVr&?\P*:Ch;
%j>b;eQO_bCVoVqt8/+(i96*EJO22"F/N7^?QD5E)q6OG2j_-cV*19<#U)cNAnbCN3c-_XiF5uc=J,.6VJ+p:8IdD"Ba,Ui5S03sb
%hh1k,6&t:0?N+3ugKk)+?fXcTN+(?D3RB'si>XdPEZF/Ukoptr<TF@I,6EV&(>5DRZl;#c,!Q;mE$E4g`.AU)),_p#a5=sX'NmK<
%Z)9]i=8[kE7CgPu@JE7%7(sdPieQBT;`W!mKDbaUrr6/^-@`&nJ!'aa&0-L\aIgLlPbfr,k4'[Y`02/jN<f9ca6O8H/0^E`,SRK:
%V%`Fa9KmAg6LdS,[#`N'M1=B%7jmkiV<diuaXn]D=X7qS:*MAX,dka5S\cQ`Stt*Ni@*\2F!jHQX;:R#Pa3"o_Glq3a)mL5$hDh:
%HJss(Uo/gggF@Vs'X;a8X0[c([>`IlN)u,2/#!W9:&7aW3loBDObCXFnbP^c`/DPJOeQWRWKYDpP:7?FX,7='3ue`#&V#!5dY[cJ
%&)a(+]KYbEa.qEeVGfH#*r/c'rEPs)VkY7.F!FW)MZU\%:oT97[%%#9*,eU43-'*V%M4;JT*$6g0LZSR,bHDj8n!A!?&S2<#`fZi
%gj>`hK.[EDgB9Nf(dEHpif'LFl&7cZr((sUK3:qAkrBb.Pq$=GhuPSHn?]SV43D*F@E6K*mN!ZYfZP+Ol=E`/M?e*@mQ"9%D,6PI
%ls<B\@%Eet14nk-FS<*jNGDdLDO9C*\2i>0qoAbnVNX<%E[2S2%"s!0?:b>'(ECik8+c!H/LUBl<XougdCpSA%$5QE5$E[I0=;9)
%#&:\ge?#C(a,nEU]j\t<n?`#aOa/DYJe"YU7gD;qis"s4>V;HWq@q,'#VX+459dRA+tA;WTrZR\Z;;N#8WT)^4;ur(EC+/E@tH('
%F\MT4*CCQlJ_F$W*2k&VO>3[DOWZ%aX9Z%k:pJrp\@>Ao5k-\2Tfj4-,Lt8"+0:VabFV7s.(;V+f&a).i%0Ld$>2@-Pf"Z$<32<P
%Oi^`E9cf'XqB;!-9QmD*jjGE\O,ccJ6"JtYDM\[hV-B]cNu'f[7&E^'/-h<CCO'`]:X@J^;'Zb^dDEj,9?c6.Qa.F.6\["0=`I\G
%:@^4m.+_^!MCp8gL+Mm!0L?7]L0tU]bn)EJntsi>=?Na_1Fa3#,^gZB@._Ft+<uM-!fKG.ih/r^_Bn0^`Sd3.5frSW_a&2u:/5Dg
%>anlZBpJma7OMt09Tl/Am%,Oq23T<6+E;.XLoCE-A8gT9N0.YJLnbQVk(fBHQ"ENAPJ`ffEKo\t6_e')jQLCgIl.@Qh%&4_1QVm;
%)M,M<"7E`,GffUXa;_,+r=Lt[:>/YE1iLl^VJdb2TLb07,!&)e8`A_\Bj:]n='oo"!3t#^GJ/M;]Dar6J:Dn@o#ZgEDg(#A'7(C2
%^r:K-IHo*C[m[m]#>):'PF6n34m^*VLn_Xl,of<'_bQ"3?ql=A3,F:"@_!9e4c-l17!OoOYp^>!l6C-M:SeG!]9bBBeS1f\D6t=^
%/k&o09h$VQ6C#'Y3^!)s=!h]iIWb2J$h(alp*DYcWp=D[RYiT_3)lDA/Q6`9(1(!_Wp3R:WOc#^=,,F5'jq!olQN]r.`/=sfAgD^
%9g>k,:PZQ0L]I338%<f^H]GHrW(-5;o"@Q(s,]>!pUg91LYVFYB=EX9ElSEUp[I57*Uc("nnjo\PX)FICR(+IPstW)+BFnFQG"hG
%cn1hq8>12eaKft6$XAdi/lTZD7M-e.R[+9P8d^PARX/T&_6g7"kk6jo:=M5&E>!ChV:M?>-B!"*eJo%*Y'j?WCd1TK29=8e)ogN@
%LsZqK*ORh)m'sV/Ar:_@/=80#C8ol3lURG'ZYMADE#cl;S97sng@V'&[LAM>9cD=+s&tKQQ6VtAl-;T^8.=^rUHJ=MlQLJRms2:L
%+*,DGSFO>6KCATn+1^DZrqXl[a*26^8Y8roF*P101u)WDm&<e!)AIU_`/(QO"_G)reKS=s'6?7_DQ1!Hi&EbYMij%ZUeeoTFQO!T
%2t29UdWN^6<N`kd*mDkjSS=?C[#.0Y^p6#F0PctQGOgK+;=1(ncjDn:>%Y9nU/B(Q!GoY;l?_TqN]G]J)i^V9e4/b?p!/s0\o=0R
%*lA+&VNpR6-;>e1]W8a&Ib_-UhQ?H7kkKPGJ#tg3S)CKq%LiIB*g%LFVD_A$FtLu>E;gfJ/G;;N>;Y`u(b[k)`M=EtMhZl/<2nmf
%_f#&-R:XojYa`5c,b>kf>8CM"8TL3j?(eoa"bd8U5hHP5VdNVFTs4ZS!&3"6_(E3mkW*=e6I2bGaJ*i&KE\L/]s^8fL.EOD5h0+S
%&ZLd?#*\>5C*CP'<NgM(dH>`re#pL1':V*;H<VR,n@;TGCA+00%qt:DS6NJOO''9o3F4[?Q]F#0Eq/XXei`S\%lr^2%m#aOn:M4]
%j+G\VYB7gf;/U8hN]2;f%*MAV#rh9oF#qIj2jk(GVP$$-*029fJ4/u`*^-4Dj'b^p1_Tk3"?up82Yu!mTI1jX!1n^&!HosBWBfX/
%YqcJC(#h'#Es$:uZmcbZ#<*_+D,0"9U!4J11jJW^,>K853'53\0W+uC$?[iNWGq%WU9KoU-X]`0`C>j,MN.`<l7=F>j0D15c0bmn
%?E;ea(i?N;/K`,KD%-:$EJUa;OK,>:.<Z*o<0'5N3m?#P9fK':3,%#/IPde3fj_Y\&Z6jiNq4@%*cf:5,MjL0k+:W*f&J0Za77!d
%i?=!3nNl?o"(tn!jGja7pV4uoDf.aSPg:90ZUXbl;*NMN5AQM0)We:pq5dFWh&T4bN)\m&J$/h?j+#/jKd'I&,(;0Y>U/>j\_L$U
%<+IVf`@]0*^$q?rW=#9[IYc=F&Bb6Q$S86!m#O,AmUp-UjlC%ji`1/#WktUiokTH?,Pf"Db>n&6Cp#eu?,(!8IP;[(5+fXHP>C*p
%ai1R*lj"*N=.R_md^Rf[ccB/;PTVu4M^[`3]\)f5Q74cgr;#rJa#!IFj1&#R*qW\9IO:;U`'toMZ8,:56?/)$=lYh-es)?0J%6tl
%TAk<gYYmU3R<UAf=nrl8>Y'(<Mf035^PoglZbM<P#Mc"j1[73\4o7<im.Yt_hYREh`5Tn57,#s6a<olC')"IDO;13O.q)b;`>uiu
%8JZCUMi2<-#jrH_.h2uD,CC44lRJi+8=+U_$KtNFYNFbC,*7_EeM3]=@Y(O7!`V[CV.bO-K"%/`/](9lBt%ZLfb@)_Yrl(1(^pOZ
%Mrh'UcKY]Y//);G=XB%Y<R"B@i:LVlVeU\G2E/$H?>@e[4j!=Z0fN,(;gX76YRFOmW6SPGbqNSFC%^Y"a,T5_5(7TWj=n43'^UY9
%80cMaF'5tB]lQ$@UZT/5`s*?oGT8@Vp*4dooQ,*2EM$gN*o[m(\+p7NR]1XWa;s`VIGFAgNph>V-HN#lEs.u4ko1o.B^f7o9UQ2I
%Rd>6/lLn]@8+fYfLe6)@#CW<+d_k=7cH_Q'VON\RQq\gmWKU(E.qp&Jl)?_f]07t(\u4hhOW^TJeX@]G=_85557Lm%fC31i3LV<9
%20<_Eo4n^joe<ou!HEd\2!j&9g^%:L$SV`"-tin=P"UN1K@IVta@A<oIBbcnhrC)fe#oT2r'Lu-M)O_rpcU">BB=@)V]%7K*.:!8
%37^X6),9tb_u);@Q(..q2!:r+h9_p;4FVA\(QNb/Okt(g\RU*X;(`j]r/a"sBm\%NhL3Hc+)og.*<3S<fF);W:CSs_DrE#)r#[id
%P%Vnh>&L9Ar]S=%AGQ1>G!C'F76A`Hr=@$;?brQmPocOJK!($YP1MhrOm.?%=B],Zc20Fr8aNu>XE4q%F\!ql88/GZh1:_WDm*!c
%(.c">+r*2bTq_oNOuqNSN)m1H5&f]o!1FFM5n='4m`@/'D0s>EcWXS%n51eYF9b%saHmFJj#t0Qd,R@^*RB9&K.Oq5-EF;[=i:e6
%:tnsSc6Mu+BbAhia@[`-+__Z(C65e(l.Yc)@_.4n+8+>4X#siOlWSH'*]6HK+5NnW\f"]9H;f%;/!##D;:eSNJ1CaTHA^h3Gq)_"
%10)m_p(GpI!nGHC*A*mYk@LZS+'B&XK&n@aWXi-,]siC!B)55[Ws]Sp<7>QTFYkd8Yi+4SW:!XbR1@`A]2IHu=S#A?WeE<gO!^?0
%6d95EdnuteT,m1_\FUqh$l9D'n)<,C:h)`^TOr]:nbCMLcElR'mR-F;J@"+qps4?.NM^,uY\4u?$XY^I[E9c>e3"<.^dZhZ=s#,a
%kcl5.NSlKIl6Ka?1.fH;a&IuH:fs$g'V`_l.)^u=lH!^DFV_,_7G2@h(=lAqel*ob6=M!loqkADQ;M3$:b2Q64a3^)4*5_tC6[4l
%khZH-NVODHq*c5Len"%XL1de)#N-G0!J;en+)=354]EuC_jj'&K#G%gemhqBZVAQrPU4^84>10T<!7?SAEn&HQ+)@G[mrWJLE+"S
%92cAYj#Fa<O?:2JS@9Q[o0_qjVsWN)cZac/j*a7.N'56c>SgG"MJWs<'pL=.qZ7Vk8$W#LJSSi]KkSAZhI-b;`H30iP*Wk(#g2%'
%dOOX[_d!fIMq*E7WAJCT:s^Q$3@h"pM^gu"+W>Ng<,B`-[KRG[Qtoo6dAHJl4Y9'!]Q2''bi2A8f-mV;]rY]B*NdR"YO!si^D4#p
%hrBaB''),`g!1/P8.Q/3V;[[;gT=O0'?Iu*mF3k+i^kI+O]gSK]oU)8RT\E"GWR(rM%hYq[&QFfif3"&(A%3l*YKt_.cCqTfI@Xc
%]R)#,g6%(ZnDT9BS5,"IGiREHkQL?W%"X%UZ1'n$aaZSOe!<=XT-1gf:N$`cP)Hj*rMe\@Mh\,R)S+mr0n+;q4%Hi&ClEGGj!>B;
%Y*&^$j4oU^@AYKjYioNSO->u@7mfT:Arq/!C`$`(X@=)P1,@&.DjWh3Y@cI(Op*)AE5N5c1JF[YR:+XaoI<=ZOj)$Io;\9ZVdVi]
%1G,Tb1LU1iMPo(=G?U&K;@fmll?"(a"R?o-Z\jTn!-\t,jXFlPd`U?=PVS@tocTGQ)OV8SAhd-t>1W1J[]l87`uHJT(kg_>EVWS/
%M)d9fF^t%t8e%!Q`oJ:4:&,g8CZ>*ZY5ppqXE?+X?qnqI#YSZ-/+VF+\"%:WIM8K7=K9EqklPsf/Zi>s\hG,[o1<,Gij`?!S3QKI
%+2>DD'>O6bin#F7fqY3g!pT=p;eYi@0SsTih,lr6\5"C`N]s0%1njK-:`U`BRnt&rVTk]k9XT"XV;]7Dab*apQ?/+`q^ee7U;cT-
%8(,)49>8I3>Kd4`SHS=6&Op"=92\Bh3`9F5=]7(r]h"B%4cD#<Nla2`@SF0S:;]E^2M0X)qS;c:/NYW7@FgBG=I5(A.mbn.&*"MR
%Z<C1Ia5u_DCp@l?D3).1Fi`XmO2G1^#I@%X@m>F\Tm%Jj8&bCB<V]k=UIl`D3MlGbQq,_\>,Kd:3GqE*RX2jmfTT2F;%?ui8$cYS
%#o,V&lq[,uCU79qFogG)dB.#i"Hk(R";]7.0\[n;-IJ7[E[3fB`ZLG%80\P6LBqLVZ4J`/+=japDMfl/b6GBaJ3a;dPhto>+Z:l`
%m6k-.mQR-'6!!&ns*VQ@^[F8`SNIlgjTb<6)@LL[UnUds!G"Y>.)dPY.Z'+<U$220W!,4b8X%gNP8_YNb_1M?$GqrmJq7^CeJU^p
%l&f"I3mEK5:LjPXs'3d)lseX]#<M2+J]5.=2oifRe!s;HoYOk6^E(6>jI6h?AnIUGb<+klqcjtl]_UomK)e=Md6fE3h0iIOf'=9W
%5;Cabra/e[f(C7]`!2RAnC7cIpDmdQ]R,#/)p"[d=ag5H`DHA9$AEg:o4(#DTm*"h7B0g&Ok#IgFAm0b[C.n[gG?]'R&e'ZrhJFZ
%b4t!e2D*>_)J]Vhb>B?M%6&J=WFO(6kG7:tBup.jP)]*QG-&XirF^6ddl?nX8j?iaY0ssd.'mcuikpQ9R.F\1K+"/&bU1\X*[KHc
%YBRl[4Z'SGh"?iZSR>MG(Xf.t4EA!m>qc/Nm:OC#WAVccp@.)C-0R0EhK?IWoB>U^%i4^J#O])+L"P^V]nJ-+l"s_"k;C(m;WjL!
%H\%/+bM=Nm]Zs!3VmP6q7:i!6.pku<=CMaj-QW_6f2hao]]$e--uqsG]0uqLl"=Rlc3\1YSUNIjl#5_f[/6!\G"t@3ecR4mN>jY,
%2<@n&VE+2@fTY"6&q;e3(SS&j'l?\kRhNROG?8/?@)THo6L[]F#fa]Vi1@2o?YXO@9+BaT#>YZB3%QNRD/$h1'8,aJ#elK:HuCL=
%;=$L1\<%F&OU(>7k0M'/5"lI\2E5q&'YG@lS='iT#5m'1hLtsd4^kf[S9('X3FY#KbdP=29"&:j46NKondTFNloFCZ3FgKVroK.Z
%(goPQ_?F`%i;D4E.AA\[)pmNknMU`i\!ollki$ACpDS#FRW.B+O26`s!<W)$__Bb>Gi4TpTgGkh3ijaqd"f:?6M4]`kVdbT4#lQ)
%LY<lf.is'oC&2]:L?WhqFDktNAXa<YQalhHeAZXRMu+IM8\eR]H]'0r:!&`keB9<.ZJUWJ@Q+E7n"He2#[-hu5bd^`V=K1]:^jpl
%*Ka3g<Q&(>4hTOD_[^fj^;P\oP\<.=>cd_sn9\8kQP^a'2-DZs(-7I-+0aZ-TeeCS?6aW"e+H#YIk1rprC%9&Ra32%<\pGf>^LO]
%DTk[MC9B[]Euif10m]un\"qF13,%-d^c!+s1\S1n:5VJj$uAmXoRb,r+U->pNLS$YZT$OlpR4VlmX?)K4hp`=h`W@F9K<kL!]'S7
%$ihPGB6r<kH6E1`R%9[0V5[Dh/^Lr!Aq'?IEF2Ge3h5"jh7<R]=.DFIJ'/"!p!OK9kn8kDIYI\G0@;<Epk[iNW.Y,m8L`Jd!?ZA!
%SV',Wi`WsbS1%hD,t=Fu135%?1a^W`R_MrZrDC'"fGPPZ-[c-GR)`o1=q4ascXiT_X7(oI*N,i3V`V%s\CF9rDGI?(jF)bl2\4.Q
%*!Te0qIX3[E+])l;m0gLpY=bD1QI>1"f"ms1Qh.e+_Q]Hb`j&0o/KpnnS&XgctirsV#(`WcqK3>2d*.cAA'Ot=Br,4,/XG.(A-ej
%[S66sjE6"iaV4bF.asjFOLWE[,'rGq3XM8n]d:_XD7K(bU:ci)5J;(jOX<tI@G2i]'[pR&R5FH20OudDfbB-6HWSJ(=7n>1?2u0Z
%rqOkhqcHKSgp#/V]r]d_NF%@e9.7$;,hpp#3q:PnhH!m-(>Ig51j6DjkcD(/&3a3YD;FGk%1VhBE._9r/mp3M$b4=p<LGS,'i?-G
%o(Z)&;[/O#a5-m">n7A*As>KW9?#4%P9SFNc'phQ22bq56ZJDXEF8DB2Hq%Z0P>@c]gmClOk2tgQo@OGpS`!j-3mN<\91C3c\:2i
%jd7M8jc5*(?IAa'agiBl05&I#4EuWoY@WB1S/&WP?sC=+1l_ls*VRHd?nK'Z>"7QM*R@V%[Rgp`Pm,(J9ralmgSMep]Bsr@AtV'm
%ls^)!<ktb[2/I<+P7p+t1u)USV<RB`b.U<"<R7hZi;;$2'QmImn]?/5bMBTc_;6]CbL5[@=:KP!Hp6V3o/J5T'6jqZ1j,BJ*^fOZ
%g^l&_SB!^1@riGu^Z-R,dQO4mBI.4eFk&BW^N(Vj&lAeB;rOn8\cnnd_-LIg\rHa]iHN]D&=jRdds/34^"i)7?mt"EB"<b\=n;e%
%m"6qj=DKQs2"i\@^"N9<''2l^>fO@"fQ^)j^U0\1hFnJY.*I:qd$/fj)aCHB4Z//`Xu5WG&:e<6$j+KaMc3Ta'.W`..0?upR?sq!
%Z!*KpBu,,nk[Gs5mh'`W.7L.o5AYKHg[%W>lgZM[E5"Qm)RmB4lr/+B_]4@if*rbsp'89O^2JocDh-:qZro>gl!)G8"[0!W*_=qH
%/t[5;34&WGc$#G6XaCQ#a^eqJOu.IVf;-49qUK$FlJ&=:a$SbJV;dZ^YjP3HAe#k&a*r/K$6m`'Uc"5jLQY&_-Bi'm8V_R=]#j_M
%c(B.A\`:=?!U?HKg$5@MYJRm2gq468G.5"r)^^0;CKg!Q>I.:G-#3+1<\")kP7ZQ!UJ'/f?'C4iR4pDgc;W+m6bTt2+*s%">OXLQ
%0XYc[oPk6+3EA*4&DtE8Z&T<eag%'W)]]refd%S-.1+M;0jE.eC"bM^EatF$=KHjG2ZDsIr3-M*bm*KM['&G.B_s5A\-E'i]B<Rp
%kEZO)"Ql@b:E&(scas/u]$X0cG_?F%OJ1^[Q2U0#g'5_rX`M+Dl.\-tU2#pF"Xj%_48qVCM=04P"/;(1p5K1(-X8O`7GYtpoh0)Y
%Wmf[meLun6"T!N9[`)IY,_,tUH#mKe-0:Qse!."R2.%;PM_k1s$ra`/X>3G>PZ*I?;'da9M&IP#JH^(:i^sfn/i9^32^@C6NFKN#
%e=@n,Q,Lc#3_RLBr5%=3VT)Ob4Kh7tB<oZT7rq`T__#8@0B=QXrWKi>c?ikQ-3'`a]ppT[CocWXh">^M`=VG3$$O"PpUh1LrmA>a
%Eb1;b*Lt%&dOhj;KGb[/L27S_?3(4nM3!pU1B<rE$(ja,<#/0j]hKF%6QR?ZggTo?aTJ>)AE&eF"Ojm;=!Bhr9\9Wr@lTP/4HB#(
%c=8kq-K(P>7-FA/O6JL$Roqq9lPNdPU2Cn*H$nd\DW_V'a*8Y:)eZEPQ;RU((u,aPZnM%1g_Z8&-\SQAIFRG"?UoPdqg%hs?#\us
%=+6Vk"1&]s(K?tP@?q'e85`taAE'hULKPg%RFm[S``>3qK-E[um:FHR\bBlD>YKl`>ibp4hb3j,\Rhc*QU;#iP$rT["Ck9LHbm1@
%^[");WP;\@PiEdn?@U`Nf__i;2A=[W,L,#)+KP`374caRY<1$5TkeUa=e7!^mR)3d0,T[QUF]/XB""8pg&UC3j./tEaOQ?bSH8tu
%K+oh4Yo7A44(6sD-JP(MF7sK[1)FS%Yo<Gq[IpB1g%okN&:Na;Aq%Bu)Z*;Fb8@tUjOs.\NgrrBIVMW(+/XS,-aTji*@6?n7p/i)
%(>nt+leAQ1\%^htNYfUP8/&Y?m]Sq@4$dAW?(9E)$[a2RGFRK-qgPG![ZNVcj5WX1O6<T7\*l>ll1SCgYI;'Dl$Qb\_n`"R)J^),
%*H`83-:E^*FJr*EVs'D(J`Vs'%5jfX7E=Fnc!C2-a6KsN;3dF@ct#:e2oCkcPALsoH9+W*If8Q/h(:cm6)Q<q1rE$l.S^O4FWdH^
%1r3+Vo&Vjb>9[cj.'0\\*_fkTMKeI@^"or_cigZe:D5RimaOCNNqYf!q[%:*FWb,p*`i-_Gn9:f2sbf3lSZY$725T)E&4obFq;)U
%!+fM'cM%<$?fb%2+2CGaDj#/I:j,oh#.3:%k!c>.\,]BH?]/unfp4-ob&<n.gs:#r+$Z3OQ"Ek`!P9tV!Kh(`mlJA@X$ge\hIgMK
%Y)8k;i_N`9HP+ug9%bb.IF$m<NP%t^dftuJYUfVVb/EC@YXrVH,(R!fXH9hjfj'-1mg#uD*Jp.M*>^4I[P\S$,2Ombn(p"tJm=+*
%fUfYJ#!S@Ei5Z1$)_ek^9X$YC]:k9Y'%1unbnF3-B7F^OfD<qPd/O[Yb56YC*U'e5UL@X]Q`YAQ*KOhOmpbMKim+Hg+Nl!cheWbW
%P2jm<pkJlOG$9:LfefpP'"aR'\;MeZ0Q##<3H<Bn6ji/rW,175oS+(SBu#tSN:r\T4m-l?RpuUMc^6Bl:km9rj_',7*<>26RJ8<H
%T4R#g9Y=(HrbV\YIsq(hnh*q]D6h.XkE)m(hkP\=#AO,F^1\^"*9<&#H=8IP4ECgAVdN-l)b/eB4/c#\0aV[#2q.dmD'(ACGLQ4K
%k]0=[H_3qajQV*6jWF'S]:!pdEd<.T9Qikma`U`FWi@?k-M/lrFA0=9Qb+PATAXT/4lJ#+lq-eR0XY-h)#[3f@hs&'q6qjIH.&[4
%Q2+V->@[mDs+W#01P+'qmJ;6SrAIh0f0@]`;!\tg,&u@[+*/5=aq)/&*Q@kppNb*Dqk&@ep?)&jG5LGuT)JoR[e]Z1#kKj*q&.'I
%$t4U>0L%plT-;G)&E[U2o.r5n)6Wfe';&jqZV5b$0L$;*.4np,k1.Z4]mf\Gc*NboIdtDDWmAG*r9-)snTR9KpU_ekhV>ho.:2rO
%LMrg_bH"]`i;6l*cDR]eIa:bMq'tMQmUBp4:#ok%ZFe6ki!\E:>6"37^Z*!mkWc/[FSEhjl+d6?q>:2Xf"Xg9m!cYFkPqsV^3Rr'
%Ia9$?qQp$hG;%<jkCL6PD48M7rG$D;H^_E&H&;Rua6V>qNmF<2H1pObPLk<=rEOQ5q8`H7=3l(T^&FjNd+>16T"TFBqWn*DVgjhH
%r;$rMT&5"qqqJ#eI^]+Y>k*='s2N+Z[ib5p8,`#9p'p+^EtF:AC"WNOnPP6/X+;k$r:OiCg)lsN4gs/`6bNh"aZC<U<Q_^Q084EM
%7UKj6?K^oT-J[.'8n[>AQ,oXU\18AaT&R\mh`]L?([7ktfc5X#Z:n3-o9,n<Xq^bO(L"L=@G9#GHrX?@])sZSZWlMAEdO2Z29C^:
%8uAn\Q?X^JiM@i-eW?9-KIcRY]O!)ai6!Emq\HA'8,/WgLo\&,Y?SMo@bL0ueC2iG_";C@.Yr;S6UM;kf0I__4o^M;j4^X;p,.*K
%Y=d?U>qMFrNAn&8s)p9CG=5[OY!A8ZX#RH(I\"5GU6BaX?=f0]N7)8lA2M)SQTf4e=`b)kI*K3G@E#Dj>"&nZ2#6?(IP&$Q/f&/_
%f8^5G^rm\hlf:'#^00;Kj"u$+Go`%3LofiGG@,&CHg-upc!L;N3D\LIWKAEin]!jU5QjWu9T8\n7gKj]npPQP<K%ZRJ:QSrMnGgd
%,21F\7YeK"ahr)<L9bX[@N".*7D&mi@hC"</RDc0=`4Q;Ea$iVn/$?S]%LS28kVS2]f6@#E3$AmqJg5^&e3^)=YH&&=s0VWOYK*o
%=mYi:qq*QE,'#G5cs5WPGG2AodCYDlli[9Y9#-,ano!&NX7UOBNtb`[p]-RgFIdfPom2ma/CpR&o*17lZHf\N\Lcc;_3>Wa7ja*X
%DnV`9gPG2LZMa+.YIY@=/OS7*\5UuA.>VpZaL4cE\Qa*aM9H;%U'2"2N<WP-qj0ejb)Eb5r>),$3KJsk/)ThMbYdhRhjQq_m4'"*
%juC,uJprtFOWh+&:9F)Z1;OU[RJh#)8`*(*bHu/;On!@X>r)GK8ightg]/iD37[k:+omG@5Z1P]9#XCO*@7?;7AXZ>9.OruC%bV;
%IUE`WUg2T95R3"/'MDqoBZOe6SBFnDb<uO:Qcai9!HPT(%WY<jSXo1:$m<tnPfV>d<B=&bbt7@O&IWtQTSAUFZ";8unuLuThF^h3
%I\jr1E2gKni;bl<#@_t77$PV"&jIC?2b;+IojbsS8S8ZbQ\A!&>bJqdU8K`ZMF`_o>L]MkYG`NmbrIh%N_Ot`(0NPqWnet7Ms(:,
%Vg3QJ?L""S0/!Y:]Q_1nFB2t2"2g[%UAR[9!1u\i6K?6r9&Q%mRde`A6'fk%D@3gO;;(eWT]ji<jZCE9PS5diMtFVD/@Fit,-+Q#
%&lZ+6atACM'WMXO`DlJ;W2Pu>Rspc1.a%jIR2Vmn9B?M+9bG2l+<*DT7L4o^GKLKW?D9AD@YU0u.q-1JS!LiVb"IX$)1lQtVH[aY
%0IE8EJ9(?YN*<Gdi5C.2M)8U$@LR6KL@?RHB'V+*jpJqg#qjY3oFV*7Q'UL#4VUO'>3,Rl<6P#l4Y>"$U/5gLJ2O(\2)6[r]']jN
%H?aO$DmS20Y\V%N&MGb"+MBAXZTKIB*L'ENg+O0iQTGt.7]Ccg(re=P$H=7Jb%qS?;!F\Wm7J7*26?ipmdTZf1;T9670bEEQ)-p&
%\^)6H;\Xb63U%rrMcfB;q2iKJqE10"V(,Z;K-P;t+i:V\fHS3^d_IMCP!$p6:*^%=j@.f.,l*?[+X3&E6'eWAPh>1ZRI"Ba4-g/V
%Qc)D`dNJM:+?=Jb![G^C6<NO"]<Ip#0Knct.PHjKMHHho%FYBm9AW",eYEALCH"f2__T4k;-lFr2MjE:_m6X7"_R-_H!"R7?^<<<
%,,P\$.\_2#5Ac2$P_Wi,9T12Ei<9`bI&\9HX6<2`PIL:g\jFgPEESSIBPUi:Q7K2f8@,tBo3U$+0'UdsQKG^NWF7/+WQ5mCEf-6$
%&/88/AT\SL;*#h0(bdc9?&2L=S'$:bL.#Qc!dOm,NehQ4Q(hcqfB%1c=+Z")*U[YZQWDC[FLk4?N9Cn"Th$'8e&)C\*+N,O\e:=k
%]_KG-`BhdX$j>4jnp-t[@=JDc4>DchjbI`PA/H1ted2c.d:[<I)%NDhQ:8!As)o>acK!Zi-F,4]W*P8E-ECn$BDpIY/6-eeN4j<B
%8"i9.bP*YF/h))"IAmpfGdYH^_dj)"$$8>Y/5&R.e_S/ZQY4C$bM6N!XpImXAhRF-[&hi2K-;kbWHMWO)Sa21gkA-;m86=T!K[I,
%GLZGBL0/l!obnV<-5%PhC,W"AfgmEf*,6!;+aQgBNYlAsaKul_U=;WpA%ZBGRcpf.79"As%BZ_/@Le6B3B#5l<'qSI<bcH9ac4aV
%eu5<A=QE:^7&*`,&MZjlf@=htA3#Z".aZ^ZWE;e:YPPj"QfJb,6@4,C[-Hq6?5LdWk+N3gRPWWr3VZVCj+;eC<&cupGY(o$=fT#s
%0YPDg;F*usDOI"?RAT1h3A9PbG=O]rZ)+>1H:asB2Q66r#+-5&dM>]ZCb`blQE^/Po#R3n7@T4!=VkL)iDu\gP4UU1?'<J<dCXQ>
%Cb8ic(i#Eu4O*\6hbKsIr*%A0B34QuV+_Y%*R@/Qr/rSa,gmg4',h5%jN,lFM@ck,?1B)E=`$NgDJE$"a\eA,hVi.&T#8#g.GK]`
%kiD!6@Ta)PK*6t.NVUq;=sqa>H(HF)U#nWn<Ek'miYCET44iRViuK%d?S5[Sn#4%OT6"fcrdn69[0r[UAl)8J__Hq9#s=4@%;aq6
%?9^+@ds_#1:VT03LHIWsD"iut^3T\DjgVjome>=/TDn?>pTNF9_9(lU`M.#LKXfDpP0T860e'm<+kCNB#o-l?SGu7o_YB#Y#j!Mq
%P$HP6\ICVr4=P:*<&>4%)iX[r=d4Ig1^>_-Sp"(n?)pPlUX"RK6hONccGAA!M'43pUFm:.1!hr%YTo`_AL/6sr<b1n4K#%p<j7\?
%U+P-gr:F:khu;l(hJE?EEM^r\Blfi.fZ?IK]N&6AZ1VQc&dG%%&#j%BJ)`t)qbnhpK7s:5"he0341^kQ+4l74,=1qq`Di/8l8VYZ
%--T1*U-Xto>\YJ@<Y0J;$^c?=*^d&d$j4BZJ'$UdBb1Ld<^_M&$75%)4e-1e3%tmc\eFBJFGH79EEV54_+f#eK<D%+]`MPYS0nt@
%\h!APUta,5:%fK7'm7oTT2Di<iE]\\1ljdW)ZYQq+Q@&8#iUPgaC]Zo@RN'"m-2cf!\9?4?AbW^IN[e%nnR:NlW*c;`Xe8/TGQ,o
%208FhHUFA%H?kKdc+pc`mn1UdP(Cg9N2fcD-SGcu&PnFT]q2QSI&:"=Wis@V`?SdXKsJRCZ;+dBL?7Y6e192%gO$hKIdF(EJM;A1
%i<+gF?B,h7XMJk,NBk\8_Z=V"W84,p,hB$g3aCtT&/)u$h3FcH>sp`M7DqVaG-t^GDZhs'//DphkQ%uG&JWn"U]h4,N)#.?#Ml&n
%TYN^NZG7h!+JM;P.9ZPe#XFW.Q`g=8'N54>k/lCLI4ZJ'C!nlk6JCNuQ60RQXf7inKMd]kUion+QN]51O]2Xn:NYc%9Q25<-&?]%
%JAMdJ1.gT,"cf_;O$E><-X^8=DO1*%lpP#<'qhkQb`kO;cA75g#[Pus$k)'=9=+8>_KU775[oImZ$0cmPh3fD6;+&,L4ij$TQ]f5
%dAo#t[($0R)RNmE7,Rjs!M6/F)-el?/&\\QMQ;\uFF[%3c:k5?fHd&Ph[PebJ9F>e_.p1ff^5Em\SbNQM`Dr(-sOZ366A-9#rW>P
%QGoCc%U,;0B",6W29J8J4Z!l3Af2U"2apc\*0s;l`I7smE^mC60V>%Oc%p).$tND^/;/RB5\k3jCC$\m2sI5OA7HCe:R`9t]Pb2o
%CU3]O2^X-HM=7$M7>YK>i@k,Mi]9%:;nA^8M`q6QNs9'>CiRf(dScF.Z6b388<asW@\.ODHAk,oW5-Uk;c&tg;=H'!Fg7!ZZGlBm
%(A*mU$o@G3:O:/B<gO;P6ZE09Q!#=R/"IDD=ja9:$Oo%_Z1)?E"eIEI?J9'R,YEhOjYE5)[_dBU-\s?,UFthg5VLtpXQ]X[(]pFh
%3Ro,=5A_")eAKFHYb#h`^i0]\%0ODDIZohCE=?22_YEMIQaf]N4GeqpDq@:?[Xq?[:0:M+kQDN:f5WsJV)@+)RNjO6kW*ICJX1mY
%&O"9ohNaF2e;9BQ;g1A<PS>*3:U!AZ3/PC=9T-Ip!m^=.%^6<F,:!GMOuHcQ%!<&@-s21aENc3NHb8@`o7/kTpg1<-rr=)fW`K,d
%'u6"NX[]p.k\Vk5geIT\d6I,q'3?&+`sQ$54qoU.UtSc],q6SVJcf+J-?#\9"EPH#OW6io2`"^WOf%q+Ei[!T/B:oi$OsXc+U9].
%%Fn"RlNun"ap>[0bE"s-BGf-r"B_9E<c:a4)\lJqi<(?!><4@$2Qhn;G^[@G.i7H9V=,)!kR;ePg)+M<[No#o@PcZ\f@JknNee52
%GO)qQ7`]@7HRN>>`0?JO&&m9HO<jGG283Ar!gsZeVN-'S]U7RHFE@hdQSp(aL!F4&YTds%\sWRqOgm;UY@:6t$WWrPn92&naM93A
%MDZmm]23+'U46`/Gst\rd09=gWq&PJW2])&JQ1Ciq<m-O'JRUP+92]]"a2F5mR3rRY\Ykj1[S)MN^.')qSV>f!+BTL@JtqS+m-)C
%#>?FhN[Wp?rE.5m!b-stEp7>/Bo9.Bi.5\g5`%+[pG*%BX2^[&MP-eT/r7+CK!:,7A6@oSlEVi1BsZMDfS=[-r3.Is@_jH,_Cd=/
%9C;9+U)k7X(eOeJ;:35?;SXNNKDLGj.A#K9=MT^.b^fB.(90c"q$uON05V_+^_Cm"3A;!R$VG^h_RKRQ9c1YmVmBd*I&7-RL5:;!
%KHd).;WaDpK;t"Op!TNe0-\A(6[5?F\=/5Mjr(iH<?M&u"RiNJ$<=>#&^J9hed,V;$NLPOZGI438ctd&iWHgtfU.&ES<[Z3MpdBt
%`A/2@JWX)n"u1GDFjN<-F[V6q&NStZ!b6bkbj0:)^O?2;d=Fk?"s\.+(<B@1-K\DXJ2_5@!Tp=Wo\s>"\7"YK\nf_l&^Fd;4PHVc
%fEO=?aKin$TVb)@?Z"?tGmLR*Dube.*<6Y&DaqXmjF43\:`CF6B^nd#QDO*\%]&'X+J_Xu'?^7c?\T^P%H7eRKsChMZDFa9S@TjQ
%8J<D*<!"e!jXe?[jY72o'u;kg<PjnKD_A=2=6"_NE:FM,V.UtFVANSICkGrL[mJr6#/AbKKi,a4O1_bh74,TD@knUsFFU95aOaH'
%#)j[8U:qJI@bdUI8Qm;<cN32SH<LKO*X`OtJl)qm;0*1--3/K]6j.,XU%a"'8IeU`WfWr*=V2m44D<;Z<#SN?o`d>#Jf]]eKKat=
%Xq<G/%hQE<#6<V7GBa6m?$h&,$%@p>b$c&pb.m0&[2=%;RR"MK&Z(0U.VA6b&[`aQ>$EYf)3T>O$#9f-O=e9!A6fqL.!@&V(c2DC
%^gE]7G?@7l_-F]EV/&4tnA890[[1Hb,+&9-%(9O^NVBsSXe3=3hZb<R^tlFQ;HuV/16[le7CRh`7-dr(AfJT)9,8:`QB!DkPRt-?
%aJ(tR<BBb@2f0bG2K0lGo*">`F)PIdM!V*0.jgEQN,G(di!e!<=f&Y7_gQRt>pCms)2!U1^u%P$8s7L+j!dsmCP)d/@8U$ZN#>0;
%nQI+`S$WaUd7XR_oi*<)+Dsk^`"X^d@PD8Ifh.,5+Z882kSjF<nX#"*)[nU8\jc3R7Q+,,FjW"YJmfb6BXZGWN7OZjM2e]BR'JgC
%Y/Ca1V\*@!_(H4XR8QS1Uhrj7D6s!_l)+^Q-+o![h$Ps+).=*I!6\Uc(kn=Fi2UMC!K/P@,ft_fo/(*9[_Je/S4@'/X^Z+h#Dq'J
%\.3gb1p?O-j)hM-iC=;@"Ekga7VHD2lG.SaZlN\jk(<>;pYk>i\HOAn*)$@C[-J8)6d.DSC60ft6!MfBi$T:Y)(-;a]ElT<=r<U#
%(c!:kf3nS%UM8!L,1Ze^^DKdu('`X*[RBtqaH!72g5(1)28.WU'pb8j3A;1UM$.pO>L\%T:E']4n.:I\\c]mKE_15[Ff'00P%>FA
%Gl=XHE=:e@Z2g\T?:KI7;-[Y(6lF@)I\hAtG\LGW&jDM9/Y]<h!Y!L2LaSrh8AO4Tbu.4T_M6Sb0MJ60N7mdi?lS-,[1&t&3CN@*
%i1\8K&KY(g[)1Yj$s<bHV<5jpg]K-A?=4m#;+>BYa:fS4L5DU<HV>=$9K@qMH0.IWhShj(ZfB5cGo/Bg&Qp]1s0TR]O;=8Dj*fl8
%'hq(f]!5dDY7kmVYs(PDojkLT'_Sc9O-@[+")6+3OBlMuKM9J>X]*j`kW7d"_&85gQtjbM1u@5+':V<$c*7=j#m!r-c-XF3]/1:]
%Tr,p4BLY?38WAh0*RkZW(+00YJNj/OOQeEWhhB/E;%mCU]Gnp,K)XD\'?rr"n-,KhNN.8KO8)\XGo<>3CKJ2_V+*pN/^(?NOt@a<
%KCuDPY+u549-$VS)X<$I6\Gamoob1:pV`op:f:.%#Hc2hN3^YS![id51-f"#P;RIq6O.hoF_^>C7M0`?LD@n9e'?PL!^CW`>T;$.
%15@B$E3cA'6m`CC2$HGKM1!-jV@:=$*,[/g+p2M56'u'hi'TC"%krSN%Y-+m'kU\'Sp%#d7XG;h:cYFb`:9BiQTGl)Jjfhb^E=5A
%Ik1/R@*<(N4ehO"=YTVbf-<-tSJ+>Ee1/7$l@WQ^L'*JP`6ckmi@rtf!JSK[)qI[+/g,)VX@$U"lS&sbU4eS@Zoo'C-e/F'WH!Tp
%kNi2Ua>BH]86mDDM3P!:3`pdFbSFY&;!9`DETrA\6h<BMOT@^[qC+-d=>4DcL_HhA-3muHlk)^g,n%W2aDXP\1*JY#qFDdgH=Ml*
%BXR%]q16(EKZn2^(6K&'&>CTg298H)lUD*1!N0kL:sgNX#R`]-/EUAO+;(L0V3A&K3%m!,!hPVY0]APeBob]V[B]@N"]mF+_!9ut
%R=_eZ*Y$tkmOMJNg5_Gj8R?(j!FO3XA3%oVJPa86aFl_8Bt"hi':TfL&1J50<Z9o/gq]\r+<%R7mT9'n;8)d6hCO])$74d/#bB;p
%dYts+O75"$Tf`^)&0=HMNrA:M5*Y2!%N:'@(849\!bj\A)#=Snq,(,5BHaU5Q8Xn`789f:%9/Kn=[8WpcCQ12eS"r:HL,Dm>6/V>
%<8&R85R'(hTZTrnXC-<?r[-%pOd"eZ0GBSsOYl;K;7(rQV'$,#8PsLNVCId*V3:(fX6H,;OF#0nJrT,_X=("cNAV?Y/S"8=71TLm
%,%-"M-`deCcmfbf&se&jrRg"F@4Hs^$B3RJ$)HsCAHHnDBN8T$EXjcFfV/F3!&PjBBIQ2NJ.3.%#26$?SIG5hY,i1tB,;8Thrk+e
%h^t-L_b?`,3Wc5D_FOua!Q*^Bg^b!Lb)piT'dQkT/gS5I1rD&:njB@C@Y8oVTco97[o`tTF-87NU;3'7'O!qf6paf-!Zr1nJfBMV
%Kr5I1O<J;]&]D/9V-1+B!A/J=KFLiZH:I.^Xu=YsO9;\SB%Z!/*XQbQN\n_bA'3"'`WArW9gf[;Y;r:IX?bXl='a$mA.gX_(\AVL
%ORO'CI7:hK>7c!\3r6qj%Vl4</S.oCAJWH3_^tDmhdc`O-R0H;jb+CD+:Q<qJ[&&JKFWHSS'[-kO0I$MgVab%'B"2b1(\@@!H]$'
%e:J1B'UHP/2Pn]H4B51!>%a"K4``qtqW8j2a*4N-"-nWAHpU(NX!*Ccr<+@]Wu8P3O!Q'ddC+[V&5Bc8:cN7=O1:'iPuP_[&D0La
%!PM*m/TK0HL@\!K*ms&uD/Al'UGg.ZQ&2FB!-OZcJNb9N;m0k1L(/@jW&TAJkRDhJbg_i1'94S@pX%80#Y5G!lSlq3JOL,&BSHbQ
%6qdi8]ei:X\_I-:`$;%tQ^HYL8:pQ`:`%Q,+G;Co?g?g3jh2dKY'l]pSN<Ma!6S//SsJE(>DP?U6H[[3Mlr(Tl6@U?L67+^XL9Q.
%.\:h,97%]Dh_faa>-ZI493_e-&F8D-H6%M\(0\s!$^U:=<R=.kEddD*l)4""\%tTWE4</iUd_kPi/p"49L^KQb6`/73*6G7>(N/&
%<1Tahr6&ni&kkZPZ)[&M%5ih$V&A?V8;oM\1b(rr-aJ%+#!/),jI,'a@].:[LI^U6J0KTbYU^B#JWbB"\sok)Lp(mA2rD/\C:ctE
%K!717(c^NH8Sblb4"JMq9go0Ij&2l[6rTic8<4Of;M_3mj*TK,SjD*4fhN)U4G*tL;-!l`d'@nLR&N<m"DTu.o6M#HTIC=AD-=6e
%UdY3Y#oQt<Pdr6$94P"i,mlp=g-WTm1ipH8QNo%8ZqD3hVO7,+'.YQ>-KE4`U<k+Ud.:2b0TS]O-i0XUm)Rim-t29^g%VQHHE;6V
%1WX;*1,]aF[(L!h7"/6i<LUMZNFXQL+!+F/WTRW/J2A@L(DS,G-m2Lk(ckM5Hr.q$+NVhZ'fbDn)9Gq'"CCRMJS87qQHKp64DaN-
%4QGs*#$NQdVCIVP=,H-&[(q]2$PifNTMV%.bZhAGZc6[,ZiCA87*@rTUVR#A)0T9T8GoU5GcJCs!eOlRX$$_r6u@;c_?+ncS=+1J
%Fm*us2mhfDa;TV6TRlnFBNXT)O9qcZ9,K[61J!qV=W<HsBUoXRTJCG_BB:8*RXPf7cL:uK+_#;[Vf3(6+!.*,<d<j@E%Nm-`Lb:I
%Ns4_P(Y-FEb6%iKn1ekkPGQYZ"u,>$Ko!P%>^.PmXF!&5c,;k1K9DZ@<\j8n(+hHY.>8`#fYWk1]<W"87VcGb.iM+HZfN'.O!dB$
%OAV_nDmZ/];h:=0`tn;D7Vu/kGrY:kC=3bu?&+ZJ%(dV-i4C,g=(#jMAY$\ueo#)@Jrpq5CCaA]cX:W1>*uJ\Z^!Q)V4MgNU<qCV
%`4`N$C39U76@?npr0k&(*su'nS8ZnQ+U\u+TS.Bj_LpH8Wq;G\MU\5uK]_X/=nC@2.3&==ba43!XIt:'X&lUd/SfeI@8fi<ck%ls
%Lulr`FF_d[aCTq<F"Y:)bBb@JR$d7Fg_qV3;c&@P35;q+EBJ9F)IB9n>/DY*-E8.*;M9otr]D;uA102]#Bbhj)?fPk(WU2MhNrrF
%aIaF9qJbVjbL+DL<_dYo,_2hm=J5)MFNLo(4G$^2bFrZ)2+ifDRL8O"oVDk+d@;$^QVL3D$$>HA>U`rLZ%N&ek@o1eBP#1fM3^X9
%<tRV-;\f\M`MOq*BW7g;ea545au<peHW@i].t)2:6hb(l^^DpA"#-ChfI]aDS@%3iZ!bB/^q\@*l@l0^=TN7C,K1!KA?dfOGcrRi
%d,\W?"C\phdWa'NjCG7b!2]M,#ZZ]mX8Il-)(Aa4.7>&U]lkD-BLYI%6-;Pil]T:A5VkAYFldd;9L[rl=qJdkMdct*R2SA>YJAe8
%dmZK2Ku1GUkMaI1,'5TS6IS[C@ibLFjtW?65:eo#D_][#P%>:0kd@',>K6Kd:mhRlj:RN!['8\BJCtFOm;,7p"*,/[O;eI71-oAH
%A3@)"XE6;',Lq?!4N#$B]dJ1-?\A-DG52JZiBjWAO:E2_1nOanE%[nn`k'r?MV7)r;[B!B<<HE>"/?<V0e.pSoe&c!>_;=oWbH3A
%1IDUV!8p>;KXa7QS_^#*l2[-<^`9">(UIXT0G.R:_H8#'^pM*A:HMlXO'hej'062oludieLlCkoU>t08Wp?Ja6o_E1l#Kq_-dbcU
%G[h_ZN9-(\+.p,d9ou`Z(B$nW##&Bc^M$H;W?S:Y-7I_EAUm5kh-6i.10["KZQdDJp3S'-13oG[$C"Gp<Ah'O%u[)cb3?/T``2FB
%!i\1F9=!>a?(d(/AYEZQ'Nrn3\G@=p+&EtE+M.-<E,[)H_cIsq#S;P)RY]Hj+qtYT"#1k"Pj>De:-iFO09]34nP38Ep_ID->.?Ag
%hE\FD(^M6oX?;^0TTr^.F=O@HbYGJqX((1c(j'?u6$(&[7R\Y;!@5sZ024[L0!0YUFPXA=Mck3Oiru042e0)-ZaOo,;_;ZR)9qfc
%d/sN=O=@fWT!5@jb"k<%L3ZDE(-MLaF/,si+YOOKmP<@1<)M(/@4;b_[ST([F`n[JrisB?XE*fP?PjZ`[LtpQ7Ve^XN>A-ed:l2`
%io.Uj1'-*"[*FS0!EQ(`72jZ.Nde0fTkCrtXH_<""4FLV!.2k^N+'PY73d-rn_QaA(_P0r]nthgP6C%P\.11sn=^s4^h^&,Au$Gm
%il=_Jp/[!>(Thp!8]D.')YC,_>acFi;%&j.Qi^I@XMoi/ICH4N6IeUP7:69.NkSZ&g)d&ZUTtI`Hs+o0`n#Zh,:9T3iCjMp)Iu6o
%VH8B[@#`K@\p@D)AAq.P!V6[l6\8lTha%D%"c=!^j[>Qo5@k/_j`K5(M\sJN]hd0%a&GPK(qP;a2!4_1R7N-A,b5ZZr!c0.pC3''
%R'^s\3EZpZ6rG*hfrVM!EMkL"j$4H]R_A4]24P+kM"X".)%LeI=sq,<rp]>57@t_c>`*L#=%>_BA@K2JV4YJ#hhEu$s5!+Vf`d\=
%?[i%JYFdq(q=W^sGCTMdeXsq:oS_>)Ie_3+HMN`]hgTeHjN['N?ctg^TAF`UrRpV"rtBmq5je38<HtHFVkT#:4o?,M)X&t(k)Q\$
%]g?Qj2VsZCTN&j9lD,8Y'edHQ_\liQMr8$HQCV\uh?=5)#d'>gd3d.@.-,tH1R(cuX_2T,B2G@[S-sYB6+Mr?;>Pic2l;`PC/g29
%^h^6*s/7<=XC=?3Bo!bfA!G4^hMlC/nS$K,nLM[TJQgFCnpa@;A.4B,8dKs.L-2:\CTDhAbV8+klA\2IZpj$:p:LSN*1#sWFoA_0
%Uq8V2g[eh$BMfH5p"PRkMM<&GF]D(,fc&DkAhlMC(P#%`C&c$j'chg[_Iu1>1JOJ6CdHln9P*:!NMLFlD9=iuUUl</T>Yu9qa-SR
%p+bh`QkkGYGF2o;T/+!GR4e-7d@s3(_1I1e/mrd@9]%&<M*$PKn$L(o"*-ap4#;JNfBR]JL72@W3>NQ#$`!CU:]V4:=u<Z6/SfH]
%5Tp+Ek-#>.#t:2/ZnP?!?rprZ'3ViZ6WX9"1`um`&\+O]OVO^&bku4hi.,E5EL&Esl"qb9K931RgcO4X/Ef>7%r*Guf285JO^8-b
%+%`bO+iB/1$ejdBO_:7YKs!"N)VJ>pjdQqMC+L5W$UVTP"fp714TV`*QkcC3W"<CMf/'79dFuoMHOVb2.=)@m]3l&3lZtu*%7u^D
%H[WYWdj,aC1e0(I!&YSDDo+YfOV+>LCuiM^%i-P()jf!foW7=c&.26gFaM\+9^R#A/eJS':7kH0>73[BK(Y-p"&j<(^lWl54Ne@?
%2;tUIW#QjVNPQ0_bGHSaTqu\Jk,,Nh9Q]=LOcubHIM(iU2=%l`kbT\gKjJ(]7!OVFbF>1\Df#fV(9oCKRk[:Hlq6-8)SqR!>Ek`*
%R$Gk<^9iZS(3:ta_e=2;Oqf%9=4<o7Yq]"m9B#&bQ]p-ZZ$eTbKIg+>QX4`+Jr?Gt2QREV986`5+f+iIJGOQ43I5K**dRfVNJ@@`
%,%BJ;dOGbAiZ\:$?6p2=8D2<6\d^DC=dkj]5_C\hBK[c8^iHTn_ukGB[>#@m;e"*!NMckRd?^N'g2qSeU']Sn1/dL;.(ZL+SNYT!
%##^kuM:qtFba+KQ!;_60W!=1IN$bimE@/LZMPS44l9*fl="RTC1KBI`EWfr46\R3t)Mf`e6Gu3GMmYNAQ"`_$3Z5[p6ipP5!&7k'
%b@/es09aQ\$)!7#O+S[PGm41j9quQrAM>7u@6reE@M[jZ()\R'hU/'@i87SE'3F%f'QksS;C@HOFI6@la?k\'%5(%SIqU1_Khb93
%&`&2U$VV0;O^2!C,3@Q%+Q##>\N.XgLea\)4:tO#3WW%m=$,)8Ku4P6nrak'2%(Ij]4`$1-t&;OA`cH4GR0_'O%a:*YbXX.ZLg"=
%F4VS%+(PChd@)Ym.jD\/?!LN;&[^*mWTcF'>)Ju@B)knnei@W$E[#lnT-m7G>!AH_`jZSW;4(Cn)m9^\!IR!*FY]5._pd!>Qq;*?
%jqX-V$[F^O0Ok.H!mR&Y,3rqQquK>AL=m3,%kYYV74OTh!Jd]E[,[;TYs]3MS4o_P6#D6;ac$-g"%-Vq<lHc^Co)o<e`AQn.I/1;
%1E)GC=OugCB*T'JkhM%\!YQeu%u33H8HD^:7P<Z[eF(`gXB5W<d&P8&f\;3lk+Ylc+[&p=^f1;KlfTjX@KOn3R&F\k[7d#(hH)L"
%!Rr"]:a('$OK-?/(d8/2AY@2'8W+O)Y*,=]:qSO;YlRf,=lYP&3q*Kp15NdkbKUWf7A(%4C^cH2JJo"D7Ndg#;b8N(H!-dQPHM7=
%A-(gV.KWguo<B8mE!mDYV:;+/TVAg:U<K63Sn*87_.tj7*1Vu/S-.?V@Su(L+jCR@)7H%\F`.Xa:=+2.RBQ\c7SOOuSn&ic.4gd3
%2[8+n4M:jk%ub4qP/R*W0:_f;ba)Ah+bbWh:jO:)os"=Fl+3"\hc-<j0?r"WS9M>Bb#$YX9+r98m=<<O8;E@5Q(Z:dPc,-<.$Ppl
%5YLQWX]Nm5%?n%QZf&H\&hQfo&YIc6KM"<3W<A#WQu,q^Pq')(bRlKPAJJ/fnMgYL;=5'an(QY?WU0u$P4od$7f\)j]>q`/Lub4b
%W"8DD/*kbGKkgo)Jq6Uk\)FL:NL>oSOpiJH\dj&uf`\%?@5L$AXmgiWS5WZhX2.X]&>kt&4GbBA/nkA+n-u8n!mF)f[b9P5;sfJl
%Il,7%00A_S7KjAaD2M?8Rk;*_4:Y2n1I.dF@>Dfh1FjFC.0FbL;^+_aHl4AfR$\3#%+':L6r>^t^]OdBBeLA)VF38oX.CH'?=moC
%9'%)>r*?8B#?Sr#oEDQ/Fr[CPMf'7kJF1<k/h<')jKsjMP/mE=REYdH=tTn2_pO#0@=pq!$@Z:s=KOuo0tiTk:Kgc?&<jg.CKYrk
%?Sn(T.krLbm-t'4+IuuS_YFFcqQBb.<lBE6.MK2Jig=7YP\a.;Q566%K28+R,r=rm@hmi[L`lg--CiYmOCcki,a)AF:0JYdXkMcn
%^b!hTp1iG=/N!*'Et@EI(:<Q3fsqNnA0Z$1FS?mXnl6>nl'728RFK-=7;r@7"i\//C;g7^5R*j2eXfa@5XN:6SQXiZ,ntTWfPZ[#
%CI4#Yh[2Rl,`V]MB51+OKO03*A)9HA,%h6$pj'l(SWm@aW]jKAS'<P&;V@!U[WKe01pc1t`Nn<D'k>0Q@1eH+@%Poe_29K(;U7$$
%q:h9X0/"+CS9OVeP5:ojY>H3g$5Q2;V(?,Ccc/T\OMEYtIHa!9i1ZIp]L?Bd7K\j'1s)th;%,[[V&E0NhC0G`N(?U.-O'RXN%G.O
%o%E:ZfaJD-1J.YVJdg#[i$]$CEch'^qA.Uc:@m$/]EK$KBF/S(G_DBeOg_sd,nkT"UqnQbMPsZ8/6H\VS\^fGVR0hY^`#up3@em2
%*7a&s#n)=;ptk%e44$pJ7?]VII++4W3d&e9hB4+?oOF`l"qDr[k6*&q3]l^AHL_*#^'[Mo3p(ucDkHZ":RE.+_I/I71")^I6o3"-
%87[:!4X@lnq(_^i<D=8T0S)Vk58X^SbQ;e"%fpP\o*VPee!6>J=VjGGEL)0$"KT"Bk.'TN7AJH_Gln#9ZrBb?5mr60ZVSAujL&,1
%[n&;('ru'sIVTs20pIQr\C?bBLU:5Q>"Z.;<`C5/;L9f4U94+HLb_"ZY0s%5$@%<"PUK6O"X[F(.GWD)aC1$J=%(*](ReXe["[!2
%8Be9dQR)iS=`KP:)KmC)"]WkTKVkTPF4?%r'$X*-6??j0-RT^7/IruP#TCsdHlmh%2,nB=M#j%6(g2P+C4p]q=0sY;drg6ql_R$c
%P5q_HIL`]>N[Y?(OOaA@#7S]WNFpc%18U8$E<,;93[^lI]#a/L.fs$_,(('2QdJ.r#9]P<NC1innBgD7FJ]-r6(TDM5ClV17,Sb^
%=a0)c0WZ+UKkCsX1-\M?E6+oUHAD_0[<2WT%Mapc_:(.J&5[4DI=US17C->TVVm.-W`rH@*&(VY3>$=3DSN1a5npZS(Df:O#cINM
%N.6`5H%j\&$mSg\/Il$i>0G?Krl1u"[(`M?Vqb)m&<VZC%Q&O0^b+_N/#J[g(mKN=`E$,/0s[f/KCuV@Jb_LFAY>;Sjk0q&TTG(G
%0<hRXdr?]4l)3?:-Vf7@Y]?&<HH#MZ9L.!W]e7t>Z;/$[CLsu<iaS0<G_X2$Ue^?:roA^L8"_kn-]6)+lXS;BZm$'[?T@[Q;mm)d
%c-#!;U1d7:JMLd[?e,"++8^n`&A'd:pQ<O[N7=="G;LO*`Gc_Q8U*(?4]GX>aG%0I2CX^f7*S//d*6>PJ_A^_$dmW9:D\I>RENuE
%K[Y/?$dW(Wg0fGp;aTg:$N59;[Og(k9-C1OnQ;elO,YZHGX4es_m<`?jeuJ*b.Fi<\/h>CN?GBjI0@`YiU/J]*OZoS*iL,f`#UmD
%RP<"s0K67%ZK6=RM6Ij@>8kY;d#q!32?SOT*Md=*3Hu<$L(3m7XG&?RR8l;n0t:W=J"\o`EX.e2f,83YpNd<M=iWMQH6j6,dE,q.
%,[Q"97Bh8!f[(HdmYsMtffHm4-iTGH#5?b_"Wbf9M+NYs1>0O'C2/FQD$66`C,._X[Tp*nA3(4sfL?&)=-T.*.a#&qRH9khYJ<q)
%gu>is9--5/Pqj._;'?VRCm\0i/hsG,\<Q\:\]!4Sd_Kj4+4\RQ[\>,U"H9,X3g^ML,V(j^=Op@oJ1/,lX(Gj6-^g'R/n"#+"?7.+
%35L^<=>Or_6)LU:\o&hQ@FnIiNWYg/aB:pp1?cFT"M,RO;-2m[/EMs]=Q>bOgqY%Glp8,%@%#?8;GE4jXqVal2JD-hL!2-mqhlAd
%:f^O@?`ne&XJ(;u#s8l`6$*+c@Mf`[Kb7@a>5:glL-SZ&.plGd<`j])73g8&gMler=r&P6TVA7OE*?^=VKD.9`VA+o@$7tNG9VKH
%YU?l@db5QLF3i.OL)?%]@+8;!6D6Fu/QVb8\:Y#QG!u^ue%,nl<Y7kN;b@%%qSfHfZ2Y51U4]4P<0d!bo,IpOAjCr[<13n8`b[!P
%S'o:C!%2OJ/2hpY+m]@D&Y;QRRlZZGd-tOCY=kNtN4hVD:d1XhGZq=XFXP^mlV$]nSOg=<4hp0!79q.ZABp,?BKSf.Rdnf@;C98?
%IOcOG@H<EQD<STBq3sst\Dt0f#NdOoiE`\9G/i[;[Lo.Zf[_'Ni9uuZ"=:!TAV>.[MD)QTB9Fmr,8=Z8YGU>l-;M0AR4aAZi/Rf;
%DX.@V#F6ri?_&W?&Q^s""FJ6YR)Yl4BEfgngRQcMj05STn(!qC[;$Tb2l[ck^4nqYmm8aJRuSVH1%G^t5P0"`e%]'Q'>g/:1)j9a
%Qu/Uo:+?_i99kg*MW;H&^RdI)=elJ!W`+ckj#.s;if(I7F@IYgaHL-SSPU;":#,TJo80qklp)LNENIE-8LmFn.KD!Bc=]%T<"*I&
%J@1Q=+IA?d*6EOg@qI31Ck%PVdm9lE?WI[,jbu<,@E5TmLZ<,(Lt]ulmV1^l1[=K"17^EFY?NPNKZ)h?3<5Q;Q8fj+:UI4pL4]R1
%n]NM$G_8pug0bAFYn`a88]*P6Udj("L;QRjn0^8033WaUU2;<rZ__S^`phJ/n[K6edrtpPm=m86fo:pO*AP.G9NVKaN%LRS+sh_.
%(/CrhQ%-dgcCA#_[!/Nhk13"G7MS[;N<Hf3'Fmme(>DFqcAM7=7MB+<OdB:/_NB=9,*FNT\Du."0H<,N3%,0&<'#iP5q']cq3EEK
%r!h^ckrdp$UeIH<d"K;@9pQgFjcI+/@5p;>3-OM\;P,DTOY)6NK>A*O;Lkl[=+YD2dc#grpqbp;OI3Z/K=>6&d`)bl.cuu@aMD*.
%=SO!D#K7rbj1u1brZOT)L)M%['N$($RDH_IAV;]M1H;>A&lAG@%*l!6I%@4P6%S.%X2UACS9r-s5Wu'^3?F1ekXH"F[ER.Yg?^nt
%G>T\@Xa`.TDf-uD>-F>5*(^sB596Ya68#j7*.2VVY_-^IWu?s=SG,ADbb,1g5o73'/Nl(^\SKCH#:E@MneMEo317F`YJZYJS6.V0
%k.qR';QYX(h_RL,mS[]jA)mmX635Nh5nHdh/P!,7M'/=#jPp)0&C*Gi=F]$2_I49;8T2KW:;1+6?[$s<&jpY'JPHc:(>\h"6P'ac
%<QWFD+.Nc[5,/AGhJB8shU$lWg)\l,N-rM/o7:`71I!i4aj^VUIW/n?/jOM?5<&^/PfG@?\7;5&9.N4d>0(P=pq]PrCP:Xs4ZF3-
%;KE:nE3)u1kJ!Vp-^965ZU#*s#`r3g7Lr8<Y#q+g8e6q.!<dOt*SbXE(21Y3%h9/3P[RdFE%Eq/'V-?$OU3)-8`p=KMq5mdpq\!F
%lH4S;#=m^.[3St*E5[S=QZ[ar;Fi^WWlbjTWNf)Yis5=ScE1gMK6pKH`\Vp[OpH&K[,-aANj7&!%utdM+mJNO*ZTh:M:?sE*o+m`
%-@0WJna;>X>al&7)aF+DZd')a:F5cuo7QApdDn+nnF[GU)n:@^eF7SIOjP.#j;(*BUBbEJA%<KLi!]lP1>s-73-dS7dMmLOQTJ,F
%V[)rg$L(T;E+#cKH.p]!"'/>C][MK8Mphr2V[(7&PoGTukeTE?l)J+T_1Cs9[UIO8P=JX[_e4:79O/k_2gTEE!/j9`B\p7lM'H[2
%i:&:Sr!e*o[*ZH)r8:*J$lsh"q8(/q=,dWOr88h@-KiL*+.Nf_\W]'=\@0nmnq4-4DYV'4UbUK1o7N6G8p<TZIW3`]/`uu6r88Cm
%,qq0)E98d-<mLKV\]ZBgc(,s3EG'jN<do!!gDJ]AbR]`QKU'o:*umYj>_Oao31=t_dnUJ"'7iJnJoE8@`(FWnE%H)=dZcgZ\FOP6
%2@./C)?Gf-)ids1Y1:Yr(;Xtr&_cXUiJoH2M`W-h-P]O=AL.W&19H/B+UA<YVt*)sJoK.rQJ,AkE!P;XfVO3C]Q-fsPodRjAuKV"
%_;VjJ8#qi+"#d9l$uU#2kCEn_-JU4V6aN=$]Qe"5keuDi.BiHh$Vg^1H-h.QLPt@#.<t8@hA]5Z%)`eXUJZUV1NK%W'b+=;9=KT4
%Lo2r_[e#&31/l!8RJ=SNp#Opf5&dA>F$lhM#L3YZjf>$L^sO.c6ZkS3<\Wb:<5o0'(>\Cm_ZsMY2dI8Bi35#IEC+:?V[[.cU+77/
%@ZEl`ft^Msb]bu74+@(a/`"ORr7h$'12sPXP/"\/J!6UbId5Wbe2c0%CLbqk^ta/ZiRScO<haKF'Vi'EoYr\/KAfT(XmZ9%CUB2Q
%&/p%F.EhMHoE[@.kq2=Nl$oqUViRJP7i%[3C!BW8YWTE?RSeX"1(fOBk5pG##5Odg^fg'5&qP,);c]$&-?."?lHmhD^`!.!*OUk5
%*70FW!GtNg/@l/3<195jBi:k?&qQgo$9DcCE:08(<m"/@NX"qV&\.-g$uLg9n\2*7lr;o=9gu@$VZQ%>!Y=0bJ[;9[W'I6^V[;^S
%6C_$5XQC+qCV._3n,d7.1P)mL#:otJ$(Mir.pF3:1-q'k\eBYDOCfEL9E\*k9pQE7,&i8RWKfLV3!&!TiiSUSS=<]Gp8epYPBrNa
%_M/>daYW_Mc3$hBJHfBB!=,/?li4FVi7q_0`?UoYS9/Vt^7>M!XG<lkg$jMJ(/]p%)(*0_5Z+7=Geh_Dm.Dq@\=/@L>C"$3,$)-V
%H,(H$aC*A2Gej,S/d95s:68_;en6%CQH*[C`H]1tAX)f>Ged`+lMd7l*cOdmmT\O^^`BChJS8q7^]B0D95)\&o2Rr"gM"B24-8'+
%b6-%T'7l7]"7D9N:#iVPJ>7g'QQ$i^7p9@Om%0HNfXA#:"rp]VJ-R#3E'BI"VO[p]L(.qf3XrSDe#GK>!QTD!DG+UC-iYM$[5KSo
%bY-qJ/=cs78PYM]c2u:W`S?35"l,)sPr]:4hZ9\lK*@cOIk\a[Pm*[X3eW*E"WTZpZAl[%m^Q>!3?nPP1F4,W*8p%sL"iUG"ZX)N
%WRY2[E#.H@**3Jd]Y5V%J#<9j9)4RX']<f(.de#/CuMg!SH><5-ro/&JC@Tj[Ug+<,aLhAU9gZrVl^VknXCNVm'"B',R6;S0:?o=
%F+@aD+9FAZ^f;JeZBBb0*:37/,lsq*<;Jf"/o(&p0SXIcJ<QjoGm>8uE,n0h1CM;*%el%6I=hVA6=EH01C#mnMMf-SJ2<TfGKQIZ
%^bmrS-6@-X$!%6@\.[P"Q`N=-BXSbanUNFBcTRp^%ldAdAN/KXJ`EjMX<'dfpbJDq)^96I5LIn%e-_,Ze3PG`a3@^>Z/G^R&%'E:
%+6*C"IUlGsk5j1Zp(G\r^sT6">b)+)TtuutS8/5$P?SfAa>tgY"q*C(`gBrB@0(#(Li3q730>q5cHo_0R6[)j'6@^c7jq@D;*#(E
%@o^*eprie75c1ho;R_(\k1pIbE/'R4$ZB^oBnn0F\FP0Vrf^_oB*-\":"il/'=b)4*RL4iRIiun^<Qik91*tB2b`.g$B^%?1P#X$
%e,B8,'0'0[eSi>.Nb7F-FXD&i_R>MtRD=[MOZ9j,JMYc:AmK$Nk<is%Cm`!]Q+B1aB*-*bP@JejJMZ:P17/La3(-0VF#jso`edps
%%46&VWV)A(TXn[cQFmi],CR[DduD0HY5)MAiAOBfbi^2nh5S11$W;>KB?=m;l?4`u.WF+U0ntr#gbC9"nk')2">B14]:f:-JBM\V
%\OnRINs^5$"jYo7@Z[^'gI6a>3Yf/K7Zt?Z!bYjCMf+]\aO&eT)cYbP)%aHW!_9.gG!W#-LWs+?.;)W<5hh/(D5@;Hn*u*s$Cl`E
%^L0D4NY#O?Xm?6,3"io)DC-iPY_pT/?$:i-S2FPcdCH?kS]SC^2cS_:!+YhIVZKB2Z#4a4WPDY,VK\Z3^eof_<!L>GcLNaY<7T++
%nJ57fhe+]`]In'3c34\DfAcK5(H;P'LSf-DCC@A>c3;Kd[:SJ%#P`5]%E8R3Xu*$9Pm^haUg^)$7hRkl6l8n]BJE"oV?4dtkT1e9
%$CmO[b3*V@i&HLp_M/@:=m_X,pmh_]%kW&Q!_4q3Vo+5p*$;#C:F?36n5aOP@fcm2Y)^>Q$Ci(QUhAmjhunSNhE?Ju*!32q;5XJn
%?eIHW*F7H:qmgOQ^t%7_D<1h3N/'u1SI6DhX=2kEJTIsWqsA'"*]Z=C@@[iI%BT$QY^nSkKZ11%Jb/JAHuqRA421a,@#ki\")#b%
%IEr?E\7=A9CK$0&>W\2IkSYI%oO00(M!X_+#r4'-7lkU$(@'2'7L.57EY<A.pqSVP92DH1+#q_8WYNG`*PdEOS0/b7E3;[Ti&M01
%[4_L!#CcD?5CKI/46H]YKb?ZL/KZrH8U0*E%ih<>7ao0Y:')Bc->rUodGK$t#9PqCX=SqgI,M.TSo"5<d0qj?d",[F&\9'+i0a3`
%P2F]=j%<%Nmr[K(@Ij#E%\/SfBgJX!a"qD>%Q\Rj@/rIML(9^p,-'u7*B:t32>`XK*3Qin=PV>U_iH1]DJ'&!2S`kSc3=b8T[Ehr
%Y^rR;$m($1*.G;YO**@"a,Qo5(7s3pd9I\NVD^>O@XF\l$o8h^hTh6Z\$LWIDJi6b3b&94HRMhZL(,-<?&bp.1,a*YOORc-#*(Z*
%pojr=3$Jhm9O-LL8m1Es'f^d_/Z4j?*-nNb,NqhZc#uG.&qL,mbTX,Oi+Q4Z?"q**!CegOc7ImM?O4R[&o^nM=2/d+2r!Y.9**mc
%mu5'_%ST9-q[EY;@pMIq.g%b7FA.Vogi<(-;FSn?i#o@9?;`-NLR!L4^F]J2TnrQ1ru75-FFZFN2hNH]"ubi*E3@<:C[BrWj!Ri@
%-iXD.)<b54gu#?&$?)fkhjK:0T:CK,@4Borp_uEoZI42CO)(W\)!a,dXB=Pl+oO#ZabU2d2nCJ^QEZYHS'@b)l(m3M;2Xp>qTTcY
%m'`_IOC$Ln&(5B@RVees#4De5at;Xt0:*Z3hl+M8@%$A/hf'Op);-qa/p]"<m(:uKj+H\;q.$Ou;14YU1:<D3)fO!:b[C8o8>jt1
%1Xe:PR4;Z>heW8s1ml#)6:5;,o\E'<fN+_b3.8WN1S4't'X&H4hl'[1+g*BRaDY+&f9t\=.s%dB`A\tUaS=s%hq32*_$o5jHT/8O
%#/<*RE%l]%]f0Cn5,8Y"2g3.CccdO+`oJH>dCHraFY_G0Anl5e:<@tBWP'%U-$/NKm>Y_,`1Zfn$eb7Y[5W0f=Ko-jp-pij!e]8I
%/^7M1^HuY5(LiZXL>3_Z&khdG[l5!Nm*?-I2ngi)\(ZYO)8/;O6g+,[[]RQ(fULja@&6AP."L=a;!oJ"#4>:3]Ogd`plEXg_<anO
%^D+F<HP>L2@Hs03)o7C84'<)/DrTg8[G"N*A,YCW$u0]3FQ.(jQ.d0-24`q_[5UiKg?`5@Aj[eSpWVu`Anp'dm>Vkc9a8'c*LB5r
%QC6Ks-o)D93k%&L$V'Cd[l5iLL=E]fhDCC1%P,"IT_Sa^i8F;uMcS\N\@iW/p1`X^-@YEQ+5G`62U'1F5+tqL,3-`_]/QjcA;'4u
%]/NHjOB-C?I`:<i9(#CeN0OYfEc1s:>//Y1]pU)\Z<t_e*GlRVJ8NB@a`QHN=c'a*eV?\>Ec8MiaLKlcHTUoYgIgn9i+Q6'^%IV3
%7d\Hb,_QO1[5SakPeY#4]b*ushL@>f2ZkK[rpS(fkZh`F%VBVh<3cBB<c2imi3[hm[l8_4AIt9?^%&?10F,(r,@2!`C2`l=7#e\*
%h?8D/dZ)s"%4oC<eD:U]/Er,HRs@#!D*#!^m!ImRCm_nMooiq8R(\&(OCbXPHTQ,Vjl./a2p;-0"Ee<pAtIE:gJE77GuX)!:@/Jq
%PN^\mp/X3aX/o[-]`I0WmN.qQgHa#j;L9)PUt)]Cp1?l)OKh+=9pAIW_2[.fDasYS9C31aT/#=km>W`k+1,JM7Os=M3jCV>>AQeA
%957X$)mL^_#3r"=814*X4R[,WR$H<n-p:N"40^_JF;aG`hLOs8Z_Iu72fUu]%s29!Zm=k"60uk3S0qDt'77%q`<E_+HYY_ees4pX
%Nd`2&m`b#lrftE7(pc.f]brYlKA)e<3@89T\@ib=7LIQ$p80TurNkVZVFooU*QIJ@Aa$I)\\6BW&9:/*c%KTpdaG\>1&&4@%!$8u
%M`Va#aM!Gq.HY=)hOLbdW'Tj2(8^NUOF)&c\rjA"=#Qe<S_O%EGQ0:Gj+Al@TE;Mj@DhKW]Ym3Jgpk%#VFPZ]cL"?sh8Sa4Q.oLV
%%msR3^$3<J[o.Rj/_+^=2UpS;\B#N8WP(/WmF+\p:%,T4e!lcZS$iI+lT;L5F8D<9g:=ocId*d!eGhk3E()h='gbq1<'A<U"Q$mI
%+f]YZ$JTO@cs&dU)2(99";sL5=Y&JC:PO4Oi``KrfTLtXC0DYecG[LZmVF_]UVI7Q&MQhC#K$hdc:]Fg"LB3a\cY9cLq3fo1Ib7i
%R[K3>_F%?_#NW-6RKepA-4P`Bq[B00aZ[ZbH`ua9+".QGNSL;[L!kauY&EYqXrhs3?FS&YPX_eW0Er8/.(6)Y/W-J)3o,L@I(%\1
%!P5O>)%RCEn.J-b4nI/b7N[c"fPFogW`p/tja9FRm=L#af\@.[NLok&dCg2Y])lUK3s!mN8l$:^a$t(f,c%V'p'kH?K2jFrHZ:6t
%6<U5SZkQ`D3h'tpa+AI[HB9co4tjpVJen`(U%DpDP2bDrKF^\]!Q;=9gnTcs.=<p.i5^;@G"a^$*\Fs)!g8H\L`2C>(0KW.m^kd$
%$cj:[!N;K1JP;o=dY(EESDpH>.UA.%MO*T6UFL#k\?r#60?!q,*ajn^2-L?2EBm1`DKLCt(6+'C!ZMQPK:;>ad0'uEO.`'g=jck>
%=B5R+>#hL0cVUn?AkQjYZ_ku.[5\fA,.ToVjT#RL!be^@RjqTLc>10Bi07*\8j&D>1?:LN<\#?oU]$clESJ35.*ho]Y&<W//IE%u
%lRdS&$UO\0'bI%g&[8)6Me^%sNV''_PTm$N4V:2r0I[GUI=A7*TGGh;@>*lr7Kl\674lXD0\E4!pO3*>cD$iI1@:;qKYie>lTWt&
%md>ajGSMg]CkeknP%6mNG\e&D=_V<TH>4+s-7jCN=]BneGi*0W$\(DB_[&a9,[I2!!]1'7C]ZAT\/uNKYu')Z[Tc_Zi7[>7>1>Ll
%ieUB<m2Wf_hC8^UdjHIrC.?%rb,SumOsCO&;]PmgC]R<;HAEkpK8sG`,a7]DXG-Qpg'Z?mW9E5r6:HGG3#G_QIOKE%G1oV3-ZGPe
%G#;/OGI3%CF0ZE>l)!7RT-RT*Ao?NZOsF4=Fkk3O_%jg%XhFk=Krb>Q>EDHB\rK64#?7N.U0k!"rBt\#J.I6SrZHV;KbW>cKJRpn
%!l0!DU'tWR6@-Sg)60usl^'=mlLaU^73/NrGT<n9k&95_1*[gOPOp(B*76pb?kM!VcHOPhJHE[GjJAXi"UB>"@P!_eTERn1)FH2^
%.*8`XM3.3,W!Mt#I*Yf#1C3j)*!)]$#tV?l$e#C769]3fZ)qX]A,&s!0JAm+M)CQ@mZ;%IHg+74`>p!/WTQHW^+"@M\C6pG"]\u/
%K&rJ$D,:&*6kTSB3IWmu6qhMApZ.n'k&tu!E^*%X%G6O]_b:>e=<Sq"'/d!$](6e,9*Z/'O!n_h9[q'oQ4uVo(SitoQ>$hOOA)%O
%59L19W&C64/A;h.9,Tb2h*b-YJedY#5XDe><=0O#b8;0](Jp\A(X'uF-O^&"&UDPjHGqng(uj\L"7Xc>g,[p2'A-JBLQ7jf!n>/(
%O<,"gGV6m75o7^\_hhB=hCs/a!>eoP'I%l?W<m5EFW&skXLN4cp.2B\S>*FqcX>9NA<bFshIEZ,JY[Ut;Y,UCY*lXj+?(%'f!b'"
%>2G"qae:hfb8_;n^cdJ"YLW>R7nWl;@d5CW>_tl)`*9RWN;ui3"@rfn:4bTeNL.,_f0ccpgQWm=JWL`QcmS5U!6c3phb<gc-ciL'
%5Tr05@u!3H#n7)j&_NE^8fWMP!J!o,]b&<PSemjeifcR5OdR2B[n6&)J3lLF',K$3]f*Gj)d!o6#loi&:?+qP;HnsX_\@u>d7`dJ
%R)"Q+4oC"2/A2a]%S72AZauiu>LUG/@u)ZY26C;4a6%(]G__R'h#Y><2+m!5R&?$QL?=)!4-6TOU4rG@'IKM"_e[2;2V6'H3E"W:
%&pBc)XV!-gRWa6(lSX88[AnL>p38]YZ]#hkHKE(X(*6XIT)0"g^o\!@_Q$3QEGH&Pdr;b_Vs8EnB^E.-S&o*.<%qeIfRg)jr9$iL
%q[I%R=oo@sX\&7f/t2"CH&OS&Cic*s-]2!60XJuomUQZud+p6-Zalg=@]p/=.e3Zn3+3?"[`5&?"G?u16sWYa]A0a9d)FcS(Q+1.
%)X^;Q)(N6`eQ#<V!FR+pG^*,fd>&q/jp?!TR)Tei\fp`lGZ(@sP:Rf&/pe:CZR'Tae_F`JBhGs^6qu&d4C`2sc.=OqX"i[cX'OKU
%5pN_OZ$-2f)V,DEEkK\3Or-(q,9HnM4HI`]qhEr]GBN(GF9CYMZGmei^1`fW>*dGZaH,D:W^,Y7,h*GbA(N)NTQPLcD(Aa]$$V7Y
%?<\8*AIBI^0(S=O(MMs<N^bh#6>JI\2b?7B1Y'jh4TJ1"ZNd8"n[X6k%rl8:>s;(G#LBrm&DRZSC%q,]LbY_/q^CLM$#9_62=*kS
%(E7T84L9"gGOJm](J*j[S&K)8n3n.'m0M:a<`MIHE&/)fqc)C]68p3E#^'\h0.!)q-oG/4NOpm+9oT4/G%b;='OhumkiTuD/uScT
%$OuJ5E3l2URqf@ZPP,+hT6>(j/[oC#TG_+5"r7VYndF=Mc;3>oDaV0$i,0W([hKZT%bac*rI3-'J<Yo^A0mF?cWB:eY,<\aCUPsW
%#lY[mXHf`+.T,OL;&N`H)%'#7JLB7YG3NE09]lateF>#ebp@gkiPZf%E:0*9Krp^]pmPSrY[ZY>?!<"K2nUQ)UI&M$AO^UB%61FI
%C-@X40uM+"qJ2n3QYkEoCCEip.FB[&KXnmcc^p#R<>gGmH4-D%;8/aKn>-[`$1-rQebq16R1Q.>KE<>11q'\,01RqR7@ariojWGb
%m-9B"L,/T"Y%"qNF0JB?oDd.nRl/6+,h^''1=L`OQSDF"25uNtF7^_Sh0o0,CAG6\W,6?E#(]2T,:jfGPZm\E^Gs7s+u=!8&er-]
%K$r.#!KPrEoC282*%nQ?\[DGcIGTWHpfN2tfK"d>co+9(&cG[JkL8UGNOeleM;3abB#K4H)WFBGW2o'IU,j2d-I5@/.#Ui]4!*`2
%84^X98c'-jn#k5m6-S$C=U0[Q7+s_M'sdMNr/$Tu%_KMVn3!A1"Lpn&,O?ra(*,Y8Fi:R.JaWaD-J;@0:UFj,V;mXG;j.dJYTJ[^
%$U[!uE+.JZWSTT0,8W%96@r:(Fu]f$'td9&6T5'`!\94Q%c!*O!5u+IhunYl;@$T*(t5=mRGd/+FK-ljK#@YPRWQ'BA4U4^+jLu#
%<*LWFo0O?V^ihsTS7hLF]W'"MBb^FJ9;DaEZ-p.UU[s^GPTZFr%A\jagG4`o]e]q*Qfk>"8:S11r7(dLBG/GKldH0Kf@sLqkc7hm
%J_:r-+6Ap(NkU9$J3i2*ngj/lS_ijY7s22T8s!A7@h?8,p,\-^f[m'<^ha$L]U/Rh]ZRHKkg"`$dhZ#V-U.kp>Bk+G\?-W\oNpir
%#*L,<J;Bof?k%Ch?k@,Zk;h!!Hr,-S.T'\(#s3E^@:ZKn5,r\;J?LMY]1@R'Ra@=4lU-sZ&]VZ9/h%\1S!HNqXM#@hEXVn3"SD%H
%_AZns[l7RRMXD^5,."?3\<JrU)1/t`Am7#@.DKnuD.6<Z*d)uFJC$4Z2=QD0`;-NO@+$H((OM62[ut;f$Kn4KJX2eo1ln7b^9(Y\
%XLJKq<)a-:0N"T1g_94/K\0I;c-PcLh(Q]W)9,j$4:=tP`d5Go_fj&%E06>!hGh6R[@:Z-1V/E5pi>e3aK>"`o=XCVXe;K@XGMVP
%,YJD/E:-27`&@;SR$%](&,aTrX,]KGHtiFF&n5ANdR.9#H4usIE6uP7`mb:<_?:#r1hFKA$I#kOHFAF7-s6.aA"dsc!kA0d8bT61
%.&VT'p"2QYL#rR`X`+o9mP7lp?9E$EWFYNc.O0M%Vh!N`Qd^hbaig1eMcN0pV@$rKN$_9GSO,:C@:TZ!Z[11YbSN!;!;AtC)]>(9
%:8B:Pi'&S_4Z7*u9!Mj@\V.\&9Oq8_!I:Pa'LPdY=.rUY<cJDaU`aet[cmmWNHo3RL2W"@%>^u.$PFN`9^i%S*5YZs&An/pP!C7e
%a&3X$p,(p$Ao6*`$5O!V<ofh@;@'+85sFAM@AOXWQ600H!%S@hCXQ+l?W;&D]*,0-`/&Li^QlNs7^DldgQ@ptkB>AO:IqE'iONC*
%4,-5;VZj3_=]nGX![O(8r]10GR="'"2C7i(eB,83a1i+Cl1&j3-.3i2,Ra3s*aA!bfl.Qh,oe5bZFBtAW_e_.irk3f"8oC1f\e@*
%W\&bkMU[3aT1U(X?lqb$Li^^uk!`F]i^nd!K:,:>FQ*QBAktrD!eiT6dMSX^Lh,GbaVmSuZ6$fD:rS]V8bQ=E$_Se^<hfi.3)DAa
%<@2>,Q>gf+ZPk-K-,@WSh":SH/?)8!(PmC)"Flj#&g#%+Qp!l)D$]HfR;KIAjJR?F.9aQdk'lZlej%!;5S&CJ9dAUcTrWi-AC<<*
%&4'tcK`f"'$+83fZFAmDS<Q_]Y0b`j0u*)Y.7EnQqiiNsE0MM5&=5CHLk47j/0X@d2DXA%R>Ag@M/CNB.k,#QN:Y,nA0P9ZQ.2B3
%_bi*:HUIq&0Es.F-J\`*Jcj-)A?0r"d,$n='3)_--a=cc+\g<.@8E$-*e8@bBo!UD((X)\+oc(l*As0QQoH&'2&JgWH7R=neO.`k
%6.hd-mQ@c+N3FohBhaRZ?W)nG_0D_De9)t/_j23)0jP?nX4e%^kTeGU>pkZs<`mHFF#<-WK3R(G3#jfTNGu%^kSC.SE66e+&Otmb
%_IAS%RXjk3VKY@#5Tk4kXAA\+]GCY$Lc?Fs7bf@7B!'qu(eTO5)D+X<VhJZ5/h!0A*hV0G!\X?Vdhrbn"/uWZ=Nh?7,/\M?gZi8o
%G'cm$7W8E"LsnUhLO%n#$",&Q;Gg4L4rrJW;$\([_D651U99Ug&=PTl\8EeV/TT#8k/I*:fm)8EEO/\$9%X"B\%+`[)93'H+Glpb
%-YhSPf\7\AJT`/=/WAV(n>Cg?2H`XXJ#b2g=JAMAJ]L4j,`9h:$+U_3%5cSCe_lH+VSuDl1BX78a*THo;PgpEX,B:cgV8@R`&Z"R
%XL7^"4*=nMS,u#:L)Dp0]ZM)/3"`q,J/07u'QDn7R]-C9-j1n50(WIdkqg8:Vb+QiSdU+:9eB;54ii$Q!pCb5,_n5-Zttpa$F(m%
%^.;02832e?%0q`l"M.H%W#EV!,I\l)"2PN9)osZBN2;\NKorfQ1co,l_83jjOdC?eqanZH'mK^RRM\p9O9.*DNFEs(oiAu#KJRL-
%q,VN[[XO;@Je&Wa<&2oK.lO^iXn(^Y:V31;gNZrFQ9J',XmB^$6k(]7B24;H`WTalG077+.]b\tH=-qb\&r>N\WD)+Nb<u2hLc2M
%Y!Yn:+<2mWlsl;e/">$dJ4Ja\H;*ki9kd!s1VX1gKbTaPFgc;oH=iDK6Jp%F+BTUMXb-lsij'Wg/nUPp_b:me,DkE?EFm^t#Kd%2
%12hlCk7Qe@Jl')O"6Knk*KlS?_fp\2m\9."fJU?=/'A,2RSnCn=kJ@;Z`]Z.0NK/D0cDdMETAFh0j0nP@N8at%AH_j!Z5mpiF@rL
%DV9LR9945TN]G_TjT[&=,I-SNQ*^RR=Zh,LVqQ&A0GiFkoX[_AB*a8I4qr!Y27D"K)G6cPK%-1/H%I="I)q7/<jd$9Qri)fE`U!o
%NXc&mQ&T><6*Ueb>b7c%7e2-'<[TcfW.6"[*$g7L6`lFqrAami!-^u8IVHM2&2^Ud$+c)!lP`s2S`IMX"_=3YKEU9l(7)2ER>ulh
%U&`\=*))cQdhZ]V^^:c+??61f6,JK!1eN"R+JD!;OeYEPpOGD&?4oAF?A1I-!YMl)Cgo%/6WS7*HB2?>foq409uh,u_-.7*D%J[F
%,XN-^.QJqq+//hPe',*QO$b+tA?]],m\*,AAro/PO5-=g26Aj2l&S1F>j!C#k&J+'>HO]>OLcR""%uGobp5r$J3sr,A4OcpFqZ*)
%??rO"gQWs#bhP*9TjVsUq1=GJTiC3k^Bcb/Us(cNCQW#>&j2tdDZp3&kJgIK8np25$a@&NjA:d"'')T*(.49(nI=Fki[R&DI?cCj
%FeU/OGU=4L"GYWK,Ap9Y+Ycetc`1YHKIbc=XoQ1G+=fr>/B-aCar_'!2nG2noV"ti=p5o&;7Qe9?M"eQ5Fn7AU1/<Xh[@2WIfoo=
%k[3N^=`Ri$`@"*>O?`hUL[Y]l89.[@<J#':@:4^f&p6e[;'.G[G`Dpo8TIL55R"q3rDFQ+%0?ji&`j<h/("TpnrrJib6,9bh@ESb
%U$i%ORrY1>+XLmW!PB;ACp-SrR5I),ePC3pVU?Z"J3HC+,dF2p#E%n7;MZ6bUsrU1W>0DXZZuXOODE&NDE#0$&M),IaWL=JFK)ZF
%,Xa9r7(;D+I=dt,Z9S]cBB57.nkL>Ongp6K,3<0h0+SfS9JO=0K^/os`)I83:'HA]kgaPU<TEjfVI)s64)l3ORSkAe2Y^AqDg=`c
%;ql6hbQNQcE/:3L;*i&J*LKl&D_e5,0ia/Da>)!aKg7:6R)pWc"(p(+V&P00(EW@PPs]Y5Gif>$O&sD;%[rpcO7Ee("$l@-a2#14
%`a]P.ZpKIJPRJ:]l)K#rpDLk"5$8G=m9glK'R:Z2\t0K50f9\+3'EH]dYZI*po%AHG'V:@l8&Qk8nb<PaF[&Wgt!<_oMn/R/5o]Y
%6nPX+#9JBQHDP@2$>ZdiY&JPEL7Oj15(uP*X6CPm#r$(s[t=bnW)iJt?n`73KbKh32,Y^YfO`V<cDJpf@gl*I8VYHY".X1<k%5)Q
%JmQ3VO)(+u!Oi@:3cl+b3CIgj%g1_QC-WK?3h"t_Vf.AoPBl(/+Y8MGK.nfQGU"L>Pgm>Ljq&%Kb8C/H0Po[,1Q<a20MgmS`CVEp
%`Eij?K/h/p<QJp&N3m;t*eU+08I*%r,C,ASZlFTj^hL]26E*rn9[[JV>837^J>._\`;@\4eq!NFnB17)*X3sQg^9L,0kr\]_,ZXT
%+-Ug[OQb_e:1)XK!i]4Plo&foj#SN9!SRN[j1o3I:(hYr9be&[+SLs^b"r+"5gi/Zr)qsn1"Bi[Hm@bG,!f\2CB\7"[u(<nM#n&#
%U;FAa=+t1B!R>-Y-ihfNomI&N8>Z\tnW#mZWJ4Ne1`0+nepp6TO&6=j)bD"r)K/.R=!7mq=C<E*@1ophT[a6M"-&\6ZMsAp\^3sb
%9#(krZ7nbPohS3'`:+qC)>"cN(W;nVZ"H<=a82Bl;K$ZGHOMc_ibWTW8#\-aTP^7*i^+j).*n1.q`nfQ5iXsVjukV[@VX*^'7M"G
%ig#Pec]6QB0G[O"(W;[T*tWEKSe^u[2FCH-nGn,Y7I6F4=b,a&dKQ4GUQjJJUOnRGo104;&P/u;[$('&eKo1(1ZY+SSY3tJ-3e)u
%B&\+#9kc>,$4pL0rX=s=bpA--EfN<Ma1B%tTh;H:&eJ7NgSC57aEF;'A;&,0\tiuaL:no3Nn=HL!FT%*Nb>^A3s,+d=Wu'!S<8@Y
%=1re$$k6H-SGelo]\_*6n'q5'GC"@RH=T2dP7Yo&o6:UO3=ZQN$:Ro.gFXnGR=u#".44PY?F59UQgj-#;*3h$A@peG'26/+/huDu
%7Ub$0XohKE:-U@;5u_V'.Yp*0QC8p&]H*a_`+C5u43S2F%8k/2$>*hO8B&*SH@U=RDXZXYMF$dMKm0L2QqYrO.!ZHCe\M+Nbt"M"
%OB%Na01K9aU(EL5G_'1W:3g._("YO"kTAeGZ3[F/;*Z?'hLM[#hCJJH8KqUIH;G;qqI*2NbF11!pYnk^@q#(=]JrkgnK^Cg;TSDq
%b@M\#:"Xg(3-%RFZ@jcIA9:s4NPQf61CB<LU;\R!WUr5eIgJ??'hG.M,1]S#"onoC_ncLA7H(2C@8%jlSB2`obd'O1F9JRfROr;C
%dAMXiB`oej+=%8OP(ZW!iI+6&Yp6`P</>IC;nEW0c33=-8??9BP*H`ET&SLd,Y9Vaq*g>1:-j6K(_$de.;babd9D0'g'Su6Z!W'Y
%MX-g2r^s)`YW3",(oq-tX/X0*'r7i<J>b'.I7OQEd0NM[%["dr'_W1I?eOGFeQ+p_i2.gAAZNo7A0!#%"urXhEo#GU_L.+P\^`Bl
%JU"Mp;;reKb-M3_Mn\R$Ds(FUGG5GIo`Baq!<:,n%7)uk,@O?2ADWLrZ1:"C/>NsKFIHU%UBsJ(`=%OCRmQ<".eX+i-NO='3MJ=H
%8>7()9hd',-.jbNDCnMC3NgNc$44P)M#6M[kLE0?R7qbCmYLARl=J/qbk`OQAV-r5WZ,$2;>Z#;_h=1!Rk#YI'g7r>!]WUkO+7aU
%.[EELChl\B,)dW/F9sV?8iCFKW+9[_M)W\P.g:Y.5^1;u_aG8\5A(-0K08]1q[mWRSfhl_.gY2;0,auqf98DT2j+D@B(hPB!$J&R
%>"#D^#?JCd&/L>&kH_t<dK>*ZT["ho#8+5K/S[0e@GsG@6A4eMS6r;C'N&ZbbGr*Ri%G4^!%Oi\\9;KE>GAe>5qN3i%HEc\@0)05
%BOe(X>.>:b\cMkF.NCtjXp"/pTHbcXV'R`8N8KpdRWNC3crOt2KMdks77'`(#TRM]iInpqQWA*=&Q+R?]LZ"A9+NsjbfBc-7NS]u
%[Q\)<Ru/ga0hEdA/%GD&#LIOKQ]&Ej9&OiEA3^TX.OPAFJI<Z8mR_\X&Q/b\YR[!9803STj3N9'J6Wd*5s]'r"D`SV_io*gO'Dfm
%Mb+K@)2uE"6s<,Z0Cu#2F6bjTU)&J\CkOGInH54&,eQI4%LuJ!)6?B_aU5O%Uo\,-VK5f]q!t@`XP[&k&lZD&3#r$=cl_<h[Deu'
%L*NNd]+)K",_Z5(Mguj.,d>5<9A*#+2J-GY\rm)O8Iu^`[CE$%NJr62"tUU$WnkZhhi[7kl+EkP#-cau49:`hMIDSI=)AYh5'/oO
%$!0Yscn-5l"D7u\gKHmPZ<aXgN1bps$qW/B<#f)skcE_-e)L[4^7$<7J:&ChppI'3LP(U%j<4iRVCGrN.!#Cq6WOnjK%[M'I;Z^g
%oE@\>;l,]]*fU.(S.6Z/LJe0R(2M>AdFaBmY]]b(GTB(b:T-+[$OI/6h^Htk_8'9K3CO<lc06H8IH7ZE&K3-L[bJSO;(G*.QLOr=
%.gQW:hAWcJX\im]=9Y5/`'iX_&S;!Le.QW'@ptHU?;MGLo`FH4^edR[j(H/EM>SYl\uN<#(0*,o9@+C0l82%fLAb"&,RuLAN4;&'
%;KiCPd$">J(8(Y8_rD'`>`CHRY^;6FRt*)^&'um1KcT]rE@=VRU)Wa+Lh%m!CaDPtB`K?bSfIg/[9B>3df1J&Y_2YK'hhP<CVc%-
%c\2A+?-.-*qIY0mefi^:\?lXp)mdhcrBV+BM:`#^()FC[(3!Y#RA3U>XH3*eQ/J,Wo[%8402X@V7OF>(e;6Z!4=$4p'm9-]CW)HF
%D#tsh-*;ch7i4cE+X4]&VRF7iaM&#!\BtaYbS\]\^bYgXl!d4D$:.I#E5`@j#C@I@>&5?M-1iVF'D;-rJ=-RQ2[N62i1#J;nL9X%
%R--XWU30?d9F8qo@Mi!>$u/$j#gfU&Zq>KA&QK4%.`0`S/Rambe6>dZf#[X8`8QDhqF^>u8Kjb%Pq>daQh$XNMnh'X5m%JX%e;#O
%k.,X:]\6k>ZC.Zb+@$aF6L=>l(nKG.&"6tEZ_9Fb,8`-\KP/ot@nK9rMCc1CAOE`=Wr^qi/jX1f@OK`BNADgq>k%le<C$Do^`h]"
%XDhZ@]]=+;_ktIBe5g6tqh-%X\lh%Ocne9f;]iue$.tHmI0$gfA)=aK%rYj%"Q@CO^3a1`Z#g'Kc#Ao!'7o@!^aARSh.e31bH8=W
%dgQrA6"^D\JS<r]+=#Rf*[%Wkqc%A#oN&qc#,j6+'$Cd'c+nQ4e>>M%TQncu#IL<tX49!0o%DDC)HO)&OjUl!d/3:\4Y"[n-mSr;
%H)AG]j1OaYb`b@q*6AXPo"mJ%)%l&b$Ol;'MhCR2F_l#STeMRD_\\=K=:%HV7q#REA8\6M5S>(LXV(9hnr<,PdHtEYgDcHC;\UK]
%MaIo8Qq0RS'8gT?5r-9WUf,6:1VCq&S/e.F[*C@F\SL1T>VdL_<P2JE%"chj17BM>9]UJuOuUNs(3(^`MTh0ILZ)?j\;=/,V',9?
%G"DC.5Hj_]N@bTYP%8-OBkRoD0K@dm"BEBl[Ogp)XjTRm:6Z`H-SHfF"d4V&>*!k?H'$<#6uA=-<V+&#K`nL^.5<YQE%o4BC=GK>
%9<gjO3+iqL'.-#3'N0mG/s+GgA=*O_6!^U[C.)$0\._X^r?)K3]e!Kh_6U0SUK$hR,<HeoJj]\8,V4.n7"S6Gm3#@p[17^Z,+XhP
%`?dhEG#"1lE3prR!b*,I3?Gb&_D=)!2[Z\XT]oj`<%/C>1)\=^USA<-49?[MR[?U`9VR&[5mf3nCkB'NN#O;`qF"0+mMWAW[.H"_
%duhk@A-G)XQdO/Ob%M*?F)]D2n56"m$;N,LOTn.u$F)!?.4Sa/fJ:RHOeU//BZqJ=jcPW[].Z'/.mfI2,-S;hJ.M)oje]Gp=Pa'7
%L5$5!THK@^ba-G8WkbiZeIV.o`5di>6W3q&VRQ8EPT<-f*7b7o0kU5!!IYUbJIDb,b1<NsVr6]1O/$rYV&"@QG#hJi=H1:WEZV$'
%M&UDcM7AcG"(o:;j&l-o2;<q$l/)5B,.GGf#+aRW8.m2l=$@&DCbKc1S77ADj2B9]:ubudiZa4&PtHd@'JqL\WlC(OF`dL*eVYfH
%OMDaWI/ArE&U!O2<h(oIS.LW?#:mkpKW@U`1*`\pUC2Tj(SjBQ)_`O8-4?_;_qGVS5%@->6$jfb`f^G^"D(Ef#'EhjHp`RR%%3X\
%2:g"t:rc1A,?a]`fgQK%hVkCMGWasJp19kT<<cJF77$Y`8WqNi%M3N>85=BY/60@uo.!?n53$OD_V%J;-Yj-$C1;l%rnRlm)5e`"
%CR/OcEmbW`-9,F.[C42_Pm#Zuq'o9KTMWTY.[E\l<mckS3Ia)1XF!g@6ocVoR)Q<;8eVkD9A*NX#UO-e]L>`pTqHoU*\!mnpbrQ7
%Qh3Pio*;W`fjQ$YXcob,WIebpS(.?->jJI2l""G3?qMU=#8S.K&eJtoif,1U(c!?dAcq5/'ensV,=oBpF#hC">>R@GR*.iRnsnea
%l3+_j(sL83/fRXi#b#!QW0((,]Fb.GM60`9OIhr))SSOXV=7%j1%NPU_pA9$VZEZK).HFs+TNPf?4cdhe9qq7OYF=Bb]*P[_E&Rq
%Z?or:0:ZRMd4R-W.>&-5U+7p?pf@/0P%;eYNVkcg``SZ8,kVV&b.SoLAT1Km-acUO^-q;kj\>l3.>X$\]A:<0XWNm5\WD>*!:hKA
%(hmuRm%-?d*nFt'Zrrg##^E'J)-[kV3cUB&QrQ[<l&$57(t"7^6t%Mh[QGHXUbfmmNb^[$j]RnjQN]j?W<PNk-Co71_Vg-P-AobC
%NCRSd(^aP"22b#6ao0]Z<\@:;0p-W%G07nUB407lYs(NU1"t-S6rd_I$,_k/Eg_\Q3\Gq(@-GF_iW,6J_%"s%Bc*9/Lg:(s"liMM
%<U$MA)@=EWQ0<LXi'Q]\il73eX`>(I_Z6^qKa<`!/23k$c+6@u/KI]O\lNaN!-j;u#)P*VA%'T.<9=rU!rc'jY7?a1^'8:.ECoDU
%BEWBU5Td*feHR^N7]R[Mc9o;QZid]r,!rC*cs8%j`YN#[_VTgM7#$J"#>4s21.lSd<uNUUF0rN0&_\)D/LMq[!bSRYhf?.j<Em#;
%&Ut1?ISASYpgLJd8ODKk]LaM$Ei&Hc8O//BFu,H;-)pF]C#6t[q+#G<YZ?U&6;mBOH,>Yb$u$7]dto0QXl)JR2'D#4'`:iQBA4Oc
%D$9E2].th1*;m:E=(B;Rfd2a,@nY68P%m>reJ)2-%[)GY!+Vh<JOdXn8*0OhnNUI"">W;F3fb7S_ObY-c&)c9.r=]pAB2Y?(/dU%
%]pTKN-2Wo\AW$HN8:]qAn!5@.#bP?91=O([,&kiS:SWlln?`I=/UV$$AE"8X+.<'!T*\OP9%4d\k@Wq8B`UtWCol*hmN'W;<t%tQ
%9ZVYhLBP$?@Y&'L8k&9O$j2>nl#]L%;`O2&Oqo/M&/mM:HhfsQ!gY+^#0o5`d7G`2;Hb4]!8c3_O2,TBOEW>%',]dUVfZU&o3u_j
%@uuu"=V<Qqb-jo=,sss[n0)tG7[^cQ)"Gk.9+\@L&q+q7=9s=O1BI7T)GX&E](-T=*D#t55-<\!5pB;pI0V$XC^]>d<Z?Ab?+R4n
%H&`IV7)=sB$HLkGZ#C[^33j9$Z%=fVihA+o7j+4FqX]ZrLRPh*LermO_7+uY8Y1BN/%ej*BOJ(q\X"8<[:8hR:>s0ElCbS*RVIt2
%"n-dg`Ssb9AK[\E8+&d2/:7r_1/QWa(e:tHUE\U70BGMUcTi]^2CJ'r!%p[FBprp%#WJ1f;KIn$Dr9JR</D8C3HTj>A6985B?:p3
%^W>*lP<^*\EK"klB%p%#E=(:D7$D0#E2W4ag6o`biL+dq'Ta8iY;!DYE$YjCN+^=L]^2\F/'f&!=t'Hk7,`b-c(dR(LBfP5@B>[/
%&!b77$I_PTPLU!HOJF5?cnt\]Kk)eAMDRecHO.;Xl_;d+p0YrSO!d0_+qs2T^>>0g]1T%l]\g_$l:ITPj%:<mR<XSMN3b]NM&Bdg
%"Nad@>EJs:O-iMu*.aIu%Hd]!A_1oai$KVSV9)bQ)^R!oQ+_u[1G@8b$qSh#-G0s"U_-rl?cmcuV5OZ,&1igjH\`E(P,^ch_+79A
%'KZ_fIZ3t%D[f\rKZFV`UJ1e9WkJJ_FYr)\-_NO'3K3VKKb,&a!&ZZ.5sb3"Zc\q#On6Me.q(DQL%,VJ>ntcD1=lf6_\'%O:*\p$
%?jgEq/jip-q_b*kKt35:PAi0*4'Ej>lUo$$/Eq,0U/gr0@Tp&![#kP*7M-([lQu')/T>6"".""^8`LBl+LSF]=d($H\\cSC1D;Q3
%h+5Bl6_BC[+]bosNT@<B-fVYP&@tV[A8M]_UBZL]-<4_-`>Rm,?0MOP=nb(P,mP<:7ahsZ--c_8=ggE:Rh8]Ai`(IgCV;tl]oX4$
%-2CU*(n&U'/Q39o:t8RlgA%&<Z,4jYQQ3_(mu7r@!=T(aBrpes1\pTEko\<tLq8/>KG%^]M/kdj%l(AD;Mba)O#eQ_i.BN)3$sS$
%#oOIM2O94U=D]A%&0^/J%7cBt@QbNj24bQ;$5h#M5XuWg?p6DBb+M>e8\eKW\cm4p<hO#WYnL7LQ1:+&mgK1dVs&K'?&/*tP08/8
%AJ/&h6!:M'+bbK#VZ9qR[6oBpW,N^S!4E!m*?(j'$'?5DF%H44,J.:4"5Hu)Hr;@[Or-e"1i<H6PZ\>3.R#<%7"Y5#9L'beCI7h$
%j[Eag-DNK?m0\O_OgPTeI3/U^+R>D9Rb6M>Y)HA]kuIeD#WR.(esKW+D*07Z?l=2/^n)/&hKKTI=2(sc2'P.Ud=XaQfI/W(I=OQa
%&*dk=Sgn$&$q;FD&]ZTY's&Zepr]8iQj0JL'J*B"*.R*_-.uq<e"^B7i4)R5?F\E]M1g!Y>q4\6SBt`Q;F"Z"]R2RkC*@<4^-fW!
%C29InWZu#FerU74HRF9GQF.Y[rLtff=Q5=$N^OTdG9*6!/D5-^^.1LP&f.j[<a;c1_`%tI-EE54_=SKOho<jPL8>JUiBV47DEZG$
%M>%J9<2?i4Tp+i"$Gho/4%BTHo[][OWo/g]bWHZDZ$Hg279B*hHDMCO"r)l0Y%dO5p%m*+R$)e!-j$BTD98Z2MI/ebJ5HGk6m5b%
%bZ:bAe8E_K3W'6Vb.p$&opqBN;5(6==+b"265IC",f;,<V@51=6&EF@FLongVJ@JpKn)U<CTB)SL<8IROQO[_`DX0I+o#UY@]f9'
%E)6mT!RHdc9OG'%$!aVN.pZ'[+lH"-,j1a<"!Kk-Ut\?_?GD^_Ffh"Q*6*'`+/I-c]Rf:#Imqoi6D0Us&KXI*K8]j$/g(bQ*HH3>
%/`09cKhq=K^!eFr)54m@0O9c"Jsf'8`X.Yc8KnX:_8gHRpO]7o1'dli&?86(!a97G-VfP>/>r&K`MQ=sAloaBND<A',>]$V-44c6
%=e\ct.<M"t[Pjt8J@J'ZZseV+J;f#\LePKR$MOjS,X*62>$%sKEGW+d,QS2c.tJt267nj`J1u4;e$E<('I3*3!@38oN+&G:Tbh93
%'mG2`-QF-,/hl%?&s>LA@=@1,+u-q?YC1$dacu$)W*No$.2"I&%FXlSLPjDQ1:IE9!"-k(\X;m3NY5LBn8VE3SBM5fOVU4G!"s.3
%@VRTn\J:P7X>X1;YuZ(d(5U0XQ%dOcb%6_..>3B;MSS5RoX+g`VnHRSl]u,-oZ<k=J4'GEh/Ep!*+YGA'H&W)j:ILK8K>a@d&ffB
%n_9JDV%-`RA\nH]8fnZU1f'iTeH[884=MXT-[A/!ZK8?TOQa%bD%ZmZcd4^e/5.?k#dP8N7sK!gpU32h_I@Xc9MM<4*#s=h%()@#
%aukI]KhT"hGcF1R[:3L(>lqLG6f,@1O(9JUoMh3co?s\fDQo9_MXX%/<B*?;(sBE0B0ibSF[ed/7,Kd73>mt/hT+1n7M6,A)PBP,
%0M[KC-Je,.)Dhd5+-TU7'BLG%3[)"sp\gs>\ReO"6ZM$ca+^ApY;c.RHhDi'o2ZNk)Rrf*>-^`jQ='usf*NiR^]i8O\?%D=P6gi=
%eYTu,A6^&hc6f6Q3%m1ejH(R=N*n<,I:7X,AjD`IK*2Np0ub+3667nKN`EkN8Ja&fh-Yc@9rh5-h#6=;NL4O[@e#Dpm1RNE@'tZ\
%7E/"Op!AZ$f3;Cm`%kSmjC9`O6F=_I(B1/EK5bSps7-j6IPjSgX^ZoR%^2#!9TRuR'-\+.iAb9F6Xn@LZkD&rM.k9BL/O)I9T*4*
%i.BlZMebS\df]ckE'!)P$;EZK43=EG0P&;B8?K0AH(c9pJXjbI@ai(iP!^+>%UOatoTcZ@g&f!I:U?U\Ug;^^3gJ5VF;L0VggT"m
%N89d.1@2/hV\"Z+dWe?^Xn>jV>7.e%M.c4W(UjjDoiB.m`:4=#N]gaZGDb(tFC>0,;,!<5F(onlp6%OHM76%hLG7YKZ`MC8KQi@9
%gQ]M9V$*Uu3/n81'B4D50JkRI2eXn+JJ$T;N6idH6I,WQeojYfJZZJsQ1RI(AC)qS'Uiu`+Sj*EJ/ntC)06<[.ZkT%QdJ+h<+n/^
%/UA]QWHDBh1pLr3ig-j2WUM]HP[@%d43Z8Vct4PQ#8']MjAlMA<,,+BVpi1YWrnJq92#k,.7UGd'DaB?/\0C)21%HH<B:WXYN07%
%-/Y$ED9I6J>+O=qkl>F^lW[;]m"l0m\REM[Q3:@:fO#1,:1C"(a`#Wn=X,^;ig+#Xe7u.6e<EAgpK#XM*0I"]O-u+#:9]s^6Du#G
%B>q`(0*OL,J2CG^LJqKR]8.`e!Hj1a09GgA(u<G/PLp/2)i[-V1IScj/.\(E0IWAUb5s](`G!1"MPOSL1W<*02GHK8m<[n086P2<
%gmh-<S[JGm?n\Ss#33cuFQ'ZQe0lXe3>is&HM^kl@Rrcu.VQ)sJo.]>eB$U(&Aq1jBC,dX!b-PuaOU]P<jK.WAk14Z-K5]SPG+80
%%?E,6FqCgn(*:+B]Wm6;i8S]%"aknjmOUre@#EOZ+*aPSTe3'0A.=R[d"u+fFk=R(Y&$0NJ.UN!:4gu#jTNt]7!+?P!]8"!N&A`]
%k@cA!:efZBF!;rN5H,-1,\r.&<*Yg3@1cCq:9.q<iDK$G5p7l]lT"K=2Jn.iOt!.7nA+q@g'%7OM:0i&_*VIi&NHYBm*]4QQpCFT
%WL[dB.g6Oe"f/jgP4oMU#SiuUP_HeCVQPC&_lQ;s%'4nF&m'I/X$g=199>BH7>b[%LUs!5a+oUm+_Zt)r[GLEJU&J(-4%[jUN]n\
%/F5t04OFp=Vkdb/&>ouk$H/p;<4I2eod*b?e0XR3dn*Fc4n[@ScY?mOUbT+n[&Vo]BZkTg#=D28gi]']b)0]GTc9\KTFk&2[49Q`
%IF"KQ>#l#7&E"0DFmSI$$l;/J1&GVAf-\9WUb(/-//Htn,a-g-C%dU+b^c?OI+E/4pecte#L,@Vb>PB@:c-)K5cbGJLg+>+,O(>+
%#prUsAXa9&.Eth#nZh;17':RPD3/j=WQ]qP7]utb(l6,VMXOdeoZ0$X8$eIsCX4K<7O5o,iV>=[80:XK7`[m:85AV3-8j*=XT0NQ
%En7>DW5l9-!b9Q^e(DRVa<@$hRZ3g>dD<7lC-q:'A]\q/$!c/?<<V1h&)dXC-'VXYA49'mB&[!UCefPVoWkP@BRHi]#+dSQ?Wu`b
%@!mmGg_N)?L-W_7m\9f^E$IYk&eK;%"B/i&G"7Q[QLs,\=F:fuLFB83*E;ZB,")Sd5W9Z')THN6,:SRMT*`Ff#g*'bgsJ4.PX?Xp
%f*m"hiDGA!_8_$6;c6tt3XHo@nka.iF_N%2MOnCjhDj"MOJR[47uAr&Cs4lJ0PQ^$9u<L!&'coWc3e"ko<5CQpmqm/!Eaq9-`\:I
%7)GLjcjE&i1HuhHeNAlUSX@ecCA#Gu&B.2`k"#J*L29+0%P0-mM)(\:%b2mt&%"pWC/$0?$FPbO((HIr]!CoNrZ\=@8ZK=S6EZKu
%(;)WDD[@u-F/D?ogQDjJ2a8ep?s/Ynb8(FWKV"\G10C-^Km]tnkJ8de3X5%a3<=@,JM$`[*FmHP;^EU_)FP,TKA"@;S/8h65nl[?
%Q:]O25a*&:.8!!fr!K!u"6Q;D&9/o/JQ"=I30GTfS$YGuE&5q*n5:T>;BN2`)3DofP5%PpI_u,@bZpoX;AoY\[:po^L.['3OKKj%
%1Te2d;T_JVjLIK/(P0Oj85;)NPK2#"Q/5%m)ELW@o^Ins0&n8=#QZ.S5S!!<Dm<PEDi7@*p/NB*P9CiMfTn;ZO]10r^Bb<u:"qLK
%cY)OE<^slkNe';Gg:k._,)]mOroV0,23Os"'YuXVq9qpg@t`>K((fh9*dtRsO9!JJfbUY+5n%P/a-0tg&YYV9/aMlZ67YSOhb)$(
%ccPriLAC-I?de`feC0@L+m<IpcO358\?5M_XZ*e[mf'TjKS#YMn8u-K49Pqh5=QoD%&PPs[d`"e^DBSiO[o%3)cnHY&Dq0$4#.=n
%;RW`#OCsYA6^G>-59=k-L`K^pnW6T]D!L9T@&-u&=m=W0Yj8_lkXk5HU6rG*EkFq]YjJ9C;BXqu;WCp>Z.KXE*\0V"gKBp6R[t.q
%=lI42?_Zkcn8NT14HV'-Su([`<g`CAV\C=;DGOHR6sL"NR`S;^ik\"2V%Q%-n.;Hc0)_.@O7m\\H4i=W;80A"#9HC2,FRYT!tU/?
%#ATPkJX=\;o\tfIn=l3b<<>;"r8NN1q!WGW"Ru/ArXN\"-_A2((R^C)Hh'6t[?EUfaF,GTi1X'+Oc:<]C5)JD:'Y]<R.'5m;oU1S
%oS=7aj0J12&N\=CYhnK5A?_p$hAOtbFIJ88mgS2@jOu/tG6[36U$45CG6[`XhKLK_GHDPJhb&5#m7>+[&aN_<-%2VQhR-DL)(Xkj
%l9.[%1h=770p`/AXFtdcB>Wn&q<i2o6G;0AmLD_oPW2^P3uiea(tf8L*Jqc-_*+S2X4VC..U71j;1p%$;VbbaPAY?XFP!4J&7NRF
%FD"9Y3$/dh)2'0lH7q[1"qb\+%[c\TJR#H@7SJ#N?pn]s@CkK<+C1Wqh$kVsVE5CEe2,qNj2f\T)!m2q-)Gr^F_:^F#qCc16?4/U
%Fr%6m?8<_:'/;f2L$aoH6>9M4]/.5/k1P(%FpG!C&/Vo>"&%'Fhp^CI+rLq:]">U\8?-@"]/'T#:MtmS%Uu+K.Wfk=TEd*hT'ssd
%l^lUI6bYVas!P\XQ1#229<@6RI!7hO69<J\mLFbCSlBT]mLCpJ6B54DmL4BJaMTst]*$9AORXdU*<dEJA\5j>9Z8'Zh#X1*^o<Ue
%c2\iAn]qg'SRI@.cdk^4B1Q2+-Z,Qh1H<f*!H_"ZB?1Tt6;Mf<$3Wkq]7ZnZrk"ch%V=;2OY:Np7.h`ciK3HPOEhBeVQekgh2N\'
%L$amX,2h/lZeZeKMG2MlG%\lO9[6A/]0jZ)nFe*<4(,eE5UbG/+m;g[4l%-Pj%sYUVRnW0Sd2oMTt<+@=F4Y6m`mN$e<uorc8[Cb
%WH<?GG]=6&l0^)oT\@cAh(e&.r<h:"Wf*Bc@kU;JT6^0rm>b#!jRF.nh%>d$<"mDt7r1Tu9+'FE8?>sf]+Zn>l:Q9P5HE/ea\-,8
%(TKnS[\1#E]">Z[L"oF,3Y7hR4]97LR</cE5%_E:+/>*dmERE<5p@[f]>M]8cKGkp*S-V9ROd,5l<g>N>hSNrnZcI/NS*Z\M(Ggs
%_KH/8%LFNu[Q@,@<:j\/42=1NY-gFI*O$BKhH\_$"AH+*A\01SUp0#rI2=$]`'[\[mL1Uh6<p4r1X;sQYL))k@_/H&l0\sQ@;,*>
%l0a)A,m4I,mZ&E%"OA"6h#W[)E4u_9SOd^.TtBW/*RW[D#X\:n$f)iMg*@kCkjG*Z"g)u:G6c)<9H/]R%XO1811RmWls=4mX)rQ?
%(o""ql0\tR5sr7NGA$.-:bX+<_-n^"@Fg8&%T:EU.XZHQNhN,_GDCU(k`fSk47%"i'O(;"N46dlWdK$1.p(Po=NHSc.>FG_N[)Y4
%YJPKr#\`%]'tuc.Ir`;(^,p/]1>PHJG6YVTA25Z_G;+@`ZQ]e7SUh+8o[]W&%`++bHF>on#`(QR89Tb%3A[ZBf,Y>&Xel:6g+@GF
%"#FQ#'De`Y'A\3?`+U6Dk70CU9Ql-PNq:N7T&gFdJN#a4>muFbDFec&PW=u8</*Ka]TW2l&DY*(A-MU]h[UeCeqFod44A^u!T(m0
%]cG$b\?GOJO;RPJ(OA0lPXRI([tE?'9NC<D$pk4d^+T&$&."^"Lu&UD_AHrp[tEL&@aIGZ8"2u9EI)dii%6.lX-24k&pc4lG&,.n
%gH6_L>X4(N%SaGf[iMPZ;A*"W4.)GQWn^71VRV].iin/h,Ed\@b)*p2Sp*rtA2X.DTFS.r>rdpR;TNLd<E1?haMT>Y^6P@+Idd[O
%>lPCOmC`HOh:D]h8WY4!:sWrJS3=bdU,(J+Eft)N%?2GT3O5/d`,%rrV?*lkA`,#)T%K'b^<e$5@QW53*B1#cCkk&,Tkl3sG-G8)
%@m\V*fT+n9">Nb[3sZOOAB8P!3[Ih.b]YOl2Ee77.4j1_?9<Ni8ZXDJ*V0t4/D,*9Hn5YH8'H--XGaphb]\TbXIONeV2:s/_pP7X
%#O.2K*A59RL/0.6U(Z2uLA0+'YFT)5MEt$,%&'NB`.nr.*A4-n??tpWJ.P'8_J<dTGMqHfY8o/V&+':!6Y)!?inOmESRJfjltPj#
%=hqtVZuuH"blcp*B^JL8nuoEDL'S0dlY5`[BJbQd6u*#^I34a*%[,UFgXFkB,/=O1>!&)e"=0tRG*$BgNRHMuiZE=1\E8>qji1,1
%m0ob'`id\B_1'ieMpg<F@YDNjC$g^^Mm4>Pg)2TUV#i]8/g9mcY[^]qpduCLYH2osPpjSNXELfu=C<t_[53K:mSZhrB7N9U'`4+3
%\<(rpn+N`kVGZolb%_0<^u5u.4%!9*A62n#peim<'NR;!4iEC2XEK=8[:Y-B%P<s1Q9o=6kd:h%%8#q0(<5<"C.InP9Y3o37nKI'
%Mk8GD<$Lj!C53HeMuP9+*PDNWBidjm?jhmn\<,EQ)s[PcpQX1QO<-TfE8!VC:$=%nN$T';cY-qs^hU^nUR`Q[Fn@hl*PUF<:$NV`
%d*P6ajG&V:'N6e(7QX45KO,M_.-Z+_@C1Yih--X(Vk;)hd@SED6Uj.n)1o#UG/gMJ^J`c'ck/(gBLHQI(nc\YVmOA3PN@(TduN#[
%'lqN4B98`fnsUF6_`OADc8k`,3\?(*;;0uJ+IP$>da!(bH'afEc4H^+RMAFV*,kCc1Ea*CU@pkJ)jAuA//3qpedhO!3otr@M[rdD
%E,1JIm3(!LZI7Gm,0]5(erHEI%(M7@mI8ZE(GEFEBGdf.a1QRX*dLJ0i"(QRVY&:bY8s3'i4KZ(*BKkb9_;1c4/tgQnJ,4h'1trF
%88AHE(RqS*[1h/#:MRqpJO.BiW?%isTduAWNpum=-6A<'@8gZb:aNNEkDWB8L"+C%P;h21;ELQ<)fd);;EONS0J/;Um7\udH%jcY
%[n<r3@C:_(Ns*=0<]b]:dbcLU*Dd0_)-;X]KLin5'k08R.NE%H[NgY1Nc(-7%ebWqJf>BX_(LRDLP=@jr]VJR/&ZVlRikD]LtI`q
%(eb,a`--Ao?INVBfT(tW111i+47Z5OXeTCJ)rF8?@mk,<K?FlUY7TI)SO9]]8o2Q%Hnp_CM!\$\cbjrQ[Y$Xk#3:%E@QVcm=cI\!
%`-1W6d6Co]m8.n"^5>O!7imKiT#D;H*Q6sB0$JKnE,(j!M+fWjeYEm[R-ePmHgc8m42Y11M`nD;+ZLPp[h5s;35LDQVp'=[E1jc`
%1#!9IQd"KDfoBr9qLK![*T>&&k(ZoY%(I0,fe3`>*@+%nWQ]N`2Ga))OP.pb49?Orb]X,45TSLEfoA#u7VbK4"@:Z0Eso;p#G:Xu
%,A'#8I)IZ1b]YO\kI_ZegS'#=]-d3pG!llK>*g[/i!>1$:N+0f7g($q#8Uo5id?m$[4p>Ia[dI;A@<]l"1^f-[2j%*aMqPrmI2,n
%BFK[OG-#oRCeno'aY*@I,AK;\PAkmV[@KjOl`'8rX%7upG(fDui)->Z,79iXFq(G<+Dsc%Vp'>*4r:*B_JI7:+Z[.DRI)[HU+6VX
%SPY6O?-d>BCTus@`-+[aO5tX=`--MWY>\ahUsI5Y)"H=b)NElTiO'oc2VmnWfT&X(*/5'3*Dp'u0j9t3kU`m$e@"QT1Kh@\_JI8V
%Ag+tM5k@N]2?0eV[Z^eAb@d'nNc[0Ql71;,,Um,)on_=^W#^R\=tk^;3m5ZJ-+=P6XNmr0gAqG22)^`T:8kVLJDP1o06!CNjIL)M
%#irs'k_S)U=BfTaTsp4\`DT`_46T,"MCD[D)+fXOgfE(p87=p@^TcITLko`M,C2GW>"CuNdbBn/V_+`!NAC4K.N-XgnLWLqhi?sT
%3;VqR:jTbHQJR+h5#Q^=r#pR3s8DTYmYAP^][6O)#S?q'`T>'?\OG,\;,<d^r+Pn)rg^f355a>sfDJi'Ilk5fqrUn,ejj'uIpM8V
%Mlum)LX"i-%mO_ChuEQ3#B)j)^aqZtNF.[lk:OFJ%DVl!r6p..frkdupjDV(s4&Z,jSQ[kqSNi8,l#:j9SE$6)f.%UV*Cm!lfPl\
%Nk:pESs=f;^l.;anp=1rOq1e<*.;Z/o985pTKklP9*=r3GXEAd(^pY*2pgU+)].C]]&cTWUSD3cNkY"PQ&fa?pu,:lWUbAYi(nYi
%4^WW%au@"fae0U0U@Jb3+oe!:InPpI/`5f_aRa(-,Gr^"1M*GNRqE)RgXr55ZB&,KGs7Ohq\tdp5;,_>>D2YUcaQ%4Tk7+GIZ=?-
%ZjEBKb0O>kg5r,/]U)8)4Gj2#W[t[FgP+AV,htAS`eMlOTc5emAd7d]Q#EUArIuH9[_3YVL2P;K94E#Gi_h!ElKjXeVOp`IKC3%B
%(b_/,CEK<lr>8@mFi3Mgm%ek]+a'MJk2&Wgrg7#@e&Sgnppg#P.bB_9@ZC##kq9.%KL8Z#oC6`M*.LYIYC0+.e_=cGp[[mRkGrVN
%d0P,F-YBZ3N+$YtX\mcXQ,]m"?.]%!(Dk-Tb81PDT`GpHFn'D-+A?k2%cO?qj&#,E&Y0=)WS\1DM#&,9J'.e-HpS`g7k-Q(J,e2f
%]<hFcLEHGL.ZsU*+'Bh;Lem#f2Pi?oI;>p?HK@n%O<gTBothoV=8.3]nq#nHhERim<hA\(@;bJc.c9l7J0Ur]ZW/8Ps*l,>:i2W:
%FSVQd2dJmo?oVD*3.eF8m@hN/4eZd7%N\(.I^,Ag<TL/h-s'KtqUM8OK:r7nq,fhL*Dc`<i591Dd=u:\0a$!u?0(sjLElTMpueb?
%jBX<8e&WWGq=hZ&p%0e"lGF,rY!9hrrqQB:T7:kV@`b7_<r!2SqIK-D5L7Y.nfOLb&%jt%na6#?%F+9Vgg;)*??>]&o^'QI;N:j&
%naYKiY5:HC?e<'+?Lj.!jb`O]KCd%NU0ir,hWe+EQDZs\]&%HJF=Jre?ViBQo8]7qV(r"?d#NVDG8#Fpd"L;"f7_<hs*K$3I<>;Y
%i^NjbUW[L;5%r>:Y)r*):9WPKB\Vb9?+"_,deWS.`V$8<:"&?NeX0/4rkkXHY?r=M?uBo2l&,l8_*rjFp;Qp+':Ymo\@i]-4FXX7
%ldbQUhC^HVVQ@h'lZY55f5IjA]Y/;db;X@cVC;@_iNAVZDf<h<g[d'oY)e'8:=1W1Mg%0LDpRu2=l/!p\a.gYeVEUh5o5mF>b>>p
%Cf>t=k.KYqhk$E6)Q_?:':$hN(7:RpE;T@:r:[Qb)gqG*j04^jqW@A9e]IB#=3%LOSXrO-!\U?d!>kX9k"[S<l&TgGm-Ydt[AO8S
%\9u!&3ki>@Ra@B"dN,NXB:%eb0Ai:+:KoF^oG'2-DuY?K5?kj,Hnlf*p?inW+6DX[gjG@@G*MUi;6G1*iB02ojS%OX2ds-9ge$qq
%eT(SAZS*q,hoo`Dq(+IsjlWo)I$U8JEYAjZs/=4`:[B;cbtVulStG2C9ru5mko;:)=e:'5lM/?[YB/p-D#HKq4bAZC_NEd$oo%.^
%^RT'4o)pRbGknMrp#F`[D*-;:4Lsk-$M`BGgGa%GO"ZO%[r/tJjpBN(`KWON`==i+.;bHX7D7@4*]7e[m(N,(I/3?Xo(n*kE568f
%9=F41=8@O!N]1m[?65^i^H";<S)TMI?bWT*Fp8U%=c+SnB9u^"p?SdHkHWG6q:i87b&t$_pg)-ho6P]QjkFY<jq,57'5VPCqX)u+
%e[*GW2qQ(d;d-SXbKehn9Q/irrqZE]@X4jUp9u%*JKl7oRq=u/rU5D7q;33amDG`#m(8%i9H/rT5)NY"(ggR??<f^ek2H1._gTN`
%\l><frd'YqcfC'un$gY*H8toN0nK:pC56up\Qb;.h_`+O6ga%cMrj+BY*B;tgX"Uo+JUji]f)7-G#R,Qp3Rdf[<'h%Zg3&#nH?u&
%Yf#r.Sp5X*HN!,VGs,_H%VfoE42(XYpiPg.ES_ZGo+69c:[_R'aY!hjoB"Lu9D%:2>!(1Lg>a06#Q9N?b@f,kg$D+rd$fB,ThQGg
%4\tYEK+r0ia-Fg>m.0`6k\@[+h[*`'a.C=^Sk^^#^,g^_qKC#'/JmjKXSGu(Z<j&m*DZtn+4SDK_S@-b9QnQ(]4_*4@.raEea$;'
%B9thWfQ$ZT)"P2dfW;aZ<-^X(1;G?(5-sg+5=_EfOA#EUFOlKd@Rc-Z^3<DMnPBVkJ?rW2%E#n5N+RrmFeI:`5>JI'%qX-aaLRmX
%qsb\VN8"9E>u6<^nJjMR_7'9-i<5WRHa2>"Mat%3:0JP4T/H3"KP>Q_46DdIgdPH7U_-s0#R<P?FaS264Sr`9[QKu?Dcshd=7,m,
%6DX,=m9@>:a1KT/Vf,n6*M4n/QP\8G+2:"\/Z2a9IhlfaRaI2*O"#RK@eZ)ppKEF?rU)MY%<X@>rVSW>DF->^+H?h.7cmMul=VN6
%rVWP?fl-gIBe8t+WD=ri4\35H$3$!<;.3BAoB=Y%-6uPr?(Oj6UuGst)TrFSH$q\a+1g65)k(W0f['j3:8TJS?b(&U9fY;K=<:8Z
%+[7tN48Jep8h0>gd[eXf$01Vd$=]*%[B!nE/U7Q3]e.8X?CY>or\A&(qFc%_WoLEmO+3WQ5^Chh5/*Jq4iru$C=::^.?lJ]cd&Da
%\t8;l0c-/m;l1NoT\nUffJ8n;K8Xs(X9hq_Y^,?l?a(EW[r?`n:/;YG(T6G[`oYMWo`^BVR-dI,B;4b3!U\r&AYMk4bb;O"%QG,5
%dP1%b_KaRpJL?L-'kI`Ff:7c)Hfsspc:+/,U(1c#3Ug:<$)Zg8jJ"boNHEUkf`,3@PK/oG18Q^H0$9]Bnih5d8"#9ErW'JWPEa/F
%mnRpVb+9XjVMr`m=O`+tM_\utp3io)em+H'a-;K;V(mb2lL-N$F,2h6PK*/'>%<n/H._&#P;9f5OZ5JANPcWi#Q9NcI_her0DtJ2
%5C>p_PooGI6Ze.]f+a;'Tcj:r2K8#<7fD#>@_E`'bcKFaU=\D+f-YUUXOh't2X@c'cte-Ab*(F_S'A?h<bk?%dTNWq>4$32D)TsW
%@r9e3ZW;E(>&>)gqI'X!m=";`$!m%I6a?q3!1]D'h3V!-QdLI=R$Z45N(.k81lF%2)c7OPoq[8Z_6pn\aSm#=8Qc4GFo'GGfiMh,
%^\tBhR`BiGbGQ.0Q7l#e[W>H/18/#-O0:d;"A^b^G#q'0Lp0_4]ET:smEIX>//0mOJ7^L"*OY/EJtZF$cS)d$rX=Oe(LSZ#),9j_
%KX)Q)[kOH,Amn%*GI,Bjs!7W7s8,Ce_r>*>>]t;m\I7E?^6qHOMl?,.*-?CgT0%mCr*Y]_V`!XuR)Zne_m/Zgs3B#e]rrmBg?&&?
%4PENKa6!-_b;]5:roMmOHKo_>ZX#&4B;K_UW<FXDM12&%@Xd1mJskQ$r-;L?C"*@%6dp<I)n)RuNS<=aHQ9K%F4:D8.(\\/G/q^Z
%rnd+'a&f1jYKiKd;muOTh'4!II.:'MP(sm1\Du5eQ%!eNh]2Zej1feTjXC,?"5q"DS',mNpCQ?!O-0l\NrO!8clE(6OF`k\^N9<s
%fC<3OO,*ejk*(Xfj;ddI;ch>;41=:=mi:qiA%m/q9.*i<V_;DkIC"<EH'(giM^`^`m>d`?h,>-82\Uc!7p#/Z<PL-3c7XU[]kM,W
%5J=YR(Ha\YXQY>gXkp9<X'pT0Is^iDT0oK9g\C>&f7!P1e*?LQ7%;Wc(<mo+fg@ZEa<"rsT'9]s&)$:mRlt:l9fKnA4a]2V=S/6`
%FL>@[I$1VMjX5<u55ja:P@%'<c^*1T>V0<1Ed;eTYr/[Iqp0Ed\MM'k\NJ'M:%U@RY2.bXgeMP3nc,2P^V/LDcSo$6jiSUUBg+VT
%,N:_ja\HnU5*LW=F&cu\3UO..HGmN&1HQ]PgA17#p$s@I-!(UX3O#:NJ-iPW>CHfIm.r;\]r^jAs74Lffp]TQ"8c;7a33goR2mre
%j(3DHb`8%CnM314DV]KpAeE(AH=?#eR2mr-HifiZ06_EKlqW$mSiiXYE?K\)#G-SA+Pl8j^\8e+a&Z(7kg1Xtgh!icc#hTG'2nl4
%B!@-jBZ%Q:9hYT3fQXQVa2WK]4gAo)pVfX\1i[\brRLH&<e("Z3UX.=RlACd(l*Os*$57qdr[a\p\Wqj:VcSY\Ec.6,;;85"K"8>
%l\rP7UG)"LRf6`7MS=@Yr8R;!RAAuM<TR"ASXQVMpVnI<pi?'77$0.2l-N9Odm&%8[AL<>!o#1Xg@+..pY+s(ji]U+CTN8kjbnsF
%q9[^jQYb\(nI4n>U\d"]"8au3%i>L2S3`Q=BSUOn1TpP?gLo`Njg<7*HJu#M]I,%"B[.;*C53SSZpm`oTlt*9r@s?3`_T`$^Ri0,
%PkM'-mG<mYK.T;C5=V1A(^G/[3I!bXq[!*:;q`r&1%t=:HY@2Dp1)<qN-uY5foIlb0b2-_n]*V,ie2K'4=O"hZ(K?;mQ'rO2ee7I
%-fBm[Gl21Lf;n$5]Nnj69JJM.Y2<76:*qq4*YlK8`S9u;:Tfb.R8cR;]QdM;H?jY'5N1sebL7md%W^I/%BGQI&Y-Zrf;I4JgRN+*
%G6b;Jp@N1LE/h$Wk8![Bec'%_)OdrL]Y(g<T44qlZJDp!!h7=)jV2QP\[tm)9!kB3/88mPB!A'9)5nE(l,H<(#@L,%%N+qtQ*`X9
%cWsq2*m4$EmG"Z`hk&rD5"qm4,V*uo&)K,+ac1-T's?rP<I;2!YLuc6`KThj'#(5"B$\r>VDM^Vp=]W;qm<2@36>L?+nEOZqYrdA
%B;p114C2[uFWTg<jGojoRr`Q*q!6[p"g]l]cPq<&]<k?Er%'d$/^1-'q(t%&k2t.JIN4((e(f>>Rnn)aT&qAi@ikYaD?:<aI$iZD
%_q]or3k3)_S6@clkOqn1bf@9i3&_rBp@C6[*n>8uM0T4/\nR.kO*(8<Umn`=%d-CW+.&<II_%S3Z@>"1oA!hcQC)XTR/n1KIl<j"
%5^sn5E!MFS1#lch\.T%&/$["34W`^-56)S5nHPRr6VaS9s6[k5j--*"=bu;4p$p/gol'jga]n`+qR<d[DF2$S=7^;Rj7:$fUP\@u
%P\'Jg9Y?!_78jHN1%%)PE%gCjN75UV[5S57I.k'lgS<rT;a/?:QP\`SSoRG*]jk+WDDD=E2^cY0bad)2]5#m"Y9kD)S13:iPFM9M
%@H1C,fN%eqA<OTNHhHt)A3"eb`g>!Vf\b5<ao&LNZS,$cgjS5nml1>fBR,nnS*1n7>e@<o^eIWQa8^L4rcV1eVI$g6p/"?L!0cT>
%bbrc^Bd5a4(1$q26[f<+^iS<7&(6o9/VD_3fV,I]'1;6)=9fKL&Z+H13$YQ_ZEs7!f_!A=roKcU0/&W8C1)P7C_Y,`d/t:UZV>Q1
%+7bDoiIa%Gm`6?^kBlQcVnD16r!,04AnUkM%aBZdr9#L:k3!bfQRQe((=sY9_=)Re[Xl>Tg>M]$<:KLfCIW.p]A?1%:O_VO5OSO>
%MoSnsf<<JdP@taBC4A?-^&I<lFR'NZhAl8lU!9(eIZ21YDiRc9@Ga#al$@+5pVf4cJEOUcs6&/ZG&KK2&+WCP\?ABJ_^P>u)35%$
%MM%E2O,JVe0uM2kMOSXJ_<.0WD$D>UJVif+.4lJ:B@BXVEr-.5a!lXB/j'8r\G'4Zht#TADTLfu7.#GPS0'Zj#3E!;E474,ZcfDq
%DedpRX,4l.n3'g.O,'opgZ9>7G`7S/Nr^Ndab7"KhP4UDS<mq;c2$one\gfqocGm/`#XfD7lf*0+B\3u''p0%^aOX.@#3<n,#E:[
%A$bnZ_+\9-5=g-I3)C9g#nLkf*P=]:Qo8!h[I7HTYPrioog$fm6OX=V`<99Bp$n)UbC?/LIiMb-X3p'"4>%H%?f,1[I!q)kjCqdS
%Mg:a3c8>FQ@88U7/$hU3AOegV%cJ!)-,JJF*FHI)3JC%5&*NlHXI?g]ddC?J1-7[C1#lf3G&'[qY)c;P_j%W+cd(YdcF_BR3Q:Pt
%;CipR$gpQ;oIlj9h)%@ojl/]T6_Z+soYVK3(LQ:%&7ap\b)_iQSR)a)o&0g\]IqOh+2@X=r5[!er%33807R7i?bX2Pdtc3-dgnZV
%(>o/gi<O;Es-gonpfGT:q>N>Np4)[0s.*`9/kiVHI.<j/eLY%f]>+CB_[i?WB\TF.fgY1rJ*MFJ(?ZD/n?he!.*oc_4Df>FDkHlj
%dRY.kdh^Q+nGXnTh,A*`=cAs*V>AF4rZ[R'NHo7XgQ&EGq8_$@p9N*CHh$#mqe$Dm[+>4h++A2$,Pk.63I6Aco[.k!)!VoqT<=2]
%S7[t&@IoNZ,WE"`NO=],W=,iq//#(VqPNeR%YFWU.$(@6:OVOLIt(@FOUm7#H@0IF<UsR<P_\0C^>S42U\_/2fmJ4R/`5VU0EFD*
%VR:DpO3!BuT7RSJfA_Q<2@2T94OG^o59:>Y(T"I`95".OVL_uu:p+YP*k'(KA>QW)Q-Kl9ZVtg_0m[I"fQKVpp\/0,`#.;)g<crd
%[)tl,n&>7'%\D@_BtaK@rkDoi5?mBD2!c8*T3<>jJQsOH.!%,1[N3K0T3'"B,pkWT$h]q5D<N$"]\bPA]0+D/fB**?HY>':)4nA;
%WVnUXD-C`TZd%=sSFc>Z^\dMQmpr,>s5Lp,io6^t/\_7GbqeR]cW!3l7lCYq*UuiU3l5T42s+fnS.9,kZ4.g\O7eXP;rbH4,`?ZL
%lAO;=Qo")C@keSKX.aHGR5&TT[9RTW%-("P7*8Gc^#(t12KEtpgjQ0\S,?4RgX+8WBDL?\-*H>2cOY/tW1C%@iFK/*mHE8hj^g?R
%`09^`9`AbuU@rW"g).KpBq>`\s7u_ohV4jlUAn.m-)To8eCg$J%PEI"24\O;cE(_@KDCh;@.Sbe#4Ka-i,)RY0mO.?<L;e@`YP-$
%L8WVa7Xq&n!(JL6r7sP"c*Q,B]GIn5ffW!_-7dO"U:<0DH2%%S9mpqnc-t<&?,"pZVl>N5n#a1t4*4j$ZlO"ulRQE87dV"aIu)d@
%'nbK.A[PsZ9=clpmW@nGcZ?SC\W*<MT]B!gQ0SJjR&?qHge@NbK8DWJ#AYhcBs]EU^cu],4M][j4DIsIJBCX0gbpL<0+Dd%H!QoZ
%1/:PNDXYR?4'^e>LYUQ3@;Y,@2TEo<Z*Z@_XKR$%o&aY""*Tpeo%qE<Nd:H^hJsgIq/qUTI<]eMjHb3VpIn2Lh0J+lVTlI%A:<dp
%B6R[V/jK8jcb4*V]$]Z#7GCPZ)n:8sPNQ!GCS%4/<_F*:G.W,paAXPRVr5(_D7J3):YQRn^,L7$QUd4&q]0$j2"e8MbF=DY:Zgc&
%66&egJ,(7[2m11KWdji<;9KlTlJ_reg:%kO(2mM"^KrP<H#WO7/q[1%_q*)LY1TeE[Z7cG!`Se[R4Oj@&NaLU7>e=o2Gu'S`9"PQ
%Bg10dEKt?kDPVo+pG]2r?_"_m=jJJV"l<EXh^6\!Na:5UVi?[IV<*WieoRhC4L:4;\9Ua4I!Vth/[)?)pBE;D:K)%>CG[2Roj^5V
%>nYUB0,mtn>5kW1]&VjWh^o&'RfD.'m:ii^q)9k1`'n:L%bhL0)>6i:><+S9n&cQlg=<X:V%QNUcf->*`,e,'i"MS3iQ/JIBRt!S
%[TRT\jd3Ko/1,ONlgc:k<kR\BX<1-YrS(p'3GY!u[UZJTgImSS^,04I=DmNZGR/Rsf(P,.(.,a0]6+pP\ZV+t-:B7_XKD2D,N@lr
%EO+-)P::mS35hN#5%KR2:SY`Vf08^"/Z)&;Vo-?NBrID#-;1\d7R002`'r6nNLF\DpL7aqbP_2O7R$o`1#YDg>9B)V2;<_3D,</A
%cB"Qi,P*sR"38:+dAJ?>DpQ24]^CtqWq*gQYdh_t%;-J7KZ2\Um]Fe+LB^oa-]#DIV=IL(S*$GP0iQE=-]2_:%Hg@r-T@K9p1A;8
%)]u@SSFtc)]_6ns[^jH(I)pjoFT2c1R%oj\J+Do[IF3u/W'fl<[YP/!\_,I;ZhX=Zo(%_d629a;T?FREQ<,`+-eI@qqEN":0@&.n
%K$DUK]li;J3ki=7?<qrlr9<juobG*ugZ$)nDiG.^idW:qp3ll3o(YmnFn"SA,J%g=:'Cnbp[@"B:1*q6j_su4]Db-iqHdG<?I]H&
%=>.6Nq"/KC:LC&=p==\S4+=>NeuktJ]lt[#lYhtGnFO,-:/>Ili9U`>*J(OAn1cs*j_-Mp"M,&&5e#DYkRPTEBZt'a?lC\PHgq78
%p[/>]lB0!#kaakfiU3;Q]>&QB-ZJ[(eJ$S9:Z)=8!`T#fN^235E<OG<)ES#\DB4;u/ri1]fb$4/_hW:9<j,]=mZD9oouNt\,>]D$
%D!cs]km%XI&*W""8)WI[*_h$ap]7AW`"?Zp:Z1^5"M.=!5W=#kB2@GKGQPE"<]:uR6AF>XhrKp&<ds^EV<E]K]tcdAlld?T%_]GF
%3kVu1%)Ke(L-V3KZQ5;t$Vd-\DAcORB3W<"!dgDr%2HoiS1Gn4Yc;`1H4dTW<^AXTl>DdU@BM/Y4AanuV65_J2ib>1dE((S8QLPm
%d=\&m5b>'k4<^=+A)#,PnQ5m%2Lh`0Q;%UZT@G:GMQkA%=q++87A1l>CLs8^kkPFR'4=KNYJSk8/%_F_H(W\9TSKMJ+HKfV6IKWO
%eBC/"[G&6<7L*;3dF:q;b8Z3.ME#O?fe?#e*.)[]U.+ZsOYpi'_JBLCr@4Eo]j?PhO>"n;_V1e%>?sGDQi=hXT,!Uuo*dB0(6+BO
%bn`h?^u<?accYCA=/iN;/@(hqlA&s"^l'm,>DD!Bi*n'>ga"b'Eq_QI_g.J6&[eoPZ9=J!><LZ,S]LDs0B_'Ziqg]4AohGjAfmSs
%H#[r19K"l:3PKrndmBYIl=Q&fP%*.4I#'1'm6%P^0j?9UXj2@_Mg'O%PE2S'3SV<.F*=XqI]'Mskg8usoL3%#EIK8_9(2b=NE`JF
%Ob]9E-eosg?Cgah-h7a="'*gGcil/&LPi&^L+VDdmQHN,kN*O``MkE^2K,hD+UHn&FoCA'A]jnO?Ka`'(2sD%X4OpX:3"r4B^m<[
%?>&!Wj`"N?J8H4^Rh%-/El8IBaTF)a<,)F:h\uHp2T6rY[Opel.q7%1Gs0i.ZJ`,+qT?m"9TA]pC^mM8J5\o4!fFUgimcH_,ZVAu
%ZrLC37t9),+dc75`1q.tY3@5WMcI`q(PgWHeP*M,SHr_<@PPbS5NKt7+tCaT6!``oer.e::L.+/3SdSBCfQkQ5ZCYfMZ9J:U.%5;
%AA,Sd-($9%<C$A1QAUCbbO?cFk"gj]0%qf0$@+t:s!"u"'d[47)VP)qZ=YZ3r0'1D)lhmKG:(?#JC45i#M6*]&W.Gh7hYf_ObE&^
%*(ZG!$$.4t%O=0V5_@Z#8>&8R&kHD'f)l=o*?RNhU"L&LL^t%fE4ZK'CiRV$3qUZ>OO+buI_7+ki+aAXD$hO^Idb\6pM(fO>)e)d
%O<,g5&:\mLU"p>Q0H22B1d-%!8I0Ns,e1sYK_V4&KNMLUm<4hF?B)q#Du)^#-Q-4dmY48a%lKO.#*FR#^\2@+CF,-OqFH4/,72+<
%P$g4;''pT0Qm2q3P>dE]JZ2]#VPlhfpo/M8e1,-$L2@NXZ$S%;1Yci1\"V@<]0'RqZ=YsUiG<5><H7G9PBYH_VjEHi^A/_?CZ#%h
%>f(cXn@!-N>#SIJ<a[9&^P6UQk'_[.hZWgY(5qE-9k)\0afc!/J$m6I1m"3)S`u(oXI[iJjRG*RXFs_YI,i'>WWV80c:RcACd=fm
%Abe8>8?pQF=^))O_l2JL`R_3ua.Lr+Zb`XOp+/n)]^.m:d?=/tHcAf$NXgG>?.KDH.q@7gWVF,\-:Ar0I',fdhXeuf\Ks6uWrUmt
%f!Yr\&pO-`S)!:Ji0b)T%A>6Mm$cgk4l98CH="dNMf$2:JR-[SPjq>k4dtlq(+)C4^l=ZL^M`^Yh//d#oK\kS&RuY76%#j"MNba<
%ni;Epe.%0XRg'<Bd-u?HCHo"bZrZ8WU3:)sY!;pZiA3+@7^`_tBk![c>K/>BfA),o6kN(oI)U@.Z3b!Hjgt9A]Ye>;cje%af&n)K
%Gcm!4\#+a9=W_-BHXBA<ac(=]&Vj6'4!GWDMc]"WhG?Vs+e5u=`"<TWVu`'qD?S*3fX7WT;4M4b)kRqSOj??gOuot+?u8o]=j':G
%Ha<>Okk8$V54k](0sEZ<Z_jgY<S-o\I,'T:J3&eTP9*&inhsLcYjYT(kDcq6iOl)C;"\e-H8o]f[bi6Ue\_]uag/N;f'+X&`GS[8
%rjH.)2bFN"A793j5L#b^-1nFuCV:dl6)Ug!]=%2O"?Z1IQ1;.[%He0O[!m.Boc_#$k$GHXboP"Z3^hk!;aZ".d7/CY%DL!>U5cac
%NEXqPoXY5=oF4OF7Ve'geK*3*RA1jRpuob"`un<1T^[`o')qCL_B6m<%Y'-@i=E1Wa5N)*s%<'=f<0im_Ku!Pgcm7c0n+V74`'o2
%&&TLN"%M5[oA7>+a_qZ=eBT,T'[jS=2>PMUO5cNGKg4-L]@G2UZ6'#7)o<\/4oA16^Dd)"Ba;QFa6I2np&;)PO4l`IiK$sh_B>]u
%gZ1?l;*StFr"1lA5?>A9%D-71r8BSf5N7"aUE?);ri%F,O7fn?q#3/@rJ*Vk/Thc$`]?^8Kl>a;(?9)]NsdC/*l09(iA\\>r9!d0
%h[ogL</?h78%15N+^VA&n42BdK/s?(%"G)C;HOBXCgN!g_B4pkZVj::A%b&-pDj0G2%&<NJ<R'(+^uPl#TAAhUNUGB_e\`D8NJa(
%EVHp`9mj!r5&dQU54!n<;0]]!oMG\6K@#CWJWINu,#?q;,nuh`-os:f!@ljbNE+Tna;ZXbR'AS.ps"q^=<eo9%>FBm+s4W3,9M=C
%L!8l5a@E_lfS'i;6W$]TDCfBRAj[$HQKX%P;"Tm2mRAmqgKqKu6a?HpCGce2M5CnDL-EJ#lpE_DEU9I04NF];ooZDq5/N',7l&!7
%7pe]YkN[%%`Hta)N."7^d5^h32hXA2]-[*sY(o21U=/r5*;`9%_[tJh-A3Q%+Sa?!*$R&pmD4iYK-*'nfAO^*hg.-LXV1T*?\Hgf
%%Bd1P76bZ>V=6@sHPGr4'3RhfLH^iC'^hn1fchJ"jH`L1`qdV*H<?E9IQV?\Gqk\f\e`;bX4$\0l+Amm>M<Y0$toRibEs?CMPKgp
%V]FUk[+%6U]NnBf:RE!2WFq4FfX"R?mR"Or_q1LY5Wro]`h(.K*VMq8bV_?Pm+TpKDLU<ZT&"^+\-IM)mF@?6fsqjfo<C97JQM3_
%iiq\q[]>HR00[u^D`*"(j6bui=aP>b'<_#eln@/P0?ag#aetJ]s4T]#kO@$`p#V]'4XX"NM:6P*oOCRbStVNAf?R4:1DKEh`B6LB
%cVVip3Y1s6D0gqGT$sPY/8]]Zc8<sk>Ed!QEiEZl+tqRdoj23&F9&t9a"rU^_R66`Drco7%9s`*TlKK;#bMk3QYRmp[H?q6_2]UH
%Zh`)gObG2K.XA)$QA&WO-1n'.98a-t7U&e.51o%dAR`,$a.a)3q3+,,CN?^k8$W?Eh17;YbD7UoV2'A:mTQN50(i5`R5=]B,(*FT
%&$8e=XhmEc0/DRC1u8#_HC95LDXcIS1S1e+ZUl1L5-I>Zq`KBF]#D[gnk:FpB70i.*lWN>j[IjU[&F6g*KQmDGD<<;_FRW[$2LcV
%"HeD[;S2$@)s7It7YBrMK$eC*>G*+ei#((lYW1q#IR]>?_(#,%r",fPA@'HlkY(uFN8r:CK>"<(*?$g#"%l`Yed[VTnH8?-]*_g]
%)hY\jeu!,Prf&:%`JT&FQcEY?E#PNAEA-%k[XDg3:R#`>(Nnn\((ifm,U\scR'elXN:[D*b7bl3CfUL;,_LuUrreUXPSUg4=J+\Q
%*&bJJ5B@qeI6]G-Hu8o56+b]0iFLG0]j"R)an^f-GdL.jES^qZbhm5PfhMOC2D+5O>1Vmt3EV6HOF[ccW/\&$5/`2O2&r/!=3s4"
%Feu4]*5*=pd[nH#+^LVg,hhhAr!cBDGD3;WV,p*7,mpFW%/nl/%tIOj!1Yt?A^1-1RsWh)G_j`aj61=^D)hB&CraqX[84dT2("=;
%SX3F,Ee+^HW#(K+F!0rK*\0?ldi"*BSr6`?Zti%bJ+Io`qZ[PmMqKehbj$0q[^e%=KT>WtGDcgse,hjJ6gQ3%P:8)2UB.ZhBamuu
%fb-C36qa^hQ3X2&B56es[\k/%r&!jABg^9>Dq=h]:a]ep>?1GN5G53cZJqLuTAW(D6%T:Q4GQE2>I*j)fm;@a3$Xk?Ap?,#Xfa(N
%[TQJs6+3TJ6h:&b;ctu(Z9;g5>"qAZV_.>7nXem&m#c((?aWhI4T#3'Lsp2d6a]YW_2A3ETl\a8m)<:Ck3,g]p91LR<J7c=X;Em>
%A]ZXj@e:5\XM:m(l%`:%kdVMV=2YR^B>kO?buTm%lVhA&o]Qe@KXfD*^T-0>:IQn$p6Z##gSb^KQ\\XMZ<#6'`mnlR4,>@*/K`q.
%,%adm\7P!]8n5VPSVptt6ct$%5K!P0X&Wsjp:(BlMe[9D[:sqS.[rM7`NUaWKZ1<4H[>ua>D9c(K5%r+HKM3a#jU?*I'&n8(i3Lh
%W@IhKHGl=@8Q@^25G>D@lU)_Mo1Dam(9n-.E6nf7U.*pr[5WDJ[[4[%MpWoNm%jL=3^Pn<0$TijiRT]-k!1p&J:YB5gA\((G-,u*
%8a2j2-UJWh8lb5&@J"":jLqk0gJ2_N2D*uH>0,p734`5:*;DIOQ;.l1@RI,WWb,!ZoHQ/iQT)UGP8iq[JrNbd#<TG0eaaZH3PFu$
%T*/p3_r)g(qTUoI[+SVip1DV4?8``D6@'`go!X,K)gsJ\.\dAeT8]U\GRbh&40PZ]D<&-]#/X5]%ci&q@q>mogL-9:1fP=+ZpeW2
%&2Mc?%d&]&0X8je*.53*01Q&>a&c(/DINONj59R(4t)A#HQD3$@&c;l&%XpHs8M;9*\,>4^?U=l;j@=Ved'Gsri&coLF<\e''6m1
%5%qG=2FmR%Pm8=#PlG(:dFsTSY+_V5pPk3Aq7Z5+*Gpi-cVa[%b!/Dlhf"a/CPC,QUARt&/CcJ=!q'Y3k3'a>LjOJ9Qp9+TIlAbe
%](9-e-GEL?r/23MIjgbNSue_"';C)GA6#\5/ln09\?bC9ga"LJR8U);n6fV('%`C]W@j&&DcTaC3n4lW^j0@'_+ML<f58&6^2h$G
%%'*EHHg]:7kH]QUXDI:=1[NI%1*HEL"D0&l&o''10:.'B20!oao,0:_VA^#L2'?L,]KP_Y#3;98n^Ya^\Hl^u!ngZLcs-]/(P1qV
%HY>#5GsC_j\Hl_h&'aO9ff_1(LCV9d1`(]_9G,>tkV94M?s`%k;\:gIBuN3*/G<D%k#iNiK0lM:+5-WJQ8T*ld,nWo=\1?T[S[6-
%ngrAA6Ynk/-\8E-4'-)7SK^)U-ce%KaNS?khALjY4c9S"/"7UU)h>S+V&gSb7bkS<ZjEGt;2%<a#sF;JAMUk[!k'W$dNILs??46#
%:)?M$]2>o="$NHUV^*]pE&cXX1I2Le](3gUSU<Nk\-r,e.eL5l3&.R_d(g\/66K;Spk&A`94rQE_(HEYS\1+Z5"KM#(j8X6P5<NP
%55Am7PJJ]pFt4DUKAr]!MD>X3dI^V$hK_\4C?9Q)9e'$k4CKk*l'N+8U2s53,OoUj$8m;c@@j=c`Ru/?<J_pbWATdH1Km.\24PBT
%Vl'7/C^N+ueb_]Me8Sesa?JQ.ZSMS*]Gn(m2Jo@+>1jm\_?<plRV[lU/b$3+C*n8rD&clLa!r/nS@h!C[Q6!FUH5!NjDob!$'#h(
%]EA=CT&>d]NW9lrRM4^)3#Q;<)?@o!3D,E%=[raSb+dX[[OkY0WGRo%3RJZ][]Tm38rB\4QOL(j5SVY:a0$!iB,J'4%`je$\pf$Z
%coPU0W<XfS:]4<!?\d%jW<sqq:qgDS>O@lX!t9$"1AN?ZhSVC;qd\BGlnndgT+q6cO(*uM$KuQ!$DoE:Br7$lm:U)EedTkIf]pA4
%a_>&0DAC5)C#;cdIj7R7l5X6V>&00[WBCU]HZRLjY,!fdCmD=HbMo=.gS%e=-:t2\19Q!@fM7U89<ZWmRk3^6.'q^j\aq#P8Sdmj
%UU]<+n\N$155%DNH-E^&Mf'`skK+_cHo0fui2(AiW[dm`IEVS[0`k]@N4c)]@7"!_AQ-U3O^rDIlDC)*Xd3G864^k#l##m2.%@LI
%j*&]A%<YVC_@it;h3>7GEiB%cQVH-V?+)lJeic#4Y9;)g"UJ[8mVnPjk0"]dSif;m:*Bs9V'%N)pcU-#dlX=@_;po2?FK-8F";*g
%m:'5UAP[2`&5Tm!SXR&2^i&G/][FdaWI!=rplGZ[g<`)(<ka0_jR9QY#UX(rQQ7Mj<[VVnRS@uO'qQ*u=kSr6Mt?)[\>VM;<n2<k
%b2h)Gj%RdI*UB!oKd$:7E+WBR4m9!2/=Ypj"B(,SIR:,?;N(-=+h@%PftfN$\.M/3%mOW0l7YVLW,>;>cPfAJVu8+b;cXd?QVWLJ
%;A6FD5"u-c=Z7\h38->+.m$ZX3[kABFtI(p*K(N(7rrH+KC2I<hKA"aN@[E`-:*##?Q8:eKZnfqlA0"iZ<1RA5LO+]!dnulbXDD5
%T=[q_Y,QbHKNFl89mM?3&JHYHPX8%=-mVL\qc1'`XK(s+-'e?>%Ue2WNBoLh<4A_e-(6`P4.lke!>b;OG3*13cGKt";p=pI/BZP.
%D+C+'l9+T&\=2t$:5t2fN'j?D9<Rf]aKKDS*c@D:!+344]Z?Vn9rRDP*O(7X@ackf)1%pe_<L1RAWJe=,G'..q0F-Gc"AehR>bUA
%alYAs`V?,_)9#9=0p>JYA/$g;`Cr`UP>TP7'JgWGj!CJ10pYoRa6Y3e0W^)&O2YUfL\d)aik\!"nN%og*+SM"Rfqon9hFOe[MhtK
%$jdR[ngiGeb5fDe8sjS8duJ<pRLgh$Do0&gQmci//9+,VHn6>VL"(lo&J#p<VkMF9"@KZG^ZY@9<!77XqOE7'B;(A-qH1&M#C`F*
%\'Zl;]t03C=m3QRB]$/C#C`FcMr3aTda7r>:ID=!!Hsn>B4DkVAu'tse'RR_h@42_>7_:_GLRDcd<_MNICkNr0aiEf4;qk+&"H-/
%Hq-9?6LT=m'=-!`j=Kq#+$Q4`W2=[okeq2`#2`:%POGFsTt@hVG;T-'lb9.=Y?g`?R7$Tem8Fq7gQ[H\jtu]j%K1]r&[YF,nchbj
%7P,WVD,W070l\X4`bO+)3A=Kdb-P8fLN99mV]3;jS&JmM?J"&3phid,j+m+0-5gErEc8ToQAobJl=7%n6D$<RJ`h1NM-Ip4>nQ7*
%DS"WANK<?&;QKGiH(_doo"fEnhC"&C)3p1k(JAnei1/kA(7(cL_'?RT#.H3$]6*D]>^u_iLYp^hauJt-Tjn(lgWTI(Mjgq1ScUf*
%DejuQo_@tBq)B^F(=W/n^J>=c@I8=sdUK]^=`Q,sQ]Ib'IX`EcPU'V=)kGt/1Ag+co-b,`mCW-5CH'F,cen5@8O%<4ms"/&pJW^6
%ptb4^@UVf0IK/O,/+7Zp\`p$@i;MJn2dl-f9t9_5bI#33NS#n%Ofs2ZqKs/6Mgi77Os7Uq?NdoMKA:<_jf^gsICTJ0_m+"KeI4`m
%#P2klG]d#(I/NRChcj+,3.S7`*qXAQ<sOt2?&_()RS&aEfB'9loUJ!s4Q'<$Age7P9c<X_>>f_M"4.;3]r(Q4qQ1s-"FJ0_?GGl2
%"5cRH1[HJPph7g&>L[i'%h&9<)[6q+9o7_=lU^adO,B]7/I;e!GV<FDSCQfq0kt-aObMbpKe_-k,@6"FEBC$"l0_Jt2h()_6VrIa
%G5.N]S"NWtCgj-ia*:Y+fi<%Er/"Xr^0;12e!\>Kg::G+CW,#I_H<-8-d;0ZmWl7c`>q,PY<f7/frMX[.<T6t>d_]+(g)36eQ0I9
%O7\,o5C.BPpLCtl9;6'.ZSM#b=)<tZSmPia8')Ma7p?+7)>Q;i8')O7Rak3^/S/3OH@E&m;r&I`OcoFWRM\8HnrVEdM9ccL@U20D
%rqP#,Cte[7@S$:%=#]MMa5T*g8?C"TcgP6.l^jZu?7e'g?$k'J:j0q7p"@A]Z@9B4m<cio@l3`QBrQe,G&;,Qq62JqlQPHakDr[I
%1ZcVlO`IlSZth09FIVCX96'q#_l9mq`kEoDo]h1=::XI:m:pR?jfg@uh59@OMTYtbGB7;Dcc\<)90E4Em-XUhnUF;`R^(i6W;IX#
%T;1t8`u()6Z/HJm*gE;%iFZo9)&mJ5L7>I,H5/PP_p(LC!tEE1Jdp=q^G[TsXNlaS0Q3P]lV7dKE:LqMflX83kXJsc*'?[b6c[Kn
%eShuE(]r216g,Ahs2`pHV@>6lT=995=._>gM5\7-&?:J\iK1^G2gNiS?.O27Y@rk!6>h5*d>^qS#&qgZn3\3`%K!SfO"Ad*<sJh*
%K+6>Gl2\[fG3Y[j!3[%L2Ar^g`n83h(;f6JCFN@=#F(WrZHn:-SJ(-BY+2a0IVXJa;i_k(E$/tCPY\IPPWUG\PRgV*CP)d9NitRj
%h,lN5Y[3n@C2I-k7:%C2m_JnM`_O.b31W0EEgO][i-<oV_YJ^l#b"d3$UhE7)q.%j%)4p7RkJZcSJAg/3e&J?q.RX/]8d/UDJ_-0
%WlQkJRSE9(D`Bm_Z#^(]`LE_U8O1'J:9i/DX11KEdK)mt"YX[7*0&W:DEr8M&<dI.'8i@q!RI)77G`,k=.+Zf.RhA#]0p>u7.2T[
%F9DSBV0#d$3NH8F<A^<.7G7biaQmXpQpfX*V\\.=A+qjE0SH+%V?u[R%UgmjOdAgDWGSV#o>#[0gFgMF!CSmVa\I3Rd?H"grPZ(W
%e_DD/=\np47XIl&A?Q48$N/LX?H^`t&:1O9'DEoip6:i\L"1,+h>D+i.3h'lD9ATrqT#J)?p%IQSCLZ8a%f_/E;iHuqs/qi_H^$;
%BU&\7b:&cs`%!5ZCf(Pd!D=bc(cHiFWWeK^Vnq:mZOWLf<+Z+>G+saR!U:5p8\rU8A`GH0jiLS+9KZ;n%(&b_1e?rGp8l\c4#Kl6
%7-\_.*)fiP+d($64>j@:.fm/2+mO2mg6`QuX,GQ1#Y/5bOBYOY(\2]K7;t4:,$4buU5I[+ML8Dm[]6('9L8ok"eiLZGb1djQ$,0E
%hQr*4=%2.h<bYU>^9_,NZtZ?Mnd2aIj\s2?-=&W:N,sef%e3)GkP=5CF+e1dnB;K93PtA),<TR*h5+DY7sKb[5(a-%Sj<l0_UE>#
%]8R7sGNfU$*BJ)NGE!V(h)@Ffk4cSKG3J_5$SU6d+Wdt`n<-<:h1^*j>s^YkEel),B]3MRZ'Hu_>DT]JeQC5*q?RTZ)(Qick$&_^
%nNCQP)h`J(r7[pFYE]BSkmK03*96jC0cmqU`ae0KcQ(tj%l'YZDE*[He:PJUN$k6GCt]H\nUhYh33QE%W@bJ9UPGq(GZI%?;M_5l
%(#g`Zj#e)]69KmfN#TcI9TAPWadY1n#.#_'5E,*en?A[W+3";A:[8Ua:u$/31#'kH?sm]S7M&=?4)c`/Y1:Jdr,SQZ1t;=fI.@V&
%57ihaaBkH\:liDpbRF!_8(5LUU/E!d0(>riEj/:.aX?9J#Z$89#'6jX"_a>s\'X3,a/o]hhq#tZ_A!W6XDcc(j>j/pn`*rFjHuPn
%B>f5d`u]5T](c`o54<UY+P$_QV_&^;M^J7CjI!^Ta[]:$/<9Q!r1X"0bh$U'Z"(N!o8F^Z37kP'Nd3_%!/tbHQE"EPhO3=Y\d`QQ
%eLu23W7t7:&U6`QS"/+/3L2\cD%.EF^!;PF(#^R;<6G)I_jqKJj<TCb"!Q'PlNHV:Gm#%B=QZgN@a]Xt-JI>N>rYF>aaR8S3ET4m
%aPcilDYXj'HJkp)epCO1-slPH_XY*8H,AuHh"&i`QY)N<l-Xs^f4JC\lq7i`rJ*$Y0>>"Y]su?0s5]$Zl!b_5jhhVCGg4"2o!bgJ
%hWB<;q;Ztf&,>XHO$7u3q;ZL8FS5@PX2X8B(WS`lY81JO]i\V>l*`f/jKHmicd#:lqL8D.oL(A22RiD?Kj24(I_,:m7u35XYK^67
%5@](2T#!AA1;5_!?HY.q*Ig46^:s8pD_L">]NY3=4QF\eEk;hAQP]IQ=/5XWIsZ?eRO?8Kc,Y<;4Ol(/__CN*G9!.IFjEdG?q\gS
%XG8%<h_A10TDZI]R%'TBjrN@J<aY=d5JrgH&,>_2QXc&t]>Gi^D&rZNODiu<A`(/K+gCn%?$kO9VG/FfbDQ+bleg!RDa+*Wj8X=C
%q<J36K80Bhkj8**B9k(0Dgcd,Vo?\`AA\lqmGh!K.fX'_0E([63Yq^@HBsm9msauqq"/#=Q\bE4U:g/f5B":'Rqo\/k1boVhjg8H
%?ZgYaipH"'[d19n?$uS#n^[<@G>@t`eT]k4cs/S`gHQT_aQmfue)SoYn33/sbSMp*s*h=`IOm\^p@S3?J$sasfp>dt>[Le9/0cq*
%?1U<e?@TXN\]fBu"o]ENb?TGefkGm;gP:.TQD`*]bEr$ZiIY1ef!^Wpo5F0@iZnE;r5c#iDu0+c-aa)W#7?WtQh_AAl?mq]r[*t1
%%qIj$B)S%AQEQVk0A_)%0tr9iqtK-O;d'RW+R'E-Q?`VIVA8MibQ6bYG)ee?%L-?*m5e4E_RJ1+)h7Y^dr"&I,TVt\p=K6*ER<:8
%>N"PfEo2>OaKt?1_2%PR8,\Fnc79R'oB,`!nSe!aQMqc2\9([ff<r?P?gGs@]!C*SIeG,s:9)9Xq5g`OUU0m:>Lq)ZF7Wm*Tc^UW
%Nj]o'HXh;Jd)5f\[X\5"/^_OZ@oMg.o!V4`bEDZ*H+C'T&3RIAo9='-k7Kgo=pm[3ocJ(?P9E0bh.Ga1dCr[nq;oedDjK!/a'Pku
%8GOM0[TtDD*mgt*Rn(8\=akgCHHrCN(c@ou<IXc7c1R]NE4K6Qqr7JF*EKsAm0*+n]FuiR;2]pA>"*^<!%$[,g$_kG,Q5T*mmXS?
%PLdUnqE=5L^4bt3/H>:ao&@h/04]+__>Vlr>=KG^`>"!3eS]?7k&Z0&k*%B!<:EisHFJ@HDJ)G--cUd7%.gB;`]]i;&LP!e?>[N2
%*8u"s"8n`Brs'P/I*Z1!\NG.qO-)Zt&K?*=DgshInac7+^O<H'mZ.$_:q=KNI)j.DmrIIDpPLhl=)=9LJ#_(1n#-'/_6WsA`Tq_O
%hS2tq^V>eB5RGe[*KI"f[/oICY"PJUU^M^8'dInqo`4.WoY_hJ>Q+Nem-XW5`A&@EMbjB9mIC0*Xk?3+qe3H#`7i3ioZ/4JT[Qj!
%;_,6f%<)Q#U.-kCCt]g=ml&AppXpj>GF*,<hH:WTKE+fLbWqS7bu<N0NYOZ^Sr"jMIt/F3a)]#9i4@SFqZg'lMlA>]=c:Vof0f2H
%(uo9'lQ:Oa'K(ZojGfAAWfMVe5'S">IZhphfK89tlQ=j8IZXNfRb:40HbDW#AfL7&`R3Anjl21ECl3Z6q7Oc.S+Bt7Ak_O^5H7Xl
%5-uJGr+U1#+7%iMB]K-=hKO*"P9c"Ak<3JW"%%6`.$p?%=F%OqhTCF884'1d\f^?Y^L8lj,sGT&cKt8M\T>3oKck5Cpk[.7Pk`&d
%[,E]UI@/kUbBNh*7#7ao70Q,?E8A=,7ju0.<NKsU>Mq*JUnm0$&23Z.`TLoSs%UiaV!I%eUneC>0QAGcOGU>],mbTP/"GN*I!GZ<
%plL'iq\3M'oJ'iFL^V./H1YDL4rT28h1/ta(\eP5nSa!k]NTtFiSZ;8N=Qu(#<GXP@G-3"FK*U'5R&CsT8ASXP2Z>rLdb[]Op%ql
%/_;cG"e\l1J"m2<(BjE7,c?,XK[ftXj?``_+p@pQ.p;iTUu7(/:CI1@=o\^)0-c2N(/"?p'iOtVXo,AeQi)?Bn0>F3)W7GXZ[Wp:
%#YuABS`\9BeF*6*'V9%qf_#"(IJ$A<pE/hV2WYp6+J&?RH_>_!q,T@n$gmiWCknj!Xl$>P7LmUkB&ti#d4<5GZ\4$j57i1:J,%cJ
%**,8?eBI_eUL,g,r_kcRq**VRA:+L2nKm/A*k",daG_.kWo4YX[!a\^P(=>*gQ%]C8_EmFenj>uPIcBgn/8<Hd#k1Eh--oq[M6/g
%"`3*X!hV8&HO\_BIkM8#qn>_+21@qj35`&"8:(b;K^Bdk>EZ>ddW/?tRRm=hdUTE0083\Jl/Pthq".71+2WOMn5Wi,%tiKCa;;\5
%bHY*`"rGOjaZQKl!$67tho=JSFb?sCW[EO7[%)XSPT9UW+jT$('>WZFqe56So+1Wm-,$(nmZ6b/6YH\D[q%Bt*?PK/A`Oh2&5_a\
%J7m11g70ZOMTlT33]\D!2HBoqA3fMLd+/@O9[QadC!jcW*#QK,5FR`@Rs%"9'%^gW6RSq;'j7?uq1=!!?TCAK4IFGjA`Jtg2IXXG
%D&;EO$moqA\DYT2#_i`*:[L,(K'V'<TEdi^R:,eS+tCHB31,?NEs[9_nAK`^$-t0C&PVK(7\$Z$M8,'^dn)OUkZE?hI".P*rKKuF
%JSTPDeBjI<L]^W8!tp?'4:Cn@06=<h2o=MJ>W"/f!4pd5'T4Bei@"`61'HVk,5%=Tc2un,>?0OANML29QcW8m?\WLA3-lKOHqd,i
%,t'O)Xj4hJOMd7fE5+eKY%Q/9i"Q<".!)3GGrD-nQD/RtP8Nu_jiE8QH(%_fA.p70-Qr:$AK/?m:ZB21Bt.$;Cd!sIL&87EaB1VW
%MHDgq%>-cb*0!7C_HG7lPl,ZD&p`+FC+.d;7JuDtm5\Jk^8%\3Y97);&0DGD0aZmo*,!?'^@H[2Ic3h3GsbN[6Onq)U64O;PJ_Eg
%Iu&Q8q9%`l&4&6J/_@=s!'QVS+CSQM'q6EriVAr(8Jp-UI<oLJ,i8&Y5g#d!oAC_n&kdHu'h:2fiTdY+jpGQ)PU:V]A4XO'Gg'G[
%nCdr96jOb64rFHl*m.<;4q6J(A(h]=/\ZK<$QL4i(O2a5:n.mh_6R@4>57$YoLC0kOa_o..c`R#jL":`3R5V=/SRY$*`%*pF$Lrj
%ZED6a5O&N5*XoKcZ&3l=,-hB60'SKAI+qjr-9[G>32Y#r/rEA0B..70K?bSh8-<G^_f9WJQ>71UW&RlpA+\;6l5T!tQO_$?L[*:7
%GE!X)"p#fY+LJLRL2LOP5N*,?r>#r9qnsHd`!,c]3ejg8J2S['Jgo=Y#@`f.AVt-rioqu=#(`^1D>YL\:qDP*<1lFL>O^9Y\^I3"
%pZWV-((jHCk)9Xd8(8NmP6Yh4&)*'QXJD\;4HEfAQEINLH14upD8Zl0TfsWTKt&2U`t]8#9+f"?A1YOT^gYU"'[jC*Rj;Mms2/6J
%k<r)R<<+-C^Rtb[5ErRY/Naes!Bt$_!n'!tbpS]NC-6_lJT(]*B/_&.A9OHLQL>4eQ4?uf$0A]SK+EW#((P0#VSb@8b;C2BX.Bpb
%7Cjun/`"4.I,Ebd"R/?Of7Ci8/sM5)!GX5]BD/sD6eWgo+C_(\JLR=7Kpn<q!^B*d5u(Of)4&WP;(Ms.$HDTI`L[.f,(8b9UP"4+
%Ab5k6htG-gEm0,P_fQZPCcsK2fHj++=A@s&a`=!q@k0ZNfRK-<*,Ren9VGFfN>:2X=YO*s<Fh$a]AYs?1c"FVTF6e6r7F<Ee9\3E
%45da54Og"7R1M:U:\ccI&lGGn1_&(W`!5]qdSj%'A9TF5$_3_CiUce.(eKR>k9*bm<4*,sQagD60FWe)a(E.4I!f[WN8cDb5@]#5
%g(u.V`),H&aW]J<&AI6;&IDdB/*X;t9RQ&H^&LA/X,%_A\5j25(+;Vi00mI;R3X>6&-LsV\Oro)rbk30ikHmRL=-'\FIRWe%O^b_
%+"T+1=[eh!^&Pp-m>qSu:Bg_<ne[)qZ3>cl=K&jK[9806j<F1`LB!5_#3!9t2jOkC$\646(+2<+03NXUBp*[)Qn]>V0[fo7-ieea
%,RI3b2FR*Bj<q[p7m966T:m%D,7TY''`K-L-b^CY$j)i-C&KD":?Ef(Z_I1YKZ`!m2[)e-)1#+efmuPcX"KD[fu_T*i"0'SO8f1+
%,pPdo_ioh)LF3OGRLD<_F-Udu&(!p@(kZ$&+!c[[gpTkE7+))HNs(Cf<^_0;B:.L3P!)d>qHcof/^!9S-Xr[?0?&e_$n"s"(p@ns
%43oX/S79G.0qKU1NEP1JAf0>1@lSu+Q(m)(Y<NZbqOehf_g=+fqt2tEdG',b`hI^\s5`K<UL+5AU&GSR.<iDk^Q7d5l88Cs;nJ+M
%GNPu(XjIZ+K3k<>IjtnR.+Ms*qX"anR\eoP"\#%Q4uDiubOX#Z<pE_WAq,)=:+tXc/ST=ig(bI.e^'NW-$m;O!;PZiOk;&_0(sJ_
%gXY"*IpO1cq8[9W"Uu5>rI24QL/"&%oG.HTV>o+Tr^jFag/X^_c"a`=HM>^Xq(r$!+$MD=1Y(dHs&SFYQ6R-edC-fT0T)_Hiu`T>
%1rS)to>9FQBfZ4^KW8(b<Vm)gRdJ6jXnj8!RATS*M%,aiXXYmSrlHL<Akm+>IG2pV2B$H3cQnDJ3`>=JOn(;-2"6@H+*#:r:ATI1
%&H9===ShFJ@KG6_2$b8t=W-l.mFT+'q"pD@kYeU;\Mr$3^kY.PeGg#mJHc#&f(8@Lb.[Z/rrVik^HdtVn@@\2S$TTo]2n^[0RWug
%dqq>"oTQ<4+1u=aQ]U+5kMW7p^>Ij5IR_h:O_l[06'1`THiA1q^].tS^]-arjXC&\6m05"f&%EH]$^EReo]*M`:h'W8j;'4\_RKh
%"$Q()D?E#U+)UQ":4F.^K#HbBHdJnE10FJKf.\^?g\iGLnQP7FWaKcD',D8ZQPU==lCc7[BJ.`%]3k$WWf=j\fQ"%FD@Ud!;E.L!
%bI5I.W!o%hK+;15makXMmatsWL:?e"^7R!3GI=o3Z+X?0C$`@Zldr_-5H*Wl16:k_=sI;_#5ui?s'7#,)h)>VQNcfC>*"<a@r:S:
%h&1;CkBud<11oh';X_T+7@L&p8laoaS#In)AljW%^85GZYbj0BUtTN.hm_oogATtRUpn@lK75o;UqrW:_B"*.+rDhQqrN"#>9/?q
%gYFT2m#eV>e6"]++$XQ-N-3&-_me\*M5KAXl$^0qk]6&d)nqNPfV%+R[<eAVYY!r#(o:(MlOC*5rH<oYB'=O,V:D`]["3<?]C#+;
%^Kk;Z4-=N8Yth8#"Q!q,%[s4"h0h&&"3@guYJFm0MR0tI)q:=dV>FJ6XB>?iIk4rDoLn:8ZdC^(*4)S]\5kuGfi%.F;X\/+rC+d#
%PilO^Jo7+G[QE_kXcsiJ]0jjR\LQ(0eZ-T3kH$MGf>o%pdIN4p3E5&Yc$$YI4K`f2c/&^A,/$j)76>i.Htul9ZK,[q_Te,.epaYW
%5<t;f<Y#?A*$]nbA#r0(f"KC3pmj<*WAQV-I6cR'Aj<bF4o4cjRPSclgTHd0.)AAV7p?\TF2Y&;aM`".-EW)gHqA5k#0j#*ZEm^N
%OTg75J8/V*S#'0#0a:`/ofd'a&O-%V3PY'ImG+=aGf_-un$U&//IF^)VF+H^VabkgnP_=>G[gJuoKT+9%+upOo^MZY6ouWGI<MP0
%6iZQ2C>B@H"@CKRq*n/e8!i;s_J_+K0Im]DWE&c5-@=@BdVO$h"-h'a5<uA7_EiQA5B+bR$3L46aIh_5j%f>6Z1Wk/oNB3$&*pOY
%NV,s#2D!11ZX)3N>"bEggdc)lRY!lY0NXT6XfBsA?YW4$[>Rub_c&4O/&/+,Oh'h`r8GbiT8^D\A@=_)R%jmXHck=SB(ZHOO.>,V
%,G?#E%S@rN%AiLe-4N]@V&;'5\8gg>RKH>T,a.h7]Aa*o%eWGp4XC'47Z0Krg;@+_?eANmpmtW_N0!l2V*U?8W!/Y.MeC7'R8;Ll
%L\l%chiYNrWFg/6Yq/)JbK4e"s&qb/+/P-^[%cqLO0:4Y1('[t]q/ctaB0a\[XTlO?[BJo[m+!?kjX42%>^4d?0!\(mSj5cqMRN9
%9.SY4+!5:pq%gT)JBOjSpVNC=?d?s%mWp*=s2P4b,8Unb>J*W&flF.$3YFj1+9016qB=!F7k6'jEiJpfr];5X)Qe>_X4]#ZC9lZD
%9`Fb)@+Y\WdWoSOs7iHoYL7,cIfINC:LB2'O&Tid^,fhA6sg0,X[_X*$%$'\e<3U7N.t"rd\%VS"m;q@AaSB)3FoPKCHT&^=i)7u
%V;4SZnnlQFVjeq^s/SW6DDLeMkV'DLlER;`B"1\2QFT-HbJofj$_$h;GO'\!J[gSnS,EG'e\p1#YG_j!o@0X=n@iBCi]3dA5AJ]#
%l%V+j%p&Fq@&g^4a_J02Xg]NikrYpDmH='OKnoGVb"-/7XH&@N?#H=PqP"F;,XPub&4oBKO4OY-&s\%j:'tj<>Vu*'YsBlUfXd46
%iHN-@s0HE0@e1[7?YIu7"[VsEZp#h))LXTNqQ5,Ino'gT;5*i/_lk=!S4BXR8.P`M6X%/h\bFt*M72[ARg.!QbI-c)gkj9u]@Mdp
%pZ92]lM#pSW^o1qaJ`Ohf[tJO]LW3-MgK;[o4q2:F9I$ZB!Xt8<Q+n7Hql#XiTb#_51%U*Z1@?n\LugKqoLrk+H_@%`<FQ=PVciI
%+_S=BFQi^o8k86#:ZUEB-:d01]YT66(T-(m0]2Ct&+r;^$AUgs,-OSuosX`n[J-AtG>42f)m-:l5;HR,olm1GApS^BE@[[#CFaGA
%8_Tfa)Kq/[#+s*O&VqM>e?*n@UCupOG,86?*SJrGGc+T^KC=5"&TGoZX7BPc;$$D'^AlR]3R^91pAU(@p`VeLj$(0r,Jm>#/I#Cc
%44V/k/Lp/V>4cQ:@BdZEqZ_Do$96sL6hb*(NGY:[eQTHUc%o(5?.b<#@.fZ%L)l3WDeRR[RWX+"'e+P#;:ERH]ZQ9RC,>:1f\+:S
%3U$64dq7Vj;\N>BCp,Z6R.sX>]Fl(l2mODmN%mqd2Qb"D5tL;t^HE3S(lahh0]AdG8Mj\f+bu]0$b5jGiL4\;A7&O4c)-?KJ*3Aq
%%P@@g(0T;8N2Q-YHoYdT9]g5reu!@dJ).L+dcc3Gd<bV?Atn&VG+Ijd7b9Ul&)6LB(3m_oCA:@9&'sOAR$VT8Ok?3\N85M[ar$'!
%+>OCIW9KN4es7t0E3N>g$Xtk,Mrb2[iHF?IG.G'Djq\IcKB5F6ZFcPcWUIfMh<"T;XF"j(VS(16eC$X_+#F=O2h1T-Q\23QeAcCh
%O$EW"`F^34Z.Rk(GUtbZ4V#C+@Q/f+a7+R4:!?1OO1&m"@A8[p(=VRBYmEWg*l1)$r^J57gY`f@4^eGT3kKg0Kcd1il.>i#ASW67
%?)CsbY.qW0^E.@Si`0OrJ$%)$C&c9A^^i6]3;?,"5CBWO:U@+sCD!GsQqjOAiKlQ@21E1mq6KJ+:\4J94eHT`MMq6[/QLkp`sY'*
%@DShU(:(@9)ub/@^FnRhf%t$.LD'LuLlCq)maA;ORfM"d`Ts`o+^;]erBjo5c;VG^[)NJ(\Nr:@m]OmHRDjltFRcIl=ib7<*5M<m
%D8&-;FIfI.DbfG<#4<L?NUZ2Ln8n_gF?K9XjL3i,-T?%YA3HI9a++"AeX>WuUtfiMb2U;"Q'77\A/:eDf+R4>TKE-;3bUXme%.`[
%\X+fN7fGHr"mj1J&_Dkd!b-A(Do5VRGO>J1dP-[$Qgfe@mbog'a28'2,+?a'ah$rtlmM1[biRApqRF+#Q,t]!4^-6,o'u*"O^!08
%btk`#ju+tRnfdV1<1Qgu>rFGMMActOJFnR@7o3$QH?i/u[N>a.Q,;+'PWP/:Ch%U/.?WNB[8V#0'pZl/(A=Rd0rY$?a5Y;9:+W[$
%mja<nf(N#<A3SPd2BJoDha>*6X<hqqhR^j:eI.epdf/j]i_DYqWRkq_o\FieQFD10#PkY_5=k6J`p7T8c\]k4E-.Z*WbtPKE1(=<
%l"6AnZE2PbYO8:"Pq>)f'&4\+N#uoSgq2tGaWU;AaQ/og7b[8_,Z<=[EnXkkNp#[82f:7S\$u)1@.fBU6,`[k/3[i&`8Y/L`l>'K
%c`pU?g]QR'An/+=m67[p>T_Vbh!K?&G5pPR2RaCE&[Crl65.VW1Um-`]J.h.XZtnB68Obhbs)"!VZe@:fMl[7l?4TlT?loF-CdIa
%2Q;4bVcF<2El%C2[1Sm2DdLIro-`qXgs0pqQ8ff/`9,D6c=./?q<(kc]J(:/Hu,n(XOk@bR,(]KQlGKi`8&2.N/=O!m?jE)ho1h.
%hi7H24Z=,j]Zo*WC$[I\>bR4Ma&]+`<GZMhq]N=r[e^h6[Hp:4ZS\#,AZt.gZ2@RF,$$[N9>re:4#aFHK2+P;ZS4qjG"\%nZ2O@6
%D!Z+5DT.XYksk#MCX7p0=r4*AZbc6Xm%QY8O'USF52e=W(T/a+GLX9^4VYk_XF,2='!#>\-=ZZ5g2?8V?0]I:VQA%pldFm!XF62c
%LqQg6hdZP0B6-2D<>ph:4.3ePWD%\SI-0\QF?G[k\&K51P7Q^)?>4]?[J+!9RW7l1Zp!jG:X=tQ0=>];f;;1kj/MJ.gN`GVpgh$V
%\)WHdh/5*jGAfAM`Xf(rhY;*^W&9%X5:_b$=tn;t\iDs'IhK@80>GBRp#Rc<]Q"8\]Z*%Bj./Pe$`E5bT??s(8Tu@BjfLbdB,ft(
%pqhmCN8*cs*u@jn,4<43HL[8Uja'%3r-T7*m;F)b2c$MAI/!PM21BdkjMd&'WseI@q!<,#2X$+?98B?]]_6U@)LlpRSme(4lT"bU
%mnKW#-cQ\JlP%b=fuJrfh8[os[Cl)n+_%@Q'>_rlgVhf@-T7+3g!^V(DL,`#06&TkNotbi'BdK6NJX.DZbqXJ;Z(j8^:3\jnab$G
%9Q^+MaiW3+?koQ,S@[A1SP0HhD^OlM;JT2(dtu23rMd3HN)`*1gitl+RbZY#SXhl?ajfD5GlM7DY5.WH=ab2/aliPV_oYZeni@Md
%QFs3]Qg2stEpC%gjf.e3WMMuZH7IH9cbMA9)tIfXC@C/Y2-$08?_+bhg*fa^XG/\,=;0:bXk\2BC9TC=5!@FX?^P/u/RD+tB=H"I
%jeLq,l-)oWS)-1cWD4PlXK>9j2eG,"GCug,l+4N$9Y^"5h,!cP;X5_?Vq4sZ1War^0d?e21pd&FpLj&NjboNiOHD?<f#cFcbtY/m
%;r-m.c87>CSEX[0`b22*[E@iF2K:^WG'DPMfC+%-fo<IGDtYm\;OtMRcCW?GZsu2(NO9s*1],bq`S>"l/MWT^\rP+YgYCQ=qPO!B
%\*6Z;k)Q=mV7Fcmm;<CBVjk5``pNG(^O:U&R%8Z<9fRV!5-_a\?;BQ&XEn?*51`Jump1#KV=EDQid&jG-MlcC$Ds5`\W:CcS\itW
%r5qA'H9U4:2!,;u^%hNem@cUKH#WBHYN;,BL%/46ART"f/[:t7(=ETTrO;BPSS#RKE$fJXKnl/h]nMg6n^GA5n]FHN1=pkE3E9rD
%;bnF(-Fn1UF.PMK?("6LG"su[c0\PQEI?MH=^3pM/hd(O\6-rb2X_ClQMU%/e`le`,*8R%Hontk>;J)"(!Ab"^KBfr<3Wh.LN2YH
%0m@N#O'H,$?t+J'CM"B[Z0hMC7=4]<p;u/@=aTjV><-l[cF3,kk2D^aq:8(ucK]Mg=_m2ic;+*$d^b`<DE-2#M/qHrj4!F4m\Jr:
%Dt_#lMMG.):h@)kgL)5e54:]3hY?nt"k.^SrG9>T>u=PWp17^g]9o)OHaV%RT%A$2H6Vl7f,)96)Aa@Gm%cUH4I?kKKh"eKc-Ih!
%2j[[6^AY8b$^nsI=ZemYQf[@';n`F%;eka?P:Ds%(/Vnch!J@FZSgo7<P.WYeZ5FMffM1f=#N!!r_>B3q,_@TqgN$&oc1m\;GQ0"
%Fq0/Ke6+.Yb!3!2&%)`%I",^VBs)H$['WdLO+I(0hcRIk4a!&/`RPr%ZTPMACbL.gNP]]g2r.[jk&,C0X686dbPdTH^1,@*`C_WW
%gfQRaWbef%r0uB)\,+XmlGEC/G'.Z)3kMt1HE+('T2"[RG.*+:2SZNG?!GR=DqF],k-ik/YP+%\eiJf9eG@$Kp18Yh^O*SAd+LQe
%0,<VjleP;b81bm!/>gk<SPGa"9ZBu\f9]5nG'EhHG"^GHFM<(sQp-!^YG\"j92Cu?Q'^Z-E&;galu]=Hjt<tPcZHa`"AG"Rma&Gs
%['RB14mD^MZh<n/=`35.:sGtlrEaC=+IUI0Sj0&mSVOnBr8Q40,G4MhB(MoZZ#m]7pNfu05(Du8Q5?0F_LCn6ZqrsMpGQJRZ`>$S
%_8"aWRbc"u2JslmHQ-m[g$Y^Plsr%rLY\<AMl6L,k3H:DEGN:uZaQ-jSUK?U]rknTSqE$jp?]TJhd3A&'AFnRVq^U:ZeF-Ybe\F?
%BD(QXD!/</$:&hoqR\P4pMtKNhSEF+]-l(l\_X0ilfYra4*J'Af#VCrMPgnrml@]ogJ=cgVu=!H?gjVFq#:9Yb"_:H\Q;lsaPC"E
%_=dS2rnoC.14A@KQ/[R'lSjI6qu0n$.!Af:*;P<^psDA]1C;MMeIuusG\6Km3aR$&ea]'B\:4@eJ%C'6=IV?7fiU?hTA1I2G)EQp
%RmbXWY-/NMQY$_bO8XD#FKTX"5L!I%/=g+<UlJ3^`T<FBEOT\Tm6.T=S^jY/cf_X&'+^s#:I!E+c`d8gnagXH/Unp&DkAZm&i7]I
%O"YjFbJ_;O]$0!%Q7m0[*WITiC=KGQSp&_hMXsL.X4R:9m^6?hc!BeJO*B4+]CO\#ltRhiPFZMph;"5VCU^S'j:k:/]=bmX^-+V?
%ftD5=S*J9LanX[Xm&GNd:iiQ/aj\`:rRQq0mOK)LM2,5PC[dF&fe3k[fDS<U@]OlT>#1][Q`a5A-`+Z1iDFmrq!bM8<]rMqGN[,h
%'n<uJ#1HOHHM2KX]sC_=b5'*@l;>Oc<aX1UB5?A4-#/49=.*5J]6mk-2r?+XKCb!erM?*++'lqCH9=0T\po+l[:<##;/?!lE:NVf
%WVP!02S>O4ji5^4dWM=m^Pdj2ZTP=*4eLLT?Cs<?>H9En<3uFAQ:n9FhK,UE>fe)`c-(ZDHQBkG?$f;JS@lSm3JHkOoLpspb"pbN
%XidBGg7DBfIX?Fj4`<QMf2aqmFV+!]T%lPPg54H?9_7C2XGOFXXjVGQjsFm"<:]aaHU"DdHF&h.i;]qhh<5A3gDnc7^5n\PP^]\#
%%@[5bVcc[-MaW5,OHW_EF8c;pjLV2&Io,qWrdD!K)uTNGe>bX=]8,e$JrY%l:F`4'&'!n!qG3^oU)Wc?O1<eKg827u.tWVt5AJH\
%>.7i80Z#*LD#%A(BBC*cb#?PN]/pdR54ZbiOH1S8Ga*uo_Ym'@e>gC5Hkk>T!!p"BlP7/Uf>G%o4QMFYO'+fS>O$=ECIno,,/)4)
%k2DL-:tr4Yk6GjL@u]&@.;dPB;!R`"CZVllmI)BL<.(_=C1F)XD63b:)q-7?Z!OPnGP6AnIt+K+`d/r,Vm0-8$r:r1'+aq5M2Oth
%r$-\]%-@ksA!:E#4W51:m;]n'JU_SK`]?iXg2;o#WXX8J!LLWT52oMYN>D7-M\+>7(ebnZd";4Wp"MH&V)Hntg8`S'Zc)fka1>Y<
%ULp:<"m*E`jTua9e]La#_f.<$=jI=p1k8T8lb`l`H=MTY$U0E9r.KY2<PZ\@DPQf/g!e"S*_16R?_)CAa,E;:rSYVTCQEh0>Q=4K
%1==>'pW\V'(AjJrLS`&Fejp\)VbN**`bT\8+6O#*lb.JB?$Y_D?Y_Y](;::U94?h8M2=GuDu(p_o:6&d3c=Vu:-mi]fEQ[!Wr+!X
%N6^ZVW&r=aO=bUb8A#Ps@D!*a,#MSRZ*8qmeo\J$gGc_]b,/V)SOUdnZq(MfBZHb$nG&GH(jYnB1f\X6<<7r9H6\B[J$S,Wf)5N(
%CgJM3_jY]XP4+H2p3_k6lnFdt*e0f*gut&Qs+54),!8"9VQFg[;1e[cdW^KFC\dEX_?Z*IjRU/`cM/1[q-"DY;ZMks"T<Rp5@jtQ
%fo]=FeZ&U2^.7LU&rs"d:i[;+GITgf-46##<@&>EG_%:CHQ,##ZLj@)m%:d5od=<_P[],k,boQ?^-7fZ;ZGiTrZ%f0]$gK'<^5Qg
%5JbkG'$Ho/l01gL>qYeo9>B)mXE=F/C<0JN#LWD<hS-?!H*Uo?Y14'V[=QLOokVOE_/$S]C,CELb._*<-l*inX]R0L;\ZbipS[69
%]eT+-hh.=h**iE<)Y__2SIEY#=hE3K7OJ$V.R%CRYL.mVr_$@LGWjrQXo/HjqYnhDMt@huQ!_k4+2\%@WX(ef6[s"iSjuGfrfhO[
%9W5iN=hSH8L[un8D/]A\l8l1j^,ir4\sVAuV[aItWU@dle'__V[U"^6cV.sjV.=L2So3\%Hms3LZ*rht0C@Uin"mUJMCR\X4b(oR
%]XVPGEmM;:H#"V3I$^?rXiu!8WSWZA#h,T8G@Oq-C:g*`gcX:bXa%7;Ch%UiP"R."++K\o[sA>oWa&tQ8R63*F3h<5mqQ8prS$,q
%V704r:PgqH*u&bP`-LLU3IMCdjQb<>q8:T,<)?Y/8(T]a@Q&N*q5hte9=LmcQbmTSWL&!,jQ7fpKpdp8*Mt!-'cu9eEqS1.Kt5?a
%V0_:'T7'U=p'=,/VK*DupFWeY5(1]Y_4l;0]>qNAr&")$q9E)S_1/%IT.Iob]SMJDFTBkncSLDM^*8SLZ;9?Unk+5VSP!Gdk8uD*
%H!8;?#'4Qmg[V3'8u;035;a)LqX,"mD-MoEeSRuB/2ck(X-r,2qXd*5EAL/SSkQiV#%gfWgJ=1ZQcj$NWH>0rrL-jE>@(:42lhq#
%V!F0a%U$njpW`b[C:^:f?)tQda=`e:OR9a3R>(H?VPt&4Gn67RPH!p"9)Le9*sg)Uk-hF(Hqe2,GDVTklLg<=No/9pCTU1\d[H\a
%j0;k4F*Z8%<39_<B'"Ukd'N#?A`(N%Ef6cZWBr.Ue\u5Jro&l,TdDIQ<?C&gka04k@7C4'Eh;1Ip=]9>"-;SL3a4kc(KP!^/O/^b
%efRud5j,0ubLPeS4$(W*`A$.77[Rn_<G"<t_X2:Kp<;eV[]4TU'<t7!T$WJ-EDKo_k=W=QHVWYeM`YkQ;JCG$,KluT/"=*H[<1r<
%dSCr[<;+a/a$gV3X4tfWFK/[/0-8[L+dSL?8#Z+KAN6.99QiA>Tj>*Joojcg:^Z6KAeStMj`<U3*#YWqhqO!oN-DO489MO?Vr#kY
%q)Y(00,e+&-TF&WaL$T3pXgJAH5-#V<ID;9'W*c$X+Qg,Y%_OMD6X6DCfh,fBMFfIWT@T=4C-b1%t;L[]@2_3hOOR62hj#f>OgR5
%NV%Qs%??'E@:lMqRsgI?=8B/017,%a]CT(jE-40G$"G5Ka6lFnIbQ3<>?Q2!+Ns0uF'HtjUnn'`WdjU5\s#=fbNotLokiTlGKSH&
%[eb;AP4XBJfZ5o2lM5C<g#$)Kb%qjRX7$gTPn;e@m3&n.10K7?N`N)4_Q#8[[sq]PqfW_LBth@0)(u4\@bKLcLQgi%?FueGoGWl\
%kJHnc1E56**:@UQ[P[Xa4FK>M7(/Fah7hT$ZTd5r9QT0rPIklTrVPkqqW)'H\(FfR.I[?1ktRQum^4-8B>puN+n$LY^bdPJ.t84A
%Um%EhmlQ4P\T@iW57$hFQa\D""#3ES`+"&XH?pB<jm$sa\Cm:.[Q>sUJgd/_eFD!m1;.aSd_`B?:njE`pSjmU3lpa'($uSJ1,kK!
%Vl/uQ<5NXKE'G:gU5a['DUj9F7/>YG%1-EpQP%IUkro>eFebM"032*SO[nTMiYN8b[8lJ>?ZcZLj/@j)Md_fYDJ*U'Ts0[rZh.>Q
%c/W&egDBT^PF:RAQ,N:**\sbdf,Jd;lE%Xs%QF-BmIK(Ig7=*qjIOt\]<&].h+cj(CI%.XW`:Q&XkWG'g%>o2$&-c%glu4ACBc(q
%Q?pu_nmp?4_S<6OpMbj<_D45QH=`eC`'WnE\\IFjZ,m>FBP``k>W>dh>O;q+ib<AKd4nPXo%1`"bL?Z]F%C)@7Gr&kTJS;+GKP9P
%AKcY_#[=1RL==Kdn$.P(rb,@/eK><V4;gR9F]uf"dRMfCf]:&^3_!ZGEVV"N_?lnmS7X(YS)F[VI<iOk5)a\5!Rn\C%.8fD)@fL]
%+]OG1A<ljGr0<!DVqr7C!`S>.#J0U@iI,u&]P.-jg_\9tr)H\LLZIt-g;(_?iP('=nt'mpDEc%k.drW^aC&P$\8,o.n.B!aYq/Q^
%U2fk^:.)B>NK18-\t&,k0E(S"XQF>R$lG\-OeZ2$&hc+3A>DFtRH8CELS5Pn;UrB.&2%\PT;"EQLbFU>Y`9uZ\-rULqa_XRk!C-f
%F2UU^U62ksc9SEmQG,M/5X4cNKR6_i/6N3trp4Ag(o1C#j8.dG(n<[YGPWOi4POQb;RZOUAIanCpOF#6,9muIi+R/-E8N=oV3\7$
%=<`6<Z"\=7_F2>^Lfb#Qh5G!K,\ZfhfVehQS;9.CFoW#s:.A!29fRLuWOo!mYBC:fpLRg']S+Za--1LbC&I\5V=G#cFYC51roQYI
%akYLra/tQSoLXPu24rN,S/M9@Z]GM@43$GCSfPCT4N#`mnL]0NboDmXUTL]N&_qo+MUpJE?6^5A>-=A:Vq'&cEGiBMp[HQ1BsDrq
%Q/4Mc65s+3m<%o1UN]Q#C7B0DAjDX=,X^0-q6b#.[9l3HLN+nb1o3rcCHK*';=A&#EHhp>FoEu9`jk>n?[qGpIHi;u1f81*8>s$Y
%G/Q&^#DLt)q0f^A//OZ=YEP#TqTdcEQF-soNiR#%h87NTdMD7Bo6*)-'!r_IhokPOF(+!7/bcb/]?W2P\SD^`^`?*]T+[LD`Q$Ws
%P!6'H</nC;00oKX_U)LVR2.r@_bE/nR+71+P[Tnm?di\!-(juQ;eo(p6U!KbCnfrEF:UihK?-rCQeG1M[T#s8*q%X3gr?1jK@c]=
%/8)lTHU$pqD"d"^&#1R*D^Komb109$)^)Nr3G5dhB3$:%(0*]:6L8T$lK'i$;MDa;\Tf:T)E^!C_5hKF?tFdrn_.'0h<iG6@1%1!
%q7<a3!JAS;o[3Z[=Wo_.21HIkI!a"608&hh[C]B*$pEkL_$T;i"j\OmF;%kNXDQbM)u@-?_D*B]1,!t\0`2II6fq[kW6AQ0`EA00
%rt#ACXJP2tdmBV2NsNK=`^S6'r*]5Jp=.fHg5e"/-[CqY5:aF8)2]oO]Q6(C0'6)KFRXqTa[Yq@c=XKMUeYD#SHBnLlHI&C+lUu9
%%k,oXT6^T#l/2h8/51+dJh`.rr-cU<Vj:,VPEDN,,F[Z9otfU.\p.DiKGg)E<oGCe_K%ON6<X7Ne:I.sAt`N1N,J!dC!j/)FL3-q
%Yr`SOr0ig$8#E2)AZp:J/K72\Jo(@@"C7BXCb?NEilXio?/Em*3oggG!KhAG,A`n']mh5jin:ETm6N@M>[=!Q*MLb.b4.eKX.tM:
%Jd\-YFsFJ@Z(*QtSZXP.ea=IiV*2N'NSLNLVrt)^28>?#4]k(Z2I_^5H^TM;HNiUsmc>+'Z5ukO6g@$jOq[@E5IGV4el](nQ60$u
%(PV'L/AKlW&'>`E7P2>0Ijm<jn;'9[9s#:PkPGuR_lMm(X`L^>2MR1ZH?"Tu\Xha:pi(\)f%_j/k$+J!hcm5;>eQNB!-*J%]f/K?
%<;JX_3Gd!TZ_DOuo5X=)Uh_ZeHAhZ5l/HRfq(Z"HFnmODWU<),808m+hC^\Rr&UAEq&Gu#`9Le0[(6NbZTAD(bKXb[Ied^JrN+;u
%gFJfd@gm;Ne:rIgo,=G'Ep#/kDk>3h(`Y?cBuPq<Ku-MFR!n]f]=bc;%*&WR/hVI"+k(hHl9I0Z=)r0Bi%h^q$1)"XVq]VP5Z?bd
%[HB_j789)JeahIu9s,7P<cBp%aO]EF\sP#$RAM)#/SG'bO]je*C=8eEL!;9X7+mRMb/H4l:Mqh6>YMj08g*Y1[^!Eq9.^l*96+<E
%Ch3:HBBu8E.#kr<.uh\oDQ@f*R.8Imr\(1!(QX,&Z&T/IgZuJfk"VPQ%:jmK8KbJ_\\'_\Y3-kd\"6dg,dUl(2<KW\YrRW8eSB#t
%^$Cs:M91)ins+TJnZ"B[QLii.imbn<iBBGJ!]s*2jR8];'ae1EMUIK5^7:V/b8a0%$26Jd/5F/R87m9#*-YHh[5;aeZ:HmghL%X9
%S+/g'I1*JnC($ehL"q&QKOI>VDt&q8(XjinILNlEbU[Kc@t!&6og/t5WS*!VHndJ4^eZJPXhUZ4eiK0Fau!>Re-BL51,%,Tm>Q6L
%I_*(9j%]PeYM/sp).b.?6dr\am=TbKDat[AVV7sj\*:UNE3^Df&)o&UNj3-lZ2MQ+j^CBeF(n]#Z```_=*)pD@"'B]!Ge/*TmuS&
%30_E6P1pLC,/UWomXrJs@__l3Ws@D(>^<J,)=0P/<sn2(CRek4mt_0>!#'rWqq8rXgs43f,27(^dE+]uDqAV/9BkJVF/nCZTEpF5
%Ej_!8bK.ecaDI32PJ;pJk2@k!kOo_rCGNB*23*6jGFZ#q5<-;,UoaPY*.4elLs=3!i9-\@Vn`<CEZ]fRfDWe#mbH#;4.rUPmS*I-
%2>JkYVt$urR+Zd[#>[;UnNuY_n"_YjnNbBif,dk.k/nVuV7)EBVkMp8M86JZM.b<,he$V7+Z]Gi1tZPX","fVcmnM`b&$U7Zo=1/
%c-Q%)[jY2Ap\;%?o2g#>^qgDFT20O6RrN'+`=L"nVmi_j=RW'?:Btr<fBOlP-0c#3_ClcLN8%]<"p*&nad#UZDDih#DLEXrQU.Ee
%J%'A),`nH;qh.k<A4+Pi?7pNmZk=P=2*'PHbg"F+Y`?@fn2+$;b#p@KK$'M,j2p];k[($hMKPi$4?l%%o7*UDW%.78l\1atN?EPq
%7']<AEVr0[I8]L_fqENKpg`H/gjb>$:oV^b>KEC'I7)JR].528Hus=p4rKkO^FC)Jc#(-PHD&;6YHYsB/3N8n#+o*'#>6QakfW<n
%GN0d;\M5r=TY4ILQeRu;hm=n/S_rR&%pS(^f>LWVB8;]eYt<O@0As>ZOZJ#:UI?$hQbB,FWSbTZDU,qH3PMmC.VTNmce[iD_UP5W
%bBSXJ\3f,87pL7QniGf`3)/P)RHNbN<,Sa_eB`!XbS2b']#C)8FL1U3(/qq3[1tJrDe"+d"1raN,NDg/\D;BEWGatK1j9HkZgqj$
%L%G#2Df&cuXLr$NZPtT&.`J7_]CMWaE9FkXV7C#Pr[LN:X0kVh)^*0W-75j]CX<e41V*?]-SG9XrRJc51V#J+:#g-j&Pf,\Vj?``
%-^[b']K[?Z[cN+'i0DaIoQ31!cZ^/Rr^O)PFU2C=D3Z_O^"J>6gs5W\>HYDT2a0>\p';^%:ttXQ8<TH2\Ptb[qIt0?)h@[j\QQH2
%h_#U@e$\1K7SaZ3BOPEKL-s>=WJ)]A-CiuG\FPP:q/S3<SpM/MNH^O:'OjO\Ko2?gQ9LTs*=#V0?n*u0FM76G80=]i97+?<HSh0>
%jdR81k:50595^o;=A^Sd^6ZO6Drnlu-8ddahENH^Xt#i4kgpb!_&-mA=/u&"\QHo^dZiTN!]+A5+]i?RpHYJhB/;3a.gt'IGrOe/
%#eQ9dYrXE?@EGGQ4W;Y&f`KaXjJtqaa,&s/%>o.bBoTjUoPo6P6*@oG^-iuW6uusdAN)i'Ru'F<kB.Wi-%(8%^1e_<f&#PtF6/>6
%0sKKfk/QM2kCEbJa@;e05<L&/=^2,M^/0X/ma:/X(e![4Y]nqZ[&,OQl5\(@OfDICl!\]H=S?jN0PSj`GC=QqTA,CVXlph9EQ=AX
%DtPr$Lr/5U>'`,PfGH'>0Qm'@b157U#mrM;)#2[F5N?6Q\[X@bG4*d?=0qmf"L+\03aWb`ht[MHDD?+n\!IKso4L_bG7tHcbdZK/
%o$N"0ZB%e8C!<:J,E!$:kfAa*qlR>`,pNZ*gW!fP,kX;7"\[UHZb7Lh7\&ijY`8Aadi4L)c.C<\!Y=RD,+71\`'ne5Aq)"3.F2(p
%/E,AefAP9N.6RQU1uq\,@cY!J[=#G;8/JVt*^%n$39#i(V0"e).h#M"UUW,Ejj`kgBh#M=MK\F]n^bOd^e$>iBLW*OEEEB6CokFD
%8$(3&^%*m/F\9ZNK!Sfjp1RH!'>`^S(DaW>:P3<HCa4+_\,,ZP\]S.%RTO6caqq>LS..*glSpj+Vr\?r[nbZFkdA%iG'WG)Y/Bn+
%2t"O%C%#CEa.$o-nqIKF($7/:74KKoL6mt2[LXJAD0*>`00i$_pn5nEX/t3l?JR'<_FHH_1[cJG=te-,5?V\2>$ol6l@uuE\))O[
%pB8iDlX^L>Y8VifBDI/`/H7="d-SBJXA7c!>&coZMgScqb*2l!+82'bnh"eqN8`rj*J'jC'aWVIs6W$_W:cN@41<lfA>Hj9O1p]u
%\s3BYE9hjac$Q\_U%rEt'KRl=*ksY*`d]W?rjVnEd/V?"E&fo]*mdE4IGrR4MktN4Rt'q(M]W@.ShGNg<kGDGWCbjLKr"/u'8Sgg
%Ck^aq^\Ah!gP2>l!VZ7BgD\fc]=t\mWdfXcJoPHS$bG=V[MKq8::e/;A$6)qhd'VDI[6C1Smu0"n2/@/%EninbNeLr+FO5O6.-3M
%Ksno164"`HE`CI#[Uba>%Y=h4O^=&JTXP@-A=ru,gHdU!@!)UY!ehlQpjso9!go1Y!*K<.?kuDfgth^gSe;</8L4Mbj*O@+d>.e/
%4P)rfPmh%b#STc?Yg0qIT<skRh7]TdHQ\ESm/TF3@t5dRQ%X#-@gdI141+\9!6/qf,8bm8K]8j=bQo>RoNbZD81&c>$4u>G/a5"D
%Ybc,.)UqJBJ^b@D^4RO5Q6TZ&/R4'#[.2mZSt6ntVuTk9!sTbC;EVbaZeBssQq1Dh!h,HR-C(B=J4[ch\@;*<8[orJ3-Q?WkTkT&
%_r\ZX4Pl%8O,=#D!%*o$Ds=fd!j'e`'n4HP63IZ4[]=4^l:]j@5bpIo%k/7?'m96bIS1`KM7?TnER."pnT[Komh*c5&k$QOl$5f;
%KK%3XNpo.P'm'Z*j8h1.-\/a!cR!UaG/A65n\A-skp(s\Q07'l-*.3)!h-\$S?s5KQpW^o_N"_#1;Q*NSiCk:nakR-E!Re,gX>U'
%@1L2.miW$p)5r\/Hha.M9enX)iXkB#X91\f%R2*5$(P9DAd#u$8qj)$'gS.P<88M0Q:.m_&`4(l%Op!R/0bS<-4_dHk4Iagh3#Br
%-=B+MB+i!q4tmu&mKB\F0\D+K1a`?2&Rlft5_-9I':'47&jp?"A_@K5R(NDGI%+ab5j#MqZhlGgm:'!5=GY6C<obb6+[,_@0!Lt`
%Eu=EK86Q28/clO6no,f1"Y<dd2g$-40K:3:g:VPYYaO^.EWAeVKQ@kl*0H>59[!-S4TT$pE*r^4q0_hC@:bJ>a9:58n(7^NaG_F^
%&8M>Be.mT0@_8f"2Lo)&6ino1lL#GW\ZH\4=\-F35CNlnWS?*<i>tgN`F&j#L=0'%&NUgHG^9]-_>t\Y-,M/;PVTco)!%.3@)o\i
%2mk4d2(YtNnL/d9Yo2^#n.Y3FL>@]:8/jX9f[9jflar)c)`f,NN`#W7BS@4`![q84e/Q2pVf3iAhQRDqG:1X#0L[>iZN0acXTR3s
%/Rh_Q"J=6T1H?R6&10]2q1oLpo+m0W$+#8!eD3RA<CC%(aA=<j4>6u<$]g!njTpIkW.l&)Pf5`Y!g8L)VPR\8!!9TJPfn-[aL`Ka
%FB:+#7%p`JRKoW@;0`fl7&[u"%\,`A%:I%A<J<-ZTYhuUOYNtb5%97)%cU0<!+u@9l+,GE!WE+L!.f:)Y$dAB4\O+\ng4o3McYai
%%WEF0U[,67[2_UhOGX'9!O*0g*dV^gc=eESW(,bDTd>dC8A]n"NBgYO(pHLql2p[P^`_";m:>-)O*.!8#jMnT-U#R4dC)k/J?/rY
%p&]t_XlObV'#ZVd.?Wh.PpieL4TGT^fa'qR.)gKKN$;:2*lnLXZ).YQ[ZT9+A1C#;#FmQC*;2nD#706'bQ0l9$T+[H#[hg<DAP"p
%$Z1U%%0OTQLsl@+!uiL6,(P!OTRS5>@?lkkD$*JB%Wt8Nm5s)DUl`bRJRX74mXg,.D%KeN",mi9PGkAjVJKd!KIP)&0K9[4%BK):
%ZG.A]-d".SXY+2FIN4a1"5O/8>T+6EK?H]lVmV.7(''4(%+oY.ld4IrBlZ10Qcp;"JJL\m_;Tridc:U?:nfq]-h1</0b'n["9(G+
%"b`RO7u?KgOb0DpCBpg"dc>Lr^7H<(cY"(%?>^OOJjrReekS[.(8)KUm(nhf\+Cuk!]UX6]E#&dZlDs:X2(A;NT!-TPpE@6<'!2R
%.)?b.OkO%FA[U#A;"(tWJ5p!m?nUZ?A8O'F<sE8K#=R<TG7YgH#5a_(9u1eS9iKYVQst(^Qlj`q=MSNFhq.M_Jrum<!KW%[!2C1]
%7Cn+o?j?9]@=tioHYZLiLfUL;lfl.!I+!JQ8#0Lu(XEF*"BL3o&'`4RVY%[SlNURIn-cmhh@.:Io*ub)AWR:3W>6$F<bBrk<Y1Ih
%'kWk4oLUG5b]Q`G&55Vh/H?PPTI3XiJ7-+^FAq,UJGC64\;#RpTt:Dolk0L9RfNrm2Jd.*)Wp9e,a+)M%@3>E$&R(G?pL+%eMn3*
%JJ$*NktNj.$^t<%1hJUZJ5ihbWM+ck8__]J?hXcY1#`L51E_&L]8BPh^m$-eDqEPB.[C2;!c(D^]m[p@L-sf!_#dD.`'saD!b"VW
%Zp7H7Y]_?I)))1,AsYE<.bZnkURPE#2=(c'U"<hKn]J)O:q@rY%<Gc],7'6J'm9hq+BTZfJST=*n?G+cP9c\q`HgF(TThcck*R0'
%l/[sJiJ"%J6P*T-Aq*8h+]LL"Y_FU]^`3f@5`?<[+%I66Td;rH00DTU!F:Gr@4DB.-6qe2(V,17/3uF0H,haaB[7_\De<m$)\k!P
%mF>k0=GjMo$J4;F=uZ@2PS[j@EbDb^/_q:&Aogm)W<m4QX>Z,qSJ^7WC8<c@#j_d)FY$0]j?'0*"hE3uL'cZRoWANQ(UiK=m($<Q
%gE'8sqW]>E4S2D@*9=Doc@@..#44S8Bi@='f'u&#R,1`H)?]*])\)cf/3[_s`\)C4cp8.ol)WJ?o)g>]!53ZkFs9\5#rFE^63/VH
%Qt_^kJVKT<MU*%]G%b8d?j8=7%sXAR&c<8ELlFLR"F:%pPX"LEjoKXli.@Y<cJ<=u8@1G^8T0+[X&1sCj/uu@Jaj--7C9Bagc$p[
%E%#fR0oeVE1-/R$:.!CWF`24lI*:-TJKSphY`-AlirrXhYZ2+T+G\B2e(ITq2nE<RmRWHDLD-B]VpI&mmsP#Nb@m>;O%+ep4JOq_
%7]]-T-oAb29`WDHd,@<YO7<d5"lupJ@$4`sUWFG%5`lHX.uP+;7!27;JO(AD2BRYa4H^R!EC(J1]DH7Ne(2o],V=Y?%a.*PTWCE4
%"FRa<00UL#JOkuu,(tiXAIu][!u#h\2XE%`E"Fp-#"EJR_gDOf2Di)J`HWBdGQdBBT]&?))<3c0A28mQkU6G,!_7/KTt[R3qImJR
%%,;;!_`[KD&128M*V?o1%=TuQRZB]'4;_uZXTpP;BE?=Cq_2EF!j>OHGCU>uMIPen_a#?]4?a&n*?>c2!#(NS.3Ab74>6%BE"ir#
%N_OO%K6A<T2$)jmgth)=+i,QF`n`clr48lr>3#a:l,@8BO7o3AmV(aGE:kXaVHHnB$Sm`.b.A"mdl-F>BVD4[IIN@&=f27@"/E2N
%Kr>Z2;8/d%5_W*30$rAu:r#OON+4r#hKf/l9o]8`!tD4U1,T@oki7$.//[F>#t*(U1]D$;Aga!LJW8%ZC?ac)D2'Kuc2qlk&s&hO
%o_+!!M^$fYBUJiINK#'I,$Y9A1e9U?Sf1;,5^0Y&K/gH=`%W:L^ucAX*^p)^$gGUmjk/!j)i^OW&-;54)#X]G+kmSKK`GPW(hC1c
%__B30>Cc.MCLSE:%U8.^1*%K2Z/ELL41n8'IMslqeIb"I9+jbu[XHu]-OkkcLE]>-'t9GbY[IZ'8>4W<euR%I'q;i:km#6`G.J5q
%1_i=ZThKB^_[?j31UA)/V@\]&(P^U(ZB&DX)MG>^^dsO2/hE-DULAb&6\8IYfTXfuL[u#X$=.)iNd2)p&m<Ui@Y;MAncWZ+BY<)5
%^,W\QprF.r!chlu+Uk_)_ZUo65,JOklp3>PMDS]KZ",']"X/hVIK0H^VBSBJpAiYuJHf%`&qb@YUXohChI]l_GnOq3:\u'GS7'0)
%I7,,H#@5Vd&B22oLD8or(_e0W5s$hU&OR'l&8I(WO[*nbjcSiJ>QoDR#QlZ^(acWJ!F%VlVs6%eVmn.*KF"M"#W7Nb&n%NY0n-!q
%Aj8e[pT5AahkA>g0O89?_+#oico@gT#f)*Fc.$Ea0X[Y.lOqc&*8iPB#/pBKW['VDN#jD]C]pu'Sd9mu`WC&C/$^f>-;=/am;R_m
%k>5Op`aV.'d7loAF"pW[3O$:Xd<6=I;maGm"3oU?TItM["@eeL0G;qB_E\3SUda,r_N6sk2fL%s/4%'S4b-t>64YIG3c=Rs"^,aD
%UPpDk`b_*?#PH3j&EG^jJ7/JtFPq[H/i^FJ?m\CJn:D5<l)$X#5/JRt'O1)116[(KoU%M@1<8%WAG\#&q\Vg;*bo)TOUc,'8#ObT
%YfI1U6Ei0'%P[6;GsVqL"r+?I/(S:S!']pY=0EX[aqgGh/5e>l,4?'u;,O%/820Pe1m88J#L3HUR[2<PSIB#N.4C+.(@i/N.3p85
%=LKEoko^CdBe3itT=\Tlc.7gSI-`T3[iN^.&qpL5pGidSH`$kF/MO'(cOrSo,d.r;[$YOR),b;%Bs;NkKOoc*ORHR,!iq"14o%Cm
%.-shjp"13K0T'%c.8+r@fgs+2r,ePa%F";fK7aI)$Wpg:dbVb7JhURh]b(JBRmDm,Jf$($l%XO$@;eaq1";Hu[hPDf0NOeOo;*3D
%2S.&.]2AjTQ6^=&G+nR#Jh6J&"PA7Oa5q@MCbrV[rfUfj69C*5P*>)Xd)b$0(bhQ+0T[o9fKHHuliW)^F47p9hP,\+*\n:#?Pl9'
%218nJQh0bbTpLqn.@L!&\-E@HCk6kg5\Y?q,Z!u1(eXl&85j"^_RE3;$D&@K,^l=oGZ((!_`X%32]g!=!T[Y<fk3JKic-pY.")l9
%Qu32^ld0$$!r`Q#95dXW8A2BONZhp+&[\aigrA(L=C;W`eoj,O!U(k;.j:8OT5QL,qB.'$PVRPVfP]?p&,@#i$3mbjN$-[R#SX?a
%K"s1U;4Y8o+LS$Q0JBXf;cta+!W[jO0Eg`X(Kmtf)lbDT:nUpf07[!EO\W,r.0CW140f#`DV=QIc$__g_?:*u",uIh\KT2+/.Ei-
%40-!jln0G`.FXO;9S0enj;@%N0tJ"kG,-&XCR>_=k(bYJO2/X#b(q+#J;Tg#NmL)oUkP^Tb4%"eRsF<fR<j%QZ%N9##4^,AMIE*Q
%f.JaTC3k4n2\Za%X&pcnN-t6hcI'mYF`5UY>6pOG&UQ,N3l4/A)bGpQ3Pbc2,d&.YF)#7F)6dYYUN:-#+^6T?@-2RPKJU:^=",B;
%0Wg-bf/M\7Yc)`#12XlcOt>$eGbKZZKs"Yl#,8%U"!L:)cGDNJ$m)9J[:'o^T!"NDqA_ZR0!-*SH-06][VNJ7i]Jg7I%OGr1>:,0
%MUN2s,2NH$Sgbkg0Z2fd8Z%lZYrY2iHT5CW+s!k`RrH6ib1P>(SGCqm0QP\ertaO['/X;\1+%4b(`XV-JB:,#Qspu,.L2GOSm_2`
%)&gT#]5h#uTl-Uq'oTqOg1Fbj/L_o_?t#?8_5=OT8DR*h.L=LEK?rOk^Ol$RVQUW8?DZs!HGN1ZUp$8n,"J"TV6SIhi@l%!L%+_l
%W*4sa?r]f.'1*5o;`:7UaMB^FNK1Gjf`TG"&]j[*r>,0-6=jZ<e'XaI-rh/Y#!5)^:B<NP"I%Qg!>t&LK_a?A`cdB.0/bM[cN8IG
%h*lf\YLCma5Zj>K6Hkk>0l,(JnLS@;i509e$S;lYL+j3*4@W7uJm]-4qLGe8"@/>3OljHi"Nn`CO)Ce1m7AK9,aL/t?.3#&N]nNl
%QOupfTdqRg%(dJ8,>1R'"G5JeoeH/+0[A)[9UT?=?q=^lmTY(OQitdLI62Bc"EoqT9<,NY]fffY#4)]QP`rNYo)aXa@I%l`NTmT^
%1FP]l&/<bh],!YAe/Ld:b02&Pp4pIM'YI(HFRM%I[?>U0%`OIpSRB0K@,R3Qc*"m#"DhI$KR"`bO2+H`^bZ8d8D6,?(","q99((1
%CsMVsT:.f6#HL+TT%i5!FHA!SN=R_f1e\6<b,3sb&mBlIJ-,BL$CK/e.3jHRCgbUk_uKdYYc*e5UErU8L5m2C/AVIE5/9r-<,W$b
%+C-!u":=ON]tr[Z?pT?iK!DkI0_-1ijpMXiFB/^ARSOO<=JK%iWBh5P,+'W&omPE/VDmF<2[+D%QO?uu;_Y"^o6ScMV#"%41H4#P
%#)n*migDK#8^cJ3r&g+RO/eK[/=&7$Z@BY^<gJb:C9Se3_koKM/-E%^,`i:?:>"<$-Ep4`.Ki\9e5:)AOpZ._&h@c#ZZLBmS%(@Z
%_@-d#!=:90#oRo`$9AXioK8-S#,NaM9sDDD@D8_h[(0q%G=4W``1e'eBLa_3C.'et_C97SqFQ`hGHgiFmp,.jP/O.P1HN=Y/aKr\
%`VU&OZc3:%Q8G0OlU`XZ&nE!o9QA<-i%8bWPQcYe1.)=`l_\&)p`[l/0YL!d1Ylon3[34SRV%5Xj$bX7&dZtV6nA=9_qlZ/2,HY>
%?pIUDbgEMm@A^@Y*BfDNP=G0uB+a@`BQ<KL'pPgZ/sT1X92%Hp'\l,2gEB[66q)/"_iOo:fQdN8pnW)ch;uKf+%sa]h-G8shBYU-
%&Z.O,K#nPX(o(2q-4Hr+5Rt;<TZ*$Y$rV;k`D6oK!n//_,G\YY-2?!:"(]Ee==M?%9TX%@!&3"Y3p+Mo4rqGQlatqOEB"/1i7M`\
%#Ife$?!UGT.J'[*4d*sm4]BCY+JFVA0H"c?HB-@'^g&PE,l"MP[t4,U)!7ojWrjVLbjF&siI"iGr"3%u1`)G#&PRro&Va=7_`V-Z
%[-&>6-#BYfU][nW\2d$DjH`5X+sun<$od/2Un;:_,7"Jqc!`:RkU"f.0tCI9E#f-Sce%DI>8cH*$Prli#mYFp,[:M@dX!+]\028R
%E_,+tC/]oOZ!LbiSA4aM/KpM+@Rjj%KD7sj(knd(W/LI1;h5JUPU"#e@=f\jjcY9p)#bWb`Y^!03/M3s3^#c:elA(C`dj8-d0ThI
%BS^T[)WL"M(kr6@8=-.l_Ao,%GH">h5eItb3LH?HHODT_&aVPV2l2$+Au\^X0M#'n;,Z8t$$umm<u,3"J[o>'E,ktf>h"cfT.9(N
%ei&nb#7(g\KL)gr(^^>j1o2lf_as&8bVb_6&A_\GS,/;QB'Wo>KW0KL=K8#@.R9B%""X`O'G1CP$*a&iJWm-I!mB))1=/W"@Dal'
%&]>tfG]eOq(d(`j$RM$56:9EQhub[V1Z9';-)/m,Ij-4@=G=uBFO@!.j6J(Ye<Lu=.K#ic-+lgNdT<m'9g(,#!1<)^qY#g)\kal6
%pPfW8@$^rk#e!8/W+^/Z0TVu;JYc"DP\5q>]_rH+dMcS$!r:($!\J!(AQZa2'e=>fA%j,=-&VrCLhh_O:W&D*oR[.qmg(`6/A0;=
%.8tZU"XM^ig5g0,F;/$5;!;$9)FfEmVRu/K`CgugE.ge]AI"g!^,G&?1.:#\oJVN#RR'*!oIX@>`FXB%"8>B2GEh9Eh0ik7W>sNk
%4g7V&,)=VRk*_r#TrD%SWD$-o63p'^QV\8f>Kr%gOTE@aD/=+&LZ9!n$+d;$EDoZt&Z)BKTILrk1<ETh2'BUcZ1A+U:'r]KX9WjP
%e;pbDfc7rH.hb2Bg`8hmA*[]HXW,*(7p#E</F-0u]?7o?1HU,@b>kEk>:GW'*7Pc?)2!0,K]D9`=pj:/4phRQpLB1C28l"JO+m<L
%8@APXUCIPbkobY*J^hZ[dNM'E;m91T9^i'l*8BTO3XdhQ*T',do^tVF.<SQZQVQQ=W"?rT;1pAS3F3sbbB+b&RL#)]#1CG%R-0mF
%4-%UL+B[iR9Jdi6Ds8c8[nXn=Ppfm=82dL9Mg(>o0%Mm,RSR(+"JHGTdR2>4TNEmM*)[ZBMWG%a%VW*qP.hV@+]HNN6]ULuN4olU
%HPDptr.,GCY%Rj?a.X)=S@PF5Z)"!FBON`Z.igd.X:4NV[rf\\nutU<VV]1WCimp\kQd<q9KuX\)$F9u?.jm'9Q!`P#@Tg.9NWW6
%"/6>;/*YIZim&BX-$p0'AuU;"D`qk8#)e0i'gd*k/[!F96>&G=?,RF&\m<-R2]0Q6*S8iN!"e;&AA;T&>&$q[0QSUn>so:@kS>&P
%Cfbh1G?knpYN%4`gu#US;-<I'$g^<dr96*geM?uKPlbatUb4D:>XX=O8t57@GUT1Td:#,9]hZ5+&obk-$L9hY=eQ+qb?J42W0>o#
%?j`r2kJ1WL0jJT$>U.=4ZZI]C5^NZCS:7go3G"U.56k2,^fN,(!*7n)V%ArPNk%[AmLiW\ZI(S@IBL,*K=;6`l3uNoZ#s?AkBT\;
%W"]T_5`67$2EKr[(=t5FQA#[[U>o-K1.G)F]#l?%mAo7f,Y-9_.88*VicH_bo#NK)90\!qNn&f?=%NEJ!(jgM7lP(bgtL8B'$nqD
%;5A>iD`4:PcBiNu["/d,R!<(?N3uEH.5o(lco!qs7I*eo]##1\\Guilq&YZ]I$o2p_8%YBV0M0:Z.#X0-7OVNPRG!I`tk20UtWM4
%Q)RIqF]2P%3@]&o.<60e"*V12hEf^^9?e^#9Ut<STq.4",Ak!.ekMF3Mj$;^fEMFR*aKI&hcB#Xb/1P[bqV[2M.^\T`_'<*#@'EC
%iF%gU+7KWD&d^hMpV`#X1'5=;r>XX0p2/M7??ul*d-4J_XVM+!g?VoGP1]p(7%d<ibseU6^0okiOeTn].[C:;Ce6'K1d"<C@DjIr
%N0-n=C`Lt;,j>ULE%-e6o:6HrGoZgf?&U!=4'S59`fRr2E>lLH`[Q,5!+WJHfuR`uJFOqL*g*BiaI9r0,4?KhQ7bP`"`.QLQS!-J
%YA_i(<oXSJ]hN$9!Xn8YVAAP=08q@2KG#e1p!rHV%7d0r"WH_>,tkiJios\(as@Dq/N;!0LN)o\$$%kZQ>i7Tj!OoI"s"sqh@1mI
%MdE8nQpZ+,pE7R!2W.<`9)Cn,f591N?T)QK.Nh:n]V1Rp5O^uohu@[M'cXC?$M6iAN+kA.@BCRYFXpq\,9'b-1$XCI_aAK.ctXm=
%8r%kC[YJ/$5%*r;*gL$b9Z:8<8,'Lg=TPT(j3TWi'9\;]$m%LM5B4e'e=96B&jb5)ZZ0]$,91X_.777H/i>nm`Vp$Me"S+NM`E]8
%V+^8(+A<Vg@%F3j`=Krgp"`VoTR\"p(P@S,I/-MW_R)UF+mF5tk6U4'^L\@IEQRduKM<7O.JcTEHZ;?SAbZsX@e#2on=Yd$9e6Ws
%@7$,_A7u`<]Ysl!EBEM=D3>om,BAG+_O(lQQOX`BcuqBb6t(Jd+"ghR`Lo[FPFCp9fh=+Q3s[HNa2jZl/\Ye5@]V1hO2TS21Q8_]
%9H.pr('e]]1l;D]>"#O8%(V`jTpe6-r!%S\4st"4U4LQt;b+U8JG(-TaI(`aN!p;#Rf!*JC&$ESddF34iao]VL_X;E-&.Gf7I`mZ
%g-d+d95mukJib5Kkb)7f.$TD2$WuiDQZd2Rn^&MV5VSOdPJN0f5VdSho\D7Q\)e$PUXGJqn=#P/Efh&u,jS\!+;isO?tTIt.?#KG
%OV0RfIB;18(0@ZcI<AX1rFB:"Rj3)aVFC].Je05abE@[!%L3D`D4q-)bOt@f$5SBP\I;3c-Jh0E1fud=!F.:Gb6"h['km-,f.QPV
%TOWabEk,JLhlrcXJgV:3J)HemKCDTW(7E%f^:d1KF,7ppK'=bN-@STLXWAfqFQ1N`bK:#_-,Kek3=CJc%+re`(13FUR"p\b-UJL_
%SIjH5k6`Un,;$V6Bli9"-[YK3bjAZXp2GnK2T2RJHMYN<-UFo>""<)X+I\gd)KM65"si'/EL"sT$cS]#edr1f@9>nBa($Ricj([b
%HUGrnJhN\_EB2;S'^g:;EPstp\Y2>+OM^XTjm#JgQEhoo)BcU>aQ`$E/4g$`hb[_hSPuK^NWEM^!>aVGY`2(MA4J'_-597\nL=s`
%Yl<$-,_L`\-9C8sPH:%4_ejMg:GFD.dgSTRdc@$:XINmCa,3#k;T0XA^m>R638/WIR"KuK45ScK7XN5,k7J!u;MX>-2S@U:mhm7l
%V#Udis1tqhJQP?M&;;4uTSq/2"ssLF,s>X<>80D&<0D/lH;N%L;7,"XNd2(%#L=iiU?e!o-$2=C\_<%9[l=)63k^Icck@M"&i_\!
%oqbW!M]#EqY/bXM^(ZK&INSbt;L"8F`=uYqn0pWc1!F*`jjU&0;uDC#M6nF5neFl@;j4XbJbUkJda>rkT$AB[->/);LK9d"ZTTe+
%=(ko%3ieu[HF<q#=?Qs;C.uIXV#,o/`f$XU6$tSBrI-4PjD%r24_Ci8g#hQ)$:hhAN@>C[YB5jj@HqT`IK_o7j%Fg&J7@?ah*p;g
%)T8>_7nj`UkeL#bKqVr6d@EXs)+D*5<`;!?W<%]s2a,,UOk=IaiAE$`oL.Hb[5@QG\io;HC^UlPTP%9o-_&)\j3e;UB[J?Y.$B0!
%qT]H!-F3]mlVOH`=`Tc.L;=lOO01ldJJAGhj,);U-A(UCAN#(t<i*NCC:T!'N:JtK+i6l#T'l#N-8XX1;m2!6cNK&*Ds>paX?+mr
%mb'.EG]o!P<?UD+KV_>'KsJ',<Y!qa5hABh"=s]&(\"ENS+AQQR\dlDoFlm3nO*_Jj"WM7GBZ"eb9r&;>cbOgcMS>LE>8nq:dHTE
%=OFpnk]N;N3Uji8)VUrO"k*Ip.l8LX*O#p,`A^9]>ofjTAFsiP#!E-Y*,bkf7P[jn!F6NB>=P(oiE^Q<R%Ut_>@>g6[YYfn\LcFO
%j<387U/WL7j5QgcVR2]<HaIo4hrbqD(j4mYW0i]kM,hoEEK'i<^0Du2-;d1%%^Doad'mgH#9B-]&?%\#PW0p'O-hk;"ORR-.>U6f
%UR)7FI4M6eQ5J>c6PT2NkN9'>6[,/m"i@R>l3U]m+Girm8WoriZr1>VHfgoaj6M'eG_<lr`3YA50S0hQjna-WLFi$@%GK.^m,Tob
%\lcjOFYJEHbk!sh<XY>31;"5f@6'NinH43W7.D9q1a.RVDj\&Wdn7RcFT!/1"2:"T>+=fm5RG8IV7toe0/0n:Gf(,ADBi[3//OX"
%5>=p,i&)a?',a!:4lGX"JhnVgVA;Y2Jp1[DZkGguoZio0I$6)OD16>Zm_JA1/q!]L20\n5/F-1b1aQG(VsAhq%!L&<HqD]F?n`>@
%lPqWK_#cLs:gB^Y@35"0)!9P<%ZLYiU&elaUlIoh=T!%SH\HK#'JAtZ9C$f\#QnQL6smabQq"%"o)?DdcDFU-/A9@#LADF)dNBE,
%m-g"/I?;8fYQkrl9Jfi$ZGE@qh8723hRU?Ec`LERM(fbb\nY<daiqh^*IGQi>0fMI]t/aGGqOV#'*s2%&%rC*daZgGP:V05:aI`4
%j`6,ZbC-lSQhYp+qFkDM:os8s(q*Am).-n+$u\@CY"G[`ST?R[HL.g?)@p..c*]W"gXr!eXJirZ?+2o6jF6;`::'@r;?mRcCt2M"
%J.J>pI,0Tpn-#50._s\!h:0BG<M&UfWJd*VC1YeUXZA26b@qF.+E+7TV4AM=R_L0@`"R!bL>,>B'+N25*=bYYp[Dq!UTPqtR.a('
%:2@`$]Tjt6/TinIZ">*WC,B[$FNO-5/?C:Qlu@G$;\H,tjHP.\_]j5SF>Vc/UH&1O(k-gTOKW;]Gu^r.HQOY!!J*cn!#Nd3i5'of
%AU_MP:bjAEqJQ>Gp2!+"*&SG%en*)rh*dW^Jm"s6LU3n[f$5HfBcQFq#map1Gc[j?"q-1e)QZ115\;FnGc32M_#P?Ab`E^+2[ZY(
%58_p5I)KI#l]#jtjFs<=@;+b&`DS4FG*@gkrj1N!SMq!!IT(WT!BW\UQc8A(Qu2,,%[K+P%W6"`UDhmCOb*d/=p429f)qPYL-Rnl
%Y,XN9JYA"2'*gFL6YO%Q<!Wu\!.,VJDqVsE^*CQW62@AK"/3G53Q647"WeWbr,0J,]iQnACQo\X:VMEW_pAGd.fdf&+$P(q+ja*.
%PW9c^\a<0L1s^2&`oT8rFma[Oe):?ET:@JH;b<Ts>[I=VJ]i%hmh:f.-/EWXFCEFfmY;LlK;-9(PC3;bA&V3Fg9mNqeC!6k>-<>[
%;@Qr"&3FsjJ1#O*AJ7DsaX\+MXML_<9!FK+5tB_?hh#sB[pgk+"Zd]BFN\VhZE>5Q3!%'LOe<.&i.XpsTBJ_rL5?Ls2l@`*NL-KJ
%#5TFN8!s"^+?joR%&(S"l6bl2S4:67"^JII;`B]B':u0gL(FP"Sua[Q^nf8r-!]h+._8Nj-&#iulTGq[?V:MT*Qif!9A$0bS_pkH
%9"\2;n3g#D=BWqA3GSVh_+N$<3bc.EBrUA/2PCkrNiIQsfCp@Ai5,-"eF,^[4J9VZ+%#(AZeGVcWY7I?WB/uoFaDsG_qQFYiNoR'
%MN6P(HNKNFpN!"0p?1r)7L5Za;`9,i$eSB(;RL8iKL.e8OH>9`CiEc932-BS;SZ49QRPMA1bPMK@2=(UDjc0Wmp=JRh"[dY$[NW$
%&_g)BPt6]VE.K^qR\-^ej)158k7s#jVPe2^@HA<B(u)*iCY\9rnU%KgL">@j(]1TqX[4&27akr?(6O\Xp@!,X/rFE[jcMd66]EFa
%.P?$U0Y>#N(n9&O1HLu8iPTU>.[KDoG$**=Hh9-Hn[Hl)YgM?E&E"fOH1T#DNCRk"$^UImW]`jNT*_.'"kPbq2Um7>&tXcibqsB_
%8tCgPkFMgP@bi*i0)+S*m4M@"LGuSuHOG4fG2g@iSIGt08+O&HZ+;*`MHE,SMoMt^VW/<4D&/<@%iru6*"OcQT1Ss=m?Ok>dIk2\
%D!03p^roVb7OF_nW%0I?)9piiVrC*01l4V8mO<q.49klfL,<e6On"(gL.4t,qo./(B[,=G@<0\;P$I@U3GT33N8K_MBTB&ta;q9s
%%F>jN3JuX+RC$;JK-eQ\%gnsHXMbIeO<b.7Vl,9Sq<7:9<c=i/*d&dFq/Ef\DIu`\g>&jh(6%*`U>:8Hk(76@GInp*J_2biHH`H?
%WYbZ/1!lK4@aY!d1<<i\/E14s2\IF^8sqceqi3KCO#]!Yd1F#EB>/8B-A?sZ2MDG%-!eFtV%aEP_;7,*YEY]):Dt"AX;Ied"^8*u
%Bg^%l<%@"%i^87.W/6<,-(_$Qf/+"P"^=cpZZ;g,h'@:TLa5:lUPZlW;8Hn3r>fGL15fjmaj5^$M52'BNY1sb8_=a='X.u]KFY(%
%ogi,gGP,J-F\k"I)aYr:!slRPB_QXRl+8LklJ.R+k^nP/ftO5^lH1rAC*J9OqYDSs7nh]uU32@2`)M!(gg/bg$F5_if%2.gF`pdT
%LpVX&VfB956_TB&bnG41I)KK"V`tJ%`sa?i21;<&8r1sE1M,'O?Nhrs*.'8Bgl5F2(erahcf*>*(QuPTrPM85%7ALU9F<KC\uhkM
%Kk]d@5Q[dM'M8Xrhm%VV+&L2QBlJ=K?[Q-SdHA-Bc,&"1T'`R-P<"*]5*pE`_H@_5)km(nZ&B4g]@^Si=BU.D#R*hWKn)_\)[D0%
%9lK-NKlVauXRjtRJE>'Y3LULG/taoqYnOBfFY)DMZCR\_d`Yi@`I9,S(Y9Rheaqqu`0H6`[5<W&,])(0<\TRkHRg,=8jQ4ZR.iT\
%3u4DIg.\mc#18LVYO?Tb?`A#?GCTM-DuLN@Z.B?US"tYfs8V*i^KFqCi\/(ErSKbh#d8H',o.HaJ`7C[CE#2qrkO!]5-HUKrBnDb
%OumkYD8&e4&AHaAbq>1AcQ9NI*'<;s%,L9=@U;ij@g_FJLlhQk&[KAWMndF*,<(E&QJfSX>PO#p.a;l[K3''JoJ,$2`[dqu\BF4p
%^!6borgBE\6I<VB:B\B$&G5*PcoVb(Dg`trPn<T=IL(6W"MJq!JmJsRYC%\\9b>rZ3hl4lHcr?<%\dPY;>5<cA4>S<D#+2YWt1;n
%"A"9MJUq>V5dGf&"3FSoA6;HVVBSRaZ;i,7ZMadFg*\!\[&;ZMRfLRU"!j?HOK8XW#&M-Y,jPJo_('+@faa,1*!=<eQSX^3J;*f`
%!;XF]W-3CgP-njdg86k8@mZ%bZh>N\>+f9,iA*tm!r]0U9SH:,NL(5Z*!u`Tdssi.LU%h:?\6's%g$N1#d!\N!in2ndX2rMF]ZoA
%(/tZ*gRFtU%@gDgS7f>MQISu@iL_A-#qD3g156RpLYpn:=EFX25U1R2ZlmS"U]]QPF@!q1Z-&4B43UW>\"hME@pBF`C^cA)JKlRQ
%hX=p#^NjNl?OWCBa-X94LgUpnqg;@Zofl\mn7%NDl?,8,oO3,C[HU;5r+/OOs4"ZI7.iNeW+:<&f2fZ[O:;ZCa&oSlY*Fl'?sVTD
%?ZF8-'ni!A!l:*P--t:H^3^ur^l(oIW4FO"*8>8?/"e1?bK_VW7OhnhVflK-BUuY'eX[qa1^s^9Pg\?0I7K?S<)@5)!&a.^o,21^
%7mi;+i\+q9EP$UeUi$VePb`G&H:P;-Vsa!DXi[3&e[fN*T]F-mKitgp!^!qmj'9`RPsnXV4^`HI=VVR13k$'+AJ!2/2H"ZZP\N]`
%pt#k%86A3+j;+$RhiVfVB[AL7i7Yo0#pkQA8)<*_oH&?_O&Ar"mm\=rKM0Q!`e#H(T5iqr:(OfdF81V5%?4(_DLU]@qB6k05tbf,
%FV3S^jtLss@7K%iqUh\Ce2W+Jg+@KO6^9Ym!k.PC/C_(G\ke`N&sM\u4O*?mPDfk-fM,6QhL4YYL@C]G>`pZMFKMT^bZVlsTe]Mn
%_KV/m)@lk7VQhB7#'t+U-$OXM<C7<*IIo"c]7qVE5hf]BQ(HL>5AsnW7U_#fT9!3Lf;[dJm8_k$EI&*j$!+Mc^mI3/7ZdmbAf=:=
%kFH2tAm0PKBfjNqh#*l]cMK<ET_a,c9^]el>80)tCOW#@#VrMGaL(UXRF[!a46Jo,N?H^F25NT@%l+RsmPck;c(I5ljJ./aTW"W(
%"(?_BAO@HC&(`4q<Zp%`DDk-Zd60"0d8Ga;A0;QfiAs7Q+n#fdTI_la=eLQTdL)d.^lD`E>,[-"(ViG4T$QA4[rg3ANPAO'RQ2HB
%2QGX^qc-0$/2':(<%f4Q^s7+m&+7.,`jfu@ICQ$%%(Mt6nZ%g/bg@9C3Af@/K^_DJpn8(I)-tMY.:hqRn#Qj$0!374&E4jNnP<1t
%SttSAX+LE9jlU2o/XW-9X_h_MN)lKoB]U9:T0gh$/8R4["Jf8e6&M:LI/103`V0q2(WK=6*7:$r7`L.$'Ni+AP?/hG`HlJ;mD2X"
%G90I"r<(T.$^ReQG0[AA]OUCWRYC)eLJf6&!qGY^I-PkOBLktu7`$1Ql802aF<<*/#L9"&o(DrfO"XinPVI6?DgD[A(>Orm4r(KU
%r"<(<R`&0h%GN?ZMYuIu4X]j@f8<!VKNg[Q..Ae4_cd$b7#["TY1umF+KP`?%^?rEoro3X=:8e-[<U-;>%eF^TmpZ+0Fu+9EgsR/
%It5hhQoZRIq<,`L8sgIf:XZ.@`J)^>?G))uV3FaH2)=mI6I,/(j]o'Pmo[Z!:UY*j+85edht$Ij`'YUE#//(NOS?d_r[=Udq<T9F
%O"^%kI6?R:%rJg4j<;R6D*RUhj<7$]=AmmB*RE*kEu3ll)`Jap+]1:JI'ti+2gr>BZCRE^LT?,+r649m1\]4Ek4/57gZ)q<O.Wu$
%cO??#MZ*7TT=Iuq]&oOV`>/d80]2CT6M%(VQM%T7&l3,-+<rYZf^.B!5kW/T2r0ts44[2Va78pFbN!eOp,e<5p`8=3<sHtJjEE]m
%5m6>fI`Df1,Fd0LnN42S*Qp,6N_R2_oR,^<6kSarms:!6McR3qO5(1K^u6Z3k[&Pg8BJSlj\cC%csUjFi9I8%^D/0LoXbq6IWQZG
%#D.X^iN`1"m`k;<JNWqRkg8G5S4YH0kl0@Ia[6Z7%n4F5MF:lL74MtCGsSX2Ws"/-h4bDT*?ht3177$p>5l&]onXgjYZnf>b"-?b
%]Rih-ou?57ZJ@@S+GW1JgF8BRA?s"i.'Ok/T[cN(VWK=b_UqV3G`$HCJB7n^@9T<uRgN7l3d4E-J4k?hC5KtKIgTHNn1;qOF7eZc
%&[bW64^Mnh=&R+/f&7ju%2bQ^?]'r3)Z'Gt(CD\kD9rf;qB)lkm[FO[EqP>FQ't^mWE/r+hMp<8[R3loDhWGq^8>G"H?+`"i-%7L
%0tkknQU,c'\+G'4TMF4t#!<@fl;8mS+"ilaM?;sd:-s4`;[Jo*T,Un$h5LY8+K4b#Bj#o&BkE7m<9KiK3uDP,Z)EBTILOmPN.k3h
%e#j7\iNZ1SaWWR>Fqe`(]u!kkYJ-@bihn@m_b4odMVYQZ)KdF4f;QRZiEa\1..;)Qj=B>9['S#U!X!dOHiNs4r3S\WpF<\]f<:sV
%Oe82\J(lg`G2T3[J&Vod!shbi++2/$+10C-(#G;4.j.i,CQJ-I[Dn-ek33?&-Tih@T-6+1[]V:^U,p>SF=ak/mP(m8+b)c0*b[4K
%?fn"RR)#i'Jdg?3&&)jJ4Yb(DM%X'UZBI]dO)2s.BUS%goimr&XZ\paTp")FS_dJ3QuDc#YcQm6pVt<1Q?>Anen$B_&Zfa-It,#?
%rgq&:RG5-MWnqIgm,=ZO>"-2Z`Vf_1^2@L]jOWorq69.V^<Q[P]L97KAOXEd+?fk"U[1HI\&g9(K^*=[E+]9Ajg5#)-.s'=ZWkN$
%%l4dYkX:"rhO:I!-HV!=H3C`/[uK%7l'A)2g-FtDAouSOd(VRnXJV[^>BD\m5j7:`\21O**[d%3?2:KDmj[ZkflW,IpQ4tHH.%g1
%!Zoa>U9M(3AZI[hl3^`hhg%Fk5eN+U3]_4U$NP[a?8_a;K2/o!%`'TZ7[`Smp=RVQ_,8@eJTjYm78ras:/qaG]&ct$XkHk7>#TSk
%@`W"p+l.WpGc9_^*.T@j_noF6Z0>la@\WCJVt<ut4/-q=U;LlI.m%r9,XMpUBb:NnS!q&f1/Ja#2[UE:bqZ#BBgr4uhc)1g=93q=
%PXX[YF&].*_osXL;5IPLOBu&qOQ+t'U#Fg-PkR50&3L9r<K\ea)nIgKFk@I2d*foo!0b*BbEE7K%,"(?mKqpU<8eKQW'AD8j"pT%
%[]QVI*m65IAWKNq'pni3=3&'7&g"smh"'&4As@$>!XMWlgsosDS7&<\./I#uU8]0X@1h=gB;tMP<;!;H8f?A<Yn_laoC2RZJ(tZ.
%$3T1a.:LR:B3hVF/Q6B8rE^0jVM$EINCq0@25*b`Tq5Vi*pEf*eM($K0K+;B\J/=)K:kf*+G1^c)<ci+4;lb]9-28n$4Pe2Lg'.O
%ch.ZQX+k+Y''!Biq[Y&B6bP;kd>X]dZ7C%GTC4^aK2OWcVT5W3s6>Js[_n@6\Dl5`WBOfdEA'12/L<67rcCkhU;lBd,?fB+_j=mu
%l2kCLXA!*%=[HDtbiQ.9W9RLfq;,.gD3OaIYH(I3/b<auGiQ]*pN"AK#BAY6k7@M,d$Q5r'sku?q$^Gt*Q`o.Hb-]LR-ht/66g#a
%?"u(&c87Zs0SJCS]/[i'L0B<mdF]Fk[H>@sGD3-iV+U0,mW%JX?f'uUdbfhpNp&6NbEPNAeK<g;jjII6@%0nW>"]P%0p)]NN.0hM
%cN;ciqB5,3;ce0r/`E#CWf"EW"l7$>6^dF-*GcP]Zt#Xj.9`@f)/il`;H3MI-"ifFba+,07ONnmof/UHH=`tVo9FC,\^>Xt*"/pt
%,/8Hr&/]M[<-Xf0>)Dfeh].'Z3Vp<cL#KJ=/OnXpaJ'2L$%"XqqMFBXQ@i,D4sKbA_l%13qBcN1,ktKK/UsAB>pG)[^1k#D++WH`
%FF]g/$&nD*%AC4qS\ui;]M7hdr?Z/c+-[(<J+VK/?,2K+9oGeSS>eOfN$l=M(0/>*qb*PCGnar=kf6O-2&3Al38[C1&rUKc@r^)W
%3]JYFZ2Ycu0&UnY20$&@AH]>B`i>=i1pMsHI,/VY6#T+W#'IjGXpsI:aKSuBSXSgcYnk3!j^IQf`X^78kTl4epN4?QK#.YU&dRs4
%0\Mo!>0QMB:#7Bod.uZl#ZC[?Nc6F&g5\4^?j^YN&O:_T/S)AeKaH"f,)7J$AZkM.X/[d@,%E:D/JVY_=>09`A,g3]3LWfFT=sFs
%^TK=Ij7s_!UOAWknT<K$1Z\&:lrPAApCtBLh<hI/Q7H!ORu'n"b0;VA`X9"0EXo2b`F*.V1]8K-NmV^Xdc,iP:aQR.P19dWbA!Hf
%Z(/tAbgH/*$X<G[5t%(H,UJ(.)4]E'j+4^Yjqp]'<;N"O+.[3NeS.K12l`q:"l!oO8\>58CPN&InkNo)"iA,tk`paVh`@/(%NWE7
%(?a$Ui/2_r8u*SMn:N6pq.]Gl2e/isYpE8N(cH(:<H$gDDnOKK_q'Pc1OL)X2jTF!+R626!QE<!:2Hpmh7M]c3c+#s7Bt^RUFCs1
%0N,>rCm@f))nJX%PU70BQ^'W9iA%opp9NCoE4_sp1=hMG&fu5!Ji4'lS!em$g.e\Y2nJcY#,P$W+h\k/[;M$WXDIZaUPL1(.NF7\
%GJV'K'tB$CVqQ6_-[l,a7eh:P3)"b<J$iO9,p.62X$9IT/fS;%[9-Ju?2GV;nideoTpGhpZ`Q**3pbN$,caB;KpE4`k\OGBdnIhL
%\408<8ETR8`+Yc=TeHY/ee)7OaZbp*]B6]T\l/+f-R!BA8LmmV\m<6Z5hR(8ddL[,-`s7A?I)6R(\<Pj+Z]$)ZCuIFNIb)]5`/.[
%hK8;GSV`)!UP(&Zo-n]m@Y$S4$5T,&'VSN.5+(**p%qKB/@nJY3s?Jkdm%GH&Y$a6^GlCd?38O,mPa%0:C-i^V:tRH.biNnG!'i_
%TXT;8kb_6r?MblB5d:[[4FD2`lU"VF92H9P`WK6N8Hs?1rhq'(5<jus]l%<-=3;&u97FAcfpV9/R%Xd$DHH@Bk!D@2j$k"nEqM/=
%KPP`08uXfDlR\Fn:+V2V(hJlh3`A8c*uS0c\ga[l&2P>r]>8?]&QTaNIf-SkJ&bNOmY9[3FQ+X:j4mG`*#+hnT:^HD!i"4-45$Z\
%CYmY8f^;PX"Nku0\iXJu/)e?pEDoM_rI8gddNLh^h:LFDqD7B8Z&+V_SXAd*Ao-">bQVfU70AgmiSl_eTWEQt6]3$bb^F<scXY[g
%1:QY\\"=(9<)^f$&U=2SEK/?$4<3Mr;^:k/qMu+)F=E`/2cE^\_Oo6=l\TUI_+:W2_ZDB9!&elLY(,R%m"p\mTT5fr.s&=sB!>E7
%EXeTJm.m?YV?T%S^+1a@DObtb2aKJpXcuMr/NG5T&m`,HCH_FV38Rrh@6*-aa)V9CI]Y?.`mDrW=IBI!?uJt><(su9iS[M3fZZ\4
%rn%%<>`E__+7fh`]HA8ChHS*m'\N0SHWPd'(9+D?YuNq_(KpZReZ-$5BDV03=/1-gU+n^$UD6A<E`RV.RU8"YiRQmhdl"IFLAJOc
%l7EH>-*q"J.To4ZbA"A-dG2!_;Kr36;APS7/1ZP,<X%+BcJd*pi+AQT@,XPf`\Uf8?S(4OPlr[l]]E\B4bk7GQ';)1rI>ZMgL;#f
%;"Msd>'5Gok:?f-fD)%#pX?"@3YN5#89I54YAJdfL/j+MjCq@6fbm#$dr_uF-nGU&D%3ruU1%:EPY^9W^L@X)Fk*f4Hp)q^L<JWZ
%!nYrC9C&HO'8=N@lqSf;Nf+7Qok?\,95fYDO\o96"ZkKY:3Q$<0;$_0Pp2p#\Pdm4VP\j6V[H_Ph%^<Xh`k>l\[(%%j-)?(aQTQ4
%k2DX0</0AS4V*/,Yug'g=-AEm,g`\lkZ$o5DlSt`K#8lsQftG1@#jkgO=9ee='"!O`O+ft@r%dac7='OCu#c$-5IrWCt%CW1)@a^
%]+_T`/8m2&`T*8U1P[NIAX>n'[1hNQN(g>dW,!R2j^=ih,o$cic.#`qmNo,qe)co6(.JgXRa`&0YMp!=g+>aq#1aWGPe7WJ=2ot*
%CWn1'@!E^=/0D#d9j<Z>=l2PSYgHVljiAP2hUJO7!uPr(n)`Q+Ej[Q30r/3pAYF*1R8n--AQ/7NZ6?nfPo[(4\Ui\5KLHD474/$[
%3]AYPOT\er$66Z1pXQl3^hHLXLU6Ld5Z5n?-?sQ[enN/lhr^<CgBsB'm^i0[ih'ol-p/BO\rE->5?<l`cGQDO)]#+0S@fC.#U`hc
%NhPX,_b4.8\M2p)Qbb<'Yg9K>1K-bF(qlHlZ?LklF*UA\;gT<3d^XInWEKo"Yb2^M*9W^Z:,!U_$Ti9bZ41^!jtI+j>8LDDU]lAm
%)9$>2N?-k4,a(/)]\&X66Ee_s.V4]lW5Be?bDm7Y$Z-=kER<if8<*iA0EfVTY5/_6rR_Dh\L.udZ1-\"nI]F<lFtO7L'^c(%^8U<
%'<?BPbGKsOW?Na^cO]/;-5_[jP8n(@1i\g8.]DJT#q58ZP4hY<n_4Hi\>&bc>2gSH"'9[-=CtC&?SgV0[8p/En0e+2K%ptt%85$l
%CBgRa)lK.U/\h!mqJ*\ap'lDj!r%W+;Ij2#]8]GH28KZ%B-5[!i[=Yce=t8JOq2;QBa>"JC?>Si_[?U3`@Z,ml]PR@5Ogg(o7_3e
%%6Sg#J:WJ89op</;26d#kXk1Njm])p7sMl%n2h'kD6T*<BV&lj(3o,qCoS"AmsNTPg>'U;_^g)?0#cqP1L-4T\@m[]LL$TAGVGHm
%jVLn4.)jW2I"<>&_.[iJP+G/@&%@u==-W)2Dc?.\DFV&uq[1TZ7uG4C#BF+]:OEhf'*3Z2hMgRc1SPgkO(no2=*61$g`(".K:(#-
%hV/`V)TAanE^5Oef7<;3W=#Z(X0D7`3Lp!.m2VT.=#j]T,)<R?hJQ!`"3O6=efORQ3a22!\E'E3@gPSF8O%^MDL?I<Jq7J>?3^n7
%=>;$R.tBWRC.9M<^\a:FUF?raa-8*,0r!+2qWL!BIP-kc'@L,c]0@M1.l8YQq9!$8^f6F>6)(f0$Y1pI!JSZp+"Zt$[bH#=hn)K1
%KkXacI9&bs/3h6bR1I#pJWu"%!2i)/C,G8M2)fge#ZXIfC`67JO4Sm<)n/Q7,^I<C7ZY!tZrsq8L-SN8]3JSg"To*&8aAFL)c[6O
%.QB*FUEcaKZZ<h.hs%"j#s\9MLVsYsEJJ0nl7JGM%sJ93`h_3+m/S&%`k.HH=4rh'WCfNfCQ!c"580$MlajObQ^r==PVOXM5lTiF
%RPQ&"m?sRlmI2$(.-uSV=SD)6[_-WS?gh"a]!FW?m9Mm\^ui#>qJ&YS<f,&uS[&hlq+8*Ud3PoLDEtMBhHXf%Li-7LappbSSu(5(
%?:!XR@g3D"UuV-qI?H0sD<RFGnEeNXI.e]f.oG9KFc.Ps<85E!?u/Th9H,"/Y+hH]>'lIN6`GZ8e9880Jt>uE#!ZMAc\=BFs($*>
%p#4F,-r,e0r%\FqN-?%#c_mFs0\n@D_Q-=2J52)47EcB`#q#,Mrg\3>De8%S=CgW4"0JXV,th*$*ZunS:X"5X-Do`@9D]EmDHr$a
%?.`"X#f,S2]`JkDi"blIrM.8#`[/d3l@]sn=4%eHcnQbP-^.<#9=_?1@OR1d?':MC9u'8&bFYrQQJ0r`)to+Fo\!VkTCV\FJCcqg
%3,23RZ88@>Ru?ZES]pWno*b."8N>LtC!oKc@6cs^N0O*bQo7AqLfiK]K]B\9:C@ch"S(<F<Xi/0n017CMjF[u[LIYXo3P#4+!kkO
%1ed->R+>H&@mWl<A^=SDhu(2);,r,or8pMML769PLf9Z+Q)U^Z,'1t05Kd-oL6Na**4ZFAc*k8GQ&Beg%2(u)7**=5YpYo1dilY7
%gIO:/1UB*ldu)oK#d^T&1`d6$5f9p5Q=)%3Bac-Tp_Hq&7,r[8$uPE(-'-o#B9fd(AJPRP7B2Sdl&H_f-*((`1rFB>5i[/X:kn'=
%fK2S<\NQDMZ),4Yc[]W2!f3XW#ksT3,bBq'^Me-KEoj+FFPu$qYZ=qc:m&/R)"#to>(3bN,2\GS2b_dp_415'Z2ij-4oW"L^DCNV
%rEbH8nDlKm[P4[^obcde]'XG*iQ)b_*JKr^!8bPQE/Xr+!]t9:jo*TnU+J45]>7LjcGi[S>=BpW4n)]W:c!m4@V5O0pI2'#pr6=u
%eC@XQTtniF467BbVR51lP#jNRkD^d&k4`Qmj=ppB[Pb([qHGQH\i%aRF]L<`IIcAR[ZB10`oLledqcP-3,r9C5lX'3+BrJ.^sn&,
%2m8Yncs+2EcB;39?Irj[ZT?j?&S7NG$+[/^^6WI]o'H>cTFGBO5$<>Y4K!:f6KP0e6o-8d@l:_E":fVo>'cFWd$R&[gA>^B^9K;k
%,IVqJPq_H*O:(hn"^X^k1bTc'E>@'KNBYr&W:JgK@q!tg67nIlKuX-Qnpu[,l:ia=^gKcn*Yj4^itJn[6aH0nY48tGkki3%GC)LZ
%<KY12_=qJ<i%M+J5S\fklb!jh2EiM[7-0<Kf:6lC(27j?@u%?Hkgj)KR-j2n$TMb=0BXhkocPC*o0s2kVZbF?"a]af#+N221sJo,
%s/_1+:=q)PGL`nUBH;#Bl>$LaPB>mo/?E:5cRr3:`l>"OUQ"l&"k?g:\+TU2WrS$e?3fYRJgsqP\MZQd$r:$Jp/%lSA'V'n`AOBW
%D:a6GH(UjO\TW2&NY4G^"*"G;R/G3[mF"CRV?.g%qWP/K'jLR"8dN88,L0,sA%KQgDn<Ic:F?gFVD9LO(TAp3P-NBim:1]tRTUAX
%M0PZ?CB?nC_`OO^RfkCBK6LPp81X.)->lJg(V.6&:;p-<XP+1f*2!QU+t&9o2.#1E:ZX(oL=T"@!a"pC9Fg4c9;7*o%s>tj46B_a
%3s=^6UX)QT2;rLDj3&[hkr8S6-1e-k4-]sdldpWk;=)<-H@1>$h0nq3i[nnLNI:<V[XW?Yo<G6Xm?A3N;+-&KjrB2H*sh_9ks%0'
%6V&aJ)KcD/YdPq+(Xp/9ZM^.8%a[P?;'-00q9Vs.&$2'"D\Za6RHc-lf,js='a#/$h/_eS"5UiX)k?#VL0q\;%u6))\?.>G'#pdg
%I&Krh\2d$*Y/05dGPk%9YKq0tM;J4-\*8qa*8bJlHuP)]V-VV(oIF$>Sa=M,!4Rr%&Es$M56D*N`o<d%27.()BpO"eMR!XBeh940
%H\jVuk9#fjDUk2(/!e'dH,>dDi>YLt35ek(qkgr9#-uaA(2tNq(u-@ek@j0mYYSaT#\._oWOTkb'(SlR%ICr:_O;26Cie1,0BLgt
%$"4C$n"\(jhNi!-Q?8U;j"iMsY4VG?eLp;aUsK9LicIJ!8Tsct[O&-+An;MZLpFVAF1>+/AMc)e.+*c'q"XSdp=*uV>D=TH!Un,5
%@VVuNDi`'rP^3t@SR!9O[iD_n!P:-[%sU=>(kh&Ooj\=&FH^#?qU@hHrbD!<&8idi5N,L&)dl\oMKQW`pe3tO/q>[OI&"R^>E!8D
%3XOGDcQk5XnZI\Qko;MX""8ZH4jf&@`sYnY4ML[]Wo>Y9?A+DLhW]De_-J0[,o.'WHc%l!o&_L=n]e-%d23g;csWD<GpHl0`,MLV
%0fVq0\#h/LMc-1R@KeKoDA[49BYXbR-M:I.F;rL3lQW0kAVo_0LoCmq)N<+JWAG+J(e[l6IG!?M_LMk_0-FsDl2k$i;*>(K5^q`2
%1'AO0]J)prgWn@g\q%%Wkm<-<OQ=;XF4VVF;^;7Z1T7_-1<.l5@";OP9$tdW[TC<h[Ql1_nK)H*N91h@+[[,N;!i]mHnWs9qhX4l
%.#tMud5Qh-]rG74j)-=8<at53"OVshEDr&(lXBp,TGj?#kr<[BTL-\!1MT&[Tn"=i_S8hX/R]A"4rEEuc^S;L,V8SYJk/Nq7'hi_
%RFVWui70d,"Ll'K+t998p(ipY2=)9M][d>$KdHfW',bk>,!fT=<Rkb@a1i6&I*^)k:$WAVLq;()Us*ld5Lt]1KtS:OU#*;8K&!6n
%bji:mrr(*j6u83SI^DlAdEq]:ZtN'H5OOtc+e87dkQZ<C(itGNd<seuKIS^e%)U[S@grdLB^Qus=)nB`'`?M/7T<@iii+I-(KR?L
%.i*^dEopW'_6[XugJ^s.dS^9N'Hbf"3FAtF+&4T-gIe#U<hj>G,:fX4L7rPW?3;J*DqEso.YHgG?.I8>e4*8Y%#ZAMnjQg6jV8+a
%S1pB]7NEHh(@.r'OB``I.acpX;\4!jIAdgJ+k2:i70DURl<Qr-6k:I9\Tl?kJ&n*`']9s;<eIYUQEgDef]X2gn&%6K("aJ=SkDi&
%%6Y7Yc$:Q=`NPaUZnAjX`6;/lE;?&H^MS^WXlg@Gai=';7h9=T.G,b@:nQ4uJ]jUf`gYH2<%-q9?Ze+IfoY.hG%IHU$F#jC,Zgcm
%Cuid;:m*.@4;K9u5>a#QLc'loP4-,ZXtD:OGp"3A;d?P;;t,A6[-IqOL[LbO*SAbP,e9","1k6i;cYX@Pj%+L^O#6h]:7)JZt.nO
%1H\9cW<+eDYE$&fRUbo\6Lo*&ItN9U5=u3_\Pua#q1qVY9N$ag^XmERV,R[P,4Je>2#F'.freQnnhmlg'Xc(VE$#o8%$IkpTho,9
%_s8a^,L:>BONNM/JO'l]+-4*g-BT2/>4>M<0)Z(j4K:S=F9dds$47hY^I/Pr%_pZaU/IV&%3=\MB'=@23%EYI4R7W'>h?E<l%$0.
%]fRNR3;<3Ucg`fe4h(50e)!a_[eQ?N&Ld<.@(VjRY_qS+".\5p"L3tag/G1Q2"FSrY$d$$4DC@,ei;)mP,XG5iXD<'>,<n[E_0-X
%OP%@%4=F*D_!!n[&Wd!LZJ;,n2j"q$!HUrk+B2UALI%7T]cgWNos#;"8\Ge?/J04qgEG\4NLY_hXe-)q.M?6Y9aZo;?A1*tD(rCt
%MM;,+H.+LV@ga$Z>Jrj=Fkhn6g\FM1o-@d=&^Y[(T[/jff]se8h,`R<'A<<:0OLceJ2I\2Pn+t>Wsb]NafoHbI5G5#*:"+!5bgOT
%a;IuIhd0%db3>n5U]l`I($H]]ESNKtPUY^/#POsg%8+X/d5SBIO.G?G4[ujf<:e6?9<lG&83qq6YtQe6glCFhB"kL@W)W!XV<k?7
%lbXep=1Qt*VH0_30NM3u+2IG,>i7;SKi7q;nX0?N$72Y:W@?E-RNYj-<40EHKTr7%IQF'-/BgL&AK:(R[UAi%;$?0e;r-)3=3+=-
%^\Re@kf5.<!fP2S&hCBZkqMmSM?aa((pe+IPd0=)L"A*b]nFjh@C>-'9NJM<oIGo"((/$U3U("[UnukPj8=TL4MsejV.W8[\og[7
%2rR8g]*q%O6pk&me0M6.YcqI!9-Gcq\FFNgY]V]tAoo>60WKJ&9tY1HT[<4J+-.a/I9&%4$tUj9g?'n+83P(aiAmEUGTCDr9`G_4
%&HVu.[QHrfbeSoUUm=NVd5\o=;E8Pipc]p36VS068_NQFZ&rpC>KB!aV&lht6AD5fZ*#JVfg"<l`?f=0KU:S"HA^ea!<aLj9JPeN
%Em1HIY00AqbOpOX5b)$%o=1Ruc$,'IR%3BO0s%f9^rL!2@h[h><=#dtZ<iX7;lilcJLYXg0@Koc3OLpaVGrl*OO#N&@70@,[R[:D
%T>M0a7&b6*\I^^@/X?_q<^[MTb@M+dX#Eje"KMe^!MNHNeQT3tRJ%KlcHQj[@p?JKbQ[TPYP=W^fOMBOI%SQ#MQo`.&+:qRU>R<^
%Q?-Mq+Ce@&q'2OhFrjkngbH?6`4]%oVFI11%Y&#"&F)s4[RrK?-ZSAVGR6=H\g'^a./<K.d;f%]R>Y]Vd;P'9'iQ7%KY@L'Co&[k
%BLI!fX.sgt5Pc)B)0)>V7o=UH@nh8*Cgc+&5#B7UI'Ob,0Zc0$T>^1K-QJGX1=XoOWA*OmFm65J*T"u*aX\2hDPd5<N14m[Mt!6@
%Q0F(!Y!ZVkC^Z!pBR@pI\Y6:K<DKDYOUAc]3h*TI]k5e/_Ak9W+>[Tn-"jn'_U157O:91"%WP%noAR/.UgOJ/qr,4K)>QlgBE;]T
%D?6bNFq47TnWA=k.4!l\OJ3Uk'e/GWnt?R!.e9Sp15IS6M%BK'i\_YNI#ch"S[N9>3iMc2=I7Y\MtAp")g)I.JsARV*upc4g:r(p
%a$3/f64&#]rHWTI<\#,t3q6.:;2VF<bu9Dj>jQ"PcppBchG1[Zn1f[=,6Y.-0![H#]rXbMQ(tBo(oYIOQ,D9AO@ZY_-e/3(#+]+Q
%AU8F.J2&4;&?o]?%Ltj[C]j0"g3JiKH6QMtA^DLdWa0Xf?d/FE#R(laDHJM%D'-Z^9O]2Pe/91eA`uorrCLi&L!>,a-)VbqF<r/S
%0--r-$q"N;=/RPDg0jd+8I]UmV9CASfso4"4HW&<$<3oR-Zc*TcGKDiE23T37m]#I0M7!BHA%7cG]L"`/$/B@)q^X7Z.e,>&%E$c
%o.];S$gl"AP[\c.>mfdt3-U3mBWL<.i\ZKNMN%_f?8_sd1:Mo/kR*S^KdWHTL#[m$EiQX0T3P)!o6+;3[L<.H4aBapC`QKEr8!^H
%#4f*pE_$ZH=`%n1$nKnS+Y/M;rLMpsT/&OeK8O)=6ODK21H7XWQ4s8afRK$J>A6&1Z8hraS.]uXOV]1kAp$hUU$*>cRNppURu0Sg
%HEOBALVmAOb;.S,0hgA.bHh4]_U;Fd7?G)u`ohC"7B;)Y">.gT<FI@Ggh>9^B2&pF`RAQ.mR3'jM5]N^k7XrE#/4)Y?<&c>X`T,9
%84qjdQ(%hM`T.Z9L^*O'VEK6k=A#_j+%V`FQe,;RFXlf+h#Q:-G<so,]da#TP-c:A*6:R7gU`/_q:)e=Tl;GVO3`WP\7N]HgWWT`
%#H(3IA;0VTbf&rG]5ra0Kb;QXQ6#P75ib01CaE"Db1KEoGkD/r5K):aJ/+9N,5c%s>Ne?VX>t9JDr,J>CG6)Lp"ked1lp(>!O7;e
%r=Fm+VUZLDEbXmOkH>D&IIo,@q8tlap"nu'9C8D6,>'%4>%?qu9XD'gV@4\=Z$NJq4-q+W\u@PG;N"sf#Ji9\i*is5\8FQ#QBagP
%.P0<BlGMhD6gZ.Cig*?2E3e*i)7k:QH!ial1)?e)<PEd.l4WFuFr<9)0dh;57pG8hTJ=&P!3G?(;!3Mn;Ne,jfo<D&]$=gaKL@KK
%=X8M%1XW<[;5,ur@t%@`\%]D=Y%T!&iqpH^o_n%)C\B9MI1o;hZXPtSj-dhQCXT2S(9d?oY0:eUa5b*4f'3Ns](An\WuZohF_qW\
%ZW.7"OeQu3@kD48RB4pc<EcKql^?D4M:^(.DFsRH6!?_08=In-9*nm'Be>Y/0X&gall?/DRqD=?a>A'I3t!++>!R-u%BpU;,K)ha
%G_Y"-fI#1qb&4kT$,dOe2+i5:X4f?j3/"@T0@n:2N"2n!/K^>Xof\+FX=.uo5uc5<JTulljcGY+6sl1_N_:ITbnJ\cP^T9COmUCt
%)TsURfpF<;hD\ojqsgt]<@AlJboNp:9VApch4E#2;4U;u6f5(^N.m-JW);(YDT[V:B0#;QV2@.-KNgD`]PcP=ZO<pU^Qc9\<-DW?
%G"A?<pn;#cnTMs)/A=-9<2H^ug?"2F658pi.n^"Io/`oMZ(hIKJL7qBqCjphhB:X>o^U'M[c0'UZnfD<S5n6`G?DG;(<oZ*@3H2F
%Z"?poAj.>BieK@;G!2c@>_\;r&$1cpP]u2d/=nFWB81X`4Di^apCcW<+cMSQSf3ZV'_)U=M5Q$<HbT;e<T<5q[iQ6m!Q0=G\+b5^
%hUa.@%/o5gAf"_ZOB+X?=`BZ=@J3l*@tt&l7)osp&?XQ^7tR0&A`\5b?6D!#3Q!4,[co?o@=8.m8#7J><Uk.oE7Rg3\CIKcE*G$7
%`[Jj/Z0^`m(<!iKPY\]MV+i]d$,afDV-I5H(si.^G@8XajR?2J,2QMX>Srs^nHSECeBVUXrp3pqe*LD'SllK:=[`TpjFM(?M%aD@
%iU,gaPoasq+cLQCV%3:Dnk7^WhFnII1;>sl5J3^+\Yf#-I1b5N:u.Z\'sV8?it<D#<V5jJG#'231cd!@"r$pW:TeKTFo=FC\@;@g
%_jt)bB/jDElYK^l^H)4H_1?#ls1a!H3h/XQq3/R<GC?UqO;qpc=LSd]KK'L[N*P4jHk>6g.#aaIhusT/5iI=$.MGFB2N0*R.6^;i
%JlYCPbu\a82#@237t*6CW%nO,omJmu?,7_qPD.OaFcgOCM:CcTonRWaXADNf>4N9pc)8G*^\d@>rh[>!,lISXK1KreDKke*KLkTB
%6'#k-')FDl"qO!h_X\qESJjsaScQ=*[/B)(#tX^HRXo]5p;\QV4[%,uAaD`tqNUC[I(8"s<>a:VNS8p)3Oeg'Yq:cb\UI54'g)WX
%\U(1mfgP<J9j&`"=1Ys*1tA'k^Z&hi?jr(@#hf^9`c%%T!>MQP$)0$p`\Q#a>gZ'S1<m*A*U3p*Qc;ULq0Hjir@6IZp[3:/X1$t!
%=lX-*cX,VD2AQsXW0T%TGISV+`MF*1+OWdI>@J_Te/[tcDpmfKaQAldXkt+Y-C6!r!2PikR,b4B7(]^VgmS#jTC,j1%c>\fO!8Ts
%L[7TR;A^G>cE[RDn>>_N#MJ\;&6o=8UY4:"YJ7S,:67!6!&%_9;ns]>?tojlb!V%AqY>4)[q@k=a*/!gT7?XF2rq5H/10;Z`6!a]
%D[H?o@e2l4=D#c`^m+*WTF<=l5?@,*eg3_9okmY(Jm-ghXrm)(T'e(&EKVYlHgW<pB\+jhMS+5X$oOdAIT)d+4\LG:HW'p]LtZ8\
%_cBugOtAaY[RP?MTHV7,_mk"Ne`UM=L!iAO?Q`\tG2S;a?oWWMNf<mJU0$:2#e6#!&IqC+!hC0GJ)-Mp:,]e*0?n^<?AI@qr,_Fe
%hn(35$W0G9LdN']`fQ+/#gJaM'F&GkRYRk>_ZkS^BD/g&O(Jf0#r,JtBO!]BNO#U567[?MTOnm8%2UV[Pb_]Lg+5f5/H$'akmaqo
%-r9#H"4sq;>Qk/eq474=1&ZuBPL7!_QIJUuW5SM8dK%@3I[)`ON3/jFkuj/bI>V@*69mGph9DB8Al2tNnG_W4^t)ub@V%MlVKg>E
%lEkJ/Kt:K\:A_jhNGYPMKLo0E=e9e#CRSTic87NOhJ+3q2N,=&"CaR8pNjKEh.9dO>#@5Eg<PfD<r3M!@iq@]h4bqu^CPfoW^Tm=
%963U;59WmPC8p$Z.o*Rj,9L;$-S`(3cZ2^M@gEL.#N&(%>T'U@knLf`-6$KMlBnc!T1Vqt\Y&uff<pFLGDhK90C@b]$2S_SL*PL>
%XYO==O+i!!h@Ra+rO^"W?4ueoXE8P1:%l<dpn6>!FKj1&iMg9>RrmtaME6%"H=N@"M%?dsgb.P0\2)KXqGZ!LT0o6XnOlkq:"H%r
%'L)4,htSDsMT_egAu.j8X5+Js65atE,UgG:11Ju6&nU\78S9B9"Uq::;]WW/1#$<EK3sLcL[ccE.6OPer[NPiXR,ZG=3Vf#qse0d
%mp8q'a3(*XVdWO!;DNRRfV'?hAG\:_3hcqqqTP5=r)]rU#r^%SHesVX?Qam=p=U_Al)X9T;,>nQ>><b%[enDTVoo07#fWGM,N$rL
%"hNj]i7E)><oC[9*MhddjEEh7/r/m77R+M'd8Wt3ftC3GN2`!kR4:iCDW?_AdI`LD`K6N8p]B'b7h`o);Uq`\MTWe<WOdeP*_B`;
%mTgb@T`)=c(!A^5[]i:sK(ilU*^lE+oL?\#<hBEbW7a'@k_&CClIel%1:$:1DhH!`cXurGHRYi&ooO#,+.XJ`7Y-ra(?b#Li@FX@
%)IV#I,t.7KFR!t'I]%nG*EqOo^iEE3WmRa*<MVf.A3@?8f;`Po,PaW#If,j7^KaBDdL<_-ps>4OW/URHiDn6HJ?Nn#LumjrbCI(\
%D1@b-'/oQ^b"_!n1^7r[l.O%:F>d`FG!jAM]T0_F#iUOdZ9r9ci*98V7)YfmCKAKJFV4Q.(Z\RD!u3_$jLBI3Fsm3hleG\>G>WEi
%CR>q;*S#DF3E$&ie3\:eNZT"GDn8ROX0hmk>C4RV#YgEi/i9]R;$1Dl_%r':HVK92&?Ve6GMW9B#e?sFrd$r,Jf'6`^W?0d1$9Tf
%!S6&M`knXTC*B=Jm6,DCd7aiua,5PA.Op1p)3t&k-nKUrccB`HYCoXEXQ9]BWdM<2=F2*g:"LPP[!PFCX=A^D\U:p0o@ek*08&9"
%KH?5Bf%2d2,0t-C3dPmf(3\N@9qtS'+qLYGd[d.@cof\g]O^W`8a7=B.G$p6948"P]lRl+.hDo(8lJ5\S-&SBTo3"f/!C-Hm!N7t
%:;`)E[>ZGp'9cX\mH9r*jA^(Bm(uY(iLJ8,7fFjanD-/Sk!b3=Uo[`R->#T*:s)TO!$4i1gbbpRe+;;kR7d.1F8#-!?2XpN5S:Fm
%[`"Ouq)<UW`ub36Y>Gm+$VFY7o`XU]RHi;c'mp1*Po^HrA<9%deCnb(=LEqXdukrrYcKJ\0"4aG5,a.&U['`>6K;6->Uq5:Uj.P0
%W[k@]/p]O:X(Y6J>@Nn<d2hofI88<#m,47'QiX:"1K:]g=LlLI%b?1Z^,V?'N$2kD"F"4qp=X-5p$]#M^TTh>9/A<2<9+.31Ef%C
%ceCANaZiLd2,5/8PYSWGEa`,kO]lSAVg4A6Ebj-tmsQ\='t;ndEn+;?T]u)R)D-?7mt_UhOC1YFj<&S,3[0IM`U6LPU*6"eU*#0j
%`Y&`R&*EpIO!'Q4*00PV'Om.['L#.0N0%*H.gQW[ScFQhG8JVO1Qks4hjh9iYF.#NG@-d*6%,H&])8gETLI2OSo),\\7qg*(qNg=
%>,%cUmP6>upqb@7/'W:flQS66lkeh9B6+gJNeO-sVDDZ`i96\B;CG^]FUpFqL4E%OHE:m50'<4`/l;A80"(-XXFdordAVs\GMYq.
%fWHX#K-q@5(H$`*$8,X%\_,AOKgE>sT535eStKa7FI,?AP.@-j]tTFrPR!Q$b<8'7&i4?c,X#5L:KsPPE:DMG+OK&>pI7%/;,E'8
%N\)IVrG57ZM&H13D+3EL?NCgG]-:7nhW>_V0`gN"3eip//S["`#PO>NV8CT:b<PYh`B@1JnS5Z007NQ;d\FuoXH*O]0eWbM^>6<Z
%[_rt2=3]r:QgIo*/hneeX7O]S0VbSY9;I_hYGlTh(h;AYYS9O3cp@kD<1k)Oe\)$3T$jd`a.#Xm?n:p(?,:0e=WM0H9TN!,ASi=B
%P0[Hp;8McQ?i51g9uY^T-?/n8_?5QX$<Aj5KKdm`VD`hR'F[n<fpILSk'R6b=GVmo.Y//\N!TW^pJ;PARM]2q.%.1+TMP\*2ff09
%'a91dqC/#`00XV=O?e=%VF1R.nBr6=M/3!fjjV#<Qs7tg>bV3e).UHE'KGZk:;^O+BTHjL,5$4?P__nG+SCW(IieKUca;CbY9X=H
%)(HgF'ql!%JXjZ=-d]s@e:_*GNg1CT8WTJ+gMd)]D78ZCV<P[dr/k]Q=\S7)E`h!0(g^HG?u5>5Z!bIlf4DqhGV#Kt%*K>RQ4b9J
%=N-3IJI_CL2uj/5L]+h[n8oJsp;d=CZ(lL^ZVB5Tj;5m^'06qIMe&2PRm>1sZ'Bs!JIj2a'4_oTR51QPHB>h]@)DiG&#*dT7G*E>
%,1sRS)I9NB9#&jXRU)r181$dR"]Np]ktk[l"W?:f@Ce&[#^uL3mJo*1%[Z(OT,8=^XV"HF2##Hg$]5Os!4D\YPn7oMLIun3ge)7q
%2J?7]F'@!\;;%ng_B8m;adtBYHq;)Pg%o"_#f\<c_^P^h7mio+6Dd.gmq3ML9M"-=c&nLK*GuU8qm3on4\<'DI)hNeV<ZRe14+Wo
%5I?=t&GsP+U(8cF5_%A/g.5CWL9&b.fens_Mca*]kRdKIViX:?(++":83"Um4JmFM!DlDQ_2U=,s*E=t-j=9CNDUG0H#^t7Yj/-#
%[B`D[_m*ic\e-6O.X+SomO^8c9B'V9pp3=;N$+r\\ifa8[Q(n>%af`ZJ=6)diJ_L4410;9/e_R"hS!4+/"d(t]]Q`?arH.(#53@&
%/CP4!#biG%<f1s?RUR2?UH<J0;/uEMYY(+?78`0m5+O/2rL[Z_9PR@;"02\GOm8S]c8![E;A_s-)Z;tE@&a"fjT[\qD)bU:i1%e)
%Jfh5$n4S!\cN`*O109!!B$^`_\2p$NST>"4%S[8uZN`I9=3`3TD*<-,&fUu-N]J..&ip:Q7Tm7.d>E4blY8UCN0$KG;!omp).^n,
%-PoL--/Z+XA_#iQd,Lg.Ah;#<Cd1qN$AQ>3)p0e\PfbTf8I2[1`Q\HD=PV-Q>,DX9C$44(-U2H/iCl(F3dQ+S#e+5`Q7psF]SJ8M
%oh0+D(j5U.ekg[?I<O+5[T/smYWbP2kA_Ado`Vpn\14K4'^_kV2i07:'G2l'/`BoD]>Ue,KoQ+Eg#<sP#RHiGB9Y[Ua+7s3-@_^\
%DPbXt<RLtur?pI0ZN1HiX@s$:rLJ0J)9:mZc(*B_EE]#FV,Z7J>eOA3opXIg8HA'?WhnE#*I04OU;nGUM1MIH=bTmlI$0,=&R*?&
%8X0Iad)QX*=fH>U(@I3-l_8$fHD,7-_dAmUB4G7#0;uE6MAmN:9hKIIq19Wh<)Qf>K5a`u"d_T9VIT_cD7B2[p$km8Vj+O=V,+&3
%Hb];s]l?*,OXFKgacO%&+\V>l@ZZ=-@&Ohf!Z*&ae3Q7>ICoUFo7Kc:(bAGO$pK@f=4eQ*'H>f_E2"k_$g,ml'+$]dRAeTNp#D#n
%L6f-N[>eILg7oL+M.rWg1#ucQAgen(F)3-P9_5h"d^C&e"-=($e)a%<1)*Rg;nF55Z(mW9"u=Ni5P]V]R\NkuJgVI/nmZt9B5(^8
%`im[P986;#Z=Su5hV6:hp:5pOX%M10dBYBWThI`h?7(=2Q5%T47h!^h%#M"\P^&_'1^NBfELpjkdMm9-^,^&o_$R\/>]%Cc4t".I
%CR*4C/?4M/FX@^m"N^^UCM2j!-aCI'+-I7Zo8F^Z>$SV"i)DR:-54Q9,-,rh][W@@F?fS?cns"8(a3njh3h5/8l7e!eu^l!F;2Tm
%h<:U6JeCuu:IEtS8F*d?I4a9%?rL<?b'(KX_DXkCA)uW(gIX[SPN_EG/l[cM=r6<22kq$Dgo8*Kj=`HgSF`dt(#GbP-p<-S1pn:Q
%V*GXt,#SWMQm"_?c[!r0;/pZWr?+)e%JlNR/\38!'cE/gJT==KMG6bVK>D$u`Tf3K.rWb,B/SAa,%+Ek4YEa-ISro8e-i`:Q"7e:
%\IECf=*3i,(I"k@@XBl1VJS*g$(jNPJj$YDS61T'K336=o5i@g&tQr`JK$!DQ4$,ZC7H;@;_ZS]^(#s]Pgh'-D__WZaZhoL0EKP!
%atQW1OM'.T[G;*iE)W7889PiBD8X$*q-]+WLJe;E&.:]jHP"+CN7bs9&pLQ-TmAEK(K$^\2[SJp?Mn8c.A8eMdQ@@22*WGG@Ebr_
%l4mel`sQ";XolgkFl_a%0npckC[%NP.1MR:_IjaN`UI/3)M[2-LN*;6iu[5om(m^]dH3F7-3'WCeIootN*3:/DGu5r4G3)aMR4)S
%:tTe1ROBnM#RlLe[V0Se!cjRBbYa-?^cZhjP^P]_Mqll[]Er>,>kM;f!`Yuc+WMc.>tE,$3i\bn`DtF2i>4/tSb'8T:,V,VST\Q_
%n>phCasY.3P`6^Hc*>U^$p$jnVFAhTS>hQuUa89+C@S&D%BR^6$G-Z20$MG[EYCBnA8A-c:+C+2YG[!WZr7;+:c$gGg!S7a_`sg'
%Uc1,Jk[ea#ftI2l1)>e`g`tl-<\GhtX(,rI5Nj#M,2D;XPt'7?8Xu+dd%f4#;r[?-4hpnX)8s+DDbn(\@6&@&Q/]%N?l&LdV-=ec
%\>#g"D?_Brm-j>%)XZ\"et-^'EYWT\9MuX2Wpt][j+<*2kBRJXAV_06YD@QE).jpN[`RqT*b%tQ`l;mZ)7QZeSbTA\?#dL+jDr6m
%0]Xj,)O>Qf*SjMPX")0jdtr*5lGGU$ftW8k\$K?PCj2dH$KVi"8sh`s'Z(m(_Lj/1DDAn9=TGqS'4M#<J$ZM`.ZpIaNpWEU"j*JF
%bf&`B7Wu*9j?RAe&,X=LI:d7iboBZ=P@Gth0g#P#.WdEPl_ZjU)./rr+\_qX+.oi$5Vuf@roqX8VlD;I6T3Cn?"WQaEooH!EY+n:
%Vo:gcMD@o>B2%go6(l*;=:1(1$r7DC_?pe&,!*cCWc$D%@&0tRg:\ENe[VV^V)*Did\S;nMTfTG@-ks=.DSmQ1]W"?%IYtu:GE8>
%IEae)I$lP*qOsJ@)=7&kS)<@,/BXR7La1]7?#Q644n?'eW&bp]2=\,G4pA=KS)f].i[QQo5"JUQ37DtYoQiAn>d<;20=l&9VIPZ%
%D_nh>?_aLLUNXKm7[-N(<I(DE3Hse$.C<u6SWT?c>]I`!6LGqc1TOX1XgHE(/Q6h\G!?Cl<K)cT.55tHP8/]pa.C1O`+)4SAKSqS
%?j10<0?G8QU01J(-0!#4]"(*_3ju$G$$WDb3`$Ng:u$s'[TdOU'T*'X`EKe8I<HfjaP5giO)%6dFocYI]lI5+-*X388*<tsU/Mgn
%N6,bRZ1l()n'd6Cjk(S2A(C$"1(D:803:&:\mMErg7fu&l1R,)S1;Z5LW7ECb+>$Je=i1<CaP0r94!RI*ZmYhKdp%oE.*EV-.WCo
%d=q+IJ<eg<7WD$PTVKo)U,N.C,ec!6#u-]oPT/U?1o[[7l`>745RY5L4-O@J5%#!@:5@pP4'1XXC:T;SHG&feQ9Hk)b-JOIVn'Pp
%M)^*]M,!)$ECl+n'KR\C$`,KlQSHK`/B8$@qis@jf2!!kMp&Z#hMqE-G@YF<fMpheVLahY)]@<)\.!aGrj]qd'teWiiRXG8@uIS>
%BgA:'g+Lle+pLe>5BU:)juD!Q%nlV@&?cgPS!'PNLq_?d_nabVlDGPLW[UjrJGdh%iY%s=kHI#]:3a*?E7#Gt#\>h,BSg:X3PU#?
%3&e!$c#;7@B._GYdb5k(F+Jnn>\Q[UD(bM>S6[r'][M4F"/l=!/gm@dfhRus*cXne,2jlu(dX.M3D*7T*?bqcZY&7]kfVYHbF:qO
%jji#L(JU@k#YknG#kmr4M;jL)fAr['#jdYec)0^b#pVR$VM1H`JVRa1)a=REU^ebSPqBWT#ipaOmmV1QFRYbu'Dn5QX7a"d%:?@M
%Z,56kO>kHZc)BJ=6Xs_E4_&lZF"Ho(2u[hF=!\#BnY$o,&5((YLXe#$4,#hSW&pZW3@6>^K.KGXh1dD\P<^K51Iu>?<JAaK5*I/&
%\49t`cJOpMj&S[M%k6*bee19*'V:aE73aFPbTjsF8h)mA`.`iu3\+YF1n&Y';[#k.&V1K5S'RJ?b;d/I5C2@dc!I<>//([$InE60
%]m]2_f1,1-R\-AWKg;e&2K>`97'2?%<f42XQ$6hgI6]K5(,mA&ioM!YRGdf_o_@`2X"@Nm/-c#NP!3XfbM#Q/h[u`YQU$KJE@:ef
%Ap#oL'+T;1EO?loK#N1,<rqGLAc,F]Dj_]9VnP!sM&T\=WNZP>$O+P/S_"!/hYV_mo_G0+n+'%g%e)!3r]pN5h-b1!iH<;P)`JVI
%of@Wogn64?Nn9Z!^T>H\5_.O)]))<8L5m%`jDO1,V^rgP%*u=b]$L4Za=eEfqGeA`;C"\nL0m90QlXac"_gu19DII#/-,pMGReZG
%[PgI=8G"?S)csi_`NnA@I43^a0Z.Ie*(=!HY(G,f#Y58g0+9fr[=nX575U8Y:*b$F\*1OJ-:;9EFLomh=Vf*;kTo94SD1O_eh8mr
%OIM#l]cP->)9r"3/&4>G\EOP+5WNO+,brLDO2"6qaXHsR;!oo!kDE/s/8LtV'YUk6h8%n<d:'bImN$4e<apS,%G)G4ZE87]k3@Tb
%e%A^YGC6-D83R@n1,8TC"lnN@kF\uc,Vk<hSDh",at?/[b/=cc[45.Z4+BS7n$H3_&fYK@<CXC's0SAW%U3=gA4s@bRn4nmFS3\$
%EnP1li2TXO!']Sor6Q2WQBTJu/iI6)BaD\S7>^'g;<A]T]X8O+B_uE76A1gLii(<S(8OO>a-AN5#>B%ugqbbC>UOBEV5XV$N7Ys@
%kTR>9&L,7K?/!,(ci!u5P5CPV\;4?_-K#ESh/%9h!E4^u;@s^gS@8q6bEAno<t&G2acL]dmLIpUdDcDZ>cGo??4V8fQH`Fb5o>lu
%3)m&o[`@I7X`@\'(r/Y2I6NU08eoCNk$r$p1[Bi111it<nOOdPk9lu6hlSpe.n6i>/Rj/b!_KrAeJl4;TX:NYg6gm,$1"l2]-B5K
%EaKtcDb4_S&Oqs>F<JPQqJiS1q60P^(mFuA:%oTHm.2&7oS-I@0&Spo&N]WUR0:l7h2p8H:JonO7Bp_YLiJi7`ff?a[[9^P]Js5Z
%NK`s-/UM\[F=.Nb<(ZC!8t9<V&5Q*ajX>Bk+YQ\S!]g?]:da:3Uk@3o3SYcd1BfL9UCG[TotHLD"MW?N-5h.rl'*,fGK7>8r^[eJ
%8+8]FA7PluhW)pL>`C4TMJ,GXHY:)#I\uMm9D*GWpWbtj<q31j2P@A9n3C:J#fN]M7283QoCnI."<mSg&ikXSUro8*KH[EZD<UYs
%4jTNn3sSlBLZ4j@49VaoE#G9o(a)85atGpF#E<+Y@n6@`I+`JZWEco?.4af`SGUs/7#=p3G/l4@rZj3\:=ui.JY,llY`7b/kXu)5
%;8*^4?sNNc[r(r*iuMDcJ"6=(8(UsT15W&Ga$1JCIqfB++V.MdD(;5gq^(2Qh%6SjA+mKo7;TZKnO)?J9$cF/9IiGJ8VUYnmff1a
%*Y.J=/(Y&DfNs&,$:h6_kYR\A3`f,*p<FBUXM-dl/1VYZdY[?>?[?U!8=_r1^5g76PR39<!?mHIi0lBJ\C/BS<'.'J&>7'u'F.#,
%O&(PsW<26ll$fP-j@N>'Q3&5g<RH2ERUUQ731rSq4P33bR/^])c2<bO@l1m[h:pEcl&J0I8_V$*^hG7<#IE$Ca*)t^36/X9:K"d8
%.d1MmqCPdKi5<:NYpEOGD[f<,Z1WnR/,C9/MO6*0FgNmh=P;S%^'Bq/m7k(UI@;@moG+RL5[0]V*=F"K+$TN,o1n'6Ekpd>gL^sK
%RsDOrR5,XH&F!U`(AQp1>Eb.,/.:'QH2`hpi(6)[TQ>Q+1M;lc_6-YcU%AU#:?WIOQuB.j?t)Y<$=nac#bWb"Zi<JY\\#Ir]4e<k
%k]!eJX/ZiuDCrmU6N^QF5U7RF`dDksBV%YR5pu7XZo5TPlm$alORP`7-rs11ks%(op9o'(*$[`pNP4/FqmQ9B^,RMn/^80$,,8\0
%4sa4jm"hAu17(3>FOb+u*oS@eM(1gS9#\eNach$Bf3=(r8s+nX+lXE(^&'N=IX=$r4iL-m6Db-S"C(KlltS%KU[b-.eh@,t,ujF#
%o%\Bp'rRf#Y*D+[(*@hC+NWi6l68Yo2*+]0%kYqg7AY?'\d=qpXnpu->M?KDck+/pj)7hW71[&r\;1;lbLp0BW*e05!OW2A/(.e`
%U:K#%CmAPF7SkL_8o-bWm!6"3eBodn&9]08?\sbMs5N[lXcZA^3tk>XHPMbB\`WVX'ciZgK^P^b@mp`7=&EET1@Ce?HFUY)%,1N7
%V;AXI@T05BUc8NYUPM*>adAkB4iE7N)_^htHH70ubj3<;a1]K9OsA'@Is4QK29QF(DS+!#)`89Q4gC_DnMS`4S1@&\-LYAfBjK7T
%Q@\Q?`Eqel+Dn)1qD$-2=aAIsDMqDr-h2YOc+-R5NLY#26LRdERTMJ=MHnr8b.kbr]=TMAh7u9OGkT28@@nl47+_DJC%17Uj<j_.
%$GKt2XX1H>Z#T2JpnkhG8^E)U8&a_00Y2S!%Sno6"n((n@4P+53VfVr#f8u'HO.W]$7?-eNc&(3PpkitS!B'*n@0<9hWH^F:/\OQ
%Vhl1#"a8nD'%B\)aRqm-0S(26MVY[.5+:Cb6OcV?=F'8Y?bGuT>G]hB#eUn7`G/IF.aqNAqU(U>e>TK_ID:G\Q]1cI\%Ga,(Z]$X
%lcrI7SC4E_gXt8c=@H.EP:YVU[!TpO]@<P)`G4MfEK>4iWr1^4hWM"rlINHNVm#B^`Bj(u0tE%o?>J?ieqAr5N/P9PpE?`Q<WXZ^
%DNi\cnUdHTjHQ@je\$9uLDL<unbn3&1aNJ&hF]BK0PYT[DhjJjF#"p..B7aB;TUl<4Q=00Y+DYj(UPHrNn33JM2GVunmbp!X%fuL
%/5T!f836IT2&>Y`nAQ"`*'$p6-D5J:X8nbB6)-!#D-th!2^q?N:?$;rM4`T1KZ!FbI<DKPeP@%hks6[pm0f`^#c<Vt?Mer`+WkjT
%c@Q\!M;BfZ5=J9Z-rGkC1u3?V53N41!C_bfA9R<G.)7Ag9C^d_@M:Vn&ni`7^A;iZoW5l>mbCB5cW/e(5:Wq:&]j?fm&9$j40i&?
%dEq$_7!Df,6mATt$HjU1%o58T^--1n,/]P]UH\YA,+e=k]Jg0jb(K8[YEE[ulUL3IW45Aa<AT-Hg4g?$XIncJa2WcC,`jp?AV0!R
%>-(8klf<LtcWitkl`Do;-*pb,09"G-]Uc+cKu/PP]UVBXaeoTPn`YVf)ZJaGhaoW2K-f5%RN]PoFl&dZmTt1q>tgK'lOg-d8kiuu
%f_87M4@CM]>djV%$k/mhYhqG<*)_=+\L)(l0*08Ui?4L\EfK$PF%r?Le>MONrQ/cT--'p$3eb7b$WtP"1b>.B_P&MPq(@1<qTW\m
%NeLn2Vn&tX3(uFqh.*XDPK/8'?l78fn>;6LD6-."aEg`f26IFMg!hA59^s#j;,Pe8)d]?J%(eO?;fEN%hUOVH:<`V16.'4Idf`pq
%8sP!6I!B<H760@^/d<])=H*N]Ga@bGo+?>&l>"IAE#&!N@p0>Z$E]>"(G`mU+[58c\(7u+!o2nA9&)-]C&"$opXqH,%C-IC2?X@s
%8c7<nf+fLM=k1cMM/@d4IVioT75"bONc#_38=-g.laDI!1'.5d\.a'N(`hN4d\0?"[.@6p>ML0NdYMJrnWpm;*"o!.H+j)n:*_BJ
%>LT@WKQ&k`+u,<l?V.kl@^S@a/]*Q_>#>rVEk<;W4,Ui*I0jf.W3CL7":$O@s1tYIQH*+KiSf%Zkr*+u$N2m=9c."C(`1bk)3U-A
%jMO_8i6i<G4-ebF#*a!hB+Y^k]sK[L"X(BXmu:?72:e"]H@-_,eDScM!MXKupY!Z<#J5!_0*3S30Wl/X:#_6"NV[&Tl,qZP3WbZ!
%<%>;1Y:_b.:+[YA0FbW0#FJ1dhA[93nDW3FKOb?peU(*oPfF)^n4=4-B4/V)@<l#TQ;gWN2S1OaP*^b(VW94f(Hno6$c@\%pc31r
%hI=bZ9!*_i;jT"3$@;IB@k+A"3)m5NO!aF/BnW!,YH1cj/$u(@HBuZe?V>lTMtO6`aau)3>5<\"-mqQadA8bCXBZG@dA\\]R`8HY
%;:&q:._(QkDdY0Q]Qtp?hUS4SY$r(7,e+mWh!c%>hq]i4Y&pN[=,E'T)lZU%]>A@BQOrnJ:S-R#@'=?/&#:rO=.*:8Z!"I[K/1Lm
%>3#9&7ZG,AC/qfHA[b'9e`WYPg9)\2'9D3%P6/"9N&@?,M7NhK]p:'I;&(EXo'"N87O+i*,DXSmZ;Im[.'jZ6r^a%5KnPITF[\RV
%\_5d^gdF@e]^+s1NpgMa'OM&`c-+uJX_eDApmPjKU#es)Gfg_T%CJD>mi3!&%DD5!<GTE;NEZKSTlCN?kg]?!<f+7%X#Co\T0>B+
%j&KHm2VB3mDY2VE>Or?&Z]5!fj@)tc[<4N7dG#5:YrkO4[KXW>/KVN>5;u3$*YMY^6g"daM'XbRI=1)3d6'jV`;OX`U0/N,'^V2q
%baVEU=XZXXWi#5&k.Cd@X\f;RD8iBh+=phRkdL&=>pLu?(XEcV1iqLmj5QQ#g/Xt/F=imA"se*BX>&QV=s8c5pmh-J%^T"Y"SUg.
%U2`k&=H$6E;Xd/5Q39pcoHe%KK#VbH.(PljndG+j4#oZ\.I=Xs\1IAUA4@iP/\5dRs)u!6Tal<XiIeB+ngFu]<J$!;,jE`CjTI5)
%4`O3"j2ss9C]rN5V9u`Yp^@%SeVcnZU64k)Z=ZLnE?Zf2$caQ8FdF8O;XS8%CQB>BX(RVo*-!N;*7=JM=DRP3LHCR66Flb[4V:>3
%UF%P-,nkWQE>5S2XI)5n&]YelU4GY4b55Z69$&Iq\TV,H[]BV.l.XKo:Y0].Ss2u305I2A3Jepaj]r3sbjS4b)s#"\T1jtuIsBL(
%<"UX^%1N4!<Qd\Pg>(fJiXg#3^Z:t@,9@cK^G+GbYhI2Hq3@VP8\_9`<V%f22.m*:bX<f'AD$M>\cs.*QTD]/Zsf+)[61j_Bk[`u
%E*_j$m*pC50NDBf71dW)GP)iAp?*8)/Gqt_,%YE]_QQUNJSB(g/D[[aD,]dt/\\1W*?O'Uj/m6ImF(7F?'=M+<Ah/SZQiUo"ARF[
%.g"3D[7rjCH[,.iXgYt#RP@DllSNY=Bc2q1Gfe=TXg]@KJF4a@!7+hs+Y>[.?<Uq+A=o9fZ<&!IV;#1!GF6dYjg2AadR79#ZI#gh
%?!?e#pi]o2.F"<'$r:H.Th[sI$H>KFK+DM`"#W%d1tNuJTuM)2(UU7\.&=Z2d^4^fr:5].T:8(@^@0rQdM[Su[%0Nh?U["YJ$dX*
%lnbk$j#Qh5*R/"g_'k'nkQ+cX4=$</O61oF#@j?q0mRh`K#3<EAJen517.:gKd&\VnI*5gYJb,t$tN[u^.EmhGUUu`N\Z]2qIO@1
%YME?,"K>eGXb>E#BpIpreSP)abRrL>7L\G+.b(m_S;<$NT9k`'`3K!Jm^ZLDMAg#?+J5h&%\5`BN;hOY1p^`J^Gr;H/l)7maa8OU
%M^8pN>:L"kA?%A,%p!8(Amc/j=fA(s\s-BLR_E58-r_2'gb;uu+.TBL@LFS.ed&+^L7B2Xi((fAHSfoiUE%2TL-DqfAiA3]^,Z+6
%G_^;D+V#(M:e8bMMBTi=._'T=eVb'h35nTFIN!?,!-`d]7KqjHUMKQ:637)(:3u2'5GAib(,:!nc%Md/?:27n:-5%f79Jh\jU:3Q
%URm@5e&rqC5sIJePC<;d_l#bG]:+c##A9\oIGC8=naP2&qfr`["n//Q9\:a8`'Tcb;_hMM7:_rs*&,Z#)k?bp&*Qm9oU"&`q\5=,
%AEHm(1j58,h@Vlj`stb&(a=^_?NiD0V%2a$l^H>QDgu]m-7uXdneJ>nA8_U%U<.mgn0sAh($oDmX<$i<\P-ks*gNaa4_,'U0=<1:
%RRHAbB6+8!?h<cU`M)oubk9.!W@s:#-P6PSl1;WQiL:I,mShDbJ>-<K`PV<biuEn&U&?h7?OArnLR5%!YHcQC(#kLa0`YW_=d]V+
%Cr>ab0Hq=nr91B[2tIH7#iXDkiWB3X:>%o.FH5@[XGX[J5hK9OqCp%5X_HdFS:8,%jh#."MRed5X/QsD^;QK"plW)bi2V5RUt<40
%AnUCkZ2jUj(V4]pJ<=pLnPAuCbV2-X(fB:)EF!b?'*P1O>Hg8DPdr>fkL?2R/`KlRqAiphF?XY8h0?o(;N=M$K%,>2)33l2`gm-n
%o@h0P/[ispL9[7ZUotPB7Ua`6Vrr>]X(FY*q+ioJ2$uW._3KTOo9!7J?o?_C761]nG?X[0]q7#XR@*o]h?E?-<'9G`]5EYKbq`BY
%CZiUe@?)0dCY@>]9g)u[n"41d,R$k%#5Ec[&V/hKU_lC!SS-s"EXtoLf4/^WbD;&ZHC(LPi^@h4BC!S2BO?9/ohJA;Wq05(q&dHt
%h+.6o4)g$W4`=O"\6b[_OA("cm%=1V'Ri8q#g_aiM8\)CdM:R1cIPQ0Llr)jjp-R[e:=+<kJf!G4$@#Vh*`HTi\h$:%_jp_Z0=$i
%iW_"A;sO:S`&gRTq2i+_X77I^;<sp6U]7B9$&6+(]$l@777\*MKt!l17putno`>95K`JhGV8NLO;gOH76n?_s6Hq>mWjepnn/rgl
%+=cY8#nLfT.UbV?=b'?TUH)BJC!T]u3)'aTT9>)/Y38<]\@^fpgV/s[I;??TXOLLI[^N<$HCY(tabiId^_CC>c8\m5cj]LV4s]la
%c:QE04-V%+!1N\0D"4=1:OgmF_WW!$H,C$%Jq$iQTZ#;!6]gcK?b/AW[NFb._QU$=0/I*<ZD1l\]8=D+p,De`lo6@4oeFRO5$Hj0
%-G0Jcg;EEV''VH2"]CI,m9)Xbm7DWgP4Oe;PO@$7F.3OAebJ))LYV6[D(GG.YT,$c!W,df*G^orLkjHZ^U,MQ07#DLN9tlT8bl&q
%POT^+gt&nrF4*rd?(@;ejU";5&Sm!d$LjknTp#m%oZ8B;`Y4`?ogpL-$uJp4126<JWDRd!l)c\>Y`T$qi_WZn'Ca-;&;<O`)1o9F
%#iq$adY$XJ9_l.YF*S*2_;]UBnk_$2ij`VAI9[P^[>T/\a;Oa2eI""'P$i;+rIBN<D$='Kg^Y\4m,Y!gE4+WP;7[Ls(*:u\/&YAF
%4COTCKdb'/iIr>DZq@!'FEXKOnU(sOY&8KP?#lmMQL:*n[>mcA=PgdY;o6A$T=k"4Gt=IAfU-sLWn!'5RRi.<K6,s!(ZIiRdbB;W
%4h]#gE\V%i1k3Rb2\N:kR07?B2[d!,-0pF`JMFm`F$DG^/RNmjl;N)L*@6#3Ma&c([SLIA?3ufpTMLS[MC4'$G:lQ`4VZErasANW
%b.36LXM0g]<Ec$e(3Ej6pps4kes\)]'_NlSe9.hA\76Z@<G@ue)"#e1XD49Am9AZr4-as0mM&6I$^]J2oO4b^Te1LH7C55U+j\7O
%Mo[<3:l"[Z,1m/uKe:ePcjP$Ne],UEF"ZM:Y:`Mk8j/H)*VZC?J)EI^gdWa)5P+_K1A(,8Y"-:lB#<E(d"sUJLo)fj5%!),1n9rp
%g$OY'Mak":U>kK54a#)Wg.1a/3M(V7Yb,pG/'lic:9uV-/Rr?Idm_-+@k4OYC4F+XI!%#8n>t3^@:isp1YcifH!-SMH?@G->oU4c
%K6J2.[0R."e[frA7Ml:f8uZkLV^V`u;r+(r_%M^?lj!ZNI)G[A^Pfk$kphe]$dT42Hfo7(k)ElSeiOigG*8ueb1b\Y/qqJ^B^Z(:
%bMC4gh=>eY3pJ`[_a6#\Go=IN@kqjTiI+A*F^49]RllL<0LJYr2MM]sPF0@7.!TX8aiQBgi=JR0+FM,;NQ-/Uh01sFLOA`fEWXMV
%Yrgt54m&Vc0l#*D(Ch2r[h>1o&eFmsfh$Ja+RWIGKM.in@VhjK"R&re>?nd5-:]UH*_epeM?dm>dCn-HFgDa!JUKrTSsUVhgL;j(
%;XSam#7g#R,G"W^j`R'/4PuC40s$aYDY8@c>AeZ@dT[>P3pj9u`#R1]KPF-G4e2l@aYBb9nUu?6do@Ff1-W[8DiuVUn#p$d!mJ/!
%h434?qd%Ie(>4X:TBX!IcGPa%MWCEG4eBL,,@NYaDZIqVFX5sn7']L8!')%_5cT&:Xrk>H^SFkW49=?Cs4o>XnX!V^rpP=2c/8GS
%++Eh9J,c/'5Q(1=s5W#7mf34Wa1qJOf>)>)bO>GpVuQV6hu3<Ln^AS0pru&%l$*0nV_>g^kC<KK^\mM,Ieo\?s7GEFrqOs7roFZ?
%r9;CsrnAOo2b%c5F22^Dqq(lD5Q:/ArsLo9q2Y~>
%AI9_PrivateDataEnd
