%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: freeze_1.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 315 225
%%HiResBoundingBox: 0 0 314.2690 224.1302
%%CropBox: 0 0 314.2690 224.1302
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:18:26+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:18:26+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:18:26+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq0680K1K8hTkpoR8sUENjpil2KqF3ZpchAzFeDchTJRlTCcOJXyLNQtZLpzJ68Y&#xA;QBqR07j7zhIHRhEk81bkvIrUchuR3wM7bxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KoTUppVtysKl3Y8W4H4lB77VyURu15Sa2VRKYjBFwd+QoX60oP2jgpldUFl1PJFJE3&#xA;qRxw1PqmQgbe1cIFokSCO5C3PmXR4K/vxKw/ZjBav0j4fxyQxSLXLUQHVS03zNY3s5h4mBqErzIo&#xA;add/HDPCQLRj1MZGuSZXM7JavNCBIQOS77Edz92Vgbt0pULCUr5m0xSZpnZZQOPooS4PeoptX55b&#xA;4MnHGojzKCuPOjk0tLWoH7Uhqaf6q/1yY0/eWuWs7gj9H8y218fRmAguf2RX4W/1Se/tkMmEx5cm&#xA;3FqBLY7FrVtd0/TrpikfrXpADqCVAXrudx+GMMZkPJcuaMD3yRVlfWOqpHNE5Dwnk0VaMD7juMjK&#xA;JizhOOTcdExytuaDKSQCCV6juK4rbXF/U5cvgpThTvXrXFHVdil2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KrJxMYmEJCyn7LN0GEIldbLYJJm5iWPhwNA1dm9xiQiJPVKtS1S0tNYtxPIVAT4uNSBWtK&#xA;gZbCBMdmjJkEZi0z+u2xETCRSk1fTYGoNPllXCW/jG3mwq7CT65dPBMQORZJUPfboR2zMG0RbrJ7&#xA;zNFGCDWrlKHUGEK/DyLFfvp1+nIcUR0bAJy/i2WDy0XPJroSMetB/Gpx8byX8vfVXXy/aQoWkYbd&#xA;23/z+7B4pLL8uBzS+8svUAeH4ZF6AbVyyMu9plHud9U1a8VVmlYxjYIKkD/Yj4ceKI5LwzlzVjos&#xA;duFMo5FugJ/gMj4lsjhrmvpFEhNAiDc02GPNeSVOou7qkK8Qep/ict5Ddp5nZMLa0SEcm+OU9XOV&#xA;ylbbGNLZLaWOT17NzFMP5TStcIl0KKI3Ca6P5ltYYjBfc4pa1Z2qwJPy3GVTwk7hyMOoAFSTOLVt&#xA;CDvKlzGryU5kmladOuVmEu5vGWHO0XFf2MwrFcRvTrxdTT8ciYkdGYnE8i64uJY5oUWIushozj9n&#xA;EBZSII2VwQdxuMizUpnmVoxHHzVmpIa04jxwhjInoq4GTsVdirsVdirsVdirsVdirsVSy4jvrZna&#xA;OdFhZgxaVtxXqPi2plgILRISHI7KJ8zadBHSeZZZhWogBYe252/HJeCTyR+YiBud/JAXPmy7nBTT&#xA;7YrX/dsm5H0dPxyYwgcy0y1RP0hLUsy7PLdN600n2id+uWGXc0cN7lCXcdzbwiMTMbYsSsdTQE+2&#xA;SiQT5sJWBV7JlphggsyUjBllAqzb7ZXOyW7GQAp3LcWhbwkA/wCCBGGLGSvkWTZV+IYg8T0PyxWl&#xA;OWRk40QvyIBp2r3wgIJVVubtCqxuBFvyHevamR4QyEiOS8q7RtPM9FA2Zu58Bj5BNWLKSXNxJdSi&#xA;KIVSuw8fc5cBTjyNo2CKG1RVJ+NzSvifDIEkswAERvX27ZFm41pt1xVTkiEg+NFb54QUEKf1C0O/&#xA;p0+k/wBcPGWPAFum2SS65HbpVY9+ZB6AIThnL02nHC50y+71Kxs2SG4cIGU7k7AAd++YsYE8nYSy&#xA;RjsVHT9W0Vytraziv7KEMKknsWArhlCXMsceWHIFMsrblkkKyFCSRwYMKGm48cIKCLX4EuxV2Kux&#xA;V2KuxV2Kpfqt9ZWBjurh29RQRFCp+1Ub7ZZCJlsGnLOMdyx6fzDrV6SLZRbQnoR1p/rH+Ay8Yojn&#xA;u4ktROXLZRTRb26b1LiR5GPVmJ/W2E5QOTEYZS5o2LSNNt95WUsO3U/jXKzkkWwYojmqPPZopWGE&#xA;H/KbAAeqTKI5BC5NrS3UCZbmOEe33tlkNhbVPc0mKqFUKOgFB9GVtilcxNIqgdmU19gcINIkLVHk&#xA;RBV2CjxJpgpJLo7kSpxViUXpUEDfwriRSiVq0sJj41IPIVFMANspRpUt7VGX15vhiTep74DLoGUY&#xA;dTySjUtQkvZhDCKRA8UUd8uhDhFloyZOI0Fe0tVgTxc/ab+AyMpWyjGkSsbOfhXkRv8ALI2yAtTk&#xA;ciiru7dB4e5wgIJXDpgS3iq1KgcSOnfFCAFtepcPIsnpcyQXUkGhPTbLOIU1gG1RNMh6uzOT1NaY&#xA;OMp4Atm06KlYm4OOgJ2xE+9TDuTry7rrvO1rfykSkKsRboSNqV8T+OVZce1hydPms1IslOY7mqdv&#xA;Os8QkVWUGuzCh2NMJFMYysWqYGTsVdirsVdiqmbiITrAT+8ZeQHthra2PELpjfmDRdVuNRN3Agni&#xA;ooVCR8NB0oSO++ZGLJECi4efDIysbpa97f2MiG4tTG37PIFQaeFRvlnCJci08UoncI5dUlu7epQI&#xA;rdqb7ZXwUWzxTIKWFi3iqohh9N+YPqfsU6YDaRVJPcuYdQMpTkNivavw0y6IsNEjUrVl1Op3hYL3&#xA;I3p+GR4GXGjEdHUMhqp6EZBna1beIHlx5N/M25/HDa0FTAlXtLcSsWfaJN2P8MjI0zhG/clusaqb&#xA;pxbW39ypoKftH+mWY8dblqy5eLYcl1naLAtTvI3U+HsMZStEY0rRyc1rxK7kUbY7YCGQLo5ZfVde&#xA;JVQKB6/aB64kKCW1QAk9S3U4FWRyHm0TGrruD4qemEhAKsOHFq15fs06fTgZLSQOppirqgjxGKte&#xA;mnhih3FQOgxVB3FvHOpeM/EBVG8R4ZOJrZhIWyzy9dyXWkwyStzkWqOx6/Cdq/RTMbLGpOwwT4oA&#xA;lEwIzXL3C3HqQMOKxg1AIp9HbInlTKI3u9kTkWx2KuxV2KtMyqpZjRVFSfYYqShLuSR/SWBCyzbG&#xA;dOqKabg5OLVMk1XVCXusNpkbi5KySdLaNT8bAbVbwyUcfFyYTy8HP4JFDbXeo3Rubr4pW3Cn7KL2&#xA;FMuMhEUHFETM2UROkaPxRiwA3Pv7ZEJkADsp4UNMyopZjRR1JxQhvr4c8YI2lPj0H35Lh72PH3Ks&#xA;P1gkmXiAeir2+nAaSL6quBkpLAqSc0PGv2lHQ/RhtjSqASQBuT0GBkr3EaRIsfWXq58K9siDbOQA&#xA;26pfql1OtosCbRknmR3+eWQiLtqyTNUgbGa2iJaSvM9GpUAZZIEtcCAmkcscgqjBh7ZUQ2gr8CXY&#xA;qpXM6wRFz16KPE4QLYyNKdnE6oZJP72U8m/gMMiiIRNCADTY9MizWyFAhL7L3OKC5VCigxVdilQm&#xA;k9OaIn7DVQ+xNCP1ZIDZiTRVeC1BG1BSmRSt0DVPqkn1WWYQRCQuxYVB6ArsDTpkssL3TgycO10y&#xA;+1NqYq2xQxHcGMgjf5ZiG+rsI1Wy+VWaNlVuLEEBvA+OAJI2WxpLHbhS3qSqPtHapwnmgAgKdk12&#xA;0JN0oWTkaAeGGVdEQJrdEZFmsmZliZkT1GA2TxwhEjslOtau1hFDNUrNIhCW3Va06sf8muW44cTj&#xA;5svDR+xIbO2mupxcTv6txKa8iagZdKVChycWMTI2eaZTTpFH6EB2/bfxOVAXuW2UqFBCZNrV5kCx&#xA;JzQJL2UGvw/zN7nIg7s5DbzSi6c3Fytsh+BTVyPx+7Lo7C3HkbNI9VVQAooB0AytsRcMSQx+vMKk&#xA;/wB2nj75Am9g2xiALKFY1JNKV3oOmTa3Yqi7dFgi+syD4jtEvv45Am9m2IoWUKzMzFmNSdycm1Et&#xA;Yqh5bG2k6pxPiu2SEixMQUHJps8Z5Qtyp0/ZbJiY6tZgei0X15CeMgr7ON/vx4QV4iFePVYz9tCv&#xA;uN/6YDjZDI1AGu7j1nFIoz8C++J2FIG5tM4YmlkCL36nwGVE03RjZbvmEh9KNisafChXrt1P04x2&#xA;TkN7BSIBBB3B2IwsFKxkCx1481RmAU+AO2GYRAqkrlVZwvIjcKMASSh7xWlsyaEMAG4nqPHJR2LG&#xA;W4XWU/rQAn7a7N88ZCimJsL5baCXd0BPj0P3jAJEKYgoVrae0Jns5WRl3NDQ0+jrkxIHYsaMdwy7&#xA;QdUOoWAlegmQ8JadKjev0jMXJDhLsMGTjjfVFTx3LSwtFIERTWVT+0MgCGcgbFK+Bm7FVCaST6xE&#xA;iSIoFWlRvtFfEZIDZgTuGI6xqDavfelFtZwE8W7nsW+ntmVCPAPNwM2TjlQ5BfGixoFTYL0yJQNl&#xA;2KVrOi/aYD5nGkWo3l4qxMyuGkOw3qfnkoxRKSjpcJCNM3V9h8sMz0YwHVHqQGBI5AGpHjkGwLpp&#xA;nmfkx+Q7AYAKTKRKjG/MNtTixX7skQxBRFnCXYtMQI0qWI6U7DIyPczhG+brm4M0leiDZF8BjEUs&#xA;5WUPMjPGVVihPRh1GSBYENj4EHJvsjdj7d8CtqwZQw3B3BxVvFLTKrCjAEeB3xQovp9sCOUVCdx1&#xA;GS4ygwCqiKihVFAOgGRTSOI+q21P93y9fYZDmW76R5lA+oo6n2ybS2TQE+GKUJpu9sa92P8ADJz5&#xA;sIckUG2Ne2xyDJRvZfTtmIO7fCv05KIsokaClpqFLcuf2zUfIbYZndjAbI2ARpz5jnyFF7UPjlZb&#xA;BS0/bp2YfqwoVPKd1Fb39xaySqgk2jRiByZSdlr3pgz8gW3ScyGXZjOcoxXcUs8sKg8ovtEjb6MJ&#xA;DETBJC28tXuBGFlMXBuRp3wxNInC+qX+ZLuKCynCj/SmjCq9NwjNxO/35PFGz5NWokAD3sOkLR28&#xA;KoSC9WenfsMyxuXXHYKx0y57Ov0k/wBMHGGXAXfo26OxkFPmf6Y8YXgLhpL95APkMfEXw136I/4t&#xA;/wCF/tweIvhrRb6hB/dtyUdga/gcNgrUgvj1NlPGeMg+I2P3HAYdyife5r+aX4baM1/mO/8AZjwA&#xA;c14yeSJtIpI4qSGrsSx+nIyLOIpXluwkccJ2Vmpt3Y9zkRHqyM9qVIIDLyJPFFFWc9sBNMoxtRkk&#xA;SNS7mijvkgGBNIeMPckSSDjAN0j/AJvc5I7MRuisgzVoresTSyHjGB8PiT7ZEnoyEdrKpbQosZuJ&#xA;RVF+wvicEj0DKEdrKHkkaRy7GpOSApgTbSNxcMBXia0PTbCgGlslyJZW5PVwaEeFemNUplZcVB6i&#xA;tMVWzGkLnwU/qwjmg8kNpf8AvMf9Y/wyU+bGHJHSGNqcUCilG71PjlYbCUr1KQO8cSEGnUDxOwy6&#xA;AaZnoj1jCoqfsqKU+WVFsAX4pWkfFyPQDFDGtTjecM8VQ4fmnH7XXtT55PLC4rp8nDP3vR9Avhe6&#xA;ZFJzMjJWJ3YFWLJsSwNKHxzDLsYkkbphQffgZLWfZglGcCoWtMUWlusrJPoVwsqhJhH6jIDWnBuX&#xA;8Mtx7SDTls4zfNhMberLbp/LRT/wRP6syztbrRuQyC4ZWSEggkJQjwocxw5MuiGkd1KhU5BjRjXo&#xA;PHJhgV+BKtBEnpvNL9hdgOlWyJPRnGO1lQDBhUGoPcZJrVI7Uzn7IKruWboMBlTKMLdFHGZQjMES&#xA;pqw6YkqALWuFV2CnkoNAfHCEFuKJpZAi9TgJpMRZpfqN5BbRCFT8C9adWbBCJJtlkmAKCVQxyXkn&#xA;rTbQqfhTscuJrYOOBxblMMrbVa1hWST4zRFHJvlkZGmUI2W7u59Vgq7RJso/jjGNJnK/cskneRFQ&#xA;0CoKAD9eEBiZEocTBndF3dKVr03yVMbVMCVtEWrUAJ+0QNzihzSIqc2NF8TiAtrLk/6NIRvVD+Iw&#xA;x5olyS62vlgg4BSzkk+AyyUbLXGdBut/deKof9iv9uOwXcq0elRhT6jksfDYDAcjIY1psryLeCWo&#xA;/lrT8DtjxA80cJHJb9fu4mpMlR7ih+/ph4AeS8ZHNq51H1YuCKV5fb+XgMYwpEp2hZqWz8h8fAB6&#xA;dKkCtMJO1oEfUAyL8ubt59NvA55OLkuSf8tR/TNe7kCmRRw36leU4YeoWbbqnhkiQ1iMu9TttJit&#xA;7n11dj14r8/fCZ2KRHEAbbubb1YLxjFxmkjeJTyryXjsfauINELKNg7bvPreRYplkYVC70HyzOIs&#xA;OqBoo06qeoi2HU1/syHhs/ETKBfWsxdKfhrTjlZ2NNwFxtrFC2WVUj/eNSOvQ9KnbEBBK62txVYY&#xA;hQHoPxxJ6pjHoERcTxAfVoGBVP7wg7lvfIgdSzlIcghypBoRQ+ByTB2KrXujbRvIDTahp13xEbXi&#xA;pLYYJbyX1Zdo/wDPYZaTTSAZblMwAoAAoB0GVNqrHcenE6cQef7R7dsBDMSoUp4WKyUExOFNDxND&#xA;70whBdDJ6kSP/MAT88SFB2X4EqkUSOkjNIFKioU98BLKMbUSG5Df4e4wsG2VWHFgCp6g7jFVv7uV&#xA;GXqu6sPwOHkvNTjsraPdUBPid/14TIoEQEQwHosymso+ynY7eOR6suinGzmMGQcX/aA3wlAc7eP2&#xA;QKt8sCpeby7uCY4VCj260+Zy3hA5tfETyVEso4oyr/FI4oxHYe2RM0iFIS/VfUA8V+IZKHJjLms8&#xA;h3Etp5lNoHDJOro/E1UlAXBFP9U5gF3ANh6birsVQ9UW+oZm5SJ8MO/HbvkujD+LmwTTwBdyr+zR&#xA;tv8AZDM2fJ1cOa5IeEd3CN+IBB+itMF8itcwitH1FILYxsVK1PJGNP15HJCy2YslCkf9btJ0ISJQ&#xA;eishGx96AZXwkNnHE9FCaEqxjlXp2O4yQLCUa2LQJBqDQ+2KrVjRWZlFGY1YjvjaKVJHkdub1JPQ&#xA;/LAGRJPNc0PGEOxoX+wvt443unhoWh54vVheP+YbfPtkgaLAiwhNPuGBNvJsy/Zr7dsnMdWED0TG&#xA;RlY1VeIoBStd8qDaSh7uv1dyOoFR8xvko82EuSg2ohiFhQvIfuyXB3sePuXpbSyfFcty8Ihso+fj&#xA;g4u5IjfNEgACgFAOgyLNtlZTQih8D74q0CKkeGKGnkRACxoCaV7b4gKSuxSghJJaOVlHKFiSJB2J&#xA;8cnVtd0jFZWUMpqD0IyDNoAIDUk7k779cVQ0moQRsVbkWHUAf1yQgSxMwEPcakJImREI5ClT4ZMQ&#xA;YmbVmjQSqT/uyMkff/TBM2FiKKJDhi2/2TRv15XTO0h1W6ZYXk/akPEe1f7MnlPDFdPDimq+Vbu0&#xA;TzZZPDF6ET1j4E8viZCAanxNMwy7OINbvVCKimBKlb20cAcJX42LmprucJNsYxAVaCoNN/HAyeeE&#xA;fVNUnic0AZk5fTscz+cXUH0yIRqkAk0HJvte+1BlVs0O2nW1STzWvQVFP1ZPjLHgCEi+sW6idfsE&#xA;lWHbY98maOzAWN2QWd9a3cCrN1GwfuPY5jyiQdnLhMSFFVfTwFLJKpXrv/XAJpOPzQEsgjjLkEhe&#xA;tMsAtpJpXgeN2QytWJRUDrXvQfPIlnEjrydPM0shc7DoB4DECkSlZdKIQE9Ikmnx18cRayroleo2&#xA;5BFxHsw+1T8DlsD0apjqqQ6hGYC8ho67EePywGG6RPZDqJ76WrVWEHcdh/bktosN5FMIYIYhSNQP&#xA;E98rJttAAVMCVe39BAZJCGZfsxeJ7VyJvkzjQ3KlJI0jl2NScIDAm1uFUNfMRD6a/alIQfTko82E&#xA;uSLhWKoVyVQClRudsgWyIHVSkMZBVhyB6jCxKCeOW1JktzziO7RnemWAg82BBHJEQ30Eq1LBCOqs&#xA;aZExISJAoJpIBqJZirRHvsRuv9cnR4WFjiTBSF5bDj7DKm1SejuHPUVA+nG0IT1xDPMp3VgaD/KI&#xA;ywCwGu6KTam8IjRZCevIAUJqAade1chnIpv0gPESEw8qQ3Gs+ZYrt0VI7QCSTgKD4dkHzJ/DMUm3&#xA;YRjwinp2BLsVdirHNa03TrvT7q8t0KXFqruaVHIoCxUg+PbLo5DHm4ssMZ8tixGx1IMKxtVR9qNu&#xA;2ZAlGbhzhKB3Tq2nWZNtx3B6j2OQIplE21bxfuijGqVcFT4cjieagbISS3ntmMtu1Y+/sPfLAQeb&#xA;AxI5OS41GdC0dAo6kU/jjUQtyKJsZ/XhKybsNm9wchIUWUTYagdoJvqzn4TvCx8PDCdxajY0mA1C&#xA;BPhlSKg+SnK+AtviDrTpGspIxJbtvXdOv44BfVZcJFhC3MyRQszb9gp7nwyYFlrkaCVWtq9w9ekY&#xA;PxH+Ay2UqaoxtOI0SNAiCijoMpJbgFJJoFmMIb4/D+GHhNWixdKwIPTAyWxk0oxBcdSBTFAbdeQp&#xA;irYBFd64qhyPUvh/LCtf9k2S5BjzK+5mEMRY/R88AFpkaQMZ1EL66/Erb8eu3yyyo8mA4uap+lVC&#xA;/wB0Q/h2weGviKcVjJcMZZR6atuABQ/dhMqQI3zX3GmxRws6MxKitDT+mAT3SYbK6MGhQj9pQT88&#xA;hLmzHJCXd0VPBDQ/tN4ZKEepYSkk0uqQ+qEU1qQGlO6gV3PiaZGWcDYN0NLI7lLr5gbqTjL6yA0W&#xA;SlAR7DMacrLn44gRqqZz+WFPql/8O/qJVvH4Tt9GRZlmKG59eQOFEIp6ZHU+NcO1MBd+S6b1fTb0&#xA;qepT4eXSv0YhJutm4jKY19UASU+IL0riVF1u3RGUigKt17g1wJYHrnlA6fbTS6dBJO3PnEyfE8a1&#xA;B4kVqV69AffJxlXva5QMjv8ASk2nahIauoKSIeLgg8a+GZUMgkN3Ay4TA7ckyGpVA5oeQ6sD/DCc&#xA;bXxomKWK4icA70II6HpkaIZAghqxBit133b4qfPGZ3WGwUZLI+oXhfgD28K+4yQn3sTDuWrZmQt6&#xA;sxPBqePUA9ziZ0vDauulW/dmP3f0wcZT4YQzxzW1y3oVKqAxr3HvkrBG7GiDssuLhrqVAo4joATt&#xA;U9cIFIkbTOIQQxhFZQB1NRucqNltFBSub2GJGMbBpG2FDX6cMYolIBCLYzGD1wT6teQHen9cnxC6&#xA;YcJq1aPUgId1rNWgUdCfHAYbshPZoXVzCec8XwN3Hb8ceEHkjiI5oqO8tnGzgHwbY/jkTEsxILLi&#xA;/hiWiEO/YDcfTiIkoMwEOttfSVmL8HbfjUj9WS4gNmPCTu0iTz3KxXP+6xWnj92HYDZaJO6ZCtaU&#xA;oB0ypsULy39WE8FHqChU99vfJRNFjIWFUgErU0brTIsmpGXiVO9RQjFSl5d7e2Cn7ZJC/wBcsqy1&#xA;3QSDU747wRnc/wB438MqzZOgcnTYP4il0cgQOCivzXiC3Vfce+YznEJtpXlfUb8RsQbeOVgsTyKw&#xA;DAncr4gYRGwxlOiB3vTtF0e00ewS0gNRXlJI2xdz3P6hgZWmGKuxVbInONkqRyBWo6iopiEEWFtt&#xA;bpbwLEhJVe5998JNojGhS95EjQu7BVHVjsMCSaSPzJ5bTVLKX6oywXMlGYgDjKV3Afb2+0MN9EcI&#xA;u3mlLvTr8Q3yyp6TD1Ya0JHt2oclGZHVjPFGQ5BMW1G0jlT05vtqHDD9mtfhJ8RmSMwPNwZaaQ3C&#xA;Nh1KQRhVKSIBQd9vmMnwgtPERsVdNQTl8aEDvQ1/XgONImq208TXMqDdHoyH3AFcEhsmJ3RYr1B5&#xA;DIM1ojYSmTrVeND161w3sit1CWzt5H3Uqx6lD/XCJlBiC0NLtj+0/wCH9MPiFHhhTnsIovSKVJMi&#xA;qa+BwiVoMKTHK21Q+qoLn1gB0Nf9avXJcW1MeHe18yxyJwboSPwNcANJO6lJp9q5rx4n/J2wiZYm&#xA;AU4LNI7mqqSgXq1Nmr2wmVhAjRRuQbFIwVuFmBoQpUjxw3tTGt7cxHErWvvgStMx+yCBt+GKLbFx&#xA;DTeRA3+sMNFbCjLcW8YqXDnsq74RAlBkAkmqamFq23qEUjQdhhnMQHmyxYjkN9Emu44I5E9Gb1wy&#xA;BnalKMeo3zDLsok1ypmXkjyj6nDVNRjBj+1awMK8v8th4fy/fgZM+xQpXFtFcKqyioVgwoabjCDT&#xA;GUQeargZOxV2KuxVbJGkiFHUMh6qemIKCLWzzR28DSMDwQdFH0YQLRKQiLQ17pemapAn1y2WYUBX&#xA;mKOoPgwoR9+ApBSaf8v9BJ528bRuN1VmZ0+kE1/HCFkCQxDzLodxp0UDm39FgWEjQhjFSvwnmf44&#xA;SR0YRBs3uEBpdxDWUXM7q9KQL9pWY9jsfbJwyEdWvNhB5BNVke1uvTYr9YjAYqDUUI7VpmUJCWzg&#xA;SgY7jkjhqEJFSGVu4FCP1jI+GU8YaOq02WOo8Sd8Pho8R1ndR+mI3bg4Jox6UPvjKKxkjQ70pSvv&#xA;lbY2WR0Ukcu4pvuMVUpbmNNm4gjotd8IBKDJdDco8YYCg7gGtMSKUG10ko9Niv2gDTbvgCSVFbwG&#xA;BHdgtRue5I2NAMkY7sRLZROoQV6ufeg/rh8Mo4wqRahbftMw+Y/pXHgKRMOkvohx4S8qsA2x2Hjg&#xA;ECpmFKa/iUUiHNv5m2H3ZIY+9iZ9yUXerRh6Oxkcdh0H8MEssY7NkNPOe6EOsjtD/wAN/Zlf5jyb&#xA;vyXmoTancSE8D6a+A3P35CWeR5bNsNLEc93WSW84khdHkvJiot3rsDXflU5WN/e2yscuSfeW/Jt1&#xA;c6oDeoPqVuQ0h6rIeoQf8bYCKZRmJCw9NAAFBsB0GBLsVdirsVdirsVdirsVdirsVdiriAQQRUHq&#xA;MVS648uaDcEmWwgLHqyoFJ+laYqklx5CtObXNkyw3KMWhRuTxMD2cMS33HJXRsMOGwQWINDrEN3w&#xA;mMeymbiSApVTuoI3y3xJuP4WMjYIe51G1lsAFVkvTIWLKTxCknYb9KZA5LHm2xw0elKMOpXEJCzA&#xA;utAfi2ahyUMxHNhk0sZctk0j1OOKOKVZuIkrRa1Ipt8SitMv8WJcXwJg7Lv0qvARrP8AD2Vdzvv2&#xA;3w8cGPhZO5AS6uA1Ioy3iT/TK5ajuDfHR95VLfV4iaktE/iKkfeMMc8TzYT0shy3R8eqSyqwjmLh&#xA;FLPxFSFHUmgyfFBrOOfcglvHnZo7OMzSKpY1ooAHU70yBz9zZHSkbyNJedTvCa8wB4ADKfGk5Q0s&#xA;O5fHql0WCnhuacmFAPnQ4RnkxOkh5oi8v5ba5aGscoWn7xKkbivjkjnIYR0sSL3Xz39h9dC+o8tj&#xA;x+LgOLFqe/E0wSzWfJlDT0L/AIkBp8KTX0aGVYVryDybj4dwD0GUxG7kTNBO4/J3mLVJ5LkwpAkj&#xA;VDyH01I6VC/E9PoxJ3TEUEWPyz1egrdW4PcAuf8AjXAyTrT/ACBZWc1vI7G5dSGlZmKAEfyBafic&#xA;kKa5Ak+TK4oo4kCRqFUdhgJtkAByXYEqcEkrqxkj9MhiFFa1A6HCQxiSeapgZOxV2KuxV2KuxVQg&#xA;tTHPLM0jOZDsD0UVrQZInZhGFElXyLNRuLd5XiZZTGI25MB+0PDCDTCUbpWwM1O5h9eB4uXHmKcs&#xA;INFjKNimrWFobdImcuVFORxJsrCNClC90bS72AwXNskkdSQKUIJ7gihB+WAlIAHJKY/IHlpH5GB3&#xA;H8rSNT8CDilMJPLmiyqRPaRzE/tuAXA8A3UDCTbGMREUGL61+XMNfV0yVlBNDbuOYFfBq1p864gJ&#xA;lKkqn8ueZ7S5huotOVWiXgBDxcE0ILFVNamuPFujgsUUHD5W8w3l2zS2ksPqMzSSslACanpt+GPM&#xA;pOw2Tu3/ACxnaDlPfLHMRUIsZZR8ySp/DAm0A/kbXrRp9yY/Tbi9uS3M/wAhX4W3+WEMZe60ug8r&#xA;eZXekdjMhOxLD0xQ+7FRgZp9pH5cSzAS6hdKkf8AvuAh2+Rc/CPxxpANp235eeXQlOM1QOoff9VM&#xA;VtAQ/l3pVzF6kVxcwgkjjJwY7fJVwkUxhKxbY/LG05EtfSFT0ARQf1nAyTjSfJmi6a6yxo81wpBW&#xA;aU1IINdgAAPuxUi03ukunCfV5BGQwL17j7jhFdWEwTyVsDN2KuxVTnNwFX0ApbkOXL+XvTCKYyvo&#xA;qYGTsVdirsVdirsVdirsVdirsVUre4ScMUBHBih5Cm4wkUxjK1XAyWyK7RuqHi5BCt4GmxxCDyWW&#xA;qTpAqzuHkFasPnhPkiIIG6rgZIPU5rtIlW2Ul3NCwFaDJwA6tWUkDZFqvFQtSaClT1PzyDaG8VWT&#xA;SrFE8rAkICSB12wgWiRoWpxSrd2nNC0YkBAPRh2wkUWIPEFtxbztZ+jDKRIAB6jE1NPEjEEWsonh&#xA;oFUiicWyxTNzbjxdvGuAndIG1Fq0tIrWL046lSeRLbmpxJtYQERQVsDJ2KqcVzBMzrG4ZozRxvsc&#xA;JBDESB5KmBk7FVK6Mwt3MArLT4PnhHNjK62WWDXTW4NyKSVPYA09wMMqvZGMmt0RkWbsVdirsVdi&#xA;rsVdirsVdirsVdirsVdiqncRNLEY1cxk/tL1wg0xkLCoBQAVrTucDJ2KuxVougYKWAZugJ3OKLbx&#xA;S7FXYq4ADYYqh4b6Ka5lt1Vg0Vak9DQ0OSMaFsI5ASQiMizdirsVdiqnFBBGXaNQpc1cjucJLERA&#xA;5KmBkhb8XxjX6p9vl8XTp9OSjXVrycVelEry4jl9qm9PHItjeKuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxVSltYJZUldavHuhqdt69sIJYmAJtVwMnYqtkXnGyVK8gRyHUVHUYhBFrLWAw&#xA;QLEXMhWvxH3NcJNohGhSoFUEkAAnqe5wMqbxVplDKVPQihpt+rFSskLRQH0l5si/AnjTCObE7DZu&#xA;JnkhUyKUZh8S13FcSkbjduONY41jQUVRQYCVAoLsUuxV2KuxV2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:536177ed-efd5-b046-bf32-e6fa47ff871d</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:536177ed-efd5-b046-bf32-e6fa47ff871d</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:71ad8656-4792-45d2-8f7f-8ae4641badb7</stRef:instanceID>
            <stRef:documentID>xmp.did:2be6274d-8182-ae49-b6c2-c4441239a92a</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2be6274d-8182-ae49-b6c2-c4441239a92a</stEvt:instanceID>
                  <stEvt:when>2018-03-08T14:02:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:536177ed-efd5-b046-bf32-e6fa47ff871d</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:18:26+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>314.268911</stDim:w>
            <stDim:h>224.130127</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -224.13 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 224.13 li
314.269 224.13 li
314.269 0 li
cp
clp
148.701 194.824 mo
146.2 194.824 143.733 194.372 141.332 193.508 cv
141.28 193.517 li
140.965 193.542 140.658 193.554 140.355 193.554 cv
134.698 193.554 131.022 189.402 125.724 188.113 cv
124.822 187.894 123.933 187.804 123.051 187.804 cv
121.08 187.804 119.149 188.252 117.209 188.7 cv
115.269 189.148 113.321 189.596 111.314 189.596 cv
110.05 189.596 108.762 189.418 107.44 188.95 cv
102.119 187.066 98.7436 182.42 93.7104 180.126 cv
89.8252 178.356 85.3042 178.619 81.164 177.734 cv
78.3345 177.129 75.5737 176.141 72.9912 174.896 cv
69.7011 173.311 66.936 170.425 63.27 169.827 cv
60.2353 169.332 57.6401 169.365 54.8403 167.942 cv
48.7549 164.85 45.1738 158.951 38.8935 156.071 cv
33.5161 153.605 29.4731 151.061 28.4234 145.125 cv
27.3818 139.233 29.107 133.648 26.7222 127.899 cv
26.5512 127.487 26.6626 127.104 26.9175 126.814 cv
26.541 124.602 26.543 122.051 26.3062 120.556 cv
25.7402 116.994 24.6025 113.042 25.2495 109.429 cv
26.0996 104.681 30.0703 99.2358 34.3295 95.7866 cv
34.0903 95.7183 33.8496 95.6543 33.6035 95.6026 cv
32.3613 95.2588 31.8985 93.7525 32.8384 92.875 cv
37.1143 88.8838 41.6333 85.1534 46.164 81.4223 cv
48.4033 79.5781 50.7007 77.0918 53.3359 75.4023 cv
50.3716 74.9194 47.4033 74.4424 44.4634 73.8677 cv
42.5927 73.5025 40.5659 73.3086 40.2227 71.2646 cv
39.5571 67.3047 46.2612 63.5777 49.3247 62.2227 cv
55.8823 59.3218 63.3242 57.9902 70.2617 56.1353 cv
77.0605 54.3169 87.7783 53.2363 90.9297 46.3584 cv
91.1755 45.8218 91.9037 45.5123 92.5379 45.5123 cv
92.696 45.5123 92.8483 45.5315 92.9858 45.5713 cv
96.1558 46.4868 98.5503 48.0801 100.314 50.5532 cv
102.104 49.9116 104.005 49.4902 105.637 48.606 cv
109.886 46.3027 108.059 44.2251 107.9 40.9366 cv
107.846 39.8255 108.874 39.1787 109.909 39.1787 cv
110.042 39.1787 110.176 39.1895 110.307 39.2114 cv
113.387 39.7246 115.888 40.5781 118.594 41.7837 cv
118.735 41.6943 118.897 41.6191 119.095 41.5757 cv
128.924 39.415 138.729 38.4453 148.389 35.4111 cv
148.55 35.3606 148.732 35.336 148.92 35.336 cv
149.459 35.336 150.051 35.5361 150.364 35.9024 cv
152.098 37.9341 153.877 39.9233 155.689 41.8916 cv
163.63 39.4883 171.604 37.1489 179.602 34.9219 cv
181.153 34.49 182.578 34.0391 184.006 34.0391 cv
184.96 34.0391 185.914 34.2401 186.909 34.7818 cv
190.245 36.5977 191.774 39.2021 195.91 40.0869 cv
196.131 40.1562 li
197.498 37.9341 199.994 36.3838 202.317 35.0303 cv
202.585 34.874 202.948 34.7835 203.305 34.7835 cv
203.632 34.7835 203.955 34.8595 204.198 35.0303 cv
208.794 38.2749 213.249 42.1064 218.185 44.8853 cv
223.034 47.6138 229.616 47.0937 235.121 47.4731 cv
237.712 47.6518 240.371 47.7158 241.152 50.5254 cv
241.873 53.1162 240.763 56.6089 239.77 59.6748 cv
243.025 58.8106 246.282 57.9566 249.54 57.106 cv
251.73 56.5347 254.148 55.6316 256.496 55.6316 cv
257.285 55.6316 258.066 55.7336 258.828 55.9844 cv
261.473 56.855 263.447 59.2222 265.394 61.0122 cv
268.658 64.0151 271.908 67.0327 275.161 70.0469 cv
276.01 70.834 275.944 71.8042 275.439 72.5263 cv
275.862 74.189 276.239 75.8579 276.598 77.5376 cv
277.14 80.0762 276.803 82.126 279.542 83.2549 cv
283.138 84.7368 287.104 85.4067 290.714 86.8643 cv
296.726 89.2915 297.607 96.8349 298.28 102.271 cv
298.487 103.936 298.725 105.766 298.752 107.576 cv
298.811 107.639 li
301.905 111.561 301.85 115.384 301.596 120.032 cv
301.38 123.979 303.742 127.201 302.322 131.148 cv
301.616 133.11 300.468 134.955 299.589 136.852 cv
298.202 139.847 298.86 141.52 299.016 144.633 cv
299.182 147.964 296.63 150.653 293.991 152.536 cv
289.911 155.448 284.905 155.817 281.758 159.82 cv
279.06 163.252 275.569 166.196 273.368 169.934 cv
269.366 176.729 264.311 179.402 256.952 180.797 cv
256.575 181.667 255.728 182.354 254.389 182.396 cv
249.117 182.56 243.708 182.232 238.778 184.331 cv
234.296 186.238 231.466 189.605 226.408 190.434 cv
224.178 190.799 221.881 190.935 219.572 190.935 cv
216.555 190.935 213.518 190.703 210.589 190.447 cv
207.216 190.151 203.818 189.417 200.488 189.417 cv
198.308 189.417 196.157 189.732 194.062 190.691 cv
188.754 193.12 183.94 194.768 178.848 194.768 cv
175.728 194.768 172.502 194.149 168.997 192.711 cv
166.681 191.761 165.138 191.111 163.371 191.111 cv
162.268 191.111 161.078 191.365 159.559 191.956 cv
157.531 192.746 155.667 193.76 153.513 194.263 cv
151.901 194.64 150.294 194.824 148.701 194.824 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.654902 .648627 .64549 rgb
f
21.2881 67.6465 mo
21.0425 66.5518 20.1299 66.4092 19.2222 66.8062 cv
18.7939 66.9937 18.5259 67.5796 18.5259 68.0205 cv
18.5259 68.5762 18.8774 69.0996 19.3901 69.3057 cv
20.4785 69.7432 21.5405 68.772 21.2881 67.6465 cv
cp
.764706 .890196 .921569 rgb
f
26.0581 56.7109 mo
25.5005 55.4966 23.4668 56.0977 23.5469 57.3911 cv
23.5806 57.937 23.584 58.4873 23.8667 58.9746 cv
24.1929 59.5381 24.852 59.9067 25.5107 59.7251 cv
26.1221 59.5566 26.521 58.9561 26.5493 58.3433 cv
26.5767 57.7388 26.3027 57.2432 26.0581 56.7109 cv
cp
f
34.5952 64.0732 mo
34.5693 63.501 34.2881 63.0469 33.8423 62.7578 cv
33.6099 62.5601 33.2353 62.2817 33.1196 62.3867 cv
33.0737 62.3813 li
33.0718 62.3809 li
33.064 62.3804 li
32.3701 61.874 31.3579 61.7915 30.728 62.4771 cv
30.1543 63.1025 29.958 64.3477 30.728 64.9468 cv
31.124 65.2539 31.5024 65.5264 31.9927 65.6685 cv
32.2109 65.7319 32.5288 65.7969 32.7309 65.7881 cv
32.8838 65.7676 33.0366 65.7471 33.1894 65.7266 cv
33.6606 65.5513 33.7427 65.5073 33.436 65.5952 cv
34.0674 65.3467 34.6279 64.8135 34.5952 64.0732 cv
cp
f
21.1225 74.1699 mo
20.582 73.3315 19.6382 73.1362 18.7656 73.5518 cv
18.2602 73.7925 li
17.4394 74.1836 17.1606 75.4229 17.6387 76.1641 cv
18.1665 76.9829 19.1499 77.2368 20.0102 76.7856 cv
20.1748 76.6992 20.3398 76.6128 20.5049 76.5264 cv
21.3042 76.1074 21.6108 74.9268 21.1225 74.1699 cv
cp
f
8.39403 88.8208 mo
7.46044 88.4268 6.35692 88.7739 5.833 89.6597 cv
5.49071 90.2388 5.17968 90.8237 5.23144 91.5229 cv
5.29491 92.3687 5.7036 93.084 6.51024 93.4243 cv
7.2539 93.7383 8.21142 93.6035 8.78271 92.9941 cv
9.28661 92.457 9.48046 91.9307 9.58153 91.2397 cv
9.73095 90.2148 9.41308 89.2505 8.39403 88.8208 cv
cp
f
6.59374 108.195 mo
5.99462 107.604 4.88866 107.178 4.05614 107.525 cv
3.80321 107.63 3.53124 107.703 3.28173 107.812 cv
3.19677 107.854 li
3.10009 107.858 li
2.77782 107.885 2.458 107.912 2.13866 107.972 cv
2.13573 107.973 li
2.00976 107.902 li
1.37108 107.634 .533194 108.082 .209951 108.635 cv
-.155771 109.259 -.0249119 110.047 .458975 110.566 cv
.658682 110.78 .501944 110.587 .722158 110.841 cv
.708975 110.825 .809072 110.953 .886709 111.05 cv
.9121 111.082 li
.942373 111.12 li
1.05175 111.256 1.27685 111.532 1.35106 111.596 cv
1.63231 111.836 1.90087 111.994 2.23876 112.137 cv
3.03466 112.473 3.87401 112.704 4.7495 112.648 cv
5.85155 112.578 7.01024 111.892 7.26464 110.733 cv
7.47265 109.786 7.30028 108.893 6.59374 108.195 cv
cp
f
10.7412 102.446 mo
10.584 102.412 li
9.5205 102.18 8.44726 102.905 8.44726 104.039 cv
8.44726 105.167 9.51952 105.898 10.584 105.667 cv
10.7412 105.632 li
12.3164 105.29 12.3174 102.789 10.7412 102.446 cv
cp
f
13.7886 113.365 mo
13.3452 112.607 12.3208 112.514 11.6904 113.095 cv
11.2993 113.455 11.126 113.751 11.0591 114.289 cv
11.0137 114.653 11.2959 115.044 11.5918 115.218 cv
12.0571 115.492 12.4868 115.421 12.9902 115.327 cv
13.8516 115.167 14.1958 114.061 13.7886 113.365 cv
cp
f
2.30175 127.72 mo
.175283 127.72 .171865 131.025 2.30175 131.025 cv
4.42821 131.025 4.43163 127.72 2.30175 127.72 cv
cp
f
11.8535 152.502 mo
11.5532 152.226 11.1948 152.003 10.9053 151.72 cv
10.6382 151.459 10.4038 151.145 10.1587 150.864 cv
9.35644 149.944 7.83983 150.379 7.40429 151.411 cv
6.95702 152.471 7.73583 153.818 8.95751 153.765 cv
9.32323 153.749 9.70556 153.7 10.0708 153.717 cv
10.4756 153.735 10.8833 153.836 11.29 153.863 cv
11.9761 153.908 12.3467 152.957 11.8535 152.502 cv
cp
f
21.8633 157.421 mo
21.6831 157.029 21.4189 156.685 20.9463 156.627 cv
20.5727 156.583 20.3013 156.769 20.0688 157.012 cv
19.9512 157.063 li
19.7231 157.198 19.542 157.379 19.4072 157.607 cv
19.2812 157.798 19.1694 158.02 19.0796 158.23 cv
18.8921 158.666 18.8984 158.772 18.6431 159.049 cv
18.166 159.565 18.084 160.348 18.5322 160.911 cv
18.9346 161.416 19.7832 161.7 20.3613 161.276 cv
20.9458 160.848 21.4971 160.35 21.8813 159.726 cv
21.9961 159.54 22.0806 159.326 22.1328 159.112 cv
22.1518 158.972 22.1704 158.833 22.1894 158.692 cv
22.1724 158.844 22.1782 158.805 22.2075 158.575 cv
22.2446 158.081 22.1108 157.759 21.8633 157.421 cv
cp
f
21.1411 143.765 mo
20.5063 144.213 20.0723 144.776 20.0757 145.596 cv
20.0781 146.204 20.3105 146.841 20.7969 147.226 cv
21.2876 147.614 21.813 147.838 22.4502 147.663 cv
22.9834 147.516 23.5322 147.044 23.6372 146.476 cv
23.7104 146.081 23.8428 145.717 23.8159 145.3 cv
23.7373 144.073 22.3232 142.929 21.1411 143.765 cv
cp
f
38.3017 165.527 mo
36.3564 165.527 36.353 168.551 38.3017 168.551 cv
40.2471 168.551 40.2505 165.527 38.3017 165.527 cv
cp
f
44.9756 188.165 mo
44.9258 187.673 44.6567 187.184 44.1357 187.062 cv
43.9097 187.008 43.7065 187.01 43.5 187.031 cv
42.4692 186.996 41.6074 187.893 40.8022 188.546 cv
40.0996 189.117 40.165 190.398 40.8022 190.982 cv
41.5015 191.625 42.5439 191.65 43.2383 190.982 cv
43.9243 190.324 45.022 189.494 44.9673 188.455 cv
44.98 188.359 44.9853 188.262 44.9756 188.165 cv
cp
f
49.1343 172.869 mo
48.4311 172.894 47.8032 173.187 47.3115 173.715 cv
46.8642 174.195 46.6128 174.739 46.3638 175.335 cv
46.0039 176.195 47.0889 177.281 47.9497 176.92 cv
48.5449 176.671 49.0889 176.42 49.5688 175.973 cv
50.0972 175.481 50.3901 174.853 50.415 174.149 cv
50.439 173.475 49.8091 172.845 49.1343 172.869 cv
cp
f
56.9687 172.81 mo
56.2446 172.81 56.2436 173.935 56.9687 173.935 cv
57.6924 173.935 57.6933 172.81 56.9687 172.81 cv
cp
f
67.8218 188.861 mo
67.6059 188.078 66.8057 187.413 65.9687 187.451 cv
64.125 187.533 63.4883 189.725 64.8057 190.855 cv
64.8369 190.949 65.0176 191.173 65.0557 191.22 cv
65.2812 191.495 65.6035 191.678 65.9687 191.678 cv
66.2666 191.678 66.581 191.546 66.79 191.337 cv
66.8906 191.237 67.0317 191.06 67.0864 190.918 cv
67.7051 190.431 68.0415 189.659 67.8218 188.861 cv
cp
f
70.9687 202.802 mo
68.9477 202.802 68.9443 205.943 70.9687 205.943 cv
72.9893 205.943 72.9927 202.802 70.9687 202.802 cv
cp
f
99.9385 198.713 mo
99.7383 198.62 99.5469 198.538 99.3506 198.473 cv
99.2295 198.397 li
98.751 198.077 98.0366 198.169 97.6074 198.511 cv
97.1851 198.848 97.0225 199.32 97.0669 199.835 cv
97.0581 199.906 97.0498 199.976 97.0376 200.087 cv
97.0391 200.182 97.0425 200.277 97.0469 200.373 cv
97.1025 201.81 98.6421 202.791 99.9385 202.032 cv
101.096 201.354 101.283 199.339 99.9385 198.713 cv
cp
f
88.6352 186.587 mo
87.4795 186.639 86.1919 187.613 86.3169 188.906 cv
86.3833 189.588 86.4809 190.161 86.814 190.771 cv
87.563 192.143 89.7075 192.143 90.4565 190.771 cv
90.7876 190.164 90.8872 189.591 90.9536 188.906 cv
91.0708 187.695 89.8032 186.535 88.6352 186.587 cv
cp
f
87.3018 207.082 mo
86.2783 207.082 85.2974 207.982 85.3447 209.039 cv
85.3921 210.1 86.2046 210.996 87.3018 210.996 cv
88.3257 210.996 89.3061 210.096 89.2588 209.039 cv
89.2114 207.979 88.3989 207.082 87.3018 207.082 cv
cp
f
126.319 216.121 mo
126.004 215.527 125.321 215.226 124.68 215.215 cv
124.512 215.212 li
123.782 214.889 122.888 214.951 122.31 215.581 cv
121.653 216.295 121.451 217.677 122.31 218.365 cv
123.386 219.228 125.013 219.529 126.031 218.353 cv
126.591 217.706 126.725 216.887 126.319 216.121 cv
cp
f
128.52 198.14 mo
128.338 198.037 128.156 197.934 127.974 197.83 cv
127.54 197.583 127.106 197.908 127.057 198.356 cv
127.033 198.578 127.009 198.799 126.985 199.021 cv
126.972 199.144 126.992 199.254 127.026 199.359 cv
126.709 199.065 126.302 198.897 125.848 199.033 cv
125.125 199.249 124.718 199.821 124.371 200.457 cv
124.088 200.975 123.772 201.468 123.457 201.967 cv
122.722 203.126 123.442 204.714 124.717 205.065 cv
126.082 205.441 127.306 204.387 127.387 203.031 cv
127.417 202.529 127.422 202.072 127.481 201.649 cv
127.565 201.051 127.647 200.353 127.351 199.797 cv
127.682 200.04 128.165 200.108 128.52 199.901 cv
129.174 199.518 129.188 198.52 128.52 198.14 cv
cp
f
120.998 186.897 mo
120.942 186.405 120.609 185.949 119.969 185.949 cv
119.61 185.949 119.346 186.094 119.17 186.306 cv
117.343 186.755 117.493 189.832 119.635 189.832 cv
121.317 189.832 121.769 187.93 120.998 186.897 cv
cp
f
157.635 202.24 mo
154.891 202.24 154.886 206.505 157.635 206.505 cv
160.38 206.505 160.384 202.24 157.635 202.24 cv
cp
f
157.969 216.737 mo
155.435 216.737 155.431 220.674 157.969 220.674 cv
160.502 220.674 160.506 216.737 157.969 216.737 cv
cp
f
170.635 212.064 mo
167.664 212.064 167.659 216.681 170.635 216.681 cv
173.606 216.681 173.611 212.064 170.635 212.064 cv
cp
f
176.302 197.637 mo
173.21 197.637 173.205 202.441 176.302 202.441 cv
179.394 202.441 179.398 197.637 176.302 197.637 cv
cp
f
187.969 195.491 mo
185.118 195.491 185.113 199.92 187.969 199.92 cv
190.819 199.92 190.824 195.491 187.969 195.491 cv
cp
f
197.218 216.802 mo
197.011 216.745 196.805 216.689 196.598 216.632 cv
195.899 216.441 195.188 216.985 195.188 217.706 cv
195.188 218.425 195.899 218.97 196.598 218.779 cv
196.805 218.723 197.011 218.667 197.218 218.61 cv
198.109 218.366 198.11 217.046 197.218 216.802 cv
cp
f
206.302 220.615 mo
204.04 220.615 204.036 224.13 206.302 224.13 cv
208.564 224.13 208.568 220.615 206.302 220.615 cv
cp
f
217.691 215.451 mo
216.741 216.27 216.021 217.302 215.281 218.305 cv
214.661 219.144 216.196 220.084 216.697 219.133 cv
217.274 218.039 217.879 216.95 218.2 215.748 cv
218.283 215.439 217.915 215.259 217.691 215.451 cv
cp
f
218.969 203.953 mo
216.284 203.953 216.28 208.125 218.969 208.125 cv
221.653 208.125 221.657 203.953 218.969 203.953 cv
cp
f
207.635 192.246 mo
205.328 192.246 205.324 195.832 207.635 195.832 cv
209.942 195.832 209.946 192.246 207.635 192.246 cv
cp
f
213.969 188.322 mo
213.969 188.422 li
213.969 188.322 li
cp
f
234.445 188.232 mo
234.384 188.092 234.324 187.951 234.263 187.811 cv
233.974 187.137 232.975 187.125 232.515 187.585 cv
232.052 188.048 232.068 189.045 232.74 189.334 cv
232.881 189.394 233.021 189.455 233.162 189.515 cv
234.051 189.898 234.828 189.124 234.445 188.232 cv
cp
f
56.6352 31.8945 mo
55.6445 31.8945 55.0151 32.4502 54.7353 33.1587 cv
54.2949 32.96 53.7871 32.9077 53.3017 32.8843 cv
53.1572 32.877 53.019 32.9033 52.8852 32.9429 cv
53.2163 32.6274 53.4267 32.1938 53.4048 31.7056 cv
53.3603 30.7192 52.6274 29.9712 51.6352 29.936 cv
51.4687 29.9302 li
50.5395 29.8979 49.6514 30.7705 49.6933 31.7056 cv
49.7349 32.6396 50.4741 33.5161 51.4687 33.481 cv
51.6352 33.4751 li
51.8418 33.4678 52.0449 33.4194 52.2378 33.3457 cv
51.978 33.6235 51.8135 33.9941 51.8135 34.3726 cv
51.8135 35.1479 52.4951 35.8999 53.3017 35.8608 cv
53.896 35.8315 54.5224 35.7588 55.0161 35.4204 cv
55.3594 35.8711 55.8945 36.1836 56.6352 36.1836 cv
59.395 36.1836 59.3994 31.8945 56.6352 31.8945 cv
cp
f
60.3017 32.8843 mo
58.3867 32.8843 58.3833 35.8608 60.3017 35.8608 cv
62.2173 35.8608 62.2202 32.8843 60.3017 32.8843 cv
cp
f
35.3017 39.8257 mo
33.311 39.8257 33.3081 42.9194 35.3017 42.9194 cv
37.2925 42.9194 37.2959 39.8257 35.3017 39.8257 cv
cp
f
67.9687 22.5742 mo
66.0835 22.5742 66.0801 25.5039 67.9687 25.5039 cv
69.8535 25.5039 69.8569 22.5742 67.9687 22.5742 cv
cp
f
77.9687 17.6558 mo
77.9687 17.7559 li
77.9687 17.6558 li
cp
f
84.3018 20.1406 mo
82.0127 20.1406 81.8652 23.4741 83.8691 23.894 cv
82.0586 24 82.0854 26.8608 83.9687 26.8608 cv
85.7451 26.8608 85.8735 24.3037 84.352 23.9326 cv
86.7417 23.8779 86.7309 20.1406 84.3018 20.1406 cv
cp
f
93.3018 21.6558 mo
93.3018 21.7559 li
93.3018 21.6558 li
cp
f
94.6509 24.7397 mo
94.6352 24.6558 li
94.5884 24.7041 li
94.5049 24.6689 94.4111 24.646 94.3018 24.646 cv
93.3667 24.646 93.3652 26.0991 94.3018 26.0991 cv
95.0976 26.0991 95.2104 25.0527 94.6509 24.7397 cv
cp
f
97.3018 14.9893 mo
97.3018 15.0894 li
97.3018 14.9893 li
cp
f
107.635 10.8843 mo
105.72 10.8843 105.717 13.8608 107.635 13.8608 cv
109.55 13.8608 109.554 10.8843 107.635 10.8843 cv
cp
f
114.302 15.5508 mo
112.387 15.5508 112.383 18.5273 114.302 18.5273 cv
116.217 18.5273 116.22 15.5508 114.302 15.5508 cv
cp
f
124.302 12.9712 mo
122.07 12.9712 122.066 16.4399 124.302 16.4399 cv
126.534 16.4399 126.538 12.9712 124.302 12.9712 cv
cp
f
133.302 6.65576 mo
133.302 6.75586 li
133.302 6.65576 li
cp
f
139.302 10.6558 mo
139.302 10.7559 li
139.302 10.6558 li
cp
f
148.635 11.3223 mo
148.635 11.4224 li
148.635 11.3223 li
cp
f
158.969 15.0103 mo
158.764 15.0103 158.573 15.0322 158.393 15.0674 cv
158.177 14.3613 157.594 13.7837 156.635 13.7837 cv
154.255 13.7837 154.168 17.334 156.374 17.6016 cv
156.327 18.9834 157.187 20.4009 158.969 20.4009 cv
162.437 20.4009 162.443 15.0103 158.969 15.0103 cv
cp
f
156.302 18.6558 mo
156.302 18.7559 li
156.302 18.6558 li
cp
f
161.969 10.9375 mo
160.551 10.9375 160.548 13.1406 161.969 13.1406 cv
163.386 13.1406 163.389 10.9375 161.969 10.9375 cv
cp
f
137.648 2.02637 mo
137.501 1.83984 137.354 1.65381 137.207 1.46729 cv
136.682 .802246 135.665 1.53174 135.855 2.25391 cv
136.042 2.96143 li
136.2 3.5625 136.924 3.84521 137.454 3.53564 cv
138.025 3.20117 138.025 2.50488 137.648 2.02637 cv
cp
f
164.635 0 mo
162.011 0 162.007 4.07813 164.635 4.07813 cv
167.259 4.07813 167.264 0 164.635 0 cv
cp
f
179.302 3.73682 mo
176.768 3.73682 176.764 7.67432 179.302 7.67432 cv
181.835 7.67432 181.84 3.73682 179.302 3.73682 cv
cp
f
190.969 9.13525 mo
188.948 9.13525 188.944 12.2759 190.969 12.2759 cv
192.989 12.2759 192.993 9.13525 190.969 9.13525 cv
cp
f
203.302 10.2056 mo
201.372 10.2056 201.368 13.2056 203.302 13.2056 cv
205.232 13.2056 205.235 10.2056 203.302 10.2056 cv
cp
f
219.635 18.8843 mo
217.72 18.8843 217.717 21.8608 219.635 21.8608 cv
221.55 21.8608 221.554 18.8843 219.635 18.8843 cv
cp
f
230.969 12.686 mo
229.656 12.686 229.654 14.7251 230.969 14.7251 cv
232.281 14.7251 232.283 12.686 230.969 12.686 cv
cp
f
272.302 30.1069 mo
270.673 30.1069 270.67 32.6382 272.302 32.6382 cv
273.931 32.6382 273.933 30.1069 272.302 30.1069 cv
cp
f
262.302 24.1235 mo
260.266 24.1235 260.263 27.2876 262.302 27.2876 cv
264.338 27.2876 264.341 24.1235 262.302 24.1235 cv
cp
f
242.302 24.3569 mo
239.708 24.3569 239.704 28.3882 242.302 28.3882 cv
244.896 28.3882 244.9 24.3569 242.302 24.3569 cv
cp
f
246.635 29.2173 mo
244.72 29.2173 244.717 32.1938 246.635 32.1938 cv
248.55 32.1938 248.554 29.2173 246.635 29.2173 cv
cp
f
270.969 31.9893 mo
270.969 32.0894 li
270.969 31.9893 li
cp
f
276.302 45.5508 mo
274.387 45.5508 274.383 48.5273 276.302 48.5273 cv
278.217 48.5273 278.22 45.5508 276.302 45.5508 cv
cp
f
279.302 50.3687 mo
276.723 50.3687 276.719 54.3765 279.302 54.3765 cv
281.881 54.3765 281.885 50.3687 279.302 50.3687 cv
cp
f
273.969 57.6558 mo
273.969 57.7559 li
273.969 57.6558 li
cp
f
276.635 57.5508 mo
274.72 57.5508 274.717 60.5273 276.635 60.5273 cv
278.55 60.5273 278.554 57.5508 276.635 57.5508 cv
cp
f
292.302 58.9893 mo
292.302 59.0894 li
292.302 58.9893 li
cp
f
294.969 60.6968 mo
292.812 60.6968 292.809 64.0483 294.969 64.0483 cv
297.125 64.0483 297.128 60.6968 294.969 60.6968 cv
cp
f
305.969 62.146 mo
303.103 62.146 303.099 66.5991 305.969 66.5991 cv
308.834 66.5991 308.839 62.146 305.969 62.146 cv
cp
f
301.302 70.8071 mo
298.859 70.8071 298.854 74.604 301.302 74.604 cv
303.745 74.604 303.749 70.8071 301.302 70.8071 cv
cp
f
295.969 78.9893 mo
295.969 79.0894 li
295.969 78.9893 li
cp
f
307.969 84.8188 mo
305.541 84.8188 305.537 88.5923 307.969 88.5923 cv
310.396 88.5923 310.4 84.8188 307.969 84.8188 cv
cp
f
311.302 100.884 mo
309.387 100.884 309.383 103.861 311.302 103.861 cv
313.217 103.861 313.22 100.884 311.302 100.884 cv
cp
f
313.969 117.322 mo
313.969 117.422 li
313.969 117.322 li
cp
f
300.302 136.307 mo
299.789 136.307 299.788 137.104 300.302 137.104 cv
300.814 137.104 300.815 136.307 300.302 136.307 cv
cp
f
307.112 100.31 mo
306.723 100.173 306.387 100.207 305.989 100.278 cv
305.492 100.369 304.964 100.896 304.875 101.393 cv
304.802 101.791 304.769 102.126 304.906 102.516 cv
305.346 103.762 306.897 104.313 307.903 103.307 cv
308.909 102.301 308.358 100.75 307.112 100.31 cv
cp
f
307.302 111.656 mo
307.302 111.756 li
307.302 111.656 li
cp
f
313.635 119.049 mo
312.791 119.049 312.789 120.362 313.635 120.362 cv
314.479 120.362 314.481 119.049 313.635 119.049 cv
cp
f
306.635 133.656 mo
306.635 133.756 li
306.635 133.656 li
cp
f
308.302 141.112 mo
306.251 141.112 306.248 144.299 308.302 144.299 cv
310.353 144.299 310.356 141.112 308.302 141.112 cv
cp
f
302.302 156.662 mo
300.1 156.662 300.096 160.083 302.302 160.083 cv
304.504 160.083 304.507 156.662 302.302 156.662 cv
cp
f
291.302 153 mo
288.678 153 288.673 157.078 291.302 157.078 cv
293.926 157.078 293.93 153 291.302 153 cv
cp
f
288.302 162.322 mo
288.302 162.422 li
288.302 162.322 li
cp
f
286.969 181.551 mo
285.053 181.551 285.05 184.527 286.969 184.527 cv
288.884 184.527 288.887 181.551 286.969 181.551 cv
cp
f
282.635 190.217 mo
280.72 190.217 280.717 193.194 282.635 193.194 cv
284.55 193.194 284.554 190.217 282.635 190.217 cv
cp
f
265.969 173.484 mo
262.681 173.484 262.675 178.594 265.969 178.594 cv
269.256 178.594 269.262 173.484 265.969 173.484 cv
cp
f
261.635 179.462 mo
259.177 179.462 259.173 183.283 261.635 183.283 cv
264.093 183.283 264.098 179.462 261.635 179.462 cv
cp
f
261.635 195.322 mo
261.635 195.422 li
261.635 195.322 li
cp
f
258.302 203.656 mo
258.302 203.756 li
258.302 203.656 li
cp
f
243.302 211.989 mo
243.302 212.089 li
243.302 211.989 li
cp
f
240.302 208.322 mo
240.302 208.422 li
240.302 208.322 li
cp
f
243.302 188.807 mo
240.859 188.807 240.854 192.604 243.302 192.604 cv
245.745 192.604 245.749 188.807 243.302 188.807 cv
cp
f
258.635 186.656 mo
258.635 186.756 li
258.635 186.656 li
cp
f
255.969 198.987 mo
252.47 198.987 252.464 204.424 255.969 204.424 cv
259.467 204.424 259.473 198.987 255.969 198.987 cv
cp
f
243.635 208.637 mo
240.543 208.637 240.539 213.441 243.635 213.441 cv
246.727 213.441 246.732 208.637 243.635 208.637 cv
cp
f
234.635 181.936 mo
232.358 181.936 232.354 185.475 234.635 185.475 cv
236.913 185.475 236.916 181.936 234.635 181.936 cv
cp
f
224.635 179.744 mo
222.539 179.744 222.536 183.001 224.635 183.001 cv
226.731 183.001 226.735 179.744 224.635 179.744 cv
cp
f
216.302 188.143 mo
215.578 188.143 215.577 189.268 216.302 189.268 cv
217.026 189.268 217.027 188.143 216.302 188.143 cv
cp
f
203.302 195.322 mo
203.302 195.422 li
203.302 195.322 li
cp
f
187.302 191.656 mo
187.302 191.756 li
187.302 191.656 li
cp
f
174.302 191.217 mo
172.387 191.217 172.383 194.194 174.302 194.194 cv
176.217 194.194 176.22 191.217 174.302 191.217 cv
cp
f
166.969 197.551 mo
165.053 197.551 165.05 200.527 166.969 200.527 cv
168.884 200.527 168.887 197.551 166.969 197.551 cv
cp
f
156.302 191.884 mo
154.387 191.884 154.383 194.861 156.302 194.861 cv
158.217 194.861 158.22 191.884 156.302 191.884 cv
cp
f
146.635 186.199 mo
144.268 186.199 144.264 189.879 146.635 189.879 cv
149.003 189.879 149.007 186.199 146.635 186.199 cv
cp
f
139.635 187.884 mo
137.72 187.884 137.717 190.861 139.635 190.861 cv
141.55 190.861 141.554 187.884 139.635 187.884 cv
cp
f
135.635 191.884 mo
133.72 191.884 133.717 194.861 135.635 194.861 cv
137.55 194.861 137.554 191.884 135.635 191.884 cv
cp
f
110.635 183.322 mo
110.635 183.422 li
110.635 183.322 li
cp
f
105.969 183.217 mo
104.053 183.217 104.05 186.194 105.969 186.194 cv
107.884 186.194 107.887 183.217 105.969 183.217 cv
cp
f
100.302 183.573 mo
97.5571 183.573 97.5527 187.838 100.302 187.838 cv
103.046 187.838 103.051 183.573 100.302 183.573 cv
cp
f
90.9687 179.551 mo
89.0532 179.551 89.0503 182.527 90.9687 182.527 cv
92.8838 182.527 92.8872 179.551 90.9687 179.551 cv
cp
f
79.6352 174.989 mo
79.6352 175.089 li
79.6352 174.989 li
cp
f
75.6352 175.989 mo
75.6352 176.089 li
75.6352 175.989 li
cp
f
72.9687 174.322 mo
72.9687 174.422 li
72.9687 174.322 li
cp
f
72.6465 171.125 mo
73.4458 170.313 73.1133 168.551 71.6352 168.551 cv
70.8174 168.551 70.3506 169.094 70.2314 169.715 cv
70.0537 169.043 69.3291 168.518 68.6167 168.762 cv
67.7158 169.071 66.8003 169.349 65.9292 169.735 cv
65.3657 169.985 65.5005 170.981 66.1055 171.084 cv
67.0503 171.246 68.0142 171.285 68.9687 171.363 cv
69.5928 171.415 70.0869 170.917 70.2319 170.353 cv
70.3476 170.964 70.7978 171.502 71.5903 171.523 cv
70.7031 172.371 71.0459 174.288 72.6352 174.288 cv
74.667 174.288 74.6738 171.138 72.6465 171.125 cv
cp
f
54.6352 168.322 mo
54.6352 168.422 li
54.6352 168.322 li
cp
f
48.3017 159.656 mo
48.3017 159.756 li
48.3017 159.656 li
cp
f
44.9687 156.363 mo
42.812 156.363 42.8086 159.715 44.9687 159.715 cv
47.125 159.715 47.1284 156.363 44.9687 156.363 cv
cp
f
38.9687 155.656 mo
38.9687 155.756 li
38.9687 155.656 li
cp
f
36.5786 151.415 mo
36.5976 150.393 35.9526 149.357 34.6352 149.357 cv
32.0415 149.357 32.0371 153.388 34.6352 153.388 cv
34.7417 153.377 li
34.956 153.583 35.2505 153.72 35.6352 153.72 cv
36.9556 153.72 37.2695 152.161 36.5786 151.415 cv
cp
f
30.3017 144.989 mo
30.3017 145.089 li
30.3017 144.989 li
cp
f
23.6352 141.322 mo
23.6352 141.422 li
23.6352 141.322 li
cp
f
21.9687 136.445 mo
19.9175 136.445 19.9141 139.633 21.9687 139.633 cv
24.0195 139.633 24.0229 136.445 21.9687 136.445 cv
cp
f
16.3017 134.656 mo
16.3017 134.756 li
16.3017 134.656 li
cp
f
15.3017 125.217 mo
13.3867 125.217 13.3833 128.194 15.3017 128.194 cv
17.2173 128.194 17.2202 125.217 15.3017 125.217 cv
cp
f
14.3017 119.217 mo
12.3867 119.217 12.3833 122.194 14.3017 122.194 cv
16.2173 122.194 16.2202 119.217 14.3017 119.217 cv
cp
f
14.6352 114.656 mo
14.6352 114.756 li
14.6352 114.656 li
cp
f
14.3017 107.551 mo
12.3867 107.551 12.3833 110.527 14.3017 110.527 cv
16.2173 110.527 16.2202 107.551 14.3017 107.551 cv
cp
f
14.9687 95.2173 mo
13.0532 95.2173 13.0503 98.1938 14.9687 98.1938 cv
16.8838 98.1938 16.8872 95.2173 14.9687 95.2173 cv
cp
f
14.9687 86.8843 mo
13.0532 86.8843 13.0503 89.8608 14.9687 89.8608 cv
16.8838 89.8608 16.8872 86.8843 14.9687 86.8843 cv
cp
f
16.3017 81.4453 mo
14.251 81.4453 14.2475 84.6328 16.3017 84.6328 cv
18.353 84.6328 18.3564 81.4453 16.3017 81.4453 cv
cp
f
24.3017 74.6558 mo
24.3017 74.7559 li
24.3017 74.6558 li
cp
f
25.3017 70.5508 mo
23.3867 70.5508 23.3833 73.5273 25.3017 73.5273 cv
27.2173 73.5273 27.2202 70.5508 25.3017 70.5508 cv
cp
f
26.3017 63.3804 mo
23.7383 63.3804 23.7339 67.3647 26.3017 67.3647 cv
28.8657 67.3647 28.8696 63.3804 26.3017 63.3804 cv
cp
f
28.9687 60.2173 mo
27.0532 60.2173 27.0503 63.1938 28.9687 63.1938 cv
30.8838 63.1938 30.8872 60.2173 28.9687 60.2173 cv
cp
f
36.6352 55.9893 mo
36.6352 56.0894 li
36.6352 55.9893 li
cp
f
37.3017 46.4741 mo
34.8589 46.4741 34.8545 50.271 37.3017 50.271 cv
39.7451 50.271 39.749 46.4741 37.3017 46.4741 cv
cp
f
41.3017 40.3223 mo
41.3017 40.4224 li
41.3017 40.3223 li
cp
f
50.3017 34.3223 mo
50.3017 34.4224 li
50.3017 34.3223 li
cp
f
65.6352 26.6558 mo
65.6352 26.7559 li
65.6352 26.6558 li
cp
f
71.6352 24.5508 mo
69.7197 24.5508 69.7168 27.5273 71.6352 27.5273 cv
73.5503 27.5273 73.5537 24.5508 71.6352 24.5508 cv
cp
f
80.9687 24.6558 mo
80.9687 24.7559 li
80.9687 24.6558 li
cp
f
91.6352 22.6558 mo
91.6352 22.7559 li
91.6352 22.6558 li
cp
f
94.9687 27.2173 mo
93.0532 27.2173 93.0503 30.1938 94.9687 30.1938 cv
96.8838 30.1938 96.8872 27.2173 94.9687 27.2173 cv
cp
f
106.302 14.228 mo
103.542 14.228 103.538 18.5171 106.302 18.5171 cv
109.062 18.5171 109.066 14.228 106.302 14.228 cv
cp
f
122.969 17.6558 mo
122.969 17.7559 li
122.969 17.6558 li
cp
f
132.969 14.9893 mo
132.969 15.0894 li
132.969 14.9893 li
cp
f
138.302 15.6196 mo
135.618 15.6196 135.613 19.7915 138.302 19.7915 cv
140.986 19.7915 140.991 15.6196 138.302 15.6196 cv
cp
f
147.635 18.5508 mo
145.72 18.5508 145.717 21.5273 147.635 21.5273 cv
149.55 21.5273 149.554 18.5508 147.635 18.5508 cv
cp
f
153.302 16.3223 mo
153.302 16.4224 li
153.302 16.3223 li
cp
f
174.302 16.9893 mo
174.302 17.0894 li
174.302 16.9893 li
cp
f
185.969 14.3223 mo
185.969 14.4224 li
185.969 14.3223 li
cp
f
190.969 17.2173 mo
189.053 17.2173 189.05 20.1938 190.969 20.1938 cv
192.884 20.1938 192.887 17.2173 190.969 17.2173 cv
cp
f
195.635 18.2759 mo
193.795 18.2759 193.792 21.1353 195.635 21.1353 cv
197.475 21.1353 197.478 18.2759 195.635 18.2759 cv
cp
f
233.969 28.6953 mo
232.536 28.6953 231.791 29.7534 231.719 30.8638 cv
230.799 31.626 231.101 33.5273 232.635 33.5273 cv
232.941 33.5273 233.192 33.4458 233.4 33.3184 cv
233.577 33.3579 233.765 33.3828 233.969 33.3828 cv
236.985 33.3828 236.99 28.6953 233.969 28.6953 cv
cp
f
208.302 20.2173 mo
207.724 20.2173 207.324 20.4902 207.094 20.8687 cv
206.864 20.7725 206.602 20.7134 206.302 20.7134 cv
203.738 20.7134 203.734 24.6978 206.302 24.6978 cv
207.377 24.6978 207.996 23.9951 208.17 23.1807 cv
208.302 23.1938 li
210.217 23.1938 210.22 20.2173 208.302 20.2173 cv
cp
f
241.635 35.5508 mo
239.72 35.5508 239.717 38.5273 241.635 38.5273 cv
243.55 38.5273 243.554 35.5508 241.635 35.5508 cv
cp
f
258.969 41.0767 mo
256.872 41.0767 256.869 44.3345 258.969 44.3345 cv
261.065 44.3345 261.068 41.0767 258.969 41.0767 cv
cp
f
262.969 48.2173 mo
261.053 48.2173 261.05 51.1938 262.969 51.1938 cv
264.884 51.1938 264.887 48.2173 262.969 48.2173 cv
cp
f
267.969 53.9893 mo
267.969 54.0894 li
267.969 53.9893 li
cp
f
271.635 61.0352 mo
269.056 61.0352 269.052 65.043 271.635 65.043 cv
274.214 65.043 274.218 61.0352 271.635 61.0352 cv
cp
f
277.635 64.9893 mo
277.635 65.0894 li
277.635 64.9893 li
cp
f
279.302 70.3223 mo
279.302 70.4224 li
279.302 70.3223 li
cp
f
284.635 74.8843 mo
282.72 74.8843 282.717 77.8608 284.635 77.8608 cv
286.55 77.8608 286.554 74.8843 284.635 74.8843 cv
cp
f
288.302 80.4321 mo
285.376 80.4321 285.371 84.979 288.302 84.979 cv
291.228 84.979 291.232 80.4321 288.302 80.4321 cv
cp
f
292.969 88.6558 mo
292.969 88.7559 li
292.969 88.6558 li
cp
f
296.969 92.6558 mo
296.969 92.7559 li
296.969 92.6558 li
cp
f
294.635 97.2173 mo
293.195 97.2173 292.837 98.8989 293.562 99.7344 cv
293.478 99.7222 293.395 99.7085 293.302 99.7085 cv
291.16 99.7085 291.157 103.037 293.302 103.037 cv
294.941 103.037 295.323 101.09 294.452 100.176 cv
294.635 100.194 li
296.55 100.194 296.554 97.2173 294.635 97.2173 cv
cp
f
295.635 103.656 mo
295.635 103.756 li
295.635 103.656 li
cp
f
297.635 102.322 mo
297.635 102.422 li
297.635 102.322 li
cp
f
295.969 92.5508 mo
294.053 92.5508 294.05 95.5273 295.969 95.5273 cv
297.884 95.5273 297.887 92.5508 295.969 92.5508 cv
cp
f
293.635 88.3223 mo
293.635 88.4224 li
293.635 88.3223 li
cp
f
299.969 105.989 mo
299.969 106.089 li
299.969 105.989 li
cp
f
302.302 113.656 mo
302.302 113.756 li
302.302 113.656 li
cp
f
297.969 124.322 mo
297.969 124.422 li
297.969 124.322 li
cp
f
296.763 127.439 mo
295.928 127.249 294.908 127.69 294.716 128.602 cv
294.618 129.065 294.512 129.521 294.483 129.996 cv
294.45 130.563 294.816 131.088 295.275 131.376 cv
295.511 131.524 295.802 131.617 296.082 131.595 cv
296.611 131.552 297.221 131.33 297.462 130.803 cv
297.66 130.373 297.793 129.939 297.925 129.486 cv
298.167 128.65 297.631 127.637 296.763 127.439 cv
cp
f
295.302 114.733 mo
295.11 114.772 li
294.873 114.446 294.496 114.217 293.969 114.217 cv
292.053 114.217 292.05 117.194 293.969 117.194 cv
294.495 117.194 294.872 116.965 295.109 116.639 cv
295.302 116.678 li
296.554 116.678 296.556 114.733 295.302 114.733 cv
cp
f
296.302 120.217 mo
294.387 120.217 294.383 123.194 296.302 123.194 cv
298.217 123.194 298.22 120.217 296.302 120.217 cv
cp
f
293.714 131.96 mo
293.021 131.266 292.007 131.835 291.914 132.706 cv
291.894 132.89 291.908 133.048 291.935 133.232 cv
291.966 133.452 292.223 133.708 292.442 133.74 cv
292.626 133.766 292.785 133.78 292.969 133.76 cv
293.838 133.667 294.412 132.657 293.714 131.96 cv
cp
f
285.302 142.217 mo
283.387 142.217 283.383 145.194 285.302 145.194 cv
287.217 145.194 287.22 142.217 285.302 142.217 cv
cp
f
282.872 149.136 mo
282.266 148.53 281.328 148.723 280.866 149.395 cv
280.693 149.646 li
280.01 150.637 281.37 151.998 282.362 151.315 cv
282.613 151.142 li
283.284 150.68 283.481 149.746 282.872 149.136 cv
cp
f
274.969 158.656 mo
274.969 158.756 li
274.969 158.656 li
cp
f
266.969 159.656 mo
266.969 159.756 li
266.969 159.656 li
cp
f
267.302 161.884 mo
265.387 161.884 265.383 164.861 267.302 164.861 cv
269.217 164.861 269.22 161.884 267.302 161.884 cv
cp
f
261.635 169.697 mo
259.479 169.697 259.475 173.048 261.635 173.048 cv
263.792 173.048 263.795 169.697 261.635 169.697 cv
cp
f
252.302 173.656 mo
252.302 173.756 li
252.302 173.656 li
cp
f
244.302 171.656 mo
244.302 171.756 li
244.302 171.656 li
cp
f
236.302 177.217 mo
234.387 177.217 234.383 180.194 236.302 180.194 cv
238.217 180.194 238.22 177.217 236.302 177.217 cv
cp
f
228.635 179.989 mo
228.635 180.089 li
228.635 179.989 li
cp
f
217.635 180.626 mo
215.388 180.626 215.384 184.119 217.635 184.119 cv
219.882 184.119 219.886 180.626 217.635 180.626 cv
cp
f
207.302 182.352 mo
205.13 182.352 205.126 185.727 207.302 185.727 cv
209.474 185.727 209.477 182.352 207.302 182.352 cv
cp
f
200.302 184.322 mo
200.302 184.422 li
200.302 184.322 li
cp
f
189.969 184.656 mo
189.969 184.756 li
189.969 184.656 li
cp
f
184.635 184.217 mo
182.72 184.217 182.717 187.194 184.635 187.194 cv
186.55 187.194 186.554 184.217 184.635 184.217 cv
cp
f
174.302 184.919 mo
172.432 184.919 172.429 187.826 174.302 187.826 cv
176.172 187.826 176.175 184.919 174.302 184.919 cv
cp
f
164.969 185.656 mo
164.969 185.756 li
164.969 185.656 li
cp
f
154.969 185.634 mo
154.019 185.634 154.017 187.111 154.969 187.111 cv
155.918 187.111 155.92 185.634 154.969 185.634 cv
cp
f
149.302 184.656 mo
149.302 184.756 li
149.302 184.656 li
cp
f
139.635 184.656 mo
139.635 184.756 li
139.635 184.656 li
cp
f
131.302 182.551 mo
129.387 182.551 129.383 185.527 131.302 185.527 cv
133.217 185.527 133.22 182.551 131.302 182.551 cv
cp
f
119.969 180.989 mo
119.969 181.089 li
119.969 180.989 li
cp
f
112.635 178.824 mo
109.785 178.824 109.78 183.254 112.635 183.254 cv
115.485 183.254 115.49 178.824 112.635 178.824 cv
cp
f
106.933 178.337 mo
106.765 178.502 li
106.294 178.968 106.293 179.776 106.765 180.243 cv
106.933 180.408 li
107.836 181.302 109.434 180.646 109.434 179.373 cv
109.434 178.101 107.835 177.444 106.933 178.337 cv
cp
f
97.6352 177.217 mo
95.7197 177.217 95.7168 180.194 97.6352 180.194 cv
99.5503 180.194 99.5537 177.217 97.6352 177.217 cv
cp
f
85.6352 170.439 mo
83.147 170.439 83.1426 174.306 85.6352 174.306 cv
88.1235 174.306 88.1274 170.439 85.6352 170.439 cv
cp
f
76.9687 167.322 mo
76.9687 167.422 li
76.9687 167.322 li
cp
f
68.9687 164.989 mo
68.9687 165.089 li
68.9687 164.989 li
cp
f
61.3017 162.217 mo
59.3867 162.217 59.3833 165.194 61.3017 165.194 cv
63.2173 165.194 63.2202 162.217 61.3017 162.217 cv
cp
f
58.6352 159.884 mo
56.7197 159.884 56.7168 162.861 58.6352 162.861 cv
60.5503 162.861 60.5537 159.884 58.6352 159.884 cv
cp
f
55.3017 161.989 mo
55.3017 162.089 li
55.3017 161.989 li
cp
f
62.6352 159.072 mo
60.9614 159.072 60.9585 161.673 62.6352 161.673 cv
64.3091 161.673 64.312 159.072 62.6352 159.072 cv
cp
f
89.6352 173.141 mo
87.1919 173.141 87.188 176.938 89.6352 176.938 cv
92.0781 176.938 92.0825 173.141 89.6352 173.141 cv
cp
f
71.6352 167.989 mo
71.6352 168.089 li
71.6352 167.989 li
cp
f
59.3017 155.785 mo
57.688 155.785 57.6855 158.293 59.3017 158.293 cv
60.9155 158.293 60.918 155.785 59.3017 155.785 cv
cp
f
51.3017 151.082 mo
48.7832 151.082 48.7793 154.996 51.3017 154.996 cv
53.8203 154.996 53.8247 151.082 51.3017 151.082 cv
cp
f
32.6352 147.202 mo
31.9868 147.202 31.9858 148.209 32.6352 148.209 cv
33.2837 148.209 33.2847 147.202 32.6352 147.202 cv
cp
f
290.9 103.971 mo
290.794 98.1875 282.619 98.4087 282.069 103.971 cv
281.529 109.44 271.975 113.111 268.628 116.904 cv
266.729 119.057 265.526 121.829 263.596 123.885 cv
262.833 124.699 261.667 125.216 260.914 126.029 cv
255.836 123.602 249.866 128.351 248.856 133.174 cv
248.521 134.771 248.651 136.303 248.922 137.827 cv
246.67 137.964 244.444 138.789 242.578 140.039 cv
241.35 140.862 240.452 142.282 239.171 142.962 cv
235.687 144.812 231.346 144.327 227.704 146.149 cv
227.424 145.667 227.142 145.192 226.862 144.732 cv
223.426 139.078 215.553 141.841 215.042 147.934 cv
215.032 148.063 215.041 148.188 215.035 148.316 cv
214.399 149.005 213.835 149.894 213.403 150.999 cv
212.518 151.691 211.791 152.684 211.212 153.614 cv
210.872 153.707 210.512 153.836 210.131 154.011 cv
209.914 154.11 209.699 154.234 209.487 154.372 cv
207.168 151.596 203.192 150.812 199.033 152.494 cv
196.307 153.596 194.481 156.182 191.784 156.948 cv
189.016 157.734 184.593 158.023 181.723 157.699 cv
180.173 157.524 179.168 156.757 177.71 156.223 cv
176.44 155.757 175.186 155.866 173.941 155.603 cv
174.625 155.702 171.917 154.528 171.699 154.489 cv
170.31 154.237 168.93 154.307 167.571 154.741 cv
166.236 155.167 165.069 155.941 163.986 156.806 cv
163.727 157.013 162.519 157.91 162.251 158.309 cv
161.846 157.79 160.4 156.267 160.015 155.777 cv
158.966 154.445 157.891 153.051 157.215 151.493 cv
155.588 147.735 149.123 148.749 148.386 152.646 cv
148.252 153.351 148.106 154.053 147.961 154.755 cv
143.837 154.931 140.052 158.034 135.86 158.74 cv
129.67 159.782 124.38 158.318 119.319 154.818 cv
116.129 152.612 112.685 150.577 108.907 150.139 cv
107.637 148.876 105.767 148.232 103.986 148.759 cv
103.754 148.828 li
103.022 149.045 102.411 149.417 101.911 149.886 cv
100.05 150.371 97.228 150.112 95.6157 150.231 cv
93.2476 150.407 90.853 150.745 88.4746 150.728 cv
86.3716 150.712 83.5342 150.793 82.1421 148.827 cv
81.2861 147.619 81.394 145.94 80.292 144.709 cv
77.956 142.101 75.439 142.997 72.498 143.253 cv
68.1567 143.633 63.6811 139.748 60.2788 136.968 cv
57.5469 134.736 56.0522 130.934 52.7031 129.596 cv
49.4136 128.283 46.1802 130.334 43.2637 127.732 cv
39.9858 124.807 40.9702 120.097 38.5683 116.837 cv
35.9126 113.233 31.1265 114.561 27.2681 114.749 cv
23.9697 114.91 22.2568 117.603 22.7446 120.687 cv
23.9658 128.41 24.1553 135.935 30.0015 141.717 cv
35.5566 147.213 42.7246 152.241 50.0366 154.961 cv
58.2104 158.001 66.9761 159.419 75.2422 162.324 cv
79.2559 163.734 83.3213 164.989 87.3423 166.378 cv
87.624 166.476 87.9053 166.577 88.1875 166.675 cv
91.8491 169.513 95.708 172.376 99.499 174.825 cv
100.708 175.606 102.184 175.685 103.506 175.259 cv
107.297 177.153 111.253 176.004 115.767 175.865 cv
121.088 175.702 126.242 178.119 131.586 178.782 cv
131.756 178.86 131.921 178.949 132.094 179.024 cv
137.889 181.556 145.111 181.152 149.927 177.502 cv
153.066 178.879 157.049 179.043 160.228 179.177 cv
162.029 179.252 163.834 179.25 165.64 179.191 cv
165.716 179.319 165.776 179.442 165.861 179.571 cv
169.39 184.942 175.321 183.404 179.77 180.427 cv
184.696 177.131 189.721 176.333 195.51 177.121 cv
198.137 177.479 200.505 177.654 203.037 176.706 cv
203.502 176.532 203.934 176.315 204.354 176.083 cv
205.333 176.867 206.514 177.407 207.871 177.515 cv
211.984 177.844 216.192 176.895 220.011 175.067 cv
227.36 173.034 234.464 170.231 241.704 167.807 cv
246.247 168.354 250.476 166.345 254.259 163.945 cv
255 163.474 255.595 162.922 256.065 162.321 cv
259.651 161.438 261.695 158.397 262.768 154.802 cv
266.795 151.513 270.14 147.498 274.258 144.266 cv
278.353 141.053 282.388 138.133 285.215 133.649 cv
290.401 125.424 291.073 113.429 290.9 103.971 cv
cp
f
287.016 83.4849 mo
286.686 78.3438 285.02 73.8677 280.473 71.0527 cv
276.861 68.8174 272.549 66.7588 268.259 65.7534 cv
267.362 62.2041 266.78 58.5308 265.187 55.1899 cv
262.97 50.54 259.424 46.561 255.197 43.646 cv
247.853 38.5825 238.031 40.7773 229.861 44.5176 cv
230.023 43.7813 230.177 43.043 230.316 42.3008 cv
230.789 39.7778 231.78 36.6387 230.771 34.1646 cv
229.827 31.8467 227.447 30.6206 225.101 30.1611 cv
222.454 29.6426 219.965 30.875 217.275 30.2759 cv
216.906 30.1934 216.55 30.1523 216.207 30.1431 cv
215.235 29.7275 214.264 29.3042 213.284 28.8823 cv
209.937 27.4404 205.075 26.6338 202.456 24.1265 cv
199.831 21.6133 198.473 18.7085 194.199 19.125 cv
191.538 19.3843 189.339 20.9604 187.316 22.7075 cv
184.887 21.3433 182.724 19.3726 180.119 18.312 cv
176.504 16.8398 173.458 17.8228 170.019 19.2427 cv
165.79 20.9893 161.165 21.5322 156.79 22.8735 cv
154.277 23.644 151.815 24.5532 149.388 25.5479 cv
148.563 24.3867 147.738 23.2275 146.925 22.0557 cv
144.145 18.0483 141.754 16.5938 136.983 18.293 cv
134.918 19.0278 132.866 19.939 130.681 20.271 cv
127.968 20.6826 125.218 20.3906 122.501 20.9043 cv
120.155 21.3477 117.925 22.3208 115.574 22.7183 cv
113.485 23.0713 111.441 22.9883 109.384 23.415 cv
108.039 22.4727 106.383 22.1499 104.692 22.8936 cv
102.378 23.9102 101.207 26.3091 101.797 28.792 cv
101.91 29.269 102.029 29.7456 102.136 30.2207 cv
98.6035 31.5488 94.9292 32.4878 91.1675 32.9565 cv
90.9629 32.9961 li
90.9609 32.9868 li
90.3003 30.3682 87.373 28.7905 84.8101 29.4946 cv
82.6562 30.0869 81.2969 32.0269 81.1929 34.1367 cv
68.1626 36.2437 55.706 40.7236 43.1831 44.9565 cv
42.4194 45.2148 41.7934 45.5942 41.2944 46.0557 cv
41.1811 46.062 41.0723 46.0562 40.9575 46.0659 cv
34.6011 46.6001 34.5176 56.563 40.9575 56.0659 cv
41.5342 56.0215 42.1172 56.0142 42.7041 56.0288 cv
43.043 56.106 43.3779 56.2178 43.7046 56.3994 cv
44.8442 56.7944 45.8628 56.7778 46.7256 56.4756 cv
47.3022 56.5771 47.8784 56.6875 48.4541 56.8081 cv
46.0215 58.9917 43.5884 61.1753 41.1558 63.3589 cv
37.5171 66.6245 33.9336 69.8271 31.3774 74.022 cv
31.1177 74.2227 30.8706 74.438 30.6079 74.6357 cv
28.6269 76.1245 27.875 78.5698 28.4951 80.6011 cv
25.4917 83.2354 22.9092 86.2573 21.2558 90.0991 cv
18.3882 96.7627 18.6528 103.962 19.9243 110.962 cv
20.0176 111.474 20.1714 111.922 20.3657 112.319 cv
20.8506 114.572 22.6772 116.508 25.5434 116.472 cv
26.8003 116.456 27.8086 116.058 28.5747 115.434 cv
31.625 115.19 34.666 115.015 37.7134 114.67 cv
38.1899 117.891 38.105 121.193 39.958 124.037 cv
41.1992 125.941 42.8994 127.142 45.0918 127.656 cv
46.3198 127.944 47.4267 127.638 48.603 127.739 cv
50.8779 127.936 51.0781 128.087 52.6904 129.927 cv
54.2788 131.738 55.4307 133.758 57.314 135.323 cv
59.1411 136.841 61.3428 137.735 63.25 139.129 cv
65.2559 140.595 66.7793 142.153 69.3599 142.558 cv
70.5474 142.744 71.8618 142.642 73.0361 142.418 cv
73.5835 142.249 74.1313 142.08 74.6787 141.911 cv
75.0532 141.855 75.3393 141.796 75.584 141.734 cv
76.6816 143.006 78.1758 143.379 79.6099 143.12 cv
81.4297 150.989 88.9116 150 95.7197 149.927 cv
100.243 149.878 104.211 148.454 108.798 149.087 cv
113.128 149.685 114.687 151.106 117.803 153.948 cv
122.885 158.582 130.443 160.142 137.124 158.936 cv
140.448 158.335 143.484 157.021 146.15 154.961 cv
148.645 153.033 150.414 150.269 152.878 148.347 cv
155.007 150.624 157.27 152.761 159.704 154.757 cv
162.802 157.298 166.585 156.2 168.061 152.551 cv
167.415 154.148 168.689 152.347 169.148 151.687 cv
170.283 153.16 175.316 154.694 176.72 155.259 cv
182.61 157.63 188.014 159.154 194.117 156.592 cv
196.833 155.452 199.192 153.629 201.897 152.499 cv
204.597 151.372 207.027 152.507 209.662 151.63 cv
212.408 150.716 213.498 148.398 214.79 146.054 cv
215.893 144.053 217.247 142.385 218.827 140.875 cv
219.415 141.119 220.087 141.258 220.852 141.243 cv
223.839 141.186 226.313 143.363 229.118 144.157 cv
231.808 144.918 234.628 144.898 237.191 143.734 cv
239.968 142.473 242.355 140.583 245.191 139.327 cv
247.8 138.172 250.339 136.704 251.368 133.88 cv
251.852 132.55 251.891 130.898 251.876 129.525 cv
251.829 128.893 251.782 128.261 251.734 127.629 cv
251.736 127.516 251.732 127.432 251.731 127.333 cv
254.661 126.247 257.91 126.297 260.88 125.474 cv
266.005 124.052 267.626 119.452 268.685 114.845 cv
271.727 112.892 274.728 111.128 277.456 108.595 cv
281.048 106.305 284.3 103.347 286.578 99.7803 cv
289.765 94.7896 287.368 88.9717 287.016 83.4849 cv
cp
f
196.583 42.4868 mo
193.549 45.9502 190.569 49.3804 187.778 53.0435 cv
187.705 53.1396 187.862 53.2559 187.943 53.1714 cv
191.135 49.8833 194.073 46.4321 197.031 42.9341 cv
197.291 42.626 196.854 42.1782 196.583 42.4868 cv
cp
.623529 .803922 .87451 rgb
f
132.477 46.4507 mo
127.383 46.9663 122.259 49.3496 117.596 51.3584 cv
117.162 51.5454 117.477 52.3081 117.921 52.1294 cv
122.714 50.2061 127.833 49.248 132.599 47.3481 cv
133.031 47.1758 133.036 46.394 132.477 46.4507 cv
cp
f
115.112 29.6997 mo
115.076 29.0259 114.065 29.0156 114.058 29.6997 cv
114.029 32.4385 114.319 35.1401 114.63 37.8564 cv
114.935 40.5181 114.628 43.2344 115.038 45.8486 cv
115.111 46.3135 115.817 46.3613 116.023 45.9775 cv
118.478 41.3999 115.374 34.5239 115.112 29.6997 cv
cp
f
70.1352 39.3984 mo
69.9541 39.3984 69.9541 39.6797 70.1352 39.6797 cv
70.3159 39.6797 70.3164 39.3984 70.1352 39.3984 cv
cp
f
67.1352 115.884 mo
65.2197 115.884 65.2168 118.861 67.1352 118.861 cv
69.0503 118.861 69.0537 115.884 67.1352 115.884 cv
cp
f
64.6352 110.223 mo
64.228 110.223 64.2275 110.855 64.6352 110.855 cv
65.0425 110.855 65.043 110.223 64.6352 110.223 cv
cp
f
69.8018 107.217 mo
67.8867 107.217 67.8833 110.194 69.8018 110.194 cv
71.7173 110.194 71.7202 107.217 69.8018 107.217 cv
cp
f
81.8018 116.717 mo
79.8867 116.717 79.8833 119.694 81.8018 119.694 cv
83.7173 119.694 83.7202 116.717 81.8018 116.717 cv
cp
f
101.969 111.514 mo
101.079 111.514 101.077 112.897 101.969 112.897 cv
102.858 112.897 102.86 111.514 101.969 111.514 cv
cp
f
105.969 105.117 mo
105.426 105.117 105.425 105.961 105.969 105.961 cv
106.511 105.961 106.512 105.117 105.969 105.117 cv
cp
f
112.302 96.6558 mo
112.302 96.7559 li
112.302 96.6558 li
cp
f
115.135 95.0508 mo
113.22 95.0508 113.217 98.0273 115.135 98.0273 cv
117.05 98.0273 117.054 95.0508 115.135 95.0508 cv
cp
f
110.73 82.918 mo
110.513 82.4775 110.027 82.1606 109.532 82.3691 cv
109.003 82.5918 108.944 83.1318 109.038 83.6313 cv
109.272 84.8711 111.365 84.2026 110.73 82.918 cv
cp
f
107.635 79.6558 mo
107.635 79.7559 li
107.635 79.6558 li
cp
f
49.1352 74.9893 mo
49.1352 75.0894 li
49.1352 74.9893 li
cp
f
58.0854 66.3584 mo
57.9712 66.4028 57.8569 66.4468 57.7427 66.4912 cv
57.435 66.6104 57.646 67.0654 57.9141 66.8979 cv
58.0195 66.8325 58.1245 66.7666 58.23 66.7012 cv
58.4014 66.5938 58.292 66.2783 58.0854 66.3584 cv
cp
f
68.1352 58.4819 mo
66.9893 58.4819 66.9873 60.2632 68.1352 60.2632 cv
69.2812 60.2632 69.2832 58.4819 68.1352 58.4819 cv
cp
f
64.6352 52.3008 mo
63.685 52.3008 63.6836 53.7773 64.6352 53.7773 cv
65.5854 53.7773 65.5869 52.3008 64.6352 52.3008 cv
cp
f
61.6636 73.9126 mo
60.2007 73.9126 60.1982 76.186 61.6636 76.186 cv
63.1265 76.186 63.1289 73.9126 61.6636 73.9126 cv
cp
f
46.9687 80.897 mo
45.9277 80.897 45.9263 82.5142 46.9687 82.5142 cv
48.0093 82.5142 48.0107 80.897 46.9687 80.897 cv
cp
f
46.3017 103.264 mo
44.4468 103.264 44.4438 106.147 46.3017 106.147 cv
48.1567 106.147 48.1597 103.264 46.3017 103.264 cv
cp
f
136.802 79.9712 mo
134.57 79.9712 134.566 83.4399 136.802 83.4399 cv
139.034 83.4399 139.038 79.9712 136.802 79.9712 cv
cp
f
147.635 42.1558 mo
147.635 42.2559 li
147.635 42.1558 li
cp
f
144.969 34.8843 mo
143.053 34.8843 143.05 37.8608 144.969 37.8608 cv
146.884 37.8608 146.887 34.8843 144.969 34.8843 cv
cp
f
153.135 33.1187 mo
151.521 33.1187 151.519 35.6265 153.135 35.6265 cv
154.749 35.6265 154.751 33.1187 153.135 33.1187 cv
cp
f
154.194 39.333 mo
153.612 38.9927 152.771 39.5615 153.006 40.2461 cv
153.051 40.377 li
153.166 40.7119 153.516 40.9653 153.882 40.8486 cv
154.001 40.811 li
154.655 40.6025 154.812 39.6943 154.194 39.333 cv
cp
f
148.469 48.6558 mo
148.469 48.7559 li
148.469 48.6558 li
cp
f
168.802 55.0249 mo
167.067 55.0249 167.064 57.7202 168.802 57.7202 cv
170.536 57.7202 170.539 55.0249 168.802 55.0249 cv
cp
f
183.802 37.0601 mo
182.113 37.0601 182.11 39.6851 183.802 39.6851 cv
185.491 39.6851 185.494 37.0601 183.802 37.0601 cv
cp
f
190.969 33.4038 mo
190.746 33.4282 190.524 33.4521 190.302 33.4766 cv
189.43 33.5718 189.744 34.8652 190.451 34.5815 cv
190.666 34.4961 190.879 34.4102 191.093 34.3247 cv
191.535 34.1475 191.542 33.3408 190.969 33.4038 cv
cp
f
180.469 53.957 mo
178.433 53.957 178.429 57.1211 180.469 57.1211 cv
182.504 57.1211 182.508 53.957 180.469 53.957 cv
cp
f
224.623 58.7891 mo
224.526 58.0542 223.687 57.5415 223.079 58.1494 cv
222.474 58.7544 222.982 59.5962 223.719 59.6934 cv
223.802 59.7046 li
224.21 59.7583 224.687 59.2778 224.634 58.8726 cv
224.623 58.7891 li
cp
f
214.802 70.4141 mo
213.354 70.4141 213.352 72.6641 214.802 72.6641 cv
216.249 72.6641 216.252 70.4141 214.802 70.4141 cv
cp
f
204.969 84.1558 mo
204.969 84.2559 li
204.969 84.1558 li
cp
f
199.969 96.3843 mo
198.053 96.3843 198.05 99.3608 199.969 99.3608 cv
201.884 99.3608 201.887 96.3843 199.969 96.3843 cv
cp
f
190.469 110.134 mo
189.519 110.134 189.517 111.611 190.469 111.611 cv
191.418 111.611 191.42 110.134 190.469 110.134 cv
cp
f
180.469 104.884 mo
178.553 104.884 178.55 107.861 180.469 107.861 cv
182.384 107.861 182.387 104.884 180.469 104.884 cv
cp
f
184.635 123.319 mo
184.138 123.319 184.137 124.092 184.635 124.092 cv
185.133 124.092 185.134 123.319 184.635 123.319 cv
cp
f
176.135 132.322 mo
176.135 132.422 li
176.135 132.322 li
cp
f
168.967 141.123 mo
168.586 140.479 167.672 140.361 167.145 140.889 cv
166.576 141.457 166.797 142.263 167.379 142.71 cv
167.973 143.167 169.247 143.51 169.732 142.691 cv
170.125 142.029 169.246 141.596 168.967 141.123 cv
cp
f
184.302 142.982 mo
183.156 142.982 183.154 144.763 184.302 144.763 cv
185.448 144.763 185.45 142.982 184.302 142.982 cv
cp
f
191.635 129.266 mo
190.64 129.266 190.638 130.813 191.635 130.813 cv
192.63 130.813 192.632 129.266 191.635 129.266 cv
cp
f
214.969 106.217 mo
213.053 106.217 213.05 109.194 214.969 109.194 cv
216.884 109.194 216.887 106.217 214.969 106.217 cv
cp
f
237.802 119.221 mo
236.535 119.221 236.533 121.19 237.802 121.19 cv
239.069 121.19 239.071 119.221 237.802 119.221 cv
cp
f
245.969 112.042 mo
243.827 112.042 243.823 115.37 245.969 115.37 cv
248.11 115.37 248.114 112.042 245.969 112.042 cv
cp
f
269.302 83.8223 mo
269.302 83.9224 li
269.302 83.8223 li
cp
f
256.302 57.0571 mo
254.824 57.0571 254.821 59.354 256.302 59.354 cv
257.78 59.354 257.782 57.0571 256.302 57.0571 cv
cp
f
245.302 74.1587 mo
243.311 74.1587 243.308 77.2524 245.302 77.2524 cv
247.292 77.2524 247.296 74.1587 245.302 74.1587 cv
cp
f
51.9009 62.7539 mo
45.7358 65.8252 40.9683 72.5205 36.5005 77.6128 cv
35.5439 78.7031 37.0815 80.2827 38.1084 79.2202 cv
40.6968 76.541 43.3838 73.9722 46.043 71.3647 cv
48.5015 68.9551 51.1206 66.7168 52.8789 63.7319 cv
53.2598 63.0854 52.5185 62.4458 51.9009 62.7539 cv
cp
.921569 .956863 .956863 rgb
f
77.6196 40.7246 mo
67.3208 41.2881 57.7685 47.0029 47.8081 49.2212 cv
46.9971 49.4019 46.5625 50.4736 47.0156 51.1689 cv
48.706 53.7607 53.6518 52.0947 56.2065 52.4473 cv
57.2256 52.5884 57.5854 51.3081 56.6299 50.9106 cv
55.8428 50.583 55.0356 50.2305 54.2099 49.9595 cv
62.2788 47.7695 70.9136 46.6284 78.081 42.4282 cv
78.835 41.9863 78.5474 40.6738 77.6196 40.7246 cv
cp
f
33.3247 102.566 mo
33.1587 101.062 33.0703 99.5527 33.0312 98.0396 cv
33.0034 96.9634 31.4272 96.9741 31.3672 98.0396 cv
31.2695 99.7632 31.2388 101.486 31.3086 103.212 cv
31.3647 104.594 31.4087 105.76 32.292 106.857 cv
32.6147 107.258 33.1553 106.958 33.3105 106.588 cv
33.8628 105.27 33.4761 103.938 33.3247 102.566 cv
cp
f
57.8901 122.107 mo
56.3891 120.155 54.0561 119.513 51.6626 119.346 cv
49.7539 119.212 47.5703 119.602 46.5195 117.698 cv
45.7695 116.34 45.8594 114.636 45.144 113.214 cv
44.5879 112.11 42.9458 112.937 43.1035 113.892 cv
42.6211 116.834 43.2573 120.289 46.1167 121.734 cv
47.7065 122.538 49.4624 122.462 51.1929 122.525 cv
53.2392 122.6 55.2192 123.184 57.2529 123.218 cv
57.7622 123.226 58.2407 122.563 57.8901 122.107 cv
cp
f
77.7358 133.998 mo
74.2681 132.945 71.0049 133.265 67.6997 131.383 cv
64.6836 129.665 61.7407 127.197 59.4253 124.614 cv
58.7661 123.879 57.4844 124.847 58.0449 125.679 cv
60.708 129.632 63.0635 133.245 67.4941 135.432 cv
70.8164 137.071 75.0654 138.184 78.1909 135.721 cv
78.833 135.215 78.4058 134.201 77.7358 133.998 cv
cp
f
114.734 143.872 mo
113.562 141.516 110.099 140.442 107.735 139.627 cv
104.8 138.615 101.868 138.466 98.8154 138.963 cv
97.8721 139.116 98.082 140.729 99.043 140.643 cv
102.225 140.36 105.229 141.297 108.097 142.618 cv
110.027 143.506 111.916 145.145 114.106 144.965 cv
114.671 144.919 114.99 144.388 114.734 143.872 cv
cp
f
106.695 30.2485 mo
105.246 29.6528 103.687 30.9419 102.875 32.0205 cv
102.088 33.0649 101.738 34.5146 102.519 35.6719 cv
103.002 36.3882 104.313 35.9653 103.997 35.0488 cv
103.619 33.9526 105.462 33.0166 106.279 32.6846 cv
106.765 32.4868 107.411 32.1929 107.549 31.6255 cv
107.694 31.0273 107.211 30.4614 106.695 30.2485 cv
cp
f
136.373 24.3564 mo
134.227 24.2446 132.406 25.0854 130.292 25.373 cv
127.655 25.7319 125.091 25.3579 122.453 25.186 cv
118.665 24.9399 115.548 25.3711 112.275 27.3809 cv
111.047 28.1353 112.119 29.8027 113.375 29.2632 cv
120.405 26.2451 131.734 33.209 137.209 26.377 cv
137.85 25.5786 137.458 24.4131 136.373 24.3564 cv
cp
f
161.643 26.4155 mo
159.949 26.2383 158.597 26.9702 157.075 27.5996 cv
155.2 28.3755 153.341 28.9482 151.302 29.042 cv
149.845 29.1089 149.832 31.2773 151.302 31.3154 cv
154.932 31.4087 160.832 31.4922 162.434 27.4541 cv
162.65 26.9092 162.113 26.4648 161.643 26.4155 cv
cp
f
97.5351 69.5215 mo
93.7598 73.4336 89.2754 77.4297 86.9668 82.4326 cv
86.7388 82.9268 87.2505 83.6538 87.8008 83.2666 cv
92.2905 80.1079 95.6289 75.3335 99.3579 71.3447 cv
100.489 70.1348 98.6919 68.3228 97.5351 69.5215 cv
cp
f
132.22 61.0513 mo
124.801 71.3008 116.521 81.2266 110.086 92.1357 cv
109.794 92.6309 110.469 93.1475 110.877 92.7466 cv
119.966 83.8384 127.058 72.687 133.839 61.9976 cv
134.497 60.9609 132.914 60.0923 132.22 61.0513 cv
cp
f
126.312 93.209 mo
122.15 98.4204 116.535 103.77 113.938 109.965 cv
113.733 110.455 114.445 111.005 114.868 110.68 cv
120.224 106.561 123.909 99.8105 127.895 94.4302 cv
128.569 93.5195 127.026 92.3145 126.312 93.209 cv
cp
f
104.24 121.99 mo
101.039 126.083 96.6475 129.87 94.8809 134.887 cv
94.7275 135.322 95.3169 135.821 95.707 135.522 cv
99.9419 132.28 102.187 126.978 105.104 122.657 cv
105.45 122.146 104.627 121.495 104.24 121.99 cv
cp
f
88.376 103.817 mo
85.4814 104.984 83.5825 107.158 81.6514 109.54 cv
79.5737 112.103 76.938 114.815 75.9258 118.012 cv
75.7471 118.575 76.439 119.119 76.9414 118.792 cv
81.9209 115.557 83.7988 108.564 89.27 105.938 cv
90.4385 105.377 89.6016 103.324 88.376 103.817 cv
cp
f
64.7466 72.4814 mo
62.6973 74.4541 59.9692 76.1011 59.0879 78.9746 cv
58.9336 79.4775 59.4961 79.8105 59.9141 79.6099 cv
62.6016 78.3174 63.8315 75.3359 65.4643 73.0352 cv
65.7725 72.6011 65.1094 72.1323 64.7466 72.4814 cv
cp
f
68.3032 101.03 mo
66.6377 100.935 65.8115 102.107 64.956 103.412 cv
63.9482 104.949 62.4985 106.887 62.4663 108.791 cv
62.4575 109.309 63.0893 109.715 63.542 109.408 cv
64.8721 108.508 65.5771 106.875 66.375 105.525 cv
67.1328 104.242 67.8115 102.844 68.6372 101.611 cv
68.8105 101.353 68.5767 101.045 68.3032 101.03 cv
cp
f
164.802 34.1646 mo
156.235 42.7212 145.722 51.0391 139.724 61.7085 cv
139.309 62.4463 140.228 63.0376 140.828 62.5605 cv
150.386 54.9585 157.422 44.0137 165.797 35.1592 cv
166.418 34.502 165.445 33.5229 164.802 34.1646 cv
cp
f
179.244 86.9126 mo
176.703 88.5669 174.623 90.6772 172.824 93.1045 cv
171.032 95.5225 168.913 98.3257 167.924 101.186 cv
167.692 101.86 168.476 102.256 169.009 102.02 cv
171.493 100.918 173.12 98.189 174.524 95.9756 cv
176.269 93.2241 177.747 90.3892 180.295 88.2749 cv
181.051 87.6465 180.065 86.3779 179.244 86.9126 cv
cp
f
165.14 92.1206 mo
161.039 96.6665 155.545 101.022 152.882 106.619 cv
152.483 107.457 153.369 108.68 154.292 108.03 cv
159.367 104.456 162.755 98.3428 166.549 93.5293 cv
167.322 92.5488 166.018 91.1475 165.14 92.1206 cv
cp
f
178.6 126.333 mo
176.799 128.167 174.937 129.935 173.123 131.755 cv
171.66 133.223 169.656 134.874 169.185 136.969 cv
169.06 137.521 169.553 138.131 170.15 137.935 cv
172.218 137.254 173.606 135.204 174.949 133.581 cv
176.594 131.59 178.183 129.556 179.843 127.576 cv
180.559 126.723 179.406 125.513 178.6 126.333 cv
cp
f
209.391 67.8247 mo
206.987 72.0806 204.345 76.1597 201.657 80.2393 cv
199.307 83.8057 196.15 87.2656 194.912 91.396 cv
194.75 91.9341 195.404 92.4771 195.893 92.1504 cv
199.352 89.8369 201.504 85.8818 203.677 82.416 cv
206.422 78.0405 208.796 73.4468 211.131 68.8423 cv
211.714 67.6924 210.033 66.687 209.391 67.8247 cv
cp
f
213.338 53.0259 mo
213.093 52.8745 li
212.159 52.3379 211.069 53.2222 211.315 54.2412 cv
211.335 54.3359 211.361 54.4297 211.393 54.5215 cv
211.668 55.4102 212.725 55.7861 213.472 55.2095 cv
214.231 54.6235 214.108 53.5356 213.338 53.0259 cv
cp
f
208.177 42.2393 mo
208.177 42.3394 li
208.177 42.2393 li
cp
f
212.052 41.2393 mo
212.052 41.3394 li
212.052 41.2393 li
cp
f
184.427 47.0313 mo
183.507 47.0313 182.626 47.8398 182.669 48.7891 cv
182.712 49.7417 183.441 50.5469 184.427 50.5469 cv
185.346 50.5469 186.227 49.7383 186.185 48.7891 cv
186.142 47.8369 185.412 47.0313 184.427 47.0313 cv
cp
f
140.052 45.1094 mo
137.729 45.1094 137.726 48.7188 140.052 48.7188 cv
142.374 48.7188 142.378 45.1094 140.052 45.1094 cv
cp
f
131.802 37.9727 mo
129.947 37.9727 129.944 40.8555 131.802 40.8555 cv
133.657 40.8555 133.66 37.9727 131.802 37.9727 cv
cp
f
84.8018 51.9727 mo
82.4643 51.9727 82.4604 55.6055 84.8018 55.6055 cv
87.1392 55.6055 87.1431 51.9727 84.8018 51.9727 cv
cp
f
61.8017 70.3008 mo
59.8867 70.3008 59.8833 73.2773 61.8017 73.2773 cv
63.7173 73.2773 63.7202 70.3008 61.8017 70.3008 cv
cp
f
97.6768 102.582 mo
95.1582 102.582 95.1543 106.496 97.6768 106.496 cv
100.195 106.496 100.2 102.582 97.6768 102.582 cv
cp
f
89.6768 116.992 mo
87.686 116.992 87.6831 120.086 89.6768 120.086 cv
91.6675 120.086 91.6709 116.992 89.6768 116.992 cv
cp
f
91.8018 126.891 mo
90.3237 126.891 90.3213 129.188 91.8018 129.188 cv
93.2798 129.188 93.2822 126.891 91.8018 126.891 cv
cp
f
110.677 131.199 mo
108.309 131.199 108.305 134.879 110.677 134.879 cv
113.044 134.879 113.048 131.199 110.677 131.199 cv
cp
f
129.552 119.809 mo
128.712 119.809 127.908 120.547 127.946 121.414 cv
127.985 122.284 128.652 123.02 129.552 123.02 cv
130.392 123.02 131.196 122.281 131.157 121.414 cv
131.118 120.544 130.452 119.809 129.552 119.809 cv
cp
f
145.457 108.772 mo
145.206 108.688 144.823 108.669 144.663 108.626 cv
144.588 108.606 144.263 108.453 144.109 108.392 cv
143.454 108.127 142.541 108.458 142.068 108.931 cv
141.47 109.53 141.31 110.452 141.635 111.222 cv
141.925 111.91 142.533 112.375 143.273 112.474 cv
144.045 112.578 145.001 112.221 145.363 111.473 cv
145.442 111.31 145.557 111.038 145.615 110.947 cv
145.701 110.813 145.966 110.537 146.087 110.321 cv
146.437 109.705 146.105 108.987 145.457 108.772 cv
cp
f
184.427 137.859 mo
183.483 137.859 182.579 138.689 182.622 139.664 cv
182.666 140.642 183.415 141.469 184.427 141.469 cv
185.371 141.469 186.275 140.639 186.231 139.664 cv
186.187 138.687 185.438 137.859 184.427 137.859 cv
cp
f
194.71 113.38 mo
194.568 113.268 li
194.582 113.292 li
194.394 113.115 li
194.127 113.007 194.099 112.992 194.307 113.069 cv
194.149 113.002 193.99 112.935 193.832 112.868 cv
192.46 112.424 191.166 113.715 191.345 115.054 cv
191.519 116.347 192.865 117.118 194.069 116.61 cv
195.313 116.085 195.747 114.351 194.71 113.38 cv
cp
f
238.431 90.248 mo
238.428 90.2466 li
238.203 90.1519 237.972 90.1143 237.728 90.1113 cv
236.812 90.0991 235.971 91.0791 236.292 91.9946 cv
236.589 92.8403 237.373 93.4175 238.299 93.3047 cv
239.093 93.208 239.874 92.668 239.834 91.7695 cv
239.799 90.9814 239.223 90.3179 238.431 90.248 cv
cp
f
234.927 70.457 mo
233.374 70.457 233.371 72.8711 234.927 72.8711 cv
236.48 72.8711 236.483 70.457 234.927 70.457 cv
cp
f
272.427 80.9258 mo
270.512 80.9258 270.508 83.9023 272.427 83.9023 cv
274.342 83.9023 274.345 80.9258 272.427 80.9258 cv
cp
f
241.052 112.32 mo
240.218 112.32 239.419 113.053 239.458 113.914 cv
239.497 114.778 240.158 115.508 241.052 115.508 cv
241.886 115.508 242.684 114.775 242.645 113.914 cv
242.607 113.051 241.945 112.32 241.052 112.32 cv
cp
f
214.677 131.676 mo
212.762 131.676 212.758 134.652 214.677 134.652 cv
216.592 134.652 216.595 131.676 214.677 131.676 cv
cp
f
276.239 130.927 mo
276.239 131.027 li
276.239 130.927 li
cp
.623529 .803922 .87451 rgb
f
45.561 143.762 mo
42.8354 139.818 38.8501 137.233 34.8042 134.814 cv
34.3393 134.42 33.8765 134.025 33.4331 133.613 cv
32.084 132.357 30.895 130.945 29.6025 129.635 cv
28.9517 128.975 27.6484 129.443 27.7021 130.422 cv
27.8174 132.525 29.7085 134.51 31.1968 135.85 cv
32.8291 137.319 34.7485 138.571 37.0029 138.69 cv
37.1289 138.697 37.2324 138.668 37.3252 138.625 cv
37.9936 139.163 38.6484 139.718 39.2637 140.324 cv
40.8359 141.873 42.0947 143.66 43.4531 145.389 cv
44.3882 146.579 46.4263 145.014 45.561 143.762 cv
cp
.729412 .866667 .886275 rgb
f
63.749 152.066 mo
62.9678 150.619 61.2856 149.937 59.8159 149.347 cv
58.0903 148.655 56.4912 147.998 54.9487 146.928 cv
53.2407 145.743 51.6631 148.513 53.3281 149.7 cv
54.7685 150.728 56.3603 151.529 57.8843 152.423 cv
59.2895 153.248 60.7744 154.26 62.4238 154.375 cv
63.6377 154.459 64.2656 153.024 63.749 152.066 cv
cp
f
86.6333 159.008 mo
85.0459 157.104 81.791 156.144 79.4722 155.333 cv
76.7993 154.399 74.4272 154.125 71.7266 155.082 cv
70.9067 155.373 70.6811 156.809 71.7266 156.98 cv
74.1816 157.383 76.6338 158.266 78.9394 159.187 cv
81.1128 160.056 83.1987 161.498 85.5644 161.589 cv
86.9795 161.643 87.417 159.948 86.6333 159.008 cv
cp
f
107.383 167.914 mo
105.769 167.989 104.153 168.298 102.607 167.625 cv
101.116 166.976 99.7851 165.743 98.7578 164.531 cv
98.1123 163.771 96.8398 164.761 97.3774 165.597 cv
98.8218 167.842 99.9028 170.124 102.561 171.144 cv
104.466 171.875 108.663 172.456 110.004 170.389 cv
111.237 168.489 108.828 167.846 107.383 167.914 cv
cp
f
139.036 171.514 mo
137.267 170.966 135.802 171.514 134.025 171.878 cv
131.636 172.368 130.88 170.849 129.204 169.609 cv
127.325 168.219 124.944 167.654 123.098 169.36 cv
122.618 169.804 122.811 170.819 123.512 170.927 cv
125.442 171.226 126.714 171.895 128.079 173.282 cv
128.975 174.193 129.679 175.009 130.95 175.391 cv
133.503 176.157 137.641 175.126 139.517 173.336 cv
140.128 172.752 139.798 171.75 139.036 171.514 cv
cp
f
201.043 168.703 mo
197.038 167.687 191.114 167.295 187.106 168.436 cv
184.644 169.136 182.669 170.784 180.388 171.873 cv
177.528 173.239 174.25 173.834 171.161 174.513 cv
171.144 174.521 li
169.356 173.737 167.665 173.626 165.674 173.323 cv
163.178 172.943 160.811 172.052 158.32 171.656 cv
152.816 170.781 147.573 171.432 142.757 174.225 cv
141.738 174.815 142.438 176.297 143.534 176.067 cv
149.574 174.796 154.735 174.008 160.808 175.521 cv
164.129 176.349 167.86 177.378 171.197 176.351 cv
171.343 176.396 171.5 176.418 171.678 176.389 cv
174.394 175.937 177.161 175.982 179.814 175.163 cv
182.429 174.356 184.614 172.491 187.217 171.739 cv
191.856 170.398 197.073 173.404 201.323 170.845 cv
202.168 170.335 202.037 168.955 201.043 168.703 cv
cp
f
238.742 162.054 mo
234.347 160.814 229.729 162.846 225.739 164.661 cv
219.375 167.556 214.463 169.755 207.304 169.279 cv
205.859 169.183 205.902 171.362 207.304 171.506 cv
212.69 172.059 216.85 171.917 221.871 169.835 cv
224.415 168.78 226.856 167.494 229.415 166.477 cv
232.514 165.244 235.526 164.973 238.742 164.269 cv
239.878 164.02 239.793 162.351 238.742 162.054 cv
cp
f
288.69 107.65 mo
287.975 105.273 284.458 105.185 283.781 107.65 cv
281.625 115.5 274.525 119.311 271.161 126.353 cv
268.944 130.991 262.021 133.575 261.762 138.919 cv
260.092 141.135 258.953 143.746 258.872 146.515 cv
257.219 148.9 255.485 151.297 253.432 153.083 cv
251.18 155.039 247.797 155.725 246.153 158.291 cv
245.824 158.805 245.965 159.379 246.328 159.763 cv
246.134 159.752 245.945 159.757 245.747 159.734 cv
244.394 159.575 244.069 161.897 245.423 162.128 cv
252.399 163.315 255.932 159.282 260.076 154.146 cv
262.74 150.845 265.641 148.029 269.002 145.441 cv
271.054 143.863 273.224 142.545 273.953 140.107 cv
276.82 137.987 279.379 134.9 280.82 132.03 cv
282.202 129.276 282.543 126.166 283.846 123.368 cv
284.858 121.196 285.926 117.741 287.353 115.9 cv
287.656 115.509 287.708 115.082 287.602 114.716 cv
288.74 112.37 289.396 109.995 288.69 107.65 cv
cp
f
235.819 159.138 mo
229.242 161.902 221.103 161.513 216.207 167.515 cv
215.999 167.77 216.184 168.251 216.561 168.123 cv
219.854 167.001 222.499 164.681 225.848 163.583 cv
229.286 162.456 232.892 162.117 236.274 160.788 cv
237.296 160.386 236.826 158.715 235.819 159.138 cv
cp
f
193.394 160.205 mo
193.163 159.71 192.3 159.824 192.201 160.361 cv
191.965 161.64 191.826 163.159 192.454 164.337 cv
192.673 164.749 193.231 164.683 193.466 164.337 cv
194.28 163.135 193.975 161.452 193.394 160.205 cv
cp
f
171.146 164.91 mo
170.302 165.134 169.485 165.429 168.649 165.674 cv
167.891 165.896 167.102 165.96 166.437 166.418 cv
166.249 166.548 166.301 166.886 166.562 166.876 cv
167.308 166.852 167.938 166.512 168.653 166.345 cv
169.509 166.144 170.429 166.112 171.302 166.061 cv
172.159 166.01 171.969 164.691 171.146 164.91 cv
cp
f
159.551 167.608 mo
158.136 167.616 156.776 167.464 155.373 167.31 cv
154.271 167.188 153.076 166.789 151.999 167.081 cv
151.705 167.161 151.574 167.571 151.813 167.786 cv
152.663 168.547 154.062 168.678 155.171 168.8 cv
156.614 168.958 158.113 168.841 159.551 168.686 cv
160.224 168.613 160.261 167.604 159.551 167.608 cv
cp
f
149.101 167.199 mo
148.113 167.383 147.122 167.538 146.122 167.648 cv
145.354 167.732 144.549 167.683 143.806 167.898 cv
143.609 167.955 143.579 168.289 143.806 168.327 cv
145.471 168.605 147.598 168.048 149.25 167.742 cv
149.606 167.676 149.456 167.134 149.101 167.199 cv
cp
f
132.37 165.076 mo
130.582 164.821 128.754 164.509 127.012 164.014 cv
125.225 163.506 123.663 162.476 121.885 161.964 cv
119.167 161.181 115.98 162.472 113.691 163.872 cv
113.419 164.038 113.501 164.576 113.868 164.527 cv
115.116 164.36 118.597 163.216 119.016 163.174 cv
120.518 163.024 121.332 163.196 122.175 163.471 cv
119.839 164.076 120.04 168.026 122.802 168.026 cv
124.98 168.026 125.564 165.562 124.564 164.226 cv
127.123 164.962 129.561 165.714 132.246 165.997 cv
132.766 166.052 132.894 165.151 132.37 165.076 cv
cp
f
110.09 163.723 mo
107.328 163.262 105.484 162.051 103.172 160.632 cv
101.807 159.794 100.269 158.853 98.6572 159.415 cv
98.2305 159.563 98.1094 160.155 98.5283 160.4 cv
100.105 161.322 102.126 161.843 103.831 162.541 cv
105.794 163.345 107.8 164.073 109.896 164.423 cv
110.354 164.5 110.551 163.8 110.09 163.723 cv
cp
f
89.6894 155.455 mo
89.7368 155.138 89.6001 154.793 89.2324 154.728 cv
86.3779 154.217 83.4307 153.964 80.6128 153.285 cv
78.2939 152.726 76.6494 151.336 74.3896 150.784 cv
71.4834 150.073 68.71 149.522 65.9111 148.307 cv
63.4228 147.227 61.6006 146.1 58.8935 145.821 cv
58.4717 145.777 58.3266 146.419 58.6807 146.607 cv
61.7251 148.219 65.2519 149.75 68.4785 150.9 cv
70.5557 151.64 72.9795 151.511 74.9917 152.414 cv
76.8721 153.259 78.0498 154.548 80.1309 155.034 cv
82.0151 155.474 84.0478 155.643 86.0474 155.786 cv
85.3979 157.12 86.0317 159.123 87.9687 159.123 cv
90.0713 159.123 90.6416 156.754 89.6894 155.455 cv
cp
f
54.4687 139.188 mo
53.6328 139.188 53.0967 139.646 52.8467 140.237 cv
50.8843 138.312 48.8076 136.212 46.4868 135.023 cv
44.2475 133.876 41.814 133.884 39.5122 133.442 cv
39.3613 132.867 38.9062 132.384 38.1352 132.384 cv
37.7241 132.384 37.4062 132.526 37.1714 132.742 cv
36.3179 132.367 35.5 131.845 34.7422 131.059 cv
34.1455 130.439 33.2563 131.551 34.0181 131.997 cv
34.9121 132.521 35.7905 133.238 36.7036 133.8 cv
36.6709 134.567 37.1445 135.361 38.1352 135.361 cv
38.6626 135.361 39.0395 135.131 39.2768 134.804 cv
40.4844 135.059 41.7583 135.15 42.9228 135.429 cv
47.2773 136.469 50.103 139.984 53.3203 142.897 cv
53.6816 143.225 54.1221 143.136 54.4072 142.885 cv
54.4687 142.891 li
56.8511 142.891 56.8555 139.188 54.4687 139.188 cv
cp
f
279.162 78.7305 mo
278.911 78.0127 277.793 78.3008 278.009 79.0483 cv
278.715 81.4844 279.545 83.9321 280.113 86.4053 cv
280.826 89.5146 279.538 91.6123 278.508 94.4619 cv
278.423 94.6978 278.746 94.9668 278.956 94.8057 cv
284.48 90.5806 280.975 83.9204 279.162 78.7305 cv
cp
f
275.135 98.4893 mo
275.135 98.5894 li
275.135 98.4893 li
cp
f
266.035 108.123 mo
264.21 108.288 262.596 109.467 261.594 110.98 cv
260.909 112.014 260.519 113.244 259.962 114.345 cv
259.476 115.308 258.776 116.202 258.51 117.255 cv
258.462 117.444 258.606 117.692 258.826 117.67 cv
263.092 117.251 261.749 109.646 266.135 108.859 cv
266.546 108.785 266.457 108.084 266.035 108.123 cv
cp
f
254.474 115.614 mo
253.888 115.816 253.305 116.024 252.715 116.214 cv
252.399 116.316 252.44 116.824 252.796 116.813 cv
253.408 116.793 254.02 116.793 254.632 116.788 cv
255.531 116.779 255.285 115.333 254.474 115.614 cv
cp
f
248.995 118.531 mo
248.05 120.156 247.329 121.905 246.283 123.471 cv
245.291 124.953 243.733 125.914 242.76 127.334 cv
242.657 127.485 242.699 127.722 242.826 127.846 cv
243.069 128.081 li
243.263 128.268 243.611 128.406 243.878 128.294 cv
245.497 127.62 246.499 125.911 247.374 124.448 cv
248.472 122.613 248.896 120.763 249.509 118.748 cv
249.602 118.441 249.154 118.256 248.995 118.531 cv
cp
f
240.969 125.772 mo
240.411 125.772 240.41 126.639 240.969 126.639 cv
241.526 126.639 241.527 125.772 240.969 125.772 cv
cp
f
231.44 136.272 mo
226.793 138.419 227.116 134.668 224.274 134.212 cv
222.976 134.003 222.037 134.692 221.007 135.358 cv
219.185 136.536 217.438 138.02 215.742 139.374 cv
213.992 140.771 212.83 142.954 211.055 144.226 cv
210.675 144.498 210.797 145.102 211.297 145.121 cv
212.63 145.172 212.604 145.059 213.643 144.154 cv
214.808 143.139 215.57 141.769 216.834 140.791 cv
218.303 139.654 219.818 138.559 221.324 137.473 cv
223.708 135.754 225.344 137.482 227.762 137.969 cv
229.365 138.291 230.594 138.008 232.043 137.305 cv
232.739 136.967 232.131 135.953 231.44 136.272 cv
cp
f
262.076 61.3081 mo
259.833 55.043 260.972 47.2329 252.373 48.124 cv
246.878 48.6929 240.857 50.8711 235.63 48.1909 cv
232.622 46.6479 230.635 43.7637 226.963 44.1489 cv
226.426 44.2051 226.186 45.0786 226.823 45.1846 cv
230.42 45.7832 232.34 48.3076 235.376 49.9111 cv
237.965 51.2773 240.592 51.2251 243.453 50.9185 cv
247.068 50.5308 252.665 48.582 255.698 50.835 cv
258.424 52.8604 258.523 58.5981 259.906 61.9063 cv
260.448 63.2031 262.574 62.7007 262.076 61.3081 cv
cp
f
221.818 45.9004 mo
220.123 46.0503 218.774 44.9932 218.104 43.4805 cv
217.474 42.0615 217.743 40.4878 217.194 39.0859 cv
217.08 38.793 216.585 38.6157 216.423 38.9854 cv
214.886 42.4966 217.798 47.7422 221.818 47.4707 cv
222.826 47.4028 222.821 45.8115 221.818 45.9004 cv
cp
f
217.416 35.9229 mo
215.916 34.7192 214.296 33.6616 212.343 33.4429 cv
211.064 33.2993 209.805 33.6187 208.527 33.5894 cv
207.136 33.5571 206.058 32.9624 204.753 32.6123 cv
204.449 32.5308 204.081 32.832 204.205 33.1602 cv
204.779 34.6797 206.272 35.0249 207.813 35.127 cv
211.202 35.3516 213.706 34.7031 216.677 36.8799 cv
217.23 37.2852 217.956 36.3564 217.416 35.9229 cv
cp
f
238.713 84.7603 mo
237.858 83.4229 236.479 82.6533 235.752 81.146 cv
234.659 78.877 234.8 76.3325 234.938 73.8896 cv
234.977 73.2148 233.896 73.208 233.884 73.8896 cv
233.839 76.3428 233.717 79.311 234.923 81.5615 cv
235.34 82.3398 236.018 82.8145 236.513 83.521 cv
237.916 85.5225 237.685 87.6318 237.547 89.8633 cv
237.519 90.3096 238.116 90.3975 238.333 90.0762 cv
239.366 88.5454 239.772 86.4165 238.713 84.7603 cv
cp
f
246.339 88.2822 mo
246.137 87.7334 245.888 87.3262 245.504 86.8926 cv
245.141 86.4839 244.467 86.3965 243.99 86.6064 cv
243.458 86.8403 243.185 87.3003 243.139 87.8726 cv
243.103 88.3149 243.137 88.7007 243.265 89.1294 cv
243.504 89.9272 244.394 90.5117 245.226 90.2427 cv
245.991 89.9951 246.647 89.1196 246.339 88.2822 cv
cp
f
259.802 87.7163 mo
258.958 87.7163 258.956 89.0288 259.802 89.0288 cv
260.646 89.0288 260.648 87.7163 259.802 87.7163 cv
cp
f
261.135 90.7212 mo
259.868 90.7212 259.866 92.6899 261.135 92.6899 cv
262.402 92.6899 262.404 90.7212 261.135 90.7212 cv
cp
f
264.302 87.5508 mo
262.387 87.5508 262.383 90.5273 264.302 90.5273 cv
266.217 90.5273 266.22 87.5508 264.302 87.5508 cv
cp
f
263.881 84.6465 mo
263.701 84.5845 263.521 84.522 263.341 84.46 cv
262.562 84.1914 262.112 85.2173 262.588 85.7529 cv
262.719 85.8999 262.85 86.0469 262.98 86.1938 cv
263.381 86.6445 264.147 86.498 264.435 86.0063 cv
264.747 85.4722 264.441 84.8394 263.881 84.6465 cv
cp
f
205.969 104.877 mo
203.616 104.877 203.612 108.534 205.969 108.534 cv
208.321 108.534 208.325 104.877 205.969 104.877 cv
cp
f
203.635 95.7173 mo
201.72 95.7173 201.717 98.6938 203.635 98.6938 cv
205.55 98.6938 205.554 95.7173 203.635 95.7173 cv
cp
f
213.635 85.8032 mo
210.543 85.8032 210.539 90.6079 213.635 90.6079 cv
216.727 90.6079 216.732 85.8032 213.635 85.8032 cv
cp
f
203.729 110.445 mo
203.195 109.911 202.057 109.782 201.541 110.445 cv
201.192 110.894 200.804 111.332 200.486 111.803 cv
200.136 112.322 199.993 113.03 200.108 113.646 cv
200.184 114.059 200.618 114.305 201 114.326 cv
202.184 114.393 202.979 113.389 203.729 112.632 cv
204.316 112.039 204.321 111.038 203.729 110.445 cv
cp
f
190.469 124.384 mo
188.553 124.384 188.55 127.361 190.469 127.361 cv
192.384 127.361 192.387 124.384 190.469 124.384 cv
cp
f
189.635 139.051 mo
187.72 139.051 187.717 142.027 189.635 142.027 cv
191.55 142.027 191.554 139.051 189.635 139.051 cv
cp
f
184.802 137.441 mo
182.103 137.441 182.098 141.637 184.802 141.637 cv
187.501 141.637 187.506 137.441 184.802 137.441 cv
cp
f
171.135 135.551 mo
169.22 135.551 169.217 138.527 171.135 138.527 cv
173.05 138.527 173.054 135.551 171.135 135.551 cv
cp
f
170.302 145.447 mo
167.18 145.447 167.175 150.298 170.302 150.298 cv
173.424 150.298 173.429 145.447 170.302 145.447 cv
cp
f
159.302 145.884 mo
157.387 145.884 157.383 148.861 159.302 148.861 cv
161.217 148.861 161.22 145.884 159.302 145.884 cv
cp
f
149.635 136.967 mo
146.755 136.967 146.75 141.444 149.635 141.444 cv
152.516 141.444 152.52 136.967 149.635 136.967 cv
cp
f
141.135 147.051 mo
139.22 147.051 139.217 150.027 141.135 150.027 cv
143.05 150.027 143.054 147.051 141.135 147.051 cv
cp
f
196.135 101.989 mo
196.135 102.089 li
196.135 101.989 li
cp
f
185.469 102.384 mo
183.553 102.384 183.55 105.361 185.469 105.361 cv
187.384 105.361 187.387 102.384 185.469 102.384 cv
cp
f
209.135 85.3843 mo
207.22 85.3843 207.217 88.3608 209.135 88.3608 cv
211.05 88.3608 211.054 85.3843 209.135 85.3843 cv
cp
f
219.302 75.1558 mo
219.302 75.2559 li
219.302 75.1558 li
cp
f
226.969 57.6743 mo
223.711 57.6743 223.706 62.7368 226.969 62.7368 cv
230.226 62.7368 230.231 57.6743 226.969 57.6743 cv
cp
f
242.802 64.4893 mo
242.802 64.5894 li
242.802 64.4893 li
cp
f
245.802 73.1558 mo
245.802 73.2559 li
245.802 73.1558 li
cp
f
268.635 78.3223 mo
268.635 78.4224 li
268.635 78.3223 li
cp
f
267.635 78.3647 mo
264.408 78.3647 264.402 83.3804 267.635 83.3804 cv
270.862 83.3804 270.868 78.3647 267.635 78.3647 cv
cp
f
260.145 132.903 mo
260.796 131.813 260.296 130.021 258.635 130.021 cv
256.764 130.021 256.367 132.298 257.435 133.279 cv
256.589 134.437 257.094 136.543 258.969 136.543 cv
261.065 136.543 261.46 133.894 260.145 132.903 cv
cp
f
257.969 136.488 mo
255.33 136.488 255.325 140.59 257.969 140.59 cv
260.608 140.59 260.612 136.488 257.969 136.488 cv
cp
f
242.635 147.451 mo
240.162 147.451 240.158 151.294 242.635 151.294 cv
245.108 151.294 245.113 147.451 242.635 147.451 cv
cp
f
239.802 150.656 mo
239.802 150.756 li
239.802 150.656 li
cp
f
241.135 154.884 mo
239.22 154.884 239.217 157.861 241.135 157.861 cv
243.05 157.861 243.054 154.884 241.135 154.884 cv
cp
f
224.969 157.26 mo
222.465 157.26 222.461 161.151 224.969 161.151 cv
227.472 161.151 227.476 157.26 224.969 157.26 cv
cp
f
220.135 151.551 mo
218.22 151.551 218.217 154.527 220.135 154.527 cv
222.05 154.527 222.054 151.551 220.135 151.551 cv
cp
f
217.802 158.717 mo
215.887 158.717 215.883 161.694 217.802 161.694 cv
219.717 161.694 219.72 158.717 217.802 158.717 cv
cp
f
200.302 163.322 mo
200.302 163.422 li
200.302 163.322 li
cp
f
198.469 160.656 mo
198.469 160.756 li
198.469 160.656 li
cp
f
189.469 163.384 mo
187.553 163.384 187.55 166.361 189.469 166.361 cv
191.384 166.361 191.387 163.384 189.469 163.384 cv
cp
f
174.469 163.983 mo
172.251 163.983 172.248 167.428 174.469 167.428 cv
176.686 167.428 176.689 163.983 174.469 163.983 cv
cp
f
161.969 162.656 mo
161.969 162.756 li
161.969 162.656 li
cp
f
155.135 166.656 mo
155.135 166.756 li
155.135 166.656 li
cp
f
137.635 165.489 mo
137.635 165.589 li
137.635 165.489 li
cp
f
110.135 158.384 mo
108.22 158.384 108.217 161.361 110.135 161.361 cv
112.05 161.361 112.054 158.384 110.135 158.384 cv
cp
f
101.635 156.28 mo
100.444 156.28 100.442 158.131 101.635 158.131 cv
102.827 158.131 102.829 156.28 101.635 156.28 cv
cp
f
96.3018 154.041 mo
93.3008 154.041 93.2959 158.705 96.3018 158.705 cv
99.3027 158.705 99.3081 154.041 96.3018 154.041 cv
cp
f
72.9687 147.989 mo
72.9687 148.089 li
72.9687 147.989 li
cp
f
63.1352 145.989 mo
63.1352 146.089 li
63.1352 145.989 li
cp
f
286.859 119.416 mo
285.513 122.336 283.93 125.281 284.302 128.6 cv
284.633 131.555 284.476 133.643 282.034 135.503 cv
282.014 134.604 281.742 133.687 281.396 132.849 cv
281.133 132.212 280.852 131.601 280.457 131.032 cv
280.073 130.481 279.396 130.098 279.13 129.484 cv
279.057 129.314 278.898 129.29 278.753 129.338 cv
278.503 127.907 278.392 126.459 278.579 124.91 cv
278.654 124.287 277.691 124.208 277.52 124.767 cv
277.032 126.357 276.737 126.737 276.834 128.43 cv
276.907 129.693 277.156 130.921 277.43 132.151 cv
277.5 132.463 277.539 132.803 277.569 133.152 cv
277.508 134.488 277.322 136.003 277.967 137.209 cv
278.001 137.331 278.031 137.456 278.075 137.572 cv
277.384 137.848 276.689 138.116 275.999 138.405 cv
273.316 139.529 271.362 140.953 269.698 143.354 cv
267.551 146.454 265.102 149.128 262.87 152.141 cv
260.599 155.207 259.526 158.99 256.591 161.55 cv
254.162 163.668 250.931 165.082 247.793 166.245 cv
247.404 166.015 246.942 165.856 246.389 165.825 cv
241.227 165.527 236.665 165.904 232.312 167.209 cv
232.029 166.652 231.57 166.123 231.327 165.62 cv
231.119 165.192 230.486 165.425 230.475 165.851 cv
230.46 166.4 230.382 167.163 230.506 167.814 cv
227.816 168.795 225.186 170.146 222.523 171.946 cv
220.102 173.582 217.513 174.406 214.826 174.742 cv
214.804 174.609 214.781 174.477 214.758 174.344 cv
214.764 174.066 214.733 173.779 214.664 173.486 cv
214.468 172.657 214.187 171.854 214.007 171.017 cv
213.82 170.145 212.454 170.349 212.465 171.226 cv
212.47 171.635 212.448 172.14 212.451 172.661 cv
212.261 173.245 212.385 174.044 212.465 174.506 cv
212.488 174.641 212.519 174.777 212.544 174.914 cv
205.061 175.15 196.99 172.403 189.752 173.255 cv
185.868 173.712 182.844 175.805 179.431 177.384 cv
178.919 174.732 178.096 172.169 177.57 169.527 cv
177.402 168.682 176.049 168.878 176.074 169.73 cv
176.159 172.662 176.129 175.472 176.687 178.37 cv
176.71 178.447 li
171.294 180.096 166.331 178.57 161.18 176.362 cv
160.436 176.043 159.712 175.788 158.996 175.578 cv
158.967 175.219 158.919 174.857 158.878 174.495 cv
158.771 173.54 158.484 172.677 157.755 172.02 cv
157.39 171.689 156.847 171.928 156.815 172.409 cv
156.762 173.207 156.573 174.16 156.51 175.093 cv
154.719 174.928 152.925 175.173 150.992 175.967 cv
147.126 177.556 143.848 178.965 140.211 179.505 cv
139.907 178.075 139.351 176.701 139 175.277 cv
138.866 174.729 137.994 174.839 138.011 175.411 cv
138.052 176.835 137.94 178.296 138.115 179.715 cv
137.385 179.75 136.64 179.757 135.864 179.712 cv
135.564 178.708 134.713 177.874 133.28 177.81 cv
128.682 177.604 125.129 174.519 121.042 172.748 cv
120.893 170.777 119.982 168.773 119.56 166.943 cv
119.408 166.284 118.377 166.432 118.386 167.103 cv
118.405 168.623 118.11 170.213 118.053 171.773 cv
117.989 171.757 li
111.997 170.543 106.266 175.373 100.537 172.727 cv
98.6719 171.865 97.0381 170.644 95.4512 169.345 cv
95.9653 167.168 95.0425 165.358 93.9233 163.136 cv
92.9853 161.273 92.4048 160.146 92.2895 158.057 cv
92.1851 156.157 92.1201 154.253 92.0327 152.352 cv
92.0102 152.26 li
93.1616 152.06 94.248 151.865 95.1885 151.765 cv
98.6772 151.394 102.188 150.87 105.689 150.649 cv
107.756 150.518 109.138 150.474 110.989 151.506 cv
111.104 151.569 111.21 151.655 111.323 151.725 cv
111.279 151.804 111.228 151.872 111.194 151.962 cv
110.409 154.086 111.724 155.39 111.979 157.417 cv
112.235 159.459 111.952 161.158 112.67 163.147 cv
112.728 163.306 112.958 163.322 113.009 163.147 cv
113.577 161.224 113.329 159.694 113.361 157.727 cv
113.384 156.317 114.015 155.236 114.223 154.052 cv
114.458 154.258 114.694 154.465 114.931 154.655 cv
119.354 158.208 121.868 160.556 127.666 160.589 cv
132.176 160.616 138.604 161.23 143.193 159.748 cv
143.362 161.134 143.735 162.425 143.927 163.835 cv
144.126 165.306 144.286 166.752 144.547 168.216 cv
144.689 169.008 145.795 168.735 145.859 168.039 cv
146.001 166.508 146.012 164.983 146.106 163.453 cv
146.203 161.879 146.571 160.468 146.503 158.867 cv
146.491 158.564 146.409 158.308 146.287 158.089 cv
148.583 156.157 150.508 152.859 152.193 150.104 cv
154.554 153.378 157.202 156.36 160.257 159.08 cv
160.526 159.32 160.812 159.463 161.101 159.553 cv
161.276 160.818 162.021 162.285 162.256 163.155 cv
162.382 163.621 163.122 163.536 163.108 163.04 cv
163.077 161.956 163.233 160.897 163.141 159.815 cv
163.124 159.615 163.108 159.405 163.082 159.196 cv
163.381 158.982 163.639 158.713 163.819 158.405 cv
163.964 158.36 164.107 158.297 164.237 158.19 cv
166.647 156.216 167.307 153.663 171.549 155.022 cv
172.33 155.272 173.117 155.801 173.904 156.331 cv
174.123 157.881 174.861 159.442 175.158 160.913 cv
175.269 161.462 176.039 161.285 176.079 160.789 cv
176.171 159.66 176.236 158.64 176.18 157.624 cv
179.623 159.097 183.944 160.522 187.689 160.514 cv
188.569 160.512 189.39 160.362 190.169 160.112 cv
190.319 161.605 190.629 163.069 190.842 164.563 cv
190.97 165.462 192.42 165.232 192.407 164.352 cv
192.382 162.671 192.442 161.011 192.361 159.33 cv
192.341 159.123 li
193.95 158.184 195.416 156.918 196.911 155.783 cv
199.527 153.798 200.661 151.919 204.193 153.042 cv
206.007 153.62 207.808 154.766 209.597 155.532 cv
209.834 157.835 210.408 159.955 211.319 162.15 cv
211.771 163.24 213.314 162.853 213.104 161.658 cv
212.679 159.243 212.537 156.711 212.455 154.261 cv
212.445 153.982 212.353 153.684 212.196 153.433 cv
212.182 153.276 li
214.058 151.264 215.574 148.824 217.224 146.668 cv
217.987 145.66 218.769 144.667 219.568 143.687 cv
219.993 142.712 220.497 142.788 221.079 143.915 cv
222.716 144.389 224.446 145.651 226.028 146.341 cv
228.084 147.237 230.203 148.337 232.412 148.029 cv
232.486 148.746 232.732 149.484 232.878 150.154 cv
233.039 150.898 233.181 151.658 233.389 152.391 cv
233.626 153.227 234.076 153.966 234.341 154.793 cv
234.582 155.545 235.699 155.413 235.722 154.606 cv
235.747 153.746 235.961 152.915 235.89 152.052 cv
235.826 151.274 235.685 150.483 235.533 149.72 cv
235.373 148.919 235.255 147.942 234.879 147.163 cv
237.177 146.015 239.413 144.148 241.455 142.869 cv
241.847 142.623 242.1 142.309 242.251 141.969 cv
245.108 140.498 249.416 141.296 252.503 141.343 cv
252.661 141.345 252.811 141.331 252.955 141.308 cv
253.148 142.401 253.364 143.489 253.612 144.561 cv
254.357 147.783 255.733 150.984 256.047 154.285 cv
256.143 155.292 257.805 155.732 257.98 154.547 cv
258.43 151.522 258.009 149.219 257.135 146.296 cv
256.138 142.962 255.876 139.587 255.174 136.197 cv
254.979 135.252 253.951 134.992 253.184 135.282 cv
252.449 133.301 252.442 130.831 252.177 128.613 cv
255.627 128.201 259.281 127.986 262.631 127.103 cv
263.716 128.029 265.439 128.146 266.163 126.522 cv
267.041 124.551 267.758 122.567 268.361 120.545 cv
268.468 121.073 268.584 121.6 268.673 122.119 cv
269.16 124.974 269.841 127.631 270.593 130.413 cv
270.778 131.096 271.912 130.983 271.859 130.242 cv
271.67 127.571 271.534 124.951 271.234 122.279 cv
271.023 120.387 271.193 118.205 270.324 116.486 cv
270.195 116.311 li
275.581 115.091 279.028 111.667 282.561 107.401 cv
282.654 107.604 282.762 107.808 282.88 108.016 cv
283.17 108.525 283.108 108.919 283.088 109.486 cv
283.061 110.27 283.223 110.612 283.499 111.311 cv
283.838 112.171 284.95 112.001 285.064 111.099 cv
285.138 110.52 285.253 110.195 285.125 109.611 cv
285.033 109.189 284.804 108.799 284.764 108.37 cv
284.686 107.519 285.371 106.769 285.281 105.864 cv
285.237 105.414 285.008 105.053 284.704 104.8 cv
285.693 103.646 286.776 102.449 287.744 101.188 cv
287.8 103.216 287.564 105.269 287.689 107.675 cv
287.784 109.5 288.818 111.128 288.962 112.858 cv
289.161 115.249 287.809 117.358 286.859 119.416 cv
cp
91.0513 165.791 mo
89.9199 164.969 88.7324 164.229 87.4272 163.665 cv
81.8701 161.262 75.8018 161.613 70.1357 159.658 cv
70.0225 158.388 69.8242 157.059 70.0166 155.841 cv
70.3101 153.991 71.4951 152.487 71.8706 150.711 cv
72.2104 149.104 72.3955 146.932 72.0376 145.111 cv
72.9375 144.979 73.8379 144.807 74.7266 144.627 cv
78.085 143.947 77.5996 143.453 78.6113 146.662 cv
79.1133 148.253 79.6274 149.878 80.8476 151.077 cv
83.1831 153.371 87.0937 153.058 90.6465 152.489 cv
90.5898 155.534 90.3882 158.499 90.9922 161.473 cv
91.292 162.95 91.126 164.396 91.0513 165.791 cv
cp
63.9414 138.185 mo
60.0361 134.166 56.2827 129.65 51.6548 126.454 cv
51.1792 126.125 50.6518 126.175 50.2266 126.427 cv
46.7568 126.792 43.688 128.034 42.3276 124.261 cv
41.352 121.556 42.146 118.4 41.2461 115.746 cv
39.6484 111.032 33.3599 113.426 29.7949 113.549 cv
28.8755 113.581 27.7422 113.727 26.6763 113.721 cv
27.5 109.898 27.5415 105.794 28.1538 101.918 cv
28.5674 99.2988 29.5425 96.4097 29.4902 93.6904 cv
41.5088 95.52 53.5581 93.0239 65.625 93.0322 cv
66.1304 93.0327 66.5664 92.8794 66.9302 92.6304 cv
68.7642 94.083 71.5332 94.2964 73.7856 94.9775 cv
77.7349 96.1709 81.5547 97.6636 85.4277 99.0708 cv
86.0874 99.3105 86.687 99.1753 87.1655 98.8428 cv
88.2744 99.312 89.4941 98.8418 90.6426 98.4253 cv
91.4224 98.1421 92.1987 97.8486 92.9751 97.5566 cv
93.6899 97.3281 94.4058 97.0723 95.1304 96.7778 cv
95.3203 96.7007 95.5176 96.625 95.7129 96.5488 cv
96.1416 96.3921 96.5684 96.2285 96.999 96.0776 cv
97.206 95.9536 li
98.9888 95.2158 100.69 94.292 101.425 92.4883 cv
101.578 92.1147 101.511 91.772 101.332 91.4863 cv
101.58 90.3672 101.229 89.1533 101.177 87.9604 cv
101.108 86.3853 100.999 84.8423 100.773 83.2813 cv
100.715 82.8755 100.097 82.9956 100.083 83.3745 cv
100.028 84.8955 99.9912 86.4463 99.8227 87.9604 cv
99.7192 88.8882 99.3486 89.8169 99.2353 90.73 cv
96.9219 90.9663 94.4429 92.9585 92.3389 93.728 cv
90.9351 94.2412 89.0688 94.5396 87.5708 95.2495 cv
87.4482 95.1489 87.3125 95.0562 87.1523 94.9795 cv
83.4849 93.23 79.6138 91.8501 75.7163 90.709 cv
73.9541 90.1929 71.8184 89.3213 69.8013 89.1245 cv
69.8516 88.875 li
71.7324 86.4644 72.9204 82.8242 73.9282 80.5596 cv
75.1851 77.7358 76.5601 75.0479 77.9521 72.2891 cv
78.5488 71.1064 78.9722 70.4233 79.1059 69.6641 cv
81.4438 68.8442 83.7324 67.8911 86.0059 66.9067 cv
88.689 65.7451 91.5986 64.8687 94.1269 63.3931 cv
94.8623 62.9639 94.3452 61.9502 93.5762 62.0864 cv
90.8706 62.5664 88.2656 63.7134 85.6313 64.5024 cv
82.9751 65.2983 80.3286 66.1245 77.748 67.1445 cv
77.3125 67.3169 77.04 67.6294 76.9018 67.9844 cv
76.1226 68.4824 75.7363 69.2354 74.9258 70.5205 cv
73.2393 73.1934 71.623 75.894 69.9106 78.5479 cv
68.3428 80.9785 65.6504 84.5498 65.1748 87.8154 cv
58.9585 87.0967 52.7959 88.416 46.5893 88.9502 cv
40.0351 89.5142 33.0132 87.9214 26.6352 89.563 cv
26.3389 89.6392 26.0942 89.7861 25.896 89.9736 cv
25.2363 90.2388 24.6909 90.813 24.6099 91.7021 cv
24.4892 93.0278 24.3618 94.3726 24.2363 95.7241 cv
23.835 97.8481 23.7329 100.097 23.4634 102.117 cv
23.23 103.864 22.81 105.828 22.6064 107.783 cv
22.2119 105.351 21.8135 102.918 21.4492 100.482 cv
20.7808 96.0137 21.2851 92.8228 23.7007 88.9399 cv
25.6362 85.8291 27.6782 82.9561 30.6255 80.71 cv
31.6113 79.9585 31.9145 78.3457 30.6255 77.6558 cv
30.1543 77.4038 29.6894 77.1836 29.2231 76.9766 cv
32.1968 74.0356 35.2754 71.209 38.3867 68.4097 cv
41.8672 65.2773 45.4136 61.1821 49.416 58.604 cv
49.4912 58.6172 li
52.0713 59.0908 53.1782 55.1387 50.5815 54.6621 cv
46.459 53.9053 40.7378 53.7896 36.6245 52.209 cv
38.0957 48.8359 46.3628 46.188 48.7158 45.4395 cv
54.1382 43.7139 59.6182 42.1504 65.0747 40.5376 cv
72.0185 38.4849 81.4766 37.0166 85.3965 30.2002 cv
87.4351 31.0962 88.918 32.4824 90.1138 34.5396 cv
90.6016 35.3794 91.6562 35.5942 92.4883 35.1621 cv
92.6919 35.0566 92.8994 34.9595 93.1079 34.8662 cv
93.2026 35.498 93.5312 36.1099 94.1226 36.5181 cv
95.5791 37.5229 94.375 38.4204 93.8037 40.0317 cv
93.1138 41.9795 92.4761 43.9463 91.9653 45.9492 cv
91.1045 49.3223 90.5273 52.6997 91.0976 56.1543 cv
91.1816 56.6641 91.4624 56.9849 91.8164 57.1733 cv
93.4756 59.4429 96.644 58.6577 99.1938 58.5186 cv
101.161 58.4111 103.874 58.5698 105.789 57.6206 cv
105.909 57.7344 106.038 57.8428 106.166 57.9473 cv
106.764 58.4316 107.465 58.9365 108.234 59.0815 cv
108.612 59.2852 108.98 59.4839 109.303 59.6943 cv
111.168 60.9106 113.055 62.0313 114.857 63.3452 cv
115.348 63.7021 115.988 62.8823 115.511 62.4985 cv
113.825 61.1416 112.204 59.686 110.467 58.3979 cv
109.517 57.6934 108.476 56.6177 107.32 56.1436 cv
107.36 55.8804 107.309 55.6099 107.084 55.4302 cv
105.062 53.8042 102.176 54.4497 99.7134 54.3862 cv
98.3203 54.3506 96.5644 53.9614 94.9853 54.019 cv
95.5425 51.7627 95.9497 49.4629 96.6016 47.2271 cv
97.4697 44.248 98.915 41.4395 99.7715 38.4785 cv
100.428 36.2065 99.8467 34.2544 98.3174 33.1758 cv
100.201 32.5688 101.971 31.7612 103.308 30.0596 cv
105.151 27.7134 104.584 25.7563 104.077 23.4448 cv
106.286 23.7446 108.519 24.0942 110.671 24.5586 cv
110.897 24.73 111.164 24.8579 111.494 24.8721 cv
121.012 25.2749 131.103 22.4736 140.205 19.6768 cv
141.928 21.9004 143.669 24.1079 145.453 26.2842 cv
145.925 26.8594 146.875 27.0371 147.559 26.8403 cv
155.103 24.6733 162.603 22.3618 170.114 20.0859 cv
171.969 19.5239 173.916 18.4756 175.853 18.9399 cv
177.534 19.3423 177.944 20.1982 179.28 21.3018 cv
179.991 21.8887 180.727 22.3882 181.487 22.8276 cv
174.797 28.4189 169.065 35.6567 163.155 41.8936 cv
159.597 45.6489 156.065 49.4292 152.531 53.208 cv
149.258 56.708 144.631 60.292 142.74 64.7285 cv
142.102 66.2246 143.04 67.7842 144.453 67.8325 cv
147.393 69.4756 150.833 70.1484 153.993 71.3086 cv
157.763 72.6929 161.434 74.3301 165.211 75.6953 cv
171.334 77.9082 180.298 81.9961 186.827 80.4409 cv
187.33 80.3208 187.698 80.064 187.943 79.7329 cv
188.334 79.6084 188.719 79.3467 189.051 78.9043 cv
191.609 75.5029 193.918 72.0146 196.175 68.4165 cv
197.177 67.1528 198.129 65.8218 198.713 64.4414 cv
200.106 62.2412 201.415 59.9844 202.208 57.5176 cv
202.393 56.9443 201.713 56.5562 201.262 56.8276 cv
200.971 56.4189 200.733 55.9634 200.44 55.5591 cv
200.068 55.0459 199.687 54.5308 199.293 54.0337 cv
198.584 53.1392 197.807 52.2944 197.059 51.4321 cv
196.894 51.2417 196.572 51.4902 196.709 51.7017 cv
197.398 52.7637 198.063 53.8438 198.811 54.8647 cv
199.185 55.376 199.559 55.8975 199.958 56.3901 cv
200.229 56.7261 200.515 56.9878 200.765 57.2974 cv
198.276 59.8184 196.46 62.9458 194.34 65.7725 cv
191.757 69.2153 189.039 72.5767 186.389 75.9712 cv
183.513 74.3955 179.934 74.1123 176.772 73.2944 cv
172.757 72.2559 168.815 71.0098 164.902 69.6421 cv
160.202 67.999 154.751 65.3262 149.459 64.708 cv
151.723 62.5645 153.701 59.9399 155.72 57.7681 cv
159.465 53.7417 163.212 49.7188 166.93 45.668 cv
173.135 38.9072 180.547 32.2554 185.75 24.5815 cv
186.055 24.6655 186.363 24.7451 186.677 24.8174 cv
188.203 25.1704 189.262 24.1011 189.509 22.9106 cv
190.625 22.3003 191.474 21.5625 192.604 20.6729 cv
195.485 18.4063 195.969 19.3882 198.689 21.373 cv
202.678 24.2837 206.661 28.0957 211.273 29.9775 cv
215.391 31.6577 220.222 31.5361 224.59 31.8662 cv
225.472 31.9326 227.182 31.7349 227.965 32.1211 cv
229.604 32.9292 229.072 33.6592 228.828 35.3564 cv
228.432 38.1187 227.451 40.9048 226.778 43.6133 cv
226.397 45.1494 227.774 46.5669 229.326 46.1611 cv
234.989 44.6802 243.403 40.6826 249.002 42.2407 cv
254.666 43.8169 259.864 51.1719 264.062 55.2886 cv
264.259 55.4814 264.467 55.6133 264.679 55.7153 cv
264.959 58.4946 265.368 61.2583 265.727 64.0293 cv
265.902 65.3735 265.893 67.0923 266.825 68.1841 cv
268.288 69.896 271.753 70.4546 273.743 71.1777 cv
277.574 72.5703 282.155 73.4604 283.971 77.5752 cv
285.717 81.5288 286.749 87.1611 286.138 92.0908 cv
285.734 92.6465 285.563 93.3623 285.777 94.1621 cv
285.342 96.0039 284.634 97.6851 283.585 99.0547 cv
282.138 100.945 280.695 103.006 279.124 104.927 cv
278.843 104.619 278.475 104.361 278.02 104.189 cv
277.278 103.909 276.424 103.773 275.641 103.671 cv
275.195 103.613 274.731 103.56 274.281 103.594 cv
271.894 102.017 268.588 101.727 265.796 100.995 cv
261.948 99.9863 257.945 98.5562 253.939 98.1055 cv
255.645 92.7891 257.037 87.1211 259.465 82.1094 cv
259.747 81.5283 259.772 80.9136 259.626 80.3472 cv
259.934 79.793 259.994 79.1187 259.585 78.4395 cv
259.597 78.4365 li
258.189 75.3555 256.562 72.3882 254.983 69.4028 cv
253.867 66.8457 252.446 64.4473 251.365 61.8828 cv
251.307 61.7437 251.214 61.6523 251.111 61.5889 cv
251.446 60.9775 251.466 60.2061 251.524 59.5342 cv
251.549 59.2466 251.123 59.2168 251.041 59.4688 cv
250.831 60.1147 250.557 60.832 250.634 61.5273 cv
250.395 61.604 250.21 61.833 250.28 62.1816 cv
250.748 64.5117 251.322 66.6875 252.105 68.8833 cv
252.184 70.1079 252.304 71.3296 252.563 72.5474 cv
253.075 74.9575 254.249 77.0859 255.344 79.2637 cv
253.493 81.6235 252.763 85.4341 251.812 88.2266 cv
250.883 90.9575 249.908 93.771 249.667 96.6567 cv
249.45 96.7251 li
245.194 98.4956 240.941 100.266 236.718 102.112 cv
234.32 103.161 231.613 104.097 229.212 105.407 cv
229.201 94.4805 229.311 83.4336 228.613 72.5605 cv
229.499 71.8535 228.091 70.5972 227.666 70.0972 cv
226.656 68.9121 225.537 67.8374 224.462 66.7114 cv
224.102 66.334 223.421 66.8325 223.726 67.2793 cv
224.6 68.561 225.415 69.8745 226.36 71.105 cv
226.59 71.4048 226.961 72.0161 227.4 72.4043 cv
225.495 84.3193 224.894 96.6641 224.415 108.706 cv
224.317 111.142 227.374 111.658 228.657 110.24 cv
231.476 110.208 234.732 108.293 237.045 107.391 cv
241.67 105.584 246.262 103.705 250.852 101.81 cv
251.417 101.576 251.831 101.213 252.115 100.786 cv
255.695 102.759 259.924 103.729 263.764 104.996 cv
266.913 106.036 270.636 108.242 274.018 107.906 cv
274.513 108.206 275.057 108.44 275.59 108.632 cv
273.333 110.572 270.731 111.961 267.511 112.186 cv
266.575 112.251 265.511 112.84 265.318 113.856 cv
264.688 117.173 263.689 120.269 262.282 123.322 cv
258.099 123.261 253.721 124.286 249.641 124.663 cv
248.172 124.799 247.3 125.92 247.57 127.381 cv
248.161 130.578 247.869 133.514 248.554 136.295 cv
246.209 136.252 243.892 136.349 241.668 137.027 cv
241.57 136.834 241.428 136.646 241.229 136.472 cv
238.035 133.667 233.954 131.736 230.477 129.239 cv
226.401 126.312 222.404 123.274 218.462 120.17 cv
218.934 118.632 218.916 116.898 219.168 115.35 cv
219.27 114.724 218.362 114.44 218.197 115.082 cv
217.822 116.536 217.227 118.091 217.112 119.635 cv
216.204 119.779 215.507 120.856 216.392 121.626 cv
220.161 124.906 224.008 128.08 227.962 131.136 cv
231.394 133.789 234.755 137.108 238.564 139.169 cv
238.511 139.394 238.493 139.625 238.513 139.858 cv
235.458 141.971 232.734 144.378 228.933 143.308 cv
226.22 142.543 222.193 138.744 219.257 139.253 cv
217.187 139.611 215.692 142.591 214.554 144.126 cv
212.88 146.383 211.058 148.711 209.86 151.285 cv
207.094 149.67 203.645 147.691 200.687 148.549 cv
202.314 142.168 205.48 135.897 206.602 129.445 cv
206.729 129.491 li
206.939 129.544 207.186 129.343 207.104 129.116 cv
207.013 128.865 206.894 128.629 206.761 128.401 cv
206.785 128.234 206.813 128.067 206.833 127.899 cv
206.882 127.491 206.419 127.35 206.117 127.504 cv
205.337 126.592 204.33 125.821 203.522 124.985 cv
203.099 124.548 202.281 125.137 202.657 125.653 cv
203.412 126.691 204.223 127.952 205.293 128.765 cv
203.505 132.018 202.496 135.745 201.286 139.224 cv
200.177 142.415 198.996 145.708 199.47 149.082 cv
197.124 150.426 194.992 152.538 192.843 154.166 cv
189.071 157.024 185.901 156.701 181.533 155.556 cv
178.499 154.761 176.041 153.468 173.323 151.987 cv
171.959 151.245 170.694 150.586 169.08 150.711 cv
166.354 150.922 164.094 153.124 162.97 155.57 cv
159.485 152.565 156.466 149.263 153.9 145.414 cv
153.009 144.078 151.288 144.14 150.386 145.414 cv
148.719 147.77 147.051 150.125 145.383 152.48 cv
143.278 155.455 142.212 155.879 138.455 156.194 cv
134.294 156.542 129.111 157.372 124.845 156.312 cv
124.973 156.178 125.084 156.027 125.174 155.86 cv
125.714 154.858 126.825 154.352 127.365 153.269 cv
127.657 152.683 127.661 151.948 127.955 151.389 cv
128.321 150.693 129.082 150.039 129.566 149.438 cv
130.677 148.064 131.666 146.541 132.385 144.913 cv
133.037 144.979 133.717 144.745 134.287 144.045 cv
136.502 141.327 139.021 138.888 141.518 136.432 cv
142.979 134.996 145.59 133.042 146.554 130.877 cv
150.293 130.023 153.648 127.147 156.867 125.134 cv
160.445 122.896 164.048 120.697 167.623 118.456 cv
168.098 118.84 168.957 118.449 168.815 117.684 cv
168.297 114.879 167.555 112.076 166.452 109.45 cv
166.305 109.099 165.682 109.085 165.715 109.55 cv
165.905 112.143 166.433 114.721 167.135 117.232 cv
163.206 118.993 159.297 120.811 155.368 122.57 cv
153.126 123.574 150.587 124.435 148.312 125.622 cv
147.423 122.926 146.648 120.163 145.928 117.414 cv
145.775 116.832 144.958 117.089 145.046 117.657 cv
145.393 119.869 145.557 122.089 145.971 124.29 cv
146.126 125.113 146.234 125.948 146.578 126.653 cv
145.979 127.053 145.403 127.479 144.886 127.965 cv
142.34 128.349 139.768 131.416 138.038 132.952 cv
136.35 134.452 134.691 135.958 133.122 137.56 cv
131.895 134.491 128.83 131.901 126.86 129.369 cv
124.16 125.9 121.903 121.535 118.841 118.287 cv
124.106 114.141 128.632 108.706 133.129 103.791 cv
138.265 98.1768 143.365 92.5317 148.661 87.0645 cv
149.117 86.5933 148.435 85.9316 147.948 86.3521 cv
142.175 91.3354 136.296 96.1992 130.538 101.199 cv
125.255 105.786 119.393 110.539 115.203 116.171 cv
114.615 116.961 114.896 117.938 115.521 118.586 cv
116.566 123.27 120.019 127.734 122.621 131.643 cv
124.235 134.068 126.198 137.736 128.752 139.837 cv
127.187 142.24 125.844 144.635 124.011 146.908 cv
122.595 148.665 121.747 150.938 120.725 152.928 cv
120.521 153.326 120.414 153.735 120.394 154.14 cv
117.252 151.731 114.475 148.038 110.808 146.75 cv
106.976 145.405 101.022 147.203 97.0976 147.621 cv
97.0059 147.631 96.9072 147.646 96.8135 147.656 cv
94.1211 142.801 89.7607 138.968 87.4692 133.808 cv
87.0976 132.97 85.7119 133.565 85.9917 134.431 cv
86.9136 137.284 88.3901 139.784 90.0566 142.265 cv
91.3237 144.152 92.6274 146.275 94.1831 148.03 cv
89.3647 148.769 83.6826 149.548 82.1689 144.403 cv
81.5015 142.134 80.9424 139.756 78.1738 139.646 cv
76.3037 139.571 74.1484 140.629 72.3105 140.891 cv
68.7798 141.393 66.4219 140.737 63.9414 138.185 cv
cp
67.146 158.371 mo
64.5444 156.978 62.31 154.74 59.5942 153.593 cv
56.709 152.375 53.6597 152.973 50.7651 151.919 cv
50.6147 151.864 50.4731 151.795 50.3257 151.735 cv
50.374 151.66 li
50.4668 151.203 50.5688 150.848 50.5264 150.384 cv
50.4824 149.902 50.5981 149.458 50.6147 148.981 cv
50.6182 148.883 50.4599 148.829 50.418 148.928 cv
50.2422 149.344 50.2002 149.795 50.04 150.218 cv
49.8574 150.7 49.8818 151.069 49.9341 151.571 cv
44.3325 149.079 40.8657 142.935 35.5176 139.895 cv
32.8535 138.381 29.4619 137.525 27.499 135.05 cv
25.1211 132.051 25.7031 127.871 25.7178 124.281 cv
25.727 122.094 25.5723 119.835 24.9614 117.79 cv
26.3608 117.832 27.7661 117.713 28.8418 117.696 cv
28.9858 117.694 29.1841 117.676 29.4116 117.65 cv
29.248 118.895 29.5122 120.24 30.1435 121.284 cv
31.3262 123.24 32.4307 123.759 32.1831 126.521 cv
32.062 127.871 32.042 128.596 32.563 129.819 cv
32.7974 130.37 33.6665 130.068 33.6548 129.523 cv
33.6055 127.307 34.9922 125.278 34.1025 123.149 cv
33.5146 121.742 33.0713 121.064 33.5122 119.522 cv
33.7822 118.576 34.1807 117.851 34.3281 116.97 cv
35.312 116.881 36.124 116.882 36.4409 117.091 cv
37.9062 118.053 37.4233 119.999 37.6597 121.744 cv
38.0293 124.466 38.2842 129.077 41.0845 130.657 cv
43.1372 131.815 46.2793 131.204 48.8345 130.796 cv
48.7475 132.525 49.7617 134.603 49.7363 136.161 cv
49.6763 139.852 50.6748 143.539 50.3647 147.214 cv
50.3335 147.583 50.9277 147.66 51.0093 147.302 cv
51.6797 144.344 51.3701 141.621 51.4643 138.622 cv
51.5278 136.611 52.0303 134.481 52.4521 132.408 cv
55.5918 136.352 59.4326 140.135 63.0039 143.267 cv
64.3276 144.428 65.8218 145.002 67.3979 145.229 cv
67.0913 146.943 67.9438 148.866 68.2705 150.763 cv
68.748 153.539 68.5957 156.404 68.9687 159.217 cv
68.3555 158.965 67.7466 158.693 67.146 158.371 cv
cp
293.596 105.322 mo
293.85 100.381 293.905 96.3174 290.812 92.1484 cv
290.752 92.082 li
290.725 90.1577 290.487 88.2124 290.28 86.4424 cv
289.607 80.6641 288.726 72.646 282.714 70.0659 cv
279.104 68.5166 275.138 67.8042 271.542 66.2295 cv
268.803 65.0288 269.14 62.8506 268.598 60.1519 cv
268.239 58.3667 267.862 56.5923 267.439 54.8252 cv
267.944 54.0576 268.01 53.0264 267.161 52.1895 cv
263.908 48.9854 260.658 45.7778 257.394 42.5859 cv
255.447 40.6831 253.473 38.1665 250.828 37.2412 cv
247.799 36.1812 244.465 37.6226 241.541 38.4336 cv
238.282 39.3374 235.025 40.2456 231.77 41.1641 cv
232.763 37.9053 233.873 34.1924 233.152 31.4385 cv
232.371 28.4521 229.712 28.3843 227.121 28.1943 cv
221.616 27.7905 215.034 28.3438 210.185 25.4429 cv
205.249 22.4893 200.794 18.4165 196.198 14.9678 cv
195.691 14.5874 194.831 14.6494 194.317 14.9678 cv
191.994 16.4063 189.498 18.0542 188.131 20.4165 cv
187.91 20.3428 li
183.774 19.4023 182.245 16.6338 178.909 14.7031 cv
176.424 13.2651 174.188 14.0869 171.602 14.8525 cv
163.604 17.2197 155.63 19.7065 147.689 22.2607 cv
145.877 20.1689 144.098 18.0542 142.364 15.8945 cv
141.942 15.3687 141.009 15.1655 140.389 15.3726 cv
130.729 18.5977 120.924 19.6284 111.095 21.9253 cv
110.897 21.9717 110.735 22.0513 110.594 22.1465 cv
107.888 20.8647 105.387 19.9575 102.307 19.4121 cv
101.158 19.208 99.8393 19.9126 99.8999 21.2456 cv
100.059 24.7417 101.886 26.9497 97.6367 29.3979 cv
96.0049 30.3384 94.1035 30.7861 92.314 31.4678 cv
90.5503 28.8394 88.1558 27.146 84.9858 26.1724 cv
84.2969 25.9604 83.2368 26.2964 82.9297 27.0093 cv
79.7783 34.3203 69.0605 35.4688 62.2617 37.4014 cv
55.3242 39.3735 47.8823 40.7886 41.3247 43.8721 cv
38.2612 45.3125 31.5571 49.2744 32.2226 53.4839 cv
32.5659 55.6567 34.5928 55.8623 36.4634 56.251 cv
39.4033 56.8618 42.3716 57.3691 45.3359 57.8823 cv
42.7007 59.6782 40.4033 62.3208 38.1641 64.2813 cv
33.6333 68.2471 29.1142 72.2124 24.8384 76.4551 cv
23.8984 77.3877 24.3613 78.9893 25.6035 79.354 cv
25.8496 79.4092 26.0903 79.4775 26.3296 79.5498 cv
22.0703 83.2163 18.0996 89.0049 17.2495 94.0513 cv
16.6025 97.8916 17.7402 102.092 18.3061 105.879 cv
18.543 107.468 18.541 110.18 18.9175 112.532 cv
18.6626 112.84 18.5513 113.247 18.7222 113.685 cv
21.1069 119.795 19.3818 125.732 20.4233 131.995 cv
21.4731 138.305 25.5161 141.009 30.8935 143.631 cv
37.1738 146.692 40.7549 152.962 46.8403 156.25 cv
49.6401 157.762 52.2353 157.727 55.27 158.253 cv
58.936 158.889 61.7012 161.957 64.9912 163.642 cv
67.5737 164.964 70.3345 166.015 73.1641 166.658 cv
77.3042 167.598 81.8252 167.319 85.7104 169.201 cv
90.7436 171.639 94.1191 176.578 99.4399 178.58 cv
105.896 181.009 111.519 176.087 117.724 177.691 cv
123.306 179.134 127.086 183.955 133.28 183.435 cv
133.333 183.426 li
137.263 184.929 141.371 185.258 145.513 184.228 cv
147.667 183.693 149.531 182.615 151.559 181.776 cv
155.514 180.139 157.236 180.939 160.997 182.578 cv
170.222 186.6 177.5 184.596 186.062 180.431 cv
191.356 177.855 197.008 179.652 202.589 180.171 cv
207.759 180.652 213.263 181.053 218.408 180.158 cv
223.466 179.277 226.296 175.698 230.778 173.67 cv
235.708 171.44 241.117 171.788 246.389 171.614 cv
247.728 171.569 248.575 170.838 248.952 169.914 cv
256.311 168.431 261.366 165.589 265.368 158.367 cv
267.569 154.394 271.06 151.265 273.758 147.616 cv
276.905 143.361 281.911 142.968 285.991 139.874 cv
288.63 137.872 291.182 135.014 291.016 131.473 cv
290.86 128.164 290.202 126.385 291.589 123.201 cv
292.468 121.185 293.616 119.224 294.322 117.138 cv
295.742 112.942 293.38 109.518 293.596 105.322 cv
cp
.623529 .803922 .87451 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (freeze_1.eps)
%%CreationDate: 3/12/2018 2:18 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bFmN4Qa8CBamZ>=,HC2CMS]8e`0M(,M1aMbAZD9TA2dO.BeCIf7!*5mA.Ub.+1/oXLs6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7b\<fCJ?fYddtZDYHRkO!">]-ia.umr,s*5O0f.)K=t^[5<[1Q`HF1a$oQcV;]SWX/A1p\:+28GHY@:^&@s-
%_lMt(?@W"Hh;N9J?LE:@jBMH)PMK<Lc_%uKlYcb#aj\#G2:oT:?f*tmIXC\Oont29G55l]A,)K/s3p^_Q.u@hB7'INQS50!bM+so
%jQ5IZ3;k5>s2BG9UpT^fks,4Ip=j6;^Noe=c*LJ)s4>S9lLcg:hYPFMn"/_rjC[t>Er8mc\NA[Il,aI^hrlk?lWNf12a?'U(B;GC
%\)3n@HX<!!6&rupL]5KIdEmq-*<*F=G5#qM]AJ<JeE?btG=Od5lNqji`?`4lG(I9s!4;Zg08UbJ_sNBNSj.LAb979C?9&LhX7[sb
%J6cjR(Wq!lU+^PtEmDiNa-s/O%WtiF]W+W(41DStS?fV>etKkWn_*;:J%kgK[nj`KI;L3VrVFd*ci--Hal)0DcaE/QQ\ULWfa5Fn
%iVDm,IsUqWNHAoI>LR$WorE"KT1^Q52nF;6KEFI3!WV'&pqr<Ihql'Z$%DRF#E7*WGBN/bqooX)IeDc?[ua0o&,GU:[kIdNl@8;g
%^PJlUEbW/I.d^K@Fk;r7#?&.iq(rP"^FAT$lhd4\`pS$pUq_?Vm+Z/+J)5cNZ!+f^mk8!3qdpRMR6XdPO5FnVVa%<`Yud2$J+Mgr
%AUepe^HVRARL%*eYJ8#N:G9IC]R#.6p`BIjb7o1MZfCk^Dsb%"5PR=N`=LkZ\$4iWhn5*[T"W(%+$]U]riU_K]B;E"07WNgeIUR9
%o&ZKM4b!%PlYg,.bO+_!cX,JroTqZ=p1M"0ZL,d"2h-8KqChEc?[d(nA=_d_:S*"/ZZk3sbJ2iHH2?^qgKNp`h"ZBS5(3%f[E.>d
%]ANV2s-A/m/l4"/5J2I9<5)K64jJ>o%:rLFp[=Gaq9T&tLKlM/7UCPWJ[V.Vrcn><eT]K%ot6(8nTW<O]R99rFBTc_+6>FWA5q/b
%il'S1IsfU+7C9gnDW+m0KC[;$VI)LM;,?'H=dFitQf!0Tm]QRph]-!uD%F2;iQ:]Scb=i+jL[W@Hb.tHro*`=n,DhAeameT$bmcZ
%RX`@biQ;BsnD@RMbH'gP^4.jY1Um9WAGFj,kI4gtmJAiO%i\MBrmrfQqbm=SmT8$Ik8tfb;m1JM\,Y'.g:6FrPN8)1Oe2.*;teG3
%B5E&TSn$%F%\M/Sq=Mof;2Fs?r3r9hj^4X9`r=MpIsK(&75t82fh8ReG$k7<m*4oY2da8n%]8IXb<J5emZoZ,TD@SpbOi3DC\,.1
%`><H"d9PJo?d>SIiq8LRT#mGsF&Cb&\4DtS%e@qMkgA/>Qh$NemBUJ^h>WnaO8etF,;C-bD*Hlr0"6Eihr,Z8F-V5H!C-?`(A#C5
%r\?(-5(42i5P]X*q@h[qHC8'R%4hq$afaN2f5Iq#4,@aA`4f@ig]uEKf,o:-rV%E,-L$`,8G_QEpa!&:Dm;O0'&/-.*^T_[&$N`p
%IesYfhnFR1o%RB)i*"6(pm*6$QLVGGZ?$>%CFsdl^[WC'MZ$8cWBMSbd*`\bMn8!I?]Q:7kNaB`]FNQmg<$V,P8qWODq>F_[H3]X
%Cn^[ejB1]H*p^P_05@Js`p0TT2ru/P.jC9*QWQRoq*pC>*;_:ra>N!*jd8F/Ek&dC-/HX^8k1lOBeP6(.b.MZ81D^?PK\jDif+qU
%G`Y:!27=ooL`%SY+GZ"N>f'2pa`.^o3TP6J$WW3"jFK9^`lcIHnO"?^$B)[XEK]AG%s%$u\G#KU^A9#Y?8?f:[?jXR+",*\_qhhd
%*(N$_dU@Le'_uJUM'>H58WN#q0t>$0j[P9ZEg5T,J+h'n*0!IR,P+H!Zm4cZ*^BM93BH_?DB+-%040"rms`j9O8TOefQ#oC'-pKT
%H]\7laDnoNbFe*KgWP-8M]?H'0b!q%#J($kHm?['Ne8<2>m03!MVLI;7)71",!2$\FsG%)jQ@Wj:5#!j=AXSl6RkP"p_u5R,"i/$
%p6;K@MBDAe-s*r+%%g(Wa;6*q*7:6r.S';UOT44]s'NssjA2'@0Co,HJcjC3q=>G`ZBQZm4FSQ=G`kFjnK<>TGl8eP7H?4^A3r2d
%F@&0^aleXT./o$mp<d#,n]s;bkX7VQDjMV-\OGR0Mra9]8H^ArUc'*n;clH)PB>P&*(?B.m_gNGe`&cadZT2UQmsoYQqm4#6,'p$
%0-'PBoMgot>GX!6,*ku9FdB;BQ4^]jnHq%#75Vld8RKV2#9!=eP&Rop?JgQtG`e@;;KOKGFV<AK1'OFp<KY+7LVr(!ipVmn3\_`<
%!W5lWf>mj[Ga(;4F:+qa,G0jlTBjtbFHf.BDIa*";#hFA.MWPdG-dg$j3;9X7ukm3!J8\fF!*j^VC4crjO<0_.;TR,CCr`9iK<,U
%HS8??cinu0Rij'ij2[3KSFLYPS[#)S+/pl20WV0:4f:ZC;MC&E4@!K[IeM?(8"!%0lo9:8^#MKgHPn&'^!)=8nGl>04f9d,m0Q^[
%h2;R]XHV+!7Z^o8cFt'jEK(@Qm;e^,2hr>c*uP(+F>=,!NatM.JWN[C/'22WJg:-jL`Tipj[;>Uas"YIg6]^0!Kq?;8'<UFV:M?W
%5V4pTRT6`b(c%Mg2sf09IWh>I1/DIHd(r]HkQ!#U]HA8Nb=+3RT4/ZLiJ%'d8*#t/7&;RrF>Z*S(5`2Al&i9)7mjmL:2!=;9^p!"
%N[\>.A#KG_:jX[H"'*8G1'Z8P&d0M4og%(?.Mb,`(DeP@.%Wmc[-%L8Uj>)lK2qJSfb<T`jd)k#])6[WS7Soti@Kb8E]>>,MNs>Q
%1-&"&alAIR59t98aY&jb>af3sd1Jr0LeM's/MU\?FDDTTnKLJ]aOEe7jWIHE/W[%)kukS]MF:ns>.E3mM:pYC;YFRBa:Lcm.uoP1
%8Y1Y?jdO@adH/<jO@?k`7``Ei&1f$3)1ps;hGee/MoW5I7cgA,UlPToN4rC6A7Vo8?ua7m*->ms\0N')(gM,"-s>DH(atEaaiOsT
%CGSU=c&s3tk[_qm8TGN%h:!XKAs,P#,Yed]0f<@#m*-N$0p9`pEAU#3r(tk;dd0M:E]>j4N\]F!BJcfB*1`)JYD1u<gOZtS"qk?D
%,B27O^g/l"0:De]Gp>2X5N4$38UH>ek)K5^oW;X-'FBq$6t_<4.@bc3NCs96l3m"`+I8JTXr$S9f>"3cn4t]E5'_/Fc0eeO6Ee68
%\C`FC:YcoPQA?@S+GnZa1@l$NLRm'';=k[+KS*rLfEkCXXGO/%LTQY,/GC?_-a=JX#]C>1(8W3AIAG-GWH=hKpTeD03fR+3NOAr>
%V'o!8a[kMqW"Si(LSqlab%0n_Y:dP;iLLe@^>pV>F^<6h;c1LSLPh:pASTND_Q/Ph<LkU$<HkJ4b#!Gcip/gU4iFd+7G*maHCX?3
%km&!ml#;t"&HI=D#T&PHc]PX@e`_EO^@s&M+*,F!ITJc#O?5Z(m.QN.meEIH*e&LNj*bQ6^5Wes''OI[X`>&fZA;j,`%"^1ZBk_%
%]#E,+.F]sT=k7J$JIAd5ASN(0-mI_BdkZJ\8YOO%;pWZLR!+`!h4BAVM>B\!:86%5e2fG:A?kR"R\PGb[EiTRm>"91#+:oi_\ejO
%0tIF\U\8;W*ERI#9X/Jo"Z+/!/N'#.rFhC7G&7F%Nl*i:ZS(Q5RiXEBQJk`O8],iM?gA<\El>:/h)VDSM#lFVPQr:Q4lhXr4cf=1
%6gj`01Z%kNn/WVK,Bs((5Q<b3pb%O]l'!T+%dt1#L7>904nXY6K;)/)(su?\TWH_K>/\U+@W!RI/X9?E*(NM31"&phoSL)2cCD`=
%#2ZO\\k\[$au(!TK=Q9*1T_:E<`+YR=B:1pB$GA]:>X>LWa4*U>(MH/b7)uu1eQF\J8Nq/?-h<V1$>!;UN+eDg1[%ZhDs%M(QL;r
%A!l2l[*nonUoEF8GI?&WO8F(R]=$K#*M;fqYB@m8'E$D6Tg=4E,LYVpe7P`,Y/M7Yc@<`q`VucQMl,;Kiro[mQrLtKd;Z=X.WsNT
%fM13bZ`KT*G#Pl?`&!$TbG+;V8Igru$e0C)TJ-B\#eQf/'Fa:Z1fiNG!9Uj9\0Z>54U3Q?kd`PP=k%>BYb9OXf2cS?&8<BoW1$@2
%,1TQ0?rHr#/YlLBlBSM,qAes6g(g!#@[#tDDbFUB51f(&c(<DN!H%e%F6e#G&PEs*`s]rPo!(Yb/fpV3RYMsS+c"kC60Ag[IaB6^
%I.4]HQ1!9^b0A2UnRaG4@C\rgiPqF+:.H2u-BfUp'QhBbj&&2IOD$htUF-b%4R<B+AceWci$Y2D7c-6?oE=4]^_:Z7^eTSE($Ib8
%<i.";6C\7!DSSu!2T;ESi9!D"bmE/NZoNc.#&c\S`2TLCB*UF3k#A!PThYbQ(%0j]'XeYH"RN+mfVm2"d89m/SOI+:>kVj9ffe<@
%CK2;hUFd7Zj[0ofNBr%V%^G[D;H:+d`GP^KlHuM1LKV3gkpBCN#>MhNO%,?m>HE$3icKjuEW5"L6gcpC`7r2cgiK"BH5pMh3'R*s
%4QMSc53TY+i2d<Ah!r5Drn"^@c-9m\nl_`8egR.Jb,;i2B8uIbUO:W@T/Fch];'))Obu:"ch7<dr%FJ5:h5Ga`:%8hCSX'?QQ,4]
%MTfY?\-6$B(]JFu<T2E^&+OoZ@_%#2JOO\8Gf3a+5;To%-U53SYHjWq'e]Hf?W6#,alf4%Y(CS'F3XOLqDFc7K@02Yq#p,WHigcK
%/s\A,5Cf-8lAUI[^9tt07^f=o"Nf%q6nr?:`Kgb<9Y&:.c_$glT".'*a.3S.T\o>71SH?G2@<<HQ&.gAMM%_G)RgEiVNfm7b=/-&
%'_g(0Q/[qO`-]VKb.h?G6FofqI#F*bA`UOprC'+:i!sn!;?,nKg#)=0^\?4NhC"[5/mb+ldXF)?2@2=-Yj[^*X=1qj$1f>lmMNr9
%ZCkE(>YG5iE4:X+EF;$OiN#LO=$^+Y]$,M#5drLr2$^;tJR!l0NqlWi$WNB'TK48J73g"i]ZgRs&Un1[].G8PVHA/(jfr"/?m%.-
%/8nO0<_i^(RHUBe.VWFmC6#:qV`,h^<V'.u\Z*jE;L<$@8Z(s5\Z)$ig+u]\AZ-eCFj<m%L']A*X$7snDDZ#!nY=PWLY5t2?q22,
%)MuJ&bITk%SYO:I2:lt72Rr7qj*9Oe+1^F.T:>_<q^f)H&?"I!bs2!M9\m$BmWbYsj,VH0I,?G55qWV9,M5sih]Ne,KBF.^b"Tn(
%AA9?f[hmLWWdbpS9VNRgkR/Dt*_rn\G)ctfh2Fb;C`7"`STGcR8b9/Z:Xrn1onhAQ4]Nkh"@:;5eeCEr15![GC$7%VL'LAsd6-Zl
%TlUU2?X'2&LWTK#La1->@IG9"7KD1GJ17]f5srGR>VZ^)V"Td952*j<Mo@.F*lje@G!4sG+*s#>Zsh;$mlC2,/&,jaeUVApkj)*d
%Yt"$'B[Zo%k+>eUgh`%F3G/fdL)uW?nY9U(E5[*aoSt0>*V4oEEoEt[LYVDpgKT^3mR-F;J@"+qps4B/?8/^5C3\uh$SO6ts0.'@
%4A3]FE^S+BmlC@pbO8fEqjH1lg0r:pIn4JW$8.%3o^K4'FBsQc]]T$N9`Ic$dL%L=hS4V6@aAn"V/oJ46V;Vh8m=:>%[85bH\IWk
%5ggqiWRu2#*DN2hh!m"-[":a@JO=&Md!QB5H5KJ":PP!IgI(CRf&GtIO)jKX48<5S^3n!Bn+k4`*rhYsGQq\#A/VO/=`r!6,'NI,
%g89aM*hdLIMjVd[<[+4I8ZRqLK;95Qf;<a)dj;BtW7N(njUo[=f;bV?W&]2%kYB[Uc-T)7S%>A$H.6Vj\pdNW>Tn(6;_4!T;j")F
%WNr\3Q`-JlW)fe`B_ca202m;saD-MG/3hfcIB\=g^#d-hdr/Dp?'m%9RSF6mUOhZ\"kVTrFf5)^FJ']2Q0LiVRYS1L/Z`*&1tb89
%C,TRmN\VXNlptd0SKGCP\8_4i&,2*:)Z-352>]Ira,_9bSfO_Q+*,C,SFo(dJ*&h11_!*17GFJ?pmV#]<@2FWk(-V>0!^MfqDe:=
%O8V=\"G`[J-NPHR8LbcDVHTdM_Qo,s&68]p+\pNg7on*=ZZ+/=b!u99Ya.&NShet5'(\Ai2dP.BN%/%^>59Q2\Kc7QTu3p3USPUk
%pElhTbf>ge0A8+b-<#sZ4Hl$i!662i(dnE'=;0]\Tjl+ajqPBA,c7EI*npagD+`Z^/;^goGnJN%,,i[2;g1m8]G4\b4n>j?jQM;(
%RX4`Ma6?lbh!pru]_+7U+*,C`D'*tL^>o)1mh8<'lp94^]!,XCCl@5RTQI0d(VoN(MX=1J>UrH#6lS>^%TC_)VXo&![/?I^;#[&L
%<bWp#k)-BMX;3olV-0RHJi;<,=ZOH+;um%.dBKCA@Tum</[4HX>h]=<2O.A1Bd&AnPrm9&(3dp27S/="AJOh*BPj>cAVYj9Xb]FF
%*d;^l+Q!dSG(s*gH>()D%B&RMDS:(Y5R%^9ViFmn:GQX?bke4(I3^Glbi4AngBi^3Uk$"Q<=R(eD^7!?R'-bfOBB=r$&;p+<j>3S
%h)hmiN\!;E%q!95FCI)B)o%\/-[<sH#TUd@L$omNrWC<8[M2X;"R21uH?2oK>f>al:]8"41cuN#a;rTcn[#"I3Qdn&A":^_0:D$J
%NV%E6k@T)P1JJI971TcUSBM[/)@F&7K<1PQ_^L^Y29KTuO]ggq_[Mu\29TTq//Zcg)hs`K@5?rh"M5_P=#'9(A7h-r=5BZ5%0Pmc
%Bh8c+!V9Yp4MBmjds@OJH>&:;Vt4RH=N>BO<D4qH\9l:L:I2UX<p""gP_k'n#FUOuaIE5gMi"I\ZA.PJL#nOYjuALC+RBl'bGQ7Q
%b^n`V)l&0cC7'B--4_hGb3tEt'>Kl`%1)N6X_X%%CN<`M=;n5DOl(o'j_Xh`Ri#GL;E`T+(SH+kC%ZMqL#M6e:XX7ta8OHGr.-g%
%pso&/ppIjM^E+!5*X1pE8>je$6E>$W8RrM!`WDULFZP@uoEeNq$'iPal4Dq-K\H2XD>%LNWi]2M%1adZ*mEoYS9lgCB3Dn^/Uj<T
%P4"$/ni^%2@O=A+,\Vsi0]JO'P#A%)OV6-dRZ`g!7A<KA@<?4,9X]KeA#^Ph)AYZK&_-g,#Hg:,fm/tqZXsW`\pRad&UK"T(rq/m
%eXDX_/pE@bMfjqoHb;576RJFS*8Y]uQrW,eqsbm@^#MXF.ctBEb24rq<>+Q@.CBE#4L-<`17`U7ED(&qe/S+sSs5+gEWAHhRMAam
%W9?faGER_fS)pBQ$h-?9DDf$PO=X6UY\;U?fe/[LM9bIS,O#dtrh)qQ)I_hl6nkC#Ko"+V=ckRa;bRL$2R%#u$mIs1oS1BqZ!fA&
%-di'<pXqY>Z6J3'kOT_oIGaS`jPbV=2jger=Fb`B'qGsF+>`"B.6\VH8Rs@\7CU<'/^VU3R`l80e6q]R-3O`W&=+"C$s]!uc5>h;
%O0l4@Bh$$i+raY[k@.1s(X#90croNA/B0Q]3?HJ5k*11b(Znp"m3";1hjjI"1[Eh%hDmgQkJAY.c"BNe"=S;H*a1SgmaK%Z?JfGp
%M6YA#s2o)]Xrh'r2Rr+-Y<I3EmiW"uh;]a45R's+lJq=dL<As_.,8m2+8Z?T^#S0&;AJMTXEK8kRu6O3[A>&#Se7j9>Rg,p*tA6J
%`ZIFNBotm3=@:/8Nqt/=\@Gg7*E2Ad-U%3!6e42^Cnuim@kCaF5HC9@`f\;=qB;&CQ0-U`R;Ju>+$NB=SH!UN>hF^<2M%Ik+OSbe
%]c2FcTrI_JY*Y[H"M6G"O=hR9Oind6HKc5_2`okfX[.EFLE@$T6)V9`Y2_+%7sC#@Y`Oo*E5sga`*TY6/UUu&DsI`nY6f*13nFMi
%$Z&dFmQNAaFZ-6^V<&1>.c\HOq-qLb&p%/8nRuUJ[aKZf%4@`6O]qn@/M_9?5:`LN:-cG[oWqsuIlf$Nh2fL`EtVZ\*[hV;glTpd
%.DP.&c&'3UT$2ADpoCC/#_fC[BQGBNS,fFr]D?gY,HdRNJo>s%0FfE5pPbC7;M3G$C@F,EGY/7]@7e:R9+/J'(jp6gn=?B5HW,KT
%@eW1/Kr!Xf4F"n$Il8qR@</le_85`9i8%5fb\VM_i3rpb/d1\3$+nI@SATHm&^0u_[KU8DZ7WuI3B,3KDeQ1ZcWQ=S)3]gH06c3e
%!:t1G/m*`1kJtS5&Zp'.J-M@#[o!.>h)sCX%r_?Uf7:KbKI\-n$sp"C&BKVIL<4n]"*Zj8'l!p$@7==S53t]LWrG+K\']9S_-'8k
%e-6Lkn_fm.dr1.'9WqBiHXi6ggQ^'s`5V2B0"stbgu%Tr!p3\>>:_4;9"s)V?;>4$rGG:?]-/#:%peiqaJqH.&q+CCPn1N[@aIj9
%LlC&h,1]*JiS>7iG,W%D,pqEC7,)_B@`?rShnpqV`9;0Aabi*fcuEmtJ-@k;SUn?F)R8n&Xq/,C@o74607r-1Hkp/!RL(;&g7-i=
%@nr1bF6/7Kl_mR<d;qaf-&iDT60fj%[aA3LZ);_c;Chl[@&$Vp(Hggh.@=.Qge9>h]trjFf0n>3pX?Y@q7YtgmPt;\b-B;*ONEi"
%!$GE*e(\Ka"6n^`m*tYV9qBFFH,fe>o:%+eqeC`6iU$R.cMc)(ip7!M>;":&Q^0U,QV]g8/*&@/M-da57g'&_*W/u69'PaPpmA\W
%*;$KOcg'WQ6j_m,1$W#,R;2i"0p.dKr5FQXO1NTVcH'rbkp);04AI]\EnJN[0&%(HI9.-H3(86Vh/Q`<X_(a[F)j,^mkYZiH"c?u
%0EA`42\TDM1\7f>H9JUEk8%EoEE(.1(kp,$M0pZ]3Er"]VVLC'a3cZ&:Rc$KAimdSh2cf3Ai^pBa\q4ElXb@\ieh:^)%P<*TLT6k
%AWl4#Y7&!6V?ekRRFVe%`(c7-d6e/d8_D8N/NF;Z_hJ+(jh9IJl'6UP1m+47dfr[FQlaGqUkq$a+`gf-VC6!/]5$39WgA;/!Y?7@
%a,`^Ca'.ceL5!)(A[Rh=oJ2A36@f:dftLM7M1=CV[c5`AfFCu\Z-1Z`B9e1'nA0uulV:MsBS`jB)pBLF!F%Qj^f@hAb)E=$L^N[:
%a,`9Q19d!&p(h?/H=/-[U\$QP.XiG,'TmiZhW.P8=VTU1MR*_Kqm%TRfuhBe3J/RF4jmPp]H2+6]K+-J7t&Q83M:E5X\3ti0'rQh
%a&L//G<B."MY:[ScK29V3EoPD_)jc+/L.X_XO%[dgZjKgED/(QYV/`RC[&gf1)f?EGa?d^9klYh//VE*;@Q(I/fjrFD;T[q"2/\^
%(F'Kq!a`R@@?UeaSFFXni?ja:9lCPCmQE>,H?RgBhl!?JW4T?k:ZdR<m^Be8p0Lm-Q<(3-C<3aAo-'Hia&1fe^gdYHWUmLe(n,[0
%L1n]h4Ph6.0q_d=rJlrK9D<gSU6Us3eQ(@NrQ:BF8OO0O:5-<'lP>S.#Btl=kViFdLYkPX6ZcM19]OBlol@g"K;")_R,oYaB$D,3
%YRe>CA$*FldFcXHok*[98<c2iEZ+3&@H0)ErmHNbGr%`WTe$j`6W<-HD>^cPp!bOq]@OJf5ld&s1C,+%/5B'u:8lsWU^5`[B3qV#
%`G/\]V?Q;UUPkgr^.6iOVA,RZrik&jCpQ&@XN.Z__"mtOCY\JmZVTDR%<E6C>W6cggE6(1q7\H+]E(dbct;+8VJeJ)(%elMHQZ`i
%\pVr6i6;2d1tu:s[dl.(-^0Zq9%)eJ?]tP,lW8k`X)G%2*=IRnQ\nEk_n%XhRlP_8*;e9s.>Tg9Ok)eG*(ghmRS9<T,TZ$<kU,>&
%21O2JkDo.G"K7BqB<.5*]F*tbF7Vj(gYM"hD3tU3Y%al9Cs>kcQ)N4`>,h;K9gWt!N@nA7FA4OAA\uO84&8:T%JASdIcs($Do(%9
%_:5o]e&NoIk?-Qm6[TQ*`B$&1-HB#QCijc0As7<RV'Jn3`b\L2VJ4ojbDfZ-A$PGfg%_Jko"ugD2]Jj)dCP@UU$\cMi#W0Bm%/i\
%Sm*uB&X\3&4_].j4mrGskXI6(iXmZ16ACL^=8'E+BcATf[Ee/WVJk?oM5jD_(7a0pmJ%4R-b=Z6%#@q^gG]U=T5`=s(Ng\_eh=.V
%X%mGS<kgK"&Er`)gD4_XOoQ!IjNW\/Q]u7m9N/O:eU263/^EFh1JI$[Z-"V?;GJ[D7[:&+-Ye<*"r>;1M(;$U]$Rqkgl.<s2N$n)
%;KnGN<>$O'lRX'Sn-=RfRi5))n@TgmS]N?C*R.lD%(CcG]o]-Sq%N+@3U_78Pl-U!ol@3_Z)s0REnAL&(IPRi-eS*4hXaW%pdae!
%ad#"%G&Rq49=ND7&8#SY(p[/oGQedT-9bHGc2_g\-@@"O:g#KCpGQ`1%s`[^E/3+B-4c1BOblj`&PV52?]"Pg11;CeO5W3Yo/P#?
%3KN8aRXg%A&Y8+Z4JpT+DJ&],Y%)!2Mn3VEkOG*e\Xc68*ohO1D4JR3=[r)=@;nm3dD!h_F'i%8S.MuLoMM7$I3&-/m,ucgGJTij
%?hnQM%*VUg?Vl$6KNT'1+\@e"ObptF*bL72AR\:>)I)`b%Z1Yq\!J[>jPI(WEA8>sEKU:mI4stLk*DjD?Oe5E8;?*^&WB"!mfhVJ
%rN?$2VuC^J;3#kUHMqi-@.1_1gItjRN&5T?K!6!j'sTa9^[='sKs&8"AU0lk\I[N,^L/m9NNtOSRFub\CBLBiO*<c^+]go%Fp\qr
%%T9An`G2=lmY#_XRV[3)bh9U^a]t?1`G4I`f@H;bB'\4-5kLW1S,)StC$\&a/7\IDP@r3c4*![Pql)U?I@('KT?OIDFd*;T+(\HC
%=a]PIX`(\_hti)n4'i=3,>I[E]"\HGmf\WPG&:DA0(=j:hedhSmJEI"fLG0(NfP8b4eAu$h7i(MVV?<;^"VnWVXnqe$j2F9C91DL
%GLU=lQk1SCd\0:\St]:=#*qL92Um8S(*/HW20\;O+03T-79*CF6^.34h$d5*9t!d[kij@Dq=UeXG.7*S"eE)`dgS0PWAm2ne:ERi
%dKE?Kb*V.%Di(9HTs2PbH8KIB/)I[HpNFSp65.R44AF2@\l8>+3o0s!mO-*Ge:ED^GZa2lk<638h6?'jXOe0,'iF1A_9LK$gHFII
%!L/!93Ssr.I$HedI/kX#]LgBl5hTH=):3j0RMW(UiW;NiI4``UAm;E[.DL;VE'MNcJ,Et0<gl=r#OK$L#"5<t^$?)FY7e7fGb:\s
%\LN'2Ma(q/lpYT7.qQ&Wof\)62tAjm9cHXo_QNAM-khqG_'Z:hM#bg6YsR#FATJ0`^)s^WG9gW)F^2"mf[`0,M0QL']R/Pk$Z[CG
%@=..n)u*O\K-)U/D8>@i1VrXTmtO"Y8P%`U2G[`RSc,[-?gC@36iTXZ..@%QGG*,sNJ<Fh>di'4G<DI2]SiJqM`[P;Jh2s*I^:nN
%99)58iu\J1fkKu!B@FZ58aL&8i\%+\_6bp9jMX2S'.K_iTX&Rpd2Q!=VZB^?1YQVFoUO7DClT7'4Cc5N5T)`fPb/!!G6!l"A`C$i
%I$TW81@[8jppUDTs7P4>bI^^g\&fEST0p=>IZOI;+/JQcpnEV$EKDu*k_6_2n]W;LSUr<LD]"0Qm\!%c`[%e)hG!qS[=,PUgeHDt
%TZ\o]mX6_$OJhgrQ[d)?mq1^1aQ<BB1"d;P-eDqcW2c/JR*`<ed4t%*?ga4NI=f)EkCi`)It%+Rp)eJTk>.]K"Z(#en';j'B+4,_
%#5/o:qi$)S`kXcJ@%T0XcPY;IhtAk_nQ@2&bJ\%]pl'cP.L]!S^AcBXQbRnGm,a^L0>IJFMqM+&J+NH_Dnb9#K)Y1^:YrapIJm'V
%q#(`\55COHYMd4j^[@Uf=%3%YSTOF&bY-a1e?57]b:[=LPp:NOn]'2WT0N;is8>7`@HE?X5Q4CWrVssrs0oB7<OuW5leOf*Y@[IQ
%@p\hTD@+a`eaL.tJ`]$)h#2!:4PoF+S"&3^]Y2E[r80_F^OC6Op@QV9="g2YrnHl(\in/"mU*YR^AI0f0<Kl@5(3%hc)]H'n"2`@
%Mfe"2IsC\bp?UVn5(3%/h*9hTrtGDk55r=qTQ`E]QiFM_8=l9&?n=so%XXoH-q9gD;&5CVqDGhJO&,BhgMVtD?A56:SI=C+j]\dQ
%6Fd.DX>C%KnTcJqmV5%eXRkgOjA6cMPm^;^EFRShT'DT!FB#8VN^6'9VQ&?r8^\eaMZ(!lX^7^,C$/s>.P7IP!LKP6/TPX;^!)+t
%jMZ'b;qXf:]TUV1dZUeKaA#jTQ1uJ.0,8nSjcd?*McZVtr(])e<F"V:/R1`LCj/,/C$@*TH8U0e`&lYGTn]dei:s:Cs$kRSD-$bV
%peUceWB.Mh"`pp<k#M'2Y%IKiLs*XM\9<$1B9q2Ro2eM*d]UTjm*USc\h&Sp#'fXcL[?RLY!I]D3VP/-ppEJiW$.ZX+2,b!jn@!=
%+q=+sET%:MH%UR:4K$:[bBmik->t05,;L:%G+7gc/+$q%?'DYKMk;-Taa5TsEeH4)3(O:1!9ol-d9cYTTk%6=:X6\3Z/Q?,0K`j-
%GEc)q4.=FX&@Wp1)"-$Qf.1,X,CHnT(Vs`8U4fA^bNh1Sm=8M<$^r+8,0rM5Hd#2uM5]2F8)Xem[C/If/r`r,_4*@KV(tpVKTn&D
%#&#HDh*,Emqk[%U:8S>dMnJ(&P]e@!fC=QCi4i1s\?J6Tm5esH^(0Ll,"iOjTMg`OP7P$,YO[gpH8K'ei/pab)7DAgAK31uG%0RS
%7.KHBf99nfOo7_7^Rb."=5pPt8@o[^b5+4(&af_RQ3f'c9+EnC3?_b:THUbk+=ha;ngHkndFOuJ6Biq^nM#IS)]j_ol5f=tP=VNU
%-0*]!k>tg5Y;.I\KN?s/<W5oD=Md/+hsDoX)sMC2f$0*UinlN'AH"HOFPIYA!EM+?EqRUD!!):O;H*Wg`C_R"-(j0cV.^rD.rZ>>
%p/b^P?kDk(>hP:U-\Rd"94NlnaC]jjb>f+s6j<a[b(,?MEj^]5E_^qOSaJlS+OX#LaOCf%3`BA08ae#=$[b:6L6<=WA^D7aX6?V@
%8lh+(V8I_#WP!E5!'+$a@X3btPf+%E593od8BWd]A&W+QB?FV?!Yq1pZn3#9&Nu-<<CCT?gnH_"GX_R-C!P+?F):Do[)fOM<UDD)
%>=9k&3R,`goMXR_H?i@A+AN<YU9c=R*%967''3K3#5B_f',k6W;?FU,e:a1&#dT+AO;kF#MTXL'"36n&.,Q31VOWGc?DQK?@B!ha
%(0Q>0Q^Ert=*?$/V,2:?/#K$G`BgV2h"8eN;HXJ`bg[c3?Rf-uCPiC(!SQ,a2*tCb]2OG$pCb.?(+cgl=UFtjfsCkt;I3O;a:O>N
%1>PP9JMGiB!L0p7@ap#'!%5nr#$mZO*AN:.,t%G@7'lQQ6Z[t>aTNFE0)CBSLIt51boV`g$8(gs?)m"5`1E9-A5ObbA&'![nJ[gl
%(gV=gBK\I=UUSqD1>"JBdYJ^+*g#4olWKgAYn"pT5OFepPfk)*4JPk>64@@l3<eH)E+QJ5(8u=PJp*t!Z'n^D$[;Ai&=Hp!`M.u#
%e]Q;a_VAc6Q73/+_45T]fL;lbq0^7l(k%uLQr4YNc,#N$aUhn7HYei''PZKl01haH4XUkp;=^IK"1#kaSIgoSdNH`a,"cZnS4n+2
%WuZ9*fh:<LG\N7gBoj;pAUtHR73O4)kZuh::m`<t;3dJ<91?)0MhYpHh^*1acYCm[e[6>Ak[>?=S1$%_0q1S$j^D:qTE;HCSNO!Y
%`@jk#-5"^[IJM7&LnD+CB?J+ID^NI9Pjj9[,sKk?`DuQ,YK>Pr<a?k_Kt&[,%^`XGFNYD49r(qKhKc<j)OGP[#to>Eqp_j6Q;loQ
%9K>Pc2@,2AS[,h_T-t_A0asG;pau\2`D,I0/41U:1kE:?7RtD*nOh1`g?Wc@gag3+edcm]N(Y\a4uuuI,t<!5]MPC4hs"POH&f/2
%.U<?RF'a6'oAUnU0EqUF>5:;.lEEL)/tSG!r:336<&0C@2!Y:!jlj%Z^^Q"G'?d+Ob(%$_/EcQj>SGeV7F\KYFH]]^j0O4$-^H6n
%;8uqRL8.S=nE'N`)4-RMmClO,>.iSJqI-[_k6/L8BpPTkd->N.[EC@:aCXeD-.dgJ6F3#]$sH]t_8-\LiDdFm/</QGA*uZ-O7oNi
%J,mZBO#uY)6:7igd<Z60H4uG6V4%iC9/^8,Psart,t*eC`t?3_':Dm2?^/.cI#PNC<"jZpZ&"8iZ_<Z7<6QMJ0?488N+tmnfh.7+
%1:_C._&?<q$B#lrMeJ?t3?feAmCF32OY"OM70U7@/JW%MjAfP'rfTB1>%k+#LK7\ddHb7EaZPe2<c]TL2$^n]I9[=hLC/ea"tusu
%1.sKk&uM"?;C[Joc7P6D,h!HU0'D?OkjD!>27D#!="gQFecqB\`;oKR?eQ\RPq=?8dLm>Q>ojjs^M%\.1@$..-JV3-=H]8q^J!#N
%+F;WlK<7QM+%$JnLSm/im+[@2J=rl%rTrfT^QdCUWoLX'MI1BmRm\15F@&?GR2iau<"X`4XXcSG2QL[CdS2<N,rs,reN4bqcu\uJ
%-"T.M(7dQn<\/$[GEC_o[4rbl:$Y2r-dNGp0%<#)V.rYB=M,h?CZi:!B=pU,n&rZXrZ)`@qK%Z+_d<tuVfj5JcOB)QA2r^j1P)IO
%^4GZufB_URJ%?0*purUI\Q'[kJ%#6p0AjEkp@?to:\XbPVb_eenbZC+T&A[Ni*oQj!^b[U+A(b<\sO1>J.QKTLkLYi,gLmOQsb<\
%G_GXPECm=udbKSJ-_?P^DCQP2M@E%(JLnr/(7G=B:es/&a0*sgd8B)D_kHq-=Qa(1aM\W'^JU>T]borQACqJi]<W%YXF>j>$_C9q
%%4bQ%D:+[:GCKB@rGV`.8aj(gQ+0`TWk>B-=jU\&:#=$9X]fp'*!q6oV2*R*K"piMYPfm`_SJQhKn<X6c5g1bV2oE0b)r@mqdM%u
%?$2YciY#iO%agq@(+qHVE%?aVa9BdO.$((Q7#$9OLqdKiN&6=m$nJ'f8VIfNi3#e].i]sR&)E(b%D"o#m'nTchV]`l[6`DBR9kFt
%2pRTn,i+a].ai0Gj!K*^Z&6-V^s=E2kO:)V-(;lGRLOea!YB@Y!/0jZ5@cR_-nunaGhVe%:k9?P!&);i!C%.eBmI,Wo_#53DrZVp
%-d[cdMjh3QWP,!#I_EB`[UroOdW[!IG0.O2ECNqWU6CoHV2-M>b[/WK4$HTE-.Q(+i8P?Qp-Mnj5$98;$H)FV$L/@B$gkW91-]s4
%Ys=\ha7'*s1,$\+1Y,sD^dau.l/@0$4Oe7FBbK`3H6'/2!sf3CNUBEeLFsdAdN[Zp,J.,5U,N.C!u;9OG]Wph`!D6:!RcRS<(<cQ
%Z\,I,@o2))7p4a`)"c0!^6G_t@K[gr_Fms[5)LeA=7`6eUV<%SaY`6#Ca&3:.*E.+[arsR!Q$8)F&KWOb0'jToZ51-fdF@P/1.k=
%WpRd:76k::(7Cuhe,mZkm)L4FWY7(i75rD;/Tr<iSI/3H@qNk-%qigJ$&#JH@"njT];8YV5N+[d>Tbag]\'j%?HVSB,bZO36:8UB
%9i*orL?MVT-X'aU2@WhD-),>VmJp$]RLCg9jqZn.*5tpt830!_'5&ZB!GiCpamTGV$:$\IfjH\i$1)h4nQ\#Sf>X6k4-Zl,3MDKQ
%Plr%^)U%,8,R5nq#.*&gYSq'ro,\g-E3kL`LRTKg?4P/UV1S2c5gF$Y($7=EX;N`eP_%%nR>!>V#\^=LAdr0JnL"4AN',?opM!P.
%T@`IRD,'_1gh<6$BB$O9>#D#]AbZWtZFCB>`g!Xim\8#-m\>?#*a9WVJ@*g;WGG-L)%n6MV3iVMQQBXu!@fcZ`=s#a5npuSA6nPs
%TPUn2U'5rk3l=WRplh<?NRaj-i_Z.1=Cp()a%Bu5;-*=hcpGWEAh:UJ7Y)p\Wg>W4%Z/UW::X&1J?A;^jU#CSbG^>F,1)7W'e?j[
%'S_.:@SSccr(gP8-hX^L)m![W$8<I;<5S_*WScb]?l['#NA,gnh^.]R3DZ@ne_>4CV6+-)JJ2)7(cm5dgN?b^BPEI8PNGDp$$m*Y
%/>/g^;FHSOU3G^q(3SWtjO@J]"=44Adh=9q&Ph>(&_!JWKRe-VOot'&_$EV`U>ud9(.4Y1,77K1A)(k!g"n?,o/r\k$bdE/^d!@i
%M5lhjHNinL7]XpS(O@#.%sLr9>P&I(kepIjbd###Nt4[;32ngd6qPPiM;SBbP0"[-%)H1<>U5*PlcfhSEMR;tMqfe$.a)gtr^&t)
%>fZri=$nhXm!?O[Z8+abb49$R0cEN'.KS*JMUe1pl:(s.EVKM?e!<a%V2]9M.UF4$`l^`]Aa0'p.ltQhKf0.hY:YT3L=cnmo<gG8
%RNpgEqV?HNR1]"Yd2n1t"Yo-"qEsdr#UIO)FH(4j^HeYaOJu`^$889c4<7^Zl(uW1Bq[=#'<I!/L2LT'<$\W+f;k8PdR)LJ$G9Xq
%%5KVpRpsVL__.2,V!)/g9O8=]A9:+$LoNSb&SgSl7j-@UHG99#)&_r7*=+pI7"HB%Kfd[r!%](Il:ef(Xs9$1T`4G*'0oZ'D-4P]
%BSa2Mmf??YSg2Cf90_"5MLZP<R9[<AB::#\1jC.4#Z.8=jh4@)d&JfJW$5oSQj_nkJKV$<()[lJUq/)aIG1dr$MNFa,!Tn#MHDP>
%Ks6J-k>HZ>\#@?e(5<HPEE%&L\.nF'kb*CaHAZ?["r?]:0Jd*bZ@sc*<5+!qcV%II'JK]]=:Pa-_h+&CLbLH365'R-alt@D.%f`)
%QQ`)q*2*XOZ';erae1,Z7_Np-bDSo2d1DnJ0s2j4WHgrd7Fd1-%`/#mN'\9GS:gF;'f*X-bQ>Q]L9,=s\C*VjYkS4%!B):^,%kJT
%hP0Y9E3Y?j6ssQVU-Xa0E?2EI9HB7*=%&'/K"r420(ZZEbcb@R9QXYTMnt3SL';U^U5:n]$/gfsBn/2n'YV"Y*%i'iM=-h><.m%E
%+cgdq%(613/@$h40<"+Hj]@po5otXD+<81+6jE^Fi1&,u1q?to$IhNM,?d2CXCZ*nK*1GH-j]&Md=cOi`0Xm<8qT*U@\G>=O_j8t
%)5h@C6deBE+dG;$?9&BJDL"p.8jtEDA!O9ob+"<j`RT3?10cq0Hg+[h]dZDe"5=qGiiS;dUquNm9juO*hBT3T;NZg=e<gXI/)=R4
%*V-VgK)m2&RA_cnWu1ToI$0d$^iR:OM4Ra6WlG/DZ!\7J>LZo1NX:6.&.sIrGNc`tYYtm+QE$%@.p3H/Kfj&"BN,mF[e0iJ?\0>S
%`e6O,f<,]@`X`Wo4pM)EKm.bE=C$9'#RPs@#0L?i@`lILk-Z%KJXSj:4V=NDpaTnHBG%WpSm#>O[2G-S>R>0O3fkr/emr&$W@2p=
%_AG*5Hba!\!I%X6N58c58#9ua>4BC2"1FP*O<U%irX?5C)NFL$o<"Y!>MfW0IDF[I0N).DE&*W?Q::N[CIIKuc'[lHAi*._aB9mf
%Qr68l`Z^6E&Q\/C(YuHTd+Z9p*6](pF3VCLr?JVG(9Nrp1,6@S@Y$='+(UZ!+q44fd<CSS5\1?:AcdGqbpc4J,E/NsWNQaHBS8fS
%))>eH"ib>7Qu(2;9Lg`FbgfX_=G"%;M%N[fr.r1F+_E5R6A3jE$_hG3B>e-qibpO#kirr.pDDRO8_->VoEp>$n=nT:#;KD7^*e)!
%C159Q^q1485b:Gu5mFq\3+bc+)3VEg/[Wd^PGFfd\<l\+RWL((A7gK\a9*u7Bj_W]^4WJ`>mDphk`R2)9$btV+klpm%WNPLEO:V.
%.3BgA"62H+<RJJ-c]$>h@YGmYr".M'oGaKlRApAD+k(UropQ9FO55SdCZcJ+6uXg\jO11u#RiH>#cU+](^=hODh4N_]OdUD7.MNE
%2elc+R^(KiLt?&6,,8ksqBFJkmCsK7JJJIH\@+g%YK2a']%Vsgd5AVi',?h$XuS0N@#5#.JQpWOL//`ro'd3J>.OgSVfG@J\94Zg
%erjS\&U=8S>B(&2'X@_7L0d?"Ro*F$T0sRDKRTbE$$^/i9G0OQM(PI'+9Du"0Sh*O8P$YV8'Oq**5[H\+tu]c7#]gimU.!o<j`@6
%RlNn+7Gsl]L_1\2BXGY4o*eb*]VXc3Utc&(BO5'h,>gpHhT-?NDha+BBmWMkbY1$R*I6d74l4.FFL1#NM0TppeIbq9GlP.dEKCs(
%io>IG.2>QF8\-]d;QgaR!O4gUn+C5"G80_UY`G!i*<U$&.ZdqKre*tdfWA*)&El19:;Ig-LmVr"#rLMuBbQt&'$[Z_EX;bEYKbG5
%=M$C*MkR#i!GFqi+A%QSV]F8!1DV>>UObW1(Qdl7N8K?1ohcB3(q^g/'nZG;bRr)fg[GB?"c]O-G`VW!YB_"[12Bt)BVe0f:bBko
%fodp.kC`H2#-Oa*AP4%9.N7T+SO8&:-M<OZ#5?'4lqgSW&-o>])iV)H-3>QN%5L1Oi0-$@&jlnJiH8o';oY\[8KChSb>(-+)[QAW
%iG`X!CWIKube_DiRM2)K:t66or?q.>#F[CRj)DN%pkT?O)$XN(0n9ebn3=\o=uZMfQrfYlAUE.%)B.uX!(,e;Q4_/]-=-%50FJX2
%I/JRm"TGOM7tN=V*VG66[q*>5Vd5A5N-%f#),dL8&#g(s"WIq6=qF%g6\`Kl@g*P^%rGE%0tVtK0s_@XWNO-0oSO8FU=&[.FIZ;L
%[&1hT^7MY5cm$q\L*Cbs(aN"VRd+;N!Adr9<C!8,JAn?8rX[9BO@9?RSa!&j$t6uF73PF-%[nAj[Bi@?Z'HpL+!\N<n]HOGJES53
%K^4ULI\PAefAm2!&eQn"=^+9P6pZX+<7E$H9ro9O>R-e5og2*.`$6hspp-9BOb#ofL6kZH$K8Y9F9m+h%`!a=Wi%uqL"=8lmhK*H
%n,]SR[q,opU3SS?=1YSKiG(GTIO9?63<jjs_ij+<-O2sI;^2tLKW!X,n4me+kX)(9A6<Pro5XpFkCRBkU:=R\Rmm#4LO$3c%P*d*
%k9G(4B1k&[W^"ALi.pkScp;n)brYR%ch^J,)`_RKDHMQ95mjFPP[N]*']qn_-)610&mF![.Man@DDtB`An;!oW]>E\ZrEe$'^Ds,
%O_b328Ps2_]E&o"KRbO.<O.5<$2L&]$UdaIDo57:8k7=*QUK4.ns=qV*%"+rJXEH25*\a;j/o1sU-n3'-OVi<>I'j!Ai/(0i3nTX
%_\YHEd#3D\nt!!G!(!Ybe4<[Cf(EO&]7m3uZ7%D56R7c%)jUfOH(n<$/]p)hHshj>quG)sfV,,AD#lOcj;M^,VKXfJn%5kl8=j*`
%J:=7$OF4N>ap^(W^?PuoV@+Up"9o-Y:NJ`g$n=d$/Q@g:M7ScKX3h?rBZ^jZ@YtWS"bqaW-Jr8]AB[Wb/;XF4E_pEa71onuFUNS!
%X9ibeOqjQP9LFQ-0h2f4.[F\g&dPerh%;P9rTb>t9=ihBa$U?LAt!.\%!a,2ANJ6Rj,PQE0,P'Z+ZC!1I(\Tp,-_2p;dXZ%f9&YG
%!+!reBL0LB,k_uG;Je_T@Hlu#f/p&GaL@C2Q'YW)K+,*1pO8;,Un<TR1mAYW1k@>')[+/Ikn?,Qfkj&769W1T'5nO[5YZdp8]sB3
%@0FqSn50QSlr$peMqXCVoC5dCd:o.C!qshEJa&YNllP&\2@ib.!q6Ks\ZCN:;YCc_"KuG(RQm+"r'oENqEZt*:-mj?8O)2ael>T_
%.mdVckm$c0@CF*CLDeAbm<V0a;n'$^gPji+$WSOJ&cgEi-3j=&J53eP4W-05TqgTQDP/rP3A=B-(/?il8DQX#K-29s0Wj4XlNJ%i
%\=a]\4;'@hr:SJ\n`Ofi]+C$^*a`B*D]fA?91)uUmsu%ak^BG&/!fp]R(;p%dWFc5C&fYP*I1hK@r<IX<!Xp?HS;rkWi;&D<#S49
%L9fO1XJgBt/MHL6Ujq"_BkbOUf.:nf^d>,d"6t"/N`]sP?S#<r-WWMHIEV;sqk]q!;r7d(IDF[aZB5pe.Y:1MoJ.;`GUt5\Q/H$n
%TP+LHi_XcXDt,KeTh-pI29)Yn6T3F*R[7WJ7j9\I\Bq/k$(T*%/K!\VcB)\%bD;]5T,euL`r_,()T/^OTERsU)=)1O[N`H2-/X+5
%Wi>A,0aPYQ=CL-DHR>lV9(/i8G;L$DS<$=B&eIcs*[!ULYY$(-.Za%4Rs5-S$Y2=b7.C[80LT%]n3G1V&RqX:-kiQDONm(nG.hN\
%6W.,(/M\c;Iq_6hQ98_rb2Uk%l;3=(:k5tcn1`*,E7X-eMC@l?7A20m^%B7#$E_Ep19`16a?9+me25CEOn=JoWA+5>Fp(FiGt@Z-
%WkTTjh9ZRN)SV/i"9:$Wfc-%qQ=,uTmW]u0$LW[>eR%P:QQ.-m#O=g48.,bqPlQP6e-7!o1)gM)1J7l]3a5(Z'f1CW]LsC$(7=38
%h:L&)*TEH!4J'Y[M^?SH`UWaR&UfEMfMQJ$6@]gc.^OhS96P%#(p/i7!'uNVGt;p3=9(:tQ5q$'^NCDiQ+'+G:eYT2#6Bd^NK6D.
%^b1p/P:`XAh%&P$(*+K",B+#I0L#RICE40GTeq6*,6r,k.8r6B"&]i8e);-Ck0<P"*+W!s%mn>T^&T?FXNg>NNWK-s"8(:S00KB>
%AZ!,mPF:[?!<(iMH5LpQ?iUQu#-MC?1tonK7\-dq&bqh'Y=+7jO/JY=(oV(D;DZ3_Aq&(#j^o^5E'kULR'L=*(8BVu/IZtpK1UL"
%4@AH)UaR!69%;m\(0"fo&2Wt2Jf`(5X_L!0#@:"sH6TEUOReZFpZ!-=(W?1XN(pa^;qTLOc"p-/1*^i,JI:ETb`+ste(&lT1.St+
%ZYiMPRTbNWQSq76:;C(i0A2_"e(3JFiC\dpNVY)7J`6bK]4&]RnCgI!?8=g/g2iP+S@pgr?@+G]"+Z+$;ULF<['4oM8liT9bqC8W
%MFdmg![\2Xr7Qr;:q?b>/.d'O-2;1W:LjnJZe^.9,NWSG8oYU/pJrf)8+'BpbLAsRpuK[foclh];";W!#K2H-70_kH%Zs;7!$:^j
%(er'JZ>^`XF!Fs4mMp=/)O]7#.8HB9&2b11e30!JRF[]p0["/j<"5]oM=Eo2!T&FB1r1`3'8,8lBdl5s:0if/V$e_qnGhH0%IY1:
%b]kYco#T`=_?XPm+sFGJZpY$K[BuX=]k0Y-`lrD*$5d0IDbY$2Id@Dd6&'Xb"r%reAVlJ3(47\L%(I;PGFDRG&2c*k5Rh.t=Q+uc
%p&uK*28pW*4=ld@C_p:O%[r`S//98"1`mR..M6-TJ$C:E7E[<;.&43%XoeaMaG;B<H,s]*o(WB%#&0j8g^]1?83B]V,2$F&%&#UY
%,H1&G(`RD)k\$tnGSfL)r7Feu:<$@Kg1b#tK:h$`Ai&e/Kr<i\7QO&FCk;Z#(,TRF3'S<2'7kZr+qfqPf)-%4gS)-Jc,b#mc6<X:
%"$oU-81]XW#?HbJNWs[&3Y7$Y=P0\KKFd!V&>.E(?Qh"+Lm8\&5sq.('7^52AJE?jQWm0=]:<XDiR=T;5YGs%Zlq+m`NZ`+jX?Zm
%OSr??9oWk!W.><Vgo-DJpLgq@>80UK^bQRj"'"MoQ7NCjJdYa!9*?-"ei;i,a33`;M]Z@o7j+)1%aYuR0qM<c**c-Z]p+$Q#IZ?m
%0!"jp)G2#gN5Lg`h!spp;jXWnP1J-WJ'$DpkmR%u%4X27"Ei?"`LEh8d)_u/$aj/M$]&S!`0er$O/,MtY7k5n;JNY?7b6d3&X5pK
%4]]Lg$GJhL2$[edQFj4+<3`YYZn-hRCO-Lm+(XgBW^@%[='cRNNeD]Q$:G=(+tu@tOZH*f63:gC`l"'^SX%GKLlD7C&dfc<8LkD1
%JdbQcG=L+%BN?2W!G%.SBC[%L;Ce22Kf+V<BpN=1XF(_7cAWo[cIgaIa94)F`*)].l%dof'i:!pgNI$\b78*r5kOPX$l4*=<XsJV
%"UuoUR=7)@J,g6<AJ`u4eoaR[.;6jX:FY%MLYlc_'G`C`K`]P*`k%-Z8fB*/"_,ssMMJ1V:'8g,G1`Ee%\E(r,K&&46Km*9/TeYQ
%imTA<:$Fr+g_W^45T>R2H*Jj7b1*^fKA+;lmhISL9_X[7dMdO!H8Yb2:H=Xo//YX*A.KpAgLq?I65lLUYrlNZi4K'A!QG+''P%5h
%XYn+WZm/BEQq><S$BaqS'b;P2GbJ#fT(SOFdfM:>@C$#65`;)=R.-j=<jbMt)Mt6qXJ!DW2euIKK62062PPmYCDt(B)UNE@j>A0P
%$,K>gN+gW2C=!!_nMs9Ec\ddb=:$0ZIUQq]YcR.PLqpVfOb0O%8CRI6/>9_H:-3b6j7oACWB0+-lA,O0<tL2-S6n)d#n`,lZU0Vc
%iFqu"Jaii+Q7ag<$Y#Ytl@UIRF`o"t'LlmY#X_Uu(LFh1ZXF<j^.1E*Tl*`n";ol8hS#fM1PCNV&Pi#aaG>W<G'C^nds(*3OJ_ce
%gV#PX^s_kun%\kpP@lP`5.pa[DdU9U'3UfRnbUcHhq:^W?h4*Kmr"c1\c(Z+H-#g1g[:t(g\pYliia/sS_g[[%lNZP1pO!7s$Bol
%IE'4\&XL%1W%H$/RrSXrMV(Rm'EbZ#AJeu<!t8lU4Nu?]'2?]_+JBXGQ-qMC`#/r:>Yo*g;G*k[$kDD.C,D&o5qb)DQdIQ\5EP<Q
%<0BS-Wc8o$:%n#tod#c%XJ\#eOX#74Z<>,XYtm>#c2&`8"h?'Y$X-^4YGm&2@?F4i!V"KuV\E]ZQ1'GFL:gU$O_B`_BY<,lf>*$V
%P't$H^D;uS(T2P**_[J(C*LB@)cBS]:d`"#C.TjYUUo/QVMFC;&Et_4?aul*"7T,(%Hq2sag7QjW1/dGN'+5)e.&'F)/"=r2\GnM
%(_:XoaR[,17\'_3i_\PCP76_T7Q3-PL#+[j1askU&5^=LN%U.T>D,"V-SabSeei$bDCB127POC:I1OCqPA;_i@RFg;[%86e?p[/;
%`jV[SNK+Pu"9?@;'uDMqkd$6b-L(^"ap`/3$eKUd$=K2)A3_mO2\\<YU3)?^?`b+ad#9F!P/\]Zc(o"aP-p[(8"5;<*Q[5+c%PdO
%.b#usCLHcZ8JWmg3&,M@q]%Kab]Bc1[DblcHV:boF+R\W,pR"fkZ=Qfp%km?i,o..@MBXo,)l8BVXuECqcR^<@0RiCDZOPgN.H"T
%Y6^gF8Q'3)n$d5(jJ&"'BZ1m_k/-sh\-F]C6F<8BSG;0]i^A"N;Yl`O<?2K7!QqWacWZ.(h2^,6_I:[QF)#6$i<NPjh@XI0MCoMY
%;Ql9s=X'mnHrUuJ_aCFY(a<tQZii7no^1;d[$H6!DL=Nd1)7tc6N*TiIJ4Mj']lUHbNjujDc(+l1K<M=/V2CqFsVMlAgj$Paa7#4
%3:_HTddn?_Ed??)p5m[2:*k9)Xfbg4_W19'>#[[D`i423r&jIh;B%@!%u67.V<['gCMl^_OgNu"ojMOUYj4#soY(B'57]bED_9d4
%&)aD6OFL(p%/`b%jaf`\`#ldq,iT@aqftT=5mAW.PLBkPcp\\O#K7?Yc4u^kTPqHnE.WR3%%=!^FMK?Z;RBDm%PM!B@CoW2Wa,s#
%QW:5qk??A#.e>Pq4.q2YP-PZb*tTIc+@C_-6oHgG,e-=+[!5?:B,g*87;HS6b#)?&T^69h&4T:pd0*X/=Qj_/(+6+;c)=\kj-PNl
%5\giP#4,h[//n1mE`jLcP]?M=E+Cf/^u);/[&pYC#%TnKkW;bfid9&s,GipP>1=&[gZitAb1i/TNeL9oUlg]JZO7aU#dL/@KrF;J
%bs]1jBaH5_gX(.q8\uUUb=Y7"HlE4LRq=E7VcXqd8^rkMJndS!!6X;9-bHBt=<^gQ1..dJ_4u#e%3l#[X:h8Ogh6j%+k-"E8IYcf
%FGN\X^?0(r3ooja/>+RuZUK%+`)iUi.uPp0f")t]4i^Dm&N'(fJ1Au.a,NnjKTG<f7-RdrLXXHA<h_DXe*;,:[/i4:Db%Q;VG_>W
%3][9tM64_/Jhhg!%jqj!/Dsd+q9hZA4jAOB!9qHV>6=Di7<l(.`A/k":_fRF>S83G8:lMYM3KHfD6PC5dJmlfLeQ^+(^?S6oJ!M\
%>_Y.J?)2I06]rJ5Rbcog5QV[k>7jCkU'0oC:hMX75jH;/-%)6:?+PP$WuqIIFa4%8)fa),e>a[f#7CU#$:&J,]Oar6!*TR?'b.Nn
%M3GgRC.9V%3o_82">9jTob\+Ta+1T,<*:qiEMLcYZ4d7r2eG-0J;PIbgi6R(?@c2_;-7A>3C:%XFFfj>+YkrP_h#`3,Z8&#M8^hq
%$WLT`FV^Ds^t_FK@-_\oQD4Y%U#NGDg63RWP]g2oq%Lr8XKOC(D5NVOP7a4(^tMj@$@G"4)58b$QBS-4D#qccqCX$,(?"&JB`cJA
%X@"7e`H(Fe^cR:KGMrIO0b%*Fpce8&'>KFX&dpgtYcns:0-m\AG$cq/2tHX29!mWTR6$]+NYY8*b.;8#@RIjM0GtSh:m.jl<109i
%'k.<";C!)ml+O1k$6$Td13R7FI(*"JV<K2`;k&M<Ba5fH!3lm;%?%)]7@')si^KZEJgr#eLHm?3>lsV'qqE@'*<B74rke@7+E1od
%37n=q*#'"X+eE4Uh&<21m/TI,OGWTfg_ICT1GVah!MifK@1OQO5dW>+7]3U.*q4c&M@4/V3!oi+P`q"QZ/jXc9je(;_6dR"\]E,U
%qqGhbI50iE#+>@"7pa05+<m^XYpt%*jVEir!D7M>W&-'lY]shnAYVJ$^oi#VjCjW.,K13-1Z=]%3ff^X8nJZ[^u-^070C>iLaIK!
%'4fS8/Bq+m]]5Ep$PiKql8XO4@!9AH_mFm?X^VO>]m.e5,uTbnQI.tg=?eFE=^XS>AH6=%)A#,LE(EgAccZBjQ,kh[fCA9#X""ur
%dMH:C95idI`c?5K7KnB,*e4Hj;iFd;s1hFfQ%.DC\;sEsJi6jRP73A4m4$`:@ao2_kqfGP`k>c]_A`_76t!iadomNm9U_D<EXU,`
%Wro1u>FZ:m"WG<cbr_eVL0eZ`_;*Xo(-Wj&Q_B[\jDC:P*X"aBC>pYTP&VY/HC1uDDEtY'\/.W:=J-GNi"N?KPA1h'.+k=OlW^HD
%!fmoIXg)G3W:BLaiCAQsEI[gYNN%l`$W)>sqe'6r9L/bFcPWjLP3YB`kGi.#\RekmS'f0?cFJO=<ZJAH[em4:N#3upJe8F8Z^NjU
%EJ.W_)9*eK)ftH/j[+LhNkSar?Zc'#8cqo+,0?LBAaK!@G_lD5GUBUI*G>O;e.S:\W%>r%@+()_)&>#ciMX"]"%pj#Kqk"IC$G3,
%!.^B?A\_D3>Fd(0i?<G8$/ejG!EpE^V1Cpm%Ne!oU3b!s^:KoFTOJ6[_(?Rdck87b[eIFF6I1KFGXY7;262H8CJD,kGdH+gG)QQ+
%j/F;:A^-C5>$O*s+YXkmHQ7#1H7HI=dO'Tb3\j^5%U-pmUu[A]XRtAbTk*hdJ>?(UVd2Vb5%)f?@HgY04Ab;0P@!M\Z_Kc&$rSWG
%)UsISB%[9C/<I&j6oZJW7UMskl%0$bOGN0,,9`LY+:e/i^eJ9E@J,&[135,7@Rr,s1,+bsop3fApUmkHoGT#Oi1H4!W_"gV+Y[U'
%#oJi<2N-T2BdTZc<UI_CXlCpd;K3G<RPOPt<f9LAM:TP$.RZgB&#DY#[2p;b7Yf&b>-pg$cVTi=V2;"`7*@WFHQ!h`N)B##kSX1`
%Zg4*hOBMX@q/uP>`8E3t%^K0RNWcb?.N3lbZugJO3q6"?RAiYh0!4?ujC51O!CRhlUD]?c__8]XMTmD$+;5e@X)LCbOH09s(1q0i
%:@Mi.ZtO:hTG>o$@J8&&AUt,mqL@j^+do"Nb^*Nk['DFs?l_Ss";P&U=oE/*^oL+]Dh@[<>"JYnKTif`8=9i,3k^-jFC6H:e&:;p
%n4AlNS0BKL%_Wg9'n`g]%,t.Ha!h$!fec\>Z/D:`Y$f&=K!?\J>)!%ZWi`930O;8'p'\kSSFBm.Mi*l(L.`mA@ZJUu=&gH#@WqV-
%il;,Z<'QK7:Jj0V:`>I)j@Z,bJI>Lo=k_6[=LF[M2q@2X)bL5WZ4P00B$V1$jnrl4'JfrGnkZUE.VgG%<`N_8SeaLDhZpY"ZneRB
%)rVbNE\Zqb[P`1gY,";\[%$@!8alj`cI,asQp-E7-sEk,-!NXcBifV_lrI"hX:bfbY]u>\adphOHuSid1ahc\EVX3p%!n1>"9S6(
%LYcafQD(-X3F#,iXiVb`VC^f/>+b:o5>`)'QY-"V&m:B[HB[9IAjiO6:89-BO/B+9C9%oV0Xo=S"VQ?a\L7ltH*&>G454No3h,*m
%_@J#83Eh5Xq@8#6R4D8V$ug5ZBUrG&?Veb/"abV'"I1qf9@`=4E?u2Ma@L&j(<i]s[Hgq?pJhI-@s"^_`:^Es@(A&J?"UaeFp$1q
%eH:c?6\e;J`n:CT-5K.\*3Ut,2Bua*6^\Kh;X)#05Z"8/oW0AEcXOr!iEhYS&10':9#ipr(G,D9<6%l(?o%%/j/hBLcbV*s(rog`
%A>1qBRI$6X$W*r2p9+Z>)M?#B0rQj3kEkbXs,t7W*rE%3K/k54M6Tu+>F88^NR57r!:sDhk%;i'93-d@a$Cg%W*oO\;R8e\=V`m$
%>dNN,p^)d]*&i5dUIV%Vk2Im@KE?Z5PD[F-L6W+4dU"5d=;tH_3,\)XRQ88doH]!<O]4RN1P1g$"fE-Z>"So/`A_G[CeX(='2m3]
%Cn7'rVZIY^(pY,s-I+Bf'X_/sXX$$qR]=SOJFa^?M[3Smh3WXWQX_N1b.NV.*0LSC*0Yml(^,g]kS>$eo3#%ml&jV`,3-oPD4J+t
%\V5<Y;'QdtMMgK<Q1(+uPV=eBB-K*e%No!b6_^tB_?s9nIqdFE88<S7.uVscCN$(`AD1N4Na>f1,/j[aPS>0698prVDLJu258t#)
%dMD^T`/b?#`"l6S46'c;g"G!h,;K[d)G<gR<6(lTCB"ojn3G't.,f/LGN$=e!XWF1$,B6L=S4!6T0Z(kE3tS(11#0rUVP+_8C3;f
%F.gI=c(oYa]!rd=7#dbVVQVk1]`97n1C7\m-^"NLISB$L#ulkgQfn[sB2f=9$eDBHUmc7NkoI>K8[kMYpDg?7CBU'LR5"`%k@e!S
%?FiJG7(CW_"b\Cb]J6i(I?uL71FX2c>ds[IHpod&$Wc!,fGrC!i\MM-\cWB=h(kFl"?!9>O=j#m7G%9-dUd`XK$<<+FPP*YBt#M>
%755G1&O=l`?"!0;ZDI#j1SlP[$E'1t0:<*p=EGA(i1seNP<*\'G.$qTRT$=h:#k/$<Pur10IZX#-jFS<&`bW8I_ki8ISOSQ=%d3n
%30QsH_^Z_6D3WOA`Sk:*dP=^?r0QNs1T*3jPQ=a+9(?BG`e.-Y;:guV#fQgiP)Q.LMM%mb>MjQenQ(ViBL=/-[CIo(AI1j1?tJ$e
%bU/@-!R2Ug<Y?/.Z>tdHGu&(s9I5_d%ha(IkZ$Qbas"KhObYIR(fp'D>V-.W>IhX7D*3#3*Bmf,1Pb"5Me.a,3#j@P@.W1eLZ@EO
%Q?D&'E*sf;\YTaRE(WbBXPkkA@e2*a3/<1:8/our3,&Em7-=s`<l%\@%:sdmoSq-5SsgrHGJ\=qNhE9*n:`+!EO!/$7e`8Vb5d@'
%Kl^IojNkoaM06)oca^i[1Q-q[:)2(0g??h\_?mB-+P3!t_.hV4>D^4"OWMh^_@&<nE[t!HnrH=0Z6]j%g_pEP6RN3GAKd70#>mGd
%V&1fA&qttQJUAr<-QJ#.$.Ko_E-SG*ZGX3mEd'SR7jeV`%Xh=A1IX:/Kog=/(rA]KYa+QI&C+B=I*`<e34ob7F*Ds"(+`26fYL.u
%SC/98GUj[?+6;@QQiq.d\A?QW,\Z(3K;4JO8d%1234QDUn7?&5#LuiV8jA]Z\M]n\'/_`tYT.hofM[?CD`@lu#;nK]__D2JW55Bt
%R2T>"IAc]iaonU7DasTJ%HU^X204Bpl%8Q*j"sZT7CSG4Y:U]:E,B2eUX=_c?HA]Uo\_"YJeu.t#=gRoD&N90,YC>Y_VbYHP8Eq8
%f^aY.M[%Tlpq]P%[?0Ksjp0LDlE#Gnr8:g.5^GKt_F^ch8Cfp9K[YlbS6lT>\]5WS:HLj%$tCXKD>:rh(JO,[c4<ZZ../J0$,Y)a
%>Q8LF_?%;!H+EHtZ[p#,o\eMoNE+.@H>l-],C>rC:RHPoONi.7#A56K3oS'hc>:c0Li2A\8)T0n\E*s>/<k3ijTe9`\]k=C39bmO
%0RT]%a'qJPY!ESYF\:oR2tZ$]E_p=*keRQ+1<\S=_26h[.oTg>_6G89TPgud4)W7DNS+'C!TK4sCs*?Lj[P$"o7K+[_#lRZr8;89
%g@u+A\Dpn$frt>3#TU+8ABPLD3"b,Tc4<YWa[T?3q8"pGG)9l0i1AH/2%>"R:MRjn7Lr6,+`<=kS$C*jFunj'Z-FpH4l4P<K<QJ\
%]!'S8>FEDt&$@M@Sah>J1Z<Q<#@DE#q8)a'"J9=UE.'nG\Af&nIR7ZLf2%qUSut43R\PSl@L-W=i9Xo(2hN0A!C94&>b_NOD^Ru"
%6P&U*B8Z!Hi*Jtuh+A1fN0Q7r>C(8(C'oW<H>m83)M.2Gi&IWT6dZ?+\7[O%od`0bOBp9m%!lm`a=:Wn9Fm/_CP:_;%o*+4Z,dC!
%)](>NjGY0#SgBN6_%2PARWjB+*,0qsit!Y)3#UeWO[5-PS>='`4PB4Ve);Nq;We;:Q<I=<nFb3=5<,2jk5'7ME"Yq1:8l/C:AVN?
%SDTSR*$_*ZL;jbLgr7X_)*^*)).fbWo7K-m/5Y'C%h<%f@p>T$_6KB3&pj&"@n<#gYiQ*[ZYjL2$,Us3:rlBCNhqV8a\38+Kl02F
%E[M,ohG)l35r_7WJ2)8cdAkEu>$8Wb3"@)ugRTJBOl^(mB*@1h6E7;l"Q<I[<R<Z-iLoL9*p??1:3t;cgI`%F!1X8*F:a+,mV08\
%K@e'NeI=T"r-%.7F`MH:VDX^V%F4#s&E1ofgEgWK[PNOPY:L3T(d'b=eXh'&.:=;0>&`hI&`"Q5cTT<q_[2oc=MfPE8oS6/Y-YI/
%+_uPkQ4P&+'W0W.5&a#($5bf;+#pm(]_f\RcEq)!aOL%$=b35noeR[LRKIu:c3MW%#2PoopqY:OgHBEK^ao/V$\Jp/Fp9m#k\T1a
%@>nB3V#sN;Z,eF7Gj9kUc3Aa<Du[GG4#rUV4+B^(:,ZAJ[s.+U;KU;^?!E1I#?u(_baK65)fI"Wg>^:Je?,'HZo3m"G_U)igo8']
%4TJrN(6TS&j)6S^)1S.t_1jYW`LS[\&!m"_&QI]0_UB^2R0jq"#BrQl.WA94_XZkqi3:uZT/.3AX5-f#E,Kg@.[&'[mT<1(g)1P`
%_`t`-[P<=8g9<0%N<u+D2h@Ah1D;`Bl;Uh/E&:Z_a%QW]]i2a>fr;d7i8#LWGC>7?%1tSVQPGjX$CnK&8/CSli-\D[i>X7c(A.YB
%kZ$IsJXo\pP7!i14CWGM<uD-Ii(S;@E)uaaAY:i1'4Z&o9*A!:8<QMf,&eIK9S8^h^r`Uu;PHnhc4D5.;C;Mn+C&$]2%tO^;esgQ
%FWtd&cdGA:&:lW_"s;WG^hG[QJEo>UTQ=ZBs-<n[)f2j*V"9,#Y)V/Eo73%tO>SU/*cT+C.M48M,e+(-9!eg63*M]_^?#AsPAt:e
%%ldb2b'#9G\766k%%7V931n?i^j*X$Ot4rVbQH/](_*nj%lgtUE]tEQ3(u]qIriL0NetZ%b<$0C,?6<,bmb+A^^t)a%2s3"W^gtH
%%6///o%Io*^q"J0&2JLG*V-sZS9>rm[#jTo6NcaI92(&qPO]LD(3\&Tj2qf"?pb%AB9L-=dt#oO@1?P@!I&'XF_<8`peK(Nkq(cR
%hdiG3L'=)m8_f#rZ[ajRM,Mr.^tH#\gT[u6]<SV=B*%0W+Osr*JCEfp7ejL!J?qk':p@3TUW5p60j)43pW=su,iE41j<KWd*'LfN
%>?.Eu7oqFQH:n:a6G/WE8cat(GGOTo'];_8+7b^!S?5c0SH><5g_QngJ?oEUl<=U7qF]VQCa+\ROsi_?[M7Z,Fb2>sP67?R[Fg>s
%!%74]PE'5bE%D,[J-H7gl6BA2&oaFp?(SMNi3]"HhZqh'XaU`!cqP!hdW@85@)E"?mRM2-+Z[?srfOd1E.C;(/Eq'7!2iXjd<?@F
%-F;r3\MFW'L8N/4"7A4db2<;%@U&/]Pm8;R(1T6DE!H0L#?9je#:cD5jr5L`]JY>lK*WH(VNZ?o"A\D5=rN&t@F:K(kX=@=)=&S,
%4Q,FS(7F]&4Q+_MXQo18i#9pJiY`7dR[&l5o7/>J\?^X+D*W2`b5r/VB19XE!GB7d;i<Rci(OdRD.3Mn1<.QV3X[n\kd"c/Xt8K:
%V(*W\B)uYH8p:f<=hk?b<;&uM[Vsa0]0QPEE"[0L%1P;a:ur'd*cT\[&o?l-i**6S]5)![GL`Vo3YOK:r^auZRD<6F-njV8$(Oj9
%ZLDr_E+!Ckhd:!t7uO\LD4&,dbe11*"HH")p@0pP3)MjP#BqM6AfB+!lV-5a..*!''0)dcpLieci##pDljb@]7U/IgZXEojLa[OD
%B*-+5EGN>*"O9-;*mts+QgEFh=!DUZ06qBF0poa657BO,L'aCGHj$6,'t@a>C<uN'=Y3(uY%9s(:>7_IYYp$67`@`$WPFq[`SG2d
%<8\+&=j8U$$"j06@;i*[R9N`$ZF+M\BFmt;!r'u2;R]W`m#,9!:!saog08cR$J[]FK""_;kd8JbkZ$KE\SEeYN!^P<>B-@=<8d++
%^9CLdF7AE1CoG,]_J?]Ih4Og>U:8:i6j4'$;-C?NDGYnjL+=i:Q^,$9)>Eo\$Chi=/ALUPi(,lZbq;$l3:"ZXmP>S;WmI!Q^pq0_
%?H/P93Z0p6+tMjR9EpO/V(L<0^`hoFgqM_KLS3t[F=qNL!>a1q^j2ofbZs'+s,FS*\A6LW`cSk6JSU&uXAn+K6KaX?K*iSMk,?O(
%i"u^T_kU.]1G`D6]T!7<kKm5]0S(IL4d-f!1P,.k-*K_p#\N:BfFWVoUX\l!7,S@-.aDp*i8D`-1"]<RP66I0%%R`q!:\XQB2F.H
%J/'Er<8dC!4(l'uMjnQJQOOb@\sok)>i:S20WD*oJYRo6Kj-0KXqcB"*A,GZB88UNZ[nm&omIc;E(5Ve(j7fVIQi^Oc3Jg=pO="G
%n\KV29UV^F\`!X7be%A%MXc75LN4J"irb'#%&Fo*I=<V2L5#7j#L:O[h0IE3^mS.s,*!*S3$r_2l#btgB0&SkJf(3afJ&^,AA\Yt
%eYj?JB*"s^jkojKmsaN!n'ljMI,M)&!iWlq"/dRSc[5/46hJK63r$K^@)L^:%3IS+S$(l2")"!d-#fCch"AUL/KZs@JL1ddE(hKC
%pO`qqe"/tu><6_.W@@P3%\,+EIbrG&o+<N*k]Ga-"teFm#Hg/tTL[eaJ^ZtSQ2R?XB,JBq^X@\N2&@-g><6`unKccSCuE59R*=:;
%^ju\h)PA$-E&<cpA$CO%Y?(5!c3E^HYr'A81E/<BX5h4L`Wf1ScSLVjAcp*.3V)EX2K6^]m7C#bCuBOKAW#<JJHNE_OVL:(#*'I^
%H>L[<&VgT5f&-U"`$'nm$_0d;90K$O7kg_"Znd1W09pY_SI)s^:2!iUE+"5W`0CQI%83WM%6-&W84LF`"WZe8J_36icDpp0<t=_3
%H[T]Z^mj_^0c7]WM5Y:+@/tMQCWLs9!(Vs-M(sNBmN,-'ka;GkA9Q0il3-%LE_u25,lfS4;8;[OUN28&:oF>*cihq8LA`(:27[[c
%r>TnWUakcmhr$Qu4mSF2)tm1gc'8&d'2e+[1[mRZ7GAH)_e3=Wg2HD!c.!bDrC3(fMqg4dh^'ZgnK@d"=2iGt[ZZ*GR?TP!oG]AS
%;;OmZfn+b1QLl-EbPL]oq@-6,9pFPnrI@VQAc1uXP(W6C[<N04PF_.]DIYdRqo6KA:Sj8'=5.hEOF8@'XOT,,D_bLn[PE9kXVmKD
%9]$!;PT"XUqIVN^7?$K#%D[Judl1HDLhrKn)bCe!9(WRj0=Z2FoA,qrFbAfq29R;aQ/rt\c-#H8PC-kONch2n7\g)'+._=/)t,hT
%i>[77B"#V8pEgI^VJiC,7Vp2%Zsi^KY*e.8)<BYA]Ylup[l:ZhAfBK!m>\n1g$_#1\)Oi,m[^>jdEIXgeD=j^qqe">Ar[i=FuJ.4
%BP((KOF*b!Gq8Vj-k5i9XA[c6H_X8D8UfdpL-gUm\RG3OQNcq\)mM>s(FXOl]\^oAe^tF[1HZ\ZoS=(_E'+0D*Q6gMrMc3obh`L&
%Oa/aM]nuWQi`B`1UAQE5h(j=%=Ku6]lTso4HlTe">AA)X?i5^Gm>ZfpI*JlnHXinL'>:79`ed6U*R*AVBVb!dRD%!AD*+]0dDDQu
%i:a&.d`BQdF*eQh7Nt+\p4d_+8H%K?L'>GUqNfm*7T.K>jn8m8^AnQ[gtl_lb*rjL[mJG*Xk_dOmsXe[gRHuQfbi9fP_r%C**HeG
%VDXTs:jlpLVJ-go9('s-=F=8n]kN)'&n+/q%3SpAf/gH$F2UE=/%N-ac%6S4%CnEc%X]fXEOV\=&EusX9fE%i(L(ouV]L4iah8E/
%%4eosSs%Bt]pY%:E8dJ`AjV@F(DsP=U']WPDeA]T+GIf7S_4sQbKSYUm*1)2[_K`&m7eFfG&QR;VD"qX+u?\e5*c32i:_?49>X<g
%%6o]JnWqmu+>?g,;1#'hA_;XhRt6VHSM>II08HT&BD.(.cTI^,ZT#"8P&)&C2t.!V%!H6$a%a$J4Ce(sR6R%2cKrg"1R`_2C2Z(m
%8j2%1^#<?34WDo-9#kA*oddF/?l\"YUJlLYW0p\$DZZQ<)E-+%/;XB_2Q4<G&h5EA;1%?JM#VCm]n,f37QdW_d09/p2U(#k-.,O:
%p?$(Im3lF89abY[[`%#fS^\58`8611^$Q*3&pk:gB1dV#p-srmK:UX6OM,OTZm#,iY/fgY:@*t+"J%<(]c!4/"RBZ/Dq:Vli)XH.
%N@2ZU14.Kt:Sc^8RD$_WP5#Gqp-tu>K;NZcHSZqfK^9/W2rhnK+WB.m</.W,[bT_=M;5/L\@njMI<I-M2d-JRDQ(7:E6MTk3k%'1
%5*q$jm`fQfkJA+I2c2`W*0&aCo+_?baM#uq'V67aDbaCnP#h7u7^TIBHf+MahZ[tHE$ZK'T[kN-\@n;sQtVEt[l;M&8C#Sm]h,rM
%R/OU:HY_VLBIgPN*SB@PC2^VY\o#uPg)C54)+-Hm[t^i0>,f4"*ER-)1K/YLQ=+laVtO^t5>tWF\+e]3rUcZW?`4[A8B8;.aJsfk
%#FU[hq\LSIPn%/0)\*a3.u5F&&;Zi!,7#i973(=/E:6V.bI%a_d]c8:bCdX!(g+hLNJ;QiG[W0*7`k4/(noT-M+!Y;(1]aU5j/hX
%pOHYk8ErT!o8u:_aQho<4B=l!5Z5\!iQuD5+g`f2kI>$jFku<bKgE;4HdoW'qCpUqNP3F+6gqqY<`st$aAi5[TV;n72RT2Hn[)Z$
%].f>m(>C]32c_Hh@:BjUJr$dHSpJH@,E`h3m42.YM^#'hDeQC]OK]dqHc!;?dlon*G62GZi2g<6TXn7i$"NMX85=ejoG,E\+UiS!
%C.34t:*`adldVJk@OkGkZRtNGd#LL)nqFsD`HYDP,(V;0^+<Gc*5%O*6"r6-Gh/(*FO;LjDh\JofMC"WC$+!A7JBD>EcD1Y,LXU6
%Mu:D>2^inOH)!P'FgE]^W>&@$n4B'Ir"N,,$dqr#P5Scf7?&+MFu8N](]`1jC_<pA9AqK5BSkQ)%^=$Kd83eMK)p-l1L</3i.:G2
%e5IVCRU-?EML\^-$C0Qf.b<Hm.IDB2Zrs:B7m^?(pICtu!'sK_XYk9#717=bmIpaR1+HF`a0J<l>\Df+70I#*h\.PYgU@RP3FKqY
%XW=H2!CCV9`D:_%Lju0$!jjui[WGnS%=#4A^(cr4jOC^fib0,TV.$1GO*(KQ_O30<0Kmd]5jGMN-.s7B]/8g0%j9"tP`o4HS^N<j
%pi1B2#Fj9"SM1\[U;`SG&G8;O9IL4.D5''A/M't!D;s*!"]$\-$IAkC)\$?:%k(g&iM_:&CK+MgV>u?F5XlC\irUtO$@C?IMb4mM
%)uWlsqM&5pnHl:fUY!dq`Lpc<_urQS.+ha,PtXr9`1_4O,N+V7i!D[[Z%R&BEK#ognf=1,O<6kpJbg?$?2RNt.'NdYisO0EjUT^6
%S*Ar9DUZf^9$6mgQI'kO<^J1Ie6D^36jq)[%GXC86jp)VRlNF;6F`c?=.ls_<?Q#a;@,nGdE(F"Wg#gAMcHdL859lg6*SWVU^s;`
%U)Sc)7Lr5ofIgHo_2L`PO-hmo<Ru-f1.Fg*5(9W4_\EH<j#+gR9tW`'UgnV3IKY<K\d'''i]>/K\[adu+;gW]PVf/n+:hY7AWdq<
%+=T]g#Y#1J3Hd.i&fq#f6%5-g\I*-W5sLe_i"J9T8bQh+)Bi>+LCGcBoaG@>?cj)F78l.MVR"Jfdd2!-]a:dM_kSCJgrIVt7IL>&
%H?6*Z.SNI=I$:StBtom'@\=sdmfnB"kmc^F]G')U%SoO]a!eV%>;9ZU#pBj1KZ%;n#$+$65%A9jJ3rK4,n6<"g=XW4,"V'PoZ"[%
%c(PW1#o!%<jPU$g`j:iIQND@[,6tcK81I!2JmB9CW-5(2iPK1EA#&2gb#@>0Grar=5p.EsD])-M3/8A=gtZrNI_&-5B7"n*>79T?
%EH>$.RWo:i,@VV<A_8Kr@[V'mYq"'=jt8UN6;)nsAFC^"!A0utK:@T1(QQ`]kr"](e@+9QXSRU/&phQEXE>bL<)6P0^2VU[PElO9
%VBXLC(;<5\gTWe#Pc&Sj_]g24k7IKtgA^DO.DSbR4[k>\Of4aoC\G1K+KCn2$";=TOGC+2o%*M\#^10V;M6A.18=jGU`CP-fn/U\
%$30c'q/mK%6t^&sY_O^%_*B[Uq_CKpK.o(]YfXNo,+79Y6??I\dYB_9PCr?_krfk[#Y8LC65mAc7^m%5lU!<,5`rru>R<]2$ZU<V
%6Er(fBcR<i30CD"^G(PAQX\Adkok7O2`,Sk>*re.OThPX2(\4K4H0L4Yd1c#+Ln4:aa=*['_9Go>d/#LdPX=t:d9iS,d_*,NHie3
%3ghfpMVCD5DKEHJU.%`(0(<Aa7aRo22/gPWO,%_@EJ$fcSG:=F6]9$,hk:^nFeMc:<G<^rboq-HcF3[N^$Zo#]lnNS3Gald7Vj)L
%0K#'oh!':&@I-]]@%sn`l/'QO'>6AdOf".UNcX;Mn]DVZQFYJ89Hb+]RjDZ)=4C:;Fb*.RI\6ilm%Mt\=;7$NcleFK/#m<MHZg:<
%R%*)%OjRCNSOkn1AJ_;VW_"B79Oo"O:Pq%+:upCo!Nls^GQL]#Uco;bWq9ndj^ZVJO+M2V,]9TM]50E#8N2^/.Ct7HN,>os\ts=&
%L)b0?CHFaoA/7/u%_u2ag>Q1pf/ZP<_a\.s"5nstZ+4T+cl;,MmQ?AE^jJQ$=Q@R@c#Q4qd[:76Ok`bJL`E">>/Fn<qP4V.%WAdm
%,tf]G:9hcR$\P^#J]#8lIbjDnc(*A4BSKK"bspV<$#!bE)HsWUJ;JR&TJSJh="s%c%Lo;Y#>41;3Hl9kH\"<H*^1T!VNbI1A_]:S
%XT6(i*D,[."7LhS(9[T'rN#>fBq8qD3/n6Yk[LV6_&D",8gjp^-3A4[WZ,%'VPFcsY3b,DA.oBJ-7cNE(C%1E;8CNg/M)WC9Oemp
%4IO1m'd.[nU"o`e(0"dBX]BbrT"s=6Y-#4q(/4fdj/^\FJtYke_)pQMl+?S)Lt;mem:5@G!oqBg4,Tik0=h1G13&neACBc=l<Ma0
%'IA"K2Pq)&+6/ft&sZ3<MB*okj%D9t@7_s<V#.q[*=SS)>X=?1?3RaI`,@?"fHVE^*ODoQ'lsIa'<DRBC`L#ZlO`97(WCDoL^^c:
%kRFs$LXekrkA`Rq3*Ae%NAU@7/Xq!E@Hf*bHGu@-(Dubs;mESWK9/?:!OOr22maI:'OiJA?(J@6+3#iF@e?'b5X^4D<Yj`Wa<nNt
%o>.G5$kSD(rQsCt-6M,F/6?Wt[Y].h1eX9Aqc3+V,qZ\MMs`bKJjpMh)kr.E3#1A!@P1cM#8Tkm-4DRQ#$fUg=,P:rRNK0,=<L;"
%R6j^cmJghfc'mZPP&0*$RHZrcbF#9LRT.:qOeX:TlL*F$;TgGeB-\E8P<iSR`!?_U"Js]IqCg-6O3#OKJ-6%SWkc!5kpDs(OVsXD
%LG.iSFiT+T":8d%/SSRDoA.qX0Sm9.4R9eeLe)lJY<o[hQp4HRggM#/$D%LpOoVtiFbH<>^g[;bWK('r,k/K4^a,DLm"mVp^3!VC
%@;6F,)tjC(EFEOi*F+tTGcUR5rl>6OQI*LL9"UUWO9BK#q9Y*dS%oB+SHJUr$NOX<=`=GYE@D#D.#dEEHC3XQWcY6l;hDpfP+$L&
%Y%1)`e03*Tpf%n>e+k*q*FLt%#gTdQ(#IHk;/$aA"^<7'lr[uW0[P*e\!/#)!?Itn"PY\k#lS<GatD"E>EJAq*Vl`:YgBa&Q`mM)
%Cp1=WK$[T*&d#*kJj.=5HQ?T,>l]MqF6?W]HTJk!l]17DK9[RS%`]\e%39R.<NrZ(fmqTSUj+QUQ$AR&O3jF"5Gg$84AUD;*4G@p
%(i`b9bilakcO;'d(]Y.8hn^6%C;D%F%aK-m(\jZq.TN4_:b1nnrI^6?'&$=JH3%AU%!Rg<rA:2ucdmkf4X,i;Vd31UkVk)a"Bg'a
%a)Ze3*s-c^+CU6aM;'!;E^f_b?Qug,EF)6WJrIBK94hB`.k/5RUO?TJ)'3pN&V/4e"uYn+$cM_?Cgb[?<Yp+E6RTu2+GFm;Mh.1`
%mkg)t.m?t9@ohB;*%EE@1mk4=+RY*]5XK9=Z0(4mV=#./Z4(6H3Sjof+_*ZCqdDSHVf7c^(#Dp)5.-m?:c#\>-@E@J1#uC2Q$M80
%bZ7P<CXtnjA<JNt+?3.A3+ABRF\Ko0^BaaLP#]OF<PC;<+pkMoId&/]8%f4*;RgCL?XmdQAmp8m(n.a<%0^@t[X,E7[jYAOFCV(e
%Foo2Oi(<XDGUU%O@.i5>I>.(n,->erP3t)-.pb=X*GrpXKiDXc'i+ip6XEM#6'Jc<,o41IWbj8V8MHSi6$E[p."m^+nBC0#c`g`o
%BE?m-NGi?<dQ>iG8H\^hZIIpMp7W0N#2Dl8gVlL6oc9-,8k1T]21?94V/@$':eV3ok@U2I+PE-K(**+X.,TQB3jKmu0u*o&nAuhI
%70au`ruqb+13tKOOlB&E^1l/1I8d@P:p;/4KU5"RAIJ&P57TcG0XgnhdK*HA5[0GDdf#o'P<'uA>p;b6MtsLISMZM[-c:to>WT?h
%epg"Qh$D=9Ze[>ni]Sl,*RDl?&f2[qeFM37nB'HA0<cmVQ_7+Abru&K?qcWj]-rg8J0J-`-hQ'NeBWf4!%QqWOilenaJqQe%^$Hj
%q@2r3dUIj<0WVV^`[apldXEZc`.2n;<?f^;2jtOoRDb9n9*Zu2)!JmM0$KoK8d#K@!2M>7@hHhuOcqY[<b+@D,GBuF$^9qbkS?EV
%fW@UNE,hR^$EG`%-C&Oh.sEjC(e]CC"hEmr:U-`GI:",^@4V,r,a\!ST"s\A&o'd9GKam@:J6/J-^UPBN,"s)5&1$0HjTEFkh\-/
%?50tCW'_n+dg6V>2H)T^P=VX;Ss?W.0B#sb1uSd97Z."Y-V,D,#2,nJ)1nUl)1m+W0gZ;uIUEK@oWjT.?cYVd^.B;c2HWNo@qM6$
%FsRg\P#bJ--4ED\V!J["@)<bjXI4/<?jTRRj-!"(7\IG?[3qo%F\^pYkX1f38&CZ<M`h()YgX.<gajM6kX,9ji&YU*NA,?1Lhe]'
%me*Kj?WRb,PCg#%;;HM,Y8LbS@a^\`Q+j%6GCo?SMl>r06AI-MI*6Ut\?9R29VIN_=EU/oVN\6I"m0LH8I)`5/T<[a;B+S"+jhl>
%'B,+\5pM?4#DC&;8MpP+@nlEFR".FA4BS6Jd<I;IXq>Y91e-7J+_Ik6$Q)KjJ/U"5LSoi:JhAI?KO19KE<2EtK^"GOr..fN5qHUR
%E0F]jVc8)'`,8@MC]l,9KK'E?F]^#OS,cU,,Sg!*o@)+3+,-@"2_7=/.d@r:!25f*Ja90ghBKEK?s\f\Oc;:'NLM69-scQPgueT\
%B,i;SK-Za(SZ%,2@W.IK#MO`>[4m3=_;>_JYfYV-l[Pqh-'i4C+qU.JJjb`(4s@[/A-3j[W>aPh_mHqREFn&ak]lPB7]J:HId3Yh
%a7etp"ED`X)/DCKs$>IB*2e;uNa]p:0!@%N0MVai!2'K$&d@&LJnF;`*X]`?L!)U2>5AX^j(VCEOk2oBAlE/RZNn$:5QDhCMr]u>
%SsEm77No3N`#!-F!D2I:U#@-!Ps@8X#uuVfH/tkom6L/nk6CL8"(S;U>%+5/(sPgC??!/fCuf)4k^H^oj9iO"\!e.3'9E8L$]SU:
%U\@g,S:i[nSU;ru4-La3J`).a-C)esXVI>YRA>3kf$eN7nMWRsZDEVOA<IT8J>e#&o?8X\d[3:9c;*'d9SHK%>n>-ZS6#H'-kA)Z
%aRO.EaF!D!c#nh6)h`!\KRKrMCLr]5$Ll-,;6MF?]IAj(C?G9+^6!q%T[$T@5gPCP,kToo#_L#=e2iDI+YN)#mp`.s2p?rk23KBU
%Qrdm*HCt[3.J'IAoK7_Q>nCb;I_n5+W^Eh_iUC,\]Xt+T2,6k!eB2e3Kr,R@Go$)rfrQ^$"H4)98rQ6`CKu/,E_KNrJf)OpnpkD<
%]Dr-UEVL@rJ6VaE@d1-mgbIt1UYNZGCF#4::e;T+RDmo.I&d/(!coMRU"<ku4$tudnY(c6X0JKrdngtE';WW9c4_H(pHrQRZ)XW6
%_S#.LOh1tgE-)))X_]7M%uOX0ipnXC0TlsJ5BTkFNX?&ta['Cg(i"aMl-BYa"1U^-oh4nYJ=qI99$h-s?.[GTm3ME04Ws>I,U<r)
%Z*5!jSEVHC.1/?=`5Rs$32o^V#?IL"nX:+F%MCBVVGY3W":=`EXrKUi\d.SIlQsB"pJn^J,S4BGaX6]_0k;TNYP6ZQQ9C(ld<(mj
%'!0&_dftBp7Ns*DXHJe,p)tmc4O#E-o=-&$9*T$piu)SgD[+ksoucY.=d-c)9n+.oi&W6*2imh^qJ%=)K@C'A\Zc3:cqL_J#<3u+
%6[#9li\3*mjcu0)]hPU3K:1Hu-PVMW,%!$D,a@RVp_VoOJX#tbE%M^h=+Z47oW:Bon_VpLL!hjt^]dhE#]cn5FU<(63fBtO)t=Br
%(?-f+07B+BffDunGW_/t&->5d[h6(sJWL_IX`mce,/P)^865fK0p%Zq)O=k([)sI"#nOV2EqQ,#%pB-AhGLfcZsJ\&:Hr-RW1r9j
%&DmkF(]OaHdP8J_)7&A:#)c97.Ns?E`"(`D30<4$b,PT6-t-M9<>'FG'2]i)7<jgqmB,H:_LMuD)>^1O4rXV;Zm3^,Y#_8-5ijB2
%;76^M*P<Jm;FB=FMDjQ_LJ(7hZibP/4P=&3GVX&Z!32[P`([!raoHjI$qTAKV[jK^K;9&96:n.@mA*e$ER3bL9L5hd5'YlHfgi,#
%,<(,5)ptLJU.C)H*f+^_8brQM1Lu+Lim5[n>ND>A6KD9kMabe''OMn2]U<5Z6O;!MZAGP%.%L\R`R(ZV#$'^YBVo-/`4P+cbVZ.c
%&oI-C]\`4:PhOV/rQGCsQuIkTOAS<\,or@R:2_nSCb\qK&BHTPTacQZ5VSBp+9p&i5tX'EY:mQX="B'iipb/*hB/q_h&J73q>9^m
%b6pT)K#b[9d`1;Qe$MGq=-O+.L?Y^`R*QYf/3__uFRA!'CD;%6'"XYGs"QAG3B4^91X_-0/bl7W5eB/0#5&jc4s`&:B4Sh)-#RKl
%3Q<Nk;jOC6>+ud7aTISgE4st?0a_^!,d)*/3JO)pUcsK'VlT&#nHgm`YIB,d0;qqB[U:d&DM8Ic2DnAXiRh_m#4AA7WacH4'hO/(
%LBF&_AEIJ6.Y;!AP`KUICB:mN!]kE<dQ'^7>7Uhnk\`X"ZoXZ61T,/I=d+-j+<`:nUOt6N;0X<3#F*`N"m-@*P%>($9c,eX`gK:0
%C7$C@I<!\,7^6$Hd3+H*E>>bt+#@aPWlH6\82:0aj[^Gg(+fc!'6)VYSks/:"-[hp_%q`83M7cD3q9qiN&;`l$G8,Nf#,9+P$:4.
%0h)VM2n2I`c,X@c"=2\`dch.o8KcPUOOFE:CcobV00gJlCE/]mfh$dUYGku^)8ok07i<el!(cr7OZs3n30q-LO)Li,?6i&MF@e_5
%pf!:t2Gmku6<*`'jJn;80u-r9!!T#V]70)H!Qd0,/)E!O,h3HQQNff][Pa_?qJ-d4lp_VCM8gK<Kr^:<B5B77lS&Y!&(#%nXarr8
%9A0>iX#t'l?mT1aEa'A*f_QtlB4CWIcjY5ZfF)07ZIgrUN+7938uY$sRX5H#J`:Kc+@iCa+J<RWZJn1p^aSZ:eGDLDiC)]i.crl(
%MIL>Dr=aW$bMneIpWnlMlnB2P^)+_T'H[m+1nGHV3=\DUPOS^*Daj#\=':(<6.,qn>,.>9CSucG)Y6Q.IM#,P'XX%qF4DRURks,r
%d@HrM,UN_.(09F?),9?MGR>!fQgkKIIa'I"4EA_1mDlfS&><j&e.N<s"imF+r5a&UH";TO"hLLBcA'"Yj,Vao^]@hFq2T[++=@69
%AD&-O%%NH2.p'E-bR=s96!XAW)8+hTq]F>b7<a'"Fa@R^-Bf"a5kB@1@Q?%O/.+gF'ZVdTSXG0>/1Dq8U0b3XT9o'04]+<$k@D3`
%+qmYb5V=eP&4U*^iMcoU+tc)t?9qO`!YrWn4A/Dq$G7CS(;sf0><C%=q&,oeJJ?>L>`jn`Jb9$9G!4^(Pn\l1LC<QK&suA@b:%WK
%_puR#m`e7rSrcs:E%a[e_4hL(c?OnHLe`5%(_tY0#15ZRG@V:`WM4o2pq6]0mCcTpm?0lU$M9u>iq1-]<gGUS,jrXBf#GSn_0Bsu
%UuJKZ&P4.h#;*E-,W&rul/Ko1EQ]!#]TLlYfeb%636`jF(5Na(\>:tGXSjICXB$I+;N"XEN>V^=:^dRF!#:3_Sq\tVQuFEoKJ:RR
%OjXiK`RAX+,Dn3%<(\Apq#V^2=Hlk]PSr>5KFg69;j7XZ%<-&@K#lW^\LA/l(nG1`KqtXA2C(kW#AJXL,J-n$?8=u;_HKQ9BL;?h
%^ai,Ga@#;q@&`.2Vj+qOkU:7b"Up@?0p^?hA=s9-<<b_<KOZ*e!EM%o;hRO!oaccTKYgg!ph[>Qcj@3r$$)FJfpo.],h;s.'g]!d
%m3Tu#30BgOAhaj82De$2A<O;GLfj:d#C/DW9)0d5i0"ln;uuba->Wt1_&*K"g.LKj=V<72'?!3u!DfU"7QHofFB6&9B\jFa03>DC
%:d,1&.'+"d&OmDp#\[sF3@_jW_/a<oK$8L?-<E_D7RZ$=:Hks-=_+hf)7q-1,HI._7l0Ih^m>A->#I;^Zr+ks8Ag+D-(?D.PncHL
%g]FuS+HM$^2&/cXeSK"oW$9G-l?!=c`_&.(Pc/,.E/?Nu?ml25!C1kMe&+KfE^+1?%YHn7#l>3M%A"^0B+b>fJJX:IJa5lLmi0@N
%-Sp,/1B>LpYSPV9dXbE$22&pnl+*m7YOm>f\>XJl_a-\,D2XiW86GWtV\%fK#j9f?BSn2rNFgXF')2ic++T5?!nY_6HqUi5+fL*&
%V.'@,6<F4s$JO-IKbf,p$s`l61_gKG#Zh('/C9Llr6c2o&&rN3O="6P&>Y2cO"`&hZ:LpN*s)\9<]Hd+i2'H/=[\LL+>4@-gsX*"
%(c*p4LlmI*OKB$1gnpf=:eVKoT*.*Fmf7YdnT%LY64(;BO:8(];!!Ag3H.7ec+R+`@>#?21p#0f"d0+"k4j"l#p:#f7Sloa)SoUM
%qs^EZP#j7;Y/OEQj;EomksS]G;D7X<89=)Wn"LSP;/Cn=#k8"c+=+TdRLUrLj;G$ig8u*/77^S)!)2RY5k*l<X'!,.<t\HD3B8)\
%E%i?o*OWk_O,bH]8V[bhGpJ(D?&O4S\0S;sek=[i*B%M>34b7RMFe?r,IP%WRuNAS[1$.k``._QLV>"dK@5$<`=64[M0T.R4VYdV
%"0U?+L1BFl.2/kGW1[A)$jk2j"u]UM@^9:C0oVc[o+">Gn?t<`GgKU0eYgFuW-gHoL&h%^=R^*'FUn]t/'((.0Uo(iSYF=3,RdgQ
%C^Od<Pks0[jlm/1\u/0"'mMP:(iVKc$lqqH!*H<oLI>W.<l!;JoAF`oWBHs'i%?9'0R]]m@fum06?A#*fUC8ZGl#KsFX&_B!,]2r
%@A5#9op5+J[M8oM6%9f[d&g/]-<LFV^;NG"Tb6Da[+#_ffWd,$)DA%IZ?q.F6=;4;`UPbB[RC*--!f'V7Z/`6fHk2<J*Jj]LlVF3
%*[D4L'9'Fc/Q-cu?'*/,%LZ)5Yi5,*EN[:u$eRV]N(q)'cPPf`5[d/FDd:H>:=0Ms<^a5,9=>J.]ef_O>0d5"dorkN0BrKJ1Y>"j
%e-`'%ZaF2]dcWpsg9+sH@Xg2K$i?%P,M^uVl]#%[df5sHk<s-=578E8!"1ckNN>u*En8;.Z:j[]&pe4JSX1akWKG/1/9R[!/.[R`
%<^e%B`#>m+=IT:^Miq+,c6EanP7S>a!8H$'eB#0-_mn(r9?\7"KtoJA^'q7l*/1&p1UpnMJV19='eQj*U(VbdnVMR?;S^KXZeGg^
%K&E,Q_=]7?X-iWF,,03X/kcSqem]Io:^h)(4UBE7f!J%m!"i3=Ot+?!`%>D^aOHiV`2o*sVhr:riUiE'2j-Km7k8rC%UR;))Cts1
%j9?&A?oZ6&BUS&;$1M\jh8sQ/g4KB2ZjLg$ZS=MO9-,q/KP*Yp@Ri+]8-mPEaiBX-[M2k\(!;8?K3&/^JO>%;0#UMdf,A9m/@a[C
%4KF#)H\"Q&I9>IJ>4Id!`=@YE'2at?eFj25KQOP@(SPK+R&3')D%gk8Xnr0;F2tq7>oqk<oE`<p!Ia^T/7TP%!h/'t"XaB!>C]H-
%$+eYXS<cZdWlkebej3@AiIP\"`um1+BFg3VK4Co=Gkt@XL'FS1eIp%8`6H)B%+M.>nt:6R('h4C7k<hp!r;3H(C_lsa2mINn*'_2
%koLT%@2<#Laa'f$?/rSfs3-Zn=<,El]^ip$BGhEFh$XYV"H.p'%s;c/MkMhdCVpsK(0Cl4NCRD\+_5JeZTo-D&ZlZ=k4Xf('@H2W
%(#'[nPZ&8A>DkiWOdJ[,%MO_9'L=LjX/&Y6=u1QM8=UZl,.,WLEHu<Y.pOkQN`E_p\.!u95;JZRJ5#$LWKK6^Bbk\9OG_8DQ,[dF
%6eoU/j\cY7?99G1Wh5Wj5\!FlS0V5T?TK)m&Ibi9/3t#UTIgP!@T%LXd>=$]n)VGuW^+ud;X<jJ+qN*^Kr>G:\8"2e[#gs2+=2bs
%#qgrl9TAm]IOTFG'Bb>6DSd[_>(mY8U'i6R/K&.dA5IJ#Q5U?8)"'dbU`X,UZBrfd2-;aC0hO<11pWm],"Nu0:Vq-R80eI0Q3O#q
%Wc\;@''Y)A0!5q2Ds%g+%p*PP,9XGBhrCDg,WoR@j[PqD*]+n=/QE,\\SR7;P0m-^0HPe,4&*pD@O=sf\fc\BC,Wn37)fZo$[j4t
%BD2g<&mG-uEp-'V95=\nOcRo:BpI'Y)!BhI'B#WX*u(5Gp`g6$SeY^3FAc)T#d@m':Er<#(!r<q50>)nAThEsKN<aS+%0FHK`N.]
%,itl3[TMAe1PUVpY+Qo"5g5PKP,c=%En(]iGf7X^$U^uo2(WYdo-bu@N&dsG=C]SG1BRD"$3D(R=I%"-#H-MBbD;p<N27;8q0#e9
%e6%^LMK3%!H\i\\Jr."$q?(?Dn`*aJ(H's'C$FLM?6VUfq[GTuIukpH=KcNLend!Z".WhXRH)63_c3D9Uprs)8@9b]0a\hdG#`$B
%*'1\0O_Vk":.X<%A\NT5l\ITGpf#s'".Tp]3X71V<.q;BE\\l;;POVMD\o39LBfLY;C2dL6,VCe00Wl:Ld?A35E-ro^^8/V^^]S'
%T_X<J0,ZOUn8#+p8YD*/cpk>+RBqeq;S9nE1%9M+cgAn>)641I4GnaY/Ws.,]/r9f5pA>F;6s6pVc["tdd\3!P8);3;ES)l+A3A0
%4Rh7!@$Ye(_Qd]U<[]mi@;^Z1el6FS/6f6lg+cr'apSo`QpntlWKIt?fU)K5,KIA3<D&Ks6A8QIX.V;Sd']*$#t$+,,N(/:dLQKb
%jRbtd%E#qXfY1l!K&/_be]A:/M+LIBI\[=BR;GjjdrVXtEhnn_`I]OmkTAGb-qQ\:SV]:cJ7?T]W0e$!o2`Z.]8e#uVQAl-2f:qG
%!+@K5dE$BpMl7<UH=AQi-b*t\%3T>)`Lo\$RIEZGZmI-!DBM)$,rL((i_&0n-t;8*0o)Ca3Gnpm$T#_o[R1$W9Y;M5)l`]YA0YN'
%TpXg:VhB1JaCY+[(10&C9VYm&$;q'I"/7;"Fnf#4**UIOP99AU?lNTk,*:;u+=d,;oT[0\Q(6>I_>Y(P(R-uf(q)_XHogU(So+G9
%2T^RSoDt%<0u-><gWJd6;rV587R`f3onn8IC63FG;5FprWI\3+Um%r`&WRI:-s%+K1?-BMTgCdr*8l(=6W0LeM1!ua"IX#_F(!Ef
%-R]C0#]$/:*7/q@eqKgE`DX$uA=G\FM*L)KKc(P<#NDP<9RR+GN>:b8A/1kFD+[bb-:o&/KU'`n4OS3MoDh5h7MH*+r"RpoSWJSg
%.?E+-n67S!"^dP_C86o!>ZuuU7gU64hBHi2q5IA36Ko=P27sLZ&VgOE<1mCG#c=FC8lD#JLD9e"EQTD$Aff0^fn@N'!_:'#jo"DJ
%8E"?G:(rtYreO#t7g8P4MGn?l@qW.eP2SOaX$AaCRj0,qH4N/mJn/[@"srUF85!K<R!#(O+"X04Q[5L5_Dt,e)]59.Okau/1*L%k
%AGqh+"fg;!mi(`*+R$kq:!Ogr$X+/e-fdug;3<B2pJ(cf'W[_.bc[3L%pe=gCn:$Ql\2`=U_AoS2pE"jUglrJ@$j^eR&PZB1":`<
%?W6GeM4AF8d'OD+?gZ!:)<Kek7D0U,*losbKH=?\#*Mq)MQ!E!P&l^)U];5Vm0u0%<X1+X#DrHe)^^XY\h\Nk?kW0TMelE^BNS\q
%O!?_=<j@`A!pImna=,`>KIKjd:IbI[a*>']8O3(3U6(cQ4r/]jL41%P>_].FE,4DG$RHIY3;gkYVuKGpJl/9!#WOb1=%j!@l=4=p
%IWb+(hRm<Z.Ub[;9/n2qjVA4LCK)d@B4VuPr(<k[b<:RF?6a.biW,['_m#ILPUBj3;Jk?`@i1bi1*WP0OoaK8?1S?WjoB\idQE(H
%DWR/o%<,WIDIj6^OuZ0e#$0DX$*%Ma8-9rCf4gJ+B8I5XXLJBF4"&Eg=/L\u#;m0FDkQ(M,ciM'iR1!.YP%;J:GGG:.]Dfd`0"o1
%I)ftlmsdn&[4oo]JqGHgZ:<eT4"hA0K*k,W!\7<5k"].qB'9LG1N.c7Z2.:<G6JQc;'bop:bp/I07F6]'f-b1lq4El7r,5o]nfU3
%nXqqAD;;!$;Qo#,:Jr_bKj4fpH@"Y=aHD8'JO]nORiLIe<ao%h]D/3b8ELe'7)A"RIMKYP82a2kN>LPCdm@g;&aSg'r"N/j6qe)]
%TF_tV"6a#GU$`^W)gr?T@k!EMNn\B^8M2UrqjD-G=u"fH]T#Z5E*.?3*>et@#3%.lD(&YGJfs+,nej+DWrA6,$mD_e!+Vbm_1q+&
%+KE>3(of:@al%rsA1<4HAD#"=K`jqE'4GXErglG3(Bd/F,KW*%hPGABBI`m4jbh*J+*j!*F:)An,4D[4WY+^/Z''F]Vnol@7mJD-
%@QEJO:KCqZfK);R(B.?F5kQpF>&fQf9TKDLIoA@M*&"h(&DGQC/%(A"(#5+]LgDkjeHlXTdb6%\&e(QJ?T)96Err2:#[\,oNRW<2
%'pt/a5]jh59cb!1%$Z4"p&].A<@W[C%HO:$"\MaB!N><t`3W3(G6W()lSAkk/g^U6Cm]g+lt'do6#e+3M+LdcE0c1I%A[8EdG?Y1
%#ee+j/h*\1o7(]^Yni\"0$4&1;7j\M8'ji;Q^&SnOiFtqn/"_Y*27,s4l%lq=EE1e!st`YL6_FppjsPH19(Au\\b04M?]/G=Knku
%&WBt'B'bqBRA"LDiJ+%%8)t5^fonmGfVoO(h-^Lo(H\q2Ks4F,_ci6R1mHu.FNgo[!qEAT*mg(&9L#<:#i$&*KC^Y7S`\0&X(-.L
%5b,5gTUT7YNhMV`&irK/oARcTKGda3e[m_'VJE7e1t!\*n'>XAKMDNbJ:8Cer6e9QHre6WF>KY/?n7p==D";_%llt8CnXh&_VLss
%M*AGBoa$Qa,=Y!hKp%FlU't(,aY6+R3?Q.9,DXptKk-0e`Dcl5R0Vs>iY9Ul`^q%)M*))(93Sftm`c*GN%fEJ<^UF\-2K\*^sOV-
%*bj57IC&"?hG9QXeOWN&/8e!e+Q4cbemRm,?OJ@=7R)Fj^jV!XBll[PLWpfBI]\`2YNc.[/*K/GPTa`Y8dmOo"N-I,$5tBX.G$t>
%q*@\>+dQn1q$,qLA[Nk[2TY7mKbffY$q>Xe"S!W#Que_KhfQ$F<RPt>J49ZH]hiK</YG"n'Jls%4:YcFLii)I$+29j=Xu?R]M$Y)
%613AR2:-c%5QVJ]Bk*_a?&8tZ,$>N00KBlL,[U8gT];CDVrSOC=V;^(k%;#AcKLok`?N-@T)cQDV6qT^egY^?GS>$`Mq(E#Ko,?j
%e\nD?U`oUFq,45pJ[257N-SSo.bO3\pq7;U2c0?>=7WT6)]p)W.Lb`+3q6=Xl%FJGKQnan8?u<%XfoW$$d9ruOHX'u$\iT[AR34%
%#c;P`VP.4TFEZYlK/XP0CddJ4H_Njr["=jD"=*clTPUXdN$QV02Qj<2%5((NoF#uA(8;!ILhuKnN3W'PdRKUeHNY_uWMEM!.AGg'
%d2?=+!?G$n`08kHQ(QcIH6\2PJR03RVm=%cEZchg<oe"7XA?n]R"o3s"i6EH"t(fR=HZE\3n&2QUob348:R)XL#"G.>RJnARD2kh
%(+TO&X?l3<h?j`b!A36_Z'",uehhs$2.NIu.NnqB.?3EDo3`]Z-^Adg,i\Jiku3q]<9>m+6iS9G2W,$40Dm?+(D$YMb`;0P3ZhlB
%Lj&lVJF8MgdqJPp.p;X8^X-=KAN_7p=;7V?&k=X^W7ErE0dfQ25q2RgD#@VdZpb0"!#Iup84u2UNT%fiUKl!Ar)g3Q9;WRBKi=b1
%<6GQs"G)D]4@b]N'Pn,I-Ch24.3Th:&K,F&T`uVa?n3F"Dd%kl"?mH&8#4^9/4Wt"D3?.eJRTpeUf+,pPRnB1cY.WjX-mE"r[34a
%d$-79F=-XS/?.V=OSa^;"2G(PgJL9MBIBm"r1urC0Z*/.)*p#hH3J'8=D!En%8_[6rQq7tZ]iUM5mi-oZ:lkt]X+A$Fu4RdeJ9P(
%!Hk1A&3>>0RoV7$R*qLXV?"4;<ar/\h67&,F%Bm&o9JlKA:4e.iOL2;Gq4:p!T[t`(ra'tR599^-lF.i!(&W7";;"XAh6A?$l(dU
%jF%YrE@5kod8p0gk&..#=%J`u_1^6lKG2V"W*&^Ya=pE4:"2a@&[?.tm3Er<m6o\9JVIfNSMV+ZOt-Yq$TK?C38f,sDlg0FSJ5!9
%W<sH^*]aE%-'^5=U-Kk8/hc'rO[lP+f41/_D=3L00$PWoLg3(XB'm6iWq773jGb?G&UkJ?:_Lc'DT>`glsQFt&[%u!)2arC88@VR
%kRo*H"u?]b,6\o3`=.shpC%KLKntel;S*V(,3V36\<H[cTe!Zb:6S%biE+'RV?X5Jp&7JSIV\OU':0WI<T%&dXlM(M&5]PD:f)ZM
%W[2Xf@pgSpl4pp(I8.em2CtA8KkB>WfU.ghM@_Op]k$hj!="nl@87:F.%nNrCB+WcaP8gW!RE#s^aO;S$.:_'W@3#fb7,@EfhTNG
%)2HrmP-r)?#sgnt9Tj^8`n0NP=hhm1>bg@i/7_)S`P<8gV7qS$C@M8o((PdN7SKpnK1HKUOg%N?gs$c^'?&ih@K&X;OV_[WZ=+Eo
%U(Ig1*e0Rn]hlKJ_3GefJ39_9#)M5[b**O.H@^7&;+G$8P(h:1AOZ/V4dLVga$O7a^J^4^)1rE*K":N=E8XUp?cK"s:/0.h,seH7
%>)2Nt;N3d))htUraWSLcRSO9A810C`K\DU@]%Ku[78H$]B>(fli2jCSAgEC\k]*-g_S&mlAu5q<:lJkpUmXm!>I'UV#tqp*OuS*q
%O.9cm:+*\Y/Dm<-2D6@)/\l4&!1FJ^$\b:BfssD$GmoYY(1;e2i>6eEcrfRtYQ@=9I4OQ=E64bY816=Rl9Op&/HIpI8i#NM>,ao%
%]Nf%R`D[pol<EmQ*)c+0cnr"F^#G?_OK%_*=d3:9W&q*3,\Sus^Olfi%J!F&LfA+_^o,Yl=K;OdAP5]-A1:!MckH7/i%;Jtoeh*/
%O&\4NT!.3d$74Sq_emSGF]t?h.HphHPj;Q.6J3"kk&SA""Y9tcSoMIe0\hPJ*[JKp"(dIn</;4*@VsOuq5>a!3poSd@N:N*Q&h>p
%nkQER<'mN+E+d/,CbGrT7"@*tK83Z:USinngAuGPln=ImHPjZF8s@m5S/[GR9/AuHD(I?,;(sDe6-fTmWl8Yi$&YNbnh\6[*B$VX
%VsSfm'hDKlO5-7#W1C?q:LGiW('`gA9Q]5m4DGRoOIQ^jXa9l-&i$aZ'.R\#\:SS$A(8T]LCh?sIV8$M1]h-6aN2p>Kd9gU&9At-
%>nc`7i5s?gb_F.L[<<+a_@[j%0YDCYH/[b)[0l[3MqhHu^;1McR6U11R6k+KNQ<"Xae9B_(@/,[5@)rc=9'MSc^b3<\]Y;R!K$"U
%.g9UL!>oU:$dR-F02PBsW,j/kidOcGgdp!)1T@l=Oi&B=(7eLL,/U,1?%YIM!7l/OZY\>&kp01s);p)?NO9)bW=l&(X-87M+<ti!
%%G@SkGVOd=_brSHhGst/":@\JB-cphL_)%"R4/MjPtYK^Z%l>;iYbksL*WqsqP6Md^e9cR@7?&bcA0!$291K2E$8nVR/SPIP_"*)
%4sgQV;PV"6MHSSs!dLFkRSHGlC*?=Zg'biuTi?8]'D830;Q3=GqkfRQ:jVE-Vk;MV,Y;KT2eZ3:<7.$#M@PB.Wk%FP8X1%2KL7[b
%m6DnjE,/IJEVc7iM6s?"Zlm.15jC>^]biAP2IcC+^opI_77^Rc`E4[O?UuHIUXSQOhj=F1JbZ<FVta,J(^J;J,g0*6.O^bEE$/0d
%(W;/tgIQYO?@iIu8_I\Y;G&`F=F;[rTI![Mj>KOiW`8,rE22"d1CQ\2B>o'I%!ptSTVL14[^Bb5=sF[>R.,PCC8?nLA0^.XA0e's
%)iGX/p`r+\8a`&?)>0@T;IJioFrG^p(qF1@9s]t/+9pKL8kk+)\1BYDM85CI=@M`Hn.JLC;F8L5KWHRNb=l.KP0GFpP[:d5"H?1q
%@,NW#oqeM1$-'I,bGk!A1^#:Gkrp#I$9&Ss-NSdb:,#,&A9[)oA4[k,K#L6b%Z&Q5cp:*--:1\Y!d)?-Tjb#l2d1oTl8+!9"<lG?
%N]VQbR;thdopT;b1-Fj+.+gLu@7og#<$q\l66;!dZYiL59[U1?f,LV+#dVr6i(3BlJ;kH0(+)bVFd'&-l%=%N['PA:_u)$T2SLP+
%70&Vrc`L3.)^=69;J:b,QC4A)XD2'3oTr\-3c"E)L(M<pbN;Iu08=:.0b,`bk(tjc'+WQiPn?QhVU_-Dn0ld93a+@6C?is`L\Qe'
%;RKEI,ntBbKXTgX&UmA\iLMbNd[WoV*8LIn%"Mn\XtEp,-kUcG7`\t_q\Jb-HCkGS"R?o;QgFq6%0X-'QZnBS,>Qbrak%YeckriZ
%7cM)=I0u\cK!A"<7KAmq\5#mFC?/I[HlXmO]nD2Gnf'P7@tu:3o"Ra(1^l;f/I=(Ai[+7@$^UmNN$=,IMtRh`7qCa#<KkiK=KY@C
%aZ!03oS%B5=dj'LSWZl/MC-[@J[l%;#"!@A;4'IpY3tpOda9afihM9YP]7Qo+\)eT0`Z5ZcZtH9ML&J8Wj&ZN_41q](rB7pYX_H>
%g\`8*pbf$bm[hbS=fmX50-(^O?F5-'.7G#iP5WX`'l#!maXMgW<:ZrNElJBa0e=I"[Cl?VV]Z#+RBm4$(dSRGWlL<4L_6>KFtN%K
%;P=i$O`)OWM>(P.0Z3h]MD+5l%-hQHV%@`(nE0tMHJI-L+4cq:9m:OC5,"XH,!=\`(_6X6lAlNK*eW]LZ7W_4nF$P0F6!ordDcoY
%4N'1IlAj*;hC;`2--.l5TcqV8O<4unF2X(jr-6;]$+B6cnR/.rV-3'9nSmcj-M4*XM's]gKcDbo)f0jMU(g/.Wml9ZGV"$VN5s(;
%nobd\]V_UFCK@t7`0]\6.QmVi7c)4N$I@.B1Fl.Dohu20*fh\N@3R<,6Hs&=)Y)aZlV\%^1jB;T,+!c&Jk(1!m<TC-(fA#R4U3$@
%Ua);hO96#[0*c6X6@kKl1%aIa)=XAd(KCN!_YiDN;Y]^*.g5A9M#Im!M)V$CIM\E7)gh-;<4.oMD9.,Q`SdFfhiWm;XD3IbN_Tgt
%<g`@>0N5t=7eDKP!opTUh@VfrYHZmFO^t\mo%k8:`H7Q0Gjc(#5igWM]QXSBYbC;7]QXSQ_qoSf]Q_I(pi!"BK6AO!on`8n=\2u"
%Uj'pQ4_*Td6bN`HLPCb3$#>Ce`(G8EF=,d\Pj]*k,h1"sl0`Me5`&u^]>GA^"X@4p]-FSJ2V^ZWZ&/uLXMT)b)FaFP/(GZK2<b<8
%9QqKa#n^c#7!HXML@ZS9SO")*Y4k8)B+VnfBu"hW0BA#@0k.^]K+XplL$=WHJTQIcF>o9iRI3IZgRdYi+%Mpj_I."MP*GAheXZ`^
%-`A0a#K_CEeQKEMHHD!0:;d9d(UcE6L!m-HG%Z==be*P0m1*$f+>.b[#*u'k^8JSq6o#lSFEdPjOAsV"G@q2%hmsQ64,AT"W6j?<
%J0)3;HbMR/Y'X'm%JfE#r1=8P=2$bh/?tM9o%a=0$0a]b\iTmUGuD0f\i[\q#ruVV]//Nq+qNRmmg_$M6H5pFG8+utQ0f&GA1I;?
%m1'+j"AZ(@G6Zu%N.6lOmL2a9H+-hc4%%Et3,&cVS\^Qq$(te>4%"Hf'7.5O;]n%Lh&Rb4q<rX<4-X.e8%u4`&_2g+KL<106fp\5
%R)4#:F>oB8't-3TLk'8Nb]\aq.l'sPfps;00KD(WmLCCA_V:.8mXY*[';9MlKV3*Jm-3pD*J\sq1#8BDnN>a+$f.@n`7d!tFE`K8
%V9\^TGK+>/9;T7Q`/AtM89\]<!gQ)JGK6)Wodaj&W%N*S`EnLr54e1mgDut!al>6f]-AL'W@!ksNnB3tQ5$bhO]\qVG:-i\e<TI)
%Dl_7@a\-,8(TKnS[\1#E]">Z]L"oFL3Y7hR,>uL2R</cE5%_Fe(o*F_mERE<5p@[f]>Mk">gXe)47"]<2-74JeA"P&\?apnia]e=
%)R8*A'3SSpL$]@P*"l'tCj21_W9D9<GCYB&?*ZWJ*O$BKhH\_$"AH+*A\01SUp0#rI2=$]`'[\[mL1Uh6<p4r1X;sQYL))k@_/H&
%l0\sQ@;,*>l0a)A,m4I,mZ&E%"OA"6h#W[)E4u_9SOi6XTtBW?3hj4g&;9Nf(:lT#[7Ncfd+q">$<lnSmLG+WQo5<-*V:DPAB&_8
%35*Bm=6],]0gsd!Vn4a<"q>:#m`s28TjU>XK#:0s_Q4@**Mej4<VZ"W*(*#GmgeLpd4*+`G<"ag.(&L")/kGb<Vc'A=0B+hZ&g+P
%;[bhH*G:Oh?A7jn&CA!C.suP;s5\X0I!7QMA\!lsmL4.1a^eHImU5`JAjmKL3s-/OktcZ?3s7?Cf<a967mPiY6aAf/aI,n*\F+;J
%8=CG^BXbF6)ON8.S^:HG4jb8e5`C^8Gj\tg`R_3=gi:$<fX'AL+Rl8k\;R'Me.!kpO>;TSQHF0%RTGY:'nSLaMl_FMn_53t_Rf5'
%DeC!X/\i;cU:5cB$29_A%MD.CnNq/,R^/n^oQCd-hPgjqSO!NIaOc.&%K[e0+48hO65TeVluoTp8.8\Cm:ars1JZ86#J<L$GZAdr
%:dXW)ghuKtJ"(*3SI=Y#f:`L0k-fnB9M31EA-Xnh=I"5)X"!H]Z8h3Ei/$G:UiIZ`D9k9k^LT4sOJ!)eBY/:*_kN7=J?,\BR$!.k
%@/NrTWqjI]-uf,TXS)2aLNHl2kTiHWYX1LZ*HCc]6]&s%B?<`><AZO]OQ=K'Q4^GD@@IJ6G*[]W@!Z9D6Ma$(N/?q0Dg"7E$F(W:
%aFpju&DP$E%?:`d6Xi-/581t'H0l_N"Hjq3S`uA@Yqk(=(u"VpG,DKWO*U-^aX"-kb]_3/%'a3lFn2dgbT/FmZ*5hbh_X!n6F1^l
%$'lp@mL2UHc6&i<Z?E_hgDRFngdEHs1CW`[/%g%[5puq#'etB-2A70%]QSO]G'W2W_Z`@4\I5U3+l.^-/%g&0n3!rPCCQCL%Z,6W
%]QT%O$F-M:ULaH>YL;,*<&[U+>G8G\--O'Og)2(cZs?ICB0r@bPTs?nM!=f8[!%PlT%]de%MAeC(t%'RZlgJ_V6tqD$Z)'Yc4L#S
%9B2HG^6AjiTsZ\8U)CR0CBs`2_^nDq#Dj#o1SqK(FtMj&9P\:VkggNr;%*c1Q\$6ag;-k-G^a53UTR!.<b8[k?,6T;0s-ui>]nZl
%ZuuWj"@fXlM1H%kfD'6URVNff?`U8OO9ch$@C7o0Kl-2aWuYP>7\7J38#qF?;2*QG&>RgXOP6D+P1!6!m0(+g+fccc*Q5fS>Y+7<
%IYME88aRp?oOcL7g6kPY?:aI&j(Imh-+0LL^boh[e./pk\;CZn*KIBWOE42hm0r7<gD*IF8A,<mV4Fk:ip%EK$isI)=CJQm7'M]c
%B=,SNS(+f.UE)DL#`IK"d>h[Nk/(e%$&R":UE(YODc[eC?reYU2!+?c))U`;r%hljK:!hG8nhq.HMK(fSH0`cZ].G=G(p$T(j\e9
%>X)A_=#o[C$rA+fS9>,4M']?nOYOMd.H?qnhkee2\.PPX/dIP";^h$lGER/Q.I@Ne3hoiO[);P`T/HdL4)AXBPeSrP*Q1:,=D7)p
%&#)uTGd@*0PmFk]Lt3&F%5066*@/LL?>/^3b05CZLt<,D9mlKJCPRqT$@^37a6Sl>oEYB3Yfr><)We@o>6N4jdFr"/3mU29V7!(U
%,S4=V[54Mp["l#3OERnnH<NCM*VQ:P4<,3&*0Jr`W=uj08aQeecXc#IW>uI+jp+ma4*o1C2-NQ<$o<1(>p6TXb.]#8@Ni.sp^5L0
%Lt'_WKdO"-g>SrmCfaa+i5Hpln<h`9?`isE8o"YG"*)<q@QP_GY[N7<c6S+]XMf9M0u2>A'&17Zn4dk3@QW3gOm9.^gVMbp"D*;>
%NdMLnaVtiHYnhu6@"m5CYK2(%>p6YO,EN=9L"ME5'LD'K=RsJ@dbkrSgVMgR"Ni75G&ZW+/?0?;Yr855j!/"p<:]YO?&@t,Nf!j_
%?A7%WZ?TCp?9PP6]MJ/q(LB0;SWg7O'&/O=U'8m&LtE2HnQ6T>4$ttbc0n&t(nk]u2QSUed1H$.ouqT6Z#CM+AiiA!5$2\IAik!a
%&[>*!m7?2$FZj3B,8;bu`s]3oh1G8$'kTPEO11Ps>1#(_B!c*`/Bi:!&07Z(gI^'\h1%e(43R1#%"L+f&_I,,?t3e1iZoAC)&3ef
%6c[M)b]]M(dc6@Tm7?aZ]=)@\A$J,Ic%t$_j^[.)D9m#g"JMK2R=YR%O9k[S7a-$D+<l8B@C@E+(WfkhZQ50eV"l1?*GHA3-!I87
%=K=eIp;1[%mta;?397MX]j#,rC-*ti_.O`bgQ@tYo2DUT7+/Z<g5\B4acP5::d+qCWml2[+VW/(+gi?/M%k3WCkq@u@JVP!Ft=8h
%]A&G#%^R=iZ7t#>[7KS/Aii,-4Z=^r6TTQ>hd[h<j%K3<o%G78?8fcYf8eBp1k,k9*T=HkN\A=oA=DL7N0s!gi_#0W_JD_TEM]J6
%<M*C8i]Rod45Me%!?NVW=&Q*pD`tM!>X2FUUXXI_ZXHa5Tsc1;!Rn&=e947I-nNeu3CM4s<lQW"S^:khDM?jU+=O=rWT84h[FGcN
%m8j/e[s:Bu\V?,0?G(uPkj=26`Ej@,3uM"6AYlkg??C$=--IV[#n`BU$G.<-N+i))Fup<K&P[F:Db!h98Z5R63th"X;@:l$@uou>
%&\T4Rd[g7%R')FL^MX(K[p/=cr=A0<V74VinsB9hTDm[Fn<]%LqKiPN"@%9RH1=o&d<4m,P:%hE>5jaNBCIPrIdk<lr`bP841]b8
%k#H9aUG%qJ0(a(?Y5-P%c/R1_5A1hirVGIXDa408/3\KA^D`fl>C?/arq:j5TDgpqIU2`fkDTB<Y@d;Ks6dM&5Q'G2$_LN/'B-V'
%%CR#;d[sJ!p$gffa02+rg<+oW^l.;anp=1rOtU&\*.=f=q+5TH:nXN9V#brT]HI^m%#+l&)sD;'NJm6hh=;lgd8@+l7pl&9b""?Z
%r9u4$WUfnL_*@01omF.rQ#CsVP<h.?7HGKF6N/jSrg"apTDV(.6s`CD'esR%QmjQ)gq6O(ho68Y,5[0bT''TDL;-$2s7=[XYXMYu
%GeU$9LK[!'pbhoOdOp').(?b`[@rk[nm3qSn0eY)XKpcamh]a!>N*R>FZ,0o$f.1%CM"-==S[\$f5CqHCtm.\13@S$?!:8f+>,Ma
%U<Xf_B_iTH4rE.aO7?+.\FqX,f8fq9=Z:^L_G5t9>GP">AF>G1j,`Hd2gnA__T0'F;7V.7&Sn2/bA_Gc\%!]+5%"?0_XYZGq:`lB
%?G2>!HS7$H4^XI9M+6FH4#)r\@gkl.mu>J]X`Rmgn%.ufEH,uG^3m2Y(`Hf@<]C'P"2Zn(SIgf22@e8d("'RB5P<(5##Tk:jA5TD
%N@hN4j%)UOlgI'mo'7iVp#-/UTh=Bpe48)G+6&KoUJ2U8AD\:UU0bB/'ss.O\b]]rf;JLq_Y/QBGM]f,6n<+98XN^t>NM@."up'R
%DHfR#o`+[E#M#+X/=6D4IEQ3/#):UW%VIKhIs\,>_aruqLQb4?]O)YU?5:#N(s:<-[/P/\`$":Dl$P$(XUZ`ZD"(lf7C8b*04r"'
%gI9u.4e0?<N;pOjLV/OVC)ZogDuT]RIm#s<9mufQa7[b4]g)MaoB0Ic^0'sPA#oN^J,3^Gd6Gt'0(M4jaWGbMqW$>rjVsZCfsndX
%?@Ctse`kbFX/0&+m,I'??X3@*M#Y'cmIcYBpeb?Gs"_)[$m5?-q!>+HokJdKe#VddcU"K"Z2=de_*@Ce4&\33cO'RFkC.X6[g?@8
%D0K9qr:.Og-eCkTD_GGX:HZ5D2WB?1^#T\!a2R<9RgFK^4h[n&:>7hET"_^`25*\>go`^0l/.!co^)7OiucM4>rmBgTg*eccdTUQ
%hfN?!ZjF4&_N2`UQ@HSOrm0?\`Q=AC\FTR#-MmT+eW71`mV;R[mF`2-?QS!&GO4^F\TiK#jiR2c0?Yf5AbbaIVs*MN?7*kM4"%eS
%[9L'/STO)Tnsesol]Z1#E6t.7I.#b<ZUp?<H?u<kg"$7H;\*b1^6[[52JIdS^NglD1.C)*^:cR1rpB"GorHQ*#tMeMPU#*qhppNH
%`A[ZLmYBV(8%+HMTGs6$QWM5ZQWFjsdQb>'rUT=Gr:T0@e*C`&jak-tB&r>$nF:/7Q]"Z%X5)RfKBB5iI$L2)Enda;I_Nr^:FFq1
%kF:6jguKf`eq:TV]t?DOT5aMCjlr91/iV\Lk.BDrQ^dGao3H6c60]QB?1*Pt"LkpUS_3Q2gpDcX3&dD'jY+f`DdFI!\GUIZ?'V1W
%f=sgpn5$P,]X`L]g%(J.c$l6lAI]g><PNuFHb8[@qOKRS?!78Y4+@(hc0=c;dIuGa\(s/T\\4AN7_RI5+Z6),;i[dm4$9:8D3)B^
%?C*<P^0+e"YT"'sYCF[.*TSiFOP96emFBD?PN=_Na(J<j1?6E![G9&8iZh+djRV[.lJI&=[J`9I3^8+`ejk"'<XHOA)fK%9:VM4g
%D;Q>-f62bjND@5O42-#aH1C%npgQk!epk!3r\`.dpm6KE^:[S)WIt.F%eRW#0?$XA@>t20_P$hq%e'+";D7b"6Xcid`cN<A/o?QN
%/l+.'T25&trV>D9iu?gSch2ZK8>Bhg_6`l+kT)f+mr_<3^R*ZJh0JE(jk)L$0YpT_H-0apH&$`X_U8)K2@%=%%t:\kk+CIo5.LQ_
%LMcu0otg"k*-jY4niNB2H[d@`?_(N<3aZ2hR@&Uf)p_9_^H+R7H:+25a2>Omho4&k(IbXQ$2o6sp!XNuH'$V&oSrQ(kMnkC@a=P4
%Z[=Ymd3eKthd'oZVI\#:I,:']%J.)-R@[\jSfM)gQiB,jD"lTRR*="cL##hN02CD"=g$l&h;1"2930W%e$J'`U#gp<R8''9K8I]F
%=_.9.59A&*]Y&RhlLO<4V[4a=*aV2TQPu?Yf:FIqa&E7&V:'!W?@U1!kV;.]4p%;Jj+NfIiU$"R<,"JE#!_#sfLaPrmi/$i@U:'g
%FoRM$/B:-2oFl8JkLtB4a88`g^UG0I:_''!#:S5jh_JGE;en%0>BKB`NmUE[A,il)I[mXD%d(^"d[@^\X.=@llNuOcB<R=K/s^/-
%/C0V0e,1f`5M9':5+N66]R0\0J$S+`k-NMqYKr5)QKQGLld(W!+68R5/BWGXCO\195MeT%r8SL'V`_K@8n@BdV[77>K2Lsta18_e
%iV8&8/kh\$6a<S^TkO/kRq?<Jp"Q:Qf_;L3V3pltnNJ;p57U/::$Kls:J[C?:j$o+4scDMO6p[7-VWXpjcjiMEd)qF[TR',+##[B
%VYGW%\Qs@>m.=b44<]LXjS8*&o?/S^^k5.$[`0Z<c\j6.61WO.\oG.=*U*42*5?`<H@>Y5Pf`/3h,UY=c[J%VD8HG;6g+=@C?"b/
%:[Y5U0.3Vn^-"P?S!N>c[_'gi>[C*,Eo;IsHUD8cB[I81hGq$3=E27HQ'[!:DVX*dnaeiU=WCe=SkkfA5<mX649Ap!-Y^jofo$6l
%a^`I]RF7KjEF0])-H`,uf_:BqW$qgE*`FQ2'L8i^(M3?dj[Yl"11`rrb0b:g\L8+bb6,jTGn^MJUn+dj\L8hd.2QPfBBEH`3>^e<
%3,K^J/rFobE`"/4OhEuMk$4-6]e3!HR7"6X%m:_?dTl/9<e%3]-mt')(M-3O%V=8LB9_NiF)!&HjW1_J0'Df0_=K!bGg/$aG_d;o
%1D(/o'taBq7tk=Fl/.!cN-Hg:gp;e"&C7O/*kt'.qKZo8fFNu<ZW"hh2jB_5YMDXN`EBB=(kPnoc$F6XCBpQbrc48MZahu`C\t3a
%Q<9rh<h$MNh6bmPXNec=XOUpbp/n]U0I$/,%cZ7?2C&rji:ht:%k7Q=Dkjp_UNYK`'8BoO7e8MVXdRNe_Lu_nl1ESk&eYGqm`H`#
%5Br?s$N02]T?FREcAmDO@0\ZNqmMed04$2:SmH6rWZ5S:]j;aeIl7V)@dr`eVYUm5TtGX[1mHb,F&5seB$(8$?mn,%eKY2a\QYS3
%DB8Zn$tV*-:i8(XmM-%>2em8>5-`ALK`'`P,6.Zjq9Skd5KWr0GaKD9h;(?aK(uWiVU=EJ.f9B$]"?)1SO>;`0M22k](8+_naH'k
%m/,q[F7a/7CWa*rq)nkAG#RpNH2d[29tlC4q0&7!qORJ!Q\s^(l.nX?JI-e"T;V%CT6IeR-9*Q+hA0$.otg+DFIpj7D5g4(5.LQ_
%LMcu0ot_W*Xu_ZnEO):QpLiOVe`lb-oB#Y0U]+ZIa9McRHk_@s+U0.Y34Et*hd#D)a+*:Imp19#MZ<)EG];Qknf7ZmK_Y#2jMI;E
%^Y:h,a+#1AU?;7>*<4i;r0PtZ,/CY_A>1A1a*dX2't!.aXZ>N*a*d';n"&jo$!-<TbEm/)/>$3SA<Z.bar4L]`QkRQW>k#iM*UO)
%Vg$[lhj.nfQbVD6[Bn>S?<u_!St#d]F@,FsJ$:`0@=ftYHhB/O6`//`q!gN!IJ\KAlLoZpLXP6)boX1D6T0;4*p0Pql!e99g$BlO
%4_/%s2o1/1HoIHqoUl&'[9R$cP-)[a-i"lKrTWm:?VW9#QIha6/RNmGH$+M>26K+>cZT?"1VoQk4Ni5Dk\hA%]<aja:$C'rs.5gs
%^#$cT2qhU"aW8!-5!,Sci]4Bf:30>tPDdG%<GMiMm'AHn`4cI44!41Mq=*P>ng#/#<tA=lYbUi@$*-gJIKrC0qG6g2>Nsc=je&`_
%21)52p-4rc0=0\MG.c%ZQeCma4'lO>bNsJap"4tf73!uGKq\NXG.d23%<Qd+gr8fh48n\onpL/NJb4q.GRiG[FJh4uhKpLh>=IqS
%6^r=>QdIECdp[l'9E>Ed_'\lN&,Qhp0a07@hn^W\)tV&@`4Gn3(EY6W`7aDJ=3%4CrU'48\Anqn4rj<,*qoPOHjiP>e+M5IT8Rp+
%!RGE=Y1MHf_">,JR-lZ31]#OY^9jqPqVL-EIIlb!`T=9Z8^1bGb+F2F2-8o.NCe*Yjm3Y:,%#08Tqb#QJ*q2g:$KOu[T,MuhqMZ0
%[FaN`QZ&2AfF:p*(DBg>U$_Y/fuNjW%e)*Wq`$52q_g5@(^<!j8XXL1LN#U:Y5+F==6Q^H[*56?i3#hf-RMONc4gq,LDJCH:/%pd
%G%a4U+'3sPVehu4:L?dfHdq5%n&Lg3Q62M:,L1as"1lr$]H8@]!^F\h50SJ7]tNYOg7Fr8(pb;ohe$KoA'BC\"7]m6+4j6Bd&rEW
%V("S$qq9(SVnVLEXmtWY>`g+hh^neR[JZZ+bDVQ5#3X/#]B\.m"=M']!k>dcHiE-Kp$j]!MPu:@n#B;>YE&3%S:,C&3i0b\IWoSJ
%C@aN=1\g,/o_N*fZYedk^iSD)SkYZVdF8!*UE7&$J':/F;\"GH=-r)KX;*q-]:M](1V(5iU.m7af8E.UQ8F4?D=,[YQLl:521m42
%\ENVd/8<61j'K!RG3Ae6$Z+0W3I\\jHhHFRZTQfoknKXuL$niWHNlXDYqMlh[9^@YmoJL,4%cDq1*0H4f9FSIH+MUl0$MFDHf0=E
%[WN'-frI&"Ib7^$ruQHOR]"EjFiIeOWI@8'p^+Jk#Nq)]^?o)Xqr7Xgd20Pjqt.\mEmrOTI%-UDF7X6d^<Q&c<G9+kc*t7Z2L"1u
%DSeR!n_`IUi"4,!\UD!39phl3]?JO!<V(?N?PUJ+SXZg(o6"q8YB/Z"?0@fH7rY/keqs2p[guQO8_`EIY&s\`H26HtX5bYla()m1
%4Z6o/$(%5$OC@m-dtn8##=8N:n@0)e53@eSEIbP347(b_;-ru!OKfaCi)qu!KSoQ^IQT\Uq>$5.Lb<$VT:B6fp2?/-eShU?4.G4V
%eE;"_mNs\A+3Zp;fUkOa7XrCo431\aFWqmeWUl^.3=f_n%S!M4+jf8Ua/.N34^XfO;*MV)+J8Cm>JfYYG.$6T1JiL@E]hIf)*P[6
%?N'_8&e`$Kd[`V5kmSMSDY47HlJI7gOuI<_?65^iVbZ"AnbE7`]=K_bTCu[<V<NrNO5/\7-QimNcgos?\q^O:md(3u'@b.os.5gs
%SJ7]q:[Y5I<73kDjEW0Fl*F=B#g]D;QiHuF+$q:C>S"Z'[,tuD@($JeW,(k?d!IIt_1YHLl1c:e8F&Ln=oTfgqW2Mmo$>pS(X"m_
%YlDg]'[9+p!uaV79m#hGnr<(rK/SVTa;_nWBC).d]]U@6#<.6HBD9#5c%L`Ik:%A4k8iuW.=Khaf,s\%mrok^J]!HCi:d"JnFO)$
%7XZu&5"cqmId;)?mf&i:a&f1jYKiJuBGV0DHosL(rp'9#lP4G(*;<R/c%k>.beq.:N`5(Kh[dclH>;op`B2q,kHf1.fA(_"2BJRt
%GpXKc=/4qePl0Laa+Ji[6*?$a7D\qiiFQrH9f^:&o?@"g!u&qp7/+!P(6/<+e"<Z$p)2p5VbCEBn.7G9hB-$QbJ/LI6Pe8sCA7>[
%gtW#LPe3s2h;7MD0!@IRWFPh--6AMipK/S&*kih9Q[@rS0f#=_#*=ck'CJJ>O-9$P?Da98kK?)g*d3m^s+!B^mU2hRb,'7]_3.<T
%@#%P[B'J%T6_o/FJW^,&S%Vl0AdUWr6/'f*M4.78G\F_Qi!ntlFKf5VIJ7c-p".Zn#BJrH@Sk]0-FioUO+08rrqf[pj65`5br.fG
%EOiUYqY&q0l[r.]:YS=ER$ZLb/@3)3jt\a!1-;:3G-o`Z&70?Q')_.In\pua;j\9mE6[:bWnD_DmEW*^Zf>O3.o)sU\!H[QqUdVd
%9R6O-ltjDp]^'m7;_0";`U\Soi/T'Rs75F3:%Q80/m_L4,g$0V5C@HrnPsI\(dh(uI^K%;oO@SK++E^uld?:CnXJF]J%Rnehiao8
%o%1kPjicsSIFp)7rU>GOn_LAjIdjfD?aKM?s&H@S^AA@hqnMr&s.*`9/kiVHI.<j/eLY%f?[qhCLEAWmPA?f%`jCZ4CX(>d3jUfD
%4SYhZD7Y9\$Y+LOjP^fE`n5E$@;6_T[)%qRCn[3Mk,E9^>7?rpNUsR2ndW9/=tnd]cIjn#\-X+Cm=jS=..YajQY&`n>9AW5++A2$
%,6h!DF7]eil(``5@*W+1I_%RhELLaVL!<-fPNHT.R)[iKo@/J)4,]&ur,n"fF>i3pO7M?mqp["^q"H/t0DYi,)LQ>g=H)Y,-r7fT
%I)42BVtXOQ`VK>\-GITU?ip=8RUkF[*t]_^,5BN,$%M/Je)Cnc[Q^(tGK6I]kK#R[XQLb7:%ABH"u2F!o041,rE*/kr0`Lg/E<*f
%]^m9u#0l;H[C+](Ltc>GH&9$`N1\@1Bt`%@>lB=^558H$Fk!\h;904E("<*6l6qAF.-7nK2M?W$Ds[aID9[rSjU8[dG?bPfCTpgA
%^^Yp,L+VID*,V;+dDL7;Y;][=CD.H6^ULR2lIbq]4PMVPcad<\ocG9)n.422hnAgSK=L^?:Q+]@A$_+TlSDOGpjbK=NH=lnnC5'.
%k_P_@P4Q-)o)+>ipagcH%rh:DA+O;7OYqT`#ZRCN-=R!qBWT>!ZDES&I<Y!TCIbDCa1Rgf4+908R;mu1OOq0;ZIHI`D,pmdQ['Kt
%e+O0]$.<j=g:AU^UtMh/_JNN;Uu.d7_00[BlJ?Ja[cbbGHfd%=:Qt+SOd`?_];uu3\o!UBf;CqMi[,rgrL^BU0hl;RkFUc6jWCj4
%"hKBL<`Pg7A(e;1nKb]ICJEC&0i*ML_sdf4c*,V\FC!I>q6*po]#HD;bGuf4[1@O(T(k2SU@F_&RlfU3(JL=5/*7lpS\4iHO/BY#
%mBV2L:!Ae5o'r&ZK^Z$8r#Zcik%P_Sd-H$fo24olT7;Y3PP'UTT@\6lM_h$T4TZYT3dc,=5jW$<j/hRVD_R#n(h>:q[_[&Eq&@"?
%7AnX0QM[5.N.[8mfQqH+]T0X-eHdXh`>)WqDY;sj+3raVnpc^S>b5f?)=#*-\u1PTfS>i,Xbk\@?-)=r8.._0RtW2-\$i;;*/=Pb
%9qD\5K(q%sZnk!Y^5[-;E>VJh=Pn/=#A;eW$Tsn5Y"<niS'L+iZF7R?iU??u5OhkY(n^g>mF)d?epV#]Vj;*P&%KfH@k\MO4q7=@
%Q3H^I:I6+MT?#-c\G<VBI2\T2mFc&Ncp]Gmr#O[A2#4gZr^F&]\OHdB[(u_'LO:bc*oFX0jbH;WE1""j'3p%E?G'CQH$0%2\N&aU
%j3MrYf(0DV%hH9]f5<WAf(KMGh@F2.fK@RVCn-j&S$HaSH1#1`_oh)(<MO1Kh;BR@PA).=SXb2mOr6Imdknk!Z7.G*Z1%5n1mV=a
%4gcW%?'cYX1IZT`eFH;S576!=*Gdd/^Ru>%.VhT(k^huG9?e(&]R;go->El2PYHr)f6?ei8R5F,L,Lu[45?9eYb-[iG$W9sB<j.G
%*HtdqENP")SN"2ggN5F#ZggQ)/B;NiM4HSNoJ%H8WBP+1a#)pimU<))cWR@AM!Ygr)gR`-r=g.pRi72qnl04Za`H^]j'.SA^,9i8
%2XnpdH->CN>!#T!fbjOAmae^5P[mo<0J68.G$T#A,`t;uPrI7mP6HB0SBG^kGO[S:?;uROY(,X+>7?_nT+:V#]^DK"=-cReE6t7,
%0!`c<b$AHRAuq-mSDWg,d#YuD9PNd*>>lMKPHTLP'>.JIIe4mm<:`TCikRQoFS+h>akQEj0<b8kS#TS/2*LBt?,Mqn/Vn5IipF#<
%9\(<\6f&.F.)h5;Te.@/]P1Z_<E&U=jo1Bbgi2)V!u#mgrliW-RMQpsfe1SiEZe`h::Unkj.JTsKGh@a7[M]rXgc&!]$Ycp\'B.R
%Y5KYjZ[C9J`O:eo`Q(K8QY3ZG_H3Z8>b6AO]R%+N\JD*qs#If<EOKaLCi1cqAr-?Lq"f;^Fn,.qVpdTV<ud9>Mbc%A2(l2CcMqN$
%Qf?%m09=GTp]pg]C81Uflr9(So-")#lL`'q>Q1MEf_$$^-MZkPn>^*I_>;L^ij!u[Hhp("]sj#Sr8Qo9AfZc/pj93?q@Y`t(I*EH
%k4E3X/C'j+fs<Yb(>gXgiWdGth;DDB>9&RpTH&kag>Z4^&AOt>_u5IpqY+s&Rc<4GS,A.PRU7cYr/,]JmfpPdk4bl_0iYo^I3?:6
%l[GI50m;=LMAt?.EVF@iE#6!XTB]GsNT.jd's!6FXh4<G=5A5Z^oaQl4kjiQ.D:V4H5/g$jAh`Jg7tXNV,Pd;l;Vl3;t1p!MJh7L
%k[paPlr8@QcV?psOO`A]&!_^p0@,'5B=qOUb$&PPG+fp9$#StYI#Wd!+cgfQI/&(SUZ,4Y/uh$p[SP#e\M`kJptc7b;9gsAmjM8u
%@3G#t2em=m==%)U?_?Mic_nACRe!9!F/h;1bK^reLMY3dAD?5#<%"H+XWFZ4(VQ)D-@]4cpF'=,15EC99!_5UKZ.V?SXaft_d_YY
%3[*8/(<b/mGo2Zj,:B/)$oBrZ&hFJ.<>`C7jB0Y&gm&Wtk@F\bBM/_EE:W9'Msnia78]kY*pZY#WZV)MJt-*Yo,REXpJ0gY+E-id
%PWL%LI-Z@i;c\$eQMEEUIBni=^Y(JHE;Hf/CK]lD&7p"7aXo3iS>WW^%n#Y\kql@K)_`EalTlcY^;Ds;Ag=,B=kP>_,3u<`F)NdS
%1!1'^khC-ANS_`5\)(:'Ant>SO,p1(m<+0IA6Up.\I5V-[I8%?XL#>&Zc\tk]Ko@JT>qoKj8%oENF1%ni0([R6WpHl4BY)f+*lH2
%q8CtWCc7[ir`QqrP8ZWr]j^>MCP*_pZ/=ek*dEEf*md$]kGt38`5PUpaX'AeZeN$S"*1/apj?+J;<5`Ce#OI\3o3ir84D(`p1?=m
%;7>2YlA>[h-O4<c;QaN\6J'?\$=SPKZMG[p<7O&WCG$Pp*g2u/Sphe".V"q4)2V*'J]l3>[#f2?*>N-ls04GPg.+kPP>$>h)lFbn
%S*8DS%SQ)_kiJPLnfH*N0Ku#I^SN^.q_E:XW\EB!b"WjMX=Z]o3L**9=t!mEmjD7^Hs`HsW[f0uYjTQC82%ZWinR.h9rmhEOLJ(>
%9j(+L\LqE0Rp8iic/Wsm&%6=T49h6IgN?s:j_^+pQQ@fR;\@?&Z&ru0SFdUXq0c9c7SIaQQ_@>`PkA(T+-ir1SY48_WjmFV>hQ3;
%Te4QM(o"$W0CBIS@V;dD#ER'D8R:.IP]GVY9hL>'qs8ZI@L5V*CO;(7]XMm;lfB+PR)9PX=CMb5]MDrBZQUl.2M<C#QEWd!4#qtu
%"PmH)_\2K*_@ga1@>QS0Kq#plWItN9%:KQEUCuC[W5RcK*_h'b7O<G=9!mi6U(["j7O?KKW.`h8Q!bg6Nl)M//n#&F2(T=]1b953
%Hm!9e&*-qtM%;T#LF'IW(a*cV`$Lcr.rbk[LeHP%]gn:DbJ6Np#:B?gR(.peKO#*^fJtW?#:?%tJ$q.N&>g@NRt;@!i[7l3I9LV/
%ftMXf0,oZNHlM&l3Sc*JS%Jkrg1YDj_GfL=RQQXP5&'sfqu-8jV*ClO'jCHb@;ZoccZW&aI`8&*Akg-gidoc,gLJcj"Tu<#c"".@
%L79P@h7+Y^(Y?:U.o\!4\u3ObVnR(Z]Qt)o<(2qqi_[;SXbg%.i3!tU]O8%U=2)r=Yg[hf0XB/8]a%lno2-941D6j=>;+;mW;>f<
%KJF.kR;<k]d$:qeA_`ks>R+1QmP)ShcWB1`0Vj.(A@'gEo.)cb]=9WHI64oKY!6>ObhBGN%!EHS7L+@5>I[Q%s73['9g-febibBT
%kju_\^\(a%<E>^/ih2pnnBpV4o>EotA@.p-FfS1%DJ*XXpK(UcI#8j9bL9a7;b>c%oT9Y2,cdgYYo<.u5a+Dc0(,h;@_"XiZ7"8Y
%^O60CbGLIT'53i%Y81>Scl*=e"D$Sp.pk$"^c[]:J*Q/di>MAE%-R)fArghH[`k=Ge&IjcPHiEH^[1u<UmBhEmu>4+74k^c).fZ"
%UnV;o+r8sd6B/D^MHb&ID>d)urTC7.s*$i4r.NJ3eF4gkE2"cL]S$Ab8(U\j6@"+8PqW5'af2&PL8oTKDFBar(hdUsC/f@!cg/nZ
%Vn0>cjL3\3W@DEunnhCJYq"h9:/cXE\>kY^0k^/8&EU<j`$I`,,N7@cp%!KHC(MTThI,%[B3L770jPm1?6T&,!8R@.>q&d:^e'Bp
%+>0JT3&__D\2)*Q/%n115.-Q-p"0D,kV]e`V64R0G5,@:WEKU0gEuP?J(_>KSmYdRjEg^2n>)L>F!tT0V')#neM2m?+"3FQ"6:u;
%PS>Lc;W=!E9"QO<&i[d-ig*\=g_<Cq2oS\S*F^I3oF8M'@:La8(eaCg@O^^UN2=HEZ';aIQI9Vjf>]DI'Xo6OZ8U\lg_<D\$ZE`/
%eQ>H!&khII`)>1<?"r5O=A%?]98T-I.:H./-#O$dPQZqR0P//5*/r<<0I<!tZ/4h^0I:TCVM%[kPgsa\_\UhbpE!%#Rqk-D>Bj--
%&]V]-O#4[FO[mMs(e.GG`5g8i'K8N\jPcA;MWA*F6rUBkZ8%fR+dOmNo=i/<I_iP4,E4ToM5>%AS=<t:R\6ujiXn,f;UTuK;Ncbk
%g_TCGeW<8T7oFq.2!FGb)FuS/P2c='b2$EN2"@C\7^4h0iZGhC,Pj!#PdDK$YpIaV/FN"N(e3bJ45(TBl&.X?-AQKkim8.(*4g-R
%6T8n>U8/\r)&.;59i7-7N2"h]%O3KN*(=Sd@cJk#>]E9$<+Y%DL>n4FJWQ/VNbE<`N4J>`lbslK?FsCrOUa1%'">eUg.a;d\1*.F
%\&;,&L)<Op*^f2Ik2MD5@sQ*:\*4GmOeee<.#NbG<h^u]K.,Q1&;o9X6&G=V6"un01(Z%/&BdUs#YNNI7c"U/,:Kfb:g>)-\bf$\
%VS6"2.%piAem3HC$_Z9Sg_";<GoDB1qD?n_$=3:L[,Y-Id+g/o[<"u-Ha^p5ZfhEs_YP:Q=]foeo=cqSrLA'#,3-<dY1>`3LrHP^
%kL7lqhGS@"hVR,:NU="2H2"J?`[=I+h)N@(DB<8&2\2b>1A'o"5L9s'[s<dT%j)3Os'0AY)WLG`Nc&ZOb7JU*<SW5i\f]XgkM"Zj
%q=B`=#Kq'&R%*34G18afp58J$^>8R!lScMpD>C"#p8c5RD)>nOj#54nhE1P;`-uM@q`afu?X6uFcM?7:551Sn^%i?(I.#%CcTMA4
%cN)NPJFs=Y4TeeNR/sB2=%`2q?p1E0rt-^9e+:,DpX)DJ=.u`f]?"$5NLhOQ%"UiV7rs6:XB+?DK?0L4s$QKQMb<kQpoM!RN9Q'-
%=(dBWHoGpg06N1l/Do$5kZ-8,n1fDrr``NraK0Nc68<B1ZH)2Gj-lLm57HXL7[^cGCu:@/T;gC`"&#iT;'mskdW."e]sXhD$sqP4
%K*L5a$_PrX_VinS$OWp[Ui@V+D0Xl%W8FJMIp26_o2ReEDpp)!0]OjjNi(?p?!B)1FJ407kLVf^''_B=#6S;Ko3T`6%!([p8t8\^
%VUL;pO>o`Gk*rFeTsa8q!ASVu/W7olWj8o5#PYr]WVOs"p.KH0V,"Se`f8mVL5dINTaLpp3RR.O(`-*-E`NXO[LepKKH%jd<a.9"
%<+.3(K7X(>gU5"h[n!kfh7@uNSB#a^q)EqP6F:ft66CQ1W?C4X!q,+?_'S5FhUtco3%C[<OB6DGe#;7+Y;1H(R[!/<,=cQqI4pfh
%*&*Y8D-A"+#@hjnV:gE=oEdrMqV9NcYZklfE&&?)?rm$Dq2.C^]MAb&PT,nl$p5t3^oV-rDth+]Fn"JK0i!bS(CoR7o8SAlnl_V'
%c))'^3"Y(E?\(_)>dCiDN20S]Dc':M+D2\CURAYTr3iVdMS-rrfYLlX*]bfoP8hQKjs/V46Z"ciK4JUPr;/GHC2s1)(=sXDf01/N
%'P[E=^8&WePk9Va8k$6NU]Ym,rjg]E(hPm/=HF!*7En;%^,k)HK;1;62m"^E[M5?N):&Ud.>.PpMI_u=\#IXsG7Y8'Kl8dL2p;;@
%?lEc^WWS^8VWS"qS@Vh>;Ra)YFCTZ,'_q@,R,63cSJYB;B3H\J2'<63bJCb<nnd?>>2fUAVt7(H-[_m6LjB?'IR]H/+1m*n=]+C_
%!R3#L$'RjiVnNb9HJ(%`eIM.JMBV(B"$<FrB@Z;;k#%Gn`\i%GeNW7W8Jm%;EQsJr9bP?;m@YWJ?adeN*>A\sRgX?-3o8;c514B8
%L!PVoWqK1HAk>::6qlW19Xiu'"/10JorP=gjnXcRob>f64G\%Sl9/p2bm`q]4gJ?i'ZGGV<sK5rD38$WTcIAmN=,:MgoJd,X-RW]
%JRZB;au?&+0f->4L7!t\75j`$%Mn.SN_$_L`f4(`U#de`3,8N.L#c>2?<D<WA_5"4at6"[=t%BckUdn_D&)a[&=2d>AXYPIRi8ag
%?Q8,k^^D/deUOSO1nP"7$$)EUT887\VHPZV0d/",4Z3=CYBl%`*!VltI$J<CdA*[iAq!*#4=P/1A*KL$5+In(PI%!%Fs%cQ6]mEn
%\26;4gA3e!PT^spmHXB^fCQ._O+Eg()Wf1]XFT`@Ds:U'X:AMpHFR;1nlf*nER77C`)[5Yq9o_raS\mql^FjLPCTfKV1Z0YSEf)_
%*!Jt>C2!:?a:@q7n^'9fGhb9M^%o!GW9pI*/6%L6H/h./N]nCaSXm*&T8cS1SK%;D"a)0&nL,.2lAuM:rV5PfD5&Or0N2)5q"N>'
%0&O<&h5,b!2.JSI0"\P+T5>Il;./\Z<Be*#)St+sDu3DRe..1fO@@MKSucK8m&#s1p+-:B.'a-X^e1KEPsoX&KhQP'_4@k;*iP07
%>8BLZ7Q2,=NAeer*.lG#9F$bKE%e//BaQ>[2><(;\,!FIW,UR_685;KbUE[9$GiK2+kXO<!n8\lFci(+bBJRIK!rVgdg[/t^17f=
%On+NN4du4JaWP84#/N@rffcUjoQ2afL.Ob.QDU=5YmRXC[.VBa)ruE/;lXTJ0[a%Q`-%&CWaI%M(FPQf&pd"PQGU.8=qgI.]5HB@
%H,XAGf8o34DJf45p6N,7`iU6X^GCntdof4j^]8JN9T?)?4a:;>0%T*343qQBJQp;s]U#Oa4`M>;&S3HL/<?u0?HmUBF.LH>GaRVS
%Q$;jSD-3*FS]Y381=rMLFXj_]Bm)8V:8Z^dZu[VD*dX7:3gH2I9Xc/-pc=I=rS"+M(jdc'*p(d@T\_blo;YIl;nS<I.;>I">MrZ+
%@d8R+M$(ZN'Q-h,;l<C>&4pC`64\$\!C4(#AX/U`,oBf$qQ;:CDnnt`aWQe_,Z(boZeR"qAj6#Yj!Vql'bNEd7;+!P&\kfK!6D_=
%W<lkPiW_gFo9/*&:i+:&P!EFk`fq1@g*h#UDB[n_3Y=hkl5-W5o'L,Xq0;Hn>'m]#41i<<B9He&jSreN6K+XjUBqVpdhWLg#%qE!
%p+QsWUrA31DIUdZ;d'AE6Sb^Q`I.d;:IVBHCGb!/Rk&&!+urP=W$n;nRNU,eO"l>Sbm&qcg+X4U)IGnSM]Y1Mo.Gqb(.1YfKP^4u
%:/b)*9:Q\\Wob>b98;g:T+WPM2Q/dTd?$`5Qpqb+*/],Y3CYbjo9tr%.J]dYbjjA\&UZrh_K>rhbnIF#EoVp,aKCdoRVAU5!/=6s
%`*Bk<>A6BrU"JKJb^4'>1fE*1%G-lfR?a1")5Z/@2VL!6XH:f?<jXTBR?dob]CiNf8\_NO_NR.HU^BmiVQ"9>]CN1Yb;W!R>rI-W
%Rho-VU%D&^.p:?I[IqE&RTH'VJ+@J/+5BD!YjPOPF7V@;CBdbt9qF>4l`Lhp3",Oj;BPrA8m:^R;H.Z3nF[_5S0)cEm8.1:hqOPs
%;Fe'&]O4`Ao1lFCAHi[_=9,[qjo[-NAU7N9GnYSYFg:#.Bio&6PUWsgqRO,hFKqWDqkhmh6(^ZV[#fE2kB+*klcRaC^C/OG;;&\8
%<l7XDoj+pD.^))Dli=Yic^<_JO-M5ead'81_DPPi%ERFFg7I_Z9#F0.2CpqcM]:q.<Y+0H)0Kn=KZM`]mQW@FT$roohis$/c=rEK
%>!(l#?pP^H/3PNHEB0qRl<glZI6FKfY]br/W:^#8[OYbLH;<M'eb(o<9g,EGobt"1*_]AUkm1>TKq-s22]@f]=]c`rEM4Jq9=ctH
%H+u;4@N4fc5;*7dCSg##']l=\no@Ri=`"=3)d>EnV+-?`l$p-QPh!VC[W`<ma/O)Qi2!?4e?5)RF@+J#)n?qe\71:a6liGuH53"c
%pKBSSqM4YcPHV14(unV3_[pUA:PVF:8Vnm]@k($OY?E$Hm1`S0UT,iq@g];.G!O;XNiB\/:!p`SD7j_U)0V_jf#poNVYZ),?'&PG
%8R8:MK$#g5f<D[UQqEN$:8QZ)WA)O*P[d<GUGgE9at`"Y@e.BB?7V',+@Wi'fORU^76.5a3n=DEFAdhc0K3i`=!%).R*$dLVaVu,
%*`G$Ll7deM7L1'ON.Uh\Sk/^o\65V:Vj([@Rh3$RP\6S]c?7a[4k:SJ0M1=0jh8%ZXV@5aOrEUE^_lIG\u#jMIY<#B_/\,'Png>d
%D'=sInD27)9t</$kYX(sTgW*B[M!Vdl=qIuRF\[r_C";[WA;d,Z6\S!F"6&O9iK@e=3mlD$L8(0Mlkbe?.<VV[H2?_oNl`ogXG1U
%CiB</39Bhpli"nWT,Be(7ZWtb@qPA#)*MS$O."C*B(VH.4_@0E4Ut33N#l1]h9>*QBGisN$qg6/C<\/.dBC]bO5t(q/EpdBW1@-T
%f%D$1N2Ws.[nYSpJ))KUCCG#M*&8e/B_2/`=]g/+*uK0dCuV>cNc&Z/;rIU;Vni%W04m%*@9*;S,[\MWn_MI\;*/i6r64*'k&U=m
%r4\T8@GL4>)*_cRc^F<a4Ysg`SGFN+J]hbka2r/f3#t7nI.),[8W4`UHV\qWIWsEPp?pQ@2*ZKsJAQ&-I+e_;0_rC$o&;UC=$9?Q
%Gb-hCb20Vjl.tpi#G.iY]_Lc;lI4a>cdU1fiko'Mir.B6psCKRSED=rEWP:P]'ak/-@)1Lg>mOJr7Z;>e!AUgHCio#HCjg].Gh0S
%`Oe,ZISPd(cDOs02h]HkP6-'=YP&bG-r4t!gPT0nAK7ggUm,\\>:HsgY*-&0.-@NOZ_7jk-JRTk6JM4jj`_og?#:s]1JLe'Z,^lF
%PObYTA,T"UZ>k7dl/0Ro48@#=jDdWFpt/<,pPu>Wnl<!McjB6\\pUl2T(a+;AVoOI`2)NqDl3gYH71edK1;'#j)'m)fWM:3dIm4R
%qusgcJi4il*X4"dIj"1bXUCSm4ndT@'k]GJ8+!Lm+742j@%a.d^DknoKBAQTeZO970+T#_/$4li/dNY8n@K#F)]O?>D-*SkgDbV/
%Ze1<&2TnVXYJ&h/J'?XD-*PRp]tXkhUWdo0B(;hqQ.JA(=Z]_ZK@b<7\qNFo2F6_c/W181+0gRU,%(5=[DfGW.F*:N$Z"W'<Wtp'
%=dRlcJs,g#f/H?c,,&UcZ'lg?nmM:hG-cR=;f6FOGm-.p^$F^WaI7K1`*lpn:qlote5]f0/0BGbYNiu]5no9&6F*N-:c@G4>Mufb
%7CFq'mg:q_*ul0.Q"_sO[bY6GLRXn>7Pkb.2;Na[]19?=bL6lsj[51VPQN/i^hA)oNcMqrK``fjk=)!2Vb1rj&@d'ng*u/R2`*Hu
%2)iNY@RL:&;*O,>8bXjP'@Z_k4"(h[g9aFhI*d[\[Ptd_Fso;C02:*;A3Te6)s$CD]KnHm<4S!XgDS(6C!t1F=I5)7cgt"']FRP,
%?Otq;735eF`*'m8V6ig#<6NoN=DPZdY5eQF*lE0nk#@CS]/iiiFiFVr;iQ`Yq+<Fr91u,ocC`L@_-[VaUP"<^^e?7#<">:<q5F*q
%@E3[pVNJ`=e[.jtZWBg.^Tn3(BsB94[6K+_NtXI$[Ih>=]t+Mc_j]=WX(#)AdX;(,<tFf)p1@abC=\j-"C;Ua]4'sCC,enNYC4`A
%AW0[gGq\o@m?9e4d$-SK<I(Rp>?r/J]5"Ph)S<Ei.;')n(Y?(t2uEmUlA"'GrbuRf%c4D2#6VSHY>a;\I1]IU\,N4ga1/+:NNrJ4
%rPooH5D6n:5:"C$H1prZ\bJCe5KtU$M`K?Qa84t$s*GLHT2G)i'YG:eDaqRT2;CEki6<Zp#8Qa#;=N^uruRikNECC[#&bUD=H+9/
%euh(pH5e?q'.-a4A(UUgo4@uVqk+rCf0"WMhfDG,jU%-aE&qcc8n<hBHAKQ#7'LQ;NCGi&LcJ5H[aX`'"F9$^k8Z09XOGP=mHkqM
%fH.Fe5gdG^G1F@g87$)jD+jQ%Q=+9=b(PfjrQ"b$p20@DeJYQVY4l7.XdG@g@:#P6QECt55drU;%?"g%(Bu:@+VqNBP5PDJC1!Ag
%,O@Xt=YJZ;__d?sW[HLK3%6gl]W-fH8L^a`<kk_n%Brii%A+/\%HTPs"lAQTG)P`KH//V]*<H^)8.dX*d5<Zo1s9+AgGCen].f^O
%>97r"FM`aAHt(8h\$sSFa9/2QFY*X+b?IE"C%CLo9ZR(?=JEeIf+HiB#.u,O`4&nBg&b\]nef.aXi0bCE4hK9/dOa7aehc9Y!Q,h
%>L9$fhr#pt;C-$HY7r06:N^@93c?N%2kW"8/35:n4`g0kV#ZrQ\FsdQ4<)Mk7aeBT/fESjq#Xp212cioShQ:WYQOPY@#>j[2)lW3
%5-Pp3=:U0AGu\d.2I!nTWUqpo)EtaG@G+#A><d?"&_8Q+f@=b\nFU&WeGs'03#ftFmo\h-;LL)4/1*&`O5!f1McfkJ5&S_Jh(k!0
%FB'El1f+Ao+f^Sjf#P&uE3WBmgL1\k'd4],/,OLP$V"8Df,$7oS:7us"9jSGW]n_^`"qqQ30p\6&?@5hN=Qq^D35J2KXbOC(YHtX
%?58a-ITR=pi@#Nkg=5QQ_qq5-Z#S!Z<T8+!bZ?'Y+J5[Kc-#T5NPt+(->h<N5u4ehPtanPC52aSAffHog'^DX?0&Y.G"MTX8<$H2
%Pg:2#*((3(;b4"mJF]:sD_<N]_PL12;Q;2QW.Cr;>o/cj@/>k9CK''4>@DcCB(M9>a>gYZ(>_#g18Mg93QI-A\BuF:o_e:33G^O-
%NTRIm*&`,8_FA-)eAuH^)OW0SUQYY+#Z2gm-oXVTie%AnggSWPa!pZ9VRpbmm`hq@UZYA_'JkW][mDogM&D]j+X?gbFrW=/GDR3J
%WA11CTI$>;`,<"KI3Ect3aZ>TcLrt;/i4>Z\f5BP)/>6O;*TjSh>P#WPMaQN;:?><qDi/0%l#<@*](*Cb\3"S4o'_?7^_l.-"^+l
%(0=s7Go_T^6d3U\@n(<;&b@h/S3_d>ej;iAT/.p,e@CHNQBcQ`OY%`O6%m:=,!<"tN9jJQg.fn))ps;T?k>'(WO\cCS"iUF=QF5u
%,;7n;3i`^A;Dk^>BH:S1B6=Y#[4uC7@"(?V+,h4d1Z@Cr>lK:nCga8JSGYNH]i&"KaWFb0Qk9N*07ejjjVt;iMN^8Zcj,MG-ec?p
%^/ub:6n2sf+%F,t0,qu@hfOQ'aE\6u>l<Dej-WP]n5!.DieR8<h`Be0.98[GdC#1aPMCAomGWjd?TW;thqISIm0sjBs*CirI<t[(
%ajQ'%^Qoe?Gkc:G8K0ei(&JO`r\gp8"mA`"91h"r"pb1^k<'j;(Ufm#E#LF:S_$6@/'B9.A:"Q2S&[fXd`RK&E2bX.=;P;NJIok>
%ff^f"J$aq3&1V?N3Jl5u:Xk;/\CTjVIo\bKL8MJU@iX"PgWmlHo1_Z"0=rTIUN4d>FdENOX-^7-g5n5!/?1@,%@=I'RpFFJ/"2'?
%^]3fBji(;&V\dt\j.AG23Bbm0J,/Sd04+8-P5O'9B5dBkJ,/,Sk7@@WK9&3EEV\X8EHLmIc)\hH`tuc\/[#ps?G0HIrTUb?>faZD
%4$G_fbrYdqX4%`1o\80UNu)^(qYKI9CKrMV?@Ol6qV9*c(O6nUoTSg_@I[OTaM7N9g%"a;5PXsCmE)E:J!N"L]IH.tC&INGs5DMl
%pRf2`]0=IIAbkKK5:rJlOQL6o&*Q)Mc6)_KRhii+Oi(E7B81oV>k.jTs819U\Tr#Jnbm@uoe-8Wq"!PJ?QSu_X>,!E=9Q@?j8V:'
%Rl<"R2m7<1/H>1AU[TnZVNZMQMYWb-hp.O+55a@!s*&JYlNR:m%K4]%g%!21/>:5DqWdoQMiYWoef?U$a.HsDrl_T2qXH@a3rJ[C
%/8mEFqUqq0du/oB,2thDo%%IQ]_Q3t>iVY>s6StEc0<@><L4LThO\%lHTl6&`Q)=+?X7SskEJbJIHSigc(-Zcq+&=-q&CH&H@2.r
%hT%CBq;Gm&hiB[sO2]/sSmJ&ZT.QNrqss$Al`84$AO_EPCS%KJl`ZX&QW^N,^qU(61)D$\G+.=(ro#ecb=h'bjidRSiJ(Iif!g]q
%lYl=8iZnE;ggo$$2gp#BP?J%<3sEaXbP[71FM>F>s!Ee*%qIj$B)O*L/RL.a?G-+)@f-W5gV4h;S^L]'%`rtZZHP,o2/R=LS-8%Z
%$];@iLX:Td2rE"gZnTe3q4'ABiO_mp7=.V2Ai^-E=(8m5>m)7!QH/]_7:(Ba%6f_X3Z;paG2AXSSN!auNdm8-DAf'dO39eRH!M@>
%rbMK&QD#kE*k2*iJr=@uhEJ";i92`$Gg"sSEG^0K(A^&/Q%!IiI5&Nd/)*;fk+:dK]!3c0hK`=kUeTP5`_)1qP!9*<6)=/fIS,Z_
%F-E!(Zi5`Lemukh^>"P#4PTV1/AHT.o$-_Dk1H_W"Y'J-J(q+@7h,+UnE(VXAX/m[SY!0g,a5WQO^GhMF8[JW>],o.^:8W?LE1>1
%-\6],:P)"iC@RpcG#:F<;OfWArG$L$c1p];dHpV'[BQud:]IIKi?*!(J,*Z$n`>ZFZ8g6N^GPDF:khKF"Q=@.)a(;!hB8HdA.)i^
%r0;o^Xl$G=Q-mkbj1uOdq,=ia*mV>&PP]j5[bsHsE-pIUr!-I*%li,82h1Ydo&MAd7fJNED")__rTX*tbKD",p<ETJ48tV*arQf0
%4'jOgQQ,,%GH@4FA'5ed;mds!5M^f![bZEb?GFt_rgc[VNuJ?=;+7:q2#nu2!Vb6LCI@At#bIn1O^u-SbkV5`nK)GG^Rq(14[6V>
%L1>Gtl2SCZhI!*:qe0Uam<47eC4&C0ClG7YoTo:%8ju1_OLNWHe0q1].J-?$G8o\&qs9KZ]1]SL]sB9M#m$W"=b3m8:^6#Bf)9]9
%,rY9Z<oEl:JrRimRpE8eQ_Ih\Fhu@,I!37GU(>6\5J(:[pOuJo*"&,n/eY3KqLSP%C"W;O1AbPLTEhQJBQ*c6Nf.[b+8,*qqL"cL
%^n2E5B5a,p0:&gkp=8?t#@?;XpQ@FEP0a/*SJq*r%6<HE>M&"Q*?5>6g@kPZmld/oaca<aqg'LL4!6Wk7!XEMa*ZdI/-t<uR@3IZ
%pTrcTAY(B:nGV_?5-l3;,Q>'73];EKa\uc#id0lX9O/7ZqH(XRrtc8V\[KK]7>>ZRWh3X5AbrR^)FLuRk:bf`6S!['^<?C2>0R!m
%BX&Qk:G9W12`&Z6=TP!O]'_V<%`?40Oh\nkotLVONc01aVq;u<0=)e>,\GCSI`_t'$%f3b`%g[=pokG*rt::#\;?!]%,cCA$6Qk&
%(Q1,!WK%(&\R21a!ee)`8p'uh*9[>k/:+J`Yemejc.%@7!nXmBWB!QoJ&>+_Q0e-MO<HL]-Ugl3P8M.5YLP3("fu+as$&17fC/hb
%n:)9*r3pX^^JuGr0>ks49R4b[*u9;@(>]V83,%sQU&j4e^"I*."%!aJO(@4[2FC`AhqhQ:13*?YT(SbHj+t'@Iq0(;%kZD56uJ^s
%I%BZ'fVnN@<S>Gjl*%19p*P+)phl+sE;:lc2u:GLro9sT)5_"!T'Q>inFL"uk:cSoL*P`H@#!hu*q`sBPKiaP8[T1+TfK^)c:,To
%Cci7WaIIpcYH!QdSl_mP3/3(K9Eg'/1u7M!X0&V&Xa?Ki%^'6(ru^YdCnLNu3,J#.-AU1M$k-WJp(V5%UdWklE-9Ef;gV"jh/G66
%pA;h,C9(\M]BG:<l\muI_sp:]KQ#f%p'>#FI>_SIgVK(41q]It0/&*-cK,'^lC..1A".7Y.`e&i&(.<n^(_t5Xs5_>ROaG@e3&!P
%1_gI4aE,oXr6[)!KYbG.m9t&F%i/M.SHp8+,S$%&j)Qdk:m\NJ^p'6c8k0+3f]JX+N=:X2#&i=pKt4iqcdA-LQidX'r"tYdke-fO
%OBA8QIq_S.Z:NI8ClWKuf>-F)Gq`$c]1l-FiYpH";o^]6K>DB*%gu.9g&>rAGe&kY,FF5Rq._Sdbm_L>bZ'PIE%hCH1DtW'OQ)je
%a7QCn(q-Z[V\&%Mkr&=XZ#ljr@?$:9#U>18$LiD$=N'\C0.e*b#)FL'Bso+(NMU'e5*kB!&HR(q;f0m**D[tZ2!.1nZ35E<]OD^F
%&?3[VR24:"^#iKc0u=S39jq9!E&0V$hb_eS6*+e1\:b]X`N-=1$"ld8+8]UR1G+U<7T?Vf6CHeGQDKLdV7HL\e-*'@Shi,GhUo2I
%&&lJ0%)Z`X'tVZ:KH,;'dVttufkMe]$MUOcOg.#P'T9+I)^]uH(^bo:_J.C+Pk/m7G[f!fDS&9dL'N,lMYQn8/.GB^<JoC?>QcK>
%)9<F+`nCi2-tJobGqAp&iAd8`F@@cP5f=Iu/;JnKQK*6XoTRRE/L_%3q.?U<>.QD\,s$T6XNA,L9*Q]<Dm2?Z7^dQ6<j4VcmmKFs
%24/+o&^k="KM/9]4cg"LV.GljYY[TSi"F+mK5K?Ul*>//S+!Th+X.a7hLmc9Tu`>#L'bdbK@CNbYeVDr/`1#9"EeJN#>I-GCZ."]
%N]3]+!psV.X[7kc"$Nbj6]!U]^LaI50O<M>AES2f/2N.4j5<FmJPh'Iei)-aG<_g+#jDg`BaF/LYoR79dO?$^'3,jfVQ;T'0h-[g
%5H78&=7[!^,tKus_]0R)dDa2@#*/fqm=r`91%_/b1t5f@__ljLaQ_GO>Iadl3'KOb_pH-nbgIO?7g*hGB<r5[LoS*2RlHe!SO=$K
%NMpg/kSHltE=NNcX,0>.6AXHR:*o=<^86XFQg8=<!_._)BZs#@R0u]=3F_.?NX.C]+LDq&fQB#P`j>FXbDth%/3LFCbo8B)9rKIN
%L_<eLH<;mp[UVh3l3J/]3(+/rQW(JaY-Wikom`@q[>ZNA?igTGGhE@Bs%q>,<GA3(Hp#Z2'r2o72ih6.8)_8s%>510SimqDJ["HV
%[6.qYY[^5cRI0PaoY?p0cQ3R57VC]c`lecA[PBuj`f"\86sH+om`9g#9=*;(P.C8q@<EO8n-YQ`Q:pb9rf20[?1n7B/d`37ANn.E
%GT@A']Fl?=S?QN[/>:Oe=S@:Q_=8)UQ:nO&p=/0463%\%0)),(h.!#!#SsKH6Do[_<Wb.<:"IgFW2[*op=pJ(`!_Vcp7ImAN]%pr
%-=<iR`sV4=$otI).Z-apdr:q&)B&6^d%s!E@I14&CctdJ*:R6T)<rm29F)U;+2p!E&u!_tQA0bs('FDom?D*"m!%BmGB,YZUsIqJ
%#W*i`B7MKVVV:PlPGR.k%?pI9A*BY3C_%%i+6,JAqA6YJ0`*bMK0@_o-op?m$8rsBCPf<+Z#]W%Du;^c=kEN]C06h!!RA(ld:BuW
%1@s7r@b=D\21i%4;^B-q[).;;L)#33Aqo$T`m^0_LM=g1?MHf27p/N-YdjELK!>bc@2u8nhk>F[3alBG`(Q?+Bq)]40[a4mSiG]D
%;8Ze2n'-jSphU,Tit7?9`7K.MHA0Bbmlgka\miP/p:EZq5]#Vfim_[0XIi%5ilQTg'86AeDUC#Dd*S]_G8QrsQHqUJFHWNfT4>rN
%:;RNBo_q3kX>LJd^tQd^K#.Uq2-uDW=H3M%l2uc;l?W%%@7\CuKEXush]\i<9XB@AI]huT&dKg0AHr^S1OL<:`8T9A[Nl=rGXrHf
%QGa?n%aOQc1XPK^)--EO6>gcF4).1='?!dX8BGj\"-%\^@D@^?_hV0L6p<otaJ9+XGa'7]GJY?F?[GDm?G4r48TfGZ%e8esR(n&s
%SC-P;^Q5oRRHsnBkt7^((;WiI&*fCkh=a(Qp8U!ArTLfJL\dQ)Y?.b%@=QY)QhdQ=TEhS_HeNC^(sj]1+Y>\N2"I6$GAk*k:=Wg_
%r&j`43HJpQheYlX452C:GccG'fIugUqZ;:1\Si`Pb(.\6]n:L)qSgc2A$c2O2HnU<Z.SMhlQt7Qn0G[n_Fa:4FdR[+/<P,;kB`oO
%Xg[(LB/')uJ,7&Q%*hVWH4PKYG'ba%$KYsU^DE#$;iU<7mu)q!XU:XR3#8l+ptpb)<kDB1%@.q"nnYZ(.l7E((]H!E=K8h[Zs`hk
%Rj=RcXnE9M2o"!Y[/%J".K8p0dD&2omncm%,;t#t)8Dm;s)gg+lUkU]n%Vp3B`%87nCVB!d-J01rs%cW^Q_0RHUXI<_1n*mrgm'g
%462,3o^B5[s';ASX8V)9JA;*hB_!2cfDNC<p'0@aCMJ07!US!H5?HA[<IZ?Cd.H3^IoD;]PdL8H#64K\VZ&O-etT,eK[kQ!g`O;b
%f,t#>qk>2r@5skYj0nqaYOIP.T=:\$r`a1lHre@Uq^T#NjD#gs54$iLZMi;h5Bcn4nL@XHT!em[E]&j9^OHd'JumeC`B'I<I^)6=
%f"YTIrdT5K',?chq%_4E>"eUZrG&/mBTAW_HgSg<Pq.OjV7&rsKio:6T*?=Mo\?XYWnjqTDABYQ,I*kY&+=7Oqd]NRhXfAkZ.H1&
%l[Nrs;e2IbGA&4,%L;sXT`7q<h&="<iPP`kMQNdBnYnQmeF!`+J`M4L2DYs1B!M(KXMkL3dOA4Ki'!I-ghq3K.-t/Se-"*?"!pk0
%e._<*ofDL>O9hiQZ.,H(%Q>85c`q>.pppf^XOup,g;Rr@N2CK:a7QVa3<eE^[UC'1f8YcpDO>nJESS=UZnu=,+'0"ZY5W"MG<-QM
%qV>V]f-ulMPlICRlBSX2&51DpBBWh+5EELdg?$pEZ-H:W*E)jV,t><V):otr'Ka7k]m=bH-q=""Mn//lT#H/D7]UR$jh9L.egrE/
%^K8G_eUR;5Eg:sc=K4=FrP46L'\*WD)XqjGf_Ts"G<4OYP+c*_je4:m29p<uSQ*(%bRD)=Tk&pVQ#9R%PsW*(?6%X6jMqpYIaOe*
%LBMHPg8/9=UtQ\CH6ZOJoS*C)G.&Ui<k8@DjEOM>B#jVFJ$1ao6'+!*$Pa&3&[0@plZ%Jumjf!!B+7Y;NNHZ^&@[YJcg>P0J,\5D
%L2H\=j^J<1Cnu3\70/MqV@HQP?LOK4,$OOp[@JBr)?It*X'Hj+If4q8SB*UHXaY\WYYsh9ddT&?oSIWQaHLL(S<A3?J>;kniG09I
%0-o!Y/Z;V04.CIpbl]A[qe,pZ?:hJ11;XQ/O2\af1>#Yrm0*@Erd2'-_1=kM3[=+WM>$/=IU)e49h3&mN*'n]5PSdXqNMrl%_nO>
%;>hm,[3m0:Qi'3M%Z_arV^6U_&'1=,O^[Pbhs%J!m18Nghi7<&DOZq.W3\Y@6V;'`mHeItP+%P"fF4o8(L%Vc2nubbdVB@u6,Ras
%eghh:jiC^'=RPDFY>6M$IP]_c2U##bnt%V0?q+#_A;#Q0Jcmk:#tdL8L0F=aQ\MF6er:PEgt;IsP/,NYNMM!UXtV'!6bCc]&(uH6
%hNHKhp/()R6*/UemtE&;pt3WB##T*o(?/pWSVn>]^D%n1maI0p`9tI*C6jSdbL0%qPUP)Zbp!:?PY4?oMRMt92.%"C.%kacQB:#Q
%n4LE2h^iqXHQUu-T.FVspd))UbfT-&6Hmb;Q-$ahnAdc#U@%[EYbp;rYo?9EHoZI*]XdS"m#p\;eYD_c5%$<i!?l-7]4>8#[o0>Z
%+enN%0D<s-;>)kN@B`ACmZ7/3ONON2C@1J%06\q'G5!HUpMU7')qmsJ\_[5ULM"5?Vc!HR2\SB)_f@M1\^gS;b%S_3#7J47mE5f_
%jJu5ncejZcTjqrdNpqYj?,Mh_n%TmK;XN#,>44T4:Ued?_Q`sjZIA%bfZX;t;59V:]N=sam1t&CC47!Pe@d.Wchk.j\_X"BIDg$:
%D^>sqLkOHrcrLV*AphX)^s@(kT7Zg$Gd,Bq<r93m4dp9PF8o]l5:NI5X.Q=I3o*t$@[;K&g;!Z:rh8ne^YglUR1ZX_o50iZ0Nd5>
%Oc;bRbf79Z?2O4N&kSg$nC't.9gsqo^*=T)&r!G+H'Y&k4Q$$Ng6(1gkLu8+eXN?_hm(bq/5tXH7ok)gDoDX7@OJ0T^Min<Ag2Q.
%W_`O8^`Q[Z2^n@ULH3a?]m_1k1<X^GqlOt7\SB_7EUga`\5W3KcqXbGdtir$QAgf/<(fkhE4*(1VD,b'F[8OEf5<FFlrupVc`cLG
%[Mc5cQKBFX>T#'j0p_2>DS'9"!sXT5'HH9ThfI5%9*NEkJ*>8X4dV3(#@H]0+'jotmpnciH`p+mnmHp0UE8bhT*pFg[N`sa&G<L/
%cdhchY'3UVU@m)]S0&WPh#&D$?aDoNESSiNE,EQs1_TXd]S>iOa5Dk9+q!l3J\%+aDcD@;e#q><[3M1;Lj*_O7.@nY49B4WBU+'^
%1TK@s_tQAWUh;a(B($fi_@QJ4L[aii(_Mo,CbaG6h5Lg3C/JmKe=p%C%YGe<h[eA7<[7_7)Od;QD7"^D<iY!@%jNuSKWrFG_!YhN
%Rs$KS]\uFHCY&Fq.WYCFZ_gNj7?sK&<,UJ=\[0U$9%*6bVN(FrXsUPADQc$gR.sR=1mnf.)d*J'`lJdgK%=Fo,c(-6g`B$LN+P_E
%9_^/E&ks05b2Ki*!bqU-]&q$Yfs`#NUCh&&Iu7!/6]:p3<>O9lj/KXDhi?A9QatkO[eZKEh`'r9eiORAZsLN+RHV).>UKU0kScte
%@AdDbVJ%s3%DOpB"0K;\H'u5Yak[iPgte*[N3VRa7(OEN20GA@hY-:e&[oR&Js_G7@_%&>[$,rp?*1<"fqlS<IjJHllE6sZC\ncl
%k/ot@f"KF>e(3)AEqqEBpZqYRgHWBhX2/k+H?6:]kF[7D@WRU`=DWFu4;OFB)5gn+HS9U<kO:^)->"O8a4iY'R-`gJ+m%QD2<_s-
%1&W!a2Ufe5VQ=J-)%Grnq;'dFI@-G]YIV^Ep("g>nCP&3X_cq]TenB,Q^@6Mb[4<*Z.Yf]Zf;mM2<>jleEGB:)SQu#Ra%6gC4X+C
%UXf.]k1&^J8Y6b.com_ppBjRgb"K.KM3Gn"I9>"pf6jILIDaYmHsOrZY.r6@6]qBCG1q0nFnr*)`i$4)G&u:YT;gYKrTRQKS`a7W
%TT/,9Z\)5ogtS2Tdn>ThWPVkX.\BA[)hd\5]3K&jq'K=8fp^(O%a9:>)WT;BiL'c;e3rZVaDRLE7X"?7=aN9_:]C95\hi#63mLM!
%aXJcI>oU?,@X@:L\K28p6J_/r-8\8<<`:96J%ZV*jO_L+@:s$h\;id-&D[Z,6X-,7]dNSj4_Qsl$kaREcnF-$_ZdZr2!O&L%F;[M
%8EcQ-X6Yu!8S)BmSQhPeGX\rqVmlPJG5ZP82r23<hb;ogO6P9Xb!P[dWh,5ie8X&-n/FiWTV+(=qNbm)T*G,Ar:ZiEm$>sRosLp`
%G]&",:VL\1h0<fjJ)H]XKCYXa0"p]>`o?=_Y,eeVg0%1A/gOYhqGRRl4l#2eH6QS\D7I.B>!AK^5'V?Yg9&=G[s=a@]j&h^b'%^h
%0NZ[<#-$FZM&Oe5-(\H8O)M>YQ0fG-0&9&Vb]Lao._4tFY@aZCj_[0[lJFm(`fG=Wm_*f/F:`eZVfP=E1So:3j2oM=.HN-.`j<(l
%>;Mc*hd:k/=@LV%R@4)6:!Dj[YmKt5A)iiVQWPec@1i*S1U5TP:*1u,<s5"^^Di6Y*F-=tk*Q$lAp0k#2,Vd`H\ZMQq:W3SrTRQ<
%2WDj8glmMc(;](:l.Ge'h/[=@+aXci1ub@aPY4n:]ln'V$>,U3c.MAPj!H[N4)N%#G?5E^q!iSi[W$\F*a?;%]u1P[`OXXL;gg6p
%233c-HI&_5b_c=0bT*-50me4h-fusRgrE[uTc<Tdqe"'u>?eAoZe0\BV9CSUO0),`\?Y`"S\s+"q:\aug!\oco^[AfQFWE.LukMG
%PHk&5>;EWEe[^ZV+*Ju?]8M;@Cp,hk&3JO#cc(pASaG'L.92G"DXUf71[X`aG!:-gO'T11Ej=qc[:`0SH[4bnmZ/<rZ,_I0&1a<D
%SAm%FS]P!9ZG%-%DAW2Tf4f(Pem,q8MmX'/S$BHn`ETFY?u1hC[Yoe.M,&AHHoaDF4[/ajGr?_iChVje]rB%lD83S9DX.*nRV(?(
%=l(%j%VB=n=-d("j6JM?ea[2El>8ZTHu_9>^YcH=\*paEj*S7>LZ=/TI;AbVESMHsl^o!5Y;@0]2UrWdIlNENN0ftiF_t^E(pBRZ
%!6pAGh0A,(gVu)KR58Jbr3SOG0l:bi:X%?^(DD_)cIRYd??m4XZl,M*R`4.%lJkKR,'ia"4cqn[3Ln__eaaB#(U%Tf8%6Oi7,_]o
%ET1_BDJ%nRmu1$VO,DbMlI0Hgil0PuTkPiW-^j.ShK8$sEr9mO2EA+*H(']LDa$s3/%[HuG3l:jl/+\;9s3r.@[!4]4u9`\VA:QR
%itqFMa[0o_nfk?O3I/5YIPb24T"(2imI*57^-;5pPF_\b@OefA=JKT-VCrJRVW*5rgF<)ofU?jWWVG!._=[S'>-"2hD*B%+:[RVR
%btXb?M<*1:GlMgL^@D%X<I(Q*;_JZB7oPs^\N(\2'WpVff?3W*@_16\[bUD<l/a/gAia'jc-eGtS'Lito`!rfCUu45YVpoX]NL[U
%C3==gWG:<a\$?g,l+uB7`QWGm@W?"b\o]rBS_k`*<fU7!B@=D/CM*J5Znc]E]=p"@;4m7"g^g"NB55^lI&=H`r@l]M9l<38cE+4g
%AeR'%En9cOjk7$XY<SN"Y?]B@PE).bZqdN3Df:Qqfud'&DmkeZSCr@;GC49T>qOASA`?4$mbZgsgr=aq0t6tEmEHXt?7U)`4.2#;
%a*)9CY.e5X1imREc^pcO^;]7Kdl.s3c<^-\IUgQIS_l1MX7OB\mGe%D]6Z\;NmmCnC]3[5^>FCLM9jF0h8Ki,r=E>h)DB(9O'4,a
%Y`N_?0D7'2n`"e3.fQaB-0"mn':5S!R!k>m0,XNPK8%jpp<>q,Q`i%^Q?s8Q=*I0s6M]$Q/Mp,((Q7=U_X$4@e9ZMi?!^2VV@MH8
%(3^_*p>WW2CG%g-?L0>Z-;L-K#>`rT,+cO%:H6h"7O%Z`_).#)o@]&?q;1CIU:>QYQ"]Nk)GB*Pk3CCSa[p3gX%_/=RDIJQdc#6(
%>e3,R\R-P([$TX0mRu:#Chcs+cR)u+%D/"ZG5=]BgA+\@67X(G[aq10or7?34dnjl&*B2M[F;[!IClHFlXt(dcqA\^Xgba!cAeg4
%HHIqmB&^gV44c001\Xtjja:OdW)QPuj)&^D`gk5D[S4`1HSdPPj-b2RVK^6GIkk`PlofXFpr/prdo]9A9\`fUFf2@4X8'2I3Bu3+
%W`PBIX(P3$m.fmohtA_YEI0L*RBk/)%d33Lifduh/^1iPr-Wh.nasjR-_F^+FUBLo%o0)YgMl$IX(ceWeoG#FY*+QogUuFWFO/Qu
%=1?Upcb$jtN6V@\Kt"Y$ea[f=C!4+p?TIW@]?(k=i\5*A7WnIH:J[U,r8ZT(WrH1l,g#d](RF7M=3&M-q=,<$YDpfgX6Ob=\R&C]
%dPNJ<]8cNAQ.aBbA@")*PsY1^Dl%KZ1UGL_C)<r)m"E'@be2G,O.OPLX$uK#DY:,TrOB;GEKs[2T<HJ@*>G-hCCfTl]5*rXgK\+<
%h!M8JAP775#J9T^lOVVE@"IuG]ed@,\<qQt=?l$+D&d`mN])djL$V:<;tQ8HLRUrYP\\Pi:M6S7a\)04PD\2R]r'$59g+cB>Wno9
%Sh=cWQ^QiSH=ljC-1)cbRd&XgekP&"2^d%EDE1J@A.f.=AgV*UX_1E+rLHWa[!A76]GsnVmbpGb]5s?1AFD.B;q]IVrb67aHG,nC
%Hh2<hZeJS3=.aD;j_$2PHMNi&B0UlBI6Gc?%f<raf^dhOVS23LDf3lA@%,?PWUg&N>C<TcV>7`kXmApZFmJTY\%^C_D`hki'R&*;
%;fd"5gLiJ,bk?t0g"i&8(^E.geVX(HC#Sl*kP;d%^,p[de(\0?^-CL<W>9n[T(W*>XOk/>>C/&C$[;&]-8iR4I"([m5GuQIpXe`q
%b^SNPDX>-6=(2DSpZ_JrjlC:h0'nFIKBDH9p+WbD?TH?eCW>>XpgE(M/b_;IA3:YUNj^la#=f='qu1U%Xu895o'Pu-6[s9:VE(fu
%S[js;V'GA<_gHH"cFp'6PNK^7cKS5LqWr<Fl(iEIIlQ%/`5Z`U"g>/8=u]]W4Y/_gCSeB5o(g4,qIXsIm.rPaI+BmN]UmmPC\ml+
%oD8H3D*%E30pb)3BUXk/;sir2g7'"qkgn=+Qd41<bN3/[G3/;ZFh`;=J"1VaZ?KrXX1K=g]8dWl[Hlr;]oD?p_K,ObR@DsCd;-Gk
%RpGXMrha^C>/-V4/&uN`;t]J2gJV\_/p<SKVJ5I!%[Kb3B?-osGO7`7]simE`;O-2\oqG)kKb1^B4nc1m9/7n-so0Y+6T`m_.0@=
%^HUN3oZP4qmF#ik,C+`8]M9N=('iSaa/,&bUSH7_jnu(,SM-Ou]n?;E9iF7Ckr7_tmWPkp/3LUFNltV8dQG:4X'.TR>s2B':0/C&
%Q'7ZIoiA49?<dtTYI12%A/aV(e)BQ`_p`D)*IB]*>:\#i9?m(k`bW%f[r1A0lGmP\2tbb<*ZWWFkGZ&lEdA[C^3#sTf3\F?7cj;*
%RrVk_0:cQ^20\CEXp03[3I]XdD^JO]S'?:)^XJX>ok.I=)?%!D?IIEY$Z;]rhUsY;g<ZVgeW-=D:3;Lk+!*N2G\i/4H1N*/mC/#@
%icmCo-E>m4ipOJV0^ioQk,)nms1:H'UHaTOZWt]N5%en>r-NR9d-0(CNG@`a-6c-9S@4<GMe<qRgF`EbPKLZ0p\jgCl0!h2X8Lc@
%*jnKG3o78-/JfA@(opU%5CYhPC=K:J@BUd,V7$gbJr0=gX,Wlh[oWGa_dn8Onu"=jljYSiF3R"_3u3*hjKHls50KmTPXjF)_eHm<
%WXrmYbNpGSK!o+$iqMJ:BH*1kI$=I7Q;Hc\4.W!IncH<l00QC^pgO9Z2D"4j79eGI^%L3DG0i-Sm.E$3V=T$++$ob%n6G?\a,8^<
%=T>omVN/I3HIY4Im.\O!nQ]pjonq\*Z!qJWe=;_T#=VRWU1+Wtb'V'?T!1760m;..Ja%)KqMbp]7scr@Bi*E)CTL^=o>;9H$lS[D
%NuG11Uu,:-OVYrMic'D`m=24p`^&YN=Ij6.MIVX?o_S`5_*k%f]ds?K]g;H3$f5c4\[#X'R*;Yo,<d$mWnXr?K'L%S60f8H6qr'F
%_#[WaaQ7<Qo2F>k#RO9NB3F->4/6i9UmHNrnWW7e50h`/]o7(*jR;9oKl;ltJu2&WVs<tH):+XD$f-+b]&M&^$\Ht,m8gjsghf!N
%=X&c/L](&:q!#W5?`Q-a;Z>e'!ih8bI:Z?M]T1^aDr6g%KU>VLH4fSjM'->d*@VW)LZ^ABV["DC>R[mANO.28WVuQ5FtqK@_nNbU
%<hRha-)@:VIs8fjHSH,niE=T6dBQt#,h?c(0^J_WP(-X+q\N$!6N%bPX@n`S@&1*kHh:m(B0#GNpLVCiDXid+)#$,3;fgsN$<)s?
%gp`K],PK1Kh]J'nOa?*Z_Ja,c5sW09"@!U9iu(.thVW5T_%:VI'lLM',`_?@qQ5L9.MHKu_XJ&eVo;&tOlr`t4=Mp]jo9!ma&&+O
%EAID-/kQ"1SJgPAhihUCNlLfm).iIO7/:VcMV:\g='PVi3rae.X%P!n6)UX'h0,dMh^e\'rO1/IVlLuuW?.`*o=]S<#KgS2aBbiR
%lt[9X/,$#tk<ZH(.b5QREFn#ZE"n4brM*OJ+=N-&PP\"#o%of1;XVY$AI0u:W5edVFf0j)->U*e-P4.%U>f+6q]641p7K2g,jP3Q
%D=,rOeG#:A=JWunWr.;eocX/sU5%Ta3qW/aiC1-7lS!N"_ZP&X;9XA6$oi`X\8?(&:>`uk0@j`9MO+]4k4IVA3n`>*4tf..@QXD<
%_X'sn?;0u<S[5Gg1U3H4gK`XF2O=)TBD.PF6.sNGN.#V:\#]m1lXaG/:CGleEofJ>T3P[coTHmn@u7'SY3a-=6*$Q*qJ#8?0=bgt
%:G_[Ool;sQR!JN^f3[Qr-?QTiWFbgMZ_)ZV93^#+$`R`bYF!s,m6AYCSV]WrCJA-2?Q(^:1ekEUm?BdTD:8)mmeQCtD5r[hS:<\;
%[,(:YEqM;>QX&r)Rdoa]e0$uf=fKe*N3E.(&L1Ml]5VajH+@0Q5PHt[m^561OiQ^&=l4R!Y&;Hga?[,r?KV7O^.k5shf.Ei9.tTE
%PH!$MM3]^PZ</!k2#b[7]UUM,a0V1HlX=?^2.]P'dg$8A39WKJB<$U[p%+`2kEU(upkhl?GcnLL/5tlg;UOm_-Qe]@pH+X^@qoLc
%YoCFuV"RQ]hlq[BjN>b(%`k3+o=JP5<M!pEfCi:3gue!-IH8at=V$9=B6S[bKK47Rl<]i]A\"C8.M@m:rO(=tKke3X*]7L>=*mlf
%bkC>?7;frNEE8Oa^2YLNh+[]0^3X+r=Z/kcG<G;>CPoR-m`\IW/2tk.F5-hsf$ggDcD"dpo?*Z%hbEHMQ\qimq,mR+MeO1/E6k:u
%':MB@NGi&!-,,sX<M*;FEkBa`Z]KNud>TScRlL1@Mm'>I(6%V"e!_3=@Vp7anoA]qe-oDPiuP#a?lEdFh?fNf2dCqu]68d,<Jt:/
%/=h2sFQ72mEitt"EiP4LM.^Ts]5P5hEFpunPg5:j\$?P1WPW_eT/rDln#$MI#o6(BG?5I-WH+QAI,#Ql=;'a:iR[nXiFlOBdG5.c
%G1Fmh:3..>.?.Q%Mm#pX>R6TK1/3sZd,X;'lZ+AFluo#IXQBD=%Ao;$f=MMiE./t%DYs1sYrTDg.-^n6$#q[6N],m4K@tX\Tr5:=
%H^XkLC3:D-h'oaq.u!tIWj'qoI)P//C.;#A;#dg?!t9<&em"l?HB5)BM-nNR:3YhUcd'XTY,&2FB<0kVJlY$<>7"@T(^\Tp\!_Qp
%d@'/u(E`5[g"f&>qo(-:/Ke$c:>_MPWPeW*IQg]bnMG['<68c&bq%A@T?q"&h/LptL4_Sd]s[1u<afJ)h',Z%@9lnEZ^\-s<LW5u
%Pm\hDg@@]0j*KUl/(:DMraofUjSSH^leidY<jmAB>,L/W401IZDiTdeM=%G(^/h8WdnQ"iP;t>MIXH"qH7,*Ql'?F[8\\$fc#<:t
%.a?K-j%acs^,DII!GXDp:9(PUIS-1J[YssOGC3!2XN%['D2=<LDP;JdjJSR19-X;Lc]qkpVLoag:`;c"e'g63H_`1DAl:"9c@!"T
%EH-n9iJcli4O5BQ]2tm^*'4TeHI1Rn=`C8L1OF$DIDgf_:M4IBRJRS[E0AO3bf-0!,G]io<>$mqo^:=]"jl1M`:?=-c]_MfD!)Q@
%jY]BcnHFdEj^`aebq]#q<C0VKY$c<*1ausZGIJ@ZX#YNeJ*#KKc*sKs@6Zc;DX;$Cd-G9lW33U,T=:!HV'YkLC]?dUh4LOfl.BOl
%R%(b7kaS!R,X/=DVsA,%[C!T?0?e#d65U1H7QX1?L>cnd)D]2nq5\SJB,os`2=;O2O9$ma6`!g"o<,co4Y\"\4#o-#Kn`'D5dK?R
%Bs]o<%OBM2_U1*$iUYU<*\6"Kb;nQ>nKP1V)CQni_+nRf=;DHI!,R?Z)c":\]Z1X#rRn:M2*`(74<6j=G?Vhd]TJ0s2Pi-/-\uS%
%XW3*e3+\>/e#Z#_1Sit*\+KVV1#>cZVKkZ?klcAC#Nq(#W^\_K`qp['je9Pj2i!=,;>LPaf0<cXDoj2]k"jsMACf^@`G(sMa"MZ>
%NVC;<%Jf*KkGm?cM6Aei.n`]hOgX/NdJ32e]Y5%^RO1G_g:No1BNZAs@q0U@R:0J%p"c\MD2&*/iL:G-Xq-qe)ZptW:IJe@>iJVZ
%7YFdlDXr`Z*r!/-N\'0oVI?QY"b=d8nFb,7+`AutdD*\[9G<,eeSk_!jb`$^F,0Zb8.b4>Fj:XX;Wf^115(+VPrbm-m?5AtgNdEr
%;MF_u<^*MKY:+IZg3b$MfX">k@i67^Xl^`%L&'eeFqfktc7cX.gU9'ZnM)5Z_YZ#:g("ON\3ZW'ZHD].n>?'sd-RX#)=e*sDS?Og
%gm.3=I*-i-gu0YiFA$T`+(uRr]q`-K`J'bGh;*=^U=5n[Wi;35kum;Y^YR,QpQfD]Ir481r_t8$3DS^kiL.ooI8bA`*G3_im+Eej
%X#YbN$<,oSNUA[`J[d5lZ]gW#]5s.kl-;MB2F,FA]%^!I?6$k<<bjddHJRp.<kHL%giLnSb&7r%BT`'R[.lhf@$`)D/MNXZT&!Cj
%ZaJiMku.KDL0X$!>=P-&dhojq5$Ie<<2+*$dF++RYrN-/02mZ%m*!@8VZ,R+Xjie<:ZVAtl\(Ss8(To'['@3]U"cA*gsa:!E%!EI
%)XW#Ui8Mn8M1bKfe)K/;b]%C$5EZ+m30SWJ?Y,PglYF\$?DFG;#ut;gq\/d6Zj`K@V8L[rPCR7&-]hol'AceQ)Hk0`0urptYkq6,
%Nj]i34GMh2BP\5_WrH8Yc-Vb+nbhFb\t@fkEbcAsk7#Vf[.`C<HQ8NeI2BdL:<NeS59=HQBCS^EgA.g)=36:IE]=Gji/85[?_)ZE
%9"s*YrS@B>51^]8)H2+6$WpeZ@<1VPF3Anll/SNamH1EoTFq9XX/XV=_<H5/4')`;)"N'$>'"$UV'Bhq\'u9bddNA5`q:iqPBjm%
%/]ZI%+!(L_\k<SP'>*M\rAZh:8%#&[/gDlfT7/ZK@`';)KRpR:Bf7g#PQN'+HC,L7;#&0!s6?SK"*G.ii_JJm^2[J,$YCfsad(\_
%E=+FmA#"YuVG9'#01;;;Y)ti)q+M#?_V4@lW.OPSqu_&p`cH(6PkL/0`R6U;72hrJb<9t>;KCl8-4rhL)0TM;V)C;Z8JTO.=#@g8
%6d+@69j5in@]6?bV`Ko8CZO6XYP:QtRhc&[NfNg+0fDObOP`^:AiQdSCrr]Kr[>dKPsC;#^sMnfUW,niCL8%NorG_#O$imj)\<m2
%0-\F#]n^5i.;6'UljU1VPKG(Vkm2-,_&:S.1+Jba/@a>XCY,mcQRg/XV)-YukN`!j:tejKgWZfLFaC<)_t"c2k2AAFg5%h2@&4A=
%ju&k0UmI"c410kN)fd#;b*ecEo9.95DtTCL<p;'DI$p$*-2Lh4I(t=s1p$K;_NhIHK1G:=C9#NV38ZA&%Bij=e^!+pq\[VsSi$P9
%OkhVUNt:DtcPq37Z@!UT\Hf6ZQ`V".8.ar"gA?MeSP7l#b"%H%G@$NVAj/r&P'6N=h;6SrH)e*8KKT*h+.'`'S*Vd(K@J;jdbSsB
%hQ%7=0BPQiLt<mFBl/_%AoF9rQJ8bD_ohT!qcSpO[jFuK.>Ad*e_q%3f-'1?3_p'1l[2"7Ls5A;$BoCdq:W2@p[0uR['sl\`s>Bl
%(4EESDD\a>1!T$lZbCg3Q!ESKqT$j[G"`iil?^M<q(GrlPN>E5o_,Q3ojUtnY@mEoWq2Z/A;bcFiD"QcZ1(di/fu,nQtT?.o7<8'
%FCVG#GsfH4h+sRUP&DE[A>5EiYO2(IbPA-3Zf,/,Ae$TZ)kl$M"STi@Xd<t3gZ=WoZuogL5>_B/,"BR?43l1?D!^t%\,!aYO;/oP
%`,<34b3if?Q@543ZeXY;,"#+'I==/?\:YX#<c*K`DH>pIV]NY7X1?[,F_B2UQaM*ml,hEP_o20rm4a!Y]79(33GnR(V47Eg.6Wa8
%*6\5!o-RHc9ZKV)An*nBG>BNm'Q<>p8e/SlI_d=7'DY>eNdSn.2R7u2lpAMudu:S=s#$&lUg3r\agW>?:"j2_qm$Op64pKPggY&m
%&@u]mV\RK9?B_GU*?5`h)_Gq'P;0*%f9uV5g:A1egKM4sAq%-hjo:=!17Pf8BjS7Z-p5VZUB9X)gTZ`#Hs`!]fpn]@in>K7Z)i;W
%KDaNT;*VI8V,nkIY3d90ZB_<%0QQ/=CRZWHJ,&jseAe5GgQ0[(6tF3A%oL+3KD%sHk3k.4V>9tP^\?Adc)2J^ER(8l@iDQO%Kr+/
%1/#+0h;-U-n_oGee&?]0YKc3r;^^T+<A.t+&/:G#[<u^Pm7_ZhluoWgog'<MNogU/G:-4gM<s[(3"fNc,\_C0E-.@@CAeA]I&iKm
%bqJ8pkFSB2Dib*iO!Kc*?=[;^IWeHf:q,B>#KL2nWHUjW$4eZ_g$NCoJ%e(5aCgS-:\.L*MtG4^odOUPYH=Kp.dr0W%K.nC#Y_e,
%':BR5gIeV$-K[La#-Fa]O^u2&<]TcHYYDd-XP*5KDRNWXK20hOj%J\i>Vcs_JetW)T&t,JD9UN;T8oVklr4Nun#"gbL\&p?l8t,>
%mLOreDZq9-gY_K,!pF3+Ml3&RRo>f#*\kq*+O[d7QbOa\85?I?_FL0`6T`EgCuXr028[#lc9aTW5I]R4G@XEFUlfK_RH7&k0;#:d
%4D3h.]%:Vu@`-9j/;t,"r/[?`2<CB$/O-kZksm2I/:2b+JKGf0do*(j!N"b65Gak0hFke<8oAe.6Lc&L)kQ3/>V3N;a+m0ae%qIB
%dD4Djluo_l,<M3/dLmKorc*G1s4St_>[Bjn/$iU9S+rN9JYV3"mA4j+eD=C,Tj;+'i\";[g`B6Mj3nU0*HG?%-eUJh,]_K]FTCl"
%M[86r]u%S7*f,n^o5E]MD]aX%R[*,1GNLYF4m5koef[\\&-_-Wd%-X_B0B.jM-M;(noBu=DHDkqfq$gL4O-m7jl@l@-oTagb4V[A
%A&6YV3*uR%YMK*"\Q'\gGG50,>=]d\5EO,@2ta+ihAPsnm@2ANG@D0NL>8)8@JSiq1rqo<)bk:?)4o)[7i?'DRZ:JP8A&>>8pe5p
%>B)ZmX\F!dSGmDU/cX0g/<*D'^L)40MY-&ejnng%:6ac,Bk,Gr9QCcI@`k.-C&@bGmS_3^m.F525`X]EnM8de],]/bmbGKeX/l!T
%6_[.?n7[s;Y'!:!gb(V1V8MQTG"5o3U9C]$r'UL%0qXu8(.M*l*0qD;CkB1ULob`>n_'ZD(H+4U]u"Wh<(L;*TBth=4&$J?Ys<em
%L0IWC,"ms<Ja*I[AS.NP<o<JIUL\"_^GfheAeQ3J:%qGhj\52%4'u>E];oPHR_,_>kJEH12`W2;5L%)H'n]0C2k-nb"DLBXDW,SN
%.A%WVpiuCtglRrCCqc1g-];/q9>@X2/h4?lh2kF.lqRe>b-2^N1ntu]GW]ihj\]ZSX"7nU,-"R!-ql$_/+fC/:>1&UcMH;NCG`7"
%RaX'nHb"jBFH$&7c!a52nO;%([LT+8^Wl4X9:+0B'"dh=c)ZWF,:gu7N5!)V80F1#>U+C*R%J?/a'0MD&8dNGhL/&gR_k;hEBMt\
%=04Mr8!PA5fs?D1PWhafp$p-jFsg>>U3i!A*Si`*X/4H8jJV_,j`c?4NPT?)l0G6J[ar0NF/%pJ`4+1mBb+A._WDug\PMU!cZqkn
%5Y8dcXumQ9pC=[VJo<:.XQ1H=cBmGW-6/tGCVM[eUB<YkSt>O03(*F0(**n3EAgb_\)%`i7LlbKorEq3U[Om+=PbKumgi8L&o8YR
%DnM^7fpp3'28cq\,,gFA7!9qA@7R55oI"_AdR&Z2&h]+P"`B>rKDH*tjAnckjEGK^jaM32.V.<>MG,N7LbC=q;sdOA5?sb<@a:iO
%Ot1`hBt(KUd'IplG6[U>ViBb80H-pNUC%<:I?jLgihbf4.3HH*VaP@T5QC4`O&i):ks&HqBsCle1jE3Me71GIeX)3?Qf#+&jC4$A
%^)bD@lP)*2a!hib.r?Kd3i/=@fC!h9V6ND%%b$?m\-m5N]mm=IDR'G42dASG_Yc)eU`si&GkjmFqs[G=[^:D]"R,%\T@>lqb50rC
%X#n:$p^k^MPNO+@>Ha#m5>c;/>2RpaWeS3-\(5tSpB[GZf'=10Y8VicccRUC=SZ1rU=ja/=e3EV>-Xd97:%UijiN#L%t.+nGo+!V
%O5]cWL5jgTg48UVrq7G?gj2Yd)r#-_1/cs-B5bjPgWgFPV"FhtQ9AmleGLkF'KR$+JG5&$nE9?aJ,>9-4rj-OL-=;NpCo]LWU',k
%F%j4lfX3i^j7fmL/h\lO)nPG+]:9bWY6`_?FkH7KnNZMkLH`DuhYo7,CLd6O2g<tXj_sc9\V-:;,n/[Q`tigT:ADQ^N&:cR>HS(,
%ShMb>)$@t-BGl`>k9b"4G6qe-ps$n`1)%+b]45FE[IL,?6U>"ujG&u\#9ZM:[MAjVl!kU]dkFK]FhI8"kD$Q\@1(U^GWpb]K^X4h
%LeDMBFZ$4b0JsgHE/fP:gK:%=_c[i%YnMjd>I/#-QEL)b)%"Wn/ac8In2).13j`,3V7r>AjP_)k-(R=s_QYkICd2@l%X3%i]H8+I
%0;3Y$RaGLi;2IOJhJ@$aaRFI/gVbV;A];#OhfQ([>>KKskV7U(8&IZ0]UkSn6s'F?00uYJ(f(9W/-FD,gk>"G-9$$(7Z-;8q\Y8]
%[67k^Rc\oYWrk+t<s(+HVE"oBVX8mLVGESU:DP*Do6%Dq*<MX`FJUit2Wc\Z'pIdQ?0a-'`$B^C&dUm!@5pN/W@*(O(5KW45o]"3
%RWsNF0t:fj$/I<Vl"f99g;IVl:lehK$-dI4mYd?VbU`niF^UG7l5Bm#Am,Mm"fc74ZoLo_8+PXoW_=VHU\Q[%m1QBLPBbj$q@#T>
%GKGo>OXF*bBFrLPBaLf%j8j!BQml]$9@k]uU&G1(d[:02#(e9B#-[N.TOqE83h7#p<b7@eJkR:;iH`Z7L6h<[i?sUU?nn6p%iCtQ
%C60eFUZ$o:-H&F'+:E_Xc/H6-8jLj8+X<pq&nXkqa.(F="nIN?!?tRr8,JbQjuJjIJ@rMDcq<N9KB;@9d6o_k6"ZLZFGD[_Te:u3
%`-SlR#ZRSLF$h<gV`D0c1_pE`/E'$lFFk?rTf.-]+#?(>2i@u8$aFPP]1LH8BW`X3FtM-_gfGlba"fn.UO??V-E.(X,0149]Kb8+
%bk_@;#i"."7)0LVVk$\/g+9M;Bt1mYKK.Et1PoU9Ns>c2(bBqZM5BUnL:$P7,.C-ql&'G8Gd>+Fgk`Im.)E5&D``W#JXTste$;PY
%=h4p8j$!&8OW"O0&W_!?'8fYsJlkhoWgEuF\a5qh6Mh`Yl2NAW+t_H%@R3ckg:f,*TTC@J/CW)PjOhBY!#`ME>.M"ihCL)5aj(kE
%d76PU+^0VHOJ/CkBXCiMECIcQ_8N[O/R9q60<p%>6.)`fNWikojL^:F4Q!QB01iP<3$K/"Us[\*Ic_]h8/SRbVFK&Y49J!(30#Lp
%M*Wu\*WlV$R+iai7Cq:gOQRN7JS<.dn!<%a-EW'Z)L)Or`I"?l2+sij`9t(uag;fqQ?]$FD6]h^BfE>#&hjqDb87*kdej=&);eu2
%73KYA"QUE&/#/NZ);LSBl,mU0*W!\_#$D>ck(SnsU`S%;+fS:q;Y+$g(rWZtm[]24Ug9)"!d\RXBL%3OgR&#dYOnUqQ-C.(TMUIq
%7,u`+W?GtOngK#tMi<ogT)eEkf'UE%1_hg26!BC!^fH/jTL5b7BFr)5"_*&=%?&ll@0K1E;AlW29,^6/X$U9+C"s8__B+@>q'<jg
%cj(#+Pg,reQn3JqB_nf.CoC=kQp`5;c5-,l`]V:LF%ktRmF'RBhj&I7L89)$B-(brJ4L&8h[u.s2-;[!#L?B(298np![S:N"Q5$'
%c%8D#f$I!a%3h#c9L^-D.);8X8ktU(:e)l^"N^8gV?#]R!9llq=+OV72unA`1L8&]8SmU!/.d7>&*IZ2s&]UZXNM*@%4*F(!A;kY
%L=/sW;A/2/RESSnBMTDcJ8*FKcT\/?'j`48;3.D]In1T!6R"6:`?=]Fbo$qarO;jTU.G1)RSBLmju"ttDc/,ASFeZ^6IOI@?pk%d
%*)1)LiRAu;#,uY^KS0eDk^k`%BGM[&8Zd)Z?AmG\.3_2*1.EmAaoj#61*?pc*'DqrOicn@TFj"(pOs<D!")MbL3>jCK8dDQf+<<u
%?42LoLaU;.&5PXH5rNa2'>>e3S\.JP/#Xb91#_^@jRW,N]F6RR9cN.EqFjJ2M"i1-KKt`JP,A9p#8&?L^`X7;=@EiT=AbdrA:bN#
%@#@'0_hBH=H"R.3Lda-U?N:\t4`I4_64urm3PK_SU_CNS4<eK6(W&fLf/@k&fFI-46T@4MNO4K(8ltfM(-H5-"LM]F1oh+?NnnC<
%etKZHd9q>,fG*&VB\:&<:`$bQ)arrqNZ<W.ne*I@?r;P(E'SY@qNCbj)T!098]8KQ>7tL6UC7CWP+a['.JXMW5Q^*M0_RI082<lW
%;MngH6s0_^>0tF^=`R5!-f0Cg(bWE0e/+S'@88.(,q5QkD(lj7**O591b^T\#)?al)T*\_AeJ^4%s_K%(>'e9Tl4Lb/ppi.4;/cu
%EBrmK_Q&gB,*#P1a[jdkKF%m4"qTn,L@fU?W,#]K@F?J]OXNLGp!bn@q5%p>EM7/%^1448,l_Dk("IQ&QDS/_\tGVl7Y"&"HU2$8
%-:*TN\V-&T_C5[7^X`jU7k6J/]hhNqSEa3k?W]C:a^gPSbE5B;L0N_6_^B$+Fg-&-7.>U96nZ@;)8;!?/2/M^&[8%UE=@[?73InH
%CdUQ@!\N@\OD1b?!jRQt,6CKgK,ToEE^^>f9R@1g3%0:o\.lu(4@/&TfE3=5$0t!a&fAM!EHL\2$XtZ#5@5\mKD24Z4[KFT#25Nj
%EM3h7O+kB&lIZ78YSP=_5gU:P@.JF\NLLM_!2LHc+KR.#A3jL)^*Z$&9U=du3_'H,IP$e["'5^>2&TRuNMO`+>JbFt^Cc8jeI:G^
%>?46.V)>b&HBWOB74!:!YndLc?jdC@)e)aV0C^O))?W80Lk>7"Kg^YDGR^rk+V\@8$SNLuCpG`_>%J\p>^P7'_k+so+Z;XipG$;H
%I;;BFO90t:+p*kh@3\dH&`m[C,Xk6/&6"W5G1*<0IIJP2,$>RBOu'q?I?1.*98+H^J[uW;k<q[X0?K0iF#A2f">UQs!]M<[!4aS:
%"k4/,S)#aWH[pnX^.`!Gi),U)kuQ.iJ?ftCP>EOAhAL$WYQpI\S6uYZ,Y\t3X]]ig>G*T1[Q<t+Ot7__RiU(@q\>@$f3r_;87n(Z
%i\Mbeeh"64q4n#K:E\e/QP]AGp)F:!#`+CR.W*'g2i-ue3&D'7$jl(LcNY=Lm+oQ/S$j@0o^Ec=p2>co4Ec6kaWhCR@R#cV*J;TQ
%k5d^,&g;9)>[qet*-"\p?d7j@NfN4i!\jet"Ian4HP;.`%m246JIKQ^7k=uCoW]qe5oomGUka#,$4[)JK`Ecr'T;aKM@-46.3!7N
%RH;LhOf.1BXsHMCb-,G`#=jOXKe":o0c#C(?"P5DZUeZ6Rmq#3AUg6k@ojS[*d`k$:m^-GFu'83R)?YL*J#uenO&BZJtg-dI3kL0
%I8r?RljE2g5[dGOkc$SdfZ;R0m&cIPYT89k5`WZcBQZtZP-Z+;L(q7h$DE7q=V2"?/0L)N2!dgW*t^O-V7B!#iT;q#&n3^1C`V1g
%P<k3^5nYV\_mb5r_:O(bfC:"lZj.LH(D$nUT\)#O<iuS]m&t^9bWohGPXq_\O<V*q8QLq-a#X9nYZ\19C;\?uLt&E-((;i1+C2i7
%ZpNVFolV9Zm>O$JiOHf_!^+$_a$/HlV0A?NOXDk?(!BJ@l3&TcOJ!;:/JK?"PUV_1JMcG0=ZM46,qE#t$Fp7qKF-qtA=rT!8lU#b
%4;PdoA6pP3M3u[8ihI5__Q?@18^[l0cXDf$5i:REUc0Pi,D32;Mo>Gtc).jgX[%p[/%H#N31@ZEP?_$^5\/5I"rWSSJ<PQXgso>@
%2k\C:!1B8l#/784I>:%`Ji-Hq@QDLo,?&83@c;+WXQKk(nd#N5Cg0?9`&!'KMU*]:;)rU9O?imn9u;<!\66a])?M'`J]PU7(uuVe
%`XWsg+ZDc:hBMN(#%@iVc=/(n*j<T"Zj+LjZL/hs-eR%4W8QkZOU\$!g&oHR/J&kc_.Lg@ct.GDfr;9M_"Th/85Rl5)M10+Jd\pC
%0Sk)s><jI4P'%nGOtuBhr%706F-)<4!P%Wki&EtcEqarX!IU(n1^/@K$cm;lDjZ37=$mN>Gs__XY0FUK+Nq)+ju&YF"C5H\!$[8#
%%ET"/a4Sk7=C4=rCG=lg.OPUSqPp+SW32^]+Ws$V0Gq>2/4^1k>VCd,d`sVcL*ZWr;7p`M+C>Xk[6u;CC>%%%:n]BN0fbC#T#k\>
%K)!D>E`Z#3=<TM7BH&,9;'=<s6(TVFdA7F?M&q2/oBW>X&V2Z-$hrbM_5n?MklHZU1(n@B'IbMH(?:5qFifag#q6o"B0n.-800lG
%DWSBu/+qC0$HCNUr.%.I8(#>Apk#1l1+58aC.6"Wh^.dn&Eb<=7laO85M1EMClL:]P2Wu$?#;S*o8pT6%7(T!JkLjPda/L7kqkb.
%iTPZt!Jk:kP<,f!4a+LZBr2C->b(?j`004[7sG9=-Wqp+TK!&W`"rXbLMP6F9EE=<K9;.u!kObrVIjtEp&VHFX+u?WKH21Tm6)?j
%hP&pp=3^tXg7bqu7ri]:+;,TV7F2ZA%Zoh,Wm4WQp*>IsO]M>76YbLhLl_-/7QF&K3"OB?Y,8L?C^7JDpq=U(*jVR`oL#91#T4uh
%J<3MN9@OY(/\r+!l1<[_1>1qP;f!8*g8_4<)GZsGaD.Ys3ikB,Q9(,Fd0GgE&WimoRPOs%`!#KdO!KOu&YX,3AjiS3W(bZZAUs'A
%"!['oR$9I8\5<;>o81RVON.Ye5Rk6e!g44#&mK_L',2nN;:'!U=ibnc81pKe#6&`Z,oreSGY#9;I$B;O8co\p'-g:gLKj:sOXX1@
%Cb/t2/HNAm+ZOF0KRJ:rPNq>RGqm0O7-HB?T)n`."X)!f+Wb1ski3Z'QW0u>?.u<P`@5S+09K(^9TReV,bJUZ#uR:lJjjq_^,gbq
%%JCVMrE-?<NSKi):XGnh%Z\nm0ca'M:]kHke?g6I$Ad.M`""uTPNo$Z.9!DhS;[`H!ZDr+FLH_sM*eWlA0[3$C^S[r3AZ?<&+h`C
%!NMZ2[m"%^J/k@e)+8!nL<R_a(.7=`aVu'Hn#L6Jrp]Y&Q1#jlL+\!g_h1D[g"50)bA!1g%EXeK&.N9qE"leDJ^`V_:W5CMR:I(.
%H?De3]81#AA^nk'+N$+TGn&F[5rEhlO?;KE*e>;$'6/,*aZb`Q6cRS\:*]r,gS,F!:H-g;lo'J43TB4`^bFSpnL,#Nds<^%/1;:3
%$k\r4s7Ck/Jabt8FO!-Ke4tXRn8Zn.QL)-m%g*q[kCk/CKoU]llWB*ZS@2p=.KdML%g+C^+oi]k-\KLREQ.0c>XM3cS!t"fgGRbo
%>$mK-%^R-I">gB:+I933X;U:c:P[gDlpF9b!0CWgNEI`@6@<8KaG+2rO_fsE#336RlJX.B*@QGc:NIE7\t%)&EDeF%cY48(Eci.3
%;F_YZ35Asab-oq.D@O_YBdfYm7OP&uD$6X7\X^Gm*>PV!'kD%dj98eG,?<4N`IN.Q8PE9YbQ2JiJO.(\ql5pTNeiC&SGg?]1'r!$
%[]\cC-"UWYl*A-.'fUqa*'[]4`mjNH+rFj8NXY'<Hp!&+U6m2NI6C6eBSjdN+NFj$jdS#q7(S=PgC3*k&",P7o!+=-*!LBY^dgm+
%DC^fcg3t`Z'Gph-o.TO3H&B&5cHQ&L"u8e1OFMe!C$7,2_\cJ86oL39/uR?XEF$g)&.,Y;5U-&\]S!R6TU]^d:<a@odUYM^>/="q
%"K]rPRIgLV&:W@I+BKlY\olQIopKgAi`Mepp,[p@8D"nB7\e<5,qtj@'=O'F6-79;m&J7nTc<(N/5=,?E(Va>5F[iFfU%4-P!P8t
%23?nIL4)'%^aD>+`CcAL";Q=0Spir0;G:oA3:Z!b:,9Ai`ecqa`&\Nf;EhgZDX&/_#G]4jQSE:Y&9H]IV!)W0"j"-^EYr@2V]^OM
%-[sQ")"]3VZqXmMn>5q'd?KZg*8C)<UP;IC.u,-/lJi::er[&]JhR]<deORk&;7!PY<hOib6=PX48G+FZdg&Ve`'CIOT[H`Xd<N)
%[=:2,`j(HaEj!HF3YaZIiS8:G09@tP9%QLO4"C$`UC3!^Yf!/h`us8]S9KCd?*791eDL`;kI<?kbX=:MdK.CneXA'0c=@"#o2u3Z
%*P_o44LU?!C'=e3OZig)8:?DB["utgZY0\F2rr'1K/6;^!06!c+Ip=6aI!%)EK1)C`t]+,kJ0!R/e+u5!s&ZQC5sDhJ)qjs*$01o
%?Wej3>]Eo.PmY+5*h,Zhce`5*a)]]BY6UP(QK;"S;kTrRoeAI(<p`SA\]$j4=dNh_^?2S''5.]:O)_`$_Xl7]BF:(l\h8bG-n&(%
%E'R,UbUDqQ!APKIPHODpIb.'m/'R#fc!fXf3[mHq^cZ8e=:#4/!V*G'`>K)7L4'db3-Fsuq%"DGUq7khI@+(f#a-;_.k3aljk_te
%n5i,Q)G1Pa7CEuQ/8*'F,8cUeQEJMF*"AL+Y+T$si+V-+10Zg]4<m?,7rsc0O]4H9VPVRbI2rNV5d&C5$g54#.=GJK*[%$u$dOI^
%5SEn&([I87'UD-T<m`3D&GLmiYso\lR)<!hfU=#jYf+(?3_b=fN#%K#)>Ps.E?'Pj";iQm\5`NRQ9+I,&.`=Ta5h=[9$)%lNmj5u
%$-l<2A"V*q+IjBe"lZ4da<:oe=_n3CW.7u,.J+lm%.f.#!t]ASB$_Q8#\TWDfl4G3o;Vs;2e:&A(A*Wk2F/pYBhqQp/"1EFC9\p.
%OG+)^5bdBA0ibmuJ9&(,-r*i@Fl>EuBUl^86p+pDa<q@Qf.;i>V@3A,\,%QXbTIqH=[lL<bnI$Z4i93Uih6.R-NoOSV-bW&0qa%6
%`1\:`XaT;)!GK[IfKhEk*LA#P6rq)=ONB'@Eq-%@p,/7V#YNBoR[2:2!&Dau,+CibVYiZ[=HhjW$$K['37Mb834Ams,XNP?m"Qor
%jKGApJ=n7;ScJS6pr/`q@9YpY<m_mu<i-baX]W^X60cK"XKeOONBJ\-?hj[Mh(_#j(#C]UX,9?#8l19]#a@p^Uq95HkZlAc4Jo7a
%a#0.=Th,\nAjJnSX6D_o.#JjnOKB3oO7l"+htDX^\?mt]-LsK>>sOFP47?70P&jFdbct.SOVgfJX1Y_9%sSEm#h3A5Q9lVI*9J@I
%A6JPm>EJVKSLBgVEL<F0'(F^i5!`58cb;,o`d%\49js2q-M^OTdV/o$i33CGbu2eCU^b\,CO*gcCir"ZM_Pe_?lYg+@CY=<Sn+<;
%S7nH4q6X1cj<fCnr%XSba+lPh4_\.b%M7A''@hG7n%^'F^1*`i"PV;Li96XRjFB!Rf?=dO<P7h4JJTCsk!&'`EPffY.6`VFF9-B%
%RsWkTS:6i]q1\gT#m52XO=m68%qh6]1tpOgZV[#hP9MTm_*JpRnm!W1iYs'i75d.%2cO-iQ$e]Cip(]Y")MUjc(Lb2io0UH7goWi
%a,,i?+"fM&"negU@h"(o0)]T)SA-oajAA1X+GY$\>_4KH*rqHN1'M>qQGlcq!=a?!B`Nr>koZ7Mke`=h-K>W6!8<o.R]A]V!0e:X
%qCQWA!lpQT:uocW6hN_FU3PR[_$nUV&W!";N:aM7=(uCY=Tm2M#/miR.C?F`^^<o"kQ`*iEJ]O2cf?9>:]M:Zi;dS>`<+cGOol+h
%g(e8@7I_VrUnP<D&02-;%hP;X_H7TnY2V+)InMk1Wnt:[eGl2]2;iOKB>rrrZCeFc-,(#oW29$9iMc>XW37XD@\HED&@90gP9R!/
%$ajrQ#5.ur)1h`/-UkO2(QZX;7jnC"32YCKf>dr'>(LrTiCWXR;YJ6Z?=NH7TgBf:"LB5C3\U[AMG`eq5n-Z7Q0X>$(@F@@LatpH
%Pk/3G0YW\UjEGuAl!b0GoM#KHI2-IbLq!F?2-)/F/p0nR1^!bTJXCDHN7-T@e0Km(]0eKpKQCas$?$B<pAkT3-#!I9\iM>VPs8d-
%K-V++TZi0VPWI6g^+X;Wbb_h@VN_:5Z<><)Qs?`96b9:T"'@fs0@s]h:]W9UOth#sqdA&6!+@mrX6S+W%1uMVp;gnhVCdSh;4,>Y
%(oX7-'T_O,2^<u2LbIS?<s"M?oMm$A+@BY$(cLHnPW^eWLO%F%*&lY!+W@>$/-pfhe.Dp^#2*8OLCp0`,(0P)(?B3r:_bm!&1d\;
%E$+4B$ZZ?GMq`Hg(*?&T<WjnF!5504B[:Sg)_]*+Qe<R"!##;a(hmM=[/r#"Q&?:q?'^%/1S%;c!iUW[$<mT*BO<i[iD"Q"\i\>8
%?)ER@p0h.4*hQ6FI6f98,-i9baF[>U;7-dnXVh/%/SI,9mi\XE_(hM&T3XlF;5<1Qa=SllHmlEOLb5p2mg'Vb%5lq'iK2P8mkd)/
%"n,dR2]FBr&d'!,"u>AEoF:MPEch]JEA>]O)p/WqbQ`\^jYCM*?9c8k+OLf,a[*q2FTCjS\T/Au5Qq;6MAnu&'FT*m^Qm1U23t0X
%M6m<)p.%T0cDFWmdNkgXLEB&>4tf:DrBX6<STD%aY3(*gDi;l#V/t9BHT)p9NWR9n4)q\cRsTIERHI,i6<UaR"(tgVC$LWr:uCAt
%GT[Eo4Y4pFBEelqb$;Z\kd0@G]%f(nb<G\LKV>:391)2[>[5/`qdcl2''t_%;8com,iEX`0Hs<t\P+'*XZ9u"qZ\0L%_Je<84.pG
%dYG_gQoEr]:fBI&e?89F))HmoWdk/5($]Uh+rqDO\H?JBS>?R^!Fja0U#+*4TLK<K/eQbm%7(H/`J,7]Ne0s[,ouBrTX+34:&S?Z
%f@5fSUQ&$LemmtXT1`A<Qc!&n2(t>%ZON6S_ePph*(Z]q90p=f.hg1(UKEQ`k>!3o;lVr255aK;4$Y3r!6EMu?F\kW>-?hX!_'3q
%A[i.g*9A#N3:]@:bOebCR:J`=/"j?!oou5&Wa\4a_GgSoZcs8XR>*_92n09TX/A6N&&O(Wb!fs7f#')sO-gi_6&!fL%_QY$Ee(5C
%2\2V'caoX!eMS&PWQRetlKaYolH:?IXT`9\eBg.a+X0(P0$r*>)M-Bs9-$%fR)`#g`,>WISM,2m(gtP#A;mT]4Vj^)DCMND3X*eA
%)dJXr+O2_r8.0ST=:2dja8/A_&AW/'E2LIJ@4:N,A@<<6#hLCK6YbS?#a]NdOMlKAEmf\IMq8Y#p`c!Bob!W;XN_l[D]qRd@l_Bu
%=.GIi8C/O!/]C,HYKk$0oD4V)=0"&C;BQdi-U?GI1._Icfo^@$Ef6>=-R8@tGoRe17!#G;4?cVMW/Z%i8(2T<0pb9s5e8jIJjl?N
%Fda\Re>5?q0-50U>Z9Mg4f!d:`WFZ_%H0<7/p[R%E=b%h+r?dX<?skel;_&knES*hbEZ!YhnXAO*U55nl2c^=KuYL+Nl-SOEQ.1(
%q`fm.+?omZ>"Wg;iZ^X=k]ULGdV37\W.!V#fO5^OLTmNU77I_]*n>s_(\5BiNuBj9)1`-NCEiSu)EC(IVS8>W^s\QYnR3A86La20
%dFj8P(8@9q0o&-LVPNam;DeS4`8q>''Z2*55O98>3;)Z0N\B)t+J`1rUV3:!/]J7Y\-Ar_gAkbg'ECWGV!Pe"OcBi!91QEbd8j_F
%7Re;a0M!ObRj47BGn%8,!W3-e5kr@a,-"a>#a:%E,riR.=VW]!F3YWcQ)LVBRN+RT/jn+s`@7Ao,17=6'Oj:"oQAdt`Sc>PNI3RQ
%F!>[6,H\f4\Y^Xf;&7A9CB-B(%g])N_Y$EC(`YW!6uu5'6G/)k<\S@j<"PNBJl:,H`&UH2\C)YN!Y@FK8p$Y4C-2mDQ]8O*KP$mt
%"brJCNrL!8eTLr7BR2)[=u[irV(b*ed-sFRi0H0T_'$H:&!/"m"&LK7!CTKtB0A+)quoWTd3@J&4828!BQ>n^8Z:=4s48LQe3`uX
%A#'R.;'f<_+/"(u:Ia:PPUCf0\dOP,&<&p?4&?G?)3`YLO_;*(;?af>KMoM$YuQl&HBkEa(3PJ3,p<*q5k5q]g[g,5,JF#:\ae;U
%GpL82)6U*Yk_(1oRk;]Al+CC^:qQd8l0A<t&6<,'e6#6`.kJ3Gj!R6!%pKlC=bib?k6Vd:"Mtfi9Sog3,]Za5)?L(o]KaHL\-7gT
%_3Z8JN>pl>(8a3?AN3;(*]:>s,"'d#Lo+khU)<qG`+B8_?I1&2:"'M=1X\Te4<,Y.:GB2o,RC;+m9jZVk[Xos42J_Xn-`%Z"B,h8
%"B1)N7-7?F>JXGQ.`,2m@e'srIg?\fElXb%+im3h+AuVj3s?kR!_><#k_)5o/I:_d&$@MmZ#R+k(r?8,3;*=Th@^qN^U&aDJF]KP
%$@,o:dlnf^@n>1qJA25$E:HIM1NZ\"86HuGK=^JA.npN"(-**rq>pOO^.%4c.MA?"PjB4=h'\8IRs?'53]XLe"\3a7+?UfmI4!-/
%fF5/<\j!^i;:G^s'CcF_##uM7RhS[b6r&Fb<1f7hY].ud_\Rf`$:frs'27em,scVI.P$L3,rB98'*,N4`<o*2q4V*4`HaI]$C`aq
%3rI#)"49F6*\;oL$(.il!-R08TSJ;:!2B#N,sDfhmXst_;b0+6nC3YJ:bN*LmQ+5s@,g-Gm"2aM4N@a>gP0d#PVCT@aH&YiMa>'c
%E0LG9Xck`pp#R&#(u6nXW8R2VW%R(PneiH6/749u!0jBk\L8,DZ=4)M(F`1VNBZbk8-9*O)TVT4e;j]SP+)i0!auIg;Ed2].-qd9
%QnGo>KmaE"iMm&483#+S)2%jjlmg5=]-btmeds5@\.?)/`<gJT$,1BH(S7\l6sFo9n9[,eA=aq6)q99)@BUoE`!]13!h_e\,C!*]
%)sQR?"h(9Ee<p`7"_B$uU#+*4A>M-F<ul/h-[YZ0P;<=K"D@i%"!W0C(X>IC&kj6YTk_K^;+B[SdSRb'%'lqn80FJDNe@JUGHcYe
%MMDc-jbAcuno3SZ%%DObOU+I'2k+!(&OE??B+k,a26QgU0EE$M'B+]9Ya5Ei]TLO*a^HD)#Hj1dhG'hI^pi#oacF'fR,6fV!G2JW
%+NIE3,N!04h:+C-n%qd>D$,mqDPZK4C'D%d.CF[5GfktTkn0kE34-VX,iDjK;r>a_fbNWT<'\/X1/`5&+9SQMVQOlgL[AeN"=Ohq
%.0GnJ:V9T=e2JoY2i]1Q'/X-RViM6#SP.4GR??!\mRfVG3a350.A/pq1/cN&$H+G$+8.R.BIf+%%/42aJ1',+(3GgGcS,iQ'eB^-
%AbE<A02K.QJ@Rs$9!sf>2`aQQ.^]><Y)K'0NMeq>N(<p`OKP0g`ZDMP2KZ5VPQ46HAD"m/;Bj#@U9b"Ri.mUY\,pKh$4so9H3DA5
%^*8/!R@0utQ#=Ds?@f#;ZB7&d0Uea]7;!!/&4YaC0G2,t6$iSP"gNt@g,Et^!#96:gF7H-N&E_68<\R0E18+>(u`mC-kLZ%L(hu]
%m-6up'6<?A@E>:_iBBr9f&Nam@k%]E@"kpk!`K(?hIbo6%f[VbIuYdG%kJ0Ar.stcMB7oS"T(O;OT,?9*=9<u^Ak\q#"N3Q>]Z02
%fE1K$`Cs"6a1I023ZdYEs7a(l[.*eI5'K2S".k52Y*%4`fk<phd^LJLr`dd9O6C@[3J7Jc#0U+m>JIf"=F)I[56-K1qZ1Vn19e[M
%R.rd;MV<'^^ZpR<K,-a0=2)hn1A98PIrlWN6Z.XPlfc)kfGXRlas7#hEhM><YNrAfOQ>mg%BE03QT-SQ]u:9&d/&#>8Bo8;6akaB
%a*uQ"mfnBD)T!r`n)S6FmOFgMECUMC8o,R90P.)<0#1MUPk!XM>V:No\i+Od-:gYi=$`4&2#"'.(_DmNO/o'dn'sI6UF]Y>VqiJu
%oQj+jI.^Z4h_I9ZdF6ImQ$Y_M[uAM(0@0U8ooA_"`/F/0h7,`E#k`V2o:u+rmCV+t5nL]PJEt-(3^dKJ>%Jnr-<E4V>g7bH`;e>T
%]ml@LfB3!Gl2E3)#H.lpY7;!1b^(\u%,<UM,_3eN.%s=b*qR9RIWAsMr92\RCYR"fUF.T0Ue[IS(Mu#%aZ'K4_+:/+?%DWobaE"0
%@6*16Og.Sl0fG=AI@F3-mPVE7pYiZ@9b*OQ"/Ki\fbe)=`#WoN966[nAe9\cIV[_W?qS-0pJ40\J'ZU>_#?$k4n_5WoWfQ>S'2M\
%II:'mXUo"6id[5Mjo92^md5G#]cR8g!'og6I3HpkZS&:P4BfOA;4d$ele9:$Rd@QUX.U-.YNC<.qn>sgZQn0"RMXpq_^GoONG6F/
%^8nth;sfbE/pL'f\KBYIGS!>6Q64sC07W&D4[rSc1CD=`D"[+t=SS*oG`#0\n*Yqu^>^AuS6]dBi/=0hKcd?hbcRoKOFZS4?[qnC
%-p7&BX%^Iq]e/'R`Q9A\OmQOi9,tsT;&7Q%<k/]DjCj9lJWtA@d&S@t-p@)WFS?OK1UV;;i/6(_OW:Dr/h#)b])VV?fZ>#CD]+$M
%=%i9p0nPU]eE;0Z"RUUb3&7Ql2.aKJT)mi\@IdO3W&IM_*g$B1[9qb0fl\Afb'7i,E*;:F).dOEbLFMqWk.(,(2+f^b>1DZ5mSNP
%RetWPgosQ5'!ffu,0u29;k3'L0Zl`7#T-9u_fo)i'/*NSp@D.p"_$,/+90`*gqb6+O$IbR^)+i=m3FkrR?Ro3`5lSZ^['VG&Y&dT
%HIbrT-GG1PF2.SM2'B+7a*ZU.(UYs>,0Y6(/,E9=]Z[No"oBco9W,ECh8X\uZ9%`aIQja8g>mjs?[_nGd?OKk]#qr=osSuB'i'>`
%kh!A+f*K+CAcm*7FOsQIEtrU*H$TESqK30I&)e?[#jj_SA.lN+^fAM+A^\Ld[57X.)Go=0RFD%Il#-7pe]=MD'3h$A<#hr4`@*WM
%.TC8U9*I^!FK)dm'ON?HQG.Z,:]AN0Gosd'5fY:rE[LC'Z>\:j(%?#5<UcANF$I6qnXOM7Sr>#bZ.(,OAX%nZ\B#Ig>YRuD0R`#"
%b=Y?T$QdITe(jD0cP&>>kB=YbGU>lTY$l/kAROZL(/Xh0]+:VRI]:=@a]/o9d?O+^IeOd7D*DaX,gbhKY]6Y'neu(:@XBHSl)JD)
%?X5WWLibbu?ti^>^O$CXDSB/\l'sG@AX#7IAX/*d1'$\!9RPI"M-aLT.)$'i"2<XSIeOdFDrV_A^^U:9(9o[J-qc@N&4)TtfmBP4
%LPiI/qHX.j#%+K;rEPrnHS)Gu/7;noWS_K5<'*`E3m6/Ujt*11Ndp^;;%MjdSnR&>X2D3rjKrDcqkDdN#d1ZuggsptDbG:m&b7Z9
%5TE%>n(2FS=CpL+3KjpgWYU(=lk@`sX%Zn+hNkm%Mt#=Y+O/Mn=3!=fKp=!UbGK]/GMUl-#I\N@bMI:&>kYW"X4o-iM_PF!UZZDZ
%Lqr6MRLc)Kig1`07rR",\4jNs6Od=,7;0GBCMX4>-"HhfoI<;c<ge':!ttZ:b-/B73PI][>jHF7oWQ8`om/k5k<J7"OkSfR.[pj/
%nu<dY<?1J/e9-eMVr0U+e7e5^T.uXPm-iC(heFFpX*0B*S;D_GhG<>Q[)__QChG<Hg<VrGQ8J%4Aum*4FQ3iN7Tm5'j4I%I`E1TB
%_LPY@m8q,63mIWe2TG?[_"[^XP7TM[]_V\.3gZ>qn+<_$VN3u:^>,6!m9FO(CVRIZ(k6+$#7&F:JZ;>'b-]<Ur8bhfZgYXmW('=u
%qC2TrY$Wd:]m0`.]Sd4HQ5-2.a,JYCP@gUD1XTHMf3).Yo4phPEr4)%C$f!2*mZreF[*AmplY3_#[,0^osP-PG#^Tm1t__0]S1/]
%c$XXK,:HW'0nL#_aJrFh#`9OM/!VoBE]SRUSK[Ch>59';\/maml$P@q.]4Jlh^3d]hf[tcU#8;_5KZ"2iiBKUDVst`]j9]21$]u@
%0I9bOg4_B-"16q\VDZ5Yh*:FA3WbR:ran1m7n9mB!I[CI*mm(HR)Us.(2O"THr(Bu,qu/Nh$:8_R7<=L)`7[j"EPo0%l7K1Kh4Zc
%6K/AEV1<QMVtMmJShboR"kfXql>FBhU]_i]-Emf-]EYp;@T1*B[;K.]O@;^$"aQ0%T"n>pMB@gCU+CU%?h'c]X#/F^:g!;L=-@9[
%#FXIJ",fb70Sq*V1"Fls`A,:262jALQJLA%K<cA9I$AC"bbja</S/u7<PBPSi:?3]36V3qJg-Z0e(s6L/dRZZC`4N@H<5R.<.Bn+
%cds+WhYnRl!b%=IhdH'#oXjC6q-hfdpJp^M:3/Y2r<,R<+*#I-Y.;4u3Ep?@6/e-arRXOj8a2?#7@E2!4"]9<`<[ZJ#]D"rN.5<j
%lM7a5OMiurn&87*Y%c?T'N#3D?3MR"q)7uZf2'baSc?e"XMCjD.'2;QrSk#lB50+D>b:A(?Cnl7qsHA^",7rNac>To-5_$_+p8.0
%/b&CU?3a+>L82Dj^G'(QaP%:$cRDC`2mF\1,'VjkJ0_MI+P&XYbq;BtF";2Oh.G66;U]"'*Bi%:HY\f&g,aU)$]R8PmnkT/+8t!B
%%kFOb!mel&8T:+jI-Tlgq3,;NXIT6t**88=2R"XtV5eM.g2`]OkPsS]NY^L&r7&l/!ot/gX,+U+N3_q/cN`6T=$<09XSSg/$6IZ1
%mROaY__16+$d(cWI-R@BOIfQVA`?ogr_-5_^NFDaJ7bC^PpR\PY3(3+)ZsOcl2AJ>5[]Z'VCn(HS>^TpXrJkB]1b>Y\#$^G(]cL5
%ni8+^kZE&AYfam9T="X>f28r!cH,4pQb9e$ND&-_dbS,d+=h,K7W@;^a'&sZ*t6tC4^W\e4EZO5^LcEYrO2@KgDRhah;+./]?r@U
%U+##hjh'gT3+D4L/pL'f\KBYa1U:<t^bm?F]k1gNB('L'jo:d3\'18&e'_<9mu04o5P*KZd>d*eBkgNQ4HKHCqu(t7=_(jBLC*$;
%CVRL[2'*aOS;-bJa2VmO\DW:BqQ8H.`2PP]\(hiq2"murl^NUFj1Bac"]17WQ>QtaQ]HIk`?B=,:p2',']0AUIDqpqm*0fQZ/dCS
%*`ecA9R6`7g3H93Vo'AK<@22ADbG:m0nLTgcZq`JX;T&.'-C!(IeQfY^[Gfl2<-/"CW=oQh-5hg#c]J=*fiS)GK20HlW.ToW`K&:
%!C6I?M0<eTR+>>#GH9,@S5Xt73o:1!Qu]sC2!L"$%Rf/rhhWS%;n\<3\Ke?J[e?cVpNRB#]Q9^IL)AR=^XnUhqK#_!pXpHUK"I*R
%VjX`k@K[IfD%N<;Vj!/"ARUiq!kC\Pl)lq)Oue3jL6oSb7_m4(QL<U="AAq>ml:IgN&;<&FY]&XbG=_s<'+_$Lbe8-\B;a6n[<Q6
%(2%mcF^=1b3$X4eGT18uED;L/B*<(C&\M]##Yn$:]5`aiK-N,TcN5ifff2H(pb!fs\\>,97:Lp3j1F5(S`YBC)rl3Bf$h69N"OG$
%'TR`aT[VFA_,[nW9?'X13ZSB413>SUF@[BMpjHI2o<j+o(FpNLhNu?P_0=]oJbVL/YAsZ<^0CL&2EZ%8d-&L@k0uGN*]=n'4L!V]
%?1/257DSi%=BJ<sh]7H8nn`K25)]Y^SK0Vi1hf7.NY*)-X6t3KZlNB;>OH=4VmYF<L(h$O<J!8/G2F(84GAn5k!UCZ',3$uj$2b9
%KnFHM]0q_8bL=VaO1W]r,.eK3C&CRWs0=&sFB:T`W4]kYb\\am>5F9_o3./;DJ_50;jsl(Gpg5(`4`:=(r.TZmb\e_:*RF11tO#o
%2>[;t71,e@C^7;j`3TCA_4Ul%1ROSS9#/=<pp>)7'2bCCl.t_9J[KMRIh]2'j\>\N>jJLNhsa\dDsECANApON:&XE4JmX?P\8P:0
%8Tc\K$@5V+MrPMSF$^cCUq4;e,!.M_\bio]Od+!hl</Ep`Zpsm\-(Pd=!UZCAFqU:Fm"83%X4-if<\fFI07cU?0-L^1sF^KT5n!q
%^N^WbI?uuJgtU7YLG=ndIKq6<F.s@WX=$QD]s(`Vht<m:LuL!$&W4&oT,i5#]=`%b;s"o.Iu]`Ne2^!$P$Td&dCg:XaeJr$=Is&S
%35o8Coks&-NrbPkBcids,E8!;<>eoI,+Yf,TEf6P[#\nC?Bls/o2cfH9i=@nF;^R9B6,R\bbsr2p=V[fj#TbplInH00(OVB"K+25
%D"r@/Pk_,?$ERfr*U%2VW_"m%!MNqR*9-p<D>G+0Yn!Cc$GnXo4TiHs.\I6n@6Un^#j<t%22nbq3==\bE#glnFA\,16:F>Sgb<oW
%&H\P-X,9nLE`/kGfT&qg5E(BE^#UaWf+K&,T\@FIkHBq9Qt@FIAK&K^n4UjGZY3KOM-M;n<9gZ%DBdtPm,A9)e<AbjKM;@Cj!1i`
%1EDtu,FAtd$seA$X*Mumq+:djEO6+K/3MYJaRQjA?HHUB*:6M;G)g`aF2,<b*$CW@^Q^I<.bLeta'U>k6PgD,H@tPLXW&SqW)"^:
%hZ]q"^96UIoc""eVpY4PI;#<E>+?oU-69(Cq6KJ#o6jLZm,sMrPbWq&WjfBCh0M1:(Cta5S2M383OW2tI)e/?b*c#Y@#IF\;oU3A
%X-L;t(r:K@5UD#^qk(*tQDt@o9U%AL=gYbAh(X8A1.S4NWut-s]=D;IH9eg-7cT:.Rk@>hl0f1l9eorud>Yl<44.'LL==@J="sd=
%ID(uu2M4'N=Db?>7$t!QG&UM=fJDqNEFjN%\pO#Sf'u(Y.`+3[aQLn8[E64f(q^DRU:r,.2q`N-pkms\288'`m8oo7(=kh]h[jF>
%X]%p[=D<rXo>!A"DaE1)?Q92nT)8@6K:@AU?S1)``<ac@1L=Mt>4kmKp"LaZkZ?Sm-XAocJ!KWgo$uH<[iS>,OAgK!N!EC-DX4c'
%rI!-Yj.Z$0r_Y;fF1:l!D2dX?\bR;p0`8nrdBPII;KP=&rl-28c4kOtN4J7bJD8]:Z[rpK[kK+KS^7LRU'<f[o9UQhOui1`6^)Sb
%W41torp/SId3JMO18*---I\3*'+-nkV3@B(PSjD"C<;T+QQ_&M'?PZ9iduR&c[-GHFS_bW$_EF=9\JmFNCcA&PoJ_s_lIitl2,^J
%%XS)SlMD&2(X?*u@lhm5kVgG%f!9R4Z0YRP_^N\8]hpCS?WGG;[EiU`<UcANF$I6akN@7tcV\5N'-=BC-:]SfX``0bYM9o)EjXhj
%CF;;b>5QieN9B8Rh%ZmD@F&GJL%BAQ;89-Fo+Nk(mt/T%RetKLN$il"+bptm[j0H3fks/S;XI[=gquh0Os'9Dj/(dNjmFTf5eYeH
%jZVkdlb%*_+afiIEaO=$s-".GPrX,@Vkq#7pRQF42PmU$f'%glI[eWppt!,c=ofQ0EX"@J[J&GD]<Jc,/7(sFi^ej%dKHiVZa.cr
%lR4(+gh8IW#p@/`cGEUN3/q`KO9TL:P2Y)5Vq*^3n"h)B,W&E.(eUI^q.ZW],7"Q(I1:!=TUVG$VHP9#_=`O.F;31MCG%TVolm$%
%ZDCGc[AcZo\2WfZAkj$A5GW#u:3?*hC;A^Z%;cRsq6123H^KcZK;hFn$U5%91=!KQ,.*2=e6IWV1u+sKp*rGD]ol('rZ;[5X>58>
%WSJ1kihX4!@T[&BPBU1]2'n)%JGMI:<6:kRMJ$%\BE4V/@:e=1)oA'mS^)riiWQH#V]\Z:fAOctrc0Ah^DdbGM$34PA+dZ[I<^Ig
%W#i7OLoi)d0gEE)XIr&V%!7sg2sPG^'mlQ2]!i)AFa[!>4h9_hq88`WF3N9lA`R)ipL+q"[oZSA0"Ce_N4`^3bK/Gdh:oQ'[p8jb
%PNLMqSS;?Ho;WQIks.eirBc^K&Z1]`!>>@Yj5K[5(DEfuWN'>MJM^j4:r&g)(?Ya3+&AB5`j;`d(J-H@/^GT=n_BD+7>5,o'!HMS
%7'f-!a9\E+"WP-)MON_o&?8(-`88u/Ld$\D4XUOhj%&rGr@q5jTXMMqHWE9(P-E)n%6\a?B"@p3]u'Q-\'2[T]IhsQ`>*1c"\8?P
%_@+$8+@1c*:/K8e(DeFIX[A"Z@7m+I@<X/@G+1=C,'@&>`_5L$rY`TWnQaG',F)WI,,OT+qjo\l?;^tCS?6\LZF9D&[g.dI4=S0I
%VCCZDVq,,@q2ps(aoQiPCZSAfCX0*J1isT/P2%g;i1UpjY]aj_Z:WBumtlo>Hr5LIV$L*Hs5FsgAMSta?2(2,aT2UYaorXODXG'j
%n0=HNPmalhX#mf`gSB;4lCRO))WSBN`H^h%^:QP"Ps5s?NnZ?t`-TC>PXV6Z-Wm<FH]p.N&?Ihg/^r_h57Ln(KqITu?h]oZL,jiq
%>umAn[5?!<F&h%Op')Diq^OG>nU7h;X%SL".\;FDigb4o2KbEEfhq-!Nu$ok]1h/9hNmTd@K^q5D-eGXB*:$UV)*]@Xlo"'NZar+
%]Of@o:.oeLi>>"[Ibg%MadNR;9Zk&)$_aS+Qc=@"VVX'UD<c!&m`ct)-TSU/3:E3TLm:P]/%]6Z.">58ESN2pnb"AB_eJ86.utg^
%X0H;//!8/F`8)&,R4-_hb"PE-]QM,FTk)YDorB3/Hie5-^\Wp4!&<leCC>P%7KL<@^2BuFb&5D^9N8FpbKfZpm>+\Q8/(H0l#&G3
%8lK5L1Fs%<2lno_2AA?5C+$g*%hA=`F7L8G96[u[?[LnA?LS'!QLRM.*-n$D6@%12F"Km1HX,Z!g#Hu;]A"/u^)lnQpkA&()!g]T
%;UJ[Q]XMXh6@SU'e=D3aUp3@0^Uq1RXq]@hKrX`/F-0(_XYNWD5`0s@WeW8M\XpuIL8PGRokrrn0D@]VIQ(TW4fs/M[XO]&mpC4`
%o,4gXhW<bmgoZ!K)ZfI*5IuKp_?u=T.#TID`56^eRm(<UAa=P+Qr^g<qq5VT!lg;Q[e8tPd19siqKhdTUY;,u2Qj52b$8;7>Io.h
%8Ar#ES!WA#dah1LH4nh)%pr=T_WtSE\-jA,C$nL#*Y5FZrUkBb1<qdfX%[gtp1()UG[4T#"kP[(QJ#o?3A'(#Gm(<5+8A(nHK;DS
%aEALLnH`3u)46*tlc<9W'%bu@m]J[(o]@JXV+VCN"L.K7UdY@Qa;)tDi-_TZ`.<HB9:>cVO="fYVn$0j`d#;jb;2BI\eTjN[83")
%4Kgl08s#I,V'R"Nj/#t-rhYk_4A;6F%J$>'nObKHDno=+^?[td?Ac=l$NOKUg@u.f;!mlr/\&DeRLHAtD14[&,gt?(,UM171hZ\@
%q#p37b_NT'IpT6KeK)f*rQfu;dDlg*GON6gB\UV#A!EgllWeO5]b+oYrj`@?qWDV]=196s3_;;qo%D"iDP"OKUF^Lc+Vel+GPC6I
%g4\uI8;aJ>;\19el:#d/]CgF2.k:S)p!Kf./$.VT_+29**h;JR>L-U#+5U(7hq`T@="<7P.N0ZR9X`]KXJ)]G8M(jC)YTJR;7s$d
%?$QRC\GH%;GY7YJb>t$Qo?&3i[B@9kIm6Ta>NRJfDbG:m0nOKEIBJ5n*iSq#[7uD<l;mn0/$;MhBZ;"g(7ap7T%8Aa).VW:2&M.:
%D<q[#g2(`gQtB>("sPBJ+$).Ts2eMf$Z?R'kJ"r&jk>4\)1to3a"#PW>?KeNWj;+g5SS]S7U#@a9>A&smr_m%fqZ]rTZtUp_Fi8i
%fh;tos&D!O*s$->jGj$g#\fm[^RG&MDgW\r/\.G`,Ufs/dbg2FRei(MlM*OQ'@p1)L==@J=7LO&-jm*g@4etk/boroQ)WK\o":ua
%EZ<V;IP43oj/WSA^%JG&]/Pe$D`oiZXgm4)N+fDWQDmBGUl;H0,ouApnB>M,/k64MS8K1G>lD1u"(FV17RgMAT+XB/;JB?H@RPp+
%)<do&F`$uR`P(igJm2R2\%,lEC-_g.U=Pl5Q3aI-LqNYL[;hgOE`<E]\kEo&J0X"-LS&Mq+ul=b7t/Z[=E&C.EsqCk'SHHt1/bF:
%8?.BR,tODaf#-h(6t]3=9(5@p0qaX'(?/$64&>lPfeRR9P=M#T'DrDt;$5,W0"bYn@YWbSZtX&>AtIPnZ?dXoHB&h2/M`"0OP_9Q
%/(iMU_/%sQ[T>Rq;1URgdNf9.=dUJJ-SAI'Yi(bg]XNIhBME5HOAC9u>F?lMO%sTbTB@P,8+<mRF")<(P1g`DXGB9j+>X_CPG$+A
%G!-Xtm56H7e4+t&#9=IcdS"In0`Mmp7ZsoPe<q.ZK*s`f$W<SFAsRU=UF\Ap=0aYs_'ZRcl:N]hJmS\#2EDfb_C+c\:`Zh+B8E)k
%e&1h?$rIV9\P=/M8sNd7*A+cEl4m)'#LXaP2W)es;mE755dKm_C._A7eieb@5'p:9F=0$M(9WdA7?[]`<<3h7p_#Un*>=s!BVfE7
%]<i`g+L3Y8Bm*L1Mge/s2#MHOb%/a&W3m6(8;;-4ZtGuhbS_$g#*9:o$8C#TbP>Yj]??F?X@]gc*am>P\=k'AX3XIg/8mDl:Rf_=
%XZK99!9<cb%h;Qj>Pnn0bougf+].r5W=-I*4'R1^7FMNkc6VHN";VgmpbRf+*0C[?LDXPk)Dr74arEmtSR.*$Pi:=gSTet*:k1i*
%Th\ocWe[m[3N\mLX=i]$]-%fTRs0B_kiYK+#W(#SRd8mc.+N[^JE2)(W(9Djd"Oe\?!CL"RZ>(Ck=uANn8U#-<t0jGC(g@IP2P1a
%Tp(q&`F"]bh:uk%X,kPe1!N"gWAff0p%#ces$"m&Ts+l:Ib%4f,G!V^R9KsP6@rgYm1@:DV-CEC+fX@pY_4].Q@1DN8$E6M%Mn0c
%=aE7`V[D@@>Q$(>mg5:2lbe>aO%N"MH&2U\fe^5.H6(Z@gso&_!'P]QX!DU`Gf)d6TktjC;c3`?\IZ<mVc#>3Ri9eXS#8C-?%XTO
%F7`Gq[l/Wgh:;ahF#Y[^]SP(+U=dhMJ<6OgE(e]c**]+9Bgq1KjPl-_SBm89SNl62'IUgtHp_6eaEm`b^5aj--kK=0n89P1FdFC9
%J1\1=k4NG>2kNui6_"Z]JQChH.;abp=8_G^YAY1\>8;QcO()UtB'Uc*HnF5B&PLXUQr;feD5(F<@Z'c&&d?BZ_F%_!CeslA]"a\n
%#nmNB(97$B0:k-Nj"ak^S9fYJ/j?a^U`WB6`1@2dVV\Z6RSYF;fi+Kif^o&D;A->;gNCQTV%AUEPr(CtbL>@%6>=U4;s28VHe':R
%LE/R)'U5\F_&#U]90dH[\%`MF.u8#!(F(.ERRNa2jX8$%g8>49ZF3k]B7+?*K)NNa6u"^$[@0G''S>:c)pN(pL0_0TdK=J;&odYq
%^8*4/C?ucV2aO5dP9q;H'!Be-ATm4+NPZigmW/_[Q3OK<cmcp!&%7eKeJ1giDp:gcol1WoKA^%uAVV?1!!oRaJQ9X$il!aadiZDE
%_As1X]8S<\$\>#fJ5::D)3I>S\l]NOQ?'Ql5o7ic2Z@Ar]?qa#.`EAcBa4a^"^o]V.c`ktpPH2V="!Yqe82BenqGcX<-_4U_ma0Z
%H;o(LEHmYC"\QbQ>C/r+?\ZV)`>QGS&k09r!(J4p+o,#9*X1.*MOf<CBIi.1RVPdCQ:]51/g&HPl?\SVoX5];p*Uk78I)7"^WUNR
%WR2*71pa2k,OsAPHNQnL>rR)u)K7:f2T#EsMm\lFR\tZ3WtK>C,[!GL-=A1E_SJt/=mYcU+\+,,1QX=[!=QdXA.+E;kkP6KQ:,X`
%iT-`0%1@'l"mOdZ/R?)f%(R]F17tu"24shN$X:V*5<?Skjn[kc9[fVf4Hp9gnWrn%4UX/tCQ1+ZXUAA;0Fc8\)'6'_JQBf4bK%!$
%P68(tKbq8B%hI0PaA\_;2=O%Rbn"+IH<%8t?R=\p\+8O-nas%=c8H\tHk'5;]BjU[2n`M"dm8d9p^=2-].eF*Y,=um_Ee4k_Ha7%
%j60j@.%6Q8U#H?m1eb4Z"a@i_0dt=V'-$(r!cFsuT[0tB%0hNX\'Z8\ME;\NB^Gq6X(..u=>BOTZ]M]E/uI=kJJ>1CN@ABa7;Orc
%PC'a<D%5,J`!T/#YJ"+2&3CT"g-mR0Nc[H<RS;3?`8@>%e):n&Jq.S#0(cf?4r?Na<r:[O)mc>tB[AfD?qP(sA(u*9mXZ]g`QmK+
%&2JNFH-XpuQiR0l@Ge%Q!Mk4a[l[hrjOdZtHQ^=GL?6Fg0f+*RV.00G=ep<tK\QU[*i+Bs8fBS?H-X:4OI5m./1/G<4\6[,iN(Wm
%nQOt`nVJ7;SuBkQ\-u;=V<Ag;U@D@c.lH#$H!Yk,,0UW8m5B^t,L^t0]XeK8JV2lkL<P10F4N\4i::M5N4a&<C0IM;q'8OE!G!`m
%ig7+;fm"*(:hW@Z`m0-$)l<ssX!6g&VJJ/*.!/-kJ8l-QX5^UX_dW=?6eT/:iEedl"o#?j8=j25k76I%4A?p75Wo*IGuA1U9h?Dt
%a&IG(9GM;%-%\T.N:rDZ_PII>M1Ka9E"W[O^e&??;jLGs+AeG+A;X;eMO7;;==rCf_0;$R5r-ZiP"aPZ9Zn-_L/'0/;fl7\n9/bd
%r1D2LnR8`pk-Gm;h)`9>7YT''JdLe+:_eA,(CG`6"FPuPbD1UnCiFuc&>h=s:#no77V<oC$qfu"(ghq4"c*H+]AlB,'N+hak<&!V
%9>%M!3Xoh\>`<pFBF=EM&tB4%Wp'pg7OOiEJ1Hm9?;fn_(L=tpSt3L#q7:as`c)t&DfEpP.NhinpFOl;,S<'&,*YrAc(/D#%.Z?H
%1-R?2l%m'L.Ff1$#g#cGhh>tt#>m0K"UBO%*qg5o"#^g&]AXV=4<;g,:aBMTHg^M_@BQ2gZk?,;SYqm72?AWo\HNE(qdRC?A=L`a
%*%"2iRDWf9--u1pj"eB$ci>,hc:'ntC5pH\%@SUV=_I)K\1e?)'A+?e[>:FR+LF_QKG%N-.F>f71:B\`ADfuQ8mge(JkIdD-'i0N
%r?*<jQUP^p;\_C&N=e,87R^15/+0o_'W9VorPF<5=>E@WC@gQqq;3g$HX+m3>?5;J:Icpm`\5S!oT/nhWS\[8+3tt1nP]423_O1f
%Ge.:#<dO1TK?+7,!(tka1=1hh"35F,Y<7p3&E9Y4-"_`iIG:21d1<86``3L7n]ir[1DL;%n4J9qdM]^q274"bYC']i9t8mEgf:@@
%//N[ERAVnf(QT41f5[5iO`KLLr0i5@X-3A9cX,f*MGJ=S\Ms%RqQ+2&2;E:L..j(?Vs[9A)de8r?E=<NHGtu0k$Z%*LkmmRpFR/D
%kNsa=QV@mE^t$D>^bac:RYbRtjGC:$%1Bjkhg'I_'l1n^,V+dInujfUSSY9O;h?`7.AOH3*DRf:!U=itDhK_CaB#b4<TNiHRE6o,
%cI6u?A$KSK[%/P?!Q*>U0H?8Z/b,F3F$/6>/#kp3iVt=E[("\#L(X`9J`+SNhi$gPif!-[ep>qR"s/2h\`/aeREYR!ee1RmA<Fp6
%XT^o1S,1`<>\6<1S`]I7k;'V_Y[`XB#-V%Q&^st(R0<"NA^3,;`ZtW)2o$Xu<Aecp@T8D["`.NCHN&dfBh@Ip<a=<cRUf)n_3oFm
%mEFKuWGu#qM`(ZRLI7#fch3M0SCes(YBm8#]BZ]>JJ;$B0(C>Y11?WK0@r8/WK]NeYWhqnEJk)@j0G#K]?OjrDXakFS"9ufNro[e
%4tjLL'>Xq1p,):n<RsUcUq.7]qcO`Y$`=0C%<i&_*qNlmBcsF.4(5"D2k(a1iRK*Js07l$BcQ%%Y-F%E$q*7OV47igOl^FXeV5NT
%3pLZ#^aX77K9<ueO#mSafkGKtR_r-T`Ak;Hd)H[j6<Ek'G69h#ER#ee-nhE]HedWmVc>'WioCUM%/`A=q?Y-W&B[,e)s>js8Ahc8
%.cP<9!9)-N4;ppMmh+03F/eTq)>>KD?S[d1ph5,Z:)"CtW?+2j#$jdUak[K'LQ>#6+-'?IpCM/Y3Lu;&Yq7-nC`nB/-Lno\1WBk7
%6[l,M/LU3R2nI*c=3W.2pUJ?'LR#l)LT-`%\ch[_Xe`:=+[3J_!TZW`X![\?pK)pg>/JF'-])K$rO08#Jsd$`f@aXYY3)ooMoFEt
%*'4OH*)0tB7:7d,/9cmtK428\Ol_KJ7sq%p]S^fUoBHFDVGtYV4Im\hCs1NPSe'jaW1?S8">5'&R=96)=(/K^s0dj0P["g`V!d@\
%*+m,o.gcM6N/!\/iGp+9g9UhWDG4)T_;(Y/FDO'qkEX8&72egrWR6,h?WC7Z@:a1=3,lC3`rP%`'G8MgXPa5533<=eT3oR"_mom]
%1=Fm6Xq"J"9))db=l,JcQp'2X2h:G^NY>=h7@H`gW@Q'e&9E2>@hhZ+?^%+am*ln8<2qfl(W1,5&oRPG&ETD\kU%$4MQL":iE].j
%]n6QgPIR^XDCY[Wo<X#JWUn%cEOLG)G"oQ#Ej-R:B0T+[&ea&'(So!uSp;@liH:1)R>nGIi*=`f.*lt*J_f$SNbq!-GeS@\o.&8B
%(j,AY*R,mW.hN:oAN1Q?i0%5!0<:,a-+MNF^?S9]8%?kQnq".#M-"d%JT/cT/Ql^?j1pTej!p2RZ@_6E96Cn=#f&>d"<&',@KLI[
%i./=Paf/'+Vh7tX@b8s66lKHMFFr2R?f82Dj/_M)QDWpG/"#b3'I*YK%MOid@*cbk'^i2k,1_VFJd:jZ$f0RSL8Ah1a:uNXMGf<C
%?^k=%i"lA#CX++@7n=F.)k[U?YYfIh0Wh3"2!%O4.rUdh*t.#V.@ahk_'FO:.b2-GkfX>0ItS=+HNq%Fm7YjNJWS$B(UJdsD<OJP
%kF3?/f4S`"C@Si)AmWaK?Gc4R?h^nm!I*m#d<#hOYiK]ARkWq\;,jMb.?Wala5Npcp/,3ZbPB>#b#A@g&&6-1"_KHYhR'Z[9]]#p
%--m(fe).u7EpI%/C1B@Hq.<6s_c9kF2dESnS2]*Ki$G;UCk^/I!Of+=A$`e]"J\T*()M)HQqRJg'`Yth?Kbb[=@DLVb#t>fS-`Kh
%CW$E"W_VZX&d;@7$/hlGKn=2fe?-[`qM2IN*A7\Knbp<;$SOX#)QqefArsp"dcbIulfra=#JG>d[_\ZjR<+U;5JWkpRb6b1m>XbC
%ieq)EY`hS8!?dC>VWiN,4XTt5+/9!E&UnIGes'!dLeu3ng$60M3ffTXk,;*D:eE'G8QV+>^f7a8dDPi_m`+FTiHC!7!0uFQRSZ1)
%+tZ?sL.bgg<%%rP"$7W<Q^$urpBaY1YR-P%g4!A<+f*Jb:.&@'nBt7D'G8BrBG$g:@K]Q0^a4fWd_tL2o)p>r\uUDmZNZ=RJT;EE
%&%<$;qOF$7@RPK!]+4?&2@di14P$=D>bdT$:Y"t!nT"SP.a$M5n3Q&QO7Ri&i!3SWB:J7;dN;#f<a8Gj.kA-DnC$=VqZ$QpZrRn&
%(#t!a8ufe?;FI7s><Q%0J>>V/M_uJ?O9N3e(>=X7d(@cdb(2D\]$?SI7/%o3h2kS:e'K6NV.q`_hQpqJl9874"3EaY;Y7h6`:BN`
%"($QZ_RA(iY9;R=(Vq_Y0),d>9L"!lk7CJ4#7ID7*,5Do_3'Q3K6>'V;&,_jSqB]>5IS@>Y,[qU`)STY1M#Mq9VI`@j11`O/nud[
%4Wg'sF'MsnWj+@h/GCV.&Wn#0Gh(I3(HKMQn[%h-r^\c:h%_W:U'@Y(>ss=ur7`_"5ehcMB*%PI/=-A[)Udc#F\Z<@pEHkT$G%pY
%TZ'WhPd@-b]f*3QK+IC!S8A7siarErZfg`FObF*V)7,V<9`Z\'P;.%DDf\?5EKY0)Q8gkZ)Yos[W91Z!;o2mD5cY$[;V/;^dss4`
%9[AR3rdnFBrDPj]H6Bl9@f]L%-9\7E+<J<]IS\M7:g!'Y@Vs#BD7AF(-J%Ljg6?.e=K'"#%^4]Q]udC*'qEu?^RP,JD[`SaIt6+c
%^hoV,q.\J."2.pN)392GCbKaSOHZu"($sL*H<^:"B8ksAriDfO3!Y)riQ.?c-8D;)+61-$/pfaLmR>F8YCcJ+]ZpE?pO-5HH_k-Z
%`+q_k5^7OB6@hD#q5ANa@:87X)?_Yre*::WIJ;rF4P,AHQABP)&`X.t9VR&&1,=03MZ0*Z^_GfgV.a'2X0(h34cUQR*HW?Q`q#b=
%olH;q,HNZJ/\ldT.Y8abD6bCop[MON=MXCfIeEU6+`RaQSM[1V$YpM2H!"W-2JjF+^?a5>&V-N.pjNsZL/ECWpS6U_d$@bqjMdt5
%mh8`k]%o:Rq+%iV':03DcW)=eIGU:XhQBl4jA8rOSJ.?u^Z[Ao_G>JeF'Mm#UT.&FX8GQ("`&M6Vn(^@`f*#UXGC;&iA<ZX.UqQ0
%+e2W%QA(E,ZRH"P!`LQ&VHT/sZRB-_AEBYB0Xk)1nk$H\i`\YS5\M)o$<eF':6BS^5f'f*G$4C7dTHE%iqOsXGH:K(#m]9f(hFk]
%<U]JIm],_S529IO"cqn)pS6J=Lip\,^[csFFcLlDqHIH,:=3)+j;l)!:>\ArS7]LHnd(WV8%q(#".nU:Ot0'k-S&e1C@BuPka(A,
%WR8aS;pROe:0C(L3-#$gAmtrN"s?['Yf!f&>jUn?mDO,l<Xu'1Q,@D%]8,W2=oWIKTe'\A[ikP*BAX[=A%=0YWE\EXnRH'uBJDO:
%68g2n$rZ]R<gaXga.!M<iDnJVDkh[%'n-L5\-gqkF2.SM[?:#2)/97KPCK\i`A*hfgq2u<TNpb-kdS;1@Hq4%rTZ:I'-otbq#Q:[
%efICtM\(bUQ"emCT(s'q<EhZ0[PHA$'SAhNLXXhX:?/Z@S;ueC>KoB$+,5dn@?jDF1s7u.<Hk")LpDq1:B+6(VZ#'!YAV[2rpTtk
%MDnLHA+[qm$dUBMmnIQaqTE@[l/PtNQM&ePh3/X4\<"#(4<KOUc[+dp_^^kI!mr>!OBp7`e+6(os8FJO'+`Z4>MhSmIaHpB5'F6d
%@rVsQ/Bddr,/Du>[@@["Z]]bP4JpT_O)AGi8!+r:3nRVs%YThKLiFu8k4PnQo"cLu0.+ZIgl[/D`d[RuA(gCGit)2Q1$<./#O#9$
%o'M:8+'6uHIH2kpmAh3Y58sFLlR)f9T!,L<5Z;j^6&8?[kK0OR*c.M^6_3J4.iJqHrR-WZ%\DH6Jbl)>025HnSRGo5$^"f]d8W3<
%1!8HqbkAn=8rfp1G/Mg2Efg(O"0(E.LsL/9f^K7?A;#GuS$:#A\*HeebZ$WrWWto40MIGKlR(3%#k;E!idl:/grW9=;`SBP:q)e6
%iAI%#iNE(K3<2g9J!;H1UV9t0magEL(A]-$=RXe*X:NU:TcgbF13)V*<$]Sfh64RX8l[<dEc3Co(tj;kqX2bkG]"^2T1D;s#&-mF
%nE*=]<goBaUFS"W)H"n3dojThlZXdkf]KBGIe4K;G]da08c:#PCI0X-#.N^eOt[]Oka8R7C+Z*e\F5^E1(9Wb[b<PL7'=+)H8[6+
%/W@3lj&L4aKl<XqM*,m*>Ten\m<b<agB1:S>"fo9Fhs$P%S\Oomm<uA5CTWq!&2<W]0,t)!(*2.,:ru$<5EFTMY./2@b3?_+H"!%
%T?q<;B9+.`35Mk`Fj)S@<rqHqfp4C$Xq85;iTaQJ';2qP"u=j4V/eg[i>nB+-`Ms70MKf^8s=<8cs4cj'tbneqOm%pTfhX>nc-\;
%KoG5QZ?!V3MikXpJ75=V0Y?D?qY0aQqELj9b3T2*#QCtn_":HQK9;J>V<1qN!B<0KoV]SR`9UZ>MIMWJ4(!D]]$m_SQd/?"X*M*i
%rAJYNrN7)D0d21Dg:k]5eb7hQGIN#5?Rf>PM#1E3m78qR8;fKf!Qr1fHe#K[cJTG-`i%TQ$B3BbcT^6?_657PM<9,0r^j<d1!7AN
%(d:uBEE0BfT4lMW<gd"#)uJ=OY7G`g-^<dQ(!VYrZtNcHS33sCf*R/`kOMVj$e02Sp9W)4QWM%f@OG>2:e&`kYfbIcoY\2i`BtB;
%O'5dGk8sk/Q!a)=pT*2=SDqEo6<].ZC^P%O)J)bgac,!3<=dn&X@hdV.X4Xb\KBYA47!gO"<uqh*sgcGL^a@j;FI7XdfGZh::Nr^
%L5Ef@POFh-Bds1W5mE,qZ1*We/hN,t/oe3?U137#+`%(HZ,^*O(HV"'b-Q4bmb.cZ39PGq?dN4ePT;#/BefDcFfQZ"e2mO+F3f2B
%r.K"1Gf9gK3`_ZSj/3QW?_dGq=)@;APclhrIC9+2>E%Jo6i_d@`e^b1.M^2t=b[$O':dBm<LYr^7"^mfoG.T$6)n;:rTa)tQM["S
%r70pi(QGZ-=47ljMkiYOlLpPtnS#MJjj$T\[._+9NsBoj5>h\l\doua?*ns4<@19C:P#fH`VChc?q5==h'kdBeGa4K]17pWQ-3O)
%Yaq9%Z86e+=Ci-9$]>%q?f/G'Ee)rc`jal9@eSg3gol/i+>300]ljTmqD\g.@C=5/@\p_*[2!fJj!^-sAWGR4C$G'1,Da5Hd:N=l
%"n*)$%4b-W;'H."K9<2008uQ&#&o'WJ^RB[?S1*ISVQc+-qR[5r&bT*G)oWM3E"cp-P&YVrq_G&@W*;4h_Hn9rRK?P>D0<2@"p'j
%Bt+pBs!WPn+dBZkX$nEU8M6dPs$/+S),XZu\I-H>2T#"5,U*FHh\l^iP1'D$-do@%AWnDM7O=mG9JNf4*->+k..c7BO(KLSA'uVG
%LV0B+Mf*+hK-JpHfsB4-2F)J?bA+p(8l0?adCr=?9kQG%o@E`@#uqM3i6!SJRM28f_PD;O"iS=b:c.!fT2"7kKnZE[c3m4rs'r&Q
%'SXab^,q!PpE!2:V!AFSI9Y"Q0cX!FTWBLLQj=f;WT-XL=%ptZKZnGJ,e_c":+7B%K3;r"H_B@sfct+&ad9fYFqu5reI`T@F$c3T
%P%'k#Q-K%8,h?hOL^LsO+oi88$_>Yb`&p1gh243;4sGgJNJh-e,%m*<C0!3I*4oH8PcaNk+FZaa-LaV7Vhku_X?ZiIC%_u;_u[Hc
%/C1loQ/YO0UJ,"+*%$^>a=>6`Y(ub(MSQtKOImLp%%(i>eW>g$q`dsR/?':Mp4^:j9W#VOkR\hK&TE7*AE19dW]Ll"dLull-=J-@
%,PVU[-^I$LU]7>UJ]q?`AE'[W;iRJ-r]\h+_`l:,SOC:0q+G[RVm@HCMQ%[(F3"b'J5H-tb$rs9\V#s[KRW1[=)YIlST>E'T$jp$
%JEMujcNndbN"FVN]H<>D0tIPd_LG8M)_($)[Uj"2$o&qU6^=!NA4#IQf4IYQHq30Qd\YJOP<^,BDU@U2$piM#'_t3=gEiI'5:-C\
%+D'Un(tUlJ!$T3`!OEoc^JF%8pWZ,,d<Xn2P1fRSkB'iOG$n-s0X&,hn"R`o1Bg,r_Vt\g8j^drM_I(UqGcu(RK0R\+eFl4f:E3_
%LEG+>%5Y+u1JaU89Nh/I2PuGcZK)2KC00YghZOabs".$Q/nOY&m7n`:/<9L>%80Q93@%S7`hK_9'oDeW>i165gBs$c)mI_>68!38
%q[`oh=C^Wp#erKFT0Y+fD^c?5fH*kD\jG.]!<#_23]1/)GE_qflUod*W<Y9XH&m[_2;lkNWWAi18ha"jI8-irV"5^0DD]=9Ob)qj
%I?6WH$AR(S3utbk5Q_9oBfQ0FZcg1/><N/82)6S3G,>I1&JGZTp"BVGO4Y,Uc=Ilm%gkrF(COJN,7Aks@t*;8G[h9d2]3U=rX!==
%#Vk@V$#MHS/;>BS^6j`e7Eer[H.A6&-8NB$\q"3&TO7IH&K;+77Snj`5O2H&]1fgB6ip92/e2Ebk-5fAA0i'Fd"niB6N(^T&]e9N
%g5(YpALa-N:pJ1FS]q;Gh$ob?e(AM,dZqbpSE\!HpCMunYUUg%QFW?FSE(d:>ogN\FEIu66r"Gb.Q5H,1E>q)?oB7![=i`,UM_IX
%'T,%2*EO6q2A7usTKY]&Q#TRF_-Fkf=%Z@EXfd\'LbeX5ml0Gr9\;kN''<1J;bY)("=>r?gdN1q5(!?SQF<RZ#\8TYPUo1TO(]uX
%B043n>@JhtgpUMk5%:03;t?e0qP(NOM$YO4#W)k8;gc$eBE7;4%Ke;M5bb4$^ab]Nr5U(tJ\7e?,CdLnMh0f4,qO[&UPmY^CGEee
%huj<0,4:^eG4`2.T^6,4&!+fi,b'k;jlI1OXdgh1GSV,V+YT4^@#/&r8q;4!mUAu*'bt[b:H^D;;FYTU#_kH8*ek/",UMF*9s[=_
%Eju5PdnUf8+MmRA(ZLGq_9.R%@?u)*cI4mA,UPNFs,;sa&uOIE=!1*,5:/AL@7u,P[5j!K_T<a,.p2S^CaJ^9/A%@kMCo!+"1KW_
%Q^4J#S%K;sbHBXV!3/`:Jj??qp<5Yf\moG6Oqphg63]MG2>Q8^Q0R7Fh'np[p\UJ]S7>0s7:\5>Do%[;ocamMlrcblJqo9f(_,0*
%n!KF(Ent:N7f#>]l>nqGMu7fF`mek?5YS*Q3lHD"ABdYp$eMW*%<U/#eQn0)&RKZ_-!uWS4NO@MAR"D>Msg`sX)/4`6i@kh>EBKG
%>7Se\?3>.;1<([Lc<J@c1u_i-\ehH)K7[CocaTm]?2;CJWptQ.+$]H4<9Bmo<$r?eLbm'E_]+#n6<+#8<HQjYmZ;4uW$B;CRPj1'
%<WEc3<=H1/j1ubj;'Cg]d?+GYbV[!L%.g^N%=u]1`K`kG?A'"2r.^JN&g$W3`f,HlK)617Ar5UN.:H9,A_<XPlfZ8E<%Z*.ifGE*
%^su)*#IrbE`4[i8<ICJQ(WFfV.T^2o.E.uGC_]PG-!uUn_--?XaGq7cNTrj[6`Ha_8=@S`p73?6;aCJM,-!?]Zj-Tc6Cl16c%]FI
%=eBakTJ8kJTW60FVn)jPq&d@0[Ss-29HSsIU>ga4X@gAYim.`F=r#:"1'6Fe.b%HsM?s.PO\Ec"L&NIjs7g1VpBsN+J4IT,A.*Ob
%50?22(=PSQ0q49(CD=CDOWCB85)a>5XH0WRD;(G@hTCfR@TR"(GSn2FWL&<m6^-b5aD!sf@lQ#"@E>'S7^/2tV&@?WT%,!Wf`^C&
%+=>K=GRe]unFA>delr]*jq9X"E6'uB8]IIGH`Tq:0c]JO"BJ%t3IM'((mCC5J:J4]dlC4P5oK4J1MO1g-DVSr;s"]/\)A8QO\oAD
%R/#HJjbAKUqm*\<qZ;krmtpl\,ZpgGT:W.HFVThBkZBmn^q;WhMZWioKnT,peQ2r3/j6q(!J%*S$n`8PXrP%WZ>i?D6K`pqBc<q1
%2-(:#:1hC9pfZ3t_fZ\^?NVZ-^.%*91*[Y#V37rOW50!K8nLRc'53."j1!#R@!bkSOIUY\n9NR*>b]NrG8Ks3Ur]J;dWl'eL<fGM
%&nID).n.keXXK$QBpi(_2_'4#K]+R>5f>3a-2K8%&W+SUY3@n<=YDf`VR0kUIOGh*$&!Lk1e<'HK(,Z8iC-mf&f%C3,&INc#]lX9
%d?+-\\90Ac"B=;:6IHOH/E)3F1N%7.JEZl`Q5^J+?n/L:gPBs3^LoPn?Wl8n0^8@WKQVpbbY)#%UkCYS'dLBq*1BTNIC`o/p;5sS
%?=,#0PA6<m9r+UN$>QJj*DHDsYS`6)(^`$6^atr)AHj5o'Bbd?40V69]d)<%s,?@d<.c$"W"n"gB`nD*;^39=&=HJo!s$Hec4p-,
%*VmP2LueXD#pB#YTX<1U!=^0e%IP'3hErgb,3jiK>NSEWWHRRo+ODJc-3S5@3#Sb\P(7+r0UMkWP2LnCOMPC",M=Vr14=>J/B9nF
%F9-r<7^_eB6[+9+#/>bHIiR7HVKRM\:sgD%FGP:,@oo;h!%A<[Jai7"(_8[^Wn4^8Gtqi3e]Jh-&<mum/9MfPY??>3^f>Z%^u5RR
%*8eO\i=J<=JRK^QXA/p9`[]HJ`nMSYT8&AWiI5>Cb8W^e4J@i#YB(gbRQNg'X]<[p;0f6ZNhJDmO#$aFf3gU7<P_q(GN&%q9tq$*
%HQ;2]Bn2+tBHP^qEUNS)I:'j([>bU:_!U)4gqsPlc^1Qm2jb<!!sO^iI**)SS0F'agJGLE<Ek;9Q-W<9Ba4U&q(,QM0ol)N6roD>
%.TL+h<%Ukja5mgl=9phV<e4-gLq=Cc:uO^-02`EiRX@RMLn#`JFK0,sXlH0`>Bh?X%WBcg\<_ec]."SZ9%1*A)1$GNfnA*k39bPS
%k<d0N21*U%V!6J^4*X4!+tfVrB,G9:"DVG`)lX4@^R"L-P/76!<dQ8U:JiDO7KB9J6om`>*9,2s]+7,j6LZ5-PI[eYY=S'?Q@ZH+
%cN.($nMc!9`Fi-EF(+=M2W;9o51ZH05t1;TiMjcbMQ>0<]L\5gQ,ni0R8]m>W75hq-46i&NRS-VaR*V+(VTX=(iaF?lhH8MZ"9W%
%i5r-2,bJWGA^%3;;"<-_8":S9k[AEk',;O#hgINo`%*iAg5X;(Hbmf#<kJ[e9NludF_dmB9a0-k%"()@G)MFhV374Z5gu8T<WHnu
%<ZHL#'$hTNeMjk)@8ajN#;<"4.S:[W>bo@/M+0C%F9:Y`Cd0s1i$pYX^6&%_q4G1*;+Hh!^gUW#6d"VBbgbOs%fB[>D?2E<oHA[T
%!b;2LJ%J8Mo2W\]E]?dbaOVI5h7m-<qhQn<rNC#nqSeSJB/c:W[u6%uJ"FF7@6$t9$7oWP:BPMGT7^i%CC<Ls=>LA"U=9"IP);QY
%#`oR)c72LK:)?7o5!lif[%4!S!A$KG@OVt9iY8'-S_EWHg*MkUr@1koh8%U_pB$Nog8e-n7L=I^bnD:"`6%(^s/t7o1gGp41!_*k
%:\(;+eYIRqAZ>b]SpUH^CYJ7iGlB_,orhic;6+&`rTNiqN>SQd/jns;#rE5`=a3DW[caX`k(LT]+c+,e7*GFAke"=6N=%8Z32Mg;
%&XFEu[aNZl5>XBTU14%;#M$-;jHK_k/%<-m+$E(EE<U+KjS&50%N8B9GTKA&T.)j!d=;$Cj)iXHC7KCm\#o*??`0HD!b._O[6[9c
%&isloV)V`aDMkop%JDKW9n2X]2'N:m[.L-.GV$aEkdKLc741A/.b1cG,g6mEYb@PnX4h"f?knIR>7RO<^KUNfCQ+!HKtW!/OBuC,
%4^V6Y`"2h5J%8]Zl2I.s_4>-)Y>SS[n[kpl*lE=]282D4?a:k`%p>m9b+t[M%W#?%6<+I&*B@>Wf696B."V3&p9WBGHl:b:T4AE:
%L7fEU;n8tTND))">3K?,k^LiC.FUgOB6][KoT(MFa^sB5]j7f8q?#*?[F\Kb.ENAbQ,RD3CaMBYSE>.Fclb;G,^j_Cs2V>8O+.We
%\LSW18M>hO*af^]e/U[b[o!_*PnYQcQo7@nEk$s,aAol=GS!E0"r*3]W7u>+l]QZAMnpC(JAK4cmh#sD35.]ELZfXW`CPOU0ab'T
%dt14?fR`G%BXl@',$bh,<oJY46ot;jUmYj<f,Q*<AB\#NElt+Gf/U2VPaBJU4Q+nEN34B2_F,j3T)b2f5,gBEHY?_;3VD,+OJstV
%[0h)EmNHNDs"!\$"TgtPdSCi`jX2Y^4!tEi-]Xh2Vs<i?8J>gU=;RPp^9rlu!p\CUF3g)69'niLN#tP#?@.QR?CVdaBXNsO'U'U]
%W'\'UDei3l\OS-"N[&Im\Hmsbc<pgoE@\X^[3^hS@t,4D%`+6f#Tc,L7\iNHG08hNBok#.BR0+2;+8VC5N13IoaKc),+fOa[(*gJ
%P;U(/m<^T^\QT<6:k*"grBmGkl<IGh4qPAP^)7[7'S%[&KJN>.D!9k+VbP95!5a7o;`[@dp_GUm^r/n3s%%!#r2F5b@OrR=l395'
%S2K;<JVbO-e4n*B7%en1;cdC:en)ZC#%p;?"ta,>fs'DgoN.^Hgm:l!N4"j38#\o&Ih"dfhumt%2=oe]@ZliC0u`KjMt1E6s572$
%-b**RYi1m]-Z<QY+e+cA@3:9([F"#Cd.@"<o`YH1A\+KB`jURbmda!&#\*COEfRk.,:o/!!fs8[C;W/A0T@Lt$C#&9UX.sN-_D_k
%Q&nA/;_l2"+:\L#WH^0aYgR3hHY6$gQs?u]$8^U@'u2h`-`7$A_1CumKolc.A%8o6H]/)i-#CX3bJm!X;t[hp'YY[ZL,Cmq_E\*h
%.oD'VDd^Z^4hi`?q1!OCD3RuGZr79I^.):\Y2tT&$!08-r:;]jL>Pmi7DYD@dZ=BTc(h-q,I@QiPfc'Sm[t[6@?kO0b'I#ah7K[=
%(^cWYW+kggUT*sjepd>Xd=C0,T2f#tIk],OhR9Z*PQe;/Vi**CRM6\FphcTMPiYrcQc#W'3o[6"04ODW\^N6[Uq,*297;^ql)@-^
%>r6QO+M=aRXHG`ei8@kW:+SBMq\+GVddWXbpFJ7<Uk-?\.<[XSAK!`c%M@+OpB4(27sPD0*.r/iR-NMJmp86Y:H?W;Tr;^ILb\Rp
%XD814AnsL!oE=+)nlFR$XV2j^@GjmHR!pseUY#8eE$D/RjE_'E#md[7qn`jE5?I"B#La4s-!Hq`6Eh92;\F@5Msi^"V3SJG":Zb<
%Kf$dbma\t>=Jrbf5JXmbi6C0ZMsSs81ku'BO^/dM6$[s"fcX-M*#7/(5#!"):/*`0QS?HhI#J@7DNM_>.BNR]MBZ#IUqmYQEVUpf
%UtrFaN8C?h:!"hD8$!T5p+/L'j#k]q@I*h'9O920eh9%:l'(rLs4b`hEMEMf7gdHuN8(+$%3bWu`Q=t"m7G8Y.H\ta9F8L&b_Dsn
%/7JKUW<!dQq1l<Sr&=Fqn:\kW7+EX_?C[E1lZT<ai+,iRaY".J'$r@sriVFfHl<=dCupB??(C0^iQ&b.7pt-uKjR*g$2qfa<*EW/
%rfKJDpKJA`dj1@^,-CrsEU]@:I^6'GAa9U5<=?>DrsS!WQF:GX)<)<O0qk73iBule#ltC<XtD-9rUpCB8:to=j5'QW'*8S/78(b)
%)(:IU9F2VBEnRd#XI<nNqJO5W/,DLcO?F'6Q1X:'lbEPiD'mlZ*Ku:]Ae.gaO\#)X6_BU[R.b2%s'%O=n9U;-CfK_KD(rs-T&O]6
%+?Id1M6d7!rI=B'bnd=G7+DBCd+1+_0&CYW*3rHJ8Nh!73/2^Ua%_.di,Q*2XHV>\a_r&+Oi^bibYV,XV)mKHVFlR]#tA*F3U.g]
%3&t](5Z3MW<oR++Ip3He(G[EA=?r`]S5DUj%H5FQL_.G;H-!V+2BQN7H=TSq^'r+_:@X_*_)CFt_1@M&*'hgc=ObFs-M'I!3SZ",
%64ip"Ya5L!=C[<9o$Te+/BNeNh.9U(8f'r?^P<W<4md1-a0r&(>AZs23o9'pPm#;=Gkp`^L"As]F]/'GY_<4o]F*Y9N8QB^M;"Qf
%rI#TFL4C%JchJ5WmXX@1Mld+O"J>(W#m\qb*@6P>1`M9%J>5YZ078$P>9a'0pan<p313*M$8B=W6..GfIYhNT'LPFW+4D/]BCNn0
%%<!o=*)W2gVece80.CW_$':o)75g@^n3(FcB].(9jJ1Xj62a_u;j6NDK+Af-BB881QQ93tKP]DhPa(MA$?mZ'YWNXbha*Q>XI<TR
%DI)4Je-/LLaFVILeV'7U.JfSL:4jUQJ(IlD9GKT?R\'ki<FF/!.L4k\TNc5i!ZQUCk+l]BH]k[&g)REXW%k<(LdoQ^2'p.*iNV$!
%?H&fr3(+d<hh#@QMA[JJ@*;pc7U4L4*[=K!'Y`ZK:L(i<DBp:o`)ljYcSdEQdn+GEjtZ5[#E`e]f7oOC]Yimkn#tZh<>QCu<42/a
%.`F:0Rt94-Q3bS@cTPQgJ?ER0jSL.Qg>nFHoE-O<KAc<<bB$Cj4l@-P*TO5AoD&ZV6'21Pa`B3^Jdp2761T"e\V7PsP9RcPMm8U)
%_53D$#Qc@q5_iKY.]\u]LB1%tQl@D#U37ibMP)``1gi;,G^Q!9qh=5<mF.Sj/<S[BZQG\cFeLKUQPj-\Vq+[1Lr_F8/58T3[_Z_.
%`aal-,Wr);%uXEP5!g\3LSo5AX9dITX$0jGL$mr-_&q8"M17jhd-%VCpB3bn/_"oo$DrST61*W/\G?%;E^4=a0Ifp?J<o:/;_434
%L)DjY;8^@M-TH^aVhj#-O0<%l]be20>c]-k9H:\%*htqcVAAY)<C&15fKo!NDeVKr.QAD&XPTFRgY0+CN[I%j^nPfS5l<d1m)QVp
%7Y]IAgmDu\:bYUX'e=:2s7q_:mrQ,r9p21=nfgg'T6pgA29PtnI)HRbCR1]$>2NPX?>.k!23%al0Jnc9,DeYkf?i7VqNS]2!nL?Y
%$q?8&1HA/Vj:oEa;MpgJPcnh#\YgNT=6l=<6eG\dn83HBf7]STP%Vf.i_QDHO6Ba5+pFARDIq=bpLahI_'XTAS@(f\2mY,W;MqsD
%Jjc(teSFP>J@i8fkF,h,-$HiAk9DSL9mH_aGI$B*H'dihs*-GNBYY!**t8GtV#!niY^'SPnfj;.iHXa@/#?PSkfB5q#GWn)]@:1:
%iI6=;MtjI?*6!MRZ+UNSZ8;HS'_t$@+^PGZ1d]l8k3]g`:=f[?fVB@G$,t#[$9<=95<@bs1r)o!i6"UZRC#(PNZnWqqO+EgS`*(i
%CICUa4=Pt<SG9WM6-,4g`)7?E(>AO]8-qHZ&ZNM$G2tqtQH2$7R>!!'dRSB_6KqA*Hh:\Y+Rk53^#s+;+L%*g2pNn&<HhHbBMd5C
%X0*j.BYn^m0ied]Ytar=Z?<!`is-tMq=epR8h+Oh,Zu>TG[$\5r-ZH8)OoS>k($j*(j9A04B:l*bRgSki>r/1Xm.7r"fDZ\a6>G8
%H6\/@ip1RZH51tfZ=d*q/1ctR_$Q?kXdoI2cI$b>+3LY^CQZe&NVpX-4HE`]FUCe4;$4D069'f?FbeRnCW2t;)AXcT:UCk#*Z4_Z
%8158%@[kpNFViTEp)im.YTUJ"LHOQ05E1X"P-[QtHhd2@kcL:I]>=0q8:f[9m>agT9LSt6GkdC<o2d#T'/#k"1Aj+0!&[](d-(<K
%T6r3J+>o3Q<<>LDe6)cCVKb>pJjTKHkrI9*;3dAVo1Bh9[#gF&e+\\*f*@"Da]ZCu&:FNMl:IKHC1+l)6%P[K=.iuNY,jPn]*,>K
%fJn1ee-KB_AoUb.H0KBPU?06!gU00%SHd+DrUIUj>;=tEBb="R=qOQ(F2.Lu8&4eI9N<',;g_ptgK,L-hW4%lFbkSXaQ)NGPO]o_
%!Lac%3\IqXA6mN`1ar\t%ClG#6JY\P7JBbt$em[VLm:X@f//DR_mC_:`;-G@#A$@Q^Zn]DMr,im2pA>_HWL*dYuUc!WLa,3=T+1,
%Qi9e#PkYl2!G[e=bS&,cbShZIeA5Sa#>E%5+k!2?='ZLE"ZTe;1L`YSFU^q43dm,0n1"uufa-*jH$F9+Ic-`NRW>,U=4MR%O-1bk
%QsWU%.3e*o2K$_Z_J";1[>mI4R?nW$;UPS2>?q4pr*O0j48MX%2FmCpbR48RfWAO"6RF@&3UR.Hm!@5S*jY^?;2^Hrji2Y)N'))Y
%2S/]Te_h5KLcN^"Q_^$#EKkRFVDU<U.!]MSb6UkkaQo#Q)7HPWZ:g]b;g""mjp';ubi.]_V"UU-N9_+2kSo8t$Uasrp2li#XYN&,
%3eS`cG&a%Z:)7BZ)7ddj'`d^ZS5Mmu>:Qeio@2h[r+PegZmG6.X.\4jJbd4hqKn)aLRjY)DYgnpSInqbN6KF7OFNBWP]Ip;Ju.ru
%m]:+C'LEG-($SJn&.GCh-YYC<3-qSW[!G\G&r**&1Na-K[]fZiJ:,m`7h:F6!p+H4%S$3CcAi74^c$!5b<KF41?*IXF\caP5o>t7
%n]M_YPHFQ11jtBh$F=BP2ul,?:B6h-O!3(-gi*8olGXMO`A0Z<QlquKV^'V$i/gmN7RB2"d>*e$X\s=q[!plMG%j_Ml]d^30k7O[
%/i)8MY)7!66Q[IX^8_2BfpYYSb9laB1ohJ&^mnJ!Rrlc8j$tZXD]*Y1rb9O3-O$U-G^31>VOQ+j-KeK2W`!s]ei(T3n^EZr`)*[B
%C.=mHb,sEVJ1\4LqSJ)mPgPL3g\NJuJ,AoJ-[7=Yqj&_PX%H>((#XVCn@"RJc7!pHX!DUVA1S9#C>6-Vn.;#Q.:"k`L3=[>E@c;n
%4qN#h\>s8/bFn"oO1-QCZq,JmT">0H2][C2ZOs*=#[fCmEUiY\AVohQCuO-<Eu25==WJb1LJ>E[Gll*]S5GA-1%bhZ]fj$LFXea>
%rmtGA%fi/Zm;UkGdq+KjahW'PeKOUQO0O`p%L"*eA9oQn7!V<r;Z2fJ2LYenU-<`kDhT7@p+2A/aJ6S<TLo$j9=>:JULP84e##*9
%4SQ$NoU],P\=."*29DI,Fh'i)Y3#'O"W<eW?V2#-A[^T=FG/.%9Q]na,:OgHO+$T4([,ugD5WK""=%_s&dB+',d,cO1kgLYi!l[d
%#sOT0l*CU1*b8FuhN?k-.!,JN1N#cpR9%TL;V>5WN[$9h$AiqYRR+G]Or`@5Sm4)j`3H24Z@tm3e?D<+..4$5).r5MjeKDTo`i8_
%Gj]YF/Bq0FSiTQ.en+o#6lZYuQKl<Iaj<pD[k!1q6'toEdl$-F2U[Ib:(cG/gqX1!5\-(3@>]ej(_Tb)QL<9R+HVsgPF9e2YsmS+
%FXP-LKT&=[Ki)(a3Hj.u4I>KDH<Ef'[=IPk17(RYJiM&?+D@Q*r)L0Y0E2B)/S=oJJll@uD\i]GLpQQ;5'e"_R(<ZWe<0&UU/oo@
%s5Q9ACQrsbU-)qoD)l_S;8&JQX.7$Y,.Tt^d::otN%i/?Mk:'!=+qJIjl[qCgf([K?\XJnS#JtFPN&U$J&2H8K#g^gR5WZJXAgN[
%q&tBXhK_Q6.1.[";'t(R]\e<M3%lmU0n'HXMPTZO4`0>jCLS=[.[ElLL+S44nIa%;%.REXns$bs<hK%,#R'X)/16S-BqX[:15%Vi
%*Y#<udVaWO5Bn[QrQ>_/]IdAEV;F9AB(hh5QUqDfNXrG4OJcF.N(%j^@W3(`9j[$GA>-Xjo:>^I[47_=e4.roH7(19m'k"ipFY$-
%lck.g1@@-6]bPTj=VaMk-*!Rg-RFg#`meO1??,qo>!inRD&+g9W5f96J>QSeIRC)tagcS%Aq?dOki5`iDYml5@Pf.?ojhN6`_H4G
%,]O$=J>#W#RI4qKMJ+"_fReNPaRnd3=pLQ-++8(>I2.EB<THaA<W2ppm+%I_d1Og]M5h+A-j%I(`<@t%R:RMY8?XK6c%2pGAL9a7
%YgfOeQl'f+d^GQ9nV:2FQp1`DApEC@XpLS!R"+dkUgkd<!h""dpTUNX8\ffZB/eNt,!MM'T@8U&jcdl0Ffic;:!bFZS-hPMn9A!#
%Rc2eOa*'(f(n'*6TaYpWP?!jE?P=/1phDZ@5l4>8km#8*^I^.8&R>/'?)cSVQ;<CX>NcpXcWV^=9*rl^=Qj:YXu=@gB[D$UO1p`5
%JD#MCKn5,dEJ"_[%\jH*oZ<Ab3,a7T0SpPP:gVL:2Nf%*CP5X1r?FP5;kJmcQCGFA#nL)c4FAjWUhT`W:Znh4K,&-24b5[-qmA17
%8[eq)c;%g%C/_M]/icp0N>@G$=;,*S0]VZ0@\/lb%KXJVfR77En0&R?lQ.+2h@/@=TMYKG3VMOobF1_agC8"5PfO+a,5'`!8n(bG
%9[C9Vk;$$IN;CeR_o\$Wcu3>m`(k(Z$r0'U=EQQ(%JF<niR8'-5\(AB2"MX+eAuAt_HrYIZ\KB-M*@"kLN:Vmf!C%]mlu9'VkLqb
%DE<iePt0@Al-["4aLE)h8<O_iLguB1J,3ISrbgW-m#'[nTJk.)e4!`WLhDej]Ppb`N2;Cl"lRF=eEk2O_?n8IDP_&'Lqsd6]S:B^
%.YO%ddPh-*mZ]5_)Y'4f!jM*T%'_=mRPajR'RE&]R6N=GO/,\0WNC+[O<9/?c\kK=J.^5Uc<l1r"VW\glC2a!G29<K;fO'Xaq],-
%5;9'qHF,$h(U9d3jnFR5_0@6XT2B`Rjj_)X4R8Wscg>fC\ip6p>bF&]3Mjjr>%J=`];(1+?(4"ZhA--\hL[HST?[>uf)l(%BpBB[
%OV.oTmr0"Q*s-`/LP])*!Fp-,Tr<WLg!&OMScQ2?M9h"%6q.DJQd;Qd>aJU@d'4)cT9(LS4SI46*9W""*8u'P@kc2as/M4%;'!PA
%]6^UD9?9Htp2\7)OZ1)*B;niH3X;0u$^=bYO^KbCg?us0-H]4?9%/2Q$GHR2DFqN7b!PA4;mW8f5o^Xp\CqX*8cj3bKO!qM<-Y_-
%K>SoNb:(M9+qUi[)h(llo"`^fn7NQOLQRM]/=WdZ1?.\`[M$\OPRK8T21m`20q=B[.G-n->t?L24J(Iu5SuM@@ONZjH&^G,*05lZ
%DZF[E(_Z,'2GgilcGZoZ@`k=`3&X[Nro7:Cc!Xs3B(#Hl?UHr\-&RZ`Qh\L!PS>[oEIMMKEBTYX3E$5eB[nHMFQ<M`k^j>@1O;h0
%AS)'q:JKP_@+i`dG>u[=Pp5+"PKGup&t+UnXaoi!q`:<ng5a\seN.M(!b!\B9Z(_S<OGJcUG1c2(CaMpUbjP*=(3;O:+&pU3/00I
%A9I$pjj2$Gjp3UXU]"E?:<qP3-Ir=D2-KR?]>QO#o4&<5#E=c78DbbJ+#^VYY&63M[Xb2:G*EUJ"i\Lq_EX\=dfC*?=XT'l#.moh
%D92jsXCID,AY$&iQ&WufOG*U^-iC-__jZ@YPS(-LMX-BB"A^UH4$M^&7&C/>A"DRHpqj<YA8C$VWHh353.4VW"e4Ru.>b;D:0cet
%`4+t^?!-:N6cp\.EnkYk;Q+;6K.2^S#HY"DSE40.Eu`d_Cb"ZBk[d[5rr0<*]==28L(:2`NK=o-@Pu.51e[l?*toAF#R%.F8Csla
%["1S*>Gc,MR7!PMSU(r%I9uf\[>Si,E)s0GoU*Hs7M7"::Y"Pt=49^'amT`eYHCD\DluYu1-fTG)iUahl#$_<8Me!AdUe/Uan-Gj
%VjeV,!+=P.@)<k^5D'r44u-2V;a_!b@b$H#W^3&kC]bf*oYk?&m/0cs^X(]dMRY1(.%o.u*EK^]8c-)&3f4bYlO@/4T!!*lM\Z"q
%F6nZh&*NQDTX(_L!165Z)SS%d1fWN[/+\Vhd`Jq%\SSWJ>q(/Hafd<^eDa_G4E#+L6nt6sPV5^e@?Qk2h]Qpj%4A+HW1+Ha9'"(:
%lA%YO%t$..pGglnVs`MY,]\p9M#WGN@`J#(S!D2L8P%#p:]`;,?ulA:[`O01AYRm7;r=mFH+0:sYtAV'oe9A\9U6lN/hVQ60s<F2
%.Y0:p\?F%B?R2^IG2%VZK2b4J&]24_K/>+/Qt>W_]Yb71%hM6""/<q:21IaB\/\I*,SmEB_^%Ul?)&H3)COlA%)mj5ItI)&;4lnB
%epWEBXBSXG_`/^)nf[T,`e,Zc2@GX!_pjHN*SNjTY+`g&r0O6IeF12QbKuN14ftpUMo?;R)1KYKVO/Wr?lC0:en(P$o$^VX0)@.l
%Q0\Q"+1)V,\q(]\QQC-r0Mq2$&E$4*S/qg4/D_I`GY1lh."4j0*(crW4p^)uH%^L$QVeOgBJtL&U72,UG#uX'n<S[*n%5R&mU?S\
%r"e4!$R$K(("[8(ASTNa,\$#@CQgFL=mO[DE/1s`gYAu]_del.YuoBmQ'3%L_CALXn/;S.?-RkIjE]G<qfp;KTOBu8IJ"@#^f=6M
%E"W>DI5[?%$s:+]%tM$*IoN3TKdg$8&9*36;kfL^1(jj382NM3$:)+'6sb_$,ILl3X=hXl*_'>LeFcQQ:gD)93%mtO8o$g=ncuY=
%V#eU`9Znq^nL\>Aat_G_*X6bM?rD'4722qWb,@bs+a2f$oAg4j7,sIJg6b\C88u2"Z6YVqct.6![>A*sf.H2=L_,`>5,Yquh8X\;
%BW"RZIg'ln_0RNKdjRkq.rZ'lH<%B;UE<U>'RpGk"s-D,6TS8_\rFVTq%#T'&Gc7Q^0b'8Q^&mp@);f`S'b6f-L^h+P4ENWSE8`F
%;ff_NI4(tYd.M0G+jPtlYmAtuXo]`K"KK$l1O.2G"LL(`L9#cfkHK+bou-,ik\KG5J=clW_Nc+hbsW>s9DF<bbm-.=kn\%KDS8)(
%M<HK:9hj^Dqq\%?A.(3-J50kI:<M`oZ;PUn:Cj=6p^VRuF8/Gf?bcdm>c@:C**BD4!me7J*YRo4$FYnTP%gCqR9Z<_1!?12>)Vl'
%L$mt.ID[beU/Y2Jad4Zc`FJ`M5aPOI.Mqr9Ddu$/N3S>'Do3U6CN(S*b.<P;K^PBjr3*+YI8$ph'`)$Qq-1CuqpfPBLW!#2.UWJf
%Tj/m3KbYr2hEdJ=*njQ=It.)8R-&FUCB*TJ:pfki^X!8s4JB"3R4&<-f4C18ZdQ5Fgf<+^S\R!@4Y*EQQ13p;F2,:Lj8!2`Z#[J`
%/=bZeU/`POUkhqE;^4**FD#nRVSB8H[*5^Cm_:r:fTRnO34ljJa!aT(qPt;g<N3YUSB.Pgrd:!!hOi\[Y--Q,Hf#N`JW*a4ip;/s
%1pq:U0kbRY[HSpo?4f6_/\%XGF>rrp?Os*,LBN5#GW0BM)e"t"TSMqGiMtVh0;b=bj"5N4NOQH*h0M2qS4F?g`ELDW"MJKshogu"
%8VX03_oE3,?Etti_eJ86X8$:"0^m?\Y%K3U>&C(S3fc;PWDdm"CHZI,f6YTIctbe(rTl>K[XQMi3Q;,u!$=tgA;H]V]=9B"1DK[/
%[.D$9Vk;5gg<VrmhrcRP^J_uF'iq]lVCn&XKVR6u):#Fii`kON/"W'phSN2uj+mi[EWGY/KfbX1SZp79bs"iIr*@o$]5tISWD>gI
%Gk-6OqpfVp*4GY9;M8\>o&GtUAqLJ6);`,UoBVj*X+Vh[D<(RF0"rV[!mfn7?Bb5oeKu*^<500o"+eQ=\4_)U='PFVESK\s.$H4>
%Ok_MH3%:Q2=nKgZq\6cF#&OLFqF\L0*n+ik8%14EFuKasSU\3_j>8Ka/1LK`i"3W'g;NMTke53DJl=Yb]=D;)^6dp2W`_%,YU^:c
%#*RZ%VKk4PB5b`tZ#"#XSmO)'D*T#&VOjhrq'oLk<))$N^a(';RU$a)]1BC\CRSCZdUb+,l$=(QPBgXsT#2o4d-%A!WutB)N7M,=
%#ljb'Im",*C9mrir_Ht]<9C]l1,1i///0Fa]le0!O+@oIhL[^:Vt/BnYC>Bt[[u<QARe[(0G*8H:&X\(fk=Zrh5G'e\;er3.bMgT
%ZG'N>eSU8#^('X>`7GD>QtRqcC6K$#I]%,')..G*rgLSpNRiTdFoVE[B"]_H,?<UG=hqK>*X/PYaR>"i;L*VM!cPnr'KE5nln]FS
%I)(>6@?Z33lfZ)C,cihF-,`JcOmfk>ENsElH!^`E5p^Gj^\^1kh`8!df>!MRS<RiS-,>geh7Qb*oMM,*VWSXukG33gqpk'QUgW#%
%S,rsnLgKdWA]dKnl`qTIkN`c%f%[`.%F`L,D12-q-T4?\O*Wn'fOe*feL%'VV90k0NcP#<Z.6DC0&q#he^E8kN1e4.YeFHUXeL[Y
%laM`.`cp86LgUs:pF]N^E1FSCI<YSF6K:<(H\-'R,IXia4ls%!T+"N?0_l?])t@-M`JsXLp9RPUA`h02D#Z^G4mf[rX%Z8.WM'*u
%WeQB)Y,XJ(>nI%'j_jI0[rM@MkOVmGZ\$^<`n#'lT#"Lao;iMSW;/rol">.Jp>'SE-]i86gikl8fc?h=bK48^k-"Oj-a7aN"cqn)
%pS6KQO2XZlBbZ#=&712%2*>[R]psMuqk*=L<aVfMVl%)Q0smR\hDZdpMcDiWDi/,O2Aqt4Gk=m?($GJbVK\:e"j\ZB>5R"9a4/Wi
%L.DX>='J=.(h'5:DWcKT_g>Ckkp*l5ME'Dq@2e1,\R414GeAbYX1j_Zg"E./b#CNi0dqHQYJ37n,tXj*H-6W^Z+hl=p#ZjF*A91)
%\0R3Dj&;*-2B^]KcX!UIJdgCmj91h>=*(ciGNBG/I5[l@,G;3Y4sp5VZ7BIA8gO[,bcXi.hEj,jB"kk)#l``]p]'pdb('CTs3Jaj
%iB5rHGP)"ki]gRm,?sG$'(WBl+obSoqH5)!e^b0-.HI9M+hV6#Ad-05N2$hU@p90b+\YF*:C]DdmJ>F796ELUZ=o5nb]0K*'A"@O
%@O:]$pdan'$*HcEW<5c0*-EBCFe)`'gEM:L3Gt;>1[*!f4;QQOoEe>e'b4>ia=?+pK)f5AVAJ0FQDgJ-PfQ1Ti05pt8r#s6U82[E
%KoiQE:$h`(*GnII%j*k=@U\QMP"17Nk7nLd(btJ(%oEa`Y_oC]ejRB/6"m!42Ogu-;9a+^;sqX31=!dX_O0i8cpp>fTGWY=6e_/q
%!$'Dqj9@-RX5ArnN.>#%S`M2a>>S4>db5;I&2X`iVAMcV4EHl1;'n=?fJ_T+!EbRs2;j5D;)"*&/ZIc.XemlA5D>uZ6[3a(`gVS=
%TrhM:8\h,b4s8d(#_s^7UgY+.&4EOu1XH.*i&9djR=&ZY3GRWc!;_NY.o\RK]1jt)_e5&UZ7c;`+bC7N85S<]%u;6OKig-n'F&Oe
%M5fVF,EnZVN]7e`/NE\lGIFCh"U0u^8Jg5>0]^?BFo6X5.AYB_/ktgNGNS\ZgW`<+dEd`B^FLMK?d0CdJFEu$UjI2SZ5+G-(>+$7
%B+GI1Y>0*F,JhGt$PJr''R\=c!,5)!E^i3;>M,X&GN&9D+4:*b^^&!W9TK18@N-cV':45[Uri%f;'H/rMBt#qi@E`UR[#+O+$a:_
%i1&61'$dL&C#3,^K#ff=DDu1@!/LSU.ES.F0*#&i9%,-Gg>84u5lml5MhM*TVQ%C;(hDO*#Kg4JgM\F5'O%)heRa\F7F#o5$"oGF
%$L,-#J1:u7,Dh/D_i3b%3bQ/j8tlq!%7/-?<(u$(RlR9:Q6^1$KIrI?Rn3B9q$Y=AN==(M"aBRLX5)/lC(3;.O;-L"*1/RGqAK0R
%VpOTrR'CBRmhCN6-:%9b:BE,J&sJ<9H)s[.0nf8"#DsaoUkb)HC2HQ;].KFE8P(2?@TU`20aY%F3gakMbQ6YDIjJjg?nWdPR"Mko
%I%hK4=Kkec1QG]b/W\huXflg_AfH?WPFE3F`CMJJ!5?i>7t;Fl:4Q+7;^(=a*1%ie0d=68e"8\2d^;3fiR8\C5E(+*fSi3V,fN]:
%*U=`Rjd7&>T(c=<S@jr3)`1`[[XaU`,2.Jo]L&KGI%CDH@sr1)rA%)f<!tJk!1?6sR>n=Sn4CG:O9GX&U!OTqjpWWZ++dFaFCp%L
%dNlV6>eq'!`+apZRAj5P:UWX#!,6nt?-k<gZG"b!AMM_!DgU&1>FO4la^?$62jn4XGa4`\ZgIA&J4!8=6tQ"bS4W]`i6Xr,1Gajq
%cs)?15t1GA#tSl,+Wssp8Vft7_Q4.-];Ef(F%Lj<PXZ83TjNkdU=i+bn8+%pmjdqo&Nc4d*tAF0D2TuZ3fV:;?5Q+*SB9iH)+N,<
%*(GhQi9:d`hAg-1:!b:jMhJ1*s7^n-Zq/gVX$-Bk!g%Ur`>])0s/KhA:kp:(C/&i5X7Qf7VT'H(,Pb*0,u9R]`:;]:?^[-n9]Dg@
%4'k^#f%I$c]3@TZj5FRu(DdW^@?(`Uo4V^QK-^S3@GSEloeH.0bW^01B+Onbp/R[SN><6@aGTji:/4VRJ8j0T`Y/Pj$:XWCYQo5?
%Ogq/3ImX.)oLcYs)]+<9$T5Yd3s^uSYVT+M<=Ha0[hE+8g>OEqf%eALRqhINPrY&<LoaJ!A_D?kP=0H-;?o$9ns=\0iYDB=L_M/_
%M."$JOUQ#7CSmcj9O$V]ajfSc!p6=Z4BJe+!p:SWX5'[gos;GNQ5M>b:.3=7ir,[W-8Ho<cXo/U9o_tjUc"=)""<<.k-etkO?q'+
%<2om=$3geKa=8pG,`5:t>=eo(oG1@LBJT)[3E^X0"8%FR'NdW>UGoJ&`Dg%bWg:3dB(Edk@!)-(5V#/f8>c&WCC9>EUmRjbO$]CL
%)XV?ZCRtg1"&I/43\?a8kW'20+(G9<QAkWqb%D+65]ij1+1&m(!S\eC,dPUK)QPs'j!^+kAZljY,OLi=.Iig)!<h7H?8F=El>o#3
%\m:A:W$#(F20F=N1B:"L9G1oB^P\#m%*_SVe>\B>a)aM19mSa1m>HR,K>5\+f4(%#&gAMH7@/8ejoD7LKIG&%br$I)EP,MC";U:`
%8SM6pZ7fSm"lt`4=?W(aED9e$&Mu8bD:8n;Um"82I\e=:@F?[!]@r8a>VUFCcpgaJK!TN05Qml:3u7q@n/j@=KXX\fmSp;n4=l-U
%mCB2UFa<$7,&Q(TEY%\>]]sY^?7A3nPTX4pQXmOFOtJF^AnsuA^_#u$U)p.WC?K_cm2\lV8<%M?Ce_7Yjl'/?Y^Gst6am_X(^3g+
%'sX?Si-AkC@5u.]D<Gq:;'cD8$Q"!9I(#$UPGQpPDb#Jn*!mYrl9Vmk7o>P(SR8M/N@S#bjXEc8fj?QL3@T]EC8?FE]ij"!8rd&5
%&QGJoJpE^;Ke#@\#^@sGkce[Ge5KE%7]b.u4k=4FnG'i#%IrS$GUrIn7YT?dk.i!nVSP*2Qq5[:PA##GE\7Fj(sNN\g'goRI]$9W
%QNldr5S,A'F7PN]3>m`AAJ#^5_*(R+Xm9W902V6:>PVt6hub#L[apf0.]7`2(:+%a*"%)U41@H:e8J+Thod>e#k2tOHN>q%o8R-X
%%Mg:1\A-K<ScG^`WTL-69r.FXCC($=hP,o2h)Ec`4(p,V,&R,28@Xa$kM'u3*<DDbOS\[;et?D?"qr;KP5HG*=oq"8D;kl=GY%<q
%0cqaW<]5`^-g*T<TgV++9t!lI947&D6&1Eo4?)65M%0`49ZZ,DP@tC4FTJ#H9o0%2$W&pCl.[<r^dRh+:QkI"2(_ileuk5..fO`c
%UW!P$Mf5)cnZSrR1V2i!9B_fA,+EnnN@#6-A%a;,?:3Cr+KTZN,htqlE._qKnp3Vt!3SnUQpLZ\/X`-V_K+,I^`CQS]"sajF3]3:
%2,2lKT]Z;,V)/@/'S%D>B-se>Us;LVdFm]3TsG*ST?!/ta4R-Qa>u[E@]Q7a(<ea1JtY:CcbQ?2IG*b-JLM=3MP-3>Ls^./;7E[g
%3@8e`3tX`*@oLDUKm^orSGL!9Z?c`ggXIF1MFcgE4'>[cQpS;EE2E!=$IU++:]?=t!Yo:B_'.17(e$h1_4T8!<1QH\h#PMk<ScYq
%!R/0=a(9ipc1B4"k!p6'-'06X+C,m-HbRX`?rB<pG)a)>Rr>3Ije#oN.SsiBjq#SZn=m95)B\M#PZZ\ub\Dm5npZVLDAI;P1r)em
%5SrnGce5hJZC$k*O$+LtR&%PN[TMU$>*C#)@\Gg1qF`-@Uf\FQi!>ESf1;Q?=<`[ts52D<Ztbq==h1/drujE0.TE\@Q_kfr&.5e<
%BMXf;+;H_31(2'NmhsFgli",fJnRQrGk]n#[F^j_c>bin]8YdmQglHWj.Kf;:6tl&8T^3TV`tlS5_h3n`70+K&/]-,q`_$fGM*sH
%;c(jTBJ!+S9*9%FCR08s3N9\1)E&`G%K@#]TYIf?cF]=qhm>MKCAj.W[5Vd:9)O[^mo/H+bqO1&XbKn!hM4`Pc4`%5q1od^WM`_)
%h:*,j<fYTnPdS"r157AF_Pd:/M8ed6("MgEr#st;[s$Mr6+(3ZV!G9h>X>-T.?ZW[WC/QApgahHHb*r-nn5IlQ[;_uoOZi4B4E,!
%IT\N5okpM]6ZDs4A[E1s3#OXI(;D+H0C;b1[&S@/&8m)fjB0?!?TG-(lqYS7("ockB*$]sqOQWlGN(N)&GtgrE&5)O>B#lihsuAf
%Jtkqa=IOud"4Cd[WZtR0*qP)S^M29OQQ=Mi5fF/UK<dj[h.c*2?6IlM1Ln]<5N"Ua/Zm1T1eLqQI:mQ"ef\"7Dd&2ucc+V;U3[6]
%<98eXXc\;@c=5^%?sKDk+f"78rej0'6`YXF<g7&->4(D'n#^nc,LoUKaurEFWajM2<%''4iap5P45I[cmJ[]OjQ7q+`n!W/+e;BY
%6fDe)WSNXHUL<id!o;3PRgis>S084<i9@>O8WV@2\porCLBJ^m41&-MY?nsS`(mf7bE0nFW1Q'**%;2JG,'2[fc+t0Z6c':L?G<d
%a_5Ab6#"5f,+bOr:]M8]Z)9'PH46=5MdjreXON8'AbFj'/4,&Z8L;!Z%'ED4QFm)8b5e>0TJV1t-V4JSff*)LNER`p+^O_Z[]5iP
%XB&eRhHqg)c<Zc#).aXu.Dj$eO=#o>]A]Cl8@396"H!GJ#>k>]<B[O"R[t&":XQVq)a&;t+_6'keL-g?qej5f/,=S+"*_gYej351
%U$WCA.u$5LY4kR_j_Rc]IUo%8NF[[:ZbiKDT+?g-a5p+`Mf\*G[#t_?LMGF)6J&p!(*c4J#R%Q]nS'C.jJm;3Z9U.(Nr.)G]0(BO
%V@!9t93+,m#7#^t[=W"qM5b7_H4kN7\%fBD\gc]H<r%hMGs72+nQOh:4k7*o!;/bO[RNbnJQ2&]EJIL3PC)\En5IUDqSnt<WA6/(
%<gbVEH;`=m:i`]M3tXeJ:`I.&=e7P'84JI_DpQs5h2.R7*NL6@!e?`s\"Z<lkC2%KAk9,%KqDM]G+oq[rN,K$DIR=7?TAS?@Y0df
%a^`d8s(o9]UNKpa"GFcFK@>52886qdYuo7sdD.J5LP*[-%@F<#XYg&jCj@<6):GdiO#JPXbs&IS#dOHk86)Td_"3[<E&.d@rmV3N
%8()`>AW=`mj();H,q[i^i:"dSju*[*,Jd8@p!FY(-m_sH@lG%A!Y_(8GoOp$Muc&L[,"\1`a=f1\(+,f[cdm%+;Lc$"]Z;SJ.AYC
%H9^8[e=MTA]+"p\rMkgPhl7!ncRk!n[d?5-dg=GjMu]`@]c2@u#g\RGQZ_)Z&?X/^/k+pCWS-=`1Qo`A!MIa4lIOM4$0cnW^Rj7W
%IQ5=47`:M]PX8G_-_>@:MD('NTrjSL/ZG.Ea7hL!>8<A@%*#CsI2&).(f3Mi9KjrJa,C@Y"Z>dBOR4iM:F)1B;8G40[$p5SaKl`Q
%.TM5-V25DCTs&PBjs.Kf-W#^HIG@=!a7@BlHI':BD_,&D`\''IIG%(nqa'JI\<:B#@B2fCpI>PnrQSqF6IDd,*6&+/U]LFqRhOSK
%eON.TPa_C(mr]3dXQUL['="1@4SP/D(nLWooo^ZPjkO!38'@3G%9o5OHL'Yh;-2$uE6\V:59.e!<ZW<9AfcI@?T[heopX>%*L0QY
%L7U!@_G8h%(/o.Zk1u0fHQTFEGADKr,b]B8pSa/=KG4o%WNgLn,9d+!c?A>a7)2N[I%:%]GZ<dI3V@Dc?EP3*&K9$hh)L<r,t0=k
%V$nTei3NGj]6rleh8L8b4u.se:=pitnLk4qOe9\f&&OLpN.k]ir+$VoT!GFa<B:6sHI2.\j-5VebND#Ihp8uP.!4@:K.<]Y8SHa3
%_lKlQ?V*Z275H`)UVA'2<H[>(F_-!D&o[LG,h8'CY,e;q51LeKD$[8i%l_JL'n]8:1,?4.[N:[9M^`mY6cKY5&ogiG2&3iXRe*59
%.cc3t8k8q+RYe1tkX/<(%P:]q[Qn#uqsdP>5ThSB;P\KT;.1*R2G\Z=PqX[D!>Nck)pi%=6b</nP1/Eq:63C<@s"F'',VEEg-<5b
%DV+1$-^rm+<"#s18h8a4`1*SS]3;oG_UAsGgY99\iXMm*_AcD%^oBoD[Y@pTR\smlhMc"=SOSi1;i6VF:O;T>MW^?;<B&6tU1@V^
%M:Dqg40:K-3n>UBFcKib?U"%L^a)=ebT^\Tq'm+1AMbs+,r\W3+_cAZI*>Q6d6Om;A/K_a*Ca_BLHN1-eN$omDdWD(@^'Y@b,S$(
%M3Y2A]&2e4n<]`o.39img?E6?UJF6i=^$.+edF0#Xe3X,WOFg!)f2>>TrJrs:5<F%+mmfD522t"]sn2Un.r_9DhGrhg<Hltr:0JT
%.a%X*I>%4&M0@ANV!Mu[GC<mlClicEbbW]SZhSR%Gkl'RD_?9t65q!Ln/p@X.Wf?S.!4MK+]ZVfX9Z+UZNY!Lk)6h:GU-b<C_5[7
%DB5XG:QGQUW)[j0>h]d-)X\fFFU;@X[?clnr3=P8(f-<QlV^uZHk/iEKV7UhA\NYpfXjeXd5G<q[1Me]j#Q83m])@m@7V`#97VII
%@g1d`1H,/sQFkNAgaRp%4H_t(F;sq_j;BJ9dEU7uK>a2K#/aueRpSj5a*ceu]*a2X);M<t"MTAbO7I1rJSb_d>B8S8*GSB$$h"*J
%Os?&f:m0[BeV*cikM]/\<ZT`[p3+%/cX#(6odQWmmuW`cgE$Q#IC@_?M-jS:e]2^/#6TeWhtu%`I$h3tNKLW\p7;r3pq'd4k5j/H
%Xn9'TQ@Z)PHRERAFHBdn]@TdI'pk:[IX-QkmLpiJ!Hn'pF)e4&$QPiNWYA2n1ZG=/m=C]MJ/TlH6Hs(h4atY>*@3MWH.QL>q=$!O
%"uT@*f<-jUl9jABc,1Gp*PW>CVK>tT5![!_OM.g3$+B2@&(^@%i2kO<emcVU+*I_%kD@At*SXYc\urlNasQ5V8dcKsV9Hfj!gj,O
%\1Kq#NQg+e\?]RDA&iORG@LcETuiD*=CPjjO`]q#MC/f=7P^0q^-n+K7i3`,RaSlm_*[fT)`*=BUECBXPJ+9;&!M`QDPghuXLNe2
%RW+a@N-:JI\Cs$W53Y=X[J"@bl1]DP^iR!sI[A0'6G?d=Iap;[?>noR\Oa:'J-7Ed([PhJGOaa*Z`+--9OBnYZnJbW7UE!iDjb_s
%lX)6%/M.eZ=_A7aqTS-O\ubYL!k,Id$-fba*U7.@B9oLEf!fNoF8KB=U73#ueM`gBNV`@0;Z0\]$D1@F^D.osqa&OLbNeAX+"05&
%Q4o#5@tlN#3$LnNW!N93TME&S;U2o\!$V8XRA1ldVj/>I(R`+4^1g:Z^_e.JHa>:<2F3X5XQ62>lGp(,`^AuB)><e[=><jiFP!?]
%VZs<j;J5$AkH\4ZO(]^oldRNH*#4?ek1"3$**NpU5YTi!p<3NTWa-o4g+q5#6J#GF(4dR)1hl]dq6>(K92ifG5"9A3[@DdlGrNn$
%2:sX4U:sX@7)>M?]HGd2D;`F+;r,<"5:G&F]"U-`?W$NRb3-%pS-42QkLG)Ig#"<%ZO"Z)m,?]qg2556]`*5ASf[$9R\%#8,Fr1i
%4p0=Yf3A9d?lX^^HO87<m/rT3YUO5To93'pnZ@SJN/HO=aXX2[;"o9aA\cc(!d3[qXBVLMoUKM2an1,E!mC/YUj^tA9R9PRFKh%m
%hmL^!dC)Ir4!O+B0a&.mn\S2aeu>F5j(btPK\nO()"ehjD>%2b9n<,d'rPB8Po^krFn<<B;2QK$'/E=T:V2C<%^FPl=+0T7hDKd_
%kA/=ke3*?a<3"^&oZL<`h#lq!m5qdXkG-DZ_NbDYEDgK(;$>H8*gR^4a*[V$fSDNQ6_<R(le<r:">nnPGF&WpP,LUFoe2E^##[2r
%_YR?0K+T\lV`-5fT.stRJP_#3eQH7Y.IMJM2+t)hQ2W,\aF^F^'d%.q?YtTfg9Gc<F+S#CFi$R,(8=HaDL*LZA\aY-1NhX#*h3;8
%hKR*\U#'S"P7G[^ZhUh]oVX@=\\;Vj?bjgJ&"P"_jVF-a/3.ZF-.g#"NhcpO-/jVCA^/p9j$@Tl-*if9.+7iOFRLS7V%o2^=N[a4
%,^$aemsaL$bRtWC9kPSGs0;c/8)7$J$m?BD5V/h:k,5f5peh0[eNiOc_cJ?_1\&=%R+m'Bnm1!lI3*!V+S*2&Ut#-2$3A4:+uJ,G
%/+W";Z15H.908,3qdGY6EM]CGn%lq"^M]%)4"^l,;#H)E6$_+XXJpANeTsZl,!\OWO2J?3k_n!+]O_^*l-tdF9/,arVpHV?^XBg=
%'C_9bVaAkZ'(fs`!1ktf`#93n'-\GNbh/(r`&&ja!)IHdk72<*[E(j3!$d-'\Fl(dJ^j=CY..-5]#FArX0ic5</:"DD1el42l<<P
%I%QXnV'U9o<Q2(VbN\.k!Rh+sRdYrKQ'eS0PG1-tpoMQnA$/4T<:WjY=ca'F*XN*&D'6FdE$f\Y?PZgJk5,T`'`jC/d_pCtGi9XF
%@bCDlL#3!YdfG.grV*t.HVdBB<%^HT2Y?LZ:HIHC@`F*eI)gqDH^Y_F@X0/Z8BEo"q[")SK;[%kM&hMuDHN9+WE'a1DSsY("u=!Y
%0dJdHkq,NQ"U_%r#3-H7J_TBi2"o^d<!D\?a*PU&;QZ0OU#lF0&hpa-);@==6H(?C(4uqWU?]p#iO7@FK%I=7Df0gem*E1GRZ'Wl
%*A@<;o]mTVO+Z8oFFEt+&u%MFW[MU*f7Rt<I;A+s)O>suinNK&Xr;3,[8-gPn)jT8\G;,TVaG-A>_#cb^'Up5%fi@Cp,)ZdV.)e7
%8jlHWNBTaHLeP;7L2dDS!]PXUaJ``@7LV<[,Or>Z^[0Cma)bX/nEa+%6q:j:4EV4/<\j&SMV:'@(*B:&@7*KZ>?sB+G5@.m.ru:t
%2Pts2E4r%+X7Y'8VB/Jj_I3lh?='%O!a2Ceq[[$tE$\d+\.id$okRpUdhR.O:PG<JCQ<8'?rT)"f.&uOfeN/H?=Z/iVX&V3&*9>B
%(0"qo(\2Z'Z8pArZn+j1VKLNO[!\n4c+5nPd>XuT,sC_u2QT,Sr:0EIO(^_VRW&.oBXcU+2eeVW["16M?)E:+*Nl.#=Nara0A]"F
%T=?Sm:IaG<5dQcPm!Ah3hcUmFKp:/QHu]SS"!@5/U$X#)A"R66XC+Pb&IAe%lQiOOFa_*>[hQ]@K)+u2`=f%5H,mmcj[(N[r\(]3
%.m%BT89Mk'AF/4VH(\>XG]rbWq7=Rck`iR,&N2,b.9`HTM^-7l'8aTI)f\VLaCJr.S0a=V=;?1$<_T:<bPiPFfd.CgWf_QF2*<X%
%gDL`l,F5"58243YR=_9c"s8-7Mk<af4jVe0kWr\k.^)mD9Z&)mlql3I?8I\-<AUn>'n.RY;<)uOg;D-"DbtK>&YRL-Z]m;</B*B]
%f!:gnZI5s.`Yrm[4n*)Cm39m6.J[U#A&T7H]@W46Q\HTBlBX'O/AFkc<V5&cd)<.3q[/mhRNXLJ[_#bDVq,U=iTb0(T<KopY'ad?
%X'<E49,L@I\E2#%HB2qk.@!J/6c2>KW$'jNT<d_oa-g.;YE#l2kVZ'Ci]$Y":12=KA6);OM!:u%Bg"ZQKL\oBjan%YFkWg[7S+5a
%e#`?H"-@+4Ta,`a-6*)[3fVW:VC62.:9*";PAG"*k[Oc9c%D276'#W"'8f9r1@[#/'XV;JWE]btQMXs,WI3WZ]!dm$b,u&%j5Bl\
%'1Yr=HjpiFRlLdH+&0kEEI(lgTJnF\^V(%j1\%PLH=3q8Q8t=JRVB2L0b90VN14s0a*!o/crF=rj`U4cWSDZP.',3Z<,5ouMjp4I
%pQH@M:2oR$5N_M$ZrVqnGiE9LcQYg403:f\YP44SYPfBWW7uJKn2pPAU^X=-!B,aNX?(Q@=hWhZ4-*4;,hdf&Y!ONXF0(aL2P"%V
%=6mLmfbQkSI2\E8=-5lIqd"5`j&$AQ8p7;eLAgU:FT7X!15""0bN;6WfNB@4<;A$qE.,O]Q^`1k4sKe&9s)1<G2Ge`Ju5a)EaWNh
%:;ue2e\N[kp7CgM)UC]PHVM.CZie)*64#)oa?Pce:^m26rH%<f+V7?>1%6S]ksbRuH[,G8B&M3V7]/Vkc86b7\QR$Yrkr6GJa`+I
%"i1"94dF+>o0D$0`%'hKKL3-&_`W<2D82ZB:Q=OFjWUL.<%kt,N?IKe.Uj^2K?je]n_'em*js\o'kKD/H@"r%1A.Q3i:84#QRi?G
%1N8Vj/uC"9V)%]DY9,mP.E>!VTU'DLB.1/cmU!EtM9B^*aK&jM`0f`AYYag9f>eJ6o=e?-cFYWtDBLf9"t!!JjZZ@r.A6O(\)GpG
%![?A)@uU4aa_557lHjQhaD^Z\HIITbi/G\*OjaB\]03PU[jri<E:ZM_a1NGj;)pGDOd'OIhU%kCfsK(g_I-'^.iWDf.<;V]W*+nu
%^$]qB_\\GBeJFrso4=5!2&EN8Qbr+0<?JYV+-'soe\SVN"L+'=[.]0YQ0H'cV1<LoP2A5kl89K[/sc9R5gZ8j1RCf0=:^f0K)_?J
%O<A)DaGD*gnt[rD3fuqt#cBqnM\Ph^Gm>E7o,?AlAWH1Z]usM\:O?4gkARP1f"^KJE2RcO56pEH/+r&Y_T&[]0a6!T#.Xsh(H`;u
%,7Tp1VsPVqLm!KAAC"M7KZ@'5j@)LL<)(p/lT;,D;ri5:O&""]HB(+a-;knY<&_ueTV6RkA!J(ojjbRIJYKiV"TH'!g=4F`O771C
%]h]YaIf:<]$:8>1l3^Sc[>K^ehd(+rW7L,8l,VXKj\99eOjaXc4Yt];O+D/eI6&S)':u]k[7p(6V!"JtB)E\0jA"A/oT"q_=sbZD
%bs_'niHgc,6&$r8;^1X*'NZGVYaA#K_o`$LbbjX[]E$OmWV5aiHN=Q;m%UBb-V]D,QH4/H/g^)W26M3iiVK@5iW92f^JEZfrMk/I
%C=<jOCV#m(Dj4:t+MNjFfqm8=WGKiliO#'!+g>GAV`"&^<19ALi-URTl5_cf4bVm*@o(]RPKJn<k8'\cK;c8]]S]$4/;ni*+g?Dk
%c0`t)SYk#=KeY0Qhd^u9pA%<6Eh<nF^H^fO=1\i.VR<FO,6]1To/:Dq)C=b3kG1br!^s0F[ZQP!q1<LFEuY^t2&^ff_DL0e]m!@!
%F$oq7o'*NOocEKk?S%DB:pEj5?QZ;Or"6ScQcM49b*tIC.^sNXYVl(4k:*=[VQ3&WF13X8[4-E_JqlbWX5,9&:N)V\@suOYS>p:I
%D28OFErr/:.G9ueHSXm2.@VBC`Z$4<rh:`fKf0Aji-Yg]Mq2Vi1?pOWRmU[sRdL[tJ5p$9egi%njnW__i+0:gG.!m`bcTmQpr*iZ
%=q)RMO53QiU!WOBd^<tp3762W!U2r(qIY&gJt7+*I44kW3kj1@'+CT3e'hmU;q2pF5LdT7*$\t:A8`aar1NI6/-W5WmgOHaa@J&"
%6E_Tq$,uIh5:ehBME1Z?gTSbhgbfK%;<^BM]9sAWMV.56(2L*DkXSrG)8)0[CS,)GZ8cfr)sKDNqFB.tXU&EL^dH1NI]KK<kd-Xb
%^hU;O]+`(NHPEOYX*I1,Sdh"Lr5ijZdJQL0*>-Iu+<7G7AH2M=W>`\t2s>lsqr8Node1Mu?GdJ1e76QQCdk[u.*@Q3VU=IC-U)3^
%[]h108\3PUR_0+:H*5MmVP?S=LLZT<pU@J+!JlrlS;f@)J@F];k5EF[@$i"(h>Gd<eAU)F_p*$(+KbXlV!O]Yau#Bok-U8qbuELa
%'2(D3q\&r0RT<,JcmsFudP7J^_]*&2^oP]ToJ.6(YaFd]BX.Li<b<J2JH<0mQD$4UbjSpG.^\S/#3.eB/"4**KM[lBEGU!%;PFc&
%[`DV'B.l0dkLd[g;#j[D.,Wme0)M,n!oO[EN2?=W\nAc?!^8@n+L4Ju&V=]\MJ\Erin`D[(Di6P*GLOo&FsM9Pmn91lcqD&KslJH
%s*V82adH"a</MURa$Lcr:hrc6V`eBl3%%B9p^')AY*,JR-g`2Z5HM>_/ud6[dWHd`V2KC-N=G(F?KulfZ9^t`:ru.[bocXk$Z1f3
%bod\PPHRaq@(YT77E1\,;JOr0IHr'3Q(gH7P<rUk(Zs>SoUs35T,-8L-E_"?F&n(rhrO`02q@8;#'+dDoFVkOj8D:>m#]P^A@Qr8
%8hj0-Zt&CRe@K4s*W"a&lPbm79YVDQ*W!("+:sVE+O+\5:,R7-\+6)%B$X57ncidQqh,M/-N_`gQ>ft(;NDY*j)Np.=KB*1fIV;I
%*l>>E$LF+M%(W]b=O(9q''kbr*+tK^KM:"`)DJUa1f?X#]dih"fnD9=:Ifi7,qGCb%BMp')k.F1h!5\R3r>B7D<,4ifb0=p9$<u+
%H_W`8XE/tDeUgd=n1BrL$5oeGd*e"QW&UX>N4Sj,e-.XFl'"5>pW/HC]jM,B*pZduREb<?^u&7K/&,72&ai]:U:9UuC)?Ijl@]J%
%_U40V_:23pNaA,6m4/#k[P`"'=5Cg"ma]QoFGl&-LcaaF/Cdg`#b^_2"d<^:2kB^8J@1e53\9"Ijc1FWL"`Wh'2a@1lZgH&?O]c6
%!r6WRJssnCE(G9[X:6'N/IH2q(L'VZ61#C(I=';IBkHDN/>^1HYJ/nHfr.E\7YXaQbEFJ[n0/GKn6pKC@"n#k53?(ij8neaegT5*
%U[p'L(IiK>,VSUg(@";cb)YKK*Rjms?NL%8?1[UmI;b\SN+"nq9&A,;D02(L7U*=&q.D\a5>:2USpjM7dIO/kmsk-V/34<m>_B1.
%fH<+/MKpJ[F?`^cA8SdL+JokmeBVtUTLIZUA:QXMa(fQCJ_g0iO;m.I$[dlh,iW<ThVE$ma0-[:/rXP4r)/1u-_%<?[7*KEH@(!c
%$HWd\'/lKW<0=a'&Z\%U*P;N"db_Jh)<hpdXo5bPQ$aP1>K1Q5%!_@"VUnPe4:CGGg<hQLSoI'I8D(s=+1-jGi+Nn8QG`tAo0#HO
%6EdR]lU(REqXfT4#VqKA5tmqO,=8qqhmE@fZ9\:S90B+a_h^RR5LZ&=9a*bfe&U4)Bu]uVMhOb`)m[Z]LK82Dr=W5A7+Ug@CGf?!
%mAl@$*1W"#M7mBEgj`oeIbDd$O;'8/=?T]j#AM'B/?<%V&g^GNkg)d*F.cCq&rc,(mPFs"-s;G))@$V;)F.FB7qM?C3hoLK)/YVQ
%N0)]"A]:+j:@8c1090$[;k[Y45Tu!,%D"kq-7/9BpB8)n=.%acV(CjSCI+T<g=Ab_@;PMslKCJY>+@h#aHpJG,9o"iVjM)aL8"r@
%&H*Y^QQKDjPE6DTKgtc084g"?l=d"`jp+)Q6H/Uh6p.XP>hcIGFEVK#21"F9:sfY<m,7!A<Fm0N2YBHZ#GIY0L4jB$<CuS1Asi(B
%I7F'HJNFDH[_LhW@piD'DPg<f\aVj#FSJGT\^kJqV;fYnB`NdCT\$GYNHD>,mps:;*"fKfQl$9)K>3!PEe,1?):^X!r.t@s:`SB\
%ZDs<4m6cXRlH5;k4.Oq^l]3:N"mDJ?<d+YX3<^k=$H[uVnF>34M5HT,HBC,o2Q=TT[('QQ.($_Rm"j#8`DW$BCFtAjHFp<WD754u
%C?);f92/cq.q@%r7]".aPHUfJeZjL:kAuEfX]_G`j6#L7!0(<1m,19Cf*"3QHt[g!9.W'&a!31SJ/Zs+-d/JF_dVJoqP8:iXpdPB
%:j'<fXs\<@!pr3@'NOam0eZTUM30/)$pEX2,]P)#c_=LCjd@cIn7"Vqg>*Sq#a9FiZ)<dTh2A0(EUC`NMC0uW;+0]]R)lO*Y3tO-
%C6j(AMK-L-`)io]7(7T)0(ckE"dro(YAm_\+;k20b)&@-,n%QMR9;<-b74=ND$CV%L&ks1eHeh)ki/Q0iuYp*UoHh^!L79?/-_39
%RGhJl/68mMfi27U,<?"=<!Yr;TqQb(d$tF8&gS:bo/d`Z!^a>q;"[^?!JNT(7L8-$'2?H#L:lYn="bNOln"*FE+jSj!D=)&M,jWK
%(Aq8;,1M9"I?Kj2B#0SOIgpj>=uVPG/2/U$JKeF'eS5nNe"MuP;Jh%Y]2V#mDC#uUrBj4>lM_1iN>kV8cYg_tX2$F6UL3YeAc<H^
%g0uN<+Y[XbD7;NF.f8]![fK+o!(L=NZjT^K!.-h?H.Ng2+a%p#KM'fplWtA=DtoTS0/j=pYHUqEWmcF+khT<5YnkM,M]/tiNMe/#
%^(:.8HrKX7#q[VfQ8Ji<='_[FrhbGA,XTeuKgrhVbt(?5g/@*9BV(=Qk[n);m;$6H>A7WuNuWX>)P$$(ro%gRO(k;2X+XTU_:s\5
%[?N.(=^45?eFB93$a%oRZ=buad-D3&68_ANE2g@E03`";gG88g[4$/RAb%&0fi,8A;V94<<VTD3iN@R>8,E=@k'dDG":hEpnG8l_
%^:<$$:Wpg]@PU4oJkF"8EDj'W8_6=C>A]&i.mSDE^[k('eWR<YBW6@=F3)$$)lT#i+k2sj^+*eKTmRj1g:q!,\Cl+uHc)UN@hUj&
%Sj;bA87cQdH:0l8<KV@UNm!$A+FLpGMg!#g;8VI*!TWEtIjc6ielU\:p'HTjJ)c`ae"@=ks)+ABX^K:<o4`?m@M'^4VcLf04R9!$
%=jC3Db8i@'U9:05k5#(u\dU!:9VK!33`Maajk0$bonI^0!fq(GmrVBRJI76(W'6+C\2i+g)F`,Oa(Q%kl5F7I!mH)l[@DC>^l9bi
%!HR-B$OTML"YLO":YcJ)Q(qlWD2UN"bce9O["<%j)RZY7V^8J2_iQh"I&eq6;\XGAD*UZ5KXFfWZ0_9e;O)>0\^Q7C5n?ms]$DGT
%l6r^%X%l.S2L67HV9mKj\U>c/1:^_Gr2+`FCuE#uo3X<'T2<cP=,tI>S7B])"d83:q38i';P=A?"+Q?I6oI_.DU&:7M+UWPq.g7B
%MFLj+1G!B4UHSeeUjo\,CQ57ZEee\!)@q^:!IIh;"7SRlbTf^p!^-WR!fFU#]R^)ls(8_hNqWHCUm['.G7N;NKtIa;(lC)<[VdDg
%f2l'#qDt9MePX760XNVm#;hNKdb7n#BITJDk+Em`cE@%6<]V:&=%c>2].a.)EZ/b`Q9/pP=+rV;1:dVu;gVd&/U$3pLP+YR*T,tD
%7N\Y$WYK,BM#FcVXfc\jEBu@[h[3Xb$n=D@$r+7"'F7_FJTU@)I^`=J-Ic'-,_sr"gmXO9h3RbbGkf7WIBeT+B,fqE:rS:WK[sJ5
%'>)S8j4I7=%;9ioo9[EWET:"Sj?#6`ckSF2C>#<9X5fdK`l:]7odWlLg84(t`@^u%3`75GHu(d]iIb2=aicsK5`,gS+nZD9KDCN2
%Xe5=WnZf^[Bs8LCgF^jYo1WnfbfVsU2IalO=67'5\CF#b'ToG?3J>,5iqDN510Y)s^cti3So3K-[8h>BDKtSABSL'LNY=HDA]U`k
%V3dME*)J)lL]Um\;ms@<>'ZT)3V6]K,iEoPn;\,)G=XjVMj\r;!.dJggY\Y6fJ*R$hEsa"B&[hM1OAYbr`V1g9X2dcW`eN-T!CEO
%"'Z+#%HLu%lIp76RuQ?N<;Gp'8EZ>N.8@<=daV3<bHX#"HeT0g1u^X-(]4mIf!4Y15h22Ae8t2,9LhM*CZgK??-&!gkAZLOb?^n*
%dV1$eR\.#CeuPi2/I>T]1GKT?c:M[j6;2O8@sl<KY/Mh]<5q*FYr'5K')/>]14&5jmI7aT<cGcB3p#+.!JG'mg81O"lLRt5Zd_*O
%jK!bpVWm)a5*OQ$6`QCo4[RGO!mZR=ms9iI"c\b'[S=pX&j[O,pZK0%p</\F=j;I%K>t0N]>C2b@,rU4DO&HRJFZbhRDsbuLAZcZ
%Q/#WofB:Y>0,Fgrh4m;e]4"+Qo\Q_]s03QU<m)?Dc+c@%%=oj4X$YG(Zp*lFcHfr]PYm"TRH0%Ebf`Js%=>;Kk2%'C>Ob\QTIp/7
%EWN,>ec(lb%37hT@\bL7I7.iDP6Sl]7Tp359pjLm[TlQTFJ^-#*$fHQ<:06$:_-82$@L?LMuI,%ViB<Rcj@1C:"FXZCpi9[III((
%<$2\BX*rD6ODP[J]W>,RfUd'[`JMgH%EsCLp__Cn<K1&!RBN8R<7e07d+K:3lB*QZ[LY3c&$OR7;><)3H,[/`qOr\JR6r`]h5)::
%fo.Vl`D-BBXYsGDoQfd;F6[UsY16JmMRBEDQ>^F5,D4ai%pan?ejJY3I[,%k6J6[?cC"pm*q?^AqcSPW?%'XOhiU0RFL+U&`dTG!
%ghDumf$#fR%9!oo"Lj#Mp`TL'.qn-u>rsuh?^qQN/muRUZft]_5uBO-M24pBkc3`kk"s0%TOr#dAtWRg/lT)YY<LajMB(\*1ILq(
%r5=u<UK+/K'X*e4XIDe^'n!sC"2<c%.Di'cm9R0cqdVaaB\tmIZtWT,;8m4J*mRDn7=g3$<^3863dP]<.^,PY1M`SR3`H31E_jlU
%5LMkY-JT1Q<-QVp4].Y,r_Z5hW6&WBbGD<-;:2ZfJG%deV@T_a)ER:];01RdLG@rWpuPPgEX:tneq4C67b(<01ILuAKo*NK0O2=W
%!BOnNW1.\JT4`YVd,+4nI?bduXW[$ilms:q"i;fmCGYp&g\B\eQMkc^1Pe5;c67\G'tH/iC);cVNQ2,Aiq#dR.\_pS+r2l\5]LGb
%;:/9t[=qWW;jJ//mUJmFO3_fhSiaV^d1NJ%^uj`GgaORn@L=:$XWi+Q]LZRV@>o=jBGD1DJ!`aWc@\hd8A.V$m`Ha#0oqUC:tFK4
%#0.7Lil?9oNGhkXf@YPX8UWnYrL^Q5,0A*7dq/KDr?pcNlW6.bJ_UqHaC9IZSjU\M*R:F<f3MY5O7Y1QehEbcgJjQ'G1[u:DmL[7
%Kmp+791DNRbmhCC?-e2RD]uP^5[lhu14+8"J=IHbi4p@NoP<cV6)!:bnH]:=d7jnJ>d,=q'?8NZ;T6oWneeFE@e2jAC6kTSk$J)]
%MQG1I'lOmM^O5Cc$)fVVcB`4\0#d#^;=dh^?;'dWdnTF"3R"\8H_qQUbL/%i4dU/iK$ft%:.$,u@7Jid2&dR_L]]fmQ6EXm"2g!S
%5=%Z:m#\,6fJj`aXNIc6S01Ho@7(UlIq8jZIHmBToa-SM]!$C*9-`qZls4aH!U!(Als4Z1i'tZnCOT/3Y>S3Fjp,g:/&)G4gtZD7
%mBjcI/Tg':IdHbIb3.\hoDV>V[eUdrIGt54$u*qo@!P(QWE%N_dhA6)>]CA8i_u[Z%@j[A$H,IS7cO9f84Y0=k0$u-"`kt^7[qYc
%h)PLRfg9nDVk[5GaqJHU5L$9eMDM-K_\F!,7pA64qC_SZjZNG$l,;>0"?q(kXA,_YAk!8<D)KSj^;E*9=J,P$.M1;V!m9^%ikPP&
%J*n;4p^[Tn7O)P2"9QgHc=KP`>CSe^L]Rs+D\-n6Z\YZXMr`'ZO;H,u/DdaP=a:K3@q6^>7=7kWEh0!o+Zi9P]Q8ePICN0[$u+Bm
%0">>)_=(6VhO5Y2$Ls#1P1;Q)j2M%_@l7>T9U`O@f%jr=$HNf8mhlWj.4`?2)Jt0A3[C"cK\6#IKSc$^qZ'Y4iobI+5Xh8@:;=PU
%T/I%d@S"W[7UV/N#a3uF%R%c`4[p'B""1=l)HMEN.$[=LLV67"Y@*WF(oS%QEAa&h3%/mHrApbZUrD]Y^D]p)'WN.b@;[KNe:^.h
%/<rH+5p'T"Ao@)!F'uHbJ]'SZ.N<?^^B7(Te0rpK=:^a^V^npKPoPf5&6smbI?"TJh)BlL(GsaW$p2ou\u"#sLP<LAZZ"Sk*.d6o
%X>F\n]a?#/m2_3e_`R-$<E%[<+.k8<a1+ke1fE;tHH`l:#;(uB0CSuH*)niCT&\27l3m/tNHH9@,EVH1#;N#9rOH&PHaQL*nXh"L
%IXpYX=9%No^\Rllrph`AjY-Yq5QBbns8.<;gY_qs?iRb6?iTPTs6]9)s8RQHoABJjGMm]FiV.isofrHOp]'9'rqbg8roO`@q>L?h
%op=S9nW/1rLYr-LYQ+LsJ,Sqn5QCSHJ,%KbJ,SI^s8>an<tQJF3T,+rqn%@XDh%YRrsr'C<W2~>
%AI9_PrivateDataEnd
