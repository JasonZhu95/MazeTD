%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: freeze_4.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 378 252
%%HiResBoundingBox: 0 0 377.4531 251.6298
%%CropBox: 0 0 377.4531 251.6298
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:18:52+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:18:52+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:18:52+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>172</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgArAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYqhNVvjY2Ml0E9QpSi1puxA3+/JQjxGmvLPhjaVw+boDFyntZUYiqhAGU/S&#xA;eOWnAehaBqxW4KjJ5tunr9WsGI7M5J/AD+OEYB1KDqj0CGk1TzLcqSCLePvwXt8zyOS4IBrOXIfJ&#xA;2m6/c6dM0N+z3EDjkkn2mB9uR6YyxiXJcecwNS3CrP5tvJqrY2tB2kk3/AUA+/AMAHMspaon6Qgp&#xA;v05exvJczyegoLSBAeIAFTULQdMlcItdZJoW0v7jTJI57SYSQzAN6ZrRgfFf45KhMMBKWM7I281P&#xA;U9TYMGNpAv2I1JqWHckca5GMYx82c8sp+QTHSvMjIwtdTPB+iXH7Lf639chPF1i3YtR0kyIEEAg1&#xA;B3BGY7mOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrJp4IV5TSLGv8zkKPxwgEoMg&#xA;OaVXnmnTYQVgJuZv2UQGlfdj/CuWxwk89miepiOW7Hzcau1w1+JilwTURA/DxH7NK9PbLqjVOJxT&#xA;vivdu91nUNUkFlLxt4mI5oAd6b7k4xxiO6zzSnsdld2itzxtn5mFduVDuBttkBvzZH08kw0ldTvh&#xA;9YMyR2mwUcOTuafEQQVAA6d98qnQNOViBkLJR8+l3UilVuginxjqfwYZESpmcdob/Dat/eTh6dP3&#xA;dBXx3Y5LxS1nTxRS6bZ2sZkcqqIKu52oB1NSTTImZLOOIBIda1qZq26R+hZAAJEaB5aivxD9hP8A&#xA;J6nv4ZZjx2bLVnzCIoJZZWzyv9Ym37qD39/lmRI1sHCjG9ynNlpV/eUlUpDan7LOCzv7qoK0X3J+&#xA;jMc5N3NhgsbqWoae8NI7hOSt9lh0PyOTjPuacmMjmg4o7uEcba7mhTslTT8CBkyQeYaxY5ErptU1&#xA;u1Cy/XC4qBxYAg9++IhE9EnLMb2zGyuVurOC5XZZo1kA8OQrTMQuyB2VElickI6sR1AINPuxpQQV&#xA;2BLsVdirsVdirsVdirsVdirsVdirsVdiqTap5ltrSQ28CG5uRsVX7Kn3Pj7DLoYSdzycfLqBHYbl&#xA;KWvvMl8dpPQQ/sxClPp3P45Zwwi45yZJeTS6FHy9S9nLOevJqk/5/PHxe4I8H+cV5GlxOttbRmW5&#xA;kB9NF+0feg7e52yBkerYMY/hCDMl9Fq89lcRoqRRq4ZG5EFuisfGmMZWVyY+EealpT20mqpNdGkD&#xA;yenyJoAWB41PvQL9OW5TUWnBHinunmr+WIPXTUNOiWK4WonijHFZEYb7DbkDv75ixNFz8kbjSaaF&#xA;aPaaTbwOOLhSzL4F2LkH/gsZmyU4xUQEdkWbTMqKXchVUVZjsAB1JOKsa1XWOSid6iEGtpAdi5H+&#xA;7XB/4QfT16W48dlx8+bhCR28El1Kbi4qQTsD3/szJJrYOABZsp5pVmt3OyneGGnq06VO4T6R+H0Z&#xA;ROVOXix2b6Mm6bDKHMUL6yt721e2nWsbjqDRgRuGU9iD0xVjX+EtcSqx6qhRN4y8NWbwVzX8Rk+M&#xA;tRwxSq6ju7iNUaP05YyyXEdfsuNj9Hce2ZGOQpwc0CDSssF3Jbxwy3TmCNQiQqTxCqKAU+XthBA5&#xA;BBMpcysW1ltJFns5SsqbgGlTh4gdixAMTYZZoutQ6jDQ0juk/vYv4r7ZjZMfD7nYYcwmPNMsrbnY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXEVBFaV74q83mGq6bNIs1nMqhiDMYyyMK0B5rXrmWMsZbOvlp5R3s&#xA;Jnp+rX7Lw4gRCtGA/rjPGGMMsnMLy6uPqlioa5bd5G/u4lP7T/wHfK5Sptx4+Lc8k+sdNstDtHlq&#xA;ZrqT++uH+3I3Yey+AHTKQCS5UiIhKZnWVHJX9/IxaSTxJFMyAKcKUr96TxxXSRPA1uskbn4g24P4&#xA;5bKi0RMo8k60rXrqz4W92jND0Uk8nUezb8qeB3/VlE8XUOZj1HSTKkdJEV0IZGAKsOhB6HKHLbxV&#xA;j+tarCyHkeVmpoqD/d7j/mWv4/LrZCBkWnNlEQx5Fmv7g3FwapXp/Ae2ZRqIoOu3kbKtqUlxFZn6&#xA;sKOSqBuyAmhanguUyJpyMcQTuzHTLG1sLGOCA1jUcmlJqXY7s7HuTmO56jda3ZxbQkXD9KIRxHzb&#xA;cZKMSWueQRS/T/Ms819FDNGnozO0SypUUcAstak1BpT55KePhYYs3EyDK29BS22m3zsaq0q/CzIQ&#xA;G28ckCQ1kRmk+uaYbCzkvYFM8cI5SxmgcIOrA0oaeGTGRqOnHQpZbXMNxapPGp4OpYLT4tuoplg3&#xA;ceQo0oTc7d1vYCUmiYHwr8/1HLBvs18jYZ5DKs0KSpukihlPswqMwnar8VdirsVdirsVdirsVdir&#xA;sVdiqnc3MFtC007hI16scIBJoMZSERZYpdXl1rU6qFMdkprHF3Y+LZkgCA83BnM5D5In6vHySzt1&#xA;DzsaFuygdfkBkDLqWwQB9ITy0tLXT7ZgtFAq80p6sabsxykm3LAADHdZ1YyyAgVWvGCPufc5kY4O&#xA;Dmy2ULBa6hdyemGo1KmOKlQPEsemSMohrjjlJu/8s+aHUJaSwQwj/ixzIe/xMV/UcolkJczHgA5r&#xA;rHy15oCCC7ktWiGxkYu70+QC1+/EZCEywRLLrW3W3t44VNQgpU9z1JyBLaBQpbfRSy2ksURo7rxr&#xA;UjY7Hce2IrqiV1sw/VtG1MMHMZMaLQAbgAe42GZWPJF1+XDPmhI7+aABJYqKNhTb/byZiDyahIjm&#xA;i4r22k6PQ+DbZExLMSBXtBbuDyjRgdzVQa5CmfEVC6lNVtYdnfY0/ZXJxHVrkeiK0iMS6rb2kAql&#xA;qRNcv2UAHiP9Zm/DKcsrcrT463ZgzBVLMaACpPsMpcthsF0fXDr8LkCRGHcHMqtnW3RZVdzRHTJp&#xA;nFYjCzsP8ngSfwzFIdiDYthMSfU7WzBHEIojkH+sKk/eMy4DanW5Jeq0VcxerA6Dqw2+Y3GMTRRI&#xA;WEXp3mWWyt4ra8tmMcShFlT+VRQbHY/fkZYQdwW6GpIFSDILDU7O/jL20nLj9tTsy18QcolAx5uX&#xA;DIJckVkWbsVdirsVdirsVdirsVdirEPMV19c1aO3icywQAeqn7Iep5fPbMvEKjbr9RLilQ6LluvQ&#xA;jEca/vZnWNCOpLGgUeG+Ql3lljs7Dmn1lZw6dA0s7qJGpzkOwA7KK/5nKZSsuVCAiEn1XUnvXABM&#xA;dlEeXE7NIV6M3go6hfpPhlkINOXN0CT2xNzdtO32I9kGZEthThx3Nsr8uWiwaVDL9qa6AnlfuTIO&#xA;QHyVSAMwibdrEUKRF/qtvZkIfjmbcRg0NOlSe3thjG2OTIIhUsb1LuH1AvEg0Za1ocEo0sJiQtEY&#xA;GbsVU5rm3hp6six8q8QxAJp1p44gIJA5qFxp9hex8nQMHFQ60qa/r+nJCRDCWOMgkd35NBJNvIB7&#xA;Hb+uXxz97iy0nclE+jarZtQ/COxBIB/hloyRLRLFKK+1srt5fQgIa+uK/vGqVjUdWb/Pc5XkyNuD&#xA;FZ3Zbo+kWul2gt4aszHnNM32pHPVjmK7BvW5Gj0e9dftCCQJ/rFSB+OKsTJ43kUY6Kh/z/DMwDZ1&#xA;ZO7KLKNbzRTbyHaSN4Xp2Bqv/EcxZ83YYjcQw2K5W50cSSGrj4WI7uppX6cyMRtws8aJCJtZmFmj&#xA;MrMaGnFWbYdzQHDMgFjjiSNl0N5bzl0jcNIn24zUEfQciJAspQI5t6fN9Q1u3ePaK4Ijdego5p+B&#xA;oclPeKMR4ZjzZvmI7J2KuxV2KuxV2KuxV2KoDXb17PS5pozSQgIh8CxpX6MsxxuTVnnwxJYTHLNA&#xA;ViiUNK4DMTuSTvT7syyAXWAkKhuNROxhr/sTg4YsuKTbTaq5rwofGg/jjUQplIrXj1SRSr/ZOxFV&#xA;/hhuKKk1DcTWicJISFruw8fn0xIBUEhE2OpzW9uILe/lit0HwRMI2KDwVmVjTKDgckao0p/WhNOE&#xA;jDSMzhpZmJJNO5J3ywQ4Q0yyGRZR5dZWgnp1STix9+Ct+psx8h3c3APSm2Vt6Vajr9vbu8MFJZ0/&#xA;vD+xGf8ALPj/AJI/DJRiS15MgiEihNzqV4HqTzIAc9Wp+pR4ZkUIhwuKWQswjQRxqi9EAUfQKZil&#xA;2AFBdilzKrCjAEHqDirSqqjioCgdANhioDeKoPWKfo2YFeQPEU/2QyURuwyGolh7N/uTUeCU/Wcy&#xA;/wCF1v8AEqvNrqRz21rcRRWtwalyGMyfCFbj+zvTMeUCS5cMojGkBNbJbW9vYw1IBrU9SSev3nMj&#xA;GKDi5pGRZDo80NrODJI6RKhUIK8STShYDeopt88pyRJcjBMR2KprF7BctF6IqE5FmIoTWlAO9MEI&#xA;kJy5RIUGO6rIYliYGjxhm+6n9MvHIuL/ABB6HmE7V2KuxV2KuxV2KuxV2KpV5oj56LOe6FGH/BAf&#xA;qOW4T6mjUi4FienMsuoLI3RVWtfYBTmTPYOvhvJM5Keo3HpU0p4VyoNp5rbCznvL9oZ5xb21AYvT&#xA;A9Rz3Us4Kr9AyEyQ34oxPPmr6npN3p5WS0imvrU/3qAhpk/1RtzB+8ZEZCGyeAHlsksmv2UbcbiK&#xA;a3P8ssZByYyBqOCSHfWfL5PLcnwCMP6DJeMx/LHuRtleyXg4afYXEpP2W4BIvpkJoMgcrMacsv0q&#xA;z/R2n/6TInqsTLcyDZORAG1eygAb5UTbkxAApAa5qp9DgkjQRt9sj4ZCPAHqtfv+WThC2nLm4eTH&#xA;II/rFAF9O0T7MY2qffMnaLg2ZGyzDR9PFvF6rikrjYfyr4ZjTlbn4cdC0XeXdvZ20lzcNwiiFWP6&#xA;gB3J6DK29L9M1uS7lCTQeh6lTGvLkQBuOWwFaeGTMKFtUcoMqTbINrsVdiqX65IFsgv87hR9xb+G&#xA;Tx82nP8ASw2eZYtRLt0Ve3uMywLi64mpNm7vLg0t04r/ADf2nbHhA5rxE8m002U/G8xEvUEb0+nH&#xA;jXgbP6Sh8JlH0n+Bx9JT6g5NUUbSxlW9v7ceBfE71Czs59c1P6uoIgUg3cnZI+vAH+ZsqyzocIcj&#xA;T4iTxF6NmM5zsVdirsVdirsVdirsVQmrxNLpd1Goqxiag8SBUZKBohhkjcSHnFvqttb8pA6NUU67&#xA;/cN8y5Tierro4pjomGm6st5cIlV9N24llBBH0HBsRYTUhICQpN57eSORl4kqDs1O2QBtnKJBTDQd&#xA;VuZbmaxuRUooktpe7JsGB91Y/ccpmKLl4ZWE7IDChFQeoOQbVgghBBEagjoQBirU88NvE00zBI16&#xA;k/cB7k4qWO31/JdyBjVY0NY4/A+J98vjCnCyZST5JJSbULhnkYiNTuK75ftEOLvI7sg0e0hq08tE&#xA;t7cV32UUFan2A3yjJJy8ELNqMfme7ubozQgR2NSIEZfjlA6uSfsg/sjIRhYttyZqNBT1O+k1GZOa&#xA;GK1gPKONiCXcfttQkUX9kV98lCHewy5rFBQsbimoBlbkish5DoCDuPuy2Q2ceEvUzLMR2TsVQ97f&#xA;wWcYaQ1Zto4x1Y/0Hc4QLYykALLG9V1C4u5LflRIo5CeCg1JZSoqa9gTl0cdFxJ5rFISeCIsH9NX&#xA;ldkjTkaKWdgi1+k5MzIDXHGJFF6tZxaXYqWu/Uv5WRYICEVGJYBgq/aoBXfllImbcqWGIChH6gQC&#xA;Qgv3K9MvLhhRvJ2hjLgb1CpXx8cMRZRI0gbS01bWpglujCGtHvHWkSgfa4/zH2GQnlA2i3YtOTvJ&#xA;numaZa6bZpa2y0Rd2Y/adj1Zj3JzGc5FYq7FXYq7FXYq7FXYq7FXYqoizsw/MQRh615BFrX50xVI&#xA;/OMfpw218AAIH4yE7bN0qfDan05dhkBYLjamBNEdEng8zcmCrJVR1IKvT55Z4YPJxzklHnYTFFmd&#xA;Vu7SSkynkaAHc+w6qR2yEu4tkCfqCY2nmKNhxvIWgkHVkBkjPy4jkPpXKzAuQM0SrXPmCwhjLIJJ&#xA;3/ZjjQ1P0txUffg4CnxY96RrNqGpzm61ACC1h3htFNeJO3Jm/ac9PbJRjXvapzEuXJRluohNwoeR&#xA;3IVSQoOwLED4R88tsBoESdwgpuVpd+qP7qT7Q/Xlo3DQdjaYXDvd2ywPKxtTQtEtAr0pQMQKkbdK&#xA;5SYC3IjlIGyCublQ6JAOckZ2AG1KUptlsY97RKXcuS2ml+K6bbtENh9NMSQOSREnmyTSNJVFWaZA&#xA;O8UfYDxIzHnNzMWGtynGVOS7FWK6zdctUIBDoT6S06qVHxD/AIKtcyMcdnBzy9VIWeBZU4moINVY&#xA;dQcmDTURaH9Yp+4uxVTssvY/PwOExB5MRIg7r/qFmZvrBjEk5PL1XJdq9a8mJOV8IDcckj1Qt7qM&#xA;sEpjUVNQNlLMSRXYD2yzYCy1REpGgopBrupOsUNpMCTRZpY/TiWvVixp0yBzADZvjpZE+ovRLS1i&#xA;tbWG2iFI4UVF+SimYzmquKuxV2KuxV2KuxV2KuxV2KuxV2KtOiSIUdQ6MKMrCoI9wcVS268taLPE&#xA;yraQwSGvGaJFRgfGq0r8sING0SiJCixOC5utJvHtpwVZDuOux6MPFT/nvmXtMOtIliPkjptftHQg&#xA;orMRTkFNR9+RGIsjnBHJQllYxJPESyr8TL4r3+7JAdGBPVFwyrNEq+oFi+0DQ7k/LIEUzBsIi0S6&#xA;s5pLm2dZUlVVlTqPgJIPYg/EcgQCd26EjEbbpfJD6kTpI3LkWaoAAFSSAAOy9BlkdmifqSqKa4AN&#xA;vEa8jQEfjTLiBzaATyTG2tVt46j4pT1P8BlcpW2RjSpa3KnX7CylAEU3J2J6MyqSqfeMpyS6OXgg&#xA;DuzKaaGCJpZnWOJBVnchVA9ycpcpjQ88Q3F+bfTrY3EKby3LNwWn+SKE79q4YxthOYiEZceYZZLZ&#xA;1toTDcEFVeXiyg/zAKTy+mmTGMtZzhjtpCyzBGcy+gtGkbqzueTNl4FRpw5S4pWibq+EMQRjUVqF&#xA;FOuIjZWU6CmksFzGV5BgeqtsRhohjYKCe5+puyxSh4h1DdB9OTNEWWIu6G6v5c1JZ/Mdvw/eO3IO&#xA;EBIC8DuT4ZTlnHhoOVgxzErIpn+YzmuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KoPUtH0/Uo1S&#xA;7iDlK+nICVdSf5WFCMVIS2PyR5eWpaF5JD0keVyw+VCMNlFCqYxe3M2kXMlnMCFViImdGowJ2KkV&#xA;BrmT4kTzcA6eYNDcIeK+vKMLaCZwTXjHC7UPgKjCcsER0+T3IlLjX4R672lzFCB8byRlQB/lU3A9&#xA;8j4kD0Z+BkAsFdc6gsluFj2d9mHgP7ctjHdxpT2RNjaiGOrD9425Ph7ZGUrZRjS2+uxBERyHNq0P&#xA;gPE4xCZHoOaWlTdQxx3Ylh58ZbadwVceDKT+ycieGY2bBxYjuvultZHWO+uri9Cmg9aVioP+SKjA&#xA;MIZS1MuiZ2iWaRBLYKsf8q/xw8NNZlxLp7iOFOTn5L3OEC2JNJXHrMMUrhigDMWYcgGBPbJEx71E&#xA;Z86ROkacPMGoOZCf0dBvMVNOZP2Yww+9qZTln0Dk6fF/EU2vvI68g2m3HoJ09CYGRR/qtXl9BrkI&#xA;5ZBtngjI2V2meRreOUTapKL1lNY4AvGIHxIrVvpyMpmXNnDHGPJk0UMUS8YkWNR+yoAH4ZFmuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KsX1byczyGfS5UhLGrW8gPp1/yGXdfl&#xA;Qj5ZZHKYtOTBGW/VKm8u+aeXH0FI/n9ccfuIrlnj+TT+U80Vp/km/knR9Vmi+rqeTW8PJi9NwrM1&#xA;NvGmVzymWzdjwRib6sm1TSLPUbYQTqV47xSJsyHpVf6dMgCRybZRBFFKrDyPpEKub2t/M23OT4Qq&#xA;+CqpoMTInmiMREUEHqHkmdGMml3A49RBcEmn+rIKn/ggfnlkc0g1T00ZeSFtfJmr3M9L+Rba2H2x&#xA;E3ORx4BqUUYyzE7Ix6aMTfNlkOjaTFbLbJZw+gooEKKw+ZqDU/PKnIREFvb28fp28SQxjfhGoVfu&#xA;GKqmKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2&#xA;KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:34bd1c50-8a22-1349-8e00-582354e2f6c3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:34bd1c50-8a22-1349-8e00-582354e2f6c3</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:71ad8656-4792-45d2-8f7f-8ae4641badb7</stRef:instanceID>
            <stRef:documentID>xmp.did:2be6274d-8182-ae49-b6c2-c4441239a92a</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2be6274d-8182-ae49-b6c2-c4441239a92a</stEvt:instanceID>
                  <stEvt:when>2018-03-08T14:02:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:34bd1c50-8a22-1349-8e00-582354e2f6c3</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:18:52+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>274.809506</stDim:w>
            <stDim:h>149.745806</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -251.63 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 251.63 li
377.453 251.63 li
377.453 0 li
cp
clp
218.592 149.746 mo
217.51 149.746 216.436 149.688 215.374 149.572 cv
214.169 149.441 212.979 149.235 211.819 148.935 cv
211.722 148.907 li
210.144 148.492 208.616 147.912 207.164 147.139 cv
206.956 147.022 li
206.08 146.542 205.231 145.99 204.417 145.363 cv
203.956 145.008 203.505 144.629 203.065 144.224 cv
202.775 143.956 202.489 143.679 202.21 143.388 cv
201.958 143.127 201.712 142.856 201.47 142.576 cv
200.305 141.231 199.301 140.323 198.133 139.795 cv
197.408 139.468 196.603 139.302 195.674 139.256 cv
195.478 139.246 195.277 139.241 195.07 139.241 cv
194.973 139.241 194.874 139.242 194.773 139.244 cv
194.433 139.256 194.089 139.273 193.71 139.313 cv
190.681 139.632 187.896 140.246 184.809 140.257 cv
184.337 140.259 183.854 140.3 183.367 140.362 cv
183.271 140.374 183.174 140.39 183.077 140.404 cv
182.928 140.425 182.781 140.445 182.634 140.469 cv
182.547 140.484 li
181.99 140.574 181.43 140.678 180.875 140.771 cv
180.233 140.878 179.596 140.972 178.975 141.008 cv
178.973 141.008 li
178.683 140.747 178.306 140.573 177.888 140.573 cv
177.841 140.573 177.792 140.575 177.744 140.58 cv
177.586 140.594 177.423 140.635 177.257 140.705 cv
176.408 141.064 175.256 141.24 174.056 141.24 cv
172.405 141.24 170.664 140.907 169.505 140.26 cv
166.685 138.687 167.292 137.077 166.211 134.976 cv
165.384 133.37 164.4 132.434 162.57 132.241 cv
162.315 132.214 162.064 132.202 161.816 132.202 cv
160.574 132.202 159.405 132.508 158.236 132.814 cv
157.067 133.119 155.898 133.425 154.657 133.425 cv
153.968 133.425 153.257 133.331 152.512 133.091 cv
151.929 132.903 151.366 132.677 150.821 132.424 cv
150.464 132.258 150.125 132.062 149.782 131.871 cv
149.616 131.778 149.443 131.696 149.28 131.598 cv
148.831 131.327 148.4 131.03 147.977 130.72 cv
147.862 130.64 li
147.403 130.3 146.962 129.937 146.534 129.558 cv
146.531 129.556 li
146.53 129.555 li
145.913 129.008 145.316 128.439 144.759 127.829 cv
144.188 127.205 143.658 126.548 143.145 125.879 cv
143.022 125.717 142.9 125.557 142.78 125.393 cv
142.29 124.729 141.817 124.056 141.38 123.374 cv
140.124 121.418 139.024 120.052 136.679 119.408 cv
135.62 119.117 134.548 119.069 133.5 119.069 cv
133.239 119.069 132.979 119.072 132.721 119.075 cv
132.463 119.078 132.207 119.081 131.953 119.081 cv
129.703 119.081 127.658 118.842 126.209 116.25 cv
125.233 114.504 125.524 112.389 125.34 110.425 cv
125.306 110.08 125.259 109.74 125.185 109.408 cv
125.185 109.405 li
125.112 109.072 125.014 108.746 124.884 108.43 cv
124.884 108.43 li
124.779 108.175 124.659 107.924 124.505 107.684 cv
124.364 107.465 124.217 107.283 124.067 107.116 cv
123.972 107.014 li
123.821 106.858 123.667 106.718 123.507 106.605 cv
122.931 106.199 122.305 106.054 121.636 106.008 cv
121.41 105.992 121.18 105.988 120.945 105.988 cv
120.62 105.988 120.286 105.997 119.944 105.999 cv
119.908 105.999 119.871 105.999 119.834 105.999 cv
119.589 105.999 119.34 105.994 119.087 105.979 cv
119.075 105.978 li
118.775 105.959 118.471 105.926 118.163 105.866 cv
118.065 105.848 117.971 105.839 117.88 105.839 cv
117.729 105.839 117.587 105.862 117.454 105.9 cv
117.328 105.927 li
117.172 106.011 li
116.99 106.109 li
116.803 106.279 li
116.712 106.364 li
116.289 106.411 115.876 106.458 115.461 106.505 cv
115.365 106.516 li
115.091 106.547 114.815 106.574 114.544 106.603 cv
114.236 106.635 113.929 106.664 113.625 106.692 cv
113.388 106.714 113.149 106.735 112.914 106.753 cv
112.445 106.788 111.977 106.816 111.51 106.83 cv
111.4 106.834 111.289 106.834 111.179 106.834 cv
111.159 106.834 111.139 106.834 111.119 106.834 cv
111.095 106.834 111.07 106.834 111.045 106.834 cv
110.996 106.834 110.947 106.834 110.898 106.835 cv
110.814 106.835 110.73 106.836 110.646 106.836 cv
110.414 106.836 110.183 106.833 109.951 106.825 cv
109.914 106.824 109.878 106.823 109.841 106.823 cv
109.821 106.823 109.802 106.823 109.783 106.823 cv
109.761 106.824 109.74 106.824 109.719 106.824 cv
109.676 106.824 109.633 106.823 109.59 106.821 cv
109.597 106.805 li
108.504 106.748 107.405 106.61 106.28 106.327 cv
106.077 105.146 105.774 103.962 105.309 102.771 cv
105.138 102.333 105.25 101.926 105.505 101.618 cv
105.129 99.2664 105.131 96.5539 104.893 94.9656 cv
104.328 91.1785 103.19 86.9777 103.837 83.137 cv
104.687 78.0905 108.657 72.3025 112.917 68.6359 cv
112.678 68.5632 112.437 68.4953 112.191 68.4401 cv
110.948 68.0749 110.485 66.4734 111.426 65.5408 cv
115.701 61.2986 120.22 57.3332 124.751 53.3674 cv
126.991 51.4069 129.288 48.7639 131.924 46.968 cv
128.959 46.4548 125.991 45.9475 123.051 45.3366 cv
121.18 44.9484 119.153 44.7424 118.809 42.5701 cv
118.144 38.3601 124.848 34.3987 127.912 32.9582 cv
134.47 29.8747 141.912 28.4597 148.849 26.4876 cv
155.647 24.5549 166.366 23.4065 169.516 16.0949 cv
169.763 15.5248 170.49 15.1958 171.125 15.1958 cv
171.283 15.1958 171.435 15.2163 171.573 15.2586 cv
174.743 16.2316 177.137 17.925 178.901 20.554 cv
180.691 19.8723 182.592 19.424 184.223 18.4841 cv
188.473 16.0359 186.645 13.8274 186.487 10.3318 cv
186.433 9.15044 187.462 8.46314 188.496 8.46314 cv
188.63 8.46314 188.763 8.47456 188.894 8.4978 cv
191.974 9.04321 194.474 9.95089 197.181 11.2327 cv
197.322 11.1369 197.484 11.0574 197.682 11.0115 cv
207.511 8.71457 217.316 7.68385 226.976 4.45867 cv
227.137 4.4048 227.319 4.37864 227.508 4.37864 cv
228.046 4.37864 228.639 4.59135 228.951 4.98074 cv
230.684 7.13987 232.465 9.25458 234.276 11.3469 cv
242.217 8.79224 250.19 6.30541 258.188 3.93869 cv
259.74 3.4795 261.165 2.99999 262.594 2.99999 cv
263.547 2.99999 264.502 3.21362 265.497 3.78929 cv
268.832 5.71994 270.361 8.48798 274.498 9.42845 cv
274.718 9.50215 li
276.086 7.13987 278.582 5.49241 280.904 4.0534 cv
281.172 3.88744 281.535 3.79124 281.892 3.79124 cv
282.22 3.79124 282.543 3.87186 282.785 4.0534 cv
287.382 7.50215 291.836 11.5754 296.772 14.529 cv
301.621 17.4294 308.203 16.8766 313.709 17.28 cv
316.3 17.47 318.958 17.5383 319.739 20.5241 cv
320.46 23.2785 319.35 26.9915 318.358 30.2502 cv
321.612 29.3313 324.869 28.4236 328.128 27.5198 cv
330.317 26.9123 332.735 25.9523 335.083 25.9523 cv
335.872 25.9523 336.653 26.0607 337.415 26.3274 cv
340.059 27.2526 342.035 29.7688 343.98 31.6716 cv
347.245 34.864 350.495 38.0711 353.748 41.2751 cv
354.597 42.112 354.532 43.1433 354.026 43.9108 cv
354.45 45.6785 354.826 47.4524 355.184 49.238 cv
355.727 51.9363 355.39 54.115 358.13 55.3152 cv
361.724 56.8904 365.69 57.6023 369.301 59.1521 cv
375.313 61.7322 376.195 69.7503 376.868 75.5285 cv
377.074 77.2985 377.312 79.2439 377.34 81.1682 cv
377.399 81.2346 li
377.453 81.3127 li
377.349 83.3025 377.374 84.9582 376.27 86.9406 cv
375.43 88.4495 374.38 89.8356 373.258 91.1598 cv
373.092 91.3567 372.926 91.5525 372.758 91.7464 cv
372.55 91.9821 372.346 92.218 372.135 92.4499 cv
371.751 92.8767 371.363 93.299 370.971 93.714 cv
369.442 95.3391 367.868 96.9246 366.308 98.5212 cv
364.772 100.093 362.276 103.454 360.052 103.929 cv
359.903 103.961 359.771 104.01 359.656 104.072 cv
359.456 104.219 li
359.355 104.293 li
359.016 104.379 358.712 104.475 358.422 104.577 cv
358.18 104.667 li
357.958 104.754 357.749 104.847 357.553 104.947 cv
357.385 105.029 li
357.149 105.159 356.934 105.301 356.735 105.457 cv
356.61 105.564 li
356.45 105.698 356.301 105.843 356.162 106 cv
356.05 106.121 li
355.896 106.308 355.754 106.512 355.62 106.733 cv
355.517 106.913 li
355.401 107.119 355.291 107.339 355.187 107.576 cv
355.134 107.693 li
355.018 107.969 354.911 108.271 354.805 108.591 cv
354.727 108.837 li
354.624 109.171 354.522 109.519 354.423 109.903 cv
353.605 113.043 352.436 115.067 349.043 115.887 cv
345.971 116.629 342.654 116.906 339.514 117.063 cv
339.121 117.082 338.688 117.278 338.385 117.581 cv
338.215 117.785 li
338.202 117.807 li
338.089 118.015 li
338.06 118.112 li
338.016 118.274 li
338.004 118.367 338.001 118.463 338.014 118.563 cv
338.248 120.33 338.566 121.966 338.906 123.695 cv
339.36 126.005 339.928 128.605 336.708 129.637 cv
335.595 129.994 334.008 129.829 332.864 130.025 cv
332.495 130.088 332.14 130.174 331.795 130.271 cv
330.219 130.707 328.856 131.45 327.557 132.278 cv
327.433 132.36 li
326.392 133.031 325.383 133.745 324.329 134.387 cv
324.17 134.483 li
324 134.584 323.83 134.685 323.657 134.782 cv
323.551 134.842 323.442 134.899 323.334 134.957 cv
323.203 135.027 323.073 135.099 322.94 135.166 cv
322.76 135.256 322.577 135.34 322.393 135.423 cv
322.187 135.519 li
321.935 135.628 321.678 135.73 321.416 135.823 cv
321.408 135.824 li
321.372 135.838 li
321.26 135.839 li
321.173 135.844 321.086 135.842 320.99 135.866 cv
319.728 136.178 318.632 136.34 317.6 136.34 cv
315.649 136.34 313.93 135.76 311.771 134.517 cv
310.488 133.779 309.06 132.474 307.514 132.375 cv
307.266 132.383 li
307.26 132.377 li
306.922 132.383 306.593 132.44 306.273 132.546 cv
306.272 132.548 li
304.208 133.232 302.553 135.809 301.32 137.822 cv
301.238 137.957 301.157 138.089 301.079 138.217 cv
301.001 138.344 li
300.934 138.453 li
300.784 138.698 300.638 138.933 300.503 139.144 cv
300.116 139.746 299.378 141.555 298.867 141.93 cv
298.725 142.035 298.563 142.12 298.393 142.198 cv
298.277 142.254 298.157 142.303 298.031 142.348 cv
297.299 142.613 296.424 142.71 295.552 142.71 cv
295.483 142.71 295.414 142.709 295.344 142.708 cv
295.342 142.708 li
295.133 142.705 294.928 142.696 294.724 142.684 cv
294.637 142.678 li
294.451 142.666 294.269 142.652 294.091 142.634 cv
293.899 142.614 li
293.758 142.598 293.617 142.583 293.484 142.565 cv
293.282 142.538 293.09 142.51 292.913 142.481 cv
292.609 142.43 292.319 142.368 292.033 142.302 cv
291.026 142.075 290.098 141.806 289.074 141.799 cv
289.037 141.797 289.001 141.797 288.965 141.797 cv
288.821 141.797 288.686 141.809 288.549 141.819 cv
288.401 141.831 288.254 141.846 288.101 141.872 cv
287.936 141.902 287.77 141.93 287.616 141.979 cv
287.284 142.062 286.968 142.174 286.661 142.299 cv
286.489 142.367 li
286.21 142.489 285.939 142.627 285.675 142.777 cv
285.437 142.917 li
285.203 143.059 284.971 143.208 284.747 143.367 cv
284.642 143.441 284.54 143.518 284.437 143.594 cv
284.278 143.714 284.12 143.835 283.964 143.961 cv
282.894 144.815 281.885 145.781 280.793 146.605 cv
280.741 146.646 li
280.598 146.752 280.453 146.855 280.307 146.956 cv
280.183 147.043 li
280.051 147.133 279.915 147.217 279.779 147.301 cv
279.617 147.402 li
279.477 147.485 279.334 147.56 279.19 147.635 cv
279.045 147.715 li
279.041 147.716 li
279.016 147.729 li
278.738 147.767 278.459 147.884 278.204 148.127 cv
277.173 149.106 275.704 149.472 274.09 149.472 cv
270.866 149.472 267.063 148.009 265.021 147.034 cv
264.707 146.884 264.389 146.717 264.069 146.541 cv
263.99 146.498 li
263.709 146.343 263.424 146.179 263.138 146.013 cv
262.408 145.589 261.664 145.146 260.904 144.746 cv
259.499 144.008 258.043 143.425 256.532 143.425 cv
256.355 143.425 256.177 143.433 255.999 143.449 cv
255.896 143.459 255.81 143.489 255.714 143.505 cv
253.724 143.821 252.695 145.314 251.169 146.315 cv
251.113 146.355 li
250.881 146.504 250.638 146.642 250.378 146.761 cv
250.18 146.853 249.989 146.914 249.801 146.963 cv
249.678 146.992 li
249.497 147.031 249.318 147.058 249.144 147.062 cv
249.126 147.062 249.109 147.062 249.091 147.062 cv
248.888 147.062 248.692 147.037 248.5 146.995 cv
248.501 146.995 li
248.499 146.995 li
247.216 146.715 246.14 145.57 245.028 144.505 cv
244.887 144.369 244.746 144.235 244.603 144.105 cv
242.925 142.571 241.321 141.156 239.887 139.377 cv
239.643 139.075 239.265 138.937 238.876 138.937 cv
238.33 138.937 237.765 139.21 237.531 139.68 cv
236.111 142.537 234.02 144.881 232.065 147.355 cv
227.879 148.745 223.354 149.693 218.936 149.742 cv
218.838 149.745 li
218.756 149.745 218.674 149.746 218.592 149.746 cv
251.93 88.1878 mo
255.152 88.1878 255.831 92.7154 256.351 95.0612 cv
257.582 100.603 257.356 104.805 254.034 109.632 cv
251.389 113.476 247.369 116.459 245.187 120.606 cv
242.82 125.107 244.216 131.702 249.977 131.702 cv
250.13 131.702 250.286 131.697 250.445 131.688 cv
253.691 131.494 256.807 129.601 259.477 127.928 cv
261.802 126.472 264.344 124.376 267.097 123.876 cv
267.524 123.799 267.918 123.764 268.288 123.764 cv
270.752 123.764 272.106 125.287 274.564 125.598 cv
274.904 125.641 275.236 125.662 275.561 125.662 cv
282.004 125.662 285.541 117.476 287.086 112.274 cv
287.283 111.608 287.034 111.082 286.611 110.763 cv
287.554 108.119 289.171 105.78 291.47 103.86 cv
292.539 102.968 296.186 99.9387 298.16 99.9387 cv
298.472 99.9387 298.742 100.014 298.954 100.186 cv
299.266 100.439 299.693 100.579 300.108 100.579 cv
300.734 100.579 301.331 100.26 301.461 99.5237 cv
302.291 94.7985 303.927 90.0823 304.423 85.3161 cv
304.65 83.1189 303.55 76.9519 305.521 75.5451 cv
306.812 74.6245 306.006 72.6874 304.795 72.6874 cv
304.694 72.6874 304.59 72.7009 304.484 72.7297 cv
304.783 71.031 304.916 69.2849 305.123 67.7268 cv
305.769 62.862 306.203 57.8982 307.512 53.1535 cv
308.458 49.7277 310.067 47.3499 312.013 47.3499 cv
313.407 47.3499 314.974 48.5707 316.594 51.5008 cv
320.581 58.714 320.116 67.3342 323.068 74.7736 cv
323.315 75.397 323.843 75.8809 324.506 75.8809 cv
324.637 75.8809 324.773 75.862 324.913 75.8215 cv
329.423 74.5217 331.358 70.9905 330.707 66.3826 cv
330.466 64.6804 329.725 63.1794 329.315 61.5286 cv
328.676 58.9475 329.315 56.7194 329.896 54.2233 cv
330.631 51.071 329.914 48.7678 328.65 45.8127 cv
325.585 38.6447 320.483 40.0471 314.079 37.5773 cv
311.46 36.5676 309.639 35.1335 308.122 32.821 cv
307.492 31.8611 307.141 30.8933 306.146 30.2048 cv
305.255 29.5886 304.428 29.3944 303.617 29.3944 cv
302.926 29.3944 302.246 29.5353 301.548 29.6762 cv
300.851 29.817 300.135 29.9579 299.371 29.9579 cv
299.132 29.9579 298.888 29.9441 298.639 29.9123 cv
295.328 29.4885 292.975 25.4788 290.889 23.1945 cv
288.957 21.0778 286.709 18.9548 283.913 18.0539 cv
282.957 17.7457 282.044 17.6057 281.171 17.6057 cv
276.855 17.6057 273.523 21.0337 270.892 24.5164 cv
268.232 28.0393 265.783 31.7126 263.385 35.4172 cv
261.935 37.658 259.54 40.072 258.699 42.6213 cv
257.293 46.8849 261.222 47.5852 264.588 47.6042 cv
264.687 47.6048 264.786 47.6051 264.886 47.6051 cv
268.185 47.6051 271.337 47.2799 274.422 45.9963 cv
277.874 44.5593 280.82 42.0774 284.337 40.8074 cv
285.357 40.4389 286.27 40.2713 287.085 40.2713 cv
293.414 40.2713 293.716 50.4084 290.875 55.2273 cv
288.263 59.657 283.846 64.6901 279.507 67.4548 cv
278.661 67.9939 278.668 68.9544 279.096 69.6062 cv
278.09 70.0666 277.072 70.2493 276.05 70.2493 cv
273.601 70.2493 271.129 69.199 268.743 68.4055 cv
263.305 66.5974 257.852 64.8395 252.425 63.0012 cv
243.849 60.0965 234.86 58.324 226.483 54.8318 cv
224.499 54.0041 221.94 53.262 222.504 50.6946 cv
222.994 48.4616 225.682 45.9597 227.047 44.3235 cv
230.314 40.4041 233.742 36.6082 237.038 32.7087 cv
240.67 28.4123 244.509 24.3909 248.681 20.6155 cv
251.978 17.6321 256.723 14.9621 259.059 11.132 cv
259.593 10.2565 258.961 8.86948 257.885 8.86948 cv
257.845 8.86948 257.805 8.87136 257.764 8.8752 cv
251.9 9.42694 246.647 13.0779 240.986 14.6184 cv
235.161 16.2031 229.178 16.9945 223.178 16.9945 cv
220.837 16.9945 218.493 16.874 216.155 16.633 cv
215.042 16.5183 213.894 16.4294 212.755 16.4294 cv
209.399 16.4294 206.134 17.2025 204.178 20.364 cv
202.636 22.8562 202.986 32.3879 200.632 33.4548 cv
200.487 33.5393 li
196.737 31.2647 194.963 24.841 189.957 24.841 cv
189.921 24.841 189.885 24.8413 189.848 24.842 cv
185.461 24.9226 184.17 29.843 186.147 33.0125 cv
189.164 37.8454 195.579 40.3532 199.694 44.1672 cv
201.963 46.2697 203.752 48.7634 201.293 51.7083 cv
199.733 53.5754 196.758 54.2258 194.469 54.5901 cv
193.047 54.8168 191.636 54.8996 190.227 54.8996 cv
187.689 54.8996 185.161 54.6306 182.597 54.4495 cv
182.046 54.4105 181.512 54.391 180.993 54.391 cv
174.905 54.391 171.01 57.084 167.929 62.6823 cv
165.653 66.8215 164.486 72.9421 170.537 74.2102 cv
171.109 74.3301 171.708 74.3845 172.319 74.3845 cv
174.279 74.3844 176.361 73.8249 178.038 73.0715 cv
181.811 71.3772 183.924 66.7512 188.064 65.9046 cv
188.493 65.8169 188.884 65.7756 189.242 65.7756 cv
193.584 65.7756 192.933 71.8811 193.091 75.4021 cv
193.266 79.303 193.253 83.8249 191.288 87.3323 cv
188.392 92.5017 180.329 93.7908 174.899 94.3752 cv
173.016 94.5781 171.121 94.6728 169.224 94.6728 cv
165.261 94.6728 161.289 94.2591 157.403 93.5554 cv
154.219 92.9787 150.201 92.5398 147.973 89.9323 cv
147.048 88.8493 146.854 87.6267 145.548 86.822 cv
144.654 86.2719 143.711 86.0498 142.755 86.0498 cv
140.491 86.0498 138.152 87.2946 136.21 88.381 cv
136.032 88.4392 135.864 88.5344 135.714 88.6589 cv
135.632 88.7048 li
134.418 89.385 134.867 90.9158 135.843 91.3669 cv
137.857 93.6003 140.32 95.093 142.771 96.841 cv
145.037 98.4558 146.995 100.134 147.943 102.858 cv
148.422 104.233 148.419 105.679 149.174 106.978 cv
152.077 111.97 160.439 115.424 165.866 115.851 cv
166.293 115.885 166.717 115.901 167.139 115.901 cv
173.435 115.9 179.1 112.255 183.657 108.148 cv
187.177 104.974 190.127 101.229 193.672 98.072 cv
196.599 95.4641 199.762 93.1477 202.982 90.9147 cv
203.227 90.8669 203.471 90.7595 203.7 90.5608 cv
204.004 90.2952 204.321 90.0456 204.628 89.784 cv
204.926 89.5803 205.222 89.3733 205.521 89.1701 cv
205.751 89.0144 205.909 88.8244 206.018 88.6203 cv
209.531 85.7351 213.202 83.0564 216.902 80.4094 cv
219.469 78.5735 222.097 76.8391 224.683 75.0324 cv
226.573 73.7121 230.646 69.4334 233.194 69.4334 cv
233.377 69.4334 233.552 69.4555 233.718 69.5021 cv
239.92 71.2502 230.536 82.3166 228.843 84.7429 cv
225.568 89.4411 222.303 94.1667 219.18 98.9675 cv
218.296 100.329 210.487 109.902 216.329 110.399 cv
216.412 110.406 216.495 110.409 216.579 110.409 cv
220.576 110.409 225.145 102.466 227.606 100.17 cv
227.664 100.116 229.48 98.3567 230.138 98.2463 cv
230.78 98.1389 231.268 98.0909 231.643 98.0909 cv
233.556 98.0909 232.494 99.3462 233.734 100.346 cv
234.436 100.911 234.784 101.636 235.74 101.947 cv
236.097 102.062 236.446 102.115 236.785 102.115 cv
238.6 102.115 240.143 100.613 241.283 99.2815 cv
243.033 97.2375 244.187 94.7712 245.832 92.6594 cv
246.856 91.344 248.722 89.094 250.341 88.5012 cv
250.93 88.2852 251.457 88.1878 251.93 88.1878 cv
196.879 116.296 mo
196.67 116.296 196.451 116.32 196.224 116.372 cv
194.363 116.793 193.413 118.799 194.29 120.5 cv
195.056 121.987 197.289 123.548 199.206 123.548 cv
199.73 123.548 200.232 123.431 200.673 123.163 cv
202.987 121.759 202.377 118.559 200.15 117.505 cv
199.695 117.29 199.205 117.142 198.705 117.07 cv
198.236 116.596 197.614 116.296 196.879 116.296 cv
324.974 98.1026 mo
323.778 98.1026 322.499 98.4835 321.592 98.8855 cv
319.436 99.8395 316.455 101.722 316.504 104.419 cv
316.523 105.523 316.912 106.238 317.519 106.673 cv
317.549 107.604 318.285 108.07 319.018 108.07 cv
319.618 108.07 320.216 107.759 320.427 107.137 cv
321.297 107.012 322.221 106.731 323.112 106.36 cv
324.207 106.018 325.304 105.376 326.201 104.564 cv
326.737 104.13 327.167 103.691 327.398 103.284 cv
327.49 103.124 327.554 102.97 327.616 102.817 cv
328.199 101.774 328.389 100.655 327.884 99.6408 cv
327.309 98.4915 326.183 98.1026 324.974 98.1026 cv
351.114 69.5721 mo
348.433 69.5721 346.042 70.1916 344.987 72.0578 cv
343.73 74.2815 345.539 76.9626 347.307 78.2717 cv
348.844 79.4089 350.781 80.089 352.74 80.3176 cv
352.853 80.512 352.963 80.7101 353.093 80.882 cv
353.434 81.328 353.899 81.513 354.356 81.513 cv
355.138 81.513 355.897 80.9723 355.97 80.2697 cv
358.182 79.9167 360.467 78.6936 360.543 76.1775 cv
360.546 76.071 360.541 75.9607 360.535 75.8499 cv
360.868 75.3987 361.052 74.9085 361.052 74.428 cv
361.169 74.341 361.287 74.2536 361.396 74.1701 cv
362.422 73.3894 362.341 71.8713 361.038 71.4289 cv
358.937 70.7151 354.757 69.5721 351.114 69.5721 cv
168.092 30.2752 mo
167.851 30.2752 167.608 30.3313 167.382 30.4548 cv
163.539 32.551 160.354 35.3874 157.047 38.2175 cv
153.216 41.4953 149.165 44.5066 145.567 48.052 cv
142.17 51.3997 139.238 55.2248 136.345 59.008 cv
135.307 60.365 133.973 61.9372 132.981 63.6111 cv
130.718 65.1907 128.658 66.8757 127.344 69.3679 cv
126.878 70.2527 127.295 71.2624 128.24 71.5715 cv
129.553 72.0008 130.84 72.1951 132.098 72.1951 cv
139.329 72.1951 145.597 65.7738 150.136 60.6101 cv
157.307 52.4533 166.266 42.7004 169.586 32.1486 cv
169.909 31.1208 169.024 30.2752 168.092 30.2752 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
.654902 .648627 .64549 rgb
f
349.197 75.9553 mo
348.985 75.8024 348.783 75.6399 348.599 75.4582 cv
347.251 74.1243 347.334 73.2908 349.163 72.9607 cv
349.399 72.9182 349.646 72.8992 349.888 72.8698 cv
349.789 73.0358 349.699 73.2043 349.616 73.3752 cv
349.523 73.4411 349.417 73.4949 349.329 73.5647 cv
348.722 74.0417 348.769 74.7776 349.121 75.3415 cv
349.125 75.5519 349.148 75.7576 349.197 75.9553 cv
f
115.712 103.364 mo
116.041 102.984 116.542 102.747 117.163 102.866 cv
119.675 103.349 121.879 102.159 123.505 104.684 cv
125.128 107.206 123.75 110.64 125.209 113.25 cv
127.638 117.596 131.742 115.326 135.679 116.408 cv
138.024 117.052 139.124 118.418 140.38 120.374 cv
143.038 124.515 146.615 128.512 151.511 130.091 cv
155.214 131.284 158.062 128.871 161.57 129.241 cv
163.4 129.434 164.384 130.37 165.211 131.976 cv
166.292 134.077 165.685 135.687 168.505 137.26 cv
170.507 138.376 174.239 138.559 176.257 137.705 cv
176.919 137.425 177.542 137.62 177.973 138.008 cv
179.875 137.899 181.919 137.264 183.809 137.257 cv
186.896 137.246 189.681 136.632 192.71 136.313 cv
193.442 136.236 194.079 136.226 194.676 136.256 cv
194.494 136.225 li
193.223 134.962 191.354 134.318 189.573 134.845 cv
189.342 134.914 li
188.609 135.131 187.998 135.503 187.499 135.972 cv
185.637 136.456 182.815 136.198 181.203 136.318 cv
178.835 136.493 176.44 136.831 174.061 136.814 cv
171.959 136.799 169.121 136.879 167.729 134.913 cv
166.874 133.704 166.981 132.026 165.88 130.796 cv
163.543 128.187 161.026 129.082 158.085 129.34 cv
153.744 129.719 149.268 125.834 145.866 123.054 cv
143.135 120.822 141.639 117.02 138.29 115.682 cv
135.001 114.368 131.767 116.42 128.851 113.818 cv
125.573 110.893 126.557 106.183 124.155 102.924 cv
121.5 99.3196 116.714 100.647 112.855 100.835 cv
110.691 100.941 109.216 102.139 108.59 103.821 cv
110.93 103.941 113.248 103.644 115.712 103.364 cv
cp
.764706 .890196 .921569 rgb
f
249.378 143.761 mo
251.388 142.836 252.4 140.871 254.715 140.504 cv
254.193 140.567 253.674 140.662 253.158 140.827 cv
251.824 141.254 250.656 142.027 249.573 142.892 cv
249.373 143.052 248.605 143.626 248.144 144.062 cv
248.533 144.053 248.942 143.962 249.378 143.761 cv
cp
f
200.469 139.576 mo
208.219 148.536 220.684 147.801 231.065 144.355 cv
233.02 141.881 235.111 139.537 236.531 136.68 cv
236.931 135.876 238.3 135.649 238.887 136.377 cv
240.321 138.156 241.925 139.571 243.603 141.105 cv
244.871 142.264 246.054 143.68 247.501 143.995 cv
246.913 143.325 245.914 142.26 245.602 141.864 cv
244.553 140.531 243.477 139.137 242.803 137.578 cv
241.176 133.822 234.71 134.835 233.972 138.733 cv
233.84 139.437 233.693 140.139 233.549 140.842 cv
229.425 141.017 225.639 144.12 221.447 144.826 cv
215.258 145.868 209.967 144.404 204.906 140.904 cv
202.475 139.223 199.894 137.646 197.132 136.795 cv
198.302 137.322 199.305 138.231 200.469 139.576 cv
cp
f
297.867 138.93 mo
298.378 138.555 299.116 136.746 299.503 136.144 cv
299.787 135.702 300.104 135.172 300.453 134.605 cv
299.888 135.264 299.383 136.081 298.991 137.085 cv
298.216 137.691 297.57 138.526 297.031 139.348 cv
297.337 139.238 297.627 139.108 297.867 138.93 cv
cp
f
306.514 129.375 mo
308.06 129.474 309.488 130.779 310.771 131.517 cv
314.072 133.418 316.343 133.768 319.99 132.866 cv
320.14 132.829 320.28 132.821 320.416 132.823 cv
324.516 131.37 327.234 127.819 331.864 127.025 cv
333.008 126.829 334.595 126.994 335.708 126.637 cv
338.928 125.605 338.36 123.005 337.906 120.695 cv
337.566 118.966 337.248 117.33 337.014 115.563 cv
336.903 114.725 337.786 114.099 338.514 114.063 cv
341.654 113.906 344.971 113.629 348.043 112.887 cv
351.436 112.067 352.605 110.043 353.423 106.903 cv
354.333 103.403 355.294 102.071 358.355 101.293 cv
358.526 101.125 358.752 100.993 359.052 100.929 cv
361.276 100.454 363.772 97.0935 365.308 95.5212 cv
366.868 93.9245 368.442 92.3391 369.971 90.7141 cv
371.345 89.2556 372.706 87.7322 373.883 86.0906 cv
371.405 85.1628 368.005 86.5359 367.657 90.0569 cv
367.116 95.5261 357.561 99.197 354.216 102.989 cv
352.316 105.143 351.114 107.915 349.183 109.971 cv
348.42 110.785 347.255 111.302 346.501 112.115 cv
341.424 109.687 335.453 114.437 334.443 119.26 cv
334.109 120.856 334.238 122.388 334.509 123.913 cv
332.257 124.051 330.031 124.875 328.165 126.125 cv
326.936 126.948 326.039 128.368 324.759 129.048 cv
321.274 130.898 316.933 130.413 313.292 132.236 cv
313.011 131.752 312.729 131.279 312.45 130.818 cv
309.013 125.164 301.14 127.927 300.63 134.019 cv
300.621 134.124 300.625 134.227 300.624 134.331 cv
302.071 132.003 304.04 129.217 306.514 129.375 cv
cp
f
277.204 145.127 mo
277.468 144.876 277.758 144.749 278.045 144.715 cv
281.254 143.114 283.352 139.543 287.042 138.879 cv
288.828 138.558 290.194 139.196 291.913 139.481 cv
292.579 139.592 293.449 139.693 294.344 139.708 cv
291.973 137.558 288.374 137.062 284.62 138.579 cv
281.893 139.682 280.068 142.268 277.371 143.034 cv
274.603 143.82 270.18 144.109 267.309 143.785 cv
265.76 143.611 264.756 142.843 263.298 142.309 cv
262.155 141.89 261.025 141.924 259.904 141.746 cv
261.329 142.495 262.701 143.405 264.021 144.034 cv
267.086 145.496 274.113 148.06 277.204 145.127 cv
cp
f
360.083 77.9797 mo
358.42 79.175 355.956 79.1804 354.009 79.6169 cv
352.207 80.0207 350.012 80.2243 348.882 78.4226 cv
348.752 78.216 348.66 78.008 348.583 77.799 cv
348.052 77.6135 347.608 77.1667 347.555 76.4582 cv
347.408 74.4475 346.951 72.2116 347.683 70.261 cv
348.594 67.8386 350.352 67.967 352.534 68.0569 cv
356.055 68.2014 360.847 67.216 361.555 71.9582 cv
361.861 74.0051 361.957 76.6311 360.083 77.9797 cv
cp
333.978 70.7488 mo
333.814 73.7717 332.091 75.7834 329.394 76.9753 cv
327.456 77.8318 323.866 79.591 321.966 78.1701 cv
321.371 77.7258 321.171 77.2165 321.276 76.4763 cv
321.622 74.0534 321.688 71.674 321.556 69.321 cv
320.212 66.0862 319.581 62.2658 320.034 59.4968 cv
319.207 55.9197 318.177 52.3547 317.234 48.7463 cv
315.896 48.3371 314.587 47.8425 313.325 47.2019 cv
310.696 45.8664 308.164 43.1111 307.387 47.4299 cv
306.686 51.3337 307.686 55.7497 307.431 59.7175 cv
307.009 66.3039 305.556 72.7566 304.418 79.2405 cv
303.768 82.9377 303.073 86.6999 302.969 90.4582 cv
302.881 93.6662 303.739 96.7654 303.555 99.9582 cv
303.488 101.132 302.344 101.776 301.299 101.254 cv
299.957 100.583 298.956 99.7082 298.056 98.6384 cv
296.052 99.9475 294.005 101.323 293.017 103.549 cv
292.761 104.127 292.311 104.347 291.85 104.324 cv
290.586 105.996 289.039 107.559 287.403 109.009 cv
286.76 111.801 286.128 114.623 285.956 117.491 cv
285.879 118.764 285.961 120.051 285.697 121.311 cv
285.079 124.254 283.706 124.275 281.157 124.374 cv
278.541 124.475 275.01 128.08 272.286 126.347 cv
271.405 125.787 271.139 124.951 271.179 124.064 cv
271.002 123.989 270.842 123.893 270.7 123.772 cv
270.049 124.646 269.148 125.505 268.164 126.625 cv
265.097 130.113 262.746 132.157 258.009 132.941 cv
253.952 133.612 249.281 135.482 245.157 134.822 cv
244.55 134.724 244.011 133.967 244.055 133.375 cv
244.069 133.2 244.097 133.031 244.12 132.86 cv
243.081 131.96 242.177 130.858 241.451 129.839 cv
240.872 129.027 240.018 127.78 240.276 126.726 cv
240.343 126.456 240.456 126.226 240.59 126.016 cv
240.37 125.519 240.379 124.918 240.829 124.398 cv
244.666 119.959 248.863 115.842 253.067 111.754 cv
254.752 110.115 256.802 107.878 259.056 106.278 cv
258.483 102.301 258.071 98.3205 257.012 94.4153 cv
256.641 93.0451 256.134 89.7112 254.804 88.8977 cv
252.234 87.3249 248.882 91.8513 247.528 93.5207 cv
244.744 96.9524 242.493 100.615 238.95 103.352 cv
238.192 103.938 237.141 103.959 236.594 103.049 cv
235.173 100.686 235.249 96.9553 231.439 99.4568 cv
229.622 100.651 228.268 102.98 226.897 104.651 cv
224.705 107.32 222.069 110.96 218.222 110.792 cv
217.367 110.755 216.776 110.129 216.722 109.292 cv
216.252 101.962 222.5 95.7776 226.578 90.3215 cv
230.203 85.4724 234.06 80.4543 236.446 74.8479 cv
236.976 73.6013 237.966 71.489 237.646 70.0769 cv
236.992 67.1926 234.113 69.2024 232.334 70.2087 cv
227.23 73.0949 222.72 76.9499 218.417 80.8948 cv
214.476 84.5066 210.23 86.5163 205.81 89.4436 cv
201.909 92.0276 197.831 96.0324 193.402 97.8786 cv
193.305 97.9812 193.205 98.0852 193.116 98.1858 cv
190.199 101.498 187.618 105.197 185.089 108.813 cv
183.594 110.95 182.007 113.409 179.634 114.663 cv
177.028 116.039 173.624 115.678 170.788 115.864 cv
163.793 116.322 156.791 116.612 151.521 111.244 cv
150.259 109.959 149.505 108.526 148.562 107.007 cv
147.513 105.316 146.045 103.984 144.979 102.393 cv
143.75 100.555 143.787 99.216 143.992 97.2029 cv
143.784 96.9851 143.581 96.7654 143.386 96.5437 cv
142.195 96.0105 141.011 95.2527 139.977 94.4094 cv
138.504 93.657 135.23 92.4421 134.693 90.8362 cv
134.604 90.5715 134.565 90.3196 134.552 90.0749 cv
134.297 90.1291 134.043 90.1843 133.788 90.238 cv
131.902 90.6389 131.103 87.7463 132.99 87.3454 cv
136.241 86.6545 139.458 84.8391 142.66 84.4026 cv
144.211 84.1911 145.359 84.4475 146.335 85.6784 cv
146.833 86.3069 147.146 87.0339 147.343 87.8152 cv
154.034 89.7878 160.736 91.0158 167.953 90.9455 cv
174.173 90.8855 180.32 89.7922 186.511 89.3528 cv
187.959 88.1955 189.455 87.0915 190.822 85.8484 cv
191.525 82.6072 192.432 79.384 192.986 76.2014 cv
193.3 74.4016 193.844 71.8938 193.464 70.008 cv
192.733 66.3972 189.672 65.4533 186.326 65.3347 cv
186.135 65.3279 185.944 65.3323 185.753 65.3298 cv
184.507 69.8591 179.534 74.4338 175.705 75.1897 cv
171.661 75.988 164.597 76.7619 164.928 71.1155 cv
165.09 68.3777 165.021 63.7712 166.585 61.3103 cv
168.619 58.1067 173.671 56.4343 176.894 54.7917 cv
179.874 53.2732 185.133 48.2365 188.592 48.7419 cv
188.685 48.7209 188.774 48.6824 188.869 48.6687 cv
191.243 48.323 191.444 50.0451 193.062 51.2419 cv
194.44 52.2605 201.926 52.4841 202.361 49.717 cv
202.08 48.5422 201.706 47.4997 201.253 46.5373 cv
198.543 44.1531 195.441 42.1799 192.691 39.8596 cv
192.227 39.6213 191.759 39.3913 191.271 39.1863 cv
189.017 38.2351 186.262 37.2981 185.122 34.9094 cv
183.033 30.5378 186.944 25.2907 190.764 23.5486 cv
196.082 21.1233 196.955 24.2717 198.233 28.8869 cv
198.271 29.0212 198.318 29.2307 198.374 29.4851 cv
199.024 30.6057 199.535 31.8908 199.729 33.1477 cv
199.865 33.3865 199.997 33.6282 200.127 33.8713 cv
200.373 33.9753 200.642 33.9074 200.939 33.5935 cv
201.624 32.8699 201.548 28.011 201.776 26.6428 cv
201.802 26.4924 201.826 26.3406 201.851 26.1892 cv
201.845 25.3757 201.871 24.5691 201.975 23.781 cv
202.135 22.5857 202.529 21.779 203.165 21.2488 cv
203.04 20.3889 203.222 19.5417 203.913 18.7976 cv
203.963 18.1599 204.126 17.5691 204.511 17.1179 cv
205.793 15.615 208.819 16.1169 210.555 15.948 cv
215.117 15.5046 219.268 16.2019 223.805 16.3752 cv
227.026 16.4983 230.411 15.3425 233.538 16.0119 cv
234.201 16.154 234.634 16.843 234.641 17.508 cv
236.794 17.6106 238.928 17.5803 240.9 17.0603 cv
246.755 15.5163 251.041 10.1404 257.074 9.09544 cv
257.591 9.00559 258.078 9.14622 258.431 9.43186 cv
259.027 9.06614 259.61 8.68186 260.216 8.32981 cv
261.666 7.48655 263.324 9.54026 262.033 10.6858 cv
261.297 11.3391 260.523 11.9206 259.729 12.5036 cv
259.385 12.7561 259.047 12.8186 258.741 12.7624 cv
258.521 12.9021 258.309 13.0525 258.091 13.1936 cv
255.897 17.7136 250.776 21.5022 246.264 24.5598 cv
245.704 25.2121 245.088 25.8386 244.45 26.5193 cv
241.724 29.4289 239.171 32.5183 236.506 35.4831 cv
233.771 38.5237 230.992 41.5227 228.325 44.6233 cv
225.921 47.4177 222.635 50.5447 220.728 53.8357 cv
224.408 55.6291 228.971 56.0134 232.831 57.2405 cv
237.225 58.6374 241.397 60.3757 245.461 62.5447 cv
250.599 65.2883 255.149 65.9035 260.621 67.3454 cv
264.356 68.3293 268.728 71.8977 272.61 71.6726 cv
276.126 71.4685 280.727 63.7829 282.799 61.1921 cv
284.881 58.5871 290.732 53.4216 291.276 50.2263 cv
291.75 47.4441 289.309 41.2766 286.657 40.5276 cv
286.387 40.4514 286.109 40.4324 285.828 40.4392 cv
284.877 40.7478 283.93 41.0637 283.022 41.4197 cv
281.126 42.5315 279.199 44.2615 277.621 44.905 cv
277.442 44.9548 li
277.055 45.2278 276.666 45.4973 276.267 45.7546 cv
274.583 46.8445 270.449 49.5901 268.303 48.2336 cv
268.126 48.1208 267.984 47.9988 267.858 47.8723 cv
266.296 48.2688 264.351 48.3493 262.428 48.0652 cv
262.223 48.0808 262.023 48.0456 261.836 47.9675 cv
259.664 47.5617 257.606 46.7029 256.329 45.3523 cv
254.069 42.9656 256.114 40.4416 258.044 38.5334 cv
260.743 35.864 263.257 33.5061 266.181 31.4099 cv
267.209 29.6355 268.479 27.8933 269.315 26.4787 cv
270.69 24.1526 272.166 21.7849 273.876 19.6926 cv
277.387 15.3938 280.039 15.5393 284.229 18.4968 cv
287.468 20.782 291.025 22.7234 294.539 24.5442 cv
296.363 25.489 298.262 26.2619 299.882 27.4704 cv
301.321 26.5593 302.849 26.0476 304.44 26.4704 cv
308.153 27.4568 309.165 31.4485 310.936 34.3425 cv
312.021 36.1155 313.436 37.5984 314.924 39.0154 cv
315.291 38.3454 316.102 37.8845 316.979 38.3298 cv
320.612 40.1755 325.384 40.7741 329.334 41.8088 cv
331.487 42.3733 333.036 43.049 333.119 45.5466 cv
333.204 48.0744 331.882 50.6291 331.649 53.1765 cv
331.474 55.0974 331.263 57.1828 329.76 58.4455 cv
329.9 58.7912 330.039 59.1399 330.184 59.4778 cv
331.63 62.8337 334.185 66.9382 333.978 70.7488 cv
cp
329.336 106.06 mo
329.583 106.809 329.05 107.725 328.288 107.905 cv
326.531 108.32 324.732 108.345 322.961 108.661 cv
321.747 108.878 320.54 109.231 319.294 109.121 cv
317.226 108.94 315.494 107.259 315.201 105.207 cv
314.617 101.119 319.558 97.6853 323.074 97.0119 cv
323.787 96.8752 324.45 97.1716 324.778 97.7912 cv
324.931 97.7527 325.085 97.7107 325.24 97.6789 cv
325.78 97.5676 326.502 97.7273 326.831 98.2302 cv
328.208 98.1242 329.775 98.4734 330.181 99.9944 cv
330.587 101.514 329.607 102.906 328.442 103.921 cv
328.754 104.628 329.094 105.327 329.336 106.06 cv
cp
202.472 123.208 mo
200.781 123.055 199.272 122.971 197.589 123.182 cv
196.45 123.324 195.21 123.39 194.19 122.774 cv
192.219 121.583 192.595 119.16 192.639 117.208 cv
192.659 116.324 193.511 115.651 194.322 115.712 cv
194.363 115.58 194.405 115.446 194.443 115.31 cv
194.636 114.62 195.317 114.172 195.998 114.211 cv
196.642 113.865 197.514 113.911 198.017 114.701 cv
199.419 116.901 201.158 118.823 203.229 120.413 cv
204.259 121.203 204.137 123.359 202.472 123.208 cv
cp
125.703 69.2678 mo
125.786 67.5788 128.537 66.2561 129.745 65.6008 cv
130.374 65.259 131.013 64.9582 131.662 64.6941 cv
132.097 63.9895 132.639 63.3323 133.086 62.7156 cv
133.919 61.5642 134.77 60.4201 135.627 59.2805 cv
136.83 57.2307 138.61 55.2741 139.468 54.195 cv
140.435 52.9768 141.434 51.7898 142.46 50.6311 cv
142.485 50.4382 142.553 50.2375 142.678 50.0349 cv
146.31 44.0881 151.472 39.1325 157.137 35.0876 cv
158.608 34.0378 160.728 32.7903 162.72 32.6809 cv
162.812 32.009 163.285 31.3664 164.139 31.2917 cv
164.405 31.2683 164.664 31.2087 164.915 31.1257 cv
165.487 30.7029 166.076 30.343 166.662 30.1042 cv
167.579 29.363 168.402 28.4289 169.162 27.7312 cv
169.924 27.0315 170.942 27.2336 171.517 28.0349 cv
172.737 29.7336 173.471 31.7239 172 33.5002 cv
171.796 33.7175 li
171.766 34.2219 171.49 34.7239 171.063 35.0036 cv
169.413 36.0823 167.932 37.3054 166.512 38.6145 cv
165.584 41.0583 163.394 43.4968 162.283 45.01 cv
158.936 49.5657 155.581 54.053 152.335 58.6448 cv
151.46 61.2234 149.787 63.886 147.447 65.0847 cv
146.701 65.7883 145.891 66.3972 145.035 66.9294 cv
143.319 69.0793 138.823 70.7463 137.329 71.1384 cv
135.166 71.7068 125.493 73.4958 125.703 69.2678 cv
cp
372.603 69.571 mo
372.273 64.4299 370.606 59.9533 366.059 57.1389 cv
362.448 54.9035 358.136 52.8449 353.845 51.8391 cv
352.949 48.2903 352.367 44.6169 350.774 41.2761 cv
348.557 36.6257 345.011 32.6467 340.784 29.7322 cv
333.44 24.6687 323.619 26.863 315.448 30.6037 cv
315.61 29.8669 315.764 29.1286 315.903 28.3865 cv
316.377 25.8635 317.367 22.7248 316.359 20.2502 cv
315.415 17.9324 313.034 16.7068 310.688 16.2473 cv
308.041 15.7287 305.552 16.9612 302.862 16.3615 cv
302.493 16.2795 302.137 16.2385 301.795 16.2287 cv
300.823 15.8132 299.85 15.3904 298.872 14.9685 cv
295.525 13.5266 290.662 12.7199 288.043 10.2121 cv
285.418 7.69895 284.06 4.79466 279.786 5.21067 cv
277.125 5.46995 274.927 7.04612 272.903 8.79368 cv
270.474 7.42893 268.311 5.45872 265.707 4.39768 cv
262.092 2.92552 259.045 3.90891 255.606 5.32884 cv
251.377 7.07542 246.752 7.6179 242.378 8.95969 cv
239.865 9.7302 237.403 10.6394 234.974 11.6335 cv
234.151 10.4724 233.325 9.31321 232.512 8.14134 cv
229.732 4.13401 227.342 2.67991 222.57 4.37864 cv
220.506 5.11399 218.453 6.02512 216.268 6.35667 cv
213.555 6.76829 210.804 6.47678 208.089 6.98997 cv
205.743 7.43333 203.512 8.40647 201.161 8.80393 cv
199.072 9.15696 197.029 9.07444 194.971 9.5012 cv
193.627 8.55833 191.97 8.23606 190.279 8.97923 cv
187.966 9.99632 186.794 12.3952 187.384 14.8782 cv
187.498 15.3552 187.617 15.8318 187.723 16.3069 cv
184.191 17.635 180.516 18.574 176.755 19.0427 cv
176.551 19.0823 li
176.548 19.073 li
175.887 16.4543 172.961 14.8767 170.397 15.5808 cv
168.244 16.1726 166.885 18.113 166.78 20.2229 cv
153.75 22.3293 141.293 26.8098 128.77 31.0427 cv
128.007 31.301 127.381 31.6804 126.882 32.1413 cv
126.768 32.1482 126.66 32.1423 126.545 32.1521 cv
120.188 32.6863 120.104 42.6487 126.545 42.1521 cv
127.121 42.1072 127.705 42.0998 128.292 42.115 cv
128.631 42.1916 128.966 42.3034 129.292 42.4851 cv
130.431 42.8806 131.45 42.8635 132.312 42.5613 cv
132.889 42.6628 133.466 42.7732 134.041 42.8943 cv
131.608 45.0774 129.176 47.2615 126.743 49.445 cv
123.104 52.7107 119.52 55.9133 116.965 60.1081 cv
116.705 60.3088 116.458 60.5241 116.195 60.7214 cv
114.214 62.2102 113.462 64.6555 114.083 66.6867 cv
111.079 69.321 108.496 72.3435 106.844 76.1848 cv
103.975 82.8489 104.24 90.0481 105.511 97.0476 cv
105.604 97.5603 105.759 98.0075 105.953 98.4045 cv
106.437 100.658 108.264 102.594 111.131 102.558 cv
112.387 102.542 113.395 102.144 114.162 101.52 cv
117.213 101.276 120.254 101.1 123.301 100.756 cv
123.531 102.316 123.634 103.894 123.885 105.43 cv
124.145 106.062 124.274 106.734 124.34 107.426 cv
124.615 108.356 124.984 109.262 125.546 110.122 cv
126.787 112.028 128.486 113.228 130.679 113.742 cv
131.907 114.03 133.014 113.724 134.19 113.825 cv
136.465 114.021 136.665 114.173 138.277 116.012 cv
139.866 117.824 141.017 119.844 142.901 121.409 cv
144.728 122.927 146.929 123.821 148.838 125.215 cv
150.844 126.681 152.366 128.239 154.947 128.643 cv
156.135 128.829 157.449 128.728 158.624 128.504 cv
159.171 128.335 159.719 128.166 160.265 127.997 cv
160.64 127.942 160.927 127.882 161.172 127.82 cv
162.268 129.092 163.763 129.465 165.197 129.206 cv
167.017 137.075 174.499 136.086 181.306 136.013 cv
185.831 135.965 189.799 134.54 194.386 135.173 cv
198.716 135.771 200.274 137.192 203.39 140.033 cv
208.472 144.668 216.03 146.228 222.712 145.021 cv
226.035 144.421 229.071 143.107 231.737 141.047 cv
234.233 139.119 236.002 136.354 238.466 134.433 cv
240.594 136.709 242.857 138.847 245.291 140.843 cv
248.388 143.385 252.173 142.286 253.647 138.637 cv
253.003 140.234 254.276 138.433 254.735 137.773 cv
255.87 139.246 260.903 140.78 262.306 141.345 cv
268.197 143.716 273.6 145.24 279.705 142.678 cv
280.77 142.231 281.78 141.678 282.778 141.103 cv
283.93 140.16 285.149 139.344 286.616 138.979 cv
286.902 138.842 287.191 138.708 287.485 138.585 cv
290.183 137.458 292.615 138.593 295.25 137.716 cv
297.996 136.802 299.086 134.484 300.378 132.14 cv
301.48 130.139 302.834 128.47 304.414 126.962 cv
305.002 127.205 305.674 127.343 306.439 127.329 cv
309.427 127.272 311.9 129.449 314.706 130.243 cv
317.395 131.004 320.216 130.984 322.778 129.821 cv
325.555 128.559 327.942 126.669 330.778 125.413 cv
333.387 124.258 335.927 122.79 336.955 119.966 cv
337.186 119.33 337.311 118.62 337.383 117.903 cv
337.248 117.134 337.12 116.364 337.014 115.563 cv
336.963 115.177 337.128 114.84 337.386 114.58 cv
337.365 114.292 337.344 114.004 337.322 113.715 cv
337.323 113.602 337.319 113.518 337.318 113.42 cv
340.248 112.333 343.497 112.383 346.467 111.559 cv
351.592 110.138 353.214 105.538 354.272 100.931 cv
357.314 98.9773 360.315 97.2141 363.044 94.6814 cv
366.635 92.3908 369.887 89.4324 372.165 85.8664 cv
375.352 80.8757 372.956 75.0578 372.603 69.571 cv
cp
f
200.626 31.9348 mo
200.698 32.3991 201.405 32.4475 201.61 32.0637 cv
201.851 31.614 202.025 31.1369 202.167 30.6472 cv
201.912 28.3108 201.682 25.9856 201.975 23.781 cv
201.995 23.636 202.029 23.5154 202.055 23.3816 cv
201.55 20.6975 200.821 18.0212 200.7 15.7854 cv
200.663 15.112 199.652 15.1018 199.645 15.7854 cv
199.616 18.5246 199.907 21.2258 200.218 23.9421 cv
200.522 26.6037 200.216 29.3205 200.626 31.9348 cv
cp
.623529 .803922 .87451 rgb
f
155.722 25.4846 mo
155.542 25.4846 155.541 25.7658 155.722 25.7658 cv
155.903 25.7658 155.904 25.4846 155.722 25.4846 cv
cp
f
134.722 61.0749 mo
134.722 61.175 li
134.722 61.0749 li
cp
f
150.222 38.3869 mo
149.272 38.3869 149.27 39.8635 150.222 39.8635 cv
151.173 39.8635 151.175 38.3869 150.222 38.3869 cv
cp
f
269.889 129.068 mo
268.743 129.068 268.741 130.849 269.889 130.849 cv
271.035 130.849 271.037 129.068 269.889 129.068 cv
cp
f
331.555 98.1277 mo
330.622 98.1277 330.094 98.761 329.975 99.4748 cv
330.06 99.6306 330.131 99.803 330.181 99.9944 cv
330.255 100.27 330.269 100.54 330.259 100.806 cv
330.522 101.186 330.95 101.456 331.555 101.456 cv
333.697 101.456 333.701 98.1277 331.555 98.1277 cv
cp
f
341.889 43.1433 mo
340.411 43.1433 340.409 45.4402 341.889 45.4402 cv
343.367 45.4402 343.37 43.1433 341.889 43.1433 cv
cp
f
137.488 48.8396 mo
131.323 51.9114 126.555 58.6067 122.088 63.6985 cv
121.131 64.7893 122.669 66.3689 123.695 65.3064 cv
126.284 62.6267 128.97 60.0583 131.631 57.4509 cv
134.089 55.0407 136.708 52.8025 138.467 49.8176 cv
138.847 49.1716 138.106 48.532 137.488 48.8396 cv
cp
.921569 .956863 .956863 rgb
f
163.207 26.8108 mo
152.908 27.3742 143.355 33.0891 133.395 35.3074 cv
132.584 35.488 132.149 36.5593 132.603 37.2546 cv
134.294 39.8469 139.239 38.1804 141.794 38.5334 cv
142.813 38.674 143.173 37.3938 142.218 36.9968 cv
141.43 36.6692 140.623 36.3161 139.798 36.0456 cv
147.866 33.8552 156.501 32.7146 163.669 28.5139 cv
164.422 28.0725 164.135 26.76 163.207 26.8108 cv
cp
f
118.912 88.6526 mo
118.746 87.1482 118.658 85.6384 118.618 84.1257 cv
118.591 83.0495 117.014 83.0598 116.954 84.1257 cv
116.857 85.8493 116.826 87.5725 116.896 89.2981 cv
116.952 90.6799 116.996 91.8464 117.879 92.9426 cv
118.202 93.3435 118.743 93.0437 118.897 92.6736 cv
119.45 91.3557 119.063 90.0246 118.912 88.6526 cv
cp
f
143.477 108.193 mo
141.976 106.241 139.643 105.599 137.25 105.431 cv
135.342 105.298 133.157 105.687 132.107 103.784 cv
131.357 102.426 131.446 100.722 130.731 99.3005 cv
130.176 98.196 128.533 99.0227 128.691 99.9782 cv
128.209 102.921 128.844 106.375 131.704 107.821 cv
133.294 108.624 135.05 108.548 136.78 108.611 cv
138.826 108.686 140.806 109.27 142.84 109.304 cv
143.349 109.312 143.828 108.649 143.477 108.193 cv
cp
f
163.323 120.084 mo
159.855 119.031 156.593 119.351 153.287 117.468 cv
150.271 115.751 147.328 113.283 145.012 110.7 cv
144.353 109.965 143.071 110.933 143.633 111.765 cv
146.296 115.718 148.651 119.331 153.082 121.517 cv
156.403 123.157 160.652 124.27 163.778 121.807 cv
164.42 121.301 163.993 120.287 163.323 120.084 cv
cp
f
200.321 129.958 mo
199.149 127.601 195.686 126.528 193.322 125.713 cv
190.387 124.701 187.455 124.552 184.403 125.049 cv
183.459 125.202 183.67 126.815 184.63 126.729 cv
187.811 126.447 190.816 127.384 193.684 128.703 cv
195.615 129.592 197.503 131.231 199.694 131.051 cv
200.259 131.005 200.578 130.474 200.321 129.958 cv
cp
f
192.282 16.3347 mo
190.833 15.739 189.274 17.0281 188.462 18.1067 cv
187.676 19.1511 187.326 20.6003 188.106 21.758 cv
188.59 22.4743 189.9 22.051 189.584 21.135 cv
189.206 20.0388 191.05 19.1023 191.866 18.7702 cv
192.352 18.573 192.998 18.279 193.136 17.7116 cv
193.282 17.1135 192.799 16.5471 192.282 16.3347 cv
cp
f
221.96 10.4426 mo
219.814 10.3303 217.994 11.1716 215.879 11.4592 cv
213.242 11.8176 210.678 11.4436 208.04 11.2722 cv
204.252 11.0256 201.135 11.4573 197.863 13.467 cv
196.635 14.2214 197.706 15.8889 198.963 15.3489 cv
205.992 12.3308 217.321 19.2947 222.797 12.4631 cv
223.437 11.6648 223.046 10.4992 221.96 10.4426 cv
cp
f
247.23 12.5017 mo
245.537 12.324 244.183 13.0564 242.663 13.6858 cv
240.788 14.4616 238.928 15.0344 236.889 15.1277 cv
235.431 15.1946 235.42 17.3635 236.889 17.4011 cv
240.519 17.4949 246.419 17.5779 248.021 13.5403 cv
248.238 12.9953 247.701 12.551 247.23 12.5017 cv
cp
f
205.81 89.4436 mo
204.273 90.4616 202.709 91.7009 201.107 92.9421 cv
200.509 93.9568 199.97 94.9905 199.526 96.051 cv
199.321 96.5403 200.032 97.091 200.456 96.7654 cv
203.542 94.3923 206.071 91.1452 208.425 87.7903 cv
207.56 88.32 206.69 88.8611 205.81 89.4436 cv
cp
f
189.827 108.076 mo
186.627 112.169 182.235 115.956 180.468 120.973 cv
180.314 121.408 180.904 121.906 181.294 121.608 cv
185.529 118.366 187.774 113.064 190.692 108.743 cv
191.037 108.232 190.214 107.58 189.827 108.076 cv
cp
f
153.24 89.3332 mo
153.553 88.7732 153.875 88.2195 154.224 87.6975 cv
154.398 87.4387 154.164 87.1311 153.89 87.1155 cv
152.528 87.0383 151.729 87.8122 151.015 88.8083 cv
151.755 88.9939 152.497 89.1692 153.24 89.3332 cv
cp
f
244.45 26.5193 mo
241.724 29.4289 239.171 32.5183 236.506 35.4831 cv
233.771 38.5237 230.992 41.5227 228.325 44.6233 cv
227.379 45.7229 226.297 46.8757 225.215 48.0686 cv
225.128 48.6657 225.892 49.0627 226.415 48.6467 cv
235.973 41.0447 243.009 30.0993 251.384 21.2449 cv
252.006 20.5881 251.032 19.6086 250.389 20.2507 cv
249.338 21.3015 248.256 22.3489 247.157 23.3972 cv
246.407 24.5158 245.452 25.4494 244.45 26.5193 cv
cp
f
170.389 38.0588 mo
168.052 38.0588 168.048 41.6916 170.389 41.6916 cv
172.726 41.6916 172.73 38.0588 170.389 38.0588 cv
cp
f
184.827 89.4861 mo
184.521 89.0095 184.005 88.6682 183.264 88.6682 cv
182.366 88.6682 181.794 89.1692 181.535 89.8098 cv
182.632 89.6907 183.729 89.5827 184.827 89.4861 cv
cp
f
215.139 105.895 mo
214.3 105.895 213.495 106.633 213.534 107.5 cv
213.573 108.37 214.239 109.106 215.139 109.106 cv
215.979 109.106 216.783 108.367 216.745 107.5 cv
216.706 106.63 216.039 105.895 215.139 105.895 cv
cp
f
271.182 124.424 mo
270.991 124.252 270.777 124.105 270.523 124.028 cv
269.932 124.758 269.174 125.5 268.356 126.41 cv
268.626 127.072 269.242 127.555 270.014 127.555 cv
270.893 127.555 271.727 126.833 271.804 125.947 cv
271.396 125.513 271.215 124.987 271.182 124.424 cv
cp
f
321.966 78.1701 mo
321.887 78.0974 li
322.188 78.9333 322.967 79.5027 323.885 79.3908 cv
324.458 79.321 325.018 79.0183 325.274 78.5207 cv
324.032 78.802 322.826 78.8132 321.966 78.1701 cv
cp
f
300.264 117.762 mo
298.348 117.762 298.345 120.739 300.264 120.739 cv
302.179 120.739 302.182 117.762 300.264 117.762 cv
cp
f
364.749 64.8166 mo
364.499 64.0989 363.38 64.3869 363.596 65.1345 cv
364.302 67.5705 365.133 70.0183 365.7 72.4909 cv
366.414 75.6008 365.125 77.6985 364.095 80.5476 cv
364.01 80.7839 364.333 81.0525 364.543 80.8918 cv
370.067 76.6662 366.562 70.0066 364.749 64.8166 cv
cp
.729412 .866667 .886275 rgb
f
360.722 84.5749 mo
360.722 84.675 li
360.722 84.5749 li
cp
f
351.622 94.2082 mo
349.798 94.3738 348.183 95.5534 347.181 97.0661 cv
346.496 98.1003 346.106 99.3293 345.55 100.431 cv
345.063 101.394 344.363 102.288 344.097 103.341 cv
344.05 103.53 344.194 103.778 344.414 103.756 cv
348.679 103.337 347.337 95.7322 351.721 94.945 cv
352.134 94.8708 352.044 94.1701 351.622 94.2082 cv
cp
f
340.06 101.699 mo
339.475 101.902 338.892 102.11 338.302 102.3 cv
337.987 102.402 338.027 102.91 338.384 102.899 cv
338.995 102.879 339.608 102.88 340.219 102.873 cv
341.118 102.864 340.872 101.419 340.06 101.699 cv
cp
f
334.582 104.617 mo
333.637 106.242 332.916 107.991 331.87 109.556 cv
330.879 111.039 329.321 112 328.347 113.42 cv
328.244 113.571 328.286 113.808 328.414 113.931 cv
328.656 114.167 li
328.849 114.354 329.198 114.492 329.466 114.381 cv
331.085 113.706 332.087 111.996 332.962 110.533 cv
334.059 108.699 334.484 106.849 335.096 104.834 cv
335.189 104.527 334.742 104.343 334.582 104.617 cv
cp
f
326.555 111.858 mo
325.998 111.858 325.997 112.725 326.555 112.725 cv
327.114 112.725 327.115 111.858 326.555 111.858 cv
cp
f
317.027 122.359 mo
312.381 124.506 312.703 120.754 309.861 120.298 cv
308.563 120.089 307.624 120.779 306.594 121.444 cv
304.772 122.622 303.026 124.106 301.329 125.46 cv
299.579 126.857 298.417 129.04 296.642 130.311 cv
296.262 130.584 296.385 131.188 296.885 131.207 cv
298.218 131.258 298.192 131.144 299.23 130.24 cv
300.395 129.225 301.157 127.855 302.422 126.876 cv
303.89 125.74 305.405 124.645 306.912 123.559 cv
309.296 121.84 310.931 123.569 313.349 124.055 cv
314.952 124.377 316.18 124.094 317.631 123.391 cv
318.326 123.053 317.719 122.039 317.027 122.359 cv
cp
f
347.663 47.3943 mo
345.42 41.1291 346.558 33.3191 337.961 34.2097 cv
332.466 34.779 326.445 36.9573 321.218 34.2766 cv
318.209 32.7336 316.222 29.8498 312.551 30.2351 cv
312.013 30.2912 311.773 31.1648 312.411 31.2707 cv
316.008 31.8689 317.927 34.3938 320.964 35.9968 cv
323.552 37.363 326.179 37.3113 329.04 37.0041 cv
332.656 36.6164 338.252 34.6677 341.285 36.9206 cv
344.011 38.946 344.11 44.6843 345.493 47.9924 cv
346.036 49.2893 348.162 48.7864 347.663 47.3943 cv
cp
f
303.003 22.009 mo
301.503 20.8049 299.884 19.7478 297.93 19.529 cv
296.651 19.3855 295.392 19.7048 294.115 19.675 cv
292.723 19.6433 291.645 19.0486 290.34 18.6985 cv
290.036 18.6169 289.668 18.9182 289.792 19.2463 cv
290.367 20.7658 291.859 21.1111 293.4 21.2131 cv
296.789 21.4377 299.293 20.7893 302.264 22.966 cv
302.817 23.3708 303.543 22.4421 303.003 22.009 cv
cp
f
320.034 59.4968 mo
320.027 59.4685 li
319.758 59.4631 319.477 59.6301 319.47 59.9758 cv
319.427 62.4284 319.304 65.3967 320.51 67.6472 cv
320.729 68.0574 321.021 68.3835 321.321 68.7033 cv
320.145 65.6076 319.609 62.093 320.034 59.4968 cv
cp
f
345.389 73.802 mo
344.545 73.802 344.543 75.1145 345.389 75.1145 cv
346.233 75.1145 346.235 73.802 345.389 73.802 cv
cp
f
346.722 76.8074 mo
345.456 76.8074 345.454 78.7761 346.722 78.7761 cv
347.989 78.7761 347.991 76.8074 346.722 76.8074 cv
cp
f
271.179 124.064 mo
271.006 123.99 270.848 123.898 270.709 123.78 cv
270.119 124.562 269.332 125.334 268.464 126.292 cv
268.691 127.076 269.329 127.723 270.389 127.723 cv
271.42 127.723 272.052 127.108 272.295 126.352 cv
272.286 126.347 li
271.405 125.787 271.139 124.952 271.179 124.064 cv
cp
f
258.009 132.941 mo
256.581 133.176 255.077 133.561 253.548 133.931 cv
253.536 135.154 254.314 136.384 255.889 136.384 cv
257.903 136.384 258.612 134.369 258.028 132.936 cv
258.009 132.941 li
cp
f
235.222 123.053 mo
232.342 123.053 232.338 127.53 235.222 127.53 cv
238.103 127.53 238.107 123.053 235.222 123.053 cv
cp
f
226.722 133.137 mo
224.807 133.137 224.803 136.114 226.722 136.114 cv
228.637 136.114 228.64 133.137 226.722 133.137 cv
cp
f
313.325 47.2019 mo
312.244 46.6521 311.18 45.8684 310.247 45.4299 cv
309.781 46.905 310.547 48.823 312.555 48.823 cv
313.51 48.823 314.177 48.383 314.572 47.7688 cv
314.154 47.5881 313.735 47.4099 313.325 47.2019 cv
cp
f
331.389 59.2419 mo
331.389 59.342 li
331.389 59.2419 li
cp
f
354.222 64.4084 mo
354.222 64.5085 li
354.222 64.4084 li
cp
f
352.534 68.0569 mo
353.439 68.094 354.428 68.0574 355.412 68.0617 cv
356.052 66.5779 355.33 64.4504 353.222 64.4504 cv
351.137 64.4504 350.405 66.5407 351.014 68.0227 cv
351.492 68.011 352 68.0349 352.534 68.0569 cv
cp
f
371.725 78.177 mo
371.321 78.7326 371.15 79.448 371.364 80.2483 cv
370.929 82.0896 370.22 83.7707 369.173 85.1408 cv
367.725 87.0315 366.282 89.0915 364.711 91.0129 cv
364.43 90.7043 364.062 90.447 363.607 90.2756 cv
362.865 89.9949 362.011 89.8586 361.228 89.7571 cv
360.783 89.699 360.318 89.6462 359.868 89.6804 cv
357.48 88.1032 354.175 87.8122 351.384 87.0808 cv
347.535 86.072 343.532 84.6423 339.526 84.1916 cv
341.232 78.8747 342.624 73.2068 345.052 68.1955 cv
345.334 67.6145 345.359 66.9997 345.213 66.4333 cv
345.521 65.8791 345.581 65.2048 345.173 64.5251 cv
345.183 64.5222 li
343.776 61.4416 342.149 58.4743 340.571 55.4885 cv
339.454 52.9319 338.033 50.5329 336.952 47.9685 cv
336.893 47.8298 336.802 47.7385 336.699 47.675 cv
337.033 47.0637 337.052 46.2922 337.112 45.6203 cv
337.136 45.3327 336.711 45.3025 336.629 45.5549 cv
336.418 46.2004 336.144 46.9182 336.221 47.6135 cv
335.982 47.6902 335.798 47.9187 335.868 48.2678 cv
336.335 50.5974 336.909 52.7737 337.692 54.969 cv
337.77 56.1941 337.891 57.4157 338.15 58.6335 cv
338.662 61.0432 339.837 63.1716 340.931 65.3498 cv
339.08 67.7092 338.35 71.5198 337.399 74.3127 cv
336.47 77.0437 335.496 79.8567 335.255 82.7429 cv
335.037 82.8108 li
330.781 84.5818 326.528 86.3513 322.305 88.1985 cv
319.907 89.2468 317.2 90.1828 314.8 91.4924 cv
314.788 80.5666 314.897 69.5198 314.201 58.6467 cv
315.087 57.9397 313.678 56.6828 313.253 56.1833 cv
312.243 54.9983 311.125 53.9231 310.05 52.7971 cv
309.689 52.4197 309.009 52.9187 309.313 53.3655 cv
310.187 54.6472 311.002 55.9607 311.947 57.1907 cv
312.177 57.4909 312.549 58.1023 312.987 58.49 cv
311.083 70.4055 310.481 82.7497 310.002 94.7922 cv
309.905 97.2278 312.961 97.7434 314.245 96.3259 cv
317.063 96.2942 320.32 94.3796 322.632 93.4768 cv
327.258 91.6706 331.849 89.7912 336.438 87.8957 cv
337.005 87.6623 337.419 87.2986 337.703 86.8713 cv
341.282 88.8449 345.511 89.8147 349.351 91.0823 cv
352.501 92.1223 356.223 94.3283 359.604 93.9919 cv
360.1 94.2912 360.643 94.5256 361.177 94.7185 cv
358.921 96.6579 356.319 98.0471 353.098 98.2722 cv
352.162 98.3376 351.097 98.9265 350.905 99.9421 cv
350.276 103.259 349.276 106.355 347.869 109.408 cv
343.686 109.347 339.308 110.372 335.228 110.749 cv
333.759 110.885 332.887 112.006 333.157 113.468 cv
333.748 116.664 333.456 119.6 334.141 122.381 cv
331.797 122.339 329.479 122.435 327.255 123.114 cv
327.157 122.92 327.015 122.732 326.817 122.558 cv
323.622 119.753 319.542 117.822 316.064 115.325 cv
311.989 112.397 307.992 109.361 304.05 106.257 cv
304.521 104.718 304.504 102.984 304.756 101.436 cv
304.857 100.81 303.949 100.526 303.784 101.168 cv
303.41 102.622 302.814 104.177 302.699 105.721 cv
301.791 105.865 301.094 106.942 301.978 107.712 cv
305.749 110.991 309.595 114.166 313.55 117.222 cv
316.981 119.875 320.343 123.195 324.151 125.255 cv
324.098 125.48 324.08 125.712 324.1 125.944 cv
321.046 128.057 318.321 130.464 314.52 129.393 cv
311.807 128.629 307.78 124.83 304.844 125.339 cv
302.774 125.697 301.279 128.677 300.141 130.212 cv
298.468 132.469 296.644 134.797 295.447 137.371 cv
292.68 135.756 289.233 133.777 286.274 134.635 cv
287.901 128.254 291.067 121.983 292.189 115.531 cv
292.316 115.577 li
292.526 115.63 292.773 115.429 292.691 115.202 cv
292.6 114.95 292.481 114.715 292.348 114.487 cv
292.372 114.32 292.4 114.153 292.421 113.986 cv
292.469 113.576 292.007 113.436 291.704 113.59 cv
290.925 112.678 289.917 111.907 289.109 111.072 cv
288.686 110.634 287.869 111.222 288.244 111.739 cv
289 112.778 289.81 114.037 290.881 114.851 cv
289.092 118.103 288.083 121.831 286.874 125.31 cv
285.764 128.501 284.583 131.795 285.057 135.168 cv
282.711 136.512 280.579 138.624 278.43 140.252 cv
274.658 143.11 271.489 142.787 267.121 141.642 cv
264.087 140.847 261.629 139.554 258.91 138.073 cv
257.547 137.33 256.281 136.672 254.667 136.797 cv
251.941 137.008 249.681 139.209 248.557 141.656 cv
245.072 138.651 242.053 135.349 239.487 131.5 cv
238.595 130.164 236.876 130.226 235.973 131.5 cv
234.305 133.856 232.638 136.211 230.97 138.567 cv
228.865 141.541 227.8 141.966 224.043 142.28 cv
219.882 142.627 214.698 143.458 210.432 142.398 cv
210.56 142.264 210.672 142.114 210.761 141.947 cv
211.302 140.944 212.412 140.438 212.953 139.355 cv
213.245 138.769 213.249 138.034 213.543 137.475 cv
213.908 136.78 214.669 136.124 215.153 135.525 cv
216.264 134.15 217.254 132.627 217.972 130.999 cv
218.624 131.065 219.303 130.831 219.874 130.131 cv
222.09 127.413 224.608 124.973 227.105 122.518 cv
228.565 121.082 231.178 119.128 232.14 116.963 cv
235.881 116.109 239.235 113.234 242.454 111.22 cv
246.032 108.982 249.636 106.783 253.21 104.542 cv
253.685 104.926 254.544 104.535 254.402 103.769 cv
253.885 100.966 253.141 98.1618 252.04 95.5364 cv
251.892 95.1853 251.268 95.1716 251.303 95.636 cv
251.493 98.2282 252.02 100.807 252.722 103.319 cv
248.793 105.079 244.885 106.896 240.955 108.656 cv
238.714 109.66 236.174 110.521 233.9 111.708 cv
233.011 109.012 232.236 106.249 231.515 103.5 cv
231.362 102.918 230.545 103.176 230.634 103.743 cv
230.98 105.954 231.144 108.175 231.558 110.376 cv
231.713 111.199 231.822 112.034 232.166 112.739 cv
231.566 113.139 230.99 113.564 230.473 114.051 cv
227.928 114.435 225.355 117.501 223.625 119.038 cv
221.937 120.538 220.278 122.044 218.709 123.645 cv
217.482 120.576 214.418 117.987 212.447 115.455 cv
209.747 111.987 207.491 107.621 204.428 104.372 cv
209.693 100.226 214.219 94.7922 218.716 89.8767 cv
223.852 84.2624 228.953 78.6174 234.248 73.1506 cv
234.704 72.6794 234.022 72.0178 233.535 72.4377 cv
227.762 77.4216 221.884 82.2854 216.125 87.2854 cv
210.843 91.8718 204.98 96.6247 200.79 102.258 cv
200.203 103.047 200.483 104.024 201.108 104.672 cv
202.154 109.356 205.606 113.821 208.208 117.729 cv
209.822 120.155 211.785 123.822 214.34 125.923 cv
212.773 128.326 211.431 130.721 209.598 132.994 cv
208.182 134.751 207.335 137.025 206.312 139.014 cv
206.108 139.411 206.001 139.822 205.981 140.226 cv
202.84 137.817 200.062 134.124 196.394 132.837 cv
192.563 131.491 186.609 133.289 182.684 133.707 cv
182.594 133.717 182.494 133.731 182.401 133.742 cv
179.708 128.887 175.347 125.054 173.056 119.893 cv
172.685 119.056 171.299 119.651 171.579 120.516 cv
172.501 123.37 173.977 125.87 175.644 128.351 cv
176.911 130.238 178.215 132.361 179.77 134.116 cv
174.952 134.855 169.27 135.634 167.757 130.489 cv
167.089 128.22 166.53 125.842 163.761 125.732 cv
161.891 125.657 159.735 126.715 157.898 126.976 cv
154.367 127.478 152.01 126.823 149.529 124.271 cv
145.624 120.252 141.87 115.736 137.242 112.54 cv
136.766 112.211 136.239 112.261 135.814 112.513 cv
132.344 112.879 129.275 114.119 127.915 110.347 cv
126.939 107.642 127.733 104.486 126.834 101.832 cv
125.235 97.1184 118.947 99.5115 115.382 99.6345 cv
114.463 99.6662 113.329 99.8127 112.263 99.8074 cv
113.088 95.9841 113.129 91.8801 113.741 88.0036 cv
114.155 85.385 115.13 82.4953 115.078 79.7766 cv
127.095 81.6057 139.145 79.1096 151.213 79.1184 cv
151.718 79.1189 152.154 78.9656 152.517 78.7165 cv
154.351 80.1692 157.12 80.3825 159.373 81.0632 cv
163.322 82.2571 167.142 83.7497 171.014 85.1565 cv
171.675 85.3962 172.274 85.261 172.753 84.9289 cv
173.862 85.3982 175.081 84.928 176.229 84.511 cv
177.01 84.2282 177.786 83.9343 178.562 83.6423 cv
179.277 83.4143 179.993 83.1579 180.718 82.864 cv
180.908 82.7868 181.105 82.7107 181.301 82.6345 cv
181.729 82.4778 182.155 82.3147 182.587 82.1633 cv
182.794 82.0398 li
184.576 81.302 186.277 80.3782 187.012 78.5744 cv
187.165 78.2004 187.098 77.8576 186.919 77.5725 cv
187.167 76.4533 186.816 75.239 186.764 74.0461 cv
186.695 72.4714 186.586 70.928 186.361 69.3669 cv
186.303 68.9612 185.684 69.0818 185.671 69.4607 cv
185.615 70.9817 185.578 72.5324 185.41 74.0461 cv
185.306 74.9743 184.936 75.9026 184.823 76.8157 cv
182.51 77.0525 180.03 79.0447 177.927 79.8137 cv
176.522 80.3274 174.656 80.6252 173.158 81.3357 cv
173.036 81.2346 172.9 81.1418 172.74 81.0657 cv
169.072 79.3157 165.201 77.9358 161.303 76.7947 cv
159.541 76.279 157.406 75.4074 155.388 75.2102 cv
155.439 74.9607 li
157.319 72.5505 158.508 68.9104 159.515 66.6452 cv
160.772 63.822 162.147 61.134 163.539 58.3752 cv
164.136 57.1926 164.559 56.509 164.693 55.7497 cv
167.031 54.9304 169.32 53.9768 171.593 52.9929 cv
174.276 51.8313 177.186 50.9548 179.715 49.4792 cv
180.449 49.05 179.932 48.0359 179.164 48.1726 cv
176.458 48.6521 173.853 49.7995 171.219 50.5886 cv
168.562 51.384 165.916 52.2102 163.336 53.2307 cv
162.9 53.4031 162.628 53.7156 162.489 54.0705 cv
161.71 54.5681 161.324 55.3215 160.512 56.6062 cv
158.827 59.2795 157.21 61.9802 155.498 64.6335 cv
153.93 67.0642 151.238 70.6355 150.762 73.9016 cv
144.546 73.1828 138.384 74.5017 132.177 75.0359 cv
125.623 75.6003 118.6 74.0075 112.222 75.6491 cv
111.926 75.7253 111.681 75.8718 111.483 76.0598 cv
110.824 76.3249 110.278 76.8987 110.197 77.7883 cv
110.077 79.1135 109.949 80.4582 109.823 81.8098 cv
109.423 83.9343 109.32 86.1828 109.051 88.2033 cv
108.817 89.9504 108.397 91.9133 108.194 93.8684 cv
107.8 91.4363 107.4 89.0041 107.036 86.5681 cv
106.368 82.0998 106.873 78.9089 109.288 75.0261 cv
111.223 71.9148 113.265 69.0417 116.213 66.7961 cv
117.199 66.0442 117.502 64.4314 116.213 63.7419 cv
115.742 63.49 115.277 63.2698 114.81 63.0627 cv
117.784 60.1218 120.863 57.2951 123.973 54.4953 cv
127.454 51.3635 131.001 47.2683 135.004 44.6902 cv
135.078 44.7033 li
137.659 45.177 138.765 41.2248 136.169 40.7483 cv
132.047 39.9914 126.325 39.8757 122.212 38.2951 cv
123.683 34.9221 131.95 32.2741 134.303 31.5251 cv
139.725 29.7995 145.206 28.2365 150.662 26.6238 cv
157.605 24.571 167.064 23.1028 170.984 16.2864 cv
173.022 17.1824 174.505 18.5681 175.701 20.6257 cv
176.189 21.4656 177.243 21.6799 178.075 21.2483 cv
178.279 21.1423 178.486 21.0456 178.695 20.9519 cv
178.79 21.5842 179.119 22.196 179.71 22.6037 cv
181.167 23.6091 179.962 24.5066 179.391 26.1179 cv
178.701 28.0652 178.063 30.032 177.553 32.0349 cv
176.691 35.4084 176.115 38.7854 176.685 42.24 cv
176.769 42.7497 177.05 43.071 177.404 43.2595 cv
179.063 45.529 182.231 44.7439 184.781 44.6047 cv
186.748 44.4973 189.462 44.656 191.376 43.7068 cv
191.497 43.8205 191.625 43.9289 191.754 44.0329 cv
192.351 44.5178 193.053 45.0222 193.822 45.1677 cv
194.199 45.3713 194.568 45.57 194.89 45.7805 cv
196.756 46.9963 198.642 48.1174 200.445 49.4309 cv
200.935 49.7883 201.575 48.9685 201.098 48.5842 cv
199.413 47.2278 197.791 45.7722 196.054 44.4841 cv
195.104 43.7795 194.062 42.7033 192.908 42.2297 cv
192.947 41.9665 192.895 41.696 192.672 41.5158 cv
190.65 39.8904 187.763 40.5354 185.301 40.4724 cv
183.907 40.4367 182.152 40.0471 180.573 40.1052 cv
181.13 37.8489 181.537 35.5486 182.188 33.3132 cv
183.057 30.3342 184.503 27.5256 185.358 24.5642 cv
186.015 22.2927 185.433 20.3401 183.905 19.2615 cv
185.788 18.655 187.558 17.8469 188.895 16.1457 cv
190.739 13.7995 190.172 11.8425 189.665 9.53098 cv
191.874 9.83079 194.105 10.1799 196.259 10.6443 cv
196.485 10.8157 196.751 10.9441 197.081 10.9577 cv
206.598 11.3606 216.69 8.55979 225.793 5.76292 cv
227.515 7.98655 229.257 10.1941 231.041 12.3699 cv
231.512 12.9455 232.463 13.1228 233.146 12.9265 cv
240.689 10.759 248.19 8.44798 255.701 6.1721 cv
257.555 5.61009 259.504 4.56175 261.44 5.02561 cv
263.121 5.42844 263.531 6.2844 264.868 7.38792 cv
265.579 7.97483 266.314 8.47434 267.074 8.9138 cv
260.385 14.5051 254.652 21.7424 248.743 27.9792 cv
245.184 31.7351 241.652 35.5154 238.118 39.2937 cv
234.844 42.7937 230.219 46.3782 228.327 50.8147 cv
227.689 52.3108 228.628 53.8699 230.04 53.9182 cv
232.98 55.5617 236.42 56.2346 239.58 57.3943 cv
243.35 58.7785 247.021 60.4162 250.799 61.7815 cv
256.922 63.9944 265.885 68.0823 272.414 66.5266 cv
272.917 66.407 273.285 66.1496 273.531 65.8186 cv
273.922 65.6946 274.306 65.4324 274.638 64.9905 cv
277.196 61.5886 279.506 58.1003 281.762 54.5022 cv
282.764 53.2385 283.717 51.9074 284.301 50.5276 cv
285.693 48.3269 287.002 46.0705 287.796 43.6037 cv
287.98 43.0305 287.301 42.6418 286.849 42.9138 cv
286.557 42.5046 286.32 42.049 286.027 41.6452 cv
285.779 41.3025 285.519 40.9656 285.261 40.6277 cv
284.967 40.7248 284.671 40.8215 284.379 40.9226 cv
284.398 40.9509 li
284.772 41.4616 285.146 41.9836 285.545 42.4758 cv
285.817 42.8122 286.102 43.074 286.352 43.3835 cv
283.864 45.9045 282.048 49.032 279.927 51.8586 cv
277.344 55.3015 274.627 58.6628 271.975 62.0574 cv
269.1 60.4817 265.521 60.1985 262.359 59.3806 cv
258.344 58.342 254.403 57.0959 250.49 55.7282 cv
245.789 54.0852 240.338 51.4123 235.047 50.7937 cv
237.31 48.6506 239.288 46.0256 241.307 43.8542 cv
245.052 39.8279 248.8 35.8044 252.517 31.7536 cv
258.722 24.9934 266.135 18.341 271.337 10.6677 cv
271.642 10.7512 271.95 10.8308 272.263 10.9035 cv
273.79 11.2566 274.848 10.1867 275.096 8.99632 cv
276.213 8.38645 277.06 7.64866 278.191 6.75901 cv
281.072 4.49241 281.555 5.47386 284.276 7.45872 cv
288.265 10.3699 292.248 14.1819 296.86 16.0637 cv
300.978 17.7439 305.809 17.6223 310.177 17.9519 cv
311.059 18.0188 312.769 17.8205 313.552 18.2068 cv
315.191 19.0154 314.659 19.7449 314.416 21.4426 cv
314.018 24.2048 313.038 26.9905 312.365 29.6994 cv
311.984 31.2356 313.361 32.6526 314.913 32.2468 cv
320.577 30.7663 328.99 26.7688 334.589 28.3264 cv
340.254 29.9026 345.451 37.258 349.649 41.3742 cv
349.845 41.5676 350.054 41.6994 350.266 41.8015 cv
350.546 44.5803 350.955 47.3445 351.314 50.1155 cv
351.489 51.4597 351.48 53.1784 352.412 54.2698 cv
353.875 55.9822 357.341 56.5407 359.33 57.2639 cv
363.162 58.6565 367.742 59.5461 369.558 63.6609 cv
371.303 67.615 372.337 73.2473 371.725 78.177 cv
cp
376.399 78.2346 mo
376.34 78.1682 li
376.312 76.2439 376.074 74.2986 375.868 72.5285 cv
375.195 66.7502 374.313 58.7322 368.301 56.1521 cv
364.69 54.6023 360.724 53.8904 357.13 52.3152 cv
354.39 51.115 354.727 48.9363 354.184 46.238 cv
353.826 44.4524 353.45 42.6784 353.026 40.9109 cv
353.532 40.1433 353.597 39.112 352.748 38.2751 cv
349.495 35.071 346.245 31.864 342.98 28.6716 cv
341.035 26.7688 339.059 24.2527 336.415 23.3274 cv
333.385 22.2673 330.052 23.7082 327.128 24.5198 cv
323.869 25.4236 320.612 26.3313 317.358 27.2502 cv
318.35 23.9914 319.46 20.2785 318.739 17.5241 cv
317.958 14.5383 315.3 14.4699 312.709 14.28 cv
307.203 13.8767 300.621 14.4294 295.772 11.529 cv
290.836 8.57542 286.382 4.50218 281.785 1.05344 cv
281.278 .673562 280.418 .735574 279.904 1.05344 cv
277.582 2.49241 275.086 4.13987 273.718 6.50218 cv
273.498 6.42844 li
269.361 5.48802 267.832 2.71995 264.497 .789285 cv
262.011 -.649192 259.776 .173074 257.188 .938699 cv
249.19 3.3054 241.217 5.79221 233.276 8.3469 cv
231.465 6.25462 229.684 4.13987 227.951 1.98069 cv
227.529 1.45481 226.596 1.2512 225.976 1.45872 cv
216.316 4.68382 206.511 5.71458 196.682 8.01145 cv
196.484 8.05735 196.322 8.13694 196.181 8.23264 cv
193.474 6.95091 190.974 6.04319 187.894 5.49778 cv
186.745 5.29417 185.427 5.99827 185.487 7.33177 cv
185.645 10.8274 187.473 13.0359 183.223 15.4841 cv
181.592 16.424 179.691 16.8723 177.901 17.5539 cv
176.137 14.925 173.743 13.2317 170.573 12.2585 cv
169.884 12.0466 168.824 12.3825 168.516 13.0949 cv
165.366 20.4065 154.647 21.5549 147.849 23.4875 cv
140.912 25.4597 133.469 26.8747 126.912 29.9582 cv
123.848 31.3987 117.144 35.3601 117.809 39.57 cv
118.153 41.7424 120.18 41.9485 122.051 42.3366 cv
124.991 42.9475 127.959 43.4548 130.924 43.968 cv
128.288 45.7639 125.991 48.407 123.751 50.3674 cv
119.22 54.3332 114.701 58.2986 110.426 62.5407 cv
109.485 63.4734 109.948 65.0749 111.191 65.4402 cv
111.437 65.4953 111.677 65.5632 111.917 65.636 cv
107.657 69.3025 103.687 75.0906 102.837 80.1369 cv
102.19 83.9778 103.328 88.1784 103.893 91.9656 cv
104.131 93.5539 104.129 96.2663 104.505 98.6179 cv
104.25 98.9255 104.138 99.3327 104.309 99.7712 cv
104.774 100.962 105.077 102.146 105.28 103.327 cv
108.814 104.218 112.099 103.772 115.712 103.363 cv
116.042 102.983 116.542 102.747 117.163 102.866 cv
118.409 103.106 119.579 102.934 120.64 103.008 cv
121.286 102.983 121.794 103.023 122.028 103.176 cv
122.22 103.303 122.376 103.447 122.507 103.605 cv
122.859 103.854 123.193 104.199 123.505 104.684 cv
125.128 107.206 123.75 110.64 125.209 113.25 cv
127.638 117.596 131.742 115.326 135.679 116.408 cv
138.024 117.052 139.124 118.418 140.38 120.374 cv
141.371 121.919 142.491 123.443 143.759 124.829 cv
144.346 125.417 144.938 125.993 145.531 126.556 cv
147.271 128.097 149.245 129.36 151.511 130.091 cv
155.214 131.284 158.062 128.871 161.57 129.241 cv
163.4 129.434 164.384 130.37 165.211 131.976 cv
166.292 134.077 165.685 135.687 168.505 137.26 cv
170.507 138.376 174.239 138.559 176.257 137.705 cv
176.919 137.425 177.544 137.62 177.975 138.008 cv
179.876 137.899 181.919 137.264 183.809 137.257 cv
186.896 137.246 189.681 136.632 192.71 136.313 cv
196.432 135.92 198.124 136.865 200.469 139.576 cv
208.219 148.537 220.684 147.801 231.066 144.355 cv
233.02 141.88 235.111 139.537 236.531 136.68 cv
236.931 135.876 238.3 135.649 238.887 136.377 cv
240.321 138.156 241.925 139.571 243.603 141.105 cv
245.377 142.726 246.981 144.864 249.378 143.761 cv
251.473 142.798 252.468 140.686 254.999 140.449 cv
258.246 140.146 261.248 142.711 264.021 144.034 cv
267.086 145.496 274.113 148.06 277.204 145.127 cv
277.459 144.885 277.738 144.767 278.016 144.729 cv
281.111 143.2 283.175 139.84 286.605 138.982 cv
287.05 138.84 287.53 138.774 288.074 138.799 cv
289.39 138.809 290.541 139.253 291.913 139.481 cv
293.548 139.752 296.412 140.001 297.867 138.93 cv
298.378 138.555 299.116 136.746 299.503 136.144 cv
300.78 134.159 302.712 130.397 305.272 129.548 cv
305.568 129.016 305.899 128.957 306.266 129.383 cv
306.514 129.375 li
308.06 129.474 309.488 130.779 310.771 131.517 cv
314.072 133.418 316.343 133.768 319.99 132.866 cv
320.127 132.833 320.249 132.838 320.372 132.838 cv
322.632 132.048 324.471 130.624 326.433 129.36 cv
326.636 129.226 326.844 129.079 327.042 128.954 cv
327.434 128.709 327.687 128.395 327.839 128.055 cv
328.711 127.606 329.725 127.384 330.792 127.271 cv
331.139 127.175 331.494 127.089 331.864 127.025 cv
333.008 126.829 334.595 126.994 335.708 126.637 cv
338.928 125.605 338.36 123.005 337.906 120.695 cv
337.566 118.966 337.248 117.33 337.014 115.563 cv
336.903 114.725 337.786 114.099 338.514 114.063 cv
341.654 113.906 344.971 113.629 348.043 112.887 cv
351.436 112.067 352.605 110.043 353.423 106.903 cv
354.009 104.649 354.617 103.296 355.791 102.408 cv
355.783 102.397 li
355.824 102.385 li
356.469 101.907 357.285 101.565 358.357 101.291 cv
358.527 101.125 358.753 100.993 359.052 100.929 cv
361.276 100.454 363.772 97.0935 365.308 95.5212 cv
366.868 93.9245 368.442 92.3391 369.971 90.7141 cv
371.927 88.6384 373.876 86.446 375.27 83.9407 cv
376.374 81.9582 376.349 80.3025 376.453 78.3127 cv
376.399 78.2346 li
cp
.623529 .803922 .87451 rgb
f
.0481061 251.53 mo
.0481061 251.63 li
.0481061 251.53 li
cp
1 1 0 rgb
f
.0481061 231.429 mo
.0481061 231.53 li
.0481061 231.429 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (freeze_4.eps)
%%CreationDate: 3/12/2018 2:18 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bFmN4Qa8CBamZ>=,HC2CMS]8e`0M(,M1aMbAZD9TA2dO.BeCIf7!*5mA.Ub.+1/oXLs6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7b\<\+m3),.+q&EUgXo>g/6NrT#@+rRpXX^V=jL<N._4llprN%@=RT+%kO8="XZ3MiY'5rp\q@jdY/@IeE@,
%qsP'!T"fUMrQf\C^HHkQqt6.kjYotY?emnqrp$]!rUVC4s!$'"s"]"NoBc;?c)]GLT"Nb<X+cPlCL6p7hof#?"8n_Wjm-9fOJX[L
%hn5*GPC)?^TD\[)qtZB&b2]E"r;55eT7-b%ooh>\?G68D5JsJP^W_#i05nUPU;)eZa]HXT;u,PCGl+Bd5<OFjcePX8a^<s'Ckl6m
%+1pEZLR.CS<L*kM*fD'803:Y25JD+3hg4#4^Z"X1(NrZJo=Nm#nI2TKjCK-kr7]m/m`kp]nl*7JHLMHS0>;f4jNXfeU<heuq7?I?
%HZt`d^b.J:$Y;GF;2tRTefn`P=0HWS+tU:EX1Ci+a`:,LG0N)?[m*'grThdRs8DZ52n,u-KWeatq=<5=-R7j`Y&6fVW*P[UWh&YV
%+.hB(rhl+/hFOPV[P])&?bcI"p:7j8HD?tm:H7iB+7T<tN'BFMrU&tk&`Qm<J&!JS="O;o^\Qj-YFb[Z(,G.@+i"!Dp>mB&r=?X5
%(Kj-f/Rc+naU=tLGAYHM+JnCp:X]=<S)Opf^>HJ/m!^<KqV0WJ^4#_Gk:PcN(U\LOhd=$Fp<>)$`UBi++2?d7:4HIIA$7@(roVJm
%bPpqTIsq+b1_H%S?[mo&T3ctfGkD,JnNHl^QRVE%B#jLEhqE##J+.Z&M]][>DdgQ8^Nh+A4F;o(5CW5DrE]BuGL(c#?iK'XWuo(Q
%ji]m%HMm!)fAF7;QeU?"T"Vemkq@8YmE]r?A_WF#DuTUuoj?dP^\m6faZ@PISilo<BCE@pQ[cPooCUAl\$aeJ\af^0IJW*VCQZSS
%G/+!Bs"48d?(b)=IsCqQWI1uKH^s\h)p5+lmb]\Lnt5lq&%Q$=NP,18")U37r:0LVX7)o)lZj#Oj6rR(H26Ookd3NG5K[o9aJc8N
%`/1sArqN.5MJ.Jeh86d?#N_L(9YYo#URo-oZRcWr0>I=3gg0rj^,`nsgE(CU_is90T7-V5a`i5`p2mcnrPSAZhYlE`X68O2(OeT?
%2#iTN_NbXpi4lu#QWMM*IK*b=Ao@F8aRHO6cYpSrg\5W(+#^-dr3'K,p8.K/h64$rc9FQNVI&k#Du[$<ZuOWm-cn%A,<b/3VsKgE
%ce/534NEoj*Bp;1o')WVU(Hd]phr=YbJ-4QNW#njs722,MJiFBZ^5,Um(WDVfpg`=DSCGe*N[ZEQ[aJTh(<875P*(kQK`0ffB.5A
%M_Er$U:IYc^RS*q`Tno/4HhYokG#Q,E02d/*TWj%d%e(Z0BFpTgL\nF]DX[L+8tfk7q+COg3g]n>]'^\^;E/Nk:6Lp!e0XJ/EVYI
%r+0'#QpG`dPHX_a5LE3&QeD&d^r"Hfm.rkgr>%K,K@lJ]m$hS&I:,csrK4SBJ,`AaP!7!GUlTtc:\#G#(Am,AZ!HS]&]ET*nG9c[
%\,W]0mHZ,Q^V,=,T!`BgDcq[1)1N#C4.#HGeq3Yk)uicFE"nXDI7P'GV(E/nFijHo*^@6]f1D!I*No@KP@J;S3K@t6XrDh)b:U-S
%6M&IDZ.)]8epWfjLpJ366M8loRrXUc'bSWP9.ZdHHm?[/Nd[3tjI5V&Em,\R3F#n]P&B>?V5##c[$O-$Q"hdhU_Mq[8S1A2nOAO;
%4NJ\L)I&Fr`/G@=OMf*b0&\.Ij>_mH*:c+`KdoS!nj&]jA*)g5$dq1HnM`R*EZG$DNkHFa?9Ze=?f]!q-82k%d])ftjB-B2)g@J*
%.*#XTCbM>'?S*I!jN&sq&Y2#g(HAnZaDkCDEZF/dI^tc>nYgJ=*bgIS"F\5K8,kM<7paE!_b^<o.rYFCcW^1M^VM!R:Af0b7*9ui
%o)AqTY4m;=F1lL=):3eo,OI:A@3=PqQf*R9j>b8$O9;D=?sHcq)b>tp(qNm]LXOXhj>`%p*9=nl&/,W`8e>N(V$J/m,KEYlkoe$<
%noS1-,9@T].bB@4'Bp/*JqSt&H;dT#.";`ts*OSACH7j]WUg'XrkC^;+;uGR*lCj@ZK.LqO$jUVEi:f9jNemN5NK,+>\9*laC^c6
%aJUii]J0`3+-G#93m/oMH,gqra@DQ!gFjq`LjWcr]Y-C`^]]eL-Gss5Mb&)UDEENHLm-&R)!/)-grE>s;NM2`AVM5S8\Qk!<u:+T
%6b\\S$8QP#o]8rgd`JT91)AIs68pZ+6,p*a7Q<<j9,Zt:,@<kP%bJbe)j(^c&lV2UY!o3_,(!(^@$IfD1:Z^j3#kBbh(_GJk+b%h
%J*QS#\3D$qE^uNmiKSTJ;\A\DI6*mYEp1i/9Hc%r!/!S6,,3P(p="#o3K<(?d9/Fo&/p!-KF#F/7AuAsRX?Q<%757j_?V5H;B0]F
%Ko-AO+Ackfj9/riplU@gI]fM'p(['Be`@6P2:\VfFGNnrOKjBBa@sCqhR`&%PNdfB-a1()S7l=aA&P@53>!b_^ra.M<5l4-@7mkQ
%1#[b-E]V8IZE)C+f:k+)E<3XVNmltLE!,JP"!F%-"sM-OCa^tKnd0Oe)%9bh7)'hkUC4H!kXSc9A9^N>Ed09'dS9LM)(*#G3`Hrp
%ji10(MDcMC-M-qc*IG]MmaF\gW=0%nQqAA>!!SE"`8bgIBL_2a/-@*/&7>?kgiA7M']t.Q7`WV;ESr**;O6fcBNN4\NJWW$SiG7T
%jU6/=<<*5<:W7:GME!oATK5JmTL?"*a>uZ,Jd:>q6A5N\e#8#p>QBga:FCUq9&;+G,(63@&sZ[f^Fk)D%!F(ijY0L@LEod&;A)DF
%B5'2J*"qLk7*[R@V/hkpPKZ3O+peL:M/0XJ->\ucN?UMljCf-n3f1'\7*;[oYuNtN9@l[r81[.:(E4n[HWsat?E=VSU<$obED\a<
%e$,KMF#b\\S<t2"a;;Vt3LC\97:\;DY^FN]8oJ/.\<bF=>VqW9ESuGr(Q3p)$l0.#%[i6-/e&2TKHh:cCG#]8b<$19`R-Y*R:1,Q
%AkAk&&k!Y/XP#:!NZt`TRO$EWP":5DWBh`*"q6[.R3OCTP*mMS7YmKTC3ijJ*Q^tbB;W[GVE53GL/j>1ZSDC.&DVCiE7`?",)g7>
%m^`k;lR(O9e,LY2Udk)Kga"mo:[uoH;88O5Q)oK[6#qkH%$;ljPHUd%$,Beo_7]ie;D[,$!^>uIpN-E7l/g)905ePXI;;R@<O`&G
%gZA..3s4:OnR<Rcd997Vr^$1\',r*PrdpDS&?Q@&+c:e-&[p`('s`YW?:=E2p4<t:9d7TO<(*[GZl(uk/l_4EedPQVOUAJCG+cD\
%AI143W>l:Gih#H)e<aO1XF9op`O@M5o:k!+ggmFfX#XoEWjq(cEAFpqbrK!Q<RIeG;e;ll:).(QC2[+"rF`<hfJ]`8]/!WPP8uU\
%^u@Ktmd_M&i9qZEiXtW>de9=P^$j&:*p*AgmWdXXlA$C#a+p;C*cf=B+*?AWO3`$_mu5AtEM?A5]oK6q:81f*nS<bZAZAo,Z9U^b
%G^:Neg>sI#g5RY&6'f)U%3lc[K`#Le-I=7l2#:nNR<]%dY0rutduZXghl+Ode2`dtLSgLkf%j;H1sii-=j=8N0Zhfe;fcalA!8'*
%=$UlWhFt37l4011er?qB`n7;fAs9;<D)0D>bs90d(rpXIA_h%KK;RBY>REE(3)BQi4i1E`G]olE#IPd2T_jc?i1mH1gp+TVdGB>n
%*T(kVq]69^j+DjBNh?+05K=f%V,8Rf;FSggh#c&EPI7]o4qVR,oLTZ?]#k_OeJ_JHGaV=Nm6nR_dV=?nkiaQe3f9+b&XUk41YCO!
%q__!t.C3'ck/)?s2t(jc<Pm*4$8DP(l7g,W=\dep)nJJGMcr@rn??YqiVJC#.2rMr%K!*iRCbNB>gmLGNnR>LXg?P>B,^!NEMe!i
%'7?0J])S-SQ/(o4p3QUU^J9-bf))-#o,[k=meC^P^H+G5#S;5KH<cll9_I)H3!6tlDg8S?s3to5Zs.%Qi#if!C,djb%Q77^N]RZ]
%adZq/<R\d%lB[WYAl*;HF<)^M@FB@Nq@48T-@c/+2mf3/@D.B7$60,_>W2epjGottT]HMD[mhKug5QXZZs*4X$B5uKNPkfsF/_U(
%3iX#jW^!M;'J!.rdPXLdj*aV5!]*Vgo"=1'M+k_J>!8q>F.,7bXoEEZh+g1D$012niAb+,f#Z"Q__YKfcm(a8O?5Yi49E;/3ol;3
%552h?*P4eO\[a`Wlt%n&2sD[E\C8^e-pum&1*i9>mW`e8MMM6Fc,Y)$KL1`T4[IFg!7VVY"SCC2>A&PZJ33jW!q$3DWDKJoSO^]B
%']`5Ldf@Z&\7s<e=;2e2HjI)>JX_<NB5l>Xc,Yl)FVNj%+K*)H$?RcIWF2X@SU6:3<e?on4Z*uo2&[u+$37$2W,.O<*\B:^-QIH7
%C;XMf`T"7P.&41)k`<b-[N7f9Wck;m/`9PjqUFda934",UoNIJC%qDMM"5/9or^fTNj(OhJ)#@k*Cl'5HaoPlNmh3nUT>NW#9S_V
%*-0()STbU7FlAED55<q53d86Iq5dFWCR!-`jg.GP<-S8A;*Jc[cPkoO7eq.M1lX7gOf/5irkFNo-$'cX9[Sam]hEC)Piq+J6et\'
%\]bhu+H,s1?S8-(I%'pU5*&#](Q^8RLi+/m3,@qpAp<@tB,BQ-G#PEXV;Lr]MVKHP]^s<Hn?$N03WEC"As7Zt)Ep?W^tk2Mi&8]r
%ZGu59&CX^Od4j"Xf%A<i<n3EW3I6T3k01Kjo&,f_2u3CIo973NpP7e=;aDJs>Q0'uPbl;f+f_h';2@PYO;(jXQK$J[P.Q4S.$U@`
%I[[K=4OTXB03MHR(T^k4GH$L=&[K01]U,t>Lkl;kTl)[O5M\L"4+?PjIbNZU";A_mb7d:tcR-^[iMI7]4Yi*67@5T6?A-9<_cTJG
%F:4"bC#B9b(,7<L%#?-U'aa1UW(T[JH&i<r<edg?i)Lt_MicIDT?:VoW\OWT7td^PKR&0YRD:Dk:CLsHAYdun9<YT_<m)<g"D3SR
%X_Q/H#p:c4>r5\1N@\)S;,uQHAn7fSId/gM[96gNcV-LDoK=of<V'.9L2*q$<TL+(=fT_#@DusRk@DVmk,^aqFB[`Z]B^0tLuV#N
%d9(Hm[n",Q1qBCD]$A>#(VY,60-'[1GJ*QhF5Lu0A[WZ>'V)Z.#9TD6HZmINn$IMunbJ46HfZTqV."EJS#Y]l,i`S->XM2Q#s"I@
%G@^"4@bO?F:Lf2Pe0>3HU#XS=l'9Q>Ob'C!OU.=K,OMIo:.$OG*d6eI3m>3"1#':;lD0ObW-Qp^,3W0A&=G`l>m8jL@*(Et-QP'd
%DIN-P$T.N1\K:ilKUF[`h8A"R?on`M"VrM"#hY;5L&lqV^6-K,4'6p939B&XR$6"%V`alE%ha^Wm.pE>-bj<UGO;:H0T@'#4mG#X
%8A,m8qVT3g1Fn`[m4gH\X?k[hUN/JGF:8tGGjgdOEFcUiIdg2e*;05k45O[ubL,0pa;l@Af)$He\aS/YAsQ4%03rMT-0G+I2XllB
%ak0d7W*0*_a8]]GrG-R@F8JBfbh;q*amEHOV(e/UT%8LrMpRX=4TCQ.IgK4\@3s1q2c**4\Ljn)%OuTl.1\s`$Rab]P!j5l:sp+M
%\ca2l43jOp#rIf,hM$nhYin8ikR7H[%t[(X")@8G0QM#Wa;rT1>^c*=/ff$=5O?IX&%U^`^\Q7:5P#oAJF%n>_t>@WY.7]R%R*_D
%<3a^noZ_(^e+q'W,h*uO'bY8CZi]LGoM/l,KN92fg*<X\@QEaXFn?_47unbJWB.U.>3U?3GLS.(HL4S]:C;V&">5"XjjA?';RJ8[
%ei!.6eaijmb1%F`T2+Q\WfJ6)%C(NH-X3S]<`$K=I(3eb9oH%['89E7Bq]Z+0KlYug)I!Y<<&?re>'WRh.Tp^:tDY#22dMBRqP16
%AusHYVB_]Rl0PqO,BjP4%Y*s+hJlA%5P1U\J*6@sdDO89j7Mb,meD==hWO[[I)h5D@;2rZ)jC_;1Z,U_,gFh$&F7,#f!/C#-_KV-
%+/k1W0Jr&??j&5V`Il31MptR*QE_-uar`%MM>HMYC0G`qY$"3HBYP>6;J+KY-C[>2*f0Kd908G:AID<bs$T"oUole$Gh$Pne9C-5
%"I4uB(c(nU)^a-Hl4Jb`Z4[E#(h<Z".%hYt6C^2</@iZg6FVQb[.MpZ>Muh^akN%+d5F*?@_,MAFh)&JDJ>BFJuc@N5*gsD^!KDN
%&)ZD,^$CbA^@Rl(*lmk>mWbYsj,VH0I%TGI6>;BAaBDgb<fDoQ&\JjC/iEM-(u@cfrJ?)@Aa+n^_h[)W$@9[5*q,8X^N0\'hc%rQ
%m:=+>&b_.5Jqp<^CQqZB-G)8gVjNAl5[Y`RG*GsBb:9q((;6)N>@>jUnqoR^6rCU;a19FR:)VY3WGoPP@f@CMbnI;I0[RQLZ,kh_
%Nm89u4(?mg&BdTT%9TIcPl9@=="Y0-^qoEf0l,c?-4Q)?hmC(X`!)T4gb<t7+jl,\0\<\362BN"j96=joq3?=.l]$;&8]uK(+HnC
%-W\r`Kh(XkM\qsZN!=OefCJ,.mo^'MK6XZj4X8'u5l&lp6AhBX]lHne%a'rm\D7%^hj97UV]m%ij-_WNG18TD\T;SGF1L<W'E,(r
%rbgcON:12P.Di=Q@H!92R:8ZR62+uQFd$VYATFkA)9jolbM7$'6$'5AfkcfT,J%j3&5tAYVS&=)f>I517XgKDbYn&4RoH:o5b0\_
%WSoX@rX4U]f=Z<2O)n20Xc_mj*c2&G(p:3&M1kqR&)$%nBXcF4ge<qfO\k]nP;*uD'>S37;&*9cn6EE+S.`j^-diibh4eob<25:1
%0`6''oIrlHPOHNP+\#3%*O9J?p[YKg6!gX8/WsL9cDq4D@oY&MgCUiaD'+3?UPi6Sa4fbZFH8#U?>d>.*8U3X>)qUP?Wrsan-0uL
%]&"+8p35NJ,N@COTR?n+oGLS@okcC>Ca.\;5kDK\-P;A&U$=J.nsE5o,!;>k)kX"PSr?@NF_[c3_1]p_=oFY-O/;_)X-]R"n$>O4
%]oYn$a6HmQ"DF>/m4],A>SBb.9!gWW@X;0U131'!P\E:>0$TEu2R$Xa[3JGa6Kg=Zg)p1,ok,j<0@O@\N+#hTO%Uui05qH^(soQl
%;f]q?mP/O_DNSds[g$urjO91->E/rp9&*o@I`.q(*,.p^r+oC/>K3F1,/$"5p;!%ceq@5(e*]568SsoB_]IHo;@ub9@#.=Z@O_[!
%4fRdCo$D0Y>h!oth?VH1B"%o+--??+c$D(u-'K\'RJh.O4efq<P_hpU%%W.ZAsBS40cD/bZDMMs.7),][LIaQ"=TMkn@0W"/8"9;
%>(H$)S**(<jEpoS^>lus48td5*)P`$o/.EoE)3:(;doc<7N<hq-R1*tN.mthp,JuS3a#%<fccOtb[&GGJ>!=eP!XbOCU2J.6QPER
%<`V9+LtGL6""XCVb_b[qfk:UOleI'1\AgJJ_\ppn;@iE:>cYU[`$XQ7'AmD6S\*',k6Llh(koWum&5O:71R^4.js/$>'SWa)m)=Z
%f(o;P=Y84t,>?#[QbDn=#I!kBA7<,tHitD0TP7PWr;FT2q-=>]HOfXW5N/;[S306?@U5,HN_jgrEF#u\1dp(S_DIX\_;5*ciEsb&
%j$u!ZdKgb,#eA,U+%6VtG71B[b!"p`kMBpoqSn\XoPeuT`<uQVFVE4`ni06+A5]SY]NQ_iD7/B@LZt2t?d=93RkW&5cuU6Rg3TrH
%_bWEP[JntSP1,t0=!ea3V8GE9\`6sKrM&[ka#g7XaRAilirLIi1cO96]I!15mVraQndu,p\-@Z>l]o/;0C7q??(pF=_/3*5RXfa9
%N@N---RQLO7[9mYgqcEjS9QPk9UT!l%P&nJ%;j]tqTlh5`)A()90g*X#0uIGAX(IHB_S'H2GE@Rk6/0hOna)p64;?H-)-A<1>4VI
%=$<E@nb:\"g!14[2>%cZYVd/4:*c;B^_Cuo?ghC@[<"\(9hu&7_5-"\Z#X2dE&pW$hPLNR$,JSP.JRao_06QFmnF)%P8&C_.^2e:
%53TM<'`='uml9IU`oTBX%ehk@GTIR3)[`+'%IXN!f&5D=!8]kI[lKt"R#X193WI=3^s#EZAN2d7VV1MLD&)Ctld7_&dW#3INZ/gC
%50h"KCXD#;fGH'323&X&i6q-R$Ga-?7pG39D*Rb5E;,f?jhm.qMff%%q67ajfhZkNNb>%PX^F2k.-o68]a-st?`3*GHL<jSl_oTm
%+MoWMHo#L5D=NAFF_Z#:CbfRk&pfnSptaH=GKGd?)r=0%>Ut/Z,pc:-Q^cLJ.IFFuN<s&Q"=*B/X*t=Woqt'LmqeikJTjp!\qqGi
%;4CS(>,XTsgS2RqF]Z;qKU\3>4-!RIq"jK,=G<(Y*KE![1$9<5N\)?Wi!,l20\9VUG$`Yj6.^T;$L[j]&6t[M,0X(DTu:2_F.7'k
%8Q'<+4HX\*eYt9LY"6$tdG[&uh8I)e)XB3QZu/Wr7=Ye_<,2&Wa1NQ!e#JCsa[NNpf\H4i8/puG)YZD0pO(j]-f@ZY(-2LPq2u-d
%,YMcrgPgG$rVMtQRQdRI;u&#k\=[A^o;$A5:!bqkh*9`+s7o`d4e[AK"^:TI''JKlMFW,Lr$=#D/,/gpi#ntNs2mn^h44QgEu1C"
%51\^r]ptT@@JhE@SP(_Z/YFpIdLr"`=>BbO\,"Yo)(m:b"O`[XBgu89><1#@S&25pM?4frW)'<QY%tPt9Zq<KY"%K#L13(Pbo@]-
%?oRpo@`r_&rcM/CB,:6sibL?1MAZSm:g#T:n)PX)M\F=!)a3dP>/p)H'.qRI#IpT,&MML)LEe`\Wa')J/?`/\Z)f.e!IGUSkQ&%b
%nm(6uJJZEB!CeQfRc0@<ajD;YkTDnmRi/mca5LmFn:.1FQb,JqE\EP%;KH:#+Gpl^A%A!anYS!N/dp>HKhQhpc+@'M16>fB,%LWI
%d4"lo90M(7d+5n3el%K6L=&XBYb38rf.&iOchlR">^@1?iT`7C\N8rUZ>^@==HRIVl"UY:nJ-"q=Tg?b/&r%-aqe!F0pNJN+eJ9"
%;9)T>Q4h6p!j,`=%-;)c5,V&mcQeVtdSJ,W4Gl"S@[f`)Q9fLtp&m9X)*'B`E9+]&HHVH&6gg=#8%JAmD`K-L<:78=8ajuZh7r'=
%.N.?.LC7G9r[c1%**+_*b=XmALM*f%KQ`k#]#%iZ]oY(2$&0Jo`G&^3]pMtmj89qD;Auu8%>U2P_ob]RTa9DL_dC%CHV\7H2\,1`
%"9MW>X*6F;EhJU04rH34A.ka'mD6rY7tt$iY.EQge?fp4<u1>JHnih#[Pu%Z/$$kAlBPH\H$4R!jDsiO.bk\^%&#M#Si.WWo8_T;
%/U<l,4(KuKPRFhTnI^!0Ski+gP-V$tC4!-k\WS1o."^6RE7]!`!`JLFY-8Ak`rGl(]BFTt:(*>$]NMUJmWWV('QFAagr.:8q18_B
%6'm)&[?iNbHPs9Km!Tb.Ei2_d@pM354JpY9g<_3c-3u&bA\r4raum(kT2rFmR`0F$)YYZd5VcmT!G%),.B;,/Q2?j]J_T,,9@^[W
%Xio8%?p/s\0bi"/#Wpq.U=7+(2S4QXp83K8GSV,Uhk+eG>Ma2iWOoNGN^B9%L(8Y/K3gRq\&Fao_!)flXIIc4/SD/:SlU(H,]$&=
%:V%=3fmfQ)]1^1F5)/001,;KoRQUF^;IFA?l7dMVD,mQFU%%YOECjbEGG]C:#EOmT^H+:WOle@G)G$;a8KpTeag78._n6Z=AGiOk
%car`'EScWSp!NMMF]+0"@GPp@hM>ROgYB.F'>`3V/Tm>\=fSnC[<b7l(&tj:Li0uT-#8dK8]J>8(`@Y_WG&B,hV6Tl4\4ljpmNb$
%g,=$K3!K$rWuHDADdotR7gIE%=A"d:NfM>"Oq+7O"R=j2/aC>4m@.Lo1!=\jeibE#s7BHCfED1cK69(Uf5WdWrKJAY"+ciqF"ks^
%985V3F&9(g%I^L`>lYDkkbVWK6A8@ZcuJ6krc^SDKB9#^\_YO&m2IQQ29NaePP_g0s.T?YGOLgud7S0N`W>?<Y+"aPDI_N!V)<5B
%C$j42Qc9dBID0s\iiQAs^k%uf\ZtsnE_V+!9%UP@YDp<9R='45.GZ7MRAE[$.E0i9P*P,sN=a4I!kC@3V2/@m)V9M/&TYZVZ/&FF
%cB>_1@UsDJV;i9h@.7Z)j/Ecbf;#o5=_4M+\Z:hN(,3B;nrtMOJmC%m4YN4ds3\GbcBU&k<UrZJH9(S+Lj&\!]3`d0?A\sekZojP
%Z:DbAc=(VTQJ)S\%#k6S[L*tWJ:bn]a3)7:!7')I:F$B!$`<OP-4TDe&!."`0`/uQ!R`)GnOY$YBjC*W&YD`DC]roUS4@Q?a*Arn
%Z(+;tE6pY?oDG3#F;i]S/>'t*N3$\i2i[5f^@Ntdo*EZP4HHe-ZWJX!W.$f:DM^R2Q[*T=$d4\H6Iq/\lLVNh,<q7f4SnY%\F]JG
%^J1&G=UOR).aO83bCUra.C('OES/@M/.npVCe6p&/"Y*ROWiZVZ=SmJqmA".-GqSknpeCBV1$D>Z;gM?+Tr(m0K_IL0du+ri7l$(
%FW^##?`ks&nW$hW5OK$JIFiV2M<g%]B'r/#ecMKg(2*Eo*G;M$27U(Gc]^B`Tf_ubN5hts(+2$sgWjnXJFra/cDN,PlGqaVJV)K>
%MA<'l%CO*EY\mF(mEV1]Hab\sMmKBbNVr8!qGQ3eICgGS^@Q_.5Me#PrMPNa$t")Hm.kNh:+1NT2(-'J;aB?+fi>J@P!SN2XK"(7
%Dgf+fmFM#9hf+"aMrA-@$!pa.f:_c,TX!%M:$]e&^6.fpc#:(>^XF(T8=eZ.nKY*TF4R,@pRL,_ql[)'gYLD%^+POV?r:*e[>Nt(
%3Xl?.U;UD"<%6O"oZG.go#KO?)UR!.j)M6a0)b?NF]l8Rb0#'EZ6$`L@EPap[L!s;SKoo(IWa--QCb1NdhZtmiMJ1A-]"3POAT)J
%i$h=pEZFHuOYed,elZ+:VQF7F]CtUJmat6IK%YsX$(=t?lCL8]HQ^B-"?E&7&2=1r.t-TnL\AA"p:QIZRc:h$$@OS;RG)_o#M^VU
%ZEGD6HN9Y@Ei6V^i1u8iaZ0JP].6)Jg2C?iU/aWeJ1.t3`OX3/bEX^A\'Gr[B0#C@+&0^H1FW'L?'ilfaL%XbS`/s9U:(s.1UK;H
%`Qr\s-S:h$#]4LVCmMEAkOA.6hBo18"%chO(&e;Hic6O$Ubt%B^f_j^aBGW\/j\(_K@]:I6qj;7M\QcWRYNL-n!8fSn!eYi/jq%&
%ceNjL+3Ss!@g/e?(u9-X=<@+jd)RF=l+>4&$*:kI^U<HEI;*W`s+g[:I6[-0FP3eDYd'G9<k@CQa"r^!0m%VZkL3(cjUoFL[K^Wk
%nRlV7_gj7!/\^Xh)H\tUh+UW"`=tD$2J.T3\7]M"L%GdQ2XWYQ6]1at?qOs!Hd.G>o/W2_Yl^/&9Gdm\_e4Mj1I1aGJF^$?I$TW8
%1@\KohBip9[K,F(^3b<SQ`B%'g#DsOaOeB!dD+Xm[!i3d1_DGPElJX'Ya7JD\V.:f0I?W+UN"-le0rt:"?+o%l2REb%i:)7l$=Fn
%\Y[E]c_VHKoKM@,%sda%be+Is]K\D']-@"1\uZiNeWLOYqA(_FVHru?h%H\_E4:n"E0iBSUj4S[>-7pcI](.>Mn"cE>8@#tku>49
%HnFJ4Z@[aZ6^?>m_!6o&rB@iB)m,Ck+)+_'FpiSX\F$kg\VgsZ#N"F"@f<h6]]\e_cTaX@F8HK[rUVC4s+57Fr;/:'q&.'I$t4U>
%0L%plT-;G)&E[U2o.u'q)4L=/=+-BkcSG#n-9aeaT*iH"QEPf0lK.J@5C<4gfun<KpgSEskMJCNoUG=E]:cq9h30d9DI:-m07Nr=
%[nm"beLNWKrNA<Gdo@!pB.'6t(%W&^0t"&/o!/YV?0)@]"`Jdjs7t\^n_YG\+')[Yqr?T+huAc8rI7K+?_n]b^Y\q\s&sU'4Q]YY
%kDh1n=oHXX(MLPS^tl1Pc/[&t[COCBc.e`#`;ferp$4QWB2@DIHhHsOlbDh9Y.MmTj8RT0kI[?ms3`slldIf=hRn15p&<(^^IU;4
%rJ,%3Dnl;MmF+!Yg\h5Wpcn:uj5^0o%sjS;IedpZL@V<(#fa0Wli>3'-q9iZ^_ToKqDC5!O&,BhgMVtD?A56:SI=C+j]\dQ6Fd/m
%Y;??bo6D\smV5%aZh*QVjA6cMPm^;^EFRShT'DT!FB#8VN^6'9VQ&?r8^\eaMZ(!lX^7\TD<GBB.P7IP!LKP6/TPX;^!)+tjMZ'b
%;qXf:]TUV1dZUeKaA#jTQ1uJ.0,8nSjcd?*McZVtr(])e<F"V:/R1`LCj/,/C$@*TH8U0e`&lYGTn]deTP1?ss$kFVD-$c8)EdCg
%V<Zj=(<jV7Roe!e]:.hC+ta7)TM!p<S69=9c<hmF8\5nEZ:?!+l*;-])W8G)+1A4$\crVXk1mSQin"[BU5!WUI.SVtQJ4J;M_rLj
%a+Z2)jUM'/nsh&a/FT!HR_4cqNlZ<1eo\(,YI'e4FA:1q07JMC-h"Ima:ZR>iuf?b!i0<Q7XOAEKSjR@4urKi`em8O_!m:OhGI;c
%m:\DQ6emjc@CTf7=giFWN:>@A?3Hn*L_?!h0<aQ?[f^q:/SK>&M`_*tlnLGq-)0m8*/,oQe_1Z7\27NK#&i4sQc_iN&5osX(nd]V
%G5IYTm$BaF3LM4-0(P%7:th2u?,mcTJcAIki5,P@\*KhiqDtiNMC_>HJ4_Q-:-R$N]uih\ld:B2K1@h&B@tX;Q>rj28rAlY'?-TQ
%?;IG87.qF"rc[:&?&?mn+miUk.I6R>7(<V8>:-H,/NMTSk(J-0JqhoIK<4/4bG,JW7U(Lo$W3dka2@h?Dg3,]W->mm9d5jGQ&KL"
%S6ohn^WN(f&6a@W<r#OZ?jZ;GI^cARDktQf=uX7<pp\I"R=@pW*Oc2iJ<^S6CAfn"!5rCj.4P=o@\o<LP#(VB;RDL]'f_./q^XBc
%0SjsOY&$\&K0i4gV6NHGA@"JFjXQ't,(kG>AO+37\QVB+3@DMc:3Rld&8<LaAEnt#SLLc)V"^(/"[4)+6V33g1?],A<V0:0,qDR%
%dc!C"<*m1UJ=NVAYrkDu8n&$^T+7tBUh,tjZ!t)91C:h>66pk0:gk0fe!OH1UdiQ[C/^0pe.7i,*1]".-GN'///qU>mLllqFFp+5
%]KA\;p!'A#(Bjot]AP2#X0T]qiD([rrhXC\c_<.fn`;DMnB43oGj1,/95"Dd"^A"*D#H+co]_5'*F`p/M&>5@qHY/.>4ucp<N'no
%.9V+2Qblc1<JRef.XEdJeB5a)^J$8FjT*1l%9!&!EeV0'Lu9#0N?)=MKZ12XAVb=Zd2O2_6VE]0Y[<em94/q)V+$+I_)*OgXY^V,
%P>)o[3I<,C/QaNB@R-SS)DE0dL,^JHp_-'%op8$eL#C&U([3RKLk(7Q9Cg=KMBrT]npOfDja4q;Q=j`*.(Ed&)H$#CR?]U7G6DSB
%4?B7Hg$LQI2;lo=(RH2)hA5E[Srp8fb,@PlQ\q$N*K*%T<'EVWA!o=\j,e4k[YGWsFA[X5V$sVt<e(R%pid:;?q\J5K,3"[dNZQ`
%B+C4V$:)FtF;3@rXEODeaC,p6SkPML'eR\HOZ1An@G6'EOl7!gi0Q)gSn1&4&qa'PU?r&Gr5G3<O\!nCbLRk0Cil1@G-S(g9*Em?
%iZi\^OFCo**'%S]&`Z;'/9U/^fM>>2*qiHrQUa\;XON/_B`[*;D^!GAdXp#W)^OWU).T0b0:stg7%E@I=^%I"ZZ_m%XKf_t9,Aoe
%dtDQQdCb:-[R4]M__Q-W`Y"I)JqkX9eW7[LoVJb5g\Y#W+_cY?/5$J[[B4Po'j,1G=l/"\YNm*nFD2%SF'SUlY`kAPj9nXA7EdXq
%MQEAS\qlt,*KVuaR$m_%`2^dNjhNE7+u2!+]E(Jl`4#2.d4sA@E]`&,_*HQ]G;Y=P/*B)W?)Ju<FG[Y,U^Z/F@0:e8Z)fE\#to>G
%Ht)^,+QkE_!pj+d4ONGu5CtMZQpprD6T7t"N!qQ/"GZ%%ZaRXXLX?dYU0#Ke]8\B)na0Qpfp5(VY/GFG<AigCIdAGJ._8Ks?Fkld
%:ndC?q\L-:PW\?I<!lgAg>Vm:Z@qBD\fPROV52K'DW8(I1M"R<m]\"hKVq/CQ`^a#<pRT<&=;?T]<<cFhr/)566_Ka.&2=naF]I7
%lMNt9XM3).%1@IqM%NB<)cW,>U_6W:[>1([4f02h$o:Ug>)dr-lD!l)hD.o%oMrgR._<iY<`W-RLIAir)e^q*+cU%`27CZg`b>Tl
%<7*-GE[WN6;(CabQmB**C,eYf*(L_Yk\@J(XJM"[I9lV@nd&s']fmK@F`g-VMe+4+:ki)sRI&ECr2TL26,4Kj*1e"[UajP=eQb_6
%?K+PU+=9+X9MUaE;tRVjQZJq6,G!E<;H$o8Us`Hd<-f5\b_pj_Ml9U`Qs`Q[=F>=<A5)oqc,If+M_LW>.oB\GH5cf98`t`i?+UNR
%(+jnB29[&3k'XLR-W0qnXlf8^X*=M?-B"g_kFsDSaVAY*Bb8`"%0^?ajQ]Q1#ZeF;plO11[\65N[4%@%-qdY1E&9r.iEMV4m6k&u
%noS$>XG,LsJj\&-HtYF?'C!%i:DC?9o,sC"/\tlcMX[^<lZ/Te%ZS1U(GGQ-<+,";3Aq:q5qJY^KhsrhW2Gd:R)@/OSjrS][dRM*
%T,7Lk55aE<?Qe;p*Z]a=qo:AI]RKSFgYG["qs1.UIsCM\=)X\gjE'6g;7$Bkgh7g%kK1<&'OZG&CH%'&MQeAOIjPG0I)U>`ns",c
%Y3OHjL7K]`PW3P1)@;917Xfn>b!6`2!uOj14"A:ReYLSikJG-1qQ!`]?uO-)&/2fUQ\rHnkT"-c&Pp$E&e1pkKbk,g;c=,U=NG@,
%QL/mFqC__bs7AnO[K2Z';Wk'e\P>`_A0F\(WiiJVH8-BGK2AD"e?OV?nY35c.20S76@acA?EVQo>tq/VCW";WT_\Io.a)+?S1*A0
%Age/:TLfnO2%adXLqC_3bW[G9U"2VdJ`2F"AFPO7L]\&9U;0?S')%t>::)Mk(l/^YM009=6VQjV/9'J(-G$TNf2A#CJM/t-P6iMj
%Q2)oXD._fTHO[6;]'-rU-s5[%/hSH=a.A_/JAM@!EO5_!nA@J$1V>+j+rY.goO^pN'hA<X`DZe%&G'U][IWt_WdJaFLWLpjMe\0=
%\b`;=Th^'M]LK>A?sD''-"D,?^h%LT<@OZ+QNX.@-caG;ce1BD;lh:q=(:+I&[:sq=^aKs-a3rqnoP6(($t5Q]jWZ\G1Ei_R(UK/
%!CJUqa,;b)@(=!ATOmBHJ@7SiDGY$[lW&6OY&sgP$"Jt_9%&JI,+[.+iZ]VZ=tl[0!h09-$ab/#!*[;HMJN=AJqd5oVaIeCDU;li
%i#YBki"HA-d3?;hXSlT2+NhPo=+<Dk.>(^nA8\3WQB''Dko+@]mID[K&$`RoeBS*3.)p=+]<'/u!h/aPWeB%Q\oTDL\.Qdp`4AB&
%@>>VdV"3":a&_QI+8`&O0X!o(bBtmb+t]>m:t]>jas%@/`'XiaY3KDL"nB4$=aE<k4$6aj0giV+]<YbclX;'4-.,%H_CePZ4*ZMD
%<>d/f>QH_l=th7sDuK)(:K*\j/stc9in,6i<Q7Qj5UI.W-Ii-5'$n\g#0I9<4/1D92:r6%G#@d72ltWMS.IcHXl;@7NuO>e)i,EU
%i_Ca(/PQGUgKUm#AKgXd)N&L?N/i[_,-,#[bGM+F^OcJHUKLQ`cd9"1`&(<q194t%_E]<<[5OC0KMf^Xo[>S$0oOkc9auJV\(e;J
%fmDZs'1'p^GL*Xj6numS(Ofn7*Lr';?.%IsT)m_;"#2sI39UBWWQS2mP!UoL8dn?I:H0si`ZP@_?tP9F-r,CCGa6C^fLJ6\@eiG#
%qFYjaR<\3K4lmW`9*`D/3.\<VXHAR/cAJ?tkZ+=1L7?ChGdEA2:RG*7D)<7GV*gbnREPY8iB><s`"n\:(\L1h(N1g)FFP\I!E$h+
%C(C$2[YR`E@:_B"caXZs3/4De!T6nka[a-+L+aHRr-#hJga.$56q+,bl_$jS_5ID_XK"!s!f=DP\/s&G)K."JOVec(*4EsS90oA0
%*b@e/b"F>O`6$-#]:K=$$BCu2=<o,]`8;c979p3#kBJ9XfEHm>Ooe(o)mCoK3ep3>XMW#ff2Arg?1R-'5b/^=03WmU!07dn/-#;M
%i5ppYUYRQp2ARA%VL5i9+8F6?X,NEUKe4>fMAC20D5rGUPi!.j!N[T22prRq\W"$h%\qXF)(so>e,0ul<T$iBj"1._L0V6M".69H
%C*_I)KQUj;K\hsT`unhJN9F4BXA9P22lG/b$EW:W!>;7]SX)kef>L\%5%'A8Mfd.jpBalBL-5l\%('AG'!2SI)/SGNCN)+#`!>tI
%oj0Buj>E\q'X8$Tb/s=3ip@:JP'Q:1hl_H[9Sjlja$(5E9Q,2;\cgJTRh=(8B/1f9&N:-SbQ+S4>T9kJ0dicNWmMQ+]3#t^?kbQ=
%RMCQ_.'lLm^Ts6>,-&cKJp\,0H(lP5e9-d:WpTJ,p[9jE)!!aiJ:ra\4-g7uU=0*E2AXi2Ft$Zd+L+31iUJ7FYdE,gI`'MDF'7?%
%VNO&3P]<%=XCW+I0gmh.F>_?#7G);C5W04I7$l)DR=q86@noihcr)S7`8(J\=@Fbr/94:(=VU_>=mZsj_n/<cfFeq(?k`rV(R<:B
%p3:LQO,Y_",llu(khpG0i/uAPrP\@CcgV>oi58r7_"qRL<MHF>#BQN([LO]n$9GF3(l3nM,s;iK>QBI)$t,:J=YN]:dfV3i6pE[u
%&^Xu9F%qia<Ci*ql-Pb5OlE)Y4AfTn9uKs$N*_CA%t,IMpK&2c.bOM%k@#`RKWgaHJ-??ai<XD!JP]bE!F>kE9YNs@atgY!ksOE=
%)2j<daK.g_(d6n?BHNX',0-jB*-2760u.&VFZGjs^AsYb^a'\J&\/;Xj=!G1F0$%j)n",pF&XQ6ENqK.0Qn)b2/0#qB.uXnm8=d;
%".WJ(=_(l9dill;2X>rW"P5q!JAm<S!!pD"UL@kW^K))JN=JFbGU?P9deF"OdVr%pdNtUojo1&h_[r%:E<aBK=b7jNdap6Lh2mAe
%M3:4UJJc%?(1Q(iQj/h5?l[09@7c_C(KlZsn\/PDG_l(AZOhI^N%P=C_(EW1+n%sShs6cKW+!>/?<O'J'4%Rl)$j9S^Jm;UCT@[B
%7M%=P?OU!jma(\S/J3NrJ9)>dXb'N5"UJSR-jI,Y\HX&f!'_VN!jh=AHbZ7"LF>eq8C<^(Llk"F1i"ot%4BnV".NphO$dDDT>56o
%#T;Y-LgH\U!:Rcd49DUe]g%/Q^IJCf0FKVs?ZbmCN4M8K+Pr]G;F5aG1O6?`=qFK3Xd@`MaZZe[2$=r@(1:p`Y)60m]+eZ^RY!]\
%YKq_\/0`)A0&NGP[2poE@B9La9//u"bC4pF>;2&VHeeGJ:Z&9mK98@UDHdr,/g<9C8P.+"gV>\@FfZ:`%H36l$O\sf`tVHE#h_1J
%d3-:U*VuM"2A'+3\<2Dh!d1ZV2m@d"p=,fO'1jN?2bbiBL?O8kdThIa4urJB&Jh=(6,H=RDk]6<a_-:s'Ird`_#fV#W%(0S%&C[`
%/J41@>);G,V1H1'WY8#:2^U7gMNo8<(brsF,t3WO)KA&b%KDC^91/UdL)O@RUA5iTRjcCika>bnYRb%sgZfnNCXDgo``F`cfc><=
%@Ksp&LbQnX(C.uS.3q:/2Q)8;=aZD)dfT7VhF!KEKpg/D0F2rSAM+FN_TR.Be[4Xm`>2aBA4#O+RPR@dhp`gpUG7d00fJ-G`+rac
%#JDUU=8J>)3`rKQ,DI9A]8h=b1c&'Q?oqoQ%^KD^_>CM7E-1L&!gEs#-@f@TFU3OAjr,C#a:lIaXm%G,'8s>YPDi%="QW$(N(["V
%)%jf&0Ro54Zt=^ul[\\9%&cE!")hFK,5kSRa&H>]`4kH(?L3LUb=pM-QjU&c!kQ0!C-KP5N<OTP#Xp?$!TI%g,WOR?dl;-bZAT"$
%IatR1KlIH&!)c0;,J_PP0!\9I$tquBd_,drZn<[3T?5"e;-"5/#&+pmPL1X$@.C"(.4,O5_eKc#VGSPWCjC6/NH)"&L==Be,5<AO
%ct('#O"<+kiU1uGX9.6VF(A2:JJL'q0T_DF,;sK$M2jO4`6bkSV@7(6SA^FMo:[5oiZYndn`@\O%%?I;X;8Hu>2VA2MbN[2^@7AE
%-DDdA=>Hl-M7A(<T:u"*1>=mJH<Jn@alJJ51h[WFXttPo-=lJo.;T93*HJ(9N(-3/2<=rZDt12k9d,AU=95sc!3+R^k[LW!)N2R2
%e)UKcUEP_p7`a$glA-=9'7nQHT7@<joG>O96KJ!A#r)kF%HIj^J*b.2Atj/;K$]*=eNCK7I&bf2$rNG#X'W/2,9s.Qjk"=j(6A('
%qH!c#dXnd$%ODi!otnut_??'K8O\8Yi_jqJW@3RT<osi\=_8=u'>t(mTIfTSRQ?;!K=gV62>8Pp#Wes&$=qh(kA(0N+#k7C%;63=
%_j*5A=]9Ac'*kP+Jti95^>M7T#%8J]2\[?r!Aq\:bV07jTc3n8(dSN75SiquZ`S%>]2M(l]`LHtSC97Qps,\YSI&oEU4SG5&;n9<
%(&CJ*A[8'PdJ9(Z)#Uc,Od_EX#pDZN(#U8.6*Xh8JO^)WBP>J+(i?@)_W%6ulQp-ZO>ge&+Z%Yk(l;Qr_FHH:Sr&JkC4k*e35X9g
%FoY]VRa+a*/eN_(b#D:[/3[HR$aC$eF;hBnFN+9Rq&Qc^!2).HPaEUF(pk^0M:FnUK<TOm#U@o`L#HP&2^;XsO;ng[Ul]Q/Z,KMG
%>4e9]^g&'MAi4@^aG))Kd?KM,A>Y3+,D5<4e$iY^k`L+C"W^qco.Vq]#h/:k8QR(*Q^A6`:W`^*E)-)5a.gr7=Sf^_Wu+$.Fn2t7
%6!?++#4G1Y'eN[-a3)^R0/U_"05+InSEAltW*sFO_Og8(gBueobmRg5'T!5K%<,Wki)*bkNEHtiX*V+NhY]'G(<9j;'(UF'cKB"X
%`aAC/GT-KVScq.\&#EFLrq0D98ol3^%DrX5:aAS_1n>6fI>,Q9.&pgb&6M7l)bJ#C-IqJf.`nbC+Aaq.c]FH-1k7nUp,/#8!&l>V
%m?'=MK:3?JAYr(#YWO(Y'5<$=8b$YbM+Hl%Re2ak>!`-c&;A#t-ohi;Q-#q%a`P2GoM'Eu^#ikA7WqGU'@i&])@>2bZ$5u;LB2]5
%0L<Dd<X0a\Q&6Id9>J,flu0?ePsQ5i`bUA5dWWM`!BEr_.^DK'#FH$<;1TehRLhQf'VI%n#)QReD:J2Q#5`gM<X?gR$OY7!F9.Qn
%(/('(-I>g7J^\^LUkHM`@IIpuLPS7X8@sQ_Ot0BG&n!Sci>>;b+]M.?6+k"[OMp3a/;9$Cad=AO?qUt:XeJ?1+fT@1%uW<]%7IM=
%dt_YY&2`MTi`jCM/6Ut_(:uZF#-!)8UNB(/)sDOfJ_*ROlu+)/KXXWFRUY&,A`a/+JLBM*,)VH5S5:J3+E-PG0'52M#oTBDH4;Gs
%pl!))U0aiOLc[..IH5^02$3T>190n#Me.uYQMKBU14]"\&WDHb6Am0%#%WA%==ASa#=#gpkXML@fP'8]iX)OiE'7nQLc:7m3XS&c
%6&/_Q941Vd;J/1bW[Bj01J,BR3?^))F-#/;]@>tob!Q.m+X!-%O@@<@Js#!AN*Z%q&sD-cgHe&[VVN[LS2KP$>fF9HWa\C&lm(>:
%?7!g]\EGWaq4q;WBQEAr[X+E?Rq&/76rX5<3m>N-*tcl!=0s?mL-'KV*5N*V#!E3'lH-mL`tbS#BP7q[,R:4>Rq04J+p\uA_h1H'
%VLuWi)C5=;m=,r3OjW2^bjPud6$m=E$gBec_ABm=olJ+C?4\pE^.atjSP]grjesD"bAk`X`175YASCO$=%>.@Oci>SaMC\RgQWEf
%:V5_b]oMaRRQW7)f]\bMXoqj_F`Ka\%_rYaXlbNF9DHFTBVKFU^3@?ads(*3@&+=CgK?G_,$dY,8=X!5,8H:$KX_X7/-HZh^eGfK
%:=1]nAMu@OVP2"3eTAle)FF&D%.Zq77N<3_'dJ8C=hOt@S]_oA9QD#U;rk:&U\%YR&OBpZPmOf_aZX.i:"NFaf=Bt3mp%`Xh'3+i
%fGc=L*-'<#[9Vse($:ORU4MoU.9-GDWR1gD7gi?H6rW4;4`(kYTP]6r-\s1B5m;uk.g$i+=Zf$pe/r6'2'&uJ]a0)6P_Q!B/6ZR^
%,6-)EN%K=tgm#dSZ.5N\KqJE_+lHdt3T.!^K,%8;V2IZ=b^8T2'bso9nRQ$)BT[T(q5J(q7jI73I8XMIj6[,:Yk*tCqc/,/f".Om
%j>;6%)[QLJ?F)R75:jW#:#5>/Z5).*O/fnCo.N*hRLdu-$BZ)<O=C8>SYuu]W+7dtA7q28*-AWJA1M6n06igKZn3uTAVk^S2Y^dR
%nTZA_/XA(h(!#L<7._L'?q7I*$NXF-W6?%>/_Qt'A$eF'!!FmJjWVUj?if$k40EfRrmkXC<Se2d5r#4d*X"0k2EhIV!P;IZ9X^<L
%F?>^+>',.&NPI-m_#+<lXE@XdK[TcEN#]JJUeKmO%7j@':5<=UR5`U$Efa!i56rEFp]?6_Yr9p,3!T-g&(#)B]^uK>QC7;Q:M-KE
%!q_,'l=&c8JH7=s(q>=BdV'F!(j3hb7,Vu9]Fl[E4e@7;@\B;Y8^.YoRJB"(QCE_q_@:L$@EP$E=bq6r[4pq^%4:c$ndMY@PG21#
%-rH$a>#:?\5g7Sb$[O4r[]9!_*-`nil%uLE6crJbh2c4<>nHHT0K.Ui:16Y.2mYN\aGe3J#:b[F0K0In9NUuAarKeHcal,6BPJ^M
%?J5su3WX.B^1:`&9j<A`Ke!b\2sR<&"c<ge_Dt`W_.tDuHH?:YC<omHF8"=hH0r]f%KI:,91:X;d),5$.p;D.28=sO.4,L;#acaQ
%nn0I65j8d>Z9[>.Qf+cQ4cqTqb]X)+NKg1e.)f2Vhcm3B*k>>]02iZ=iKH26eW1+f6H(1!*Y9\S'H*-f3^b/$!dMeE@l,4pbJIuS
%c]*$p\9$$YBOkR&V`8Z/5h&aa;"mYpA6N=]_(;MG:c4UY-,p<e"aCFOdKHmi:(2kMVks.k3d!0[PV/ca_>f;^1q[J.1?5K)b9MY?
%#TnjOMhKkpdh38"eC'*:p6lHP)`,CF.U[dl^,<$dqlq[0"W?G'(f4c0Q6e^i>4Aq%0]7!0he?9e6I`ZL!&]Fl@YGc,fGAYBf+`RF
%nuu5JY[(r,4(qr@Z;c4%dX5GUW^MYCrl(1^'J6p2U5[Z0]+,*',9sK:jWUOEal=21)4[2-E]YPD,4RoMLh)E40neCWNM+!e?u3L?
%U7\\WiE_iBn7+Zp3Z2:uBr?fm%XrluR*DiW(7p,e)!N$^Z3^U)>0r?_j8<Sh9EYFfLe'X3=S"bmCkq"n2C$fS3K#H0%0SDR+L*=M
%*`t!p3Z?Y5l9H2X@:?@r'0^rM6$uG>I"eqH+]_K3#7YO=:B2"eQVfGH?#DO=luK6XKMRf3!A1^1d>#FR'uSIGQ_SXT62#*E1c;.u
%Ta!+LE2-/pgn39FDG_O!!6\&D%T'![=gBTG#VKe!/.lE#>2u-N*A=>207JQ\*J%2`3^?n;`ct8+EH!M[ohki8*8&8Q\ZG4_BIJ#9
%0b-jrElZ4]:L1OY86SrMrZu=^VD$"t1oSc#&_(5&'Q9j(5U2?X/_"O'/Kh3!&S"<-4d%jo]M<\T8u^LD)Hihj78PVuoN2]8.ej@%
%e/Y,-=miRJ:rU;Wd'=(;XQ_lQI?;,QW"'s^?$T:,3"kB4.hFQ@LqjEn7-Z04$43AV(_9]jF]LDu+>WMS8LT+6-`oda$SkC-g_j+1
%TNQ[O"HY?=T#l'#9!)bf("O46Vcf<cZ1:a#3\uM`3FcEk+qq<`&nfIUVB996<^8s^DVL#e/3B*d!n"oT0j*@:><2&L(,VhGB):?I
%!<Ps9P[.Zm=P"k\Vk>KV4Jcj%*e'lp;-:Vq(CE-G)='2\-u#?Y'SoUj-m#6H3t4=PfO9813I&+gN!rcl$))",[F"G5MbgD;1o1HI
%E*kSm!,WubkJaG$.oXV8%;H\L^K8A#1YkQ%8o+&"l.H&e4loM[Y[GDDOZeYJDkgHo#\ehG`:AjYK(B%K#8dR<:lkk=[FQ0NdZ-H[
%@jW(?.n%[@<]l<dj+U)7HIcja9af%@L!9ru!A/';@`"&;>Lb'oC*\rdY_!'LhlKst&(8^"fn^EXXD%rMCI#WHPLkb4-3Q7:1874d
%X$Hup`of$]4Y&_%@O6h\q1YXg_6U64+9M!571,c0,#.NuZ@qdh3pl-"N8oiQVs9@RWZqu^>sTSOF+2M1,Xa>Lc3c<*L83T%#0%0I
%>.VA:/;SEmW=PS:f%H%m;])cZ+:M8p??l8acA"2Eq]>\ELUopV'4>X+Gk[Z$cO_-M76&hu,9n88gYMhV:Z&-i6^lm3DYN#S!_^uq
%^]4/^:S,8tqXEd^^O?(G:Ln>=`TpSiHtPCOI*(hq^Unpbk4Y:JjWWe_DnDY@D"l!MM8*AiG'_Ia4OgH2dDVb#rX3QPoGJ<`7p,1c
%TsbdWDorYg.Uk&R;@LX(QXQ-;$o"JGn1[qe:,F]oJqRTd<_ChS'5&j1E^?B:8h$=^1H:aXW6n#Y"hiEY>XlmbrBRq5;b7<RWlAW.
%2;,`oe<<^0Z(Br37#pakb%;7S`]!:12!^M'($)5W/SJ_k^SV&fL.*jD"MdMpSl1f\<PBDa)"M#+7\VcoU@E8N?3:]J9D8%ir`Vk@
%?(C'EGq`s>W/:<GD+I5e6Oj"*W[4KXNTt77R3&455btTjJ)QEF%_tG?1n]Jh-I7"HTPcZb1@heA;E'+aAXr9fh*gI&@Q__[+j0ub
%(j-TfMaN%W9JWPB);WM1(OF\HdA3RG5sQ/$0Y06@D\;-MS]$n>>%=''\Y5[e)8XC0ofXEb9s1`@M[cA6d<]i3J-cB2)V^F@2*+'s
%&-*.1<sZ-cU<>`(R&CP".l4\l/6q)+.tCnDO9*H/ged4UMUF4kI^NL$5Vo8s9,``\2Nsk$8Ch8<*Glu9F<HJH2&"^0W)0ZgYCY)^
%,[%L9iPa(Hm;pdu1XDmaf+pH-ln-cYbmAPNQAh17TjNq6ea(,EJCb7SMG[b\LbR]ORF8ETm:WQ7L)GLU]`k3;0F#[B]cr,a,Y=Q?
%^>HY=P)EY8UD7QpRLAF?i?#eU#gmZNEoN8fM\Fp+9Bff0<cp)%"Xq:"4_l4<Fus0"#_t.4c`*&/Kcb!EH:Oc^.Cr&X8A.ciAVmLW
%n5Wan%M,PY@#2a4dh:0Wd^N_-dolf"](,1/a]'h+#k`tAp"`jE;O#3g0<Z`I]LA7Mbtsh;[KKKdfTksNR%[o2-1=ini5kLA9$_.o
%b2m2Ag-\>f3L0)B[(9kk$BNZ:Bi4]Y(oQAinFOH=8SuDu4rcmUQE#j9YIPsq7FHK$eq]qF_lh#kdeaA:rB0-\]sVqm4b0:s6iK@`
%1%6i1Pm7Zd&:X\`P))K$m,nu:"rWXV9hm435o3P.*Y_CX3EKVJJ\LMT_[6;k0kc`idfH@[9@6XS3kT.RK^E4dWHK^)>unYaSnh1*
%WQa*bm=5OU9?K^(I6_o(K+%oQ'A:GdPMd?Jdc*90So(:((9O9u.S"25K!Ll>65V9`6ka5W@\L]Y>+DP61o"BJN*dVM!NeA4(pK(_
%Y\;OQa^p#+:r_V;_3*-X!e7hZdC.=U(m+QtT^P]3Msj)mN0IB3BMgk\Dl_WL.rS@D3YjoYP=@_sbV!jF+iKBF(S\&s1_]7CV^8-p
%DF<:b-4,=G/h7g%nner"Djnf'S76J+-W*C*#c\'!!%<c+Sa<An@>S67aUF#p"cpf31lN+_YY'^,F/'I4KM9QZ-8c36dNLYSqO4%e
%l]B:#Z@KAsbnetI&RU)AXt6^]>3gdioGg@Q7F977!3/TU*&g2E&O)f4';]%f+&4KL>D^cV9WQp-f*:"1^)d/5R7b0Ol0&8o,dn?W
%$Hi:#4IeBuZ%-nHk"?AMoeZpQ!2LFKC^J=@(?*4V(!E8#6WJBbECkgc+pelW-;p_6[_\Qr7K9-6+YnJH@Mj?ud_ilcEZ*SqFcjZ]
%%7t^oCNb?:!sqqKDFGZKM%[=R6_2c'!3$VVQgf!0GNf00XF^^ke`@,(D8\/M;6,G5*\7S).KHmLo9Mg"!GE?E<&DtU,u+g9Wu7T2
%lAU(g&A/EBeRL9A*s:4P:h@VA`JlcWa\DsehO*]_!%NT%EQ<&>GQhOo6t)5>jp93Ucin#>L</"4%0mLjO@Y)),Sm#b/5V0pf3)dm
%!-94sJZZQ[=H4<0Ko4>WC/9.P;;,SYk"dO(ZG+K>[@(2.:.Ad>!Gc&I..HnkAr+#,>>C?m[fn0-kdupM=FbanV?neLZ4<!2(<aB1
%"7I(uhLYP/`\^L`iqpe5:AcSR9.]Ro_STb1]o]aMfR:SXh8n2d.aa9CB'NXH4'F1H.-mV(M%09(^gp9;6V4FQ:h=fB</;,#8s*MS
%V>%:H.qnR0ak3"anD-]nQDTRr:Mh":V&b4g!lQS42Ct:h'j4/kL_l2Z$EB24*!3)fG6uK;m;J'8Fp)'lq[;.'JA@H+j'WBcE_o0R
%LNnuIF_dMa[0$]N5UOq6E*)8CbfDn<#*<.sLHUH0!n#:I)P,;WGea^4.5%RLi$]9F;bes:`0,&*1k?,2#1J#%js!1Ilu/f$p;N7\
%)J&9&*I/BpJr#pT`N&"DQ<Q0e#:S7CT[L'K_r@AXQ&Yd-!P@bKOeY4VN"eWQb_0I1kWEUS.%*N^!J@G[(C^@C,+@ju:QS:(ZSYIS
%nr@A^/l^naX5b&nK%U;h%b(8C[u)3Ap>RrrPt3oU>"/V9A,Wp]Aq:7?QN<K4BL)L"_'))J5;*DG<[-._?H9Z*Xf>of8RI"U/A6`j
%)U$g!(_m>MGQ8YD:,-)6qu]03=8lJUi]]Pk$/0?<9JS.k[\mY/Mc$[oVpD`5)>A`f$?$p&&:juu:2="R121J9aXo=sXU^RrD/i$Q
%(2+8+2=HnJ)LANr#BO5[>53X7>_Z:bOgec1HOp2QWemMC9#cQYl=%gZ\,k97ia*J0@Y%]*K299t:T@D;TjX)0XDb?V$9UXk\&O^k
%TuPQ"Kc^ni`r5-X25W,q00oIjn"4lf1Be6c4Cc$!9!/7rT<"F*k*BGTCdo(B3p-j==`MAhg$ZJ00k-r_#Y$L%cYDHI`=[9mB,H:!
%D9TPWQO<i>48NthIF7$*-k/EFM^3pQQEeVGj!=ati0h6lFJ'*4:ePcaU9YW2JOr(pA6@&(L7cah%4F7*'TQWlUnu6J!ruNEQ2tLk
%Ciu%[L54\)-%K2c#&%jmPQh=P3d_'YMs;mlq<E:_Jr2"a"Li&,6;,s%gYVOb#sBZai"[h4e>sQ(X>S8Ji6?"8g+a4JNMhr0Pr23p
%C2rKkKtqMPmr?8dkc*X;8Xg.&l,Zhp3bT[TOHM!fZ-mt$LQ^2/!g60HSTY<&q1)%DKr%9[o0B.]:O8ufb`2a50M&GcBi#V?R:QmS
%Z9Z,F'&f)Q(k%OHV@+$(5U*3MN.bkVJN2SC!&oa[L"5q^b07Q#M]oVjbJ65leQXeMh"/sgd;+t/JU^EuW[>9LKtsA7-X]L9g+87g
%Um[I)<OELT[>qF-9#Xe8C<G$n=tLpM-!C[,WXp>Q4d6H(ep;:')''o&C!e+.4@;t<PU;Op'.rMamV-Lu0LiT'U1<Ntc)u!=6>?NH
%k1Ak@&qdZp365D83tg$EWb;N%e'co0lGPoDAu6K?\[8)pPDcQ/#7tSPNFl/(&&7`T.Q3L/J4t3HXMP9$69=fj>*t`B3l.0Ud\=-@
%J6#3*LY5&8PQ`8PlMn*kL1Gm*1[B%Kd`T]lJ9;-g'3&LJAG*8D!O"*f^'WN:BHd<V&5Lfr+_<9Nkk#3Cdt*o0:D8qa^aE,+E/L`u
%47mD-<Xd-f1PePh+/]6$ACFL@`.EWq\q0s<$HA[qBc.*\W4&]i^i\h8fe41@E5I+T/Lk3>(bVALLcHro?WDq*MV76PM]W=[;uJu$
%5=OhL6>8iBOXl,$#;0,\ASFM]A(>U'hc-XTDC?*Qa?h9[RQXU-QLh-l;p6'eb!4-[X/r!3=]La'H<U*ZHlq9%d)r$PCkQk+aMkM&
%f[eR:\<?j`dr)0!-c$Hu3D3Si@eqW&TP2/JQYZ\*Vd8PpZ<Kn?Yt?-$_r=6c-[/%0o"j90d%%lb`T<T^1$DV@&I?l>*."M3>DAGU
%j_uMCZmL\rRBhpXC43s[rBsA9?(0aL87Y:]l:ljlRLu*"3/s@P4IWu*Wi\VK_V@2A'M&4uk+XQnk-^AfltikZk\Q!O$U:0*j_,gS
%kr\fsB<G3N0YkdZTlkO4IQ\iY(@:Q;&6.Y6/6/ak`g&s)+=!lE=YQUke?3<Ch,bWPNmXgq&D,)hK&t-oGF@t2gC6ge<"C\B%NR/r
%(hX)@RogfdEkJtOfSknD%:qk>8YlZ]!C;hXd^,A^4Gt5tL3lA?6C>F0.NR[h>d3G,:`W':K?:4\N3et"4U8$h@iT9tP)7cRA?oDP
%00lohfY8>@BFG[N`h:IjSR9MQs%<]OHgJ(j%d'"o,fWTICgfdj2+$Ue!mGR?R@>p8/m0&I*=%"/UOr"d9$J+dAQdO,Em9nOi$Tdf
%ESTn,Nuj-MR>\8I&./Cq9I_6Q(fi+k8pch.@Vopqi4-%QC?>q/d?=\77T'7-bQpt,'qAGYCFKi\']5E\ZSA;?9LqSgY]XsfS-iMk
%@*!AiR5iA4;q,\j\!$6bCT9/1!R>WE/0]0RFC,(N?&kn_/+Y6VE_%CUED-FO?k>0gTNbs2b\'ePVFP)sMMsJ5ZuP(ljqd+X7?(+l
%.k6]8=2&=u:r:!NSr(N23e20(%#NQP#V/lVr2!C\+K>%!Y:Nj-XM($rO_Kkn3-nj^M\Hh$;,VWu/MSGJ](Olgr+n&@8R(OC&O/&'
%'3e"Am>Qh2B4k^AN6!\,C+MB=:`Z#@X8P]H_#kjmU4gR$h1Ys3#UGW`,lfb"@b$gtIg.@L_9k$<b';`fNWM-q+@.e5c%-L;2O!E#
%l/Hl:'/aqKS%dGbp&^$UcQo#TSOa*$pbAc",u?>9?D8MiT2@I./Qf3fPA7u-V0D,u,i+WThfH<%Xq>2"B>t'2StflAGj,Pa'B)Eq
%'bIN%o#B<?oNed#c(nn*ES^<jo+f76/m)gL@rkK$LsKaNlOGW<GKXZO'%F-@6Fn#Q(L>oS8XJZR$8RfHdr@/WVqn(@(WApa7fZPu
%Fb.@2bEflGcBP2^/"Bdp]jr<\A'nR=K9M%,:?oc;f[\:AC/20?23!5-<=L<__k>Y+Tbt:68!(V*q$#q'qDk86?S.rXiCk_h%BF`t
%[S]pM'o.^D9$9cEnR%Shc^`uG;?ftJ.E.3b)\5DX7U8YJ,8:CD8MZ<$-k<+$DLL.4`*5*BTFIGOf&jQ>PpICbJ<a^/1Rg?R"uLD:
%>"M\TbK;,kj?9%g1R0r.5=jSoTMp\#.u3n?7NS_:@p$:ZEO?WOD<29%[.2ohFng3Lc5_kr/X@\Lic(\5JB`:2*0-(->1Ru:_1@14
%jd%g;_'psQY_L'JMTr?#i>`J.,AfuhiM6YP':gp!=9V@F2O*1RdPj3sG\WOhg^1m_4+`oE_\\@"`l7M/(u8[K/-@$7(=$cZP!:0!
%-e?8Z5N<)`c7BU^4&n7]CSNtd$7E>QJm;dm#H)9oD']O%7=%(k#qt)TbH41ka?Lj\ad+@1EGHO2%\5!fP_Dd\*CSj/P[_"I9,%m8
%#4ea8So?)U-;\Vo_VqUDb7<]UaPH5;*1\>p47lCLcP5?Z(.-0[?jIPt^fI`k5r`B=n3K#2i:&p$bh_O">Hfqu@g=@rF%U*+i2pZD
%I#ru5@M5X0i!)^OOJ%"h%?<W0-kY[ei8E<E_O$)s*)p,K./dNXkLOUd:=S3p^iJ)X@S70U^#9Nq*n9*f&'"fpUB[>oAnl:%p79XD
%-ki!!^DZ8p2j@gSf?=\aU^PVCNmgNB(Yq[n^:%k1_6o\2NCFH(HQd`Jd"@OT$XWUo*ZWG[[:Si[P:-HW$\KOk9O?B'@ET0V//h(N
%i!1X/ej>\kR3,[XWO)FUnq2"W!9rkn#UcU;,?ab/&5G$%EIK2>k8nE?5OAU40T;Eq\)@Q>?SJI_4$P]]Tt$^[-O<5#DZ-mb#RBk!
%jQ4Alc3=cNd=ZLY2HDDJkeR;eNpLaT5%40\5W8)!+.S0ul@^*@33tU]+M+*c*.]3Sj-CeBYu&`BPogttj>ItTi2$6-_XNg3*/bQ2
%\HY2Veg[G:hp?uhb!D<GTEchIa=Mh9#:F+bXA"&=#KMu-K"Ac.m^OtZ1h,VQ#DbmmYUr(!Q5^j%c4B?a":s"Xo7Nf,CZ@AOi/W/,
%A\[eg,B1S)OtAmXi^AIC3^5SQ,TC#hjTjDefHm-ZK6pMZehm0<4fK1V)*KrNKXa$GDoO9If]f%6a#^\koQW_6%`3fclFp"(DIjFo
%4h.qFGK(/rc%Ou6++1b)k6KV:&q$;H_=dKbiu1/Wq?`]%>X*@GGe3UiBT<jKM]nV<K<pK@g^JLJ"p>s7E/bp/]U]c$%6_5ESLLSf
%K6nnuF=TL60NQaeD<\k;X!nV:l+qqiB`tHbKB&KE%7N5Ji1@o0eZ\W'5^#`R0^-?p,HHLV1Hd^pXq?[54ZEIm`?I5tDd:Z-OY_H*
%Ga:bs#!Y(NB\j2IE23MhN^'WCi+.qM7KuG5E0:]po45`L:5=nc8Y$r.>A@=:_:M==r8;\FR-WN&_+?V_4/!QW39fTAF+.2>E/];[
%(`GUuEu.1oBDg]CAX&nNc4B?QZTr4T5<+I9N,="*#KL;j9'F)%NZhu:_Nl8`c+9`c-OAml5Tr3T30l%',r7hH(:jZ`b+0Y[GrL-j
%"Q9oO!63e'8#nDsC1RF(i&HAqD0LSN8!]4TSIpO=$E;%N&qjb_<^GUSKS-F+H([5b39`k)D(@o^")o1FdQnFN\Yn[a%pg&.<&a1%
%nCs)#e]GW.S(:gK2`R#m5_M34DO7Gug!1"4]WsYA@dr0;=*s'5VgsI`BYgsk7<F.r4SKia%4?B)@L<(^.)C`X\^&KXL913I>=*;I
%;j_IWq7n#=.:D@5I,O@;o'RG=37Enu+]IP+B*EnXe^&X$BFa[.3Zg=3(j(6Wir_f0DYLNs"0^LL/dsd[fGWI(TsK=!L,!GjPn#o2
%a!.^'i2HtD3udr8^]!Vemc7LLmJIh>38&8mhqk?I8^TskF_rSm*,N0n0l'ZpDS2*NCPshr;7BkhdFp:#iu,GEE2W]dpAg",>"EB6
%NPE/kAc-Oo"<55M(3dLb5?Qpo7o4a]$Vu\fAh%b%*o%@PW5(um#fiiaJ\uM\I*P^LXEIg)^q%uEX%58b\77C=BP1#s%0,OOg;X7*
%BZ%9/2C<AYh#q=>btR%PWDd)Z^sQNn*A\9epJ(lBAZ#T"K6MqRh";\B2FQJJ?WLET.WEh5,$D9OJb)<]LMs-,=k!OQTMpEj"EmB\
%:+C3`o8(r)?"FRlJMYuI^ffUuQ@[<a:5m;[/J0t1+A!d5M83gr1C[e?![k#q98P\A3(&YS8t?6XJ8ereek?4l9s%!6eqq164\I#.
%6Nk]q)16Dd!N4I5"0V6GK?fVPs'$O`DQqCFOj4&(\i+<\c3$hm6e8V\Geb2TW'n!$PMdLT.+'(ui+QQmqN_@k9ua$34Q'lb/).0g
%i/UfJ0PE@,i-[#@!oj;/8?PAH1ClIg@l2hI4Q+^Eb5#j9i%PU_s31u`3$o.0/akOSN`<DO1cI8L!(3,"1ha]#WZJij1uPSYaD8-D
%!U%U^5fhjaGKBf]ES>]Rd6b"Z%1Tfl/MRu`:WcmX>M)4DN[lp$K+/8LT1KC=:'48/L,F4H#2G>TeX`sqj#]--V6b]9J!5Ri)]!DT
%-#j`ec2u9:-V@ZW!GBSbDSsTum`*7=SHYPPJ5hHC!`#p`(uaMt!mW896G^YCNZKFu`aAgkgafFqOarX`P)hF0E:i)*D,lPs**pP5
%l7E0!$h7D\.g7n=hiY4Z;h-s+I)oM!E4/XZG7&;tE*K89!R;IFWc'?%kpq&6ZAB\:9;3!Ffi!@Led9@k9b).9f4$+j".[#j9KJV&
%^p+F^!?)s9WfLCf8\fT]G'Vr-JCANgI32u9[JD`t6T7$@8^keoK+/&F\KAMQL#`5hqa]qc_#Y%>Yb\n!".V\H7Gh7`REVNijj#F8
%)O`8l&%Lp..t\(3M/B@f<ZZ3:>E%6[^_uA!*`/C4*2nCnRr=+un^\+L%jGt?R83/Z&NIIrBPA#mKgfY>TG)n:Auq?On:78=>%GX6
%nUOP&ZDtD*J878oM.\s/BN@$oc3(5ri5u,H[/n[s/IOOKSJ;<\"e5m/9J,,*J29d8[tt9Ya;?jKkUbXcTZ`XX\[$`1PcBBbSHYOg
%.c!78AcX8%;qWh'gV-h^mKO+[_b%e#2`0I"6^9<0H,*S_8[,<QJSVY?mB2i`gf:*ZkY0o.qBHSZB**jbTtH='-?)G.aMQDo^k&?H
%IXdmp*%f=u[p]>.1\8IE'0%%AgW.W6i'dB3*8HstR;#3uXttY#TsQa:9]2")h4Lf*JRaMXYre>g)0$f;b_?ED,,4-YSI$:r`3&tB
%'0,U5H:VgJ?*\6=?AZI[^>uQ``aAl"r%R&J)^]Odo+@)P<8`c?WBJ_:A@3+o]9Wm@3,ROi_b(+#(_mR,V#k:](O)Y1:k:.4AMq5-
%-(+KuKtX/]B5V!0aO[ZaU-Uo4$J[]f8_m9qZS-o!2b@(]BQ)]9.WFhb#i8I1UXL^)TMpEZk,u+V1Fd@:D8h4;;Lu1KpqfW,cG?Dc
%Yb;+g#d<>jG(U,AM;B^@',<K/7:k.)]0QVG)QpI2>ZT_,ADH2a.WAF=Z2D13JKs8Y2nS9Qi2e0P]?aI7W'XE4"60GqGo:h+l=Agt
%Ml`H;1Dr/YQaU/^!f*FaEVkIu*.k=\e%*9%"^"Ua!p?E6138!Kr&<aBirV_P)Un6!"g0#sYYp#s$(Y9E$n?5'R%lQ<JR][A&!'Hh
%cHL[to/8(;S3p@d_ZZ"$p.T6!c32FJQFmi],FG1R@7(0XO&F0!'7hBQX#R^GJV,=Oa'_7<:(@]\1NY*c!l/=7Sj<Mi!EPSd;h<E$
%m%!$p/oJ,r>W,jFl>F2AEe-$d_kaH\"ca@!'Q1Is\Q8A$G-if]S/q1)c3B:5f(X%6^_n00@bBALq=u^.3Zn,;hu?ud`s;3e1M)``
%kCsN&1%1.1.E2Uq*Qig&N"6p)0U-HCpA(Nf)&CXF*B5h_Flu2g"(tLlM)[D@i0_`bVpgb=SEV0H$=\f$@)HMMO:<9k=/0BsS->Qh
%Q[e#t^\ak"^/P'&o7=57$)%9`&"KLB4R^)k%acZ!l/2XkJIQB.2gjQIDn;6e&"I'/QG@W,E7Yb![X@"H#+@70^bLfSh%)Pc9R@Do
%Ds>&WV5Dmh3cMM]q0>=4c:>+GT[SJP)73WR*OtYoJ0&\t#>PdA<VD%TS72>arCR;)f3Di;DX"sqa-0o?Z[ic/?nuM1!s]`@Bn1*R
%^sPg[O22#1^KSb"3ZGTh`mP8'cYVNQY)XH")]LcA4jQ6FR11-SkK'RUft\Ue[jO&(Z%:puPUUdn"qKRo7TL'<)`V"llEMK77iWRt
%=G$u$&Vh>Q/oW/6/G4r/*5RT"e&hfR]N!GoF=-Kh4/$MJ^ju[O&6Bol1b>?'1uQ.L,8gYt(3$3*"C_TB333%Z?TGokmId`\!,o;i
%`aAcO-DIsIL&p)7Xs*\-!?<[P-H6&R\9g37U1X[LOP)?AW=sg"b!ESqQ2nQo7/b:.NQNh65b7nD5nd?&)tn20fAse+p2AINPH)!R
%ItR1uoW29bDqI^:2cK#19LQ-]cG9=]'Q$M@%A/&OBtq4!2,e^Xoc%%7/99L,I[?^<`.R\$>noFofLl"bAl@'!dVlK@7<p9ZAd\Z`
%>LIF\0C-L\kr1`L2GnpUpB*>8QLVSR9+JgWeD`Km9Qn-g\;g$;ll-<K4dAe9?#A'\62$<9Yu]2L^<(&Vg<0&I[q9#[0RXV1;ej[I
%l'opk'euS(2?3gt9]'NW+gP\UDBr4u/($;G^>R]_cZaGff+"0ee1?pt=-ddc2_2N+9_+1.3S'JT)j(J<HussYCqT(AL2Zk#S(S:(
%hj["nR(f-J)mL\2dY?Qs]4-A)Arq@Lne1i`gtpC=R;$b![5S/bAA@T_hMU'N\TaqE7Pd8<:j\skm!FB=RlPL?f\(4jUR=E!610_u
%k,mEGTet7,YtA^tmYruY-2Eh\)[[>RkD%Y/?P^^eD8b:i?D-5Mo6N@M<b"M`c1#hZdN_3q_!qOUG7]*'pSVW[14']48*8'(p*T37
%MI2dbM=RDqFj'-2@)[_gX9Z-lnT"&%D5k4RIdnWe[5Sj^nMS3Vm>[C":@sk+)^chHFte9LTolX-B(e\M[I'X\7LOhqKA2lU9-Yt1
%bjA+=)2S?agDe]I,P?]D)\r]Hl<A.E)G)fAQ.m8)quS-_E-n?K.rR?$h?lRGZuUL,^\>t`DJsP7An+r8:b!fSEFb'bS(:Ck6M6W"
%S#0=Z/%IUR@e""UpSJ8:8q[Ya2h5kL?gHe0bRk69YN4Q#2@E-m2WW_*3q0DU`8-=96_lfS2r+IE>\qNqSU0dB-21GZ1p#KhH:g5n
%p1?o0_M*WrRgCC`?XVC?LaI*0^R<cEJJ8n"G@kc8/i.,FZSr,hf_u@2[l7`7g:a'3S%bgVLs4Z2pfITbKA5,m0*s/:2uFqq``m1r
%K"t@M7dZ0>Q=1;=D[&CkFN3[l]H"(4S_4tU4nEVNbhf`'8[<'ShS9rK1>&#.*B2epnVl.jAc>qd3jUb$cY3#hW4h.P.eS%ap4e2k
%oP@?N.ijCFf!!T[J8o[TO&#(ZTOqB,]a9)7C=l@0ZQoarfV%pb8uSiL7dZ0o,Q>HSp'/sk)"F9m7MjD^g+[lKPse!1fUJcj[\JX)
%2(bV`fFiN5F](T&'71CapU2<j9'f9:SgjK+fGcER%!H)u5k_eBd>$;C\/q[U3jCVI&p28=p1@^X'<I[[]ig-MJm4YV24bBFb3Vhm
%5ET])B(dSO9&_Xcfc-XA%%>=)mEL_4'='RPhM`BuKkPFP;]3IOflDF<-$$1!j7]?*o\$A%hIn&<\Y8_/_D-7Kl.k-_qck0H\Mpk6
%SI9)khF.#NF#7oUc;tG(+SS?`;L!*#]fBNW86XOo)pugRm=!TuIi#oj_3Jt9JQehQiV$ki@\PSpgtjU2,<8-Sp*TV'@eT-1mB)5#
%Trm,,FC:#2WP.8VlF'\3C2XqoA.7_PhAW-^Br1O#G?h]CbtRM!>CtQ$S_BPnrCgMagtm7io[A$LJ"]cM+s#tV+fbgI*b7S=mpDFn
%<B>M]D)c(iXWWW466L<#N$,@+'lf$W_nAEW/_;ao8])`0/Ir%u@UL4#2B(.Di.\QE(a[@X@>&+Q,na@4=c`sG!MN.Sh#i6H,H2@$
%bXV`n+fh(7nlQJu"%aZ"L-r:qL=!6eT&YjEf6+,)'F*ekmSW::l,.&`2teHI&%rLW>@dh-,?Fm_K8MQ$gXLfj`RB:,m_V4Q>AVmk
%h,pe<LP\TI#pRfhH0QEFO%<Gj[]`NX/W-'=^7iMh6,IqamKqoC:]'YFh?fi\J[9s!JEgU?-]H#S,<62GdT7FcL+qE!WYNpp30?n.
%XAa=HMQKjKc*jid5s#]Ba;52U(ZSN3MZg=^qQad+EUZlC#Gp)Ri`T(Fd7'fE^)7jY@m<gPVO:YL(>UJAai+]WNCY-!/Fj&?h4W[0
%jGj!9eBPQiVG^B-_C'%mnP`8L/kAW(9D4!8'fB<&g<m!g@K9dHYXQJK/VUerTI"b?3kuqt7RL%(%0kHNc$8VhJd9Fg:f!4TBR2*Y
%.frbR.TD.8W*"DQV6o8cdq5.S*!p2=g`MMr!!Gjo[+<l('eM-&[GMX:b,Ahs*m6#NEh.'J'bPuDIS[2XD;Qt1kC=^W[s"hg"UMC+
%(-gc3+T@?-#ghiBf[>=>2;l_KqGL]nO]1G7Lne7CP_P;a5Lp!7$YRU9_Xp*g!i`f+Q=P%Rm*_hZ5Cb.p;,1SgG"NuGiQ'2c+)Fu%
%GJZn`MABtc6du3018,sU[Ya:N['3du[>@ru(-JiQ.R4BSD`!Q05G3O8KVJU3Y#0$:RK=<a!?"JaNsj$2.-t*k/LkK(D"M3hl5Ob`
%`$_d4Na=ec'n_\6',)3?UL8"O<AHR+&r4W/Nds@&J0tI_`"KdMa"]W<a`hFL6@KJ_"mU/.FR__lU;.6YN%7:\PWMDtD5N@-\4nck
%-n4%8>!h70=UCYk;K(Mi&hP4^2fKR)&hU=KDW]a4$K6kC?\-cp<e72$80oBa7jF?&W_s&K035'$+urN9#JiHNO?SmqMJa!B)*Kq[
%@(UMX"u?`44_!CZ<E[64b8;CFqY7Im%Tac8Nn5!:2t6s;OcJ6hq@O:!kT4-9M!H0rk2u(sJREHf;UUMUK03g%Q:Y]8Jtrs;+W)eq
%jOhRB89b,6"Sl37k:3\R"T<"oJ5>qC,h\rHBnU:G+#^4Qeh`CBHmr!](JW`(R`[[88@-LQoHpg%%Zc@oF!!3q'YP%4l-62ZW\>m<
%nkH-mVu9L;M1L[,^DdG&VDjT`nkO.F4$47g+/AH4CrMKE-A4Xc&/'bT)H[1!q2D#D!t(kpPVd&#C1B%mMBK/3dMi;31l"+_-;<2:
%OFmX7)p_+l?OGSbN#^nr,,l!e$?g-VT\>qdKaXA]N/aD:-r5h\jlMR;#(_kl]O`A%iZ)P=EHBG,pus9qSF,DECb;#Aa3@0VC>q*A
%O,.X8QXQqfMe0?U`2Yq<R(M.($S;YlOhH\&"LNin$uQta>W=WgUt8F<;;6\8Yj)lW9'@/]Z.=n";E\0^q8-.`9Nid)Ru0mT>PJsc
%Do;/,:nGsD%Z>_mSjV_nCAY30V#Wk;ob99d7&"SYXkDGuJ>d>e,_T#B5p"%cb?N`e+kXVJ8eILWaG^2aPBM<RAdc%c-N)m;jO[\1
%&=nrg_]Gh2"p;[Im)oY\%`6Ei^aAYZLh(\T$dEte8KZ[-9FeqoV"\7^+WumR$YeO*)r74tX:)uM!(@BqE?tae/]?1J$H9=7V0*>C
%i'b:#rk^(L?A_=0Ukd`.h9aBJBjm#V6l(lQf!)eso/%)m_oh!,JDcS/-1_/];ogUZF2>.&8Cn!l6N&;>PL,KO2<$cglX\E`.;f4o
%]?TlsL__R:]>0L#)F9Efe\!&P4<DLF`XO-*EoJk_%kT!OI>:SUeqI"1<Mbhf22BCi38=.*ot#?(p=e'AjKM?.(pS4"_:20XF/Sp6
%L9WZhJVhCtUjFU.:%[F-7[cBH3R3m'`@G/[=lrJ'15/QgDO-[C>Z"_1f**W=q10<OY_Q7`@o62,6A%OtY,J4'mb)18@W%&277M2)
%G:)\cQ!L'JW[<Q&0Tfp/4=SkF6]lH]"LpWhisA!,OSV(%WR@8-QB+1q4USLJP.7?'m]tY*-/C\XVW\qi0t,?hl^#98(imFBY3l.[
%O]gVp3rib"CPQO_?KX.:$lb1g%tGana6'7I6Z8@(](7>]!V6n+@uW-K1s6I_94nmu7rgss+ED]>C'gB7l]XBV3kX.SPq8bb42hu=
%/I]Y)"V(VNq/s:W1ilhjUDZt'2&h+9,bTjZC1uQI!%-i2K@8-A>f!q*3&I!T+"3\4kM0>KmKN0gHh_^$Qr8NaP]>l>[0$+AFsOVV
%%D3(?=h+%7pTM.9UiiEVi\W"WU5Q:""D_PK.\RilR0^l^Wbu(8S!$*k]!@*XP"dWpR]P/]>o:Y[7KGk<['1AS0o]I\o4/aU<.NVT
%L3<g3=\t)P[9DfdHNJsu]=-^b>;QN1N3?+]$\gG4"n-j%Vsi'C+^Q70[u[4e$B->;m3n-H^ZYkeb/AS2P"D_;X)g_];j?2tgR(G5
%IuJ0o8lRj:.!CQJN%`imKdE_6PO8ObF>/*>Es4GdGSS`j'#28%@ZPUjGKdY8<m2##9s?6PZ#St[X[Aa#?51R[+Yqh.UGpg0**+#d
%T#^5ciFF,12:C.#[VXq\L8CB(kS8$Q>[Ycg:W:>R$pk$/"jlZchp?!1;M_"LG'26uIMfCbLs]j%!>,VV>?QoO,Fe%oc3LCr0gIR=
%og='nR='B`Z!=R0s(CfVRO]hMCuKT^p^d75bil;aO`AXe_\4N2qoh(N^^&\:BH%o.KPD="6'iLT$C^e`?``?1OdZ(jV$a3qhBIqs
%OBd'hRtlc+eoFAl*P'CGjOX=*oQ_)giF<Jn@HSoA5hci=7.aEoSPPjc2Wj94,]XP&Qk9GgBo"9bUTU&XMs=t0R639ZTI`,emWbsg
%+<_3+-1+?E^:RPR"u0bSB,qg9&S^_'<QN`)o-[.r47!#M_=N1`'&XP5Nj,i$=EFO'eIfuV"MPZXQt0-\4jg.KQ]=Eg9MIim_gW^l
%/e%-UK+$-<:\DHD+1Zp<&mBN[BpWlPP2L1,+1`%t'3J\MF5VL`!C.&D$Vhg(/qr3eKeZk;2\V]dPtmTU8rslT;NhUBPmhBn3lF#\
%T5$]%3\R;&")J2V_0K(r_OK7?.ZIoP@#6.j*@m*g3]^(4Q4d^aTRg()?sBK?Tm$^7m.*9H"mI\lOhVe7$Va97q>,2bmIg0R&Gg-B
%6=@5kcpr@nYG:Q[$Xf'@Y5HFh:T$.!h,,20YS*b`i>BM9TtLr2$MH>,)_bKH'^oVJ'!F(W&\<&Aa0`gNkK+6dbn_??,Aq:O)84Yu
%R=SlS"!D(:4'4jV/JnWF_0O>u![!Y5V+T5SC5&4k^G)ro66Fag?GKVX_d0'(5>C@aZh5J7NsOe(BpY%mqFsU-6.VXGZ(0bPLObsZ
%86B@qiqA,->g[u\:1SMoN_>3rOKl91a_XU^-083GZqUrY_kR\q!YG4JTEZHWJN1E0%87\Zl=(9EkTj:8Ui:3o1=1(5S`]H``i$t%
%b_gb/6Uc]Z"qrj$`'"\S8;OAof)4=+eGV^-Q=6jPa0PalA?6#P5AXuf$5Y^*iD'"2;nG&525?XcKJ2L@L>48n1=*Rmfa:>dc'h1j
%9X9<_"QsY*7r2,=N[]8CpV=O;ZK`:&b*Su$,U#)>00R8HW&F`L$3s;,CJ9`'/5/k?6W4c%Ttj@V<mOh9('Ub1DCfmi:&pV&4NX00
%&*4K:X<'I%YL)&iU_QWkdTm&m`J]MRUFfW]ONL+ei[NeDjQ.X!1jPKf@aRfHg:"kd"J\O%FJf\165URApT0tZ%.coH(;RW2pdR_"
%]b>7I1iV>%90G1L+%ieI^q#-4>ted2hZ8#"F;.)?j&_pRl;hm1`M=W!DRSd3P)Xa#_1lldndUDS,7>,+"&/1aT,b^IF:c=`09SRF
%UW67I.J>U\Rq?Ng57//6$<H5Yn59OgCdC8Ga'keX`g.]J)?;8oBPZ$o\mJEW>.Xp<9>lX.0u'!fP=DkSUt_$#9BUKJqG0Y\)r\>9
%[QB45]Vbq8j*=d$iW:Bk>5gPc5+-c["Z@[r&Ceh4\];GpN9TkS(F@KN:a?G?KH=@ag=^EX5U@Br;H[6*=]Hlj_/Y&p^B&dc>&<[D
%B%7[4GX^m_g.s#T(pK'p9#NaO7e<?*PBbM`l!S*9"._EgL"R,;M*N3oJ2@ID/0YrkEjA0^MQ@&%,ZJbp@ZnD?blVPbS(20Q/e4+>
%@?l]&U_4/TjfCoX@gR+[+?.!K'hbRTpB@94[Xu7fEX<9:$-\tbTf.RHa36Hs>4U-*\J2/R<-(:t;<sk49:uMTf;=]"U<ln,*AV>t
%:5C%"RDONH6pe$J]^.4q$Fe0T$!1dq;Ts&@5ml"&a<!'I#`^ZN#i[V[#Vf0QJL-!*b=8@V+VV-U-F(hK?mUMcR;j;$PtZj(>"S+L
%0H:7[Z:?0j$"Mo!B$r8],rh!F9.%UsJbJ6RStPr13Jm^-%r$V:$%%P'p&Lo+:.)s=ZZolP$i)0&l_q?N_Sk+MY/)g'f3<O7Xr`HI
%"^ubP](<jH1W$`AUbt"ZI7ZHe"QPIW;:gYX%U3]CQKa!??.F+c66Ccml8ioY-Xe;/bgE5M%W6,fi,I2A2T!!kU0FE?_BiiI7MqO(
%#`Cj/C'),iRbe?*!J/mKYWh<HnQlK+,N<rm(ic1$R'hAr?mlloC:#Z8SedIq\tE^LH@/?("^La7VDBFe#>u9>Z'Z]M7>C&s;Y;aW
%]00#r&Y&h6i\XK^@@fH!!a#bm<7DSA:Id?n'S8fEYRI)%W,&12KP$5IY+*RYMqi?'Gqm$'2Vo-)DO)QCFPS$XQi#gVEL^tXP$!$P
%U'<6-]hK+]BEs^N_?eEkIlib-->VA=^K$Un/CC=_+>ON3M'B9R6LI6P!tDZ;)Ve3-ZoG(*B&GK/GjcqJW\ddpF]$4iqfbkg3+r&G
%[?a"(VsZ'q;a:W/0]N@m<uGKb-NZ7-ciO?,!mV`N1Nd(9L#BndAKGY>I>4-Z1oZh_F!2+$.5A6`KA7gsJ.CR-E_'\7b;O(0&6gpL
%M_rD'V";[SE0/^ETGs/LW^5E&E[t$L&H(J#Jc+NC==T/.(hkKiZP02P*:+U`H'oJ[T2mq^!Y<)K-AL"QU]AV*UR9)8^""eaiJ^\_
%hb*=^j9J7!pgAYE,r8hB`Fa9?.A)Xn[+f<-NOPa#l/O%WA4H_EC1+k?F%VZR-4lZQ;mnhf@F\f<"#Bqh<B_AEL!2>n4<#"**aD6W
%*FdG$iE.73+05$;fqao84>LR!@u;XP8gCp9q)tr8UnA-pZ^!&f1SZ3%I5`[.?uZI[%O,G>bBf\jQtb+\1LY6],`4\'Q!'Fp-j*;g
%]G6a(8!'n^6LE23QmZ-]BU(Co^'jRW(Nlq$Y3CXD=Z2r"PeoN._B'tlFiBSqZ/SlBd>3(-,;32[ai[j"j7lMi&<2hh^jmX>++j]8
%bPn8=HE7d(bdg1r2_b%GM.J&6dKVsKnam-[C;7<p>Y%`UFd_gG&.W2t.,sH*CoPl?PXbHOWA0P,"A-E)O;W>FC?^C*YI[0`XF`5J
%*<9Cr)p-HZ@Mad/4A-]Rj9+_M:28'O!C8V(8.6Sp=s6K6ErsJamZ:QLdX3PfBOIADF;\H;27-aQaaHG_a?0h:$,gU1XMl)j3XTnb
%!`2+$0P(_h.b)7b'e!+qjogWqKG0D\Pjf_[6@FY77ut7L!IN[L8atY`(%)>67+b8?M7l._=ip4"4a)Bf:EjC-*P7^BCGFJK6/]D<
%#Y>T.jKuFFL^F,X1X!p'%Z/Dm_4KbuLDnF,62!Q,EdL.(,]Q)u+,;2Qc:Qg9j*Z]l>"RToF[94A/3t"-P:XNN%S>03*@\VQ9oNn6
%jeYjn;_,[lk-i)4"f%R.(JGeTV)f.d7C[UcA\K<mMZipBi#s\#.hHY^2n!k'[#G9/!S/$<*,8>VJfKWm@VFIbHp]lI\-gPT?Y*]T
%:6["Fcf>.\^ejoF`9g,=,R/#L=VZpPE()k:'u5#%AEBbEV:[o4njc'aNUF.nI;%)^<WRu"<:0ag(Ho^m:T#P>W7W-/pVQCY*s"Yg
%qA21[QCQQ7nS(iH,Z'$D+Zoi3OrRJ)Q!b7O$uE.?U/#DHlJn]Hc]Om6PoN^>:]W7;5F9B&K0Y$37!ZYs9(W._r1lEsnj'@1pB+E1
%kds+-VB"f=8;WdY!,mT>gT(u`Ado89ooko5WO,26TML[N8SmY`JRWtf'V\&F.J;7eC.0,oCu2rAj;RWBgPtWL`(Dh+njgD+?"tgG
%K]qNKkVf!-:QRA"('l)_N-qp"hC0^<SjftfV#5<(je9P\.0eFXE#g*kR-K7NWPD==^"R0s23*`0qP?Tm>Ah>P;edT*"s;%K/WWH%
%:&WYh9JD8/LDU@9'dT<tJSF6<-?I<F;oK#n*:k0(&Ej9#1V!Wt^oSHMFMmVC_?5:qEel=XcTL1bnHrFD6'IN4;;P`,!!lp#)#..c
%GjJk-<iGMFP+f`H>r</a5%Bu!-OYO/*Gf5F,*,)Xf+[..VPYOBVe:$>3g$uW+&rAUQcImS5"!\pKZ<kI/@_LoD2f]/?Nju_16k:$
%e,h.Gi:.&T='I7G@Ek(U(!\GPY`k:#V\&*72-hFj!@I4,G&Z@?eOn[6$tdAYE!"Lc7Z&H2]?K!Eg%9Q4N5;J;acLdhJ<Pu:grr&Q
%d-KlcE=Ht@i&3kdLTWs)LBqe`@Gi)1%>]U:7h^:4oF3Nj1(P?MKLKm&&8!3qDkuHEP+&kq*9)N[)2!DPL(1e8VU:&8jpD!]39_]`
%fIOdO&BC3K$<`@LOZ![!@h;TbklA56,S*e2Q34>t3,KL..(+q`8\3,RMaF]h:m;N^G[FUn)A$6Z?5Xg8_nZD<><t&"7Lc7S\4TrL
%a(1_D,l2b]dhfHV5cU(l]+&#u\;lDQJ2Vr03&"L@P6;n5;oJeoLqTUF1/rc6ORuBoIhk"_9Q_3ohai%+8<=\PP(5+Q<fnL_;..4,
%<;:XtWfTn/^fek]"e[og^@)%&aY[EVhD%PHeIZM_#")U\25$*.@h_;s7M:K5`Z&*8X,mHs/2._&0F?GDctWZbJOW=+=oW`I>\KsA
%-"$pt=VrC9qPU0$@e^M]%!mlb$Y%GffJ=Y/@sq-FWAcl_4bfCjEOIigUXU(kd'c\PE?Pp%Pik[(IA!ocTQ)"fo,\i>0t$-@#sXJ^
%nOgjnB?+b1(lKg"$Xuee%u<1`c\qZ?Rj"fRG_!T=,506U/AUm#klOY_;+g5`;*da4GpER.#UEFX>"SS$l4UVM)=lYJ:/GF5'8&(K
%1\%43VR.1&"c0<SIg/KZk)r(Q3QI`b@pNJu:pil0$&G^8D,O&VA381$1;`,S?.(NA_qpQ*8*g97!&1L%a"pn\*<CMmX:T"KcH*eh
%X'Rl"L'Fe'c@4"H?>o)GGO!)?4$C,84Ye+C8VgrNGru88*/=b7Kd&"(m1tu4beaOL'GG^g0A=4f96g'"W1EI"ZJBJ_$)V&PQPa`K
%UG2(Sf)[93V]Q_Y+K?`=$=XL:V']jZhMtG@@^D3!*G1)^L8\T)"Z%o8UgdS:4[?\d[s)j=`M!"b_Rl$8-Bn'W8tNt?2))dlo9#t!
%A/-EGMih)F."nBP?D&+/;k=dp`V%M!qM4j+/4(gd'T`U82rL^LpWC3UP)*4k*Y_&5IMgSWZDNT!]f=Kp=I;5g0+O7H]TjT`.:d^t
%jg'o"-L<m$*'#9^=[JE51:f$+`aBCV)2606dGbkL<-k+C^P&60$7&Ma&Sn="!rrI]iSXd1U2\W20I@AFc=DqHB%\;)3eFebROr;C
%dAMXiB`oej+=%8OdL)U%_u#N,@Rk<)W=[qeVfj;@S1U8#,-d$Q8QJ_[HAZW.OsIT"jqg%`3sG!t@l,I4V6kq'6uN68BbE`R@_Vt;
%("YODr0:#I@<3r,@'#BnXJR0D<KO49!2:fVqiD5jU(Nt@*$UGn.-r;q^9Y^jX0$nI^eII`bG<5AA0!#%"urXhEh.#"@D9XYghN4q
%5ePds-ukA@ngm)FU2N-7gUUD.SZ%-5?=6S5i#eAk+XdS*,g9sQRJ15`X?98i$g@dVSL,38BEHUbnNu7*VU0V!MZ&+s8\dT"Np)EU
%Osigc;cCh9#rW0W>K[XiNiOqG6:*@Mir48pGpUQVPGuj[*>'>q]klAk=^M<G9Mj9&\oHgL[82T89IO&L\IqeCd=]OmJ5ZUA#l('i
%@O\[QD/BSZK^hF#0&acOa[V7&Q#$m^nYR1GV8+bbkRMlaR)hV^kH)I-O@L@#5D$#R';Y"hJj:sXU/<%P4mD!T,C/3XAl$&D!#ZO&
%,$IDrYfaA.Y]qEVQPJqR*Y8GZFY7r!Lkr0M;6pQ8$if0",('XSr7VKP&]LWPXI;c`Ij+:`:bbQ"g6mq=M=r\-[1KDrN*f3`$U@BO
%)dBGk_QCo+'`^KtiBW!6-#gm+*@\fX/TL;gr$DJZd^9*AWn@.RUEV4HKUTC_37,%L$%2h-Xl@VMU)X>^Of79**cAo`OT@e-4C!MT
%IDFc!'jZE#P#2!#\G:LWcuY&1Mn0Zri,sZ_5RiDs-NqbH$R09PXmufDU^3i+*A0",4:j<hT*%df\L9.`K$)LIecOZ_Vr^Yp\Ho\\
%>="?`0F#-&Bd$']ba0NuXlm?T=r9`6&\]C+%qpQVn-Wkj3)G`MYTdej<koFnAM"!<S\"s>QUe/er?e(,9^V!#F9KBFIunm((7.3'
%Ng(mX2YcEs'EWA.!d`dd^_0j)AM^aKR#U(g8d6[j6"#Z$if\1;1@isN@)3[Ym5AkYNarYmk:IE-JAikt$*a%u%"etuC82X>U#Vh?
%\3cpADW*8p3()o^A-Ih3G.kmLJf;oj,f.:Nim?[SB*DA/*^?=geKc"6jRZcqY=6u)*-A8)&$<W`Wq(:i1)H$+A4<aPQq^KDF5rO`
%0.?+W.]$2(d0O-qkl<J\-m\k$YpLJ(NQkQ+>F3Zgf+FhPKM$m/OJ'D]NC&U:$p4j@.9^+p:*8HZ,ELB7cqjbMh$/UjOqcGN`WQ";
%+?0XQCX>DW7^8@h'la!^'9/JNPl9'/9;H%;_B<R*TJ"CP"kF!2To^&1c[aa_q+Hro<HB*2WaoM(TIIP(Boil8qmfs&*+1*1EID#d
%mLZrPOo6:9TE&B;isFaNNA23QH\r]1J1[?'d#!=jNd0D?Pdd3X)t^4fA1*[Z,t<5q!$\hB*<<"F>,,EPrul!YKD)8Z9N,P=_2bA<
%K`JJca`>>rAptQI+k]AqZjYG(Zd,BF5nhP#fEQg@(:X>[E*sWQUJU$QO8!4Ni0u"actGHn;(bclPK?ql6mGeT&kf<`3dQW?@S3j_
%!Kn3EXb*'5(e?"t,/=5fWP@!)^'_cfd1&am(smuP1AjZ,@S&Nd5u2-4`=N+VHQ=S>C`u1moI/]4p%Y>5R0@33'q>EC2[tE";^>F!
%c[A2Ll_IdQ&t#f?0Vk?Ye:;iVTN/+.Q0\JpWYQj[KWBr6_C1PG\"^gBOn#?+_[GGqQ0(#g69n$k>M]irb&\IP!ls@+%4Il2aJ3F:
%kLp73C6.2mAtn"3!*ur=Z.&;QFE3^1BSm,BL?c^;@)S-<Sm@P@.3WOWZIgXk%E/OT#&"+N"JoC[SQN'QcB).I`=$ok!U9=[LPYQ+
%_Mtt_-'s6)2E`C]-D@F+'7L5OB&tR1cR:MBI2(E_?r'u#"l/4"H1/=,]Rf;ZKHC<mmR<P`dL?=9_bgb9"JW@*S&>t^X-#@n\)pYf
%)(;S=c4%PldCtZ-7P`@4+Kl%I<,;!q<lKdtW%ca7b7;J8^j$:;VEj^FGg@-1[&$8Cl'VVKlt@1E.p0j5k[&2k_tWC:($8p==p2rm
%VSZKrU?qp(P<r@kaULB'_E2EK&a.gT%-dtRKCTOqCiG9*0T^(f(QK85#tBnE@9OgbDPa[)&fhRd&bbAXNURV/m:-mc)jZ^e'I6n@
%6O]*E84*k#MJNtm1;U#e;TDrs]Z`p:*1nF^c7j7KCZ6jL1E_]X]NM`QK$Z_;RO*JXjE[_f365eLE@6j*b`J*FiE1lFM,VQn+Rm$e
%8GH1L06r,gQ3K<?Z80-N1km1k*:6m\.Uk\J(APhDoFR`1,tHk7MoeqLUg^(Mj./RZUiQl?)eO'>HuNaB6*!:D$k3ji%'c3=p!<P@
%ljtMh)9(Eb8^OjP.7Q]A88)3_b_!p/Y#\4R,-!?PM'nF7OG1e_(9c4qfd+KaeU5ccNlHr!OT7QOb?Z9R+;@rsKM&2o!Dl@`'@OM&
%<m\ON;^=LGXiZTRfLC@NLG"bZN,=h!KiWKGFKi2Q.1kRG24@*+7ifHk"@DN50oq-Y6ilV*'O%Hg"D\Se2cqX'M4gHr1MB?nl(?.r
%,FL3e(%=Ut7RO(R7S@-ZK6'e<O",QSE*D4]1_=t6Ldf]_;$eJ_Q:X9"'Ra"IA+'+?O+`bNIBaAf&YaXaH'K*KI!@"f0>4d4nd_$A
%1jj6F"c3@k[To+t"br;CIXoH`5&M>W>4o(-H>B-CfeK;K@84NUA!W`!co4f5aC)fb9MR`1"ZKe7*5uD=[E-h+Z\kKsC+NDMo,uj^
%gjg&3`1>C"0_:8Ga3q`$fg\Y.pWiLG\J=Nkkj8:8Os"2InmSb7H\i^"'N<3q-[m+k)@oJuM^4$V>;@1nTRgfU20Qp@UY?li<_Vb2
%"O:-3gNPc?W,ma'ifk>=KOE:i=@&f.>Wn76)**s#>l]8a+;HrmJ0C%1=Z?j/ep_l6)+-_!g/GO>Q5flP."_R[W0;hq)^;q*aQ1:C
%Z#1n>3`\Qdaf9"!/rE3i%S+LRis@rZ0Df:]19g<t$G*];=t/k,!9"-=jE*o:;Unu+YG.iQ1[ZS=S;j=hZGo/,-<>BLhjn/@ED"*Q
%Am&._-TtmUJeQ^7CRZkZXh`XF?U`*F'WRNh`DW[u'[>9so;<hR\ee@=P]K0F=WFK81bmCcPW]=?-p]*9/X"Nm"U3uV80JG[^JWXt
%U^)LC5G6QK%L\+b:9&c=$D*Z&;X`(UXg<&DPF][E.>?t-=C<OK5eNYE2i`DtaH3?f%@m#j^oY/.+R,cIjX;Ko60SAX/e?@NF-_HW
%'C:$S0KUYlCd\^TBQD(b7TPrH7KBeB-E1l*4Z=ZEI"gQPiKG[!jI%`XTDLWD"&'(Y`1XP+!'C\&+R0oFq]]Pq@</'/iV]U,FY_$L
%pV%DM36=jh?"+.="s4%;=((=_Xme?XOte=Co&F*s@qd-Ke2JL"pO]c:_*sWZeh4f8'!W7;3scb46%"(6m1,_)rO=c-K`q#KO?YJ8
%8;l6Fmb(Ou@=:U6S!Ef,J1#)nZ"6e/'1]$Q=bWZ8Y#l9r&\TS_'UCL`bG1at3\tU1\>DVkSn3b+=^VB#C>a/@dRbf7$sj3TU0&D^
%G\#BZU!UbVZ\W.]gcpY)Efn4tM6mAi;b!WJ"09G!obk&mdAAfJWZ%'H$q%nSAKDoW\,^i*Ta)g""&s.A2cqH'@:[M*Fp\'^N(^ug
%V5r<`,T);;U?>C*$`UUk)cLX^b"X8n"/pqj,!=kh^lSm[lPdUHF@8^cP29:An.;K+&nU4FCme"rbUmc:r1iUc*@<4_%FSqLP0tH"
%#j/(95$Ds+%:JO]<^SX4LO9hM#AS<JKNR]:]24TJ/]=<8]`Di($kKZSPkp#DPiP`G1fi8lBQXD%Zn[_J:/E8?b`^3-Eje55>IgpL
%Ig^jW9\ne)@C"f_6KEg48LQ'/V=i\:5`0#o1R?_%;WFJ"]T]2`O5bIoXV0lOUuY8AKH]RsdNBC('0g*/i'@c/+Q_2hr)+_OgE8=i
%"S,X+Z;j@Sphs$5`fLG29-BqKQDB'WeV59J.CA.U,R5au`^kFYO,2>Hb4@pYJ&6pHA;%+-*]]U@4l%<O'bM?bf\kf2Nf.$kUl5;"
%1F4eKp*jFm'`6@A!7N[Z/Q!,l5.N(PVLspui1-L57N%QOBbB-(pr#M@`$Z$Z1AU0!'<GT+W&Fe'c-R3S!hB,>=JoN^4.[h'(o0ck
%OSoe%$#7#i!m)@GMW/n!"qn]!l-aTHiOIK1>(ARtB](T2jTjlR=HZW&39M,J-_ZJiBn^'tGZ33V!d?XihRbU?@$"SQV*b>i'U)`=
%K</V/P+[A+[T.o/)%+g-LY-_fA`@$*`&B2!6,_&?o\#L<+nS(F"Q1543&q<2b#c)0ORR%6]6Yt3M,XZO*KW7d/X5^+D<Sl]l+Rqq
%3C[s!"[gih*,?A0_JrE2aAu]f$I[^dMo#lCJRmp-cSJTDC@85I66V3hhZc\"H2>L^n5;!9J]4eQ>'@:(MV3nIKbk9"KA+=Z.O"Hl
%hY/;7i_dd.+JG]'mR3?lHk+pe:tXhG8$ru),2^Acj[(`K5U-Uo-h=;</k!!ZRVk4n2jtL[F,sFAhr%O7M%_U(FFlhi=:Cj8ab764
%jD=H[+HE9X7Q>:lm3]BR"RKcq8Sc:aVsu\!RD<7iR<2gNO;j"Z0XdZo,mo6_B?P)'m&PF_cPSuP.0.@UiI_TaUHqk7#;K1dXHUI2
%Q,uo2dn$s3eHuVEUaEt*2#TFgA1e.F1e*XT#e`msU<us6T?@h--U7/G'Bp4FhF-4+V,S\rDdt*dUecV_V2g("]Ynj1=eDe6%'ar,
%A1[Y\aFNPGbd?@LJX@Jfk5V<alSor)>9UAMa]<-q,qHJWHP*r'?E+YUOJK9YGU41t,JJ!.PktSU;%^Mb=;n15&1]F\<Is@cOd\B\
%Fr2Y+)!qL`)QHaBOW2A3gBs1Dq>sLFd>2G+JF3j,0\0kN6<m1ceCZGY"kh)C.YH_Kc4cDEK]+Hgiu:P$.\aUfXq=im,@",A,Nf#6
%$Xt\?6X>lP2558J\W3>HE%`_'=sFRD9#=pdl#;HQ<VLUYZsq9o,7PoW+rXM59B$=_i5hi$/E[A(`ZlBeC14ra-:KV/Kpf2Y->&"D
%Ob=[.4robQXCb6Ha^M)B`,UDQFIhd>g(qOp%1[/JWmFS"1XIkgdL4""mX%2l%Pms@VB^%QS.1LbCj2=,,HQpEW<.(jH@]s[+ZY9L
%nk&$^REUF<;\E\=eQ'rLpmA4h_U(i?*54Z+N=n8Q$j53tXRJk=q=8gq+48>h\q-u:&n.2bE^""E0sZL2M$eHf3[FR[K%;/+-B&cJ
%)&5b%QARG"D'd(2+m$?G7u\Kt4Vs8=SeY0-N+O-(UPi&)*uZM<cm80-i%/TuK"<lkcn`Jj/QiOJnW`8+$iieqk^0+2L\8oTbBc?`
%&m$;D=gGO\Kn4oT!*b)`6[gVcE#\`U[KG\5)Q1shOW>3YB_f&*G.jm\\?DS$UelfAALK:[\.K-JAgqDlpp;"S$0DII!JOXY$0<+j
%(R<O>N7oD`.hl/TehS*8I1X>LXCKOi@Xlk;10-uqXT07OE:cK!0suPcGZ)c$1@R8R4X8Cgmj-DcHtBG0M!ura%gKRSUXVR'!<NQi
%W2GW#WcTOB(l;cl*5c;gY`a7i.t`jl)OushY[g=Er0a&)b!)Sk*YjS9a*e$]_Ni]<86De:V;b4b#q]1."V`<'b?#@P(6XF=460&6
%[KamK3\oi3%B3aMGN/?hXPH/+(L>/#&oW/>,cWQ.lfc8saefaF4VHb:YTV%kEOELjh^gINX?o[6kq*adNL+o"9-]h@JXD104jr#?
%pC5tYUpCZ,PO+,5_:&a7NY7<7X[1W>_&5h3Gq<31ob^qkY36\o8hEF?-kP':e*(<-oqdX%-2.[A"B%gjA5bn8YG*hg-iuH(&;`KT
%Pq##+g[mlD^B2)(E)'tmVr^0CBWT;*i)lV575,7on-Xar6OZ^d@^%,KY&pQ*>"MpA@$0<7e:l^4H!C^)4INrdl4tlQ^W]!FQ/2iX
%8c^O%fs-\(/(QP.b;Ee+CFUJ1Hmt'9giHsJ`$^glC*_g3F(nR>]N"#ISjWN#D)U;]6neHgZ5*uQXiugp3'&-l%#B*.M1G#US'u'H
%DC\lb7).)1S[+h!)Cu6E"c4Ik=]B1,i0]]Rih.!5lo';GB\FY_!.YHNHDDj[KuS)kZr)kF<.:q$PUY&iMo)I@8ZH>)C4a5h6*;G*
%1^Z-p:(tq(VN_W'f8,ADN)0V<&[3"4WAgrrI0(LI:Ih53<@gW[gMN*!+G!uJOJGdQ"dBQ0#1$t/QE-E_"TBd!7*q/Q9QVWRU+E;'
%%ZpR@UBA:8B%p0L&niYoDnK!o7Mt*lmu/BW1;*asCFh81Jd//>R_J)an_$Lr[NG`=6!5NN'AhD>+tFQqNbXK9q1(NS!XKf3U.q\U
%)GFj?6;rEb"tMFZl>G5UOZB5CnG,\e/@%HnORQKe=M0p5Q2pK_GDp"eZHS_#H'A`!8-#>&%YBOi$o=1n,DM'q6Lm<s_mgAkok5k)
%4*.m\JLdNi3+,);6c+E:8Q;ef+Cpk;jWs+:YD?;h4E_>MST^`EKg<O3Zq_MI;ooc+lil_f*ZX[_M'l>+XA4YPM,]1]@h5,]p6&%9
%#>q.U$'uH([E,+Dm-CoLi%B5pH^ElWCda;T$F=nQH<&Z.<q8]lSd<(<B.+'r)7SWW#^3GtL^;V\pC'Jc7O5D9Z#tnc"G<*HW0%.?
%dpe&'pNqW!NC(S(<iOo3EY3Da&DYD)IaaS;18i6f3:O!/6;rNgS,2WfqQRAQX,0IYga[7pfiI[0?jN^_#q.4;"kAdGX>)Dm#ka)*
%V7n9e>T4I([R)ci;/AqJ+[lYS_-Sno_>j\^J1r>U#o(`qN&:Tg4Cg&bX+4iG/moC)^BA8?Uf8&`rT+0AQu&[0nVkBQ'$4<b[=fYG
%@jXc11umop<n8q/%+cp'(^l`CD)&8KJ$/5_S/V=?4GADpN=f*ifH??pCEtI[,Bra4a96KB:72(.ZKDBpM/:g4ZtKS0WQ/AC75#?o
%6#`[>2'CLbJcT=?San%[VB2D$ACM2.Z=ICN8Qh1g:lcnFkHU-$oWOM?:r]/\QXDFo-1&-@^mFS*[SrBs91dL0XOa)WTN'q]l\8j7
%<&2P!]B5YN+OWjA-)%d.[;NDeC=*^@g0$(H)`[/cO;Wo8*I8]P^2WNTZ^L'p!#22q/nsIrns&JeH,:24P9^WH^a!JpRF;K2(<a09
%J^$go8dfSV'n@XLq*JM'Ap/(=?lfCpZiq;?7JMS.!B_oU8m$YH\\=@$6o\`(/gM."E-3<!aHh>s$7-R2&$8eT1L;]/KArkl2"`GH
%,n?ns>'Mm/DS>%qZ&ksS1KfrL9!:>#eg+obP.uVTV[[[I"%4Ur-K*A;>ccJ,aKd+h#I5&=<p0kg(\!_qS,/R:T#W<$#PV<j151m0
%bO2fM]fN:@m$)UB1s5KnD5$<Q%<K'g`r_P0=jP`-&/]<(8.Um@VLc$BAh(`U@Bh_)Y'e``7.'^oBJGOgdE9L'89lRb8h(u`&@f&U
%@CDMS*[3ifXhhoSY0gNCP3me26hV<eqDF6"Au/(8"O<"HTVWO#gbtIRb:"2Ac(JX!*7\LT@L#>"0DV#FV[f2nT[S'Io*V:poLEdo
%-e-FFs!P#e<XXP"A1"m,.NUI)8OuS\LfV3;8Vn;<TEu@?=Br\Nf03s1n3`"?-GQn\!?(tn5%J2>KgLs(D2?jW['#8\"Ror8AS/iT
%Mcr1J=()II?5VPO_`VmX\69&`Jjo)Y8`*p5f$#4\UJ.@5Udel(No\QD?]0'Y`1O2K4"PmnguhFae6M)<d==W,Mj4?#aT.8Wap$sA
%Or(&DD:CQX>B)m,%W3P-L7)"GR)i\J;N";NAJ*lum]Ji!0*(;to3!tgKliJ,UC?Y-qo7=mqG`="dac0#?B>aYVM=Hc?G)XjpgL.m
%C2YU+&cr64^,(rH&4?d=T?NOR]h50)IbVcA7I^efIR=`LI!nne0An-Ib-3)/1?V#1cC3c\7^s!d850$t?HU'r&K_YhA?!s<X^W&h
%V#[*#Ml'G$YZcjHK!k`#C+'g7hF)d+X]4SKpV,l;.?pG#lKMrh0M0][fF;"aDH4(*]:sp$VJ>N[9i>QA1#^K=:cm$[.,8!kBUleL
%:EhBk"YC"!$'72kFt\RXTT,?;1[o/n?kH9PCbZ]`m2$C,m-$;'a#@Tq:`qsfe1#h\,K<#*&';,AZjM\&3#mb)_$+g&ju/AD\X$Vi
%78gQ3JX"SV'c%mL5%r&<0"DFSN[g;S0\km"^^(%)pj)D#$\KK\#O#j0P&9ShV:LHU3$pb[L)T=:$/#SE#T:bKh8Z813Bd`\@Zn'0
%]gb/^N>*4VQCZ#:-:SKuACGAU*/G*5[8IZI%k^M8CEd_/-WUh,4$800[$4C-/KlW:ataX^Jn/p0*2T!5"[V14"rMU-A:80kF+Wp6
%p2VX1/e*Ah>Iok"Ur&)oeO`$aV%HC`-.s;!%U%58O'qKTX<"%B.WeM7Q\c7gZiJp$FD)Mld>_18SGGo%DF$heLZ=EOBr2j_;8$So
%P73L5/.+9F>aU]N)V%CZM3*L%_lQKE.9#jie+L_S#(eB`$oh.4+^eg"\V3W(C>C0%C&6a-'CDkDp+ZLR]8c:$:_A4(aE).Ij+^+7
%P8%1DLh5^],I<iZ&\Si6>">]$fFXboC"XI4i5Lce.)pgL`B7#[F2FX)[*f&Ue[/N/(*80577W8j8PNLDq%/%<<2s!!\V*;PP0auW
%35TS?/A-&$7%.&rKS,bdPl\*?ajjr1"XQK2c3P:=:Z"K&<mUAFQXChdpTg:h]Rdj6rUPt'BZ-lR+o*$E&/p2Sa[hp<]MCg-6SOft
%dg/4&(tU3/7#h*OSZ`.XTpH=197?u@AF+7\9E$kaJVN,qUa=ur9Y@/bADo9dO\mCoO.uT+rt1[07b+:k#*s&R8Fd4T"FVG!8X<sl
%F/PguNM=O9Ipal1Mh-t[DA4FYT;sKUO`WF%SG;=,+(\]s9?7\H7LXeecu\&Q\Y@prSLX!,82)DY1qGB+1@1-%i%DbM%Xq,eReu8(
%F]L";i(M*U?5.6`>tU6uY[i7T@YG`B<-!lS)O:6b[-TM6C((IUFtJch>U`3oA`de1.n1)fRd0FM(h,mHVHqCA]2WGIC#iJi=lMFZ
%+3ZEg4lT*q5D+9NE@D$]%/bCeW#iG@iOeb@GLQM_p5i*I;\>Vh=,_n7+n`m3,`fc`-.s&?48AQ%krJ<jSnR-k73:G-9m&tg@;hF5
%WtOJ2UsP4bDTIloS2k'!(4JAVe-+P"oQW&fXjX<Cm!.0*;\OK*]0m>H[mH)kkmb)7'N#2_>ZGN$90<tO@`Dnh.![l^1LAO/i\`5k
%GiDA<4V]%+Nfb\EV8BPqh963>?N$*TKZEIOCRBncJP\/UWCB!pBY%.E-k.67[)f'cZf'6&DS)JC%n;fPCsR[Q&a;hu3TRuniQHe@
%V,6+3Et#`A@g9TEj[GF7O"e=.U(mSgSdGMr4ef]D>2kC:Yhql]jMmeh%TVn,:)e628MPIge9>H`#-1p9^8'/nRhb'I3m<iYM%MnF
%Ktt2L]Q]$(oII"e\L/82WP!EZFtoQM,MkM73"WVY$h'X;3G`C*$h'WPrNQ%P$L_8@!rcD<n":[mGWfNL930JB.d:6E;U8H*mniI=
%nt@5e?,Bhj4L#OU&Y06+)s+]L.1,ZfA%F`A.8]#+g$We^C;ItlaR2SMV@W)<`E:*6'3=)'"-"N&^m40pbF3O*,Gr'_KnK^f(8<m#
%.`;(Dkft:Z$.jMI\hf.MgGE<Lb6N(,l5283iIMT;&V]J0_guo\b&fS(%%6NOCtkQGNZUc_m_W@E9TkY.1"Dfqa=!o/q?tDnJD")8
%mX!!2lqYJ%JJYaV4q"2mQ0lis-^\Q4+kn$56:"l?mL1X<B73R"#DltVN9K^#Fs3iZQ0up/jM#aeFE\9(`DE8?1B9RW1%p!=L0XJK
%Sf@7V)>HE.^9;p.5ZqPJ8*.>bH4nYW`cQD)I.F(R.s,ucM%XjQ_KTY6UI?6<+l=;JVM'n(l0]tX!%Q_DDIb6jR-b@`9a"4nFE[rI
%:lKmakjAjPI!N/$\iW:-!]Xm%h4;BE"ppr4\iW9.8/$<\4&[7].bu*j8bqh$[QB^^'1]d@h%A1qm"@a74%&-rW0kGF7s$\QfG1hV
%eqeilA'B+O0InnU/(pI:b:kq8Q0o,*=2N^QkjEus-3Kr`GD)W)6gX(*#T\\HgG.NT+n7\QV$l+MEQ$Qe.s,uiq5)C/FEb`=&PJt4
%K>`[p?q>KS8HP/D:NsjHZh5hbGGm-75/gieTK_u8/)))<&BWri@_3j/"fWi5m>fhV%$hU94-<XO6?aed3n0G_Y('KG]9AT$OtK^l
%<bt';06DDd$OXG8ZudEMm<bXd!AisS(jsPNa$)sC/)-V'Y_,>=b'&Q&BfVqYCj/ukJnqN*GGp"RqJ^#XZc'n9.5YMG6RK+K[L:h1
%YW*o$<7pUih,)L[g$ShJA\)E![Q@kO1;16&h$KHZ\&rka0M,^!e+t[^\;?!HYh^0tm"Dl8GA!FE?XBG<K>_k+f@/OnQGV#**R`aE
%NCsNe$Jc^gbQsdtU:ULQKA_+n\iZ&4_ErIuh`@LD!t^.T'c+ABTX@?ZXO,chf*Y^MM!bb1=dV)Sh&Z,/WFX"jGM'UM3*5A4$o(0)
%Y,AlfKE_m"L$m75h4\4G7"W<O_SWAdh&W;SBiXrrGTB.;L$oNK'[\AMI!=6+"=UYHh&1-hf2_Y7N*!0n0sQf`+]Ae4h]54MKjKK%
%c4J@60e7Wq;#fU*X*f-DWb&c&q!JQ2pW6rHq!MP`3+bSp^,lE1h!(q(h]7:dXm=[.J0Q3)PTe^#:?9Wt.U70W#UE+R+LGA-8I`n2
%kt^HCg7IL<$m8%:#X!=8l!eF0B^Rk;>jPV]?k@S3F54`2Gj:"tG=\,h8P<X)6d7.'T*iCTN($c4O8/)R11=I5Tslfep_MeI*7<M,
%b_5jcD[2+Bhftj(1JM"O,C2G-*R@]=hTd6s+QViTD[1iTR?-S!0Hc=*(3Vdl*@(h@jE@nEPSpB3[fbJ2;S4Ki>puE@6>j8UN5*Ol
%o%jOl3:"qE)fscM.OHHMA[6rV.BL\*Ut$1R&Qp+):iJgC&5kM#fXBt6P<2nV4s[)E/)%-Ga"St'1Z5:5&n^35',]V!:c1I^"U2(/
%Lp_CiI$a8:!M(K,&ltrD[Nj(h@45!@m4:7h[#0UX&!@o8c8&k;,AbhZf?Q/@'MM;=7n@"NO>4!\m*1Q[<?\e<*LT_^'k08WY/)h9
%Bh3&1n7R??.'FWoMEirX[54?d.op7D(.4R_f?P'Gm4kdb5+*ZsQ._1CMBNc%\kYGTKt/F?3u6Ddi-T&t6"j:o4MfIad@K7[dJec?
%7b/%c@QVIT'/rdFm0pmZm0^%f@1\;^:IP\cV9Qr6&[*3-Ug7;Pm;RRe6LM^+B1R7)iX2k0/3FI0r`V["LdU1W$Ep"/Z9mnlm:]Y<
%`2g7g!7f<riDsXZ9Zck/[!%00$Z4MEg6p<$''4r#%V#8u.]j^:\YZa4[=^kt'h5QR0J*Q$;JGM@d/k8`[55`clI*3)JM6-):h]5)
%UM.ZMd+Z<bdkH^.g-K2$^eAJ0Lg>qD*n/g\0Y4XqF;/"IlD7n/XEO)u0V2WSmAMO4LfIUF?rsSJBM<2S#Zoii4ft7U#(]Y<;e"ZO
%i\eI)VrjF;ak&#C*@(]A;crDqEFE(`_J7,XP*)ZHg<o1/IT0a`1W64L/#7?%WMHm8;EI1JA]SUWC'V!t%Mr#)U7YlJ<DknN)Eh6q
%UirUJM&0&OSG67b=%VfC'lZlN+glqS/?[u!C56Z-$fp)A;EI6lpi_A?%T743:MFGmM7@k$4$s!K'35t;$k]S9mhtN^r?aC=cY/)g
%2SpXsA@/,!R^k-+;*lK!_IuG2kM$_@4.+R?.SVr%9EpRO7/e&Zg-NpoFJZ?#:;-Rjda!B'R+XqR8isoj71;>U*KHaCc`<RZ]EY<r
%@no+<r5=cMbfCXXiKS?-dI5Lt1#.T5%Yk/.S10\G`]M;SXH[m_&=q4M:tjlQPBWJsW>ub^#Kkqke.,r]81_,kcj.rI(HbiJTLslA
%F$sdKZ%eU1ed`=$4tj9d"D)2\A]/A>Y9pu.iO)%j=9UqO[H$euC\e-_0J##VQUZ8fn14Y(NG._+!M*ktO4)`Z71tE[d+Xma@bO1Q
%4%R!9F?Qas\.3j`4)PN:8rcI00\$J8Tqljbf4Ql/Lsup()Y8S2W?"-7U`(h\G(uEtdB8Sb!G1/M$aGfITmqc1EC=PSg-V!)=RC(.
%,hj&74*^9d+?X8D_cJAeS^Q3m`B]r5L"K.V"Dh0`[PLM60IsCK;%.DcX2K1c2gc:oR+Mml8YeBu`-1YE#sh];[NjZ4@Icn+G-&Yj
%10>^._^k;HDHDY]kQiF9<["mr+%=O;3gRGKXY`",`-*iE/:m@!YoVU[,`A\@G-&q9j7nG_%[HrSHrjc=\>*LuSl[)DZRh]uLf[Ag
%#O`?)dtQB`7H`a4W5Nl?O_DS;3$Pe`=?P/gg!1.(:%LH/.7U8)[LFb2Fu4lcG<N:'@4^3QT%VC#S.Cq?LtPOn?pq(pAiimM:gK-L
%m0JD=k4-<)8%0W>5_[mOnDgY5L/rC)\/?mO0+5*,,Xf\Pb]ZlB:\Wb.g!6lc!ZdrXFp)tR*S?b4N]7>7CIZ8G6.bXJ$aUiYTCfW<
%Aiin<`3/Kqm9&`#Gr&p<6i!*n:"qJY&O@gY?)A`q,:#T>]b.Rk&Vu5b=IAK3o0r6$_JD^f,C03Kfo@ltj:X&oG-'4;)ggPP_fnMB
%0cY5gZ/2Uh4gc:W]APK*W9qZ#_XT))Fs:X+:Mn-V75C[I,F"5hO".OX;94EsCIi:IE?YRX1><uL>aR\_ZQ4sWjQnd8[_ld7Xt7e?
%67nA3T%OV*@*O[fm?#U7anJnnmJ'RcVn@1DT9hu$ijE8R)U4nkCIbmO]&O1'*LWca$mT@GU::hGZnU7^=^3DTCXjeEZ?VF`fo@H)
%6@d+-k)n/.r``08-O3J6cR?1Al"la:<N,:U;S][)&[`WV3spnQ?k*cjQBe^IDC>'YSQd8H!sf6LCauud:i3TBHFm1l^g/"DpTC27
%O;C]d,C2F\D6_WFhG-*H93LNHTGLm<9ZaT]84(8U[_coP$7":(L#%bW6q!4ZdG'f665&RJhN#N9WKb7Vb1Ir>A41@VZZN*o4/QfR
%kc[WEl0[&+qXC'P7-X+0L\rV$p[`lUhuDs3V;>!6JDg;XY:dT8/\9&`HM1%oa3,Rrk7%@\nOHs#iSTgrmJ-P6gXl+$T7"3IAYHjj
%]&jMF2iH!HrhrtIpWLT!^&.RLZhXG-IPjHa\+oAmr:YX2:]H\k^F]<BYD`GUcXu]&htPqc++NpaKhne(M/Z=AK5JT=oG83eh7U5>
%EVGC=Zgr%$Gd2WiILiGKnq!ioUG$aD5=pk;$8b_o1k6*g2l)"U_/OpL"$M[WEUhlJ>J<Ki3XSpKkR5.2q8gR3++E=;.^-;irhP>!
%Mq(=sI+);e%(bCL.c9_2nupa>[hQC.nopW<GohrX`3bqAVT]`qqb4hO)d?:"lm!9k?B""0rWX\J01lnq(1DX.M_._RX;TND?_dWN
%D$"C,nhX@^2RH@]hTM`%*^tW"<>Jj4m6YZ;/)3+Z`eMlOTc:=Lbm`SD/)O1bq@,`PD0n:7%,IFtQ^6/2LeE_\W3\u0RXR_k&%ZuP
%A%YbNY'l8Ooj^6Qed\g<Y`n(g(9%rRR<p1;pg\XGD'+t;n8[i*<3@<Q`#@n%dTp,(/Ik@Ccc<f*E;VFj^@j:T=)XkehTO*;?ED;?
%6mM3_SX@Oi0o!Bl[mjrT<uS:%pKdNC^Uu\>=MA$:$k9F[X,DK)#%<t4FpLSQ)i&1CMWe<\:]5I@6.G?7q,@9>itL.oG,1l(p%P(s
%\N@uAJ,I^o;^Lugl6C)_O7>eHdAHO?Z>Y^;;6ScS$<kR8>eRA_ldbs+Y^BjS?1^oAU6T@Q8XN_/[`UNl)rQP>pt7-[X8fqq5H;09
%@(Q:1DjrAS3A;GUFuY)Ys6[)2%6^D'*=a,Zn:%X3H<'%+@OP;ZdJDCe&VHbVe&>EQRN53)=Q%)0(X[tMHSGWRSmCFUZ\Ke#p[QR6
%FiaG^VP]J?If&S`q=E9bIalC[I9M,Tl2BjjIspkKe]T7g*a@a8r9:Q,-i^h=^W_1TQ9Xm8m"]dDbI9=;ZZ1JCZ?jd[la-2Lf1S+6
%fYscgG'VR:&c]H<p!&YLr$5(&Ii4b(L)9f9ErJh;HG)H<nb(.ml_%1%=oO"ni?*9nS10HnkCe$VF2+46l\$V_]"9:orU=1;e!oBu
%GF'uS-QZW3lg[9!??(\srUT=;m=_p-Y23//V_+HHc<fA?T$SarDHDhnr856gr;=h*POHcP9fdV]TfopLO41gfhfN=Ke:bG\iJ3W+
%b<K>es81XCnoW$#>e,;b"+Be/qM2[%GJ/D$mX0o/0,O&V3VMmL>e[iFlLa6"kN*E&1;%ju6hKe/:QsnrNK_!BCfYuZ:)\5"p$L#W
%c07,D3,$TA?MCq8o1=Ql\pC*Vg"$4G>79lU^6X8\CX<8-Ieu+kA;It5H?XeKr6+cTS(D;N'=NG7.9jUL^8nfNbAI)cg^^s.L2?8A
%5r5\#/?_ieY-'.ZV8%,mlfIrm`LEp;B/e;*b9ME=c,dL]i6s?FY83bT8%H;p#L,cLq'\0DjgH2kr-X`EN[C9/kEF[bSE)$@eq6'+
%]t-DLT5aeke_/^Q/2s3_k-NijQCH3@o3#s_60b)l=mh]+!iNSCNS*jogpDo\3%(9Wjj2-ADdT-L]_Z1L?'VOaa1j"+nP;+W]Y/Ud
%`U`1Jc$l6lAI^BN<P*]>J%'9mqMcl3?!78Y3I1AmmFfVCnb1Q$\(s/T]"OW>8%m^:-8hV/;mrWk45?U./W[Ts?<==:]j9LMZ5O3t
%Xae<u*TS]BOP96uh=[h4e)e':-g+DJ1?6Q%2;QPdiZh+do]lA>qLAJ7HM_u(["&'9Xc7AWX:ft\1Z#iKSpp?MgU]C5YO)I^)i];j
%IWGDblLO>ealSafXl$Fjp,1;<pnrVU\[l&&X+C4$#C>=LLZ52!cq"*lTi:r'LM-K<W>5<uTeOq"A%I_1QSuk8=(djY0;a$)rqL`1
%nZ=Fo(V7@&UsUuDj4X;]oU[+ahfVV#^SfeZSU'W>jk)L$0YpT_C!'o\BnpJ8_UeG02@%=%%=YJik+CFn2Rr],LMcDu[DD3U+*fn5
%npB`mHbUr">bBib^0'5c)46'1)pciJ^-4R3H:",\a2:"BhoF2m+%<KY!WD?TqSsn.nfY'*kmQlmNlRoD`LQ$GBDH@eU.o=G^:V`=
%%EY1hq>=!F2U'WBAU8fJFae_O>lN'&Yh`7(@kpOf$G3K;?Cnj"10r(W]00pnQ)q'RBBLX@6H]UV17KsO#8<;l1<CS>Ils15H$0)J
%p!rlgNtZ]l4ZnH]/N#F:Y<>ll:T4bA8u9k8]KXP:kUGSU4oq5I_h=E)iN2Jg<,"JG!^GTofL`ubmgGnY@U:'gFoMtN/B:+\oFl8J
%kLtB4a7#e3Ir?.QTklgr%T'A]^L]C@VUf)?[cl^BCnm1p`r9V1r%MP_*R'O(V(q_l<]b$62\X&ZcX3;L?7sR=?(N]FVtjQJDqS.f
%5+`B8]RTh0DqXYuo>TD;2s2QdbDYKDc!O9'*9<F7/BU28[3*ZWa1KBV5>JJ1b(Y2E7.u(RRc&o](q"g4OrlV+*.JO?Kde6f-l2Js
%'[?XM[aEcHrAJ@@p3io9.4.2K]T3BuO+U;<;]>8gdo.S=<*`j:9Za*iA\/l(#t&uZ2.[l@g0GYdD3ii$#7OA).DB0"DHBOm5J(0l
%9ZSAA4ZPb*ld_5!i5)6ORq!,OkN*Dr+Lu5gc+%*N%!6\t:0tXs]/fb6b2DoYm]'87kJ*Pb3amR0VK6g!4`Ph3.sKO><teL\?_*a[
%:J5gnhd'_EY:c_H3H.6u]-X^n2!G2\n#BM(XLM^1b0.P11[]/>q"gPQ/5@hD/gcS$+!9eVScCJ!ZSZ<hm)9"moI4@G9PM_E\1\=O
%'4oTGm/+YEdZf<\:FR#i$D?"@Mm@]mnrq?fRBiOsAa;AG>a,PljalKe4Gf&>d`U5B>a3^8P`%;n0lntiS;Zq]G+0kIMdh,?\L<Z+
%aPQA\F"YV,*Z(]4bb8.gLRsDZBe8t+WB\p<PgcOpM__+`LU-1e1.lVD3Am#?nfCtEQXb<ni-CMA]]P>94N*5s)2Lf]MHt\IPJT!N
%r856gJp8d&5Hoq,&GN@W*kt'.qKZi6fT2$gZW"hh5EqR=YMD^P`EBB=k^ls@c$F6XCBpQbrcF\WZahu`C\t3aQC+JS<h$MNrNt9p
%XNec=XOUpbp/JEQ0I$/f%cZ7?eg2!@i4"GO%k7Q=0;JCtUNTs5'=qRX7e8ARc'cp0_Lu_nC%O?J&eYH$m`HaNIIJLn(&7IT5F:P?
%T:c&Xr=3Q`pMDOT?+sRX3kO1m<B83THF#`Eq-jt!`SfHU%J:CO6@&G4BIJ'`kFf%Ub`i-s_,,=)W[A(,EkT,qg=lE[(s608U"j39
%4X^rcDUdO[HtJk%$2NK',6.\Lr,_l+BDE'ra/O(3h$N.+LbJX;)Ef[H_@LV4h+`@d,bjg]8`HAnSDRfps#pt6^+]J48!!AXVL30G
%5="^O2\dE9(N6J5k&^<!n$_J[hl+kEW<f)^efCP%R,B@gC!)>/Bnm(.K#@/WD)%ka)uL1?k6Z"XQHD%!KA5j7f[e>F)pG#>WWUop
%-QDo/^Gh`hTA@/o=Pca)l48'!HmJ4#-a?5a@Na[%@lmcgc'<a!r-+2$hRAcFq!S]C#PW'fcgfm[M#TY1/rVgi]=gLOr:a%mC6&>>
%n_[WmIq_%i!c4@P-<cRRb]cig6$r%PRUa'Qb]f*ChV0ZR@$R=sHM-^no(ggI2JFeAbd"Q;G%Pkm>r^_:"F;.q]rP34\i`3lqW7.B
%SY,lUqBfS=lkH[u'3_kk_p5?<$**pZorEHMR6#6GbP,99mJBYZbPMT_8s<I9HcTe0g$Bl/S@s6GMk*"AZ\NAjOGu-R";CLuh.1!B
%J+hpqEd@I`[M"q!jc0'%a/dO85.`j_hL'L[I/2IGouZ=H\G#8RgBHZ`"E3Gn4T@=eh__idB:Ek/d&*$,3P0N[Z]1Sq[(OPH4*K)#
%ECNI:$YY`pk,*ML#E9P"edc`SB4^^gI1Kq554#]KiU*,rBf8Sd+0BQk8*L$fAt?C.*fenG>P<AGl.>q!T5V"mH`mYI\'0l!g$pgZ
%?=q7$m!+p=0=0\MG.cV@mD@*lNYhB*d/Pj_?M=-s3]g[9j*97JrcgJL5'u<TqGn+h#OOggf,9&+4VCPmU@u^&9g$#1BU>1PYe_Z`
%!!LMR'Dp13I0Z7/!gp7]?kZ=qq-nYZh>Zl$:DR[(r9WS3PI%Cjp3C`7@tcgZNr(O@qn>'S"XKu0H>;pC`I"2,kIkleF)FHTH<LSJ
%pDDL"I;)/Xg=8%Yh;AuqqtfC8eLr^Mbu:[cT7As[=68n18T=1\lk>1!?Z+>dUI:u/mVZc6Bu:(^<F3&ib@C"Kf@?p'DjNCb%G/di
%'34UsXnf0Q`o#eoi-e)hBc[KPD.F\B%!"=[17uo'iIkfJo.P=6d+?HTR7$Ya?0um_9UO1s.43OS/Z<BCQsrGMd"M7D*;tkhZ@%*]
%HT<PB;6S`f+(GLZIU[bb3;YE?kY-'eIZ3n%r"rAd0`*Tup8!%KCOYteb^PM!)k#B?1&E[8`/jHc3,[`/G&oDf:$JXLcV>QAojp'r
%NCOY$7=I4A]DV9no"X'602JJ_S1E4[WbnXIS-Vmti9'Ud`E/rr-U1BVU)mXRX%'e6509F9roM\`PS+53n'6[<a6s;Zi7ja-S'u6"
%[ZS0(fDY+'I*utnY28=Vp!hOk;[+//Z5L<d^:K\@XmiXP[:B?.aj&?MD0!%r<]is\U_t^tCP-6'Udl<$)(b%'8[eq48Q-*9%uQXZ
%46Oq<@"TNDnaj56f0?o0c[C5/:;KM&ke8.OB@)iHgG16`gSLtEIRRSLUNDA@j%1PE9khhCVgD-P_OTu##N#2h9BU8W]m<',qec$+
%^E_'&F4<<XBDbIFl6kYQT9,O`E8LAZ]8d'$0E."OIIXqV:Cm@S2bbmJVn)U[2kT6pe(fBlL$$k>I%$O#F17b'-CeS;rb66O%`*O[
%gP<]%KRl1o_q^bc2';#T<AD_<\bS3D+6W@h3#A19EUK6?!XH;NNL5cKqf&@#[!WAH8GE.eY$V*PI55C6Gj=J&VoC8BiQs@_1@5!V
%3jF575\T'c*`lgja..,q%M2]NLQ-XAb3NI913V[e4O8bP:_E`2+3mYWJ,3t)U8p4#Ve7s'ri\oMlF/^eSkj>>l?0_-G7tj\%qZhV
%CsSe+UH`8J*TS]=3Y5),fD1ta3=f_l%S!M4-.(]DVkr.>4C=]N;*Mb+,bOgq;o7f?]:*]&)5t844dfjCN3;#;X+#=W$&RSFl->pW
%[YG;2[sGrpg,C1=jR'SF=!sohWP^X.Hp5@FVIiNaV`gDqBfb;B'6e]A$&CsloDI?2p[I+pSS\CFJiYpfT<jH"PN"Ckb$DE18pU`0
%4HF&;I;q^qiPi1fnfJtF6`:,okU(P9f%b'Zba-'TFmZjZH4S"VQuIj0%DTq$C&O?g[;WpZ?bZ50s*Sm1\\(uGqcd[-BJt_hd3tH#
%U'L^[DflL2Zr(p@hY97kA*5u94nml!\e-b\]AIgG->_a-9j'/7m;Ta4Bu@Bhrhp9T^Y>t%*+m\)\(@O0T=/#]C4k44?Li4/>Gq@<
%pO?O4\N[WNIBf;1]5UUDj8%BQf-b38O-&tq\AnqnhAl9"*;4f%S2(TO^,\s?;gZ84hX^k4mu@3/kC0meiur`1B<o@%20p<6aWJfQ
%4R,ufjG\=e'\lJ%?M7.LP_0B&c^\o00[U;&oH6e@dHEfaI]ARC8!#r1)8("K+_\g-hn&fMms]UV(=s^EpPY75\-Xi;pJldV4kZB5
%?2sT+L@)I=GZk=/;hb!kr//!iY+^KgaE[Cm5Vep*3%OAZ9#fn:R<I#KY<GcGln2B>!J=)$_ao-;;saR:,u6/0%\X#adbc)TOnqWP
%8e,6Fp0K&4.I?7'Bho6EC-jf:Trk&A2lN@s`eq>#h5fZ1T?jY^adI4+6".Bmi9J';q;H_smo01GUT8SrgAHc)jl6..]?AZA%T89+
%[>SWO:U@s,Aq)hbBkCsgG"At+Gc/Y,4Q<"Zpi"b3QZ$5*@8baq3Ia8oB((_dHe3knNfRJi3#SUL>10bCA(0WqjmD[2oD+(2^@QJB
%Z$`&Ub=DD\H]fNMbNJn;Rd^8uq6H/,;&1;Nrl_@cYOb\K1%\0$a3,RN/r+rPpnKM"PiqOshu7rl_ps&3Q9=50^FW\B?etY=j(@iW
%`ud0smsb*-UNbgLc/L8OX(;6XpFC^i5P_5Wb-G@iVHNh>nK7ea/7.JN^\d0RO.O>9[R[%!Mmd]kaSFI?/h$GmW:OULcbe$L27tj"
%,N#rs8/Ah4K^2BYIhemTaI6cXK4h'Y1%gt2ra$rGS*%dM2N=k6?!M_i0,qU>(Cr^;4EK#L[IuibpnQjkcu8L$nS:gk:]>g"TmjQI
%nbV>.=Z5L[2XgFeR\Te+NO=],aG".dMaXTjh_`'r6'-R<k:q,T6]uZkrE8qb4s7H#o,%2WWn)sEE?9^5pk%O9Np=AgAFoJr9mi-4
%_$'[DRUkF[*t]_^,5BN,#sWO:C%4R/'@#OKPMop4:2Qf5/kTdR2RNXtoUp;"ML!hm4-GlSIU5&sPg40!Mi5D-fs,6YBD;.1@`0,=
%ptCh\+'N6Np\3\H;sQ5pD-Ck-^AlLrh_/$A`sfT#LEl+P)TZKALGBZu8SKGSq7NkKM.rN^"at!#EkA#lg>W!)GLY_UO022_=F4^7
%>8a$:ri,"IUGf6^s7tepH,9=PYCHTIUVFu=q<m@b+2u2HIoq*ms#/'!S%_]&L"AhBFNiXl=`f>GY/[sSVaD?4Cf?,@@st`?O`=Yc
%Q8PF;?c9chcEO4+_*hh;G(!$,N,^)Ejl0-p@=2d\89mh$pUrXD2TkC/h:FPi[->[/'`+6a/=u1p;/h@"4?q?'7I=ns$)`E@BLg[W
%/2+>T-(^,u@[iCP(U]V,eAgFC:U=Ngqpu'<p"h$$(]>G].PXZc9.6u%j9C;rCH@e[B@\o1_+1k7YV(-O_>?oTLCK/S-6./"F\1/-
%0qkpPG@XusoQPQjR&h-Wcek:Y@@l"uj1UhnX`^"o\T;hMio9b*rSMraot;ecKplA?n$V,QD5-';X02F`\h?k#dIt2d&iO[XIdu$N
%0jCqm0`8TIO,S9S=,+sUb<*f"gq(MYZD6Mcd$?eOXp]&Rb4fmnk(/E+`1f`t[FH;&AbcApW6+W2dfAtfNTXo9SX-g'9Gh+Tg0XB^
%e;e+1R_Dr.<?.$^CUl>j4N`",elK0R6`f&b8kYl0NN[(RDege08'-g4L',[XRCIBMU!9cFD!]'g>:-iGj1/gVQErYk*3MkYG+6c;
%[m%F15&pDWcb)8q`hOJimT?jP?iubaC4%(j4H6Ypm.+n*K$8,!D[C^QZMk,iHeO4$o8fl11#JH^+@!uhm!d:T*`%3&b*jGUFCi[3
%+N3g*rg3*FJ`C?iV#$GH)`=a+X"I.eY'kNiEq/krad_DOJgZ=<i\Hn?hf%=&m#&WjC%#/.0!JnOQJ',8&[=3ZD57G9?8P798_ta&
%kP8Mt`Dt\pMbo[XriJb@HuWJ-Xn@'n5>'%<r\f&%G3lLe:E^\#;TflSjLJ<s*?&+!\L&?5`quuUboASqLnUEL`+3Cs1a-i66eV:<
%(#(N6kK6]/8$NB3jlB`eMd]EEVWRhkZ/5;cXKn.mbiJKYm_gSjncnAf/@Q)f]<]Lo<k^"0C>mb*=o9fi;9n>:HtMsc)>X!-Z^hE,
%@C#%)Y2p;&R+N"QbHdB,i_=W/"_$-?^Nl4<5+U:ckPG(hoQ]@go1k^O#l"&NZNcJ1D=b8I+lk/b41>filT4mH+[RnnD)LOjLgQ+[
%D62<Z9]93pYo/Gb6ahgB1`F#Im/p_N@=.'b3h3:?L73C!Z8@JeSBC#d\B(,@;4DG#?He@UR:!_GkU0ah-9UL:l[ogF[lD('%-hHD
%q8kDpjcd;ai)r$'rquE\h8M<S2gs7N<M"D<((^2CiU!:nY]tN=^"%E-cp2C--/@R@W%B*6Z=tr&'g)(tlubj-1gc-MD+Bf8gb+V!
%j$U82Zi1o"f03"@2\4Q/O#^$krh'1K\T2dD8&*I!D0R7HUCOC2eW&S96S>jU_(7c5^:HA'8J&U"qrdPJlfIf?jlqaaZ2XL>jid7<
%ZXEC26>p/>Y>9%RQIhJ\/:Td/HZRH7pfm:IjgW6`:\^Q=S:.#YZTL77@NGAloSDqio.r\LcMdX,la)rXGPS:'`id&fYeJ^JK3'p_
%#1e\b&O66;]<djhS@u6NjGoktS$acHIdat+lMK>s%fGY)[qDVF-ZJb^cCVi)'DN8)JNR,<GQQ\*:S?J/$$6F4#rH8#/$L$IKa2T$
%q@E!$Ct0heK@,%X!lHir?or<2hZ(8.>_/C%X006;?%J't$#JX?oE;aCM^M?Pf%:WQGO#Qop[JC_ae$:F+$Q8DY^4jJ\jro[eK`ZU
%4FudZ@r"$Y8k39fN^236EWf-dmIA-HMB@q+:)ngsp&t@Q:S?J'$$<L$E:sDuJ1$F/@Wf$)/S+(Io1^:jC?8Nh<?(n`[hiQc)0lLC
%QU@roOq'-?Q8)K$`"5KR\]_/`$(<i5gbQ&/cSg]fK(:f=)_)?2\?ub8_5`BD],[''kB<6;j1:_eq(Pkc'/jm+Qb#:^FlUP),tB37
%Ei-5oN/etW]Ro]bp#QMJaQ3GeU#WB^66,iZ=dDbeUS!fTT@A(PosG^(%Z3S_eCMc3kKrf03[__10OBITGUpCu\(QMd-_Q6oX<<R0
%I6t!d#,mr>P\\eTbSt![V&N.nh%iN+Y$2W2C``CsT]4=V6PM,@VgQF+8mtbMXmT9dN9U"-%#''`QBQ1Y@]R\m]$`fFA9e;X(_)I5
%\.*g:D9h]7)B=d=nuQZqGsOGp`Zj.t8O"bq#$utbZXr>0"tk)I`D*C&:[T8oHPh(7Lls<VCepna(=2\c-h=q6M\BO3\GgK7g"[Es
%fgf[uep8>fP7>fRKCSVm4GR3a8_qUa:=;7A?lp,MFro8jQn9-;SL/iX0Ac)1:HkB@jHP#=A_V:%\UL<[Gj*NIH+,9gWeg7.o0c.P
%pMXm'@b$;t]UV(B-LpTjXKO[IGK:]$R\gO"&;,;-R-G90ZT'$d4H-0SjVV.>D-?5X@$sCoh3#9tne&(MqlF,f6<.,IO]fBKF`NA_
%-:,M0S9]C9X-^_L;#n%=HuD3Y8EH5:^!@(8+_oAX@K?V(N.+fB@k5E\aqm$Eoi7Rpq..<W%J5pJjk)KBX"YDp2$'V4nc]_O;8mBN
%+4.%1%3\_o<?;$`pC+m>.NfdDRr1qR"^.oVNkICp2afK$<``%L\>5L#Qlg?[4qSN@A"g't@dD"qaeu;CY+0AYOi@ET=^=HRKqS3:
%q]f:oo1@NF$W2N/i`65I%qnCA-=;M*7:cD)B]>bgi4a;!r>3;(Xsj,*e&_5QO>UNVk+C4=h2!Q+mklhc#E76c5Ibk_Leu@[3KilY
%N$R10k<Qm(8=0JcF!0Ej"qo.75QVCPPs>C^l[]2HNXm7octj"6`(((Y\D7<$[Q*Ae$RDP-d#YX>&mPkkUeQDnamVBaqHaUV5cZW$
%&DBX3,fJR[8P!&0$"cOMJYqVu+pm3lOT[U'Oq8]mOq<OE5AbW/LTW3]IFAE636CC4GIKsQI&N/12i&a7qmFIC?Rq6Admk&;*(fpB
%OT`9FP$mHD_Al-lR%.WU$V[t.2FS@L`K.toV,i-h)7DE1GO-CBn-jN1j=)@f5-KPN/[3dcA*M'AOld]CGp?UAGkmXARm6FsG0Q)e
%,FkZ'-f1_69j-\*$r!ID%D/@Zg\Rod$KeTE^KP<6k?^!I*t'=+YI6EE#4fG(S'J%Gg.A,+2DC(2.MH!`T(-3:eGsPbMUC!eo:`9.
%QFfo9;0]"@IKa><;6RZkBiR.lZmp"Q%e\rC(/pRuk9X07hIk0fVo-?%-`bEoiF4?-8>,8R5&\*.NUj02.,'$Qq'gN`L1^Zto/:+-
%6;tg.Zl>S$fg'4FL]<+U'Q8/OG@ZWd,ZfEZQiMTi[0BZ#WX7^LSpNTY\TqOr6:g,?r3'<f>5-bt)a05D9uIm'9G!b13aW@gq.(UV
%XlP5SiNWQ/lLTPOISo-=8`UB8^9#9Ga59%-`b!?7QJjVobk$/(puV=?qbTU-@]/Hl83a"-Ib=_+fl#VnD>qPV/H'PcmX4HmK]gMQ
%F__>/PO1)*ZO`=1hhI7?Y)2P@I!<Ld<"lIX;s<lMXGPQP6Q@rQRQ07/)sl;-gJO2Hm2KCH[:+*b[;nbq(Ta`B\BTqccCV+c!kNg!
%]AGq^MA:bL;q3Q1=k.XpR-g9rW2f00Gs:C7O=G0!C=lVLhGlG'2\I(0)NIf,B-j#CrP;Jk$s12m7Fi7*kn/W3R'CW.BiX$,E";!h
%2DKHFqp%ji@D1-92-^[cq&Indec$]>dC",D:!ph'kD1;We^;p&o\Pu@<CV8E>GfajoOaPlN4Q$Jr:$c".E]_CAX$H7bnjrE*.t+<
%UUA.odZ/)5bb:*TIH]_W'2YYm;XD;>M1,/5Z&dISNdZQiYn&Sd`j(SNs%;X1f<3+W_KtRDgcm7]0mnI(Hed8/+3$Le#E3+6k(CW:
%>/*)k;*0+A:h\H$Y-$S$q_4LK+)@F<['QC,a$0EUfS<UjI?aK0`]d#?_(bSf3n]sJs45gmm@KTq7pFQ]+J>C!J8XuANFO&M;s\"j
%HeMp&XN!I%L=f"$O+$Z<'@oBj-2+UX('ia3-@YaB8(pj/&Sdu6<)EWD@]bN^?hWM0MNU@]$@_aZ_%4:@pu+.75K&\k')^rO`]h<l
%>E+('>s0U1nAEmK4'i8pZ&d.&EDu3k12U'L-tKF28)Sr.+%\g2D@8;CC'Z$WToYiY#^U3o7R"IS5*2I:,9QZ0lg_p&C>8p#9&.<J
%H3H`[jfZTd8p#=ip[C'*dFV1T8\;N^@T*:rk=-r"a>US<<SNL<Z#Y.-]4-EM*;51Gm*QVG356X'&c=?Ld2,VM!n_8?UK_R$_T+1"
%W/r@8<\bMuTn$TFkX#V)C=pG]$D_^o>M&0g2SXC:Ic;K4<5QYZ7p(h!k[$3.Hh<'U3:<KSad'A+fF[djbqSS5=&;EfI&2GS_^m^a
%4XBE.*;>7._B(UP$%&K@YfBkA^&PlfO4J"N!o)Oa&4@K@5*Eo.nd=4ppujR(@<MHlcaOrkI&fY!kSB<%a);B6gf?l&CMs)!eC!H`
%NhR"`4AHHj&(r-J4QMMJo#CLF/:'^KY^SQH(>0fd:#908;a7,GhiiOE`DrB$Y6HBRe]SNjE,G-.hYFP=gRjf&hWX@L(d2A(m&$@3
%G%8j!n[JtojpkaFp*973FW5ZC1Nh=doeKLTD"$&bV]F[o[#I5\ouQV&cK<i],A4?h/)h@TE>i>iR+oSgeOaRY++I-MY++9_gr@Ch
%boa:cm-5m%lbhC[\A;C:(J9n;/eS,k^F-eTl`6MU3G3Z`R@\JskFCe7QnpnC0TWB-@@1[Ejr&o!L1-Z^Qk(]YHA5k";l1WgAU8[:
%1m2sEBuPOA0J:l=cUuV'F^J]Y[-b2Z]1C*f\NJ236/BW>mfkraRF!p<%"urb"3`&\YLX^81"c"`/5iL,a?gRP(!D2Y0:s#n.FZ_b
%Cl0t"g31@=B5>bZfWE9+keg6rClnDF[^'F61(WPcm&`9R7L_-A8e:UIb\\+GQ:lX+n`GeEWsG?Le3hDOTs+k1Oh\tr+4?tX[oHT,
%0\t^:8i'eTLpKer]4*d2o.Z#tR$%sCg/N@#'D.2HHTdF!52T8M,1!ACo83%:3'5+t.`a^e;G.1WOSpXW&6[XhC:AS%j8<<ABIk0"
%0V[M[R03^<%F/tl$u8<QgX!qQ*'!':NZS<[O'Hl(%%R\iP&VH[I'@fpUI1eGI6^A=Di\ko?@+q$E*&_`@q.3:gU/JFiC5+a`JT&F
%QcCrdn/AZn@UA,d48#k0XPg^A>h#=b@77mn=ujG.KWX/Lko$GB>6@YT>LbqR\Y(/45=&kYV+%O;k,2O#3jE0acg6AG%iECbYO.rC
%B\.PXS;oY0qK9t:\JU7FbG5rlHo,lhb6E,[n>LNZZ>N1Ug+c;[%-4F[nsg?2`mtS@@RI12**FMrYqUAn^uRL-$EhGj^trWri&J$2
%6X(WONgdn1Koq:)TSh/i(e>S_qST9SJ>BOPDq`^-2=]:7mU```+i[-5EV-\j2B7.N`Sngk[84dT25VD')fFRZklQ8D%>:MEm,`l6
%`sN@4F9\M)k@.I(Bl0gGD]TF3hn['U0cMI*=e12k2tuEefMVYIDGd*u'!R!H"HQaE0sqDHBS<J`'EYY7/]"2W[.N'`fiHDA/X52@
%>u*PrrFt'egMX^cUc3(<,G7u,"Nd[\GPM8fM3Se\:&Y8;qYCf6&I=oE,D.SYq+8%:5F`<[PXbGqCpc\t-,624K5O9Z6aD:'4-`g@
%-Vk6<eS6!@4`0^RNV>9ea<%l=G@dT]p,YD<1?*BpaT;n"lG<o,fqEK;/?E<N8R5O#m#"\trN#4-'k&[</&k:g=Y`[^(d4\Zf&'M>
%jhn*BFPMfk.q3B//$;-R[X*U1T.0r<7sF/D`.]!,<W,C4>NA[nO'.QBUIJ'd,$'E"[;*uFXsQNh6!2fRnHc$)nY4II0AFgTO^iPg
%(Io<sPQs:!#l$ke;HtsM\-Q:Te`=kfe+AAo2L!Z.@82C\MeQ[JHNulAKtY0PBtIf">#["0EF$<0c$^-]jUnR$^T/tAB2MLU%HPk!
%D9_p=dj2-X[^@X&":VY'R]+A5/(WS@Z.WIW[U"hU6"QtE.G#0_EH!B!PAC^,1OJ*U!s\>qC\t">g9ocDVknn>dT9]k.i#>LL!bfU
%O(?GrDED=Q[@7qP4'K_hZoGX!boHL;N##.t*b%L9O=FIO0?h*afTuh`hjZX:iQ`n!=>b0(K:A[&h]S*3/"c?'YVn0D:4fq3Cg2TN
%>O0Jhbh:dpB#?tE[Pttl[XnDsI58GFd=nu(`mQ\+LC`+0=&kG^*;@fF39ndq53R?pm(dNYN)H7%$Gk>3dFg$\9XTG(q-l6U/@.AB
%T5X/@;+0[5PnUi<SH&NJf6o%X$7"51L\V=>lH[S*mLJi<\FQ<5$M/bGnt;lpk5VRF6$&ECC7,#UWe7a5q<odD)Qnb<@K'!O5mJ%b
%Ih6.t[.3!1A@1cuOjQ)%pOaWac!gT3bWgmYk:lo@%eFTj&_]sHT/qS33bD:.h$i<@BJMsCl'=;Y>N>Y!$DDg]om#J#2:0*_L]X:)
%We2d"M:@q%5YSJd<F6QcaXUCqoep\#Q`!NV<^D,;Y?$MGg9]:q7/Sto.E.gWX9:(00stO<@&rV%>\iph#2#DRh9'$L4eD.J<j7r+
%goK<LGGo<d%,_YI)9S=g[?lZ891$Rc\3/ll%$uHJ'o:Hk&@3bPSe"[%o'Q#/qXjGc"u;Nrm&PVL/d%Nb5k`eo1m`c@)#qrf"u?(2
%B)g6E+.E-q#NHnpb<QQ7%-.lu)-7%sidb9"1QZAu\O80A/J9tf_C-lJ_F/K,G__6Sd=MTKB8_<C$J@oE9?FJAP7M.7Y/+0&F&gl'
%6JCW;b:,YAQ9c9i!3Xo^T#S*q!+nu)OhVp`g4f>Wmr;37DQ0FK6Ki1$:sak^Hdki'\<1T/d\T7Gqk@VfFe(.Jr-+oZ@0^gD8Pi:T
%b5?d;jKc'aH,/W.055+[:;.ZngkF&Jd,WF1aLLY)1Ir8(mq.`S0=]o5FJd+Pf7a:)K1tETP1Xe0b7BiXII`S_V`Yie!dW*oalVp5
%PC>(*1iu2#Cb^5P--7UXnLt,T<d;W#,h#<o7TQU*,NMkh;]H-%K+<`^VB'%1[&ue?p!au&o82UkRLQ16s/AT(/O85gdecBJe8fLt
%W''Z8i?YlgO2!t$9hb\*;Q#@TXV-mCk>P(n5[DtWG[!To(HqO-LDLjS7EJ0GIFUlj")L*OW/`5V\_Q'f61Ub<f><-+-b*3W7t?Ou
%m>:?ES<!/F%05LLS>AcMX<WBtA^Tm>8gQ.%9hAKQ>8e`]euA/G,e85Mam`I=:a+)0m,6,gbEh/gmShl$D@fDf9XD/ZWK?\IaQiNR
%\Qr&[\U1(<#+X5HM)r;OOc-PB^'VpU0TP2p0RX_"^';7Ge"RoS;+sh[gJBF*P=g7lBr$(\'3'ZC`A7e.qVYi3J^D!jh("L2%Vnp_
%Ij8]Wl4d[R>)SFUb2(\<c$H@/-'t$-X.86Q'rNA6/k2a[Um,I7#HqUN\#k2&X\FE%/EZinZFloPkJ[V8`Ufdu\DhYu_7i/mA$&)=
%K=:/N:j!H@oCO(75+_7OOO?(:<KmB0IE2;G0`kGNMnGoZAO=s8AP[3_Pp!rL-YHl9>-(Qb!O*oam@=_u:JRS;XpMkWm`A$KU/e.=
%1/>Dt!VS-mEf5=unmGD*jD6r11S[tnPV(PpD7f/`GomGEF>Bs<<L1_AhY4[a:%+$="d<'b7G4ZPc7*Cem:'5VAP5LXU4>U@FfU3(
%p?SRm&Z]3=SuR"JNt5s/WXJuo@J,1p21[t!^P"0*Z6<eKgPH]!@ak"Q_UIKk.iVB9Ys[N#<14K$>2"PE7(kG&oYf@TmRU.k>/FnU
%nX#-[=k-Z[mRZ93B^-su\g*p@5ksU8ZKVnQ_5t"0AbG+_p8!!`C.!,BarL[b6M;;QPb9[;/"[SYV5@m<A_IVfB&/]9hItq/XR&Qn
%-mU$2fsQ(XG:Z1=$#Qf`%(\*Ce%,o;9iRh[OZTQWh"=iXpSECo>do.7QQk!^f+2rUR=JS5MM\8n;f7n^A[BcQ"f`nN#:V/U-c\mD
%?W5)ujeIniNK]4SO1nP`T!u0!!SO&=m/+FGkS=lu^6IeJPN'_I<MA7[MPj@3>q^*<=ZA]eMQ*3!7+mpt7Y7s>SL-O^V[5d9D'PfL
%RWC&^EfD^uIUukYnB$n"\@O?T06aiMc^0%d1KLPM<i<dud.c<)N^cetH+`qadDVNT2uA\P5#Y>&<"usg24pir`XeW>-tXrdR>PIN
%U6qo.Ah&\+MINHWR&ML*.M]q)@Dln>a&0RD?P1$iMoPf.oc[PXK887@ECSS@`o:tr/USAD-(o%lC-["uUe>Bp'[uniq%&I#h-/P.
%QDYb\r\U<AGi3-(H3e1S_\-"g0?3!+<_.Y[(@g<+Eshb;6ni^$rHj"N9LLRIT[+M>EsDL)Thcs:IGctdEuGKDd&YW/S:TNYNV5L;
%IGd!J[WmcQ/-XjZn.bL%'k!q"E&OSdDh]-390mJT5nm"AmtMPK/aru(3D.83Zu5_)[,^@51XHB0UN$M7^id$#F0q,>o\OXG+TpOr
%c9NKEiT#3DC,Ygg5+JM+i&U(?o,Q9`FNkkShq,$CN]+Xqc#mP,d<2fl)<bs:#.g9[d,ti0%o#HRU?:NF!`Y@j/=e?:g84rB@cC:G
%AC[i^EWE0FQ"RLlL2s3UVAm2i>Jt"Yeb2;JpYoU%5:!99.iZp*g`*G_ARc[kqA?;t:p]:CZ+LQ2ELYU`M"<5X?#IO!a7S@kEn*;!
%h.HIj]"I7u_TIgX=f]P?=>2]^5q]+lCGZ$[!k0cu]6*D]>^u_iK\tCEauJt-TjrV@gWTI(Mjge-ScUf*D/4cOo_@tBq)B^E(=W/T
%^Q57=OUn$R,HZ*hT-`ZPFnth.j7h^;D-K=!GGA)!<jLYD]%%C06bE%tI#bV(jeM!WG^j5T\tAG2Bs%7]Vp.?lB07OWHA'iCO.O,W
%IOfu=IQ@qph[N-Z#1)$,)BZC]975?IqVi"\g@q\pQgqBFVe]Mb_cPuYTU'DU]+(q@[HF_HQQRE`EG`FY+i<\UrbW7NY0)`bIo3It
%X6LQ-0NQ/FrXJ2YJ9"doB!pN=SZL"E\*5pI$@0Fj`m%=(*h0J$ZV_V2$3kGXU3fW)(\Cp#/BRS1+d(Ap]@Od,dF@OZ8In"Vo&.H$
%gpEYYs+$L:\m`t$/AYP#lMfd>:g5LX!sj-)?cJ>\(\KLt@>'bsiMqSdee03*K+6fp(J&jKn\*SW`t(H:T%N";Ec6O6'siVAY!+1V
%@m1IY2=]g)ga71p@V7_X=^F16Rs:3a]?GeJq/F3`(o<heGqACQEHhq%_9-'dh/D&nCm:tY)&i[YO0@7E@-*NbOI/LU:3AcrX1]d)
%-Mj!Y06Y=GI.[@5C-5+saEFpZn<T3/Z[\3UOf`!h,i)ALjeM#53]bjJd>sO!X4Dr2*BgYS`h134d$iT0+$G,Ol5h]tr+[r3db:ak
%[+;L,NZ&OGo'u>K=1c%VS$c=U%2%25[0_s9o!Dj!`G-nsPHTD\G]&HeIQoE\Y%.B$S/Yp$XNTFSORq2ta")aeEoXPu\J/]/[1s:b
%c1:P(\Gl9^eCYUJ?PO)tFi.C\>V$,lg=s35fB'9loUJWQq1&A?*1>^U,*!0HO2!`*GHkENn$=*K>dudD5=ahuW;PkQ:F.JTj2*Ah
%4=EGS_TfT01G7IA$TI+_c+%_6<;uB^nos$/p!g0o`KJbsYo;fMB#)!E_@Ct+jHX'a"54#CQ@l(HZ=E7A>Pj^JU*5%,1;o1"!g'LD
%D7^r>P1Ods%_&Z36P3n\"5YSI*Z>R2^GU;7=hh$=IRRa'&p!0aNc0DNLSpu6>UFS&28Ysm03P6/XooD9_[TS]l2j:*3H`\o+P2G^
%gD[7-a4S=R/;2X&elo;/S6A^3H=*mT!65lj:+DOa$kK/*apK#;#Ju%1jHF@I,nGpFj[0a,g>GdNXtQ;,Knspq*.;!DDd1`G,]-%X
%/"6%F+OJ,G]>Hn)4DjYd$7g&rL`)]p3/ld0Q-hj*%,tb89S;l%a*5_G:$r8T]M>/W:HkB@jD;e<gUOZU"K3N^i+S#n>X&0h[USD,
%e;?1Z=d;7'Bq/Y+[7P@llB)(bU!_MtE'._7GlZ1(GV)UCG!b/O@^N[dW5on,J\q,+GsWn*EH#]J<2Y$lbg;K.J3aFS;)gT%@N:6E
%dp/a&*ql/p3hHd2;4_ICQ;:fNZ%nc>(d`1C)oc;i*PtVW+toMt+Br$)k(31>[p<hA/@W#*D;pb?V`Yj_-RuJ"E4:*X`3[V`?Le@S
%`o=KHoIKE<,Isq*Osl:G.q0V:!B4fe.4`LJX5D@;qV/#J`kMGTC1<6cBu*e*Tk`S',rBZ71q%/Yr07HQY6n]n\Y`-L?4J<)0,'kV
%W.;*@"]4KA-I1nle\^&<a[B[\o$tqdB7t%;"S74Pfd*h6\GUqDAdr:G0C._:Wi2;0W\ugU87$M.[9e2dH+U1^W<nca<`A%WWiE#B
%Wi-gATL0M"E$/:1;d^ngC_\6HDcgU&*.RWH*l19Nf[l$2o"_Mo-hs^!^od%*.Pb!=ARuK(Xt:L@D1V:8S`4+dWcnLq]s265c73[^
%V.mUQBTo5*E`XVi5'>XhdZq_h3/;eA0TUm4?<mFa7sX5FcQ)&7UHD=,b%!?Z?J<AEP\6BI1PkVc.J*V74O'2GbP2@NQgQQlU#X.>
%fBApW6dnD@Id[N:LQ9-[pbH[mo9^!+QTW.R0$G!s'BX:u_`[HdM_AQH[qrn;6F\=`D$A;OUHG&WXFbP`De50R=4f.g##Ut=^\2p;
%CF.&3qVk.0LO">QR)a(Oo@Q(I1P^6>5a\HKs/gs"MKgGkj0I@dD@#jD6'qnIf.5k9H-1FhHH8^CBD#1M7<u2l1iTb_Z.K]N)2)Sf
%0J$_f''-mGD`:pef<-+&:8^5@q"BIt`oGNoN5l_n*F-gsE]t=BR]I0U;r/!(MiCAu4:`r?pZU,R$ONH<im%573&Vn+H/<.[&9_Vs
%J58@t5)p8@l%j>1kN.n[D2M-'FfpeqK\0rt`u7s.?):c@cK"8KE:e"\S0gp6m.4nd-brX/<n-na[nZG;:REuu5PJZS329dW#5HN8
%c5a>r_>:P#;MX2#%f+'+*`%'aGien!HK@f]cAG];Lf_7[37O`5?MOU-?qdt3Weph)B84ar2Yc?7^Z<A,E).oPi"C`PE`"dY=QYON
%eP2P-=YHpYGgVdO.;PH.gF-=J9'4Y3"mib%S6hdWTFnm[f`&/+KV9aHhXOkW8a+0C?9UAO;d@Bdpo$CP&<49YXf7EEAW^Ll'`=tM
%r,#Hj@d>F+q.QQs_5*49pTF/Blq!]gaT9/+s5hemf@OZ%2u2L+4]=B>bJV)Br6^jLppVMuqtg4rrqBJYr)`lJO$EL%o9WNC//Q@Y
%n(tcbr:T.AjN$BTiiDC3bNhCJouDdap%c`*q,pbSDdK',lD9!RXo3A#(2n)N(>n'JnEKeW=i9E8N:4hDppODH(PfsKGt,O.cfZZ7
%GM_huX*:JFfD[>IGl,)-Y/C%bAcCZ]kl/?2423f!'4q"5dm#CDZqL!EN'$Yp#NnJ1F5%tmdW68kiQ1M4N"u@?s6ho.k4ZN7chG'%
%f=Ut,nE%n>^-(oHQt,^TYR#V\a8\<bRl=-r\$'o[/H9qO??i)Ve&gLQ@fH)`fCS+YO$EL5s'B%1Elm43Tg(P$5<8\!oh,$a?f1ci
%n`cCnW.RS:o^f0,IpU]!5CK\@Kg23#kG?21T>*QM]3NE',6!3CDnY:oRrA2t"u![g[c<R\B;`XK?!Y0lGBU=[qQ,)]T723/IC&=3
%;a,?sS[T+d=3fat:PK\V3a?iMEg@HsV_Xe<iaqB3:H$FX`M\2I]/f&H/K]E?eb-C1f2k2YL^\LZ4A]*<h^hR,Z<i$;^BW@H(S?(p
%QJ]LOiL[gF.J1mU<PDnO+;T1/mF1%l>C<mS6pE@iZ>7UP5/7"m/V329K&iD4IRThhJ%I1[PKTp1Z6"J,I`iPN2p9C2Dnik'hnd)+
%qoSLKXT`F#oS62b49FEe$?tRmJFRK=eHB'g%Xt:&.!I(8Kjuj6NB_gbq6jBW>Y-!Un%[pJO!D)&I0-$iOo+jY7@nq"$pKVW3pLX2
%G$^RRS[WO_:O\R9\+J"V`MK?P\?>K>s&s?tdZrq^nZtGaE)J:-b@br<*1uCAhQ_6ASXZ8B$2p7-JNPeJ53Uu).GI)dp6OoO]!X!]
%??obPUh.euK=otb56MK<gcQl%gNc2IRq+hK\,O9^F#)h>^>Fn)4PC=G/AHN(lL"-Hk1K!B"Y"r>hmR=>d0"];Gl%dA1<V>rcS!jL
%ZD-J[U<9ZG]tO5o%PF*kIpLpD\]5%:W1Ca'Nd$(D0l$7)D6#)R$D:q"2>]aUG3$C4mXo3H#LZdX=hgg3eX,e"\'%#7]Y+1-j\)#3
%G]5l)n!=N=9/-V/BXJd!Xng`pTD<:2(_o/uKAN`fZJ1epc4f6c-\hFa3TD1+]Ej_Us.HgY6&op]cia2s/cS<\l?ppMrjb.>LQ@Q^
%ndugg*q+P?q;LW(qnINj^[@*mF&9Ef[!^3;`G]eW4S4LgP?2Rg,CcZCAFHGnO28.!cc)CJ>2I"k$%KIFBYXr$FWHL>S[AL]fWK!W
%lD+dfOqf3bp@SFK,P8qC:g<nQq>%X\Zca"AFr-eNpUcXf<Ec_iG4s=$GDN*82tY22B\H3WM+:SR,8pOmqN`&=FKnEH*o:b$&+6bs
%pAQ\t[e7qO)CGZ4@V#bdHu"aij#WLpFEo4-^AJRTi:"hm)h[Hg([UTad4_B.?tV&T]3c)r#@i^bh64TfM,DbBlB4)$'!"4mJc"@R
%m/82tIBiOn"4f]F\,@HH`AOu_qR:d!rg%E:T,,K1n!8kbQ`qq4e`ZN)O)N<j8XhHVkC6I/`dDGecM19&g3fu+OL<BB@>!fYnmE@V
%9`Iq%[iKXJDaX-rZhIe\XlN$Ik^B&1qB&+&Se@:p,_/QkH?i;39.Nl68;a:EWug]<hhV8o9PVc$RI7UC]hYc14]DtN&0;E+,nr)M
%H/R*Y']?kYX_X:SYf&1Dl0Seq$U%,P3El3-#[2oB4r,7e\\l<EP@r!*\uq3L%`SY[^;,Nu++b"@GeQrs2G(YqX:`=#(`\SX/&C+d
%FKd+C($Z0SLnseV_$Ceb+\aY<8'Bi."mLT`;c5Sm+;%oEZS7J0M#(2Ij'Q=VrsrSd='Up('s>FplWsQpc/U`P+Fc[Rs%[V22ag44
%s!A9AIhO"#s'Eh<D]f31r\#l$HY<EkpqMb%r^SBqDj<l`6auX$P@!g0h856._J=[g#0m-ae0-qg]QT`2LX<R&,>i^.c-W?6:[?Oq
%%GZHCB@j#%*.i:tO6hG_d.4;RU^HMdEjik`Ze"TsoL9>6Iq@^tf?k5kgKDD1`Lht"d4bLh?\ao-0K!qNeEGNNf70d:?e<a98&bdQ
%R4el-m]b737V;"s<XksGV!F4aOUS#chfd45:;YSK[:U(ZRku-2PJSCO3mr,F>H>0KQGW<c5T@4,i"+c!]nYp\J!>]4I@l^=NPD29
%fJ)\AdN4#R@=+kV8*X<*l#7B?-IR@HoN5o%948VQ?XP&D@3%Pk1VbAdW?)8e\&]B%\'$L-^]bP!F3-PBoDh&>._ZV'Z-%^(bc3%F
%BQR@L'9j@5MBU9\nGQ_bMg_u)nPNnGqN;mse*`:_TgNJu`eS(_<gaI#Eu?u.'a0c5&E)7-!F:+TC_[m"=#rAb^c#3qB4O9oc=lMF
%(8bcE^3&SsE=NCbi0Q>J_PQ'!LVu']n1Tab6l*m-?]^?7.g?]a#P7UMg%\mB9A!\.jZj&o0S/Q-"_Uk)0O,b"edg.RE9@"J)%<'J
%K&Q`cW!K$S?js<\$%72GikDULB:$Mh-?\2gc<%No?cR3O,a^MO(*F#-?`"W(V'_sf4.]bnkfR)I!NPVi#tm.IK6tR=l;f3l0Y#'Q
%p,0G`h4$Ze6^5Z6PQ4liJmfR[AkYL'J\N\=Wk9Jo8^C7=PHB,B$m1^BAf>*+9r>-#d>gYroC+$dn0A(j0+f&q**O;OJtR]N-6:ER
%[<^j^HIOd.;'0/*N9DAk`K3fYA1Sl#'kJ=J@8Gn!*bi,]:"a,(mY1O[h8i\^/;dOgcl317aI'dd7cBkN"A8[)3/Kca$8iN7JKk*c
%W-V2l%3JG)Jl`L9CktjtjCo7H[4sRM11,;jEPGmZ3o83tooK8"[V023^uV^>h]JR7AA7VV;M_!g;MTV%-9tAM"H]jXBZ8L6Pjj(f
%ng'1\d69_*3YLoV6U6OVWHiHE!Jr*R9#]10=)\h=0jI"<J^O[Z5_]t(KVu@R#ed[^-P6E8J5=2#VM?qVTjNO^iL$d#>`16h_#fB^
%lNJ?/+r$r,4ub1H;@?jdQ2ZSmZI2P4ZO/]f=ZPkq6]U1D^Ep"<DrXDbmi9\FLMZO$n4OFG0n[<n2HFhd5t&-]dNq%1KF`D;WC[V2
%$BF@d;&@3K?=tZrQpkX!'r6D$nC9LGVjL]-*%DFMM_Y'C?h=g##,d)^mSH&%;esSk%g%0LJM>ME=h9^rI_lU_r>#r9qnsHd`!,cW
%3ejg8J2S['Jgo=Y#NCgXeJ,4KMe>YP/HSdb](g%X5j9aB;h=e$DS]hXj[t<bgIGfu*?q:Ubukds8(8MBOp>_3&)*'QXJDW`GTK#5
%/@feWH*FB=2SqgQBMO@t+`><mEQ,lL;FI`=2&>+hi%ShL$L'US9+j"Es'`.`A'ral'`a'*?dJl>+3IdT$;ZSo!$AHi!U3e`k**n7
%%3@V`JT(]*B=B*YA9O<HQHt9f9;XMkK^q+Ihub-aK`dfal0thGi`9P.eMEr489[Lu,nF7[leO]oOBr'4*AC4Q6E(5&T]S"Ok.Wo=
%Ug:8++smX:Qm+RmW+e+f8CrhF-VW2%;s9`"Q30O/`pjVZSc[amIEM*!6,J:qFa^XcH=Tr/]3s5GSYJW^)45Be8Q&bn1O"sl\^-=N
%.m.:nIrkoUg3@.q6E+--/%3L(@(:fhW%I<'LAS4(aKUGP/i[V;@gCgfl`p0NJFArmU&Ir$6J2)5aHt:(&Ofkkdt#\/C]OJ[4XC7V
%]0h-Od$Jf3I/a+tQ'?N<%&kGFWq$$iidT!X(_VPHeUg<dps/^Q`ECE7f(;;:02OQ_Tu=p76`O#q^;Gb_KO-'no[k*hI$f&is'UR]
%`!pBbX,&#/PTo*'+C`Dc&e70_JapEYAQ5c1Da^ki^F3]KdK#5J=81WH?f6V[*&*VbMRJFis1s`?8;*,'!ric+$cEA)!l/,GW,od\
%/]'bnOa/.gs$d`Ui:#3U,6Q?q@.@og'Ar;G>'ktT,k!qL0pPdJV#/\=!!(\D&tCRjLu]5j:OKF.I"LiP9.c/o)B.]dr&aOHHnQT[
%">\(RqG/kpR?J'GMV`ggQ*its$Bd:dH;J#&JOH51(Zn<VA=*leKFuP*s$(VIaH5o\UuC4i8V<HY!tXa'V3prYN04h)i0M7c8KnAJ
%b=Rmg3oJtZJ?bmb&_>kKD`=e/&(RVXb6b.:=ZsnOjpCl^>*4Eq6jajm'hl:3*5ffG7Q_dY3RZ=-"Wh91d@DtGo@I:tg26KY,GD7N
%dNLfUMttDscP_^Cqu%FkdW>@/^90<hZQM6Ws+>U>h/<,aZ/&TSAj:ZXpJLk6S2I<(qQMpB2(J5uC!]5H5',.jG6lPHrLmFloP*Af
%7c+*N4ERTg\s92H?f%2,bP5O>#2Qh5"ib?NF/=>BT'rucrGpddCm4o9Hb91BC@.4gQcE_;q:]XNK8!4<heeTd'D<`c7DMLZIrq'-
%d4CE'Q)@*Xg9%d>]ea?:`ddj&-O+4\>.sgj9&8?E,XXTGp9tZ(d7e'JUA%5HbcS0(%$'#,oD_C\C:.9RT4"YOY.W8a5=1QN3rc\A
%@(F[b_LgU9C_CFDUt4G$h>CZUdH:I$UA41%`Vg](5=7jAT@j&RBDghds*lDL^Fg4dIf$ZX^p\_'K#`:?#/,K_oktuPriIHWe19M6
%)sU8X_k0lmrrh5pK)TZRq9NO3?N'W5!Iau$OQ8QPY5(<Em(r-^8d:<E.006egJ9]uV!@[ZDk$_XjL=G/r.u'4qf[bpr#&N7:%l!1
%",1`pi7i\YnY:O2nMf,;`s;CU62th(^Gi/ldJNmf9Zt2im_ZG*52B;Nh$6j\4mmr?"$G<[D=Q4QIiGG?`8sR;d&keQR/H^Q0IoEC
%r@QUj>3hNT?uPuO()-VT(DF!@TZN7.0%*pI^YZ"k)hZbIj'&YB*11iEE1lihl]-Zr)).Ze*@cC'f35TMfO;7D<Vd<bcP=?$mB'c4
%YL\%=4"g4&[;P##8pQ<<@mu//dcFl`mgT'MF`P1SO"C47^thoSEDUt_N?,GhK9#&`%t:ZT1\GO_pL;_um8?!AWcd1c<0_X5CHu=c
%;R9e7;ct8Am51!pg\!VprpUKI>@Zn`^E%4?@S[?ILHeiPN0V!QEkBi'Nks64m[-*0W,I6cZ!\XE5B"cc\mbBmgN!6[e+/Um^0O$H
%\aH@)hoT8Bd-m9(]hSmdV"+bLd\r3!L00?4G(r(jl$;WleZQQlJTMsFmI8W??".>+O`?#Y:8n<uhJ9b6R\^;GI56!KaKsC"_.Y]`
%Zb4m/e=*nDqcdp==Sl`\/738d9BAXLdC2.VDc(ei<_Lop;X:eimprs,7HSp=o._o71sU:!STM>Aapu#=+_QR8Q"efaeRH.3<Z9Y,
%jND&?r1[PRNs';VgZ;?)\CMNSHQuXKoL9!"mHd:2D.EgmP+t;L2`nHPqlSHI!("n44VTGdN;.H3@m*GgmX<*ln$M%FXgqU""6-cY
%p2_b9UTZo5S711.G,<\V#r^3mg7jCp,>N)EVX#P!U_AlR0BoUUT\6\BG#moQZJaIJW('7b=_dUK@t9hBmt6?:iM-pJo*[dnm/@.+
%9,8t&Y9!VfU@?'13eRZZC/hNr5?2cc-^OdFs"dj#OBjV.&"enOZnjJiB8>3Go\]YMf'VCL5U\Z<^X3_^d3\Uun/G%+bR0#*C/o_f
%akl]i1`IJ3ouUh5T-2`,i?1=\+#rBO$3IqFe3DE7a.;XL@d=JQdq9Q-5Kq<"2qBX-gTWdjc?<V,Bd7c/EZ_8PBF5)T_j2pA>#h=V
%^XSLZf.Kr)$r=Q-Y5G:L8*4j4nqSTBI59XG-aWb_`>h$3g/Ab_0PaGQGiSut)%"hAE_mZ7BIJ#<2ecro0?ojr_2VY`0H><m,*ABk
%gD*4<Ff8AFm32:d2-Tj#;L=esr<li!!T,\+Pjr`8^GLae'=H2!`o<CuUWfWPUkehdUYh3GIApgukcl[&\')m6U]4La`ZM%?OL1bL
%4--QuaYF3rG.jKscB5M,5&L='lFun>C%$MTSC-:#]c%G0M7^i;Ib^n(qXkYOr0LHgh*+$Ro^aYX,6=-,-gubS)dgmnA)6fIFT.=+
%lp_<nCg3teqeWgn=rdnnlAtsQDuC5YT;*,9<k6`Y(B5Bd)3%\1rRL8"DDg,84skdV@PDU#Hg*Z#]75:YXB4XC.t@J-_P]%X:6/@g
%otEIuCdc#J(0Z^CV\Ad><iIC;^).<INhes&64<.\L1TE&IlV&Ien[CVhH@];DPc/X`U[lh:8aR,/,uY>c#,<-_pMh/\(&m$k*t<r
%fj!%lH!`J4Zs1niO1nie9+Jm?7,7,N8?4*"Apd$QLnCS']n5u!HP"M+Xo2+l*_\N"\UUipmfZS&ePB58SSl+];+oeDm;G4]IjdFt
%-WEPr1LbKS]^9_A("O1<oL:#]-3F)k@.Eb*iCK\@nA@hk9iWPMI<BAQ8dfIaaS4JcmgnISmi.>+k!,0Gd&QUCK(9prI7uCRqVfN\
%\+1!L^KKhiL$I8!^QM90*j+-@4TtNhC%V\lhKq1/g8<J?=sOb7f=G=0-T3pN=sGBNQNMH3h[eG?,3^p/UP:4-A*:8j+sgJGm^9mU
%Y=214&bNK#bo589&c;1k3AoIu=#U6QJTe2VQ2_]EFTJu-:ZaqEM(B>i/mr$bdYLJKSADu)d/>tiNn=T/aM2XfNlo[m6P&lsR!r\a
%I)e`?e.6t"*;Wou]I'c4g[7;VhM8]!2+8-p[(`:4aEX!%5HOjQl!]S3<^)FQ.rp1eh9TaD]13<_:ZdH=`/b/g<kH%B$2-g";QJ?.
%D!G*7;_.1MpV*p=FNZtNnm._^!V[2?s4IE5dm7gDI`E`3O<2/V+5`%i@B#;'""i5tlJT8iQ1fDRHF9q1f[9Kk#(+](38e(0rit>"
%[SN`7X]t[7`28GFCrma&qFG,6%Ru(02!INT]"bb4'Ya@@l/P9?j[Tc>)>?G`m,Ng]kkIm$B&bC?'3\d[Y;@/bpf*3b&fD0<Z5c>m
%0hRP9XiDVO8EVeD4VDuVNL!s+iM1?`1gH\@%R5phkgj*oCVC7@I;.(fRl4IMSTfZH[+,+ZA77P]SuI/6Em-/'bhZU-9tsj0Fjo2?
%UBCK`lfAMCM/MY6FeZbm?/m=rCq%Sli!i2Ui?u*ZGZJ1j]X[8r@WuW*]0"Ll@k;p2O_NH89qPt*[X=3iK<<R+&<jA$/3aCM[kmc`
%bI'4!><LOHQ4'P2mV:m[^),\gbPSPHpY:U"H(2jRV1V`3BGC/Xrq$^R#>^&QNSVmPJ,U=Dbs(2tZ+9,h=DVSr*/=.*DZ8S?iW!;S
%(e]"4[TrS]dD\>.Bm'=*KFa8:nB\VZO\+(]oSTN;Y^o?9h7h.NLZrOL1]L;)g;Z@Dl-Be4Qe1cR"5UJ3<E[1'/+dK.5N3^Y0Je`A
%YGD-7k;n!Z?,]$d0[7UZ1-H.tb[IRBj,M0II1Dn3pT]'/gZT@gnP<>ga<cl`HLP@ZV/Hap>5&L+4N0N$ndfMS1\dXHrraO`T#t@8
%;su&`[7TmLCf&4(Dcct'=0hF^0,L2L_Fe^-:@d663M'AY3(t.GHBX&1ArZo+B5[>&M5BNCI<ori[klrdKJgUoLZ.J#''XZ-M<22@
%*m78_00'PUmdZp!:3@np.4M_FO0Z97H,]?ZL!8Q*lWV/s$$=5f7gG#DGZm$r3;7HiJWXju\q$@H38uu=:I+7Vn86hCoZeJm?Q-BC
%p_"Xq_**1PFZ`p5,,31!SZM_dAj>NtA1k'Ge&U#3WD%aqma6o(P)jO*M;6h.C4<120t3:UOUmkHV<WHnmBVk2:t0I:"/Ijq3J)kJ
%eB;(m[J`'5X;&)QUthr>AK.\>98WT'Y+'`AYGaj<\$.O]`1Z\aT8PAW40c_-^T.d/>2)^7PPJ0.gN]f/]n^pI=\Iml]lfUTWY[Fi
%V>]SD`LV=l;m4g@l+?WT/T:;?&+X:EIZWEsN7[#NT+dWHi9352<Sa*uiA/YWP@p=nZE2PbYKkVQb*JNA$#Yl&`fIQ:mbN'_A.X)[
%AFch9O`n>EM,\Z0SG!b^j15$'%F8VZp=A(BX?"ZmM4"=%`Fn"\=<).qfQ_Q13>Tf/HU,7"Cb3$/h8be@Rff.N],csWmU*WGk*CTZ
%,'JCGd)9nlbUrf/0?geOk>-B;cqL6]Z]@;![=CXdRu32$h(H\+o==hP"A=thP7"gEC@sh7(JHJB)mPh(k&kJuJ'sA%m49VpM50T7
%D#Weh/@KM]IuYhu$a[+Wa2Vl<Gs+9I\NNrNnT]O-`WrCs-DjhP@rab^(K9aM2s.%3GUt7fS$Ag=fNi=(69fc;>FdfVZ*h",K@p%R
%l=2BqEYG_%dTeDj]oM!jnl+A$=Q/a$(#,8Fgr-W23q:kJ_B9lR/PY*Bp=BtaZ,8$$'g!nC)mPU/4YM!D>b&gZ#1)>7MtVN^G'1Rr
%K[\^]S>t5t;=c..:_`N+o%EP)XEr9^Lt/PA]<S8WW?6JTE].F29:'S%p-E^Dp/X2'MtQ8dk'1^C1`29t14/%[RJ>;,bgXPqGTscf
%N%afM+3'kbddfAApKh9sEUg]K4mqc7c\sM1[;O"9VFrH"WUAm&GkUCsA@uljj,J!5DDfIYD`/-G&#t!5pi5o(21F7D.umst0[NP*
%3BhnA'"]5=^V\LnjXiCI3/%B>j.4rpcCr",e+BP6AUOEO3t\+Uet:s.NUh@BiC%S'?%2%Y`=u+drRXq#^@JL5O/J#1YN!+km=Y2r
%M,T6!T"hAH%r[K@Gk$'%+at<$SW;S3SagshYgeZa*`$,&cYVb^VMVdBZVU,J<;LTDr*[3%0g2.WS4MFP4A@fY43nQaG5=63gt]Y=
%XR1+='A8m;4gE,X$PRlDF"qYshclX2:G-KXgao$;:6_((f+[hjSYq=2LYcF5e)*\k`g-k10[8\.`W#:9@PE3dl0amAPHpfU9Wm_X
%X\EDtqT7g<e'ZY*hTkEQjG?L+-83F:(R''fQab*%F$i\dh`i)UG3Y@EWE?Rh9hiB%O/A(=YFR+<NA"'Z*P0j$WCD1<VO?/"B00%=
%(GDniimdnkeCDr9H)fp^]W&r?\=RHscBD1ZL"Z(^WS[HfoKmEb@bNoU9hm>`/`067G1tgFf"jq#qXA*6IJUT2e![oh4RGkpj^hot
%Fa*/#])Rps7qjrr[MkW,eq8ku)9AYBeRuW]P:nIobj9n>S11mAVIj^`8sPh0G%Z#rR;q:]5I3.04.W?NAf%e1_caCZ]/I9Mf1XD,
%]]FIGLWPnJm)=/AI.j6SgR2o['lf\q\#(h@-?F*^\`D7_HqrP\hWEBJ]pH9(5#Ie2RVJ2O0&*eG3A?t@k$At8f5poarH2Rmp@1&W
%r:YPJH#pWga?;NU`;Y.eR5j*9kU&p^]ue4aStA^Ka,^s/1I#q&cci`4f)GTi6Ml'mh^^PG%k>9fr8m;hT<CBHr;:@+ja:LL<I@qO
%Qs<98W254?6@/\!HsrpUD_IW;)ntf\F2#-QP!"1s(d)+ba[G9;0.EgAc"-+=K@;)ic=Y@cB=fZ-ajSK!B!Su'C+bNbo9I:Kj5]^)
%?]Bu_lsTF&nR/?B(U$TCmhUHo`T#Y2?.kX68Zt,O2#cL9Mc.CEmN9H>ZcCk3;a03XBu.aUjOVO-9]N_]Z]"8:am>5'<H@fge$`_'
%g!-t]f&kp/Rs]"I)-`Y,YdJYga`at6QgA06\\Y;R'?/gOj3rB6GLGL!Rsj3tnSlV]<G%`X"qrHb]_go>j6$XW9]I_uZO(Pm788'^
%Q\f_N@W%q/eLi4q?B7nS7,hd\07n7&/iL#g8TD=d0InU\O,eIST2TcJ0!d0YpL-u915dNcG^ONbbKZHPHj_R)eD-$2<A7W/TSD42
%gUU-nC[=Ji]BqW/X.loQ4#lt92E*_s:,_/.=)6"VIUabu*5i@c/7>lV_]UaXed7B-:Fj7KD#u]S?^Y8iCKqo4/JZ98+MQDcQ7crK
%SY\eq2$_S]:[Bpmb?f@eYaim2pQg`JgYLuVq=aH$^Z:og3&>QZP0,sI<Xt`O>:V$"Ap3:<IeBqVY^W!G?(7n?Y3qXJ.]`;V'0E7c
%D8Fid2g2cJX1@fggA]CQf%U)Q*g4<BVpUo9?WbC`XKV#8Dq>L\]8,^K_L-77gF3<*`Ij/h<*JhVeB,pF/6.+Hl(hg5[kDH%\o+>8
%e]Z#*q;Z``rB+A3b"T"O4D08@_/!Y\j)d)$R>lHge#am'RV["oNb?gWG:e0imr)k)jc-V%`5SC<;[<35h"F#hRCbV39'85GHRJX.
%WO52Zj3Q!4:N'_,Ht2U;Z7p_+gaap/4p?Z=g<43(I*h>!`0P":2oL;t\$7g&O4.q#:0.'Hh@d0N9deT8DWVG@0:NbRq6eK!\`Vr'
%HuWe9.m5uk]QJO+a_j6H)r9o7!ScL<X2Pb,-cN"<mAI;Eg<RpYF`1pclL&KO\5ir%GW,E11Of(=GP.P9(%1M3FF%j!l0S7lDq9o=
%mB&6$ftHBZKC(g7Q=Kdup%YndQMKkFEtR<eIpKV,*@1@db6PR>LE0W\&*=DZnh8IIm&:[`gfhH1*8^GYqF@gFqV]FJ[)\4;Jsf2t
%k,=l5Zc=k[LX,ENIoaU&ro3eEli-/Ba^T,PoOMJ%\9r=@0\\%r`buJY^UV!U4C"=8-pI@jjjUc_=o:*t]sDg,FcndHm1u$qcG\P=
%Ha`[U[WbcEb!2NEAkkIUjuiTE5<ZdP-caQFosO^Ogq8'L3(V7E?Tc'h<A"pq'C%>sHWn.r]k77DXOO1U/NrL(?PVajg/kKRg"gGQ
%hOD.6iK&37e[tD+c0T0kG*AJ5>i"2"4);=1gZ0&BF1]*"<5(LY3n_2`(Rs^8/'7SB60tV#f2-OdpW:n5r;G3*X6qJS:Pjj0Denj(
%D7M;1GLudcBk",j;d)tfSX6KWLF8q7f&9JOq=sH`Hr`Bl/9g:"`ta*=Ig4A$:3u>NV7j38Wlk.XkNYp`kuM0;Y%MP,[NfOBX&k]m
%1V8$>kF6CTqSE!HT`.hbnOLn"f&OTgeG\E#Y8quL8$1mN_o:66VrgX]g[K)mQQ&Gm9@o0Sr[o+dcgn<GomCeDG^]!BDQUVU;pFUN
%=Y?g_HI&-[F!Z=s2_PDRm</?dFmV&oEq9'Q`sUS'l'YqjQ(N5<>*VNh[6:^VrV#q35ArcOf2arV3J_kh:[T;cm6kb0VKqbTf#6>=
%<b]2cj2kI`Q+T9GhTr0\hX"c9pj^nMDY+1*D2rX^hoADc9#&pM#0hUle#]D'73]T&a@WG^3IcWHEo#14+(YA)hs[t&K<O`:XiaSS
%He9B6k]k_QUf(t,@'!,&s7H+0VGXPjLjT)s?$_Dh&PP%\=_f)0](Od4&LR$ZbO<;11Y5_W:H8[ImTAQGa<0;pHk]GoUHHa8mSE\U
%<Y^YWX2mI/5d5*mYP@e#*k&K@+^YA%lk533;Q'+l93M<Al",T0&"bD'g4kGI5A7)VenBJSV/=s&9"k4LXaJ]urGKMC`MZnC2HK+o
%`qiK=0lmLVeuSJKB"p:uqbsUSeghn,NKm[WGabu8ik_-6ED`]j?g?M\K6b?#f]:\!Ns:>gHb/+U^ji]rA"=rgD7@N"eHS16JBQ;l
%52oMYNL&uk(*TLL0pjp?TEY37laLl,8o:Xq\Q,K2AkDao"7q-'N1,``:+5Q?.SmS4X]CH;)hs"0RE^+E7fuk9]09IrUGk)E^#5*Q
%a\O>;;?`"akr(T[V*0eXiGmp2l`9X&R[>hNV&u6&EU@`Vn(*!$N(im+n,)7d09^g#e&0UDD/1DVkL6<IDW<UcifEO9D!ScXX'L#9
%[U3f13#5d0qb(DXLDLVR/`62!rms"8R!%3L)kDStl`^ijp/UrTL`(93(SU90AqY!"UQ`V8iB<.oiIsf:(IK`iiE^61h#?]1>mt;n
%YjY>^AL1M*Klj]^cRM&kAeU.dHqTn`3ju&=`(%EP7bp:3ndfejs2&VZ-m-?sFWDab+3EmF)L^;t?-[fpIG/\9>Pd@f_YoA]ba`op
%Ki=!Egm=5=47$>'J%lRZE7?,O$U6Z3?Pqj>8aoFU4MDF"j8Jq@&X[0#>2`M_!po\'X^=[[SRmD9X#R3>qCn<c<:Z9=:]TGXUAXaD
%F:;aF-TAA]Th+H%b029Qrqo;VCG`ahPu1HZj\YppVP:ZMqpAG/iQf3Re>A&`0?Ed-V;!VhqR`RgC0tSaITIHYQ0:N@I_<-Cm6Eg;
%0iDf[K7.Upnk/janS.JrDNu-bT9uqQ(-%1?-GC4q7<FD2F`Mtg:>QpGTCP.4WPlWl?a=Z9?/<VqN0CYRrF9BT+/7a^QMVR0f^6G-
%Ko"@PXkDEHkZ$F]H=2jV,GObpH-AYNImb$f-[FqEc,0'cb1C"+/qt2-n>01Sg!J^UalTt?IP>o8=?0`Z?7oO-DtBr\KhSMYnbTWb
%fSXM^@e2D)fg[FDRujP;Go9s]SSkOrH0\,82q*,Qm\$9]H+)m3\t0^^S6kVDpGhV8UmCJ4F/bH#:+t/P@>cg6C3_bh[B6n7RE*RI
%h:.<`439B]f.+=AEr,<m\TY$?0VQW(-C<647R-WpS+3Wsk0pO$h-PEnV#QZ]POUp^k=qIZSt"3l0MS_<CmR@+D*eDKF`qkTP:gI2
%B:mKgD7=VV>'VRPVNuPMf0jM*E_r.VW7GAq_H5[s%O5&i4]cl0H*L>p4S?$VlH1-`aMUu[ipOOW<n=1pog#bF?M<gWXpq##hXJ68
%Q<E^L-dj@MnWmM"7B&=uBnGN96mZ1P7l/gGms]O.4isT7RJlpd]]_I0A8?h.[Bo8qdrM9_HGNC:7)$D4Uo/C,`KKLE-6AHkGMCYA
%F)l\TTprP0Uj#V3hJ`S'WTELp]HEQaB=Fj^X"sXB=P[1f<3J6]NKHlc,rZgLP2#Dq!TqmR9q?@']%"eRQJdk\^"&O)q-'Yp%U\lM
%/pA[Afr^P7H%%pgGZU?g\sDkDQ#5D)<mI_s9<9,JV/b*jPH^l@3>]_G\X)FLW.h0RbIl'A"[eqqeQp5/NUPsE9.Nqp=Q6?=dn'Dr
%N^f]h0TB!Pht#ul`*-TgHs/PVn*'Juq>>jdNErhAT\p2*Z*osjB=[]U<AW"tlH4/?H2in"1L)YnGE<D[)JGDh%[V,r>_5&DHAnt@
%*l15qPIi2aj5%3mYN0aN?-GGZEqRDB[sY/34ctlge"`2Qh#1Efpf-LU%jriRkp#.Y!ble()2Cu;X8KrSqB3_>-Jf>L]mCWWju8L[
%9m^Q?m9KT8?R:rR\>@ls>($-NT+[.me)]uR`*(*lfIiu2h5=1iC%$G?:<=<3Y(RIYRnmSK_;0HSNc%";HAa8$\2Y1/D'W-e1PK)_
%brFHe$3&Us)LA&6=`1.'MuE0fEP"I1'q=Ye1P0q"qA7s)_D#oIHV69Fmnkr%%Vg]cWQo>R8KM7#bKe78Y1E!c412uVj_uLa,9]*k
%2q%HT0%&Is_F"?,Fsi^4H<)=:"n\ej-Z?1Ml%?Ul?6NP1p)S@T>V0KeYEpM+5<+FX9N/*c%gSI"h:8RMAhh$rD@r6BiEaqCEZ6Zq
%243]CKb>W#qU0ZdfCcjr=+O0=rJf*I3=$8@hYoU,/8t48ok^DTO<ck'Xq03%Hu!f5YN=Kde1:%\nLP=+?=J'SC>7&1GQT^\_mbiA
%EuY)Tl>-7W@6:sN=Igo)!UA.'10r[N5Gl_`>GX[C5IuAZ<YA1,-H&G&5Mt=1KdjQS!=(gpns,QN.6@Vd9!b>4o[NR+0$)2cl1Au%
%1DanP<8%IP3:3^*Vn$>akOPF&f1n\iDB%B/MJDE!]DGWN7o[Rb<3Dga^)KoUa+_D/D![!:!Wol3"4e+HGMcR:^]lG:RO?O3%b0c5
%4$R)RX9'T,c@Nqf-5(*pP1-leKr/ih`QcB+8MR]\Zain7abs<uQ?MjZf@'&EH`>+\F5':GH!Lpu<Vbs?3A5MU?;u]LHcL%"mPN1d
%@M=#F4)pU02mU%Er3QZmm]JUYo$Y*25Ef@`@<eJ"g.=4L)#fph$(7W]oVXh)AOlO_.Wl87a<E11LJ"a$'U2_@*OGXD:*,n+TS1>Y
%#g%dAA['_aE$.:Q:,k:(.U;sVfOL><i,T<A9sb2]%1JKPMnttL4l`gZ5t-GYdqHX5BT2[f_F8r2/,a1EL-qPk,*Y,?j0uCXocZ59
%@pGQoAF"72-q(oYTer9O-+]T)$*J]%^-=f?G:*F?]K6PX$1TkmS2N^4)TBcIm;)JE%2DXO0jFifV2lV[g.-hjjg"#<e#..lHIh&I
%L=/72Nuu^Q2Vno;25HT5P\YI6.DAjU?AX:c7TP;V`l86*iUn57_DEDS=5WC%7*F$B)!ds?aU\3r\*mq:B/=)6#i1FZmFmYHWA,SA
%r;k(mLJ'`<`J>j@Z^V$TP/dGL\g*..P%Y-e8-4UjE:C8rU`jS-jO(_3N-$BNBe/-N[)unC]<_b78KU7.=!c1UFV*`^gaL#^h+Ad@
%+*YNYh!)K#+6he<:90Ish%rb+R,#1V["oS;Yuh3#P:M@aIW7!Jll="Xq6PuRX4nC:+uVp/;L%Y"7GAtOUYh`()UQW`M"Ba5i6^h$
%j>>MBZe(h\>AEtK[uf`*'AMRoN,C(1mK6/C\$mBC?^S$D\XiCP002hi^6Us#SXcQQqHL0!`9uX/kdSf'.[]R)TAt0>kaq#V[]YO,
%l%<g7O=V>\FhNgn#2E1bc:7OHYs?fZjn(O7DRPUIgYKDqNs8.5c.fAmcM8(+ct7-mP:mlgK3HmZKY&uAWr+1]\e`Dk?&Pob$8OWC
%COr60Fa@9HajlGu-]<u%CG;aZDcpq9F#JLG[C>e-Ws$m>]qlmGio[TmIZZfBjIX]dZ]/V.\6ONSHj%oBc3:SV4XbGXD<'msL1ZXS
%E)2q3_kE0bc"R,[Nea,4!s`VPa+`2h4i7k=HN409?on1L\BHQ`elJ-]H&\P5`)V'`l;&1MhD36\kW'W#dLj9r4H<9n>tt3N7O'GZ
%bib?se)W^RK>Yq\3Z^Z_@+7,k/2_[Om:9WueO8BTIP&WX>cKi0m<Riu%<(_6\4<gWRs.&TTsVJ'pu*W&5>>sEe1Th7Cc/D!Oka)=
%$%Wk$G:QTFTCJ6tgtg8p$i/B3JP??P^*S>qq2*(+?WD9Y1Im3LfZiOD^'OoN/go+<q^6$1ghbMi0r4X=PbVOhj[3[)Vq`/9ddMf%
%m-4c#-Mqlu>=tu6gtu?4\kU$r-?h3uHO2D(&*lUF?,EPa?06jC`eIiR!<Zu6qV$$fVsGYFYD.$/F:(7"rEh^q0qe689\`2\-.^C7
%Dg$l08hKL:Ne<8c'H8(j+FUOmI>5(2mBY5U/>.'W6WflsYSn-\S\@@W[f4bqcq+I4+C\cJ]+U'"m,d[tDE5+P3h;34eX1$10@pGa
%cfsG'kn7T1C-%'<'Skdd/qgP,IAd8.C!AuVrYaP%@FLr^j61/@A7Ie9K`%:&*@B66\[#9uq3I!b.mZ(B7"R&8*]B>m3H<"NCR;MO
%^CL'lBL$+`h$=s4G42%/V0Fn6EdNm@*`j/VUa+Al76+[fAPFun88t9oeo'Oa0:#NPV:2ikVqTr/U9nQ6[ujlPiq.UuT]TmTf7Pq[
%CEqu_^6^hsn1-cuEA*rOPP'_=)c@ajPamQEq5L4^\&NH:Zi$1o\gTt%ddgVSpd#eXd&=objtGgC%3Ep[VPu?RmX2bNB6^hSX*"nq
%ai9G4>q_3lQJ3kVN=Y2RB?f6VBYO.rr4URjc.._4$kVUbgO"R[8>WN]Q,DbN4"JHA1ERuO5e70[WjfKfQ7hU&O<9+/?^JM_PNjb'
%KCn-mipBY(cEG-bT?lKL7'%H3T2lbZDKb3YCq2PXgb1lD^7U[m]tM9S5K9qEV`+GScYJX9bFQ\L]6Q;Q?uX>'V\LT9(()kb@.rE#
%DL$Ga%EA`S/hVI"+k(g]l9I0Z=)r0Bi%h^q$/AlHBA1bd5Z?bd[HB_j789)JeahIu9s,7P:2i'raO]EF\sP"YRAM)#*B*rK81bi%
%2<iJ^_WDY<U>([Xb/H4l:Mqh6>YMj08g*Y1[^!Eq9.^l*96+<ECh3:HBBu8E.':3\.uh\oDQ@f*R.8I)s-M3LMoS)N3(J[jmIf:C
%o;9kn#-p81,`pc@>i(l>f5m#C>>HhnP$'K%)KWfiZoNr;eSB#t^$Cs:M91)ins+TJnZ"B[QKtsS`Mn]X_L6gs"Ep0Bako8U.hoGi
%'r;lJHoX!<`>hNt$%AEt(8kUd,dY3"Nk9(Y>)"qY[7I`UhL%X9S+/g'I1*JnC($ehL"q&QKOI?`hV]]N0;_`gr"sYhR9/$Q`qctJ
%l@flI;R6b5q-n$GJY,t*>CT5HXEF$$.+;um;]grqbIgOC[kln&q!$r+NApg2]c-cdA<`MC%8HH"[1D[s^)^cMR;/LGgnoBdi+*l6
%&)o&UNj7[AZ2MQ+j^CBeF6Q^MZ```_=*)pD@".1V"4f@46N?!*E@?gS88^XSM$V:ZG9:#d-MH3?\U(L9ba%?0PJQZSGGUC=[`0bN
%qMo6N"Rn`sBg94SPM=bn=k#>L4$$LmjPBZ+@4?UeDGTqQ"r'@C;6C\_CDf.c&\5#AF7L,Ee3'6)m+`YW?qod,[`1&Koo>5:jp-[.
%Kp:'$LP'N1$aI6f(]<&elkD/3+T;B=\F)l,j`<5ag&Y2BF_@nm;NpRPn-gA($Su"jl/:f<5@2DOm[Y%=4!)J2o@d]3B<Jlj;]=s-
%4q6m3\d2!1PB\tps)"W6(6Z!G:P5dH2DE4""0M.l=([B*UqN2?Bmup\^."IL^;lShS%k[b!"N>Fr-Xrsh$fdT(I&nWS_gNDA%e(D
%597s:?)t/2QDd#i$GU,%0Q)A72[FY7/6=mc\Cm8)\FkDd?3ZP3rS>=BO?dQ4lk?tq,TBpap2\9-Vj.PXY0$K_@;^6pJp$-KJu=`G
%d[fK?/Z>2-HT\ie)Vo0c<jBpWbOaa]5Q=eWMlQ>C[9f6Rfa+<"9dG(-'?;bpl'$.cXrU+]`ud+@j8O,<J4a[%hEpoUl5Q2SS?J1,
%o$P9^qIFQfIT8(rS(i7+oK\IK?=A[b=a8Sg$pM--%[L-Ld$<Ffm`%ITF),Ia6$ol"0=NkV^1gZ=3krq+*k''EYDK67c429T@[!n^
%?bgY?,'a1W7Z/tY07-+k;nn*?gmi]nF*qaf<73$cT=`PgKrIA9QLP.sE.u(NO1=W-jE8HIELP*11XFC&WSCPIW1Vh9R47'BlB]/0
%8iKDHA233C;d1t<oep-[IULdqIUq4P$b%(Y,5'3YO65jrB3&?pW,UT7oUW,MNKn^(@<Vfc9;T/*Iod[**q%Z2;Ap)7k-(K^[9CaA
%ZiP3[`l+\EEXfV>@O>0KlGR7`VnZEFD^H8jVeOr25Ji9Lk1%gbiWO1a'(=/$caGeM$!o(J9i&5#pO$U.m;MXnR"kZrhH&kbeXO5h
%cg>Q+^?')[GN6S.diQ>X#AUm-!D.=<.$r'];a9Z0I08uQ2E)$<rS*#mC:[Fc^!W%^01OSr^Yoa2F_]mWLC*-&2Qlu;9tjk+TB@97
%<9'Mp$\at5?_QK1,0Ls!SrNoZ+7La9qfKOB<_+=03_Oh56$kGW.-6p;*9Sg)dS"J\YujjR4C?9=e[P*X8<]L4!:QNo:fiou&c2/)
%8MH.2_^e`7fN]ug#&1[*49@<LH6H@'V>!6M(2#EVb:<t?Cj@u#,7(oF6*WIE#18U]%!jb%&[MYbZcQ:8EfUg[Bc7]G#1Ed)Vs378
%mXnbkRsg,SeqiJ4oZD'#r\bFB^?ftZdNs9l2SNlJdam:;[WCPgg+fhfg?-E:IHQ.aB#mH6?p?ar'3SQDEP>8*bO3d?3Z(9N+L$(H
%1:3o4Urn^0qFFU:o(9/t#V:<`?^PqJ^q2ckT$M8ol:uF3\oGcUB5dH"Bo'XeY$--1Gh<i^XY=njfZMb![g<BuI2M`;P!@u:<4TLn
%89XFL4'/cfO9@86?ohX4N8OF9S%KU-q<d:\rVY?sqqZo-(%^g:WdJo]L[=&"@2eU]rK0O("*ETn])C2a`0?C:ghl(,5'$<Z'Eq.a
%V6diY$:^QQ,I!1%$I]rXL!A5rDZUI7Hm5!5:;fSCl=PMi?Ra<&.4sMKXW-cqp_9>!4W8>k,;JanQ!1n+(o3'mFUt'X'ccb_Ki5LQ
%Xqc\le"cE#oQ"^Bp,&OJ>=CJpqfp:</o]64/_\T;F<">4&K<7)k7K4%:To-S;k9)VWSm-0QT\O&dR<SLhM&pdimZg'2qs-o@oZl"
%0irYD3>2cP;Y_N&STDVYGT@$%i3^.JiRUSeO-\U=\'&7d<"@B8<nrBDC%#CEa%A6o]V,CrL&&ngOc7AL@I]K*mDDG>gUc5<(SINj
%I$!NI=k<%JYO7WYi?Ofk-gr3;=te-,5?V\2>$pGFRYJLJ\))O[pB8iDlX^KS?T%]Vcgh;K=T1hc6aQ61AT\W8V\M/_O3!C*;L7mu
%rlZ='7t(hN"_7?!c:m0BnHss;QN-J^1Xp`pSK6I%&Mhejr^X_bFh3h?jQP1hcs#nS\VK=FiD\sMd!P](nML5dnbYQMCI%nY2o+P9
%&9pH)3p[68I^<-Km^i7I000#>Yk!2+dr2X878$@dbS?:if9nnrF2:WH4679.i*Y7.ko!mDO1EQghUqM'1KOGZHjRfdlT&jGIUd_U
%0pUh6P%1[2N5)ut_31cP%J,s@H,;?k`\!,M\ReKZ-]gND7?Rn[6@_'f?hcGk:O9mC)C>VTOGgkE0?5QhRg257:]Z/ROUN43*Pn72
%iJ<LdqEB!&(f*2C/;1hjNc9,b5=g)m+I"7=&24Xh78c*%,/>1ZHO+\V!UL&"DULnb;K!9q?0+q--coa,";7jVN%MPj%l4Ck@=Ait
%jWY+WkaK$_N5(L7@%NUC:qA*.)$/eFII:!OfRrM:M"kK6SkEb7QJ@`b.-uKg;X3,oB*a)tUu8hni!`-J<RPC9b.T'!YW)X#-iBfc
%JAFP0&#KF;5.S0CWKKk_.pN5K!o6ud=:m/V!Qs@\YTZg=Sqj@DE+!uF'$`QE,f3[3o,TWpn,[71D4&ZP,XYMh_/>O=S,/<A/J.*(
%lQN)+Nhc$6O$=qOX+WVA7Jle7E'1fXch@^bO9-"39#?I90F2M:#DV_14Y!B=SB1jIi26`[!]b4d](;_**#C7Sbc]1L@8u>C>U\qU
%c4h)`iNJjE^q^dWEoV]:!1$;4%t@?E\oZMfYCm)nZ<[r>%gZY`-@A9:-OI^^h<ARd%E/=(91GinE%q'fl2X3>'0*USfnD\Y,EkIB
%kmF(V7k3=8^^d[5K'NSZS:ir]#3HJ_&V`Ls%knOVo]7a^)0!'V#rn#kRK9Jb1@Xu'/ASqT+FN,ZaU+YBKU>7`d%>*h7,%tLJKYFq
%".5r;!!qK4;mX8lZdMdig,qbb$Q-)Y*BGal<sV,fn;1.Q1P*S'esS1T.Nhd^E+qS7!!D5C%b"-4P6?Ne;;B_!Foj`c&5#3#-@h&/
%&*F%n90/+!l1G0#,+Sa?42Ai3E'4%)GhTTf5[54qGgN6KTTc8W_@UK:\Dfj=m2uGoaT9UkOpJ9=l$u`SnTPI/,+3S"N^pF.`0ZL$
%kIR*dQj7+])@RV.;7JA(6Di.]CaTtWSY9/LL9^f[6?`YgLc&OlRHp6;n3Ispi8EUG?3;X@L4KJ-HLEJVVEducM?c1^S/l9FO_@74
%\BkUlE0SMSa"*+!A3ek#l0a'U:Z5!MKBr#$G<o2]0VqQ4,5[kC"5)WDm1ZG7GEe\UJ^?[%!r:dO\0;.fc69GA@<N>Pe/c&Q/#"\Y
%G<umm!G?qon?c/6Qlm55268W.3G.TM&-?I`KN!MXW"9(CPFe9@+AH->#\H5=!j9pc0$q3u/ONnYU97N0KK+Jg/dr/3aRkQZB$>?%
%*A;*h+OGd,-0-NiD'TT3>U<,TZ;tuu[+(A4@jZuuK(/9;KU".s,ZinqEaMI<LEROu'F9L+:_/.TTt@(M7O,bB;2CnaETpV;3aZDZ
%,\MY4U^0M$J?i'<PbpB4#,%No[KH1oh1<VB-acus*B\DpP<dE"TOFE6"K$O-<(`7PAOuX(:6aG=+qtn)L`dLj#EYUcmKKoCg&[V[
%;'`a2"@)r@D!Kr?Lq*M-.:O<o#iZpKJ6lh%)_TTZN%G&MO%7Irl+Sj;LpgeYZ%5T&oe%A8bJ85^TS'%p_BMQ0,><)V,0WJ%m5*Q;
%KFufiJYIc4c9]V2/dO"Z#K@&38^p`G;_E)/_Na(aQlh^P+P8fC-3>>b3Wu6%OLgA)@Ak5-@M8#cM09iR!mUSKFs^Wl*_t!X]+WPc
%48a^EJL]_+m1BPk'_"S$an6+V!>pbGS/o#<6V&RAD&m`1#H*,,PjTqWR0VGA3G.d]Fu[_Vk5q_sAd@bq2%6=bDAJn27SnUN:W;rA
%_T-L#1lR8?)(IM68"cZR!BHQSBKi.':k;%T>/Ysm.nPC'aCN"+&SN&E%5<eT>8e>,H.*eL.^3=&V.iO[Q\M3Fd4dXDT\9jeHNE[;
%JUN=<VI2Tu[OE49^_G1sLA<"3JJi8/p%:]ok[VR?/C5W92*e[IG"RJE_+(Y]qM):ACYIXdPFC2-U/upa6O:M#]'jg!1i.Br3IqBc
%F^[d.Za+&=4lBr6@'^E!6#E;oUL@'l&+H*!d0o*9OV%RoG2H\9&>'$c+<Toj`7#qJB.+r0-DXp-0RjY$M%hijR'/X$<!I[/+;;H(
%Cg<^CfA-I$-Ai!@WrWWR2f.dU#3M=V,T&jVDm7%$=\'7;5dEYDMAmNAP`l7A8;%Wb=e>s(^]GgaVIJ7*JqTt$:V*-Kq5,t3$nIa^
%XoQVr?uR6RDQ+UaH?19Q"DM9E+L%nGf\:'4//UAV":I=JOZ!@S('mR6Tco"+7-eLfP9!"E@5mE`XccptVO?I+_qr0BAk`chYSn9Z
%;KjBF0ZJNn+0`jef\I40[QorYgso-8e+O2DP(5kVkCl9TD@]_cZTBr5$'h.=,Hd@U^'O*)X?JtLA5TR^.G)FQk6T!U@M$Q-U(#9I
%!dW`BK!s\X#-NWb0Om,;2WMju)Q[MKLHNn!;au*Lkel)aV/(oVU@W0GL,hkAC_a+.$X,J-OB,a;@EfT!FerS/j2M?-[Pa`e<4&\2
%"?mS>h7-B@lqOo66GX'd]mWAM).DGi)ON4L61_,'GgV7/Jj""Y^$BC,5hScX`^;](bi)ca&YYf:Bc8i)8@"nj+A(r#N&04X"9QET
%(,jn)4kTY)WAf!7RXu#Y)@Uj#FAkEN'IhD*(E,cM8MG^MVHkU#V$1Xt,ZnG^B&eHj7uIp;['1O2RD+-cBpp.Yr#inf-EFpOHN5CW
%5O8ja!d+alGae=.$o_R<oQGpf)?u^dmD-"2pYG<O8gHm-LrM>eCE/pCr(*Q)N]o=Hc(:_pOL0,Y)i!o(ht1LpV*Lq?E9MNmR!4E9
%$TaD_aj>EIb4Z%O(rIO*9VG[l-NZ>1BUU+RG_9e!^b?55^ejd,ikRO*:J(](arr&30],1*$Xl4g70jZjgVU`UG;qBh%BK(KSq1;2
%OEq$HLbP8</-J7FL*X,1)A\u!Xh+gO%cc+pC_Dh4%PXkNTY_/%hLTN_="dln5CmKHK7sJmIApX@#ZDKc_X;l[]*uMAfMl"@l\%Y%
%('K"uHNT;u4OEm(1B:XRj[Il@_`NJG)CG,[TYo(biXkBre'^bXQ!iNjp]flC69po[9m9q^#97"of,U9sn>GfG>gdrn"7Ns13Ca0+
%cnOrSm,T9oaQGoE\9u#.lC"Dto@$kV?p^#6V9fqHgou-uA!%TFF@gF[kg#se-GV`FGP?1ZO^Jk;e(rD?G"bi,CW%B.ad`I:bsAd]
%dAI'k9kkNuqRScZ+Q:sC='FQHIC,gBWSp08D>N0>$SkL4!#\n0%=T=*:7+IY\Cec&V(9gO!j+Te"knk,0gH]qFof(t+^`&U'G@kX
%aOMQ\^l@tLiYHLj5S>;r?ko:+61G2\!j]+ZV.0c`qJ)$KIXEsP?#omP&s'soo_,DTKj\m"I17N_N?CuI/cp<3p*!*`honfdRdLW$
%lS-deqRS+Z;M5FJ#c0#e'U^U<L0VOkcC3T^"@31'947B7m#G<Z`DSMojH7kELSO6k0WC$jQmc@tXpG[!$F<]+#maI5G2`!hbitc*
%GKi1b+]6-ZLa8BV@+R>3I8YY&,EERJSu\Z@Z*:^!_Q4'f=')k1g?/'"4db*[mm<+44R='oAU@?<*kc8ArQKF5W'W2D?8Tk@p+4%#
%i"dJ>:gh5^eUB%]NGDogqhG;qL+t)jn.,=)!aN?qiB-$W+&M//Jmlla,RV=Lgo]uS>d'N/l7kRZ-tHnK,`E#'l%h$eD&FF*fg\g`
%(l1Ua0ZDpSA>(-!GtPt:U$OTaG'3T*_/#LTJ14*IdCXpsF^fHC5_3N>!!P9:KJtQE0?jfK3_JV0<@9Z?ESmP<T>8MZ;%1Ha9KWEn
%Se`cjhk7*)DQ5fsh@up=&CBu?6\OXVWBhRS9cW)KUC&96&9p:Q0Y6?W;_hle%H5ILm?g6?gGDkn>,_d+S<sX.8CF3WE""cA!\iS*
%gDu7c,$'XFJ^bV`R'uZBJ:nsO=>m+Ak[ZAtA5!,ZqWNbI'RVrC\+CCQ(^Lel^]JA.,:p'XJoMW_fIZO=:SFX*@qT&a^`PmJE4hp>
%*=@`c)^\!%-]aJ,!B2T%=sHSc.<%+RaEpCDDo)M`,=C1"_3h#oEGG!-[I4SJ&^YNms!l*=!uP;pl8USi!6(?<N/f2/Vb%(2&icgP
%0YRWUJXKPi11Z8Mi<:CW2YDpm$&0@e_F*%9f.]R,@*+$+DO(D48*UYre-9;G"u9X#m8]383$;M"*N0)4^nM<aTr;ukVs]*WT86Zc
%^6:1<2MOs(0L-.VjU/n8%VdhTG<8!^'(lspU`g/:2T)5?S'W%AVlh8'=Q^0&Nl&k@@Ne7hFbTJ\Ke!`mZdK"o4g)m93?>4WKLm2n
%$ddX@;T!mK)4$@Nfqep7&4SaZ&?Le5W+-;MrCjSBd,8HKVAQs%1H(p-q\Djb-C>j;?sX+;&Qg@Gm`?!.ILUA9ffe^F+;dPNX"@iC
%=nY3='4J[@d_bA4J-H5jn/&=ErM;TrLkDp>[)N[^-B(BW:Y.@8lVTKD04'=Fko*/]\R`:Jn:ZKMBgr531ZH=^7219;ZA<]MBg8s=
%V.UPHeg7HS_Z0\gB,SM$RI2-m:f;pG5c+Z&OSX,@73&jG#Qn[\2,#u1:ah9]>A<:)F9dCOY1\f;HHhP&cpYp/GNNG=lO/%Jh!9e2
%ZD5eKJKbTBl\[qFr@oR#1`HP6&qW\!!=1NhD<VrM#l_Vin=9,6TM%R(Js)nsU2c$EWoa]pA#sc0."*[e0gHIe0>rCs#l#q&0>0Xn
%,!FD`adbf-$E@2Gp@DMk$g`_\`f*F8^pH?,.&Yfdhqg#U6P(05Pgr[Kj^DddA8$jY&kIAn#Z?!!(_5Mj!3?r+'4,["L;n$5Ql!8e
%Tc?g>,J`4C/FiT![N,$1:9DoL1f<1H&J$Rl_k&K*],4W[F?AV(iJ8;qbgS-2R@+U5FHeaM`TTi%o,Ylea9g1]m_3k9&<&)@_mIla
%0Y4;T(pfaqA$dQKc6SI$%87'9$\r9,++].%Q'FGF:*XaTQj=o[Huu\P9NfB3d'MRj&Z1t%))Pctb$n[t,rNnfbh@b).ZpC@1o,p\
%JV7NeS*);6@$7#9ShSFkJn8>$*iDq,(oREb7aXmW=<O`UV>.1\NqZq4"\YKPPQF?W_oO].#FIXq1?`OmYWJ'aA9cRZ0^`.B&idae
%.%&pnMFG)a0,/<<0G=a#;3][a&>a2U&L(N=[Au"q",[b$dY'I?LmQm";VD6&VPq[TIKWbG`+UR<I(aC@$"*u"9,-XsU\HdaPc*m'
%Ghq:\0rA2W2heqIo,%pJJq;3+Z;%R-Za.S/-hA*>JX*3n]Ns`TQ\<p:\#[N!*1[K>)=qr;Y)!(*T5l"Zj9b5@iUp=r_qnc\E+>qF
%n-rfWEJ8clUH./W>EE69D?/G*?@Wih">LsU:RP>gniYr>ckWSJWWY7Rj?!#BHo:EI9iJ1/&S=^OP\$A!UCY2V/7q2.:RH:P#h"UK
%8,(H^0]1KbT!'gFp$<N`1Tl'i@NRn=D_8N8Vi3*l`3jU36']Ts2lM5d7KnC*7O\le)$'9<l0`=kS(]SA=^2Y],cW*F4`ig13Z3\D
%.9jl;<JWYDO\Vkm/3F<9$l==rDRp4.%V_\jG`:DcH\9s-#:--P-[=ZLg&hj6IgTRWRV']"4s`N]>$9=?9@I*ibaab-H9DUFG1NXW
%<jK4Yit8\=1Qh,/[]+2WqarOM;te`1=RFgj7isE3gmR"_E=#s&1M4^kEq!mX:UmP2P<;@&^:tt]*RMl1K#o/%Y$=%:h?srEE0YDu
%HpNo*SU77#//YnJ7ulLM$HA_MVMR;Kn%L!>atSZJ\<3m,b]bX433J8u)).,%/PLmQ080-5R-br>(*Va]JYN_@E@poG,jkZpl:ZV;
%<1A(<;!obg2i%Z6[hN"a:uot^0Ibd*TBbid[3[X;k\M#f"btK[Z,J]"0)1k=0I!I^lt?E8Aj[B%PSlh75na8L;;)A/J94Mu;*&aM
%)dIjp((+Pc"OhNX_T7QZQnJjVN*.3F\#ek/[a["6OT[A^HIOXJq:*ksfQIM,S#4EYVhUcj1CbdH%YfEY-*6s-]k4Vr_sj7h#B)3e
%4=J(&hSF$j3a3BK*JD.nnF<g#:lGUJGd>'Heh@hjA-`e`AhF)qba"0-;sF_+PTrnQ>A/T'0dnPW$Zc^e&D2`I3=BZH^k0YO6'-%P
%R#k`hb,I1)cST3N(nYD`7'KKTQuDRS:&]\"&NOJD1NjHU*TQ2p'BL'KdC7^k382Mc<,p+m&@?MNR6)aUpWnTCd4-E4m<NB]q\g5V
%+=#O+d<KDNY>;AfB[Zri8nYsAhSNl*>p.eO2@+n?P;%pjBHbSW0XF:PZe\o8",UEX'J71\bCqX5&dU:E780IU_qnQVCS66W^k1dg
%4eZe/LG7K9PKZ]f.Z[u[%Er_*VDk`p#ZhfuL!?=M*OM`>]WSM,4OeenD<[/#7%!\;!%'D[ch?K^6Nu:8](AL[n3"$IcNt"RkobkE
%!?u<7@XacMS-B$TcqOTeNUZY!ltQr8\\;e@3e?Z.lB=fGG/n^F6n0e.*@(`\@@iSc!96D!h5/Cu#I)O&Y+$m]RK46bF\K\HQj_!#
%>76!7_9KBKUo[8l;0"2(KOP.?fhMb6=ecH[IW^*k$;BZC@r@R[2gC_i6H0Ta=1Q%VIFf_E&m3d:01qf\R#*F>%*_TXo3B2\*[[HB
%mZbga+pq6Q9QI](OK"$PH[+UrT<3K^rTDj,&d3i6`\a&]OsA!TD5((D,P-`>!@0+h(LaJP[LK*E#C8Zi%`P!L+@FjVjE_ZrjENV#
%j=S`!@*p=Kc-pmISp![2jr1LWW>WW='&@W_TFC<>cE&$b8p*g0qO4,ak&?J['(]RhKJ?`2"e8!JAebE"[B@@d=BF4R4ro_Q?V<b6
%8iNTIG%PS1!XE=2cr@_nb06\EVkaV#l.nm(G4ak"[ifH'_44*GPem_,E\Ys-K+nJ4&LK*\!?='EfJ1c3&>jZEmhl\VUbFKpdd$>=
%?eSrlBgeKr$]C`%n8)%72UO2k3salTMuka#"f<aDGHSrscAtG^$AaQNVJctW`_H"IJiuPu5ZIlG3Ag5EbtMN6E_Qd./)dDbTu!_n
%F<ul*@u),K:#cLOoR=o>;9VLVBXKb.U*sN93WmE2nf&=%E0I[CTL1r@$W7sYdPr59"[\J$HBX`+Y=SI4+6lN,J8rS'4c@[$TU7.r
%Rku&cF,KB1fTDb>)J7+lq_/*[*0]Q[m):e]c3,K?L=hhX^1MD9iT6>Z"^8?DRZ;#,4+]J\/-n^MCRFT"9ZaMT7k8h;fpaRpn8X[e
%7IgKmbp:j+OA$5qUG\ms75/9ZPKmugcGN=&8(a]eB&!P22haYkbt.L*88jDG8fq$DV=YdlWMNPg&-i,il-:ucBtO8bAl^X(f,cn0
%;,ISH$0KnD2='o2=QcD[Nncm9"Ye)s,+)0jp^#n,/J[_DD#"@u&84\1!\UXFHHM2&l*UWpD9!(+%D*NG>i;`IB=\<$U-hX?8T\(3
%jm)UMekc@sS*ii*Y$%RGH6\g'9TlSPH!(F5>Zk1]=)a^GMFs4/?JgEO2,(VBA5DN=1.N^]l0cW5'^<XpEb^DuF*9ep8@J>],:<rA
%h@1XX$`$?gQAk_bT0f)@_h:3=N+$eP[1k)FVO()p2_u%Z9%0#m1eKm+&>nnc&Z4pU=BT$ua`Wja_PDl?/a[r0.(!c&bhS7%=I@l;
%;#Si7QG,+q]0rJZA^>?*Ei_h+YtU!JGRpSDUbmM2+%HmB@3RiCfEW)s#$Y1Z.oQQ%PR2Z'b>6P&,F7&N_Fr"$$J#:)#YL,.3Et>T
%#h7;*#(&\G`;;SnNBFF&>Bm!DZQ?ri7k6t$QC.V'1_^7Q5fREr(k*Z3';-(3jMR7+<,HR8&gf>!=dRJ=(i>B>-7EL8:(7m+ChC@r
%d[Ygf0P:hRM'W4fcAdO>`l#V<DS-4J1.k%alYs!_iitQ[B*o:.kUKGA0u<La%LYs5!5]R#)]&?@b&bXmmS%[MJpAJ5;^s@DR*/4u
%G9s%=HQ=V4F8sVOI1@KAJtX70@=0@TjoQ-%@fXWIUhSlrWG<9FWAnuW.oR/c*#c.T===rm4lBf"*@7^o3i1l*.L].p-Bh8?g;1"j
%XgFm-4.UnRiEVq&-8=JBDR)"-Kehg:<nJ$(3[0^n98.g_VO0]GW:37`D0AiHM-qYHNshuK_(-(d\;[nXG\odt0VCb.:=^UL6ku7j
%-g$SW:K:7Q<a[_f4EE<='qJa+j3$n`RH[$\FR;4`U-cDilR/O3OJ2(C1EJ.`rA^$iL:7ae(]>`jo.pj9PWJ)m=^Y/<O[7)7FXb$n
%RA/oi"R&io23]B*:J#G_PS,;Hfgm>61/_&PM")@ZUe4=d,S"<4'(o-"68P(+-sag@i<mLU?DkIL(pbc8be_-V:o4n>9\=md-`P<"
%_hH5hk-Gb<R*t"!b*^<Peb!6J=,4-/I.O/5M/u@r.Ge4\RpulREM<[hfu!VNK)*,;0^2J-&$F?i(+7"/QE45:0EdTQ9/Y.T,WM6T
%T$FE'1R/@ebWH.egR(CW1lF:aDu`g/>P6nal>3D+;.kuJI[A/_eG6q>O@npXpPmOCFV-19Eo^=)Lf$2if6Z-%0M3eD^(Y,W],D#?
%!n/bHE3N>#PRWVTAY?^N<0V'!A<"Xo=KO6DEKu0lf%[^W21E7]fRaihY#a+C$$6M,)-Yfb;LI*WMn;m>,%9)lF"FOm.EnCXN7gc'
%I#@90;a5i`DKL_d0SeER'J)2n]q(t+71hY`-K[@E!=^/?Wm3s?.&1=hq_fW?_452TUOY:s#`48B#Y%5aB$6qa\Pp!mmLOpQbTX^<
%]lAp%&_;eTYQ3C^B-sH16Ro,k3+8*e%UrJZ;U@,il,FK75f^uq-((bW,tr4.2[gNr<^tg'\pPO[#@c:f*#'aioRd."'e[^]$;uOZ
%IN!O-*lW\uQM0I8'8ma(Y5\0;on5dkj^k,"QM0GTMrlGVJ0ZbFM)]*C:a%o,PN%:d#o(NIf)UsaU][\hTnFr-nK`IK9$E)\*6Kk.
%poKN:;,T'q=#TE_9XL'!(pHN'RgMaN5fod2-^_M8ncBI-I1n5CJIR%S*JBEtP)Lb.dEpC'lWOY6ARKph<61R^[4o1p03POccl)mX
%0`s0@+a8&iY3i>JHXI_XG$CBASe>&rOHYLbJiX1qU#TesN?[#n#oFq/FAn4&5[\!RWFAsU9tD2%F507>0WS%ub%T?`pK-FH)7h&7
%\<sA])-b^4g$h<\&Af:`JIXu==eN+c"9s2FeIWYD_ULSB&kpm37Jb`O:j2/H'r_U88`D=<Ah#A08G!%'AZ_X!FXYhW>Z%4*.a7Q[
%AN\S<+;aXmD2*bLEsTu=jUZ.g[B3-+)0c:ZiWN>`49tJOWAi\?YeY!?7d5JkSu,.]EGh>PMCsK]R%D=#mL=RG;a$d-JjYqgg7Q:@
%S'DnjFEL&>MDF+\@Hs:kPLt_`..9ltL`T_lPi4'>I;c.O4cC29hn/aUQh2S</Bi6<>/C=_0L>q+SY7@7d.&^$E."1oZ2U6>n$uhT
%[kn4YeUFkk%,m2.hZ16D%s*gl?*.Tg+O_:MlV(b/'G`Gt^X<u,BRPdmq2:E8N1nNZS\9`bFl^Eg_\!$hl3prS_+jct7\$b]$"PN3
%\H?j3lWPkOIO7ck@Lae(l53"RG'43KP"Pd!<=:$D@FVd$=@:"U+\W$mB$jVdJ[pZ2U)busFHmR^)jZ6E5SB)JonQ*1_DRkLRG)Ha
%+E=/G\:+hdF"][s7S&T7qF(!kCNhqc\2HoT<2SapY]06a/gaR9'uVM86dYn)L4Kth)>Ar1VL2;g/1%tUi-Ab@J8>>10r9g=Y$jX6
%>F'7R"&'QU1[1iuZ80Vp.FZ^T2@P-1*6_;BQ,@<7#V0/a$j99FY4L[5A_1C3'F&]e"+saoJM`:_dP7!'5"](D:9&C?!aVd@`1`*f
%%;'p1_fcgh7bC.V<LMG_9_t-7"nN48gu@87W!1c`1OB:]%bGB(\lEe@Ya@&!`&g^$Yi<Yr5pU&WA($9)*8YrP?_IhSamN9VX=oeu
%)SVHtM(.":IYUqlGdXa">qAk4`e+^7/KXR6(P[KGWD%N2dl>;fD&.G*DDDdBN0kM`XD;7%C=NTn0'rmlB8hE*aaMZk>,Ab14oBkG
%:)A,LTqE&udC](Zk=nASf$IK#p;o0O^u5U^\9(-SkDi,L=42EiNm/V4'eH^Z_'qT=NL=U3c))<r;mu&."@c55RPP&8,&kZHa#bN<
%jJ2&)$XXS:,%>c[p;k]DNb5!QQt*%9I+?ho(uQf5P>R([N2OjBUi;9>j#FJV8O"RZ7T!aq3Y,72q,19!U:qdp=&BhtXbQ/Y<pT30
%>rmVs7*O4:0O]oIN`t;hD^j^#31,/q]4:5J@-%FF<MCGsl_Gm:'@E?k<Tja+&0jp([H#5X2O71rHh;oBFS0u:F:_&@749T%AKihF
%<,Wt\KH$L-4Zn:q9h/qPL?.['SkblrqY@@u>>RYdJU1;EM]dGIM(gE!+dam;7i96.Z_fZP7V*8C'c\C@GGXOV!bR0D(E3Y?2SO`D
%"[k[>Hj;p"k`hN'[5USf$@5:$g*sj*S4cWO_t_H+ZDDt5[i9N2.MO5972Z2iilJ\m(+BS(1R!Bmj2:aaX\8gB%UTGN>V/83*#rIq
%@d0:P4N=sR:PU0^WRd`JD^mRRHs6\D-1JW#/])<1DSgf_mZ,*f=%T1CV9n<]_E83XHh9YPLj;cWI#2H"?3G#1%O>Ec%(YPc1.BIn
%_lPXuR,h_F^S`Bfnjnfd2sY*#OB^s=#K'KSBANf3C]uJ4/g5e]JO>:@%]U+--)OX]&ha`$_blrH%<PIO%a>,USOHicEs_(JIagh.
%F3L[M(lI>(_;^UglhZuO3C^gj_*3/9goO"CnM+W5]0t0ZAOkF_D$8]?+bHuK9iCX0qG96Lk[8CkU`(n#horm&h]-G3TFJ'[+abP1
%BA'ngEJGs\k*prPAt1JD>8CBj44_Dn*,B&ITAaQ]N[j"e0$-u5pkHMi\^V&X8h]3--4/NC2(>D0QgpFP^3Id:g52W`\R%='o.Z'W
%JH0^]*?i"m'$/$[*N`lO^Z)u(A[<[UCL0j;iL;[2_C6[<`HA+N$UTIUCih!m>.0%9/_-u_^\<.//,&l%QTEKEE9^DoQ$^:C*jK1V
%k>I*`=VfSVq77<HEOL#AcIA/^Z]YUN`mP4sCiCm&S9&$rE(O$Q_n/@rUkU_!LPgAj:faVOdqLl<49e_/*(4g$X=M>c3_sfdbIWg(
%\I^90ALD(-X:UQX`E6d0Llk,k7,6]f`!;(]RM<OcdK5WVd2&j!G_W#_P#1]DMW8rn[?E6E[Q[\c.+$Q@8Y_+qXfoh_QAZ2_*n1=^
%77^i5m)@+=YOSrQ\.&OFmZB89>!EFY$S(bM*+:b:ob%f$C)LtJ'h#j4i#I[N$Yd"W!Nl's<!q1`b;rIbP&"0:kq,47./"h*0[mLJ
%c(2EEL:C@;,9L2Z+r'a^[%54t&#-#VROc8Pk+#'^dr1oW/lbJoUc=S@'19)UQ/'$5LV5h-1K=*\IMJ+d;I!?"X6<^Jj?1ZtC-H#0
%esV>n_'dq3W`!hf8MEVi_>Kj0W#Q/iec!?YX:bWs]"$u-$^;;i5m)sX-p$;J\1[Ba\%*oi+MJ<r_Q9Dm?`V1k`FR)<)5J*H]:m0-
%(iln;NdD>s:Z3L^H;td=71\$#emS/u`aoVO_3q/%_7**VkWL5aC/<o>43ZJp4Ps;'m&FDE:*bWqmVY\%bmB*&_0$-?bFKb5J7^1J
%*cVM9fFtQ7HZZROi$H]io"@R$&<DZ-jSYZc@]:h?oAs)-2,`D:9YVGC4EV&jAlN5L[=t]Lc-K6]LFo5l&2D#RjTkt.=`j)I=)]KU
%X'mUK?9#EhUUm9r#5iF9Q:p/8G[,.2<KL4A0-"/BHj;._0\B'%3N*%6cUn^*18ujX=/1jSMm'4Rk-E39MP5*6073emAOX-^e.;oH
%'ZB"X7[4?Ffs<4XpC<ilR7Y%DHG#>$e$t9U<6[qY&I1m4?hqVp=RZM^,=*sjPh__)R+YJo_mCbU3&G6R:tgYf>O$!]LdUGZL"\5l
%#XF*n./:RYWlg8:Kh5-MfLP35r+q9Y%PkiR*BS)g<5LAqbDSJVnsjOW;p(9b'Ih1e.*DDLZ@EEli4'W3::XCgn5A%G&-`50(rLMd
%ZM'F(S0W4^FC:Jj1CXn;'1e@V.WLHD9l;?H30T??T)eU/"Y"JFg@16CqFC.]&6#[t(gCp9[j)M4?'p`b*PI;9KC;"V`5!71F9C>A
%ZS,_AP`qf.9Fb<(-YGI2S'\G:<G=Yo5PnnSOVD9$rPRU"S15HQ]t;t88i*J6>Mtjf.D6V!n:XXt'oE-h<1B:5Z_Y3i,s/+q&CZuX
%LN%S?RgWBG`@O:[U#ht80IU>TirV&^kGCih]CSH8Q9uIL$F]FXCIl$].`p_%RJ5omO;UXjR!_!PM%0;"N_Mg%mB1Yi"OntP8a&[R
%^-D6s,7crjr)liUkRR9M]aN*B<T2L8<FEe3eVQcK)o?sKEE*V^YZ+E.iQ2fUWr7'Bm<@(JVpe(aRM[H\,QXh*C)7P[Gr5O4r$V,r
%">)kd&P/hWji@58GQW1i4g.J_'AdeXLg7,a-in9,r;*GX-2aZj_c))A-LkPYA"_WI_r7<#B1#gcm6L/m<I)X>/BBt(&7XtbV1Bo>
%2t)3ijblpR;oY%Mi$\>;0([F,lAu.i]uLDNnVQ%JgeX\C4Wm!3Y.+C2=2Ntd-!%4N.(7,tPa+1^A\sO\9QdFJ!si=d/$RG=bF=NW
%8!;eE:es*a42D5IpJCGfh/IOaE2*(SbGojTIJGF0mIuSoOL_ZaZ2O(s*JS^63l#)ERi^kP!!Mk=m68XS^]+6tr;Lp3j"LGSa1qM\
%=7uK6"E</C_<Ja4ODY%L#_(\hbQ<!LnnCD=%eC*OcbIVn9:o-DH2U8]mt\emKVFkTdo(D;7Ma)VQ$dmL_)I[RY2EM0<t;tP49TfT
%/4e-siG+TAgMTB+;@tu?7Lk58S^<Zi)OJ7<n>58j,/Bs)oI+8#X,n'qO>X1-<_\9!lskaNp9'KWY<l8pKrfG4ZMISBlD]k&h\EFF
%Yf*])Pis^`FI3Ss@r;aMe/OkFH:'deL9MZ*hGCn36f[G@NN4uphXuWSeJfE.DeQ'*d(FZl48"?ZIb,MgWAddSD[8dkR9YBo)erGm
%.,OTNqUHPM=)VbZ]qGhA!;O]_6h.<<K\gMn8uXZ3%CKpKUU@rn$O69J_4\;q5M_q`V1"5WLH*I.p85W"]F3MZ.rZ/'i$PVB9tLHc
%o*X9[cN6&-H-;k.3&PVdA8JLa8+t`[]i,^UiAg^hR:d`[if)eC7oj]^c58#nhm*50390/l\>`MA2%Y@4.>h*p+\>!+9=k(dakJH1
%d$0ic2?>ZHleSfq-MV1W2t%_?)nB\;>[E%MHHA'd8FM=1;r8*:UA`jWl6!b6=cO5Y/1uhG*7^M,aVk1b]OV0WSPQqTkReJK<"-SW
%VeEErN!2\CaYTAlTOWtjH?aY-R-Lrr.UN?/c`r<#3fTQZSgo9=&`H6%7!)jRc!g$>?*(E.9/':lm@["@T5'0P^Q>C60\tg/9ms`-
%L>cTG88ee2T9_oUe0_WA7!MOXD)D"-O%]LKMZUSi[o)G?;upMQRu"`6N2i$d/@l`ta242\?M:%hT0rtePa9?k[6$+//sYn!XZbI"
%53qKCEan/rc=KcdP0lr=TR^KTZ180bMj`Z6\q)7UAJm=I$&ObpCGnHpWF46#N=2<0O5b(b,C@2$P=)JIk`%r`KlAle/2n!QeK[$.
%ZZSreI-nY2@KPY.dc5g3WI?WGDab"rJ0L$]&-7&kh4"gFF;p,o<D>@#?>bt?T:P7VaD^hs5t,]DCR-QQ^7[-f/DET_CXjBV/801S
%O+Oc%9lCTn-n0RR<&:MPXS5P#EEPJY7(_o59dYn[-)2(XEZ?n-f4%<qeZ2#86qu:46T''j/;.ePC=m4XVmsOH2U"tkmJ@!*9_GM2
%NWSZ_\0WN]NQn`)6a\HK+O6'a5eiIQj]rL5VBcdV\!BG9<t]4P8YgAQOkRDm;Rqr]/L?P5PshWR&uf/.V"QEte?:,q^QM.J8g96F
%M6p.n$2Q&gP"9X>@G`j_Lf0AP03TCVJYX\kOj_T8f6X>@&!(K#!b1r4gOG=Z"BJ=`1#W>eq%R($>nALcnJ7l*,8GB"OP,mbdNlY8
%<[GDa(S:8D:fS0_:na)S4fM&\EJ8<cB'td^&Q!*N.o?bn/,Dju50Ag=(;c^'.fda[O.=FE.m$:Q)AI0[N^)$3@-\nEF7gJn<[u>p
%)Qtk([4dDRZ6(KGnRFWo[ab-@kd)>rkmtGH8\\N(5":GEhS;iH9I$dA;Vnt?2c4XjM8cUHAe"KBBYU=oBY.^Ce&RV?%4jqA1EW?Z
%F"N66TkWZfd`gIBRC>gFO%V9Imkf)rF4L***lFK8]hKXZXaODL9Ke1aL=?I3^Eiog0(3)D?81km=P*U!D@Kr8aACUF.B:e&%@GZ5
%=,($#<"DN&JFQbXTF,ooc,$O<]/f2\k<E*Qqg-TZDFV/^lCm;gmj>gkR@Yd]RV\sBH=.5*:C]6IA.OHA-&3E6.s%X^EiANEQpVn9
%TjHoQ6Od!ld`9VXKOMdBQ%3tS=;fWKAaE<W$#He+.2i:#fNOM0cln,Y(pMtF`nn5!R$k!@Fib*KQQ$jb%:t1lMYoZncuusnol<E(
%E^M#;CMmh!gsGlB%E64$\:%V"BYE3J\D5GO\Y8\e)d6-sDc4`^C\PYG).H<.)<0>WH[06Q!e.SK0q"jDTb",nT1`+a8Q,c$ih7f]
%7$eKu-CWr,1rYk>7:;NrZKg:\M?9Uu',e^;[^+OG8&F<??qU\=q:(`sL"X!Rc.m!l&tGu!Tf&*L2b@-jp5rG4.bD0eVKllL.qq\>
%1o<to$'/BLBh[c77X9L2Qr(s?G%=qu;^@?:r^:7jP8Cg+^$pRT^p?&3"GS$ROVXU/L3-7,lW`d0N^6M5OK>3l<V:kr,FS#IDj(/,
%+MYI[`0h_-]rT]&aK4]a5S(JqM8d=E92BabUj]'VV*pXo<]WesQ`Rbd[h`6oWaC=C2(1_D\q3H9BpPFeVCb`6!p\U-Ic"rDI.M.-
%MX2CW'<)=$)SRXo5*":VG\]9@j2J/R]7Bjn:RFNn]i/`^l46H4I*G1TA;S6q8H]kd$NnlofD#uX`Bn2q'B)_O"pVR7^-RM#2aUY6
%d0NRcMU_N@dRh5WKPN$d51S!c5fS!#V$q3E<0gMB6rZD3qTJFM>jCq)JU'=;>T`+CLlE<"iS.1gYja?1r[s"WX^CYa"6d3H/"[fL
%?P%-\*:#KR+?FpaMXB>N=i$aC+/mhs:-q(T(TdoLL:`s%+]^Y0(,YeD2lPbjA^,jrm(\q8Eirp8H!*:pdWM)G^jR.;3@k;6,@oLM
%^C\\5K]d0lhR)<.dn'#H7Y+&d!9njhr-MTcMd-lh_3(>j[%uc7_9.reO[@`iB(aF[(_,boU;QF,:LW&se-LB#3CTqeZ^a;V,(mr1
%GaBluM=X'f<[@r]o`Cs<''=eS=m;>Y77-Mf_'ZQpWiU6.K(b_cp.2u'[:J32h<cN9S)PQ5;H&7.HlOb_AnJ<3HGFbTVd"f@deP1U
%SEc8qIQZ+B,,U$O;u)[j%Zm\YoN96goSHO]P&hm)oSfk_pkQB9H[XJ#XRpe%BH$JBkUm7#NtZ#c7<4F;MN_u1?*;Ub]h44K.P:@p
%[.ra*F\=$?77CA0\uL(You#a_)HoSqNdVZ#_ZZX"dQHH0-6pSYLr-\ST-bj@8?S$.Aht,$GLk$F)7%2V.Zk#QBU"2j]Wa*QQ!gJ^
%V[Mfc9Cp*[3$t]L;t$Ln_Bg=%cLg.-:ROp0C-NS=7DmIldoB-fTTQW'$EhI_&j@RU>@Wt,'7Q')i3<I$?)Vi!19EBM3f)9r$!_dd
%nFWF8*Ll2R&dcWr-eX^,BEDlPl'`t'^Q*Bn/g/Vjg&UouHAL@,#)742OX%)!6R.P0S8J#NN&BfFWQ`H6eXf;(CKG`NK;fB37kgM0
%+N7u:RH/ouf,pQ_[[+g:KGnNP2d/:<P21k%&n6tLT%h'j:_KMk+M4="-rr\YQcs1ZG_q%bN]4L\8Yn<fVN1a^F"on4A:*Ja7ic*-
%U9hCT+:RSq)??`MY$l;%Bc;>p>_6/8U%gj[1DcYo(^JaKa7iTplr`WYMD8huZ4JdZqDR^L?irtV)>Ts9)'RE9Zl)PXY3i+-/gsI7
%r?P,2meF[1Q\I!,2Bk")qhCE&lj-PPb<&'&2^o7-!7@JZTfuuj&S(nCN)a/pTMp[E(EZZbJ9AHk@AtS)+t<p!<DBNsElPC0,`qZt
%<figl4^I":6ooo3-%T#PcK&1pHPqk*\8CX*LDquS%jY/>lktE1H.U,O@1fNgVdfM*7:%s>I(m;Tp&Pla3;llu**I>K)EnEh)GT9R
%eNK4f'aUF$1,'KJqfpTC8G3<lPj0"I8P3^(QcZ."D-fJ@mM-4\UTN3Z<%lEs\TdY&(cNjX)KG31He)`l:iilf44`8+n"e--G]_9\
%JtdD&Q*Jg)TM-5b%LHgKq#Lp5!i1p.CVmp+Y[m-X9U"*fg=)p_AVjC]B2>?"diCm(BbEjq5Pn/G-?M9XJ2BS^]p!"D6t%4Ig*Bjq
%A&+j$);67;n['/SFg=bCdRL#fk@^3b'WJ2ge1q_;]O_MENGmZX0R.FaHO^+WL!FF>lOcsq6"AVNR=2q%HX!SU,9*8VRH5jLL:p@7
%5S`.6#rlCH7bblEUIt53]-1u#@oa-O$0P>k'.;7<2Z$lSo+ZQ,gO[t*Z$/bN0Y&3VT#/a>2JQMiDddD+Cfr[GnC&AS'e*Y+pY:r!
%'l&PpaN[1t6Wc;#SquFZNbm2+OfAFsSj0jUpYDg_1+Y-+KI#`B-H%)[9</d/f!F3+WAgn,*0%*r3O!S1`MTLY]0"@OR6I;^XqYpW
%])LHaOn5?sP<b(J2Em0g'm3sqd6H%Hdtg-ONiEVsJ5#X8+0qmXU\'+d&U7sU4\58l/koG@N^'ma+bI"CCLl(;Q3IiNK58%&M8Y=S
%>2FGZ=G"uDS9>ZQSSJF[AnOi119@./[4h@j]V,U``7Q?t(4Dj^"B:l]7oU93R2lYhO?B+F(WB947/4/6b>#@+8UCY"qR3'*'PP:C
%?50T9h^3-&F\=EDG+DP7>(XHY_SP),(Ri8rSp;O`aY^+H]2#r,MYKaR3R`nJ!82lZ27_rng/E\pc6A&rPmouY7+/0#0.HgX#9[AM
%@WTdkVA;"lnYe!s=Q4,Cd]9F;O?)u:_=VaaDq`KWm.BP:'lDFkTq.BU-H@mC245@''Y3%.Bet."9P(U.b"`I]Jhij#OqgkZYYVmr
%V-dMn?X<)K*r!]9m#:,5",.PWmI%"*hO"o,8`*.U"KW"iUcF$R_ppH(K5)(2:sk2iI7ZAk@Y3p$7$I.>BrecA(f[6(_t6Y!nF[RU
%PURa^aLc7PEb7*h2^Nnphl0W2g$[\LC+]RWCNn08T`:o.%bbQT&h*>Yk>E`]LLs/&'^NYnrJ9^r[;9WY5FnPdZ:Qrt!TBO"o8VaF
%/eJo3]:"g<h:\'_=hD',RGS@u3gYK5K>8G/\Kn>6PoniMaF(.i>Bm=D(`JZe&`<bb8I7'WMm/po`VWEca)^P?F=TW`_j'c<[MKLf
%6fc$O1.hg/?sS%#X^Q7Lh$nL+"c49l<@AiZ;5%*5,t(bu[@qVlG/me\(<S[lDc""[l4*+g)8WR`>n`#NnmfLF]N!p:PY,!qgIJ].
%69Ln+Qb2/1*X[/Lh;)#bF!4A7%5!H?En$Va%oegHI:e24\(]X0E]<YK_TP-AXZt>%Qe.dmNM'"FlQhskSJ9,Eh<#<Sl'k(5pM^G4
%XsB=.i$^\pdZg#=jup_d@kg=s(p1CK60u!WpmiIfkV+S?(=4&B54U,GB$k/9!s^bs]7)6ga_caf4e$kAV?O!3V;(bg\64RSkKG9%
%]*JNHluDPOP\[>@'=<X03AV%Y\Sd!fS<S7q3K\=)cItMP?keuob3<n1o71SRNq8AkJD4p'$nXj[]l:ne`]NFO"VLiRGFt=B+:SN#
%!3mg0bQl(^MLH+t-@(bC0KF9BS3k@Wi"41uVH6iTmVU4>@5=9OUSNh=p1;ifCBN+qiHB7CH-rfDpRD(Eal4ZiNJ,bR3h)mV2Qa^N
%k&H3a%P@0Id+`GWaotoTpAVlS3^I=`[^@"Ac$/n@f1IIF),_qu.Et.%>R?a,5-M*u2de8Q]4B^P1n6%7W<sj9.n<=j8W^srb9>NI
%];Gf.\Qm[fAS4hFN>W<N\FQ"pZ4Ln!p>*#ZNr!J_YP'<JmNeP6b/+]F+e<)4e;criBVc>s-reUc5:'C_:#2.j/NTW[':#2RA%^#2
%Y\]C["U.@Efn;+!44Z)LSc6,q7]Xs4!0aRC/obncL;J]qH>#N`\],i2<DoE501n--[PgSQ2?dQVjG50Pb`6.DV"2!\SJK7TQX2nU
%g,#d1li5W7A6QulT&l*/kp/DC%kX87?:-i1Y+f<Cc6#7AWbE1c!EU+s'a&_q\TRXi6ON14]=40T/8`oVCYir:jf@2labfJI<?Z_'
%^`,o]l\_g>h..>sV'^8l>sj4g/@e`$'9:>ifk4oDD6',ken93CQ83C5iZhG_GYHWh!b8>U%46V3RPI])TQ><R#oa-F@*@i6dlE]n
%"r1n*df`NBh",a'oL$t`Zi=UM5H65';?17[onuH:pNJ>Y^gHdl7BZf!nAF4Y;L9^7a6U_VAth1f3jPV-?Qdij7Z%U>SlV^0W-==:
%`sU&\QI9)Mc)YXU;hT\HKqF'HC/N`Mq5@^_J<]K\*-G%(_r+jrOJ%5Y2U3"o_`*orGS`1G@&..5llUYSUa(!nm(YQOSOs-#8*\;U
%%Y5o0^iTM7$pas5Hg7"rU6*d06H'&$1H0%s<P1QMSlhPWWITMS[]`B@oONLAi%)o1#gIr4POK%)i,hOWXR>ap6^6%OV:`@qF!1cG
%=TUiKITT540HFc:R]>L@8;"tlCf'ru,C:E<\^GK/":i97*a-m0Z&MTq!RPJTmfF-E1<$2h>)pQ>O1BE6,.O-q-f't4RT>u+p7Aoa
%>0*s4EK7FE)h<])34-;t$%,s;^W[INHPZPs^>$8FH>R2h!@bqq1BN=='jtosohW0"eAMit^qNX\0q">L9H>H3nPB>:`.;$,elZ<?
%=o<ou,K"S'a+/"ED2B6C,i')+5[g'T4%(h=NsY;j`E`%(i\k7EFF1sInmcNiX6;$YAA@I:&+5H9ZBu?q'dgGHMOWtqiHhqgkQ%<;
%$a<+&T<BRTraD?lIWT*FEm!Q^DeCEc&BptuBO$J#RFOiC,Jc\=<JdnY]l-<7s!A?(\8U\JCein8<*=;&(V*'f`0rS;kkOtII*13;
%MBZ+b6c0&i!BF*ebk;s#9%Yl1Kgrb%O_=I9\e*;tb,Rj#lntkR0a;b^BhEYKQ$'PU@o2k83=46Ck!<UZ_D;Y3'-BD3A8J/U0bZV)
%$Bff]j[nl4Od,J-X)\)bU1pOG!s1U4d["8hWHRmN3-$H9KPaM8^1q]*L%p>Qec?L;XiIS22WWN/7^&V\Ggk'XX9m<ZPnCDTnlNn2
%')FKE@7t8YEo!jF-n;jQohGNDFQ0iPn#;N%(S.LM]9n,3ldJS=W+me\GX!&Q;DgV_M;k[!<<GVIrbTWD@!LTGbq#"c[-TLg9M$-?
%@gO(fqN22rSI&:u;i_>TJXq<0P9t!l_j?YAm9RBrp\%-EG9_t)_n,Ws&3Z77,WKRCbc(lF1?Xk)!i&pudK@F4#`OXlRBJZC=I!gq
%Qac('C8<'6=2Cn.?fd'\0rHO.e@?^lG>#_`7"X`,YARCS0B5@oK]#+j)uEE!O8)F[qejSdXtJi;YQnmKclk]NjDUt/,?[]ccCpoD
%XWL_7<?3(Fk$:'5.VKQS(?&kK>KR1JEV?u]PqbrO\!anbfFa.Hq)G(E1^a5e;k[2@0Kmp9d'8ofGb+-E6eC^d$GSqeFP_r/%'D\*
%Va)biW7(u4P1B!EM7i)EVLMf=R-2rd_ImPeLPi9+md)Zggf!X9;6jed>Ip@Y&[!EQ&G-fn:-r,4o`aPVZ2BC0R43&\00^OQ3*H'#
%"829r8JN+U9QhQ8(BXaE9haA48&$EL!8^a:K<CFSf]j_?r8MS,mkM1"6fTd290XC:Z50N3TN^>]pZfl)-"E+Q/(,2@b:Rj+d:RMJ
%*cCSsY=;2+b3=$F&Zs=m(.'f+kpDlD0lO%]>!HhXe4jP8H0eC=a-tST#FW2J.Re;a-JKc.9;?3r/K[-%Z'ZRo%=4L1##(Q.>#;o)
%b8GbrKd0o(9Mc*BckGLZm1-Ra'ERug++ZJ53pMLOE?G26OJL79g(5D.7>.#Da3J=1Tm8PEC^CeK5!k4In2s+3a%kS&Y*C98+OM+Y
%kL(*GVJ6<NNnPFW\mfr;/f,r"^Bt&Os&K.7l)CL)@jm\dh:L$p7N7\j#BWlM'Z+ZWqO=j'`Dn!8,ZMls\]Mq$N=kFI=)(q8dCGRJ
%25D1GJkY/i`2'kafOis,5:LV"*_DXKgqk9pOfCUWF3MeSCJ2AXTMq^&l>5*nX[o._Rn':1.1i&eU2`V<Kmat>Q]fI^hD^gPSM]$#
%+KV@iWHB@62$eX"/qmsa7`@dV<O,e-Tr:$=(=@<qQ7e`$1Eu4E9),#?3IS$2dUE($Yb2Ij*@[g'0Hplj[45bNe50H%6oAmRdVdEA
%MNGT:b[r1)X?Ssa5>o+@p'67,APA$8>20@!WHeq'6+61F9"Is4][(A$]<b4fA5pokBH8,pqiP'X/+&J/hf>Vo]43_%mK&;+/AJf-
%M#otIQ"0oP;e:h+s70jVBXL=\=/Y0oKgNY]>,Zk&Qjdn0KW/l,+B>]`=8:KG2J?41G,Bd,!HrZN6IRFObIPf/^6G0/.N3CLH?.EL
%ZE]']_)#2m]7fIRFO.2rS7KlQkpha>[-e6.['"ut(AX5iMRYu&_/rJ?,-DZsfVtmhmK3iG2&T,tImEFd=Mr*`25\#)D6`;jHIemL
%YRg=rq+^]eLVc?`!QJ+-P3\KF8&g@\LU]WA^;N^k_((Js^pqTqUhXODXNAb?&o7mPKP/l'/t:#9NG?a2gsK<bqgt!dbkG\P'6eBm
%ZGIpiUK/T9T1'6t@j1/<Zn#a/W3Q6@a1IcN<!D6W/=^jtVA(E/)e'5+Ohm*1-.cc"ik-R5e`LS92H&Q2jOe(j7co&B?R38%[Z#@8
%9@U"[`XA]=:,:G+0U@/(R`Zn%M^[\GWQPViUo9L2NE=mD3:<*-H9HYXflZ"ML>B:nLS=+D[O_;)Z>3t@:/J$qq9#Tl1SI(52q[7Z
%4A6A=M!&]E5ZT4s*0lh23/LXd[M.JlngG_sIe5V44BaohWZcY\Y#L27C<2:OL*UB+b\\f)bEDcEluZdt>R7td!3BsrRHZ6C9O6Kk
%'^Z^C'>fpsa[!`[8up@68_Ok)&h8Z7o!&Kf^PkE>a.q""WAj<Bdl$K&*D;!SeaL[1>`\HLWqm/V\=,/@5+XMH0mJg'K_d#<Q_Lu;
%fV-5U8b//Yl+J;MZKuGeqUtYT8Um1s7<3K@?BP^(`/#'(_'s/#Ml'VE*6[?()P292YQBjES=)DNGOMAs"5C$qakeQU,/oM7'4O8)
%CA0tsW)KnJ_ifskG8k^]UJ&.H+t`n$Pk<=sk*u4Y`(':.dmF<N`M3#4kWJH=6@!7!UE9*Pq?7EAr[*;jODp,"rL9%GjbdNteZOXb
%8dHQ.(IMVm<NB5A[Mf168qm5]qiG+u=4a'2`fctA$=P;Ucs;Ik"@s;;H9LD\q.QS8-VPq&\E-IhSXLiK"/%ZSHToQ-4;T?Sp#Q:>
%+g;'3hi_7hH:,%<a0(>ROR&Z\0I.mddL.Rt[*FoD?h4\_;O`B@6-MJ5?r.(SJO'.1C4ua?O3hY&(qUAX8"idO8PNMj8li+ck-i+Q
%QA%/M(q)D$JtpR&5H)t8Bg;uB-oK%A<b,@?ZM]KC&KAuNq5)(DBI"X](_fKf$IY5H,2I@1Kg'34FGOHgrLl0ub&Ep$YX"E@%"I@3
%H33SWet1>WbM?B+V(gRUeibWRqQZT5"EB*;pG.#RRKH\WN4k2TUR@3QrS6@b:_ptnM0H)h7g*!n!f3j1:';ZnOtjocB5FXhT]l:D
%h9DK>)Darbg:[k5-/'D??O8t1`>*IGGlo"N-<^"R6Pd+>Uj3NjlKrDLFQo&,;/Pp(+3=c*W0t#$]JLfKE9uNR"8,r![l'36a;5ns
%En-..;O=X53QaV_J%B;ueMduInPqGQ\R:F@?ZGa?RRXHVKL[?\E2[#Q$T*oDMPD9t_<[qq"ZCj-UD/UQ;X"DIfm*k.ba-D3Y*(,+
%nU-Wh!!*D.M2LR*20U*R)c0[D(`*VZP0?GDNHk(f"^F^P`TX:5]M]OHJp<_a0ULurKfg8nFfa<>=ej9_>R^WeKUPbD^$4%YFQY/:
%Neo5UZ`m%U$tZ&r88*U^1.l-464N"AYn;j&M`Y![KmDckX#%t@.Q,8p:g-;=5IG-!-4Qo8p\$#^F=g6RZhG-Rk?!(u8.cGK2Cp$'
%1ArG6G0'^bX;O?4#oMe0:lZBGCp2JpZZ(Vc,1L;TEZnXP\N"IYOWhm,bRfa6daRNlQ2)[\dTi5UAbIJ@*U%Z@=)C9m)it=<G*nO7
%bA3aT+ojZuMg5Ds?^?(+U.:lcK^1ds++<kk='?Y8*\6H=1^R&TTh_CE/koa3J^V;cV0XTV;TjZ7FgQtSQNb0-IL<#@9$VI5=n^+^
%^ugfF'#(G+;<RikCTgLI0IVVXHWm==mm2;1?*.iV9Wj2/U+H*oin?05BNl%D`U6bfFnmVilIIR2bi&*EV=07*Fl*W`^_ro&cZe8h
%$BN7QDc:3TXXlcRn^10^$BL="3I94]+,`ID'skFRI_ag@D6%T!bK'?fGeo9HUpLBl3.fHYKYa)d*LWiIad-(&f=+XP7*BlX@\c%c
%$KWssU1RhT>?9B.`eI6$4@"&;7$t<:SsJ35+BX[sX&=\L%!oFA8i)9Am\S,[kl)/WNNkq%)7uhOEo-GY(i#%.YihL&B2mbehn5cq
%#E])A'J&/m,E_mmN-Uh=p9G\cQ^Y18C;*qQekN]u@_0H<(COrQ#fBRk9]WN;2l37:@\GkWZJ`62q\4;_Gc%MM5KC"*p1c0*i2*3,
%@SF?p,:j*Oo.30kgJl@Vn%jkI,72>@=NBJ%k%<[$$bB(PL8n``Q5M:F]4oHG23m_epKN9L^bl(P/tm#h<LmdXF!jIF+mQf-e:DV-
%VWVVIMhM5#oLuNU((mR5<a&h]]A0'j4Em>`CHSu_;QAR83Qo^n,S&Zd%T]'.-)'KP!Akp2:/_)t4dCna1s6&iIRMB@-G^q+npsJq
%M$\kEO0sp-QeOo1@lF;J7G<hg3KqXjE"S63MFH*9k3h)s`*/E?5W9<eVrj]\5\KUGLnbS/\@BdP^.?!B%CD0d'!90^/(L4Cq-6Do
%>t!&C%r9LPHAa5a<q$#+Dg3NaM`BE8NKg[]D$H"\?9Q,t6u5a+(V$;575cUr;0>GaGem3"+tc0.PTOq>7L9o<'$@<#bi^,1SltRj
%)i7-'5^"SZ7tOaGUp\5Yks3i6I#eIp^lDkkcOI-oSITDr'i>dp',rPaYr!o[I`ZWhDYaj<pFspG^tnu>3(WYG%=cbu<_?B2=)iF5
%B(!tZ?2^lZHCe:!goEJ*,>*g_Mhd7r#^&0C#*=TeoltH<SqNpY6R7a8M\=7-WoWF%7/D]&6!\ASr*5Oe[,DP->iDYk`#]`O<DUF>
%26th$8KFP;CSImiY`Ku!^J&6$FGTbT@aJm#@D5.[_knYMO/*?7Sk]YC:a.n^OnE#p=,o)@79<d;dth'9.%1?F5VB/#^NDm>fQru0
%<Q^DV8ps39h=O=uPMBFO7_(fkkslkre9pOqh0%og3h1B"lq(#VGOETA=9X/Lc+!&gaCGLB]#q,XF20VO>+g:C,'p](E>bkWiOZYt
%0A(R(mpI\</nG!Fd'bJ@,<YT:iL(^p2LqFY1aV#U2"$f$p.?X:X79QPgdAGj[oKk[`p!tga>6l`fOdZ%IYIe0gMfK1Nt9-mfM4l8
%<.nrE3nNr>BXZE"b1fnQ[ku]\Ld%lq3Z36Q=R08b6fHJP3,5ZYV;E:+7MVUT'+S$FTE`c>SE<R(NrcL<Hl"BPMrbPLTIRePOtRbR
%-)OT.B$Ljbg7dl';OUUhOM5;/!-30C25aaH6dcFW%0Z-o?"6fH;M,UUdYqN;S"a`4#=t>O0l2/m0?$Cp(5lk63S(4^eYEWgT99>p
%3.tqc[V!ndBR(.gah2]I?]R01l?7-8@^:$CZr?%LaPI!K6>rEA/\+'O]1b=Ga'*3QkgerYaUn["61!GdY5Xas8>I(.aCI5+D[oJT
%a3Y-e.+.\.]66q/B3mY=@;X.OVqZ4l%C9Nb,Qp38hTD+KN,aa?F#*I9%*@"YY*!gdAZpMK(F>4;&1:VIh:r;bJ;B%%$`MM(6@9(?
%OH?9_,^#4B5l<109%c)>&@"*GF)iF?"A66$8]_`oJ:Yp(R7ai/OA#b$L<GcVY:6D('<jK$6<5#k#=`=RKI=*WcISMufSWsK>J&?e
%]<W(u_CpO'V&D`0F*e<iq@3Oa?t:Uq3%)I\1i8I)Z88kIArrW>%3.hpk[>4b+G\V24EY<K&q`OIQbZEG!cG4;8h?G\0>.Se/HI%2
%8tmHdZSV]G@)!t.VC>31d5&n?gI^e!+BhBij0mJ\7%Lb\7+f=qm$.#'2UgKF@@\g\djCk%,fAfa5ta%p?CmT6U?)c8K1g0R\jOGm
%S0IGDVVRo$(U-CmWug;sKG/b`K],BfSBCe_Y:F*MlkdR(KGGU!RE;5uWnk.\GCt96'q?JgjtCDBmqF5e]Sfc31^OdI\#JL).\fEW
%<G#OH!1/8,#1.T1m0F*)PgW'O<q?54cA#?n.8e8jXCZPR3JWYYOu5kZI`]7Mjm#rhb]Qi]K,b8gAjTJ)V%Q!BUY6_=$2HPgi"W[I
%liG7rRMi6@+]_DaPpTaGfl`4OYp:`Vc[L%qRro=::bo#2$<jP'Q9Jb+@AtgNW6,.t$9D)UKRI#R>2Tm+W^N40lgj%3#qkd\:dn!:
%,Pqp$K8IN84j[EA2dJS;(=q%iIX1#3YI+H^Fp1igJCt8LF?'M6fRgn'#+O61W4(c&Xp/&0U.s#/=)FWb;+>+!;F_&PAXXtKZB<=R
%6!9UgQf;IT:`Q(d"Z>He'aP5`2g?$hea^SAKaA*#$YNg=H`@@?@6cR@J\*VjB]P(SpqO!UXJPSM.P8][NibVW@+B>q-[05J6C$\6
%?hfa'bp6Nl1TKb3g8C^9ACJ#Z+rr%S?8Y,lQC%/Z%TeL59Q/X@lX<J0P0^bhV'9P2ToUqoY\)+F&=Zd4W!_r^NlL;WkY\4812D,Q
%M$@Ei2`fm_"8B%:H<$A>KhViar,=Wa(^(=]CjNoufkL5g4(I0]]@8N!D`Th`RSQ0De'[d"5e'[8].DKLIlQ51)fO\oKpN>j!^H,p
%=ZKoX'@9OEhUqF`599^ZYO88N)_^#kMfP9`"s%uhZd`3(gN>]+a9Wk(s5#[t6^Ydh_4QbRo4_`_KmAXeISTg*+5aI74#Y;o/;6[d
%g[:)5C:>_*&T=04oS@qmaY-01l"]"I&,g97:C%`j0=8T)c(Z^mh5;0.]>eh8FZ)l0F%\*+JU?3%!.!)'lkio<q`dE$MqmSZW;rI*
%!?R:9+?dt-<UMA)hI5b53kmO&6%h58W$<-hNPo]&O&),1R#ZWD9A_X58HX7M*FJ5>hG]Xp=0<:Z:Z+C,/H*i&Y[c6J)+(&^HY8;8
%KaooLNUN>hTr$UqnB8(Z<n-<NoND5!!dC_BbH]M`->d>P+?omO\prX+`8P\nGAkP9rS\eND>i+'.0)Ka!5Ja=[A#^!%@X:'HXr2&
%0+hQ4OJP#^$$b;.^7g81C+=;+PE!7qS(kFs2Ra&raPnd(W@1*l74][[F'FL]9^!#afYU`uFX%A+h<3QeP-%Us5MsZDZVihqEcj5R
%(@d%"Ei3$iO4jLcDH[NFV!G)C!:E7BN6,[*)d7.g\Kp2I]4E*lX@`[PB1GL,Ve)QDhcN.r<Dik1H<FitCG'D//ZkV+MJ*L0'^"L,
%7.LDX+I3er@q'bAQ/Qslh**/"j(NR^m@CN9)bCRhZ4XA$Xqd2=:-pd6j!EfH$?(S)9PU)Dq8<I^:WUh\&<f(F$!aWXVuoDHIJerc
%B%qjY4pN[ejsBVh?=?`$8Tp#mX*lA\@T>>pXkWXGeMGCH.E"_XbC*lKrPRS+`F&qO8TeS"nra4FP_L-5M=M(Dr(:%QDRW#\c)3YC
%3qD]"W7=ti@Xm4I>c[=ZY18?Y4JS`'V:.RN?;O]Ef@g>AWb\&(S7>5&AlLqQ,Cq>MP\/oGfh]6/[_uU2!:YI$1')CePq1gS/\,]b
%)qLRS+ZTjDfQ%?S5inZ(H[icsq*=.A:bApc-tN8FCUU$K0q+Vupe(3+]Jnbec"t%%Ik&P=Ut!in2br;.lMbNE+KucR,b8MPRLcZG
%0H>rBM!n:p)urc<[^)V2YOIIY[mKb0Qu(VL[eMRU?D<DnDopJ2;X-_%F]^W($^HD`'isu)7*+0rS`mS3@6MB*gG,4.%I)=QJor@Q
%0]\I0@b+`+g"7(A$8Eu(9hN!bX@4\k*A5=GB&dJB">pTn)kQ%<r6r5k=oHJI6-g]pb;h[5cIr\hP6&]W*r6moQY.bA>1(LUl`f%\
%@Mil.b&<C^4"\c4$=h/Y<jeLDCc21)W67Fo>u_V-E$2c`_*WO<)7i_eM9o.+'oJU+5Z-Uo\pis(j*jo`KMBrGnE:M99F&UQP.um"
%LKtW1_a7s!6`SM';>)8kAA6_-Y^7sf"3>r.Q(`Z&75Z%Z@90j?BW)R#WJ2X0[mF"8h';&cH'<TrEpUu/s8G!k<%2+:Ztm9@iaa77
%-Xp1-%/;)<Ja.thH[sG,5lRdhW>.%ZVlJAnJ^QT<9t;Na%U9deo64C_Wg0ZK@KE0C''^>!])cIf%M$O,0)A+slA9lFg%p</UR3I.
%[]$`.N)d.LabXXn<*.`Zh:+/$8B'nd2'qIf!/MgK,7]gpG;h4L92V-)!Jq$#W`(HEWhF747*T,TGI<B0q!#6M!s'BQ:3X+&WVYR8
%3bsW)C;GoCR"U;>S1?O,d)W)07p1Lbf"EF[3>j+``MuSICPXF`]P4ke>qZs%ZQF6!Gi7fPCT,_!(lN)`6aO)ZUA9!#I7TF8Ja05S
%Z>A'>O`$+dE/cZ/fqh^<h)@]a)cGSSQ7c>re-0t[j\LS;p0-?NE0FQH1t3iE$>:CC<:k2Y:[&\)4<FdLJlHq28?A=X!-g2nJddbM
%Y,VIF<SBnN!C)r2Srs\\FLn+R:_.!:6flN:cpN"IIL.;PES&dT*CY8GL;>rcqH)u\R0OW-M*+ZB]sP+!\$'F;+9`V/P/\UXJ8cm)
%N>Ch0(Loe)=h+s%(jDMY&]1B.#ABau'(GX1X^Sl;^F4*_QAg7*2Dq0ai4?>]'AY']F48qJ*J"/*W?ttjHp3]ne&@chr\XMHnSE4?
%EG(W2PFD0_/eFl%g;,ae5Qb1dW]*i(7/ko8<(RQ=`BRF7SSBO0+2:T00Z)4_=ZiRm0Hn3::V2DC;=`pJ&e-%;<Z<qBWePuW*+Ogn
%j<HhXaGcD8r1pA]hA9Ud\fIh2o$`T1F2/TJrf;HSA9LH!@lMc5ZN8WjS.gAI[^a5t4SshG23B\g-!lU)H;Xh,44E5A`gHLDq.sT,
%Y=^d=fd5;r@-222VU%gHn4icp"Pfb38='B0"3)p%6p!E0U\f+'B7W+7>d"/ImT/VJ6&>je'Ja;;Q<_u.r*2/>^EtmQ(oN%S@J((A
%$l[-DjcKQZ$=Tb<MHD5D!@;<4gQ6L7P2`jG7Z&47U`a0rQ;^2IM<?2E!b?Vddt0FjIKa5"R4dKAYK+!?(o]Pf/UCkBf(>s1@h!Gg
%gF]TW%5]:u=%>fTl;q&9.tP(_1JGCK[)L"S.OQ<OPVstHYQNSn$_!Ki&1]Cg@+IiiC*8ZFU#%LTHgekh1L\j=HB^t49[%6-(MCo8
%F+TQjI7Zkr0YI<3c_UmngD;iiBp:M7<DF30<(s>q2E@DL&=Vre=8pJ5a]JD#L9po@pmiSI(RDQ(+p`Iu<Pgq/fQrTB_'e1H/TL*`
%)6S\pd"q`1S]Oj&3]D2K91?sKDFSil*(T,]_2MAJ+_3"$SPVV.8\c6GrYm9H1q[BuT!ne`FcDeKNToM:=fS&6MN@Bf8F-lJ"Jhc_
%aY\e(Xuo47b8?Sf,>_$DA31"fKi;jR0M*`:`[G*jT7u4C?c'5GE<%0@EZorKeP##AQJYorTk4b+h0UW%HZ-t"H:-trrj3t<g!7lM
%r,V-D`W4;`IW$UjoH0*JcqcrFp/Zp^Uu2k,-l=J?/^'O$Td`^d:Re)K[FY4VK36XqRl^-R"ONC'8]RWc)dS7'kC:J#_>/-:q8iY0
%.TMs(r.99@+D:*fVAIM9Qme9A;<T_I=q5Cu'cQ(/Kjn"Tb:X)$rLf4h7f)uVFDT")2go,oe#)1Jj][/\k_$-`IQfZl>4W_j"c[<H
%oQDfn0)Kf[\f?)diWXbpLVld)d%n9$\U;U8?#1FH%M>*rZ+=6*BZ0W*YAucLd^]7(X$Q\\rT_?P].oL0%46dGHQdP_FumVafkuQO
%A3A"+B=sL0<-$a$#_(NM87KVWH2:*kY1lH"-`Ig@g(uD.VZ;K'*Ui(C5Q(E)GKqkp04[P$A6;K2p*$E8M-(?GPX)CSfT\i5h'J&L
%8,00iP!u(P",2#2_^?#kZ1*Ug"G'SAO]%_hV<b"_FNu==;jq,)YE?s-Q'1'ZC$fI/k*ASNlR?e1%T%:YcFfMtngZE4lo>nJFkS$A
%oYM"SS13`b8ep*CB33,u3Gk_mqe9!Ieu,/;q7,+4BnHoWUpknPM_6_6/*Ojc`j69\0_tJOK]7NS@2C9ShS`(p*>9hFrc#@RRTZV>
%M+9kh;cY?G?(jf*PGVG_q!NRR:+G^q'dSI*lS<=d8s^24/Ws\IE-/B0*jdN",j;;Y9!gOJ:7+!Oh@.U1dY*:R8[=Ei?;_78CHt4o
%RjNofrAH)EJP;gc.B1*3!cp]a,XO5o6t!gLO^L;sSc%DQgpVSjd%XP;3/X)459+k<3l;gkpM^MTo4dric"i'aW;aHoNBKN%e'[d"
%(3P&<Lq1rNJG]i;S/dZh5rV<$*L$WJZmXdo3$)*OaLHM%ZjJ?r28@.O>$i>;?W_1mFuZ;mB#a1.og9Qjd=md4dEuYi1b#HEh7%sY
%+e]5a#.8q^JJhK/(R`tMQKO,,M!iPq'\aG/EZQ&of13k'Q#e:nQ_IX71kAnB6AAqq;`"QS`/7#d5+.L@CtkIaNZ#UCn[GESQF9hK
%=FrG\HW155p,jI\JC^DmEjHVYVX?7U[*.OkSoZ=@DO4Z;1^1O=2>;[0qC,-FC1OiP:pPdI.oiWA**MFoN/YtYCoPTo#AkrC\S[,k
%.4sYj=;D4BJ%-q&?LP)#rLsOQ-+<Zf>$"V&94!X,(*Yr_bh31'R,/Jh-l_&p\L>/.5R<u`JjI\Tj0$R6Hn_W8VUUMj_'u<?BKfr%
%@<lW]JM([-B3)(]]j<LtBsG`M6#3i'PSVUTr&&$`[DPqs(MIfeqqkoe^sMGcE!CTZE3k?*cEP:A7.Fn8p0ar$N=2Im.IU,X9Ah"L
%l,D>n3Sr>,[e*.YONI;#Z+Z'f"EB@WrIBoqV1[i)D^kdf6+j5B4[2*Mqg;%G*%5N.4[A_AEgU:UW]*Z>^\?P%qsIfc&(L>J[p#9I
%:OYHQSehNqoo7<6UAE,%F)X/d,c-d"^?'YJTOo*"cd#2d/$Y5c;,DbXS$pVG$*mq__%XL5o1s+h\BZg,jT$F_+l+-FI+C"(GY96D
%M(9=l)U/krB/=>_4"0g"0HTMa4a/C_jf&<p85#,f+1-TGAgMONZ.dTgBR:?;>lB:]]_@r]1LTI/R+p3IR&;Au9q1LEJdaAbb;a91
%G>O5]J^Wa4BH3br[KO[_oMXdI;3l@MRQ/PBj<Ub]Qb7q#c8epfY;/5<p=$=)]IY8hO^+6E)Y@'g<O9uEb!.$%27ICJBP\nsGH,5o
%:@ts+,Xp-XKNTD]4CM/<!^`kPi$E*-AnDEH$`UZYX3b>)@?&`QV2\ipY'6`JhhOXO':MlXXW2Q;a@).54i$r#il,Sf2:!#<VhAtn
%NV[?n$0ja17SlYF+2]f_C\:XAbftI6]26B56p`9BHH-2R@_Qei,pk#?+^;&t#-r+p1eE?AUbW$8,p>Ib$oe^@1\apJ0=nXB3l?jI
%<*,OrfAei_<NG(!UWY_3Ca7N`JHQkTekE`CW_FWL'#u;m"Gh8ih,D@3h(\afncM?_V6aq?\BLc1"6OJ#,$d!YYUVHtA6J^\:u3^Z
%g=1jYc6Lq7\<)AAVA/Q3rM-8h,8EpPXC@d#bcW=>-tEbcj__QO*;$.^DP\\hQT;r(7%nUfFcn5Z>a[A;WR3"WTm?#C0[dmYGYj.s
%&q2$bK-E)G,V,Em:#gZ-@'mR=DRosGUI=YBYrT+P$W>MnJf2qF^6aB:QgDQ9I06SEk0kb9E("ND/@3=;C_=EBP&`lg.ocV^96V/,
%UrlJWlS7OL/pj[=96"(,1"(U_^Y"`@;WNW=6;ST-;L6I+kFqg+?%HQ[4"7UcI9q,0qkCLoj+]S)0MLk7`X%DHK0`8cLt-#n[$jm`
%G[7>7/8(LhX_fk(Wo,RS+`oU=W=6,3<ONH@P1EV8J@0cQP>/)<4M-bkRH.R!40_dtm_,Oe0D-qs:`+*5Z/e,]^Lr!>`BMj(5'G#)
%%@)WmYPVshdf8MA93"Fg]].q"GVp.<1S63K0Z:q(UNu#$Gi(Sm\Wiho_:t7anZ:Srn]S3+\:6r`=qe4$Nr/c,W(8I@74ca[[^0K$
%4dR_6\F5p<XJS-Fq=WC48odt$,[]J1jBR%QoB_Q*i=.5'-^NFW1TlP3*-Y$94>,&&`8p6'8PAWTUpK_Nkb:W%XiF"JSb9L@Eq]]n
%lp]@Z/LB<,G8Ja;<-d5_:>CjeXp1\MH&Uu)-!BF?c^Eaj\S:\p[Cc>9STO#ipr-ObP4;Uj8j3b\og3Yc2at1Ef#J1s&MK"N/j?*0
%[_uTVFsJ1p8l5hWXid%SV+]hR1k6>0Z0slSWI4QqP]d[<#9&T('$qbt2hk8G@PPK`'W3H2k$YJ0j&d6B^Uiu`76ueaWDcRI-LV7;
%<*!+FfWj^Vm+eQlW4a3L,J9m)e_SSkQVTj?jiI1dmKWo[Y'[<Rd%>\0ft//cj!#^e>+3gMAkX5Ep'4SkhmR>f@m%O#o3l]Vq5TjQ
%M^/&'K'QT"$aHbb*@n6Q7\NK6b]a\kdH)X:N4l`0[r(Ce1-o&LCfs0DU$k/e9akqZ![CRUiG/L&df(/67F&]AEMkF*9&X^:G1g.g
%Ce4("H&tWD^Jp(cMLu-=[!%IfBuI0Hp-^^48=,ChVgTH[m[]ik-9lA4Oo!N;IQI$?rcc(L.*k'\5'2n@GRJ.8'Ut:He#2">qjtR&
%C=;9>D_-D/bL,d(rQM"ZdqUHs2/>KG6CEB#G?0JO/Va@]4G8WE2\##<E=')gaV#t)P5+fq:"^Qkf+6Yic^XVJ==[5e>HoIS*Dq>f
%dm-4&Bb=QJ?ROL0m2=Y8T)TOR&.H;QpA,@<./gp-pj/XgVE5PMC&3s#g!^8-pUW3$HHSb^7=H(hXPpCo@HUgIbOI,)`,<CAC(H=Y
%aP@).!15di^Bg,%SaQnV%a2?N'N/b_iDAdH5c9[>-Ahdon"MsW`@.^dm/&i#74b"0g%q:tBK<75>&_o6T[@MhmqEL[rD3Yln'c4X
%IqZRCRm3+-+/`_>A#pOa<Dsn>]V/ak"t<^7M->:^hF'8.$EcXl$"*'Rod%1*[C@+oK\1^o)4U>hpXC?;,Z!MOnM+U(m?70R^]r=o
%;[R]kL'8>P&$)?\(Q3L($p_'9,[B$&Gl6'$.ChVGn?.!Vd7&Bcdn6))=?u0C*]/!qhk-dV\N#%DRQ5b#2'l&RUkZU_eNo-.mfm%m
%8u,SilE/lG;6Jga&ERJ#=*9HUIk@9X3m5K"<q6,Th$A9La*ilma\SkG?:RO0pc+CYEp,[/EdmjsZbY':pk!8HAtcg<*$Lj.H<\Jm
%`_$aVRZkj9"6q%.:@]eKEX>+N83U<%#-[;TJ5)5+-UEBtF+?jthIIL#1PY7I@+<N7;b@9bK%[D^]BE6HoH@0RWG$F?'$B);c,U\N
%$UoV7E^]%1aVC$%KT%A,jM_T_s%[i&jN:aE=iCW.1^BA13#r;-Z@g5:V0dKg>]4.EUD")4M2FhYTg!&;=s\UB9E;ePBj\f-2j_%F
%QB26DT].5&Vj]B,!4tlCL:/bU6:R-%R_#5r?931s2'P/,%D3-M.3RR_$*/WKY-c<li`dk.]W9Ab;fnY;6*oWq2::=b%l0*\F9iaW
%F/u=)(T3)LX?aFnX5h@Y@E1)K2T=q.RgQOJfTEi.(&SWSD-`iD(5o/!<U!;5M.psGYO#O#<Xb,_SW@u"n20YR:#Xrc8hIj3$)uXS
%>HQQ+dss%5eUn!K5lt'uEo?5C.NYZ0!URA+d4_>4_bVXL+mkk=M\JN_;P"<G;FE!u&1:KkWEZfi24u?ro5E'hLJjGh:8,RJ2g-Ts
%5/?41<5K&`a;M,nR"]:M"?'p-3?07g9,QL!P6uIA&L*ue*97&uF[^jWo"jBPLO&5;`c1B<(!5NG;`bu::`Eih\C/;oA0'FSqF';c
%D*0@$15;`9+D,N72\*E/JQap+:Z9A18_C'&)@:M.8-VEJA?*o]:FmBA%r%prf(VbQ(0_RP<L?t;?[GU@2ADX7g;bK9/6=ZZ\hq0X
%"u'@?**G#Ub??-3I+tptrlapf6+8gJYp:H$"O?8tQJgPQ;\:<2Y``pVTi*s&S`I&3<tooNaXoja?c"j[.?:7M8g?:CB6iJkN""mY
%6kD.`IC:[eM<Kr)G,Z?8e$oV4]$btcF3*[P^L$T%'dN!W<YP]@@RUM)T0CRAW"ENdTjl99hC(I(PZgVBS,Er(hgg_Xs%=ga8i[dC
%B>!Jf8cBc--?AaODBk)[b2ttgoAkbln"u/2[=.]!f=*sQ#FO6B[/`.Pq_W(K<-GlaMMa4P8(h!tpe]lFkQd/n_<TdYP;fY@lOq3J
%dW0;b[nOb&>sK5OHdK"u&>s\AZ$]f=Iq!WT`1LqDT2Nmm4R2.8_<l[bR"JCXEgRGtm;F<3Z@Ye2/V9\_,r`5QXK5NL]?89kO/($9
%,\k.p4FCj#]B`PT#1FpT(j&:?>nF#V'Ttci@Nt!o1Wo"fn4=UrTnWtCBCQUS-O0ks>5QqPBBQd0M3/N5%1?^(T(@jSeT%VKU?t^c
%L#.`7I%3f41SDip`?>qQXR[,eS_-Gc:lPBfhFIE=8N9["af[hqX`c5g;8kn6*/kFZpV&Og5asErV7&6dTcmE'>4#of+^_<"iJtR$
%h_#RLF7SB>!R6eQ-V,T>0MZPOr5?EY(ufZM&so=)3XdatBtd2W5L!ed,Y8RAEb/UCC;^t3[q+nMMq_o/#ltsteug02Wog)C;"."[
%/8"M^[LP,B,)af.ZH.LnA\*M&KGOH&(R[4$Js0:m.ri7Uk!D`2UI1?Rd:&&ehkY?3!Ub`id]/ZCPI/u+B7!/U<(R)2G+n,%jJ*k-
%Q9@"AYN2>^Xi6DtkB3ZY.h_*G)J'`?7:lcN,#<8,r`3MBA*(g^VQfR>%&GQa\jqpP5]`"+=4A*Knl,k,B^@*lX'+F5.r9udb48?^
%_3#ii(.\[mHNr#pQ-N0_63)e+^[Ab"ol+?PM<82UitOPNI<-EM$g7Y&?A(1C\$YKF84;g.i$lRA^2MR1B+C3XEU(f;Y81\^n[4fq
%2!'5&,-L)R3pd3(8\*;e(!B$<J?H34[E)CtkYC;XRiEZ.:0h1L/G]a2#$&R@_K*^Spc$@OeYLI;^0!V2V+jHe)r_`bKCYY%_g'.e
%d#O?=CoMuB7P+jVY3V/1>mhhA4<o\5,<JfhknMOGZqr4b#6.E?Kd:LU>+0Or8QNI%WH]hYKC.AF.>(ce4GrHh1g?sU5'`qK]>]@l
%:`L^*P\]SO4nYs^6?c`!:7f:'L4The28%d]^$MsH:WO.g[3PUr-kf.r]oXJ]-F[P8[Un!K(b.l0gh3`U*Gn\JN`r_3!Lc_F>e6pU
%I2)<To>:@g0qarYOqH8*p:6WV-XhLMb&N9d]%79"W&@C"]0!JkN0C_WCl/Xoqe@<+b2HuEWtf=plZhWLct=cJ'MI$CkUI8H1,l>?
%6PLHB*0u#JR;uLX"P*iQoRKSJ#AXi=88%L2/7f\mfj\MpG(UVlmWdPeQS*"Eb#l*m6*nceB1l?)>Ku)pK5r5Qm,HO%og[jLdbrWC
%3hAB`dASh'Kl^4WpL9r/`d1:.fMpCS\.)"?)Vmg$-jbr:ohc9ArY&8]*=fQqXoU:Ahd^mu/0dpN?^9*9W`['*Paq$)cu:E5n>fa"
%8N't1V%u4OEj^Iu4k<30Obs^5O$jnG:1u*-_n)+=BHNg+.LB`)@jUemap:VNpQDn7fGdJI54g#HI<G2C1;N7gmB$/ROH!]d94.`X
%p1+EXjjb[IIA\E]g_,FI]KAYO;<SW!-'W)31QbVm^n.s%*O#a+=MTV_BF1FeouViDS0d^i4^6L1M!?ie2H<naU=+bNMF6Zk/3]NV
%0Sp.Yh2@Q8kURp7(FZjF%>u\+aYS6jNSCd$U`N[,7KJQd!@2*>4!8WaWEm3&;52grF*ONp<Acb?20Bjg3oZ\tTC9:MgP"E(Tr]gR
%`fdHuqc@q;U6d^.m@CaLIS$j<Jba1h[sp,59AL),/,JB\C6tT=`2!FTfX%b4#\cjeF6E/I'NH7O[D'pRgNspjo@J\@926QcEB"0^
%/e/G^FsAo1lIRF$/_S:7P:jhtRgoJ'Q]p96o!#cNaVT(uXZ<etj>[GpLiH"jKUHbeCQ6(UJ5;^>PZ&#h008[7T"\=Z$dsrN?@!+K
%oV)^S]ZXj+cCqFDlI%RC)`^_:N9O$'0g$P1Yh1Ffl#PN.XXGMn#tth6Ua+H"RHVN303]p.DNddU0is=%WR?nMHhX-N3bfHG[#0)?
%UKf^7!@MMjEn/fJ_.uSP=#UM!()Flo?/Od:o\p2c2I2SDYE;S$[!PY/^!S#nGPZ!oL3[XmQ_9Qt#<@)HF]0U/S7WAV'o7:/1JG.[
%J+9#?4eC5V7^Z1`_sS^%i#Q5^!Yc:WE2_bTf-pcHR\1f(rUh\9H1LJAH*?58df9X4?"W\E/BsHu]4'hi'l]^_6XoF*k@/i_Pdns$
%_C$Qi8sGA@YsRY)NQ]&-XSajX=D$I)rg,Sd,Z5iEiY<L=on?FS1]g^:D"@1[G#KGD;!tL8KID*QPP`Ht*KhLCj.KR8e0s^0f8(p2
%(-Z#f.A\#cL159^'.,-e/]kAj\1&tAA]4lLp^iJcUi@7b7%s?%*>l,r]Ma1q@0*`mRQ(d'V.e#NQa**@gm-n@H/^=<@>2^]1!k[O
%%)Es&qFOY+\_8KK:O(ebM'/T9N*6Y?@EFD"d`!@j^3Q`9R8D%*k2B:I,Y&?b4l%EkLk_nI->fHo[&(VLY[P\Tdl3>9M\E&k57QL\
%/+PR=L1>&J*TF6u4nr_X2H83\FeI28.GdSgppt;JlGF`4\FIgUM0cD^%G!k;VK%Za6qa7/.*8Lm"jII<W'T*E6Z$cP3k@mo3Ae&r
%gKSr@>J4VT9.U>Al6OciF!8A'&)VkMkI"R4+;s[T[#^hW&](p`g.'<ZW2e"lW6cK.hX%-6Bm!4Z2aVg`+"ZeKdqaJB:niNZ=Z`lU
%(Y.t$Uf^g_7]L=AfKe(n-u*_2/^Ja8pO$6;aYS@kgL[H(NDF%^IZ]U?nk:NWMHDc9fTK^K[1#>PUfP$)ae8/sE`._@D7BdDM+[:Z
%/.V_C=Z>6Dlsjmg\1lT2$/2OZYI!MNKtuBtj/p;+i>&:@5V.a1CD!o%mLatKWj3f1:O8sd/.BgiD2!9,\bBmelmdEDm(`htNLBkM
%gW1GgfIaiUO]P:?&o2!2:9(#Lc7'CfB(;m:=gWf5'FHX.2k3XPq.^DMcUTd-N!%+0WX"!gO[^WhaEu^ucXP`63sAJj,L*7IpJLbR
%Ok7kT$fUU`r$O;5VQ;&RZb4o<)".OR1:AGKL,#mDl%%er0,bsIAb)4[Ust+-K@;:'(u&<&dmr1,(T@KOCX/b98iPLClh)P1r)h"8
%B>9$\KYB!`d^@fmF;>9*Ar&+['qXtR1f^\6H^.9cA6<#;"]`5i)&%1SN(nF]JB@XDZmA]o@,9cV6mF+>k)Z9`JEYE;N5p6;W;E!'
%*QQgfVEtA,LIKU+AH("$mhs)!j:Jq#2J0["ra:df9EWg+hVgpqO^jnZLtCm/ai>*lfV4#,m7l8dA]u4M\Bj@>AL]<B)VfH"A`;8u
%\J5cV?S1as>M4+JFI1'RltJoC:GMi_Rg1tW>\.`/0S>MIgth5Cm63k'!s3np;[7;uR3Q1R<VEB]OqW,-d3HU(-jto0\O]@),"YKR
%eraU>]oZG2;,E@@nS:0g@MM!OdRG].n(aCkifSH*h;-7Qgc8+YBW0'H*0nVh.=ZHA7ac&rTg!R_@S%,UR8^4Sr*&DI2E%`ZYI-dX
%nO>[*.4$n].4++X71&?s^*tNJCa>5:<Kg$EHi_9;Ot9!0MA-9s,CGJmFQg9f^.WSW3o\nh@m*eF,*:PTK%>)j(77umLr@EP(3MBQ
%_7N*C5S%gH.uTAm'%X5b1%bgdHhXMC*5/2jJg(WU`1Fi'E#mCGL'2`e]=F`"o`q2KZ_Pa5gc4'O'>_k+;\Fcsc@l%E:48q;n;qi:
%X*e,f4"T[9-DeGhD@i)bI+P'M,Z$^u;A:1gE#C`Q'N'i(%G`q<m41C9>%nC<!2roD_,8A\jNdCq`3VUHiTo*\#LqCC%boKlO-#g&
%PUR<1%%DCKT#t3H2q7(['RX!qm7j^$lLbBQ<^*`9WqFT-Vun?MEDLe<f,HMnF<gu?mbld,4Ni2:6eA453dI<ChlpLViM,'"6N\rB
%gJ,52AJqtfOG]YH3JNJJQ>uF4ESu@/VEgG\$FTe*d=kH6?ro(sAHJ\D$u;9b*JL9UIb)B6X5+(,3BGQj@RW/<80#:`!qqc;1U>G6
%kKnt43grug-UR+nYlM3QX268-G,]Md26Y!20AU)4l-%*bU@-,*e?Qq=CNiK(85+_SL"icGrE*FNm@UJ[c&ujISf:a"e])&bR2TQ6
%a`Jij:R6rJ3I[%GUpWps1ipG.a\c;BbW>(sa6e36d8@2F_QGO43$(hF_Z_RCPTHg=!(38e<HuNPrCe9^LE<51/6F??M,_UYp<Ga"
%$n?*QFGpko$5C"]mo_fm['D]IT406P;o8ouRnokQ/i,!)>^SS*R583YGpQts9H58#K6pXkVj:tW-'A<3U"[\pXU,F^MsRi:6HF!b
%)R\44c+&Csg:AsNF1l-\@3!gmU435o'_>9[S#'i!5hCt#X)'^0Fao\a'^CcGKVL##,XI:\N[cZ[a-:.*`i5F6<Mn7Qi,uQE(+DF=
%_pd@nD!\-qZ:a!c`(i'Dfm.;Lh:juk)hEEL?^#Fu@Ks_/%ZS'\NF9U<[i,>.!lTY,-ja10UEl$Lhp8H<nOOD25>rcX`-Kg'';(Fk
%c\Sh:nHa\ohApP+.;gsW.T5<GmB-1F6bPp=UBFM'J,IHI[B+jD"78q%O35o9g)8=+Q-([jpEo#RTnr?L;KQb*fFf6j/Q?I8;p/)t
%h2j]9:>fYuWi&GOd&&D,C:PbZM-Y]s;qIf";C#-r)st5qa2-H/ZA<^lM:;-V3a+7TA.IYZi]K\nUW7V1_hg[Fk+Rl1e1"iQ;gHm^
%>)Fb;TrL3gDc2Zt'GSka@a&#i)+V=IE0F>Vh">d!A9ZDcEGWo=-pcr'.B(C+S^P&$B5iE$Y0_'_jHMWbfq>+W17ukEDE,(qg7%Xr
%#krJ]UcmH_,77RIau4\UP.J'&T9e*P=!fIP^f:g#XeT>2W3^LnL:k:j8W_r60)[M[SjqYFRGUGqVAUPAdgC<&He3;Z]iLFHRAOAq
%aLiI!Wi-r"]a2+0O4kG(1QK!3Z7_;(Z>)!dE3Fu8_j6d9P3RnQ&?=3bM3"k.p,DnLi'8lb8D)JTBX5U55j)Q'oE)-o$a3Nd4#0jl
%7&d/IMjQJ??!tD%].J/E:t-jZ('c=p%@O(hZE[[*gt?r%PnWLFFQJKc/:=>+*osJpG68R2Yudo1SmNE$?U>)/3[/\U7qZYAW[=!=
%$#B!YBR?WA)-`$I7mS;FR/U,So],4eR$BMb("+XGL1(fgX2A#"AT7`aEf`X^@rjl7Iq`h9]n_Wc7]kNJ6dWD+V2]pQcarZ%@s=3A
%nJ2VLf(2M/BSaHn/q#BRf$`"c5<1K)Bl`L8ihTQ7_1Z(5g3D^Z,TNr"Ol!KFFkM.J\2lZWUeN"T\<slpnL)(KBTBKb%%E#EF6K@!
%qB[.,S5?+>GH+N52lZn5b[Kn@m#/ghB;8b1_3).)!/1ih,\7R04G@d=fVr?#8!(4mBdo*cT1XrJ$XOoM(=/<(ldpsVZ*e7Yc?^/M
%SU=JGBj/eqKITb*AG&PV/'%^jNR<P;>s^0S^PlbpYojMsX-HO_UlN\NJ1]_,=Klemau;ZCQV'$p7J76@S\X<Wrj$VfRUSiulJ,Db
%Zk++X2Kn)d]'pKM8L[M/lPm#]5NtX#m4&4OmY*2L!P(.T5hk21$9,nSbsYsjPsXe@6TnidrEKT6UFu<Y[^JHe0%@&Ek:R@gTO!2t
%P)mUF8q//ERF%99Uo_'u6%h%dA<lR5esIuNKj_1U6OT_Z*F<jeW_n\;Rc\q,R8cdDJdr6XZ0B5og^Xmj&ZTk4=e`/?4.T7"oN7dm
%nk#@uR,,X#`8M"a[.pUD2A8/?T4$J6i2=K7k?5brphi?k:G+jih#DG8/Q[[UVQLHl(Y8$nTi>H.$o-O8ps`sdcJgChlXcpq+i9/`
%*!ScGq^uaZ;lQ.gPM<aR+>p).&u<OS,E%Y9;5RItW"f]9W]lL'6a#_e2-uJu)2*'p+;^&TqB"+@8E)oPMro;.D`T2E;%P:)QLnj?
%Z[hetq/f3%!C9Z4YHMnWGA\('CDXXPH&maQW!cVE[i`S2dZ1p:dO5.O!`@5'%X3\o:tFi)pL6F`RH,SBVCWs:65uYLj(c^[kEZ;e
%IA@In[;#_1D;?m)KHAA-<GP`3nR?(WeDST@L>6=hA:k8@O6+OsfW0kG$kRAW!N+#7?phr*J>2E&dK/FoS<7J[P<CHhg[nC3G%TI?
%T\c#%h(mJ(j"7nm]h+'dcB?nIo.BDj)=Q<Qq@_kN&.3KkqPPDMZ/"pj-Pfdf!5t+uZjIJf&]Pd.PN@pCdb^)hQC:Er-[A'Z(ji_=
%\-sV3hYe)tdF85Ps3I3q/Xm`Co?dut+-puL5TpF+!:k]^*V_gA7S5Ta!99D>gX,YhgJgH97I%P(dWYTIBZ#&p>+Y!2W9L9?;$k%s
%l.C"koh\O0K)>iHBTRMOhF`Ni<gP4u$;:qYV[sug96GOa8gLbQh&a7I6]9P)+2)P1S6A7e.'fZ(!-??-A$7`8V@0J9^H"W)a%U_M
%Td.Zo?;EpLZqOgQ!S%%kNkd\@Pn:?2\a63j'.(0t&1\[n[P>P9Qm7(l`;I2umR)"-@`<6A(l>+n^=[d36d3"^$J_p*@4hQu#_:1V
%mbkI4!C3oj).gg!@2^=p?Hm0:j;pT^E`=ZtqBEsROr=]^N($I3Hb*$-<g)-lDOqDcm8dN6R6HXJ>,-[.]"8p$pI2"D[(,^P[0Z:T
%6U.@/@&"U`42i5VW9G"K=_d#Y[d>Z%FRKe3ktEWu]Jl\IFPRd7nm*"1&p;`mk/+<tZ733p^pK8Z+eQJY.$VLRLqOE8,H4;3X[jc5
%h\d>\`kLR&e-2a70O_pEolKV@F;,5(L70=2HL6"MXsX]'HgBNO(@tJ7Y3\:Fg;W\&;R"I&;s>&>'mBo3O`Wn-)Op2SaXdMln!_>o
%6A(l3,8#@+R-]r+XWQ\)^:op,o>qeVjf0r>b0C4"K`]+XI?2H91>BrOk&K.AfnO+27e4dMbIX`\K9;Vq?rKV0g3U^5TnH7)Cq>_E
%_GXjb^AlpdE)1Bn,+,!PEt0ANDn9.L/O9pf>pQd?3#.Y*f2K2gVUY^c7Kc8W;=I>parV<^.,+ll,'YQ>]Vd@?%U7U1/DD1=gJue6
%<Wt:R5Aa]NJkRods3@i:Wg_?3N&@nAq'`a@@n]fP@b#PBY2\=/nLgnL._XUJ8*e;%8_;U`nePm$^^Al*5Vc$VFbpfoPZKG.B)p/`
%CLM\JDrEmY2hRcU@G27N#6ZEu8[hBn0I25OR"91D3!l0^W\R$*?#K3H%B4=gn8!m&*T9<!4)6?FV@-N9a%hD^).HTVC?DqYM@HcE
%1[`WBN7L86WmM9Elj;.p,_d!tA]FM$o3H32#rp`b24Q#3CkW0CSJ[^r>Khhf$hM)K;L^$+=BXYg2j0]fZh8'Hg67jdSEH)s!(D^c
%hAi45K*H.j^t7jGpZ,QfL5F_RM0/5lN,#pr@[NX`VLquN3`sbePuSa$<Ld\/*(uK\\=9#k+=Y3K-YMupXONPD\_bl-)DNar?>8M,
%\R)C'XY"1fKsMKLX2r=,6@O5s/]6cZ&E6%D7kE.7F-p]$GR>^Pn98u7peLO^2t?3&ro]LHGN'Ej>Yp0^AEmdc1%8T;9LWj$Cafs&
%%gU_D]b]k.lH2a'%EI1c$eiQoedt-!Fg)55q57%#*Lu%4='mN;0?jr&'OMH$Sjo!@%jtbP55'q0=Wi;?S#-a-+(#=mZUTT))H3#h
%pG/1?f0XE#,VNXKX9R)'_KYSdH]:/B=mK&4>H^j]('B;g,<Y$-J[BSNA&a-U*/>Eh.teN<#CGC(>$?<*^bT)*%7F):2Do<Us-n4-
%gho=JPn+n;!G3\oVo])WCAY$Z@>[2pn4MFC1,I`L4S!NHT<9cd@+<*f1_>qTRr<WiY,HbV/7h=,^1kt#+d"3hE3*T>o66ZL;>T3K
%BJF/h#&t+0[s5Wera8FcUl,=^YHg>-_$S8d/F@<cNcN_q-!jWY#@rs3GK_@?Fc=<Hr1[mPF9*BD3g/=J];^&TLs<QfI9h@8ku-;'
%I9YSW8PWgp^IIgi[36^KFK@(iU8+_.e:.HKMa\1.>Uh77F>VU6KN/aaXVAFo<#m:3.<PZUonUeGQN^e?8$hR&cFj$5)'>\\jWqm$
%_D`IO[lCm1.u&(+V&E0tl7#60<fV%\4`\GL#,5uW2&u\M@ID&kML=#P91Oj;jt@^EE#'&'kt`O+8d9bbWDNcN_cetaqWJt9jX_B4
%eWR_\g*CN-"AVm3PGCG_T=jP.iJYqTjq:%KYsqP)]hOPcG`5q=HS'uD+oM1kX48Ra8fe[_qOe1WS7"2jGK89Z<[igSESR?I>>E.X
%C8=6U$blkq]A^BYdcHpqU`2Wk$>ZYqguW&1$A.filOE-fZ)b4'obdoR.:#5J,0lj_*T?*@TaNNVE&#7%[r[5CO>i9[OMkjrkX]?-
%0i<KAh:o4M]k1WEcn<rnCrub2mu3TS#i%U9\&X^U"a$hdJQ<)1FI38pj:A^`nh\fO#8L!G7Jl<-CRKhSSA)@7cio/u*<0JV$`m6)
%[p)F6Vhl1o*lHs93d:i(FW)c:QW@s"[@'#j[.5Wc*'#sOXQDqaK_=DB?DSLUfTb4t"?ReKh3oJnA1@iSot[rWJiPjMEqMfE]*TuO
%*fC<,(2JYcjG"S!1`W7*Ch[^dOT?\k41\k2^(gK+-2_<HMB%*T?P'i?<6a+$r?rcH))N#ZT&kr5_\hCOZD62Z$PD5jXkrlrm9CPS
%8Kp9R'RMUX\ET;)1k+X6COAgrf\Y*)_&/ot)$X%)T+RjT\&HALhHi#S9c&VnOUFR!];s!8Z-uP<:n4$nV]Zq4_DeH$2KfQE4dFU6
%QkpS@69OmK^aHYA!%_jG6P8iK+)e7:V7UTXI"!&P:J9<`V3-fA'G&/?T,VBTNBOrc?_aQle-.'ER28D5/aYT7b)mIflT>m9h%qu*
%4@f6K814f$^Dbh*/<[Ji['5FK<X/1#*)]af*5'!#:@"-9)Ai5ro2gt388Hc#Vj?u\Ko\R\3d(+b@gaftDnf)!Vir#j11%l=6gui/
%Z3?P-!-.OC"-T#Q9e9H3`9AC6C]]S;.:%V1M!ejd4X&@-E`q(07M<Qb/iBQVqdY,djJe>k_>\JMe.3QA,5Z$:!UE6QPYc":](S`Z
%Ud\9:>Sn&;ghtq;24@%k(J[4Mlg[B9j+J`u,jSRJLG%]5\q*6]8K\_l=4P#Cg"kHU8d%M:c_k+22QPYrd1"3R%CPD^ps`_X/4jXX
%_]j]UT^K43B!pdr[^B\F<3`9;P*3o1*tfV>k1miV"Y*7SfZ@Tjg/-8?JOGi\"!A$ldjB$u^27CQ/S.CuF*EdVa^7@b@WI4"R5e-[
%9ip*(0qB5$0cdRp2#:JZ[k-:-!FN7_T(8r-NbMkBTV.:)jCG;.$q70;I#3%4<amNb?miHL5Z/Abpjgjb+'QR:9!-1<]H,Peo?(2h
%F-/hsG5?9<SVB2eUfmkdVWp:0-&Rd*)iBJNb5r9O$$r%ABiOkp"'!],hi1)Qg`,>U5n_"oZVmCUqroge>gQWQrDN/8>;uiG,ntR*
%:=gFR1/$o(n)9WK>-%FD34,J*,U^3#UB$&AF^pkT=!WV6`Ee4s_-1TLllX#pUJ(RVLfX>/5p;=sGueVb2(Y1(3EI(#Nci]k)<e/L
%L$AhIDbQAH(GDLBJQa:8A#Qe1ir[;Q5nS[QS@H#S-A"h3<#]B+r)P4Fd;t$gN`(1]V*!)"F<]%O6bA=VkrS\NAN@Y3B'.8O!smu8
%.Jc*&dQY?n=Zc$9:ft.*,e?<qd)*2=jK,Co1L`5D8]s_3#=b,<,:rC/@V^4V<Q&OGMgY+fZ;12N];tGAm%EM/a(m?FOn3ne(HnsV
%4-m7MqBjAhQ?R%!rF=j!Ho#7n(T(ksc5do?%gbZeh1BcV$EI2_0Na@q>sG^HH"8D*&3hRC$2S\NggDB6>>me88Xp#'67n7@U007T
%2g;8e^.CXSMM4G'\bo,qjD0n]4<OM+V"f*G93TjJ/p(.B+OO6a8a`.mXEj0c^kuC<\JCsQP"[PE#\4TJfc8%r3=)(Y7s.%j90JZ-
%Pse=CSV)QZ`jMY=,!,P3HB3fpGYJ6$//*B/bKt,3O%-rsSpTF"Us\(>H@.g&M8a!U^h>(@S9O_PpX+P-e);NCbJT$Z`akBafJUq/
%A7RJ&GD>B91j^mrUY-&%-V,Ntg%;,B7#JPLfFFr<9p=b%i\_Kc?276kfE-rZqKdZ5X=9QIQNucY;ABp"l]WC6[f#6a4=DbP*u&ti
%'j>5RY^HiO!r3o8n5-WZT0)V`RY%VCVPq-__b7h-Vm\oMD^%95T8nSeHt]bYBZS/s<#>nC8^U`\DOG)lm9l)`@-B)(#s_3@:AK_=
%*]>aH0c"9l*7kJEM-dbH7Ho.j"uf`C9le!WK*JpQF:Mc<SG=Enim[""6-8/X`^l8KKnk2Dh18-?h3gSIf3S^6;7/qSe/!_3b*%uF
%-&ns^Y+_#8J4?MFdLEpeM3*rYk\_QeBL#6_NW[oj_W14;J.$r`MSi)-8oSnY90Deq7<fb#qb3t@Nf9nk7IcO<QJn&:O&V811:TZm
%>R;RX1Gd^Y`.j#e&kRF*2Pjl2XOILg?WE0%&/=-;.:D+dIgnsd@'o=Sc]NrBSXJ,2/!`0Tm[18*MI@,P.RAi5rEpn7KLN6B!M!6?
%G`d4o(69mi5Wt-qcA<:4qdSB<:SJT],_5kQ^]3-UTC_T>s5`4trEJKYQe*Ss'Kpq?:Ct`$+0VU9qDYh-$Xd*[Oo@i'%P4c4335(-
%L,7BpUScX=]/0.DIh`?kT/XHgk9ka?qKFCC^\nW&<O_oGI1H3-S?YoWb7Cf>L[uM"CroQEo.U)bE1PQes7>.JmP"Rm^E!:QYQ!rS
%r:M03kF_bOgMa:2?i94Srp??Wc(G%2TE!*,rquZNrTuiIn\>+gj,\]aGCTXRJ,I>OrR]Y.IJiK)s7?j%q"K:;e&O]NVn`6RLg[-m
%_dE>\?i@$Tnb_5B0=h%CAc~>
%AI9_PrivateDataEnd
