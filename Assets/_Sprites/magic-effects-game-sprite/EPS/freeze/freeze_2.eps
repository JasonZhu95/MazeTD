%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: freeze_2.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 275 150
%%HiResBoundingBox: 0 0 274.8096 149.7459
%%CropBox: 0 0 274.8096 149.7459
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:18:35+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:18:36+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:18:36+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYqhdS1K3063E84YqWCAIKkk1PcjwyUIGRoNeTIICyh7PzDpN0aLMI3/kk+A/edvxyUsUgxhnhL&#xA;qun8waPDs1yrHwSr/wDEa4jFI9FlngOqXz+c7BdoYZJT70UfxP4ZMactUtXHoEBL5t1Sfa1gWMeN&#xA;C5H07D8MsGCI5tR1UjyCjba/q9ndpJeO0sL/AG4zTp/k02BGE44kbMY55xNlk8uuaTFEsr3KcXHJ&#xA;QPiah/yRU5jDHI9HNOaAF2lF350hWotYC5/nkPEfcK5bHT97RLWDoErm1nX73YOYkPaMcB/wX2vx&#xA;y0Y4BolmySQb2l7EfrCuTKDXkpPMHxrkuIHZq4SN090vzegiEeoA81G0yCvL/WHjlM8Hc5ePVbVJ&#xA;AXer6vqMxlhdoIENYkVuPTxI6nJxhGPNpnmnI2Ngm+jeZlmItb+kVyNlkOysffwP4ZVkw1uOTkYd&#xA;Te0ubIMoct2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVKdd15NNVEjUS3L9EJ6L4mmW48f&#xA;F7mjNn4Pe7SPMNrqFY2Ho3CipQmoIHUqccmIxXFnE/Ipd5r1axltRZwuJZeYZiu6rSvfxyzDAg20&#xA;6rLEiglkVhH9WjM0VGYVrQiuTM99nHENt0VHpmhqaOxdxTkAWpvkTObaMeNEJYaGPsgD51/42rkT&#xA;ObIQxqxGmxLsOZ7AEn+zI+osvQEtnhSaMow2PQ+By0Gmgi1C20Iyk/EXp1pRRv8APDLLSI4bTFdH&#xA;traMu5VWA+Ggqa/M5X4hLb4IA3UckwQV9fenWOI/H+03h/bk4xa5TpSsrFZFMkwJDfZFfxyUpdyI&#xA;wvmmIAUAAUA2AypsUbm0jnG+zjowyQlSJRtUstd1XTVEUy/WbddlqTUD2b+uCWOMmUM8obHcJlH5&#xA;1sCP3kEqn/J4t+srkDpy3jWR7lWPzhpLEBhLGCerKKD/AIEnInBJkNXDzTqORJI1kjYMjgMrDoQc&#xA;pIcgG12KXYq7FXYq7FXYq7FXYq7FXYqoXN9Z2w/0idI/ZmAP3dckIk8mMpgcylVz5v0uKoiDznsV&#xA;HFfvah/DLBgkWiWqiOW6W3HmfVroFbSEQKf2/tN/wRoPwywYYjm0S1MjyFIKGzb1TPcOZZiakk13&#xA;8ST1yZl0DUI72XXdgkxLqeD038D88YypZQtC6Vw+tjmgcLvv7EZLJyYY+adXFw8zVb7I+yvhlIFO&#xA;RKRKCQ0vZV/mVW+7bJnk1jmiMiyXNG6qrEUVvsnxwWtKMzSLGWjXmw6LkggtyCVo/gf03NCT1piF&#xA;Nq0UTyvxH0segHvkSaZAWg9Tu4oWMUBLN05Ht75OEb5sMkgNgg7KzMrerL9jqAf2jk5SprjG0yWV&#xA;DI0Q+0gBPhvldNtrgCOprgVxFR4YpW8X/m/DFDvTRh8SqT32BxtaQWpxwpCvFFVi3UAA0plkCbYT&#xA;ApkflO9DaErzuFSOSSNXY0HFW8TmLPeRp2OLaAtEXPmfR4Dx9Yyt4Rjl+Ow/HCMMixlqYDqidP1e&#xA;w1AH6vJV13aNhRgPlkZQMebPHljPkjMg2OxV2KuxV2KuxVI9V802toxhtx9YnGxofgU+57/Rl0MJ&#xA;PNxsupEdhuUin1HXr77cpijP7K/ux+HxH6cvEYRcSWScnW+gSyHk5Y13J+yPvOA5aWOAlModHsbe&#xA;hkKg/j953yo5CW4YYjmqPPYxikUQc+JG344KJSZRHIINjViaUqa0HTLGooa+k9O2cjq3wj6clEbs&#xA;ZnZR0qKkbSnqxoPkMlMscYR2Vtih6TfXPV/YEfGvvWuSvZjW6qzqoqxCjxJpkUuS4WVaK/NU2HWg&#xA;r4Y1SeK1aW3eNEdqUcVFMANsjEhqG3aduAFQftE9AMSaRGNrdV1CK0i+q2+7n7Z9/fDjhe5TlmIi&#xA;glNnaNO/qy1KV79WOWylTjxje6aAACg2A6DKm5dxbjyp8PSvauK0pO55BE+2dyewHjhpBKpgS7FV&#xA;gqrEdiag4oQeo288rpwXkoB+/JwIDCYJU4NLJRQ8lEXoi9qmp+WHjA5Lwk8yiRptqBShPuTg4yng&#xA;Ci1vcWUq3No5DRmo8R/UYeIHYooxNhlui65BqUVDRLpR+8i/42X2zFyYzH3Oww5hMeaZ5W3OxV2K&#xA;uxVAa9JNFo91JCeLqlS3Si1HM/8AA1yeOuIW15r4TXNglld28XxFObdnBBp8szSL5OrHp5hNrPW7&#xA;SJiWQmvQkbj7q5VLES3QzAI2e/MyDgCg61DHcZWIU2SyWht65NrdiqpAkbyBZG4L44CUxAJ3S7Vw&#xA;BEoBqofY/QcsxteRbb39tHCiGoKjfbv3wmJtAmAEVBcwzV9NqkdQdjkDEhkJAr3DFaK3E+I3/XgS&#xA;VMWsNeTDm38znlh4ijhCqAAKDpgZKkUckrqi7n9QwE0kAnZU1LUItOg9CHedh/mTghDiNlnkmICh&#xA;zSG1tpLqUySE8K/E3ifDMiUqcWMbTQvFGUQkLy2RfllXNtum3cIjO3RRU/RgCktx3LyWwCMfTbcA&#xA;+OJFFIlYWqnFTQ/Edyx7nDaKdFJzBqKOpoy+BxIUFUVQa1YLQEivc+GBIDWKuxVaUUmvQ+IxQ7gO&#xA;5J+ZxVoxqRsKHxxVASRTW0i3dsxR4zU06g+PyyyJsUWsgg2Gb6VfC+0+G525OKOBsAy7MN/cZhzF&#xA;GnaY5cUQUXkWbsVdiq2SOOSNo5FDxuCrqdwQRQg4qwnzH5b8sWS/uFliu3+xFFJsPduQegy3HjJa&#xA;M+YRHeVHTtHLBQ6l2pshJ2HucyJTpwYwJKPZCjFD1Xbb2yDMilrAlSASCR1HUYocNhTr74pczKoq&#xA;xAHidsUIaS6tpP3QUzV6hRXJCJYmQK4WNoP91j7zjxFPAHPZQmhjHpOv2XXbESKmIVIjLQiUDkP2&#xA;h0PvgKRapgSqyQGONGY0Z9+HcDxwA2yMaCyTUEsrRmQVnc0BPT2xEOIr4nCPNJIUku7gtI9STV2J&#xA;3Pyy8mg4w9RTdEVFCqKKOgylubKqSCQCR0J7Yq3il2KrJpVijLt0H44QLQTShZCRg08n2pPsjwUd&#xA;MMu5jHvRWRZuxVTRHVupKjxNTihUxS7FVAcJxJG/7LUI6bdRkuTHm3LGTFKOzKafOmAc1PJNfJc/&#xA;KwnhJqYpOQHgrgU/FTlWcepy9LK4V3MhylyXYq7FUm13zAllW3tqSXjduoSvj7+2XY8V7nk42bPw&#xA;7DmkNlYzTT+rMTJcyGrM29Pc5dKYA25OLCBJ35prNNHbR+jBu/7b5SBe5b5SERQQJ3yxpVJYDGAa&#xA;hlNPiXpU9sALKUaQd5c+hFUfbbZR/HJxjbXKVKMNj6irJcMzsRXiTsK4TLuYiN80ZHEqgLGoHgAM&#xA;gSzARM9sIY1LN+9bqngMiJW2ShQ81DJMHYqibSBaGeX+6Tf5nISPRshHqeSjNK0shdu/QeAyQFMJ&#xA;GzahPBHMnBxt1BHUHJA0xItAS6U43jcMPA7HLBkazjUhNe2xo1QPBtxhoFjZCJi1WM7SKVPiNxkT&#xA;jZjIio7mCT7MgPt0P3HIGJZCQVCQBU7AdTgZJeWN7c8R/cR7n3/28s+kNX1FMAAAABt2GVtqvcxr&#xA;BAq8azEF2p1p2XIxNlnIUPNDoxZQxBUkVoeoyTWpRs6TtE55KQWjbvSu4OSPJA50iWQBFbkCWrVR&#xA;1FPHIWzIW4UIGaQQX4Y7JKoD/PpkwLDWTRR2QbECtnd20hls5jG3sSpp4VHXLOIHm1iJBsFHQead&#xA;WtSFu4hMniRxb6GX4fwyBwxPJujqZjnuybTdSttQtxNAfZ0PVT4HMacDE0XNx5BMWG9SnMFhcSiQ&#xA;RMqNwkboGpt+OMBZXIaiSwXTfUe4eRxzJqWkbc1Pv75mz5OrhzTtLlYoOMQIkb7b/wBMoMbLkCdD&#xA;ZD1398kwctOQ5dK708MVVLiaPiAgEcEYPFf1k4AGUpfJJ4yby95H+7XensP65cdg449RTTKm5GQC&#xA;O3i9eTeRh+7X28cgd9m2NRFlCySNI5djVjkgGom1uFVS3gaaQKNh1Y+AwE0yjGyq3k6mkMe0SeHc&#xA;5GI6sskug5IOWVIkLv8AZHXLALaiabR1dAy7qwqMChdilogEUIqD1BxQhZdOt33UcD7dPuyYmWJg&#xA;EJJplwv2KOPuP45ITDAwK1bW+oYwGCnYiu2HiCOEpnbQLBEEG56sfE5UTbbEUj7KFd55No49x7nK&#xA;5Ho3Y49Sh5ZGlkZ26k5ICmEjZtbhQhWb/ciq+EZ/E5P+Fh/EiB9ph9OQZLWgRpllJPJBQCu2+G9q&#xA;Wt7QuqqnpKx+2DRfl3yWNhkV7ORmtUdtzQ/gaYJDdlE7K8IeUMVWvEVb5ZC2QFrHVXBRxVSO+FBW&#xA;+W7lrPWTbE/up6oa+I3Q/wAPpw5hcbZaaVTrvVPMmoPfah9RiakEBox7Fx9on/V6Y4o8ItdRk4pc&#xA;I5BCpeWUKiNG2XwByRiS1iQDf6RtP5j9xwcBXjDjqVqOjE/IH+OPAV4wpnVYOysfuH8cPhlHiBQu&#xA;tQE0XpqpWp3r4ZKMKYynYVtNaBIz8Y9RjuDt06DfBO2UKR+VtjiSeuKqFxIFeFa7s429qHJAMSVZ&#xA;o1kopHLcUHv2yNpq0ZI4tofRQ/vW3kYdvbIAWbbieEV1QmTammVWBDAEHqDuMULZJI4k5MaAbAD9&#xA;QwgWpNOiZ2QM68Sf2fb3xKhfgS7FVWG3aRS5PCNernATTKMbUsLFfDEZZVQd+p9sBNJiLNIi9mSg&#xA;t4v7tOtO5yMR1Z5JdAgWZxU0qO2TalwJIBPXFKBrXVqeAp/wtcs/ha/4kcVdqFQSRuadhlbZTVTy&#xA;pTbxxQluosZLlYl340FPdsthsGqe5TBVEaKi9FoNsqJbeSqjMleJ48tjTauKQVj9VPvihLrmQQap&#xA;DN/vt45D/sGB/hkz9BRA1kCnbtWK6lY1cihP+sTXJnmGsdSqadp63SSM1fg32NNgKnBOdJhC1b9F&#xA;W/8AM/3j+mR8Qp8MNjS7Yd2P0j+mPGU+GFw060H7JPzJwcZXgC76haUp6f4n+uPGU8AUJNKjP925&#xA;B8DuMkMjE41H0tQtvsksg8PiH3YbBY1IL/rOoS/CkfHxIFPxODhATxSKpbae6yCWZuTjcAb7+5wG&#xA;fcmMOpR6sVIZTQjocg2AqQklM7qy/ABUPXqThrZFm0YIEjtzLMPifaNen05C99mzhoWUDc3McC1b&#xA;dj9le5yYjbVKVKdvDJI4uJ/tf7rTsoyRPQIA6lFZBmrWts0zb7Rr9psjKVM4QteUSe5EcK8UG1R4&#xA;DvjdDdNcRoN3sq7QR7Rx9adzgiOq5JdAhcm1uDEGoND4jFVJJ+bOoRvgbiScJDEFVwMnYqlsZrqr&#xA;fT+rLD9LUPqTRJZI68GI5ChyohuBIUJrqCL7bCv8o3OSESWBkAllvJG16ZZG4rUsK/hlpGzUDumy&#xA;sjfEpDe4Ncpbl2KWiBUE9sUJBq1wGMrqeo4R06k9BT6cnLaLHGOKYpE3ii3uby3HQSMg+Svtk47g&#xA;FhMUSE00MpHbnkaCRXH4/wBmVZebdhNBfgVTVpvVYMoEQA4NXc4dkb2qYEomBESBp5AG/ZjU9Cci&#xA;TvTOIAFlCK6OOSkMPEZJrtUiieVwiCpOAmmQFr7iJImCq/Nv26dAcQbTKIDpFtxAhRiZT9sYBdqa&#xA;rzUskxRNnArEyybRR9a9zkZHo2Qj1PJBapqgDmm7fsJ4DxOThBry5N0HZ2zyP9Yn3J3UH9eTlKtg&#xA;1xje5TDK2xdGnN1WtORpU4CoFlFXVwiR/V4PsjZmGRiOpbZyAFBCxyyR14GnIUOSIawSFN24ozUJ&#xA;4itB1whiVsbmRVcDipFSD1wkKCqYEtMaAnwxVrmoQudlAqfkMUOjdZEDqaqehxIUFKTOIr+SQjlR&#xA;mFPwy6rDTdFc13eXB4xggeCfxODhATxEr4dLc7zNT2G5+/Ez7kjH3optOtSgXiRT9oHfIcZZcAQz&#xA;6ZKh5Qyb++x+8ZLj72Jh3Kf1i/gajgkeDCo+/DQKOIh1xqjNAykCP+Zq9seEDdPETsER5U0STU7x&#xA;NRuFI0+2atupH97Iv7VP5VP+fXMTJk4j5OwwYeAeanr8ZTWbpSKVfl/wQDfxzLxH0hwM4qZdDqMc&#xA;UKIEJKjfpTEwsoE6CrBqSSyBGThy2BrXf8MiYUkTtMrmAwScCeVRUHplcTbdONFSwsWnkCqObUQd&#xA;ATtviApLUUSoAka0FdgPE4koAR8hW0h9NT+/kFWPgMgNy3H0iuqCybU7FXYqoX1+8MIiBqTUqvYe&#xA;5yUYWWMp0KQdnZtK3rTbqdwD+0fHJylWwYRje5TPKm1Wt7kwcqKG5Cm/bImNsozpRyTF2KqIdhds&#xA;hPwsgZfoNDh6MeqtgZOxVWFt/oxm5jY04/Tkb3plw7Wh6Ny/yckwbIBFD0xS0pQH01oCBXiOwOKF&#xA;E2NsZC5WpY1NSaVyXEUcIV0RFoqgKvsNvwyJZALbkvHcKkQ9SMn4pOlBhHJEtjsuqK074EqcjhQz&#xA;tusYqR4nEBBKV3WsOqEsyxIe/f8Az+WWERjzYR4pbAL/AC/oUmu3HrTBk0mI7noZmH7I9vH+vTGy&#xA;5OL3OdgwcG55vRIoo4o1iiUJGgCoiigAHQAZU5CRa95Sh1a6F0t1JayhAh4bg0JIJFRvvTCJEMTE&#xA;HmEDH+XVgf8Aeq9uJ1/lqFFfpDYkkpEQOQQWraBbaLJbfV5ZHikYnjKQSvHj0IA23zIwGwQ4WriA&#xA;QU2F3bSoouEJZduQ/wBsZHhI5J4wRuslWzZawFhJ2ShNcIvqxkI9EHJEki8ZFqK1p7jJg01kWqKx&#xA;VgwNCNwcCQpvEr3HrsSZKUqThvakEWbVjMxhEVBxBqD3yNb2y4tqWqpZgqipOwGFADcicHK1BI2J&#xA;HjgBSRSX6pESqSr+waH6ctgWrIOqIs7hZ4wx2I2cDtkJCmUTaIl9PmfTrw7V65EMzV7Kci8o2XxB&#xA;GEMSoR3kIt0eRwGpuO9Rt0yRibYiQpTF1cXBpbpxTvI2HhA5o4ieSvDbrGebEvIert/DwyJLIRVs&#xA;DJ2KtAg9MVdUffireKoOSV7e5Z5FrFJQBx2pkwLDWTRRasrKGU1U9CMgzaYOSvFuIBqwpWo8MVc7&#xA;cR79sVU2vLVesqn5Gv6sPCUcQQl7ewvCY4jUsd9iNuuTjHdhKQrZFeU/L9hqPralexidFf0raNvs&#xA;UT7TEdGqxoMxcsrk7HBDhiGbRxpGipGoRFFFVRQADsAMrbm8VdirsVSjzPps97pp+rIJLmFucaE0&#xA;LDoyg9q5OEzEtWXEJimDk64go+n3qovUiNyBT8Mu8cdzjHSS70bpmqkMvJu/wOeoI2o1csIEhYaQ&#xA;TE0WQNBHdp6sRCyftr2rlF1zcgxEtxzQr21wnWM/MCo/DJ8QazAhTwsVyOAGHENyFAT2+WCkgolA&#xA;ttB6h/vpB8A8Ae+RO5Zj0i+qHiieV+C9TvvkiaYRFlZJGPijcV6qw/DCCgjolAL2N0R1Q/iuXfUG&#xA;n6SmqSI6B1NVO4OUkNoKAudQYv6dvuenLrU+2WRh3tcp9zcGmAHlMeR68R/E4mfckQ70eAAAAKAd&#xA;AMrZtgEmg64pRRjS2i5SANM4oqnoB45C7bK4RvzQuTa2gAOmwxQoXxQWzFuu3Dx5dqZKPNE+SvCk&#xA;jBEO7mgJ6VORJZANyxULRyAHsw64gqR0S94p7RjJD8cPVkPbLAQebWQRyRNvdwzj4TR+6HrkTEhk&#xA;JAt3SAwSnvwP4DBHmsuSWWeiaxqbN9RaFI4wObSkj4mr0oG7DBlyGJoNunwxlGymEP5f6pLQXuoq&#xA;sf7SwqSSO4qeH6soOSR6uXHDCPIMysLG2sLOK0tl4wwjio6nxJPuTvkGxXxV2KuxV2KuxV2KsZ82&#xA;aLyQ6jbJ8ab3SKN2Uft0HUr39vlluLJwnycfPh4xtzSPTtVMQUM54/sSLvt9HUZkyiDuHBjMxNFM&#xA;28xKq/bDn2U1/gMr8Fu/MKMN3Hc8nWvKtWB2O/ywmNMBK1CJ/q9wYG/u3PKI/PtkjuLYjY0mMYWV&#xA;iZZeBFKEgmuVnbk2jfmVUWUlOcEgen8pocjxd7Lwz0KGdWViGBDDqDk2shC30CSQEseJTcNkomiw&#xA;mLCVJLN6ZhQni5+yMtIHNqBPJM7KyEI5vvKfwyuUrbYxpEAvzII+HIMl+KVvrBHVQ3GRq8PHbwxq&#xA;1ul7O7nk7cm8TiApNrCzBqU28cUNqaivTFULcfvbuGH9lfjf+GTGwtjLc0i6036U75BmgptRiEpV&#xA;uRA+0RkhAlgZq8LxyLWJ6r3HhgIpINoK/hgibnG3CTrwH6/bLIElhMAIWbVZFHCSZVqNweIJH68B&#xA;4RzTGM5cgnnkO8WW5vYoviQIjNJvTkCwA/HMfNME7ObpsZiDbMcpcl2KuxV2KuxV2KuxV2KuxVjW&#xA;reSba5lafT5zYyvu6BQ0THx4bcT8slGRHJhLHGXMIG3/AC9lY8rzU5Cf5YV4AfSSf1Ymcj1UYojo&#xA;hLuwm0O8WJ3M8brVZKUJWvf3GZOM8UfNwM0OCW3Iqd1eWs0XGjBhupoNj9+TjEhqlIFpNVYRqpTk&#xA;4G7V64TBRkWjXnikG6I3YcqH9eRMY97IGfMBMY9QF4eTH94BQqadPoyJhTLj4kBqVyWb0F+yv2vc&#xA;+GWQj1a5y6K9jZiNBI4/encV7DIylbKEaRdTypTbxyDJLbzUHEvGJqKpoT4nLIxFbtcpG9kbb3An&#xA;UMtP8sdwcgRTOJtdLIEA3AJ8cCSV46CuKWuC8+dPipSvt1xRTZIAqdgOpxSl6Xlul1K7EnlQKwG1&#xA;AMsMTTUJC1S8vYlgrGwYt0Ph7nAI97Iy7lDQ/LV7rSNePcNaWVSLfiKtIQaFjWm1cx55STs52LBG&#xA;I3FlrUNC1/TZCBbteQ/sXFsCWI/yoxUg/hk45+9qlpBexpD2ukeY9QkEcNk9qrfauLgFAB40YVP0&#xA;VwSzk8kw0gBsm2WaX5H0W0jrcx/Xbk/blm3FT4J0++pyhy08trO0tY/TtYUgjrUpGoQV8aCmKquK&#xA;uxV2KuxV2KuxV2KuxV2KuxV2KpdrWhWerQLHOXjkjJMM0Z4upPWnsab4goIB5pAn5dx1bnqdwQfs&#xA;0FKfPc1yXEe9Hhx7grJ+XGhjeWa4lbuWdR+pciyRcfkTywi0NqXP8zSSV/BgMVSXXPL8mj0ubPm9&#xA;ivX9pofn3Kfqy/HlrY8nFz6e9480qt5oTKJnPNa8qrQ1OZN2NnAqjumB1WDsjH50/rkPDLPxAoXO&#xA;rfuyABGDsXY4eEDmvEZbAKvlny/HrUr3l4jHTYqpAtSnqPXdqihoP8++YuXJxFz8GLgG/Mu1XTrr&#xA;Qbj1CxeyY0iuD7/sSU6N79/nlsMoIqTTl05BuKWwDVdWuHXTYDcFf7yVvhQe1SRjLPW0UQ0t7yV2&#xA;n1PS3EN/C1sx+zz3ib/VcEj8cMcsZc9mM9PKPLcItdWUj4oz9B2yzgaeNA6jq5ICH9r7EK7sxPTB&#xA;KQh72UISyHbkj7Pyb5guofWmuI7ItukBXmwH+V4ZjnNJzRpoAclyeQ9ekkCXN5AtsSBIY+RcrXeg&#xA;KgdPfAcsiKTHBCJsBnUEEUEKQQqEijUKiDoABQDK25firsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirjShr074qwDXv8AA/1l/q3r/W6nn+j/ALNffl8H/A4RfREqrdID9V/7WNPoyfr8&#xA;2v8Ad/0fsTLTP8Ber/p31v1O/wBZ+zX/AJ4/F9+VltHk9Gsfqn1OH6nx+q8B6PD7PGm1MVbu/qv1&#xA;eT636f1an731acKf5XLbFVPT/wBHfVh+jvR+rVNPq/H069/sbYq3qH1D6o/1/wBP6rT9561OH08s&#xA;Veeaj/gz1m/R317r8X1X+7/5KfFhF9GMuHrSbeTf8JfWT6PqfpOp4/XKep/zzp8P/G2BkPJmuKux&#xA;V2KuxV2KuxV2KuxV2KuxV2Kv/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:06a2682e-06a6-974f-b8e4-04dcbb97d06d</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:06a2682e-06a6-974f-b8e4-04dcbb97d06d</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:71ad8656-4792-45d2-8f7f-8ae4641badb7</stRef:instanceID>
            <stRef:documentID>xmp.did:2be6274d-8182-ae49-b6c2-c4441239a92a</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2be6274d-8182-ae49-b6c2-c4441239a92a</stEvt:instanceID>
                  <stEvt:when>2018-03-08T14:02:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:06a2682e-06a6-974f-b8e4-04dcbb97d06d</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:18:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>274.809506</stDim:w>
            <stDim:h>149.745806</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -149.746 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 149.746 li
274.81 149.746 li
274.81 0 li
cp
clp
115.95 149.746 mo
114.867 149.746 113.792 149.688 112.731 149.572 cv
111.525 149.441 110.336 149.235 109.176 148.935 cv
109.079 148.907 li
107.5 148.492 105.972 147.912 104.52 147.139 cv
104.313 147.022 li
103.436 146.542 102.588 145.99 101.773 145.363 cv
101.312 145.008 100.861 144.629 100.422 144.224 cv
100.132 143.956 99.8455 143.679 99.5657 143.388 cv
99.3147 143.127 99.0676 142.856 98.8255 142.576 cv
97.6614 141.231 96.658 140.322 95.4886 139.795 cv
95.489 139.795 li
94.7649 139.468 93.9603 139.302 93.0296 139.256 cv
92.8335 139.246 92.6326 139.241 92.4254 139.241 cv
92.3281 139.241 92.2294 139.242 92.1292 139.244 cv
91.7898 139.256 91.4446 139.273 91.0657 139.313 cv
88.0378 139.632 85.2532 140.246 82.1658 140.257 cv
81.6932 140.259 81.2107 140.3 80.7239 140.362 cv
80.6272 140.374 80.53 140.39 80.4329 140.404 cv
80.2854 140.425 80.138 140.445 79.9895 140.469 cv
79.9036 140.484 li
79.3465 140.574 78.7874 140.677 78.2307 140.771 cv
77.5896 140.878 76.9529 140.972 76.3318 141.008 cv
76.3298 141.008 li
76.0396 140.747 75.6621 140.573 75.2446 140.573 cv
75.197 140.573 75.1489 140.575 75.1003 140.58 cv
74.9417 140.594 74.7791 140.635 74.6135 140.705 cv
73.7643 141.064 72.6119 141.24 71.4125 141.24 cv
69.7611 141.24 68.0208 140.907 66.8611 140.26 cv
64.0413 138.687 64.6482 137.077 63.5672 134.976 cv
62.74 133.37 61.7566 132.434 59.9265 132.241 cv
59.6718 132.214 59.4207 132.202 59.1723 132.202 cv
57.9311 132.202 56.7618 132.508 55.5927 132.814 cv
54.4235 133.119 53.2543 133.425 52.0128 133.425 cv
51.3241 133.425 50.613 133.331 49.8675 133.091 cv
49.285 132.903 48.7229 132.677 48.178 132.424 cv
47.8201 132.258 47.4812 132.062 47.1385 131.871 cv
46.9725 131.778 46.7996 131.696 46.637 131.598 cv
46.1878 131.327 45.7566 131.03 45.3337 130.72 cv
45.218 130.64 li
44.7596 130.3 44.3186 129.937 43.8899 129.558 cv
43.887 129.556 li
43.886 129.555 li
43.2693 129.008 42.6727 128.439 42.115 127.829 cv
41.5447 127.205 41.0144 126.548 40.5022 125.879 cv
40.3782 125.717 40.2566 125.557 40.136 125.393 cv
39.6467 124.729 39.1736 124.056 38.7361 123.374 cv
37.4802 121.418 36.3806 120.052 34.0354 119.408 cv
32.9762 119.117 31.9048 119.069 30.8572 119.069 cv
30.5956 119.069 30.3354 119.072 30.0773 119.075 cv
29.8191 119.078 29.5632 119.081 29.3097 119.081 cv
27.0596 119.081 25.0144 118.843 23.5657 116.25 cv
22.5891 114.504 22.8806 112.389 22.6956 110.425 cv
22.6634 110.08 22.6145 109.74 22.5423 109.408 cv
22.5413 109.405 li
22.4685 109.072 22.3714 108.746 22.241 108.43 cv
22.241 108.43 li
22.136 108.175 22.0154 107.924 21.8611 107.684 cv
21.72 107.465 21.5735 107.283 21.4241 107.116 cv
21.3293 107.014 li
21.1775 106.858 21.0227 106.718 20.863 106.605 cv
20.2883 106.199 19.6619 106.054 18.9919 106.008 cv
18.7663 105.992 18.5357 105.988 18.3005 105.988 cv
17.9757 105.988 17.6421 105.997 17.3005 105.999 cv
17.2632 105.999 17.2259 105.999 17.1885 105.999 cv
16.9439 105.999 16.6955 105.994 16.4431 105.979 cv
16.431 105.978 li
16.1321 105.959 15.8279 105.925 15.5193 105.866 cv
15.4214 105.848 15.3272 105.839 15.2365 105.839 cv
15.0856 105.839 14.9442 105.862 14.8103 105.9 cv
14.6844 105.927 li
14.5276 106.011 li
14.3464 106.109 li
14.1599 106.279 li
14.0676 106.364 li
13.6453 106.411 13.2317 106.458 12.8172 106.505 cv
12.7215 106.516 li
12.4466 106.547 12.1717 106.574 11.8997 106.603 cv
11.5926 106.635 11.2859 106.664 10.9817 106.692 cv
10.7444 106.714 10.5061 106.735 10.2703 106.753 cv
9.80105 106.788 9.33379 106.816 8.86749 106.83 cv
8.7593 106.834 8.65097 106.834 8.54265 106.834 cv
8.52059 106.834 8.49852 106.834 8.47645 106.834 cv
8.4551 106.834 8.43376 106.834 8.41241 106.834 cv
8.35981 106.834 8.30721 106.834 8.25466 106.835 cv
8.17122 106.835 8.08776 106.836 8.00428 106.836 cv
7.77215 106.836 7.53988 106.833 7.30789 106.825 cv
7.27087 106.824 7.23389 106.823 7.19691 106.823 cv
7.1776 106.823 7.1583 106.823 7.139 106.823 cv
7.11872 106.824 7.09845 106.824 7.07817 106.824 cv
7.03433 106.824 6.99046 106.823 6.94658 106.821 cv
6.95387 106.805 li
5.86064 106.748 4.76149 106.61 3.63647 106.327 cv
3.4329 105.146 3.13062 103.962 2.66576 102.771 cv
2.49488 102.333 2.60626 101.925 2.86108 101.618 cv
2.48463 99.2663 2.4871 96.5539 2.24976 94.9656 cv
1.68432 91.1784 .546169 86.9778 1.19312 83.1369 cv
2.04371 78.0905 6.01391 72.3025 10.2732 68.6359 cv
10.034 68.5632 9.7932 68.4953 9.54712 68.4402 cv
8.30495 68.0749 7.84209 66.4734 8.78198 65.5408 cv
13.0579 61.2985 17.577 57.3332 22.1077 53.3674 cv
24.3474 51.407 26.6443 48.7639 29.2796 46.968 cv
26.3152 46.4548 23.3469 45.9475 20.407 45.3366 cv
18.5369 44.9485 16.5095 44.7424 16.1663 42.57 cv
15.5008 38.3601 22.2048 34.3987 25.2688 32.9582 cv
31.8259 29.8747 39.2678 28.4597 46.2053 26.4875 cv
53.0042 24.5549 63.7219 23.4065 66.8733 16.095 cv
67.1191 15.5248 67.8472 15.1957 68.4814 15.1957 cv
68.6396 15.1957 68.7919 15.2162 68.9295 15.2585 cv
72.0994 16.2317 74.4939 17.925 76.2576 20.5539 cv
78.0476 19.8723 79.9485 19.424 81.5803 18.4841 cv
85.8298 16.0359 84.0022 13.8274 83.8435 10.3317 cv
83.7899 9.15047 84.8183 8.46312 85.8528 8.46312 cv
85.9861 8.46312 86.1196 8.47454 86.2507 8.49778 cv
89.3303 9.04319 91.8313 9.95088 94.5379 11.2326 cv
94.6785 11.1369 94.8411 11.0573 95.0384 11.0114 cv
104.868 8.71456 114.673 7.68379 124.332 4.45872 cv
124.494 4.40483 124.676 4.37868 124.865 4.37868 cv
125.403 4.37868 125.995 4.59137 126.307 4.98067 cv
128.041 7.13989 129.821 9.2546 131.633 11.3469 cv
139.574 8.79223 147.547 6.3054 155.545 3.93869 cv
157.097 3.47947 158.522 2.99995 159.95 2.99995 cv
160.903 2.99995 161.858 3.21359 162.853 3.78927 cv
166.188 5.71995 167.718 8.48801 171.854 9.42845 cv
172.074 9.5022 li
173.442 7.13989 175.938 5.49244 178.26 4.05344 cv
178.529 3.88748 178.891 3.79128 179.249 3.79128 cv
179.576 3.79128 179.899 3.87191 180.141 4.05344 cv
184.738 7.50217 189.192 11.5754 194.129 14.529 cv
198.977 17.4294 205.559 16.8767 211.065 17.28 cv
213.656 17.47 216.314 17.5383 217.095 20.5242 cv
217.817 23.2785 216.706 26.9914 215.714 30.2502 cv
218.969 29.3312 222.226 28.4236 225.484 27.5197 cv
227.673 26.9123 230.091 25.9523 232.44 25.9523 cv
233.228 25.9523 234.01 26.0608 234.772 26.3274 cv
237.416 27.2527 239.391 29.7688 241.337 31.6716 cv
244.602 34.864 247.851 38.0711 251.104 41.2751 cv
251.954 42.112 251.888 43.1433 251.383 43.9108 cv
251.806 45.6784 252.182 47.4524 252.541 49.238 cv
253.084 51.9363 252.746 54.115 255.486 55.3152 cv
259.081 56.8904 263.047 57.6023 266.657 59.152 cv
272.67 61.7322 273.551 69.7502 274.224 75.5285 cv
274.43 77.2986 274.669 79.2439 274.696 81.1682 cv
274.755 81.2346 li
274.809 81.3127 li
274.705 83.3025 274.73 84.9582 273.626 86.9406 cv
272.786 88.4494 271.736 89.8357 270.614 91.1599 cv
270.449 91.3567 270.283 91.5525 270.114 91.7463 cv
269.907 91.9822 269.702 92.218 269.492 92.4499 cv
269.107 92.8767 268.719 93.2991 268.328 93.7141 cv
266.798 95.3391 265.224 96.9245 263.665 98.5212 cv
262.129 100.093 259.633 103.454 257.409 103.929 cv
257.259 103.961 257.128 104.01 257.012 104.072 cv
256.812 104.219 li
256.712 104.293 li
256.373 104.379 256.069 104.475 255.778 104.577 cv
255.537 104.667 li
255.314 104.754 255.105 104.847 254.909 104.947 cv
254.741 105.029 li
254.506 105.159 254.29 105.301 254.091 105.457 cv
253.967 105.564 li
253.807 105.698 253.657 105.843 253.518 106 cv
253.407 106.121 li
253.252 106.308 253.11 106.512 252.976 106.733 cv
252.874 106.913 li
252.758 107.119 252.648 107.339 252.544 107.576 cv
252.49 107.693 li
252.375 107.969 252.267 108.271 252.162 108.591 cv
252.084 108.837 li
251.98 109.171 251.879 109.519 251.779 109.903 cv
250.962 113.043 249.793 115.067 246.399 115.887 cv
243.328 116.629 240.01 116.906 236.87 117.063 cv
236.477 117.082 236.044 117.278 235.742 117.581 cv
235.572 117.785 li
235.558 117.807 li
235.446 118.015 li
235.417 118.112 li
235.373 118.274 li
235.36 118.367 235.357 118.463 235.37 118.563 cv
235.604 120.33 235.923 121.966 236.263 123.695 cv
236.717 126.005 237.284 128.605 234.064 129.637 cv
232.952 129.994 231.364 129.829 230.221 130.025 cv
229.851 130.088 229.497 130.175 229.151 130.271 cv
227.575 130.707 226.213 131.45 224.914 132.278 cv
224.79 132.36 li
223.748 133.031 222.739 133.745 221.685 134.387 cv
221.526 134.483 li
221.356 134.584 221.186 134.685 221.013 134.782 cv
220.907 134.843 220.798 134.899 220.691 134.957 cv
220.559 135.027 220.429 135.099 220.296 135.166 cv
220.117 135.256 219.933 135.34 219.749 135.423 cv
219.543 135.519 li
219.291 135.628 219.034 135.73 218.772 135.823 cv
218.765 135.824 li
218.729 135.838 li
218.617 135.839 li
218.529 135.844 218.442 135.843 218.347 135.866 cv
217.085 136.178 215.989 136.34 214.957 136.34 cv
213.005 136.34 211.287 135.76 209.128 134.517 cv
207.844 133.779 206.417 132.474 204.87 132.375 cv
204.623 132.383 li
204.617 132.377 li
204.278 132.383 203.949 132.44 203.63 132.546 cv
203.628 132.548 li
201.564 133.232 199.909 135.809 198.676 137.822 cv
198.594 137.957 198.513 138.089 198.435 138.217 cv
198.357 138.344 li
198.29 138.453 li
198.14 138.698 197.995 138.933 197.86 139.144 cv
197.472 139.746 196.735 141.555 196.224 141.93 cv
196.081 142.035 195.919 142.12 195.75 142.198 cv
195.634 142.254 195.513 142.303 195.388 142.348 cv
195.387 142.348 li
194.655 142.613 193.779 142.71 192.908 142.71 cv
192.839 142.71 192.77 142.709 192.701 142.708 cv
192.699 142.708 li
192.49 142.705 192.285 142.696 192.081 142.684 cv
191.994 142.678 li
191.807 142.666 191.626 142.652 191.447 142.634 cv
191.256 142.614 li
191.114 142.598 190.974 142.583 190.841 142.565 cv
190.639 142.538 190.446 142.51 190.269 142.481 cv
189.966 142.43 189.675 142.368 189.389 142.302 cv
188.383 142.075 187.455 141.806 186.43 141.799 cv
186.393 141.797 186.357 141.797 186.321 141.797 cv
186.178 141.797 186.042 141.809 185.905 141.819 cv
185.758 141.831 185.61 141.846 185.458 141.872 cv
185.293 141.902 185.127 141.93 184.972 141.979 cv
184.64 142.062 184.325 142.174 184.017 142.299 cv
183.846 142.367 li
183.566 142.489 183.295 142.627 183.031 142.777 cv
182.794 142.917 li
182.559 143.059 182.328 143.208 182.103 143.367 cv
181.999 143.441 181.897 143.518 181.794 143.594 cv
181.635 143.714 181.476 143.835 181.32 143.961 cv
180.251 144.815 179.241 145.782 178.149 146.605 cv
178.097 146.646 li
177.955 146.752 177.81 146.855 177.664 146.956 cv
177.539 147.043 li
177.407 147.133 177.271 147.217 177.135 147.301 cv
176.973 147.402 li
176.834 147.485 176.69 147.56 176.547 147.635 cv
176.401 147.715 li
176.397 147.716 li
176.373 147.729 li
176.095 147.767 175.816 147.885 175.56 148.127 cv
174.529 149.106 173.06 149.472 171.446 149.472 cv
168.222 149.472 164.42 148.009 162.378 147.034 cv
162.064 146.885 161.746 146.717 161.425 146.541 cv
161.346 146.498 li
161.065 146.343 160.781 146.179 160.495 146.013 cv
159.765 145.589 159.02 145.146 158.26 144.746 cv
158.26 144.746 li
156.855 144.008 155.399 143.425 153.888 143.425 cv
153.711 143.425 153.533 143.433 153.355 143.449 cv
153.253 143.459 153.167 143.489 153.07 143.505 cv
151.081 143.821 150.051 145.314 148.525 146.315 cv
148.469 146.355 li
148.237 146.504 147.995 146.642 147.734 146.761 cv
147.536 146.853 147.346 146.914 147.158 146.963 cv
147.035 146.992 li
146.853 147.031 146.675 147.058 146.501 147.062 cv
146.501 147.062 li
146.483 147.062 146.465 147.062 146.447 147.062 cv
146.245 147.062 146.049 147.037 145.857 146.995 cv
145.857 146.995 li
145.855 146.995 li
144.573 146.715 143.496 145.57 142.385 144.505 cv
142.243 144.369 142.102 144.235 141.96 144.105 cv
140.281 142.571 138.678 141.155 137.244 139.377 cv
137 139.075 136.621 138.937 136.233 138.937 cv
135.687 138.937 135.122 139.21 134.888 139.68 cv
133.468 142.537 131.377 144.881 129.422 147.355 cv
125.236 148.745 120.711 149.693 116.293 149.742 cv
116.194 149.745 li
116.113 149.745 116.031 149.746 115.95 149.746 cv
95.489 139.795 mo
95.489 139.795 li
95.489 139.795 li
false sop
/0 
[/DeviceRGB] /CSA add_res
.654902 .648627 .64549 rgb
f
13.0677 103.364 mo
13.3972 102.984 13.8977 102.747 14.5193 102.866 cv
17.031 103.349 19.2356 102.159 20.8611 104.684 cv
22.4846 107.206 21.1062 110.64 22.5657 113.25 cv
24.9944 117.596 29.0989 115.326 33.0354 116.408 cv
35.3806 117.052 36.4802 118.418 37.7361 120.374 cv
40.3938 124.515 43.9715 128.512 48.8675 130.091 cv
52.5696 131.284 55.4192 128.871 58.9265 129.241 cv
60.7566 129.434 61.74 130.37 62.5672 131.976 cv
63.6482 134.077 63.0413 135.687 65.8611 137.26 cv
67.8631 138.376 71.595 138.559 73.6135 137.705 cv
74.2752 137.425 74.8987 137.62 75.3299 138.008 cv
77.2307 137.899 79.2747 137.264 81.1658 137.257 cv
84.2532 137.246 87.0379 136.632 90.0657 136.313 cv
90.7991 136.236 91.4358 136.226 92.032 136.256 cv
91.8504 136.225 li
90.5803 134.962 88.7107 134.318 86.93 134.845 cv
86.6985 134.914 li
85.9656 135.131 85.3543 135.503 84.8548 135.972 cv
82.9939 136.456 80.1717 136.198 78.5593 136.318 cv
76.1912 136.493 73.7967 136.831 71.4182 136.814 cv
69.3152 136.799 66.4778 136.879 65.0857 134.913 cv
64.2298 133.704 64.3377 132.026 63.2356 130.796 cv
60.8997 128.187 58.3826 129.082 55.4417 129.34 cv
51.1004 129.719 46.6248 125.834 43.2224 123.054 cv
40.4905 120.822 38.9959 117.02 35.6468 115.682 cv
32.3572 114.368 29.1238 116.42 26.2078 113.818 cv
22.9295 110.893 23.9138 106.183 21.512 102.924 cv
18.8562 99.3196 14.0701 100.647 10.2122 100.835 cv
8.04763 100.941 6.57156 102.139 5.94656 103.821 cv
8.2864 103.941 10.6043 103.644 13.0677 103.364 cv
cp
.764706 .890196 .921569 rgb
f
146.734 143.761 mo
148.745 142.836 149.756 140.871 152.071 140.504 cv
151.55 140.567 151.03 140.662 150.514 140.827 cv
149.18 141.254 148.012 142.027 146.929 142.892 cv
146.729 143.052 145.962 143.626 145.501 144.062 cv
145.89 144.053 146.299 143.962 146.734 143.761 cv
cp
f
97.8255 139.576 mo
105.576 148.536 118.041 147.801 128.422 144.355 cv
130.377 141.881 132.468 139.537 133.888 136.68 cv
134.288 135.876 135.656 135.649 136.244 136.377 cv
137.678 138.156 139.281 139.571 140.96 141.105 cv
142.228 142.264 143.41 143.68 144.857 143.995 cv
144.27 143.325 143.271 142.26 142.958 141.864 cv
141.909 140.531 140.834 139.137 140.159 137.578 cv
138.532 133.822 132.066 134.835 131.329 138.733 cv
131.196 139.437 131.05 140.139 130.905 140.842 cv
126.781 141.017 122.995 144.12 118.804 144.826 cv
112.614 145.868 107.324 144.404 102.262 140.904 cv
99.8313 139.223 97.2508 137.646 94.4885 136.795 cv
95.658 137.322 96.6614 138.231 97.8255 139.576 cv
cp
f
195.224 138.93 mo
195.735 138.555 196.472 136.746 196.86 136.144 cv
197.144 135.702 197.461 135.172 197.809 134.605 cv
197.244 135.264 196.74 136.081 196.347 137.085 cv
195.572 137.691 194.926 138.526 194.387 139.348 cv
194.694 139.238 194.983 139.108 195.224 138.93 cv
cp
f
203.87 129.375 mo
205.417 129.474 206.845 130.779 208.128 131.517 cv
211.428 133.418 213.699 133.768 217.347 132.866 cv
217.497 132.829 217.637 132.821 217.772 132.823 cv
221.873 131.37 224.591 127.819 229.22 127.025 cv
230.364 126.829 231.952 126.994 233.064 126.637 cv
236.284 125.605 235.717 123.005 235.263 120.695 cv
234.923 118.966 234.604 117.33 234.37 115.563 cv
234.26 114.725 235.142 114.099 235.87 114.063 cv
239.011 113.906 242.328 113.629 245.399 112.887 cv
248.793 112.067 249.962 110.043 250.779 106.903 cv
251.689 103.403 252.651 102.071 255.712 101.293 cv
255.883 101.125 256.108 100.993 256.409 100.929 cv
258.633 100.454 261.129 97.0935 262.665 95.5212 cv
264.224 93.9245 265.799 92.3391 267.328 90.7141 cv
268.702 89.2556 270.062 87.7322 271.24 86.0906 cv
268.762 85.1628 265.361 86.5359 265.013 90.0569 cv
264.472 95.5261 254.918 99.197 251.572 102.989 cv
249.672 105.143 248.47 107.915 246.54 109.971 cv
245.776 110.785 244.611 111.302 243.857 112.115 cv
238.78 109.687 232.809 114.437 231.8 119.26 cv
231.465 120.856 231.595 122.388 231.866 123.913 cv
229.614 124.051 227.387 124.875 225.522 126.125 cv
224.293 126.948 223.396 128.368 222.115 129.048 cv
218.631 130.898 214.29 130.413 210.648 132.236 cv
210.367 131.752 210.086 131.279 209.806 130.818 cv
206.37 125.164 198.496 127.927 197.987 134.019 cv
197.977 134.124 197.981 134.227 197.98 134.331 cv
199.428 132.003 201.396 129.217 203.87 129.375 cv
cp
f
174.56 145.127 mo
174.824 144.876 175.114 144.749 175.401 144.715 cv
178.61 143.114 180.709 139.543 184.398 138.879 cv
186.184 138.558 187.551 139.196 189.269 139.481 cv
189.935 139.592 190.806 139.693 191.701 139.708 cv
189.33 137.558 185.73 137.062 181.976 138.579 cv
179.25 139.682 177.425 142.268 174.727 143.034 cv
171.959 143.82 167.537 144.109 164.666 143.785 cv
163.117 143.611 162.112 142.843 160.654 142.309 cv
159.511 141.89 158.382 141.924 157.26 141.746 cv
158.685 142.495 160.058 143.405 161.378 144.034 cv
164.442 145.496 171.47 148.06 174.56 145.127 cv
cp
f
269.96 69.571 mo
269.63 64.4299 267.963 59.9533 263.416 57.1389 cv
259.805 54.9035 255.492 52.8449 251.202 51.8391 cv
250.305 48.2903 249.723 44.6169 248.131 41.2761 cv
245.914 36.6257 242.368 32.6467 238.141 29.7322 cv
230.797 24.6687 220.975 26.863 212.805 30.6037 cv
212.967 29.8669 213.121 29.1286 213.26 28.3865 cv
213.733 25.8635 214.723 22.7248 213.715 20.2502 cv
212.771 17.9324 210.391 16.7068 208.045 16.2473 cv
205.397 15.7287 202.908 16.9612 200.219 16.3615 cv
199.849 16.2795 199.494 16.2385 199.151 16.2287 cv
198.179 15.8132 197.207 15.3904 196.228 14.9685 cv
192.881 13.5266 188.018 12.7199 185.399 10.2121 cv
182.774 7.69895 181.417 4.79466 177.143 5.21067 cv
174.481 5.46995 172.283 7.04612 170.26 8.79368 cv
167.831 7.42893 165.668 5.45872 163.063 4.39768 cv
159.448 2.92552 156.402 3.90891 152.963 5.32884 cv
148.733 7.07542 144.108 7.6179 139.734 8.95969 cv
137.221 9.7302 134.759 10.6394 132.331 11.6335 cv
131.507 10.4724 130.681 9.31321 129.868 8.14134 cv
127.089 4.13401 124.698 2.67991 119.927 4.37864 cv
117.862 5.11399 115.81 6.02512 113.624 6.35667 cv
110.911 6.76829 108.161 6.47678 105.445 6.98997 cv
103.099 7.43333 100.868 8.40647 98.5174 8.80393 cv
96.4285 9.15696 94.385 9.07444 92.3279 9.5012 cv
90.9832 8.55833 89.3269 8.23606 87.6355 8.97923 cv
85.322 9.99632 84.1502 12.3952 84.7405 14.8782 cv
84.8538 15.3552 84.9729 15.8318 85.0799 16.3069 cv
81.5471 17.635 77.8733 18.574 74.1111 19.0427 cv
73.9065 19.0823 li
73.9046 19.073 li
73.2439 16.4543 70.3172 14.8767 67.7542 15.5808 cv
65.5999 16.1726 64.2405 18.113 64.137 20.2229 cv
51.1062 22.3293 38.6497 26.8098 26.1267 31.0427 cv
25.3631 31.301 24.7371 31.6804 24.2381 32.1413 cv
24.1248 32.1482 24.0159 32.1423 23.9011 32.1521 cv
17.5447 32.6863 17.4612 42.6487 23.9011 42.1521 cv
24.4778 42.1072 25.0608 42.0998 25.6477 42.115 cv
25.9866 42.1916 26.3216 42.3034 26.6482 42.4851 cv
27.7884 42.8806 28.8064 42.8635 29.6692 42.5613 cv
30.2459 42.6628 30.822 42.7732 31.3977 42.8943 cv
28.9651 45.0774 26.532 47.2615 24.0994 49.445 cv
20.4607 52.7107 16.8772 55.9133 14.3211 60.1081 cv
14.0613 60.3088 13.8142 60.5241 13.5515 60.7214 cv
11.5706 62.2102 10.8186 64.6555 11.4392 66.6867 cv
8.43533 69.321 5.85281 72.3435 4.19949 76.1848 cv
1.33181 82.8489 1.59646 90.0481 2.86794 97.0476 cv
2.96121 97.5603 3.11501 98.0075 3.30935 98.4045 cv
3.79421 100.658 5.62087 102.594 8.48708 102.558 cv
9.74392 102.542 10.7522 102.144 11.5188 101.52 cv
14.5686 101.276 17.6096 101.1 20.657 100.756 cv
20.888 102.316 20.99 103.894 21.241 105.43 cv
21.5017 106.062 21.6306 106.734 21.6961 107.426 cv
21.971 108.356 22.3411 109.262 22.9016 110.122 cv
24.1428 112.028 25.843 113.228 28.0354 113.742 cv
29.2635 114.03 30.3704 113.724 31.5467 113.825 cv
33.8216 114.021 34.0218 114.173 35.6341 116.012 cv
37.2224 117.824 38.3743 119.844 40.2576 121.409 cv
42.0847 122.927 44.2864 123.821 46.1936 125.215 cv
48.1995 126.681 49.7229 128.239 52.3035 128.643 cv
53.491 128.829 54.8059 128.728 55.9798 128.504 cv
56.5271 128.335 57.075 128.166 57.6223 127.997 cv
57.9968 127.942 58.283 127.882 58.5276 127.82 cv
59.6253 129.092 61.1194 129.465 62.5535 129.206 cv
64.3733 137.075 71.8557 136.086 78.6634 136.013 cv
83.1868 135.965 87.1551 134.54 91.7415 135.173 cv
96.072 135.771 97.6311 137.192 100.747 140.033 cv
105.828 144.668 113.386 146.228 120.068 145.021 cv
123.391 144.421 126.428 143.107 129.094 141.047 cv
131.589 139.119 133.358 136.354 135.822 134.433 cv
137.95 136.709 140.213 138.847 142.647 140.843 cv
145.745 143.385 149.529 142.286 151.004 138.637 cv
150.359 140.234 151.633 138.433 152.092 137.773 cv
153.226 139.246 158.26 140.78 159.663 141.345 cv
165.553 143.716 170.957 145.24 177.061 142.678 cv
178.126 142.231 179.137 141.678 180.135 141.103 cv
181.287 140.16 182.506 139.344 183.972 138.979 cv
184.259 138.842 184.547 138.708 184.842 138.585 cv
187.54 137.458 189.971 138.593 192.606 137.716 cv
195.352 136.802 196.442 134.484 197.734 132.14 cv
198.837 130.139 200.191 128.47 201.77 126.962 cv
202.358 127.205 203.031 127.343 203.796 127.329 cv
206.783 127.272 209.257 129.449 212.062 130.243 cv
214.751 131.004 217.572 130.984 220.135 129.821 cv
222.912 128.559 225.299 126.669 228.135 125.413 cv
230.744 124.258 233.283 122.79 234.311 119.966 cv
234.543 119.33 234.668 118.62 234.739 117.903 cv
234.604 117.134 234.476 116.364 234.37 115.563 cv
234.32 115.177 234.484 114.84 234.742 114.58 cv
234.721 114.292 234.699 114.004 234.678 113.715 cv
234.68 113.602 234.676 113.518 234.675 113.42 cv
237.604 112.333 240.854 112.383 243.824 111.559 cv
248.949 110.138 250.57 105.538 251.629 100.931 cv
254.671 98.9773 257.671 97.2141 260.4 94.6814 cv
263.992 92.3908 267.244 89.4324 269.521 85.8664 cv
272.709 80.8757 270.312 75.0578 269.96 69.571 cv
cp
f
179.527 28.5725 mo
176.493 32.0364 173.512 35.4665 170.721 39.1296 cv
170.648 39.2258 170.805 39.3415 170.887 39.2575 cv
174.079 35.969 177.017 32.5183 179.974 29.0202 cv
180.235 28.7121 179.797 28.2639 179.527 28.5725 cv
cp
.623529 .803922 .87451 rgb
f
115.421 32.5364 mo
110.327 33.0525 105.203 35.4358 100.54 37.4446 cv
100.106 37.6316 100.42 38.3938 100.865 38.2156 cv
105.658 36.2917 110.777 35.3342 115.542 33.4343 cv
115.975 33.2619 115.98 32.4797 115.421 32.5364 cv
cp
f
98.0559 15.7854 mo
98.0198 15.112 97.0086 15.1018 97.0012 15.7854 cv
96.9729 18.5246 97.2635 21.2258 97.574 23.9421 cv
97.8782 26.6037 97.572 29.3205 97.9817 31.9348 cv
98.0545 32.3991 98.761 32.4475 98.9671 32.0637 cv
101.421 27.4856 98.3176 20.6101 98.0559 15.7854 cv
cp
f
53.0789 25.4846 mo
52.8977 25.4846 52.8977 25.7658 53.0789 25.7658 cv
53.26 25.7658 53.26 25.4846 53.0789 25.4846 cv
cp
f
50.0789 101.97 mo
48.1634 101.97 48.1604 104.947 50.0789 104.947 cv
51.9939 104.947 51.9973 101.97 50.0789 101.97 cv
cp
f
47.5789 96.3088 mo
47.1717 96.3088 47.1712 96.9416 47.5789 96.9416 cv
47.9861 96.9416 47.9866 96.3088 47.5789 96.3088 cv
cp
f
52.7454 93.3034 mo
50.8303 93.3034 50.8269 96.28 52.7454 96.28 cv
54.6609 96.28 54.6638 93.3034 52.7454 93.3034 cv
cp
f
64.7454 102.803 mo
62.8303 102.803 62.8269 105.78 64.7454 105.78 cv
66.6609 105.78 66.6638 102.803 64.7454 102.803 cv
cp
f
84.9124 97.6003 mo
84.0222 97.6003 84.0208 98.9831 84.9124 98.9831 cv
85.802 98.9831 85.8035 97.6003 84.9124 97.6003 cv
cp
f
88.9124 91.2033 mo
88.3694 91.2033 88.3684 92.0471 88.9124 92.0471 cv
89.4553 92.0471 89.4558 91.2033 88.9124 91.2033 cv
cp
f
95.2454 82.7419 mo
95.2454 82.842 li
95.2454 82.7419 li
cp
f
98.0789 81.1369 mo
96.1634 81.1369 96.1604 84.1135 98.0789 84.1135 cv
99.9939 84.1135 99.9973 81.1369 98.0789 81.1369 cv
cp
f
93.6741 69.0036 mo
93.4563 68.5637 92.9705 68.2468 92.4754 68.4553 cv
91.9466 68.678 91.8875 69.218 91.9817 69.717 cv
92.2161 70.9573 94.3089 70.2883 93.6741 69.0036 cv
cp
f
90.5789 65.7419 mo
90.5789 65.842 li
90.5789 65.7419 li
cp
f
32.0789 61.0749 mo
32.0789 61.175 li
32.0789 61.0749 li
cp
f
41.0291 52.4441 mo
40.9148 52.4885 40.8006 52.5329 40.6863 52.5769 cv
40.3787 52.6965 40.5896 53.1516 40.8577 52.9841 cv
40.9632 52.9182 41.0681 52.8528 41.1736 52.7868 cv
41.345 52.6799 41.2356 52.3645 41.0291 52.4441 cv
cp
f
51.0789 44.5676 mo
49.9329 44.5676 49.9309 46.3489 51.0789 46.3489 cv
52.2249 46.3489 52.2268 44.5676 51.0789 44.5676 cv
cp
f
47.5789 38.3869 mo
46.6287 38.3869 46.6272 39.8635 47.5789 39.8635 cv
48.5291 39.8635 48.5305 38.3869 47.5789 38.3869 cv
cp
f
44.6072 59.9988 mo
43.1443 59.9988 43.1419 62.2722 44.6072 62.2722 cv
46.0701 62.2722 46.0725 59.9988 44.6072 59.9988 cv
cp
f
29.9124 66.9831 mo
28.8719 66.9831 28.8699 68.6003 29.9124 68.6003 cv
30.9529 68.6003 30.9544 66.9831 29.9124 66.9831 cv
cp
f
29.2454 89.3503 mo
27.3904 89.3503 27.3875 92.2331 29.2454 92.2331 cv
31.1004 92.2331 31.1038 89.3503 29.2454 89.3503 cv
cp
f
119.745 66.0574 mo
117.513 66.0574 117.51 69.5261 119.745 69.5261 cv
121.977 69.5261 121.981 66.0574 119.745 66.0574 cv
cp
f
130.579 28.2419 mo
130.579 28.342 li
130.579 28.2419 li
cp
f
127.912 20.9699 mo
125.997 20.9699 125.994 23.9465 127.912 23.9465 cv
129.827 23.9465 129.831 20.9699 127.912 20.9699 cv
cp
f
136.079 19.2043 mo
134.465 19.2043 134.463 21.7121 136.079 21.7121 cv
137.693 21.7121 137.695 19.2043 136.079 19.2043 cv
cp
f
137.138 25.4192 mo
136.556 25.0788 135.715 25.6472 135.95 26.3323 cv
135.995 26.4631 li
136.11 26.7976 136.46 27.0515 136.825 26.9348 cv
136.945 26.8967 li
137.599 26.6882 137.755 25.78 137.138 25.4192 cv
cp
f
131.412 34.7419 mo
131.412 34.842 li
131.412 34.7419 li
cp
f
151.745 41.1106 mo
150.011 41.1106 150.009 43.8059 151.745 43.8059 cv
153.48 43.8059 153.483 41.1106 151.745 41.1106 cv
cp
f
166.745 23.1457 mo
165.056 23.1457 165.053 25.7707 166.745 25.7707 cv
168.435 25.7707 168.437 23.1457 166.745 23.1457 cv
cp
f
173.912 19.4895 mo
173.69 19.5139 173.468 19.5383 173.245 19.5627 cv
172.374 19.6579 172.687 20.9509 173.395 20.6677 cv
173.609 20.5818 173.823 20.4963 174.037 20.4104 cv
174.479 20.2336 174.486 19.427 173.912 19.4895 cv
cp
f
163.412 40.0432 mo
161.376 40.0432 161.373 43.2073 163.412 43.2073 cv
165.448 43.2073 165.451 40.0432 163.412 40.0432 cv
cp
f
207.567 44.8752 mo
207.47 44.1399 206.631 43.6277 206.023 44.2356 cv
205.418 44.8406 205.926 45.6824 206.662 45.7795 cv
206.745 45.7903 li
207.154 45.8445 207.631 45.3635 207.577 44.9582 cv
207.567 44.8752 li
cp
f
197.745 56.5002 mo
196.298 56.5002 196.295 58.7502 197.745 58.7502 cv
199.193 58.7502 199.196 56.5002 197.745 56.5002 cv
cp
f
187.912 70.2419 mo
187.912 70.342 li
187.912 70.2419 li
cp
f
182.912 82.4699 mo
180.997 82.4699 180.994 85.4465 182.912 85.4465 cv
184.827 85.4465 184.831 82.4699 182.912 82.4699 cv
cp
f
173.412 96.2199 mo
172.462 96.2199 172.461 97.6965 173.412 97.6965 cv
174.362 97.6965 174.364 96.2199 173.412 96.2199 cv
cp
f
163.412 90.9699 mo
161.497 90.9699 161.494 93.9465 163.412 93.9465 cv
165.327 93.9465 165.331 90.9699 163.412 90.9699 cv
cp
f
167.579 109.405 mo
167.081 109.405 167.08 110.178 167.579 110.178 cv
168.076 110.178 168.077 109.405 167.579 109.405 cv
cp
f
159.079 118.408 mo
159.079 118.509 li
159.079 118.408 li
cp
f
151.91 127.209 mo
151.531 126.565 150.616 126.447 150.088 126.974 cv
149.52 127.543 149.741 128.349 150.323 128.797 cv
150.917 129.253 152.19 129.596 152.676 128.777 cv
153.069 128.114 152.189 127.682 151.91 127.209 cv
cp
f
167.245 129.068 mo
166.099 129.068 166.097 130.849 167.245 130.849 cv
168.392 130.849 168.394 129.068 167.245 129.068 cv
cp
f
174.579 115.352 mo
173.584 115.352 173.582 116.899 174.579 116.899 cv
175.574 116.899 175.576 115.352 174.579 115.352 cv
cp
f
197.912 92.3034 mo
195.997 92.3034 195.994 95.28 197.912 95.28 cv
199.827 95.28 199.831 92.3034 197.912 92.3034 cv
cp
f
220.745 105.307 mo
219.479 105.307 219.477 107.276 220.745 107.276 cv
222.012 107.276 222.014 105.307 220.745 105.307 cv
cp
f
228.912 98.1277 mo
226.771 98.1277 226.767 101.456 228.912 101.456 cv
231.053 101.456 231.057 98.1277 228.912 98.1277 cv
cp
f
252.245 69.9084 mo
252.245 70.0085 li
252.245 69.9084 li
cp
f
239.245 43.1433 mo
237.768 43.1433 237.765 45.4402 239.245 45.4402 cv
240.723 45.4402 240.726 43.1433 239.245 43.1433 cv
cp
f
228.245 60.2449 mo
226.255 60.2449 226.252 63.3386 228.245 63.3386 cv
230.236 63.3386 230.24 60.2449 228.245 60.2449 cv
cp
f
34.8445 48.8396 mo
28.6795 51.9114 23.9119 58.6067 19.4441 63.6985 cv
18.4876 64.7893 20.0252 66.3689 21.052 65.3064 cv
23.6404 62.6267 26.3274 60.0583 28.9871 57.4509 cv
31.4456 55.0407 34.0642 52.8025 35.8225 49.8176 cv
36.2034 49.1716 35.4622 48.532 34.8445 48.8396 cv
cp
.921569 .956863 .956863 rgb
f
60.5633 26.8108 mo
50.2644 27.3742 40.7122 33.0891 30.7517 35.3074 cv
29.9407 35.488 29.5061 36.5593 29.9593 37.2546 cv
31.6497 39.8469 36.596 38.1804 39.1502 38.5334 cv
40.1692 38.674 40.5291 37.3938 39.574 36.9968 cv
38.7869 36.6692 37.9793 36.3161 37.1536 36.0456 cv
45.2224 33.8552 53.8572 32.7146 61.0247 28.5139 cv
61.7786 28.0725 61.491 26.76 60.5633 26.8108 cv
cp
f
16.2683 88.6526 mo
16.1023 87.1482 16.0139 85.6384 15.9749 84.1257 cv
15.947 83.0495 14.3714 83.0598 14.3108 84.1257 cv
14.2132 85.8493 14.1824 87.5725 14.2522 89.2981 cv
14.3084 90.6799 14.3528 91.8464 15.2356 92.9426 cv
15.5584 93.3435 16.0989 93.0437 16.2542 92.6736 cv
16.8064 91.3557 16.4197 90.0246 16.2683 88.6526 cv
cp
f
40.8338 108.193 mo
39.3328 106.241 36.9998 105.599 34.6062 105.431 cv
32.6975 105.298 30.5139 105.687 29.4632 103.784 cv
28.7136 102.426 28.803 100.722 28.0877 99.3005 cv
27.5315 98.196 25.8894 99.0227 26.0476 99.9782 cv
25.5647 102.921 26.201 106.375 29.0603 107.821 cv
30.6502 108.624 32.406 108.548 34.1365 108.611 cv
36.1829 108.686 38.1629 109.27 40.1966 109.304 cv
40.7058 109.312 41.1843 108.649 40.8338 108.193 cv
cp
f
60.6795 120.084 mo
57.2117 119.031 53.9485 119.351 50.6433 117.468 cv
47.6272 115.751 44.6843 113.283 42.3689 110.7 cv
41.7097 109.965 40.428 110.933 40.9885 111.765 cv
43.6516 115.718 46.0076 119.331 50.4378 121.517 cv
53.76 123.157 58.0091 124.27 61.1345 121.807 cv
61.7766 121.301 61.3499 120.287 60.6795 120.084 cv
cp
f
97.6775 129.958 mo
96.5051 127.601 93.0427 126.528 90.6785 125.713 cv
87.7439 124.701 84.8113 124.552 81.7591 125.049 cv
80.8157 125.202 81.0257 126.815 81.9866 126.729 cv
85.1682 126.447 88.1726 127.384 91.0408 128.703 cv
92.9715 129.592 94.8596 131.231 97.0501 131.051 cv
97.615 131.005 97.9339 130.474 97.6775 129.958 cv
cp
f
89.6385 16.3347 mo
88.1892 15.739 86.6306 17.0281 85.8186 18.1067 cv
85.032 19.1511 84.6819 20.6003 85.4627 21.758 cv
85.9456 22.4743 87.2571 22.051 86.9407 21.135 cv
86.5623 20.0388 88.4055 19.1023 89.2224 18.7702 cv
89.7088 18.573 90.3543 18.279 90.4925 17.7116 cv
90.638 17.1135 90.1551 16.5471 89.6385 16.3347 cv
cp
f
119.317 10.4426 mo
117.171 10.3303 115.35 11.1716 113.236 11.4592 cv
110.598 11.8176 108.034 11.4436 105.396 11.2722 cv
101.609 11.0256 98.4915 11.4573 95.219 13.467 cv
93.991 14.2214 95.0623 15.8889 96.3191 15.3489 cv
103.348 12.3308 114.678 19.2947 120.154 12.4631 cv
120.793 11.6648 120.402 10.4992 119.317 10.4426 cv
cp
f
144.587 12.5017 mo
142.893 12.324 141.54 13.0564 140.019 13.6858 cv
138.144 14.4616 136.284 15.0344 134.245 15.1277 cv
132.788 15.1946 132.776 17.3635 134.245 17.4011 cv
137.875 17.4949 143.775 17.5779 145.378 13.5403 cv
145.594 12.9953 145.057 12.551 144.587 12.5017 cv
cp
f
80.4788 55.6076 mo
76.7034 59.5198 72.219 63.5158 69.9104 68.5188 cv
69.6824 69.0129 70.1941 69.7395 70.7444 69.3523 cv
75.2342 66.1941 78.5725 61.4192 82.302 57.4304 cv
83.4329 56.2204 81.6355 54.4089 80.4788 55.6076 cv
cp
f
115.164 47.1369 mo
107.745 57.3869 99.4641 67.3127 93.0301 78.2219 cv
92.7376 78.717 93.4124 79.2336 93.8211 78.8323 cv
102.909 69.924 110.001 58.7727 116.783 48.0832 cv
117.441 47.0466 115.858 46.1784 115.164 47.1369 cv
cp
f
109.255 79.2951 mo
105.094 84.5061 99.4783 89.8562 96.8826 96.051 cv
96.677 96.5403 97.3889 97.091 97.8118 96.7654 cv
103.168 92.6472 106.852 85.8967 110.838 80.5163 cv
111.513 79.6052 109.97 78.4006 109.255 79.2951 cv
cp
f
87.1834 108.076 mo
83.9832 112.169 79.5911 115.956 77.8245 120.973 cv
77.6712 121.408 78.2605 121.906 78.6507 121.608 cv
82.8855 118.366 85.1306 113.064 88.0481 108.743 cv
88.3933 108.232 87.5706 107.58 87.1834 108.076 cv
cp
f
71.3196 89.9035 mo
68.4256 91.07 66.5266 93.2439 64.595 95.6257 cv
62.5174 98.1882 59.8816 100.902 58.8694 104.098 cv
58.6907 104.661 59.3826 105.205 59.885 104.879 cv
64.865 101.643 66.7425 94.6496 72.2136 92.0241 cv
73.3821 91.4631 72.5452 89.4094 71.3196 89.9035 cv
cp
f
47.6902 58.5676 mo
45.6409 60.5403 42.9129 62.1872 42.0315 65.0603 cv
41.8772 65.5632 42.4397 65.8967 42.8577 65.6955 cv
45.5452 64.4035 46.7752 61.4221 48.4085 59.1213 cv
48.7161 58.6872 48.053 58.2185 47.6902 58.5676 cv
cp
f
51.2468 87.1155 mo
49.5813 87.0212 48.7551 88.1936 47.8997 89.4978 cv
46.8919 91.0349 45.4422 92.9729 45.4099 94.8772 cv
45.4011 95.3948 46.033 95.8005 46.4856 95.4944 cv
47.8157 94.594 48.5208 92.9616 49.3186 91.6106 cv
50.0764 90.3283 50.7551 88.9294 51.5808 87.6975 cv
51.7542 87.4387 51.5203 87.1311 51.2468 87.1155 cv
cp
f
147.746 20.2507 mo
139.179 28.8074 128.665 37.1252 122.667 47.7947 cv
122.252 48.5324 123.172 49.1238 123.771 48.6467 cv
133.33 41.0447 140.366 30.0993 148.741 21.2449 cv
149.362 20.5881 148.388 19.6086 147.746 20.2507 cv
cp
f
162.188 72.9988 mo
159.647 74.6531 157.567 76.7634 155.768 79.1907 cv
153.976 81.6086 151.856 84.4114 150.868 87.2717 cv
150.636 87.946 151.42 88.342 151.953 88.1057 cv
154.436 87.0041 156.064 84.2751 157.468 82.0617 cv
159.212 79.3098 160.69 76.4753 163.239 74.3606 cv
163.995 73.7326 163.009 72.4641 162.188 72.9988 cv
cp
f
148.084 78.2068 mo
143.983 82.7527 138.489 87.1076 135.825 92.7048 cv
135.427 93.5427 136.313 94.7658 137.236 94.1155 cv
142.31 90.5417 145.699 84.4289 149.492 79.6155 cv
150.265 78.635 148.962 77.2336 148.084 78.2068 cv
cp
f
161.544 112.419 mo
159.742 114.253 157.88 116.021 156.067 117.841 cv
154.603 119.309 152.6 120.96 152.128 123.055 cv
152.004 123.608 152.497 124.218 153.094 124.021 cv
155.161 123.34 156.55 121.29 157.892 119.666 cv
159.538 117.676 161.126 115.642 162.787 113.662 cv
163.502 112.809 162.35 111.599 161.544 112.419 cv
cp
f
192.334 53.9109 mo
189.931 58.1667 187.289 62.2453 184.6 66.3254 cv
182.25 69.8918 179.094 73.3513 177.855 77.4822 cv
177.694 78.0202 178.347 78.5632 178.836 78.2361 cv
182.295 75.9231 184.448 71.968 186.621 68.5022 cv
189.366 64.1262 191.74 59.5324 194.074 54.9284 cv
194.658 53.7785 192.977 52.7727 192.334 53.9109 cv
cp
f
196.282 39.112 mo
196.037 38.9607 li
195.103 38.4236 194.012 39.3083 194.259 40.3269 cv
194.279 40.4221 194.305 40.5154 194.337 40.6076 cv
194.612 41.4958 195.668 41.8723 196.416 41.2951 cv
197.175 40.7097 197.052 39.6218 196.282 39.112 cv
cp
f
191.12 28.3249 mo
191.12 28.425 li
191.12 28.3249 li
cp
f
194.995 27.3249 mo
194.995 27.425 li
194.995 27.3249 li
cp
f
167.37 33.1174 mo
166.451 33.1174 165.57 33.926 165.613 34.8752 cv
165.656 35.8274 166.385 36.633 167.37 36.633 cv
168.29 36.633 169.171 35.8244 169.128 34.8752 cv
169.086 33.9226 168.356 33.1174 167.37 33.1174 cv
cp
f
122.995 31.1955 mo
120.673 31.1955 120.669 34.8049 122.995 34.8049 cv
125.318 34.8049 125.322 31.1955 122.995 31.1955 cv
cp
f
114.745 24.0588 mo
112.89 24.0588 112.887 26.9416 114.745 26.9416 cv
116.6 26.9416 116.604 24.0588 114.745 24.0588 cv
cp
f
67.7454 38.0588 mo
65.408 38.0588 65.4041 41.6916 67.7454 41.6916 cv
70.0833 41.6916 70.0872 38.0588 67.7454 38.0588 cv
cp
f
44.7454 56.3869 mo
42.8303 56.3869 42.8269 59.3635 44.7454 59.3635 cv
46.6609 59.3635 46.6638 56.3869 44.7454 56.3869 cv
cp
f
80.6204 88.6682 mo
78.1018 88.6682 78.0979 92.5823 80.6204 92.5823 cv
83.1389 92.5823 83.1433 88.6682 80.6204 88.6682 cv
cp
f
72.6204 103.078 mo
70.6297 103.078 70.6267 106.172 72.6204 106.172 cv
74.6111 106.172 74.6145 103.078 72.6204 103.078 cv
cp
f
74.7454 112.977 mo
73.2678 112.977 73.2649 115.274 74.7454 115.274 cv
76.2234 115.274 76.2259 112.977 74.7454 112.977 cv
cp
f
93.6204 117.285 mo
91.2527 117.285 91.2488 120.965 93.6204 120.965 cv
95.9881 120.965 95.992 117.285 93.6204 117.285 cv
cp
f
112.495 105.895 mo
111.656 105.895 110.851 106.633 110.89 107.5 cv
110.929 108.37 111.595 109.106 112.495 109.106 cv
113.335 109.106 114.14 108.367 114.101 107.5 cv
114.062 106.63 113.396 105.895 112.495 105.895 cv
cp
f
128.401 94.8581 mo
128.149 94.7746 127.766 94.7556 127.607 94.7126 cv
127.532 94.6926 127.206 94.5393 127.053 94.4773 cv
126.398 94.2131 125.485 94.5447 125.012 95.0168 cv
124.413 95.6155 124.254 96.5383 124.578 97.3083 cv
124.869 97.9963 125.477 98.4612 126.217 98.5603 cv
126.989 98.6643 127.946 98.3069 128.307 97.5588 cv
128.386 97.3957 128.501 97.1238 128.559 97.0324 cv
128.644 96.8987 128.909 96.6228 129.031 96.4074 cv
129.38 95.7907 129.049 95.0735 128.401 94.8581 cv
cp
f
167.37 123.946 mo
166.427 123.946 165.522 124.776 165.566 125.75 cv
165.61 126.728 166.359 127.555 167.37 127.555 cv
168.315 127.555 169.219 126.725 169.175 125.75 cv
169.132 124.772 168.382 123.946 167.37 123.946 cv
cp
f
177.654 99.4665 mo
177.512 99.3537 li
177.526 99.3772 li
177.338 99.2009 li
177.071 99.0935 177.042 99.0779 177.251 99.155 cv
177.093 99.0881 176.934 99.0212 176.775 98.9543 cv
175.404 98.5105 174.109 99.8015 174.289 101.14 cv
174.463 102.433 175.808 103.204 177.013 102.696 cv
178.257 102.171 178.69 100.437 177.654 99.4665 cv
cp
f
221.375 76.3342 mo
221.371 76.3327 li
221.147 76.238 220.916 76.2004 220.671 76.197 cv
219.756 76.1853 218.915 77.1653 219.236 78.0808 cv
219.533 78.926 220.317 79.5036 221.242 79.3908 cv
222.037 79.2942 222.818 78.7541 222.778 77.8557 cv
222.742 77.0676 222.166 76.404 221.375 76.3342 cv
cp
f
217.87 56.5432 mo
216.317 56.5432 216.315 58.9573 217.87 58.9573 cv
219.424 58.9573 219.427 56.5432 217.87 56.5432 cv
cp
f
255.37 67.0119 mo
253.455 67.0119 253.452 69.9885 255.37 69.9885 cv
257.286 69.9885 257.289 67.0119 255.37 67.0119 cv
cp
f
223.995 98.4065 mo
223.162 98.4065 222.363 99.1394 222.402 100 cv
222.441 100.864 223.102 101.594 223.995 101.594 cv
224.829 101.594 225.628 100.861 225.589 100 cv
225.551 99.1365 224.889 98.4065 223.995 98.4065 cv
cp
f
197.62 117.762 mo
195.705 117.762 195.702 120.739 197.62 120.739 cv
199.536 120.739 199.539 117.762 197.62 117.762 cv
cp
f
262.106 64.8166 mo
261.855 64.0989 260.737 64.3869 260.953 65.1345 cv
261.659 67.5705 262.489 70.0183 263.056 72.4909 cv
263.77 75.6008 262.481 77.6985 261.452 80.5476 cv
261.366 80.7839 261.689 81.0525 261.899 80.8918 cv
267.424 76.6662 263.919 70.0066 262.106 64.8166 cv
cp
.729412 .866667 .886275 rgb
f
258.079 84.5749 mo
258.079 84.675 li
258.079 84.5749 li
cp
f
248.979 94.2082 mo
247.154 94.3738 245.54 95.5534 244.537 97.0661 cv
243.852 98.1003 243.463 99.3293 242.906 100.431 cv
242.42 101.394 241.72 102.288 241.453 103.341 cv
241.406 103.53 241.551 103.778 241.77 103.756 cv
246.036 103.337 244.693 95.7322 249.078 94.945 cv
249.49 94.8708 249.401 94.1701 248.979 94.2082 cv
cp
f
237.417 101.699 mo
236.832 101.902 236.248 102.11 235.659 102.3 cv
235.343 102.402 235.384 102.91 235.74 102.899 cv
236.352 102.879 236.964 102.88 237.576 102.873 cv
238.474 102.864 238.228 101.419 237.417 101.699 cv
cp
f
231.939 104.617 mo
230.993 106.242 230.273 107.991 229.226 109.556 cv
228.235 111.039 226.677 112 225.704 113.42 cv
225.601 113.571 225.643 113.808 225.77 113.931 cv
226.013 114.167 li
226.206 114.354 226.554 114.492 226.822 114.381 cv
228.441 113.706 229.443 111.996 230.318 110.533 cv
231.416 108.699 231.84 106.849 232.452 104.834 cv
232.546 104.527 232.098 104.343 231.939 104.617 cv
cp
f
223.912 111.858 mo
223.354 111.858 223.353 112.725 223.912 112.725 cv
224.47 112.725 224.471 111.858 223.912 111.858 cv
cp
f
214.384 122.359 mo
209.737 124.506 210.059 120.754 207.218 120.298 cv
205.919 120.089 204.98 120.779 203.95 121.444 cv
202.129 122.622 200.382 124.106 198.685 125.46 cv
196.935 126.857 195.774 129.04 193.999 130.311 cv
193.618 130.584 193.741 131.188 194.241 131.207 cv
195.574 131.258 195.548 131.144 196.586 130.24 cv
197.752 129.225 198.513 127.855 199.778 126.876 cv
201.246 125.74 202.762 124.645 204.268 123.559 cv
206.652 121.84 208.288 123.569 210.706 124.055 cv
212.308 124.377 213.537 124.094 214.987 123.391 cv
215.682 123.053 215.074 122.039 214.384 122.359 cv
cp
f
245.019 47.3943 mo
242.777 41.1291 243.915 33.3191 235.317 34.2097 cv
229.822 34.779 223.801 36.9573 218.574 34.2766 cv
215.565 32.7336 213.579 29.8498 209.908 30.2351 cv
209.37 30.2912 209.13 31.1648 209.767 31.2707 cv
213.364 31.8689 215.283 34.3938 218.32 35.9968 cv
220.908 37.363 223.536 37.3113 226.397 37.0041 cv
230.012 36.6164 235.608 34.6677 238.641 36.9206 cv
241.368 38.946 241.467 44.6843 242.85 47.9924 cv
243.392 49.2893 245.518 48.7864 245.019 47.3943 cv
cp
f
204.762 31.9865 mo
203.067 32.1365 201.718 31.0788 201.047 29.5666 cv
200.418 28.1472 200.687 26.574 200.138 25.1721 cv
200.023 24.8786 199.529 24.7014 199.367 25.071 cv
197.83 28.5823 200.742 33.8279 204.762 33.5569 cv
205.77 33.4885 205.765 31.8977 204.762 31.9865 cv
cp
f
200.36 22.009 mo
198.86 20.8049 197.24 19.7478 195.287 19.529 cv
194.008 19.3855 192.749 19.7048 191.471 19.675 cv
190.08 19.6433 189.002 19.0486 187.697 18.6985 cv
187.393 18.6169 187.025 18.9182 187.149 19.2463 cv
187.723 20.7658 189.216 21.1111 190.757 21.2131 cv
194.146 21.4377 196.65 20.7893 199.621 22.966 cv
200.174 23.3708 200.899 22.4421 200.36 22.009 cv
cp
f
221.657 70.8459 mo
220.802 69.5085 219.423 68.7395 218.696 67.2322 cv
217.602 64.9631 217.743 62.4187 217.882 59.9758 cv
217.92 59.301 216.84 59.2937 216.827 59.9758 cv
216.783 62.4284 216.66 65.3967 217.866 67.6472 cv
218.283 68.4255 218.962 68.9006 219.457 69.6072 cv
220.859 71.6086 220.629 73.718 220.491 75.949 cv
220.463 76.3957 221.06 76.4831 221.277 76.1618 cv
222.309 74.6316 222.716 72.5022 221.657 70.8459 cv
cp
f
229.283 74.3679 mo
229.08 73.8196 228.832 73.4123 228.448 72.9787 cv
228.085 72.57 227.411 72.4826 226.934 72.6921 cv
226.401 72.9265 226.129 73.3865 226.082 73.9582 cv
226.046 74.4006 226.08 74.7868 226.209 75.2156 cv
226.448 76.0134 227.338 76.5979 228.169 76.3288 cv
228.934 76.0808 229.591 75.2058 229.283 74.3679 cv
cp
f
242.745 73.802 mo
241.901 73.802 241.9 75.1145 242.745 75.1145 cv
243.59 75.1145 243.592 73.802 242.745 73.802 cv
cp
f
244.079 76.8074 mo
242.812 76.8074 242.81 78.7761 244.079 78.7761 cv
245.345 78.7761 245.348 76.8074 244.079 76.8074 cv
cp
f
247.245 73.6369 mo
245.33 73.6369 245.327 76.6135 247.245 76.6135 cv
249.161 76.6135 249.164 73.6369 247.245 73.6369 cv
cp
f
246.825 70.7326 mo
246.645 70.6701 246.465 70.6081 246.284 70.5461 cv
245.506 70.2771 245.055 71.303 245.532 71.8386 cv
245.663 71.9856 245.794 72.1325 245.924 72.2795 cv
246.325 72.7307 247.091 72.5837 247.378 72.0925 cv
247.691 71.5583 247.385 70.9255 246.825 70.7326 cv
cp
f
188.912 90.9636 mo
186.559 90.9636 186.555 94.6199 188.912 94.6199 cv
191.265 94.6199 191.269 90.9636 188.912 90.9636 cv
cp
f
186.579 81.8034 mo
184.663 81.8034 184.66 84.78 186.579 84.78 cv
188.494 84.78 188.497 81.8034 186.579 81.8034 cv
cp
f
196.579 71.8894 mo
193.487 71.8894 193.482 76.6941 196.579 76.6941 cv
199.671 76.6941 199.676 71.8894 196.579 71.8894 cv
cp
f
186.672 96.531 mo
186.138 95.9973 185 95.8674 184.485 96.531 cv
184.136 96.9797 183.747 97.4177 183.43 97.8884 cv
183.08 98.4074 182.937 99.1159 183.052 99.7326 cv
183.128 100.145 183.561 100.391 183.944 100.412 cv
185.127 100.478 185.923 99.4748 186.672 98.7185 cv
187.26 98.1247 187.265 97.1238 186.672 96.531 cv
cp
f
173.412 110.47 mo
171.497 110.47 171.494 113.447 173.412 113.447 cv
175.327 113.447 175.331 110.47 173.412 110.47 cv
cp
f
172.579 125.137 mo
170.663 125.137 170.66 128.114 172.579 128.114 cv
174.494 128.114 174.497 125.137 172.579 125.137 cv
cp
f
167.745 123.528 mo
165.046 123.528 165.042 127.723 167.745 127.723 cv
170.445 127.723 170.449 123.528 167.745 123.528 cv
cp
f
154.079 121.637 mo
152.163 121.637 152.16 124.614 154.079 124.614 cv
155.994 124.614 155.997 121.637 154.079 121.637 cv
cp
f
153.245 131.532 mo
150.124 131.532 150.118 136.384 153.245 136.384 cv
156.367 136.384 156.372 131.532 153.245 131.532 cv
cp
f
142.245 131.97 mo
140.33 131.97 140.327 134.947 142.245 134.947 cv
144.161 134.947 144.164 131.97 142.245 131.97 cv
cp
f
132.579 123.053 mo
129.699 123.053 129.694 127.53 132.579 127.53 cv
135.459 127.53 135.464 123.053 132.579 123.053 cv
cp
f
124.079 133.137 mo
122.163 133.137 122.16 136.114 124.079 136.114 cv
125.994 136.114 125.997 133.137 124.079 133.137 cv
cp
f
179.079 88.0749 mo
179.079 88.175 li
179.079 88.0749 li
cp
f
168.412 88.4699 mo
166.497 88.4699 166.494 91.4465 168.412 91.4465 cv
170.327 91.4465 170.331 88.4699 168.412 88.4699 cv
cp
f
192.079 71.4699 mo
190.163 71.4699 190.16 74.4465 192.079 74.4465 cv
193.994 74.4465 193.997 71.4699 192.079 71.4699 cv
cp
f
202.245 61.2419 mo
202.245 61.342 li
202.245 61.2419 li
cp
f
209.912 43.7605 mo
206.655 43.7605 206.649 48.823 209.912 48.823 cv
213.17 48.823 213.175 43.7605 209.912 43.7605 cv
cp
f
225.745 50.5749 mo
225.745 50.675 li
225.745 50.5749 li
cp
f
228.745 59.2419 mo
228.745 59.342 li
228.745 59.2419 li
cp
f
251.579 64.4084 mo
251.579 64.5085 li
251.579 64.4084 li
cp
f
250.579 64.4504 mo
247.351 64.4504 247.346 69.466 250.579 69.466 cv
253.806 69.466 253.811 64.4504 250.579 64.4504 cv
cp
f
5.55056 93.8684 mo
5.15554 91.4363 4.7571 89.0041 4.39285 86.5681 cv
3.72439 82.0998 4.22878 78.9089 6.64431 75.0261 cv
8.57986 71.9148 10.6219 69.0417 13.5691 66.7961 cv
14.555 66.0442 14.8582 64.4314 13.5691 63.7419 cv
13.0979 63.49 12.6331 63.2698 12.1668 63.0627 cv
15.1404 60.1218 18.219 57.2951 21.3303 54.4953 cv
24.8108 51.3635 28.3572 47.2683 32.3596 44.6902 cv
32.4348 44.7033 li
35.0154 45.177 36.1218 41.2248 33.5252 40.7483 cv
29.4031 39.9914 23.6814 39.8757 19.5681 38.2951 cv
21.0393 34.9221 29.3064 32.2741 31.6594 31.5251 cv
37.0818 29.7995 42.5618 28.2365 48.0183 26.6238 cv
54.9622 24.571 64.4202 23.1028 68.3401 16.2864 cv
70.3792 17.1824 71.8616 18.5681 73.0574 20.6257 cv
73.5457 21.4656 74.5999 21.6799 75.4319 21.2483 cv
75.6355 21.1423 75.843 21.0456 76.052 20.9519 cv
76.1463 21.5842 76.4749 22.196 77.0662 22.6037 cv
78.5227 23.6091 77.3186 24.5066 76.7473 26.1179 cv
76.0574 28.0652 75.4202 30.032 74.909 32.0349 cv
74.0481 35.4084 73.471 38.7854 74.0413 42.24 cv
74.1258 42.7497 74.406 43.071 74.76 43.2595 cv
76.4192 45.529 79.5877 44.7439 82.1375 44.6047 cv
84.1048 44.4973 86.8176 44.656 88.7327 43.7068 cv
88.8528 43.8205 88.9817 43.9289 89.1106 44.0329 cv
89.7073 44.5178 90.4085 45.0222 91.178 45.1677 cv
91.5554 45.3713 91.9246 45.57 92.2473 45.7805 cv
94.1121 46.9963 95.9988 48.1174 97.8015 49.4309 cv
98.2913 49.7883 98.9319 48.9685 98.4544 48.5842 cv
96.7688 47.2278 95.1477 45.7722 93.4104 44.4841 cv
92.4602 43.7795 91.4192 42.7033 90.2644 42.2297 cv
90.304 41.9665 90.2522 41.696 90.0281 41.5158 cv
88.0061 39.8904 85.1204 40.5354 82.657 40.4724 cv
81.2639 40.4367 79.5081 40.0471 77.929 40.1052 cv
78.4861 37.8489 78.8933 35.5486 79.5452 33.3132 cv
80.4134 30.3342 81.8587 27.5256 82.7151 24.5642 cv
83.3718 22.2927 82.7903 20.3401 81.261 19.2615 cv
83.1448 18.655 84.9153 17.8469 86.2522 16.1457 cv
88.0955 13.7995 87.5276 11.8425 87.0208 9.53098 cv
89.2298 9.83079 91.4622 10.1799 93.615 10.6443 cv
93.8411 10.8157 94.1072 10.9441 94.4373 10.9577 cv
103.955 11.3606 114.047 8.55979 123.149 5.76292 cv
124.871 7.98655 126.613 10.1941 128.397 12.3699 cv
128.869 12.9455 129.819 13.1228 130.503 12.9265 cv
138.046 10.759 145.547 8.44798 153.058 6.1721 cv
154.912 5.61009 156.86 4.56175 158.797 5.02561 cv
160.477 5.42844 160.887 6.2844 162.224 7.38792 cv
162.935 7.97483 163.671 8.47434 164.43 8.9138 cv
157.741 14.5051 152.009 21.7424 146.099 27.9792 cv
142.541 31.7351 139.009 35.5154 135.475 39.2937 cv
132.201 42.7937 127.575 46.3782 125.684 50.8147 cv
125.046 52.3108 125.984 53.8699 127.397 53.9182 cv
130.337 55.5617 133.777 56.2346 136.936 57.3943 cv
140.707 58.7785 144.378 60.4162 148.155 61.7815 cv
154.278 63.9944 163.241 68.0823 169.771 66.5266 cv
170.273 66.407 170.641 66.1496 170.887 65.8186 cv
171.278 65.6946 171.662 65.4324 171.995 64.9905 cv
174.553 61.5886 176.862 58.1003 179.119 54.5022 cv
180.121 53.2385 181.073 51.9074 181.657 50.5276 cv
183.05 48.3269 184.359 46.0705 185.152 43.6037 cv
185.337 43.0305 184.657 42.6418 184.206 42.9138 cv
183.914 42.5046 183.677 42.049 183.384 41.6452 cv
183.012 41.1316 182.631 40.6169 182.237 40.1199 cv
181.528 39.2253 180.75 38.3806 180.003 37.5178 cv
179.838 37.3274 179.516 37.5759 179.653 37.7878 cv
180.342 38.8493 181.007 39.9299 181.755 40.9509 cv
182.129 41.4616 182.503 41.9836 182.901 42.4758 cv
183.173 42.8122 183.459 43.074 183.709 43.3835 cv
181.22 45.9045 179.404 49.032 177.283 51.8586 cv
174.701 55.3015 171.983 58.6628 169.332 62.0574 cv
166.457 60.4817 162.878 60.1985 159.716 59.3806 cv
155.701 58.342 151.76 57.0959 147.846 55.7282 cv
143.146 54.0852 137.695 51.4123 132.404 50.7937 cv
134.666 48.6506 136.645 46.0256 138.664 43.8542 cv
142.408 39.8279 146.156 35.8044 149.874 31.7536 cv
156.079 24.9934 163.491 18.341 168.694 10.6677 cv
168.999 10.7512 169.306 10.8308 169.62 10.9035 cv
171.147 11.2566 172.205 10.1867 172.453 8.99632 cv
173.569 8.38645 174.417 7.64866 175.548 6.75901 cv
178.428 4.49241 178.912 5.47386 181.633 7.45872 cv
185.622 10.3699 189.604 14.1819 194.217 16.0637 cv
198.335 17.7439 203.166 17.6223 207.534 17.9519 cv
208.416 18.0188 210.126 17.8205 210.908 18.2068 cv
212.547 19.0154 212.016 19.7449 211.772 21.4426 cv
211.375 24.2048 210.394 26.9905 209.722 29.6994 cv
209.341 31.2356 210.718 32.6526 212.269 32.2468 cv
217.933 30.7663 226.346 26.7688 231.946 28.3264 cv
237.61 29.9026 242.808 37.258 247.005 41.3742 cv
247.202 41.5676 247.411 41.6994 247.623 41.8015 cv
247.903 44.5803 248.311 47.3445 248.671 50.1155 cv
248.845 51.4597 248.836 53.1784 249.769 54.2698 cv
251.231 55.9822 254.697 56.5407 256.686 57.2639 cv
260.518 58.6565 265.098 59.5461 266.915 63.6609 cv
268.66 67.615 269.693 73.2473 269.082 78.177 cv
268.678 78.7326 268.507 79.448 268.721 80.2483 cv
268.286 82.0896 267.577 83.7707 266.529 85.1408 cv
265.082 87.0315 263.638 89.0915 262.067 91.0129 cv
261.786 90.7043 261.419 90.447 260.964 90.2756 cv
260.221 89.9949 259.367 89.8586 258.585 89.7571 cv
258.139 89.699 257.675 89.6462 257.225 89.6804 cv
254.837 88.1032 251.532 87.8122 248.74 87.0808 cv
244.891 86.072 240.889 84.6423 236.883 84.1916 cv
238.588 78.8747 239.981 73.2068 242.409 68.1955 cv
242.691 67.6145 242.716 66.9997 242.57 66.4333 cv
242.878 65.8791 242.938 65.2048 242.53 64.5251 cv
242.54 64.5222 li
241.133 61.4416 239.505 58.4743 237.927 55.4885 cv
236.811 52.9319 235.39 50.5329 234.309 47.9685 cv
234.25 47.8298 234.158 47.7385 234.055 47.675 cv
234.389 47.0637 234.409 46.2922 234.468 45.6203 cv
234.493 45.3327 234.067 45.3025 233.985 45.5549 cv
233.775 46.2004 233.501 46.9182 233.578 47.6135 cv
233.338 47.6902 233.154 47.9187 233.224 48.2678 cv
233.691 50.5974 234.265 52.7737 235.049 54.969 cv
235.127 56.1941 235.248 57.4157 235.507 58.6335 cv
236.018 61.0432 237.193 63.1716 238.287 65.3498 cv
236.437 67.7092 235.706 71.5198 234.756 74.3127 cv
233.827 77.0437 232.852 79.8567 232.611 82.7429 cv
232.393 82.8108 li
228.137 84.5818 223.885 86.3513 219.662 88.1985 cv
217.263 89.2468 214.556 90.1828 212.156 91.4924 cv
212.145 80.5666 212.254 69.5198 211.557 58.6467 cv
212.443 57.9397 211.034 56.6828 210.609 56.1833 cv
209.6 54.9983 208.481 53.9231 207.406 52.7971 cv
207.046 52.4197 206.365 52.9187 206.67 53.3655 cv
207.543 54.6472 208.358 55.9607 209.303 57.1907 cv
209.534 57.4909 209.905 58.1023 210.344 58.49 cv
208.439 70.4055 207.838 82.7497 207.358 94.7922 cv
207.261 97.2278 210.317 97.7434 211.601 96.3259 cv
214.419 96.2942 217.677 94.3796 219.989 93.4768 cv
224.614 91.6706 229.205 89.7912 233.795 87.8957 cv
234.361 87.6623 234.775 87.2986 235.059 86.8713 cv
238.638 88.8449 242.868 89.8147 246.707 91.0823 cv
249.857 92.1223 253.58 94.3283 256.961 93.9919 cv
257.457 94.2912 258 94.5256 258.533 94.7185 cv
256.277 96.6579 253.675 98.0471 250.455 98.2722 cv
249.518 98.3376 248.454 98.9265 248.262 99.9421 cv
247.632 103.259 246.633 106.355 245.226 109.408 cv
241.043 109.347 236.665 110.372 232.584 110.749 cv
231.116 110.885 230.244 112.006 230.514 113.468 cv
231.104 116.664 230.812 119.6 231.497 122.381 cv
229.153 122.339 226.836 122.435 224.612 123.114 cv
224.513 122.92 224.372 122.732 224.173 122.558 cv
220.978 119.753 216.898 117.822 213.421 115.325 cv
209.345 112.397 205.348 109.361 201.406 106.257 cv
201.877 104.718 201.86 102.984 202.112 101.436 cv
202.214 100.81 201.305 100.526 201.14 101.168 cv
200.766 102.622 200.17 104.177 200.056 105.721 cv
199.147 105.865 198.45 106.942 199.335 107.712 cv
203.105 110.991 206.952 114.166 210.906 117.222 cv
214.337 119.875 217.699 123.195 221.508 125.255 cv
221.455 125.48 221.436 125.712 221.456 125.944 cv
218.402 128.057 215.678 130.464 211.876 129.393 cv
209.163 128.629 205.137 124.83 202.2 125.339 cv
200.131 125.697 198.636 128.677 197.498 130.212 cv
195.824 132.469 194.001 134.797 192.804 137.371 cv
190.037 135.756 186.589 133.777 183.631 134.635 cv
185.258 128.254 188.424 121.983 189.545 115.531 cv
189.673 115.577 li
189.883 115.63 190.129 115.429 190.047 115.202 cv
189.957 114.95 189.838 114.715 189.705 114.487 cv
189.728 114.32 189.757 114.153 189.777 113.986 cv
189.825 113.576 189.363 113.436 189.061 113.59 cv
188.281 112.678 187.273 111.907 186.466 111.072 cv
186.043 110.634 185.225 111.222 185.6 111.739 cv
186.356 112.778 187.166 114.037 188.237 114.851 cv
186.449 118.103 185.439 121.831 184.23 125.31 cv
183.121 128.501 181.94 131.795 182.414 135.168 cv
180.068 136.512 177.935 138.624 175.786 140.252 cv
172.015 143.11 168.845 142.787 164.477 141.642 cv
161.443 140.847 158.985 139.554 156.266 138.073 cv
154.903 137.33 153.638 136.672 152.024 136.797 cv
149.297 137.008 147.037 139.209 145.914 141.656 cv
142.428 138.651 139.409 135.349 136.844 131.5 cv
135.952 130.164 134.232 130.226 133.33 131.5 cv
131.662 133.856 129.995 136.211 128.327 138.567 cv
126.221 141.541 125.156 141.966 121.399 142.28 cv
117.238 142.627 112.054 143.458 107.789 142.398 cv
107.916 142.264 108.028 142.114 108.118 141.947 cv
108.658 140.944 109.768 140.438 110.309 139.355 cv
110.601 138.769 110.605 138.034 110.899 137.475 cv
111.265 136.78 112.025 136.124 112.51 135.525 cv
113.621 134.15 114.61 132.627 115.329 130.999 cv
115.98 131.065 116.66 130.831 117.23 130.131 cv
119.446 127.413 121.965 124.973 124.462 122.518 cv
125.922 121.082 128.534 119.128 129.497 116.963 cv
133.237 116.109 136.592 113.234 139.81 111.22 cv
143.388 108.982 146.991 106.783 150.566 104.542 cv
151.042 104.926 151.9 104.535 151.759 103.769 cv
151.241 100.966 150.498 98.1618 149.396 95.5364 cv
149.248 95.1853 148.625 95.1716 148.659 95.636 cv
148.849 98.2282 149.377 100.807 150.079 103.319 cv
146.15 105.079 142.241 106.896 138.311 108.656 cv
136.07 109.66 133.531 110.521 131.256 111.708 cv
130.367 109.012 129.592 106.249 128.871 103.5 cv
128.719 102.918 127.901 103.176 127.99 103.743 cv
128.336 105.954 128.501 108.175 128.915 110.376 cv
129.07 111.199 129.178 112.034 129.522 112.739 cv
128.923 113.139 128.346 113.564 127.83 114.051 cv
125.284 114.435 122.712 117.501 120.982 119.038 cv
119.293 120.538 117.635 122.044 116.066 123.645 cv
114.839 120.576 111.774 117.987 109.803 115.455 cv
107.103 111.987 104.847 107.621 101.785 104.372 cv
107.05 100.226 111.575 94.7922 116.073 89.8767 cv
121.209 84.2624 126.309 78.6174 131.604 73.1506 cv
132.061 72.6794 131.378 72.0178 130.891 72.4377 cv
125.118 77.4216 119.24 82.2854 113.481 87.2854 cv
108.199 91.8718 102.337 96.6247 98.1463 102.258 cv
97.5589 103.047 97.8391 104.024 98.4646 104.672 cv
99.5105 109.356 102.963 113.821 105.565 117.729 cv
107.179 120.155 109.141 123.822 111.696 125.923 cv
110.13 128.326 108.788 130.721 106.955 132.994 cv
105.539 134.751 104.691 137.025 103.669 139.014 cv
103.465 139.411 103.357 139.822 103.338 140.226 cv
100.196 137.817 97.4187 134.124 93.7512 132.837 cv
89.9192 131.491 83.9661 133.289 80.0413 133.707 cv
79.9495 133.717 79.8509 133.731 79.7576 133.742 cv
77.0647 128.887 72.7044 125.054 70.4129 119.893 cv
70.0413 119.056 68.6555 119.651 68.9353 120.516 cv
69.8572 123.37 71.3338 125.87 73.0003 128.351 cv
74.2674 130.238 75.5711 132.361 77.1267 134.116 cv
72.3084 134.855 66.6267 135.634 65.1126 130.489 cv
64.4451 128.22 63.886 125.842 61.1175 125.732 cv
59.2478 125.657 57.0921 126.715 55.2542 126.976 cv
51.7234 127.478 49.366 126.823 46.885 124.271 cv
42.9798 120.252 39.2263 115.736 34.5984 112.54 cv
34.1228 112.211 33.5955 112.261 33.1702 112.513 cv
29.7005 112.879 26.6316 114.119 25.2713 110.347 cv
24.2957 107.642 25.0896 104.486 24.1897 101.832 cv
22.5921 97.1184 16.3035 99.5115 12.7385 99.6345 cv
11.8191 99.6662 10.6858 99.8127 9.6199 99.8074 cv
10.4436 95.9841 10.4851 91.8801 11.0974 88.0036 cv
11.511 85.385 12.4861 82.4953 12.4339 79.7766 cv
24.4524 81.6057 36.5017 79.1096 48.5686 79.1184 cv
49.074 79.1189 49.51 78.9656 49.8738 78.7165 cv
51.7078 80.1692 54.4768 80.3825 56.7293 81.0632 cv
60.6785 82.2571 64.4983 83.7497 68.3714 85.1565 cv
69.031 85.3962 69.6306 85.261 70.1096 84.9289 cv
71.218 85.3982 72.4378 84.928 73.5862 84.511 cv
74.366 84.2282 75.1424 83.9343 75.9187 83.6423 cv
76.6336 83.4143 77.3494 83.1579 78.074 82.864 cv
78.2644 82.7868 78.4612 82.7107 78.6565 82.6345 cv
79.0852 82.4778 79.512 82.3147 79.9426 82.1633 cv
80.1497 82.0398 li
81.9324 81.302 83.6336 80.3782 84.3689 78.5744 cv
84.5213 78.2004 84.4544 77.8576 84.2757 77.5725 cv
84.5232 76.4533 84.1726 75.239 84.1204 74.0461 cv
84.0515 72.4714 83.9426 70.928 83.7176 69.3669 cv
83.659 68.9612 83.0403 69.0818 83.0266 69.4607 cv
82.9719 70.9817 82.9348 72.5324 82.7664 74.0461 cv
82.6629 74.9743 82.2923 75.9026 82.179 76.8157 cv
79.866 77.0525 77.3865 79.0447 75.2825 79.8137 cv
73.8787 80.3274 72.013 80.6252 70.5144 81.3357 cv
70.3919 81.2346 70.2561 81.1418 70.096 81.0657 cv
66.4285 79.3157 62.5579 77.9358 58.6599 76.7947 cv
56.8977 76.279 54.7625 75.4074 52.7449 75.2102 cv
52.7952 74.9607 li
54.676 72.5505 55.864 68.9104 56.8718 66.6452 cv
58.1287 63.822 59.5037 61.134 60.8958 58.3752 cv
61.4925 57.1926 61.9158 56.509 62.0496 55.7497 cv
64.3875 54.9304 66.6765 53.9768 68.9495 52.9929 cv
71.6326 51.8313 74.5423 50.9548 77.0711 49.4792 cv
77.8059 49.05 77.2888 48.0359 76.5198 48.1726 cv
73.8142 48.6521 71.2093 49.7995 68.575 50.5886 cv
65.9187 51.384 63.2722 52.2102 60.6922 53.2307 cv
60.2566 53.4031 59.9842 53.7156 59.8455 54.0705 cv
59.0662 54.5681 58.68 55.3215 57.8694 56.6062 cv
56.1829 59.2795 54.5667 61.9802 52.8548 64.6335 cv
51.2864 67.0642 48.594 70.6355 48.1184 73.9016 cv
41.9021 73.1828 35.7395 74.5017 29.533 75.0359 cv
22.9788 75.6003 15.9568 74.0075 9.57888 75.6491 cv
9.28249 75.7253 9.03787 75.8718 8.83962 76.0598 cv
8.17996 76.3249 7.63455 76.8987 7.55349 77.7883 cv
7.43337 79.1135 7.30544 80.4582 7.17996 81.8098 cv
6.77859 83.9343 6.67654 86.1828 6.40701 88.2033 cv
6.17361 89.9504 5.75369 91.9133 5.55056 93.8684 cv
cp
13.0686 103.363 mo
13.3977 102.983 13.8982 102.747 14.5193 102.866 cv
15.7654 103.106 16.9353 102.934 17.9973 103.008 cv
18.6428 102.983 19.1502 103.023 19.3845 103.176 cv
19.5764 103.303 19.7322 103.447 19.8631 103.605 cv
20.2156 103.854 20.5491 104.199 20.8611 104.684 cv
22.4846 107.206 21.1062 110.64 22.5657 113.25 cv
24.9944 117.596 29.0989 115.326 33.0354 116.408 cv
35.3806 117.052 36.4802 118.418 37.7361 120.374 cv
38.7273 121.919 39.8474 123.443 41.115 124.829 cv
41.7034 125.417 42.2947 125.993 42.887 126.556 cv
44.6282 128.097 46.6009 129.36 48.8675 130.091 cv
52.5696 131.284 55.4192 128.871 58.9265 129.241 cv
60.7566 129.434 61.74 130.37 62.5672 131.976 cv
63.6482 134.077 63.0413 135.687 65.8611 137.26 cv
67.8631 138.376 71.595 138.559 73.6135 137.705 cv
74.2752 137.425 74.8997 137.62 75.3318 138.008 cv
77.2322 137.899 79.2752 137.264 81.1658 137.257 cv
84.2532 137.246 87.0379 136.632 90.0657 136.313 cv
93.7893 135.92 95.4798 136.865 97.8255 139.576 cv
105.576 148.537 118.041 147.801 128.422 144.355 cv
130.377 141.88 132.468 139.537 133.888 136.68 cv
134.288 135.876 135.656 135.649 136.244 136.377 cv
137.678 138.156 139.281 139.571 140.96 141.105 cv
142.734 142.726 144.338 144.864 146.734 143.761 cv
148.83 142.798 149.824 140.686 152.355 140.449 cv
155.603 140.146 158.604 142.711 161.378 144.034 cv
164.442 145.496 171.47 148.06 174.56 145.127 cv
174.816 144.885 175.095 144.767 175.373 144.729 cv
178.468 143.2 180.531 139.84 183.962 138.982 cv
184.406 138.84 184.887 138.774 185.43 138.799 cv
186.747 138.809 187.897 139.253 189.269 139.481 cv
190.905 139.752 193.768 140.001 195.224 138.93 cv
195.735 138.555 196.472 136.746 196.86 136.144 cv
198.137 134.159 200.068 130.397 202.628 129.548 cv
202.924 129.016 203.256 128.957 203.623 129.383 cv
203.87 129.375 li
205.417 129.474 206.845 130.779 208.128 131.517 cv
211.428 133.418 213.699 133.768 217.347 132.866 cv
217.483 132.833 217.605 132.838 217.729 132.838 cv
219.988 132.048 221.828 130.624 223.79 129.36 cv
223.992 129.226 224.2 129.079 224.399 128.954 cv
224.791 128.709 225.044 128.395 225.195 128.055 cv
226.067 127.606 227.082 127.384 228.148 127.271 cv
228.495 127.175 228.85 127.089 229.22 127.025 cv
230.364 126.829 231.952 126.994 233.064 126.637 cv
236.284 125.605 235.717 123.005 235.263 120.695 cv
234.923 118.966 234.604 117.33 234.37 115.563 cv
234.26 114.725 235.142 114.099 235.87 114.063 cv
239.011 113.906 242.328 113.629 245.399 112.887 cv
248.793 112.067 249.962 110.043 250.779 106.903 cv
251.365 104.649 251.973 103.296 253.148 102.408 cv
253.139 102.397 li
253.18 102.385 li
253.825 101.907 254.641 101.565 255.713 101.291 cv
255.884 101.125 256.109 100.993 256.409 100.929 cv
258.633 100.454 261.129 97.0935 262.665 95.5212 cv
264.224 93.9245 265.799 92.3391 267.328 90.7141 cv
269.283 88.6384 271.232 86.446 272.626 83.9407 cv
273.73 81.9582 273.705 80.3025 273.809 78.3127 cv
273.755 78.2346 li
273.696 78.1682 li
273.669 76.2439 273.43 74.2986 273.224 72.5285 cv
272.551 66.7502 271.67 58.7322 265.658 56.1521 cv
262.047 54.6023 258.081 53.8904 254.486 52.3152 cv
251.746 51.115 252.084 48.9363 251.541 46.238 cv
251.182 44.4524 250.806 42.6784 250.383 40.9109 cv
250.888 40.1433 250.954 39.112 250.104 38.2751 cv
246.851 35.071 243.602 31.864 240.337 28.6716 cv
238.391 26.7688 236.416 24.2527 233.772 23.3274 cv
230.742 22.2673 227.409 23.7082 224.484 24.5198 cv
221.226 25.4236 217.969 26.3313 214.714 27.2502 cv
215.706 23.9914 216.817 20.2785 216.095 17.5241 cv
215.314 14.5383 212.656 14.4699 210.065 14.28 cv
204.559 13.8767 197.977 14.4294 193.129 11.529 cv
188.192 8.57542 183.738 4.50218 179.141 1.05344 cv
178.635 .673562 177.774 .735574 177.261 1.05344 cv
174.938 2.49241 172.442 4.13987 171.074 6.50218 cv
170.854 6.42844 li
166.718 5.48802 165.188 2.71995 161.853 .789285 cv
159.368 -.649192 157.132 .173074 154.545 .938699 cv
146.547 3.3054 138.574 5.79221 130.633 8.3469 cv
128.821 6.25462 127.041 4.13987 125.307 1.98069 cv
124.886 1.45481 123.953 1.2512 123.332 1.45872 cv
113.673 4.68382 103.868 5.71458 94.0384 8.01145 cv
93.8411 8.05735 93.6785 8.13694 93.5379 8.23264 cv
90.8313 6.95091 88.3303 6.04319 85.2508 5.49778 cv
84.1013 5.29417 82.783 5.99827 82.8435 7.33177 cv
83.0022 10.8274 84.8299 13.0359 80.5803 15.4841 cv
78.9485 16.424 77.0476 16.8723 75.2576 17.5539 cv
73.4939 14.925 71.0994 13.2317 67.9295 12.2585 cv
67.2405 12.0466 66.1804 12.3825 65.8733 13.0949 cv
62.7219 20.4065 52.0042 21.5549 45.2053 23.4875 cv
38.2678 25.4597 30.826 26.8747 24.2688 29.9582 cv
21.2049 31.3987 14.5008 35.3601 15.1663 39.57 cv
15.5095 41.7424 17.5369 41.9485 19.407 42.3366 cv
22.3469 42.9475 25.3152 43.4548 28.2796 43.968 cv
25.6443 45.7639 23.3474 48.407 21.1077 50.3674 cv
16.5769 54.3332 12.0579 58.2986 7.78201 62.5407 cv
6.84206 63.4734 7.30496 65.0749 8.54714 65.4402 cv
8.79324 65.4953 9.03396 65.5632 9.27322 65.636 cv
5.01394 69.3025 1.04373 75.0906 .193139 80.1369 cv
-.453834 83.9778 .68435 88.1784 1.24978 91.9656 cv
1.48708 93.5539 1.48464 96.2663 1.86111 98.6179 cv
1.60623 98.9255 1.4949 99.3327 1.6658 99.7712 cv
2.13064 100.962 2.43289 102.146 2.6365 103.327 cv
6.17068 104.218 9.45535 103.772 13.0686 103.363 cv
cp
.623529 .803922 .87451 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (freeze_2.eps)
%%CreationDate: 3/12/2018 2:18 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bFmN4Qa8CBamZ>=,HC2CMS]8e`0M(,M1aMbAZD9TA2dO.BeCIf7!*5mA.Ub.+1/oXLs6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7b]g'\r*aht!p&AbUn:q=15Pr8bUWqu,pVkGMTS?ZBhlWi\0>5@=4_&hgh:EWWC+^3]XnMqaS:IeW]he(a?+
%5J2=AlLjm9h];^ijQ5g]:VN+O4P>.*qu$8j^[CgAT03(1>]]keo_$J8kI3CR?GCaUAs]\:2MSD\nNVFT=31p@GIEjAJ,)F"^:\mc
%7UAjXNRNCJqd8^Q7nP:mTDnHNDng_orL;D7hE6/XnpgTHVdBBYl`Iq7rU,OA6>lMgSWi*3o#okZp.nJ5GlC1)\QdCC^V9Ns%_)3t
%G/*tc/`60"/.Zb`(-D.qY)\6cI,XS0osD>\_r(DFm%Q],GJ?6!).$+[b:Y.;[C6P!SHkhLVgM).i#ciDI/!Q\Rp-A2cLn2W#edjm
%)#$*DrA#6"?K,J*WjTncajmG^6f#;L[O[K*\gppdakj1'#QFG;B=EBhq<l#T55F@7[>jYJlSi07qu:1HI>Mue903sE<Jd^/$,?N!
%q<dKtHMQoeFD5>kdm<j'X)DmJ9,FZg\p=:._`m_ns52,s_ir^0hS'TtIJ*LCN7#s?;Z#p3o>?Jn4o*ha,gt@5If%sgb<NZ9++30'
%Z>[@^K\^Yp0:6M1[3bQUP`BrO9uG_(MEBbmIcl<FqjiQ,DdPa+p=[W][ubf@eDa2KJ+<Bg2llE`^T73\r._75rFu4k]rHJTRl@f0
%qn"rip#4NO1g$o0r?WM5HMPhEeI.>Tp\<oX-GW9B)p_l>CVO0T_;E?dIe_4&KahDhk*93@lm6QIpsF$PGP1:Z4o[fsq2<k.Ie`>t
%0E:\0nY;^_J+Mr4DKijAp@<C)^YJ@g5MQ.$D,4KQq<P*5J!#6[nseA]lP.*[o'Eu\^#PtsroNjudm'J^elk<#`rG)ml'kbX72EYk
%rUsUt\,6>PJO8&giUrD4o#:1gER$ph.&6@EJ%o73J+in+jEf33o())U[.X(^a4od\^70#Ak<7md^O,t@jce;ke+tKk.)1$OUUo:p
%-f2T5j+HbKUA^X)$h(AAP]r]QrTZ\0HLg4EZ8gXRr9!lrGQ$_$k4fj3HcR3<:S'e#p?h/nhu3B(e(t#r&)[D4pP2hRSr^Kjq#,Hc
%r&alb=$B0,s7YGZ?9Nf3rJU35\`J#Z_p=o<^]!_AhnQ^MfVi9M^OH"5QeFZJ^VW`*rrCH6HHgfMrP.dL``8@s,es8<oTV#$Z=bdQ
%A,E=s*,GOtplmt`Vf//`6G-sj^\+*Ms8#,?p91(db<%%#](o.J?Ac_+qsoMTDf41;q<GqC0LU+lrqXZ[\"#JWbV.RPVQXQ:S(Fbq
%^3KO4k2L:YE^&S$YFg469\.F[Ms;(q7CmSbOFQ+RO5Aa-PfI$HQW6-6p>7u]oZrR?M:pg&o)X>^\J;4A%f]Y$X8GTtpqbjnQkqsW
%QYC/C#0#Co^>?X(6oUN?B%Lr'$U\j<lhB')>O:\d@Tb%_DjCS$JMluj8)@kXrC=OmqBR_W55IE+a_U*Em#S3cG+lN<&:aGllgLG&
%rkn05YFiK*p(eisf!6%)AI7A;iGTlNk7[dF>4<S_j$.8eNoH5&%uDL;[)M!u/iis`j%%_s3lqu;_mR7&E\-T'a0G$dFi.!l\YU'G
%BYHJeQ?oRO\qaK<c9e\=qWc3t3QTU*Lh4[SQ;Ci#OlIk150GNuc1jjjk)d7r/h_KA2fbG:;3"#tb9;p=2&/,LMK8J;1EsAS,KD5S
%jH*H&/]o;I`X+B@iStQ;E"bue*5b&Pq4,euQ(nJ-+AS*)o('g)l(5-S)]g@eNrC0A?B/eS+6fgZEo87-QWnh$<;CNS/3)FE43;K,
%@kSk2QVN[H(6L"cA=)A5:*,#qS6Kml3%[W\%e=8I>g(N><&l^pZp[!-52u+-s-oc.0BU:5VuQ=Q2ui;Y/cF>Zi/\m+r]*7gjhD&r
%s+;<Cqn;p<hRC0,ke>-#p)1cP%s"=9nA7,)SE)ZNJ^[%AY,fVQ,Y%tG>qN?Ll"N(s*(>;dEo9?AM22<]#Vr2RKTEm1j!_3TOCM(3
%\utf?O,@tCCVoRtFGYB2_Sctu.Aq3N56q#a^&7o<*)6E3q>VZ=?Q_<>%?Wl9i@%?%o$-2b,)I[-<#Q;<B91XdE`kd_ZUcERZV)\,
%e!YU?R"XI[aCu`ejV.[,j,Qmq,>6YUQ]kWA^9U;dhOR&BJk0X?iAuZ],WnZ-*Pt[l8`id,nl[R4j!cQ/aFpNJ_iEt,h\Y@SMtFk0
%hagNHRC?2mngIu3A6*=\Mea3()]>h%j&\Vn*1QSsN-(/DY9F:.lf7YtaG:Xh.3_44,#]kO4XX/^8ll`FgibXsN["Jj(o.i:;'*M;
%olto?+-/q&UJ.S)8j)[DM#+YG*DT*bo]J]@O;A(N_4X[<d:kQ:kr@Oi`c:)'/0#c<%6k(a"C[03<(T8J^6HJ=Tt;*!K+K(QNk"gM
%70d*0.(0G&!\o0%8AlB1f?tO`$MfhLnclFhlI0f86n23X=MY)M-K&NT?$;ISFMj-&fA&G_['5lOimc/AL_UHYjP4gV@bRD-V:iPL
%nA..G*Fo<+e`c@8;&\&r!8T9Jl#:^RJbG3,&5=O)&EQG@'Gq,O"MBm+"thm0hiI!K"^4[nUT>Fj4JI6a4;]4*-@E0/'4,Do.LagI
%j/?*L)il/+H$dGh^#<Vukp,e!"p>r?V2c%9K#\8YEO]71,P3FN!>/Xo07H<,\O9C(F$j$(j(+iCE0;7k96`;#X5elQ`5VpUSEcL4
%"ZhAf!!BX,@Q71QS02<<*?mdG,$5@d*MHrYK5kn)_L^]\<'u!bJ4HW;'0fSFDjEPK5#H3Sb,rioQbZ`.]+iP2(at/,&uet^M'A.i
%1n$N:M=a.ZB:8*a3Qn6jAfi%UKS.@a[G2B.2G:MKOWH/r["qDH6s'pCA_6M*.\E</l_?ur(8?M@%@3Bp/M:Tf<eh)\jKddTW1;p_
%=AZ02S.o7(bR@Y8$XeW-bRD<317KFh53,G7\$1*^94q3V)G0cbE5Car`BcrtMZafNbf)l7L4r:;Oc.%5Q[t=]*J]4*BUkU:0Y'*J
%,h":N,)o@KCmZJ<Ok;fkP%l=8Ud="i+;%NS#0G`G&Jub79G'c>7*Q6"4Y"^:A1!'f;r]:T*JR&$.`g#j)#e7Um^aFKlXh7O7Pt6k
%h$2YW'C_1Ls,f6<U\c9RP+8nWphAT`hb;p"<^;ci3CS%E8<^p4=44S]@'76%?3"H6)=DeO+*RU03WT3Po&Z&O\)6Pd[3kMqgjk=M
%Er4@WJSp<hYn*"2XX5k(+F;[sN=\O._+H\C<ed.V7DP>tgMtjQ=i>>6,'jlK_27Y.&S"Zf,1K-:%%^'-Wcg%2L8r]n"kmWO:gJsa
%KURj!NeJs&:N^pIbHFUj^AR9UgDA^ldHsSE10)rV*&SI2gi98PR9HKMS1VCRkZ$*3Z;YnD$EjlG[jo,kZe%Q\)c_Ps)6V$%NgkK*
%nX^57q%*SrGE-Y4M"_m'HVf^YGN=+3ErR;,]^L(;_[a6;_p<323TQ223q)%Jk<%OE`oPl6d4'WQ8(T4<d4:.M[6^lLeLZ&MTV,LO
%]oYSJEfal"7M`KV93nEL&WIu$IP`Vik`li#I5LW@]Rsp"C!c6]aIT8J<9#7hS4]nN;b\%nDQ5]8BO1M:B%_X#A874*3Aui$aUk3t
%+?F7UVV#m2#L!nJ``Op)Ct2Fi8_/q\)/%Q5T]%khj#HA1DRAXodqosTKpsohVuO.Gi@RP^449[Pg6!6!I7JSP;:e2'=Pr^`Da3<C
%ml9?UNsFS4_*;t\:]0gVj,WTV.$Hio,3JB4JSDX9>1liHLc$UW,`*+=AI?Rp%BDq19IJtGU>8^][D6d(F;?)A`CZ\X9BaS;lu(b[
%)Puba=fYeK@6BpHG<42&@;$C0(k?1?QsnPsVs`UTh4iUl/YEi'=LH@lrC!EFN<@gfIFRr6>oe!hBf6l"mAQ#qg$5+a%<UPgdl`?k
%5"mK_InZ;'mW_f[^&>HJVnH=#IF.N[NrN:,r&;H!SK/UO#Ws:oY"W]0qWqCU!T<l74B_$#lF(B[XYF.$&;s+;S/2V>S#K<+*JWD2
%bqmPCl!QGmb=OfP.(1\<%[5s-l+93/#7CkP5_6-Yg/#PhhEk]U%KTt?)hM:78'uD)EeU)h,EP@]7L0B*Xa=o=`XS&"@XtJhe07d2
%<=C5)+4W]8'rkU))PbXK5,MV:R3sn<?M(Zo-K&sIT%30fboY6_IlXuUV]W0snT2?^S1Yn!AEDh0)6J2J&Kc&7*?TAE!T42'ElSEW
%qd8TJ?)-31g`18+Z5AmsF;&QIl/m)PTl2\(P"\/c]K%$%6i`)+@m#'(TuY'B+D<)%l3Mh?qJ>f+1I4f%ScCkRG67,1W)J8m,@b9l
%E[o"A!9XRA1h]f=M@OMf"PTB]9gY=*\7tHpj%#V#$?:6N;diE)3YgpZYZ'N+]gZ?[5u5:f)N0RnN>3H;!7Y.N[`;s?(7X+n%_YoN
%@56JFEEYPjdFoH0a5[_8O!.M']2S&3n>RIWC3>o?X.!p(eT&sCHi.PFH*bJ9f-=$\fGs'=DE['@,=]=/gs&"&l)i!'<fc9nO2F<p
%\`8=f]*HWmE6'%AI-uKT45Sb?egR.Jb%H_)=egAE4+>a/T/Fc(NUg5II(DD.7N&2He,N\QhoGb[3=83PBLVi*-FcOfF)ngbm]"94
%ArBlT7=3uH(K(u3c2A3G7j40+8/GB)kL^krf%eTqm`NYt0#XgWVGr7B^['Jc\OZ49kEi7->M38&rk!X(-N.=/I!e,/]-j5dD3Bfg
%NS+gbVQW%U@AIhDZ(I/\W[U5SoG1<JR<c(!_(AT'o(hn?-]_p.&'&[fJir8+r;B;;98SWp<+TX8&;B*d.C-rF`N:R8GQ2\\-pP]L
%1h!5*UbhOIZEj$S=LjO];A\47A:GJB05#bH&J)B=h.G/d\pO-pr7LK:[(Z2?-A[SH-]#.%9or)d9dT.QA0<C[0NZ-(#`Cd!Z'$[%
%()@_8^_,?R@TFHc&4cLF'%U&ZQ]Nik*Ym&($t%8qX$e'H+ff*:Q,Nf)AH\rl#YWPNo)rtfJQmf"(t*<F8@'b2?=S8^Q8'3^bSJB+
%eXY/'5ZfAEBX15K=fRpcWkdlDaA1:`e89)<Zb4eZR<k%\HX^lmk,7n]eR08paAJM7<1@=5MUUk:ac7=b=ag53[)c[!f.#>aa,ric
%Z0&?0O*]u&E_"AsSW=44I.91&3:'0'Gj4DR^>hE#Cd#]c3,eC!4u?44m#X<cC&>F#o,Z`_b"[sj_r_4_<RWlt`mN_TL6s_0E\uJ<
%aOKUr[#aLE`Xn?47h5A^a/+R?/"N4U"&1^!&MT\Dg/BAiL/u_bm*\gTR!3sf[WPBr8L$Mto;XZ:d'Lq=14L4R$Ei@(P&iHU3bmm6
%_WKGcB^0#H56BgM1MPLRLUe#4Fr"Hm/5X\)YU,VE!sY`Q,E\%1YkhgKb.ktO-`:6GH2*.9,SFtHoC70&Ia?1*g.sS6)EIY?e8_RP
%H8D#^^PDVt<[p&_@qa.jK=[aHj`p^e(bQfuhBT_oaE#?!i1jO:lM2TI][QS?UV6Pd4$MT(pGr4ohm"!A/>!he]&(:sbkXJ>i$H^4
%Z*i@`Zi#01s2jj/fBdtKp5=*]Zhki-gV8>5@4FE&XT_uHTd?mfrZfnl'!Sa[8t,KmTT[rK>?L,0<9fQC*g"ec::^NRM;DR4Ub.[M
%#t-7dS3od[BI%f7$Q6'Sd='s")#uK8"G7a"eD-6rjP'<h4.`jiqV\,R3p7'&fT@g/ElWNUo:a3Sju].8f`tZ7lV1DcF0gZCI%[pI
%@\$$QS'rRYo9#;/W'eu_,h*rN"k'gCS]#UVXZl$X7ojoREn7Y`kWN[@*^@57F`]FHde0L*W)k&5g7tgC'ED2?>kA`RU[qH\C1XEH
%C[<@Ik67lNWB49IS^,DX+$[%L@KjqN[T"?MTR(PPE6\$E(0;;!$E9oO6L/;mH=4Rs2c/>0r\GRn7sCf@dBMc,XAoXD(*?7/d>"+7
%=Jqof7m9#_fl?1FmMIPrrnbQ+j.OD@kX!JmcK"GiLRi(ul.q-MnH!:9cgdY'NZ1^1dU:H\-l9U0^2'!*R]1QTeq&a\A$nKq51*k)
%:`I5ZB[fVh#\9*U#EPi"WM-OI@jsg25>[.Lp!o2T[-B2IZ\l'9IP%XtbcI^92MK(3&F3&WFtBE2(8+_-M0eS\?$GN%WmrMsn'J`S
%.N@t6AFbX:9WZ@c,7Mn/,n@^Fa8uQC5X3hQ3.%T+EecZ/D?Yl2l)i"7^h9."[jatED0TC*FK#Q2EllhedOK/==)X.I/.XaeTpMVt
%^;k5>f-,?ck;dHDNou2QnP7iZ*M;fq50*PRdMR=m[C@ij(_tdLGUk1JCA%fb]T6P!'*Hk/dL4HW&&#jpoSVlqhBab'k7ElmVkd>H
%ab@8Llkc]+%o[2n.&!;.G&p\Z0c*i?^d9mE.&kjb<GW$oH84$[^nOQb'mj,?U3Pd[F.("<19OJPiHeYGr&\)O-XPJ7TRSJ$Oh\pW
%SL)@$`3PpWQB<4,YY)e^qmTe5>UGP`KA3A8f#3bG)BuN%BmUqY$T,3"@ISG,U(\t`Y%^mgo#2Qi$S:H+5s6JoE)a[tfW\@,;L%q2
%XL'2[O5Rnl0fY^@%IhB@jj=CkZPW`KnRCI(7[!e%nu"'n'L+m0jdt<KPU.,c\bf=?0,G'n75T&*1Lp@LW-=8BkL^X7ElUg"qHY?E
%h8ZuChnr,dKON9G_B1-]`K#\)m`cm?-J:)qjB.BsRUp#q\_f)nk$H<<fd$qpFQ%rtVIl2hGr*:>LZqftr$%PsV<1c:WD:?]3bMVo
%_e6d_(DKZKH1/*]kG0/&,Lu$@g'H7a>\=cb$N]Z:ZHH1nDP`W/R4)VjU$=oj@l,qgJB_Pt.^Z;9\SP\7-&su\UbN.e7H<s<7MBiN
%q!5r`@?_ZWhi5`FN10<!ACncgj^/+A]NFK',f,q><tUb<W`J2i+`9<p55Z`s(U6r#[F5<C*a;g]giQsa]'#9a*5up4ZoEQn%6f5`
%]dJ9rn&2D"`3Vs"qZP@31T&OagL(ZI7(TXRk&Hqe+rl"teS.A30qgWrGW)6R5#%M0)4>7*e4RW2$'PV#qCUkO9D;Ri01CfVB9/j8
%+d[S;e[LnPcoMKe@3UZ?-C1HlBQ^,hoWk?)jEcq:ds;j:RN7T/@)\LJ8"><fctron5P0NmcWYKuVSfJQ_lta8QWAcGi#]lmTOkO.
%jGqF>A(Y8H,24/W%I0%sV]U]'*"QYH\As'rLdUVjdZ04\frFVPN(9.$H?2^GJME4e$+3I)h/hA7g,/JW4g6<1,,-'m&<CGB<"^[,
%;V@W%U"<neW9jZ!&#*:QD@%R]PR/n0ojG4$-;C3jqrL@p7#aDZ'9Pa$3Y)hH-tOQ21dG)P:#-L^JsHj^)ZYKr:aj$9EC4PEbh@o\
%!8W&]c\&=?p\su9a+)ujr&]0`TZR`+CGZgbSk);J_ue#=3)GK.7T:!<$U`>/EDR$bZB?Q@6RF[X]9im*6PY8#K`hM0A?.M@3mo7T
%XE9mCZ(K)A<rTXs'A:@1d119L\H@b0NGji41T!1/*pA<g<e!2e9uo7@^<Ok_GF*O!&,*Of$@26r;$R,Z*283h::g>0n>t5#>(:"_
%oDQG0>-.$[R"u2(Hf;"9?LKts_KbhM#W@c1e$AiFqhq0=]+bVH*9P:j_F*cOH&>S?\g"0qU$/B5\nZ(rLpgrLBeWV@]DY7;^Qe9/
%O)/!q&N&&MEgNObMAgC#(/i2;Hd54/^!i)9N?oP.iTs[)(&H8A-DkeDEKkpnUg0aA[8:JiC;kr=dkU%#S-Kig@@0c^k<);Boj7*A
%T6b0crOM5?V`V_t9J3,6LO%s$a1G[S7GH(IG>`4<hsKCC"%ppSDS5:[9BOXXiuTc4,7`LK%19Al.shY2f[JTd6I0G!gSE+P!VZX7
%<L16m9R*+f.SjchK8[l3nQ*Ak19nb;<_baqg9.RMT6\>2VblH?J9HhZSC>g,.%M$umQ:A`R*sm;$#'&Xna2j"(9@a56lS'qZtmgf
%H;&D>n$+7HSL+8Ml7YJ4CF\&.82_iG.IO@QhSG"`kChc_Se-j58\mQ"jhB7&FI!iX9b3g.JoOmjnCuBCmj87rRh0rp.JVb!@&)A&
%cuC3Xp`g=+EQk&7bC,`tmVQq44=GG5'K@lfh@97^_7^3W]R.M5F#`>:*HT/>rg@VSR?_U3E-BN$ZfN.[.bJgnUN=GNiV^k>2_`$p
%S:q@%TY^H/0iCDT*&jP,V;lD,J8[B-[a;qHIdT)OmPWtGLED-blN.4[@>A9sTCBW:cU*=h_/rdVetEV$&VTGa:=3qNgim_g;%L'#
%KNC;2B%$>+iXOB&eEGcAABHeVoIb.R];^_WOr*jO]T[lV<q[;%8t(nr2lW-Bg1A#<'?"bo7c$L6r=H:":Otpkfh1?.n":M>'0@D5
%2QMYA:j[Gr7>DoKY'c'42_!-t*4]2Ap#5YL$84+p*,Dihc7O,X><ZH2%74]8Y.[<k]Vb"IY5_T<h#!!P\29gHR&sseM7N?B2Vjaa
%UsrXp,3M"e;e,H)O`!ac_f=&7M1KM#en=>`h4,1;!#aFfeE@'sGs_q9<?!l\Me6n3\aMD<2Ve6fmX'EOq7_2N^mT3oF9H.F,oH\R
%QHo-2)>-8kpG"`eI7dG9nlq]*5L',g8`RORTQN6+J%B_$o<1-#6N<>Z[-FJ6cI4'RO8K@\94">omdUn*5u7gdQ'5+W3s.\//ij5c
%XMqMl3B9sRpe-Q,QXo5^5\Wof,rC+V@euj;o<C),>Yb,$UbRqZN3jS5Eh:H4Kid.H"ZfCUT2'T8f5RdYQJJ'9NQCu*`GQ`c3B.G_
%DY22lQJp'cl_\"7/FL'ff4H!;1C?UFZ=Y<<a[=>h-^Z>AHKK4SN8rA6>+jOYE(TdK?D*\r7rGV3\]B)"?Eq"L=[e&Ip+5FT!Gn1b
%\]F(<09RacN)ZZ3_]a#`UIFh%6$*_t1O;]S_qT.hs$V,cGCOr#?6W+>k/+Jk'Ifp"E\hFh9ju+J(:#@rRJ*ePGH^:C+M@bC`r,A%
%;>.8\HFRCWXa=3QV&I#UUR+eb5tSMg<HR5mpV!]=oIRGgeS4AjFjO9&i?3NP,29]XeJ]@c/)UW<#[G/GNYcZ"/ZLR9.P%5[4QZ+.
%Ni*::-'#YB>.Ygmb0;>_:7$j17j^[#T:.]a'PeK'2M^9CKAsW3$#I%*Ea[2NaEs!?Q6WSggbE`-Epll_E_HtAgi;YChOb1fJ'0QH
%1<LUJ(VHL@=d!hdXBs2<Q$Dd.cX+d#m5QV<Ku(3D+__o0$p3g6e%f.50sut[q)b1E1i/?o%P%pAQ((`?&[k>f^NSB+T$0H<*8&49
%"K[,TmqUM95URq,12+2>,YHP?K9^eE%',t*Fi!gOBdr>M/E2lh@[=WCDh>Z(<gTZ5/$U#`m.btLjlUP^\0pb_6>>^ID*3R8*P!=s
%ni2\SaBf9'(M:GB,OWuCT:BR@APmU#G$_q(,tASF"M%IiY2-YmUu&pn@2le;s7>2ndJ"3C(+RdXZY7&-n).S%iXTS2M31s4"UFCH
%0)o$h04-R012OYWq_AfG:8(q4\p2kP9WPq8ThjN=&5jq"K\+S8H"n9_X_p9ZMsIN'mSa[IABG;^a:sP2<4<MjpFRfq\&"K!Wd1jQ
%Q`Fi:HMlu9.%p#@G.oCoVi<oWFp6Xe9aC"S/22%W5M[6e]\2XMGA4r7KfIZn*W#I7]lLi*M_f:%dl4X:2ll1Ic<(65XmdB&fTIkZ
%F=fJYs#SDJQ]A1q%*Qb'A<rB8H1]^a^tSY8@Ii^<W`$l(iTI&sP0C/u9]]jr*Z`:MF`%O1c!dD*O>M`U7#E=TB.HQ/Gpg2FpfYk6
%Fm$<q]GUb8U[Qn$U_p;P]&VSY&]&Y"\S3!0Ju`Zjl7-#E<,Epronld"rcOD9h0u+legashN-1OB1A&jjd9&cL\#g`uOOdY*2-DW@
%D<CJ1$LToT2tdg?`+$!3%\UqKPU7=i*LYS+*C_Iae@dS@e;\1r2o0NEQKqYSHVcX"l*L;l$2i$PlYNr2j)A]/.6Y0G!\q=M@%c\K
%%"/9@TO:P6hI"U@!$8`!9>>_)$E&uZj3Eqgms`spb>56]]:8'>2ccYfP_0,epMW.m6huT,hCSi(Q.5Me"4S]'2;:RU`k(h9CZ)5A
%g7?bIN@b;0I.=Ya>I>`,"#kLHA+M#.RKCs&Y&?1))h3c%q<eYi\k/tY9:_;GMQ9T#/'Ebf+d.B[EcpA6&\0MNXoUI+jFE5!];sGP
%-$,?iaPJsNa!pr&i5__7;_'u67s/IMb"bHJ=!>I5@!F?c.8TpG]3`d0?8<i,UNaDA.pm+njH&*hEot=PmJ%!2]q"i0'Fk&h]3]Mh
%O+\OD_q`Zl[1@p.)?GS/'fKA!"d=e(Q%_!oS>cge8/bGC9]s)`)W!h&+:[+7p63T#Ud8PNP=bu,\DC:25+,*s#gQp>O5`9^o17/:
%3KGNFTQNZcq)sf'1od$J5*,"H=j`s])Vo[dk?Vug&Y@$f*b?:'Yu$``rH9%5&q.,?oA\OAQ6do3X;u`=kAaj!INJB3o]KM!kODW&
%Rk=fL'\jL(Sg@g2"\2*]A3jbcY`X]D,$(,aP(L\S4J@BO6br)#b7_A[CKk%;L1OWNs*W]sqi83uWTog;#S</-G^'@$:rn""[su0Y
%52*!N>Zm<O*Of@)g`>&EY3RtZf+fOTglESZ"[GL-cLA#!c<?oWE,AaL-Ze]CGO@+$NE`//:2X[PSa"i.l1a5/:K,?bO1h(c"g<Om
%.o<JhC54lZh5D[TSMtW`DIG::B2c&Rq;8UQV7tXZFuKt\kP8_=]NlHQ:DM%i^?4M0oA,Fs;#5WU:3n"ZJA`hAX)&e&KA8t"<G**)
%qJPWRXm`a5iVJQN_o5.[]Wgh-60UHsA#in)er:&b,MRF3her=?V_bcD3ks_87ok]6X@Kbg3PXhP?!XYB];t1D>p@2%U9khS'u_29
%)A"5`M8+/2;RE@cQ&C4TO1>]WTW(B#j'9i7qW5c_Z>rg-Q1rX94a]3+P[0Ji'0:G#8RR#GlDEAh4]t(K/`\b+9j9)B&2eSQUTQGi
%;jR"938.R\BjrKlZ*YQH>JZ2@mFf2/Z(')CZOotH1pQJu4b8Xf5`Y^JE]eIe@KITOqTa?sm<LYWGou?0`Gn<\qHe+s[HD]D\4Zg5
%?U<!3!'FWM:445"8Jc<.EsPTc=+1@\hnJ5AX,=Ce;0$$%F.(^I.p^;9T/59KEnha$RYmAB;"=Y!/tW0,Bg_>M_qV4[D):$]BR?n>
%TBkK4=uL^>g>5HT/8'CWiTlK99i0:CP.\"Lr!1B_j]&HUCMY2FZUCmV[8tscJunDGXj\;IQpMf0.iu,V%p^C9/JIU02tqo/LeQHm
%\b?:lQLj%T$;_Zq]&?>e4QsDNO%U,6GFQhj=FFh3CYRJ;db`@N&HU&OIbYt-Z<O)4@k!bHFNY\cB,^5JkjIHUVjAOL,Db5n%G[-,
%cd_`F!EXGJI,3I4Y](5eR@^pH.<[C^bQ^(IcdG2gko$F9girCF'_c=WPfSgWRMA!KF"j(n"Xq]a0F1L0cN*'>JFX]\j_("V//+Xe
%ij2=k9d]jV!Qon?p\aS7<Q/g\`V\h[YDM/3J&;M*r=$DR,%;PQN$!@S06o[$$"p/D9)'>piJ9Ro;6Vb]Cp5kIs$:KD/eWBWofhS[
%99X^p9/#AjIE:Llo&RENGoq'PIr\5+7IJ9?=Z<@\,pao1/RENm]C;0!,uUAnDXTUEro]oG]t+)sh>[56VglNVg\gq)#5/o:qi$)S
%`kXcJ@%T0XcPY;I%.#bSp=ZqRN-BZ8M9dsI=XH=B@%Rc.PErD%oBPH+?9`f4k1Rpr^\D8]e`YgPIe9,upq*36qq[GpDf/ps'JFq8
%_m`G@jjbk@nGTOPkL3EC^LnpbHkl5cG;6M+-M"GMfj3\FSlEAm[Jo?MJ&Qned!o/CipMkWdsqB^o(W/9XacURf_p-jci7e6IIih-
%rLR5FoOmhYmp;[_c3&:*g,+jLqpjgUpG?f,ne1usO4USm*1oBBoBb#N-a3QYqmgT?nrNZLYFb33HMpM&TW_/K4F?\bp"0'g:]DWp
%q"5`#4hpslpU<rUr+u*<\DmP,s,E*>Da3GkNr%kPm5pK/jrbMad^$bskWXmOB18$gV5&K6DYiB,]uRQ#A#NI;.=()C\4X;4l_RF\
%5RAsc!.91Nab790:b(dY]+R,g#']/qdo2bRp:I5KjWY_1.[soZ;3koGG@$H>aH^67m6[jTW,11uR'0*iBm7@hBQf<h>&H"bTI)\(
%>fft=dLrbE1VC*UWu?#BQ>e-6Lt>9g+'eUeDr9Q>kQnp:%<3+!q/m'H;(UJXO*Y!@$CG/E?NospG%dftll%j4Woq-Z[9D<b!&=K%
%IT<Dnm:sHWCqP$.rO8h1^*DXCE!<D8?,`3Xp?VWV&tQD1nLAnX@?`C&+eo&Z]_#XEb+`[ui+pWO$S-\ncmic9Vo_F^nnYeLF0S8g
%]QRQT!aa`V?RO06o$-`s)5kRqam4aV8#4u']),+3fh9pBD>)s:aEd>_98spbN&M6p!?sciAn&-65!g[NQ1'pCY@=SX"9].Z=QCK6
%("&%R1HNH+8KNUJ2UqCl(X!(k/`K4g)2fnOC%:b?c?_RFQd^OuLVLndd*3VQ;d(@p\&D4SJm5?/d>pr\Q"]Zac$H@Je,ge)Mi7[?
%b$qi@fuJQ@'9SJmK'"9G\-o-=M;EB&@3>:5<!"['OE\<3>,AD)H_e`G`!<4TU[-tCXk0V$A?d1MQoB8#PBDU3c".cJ$EBY!3AOJ0
%H0b-6g.#V&Ol^L/Ias_YC`1[h`LX:u:I0ZG5dk7@b2&5u9k7#?(G0<VD)B=+hS21q:hI'lkdM+7b'?+n?hoG3@?,ZSqpm#jBiiEd
%2TPVn(A+ZOM%$)CGA<ECPR3ZFcKobe9);#g>c)Z8,(]NubV#<59dLgh"`AjU%A[8-1(aM:qN)C+J5WXM8k7"$GYopDa3k;77[j:@
%Qld/54=O@?,k),6-,n<b+r[ai+6RYZ`%mIk^nifZ@Xq]8U4\u"?>$/t&Hdir'.#DV7$Z&^=*)ge8]1\&&?):u7;Nk6L&<FsWje.V
%UgNA*+'^;!>rY)EeU^gD+qZ-+K>^Q@ed^'59`8'J>1/fofV1XMjq2H'Kj@)B@sSlP)DS_"9g)f[5?+(mFP7_(r#RGqCfFEH9@+I%
%$$oA<nf5?m2k+,['F]fHK!4C>aqb5>1mLK)Q`^?QMoLFiQbSd#0,$5%V([EOTag&eCoO/7ouk/@VC0N1Lq+r^@YbibGBm;*fs=+J
%TuJCUAGMKr$<nrY*Q!]5kWs2b.i1/C1:^AM!t6tC8ElJ`(%Re;Jlb2qG'JuX(<>j-+i_2`Dh&!!/QGigIUtDhJVB>T()\kqA"66%
%dR7J:2IumMm%#!$TKU)IZ@YB/-;6pg+\p,jrWLVbrT2C2+a>cY7CnC@,2f0CP'jTk@YmF0Hs`4Tq&Zf=jV_28$LSb87T@#iAgp4$
%*<B=SO3Zs+G.S0+%Ce7S`MEg8\&EZZB4S)r1?q[4V'>#Aa!/hXQ&cKo=Ct=E3$_asm@a\5?'M!f.7:26(#ZqLrZ+BRfM]!<TLH8o
%["pF1R=f(.!`1Qu*<gTuX'In2EYq9<-PN@V78%]@j@qBtR._S*A2m!rpuP/3B3EQ;`*ehBB`!<2EH*?o,a("*ZF,K$)]^;i?0l=H
%*-:h:p]t1EUgG#c7o!2p`->,b9-&<pp(J.;LOE.`jj?s<D"FB0>/5@(>KF.>Zs\%D"poTX`Y^)Gb@f$G&SHAkQ56F7XBd1aCM`Oa
%dY1921gs`T1b[jdmEh9lYfrSnE<IT#i*hI<oj_tVIHbP<p:aO.86R/hbE;sED(FF_"^2RRQFD(plak(^?!>+n*7mA3m%bpBq#XJi
%&[Mpu,&=*X0&e6N#@n5FAgY5"_+nuK3AAX<L^[!#Dh-4IZ#.-OFH#q)g^a'N0T`][>n,iBb.3R.f4g'R>p:p9.Dp@UfKc$</?;BE
%_U=qjT@ge9a>o31!4u8q:UE1LO._CYAeDfUcjc6K,6Q1OJRLS8X=Z-D@J%LDk`t_rDBm>MHooqJ[Ug&Y.l#jj<R(<?+8^nkMJeZ`
%Q`f9q<%*.ir^FgQ,u;-+Q%BdTG.<!g/E&U?mmW[V.4MX8Rs=>k$lO)R4)E"riMk2jV(71aeTu0g`+:pYmOLrjGPIQ;ON=1[l7a=\
%ZJac'3ks#QX)G@O_h-`5A::FhK?B@:=ENY$H[#kEA'/f00[iFee^t\7/ik*7/HaNk?UZN?U<@@dAMk3D8E@t!JHhkfdTEqUA#i:@
%S5uj`'qN2cLXI@bV/hTP8Q*1'L/TA@EE#edY!u('=pfQ*f7gsbO,t.2lf4[==',%*=B70fAVem,a\L*sYBh9,7+\-LiJGBDWj9iH
%c)$*X-(^>.@ZkfUj<Vi(7A%bK3B+N2dV4[m2<E@]._W5UV+38U]Z?GJLe;6:$+@3o`HRY=`l'Oa>b'$L#dXiH&d=SsVt'5=F?YN;
%[EDrndDEq#_p%(Rc8YWD+pB*&C/."*HIjf][Xm^g/t1dd>gXm\"u2[q:gbV?Xq"Hb@!1dm&"1[W)iA`9Mdf8<Z?5aL7l0cW^1Bmh
%:4u%`:R;g>>3HtP3(.W-LM#!rOl+:P7$.j7%s"Z'&f_[j#g_580'=,@d-1@InUc6\"fD9hA&IdP`:Bm5#j!jpH5[Z]3S[<dBs_ed
%qqh#BH/YC`__6K8"a4dK8&q7hrpe/jYFiN+G5'Jarqbm.+("mEeXIpGq&HnH'Wlls2]>68H*T%L"W/B#g'o7"+tSTBT,Asm?SNUq
%4Cqc\X1C-s@HWIp-'"IP7Y5*%O^B5h16@4P!!^s%NlnVB2/.0^\aXR:r[QJZfGcS#`5HTDV.)(^3X6OG`7(lj6j'JsiPgE3e5X<m
%(33WdAc&$j^.\L\5CLtlD*TDMe@@'tW`'Zi=\+acZ<aN^>ms6?+B7SKFfaM>]]a-\b(O`<&7D3)Q`G0t=&\ADg9>TCB`>`5b&UQ(
%-]5Ee)2^d<BTe'B9a'5Yi\#6PZOb2gW&9]G?o[.!)*B,QiW-lR-u`(XKKZh\'C?,3$JRpl@U4WS&/.,X$_0/cM/I1W[8a#)i6.,O
%A-,>HA\O%DS(Y<n?:1fg/irJX$J%5MMbAohZ);19TWeDa*%_.6r9t6M$nk53L^'G/]bsdW"VSUDnPm:7`-b`pXZV$F.c9"U@Ia`s
%U=u>RY't,(W0:RAYE>q)fTu/8ad??hE*8].<Jp#$,sa!>aYC-RF7tX?'Pg;5Po.#U"K]:5<gZ\6$*;"J4Iq(M"ku@jDj\b0?$.\0
%-LW[:^lZd`n`#Kb(bW$)BN]X@TIg\^)cW9EHBhflCY\tW_H<SFP4YH+8>ihN\B)ao(6%I:^ug0d!\GH6J/0kk,$TT)THTTJl-SeT
%X7I/B\AqG^p]Lda["p@]CVL\eLpHNueXqn3b2Cf4WW/p#V.28T\cuA0]0+7,6`dCI[<$jPMXd4d0!"QKJ0mFbnmM0JmMq,kDM2bO
%Z#1.MfV(_\WB@T(Ynd0+a1ggAb\PVN11,s185#i^<;)]IZH0p$nPB:\X#cVV62YV7QJPF4%M'@HbRcH$Y,mu\H5K4e8[Qj+YY,YZ
%%\=hi<Q9k2=+F"t(/0SK>JE88e!)23$`83'3&X9HPqeF3ONGG/8Tb$&`,kL]J[,@(NbC=Q%<_fb>uWr<%I8-k-c?L+X*@D'j$k?2
%#,9,C\.ctM99[3Yp(j`!=ie72L*GD(UZ:=1aJtTEZ>$9\]H<4kRRMr+$pAAq9G:t[ZW^ra$mYmXCP,bW(fe4?5:n*UZe0][eA16i
%]3SX)]b`V2-ch_Nm[7+?-tX@r_N-7NK9J$d/%W@V1P#@9+K!0p#<a1]F]g1u;FlO1M.%jq$-/m_(hA.(bY0_p`G#keY;05sq^<js
%/AGja?]!&^'+b)<VgMusl$t`--P0=H2=e$#=](Cu]dgD9E0D.IDmiO$$'XYNNM](;FGNjJP8RaY]LR7!f]"[OU7MY_ibcYlmLP!p
%+KCf-blRjn(@asZXR$/W)4(C5a"Z$t!.=&jq$7hXn3nR\hsP]F]4B3NW(?T)*E6`'(ffLI<AfM++RsUqf-=I&j6`X&&n?Nb_`eHA
%.>S\cUTEZbH)X6'3&s!Af/#]a_9qlXMe%L)pfk\DW%0%L*3\E']3m<Z;P5F`"1H0FkO=:Z<VRF*>&(LT9AVcAW:PW0718Sqi,PK+
%jkjAF4IOT3[+g;k`koXLPg:-D"$\hdPnA)=Yf5Wid3;>c9f5e2np;Q?J@/qY7QNmjQOt%U@J"k%_aPPZRbo<u$Co7ZS>F!IO:)kF
%!;"`;N<HkbYcb'dd$q?=(ds=;&Y2OEond/Nk*3GSJTVqr5f0n)do'o?R^e7,#HY1NO`"=u5/E-%YXbCHJbEkPU6Ql[K?\d\%?BS,
%pn3)FhFhI6]OnO+,'H7G3P#,c]H%&F1+uqng\!4].1p+UfVcTEkq,\$QXG,R1I>:/9Z@2cieF.r)#tD.CZG(;k(L*<27`j-(JBAh
%N8g^:ZbipSAMu"6<u.!$6o>ifO:S'8:NV8Y]$:mY[Cr1#r`qtt]R0qcO>'O>a)^-6F;b/&`hGNC/qrTs,Sm=C4Pg2PQ<"sUD\sC%
%0$AUW<0HF#1@ESO[B(PpL1hp#Y/Zm,#TF3oa<gtQk]1r%P;'@YbR(9T=t8Zd\6C']X,'3!71Q:LMaF$oX1a+5GaHJ^>G<;WN'\]S
%U=-U%*q(]GZ*B"V"CN2a*BYqX4;']RT=CKP)4lB_Hl1'9=J'E'8edQZ@.*X7ec>qJ5pqs#"4=?GUaI@F$_Yk"!Gld;$RX#/HGF*J
%kU/kK!a7-dY%]Yi$E6lU*W#=N;Hu&3-YeU@M-+Mad7[@0Ts$iQrX,Ds"Zto*4D]_1n.i80Y^dlI*!*3!&.0sP^h\I[ag]>o=f/YV
%I4/>O@hB:iRC-]>UM!g:m3>P"jOb30@u_Zc#+3TH/gp8V(B>*hR)EGf,*u_h*2R=XNcbDJUNRP`NXA3./f'3M`_N8?-7otk$qA=5
%>mc4$J.mhlMsLgd3^ieoAmLLRi&V,KYSbag!$V,L1b;Ahf;\n[dD:VScNJ#d)W0Jg3\:\*\jSBKg`Q&t(kU0YcCe8f92Hm<qHCn<
%)q'g);0#2R&;+'06B#+ie"BSNN5JaD/?/4&,&;0UhNnWe&(+^0(1M3>dD`mZaGG-lj;ht(H[Sg022q:N.uRA;U+8)J"2RV(QYM;'
%D=q;P#XTm'Mr?/*rAgLG,m*QUE)*.*<KQLN!'r.Q`P<6Hf:ZUTi$Uo\@+H?Eml0Tt6Bn;rV!(EO`(2$^RPc"KL6HJfJ_cZca.Y5]
%:Z/WrKT,F'7'Fo;J9Trm*W]<nhB,(9hkPaCR"^pu0=lE\7U;Z6&8t?4.3ZE_R64Y@/Vp=Uek9k7j;qC>)M/H0$a;Kk=%+Tr?&C<?
%9u.n?f4Vl>((k%1Qg[f9>)sH30\1dAV&6#LA\UH^/XT#f4mm^`Vsi3G_+5Ye[k3OQ(D31]UnhSLIDd&O3c6`c4,Op#&f,N=M(,<d
%&@-;sU-XH43qPj"D'H>FE$GVZ"R965Dd`U$m&<E(-B_&]DOO\c%+,;_V7?lLI<+sc,:lY/K7oZ.haDNXP0XEo.9,SJK*<0%;,r@0
%)+]>K=s>;_Zk1^69*98.<%!tSDG4NX'IuCW0Ofjk8r=0'2<'5O)ZCWEQ\P8S$oPW-7IrZ32GoW[d5/If@3<-q[ad[&etDJgSWd6E
%Z9.QY`!ha*&Rgd;/e3o0;FlP<D,(IUZhPg1VZlK7]S@ii$8\(f@1_u0b?Pr&KpV8dWbL&cM_2Lcab8+61hVWQ^SsSj7q3O@@Vj0l
%M:]PQ%XM,3YOjX2FKem+7gqTbFrgNNBP+.,^imf+*FukGK(idLiTT"+"Xjs&9E;W1lOX+bbV__%O=,cK>LQg7-PgV<-Q/&Z#fr!/
%(mehcp'BY8R(p^U>-kr!F[5gW##q7LJN'_`Oo?l:A#c[i@UF4O0D7efAYs5Q9EeNB!F=V!24rjV`e$<8KVFe#!:d$n&fbe[Bq2SA
%fgQ$M^ZnkT_Dm6#!3)ZY&`@78(YL05"uN#\l!=Et=r3BUcX^LC-nC)RK/="ra_2;"YkV)%'GH8+@C6@LdjPf<[_+]S`jf##_s(bC
%&UY18BJO%M7i!#FE;)I^<WR-<3AN&X5RX"s(s#74&Xt`M7)td*@VFI:;[,$V:1?_bq,!,rnIXOCpi9gb##05.<X[bK/T;]*7Afj)
%?[,13'2aq\9UO>q6sN!Ycd7#%RI)"`]e&O1A9,^U)RKi^f9niH'/Fas'K-**%_5MW7O'+SRW8Ih[s6WFVN=2eXFOPBJCJ?jF>;?!
%NQ#A*BlX3Bd1AiH,NNPDFi96XM83f_:V[-Eq?u>-+``"\KGXp^#',Ej5;mRN1XS+.6"iQZC*)4V51OFTL8`>M<A.OTOV(R9nnY[E
%MoYX$rMtK"BgLEMLQ[OLH=>tJ@=h(aUnY[gE@Eu6<#!8:/+Wt?/@12K$"AMq:_rh:9qB5L_-M;VRer>SBjO\m(!*]0cIW7%5B&Se
%)pfKYLF[FbZDQbP-4X!4"\&HJI)1B2%)OtDDC@[m")*ETQsgE]6T+cP0S1&MJ1TgtAm<r[G,L'aHNepr3N$H,nXW7<3tohi70OdJ
%+;BBV/+es3b@F++U@Ts>0_fA6,;g^:'1.H'._nF:K4;ZO"-459d*Rm50\TV0KuHCuek=4>+E,K*6Y<@a0G;'nKTBfR4VJh`eHW.T
%EJ1OYli=E61nC=2>p9K0Pc:N@=F@p.(1J"TkVQ[el&,L.o/gKF!C1;o.5=1l0PF=>'<?a4#@[#d&OriJ$cC$+DaqAp+ZU\A80Qr<
%@uHsm[HKLDJ[n1%b\G]EOUY/!U+$g7a@m957L%HFVf07Fd3J/e$Tc!Qk$_dC&Z4N`PHI530/4IKSs0=2iLK1IO%#bMZ1NAH=##*<
%lJufMK!]24%GmB<.pBI:Ng65.?>,?"?dQ#f3R,Zs:rCf(KK\:.[hZOhRhrXI.2!M!)W89`5fC2U)RCj[=7p0&^%l*n/<7UT-04k-
%S^6!;N5+Y=n20p64:?6B*_Nc!rTgdRPibFF)MT1HTh(7HBf[OWq?hrP;,kYN+g?Wc2Niqd9rcqW<0CBe5bMl;Sfo]9BE3a4lt[kN
%!H(e7g*:N$"uRQsb"S)%@!P*<-IMsXPN(=N'9U_*2!H;`["A4P+:<lq;0!eV.[*Z)P3I4ll'pmuHHjQ`NU2t4-`S&D2%mDNA+/nU
%%g2GJ@"NbRX:@MB.MXfRQ@O,Vf\^RT.YTD\N7SUIV!WnJ!cjlG<Fh#.%PT!WU&mOZ1a.$U.6q*f%2-2Ug8O8,%/0S$X:UP-(DNP"
%kQ3$e/XA009VARM!iP;"8-shJ_VWbs%hXH:O`h*I,Zg]m,f".O__IVN6`?A]K6Vs@+c4=M=:,peOtfV(^m5rS>"+QA6;lV@*u8XD
%)i/$YV[q7<+_](3`4(W#=gGsH/Tu>k%9!4P7d6)=2ULuU"0\,)fH<O&$#c5l1rZt7b0175!`-m36kg`H3MB!F5i1!l?-IG%&i)]g
%oGUnpn/$q07D2Z)&9h5;qT/=>CBX2[AQ7c&(<[i</G$R4A,tjA,8^mOKGI9)%*/X(Yu(:M%XrSjd#Ck_YgLDD`"Pr\i-Ng,&8rBd
%F;0,PJe#C,QGB4QV9XHN<DR^?B9Id.F$a:2jrV.TGH&ghQ%o?e69m0(+cDT`"=(a`)8#$l,p^7Q[Y'#?9tO>#3,?s'\;GEo<5j_+
%fLNLR]h4YDERA3Lo1?P8dH&eoD"T]]2TJ.LM5UOWFdS#:4sHXuY@p^d%<q$73.`+5%=/N.e<>S"N[n$%d*Nm@8.J>Z2p$As71_(b
%L'Nc-9F$'\1e@PTg]&nE,GW;GR,8iRK(dVh(XdXQKJ.XYlK=&d]c^piI@2p_3hmSnb#([#QK+?:LcZ><b0]"'Y)[8^,:/V0Ob9@/
%[OE^VSp&:MHQDA.21&M1Z-bF%>R@VGlf<SB*Io@M>0RikQLK`2cpZc3IIDXLVsi-E_+5Ye\$KnH7CnB7OZ:$J7OfJ&$#q7N=9p<Y
%JX\VuS`<rPbA:i)9LFfEWp,TS22(+g)<?oNN&WFH.RjIeZ?cl_3gVY`RH-,4VoWM+8*R:/,(dh=.hcTIP'b3[S$&lLYB.fEhmmK:
%]139]YW#T"39$N$CUqkT/'K#.70D`5;Q9jf;kjRgNu"fpLo/>THeKg<6/)Io:(U8bK*i#a<X(\5Z?V%iWB\N.C-#nsqLDl?RF72H
%Q:6^*9&s?JOKg*-R@CLl1q#GEU(A$3/He101C'FmH*AJb]6$n`MKpj<Z(aR#17en*$8""D4[1e5o4TCtU/*8_I_6\P&p>=ZID>'N
%a'(DYK:IZL@j;">bA6f@jG,$`V5ZQ58@F-IiDI"LHN#2q8FsZD;'FA>!`C=pTbFiM#F3L;K'^]ZJV276O_i!1i!&Q^LpdJ!\R>/S
%1gl(ujr'4m1=0J:1KAFB^.LfNT`oTR>He[3"bk*8@G[/QRPdS#UBNp0,$H$c*"<\!c*1c78)eGm``)!d&.fOS>4"TU,AQ86&/ML.
%jih7nWC+-^\Y2I48(It$!Y*@L5f6c\KhNo>?c'n#RmG1rcJ!d_7I,%T#*jHi4Y$cjeF\A)EeZ5t#SCkD4G@9qs6p$%[_b[uJ8:Q%
%0D8pgH7V<G\>UH<?60s!JrbIuQn45?0n<,6/49X?k/&X2@bp&nBI3rK)3iXpY`bF3ZY6n;81E=*`tkPRfp.8)2d-U,?I<.YT.SC9
%H9<X6Ko?Z;GbYEWR0pk@4gq#=12<jncbk=#;Nm]nl8k_gA_?s+#2]US^&hf./aF*o[!"6p'9(.k>^N-\GQr6Ld)'mIT<6>b0(l<8
%'8<;!,4;9:;6(B"(?.tFk1?t_pe\I5iI%DL$<a%s!6/oDE>-!.;Pf^R:o*ei,rB8<c'm7U9]5tZ@D5\t@g+IN?G2L:Dcu[i#b,;O
%J;/R\67dVpU'$YJ5V<EISoY3e>1O?i_o-@Mi7:FZRY"FB`VI3tMW9hGeaP>:d1SWg1K"+lO<RXdo&g$n,"%JY3N,:jdNF'q]JrC0
%n\-QE7fM16f7uEm?&hB$[W76=-NQV0`<(2.Ue@TXjUo^W=q4PbWDR-;cr>P)TJ'"nMrqrc\9(o3:S:W&j%AQ&MB2VE3)@G=7Op:O
%9!g]9\;Kd,R'K9(/N,0m5t`eHW,Afl:qeY?goCJ\=Qs&=)S.$&!a^ss*e48[`bnr=j.licMZj28#QC9k<A-bbb6h'5(b&Lq+cCb7
%a*UOcLF*Oi,m`7ZQG/"6,pu@)#:Rh%7]8q4=QNn+a[jgb9-MGkmBu815Vk/>$W8$d>*h@#!Lc=.W%5>E@O`!$e:L6"=;4-dc.!$a
%HNhF/RkFOT.hpio3=e@J';:W['q0<7)!g,C2ilW#qdJG4G`.^0OXutE5d(>#feUj6L<;n,+HM>sUP1T*"3bp:DJ(bG*K[VKK%rU&
%P6hk[,3+7)@\oiN*N9O%i>EF)l94).p_q*6[*)NA$Q!7uKlk\gVYL?;JTD\41Y1Yg;p6lWRR6d+W>a,])]3DtN);;\X`lctk7V=?
%<_ZM&RMfku!WY1E,fKYLmHbSl;?sGM"Qf\a\sOeeJr/E;(<-tQ#,X9'H.qe/HMlbmR*ZF9AZl3C7:_A?'HIG1;I(q%+Mr\H9UErf
%5)G"l`uF'CA1VqPr:nd<CP&?>[HLu'2IQB5r'c5F9bfr72F6kF.K_Nukh\Y.QIu?!RM@Ph[,3+-PKE-D=.keHXf@L@H<:=3;GN8f
%0rBQ+&4k%H>*@u"lN1';/.4&QTZESY_po"FqgdrC!n!8LKnCUY*kh\Q6\#HdcpX[i&ttBe)Mmp&V-IYEEsa*9J!krkLj.9>`4$l,
%eA@bRo`gl8a$9VBA*'+@#HcL5VGgo_@<S)N=VWG/`Lo"s#b!RC2(C@I$QsH?HtiF#G%h*oV!GI[=Nn'<)(uOa]GZ>*T!aj$Sn^PY
%b%R[0N?04XKM:&&p4RQo;LStA1<`\>[c$+'RN$qa%!eOsF-j.LUPb3=$;5pe[>!UKWjC0io8apcB9e+IqngEn[?V;L2HgJ/Dm];H
%MG@)r&.eMhP6oT*U30eD$Eu:n/CL27EV+TH$pE'fA>QY&+-<''!8(3[AIJr9//m3ZM"`fr`JBT[kY3VSQm=XE^ib/^J.Dfd!+'H#
%0dH),'0g)lZ+!'\]P,:%82=MMe=^Hfk0gVeN*=l8^_G.iAh>@Bkdsi3&unDF.0;#5E:hDDeb1-A*0lLsiQI[E0X_2X)_lW_#\QJC
%di]l=1qafL!,Hrle((ea,:cfH#aet$)A4Ueq@4_=/l8>d.OW[:r[CJg0;m9Z?Gnh;k^BH@3Mnjs^sEf!U+tgIbsXl$,O)9@j)6p2
%]l.<V^ndgMbK5?<-^+>aa_%+"Lc^;&)[F5Vea/!VYMj;"6aZ=0cZ#gee2dWMp4mjq.JaJ3iDP>-]fIq.+hQRd0E(O6qDP/6rU4pu
%bq?4WrUTihJ,SH]bHDG[^AH[:YPpr@VI-ubottuse'"*Urq<tY-Z<n;q-"h[rq*Yrl-FO&r1EcM"_st0XMR?L3Yb@?lJ]M)ej,i^
%0mA<4mM0JpZ14\2!Mq"6;CBG6XEYUP)9r4L=p,@W[Hp9po.EQ^7VJVTNAbdr66R-ZR\>toBg%*$3J/5EjBU&)%E`7hN7&64].oSH
%:nqc1#%!MlqaWdUAJOM[:.+(J+/<WfnS[\,N^pF)M-iPd$IjZ.QN(_M+CeM!;aLJ31up)S=^1""@>5ro<Gs-dUFdB;\*#X<i36a!
%YNrBG,i-FRhOXt97Z3^kYMY)!<&E+OYH(i)b1<Mo2O!B6\c>.p9)BFmW9=4D'Li0cQtc,mB++!:@k&^!CF"$)BN)ng+4X)=rZoL9
%g_[7YY`DXo_6c09\AKSEqNTCPb]KP&N>>5\$5NbDE<2hmA,6sL:>AF"H)EO>)3>dEg6iP3]N3nl1=YA'bH]\2=r=@hLC0DFd%[cs
%Bj%2U":>1F0Rnd19.7C<UP4R$!4t"=S&iJ>*P)=)V#_HqN5,mVNiXWLA*-kY"U?koMR0+`88g:5)MDWQk2+K4@R17)GYg2i]oEHm
%MY%f(rCE)?$Q2\J?-kc*NBHf;.WfO4e&^BD/`3(+=(B@.=V1EE.9O8Ilj7pm^oS@V7YM-.]q-Z9Mq3@.g2!&V8C:X,g'(uZ>h:Jm
%BLn<9g$AP&RjP]0V)__a#,o):IM;,MN/S<"B-ScfH*B9Uh7/^KV.Wd5K2@(RXP:&s@VW@sG):/TF8DCFfin0%(9D^J)OR7W"GYFl
%jB7eiWX3%_7HO$#C(,hf>W+0"%4uui2E.`a@%nUtNgre^nr$=oW*/#k75%)T/G/LZ,/RQK=l'RPH#$%q[>8)phi&E[AlnP0eHh0t
%hkKaj`iNEOp8'o_[$Xbu+%E;HQE9R8]p]_%O,\-/?4&n-]U[J@N:"M+,\3mc\Fc4o&mQ]a[pa\%=u,Gj$mE<f!7]=^cI#ihpWs"%
%C,Fun'G1HIP#ck$&.e:9n1'8S7*9s"d;=t2ajT7W!ZH/X7I*80"I=*4-6DC*Xu2a-T+Zc'BfmDTMRF3NeY^6B(/<F6QB>pK6IBAp
%lg2.t23>tn:"0ZO@()kI"OIBA7m4pi?o4"*N&(dC;'[`b;s2h'\n]V2R]1=lQ6Rfi)(L<edQfX?(*XMT>cbo$W_>56e]IUJ+VN.j
%",I!T=:U6YI@4=U8-!4+IN0=Fbq&:mCDq'U/;!tk%h&4D'sm[A[)bdPoo9fq"95g@S[e5KV5Rn_P<*F=UVlF"7i"GXBQ,-[qEm'd
%/p(8`MWctj?!rgLM!VF1&LlTA!VrU\bfqRP7s#AdjGBO5cj>6.\D#'-.NFbqQ']^VW*/VggdT+O5ln$>-o3ec_*c;NHt6-mJ0c51
%PGPJYRC`s>r#cA\Mq2^,>nQTAki0bEMP.@0857EMe5?Fo49M76[*EY9PS<$9q)hONeah\k1;9#%NP`'6h0<eP%H-!gYEPs8)kN'b
%^eA2f0s@7o?c^-AK,G%V(MLN>&QqnNi"&)!1!Gs!HtX*u/5i_]$92"=V]D*lLaA3,iFF-D$>LOH8RD$R)Aj[I[jm,`B.H+RX=fj5
%9j&9HSC*F/a0K;93'33e7H[\S&s+MmHT9MX9aZtC0ldRBVfnCZ@)XUOJ6#sI^tqO#1DdH6#jK0W!2]fo><d%/'GH"__*g]oX^0q^
%n@k>'$D>\SLC1l@J5eZ9_sfCR/H]!R9Np4bF-Z)[JDuRANX_X*a;T7Bf7@!GQ9c3#=`08H/-9*bAn-XU%Ff>>0`m22QqCiXaiaaN
%QunmQ-4;O%;%_HlRuc[0JQo'4/Z&0:#8O(@(1mK`ng*P%$soF&jksZ;jrCW!'oN-#%r$csbHU(RWI%j"Ee;"5ab0i-2enesng*N4
%8R\mZ].rf8iTVAmIpbqPPpF))I,W#I@^a2V%k0%\L=-HdX,#LI9\58OrMC4pG\O&#jh.A-;MMJ0>+4**D[/r?766[oWWZ=6VaQ4U
%6(nu!#$Q=+CV><hDjZKSR0DKMP\=dBM"oJs+]R/]80pO&_JI,aWDo"VA<(mH.BB*KM8pd$MK5'!I+SAk88Ul4Q+Xl94TYmoff]i=
%5U6S'7"'k==]r5R.9nrb&.E(n]a]1>DTn'`P@O[XeTKMsa<hJc%&;3!D1r5-i1/eY=q-KYJM?3Hi^k]sG"EA"J8[./(LSjN[*ASn
%RVH2'q4g7<IbBib0e/"#BiD**hJB_kj)KU4SH12L$Tfm\RT\>-:DpD&Se=%%jNC(K`5G>/Aq81%-Amsh"<K8,8peqc0I<I8?M+HS
%oJ0)2<%@?]k3kW*5.EY6TeDd=Yi@F>?Z`@$!GjDqF'4?a,H#*0O?D*TbA7r]cuL"S)3+p>%iZK$<:KLb^hP09NTkSuHd\odL7%T:
%=Nf,spnG$`?&;F0@#kPc!U1<Y(!]&5ds'p2[3G&!;jj9f(WRf=U1AUC[^6nE)LVBT/"(B1(p!/G5n"?-0]BC)Ke/Fb-B[(MF40>=
%C"3u3"D32hYugOWBq_6PRX6a_[@i3aaNe@1,o_+KVRm'6OKY*49!;c1aJ9lS/:nh&/L^%@;(EE\"Z#iUXS/Gn"VM/#l-/u>/"sa'
%`-,p4=VGO4rDr\*+_f`(5#Yr@,P2&e+7oK"(HGF@^s=gVl_NT&;"_B!fkbODQHEerZ))NETU?Nb/=,\;Wu*'N$B&9p"7rT@%TXQX
%Q[4B@aPY"-H[3.5i4Pg<QdcflIZ;bU<3SnK-tO:.Ho>:TJ-;IclUqK:!"ZI?k:J0A0cHGOUIg3ZN+2SH/Cf96o1n6mAjfh64>?i/
%AS`5<QHrTEa_#c'Sl#R!'kDjG#"NB8OJB]`d'ot1Egj27k:NX"6;)9U`ZqjDNO8(90:C1.+q7l+;FJd0@DQ-rljVaP2PhE=!S2KF
%a]VcQjJWi\:07eG`qLNEgju%h/t0/hi1#a#eZ"0:ncgOgU)to!2fL0J4XVAOeCeQ&d$#!-oMo">e1hJ5HMaM)HG]"s&-db$Mie3d
%+duR-5U$TslQHj8acFgcWG9!eJI*TrqS>^YAep1)IL'nVQrdC<T<?DnbISORMmEi9,?VW*1WMX3/K2;laV4I4Unqgh$X*fERXG6l
%,d5JP\4)iXWE<.^nQY>SMP4!S`MKG*4f$UPdScgIYbDI:P1i:f&8eNS8!MCEEg7Cl;SY(&V*o#A.59/T:>qea7Lipm]-9;U^<l6C
%VCeSZ5[o25^+;!`bDLr=eZ^8a/YItj+>b[@SYJsXPA"R.&Xl?C3]Xb'C3]fA7aPg<jnnO?YG#D]8IW[na2fa#:a;cG^S6FMRB@3N
%=YD@1RfmDYoQ-B_FA,g[Junqn4((T+BJd%:QRT&<N!!1;coFB\ejWV(>7pAi'&f=Q]o3`T560YQD&cI9Jqm+)TJIUU$1]o-q$DFH
%,m(!cb.9t/L1/&o/3JQ0Pkf;kJ3u4heO(lIW3%QeE2[12$(dGkJ:MC8l2s_H/t2`j0a/s&=5BSpk()F=abcC[Er/k%#bm]W^:<sC
%5WI:)AGfAjc7>,KA/MjTBQ;s^eQS7soJ]f&VtEcl3ou)/JVYk1EhM)A"`??8=u"!T_4^_T/@N\>MNLn=)6B`i&'XbK/d&3a.aLRD
%#DHDVH\$$.SW55b:I"6D3cPcpJX*RKeLRNC@KME&lugDcOEK9B?7WXQ'GmeQ_D<a7,^"-?oHt_#4p&t84Af@t=W`9&V%nPHrPG7P
%R^-L<BiY^F&k-TA#a?bGq5W!nr7FfpK\3+=^5k[JA>J'-\>'qh.>H<M8]%7el_3#^6nZ]cZUo]N+DNM9K5P!G$-^]g>):I9Ge3C^
%a]siA,+QBb?[1^*eHQ,GS.]"<=6S6LZ=Uin?NNM>NlP&*H>HhX`!\>`)P.*g.S&ke<o/8T_<i)1C'8Oilm#W8%!S$Un$(W`oK`'L
%,OWq;dY)U`J@UL?OtF_T98(Oqg!W\DKU,S`YSdudko`-iahb=90l4@$A1`JVbH0-3NkkmWrX77rPWP8V]$<:9\^to,au[PIegm/%
%ND:h4-1M%9.t[`#_1os;EGl8cbguTd4Rp1^0Y#.e/*LA98PEU[PfX\Q<)Y$KDBlsp<g1'3ZfR@8+k(GXa#5Ca^S94o;,NWJbq.I_
%Gm/X`iYKSZ?Lm<BW0FjfM@-$W@)JcaEf"5$_POV@aX,NXQ3N?gql",PYSB;m+CHH0d(t\!,[%s_`NkdB!CZJ&=Z%-s3m!%SF9,Sn
%-bu^s`<h8Ma-qjk$o19=eo`JL&%e\gEua-97a<2EQU1?l+OK5;MRkRH@O['X_A^H?i!'BO@h6.>#0VB0Q"kUjG,<9)ZU#NX/nAj.
%hI"b<KsIEsq/YSDAdp$p9]2=p%&*h0(W2>J/W?o#e]M6&2$B(G?hqj=[DLXe.2nWJfS60QeZq_#!>Qo7LXQk\18S44/]Q*@"-^+2
%^(^#]K0?JnPh+-)R!X!72T1C["/El!'+39pBsHC,`#UrOZ7AOlSCUt*Y_k\4R8O)?dk=aMM>_(K&fhrDUT0:)S`_D?1BS7HUXC,1
%0kN5@hNTX1#<5RjB<g]:%:Lo?M""*Tg!kkSJ;,/0H<gReA*bN<Jas[Y_pa51W]R1,>[Mf4mR5JTl1mJt/*\$=-?Ecm5iXk.er5ru
%O>7DcoNM@T$6sJJD+!2,bMPuc`Z<ZJ5;6GA%.Ae5[PKfH[>js?`jY:8"+Re=-7D.h.jLjJ;1-da4d0uU*ha]4Gr6U$1ND,#b&gL>
%"EsuFF^#Y!4KrYdqs$jhMR^O&-.kj;_DE%a75Ho;f]Ju)*/@heI';[3X&[V.\5Cdqnhgi5I2@clgN3QYN0.Idrh5qtRf:hMRLmc?
%P1d'sa(u\@F]*4h=K8`e<#kpLq=Vr\c6?g"<Lm%#(q9$C'PGq'Ubb>W5b97]k_.r'C?!fgSPQmu@gC`7M.:D*93PK8;#sd%G!<6h
%ULHJE#HX1Y"hC^>i^hqT))G3JA,CnsSIR]Gpp+pr05'A)$9O!-3uh=[6.As'E).G!SPb0'Qg)`QGhlh3+s[XgaoU.B\&@8#GbSc?
%2]NeSLgP%6_],,odKXJHN31b18fGtu+Z7]&1`T7oJ3VFA_gtgl'Q$2TSh5Ac1PVf>M8u/@SA$5HBfCFuaDP66mtf@SB#6;'@Vk#Y
%(+K&8Z>a8YXSalWE9>@gTtOBY1Uf9R1TGDGCF$tYVJpLC[b+WTE)rdT1RdgMNP+%='TW)9&s7!e_B$,*J`4t4_Eh>GUs_OC%RMU6
%bI9mui,9a19'6M9,%UiKL*dnsC9m2F/r/6<%`?[c_QcHMQ24/dNbfl7*"7R@OTK>F]+TcQQ4>!Y_[d7GK>cQ9*kVYLP;[T';DG(k
%7Ln:4`khs@3%-,))@p_)oFD8^2q6dLUPKP6c3t2c/L,Y2R))(rQ%79nAoMVskNbMF%LObB>qNM7i7o7]!U;r[cLGjI5W<HIWF_q2
%f4Nnh]o+XsC&ON`IWIk:ep>Tri(1F%rTQ;$'QVU'jPXgsL)jNg=k.3Xi4Kl3B*LLY$+f&KDs>*cb["EW5<+K4OLHq=_9(blI3#co
%i5D@@1_5%SP%lRZq4@DuFdG.i+!X!0(CH8\%YAY_C,qH":B]W5,8]NEJoL._`qn.Z&.ZUF8U;>)E:O0rqRZ9NP8K2S$$:c<[-6(*
%)hN#/Y=`,=r8;DLn/4AKpL[pcnqJ2*d-esrBB0_<T+>K(T)$3j8>].lnUiWeEri#iq8![<Tfd5g_&WpF>[$s>d6_`W_%0;P?R#td
%l+sW,Od^(4K4CHM3qj(H32%<kR14I]6@d;N2gTFPG/_VR=*eg:#p?/cm,3mCZToaYIW0g^U^Z#KK4DI>U$2F4N_Jq-9fbKu>-p2:
%_[l1F=',)G5<&^7X<lQjK-O,Z\?,:SP<uS&<E4Ke9oWH<)*bVYF`'p++5E&`0qQdFP=14rU\/6#Ef?P!H>os,$V?C<o\^iC8>P\>
%o\`as1!tVhMg&h3i7^m"h>"h<Rrs1!I4E(rR3,[@O$9`:K<Looftd8ZVhV*bO,W47+h&<*)*Ksk(sC0s#A6<KOU9Y'_9(G'Ol"H;
%]A/gK3^'uS;Fn:FK*,Upc-qt"*3bk5iLM#0=I_jR3^#IJWSC<l6P&Tf9NV0b%h<-:ZjhX/S34)L(d?E$A*Ouk\C#pB!*Cdm6hA;$
%9cQ1R#DZq`jDXO?UP7jdi!2aj@-IC'aq%5O\S>Z:j9I's0KDoer8;\laIUiV_6p,*PokCeFMeVa-]P[NSKFAT;n<XBnUm$SDDC<u
%jTig3."S)^K/7^+ZuX.sc<WmWC@;#XN]RW5[do''fZ)RpB7=eN-EMkAr88Dijsk3C_9o>gRWa:%Sd6%9'80kp,$$H4KO^][OJ^e>
%_Nf>o[m:Q8d0O.(h/K_NF0/IYYR$7VLsU;m#^9hT=POc[32r!S/1X"GQ>%*+%7)u;3gBr]'82QU[+)MsKKB13_(H`2iK\bYY4UXp
%0gg*$%M$5o3Ehsn*3a/%AT38X3=eNf1Z<N!)Og';i5I4i6RN)a9mO-Z?>p6RaFb6J4'Y048ATAnn_S5:B-<N0+,po'R$$_$XD#\D
%?b.Nd7m)Li[[draOdQ9*cGTt5Xs`\PnUWL`Ql@f'5&aOF-suqs#EIq3+0+p`Z[tL;V_UGT[-2[/)a<c6^$3D,",EG`N>">l3,KM-
%(1$1?'6>_qap+G`@(rsuhsoJ$DWsoVjkn@UOb&]*Qi-6AqO81)oMaA-U<^T@>8smq"m3fD$+IA<Z4_<GV&6<DUGnd<)[prUDg`.H
%=JLSGL=#_M93K7VVams79Q+q69E0Vj5(*PK33r%\88G((LZQ>md>SF&P_j@,3Ysb,2ot/U"jUklPmEmaS[+-K1P%Vg;hoP9"O?Lt
%m\jtri.*_%$YX#OB@0F]VUEZk:6R`hPmA?=<mWQ7JTL9ZYYoWoE&;euLqm<R@;&"2Nq[,(AZ#SWD(:];3u'_^'R9D-$CjOJ5Qs1`
%3)*eY']PniB/P`P?/&?`JJU;0SI(f$5%#8l9]3jV>hKa@P6mBtd[^Z6L,@@%Ag23"C9j)&'7hsX8?LBu^^18_(2qGci7uhNZtGp8
%SCFl%&iN/99V0'*G91^,%5d!(%libm=oZ7u!Ts[A/0=%<i1t.`p?b!#A3FHtbD$7lZ%u"?b:j7j!K%NW_#o]5B!6,u^sut#g<'MX
%(9t1$aoh'670\BV_ZS2^E[`[`E.[.CZp+)3ZTL^0/]Ilf/Yei^`WH_";"rl&n:5$.E8U4]"7A][$Uf&'!tI#<=[I`FS?M5*gI;8T
%gO[!q>97adS-XcV*cQo4D]5OE#95>V]%kY_444a?@J?S1`O:I@1uPl!"$G5_JFf2)0^U^T1i-9Hf4i#@R9&,]$TPk!F'C[53;GL9
%W3p%7B3l3p@Hf?$9QHlWFV\r)/ESjl/DtD^XOLCgq$os'(bFV;qL]ADXt8M4dNK<@/E#_HP&1UCE6#Ytar(LFR47r&irDR[0&0LX
%.)=519Wd/LJ?ofjjg\3=j7OEAq`=tk;p'm.V#Y-Y<H4o:B+)2&l4i/m6)j^H!h?uf[k4'T,-`C#&Y1KW3,P3oN8N[rB7DLV,!!H\
%Hc`(YR0+E:!>2!@!Nu:?Q'DKBk?sY>/I=BgVpb<*G#>;IK/%J3".V3=bWFHrJ<TlXRor8lE4CCnmMd/(&.2(ARlS85<)iL\"e<\N
%\l8%@!j86]1@]n,:9ZKu^m3R'\n'n'8$g1%N<bu)IdR6eH,+t<.(f;0#TRd-@.bWDa-Z&Oh@P7eqh^UCTiP9;V@GX!3,Z`^M%'tT
%HD!]=r"or(ocpM`3tJj@Z^5pV"--u)j6Abb$4X-hi*734S_UN$6e5C;0Nc,Y0ZMW%%1>.Z7!tJ+^kn"iF,%sAc31^pR@#K43'sT:
%LsfGA)6;3A_e0a(!]$&>P.L%M2=GG0J2<]`>^/U<:-2GN_Nb@roq)BA3YT#(CXVX>RD<)cl@@._cD3Z;nT?0t=;o?*\7#GO</<(f
%SI$9<RdTq%RD@4EXF;*8E&9@(X>>Ff&[m,cbQL\*O2Sl*$(RE<2![193$1b>A&AEZWRUn"3YOK-QlN_j$(MSDP/1t%^`amoT$s+C
%0i$NXD_Q_u:T]DZ#1Y$3[cE\Z*9g*;Rr/W]E6Smq%_#jJB0IC<ktVEM=HM5m4\JgK;7C>o:k@*hNA7M6i/U\)OB3oN-?sMhg'ne,
%!aJdtb>j.^IoP&>.WFP$'n^<SgFaD_e#C-r1Qp6>'fc(7=EKaK7>CNeh4OiDc@Fh)'f\7VZ3r].3,J"d90&aK#MN3`BIafWH]Kh]
%<8\aDq?7ffE.m^aDIkc*^ldi_E\gRDK2km:mBR[1i2km0Mp>nqm7bM_^7bU@"W5Fd3u'_QNch[d:'Jp(1;3QY"cb&hV(s_WE0ci1
%VlEJrNjm*Pq*(!nj)o(ZFY7V=\e_bn\A09O3]*B8>[)^^FY7W>W\$"C35C#RDD3\^FJU]4Y?^!(+q6%;30MY!-,Q;V7uKBB1DMmh
%620m4<8c!E=$CPt!lm<C'fJbDaD0%s`pZUZHt^VP&NG@[3ZU+Hi:n_.Ho_j!K"$WD)\Y2UEchdK<8ciQ+?`)i![dt1p?ieti"0:M
%M)lA2rQ<D'mc`YBgWsHK"g79jCF^2\@m!HMl<N7\@7B.@$_2!$heu$.o#TK-&*n&iBOH8GL(0[#+Y8A=%@j%$j.l3shsp[&"abVN
%+#m1Gl$I=C^`E%7=IWcIi7am[8'gtGTasNT7V&,u8s!I)4jnm;ZVYjP1cfS&Q'7#6_Zu4D>^AFOq7rC.;QV'rkQ!M7jojB,JTE\`
%#1$EPWce+r54H0kqWU*7h`2c</!L&!Du%1_9#C0@I,GQa17A\:E"^g-2K?V>NrGnk3V^B-An;9Rk6#oknRTfJNb4pjK+8mMLsZ*n
%"37brOo1LT**6m4IA[0[$^72AFPqNL9+*d$31`FZFjP[i%g2#-2g"!M&5d"'keJ(UYM$+$i,Hq0`o<9o*.C!VFupX&YlQ2XFuF<4
%!L3lQL(,-IAFLFPi:*e4I&sZ*4)QUoYjfj@NooW:0t"9;'AN-&A!krbnTKq?\t';cEH?J)dhs)ahF!]?2f.CPmV689Og0J4Kqob/
%12t1j_1snX^_(S-@H%?$;T_n`W5'"hBK<1gi5eQ&*C4<>Dmg>5Q3\I4?k.2<!Ct$?l:M-g$o!iAE+T-+qEc<JOFX\&^\X2t]\-U5
%>70k3HY3`kE*sl)gM[qE*U=WL?Q$Z,U17X@i/YF)P:Clj!!eo4o9)-8334*aqeZYT$UrRKr84I.U'&p0^DSkZ26^NhL3$'A>\!e'
%*C$Mq48Ci1c9T^ejo1"J<-U3qrm!nGqrA0u%nk<Y`8C(;Q^.96HX&@La&p*=A]5k&%I&'C8k(p6^X6&dZ\5HVheXVc9dfm/Mc,d`
%dVlQ:@(.H\L@hc8I#rfpdqf]Z2g@Pp;f3JfHb&2[r'i90"3Y6<qhEiBccEi*E7%VKADboq*?ShLa<,3jN9ZmkQDpu[hfro@Ad6^C
%5rthHSXI4FbZ#0aqITg`TY^8[()eB$VXHuP`O6D-_s%Q3Sah(dVg.$jq*rVL$#sPP7Xh\L]?V\Z=IEZ).D?Cn5fQ;Apr:=c%VGKj
%hn,<D0_i=QKS/ODl+I[5nf_l&]s0(7G\./j2^U2_O3[,%Xco/B2cG&JE(]j$:@50n/X^ruC2Ys#,6kP7>0+E:W4eTDa+Bik[l9`n
%'H#ofBPH>Gr=qpl]b%6/2WW^CP?<uT\\4\5@=N0^^%#Zb][]L<c0,<<*]gKKZY_QX`81nu#:hrH6ie9'J8tn"2fO7]jt3nu_1-"P
%$taG;rh]CTfpaBS$<+FXh?[.5fZAG9HP7J+YLSrm)s\;)@ShD]TbCchXOQ*/WTcfhWP*9qdUi`j2]EYa]4Y_o1fN-=C2^I5BJR*2
%l*rRUZHV+\7$3T;d(-hu>qf/@\@l=%0VlGEp83sOF',ud!R38_!XH1n>.!j4_sOQ;Zqi3]2t;7Pr8@8q[p_1Loa.I(&fF3jfY(u.
%,pQArftD*gKs["io.(S`<cW,I@&ucKOF%'8fD;mMm`c`VOSqf>m:`i!"DgHn9r8"7b=^QlW'3V\PC(af5fUd/gtSe5hc=c9"\6JQ
%mB*:^1MUj*,U$DPW4eTqUAP0am>Yc\p\pYM]bs@LnUG3F7cuOJFte8aTSi.*Y]>((#,g;3\\76c.YGgdm>[/QJ2t-Q*V#;s;L?;W
%,&4cep*L&=Q#>+.BOD_OT_<!U@nC=WhTX1%C=ATa@G`jOB>a(1X.LZ,`p=.^JLlGEg"UMq/Jla#]ijLD-)`VH1\6Q;hhKi(cD+9u
%GA;%UQpf7)[C=S(=CqG'm0sn&GPC=Nh?I_lQ.h_C-`r+4[5U`fJ;aqPDk_p-$?"AMGVe@Z>AA(!rJV=!C2\1prLaV+2d/d0e;:ka
%g1!.$=AmU7g5%>c2c(kZ6oqS3iH]?'_Q:]47-U,&hhf%oU<?plp','2RiQ@%]nu'[HCtpuUEr4($t=,ZjugJkRFn!O-n`#pfj!JC
%Z*)=-FS$6GG%YE*nuj<&_jJ+LlHQ!$*7WgRaY=rc_sP^Y0iEf3[l9Qqm%5l=2cV'rl7d*o.RTiab3b0(JrgpdD^HHFQ^5qaNOdBs
%@?>gl>MQc.7d`uM:GG?apZ?kB5RhaPZm^XkL>873er?J*]s86Pm+gHA^&*!S*$8Dl#8O0p$6*l$js;>mj2UK21-LdVFDc#[mk/4e
%Y2%m&GSo/Wm7dho\<YbeDQ.MX[A!;K_*uA*:@5/,C7eOADgKHhS)2B=hR"Sr?/MWpRFBL3e^!Q1pId`!Vu@J^Ke(TVXq7mRT^"fi
%,k1ee#uRP:=4i6pL>E9sa<1U0-ccPpb?>L5GV\&9'\@@W_j3,1;Ub2EE$be?EG)%T*<fbOMh"[14;^O9G$ZAT-("k(clE\/7+=@B
%QnaabdEHt`&0A-g3?X@td56q!12/^)gLgdD9C=h.fR$o5qESJNDWDkH/sJOnG(!jRErFA^n@DU8TJU[(J2+!96a9?;BMgnZfBFmr
%jKlgK%FC*bb'9;@KU3f*m?sm/1&?^%`FeuS<SaCj.H_XRC_n@ua6&sIDY1:HO7&P=g(cRtfEnK/<dMVb4>rAO+<c0PZ#9oc*NWEV
%h2;rg'ZrIZVkr$<e_+aH3u51Jd=Zh?n9H`p'td'[$`,M7Q4sQW-%&OX%3V88j;qS`9&Z85!C-8k[:>Z9ok;ad&s-AR5h(V^Z+qQ5
%E8M*3?9mAG%m\sP$Y1_UPpUmAjqL#`<U#+B<4$1#(faGn`MFU"H79$up&J;bXO0qUMZ[-lGG>6kZ=l'/("coE*Rp&"N[B"DHj'*V
%abls^_Qk@neZ(rIG_V*`2d8m9Si(B9WPsur(<QO&-jN#!'L6Gnh,Mc'F'e`,!N1lK<oUBcOs/H1[TX7D)"%&#Mqdsm6?s%XEcl0<
%C/KKm>As$F?3oQJW.4lMNdr]%=B#CZCnr]fVA)%5mYNpWKh5tql18Cj!4?dC$mSFV1b+Tu.r%X6LVYU&](Z;_EYda^Q>*6R+r#L]
%>kc'HFa#3l`2dRVAhuh<O<bK3_IK(6c:SJfePhr^2.=<7bG#'F_#$S'=ni(+(e-J7+R'fp(8*+,@2"`b`;R2rN.o-?[G@R?#1#b'
%etTl%(IriSCZjoho2[RoR6E?V;)8RQ<`UN1P9b.HSE^CT@gdNJcpKAC)g!'p,FNq7AhE'Kd8lo(7n"4Y'IjIV^qmNIoL$0A[*rX`
%3.]g@Z\t";]qZl1Ss,Gd8MB`PrZokm133PAOX/<UX5dg;%B^8FB_<*R/S#TPg4E9*dWIBe3M7j5&H-('l6h`."agl_o*=MI.AZ/3
%+e6r4'*,I6(M,;\&CMdMc;9c`>ec40;Q#R_/*_'W_W,l80n0iiO;[<8SYR>.iJ?n&#)fu$Eb94W%MT0Q-SHdj-of;#(1WbC"t`@Q
%d27J_6:m3.9SA'(5Xgd,ja4-3RmGD^jp:a8:I((+>*qe#(@knOMJYKY)8hdrKmD(q9rt=qF,)Tage2Pe/+2n?83Q]%o1dX0^n'>P
%.]<]<&hMq9C4"Yf-'B,/aRQln+C]X!\L6hK2n-\'Oo$k*DnoB^).l2@`!RZ-R&GR9d%/K"=ur<QH:1>WAth1AZ_Rj>]-+dAYY9,:
%K4Mj;r;eo<5dg-`AFZM3?-:5SmO"+>&?K9+"q%BdWD^71=iT+X\Ua8#\6*&I3FNI)M9&mjdOWUO`Xk*'*.XZada$NPT"rp/3HX&H
%'VHdZKCjuP`cE$+$G'>O)c!KWo7jg!%CjcJTFfeg852?BW6=+r@E!q1ZU]<NjV5*SGQt34+es^^nK)K%#UIraQ's@2Fj6^n!kG;O
%['k[,dIK1H:CcLN>ir93#OXU*I]^'Y3a)kE'N7e)j%:T^-Jk3)D$5[[-9sm7FV<bDCqREg]cMbGgnkdZ$&$MNJ3I\f#@OuJqe!]0
%5!aYR"U`Wp)*@2Y8n]miN53/d:uWVA$ik*!mtF;EpUnkC(SC>nNQgH+]M3\_"r%+ORBVbWm^:Fog;(9r9E7oME#MeEOP3$+*MuXa
%MdBQl_$!NolesLU@d0_VF@^`!S^e1ogmT#@(dhg7WG)gb4#TkZ_)n_LmLBLTWDPDm^c[>K1,KdugOXH@&1uCmU+cm*)."QEZaigX
%c&q!DOKdIZDiJGXd^0D[=K`>/W)_(]ZH)!6S7UIudOQ\/Zgc<co%\HQ"E%Kn'in<QM-G&BS;+@e5?4n67q8`.h+S=5Uk01_`th@n
%j?Ik"hes?Ydh8$]Ce_LMEm[9.c=<ZLA"2L`3DmGpKpcN?F=0umL$iQ0REZJS'mj5Z;NW&7_$PI%[5A^g,p5#M,jL8%g?"o3L+_Vc
%\56`.eo59Mc;<0tWig*"#QPN@`l"!LNBS%:2c"ti__dqbe.&D'_ilR`R:Q-GF4m<2Rk9J$Wobqg9iKKb,AN+=i>H.[CqafO>E'd2
%>j^7j%iUi>NkGNKf!'=BQK**_PJj]Q)#41,iH]6Wg,JYY\Z7fQU)Pd.OYt_bnjTl)dB[j@6%1(<<!=J$-_Zj1)7r)3"0KJ1D-P+[
%9"7f9n_1if/6h$dE04M:]0J0MFYoO1'j@pU\4Ha*R&PfUmK$^)Si%o*NR&>uH\b%Al10DR3I&j*L#?8[:V2BX7uSlCfLHg':09#s
%Y@0qa]@ap2i0f9L^O-!\]0KOIg+6!/JhO\PCIbTu[]0t_JX_LHgo'GW'tPhC7&VV_GU_;K6`J1bD;9hrChaY<ZpP4ZTb,]*75n#>
%EBsba?"dnqJ=?_mfMno:T!Tkapp=feDRi27!6t9g26^I:P@*h)GCKB@I2h2=!I+DX\u!2eEmTgjl1^*R!2N;Y-S(UlHG2FAF?N&!
%?F,W*7.A7,B!"It;i+u(Ls#LUbtqN*$9[Q:YY,5=B0'*jUQ/DAD(b>t$n(a>LNCM;.r<2[^t/_TJe]5[ma=-!]&?)_*#0[8/Mh^*
%D89Sf;<rM_NYtS-dU+5Y]kkk=?=R*K8VpdD-HlY5I.gNUXNDY2cs$M;Nq*WrL+e5t8mk^JXmUs!bCg^\-57#RTWsd$GWE(O0'[hg
%WYYb*@okn%2jDG)G88:9RtGQeSN4rXk15"3qg:tnm`2'6%u6g?"kn\Z+sKbc31lQG(?U/OP.:l$b_Q;O1rPZR1T9HVXu[=(;e2a:
%PXRBP-Xq:]s.?uKCQ@GbZA%0NU&WIm'-U/=;!#CUkXhF`T/h[moL\`r3@6'e&D.[O_M&)DOu:#RbI.&hXK&u7"U\X]6PZ2taj'+^
%jCRMgY(_HaS<gN8_>3M6*uMq$9qHc@=@Asu_crg<:X#FZ<UR(!>QrFUH:^A(e2kIl6=;MJjA\W%$PLBa+CL=+<VAhM-=8g(A=/g=
%i.h1qHs@NBWC$s?%_[2GjHj,e?jR-:<SHQ)KN@S#Pn2[VZjEffg,TF'-3+Upb!HXFJP./26"<TTl<sb?<U!K9V?D_V,W4h*?)`q*
%WC*13n>WiE9]q*dFF`b/-90?>=%#uNUXCRa$arS6Z=B_N_a*B2T-uu_"$Ver&o>`J,4q3f.(_UT[NOVl3q?>S@%g.;Q`kT\fNrK7
%"ei,3-NmIc"FZMIofC)6\c;qkkK^9DpC)?mef?Wp"tMu/*J$MH)ER.;WaK2/ZN7*18F^$3.u>an*aq#5ED0S'H(OpV3,B2C0bUp,
%RaHKLT,C1S0E<;O^4S<(eUg)m*Lu:D0CV9l<N8HHTd9!crIpBI&pgV(o`@=_)"&RWqJ&>uSuiOVH:/ST:V2j%0Q(&X&nLC3"I<91
%rukc\%heRQPIS<b/m!-:q'@N&>0]d_6]eR^94YIWZ]al02u66B.O1Yt0EMg^`h3MWEIkX6PmpDNMVZ5mjNt#.)3D]ql!g=Iju]^*
%kDF1.f.fAT5n4VE!ZFb^BFso+HlsT@[TN-D]@-E]0j079f,T2>9#t*FfRDJupaJPjA;)s"Y#"HI37Q/iiYK9'>the/IV&AfNn"J/
%C<`>@QqXf>O9F`\KKs?Phi9".M"`%+9X<q#Us#+%:F%)Ac7a>"HISDa,m?dPq\i*PYR2$X^sJ;LCFHF82Q:VKBMkuPl,H3Uli_;'
%+d23FnPHlK@+FY;^;B%;,->erP3t)-.oADK*N<$.67OdBNi.E"Te<5X6'Jc<,o0ho<LYJ.8MF=)_/Kb?."m^+nBC0#c`g`oBE?m-
%NGhd,1-1PlP_&_-/G2!,I43?t!Ib>b]3*.Y^'!Xo)(:68k-%,9e?.^AMFg,!ghbFE'H>M8_1?N_ndW[>UC%Ve"&/37QlOOR$kOWV
%09SRFUW67I.F'd$Rq?Ngh[1,,)HPpeLf+MTCdC8Gb@.:^`g/8Z4oeUrd+78N)1GH)BcRiQ/eK>W`VNWT:)^+sP@6sq/q_nUq`c6t
%DFEQ?eaAeCM4PKiNost08I1D[CAI7Ypgic[(YFs;-`@]n\];Gpbj!NeMiqcbBTe'p_MBd=m;+`gTFtLd[VW*sW[bC9^muUqDa5;.
%()s!%=g\De?BI:1p/B'X#+T2e&og[WdC^mN<[)7^FKdNWJPI3D_X%T.A>#"h5T'Y\(6K"F3E`+j7J6gC&urII0ZdXZcN7bd5HE09
%>W@s!@?lQ"Zm?`_`)i^e\HE%<:n->A'O.TcpB@94-Ga%9\V,b."D1Gl:`I9_@q?U.>3aR"\J2/R<:`6G;>Zss94.lfpSO)FU<ln,
%*O9@I6&6YjRDOO3MM,0tGr]+"&l-THM,7l$Um^+`JeXqlO?I'p&-?FA&B&.?).K94"%rotQ]3Ql67$)t:#_PH_+G"O/)ral.p3/0
%C+$E%_/L)^arZZF-B(73RRO[cQJb.d0A.i3#dcNrH\1P7i$?U#5,AR3,b-<hfE73F4&$;3bi4210'&WuY+t1.#SUj']EZjK?@PTI
%\je*:2@/%NeX\)]RM"*s(9OQ5ktB-<-Q$d/Lq6>,%+nIq-^G,aFB-)n'`&)o<S'fM\eS8O^`#oOkn)FS"V+$sC*T6!,e?EY,!p<.
%BSMZBJ?[ZNW?r1'XQ>ua'+ftP#O@R.)XiBq2'S*:Rh>BdLfs'@!eujeTLKmL&SWDVTF6W(U$bi`6GV\F@6#PfIiq`W&rRJ+ggjO4
%D-LM/`,9LmfEb4P$#pl^lEF#'3<?4W8Lj!3kGMgW570\$4=nBX.f(&$!25f*M<h#ohP.Fu?s_(GOc?gZRQ##YU3&O>E*)hp]lBS#
%#>$O23`,tq`SMqu&$uG\C1.6XK0KejYfTf.qOd%rM'^p+&r93a6*eRJT9*D(Z[iXpD)JhuVJ5"hEFn&c(jPKq7_1EXId3Yha7diP
%"F8;`)J`^Vn:S<U3)0K'*5dXQ33P*X0MVai!2'Kd&dA%L5q@(c%u&r[_IXa(D1./+q)%?&aD2q1Z`.MMZNn$:5QVtEMr]u>SsEm7
%7No3N`YW3D!Cc16WSnu1Q,#('#uuV2H/tkOm6L5pk6C40"*:Fe>%+;1(sPgC?JsHp2Y&UVF?`>V\H3f0UkKu"!%@oScm\$2^><Un
%PAnNY-gs[qcINM`5k)VlP=fGuAAr/(VH#f#lY3iWGT._tg!YX'fuf-U5h*T(H.J3.BhTX-B;]QmVS]@NXp8P=:93_#b(ZoQEqBeJ
%Gn2O'\IL?.KA]d$g;b\V<]6qR!KYGBeP5Sp9kd!sZb?\<Kf#"pFgc;oH<-9;6Jp%J+BTUMXb.$"o!0<c(G!bA@3l?;8><V(?<MF8
%JMI5%bb)c#o18Fp6)\)c$1ihN%S970&\Gi'G>Z\$S=3c_Q/quQ9kh93D!XHm=]\9'(b:W;(lap7E-]QG9NL;-(rqF&J7t1[!!XE_
%pm<<l=S<iUdUSoZA'Hl#\UhlS81qMC-Z&io(;3M^<;XQ:k!C#@?C)u,9]7\GLF/%ak*A%[6YVc\O;\ci:QP_SLTJR,=%aooGr7,s
%^']6I"ou;Z2Nja=bq;\0H+#aNW<_"H3pAXp#6``@+>LMHHA/0YcNu!%\3j_b9Co-5TRh5Xct0jqf?f-:V"Ot!5iu3?80D5[@0q:N
%jX@&V$:+QCA',^[[SR&2G+_roRM.@b&hZ;4;'L;h$2#HHNZN?!"84j&.Ia"FMK"4o,&AXW`*OR@XOR%<&\Gie-P8/(Nmg[b[?tda
%+:-gpL*VRTEa$=D6j5iOR;HLV:*Q`LE+V,%Tgn?[:d%W\DGS?B<W^X,a5I\:k9TNYiEtSKXd!ac\f_`C-)cE-OX3!&+c2Yn,@q[H
%M4#s!]Moed8s0TpD&\('0Y3*g_8;=2](6J?7$n3Wef,g?8?cGm*n&KG!Wbg+1"Cu@)GT,kX=XQpC=-==)MuaKC/Q:]+a>05_XfN`
%fs4d/8eI+sE</sFkl!CPp*:1^'=H@l`CE=LU)iJ*&3C*%E`BqSCn@I#d?*jj4"[TGD0jPY^j/H5%a]MV69P3gBqgNC_a/Z'r*A;,
%+@sQJ6>+B*o9q3o/ZOI,$4o:pB+R<@=-[%t[\\Y6%<b=m,u$dU4;@$?'!s$c0nfWC!&O7gq=nb;8CEMH:N3F(++VL0L8/Pqe2hh=
%:o/oO$T)^X6O+tbC=rW^)4kZJ:*Q)`4TO#.Eak?_U1Ad/74':"Ub`44j$?:n)PNtVT6AX5ij`Xm!N%!k=<BYCo^!f'RM!jfogT@h
%[8A2;0+UI[l(i]YS/JUu#k;QgPqD8r+X-D-5)W.X5F5In3kSU)J3sUo&[I7i*b_)O9Z8]ch%%$9n^8u'P`0hG1!DDL7LF#%Z?1$L
%,.4E;O+(,]5tj8V:roRXiK=[%.q^],9=C3;7L8'WkE&#<'G/LLP)'.FC67!U6hc9EJ$j<Q/rn"8iVi9Pg!)g@PQ+LO@Hdap06dnQ
%.W%;.0MO'>GX\T.@@F?fL\[GpXQ#EQ_9`[PYsskr+^sR@q&`O.Ob6T)S=*-:DBVL"!jp-\D,?iJku1JiI74o<;A-FXP[gcr.V2c*
%U+L,2SNM`'"4o&'Mc!StV/V-hb;&DFV"?*(#$jsT85+P&HbCF>kb)+YgOd78\.pW(g=.O56su?])t6Rof>&5T.T-\C%gN6jaNVmI
%<$]/+/hbh\ecK7n,]jkQA8m@_[N5XedG9=(BFQdAB$T$?X![GV5seZf`rKOKU5292%4J3$$d9c38<u!K2dt>])J9s?W*u7D5>%#4
%.Z1nPN!9TY8Z7a,pm>dE:d#"K7?R[:-qEPF[:qW$Rt/\:q1R1s(g*TW$FV?.b5k<Dd7NtqD6*d6<T'/$Aj$Pr+Lr4D'6DY/H@r7D
%Bg!g?,TtLhUR]'&SHMim"?C<1b/SQTquX5+U;hc'P+<<Npf]-_=@);MI$CT3%"OS'')AlLJRb\&o_:o0lU?EB5h?@a!e2[4j<b3b
%=GR=AN`m0\.0]p5R@jOZB@i1b+<Xf6CaD+HM3Jofn'YT7AQo6TWHY,)@Q.1E9JkUf'Wsb0S?]n$XMZ5q5<u7YZj%F'/S4tBWH+\t
%L6[9(aDG@E@-aGN0,)6YJ7d/<`*O"%QHc!%BcQGc;G-n]e(S<1#rH9f!'*Z$!<I''P*HRk!Cl<T;XX^YKbFoF<6T\/'ZJQ;rtBAn
%bN>(Mrb'8hFr6-Nh[<me8dpM8)UD(O*/>]Kall"J?'0K2.gn$o8@h'i2+jp_IT-kVA%JJo(P0Ls6Rt_m=$m%5"[h,ch$IgiEaf;d
%@3o6Ed?H9g:B@ce17geSYIWak8'\ZCrE(uq1/t6<?34T:i0Y4B+4X+CO,S%g5aV,efs%qrglZp`2uj@;hpFq%E['F8Q6"u/+;c!+
%E]%UPb0[pE`7;&V_<YJ)n:USAkY=pV:QN`?A.i>jBV&!c/;Ni4VGLelESR;;R8pc4P%"GFqF)@AGmSEG'=BWG::;)o1;WSjj:Xfh
%@2,RZSiQitipu-l'h#H1TRp9uB;l3#^tUSZ6#8Hb[DV?mT-<M;8AU8-($QPO=:\5HfAiE,8MMWB\F;,Y!g?3%)'r'f\f-sn^%k4K
%'=*K.m`!6lfG$[#))'>Ed4*BLZf:i)+SplgNbh$3>niA+^Gk)N^%][`?&FHjJK>LoS8fD<b-Iq(`4bYSD(NmPbSQ%,.\7oB8.&L+
%BXt5iTaCTe(M=53>F(B4NQa$0VD25lBguU<5dWMi/X91Gmk<X4[0)8M>/V=obQ%Wo@Ka1@W$iYY1lP#E"J<mM_CQWo8k4t8UtN%D
%'Osb6PX]W_"[\BV-qX2uRGN^P&3KG]ZjQ=0#\l;MaI*Up'T#hK:9p$LdSkN4OsJ/'1r%+oh'm"j)5A?`0;U6W+o5-qQ*s$#6gRl^
%WT&6%PeT!;BP^EF#0-'JbAJdb:^-)5"!D?:@ipj7<]&6'KL;R4LW4d0i@A,[[b;)P"N%MK\SN#6S?0URec9=t6*=GH93CY%.R,el
%@NaNDBU$$JZuRfc`+!OEaO>E8atM-Gf6W!6'nCd5_M4^'N0,fl8Lj2NP$!"$+;WB36on$rb0^?fZP%u1m7j;GEY\HRm?<'O_A^f:
%@AH_[J>T3NUCqAY/@UosaIH=CEeT0S7)]&sjR[,_MG0<sF*C#sAG<CkBP)Z)pb5!6CGh&$pS_RgUgZU3P0K8Rb).66D?4toW$C5[
%RYmr'[+a4HWX/3O5$c$`Z'1.c,q@Rd6K1]q(eT?f!72bOoWXF2gs9,S_]Y"&dXD='6R54;ZP<U`JJX:IJa5lLmi/5.-Sp+mCB0Gn
%@4e3RU][Z&CIj@RdW8RM?KhJVi2C_?,="Y5D2Xu[8D*]uTFg'D#j7O(1dr+J`j0B_(&//f++T5_"g4EHpm,SH6Vn0,9#LQQ6<F4s
%$JO-ILDG>r$=*Z41_gKG#Zh('/C9Llr6c2o&&rN\+AISK+D<:6516C.as*N+IL$p,>2b.K5a5;hB9?&OK"OWREQ\VHEm1H^+\!NU
%6+&maE1;_;5qtqZI4Mi'Hj7r=M3j.7(.o-\K4I4VKe=_uc[cHJB^SH;Koo79e$)T6(J#U'=l[hb-@f>8(dUH!B`r4&iPX.89=e@2
%>`2/bjI(tCksS]G;D7X8.!+]7n"M^p;/Cn=#l+Rk+=+TdR1:2dndJPEm:6B*&Q8<X!7SJ/&:AcS.b8O=.uC+YS=GT>3#E1sNnP,o
%a+pFc8V[b[Gnbr4?&O4SE"^f4l_SHq%NDH'*(.gJ`?Y_JO^;;@bsl<Z&ec&)1"B^mU$kPGTQK&=E<B<Z@\*Qm&'Zf,J?(Sci>=U:
%A\o/p'm'i/OPgOU?s>-P9Xa7EL(VpSqN(g^:F2[QK?ah,4sPMAjf:g*"N[KN_7)kb4T]`l+:h%O2HBQ67@=N3(p]mg'[3FSl>u!N
%V_9I`SgpQ^n7VqYi,Sf83g:6WYh5-LM<8EOJ?@#\+mK>2HU=PP>Y%\!`^ZZA#R9,mbpgBBes\e>dmq""NR1K&[+tq`M-=Vn\',*H
%?9rNAoVXtoh&=7EJlTVJ92%/`)H"dU9.eO,3u/#lirsR&Ft^'p#RlEm35,U6QDe/bUoTs=BN$2j]*(je:Rrg=nR4YK$]+u0![I,/
%Mp`V4(UR_&LBT(+fSFdh3*0UK%IBZqjsFJoB*Z"ZU9Gl62k9Hg.CqgkMF_o"WE*K:QNeR)lT"qN>,sOGV>MEE-9Gn5>/<%,[2/+2
%``rd7gQa6Ylu1I!@3:Y\KNl&r]s6ir^-?;I3>(!Wcb]l&^]I8I,AS!NSGhullk6spU`LF+k9\8^gW3hZQ9*D!QA=N6X.kV\EfF06
%lqN!UTqtbNo*>H_,Xhhq^sr'B20,k:0Q-Nu&i0`6+g;CT;2/0[N^?S2%&"MIi8C\(7uJsPW.Z3\I\ODL$CFt(G*Ci0#ek!i\5/5l
%`Us%`Lt5/00I8DWMd].B0rP-G+@*!]djilK6rYa/W^p2)[tIm.;h'Z?ZUX)L-4V[scrWEGOV.^">5@8on5/sqYQu5,)`47=i?42U
%AY!Ta^oKVA-U/:#*X(]$<JZj12e.r]e3R#,GW'XkFp'%EK^e>3HqXi\92WZ/Tkl,8GVhZ)3$`2)6LMd<m;[m!Jh(0CZO07<(H=hX
%_[8>g,YB\L*=b4JU:*BegDBc!d`mY&_T4,[9mm`1-K%R$Ns4;RNd:*-4?S2V&VM5.qX-dT`\Ir*1kR<4+9KqpJ5,#0]%'?CQ:H"#
%QPh3QK<>X""4=iD6"[F!4[<<aNiDa1kt`$5)PFrH95H\O0E^o$:n%O.KB>=$!mm5FX]BiWe?e2IBNW)37Rd(JLHbX'mSRI8Ag&<h
%:7hm-`^Mof=XSp13/S[=nfg,.R1Z@c"U9+$`Bj<T3]HP;-k,1jn:dV@<e=3/;4(AiR9So,:ddfACS\YSI3[`>%/X/Gp4amT'EuV0
%jq'm*-IS!nKH_@(O@o!lWRS3($njE"-c`7nXYWXUSsjm3f*mIF'lOj2K-9fIb[q/('7!oa,S"RX7GJ3F+tI3cAoR't2fVI#'Ek#Z
%%LKo8la:&lZ/l(X'Nl;\4uA!<(qB9U5o$Yt/IQr8X7Qst';\1Uab.]7JYHS;f&N/d*b93s=W:C\eTu1J+[N.p8IQ%A3/0CdNQ,U[
%/p7L.kD\D<_Be?.6AcB&"VTOT9X>itW4Nd;NJK&XGN)An+(SleQd%$D=LJrRP\RpGAk-o2O@TGFK]T@u8.^Z[*Mc<+ecAT=U_D1g
%\0U:pc7+nt>\gVi+Lfbqn^'^fT!:kt;.u4"/I+qF97\4Pa_2t<"*I/p&I>qr_E9#S&d>?EdV,=d'<FW%ggIHB-A$\ic_Mk\V11+Q
%N`<_</)Z8sN.t)*7S@-ZK6'e<O",QSE8'931(ZoULdf]_;[G7qQ:3us1jrCiA"NI/O+`bJIBaAf&YaXaH'KBS]QkkN0>4d4p(!HE
%1jn55Jj]Z#>Ad*6!lN;`5JZ<A(cNFhV"$;nD]SEt-\dR?X9i!=XR\.KqBcON'b"30Xj[PN_9J;Y8+RR%/b8K"XJ2Yu)iG`uFJO8?
%)fUCc\<Hmo<ke+cf_QDlg5'>)hYCJ%5=P>V3kN.g,Y2%@]G[g(?K)/K`>#YuM6D]6`m%]+71qs;PmYP[BOL\9RQKNU1$js!/!b9D
%Jm^.qm5qm()Vj:IiFN2r+ddB^<fj9d=-)?OAko0m(BE>F8;@Zc?q@(f(.!S-]cUQi`fLaap/HJZ9+?CbPX0j>e3u[p%2iJ-A9-Y\
%>W7R+*BTsS<7S<e(JU]ML8/4NHc"D%gHM%+%.$*6K'k4R,d#lC+P\*%RdR+SWqoYqX!m*)be$FQB-S^olnOTuM&dZ4mnPR[\0MYg
%ZYV-+:J[@I&;2pkg*Y!D&m.6HX%7Sg65?i+=?9Gc75OYVs)d=(pS(9:E_`Pe$b$I8'+8)Mfiqkj-"mFU7FM%+TR`ORBr#262[\<+
%N'L5>"'V8^Y`P7'8_9#F_6^FAqL*[mF`rdeEjAe$V%ES-)[n;)aLAMF`Xu#U'bV7fJSX*LR!%!m,i+]m*6$qRPR\8edYUGaZT+[S
%Yj7.^m%!">&N,*3aVBFH<Fs#d!RR:f8p:C%\LFNB.l:<7T0s9dcAXXY4O;sqYUn!0KA$e9n1aBaW,JL#Mi`pOab=1nn=L?eae4sU
%qq?GVUb[pQM((t5]GV8dJZ6Pb,3Fu_@SVBnQ\0.6XbfGDrrH!-(Z\5W>ZAgZ*>7]l&UQgSPD!?O''%GLGDL)$bGA5l,bPZur.tGD
%>21C$B2=A>r>?>e<n8c6T'/J[O[YO1*2NjO'oGbt@RW7goV/iDCh:PI7mhuPAiRSG9o#H*b80oZ_$DgH+QgJ6P>4pk]F`X^YrJEH
%aK,b:To5a[&]HYRHs6N6RhTI.U`G8T1:$Ni=>a-\c]D.cIVMfeWj.h@@7]%]9]qOh$_R_A7PLP>5inp%#4$q!N(eN8/j\9EGq$\3
%FB9F+"N+q"H6+BBOEuhp1$,<6\I%B8!35"3#`gqr0Vecp\jeA**Dr!2<e"3Pn;sOVP%EdlCfsK2bUj)'r1fch*>U)5%J%ob-"T35
%&^4)QIC'Vd)o1)Dm=o.4&+qF!%b0X^#dN8S:SAmG>KB):HNVD'R3#r^..mi".*8;lBrl:!dHUp*BOdjHS=iPHR'j5KMf40L[dq%"
%i[m^tZ#l3$LW+j,$'>nd-D@BZQ.AGQ!@`oVc!4kIUrPihGpchZ+!pQr?7"#+8^!US#t*,qV*Qe/-ZRA=Jd4$\J<F8<n4SV.D1g3B
%&]e>Hb+su:Lu4q6N@>B;QU&ED/P-%9WXVBr95)F-8.JMtN03f<&J;&GQ.LZLs+Cgpa9Z&h4E<+^Hb)X'.l&sJYeeMF*>bbY8/VI#
%AkH["lr1cc.JBYa!N'A@>I#LsHu`**9F!5/`&Ua\NA<+2dNZ3/Ll$g`M,,+?<:Vho-<S)t;/ZT-S#Ip("ZVLHYtr,hG<A$l(o0fl
%OSt=P$#7#i!m)@GMW/oL"qn[+k`WHRi9iI#(*EVh)E:E;q*B?/[NsB-r#EW@,a8liX\]FVB^/bhi3!($Hai,D$uut6*?*k1R,#h$
%A>O=4":a_'XV,`t:s]\]Lg?o]-CuMQ@^?[[7.-R5T3[j#66F]L!'YsgPEWAV]S1,+'#(JDX$=QKOfG'<!tn,4L%6:c+8YIo]!%*=
%NYrgI_,*"H^tM5^E#_h:WYO0kJhhQ0U9HsS+IVKmH04BZXka^[-tJGOgH`q-]jL[O;(>U'Yh>:HbDt.W0mf%\n.J$0:ttK:>*N>:
%qVFiNGSG098/UTR?_U..0aAa;BP__5UKYc:Omh;mEZpi`TFh?s'D5?*(F%Nh9fG,MNL#:Jg*?=G2u"i5`/0j$3^FoEC^*^CZ:3Y(
%C,Yo4&B@fk,942GG*?*7!qrtI,ZukWBtTF#-?*(3(*+4qj9FToN,9tJab$2Fg%$%7kGnNG5),/"$@jj.pg?J<22E1?+GMA)FY``c
%1Kdmi)B!_(>+kqZe3o[mVY="[k(9C"A#-Vid(?Y;)D,P#\[ZnVr5adiUf53X>Oq23V&JlQ)_7a4I2RtoI0=*?-'g?7IBjJA`RY?Y
%Z1,5s!ihkIP9`*h0d@U<s)#rYj65DJ+ge)f<dG^].QE^"Lf#r]h$HbGdb6%\&e(QJ?T'"KErrJB87)oZNRW<r'pqn!5]jh59cb!1
%%$Z4bp&].A>q1NK%HO9Y![XkO!;(Cj&m6TT3tjWuobiGp(R"h^2Cq-[oeNSjTK#g?`1ebj3,=6<%A[8EdGD1[#[[fQY#S4Af)OY6
%@P9?4>uLPWU3;7$NhhkX0.T+f,<+p\_-\bTE6+d(n8r,BZ.?:E"qjB;%4gb@n-*1WaJ]:ok6dDB(C_LpY[H.J+rIl-bh+]bZU3J=
%_$s>8NlWAEX!`nVYYupdh-^Rq(H\Y*Ks4F<_qL;(1mAU]FKDY;!qEAT*mg(&9L#lJ8DFhjKC^Y7S^u$kX()I95b,5g@$k7kNhMV`
%.s-_$k/3<1"Z,B-WkLAtVJE7e1bp>3pWmKIUeUp-JF><qpn_,@q7MZIk[nA]^fEdYYfoN*%llu#CnXk'_VLstM(uN5r<SDe,=YR#
%Kp%FtU.eTlWA$_43?Q.91PaW/Kk-1W@Trl.=U4.-iY9Ul`^q++M*))(93SftiQV_:N&5]%X._;?')e@-i91l'O0n5W^=dO0rDOJO
%23O1MM]58*89bKG2-;s$f7F@=d19VHi:##PND>;rYaIl<gDW*FWZL*/K$Pfu1*h^U`'E?P0MGWGTW-r"i[,;^%q5SIZ!A$c2^g=/
%]/?"a6#B[O[#"'[0H0g2L^.)'SC>@SVK6=O=tR2bBLIC:KjJ8(!O_HnR=T55E<(>TUjLujWa5GCP4XRWQXU)Mgp'_&T_ekC,T\ej
%`]@+S&t+\HYp.sW3>JV0?MM[9j&cM`j:lE5&fcDPAgKHMFO6dlOhfd#5VGH<WFWk,KeAX(!^*hlXV=U!(b]f%N*8ajZL<l.V:li$
%MsABNV`gi-rSC-$X(C`(>/(nH*k$=RV'Aik_-P)(*a:OnYj[\cO+[\=lkNV!lgW1$ZcOi\<\V2j_mf0AY$l#I;`G?C@9AS4FqT3j
%1_o+g7-GnCU-e>p_9Po0&cHE?2H=]c&nW1(f3!0J9@FX9JmPF1Vu[&GRsQ&`CqW$>&Z4V1!K',lD-O"hU>f6/(gn$Y*Ee2a-aT'j
%5IK7q,=c!i;&KM7ZG+e2+=]3kjD&_:0?>?)LK&L%_3?)I-R^_%P0QlbbB0kNXUq^-J(eWC]4(6>1o,CPJ$INU<X=.WK@h]f'c`G>
%>/7IS,Kj/iB`aW:`Ce`]63tM-)QC:1_*EfP.d=C(N7ZD;S%@0DB+FMnN"=?K"5Z<8_S7:A!@cC<m"gImo0MMhGScGIkRP-`NOJ:&
%WPU%ZL&TLLlPZD4U+fl73.dDa[DrT)3@Q-^9#8PVj84G*/M[V4\.GZ1=p!DkN$(lQig*O=Z"$^u9J^JlVa`&5Q4^&%!YYaJN\&Rk
%fG$A@"C%AD69nd#1>4EL%7!Cu<^`81,_c*u4qd=E9Wb?tNc<`i.n)])`C_7EV,.P5+Wq2bdIJhi/&_el:B66E-"C'@/EfN,;T0Y!
%pBbI;J.&HeUP'o>:0?EK99C'"K\*IbJn3$p$M:L+bnL="TE]-,TgQk5-^EG<'EA;J=^4XFB1IgFBZ)m1/PbF1l:;:*F9%.U8MN))
%dbG1(!HoE``)sX`@1,KSONPT+,NZ5PrY.]9F%9X0<r,u$aOB!#MKR*#B?'#[1-d#aUi&-u-4VNLfSYV-.V]72q]l4&:?^9(Xn_:b
%h9l;+O>=YgK[PX/'2;8%XSO&MR&@n:F])://6f]VKLD`/BTj!@Gc'%`@ppjt6BJO(,=9EOn(Z9#KuN>QR@6ZHE#a5g%"'_-Pj*u*
%KhT"hkgcDf>-Y9O+b@8B+n+6U8$W_H4V_SrU5Z+"2d"0@7<g$S.Y=?>N+Lk+X!$'24sM7V@dFtiS;^!Rn)NUE,7+Q1%8\8Y(oP=]
%PMu70%2sqVO%H>,M/j2MT+Kf"qu4s-g+oSFTlBcaE1s,El_"%CU\_4.H)lWl%DjS#/_MCl9/$K*l3%e8i.>]:>h0`o8VDE/ma>2N
%.]s4"B9U\9>SJ,UC.OIR7^AB)^+d>&1Eao`5nX@.(h68?TamJpa"$#8PRA=^mOq/cVH#)QT)R_8,:D6F=<cc2]0rq?=D]3p;)-Nl
%5;_utor%.`@N2IInhE$X+kpI6$iaJ(5r^a?J*DZ>?]>q%X4SOm_eUMLdj'(c6Y(a-![k(!8/uo+<[&J@&M4p;;!RS;C!d:l>S(.S
%#n=su>$uk#:8^3GTrAO/PDVC&6^B3\e1)u3([A7@aE_SI2Z4ks30ZGei$Ff7=:#58/`=fs2;>*%g9n&U;d&KTG<r4J*VKrkfPRT1
%_s*Uc$@t_qNL-Hp>-E@\V,</5GkTF/$/6S)DhZD+!q4Lr3:hiNVjP^[(C$NL`=,>EQBkj_Qf8<E]M4PKKE7.(AS4ac]N]40V?Ae1
%-"nl\2_"f%aRb,&d*1e1TZK;C7VE/`6]:RE,6PGYgF6P7Nop1;dM'I=TNt):1u[^bnW>C04#BPbk8oe.+u<RYZ\.D>ct_fLoL^*$
%qm:<X@bl@L/Rp#(iFfH0^Q_T>=KS]ubt.dC17U8D:E:QUWA+FGcJW1!%RcR60g/@0(pu_,keDYWjAOb,m*QoUF<!DMaibAj]e,#o
%QMp*U40ql6!R`CJVkuf6'-#MC_i=mO$*'S:^*#/#`(1D:hkl797TM"W/^n1.eQVdI-&F\NXe<Wm,"F.*1EkkN?n&(.:dO$bMM9_i
%)L@2>Bs\*U?<s>(L_SSEFbf<:OS!l:_p(r?fEdudNBp2n7(I.cS]`Du'[>RZ!]d:"BZ(47U0dCH`D-Ln9gP]EHKGr5g$+ROS5-#R
%[Js$10<@&9_dt1+E*FN$'U+WK$kQ"*IB=,:Un@l+ZrgSL[b!6K`;(Rp0T4iAqZ)V+*$6Z9[6pXQWbmPP&@ATsp]U(sBOt5^@u-9g
%UoSHf#;6L(*+:m5S?AZ<:U%p2-0Z@Bd9??uBTssQL"(qF_3#WsM/0BbReY?sD2/Q3K)==pP+'"Q+<$>tDR%W?-5D'9B"8HmD<1eu
%8K/+6`$F:he\R5Ec*3@g)\Y([6>Fn^[k'9sb2"pgj98p3=$GB9XcQ;`A<[BA7,QXd^mHTK>.QatW!b?^a4-2Vg.N+n#X<.5;seFu
%5sh5p1j2@Z*eFZkj-,b6YZJrreK9-?[:l._eSe"<MRRMhkR2VA;DP=EZ)mcJOL*O5O:a)J9bK6GKnhE<D^<=*!Ej10QW>gK]@$[T
%ZpiFmBio5jBnLj<o$gJc4M6OIP,rcjP4u]TUaVIiqASU2[kLD%=P+'d<?>/Ijh%7>+f9#B3\=6@a"cQ"NDM^`La_%^Q"Z\mB29^'
%WspXOE!_Ue:3J:F$_WJ]rA07F'4;DM2Jb)aMrPTd.I?9*qStO,5YrRXlaBai-t\Ej<Z[E8WRWULRc+Mpec6N)/MX_3oZ4]K'.T0N
%bm:,0<iWD"=S+m'=1Qg=83*\lk.kqGe,hE77,mAUFtO2Lj;_R#fh/Z[B9udH'&o;*57KL!7h=8Y3=$ME);W<,L*,:[&7R0(B"^YY
%VN!DLHa]Kb*[X@HCpIb5iWiqCD=,i+fRqA1o@aheZ4j8EYoPma">(pa>U!]I.9U9A>**JoJYVkCXWV;)WsJuVRHuRYI82K1`EmEi
%T1_PEil(?6J5j%@UcJef]R0iTA4^r7N^L8Ii?d-('^L8tXU5/0N+F2%"YIMD*!7,!C3CgNN)O'i`$5Q,rWq:63mEgT,-'6%H]m>b
%LIK&!5mUC]?_[f3+;+0@*11kaU1B.DAVT&$eNf4mL&jf%0*H*m34CSUP4hVeSn8DVZ-^c'@Lqe.E8()Y$l'(NJikE]&N=7;SWqJ.
%5qFNN)d1^58+`-Md5l(9_M/W@.*LaH!&'(C5VWa"/(TQ_SeD.T-HQP#8]tjC.Qe'GMiJP^Mjh4tnfe#WV,U$t\V*;PP0auW35TS?
%/A-&$A=D7N$&:3!3s/knP,lbA$;.+cS.RMYHJ_%Q<rI<J9<aJnHeD-ohEYP.EI#SE2"FU;8A59GKZ7DB1)&gSmo'e:OGmbu1_S.\
%`c[.O;)>sRkNdYDkTrZfaD^"$N#dI[WW+:scnO:7Z6VPsKpU;ECg7/i17BKf;7)tb5GBpbW1&s3J`YTB;LChX_,s60MPXJ,gaO[`
%UM03\+'=H:Afqec)hlDolfq5`U`9gG-S]qc8"#_6P&c5+)$:udoUNDCY3<@6TF1QG$I$U'N?N+2)tk[.E*$9INaL6nc2Hsr3iee`
%Lo"T*08d3A+f37l=L,\eYsOFL.QKq:NCs1l>0[s.2228;]9]TQG7"[b=ZP5g'dJNC:%`a7$o&q_e#m9^?!CtGC#iJI=e_OI(M9,N
%](f1Kc_R.5>REbE'7X=BWlO#nnABQV\EX!:HUoQ`W<c;oCW8_nOSWHTP/h+EP&(N0*TDF^oGi-E:UG+q+qOL/VM6>eZmTGNWW[SO
%,rB/C)tN$_ArbNKKc^g?28Q/]*Y1`?<LT2E*=o&cgOu0jXsJs^>9V%FN!A$CMC\o<Xsu<#,p%sb1#oMpPe<Q@)6`9RnX:1F4GbAq
%SdH"CNfbBN;W1cIDJ"S/YJ*UP_W10^4\WeJ5cU7=<$NGHI(FD$-k.6G[&BfCZf'6&:0gYI#:%B8[cbHdN-$>O*-0uRq/W-?.27$[
%O'r`8b^^M;]r2S%&`sl^9&[O[<s[aQ&cEa"&j;i'IMZ.L)gh-;FL@;mD9.,Qc/>9nhiWm;XD3IbN^3ng<g`=m0N5t=B(Ulp!opTU
%h@VfrYHZmFO^tboo%k8:`=/2rGjc(35igWM]QXSBYbC;7]QXSY_qoSf]Q^IknD?ib#OP(!lOiGgCScETP2<TIqACgH*Vqoi4u?f_
%CU'02:TT4n6t_*qUO7:TP0bj@VRqIRJJQ;KFpAg3JW['rh2tf5Dqm^;Z&9&4<oLUlN?[AtQ0Jk6RWO0,VRm=tKLdm7U,uj7_tfDX
%c6*RQd!HqI1WWtYG//3d*HK-a(bsk*L(UO"L$=WHJT?=aF>o9iRI3IZ;pTR+QQo:M@B_PbQ'1PieXZ`^-`A0a$d!gIeQKEMHHD!0
%:;d9d(UcE^$a!^"mEP\ZR(i6Tm1*$f+>.b[#*u'k^8JSq6n0<KFEdPjOAaIuG@q2%TA0e0*Q19!<9W`Y5S%+Y4l;eRf0-+rL4"1L
%nP>tL/)M@DQIsAXq<id)KQ<_?h&QKf4K7*Ch&TmtKH.>fh&5csOb[krG6aKa+lcM43smrub'&O^Z4qZ0FpEOE!iK)13s0FMk!)@X
%GD7]`oW=DHcB,C56/"YLBAh42!-CnYB?1Tt6;Mf<$3Wkq]7ZnZrk"ch%W0k:OY:Np7.h`ciK3HPOEhBeVQekgh2N\'L$am`,2h/l
%ZeZeLMFuAjG%\lO9[6A/]0j`+nFe*<4(,eE6n$k3+m;g[4l%-Pj3V^+VRnW0Sd2oMTt<+@=F4Y6m`r&Ne<uorc8]ZMWH<?GGR4lh
%l0^)oT\@cAh(e)/r<h:"\r3(s@kU;LT69mnm>b#!jRF.nh%>d$<"mDt7r1U@9+'FE8?>sf]+Zn$l:Q9PhlG,[a[9Pe(TL1[[\1#E
%]"@qL$Fu^Tks04AO%9ufB$r+^pmCH/@uRUmCj1WU%MCcNgDslQECGr@m]a_7f3I"sd/P<giQ?=VM2qg=BZ,(L8n86F(UcD5EC`Eq
%Yh`H:TqWX8h#S;6FKOr`mXW9to&df4-X`+n.bbu[,_\BWqmuje-5"D;G%]I4'B0ATST.D7H%kYr'%8^D:NpI($:B/a89Y:q/g32&
%FE[jB,C%dqmLG<eK(E:3mR2X7$f,+gdh1CVJ09NKYgD2,X\CQ[L$fG^<mZ._FE^R*_R*2(m\';F,r;F1_s'V0\Oq'YL`r4uT'jl8
%)DnfOFE`Ju%L"X4&faXZ2J.s4mN@ceX29)$l^/#/I!7QJLe]tm]>HWV5bWo#c?NQfY0(s$]Q2P^M1l?ER:>CUmPpDHoI>64L4Ij7
%=lHuFqBu#Ajh&E-/^&R\G@saa:F<EbG6bIpYq!'Kh&2U<:4M!hh'&2K>gIQu*!$AD%*@qqOgCd^E8A>BBXK[Icu,hH*ge\2S^:H7
%T'-Xm+@aBW4En$o@^7L@G?f&=p+1DA#e]C^mU@S,F[M$JPg#htV)$i"kEY+(L#<H\,!2Gfr,tW!YV3Z9gR/7n$]%94kj9L)_0r/h
%K>`ji][5E$VJN7E]cG%O5#n;c1IrYpq7=r-5p0_#,C2FF#]lYmh%"T5M*VN[*Gl^+`p)1DJ@C=IY=`[K9'X*OgTA$VG=>!X]7CI+
%%SaGf[iMPZ;A*"W4.)GQWn^71QFN!siin2i,Ed\@b)*p2Sp*qYa_pSk5oh#/]&J`Y;93Mq<)k6GaMT/Tr[C.`r88/$\Gdf*^@U<=
%FC-!NUd1*I69VXqEV9f>M99XIa[r441c0YXjN)M1&[NKdRg-NKQAMMIH=As&qEfsrM="\hG!)i5YoW\^KX.QggVJ%BNWi!A@QT0+
%'?!:am3#4.Os.$"l',;T1>B&Og@W%$VQa`pH0t+D,dFAnG-"UNZ!c1+o!3)U*AQ<RYq?7<1YW4&ZZ>%3Q6oj\VP?ZE&'>dC4'[U/
%%.?mF6m]8t9^eem?9?%M'U,,G(d^lbKb#D74'Y=g]^jdmJIk09_J<dTGMqHfY8o/V&+';L6Y)!?inOmESRJciltPj#=hqtVZuuH"
%bnK&:B^JKmnuoEDL'S0dlY5`[BXES96u*#^@ipue%[-ad[\pNc7"?"A[!",T#Y7j-m3'd\)l9qu`'<P@ER+_/b(HD7g)4MMN*W-b
%KDhZ](8\Ek`!Cp^db5;F(3;X9[52349*KDO6UL(7@)o?lLm9Zd?Wlcp/('/Q=m]TuYeb!HCM*oSh5-^oc2`L4./#)EE$=b?hsF'X
%9r$cbQ.6?WJ\rq<G)!N2af_l%nY'LS.BI^"HAEYC=R?MOC<[*b*PPKF=ph7"T[tr12'fS^=;Zf$W?'C4Yj<j=*@6\k(-SXfWC5a"
%e.*NaS,Xt;*MW\=Bidjm?jfW+\<,G')!_5`pQX1QO<-TfE8!VC:$=%nN$T';cY-qs^hU^nUR`Q[Fn@hl*T#\\:$NV`n=biGa:0$S
%.&LT/N-:GI#e_qG;:>9I_Is1\]!Y./c8_$(XZ_erL5^9e1Bh&5m>TLBJ#0M.THe'Vd>65r0L6:<:MC(.PO3X\duN#['lqN4B2G4&
%lC++Y__[f<c8imM3c0Tj;;/iHONNtXBkP)B]$!][B*cm&bmL9fgm`]F$qTciWBF)W`h[bh$UnNu[=^Z!::]<)iWE1)gmTHk4,>c-
%XL*/4#kN>8[3I(U'.tM941mH@`=&ji5)`e:@pV7.7pa@\p]n\p;atJcf+.O!E8HE%%Kk('(A]G]*E=A9p^4-o#plK4UpYi^MbVgP
%g.CM4-ai!n^ng%Ie.,-BckT/f7sKFt'9>]OE2^$*W05jhE^m(V6>C.8aW'USW?"h/%Cm#XW?&u[Qki2fFs[rm]Y\E=T1Z@o@C8H:
%Ns*=0<]dt%dbcLU*Dd.i(fuO\KLin5'k08R.NE%H[NgY1>dm=A#CF?I_2X<=@$a9]_a80pGb5P3'k08q9b8Xi6u9nM$l4I1@QQ[r
%n*.2GCr\d`)6aIQ*Vh+8p<g/,NDHCe0d=&Y_.<q;=,?5Tc66=i-+7<%4rMC2`-1A*Vt42Nm1>;8!Hh_&fZpdJ<\n&FYoTQ7N)(6r
%4#ELlYG)ZaO[gUHB5p=U#I-[u$aZBIS=8#QU/HqH2(=4oAigpJhRfB4c7g(&@aAk'#gN[uD8^6<5qjM6.C1$D*2p#1b]\ZV-1c@i
%[UWF$EM10b8,2VM[@n<U"(=Ylp<1<h#78dt.^P\Qbqo8VA@Ag\O2(`DZQ4T;cj)I@[NeP!d@O2i5qmD.h84!KaX97>LtRe&+0eI%
%ZQ5Ok\Sam\G%_uhY":d_*>*sVp14RD3)Us]di1$r&V5c5JVDd;3+!qL/^/B+16UB&RI*P_5VCGND9#s'ZEY3`41n&t)T*`-*W+YR
%gJcj8YmWbULt[mE,b1JnD'tM-H>5P@<$XhG4$r`Kn>K7>&VWn<]8"gY&@\IN;eA*jT*s+\@CB[0OSE]\Ain4kkfUbY-e'>Wf/)1?
%)XP!hYoV!?,P`AgYoOq/l]g!2jn#c,7_Ep27\fcXGjPdGc#A%R[Nj68Vd[M[7hf$6N#$"e#)auXFm]%D8s\\'0\b"(/-L3fBY(!?
%led#'4)mO=5,6VNUpFK,=/!&I8HI#78(;]Mm3jO6JiQ6G=a%e7\Xh)WF`)og%Nm1dZ)Qf-6FE'_oQI9TJ\**Mn(g?$+>8&7,C2F\
%D=OY7]q#Q][^+?95qffK9ZaT^84(8S[_coP$7":(L#%bW6q!4ZdG'f6643"BhN#N9D/"]<Pd*`%ab\f6^3$8m4-j["p"(dgoQKP-
%qXB.67-X+0Mu5%(n)s`5^Al[D9Dq!W!J9dT]Xn#%J'h!iW+XFUI_>S5^WtbE55sch2uL-crpBLWh:pQS?CuVUr+2RO>BJ+35&M..
%J,E0Mq!OK05C3(o7qV;e)uS4lIGWtq?h(W*PQ18^=n^%U0E/QXO8j#30D"YHqrZq"SgD=n&kmt:qD[&-lq;goOk7KtWuSm'0tLHc
%gEdml09`#\mZHjTFU7WI*R%<Bj+%1?h(B/pK+JK+?skZ/+ONFbQT$P2qg?SVkY"F^MB'=g[js,b(l?/6r1qL$:Bpip:?og`X]3%!
%.4b\Zn._.+GRF8um.sY<>^l6f>n_K(NE='*Q"$Vl'Qa.DJ\R0h.\Z]p9qE/23JP:7MuS_+M.)=HhVlG>4$V:'C*]t0^Qj6LBSc4B
%=5Pn]Be&T5nd-@3JXf^u>kR!.hY8AO32;NDUW()(An''pne!D@;!%N`6',r13UR=3S55KimKVaK7RHb#UC'_&UWNhZ]Cn!d3X=8C
%7cjJ%THNQTf0e1^o412P7#T4$O`:4R^&5=*Br1?>m:B8"04Vp=l/a[*gs6:%;WkC`2\qE\VTRLs-M6S?[+]kP\^cU<\W^h4hRjLX
%=^K*e[/-t'g%1Ji=7Q1UqnHKESm3gR/guGY=Lco+^\r[:c!;]MUPb$u[9l?20&TP(ENhaYT+Lfurd3ZGdc`YgdJ<Y1caWg5b?obs
%dJm,knhB>RCW);(9&.gkN!?;#N>5<ogo1XD<-59L=QK/?rh$EC@/4+#G:B8OHTN[D>J%Ae2r,G2LhV6T(!5#+ho?g=>@t*Erqj/V
%QdH]g:0/@Z@-mpe=S%90d&.@$O!7!,3)%"8E`FiYX/fq4lHk>Qd/VS6=?]n/:]T/+_g<3IL3n8%"4lmGjSccI1\g_7T==*IpT[Cd
%,QIQ+^]3EABBT(k++NosrA..9:VZemM_D8?0)=\8<IW+UICAq3T,6[Wq&c6j(VDs/iSDcL/^<[!gg?\T??>u>m/5u<;VV;bq"3Gr
%Du+t%J)1&!B$#Q#,VPC3)>Fl_MgdiMJ#?A]?Cq,jqI[ond&FZ/^HoF"O$!3..3J0-$/b:!rVhIW-[`e7]DI8^+9$&$H?4K,mdaq<
%`T+"9,<kms=54sK^HB,R45np`=7>E)Vequ3c<fA?T(#<th6&s(o7-Z:oCFoE:VJc3J(!#n$/^Anr]';)pJ!"n7npL?'Ri#e]DV9n
%o"X'602JM4a-Gt72:4AOY(*tYj0"_ehjmP?puT@uI?)#<>;"f=I!'aVo(-mZAf4pfb:.a]SsRRimZ3Q=h>(4Hju`C3bH#Q"c>HCd
%WPQF6]]F9c4$0&k=ei#F.[t9^?uGjn]8s/WhsQr?_2I27%m-2RDm/#'T.^.aIIcOng$+/7i,ZsPE4PFPmd+t`rYU-?h;*j&*U1CQ
%>eO9HTA3[W:\^7TdN.eCk>rI<Y25c+9\V1\oG08.ms]g`^KA3RHoATWHfkXYY2&Bdc*#h[=3f-p>]Va<T:J-UIIQ;EXO`$qjBc,a
%jB">@o'5T/m*!Yfh!E5/^>/(uc+_s9K@E+7?ga>1!oD_>O4\N'DVDrg*)GaBq=F1TgXdf+YC;m<=68YDqtC4'rWt3ngRFO:/:Tk4
%lK8ISk4%qIIFf"mn$\cd^X7,WV%rKdPBUs&St0+-Du[EI[[SWq\!L%=W0]S.Uo&OWPU#JT%aV(fgLK][f@?p'DjNDlm"PW!lX02:
%%W[n3..)9VmeYJUl13TXPOg4(RITCN>&NLWnPQ--H?F[ZrP*f,^"jbLSY*YlqaS,6<XHP*1Z#iKSpp?MgV,\dW9j_W)^#%Hr8d_M
%e`GPTPKPC^[JlA\I:"f/"98#>2cl?hH[T<%P65qeZ;]O8'?96c-4J&sm*N3PPJ1M`,8=bDA5&%]m*`oKqWdG<k/F\5f,l+'287VC
%qEiN[K/@m$+$=n"K\eN%n[m'Qm.XC>1nWr[=cRpZ!##dKT;HFjT6@_G-6-keD$tlQ^;99G_>KLdndTKOk@*+hNkW?rqAacA8b.4u
%n9]X3Sm7oD]Y7M)9UV9#3ZHDkDSA:pgZfs-LZ;f(_=rfYhFE^pE^Kf;]`)o-OZZ0MBDP)ERe-'JD_Y>hbZ-irK4kq4B&>shPGVm:
%MgTt$9cN5/PqkM;\iN'i?7u7j6JCk,f.i\g$'!cm-SNg&9j+X\_VP'W:SfQ,jk9IOPgo7iH"I^:k$W58;\n$gl]4QB2m9CA]Y6GA
%qJjB/]8(:Fdo'\^o%I%(op"/1Vf_dZb3QsT6;O;@oEj`_+"$'-%VL:[TM+=M2Y[;S_+pGRIGYmd'_CTT]DI)F@Q>LPVOp\+4nn[1
%4anKdrHl/M%cuV/E.EOWoe"&b2RW9g[nRZ7iY\5n1\SRujG+&bl<mB2.3EUQD7,RgpguiRnG2C6bKK#C\'+C)l*P]YqG2;-I@j<V
%']/leepk!ce)lRp[r9Pf:6ud?bF?8<]K+%XVcf8a/Csf67Xr't:AMpZG#,YfYEd2cT2$'::^<cH02D**-D]Z4_HiNa1P]F:5=a2h
%?Z2F)rRPnNk$m5WqNPU?K>dYS&H=^,'fP/`SpYh+KS$5iX,AEl<4m$KF#dYYDm#t-6W^nsL1Zo$2N.ZhPA*YU=0C<.VjsAb/l*hD
%OIr,7TDnLu8h'8fd[dMF$1mb/$=]*%[B%W`?IB(iqccg%^-'"fqg$?FoU#"2X%pri3Vdg7"Q`#6k2^jJnK_3(lB>OK/>7H6G()WW
%eFe35+*2^M3G$<`"8^h*Ke9&g2n4*6T/FHB)h)+=pm:o;]>&<4rD#M6PKU:j8b;Mna*N@c!6k/<SL[S2_Eg838sLf'53>\Y(C+3%
%12.[#I:GBRb.uK(</NF7ctfdQfmRi88_9\1fhmNFoGi*-aop2a5\a/f`'HFuBC(+"b3;j)7@E^$F"PO>Mt/#dRjV?s@X\Qi.$Kn:
%hOdPa/]sZr$WC[":b:m!Y=4j9(]1qsT5#t#ku4TNRIW(fZKiSf965nH23[1n*a3'?F*ZErH'9_jk*\1k`/V[&LdulO?,".=_Ctib
%hnK,BGUhT8E.mEdc`\c0^I(<`H"u9iO,a"B;oO&IPaP[Xh++Zf=g(O:Jm#;%H>V5K#GKcKFIa_a\MfpmqlJA7=JW9(S$guK[+]>t
%c,SJ=eRkrW<4(@5,P:pEo%X%",SPpj\#*[H.KMMIU\eu)1iK,q6SNGRGoMao9P>2M68bKboJ_s@&dR%Vas-_2n0DQ[q"<<)Qfh_J
%TD\Qa%XK2jD(VAc^0JB5]A1\33N@aYZTPeo@M1fBi7_I2ob52/H2@eZ.!L0d6"-IS.2+OjU$V!DSfelmp%%*WlfcZ&.!kuLEgP2G
%TL^KC;0r]BR;E]djSs*5q>W\&J'S)k=oO2qj7KkJc3(Tfilf'(7Ser@n,kY]];a,I6o9?H7JtUukP&)u^X(B6n!j@6fqZ7L.Gm2I
%&!/p-9uk<)`LEp;fan,Jh)7Fh)thl:'uBM4FU+lL-H(aiR^-FPg>RdS&?u(H>>Ao)%=X)0o7V&7<m!8q#.NL]YjFMBhd?p_<uoBH
%38)[9qm5hRqX!A;`U[W`;1Gf_j<K4/5)DYt&/,ZMSD1U'Dsm7eo=oAGpV'upb5^l0G];Qknso_CK`(;&jMI;U^Y:tdcMp)N7*YPb
%3WH_Wr%G0BA:SOgfgJJRcM?mB-tpp/>BA)6cM>aGhg=+S'<KWg=0LJo>s?$7bU1TrPVooCMk+#,;`E"2'7o"1=7>FTIU/P;?i>$>
%Vk'IYq"c=EnE^jnU(b7Yo`mRb)CDERGLs%(+#7uq`g?/)mb@K"<k%f:3g:t@d2X=!,@kkKluC>9R4`ZCONeBC3C5XTF;%@#_[hrf
%7K;&%f?<:;BA#m^I[1N(ZQHA7qt]UDI!P>:p%%3W=4\gd>P$Qir+m123tn?VbObY@M=IIZ[6$I'gBlbZnipb'mr#T(o8U1[\T5`!
%RP2r'Lj/r;ZI@Nl0>u7_Tk`s;Q[Mn(:H8&Uk2=-`#9Vg:=e96#jSI7b#Bj&f0O`MrQes#!]De#-hH'K]J,8>tCsCi&"8e_7JX8Cd
%1'_.J^rm^BR0,*`i+3D2gj/61bT_TSNP[CK1'_.ZfE7ZH0D>dclqW$mSN<CV#p=Ys%aRF2ORD5JmsRU`WHH]S3OFW5%iOb41EAC+
%`"[`P)/NbH^1#p8-DgcTloWk<;e*P/?<F]:kMh[oRQ*ODq>0/gCV5'Z*;<R/c%k>.beq.:N_]\4BtBniqfD;!*q4P8mX!.&#Y\#%
%Ja"6I3hn@QkY&NkVS=(?U2OD2]Y+)P-E29*?25.1Vrk/[]eKg'^7BZR;<5o;3cn?BoZu>FXXW-]JSgYgmJ$>,HgPtKlIFYN%<fY^
%o&W9)Ht[m+.t6OId0FogfmT=7^qS(;,Gma:B2W=Pm1;B:j-kJ.H\K1?:9,A7([gS,HY1-Jc^A6/mEgHRp(:5>W#_='^CSrRpaOt\
%Qa<$Bar^5eh8_6^YiR5Ja,"dVj+)NGK9'NL:EYZPjW!>A`nl$QLUQC/35urYfXI9:ituhWj$;T@^CPN%*nnl\Ub\dEm[p%6E9YP`
%ar6<fi/7GOnojillfEW2>@*mr0fW7;hpo3,:'`%+.=do2G8FVWhOOL+WJPqGnZG(@eb)L_L%?t$cDIs.aRAQpY^60e_&7WIF*;W9
%/_DrgGMp'ISXiQFY0kes]VD(0g4.716W4JI=4^Li;lg^?[_"2\^h.V.2+=!>mHuKr,[/V)QF-=;B!A($RA^uSl./;4#@L,%*/k-A
%9%mS?k<?+9NtqHcgUlbnhOWi750T\X,V*uo*Uam<jOS5e26Q=%<-uA,Y;oE?-'Ieo$GNBbbat/J:&0IQfP;"ln'e_ji=pY3L<0,D
%qYu%8Oeq3=H+LieRlo4s-lbIF2Ws"mnMb[&"`l6oNuMU!]<k?Egm=M-(1qK&p?#t*DYE5d_\JWR\_3IA]t%@\\I!`/e+_uOi"4,X
%gcd]='.3#&S@Q2;C3Je6<AD_ch!E>2mbE9&F5]^$F3i&DE9O0I`9bq>K1e.;q](Vhp]%D!?N,1t1?JFYlMfR;A!WM?oZVgo]D##I
%2UENO%G\e[9$I't1TnXsi_&S,j.;;%H5M0kh*_@kZQU\q`;f.Yo97Xq5$Nj,lHRH8g!-`#CJqP9mEMit;o436h6,>b7)n>@fgc^j
%k>8V7T<[kqEYhH@Lo5L_r6D(-#;]-\UXe36kjeJtdVVdO02MBlT3klec[1P9Ykj8`/\&n2<8X:=9JUZY=7>FTIX+'_M;VY'cC`p9
%L(-@bo`r,*^'U&MDr4j83]UJ@S[S(MZNL)o5%??4mD5;cdi!A%GecC95TEt!kJ'_"%hGi!fb*-hW0<GF3P0Mp.6gb7gsu-q8acYC
%kHW7/0@"5U]U5!jro7M&#aN154Tl;DR[Ym]feV3RY.YW=n%i*2':amLiV2i(epk!3n!e:[QacqB5Mo^O0(8IarD.%#BJt_hd3tH#
%U'H11DflR4Zr(p@hY95uA*5o74ceMc\e-b(]AIgI-62)2:"_3bm;Tg6q1`a3rR!S!rVhOgi%UpEE-pser3Yj[d5RFuT-[:2^3+`A
%GQ6".PO#QEf,)V%ZjR+]5+\D&I!p%DeV0M(a$!I:oAR2$o<@\=j-4iApVV!^T%a'_nX^fkHoCEmRetp4NJA?:T#h32e`_8u-%@oG
%nYgAGO=T=);/ea2GhG/u;[tS94EJ6]^dKt4d=Z837AKn9oVX1LHNs;d.?dgc49UYRpIEhBnups-;T3d7gAU"VheiK(b'd:JDEYW'
%X6[OWp0mj#-D$O>pJ`;"*krq;Q[@rS0f#=`"d"[U'7?Xi8'-"g.+:pTkGo-C&%g$@J&!0?pFt$ejAJ'iABC#cYX9l@Zh1^s6_o/D
%M37t.S%Vl0AdUWr6/'f*M42dcG\F_Qi!ntLFKf5VIJ7K%rTCNQ7geAu@T(i2-A;56:4>00rqk4?j65c6br/qgBna(rr9j.JRtFZb
%7qp@%k%/]qbNpm;\]i:!bRS?P*Ug?pKJ!a<K)^"BEr#FZ'IJMs>k@]rCA-LT]6>pL*;J1*MN_c.XX-,c4uUXq9AVis5G(*/pKatD
%M<3c^=?b.Pglhm*?U"KKdsV1nbEnJ&M6[-/pKq64I\#poN1jl65@4>6FufJeO$EL39t:f7n_7D(I^hGbmujUHlBfJJjf=k8I,$8:
%s7i@$n_Gi?J+ToA?aKM7s&H(K^AAXpq`jmPs-701/53DFlf(/.ZWXrb^]*YjO$@rVK!e)lfgY12HfTS@()I[sm\o_h.*ocgNuD=D
%m#b'mNF]:UC2r&YIp^033jL*$`Sd>)e!PGWI=<i5h`'N82RXW3lT;Frdp=qYIP2bTC:WNkS(>=Rq8XQts+#*QruAen!rD!HQ^I')
%M]],u?Ck_lDIN-ns/\6'YLcmgBT?>2D.c^ZFl]%3G<-'$hoC";?%.pe49#1]q2;mNFOB81nG0,J%u]I1"g@D"a2a_#J&TXol]Z2]
%,Su%=pk*9a)]*aU)#4f\LSekWLFtIkIu(V0=aYEKSErA:N==B,)/Pr!1m#ldb.tA=:Kq=!Z81(Yb@$)\fQiqG@W5*QCqF,[qqkml
%`#.;)g>LP#>%OJlpYu0PlTL$\[/U%"pOC3\I^(XjAiMoe3O1iU"1]uP:tB)0D**o_]UnT,`$EC:;!s`93GfV)2#Md^O1P8QdC$](
%eo'3b<i2ctJ(8Scd5S1Us7=LQnq-3!?iU,q7t6kbo%hKM5Dk@pril1cs)"'!2gqA,$BI,jl'UA-ZPWrq6g_L)e-;gL)7aU4LW<nS
%V!c=6XrGQQdB5.^]HZnZi(,d=$^%4<oj:m'N#QI_QTm0YnYQ&BGtDH:]fRu-Ecq1?I&Z)%D3)>J6beeT`I3/`'A%8WkF9%^eBZX9
%E&uX.G'*,op+i+]iot\8VY2Ea*P\]L@dl.M=Y]FAlP#q;Dj.>^rXW.sR&2Z9BDL0TK0m_LcF%M%ehir>O%Cd=fU,1^RJa^2nhY)a
%4>YrpCK6_^kJe9ih0)<>jcBBnY5sh%A+9<-ZSKb*g2Hm@<c>8R9@DoB+1o$B5(3Io*`%3ecX.a*VTZ`^i@$S2n[VY$ruK"D(ZafT
%?/GsX%r/lSlc3*Z=YUc-?M$b-]2k2YaXbOraA`)L`n>C,`=@d3c!TSD^^nZ4e8oKdFb>N>%J4ut055f:^-R+qjE5uaJ9BA%f4L/9
%QF1R'(ge1tYBaEC`\K/@?S-jZcL9^)pLZ*Lq/"(-MDi5*Q/=O^91,3APqQmnLSN3#S1#QBZS1i:aP.u$Q4ot:O'?E?_p_g*\")K(
%A5_FPpA$ggg:Y!kkF>a`h>)SFq<$#93Jo.*f?a$"kP*-fDK(-t]mLkGS,X3q1J_7jJuijVIhM>%q(AjIS7rpkRs4X)RpsUVblc<M
%hT4u2cfZ?FI;UqsN`q@7N-Pqe3*tA>npP[@DT4<Z^O4q;Ban9hE=0JSh;ui!gXdfkQAZ,s%Y)E.0T3^'H<Sr9K6>YrZ*mqGbC2"C
%KkhmlB[gOf$<s-(V6#lF(GFD9i4-a+4BIG;<[u,(C&Rhd][`2<]RrF`>:X>Z?E,$$/>'2,NNo#+H&9#%HR7gNQ$DBP8Uufp@J<q`
%K4CSIRh)OK)EAa2#i,FTPfcWGM<u1UF(ME6^GS<<S3.-r0c]HUWVLpFX:P:^].@rgRJ]3n33gYqI"6M[bGi>XY&#k_Q#@UGC>n7E
%.Xi/+s7-R^bHp=UTADgB"P>D2o37Qk`@MdJ`9t^P2P7sXI[Lq(8U5^T2!:"Dqj_I#r>p8InY&-B>@Vre_][/MqqC"Ka%"-OFE\cN
%ZIX0l@7,]W`nG1SHP+"0Mc6_.SLi`(`N^;<lV4gDo.h4HEpX$;ggPQjs)db3RYI8VA[+(MlqV-,-SD]:CXcr858Pgp?fotD0_u-D
%M[;='hKkqZWh"q>[PFhO($?sj0Jn%s`Be%nq"XI0druVc>i#$P1KA_WBj!RVZ\GN=)T(Lu0ooAuq1f/X,B)Nf+%3*@eB+SqfWNl+
%(ZVG])b0.iLf53D\p1hHRZ08Z,0p%'+C9C\EGch:0HYA1%-'RcO1F8](>!Kc\d^eh2]C'.W,<<1DK<;T)pI<jj/]5%RKVU8Z[XUR
%^Kt6]>+XSA&F4h<>eW=-2[_P$/+hDHqtfC9ApJh#c18o][l;nYMSGDn?@HWop_NmB,$3["h^hRKV-+''4M!uUmJ3.m@H[1ZbOsQ3
%s1A2/De%B@#[$!MS&(kg_$APL/s/BsbIb*I)P"K^*97o#eL0ZZ<;kZD&N09k.3/-7GAkf&k=FMN$(N5kF!U6(7KVgXX[E6HL.Iul
%*!p]l'+$L-F!r`%\&*cN!rW?7"XX]#_(g9):gfY+$;?(Ki;K:[+V_H^\JbfkCFJ\7,(V3B`^lcg[R:1.DiGumEOV(GGb7O"T,\.W
%NT&nd!c(c;?'!&aYt!g&+;1UR3IL4KT1U4[e3K["Rf\/)++$-?Yn@;;Ss)F4R3R9t/J@8*70;9b$(N5k%hK'.N`\G\oEZ=(l[4n/
%\m"neAsK)4`qG"S+eo>%n8daC:"&">X^qtX!AS-52#Pd5<RO2I\)X\dNLt&'B*IC62E!Bqe+DX19rD#l$p<XEbe2U+q4GiEP-QlF
%2H-1]DtHqo(TSSsD'uZPh,9H<$DV)65G'9JZ2/Krll3sQPGt<]"(AWiW`bXsN7$6lo2KMl0^EMbJSh)/1e2Db*-;r@hdCC)N!\NE
%fG\\io^auqY^-P50U3C6Z)`(>H>S2$q+%trNPK?P"CHng.ANC'p4aa(,0ksT2N1fSS#.!W-sAGL64q6eL"R#0H<t/)e*E9d$<<jH
%fPT&pX_o3`?=eMgamok?0H(kIGqL!Wb;UBMjFPdB<M#Jn4^2FAQFY([:9-%69`m&cjD:7\"qqe7)<*!Bd?B@+d2pT>*/^\[%?p1Y
%[^X5^IG'H>Du()7(iQR,ggrB&`aJHoR%:Wk#KpXF0\]uar?<=_0"P*-m-H$a7@KPPm%Y3AcL[JhB$8/=h"'e,'&B.&kMn"8DY#9f
%CjV1!f5D'5%g0C,T2nBd'le\7?7>1`r#6Ta=:HGb0BYp:8NaXHl`3eA*NB=DVFdHh@SdTq`RT\!/C"`\L[k#2\<0d]FL,W9'I/MA
%U-$fMO3@QncWRs.KrV?i4:f-VFV;B>98YrSjlIqo;%DbX!SF:>^%pS1Q",>/fuX[IJlHIcA95QMCUGT<&[lP%K<0le^<-g-HPY*h
%&c0YkG"dng.VoQrRK0Oc]E,uW<,l[<%?daH&DF.eC7me,N9h4Z.Nl=.9t.!dJo"I&RpI(2)^:_"X",R7fU5jc0WYeq14)DXfd*LH
%^"@Y9H*Z%eeWnT.-,ru>=^=HRKqS3:HP\96J!0Km6Bkld\5`Q@#H_[`esGVmaNU7l9jG&*[MA@bd.g$nC:^/#92$Sb+$oUZKpdEo
%QZXOQ3;_hb`c?^ZrqZloXs=UZ)*MUFIZKnMS)p/2QkKdI,%44l4N0^?foSat6*ZSDTPQcRT[rW6,SHOtM1kX0M$1<"7)G7_r,%:D
%[KQ6_D2ABs'++''7)J$J*`%3e-5*!%Qq.MIOYR752eNcW/XZaJ+d51?F*F%*E1]gUS"*'+O.&Xr-)BF9&*\j%Q&r`E'+%oS%-bB.
%1'p.o9S+3o'(5_Nj/J*)9S2Lb$$OT>r3f:Nh3:L8F!b>@,Wnap1&M)OXf>)uKkBjbM+jmKi.m&(?eRRKO!4Ag)7iq6\"V@<o.Hup
%Jf=0A5lQWtO0H_2l.XD*]=ceoMD''bIOl)i]M(AC2FVE(7aG8c7#'<4.b]9OY=>3n*m=8XN@&r<7?dXO(_M2(2(6ttoBC0SX5Re@
%SH@K[0]H%M(kj7k*iq"5+Q"<2lW2<-CjD?`bKHdsEtm#9.rWgCAJgE\]@a7n8$CLe'10XO>b&$?3IY:T-0o(7S7=UM*(7*DX;*A-
%@\a.<IcBt8/(uDTlA2=N(Rsl67qm3K!4M9rD&6A"m\8MS<6s8SR1B7d22k#2C[JRNM=51Q4luq+[p<cW<OB/AI+!G(-epYQ.np<:
%GQ\!3eqhoU:<>u]d<p`e_itJ5F%thU]C)tk,'#W4Nr5md_p=-a5\Ij1H*gW5LnT!'-a)A+mccM[>=Q%pT4qb@f3@AjYLi\_8YLs2
%VJdX<gm7b'r&3<3S$0d`b0JRWrpIGfnV$e^r,lc^Ga%ML<jN<:@\:M.'A(+pEP6]t2=[]Z%@pgt2=Z!>#Z;@K:#&'<"hSsP1s3,*
%^#P$F2R6'1,l'ke&?N!;3%N\'?r,?;!Q2Vah+uCa@`;k\;8Y(u7G%4LCrbUtWbT&1B0Qo`<-_YE_nIUE?e'*Zcu#^rfMj_uQ"XCJ
%LTDGQ)E(,[H9Kt$ldS@3->"eK]im)87nft/K.K\JPG`]m]]:*a#H_(FeZmHc]3FV"6)LDMFV\K7_YN8KU%PImX#K:<1CpLEZ9GWH
%TgS+i1fYFhWf6lFX^!F"aCSr4])J'MasamkTrH1JmImrqURF;dlJm)\qY9mi<9fO/qs[g1++@D],PfTpO0Bf%+_KUkpJHFTP5F1F
%X1=:qT)0qNT9T3i5/3FIDXPCQF!'KI7_''$_/^X>DpEd\_&ap;dX&\dq9?G\ZRPXR2V>,Ap9XGILYn3j0^H91o).%n8#\Kcjuuf^
%>>p$d2>9t'B-m;7b$Go1'JpH\2o"3/pCT@G5$!Cc%>SRRpYe'l52pnVUS",irDcp>+7"8nnG[4_LX1CU>FHs,9luUP$33MrF]%ec
%Ib[@hM?l\n&&0:`iAW,Kr.a9f#*R!JO)AIq6d2jdgdaTYK-gpib^H;W<`mUpCu1&=EZ_Ec\W=I]6J_%:)0k)p8#n'E[fr422$FTh
%e47jo"J`>.1ETpZ+/mPcR?.50om#Ip2=H*g9&@HLH3ZkJjf[`/8p5KAp[C'+dJ$Gt7D$*[@T*@tk=-r"a>S`]<SNL"Z/Rp*6a=IG
%:4'pJp?3GDSDTG%#_&07kSkqW!,NtKd4I6diSudlKLq^C`b]=]fUTP"#)\lCn@&Iuh"B1ireW35PL]YhK1&TD)q,j:4n#(Wh)Ok#
%%F:<PLFUK4]LUV9pIJn;#DFG==#q`nb[s6!6ctG/H&oHYm:"a$BodF#m4fC@kWa%C,<8Iai4,8<Jr#&t8#nY+]S![@4uuDc=?Sk)
%o;TbDT.66>L.*BZnJ`,`[rkQX>$F3`Fn@PmUT?ftY7q7tgVnf7gegJr38^)lO,+G"SYKe*ZSHIil"Za..9$8:Ce^<1.YTS]O+6gX
%K?EsgU83"imJ-Ce[I1!`G%H]*YpOYCa>RbmaB%hU#gMK4?b?%WNN?hQN\"5rE%L9ccJLOcCNhkSrGEQEG,rgU!5[eYWhWt.9e53>
%@rXSj294Ij@5USl<c<Ib,-IE,g9_f;D`5ASg:_9dE,?$HB]4\Z@GWD,p0AmAfD_B$L9IduY3)2;\Rp/jR@\2kT46(;%)Y3=G(sFs
%@@1[Ejr&o!L1*9IP3Ej=GqPM6[$'\<p!P8:D+tZ?ahbL6"!oHhB/G"$:!qHl)g@F160n)&1BhnGTCd"4_iP$2a($6>?34N;AbKk%
%i":TI\Oj6%3[:pA"[jZ/Fk00K(Y\%H=dBi;'pGc!)rB4Y/T5+-0#sh"6i"&Sh.oWgAOeM:i,7n`3Sd.UJ1`(r@l*;AFc,9Y+'#$q
%U\?7TkI's/Z;W0Q6:0`l1?4i\DZ+9L<aJJglW-40`JQY0e?LNi6T,HZYnYqn+18OVT'HIVU9@nLZ^C\qC=di$g/Q[&U*$CUB;E0p
%k+dkBVFC0YTKm$rZIEdfb/X7n]$XbDmU/H#@5/&s7,.TYK,)sr<aNNb7r[CNHb4;3T];j=)S-Q3,i^jAG[^&Um3OT(e/N'u4)IGj
%KB!n]LV!n!R2[.'9j1bqH20Cj+;HEt[8A">&0P_L)TB@&459J>JZReAJR$]qLGL,^*_BV(JM7CjOWHYcSdZgZr2Tb)W!-1(I0Gn,
%Q7m8a0gG>/j2I#rh6RoX?XP#FhmU;ci4IPFiH-nI26L/lai.@EhBooq>Lga7+QYh2"HQ0E[WNL*CQ+d.(+V8`GteTS@rfJVfT<Im
%UGIeI;MBBe!Z'*r;/etl!;8$;$\9P'273%bq/C6IX=t-hoW"iq8H\2^L>Fq5"-A`Mn>8oi=UT_Kc(j'1\4NGU`mN6>g2Q],#0r2;
%CTi[KC.oOqGMZY#/*-j2#RuH^iU#ZYZ,[=b4ELe6Ph0AF&ae:Op[:59lM^kjl_W:=YaX*"pjD[8:<4I;p[8k4g8P7!d"^UY!Zk9D
%pdRAj?XjEs<Kf#VUJA2gg1Aspm;*+UH$%ZoNc2ZOci;Ls\"*)&c#3`,6@ldLL%"RAqA(S3!Lion51KQDPh&>+kKmeEV)H*=UW3mH
%6keZ,r+NL8U7b])U>UYF8V<LC#J<u<0m^.!BWY@:Bk[.k&q:glBeIIE\L)7<:*6!KIK3osjYi9qf;=;,W]6a/TULR7%%l%G!ao)o
%9'hg5IBOir9k;5QM(;eb72M_g1k,C;<E<G-7RtLknR=qWY]*W0JN.JrKj%h5"/A@^kU+6%2ZHeU7X6J(Vfm+;s)"N#:u3BsKumLU
%B,ap1U!+X]CeF:)Q4`Y]g-.,N=BhQ9lsME*0FTB@G3(%Nf4l%%N$BsljJ&)J=`'VaONQ^G=u#B#&7I;1CiAc-BWJAHGHbmB/C2!$
%)aPHKOfo489u>Vs+&Z,6>n)WV$O,DsjNeZ[c2*OF,k'fYm#&"N#25_D<9;5Z[5Y[6[[4[%MpX&Rm'HuY3l3rOQQf\eaO/AlZPSX/
%?m+pq[_M.d]@I5G[#@f<qPkKEV'C/r0m[gBl<ZL+D+Dg\ZtUb_d72-K`R2YNA&L<b2GO^!@RKCAWb,!@k0Y$73PF5BAkr>Ek7hU2
%hA.KKC";bn]N_Re`h$T:^bG6\;h*FHKf*'RbMLIr4Nbp'Rl%?Nr6!ImqJZ#K#U;_Rem94ue'JUIHoH@:gGY'^BHS9(B.k?c4a)#,
%]+&AoKEAuV[cm&m18ao!KD!Z/=BNi5)LT8E/4USSVq4]9IX1qaP@+'X4Xc8"H_':P5cQna&%XjIs5D[a*\5M8U"Y-j;O[Wp[Kk&k
%ri'W2a64#eP30N[4_V>=2Q-@0FU&pXRf>[8dFr<UB\c$#UMYJJ#=CtMe,49UInoU]C&SX5k24l:[$rm:FG0;OQq80>1W]0cP&bJZ
%an)F!k9"jQh>=1l';):]rl%5]#i4&P<1-@ScX[#bP'*nH]%BbY_9-N"EKdofAP0E=nq2A"8mKu>V8";8J$Y:fQrBl3=S<>Bb=]QI
%f58&V^S(o!c*2-JY5989\1]pGbR3dgDs^F?TSSSY)9SIkFd.ZJ90pLb\D62b%$uHJ(PpZq&@3bCSe'3Po'Q#/qXjI9"u<Z=lt^u^
%D?H<]5k[-#1q/$`R/#%`"u=5Sk4m:C+.D4W#882JgHZ7G%HJ!!)-\IB_Ek>t)=X)kQ7,s+?IIt=(e'-FfG^`9apZSEBYb-]B8_>i
%*a.5GIjnM9C[kgA_DR^65$*H//#8/"Z(1A*A/b[$k-UuU%)CblD$2P6RND8DLqLV&Lm)%aDQ]4@6Ki1#:sae\pf+Y]dcVG39"?c,
%G[H^#ZEDYNP5j@:?.a]J;@6Bf]JA@e]3JB3.1[9okG8T(4NM_6O1Wd7*dZU%\;]_s1iUm_r9X?raa(l(c5qTJVT0>9635S%-$/c*
%[To>(W@pC%POEl]jj)cuBY+uj]g7"nO%#Ikc=hb\B()H.3ORif[R$8qT!93UFOGf(9h_r,n,[AG$:W"/-ch`5^=Yp>.oAi#"_c0$
%)9j<^)bs'(;i?#:5i>A;^COUHbJ>'io#t=j8Sr)C7!Md941i-]3\AiR8lU\::Gljl/`(u.[oHCCdBcT._[EfOdQ-!;H)qqKFb#J7
%)V+A2-!+0a$'H+L]EAUKmbj7MNrU&ug(WKq3$$P[2?8t#i_,D#=b?c(<>OEIZu)e#:2R&5b)+-Zkj)2m>)HQJhdgtK$W&"KHL)3f
%<Qg^"!:Ee?cYa:d-S2Tg8h$RK.B<6XmT<iG8KOI:])cQPCSFRB14!reG=(g_N$Gl!CqETZ#/'c\U)pTjVPp=?'T9f7V*E3]3kYCm
%<FIKL%"bTF]U4B'[I.(U@@1[kC@,q-cVIgj9Nl6'O[?U&omQGI26PFa'5Wql*4t4;PhX1@FH)O9X<s5,!nBjT0Y+S[E1=go+'k2G
%h`Q,qb+poJkpW6Mh0Z@Z:sE+S&FuW6],$[9"T1Bqa,Q--g_cjZNF14HIpYE[Ip7p5#HaR6Gu%GOP-1Cu8O<_-/8&u=[aI)<X$u7R
%YU@-OK+@!:DF(a;$\#^6-FZ;RX[517iT[3@ls7otKR2<lj&hB'CqG9TUNRcE,M<B?]:@@G*"4<=ZE,%6'LW0!^?9'GH=rHlR)IE+
%b":E3:-!Z;(X!"98$[gnSoc2=[;`s2h%V)CFbhnQoraAGTaXte@=U*aV@a_q["(@J^P$FjEZer4l;S.g]&-M4>/Fh35jC#JB2@Q^
%d[XFidePJYf-lV7Q1u8u;bnYe$uL,[K(qu-kcF&#;bnZX;De%]RX-/\\1=[2h;66`B&st2<^!'q-Ikc:)leZk*\`roEmEmB"FU;T
%q6Yf)[6-N$dkibHoh\P4UQ+lLE[l3#+W4_2Y0G/(@k0l^nZB3e6-gir>'FE:'32!g-udMmCV+mFTe>6P@pdNXM#Glsdp,Wp?l-;k
%7+@F"bp+(K@AB;!<)'NfUqAb,]nHABV9MnE$K]_*9]YrQ'8iT=L:I']fq*%@pA%[L;^JW&E\?JHd'Re(SZ5Kk+G*h9Y$;s(0AJm6
%MQ*3A6ogU>5n2_J/e]>JdtB'1e4>!J$q$fW9!7]\`NPe)/RgJHRC)Wlaudi#;ES=3,mRu>\Ce.s:5?+;DVuEr^#JSE6Y$jKY28M4
%XnbXZ0iLs9ZIXE#U);d0VP9HW-tXrdR>PINU6qo.Ah&\+MINHWGcF^W\+3?p]/bo:"hPN>Mm7L1Qc.]4*o,h:LbmK)0p[X%8Vg[-
%<e.>mh>uTSO=h\B.CSQ/0k?X+>1r_;],fdX2k`lhi*u<C"Jk"`<4_QQWp-\G0igiYaVOF)-?BLi9LLQC)Z>#3hFp<k=.mkSk]6q(
%kb_.P!dtV;=pl5X/'r(YBO$,F#EAGj!dtV;lF'*?*ioM#J++*C$5Hru6OEU$R";XXoX"q!@.J@tPb;rG2iu*X>9ZT'VZ0!gNo%)D
%I1SFX=.g'j7iNXB4/kL6,=`Csd/E#4o[+L>?K<M0MW$C+6fb2X/TOeud'\2hI36'B3njMa[Et$r`6cmq<M6ru($KP<5bBRR5;Ws<
%)mq"'$_Wsd@d+#1Ro3J1KhFF`<P,-N!O*JAT%.:3PWM;mh&,h;+s)=.3r>T0Hh">Cg][IMWchG)hKZFZ)r'#qgL-Y,^1r*!bNnX4
%[u'L031k6?jeg^URpNa"Y*p`LgFOEtQPY'U=9ZOeCHIj%Jq9Ns\Y+,Ld/[hdgq$bWdW$ORrVg:<ITK`'j!XtaJH9A#0CK,sC:W2G
%$/!>)XUXjKm8k?igTduhR,/YXmqB9Kq;?]YdZRg_/b'5"jl?6!T:[Jf,sh3J,;26SW'@H@O7JC`hM_-5G-cR<rsd:mm+Ut#3NcX,
%I`c@\O2i.4M1m!Zp%bB[O.T4=6\,$A=aPTV,RkUGDZaZ8jdVP^hJ5N-EP$VsIFd#nG['g`23mb%Q1Z?",obo_6R[HOrp/;b#RG?R
%>H_Xpn2ja%>K!SSEoZOo<#XYoH:AEO'+`)AXK)HGARCkUES#WE/s"hcqqN^`J[cU/6cjRhWiihaP0,j'l5nWlVSil=UEZ#`HLsl3
%K7(kM#-j/b<nC-YnaVh_[idnKg\'k.#K6Pl!s<\]VBg)L=O.d?)oZP`6pSP7Gr(bf^8SM<$R:T]N4)n,@kBDZ2:s#mmiD.qid7q7
%YM>qu]=9_fjPC#6.V9&5XkkD/3R4da2o"?1Z!.f%e!\>K3k3q_X0gYn"g#n&$g,F,oK:mj&e6"]f,tj1lo!/gPWH-JY1dE&%'8="
%C+Fh"8&dl)4*n35kAe*p8tosm?^^[u=00S8p[915`Z:bQ)'9HqQkZN&]p0S"afiFA*\$FGdJ\D4D<gBL8#L'*XU2a'HX]^.?]"NN
%26fG2])VQQ4_3:Ad:,YRCQEAe[=Q;Fe<!drO7-Et9s%mB@+>Z,/N-"%]@@*RG08PKX3XaL@?Q$:IE$&4[.*s(.=E3eHiUF?&*n8F
%+m$@[s7)+WS_V@oKNss%m+RI*h.HJ;XgiQOiR6AG@p]r]7WlUTVd(bX]/nZWUY"V4gN9&^=o!RGqja)3o-TJ.P)m@=Is8/&r9ps6
%B3_r,.mI\.kH+UFVGAKg5NBU4*]tl9j20'NE&0-%N!hT)_TfT0F&r;0Zgr=u_Y)E^I`7K#Fg7Cuc"=b;Pemo>]]>>b&Hg_m4I1W3
%&@,dca'3nW40g#[*&>Hld0>]6Nc!L3'ZmDb1O8^t[7YgLomf!ELPP"Zo&#lgX0]4WY^9d\9.&`F],fdX[gmUt=)+-[1t2e\.\^II
%7[P/h852$>"`%cW45"=uc3(UPN7_[RAfP:odo_F)UTM4;"$(U=SXf=X_+k;q)L&3EZo5f(WMd$g)W60ciZ!1)RSh2UU1*j/7C+o)
%5na$Ghl0#V]l<ma<Lsj"D-Hmu]N;K$K1V_q_fgfd3dKB]i#i(?0AG4M&NGb(nmjWuNl\(EdpW+8q;$(2PK1L$Y=iQgSWB](\K_*L
%>@1,;;ej5klLL@lZP>Q'TN8^>b-$Cpgc38>9<I+ZRHbE83&DO8(67Qo+:mD@QeoY_Tq0R*U]>XVE@S6uFeGse?LH/HF<&/dTe/pn
%\AAXpEAf49)Bq+L\lfj082PcKQ"GBq6OW,f'p^8[\hI_SNn?_$,YTAkX$JcfSQLr+'9\3nS#6A0QM."t?p2JG(YcUFD='f^Gj"*9
%GK0W=b3V;SD&s8YXRa)l3eE9p33FV,$N/LHDJPaf$D[?Q\E,I,fBtCH?<DQ@51FMO8f>\GIFZ7W.FWmLAt#`VZeB0Doh8@!kI4Et
%^Kq1-bV`DVp$up@d:ejr"!O:hb7^WT*O'(KM1M'q)f,$q'9OH]="=fO&[#OB%17P1P`b4;Hm&c+ej)-BZRSaf7E*2Non,V4`,a#%
%O4s1dTLl98(5nu3;o;U8<J4hiC*8$:>o:A.AD*CQ.qrKkPcT7?RB^`/ecU1#(Nj.n0<3(qa%l'L<E3S9.e7^I@oYs#R=pH5$V#8C
%i&j`3\6)f)%\Pi2=>YI[Q"Ccs46q#URoT_:Ha0\'Y<!^Y)9UoMSC9TARRbdg0<TblZTN;pB?p(l=e;OYjY7^#0C<43b;1^A).\$B
%$U'"k:U?nl1-S%nV)q@skW"PC\p\7<kfqHP@._h92`G*P>LGWG6h;U0pt_cl_L9ipDK;0n5&0\#/ErHP-s0$LKJ$7)XZjqG7E-rN
%G>%P(YHV<X%C/+jIdHUSa%DN8oZ`_G:@nCl1lpIWk-8urB28%\I[[0Xs,GJi<P4L?ahEg1lY.Eh%amJt]Nu35_,JpSd7mXK^K4cR
%;O45%($7#^j#e,^Z93P=-L^Fi>/mA$j?]XfD7C!e-f(oR.5s?&rFX:Dpi\5;&,:2PdilYG/*DP9V9(ne"Qf"nYh6HdMs"M;l5AD9
%N'\^8YB]ZP0THU`?Cl:9&&PKn%#E"qe)sT&1*&)&n@ZDSYYBtr-g1=G:Pb"-F0&4BkUYJ@cR4d[/&Lhg<B3d@<:'3iA0a]f:f68n
%__rr!5@Mr1r7m?#illT9*=tGZ\oRAp(r?'Uj\glpS5/muq]8PDY=.LN@n,QqkKZ%:?c=PCG;qJIH;r`05QG:u];;ME^isC8O)@*-
%^\0!-#*!t%0nPK8%$QTq36/=2]WGVrI*d-F[3?E`F@u@*Cj:m_KWJ]j]hlM)lg!iuGm52GqoNd(`M<Z)9sf?,]+C,ZN;^E%Ej2Eo
%O?rA5A+Cc]%DQ+G+jJ1W62.*\'oq1RaqKeq&sJAGL,A5VXtB+S12:kQGn)))r;HLGY:dT(5.eJL0E:C,ar+P-rl`>(IJJWtf#kaU
%IJtl!pK'TW=+5^]5PjI4QWHC&(WY.rhS*=op#P])a6!!RX6Z+qlTa1tNskd8k9oHUB3BAlH$sk9Qi8RdmAC?$G]Rr5p]g`8VsDrH
%%A3)Dr^C/0\,BibEEKl9HfSQ3q>B=9c6)uOlJ:^j[==Kh]R=(7Y1*0rAcBU5dI7,3mel2u09kSQ:]IXYdNQla0HSU8S=C,_S(e^p
%QBB'i%qgWHa'A07jT#*E\[d-)hXgP\p$j[7BDCuY&K`(hE3(d>G$"l2XlKFEk*%_Wfse/-$7u5G^8(0]bGLJQbDQ,MRpXL.Da46b
%e,Oc?oueZ]"qCOQnbL;k:[D0*n+unC%uX5ubXNU0g8CQU<W;Tq?M`o-N@Ol%lo]2DrqcHVPI&Gd>U&/lM"9,4rj_c:hqm:b\,Ygi
%jR(Xbn538R0Ai>VCqDlHho2L#T3U8iHfgPo?%(l&'@!((q"Z;T$[EaF4$#CF$L^o]c@#/fN:/,5f#Qe!^Ra2No:IUQIK%di[l;o?
%5KSim:Y.^+=#]"f:Tq'1Iu/XaEb$ddq;NqiJ_u7?r$="iDjITt%u)$4ES%[J3a@/mcPE/:$g(Z:9mP1MQTqJr:r?(jI'_%Xa@k]7
%=68?#EpA4WLYo97jGW,hjlO[p?X8\A_12@VPNt#.$h?S=*kEoo%"(Dmgl[p*`j\B:'<JAIEMi)e41(n0Yh6B's7"k-gN'\--$_>^
%s-!D-S?Xpi'DV3X4LUk6o'6*_n7$dod<O]Zo?P;@]R=jMnuM\2bP7%2\-u?)f<qmC^XaKF)9VO9n\%.kE)A4,gLkXN*1uCUhQ_9B
%?(7JW%fMoKflChFHn`G9?+.NGm9cTWl./Y@pWhO!,V=B*)q<uXnqZ/>K:A3<@loaqERS)&qQ9eV[P\rnIG\s3DP$5#<L."*HM)H,
%"*<i%\q6/r`4p0@MPD-_lL=Kbn7@klS=a*V;osoc]gS,m]m>%s#G#+;QiFY0H#o#eE)7p5r>hL5Mdk2q5I^$SHn'Z0ERsIeWS(/G
%ik#_qfcNb#@;#P)n#s!L^V=(Rl0%0i="dq'il$iRV0Tgr0O0J]Ld8#s&89=;K=p?Q/RVP6<";C,^<:Cq7[b.5UG!&ILZ7>8cFO:F
%^]-T:_1S9:o["9LJM$mlSEg$A5Q,YKq@5/'s2\D\Lj?Z1n`5J+X7-)ZmJ_i%5)c7WO(J-YcGa]/j#lso23W6#=X/Epemol#qiAS%
%qp36NpY+K=;$h`^JS;h*cug@6e'?YI5ITlUBKI(5J7QWTPC5U1q$85844I=2G(0GYip?4=J_e<.s8D@rJ!JS)URbo%gB1o%iu:Hu
%@l1/`0Cd+U@g!B,IA01c?#85!STc#ba*eH>hEN9TP'<5J3$BCW.k=HI>BAjEf<Kb%b:=2'jc?VIIpXAO(gK"T@"2gHIPE\_4)=@H
%r-F/R(h<I`If6r5N2#I]Qb7=#=H1]=_?WS>mha(cMnOleYl:o&m0>X(Y*ieL^GY<J[ql0GZoC7![p4<kKMA_T0qT!?^,bYYCrWhG
%s$q3HbYB*l`fH9Ufr[UAToCsa%Ap&FPA,+orBpBu3uefm<ZY%0g:>K?JKjuq8^85i!a>M^,-`LL/d/$'4tQ,Y$qlDZ70Cu#CY\s9
%hKsDnZQfjQp[bIDrrJ'72XYIjUi&].'@&R-U;81E0Je'*\A.uCQ)(9shX:bpc<9U=B0V"V`DYeIM'1+))DVo5/Hqic@GLCf_2%p&
%"<YL)4c_pGJptsH+bTkN==ua;K"p]/:L4(@aD^Ra'E!=d7e"8+dY*8ABPDkH+?e(s8oVuI"enY='a?E!OoLj5peNZ8ru86,8L@!d
%Enb&hEA%<oqXGLVOM;s;s%7>.08P^qs%+9]s!0r#rbEh'IfUuXr;Y3^Igmt0!rn%<_LDq>r*'n6r6h_FO-H"/?aoM\\*t0kV,;#Q
%+*Iq9RdFEslk!oUINf+p[2I-Zq<`V'0*Cs@mb'M[*601mL(ep,HYBrb2095nkNcs)V,hFmXJq1!QiG4NkAS7>N:.Pg$Whg%p*RQL
%qqmDaT4)L6ZI'ZCbh%@/L;1;q2]`hY^i_b*GdPMn::J]7donVr_@j:I`^R`\*.6LsM4=^NYA:6U^,DrP#Y/iP4Qo2^m=)1g$!MB(
%Z[??B3ZNVLcg3N&TD>6=DXMe/>\j6P7IH,XSjMg!-kWh1UhpF'[20UB_.l=(%nb0UcEJ")Z%[rDH/Q:j55l)thN+!EkmRs'Dil])
%DjOt9J.4-"CQj$=jT0,G%=BU:H\;-VoS1Q0BXAad'du*;.u$$9KCAi'?gOJ_O,l'Ve!K]_RW<mo(EGgu0Kpbg^#=2i0GC.$PeKr$
%$U1/q)UMNq@\_RXYgUVo!Of]#>8%*JGDEWP@:>=bl3W@Y*p:<=#(C8Y,&H!3GXu)7%KF;4<bRW>of2cWSofLWe6nko-QCr9ZO&]'
%ZPh,@)3!VPE5CcJmZ/0?^U<+#&X['T^)d]RAqK"A&Q'-(K>APG*[C<^nVMUajK;XG_\K.t)KD@e-%6iWVNYuSafthSq"QVXpaHmp
%q93m0;?L"O+:_5%%nIP;E@orr^/DE`=GXcs^:(5t($Js/;CnP17n!`WPp$u7+]=BCkq)=*"ZE/<Ag?8<Ot!]eDjTF816.r\)dh'V
%GR;cV7B:M",fKI'I,$@e(iq94)k6u-$Y>@&>h<$=PpPZldf`-g4>ARbKdc"l2NbjrI'R*V[c%nn,Tb0l"rgR,X[ci<YYX!`NTJ!N
%Lin-R@??8)UG7R%3%Gu"&g%o;OG@[*a.ghF`1J[<Sl8;"7oZnSjb+!Ti_oriMM,tdN\b9&&)U7u'FGMjElY&UM]<;67756!-AU]-
%hAH26o;/LF69*dP[?t_[!d']$!"$i)<brL:$-q-R:Vb%(mF*qn,OpdY"=,!K2&?bN-aA>k;K6fr'hjBo1fk5eTJXJX+Cbc@gf<.K
%\QYKkOU-M*^aEW"dpj81d4[jH_3hZb>`16h_#hYIlhW65+r$rF5$0^A;@?jd(#FUs1=D5aZO/Ze)EDZH@ub%9^Ep"<DrV.*m2XJD
%LTKf],4t3F'S4Ya_:H%RE:86H[K+_Z4YVO"HZPlO%qH$-kp]IG`hlpP+CcCD:-U:#I;.Z@EH!NG1Q"1h*(guVo[UV<)s@`##NOHH
%p#tVO`f=TDYE%)p>$=Kb2o<U2pgL8]Hm39cQm78DT3aq+d$<eCL,`!`"Zt[./5i4"ig"n2obD+l5h)5\rYbu;\dZ\[TK])SnCVEb
%_P6eu;-=0_#UrSk7Kp"&22@7RJXXK/p-JjS@7`>J92?iA-7r[J]N.`G@=]]R-fc[!Y/g3S`PgG]LTi6B(>s/i0PF\ukutMi&i,RK
%6*Ss`_P`);!"a^rTEWh0QF4s!XqH.H5%6q^dPg[@,Eko:4Ldubi<C^UDFPD_lo&Q0cP[6E**%:(V9<NV%g[_;*8$3ELMrCn1E'Ju
%SdFLI\go$XR;WIUhqb\"ks\G#^8"5i9,SoTe6JHfm!!)tZqD0"a@(R]P=4RH26C<p@G>5O"=9O'$(VgNZB(q\3$+jIQ,$V":Dpl+
%8=5LI\f^=m0%j3a=g2b1c;Gij%nnrp,cM6Rl!,K:mRn.'Kng*6cZ5,2N@0J&Q`@GaYoCf8i<l`^ZD`6kmaFoE_]Fm8i2A4rNr#Tt
%F7%!Kh_eJ&rM>ti60%ti?Uh"_'PS^b"#^Ch!W4&(.D[%14!]UcQ(0YhoCj>cUr:/lO=ESs>50]pmM?:d+]7IU9(6d1hcZ":S43Hj
%9J9BB*+]3o93a#.Ug"2]ZQ(/5Xqo._4naVe&&#.?+7ue#\,hS))3SOEPXPEh6k#JTg]@a90YWl([>Iua9dj'?(WFU#)M!rfWufJ^
%$,#2KKl;Fg4D&U%5FA\r&n0k#^qXCY!c^Q8!3he&lARN'M(k#rA=eV8^IcD[fm@jO$(nR)=?Oac`&IUJdU#5.jP:%sVGo%(FMAe'
%!$F?hK%#G`OaI6+M(eRb:D!G:W5WdK6_cbtJ&hPFkP?HV5UKW;rs;1AEtZ2idJFH*ZF7hK6.0qr*Y__"+HblfMrP0+AEXO`KGMmt
%ru8IYA4X4TddZ`#Ud7_=JHpA$P`G;:[$'Fgi"k>X8O<Wjbt+$(3oKOjJ?bma&`1>AB/bf\&(IPlQP32R1j[XXR4%2k.7FSu'.IUR
%=#g,Kk86<V1#_pFc]O7-/FYV^Np[$)SA4bi;5#ue:5$2B.>R]j?Hh:k5%c]tg[AW'9$R$Ypq"o7c[t(Ort![0p\Wcr7LHOac$nI3
%%T3/L?Snf@qJ\,,1b82uBf&)S5(>KWp'B"prLmCkoP*;d7c+*N4ERTgqN](;LNhnQ1;;G)7X):FJake=Ch["GkPGZQ^"bOY)^W;M
%6/f%PXaTa4>%IV>m8aH1/=2+/I^9HP0JD[m!)?/dXi(&abn=bmBf'&EI]`50SO)j)r\GNY0fVDP)*Inne/tcG.[7hfs&$W]RVn'k
%%)-D2[8l@C_2)g9oY1]4SSkA!)_AD.Q.K44=(j?`Qi8Qp=Di;^Y[I>eRfo0?WsoSR2o"!Y\G:V$;>eIs@XjH'hk?d$:Mg#f1OaDn
%s1]5a?Pa'Ms7j90^pa7a"HWG]N!@1;qqj[:rKi]2lC`g@2q4P:LVKb:rslbo"oZ'8kC49u&*j2m2k]X>!Kqh\cSba+3IBNR1#VJf
%$Xd=Z]2@$QWr@D8VWkjLr5N*dEh/ispTNK%oY8MNQ6#nZ-%)<_Vg\O6X*ss:DmD#$J'Pt&q2a;,B<t2HH@Oe?DY\4U^#5lQ0DAK7
%%`-RYL\n%-"NU4;>Q!.<ho;T;BmJ8ModdF,f)GVp=;@Lqr[l^KXpn$(0Xq#p(?>FM(DEk7R)uOF0%='I^HJMqS"k/fZo7-V7_2bP
%(aue-gQ<U,"4kr"7sCP[[8*hG3UYMgP((LFZhaBrp9#JtW!sZ-e'_W+lSnj>MPnf`\dPhk\f?]a^!Z>I::<7`NJ.lN/<i3AUXF38
%Enp&AHA6K)q6_useEt]BeZ;3,V=[A[j1Ce[.c"-4K7^h6<n":M1d\"lCF7oI)t^_ZnKF]O,H9(p)f3r1:N4V!^K0;`9)W2/>O#97
%0QjiHYp7RE$)BDR6i->R`_N<O6m$jtpFe?TO%Jf\'nhohJ(a=^%)rLhI]5-eQ%2RYJ&!JWC1K$<;Y[.Gm"h@uaD7\XH0k[t4SQJ(
%WW0KHcuqb9qN5*`#6[5([R[GtM!i!E]*[P$)V/<')MM>NlO@T'gsZ3m/Q/\KCDb/nS&8.7fkM"V'#u7I$eB'+3`G>AUGOqLDh#a2
%?0QZ;QCo10qV>JX?Ro\WrVi1j"0P8*C:.f]gUek.lo"Fs.2mZoY6.5-h<L;!Xj^Hle/D"g+k.GG=Lb[V_RGgG-qd<)-/<=4;#<bb
%oa-5O83IM8E/aR-)3FsM<tE#SiHO#FXOc)S%0:I\R/Gaa%d<6)2.t:Ed&iO9.)@66LKbJ?EQ"i9aM]0;:KSbhq3p$^O'4,VA/DX;
%+q)-`KPEngS#+E7)$-h'#+maM$m.j0S.GO.4-+"s?8>(!#Mn<N(:b5$dkNDP=/.:8pe*K*G[e45%DSX&1ta/go^MNU6ou'7I<DJO
%6iYtleG;>P#6^bWoFjCH*ds34bQ!+WJ6@F79:a31S*XFQ8upX?+.mB"rWR?0)%PY!qLMQT1(`s*MY`SZ4RU]!'\d$nP<NclrGc!6
%]<OPaD8Yq'3%Mcc;HiAPAj94XckI22[^iqRl;Y1Jr)Qar?3R,3(nQ&9>kt<J-g%]Z\`:$25+1^0S([eH@LaJ*m4!Z8R*d:+3cTb8
%N.bp[3@KS$1mY^;RkutH[q<j;i5Vl@Bb!7pO@[rhm>;RI3n>gPm[3nsc&VXge,bk]Ipd%Ti-T&B1Ht6e6\@'O;%$rIXB[/38q4rP
%C:I%uq@gE/LMBl0*m;]!\""j*L[>^0rZma3U_Re)HZ$SFas_eOom/qb8&d%SZ@0@7IiWoMDh#'_al,aB)A"9Q]?ju8hPgSQon,F,
%TbVBfLi50LIZ+/$]]I>Y#JnB=DeE.FmWpZOs5sLX6h_*b>J*T%eT.^u3YFj5+90=:L&oH27OosiEiK'`rd,bCR[nd!]@e_5C80I4
%:Aj.A_6=C8V:Xr)s88SDT[IUUrqO`kNGh?_NE#-N^,onB6pD.s=H1mu'+VfYW?iJ?N.t"rd\%PR"m<LPAaSB)4(P`WBKgXs=i-eK
%V;"MZnmfjLYFcpfs1:b&INnErdGJiN1f0q/LZ&<f>?9:"h_qWZ44&A2^>%RM%`DA#h!AB=Wtq"5Hq.IuT15.g_>B'PM!'`JriFKI
%VAn:F^KB;fJuRTE-E=1S^YTF!V4X^[+2=Ft/3N\D<(8o)A9E:6m;`jTei.Hq7RArOIJb6rrqRJk8A\9odn-6-<RhM+GAPVu$#JG=
%F7"YDq;,3%:5%aoQbLhHf`jb<NjLttR2Z$AAG&Ig#3=Ykotj&gqhF!"-9.&]m?uf3r.23ZU[m?VRhKZq(q'j9M3i#VDn-ONlZSg*
%'CX\,He"_nm8]9j>+nfGMQt66Xh7!n<\"D\E:[jR'6F;(h,^RG[T1EJr-D+,2WN?4_gJ,JX-)rpO_c+Yg](_(,`pA>OlCcOHV0_\
%WK8pg%itM]VpYnKi!]ATUWHC/*H.mmh@%f)/=<()BRoqf89I:,CQWeWGeMpAU\6n$or]a,BX@:NjbLjV[/ViVCOUe8*-ZHA]X8rL
%SV6qVX^Ut.@IV5U+bBFa5lGGI0IaiPBijSA\tMiH`&k@^*rOqXMa4ZiFXfV`R1sV4iVQtFO>B&<k2;k6K-/J#&+8Ji0g[Gafj^UC
%[oXUKe=tCiWPtP(*<pitIm7<O=oel@CWJ]kgXrr3Wn.$S+%C)"ke`Y0!R&eG2XFg,GXI[Deu\nf<M]-'B2,!_o-ut?W6MhJ@V;;l
%<'ePHR^S[BR@;J(@sb&o^r2RKUePAZhT/k30ubV-b-[1^JrnPbIX<L40GuIY@)?R8P&RorKcGO\02Sdc$.o(l,l?/eDm`9Gr[7.;
%F_GLa]u\'6AitM7jkDNe?o%H][4_Dgp%M/cYK\-`':m`nBI:Bo+4l>ZDg78*oWZq!mt*J<VM<u=naNWoMg7&3%E7b*EU<*qWJjA-
%#E`nm6VX+_G'?*@KnHMU;\1b4BJ_[=O8%(`dHf%OQ<cN)n^m?.RJo\PXF:^2YdMA^[!udYBAK--jQ]T_kVr)<GCOp/f:tfaG.Z,u
%o?TXrd=nK71qGY*'ogN-9u4%T0BA/m*<.*S'6TK:P?f+k9_\)'@S5KA\)>0J$2cU@D5WT*D7-+k"ubD]Mu0sepb4WsJ**=P]6j>9
%)Z?(9hV&bEH))>pD^qg_B8-=YGpfZu+6KJ?nF`#ir)/;G$QJkR&Z46Q9;Im3O%!kBFh0a-HH>$ndNNe[AX\82$N<Uijk7T:nc1j)
%g[o>H;sV3WTBH"4EpdZ5D&tp+i#eShSOU.cJ#_?"YVs>Pis,<QrI3d&E?fdh>e+NBjk$i6<.Yjn(0Prpq)DB%)pIAaksYjH4b'(S
%:TrVelZ5-Dg&2M0+KQ/=)%9:g&5U9>%4Ad2%\2nXmAfi$@A!PpkA5(JT+kb<q(.EHf/HGW\t!)@Zo@%-9V=KH%imJJiH\]NiSs0_
%!f"F[mK7WA;i'c7,6>&2_"V6;F8HIJIr1Xo;lb.28!!/amceu4P)(H5Ejk)7]>K<8S\Dfu9q>=oB%+;UQqJru:HZBT`3Yr:)nFYi
%e`(cK:->@[=0#!9\*IWe6rDuQO-&4;j:DZuZ`e;HG5$9H?dJ0^$*djJa>>i!<o^`CJt7;DWlTFfO?XFqH;s_3c^!+qrFgS"fU!LL
%S\<S'fi#,>Bg,Vg\qb+ZD'lQr_3W=$eFVqclJ]qPb'lMAb4_rcrbak(CV,4iUKlJU)Q!/2@s'cWQ[!i05Io&,<d3_7\9'7S@d+Z#
%.8.3,W3]I<Z>7KfrHi(>WKTK4]?j9CNM;DW3p5#%;g*XNT$5ED;r2P(.U-8oA(gLj_<1WIeL12@&bDXBfRgdVNId'+SZ;+j7&/F.
%(PoPmM+4uJL:GY\I:*G@pJ]In_lL91ii9aa`3)iORV;,[^W4)uq>%1+r@'@c>Ogc^iRu,PQBB7`ZdGc*qpf@r.=2o&G2hWIN!(c)
%h)OE8"`p`qG'&26FW4W-STU]cqeM%%r+%8t?+P9jLb@TH?D<;Inj7H[\[`<[g;bR<HQ[*$()p"=g#u[/q<[ra<%Q!0U=+MW8%msa
%Mu%^C-b=UFI>G%+kVph_)mbkd]",@q']$@QG`F+4G!)4"?-Gbo\$<teDRMbMboa\HUH:9F]BJZ[0,EAN*i5Tbd`c4nE%AX64e<D#
%d?AUN)*Q_;E22UIeTpdroJ./pl7V1m2iemeSEB8)>Xff1>'JAl,%$4n02BifeZ7PKZsMQ>6lXt10`!hGm6o^0f5K();.;W`<k3U9
%%[W]VWT\561_o>Q&#NsfZ.Z,P`msla4L8Tn/IuHbVQ>Eug(^k(g+^bcIp(TsndajFVq+m1G>juPV=gfus8$R^dl9L[b!57);nMe9
%Xf91ncI(-=ot[+ZD4PdGcA*4TWG;kG\kBH.VB4'XO&P-u9O2#[Ff(Vj0L._N]:\@/Hb28^E:-uLVU#%eYuu:O&R/q704W1<@OGco
%CG3\?=ZkiS97tmndono#4FObsAInNq@QS4'5$#1@h2!*/S[brabJnSh3jp^Y]D$YNZ-mWk+0.Ps[::l8rX2C5l^VQ*Z,(8AH$\ah
%X$/\UP^/j\5AW9UXgS+oBc]EU:]#?sDpt3Q^$'PbCX5`DYgi7962ZmAT.UR2VCrU`gXC?s(WY"$e_'82rF!AprVA>f:%sCsM4*S]
%BEP-"RCtX4bf!"mG;Jr$WA>cRWVF^6iU#]#g8^diCc>*-1C*dr$SuENOdrtR)ICZNZsMX%W\7($oCDZu4O^?4g9]1AadnuLXe*``
%B%t"%=&,mBXrc?,ZcQfo*i>@]()QkS#?S+"g#DAH`pCslG'UN,2;QsK)S_j1A1nV&UZI3Q\_4g\o%\8&j_E)S\51>NSZLYlV>%Ui
%h!WQmFmf$BF)13L3T$<Q(c;fclJaigf.QDRc4+-E>:9sD2E.B%M7S0o07:#c^[^:mkB$I,X8)jZOn6Q;g$JXm?)]Sdh<Pg<>A6aS
%&(CDS$ZkQ9ARQku5@0G*_WJ_d_]Z4grK\HT*%,'n$Wh\CbCuj3FFU!p=i>"ihHCt-SB8La(DF-aYsiZ)I9YL\EF0N+fQ;!#A@>]G
%]^F>l(;Xt$>C:;Eh_#DNO14Y5L$/?Cj)lI(CHGJVGkT7Z`t+NBXn_"o<BjfY)U--,%_P2W3-?]ZR\fi#=F/*2miF*`06_?$EeAa\
%l)6@n/R@6UZ_beXb:U-FYF!F2S`8u+o#t]n=fsBTQ;`QWQco9.H?]1:hm):@]?>igf>MB5H1ZJo-0"1DK7oUD[h?eP&#W"c?d)k(
%/dgpnM:2D!:85/JBrt(rZ1XCDe'mlF=,la8b\60Jj_/eX<c64W*`de2q9%I^6eRp#:T[jf4SEN,nP\5t)]m&$Ms'H'<BajHlG1@3
%bjKiZVQoO+Kb\spCnY;+QE12c]IP#7ChL>&BBT',R<`SF*+rb6mVI&f/S@<>E:$m^-FTI[m7]QZL"IALaI[OAE#5*JL-M68A!u1`
%p\o8t]bI&$GO"b?Jna#*@4(D[XNOajmlEYo?7en_h:hPo^`BZD!KXuJ%_7'<VtbE^1W.O?NYZkNq:XbG98c\!/uH+2B0Yd>I!XmJ
%'Mm$r7Cb;5&o[dBXB`DZL%H1]H.6ff&,TH!@afUfeUD^>%]ZID%ZW0TopqYF\"?7(hTb3:U"A'q^A+t.UuOPErF8&THdVF\EfG5A
%WAY3Un#\7F/iKn/<`elk;%R)=gT/r67W5\;grR>hCX`0_m[BWucECfcF+^l0p:db3^"f)])j[SKF_a1\f9;Vhk5'(mZFaH6mM=C2
%l8MKXb?NSdNQoH-_T$#`;;$3,R,6`am;]SF[(YASgrPfM2\5X!G;gU^%ZgfOHd1F6f(*kDF_gTQJ%p-U.i`Jmnk7Z<I]qf[=,s^j
%Ot"N8P%XABd:BZ`g.OjVmU&noFPBLNWn5RrbNI&pl=I-J8C+EQ^81^k;*2JKZhipAoQDeAlW<("9dXkia>,3BYaIKj%ehaOo(GLq
%qJ'!Sb+lj?G4-iAaPL8^;VBpU_-(YeG-dT0H]&9Bo=JZcf3E-!kN=I)#5PZlL7^]3]q4E18&N/dFEM#%RkK+!gUdiK36h0q9]][Z
%/\]ThZ2FRE:A23t\oZECD=4bI>L0oS`Vn';eAB)GmeL]GZhra#p\,FmcJdVl/Jd5*.lQhi)Afg+rV<5C_>_I!_o;UhXlP-(C^pjE
%?N7U@n`\mWgqq`LC9c-q\:$A>YbN!>S'?';TQo=8%URS!dDNJADB,NAme6.5`srX7lZ_$W`'Jk>./RC48%2ElV5(NTleJbo.)h3j
%\*c`+O2Hb38bB_\3q;dsWKSQVIKlZ0WQ2upl28]/Fh5OujQVB-Z?=kb4Pr5)WQh$,D6KIqcQ8)^HH#*t?+fA9\(6JXX7Jj#k@)&O
%^0%q%SYpE#=3kg1OsfGkinE]%J(UtY%N:fA(\QJ:bN2(eb_9a`;pY..b8YA3lEXdSb[$'rqj4@Yq#&jroBS^(3rUrfYI!udjm2eJ
%a1I1oRe<0#7UbV[\?su'C$-6=[s!2(Ge;:n+)\+ijitDkNCrgq1Xj"I].<V6n"]W6=d\?#m;TI\IsuE=\F12;o"co7fY^SYVZ+r,
%Ms$.XoCLbtm^t+n.p%`*dt51nHHL?rf;FDY@APfo>J;V),qglD2p(*ddV/CMUqCksHsFCa?6#=/MriEFG<!6cBe!`tqmOr/h^qjI
%ddp-)Ugj"tm>K_QR_*5&g@<0W]%5$*S^uK>>GZdjGr;V:es#Hg3GeHck\Tt_q/t&D2V:T6X`;#%^1al[qu*C=\$4FG3FBI:Fq+mn
%R(eC:b3mI+?+g-aHf!S'ok.LZf8FH;^(+IqV:Kt\`+rY>lrnc$WkI(\Y+N,V%o.SW1H4dKF`MQs?)Ou;D02+T@bBMk@@,e>H#p[^
%=@]XQn_)r$Y8`Pj_)-)edjBRVgau7nUF]:.-PQ4jrPq@;4]n)Nqu?-IfT#mKZcuB"n,&Ko=m7$9K2HF:m'UT-GEI\(%!'oJoe%1;
%8@Dn%k9lOE_=n2jJ&'ZsV,!l7m2pO"$Td.P4fafN^DO"Q)E,;N6oQ%6SoLqUg8/s5.ticA^M9n2>/+D@1r@2GD>@+tBDr\8a]$GM
%[iYpi*r5,LaCc)"4Nc]#rpaf,l;Z_U^5M>f!!M$\onqXflXF's*qE%pa"3q:0D0WU[A3t&O^<?=oC0^#W,5A`o8C%lA'N;C.;dNl
%?Q'>+CZUIdm@P_Q<,C%g[7I9(M[UQ4Le`Li#.5U\fcNW]fr0$;K+cU2Ust7ZBeH@&K0E5nU='%V<'MT3o*!UKM9,LC#)7U4Wo(b1
%Irn2C?44>f4-<^S8T-'91=VuCpsO,fU\[DGKX;GEM1YgiYlDeKMZZsoOXAUZPp3>nlLtP7"iD4cRMAh!4r@9<\DZ1<Q7<inK;k:3
%HpC1H=EV):?;P\S)0K9U7F]6l'Ps]L7]uBQ]q<H=-B@RPPfrpk]JDT\%!(SK-[o6G5/>tMYEt@]BE!?t?Mq7aa##q34kFj)b':X:
%>3n3&i>$j60/0L=\t*`8dI4MZ=Z@1>)tlX-ihqWi^K,:L-3(#-$WqQ,)/>^o_X"]>o_)Sd6%BiDdgK#s:,,)4e5JfqbodPWI[UfS
%j'mt$?-K^Rb2%RFY`#c&)Y`'+G)SfsQ&naar7qgCn(C)P&"f#^MN6LB+L,'f##Y+JQMepphnP8t$fkeoZ`\o@LD,q9hkMh\cK2^Z
%hj5@mqkZNk+l)Ml:X=l3/"CXCi4bcSh-kdas8>7Y^emm4?MMb_IpeB,-,C)qnG#DuYP7cq7W9&'dL(1['k#)VB`1uKW@ARG>fH4R
%Y"st4![UWB$$d(g+Nj`;KoU^8r?=&p(G8;X7@>$jf\[dmj;j6K:M#^=59.gQ_c0`>]"cta(Yng&Qs*j+q$Sr@<U"_NV.$(i8+#&'
%f:T4#Hma4OXe5(L><>YU<XdflqSg1WEI"BhXk4JubFMP;oc$j'h#\t/kjT\5C([#2conqS6mqG_R4n@WbZ*T[ieM:(03<?U.cY'q
%cL;O9n<^*KPi]VL"*XPP@3O_)r+NMKS#Y!4QQB8-a+UDhINJFtrZ>Q;n3nAoHaE2s>k7QSXG_'b*PPM<4VKfF^I`=T>=Z$/nb((b
%\[Bl9dN4l@>#$IBg[3#GF!nPcO"S]'AX]I6?s9)hj@!fAH+pt;i,5Y4mcG"BrD?#GF3]=qA%QX&Z3K!Km.6AtSQpM4/1/u8H@t9d
%hcYMEP&#bbhmD)VVOr'-$H[G"G*Zi[Cf[iu`8's>\I-l&Qr%Dd1TU(YH^K5l:V/R/9<!*D0M(T&%3+h3&KBi<mdt)eV)<H'dq%dq
%?MW'tVPRXd(FQ\9WF@2onb'!BG,tAZp"0+iEcmIWa0SDpU\t%5[1:Xs^@G'=(tncaV8QX#eS78'(hO]W`h'uedqlI%(Z(>@>B?-G
%+B\7YoC2\)Kho$nR.$!2QbAaMeCelDUD@iLWfCI*s(+B#a]8,XI&>jdY-"U6fPEZu\FbH2cLZF\2HnnKfS_W<.[AF4IVQlDog2#?
%D-JM:fl'VMXYq9pWp/*Yf%b:1IQ'k6c=YsQ!t35Y]`oh)`S/:Z1=`AJ[Gr22CFc]=\'^^:\usc'OHo1hhuYS[kA'RN=k2&7Au,Wc
%C`dK;0/(l(/U?,PHak]P,W!'uZ-1pccS8Lih7XQ.9pt60`7HZB\#W7aG#..9G%P,TRpn+,a)W[_`CU;3[@)JL&BgM-0<,3!^5j:F
%=%_ebq.T]'O4+C4idjRm-8:EZT%\>OO8*=9?%6%mbjDJ)RAJ]&)U5g9G(G7KXSCpiDTU"<4`BP8/iVA5W\9,<FIL%'@D&?l2q($m
%oNnbTqsb<cq2J<h<HAJdUZq+iTc8(5Y.,&sPuKL8'$o-1p>9nedbJqJPg<.VGI!:!WFDVX9H?o1%T5`N+UOt*rH/N0<GunZ:KsRo
%98[sAW:f+l4IXkooQSNQ?$EXJZWrbl$KIEfig[3\96Eid1/*mY[,Vs:pM)@Rm.VI^mcqXM(7gW/Rsb;b\@<5KGQ!<kfUU`C)"e)5
%l>U_k9Pq^,7e?Flb>)8gHklY6[[Ls(9i:=*f8@JF<,lh9qM<C?V\qh73W6"-'Ob+Qik?_-WV<>0Sbfblr+p9pdh&E9\[&WWR'$&Y
%931G)@kCf>_FT3;_KP3acR,)b?[g-BbO-a`].^IcV1:U,n*I0iT/q9h+656N4jUG.bLM!;g:en*qT1a6Vd!WjE]giK(,g'Y42ojl
%]1$*RKR6]\b&4u>e6oGCFXi?SlDp9-O6_5OXob5]L>0D@ZL>icgr"=q=kas=l^?n..7eP5h]=ieZ/(u@^=I&"ZYeXbdfh#&KD<IC
%c(:?rq$ppRK5YB0Mqc.iC--S3[$P'4DTq:o!;3lCOX_DoT9C)1h,6H"SQruflZ"G!(LX&*>O!7jq,stK"U@9_F-Y@d=Yg.78unc+
%o^(sM!G(<3>jA]H>7@u&.IDX6S9*e+@kj,"^HUskg1`+c9nUJs;9g4o$?&@[6A6u9B'ZG,LC'5bRa42N6lWKF&AXhTYSJn,qppi/
%2L(e>4JD2$TN8P6\YWbH!t]`u#qUN_*T,W`N5!gg1sM46DD$f@MV7t,S`TcqN\Abg[%$6tNbVo`8C"#8HWC3olZULNdbALh]#fm$
%MEK`U346p?k:&;.S^'5'dgm=C4&\]0VbNh+Hc)kK=1@Omq92k>_h>m;-e4Ghph(KkA;5EYTAls1SD^jqe300BK<V^$.^d!\Q[Cf?
%l9*qqEnFnC,rE&#82chcNNE]2"0$!R_T=Nq_=BO;*c'7.QZGi9U.+!X@%``f%.7*^)4-$_.O&\g7N5,jA%]hp0)DnWktcpg*:dnY
%U"!cc^SQp+NNoH$j6@=&43q[i!><Z`V85"SiSBGgE:_iUrUjU33sh;:h-m6WLp-@,Zk5XT,Xs\*?fO@bW*noXnKKZP5&m6bT+Tqh
%a.a>DT7VKj=iZ#,9)Fi8IR+q*\.J"B9J>i`=7>9EHu5gq&dK;5ClERtNK69@lT:DdB`^,/]\@.NQIX)3[O.?))>BtGhp#o]B$>cK
%\sYP3bq\`d@mifO':)c/Q?XC*&Oi^G2gN7dNVcq%LDKD3d1Flk";$p9i1$?16eYe\UOS7?ktEq^eq4iRQ)DL*(QR^C3eCbC;HtL4
%+O4>]<ePq%P<,g1mt8Hehg;7c;T4Rm:-NCHY?9p@Zi(/CiU\7(Z&DFif(4s?iaQrQ3f_4$(KW[f[k1C2ClFIPnD9-3[mPa:^Hi_p
%TU"O\kKW_:U"N5"3Nrf+DSL;&jP!<OT45"QHfQJHDCJ?K"&.`tpFM_:?E1WjrN/";4AG[WQ9+E'SYsbf]Brk9YVJH=D(D7NB6qS\
%3*dB5B531WgYuH&.$HhAb=5]Am0VQuRu5eMjBb1hLg7!NT;L]*hJ%/:^\IHS!%GX'^RNrl4@'oiYO-`"FaJ(,lYDuo+OZq*mh11e
%Onde@pti1sPJamG31?)ppU0s9rFBlUdQG5IP</H(;8tS:VJa0CQG.I+@%+=/1aZ2WS8uQO;FgQLbN362q'&kjlKt!P0RXaS5g/;R
%Pc*%aY&8N$2JEQnXE?`K$40msp:nf@&;rj4?o.\m]We5E3+8:P@)*f-AK(+)bXuqt@o]/Q,cW1rPujXX7"4JSUJ)&f_sn3W!R/\q
%(hG*Dg=J/">00i0a6]ZIpG!a0n$LI3(qU$:^-QG3rbH@8"'_eFo1tF:IWkTlf"l.J3L7#=*kWTh,e@shcA0f3Q891=SRh'LnSOBA
%q5go!bpc[=G8=21YCtQGqX!NLr$CqFpPZ;(XttBEB)K)M876j[HKE_AQ,6l(j>[IX\S`MS5euT0-?X?RG*1*'<6Z4hRd\O*no[nq
%[L2onhUn$@+.R:f?L_heNP"ChHuo2TdEpKn!ff"?T7/qZKAh;b+#E@87V*XhYKfUZr'_/NYZ@glQA%B]&.s@INf0Q/prVn&fi)Yg
%l7gH#]u3Kil_=#`Agkg_gA^aZ\<r9>jPWP-ZgI#cSBXO\8Y/G#3X7^!NVS]86c,nQ(F[b@)M8Wm[!r-$(8c@*_&1-Wm]gDkPAB?&
%M,7$niN9)eqWR]#<BMp?_[NRt.t<mrYah9G5ZYW1F^R>6Q1*;=U)Q1-=u:%8*po;1bU.q'hfH*bLt$7Lm+0I2AE2$/OH#lpT^rQ3
%XgNPBh`1/NlheY^6iJ8J&/r"h@cMRhYsBeWZe6%>UMSqs\kH0d!hE=*;u'0X7h^FVQ[<Z,Ap39N/SS$B='KCg*hEq>"22;5m"Q:R
%QQ$o%^QWOWD5(4'0LlW/o[/KN!4kr2\bMntLK)onqN.AgFR77FY$Sh"fBPHZkN(o.5!5'mho`q4b8?"(/\\r@/TtgsO?V8jXa+mK
%LD;edS$d(7G>o\(6c9=L$t2nS^N_FiSmPg2$:W<h>LU,QX)jo8(UFr$c7O/L7Oap&h<$3-XbCt"P`B?>cb+jOor$kYjmXHo/0p?"
%rT0*`?_:-fQi0eHpiPVH[JAb2iRBLsnSCNmO4$fC.mQ%I75.s6cL[*4NKs7E3h(&)39fTShXIM(^VKFZV7^j;3FVA]/85q@1YQQ^
%l*odPI+M_MpRPSBloO/]!gS\%5$Ujlg/]5Mk4M2[Xr^jrf6Y10EHA]3SIIE@hFVq]b?!,'[9>/sI;Er1S@/9a\U:8$?;ngZa\K=X
%QtJEPDp@A.d7K6+/M(^%ck9nK2C_e;^c^;&e7gZ5p5qULK1p@H@$"X<c]lA6\D#4JAhLLnZV_Qf,M/EMg[&h>oJl5E3l;K+rt(*?
%19jUFo6X[FJ*/FKe-<3Ba97UZ^0'-^:=Z\sZ$TQTp(A5sP+%<hTp.QnUXa-cUqPOUL$>!q,kCV5H0(n^BpPg-H,\J$Zi"<Lp'c*]
%^WSdQ$nE%#r.reg@BQ,,`60.$#B=pV.McZl'-sol)iS"J5qPeM"XT>VT6FX=a\FCZ8_o$dR,#[E?p;2%j?]/1Xk/%sjbbMOT0E/?
%;n<Fm9Ntj^6+p)]?YX#[ZW%@W2Xo1Q(L+)bp!"PTM:/Md2>bK4[Iie?E%gTb:S$rjgpqL@g8h[^-:XD!gsIs^]8,=9jLSb('Zhum
%a$%#;#b9+Ji'H/nj"XSO07'!m\3:t2p93juB\&1A_eQX6p6R*]*jE(u&Geo#cXU[j6ur%$_*]amj?Ah'N?<=NZ?:Z#Pq=XIBDfVF
%Im'E=Ff$RAqMo6N">D"/HC.jGbO4i&Y:(@83B:<hkNr%mIPl7/APVo=*Y^n[7;V$`RqXV+j4W6dCZ^6tC)nr-G4&.'YU6[Q]2KR1
%HH/VC9;CP5I*ros_SLH=q<6h$%=[_*G4H[3+SGs9\E/FaAW--faoRbrq-_WXadI?%4H5-(r;:FojYuT;A,5K]_-)5akCT57X?@q6
%qSjO3V7)EBe(F)_6srWY`A/n;D^W*0S65Q6)Jh:CNBu\gBU*'LR4\-$Ep(p7\bSPe*bC6-*adK+l%TZK3-b8qlY4WOBkO,Gr,`?o
%DQeqXomWpq3*Ha&<o:/5;1IL<I`h^Wh#<Tp#^BZN[WJs+[lq'GmfChKN^A_\L&=)q5]W=['2!D1%5!_Jfu-`t4[crP@]>i(>Z_VH
%*P!uaBd?oIZWsR,Pma/''78p$]nU#3>>BWaBkm"tJ#'HU.dpC'q>'u+5CCmIZ6siNr1]H;/,/>OTle6&F1ONr]n?fmjA,.q@*c*l
%TkQ.4H:b91*$(s&7d&&e"iL5jh0*i>H7[m,-+65@l!VO2g+#'c?,o33k+Gn6I=C=ud.$u$8gRR,mO\CbXuLcRT.<(l:8Q_8foXJh
%-nStnC`QiuEAp7-!:NAb1#Ri#U4T@/_EmT@^4A;YHPe/F&uI>\\Z>YpW)lX(UGTJIi/i_!GA>QtpHY5qEinuWbAf;L><Nj9pZCZ1
%QquO<RAX#be0^)&2k8]`R]6$8^&!Rk>PQFPeJ<$e<^l:X8t@LsK$LI)mBCQd)\&q*g[4ZXCghJhAkSu1HMC;Xje!Ta2GtG$Eq;4u
%K%d0"6eVN#?=@<_HG'JfEAaAjch:gW\3Jci5IM1TPLD?1QCd&'#)dNp+b#.`V>0qo@1+([7Y4i:\T;gthnIlQ8U9'C+k@feTsn7;
%8e)W>VR$)GpM\a=qSUhXd$.&ijFZ*gpHXnsXbbNudHke`@p^=jYFV6^j7%LXT:Dqs-Sp(#pdGQ0j#7s1[SAG64IC)%Hi(f5hW;o!
%e7J?AcSjZPZ9X3`q%Y;q-*m0JjQJS-q>jN_RE"Xj><[2"m&_<;7bu1"U(D7OJ"!KM9!?pek"8(FZWo)+;r>h'+\c]l#/#GO7pT+M
%QdBZ[8V/Ce*T+rte':QL4%`@ro*!:!\`IYAP<&]'>$OV5Y,s?mZfU#)cQMT"7`FZ&(dpqb4m:!eRP3a,c6cUubs$nNVf#=iBhW=7
%SYo5pKdX/$[dY2YX:`_A\b/:,krp,A^.s"pdNs9l2SNrNdPftupTin]g*s8^k0E\nA+,6WB#$lC?p?Un*Eh.tEP@s(M>kWB()TGD
%+L(Utd^5koV!=Jo&!<mC`VFLr"^(JG.6h=gK6M`a\s2$/eueE_<9'Q%0&GkBdLc5BJm<^_GgI9V/O+URgr\-ZpMgNsI2_n3P!A>B
%<4TM%9(X0&q_no>QisXh?nPLu9g*_k407YPV7j;7j3kp3qqVAW'm&2TWdJi[Vp'3,5DM7@Ddq,1!'RTXlFm^.Y[lfCHf)Jr9r,MD
%U0r,IFE'!(_1].C!k.VbIVsKZ^XE\j-LdZ\V\@asG`7EUD@NLbQ1@h<aq?=t/IcSnc/RtPU*7!0&L5&WagHoc;6$"GO5QF,_%C$W
%/u?.Y>(4+F2%#gKXX2TecdT2+>I:a2ch@ph"jU;n'f-baNoMTC@WNR`4CP)Kk`q3KWDb!%lX,$afqVIt:&E8'I9>hG4q4*l1X5,8
%hWi;'(FsE,CO3NY.\B3eM`/'Rm3uuYcHFrZDOn&cjL)V5DE2`*f3nmB)gB,X[.c53j%VFQGshG*$M2/3To-qen`:uqgP:j\G#c0K
%00k;JpnZ1IX/t3l?JR,SJk%Zt:YnHVG$\C*@A;0jFhY%be-uYJI_GdTmKoQBc>*Q4?8_ZWce9`S=SmI741"C)A9A*+VA2&^pX!j%
%;L.ijs(4dfM4Xj9IKY/Vg#;^A]H!W!o&'I*:TYl86DVsOA>K(>c[I#&HoDGS;6:q6[G$9+#gL\JVpKFWO8*eV.K&AoT7?mqM#Q:h
%*77OkHebH).MdWh[eengL-H>&>u,_;$ggX9$59jXF$[S'9Ha1o?n;"pnuG"EY<D[Q!jI/DCb'N;\\5Hre\B"g?k[jPPH\<4N\!7c
%-CE&J8/n6R@11[Q-r9W0-R55E-61e%#]^TqJuLkj-S4\s#\"+`B7?Y.I7;$8*fXjNWb`Fo&7aAEnImP<S3SbQJRlV4gl#]B?cVkF
%%;!7M%5!?LONga3qCupj0i*[7?Mo?["Vm%s%:.#)>ja'Q9WUMiE.sn8nqDiqSq(O'g762HRY8MGD*];\&Li_LLLf^bh1RG0K\Cr+
%M_RP`j\$T<OpTHe0%0J,(*"iV?il8@fN7oe_Bg0%^*VqDg>VL[dqA`e>inMO-PF-fB49JD.DQF:p"Y3Pkr:4EiP<kR_JS%g/DE"L
%cN1rsYSS6E\1Lq0$;gZjDM5kSMb@dja,1Eii@u:`3XO-@BJfXHDq@H@@68'/*749jN\:NXAY+Mc&(\Q7Flgi`d6*7MBVlOrTnA"e
%!>HpgJ%T)[^cMIJ4+Q[NA]$R)PE5k#83i^*qPpFs9>Qla5VV+[,))BQ>Si_MiG<04!m]=$H3'+kE8_)$WrP2HZrMstXTkCCpL/j*
%<Xh3CHf^&lLT06c"Ra=ESDfO_j6@mt<oRGrKuDrMV7<*)+BKbDiVm7E/fm7:an:2B?!!!kWXC.n@K6+2fbV@*JAhf&iXWj`_s2r?
%C<\H,,`]6?ol,5]Aeu</A%i.-^nf=$iVKcV!kJ)Yk1H$::-?W5P]/.@Kc"hELjQoH+=7^dCt+f#AR(@O".pUN'o*O^Dn8R\=c27P
%KFEk`42D(@,9Xn/KVZ<^[?0F7nONF<#B=<ZRVrLc5@Z>u+(k,_]=o&$X-s1D$COip"*qcXe@^g&qZV0$((h;EC+4sOJ-(;T)G5Yj
%+CKZ$61hX]a9V\K\O;VghhP]=PCbUnYn@Y_"Lau@KlqVQ+[DtInGmCAG9*Qlg'R!W&)d7d5_]?-JV-Km%@JFP"=G@\XnHN*H<TP6
%Ph$&Za$Hd6TM*J6?*t4cA7J$cd/dIOK5gA$k$b;WfK_Y.GsH]lW$stMa9,miK-l.>a#I.i!1BmbjWrPc[2<>'BG*T%bd7!=>RLfN
%O:'3ER9$ajC`luU!D>]rE"7[n!EA20$ue<WOMAX5ieN5g2$4USo`Zb"-;QoJgJSL>It\+&J2B5:OA]=5&G+fnmMD\%_bh%uIY07<
%rBQnr,sA,%?pgQBYi3s)B?lVi#m\KVN2?B&KQSS7!l>fji9@u2jpE@Kl3247g+P]sB$oc!cok%M,Rt([j;/%X%nn?e3$X@"Sq))`
%SkrcU_'G/)!*YRW6U:5cia'O`TJ[<,;8l03!qN8V=sVkPG]5q#$n0tp9[1^B&;C6S4jsc>EFp^1`.=3XWWe!;&EKJbKLM70&8,7!
%?sAX0%OfFrI1[@(>EDGsrete-cRpGnB&W%Q#]'XPaLDkN_R7n#n21IQ:WZ+8"8?kfB?!%[$nV_J%-.i(U@SQm5h5r/7<*ndh"F"j
%EF97dA-V&;=6b>]Z#UD/ga=N]W^VLs6!XNV1[-C."Bl<4_Ee3n.eR@WE4-`hR(9p4\Xr8jC#+H,SFiM-</p32BhM)"&E(ce?-p<^
%dZ7dCO\"XTPc>u0"C_E,fn$jWLI5$llp)Q.[KtOd!,O\g$/tG+95Ah2?j6uC'RO((#\7.Y(F:7V'?g`DK"gNl5\C?+KZ0We7?D%.
%pV@[K2%%B[>sYDC"l^p7E4mmF$X>bZ"d!p26*;>7%mV8m3J!u;)j!Ra#*^/_ND4J=b$<t7i478_Et,!hiJ^(A_ieh+)0Nm>Zt(*k
%j"b0Zg'gi;+7-e]6m7O4d!(!ga$grp;\TC3Y]Ohjcu*e*:.0YH]:]735WsWo.\kL7:fDsD;/6BE@5P0G#N_q1JYbI46IAAacqGaA
%O#BNtFbS;`]l>m(JSGbWTn%37NZ=Yqj(JUi!JdCRqKc2L7"#LJCBKn._ST6H3FE@!DLj$/ed;if*N])=<;He+6<,lgqaZ3&5:DV]
%(GKWo^93OX9i*P'W?K>8gGG]>nk^3k)5LnY$Hu:%TLX'RdK6aFK7"RH<Ai`q>"NH)K)RY1HAZN)\XBVAB10j*OX#FAAV*`-m"qhV
%Kpk07Q;8&gqdq[llRIdTIARehL'/V5aMUJ[7tCg6"kl>0_'U"SMW'\Xb[*U.,O;%/A=4+KK0g,jOP^?I6;2M*?M8e1LW&Wnj@NE3
%'L$@Lb])1cRh_l\W@pNYE)9AA+;`i](,Q0^,*8iQ&Ekk5Y+XB(iW[ItNn0h5)Cld2*J.OZ]`^Ys-C3h.:MLM]BkogRD1DoH<?P*3
%"?EYu"]G_`>!]ucPgiH3>^'aM`X#GC%1k46V!7/)#4W1lk61?]4U:4c"Spi7U9P5*kUS5W:p_e[`6HSD,XjOTCe$Fi^^2f&J_Kd+
%/@6K*j;Tk_"B-FuGo@o8"\[=rjbeG9[!ZIa6SR1u%79k`)T`GC!tWPQ+33_8M&DXj^KN:n'*00Kc).lE5bN)5:^*#j!U61!J0m\R
%-%s)Hl=u!^_.eI'`Wu\o]/1XA]:n@q8G*<^,*7b'a#!pI`mOd,/2O>'-57q+b;45GC5Puj$l6]>l9G%j@"-5*8O95UV0h3F&-DP7
%i<Zs>VSTKh68"!2AC-U#3<Xq@X1ETe.8N\kWi&*epB9k3NBs8^BS<rjl!iCI8!!X%M@Jo[LA/("L-X@efE=^f$Y9I@EC"=@5g7V]
%M7X&s2Q.8In"K0iL2Q'U2$B3'-n,$22M+%u;&i)UQkP9HO$K59\;#_F"%AAO+CBcNAppZ(&-95EFtD7m*Bg%R$uR2jOY`)>!2K]@
%!92E7qL\.4^>S(FK1gW03\p=G\W?pqp;'c2`@k.@JmO@&m"P-bW`(`@*=AtUN-P,2.Y7d:KQ]X3<a>k_JE?$u%OqJJ;aD)D3Pq+&
%c"47Ea\d-+Ap#@0bYa<B/3B"g.;T5G/C?(<&5YM7&BA/_JDcWlA\H$,%LI<8p(.RSpu#<=clgEI(]o;:ndHKlK.Z46R`04J"TT)`
%/Q?3m[4NOC]RPYW$\o7C7:1UnoLG$m5!fWa6X@'$&N(Dc5_ft<64#crO`Q(/hug=9rj]8jBc_kH"%?EjJc#Kn22DKc]hi&J5^h*X
%)N\g(iB.2C7at]ErHM0&%Y-`uG%`RlY*C8c4TYq483eb?]b4@C*])Wt6SfBAhun9CK[)Z1KWY-'bH>@V\1>!O:&Mqo"(RNIK231$
%!^]D(c;u.X$1tSGYTaBI$p_A;7h&a`GP"!o&H[ar14sN[0O[[_?\Roe'XV@1`k5O`"QCgfp%;>+NBe1X_S4q4fh,iXe74:`!(gbt
%9!m7/"MdDjb=X/o)<'']R?15P?!MK2\;,uD#D<IQ9aGVJ;mBL+0jcG=FDs?2(pFp;Uk6VjUnjpMBV-Hd=2lR<^ik+E1Hld-=n!7i
%FHC']A8)Z`YU%O`Q3!ls,VJ)p',\A.0,XkX5$:C[:@cj;7SK*/![*=s9S"?iQR"V6osAui-lPe&"":0VKJ88u&]=i@+G`+NSs?r7
%l7,(g34bgQW$)A5C&9jp$;^js1-[m[@t:VL;-g"RUC:+QeBTC,o!?'E++b7>MCsIrJaJP?n"Y9\h(<#0!XWG>@5uA;3^NlBZanp6
%&IX2dP'"3D'T!N^@(+o2GS`,k:^E4m"9k);O@O$t60Mi'aL.iu+NJTcK'UCkakG6>.\kQ>h4_D0cNta;b"PlUe4j#'C'u!J0s_1D
%F!-8i(Bq+TNi@R!^^L]D@US]E<h:[9Q*!;VH$0=rJiJk==9^8FI9\PIb_Z9]OA6ij!rE(0RKSPh<@WT0=(o6+\tSFT(CE`JZsX.L
%80(!$feFO;fTjTK-r?*]:l9TC>PS<@Plu-<1c(f;V7o'c\'#F!%`F0kmq<!<mg/Gl0EpuPj\KWi(P6C`1a%_p.ZbSN;.%NaQt(3"
%!Ph`98H^5-"tDtoI&hp"2T90*Muo]U&kX4b3M6V/Ue:mlAdLR$J=Ret!;niG:^k:1<7HOTGp"mGEQ(7.843j])aM>e!+8^FfpICU
%[VdET#8[WfQP#]q$jcV95\NP`C]crX(:l/f0gs"u!s3`c&`i>k$6mi:!Q,%`5R3)X;HXhBo["g++?4F#[IYX]-OA^:JUD%!,KSK\
%K-:tfp^X)K\1?2C6P,JinhEB3]HCJ'rm8)-g0c@q73EfkPG%E%5U>1uJk6]1#`G3`"F3ncDLk$;[=e8s&'s.P#_X6-,Wecd@_PSc
%&7lTU/#K9s4eRQd+SQJqq3^=H2$4mE$3s)1nYIF;KQ>ZTTXpger(eI''1aUj?@`eFOl'["!fBQGTNWa2d3mB\0F.;!l"37:7sg@"
%jM7u8H(Ap0('CmB#ZhI0'J"tM_6.>6pjrE-'-Ke4e`N<q/5UXZ+@d".:mn"cM'-ch1cKEO!aYqf;2]3]c>YLiN(Cq*a=*E!5XWmC
%dGZ;dWT-93O"#[dOQg%c-WHTF1P$#QOU1Mo7h`Mm;J-VI'u6R";K,U.Oen*IUEUOBQ5GQYA:a01k&pq$$kuQ2+>k-i>Q^-4:rW'L
%`Q*_jJo!6HX5!l3U<#cb6sA#$j\#XU?O-aS4k'-GZk,M$&G/VWDhgS=(LpYpV$IEC!^U5S(j)H[KHQUJeS6JeFJZp:!]"_P$06+/
%EeG>?pe&^;gW1Ie8njB*#ul:c3=8ik"Dge;ZB%aF;eP@4af3!<H<*?u-/)l8&h5>i_@+%4"9I91$H+MJ$NR11^Q84$'+kLJBmH=k
%VJ8)_.q3ROA?u9JcW)uCN2GVTR,bS:/^]!'b_CBF?YW"@cm_HUIDQ@Y;;M9UPd5"9.gQE#?UO<VW2H:*('2NE(Vib<loi;o(.L_I
%o*/U"5TZ;l6nA[[LS/",hK=OuY"KK85$H]k'%A;C64%V"CFbKb%`_Ts]^RXLib?*C0GioA'WoA7-]jQ^dr9.7,I[l)MgbgqPeW.g
%M2Oe6BBG_lmNpu5oP#cO'gSp?CHf#-_?*#RDaTtbe:!$kCUO$/>tUBF]EXHsd7Q*%0`(+9<fX(g*i<`o=#%"]-:&2Ed9Id2mZnuW
%B3?-@mWV.nootr!:fO"h;Z7qm.,BgWJ&>#&##n9'8$EP(JL!/s1S!KN+ctq=N<&LIZGJr=^br`NkVa)F)HN['0^Y24:X:O+@^+S&
%i#1%V+HUC'-$-4G)?IBd7_r5\E6AM8(MlbK&kmLl\[(f=.XWJL(nN@35b&cBL_^q]Hsn9K"^@rZfjY-mlq5rTM];9,<\"B93=<(#
%FB=5hBqu>s%g4W58-L*9#nY#qcAX.ipZ698TKKC>i!+_cP5nLLSm8&CVCEs1^\J`1_kI4+:X$\?!C.Xdi@4BFB"Ia;fAp[DjPa,o
%4"D9[ncT5."As-,5gkpD<Xer=7M`h!e.?e2CfRiG&HmD`b9u_FT$g`S%*_M"pdQGgke]s7d+QDqer.M_)P$rH**=J;,b;9>ao`47
%EoiIXOm!2%'big[Ad(ZO&EIWY`?XUs.B./,gbH-e25`OI4tmNK'ON)@jofnGe]'bK,]u>nR9gf,1*c:f^]E$r8XUbn)n.5hRA4LQ
%5!fVa$ETrQB6f/:FBOkqnB`Vk$06BS9Cl-6S5t8kZ1cFj'\E\r4_&m8BYY_rUp"s:5n+1M'f<AG:enO<dK,%:!+??S6(TicWKj5(
%LCHr?0k[5aO04">T7_]=/>)HK)'Dc;Y,$[VC"8Q1"/l8d9KPUT+<UlmSkK=Yn/.R/\q2K_7jQFcOUgM2KK3oao*BAiD?MIi`/,P;
%AK(`9$.Y<A3^3ae>)7ec2WN*i/NK>Oa,%m*R_uIZe'QQl4in]H;LUf+-_-f3ZA2Ft#]e-/(s55HfJ&a2WRac;FLc6--q\+TWVe/q
%oO(jE&kMepYI)Q)R#FCgDbFsAHPh$ik^P\B9H_Qd";N)Y!dPkRI^j=9oUULVI66YfC!:pkig())IFo]B+ipu!Lg.;a"+Gb9![nFB
%2+Rimf7:LF8<;uH#-4\WU]W.nCr>u_8k&g6dboZ?b!`7rP^6@A-n_pf8u3XpUUPgt_<ip4;dW.!l,WnETFp7#=hp<)-*_.!;u?\@
%bEmN]Zu?aYEYXa&&6B\P7gs0%&0b,>.,'iM#eGW6Y+]*(>W#L#4+\<sZB'<'K>:f)VQ\rk="u@ZQpM12YWS"468>gI'XI-78Ce4j
%r.HqOQ<#n/,W5[>MeY5V,Z?2m:GN@+W@9OcLf6!$^_:o_e@DMlZ1<FG9SA0-#":'MW[#NJMcLr<5_O]-"&]_ZKJI8Yf2ODT+>EJ1
%m$a-R?l4CT[K0NgkQu!uf?Ec-45W<M^d/78!Y?0F-e4u+W2gj%P%"PSH8N\:!g'>')Pp'jX*pYRP?8_J$,tuE!"hh^MPqN$#KDEr
%AP*T!p7-;a4q$M6,USDV/9&s:or'nb%!,3q9X5J.g.''a_Lt"&I'1Zq"A('M"[iNR[*h4<Vb@YTg8]H5bQ9Etfa=MkVa7ntX`B4'
%oharu839NO6C(-'NXK=@N=<BJ8ZcA-+FO@.PGR83b79)F:KKN%#1@]$P.%Rg!1(1tq-)FFFf&'d&sL;;$HUrD%)M3r.R53a-41$S
%S0%`N/<eOgRApW\-PLRk#i`"f2s+;X!_F-o!"cKE[>@=Yh!bi1=J$N.>,p521$n5)$6o_[I,,Ts'nfo!V>?qDVW9DM/$[eCF4m"k
%!Q7rR9N#GViau$`b[].!WqZn_D&=2a<9rRZC1Q$>TKKX-eHd^@,R@Cs,)Al^JS^h?n[Y];3)%i%EWL4MdF5p07]@#:5/o)ieM94p
%B/nRF7<8Un-9"AiB*cod4p7Re8KcX9/F$^3(A3qpo1+s5igQj"g9SdL`3^I'Xh^3K3]6*c49\'f]lFgO@5X^r,$#mWJ2iqP6&;2>
%<Wq)R)__>A$FLMZIt1S*+=gU@@Cm.<=9YIQ--.`Hj%5meUp@2,nh1PbC\`NA#36.80d'"9BciOMHHDiR<!66HMJ<]50bQ;E!tn.t
%(bJ]R8mi[1QKAHQRKZ>N1#/NhF;P!E=UkFmMD-IkmUu]WTY;HXoSTOb3]^]pY]t^AC(C;b0Onk/EjBHm$5U3f8DZNqCb.UiLnlGl
%E0W5X]D<9LA1Ta[&3bYEi#Y1Ei!SOB8XdGh"&i8SPdF=bY*%`@Y%`][$O%aMJKUgC!['g8?T/,NbU+=1U0n*qT-sl,ATZ]5@]EB<
%Trt1)VlFr6SI]t@H4hnh)'-1e+p]seK/Wd0/J&\"K@:s"5'6ILo]Z:*1k?HopL86S_kU+%lA;,aQgQge>or%$f<)2P=@1V:=Ln]h
%DF^Xr@5YVa2<Ee^"]*`b0J'n&&6BU0=Ae%VRMLK1MOGd>'!>sd<2KY"3""_N]!OljUbLWpn9%S90dK(J`O&V7J]7oJ,"aV"0oE"X
%1-ul3&I:hT&r=.<,_`d4U@^*jF>=-jTNKWAqRA^]<O@9=1Rs)/&I;jG<.fiGpJ##7JgqqF(F"qp`G3-1e1DKgPj`nS\?!F[e_<Z1
%-Tk%g5#LD\K#!AmI2r_<lFriHj[p$39D0r9e44Ln!kG2N9=ps0TrJ9knj[L_;jOE*2q1R1!\mu\8Hi)AoQ?Rr(:m/WW1ba7BNSu+
%!74B!L=iAq2LPVgE`_r*Q!oBX'J%Q"b)i`W.B%?>U/bQOA?6S;ARbl6**qcCA#0ij(m>/73c_)I0MsR!X\$'Hnfn]6IKZOH<?rJJ
%<4#)BOkV<aNn+=k_gJp2N)JjF;Z8mIQsi$L('n32/+=;dJiokm3Te9DW%bTOp^dP:lL"X<Kr=)6NM[UT]$q9EnJI?[)'VW:BsC@g
%/<A2<+Tr)RE_'T3oAl>d4-&Wp^0K8BU'7I+$;]qiD'D;g>ZF?:=btQ>'39]9AetR-W7r_TLg.h27MfbH'72o3=Kt=pC5M-^I4#I3
%>9um:XLV/n%G#m$4Xtke$T]is'e01lQp`fH/#\BB%Kpc@.L`A2nbNfKHrV2C"i_<V?1De=fdp*oN'2#f4#&i0\nQq3*0CMqn%S7Z
%Y0nZ@0m!o9UkYK37i8e(GkpdFX[MAWs81^!nN%m7l,<6apttAos!Ar]$^%L5i"i-k;An+*ODMOBLKWgJ@>ts2!7h;L#8m3E:jV.K
%koSs,l]Y;LYA.q5E2_?rXe7^?%8\!H)/EKFUX%*$%=>,A<Rm2j-%MYCe2-&H*"ftcKW2;Jn0KeD<EFL83lBL*^?t-18-[?Y[H":X
%SYKKMW7jRDQ\SXqK"=&VeE&DjQY-JEH+']qF+_%d-WHE[K"='VlLJI^QfmYF4Q2d@4;"U:Za"t;lo'!K<>CGf,[[g.NQS"Z.k#6I
%U!b9"8t.MWW(NOI:tii^Bp09r2XsUXP7s0=EDtT09PK\EV+o0u2ISKt-uIt@[)k)"9l<e]A=M!o)3d$6;qcn+ED1)1CJ('u:tk!!
%dO$$"2R-(m'DgW\!N?Qm8t-foCTJf<-:<kI:NAfK7UAn<jC4C\UC)T('a;S,@62h[JeAq:.Zr[UM$u0d11!d$j-UGs4"-52-;%eg
%8%2uQZ&acS">_0W[0dW$o1`:l<JXK6HNDX)W?GcoGK&ONWigo*0d'<0Wiop4`mLKt8gq=iVX"Gj"qF<*E>M=#*21eYBa05OSu(7e
%bL$b>MeSLiFHlp\.aNbj@;^9\%,C-&%Mf:WJWUARI";><6&oT^@Uj]jf8L;i`<@:u6i3l]8ma9fc!`@=lb/8OMO."9"G?-#.6@P,
%\sR?C\C*DfJq:I[@H"U!@=fCaf6^Y&MSjOCT5GSC;I-Dt';mTdXQ>*1L"WZ4+856!V=N2bj_,l0$Eh9&2C:#;22!ZKR_J)Z_gP4T
%jWp:;-jr1qYmJC2%O8,H=2icR$E?]76TQ([d88>a<342A7B?uT;!fb\'a.FTZ,XWb/6Z=D9UDKX0%b<RHU'MTd/QqMEl(i]+\=X/
%G]+uEZ+O,ah)&Js6;1$]BsV44;?Wl1m;]Bf=#qA(*A#`/dpBT5'NG^EPhfF'#3l7gq2+ftW\_IQ*G?Lpb8j"./dc]-?'Q#50D]1p
%9cdBa@U+caRNu0&neFm0kQ<gPUb<9fkUO)-KHX;r>?@i.lPN,.K41-cqaC*g8.AMbKITd5S/[bAZn^rc+bk-df_6f7NqTBOF!ha#
%g&t"ih_W6*E0)P\O#>BaQRbZX"@4)*o]PIh2\&@PE!bUk>Mas@.A![`FY-l$Ta`gc<a.1V=YLR!`QXgPN-O'5%PK%I@?Oq@T.9mY
%<0@T(9^RZo;3A_3WTsf9I\gKh-*Ja\a]2Kb4%(Mb#0Z=+0ca?p;d5ND=h:g?r>-.]/f$",F>4UfSF6?EqBmdms(%Vq-Oe"qqBm'.
%5B0X%`.Rn6-WL,aKDHrcf0@BMrlI(k:GSkuElRcJW:Y62PABHUXJ#QLS,+MQe3BY35H]JKggp5FP*5%(RApd$*b+$V+^(hXLp2pZ
%OuhFa8t$O=iD&HhY&pH*;3cQc&mK<2/Q3uU'`q=!%qa3/SY&`fP4=!O\r;9aQ`3(kmabIi][BlH!f1C=2k`IY5@Z.2^>4CtV8kHV
%n\QR#7:oX(LR0?`.C5jK5m/q)BU\\Cji#DaEaF>9@]W1!I_@?JF3$7);5/s;0jcPU4fO@K5]!"'\$0Za.hAJf!f6K$e;q##6m%:^
%\Z)pRYc=nkLIkaWj-c^U7sA.(]"b@?8tAdMW=2BkR40TXJs'#5Q'?aY!lZ4J\MBR!XtiXeQ'F+m-.c[nA<9r79P2BS1.t@jZ\7H6
%[at?tQ=h>]o/n%,VE+_"8uZGp4M#@3dV-.'a2Fo2Z)D\JMM<g"JCt?$lH@.G&^PQ#X_0d5@l:J@co7CGkh\A_$Vf'1:S\&/a#8ao
%3$j/]SY?/u'pOCMJ0^+;`e,fL=':crb.n,aYth$$DGLF4Khe?rh]u&Qg)D;7*0We,>6-41_G(XH3C+rg4Hi0qIOL%>=)E(Z=iGDY
%!=E=[;tUtjO.jj]5UIq2iA6A(8ZCRh^`^%]<4p^(-k%p?f7:jqA:1:@3?F3;+gW;GbY/E_<EsKk-\rqh+GO^%(pYtQA<_<gL+Ion
%Z3\F2nW:ke#-"V4a<HE`1D<.<5n)EV`K7VZPf4PB1jH8Y+C&9cEk%m]V'`ojL#SSHqnpkuN/DQ%X"qDp<cijjQiJK<nUgh>AHJAM
%BiKW3%K`.e#<9!(9pk]\.)9O1=1Q$PI]+)+"^fU\60V0"*u1VlALL0'$C#'2?E1q&%hM.^7fq@Wl;Gu!8Sb\R9YeRR![bbe9H4^"
%@4#B6@;U/egC=B\bTf;rF]elA,R-s+)'dH19KWtB&X*5/HEIGo7<7pA*/6*0E<3Z<mWfN?^^)3^\Ze[HX5l%IYIZ-B8RGH)(qEM1
%*Ut=:?>)ibX4$[*):eOo.^p`tQaYkR-\7YjoeGU%?L+;pS;KeGq?7h\GGuFXX^:@U-?Z,%4&WU/<lYON&p,@_L^?FhY(D4Ikc;aM
%<9.2^2ZY1mnbOT07o'\-'GWZp\kJ(ugmEenb_3Md#i7Te7WalAJ2nTR"Xl(jj8%c;T_3jR&P:=$O?O@\@#H9]kcGM=pFYL.A/)Lg
%T:/eGP/9"d&pP#8;)p<!p4Zt!8+S7Fih2)LKn>#P=:22eF4\^2`$\m6@lj$Cf*WugbKE$hTWmo$)9PB^Ri?78U4m8`9:]uK58b8r
%[J@NKZp#D"#QcqYBA2tk5rN&ue/:(&E*tk7WX#DsX`!o3'nX"k%SO5ankHM+[P:J>^3i@N=BHn'l(H/#5e^!@ZCnCtCi9\-Q9&8_
%U#n2j&ru>#YZ-nPH\;e0(nYI`Xd8I9'7C>*<lLl5QLIK_f<rS*H?(JreWE3UA?_.%6(Y7E[`11q[Y<80]"lTWI>l-qFHKgt]L#W,
%H&g6$emb)bZ2@7#/#Tlcl;QG9As:ZS0!Z`dMWC9(4e^"LVX$M:SqsGjYaDsg7".*2+k_mZ>E,\<d&`>_.ZjFY$PfoM+C.jbe=/R8
%ED-W,YsqXI2PI_joMQ=Q2`[b,#N,E?o_oc\/r(nMV.YoQBrWH+9*8BYT`XRo6"7AMec]3kX,A5t_@E2(d\Z=Pe^FdR.0^Sd>OIaP
%^]J*:_6j)*c\th&3Aie0\cR`F1D:H-ciC`*,:H*cbPK(ufJYlqUad>2=JV9g\9?EdHF,/m(:pMm>h[DSdUq6u2EO3=ZYN1&5>\+!
%;i5-:?cCUa93X\6'i0Eki)m.B@<Jt:90[0E.RuWqL2XabR/bUnI7KPJdNJ0sRSZH$oN3&eMG]$7VI!h$-f.]8>Zc6eeFPNlOqHel
%D#No*5(J8t#b#9LK[b?al4")bi68$Afs'sH>6DU4LOK0:d_;PX[OkX_?Z?"^mM)U=Mt)\pB^5-q6@h$/m7EEUV;T'hl<Y5*^%jg#
%cHMPX42P^%*G`B05/rBjnNEHsc#XjNY%gVRN%/rkK2l'+r6IhQKHQ([FgT#o`aH"'3^5,WoKT)r[TWR,1i=._Qc@,K*?-ggLchN8
%>'I.`fd$i!PSbmKd]Q7%Th[r=NcIl)_GF"M\i,RN&#Fp*[3k,43G`SV2Bd7N;1;cOQ:N\=^Sb=gBtK),PP/SmN.Me@XACVQc3$>6
%3MbsD\W(UF[i,9!4<f.@SW/;4c)--m?VbKkA=T)X!Od9R:3uuSj<C?lVlbh$.<ljJQ6>PDDTlQC'"7pS)6"KENJ!9-Eup*&r%=Q@
%TT3_?3WR9UdW0$gU/6g=;Qp4YIN8DQM+1j"('NfFr'2#AXg)UI3f"PT;@CQeIV)U(>-"&cBj78\*nrGjcVLH9Cos4#oSjP[]\l;8
%A)T#[%t9D$2)F_&0h>]G-t+u@)8REZh@i80^,f;iVLNAs/.d??2&1Cs4Bgg02_S18g:U8&LniiGJjP#2<nYQpC9e8Nqj.K/T%!5\
%7t:d@d:3<!NO2Q=L9[:CjYf5;MRd`n`I2Jk?k+aZJT$c8*Ymn+Omt?'V1c_$$kg+KDc?Ck`U_,p'B"#[lPaD*.*Za'"@c`)$M'm#
%</u0=Y.>j(J6&:E!q,(XT1efN`OAPj19,)2EuL/[XaI/,XWZZ;ITGC5Rm]c$6RUAp7<(TY8_fJ8XTGu4D\@+Y<<'@ROlYD5=oBET
%VMq2T<4[%dDdD7tq3K\c(J+&k6[[hT6M";X%MJs@+0hUjLBJ9d3N=-tSm(AjX0Sm8r@nKl,#\dAj0':$E`AWoFr85PY]_**$<65h
%/2M3FqR*QHR"[!j9)?l]YXppZ*nQ?CEp=6RPj(Q6A>D66aU2G^%GWW(g*OYY%F$t)h8(:S>W5A6A2OA2Wh(lT=B1N@PLGT8c1kgj
%r9SYWfcZY#AVV2a#R*Y!0g`3Uo]:ro>EfuI#Oi!Ib88`V1#P9o,tY@u)?BHV]E?"=NAh_HE=>I^<A*7/'&'=r&gU4lC29u@"m&XN
%UX["FBLnG19;IH!qSnkm)b&!]mEoH14bb28SP@eB8o-SY[b&7jA`!df=/:XUFN%`_ghrnF<V^.J]!pD)@OU"A#<SN7o][Wj8dI@T
%=-,C9?chXaLd"%fB3peMX=XCGJ^JSo&]1=N-'gl8+>ri=!PlF5lXTrO*$hHpG^RI882,]TV2ojXJA\oJckKbHH`^6##O=rR$A-K$
%.;TYHAOtBlC<TYDhiIrFD2=\*qtSC"89L$jeJ_-(Yu$gqV:=$lpU*83&l7O*C;LAnWi7oM0@&RW)s`8:/H:CB1(+eMaGsZsK/E`X
%GIp]&$*?n^Cn)ZTBsImF!EfU1"f]2?.Ta+K.Su"liY45.Xo>T`VlL76@Qe'?LaEMZMWMR:i\2<jJMjBV,SdZR;2nH$c_su*&e%+<
%4$lT`Ch-gB<I)iO]Vg<-9'%?8h,)Ve_#;([4"<Q@"J!V%\ncFCUE;a^j(j58g+M6dSYa^)K6%c_ijjM%k@Bf;.:j%od\;I324Ca]
%#[\S#M_D%p\O?Ol`2$L5'9#HKW\Ge%PsS,D6;-20ghL@WUup_q3[&!+,#)'q<_QdAd!l@+@5uVq#]g:=VHV!<dSK-X!<H&U&s9qR
%dIC]SV2]DdXl@K-a1N0%C[H![-K,u;cP0Z+(5Z3"l]sUk7"U7kc`BOC*Oe<PGi8h0//!T4Wfd]/pb#Fn@_6\n(UHktW^q-((eDcg
%)pfPM78QoWk(&46>pOS1TtN:JCJ^Y%2HN5'7#.'8%FZmu.djZY7AW3H&V-sa:Lg[*FJro;au@E$T[B#&('/YU9&r6[PKt2tGKqA$
%)HKM)c+D1(i,U68Ma?3cON:8TKP2]H1+ggV0uEC;+:5.r.'7Jr0N*Xd=KoM*B[uB@.=aQ)FB!^"<E_0)&D\dT'od`X7q4[$10A*c
%S`k/=qGfigIg&rmQ>/O<nlJF$pM=YfZmP+8^US231'Bh<m=ZSr97U[];loN/6'MKE#qM0<M&&0/9DUnPK>u0L%KZ7B*3WtH[Vitk
%3`Y]T9A!VmU@7aP;._][%7(J7k@uAs;nYl%8$PeX#'?W]l40VFERf2n*i^aZ.R>TQr1Z;UZTQ\PdrLPlZ]uC.#,#thoO*6Jhl7Nf
%Q.Oj6_GK,8gb@!>)Ch\[Kim-\5soP$CV6fFpAsn#jRf2=<qVL`Ol5'p0Tn&!E=<I/6m$s[1KpB^B.Y'iThY&jHst&i[KA5@Q`0O4
%L7;cQn-m?qBjP(X<Ms/A";$g_[%<\h(^[J*aH\*$&KaJ,U,7q#>c0%QaL]5h+X7S)ZUfaIoc!HXW!q22So!BB9r7Q\KmPib$rUWJ
%]39hLb.'F*n\Q87(M'+b$m^KqC><\uZXSXCk&FpS2[3*qS(jkmb%HTMl%?*(/gS/7($iI!`^;nu[1]E[:dMu#HqS+5*"K:9J8qVB
%JMs1g*\*+,2mfII5-,V->`Fl%0Q.6U$J;Uc=\p'5@n@elQdt(lJf)<4"o@qg5'%e6mW"69Ce"T2<Zc=SN!^?M]\@fb_Vc9B[!mt$
%7WCkbd:2b\Rop0%!c(=>N[WCb@%]s_&-o'+P=%,tcH+>NQc>DQP!YhG`-*T[p1DXfdPIBN3Io3ta^O6i$B[Og\'PoN.L7W6RRA5k
%8?6:5?un[r2AgnQ8=RF:F.+7L_Rq\uhDG7Ton@ZN<EE>K=oXP#glan>"M@_r$E"DPbK5r?l3XcD]jE.hX<8WH7d,Fu24Z"@fs@=g
%V+J@dgsliJTQYBX&YE4rW>TI-.^4Ha^.>N]cOD<E_bd%0H8pb0R#3Epln52?J<DNtAqL+pOcm-dIuZB'\pYk[XXeb.8;Uuq]8$G.
%=W*T""n@8W/eE-'K'oN6%tI^L$dlK(Z+4BC%7\k#@S3lN(9$C.Krk1)DgEIP2JVF*1p0Q,-+463o<Y?nb:h#KWq."qp9@H18sC<:
%!4!"'4@"RlT.C?8=:TF0Lf&sp'c[KfN.HaQ%=AA1Z`oPm3=2kQd2gn17L"W%,WK%&[S][rjl%'a+U'mO[VJTm2Tjn3Yc79<d;gW\
%KgpfsS+EQu85c(9_rdY?W"clB`^&"4E]5DcEq847=oTVtIUl8W<$Tg>m"!HujSJ[fFTWcn[Foce=b'QLC!eBp5=+gFLoO4P3SfDA
%<qSM;FV=7HXIBFi0+Q3^/dM_[rbKS^"A9g.$WptL[7gFZR41\#g(*NPPRLCBC5&^:^c#$&_\Gfl("X4uXeSuV9(NeXq((Id57#3B
%po0;^a#1/'FHD[aFE#<U"8+VtBTX!&DqInK?q?R,h"Ms@[S_9ed)Zu5$6.+dXP,3s7Ef")Z:nV'5-(BWUrQ%0&pI>cR#WKBku"q9
%n&?Xg`nuotP%UpK]sk#!#C\I4cj5KP_?*?Sm&u7i0E2``4sXX=F:F5TY"O5Y;n@TPm"<5*GdL:=jenida^)\ZLSdD9@U8c;010%q
%#Y"9lU#^^[%eoA'GsTu1_"tAq=X%;A&uW`BPTbkoJH/?Ys1N?**l>0T,50m=e+Lo35#:M1!LUlVBW?4QPh]s!nE,ThUbPq$Q'Ybs
%nhNn@o%38.G^;C&a'%loomG%1It0Ie4p4n3_9!mr$AB"@Q0l8_,J5t]a[72PCU7_TReoVtVt@BeGo^mWQ`Y$hMbhrf;2%>4i8>mT
%SrU%n\as"-c*jh;517J#4VC_E15`%jcWjJ+:1Uk3`_2O>(LY,F@5%L=oFTrNoRka);:i#?L\j&L%S\8L!"A?QB@d:fge0b(7MTA:
%ML6'4q!5X(4`nWUHi:D3VDZbL\Bjd/"edOr)__h66=V;A4M8WC3hcV\s7[NOH>(X$K$rt>X0;-^?uP5@a)-<C%;74sb0!Lb0a@9$
%1VlTEk2%aYT"+ED?e[:ZZS3KegBmI4iXaJ%XDhX:^(?Mb\E]5SLVuNO90V*UoQ.Bi5GG/d_-_l%+H8]7"a+d0`e\Rf;#OOSN5DDd
%FfX;Ec9ZOr&.*:]_pq=cXA0Ad5Hd"q8'Bim$F'>BC\!<&FJLGHBD/q"rG[l1EFnaMi>'eg^7Wom!h?D-LJf"cJ:B%0F>XqYW%6?u
%<I*K2)nj+ecMb31'tOnLmCYH42iD=Ce/\N5r)C&PSds..W8HE1lVWIK.?ndR`!7^8W,'S?)aCRS+:'mNg%#4t!FeP])A*Vge`;go
%-J/BO"_*\.4@'(pOT6Ok'2CRi.#`36]&[UKglLNNXD@C)e`F]^s4Wu(>#)VY/jKm1Vrh25B\cO?6EL:T!`OrBI3%n&3hsH,f.B5`
%EjUnVI\0c.>ir[K@26fs:sqK1,(JEe?F]R!Fs;G0l\:23dFZ4KSM;c#Mc?!$Lu,+8QNCW%)_Y'BI^!n0iT52XLE;UD2hg>L&DTm\
%2Xc9HS2J'RRNm'b^?&/@Wgbc(N%2d9('><6T%AD22''YX%IeL-_BIq+E$+8f$S"/o@nBcZ[fuk^q_bBM,VsT?)KT8@HpK(sh&E(]
%=l0_`H!V#*'Jn\i.f'QBF"9!Iab=8i+jEQVC,'p^g".C56$qV^mL=O&nuflYT%=c8F"",kUMKdu3W<X;O^-^^=FJqFjS1fXY^PEu
%$L)6]:RZLjpc2g"Or<nf01<GU'ra8r0ppJY>r2-"%r%^`BPtm&Tge_75#.S+BB9*nqFbLY!RcnaVH6`jibR>"c+NK1d)2rOp2.^B
%F1r^`j1KY'&:=ni4eCQ@DU>26SUsfbQiru'N"#l<;),[9/T,7mUUb_([p^*0C[EPN-R2"r9_rdSc^B*d\AitTiW3:SBH*\r%6Bk\
%/N\O!Em[FO%8I.a0"rUc";Z`(PAYDJ/bb7;It]k(\o;]7NVc4I=0C7ZbPo.KpY3FTUj'AT%Bs_@Nm6L/jQ&s]ms/6rG#\\&2EXFA
%q"nan-hYIFmV`a5]*<P@T@V6:1n.?rVYflgfV-oF*I=[4J+W6u%FP/)lg8X5kOf"LSUUVuo&tB04V#LQ<2AZ&ReY3E7n4UeDsc67
%2EQ6H?Olc-N/nA:RpRE\VO@m(j@)$f.=aHijeiYQ:Pi&u+lb2s6DBdo+c)k`NU:K2`@QkInRrp&W1mco#>!J&^_@b)JJLT@bX@9h
%D)5G)LtSspWGj"S$bA8*;#uPDO8HsNIV:p'EP43i;<UY#DKWT]XTIj%hP%=G]!"J^'^e\gLGqUl29"m#+6W;AJa>LAH7JI9aUQ,H
%8BGAHj(dK>S)ZU=+:$iMT8Qij73qcjiY=K6U@,hV_N0GZ`uJ;)N]K%_!jBkKE7^##-rcf<W9?#@bU=c7],Ql4>5eSF()iFbos#EB
%rV?'aBL^[sR1fu<W1TGS[\VT<;2*ZW6hRm0U#C'"LYVO,!TLL16iHt&+6W<LW96crB$T$72A,j-I#e[n_d<)])4MaFFZ!Ja*0TW7
%3SO@%o3t2/;/Gl`N>A*$9Gpet[<^3PpQ(YH1W6>^T!;W\S=Zum%ejts*'!N^79-9>?Om=??XaGbC_8FPk]X].l&`[=Fl&i"eb?t0
%SFub\N0;2Gcp/#-[jQfc<;/A:VqenEQ\5S(+5NN86V9GA\&3Wa2Qu9ncH-_nQa>.&gd+B;V*X;Lo=Che*oei5qmp2Mff8-A^7R58
%VW=`n8g#6;r;=f+lDZ)LW'dPG#5.?WI2RA+Lb!&bmL?AHFguAQ]dMkn-JY=5[%8&F\r&D&-m;PZ[k8Y-;U!N3lq(9nmNF"KOX;[f
%gdabS.h#iT#%MDVp+:VO6o0/QXF6njf"_hTfpU\G>;n[VfA`RQA'A)k37A+K'<]U8Fd]9u:#'+RfK0K1g'&K]0=Cno%QdoUW_g2A
%>d0$5h:J@E"R9-.)oD$TcF:]>S2\4IRI:Xu[,Xa_9!.UrAOp.;<,/1Apq<ju%s?ZP)6Xu'eG%_V50j&8VM)S&R?_TIs*AT>W(8e.
%E-P4*RVU/?2Yd@PVS--Y29O+I50iDN+\k*,dUR#\\YQAc?_Rmee6$M,&sqIah[C&W)iFW=D9.%TGWX^$H$r!M.cZO4O<ZDl"2cg"
%U'_4G#D#G</mn<pa:J=tS1bh-%J+VMch%!bnFCqn$Oq-91Q6(ubG[dc</_me]2fFuMa4VV^MW09o%VRK:[@=L=WB\Ye5/F1W?-FM
%$'Sq"+_,&Z[sRS4+^>Ps.;;>%Dhubb4kSq#o*%1#S^7g4<JJh8V3,[c)3V3^bfM/*Hgg:I6_):Z=V/;*A8$t3_gS%6qs2QE(Kd1/
%9oCeU_:;9hWb\Hh(0\lpn<`HjcsVXe<7@:umW0l)UE!4UEn-@sbS")V$:aVE#cd7AI*k%(V3VBg<`b/.+@-#kk'9cmC=P#ePpY92
%m(sd-oQH(.feYarDUnfS`K^m`SP#6QX,BYU0JOuQ_,U,k/7hsA/>Ugd<"nER?(j*M'KDm_5S:.tbQWV%s"Ee<p;NsW4M7VbI:o6r
%*gMBE/^N];2`h(:#@TZK9BLR\?suf$s)!Q3IPJ*4jHfm9_Mu!3jB]_0=3c`h'bDjjC%A&KTo5Qa#Yr_I@_(\`pUo"'JupLj\$!1Y
%AOkMUhuIlpe<1@N@OHO_@&q2<L^f\#!*l-teJ0:/!`p"=qa0Oe0DSXDK4D1509A!s@Pu$9nE1F''$3^,3YoJB>1an=J@agmcuTUV
%phZ:+YdXMLj7.3.\0t9XG`k>po;A>1R3)!<+p3,_'$.,:apk$]Z88m>`&&nB_i>S\(tKL,neFHhG$@'&rNS#AZ@nkPFb:rpTph<7
%ZS7-0ZjBo`eB:^8Fo@Kf:'![CV>hqP9AAQrNSS&_)P*4k3K&'aP_bX87YoQh?RqWg<j&AH4[e$9iB^(f>MF#:C-mGu/arObPOC+u
%'=JE22_8Zml:kG<c+GJYLY$-/`u(8:!)!H'B#@`$f^?+6DmuQ2..9m7!h1[0,fo"Eg/?D=0\+bY%BjZuK91<$k=F-U9a*bS^JsY+
%,9j]"knmWb-YX3]0kT)G)SKZh6c_/g*#!l-9VZ?AjCNO'b$EVR;bdSF7-NcX-Y6dk&,X#@&6lA^d7P8`7"&0U@$0J7^L)QFL[=8G
%]W9$KDE&cuH]:t:hOlA!!U5T';1sm>`u&Ch<;JOg=IW;U34lZuio0$%ffZ7\F8.c>BrhI,7nEK<[!!"K22sqMk)l4*V':Qfk7=-.
%[bEWTAa^EG]5W.mM7F5rUU)mIWT,(*Em`V*+`)QAUE(m5:`e9SZ\jMaFkC)cY9V+H<BP-6n;E;4/h91oliX6),N,@/.U+g&o+lSe
%DlWpP!u=Vgp!!k=^a<taRV\2V`a"iI["c5%QG<Je3GA,MpN1LL."9t6]+\Q%pu"lH4aZ_#!HVDM5^9)3VP'6"]L8!nQGV%-5>*-b
%HBPc>%PronAFIW.OlB=`'@CZK67^U;W\'445[/b0&41JLP)Kf'CY3d^\"Ljql66'q#a).+A.Vitm2ZVPr00P-Qod;9@Dk@AqpK,t
%P0d#0Wu*GbD`.X9`;c/dLXtmDK%Vap:u3e&<L90W32fJ0rbj_UmsZ"t8q]WPG7>243g6paXAJ4_%0S1"PuhEl8=Cb$0@%_pOAs/)
%XH?UZfj5Mg&@e2\Vq,'XEN)48IF/c]E0Xo62]5o$Ni!eJH*q_FF,J:@&,fn<*[^G&YeYdcGZLI+:@,]AeJM0r0de+OdW@lfoHsCW
%e&8d"@,,XIEoX-V)BD^e%aVbt^f'sH%F-:<U`!<sL[k4tR4Z>gR@U->gb5T+1,m&e:'nTgZKE90Z$;)I>Gu%a-kf0KH,gW^(YBMM
%%ENc9hC9Jad/PSDqM983_KWA'iCO:[6(qPbE\MbO'a-(f?B$/26#8MU0f?\l1Cn'IZ'+"9,mBC]QED*]A\9[`N(WdF##/knV,ie%
%YKdk7*3(Z26])BnDXt-T^'<?f(Ur)l+5Lk4lo\r`_[qgO<ZE,f&PdfLgP#GngL"X9&%2T@h<o_&-_]0m2duha2_Q=';YZ@pUW5?n
%`_RlD<k]*ub&`!qgXDiB`=PZ[Ge^2kpptA[0uN2AV41dRH,h=2UDK&/.bTIB_IaW+Sfr#[ZH0$M;4Dd`GS,.-'a;>-.GmHWF6%KI
%h"=X'!-5GHIIn.]"G40@H,$R3UX.\j@Pg`e5VF]"^fVu7incZi9Sgo)^sOKK#mb:FQ@Z^9r!gfY;bDr_,r`W05`V#H"l'F+%]U5D
%pGslWR0LNmV!:S$+>i=*VhJ[ooBd>Yp2RpAV#s!#?`Dc;b>Z!+o*A%%V)*kZ@o<etrm/Nd%4181$EDU"gT[Sc]?7oGLF+""gqT_g
%cF.F?V(6dkPU_cF!KA[m0q/johZc(c=u3U)!#sS8S<bX1"HOOKgK)Lo\L.7E9CiXDF2H&1&_lMR0X\"EU1.Rh9d=?I%)F1pAK+<X
%]lNok]XD\Z]NJ64K%hTq59$TDQb_5"1hQj`dH"irRh4p4EbPNW4U<*,i'e"k0TQJL(Nf`HNVt]UAZbeH<.2[OlS:>7+OtKlrqNbo
%2.160M&N)u:b,-<B[uYS(4(?7.l[s]&"?k-@Cd;=WEk[7i&aXK`K-g%2EAXTiIOES'c-;)9-bC-btPYLYSt-56"hLY"=945$?@K<
%d+@n)mj"VTkK]C.6UK">-Y43\=DEbCr`\36dZQIT,H.S!/.0@r[X]k66#6l?Md+aUUb`Ot[2-piM]gWFa+bdEc2b*Rc5K"8,bcDE
%$oT_:=eD6jmT\*q(53nC&eVD\0sri]e_ro1%8&hZ]N!uLA!mVU@&$qpF^Tq(Bu.'V\mSd0'e[j*Z@4qa/8TJFfmnSc&K(%`VfEr,
%dVfh2/a*?9'WA''-jaB(iQ7#V1BYKTFibHm[Z.h6eLNHJ#1UnsFJ7(X@o$)hrDDKl_@$uP3NP#1jY8r`9"E;?9O'*]kK!u7/<o7\
%FJ?$XG7EcI=(+_O>O0.pDm"6kL:o((gpc2<\,_.[2[C:efG.N)'Ec:)JD`JIjD!Ihg_!lPJHE70qIZ$>+S&?iiQ>Eqi9+5p$=c!8
%Q4.ofqo]/R7,fIa'*NVX#fQ:K<kkdBWs")Nj^Jp=ID]iGQIi_FK$/uI,Ms`9[?=RL5>=':Qgl&i"f+c+!/VA577\<oZiURH:le$P
%Yn/)fTkk:B]D531j:3ZHDV&eT4T0Pd1I&_b2L_IQP1(XH/LTP9.mPe0M^s?a16/%"(3Tg15@%JZ5DK^`MHmn)DTK7*X.7M4#u\9p
%Q4UO"qR+csaef+);Bbs2QZ\jC;*f+!OQ=_G(8P/I!n"DO69bZq+`t#eQRRjAqo@%-2B#b:*.4ul1c1CI>G8,!J1jhVB'6B$gmS@c
%kI-D--LTi/"5GIG0/X6lMbUi2RI"g7mA+pmoWoM$M;9p=l+"\4$)5'mp_ig7?Z3:S"h*bb%4IilX.#*q#"@$5L+jQ%*D:cng?bAn
%d;@cIl#<4q.g^8<krbm*2[^_T7Y*HK93>;ChNXsbJL;=a?2'C`aAdI`D30t&P&9m$]6qAI;40fp8]$/$f.]T9(%f7;AVpEK/)Ojs
%fUCtCgOSip\h(0Ko&+JQ/rR(!k=Lp>C-_$$NH0F_OH([<Qlk?N2OCVi,W^),_uuF!%FU&Hk5c@U778!@!2A,?,XK#j]$F`QD]of;
%UaNoq^`[@``KID,M%pld?';S]lYSlIbF%UofF2us+sI=o=Xg+G1h%X6Ja!Mukjk=0b.^I6nD7W&AKGF"P<<ue,[_(;!Xg#&jNq"N
%.6arRV6DWOr[*&>jc[W`p=?DY/!M`k'DWCbV8cVlA+$2W.oQ_RAtX$.ID:oGg)?<4iT\>*fYa<h/+9lN6sEN2\8QRO42ha4;,[d<
%/OB<U/=5fpTn^L_K]LQcL^=rY;Apl@r]HF.<r-*sX10rc#=<sZHAOge__LAoXa(B:N,FWhJpFABM*NO<6;(VbNJnIS2P7NepUdfW
%Ep!L[Bh1&APkpbF];=sbjf^),gL>"84tU<R7,Q%YTpe<-bK9An9>+'W<341iSIDd@SYC77H#Z]2B\,8d_B3?V-%M9&0CEl;ITQao
%pQ3IoFJF<YC4\"gjn,LZ=q^$J8$^o[WY#rSB6]'*<Cn/o-D&1m^3E"*L:+76'0pZW&s8!QP#3Pj$qV!BP4C"t1$%rOCUqO`+M"nn
%,Vhk_hD;8X7344,#DRK-p`aOE#DeUXWq=PLMkYc;=Q5dK^&<k9p#VYKjcSrUe6#nMd41S@cP:Rn&Se)Sn&j!E]09:8qqHk3[e&m"
%hbKXOF]uU&h8oJ>TUsCcAk!e]f2AMlh=\K'4<l#E?T5WZbh(7VSb@'^AY]@BB';"Gs1(\RldV7L`AGju%N&\"eI75i-A)dMg9p9b
%rp^#NJOcd/5V>ZWgh4mY6V*\H"TW^fTajB/S18=+:aktugo"_J.mI;\&4\_8*cJgPj2Yb3Ea6'Y!hrn!8Us2sRs#@*E`V1uA%c%Y
%>Tm^-aLUHfG#[GTDb'[alWm^d6o#[likD/dg$=*H.MR?5,dkASH]qf6kpU"Ch&F3aUV7i<j1O%s3Z%"+>Si'Yimo]*:m#AbpBDH6
%F]X?'nY5RL'i\_6\"eAA2-5\,"^RQ*VMkGRQiaG2L":_ID@Ur3AGYW*@Idds:uBQbV%9XM`MOM&*rK"5,/dj5W'X`t_LqumWRlP=
%Er@3CG'e-e&d!:umdn(oKGaLi-t=IKq5Meq21.3[:c^[]34cfiRj$B"Mj-g$%5Dq5nTMF'oB$54Ht1CWc=6lqQO%h*($`qT#.6S^
%>r0FbU%eD.gCU(KG-I%6B%n^(3bbD$FaokWC3PmcBqR10A9[:pf:ds<G(TtbQOV>M..utH+6UlZ]rNNugKUnTq5Gcj/ab"pG:T;<
%`__2.ePYcO_O<dDNZo!&SiQ#Q``%PV7B^?`H_iPgg;`"hU1TUkm6GF/:cmR\)Ud?u[=Ol3/h-Vn(OZ/1*.(J=S>5LKr=r2f7@ecV
%/?ncCkA2bG:>lHcl'INd.EfBK(EbsD808eFYs!KEH.X=o=cl"KgNF!"'n*(a;CT-'^]p`qc$ajd+9j2+P1DJF2alq.*=o1uKVlS8
%9b\-)>DSP18XC<]-]E4NB8<i;79X\;Q\1'p[jPI\V-#FIM<NhYKTDu-(aX8Io@8gS*70$uBZ[*9HA\$8j`5nedt*\\()bB::T-;N
%cCaJJFM3W]0[I0A<8^@MSM7ZVTG<KVLF$+Df<f$7&W1mu\l!RZj`YFNK%(pVq26'LHd4r2K]C`(=b_UH1<Q+5MAKe#9hJp,9a$X/
%^ndf6&q0P4O4B6?M-%E4T@T]0>(iEj-uopoI;lQY+a0_h:TIIWN4ck9!.Bc?IfG:dTBf_pKlRp>#Z-Zs%AWnLJkL1KiZ+@I+bI-F
%6NVQBlKCd^*)Y6<&Zo;r+dB8A!C:"GA7(!$*)XE<[e;!_&mHja@iB_^[mPh7?l69?kU1Qp_?!KX'S'VF<q.KFmX=9hKj_1S4[Y5M
%gs_bc.;tMKSJ7bu&d210N_"'lkq-LSR?BnmHdZtoCl.G'q^$Si8=-\o8LR;e5fNAcfHJ$Y0qrF1d&\]MFtuqrV*g4U/(RnQpeF:%
%T+CY]JkNHJc?1\WI=>dmP9Qd3J!%CD\'U:2*^b*r!k-3A3>1D,X(KmW+[##.]JhbVX2rb$fk2TJ+!Br':^5Gd*-+KI%@KXI%.Kj+
%3>EBCia?Qklc&FY6=J5%?!2WO8Ck]RD@,iQkmAIP=tu8t@9]sHW+9J4'MWS'\oIq79iS1WE,p\_7Du2jIW:R"pF/&8PLO,DgHq6;
%7!jb?e6F,hVSqf7%f&;)H!+Dl1;jR3&,1'M%ff^AlOUf((s,SF[GL>E,!UbT*X$]Eq`0=fTf-q@hf/Jk^CKr8N4op5e_I6`0Wtje
%K5,fP`Vj*UC;^nr@O4?m0+a9/S:XUX:!i2MpPhb#3hM(*r-1B,,2<icn^Ur)6anUi*ifYYD@Ok"P>2G/lKV208#TdYX+/%-O3PZB
%H-,YQ]pKP\M7VM/7=N<B97_FSLE9pY&LI=[+[bSg:uBUo0FGJs%;l21k<6`,J]7kAT\C?Lg2:uK1)47V'B8U_H)&Oh1BN*HT+`At
%"a]'h;FMH3ZTYt!WZ[;"iQ7%YZi,Y#gm0rLFtB(Q<J6i`q*)BdGgWJ=L>o`8)c7Tq*;#=d?<*sAJ5\GU@oo)J[r/6l:e7Ej#ot"d
%7jGV+:Y;<P$5(HKdk6YA96SSdFn((;;E^3?DF*JH!3crk/*YK/`[)k?r5F*,YOY[EB3Bun;)?*FlB$^CG,#f)lb5H=)i/eLpq#E!
%\dnK%]QldoP<0lS8Kh5@XqZiC&0#Lg7tjY_YXhZcRs="BMe'%5F#NN1B\p]X)n$aep77A6>_oC3Rc"Y`?,uY+70e"3,'H4KIE@g.
%1b0&dYF"f6c`#k4gUl+OP>SOt&36a='1E=\9cWQ]HM<YFH$^!K9fsOh5ZlUH9LJ&SL0GC(]%pNE91/@$m>bhA\JlX/n3(VoqgQ0%
%^Ai.m)+bRs5]m$*Zrso_=t>N`e7nDn6d'8mO`WUC(cb?bV5L5P'L_grkhJ+u9WE3O3-#sHIF6*^p(:\ug>m>]7+FIqE!o?d.&n^l
%ej7[bH^3QE2D=\1^h3qtQl^+t4o!"bbo6\d*g]&V';(no8#cJ`TK0q-dFF=l$RT\#"Z/<*LEqi%MZ%Srl&m>-n9af3M[Mn)s$Kp,
%J'p7MA8GimPg4@WK(>9;/HN$cZBLtf-1lf.cF.gH&;9><@D.9olAqe^d<^UtDaguB'tY?O8.ff`1)Sq=4nWA8KPI@4*N#!:+YN7?
%5c`sO8[@Wg"?"HaPcFi._OJSp[P@&H913I^inI3Ql%^>"=kspWM0_3L[#RC^5lC35M;?XofkRa&n<tBho@g=\6ku`Y:tCYFq_Ifj
%&_!KCA]$+>`dP@XoD4&.jP(2c$bR@FRT8Ju>W=m5*O84F7OP8'@QVq.,!SrZ7aR7?5B=YrH5@Fu6\`d*\sq.t>O%qZC-Fr<3+D_n
%('L/DM7f0t%AeNtjgF66E)s=(g.mtl'P`bP0@!V?2Q_MlY\RbE@/u?YA;d>+cXBZ_Nn[Re.'pcq[-O4`?*C<^b'$IX-FlaH)"XV4
%;SZR:NW<+gP.[]mEkf9[WWj0+iSi23s!G_O$eQ&%KbB3`+4b7l$5^d[,6Dm;($I-Z>[Z./Op\QAgZQ*S(K=EH\d`n!Zr@k/]lUeT
%,=.J<VJj)5m#Zs.7Z&!b3l=\Xa<2-8,%hlO`?>8$c.0j:M:?'OR+_;Zf&$TV'LK1!DkgZ<4>#jV"!YUmO#-;[Q%5#E<0LWV:,I)C
%LAYB*5T#f0l)?=A/b71V6g"^\rp_^Glrm>Pgh9fg"P8&Q@fqp].AsEp4#5<a0SKK5-t=Vena6,`E1S:[;>_Q<Z&qDlZ=+1__YNjF
%G;i"_aq&WqUTO]&&kt<(eS=)HY]KjuG3e$DR1_Wh<jbF8V;eC8.nOJ"q$qi1`<)W70*HZ]]ME%AQ\3j%Ou:Od4rQTA82;bQmp'"E
%jE/I;O^cHp1C]K0)c1[J.Ek&VC^ImULTSUY'K+isR-??C)G+4&!Tk3%K\mLu\+[)lD!eCn&FM<$ru+'8$EOd&"ec?U?dd>Ck=-V!
%q1k?k<\-OG#)3>jX0UTuYJe*2X6_pIH]r:H7#,%3<gBmKQQdSH'N_AoTll))BNqh9/D[Jb07A;l53o%8I&L]Lnm`3mpM1>CB=VA>
%WBc09*_:uGlEblnW4[c@1e<^qL@i'.`=*DFSdt'rBJD=1Xjfo9i4&KId[Sn#o,)Us3#[<e01$7KQj6>$FFNsU8#n.m#=YBJL'1KX
%=>4FB,*T&W8%U7:_Alb8&A/"G?V.QC,#I6d:&$at:52THKQd%KS6)X5s3s[$D.FiFMR?"XDntXmGpt:hqkqI!At4OU\9E7#iFmV.
%47$T/&HjrJ\_`T#9d"PkL>GD%ZLAjn:`&<lUWLFUX2X%?f"lcVJZH1gI/JY?S]W3OO8rbq^DA'jgXIjBLPLaF75WF"PWbROO&hg)
%X3_n.Tq7jA-J1"1K[1'QE%P\`$2bX1-'6&P@Y34'#+P5ZFJ'[k1)ccWf3?aH3:YNONAI2)6XaKZDsN1%Gpl`rg!Sdq$[)j3!,c4q
%#&_j)%,LtGQL."SDj]h2i8D\KJL%PPZBD[m<X[R`T`(^cETi+M[`JTFFEO#efj1M\!>CPMG]kXENLl&R\gDnjf3Aq&fI8.nc99[r
%'RC]8G<etkLm'Ad6Kn.uCDN$GYBd<5F6V$\go*,E76n#5Xp3]:KJ`^1Y#MPM_%toA2L5N&d$lWU?h=aUO_[D^9AWbD2Y[mCqN=9\
%)U2Zl5[`RMH7?Aq[)OfIb@^87f$"]U<VWo]aNL$JF!.PKj>fLR?@6Om3g2U8ij=/SM_c<_"K(LIpW$(3casNI%P"c39M2V'm$])a
%"\RThgECUWgX/41R[4\S<cA_p2Nsp+&nA^la5D+@9_>Wg6OtJIMdtD_L==Rq08KEaCL5;_kX)+Z>n#8@g(dO/T+i;?n(fb[$:5#/
%E,CEXGs0ZdoA,b\_MC2R8R8qWFR!A#eH`ScT&q\bKF!63jisjAD.`0iSiJG&Np]4>8Tu.8"s'kOQ)YMY)>]$h)#pE%>D;3&4k!X.
%a%dU;9mEH/q\n;)m'mte6K+u?W=DNs)NF6o3jMD-RVdl>Z\4S#*nl]YF$jp`.b=!/rV1i>Z7>aOb[%9J)=X7^@[^n.U$_uBgf<cj
%1W7tOa\D&C6WW@$let%RlO*d@n.N]8rH9A30-+q")7l'B6%+"2eIbUK-Zur,'`oi%m6c;l1[iW^#N?hp^,gWr2;1]&+h$GM_:SA#
%bJ"j7!`2WML:#nq<(kLB52=2(n%2N[NeE_/0H,0mo[I<RU'$+=1YVPG"bMO%96-q:]CP@i`/l#-MRO1kC(5\Gf3`3sD1c@!AoXp]
%Z`n7[;!FV/YflYE/HW#B.M.'L9uq_P\>srdB^IHe`Z<_k@a.Hq(M].Hj>&9XWp)614V[hn*c?a.r9Dng"NK5f/(tmLL"RbgmQAbn
%#UC@:hVmfK?]7(XpnmsolFgb*Om77X<:4(94guD;\b+bH%55E(qf!XT]s#J[#hBY:YJsq+@LVH>TjAS*a7k&C;QH^A-,5Ui]?&;D
%O7hmnM)Vr_$rQBHAR<fZSF\PXa?51Ym)1#mf*q1IWf2Y8THYoCNqRHn?d?At/<k1W]@p3%?SMb4>DabtQi/ZBquY^'gY6m%7JuaZ
%hbKQj0j`qhVPbb5a[K6n(hH6\.9b^4T5sCi+^`DRniOHA>f_rGgYk?AlO-m_B%=IE9ZWUKS=NN2G]Gm0]^34J#8:9RCY$3Y%+!Z%
%_*600bF-u:Ufu0B:0lTo02[F$ILf_DQX(VWR)6,[Ghm3860$(8W/l#r@cDk3-_2@=H>+('5VLB"k4[^0Aa&ZR7BP>!G1TBNa80tr
%*8N:D_EKT9!^s@Tk,:XQ+aO[3n!bX-N*ZM+Hc%@U*U_[-muKQ\-HA"-!WI02HDXXj<t9OQfo^I>GnI'h#JHRY?:G[`lg8X5Vp5&4
%E`8q&*e[BTd%e`36T\?d3mYKXL9bXCg=pe5&*lF5a(_l9EkU?!J8f#5?h/7J3hh.8=Pn;7oNM-g552X^e`U6Lp3+`_nu#AL'r#K)
%<:M7Tn;]92Q:Z:.1;E2@Ll7C(rSQB=Sg(k^*p`En=fYYkMXS4T]SI?N`>s(l&Tr$LG.ic$62UNWD*omuhN.AZg3Y8s_jg6h;*=9R
%46VJ%H2qkF?;HHi95B%3cqCRoK>!g3>L*2im`MAd]#_d*nIfuC.l:1anD8B'a;1W`b3Od`-rRMCgNiCBg?V%!m)5&qXV3?bL"Q1%
%`*W*YYPUB!$N`"V`\H)"#bCL3\Bjd3K)XI'q!E:ua1qQP1?=):2r1srNf>MWg`ZAMh!(-D"<_c&\mKiHqpDHJ%5,)0p#r%]<_mp$
%SKM=OPDajG%6*+HcfO1U@o,6hQY`>c]Q#>mGTkBb^BGO%G*'>@fh`tG;YM0<\tVr.Fa'?r6CT.KB2Bl^HcLbVgtf7e1h%h.Uaaa>
%Hk'2sNZpR`@%cFhD(6Ba_?q/_33/GJjok@ckgK0jJlU4=:M9RUN4P],fee@K\9)i1TRpeACKPEJ<MZ-n8\bg%-kHD@mOJdL7N_b5
%Pp8Og@[X.p#>O;k>lIYIlhO$u!*"5p8<tjU!@^I2kUQhFjP:5;!Qf:<)4a)%&^Q>pcs\5u"^:Sc4^)=KosqofMsQ73D;V"JhM)::
%!W=,eO+-o>S[5W"#_=q%S8gj9I1(q?cm@nm]:nD1eB4S)f&c'5S'$?`S8FfA)BKC(5\HV2]T2C':_UmWi2R\a\;#YIRDt)DJ'_lh
%Y_^:roq"]R/l,sKd%F`RBngKjf*S!S.Fc1(2bX>S;O#8>9bs%>&m`eTOB5^%9u,a9?$Yc-T6*$sY]\*eGmL8JFc.QB!F?f]N$-_t
%=P[T1.RZ*&/rk*QUJZ(E?^*+AOHS'(ka<?N@IqBe*eq#2!gNs<(s.@1LI3MOC*NfWJnrsh)$8PadITqEVf2u2QhYjcYlHp[!4Un<
%'Wp4ITSB:uXJJ3J!_!.bKG-Pi4@O9V]nW_XO<8)MoL([Q@N0c\c-[Gj(*2a5&5Did&*k(ZB>^=tBRW8/KUQSsmVS'nd3H9#daQmM
%!'Ddo?D*/(UBYQm<G4[T-fTT[O24>@1r2:%]Rum[!]=7/U.tP**MQ])T(Mtt%aEG)Q!#87'@DQS,IkOCr$l"[E4'^_R(g\l>'c!R
%DL%"9e)g[j.4u]5(++Mh:]oJ+W[6-#b`matO6bl^q30i18Fn0W=pSX15TpC,oc*GG-IROj*-,FM+okFG[>T@3(E*4$#1\6agUj*(
%;&'J[bE3s`*>$pJp[VrF>1L>`+;l%#c'aIh;YR'V!35=DjGi<2bW$_3Q^bHG"TTHK-KNbg%gd=r+I47:/ipd0ag=<7E>$(65i=k!
%CGtlu(JnZq$eeJ3^a1bgiX$?Z?9Y1/fO?um?Pi>@LY@<(k]kuWZ$F:/l71^7puE!4^-`qnM,++`U0*a&]h7$GpIN\&7bO<L-ub0Q
%GfU;]E"Gp]I/K:b(CJH"j@ka_'l1rlp(SY\qfV3U!f!skTF@hblYV132pDIR<hdDi[`H)iAO_9M<'hC'$mBQi`smadd#@V6-U:3/
%$//QM(4]A%WPTQ4hbpf_"<hZ7hrf+$<1F0;3@h'@LS)hP"mF![>&:/\XH:^PpOta#-$G)R3q@uiE0qJ9lriWE[#145bAF$g#6/Y]
%LgJI"0tK8.0h(eff!HFrBLD\*Z?EP%e6*uc<42CRD,bZ*k"#tT2%Q)$Z;X]hE>&rj6cEQF:.:ia`oY)Q1dE8-%4@t&>>q4AKKGFp
%5=SoaQiOcS:J!+DfjBPY]qgkS3)^=M4iQdn;ulpd2W_6VD8aQtFbF:>'gqIo1a+@I.O12T6J>B+!PnB%rl4ge\P]Scd6+8rc#f5W
%$kJ@l.]PdK%Bg$W_l[Sa1nA('hlL2BPs.@<"Bic;9q84!'r.gni;mMr7:JI<=WffR`PoaNQR<jET%i"b$NZ-n0LBf3BB\&hVgknS
%2$ceBMkR/7cEd&;?-Ej2B%4"Mo6M&H?SoY&=-'O*8hZ?"VD>L8`!l]C2,(bN`"=.KCR28#7(0((R)4jW"op$IIOCLDMcpp`rY_`E
%#9#;@W*P"q\1:Z+maG!XHQg@,TadRq"G_S#'imc[;c=uIelPT%Qj&'+:!X_Ad8!Qfq?*nd`NicKr]/[kUch==((-!U,RIOkmSO6V
%W:a^W$Ic13mG#jWJMPH;g9@pmU"$lq=US^f2p(Z["G:kc>M>1IRLGmhbu!^T[>2c*cRTGZ&q9!%DqgD>U]D\OKP!&"lc<JpB`T)_
%c`N&BL.Dp-)@%DcPl^qo!_Y2L-Cc\V&k">fAdH6':[26p,,d/IWIlJI%@h:KX(N->Q-JbEjJ@Q@T-,Q3&Z5Ihc"$;l7h&5q[3d's
%S"9*le=G7YX__H&O5P3cTU7D"g?Z*HAcoB!U"tY1CQMf@^;9^J'_Tk$`L(P/oI^Q*@O&Nkro4u*^_%%7U7O`T48PWM?)m/66eI._
%++[IF^L:"lC'nH,Ftq"=RGCiAe4nlYeq05-DH9;[4gM6.;5`t.nAsZ,.aL-Qg-L!FbI%i^4$]()r]4%)n,hNCiLB6<'s1rT2?5F@
%(b7EKQ)0eW&4NPc)4(TphmgTlBn;$<)nhLS@W?F-rM%BsBfs8nePY2X7?_qi'dm"<(;#kUHW#,U>cpqfPe[WV15$7l':_J2!=hiN
%$;3p;N#9Wn+kKO3S.kr@;q!r7CC9MZ6?!2T>B*TIpN9iE$$DCseFAWge!,)mHB=C=F.HsBku,7Fq,4tk;80U9^mK^/`.']sq>"q1
%Nuk%=<oO$[/ZH$NRk-8O3cG`[q*"W]L='9;Bb)*Y8=Jb(i)^3A26alm#$=tW&&5LlT,*l77!Pu4"#;_&Q/jCR6E"`l0?m'gA;FYZ
%Jb)P,i's+or!n$&OQ3G24)YcI2$CsPFaU>(ak,MW::lc;EOAQ=GGSNZO9F=,-+Bo*@3n.&;-&Q&*/n-iG5ra7JA8&\.rAbrSRr4,
%@n<7j$+Pae>*NeZ6$W`%3>A3b&p('NRH3uM\Uc+'QY4$/iM/\_EfS8O"VjHi-s=j'o/T:R.KCX%0@F-*oH5%!WmlF\XV(smh0Pks
%(-"\E\eBl+iZ#:/BNN3:39^'_X7B'o@BAraEW$:lMCo?JPddU&9%%TZVjF5RlI/?+Bp'L=K#^\8(<7qicGLSSKHQ*:HV"(0qa*Pd
%f*hd.asjGSqX9rr;@[QZ)<+6n+W<g@]@^Sh-j(&R/>#;Vp4A`>9diLaiTPm@e'i:H$cPnVVA\(`]HN3!+cQin<)dRR80L_KQi&$d
%*rK2%hC`q?=aFXFZI3rtb7[-5)'t8G\"1I%0nNq6+PMQbm'4>=](jX7jLZo''M',J4,_8C>2`4G<<3he/MC\1V@!W+A@o^TU3b27
%%:P[Y:FAKYLk=IfiVj,kZqWKKD2>EL/M9iImfc_ucjkcNJ^cR#:i[/=K$nH[!1]]FZ'_%/`KDsW"uT5GKfS6Ph>mjT78K?UiHe#!
%-8qS31/8+7fh=l"oI$k(V.RgAbta1@Sg0K&"i8YFZ#-FO"u*.lLP8",21PdJ)j(rPjT,$+#cMViab`;E89'_-a4;Giqa)lsMqrh-
%XJM!k><!Y=.>2`,`upEHEH>H-:Y-$Up9?U=^9*f*O.haVWF!Zt9keX0R^,YTXf/BF,T18hg4onPZ5M)rA0%9Wh+StN/9Ze1\lEqk
%8,<D(BM!T.Oc!HMmWPo/0P?<@K4mgE"Qr$2(W:F%LDg6a5Mn?/RPH6tc,up]F.+t<l,jI55b$]LTGeM\#:cp3G2VoB7@P6m\-5"*
%(m]i?%enAs3=;ET,m57'?fg>`A+S.Cg\,_.Maf,hY,[=m:XkXS?ZKhi,28Nkdl]B8`YT:6#p@`F$TUOIOhfq*1cF)BPBbm2--;+,
%dT?`h;#"<`6)%$7H<K3_X5)2S*Vaec>-]D!L4\:OVhNi@D+Sl#Vi9D*XpmCcd3.B$.d"fY`u*#.TJYHWl!S(\j&o`2G<m7Q/'C,q
%6RGk+e8qFF.hYF4Xd-h3g<@%.<g&VRUu(nB?Q*e%>a?J,3AZ](S=e6GVX\s?lb&Ko.U.a'elnGg6N@26i]4FhEsjBD.#Hb71+utW
%-9QX\VMQ"SV.?qV2UUPA#KE2Q;qdD15"L`J'RiU\CYNM=VM5YR/mZs:gG;r@C$]e.SJonG8Zdr41^7\<OCr<;)ISD]6j]\n/nZ^5
%Z#u8(RoEpr^`j(aEZeksA.H7_%#*&1\SjoWrM=pp9i=`V5d2DREq)He*Mrpl\0JA^)H21^--(fkRSDNg3GOYQ#GXkHkpqsJJW8L%
%GV-K3.%8Q,ZETd>4QU&NahCE7anA1.e$;2*6R5F;1t&2sZE1(B`Slje2i9;QFrSpS)Bg!(c/4>5MUcgDA*3j]s1LSO%Q"rLT=4).
%:km$U6Sdj\n:`hc><<kX^T#RP`E"7-]fA[qO"!b=IX)KO"UJCZlooa:bU:5HdJ%_C;hWM**>,n-RmSG^;^jU7`5.Nk83$IifJgE4
%>@o$X?:EQXZn%UUr3BP;dTGI@l/^H0M1ON`SDU@;)MFt#'3ZUS.t%m>Zq_Fr<C0me0[R%sJ02@"9r<M^1!1)625>p7S;s`r7iH%H
%!2#4PShEIpE2tXa(MP/PQ=Kl$1r3.Ciru1'9eQS%2Xmk[$Jaj_l[4TPc8-'9.PJ`)ZcZ7YMjFdRKO;=:Mt1/tj6H/h]3M(Ta,R]u
%%aB9hHGcL+IC*-;U!!>dY#[ZO+c@e!d1D@8ZQs@`%$cTKMK9o(5GUZNdR!br_W3e:+0kdpT.J<];-@QC!V1U1E4aaW`8S'A`(2oe
%?;Xm3]Y>m&/meF`V_dNC#WJoSr)+$"eW1!_>R_kZ1cI")1lT:jV+XO$1/FWk8l\YYdWs*T-m($E8t(kJPf&@eE2Tf]RG!X>E)8/&
%l\@iim:tZJg!$*na[YUCH7T>soqs_pfcA9LACm's2P&k_H+M7oKgkQ6/g*qB`on2dfXe?>90r.TTfr3NJHPH]&2[o8n;s5nocqo#
%,m+u@Xs#G<epQ$=];k[#h6GuD36?5DC6qfgMWlQV.5!5-Yf?8)KZeIc4/e6>WsX5R%<u!#8HB6,3Cj!$YK$NCYo]aEf'0[79Vm+_
%<%QeA98E?n8Vid8GV!M4;3cL7ai4e[hE[_P^'MI4.VkZ3Un\G0TrQ=ZK)O/)_[C=U'I_-F?B*"02C[sna7lQ1%h+0Am?"uM0^4?"
%(W\`cWs)elW[CFWK.[+4M1K`6VB#?)fjE:r<kFj:83g]_!eLZRak4:oem7BPG`p9'#b6]b]YuR;4-nNqj<l!6@He,1oj4IC="Cs,
%c]lhDM^X53!%PqH/OjZY8uefq'7gs2\)GkD=n8<-o3PT`!;=Kh6%YjiFFtT+j5!q%p?Gum^:$qsToL=#m;sjhhA[#_Ug?"]It.cq
%mK*e4cGafTCfj8srKnh^fSuaQW>I!WU'D2r2G:H9:8j7$-89:ZMK.d5a.T3@lH,dU11-k-4^K[rQ_aKF:rjK_.V@JRGk@PgaT].%
%$C/`:]hha@WWkJ\Du3NB`0#hTh5Jbr(P=4k`PU%l<!?gC"ptu.rZtmf\;8:,G=Lig3Vj6!(6&qiQqog\Tb'(7Hi(bs#AXZKq2(gY
%T(&[INl+T%OR7+;"DmpqS-C@>i[hX+iH0t]<73Hslf!NkbW?:(AV9%fa:FCc8k;6mMA4eg1q#MX,uY&l2@\D&[0a'L>MFEF2)oP:
%LNTjV'=iC=U'!\&,aZuVR5VX>W2?Chj1[rPKB\$=,>_ce+pgk)pkt5"n&#rHJG*)%j(g:9<86R[.afL'r&V4DnTkJ+c=n3>ol8<R
%]N'u^IN!t^$Ja%Rm#AQU=>H-WLPW12r1uJ4LPLV9_Adsjmb)0fC7OjCH9-iP)conK$CFnpS.PM5X/AEWR#hC/'$:N!3V\D;(2XbN
%'pV+95rd:"WImm9e]UmT:eHSY4qf#*`iU^`a0tJ[VZ@Nes%/pIiJZIFCEH/m'B2miBgk(A<cq>e\4":Z/kJt,(`T#FTKu;g3.*s&
%FH'j#H,aR,OeYfaF1,@JDkMIUZueCEI1H+c]2Ng52uk&Mjm7m43`_"7Z!'%;gl&/Zbm(drbZ!`0.+dR^\t,-33ne]JPT^M'V3d<u
%?f42B>Hd]Le^DB:@k0l4eenFlJAAL^?-*:_@WaBgE/R;KWV`%'4%E3%a?'YC`j0;,GNnOG(JOZtX'#>K8WRTlC;mDM;Tm7Z5;>lQ
%FE?aJ2B(9aA3g/G@9Hu+W!49]8b"Z(!CbjiaSDi?1QBRT=/re`>P-Ec3SQ;AZr,Jek?JJ&'6PkC_^IV,0[#=>G#;iV+IIV'/mA&U
%U:;ae,&a<7$US?F1\iJVK+Q;L9ZE,4<$S>&bU:8b)nW)YLIDpH`t746lo9$LAl)3a7>KARfWZ8G]0t^f&noaFR-G$<@MKCF"fJam
%%]YbDXXl>CQ^M96O*&S0'+aEsB'Hj0V]qbc]OA@2JV4fp;`=G2!%.Q-o[mIiV-=QmT\Y$#rj5*)g2,j`K_QkiB^`p@2u7bB[!J1P
%%>rp,P3Er+Y\[]6]SFo.99k!]VY\\12.!Y@X4X'Bf_X-G%K\iPh$4Z05U\+g;COWc[G^UO?;ZH'@c,'-=Uq*Y&p/ApM._A)"MnXS
%V&%b>UMm55'n?KEih3gUS4PWE*XSBGku\92pHW8\KF;lF"%m#JgCTKedC2I5R";5*He,I(\&W4rmP2-H,oVXb"[9VPCm28Qa8l<@
%7.2qB`W43L#nK6o&18lo!+Q3ia"q_&WrFuUh@MppDA_$5T!ZkP'R1(C%aJ7n6eY<C(_Ur,Ka?<<NFq1`J<=-bMT,0r]/'I3V,HCD
%Gr#VB6GM3X>@JBqZ%P7c]>Z*iF2`H&-&-]*m(6CRP3sm,PF5)l5g]jCO:#sq'&-WtFHX=7^K"2U_*^X3Pe\5$1DWgp>:g,$k:#I>
%Jd7/U_tZht89J*0'l*g-%u*>6!)$'rTEH#q\t!pHV!FMFNOK4$b.@6d+L0Ck\Tc]nAHn-)nk8k'jmM=UFp]0slr0j/eAAr)Oohqt
%p[+9&AIqZ\7T+/F/s>V69hH.@G.an5/Y=pph"^\'<\@^Z@5-tUfp4+-)=.`251drnG//JkA\Fo$9EP&;IGRoi`t$aTUa`VQ"<*OH
%KYe3Qh&;mWUuk8^+a!@k[-t/6Qh-c>6?rh\KsY:t5$L\eY"YtIZ@cg"Ro>,`_9?skM$K_.An8uH(&OjB(0>+9\o]&[(4Cd_GnQHp
%b)AG^i>r-5+0QM5FCm?(*U":^'Z(plUpUo)fej`dJpc#3H6!"U79;EZCF37*5mGA%kL%ul0V0(>]%HM:fYXJ<&VX1V?;.I/AZ`G4
%bg:$;R^L/,qP*:reH";BT/HnZY[1"2l1_#[\)0?W3fJ)Y(Ch`:BL'ChH!=o+;>.Z?+bR/)8HLiI?&GK,GXFKk9:(?5A3Od)lR*Nu
%<D2t$_1WCES"6ua2+,i--Bq)ADj%^#'[MtR!`3`U=p"/)CZle][3("Uc9m=R&'b!0/[+g,leqIZ3s\.@iV#56ARKTdL,L>@`AD$O
%:C;Usj;MZH)RS7iGMObc%0[qOf^S^PN$[5Li]S,MQCi[$YGEctW?ujk+97%im$,2h2us.Ar6Taj2,4uH"a&\F="bua!%1*_""7:q
%;+1l?<'g.6SK/gp[$"7JlRG?ep`M<U=/KAM!7dp+IOWARVim$?R_r<ErEB0[H`%saFrfc_2PIX3jW`&-btSdb&lrr9;;flE*B;H&
%T%>JQ^sOU]b7jBQ*dk0`Zq=!-ro#aq(%"I?qbs\WR-Tp$$:3'9!j2^;6kA2Q;]$Pa3T<A7LLX"4b(?rL"m#0DZo#*?iu4MTqVUL7
%'9!G^7b4g-&/\DSq[g@Tf08=SiCPbu@jU,6;o!jPP^9f@9kR5KCr1d7Y3G=!^cb*P/*W9g2p0*C^2=VT+n`ecol:fe&djD;OC]o!
%n2gn=+2.-uG23R_fMr&_L$EX==fY3u+QgK.&6Qp-/5qZpk1$:LdrN)'aD<-3qi[&-RLqC+UoZP[L@r8OR:e7VDH)MCm=aF"j?`H.
%^g_uT"g<7[8rAIK/8Z4jDdbomVb8^c1lOL5gE]/(or#-+TS<YbKii7k9F^Kc-!^gj\)LG^GW\l=@Q)D?@:+Z*EN;&*4>W^/m-M35
%o!]=98/9-^>UPYb`"AZ9J20)a=_Dq,:e9_1bDHsYoJu":gIp\s(CV4X!,+k/#RAghPOqmu4btdMfu/QVTGR;$q)38I851cD@3j2_
%1%J;2km!YJOP<&9,N![U?9r&F_T4j)fAQVu^Q"tmFV.KVPIcTk2s!Z6EO2HbnBemJ?S,)F5VV.B959oGB<NOo\!Yo(mV[+m5VU5d
%F^gH2.X8BTKPN=5?">l%?l`Dc]ODFA_eQu#-Xg;p-*[e.4nX@\UJ9PW9ZA,(YZdB4<KM^'6+cS2"AlLfMf:goXADh?NcZmHZ4kF#
%d7nmInjF7:;5'X/>>sfldm1`1)Z[o98Z-Ej[\7CrLP4<Oj+?N]CuftX-,"Xs8J79+Lo"[8!rNb$KOR47AL'QQ31%IKC[D>+mRj*0
%I,6&t$6Na#WuJ%tKVssIA*],Ko:QC>S'M?2LnH5UTN01aJelt>Ikd(M8PDAP0+:3IXMppJRefPa5l=kD1PO4HXc(JYFf,R2=[5JG
%iF7[G&Kp1.Q05]#2)%kFCC<_GOQ6_+U7ulQ\_^^BnNrt4U$!8j3(1]!-)"j"<!?Mo-m_b7TiR*G?+cq/?-m%l<p?ORG6sHkZ(r93
%^7#BU`K,,(-EATr>_"fnH,X>=1T+K%W_-3Z[Q%7aV:ilZX,Pms%p(Mc]@UhSb5R[Keq?I.d<-_P6^:qfW-^V5ck?9i/G_AsV[.@1
%b)e\0+VI=7]1OtVi)a$+(p[S9X.FQLljN$8$6Xc$!3+-WF9q8Tea&M@ere5J"?R&Qn>f<H/EUKh'=[PCUA$/=iB36u\WTuL@S].W
%V0nQQ#jTk/$^gm-.)\Z6(+2#)'>(Ul;0Est.;V^BW6$C>&0I(&Kaj@`KR]I7%jiElYV_#1@0.L==XYOjMmG?Wn^M5*X=p!h8Y&+'
%&Pj#-d<[cg5dimJ#9G,o2X+$-MN7VbZ6\6^Fn=OYf2CT5.D(D3>s`ICQBcacCR],&KP*&^XLUtCBrS,+[Z7Em9\2"_Y"S]gUq3r$
%e5EjBbOoc;?uM@R<>XOJ>,&nn9r#.jaeT?BV&7-ABq*B+LMk49,DnXD&C#k]KC&>\fmtrkP3+E]DK3ocY*1i'(LM91;S-eV9nt<$
%KletZfG.W?<!,,="1b8C]l/Td3%CqAKiT#nf-eD<8ID'QLeM@EeU'IrZ9hT6bV=E]o^ZbPDM\+Ajqot!5d"'`&Cft):-)dA!ncoD
%#uGo8\M$2h.'"T"3:B_gaUf[(V]E+u%n:Vp6p-572pb-`1'tk7)_dauY@qS"bd&#X"[=nkWWGK2MPb;)$pgq?\[st;LUZo'fNj4&
%Uaj8VOrQ6_>VZ1nCM<Z2M;T2JE<uh)V6-1C<'i5,,cpeE@-4]6)Npb2:*\l]TQns4oWtP;Xm+iB2)0sjb8hf9A!Ya+6@k_A.NMpY
%!f_Qb+fm%LTtIKO(uA+=kT`NeIcF'a*dhgU?.F]#G\Ktg-=a0UcrhMK&0G9@eM/'VTDXMkLMdEQ$_3JMIr/8Ps3i+(V;D7/c0_fN
%`K&Db]CgI>r:I_`*7bW<,%XQ-B(r+[D$pI4E]I6$R6i&rbTk%S3ojCMUr#?L`:g?.Sr5Q5Yo,Mk):m002CGoN8mX8E[9qp^K]LT)
%&qYQCA\%F`O>k#t)(iQKH'WDHh':1+9Eh"Md.ifteEmtYd%oU!9NfnUnsV%Sca;T\o9gaRY9FKq-K8%VG(S@Cb/D1X-9$4gNMA6J
%4o6j_PMYYEW*sfg<J;L"ls$d*VEsU<C"[_&b=MW/(Z2_=@OKJ_<2SdSXESho4qmkN-aU>E,iBN]Lr2[D&G0i!FV&$#*!4)PKY415
%h#?LD0j:tFS"XBC'\:?`T..#NY?SpK55El?qFS#h$!Q5N]nr(u6sk"3O@fm%1&/I&.Sshdg6IL+L83m9ckh4PZ1Tpf-'&2,m8u&C
%k9WG`opJu6A6&]cLp`HSC='M*in.&XPEoS0kEr-/Z"R+]@LOkLUhb`d6d+/<>0F"*?ucK'-j[%7!H`lZ_td$M?W?HOgYq3dD[U;t
%i.pgQDRnFs+p$0=CtV0`U/_lp@t?hbJ>(j^l.[PMh/*s,!8?PJe8H/Pa\'m$[A5L?J=r6Zl*Q#+MFcr2JW!71f4NcO.sY+N+MMoo
%GY^cYT<M&U:DSN.G`u"Nf7FY,)5_XX0L[^W"MKD)E)NTh)AR_2ZfI%lq>C^WrOf@I7i'FP[UD09edqROeNZUS;f0e!?*2pAZ&JW9
%\`diF^*=2G-cH'D]rX4r%No:^>;BI2qhJp=9GCA$_4BMu<&h?X7=b>hORW.sX[!2RTp`J,*DCP2.(%10F2,'&6/1'9j,gl@<289Y
%6l,\U@Ke!1W(#H<5TZWSd4Na2h@+q*epTj+BpP?0cS!WRU(I2lW3,IaZ8W;L71GI(A_iG$l/<%")1sb-MQkgB[oDWDZAVcR)(Tk`
%M@m5B&,R8!;.VPj41'Ps6HBom(fTS-p2.AVlIJn:#?&etJ`%8>a=L[I3L%o)+[3$_0_H%[%t7:1dK$3\^FRe??jG@VEhO@B-q,=S
%$eQ@8R;T%cGPZ%ZXk$VjE.aPmK4PLKcHT2EGN%Lg@Y0V<N3G>F99\.nc*E9p^^8V;r(FRU%H<2577q@E>mbmmeC:-:^BlED,>F:i
%&NpCfodYNQE]JW&(@F]%*D\QDAa0Cq+E.dBop=q9-8h*o/%TEBM$V!'&Lso0_gr"QW$GMV@No[k$hCmrol0/'X'dALE&aaEW69f;
%_j7lGb@3A6OGgS2k!Nkj)b+*SN[>IE8c,Q&BQhV%"C\IsQ;Vq9Jg@_/&HER'Bp'#bh\fn2"8c!^@(CNo77;/T6$+``is#NG)%`AH
%_7e98\74;[kf@D8;fHI??m0H1\F"r'#DbP[TIdNQW^,K'e-CRm#$GMiA20:K:/d]<Qnlid'-c=(RV),4,chlr/6$kIO[*U%pGcir
%`c"Pu_\YpT9X?-<>`^?8';j*5G>Vu(%8>jGn.6<()%MK2MD\U/Ri`#mH0^BRl(:F&/UTZNpkhP-1D=qB9\XOj<eW,lV/[jk1H69f
%$[c!gNV'P)G8$[5#^V$fV@Ubuh^&4`Ao:Zr0NQ_+Z[&Rk(l:q]Wt-0hL)<R6oHH=0pa09[;8ASp>QSDH<r]ImVWoeeCH"4[Ue,uC
%<mg-uVR%>-(Y!=jGlgeU8Z+F\:_E59F,.3-QPe,K'#FWjVj_:<18b-'=S"q#hl9m*ST@Ea!Sc1K+Y,36GT@&=cQ\.^]F'sEnl6sS
%]Z0X1Va8W/]I*>`[A4\5\:6'D_,`N^U5[Gf(<([h.OFZj"K2k:gc%bU'f0H@_auX1)DTTY*/krhpHdQ=8IM8Y%u8X==Yj"\QY-WC
%1jmDfM"hmo@e[TNY).(Nq[P&f0\"JEALPt[A6'B*!V/4o_<[6o(IQ-V8bF;r*4P2/gGP`l>P6`#Omb.$PfZ<,ZjWR1/2T[W_j;E]
%dqmFC/:-h=m[B0MQ2^%[b,`LT1KT#+?)fpc*pk/GgsE^daGSHEGXh<!c@ku9,Wh"*%>?+DpIiaW>pKBOlC1f!a0B*#[Toe<7HXWY
%o&(#DYEUUV_]h)br7[ho#mR$Y_KIF33BQBRWo=^baag>n8hG()TJ8tJ%<!Z1Ulu&&faqn/iq'mJGfi(>^,"?qBGSBDMO\W^^[2jB
%nJaL6npA/'J;a:jBF^A&]\\j,-\Zh"J(KfW2G0F2>llG&\hX&\%Yj2po4O7K,hU1U\%llX]*bRRA=jo[l7]%iP3Kh;MI[/FOF,0)
%bj)40D940k#c[Sqp-buDiH_O"i\`aoGS$khJ7(jWNF[L8IQb`[AiKdr`GR/79j#^gM/hco1;mhi=0Y?*KHOZC2R.AQon>CnV-J*M
%0^hrW@+e/<5\&nm&<IS$D<hA`"N;1C+@Bqi"^-Mr2^-Pc5\S[4%6%O'&8Gs4TXp(poqeI&W(p<L8>QSlV.@Z;Z&6=9d*=C[ES9)+
%Ld^F/YeWTB6npnLCps8$q'tf3pK]k;YmhriN^m2(04g)2p)n#aJ8l&gLDQV^(9)uunnhHX%-u^:]V;Du:SLjNh0X6\Clt+>%5e`\
%C2Fumm&R1h0@HXp.-kGsK\K2h^AW)PPf9FFi6Rd+>Y5K"BfZ8_XP!jL"B3jm7dpNa$]6N^+9c@8qUteB=r1K7+oR&\hgp`#DX/C?
%PglcK'A1_iOc@C\hhKhkQRdk;H98kaVA7AM%d8g'>QZ<4PI(AI;/Xp^9KE`b>Bn7A*9Jo1qd5L@rqF2+mePc9nPB/KO8ntsIf%qC
%s2Aokqu&bZfC>L4p@&"P+91uJs8:K`q3u$Tp]'q_J,/]Nqs0mRl[Sg'?[qt/?iK"[s7=Q$rq(Dap\4^_VgnX9It.I^a'\iBkC<9I
%^]3VlJ,I36q>:2G#^3e&q#0[]p>>eKhgY<L!'8RnGQ~>
%AI9_PrivateDataEnd
