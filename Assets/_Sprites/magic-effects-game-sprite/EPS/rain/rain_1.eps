%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: rain_1.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 252 120
%%HiResBoundingBox: 0 0 251.8370 119.7803
%%CropBox: 0 0 251.8370 119.7803
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">rain</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:11:13+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:11:13+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:11:13+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>124</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAfAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FUs8xeZdF8u6ZJqWr3K21qmwJ3Z27KijdmPgMhOYiLKCaeF+Yvz68369dvY+T7NrKDcLOUWa5Zel&#xA;TXlHGPvp/Nmsz9oUP5oaJ5gPJjc3k/z/AK2TLreruxf7STzyTsPbiKpT5HNPl7Vj5ycOWtj5laPy&#xA;h1EUeDUFLqQVIiYUI9wxyj+VY932sRrL/hKJgj/ODyoRJpupXE8CdIUkM8dP+ME4P/Crmbg7WieU&#xA;q97dDVx93vZz5L/5yJt5p00/zfaixnrw/SEIb0g3T97EasnuQT8gM3OHWg/V83Ljkt7Pb3FvcwR3&#xA;FvIs0Eqh4pYyGVlO4KsNiMzgbbVTCrsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVQGu63p+h6RdatqMnpWdohkkbuewVR3ZmIAHjkZyERZQTT5ivr/wAw/mh5me+vnMGl&#xA;Wx4xRL9iGMmojjB+1I1Pib+FBnOa/X8O559A4Oo1HCPN6n5e8m2OnWaQxxC3hG/pr9tj/M7dSc5P&#xA;Pq5TN8y40NPKfqmWQQ6daqQsUClu23JvxqcxwZzNCyXKjhgOQRv1G7pX0Wp8v4Zf/J+er4JfJu4S&#xA;ounVHX5qw/gcxZRMTR2LEhhvnX8udH163aZIhBfKPhnjHxbDuP2h7fdTM/R6+eI1zi0SgY7x+TCv&#xA;y98/61+XmufoHXeUmgzPv1YQ8j/fw+KH9pf49ey0OtBFj6fub8OYSFjk+l4ZopoUmhdZIpVDxyKQ&#xA;VZWFQQR1BGbsFylDUtT0/TLKW+1C4jtbSEcpZ5WCqB8z3PYYJSAFlXler/8AOSnlK2maPTbG61EL&#xA;0mPGCNv9Xlyf71GYktbEchbWcgV9C/5yM8mX86wajBc6Uz0AmkAlhB/ymj+Mf8BTGGsieeyRkD1G&#xA;1ura7t47m1lSe3mUPFNGwdGU9CrCoIzLBtmq4VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVeDf8AOR3mS4udQ0vyjZMTy43N0i/tySExwIfl8Rp7jNbr8tbdBuWnLKk58jeXLXTLGKCM&#xA;ApbAcmp9uVt2c/5+GcHrdQZyvvdZgHiTMyzWztGuZeI2Qbu3gMjoNFLUTobRHMuxiLT2C3hgXjGo&#xA;Hie5+ZztNPpceEVAU2gUq5kJUbi1hnXjItT2buPlmNqtHjzxqY+PUIItIru0ktpOLbqfst4jOK1u&#xA;ilp58J5dD3tRFPOvzN8nR6rp7SQoPrSVe2bwkG5T5OPxzJ7O1ZhKjycGf7qfF/CeaYf846+c5dQ0&#xA;a58tXrlrnSgJLMsfiNs5oV3/AN9Pt8mA7Z3miy2OHudljLDfzf8AMGp+cPzATypYyEafp8voLGta&#xA;NOB+/lYdym6j5bdTmF2jqeGyeUWrNkoMs0X8r9AsLVY2t43koOckiLK5PuzV+4bZxubtHJI83E8G&#xA;ct5Sr3ILzP8Aldot3bO0cCQyAbTwII2U+LKvwsPHLNP2lOJ3PzYSjkx7g8QSL8qfOeq+SvNg8q6x&#xA;IW0e8lEcfI/DDLIf3csdeiOTRx9PY51+g1YIH80/Y52HKJCxyfSOblyWBfmD+cXlzyiXs1/3I6yB&#xA;tYxMAIyRUes+/D5UJ9sx82pjDbmWMp08hvPP/wCcHm9maylfTNPc/ALX/RkAP/FxPqv9DfRmn1Ha&#xA;YjzlXkHFyamMeZS8/l/5vum9S91rlKe5lmlO/u1M10u1Y9xcY66PcVaHy5+amhgTaTq05VdxHDcS&#xA;qD80k4xnLMfa8L5kNkdWPMMh8u/85AeadGulsfONgbqMU5XCIILlR/Nx+GOQfLj883GDtCx/ODlQ&#xA;zA+b3Hy75l0TzFpqajo90l1avsSuzI3dXU/ErDwObKExIWG4G0zyaXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq+ZNdkOq/nnqMspLLazuoB7fVohEtP8AZKDnNdrZPTL5OBrJVEvWNCUCxqP2nJP4DOMzfU1a&#xA;Mehl2lwiO0U/tSfEf4Z2HY+DgwA9Zb/qdhEbIG81SZ5CkLcIxtUdT71zS6/tfJORjjPDEfMsJSQT&#xA;SyMas5J9yTmnllnLmSfixtXttQuIGHxF07oxr92Zul7Ty4Tz4o9x/GyRIhNnWG/tfhPX7J7qwzp8&#xA;kcetwbfDyLZzDGdTtTJbTQsPjUGg/wApd843hOOdHmC4ueHFEh415cuj5X/OiykX4LXUZhGw6Ape&#xA;/Aa+yymv0Z2nZWexE/BdJkuIXflXH+kvzM1a+kBdwLqdCaV9SWdRuPk7ZgdtSJhQ5yl+tsIsvom2&#xA;0+3hjAKB3/aYiu/05naTszFigAQJS6ktwiAhdR02P02lhWhG7oOhHsM13anZUeE5MYojmGMovAvz&#xA;o0aOH6vfRrRopPRJHUpIC6/8CVP35V2RmJuLgYRwzMenNl/nH86bjTfIWiRadIG8yatYxSTzdfQX&#xA;jweXf9t3U8PvPavW5NTUBX1EOxM9mGeSvy9eeRdR1qM3N9O3qR20pLULGpeav2mPWh+nfpymt7Q5&#xA;iJ273V5c5keGD1qy0K3iC+oPVk2AX9kewGaGWWUjQbMekiOe5TqDSbnj8EIjX6F/DMzH2VqJ78Ne&#xA;/wDFuXHHXIL20q9UV4BvkRkp9jagDlfxTwFj/mLylpGs2zWup2oJO6vTi6nxB65iwy5cEusT3Fql&#xA;iF2Ni8gkTzN+VHmiO+0+VrjS52AZW2jnjrUxygdHA+y33dxnVdm9o8YsfV1DKGSjXV9J+WvMWm+Y&#xA;tEtdY05+drdJyAP2kYbMjDsytsc6aExIWHKBtM8ml2KuxV2KuxV2KuxV2KuxV2KuxV8za5AdK/PP&#xA;UopRRbuV3RvEXEQlFPpNM5rteHpl83A1kbiXqmguDZsvdXP3EA5xucbtOjPo+LNrfazjp/vsUP8A&#xA;sc7jTbaeNfzB9zshyY3nAtCGl1OwjJDTAkdlq36q5MY5Ho0y1EB1U11rTmNPUp7kGmHwZMRqod6c&#xA;aXeCKUfEDDLsSNx7HNh2VrDhy0fplsf1uVCSvrNsA6zAbP8AC/z7fhmZ29peGQyjrsff+PuZTD54&#xA;/Nq3kstW029iNJoi6B/AwuHT8WOZHZOSwfgXX6TYyj3FMfyduUH5q6ktfhnFyEFRQkXKOOmx2BzL&#xA;1sbnD/hgc4c3t2qXZFxJzk4RIaCpooptmg7U1M555CzQNAInKuatpurRemwlk9SP9hh8XzFRmZ2b&#xA;2r4YMMxNdOvwZQyAh49+ekka6ZCo2Ms0fAewWTK+yKOQkct3Er99/msE/LrRDqus/XLqstvp6qQG&#xA;qQX6Rrv2WlfoGbLtDPwQocyjV5OGNDmX0LoOkOEChf3z7ysf2R4Zz+HTz1GThjy+5lpsHCPMsptb&#xA;KC3X4BV+7nrnXaPQY8A9I9Xf1c4RpfJcQRmjyKp8CRXLsmqxQNSkAfetro5opPsOrfIg5LHnhP6Z&#xA;A+4ray5toriMo4/1W7g5Xq9JDPDhl8D3KRbB/N/l231fSbvTbpanieLU3Vh0Zf1jOKxynp81dYlx&#xA;MsTVjmGA/kF5hutE82X3k6+ekN2Xa3U9BcwipK+0kS1+gZ3vZ+cH3Sb8M7HvfQubVvdirsVdirsV&#xA;dirsVUby9s7K3e5vJ47a2jFZJpnWNFHuzEAYCQOasD1f8+fy4052jS9l1CRftCziZxX2d/TQ/Q2Y&#xA;8tXAebAzCSD/AJyY8merQ6bqPpdn4Qcv+B9an45D89HuKPEDItC/O38utXkWIaj9RnY0WO9Qwj/k&#xA;Z8UQ/wCDyyGqgerITDB/+chvL08U+k+ddNHL0OEF1Im6ijepbybdiSyk/wCqMxtfiEhfTkWvLGwm&#xA;3krWrfUbaO5gP7q7jDAdw6/aU+43zgdZhMCQejrNN6JmJegSTyDSY3jNDsjH2FVzc5NTMaGMoGuh&#xA;924dnezEPMF0ylLcGi05v79gM0GCPV1msyHaIY68hY+3YZlOEAtBINRtilM9L1iW2PBvjiPVf6ZV&#xA;kxCTdizmHuZs2qrc2CIF5Fgp9T2HfMvUdqeJg8Ij1bb+524yCUXi/wCdtvWzSUdY7pa/J4iT+IGX&#xA;djy3ry/S4WPbNIMb/LfU0g/MrSZ435LLGkcjVO8htByrv/v0b5tO0TWMyHOPCfkQ5j2rzbdOyIVH&#xA;ESuWansOn45zXieJklOqtw9bLYITy1cXBnkh5Vh48yD2NQNshniKtr0kjddHlv55awlz5ht9Niao&#xA;sYQZqf78l+IA/JKH6c3fY2KsZkf4i5ojvbI/yU0kPo6zceRlneQ+5FEUfetcxu1JGWQRHPYOOYce&#xA;X3PajJBp1uE+1MdyB1J8T7ZsjlxaDEI88h+0/qc+6CUah5nMKcHcB+6xj4vxO2anJ2rqMsaFR8x+&#xA;PucfLqhHnzSF/Mbl/hiFK71apOYHgd5cI609yYWOqwXLAITHKNwp6/QcrMJQNhycWojP3si0u/kk&#xA;f0ZTyNKq3fbsc6PsjtKeSXhz37i5cZIbV0C3lf51BP6v4Zr+3IcOe/5wB/R+hE+b5/8AOr/4e/Mn&#xA;TNai+BUmimcjv6EvFh9MdBm27IzegeRcXTGrHcX1LnXuxdirsVdirsVdiqQed/Oel+UdBl1W/PIj&#xA;4LW2Bo00xBKoOtOlSewyvLkEBZQTT50nfzr+Z2pm+1K5MOmq5FvCob0U/wAmGKvxN4sfv7Zzmu7R&#xA;Eee57nBzaijXM9zMtJ/J3QreNWnh9aTu07Fz/wAAvFM5/L2rM8jXuauHLLmeFNW/LXQCnAWNpQdD&#xA;6Kg/eBXKB2hk75fNj4GT+cxrX/yi0lkZ4I2sn7SwkvHX/KRj0+VMzcHak+u7E5MuP6twxiy1/wAx&#xA;eTFn8u67G2peVtQRop7QsWQox3ktmb+7kQnlTx69jnQ6TWicdt49Q5mHOJjZV8n6u/lfzENLkuBP&#xA;pV4Vn029FQjq/wDdyAH7IenF1/ZYUPQ5gdp6TijY5j7Q06nH/EOYfQmlzpd6dLEu/JfUjHf5feM1&#xA;uh/eYMmA8/qH4+XzcnHISjsw7zIpW5B7Mg/WRmuwcnWasev4JMqljQdcvcZXWBR13OC2NtCAhwQd&#xA;h9+NrbJtFuo3tBEWo8Vag+BNQcw80d7dnpMgMa6hivnPTrHXI7qzmkZY3ZSskdKhkpQ+B6ZnaTIc&#xA;VEOLPLWQyCSeW/J+h6DfRahB6k95DUpJMQQCRQ0VQB0zI1GrnliYnYJlqpks21DV7e9tVjRDy5At&#xA;ypQUHbNdjxGJTn1AnGqUdMvY7JpCU5FxRaeIyWSHE14Mwhby/wA2fl5q99qt1qdncLcNdzGV4pDw&#xA;ZeZqaMdiB+rN1ptfCMREiqDk49YKqT1D8p9N/QOix2tyRLPEWaTh0BclgBXrStMw5a2EdSMpBMRy&#xA;btPkEpEp9qmrxxO7uec7brGO3hXwGa7JKWaZnLqnNqBH3sQubmSaRmY7sSWPicyAKdUTZsqGFURb&#xA;TOrgg0Zd1PywEI5Gw9A0upvYiB41/wCBOHsi/wAzGvP7i76HNX1ofv4z/k/xzM9oB+9j/V/Smb58&#xA;/OtkOoWJH2uVzX5ckp/HL+yPpPwcLTn1T976gtPU+qQ+pX1PTXny68qCtc7cO0VcKuxV2KuxV2Kv&#xA;mb8xNYuPP35lHS4JD+h9KZoIyvTjGR68vzd/hU+HHND2lq+EE92wcTUZeEW9V0HRYNPtIoIYgjBQ&#xA;iIo+yvZRnD5Mksku8n7WnBi4dz9RZPbaVFGnqXRG25WtFHzOdBpexoQjx5z8Og95csR71T6zpA+D&#xA;ilPHht+rLvzegHpqP+l/YmwpXelwSxGS1owI3TqCPbMbV9kwnDxMB+H6vPyRKALzTz15Ut7/AE+W&#xA;1KgLKC1u56xyr0+j+Ga3R6kwlfdzdXkj4UxIci8t8t6JN5k8tatpCoW1jQUbUdPSnxtByCXcH38H&#xA;Qfzcv5s7HGOOJA6bh2Udw9H/ACc88SX1iLK4krfWlF5N+2pFFP09D7/POZ1kJabKMuNxoHw5V0PJ&#xA;lnmK39WBZu6mjU8G/tzVYZ+o+bVrI7CXckMMPxBR9piBX55kEuu5lls/lXTre0USTH62w5AVofeg&#xA;9sy9VpRhxiUpDj2PC7X8lACid2IXQkjneJTUISvIdyMxImw6wxo0mum+V9SvQGeqR+Hf8aAfTk8e&#xA;OeQ1jiZfd83KxaSUtzsmp8kxxpVo5H8SGBP3DLMmh1URfD8t3J/JR80uu/LK8SbdjyH7DdfvzBjn&#xA;72mej/mlJvSkhmaJwQw6g7GuX3bgyBHNmcsOg22mwwtEjGVQTOTSjUrufGmX5MmEYQIjiyEWTfJ2&#xA;xhijEAjmw6+CLMyxNWIMeJ8R2yiPLd1UgLNcl9leXcT/AOiBmkIoQByr9G+CcQebPHKUT6XXQvy7&#xA;SXEZSR96sKVxjXRGQSu5IR1YGrd8mxC2m1cVVrGP1buJP5mAP0mmRkaCYiyA9I0VKzu/8q0+8/2Z&#xA;ndgY7ySl3D73ewWa/MscnNjtHHyP3nB28bzRH9H9JRllQt8+eaYW8w/mPpOiJ8fKWCGbvQzSc5Cf&#xA;YRkE5s+ycPpH9IuJo4+m+8vqjOtdm7FXYq7FXYqkHn3XjoPk3V9WRuE1tbt9Xbwmk/dxf8lHXK8s&#xA;+GJKJGg8I/JXSFYTahKKvPLwUnrwiHI/8Ex/DOG7Xy/w/jd1eU8WSMe7d7to1uGZp2FePwp8++Hs&#xA;HTAk5D02H6XPgEHq2poSzSPxt0NFHj7++YXaOtlqMlD6By/W15cgAs8mPT+ZUVqRxVHix3+4ZhjT&#xA;95cGWt7gj9E81xC4WOQFFcgMK1G+1fbM7Q6iWnnd3A8x+ltw6wE0RSN83WS/VnlUbNRx/rA7/gcv&#xA;7V04x5hOP0z+9s1kLgXhPk3zTpXlH8ztV1S/LraILtPTiXkzs7VVFGw3YdyBnQdnZRGMSf5rPTy9&#xA;IPkhvJa3F/50vNa0m2+oaSZZS9uW5BElqyRKQFrxND7Zg9p5IcJHU8nH1k48Ndej1yfWZZrMwMg5&#xA;sKNJXqPlnNjCAbcWeqMo8NJdlriqt1e3U8yTSysWQBF3PyxptlllLclkHlnQfXkFxONhRgPAdvpO&#xA;X6PTHUZOH+Ac/wBTnaTTfxFmf7mCPtHGv0DOs/d4YdIxDsuSHOq2XKnM/OhpmAe2tPdWfkUcYW3l&#xA;lDdx+rFT1CKqw6N7HI67QY9TDjhXF0Pf70GNsS1vSxcRM4XjcRV+ZA6jOUhIwlwlwdTh4hY5hjEz&#xA;XBVUeRnRPsAkkD5DtmUAHW8ROy2NlL1c/KuKCyjRdV0zTbP1XVZJzX4CRyrXw+WS0+bw5kmPF3Xy&#xA;DsNPlhCF9U3/AEpZ6xpUy3MPGoIi26MOhBzOn2nDJCUcsRxV6acgZI5YGwwdwSpA65r3SodG4khh&#xA;UHqMLJNdDt45b1SNhGPU+dCAP15TmlUW/TR4p+5nmjlEgmkYgCu59gP7c3fYRjDFOZNC/udzDkxj&#xA;zTqnqu8Ue7PuR/kj7I+nNTmzeNmOTp0dfrc38LxH8uvN2iaF5zvPMfmSOeS7hjma0ghQMfrMh4MD&#xA;yI40RmArnYaQwx13AbObiqIZXf8A/OQvnjVJ3j8vaPFDCOnwSXcw+ZXgn/CZdl7Rruj72UswHPZQ&#xA;X87fzc09vWv9NilgFC4ltJEWnf40ZaH55XDtOzsYlhHUA8iGeeSPz+8t67PHY6tF+hr+Sixs787Z&#xA;2PYSUXgT/lCnvmfi1cZbHYt4mC9SzLZuxV5x/wA5AmUflrdhPsm4txL/AKvqA/8AEqZi6v8Au2E+&#xA;TCPyjliGg6cARUNMj07MZHIr9BGcJ2oDxy+Dqiaz/juexaW9LCan2lLH/hRmw7InWlnXMX/uXZx5&#xA;MG1+4Y3Rjr8MSig9yK5osEdrdPq5XOu5JCSTU9cvcdylgQV2I3BGKs5a+nvtDijmUc/R3YdSeNMG&#xA;o10pxjjI2g7fiM8e/c8RX8tri78xXd5qcymxlleZRESHfmxYKaj4eu/4eObQ9oCOMCI9VOH+bAgB&#xA;Hmze1hs7KFbW2iWGCMUVEFAM1spGRs83DJJ3KbaCltcanAkx/dcqsD7b4ICPEBL6bF+5u00QcgBT&#xA;zXrjRxcPbyLwXj+7b7VTuKqd8jqhDxT4IqI253fm5+olj5SY5p1uLm/jjbdF+J/o3yOSVRddghxS&#xA;AelaXCI7NT3f4j/D8M6fsjCMeAHrLf8AHwd9EbJVfXTXExNf3amiDtTxzmO0NZLPkJ/hHJrkbQ2Y&#xA;LFMNIvQknolqo5+H2b+3N52NrTjn4cvply8j+1nCS/WbYKyzqNm+F/n2y3t3SCMhlHXY+9MwwLVb&#xA;YRXcsY2UnkvyO+avHKw6PPHhmQlnQ5awbc8mqO/bFU3tNTnSx+qJH+8aoDjr8Xt45TLGDK26OciP&#xA;CAiLTy7fXBAPwV/ZA5N9w/rkoEzNQBkfJnj0cjz2VrryVeJG0iEkgVoRT9ROZEtNniLlA182yWhk&#xA;BsUjtrm70+45BeLjZ0YdfbKJREg40ZGEvNOX8w87YhIykzDY1qB75SMFHyciWs9Ow3SKW5kdyxJL&#xA;E7sdycyAHDO+5S65/LrS/NF2k0kTxXAI9WaEhS47B9jX9fvmTh1mTH6Y73yDlaaWQmo8npOleQ9K&#xA;srZIRGqIgosaAAD6BRfwzOx9kZJ+rLKj3D9bnR0ceZ3KJuvKNg8Z9JRy7D7J+8YM/YsgLxys9xTL&#xA;SQPR5L5//LC0uFkuLKMQXu/FgAquw34SAbVP82Ymk18oHhn0+xxSZYTvvFOPyD/MS8uXfybrTsbu&#xA;1VjpskleZSP+8t2rvWMCq+1R2Gdlo8/EOE/B2OOdva8z21JvOflyLzJ5X1HRZCF+uRFYnPRZVIeJ&#xA;j7B1ByGWHFEhBFh8z+RtYvPLWvXHl/VlNq4m40fb0rhDT5Ueg3+Wcl2lpTIX1HN1mqxE+ocw+h9A&#xA;v4pYySwVJl3qejDqM1nZOYY5yxzNRkHKwZBIWxPzHE6XPOnwyAb9ttjmBgO1Os1canaUxRqRybp4&#xA;Zc4xKqhUg8RsNsUJ3po1Wa1EUZVIeiyMKtT/ACcx5iPF5udg8SUaGwUbry/ewJzX4x4UIb6AeuWG&#xA;RH1Ax97Xk0coixuksyEPXsf15YHGC2OV43DoSrA1BHtiRaURdXTXDpLOxdqUHToPlgjEDkmU5SO6&#xA;YeWyDduT1ZGp94yrPycjR/X8HoDSFdKDJ1EQH4AHOnllMdCJR/mD9TuOjHbq5S3gaV+i9B4nsM46&#xA;MbNONkmIiyxa+1S4uHPNtuyDZRmbDGA6rJllPmh4b2eGQSRsUYbgrscnTCJMTYZ1a+ZIdU03hwK3&#xA;K8RN0pUdx88ztf2mMmHgI9Rrfps7jFqBkj5pD5gt6NHcD9r4G+Y3GajBLo4Wthykg9P0S91IuLeM&#xA;MF+0xNB9+ZuLFPIagLLRiwSnyQF9ZTWc7QzKVkU0KnIEEGjzDGUTE0eadeVrP1rgkCrgBVJ7Fq1P&#xA;0AZX4cskhCPORcnRQuRLM5Lq2sE9GFecg+18/c5vMusxaKPh4xxS6/t/U7UkBdp+oyXErRyKAaVU&#xA;rXt88s7M7VlnmYSAG17LGVsU87WKrciVAADsfpFR/HNXrsYx6iURyO/zddr4URJJdK0+5v5Vgt1q&#xA;+/InoAPHKIQlOXDEWS4WPEZyoK+qaDPYMGlHIHqelCfbIzEoS4ZDhk2ZtPLH7mVeXEtLDTPrEhAe&#xA;lSO+4qf6ZndnZcWISyzPqGwHX8F2WmiIQtTuNciuDU3KKnZA4A+nfMDV67NmO9iPcOX7UnPE9Qit&#xA;J1EeoqCQSQueNQagHtTMnsnXTx5BCR9MvsbMcweRW+arFZLV3A3ZTX/WXcZldtYBGccg/i2LDVQ4&#xA;oF8++ZpT5b/MLS9ft/gUyRXMlOhMbhZR/sk6/PM3srMeEf0S4+incfc+qmZUUu5CqoJZiaAAdSTn&#xA;WuzeN+ef+chrKwuX07yrbpqVyp4NfSVNvy6UjRaNJ86geFcwc2tA+lrlkp41511TzZrt4us6/ZmK&#xA;Z1EYnFv6AYD7IYgCpA6ct6ZrZakZJcwS0eKJHYvSvys82XlzoxF2Gk+rv6MknUuAAVb/AFgDQ+Oc&#xA;32lpQJ7dXClPwZ/0SyfVtWW74xRRkBTUluuYWPHwtOfPx+5LHQhasfkB0y1xwjdHt1ublI2HwDd/&#xA;cDIZJUG3Dj4p0XpOnWkNtbK5AVitSx24jw9s6Xs3SQw4hOX1EWSejvIxACsJ7S4rHzV6/s+OZQ1G&#xA;DP6LjLyZWCwfzToqW1w8sW8bEF18K9DnMarCMOU4+nR1OswcJ4gxl42X3HjlbhAramgHh0xSjNNu&#xA;Wt5llG/E7jxB6jITjYplCfDIF6RpU8d3ppRTX4SB8mFRm97Mn4umliP1Cx8+TvcchKOzD/MhkCRL&#xA;+z8Rp/lCmc3gG5dbrb27mNgEmg3OZThKqwfzH6BgtFouzuZLN+cRHSjBtwR75CURLmyx5TA2F91q&#xA;s14AkjLxU1CqKCv04I4xFllzSnzRNr5hubCyMEA4lmBLg02rXwy3HknAnhkRfNsxakxjwhB6xfm+&#xA;mS4KlTx4mpqTuTWuQiDvZsljmy8crT7y9J6FkJo24vVizeHb9WVHNPHkEomiHN0m0LSHUdaubudm&#xA;qVir8KVO/uffLYw6nclw82YzPkjvLOpXUV+npklKHmh3WlMnDMcMhOPMM9JOQnXRMfMtw0tuXenO&#xA;RxT2oDlJzyzZTOXMuRrZen4pBperT6bdySxH7alWHTr0y+M5R3iaLh4cpgbCtda1eXUIiuJfUG3x&#xA;N9ogbgVyMyZy4pEkonnnKNFBz6hdvELf1T6KigUbbe5HXIiAu0eJLhq9lCORgwBNRkmshMtM1BrW&#xA;4Dq1YyQJAP1/MZCcb97ZgymEvJn2ryxyaYkgIKvRlPsVJrm+7ZmJaeJ7yPuLu5kGNvmz802+s6vp&#xA;ljCOU/A0UeMrhVH3rkey4nhJ7y6/RDYlnX57/mBfXWoDyNobMWfgNTeM/E7vQrbg/wAoBBf7uxzo&#xA;ddqeEEdBzdjlnQRH5c/lfZ2UCTSgTX0g/eT+A7hSfsr28T+GcjkzZdVk8OHL8blwYwObc/T3M21f&#xA;yLpE+mXEFwoeGVCki1YGjbVFSdx1G2T1HZ+TTw8UTB4fJu/KQjuObz/TdAsvL9q+n2Rfj6rM7u3J&#xA;mbZSagAdFHTMXLnllPEXV5ZmUt+jMtG8v6cdLN/qE3BHJEYrxFR4n3y3Hp4nGZzlw9B5lysGmgYc&#xA;Uyk1/DaJcGOCQSxihBBBofCozCgSRu4mWIjL0mwitBdEveJ25oVX51B/hkMw9LbpDU2aatMfqcDh&#xA;qQlat4bAHNt2vklLDj4T6ZD9Tt5na2Dv5jvfrPKOgiB+FKDp8+uaoYQB5uqOqndjkmlzqsFzp0rF&#xA;wJmXiUY1ap228cr4Zcdnfzb56iMsZ72PMaKTStO2ZDrEMSpatKDuMkzV1lQmg2wMaTvQ9dexYRsf&#xA;grs3UAHsR4Y48s8U+OB3+9zNNqeDY8kZrd3ZXVvK5dOZNUVCD8X+fXKZ5JTymdVbkamcJRO7HrS2&#xA;E1wkS/CXNCfAd8slKhbrYR4pAMq/Q/l1rVrdHJvI0Dsd61P0UzKI0/g8QkfEr4X3cnZ/l8VcP8TF&#xA;LiL03kiY/YJUn5GmYwNi3VyFGkEDQg+GSSqiZW2cbYKY06WRCvEYhIDaXcyJwRiFOzAEgH5jExCQ&#xA;SOqmShNStPEDChEWd59VlEkRow8dwcjKNiiyhMxNhEX+rtd8eQAVOirXqfnkIYxFnlzSnzQ6affX&#xA;DckgfiehIIH3nJGcR1RHFI8gjF8u39Pij4/Nh/DInKA2DS5O5a/l+9Ra8OX+qR+rAM0UHTZB0QTW&#xA;rI5V6qR1Uihy0FoNjmm2kaE0txH9ZrBbVrIzfaIHYD3xxzxmYEjUepcnDppSPq2CYecfMlnp2mTS&#xA;SyCK2hQhF/lSnH726AeOWZMstRkEY/RH6Q5uoybcMeZeR/ldo1752/MpdYuI6WGmyLeT91X0z/o8&#xA;XzLKK+IBzrOz9Nw0OkW7Bi4QB3Jd+XrHV/NWp61eHndtzm3NT6lw5LMPkKj6c1famQ8P9YuJrZHh&#xA;rvfROhSRwadIy0+GNCvvsafjmD2XqBjx5ZfxD9rl4aEdu5juv6vec3t0Y8yBykqa79l8M1glLIeK&#xA;ZtwtTqCDwhjjRTKvJgdjtXLbcFEPqUzWX1TlSLrxp7165HgF2z8SXDw9EPAjs37tGkbwUE/qyRLD&#xA;hJ5IyFLyNll9J0ZTUVU9RkCQdkiMom6ZPJdz3ukmGMEBgQEYUIJ2O/05WdRPhGMn0RNu1MjPHskY&#xA;8vXYNR6dfmf6YfHi4P5Sfktby/qRr8SAdgCa/qx8eK/lJqT+XtRG6qCf9YYfGij8tPuUJNL1JDRr&#xA;ZmPiBy/FckMke9icEx0WjStRbpbOPop+vD4ke9Hgz7l40nVQKCFgPoweJHvT4E+5cui6sfswuT7V&#xA;OSjIHkvgT7kXb6DrTMONvIrKK86Eb+xGWeDM8oyPwKY6bJewpUi0TzHbTPMkEvNwQzbNWprvWuSO&#xA;kyEbwlXuLMYc0TYG60+Xdbbc2zEnrVl/rh/K5O5h+Vydyn/h2/D/ALyIRt4MR/CuY2SfAaPNI0mR&#xA;XPldWRT63CT9sAclr7fZyr8x5Nw0e3PdVtfKULyqklzQHqxAUD7ycswz8SYjYjfU8mUdEOpTiHyV&#xA;oqCr3LP4kMozdQ7PxVcso+FfrLcNDDqSrnyv5ZX7Tk/89K/qwz0mkjzy/bH9TL8ni/BaXRvK8XRO&#xA;dOxHL9YzFlHRA/XM/j+qGQwYx0VA+lWzD6nYxLT9soAa5DJ2jhgaxYwR/S3ZgRHIBt9bkTblFF9w&#xA;/Wcr/lnP/CIx9wU5aUT5kVft3ETDup4n9WI7W1PWpDuIYHUxHUJfNremKS7zqgJ7A0Hy2zXSxylI&#xA;mubWdTDvSi/84+VYgfVubct/xZJGn4sa5bDSZTyBa55YnlEn4JBc/mpolvEVbUo3YDYxI0jH6VBX&#xA;MqPZsyfpahLORVMFRPNX5n6+un6ZEyWETBpJJCfTiUmnqzsOrU+yo+juc6HQdn8Ow597lYMFb85P&#xA;pHyX5N0nylocWlacOQHx3FwwAeaUj4nan3AdhnR4sYgKDnAU+fvOnlnXPyy83trNhAk+hXkji1Lj&#xA;lEVkqxt5AN1ZKfCe9K+IzSdoaESBB5HkXHy4geaa2358aSiKj6TMigf7rkQgfIEDOdl2LP8AnBhE&#xA;ECl1v+euiLPI0un3PFzUFRHyAGwG7CuCXY062kGERMEnZOLf/nIvy/GixCxuwoFAzJHt90ubLANV&#xA;igIgwIHvbuOQ6IeX87vJE0xmnsbh2b7Q9GMf8b5gz7PzzyccuE/Y1kXzCKtPzu/LqCIJHY3Maivw&#xA;lSTvv/Ocv/Jf7VE/58mUaiKEVU/nx5FGyWcxHiVP9TkhpRX91D/TFTM/zXD8+PI/e1lHj+6J/wCN&#xA;hkDpZdMWP7U8Z7mj+enkVvtW8hA6BoCf+N8iNLlB2x4vt/WplfRw/PXyQBQRSD5W4/5qyJ0uf+Zi&#xA;+S8Xk0fz28mDokv/AEjr/E5H8nn/AJuP/Sj9S8Z7lj/nx5PBoI7gjxW2i/i2D8lqD0x/6WP/ABKe&#xA;JQb88fJoBPp3jHc0EUYr7D4wMxz2RmJv0/j4IWj8/fKw+zbaivyjhH6psuHZupHKQHuJ/Um1Jv8A&#xA;nIHQzWtpfH5mP/mvJns7Unnk+2S2ULJ+f+n8SU0u4Z+waVQPvocH8kZDzn96DaWyfnzc8iY9M2J+&#xA;yZQAB8+ByY7FH877P2tPDO+f2KLfnzqnL4dMjA8DKT+pBh/kWP8AOZCM+/7G1/OvzbMoNvpET8jR&#xA;GCyuDvTahFcmOxId5ZcMu9WH5n/mhOSLfQA1BuBaXTkfc2WDsLH/AEvx8GXCVp80/nfdqoi0O7VX&#xA;PwvHp84Hh9oimWx7Dx/zZIOMnqWkP59TFjHp17H23gCfdz65cOxofzGI0/v+ZV10P/nIi4KgRXS1&#xA;FRWS0i+8ll/HLB2LD+Z+PmyGD3/M/rXjyL/zkHMC0jzRk7cWvLfp7cHIyY7Hj/MCfAb/AOVT/ndM&#xA;Asl/xDU5Fr07fMrU7e2WjskfzYr+XHcF6/kd+bkzUl1qBQBUGS9uSP8AhY2yY7L8o/j4JGnHcFVf&#xA;+cePP8oH1rXrWrH46S3Mm3+yRa5YOzq/mpGAeSvF/wA4xanI1brzDEpJ3KW7yGnb7UiZaNAe9mMS&#xA;aWn/ADjDpC0+t67cTePpQpF/xJpcmNCOpT4aeWP/ADjr+XtvQz/XbzxE04UH/kUkWTGjgO9Phhn2&#xA;geXNE8v6eunaNaJZ2ikt6aVYlj1ZnYszH3Y5kwgIigyApMcklBax+hfqTfpn6t9RqOf1z0/Sr2r6&#xA;nw1yMqrdBYvdf8qW5j61/hvnT4fV+oVp7csqPhf0fsR6UuuP+VA+p+8/w9yp/uv6tx/5J/DkT4P9&#xA;FHpQV1/0LtzHqfoetNvSpT6fT2yJ8DyX0oWb/oW/0m5/o3j34ety+jh8X3YD4Hkj0oT/AKxl/wCX&#xA;X/p9yP7j8Wvpd/1jL/y6/wDT7j+4/Fr6VC6/6Fg4D1PRpXb0v0jX6fT3wH8v+LX0of8A6xZ/z/S+&#xA;D/B/xaPSj/8ArGX/AJdf+n3JfuPxafS7/rGX/l1/6fcf3H4tfSuh/wChaPUXj9T5V25/W+P08vh+&#xA;/H9x+LX0o3/rHH/tV/8AD5L9x5L6UXD/ANC9+kvD9B8e3P0+X08/i+/JDwf6KfSjrf8A5UN6f7v/&#xA;AA1xr/uz6ly/5KfFhHg/0fsX0phB/wAqg9JfQ/w/6W/H0/qXHrvSm3XJjwv6P2J2TSD/AAPyT0P0&#xA;Zy29Ph9Xr7caZIcHknZNLX9Hcm+q+jyp8Xpca09+OTFJRGFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:1cfb577a-3b17-ea49-8d81-a2132865105c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:1cfb577a-3b17-ea49-8d81-a2132865105c</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3cd3fabc-b411-4b21-b4e2-1370cc2864f7</stRef:instanceID>
            <stRef:documentID>xmp.did:527b2985-9dc4-d547-9a43-0661f0db6a46</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:527b2985-9dc4-d547-9a43-0661f0db6a46</stEvt:instanceID>
                  <stEvt:when>2018-03-08T17:52:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1cfb577a-3b17-ea49-8d81-a2132865105c</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:11:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>251.836978</stDim:w>
            <stDim:h>119.780263</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -119.78 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 119.78 li
251.837 119.78 li
251.837 0 li
cp
clp
247.19 80.1569 mo
247.174 80.1633 247.159 80.1701 247.143 80.1765 cv
246.958 79.6457 246.753 79.1071 246.508 78.5427 cv
246.107 77.6174 245.545 76.9089 244.882 76.3825 cv
242.462 72.2346 238.599 69.0637 233.496 67.8527 cv
228.463 66.6584 221.584 67.8352 217.576 71.467 cv
216.142 70.7956 214.893 69.9265 214.337 68.7453 cv
212.887 65.6662 216.602 59.4909 217.127 56.216 cv
218.381 48.3811 216.535 40.9475 212.437 34.4729 cv
210.622 29.6203 207.427 25.3142 203.012 22.3518 cv
198.176 19.1066 192.422 18.2331 186.859 19.0964 cv
183.404 18.7629 179.706 19.3103 175.753 21.0232 cv
163.835 26.1853 158.838 37.9006 156.784 49.8781 cv
156.19 49.6726 155.588 49.4821 154.962 49.3337 cv
154.755 49.2849 154.451 49.194 154.11 49.09 cv
154.842 35.7585 160.233 17.2439 143.152 13.5705 cv
125.906 9.86104 127.38 34.9148 129.985 46.6223 cv
128.556 46.7458 127.138 47.194 125.851 47.8938 cv
125.565 46.4074 125.26 44.9357 125.014 43.5007 cv
123.926 37.1633 122.563 30.8386 120.289 24.8068 cv
118.47 19.9821 116.59 14.2824 112.573 10.8205 cv
110.42 8.96456 107.359 7.38155 104.232 6.72774 cv
100.611 4.65548 96.6661 3.09688 93.5426 4.18477 cv
90.7574 3.73507 88.0138 3.5295 85.4791 3.58858 cv
74.983 3.83468 66.9415 10.715 62.5792 19.9592 cv
58.0079 29.6457 60.3658 39.1545 65.5822 48.0378 cv
68.0538 52.2468 70.7413 56.2697 72.6891 60.7644 cv
73.6608 63.007 74.6666 64.9763 76.0685 66.5788 cv
75.233 67.2356 74.3644 67.9016 73.4459 68.3938 cv
74.7286 68.8161 74.7623 68.9089 73.5475 68.6716 cv
72.9103 68.5368 72.2677 68.5085 71.6198 68.5866 cv
69.9406 68.6872 68.2032 69.092 66.4567 69.6696 cv
66.4977 69.4152 66.5504 69.1628 66.5802 68.906 cv
67.1212 64.2082 65.774 59.9641 62.7423 56.3601 cv
56.0997 48.4631 46.2262 45.5188 36.2965 47.8732 cv
32.0514 48.8801 27.153 50.5847 23.9186 53.6267 cv
20.6383 56.7116 19.296 61.2273 17.6998 65.3059 cv
14.61 73.2004 17.9904 83.8234 23.4601 90.321 cv
23.9152 91.323 24.4005 92.3093 24.9171 93.2746 cv
24.61 93.3801 24.3053 93.5031 24.007 93.6486 cv
20.819 92.4841 17.7321 92.0564 14.0919 93.4055 cv
9.98792 94.9265 6.18323 98.447 4.2013 102.352 cv
2.01624 106.658 2.79554 112.413 7.2262 115.004 cv
9.49231 116.329 12.5695 116.538 15.4406 116.14 cv
20.9376 118.239 27.4952 116.705 33.2633 116.634 cv
39.6866 116.555 46.1022 116.888 52.5236 116.985 cv
66.6881 117.196 80.8561 117.134 95.0206 116.914 cv
108.855 116.699 122.687 116.311 136.512 115.751 cv
149.083 115.241 162.004 115.249 174.552 113.805 cv
175.014 113.876 175.503 113.908 176.032 113.877 cv
185.051 113.349 194.069 112.868 203.093 112.426 cv
211.589 112.009 220.369 112.194 228.773 110.785 cv
243.007 108.398 252.538 94.1755 247.19 80.1569 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.505882 .890196 .168627 rgb
f
62.5577 78.5227 mo
62.5236 78.259 62.485 77.9958 62.4484 77.7326 cv
62.4493 77.7321 62.4503 77.7321 62.4513 77.7321 cv
62.4186 77.5202 62.3908 77.3103 62.3605 77.0988 cv
62.3575 77.0803 62.3551 77.0617 62.3527 77.0432 cv
61.2799 69.5744 61.3741 62.5324 55.5011 56.7717 cv
51.8346 53.175 47.0031 51.3586 42.1115 51.695 cv
39.3097 51.3317 36.4269 51.612 33.6657 52.7111 cv
27.2252 55.2741 22.319 62.6267 21.5426 69.4016 cv
20.6427 77.2546 25.2223 86.1965 30.8751 91.4089 cv
31.7741 92.238 32.8986 91.7634 33.3024 90.9372 cv
35.1583 90.6301 36.8043 88.5207 35.5114 86.6189 cv
35.0201 85.8962 34.5524 85.1189 34.1124 84.3049 cv
33.3219 78.8034 32.2125 73.6975 37.1334 69.6657 cv
41.1217 66.3977 46.0543 65.3889 50.63 67.0583 cv
51.6857 67.6174 52.7013 68.1623 53.6505 68.5954 cv
53.7257 68.6296 53.7985 68.6452 53.8727 68.6735 cv
55.2843 71.9284 56.1813 75.3811 56.5861 78.3576 cv
56.6251 78.677 56.6681 78.9953 56.7164 79.3132 cv
57.213 82.59 62.986 81.8513 62.5577 78.5227 cv
cp
.803922 .984314 .207843 rgb
f
23.9044 99.4079 mo
23.8668 98.0442 22.8932 96.674 21.2037 96.6023 cv
17.275 96.4348 13.4733 96.4226 10.8908 99.8459 cv
10.1583 100.817 9.55921 102.144 9.23255 103.551 cv
9.08509 103.859 8.94983 104.177 8.83606 104.513 cv
8.15345 106.532 8.21741 108.825 9.3844 110.642 cv
9.70569 111.142 10.0919 111.542 10.5187 111.874 cv
9.34876 111.69 8.1803 111.508 7.03626 111.259 cv
5.95032 111.023 5.4972 112.616 6.57532 112.931 cv
9.84241 113.886 13.2819 114.868 16.7033 114.251 cv
17.2394 114.155 17.1202 113.435 16.7033 113.28 cv
16.6373 113.255 16.569 113.237 16.5026 113.213 cv
18.2072 112.671 18.569 110.382 17.5265 108.965 cv
17.9176 108.539 18.1759 107.953 18.1935 107.208 cv
18.1993 106.948 18.2448 106.714 18.3038 106.487 cv
18.4157 106.482 18.5895 106.32 19.0729 106.011 cv
19.6051 105.672 20.1608 105.367 20.6915 105.025 cv
21.7296 104.355 22.7072 103.599 23.6061 102.751 cv
24.5631 101.849 24.5411 100.423 23.9044 99.4079 cv
cp
f
242.038 80.9455 mo
237.183 66.696 215.282 71.1989 213.381 85.0656 cv
212.976 88.0227 216.984 90.469 218.663 87.2922 cv
219.087 86.49 219.611 85.6233 220.216 84.7712 cv
221.444 85.4553 223.079 85.3781 224.393 85.3938 cv
226.593 85.4196 228.817 85.28 230.887 85.7404 cv
231.304 86.093 231.715 86.4519 232.102 86.84 cv
233.783 88.4948 235.035 90.3796 236.162 92.4323 cv
236.456 92.9675 236.831 93.3342 237.244 93.5744 cv
236.291 97.469 233.664 100.596 228.657 101.49 cv
228.05 101.599 227.657 102.499 228.041 103.005 cv
231.266 107.256 237.79 103.345 240.362 100.141 cv
244.839 94.5671 244.229 87.3786 242.038 80.9455 cv
cp
f
207.714 30.9914 mo
206.942 29.8718 206.089 28.7976 205.153 27.7819 cv
204.591 27.1726 203.934 26.9196 203.289 26.9221 cv
198.772 23.677 193.971 22.5739 188.229 23.6731 cv
179.833 23.6921 172.266 28.0339 167.646 35.1169 cv
165.114 38.9987 158.445 49.7033 161.671 54.7507 cv
161.908 56.2981 163.422 57.5427 164.878 56.9982 cv
164.883 56.9997 164.888 57.0022 164.893 57.0036 cv
166.129 57.3684 167.066 56.1799 166.945 55.134 cv
167.337 54.7014 167.73 54.2707 168.122 53.8396 cv
168.325 53.7815 168.529 53.7072 168.732 53.594 cv
171.593 51.9939 173.506 49.823 174.728 46.9445 cv
178.42 44.1447 183.126 42.4885 187.619 42.4782 cv
187.905 42.7795 188.254 43.0173 188.661 43.1452 cv
192.297 44.2893 194.981 46.1345 196.599 48.8171 cv
197.125 51.0778 197.121 53.6325 196.9 55.7331 cv
196.608 58.5022 195.335 62.0769 195.761 65.0603 cv
195.091 66.0637 194.429 67.0627 194.076 68.215 cv
192.958 71.865 195.387 74.5954 198.319 74.3332 cv
199.385 75.5612 201.266 76.0603 202.49 74.5173 cv
202.647 74.3195 202.783 74.115 202.934 73.9152 cv
202.939 73.9182 202.943 73.9211 202.948 73.9235 cv
202.969 73.8874 202.987 73.8518 203.007 73.8151 cv
203.397 73.2927 203.766 72.7629 204.112 72.2263 cv
204.74 72.2238 205.354 71.986 205.84 71.3967 cv
214.564 60.8361 216.917 41.9812 207.714 30.9914 cv
cp
f
152.257 38.656 mo
152.215 35.2981 152.246 31.8591 151.25 28.6135 cv
149.691 23.5334 145.347 18.7937 139.593 19.3498 cv
133.39 19.9494 130.679 25.9572 130.127 31.4387 cv
129.486 37.7893 129.502 46.9274 134.684 51.4733 cv
136.531 53.094 139.611 51.5617 138.922 49.0065 cv
138.603 47.8264 138.327 46.6438 138.092 45.4572 cv
138.123 45.3752 138.169 45.3088 138.19 45.218 cv
138.505 43.8562 138.295 42.4226 138.453 41.0383 cv
138.788 40.6506 139.032 40.1433 139.097 39.4875 cv
139.115 39.3093 139.153 39.1218 139.18 38.9382 cv
140.278 37.6413 142.714 38.2302 144.107 38.7815 cv
144.283 38.8513 144.45 38.8928 144.611 38.9177 cv
144.613 39.114 144.615 39.3098 144.595 39.5324 cv
144.443 41.3015 145.83 42.134 147.221 42.0476 cv
146.894 45.028 146.348 47.7946 145.9 49.7751 cv
145.412 51.9304 148.333 52.6228 149.131 50.6662 cv
149.986 48.5739 151.461 47.0822 151.993 44.8581 cv
152.477 42.8366 152.282 40.7097 152.257 38.656 cv
cp
f
100.387 29.2536 mo
100.67 29.5388 100.944 29.8352 101.214 30.1399 cv
100.742 29.9572 100.265 29.7824 99.7799 29.6228 cv
99.984 29.5036 100.184 29.3752 100.387 29.2536 cv
cp
117.971 34.3879 mo
117.912 33.5295 117.83 32.6716 117.706 31.8151 cv
116.891 26.2038 114.226 21.3733 111.041 16.7624 cv
108.433 12.988 105.4 9.48848 100.78 8.29805 cv
95.6969 6.988 89.5797 7.238 84.587 8.86544 cv
82.2487 9.09298 79.9376 9.66231 77.7462 10.6379 cv
54.6256 20.9304 69.2584 52.6628 80.4039 66.1237 cv
82.2609 68.3664 86.2828 65.3181 84.4791 62.9797 cv
84.4059 62.885 84.3302 62.78 84.257 62.6833 cv
84.2448 62.4245 84.2037 62.156 84.0978 61.8718 cv
81.34 54.4953 79.0084 46.1106 84.2218 39.9035 cv
85.9313 38.9211 87.7657 38.1745 89.6949 37.7526 cv
93.5792 36.9025 98.4186 36.301 102.26 37.7732 cv
104.03 39.0178 105.699 40.4309 107.282 42.0271 cv
107.703 42.4524 108.192 42.6872 108.693 42.7746 cv
108.822 42.9328 108.951 43.091 109.077 43.2512 cv
109.457 43.7365 109.884 44.0192 110.321 44.156 cv
110.828 44.9416 111.279 45.7717 111.7 46.6267 cv
112.106 48.4714 112.454 50.2312 112.75 51.8376 cv
112.906 52.6892 113.435 53.2443 114.102 53.5495 cv
115.172 55.6745 118.462 55.0539 119.243 52.9611 cv
119.436 52.6838 119.571 52.341 119.605 51.9221 cv
120.136 45.4353 119.804 39.6994 117.971 34.3879 cv
cp
f
205.377 105.532 mo
205.233 105.476 205.088 105.42 204.92 105.398 cv
204.62 105.358 204.316 105.331 204.012 105.3 cv
205.679 105.148 207.348 105.014 209.022 104.93 cv
209.302 104.916 209.585 104.915 209.866 104.908 cv
208.367 105.14 206.872 105.35 205.377 105.532 cv
cp
93.3287 112.985 mo
93.3458 112.979 93.3634 112.974 93.38 112.967 cv
93.6339 112.868 93.8356 112.705 94.0089 112.52 cv
96.9703 112.668 99.9357 112.748 102.901 112.815 cv
99.6945 113.038 96.5074 113.109 93.3287 112.985 cv
cp
70.2433 111.496 mo
69.5055 111.549 68.7672 111.59 68.0294 111.634 cv
68.1031 111.223 67.8131 110.73 67.4191 110.567 cv
67.3956 110.557 67.3712 110.552 67.3478 110.543 cv
70.1193 110.624 72.8873 110.805 75.6544 111.032 cv
73.8517 111.203 72.048 111.366 70.2433 111.496 cv
cp
227.186 103.602 mo
225.728 103.096 224.161 102.928 222.553 102.958 cv
222.469 102.598 222.272 102.265 221.944 102.068 cv
215.34 98.0993 204.931 100.76 197.716 101.816 cv
192.263 102.614 186.822 103.498 181.38 104.381 cv
175.787 104.43 170.148 105.087 165.016 105.663 cv
162.472 105.948 159.934 106.275 157.397 106.614 cv
155.779 106.339 154.163 106.025 152.551 105.626 cv
151.392 105.34 150.743 106.586 151.147 107.403 cv
147.637 107.621 144.069 108.271 141.167 108.436 cv
137.701 108.632 134.234 108.763 130.766 108.839 cv
128.525 108.527 126.289 108.148 124.06 107.689 cv
123.17 107.506 122.568 108.192 122.5 108.886 cv
120.818 108.866 119.137 108.838 117.455 108.779 cv
117.175 108.769 116.947 108.832 116.76 108.936 cv
113.505 108.544 109.999 108.905 106.85 108.877 cv
101.236 108.826 95.6251 108.717 90.0167 108.449 cv
80.2687 107.982 70.6383 107.023 60.9078 107.9 cv
61.1598 107.557 61.3326 107.134 61.3658 106.63 cv
61.6017 103.006 62.6315 95.3464 67.944 96.2551 cv
70.7047 96.7273 72.3663 99.3689 74.4259 100.948 cv
75.7433 101.958 77.5431 100.292 77.1285 98.8698 cv
77.0446 98.5822 76.9391 98.2981 76.816 98.0183 cv
77.483 97.2976 77.7335 96.2024 77.1154 94.9792 cv
75.9869 92.7473 74.6608 90.4924 72.7716 88.8933 cv
69.527 83.2126 62.3366 80.4665 56.92 86.1999 cv
56.6129 86.5251 56.3453 86.8689 56.0831 87.215 cv
53.8409 89.0705 52.7125 91.8195 52.5167 94.6633 cv
51.7223 97.3942 52.566 100.059 53.9293 102.691 cv
54.1793 103.497 54.5314 104.286 54.9879 105.044 cv
55.6266 106.519 56.5685 107.774 58.007 108.486 cv
57.6901 108.809 57.5514 109.274 57.6036 109.693 cv
57.1017 109.706 56.6036 109.716 56.1139 109.714 cv
51.8058 109.698 47.4982 109.642 43.1906 109.559 cv
41.6315 109.529 41.1559 111.201 41.7594 112.242 cv
40.8488 112.29 39.9435 112.334 39.0558 112.352 cv
39.1837 112.276 39.3175 112.213 39.442 112.13 cv
40.0021 111.755 39.9059 110.928 39.2575 110.716 cv
36.212 109.721 32.8038 110.272 29.6329 110.218 cv
26.3883 110.163 22.9591 109.893 19.7872 110.639 cv
18.2389 111.004 18.5411 112.994 19.7872 113.487 cv
22.7047 114.64 26.1012 114.643 29.2521 114.406 cv
32.3986 114.612 35.548 114.771 38.694 114.828 cv
43.0851 114.908 48.0182 115.307 52.3732 114.28 cv
58.3141 114.797 64.2648 115.113 70.2433 115.135 cv
74.9674 115.152 80.3771 115.36 85.4816 114.777 cv
91.8741 115.945 98.36 116.23 104.88 115.978 cv
111.678 115.716 120.592 116.21 126.808 113.21 cv
127.207 113.018 127.383 112.639 127.395 112.244 cv
128.464 112.303 129.533 112.328 130.602 112.366 cv
130.766 112.441 130.96 112.483 131.191 112.468 cv
131.435 112.453 131.679 112.432 131.924 112.416 cv
134.099 112.474 136.275 112.501 138.454 112.461 cv
141.218 112.696 143.992 112.825 146.775 112.827 cv
153.02 112.832 160.293 112.774 166.378 110.645 cv
170.352 111.018 174.354 111.152 178.368 111.092 cv
182.952 111.023 187.52 110.731 192.089 110.363 cv
195.355 110.099 198.772 110.033 202.035 109.426 cv
205.315 109.258 208.59 108.941 211.864 108.586 cv
216.885 108.042 222.924 108.355 227.517 106.13 cv
228.668 105.572 228.218 103.961 227.186 103.602 cv
cp
f
146.406 85.7898 mo
145.713 83.6648 144.864 81.6652 143.859 79.7253 cv
144.071 79.2111 144.134 78.5905 143.966 77.8728 cv
140.828 64.3996 129.05 52.8606 114.695 59.9265 cv
103.841 65.2688 93.9952 80.8532 102.787 91.8464 cv
102.845 91.9192 102.908 91.9777 102.972 92.0344 cv
103.907 94.4377 105.288 96.6731 106.566 98.1589 cv
107.047 98.7175 107.638 98.9211 108.219 98.8884 cv
108.705 99.4763 109.205 100.057 109.736 100.63 cv
110.658 101.624 111.844 101.511 112.688 100.864 cv
112.724 100.893 112.756 100.921 112.793 100.948 cv
114.772 102.475 117.745 99.4587 116.264 97.4777 cv
114.675 95.3527 113.814 92.9499 113.555 90.4802 cv
114.908 85.4211 118.007 80.82 123.172 78.9773 cv
130.582 76.3337 136.02 80.8928 138.765 87.4743 cv
139.534 89.3181 141.538 89.7234 142.911 89.0637 cv
144.671 89.5788 147.108 87.9411 146.406 85.7898 cv
cp
f
192.917 83.4821 mo
192.843 83.2321 192.756 82.9885 192.672 82.7434 cv
192.511 81.7263 192.216 80.7004 191.693 79.6599 cv
190.479 77.2458 188.703 76.0085 186.56 75.4631 cv
183.719 74.2766 179.902 74.593 176.742 76.0451 cv
174.506 76.7194 172.423 77.8249 171.042 79.6506 cv
169.5 81.6882 169.301 84.0114 169.09 86.3484 cv
167.897 88.6203 167.348 91.0525 167.828 93.3503 cv
168.25 95.3689 171.651 96.0041 172.516 93.9626 cv
172.884 93.094 173.147 92.2526 173.359 91.405 cv
173.81 91.2697 174.202 90.9631 174.429 90.4299 cv
174.71 89.8698 175.11 89.2717 175.591 88.6755 cv
179.692 84.3733 189.606 86.7702 186.667 93.5559 cv
185.947 95.218 187.209 96.7473 188.54 97.0041 cv
189.732 98.2732 192.138 97.7351 192.78 95.9211 cv
193.157 94.8537 193.423 93.6589 193.589 92.4025 cv
194.468 89.3972 194.154 86.197 192.917 83.4821 cv
cp
f
172.514 67.0002 mo
171.893 63.9011 169.021 61.7399 165.856 61.9826 cv
162.753 62.2209 159.258 64.2009 159.137 67.5822 cv
159.116 68.1579 159.416 68.6579 159.851 68.9924 cv
160.586 69.9157 162.29 70.1145 163.031 68.8684 cv
163.308 68.4021 163.711 67.9524 164.187 67.6062 cv
165.129 67.281 166.178 67.2141 167.177 67.3474 cv
167.231 67.3547 167.269 67.3772 167.32 67.3864 cv
168.548 68.3801 167.806 70.9572 167.563 72.217 cv
167.192 74.132 169.278 75.3405 170.76 74.0788 cv
172.709 72.4196 173.403 69.3757 172.514 67.0002 cv
cp
f
94.1085 74.5598 mo
93.6515 73.4157 92.7789 72.6335 91.7335 72.1892 cv
89.7072 70.8156 87.0919 69.9353 85.5568 72.3083 cv
85.3009 72.7043 85.1139 73.2375 84.9991 73.8234 cv
83.483 75.9919 84.7096 79.1106 87.1666 80.2775 cv
88.6207 80.968 90.6569 79.4563 89.5817 77.8625 cv
89.1847 77.2741 89.0968 76.7028 89.1486 75.9987 cv
89.1652 75.7707 89.2716 75.4875 89.3073 75.2404 cv
89.611 75.2522 89.9073 75.3117 90.1647 75.4177 cv
90.4821 75.7082 90.7877 76.0139 91.0826 76.321 cv
92.2633 77.5505 94.7999 76.2893 94.1085 74.5598 cv
cp
f
131.701 96.489 mo
130.409 95.8444 128.988 95.9665 127.975 96.6325 cv
127.356 96.8762 126.811 97.2605 126.343 97.7409 cv
125.337 98.4641 124.651 99.5666 124.447 100.938 cv
124.443 100.948 124.438 100.958 124.434 100.968 cv
124.437 100.969 124.44 100.969 124.442 100.97 cv
124.42 101.127 124.38 101.276 124.371 101.44 cv
124.251 103.565 127.185 103.66 127.849 101.91 cv
128.045 101.396 128.37 100.764 128.803 100.336 cv
129.056 100.271 129.339 100.253 129.63 100.271 cv
130.794 100.346 130.619 101.453 130.596 102.416 cv
130.561 103.936 132.491 104.652 133.538 103.634 cv
135.825 101.409 134.243 97.7566 131.701 96.489 cv
cp
f
159.423 85.7439 mo
158.819 84.7546 157.899 84.0124 156.647 83.885 cv
155.474 83.7653 154.343 84.1667 153.599 85.0993 cv
153.587 85.1145 153.579 85.1306 153.567 85.1452 cv
153.442 85.2439 153.306 85.3308 153.195 85.4431 cv
152.31 86.3376 151.527 87.9963 151.918 89.2522 cv
152.609 91.4743 156.164 90.4807 155.399 88.2927 cv
155.555 88.7419 155.38 88.6037 155.558 88.2258 cv
155.636 88.0603 155.713 87.8615 155.85 87.7341 cv
156.027 87.5686 156.263 87.4714 156.514 87.5349 cv
156.559 87.5461 156.582 87.5734 156.619 87.59 cv
156.832 88.0246 156.864 88.6032 156.898 89.051 cv
157.033 90.8537 159.789 91.4841 160.234 89.5026 cv
160.54 88.1418 160.21 86.759 159.423 85.7439 cv
cp
f
208.658 84.4992 mo
208.273 84.0197 207.83 83.5954 207.306 83.2956 cv
206.037 82.5705 204.634 82.9714 203.488 83.7258 cv
202.546 84.3459 201.67 85.1945 201.401 86.3288 cv
201.331 86.6203 201.325 86.8928 201.351 87.1569 cv
201.335 87.361 201.331 87.5686 201.356 87.7829 cv
201.426 88.3962 201.715 88.842 202.097 89.1276 cv
202.216 89.3552 202.334 89.5847 202.435 89.8215 cv
202.917 90.9465 204.38 90.1091 204.296 89.1032 cv
204.632 88.8191 204.873 88.3825 204.914 87.7829 cv
204.949 87.2541 205.651 87.1003 206.132 87.2907 cv
206.328 87.6472 206.493 88.0363 206.636 88.3567 cv
207.102 89.4021 208.856 89.6013 209.573 88.7351 cv
210.831 87.2155 210.024 85.5388 208.658 84.4992 cv
cp
f
148.464 56.8117 mo
148.38 56.7697 148.292 56.7346 148.206 56.6955 cv
147.422 56.1042 146.547 55.6623 145.673 55.6447 cv
144.888 55.6286 144.156 56.0598 143.635 56.6784 cv
142.352 57.3786 141.785 58.6999 141.856 60.2121 cv
141.929 61.778 142.549 63.3918 144.199 63.8435 cv
146.199 64.3903 147.355 61.5954 145.599 60.5236 cv
145.578 60.5109 145.578 60.5085 145.562 60.4982 cv
145.542 60.4187 145.502 60.3024 145.512 60.2331 cv
145.521 60.1701 145.515 60.1062 145.512 60.0422 cv
145.533 60.0251 145.554 60.0129 145.576 59.9948 cv
145.605 59.9704 145.625 59.9338 145.651 59.904 cv
145.879 59.904 146.098 59.8977 146.334 59.9592 cv
146.761 60.3352 147.138 60.7609 147.487 61.2097 cv
148.266 62.2097 149.836 61.7297 150.415 60.8322 cv
151.491 59.1652 149.88 57.531 148.464 56.8117 cv
cp
f
103.434 60.9401 mo
103.106 59.906 102.403 59.0188 101.523 58.4211 cv
101.521 58.4196 101.519 58.4177 101.517 58.4157 cv
101.51 58.4108 101.503 58.4065 101.496 58.4016 cv
101.412 58.3459 101.334 58.2829 101.247 58.2331 cv
99.9869 57.384 98.339 56.9626 96.9376 57.7419 cv
96.7897 57.8239 96.652 57.9167 96.5211 58.0163 cv
96.0079 58.2194 95.5265 58.5227 95.1027 58.9675 cv
93.5216 60.6301 93.7706 62.9768 95.1461 64.6525 cv
96.2931 66.05 98.1329 64.737 98.3068 63.3435 cv
98.3737 62.8044 98.5387 61.8952 99.0724 61.5983 cv
99.3805 61.8098 99.5543 62.196 99.7731 62.4831 cv
100.377 63.2775 101.287 63.737 102.274 63.3029 cv
103.151 62.9172 103.741 61.9089 103.434 60.9401 cv
cp
f
41.1173 97.9558 mo
39.3453 96.6989 36.9103 96.0007 35.2516 97.8713 cv
35.2033 97.926 35.1666 97.9895 35.1207 98.0466 cv
34.9962 98.1115 34.8673 98.1677 34.7496 98.2448 cv
33.0016 99.3952 33.0646 101.537 33.6461 103.315 cv
34.0748 104.626 35.588 104.996 36.6075 104.096 cv
36.9972 103.753 37.2111 103.39 37.3239 102.882 cv
37.4376 102.37 37.2853 101.848 36.986 101.446 cv
37.0035 101.36 37.0309 101.267 37.0626 101.172 cv
37.9586 101.093 38.8405 101.068 39.7355 101.234 cv
41.7604 101.612 42.8009 99.1501 41.1173 97.9558 cv
cp
f
59.6134 72.2575 mo
57.7448 63.0036 49.3361 53.0417 38.903 56.8391 cv
34.4254 58.4685 29.84 62.384 27.8844 66.7526 cv
25.1124 72.947 27.0797 79.1296 29.4699 85.0442 cv
29.9845 86.3171 31.7472 85.8449 31.5265 84.4773 cv
30.0646 75.4157 29.4445 66.6633 38.734 61.7658 cv
47.1657 57.32 54.8463 65.383 56.5172 73.111 cv
56.9547 75.1359 60.0201 74.2736 59.6134 72.2575 cv
cp
.960784 1 .847059 rgb
f
115.845 40.9519 mo
111.113 28.1413 99.6881 8.44893 82.9757 16.195 cv
67.4528 23.3903 70.653 44.9768 77.3058 57.2038 cv
77.9386 58.3669 79.5612 57.3449 79.046 56.1862 cv
77.2936 52.2439 75.9347 46.8723 75.631 41.4436 cv
76.8424 41.6037 78.2174 40.7985 78.2711 39.2883 cv
78.4088 35.4338 77.5983 30.6179 80.4635 27.5168 cv
83.3385 24.405 89.2169 23.738 93.1852 23.737 cv
102.59 23.7336 108.547 34.9782 111.813 42.6516 cv
112.782 44.9299 116.711 43.2971 115.845 40.9519 cv
cp
f
149.944 34.5544 mo
148.972 29.8357 143.463 22.3088 137.794 25.0275 cv
131.889 27.8591 131.956 37.1379 133.472 42.383 cv
133.784 43.4607 135.301 42.9953 135.122 41.9284 cv
134.693 39.3825 134.861 35.8635 135.943 33.0007 cv
137.358 32.3947 138.461 31.5168 140.221 31.5905 cv
142.967 31.7058 145.225 32.9079 145.953 35.6545 cv
146.64 38.2482 150.478 37.1457 149.944 34.5544 cv
cp
f
207.606 48.072 mo
207.277 40.6379 205.689 33.8078 198.15 30.719 cv
183.27 24.6223 167.714 36.4714 162.846 50.3459 cv
162.389 51.6486 164.493 52.5559 165.095 51.2941 cv
165.947 49.5109 167.079 47.7419 168.409 46.051 cv
168.489 46.0446 168.57 46.0271 168.651 45.9821 cv
170.542 44.9377 172.075 42.7927 174.022 41.6921 cv
174.293 42.3488 174.914 42.8239 175.709 42.4987 cv
179.588 40.9138 183.189 37.8215 187.561 37.9211 cv
191.994 38.0222 198.285 39.8313 201.228 43.2702 cv
201.65 43.7624 201.985 44.2756 202.261 44.8024 cv
202.56 46.3942 202.731 48.0808 202.87 49.8054 cv
202.925 50.4831 202.976 51.1809 203.021 51.8894 cv
202.696 53.9914 202.1 56.1076 201.704 58.0847 cv
200.952 61.8317 200.389 65.5622 199.937 69.3557 cv
199.755 70.8855 201.774 71.3283 202.718 70.507 cv
208.748 65.2619 207.925 55.2907 207.606 48.072 cv
cp
f
139.42 80.4685 mo
136.646 69.301 123.664 54.4699 111.728 63.884 cv
106.587 67.9387 102.848 75.9475 103.423 82.4953 cv
103.869 87.5744 105.416 95.5339 110.666 97.5769 cv
111.857 98.0402 112.377 96.2932 111.479 95.6491 cv
109.848 94.4812 109.601 90.6154 109.22 88.8723 cv
108.83 87.0866 108.349 85.2473 108.148 83.3996 cv
109.077 80.7849 109.857 78.0334 110.912 75.4758 cv
112.444 71.7624 116.148 69.445 119.982 68.5012 cv
122.664 67.841 124.869 68.2346 126.708 69.2893 cv
130.494 72.8542 133.396 78.6335 135 82.3317 cv
135.013 82.3239 135.026 82.3166 135.04 82.3088 cv
136.432 84.4558 140.129 83.3195 139.42 80.4685 cv
cp
f
89.1852 73.4553 mo
88.4332 72.2512 86.4464 72.6867 85.7662 73.7673 cv
84.9508 75.0627 85.7555 76.5715 86.3409 77.779 cv
86.6373 78.3908 87.6305 78.0891 87.6075 77.4362 cv
87.5919 76.9914 87.6188 76.6135 87.7208 76.1794 cv
87.736 76.114 87.8722 75.5661 87.9156 75.2609 cv
87.9825 75.2458 88.046 75.2312 88.0636 75.2282 cv
88.6046 75.1369 88.8517 74.9983 89.1852 74.552 cv
89.4059 74.2566 89.3722 73.7546 89.1852 73.4553 cv
cp
f
98.8873 58.4914 mo
98.068 58.3269 97.13 58.5876 96.4464 59.0524 cv
95.736 59.5354 95.2506 60.2341 94.9215 61.0168 cv
94.7281 61.4758 94.6158 61.906 94.6725 62.4065 cv
94.6969 62.6272 94.7335 62.8576 94.8488 63.0524 cv
94.9078 63.1291 94.9669 63.2053 95.026 63.2819 cv
95.316 63.489 95.3341 63.5149 95.0802 63.3591 cv
95.1613 63.8791 95.7892 63.8386 96.0778 63.5471 cv
96.4332 63.4231 96.775 63.1994 97.0558 62.7732 cv
97.3121 62.384 97.4474 61.8137 97.8507 61.53 cv
98.0597 61.3825 98.2565 61.3796 98.4952 61.3903 cv
99.0123 61.4138 99.3976 61.5017 99.9576 61.2634 cv
100.353 61.0949 100.496 60.6315 100.538 60.2512 cv
100.645 59.2956 99.714 58.6569 98.8873 58.4914 cv
cp
f
73.1827 92.0173 mo
70.3829 86.5354 64.5143 84.0227 59.2203 87.9382 cv
54.3849 91.5149 54.8634 99.4279 57.7072 104.009 cv
58.3927 105.113 60.4655 104.389 59.9132 103.079 cv
59.1163 101.189 58.5895 98.8332 58.7457 96.6003 cv
58.756 96.5905 58.7687 96.5861 58.7784 96.5759 cv
60.2111 95.1169 61.3683 93.4514 63.4679 92.9231 cv
66.007 92.2839 68.4181 93.3122 70.4454 94.7546 cv
72.1979 96.0017 74.0148 93.6457 73.1827 92.0173 cv
cp
f
20.0343 98.676 mo
17.2208 98.4777 15.0314 98.6394 13.4034 101.171 cv
13.3326 101.281 13.2765 101.396 13.2106 101.508 cv
12.0411 102.646 11.0885 104.368 11.8258 105.861 cv
11.7369 106.885 11.7828 107.933 11.945 108.994 cv
12.1554 110.372 14.1598 109.919 14.2467 108.683 cv
14.3473 107.252 14.757 105.848 15.3893 104.557 cv
15.5358 104.393 15.6813 104.229 15.8522 104.085 cv
16.9796 103.134 18.5665 102.485 20.0343 102.385 cv
22.4196 102.223 22.4205 98.8444 20.0343 98.676 cv
cp
f
38.6803 98.0578 mo
37.5109 97.1794 35.8434 97.9748 35.0182 98.9602 cv
34.1891 99.9499 34.0284 101.11 34.2394 102.357 cv
34.3453 102.986 35.4376 103.003 35.5275 102.357 cv
35.6207 101.685 36.025 101.061 36.6349 100.729 cv
37.2809 100.377 38.0475 100.406 38.6803 99.9963 cv
39.4415 99.5031 39.3571 98.5661 38.6803 98.0578 cv
cp
f
132.272 98.9636 mo
131.772 97.8469 130.044 96.6833 128.8 96.9817 cv
128.166 97.1345 127.7 97.5944 127.313 98.0905 cv
126.842 98.6936 126.693 99.1838 126.804 99.9333 cv
126.856 100.278 127.263 100.413 127.554 100.359 cv
127.905 100.294 128.159 100.226 128.47 100.04 cv
128.705 99.8996 128.945 99.6408 129.211 99.5446 cv
129.357 99.6594 129.498 99.779 129.634 99.904 cv
129.948 100.184 130.207 100.461 130.593 100.642 cv
131.887 101.25 132.86 100.275 132.272 98.9636 cv
cp
f
158.701 86.3918 mo
158.374 85.135 156.972 84.51 155.786 84.7995 cv
154.32 85.1574 153.675 86.3601 153.458 87.7434 cv
153.336 88.5129 154.231 88.903 154.7 88.2668 cv
155.297 87.4563 156.413 86.7448 157.376 87.3044 cv
157.68 87.4821 157.93 87.7644 158.306 87.6062 cv
158.743 87.4226 158.804 86.7859 158.701 86.3918 cv
cp
f
168.521 63.259 mo
165.65 62.8859 162.598 63.4919 161.605 66.489 cv
161.311 67.3762 162.561 67.7937 163.04 67.094 cv
163.889 65.8532 166.463 65.9353 167.756 66.0998 cv
169.377 66.3054 169.316 67.7185 170.43 68.5612 cv
170.652 68.7292 171.096 68.7292 171.318 68.5612 cv
173.8 66.6814 170.706 63.5427 168.521 63.259 cv
cp
f
143.88 57.5915 mo
142.819 58.7067 142.666 60.4841 143.486 61.7717 cv
143.901 62.4226 145.081 62.0168 144.793 61.2209 cv
144.57 60.6071 144.607 59.9235 145.043 59.403 cv
145.54 58.8107 146.046 58.9353 146.61 59.322 cv
147.185 59.7165 148.102 59.1989 148.046 58.4982 cv
147.868 56.2819 145.161 56.2458 143.88 57.5915 cv
cp
f
207.392 86.3518 mo
207.268 85.9646 206.984 85.6399 206.678 85.3835 cv
206.014 84.8274 205.178 84.5783 204.321 84.717 cv
202.719 84.9763 201.735 86.5842 202.24 88.135 cv
202.514 88.9763 203.796 88.8459 203.806 87.9231 cv
203.811 87.4792 204.314 87.1062 204.739 87.1623 cv
204.977 87.1936 205.173 87.3523 205.359 87.489 cv
205.504 87.5959 205.632 87.7136 205.793 87.7971 cv
205.922 87.8645 206.652 88.1799 206.134 87.8928 cv
206.551 88.1242 207.266 87.9475 207.348 87.3991 cv
207.398 87.0617 207.522 86.7551 207.392 86.3518 cv
cp
f
232.838 74.9377 mo
225.972 71.9167 216.942 77.4563 215.557 84.4519 cv
215.359 85.4577 216.645 86.469 217.438 85.5466 cv
220.478 82.0075 227.508 75.7155 232.191 80.2546 cv
236.366 84.301 236.143 90.8493 237.646 95.966 cv
237.651 95.9821 237.661 95.9939 237.666 96.0095 cv
237.507 95.9323 237.318 95.9255 237.139 96.0412 cv
236.005 96.7766 235.259 97.9841 234.47 99.0637 cv
233.728 100.078 235.454 101.108 236.17 100.057 cv
236.883 99.0109 237.72 97.9621 238.017 96.7165 cv
238.034 96.6433 238.033 96.571 238.023 96.5002 cv
238.48 96.8337 239.185 96.7575 239.531 96.2126 cv
243.53 89.906 239.684 77.9504 232.838 74.9377 cv
cp
f
213.609 104.121 mo
210.658 101.547 206.414 102.237 202.745 102.448 cv
197.299 102.761 192.013 103.43 186.89 105.329 cv
179.043 105.304 170.492 104.847 163.339 107.347 cv
162.63 107.595 162.449 108.821 163.339 108.974 cv
172.307 110.52 182.418 107.897 191.445 107.284 cv
192.289 107.227 192.576 106.36 192.311 105.781 cv
194.581 105.519 196.848 105.232 199.13 105.012 cv
203.152 104.625 208.896 103.428 212.559 105.484 cv
213.389 105.949 214.375 104.789 213.609 104.121 cv
cp
f
144.078 109.02 mo
130.264 108.57 116.647 109.7 102.931 111.195 cv
102.785 111.211 102.778 111.438 102.931 111.429 cv
116.626 110.675 130.352 109.687 144.078 109.77 cv
144.562 109.773 144.56 109.035 144.078 109.02 cv
cp
f
95.0626 111.212 mo
85.1705 111.419 75.278 111.473 65.3873 111.732 cv
56.2355 111.971 46.651 111.491 37.5997 112.837 cv
37.1945 112.897 37.3385 113.471 37.6901 113.504 cv
47.0592 114.374 56.9752 113.319 66.3766 113.036 cv
75.941 112.749 85.4987 112.269 95.0626 111.939 cv
95.5284 111.923 95.5319 111.202 95.0626 111.212 cv
cp
f
33.3073 110.17 mo
32.1559 109.918 31.0626 110.112 29.9113 110.255 cv
28.6334 110.414 27.3512 110.434 26.0665 110.374 cv
24.5324 110.302 24.6017 112.554 26.0665 112.718 cv
28.3561 112.973 31.5729 113.333 33.5255 111.841 cv
34.0919 111.407 34.1564 110.356 33.3073 110.17 cv
cp
f
108.883 47.7707 mo
104.824 41.9626 97.9015 36.1286 90.7716 40.7253 cv
85.2067 44.3122 82.0021 52.3405 85.9918 58.1408 cv
86.9821 59.5808 88.7731 58.966 89.13 57.6804 cv
90.7291 56.3972 91.5656 54.9074 92.8561 53.3039 cv
94.4093 51.3742 96.528 50.1311 98.9127 49.6369 cv
99.2858 49.572 99.6583 49.5065 100.035 49.4587 cv
100.669 49.3781 101.186 49.1267 101.594 48.778 cv
102.645 49.592 103.607 50.4787 104.429 51.2072 cv
106.696 53.218 110.833 50.5607 108.883 47.7707 cv
cp
.486275 .847059 .137255 rgb
f
55.6842 73.5588 mo
52.1246 69.4802 46.1769 66.2238 41.5177 70.7351 cv
38.7203 73.4441 37.6486 77.1027 37.6305 80.8171 cv
37.0983 81.7419 36.7672 82.7649 36.7242 83.9011 cv
36.6818 85.0285 37.3795 85.7976 38.2614 86.1125 cv
38.2701 86.1496 38.277 86.1872 38.2858 86.2243 cv
38.6876 87.8811 41.4899 87.5778 41.3243 85.8132 cv
41.3014 85.57 41.298 85.3181 41.2877 85.0686 cv
41.7428 84.2922 42.0934 83.4607 42.4147 82.615 cv
43.3551 81.7756 44.8351 81.0202 45.4108 80.7365 cv
47.1354 79.8859 49.0123 79.4148 50.8815 79.0017 cv
51.6134 78.84 52.0997 78.4436 52.3986 77.9445 cv
55.1466 79.5988 57.653 75.8142 55.6842 73.5588 cv
cp
f
66.9542 98.0339 mo
65.6696 98.3371 63.9362 99.2678 63.6583 100.643 cv
63.5939 100.962 63.5856 101.264 63.6276 101.545 cv
63.5328 101.775 63.4508 102.01 63.3961 102.257 cv
63.2164 103.069 63.5719 103.915 64.3663 104.234 cv
65.0656 104.515 66.1198 104.323 66.4591 103.549 cv
66.4777 103.506 66.5016 103.466 66.5221 103.425 cv
66.8707 103.342 67.213 103.205 67.5436 103.041 cv
67.5719 103.027 67.5978 103.009 67.6261 102.995 cv
67.632 102.997 67.6378 102.998 67.6437 103 cv
68.3024 103.258 69.1066 102.998 69.6324 102.592 cv
70.2443 102.119 70.4415 101.547 70.5314 100.8 cv
70.7618 98.8855 68.6276 97.6384 66.9542 98.0339 cv
cp
f
44.4454 101.787 mo
43.8912 101.174 42.8951 100.934 42.1139 101.171 cv
40.8317 101.559 39.1735 101.927 38.2194 102.914 cv
36.9308 104.247 37.299 107.134 39.4113 107.425 cv
40.2238 107.537 40.9518 107.469 41.566 106.855 cv
41.7579 106.663 41.9074 106.408 42.026 106.136 cv
42.4786 106.016 42.9332 105.903 43.3883 105.792 cv
44.1608 105.605 44.8888 104.904 45.0621 104.118 cv
45.2648 103.199 45.0763 102.485 44.4454 101.787 cv
cp
f
44.8185 92.1062 mo
44.8287 92.0871 44.8307 92.0661 44.8409 92.0476 cv
44.694 92.4011 44.6901 92.4118 44.8185 92.1062 cv
cp
f
50.6681 92.8415 mo
50.8112 91.7795 50.152 90.6242 49.0543 90.3698 cv
48.7008 90.2878 48.3341 90.2566 47.9684 90.2702 cv
48.4308 89.05 48.9713 87.884 49.6115 86.7473 cv
49.8761 86.4914 49.9513 86.3015 50.295 85.5891 cv
50.5158 85.1325 50.424 84.7067 50.1891 84.3977 cv
49.9733 84.03 49.5333 83.7981 49.1451 83.9411 cv
48.8585 83.9787 48.5787 84.1325 48.3727 84.465 cv
48.2482 84.6657 48.15 84.8581 48.0343 85.0549 cv
47.8483 85.3215 47.6622 85.5881 47.4762 85.8547 cv
47.4215 85.9235 47.3986 85.9943 47.3615 86.0647 cv
47.1788 86.0202 46.9908 86.0178 46.8204 86.0774 cv
40.7008 88.2155 35.8126 90.8034 31.4977 95.5017 cv
31.1642 95.3151 30.7472 95.2878 30.3346 95.5149 cv
29.2291 96.1237 29.0743 96.3957 28.6427 97.57 cv
28.4972 97.9655 28.5714 98.3132 28.7521 98.5974 cv
28.0592 100.232 27.3849 101.494 27.7599 103.615 cv
28.0861 105.459 28.8136 108.183 30.3136 109.404 cv
31.8873 110.684 35.6036 110.743 37.5851 110.804 cv
39.1422 110.851 40.631 110.718 42.1447 110.326 cv
44.2184 109.788 46.9503 107.819 49.1241 108.904 cv
49.8361 109.259 50.799 108.498 50.2946 107.734 cv
48.0592 104.347 44.6837 106.811 41.5592 107.436 cv
39.0592 107.935 33.3551 108.63 31.5084 106.217 cv
29.7194 103.881 31.3976 100.606 32.025 98.0051 cv
32.048 97.9738 32.0758 97.9484 32.0958 97.9133 cv
34.6544 93.34 41.2311 91.1032 46.0934 88.9196 cv
46.0773 89.2253 46.0392 89.5305 45.9825 89.8347 cv
45.8746 90.2238 45.7623 90.6067 45.671 91.0236 cv
45.67 91.0271 45.671 91.0295 45.67 91.0329 cv
45.6696 91.0334 45.6691 91.0334 45.6686 91.0339 cv
45.4259 91.2214 45.3229 91.3064 45.1354 91.5485 cv
44.9928 91.6921 44.8942 91.8615 44.8395 92.0568 cv
44.8302 92.0788 44.8268 92.0866 44.8185 92.1062 cv
44.7697 92.1989 44.7418 92.2981 44.7072 92.3957 cv
44.2697 93.0319 43.9962 93.781 44.0402 94.5627 cv
44.0958 95.5525 44.8732 96.509 45.9386 96.4611 cv
46.8556 96.4201 47.4679 95.8772 47.7194 95.0969 cv
47.9015 95.0305 48.0831 94.9636 48.2579 94.8781 cv
48.2784 94.8679 48.2882 94.8625 48.3043 94.8547 cv
48.3595 94.8376 48.4152 94.8244 48.4718 94.8122 cv
48.6427 94.7893 48.7775 94.7717 48.5919 94.7849 cv
48.5929 94.7844 48.5963 94.7839 48.5973 94.7834 cv
48.7501 94.7629 48.9044 94.7502 49.0543 94.7146 cv
49.045 94.6794 li
49.8922 94.4279 50.5402 93.7942 50.6681 92.8415 cv
cp
f
27.1491 104.308 mo
26.5187 103.219 25.2941 102.587 24.0372 102.916 cv
22.0636 103.432 21.3741 105.736 21.757 107.515 cv
21.9093 108.222 22.6984 108.812 23.4181 108.78 cv
23.7882 108.763 24.1266 108.64 24.4088 108.44 cv
25.215 108.699 25.9811 108.453 26.6408 107.915 cv
27.6305 107.108 27.7682 105.379 27.1491 104.308 cv
cp
f
91.9493 77.4445 mo
90.6383 77.4445 89.3737 78.8405 89.8698 80.1745 cv
89.901 80.2585 li
90.2184 81.1125 90.9674 81.8645 91.9518 81.82 cv
92.9108 81.7771 93.7164 81.1858 94.0031 80.2585 cv
94.0289 80.1745 li
94.4454 78.8259 93.3136 77.4445 91.9493 77.4445 cv
cp
f
99.6705 63.5813 mo
98.9332 63.1921 98.1993 63.3493 97.5699 63.8523 cv
97.3956 63.9919 97.2511 64.1931 97.1442 64.3884 cv
96.632 65.3239 97.0094 66.385 97.8917 66.8547 cv
98.0621 67.049 98.2472 67.2277 98.4752 67.3654 cv
99.2516 67.8352 100.069 67.1125 100.032 66.3742 cv
100.222 66.135 100.372 65.8571 100.467 65.5393 cv
100.679 64.8332 100.334 63.9318 99.6705 63.5813 cv
cp
f
145.807 41.8625 mo
145.168 40.8435 143.92 40.424 142.787 40.6823 cv
142.019 40.4255 141.147 40.4792 140.389 40.8957 cv
138.39 41.9948 137.316 45.3977 138.724 47.2946 cv
139.211 47.9504 139.97 48.3186 140.773 47.9655 cv
140.913 47.904 141.039 47.8195 141.156 47.7253 cv
141.315 47.8078 141.485 47.8635 141.661 47.9025 cv
142.707 48.5705 144.36 48.3215 145.035 47.1672 cv
145.896 45.695 146.808 43.4567 145.807 41.8625 cv
cp
f
135.691 84.7473 mo
131.982 81.5866 127.991 80.632 123.435 82.7834 cv
119.509 84.6379 116.984 88.2902 117.211 92.6809 cv
117.241 93.2649 117.591 93.7175 118.046 93.99 cv
118.386 95.8059 120.547 97.2668 122.093 95.5036 cv
123.316 94.1091 124.664 92.8942 126.216 91.9231 cv
126.511 92.0295 126.838 92.0534 127.156 91.9694 cv
128.406 91.6399 129.377 90.8147 130.45 90.1237 cv
131.179 89.8742 131.884 89.5822 132.518 89.1618 cv
132.699 89.198 132.881 89.2351 133.059 89.2692 cv
135.467 89.736 137.927 86.6521 135.691 84.7473 cv
cp
f
130.062 102.729 mo
129.239 102.357 128.336 102.102 127.512 102.654 cv
126.943 103.034 126.567 103.597 126.567 104.301 cv
126.567 104.939 126.922 105.656 127.512 105.95 cv
128.208 106.297 128.902 106.359 129.627 106.064 cv
130.32 105.78 130.828 105.334 130.933 104.547 cv
131.022 103.889 130.717 103.025 130.062 102.729 cv
cp
f
155.103 90.8122 mo
154.139 91.114 153.495 92.3234 154.112 93.2468 cv
154.186 93.3567 154.269 93.4577 154.352 93.5583 cv
154.332 94.469 154.909 95.3576 155.85 95.6169 cv
157.19 95.986 158.373 94.9524 158.461 93.6281 cv
158.573 91.9216 156.807 90.28 155.103 90.8122 cv
cp
f
175.393 90.1355 mo
173.593 91.1677 172.173 93.6745 173.933 95.4353 cv
174.436 95.9372 175.122 96.1735 175.818 96.197 cv
176.336 97.5149 178.134 98.3874 179.514 97.1242 cv
179.795 96.8674 180.03 96.5769 180.255 96.2746 cv
180.453 96.5085 180.666 96.7312 180.922 96.8947 cv
182.189 97.7058 184.102 96.9348 184.44 95.4641 cv
185.475 90.9514 178.863 88.1467 175.393 90.1355 cv
cp
f
210.725 73.0974 mo
209.859 73.3 209.104 73.8278 208.415 74.4069 cv
207.711 74.5007 207.019 74.6858 206.445 75.0378 cv
204.87 76.0056 204.756 78.2595 205.979 79.5481 cv
206.086 79.6604 206.197 79.7624 206.313 79.8567 cv
206.813 80.6091 207.716 80.9734 208.755 80.799 cv
208.929 80.7697 209.079 80.7092 209.236 80.6579 cv
210.449 80.5446 211.661 80.0046 212.53 79.2453 cv
213.307 78.5676 213.902 77.5959 214.142 76.5915 cv
214.642 74.4909 212.855 72.6008 210.725 73.0974 cv
cp
f
158.277 57.2575 mo
158.32 56.6027 158 55.906 157.505 55.5236 cv
156.787 54.969 155.57 54.9328 154.936 55.677 cv
154.361 56.3503 153.846 57.0612 153.451 57.8537 cv
153.118 58.5197 153.063 59.2541 153.451 59.9167 cv
153.792 60.5002 154.514 60.9846 155.215 60.9284 cv
156.519 60.8249 157.483 60.2634 158.113 59.0969 cv
158.439 58.4953 158.464 57.8376 158.277 57.2575 cv
cp
f
118.609 104.233 mo
115.67 102.733 111.917 103.113 108.769 103.785 cv
107.817 103.989 106.837 104.151 105.846 104.294 cv
105.767 104.086 105.65 103.884 105.452 103.703 cv
104.252 102.604 103.441 102.719 101.949 102.155 cv
100.582 101.638 99.61 100.497 98.2252 100.009 cv
96.9093 99.5446 95.5065 99.6423 94.1368 99.5881 cv
93.9386 99.5803 93.7477 99.5534 93.5524 99.5398 cv
93.5983 98.9992 93.5543 98.3767 93.3761 97.6364 cv
93.3634 97.5847 93.3414 97.5437 93.3263 97.4948 cv
94.13 96.9675 94.7208 96.0817 94.6207 95.1799 cv
94.5656 94.6784 94.4943 94.2214 94.3971 93.7937 cv
94.5236 93.9421 94.6578 94.0847 94.8112 94.215 cv
95.861 95.1071 97.8727 94.6076 97.7711 92.9885 cv
97.5153 88.9079 96.048 85.0734 97.0978 80.9655 cv
98.1671 76.7795 100.174 72.8166 101.547 68.7199 cv
101.723 68.198 100.889 67.8332 100.648 68.3405 cv
98.7677 72.3039 96.8077 76.3078 95.6154 80.5568 cv
95.2321 81.9235 94.9073 83.4011 94.7521 84.8479 cv
94.5631 84.6096 94.3546 84.3772 94.1056 84.1579 cv
92.6749 82.8982 90.3546 83.7321 90.3136 85.7282 cv
90.2902 86.8811 90.4044 88.2302 90.4205 89.5398 cv
90.2032 89.5476 89.9918 89.5847 89.7887 89.6491 cv
89.4044 89.112 89.0446 88.5417 88.7076 87.9533 cv
88.2941 85.3317 87.1154 82.9753 85.256 80.7893 cv
84.6764 80.1081 83.8531 79.9006 83.0485 80.0114 cv
82.568 78.3562 81.8439 76.9289 79.5206 75.9768 cv
78.6974 75.6394 77.9073 75.965 77.3229 76.5232 cv
76.9635 76.2785 76.5846 76.0481 76.1779 75.8386 cv
74.0509 74.7414 71.7794 76.5422 72.2599 78.8508 cv
73.7321 85.9245 78.9352 90.0681 84.589 94.0295 cv
84.8761 94.2307 85.1671 94.3527 85.4552 94.4211 cv
86.1324 95.0905 86.8732 95.5271 87.7941 95.7146 cv
88.3204 96.1799 88.8815 96.6018 89.4767 96.9753 cv
89.1217 97.4255 88.9503 98.0227 89.1149 98.7321 cv
89.1075 98.7297 89.1007 98.7273 89.0934 98.7248 cv
88.8243 97.946 88.0323 98.2258 87.0905 98.1779 cv
84.5607 98.05 84.4615 101.507 86.5314 102.306 cv
88.2809 102.982 90.028 103.501 91.8888 103.775 cv
93.5748 104.023 95.6998 103.721 97.254 104.505 cv
97.5792 104.669 97.8961 104.845 98.2081 105.024 cv
96.9757 105.108 95.7526 105.187 94.5538 105.277 cv
92.5382 105.427 90.5465 105.297 88.5758 104.777 cv
86.9381 104.344 85.2159 102.782 83.6539 102.482 cv
80.2838 101.835 75.9103 104.319 72.7662 105.298 cv
71.6276 105.652 72.0948 107.35 73.2584 107.083 cv
75.4586 106.578 77.8116 105.82 80.0577 105.602 cv
82.7535 105.341 82.0851 105.71 84.1666 106.764 cv
86.5299 107.961 89.5826 108.761 92.2433 108.856 cv
96.3351 109.002 100.483 107.881 104.576 107.862 cv
108.914 107.842 112.898 106.28 117.344 107.232 cv
119.073 107.602 120.349 105.121 118.609 104.233 cv
cp
f
230.086 93.2067 mo
229.111 93.3108 228.3 93.6037 227.457 93.8806 cv
227.476 92.0368 226.634 90.2126 224.97 88.9846 cv
222.833 87.4084 219.291 86.3557 217.078 88.2663 cv
216.07 88.7575 215.174 89.5158 214.485 90.5451 cv
213.927 91.3786 214.04 92.6159 214.613 93.4914 cv
214.35 93.3156 214.042 93.2048 213.699 93.2141 cv
210.672 93.2942 207.777 93.6716 204.886 94.2199 cv
205.186 93.3542 204.804 92.3352 203.771 91.9978 cv
202.915 91.719 202.05 91.6872 201.835 92.0534 cv
201.859 91.427 202.012 90.5363 201.856 90.0588 cv
201.315 88.3996 199.376 87.1521 198.837 85.1652 cv
198.398 83.5481 198.543 82.4934 197.943 81.1306 cv
198.199 78.8191 198.124 76.5149 196.422 74.6818 cv
195.009 73.1609 193.819 73.1423 192.355 73.3913 cv
192.18 72.6223 192.004 71.5822 191.717 71.1428 cv
191.205 70.3581 190.514 69.9543 189.772 69.5349 cv
189.025 68.2395 187.976 67.4802 186.75 67.34 cv
186.695 67.1267 186.648 66.9104 186.567 66.7077 cv
186.397 66.2849 186.221 65.8786 185.892 65.5495 cv
185.487 65.1447 184.901 64.7302 184.945 65.0275 cv
184.906 64.7683 184.796 64.5339 184.656 64.3151 cv
184.503 63.4245 184.521 62.5905 184.79 61.6189 cv
184.96 61.0017 184.665 60.4299 184.165 60.0847 cv
183.556 59.6633 183.002 59.4299 182.24 59.4289 cv
181.761 59.4284 180.95 59.8234 180.523 59.7346 cv
180.311 59.6906 179.998 59.2204 179.63 58.7321 cv
181.387 59.1086 183.205 59.1023 185.044 58.8903 cv
185.21 61.0627 185.772 63.2341 188.002 64.2414 cv
193.465 66.7092 195.287 59.5808 194.519 55.675 cv
193.57 50.8532 189.698 47.0149 184.698 46.8234 cv
181.345 46.6955 177.613 48.3864 176.199 51.3737 cv
176.064 51.4279 175.931 51.4821 175.799 51.5363 cv
175.798 51.5368 175.797 51.5368 175.797 51.5368 cv
175.797 51.5373 175.797 51.5373 175.797 51.5373 cv
175.587 51.6242 175.379 51.7116 175.177 51.7985 cv
173.399 52.5671 173.583 54.4987 174.648 55.6628 cv
174.799 56.1179 175.055 56.5275 175.404 56.84 cv
173.469 56.7155 171.5 57.2746 170.56 58.9284 cv
170.137 59.6726 170.693 60.4138 171.461 60.4982 cv
172.67 60.6311 175.456 60.3449 176.708 60.8444 cv
176.931 61.861 177.495 62.6843 178.611 63.1076 cv
179.855 63.5798 180.927 63.072 182.055 62.7819 cv
182.056 62.8913 182.061 62.9997 182.064 63.1076 cv
181.937 63.1237 181.809 63.1403 181.69 63.1794 cv
181.575 63.217 181.46 63.2546 181.345 63.2922 cv
179.779 63.8054 179.012 65.8811 179.924 67.1662 cv
180.222 68.2234 180.903 69.0388 181.849 69.5232 cv
181.858 70.0275 181.837 70.5998 181.85 70.779 cv
182.016 72.9856 184.346 74.0891 186.091 72.8386 cv
186.427 73.1911 186.668 73.4294 187.228 73.6823 cv
187.822 73.9514 188.145 74.0305 188.332 74.3112 cv
188.498 74.5612 188.413 75.8068 188.705 76.3215 cv
189.229 77.2439 190.037 77.9172 191.13 78.0109 cv
191.68 78.0583 192.503 77.5144 192.933 77.6076 cv
194.226 77.8874 194.451 80.6594 194.45 81.549 cv
194.449 82.6242 195.474 83.2629 196.4 83.2409 cv
197.499 86.2155 198.854 89.8855 197.917 92.549 cv
197.696 93.1779 197.968 93.8679 198.389 94.3337 cv
198.731 94.7121 199.034 94.9509 199.322 95.1042 cv
199.005 95.3967 198.691 95.6897 198.37 95.9826 cv
197.551 96.7297 198.024 97.9152 198.901 98.28 cv
195.721 99.4694 192.362 100.535 189.375 100.51 cv
186.792 100.489 184.255 99.24 181.653 99.051 cv
178.875 98.8493 176.526 98.6106 173.801 97.9719 cv
172.331 97.6267 171.202 97.5153 169.691 97.7624 cv
169.034 97.8698 168.527 98.031 168.123 98.1657 cv
167.711 98.197 167.299 98.2424 166.886 98.3049 cv
166.676 98.1423 166.536 97.7605 166.399 97.0031 cv
166.088 95.2893 166.051 93.6765 165.615 91.8982 cv
165.233 90.3342 165.129 88.865 165.213 87.4235 cv
165.312 87.2483 165.392 86.9626 165.427 86.4065 cv
165.453 86.01 165.804 85.6565 165.775 85.24 cv
165.757 84.9924 165.697 84.7834 165.616 84.5944 cv
165.879 83.3942 166.239 82.1858 166.672 80.9279 cv
167.316 79.0578 164.764 78.1301 163.672 79.4001 cv
163.316 78.9309 162.871 78.6223 162.392 78.3776 cv
163.638 78.3054 164.793 77.9973 165.914 77.4211 cv
167.303 76.7072 167.524 74.6018 166.412 73.5578 cv
166.088 73.2531 165.722 72.9777 165.354 72.7028 cv
165.367 72.6438 165.388 72.5876 165.396 72.5271 cv
165.609 71.3952 165.254 70.236 164.216 69.6286 cv
163.319 69.1042 162.115 69.2038 161.309 69.8567 cv
161.162 69.9182 161.015 69.9777 160.868 70.0412 cv
160.593 70.1984 160.312 70.4006 160.086 70.6247 cv
159.176 71.5227 159.019 72.9841 159.592 74.0935 cv
159.764 74.4275 159.985 74.6941 160.225 74.9406 cv
159.942 75.4109 159.812 75.9831 159.886 76.4719 cv
159.939 76.8259 160.08 77.1565 160.278 77.4455 cv
160.074 77.3381 159.875 77.2214 159.688 77.0813 cv
158.547 76.2287 158.25 74.7805 156.94 74.112 cv
156.606 73.9421 156.137 73.7854 155.703 73.7302 cv
155.82 73.7019 155.939 73.6862 156.055 73.655 cv
158.115 73.1067 158.188 70.5036 156.611 69.4006 cv
155.833 68.8567 154.985 68.7414 154.136 68.8938 cv
154.086 68.7136 154.043 68.5305 153.966 68.3625 cv
153.822 68.0515 153.649 67.7956 153.46 67.5666 cv
154.297 66.592 154.951 65.425 155.441 64.3244 cv
155.521 64.1433 155.56 63.9548 155.566 63.7673 cv
157.217 63.091 159.125 62.8435 160.868 62.4333 cv
162.078 62.1486 168.043 60.0129 168.927 60.7732 cv
169.616 61.3659 170.853 60.5915 170.271 59.7365 cv
168.501 57.1389 163.398 59.0622 161.037 59.6926 cv
158.886 60.2673 156.559 60.9929 154.511 62.1037 cv
154.063 61.9255 153.546 62.0041 153.114 62.5295 cv
152.795 62.9514 152.455 63.3552 152.109 63.7531 cv
151.6 64.1965 151.133 64.6828 150.722 65.2234 cv
150.695 65.2492 150.672 65.278 150.645 65.3039 cv
150.651 65.3093 li
150.598 65.3811 150.533 65.4411 150.482 65.5144 cv
150.464 65.5407 150.462 65.5695 150.447 65.5959 cv
150.418 65.6174 150.389 65.6364 150.359 65.6569 cv
150.318 65.573 150.289 65.4817 150.243 65.3996 cv
150.257 64.9763 150.179 64.5202 149.926 63.9631 cv
149.497 63.0158 148.193 62.6325 147.257 62.8767 cv
147.171 62.8991 147.085 62.9216 146.999 62.944 cv
146.259 63.1374 145.508 63.8015 145.344 64.5759 cv
142.13 63.7707 137.618 63.7644 138.662 58.6374 cv
138.764 58.135 138.601 57.5261 138.107 57.2741 cv
137.824 57.1301 137.547 56.9724 137.272 56.8093 cv
137.499 56.1916 137.5 55.4929 137.094 54.947 cv
136.394 54.0031 135.605 53.3205 134.479 52.9265 cv
133.902 52.7248 133.356 52.7287 132.8 52.7302 cv
131.923 52.1218 130.584 52.195 129.784 52.8967 cv
129.263 52.8142 128.721 52.7595 128.211 52.7434 cv
128.107 52.6882 128.005 52.6286 127.884 52.5988 cv
126.89 52.3557 125.087 52.3762 124.026 53.0798 cv
123.436 52.6491 122.539 52.5857 121.947 53.1604 cv
119.946 55.1032 116.725 55.7443 114.129 56.5451 cv
113.432 56.76 112.879 57.0788 112.283 57.3112 cv
112.229 57.0036 112.091 56.7116 111.878 56.4982 cv
111.269 55.8894 110.372 55.968 109.756 56.4982 cv
109.589 56.6428 109.411 56.8 109.231 56.9641 cv
109.12 56.9104 109.006 56.8757 108.891 56.8796 cv
107.281 56.9318 106.11 57.2756 105.11 57.8674 cv
105.193 58.113 105.215 58.3928 105.137 58.7063 cv
104.919 59.5813 104.728 60.4006 104.816 61.3073 cv
104.837 61.53 104.786 61.7409 104.692 61.9333 cv
104.711 62.1648 104.72 62.3962 104.715 62.6267 cv
105.319 62.0109 105.916 61.4655 106.592 61.0149 cv
106.429 61.8698 107.094 62.8527 108.099 62.51 cv
109.105 62.1667 109.649 61.8171 110.294 60.9289 cv
110.53 60.6027 110.592 60.2673 110.534 59.9587 cv
110.583 59.8986 110.64 59.8459 110.692 59.7873 cv
111.212 59.8083 111.749 59.8523 112.259 59.7185 cv
114.448 59.1457 116.329 58.0798 118.663 57.6228 cv
119.941 57.3728 121.132 57.0095 122.262 56.4773 cv
123.346 57.2536 124.537 56.6804 126.209 56.4524 cv
127.58 56.2658 128.789 56.4636 129.928 56.8337 cv
130.43 57.2341 130.996 57.4431 131.592 57.4904 cv
133.131 58.1784 134.627 58.9899 136.329 59.3508 cv
136.53 61.5647 137.53 63.5998 139.167 65.2146 cv
140.963 66.9856 142.78 66.9265 144.875 67.7287 cv
144.963 68.5319 145.384 69.2859 146.08 69.7292 cv
146.704 70.1276 147.528 70.2512 148.276 70.3923 cv
148.097 70.5764 147.937 70.7917 147.803 71.0539 cv
146.919 72.7927 147.951 74.3039 149.421 74.7663 cv
149.566 74.8669 149.726 74.946 149.896 75.0026 cv
149.734 75.4792 149.68 76.0007 149.766 76.4953 cv
150.004 77.8654 150.884 79.008 152.335 79.3029 cv
153.113 79.4607 153.704 79.0295 154.416 79.0529 cv
154.471 79.0544 154.51 79.0534 154.56 79.0539 cv
154.597 79.1281 154.665 79.2185 154.788 79.3357 cv
157.046 81.4812 160.603 81.4719 162.07 84.1164 cv
161.612 85.9641 161.35 87.8498 161.585 89.7487 cv
161.706 90.7248 161.922 91.6174 162.163 92.4817 cv
162.219 93.0344 162.282 93.551 162.33 93.9455 cv
162.489 95.2614 162.705 96.2043 162.677 97.6067 cv
162.659 98.5085 162.58 98.8591 162.733 99.2668 cv
161.013 99.8264 159.084 100.715 157.388 100.755 cv
155.275 100.804 155.109 99.8327 153.721 98.9275 cv
152.026 97.821 150.949 97.7966 149.151 97.675 cv
148.995 97.3376 148.764 97.0378 148.459 96.8161 cv
148.462 96.8 148.465 96.7839 148.469 96.7678 cv
148.357 95.5764 148.37 95.094 147.767 93.9636 cv
147.353 93.1848 146.431 92.6887 145.562 92.6984 cv
144.271 92.7126 143.544 92.9172 142.199 93.2531 cv
139.851 93.8405 139.915 96.9421 141.681 97.9333 cv
141.678 98.5168 141.612 99.1906 141.676 99.5388 cv
141.755 99.9616 142.035 100.397 142.398 100.733 cv
142.069 100.8 141.751 100.88 141.417 100.942 cv
140.276 101.154 140.535 103.025 141.691 102.967 cv
142.303 102.937 142.901 102.935 143.503 102.924 cv
143.73 103.91 144.81 104.733 145.822 104.353 cv
147.144 103.857 147.545 103.69 148.367 102.834 cv
148.432 102.833 148.497 102.821 148.561 102.825 cv
150.292 102.949 149.811 103.036 151.07 103.991 cv
153.399 105.758 155.095 106.329 158.086 105.845 cv
162.809 105.081 167.699 103.443 172.35 102.222 cv
172.416 102.21 172.479 102.192 172.542 102.171 cv
172.57 102.164 172.599 102.155 172.627 102.148 cv
172.626 102.146 172.625 102.143 172.623 102.141 cv
172.89 102.038 173.132 101.862 173.335 101.644 cv
173.571 101.714 173.801 101.776 174.044 101.854 cv
177.4 102.936 180.738 102.507 184.228 102.757 cv
187.236 102.972 190.01 103.388 193.009 102.841 cv
197.177 102.08 201.056 100.274 204.97 98.7185 cv
205.837 98.3742 206.062 97.4787 205.718 96.8474 cv
207.654 96.7136 209.598 96.6579 211.534 96.6399 cv
211.837 97.6252 213.232 98.1428 214.193 97.6701 cv
216.654 96.4611 219.504 97.3625 222.182 97.8005 cv
223.209 98.7131 224.884 98.924 225.903 97.8474 cv
227.473 97.5578 228.926 96.9445 230.556 96.6823 cv
232.505 96.3693 232.072 92.9948 230.086 93.2067 cv
cp
f
190.798 82.2854 mo
190.053 79.32 187.794 77.3757 184.756 77.0871 cv
178.396 76.4826 173.172 81.1203 171.186 86.802 cv
170.731 88.1032 172.73 88.9113 173.392 87.7317 cv
175.252 84.4152 179.454 81.2443 183.464 81.5505 cv
187.935 81.8923 184.907 87.6252 188.161 89.5427 cv
188.499 89.7409 188.961 89.7551 189.297 89.5427 cv
191.531 88.1301 191.378 84.59 190.798 82.2854 cv
cp
.960784 1 .847059 rgb
f
235.66 108.006 mo
235.596 108.055 235.552 108.109 235.498 108.16 cv
216.848 111.124 197.658 111.138 178.83 112.073 cv
159.847 113.016 140.865 113.999 121.872 114.715 cv
83.9889 116.141 46.0783 116.15 8.19739 114.661 cv
8.04602 114.338 7.79065 114.041 7.3971 113.815 cv
-4.21814 107.117 18.0875 85.1071 22.9186 96.1272 cv
23.8981 98.362 27.0514 96.6369 26.485 94.4543 cv
27.0909 93.8864 27.3947 92.9943 26.9005 92.0529 cv
23.1144 84.8425 16.049 80.9157 17.7286 71.654 cv
19.0582 64.3239 22.9401 55.0051 29.776 51.3513 cv
37.233 47.3654 47.3195 46.9143 54.7599 51.093 cv
63.0568 55.7522 65.5836 64.571 63.8732 73.5266 cv
63.4049 75.9773 67.0416 77.0529 67.6774 74.7688 cv
69.8336 73.2483 71.9899 71.7287 74.1466 70.2082 cv
74.8175 69.7356 75.0626 69.0573 75.0221 68.4025 cv
76.1837 68.3078 77.2223 67.3869 76.6779 66.0134 cv
72.5123 55.5002 62.632 47.4187 60.7433 36.0183 cv
58.6725 23.5197 66.0939 11.0026 77.6788 6.27804 cv
89.1481 1.60079 102.131 4.36495 111.087 12.78 cv
121.418 22.488 121.95 35.3239 123.641 48.4934 cv
123.808 49.7951 124.782 50.7522 126.172 50.4221 cv
127.698 50.0598 129.224 49.698 130.749 49.3357 cv
131.533 49.1496 132.298 48.2473 132.217 47.4069 cv
131.302 37.8811 125.821 15.8103 141.63 16.2453 cv
148.036 16.4211 152.679 21.9011 154.214 27.7273 cv
156.064 34.7487 153.905 41.9157 150.933 48.2849 cv
150.387 49.4548 150.995 50.5432 151.869 51.0407 cv
152.225 51.3684 152.686 51.5769 153.189 51.5573 cv
153.451 51.5471 153.713 51.5373 153.974 51.5271 cv
154.374 52.2541 155.153 52.7902 156.183 52.6027 cv
158.106 52.2526 li
158.894 52.1096 159.653 51.133 159.575 50.3244 cv
157.707 31.1066 175.838 16.0534 194.374 21.0612 cv
214.169 26.4094 221.881 49.1677 212.617 66.6482 cv
212.384 67.0876 212.328 67.5168 212.394 67.9084 cv
212.209 68.5876 212.35 69.3591 212.887 69.8523 cv
214.341 71.1858 215.914 72.3899 217.585 73.4397 cv
218.985 74.3191 220.307 73.215 220.508 71.9489 cv
229.972 66.591 241.914 70.363 246.271 80.6643 cv
251.093 92.0642 244.321 101.229 235.66 108.006 cv
cp
248.883 76.8654 mo
242.637 65.7341 228.664 62.2136 217.932 68.8288 cv
217.455 68.4773 216.991 68.1086 216.535 67.7287 cv
226.254 48.0993 217.436 23.1877 195.438 17.2043 cv
180.508 13.1433 165.464 20.6858 158.884 33.2981 cv
158.906 30.8557 158.605 28.4045 157.861 25.9763 cv
155.818 19.3054 150.653 13.4309 143.49 12.4211 cv
137.186 11.5319 130.778 14.3728 128.132 20.3332 cv
124.803 27.8293 127.1 37.8171 128.051 45.8664 cv
127.812 45.9235 127.572 45.9802 127.333 46.0368 cv
125.682 32.6403 124.386 19.882 113.915 9.95138 cv
104.483 1.00704 90.8649 -2.37773 78.4391 1.7336 cv
66.548 5.66817 58.0455 16.0183 56.6403 28.4963 cv
54.8683 44.2282 67.0919 53.2619 72.5856 66.5124 cv
72.4342 66.571 72.2819 66.6462 72.1276 66.7546 cv
70.861 67.6472 69.5948 68.5402 68.3282 69.4328 cv
68.6222 61.8728 66.2076 54.6623 59.839 49.6911 cv
51.6989 43.3376 40.3795 42.8742 30.9576 46.4616 cv
21.816 49.9426 17.4117 58.425 14.694 67.3586 cv
13.3307 71.84 12.7516 76.739 14.5133 81.195 cv
15.6783 84.1413 17.7643 86.5017 19.7765 88.9138 cv
8.65784 87.8674 -8.38513 108.414 4.77552 116.895 cv
4.9137 117.765 5.547 118.562 6.67493 118.608 cv
45.7189 120.184 84.7911 120.148 123.836 118.639 cv
142.829 117.905 161.811 116.919 180.794 115.976 cv
199.599 115.041 218.688 114.943 237.303 111.904 cv
238.13 111.769 238.567 111.266 238.7 110.666 cv
244.082 106.44 248.922 101.971 250.883 95.1897 cv
252.636 89.132 251.975 82.3767 248.883 76.8654 cv
cp
.25098 .356863 .0823529 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (rain_1.eps)
%%CreationDate: 3/12/2018 2:11 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bFmN4Qa8CBamZ>=,HC2CMS]8e`0M(,M1aMbAZD9TA2dO.BeCIf7!*5mA.Ub.+1/oXLs6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7b]g01o!O07nD[09Yq=0Dr+<Ie8hrr:aj=^]"00`-@Q*_o^)%n\4ONWu<1c\n]V/>^CejoS46l0Al]qorG""
%hg^-#p&*A+msi&5r9_VLh63Gu/&-A8qs*nNo2gFtm@QUgqA6^)qNpI4RqL&cDdL,+n`7qI?S-(&?h<9,qHg=f)rU1$044bMKf"4'
%qrWmNS_T^<r;0jfk=8,pO.ZFCmr,shpALK4:Yn3\p%!V2%&[G31@)'W]`%8Tr^(Mro:;**Vt/$enb,aSIX(i]T=J1PP/"a,fabLd
%5Bag?%P?T0W[n[$4;L$N?`oEDIXL,D^\+tGJ&C1B0'o;rkBF[&iYc&uaNH1_q6d[>gmn\CjemJto\^g/?[VVGadZKT_]7s,_\i7:
%Y+c?WKr0<mN/(a#QIN'X.l,C!eZ2f</8)S8<Jn/;HrX[7G1AYK[m*'grThdRs8DZ52n,u-N3?U'q=<5=-Y)D)'>Z+ZkLrq89<d=R
%reK[GYQ*kKZT$=5R;G[=l.<,Q\U?*DYhnR*q%Jede-Z&&46$iI?@R>!7V);Eo,fY[5Mt"fs6_g1]_L$@^YM4)SNZ&Chqc$E_lNgR
%2obTXX.6M<:0arRr9W3=g::2KY0"0-TZSrJT;KHmpW(NtX8W[UMVj9+rq?#kDkF`@Gmi&M[<Rns?bCj]bpplTn#H@/5Nf%AIp2k^
%D_6D,k0<;:rYa"2IJEIl.@.#AIu-[f?@Hs?o`CoZ4oW!Yl0qS_b4A]lg2GSmn98o2+25("@Dg^3GpO7hH\i\+Ie4TX?2aVDc[V$`
%ro3UO+27X6b<N[dr91'1hn8fPgYK')]tE1c06d?]cZVNagQU6-rqbpQ?f[ior9!^p3oR964T"PZn$qVKJ%:"!oZu^0[FUDLnc-+I
%qW?=DOihTc^\sN!/cWUlTO)ekGl?^&I'NTrSF_g]b,Du@h_3UPTDcM8\R'B=]_m'XD*>T1nb2dZn"q&iGn7IGn")ahq;h54Zp%)H
%b&<lmW33VJM77F&pn2tkBR_Dc_RjUhjddbm^O"8%T"Om*//>WI^\N?6?2qIL3PIu;*cf<=PNU8aIJ`l_GCP)8FLQbu_tSZ;rSc;-
%kMttHIQsD\s,Ok2Pn0&9^V0E/=3mLes'e*&DY]jEn?]%=Dnl5)pMXpk2QE/BY@%;&V=r6kYHS\c5<tI2?LqKAs0)=,ERgm5aY3Z=
%4lskbm$UMmf`#VJa.!#K5,Ae\l'l=[&FZ%^Da!:,^HN6hrMsT2nrAQaDZ8+kQXW&C^AQsCS(i('^3];im*a^VIt$tE/S@gCo?6fm
%l"aGRk&p!J0AaF;\[^D/S58t"lR1RPP;VspU:S<sOY5H1jI`p.UUR]cjY<+VA^q:&rATcZrU]&>b>n,@q1-4?Z(S>`48`T.Y4=4P
%jop7,`Ot]&^J%;$Nuu?s:VP]#r^8]5?=qf-!t.J7ZKq8;oipeL%Us&tZ#>p3pOP3logdkNs8>I$8bs\cP!8_*507U(>O7EO`-.id
%7hC1E_s?c_hu:O]\$)F:r:UmMGh0/8^1@VbAc+-Uls.Eb=ps3IDu<+b_,4HXoc[1cQF8bXe0X;XHMltf?RIknFh%.s:6)0Aj>aSr
%]5IDC/[s5=$dCUXa&5_+=SGgE;+o.k<aT.C.0hk:&[<mt`"IsN2f]o"fOq``Xr0GQ`uMCO_rW0tksg\33m)G5HTC.aWMUk08l6(j
%A4@g\Dr`msK,jH^if_A-@`A^/aPl.lQZ*U5EZDt_%f)XA6C";KGp#kFZ1@J+"mMV_p_t8%3KF(]a'OdA0-BGZ065tsPF#L#ku@Iu
%E\'3*NB>7%P[c?e[[0aOY836KEb(NtLe]"D$_1F=j>\_]3=bUm^Ket0GZ6[YO0h;:Jj/2aU]6gY,;83!iMZ_HPrJa2B.a)7hr'P9
%-iQ+l,3?QEq>Z'efDE8Z\_ag/%-YFHOnK[1YRbcI9CTeWEh)2MaFVf/0WqIt%4"FH$sbHj6g8;DEZ@Ms%W^JqLl$ok,mZ9%;M:+G
%OlIjqFHC!.H+L0R&W_fiQ#"8+M0+T%6,Mn2;KaN[q/_Ythol%,bL,BHQ2`N.rrmuVd1H-F(lknX6[SG"O\"J'%[G%dr7U-'LKkUW
%b:Je_g$I,nq/dsU2^Y6n,BDL.BDKJ1n$o,+q8h!,qrQlSOfp=![s'23QlqRGA@PBC&ID7]D23'EEK[jGUO6+#qfk_+$8Q%ibckS<
%anGu7l6<o\a>_OG60<$L^-%9T3gnN$`o:/kkXNQBaS6Lt#fe9?.3fjDjJthgiVIeI,;S7I@Z!_([E-ihAC&@3N7(]p#.GT_LSK[?
%3sOrfI$=m*:H`#+pW);kmO6O5S.^m1.\_Bp:P[Cr%fNr#.HEnu?neNY7!./-IQEKJVf<\:3XZ/u6Gq-#&4)\X#Z[$`P:rc:60PI?
%p`P5[MBhQ&:shQF"H%&JS3W#T58%tUca@l7SjIn%]"Gk\VY]qT%Zs?u103lER0iZA>F-@A1>T1pj>H[l'.rQ^N&^Jc-Xt$s3'$`'
%WgL4B9PJZ'-@E$m:'VY&Fu;>X>*R#a/jQnhEB;kpDP2Dg!(>;X+@J5Q%0Zr&4oqi4K7ODjkk?<JFFf_kr?s1O%$,(/%M&b7\d9H1
%_h=@[LC+-kgc0%LdDf\;ADZ1I@rM.qIJV#IPlX/U;lQMoT]#?lGT8=Pbm8`TAO(nbienn@>:pMQ_VEMgkVu]n%\0=baq>a)mHQ[)
%0sNIL';mmgI"@<O$G\poW>H+E&LYX:</4!UPR,hB=\#Dmn6fL+W,SDS)V*3+$fI04l,4*5adZj;Ued4ZU2oSjf-PC%_(LGJ*!XRE
%O@1R!8tsDf/<)!;6R)JjaB9k%<6fMuP1`>q,iKk$E@nZ<K[%rI;5D6j*%`@5-P;Ys8D1C5[`YL\l1ue@M1oX%@Y5t=Di79AMq&t<
%'Y1;)/h/5o)A\QQ/gj)S'/Mukq#VBV#;\`OLs0H:Q4J7>kq+G-f?tP%Maijn%U:^a@W@Kl_'4HL+`hYMV.&>GE9(JIc"3PYH,j?d
%3#X.l1JFsr/BK_AJk2Z#2&dma;'^<\PGFX=&o!Fe2+Y[8J3gJ"Es0KR1/l-=#Z:1\9ohoQ,FQ[4bg\VpFGHR;YR5Dm2MSsbK"Gn*
%m^a9,KMd`E?+0iYh#tB$qL@RceEHmfRj9BK.=R^El8R2$Oqge=859bf+k!1-ns)$a!LTo@\/0ZtC50?,^kZ4qSdrP#]mTY:`U,Ur
%Dlj>Z$9-mP]A,SmB:rHQ?L3:i>-#ch5DUA(@O":g?a(.QU6T.76kQXM_KHp-65Hi]MhmtC?>q+$8]4_qM?rm;2M7pUKrWtPR\B"'
%;Lpa[%TJdh/>4C8Q"-L[gf#5bqXQ/#[4f;+q"BDc??H(-RnV@T2+LA0'mCWI:8X>V3G/`'.QURPWpE^@WPU/QmB)8Ls6TCigI;od
%=,-$\ZK%f(=M1QL>s:XVr1,';4Q8Log)a4gpDs(dUYL@?*Uil2rNJZWq!bWE6OpZeK?ei=nbJ4>SMBpu:39+$f?q"K8bC.LIVfXs
%9Jt""(+AA^:G8M?],Y?a]9*7LaASA(@76lHO<73?"F;AJ7NY>f1[e`*<>ot+)KI4j)q?p)3i>mAcr?4J\smGp#$TVBX')kQ-CGc_
%C5ra5Cbirm$Aa_rRjiMch#T=N\hOuE(gFDtCm+Id9ubko)/(u>j#G>qX;c#&cu`KH9Aq3,kNRJu7sN2hc]3,1TQVRbFPfq:I+7hN
%44a-gg=m.Kj#bP2hrDOsI.33PnIts#kIBQa1s2UiWe`[J>@8@eZ<$\K-XmOB5"T3O=.+ZG>/P(e0@PcgSS5K3=tO\5*M(/?7rcs)
%iY":n#.kh!^IIHKA_&?_>Sn"6k+0f)8f1`#+U2=W*G1ZrbGdRK6as";;%%%@*`ajK>X-UaA`Ed!@39VTF'$DPCRU7&;*/NfFgcVZ
%9ESQ[c8:SjJe-=&pE,TrOuqON?>i'rf4j^)H676V^>luZ*WJk'=(d9m!<S<QO"4.uWBRp0B)jpk%8Rc:T=QVCG&*$Q*5l;a%Hg0t
%_.K^sEJIs]H1T7cC-(!Ah/X.S%#QWpY/;MF9_pA<hnao]"Ag6-LA"P"XLHPYJO9F)l\=>`gem\`Zs9<fed,e`]+Mo3<pO'rTlEGq
%OVja+0"$L77hpYJogcEO@YLg`]#NrT]T6c.@-3;?Seo'lOU:efX(O;::9t24oj?"HgZ_3Z@Jh)u*2h!#)HjUqGXcHiHGkRYElSEU
%7f`<MLYVF9kPePoA(N+f2`JdH]e"p"-Ja=oGIfdTAa#UWL*T^E*H-s.&J7:&q&#0a;!@GR-O?.IJ3&:SJ3Fp#lV,Y=O=($(^mtHe
%($\bko>k%%Jt*0f)Sila2\"ITMkYin%tQVdE0JZ2$uQurq=kQ"N^B6VjA_LFJPLn[($no0F)Oq.9$e6UVoE2@7UnkW!<@6XQ0iSE
%UW$j>KL;qCD-2b*=IbZfA[F?"rUDkcemh6Nea=-`"am=?T3<7Il)LVM<-90;m2eJ1;;Q,ohXu]R&N7]*O'<.*j+n:c%sN*@EI-qj
%Ph"ghi8a<g6gj`BoBq19/f\oP#G:m#kDhJ[T/Fc(NUg5II+B^<lAhJob%H_)=egAq.%fpfVGTf4o(5/us7c&uA<'!=.9[=uQO0gW
%nsis&W-^!LQeC@6AC4`YbCroL:NJb=k>@&s!n%5fd;@nUB?gD!m&llVlpAA-DG!p=oXfQHOaA@GGCI(0^6Qr#kJ-?7Csih`_oLpR
%\9mcQga9R6esQC9@f!)\)FjSS)Z(E*WgXPG7rK!YS=(0t*o&O4-D*MPIe%aGrbrj$.`d6kbMUX!ZBWui6rd87$;i2]Os4\s;V[^=
%Eq_4'L%80t:D6cd7lh=P,qCMGJs?`./p6\96M?b.pN#sD&b1B5e87\RVn6Ska,g2U:YU5g@"Pn5H%JTaf`]tRgf2/)7g?8n#]h<9
%Mm0^$(b<^[DIIN>%334?,%efF!HEdr,%4a\FU@:fmnj,Ab4*q$]Li<I&[FI[;ctYJ<CVN(Lp.SQ0Mh0r'=^L+M';8pN&7#5kr"dI
%C)MYT^hg9g<R"Z0!JG$YM^GL#Oeo'<WX>9QN9jNg:Yk012Tnb\RAhR%^*i'?C49pD:^r_aMB(/,9=5WaX>m?]SF!c5SCPZ@:5^*(
%GFa=+E?&[<)J^tkp8E1q-?msEfD4(W_AA9nKu8B#NgG34mQ9jCbgo.OK(Co#i'T;CcORMGS[OS@52YmYYM98k1i/1[;`/uUA/l&M
%CPXDq+\.apN_J889`(dfBac_QHK:_PFBj,O^!bRo1=1,!&co=QUcikKBkSg;__+)PLO%K!Am>"/SMUr^26U1^"?jp:,4h_+X5Fm;
%/3-5lUn`[i/SolQJYjJ8pELf@0U%7)H^G`QChEdG^]FZK!F'Td0OU!r2\Pq"#HKKnVu1l]F)p"-P_XbP5pF^24WhH%jS,bRY5M<%
%VNIXW7ifVgWAgSDs*L,_Au0OS4bi*h25hI?<0#"[No@hemlf)\N\#Cu%mJ-iURiQJa#e-V3SM(U\`3e;HCs4^pDnUsbjqalV<]_G
%`16kF#%$jO)-b8n29Wbtpn'+PJ'ICoDSKk?3P5;7\c"%g'W0<rdot+@&R+aok<Ca#0*+]rXJC.A"tGHm[tU*m6)>&?jT-fIiM8P3
%P3D9J9%j><QU%?Ua#S5uJOX\#]9(DI(>T3*SH2"I5qqM25g;G07]pS=\`6hNWt.D:V1\3oLE63]+a:T^2]mADB>3CDOF<4%\DCcH
%2)gHG_$=_E.b8lu^,[cS3ZhL]KK:B\6:)-E<Zk\;hFUD-d-@B4HXrC3/8&7hNo$PnkjbE0<C\u8.p[)YNdBeaY<D1I8HEda^dV&(
%4??8,W`H">]#J'NH=!7JRC]0Te*4M=p$j9-+]biFA4uU3$EEid&(aLiBlS9(U6'+N/[UNBV?[lAHNVfhl9EaKH?<5g)\$R(b$)3W
%B(=8Z'5a]$N-.2(FQBbQSK2p'jGr39iU8qb3t?#lLE=t3mlVXUHJ!LdSDJ\8*?T7Oq],X(n$pb%/.EA3K6#pdk.=Z^Um[YV@NDu"
%3`bS,j:a]M"18^\L.7^:N'J_hGjq)8OW"SM16t7+q#c=1;-t>H9rlRV26/,EmFT3Yb051SA5c%C"0p^)Bu`!/C]S;4T;^q5e9-NV
%Y?HpKq@;>NTX$9o6RKQ]_o/!;4i6\^<oO*!K.LCA"nZ;!LpMko-$P_TkZ3e4QJQq($[fB3H(2)bg4ncZ9UCX0/sf8f/ZnSEE:rqG
%a7>=e(OBf\iHlQBG9(_EGFnEWj*6$o*Ug@`h!t3#mrQ-;.#kJ:=c;U_MG^W1K"$?[V.O'7_ttjj5;@,Z/A2U3ps;)r6*H[$j'C+(
%G7Hq7HV.J<S]mHO_LAann1^,>N=lTPA2e/_'Q[+T#V8B]Nfo9:=iIhbU).lf$S:"2?EpD^.#M*o31!e'.H;<m's<m'beKp\H/b)0
%#5YeQ(AW=4d92'K7kEC4@N"F(!NS&IZ@BLZb%1Vl34PM?AkbD0U`hMZS$r'R\3Mj.)[:4.,W_%hk*f=.-ssWL]YJ!j*n3Pd"\0jY
%Jdkr',)(70`(E+sn-D4*&VJPhd/\+_=rs6m4c:J&&2+g5B-d9`."BrK8F[@h=75=t6!84?Qb,KTqf:*R<(%sT4>Y"'NdBk:GE.Z&
%/pFs=U>IiVheemQnNG)Q72Qe'/GsKC;s\0GkhZ`RDNYI(9TIXOUKL&uRJRFLB^XD%Rn^1r6l0_X@VUY>PW'9BHC/$Xa=i^E=__8c
%PNjt5W,ng^21,VPImNVsReKSCEDGem2,^!jUQ&Y%_f]!7Yn5j]+hKi?m8dDYRu(#i&um!`1.EL0!n]%NW^=lIT$%n8;rX2)6lL]^
%>;Rt)C,@XML;.Vb*_*,;o%fZq`2G-"6Zu3%?N)f)aG[I/71u]DGnjb%XD11Q)rd0imDEjOF:h1==?Bf=m]iV=b=re-UO,0rbG7eF
%YW.-j%6f5`]dJ9rn&2D"`3Vs"qZP@31T&OagL(ZI7(TXRk&Hqe+rl"teS.A30qgWrGW)6R5#%M0)4>7*e4RW2$'PV#qCUkO9D;Ri
%01CfVB9/j8+d[S;e[LnPcoMKe@3UZ?-C1HlBQ^,hoWk?)jEcq:ds;j:RN7T/@)\LJ8"><fctron5P0NmcWYKuVSfJQ_lta8QWAcG
%i#]lmTOkO.jGqF>A(Y8H,24/W%I0%sV]U]'*"QYH\As'rLdUVjdZ04\frFVPN(9.$H?2^GJME4e$+3I)h/hA7g,/JW4g6<1,,-'m
%&<CGB<"^[,;V@W%U"<neW9jZ!&#*:QD@%R]PR/n0ojG4$-;C3jqrL@p7#aDZ'9Pa$3Y)hH-tOQ21dG)P:#-L^JsHj^)ZYKr:aj$9
%EC4PEbh@o\!8W&]c\&=?p\su9a+)ujr&]0`TZR`+CGZgbSk);J_ue#=3)GK.7T:!<$U`>/EDR$bZB?Q@6RF[X]9im*6PY8#K`hM0
%A?.M@3mo7TXE9mCZ(K)A<rTXs'A:@1d119L\H@b0NGji41T!1/*pA<g<e!2e9uo7@^<Ok_GF*O!&,*Of$@26r;$R,Z*283h::g>0
%n>t5#>(:"_oDQG0>-.$[R"u2(Hf;"9?LKts_KbhM#W@c1e$AiFqhq0=]+bVH*9P:j_F*cOH&>S?\g"0qU$/B5\nZ(rLpgrLBeWV@
%]DY7;^Qe9/O)/!q&N&&MEgNObMAgC#(/i2;Hd54/^!i)9N?oP.iTs[)(&H8A-DkeDEKkpnUg0aA[8:JiC;kr=dkU%#S-Kig@@0c^
%k<);Boj7*AT6b0crOM5?V`V_t9J3,6LO%s$a1G[S7GH(IG>`4<hsKCC"%ppSDS5:[9BOXXiuTc4,7`LK%19Al.shY2f[JTd6I0G!
%gSE+P!VZX7<L16m9R*+f.SjchK8[l3nQ*Ak19nb;<_baqg9.RMT6\>2VblH?J9HhZSC>g,.%M$umQ:A`R*sm;$#'&Xna2j"(9@a5
%6lS'qZtmgfH;&D>n$+7HSL+8Ml7YJ4CF\&.82_iG.IO@QhSG"`kChc_Se-j58\mQ"jhB7&FI!iX9b3g.JoOmjnCuBCmj87rRh0rp
%.JVb!@&)A&cuC3Xp`g=+EQk&7bC,`tmVQq44=GG5'K@lfh@97^_7^3W]R.M5F#`>:*HT/>rg@VSR?_U3E-BN$ZfN.[.bJgnUN=GN
%iV^k>2_`$pS:q@%TY^H/0iCDT*&jP,V;lD,J8[B-[a;qHIdT)OmPWtGLED-blN.4[@>A9sTCBW:cU*=h_/rdVetEV$&VTGa:=3qN
%gim_g;%L'#KNC;2B%$>+iXOB&eEGcAABHeVoIb.R];^_WOr*jO]T[lV<q[;%8t(nr2lW-Bg1A#<'?"bo7c$L6r=H:":Otpkfh1?.
%n":M>'0@D52QMYA:j[Gr7>DoKY'c'42_!-t*4]2Ap#5YL$84+p*,Dihc7O,X><ZH2%74]8Y.[<k]Vb"IY5_T<h#!!P\29gHR&sse
%M7N?B2VjaaUsrXp,3M"e;e,H)O`!ac_f=&7M1KM#en=>`h4,1;!#aFfeE@'sGs_q9<?!l\Me6n3\aMD<2Ve6fmX'EOq7_2N^mT3o
%F9H.F,oH\RQHo-2)>-8kpG"`eI7dG9nlq]*5L',g8`RORTQN6+J%B_$o<1-#6N<>Z[-FJ6cI4'RO8K@\94">omdUn*5u7gdQ'5+W
%3s.\//ij5cXMqMl3B9sRpe-Q,QXo5^5\Wof,rC+V@euj;o<C),>Yb,$UbRqZN3jS5Eh:H4Kid.H"ZfCUT2'T8f5RdYQJJ'9NQCu*
%`GQ`c3B.G_DY22lQJp'cl_\"7/FL'ff4H!;1C?UFZ=Y<<a[=>h-^Z>AHKK4SN8rA6>+jOYE(TdK?D*\r7rGV3\]B)"?Eq"L=[e&I
%p+5FT!Gn1b\]F(<09RacN)ZZ3_]a#`UIFh%6$*_t1O;]S_qT.hs$V,cGCOr#?6W+>k/+Jk'Ifp"E\hFh9ju+J(:#@rRJ*ePGH^:C
%+M@bC`r,A%;>.8\HFRCWXa=3QV&I#UUR+eb5tSMg<HR5mpV!]=oIRGgeS4AjFjO9&i?3NP,29]XeJ]@c/)UW<#[G/GNYcZ"/ZLR9
%.P%5[4QZ+.Ni*::-'#YB>.Ygmb0;>_:7$j17j^[#T:.]a'PeK'2M^9CKAsW3$#I%*Ea[2NaEs!?Q6WSggbE`-Epll_E_HtAgi;YC
%hOb1fJ'0QH1<LUJ(VHL@=d!hdXBs2<Q$Dd.cX+d#m5QV<Ku(3D+__o0$p3g6e%f.50sut[q)b1E1i/?o%P%pAQ((`?&[k>f^NSB+
%T$0H<*8&49"K[,TmqUM95URq,12+2>,YHP?K9^eE%',t*Fi!gOBdr>M/E2lh@[=WCDh>Z(<gTZ5/$U#`m.btLjlUP^\0pb_6>>^I
%D*3R8*P!=sni2\SaBf9'(M:GB,OWuCT:BR@APmU#p0k^V,tASF"M%IiY2-YmUu&pn@2le;s7>2ndJ"3C(+RdXZY7&-n).S%iXTS2
%M31s4"UFCH0)o$h04-R012OYWq_AfG:8(q4\p2kP9WPq8ThjN=&5jq"K\+S8H"n9_X_p9ZMsIN'mSa[IABG;^a:sP2<4<MjpFRfq
%\&"K!Wd1jQQ`Fi:HMlu9.%p#@G.oCoVi<oWFp6Xe9aC"S/22%W5M[6e]\2XMGA4r7KfIZn*W#I7]lLi*M_f:%dl4X:2ll1Ic<(65
%XmdB&fTIkZF=fJYs#SDJQ]A1q%*Qb'A<rB8H1]^a^tSY8@Ii^<W`$l(iTI&sP0C/u9]]jr*Z`:MF`%O1c!dD*O>M`U7#E=TB.HQ/
%Gpg2FpfYk6Fm$<q]GUb8U[Qn$U_p;P]&VSY&]&Y"\S3!0Ju`Zjl7-#E<,Epronld"rcOD9h0u+legashN-1OB1A&jjd9&cL\#g`u
%OOdY*2-DW@D<CJ1$LToT2tdg?`+$!3%\UqKPU7=i*LYS+*C_Iae@dS@e;\1r2o0NEQKqYSHVcX"l*L;l$2i$PlYNr2j)A]/.6Y0G
%!\q=M@%c\K%"/9@TO:P6hI"U@!$8`!9>>_)$E&uZj3Eqgms`spb>56]]:8'>2ccYfP_0,epMW.m6huT,hCSi(Q.5Me"4S]'2;:RU
%`k(h9CZ)5Ag7?bIN@b;0I.=Ya>I>`,"#kLHA+M#.RKCs&Y&?1))h3c%q<eYi\k/tY9:_;GMQ9T#/'Ebf+d.B[EcpA6&\0MNXoUI+
%jFE5!];sGP-$,?iaPJsNa!pr&i5__7;_'u67s/IMb"bHJ=!>I5@!F?c.8TpG]3`d0?8<i,UNaDA.pm+njH&*hEot=PmJ%!2]q"i0
%'Fk&h]3]MhO+\OD_q`Zl[1@p.)?GS/'fKA!"d=e(Q%_!oS>cge8/bGC9]s)`)W!h&+:[+7p63T#Ud8PNP=bu,\DC:25+,*s#gQp>
%O5`9^o17/:3KGNFTQNZcq)sf'1od$J5*,"H=j`s])Vo[dk?Vug&Y@$f*b?:'Yu$``rH9%5&q.,?oA\OAQ6do3X;u`=kAaj!INJB3
%o]KM!kODW&Rk=fL'\jL(Sg@g2"\2*]A3jbcY`X]D,$(,aP(L\S4J@BO6br)#b7_A[CKk%;L1OWNs*W]sqi83uWTog;#S</-G^'@$
%:rn""[su0Y52*!N>Zm<O*Of@)g`>&EY3RtZf+fOTglESZ"[GL-cLA#!c<?oWE,AaL-Ze]CGO@+$NE`//:2X[PSa"i.l1a5/:K,?b
%O1h(c"g<Om.o<JhC54lZh5D[TSMtW`DIG::B2c&Rq;8UQV7tXZFuKt\kP8_=]NlHQ:DM%i^?4M0oA,Fs;#5WU:3n"ZJA`hAX)&e&
%KA8t"<G**)qJPWRXm`a5iVJQN_o5.[]Wgh-60UHsA#in)er:&b,MRF3her=?V_bcD3ks_87ok]6X@Kbg3PXhP?!XYB];t1D>p@2%
%U9khS'u_29)A"5`M8+/2;RE@cQ&C4TO1>]WTW(B#j'9i7qW5c_Z>rg-Q1rX94a]3+P[0Ji'0:G#8RR#GlDEAh4]t(K/`\b+9j9)B
%&2eSQUTQGi;jR"938.R\BjrKlZ*YQH>JZ2@mFf2/Z(')CZOotH1pQJu4b8Xf5`Y^JE]eIe@KITOqTa?sm<LYWGou?0`Gn<\qHe+s
%[HD]D\4Zg5?U<!3!'FWM:445"8Jc<.EsPTc=+1@\hnJ5AX,=Ce;0$$%F.(^I.p^;9T/59KEnha$RYmAB;"=Y!/tW0,Bg_>M_qV4[
%D):$]BR?n>TBkK4=uL^>g>5HT/8'CWiTlK99i0:CP.\"Lr!1B_j]&HUCMY2FZUCmV[8tscJunDGXj\;IQpMf0.iu,V%p^C9/JIU0
%2tqo/LeQHm\b?:lQLj%T$;_Zq]&?>e4QsDNO%U,6GFQhj=FFh3CYRJ;db`@N&HU&OIbYt-Z<O)4@k!bHFNY\cB,^5JkjIHUVjAOL
%,Db5n%G[-,cd_`F!EXGJI,3I4Y](5eR@^pH.<[C^bQ^(IcdG2gko$F9girCF'_c=WPfSgWRMA!KF"j(n"Xq]a0F1L0cN*'>JFX]\
%j_("V//+Xeij2=k9d]jV!Qon?p\aS7<Q/g\`V\h[YDM/3J&;M*r=$DR,%;PQN$!@S06o[$$"p/D9)'>piJ9Ro;6Vb]Cp5kIs$:KD
%/eWBWofhS[99X^p9/#AjIE:Llo&RENGoq'PIr\5+7IJ9?=Z<@\,pao1/RENm]C;0!,uUAnDXTUEro]oG]t+)sh>[56VglNVg\gq)
%#5/o:qi$)S`kXcJ@%T0XcPY;I%.#bSp=ZqRN-BZ8M9dsI=XH=B@%Rc.PErD%oBPH+?9`f4k1Rpr^\D8]e`YgPIe9,upq*36qq[Gp
%Df/ps'JFq8_m`G@jjbk@nGTOPkL3EC^LnpbHkl5cG;6M+-M"GMfj3\FSlEAm[Jo?MJ&Qned!o/CipMkWdsqB^o(W/9XacURf_p-j
%ci7e6IIih-rLR5FoOmhYmp;[_c3&:*g,+jLqpjgUpG?f,ne1usO4USm*1oBBoBb#N-a3QYqmgT?nrNZLYFb33HMpM&TW_/K4F?\b
%p"0'g:]DWpq"5`#4hpslpU<rUr+u*<\DmP,s,E*>Da3GkNr%kPm5pK/jrbMad^$bskWXmOB18$gV5&K6DYiB,]uRQ#A#NI;.=()C
%\4X;4l_RF\5RAsc!.91Nab790:b(dY]+R,g#']/qdo2bRp:I5KjWY_1.[soZ;3koGG@$H>aH^67m6[jTW,11uR'0*iBm7@hBQf<h
%>&H"bTI)\(>fft=dLrbE1VC*UWu?#BQ>e-6Lt>9g+'eUeDr9Q>kQnp:%<3+!q/m'H;(UJXO*Y!@$CG/E?NospG%dftll%j4Woq-Z
%[9D<b!&=K%IT<Dnm:sHWCqP$.rO8h1^*DXCE!<D8?,`3Xp?VWV&tQD1nLAnX@?`C&+eo&Z]_#XEb+`[ui+pWO$S-\ncmic9Vo_F^
%nnYeLF0S8g]QRQT!aa`V?RO06o$-`s)5kRqam4aV8#4u']),+3fh9pBD>)s:aEd>_98spbN&M6p!?sciAn&-65!g[NQ1'pCY@=SX
%"9].Z=QCK6("&%R1HNH+8KNUJ2UqCl(X!(k/`K4g)2fnOC%:b?c?_RFQd^OuLVLndd*3VQ;d(@p\&D4SJm5?/d>pr\Q"]Zac$H@J
%e,ge)Mi7[?b$qi@fuJQ@'9SJmK'"9G\-o-=M;EB&@3>:5<!"['OE\<3>,AD)H_e`G`!<4TU[-tCXk0V$A?d1MQoB8#PBDU3c".cJ
%$EBY!3AOJ0H0b-6g.#V&Ol^L/Ias_YC`1[h`LX:u:I0ZG5dk7@b2&5u9k7#?(G0<VD)B=+hS21q:hI'lkdM+7b'?+n?hoG3@?,ZS
%qpm#jBiiEd2TPVn(A+ZOM%$)CGA<ECPR3ZFcKobe9);#g>c)Z8,(]NubV#<59dLgh"`AjU%A[8-1(aM:qN)C+J5WXM8k7"$GYopD
%a3k;77[j:@Qld/54=O@?,k),6-,n<b+r[ai+6RYZ`%mIk^nifZ@Xq]8U4\u"?>$/t&Hdir'.#DV7$Z&^=*)ge8]1\&&?):u7;Nk6
%L&<FsWje.VUgNA*+'^;!>rY)EeU^gD+qZ-+K>^Q@ed^'59`8'J>1/fofV1XMjq2H'Kj@)B@sSlP)DS_"9g)f[5?+(mFP7_(r#RGq
%CfFEH9@+I%$$oA<nf5?m2k+,['F]fHK!4C>aqb5>1mLK)Q`^?QMoLFiQbSd#0,$5%V([EOTag&eCoO/7ouk/@VC0N1Lq+r^@Ybib
%GBm;*fs=+JTuJCUAGMKr$<nrY*Q!]5kWs2b.i1/C1:^AM!t6tC8ElJ`(%Re;Jlb2qG'JuX(<>j-+i_2`Dh&!!/QGigIUtDhJVB>T
%()\kqA"66%dR7J:2IumMm%#!$TKU)IZ@YB/-;6pg+\p,jrWLVbrT2C2+a>cY7CnC@,2f0CP'jTk@YmF0Hs`4Tq&Zf=jV_28$LSb8
%7T@#iAgp4$*<B=SO3Zs+G.S0+%Ce7S`MEg8\&EZZB4S)r1?q[4V'>#Aa!/hXQ&cKo=Ct=E3$_asm@a\5?'M!f.7:26(#ZqLrZ+BR
%fM]!<TLH8o["pF1R=f(.!`1Qu*<gTuX'In2EYq9<-PN@V78%]@j@qBtR._S*A2m!rpuP/3B3EQ;`*ehBB`!<2EH*?o,a("*ZF,K$
%)]^;i?0l=H*-:h:p]t1EUgG#c7o!2p`->,b9-&<pp(J.;LOE.`jj?s<D"FB0>/5@(>KF.>Zs\%D"poTX`Y^)Gb@f$G&SHAkQ56F7
%XBd1aCM`OadY1921gs`T1b[jdmEh9lYfrSnE<IT#i*hI<oj_tVIHbP<p:aO.86R/hbE;sED(FF_"^2RRQFD(plak(^?!>+n*7mA3
%m%bpBq#XJi&[Mpu,&=*X0&e6N#@n5FAgY5"_+nuK3AAX<L^[!#Dh-4IZ#.-OFH#q)g^a'N0T`][>n,iBb.3R.f4g'R>p:p9.Dp@U
%fKc$</?;BE_U=qjT@ge9a>o31!4u8q:UE1LO._CYAeDfUcjc6K,6Q1OJRLS8X=Z-D@J%LDk`t_rDBm>MHooqJ[Ug&Y.l#jj<R(<?
%+8^nkMJeZ`Q`f9q<%*.ir^FgQ,u;-+Q%BdTG.<!g/E&U?mmW[V.4MX8Rs=>k$lO)R4)E"riMk2jV(71aeTu0g`+:pYmOLrjGPIQ;
%ON=1[l7a=\ZJac'3ks#QX)G@O_h-`5A::FhK?B@:=ENY$H[#kEA'/f00[iFee^t\7/ik*7/HaNk?UZN?U<@@dAMk3D8E@t!JHhkf
%dTEqUA#i:@S5uj`'qN2cLXI@bV/hTP8Q*1'L/TA@EE#edY!u('=pfQ*f7gsbO,t.2lf4[==',%*=B70fAVem,a\L*sYBh9,7+\-L
%iJGBDWj9iHc)$*X-(^>.@ZkfUj<Vi(7A%bK3B+N2dV4[m2<E@]._W5UV+38U]Z?GJLe;6:$+@3o`HRY=`l'Oa>b'$L#dXiH&d=Ss
%Vt'5=F?YN;[EDrndDEq#_p%(Rc8YWD+pB*&C/."*HIjf][Xm^g/t1dd>gXm\"u2[q:gbV?Xq"Hb@!1dm&"1[W)iA`9Mdf8<Z?5aL
%7l0cW^1Bmh:4u%`:R;g>>3HtP3(.W-LM#!rOl+:P7$.j7%s"Z'&f_[j#g_580'=,@d-1@InUc6\"fD9hA&IdP`:Bm5#j!jpH5[Z]
%3S[<dBs_edqqh#BH/YC`__6K8"a4dK8&q7hrpe/jYFiN+G5'Jarqbm.+("mEeXIpGq&HnH'Wlls2]>68H*T%L"W/B#g'o7"+tSTB
%T,Asm?SNUq4Cqc\X1C-s@HWIp-'"IP7Y5*%O^B5h16@4P!!^s%NlnVB2/.0^\aXR:r[QJZfGcS#`5HTDV.)(^3X6OG`7(lj6j'Js
%iPgE3e5X<m(33WdAc&$j^.\L\5CLtlD*TDMe@@'tW`'Zi=\+acZ<aN^>ms6?+B7SKFfaM>]]a-\b(O`<&7D3)Q`G0t=&\ADg9>TC
%B`>`5b&UQ(-]5Ee)2^d<BTe'B9a'5Yi\#6PZOb2gW&9]G?o[.!)*B,QiW-lR-u`(XKKZh\'C?,3$JRpl@U4WS&/.,X$_0/cM/I1W
%[8a#)i6.,OA-,>HA\O%DS(Y<n?:1fg/irJX$J%5MMbAohZ);19TWeDa*%_.6r9t6M$nk53L^'G/]bsdW"VSUDnPm:7`-b`pXZV$F
%.c9"U@Ia`sU=u>RY't,(W0:RAYE>q)fTu/8ad??hE*8].<Jp#$,sa!>aYC-RF7tX?'Pg;5Po.#U"K]:5<gZ\6$*;"J4Iq(M"ku@j
%Dj\b0?$.\0-LW[:^lZd`n`#Kb(bW$)BN]X@TIg\^)cW9EHBhflCY\tW_H<SFP4YH+8>ihN\B)ao(6%I:^ug0d!\GH6J/0kk,$TT)
%THTTJl-SeTX7I/B\AqG^p]Lda["p@]CVL\eLpHNueXqn3b2Cf4WW/p#V.28T\cuA0]0+7,6`dCI[<$jPMXd4d0!"QKJ0mFbnmM0J
%mMq,kDM2bOZ#1.MfV(_\WB@T(Ynd0+a1ggAb\PVN11,s185#i^<;)]IZH0p$nPB:\X#cVV62YV7QJPF4%M'@HbRcH$Y,mu\H5K4e
%8[Qj+YY,YZ%\=hi<Q9k2=+F"t(/0SK>JE88e!)23$`83'3&X9HPqeF3ONGG/8Tb$&`,kL]J[,@(NbC=Q%<_fb>uWr<%I8-k-c?L+
%X*@D'j$k?2#,9,C\.ctM99[3Yp(j`!=ie72L*GD(UZ:=1aJtTEZ>$9\]H<4kRRMr+$pAAq9G:t[ZW^ra$mYmXCP,bW(fe4?5:n*U
%Ze0][eA16i]3SX)]b`V2-ch_Nm[7+?-tX@r_N-7NK9J$d/%W@V1P#@9+K!0p#<a1]F]g1u;FlO1M.%jq$-/m_(hA.(bY0_p`G#ke
%Y;05sq^<js/AGja?]!&^'+b)<VgMusl$t`--P0=H2=e$#=](Cu]dgD9E0D.IDmiO$$'XYNNM](;FGNjJP8RaY]LR7!f]"[OU7MY_
%ibcYlmLP!p+KCf-blRjn(@asZXR$/W)4(C5a"Z$t!.=&jq$7hXn3nR\hsP]F]4B3NW(?T)*E6`'(ffLI<AfM++RsUqf-=I&j6`X&
%&n?Nb_`eHA.>S\cUTEZbH)X6'3&s!Af/#]a_9qlXMe%L)pfk\DW%0%L*3\E']3m<Z;P5F`"1H0FkO=:Z<VRF*>&(LT9AVcAW:PW0
%718Sqi,PK+jkjAF4IOT3[+g;k`koXLPg:-D"$\hdPnA)=Yf5Wid3;>c9f5e2np;Q?J@/qY7QNmjQOt%U@J"k%_aPPZRbo<u$Co7Z
%S>F!IO:)kF!;"`;N<HkbYcb'dd$q?=(ds=;&Y2OEond/Nk*3GSJTVqr5f0n)do'o?R^e7,#HY1NO`"=u5/E-%YXbCHJbEkPU6Ql[
%K?\d\%?BS,pn3)FhFhI6]OnO+,'H7G3P#,c]H%&F1+uqng\!4].1p+UfVcTEkq,\$QXG,R1I>:/9Z@2cieF.r)#tD.CZG(;k(L*<
%27`j-(JBAhN8g^:ZbipSAMu"6<u.!$6o>ifO:S'8:NV8Y]$:mY[Cr1#r`qtt]R0qcO>'O>a)^-6F;b/&`hGNC/qrTs,Sm=C4Pg2P
%Q<"sUD\sC%0$AUW<0HF#1@ESO[B(PpL1hp#Y/Zm,#TF3oa<gtQk]1r%P;'@YbR(9T=t8Zd\6C']X,'3!71Q:LMaF$oX1a+5GaHJ^
%>G<;WN'\]SU=-U%*q(]GZ*B"V"CN2a*BYqX4;']RT=CKP)4lB_Hl1'9=J'E'8edQZ@.*X7ec>qJ5pqs#"4=?GUaI@F$_Yk"!Gld;
%$RX#/HGF*JkU/kK!a7-dY%]Yi$E6lU*W#=N;Hu&3-YeU@M-+Mad7[@0Ts$iQrX,Ds"Zto*4D]_1n.i80Y^dlI*!*3!&.0sP^h\I[
%ag]>o=f/YVI4/>O@hB:iRC-]>UM!g:m3>P"jOb30@u_Zc#+3TH/gp8V(B>*hR)EGf,*u_h*2R=XNcbDJUNRP`NXA3./f'3M`_N8?
%-7otk$qA=5>mc4$J.mhlMsLgd3^ieoAmLLRi&V,KYSbag!$V,L1b;Ahf;\n[dD:VScNJ#d)W0Jg3\:\*\jSBKg`Q&t(kU0YcCe8f
%92Hm<qHCn<)q'g);0#2R&;+'06B#+ie"BSNN5JaD/?/4&,&;0UhNnWe&(+^0(1M3>dD`mZaGG-lj;ht(H[Sg022q:N.uRA;U+8)J
%"2RV(QYM;'D=q;P#XTm'Mr?/*rAgLG,m*QUE)*.*<KQLN!'r.Q`P<6Hf:ZUTi$Uo\@+H?Eml0Tt6Bn;rV!(EO`(2$^RPc"KL6HJf
%J_cZca.Y5]:Z/WrKT,F'7'Fo;J9Trm*W]<nhB,(9hkPaCR"^pu0=lE\7U;Z6&8t?4.3ZE_R64Y@/Vp=Uek9k7j;qC>)M/H0$a;Kk
%=%+Tr?&C<?9u.n?f4Vl>((k%1Qg[f9>)sH30\1dAV&6#LA\UH^/XT#f4mm^`Vsi3G_+5Ye[k3OQ(D31]UnhSLIDd&O3c6`c4,Op#
%&f,N=M(,<d&@-;sU-XH43qPj"D'H>FE$GVZ"R965Dd`U$m&<E(-B_&]DOO\c%+,;_V7?lLI<+sc,:lY/K7oZ.haDNXP0XEo.9,SJ
%K*<0%;,r@0)+]>K=s>;_Zk1^69*98.<%!tSDG4NX'IuCW0Ofjk8r=0'2<'5O)ZCWEQ\P8S$oPW-7IrZ32GoW[d5/If@3<-q[ad[&
%etDJgSWd6EZ9.QY`!ha*&Rgd;/e3o0;FlP<D,(IUZhPg1VZlK7]S@ii$8\(f@1_u0b?Pr&KpV8dWbL&cM_2Lcab8+61hVWQ^SsSj
%7q3O@@Vj0lM:]PQ%XM,3YOjX2FKem+7gqTbFrgNNBP+.,^imf+*FukGK(idLiTT"+"Xjs&9E;W1lOX+bbV__%O=,cK>LQg7-PgV<
%-Q/&Z#fr!/(mehcp'BY8R(p^U>-kr!F[5gW##q7LJN'_`Oo?l:A#c[i@UF4O0D7efAYs5Q9EeNB!F=V!24rjV`e$<8KVFe#!:d$n
%&fbe[Bq2SAfgQ$M^ZnkT_Dm6#!3)ZY&`@78(YL05"uN#\l!=Et=r3BUcX^LC-nC)RK/="ra_2;"YkV)%'GH8+@C6@LdjPf<[_+]S
%`jf##_s(bC&UY18BJO%M7i!#FE;)I^<WR-<3AN&X5RX"s(s#74&Xt`M7)td*@VFI:;[,$V:1?_bq,!,rnIXOCpi9gb##05.<X[bK
%/T;]*7Afj)?[,13'2aq\9UO>q6sN!Ycd7#%RI)"`]e&O1A9,^U)RKi^f9niH'/Fas'K-**%_5MW7O'+SRW8Ih[s6WFVN=2eXFOPB
%JCJ?jF>;?!NQ#A*BlX3Bd1AiH,NNPDFi96XM83f_:V[-Eq?u>-+``"\KGXp^#',Ej5;mRN1XS+.6"iQZC*)4V51OFTL8`>M<A.OT
%OV(R9nnY[EMoYX$rMtK"BgLEMLQ[OLH=>tJ@=h(aUnY[gE@Eu6<#!8:/+Wt?/@12K$"AMq:_rh:9qB5L_-M;VRer>SBjO\m(!*]0
%cIW7%5B&Se)pfKYLF[FbZDQbP-4X!4"\&HJI)1B2%)OtDDC@[m")*ETQsgE]6T+cP0S1&MJ1TgtAm<r[G,L'aHNepr3N$H,nXW7<
%3tohi70OdJ+;BBV/+es3b@F++U@Ts>0_fA6,;g^:'1.H'._nF:K4;ZO"-459d*Rm50\TV0KuHCuek=4>+E,K*6Y<@a0G;'nKTBfR
%4VJh`eHW.TEJ1OYli=E61nC=2>p9K0Pc:N@=F@p.(1J"TkVQ[el&,L.o/gKF!C1;o.5=1l0PF=>'<?a4#@[#d&OriJ$cC$+DaqAp
%+ZU\A80Qr<@uHsm[HKLDJ[n1%b\G]EOUY/!U+$g7a@m957L%HFVf07Fd3J/e$Tc!Qk$_dC&Z4N`PHI530/4IKSs0=2iLK1IO%#bM
%Z1NAH=##*<lJufMK!]24%GmB<.pBI:Ng65.?>,?"?dQ#f3R,Zs:rCf(KK\:.[hZOhRhrXI.2!M!)W89`5fC2U)RCj[=7p0&^%l*n
%/<7UT-04k-S^6!;N5+Y=n20p64:?6B*_Nc!rTgdRPibFF)MT1HTh(7HBf[OWq?hrP;,kYN+g?Wc2Niqd9rcqW<0CBe5bMl;Sfo]9
%BE3a4lt[kN!H(e7g*:N$"uRQsb"S)%@!P*<-IMsXPN(=N'9U_*2!H;`["A4P+:<lq;0!eV.[*Z)P3I4ll'pmuHHjQ`NU2t4-`S&D
%2%mDNA+/nU%g2GJ@"NbRX:@MB.MXfRQ@O,Vf\^RT.YTD\N7SUIV!WnJ!cjlG<Fh#.%PT!WU&mOZ1a.$U.6q*f%2-2Ug8O8,%/0S$
%X:UP-(DNP"kQ3$e/XA009VARM!iP;"8-shJ_VWbs%hXH:O`h*I,Zg]m,f".O__IVN6`?A]K6Vs@+c4=M=:,peOtfV(^m5rS>"+QA
%6;lV@*u8XD)i/$YV[q7<+_](3`4(W#=gGsH/Tu>k%9!4P7d6)=2ULuU"0\,)fH<O&$#c5l1rZt7b0175!`-m36kg`H3MB!F5i1!l
%?-IG%&i)]goGUnpn/$q07D2Z)&9h5;qT/=>CBX2[AQ7c&(<[i</G$R4A,tjA,8^mOKGI9)%*/X(Yu(:M%XrSjd#Ck_YgLDD`"Pr\
%i-Ng,&8rBdF;0,PJe#C,QGB4QV9XHN<DR^?B9Id.F$a:2jrV.TGH&ghQ%o?e69m0(+cDT`"=(a`)8#$l,p^7Q[Y'#?9tO>#3,?s'
%\;GEo<5j_+fLNLR]h4YDERA3Lo1?P8dH&eoD"T]]2TJ.LM5UOWFdS#:4sHXuY@p^d%<q$73.`+5%=/N.e<>S"N[n$%d*Nm@8.J>Z
%2p$As71_(bL'Nc-9F$'\1e@PTg]&nE,GW;GR,8iRK(dVh(XdXQKJ.XYlK=&d]c^piI@2p_3hmSnb#([#QK+?:LcZ><b0]"'Y)[8^
%,:/V0Ob9@/[OE^VSp&:MHQDA.21&M1Z-bF%>R@VGlf<SB*Io@M>0RikQLK`2cpZc3IIDXLVsi-E_+5Ye\$KnH7CnB7OZ:$J7OfJ&
%$#q7N=9p<YJX\VuS`<rPbA:i)9LFfEWp,TS22(+g)<?oNN&WFH.RjIeZ?cl_3gVY`RH-,4VoWM+8*R:/,(dh=.hcTIP'b3[S$&lL
%YB.fEhmmK:]139]YW#T"39$N$CUqkT/'K#.70D`5;Q9jf;kjRgNu"fpLo/>THeKg<6/)Io:(U8bK*i#a<X(\5Z?V%iWB\N.C-#ns
%qLDl?RF72HQ:6^*9&s?JOKg*-R@CLl1q#GEU(A$3/He101C'FmH*AJb]6$n`MKpj<Z(aR#17en*$8""D4[1e5o4TCtU/*8_I_6\P
%&p>=ZID>'Na'(DYK:IZL@j;">bA6f@jG,$`V5ZQ58@F-IiDI"LHN#2q8FsZD;'FA>!`C=pTbFiM#F3L;K'^]ZJV276O_i!1i!&Q^
%LpdJ!\R>/S1gl(ujr'4m1=0J:1KAFB^.LfNT`oTR>He[3"bk*8@G[/QRPdS#UBNp0,$H$c*"<\!c*1c78)eGm``)!d&.fOS>4"TU
%,AQ86&/ML.jih7nWC+-^\Y2I48(It$!Y*@L5f6c\KhNo>?c'n#RmG1rcJ!d_7I,%T#*jHi4Y$cjeF\A)EeZ5t#SCkD4G@9qs6p$%
%[_b[uJ8:Q%0D8pgH7V<G\>UH<?60s!JrbIuQn45?0n<,6/49X?k/&X2@bp&nBI3rK)3iXpY`bF3ZY6n;81E=*`tkPRfp.8)2d-U,
%?I<.YT.SC9H9<X6Ko?Z;GbYEWR0pk@4gq#=12<jncbk=#;Nm]nl8k_gA_?s+#2]US^&hf./aF*o[!"6p'9(.k>^N-\GQr6Ld)'mI
%T<6>b0(l<8'8<;!,4;9:;6(B"(?.tFk1?t_pe\I5iI%DL$<a%s!6/oDE>-!.;Pf^R:o*ei,rB8<c'm7U9]5tZ@D5\t@g+IN?G2L:
%Dcu[i#b,;OJ;/R\67dVpU'$YJ5V<EISoY3e>1O?i_o-@Mi7:FZRY"FB`VI3tMW9hGeaP>:d1SWg1K"+lO<RXdo&g$n,"%JY3N,:j
%dNF'q]JrC0n\-QE7fM16f7uEm?&hB$[W76=-NQV0`<(2.Ue@TXjUo^W=q4PbWDR-;cr>P)TJ'"nMrqrc\9(o3:S:W&j%AQ&MB2VE
%3)@G=7Op:O9!g]9\;Kd,R'K9(/N,0m5t`eHW,Afl:qeY?goCJ\=Qs&=)S.$&!a^ss*e48[`bnr=j.licMZj28#QC9k<A-bbb6h'5
%(b&Lq+cCb7a*UOcLF*Oi,m`7ZQG/"6,pu@)#:Rh%7]8q4=QNn+a[jgb9-MGkmBu815Vk/>$W8$d>*h@#!Lc=.W%5>E@O`!$e:L6"
%=;4-dc.!$aHNhF/RkFOT.hpio3=e@J';:W['q0<7)!g,C2ilW#qdJG4G`.^0OXutE5d(>#feUj6L<;n,+HM>sUP1T*"3bp:DJ(bG
%*K[VKK%rU&P6hk[,3+7)@\oiN*N9O%i>EF)l94).p_q*6[*)NA$Q!7uKlk\gVYL?;JTD\41Y1Yg;p6lWRR6d+W>a,])]3DtN);;\
%X`lctk7V=?<_ZM&RMfku!WY1E,fKYLmHbSl;?sGM"Qf\a\sOeeJr/E;(<-tQ#,X9'H.qe/HMlbmR*ZF9AZl3C7:_A?'HIG1;I(q%
%+Mr\H9UErf5)G"l`uF'CA1VqPr:nd<CP&?>[HLu'2IQB5r'c5F9bfr72F6kF.K_Nukh\Y.QIu?!RM@Ph[,3+-PKE-D=.keHXf@L@
%H<:=3;GN8f0rBQ+&4k%H>*@u"lN1';/.4&QTZESY_po"FqgdrC!n!8LKnCUY*kh\Q6\#HdcpX[i&ttBe)Mmp&V-IYEEsa*9J!krk
%Lj.9>`4$l,eA@bRo`gl8a$9VBA*'+@#HcL5VGgo_@<S)N=VWG/`Lo"s#b!RC2(C@I$QsH?HtiF#G%h*oV!GI[=Nn'<)(uOa]GZ>*
%T!aj$Sn^PYb%R[0N?04XKM:&&p4RQo;LStA1<`\>[c$+'RN$qa%!eOsF-j.LUPb3=$;5pe[>!UKWjC0io8apcB9e+IqngEn[?V;L
%2HgJ/Dm];HMG@)r&.eMhP6oT*U30eD$Eu:n/CL27EV+TH$pE'fA>QY&+-<''!8(3[AIJr9//m3ZM"`fr`JBT[kY3VSQm=XE^ib/^
%J.Dfd!+'H#0dH),'0g)lZ+!'\]P,:%82=MMe=^Hfk0gVeN*=l8^_G.iAh>@Bkdsi3&unDF.0;#5E:hDDeb1-A*0lLsiQI[E0X_2X
%)_lW_#\QJCdi]l=1qafL!,Hrle((ea,:cfH#aet$)A4Ueq@4_=/l8>d.OW[:r[CJg0;m9Z?Gnh;k^BH@3Mnjs^sEf!U+tgIbsXl$
%,O)9@j)6p2]l.<V^ndgMbK5?<-^+>aa_%+"Lc^;&)[F5Vea/!VYMj;"6aZ=0cZ#gee2dWMp4mjq.JaJ3iDP>-]fIq.+hQRd0E(O6
%qDP/6rU4pubq?4WrUTihJ,SH]bHDG[^AH[:YPpr@VI-ubottuse'"*Urq<tY-Z<n;q-"h[rq*Yrl-FO&r1EcM"_st0XMR?L3Yb@?
%lJ]M)ej,i^0mA<4mM0JpZ14\2!Mq"6;CBG6XEYUP)9r4L=p,@W[Hp9po.EQ^7VJVTNAbdr66R-ZR\>toBg%*$3J/5EjBU&)%E`7h
%N7&64].oSH:nqc1#%!MlqaWdUAJOM[:.+(J+/<WfnS[\,N^pF)M-iPd$IjZ.QN(_M+CeM!;aLJ31up)S=^1""@>5ro<Gs-dUFdB;
%\*#X<i36a!YNrBG,i-FRhOXt97Z3^kYMY)!<&E+OYH(i)b1<Mo2O!B6\c>.p9)BFmW9=4D'Li0cQtc,mB++!:@k&^!CF"$)BN)ng
%+4X)=rZoL9g_[7YY`DXo_6c09\AKSEqNTCPb]KP&N>>5\$5NbDE<2hmA,6sL:>AF"H)EO>)3>dEg6iP3]N3nl1=YA'bH]\2=r=@h
%LC0DFd%[csBj%2U":>1F0Rnd19.7C<UP4R$!4t"=S&iJ>*P)=)V#_HqN5,mVNiXWLA*-kY"U?koMR0+`88g:5)MDWQk2+K4@R17)
%GYg2i]oEHmMY%f(rCE)?$Q2\J?-kc*NBHf;.WfO4e&^BD/`3(+=(B@.=V1EE.9O8Ilj7pm^oS@V7YM-.]q-Z9Mq3@.g2!&V8C:X,
%g'(uZ>h:JmBLn<9g$AP&RjP]0V)__a#,o):IM;,MN/S<"B-ScfH*B9Uh7/^KV.Wd5K2@(RXP:&s@VW@sG):/TF8DCFfin0%(9D^J
%)OR7W"GYFljB7eiWX3%_7HO$#C(,hf>W+0"%4uui2E.`a@%nUtNgre^nr$=oW*/#k75%)T/G/LZ,/RQK=l'RPH#$%q[>8)phi&E[
%AlnP0eHh0thkKaj`iNEOp8'o_[$Xbu+%E;HQE9R8]p]_%O,\-/?4&n-]U[J@N:"M+,\3mc\Fc4o&mQ]a[pa\%=u,Gj$mE<f!7]=^
%cI#ihpWs"%C,Fun'G1HIP#ck$&.e:9n1'8S7*9s"d;=t2ajT7W!ZH/X7I*80"I=*4-6DC*Xu2a-T+Zc'BfmDTMRF3NeY^6B(/<F6
%QB>pK6IBAplg2.t23>tn:"0ZO@()kI"OIBA7m4pi?o4"*N&(dC;'[`b;s2h'\n]V2R]1=lQ6Rfi)(L<edQfX?(*XMT>cbo$W_>56
%e]IUJ+VN.j",I!T=:U6YI@4=U8-!4+IN0=Fbq&:mCDq'U/;!tk%h&4D'sm[A[)bdPoo9fq"95g@S[e5KV5Rn_P<*F=UVlF"7i"GX
%BQ,-[qEm'd/p(8`MWctj?!rgLM!VF1&LlTA!VrU\bfqRP7s#AdjGBO5cj>6.\D#'-.NFbqQ']^VW*/VggdT+O5ln$>-o3ec_*c;N
%Ht6-mJ0c51PGPJYRC`s>r#cA\Mq2^,>nQTAki0bEMP.@0857EMe5?Fo49M76[*EY9PS<$9q)hONeah\k1;9#%NP`'6h0<eP%H-!g
%YEPs8)kN'b^eA2f0s@7o?c^-AK,G%V(MLN>&QqnNi"&)!1!Gs!HtX*u/5i_]$92"=V]D*lLaA3,iFF-D$>LOH8RD$R)Aj[I[jm,`
%B.H+RX=fj59j&9HSC*F/a0K;93'33e7H[\S&s+MmHT9MX9aZtC0ldRBVfnCZ@)XUOJ6#sI^tqO#1DdH6#jK0W!2]fo><d%/'GH"_
%_*g]oX^0q^n@k>'$D>\SLC1l@J5eZ9_sfCR/H]!R9Np4bF-Z)[JDuRANX_X*a;T7Bf7@!GQ9c3#=`08H/-9*bAn-XU%Ff>>0`m22
%QqCiXaiaaNQunmQ-4;O%;%_HlRuc[0JQo'4/Z&0:#8O(@(1mK`ng*P%$soF&jksZ;jrCW!'oN-#%r$csbHU(RWI%j"Ee;"5ab0i-
%2enesng*N48R\mZ].rf8iTVAmIpbqPPpF))I,W#I@^a2V%k0%\L=-HdX,#LI9\58OrMC4pG\O&#jh.A-;MMJ0>+4**D[/r?766[o
%WWZ=6VaQ4U6(nu!#$Q=+CV><hDjZKSR0DKMP\=dBM"oJs+]R/]80pO&_JI,aWDo"VA<(mH.BB*KM8pd$MK5'!I+SAk88Ul4Q+Xl9
%4TYmoff]i=5U6S'7"'k==]r5R.9nrb&.E(n]a]1>DTn'`P@O[XeTKMsa<hJc%&;3!D1r5-i1/eY=q-KYJM?3Hi^k]sG"EA"J8[./
%(LSjN[*ASnRVH2'q4g7<IbBib0e/"#BiD**hJB_kj)KU4SH12L$Tfm\RT\>-:DpD&Se=%%jNC(K`5G>/Aq81%-Amsh"<K8,8peqc
%0I<I8?M+HSoJ0)2<%@?]k3kW*5.EY6TeDd=Yi@F>?Z`@$!GjDqF'4?a,H#*0O?D*TbA7r]cuL"S)3+p>%iZK$<:KLb^hP09NTkSu
%Hd\odL7%T:=Nf,spnG$`?&;F0@#kPc!U1<Y(!]&5ds'p2[3G&!;jj9f(WRf=U1AUC[^6nE)LVBT/"(B1(p!/G5n"?-0]BC)Ke/Fb
%-B[(MF40>=C"3u3"D32hYugOWBq_6PRX6a_[@i3aaNe@1,o_+KVRm'6OKY*49!;c1aJ9lS/:nh&/L^%@;(EE\"Z#iUXS/Gn"VM/#
%l-/u>/"sa'`-,p4=VGO4rDr\*+_f`(5#Yr@,P2&e+7oK"(HGF@^s=gVl_NT&;"_B!fkbODQHEerZ))NETU?Nb/=,\;Wu*'N$B&9p
%"7rT@%TXQXQ[4B@aPY"-H[3.5i4Pg<QdcflIZ;bU<3SnK-tO:.Ho>:TJ-;IclUqK:!"ZI?k:J0A0cHGOUIg3ZN+2SH/Cf96o1n6m
%Ajfh64>?i/AS`5<QHrTEa_#c'Sl#R!'kDjG#"NB8OJB]`d'ot1Egj27k:NX"6;)9U`ZqjDNO8(90:C1.+q7l+;FJd0@DQ-rljVaP
%2PhE=!S2KFa]VcQjJWi\:07eG`qLNEgju%h/t0/hi1#a#eZ"0:ncgOgU)to!2fL0J4XVAOeCeQ&d$#!-oMo">e1hJ5HMaM)HG]"s
%&-db$Mie3d+duR-5U$TslQHj8acFgcWG9!eJI*TrqS>^YAep1)IL'nVQrdC<T<?DnbISORMmEi9,?VW*1WMX3/K2;laV4I4Unqgh
%$X*fERXG6l,d5JP\4)iXWE<.^nQY>SMP4!S`MKG*4f$UPdScgIYbDI:P1i:f&8eNS8!MCEEg7Cl;SY(&V*o#A.59/T:>qea7Lipm
%]-9;U^<l6CVCeSZ5[o25^+;!`bDLr=eZ^8a/YItj+>b[@SYJsXPA"R.&Xl?C3]Xb'C3]fA7aPg<jnnO?YG#D]8IW[na2fa#:a;cG
%^S6FMRB@3N=YD@1RfmDYoQ-B_FA,g[Junqn4((T+BJd%:QRT&<N!!1;coFB\ejWV(>7pAi'&f=Q]o3`T560YQD&cI9Jqm+)TJIUU
%$1]o-q$DFH,m(!cb.9t/L1/&o/3JQ0Pkf;kJ3u4heO(lIW3%QeE2[12$(dGkJ:MC8l2s_H/t2`j0a/s&=5BSpk()F=abcC[Er/k%
%#bm]W^:<sC5WI:)AGfAjc7>,KA/MjTBQ;s^eQS7soJ]f&VtEcl3ou)/JVYk1EhM)A"`??8=u"!T_4^_T/@N\>MNLn=)6B`i&'XbK
%/d&3a.aLRD#DHDVH\$$.SW55b:I"6D3cPcpJX*RKeLRNC@KME&lugDcOEK9B?7WXQ'GmeQ_D<a7,^"-?oHt_#4p&t84Af@t=W`9&
%V%nPHrPG7PR^-L<BiY^F&k-TA#a?bGq5W!nr7FfpK\3+=^5k[JA>J'-\>'qh.>H<M8]%7el_3#^6nZ]cZUo]N+DNM9K5P!G$-^]g
%>):I9Ge3C^a]siA,+QBb?[1^*eHQ,GS.]"<=6S6LZ=Uin?NNM>NlP&*H>HhX`!\>`)P.*g.S&ke<o/8T_<i)1C'8Oilm#W8%!S$U
%n$(W`oK`'L,OWq;dY)U`J@UL?OtF_T98(Oqg!W\DKU,S`YSdudko`-iahb=90l4@$A1`JVbH0-3NkkmWrX77rPWP8V]$<:9\^to,
%au[PIegm/%ND:h4-1M%9.t[`#_1os;EGl8cbguTd4Rp1^0Y#.e/*LA98PEU[PfX\Q<)Y$KDBlsp<g1'3ZfR@8+k(GXa#5Ca^S94o
%;,NWJbq.I_Gm/X`iYKSZ?Lm<BW0FjfM@-$W@)JcaEf"5$_POV@aX,NXQ3N?gql",PYSB;m+CHH0d(t\!,[%s_`NkdB!CZJ&=Z%-s
%3m!%SF9,Sn-bu^s`<h8Ma-qjk$o19=eo`JL&%e\gEua-97a<2EQU1?l+OK5;MRkRH@O['X_A^H?i!'BO@h6.>#0VB0Q"kUjG,<9)
%ZU#NX/nAj.hI"b<KsIEsq/YSDAdp$p9]2=p%&*h0(W2>J/W?o#e]M6&2$B(G?hqj=[DLXe.2nWJfS60QeZq_#!>Qo7LXQk\18S44
%/]Q*@"-^+2^(^#]K0?JnPh+-)R!X!72T1C["/El!'+39pBsHC,`#UrOZ7AOlSCUt*Y_k\4R8O)?dk=aMM>_(K&fhrDUT0:)S`_D?
%1BS7HUXC,10kN5@hNTX1#<5RjB<g]:%:Lo?M""*Tg!kkSJ;,/0H<gReA*bN<Jas[Y_pa51W]R1,>[Mf4mR5JTl1mJt/*\$=-?Ecm
%5iXk.er5ruO>7DcoNM@T$6sJJD+!2,bMPuc`Z<ZJ5;6GA%.Ae5[PKfH[>js?`jY:8"+Re=-7D.h.jLjJ;1-da4d0uU*ha]4Gr6U$
%1ND,#b&gL>"EsuFF^#Y!4KrYdqs$jhMR^O&-.kj;_DE%a75Ho;f]Ju)*/@heI';[3X&[V.\5Cdqnhgi5I2@clgN3QYN0.Idrh5qt
%Rf:hMRLmc?P1d'sa(u\@F]*4h=K8`e<#kpLq=Vr\c6?g"<Lm%#(q9$C'PGq'Ubb>W5b97]k_.r'C?!fgSPQmu@gC`7M.:D*93PK8
%;#sd%G!<6hULHJE#HX1Y"hC^>i^hqT))G3JA,CnsSIR]Gpp+pr05'A)$9O!-3uh=[6.As'E).G!SPb0'Qg)`QGhlh3+s[XgaoU.B
%\&@8#GbSc?2]NeSLgP%6_],,odKXJHN31b18fGtu+Z7]&1`T7oJ3VFA_gtgl'Q$2TSh5Ac1PVf>M8u/@SA$5HBfCFuaDP66mtf@S
%B#6;'@Vk#Y(+K&8Z>a8YXSalWE9>@gTtOBY1Uf9R1TGDGCF$tYVJpLC[b+WTE)rdT1RdgMNP+%='TW)9&s7!e_B$,*J`4t4_Eh>G
%Us_OC%RMU6bI9mui,9a19'6M9,%UiKL*dnsC9m2F/r/6<%`?[c_QcHMQ24/dNbfl7*"7R@OTK>F]+TcQQ4>!Y_[d7GK>cQ9*kVYL
%P;[T';DG(k7Ln:4`khs@3%-,))@p_)oFD8^2q6dLUPKP6c3t2c/L,Y2R))(rQ%79nAoMVskNbMF%LObB>qNM7i7o7]!U;r[cLGjI
%5W<HIWF_q2f4Nnh]o+XsC&ON`IWIk:ep>Tri(1F%rTQ;$'QVU'jPXgsL)jNg=k.3Xi4Kl3B*LLY$+f&KDs>*cb["EW5<+K4OLHq=
%_9(blI3#coi5D@@1_5%SP%lRZq4@DuFdG.i+!X!0(CH8\%YAY_C,qH":B]W5,8]NEJoL._`qn.Z&.ZUF8U;>)E:O0rqRZ9NP8K2S
%$$:c<[-6(*)hN#/Y=`,=r8;DLn/4AKpL[pcnqJ2*d-esrBB0_<T+>K(T)$3j8>].lnUiWeEri#iq8![<Tfd5g_&WpF>[$s>d6_`W
%_%0;P?R#tdl+sW,Od^(4K4CHM3qj(H32%<kR14I]6@d;N2gTFPG/_VR=*eg:#p?/cm,3mCZToaYIW0g^U^Z#KK4DI>U$2F4N_Jq-
%9fbKu>-p2:_[l1F=',)G5<&^7X<lQjK-O,Z\?,:SP<uS&<E4Ke9oWH<)*bVYF`'p++5E&`0qQdFP=14rU\/6#Ef?P!H>os,$V?C<
%o\^iC8>P\>o\`as1!tVhMg&h3i7^m"h>"h<Rrs1!I4E(rR3,[@O$9`:K<Looftd8ZVhV*bO,W47+h&<*)*Ksk(sC0s#A6<KOU9Y'
%_9(G'Ol"H;]A/gK3^'uS;Fn:FK*,Upc-qt"*3bk5iLM#0=I_jR3^#IJWSC<l6P&Tf9NV0b%h<-:ZjhX/S34)L(d?E$A*Ouk\C#pB
%!*Cdm6hA;$9cQ1R#DZq`jDXO?UP7jdi!2aj@-IC'aq%5O\S>Z:j9I's0KDoer8;\laIUiV_6p,*PokCeFMeVa-]P[NSKFAT;n<XB
%nUm$SDDC<ujTig3."S)^K/7^+ZuX.sc<WmWC@;#XN]RW5[do''fZ)RpB7=eN-EMkAr88Dijsk3C_9o>gRWa:%Sd6%9'80kp,$$H4
%KO^][OJ^e>_Nf>o[m:Q8d0O.(h/K_NF0/IYYR$7VLsU;m#^9hT=POc[32r!S/1X"GQ>%*+%7)u;3gBr]'82QU[+)MsKKB13_(H`2
%iK\bYY4UXp0gg*$%M$5o3Ehsn*3a/%AT38X3=eNf1Z<N!)Og';i5I4i6RN)a9mO-Z?>p6RaFb6J4'Y048ATAnn_S5:B-<N0+,po'
%R$$_$XD#\D?b.Nd7m)Li[[draOdQ9*cGTt5Xs`\PnUWL`Ql@f'5&aOF-suqs#EIq3+0+p`Z[tL;V_UGT[-2[/)a<c6^$3D,",EG`
%N>">l3,KM-(1$1?'6>_qap+G`@(rsuhsoJ$DWsoVjkn@UOb&]*Qi-6AqO81)oMaA-U<^T@>8smq"m3fD$+IA<Z4_<GV&6<DUGnd<
%)[prUDg`.H=JLSGL=#_M93K7VVams79Q+q69E0Vj5(*PK33r%\88G((LZQ>md>SF&P_j@,3Ysb,2ot/U"jUklPmEmaS[+-K1P%Vg
%;hoP9"O?Ltm\jtri.*_%$YX#OB@0F]VUEZk:6R`hPmA?=<mWQ7JTL9ZYYoWoE&;euLqm<R@;&"2Nq[,(AZ#SWD(:];3u'_^'R9D-
%$CjOJ5Qs1`3)*eY']PniB/P`P?/&?`JJU;0SI(f$5%#8l9]3jV>hKa@P6mBtd[^Z6L,@@%Ag23"C9j)&'7hsX8?LBu^^18_(2qGc
%i7uhNZtGp8SCFl%&iN/99V0'*G91^,%5d!(%libm=oZ7u!Ts[A/0=%<i1t.`p?b!#A3FHtbD$7lZ%u"?b:j7j!K%NW_#o]5B!6,u
%^sut#g<'MX(9t1$aoh'670\BV_ZS2^E[`[`E.[.CZp+)3ZTL^0/]Ilf/Yei^`WH_";"rl&n:5$.E8U4]"7A][$Uf&'!tI#<=[I`F
%S?M5*gI;8TgO[!q>97adS-XcV*cQo4D]5OE#95>V]%kY_444a?@J?S1`O:I@1uPl!"$G5_JFf2)0^U^T1i-9Hf4i#@R9&,]$TPk!
%F'C[53;GL9W3p%7B3l3p@Hf?$9QHlWFV\r)/ESjl/DtD^XOLCgq$os'(bFV;qL]ADXt8M4dNK<@/E#_HP&1UCE6#Ytar(LFR47r&
%irDR[0&0LX.)=519Wd/LJ?ofjjg\3=j7OEAq`=tk;p'm.V#Y-Y<H4o:B+)2&l4i/m6)j^H!h?uf[k4'T,-`C#&Y1KW3,P3oN8N[r
%B7DLV,!!H\Hc`(YR0+E:!>2!@!Nu:?Q'DKBk?sY>/I=BgVpb<*G#>;IK/%J3".V3=bWFHrJ<TlXRor8lE4CCnmMd/(&.2(ARlS85
%<)iL\"e<\N\l8%@!j86]1@]n,:9ZKu^m3R'\n'n'8$g1%N<bu)IdR6eH,+t<.(f;0#TRd-@.bWDa-Z&Oh@P7eqh^UCTiP9;V@GX!
%3,Z`^M%'tTHD!]=r"or(ocpM`3tJj@Z^5pV"--u)j6Abb$4X-hi*734S_UN$6e5C;0Nc,Y0ZMW%%1>.Z7!tJ+^kn"iF,%sAc31^p
%R@#K43'sT:LsfGA)6;3A_e0a(!]$&>P.L%M2=GG0J2<]`>^/U<:-2GN_Nb@roq)BA3YT#(CXVX>RD<)cl@@._cD3Z;nT?0t=;o?*
%\7#GO</<(fSI$9<RdTq%RD@4EXF;*8E&9@(X>>Ff&[m,cbQL\*O2Sl*$(RE<2![193$1b>A&AEZWRUn"3YOK-QlN_j$(MSDP/1t%
%^`amoT$s+C0i$NXD_Q_u:T]DZ#1Y$3[cE\Z*9g*;Rr/W]E6Smq%_#jJB0IC<ktVEM=HM5m4\JgK;7C>o:k@*hNA7M6i/U\)OB3oN
%-?sMhg'ne,!aJdtb>j.^IoP&>.WFP$'n^<SgFaD_e#C-r1Qp6>'fc(7=EKaK7>CNeh4OiDc@Fh)'f\7VZ3r].3,J"d90&aK#MN3`
%BIafWH]Kh]<8\aDq?7ffE.m^aDIkc*^ldi_E\gRDK2km:mBR[1i2km0Mp>nqm7bM_^7bU@"W5Fd3u'_QNch[d:'Jp(1;3QY"cb&h
%V(s_WE0ci1VlEJrNjm*Pq*(!nj)o(ZFY7V=\e_bn\A09O3]*B8>[)^^FY7W>W\$"C35C#RDD3\^FJU]4Y?^!(+q6%;30MY!-,Q;V
%7uKBB1DMmh620m4<8c!E=$CPt!lm<C'fJbDaD0%s`pZUZHt^VP&NG@[3ZU+Hi:n_.Ho_j!K"$WD)\Y2UEchdK<8ciQ+?`)i![dt1
%p?ieti"0:MM)lA2rQ<D'mc`YBgWsHK"g79jCF^2\@m!HMl<N7\@7B.@$_2!$heu$.o#TK-&*n&iBOH8GL(0[#+Y8A=%@j%$j.l3s
%hsp[&"abVN+#m1Gl$I=C^`E%7=IWcIi7am[8'gtGTasNT7V&,u8s!I)4jnm;ZVYjP1cfS&Q'7#6_Zu4D>^AFOq7rC.;QV'rkQ!M7
%jojB,JTE\`#1$EPWce+r54H0kqWU*7h`2c</!L&!Du%1_9#C0@I,GQa17A\:E"^g-2K?V>NrGnk3V^B-An;9Rk6#oknRTfJNb4pj
%K+8mMLsZ*n"37brOo1LT**6m4IA[0[$^72AFPqNL9+*d$31`FZFjP[i%g2#-2g"!M&5d"'keJ(UYM$+$i,Hq0`o<9o*.C!VFupX&
%YlQ2XFuF<4!L3lQL(,-IAFLFPi:*e4I&sZ*4)QUoYjfj@NooW:0t"9;'AN-&A!krbnTKq?\t';cEH?J)dhs)ahF!]?2f.CPmV689
%Og0J4Kqob/12t1j_1snX^_(S-@H%?$;T_n`W5'"hBK<1gi5eQ&*C4<>Dmg>5Q3\I4?k.2<!Ct$?l:M-g$o!iAE+T-+qEc<JOFX\&
%^\X2t]\-U5>70k3HY3`kE*sl)gM[qE*U=WL?Q$Z,U17X@i/YF)P:Clj!!eo4o9)-8334*aqeZYT$UrRKr84I.U'&p0^DSkZ26^Nh
%L3$'A>\!e'*C$Mq48Ci1c9T^ejo1"J<-U3qrm!nGqrA0u%nk<Y`8C(;Q^.96HX&@La&p*=A]5k&%I&'C8k(p6^X6&dZ\5HVheXVc
%9dfm/Mc,d`dVlQ:@(.H\L@hc8I#rfpdqf]Z2g@Pp;f3JfHb&2[r'i90"3Y6<qhEiBccEi*E7%VKADboq*?ShLa<,3jN9ZmkQDpu[
%hfro@Ad6^C5rthHSXI4FbZ#0aqITg`TY^8[()eB$VXHuP`O6D-_s%Q3Sah(dVg.$jq*rVL$#sPP7Xh\L]?V\Z=IEZ).D?Cn5fQ;A
%pr:=c%VGKjhn,<D0_i=QKS/ODl+I[5nf_l&]s0(7G\./j2^U2_O3[,%Xco/B2cG&JE(]j$:@50n/X^ruC2Ys#,6kP7>0+E:W4eTD
%a+Bik[l9`n'H#ofBPH>Gr=qpl]b%6/2WW^CP?<uT\\4\5@=N0^^%#Zb][]L<c0,<<*]gKKZY_QX`81nu#:hrH6ie9'J8tn"2fO7]
%jt3nu_1-"P$taG;rh]CTfpaBS$<+FXh?[.5fZAG9HP7J+YLSrm)s\;)@ShD]TbCchXOQ*/WTcfhWP*9qdUi`j2]EYa]4Y_o1fN-=
%C2^I5BJR*2l*rRUZHV+\7$3T;d(-hu>qf/@\@l=%0VlGEp83sOF',ud!R38_!XH1n>.!j4_sOQ;Zqi3]2t;7Pr8@8q[p_1Loa.I(
%&fF3jfY(u.,pQArftD*gKs["io.(S`<cW,I@&ucKOF%'8fD;mMm`c`VOSqf>m:`i!"DgHn9r8"7b=^QlW'3V\PC(af5fUd/gtSe5
%hc=c9"\6JQmB*:^1MUj*,U$DPW4eTqUAP0am>Yc\p\pYM]bs@LnUG3F7cuOJFte8aTSi.*Y]>((#,g;3\\76c.YGgdm>[/QJ2t-Q
%*V#;s;L?;W,&4cep*L&=Q#>+.BOD_OT_<!U@nC=WhTX1%C=ATa@G`jOB>a(1X.LZ,`p=.^JLlGEg"UMq/Jla#]ijLD-)`VH1\6Q;
%hhKi(cD+9uGA;%UQpf7)[C=S(=CqG'm0sn&GPC=Nh?I_lQ.h_C-`r+4[5U`fJ;aqPDk_p-$?"AMGVe@Z>AA(!rJV=!C2\1prLaV+
%2d/d0e;:kag1!.$=AmU7g5%>c2c(kZ6oqS3iH]?'_Q:]47-U,&hhf%oU<?plp','2RiQ@%]nu'[HCtpuUEr4($t=,ZjugJkRFn!O
%-n`#pfj!JCZ*)=-FS$6GG%YE*nuj<&_jJ+LlHQ!$*7WgRaY=rc_sP^Y0iEf3[l9Qqm%5l=2cV'rl7d*o.RTiab3b0(JrgpdD^HHF
%Q^5qaNOdBs@?>gl>MQc.7d`uM:GG?apZ?kB5RhaPZm^XkL>873er?J*]s86Pm+gHA^&*!S*$8Dl#8O0p$6*l$js;>mj2UK21-LdV
%FDc#[mk/4eY2%m&GSo/Wm7dho\<YbeDQ.MX[A!;K_*uA*:@5/,C7eOADgKHhS)2B=hR"Sr?/MWpRFBL3e^!Q1pId`!Vu@J^Ke(TV
%Xq7mRT^"fi,k1ee#uRP:=4i6pL>E9sa<1U0-ccPpb?>L5GV\&9'\@@W_j3,1;Ub2EE$be?EG)%T*<fbOMh"[14;^O9G$ZAT-("k(
%clE\/7+=@BQnaabdEHt`&0A-g3?X@td56q!12/^)gLgdD9C=h.fR$o5qESJNDWDkH/sJOnG(!jRErFA^n@DU8TJU[(J2+!96a9?;
%BMgnZfBFmrjKlgK%FC*bb'9;@KU3f*m?sm/1&?^%`FeuS<SaCj.H_XRC_n@ua6&sIDY1:HO7&P=g(cRtfEnK/<dMVb4>rAO+<c0P
%Z#9oc*NWEVh2;rg'ZrIZVkr$<e_+aH3u51Jd=Zh?n9H`p'td'[$`,M7Q4sQW-%&OX%3V88j;qS`9&Z85!C-8k[:>Z9ok;ad&s-AR
%5h(V^Z+qQ5E8M*3?9mAG%m\sP$Y1_UPpUmAjqL#`<U#+B<4$1#(faGn`MFU"H79$up&J;bXO0qUMZ[-lGG>6kZ=l'/("coE*Rp&"
%N[B"DHj'*Vabls^_Qk@neZ(rIG_V*`2d8m9Si(B9WPsur(<QO&-jN#!'L6Gnh,Mc'F'e`,!N1lK<oUBcOs/H1[TX7D)"%&#Mqdsm
%6?s%XEcl0<C/KKm>As$F?3oQJW.4lMNdr]%=B#CZCnr]fVA)%5mYNpWKh5tql18Cj!4?dC$mSFV1b+Tu.r%X6LVYU&](Z;_EYda^
%Q>*6R+r#L]>kc'HFa#3l`2dRVAhuh<O<bK3_IK(6c:SJfePhr^2.=<7bG#'F_#$S'=ni(+(e-J7+R'fp(8*+,@2"`b`;R2rN.o-?
%[G@R?#1#b'etTl%(IriSCZjoho2[RoR6E?V;)8RQ<`UN1P9b.HSE^CT@gdNJcpKAC)g!'p,FNq7AhE'Kd8lo(7n"4Y'IjIV^qmNI
%oL$0A[*rX`3.]g@Z\t";]qZl1Ss,Gd8MB`PrZokm133PAOX/<UX5dg;%B^8FB_<*R/S#TPg4E9*dWIBe3M7j5&H-('l6h`."agl_
%o*=MI.AZ/3+e6r4'*,I6(M,;\&CMdMc;9c`>ec40;Q#R_/*_'W_W,l80n0iiO;[<8SYR>.iJ?n&#)fu$Eb94W%MT0Q-SHdj-of;#
%(1WbC"t`@Qd27J_6:m3.9SA'(5Xgd,ja4-3RmGD^jp:a8:I((+>*qe#(@knOMJYKY)8hdrKmD(q9rt=qF,)Tage2Pe/+2n?83Q]%
%o1dX0^n'>P.]<]<&hMq9C4"Yf-'B,/aRQln+C]X!\L6hK2n-\'Oo$k*DnoB^).l2@`!RZ-R&GR9d%/K"=ur<QH:1>WAth1AZ_Rj>
%]-+dAYY9,:K4Mj;r;eo<5dg-`AFZM3?-:5SmO"+>&?K9+"q%BdWD^71=iT+X\Ua8#\6*&I3FNI)M9&mjdOWUO`Xk*'*.XZada$NP
%T"rp/3HX&H'VHdZKCjuP`cE$+$G'>O)c!KWo7jg!%CjcJTFfeg852?BW6=+r@E!q1ZU]<NjV5*SGQt34+es^^nK)K%#UIraQ's@2
%Fj6^n!kG;O['k[,dIK1H:CcLN>ir93#OXU*I]^'Y3a)kE'N7e)j%:T^-Jk3)D$5[[-9sm7FV<bDCqREg]cMbGgnkdZ$&$MNJ3I\f
%#@OuJqe!]05!aYR"U`Wp)*@2Y8n]miN53/d:uWVA$ik*!mtF;EpUnkC(SC>nNQgH+]M3\_"r%+ORBVbWm^:Fog;(9r9E7oME#MeE
%OP3$+*MuXaMdBQl_$!NolesLU@d0_VF@^`!S^e1ogmT#@(dhg7WG)gb4#TkZ_)n_LmLBLTWDPDm^c[>K1,KdugOXH@&1uCmU+cm*
%)."QEZaigXc&q!DOKdIZDiJGXd^0D[=K`>/W)_(]ZH)!6S7UIudOQ\/Zgc<co%\HQ"E%Kn'in<QM-G&BS;+@e5?4n67q8`.h+S=5
%Uk01_`th@nj?Ik"hes?Ydh8$]Ce_LMEm[9.c=<ZLA"2L`3DmGpKpcN?F=0umL$iQ0REZJS'mj5Z;NW&7_$PI%[5A^g,p5#M,jL8%
%g?"o3L+_Vc\56`.eo59Mc;<0tWig*"#QPN@`l"!LNBS%:2c"ti__dqbe.&D'_ilR`R:Q-GF4m<2Rk9J$Wobqg9iKKb,AN+=i>H.[
%CqafO>E'd2>j^7j%iUi>NkGNKf!'=BQK**_PJj]Q)#41,iH]6Wg,JYY\Z7fQU)Pd.OYt_bnjTl)dB[j@6%1(<<!=J$-_Zj1)7r)3
%"0KJ1D-P+[9"7f9n_1if/6h$dE04M:]0J0MFYoO1'j@pU\4Ha*R&PfUmK$^)Si%o*NR&>uH\b%Al10DR3I&j*L#?8[:V2BX7uSlC
%fLHg':09#sY@0qa]@ap2i0f9L^O-!\]0KOIg+6!/JhO\PCIbTu[]0t_JX_LHgo'GW'tPhC7&VV_GU_;K6`J1bD;9hrChaY<ZpP4Z
%Tb,]*75n#>EBsba?"dnqJ=?_mfMno:T!Tkapp=feDRi27!6t9g26^I:P@*h)GCKB@I2h2=!I+DX\u!2eEmTgjl1^*R!2N;Y-S(Ul
%HG2FAF?N&!?F,W*7.A7,B!"It;i+u(Ls#LUbtqN*$9[Q:YY,5=B0'*jUQ/DAD(b>t$n(a>LNCM;.r<2[^t/_TJe]5[ma=-!]&?)_
%*#0[8/Mh^*D89Sf;<rM_NYtS-dU+5Y]kkk=?=R*K8VpdD-HlY5I.gNUXNDY2cs$M;Nq*WrL+e5t8mk^JXmUs!bCg^\-57#RTWsd$
%GWE(O0'[hgWYYb*@okn%2jDG)G88:9RtGQeSN4rXk15"3qg:tnm`2'6%u6g?"kn\Z+sKbc31lQG(?U/OP.:l$b_Q;O1rPZR1T9HV
%Xu_mKT=oGaNoRXTL#3W=s3ND4+]"J%jh9sC8YBml3JWpm8bO,a-70E<#`9JX_>usERU?*V>'jo5V&M[N!nc=*KfpJtZaqWi4*U,9
%>$+IiR6j^cSR-M&fKkU\L=;=Z,rjdfXTO3CX3%[X%#]qKGA%_sou-cbP3!1c^fBkdTU,ek7BIg$/-H^j5YcI?Z64_e"Tg%(<+Sk4
%C%A+\Opk9Q&DXK3LlVp24*>LNg>T0j2n>&$(b?iHX%L!oPL'ZnVXgE"JMr&o7QUkC`rlBO=BTSE_/Un,0.;eD;E[]mF&b8$Q75+/
%!(fmG>ZW\VEU"+u%",','%?Y!%38h<TEriLqA%l:jJXnmrIQWLK'ZTRgb@*#aX9]Bc%$:%7=oBE7YLar#\B@cXY%V=\W6U<!*EnI
%alVjC$+AI?>=%JR=UBZ0)F5J,RD"WcLG"*CijnY2mld5un9%6D[)#@r;28WmVhU3mN%3K3W,07a!E-Rso1H[<YXdp&JKN>V=.Ud(
%#S('`E/_</).rMIlXpEb+UimWU$l@uH*q#kC^9,`dgLP"HBfsW@jhXFH2h8_Xb=EgF1m*r/;Cc-K/QHfb-Uaa>E9'Mi+\OB%/N[k
%-UH>?MIX2NruV;gp)me'0o=X(mW(bjO^B<=X6%!Y3!:+G]0p781+OfgEhe%l:`1<sJ.[=Y2[2//L^V/oX__Cn.9773O@-L?AO$Uc
%Ul0eiS*r1pT.@XX>fWqU#<>a_#\YnhUHmTJnUZAG>%5b=G,=UC@^6DPY;tGC-m<(`@/F@oj/6jYP82qR^HT&pj%qPCM-'ImmpaA?
%ngj=Gl^4fIUt2W(KZPKD#XNF$7W?:([<50bK>.ZjAWg'6+B?-4I3K!&EIR-uY"-/3:f=f:@UEVZ"D2(o!Z7B3?k!9Og*XL;_-7VT
%HFgB/3BI7HIdeV0<]lUN5d5S%TY<a:"-HWo#YB4XX;*B0NfI)EGTi??5fH[;c]FLBMP/)GS.^`d6Ihq?B+g.M:!fFt3!s))#X#G>
%ehaBD0j4SO7cPF*RIj7M-u%U'.8)f6C`c9S@_f[1^0N:#=Pj.)VK<M>;WCiP<9dM(#fWS^F`+YP"-SXhBu,@=Mt.=5W?Vc`N<(AN
%J56Y`.QRjoq\MhsOjR[<MA0\Ao1cPLlX'gR"U-FI9mA+?;RR\iZ>nO]KX#+K8dA`M!GtPW9)"69NpDd7GDR0!0'9XkGLB#_T+!eZ
%F6VJ?>5nm8FX'"-b]_%VM"e9LFZ_=H8R-ea;Tl10i01]a?=6\500u/aRsY)!^mH0]G>TRO!Ca:J:[#(&WLXJG!E?p9U+Mib+KGk2
%34M_FkVp9f98a89_Q;Gm(p?IN8GfC)&Hg<5</ET4gh:#YALj?/=?9QP`'>]1E+/Hn<$G.p"!ER()N.,jNh!1JZm+f:*!oVM=dWa'
%7CN8#_JV57J;Xd];cmU>2Jia*-b69T_H6l0/BCQSIu5gXl2(NZ&!Pp)P?buBGQP4L8>lu+h(c5F5:u]qSm7.R0WKC>ql'0`n0QE`
%TR5-YGZ!ZSTamJI9d`=?g.^HjDad!poXp\GGmPj0dtB6Y2,_Y:4$a5$1WUUkAI+;OA-h0L`s=Crqgg&He&t4XHm'0.pa1")fjH+[
%N1"Z,fp,6aCUK>Z1LW6M-=r6/!#*AfA^.#T!)%8T)4,.SDZnd`=*oPa=6CjSK0H(;H6f"0ZIf8@%Qb+3_p.1lM([k]%'HAfdKgM!
%K=D-'k[&b]qfVR.1i3f4-`T7(lnp#h92&MfUXGKnj%_;bBG#BX8Ed:SL/1JZK^5Z3_\DqQN)eJdA%ECUZG7GS3pGSR[KR.29kkoC
%.jV\pC*Ho'2J@c+q1,^%,H3$JH`ZJ&&/,V2K*U_+4rWmD^bm<rLR/VI8VgMbHN?LU&5]-Ul0u'A9[Er3PL/Vo>?nu*4CL8q,(C_8
%5nJql!o.<gc>?d6N5TUPWRqJO!"!W`W9UT^*'"&$KLmZY$0S4]Rm.6G,ApV<c;`:NdK)Zj7fq::A\:HL3P`9Eh]j(Y)`2H`8k/'V
%5N"0ga*Zi+i>s8Lo]S[PS/6OA,X0Qb,ccV2S.5HSOME29WU#&6gEi/!;bJ5g&Hmq7Z[>)gM9#l^C>3KB7h*r,WlC<TB$g))98lha
%:4DK&ON7(PTEK8[dYtT*55_)A.ZRFm#feXZ#+&DZ@i-Qp2uq;,"Gm3J)aQ9&?k7tL`56(,Cb:'iR.3#4QcNqc&@8?IC9n/U:I"n#
%`/E]<`h&K+dRGCgAAf9uM?-<3OeL_VZ'@R5.LB+-\9[/58F8\3KBEI0MZ[Ig,[+WPXVf;XQsOa:Df"KE?Kcj$E,l+gJ<M=7e-)QI
%bX/(la6:4e0IPh<gJ6Hpm`sAoP!IB%JOq.D?*[oq44>[ONqKd6BtTFdV/5DV-J?Ou#!g\RJpHLC-tu?t2J8q(H`"Z[_la5V!)BSB
%2j=Q8BB4:r.-*O9OQJUBU^b2K6Gboel*[fg/HpB0cD]>/:Yq=*F>`Z:?scGj),Orr=.j1q8LsGhX9aEs+k/Q/O<H7BEURA6=Z=QX
%_)7B(m[.'f?$`.P5Ul<&Yk1&0HsI:uQ[Ze6iMo7CdW"t60]$*bZPoa=(M[MAJ3m0AmlUu)ODNJ_;Zasr@jOShju'<SA2tteF$YcF
%7sR?V8mVK"N];Cp'#6*rO(.@Y:>@Se)Pc*'jD-$,h4g&j!&BJA:\[od_Zf0h)hhUb.IR](0ZJklNipBf3__tUPY[AZ'0/jM"PaNU
%OiOJf:'gHk>=@m/\AQ\pi3fkQ$p?"^@>N+5eA4[>Yl<-DbrI6ra<h.KiQG%J,Y<J\5T.?X'!#B.?NgQAXAa^'UNKj0$au8S(\E7%
%Z]L86]Z.f$p,LMuOAcjDqMC+ZF)]i"%3/K$@`<+X^c4lpn<cZOmh$hpLU_BsW9YM/kK-AK#Oe^47n=c>G*5Sd"_,PFNaM7[$S6W;
%0r*tmbp6DLaefLKkD_l#Jlj>>`U-#l!-jr8<p"BnA<mYL/B9QrB\j0'#O7T/'=+JM#;lC!k^r,j`8*QDQftK8oF4\7UiKlMWh>bj
%#nCoFU5&#*fu7B/ABQJVQ$Sp_"G<,s"t(+DDB`FAE?pe64ST`Ok(/cmL2\^WlrSdo[.LIc_"$9Kl9\(%#&jUo(4oe+;-ebnM9]RF
%;Brn!gd58"kG>AfA[Y?u,Tb:m!ee?cqea:=8K]8_C?o.?SVV5R444kZG78$DW.q/$4A#@D+lP_2>cp8tks;A#b<%1tJC]Vjip!@6
%'3/!O%cVion)>Di5s!"%3^^?Gf3n,g;'dJaJCl#-!sauo<EYSp>=oab@$O,cdR;U*7hM=;6$nb7;]&=30LJ'kc=_bpJp'P-_UV9N
%!N>p,36Lq[Y(QHN<GLa05gcH6k\s+MRW\[LL*t`V'2N3L%m]fOS=$:_8/\'rOTA#nl1BPdG`WW67OT_YVk)=p3:>IIJ18Psed%6T
%4o:&#B&r*8Hm?5Pg*dT.QNs8>FHSgRc4&AKK_R@OA;e*!8;KBdDQub.kMjZPKf;p=E!YD_68gRK"/SqITbr*`gHj@L)U7nIM0LBh
%_b=!D,gcgUjn4p@Uc,XZdEbK?L^AhR$5jR(>ge1;jn'm@aVIgo#_<ue*)[(7!eQhF!\n(`%8scGG^\P)^KNWc(PcXpnG`39m,jt_
%ao<dHYe0r=06dp'.W%;.0MO&sGX]_N@@43dL\[Gpbi4fq6.ZU,Ysskr+ee3.nK1\.Ob;+E3?t(ch1C]f"_a7Cg7UVsd&2Q:qMZu8
%Ur7,0.E>NoABHZm78),3.s^(C#Hh..(8J+r9&^1ZQXe[i8a961FLmpD&YB&ep3Je[n:GC$D[Qb*iE!I=Bi?6F&rp70D;]=.]K4'j
%<0:_4HoSp`7V6Q#TH`UmF(nms>RS&9&C@,OONo#$gNj_37X"s/T[hEmT/h<ebaQ`h#74g9*$']8M8C2\3M<21/MMs)+^)hChh5D?
%Dk(MuTn[hZs!UW'aXHjT0H.lL-E][9j("r\6hM9!'hJT0XrPQ9e=u%)C]Z4.`Y1tH@UP?O1YAF`/-ck86mphmQE^Y4=+OG-Qh<$d
%J`KkY9T2idkmaeYV"pCZPCQ&.O*(68FqR?R''-EN.iZehnI*\Jn/;NY96QJkj(kYs?j<m&oML>M0E@8"9'";"#EGW5e)MArY87KX
%"'mE"$iHtp&=Y)P?m."I4*"=lVAS5BAq0qZSR"I'J:M1!YSHUD,a)nu]h<u$Q#-tDV#D:O&A+(C@A<:HUi7'3i/A+7@N?d]qZ0l;
%TJb)PBdrp$?^1ku'W_G=5]-s>"C(o9oLoZ8!h)E9&UQh1=Vc>gKQ4*^8La=f:32Ji-;^3a%cf&2"U)3793,:g";p76P'S56/=^D/
%8&`-]5uC<m\UVKB@p-Imnc%4HRN9Blb4gK)PMuZgNlL\M50%)fC,0*<crS)VH'JQ#*[G%LXYi_M]lkk2WA1TPi"ps_8jOt!5Gp,b
%]::&5NU?p,-8@57Z`k(gb@jM/_,GmJ\r:9`oP8>)jH4NOBg:/XL'UdoV3ZYa.QAcoj@?Wlbp+H<0$kn-F#NA:)0a"?!"K"Hb'1Ln
%"Z[06-Hcm=B&JUV>e0.-@qKE4%cZd*bi&/c55_';/@s;oX4&<b0q!\s#+F^R&Bf'=?r8>HU,[$fl-(\`?qE)((\OL3r4I\Amtoa9
%5:>1p(R\\-"`fGCLG0(a%Sn*q&om_eo*V3q.o8OU_6_Vo8`8tQ[3.@Hg"KkXaNkE?%&@9#k)*,s$`jT3\*NQZY+umK5?rH">(Od@
%]o8+%0jG13n(rF;l3UT^$27oi'.aJ6l&6GBL$4caKi)jgAJ"f-Hq+qqPq!,3K\m_fe_YXah_%JgX?[;R,#1?2C1UOH7cIb0Bl,EF
%*fLnj8h-DXLe%kU5%qL/,G>Ej:D[XRM-H:-jc.J:bGI!s`+_\LZ9YcV`@[?PBC.A2B=.etPZl!DC<QYXJRUUK!2q:coe_V!`.U4?
%,D92XLm3oB'i2/IN@;f2:aqC^j9pVd@8W3W.5SUI#pFKQV^N;>(Z<e\"HbLV\LA/l(nG1`KqtXA2C(kW#AJXL,J-n$?8=u;_HKQ9
%BL;?h^aj8UOGDJl^f&/C:+:[(cr&Gc":U7>0p^?hA=s9-<<b_<(<8Ta"0?0hV[/(!lQ6K2$&,R!n_%Y-TG):n''->uA95$dP?7pW
%<<TjMD(f>3_m0-h0T1L,Z_:7U,1F]H";-R+m3#d!=Xh*R'jU&.##t[&OU2tYE\Ku"S0l@j-VIq1H%K-h-fF5G_'heeONr_"'!F6J
%cHB5S&!Tik"q#-6=+l](3<GY<;N=AR=g6[bQ6:6TQ,saRJe8Uhf9=O]Pq4[nlAXO2iK;[6QD9l@7Gu2h<NT7[Y.UNi$'BrK,tg-t
%67OL30Y%@+Ma/<a?dr%+Kr!DQQ;C#;5Lep1?At.ce0n29f&.0ZR__f-$j2%JOJdkf/ED9*$607qj:V)1fGZk<g<We2a9>m,$3[LZ
%ICsJD&"Ll1/Y<&/7YS7+<fmlnEigK9*_F[hKmTX$"MmNt>947u@V]2tCdQ"UIlN,fha'6:<1tb8fJJmoF035b#lF[%9Ik)Lbf7+[
%HPqE=#Z_l+0+l&&&6$rq<\(QH;e5)!!2-<1+@3LMG[c5aPi.mo\9K]V>68Ne[/iQtZ1S\u791012=X&l5gp&foEDn7ME?`PEYRS'
%U5E0$\.N4?"pcsSn-lVq!JB-+F:!gr6Kq^jc0%$9SkH_$e?r*SY8\_hC+*%A+a=K%&4(A5at&F4,+++-]"C<!5g13t:,E"4U;.$A
%.SD!g$ZmI3QXB=+7DQ<u"@8Wq(n=?sKd?=H5Dh;,T(=RL@2QsQpjs&ATF!s%/#;Ff6:IK^MPQfEJ1Et/=pA@qG6NROcW\<aD07-Z
%[@<B/&HE'r6/GIC>l*YD;OV^[i1!57#gfsbk^cA.95M;+c.$032MRtW)5*?"JMC&\9=iftaB)idJha,`Ccq>1aW?\l>:OLjMbVD/
%@-O@%"rVC17PPlMa%Mh>KgZ+#_IZ8WL+oj6'dP-\obt^RC,k[D"9VH=TuDZ0$EcQUIR*"q8MUFikJ`%T7FaO@FK?Sq8ROGVq)Us4
%$V2,?U=^1(VH)o&j-?Mq.-dBRV'PPD">JbS!#[h^&cf.<P7EGhAupNb9Cq(a"K=PXdbl`'-np(E:h'V1Dh[<f4g6fAO7;e(fBPh=
%VuYOh"2dO/'\-F-"8K#A3!fB0TS79C@PbhMi:80@)@qfUkGP/BBT!l=K;A$h\gY0,==46+6<Y@u!OjBGQRM*uju-CBahTMp;ts:h
%5sf\[kOKa8J=0f`rFqD*6g0,fm-h.Y"TTJ_:Di80N3Roh;p<ksD"2n(DAakhM!'ajH0Q+"TP$\=40`<H1"o8&&?5=B!'%+2)YK9m
%%l&\WZqmf3RPJ(TFtA%o"JG-SQ6Z)^o=M4;aZdSD?*N1QFXI%tRW)$?2YaV__$.&n'ALSHKd(/X]J$l"D3E75UZoEZ\SN3f9ZBsX
%)Su!+=CP:[d7^PQ97jPXO<g't$?@1r+J"1A!!enFrhi62<>``8*`umkJ1^tjiBPHr9>XO3H96a0L);m0lVPu<$R%!n7hMAlf-^aG
%/24\-E"W<21^pN_O^,l<pCS">PB()(@($igOFgq<"6r1&<jef)Z3,o]>*)\qXsS#mUI;!Y'I@@NbWefA4p\'iFMEqP!]jN<o/-4j
%mqK!3*0V<uTRbuDO.p3WCF?ou4a&3bM/!P&FO;SV8^EaNa^+J1.4..rWY7IG&OSm0G"k/tKX@Ss@]N<`'H;E<TFDkRP]e3n@_L>P
%6XmkH0Aot:Uu)P",4<>U2jVBT/f-ShH;$_DKr2:Sp`ZH&Q+I;bUVo"^;/D_P1MPY]E0iZK^$G7Y"f=d$ILPGPk@GOS0G)S>="-*@
%Lu&2L&l6lV7cLd;RbPEt5[b[TAIoo=p3d?)P:c/&np57K[0BEVWn>Yu'rG/Dfn$XN(ls7%'M'8Zn(H]N[e+7@HDa"l48MC`$J$pe
%]%9%?n70$sKmB&>KHN;D<4H_6Qh-hp;@&1*\UdggGR#fFik0Vh6(MD';#[06%;mm7#'+SU_U/E8_5QlP9Ike?X`P=LU*HBi_VX(^
%&Ukq8IB6n)_if%tJn/Y:L`mBEBuj^LOc:PU-?teTl<%hVNu<e<UFAOq$knu*-<fAs!HG4#c,+$'K`7+]/-09*cV'PA5u+bB4+U@A
%L9/#rf/giES5LsCJ`jF._QV\+edF=CFMLJ2Q1:]G0bhI^C<mMl&I[<u^aHQ_%j<u2EqGoMQqS5c)FeI)^.IBO3i<Os@0TfX#DX'-
%Zl5aYcnN;T&;R5^s3/g.%Un@e;;=m5"C4nr0d=1o6JIZ3(.8@L[pl<K;2*t(]SZ95/55cCH)1_g[R,pNbnlB+BWMIP$/h#Og_CG.
%6BS[.:^PZ5!%NhI6@'H7"Pqfm7FK*(Rd:<9D=mRIkTU>ZfVI:N[*"#uK;DJB5`j0"1m<lY3e[#/K\U9N*YC2b!nIN(Zr"(8eflke
%YZ^0'5s;hmd#uc(5F4`-11-1Zn3fH06RO=X,r!W\3@DU4Ps-TUXmeh!#X']VU?JDOKFqV8,bIP`4tE9\:OJBs6H\Z/fEeSb;*KfK
%apJ6b]T\SHhV)Fa#L"#'5.H2r6io)IDG-u2_obtD^uH"K2_GM1rG,Nl3p':7$lO+g'<oKDj_"_g9b[^c(pGJoV]M@[RkH"Hi\?a&
%jQ5-!78[PP(+[OQOmXN5^^2@I:?i@Wq8UFZoIjsf&_#1Ao=[P@$MPK]G5i[VOK`'e10Clr`!p[C.;"SRRtmu_b?DkR&jn.6%*'c0
%@+nV?*HC<,p.)+t;`Z(Q1R@k1*Np^Qgu2%Kb7&>V0^9XZ+B&lT*m)N_S4\bn!5;a#$6:2'O@YcjS-BF<5J6cM+X%'WZ2?GE)uq?7
%K*"!1Mh:(1,.qI-jMJ+*DC0oq<^IbIWb9U0MFd7H8&`:0$(K\9I54h@=EtSah-2-r9"R/M\3V<!h,1LXoqtnn;:=tPGEW`d7T)?O
%@j"DX4$<#iSR@b'8]%`E=]Qq04^i5['@p,uRk.c8@-s>b,38t8<Qq1HWDmRHc.JB[V^'6n(KF(lF$bR`>cXMSZ-]nC]bQ8uJk!O[
%,c)Ri$HVIo65kT.UTf0g#R%hj5c^(h()#(WWVV`,G\4BU]hct^cH;8E:)457'V^(bK:sOknTH893!+s\6_\$JE6VSfZgKl+UmnZU
%UYN?_V#uC]]L4!j=Y?FDYj7.^m%!">&N,*3aVBFH=_5Gh!RR:f8p(7#\LFN:.hl%lT0s89c\sm^4O8!d?s8p@#.5HQi*kUK;;Xq#
%(Ej_(P7,><k<C8oP<gh5pU0e58S/n.&lXlIpbEu'!`Ok]L!Lo6`glsgNIu),Xbf;@hgq`]$dqrX(KGK\LBRKI`*Q:.,[d!kq"Ss`
%*B`*1\CAZR"S;_V5;BrEMjrf"lm_J/5GOstb'HLl'/dijZDc3.UX[)\6IJG,X9ck&?BcrI9,Va1d82!W)%LUJdig0dZ:)EC0S2tU
%n2W2eU_=FH08)2[/.Q>U1@)eRk[LMo7']N.T9__'-A<<NBa<XnN(eX(<fIj[1Lq5q?#<2527AZ%$jeGNH$Q4G!pBZ>*fMKW;#)QM
%_)`_K,?#Yg9Am9e>RJ1ph:4t>_76ib4c^4<8A.IIR.=1Vgk=*1J80<P_BTNu%&lLuXq=?#8!KgPeK7fl4N&\$7%&<S>@nNuEsirg
%s![&3LIDPWK63QlV"@/6JiP<RO&hcc!uO+peW:4&+^YE,J_D(U+kD#(.24%;$Sa&<Da7JM_o&PXV>aj?-+VMUN>9`!>2?t"D2dPA
%'9ie(ZW>Xq\Qb`,Xo,=6Ig^jW9\ne-@Bn`b6KEg48LQ'/V=i\:5`0#n1R?]?WU\>HhT=@E7rc5H<f(ob;Y$]1_N8jJBb1^%M''(+
%i'@c/+Q_2hr)+_OgE8=i"S,X+1+At<r3rV+A&nc*-'6J`9@?(gC-rT`'O#MeP(OGKA#-eh8&X[Xjn0bd5@MG41.#%HNuUj1So0\8
%M?jYACsY/Ij'i`2.3jB"9Sn^kI7fk^`Vss)^iYNZ99]R4:G*!Bl(G9eS29fd.-!'F/V717T3*M0pr),]-9qHAJea4WogZa-)7j9\
%J5[O/lh%6)a7JF.K2`-jZ<tHl5qTQJ+BbI;;*6M\5iPj+>nZlGY'Z/("c*86"qJOWIScVd/P3@$H]DNV'$?#p<_*FF2g*@iE0g[f
%]h@r"#!'dW*?*kKR,#h$A0l;_":_H<XV+UT:s]]"Lg?oU-CuMQI'_fF7-pF3T3[j#66F]N!.KKRPEW5R[)03Q$!Z`EoV\'%;AI]"
%5iTkn:tdYkkedqqXqp.[7W8nB6e3Y*CZi[REDYW8<a`lRdbK\;_@.H9AEN:*1KGT4m]I[!+c6E[#"g4fqo)@iV.)mrMd=H4ltEL9
%ZPRTg0-4't[>ip?Mps8%hchNFO$YH$#sCHB94Z/]kJ/;EKh[SI<%B[Qnm2/u*[L=c1nnB!,/4KC66r%tl,JX#UM1l/pPAM9%=X0a
%E?Z`b:/H`TMZNH&fqRmN3?*AZLgqlo&WYU^]1FV-!W/9uP,oMg1u:\L'0%O*P7ENQEWbhH`\nO66pZq)D#'$VF&d_44,/ht$@jj.
%pg?J\C(SqS5n$a1lX]KPA[7Q;1c"E.[6ap?WJN;d9n,q^R1"TjNKN9C6LW@6BJc"QkAnQ%c&]NY6op%*[jCLG;Q:>t\$;*Bd\jpk
%;F`u!?=GqTY"r)-L=eOQ1)BjiA3ffDAs,,D+JqY]q7gc,FW<'E8I00IZBa-5aU1f)/>Cb?96C:<P-hY(Y64rA`0\`0nshro.`)u)
%9-a*N@KiX).M,l>;Nh@)%KiOLUV4HI6^8!%EWc,NP<au)0*$,8NHj"\kfuF'@spfi`5NueN=Af_OM/l>1+5oY4>H(m(sZ;nHin(a
%7C9PJ2+$bNKklt&M"s7pJlmrS:m^6lNMp,kXs<-Ugrmj#f#Z%GP408\3ZOl-eNKIj<ie;uUk+1r7)R/n8UNf7*#[:Wj]l6BGXV^*
%/M(#TU^0Gm0JiFH`6;%:P&S=cV^$5<ea,jP3UG7P\8F!RY)=<'gHsPk_-sH;'cK\a#!-?tH@^=lEt;s+6)L:%F9HK<Zb^pQj%f2X
%K[m=e<?TRj0@3EH,f`_Q^(i[u-M-3;P_9oRFk+)^)UgQE(`MY%6i6K..%q<i0VG&X$GSE]0;"U$&`&DE)q[b2&XJh5pHsrP,?lR]
%W,VL06_Y)DBK^rW_MF>9;5%N1W@3DL<\b'q;U3=%eArg,F!4]H?*UM^dED]7FE%ZM6fXsNRRE_MS0b:A;"nQ*>"0>jOk!8G:Po(r
%!-!%;^.6n"=Pk[?XS5X?EA\An-&W^?(eAlYYVfNEjO\tj\'Y^o4)j)NE>kAZfjQ[l`7>heor9(k\Us7565bs):h$);,8d<%;UA81
%EOdD/bR\.a$F*hLau:_%.]YEE[6\\3.("f3AMEEH+G^8*a.1VsrhaaJY$+Q/!bb!;eI/e)e,jCF8ML=j^uGFgN(E]WP>Jm^PpNCA
%iE_<^%!'BXWIaI>";5rU:E/n)kt5J?'$6$@L<6E&-1SiR"s(`@3$kJ1acbTW1H-i+3MV3J'oN4HI00&XQ'P#fXAe=\nL!1K(9<]%
%$5;Hre\nD?U`oUFq,45pJ[257N-SSo.bO3\pq9k^DP6W[Y2j#J2]<]n.Lb`+3q6=Xl%FJGKQnanBP"BW>$m%C$d9ruOB]Qn((B*?
%bIWG)&PV.KCklmkdb0KO%Gk'[ZOrmpm"l(cP6<s;#tFQb6.o5R)+g3@Cg:KC)I/0&kSNk`/OU$r&D>jf(h;n)UQ$rRpBXRu;JFmK
%9bA,TMTu3s#j@(2ZojbY<;ENLVDiPj($Lp6F"6K;/I/":@n!O)a81H?JpBnA<tJ%C@W6o3K-fc(V)(it9%jUQMtEpL]!*,#O%Vd-
%-hA-Ih-u)rQSjT4dTaOR.A-i,4#XBl`L8,m\Rqpb9dPIC0;Xf$HQETKpnX'j)i8h<>l)sX?7L"5c_5iM2B2,iU)3eDfaA(:<b=jH
%*1[Tq#K46)6pPt;c"XP42b=cKd4b-Y:0GmK%2OZ^K#A8F/?1R&E6LldEDR!+%NF.1R^U9[!8p2B*bbpoTeW&s.E]&gb)[:,Z=KD4
%;)gEo8[XLB9b<[?aE(mK7_ttKBu8QWPS+&W)NiF%&S_;$!k':.od2-C-h*8nG!p(N`H&o)h6rIL,Z(QFP#MdrJ._q#i#,88E]$dS
%_#FP!#b!N'L!G?XPU0>b!HOfOFo]%fCcb6[!pt[6NP?0a&Oq!c4!R:n9Wp_K)Ttg:TE/ehVB7iuI!1[`/P#n=:mT5BKQhU(aGu"9
%UY=^<5+mqC!($pPBTj-/K.5'IckKls_+KZo\f8(CA.GSTI""s7Ml]\t,Wp8R2K,Fq-%J,F*MZ`G/9@[a*[Ln6&jYZ8P@3Am_i1G5
%LnQ#JOM"BK0^aU34kbeNcJ1!oi!LnH/soK3ODpq>',@Q3#T;cE\VWAh.jC92YFU>7Vk%Lb&86<Cek'@[._.m-Z[a:;MZ_\fo#;#p
%eO_JQOfEA?m%H5^?W&?E+po#>iUZ!1(4"DeI6D`[guT#kn'X=]NQBXK@Fi`IW(Oh@9&:u5'B*$O$mf=5j*"Z2_%-/V&`F@NcVW\5
%6rJ@R8!b&a0UQR))C`H]/nUIZ^Lq6,-q&GV9'oB<MkKs#i(i/'LT]^(3DC"&KjPi:RMriqeV>6sLTSgj-8%/pX2),RPN4=3&5]PD
%:f)ZMW[2Xf@pgSpl4pp(I8.em2Ct@m68NUfCeVqo70jdI?8DDp!!CGq0II)3'[U<J2#r:lA8WEgJ7k#t?kg2e"DO?+W@3#fb7,@E
%fhTNG)2HrmP-r)?#sjK.R9&UH).0R3Ac37bE/g$AZ&f:>('@e9kP>Y)WPSVX><)E.(brFU%3dgF7`$oDE]7om9G!!>K_Z.8,;7D9
%AA]ag73`XA4oR2gHD,isJh&FU!I7ER$kU>@PU@n:o`FM+UQ3-O,mts*b)586HE79j*Xdg!s%,clAILVE$0KZ;_LZJ1pbJ:M4#KUA
%[M<m6X**VY.+PiF^0qkj/K&(Y?1UW2&F$"\P#,BK[;NDeC=*^@g0$(H)`[/cO;Wo8*I8]<^2WNTZ^L'p!#22q/nsIrns8VgH,:24
%P9^WH^a!JpRF;K2(<a09J^$go8dfSW'n@XLq*JM'Ap/(=?lfCpZiq;?7JMS.!PGN$Pct3ZF8[TQM/^S0>t?A#iT`]!OY$Sq'M:.C
%*g0JH1L;]?KArlWC?f$q8fUap[.%g>h0R$l@j+e0B<ir#PYlX,Xf\8@8H')CS2SGa*?\7Z0`dnAk@1P'7$]DZ4clKW[6d[Q^OWfS
%;VTginNL"<3-`0#QRS/H>7S+oqpfD'AuDF,Uf":%9nfl#2U(9;*=Gs^A3Jt#6!u[/OWGd_9`nsdXAk![L;d&k\aiTr&p;u66&T_N
%N`J>U6HVC+;GmgpK#!ol$a[M\oFM&OBFQ##FcDt:P&(BQ*O<FFddLTQ2_.U3,B.NW"te(2jgMG,>XlQ&BEgU-jJWih&LSuiHHFJI
%4*B14"eE*fR9(MBV*B!A3h^`JqEKPEYZ_m&.l5S,gYu)*R"XO2J4StmCR']!"\kqg`Sq65]oGr7QQJO&1\mTL&'tT<nKB,].hl1/
%g4kss60jtq:B41F<b=6PL+(_@\-b`NnA=\7&a"e*e!1X:#o:(X,^k:o=u1ZdNA?3rO;a6=30HWVIP',V'7[U!mB?RWE1]2u;KJ0<
%6j"(L/QN5*,QfaO-l8DKXaEAkBqrt1R)Js!3k1<R).lcd@j6[s81cm)Q:6Hs\[r'"]E#%nb%KD7(",[NN&&0Nmi-$UkYid"933JK
%GsOpXQl<8'HgtPHiJ47QWkGMK8-fokqT_Xg6P(D?HnnV9p*uKAqI:&:(<&)6q@-#$dJ?n#^4;Om.Dq#WbFB)c3GXWc)<!p/+>Ngn
%pa?797XRl@OJPErBbdtY.g>E1>;Vn6L=JV\2J=`TVhS+.iD%ggA>N1j]_>,J8YPe+=&2&]Kh7HI`,<r%nu/97h\@.?0i`;HBp'qr
%NX:JYK\CuH7,c^s7-!o&HP1$q/SIG#97YN3Z?n<2!,][@T7L@=!/lrE@#M9l*5@S+@Rm?L5JAiSJcbIF\"2MK0k)+Zo8kLrX]@a8
%%#4qi3k-;MM7JVA8+%[j:m$uZ7NeNa;h`32U(7mIasFM_dSZhr#DO22(78MQ&jJ%`F(*E?k5ZOI<jJhjX4/&M&BBIudnh9;]HJ4;
%#9b<P^"ZZ=\Au&[K\4FQZTb-*dma\'4j-T1%hg1SCpIb5EY$(ggKLQ_Ym6UAkHuUTALCLjHonuo'==!#Ef#km-"WL$CI,6d"ch$S
%[Xt1BXTfVeb@H$8WH3[]/bX3hpfn^='dpSR#,K+q"P$(/i2%)\OX8[$3=]3?LISNC.+SDr=qs)skfZAM$<hst3'&mTe`]J#(oKP2
%Ldr#>rSb8]GFBt96r^?-p*@PN%Z>pu!uIi1^.*5X5U,9_3&'[L7*63,bB1F;Wdu9c%0MV)?O5;OEGf45,d!Ph4\[#gA"oM/`#e&J
%iO&,<)(G]l"F3aC4`6(/4%Z+\JllW62R9?.*RS5'7I.&*#9,uD,;#B@!PB8T!Q@%&XI(BXHqlY#Rj96*-;CNuWUM=c.QU`i9PWk8
%abTYLUf&M<jq8$38jZbOiX!:FYjfr+&nu5V-61h=X:0Vj8Zj[M-n#[RE^n,XH2ABJZ$N#I]*.F:]U/!gi!fgtka-LP5pK-iK]Hn[
%6"g[--R3V;n3."Q%)H$m9d9X4@U,fZ&N0,0FM86PLL*<cM>RQQak5QCQMb[L!Y*&l85$fiR<V;OaMMLR,,7]g+%?&5s!':?NN,S7
%$nU#-OlRH2$2R!"Ot=kbk"\Js)b#tRq7p5<('>^?h'br<S#\WaO`WDgSG;=,+(\]s9?7\H7LXeecu\&Q];"-tK.?5g82)DY1kr4d
%A_86*^g2C$>l:&!C$qV>e6/o4J1hoVH![k+FX]`p_ijuCM\TtP;opJ?CK0l&j)W-FWA,qHfX8BgEi1#\QC5'2=>>CEel7^N`=O7\
%1[SAshmJ/=O@HsLPU51Md9q_)lP3dTq&.]2N(Y>XADkcA7eO9p%mR/)\XW$e[YKNfRZ$ZW^LB;.#cU$X,^Bfq/'56hg;1N?9[Ahk
%oL'WG'R>LQ1t<V7V`cJ5=!bpD8>.3Mh2i]h3HN-!/c9k7W!PBToQW&fXjX<Cm!(L4gEuQgG:cZcgk6Y#dMm"L.A@MI\>n&'Q?Xs(
%`/MaZ;"AcFB"Y"=`+p])GiDA<4V]#e*@#K58qgnl\sWj<?>W:X_W10^2,(rB5cC+;<$NGHFBp?sPQhY,>3++m=n$*#VlhD`K+[3,
%gN2:m7QQ]8%QX#tq/W-?.27%&*^_U+QiSjTGu5m',KqgD.#%\][mC(EO6H&*Q?_F=m!"R0\ZmNs6WH49dtZY%;@FTroc;_q_5^P'
%n*"l_B#8pcLRBn]0qq1F&/^afpQ!UWI_pDt8!:]Sb'Rc/(Xm(^ik7.("-IB*nD5%M_hP&'nD5&4%t!2.Gjef`i4kQN%bd%uf-AkY
%ek5d2-,")re2(.N44JV=Ht^TGf4$<DSlc<fLsC\.NUkoaQ@sRp1#3kQ'I[t&Cj3Aj,quV>Z9&\Wl&0mZ0ikR<L/kbO5beTLE2C.`
%[O0hgM!;'0+X+^]L$6gLb&BNi\haUZ_Y%5kmL1;l[N.'XjU8V.Fc;^UnA:"0Lr+8Sks2gFA\&gOL.le8[]*oNA)kYZ>o;peBdKU&
%9QatJnd-e%r]tQH@!*6f]3[6:]+Znbi.^QYmm:_iA\0b6$0L&iaE@ff:_4GS3s/.(=l7]a5p@0X,J(L7>Y(l.V7SMd\PI*0G6bBL
%$l-?8"4.,dA']@3aE:;D\KTk$Jc?DBqoX*fPU4n$<5(Ge-QsLD9Qp`W-Vl5$6?`[%-m?V^I!:<->3+W]o%a=Y9$$dlmZ%?DTX*D4
%LJ5Z.ZeYYTM86*Um`kePMXf")h47u20CRIaG@sHM!%2WW]/-tF+9?RXGA"u-BgPU>B*nc3V7VAU<W9V%m1*^[`/u]hG=;*J45l:g
%cB*;_.]0H+&`&ElG(o=D2'Uu4(pi$Ab_f*D8p4jg1/,tfV7T+9Q14Jl\iX<6a[@Q5*?jWELcsQ7U#Ssf4/TVG,b>7RFJ6<&N`^X?
%6?d(0?g:<\GA!E]YuJ:r8A)G;L3.X*,Z&@Al0]C0[XQ):L[$)HgXqDre7[WdA\00$,'ggjCj/:C+Ou.Nh%<kR_32ZY-PC2AFE\q+
%6XAsEqKE[c48EP@ksDdk`>5iS6?h&UTTIo":BuL3IRL1Q0U#7__8gA9*+SWHZJ?B&4%SG.Cj287`"bFE]>G['>]XJg6iDqmLF_,M
%,sE)<Tb6$"16KP`?.eRq`?>8Y_KKSVL5LH(FpD+te$ZVs])rfne!ga"SUa:T;mnc>8IBg9eoq/39g"YomEVqF-c?>IST.DQH%kYr
%'%8^D:NpGR$:B/a89Y:q/g32&FE[jB,C%dqmLG<eK(E:3mR2X3$f,+gdh1CVJ09NKYgD2,X\C!KL$fG^<mZ._FE^R*_R*2(m\';F
%,r;F1_s'V0\Oq'YL`r4uT'jl8)Dnf7\iW9'LOpBU#nA<h$aW<EGE>Fo<T1RMEsr3e^,qi`7&M$rh;Ok;T[:Q"B=og&=67%M?Ff@@
%`'T339JQ0eGFV5?H54.U6U9tW9_e%KrlP+>q<i3$bAn]ph&5;APKBoqh8/Gtb_ds!G6TD(e"?>]G6he+f<a967mPiY6aAf/aI,n*
%\F+;JBJhYtcu,hH)ON8.S^:H7T'-Xm+@aBW4En$o@^6Z940CLYH^6`1"Q&bjG;0f'\fo$5;W^g(;Ann!o1JSO6?!0>OVQ4fIQN3V
%=;P<-m7[Vr"aD7^oQCd%iP*ap6"7no?KgcM;`<0^h@=#84&qu`1C,-0q7=r-5p0_#,C2FF#\0N]h%"T5M*VN[*Gl^+`p)1DJ@C=K
%Y=`[K9'EsMgT=cAn+)FMG6&`P3],g8gifoZ8P*$PlsOE4X)]jbRc6LTMo-SCN^sXH.OP:eHJU[X-*+k;"EjK-lH45XMaEj5=&kM>
%,7fRFpnn6po7Kh8i;,pEp%.-tFB8k6,XITt69VXqEV9f.M99XIa[r4,1c0ZCjN)A-&[NKdRg-NKQ@YrAH=As&qEfsrM="\hG!)i5
%YoW,NKX.QggVJ%BNX89E@QT0+'?!:am3#4.Os.$"l',;T1>B&Ng@W%$VQa`pH0rshP#t^r46@uH=Kq*PBe0X58'H--XGaphb]\Tb
%XIONeV2;67_pP7N#O.2K*A59RL2SDVU(Z2uLA0,Lf?Q&U`Ls+QL="@\ikpT(%M-u?YIo%g5R8NWiO(J;4)f2VCBk6n"1u>!&/jJh
%3&fg(1JCi*4fo_V$^c1(ede@aGp;$sf$9L2s%7'>Lp2uPT%;2?7[#5j[!!#0pJGYl+NZdS4fo_M!j")M[=`0Z5a"`T#Dj5K.'9$`
%r__:-CEE7J*XmbRc7k,fm"Eq"p7$e>Ph$<W,6VUNCId_pbk7@Sc@F:o(!oed$)s8C*OFJ9=2K32A[S;96m5TB[=_c$!i%KPSKV6\
%Q[2gs!t57+fVc['Ku@bS[nk7+NKUJF<]`hT%]?Pb)</L[4(5PW8'/hN=RBep&3m2!g)4ALRL,r6H7C?qL"&lECDjDrP1i2QN5LA!
%Np(+XG*UR;P"'@*4fP!O7,ipM%QAhPs&DrYH3IR&:.Xb[$]D'qOP8Y1lN0*@Pgn!?*^3:Xm3)'KoTXO=P)-/OZnhhm2.=@8B8Bq9
%IEuS^p7&K^4ej#Yg'EVlOO9(tC?EBH7gY%!$_n^gSPKng4.+R#<LRt)R1*EhM>T/?["F_hkXoQ%S9ju]V4@W-0scj/P]hc^MAUY3
%4'Y!QSl[r>p^BtBa..;Wq2$E$R?94O_^XW9UYhos@^m#H*A.S[3E%?nN-CG/=Xi_H+ZcBd:tjlSP>@YKW?!n)#Kkqke.,r]81_,k
%cj.rI(HbiJTLslAF$sdKZ%eU1ed`=$4tj9d"D)2\A]/A><YJiQnCjRGXF_Pcg@9LM2>r)U0J##VQUZ8fn1Fe*NG.]5!1dbsO4)`Z
%71tE[d+Xma@bO1Q4%R!9F?Qas\.3j`4!"k?8rcI0Yg`tbTqljbf4Ql/Lsuoi)Y8S2W?"-7U`(h\G(uEtd8!7"J?j+7Kign50YYE2
%3$PadWR0]@<]g4YP3iUW*P?VB&0A13U")bbVmLV40b@u&+gr%.!?3B(G,A8!bXu\A'E_Ur.^:#\%Gq:I-FSP4&uc?KYoWaj6;U^=
%mDq4PR(O$9*G[Bs$s&2On;4fUdtHA6N^,@-'k08q;$="rA'#\)8qUVAC^5U9&h'ppgVKFJZD^B3a4bnrNfT"`:s%&,G9s\M4":Hq
%GnjdMbMlZaGkK!un355a?$Pa5FABQ-8o.!=M$0Eh&[<@piit,[G(ssNRbrrq0gaEd'IM%I1k`Pd4gU\f/DS49g!1/!&!kt+fhS&F
%7''=!4&S%7?&tB?#_bq6n\T*4[ikW7L"VLUj%4;Z.lmmiN0`gsL"QqKU>o3b4"6YsqesPlB3?:,!DmAi!^!%bCs6]cS-5TEULJg_
%kh+\-CraXF4mn-ZNYES?90KU%Mqtp]7a-$(+7lX,4gQ.@KS%cd$5,<b,372l1#!:kM"lOTfoA%!,]>9YG!n*Kf+4;:8Ad\Fd6_]j
%=rjoR(N)=A,79FhOP>fgDOp0omBG4HT5d897rAsb:SG318THu%*IfQ%+gi>aHj"[nWU5L.-Ce@/C-.5U;W'"1*O="Fl*E(uYt.FR
%DF8"tb_G?(_JCUL,&PpfgYj%:\M:?0db,l@*Xf4n5K`/Rf+.':Z7/8UG-"0.q,;P*#e*NPHm,pCdhJ]g`,%pX=(7+(Aii&3.j]>?
%qSYuAmu]<YnYTFpn2Sh.P$6+[l`':4!m:'OV7%V>%?n@1[2hgGQrZAE[NfNW@?D>L+bJ"F102NaKH@18'660bTWlG5P1p;n<Z9?>
%:&P-;GspN$L5nN*]S2C0m>/0h?5IoL),tE`V72(`FK(XjAWr70LrjLfh2W1=[/CBE*JoT.-9Is2,HHMDe1&'OM0IZO$I^D5O6i#A
%]cHRiSbh`@Y)TKsD?6TC>OUgo&*ah)\'#6V;uZfhs-rob:DY\WpCm`9^Amcpip5BpleJIPcW#@<nmcR_i*S\IkfYp_[oWLqnESia
%fC`FAI!P;+9)l?bRQl2TX?Q[ZULs2T0->]9mc0APlLQt0WtG3@eT\dfDuV3bl+aOjQ^(qVFnHjVfrSNBhgP7D`udH;n;/HY#j:l!
%YcV#ordl>tL\HdKr;+Cr?28CTpolS%Ig=LKq81[udFWOq5=pk;$8b_o1k6*g2l)"U_/OpL"$Ng"EV8/N2mbsl*<ds6eA?,ONGORK
%i?pjho(nQd5NsKeI/5=XDu'g)5rX0[jVtp#r\_=ePp2Qer*@oB?:X#j0lNnU3@i)(^/Aq-`Y"JtIDd>Uo<B:Qhk7pf7Hn9k6!3%6
%ieBBVed?01YL0gO])WbDr6B"l6^"27?7oOQ-jo%:ZJ_bO(M_uoE8um<)b,a>DTp%f)8maHD5_Jl6P*e_?B-s32s8X9Z+9sUWK@a7
%p;fSLAlSS6Gh3koV/gOW0e1epJ:ajA4qD'L`KLV-'.l!67`'.THMME;Br1<=XYD<W`YbsMHFXG#pN+1tWUor^2\qDm;rqeS$,(X(
%XnH(-?M.bWG7om#b<%GBV(m_"eb;OEcR58bnb_bO^L(4cSY*Q";%*o<Emr9_o)W9g]1rW%'cVpC^P_5[^n:J`@"YCB+`^N\HfH'n
%kVuJfg%tHhDYS@?^]+#'s//KM@FRfuL``B`gsN!X#-r0,'iD0iW="f!FA<o/o(mJ.:Y7k8r6G2K'[c!t:(l^?hQ??Cmfka\)S]KF
%o(;tVnOM,q)(_-Srb]hiZj)96Q%h(3qnG;F]O<)XX2E&S#i73E;m2'`<=J!R.U%<_1h%$gs)^GjO&cK"!&jWAh*n^0h-S<U[<EF4
%s6ehSrdF_-)g07!=JhsXJ,K#ts75@%Zi$ha5Phbd)5d/+hu35eQ^9@$puen^I`js([ef'Wk@YV,+.qX!?Ch)bmeYurc0]?&?QDk5
%3IZC&p@@K:Xoik?l+^M/p]$'L\c29H$30OZ]MST=E1[t2o^gJ`4+6Deam"kiYA\Xq3gGcf(6f((\>AW;l-)A)o])RUh1]3KFQ(j=
%FlDnHs#N0S5.l8enM3&nnFEFg+8"b3GKAYp:9WR#khG=cD=qr+f(nG"jn7pW?..oEeX=b`mJG5UhRl&KhV?q`e!DleK89FcYJn,N
%':XV$gcZ!/*5+N2o@:s4^H8tcT!KLdcYmTnYMWXaE-LKJ:>W]HS"oJrKA5[O]t5p6n'8[/^-;DhA<(7>5.o,hH?Y[AaiWA0P@*/!
%XnqUjFQh`Tg[!>Sj."QVTK@)fgttlQAkgk?l']]VVB2,ZH>rWKFn3#R->h-!gZMuq;tTJ=];stU^K_emH$t!$is</^Es,b7\sb^o
%\4M1/qdHtcOW-f:d#H4--W`giQWH!>dQb>)rUTmWr6=?Xe*D;6jcN_41\0r<I/:h(X4:k+<Gq!f6-E8G\]QL*\XTaBI_!TY#;beS
%b=ujjDK7O6le^IY?<nT5-CfL0H2;]pb:RqKjY"$tjd*O6EgN8(OSU>IQ[<>:^hmsq-[,DO2fE-lcV<TljQD`5DdOU"]_l=I?'V1W
%f=r\PnB\TW]Y/di`Q?H(Rf,@darEUZXa^4fp?nfAl8RST[V5pCjlkOT\#2_4LH"sF\*`;qbO+D]1[=';&#hR;Qub[/gu92/DgUi`
%p:>YElKu^d/\>GPp\ItXgKs==)6"Wphd*oV3^3B5pulOS6Y?8k[[,Yc9RLA"*abLE?N%'7?Jg,P)kEV9cKh5f\#=u;e;^qU:6*)8
%GLO:Z8$D:gRi@oIGBS*$r:8k7p!LaK?EO6<C]/&2GOSE.HujRQEj#uH5M=Kn8%oZrc&=CRT,E:P5?keTLKV=CFUs1o2];48'\fuL
%^:l_C\:-0Y_tD'jCW<ip<F=tc\sGn4m"8s6O3i6"3.BI6J_aXIqf_/5?^,'P1r'MemADt6jej]uPo3*H:H(:!7XabfD(u"Nk4HLW
%p,q-[cVYe.[a1)6'-t?5$,?(EimH<@p$;45lT#Wb=(gRHl1NXuV`3HDQc!f-0>[DQo\N*#Ci_rCH?/]=#tAqgXe#8,m:jkdUUFXR
%nl`8G2ET;uoOc]\BX=RHa-1n"-Uf!:Br*RJ^UuZj]K/(KT,D(LVk1q>%V?Du?QHgBI5bfLQ3XmGf6f&N=YERsNol"\pZc?K@q,-Y
%-9Gk&4g=p11jeiblHSY<ZcaG'S@CY*%=),lCf+M#Wk=p$);q#WT1+$RR&eS4a<c693pVP=0r+^#hcm&-GcV@ga'#XQVIA(87Pi)t
%g=,?d+6H[cqm,I!jBO@GrFj7?UUGYb2q5P]4F7Q7E)V5/E.Q99^"@5M`KN8NBC1Z6cPlUf`j4<f'6?o]m\?nmdYVmSKEIj]5.\6`
%3W&O2m,WD_^Ld?kgZm\Z1EqPIn)*t;[X?eVEVfCRg!T?3q8pVK?]X(1jcS#nb(!H-Il*obhE@e7iuG\/4Lij4AEQad)/cCd;=!C8
%q/nL1nU#7]QnpPq@So?[dHk4YS"8BdDmSS8f=1UH@a_s.qj?@BfGbP`V__+44_7)Le^`dWS4kCr[]R*10pU@WF3^K&mId0`aV#Qh
%JAK>aa7h+1D6#1"V\^^N1NLQtO3WdcH9!>fGjsqJf%>rWGrZ*a8=nO92m,o##J.N#7k\5@?D%3ZB6*i=\(.OSZX8`ASM<G+d()?O
%RX%$;PM>BNX-kE$Y>3Ehk,#Y\D6G`3QPX_/*&sVKh3-DG>',CP\(.Su<nsp+jl9^R)gD$qr;9T6(.T1=kHj=4O,qhC-NMBaXBdSY
%G2e*sr0/s6k&b3Bg_Y=-M)&ibG(!j_C!+6OVj*&o#LI8.7G5Crq+9bDbh5kjEqJ^D0$4UOE_g^QT#<oUCM3!_0$<]_b!h`IR3`Y\
%a[Q":Vp1FL75;Q0>a/A`AEQad,o:,_Y7#D`Am[+SIEt?M2&Em=eXpS/b4/EQ7@DVmIG+9()5Z$,S=3T%Gn7$^c+2VJn@VmA?HZ%/
%+6(<>9Z3^7@[ero;YYs<s4d9T&5VEb#PJ_rj7tRQj0p[45>M_.qls"J[]3HuLGH4"[JT0q\EL=<6a5d^7B\:hD(kP8T<>J11"R1^
%D3rf,#o;d"eJ>915HV@2CQ#I+BXL:04Vb(WN!OjHL%tAE%EXPPpoP^m]a=`lgZ\Xk-nX1e`Xj]UB\>kM2%uEYR$!@VSc35%6K6qV
%D-:Da&"]Su!l$qtkK2E/B1K^c^P/,s?!GLM(GAQjSR1*q<B83TH?4+KrP^=4MSZXRRd)8RL%=pHcqs/uc<aqQQoPheJ>$eY=&0A9
%jm(q)o#B'a^ef1U%-9+:ks:G.[\NOsjtkbn9Z[7gXRcC>QN*KTs(D-L<f^2>ZFq3uI1Tb/bqs`M7"l`@U:Zuogf[&*H]uB4Y<0M>
%2#^dPNa:Q?pPp<^HqjEr6iI)%U[;$.>b8^@I%0T`?bO'C:]3b2[S93[]_$(p[D328d8+h,bYMHu0Ja]75M[#P)YLpbd<(u-LRV20
%7X]6f4V'LEF4:H$0=kmo:<2%Brm%-q7ouV?YKp"Ik8a/AHU^13pu7Js,kj#)ER21$.fGZ*^Erlk`..71b>J1]$c%D,[[*9Tmln[>
%T-P5m'*#YU6VI@O;'p%7s"<j!D9%-?4X'rDS'P\MP"X#C7pSDBmat]P^.Z[oM>?#_/tHF9T"]ODmd8-fbDU2b>g->\CVSMjeNJ-:
%Hoi#*IJ!0?HM-UGg"GI?GB`H@oZ,S8q132!J/+X&]BKj7Ai7e/jmT?Yja5)(GoJu^j190\:KlT2:ZtWDh4qqV[Wok/&)$!5eI,[L
%iZVMgA;c4ZXQa>aYl!l9'8ujr+0SF7/j@HZilPj/+?oboo!=ra0@*Cr5J&t%q:Xl[dD_)bmDXR`%EP(XhTV1ir3r*nVSTTC4+u?+
%I6.4se+7e82t?L![T@`pbANb%:?dRZ!H#-mglsJQU@CS#g0QE/XGiaTn%gR#LRiTP]R=jAS;i]48#mW^;L6-;<Mr!pLEh!@-Tf#D
%['bD[kF6;4hQ);-:DV!oicnTG08nk%EP*i_Qc8L#3*u#8G2[$Fa,>7Pk^Q_T00=O`>oYNlEP-*`Ils8aT:KsEIB+0U^%NT)lOL]$
%*f6dq;>]G$-6CuSZq\fPhd@+=!!3q?M;@C5Y(KHm!R02=Y_f9tHndjjDYMJr-]9g$G'a,[dHQYip>p8K@>2-0Nk7"V]7)_'"XKu@
%H>;Wh`I$HlQa:\dCMlFGH<LSJpR'P9I;(uSg=A%Xh;AuqqtfO<jY%!5bu:[cT7K&2<9<S-8[.sNlnaGA?f%SG7u9q>gtpJJdt\fW
%X*eTi\&Zd0YKL"NhO[t^2dDodS>h\GD9m^N55lVl!:M_U:\-?GCGYR<@?CGUPi[Y.%lZ?*RX_kpKt]a=QT8"egt%>Vb_-kiR:AR#
%d=Rh=M)dKD(/:aba49)B3SW_`e!IDh*qd)2q_8kjjX932Ll3?bO7"iOn&K+6J0/8r*u7)\cJE[;D9jkaN5^j_CGW<l0c!!nT(k$h
%+4j6Bd&rFAV("S#qq:KAVnQspXmod'Y/h,DDbp@[Fn4GY:+hRi(n?fQ\(.tJ),>i4"`SPQmej-Gl_C(b'i>J`hH$O\>oi#RS:,[.
%3iBn^IWoGFlKbn^BCP<]l1OR@cF/kI"4-r5oPE*#NLo"g*VIq4r_j">RWB=Y]"1"rA$,7*mIauoS&t?b*,T`,]j<fm[%mjVl,F2b
%?qHD7;%$LSXc%'%^lmhb0HLoYBm\-tqnND!QK..Hn#h+aGF$9q5FmD4XO(7fGV>^;\+XB4\@,+5mJVpT(.[U/:WASjpmT["*DcEu
%dtK+$CBqN@o<usD,^]3=aS.XDs8S*A9?fcoFIhsRH)dKu4+9Y:cJEj,YOB%</ACmDDY1nddluUZ]A,NVYh\B,gY?h=>AeMoE>;Yp
%F3AE<\]rrVS""DYH2>"\))qcBASr;:F#,.Xmk/ZSC=R?qgJu4s>j%F=giAt?c0JVZ;V/Hljp>;Vk&k.Ddd=o:DV"O7T.Aat]=`Oe
%j42PIoAch-kFNTu`/I@8!m%VE]BRN@qE:O'gO!1^"Wqg%Q.SH/M(No=kpW`j!Q`oR2t/@;E^E4m^OA.(3r\BMQ&%'M*$(YXs8'KB
%H)oh/s*?TD9rQBTCYd6G>i(ru1p]FDZAnjBKt!D\B^S8N`DbrDmcE5nH.j4>p6It)c_$M@Hh)Q0b"):*nq)8GF)D<5?YjMoc"<XF
%p@r<eR59/8>J9mpodhA?1Sm0_G2!lmm+h4<gZm[T9TlmRY$N+hT?Nk7n`.drp,@,(2F$TcS4iGkGFuC_43g)23]YB5S*:t84M/!G
%^s,\'8,mXVrbbbaVEVPmr_Q1)!L)]Obbm*hBd:9X(L@%#@lB!4i.W5(HYL_VQGI#JCf/g@MkP?5XFhCWLskg?gl^0;ZF0\V3:ojZ
%s7FVrQPV%Dl<sXU`@+oKU.7%t(7XO()tL-!iOq.,m`?E_j(I_AVnD%2r'r\t(2*C=:<e`Mr22Ook,0g!QT9K(.BYo#KAZ&[g]S*C
%l@[jU>JX)o4YuAUg%JS>FRiZ!qf-i[>WfSY]mbBY15g<aYKk1pe*F2u:2dd3/r/Hs/%"DWgl6U3ottdp4RDq'3+#JKr4.'u)t7l+
%mf&[Ph4BW'kWrOr#'\V]GoS-F5P+EDXk:f3n['^ST/+(GS[^+q)/NV=h\KUo"dnL>[aM2's(qO1Q/"NTr8X<h.hD'#7bmg7lS&(c
%Df<bWg.1OZI["1u!s[l$.WE!Y]<f\]^Y[PHh,Y1bbM[`I&0Hs?&\$"J[.bCTc^k2/`j6P,V4C,uGW[Y.<k@nQ#HER8k3h,:OGS<$
%BhrcKm6Ru;aX,R_P^lp5gS5oi5D_YI*mDmSWrt56*ITU.l/>%TW$^</?*s>1oi!nRZ.?X9F`R0<e#PuZk3QSSfWJhrqQGs/3'6s1
%\c0Xse(^=.2WAG]\GlEoiqT"V<$MW^eZ>'J[Qht%0Di<(bbE>TBpB]V2*$=k*0^U+mHWopmAi6@$9Pc[mq:2;]TIC+>*-_nZ&KJG
%e$NCRH?"@LRN89<I=?@Jgi2+o]e1b"O-=&K81h>!$.?S9rbn\0r_F=`.iAt2!M]%t]Y+##^P*LlcW#@<o&JuRn6\BYkfYpH4oE?=
%Im*hjngq6r:\j**Wu!.eY5e!2ZhjU[O.+UC^O5t,]COikobIJ(AH.&O/,o6lnt5n3bC3T^B(ad+J,ErcHC99]h)?F*oW2nHG7]s@
%V7(.M6:c!::9dS"NGn/KSqYQ3(d-OjHP"r_N+B(OB^je3Ip^1j7Gc%g)SWQ$s'"8^^0bIBqtpWLR!/+<b"\;<[$Qcdhhq_6Xm[8'
%Bs%E]5Q9m9#E5/MkO:>EcmO=X^f8'RrHNJWnhchX/"9?4BDIaNBrkSt#;5(==X7/kpnmSP:4iE4@@gD1%t*[`s8K+t72h7mn@>Mm
%K!8H"jsbP/(*"B9<rWmjS,XqjQ="YUR".DgVR:Dt7`<A;"<X)8`?2\D,lAh>jF^T`G;Pb)$u46eFrm$4;B!Vf"Ci<c':LnDQ,.oU
%#!8-em\4%t?eKU.H0&G8]>;ft*tM8nK/%[12J_c_U=%S>ESo.BQ%L-[pHJWVc^<NA-A,f`K9P3X]Pe$q=l/h@$1g?F9q#_kNk!Z*
%SKRC>W`pR9G5-Do%_Af!UM!Mlem@(R-BjYERp+]0m*f/<T5Pd:(L3O2qY-%8qR^R-mp:J@;-\P?LXgVKDmPCkkmLKeq3=[$?rLCB
%W=*tnjB\ZNh;kOF(()83?eZpRDW1J[8_<&uf!r!/N&H(r)jf08%!DPZ?ANi=e'tP3Z=KDddW-q+g??r>P0b%0lgiVb>[Fto:$hXc
%?M^A_qN^D!T="nQDqL>fe0iX)\*Se._+(f,B.(=7Cu0ugj,KEjg'5rN\LB.WYCkQMpXa%Ce_VWQ(]>G]-8A5-TZs()E8XXnKukjK
%c&688kY+AlE\h2HH=she#BO:dc-p+<6'iOd;s7ZtBNB>=pHi,5QPY3=CO@0^/66E]`nt8$[[-5)0CCs0LWAl`e\eq)9l6KN4>1u#
%g+5'X^0;?Fh_BB#5s%,Sf/LS/;qeGSqD$PnedI5WZT^$cDfoRB]WTVO4L+;s)&LJ9(0`>6TA/gUb:p3GJTY4c/f_7GlG=P-XM"+C
%gu&@p^mIY=M,i&"["-;ZbK@95Nunhm;='FJ*QtrHo699Y<LeEap`u=WYL+%5Zj5/C[OJ$#;q#?$'oEb636"+A.$G-mD7MOAJShCI
%ZcmWb_Y#'7^1Cm!)'5;BM+cUd_.hW9ZqVTU\%]6@iU5F4/::L``ofQsV3p#-LH[Z5-L"VGo>EI*XR74<9d`Tgje%4=P4B"aLFM$N
%>LOU7.E#6@j?FN0JrBLh^O%s7]6Oks3h(=f*k%<@9FTt#r@d'klc/Vm6M3"h2elI4;I(='<r;=Ejm)7!UGjR$F5@l8LrWm;It-Km
%@414&VR'cL^VH$2=I)U=Cc0MX]S'h1<3c0OKt+GZ+0E?h#_O@gc^B>\ol-LV-Md2LH,$c<@C_)2cubSo$Z*8!gd$[dQcc"mpD].S
%/C#1^[T$HhCPU33&%g`),/Ya[/1ZBS%S%<;[7+C7/WM:6So(LP&,m\/hTEaE8SL%#leKs*N3"pss"0]lEO2'LGiW4>ZSd$-He?LJ
%@m/X`BR-)4/9GlP9ci]W.Hg;)5KaN*;<Ge=GRdZ(L<SBn43_5_j)u"*+Qe;cj"DG(IXZ(%q['k_EP]EI7h96]1saU$Yr"r@4-E0N
%-cd<t+[=B1H'ZNTfBJ&.&^.VeeYE]ee!(f/o9^4":Y,$;@V^_XqN;f9Gp*V\\^nP4GF0KJ599/m9gekA=Y%`H?`<P?-a'b(CXd/>
%IhrJ;5N^RhaKm'd?nQ'(kjYGc@8ot:rG=<hS!E.acgo%5YP^!_Hjb^bT-#/i49+I6]$HkF$M7*biW6eO>[?$Im?5H?@igA@>i6.g
%MOT[NX=!OYPY.^22QaqP0icQ?f8;\<_tDIN(@6"f\_G*SDLBP8ik5'kijB!5"m5mko._W8ciZ,;B9'-urUhfRa.eIWV=MUh,r^X8
%0=eTl%qbM!iT9/=c%>HXks%th^-9)RF`Mj]DQNkdFRep<h)*d^Y0^Aimd$Y6l]\B-DbbaDI=$C]U%hj^ioRA`<AjjKInf"hqt-AA
%UGF@N_*<ued=$@b.Tk>KI/e50qXXZXr2Qs*lQ686n(%*h;pCtfoq;a];#g+SoVK-3mi2T.`D?0M3YYT/pO5O'rbZZ]rq5+%e)SC`
%\G-+A?f9oOI!WLl?EC$<5eFiKBK,eimG@U>2nK-dH[&Vbqr"WmUeWpTMVd)&(hU;[)`)F;hZ(2,S:R0EX3SMh3Wm8E3<S;[Fp>CE
%SUn)S-I0E2?"[QTO#,/-FU#hris`#L[<BeDQVZQ!PV[L@$rijhm5G!/^-LTQ!mN'!i9\c2cMXcT!mT^3HpCc+h;epMM^rad"[7Si
%OLntJhWQE:]B^C%rN8*NFTHaj*/;bP+NMRE7G'g7Z1f3V_l'hYpZ`C_g#*IQMpO@J%]P#+_,V$"AoSm=R.Y\9VdA.=ldW.2JL@"B
%RnbkP2A4cCchUC\;dT$d5n^i<8Oa5OCd2#>V*$>,Kuq_tNtV\@WT2tknhG8BEtN!pKWlAh("4_-PA3H3V]2c&lB]YlZ"f.IpGcA"
%bg#Yu56m+`Zms;G=?-C,>,-"dSD">@[]+19.SESps!Z3n?9lDV)+IOo2ihSZ>C%L=-`55i>K!KWVaQMqYB\fZXFje0l8#DAY7G7<
%U^bVuij/.(pP)3r@RD$*]\0kA>:L#EC"SF5^g\DM)fk8XkP/SYkN%0>F6IJ3M^DPC=T5N@@HX[<8,#@u".]*sVj]^YX-ZCQLn:Sl
%mo6uG(jsjZcc3W?K8mj40]$1:\BB29E0P]hBP5#F59)UBZshVLk.lY,Y#SPE.dIcV#:E>fCZgi&Mgk98n8OlH[)KpGn'-VDhMhDM
%]pgFRhrlc^S[pLo@b"S`f/7iUfRXDILZ6gGgcl9gfIS(-SMaFqEg-CXl^DXY;Id8"C8r*7c/QCkUW^RKU>.&q\1?=IbA'?ZR@!LX
%".N;8TFSc$Fn9,aSWAh,hqQ4`/iPU/T1R&EjJ/aM3bXl@4lB&`p*PHR<0)=ha#jMUd=ccl1piCl95.F^)kAt1@4rW;?!L?0hS2h@
%<VcWV<L/b!R2')0_YhG"q`!CjlPgtE5)-^-oaOLeHAZ!.=k2>hL5.H_6G1bc\#,XHCf_@\]f<F"S.atMU:cac0u^fkoXSe6'n,,9
%Z1R!;:nk3=1mZTX-)p,GTs:>\6dYePrC'H,O5PU</F5!o^%+iRYpdkE@F=?(lA1j1'c%2af;T9*%r,1Q]^[K<RO6*Zn?DVIl`tCr
%)k3q6jKMkC?iT'@Ps@[@VO(u5mkU>NIBithQ=.QB9NZlQ:G8*^C^MMn>E`FrAa@/8[?Pi!Qk2?c3LgX%+e2rL(J_KV21JgiTe10\
%3%pe02h_oWJ+mpMG;YnPC,j$l;E,i<eSbjDUs7kOAlC\*:V;u831Spq'2GcQ_[3(]I.2)A/:RQk(;E&h[,T^3I5le9N/i=190C%E
%&l6kiqtkj:E:.orT[<<3KsUssIWIcjC^MSX-(qIF'HS[3(j?'\D6$CIKkC!fnP3*ao$G%O.DB:.=bMF;gEc6>\DXVCI#/`nC4*nW
%@f02q8(bB;eF)4#)Y7EZ)dhg]r)d4A-IE'O(H>@[`dCP6808er`r*X%%g=2gPln5@S`JUiS(E[S(+r]nHqOQebd5khF^'3l)1]%u
%N)]00I!hoO4=b>KPX+(=/o"e0FK%/MpFhe&7W@&i/.LHso=:-oo2I\e>EpEJ)QkD!i_Y=?,:VT2ohg(];&rD-2P$;6%E6m86kO)d
%^8MVN6h_>4#;N@*I<j!V=lRc+4KNC$ROt+$BVTK/CTCu,r;R=sim]T3O)2Wn6k.YRSgPr_)kP;5k<(n5boNGLhSZt_MmF]_4?ME;
%s*CGMl[FV#U\E2aOBBEY$,Ud2CL(6==a<VibIc_TjK3#2mm2a;MYfi%W3u7mj*$*OK,6JZrpK#,/t5D?9V6$,:Z!jUq)SZI0I&#U
%Y\>U7o9V-u@IpgN[P/*VE;o9Qn)<*kebSfP3d?hp1=ifCQ>I^6auK#4D]Gr/b'5E)E64m12Dog/=,Q(,:=`4[=:-\![C<bFY[sqr
%08eK)qqNIm7K./4SBHfVno3$<PgrS#;[:(T$LGDTd@uA8PuC]7%Wo$K22^,2Z_fI[.9:Id_nKl0SDC3"o@hN7V!"R[713`Kg9jog
%a/Xhff#$,JT=5@"Q8\4-e4kU[VY0M-9KFo-ZES0`7!0>54a>PtXOk>^I\3qFm+0=0E]`i?]hZ-h=r>7iXIWL@9CJd(:i2GXI4,C.
%_:b]#,?)"48$goUmAMqc7s!.VrhM4$-so&F;mk$,lYDnY21(W#aR;:qo(<TNeK6.C'&1YcOP%j;J[CnV+Pin38@p#LdbYN;BfEsq
%\d^BUG('iFNkSk3NuJ2k_\e3e'Ea16/dBb\&-FA64U<VnF_9oaD)]I"eFu'8JkQDRAK-7E]%EJEQVO7tmD^Q1.Cf\Y.*1+O/&/hZ
%$I[cB"Y"e,(g9HLU*/jC.#?al"Bf)hK@-(i6"7GI"S!F?+RS;.8D4a[R1,)r[XLsKi%^=,D^_RJC:p;pW+a4,1YVJrJr5_70FWNR
%5`\8TZ/$5uO[l;m&@3M_P5hmD"Ca<C5R'#-&8eMHLuW?nD.#;@_i4\Y=9B[uHAZl5!(>W'%iG@]2%JS_^aY\i+hBl8&Msh\8*u;`
%&+kY)&**NMa1X]`3:im`q?SD>O`(bk?:g8;LH^)KaSO7ROGpth,t5>;PbP4`O$P3`g>Il`RshPUK.j[hi/?t\`]iH/SsE7gBBgo=
%d10Y.K2RT2+nuY,;fa^MO&nsdjqTbl%CHm/`%RpPU;fC0^D0i3Y0X9&;Jc@![$Do(]aT=2RmS:RL<rH&.J2$E&Gg'!Kg*(BToUmd
%I11u^;N6)5MCCa1IUh^hY/NR]*]/_%fZgZ33Q+ClO04nlF93LCp5tl"+\]Hn%"XEo%abbq+0C8@ON)TVm%`%^LXS'?rB>Neo:lrq
%TOWY[Nt%,YqZT3%/#_qpbC1/nkVH@3JVP]r-OSIlg`RZNjGmdA`qdWUH?>CUIQ;.DGnh4XLDm(N9&G-="<39&1`tP0]M'Eja%82"
%;K7oWq6n1FhhF>Li$PJn)09:HNNDXh8(RHp6YJChptE>%Bk2)533lYd_m(VN[@P'LACo[]GjF*BO6hjmL'R3+f23Q6S"61-?];sQ
%N5+@i(RqCjfM5e'?:&"g^08M9fA"Q0=aPAc'!@5Qi[rsD/^,01anHUilPfYInf,<W]Y7WkVjH3'-$OZff5Sj&hXfOe"dF95AR7Wi
%(Js5tP^*:@hXADI"dF:(S:8,hl1nK2n3c;k.OJ-9(25N#Z`8,[O22]iI8H-`RRlJSkHhOr5SotjhY;QsjQVW>%YW/d#L'Xc@BFl=
%U:6>QKS,p(TEu0/EniY]%XO)6.EaJ"ZI#he_`,L-B!#a+]OWS6QM3cBZU*S$<e*hQO[nc?2s0BH15H"H(lOLcSLqJ(kX3=U1MTo%
%5-LB0eo1%!@;uE+IYhdi^K+pB@J\hmgkus^Bt""=="K,g,e5RtR9_;n^gr]mf<tECT=ph/cnpbU,Fa08Q)-lo-us7))Z_LP=r!JO
%:_6c#8.Z-1%tcaWm!&BaMJg<e'&DgXQahK]RF.JhfA[V^*-,]407eRj).5iWA.]q+gi6NEg/)ejJ06!qO8+,pB[7pa]5IKBODj#F
%jp1/BJVXcq[:oYCe8CAONUXH,^_4=)M&OZ8g>3FqKRt%.\L>#H8u4mgjmk/<Au-S"fMF5Fp:t>e[_<JjTJ"eh-YYmZ*g\MT[b.2E
%@1.k!)83GENE\)upW`*_3p>5m-le:;ah,Y13?O/L>GRSi>i3JNOH&S-hcG6gn7Y>(d>l5fafT$BI10('+ua\j%q"<_e?n29#gugg
%E<XIBkI>36,1#R!'\jCS7J?NNdKGd/.5U\"oLc'OKR^@YVSADm!CTPgR_igg8Cj#4Z[%MSL6iGkabK?;#'t7<A;beo$#<8T"uT*n
%pD[iZ$Y;:_"5.?AHhh(1Z+gCeR_]sU,Drr>GD#0%:NYL/_.k\DQBcHZ:7ASQS.RJ2!0X=s:5&2k&2JhhT81WL)AfHWKF#7u6Ui)R
%.FoTaLVSI\W@K-e]A@^UleCLIDr#`98T2cL7Q@=$Ng;SPeu8\<5..iA3KZB?3jE$h9b^lkH\,Al=LNP@K].M:Oa#>"HsX1f.OQ;b
%g-+_81jB>Np-u53e^hi3R$GTB2mRS;icc<5B-*m%Z!3QMC'4.@_[fS&1cqTO"aCB3RMZ%\).+u3.`Q%!F+3rrRFH_b[]0V*(DF.-
%1hj7(N/_HI&nBM-<b8+9eL<QE`J]R0+"M2,G+AF/E6daNBmlZ`C`P[/)]r-bo9YqehTKDkHT?t6C=oL:><,Q7Xk_ef1;;m9oq=VY
%1T/c9I:q)k;qFXVYf>PPINa^X-WjYb-SNT2VG3m%:.jbi$["bmOR8Rb)c6>=lgtXc.rQh*N@fkpAZ!Ur6O,,b_obC'TqDiijD0BQ
%_liejS!(QlTerhH_,sT<8e`_(7L*^pQ'0$cHm&S8ge>s82cSnadE3EA'ek_Ebi-8B7<i'CE?4Gu_8E3)'j5s!'ofucMu0sVY8m7N
%D$Z0Fkk*u>\gJh)YbOA/9AuAK;9s@9&SfU.g;7a7Ke[%VoWZ%HhMaq+^qi[6^i%$C/&k9uk-5aA2n_><ZTGoZ3M*%T?cNW]GLMGW
%2`,DePO8/%=8QV8pV&\'W&`A29h2KJDDmQ\g$fUUWO^.&HGqg\1?r][aCO(:lq1dJ\DPYc/WI,dJ-N=,@.s0-aCA!NkJqX33'$!d
%\JoY`KS?E!Dm3EhL1OroVP@^>,Y.C"VcPqOIPLf-UL/5<'M-SOpEHE*$E!+>97cL@l%aZtl$p3@TViIQs/i[o92L+];#aCmJSkh[
%hbah>g^5!QqO>WYp*H[;+F%SeD*`SD[,@YRLW2^9r7qm<LUMm/Qa$H%emH;j>6sQP:_U4LYWh'6;P%C\Pin"bqPf/#gKW\6W>#O#
%1%LoC4e2=J%IC8>UaYH8MP/*j_V1/4!%qta!SCij=iDeieJ_TG:;u<HF"1.p7Cqb7<8tJ)/N"gds$*,X$8ba#$!:;=C<Ri3'?kTg
%T?S_(61cUcC/s\Jn)<*kQ)YQ\!PA2f;2<<4+CY-J(k^+jC[*;Y+(mQD?!Q7W@Y)\:Xn'AFjbMM$\'Ki.r:p!Hkj%s9;YmY_IdF#*
%BIWm^8j@LM99bajNt:7s>"V!p+49'm>'r_rO(aT%6qcdbrfhle!?:(a'O!&a$HDCnE$Ygt0q0d.6$H]fUaCf"';@g[IqO$1_]-1u
%3.O&,Gf1.-^/$mc0SHB`UGE)+$VO;9)L:"Z.Whs*E+T2a]dE;\eJ?]^0g4C&JSR^a+J30t+cB%"2Bh]=D('-_T`rJGakh7",&D%0
%<@Wib0HMMT'<'$O>Ynke>mRDZ8mRj=50.-oEsVR:qW>1O^)M+JL!KFSj3GId?h^8qCDsbNLA<t9mlQfnCiBZ'?,=p&!+a^<n8LR%
%EG-3^UWn2XiJ]^Z9q^f!bBQjIoOH:GZ"l26[RK#lGtE5FjP#G:iA;9-gB*pF@"`p"9r3XkZsbB47(RbY\+8\\@AMd@Vl>Lcqr:AX
%:@m1I4rb@\W2BCQ)0X#'rI+%F=qIBt'40*KOdD(meN?+G[[Ni?.8),<51QgX/(Z\np:q,k2'"jV'ZU`:$J!7AbjR;bm/V2<CPD34
%jLPC)Aq8pt.S+b"66TS&M0k0kn5?GFR>0a!^8h:']UU6,@Z#(H*lte8@plpWUn?c'=^be5D)^^Q$BIigC[c?7/H)o&(,i,@"QAcJ
%kYGJ)+J=8nZ',T>abuAdd(BuYh7'Ca/8BFp'Z&8Hd(PU7aR>E@@^SqO^i.C3:T`]2k(WkOrjZL4L/dT5>nke4N($rce!t,"CK+iP
%S0c<`AajBAibA\%$$$ecGb@^s;N%!9\jCuoVR#nd@GG@0D78_g0D9e%jtoTSgGH]h:XSG7.<Se7aA]lufICmK@0PFu3T!>p@;GsX
%ka:6EW]RqqUu]U4XCVY;`o$]-ro4#BAB4:KH[,:#8P3oK>VA^:*k8s>8.b'+!B,_1T#n7/a[t7o+tRAI(?X.OX;5$+^;V'la$VkN
%5nVJn`8=Zmj]34m<N)g9[e7>$!-gk4JN92@#1qC(=UC@/#spY;SIi8gYX(UW#XtHIb#33M8_*gQm*"<4h`:.VVQGWZ'i7BB6_i1H
%[N<T%3LqQ,Vf9+:fWUcj.'JW9HE>s4I!n`>Ks6HHip:1"O6#h$TpCe2?&k_^%)(jiVJ_0_n@6!Ob)t1<SCNR<V8/Aa(27D>=a2:P
%(b>Fq>Sqc66"+F9?f%pERY'gh[:%a8."RGRWJ=BOLJm!^/sHFlrj&)rcoCcJ.)L</.>Lh$0Z&Kh.-5Xj8PmH564P=*%.r\l3%[!j
%Rlj=u't[TZ-*S>r7I<f]@WEqeeO`6OZ>8!r<mfu*aQ?)HC=$Gsfui:c)>$d[3_D(CVU*8./EImdCcV?o>/oFL+i:W]O!P4D/:X0U
%XgBP7iQKBoD$AIR:SOGOgrg-?l;n'5=X\,RmPIH\j99KMW_uWqSkB9X*a68*-+,M^H7l`1B-m_RZ<DklV2B-ZW%HV0m.qje3p[JB
%Qa0U#k.\Dt66J]1G!1_;AR889MR.q9HK)0WF/]<^H!P$USkBZL1aS8J<[*]%>c?+/E'3bXGD")ddn:s)5"%g/qXVl@jIIq<'FP)`
%G4Wuq$AsOh@^PA9$Aq,+EM9%--n**)C8%;&-n#i<MM6Y6K<e<Mln8O]Xo&j_DGHss_)N%A(lKcW,gG`9_+X4c3!5Bh`o:trWG+:G
%0)*KI)R:7m?'o$#ZT2eL&0":bbI1kD[3md;\%M+tf!d)&_S[^jqg&Q^8(3VJiYQ+p(bhc"j9G/4,tf0Q69m5H)Z>$^hEjK3A>(YZ
%kXu]f'?icbG`DPNo\OBE<pO':\'\uuo3(:HPL/?7,<SL0qS6t?TqMh[Db*4P$o]k76>t'pW.N^[h2mA?"3c<UO4p%W*Zj3aoU]d\
%"6\&@^8!k$IGd3@7N2-=GBA$I\so1D*^<=:HCX09Yo?q<h/0<i4q$1_EZNF(m(2Lro4Ou(UEp6F!KtgsVBg8q,bZk_kT?1A^r%!e
%"!W6*2u:MGa`H7u[MODsQ7`imOI?F3996@51,mee3o/PaS4e9(_qFoMD@hlN;nE8Lhi!&.r0#iNQbl4;5!Lp:dCLZ"?\>/pfVd#5
%i--2"nKtN1LqSZ:jh2&e#4[pY2(sJtZ[B8h?M%r?APF=HQO/1Pf-D#S^%)F;?4#.03H4;)0i#d'bdH&`625j[XL'2g*6';%DBSDg
%X&oMb'i;\2fB&dZO$CtB0t"?Thrjt,3-%GOGTZ<0kGQSac!Z0Or;Q6\%@+==r2uchFt(D<pJLA->.aPN@lMS$mpH*Dm-NHqo/jBd
%)h'E<Y$DuZ^*gJ9o$R=^hhT?/6U]tNpY-j*^n<o]@,o_u<QX\K5@;.UT(Vb3hA-!09dL0cZ<e6VA6j*)3B#IG^V3tTnT`*dQ0Y^n
%K)H21TAM2kCs%`UIo0'jX5Y!%0W*jGnG79=5WQ=(\34(tD7<Y36:d`K_0I17psiQpPXr`&;g(<=#kA*ZA@-N6r&P;u$=mLYWK9J>
%YeT/UC`L5q.&B6dhg@EDbrEbVm2cr85El8fiP6iB>Y3c9`7eq@r:$H'gSgeDq<_SjFK?6I**F,P=r:a,0d8O.+<GHmk!?u\ijGAj
%":g[@nmK,M'eN7f-EdGbJ*b>Y2R$d(Rs:.L:W2+soAt+6D\>hP\]Y=^QOanVMc&Iod]MW'a/;#)Y_,tW%?1XdDmeo91rr[hN3.Zq
%l`7bj]GaYrF<a6-PQTT^dnp`PA&Dj:Md`kC+2,Gh1g\^HWqGl1Y1aS%m8]>K+/Vb)V;c1BeC"/?/`#"<0oXV(W9-L8cCUI<B!M]"
%3O(1Y]motE*]S$7BsAqp[>!);CBKLhW$S\q+2>SjFJsu'?2LuG&S^W4S)DsCh[mn@P6qK4*;Ncb7VcMHnG?cG<?2`f!*AQCFa5El
%S$&1D`p.b9kec%[jRQe6XBSn@h!l?EP<HDFou!W21!2Zp%n:]Z?Dh%E#Ih.'g@]Ve*kG)7fbBeQf=ruDq&M-Kp`L1EbHlEU-`d8q
%qW!/;\&@Bp\GQu+ItD\9"W_JHLKi-a(3I%i*H"/ug[DrUJe#6mk-p'T2^Eno>I1mpVLF`+1[BLIC+,Jm[.4kbW#9TO)SDp2<bkIH
%Bj:"]L]DV>&;ii55dF:rBgZ:H"%LSIPr0J=.*Fe-kL`2'+V@sAJLWC&$s/3lR]+&a45Y4+leA'5JnZU$;k6:80WDob('dYmfo":D
%#2b_D,`nVJ0OJS+_Je0IVbYYU=5/iKDF[b7ed$4\ME*-DN!2;^0RE.d-#%Bh55B_\o";>3&ODA<(>"Y*#@7l465!Co"un'kqJ*gb
%&157kbBc1pBi?-d]PfXridtjEog-4-6Ckf'Z:^0cK$$a?")*IRLh4oCJE74nZ3JccroFT9_mA%I9IOG8oeZ'ULGN7qA&l2.XXth!
%'bs&FA*QA^SsiY#o4XW!P(3P]LccdJfU:&hiEc2899U/i*"0gY23:>-K9=b$?mh1%.>1SI2[WrbiUD(ug<^+=**er;^fKR)U<M!2
%Nlp>9*[o:6LL)!Z`XBG8@1G5n^^LrC,,,m>VN/[^U"0dPcfJXkD\!dmdcjD9)?>fYo2Se+d!WPije:B*0IkHg=%Q5#^A2`fS%3Ug
%qDI@8n]iWKHc[Bi+,_KQ0;]qCN>#0hMZc)@#u`RYlPeN\]k*A80PsJOj6s!#)*.MpXU5n-ghe>S:K7L0gV>Y"p9nYmge+=o`Eq34
%\QLD&HT@2"X;;<S](/Vb0\L=T%;^n+%TrncU07Y1+dTu%l+id]O\r5<c80'W%n%\K;=M=MS2@=6[hTDe0@g%+E&F-8`^+rX`m]5k
%:@hHG?.BC%WN(^DJSD/f!&eq-!6=*e9EC>.!QT!j,o\5K;6,%h?JJ7bA8h@FL2qVTN=./:W=UW$-<)k`WuB-LUh%dP/_1[[:Z"_5
%2_JE6K<=">,LL$UWu1Q9/]a!MPsNKHB]hud`rdYU3S]NcG\7?O89j=:jY'8KB8Q%-d@DSpoCSb=c).L6G&%`HTklm'@odphh20qs
%iLTHDFdI89.AGk8\kDqI'[`DbqnX\TK4:[lIt/n`%e)<El7W%RMu8,.4T7MF*]l<r1E++8&+ILMBXn.fMZo2aRnEdXmfP[WA?:<'
%[hN/[MV7+>+M`'umiKdQXos!*gFE;rZikW&F+D;I$LjE/^p=/g5"'q!<;oSn4@M@=j93:`T#tme"F)t?Vd]dRPkAY\Q:ZU>g6PkB
%T$C?#YH3u[>hfnK)+8$50Ht"BI)fhnRarQrA'd<hnXPpdhYJu6mf^6DhMK3O#:D=Y<)"P(Ue22)q0]=1]o-%\QdkiN(LiE5UFQs`
%Gt"4kKm%9&p@<Ub((Bn9Ql4iS:?pM"'SR+dnB)t2n@Z+g)Q*2F.hB:F)W6HK7cK`Cifu<sdOf\poVlfb[OS1$PDYd"s/>!@ffH7.
%n`+VYjdi$KC;bnq-Z8IO9S`Di]e1@jCP=mQRifq&+tk+1p"=7ISFL4]c9JU]^=;REh"*rsEPpgcPLeR][K6Kl)b*opV<i_T^6!;u
%\$R*S%B"&g0dtpXU(On*!K1u)&*[1s9jW#)$]+el:;^@sZ?d[/g,*P1(KR_j&>s/F(MT/PT57Km,<f,MGAU5Q-@!?7=VuS@cV'c!
%G2`_Kb9%SfeNY-cUX"+&/$aHR.fjc#E@dWeXdA&RBa^8'rhD6*ZqXVFr++Ru\+8NZ%f#qq?X@&dI<BjUSK%UqREFc2*ra@'++<s>
%s45?-I=:fAs6j#Rr)[dO`ufa#q9-r':0*-On(tcbrUoC6kf8mfeQ5g*:Tj\9f0?G!?_8F2SXj@-roWn<Ys/#ngtPV+DY</g@.atH
%';)ElRl,VCa7pHr"lK$;n\\f.7c'8Wn`R6RlT9Uc\''!9YLibVhXU;^q708\<u:ZCY=HA-lasLhe%ALPhL><VeU\3ESqccc^?=R)
%W8HC=#]:J>bk5pepijpss""-$+3r-uA+Q;LGLOmMr1DrgRn*C$i5`+BjP+)XppH.^IEX?_?F"KVlP*J#pV*El50KgeJ'3`FgZr4m
%:>UHtdAR$=iprEDrXBeBPJa`%j.BG]PhZ'2q@BW&^Wa\<1tnk"B3"s&8U^6[kNZRPoBBE7CAdbrf12_T.sXP$Ih:_DchqeScb@*4
%7rSF\iR-E/j5Hmg04)@S]tWb,XF40BIXQ<\IFC.<1j/Z>gF&FOBCPLgL(Ei84Eb[cRMF\W17e7"P;9kECfhd[:]GTaIE$cFI.c/o
%=5R=k?2c**1-Ak66sX,KF)lYrp%h>ZCQKc^ouS#Jq$ZO2Ie/o=KYBHlQ%(LC&?EG>p??PpXZfs;U(,>Mm$dLAcS'`H9;">@+Sk.F
%Ij-P:^Km.TPK0X-Z6"J,rf]!1hOIi`I/DI5p_Wk;Im:M*V6qEdP4?n1R:kFs>2h.oM7P"&bqT&=F@[n(f5nO]Bu[P"s7"k-2aqWU
%,M&?E!Sg9Eeu3fNdkC:EI^[D"mup&Tf[A/lUY0p*@WpVB3BR(;rd)KWN-ee6Wm'e_=RfbaO)GlXo'>hX5?i,)XiB+.\do:snf.&M
%41DB;:\f`ocLPhch([\),NXOimb`&+j)=CCDPgXMEpoQC_ihAYC<.@hkZ[dLn6fWl-DgscD-gPN"[h5E+)Y;H!L]\N[3@QUp4Fj<
%Y?nngHZBR:m.IrAP^gWdh5h>]0BgsFm5*\D.R--Z4_Ij<NbVLT?bUi5r<JluDO:C7\:/L[*O&TmJc-U]"KQ"]i]jp>U3nHOC[n.P
%+&oQk'?55<7'f+>f##`//cDleKYP8bq:!Y;(LOk'.>nimm[*)7P/Hc;Q670MG([[ih]&AZcY``ZK"#bS]!X-E>o@?Z(luBbbTFtJ
%GCS14R,.cI[0?;FL=8Lcn-?E"+*"=PDuTCTPN-k#N;Oo-Z,,Vnm`2(E/hb!>bI>+LmeAIPQ$Y(*pUjc/-9'4;moVAma-JURLMBQW
%I_,OrCqK^P]m6gKr>V$kLDu$R+h4]@E&I$a%CjH%>sdNs]+&F*,V3d>E^%?2r!p-b^R^q/4$UD<Jn'#tq1$.@g0LP_ph1HcmEH-G
%[daeiZ8%ftkq2G@8sr)]OJh:U22^X-e)#Cr[pchW0.trT]4=i,'dma;6@^Fa<hQNQPWHF:`B7F4M+rA^(&7ZH_+#-s0.to7Q_Ij3
%Fho\6HuZphUCY?]^URX#mgGnh3E.GG>U3?uoE4j(6.l!%ZM7ntTa.ZKCiB2WNf.Zg+8'RFqYVr"J3U.Gceb4o^-$s@Z)^'\%sWMD
%hFlR]BmouAlI;1SD9*SZ81s">*?5?%[&?Gu1HeI(9V[g9+6r:&`<#KX1e]='_7@i&O.nr5"j\*&!c%ZD,*=9-/qg15H!&i8)3th>
%MaF3AQNs;\R=&-adJX%2]k;CB\ZmQ15G'G*#>nWu7*Q,ER"6HfEm@f%K1LhC.>G6S5J4c0m/RPd4\C';T=`-d?+#`m-=W`k2aA1/
%2T`f4Usd_!i5>R*_2$H&^;GO[0D*0%N"?$.i:uqdM0?s("9cj)$[g$Kr"$UL?A(V5n,aV6I(1:^d!<Ju-aZ3^"eUL"/4+r<,s)#o
%L@bEf(;iBc'"HA4n3KI_ZC6%G`sC`Z#jU;=:B-%SWVGB362b^GK^dkL=oJl+i5u!h$i_8O!!N9S,DH.09))$o;Z+nDr+F/Frh!Ei
%O^!&>n3X>8]cD2#O)(r$HJ]l&meflqSn^(6o_IaBohP\a+7@gijW"LJS[q18TR1@_7VUcrg@s4P%LVlL[p/!S*'F4gPtt`t?890b
%+Y6mrJ_1q@ic"j>;#CSte*#7b[qrhY;n)]#5$`[!K\"!J(#dR-[lR\gNuXEXd1d)(qb$7@"Q+C@7S]]/QfWN6hjuYFPc+#10g"Sq
%e+Impgk]-+(Op7Q$sZTf0C[W-7dW"H(])DHeMNoZZjNY]07+UNO$SW$]n]DQEn4PW,)B8Ud!iIn<,Qdc;&<<]6Tk,DNQ0idKF_B#
%P0S"\]or]-9,/qX'l^uXo3F,tWB>]$?#d7h=^T"s]iTU78#,*Y/l;*?`A;a6_!a*@+^4^r'b'9qRqh<h\3;s,G$o\dBRRi-@:5c5
%c8!\7C)8^u4V-asY1P3^&Zp/"5_,u?BP2!Dm-`9P,qLU?V2!-dK?#u+J:V(]OpICth]EK_keb(gVDGGIiJ3SDgbA5JU3No(hol9X
%&H*Ns=2G\;#BheXlb`n(=/>7;&:\fBit6t-L>!&j:,B`UImd7hcY,!CYpTg*U4;02(eEO:#N$8;U2U5f(74g^=>$.tk7<UW#Qp*]
%'6"\MOV[^=K/;`6>/UHA*2t0_nK$Dc`oSX(^u.fkZU#%BDZV?t;52*.!XE*0B7fXjO_.9YB*!G/.tQSj,N[s,Imga-/[L*T6I/=M
%XfmSb+GHL0McT$$8Z;V[B\Y6QR.),"S&XXGkTlGRq_"@>:-_UF-8=]uWhC$pd?><uB9PT+SgO=LAXhlPEOb^5UQ%$?Rur@GmF-1_
%`X6-O`4DBr%._d:$jJEnk6shQe?=d/aMY.hqP$[h`1K6LT&Z[+PH%+A9#?8knaSk.P;'/aoD2,ri^8fb6=C4NHRCR;IH5nZ>BF75
%^uV_i0^PPVA:EHX;2D$;V2k%N-:"27!_?EZ[,Q*/,s#DF49Zu,ZqoS^Nl4"!TGr,tC-EW5-F&5j;K6g%'uGW8$s+!=TJXJX+FOU:
%f>i]ZUu\rJO@0?oJqqR>nG=sT,@i'./6b*T[J4f4Ye^7cqV!;sK]5tZ#KIQ1[IEQh'b3e`/,^`c<Q&m.Q.)nnk;\%_>LJB8&\-!H
%SHBepOA.kJIVBu[Ah_lkq?lXr&',MO\tXt7@)8F69R7g[E6OD4h&nV$SWSm$/3<Hs+Ou$q^GZSb!_dADF/1ct(1[!e^@*$*%7(6Z
%\UF/7RCgIF+LL:keC$mg^s\4jp^'1Wop[:k%Z*1M&>qle6JR>pV%$"h?j_(oJN0GnRGqA`pu[I?73H>>=89_P_152_l6EkDO,]I+
%*0'EnTsC=uWTa4t_Q!SjUujohTUNcN%L31JPS<P25!>F;7,SXJi3d=RLkm=M3?aH;\/@6D'bb413Ik,K=Fe;?_k:uuV!GNC8]XI%
%8&8Nh)a#]O!ItHTLl_D<<k-RjdAQLh.h[rHQ#@h6I*1B`B*j51TK'P(=Wt,`UpWOm5Hs^gnk98%TG^'="L;uS1G0]^<F3OWCnl<2
%PS`Se!GO!iX8'E@mmtlbTWY]CUb;1M?m6d[c"6+_I<Tj*]4:pNQmco]!RZ1CR[0@.\aCS\U6<d"K[(IRZ:7eINr(6u"5kcZVZNJ3
%,YS=nhiA7QT56"'0%dR*kHN#c!u$[u8SZF`-5T7>qqMH]i<+i57leZL`^@Z)$`3F88TQ-ZL+BckCf,[@gkVGTL-=b._,6[@fl%ZF
%:ZZL"I+OmDqGT<dU;m3b?\VQ)MR3CY"#^Ch!W8#NP`d*@*<Cs":<qP^q>1\';W?Y\8/26,>%q=TpF?9^O=9a+(-F@j=4]qjc=6dZ
%VAH7\M6]G@,qbK'dObV?3Z\lqjFmq0&&)K3_lW2&#;^0]gjmCe0HeJZ&.nA)&2@]B8I$BV^u,M1#6!c#+iT?=U6t1<"#///mNF\f
%i'e_-0U,^/gVpl+@)qt3KTW/6s7Z6r`!P)u^g8SAKbQ.t0T]OMSuCkf@DsA.HZ_\?_1Lg+b>/t*4cOC2P4jd],k!qL0`tHbV#,eY
%!!'<',WK)^&BQ;]TD3:Gq#o)pQ<G9#1c3?Rpp]^aKYAcN">\(RqG2C,bXlK[UA#`RAaPSKJu%f,4Xg6-+,<nXGeRW7_gK6CN-HEC
%s2ZK26c-m-L4B(J%;M=?4Krns/Tc2%8P*]:X8[_s!sU\J1l_2`*H;$L^fY&7KQhD3fhF!M,;j6(j[@T2=?YpYQm_)jYp'@hM%hed
%.m3XQF,V0<)"N'Uk=A*Q(O2&07sC[EcC]H[BW'GG%Y_JX.#7Te?Hh;UIElO$[bn9n.%]b>q7>#DO+cFfrs.kSg[4.\7s<#iRf/o5
%m%X9G5-'skoO55\W>4Zu6Ec#>IJUJ.C_<=HpmkVcoP*MJ8)F3[4EN%hg;W@$0CR,QAULa/KC3Q^#ideRfg</5chCQB^YCa^)^W;=
%m`o.F<;ttEV31"l][e%K@(t"T[VLr.$2]nB!oTmD5<@$'BU43m`G2M]C6on.hAN\-j$2B!'8+btNR%K@Km%*CTL*q.m;E/eU7'$r
%7H]kh=Bf?D(`]e4kPgZAeS$k`5J^72=aVZbIY9'&FRCfe_8f`S":KC&Z:U^Wj)T@)G4U?G%Q=>g'#d(r'_cC=r!X;tHt)\;SFMf,
%rkD26IpONSrq:E<J8P<)"HWF2p,_$llX)pTrEDj8YuAHn)sU8X_k0lmrrh5pK)TNNq9NO3:?Cqo!W)e&+NZ_?>k<Hhft7%VTAXV?
%$XfTE]37*gWd]He[cq-cIa87VIokU@%K>C#7/^3?QLHSWjlp^Xp%sgDp%r*,?f6]L%/&@\rOl7+$bbHdbd@:@ln3UajO8N?2S3@2
%TYnJ#Y(:*[UFlK!kq?OGOL.,fp=dK+)JfBP)HI"i]>)9F?H_.k$-]N$_.*%$]pQ'fM4+9tjp#"1pZpXUWRcD:3@]6Aoq&-`M?Z[i
%]'`*'PQC*Lf:k@Qh/]:G*][o#nWNm%lfZFi<UELDZ<Q`r7udqIDRj'MK.<GsjtU.p1Xp!Nf5:2lhfWu<rbj@cZG<"tj/H+).ZYQ+
%>J6?aS.C(\N1'OMd!;m3;0FCj6HT)lG,f#XhDV%*DkULDX;P+`;JO_pn(Vtgc#3Om;O\o1?FLehdUH!D.Jge[TgoIWmUNTM/rdZr
%c1ZrTo#+*BC+MO*$U8RrNO5JE_me\*M5H>^dee1kK?JC%D>6j1@tS[2d-.hD^a@%X@?ar0UsmB4i(n!q,F4ok?5h)J9+skZWSNM.
%rS&V.ChI-\4jkgeJA=7Sf3Z-E5^/jE>m'XKFNZ@ARDLNDo`hfNDJB,O*]Y\LUH=Vhe[gIT>.rLp3ZO?^,$M%DktIf@>G6,nhu85j
%qLK_t=b:@XBfB7qG.E_![G-,TNjpQE0:,<Zc.6$+BWhMF*hhOOpiZ3ud!ED$=K!=,>J5>q#R^aJ;1T1"p':)(A-L,=_d3@&40hfa
%X^(l+6-`"I&hJ!\phL`l*NH=2I)a%l[,H#8^/=(qi\iOe\XDj3f,neRW9m?d=K%tt)eqOgiWL8lSD&iof2"@4B0])'Uc.hXHJKXq
%=h0O5Jo<lH)E"bD6DIa(!NZtr+#Nm$+'kP0?hhb9mZ0ZHA<<O0S'd9LatPlR"'AC#9NO.BQYPsY`,bnAIRYi%Z:fr9iUa=1G(p4u
%lqgoPrgUZfgF^VS7&"b\-[GuDZq3I,rs$pQZN;9c)T?'"Z?L_Soid9&MR$Rf#KX;#3/CAp#>R;%5epG/r$spTgo1c3[SHiMI?njL
%rNbd6A,T<6%<BtbBEtu-1.#V0qiR1d]b/Trlh9=YTi!R[o1MNo]loJc@!Ls*@c^Zc3Ad'aOukZ&o941'T?R#,p%%$$d[i4=J/NEY
%7mdM@bX\U#Ob$EO5^f@']gY<;HtgP.a_fi0^1"h;+bA^%g?rL-;>Y+)dHjg38?K_CRG,JLmpETY%/?Dq#5K>7nOnL#Atg&WALs?+
%(Ss@X+s-0iNIFCbp77Y+^;I8GgjDdXf"/$gjSN@8M+DEdII$.j-1Qf^VcfuEfJf7UR-Bh.YD)[CkEko1#Kmu+^=Oe9EK[[J36[FF
%'g]P4@ZLK:$F\^.Vj`(K`V)R,jjV=5dCkMmBBMg0V)C=5`riaTXrl<)Ga%L#jd+%(,`"a1r!.T77O\-RXf/EE$ghm&hZAp;CK-a0
%c!G4Q'$^,KijUQF_`"`c<jgW[j-sYO@]Ni5r?i7Z^E>NXWS$E^Fir?mIN'gn)P'YOm!u'5:/ntF%@N6P6$%Pl]WW5;)Ya6S+\Uol
%mA]X$&H6W!br.&;Dd0YRm0"=&?T"jm'*CHCrT/21*>UNi$l@%B7kW*aZ>m/&JEC-Zh)\n`+Kf1hbPm("WafV[=4Ds!WA`uM]^OL*
%Gg:'kNuE.K]"Z;bK@PAtQn")5U/Z'=/'S+&oGuK]p@J+W_F&c=AY_*eXH&@NrE)F@ogKhVa8h2k/JDG55@,QSae0@GE)L@Jif^"=
%NX]0s^c%0=hbAe!KA)qk3u"+_=Sb@bg+*HOGGOmdacu%&,>6q:2^&-HTf"5t^M`h3A:jDdPb7.W^i)cEdsLGopMpJmFLlUQAE)]k
%qb-@qk,)EoaMdsri)]+>6!GW\Sbg.#;8Lo+H22H2b,lG&S)ECp#>NPgoJPt-1>,\1p?1U[1>2;$2\#A0FtSb:r]ZK^")ckcb_$$R
%YY_,Tm<q]#6REOgLA7W5qr^p>A061Cs1U?NMEg,1*pgQorQ^#jNfQ6"+1bE0oXP`_9j"=&fr^Rt8%RP771u^[^7tOVnVXNb>Q$G8
%_&JE(\I;eJ;=e,2rJ]=3qk.BeaW(Ban`,2SV06KRJpl%LctG6@2YATWWKhVa4'u+ngp5N[Ib/16^jUn)J$_JdZk/^t^LIS!7$$68
%O71(*@&]2&""ftD;X_45`TD@r3p!P!fOFc,K0<lO*:U,)pfMHEgM3E]DO8*UZ0n=o>He>PI&+#U#K*ecRe3@em9a*e$=A21o][U(
%ntUrZN;F`>p2NH[3I]Ga?MhmpKGGEY.guY04r#<G7#(Z"/4BSLN"Vq&l]H`8V":#34qMrUNg=',iM1A6@(:_S%R5phE9f0o2;^h3
%5!j/EU9E0cYl6`Q"EeCOqmFM^G'5uhoB".MgL)eG467gf@eJ>I4"muWp_/XR05+s:>MlRs*T"Ui%b&<ro5PGViB_5R8J2Q[lDp;=
%E;b@?S_&qY*O*['),*>lC\CS'a-k2s:hJZo9Crk86nB+sp%6($qEB)5\gjunq\si1?^PN1UlR%<@ln.60,A>q40_A,j!_IJTBtiH
%IeVucE<!4FbtkM2[/Tj\O'$5\+WH?a:6!8&dp&S$CaaLJqg\8<#LgW(AG^>pKb*3\r:;0Kgcj9I_o*_r1E*EoPN?pnd:<t2aQ2%A
%gC/IsR\E#f&&ldFr,[_o9T*k(%KG5H`[=j,7JsJ_J#:(Md=MnXUH&$h.QhsY^o*S8r::&g=eA<^k2;;'Cc-OG54Pp+i7$I&G0a`7
%SWa6TPEm])M50kVI$f-BgO,mRI`"BGn^%$d_s5u5IOMur>,K!uA"3JYh.To[P-=fgq+TmnjUZL1>1MEgM)1T-cLt-BZ*Q>=dL5XO
%WKXg:6p?s/o`3mu\%0QL`Tq>OC1AI"h%P!c28Z8AiTUL)WNfRUbAN2C00=WrkWGBG7t:Fkfc"cVQ.i6$WK[/$.k_^.:G5[S=6'!J
%TKE,p*AehrBuM(Nm)p+G#JM3s"*V[R&_HQ"!b-A(Do#JP[dO4q;R;?Q(\*=Tn)9b\U],iI,+A/_nQI>Yp(He>qXWo"F];P69]m22
%Hs4p>ip#h_Sm?bIa\=ZHB%PKjl66,3=IMms?.RF+'\+:K+6a5)*^E#*o&VIrg3i2IQh-^D8o5Bj1:<C,`HZ9Ea%a:M'n^aK-blRt
%Gd$n_*t'`+gTgNg[iH;:27=9!a)f?lVY4!+gE+2sc"\G,m]6T&X%GRH>hj[T=kKmqrS[A&4ajf2h5/BA`d[@'RHp]X0?5P]T$Qs!
%]KX!RDO*2Y@(:;A=Vp>6S9PHoKhb(4g;QcFrh==n;+;)*@.'RtlF7Y2`mZrOZCZ*koC6@'l7j%!-UtG-q&>Gjn*[?m5?N!$Ih4@7
%&K@3Zk@8"0,K<2G)pbckp=oo4D.d=_[B2'aFOV;_bj=_1ChE.q/N15>B8P::FJ4QMhW\8BCFh^+%%TW4q0Y>sm*%SGpshJ>H#,5o
%3dJ=S)k5%=`Q#Ud@r*=h/tQ>$QcK>/Mp?WbHEDW:S&l[0A$ao_M-0[p1``&I]/tqqhrLA=M9#F[fYUR(-0Di]*6-c/:l^C;mW_Ft
%:/st_/oS_Ygt5m`E:;Pd0Y&]C3q%"*(/JFaZ)&ZCjEYQQniV`1Y&<XIf$7<f@`a?DO/3Y*Za%aIfR5;0fcH49&)NJSNJZ4\Cid?K
%(>GGLV.)N?M>Pr^>'qZ?0W?s?LQAE<m!*U'O.A<JVm3Sbo4[Kb3L>Y0h60dtR[]5a+Ehs2^PP+DaLTs`g!Of@FO;"f<D';RZ"gVl
%NP/"H)mS#6bI:Sp5Hu8V/"XMp\oZ`JBPb$%)]`^jG=O%0A!<\:eVho(G\52<SaT67N&nS)V,?4>^;;_%np,4j1u+Rh*aMrcgl/C2
%'p_@RmE;ud9_IUo1k3"%O)Eflejjq%2YKZ89=t2e;>m^RHJ1MD)81-"TUSo/FS,PlG!Giu$<(#l2SIMl.1G],f")l=*JBnA9m>l%
%NK#!ga2]P*[HcC<mI>R?r`F#r\`,@aPER1S(;:PFA'5BUQ*KDto@6rdDeji=j4MJ7m@:qmN#g[nqI:o!/+[8;@l%%n\%4FX<]DM7
%a3%2uY@Go8p+oAuei:fOa#]E`Vt&15[EA9o>io`_I^`W(GF#\0a(=W0F^3hZ^Q#F7[pnBcX?/;R+]@pl]CBr&IPfYZ)*^nJY)hHk
%S/mP)(<<Su/%aQdnX##+DnOV+:JA]mH7L\o`8nnoc:#<(FYi"E'cIacRu0ummnKr[Un,Zu`-V*\3jH<11,Eni,a&h-UYUib]DB_*
%7-V7Z-D'ZJ%OPAEip1-V<:D95?:p!:M94B#U`YOJ9eIKsf9=<[C)Wt;>ZYRmPIhVaNQIC+\Wt:;_tD'lJlD7gT??_NZB7:G9_RU]
%cDN!NkOVXDjb8UAs6MWu[</p#1R6g7qGWm\a/,bfS(4pGo@e;%lE44ESZ8X3pseWTk5A9R-+ScYE,'MA2P$f1MeT$<iq1B7fU^=L
%QS,.Z5t4VA1l`r]Df,p$l-`UJB=a[Xe9!X_4ZYBa/f/.91@^!b?tX+pB'labQs"p^G%M3s0;Y(pXj$Ub6Sl/6;d2E$BkH5eTq%[p
%^;X^uPLj<Nl8JMt]=-\5b\i7,o'G=GZS6aZ/Dn^(iH-mQ;S0W6m5FF:j"iJe[rF';hT(s@7N^[D#H&3lS'0CCkIVPtG[[s8&V&XH
%'CkMS;#o(h:#D#.kIg`ThV@[Lo6N%@ak,\KMk.,`bM*+R=*tRi\_"lgoD-eRaijV[`+jZ`=I`13VtSumkI9cBk5:X[&b?MlkI^==
%M50?`n*.td`7*>M#rVN\:F)tmS0kLh2LV/VgK>Rn'Xgdr'(r@rI:74j/2,3h*Bc$.V(oNBl##3-ln<P$_U[o%h#`\5>^/??HZZ-_
%;p11\*IDeWA0LDXFUuK^Z`!0#o6;[Zdt!;2M9Y9*R)X:CAes0ej-cpZ=`AQ?dq7OKO)CiZ2Du&j]SX+$b4AZ2ineE+=80-ZGF.1*
%Cgu3NQ&c%9D.dZWb[cbR6MWDJ+sS1)`BfUB'"<0L.@taT6@\WThgoM>Kl/7*Y:KpBrmkY.eA%@kn+u.hnW)K=iuK"eRI*Up*fS87
%9P-V_0'pp*ir"ubhr\MQ2*7:6;ka)mU%7H%@s)g6I'4UWdrk>\0.2D*)d`bpVNaR[[skf7&Y,tL00uSnS..M*<&VAckMc!O7P!9>
%V#BdtF_NM1D'ttKfRD8t??uE5V^KeoqCkuVedpk^i;@P>DK3+.H+:AO+,tjH>$G@H/6?&6[?Hk,9X?Ri?#M@kRJ$JU2ETGl3m$7H
%/="MiVO"dskBtsN*g=dhb]@XsTN^,U/qc/>bAWZHLR%\CbKS,oCh[KmY>?gRgn0REYI(a6=Ii[RDQg3R+)b6T[V%O#n#pns"BJa7
%f&YQ_I-,!WFg$5*[boe!==`IqZ>8i.5pmKBf,'UL5YNJbV^Grqdd'OV't_)+8Vt<,/X7hl5,HPsc7>mWWBrI*[J]Tceq^rjoQJDl
%Vsi("A*I%+(l)f\M7m&S8U3CuRH&1/.oU^u5Kf'ooLdeEJ$5'lg.s!"\*):@[e6kOS6M@cXl\!ilqHj>-C2g)Am[4_;s2Jtr6do3
%kP*+PVtnC3DJ),@34#nCkJOq)c'^_bB)QnI\@__UT4r4'H98Hq4_VTH>Z>dF)m?U@Vp2c9mFBJ2bfo\@l#e_eq5i3&>;JE\DelaC
%(>h/:WSVMmccW<Ce,.afm?O`aZgFN.6%e[.Fa'_#p>sTB]n^fNGE/S!ZTH^Dlf[(A2g2XA>"`LO:JP]^mW3\'[MKIGWd?1[]A>W9
%@s`R+b;\,Q`,:$<5C;R<qq%UV\c'"mbLD)E/W:]dY2/^[m^m]!_q8h&G8TJ3UPJ_mH30s(XMiZ5dIb;,F0m9cK;5bl@I<9$mr[l?
%TfdUH]Y8@WG^QtbdlN>FhS`4,PI9M9K>m*RPG`<[nT;3a2KkP'hHi=X3_g`f[SN2qcK*f=Ha[-ah*%f4k+9n3d`4OFF.R]XS=X)A
%';OaXb%g?2D;7<^m)Q#j/tQBmMjNshn_c0LHhqu4HgQMgYsPR5[926f]/l?aCgOg;Ap1?58n[jD><L_IQgPnrDe<%-Z(&s*mHWir
%Z*els]1ku91q-,)MiY?FLW;Kcc'*Hmk82Y#h1"^jE`WW\:[\spVn)]LBfEOT?<#qq1]D"T+k(C;*q$2C`PVE4j%Wr6H$3N(8ferg
%HCG.pO%VtJ#ENMoZ\-<lm,Lqth!:QJ1r\L8HX1H*D\br[mch9(=EN8nf<ae2ZG5MBo"iIK\m3Q4*EC%t>HtJ`IaP4/<0H64G[g8Y
%s*4,6l(ujf<Q/BVWHtf<H<./_[+dJ<AnJ#cGe/-*C[CG]@J[&8MOVr42t>M_f$id(Mk7#:?I#jUi2-&#.b'f+LLL.ekE]IF04%^e
%PKV"MYBO<%X"cK6V]*)ppSLemE)rEK6)*,hg(<GllJq/MbB*Bt=pN+B&$9G+[KY-mKb(6Tm<l5og5_"X\XcFLT!e$"KD!O66q.-*
%X*lr'"4&kuV7c8,-HChtb.G?5\(7RG;stnB;&JB(;.uM%@?><;nFmG#s.\t+S%lekpOu)Ag2%ifLC60"[66,Xl9?,d<TmIJ+2g#$
%Pb2ou^U-XNHHlL;CB#^6&'F93q83K%r3GF.@@l_!]I$E3#L2t`^uLPAcA-c];8K"iaQDrP]7i]\NomC`4pF9VD,d\5osd2o[H/Q=
%"FobN:>1D&larIi!34F>pM1g6=TGjh$@@6KQ8_i[I$N-gD=`HVpUpEK<\+4+L6#*0j\C)scn:B$X5sqW!ZUBg]6Ii#1\19T\M;M]
%+?b\u)C'Kq1Rr\DB1cE.khqg*.q12.<#hAE3UP2/n8F*Z%1W5^ZT$=46e>p[Ug0qI;[U#C*qTa\)Qks-hoGd@c&KNWd/XX.s%'VU
%!u9!(26*c.N786jmrp;jL,5j]MHis6knU8/i6=`W.NA5:n]YT/TVER0\ln8NW7DjN2.#c<eAN^KCoIJ*0",Ptn&h5VNpp^)QhAmS
%B2$MdjO+Q6r2BP#Mn/L&0-`WIq>7o%ad9t1[cp*:WOt5j`q*onPBQ>9E5`p^$Z,.bAtrM1[[XJ^/0#%)LAdr&n\`;`T.;l!PlLR%
%!Yue8\jiTjn2b4a]mWn0&7NT>oEM6Ua,H*/[(&T<(?K!&%hg.>\EIF2'6C:Ta6%<tm%Q/&qL,hg%4fg18k=_!rp56Wf5/=F_j@0u
%U1:M48?>g+;:PQ.-3(41pJ5>k,5E(@XE0JNDlBu)C\237\X`Ehqm>C0]C>\6K_lMCR5m!=Ki8Hpgm=5=47$=tJ%lRZE7@7!(OgDE
%^G*a\P2Mi+GC1Rta8>`_,C%Fm[)1'W&_QV:>/-;@>\/MMl_K#albd2+8BFe166:drM"8;>Tjo?@5KV.KM*"Ub;J$D:m*C`'pkm)C
%V_Us2^DtCg_pk?^oRF6u:Up!l0X\I/ng@soWn;2Q(:lS]hofA-\peiZj=AW1B`30o?eU&nfu_$0Wup\D*LBjkQ;=Nof>g@S<r\"*
%qegu&=S1[`@eBkpU4I*#Iu7"X)`+,W4d`4e_'cusj*nSNj5)"UenfGhO9pDmM@WkXCG]G.IgQPc?I-)mCU_<[^-D8*#'p]7b-0t_
%cf"geW!GSd6[s"iSe%-7r@.',T2::r=hSGlL[un8D1?DPniFL4^,!)q\<u"`PPat9A:+9_](jd2D<58Kdo2Z<+jh0/V].WR[[90_
%?etD,(3aYnG*D<"1!&Ojh/L7(r@u@WA=p2(F3]#Nkq4][>b5_RP+?H.!N&F@mDR_eeQ+X-ZuNU>>kZ@]RG,eu0q1^-4oI.f:?`B<
%%'o\c`SbLERsi"FqcEB1WRp9--ae6TXi=Gm=>-<>a3W5\or3#"-<kJu*^:W]4OBAOm-siuFco=dI6Qt)]>`Ocnk8s?\_'Kd`j9_"
%^&7MKW<1N[^@DeR(tm(!H%<HJMoA<"g<ETL.sD7D&!P\@]CV=n?CO"=JRHlrbh^`R'0].)@D4O`Se%I6;oeK>%:6tAU""^/o^d1;
%Qn-=sktKXB?Wp3!LrjmfDsdW>SYu9W\Mq-H[P_)k.M`CFpo,%T<HbB)[Hf@XJp)#/@Bk!b<D(jjeu%TanXEj"kBQP,2_^G#g8\V6
%>V2N&-<#o`e8'GCGA/4F]ih<D-!_>CBZOY+X)eK4$`;(_\St0![ELr<%b]ZDR@^$$VsD18/+;G;B-Nbs>TPuQc"W$Fdd6,()I!Y+
%c+EcA=m:7[HQ9YoEE=(mYbb>W4,1drXj5I*"&ZIpI[O()L-X'W4-"YL[[UPN/5PD<nZ+QCU[X1')MOWq1sY.FVGD][=7aVte+.d%
%S(hT<EXt:$GNirG"^a7Ze^`HFQX+rA0a!uM/2*9[p[76%UD:[kqe9cBJQD$;BF20H-+MDS8(aj.'26Eofm?%Ek/MglV4NUEPO*?Q
%>?TU-b7t@_j(\12HDh?$/l#@BRIieREa3ra^>1D*@2dq94Lo*X?E)@QmbWqqV>Z>%IQmXVI\3T&X+dCmlbl^c;jhb/LT:qOE)^TG
%-Oc'n?FNl141!];lqD,_Z"%du/:]"mD']\PCM/>[hU8D2$d#6/mV(lrX5!MoF752PJ-gQ>([[S1l52Ko5D.)@gf8(Jaa7,rb<#Hg
%U`_^#ITXm.JOX87ip!>SH[fA>a;mBJHPfF?CXl1@n:\Ck7+Kl6HKot&-+[6>\!A*+e!9;gb#pp=nn,o1Q?ado(f@sk?-Z5A[Uq9p
%FnCiTmj.IPH3HLBCm)"_cBXJfPJCJ-PH_U&RESSef*Rb#Vam`Eaub*&%L3sGZ_>3*f5pP)O8>V]d4aVK$qujGfe(0/fW=@SHKXk\
%U\.O6JTg@G5m<W'k;hD1^\]PWF:[pu#PFp@<aL(Aeb'/p_Qpp6fN5>@cXg[L<qH3$,^U0l`n;?VRU(/Oc).,FV:Th&ERmgS<%l7"
%N9tjH5V"eFh"1*#o>,S7W)B1<DRYgD(#Pu/d5ciU3XXHmXKkC@SR$&6M%2=Xhk#XOnnI1ejo%R?dBB.>:+(piiHCEaUQb"ipfsFu
%-L'+5$TLkq6$(4P:;9K3CAHt6GBuO(?QIB,#13L`AO(@Lc=8Ld^%-@'f0&N97=q-!##DJ=o'n@B_M@p7Au>_$]/V.dDQeM[3e#`(
%Qu@-4+h>7J8O/Jp1QVi'PA0ckGFpqaSbW/%WA2OPJ@m5``PkD4Z9^rc\6N@pcSU6Kb1!`pG^#ShPHjWtP'4iNcg2qIe#Ka^m]JP2
%a2Ko[DE>*>_,gFr@%)OC!ooneP`$FE8Umc#*UaQS?/b3pL((rI4BcKF4s.lAm#cLAe]M<aASR0R@Y-C>?lE8:o`sJjE5LQgP0ri%
%UE3(X"IF0pCPk$?U6T-W)0a5M`ao;Y)nRI'>GBOAe'Js#Z"+[LITH;$)Xl<R'6U3J9A"bQZI[&C[AO0`+ra<NLCk/Z$)Q$+bO:H%
%8RV>#4uhI"`aQMA#s/T?6@AG2Vi;7fL,#u#qs+2QUIA+bJ$=aia1GLQr`FEmoI1]AB-$u8B`f*dBB8S3D.)CpBO?16q%-p*"VUI2
%pfcYD&dMQuXRp^rNV>ZSlT:DlE4BA=p26d]QGqf;eqTNTM5Fn5IQ&c7mW0H_FT9F:Ncqg+][S!bOnsT>QD,ZH6t1g@Q+jJ#JB%QZ
%kl.#a#j[.7)VJ$B8(*JW(\-^],=Xk_LmO(aUfAJ8d%/jf:OE;T&R%BtF#@bIcDF@^[N#&'<;?[pJ;Q:a5BNn+g@K#+s0-j\R#fK=
%:p&^-6>HVGO+TTZI7^#kSN^V"GPB3an`=VNFk_G++hIuO]/tYR8Go"5*V@p;4W[dAp1\tfNGZObc'b'8dMqbtS?_/.e?mM#HUh/j
%mHqCTi0Mgcjj[-P]:V4"CHqfXC-5kZiG%<4=tK)%p&!kHLOA^l[gSrefANU![;s6sPD-B4oB$9_9/lhEPV(5D2Yna:),OO#h8bM[
%c>LMt!UjpQZ2jn>*FN1!2_/^QrA)0B&)HB;$bJnf.9m].:ghJiX+/-7q17]q#1Pm%]_oQdZ0#F^W:RMZG-$H]jL^bm#8>Z%m1"+H
%V\:`'CqA7kPD.a]<I^tI36-[LD<l1YggmnCC'nR?Gt];,Y@l=>'=V7&Pu29!+/!Aq<?^X7<SNAsk&XA_@h'Li7%QDj<+@.4X7)RS
%p.r/Km"%m!7f+_3bi`AuXsu:Jn\KO_Y+Df<2h5W=m_Q)"/am?(?REq2B8=YIr[>X]\aFcZoMOrLP.rq<m`m1Dbjpu12X@@&H85ud
%TAJA_dFu=$4H4(8cCW7G!FIMZ2o,O`l=DMF]nn>XMXU!c$/?k8_[2P/l'L3c3%>.J5@TjGoGd5H0A]=&s$]?Ic=6%GmbgrZ%=-AO
%SR9[u,be.fr8$c,=?b@#+a\MKqDDg[RN#VD%YNcd<r2;.$/4G1FjDVHG<(dHgcI\eQe[%0r[\JHS!-V:dX+)qG$9b!H=t"JIQ+ZG
%cZc_qX/C\d,0J+Wg[4:*^USX)7PcSUCJ,3%!+qaYc>3t!^>DP$V#=WRET^(YZ(Z6K^.[^emJ5t('E9X]9<kslRnL1[[l3f`1NPa9
%Y&eQ4k"6(Z=%E)arCj;MHPOZaa1Fh3r%L=F=H+ES5TB!$,52+@rCa)!@m7NTSp`;Wp++t;Ei[tPioHf\I`BC!8kkI@UmTDNS1OMV
%b-0KC?mWn6i%6i;R9HMc./YcKIH55+hD4PSr'</I@,/X:.!*SO!fWT83]1&^_\d\&q3fEYDJK's/b)uHD"!XpV,ofm8T8tih"`fT
%S(SWgjYYkRXX6#8^sTU^'tIFqQn01UD&b+&l\Qi&#!Hjc/HXDjS9q0mD=7C@iYn-_'MH0:n"q<E<fO$gA?ZuE!+b:fe3Qm@a+^SJ
%Y[p2mqjLc;UV_5Hd!uJKG?`,*qOF#Zb9C$5h<dG`K>k-LZDTIA/&n-LPWu8\5nooGC`f&?`E7/+m;t+qq-(C*bHm*pl>ZIT.<T_F
%8&o+f@f82U^UU-6TE2q;An<-tH+c"l(<@(F!Em*`r6b)QPKE@Tr;G:/A[VXg9@q)O\a7o>bVY_MI47GD`RDa5:kg#sWf/$$5FBt+
%[<g?E`Fi1^:uC5W[I2Lfag:MT2k#$tNqk-$\i]^4,\VIdQll0B.ctPRY:lA",*bf@h;.6dA[+.9\-ob%>UlAZgmJ%RF$o=?f'k<J
%2Qq&5C3;ERlkPl\h_eOdhp&f1ghh'"BrRDfCL4Oo-Dd1mQMK;.fC%u>[X4$fbqHF\ecFU4>@mD<9jOi5p+g8rmg-km52*8W0WEri
%i1uQT"(n;Gb"2Sfcgd?<."Cg(3@',P\!:.=^MPN7lT;Cj+Ie"r)iJ8X`t-EgD00"aIJ`o@`p.1-,=8-26/((3(0c*oZJ_VR(N\?Q
%V0$M"/2q?KSkc`WFUod?1)8T1p9GG3Y`QIHG:2:A<'Rji:;@XT]1b)_qm2*c@?QJK./NP4^O0/7g?&C7XKEuA&XDRH<:2"HkTdA\
%n$A:s%Ou1Y)J6Z%A,/g`p*lV*4rnL!YIL&N^$q3]\4LH/3I,eR=i`7/]*$4W\NDd=>WaZ(-,Wd\SjJhe9ERK9/=dU(dR!Q(HY*(m
%Ga.=_qX/-H2-Aa$IIhWiF;^X8!3)CP@#4goB]OFoGucri%1KtN[X-WF;/)W)c4*nDnBZq0br7C)FVF<4>Dc\@oIK.CTd,r)03$,=
%%i3u4Ih3hDqn;@9?)NmWHd(Z=B>u;oJKcc)d]`PKnlMPG*!LKYE^^2^Ouj+>c^t1VmURJF3GF+1kYtjn=E1Zgqli8HO)69!@s?aF
%V:eUk5dq[(kgKqeLG&.cb*qP#OnEY>@L+Z8bGJ?ir8P9LGk.]"?!j-NKAE497rF5t=.O$[V>Tstko:_j)jD*Sg%+\S3YK,Nha`XR
%6t1=c-C!noF"ip2T2YW)>(AQGp6&ZeD2eu[V6u?A;e]Y?O\TQW9!+]]\WiWA5"(OlIP;5=U8?`.]ortle7a</OXnQY9Kf#8q#Fc#
%WSi"[&*InWOD:XBe"9;9f\[0')e0eF.d(Mc2_IA)SkR.Q`3Mb[DpIK$#)M:4:)DRYUlf]1[JV20eq9/:?FFE'\^>`0NTZaDkUEC+
%ougm:dZ;u?Lp(W#D%.TneBi'D*[JeJdkD)*Kpdd*[YLU;BQ:blglD(h(ou<FQuURIHL'O\T0GST"028RpZO/(%GLPg8B"r3l@h"U
%1r_6&j.q^(45K8Yr`dJ_:bTLqfgGUjVO>XC8(B293jEil(ERG+[m8e.NcrL7?E1Y5:4d]iXSO9l#?JYnaR<Ac%NMDB_U)CGcc,XV
%ideqYq6/MSmK,UjO2KKC`(*bD1st[QalRhtB$`em5MGYj%#DRoQJ'IG#?!8Ge]sHJ$VD,(\>tnZ_jO0i@.k@N@uJOMf!VXNp[n[n
%!`RX5_8T>*'s;blQq3jq:N+LMA_bbdc;Jq-neH=r1c%,alJ!hWQR&9VMWJ9ofh7$[Xeu1/6/qY(Ycn-t@+/8YoZHRqK"*h1>o;c;
%jd:mF0ZrqJl=2NfO7W2.'+k%\n"fS=)(Y9:#nuMKliIWeHXNX#n(N]OZ]1YmLdlI)hWR+0Jd,.N]d#;Z:Q9DKIjpZ4g$.m,(p%:,
%1=b^=.(Wf]alPm0QegM)*f]a9n%59aQ7kqoP"W9^@$(YKEQ=Pq.tZ-_H3#m.Br-jTnpEtR(G:lAR>]JZp6G^D+%s(,P-25!i8?(E
%\aMC0Cj/"-=iij!27bp%];_d[\(Mb28[E@2ja>GeAL+<#0kJ=fO_GirEu[ln=-CC5QAQ8^-+B<#\C=bQ;nY&;2rB[P/s],KP=;Z/
%H]YDV]-ln\<u2<*Rr5eZs5PGQGE9H8_elSL2qH)rRW$E@piI@*#O]ql!Ldfg$hNP#qPVfA`oBuFP&iuXhKc<#'aO"^L;l@Y]CrB4
%34ta]&U2mnIqpJ"4EYZ_SFk4,?]r_sYkcoBTeIj'qV`E9<m0a'SE7H85Tl?]Q(D/Caj/HQMT^(-gZ_Zs[u'->eo3Rd[?7$P)><Fu
%):L5D2HIDVg>Cc&]^+#m@_s'fe);_=MXpF<iOk!`U9b6<kD=R]2f#t9Ms;b4T)$P?g-;ObrTe)@Cj,A.T+7Hbkq4i775Z==]/)7N
%TWrbZ-\qYK)#Fk\J_g5<;"aT`DZ2D=9)Id\IXhQ9GB6QZPAFl4]knS:<ks?Z#4H?\*M+r'AJXkr994ua/(r\2jk'RD70A\L%m&qI
%ZSBC,VOB'\B/f.Eo64esiuR!8jeoT:+eHrpeQd.q"[`lD(!27MqPZ1DG`n8=0f_)`'cI`)-&Qg!@*4b3n-aNi_C5r7B,5QBLZc3I
%@kDkcJ!dtCO=>(Q>Hs(7?_AG;rbcFkJ)a'O?CX3rDT[673s*59\Zt7(J/I[g)49Ap0[?j;a)6B+[3YEn4LZ9]^jY`5i2)W4Y.2%D
%6_-u\`q='6H<`\*UF-LdgVB2*i\#@O/Tu-!_ftIURZA]jFSDUfGeG`@IeNaUEP/_lDe]Em0,P302,O93h7m[BKm`XsDj/qhJ*qT$
%L_#@]Z)%6P;q8!:,C2*9^[q5?Xmo<XF;)W*YOQb/U1r7/[O^aSGOPKH2I8lBVc3nnqH<Z&!U-;HhirQ`K;oU[PH;9f^CC+$/CbsE
%mD%EgGN`\S"$M7NjQoJ9j^!_iS]AMDf/0lVEG%aa)MF&K]DL!:@@_:J!BJs3*a8.VS9npu)SLKX$baTQ(/NmR(OuJ>J+`<K55e*Y
%'5/9;?OhiUnHXp@2h_#$Idu$Jn^m3nLOYlY(WS1Xa1o(@dkef=52nUJ]-Gq:c:I2<nE&'TrbGiO6,F.<Iq7CDh1VP3XB,e\J]hHQ
%;'Q4,XsX[74qZ!H64;918B193>X?'n=2%%oRq`bj9JFN=1h6mXp98n:@2[K6.8omo+VcUYJ.GP5fMX)%:Z:A#OFW(;@0-Ai28Oqn
%4eCI#&tYj#"H.qk5NrS1Q#Q5F(Z6qr.p/2RYi*=;\Q,!sjSD!J:sb])5sdRa[e*#*$)okl$uii,%ff`r:#[IHS;ub*6i9)]g5qd0
%"LWn_#,0tc6`"cjkp-E2'K_8P'.OClSm+N'r0\r5/!rHK,;c-i1j2sq)rs?UjO0sJAWUkBBU8)(dR1sR#BL4_#K#o3+M@4hW]6dW
%":61?.qHN;T+n329-92uB+jutm"f'ehXc.X7mN^p(%+T&phSM#@3XZEhb4M1p9g]nNYt=gC-8,mJ]AQtU_l3Xf/([),oE9r:D(.r
%TfNg5LOMQ?4!L1I/j0W*LiDOKMr-"Q>WI=;Ta2&4!FcrJQirelSVo06!p1$uPOhA_$%s@]Fb[J_a9)HqPq0,9L,5aa&q@,+klbFG
%UCGETP]%o#YU2aSJ\;&q]C<qmAjhuOL+oT_Zm9N0pa9R_LE>Cf82"on2p1[LW!RB]Hm'Q'K)GaXi8M72ntG3f@;g^[Ga:%2khq>`
%J5aq"jRWg,mT0]:kY)U0"NXi:-\j-VQRE0U.L]$q.0LhD+s*8/cp]YdE>?r.UMTG1]9&%7687<YVD*?.H43`8Aq>s;_B@-J&qNg`
%%)Z![ja6KJFt&LhE'3>.64ZARK_BqGmYlNcEXSg5o)U#<KS3c8_F`\4$AdNc+]0#6W%?eUf\q24,T\&L#$>;#Y^ch-&0?e4M!$TP
%"8i:^fs_#`;7Kg@W(bY/$=neLcu.e6J?j/V+9XrD"PaLNOsQ=o\YSc)j/K!ZM1SG:U.@&`%pUAg&;hT.28_[e$!qt71*^<XF@O-u
%+E0If:"M8_":jkTE#NBrAsL/_H'GO<:8/W7Pn8tO'?=IA-Y-n$!$Y(OWX^&1kLS#9AI\e#)WHu(S_sLT&P&GY;0QEocm+qbBQl^^
%E-KY`Y![dO3r.PO7C&!,:ss;AC_,SK*JHfhiu26TSMOUQZ<`^4fNC1+0doG`L3(/`$Polf0YOEgp5+e0*(WI?_&PKXJ:U`ugthXV
%Q-HHbU6Ps+58`_l]Q+_b_T_(67l)n?;GRQ#TuFlKBfIU$fMOf+%`"pE89pq1'"muN0M&K05Z-Uqm^QV4P_bDh0aM9\"IMjFLG26)
%qLT1P7Pc04J0#%8`NE>li(LCW6i'VI1AL3UBMMGb?=7FNZs#]r"Vcm`TGRu#1AO,5:ER&sS/?Ld2?Bd7PS.@WF*HRhnEjNL*o\2"
%J>"\`C^E]E9F1D-TKJ=WFrkV#6qp8/I:O_O/.*4q?rI@f&]H5](^c*QJ9?C]ij8?3'sO>::tVMZpB!P[Vs/4p'd=8QcnU)L"9YZD
%8K]/SJ@m/Go9uU>*4AA#(1D`6ga4"!RN8UQ,Uo@3K4'8*ML*1qK#,;k9*\mWKqUtE-k-SqMT[]Q?.X075a7kuM0q(.BU;'WHF--k
%`Z<2eS)+3[dqg!m4rIcI"L1:"#-nJ.7jJ?;/]_$":rX(OKgQ4'*',3CiCOEAI#`h]#?D=+Mh<DZ.\rWQR4oWeOLa((N"2t??o:8:
%,QuU.76>OW@$;8uU;7C\,_MW6'@F7>epR[R!";#WklhKOOII_l"<=?Gha(:.Qjf3^\-I1EkhCr9TU8n/a\7?g;K,/C(?F6<)Ad+5
%"XFm9*Ru6(:d?7eZYs5*--:M`Bo\T.P\,)())MMb@hqZ\"^_ojfgOJS\2CL:JIscUJ/Yh'@L(r2#\=.N+Y!d0KKpQj:k]5WX_ElD
%A8VJX8/UjBAeaK4O.i7?FuR3A'cIW8(p,2T)rkP!<<LSZ81)Ai0O#)$V3!\p`.?)9TF?(%5R#;6T+\8:)A<BT\n$2_?L\H;\1!3M
%^6U0j#aHN0_*mJC@,?E;_I\<_(;<-o59(5=E'V2kq$nLV/$SONH:VH%,42+K"GWUl-%,o[8:0PK_#_?[hudY5pdgDXkt'F&.F8)]
%C\-).M8g)8Ak'T$'^RKh?ATGk;6_2A=tRQi^flVhD?NDj?l5l(@2Kr?$rd,m/-Z.AUW()(r&nPA_7+#BJorNX*3eI_YXYk$@*a!4
%.#o2-pqDGbmn&;_0J:EHJHCY7MBp=N81l=8=rZs_guBM[Tf[g')8rZieo553*g-qU?)60S)*sD@$WEeM'S))GI[spZ(nBqU"^p6p
%jVfhoCSOge$R2hhg8`6h?tq,K6Bi0rkoqhP'Kd,G/6W2X(mKV@-nLp2$HX*gb)D>q`do9jj+R]VE%HU[3lj3ATb-:G+;$(g3bbW,
%KJZ.9._1Yd;PROYQt:mD)0!cLPRt]^AHGmg@A(l5HQ$aI!sT6)XFi#:.WT:Nlp6V!mGJu/Ju#\bmNLK:TnNjCO/E?9#4bI'0Sd:Z
%KLnaJ*eJt0>;_+mo!Qg)*jA7grP/Z[H5!*.jqUHr%2OZQcEdnc/d*,/^q51%/tA_WAHeO*!(.!T9d?H#a.,35Mi_0\Ki4?F`'s,i
%)f(@f*'oTt/LXd,'-+6bDll0cI0]m%cWGKK6t(_P5_m3[FiGgt.L'],2a.X@09A-6CoN@4NA)_:nj&j'[!%Sl1L&h2g,CT(cbQn1
%p&Y/UADi4+a@^6)#778.cn83M9=sDad5_9IOIlJ;6kr;QZ#)gd"Y2q.9<dpV;<kD<JsJK<Y`GSNjqamS4r@f4?]gH!-D&##!,"j(
%#uD5<l?8:563AGg";ict8Thr+'SWeM#LbEs3ES[[EhMcB6T-U5\+:I!P6;WaltC0N8Q:/73rp<6+TNq[>QWkDKORoc68HWCcj;ff
%aX9?+`=I?b)ba1e3Y\to5diTE#*)N]J7RleB]Tq(+T:CER!02d@3`uDRf["N#o&&H&KsaDr=99:!^G*!XJ1iD*+LQ$,DQ[Ps-4r:
%0:oP'+MoK,.ktR$)A/43P\fTXGqT8pN<:^+?qhV-+FR"Z%F5IDQ,e&NkW2*85`!RMC9G"Y!=Gi(1"[X0O"`#BFWngl*U)jrHK3;T
%+sG1[7VZDb_!t*:Z2t?.keIcUV7#sBFl;+!a@So&aEDaS#rbe8:F,`Qa]Z*d"#?_blr-l?7`8CM^sKhn"r&b"K^AUNmG*730YN.n
%Yt`?a-DQo:?jIF=S./bT.$#\[<fXtkciN9^Y3G@'@VMG9"Op2?(pHaETNWLg+IKf8dQl5lSq8sC*AWh1[1k="CLt^9<,:33I0P$Z
%0HQ0bA7Dp]B5E1H<+NK?o;V_OUVfVlR"KF6F9BBN4!X%mPC"Mr8JnnE.*/F@2@D7B#c`El`a3'O$OiYb0]2pZ;^0@dQWB*.:/@':
%K?=L^('Qsg-H2!r52lZ9JLR?3I@#9We44I6%oemPInJj9;NAK\-r^OuV?eqP,g#LAZdb>;1-c3O@,d[.Xha.k;5-A^e.b<(p<5Q$
%H/"M;5?=M9isQhd-I9JZ'm:d2QS]Y3^ehr]d<sjhDhq_uB-nF.8s>)8CNfo)!hB;o_\rSfZ7d'7NXWdVd$&'^LC\rQ"bCJ<d3oRS
%?qtq\"pY=tB]Dp@")VjmN&_I#0p:QXe.UR__AbPC!Nq@kQ[Cga;UI>FR-l/o3!AFa3$H8WFiRq-!=T;BH4)\i<s23=E'-/g\1>mJ
%)9cV!g-'0X9$0Y.RbMODb$aIhVRnMo$0#hs'^(#Z'Ttid:&m]@MELN"6H(ILcn;472!i[I5)(>SP9)^%^?77s$'/-Z/%llR%/L3(
%M+A[GXTbpGEIs,nEd0Jpl=2eH+AeNN6T^2;/[Z%@Gc1amj,8IemKB>?d8;/j$p]@dI8-"N&XYm6O33_r5'nD;k9/0nKRmu]m"IP^
%!u#p*"B2g/A_Te?`<\bfLd2n5,q:1Z\g4HaHtr!W`dm)hr)Ou-)-9SNNatE>"`:'"Efg9sM1$nH]NU2[99`$qWf")Q;;dl5%]BoS
%)MCoIAY<$mC]WR[;T;bkG74QsPYR[`So#A!!O_AH"!_Zu0P)%08)r(G^dJkY_!NR@g+80FR4X&&l*?6+"==V=@$ApQ%J_ii14)NQ
%8'*H<8^<*A`l?(ZG6W'Go/o37J8+7'$"=UhVmHmE-s2/"*O(0i'FZsa4,sf6-L4?7$rcs+h#Wp$P2`)JFS8EEK[1S0)!*qX<)R`>
%ZS<RJ.J>:=2Xi\Ej%,n$KR(R^7ge5U)M/(^HASZCo0\llG6MCh01RZG1_D4]%gaEoQl<I>qkA59*Ks?>=RMik&Fe0dB%'6;?t@nk
%B&hef&3liD6=`]s)_*Rq"T`7['KYJJE8[[Lg9_/p8IcRBln(7N-*^E_A0Q=TAD6YAk\Ul`_Y>8>"LApb?XOlo;IAWVF.s4/)/3#t
%Ql^A&9`Qut+V=ke]T?X<dPtEt<YLGcJ:;iB7gon(_e1%poJ3.C$,`H]<":>r%$#A8"F<S4"gMX:!@u-!3>.LMKJ4Np`@rNT!fS*:
%-_8*7WZkP*[OJ,*#puI%p"L?ORD9;&2c.XV-DI:i-:>"&qdr8D,`48iYdQUn49g.a:e^Cp>,T0kTjeS&b`i4LfI*RVd3W:M+IIBW
%@)=4t%k#3@D\U^*1rV.&Df(;gbU2m[ae(>F?nap(=0Oc_I",-&`b\Q:$';EIZ4SLQZg@m-9onOO3^nX?)?W>7%V6qlA3E\6To_./
%#FLR>TeYQ`&!.etk]7)h&upOKT!T7?-<)]N`[O;@BkYqr@&Hj3&,91(p'+MGBar9/R\Va@#F(7jMh$ZEP%TG>]Kj!V<&2a%e52A8
%<&^m5&Bq8ja[T,Ae9?kAF&8b(18EchUgTJIe=U+\TRC[CNbNnVQm<CQ$Npd.#R#PmiXpi8[b/rof@hK74VGfPJB:Y3)"EVV#!QH9
%?mb#lc3[C]S_R58;FRU^KG)QOE4T<l,8t!^bL9i=fJSkFM@P>kJe/a29-kEnBVS,C0NP&7VBTjq%\\.F"SR'YM2$[kOFsD1_8l^I
%C(!DLmMehC/PP"9Ws:&bX?$06.G_e7R5&'n#Hh2_n^QJ':kY:Q)FY1RJ9nSjLoa[2R:AW%L358K]-F(^8j77kj@?iP$nU>,Z,8:d
%4$-OeP1bfsK?D0WT4:ia'6(5t@tCF,OY+htYq1V"V5S?T5R)r^R`#Vs&6[9a"-$a3"9R2BR`JBue:rWD$IU@>>l`Hi(gj)&^_f7j
%:sbhS9PajBe-'uCD%&+/B[ZJ87[($6CsP+-basFs0mu?LP64'bQBFB:';;6<759W0j9qHVZTYC'b5RA6kJdu72AIY%?4E9cU>Si#
%r%l,T%bM(rS5b/]S-6e2a^n5f,AOV@6sZFB#-`-"6Z\iY5:[/pZ=LqlE.$+T"1B1P"H7"[-NetRj/f"KUlX=ta0D\*BmUJWe/`[R
%5fs.<D;6-HRARru@mK$N@HA(A()C18Q5)cO[%=7j@,FUc@ZZIa&>hu@K;HM/"s*r.N#9@OU>qH$k@$cFZLM$tj4X2aGpbSEWGk.M
%6.t60SD.-^(g3Ye%786HR)i6MjY"Ye8t<duVRqIP8HTI9^uqSb5X?6f@"]E/!#S6PZZ.O5;$P22-c&bi?k-'G_.:>1EK#12O;VZL
%33qjI4HGZRi))#d)(X0u_D=PWWZPA(oSj<4gC2`+,lrRc'<<64iJZb.'cJJsoU9k?MCYO*,R@XRh>khF%#QVK?(<pk&f@83Cl/e*
%NIGnZBIZ!g%<7>KdL%R$-'=);'F)%(dd:!I_SHVE,8cTPoVr@i@_RMq:GCQ?BI!E-<Q/dI[`nlC(8`&pb@SoeP*N$qcq/mUq/0@t
%`^@.P1e\Uf;rgdM`gR,)8);Rd#RjBW;Ss-R_:hlJcr'B#_N[EML`u:A.Ht=VA3fem=?'g=ku9BJ$Q2bgRp$jao^PY8NQ273CLWSp
%P<btI1!YEu7*H5_OS_P<5uC.*GsWAfJBL/2UWl5G''$m$.H/&[[5J=4&A:P&Gt\I!CJ@\Ap>pXp.8nQR0P=-eL,?2>;4J/*Y/@Cj
%Lgg_8W$jPoEaG0L3#3]0_,W7hjiLcsI@I"J'L$eY*sbu4U1F)#0I/pg,A(Vrii##*'KN=Q(N;',&cYaK$bug!h%8^I+Wf@';9iF/
%<+'lgXMkB2qW+#?G:nXP=NK_i.e8f%JgLu5iT0'k@qW7%!!L<(J\>8Kmqh]>:r?]5`Xi"r&.+t89n3XGHNT!i#s"<k5o0spE;i:8
%%@G<N;`m3AUk`?="2bW2RnQJKUWN`Fm2(FQ<ghDG@'6!OT]W#B_?Yjd1pm0@#Xc]@E_=^9dN&)&BS832,a+$Ibqc-VfEmEU9&O1h
%"60sN3+J]4'c`MSk%la-c7+/E;J6R#B:`b1^Yi"E*129:#Yd](bB\sl.,o!j1*k0_Wrq$OTeJ:-3dr3\#XK*9bG_Y-/UD/'ASP>$
%8?l*N7k8(i\=E;;0Lcu6/$KnSB*e40Qj[?V$Vc:YRLoQHjA04fNZo@lfE*cC0Gp<Y@jd^[!`\%oGm0R##?I><Ih;<JHYoc\d*q]f
%N"G@V!s1tG1nKS71'9gUlbp$/d8pP=PFN2_<#HDhCSXKr@#5U?(KNr6es6@0mVpH#2#1K29GE)j]7S38!>`0lrt'KW^2hba.:iK0
%,@lo\"eUi6M)-uV4BItp!M6'oUjS&N'A-k`%)Yh;*\/@#&b@`QfOu07r^K(]kXX<rL^I8qW5*:6oLX"Q?4/p:0%)V^4-D55NtQ'#
%r=q)H1>P69)P,*;=EJ61\oT#e*7#bW'P2#`^4dg7VP>Rgi(+r$BmcD/`OKH3GE)0caq7$TLl3d%#j0dh$RNuSVE7jOF+?5,2%kqk
%Al<WUb@PlK+Y]DMC(gcK.Rp6C=:se+JKJj?2Ydjj_d^TYkO\$mF!PZE2]T-Y!22i9(krJe,@;in5qijI!R%1`orKSWTL(DAadrJ:
%paIVG0G=p*Z.+T(eX.G`%NS;4VE7fhP!gO)<S6B89@5>[>EW=1:neaH>%jZaJ-&.ci`)-+P$5f*$^3Xf/82$r#g(1EP@JHi:YeC%
%g>gm"Ne`?kUP4"#e(k&&[W+Ui5RLeO#0bVZ!EJ#LP7%['lVrHQL*e89g0bVkqC.0[d>FpU"]M?TZt1$fhkF:-l'j@k7<Q/QB*\Yq
%#Ni`Y9rXMC&d=:E-jV4-6!6#XcQTNr?),bo/s1*-MoP<k)G_*+$reX6<hP+.P<8?#D_m3le\"WG##)0TTW3%8f_#^Rq)BXD<tn>9
%:6gd6!)qsCai4*t.QDFpgS"0b3\j%UhSuF&YTK=U#F`f^1O)E4@UMh%bC%CajmG\-=Q[M`",'8,l?SIP+G@8A&+r[sY9FBZ,+,^@
%<(5dZ?Vt5Q8is*fd]T]9UG,WdFQYDW"FG_qh=F>HP$f,pVg9P+`bdeSMV\pRLMjrH3E1;MKe6;g<9!3%$(Bq^'3L.2P_e=041OQd
%h:(FWR\Y'C:bEVuEB/ME2^W?`,)A-kOMo1sjYrmmW]_n"V(r-,*Pk,V%#\Ri?sBBQ2MD2b=5s&j8iC=u_&#ckLS:8DL9Aeu.SRMN
%%&W(j-ep_c7]pqhgtTl6\#ka4NJ&!FV9!el=;jk9@tMgQfC$80+i#QC+VWQ5eo^H90m[ESR6395i!OO;RUS)V"8Xfe_ehq#AgjXK
%!=L9OTXcdl9)3KYX'iB/.fc.W0oM.9F:Yma`^/omEc6`aK=VDCZ`1;7D.@-=RN&&O&Zf+r@u2IFF:82T;UhQfT!tJS0bRlOS`e#*
%AAF3Tjd62BN6fn35eCWCm9-iK?C:F[B2Y>bF#ZI!C2:?q"n-8\HnnZm@LO,2`0G6j23!fXSoJH>6t.""@H:iQRg"odKsd(u9mek.
%5hLu[>:stW0'ntR>/;XgmYushDo!T(9L1&Y2='5Z2SuPK&F?A49m:QKCj4-f,;*5"r?A1p&n,/XRAC9/c&NADVCW^PCsOeD7#p1e
%-mg]b"T_WoF,1H7/7FhNL8,&F.^ZGd(+=3YYjPS6W@u-TbnOW2]?>`)(suk1;9`pma]DHm>$)OLN15GGgo^hPR:3?RS@&rgNi&g_
%,W_5mB]Afa#U)T=TKV%6)Fqc3Xq=DYTM-WX,Vq,SfiVm>nmAOV`OQKA@AM<I-saVj;Ogcc65bVIjbu+0,,EaQA--0d`!K^bHA7q1
%_/tDh;<bM/HY?O-^_JSt.H&5:Mnfj^RE9"mkZtJD8$s4kAZ@A%X@jigKRkgaHDV0;42Q)hkF<:m^%272i,Ob1X#4q-)BQ_`%7/+@
%"bL^p+'jrt>mh&,h%NK[Wkdg,Nr/qaUntMt64nD^E%IV0_Qc!Z63CqT2OMIH>7(`\G9$^U0F(3/.5PQt1)c8WI+hm^U]PA)-lE/X
%j4]q]*CRR]Fq'C&<br?u>NTP7Q+s&pBX1nEes0DkeC`p6Jj!he&k.W_k#fI:fBEk/BuAZYZ(X+8q[(I96sD,`]k<^2q0\eAeZ3=o
%%=[;%#=b7)gXL@>9I)<FMa^M`BZ:1I'h_F#&Y!h2"0IFY34t0F=?H9a9)="@nVjRcd<robaHY*kY6JeN+u+?aRdc!;Nk22;P+$6$
%!r41A7^XGgNU"N^G$\UjQF+qa+?YC@*PsKa":X%>-rt1=Jo2*-onjn?1g)+P9!P`hRlElN$hppq;2(l4/Yn;u#]hEc`ist=!EO==
%;*,`IOgnlX`#^=s`MGAZ6oD,GRuP0M><h[Hq&0nM#I,,=Jb*WlRSuqRX;0X__g3CP0GV$RDNCH,&#hl1lZ8=GcT,#lXp)i%WJZp<
%@U-/LBQH`X@0'_B$g?$&;;<3]=Xdr8%5FOL<1[lWNE"2a+\a(-$F`*E8Z-7=e&JT-Qo6tD7+#7Hk2LgNJ>k@^XrBi5N@6*W-]J?F
%.bkpS['I[7A7#mAC$R54^da<fd"p[=kU[%?_aX/bE4V2>LhV#MEbRH.Vlm^@Llhl#4+s&9JILlS/fdCWWAN58K>!":BUiQ8k]*pD
%M(kRh:4R$c!+S\i$YcUU6(JnLMcjSW90t@.X\9j!,i>'Uc6Po]0bZ'rP=GaaK.#C:)](r#B:?EG.3&^1B*HZ)kP@c:j/GH\T+6!W
%r'XEbPV-GTK]XV<3^:Pu9;Xo-O"<Gi"L<(s<'`CC(^F^I6.\5p6:;1M\@/KbpM;Ge94PK%KusqJhX\d0'S^/^oJ*kp3eZeI0so$q
%(=qS\EuTdl6+!#DjD/dRPgr4!VbH?ODdufhR>$g[E0IQtnB)7f<]+n4=`>EfU,;9$*e'=e-;PSsFPE"</#g&:/i8m3#CLDG%@,E3
%rAtER@GpD#J@QYg@M8dq'S/DCXLm)]\B.1N@ZW?',hbdAd4^=`P&V0@2Pm1a42/,!^^HArHoSP['<`?iH]?(Bi_14\Rl8,O(ZAES
%[k;$t;-_8b6";$[8I7V_dNP)TdVZtM'E^oZ&e+p^pr=OF>:5't_sDFNTEec*i:D>f*/c+&&5AQBT@Zh<#deb3G<#>L>Gntk_F231
%&9s7.?4\HooJ<:)k>=Maa!`Z=`"*09H,@LMW:i+#\:qY092)b(Cl2VmCC.@'0fQ+Po/I_DATc-0,e=[Ca6jk<%,gPehGDLN!ftLe
%E]B(Ue)_QqV#Xpd3*kS7D06M\4QaX1-FGsGIf#")"rC'1\(#faN+!na>Y%;,F;NLQgPOe.+=('`kKCOE1Zb0PAIhF0\3$,q7#)Ba
%nUO2c/%DS:QQf[t/ogD-:eZp=8I@!k'aA_3=(VUoZp\r(hgYVmEB.s<"3+rm&?HZ$aE*A8PFoX/!U.nc<%"Qk]LTr[?:DbId^<6\
%p?$EpO"<t0W,ei"2P@FBjMMPCIC0/mk8[nSGs^/H<N_PDlW;fEmlO:RVA0[G?YBrEWqWOpS+eiqpI3]SO`!Ij;23oE,&En-1"+n]
%e"36\/3l)=Q7-2.4FC>LkN>S/3jj6:Jg1-B*T$iO2<b70dcC..a"cDdr7)3S#"BC`6\];`/p&;igcIhs5e1'RWinrI\6(YA)A;KJ
%E>]KtqfY]\6r>,B\aq)FFph["@&K1UbEFT1RYe@s\8nZHAPUShWV.1q;>($1jD3'U34`oAC<T`b"1(GP#kT.l=d'#F0ZQ!$^B>?!
%UKioS8sgH[+>/Q[>WIN786g*o&eQ7Q`!5qG#d!3Q3p=o8R<[d6&k+([\EGBW9E5sK>jeag41o097>PQI$&#_!ku)b>Y!i]3=o0_c
%AZXpE\Q-s,5WYJQ3BiJ(9gtnO!3;j=YacNr0iGq\;`P"u$a\n68Fk"/%shK8/6cLRF%(p6`&o>sV%[*/M>,I>lSrT/^]X4lP\FlI
%[8C4`2N4I6hS-N@cUe>mBJECAPU+,C7bhE`%9Io7MV&ui7pSeH&'KI!A+V,.*4Ott;[6F06?Xalm2.W)7"<$l&QZ))GAfXUP_q//
%.REU!2&4deb[\:aq6_#]QO_p%;s%L4KQ6FIe?0,9Te@XLH?SiHI)^7eYC.O\M`h>'_K>NC+<aGL>82=%:t`lU#d\,`[\rTq&6&Ks
%FoYMdi:1m=%pE@#G0r\gq3!hq#,Y3>B&pgZ\-AE0IOjIqP-\K)nEaFQD/O[5)N2q:$:7_D+c#V6hah059CEC"'Mo[R1uO8VN!V'C
%@teBPL6A&@KX;O]=I<%@Pq=[h+JB7L#u&D:`ZssnU.)-go^%i0^8?K9cfCD>eZhPr":hR09th$fKP*u!m1>]mAoFAVf,a',HoD*W
%gQZW/&^5EZ7W`JMJP$X0g\*>[BR?4*1g1?^"_j/3Us*o-o_)!C+/pP?iE)moK[II=`-UXXVK^Z'kUKN?6A#V;^C0\,?/r6o%R8Qt
%%mC,.2dTl[3h7qe6P)q?P+ij0cbS0k6C;9Q6Wn^SOq"0@3L,J."-mZMH;'RS2^0'/+CQ@i6Eoc:VHb;RR'o+%Es+Y$6OF0mjV#F8
%%?2EO5[Pf/Q(:KeQ*OoCI#tcneNs.+m$8)Wlh]`fR)1eI?4E.VI6j&idJZMHX?uYfg!D%(3)lMa?rUdZ$5O`ITjeuuboQ@P5aH]H
%L3"eGM\0AFi0Vn,KiMu[fEludYo-!u;Gip#8RWQ,R3(79_SFa.\kJV"2,?VK.$lf%8222B[3%rGD1VL#T%gS1mEon9:^"f;=WE4p
%`!EdYUbI68#sR+sTqDJ@a?ElV7KbG'ZWG9rOZ!Lf1ifSd.RG&3%XQ3P0*>qcA//:kFK:&K#m6sWUUE89BHii43T06^dM&(mcW'eY
%_%o^`#PJ<FXRtF0KE06X#5%n]@mHoeNNS-o&VPCW<(+E*o*-8m8##a`k\dn2G!op+Ks,>9XT-ifh5ZD$2_qcE;+(c#/kn?%5j*nV
%XmLaD%c+,V)9H](PMm@)`aRiLX8I>^*sS"g)VG4#1+!iZFAn?k)@_^h;(a2AcRG:]<B&4.,Am>ArP.&'Sdm?i;"+]uVC"CCZ8n.K
%'NCm(0u?&sDAGtE&YoLL'W-CtW02eGjJ:7ei7/@)Q"EQ9=;bCWEBP?X0?&U%YJQ[R*P+;oEf>:M#73S5D.bCQdH3J9];eKUlW@8;
%^eQf)fK'Q5#.?GA^8Nt,.YK,h1H6T+QgH@6/Hs_3TI'EJ3=\>ts0rpuV1AfDD_CRI(_E"O)\n0*T4AU\Q/jeH9F0BP;N2($30As"
%5hSO;L'.8*MPg90RZ[%.1IA7<?4%q3\;k&l]D-J7]1NeQe+!MJ\/RI?%T`o#rPkZ_GN)d9P+N"9VD2PIY.EV08M^b2nhmlZ&M,nX
%J-ZXaG#$J,?j=N-$bRt8eX@n6[(VtX"7lj*\X@Q=>geg!jGtJ<HsoCps*n>CdV?meV2<G)l9E4_TI$PThN))hciQLb1f0s=M'S=M
%)EOpfXD/(?H_'V:47^DAm+rKFa*kRhRk7k1HUp%)PLP$gNMu+Xhc"(j5KV:DX=N5kmsHP[KFG]#l)[cEAWG9@QdLGK<"\$u:fA-C
%:fh4S?U:-QAid4\W<E<aB;lP^!4K$;Am]fks5Gek*C]K`B]k69&Z%=\Ym%9=]>>t>=,sLV6CE*C`UYWcZs=F9W$T?r)TF=;kD7]6
%!KBfI?NNFR)'F2l'3AC4TJq.g%A.e7[U!8bgsOb8DQ$_5_f^D?(0G>7dSk>mDt*EJ;6!^b6=,%I?^%*gDGOBo9YZEaG7M?QoB"UQ
%JN3eK^_[,+/k\]nM>m^i)OZhKc't=8's1`S\e7;+eWWAraY%[DchZ>EWF^09=4^1Z@?qZHX&%B-eOoe5R97dUL9Qcb#]!q'fLY@F
%AJY#SY5lB\q+'pbPcZ?M5)o2M'J&=pI*G=-QhgL'hhV`J&m;5PT&Pr_*WfUip9ik^HC8n&Q*)[)R]0[7"S=@cGt2:5a9q-2biP2%
%GP78S3p=[U%0;5V8.BCqXc*5MXX9a[9l"c[)ohOtKVoMEq#HFH#Yi"%aW7_(h0"N6FB,PHmfpP'XG!#*lM&iIb)>N5^.P`HkO_bq
%-kT12*Iip:_un"-jec.#;QNGV^4V?d$3M*OmJHh8>R,r=L9JJ/PO@Y_MrHRt!d/c&Cq_Oq@.fPXTnbkfRQX0i+6q>AP(Q8/Y@E?6
%C$`=SiiCkM&AOsj[DXZ%I"QjQTT>oD/cjm-NQktrn4QinNdSk5-ZMd2,UYT2/A^q"&^hK(/0FkR#Q\Vjh(.a:Ko)_naL/3]I7a/L
%;#3jnkjdKr$gke$`^8g^fa<mG_V\./\hpII[-OSJT:A'B/e5.V&=I;uV?<?X9'0eCc,'IKGYb-.n=?3,BC6d%]Ue(PZ?\Pb/_j_V
%Omoh>a/$@_=j:<gQ6/?M/r9Lrh+5`l_%^W%!LD>8AlqDMP<2C,C^*_`Z%7gR?"Q'YeNn9p(OPo\:hWMP.3N;No>r>=;_Z<e(Q)sE
%QbuJSC76m(n>sUl&kT.V0pif>^9=4c<6OJn9JKRS+-N?N<&/6(@q(a]]F3Xj65F!>9Gf[jADB@j!!pkdUp.I(:GHGZCh*n$dMjUk
%F?R"9[+30:g)TF2\3l?2>*P-&<jnh6I*IdYbG?"BoGt)TAl!tf#@*+7dnYao&:KJh..5598glJrNapQ]f'+U0WF=Mncbgk:)k4)^
%]]Bkh$n#\+-b*h"S21H#,Cj6S[]PeEIMlrCMdIuA_'"GPi7F+o@YXLXWN]3m-TF"6M,k-4=5JYjB'DQ=I(_!AS$RZtPa$:!%O?MO
%<]M%uapB]/'3jnH?aR5ED4h%_8^_AW[R)EH9eONRgmMSlIq$)5W?4E><CnK/[$:1I'@Kh91#90f/KNR4Bo=hDQ?kOXm'rWM,_.7"
%-764P7<b>0,"]QR8QT[)!i`&7=R=Sp'XLg0-4o+o=f0dR9.,j%+mF[ABn-3J)-MJFHPC5(dF,P7j=m6Am.N:uW'WlOm2O5H%_5aX
%6_TYQarQgh:jTO!iQ!l6M$c5h7!q8d<.AK;Zn`Z^bR!!)Ab-+ZCSmqA8P8=Q"Ct805im4;aK^X@iUj1gSOHc5:fWa_+4:aC$^_Q>
%rNuenEi@eP^0.>$8K@G3C'T<T?\Mt&*:huXDsTbc@cJt1o$L?p3K[3T"Q`XI%(c;t.\FF:Dn;bd2E^tJ;-)>M]:hX>(?sK`':g4O
%0gCdl%,_OCXf27Mf`CqQ>i&2FgMq&eX@H**X#ZEk)IQ:P%I,'"LgAfk:]grDhBY?B]4%\*2cb.=>PUa#AKtXVGK*9F;B6pI!!S@q
%XgWC/8/j>[Qrnd]9MNbp#jH,g!P&@lE>iiDa\IA,jiWQ<BW2$H<lm^*omF;nWn5Yk^$'!?6h*0(pe#,nL-/?uW_90"TkRCSf^7oH
%@Y*8p)jS[I,EI"7-rUqjX=.Dn*s:HiLnkOs%b:&0dn'L.k-@sRA5WT]$Bb"nqou]/Fo]F8/nNK(7cP0DBI:mWL.M-ul[IuEHWjAK
%`*Ps%<c!9VBNLdop4^8oZ6-&iJNL\>BjC>2,43lS`[;AR`JT#P#ORU'TsPIg5\_)nV?>+9-7LZC)'IV:Jq]"ia>Rl8h-3[)@)tfH
%ED['DCtn*O*A-%r#g1c^:-a@+[h;N1hh0NOZu?He!'PgTG@@Uo2NB;n\0HLBJ2!\5q`;(MQSX!l,$F>M1Ie/C@]nl*!>Y!iY6hE?
%X[;Gq0eR%ol!_1MklSrQPAd)qQ*--f'L/?)VBqlLHZ#%H[;DR2KK?VqqI+[?kUpo3a(J&a$,-jK5%pe.iXZULl3kN(@$u3J0E`m[
%Lu'Go+;E@m^Q)#t!HiXSQ#a`t;ZgfuWd6r`7,gI"+"TPaBnW^n-hicYAWMpn?R8^7:(,Q"64NC`ac>?5qG?OCQqZkEP(oOr&B>^N
%GsYVhrmU;6=n8/hTbRdDNfReuh4/6d],NV-al7_gRBBgf3<7#\O9>'c?(>Uu_bY0!<6&-:a!X0_C2Ohb3-=lhK8AcFEi$omH.F;L
%!q1&N6R"LRW*"hs^3Nf2>Z=ts5qJqE^[mk+2?s=TGdFDlln@cq=ndl,:Yi7d;RF?&p]J&G;V].?X$uR[Q,tfjR*^jpLs>AM3]qi'
%A!/t!l*NV#q?D)ok#1B<E"S?j>RL`sQ9/_%+dGkig8nna3\B:J]aif=Qli[;7*<BZ)Q?LYE"RTjCR0hL!.K_X>N"/?6@r,"%TdV4
%bX]aOlnuQnXJra,p`M_f6>/"fB.9aYP9nlbbadL[Jo6%9j:IQ7;K$=8B1cEiWn]]1^=2HkomD5!F&<KhK[Zf(:\17F>U2V==[sE7
%X>P:k?h7)kRg(3)8%mB@GC`B(QI-&&L&=O9k.dhmWM\[PI^GGW!W.^#hNIcPVR%+s8."YO?A02$*uJ$q">Nn8NiP&H\\mHlik#H^
%f9FTO%+KnDImsS0Ne%2FNqRi)KO8]G"`EEc*<-[h!DJ3j.RZF')b/m>:A'EGTBke^O*\j+g]\=6%TFKNFW%\V%%l8XKI48^JCAp?
%/uKhuP&&.1=TAm_6D@!_1JHhBl-SZc8$;q-'^/G22FAf;Y-`l11a\t]eJ/-n1]crV(]dc[O0Kp.XDc&>oTlG@,XoM"O9[,"$(Ha,
%"h8"J%>9]<5V1,-4Kk#uQ9^+J5pC&OX$]V"^NjNaCFjP@W;3<;JdCj'm\Sb*9pM*l^V98?p7)^K-#(2AQ]$l(WP:;;!K.;5XqK%*
%;Xf"m@hS68?NJDI'Q+Vd"QSf`Y;37t"Ir]_@tH00Q/Aa0,oY<?Nf/*m`ZZU=fPAY=DPbCUT@9VX,`R%Uh>CuO[>OCCmNpQ?hlpW,
%Ok2tLI%b!]@qE/s;+8##f[!1O6Ot?<GMhVg&2RfZ[C/A0/lj$igjt2NM:;RC7?7RmF#>3(SE<2J=."W^dj70BS#:)fD]!thqbS&;
%n&i>%4[@B/CPPm:8]eEa$V[sbX[@dX<&p*\YQ[!ZnYUg&QG"29>cJ<7cOd?)GW'%AeX]5A('[c=dC^(BpPMl4mZ%a^d`LpVh8RH9
%de:N'XkR?_o]VcDjZ+jnErn\0$gUrFdbqsBQ8Au\VYjb_WheN0mr]NA2r@6A,+p2`?RPN`XTRLScQg>c$P2[IroVeCaS""g6UJd_
%cPiUk'46>GWPhL3MJ`2UhkXsbp1(VnG\:cfU^8'*DSEiTXU7ZNP+k2J9,r#R1%OslRG>`k%T`q:$s$!]YT$#4W<SFCAWq]H-3ol@
%&_1Le`dE`MU'tSe<"H6T?`Z_>Sfibs/=T&j,SD9G$0CT8jRkM@Mb^P*K*-F570'$hd.:d.7rUN:\pQY83m#AKl#[?umd073P4"bi
%0<&LL1Oo;EImh9u)S:a@/Ps3XikMT5:P9^S9).L!X''rleg0jicB?>K:D"X:PiH^mX+ml@52`]>fN>,sHC)&(ae=l30T"0Rs17.Y
%:uLY..QKgM42j;"9bgik0:%`@k_Y0%lW+9_8XGn6WT.D[>Gm=6]h4!n6l)R2S6m!M/c$]mc&^J?$l^Grc0?g(2-#F7e?34BFK3Gr
%Ur2]Q#J-n@B=r<$_YrgN;RqkAoX5qs&_4h'<ERk-:AM!r\4MBN@eP-/BXuKt.'K,jp!;=YTaJE2VM^(8p%<1YDne)115\m]]#F\I
%+<:.mQfG.9hR!Yh^B<#eSK8%CcuK]F+GRg`1f^>?FZ"a6dmIr2=/%)?O2poAA3@4&_Q)?gP,5-lEIV^V>ZSJ9"#/60q"]#2?"[Q1
%9/]Zj,s<BD=:jhOoOYhtg9J4Vn``5+HfB7r?W\X5JtmThP3/Ma^T9Yr#0K.IO#hZ`)#We%.EVIX#QNfd]^;MIl'Y$*MbZ"k<GenG
%ZtF2AmJp<S&/[[&]6LWn/T"D8\7C$jZT!`4G$(An1BZ!_@bVH8hUa9Xoe!-eN?GO:\S'U9^Jm+l!qS$/PiH2pBT;d]'2eoIWtJg=
%;AmE+6!u7T+1P+G;+hKk]-,J.K=hq86IGtT_iD?.Sc1E*n2sJ-DUV86[*AZjNqM7(7/-QMKS&]6&Tuf.O"Mb2ijBDneO9O)79Qh5
%fq^+JJPtV;2,I%uK"l3DU*$66DRAk$$cD\ae9IX&[u7i4))4?>kZ*q$R2QVH,PW`Ma6T5bU<I(s&lbtNr>G9\1$p$kC^@FGKp8GE
%5._F^LY0!<_mXn.Z)1-eW"kQ`%o[T>RIjqHfb20\^0dO\bjRX$!-\BA`rmD+5YV,kgh(nJ5jJOpfp#P="u`c<6lMiH%S4ej'Ieo$
%<?ZZ`1*lbO@rBJN4O(<_Z5cUI+k$HY[c?"Y*dT<R.!b+"+dXiJ6K1X:NK8+MPg@3'73Jf)HY_M'gs$)#bja5Y@j[39<RcLKM-7n;
%ZQ/X7WA>SApdHR%l@.Du8X1J5C,2l%c74as:9h'8DP=a;g%dBs!%:DpF1P>YQ=TO5rAW8__JLagQ5WBEV?b$CT1)#40M2oBZ_(UM
%/t)"/d?'/Bosj/,L.0Pj^HD3kWIqraE>OU4CO^=3iB61[f]tegPqn<D)Cu3R\12?%Cg(R3bP8,"G,:LGY1KU>o#00--*(8hr3W6c
%l^_?Tp"j+TMN_;s'm,NoJ<@Za"0Mnme^nqreg68Q;"15jLG?J:[Q29.`(jj&W:u!Fcq+&K"r#;F-!fV,=P$>uOtqbQSLL+L4/--P
%QYWW^GNosY551\<-Y+9c)u<M)6p2sB3ATG[CrNAIZ6T^(V#^e@;[lDHh.)():1VA8MA:cbC`i0LiIA+(9Keb#KBe<`ed&_PdnT;Q
%gn,nf?49ZnV"u;^p_c<)S6kQ<.D2h!a2Qb7gn1^:X!:k=-EMN7UR?mjoWq$#[s,6='XP"@HPDd4,(KK5XGKqM3W"S.mqI1]'GWaB
%@(!r.d[Gm=\fJO]7e3fHDk?hIflEAnJ?:MtJEP)s@j_*2EC'L9Sm0*U/^,\$%Xa`qG^i+/3%GNkS2HD>DnS],"p7\@/M%T[HcZ+s
%^h"p'V002-?)R2q8];UA#6VeR<2"$rA/$I%g7d;)\U8.^$me>X\/L"#-f*M<%tYh7]Pp@01]ds'XGEE<*f4Ta%7=Z#/$pu:Yefg!
%qFIR-#&HTO*R/"Lnfu)d*@l/f*Is=m**U@;d$:pLG#/i8,4uPLM%X3t]T]6DfonLTiU&6jjp29.-q<^rV'jGF4SrZd8,Bridn6TQ
%'"c+C)VYkLa7(m"QJa<7fAP>q4:,-jVlJ%NL(ebUCrXoc88$QKMsV",`(F=]`a<<ROL2#!>:Nc"&"e,M#g4"eFU+o\.<_5eMttTL
%88O60Ks]L@nlJap@CB6F]p,=,MV/F>`7>fQ-9r6P%g\hMdc5M_/:NCiqOLL_VW)=m8FBS]B&[6\3qrViH/M>4F*T!222Er'[cpnT
%i$E2>qMlWc/o$ob5<(kL<k@+A2uTLnBOX"Y^#VbAL9LO'.rOPt[ops*3aju)Yi_e`DKaa=9?NFXl;fo1]Zd"o`cN59E&.QZ3_<:#
%s8(#GlX=q1Euk<DaP2Rs>HkJbAOauI_n,ip7GGat^`*eg;:MF_.t9HldW@XIMTsQ^Yhf+BXDW0G-gKhH:QU-nont[\UB2aBK4T"^
%4E?;Q1m=/KRHEUh+G/_`SP+:L7&tI@PTfXY?O+bM.Fu/Z[3a'F4As:h:sQ+"j'uV4+F2%?!3"u8.4,f$0hL"g9+:-%:H.o<fWR_o
%k&4#`qe>_4h39^:N?icK8>qdZZ%$X4@\0uU'"hDD0ia11@B;r)N6CPUr:JSM\UcJ9lV[T!mB'M:+4\48!&')&!pX<YLUj(bE+FLO
%A-&c`-C4)@NJ[W;7oa8287kNkR-8%Bqamct=#\h#!`L;$".I2jXp6XSE^MS">)<7;"@WX/hC8b"CmbShjIUDglm;]op$;75@8`K+
%(%[/uf$]_i(G/('3u0XKS*+sdRg]n`3]%2=N7k<O.V/.[BCi+#$q>a&#[``j_(o,2k-Cq?=H$b6+/oJ>@[$9?itDV$fM_YKeg.-n
%R+hcj`n6f5']pm5>'c/K3IMX=*/K>5]fkW,ErD5Wll1F8]gFbn]W66\Nrt'\_I2gZ-h2&PYR^$OaH3+]=XnC]L?Cg4;TtLBNGqDY
%OT5!ar@fK4FH#al!<)a'oot.cjo`K[a)1/bLkqmcJN=We;aJYn5YC<:'<0F0$V"'-92qa#&<dk_:-KXlf)>pk8B-fH):d^ma[;^.
%Fo0]=Q5Kbo-ZSoK?e8O&E8nIfKLWg'fe-,CR%Z.6W9S;#.%,u<2^PR:0aY#bl#HJd.H2HSfu3;<)fd&$<hNW%6s6`1KFYjeb@VLD
%7&$m1,$2$k\@U1]BAOJ777P[H=1N3Gg$!EZAEpS$jKun332(B.-HVBjAdBTX1*Z,9ip9,WV7@_fdO(?7[<X'ULt[4.FGd\aAS4D,
%$N%<754>]k%?2b%PllG%mV%(j0_pl)b_mE_'rpfS22G5i.u*E85lc7s$e]h,j/pi7R%Qt-A$pL&LOIhORBrhl,A?:WaL]1jVg^bk
%k^Y6).g@,mf+=,U,X<0XCnobR#Vl5[7)H14-.mdS-q:`FXks$!NrTjb:sfN`fkJh;Kr]D6;UpN\Pd#sC)ja8XRGNe&T76T-&as\2
%`J8PMG(hL1,1afWrB,F<KS:8^-CmMcZ#/Ps>OQBlFFaFn\b"tS5PH[m6Dk.&82HKimp31VQN8X:-IM'8F?]J/,B_\i)WZ936JN]\
%gRpUZ2PQSknue-fEE*L9r2%^3i>rub&o4Eq44#i&,LH(#7m+AX'._.$BE\l,Lc7s;mgPt(Ydd=/h'oTd,1KnO==$@g:A)A^pX^q8
%<lo.]M?U"_N,D"*hkAGE$/OUsUK??QqRtE8L'uFDfN-2[9.seb5?c?[4H5WYGcn0r(IP_+j#.=:D:Dm/C"EWPa4QCQEP3M'TO'f^
%3QEbj8!\MXQ^6nWISYHfOcS[VT.XbO3Ii1t,BG2I'u5M0MM/8!1*/:i1r=-Saum[`/lU@Xo?`AF(aiF_en[e!FW1i8F'6BD0<O"M
%WtHPo(/D06k]:;;N,X5X[o<N@]:4U$eMkLf9FU0+Y-+4Q_XI-r:7"fX]ieit_EG6.^7JLU$E-"M.-12!^PWd#O'td*$QMdPApYp8
%#^+,TI+q2GUt.t+P*+>EV2VIeBBfocL5KLsnHKLM1k$>2YK'f&VQ@mFpFd$"HV?SAc0<c7"%pM1)iG"m>5%6HpG]E-7j`#-*]t-T
%^Y=8/E8KXA40)^:dDMC$j!$:]s35*/HXld5Rf6ie]$$l-Ush%&[l:j-CJsUuECR%0C"rYqDfDYMg-J_t-T/+L_5;J_bl-a!CjdRm
%c[(e\>#DRPVcNnjRi8QTr>UDnFD,mB[Pumufum,_E,W#&r=RKAMm68g\(p0d6tK)g&#Ls"3H'R\L)-.`?FYa,J+qh[1I?+nfLqFe
%n\X[*Z#C!Qaq3_f+N8SnH]+ffHDQ:0GrdRALn03t4oIGYs6`0VLP;\s0Dg^h/R9]Z]UXq$ETi@9T[]C?/r@)0J\mcaeCTP/&6Y>M
%`<o0&ReMB[p9grokP@n-'pY;F<j3I..]*<kZ'_@l/F^9$dCt_c,`5/J2oapqLe(;hEd$&=G)[l*)O/IJY\>!0E)\]+&/3E@2:c3$
%$\XisglP"LSX]3\d2bu+LeV*.fXp(R+5<aq\OpR^;o6<FlFA.H;3,4'B)h@A)_J`,m1g436g<6q;*G,_%O.sc<cU^_=D=X&A0\r*
%WLT0MUsleA`L(W#SY,oR*6qH[LnU^kFK')1=;Mh[3FVaJlll%!*6L;Y2tj/V`/8KsbU@_%HI&&on'6`Oc37W$o;U%I6r,Gnm]IKB
%E6##'GWL\,$QKnDCu>K)e;]rH3\!"MPJHGSmC9&ghbaV1CRMOhDb@6'04AMMKW$rS8[DtDKN<e4hE2:]JPNVP/b:g"RqRhR*5</P
%GdMRk,.Hg*Ye5'3*Pu7:AYL@#HS3Sh9>rj`6ua@r1c17+L^!p2nQP0%Moc2OJ9$si8t]Qml4<"YDqi0%_gV3EiX70Tn.dkDCH?Kq
%A$(p,Rl"#\s'teW\^k6c."uel<a-M0/ju1?++@sF>bIS9qL%K>9U>Oiju4]C`HXujBq?[L-Wf5%p%-BNi^<%0)TQ5<GuO,R*OWF/
%U+m%>d7_@AMmB'#0*<,K2&B$Q;YbK/gfI:"\1u(SPMBjH:[DtlMbMka=_N@\NF]o^MYI6OW=hTgP<008MT4E!%7_t]WXdW)I440p
%GRJ'k`GLq#fMpDRm[tT!6Kfp)W0_uIEkb*LY-)@D`DV*S')LY:7dtK)L^76MZtlhboai`I_s]nk9CJ4KOcidTPXP4hd$ES;cUYc-
%ihuB[_Q2h?ep]!T?gMjFS@@uqe:U)h]Ais<j/hV(n(jkR5Gp0>-ndSl5'3k!!N#ED=qZH9"5eGi5MCuqbU[E<Q.`NbNW/sE)/(jb
%o`krcQgn<p`rLALQ0_!$o@j'-HbRdL\gf5"Sg;=CarZQdOi?c'U&$'NHb((R..YEN0!SjQ?Kf4Y+^q'f[cp!k@8#WimTn*':9_+K
%d^Ak-h-``VNu^J$6C7OVR6dc&QVeXGdmdgrA6%Hh&C'Gp20<>WZ'o=Em3a`d;mM/$_H-NNDj40gg5"+4<6P4r6JH;OhWrE\mQ!J1
%;jNeb4#U[c,*='=brd$pknq@mm[qu&q1NMnQ1cM5X!cI_Z24$XCG"meCO=".>Gt*O>,iIc)H#,=n*FVB:Dsb6DgtGAV`qX:]pE?m
%.RXlg;I>I_-BV=!rLa)gn*[Z7pHO'&ci8=pXXGsOReK(lVA?+Df4Vir.5qNhK"e!?0pS<IL,"5*'>[54?^G2T=>Eun,O9E]Dn$'U
%`,Y((E3hCI4*rV>V<S[)\2o8,@iB,Z?a7!;Y4-k=fq4IWcS!Buqe<[N)ttl0hH+cZOc;XY$,FH\TTdKj@!VcW?V+.`Lm>,+'\7r5
%SNXANmN1J4Kl"ZHE6ASm^HV<45<IQbCbplX38n\mNA4;:Iq!.9CANZf7h+Y^?+',bH1.^,Z9S@ZLPN,)VjVXZ._0lBL^>fQ4&We8
%Rd:;Z-)W1WGIWNZ"Q_+Ij+3[lp'r*K<($<.^UqQ>Fg6.oIn]7C9c*EfA-lHUWu\qss4aIDj$Rl3R$UXU$-)UE*8Z`0;^G'@b)-NA
%eC&%T_:2B-p#5%)-$`\i(r(7+paOteIYs!V0Q:V;foQud+e>,'G%_::Kd>la<'pu(*5Ks+OoG%-T;bX$/Y*An<R&2rc3Ffl'#'>N
%IfVnf-]FH2N?',RG8N+kF<qPsYFb-;P<4)CB+=ScLcTp]Rs7E@i_<)kB2MINUP+l4k/Xk'oV'YIK;P^kk:c9UDmYtV/V/O`>@O;[
%\<'#/i_4QSj])U3E+VR-&fr.&U?@BEb*:X@%[9molu3OMc3n/UF7qm^ms1X(6BG6eBVq7r0gUoE@?2LuD@C55OKOktVo]k`$Nu&3
%D'Gn*b\=BQ5Z^[UH#JI[[XF-W[R<;_QOU+/0e5IY.Y,kM=S><O\-i_#,Guga-oL!K=S*_5DRo3[H#-"jq/qa6`D8U:,qciKaj10a
%Nfsd$rSdL\"\+-ZM4RnYruJWB?)5JI?hXXXT[Ng6RsGY)K$%FJPLC4')*:+j4rs41#]6Nfdl^nd[;ZC*#YSH2g=qCe7W5#j%)P9q
%E>H$P/!(/HFEXF9Jlk$*TqPs`&AncF'TO".#uY7I-+Vc@N.]&RRl;:l7gFTj3Ybfipsu:BIA2f3a@1tQgto`>1`H7%($oK\'U*/^
%n[e>Sgn,PeiPM!IEt!4)HC\^+)BpbPr\AT+0r+pN5&Bk+AHut8b=s&+Uarlgn.*+bH,+8aR/H[U5Dl;kW&$SH770D%:.IX4dfm!C
%9U#t*Uo+ar%TSX)i))WIJNOUdo>Va]?h>DqV(sQ)s)tn`(fE%:DF"Zek8K0*/5UCrb`T+V2RX;E%#]Cp8DQhYFb84NbMRVjkE1iK
%`N,."M+n`SIcPXcn2]K!TY>hQkS8C@Vi*4UK(:tC;Dtr-3%$r.Y0<hDKm$>5E/D.g8g\<t`Au4]dZ9HKQLJD-0s/9.s.&lF!RL9E
%fsQI-$frA3gLAUND]X738>.kJ!0m(,&4HrOg5cpI5u$e7n$itOcblW92+)eB+$SF"pRB-^0iK%=D5)JBb!;\??aftcO]eao9YCUU
%B.cO+RaIF,eDu\C2<5Zf&-O[&5-\k5-8d?t"`s,X2Zq!o0oh1\P1*8bgH-K?091m4GROP:I/8SHoA'73U!4ce:O]d?I709tf')*_
%^.&9<W!&%SNnbf)!h=)cQTc!fI"gG7"+a&U*jr>X)5P.*U95M3C!C6(dG@fW&[cqj(;!:iPM?-\MA?0sbmGC_?5r"f/Rg+(J5dVF
%*;-7bD,.f5`(&!kXmYB@,GpOrgeC9CAkUrDhKh-9)AhX"nhi!VE\LMt"@Z+3j`_g7X:US^!GD87@aIKIHL#Ym@`^!Uf]p9T1NVlk
%hg9'%IM+;g"S.hn""T:\Org;p2JW-6a@'GNS$ic)l7:_9_eN]:NsVIA5GjuSaU"Q6.q4G45I%2^ha6D^PkgF.<kP-h7j.FJ\89C:
%`!HOs,G15'g[=V5[`c'\k$<_W&(?>,KR0;(WfJ+(e:_e11@\n,^t"W5Ak#7Bg,0S=OX^U4drOKtY2Tkr;9al>V&N2HfrLKR6]BuN
%s6aOV>#$/;@etC07@&>*&#4G1;)uU>?=UE)Bbd9GUc'9uT\:`$-PV:8Q;AIMm)SO%\?u%s#`=GQppC/:9]&/&DVom\.W:n)B'#L]
%m!sHnQ*!h2f7FmcXTWkDSA2!MIlmg5lfB_o!bSH2Ia3^CC.jED&s6@%J+5j7b("E]W5`8;<>Pfi!\R^X$<hm/G$?_-#ht%7r&PcM
%hpN<N8[fYB8n+j*:5D,%qktphaA:_\4)3/1@+e0+s&A?Jq2/AuF.#aEG"`-6W[sAnI\$V8AjA_^LblK6AOuLfqjHGJ(J'K#Ug=Ie
%J+jG.mVgt6pRga["*u5,qGKM.YB-MjX(>>K4A?1*6@EOV3(*:-Ce*7]YBqU/\YS!^;KfYAiC02X@&q@'(MQQeI2_)Ad[7n3aI8gb
%WQ*8[(.ol1#`m#r>",HWb,cka:A%fj(2G\'E58"1#-58tUDP\9AGOe56]3cuQM.lX*hfl''a@8T0AWJ8X2;VLD+kAiiVJ?QH&TE<
%_(N#^<1'd\Q;UmGY!_G5e;iY;cHB`GZ"m;W_30msp3';%CEn,n1?M;\KCI;'EdA%q>kJJMrEf6X6qEM'mP)G/7MRB54R0m;H:lf=
%(cDH76DLbXW%+$fcVL`UV?GW4$XC/.l5-ZUZt#Z9hh]+2,IR0IH0"`e[C^f90F]=9gr5o^6;s73[<QUiL(n0!$kZ<nT-ZNH'$S#^
%T$1EJi&eM3&iEq7D'e3*psr7V1(gPc[#q8@RZu9_r&<58L3bqN@T^Wq9')%[bgen/R:!"l_fa$;[N!;];@iA'.\91AkK6%A<M<'R
%Ft0MPjc\2WG:3<f<#f#lWZk]NmSD7oj-9pNd(5P%PP1?=<C42?mI-@5hHGcfNpD_EOEF\S?GFRlVYftmPl?F'<BbN9><=6Ek4BfZ
%^1+)\_@Pb'_Z]mNnQ&G19#TFeiP\;N'X8PQa.L('E6#H^UuTUIC]qTPr&\#<4Y?Qaqn1j!XorBt3F'Xj3tr"SB,Ko]f0auCSBZ.Z
%^So8JSt];48ALYb@=X^[#].hq(YHfuF@=[D"^InBFRWY=_]`)9qOqR5`[dgS/"%f]Ae[$km&8XKOi)5,B)4)p^83GF02C0$`]>#/
%]M5%G<ao.\'C`EMnXgfZ,jFUK!*p)Y-4sJ'nZe7b6RbNAgrT$Qa%jE6^Ia@mH[-)qm#716m5W9f&VbWiet-fAkdSW78Uq;Rknq]h
%B)t\)(G@\`Asm9r$b[JncAcRiBI;OiHNrr+GI"o7cVUg88Y,TRJd^S/VZjSHEJgH0[eC9-g:dSDUI??3-\drGZBXpB>T5N=L:8CP
%//bNu5@_S!MrZL\h',uFAKr6TQN8!%qVLJ*:)Ijif@/^rR*;:-AjA(\JP6.45F/KpNlq>O2<mi<%R1C'&/f9:"=%cd;,@jL$F*VQ
%k&EfN/tb^.KMd36PIhFU&HIRCq<1;_8Lp$bL_I!B!O\>kMO!+T`@iX*[VO;,3DuW1@)3:gU@uW+U"nQU<io\][U%sl=clBJ<d3mo
%&+lfYs._uUU>U31>i_q#rlUH%5U@R07C*(QHWIcRVq3gHUCJjZm;A)srBBmKQ\a^G7ieC@dj&lCPn.7<Wk/Hn(m?^+*bP_N/9;D"
%P?'DU=Nl_HK74RNZ$`dUjjfo,a?ts89uZ-e!]6H_pjaYIF\obT%F/LI[=r<e*+N$YAB'TtVS9*i^hgQ$gaRQSTSoPO&3ne\Z'^AF
%..L7<A=h$n@*?tA3aS7dX!p$sNN3DF-&k]tFjkZ9N0KAoFaFa9geP(J8_"RB+oKW%\>HVRXn1q7-<nJheD<[CD!tJ'h!Qa:TXr1A
%Ld&"UTdMW'$Mpl9#X2VeheY;NE9^9S9!sWeEA>-]K;=mkW220s:0q1YRtS,!J5*dGV1C5p[jZIW!(nk*CU75jK/5H#=gR/Ab"M,:
%e&L4L>!>SPYR6n->8nguk-%_NQ9=[ddimtOkh>73W07L@!V(i`9m2<IJ\YRXafEKLe/@!i16`KK_0f6/UdR?K$6:oAI<-B)OmL(`
%:(`6_:EmZHVb8#$O*LQ]f9#ACOb=f*'jVn1,>S*P?,*"3--8fXZRfoC<nd.k3E>%&apb6A/E%S!cb^,e=pgP-SFPgb-q-o2n3ugI
%jd'*\'etqf_J1j2>N&8,@9'\U(a^UIVos]!O8*E$]<>)>hpo\QG7:9CG,H^)>,%]e<1I*1[YP)t%IOq1dVUq@^oUNj<m@9<5&;[T
%KhXSYR/-0VD25Nk3udl!=p'n`9KC!V:+)d0/,E/-RtL"+9pM[uh5@<a.?p#>`EA:d9n+cOS.2u+'o9;3,_\m;!cI#aa<2f;H,Rca
%;2MS/=X.X]Z`477EgK+3(TcR?AdL&N_"Ne@q6[=[[k^puK\?1L\%<cp6,GQK?e%og1B=1?Vf)[afZ[r-Pud5-ok]nW&Q4gG@PoqD
%%a)9Xalg`m&!jnPpS+@^6Ku`JFg#+kp.-m%/t_3thkrX?#9hq"[G2L+cQIaHF]?a/Vf;uO.XE6b4toUHV<59GGDbBK#+JWo9bf\6
%ADN]5r0&L[ST?eEk1+6e"\WV8Y9_G*pnI$8\R6`W;$\Oe,N`OBXiKkgYr6ZHPFdV@(/7+T/n-+8Gd_4bA$iIPS\5NtKq_k>fbo'e
%24$!MFr0V6:sCEF&ar3VG[]e`F&UBuL[7t><Rlu3^XXGrBFMY6-,D$(@7Z9iqnW^R7)?;W#C04o5ra]EcBAJ&'(c5FP:&nnlCLJ>
%oE5.^lFsk)Y5!D+O/AXaVAYVA['X5#Q<r&NbT8h:=7$Udp`sebFd*a+iMYG"$&rhK*)4irO5'I%F(`OIP-8<1Nn9)l]J7:Q-:LU5
%)T3od`AZ#-KG/3dhUtDq.RdR%PgN74!PDn%VpOVn:NZV_i%Le:mi1e?86$:@aG,Ofn=Z;n)AZfBFs!%RLG&.f#pH4Gjq6/R!?igf
%n*YOfVNY`K38_-)$k0+;c]/@f.4#N56(RDT&O)<-67pap(b9n?45)GTU.R<TQ!H!V=MJYLj'IiciRp$2W=D4BY3d.6=Rc[-N>RRA
%SW'hUY7WIGme^lZ;S06?_;K=8!fQe-C^K&`ibq;W;9#VPN>I*Z>>75D=&>lbY4Af*VnN<(5jYe\]dD*)4QnMZpd$NM/M]+?rEK]@
%F^5q0M3*j'<uiO,m9Mhen#eNVR)gsak_cVk*PFFd*T'V/d60Oh.o61>Te&1ZGc$1D&/Q45L\ZWU">0WBS*NUH6u#gUbE75_rc*43
%XQAMe'<RP"i(?pgaj?&qW;IK(@UgQfoCLI,PnXZ_6Q\k+**.4hcg0Yld$&Y9UR\-tltD,_iK-/Y;ADd8A"FC[L*b.*_1G[3`#l"B
%X2Hl##VVu'U^pt;=0%IHk:J8`G+"lt\4)9A;d2F`o,qLJ/J6LkB#K\-e)&m:S<h)"!J[Er517!:A'$LUHDb6SBSInWZjH?oiiaK(
%R*s!<%CW8J[>]Poob+-_o(VKZ@fn>l2'sMN8kAI;MFCuf8)TV5;$3<gb&;/Y[MLAFerEs!-OU2FcF0Ugos6Ba1o-OXb0kRVaB@3]
%[]V7)l?F`$MJI$eA,64tFHH4Van`_i;2X1OQJj$>6_uJl9q7ZAaJ`+c7\OX2$!Yl+=lH7B#)lff#>9KT+[\q,Z)[73d`=f-E\!jt
%RE7ZB]e1#GHLo[6#s.*q%%r/N\?GM]I.PO@Lu[>IrabNi=-$Nd5AlLcM,To$GV@+m,ppVO<pbVK9;(\`B=l319@\k6^9]!H;6e@V
%B;,0dZQdm]=bgAHo"O3e$7)EGBp4Mm\5N-t%!,GPRq/9mUeD`re\>!ADQZ$GQ:IKjSc*h$ke$<rUDGabU_AOc8=1!cgKMgsT_`5O
%XOk;f8@*n1*2S%>[<)3=I3gkEfML+?&b^Mq"I_<l,e?Rm%m\smW#-lbPWhZYN_Z#c)MkL2kfo9ji-i9O<0p+3GnN3G_;6T6a.jt_
%QE?q!I05M!;L:jC27F'fJa6&r,q3P#3FM.4P<1:)A@OK3dI4]W*/[9.UoNdWX_+@Qk1./ObqKmm(s5Vj8tR*FY%N,[bWdF;jJOrU
%W$V5pVf/8Y%k3.Fdcd*CKFui5\H[\YS\<_45risi_BOjOG.6X-3PM4(ldLbs``WM2Y-AL#._UJfINoUO(GEpmM$*l[L_^O<PRZ])
%MqYgmq@a:V*6sj(J)ae*lCT4Rmp1[U:pLs"FB`=,$OmJT*-6__$u&N9B#nCD]JIm)A!dX?*_'4t(Ubo7WH_pMn?^!#F-]<tP63"<
%)):iinMcu%bOW)K(8r4@h!SS9Z&^!;II,@YgM+(bOfRJ<iatqacUbgt.8c8=/&se\%`4ClB$im71[*XfPFjFH2EJZ6&^q.CLc">f
%&_[_CJ_<^$$UoprlsFN>]Q,7&Re=%ETcTkG6WV,mk<h)bWCM"h2De>>k!+69$)8+ZV7JZ:rQi_WZeo6`+L.+FFV..&G$(BIcf9@Z
%(A$Qp^3B2Z+tnt\F;n)-B>2EYH&G1ie1:;R7*?3_iq)5)dmYV'ad[cXM(J39p#4)M)@\2J;9*';@CSU)G;XDP[.nka(5d^QC&rR"
%1PKlaiRdQhi&3c!!kSh?gbL'!YB2+@gD*51."soqK8/0AEo,hAT#g%+LoVtdc%l3>^a=>9@:>/)mU(e[d5"\-W"tA!o`tbldY$<A
%p$HC>n^>mkVmEhYW5HZ\EliYu3)+cl\LrcsjY)JuMV,@M3^2s,&HY0ajVIKuF<Ql^ph<QLRKJ+-i$k2@Eo4:,jLr"?6A2]97\^V#
%Lko0j/3U+K\H&EOa#UqG#fU;t^+`*qK75Si"5B4Vru*"bB0=aU$&-]?H:u`)khq6Q($b[+V<Edu1pCL<Lod^!=./L+"?54eZ$tJH
%-5#jS)!Zg/F<K`3nK)l%cu'3OCZs<4-">"@9a<_r&[+m=SF3GE'!^rVLT=:Qci,7/Qd)dfXr:Fe8$`Uo,7=RpA;u253*^jifJ#Ds
%gX0kWRo&N@KESRR25[S&Al2]D;c:Sa<842Pocpl88a9_c&LpB*R'I!uZb,ne7!K>IU]5.r:-E@1ZqR1c]fmfNDu;&aH@;HP@\ifO
%7\B56=]/eZksNV&#_K&P`rrkEY7_tT:M;s1^ur\^X5#n,mcS%P\rpU8LYK`=2lm=RB=3Dqbl-1+AeDM#I&Ok?bMmr+oi`$@pN(Ws
%Z%3^#ruWu3#K6#pMN&UqG!sX<]WYKoHb,/!R[(\d1e8W3XL/\qS2qn$J3(d$"G,Ds*4BIX3Kflm@&ZHX6^5bK=\R?olS>njhqT%0
%g_2>q)H@cB:uki21.?C\/MG&\Lr5:IF=Mc!";"K0OYmhT=(Ojshpqf;`cTh:c?[QfFlg8U;B:/[:_=oQ*aZmbCH5d>/^k^KI\h^R
%O'Ys:'U?)i5rGi,e>:HB,2TD0?+nK<"L,ie<6U/!WJ3%JeEJ$:)$K%.+2BI`cCo(]=Y."F"/'mYr:XT.+OhjdMQ(]I#iXHRo"Lp*
%YT;2Eh$m/&/B]Q23V'KZ9UR.-\n.C27'!h&0K_T!M\KdOfaqaU5#QY]rBSl,5`A,=EDV&I]^X3JiH&'RVUW+JMLk%K[ks@_QVa0#
%FVKe61eC(WN$%4#NnL?3/8!S0cQPG;?<_f^>Y)Z16"!)iC@Hk[/DB#mgW^aYUb!.E>h4M"*Asa-<ei+A[fFq/&)<f>03[i<IDdN`
%1*s=d36.ZXi_Y,K#o\-r)`]&m1bsh4Q_N1*+h3?PnV?u7NDmX55QF9l,s;K-M\oj-hZH?^8eZ4JWrKP@cX<F.[[mh89fuk^)K'lc
%1FfL8g`ra-hgP@QT#-8gCPU8?\WE+jM,-/FQkdl:MsKG:F-M8%YQF^Q/f<7"YLl^2i(mVrWRgU8ThRXZ!cCAqTBL?fY0J\[.:PtB
%X,#iWeJ(1OCke(X\2PHWc>,cT;nMj#4u'WIa+^5I_nL0ejZho4A>?D*me]%TWiRBu,,NN69gV`oGs5ir-7=$)D.nd"b@!7J7h'mW
%FM?<)QrXXm"4qE8(;\F7_J>MoYX]1I2#sj#3pWHB9npeq=Z7i'jZ%XVZ^\'sFe\N?r=mT4BB!D?BjK#XG;HNV94imQlimd'6-[Ro
%L=Hj^YAGIm]t"*NO2_NiQL!rFm015e':II%Q&$tp#-4&I&CV_MLX(X49NZE"/A%eN.#YV:hh:,=V)1mQQ7:PjFY:/W3O<tHl:N$c
%2`m,YP#M\lh5Kpb="Alb26(sbX;si/Us/Aufg:.N1qK9+meohXji0<l'htV_Ng96ji;NmhbURI(X6+1Q+-oOX[C6nQ;@NJSG&8EG
%P.\2+Ytu,ZhC>KP5,'NsGV<Z/;@f-N1Y,0%;"4"`gHS`MVUM1?:.&El^a%-pl>7Y:R$<eCSsj1%S85b,D"fhY/=/?s@FNiMN2s"0
%JR`h(_?L->3\WqbA;K6$n&d[RCFYPPWfGJP-RmX^Asbi5V+o]rgT5KVPm:i>\l[@cT@;?\q5)Z9`1)@/5$<jt)TToF4o";IgCr?0
%B&N0#HN;AWa".!8M=%diSC(S2V1V/VA>OKDK5h@dUpN_;D/[R!4L?d9?qe[4bj?%i`k&MClc\XUj#/aXUpG^98D2j?lk@VP9p=5s
%F<QJ@%it7SEmQ]Fb9gXOfh1L+'P)mNSE?p/4$UZZW^Ms-?/M7A*P)la&Z!,7m<8oEAlACLgl8SE>i_ue]$__;'AbedYTM_-MeS''
%O'GFW)I#9t+Gj"6SPL3[6Nt<U4X$=7YraS`Wn3)]a,7#ejXd1`f99p&L?qfRV^C.$PZ(jZ?nmutA,$PQZfp-3I.umC>""a+AHmlW
%k8:(np,lh3D_gdon*8G.97"W[D9hT+0<%;r3"5@7*lpUkl(p9_R76aYlipgE`.Z.ph:*K`)=udXc(,:B:sq>Xc'kJg(#Y<H!8744
%*@^)]KWV%.h"bQ:DDSCc?O4]FRl+hAD2"9$(=d(9Bje$OB"$#$X.+EnM@`RHYB60ObM&R!F=e0&H)_D7],*MoegD:XR9p@.J*@t@
%1Inn('5Q_:m984*]A(sZ>N(d&m'1Tl2@,-hM05T(<'Fns]ftkm6rYX1dli4,Wl7\EM."q]fdatOF<S<-WEHnAl@Fi>Pk>jAZKA4C
%f]]_Or@Cj0\/[iS_r/M)3[UY/"(L08?XU+oN&0$_>!>#kn`5\Tj$'&jTpnnCG"o<ib4)*&h4Sn#O(Fc-Q"@0;3X$!F;+gI2UXFAV
%Tu%#lNZ,ASN1H3%gL*oEKXO/6#ZY6E]10uYGT<^!B/cJ=UTU[^k+_!V,26mK[G5b'X6R=Sf,Xn=9<=*gDQ=ZV^UB#4a)D%<`BSE!
%S\hP'qGM"B3Z8d/]"T)2EI+J(g`,B]JdC0tI)Lhm<_T!%`2Yq1&5192qMEg40i&?B.u2Q0K4"!qOf,k*IlnYr+\EH[VZqe-pE*'c
%?04QHQkQkG]Xq1'P\8*Ec.!cbJjeeTghk#KXKHYtRb'Jf8Q\E_hNf"b8&e_]?`j9JHM,TMQ;8b8E()jqb];6BJn-&7<>[7PSc2L8
%<jJgZ>)CLJqTe?'J&#"[kU/76@Yfk;6]#KVPTpt54EelNHW`d!@sAS&Cs,0Z75st*PPh0Bcs6Z3ik:":X0*VWo#am&H5M7d'QZje
%;S=M81R/jH"!XTP]o85md9."]0LWEXNjnNT!)a[.4]"IR!H2:EcHfLu/YT[IXE!,MKmn'ZrM[\k)[-s`3`MG@GXJ_thjSM%!9j=E
%A+!u,2]k\847AQ<*dnI.!d^?\4(?&8#VqmFi-Jt#g-+B[_FeK)1C9I]DH+&oC5<#\f0Bl!5PYXhp70=d#RYq*?7O9RlqS/rXA'?N
%4*Un_iYfgnINfaOhiNeM^gYmUM*fRVXokaar?-]#K%Q&K.9P+kF[2SZH@:t%eF,(;Ib=.dI/R#H]YN:`%$5]'T6F/<UOK:OkkG35
%dNLdj?2/$H*=f<"Op_YjpR#N]k,*g4gcmb'5>i3BJ-Z"#L:l+pWK8s:XL%-Zh</?9K]#D)^P`7<8W0:g\m!`m"P[hPA^`7R8CSYn
%$@nV,C>&j,JS0[++m=ic\4p_bXlRJ\T*mnjQA<?01OOAHqKOt,N=*"W-:sms[Ko-1@Ya5+JF@=5S!b<&dN_3!hjf_1+RZl<7VH=E
%,L'pCRpY'@?N'p!h_"CB0BB=;!tL"X"Q"Hs?S;l65E0lI^]L-4CrNTEV"%9RTaLii-'Bo8>r@-H,[-W6/I>IYEhe\B/>nkOKC523
%Bts)a<?6[rjf6H\oGTc!rV=u]f4j`6N@Ol`%#O]&VMr_MR;rl/[c1!;l;<#6&M`:f=N=VnDRr$6\mMCj*1LLg;1)03:)[3\Q;[[K
%<$q&%)u(RZFTkf]YiVnJe'^GN<eM=hn8_n2rA5i'4o(tF>\a:h7o5X.M$Bhc@f#e9GI9ni0DTaoe:+(a^Lm\?DDq(qZiqM]j*ZHH
%9=6Y,d`%+bY`6p,YD;YfYfsgYqiO>fJ-]sEFm=8Lll1mAMF[D[pBWWre]<XX2t/@Dc@Ib'k0RgU@].\[M?P]<_&?d<U'$@eTlMmG
%abMQ$4<?&t8[3g0U1-Fkf8b"=?(Oc.V0;_67`Q:2qO1OQ3#d<"L6Q)JfWruA6b@6K1pqJ0M(bt-&-BbANBBe?MA9>e`4B&LLp>r1
%189^`8CG`MO8\6N%Z>^lC$)[#9`h5MC&2,P2[P2BB?X)9D.lq,jk.?m/QaoGkY-(V't.3u/&J4TVq5Ut6&&/S5j49`hIq"HZp@r$
%I5`hb7Z#M&FS]HjFenC3q1,j1Pja+hs'sD@F\3Hj2\^+`i4pos4VKqM'i,sk7fcf_j>&qa(W&=1p/.brOO16;g#Q=CL-,qMi!:g1
%>ZlT)kHuJ\n4<8CfD"^a$DZIY>iSY?^[c'5Y*4R==nJ%n*Y=!(b@bg80F!Or`G4Xo9G)ThJoIW"2t;-`RniCHLf:)&Coa^"i9T?R
%`3Z'CA;+6BYC/s0?aMqXBKRc-eKFIiV,u!r.G<ZR$=9Y";bW>ATaDcmP5.T3&Bg?"^4)3VLG>gYg#-"'?jXME3CP/>lZ2cphT\3[
%A9FEl6e0mo.iUWibi)ZQ7Q-Mu*)777N8C\mMBT<88X`sfV9"U_9s2(hfR@I!qsfmJ%K'jQF!\E"r>up5;RjWc,#5lReKQB*XB,\p
%mSGL/"c[B^#Wr2@'Ze1g7`$"W/ZO"l[fYE:V.S;EM#CBL7Yap+?YA%k,i%P,CSr'$Nl1uSO63oicO86d]-GfC`K20pg%+4pq%1Kf
%72]1a5Iu>7K5#R`CcOO``@18tJIE8.^JB[-dWB-'i"o1R<?U#.Vc%="@,b<D:teMn7(,sS86ug9XXTXCe>i2Wc.Q:RI>:N^jt@?4
%RQbEA<8+F8.=#B\>/l%SS.(L\Cfb(<=Y75'1="gB@YB4E:/7]_m5b<.)ZGlChC3+qA>+S=LD+2c;AWh%eZ,U3g0(#E.EH$%!(2Te
%[crBJc(ccYk(`9S;V_a7:ND!@)1?H;r8f=HMPNT#P5DKrCZO)MVdjMM>EZB!UQX\2/1al^(X-M:hMd6G,8)A#101i[<!LQD5mjFL
%l/k@(jhnE+2QoRTq^EoLTVSOu(W;]KLQQLd[0&5PCaY_'WSqB+,[>8hm@<?.&%]Rc9G8_/H-F^2g%3hUBMiH_b?-MX"5]55<-RW#
%-O6glmdXZc-.O]l.IhE-Wr<0C'FQ"H5Q>ErW5.u$8hpE<q+O-/gXdO6'GHpodYqq@j/2e,e`m+F3p=Kb_\.R:/Ne/YWV8BP--D?2
%NulhRJ81Jq9hI5T[W29=JkbH[KZ%*0;1`l'G<CZZ4>=lL,JHOB5Y*=L6U]*7oacQ?9#/D5i%37+a`.BlUoPmD[rr+\,A(a7qkB38
%leNUqaC$l&i^RM@M=b[!Oi9A]oP[R]42H3jm>$)rHt>qk1NWYBUTMZ+;'MX]WUkE>p-R=Tm_-sAirYIU\//QXF:<s=[L.&r/V"<t
%_n$p\(GHJU^<HctV%$me;8th8J0P4Y4oN91&?;+b7X8<W&:j/Hf;Lq"9Hs20)n*f24T*LX5rbHs`0hmT:rFHo<a+>CD@mOQSBlUX
%$&N'l]d%f58GJfbK\2=:*blR%YLC7XrZAJS17eg*(-`sMWr6!r*h3FfQ5e`0T:i+W*'("jB#H;^T3[r",rkr;SEN"a[nA#4Q+"J?
%k%%63DUQ\;VX!iQG`*26&Msa'HTDWB\!&@D?Pm7ta[&q!11Y=S3C&Pej:o$ZAROYhT@5+;J<[dhi4I]=8FZDZhlTQ6'N;*4'B;GE
%!8`?^!fBf-US!r_WA$71@&:rcW(b9S"T2N`AAF;NG&WQWjXLt9QK6,D(+)<bSor8-`VX:FmORPc;NDq&/HW"=MXF%(8u<M`+?sck
%I0.LgR[:S)nXog3^uCFTiU?g7+9)6=4TCKBps9!'+92!5rqWbtplAd5J,!CNoM9u9hu<JMs70Osr7A^`]79\/5Q0Jhrq<7>ro\e,
%[m0iGTE!Zt5CNF,^]+%9s6X1mqWDesqLAIes+:SPH7/X.5Q&S%ja[.(^\e$2@]YTc~>
%AI9_PrivateDataEnd
