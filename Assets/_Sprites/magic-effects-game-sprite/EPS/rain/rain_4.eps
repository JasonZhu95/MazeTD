%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: rain_4.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 300 85
%%HiResBoundingBox: 0 0 299.4076 84.7004
%%CropBox: 0 0 299.4076 84.7004
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">rain</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:11:34+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:11:34+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:11:34+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>72</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgASAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FUBqvmDQtIj9TVNQt7FaVBuJUjr8gxBP0ZGUwOZQSwbWf+cgPy80+q288+pyDbjaxELX/XlMS/dX&#xA;MeWrgPNiZhilz/zkTr96SNB8rtItdpZWkmqPdYkSn/BZi5O04x7h7y1yzgc0IPzq/N4EM3ly0KV3&#xA;UW9yGp/yOP6so/lePfFr/Nx7wjrT/nJC7tWWPX/Lctu37UkLlT9EUqL/AMTzJx9oxl5+4tscwLI7&#xA;T/nIf8upwDK95ak9RNBUjbv6TSZkDWQZ+IFl3/zkX+XsKkxC9ujvQRQAf8nHjwHWQ818QMevP+ck&#xA;by6ZovL/AJbknetFkmdnPtWKJT/xPKMnaIj5e8sJZgEluvPf55a0f3Rj0mBuqxRxxU+mUyzD781+&#xA;Xtgfzvk48tZEdUsl8q+f9S31bzNO/IUKmeeYAHtRig75gz7Xv+cWiWuHQFSH5Twuxe41SWVyN29M&#xA;Ak/Ms2Y57UP837Wo649zn/KSxI+DUJQfExqf4jAO1JfzV/OnuVI/IXmSyPPTPMc8LA1XiZYaeG6S&#xA;H9WXQ7XI6H5sxrvJHW+q/nfo29rrB1CNeqSuk5IHvcqG+45mY+2R3ke9ujro96b2f/OQXm7SmEfm&#xA;by8rr09aHnbk+/x+qjfQRmxxdpiXcfc5MM4ly3Zrof59/l3qfFZrqXTJm/YvIyBX/jJH6ifeRmbH&#xA;VwPk2iYZxpuuaLqic9Nv7e9T+a3lSUf8ITl8Zg8iytG5JLsVdirsVdirsVdirsVdirsVdiqye4gt&#xA;4mmuJFhhQVeSRgqge5O2AmlYRr352fl1o5ZDqQv51/3VYr69flIKRf8AD5RPVQj1tiZhgeof85Fa&#xA;5qDtB5X8vF26Ca4LzH5mOLiF/wCDOYeXtER7h72qecDmkV5qH50eYq/X9WbTbdv90wuIPhPaluOT&#xA;f7Ns1ebtgd5PucWetiPNC2n5W2Bk9bU76a8mY1fjRAT7k82P3jNbk7TkeQpxZa2R5Bkdh5W8vWFP&#xA;q1hErDpIy+o//BPyOYc9TklzJceWacuZTXKGp2KrXjSRSkih0PVWFQfoOEGlBS6Tyx5dlfk+mWxY&#xA;9SIkFfuGWjUZB/Efm2DNPvKJtPJ2lqQ1vpEAPUP6KfgxGRlq5dZH5tg8WXenEWg3oUKqJGo6LUAD&#xA;/ga5jnPFkNJMqh0C9ArzjPtVv6ZHxwn8nPycug3hr8cYp13P8Bh8YKNHPyXHy/dU2kSv0/0weOE/&#xA;kpd4UJtHv4hXhzH+Qa/h1yQyxLXLSzHS1D6neVp6ElfDif6ZLjHe1+FLuKkyOho6lT4EUyQLAgjm&#xA;tZVZSrAMp2IO4OFCSX/kryxfVMtjHG5/bhrEa+PwUB+kZkQ1eWPIt0dRMdUhufyo04tzs7+aBgaq&#xA;XVZKH24+mcy49pyHMBvjrZdQuTyX5xt1Edr5nuEj/lEk8Y8OiucvHa/kfm2DXeS5fLv5lQ7W/my6&#xA;VTu1Lu6Tf6GOTHbH9b5shrx5u/Rv5vQsWi81XEldqNe3RP3OCMmO2R3y/HxSNdHzRUHm789tJPL6&#xA;19fhHVJFgmr38Fl+45k4+2B/O+YbY6yJ6sk0H/nIuSCdbTzfo72Uh63NsrADelWglPID3DH5ZssP&#xA;aEZc/scmOYF7Bo+t6TrVil/pV3HeWkn2ZYjUVHUEdVI7g75nxkJCw2g2jckl2KuxVC6hqul6dF62&#xA;oXkFnF/vy4kSJdvdyBgMgOa2xDV/zr/LfTVaurLeSitIrRHmJp4OB6f3tlEtVAdWJmHj/wCYnny+&#xA;/MuS003RNJmhsbOVpPrEr7sWUCsgX92lP9Zj4eGazW66Fb7Bx82aIG6M0H8v9D0+2jN5Al7ejeWW&#xA;QFkqeyo3w0HuM5rPrpzOxoOqyamUjtsGTQwoiiKGMKo+yiCgHyAzDJvcuPuUSljeOaLC9fcEficg&#xA;ZgdWYxTPQouLQb1t3Kx+xNT+GVnOG+Ojmeeyuvl3pyn+YC/25Hx/JsGh80QuhWajcNIf8pqfqGR8&#xA;Yto0kB5q6aFZOPhtyT/klz/HJQ8WX0gn4M/ysO771VNBt46VtgD1/eH/AJqOWSwZuo4ffQ++mQ00&#xA;B0VfqaQ7hI1p/KVr+GU5MU48yP8ATA/pbBADkFwRj0p94H8chHGT3fMMl3oS0rTbxqP65P8ALzq6&#xA;+0LS3gd+m3uMr4D5fMK0B7gYAFVY7WaSvBeVBXocyMejyT+kWtONrMv2lZfmrf0xlpMg5gj4S/Ut&#xA;KbLQ0rX7/wCOY8o0qk8XKvJiVP7JCkfiMbpgY2ovpdo+7wrQ91Ur+o5PikBe7WdPE8wovodg3QMn&#xA;yb+tcIzSYHSQKyPQbNd2Z39iQB+AwnOWI0cBztzaBZn7LOv0g/wxGcqdHDzUH8un9if6GX+hyQz+&#xA;TWdF3FDyaDer9ko/yND+NMmM8WuWjmEPJpt9H9qFvo+L9VckMkT1aTgmOiX32n2d5Ebe9gSaM9Y5&#xA;FBofp6HLYTMTcTTASMTtsxL6n5g8hX7a/wCVZ2ayXe+06Ql0aMbnkP2lHj9pfHrm90HaZ4qPP73Y&#xA;6fV2aPN715I856X5u0GLVbA8WPwXVsTVoZgAWRuletQe4zqsWUTFh2gNp7LLFFE8srrHFGpaSRiF&#xA;VVUVJJOwAGWJeHedfzw1XU759D8gxlzusmqlQSfExK/wov8Alv8ARTY5q9V2gIDY0O9oyZhEMTtv&#xA;y5ur+c33mXUpry8k3kAcu3yaWTkx+gZzubtQk+kfEutya0/whP7LyV5XtCDFp8bsP2paymv+zLDM&#xA;Geryy5ycaWomerI7HSZ5VCQxiKFdgacVA9gP4ZiTygc1x4JTTi30K1QAykyt4fZH3DMeWYnk5sNH&#xA;Ec90wigjjASKMLXso/plW8j3uVGAHII86XKihpZI4wf5ia/qzansicRc5QiPM/sbOFYIbJT8U7PT&#xA;qEX+JykYNPE75DL+rH9JRQRyaXEPtcK+5Zv1FM3OPsiA+rh+ZP6Ys+FEJYov2SF91Ra/eQ2Z2Ps6&#xA;MeRA90Y/pEk8K42vjLIfblx/4iBlp0f9OZ/zq+4BNNfVhT+7Vq9ecjH9YOQ/Kf0QffOR+8FFLTaE&#xA;9IoB7leX9MrOhJ5RxD/Nv9S0uis0UHmEevSiBafry3DoYxviEZe6ACgKoghHRF+7MkafGP4R8k0u&#xA;CIOigfRkxjiOQCXemv8Anv8Arx8MK16Y7/qH9MHhD8V+pC4AAUGwyYAAoJWqlOrFh4Gn9MhHHXMk&#xA;++v1IcYoj1RT8wMZYYHmB8lpTaytCamJa+wp+rKJaDAf4I/JaCFudJV6GEhT3B6fgK5rNX2IJb49&#xA;vfy+wMTBROkTkdIgfYvv9+Yh7EykfwfOSOBSOkXY7Kfk39RmOexM47vmjgLhpNzUV4qO5qDgHYua&#xA;96A968BXto0tKo6t7dP65dPsHJVxkD+PivAoLYlpjAHAmH7LfKvUVzCh2eZZDjB9Y6H9YtHCgbyy&#xA;ik5R3EQZkqPeo8DmJKMscjE7ENWTHGXMMe1LTPq4DrV4H2+Ibg+BGX48l+91mbBwbjkwXyVqb+Rf&#xA;zSitFbhomuFYXj34r6rUjPgDHLtX+UnOv7K1fEBfuLstJm4op9+dfnPUNa1yPyFochWMFTq0ynZm&#xA;py9MkfsRr8TeJ27b5vaGrEAR0H4puz5REKegaBYaJYra2q1Y7zTEfHI3if4DtnG588skrLo8uUzN&#xA;lNY1RnAduCnq1K0+gZSWEQCd2R6bZW8USuiVZhUSNTkQfbemYeSZJdrgxRiLATGGF5pVjSnJulen&#xA;jh0+CWWYhHmXJAtGtpawxmWeSqr1VBue3U5uJ9jjDAzyy2HSP4/Qy4aVYln9MfU4o0LGjOG5FR7k&#xA;5k4o5OD/AAeEI3zN8RHx/VaR5L49JDNzuZDI3cDp953y3F2ICeLNIyP468/uTwd6OSGKNOCKAn8u&#xA;bnHghCPDEARZUuAAFAKDLAAOSW8KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrXdEUs7B&#xA;VHUnIZMkYC5GgqBuZIGeK4cmNY6laijvQ7U70zS6vLjlKGWXpEdxt6pe7rX62B70pnlMszyEU5Em&#xA;mcxqM3iZDPvLWSkutXsJie2BrJVenQd+uSwwN24OqyijHq8j/NgemNKuYzxnjeTgw67cGB+gjN/2&#xA;WTcvgx0J5rvy0J1C/wBY1q6b1L+4lrI3ceqxkc/7Jv1ZLtXISQPinXSOwZ9mnde4dcVZBaa3auFj&#xA;cGFtgCd1+/MWWEh2ePVxOx2TNWIoyn3BGVAkGxzctENeCS2WKRC7KaiUtv8AiDmfPXCeEY5x4pD+&#xA;K92V7OjupYwBFM6/5Lbgfr/VkcesnAeich5Hl+PgtpjFq0JWslV7cvtD8KHN/h7axkeux58x+g/Y&#xA;zE1YXhb+64Sj2fi33EZljXcX0cM/86j8iP0ptVjllZqPEybdSVI/A5k4s05GpQMfiD9xSCq5kJdi&#xA;rRIHXbEmlcCD0NcAIPJWi4HY/QCcjKYHf8iq0TGpqjAD9ogUP45WM+5uMh+Pei2jcKDuPxX+uROp&#xA;A6fbH/ilteGr06eO2XxlaV2SVaXUdSB8zkTOI5lVKW9tYiA8gBPSlT+quYubtDBj2lL9P3IMgpfp&#xA;Wy/nP3HMf+WdP3/YUcYcdWs+zE+wBwHtrT95PwXjCoL+0PWQKfBgV/Xl47SwH+KvfY+9PEG/rtp/&#xA;v1T8jX9WSPaGD+eF4gpNqtkvRyx8AD/GmY8+2dOORv3A/pRxhRl1OYisUJVezvt/ZmHm7XyEeiFD&#xA;vl+K+9BkhY78rKXmUSsB8FTWh/V92a3F2kYzMsg4z08j93yDHiULq7muWBkIoPsqOgrmHq9dkzm5&#xA;dOQQTaV32qQWoKj95N2QdvmcohiMnFzaiMPMsdmleaVpXpyc1NNhmWBQp1cpGRssDltz5z/MrSdD&#xA;tP3tlZSBrtx9kIjB7g1/1VCD/KzpOydMaF/xfc7TR4qG/VkXnD8n/Oeia/daz5JIuLK7cyPYqyK8&#xA;fI8inCSiugJ+Gh5D8Ts9X2cJ9LDk5cAlzSUXH5yRng/leRypozfVpt6e6vx+7NWexh3S/HwcU6CP&#xA;mtl1/wDMq15NeeUrpY16sLa5VfH7fFlyuXY39b5MToB3lDp+acUMvpajpU9tIPtKrAt/wLiPMafZ&#xA;chyLVLQnoU/0n8z9AchY782xP+67hSq/fun45h5ezsnUX7mIx5YcmYWXmmG4jEi8J4z/ALthcMP4&#xA;j8cwJ6YjyZjWEfUEfDrVlI3Ekx+BcUH4Vyo4ZBujq4HyR8cgI5RtUHupqDkBIxO2zkg3yVBLvuit&#xA;8xT9VMmM3eIn4fqpNouG4080EluVc7clJ6/SRTNpg1WlNCWOpeR/aKZAhMfqjcaxTyL4AsGH4g5v&#xA;/wAkauGSY+Nj9LOlnp6kDvKAB3qv/NGU+FrOsxXvH/VNaLTGFB+9vGPsGAP/AAorgmccfrzH4ED7&#xA;t1+KGnubDgRHJLzO/MFif+GIzXajVaXhqMsnF3gn9JYkhBG4kH2ZpPpJH8c1J1MxynP5/tYWplge&#xA;tSfc/wBmUGQPO/mrauqmvBT86/1wwyAfwg/P9aqjXQbiGhj4r+yoK1PuQa5kS1glQMIUOgsX76Np&#xA;tozx0oIEHv8AET+JyJ1EekIj/Tf8Ui1Kte2YqGiyqKkgDxOIUmlNby2LUWZOQ7BhkqlzYDJHvCr6&#xA;+395t/rYfEn3lnxKiXNwo+GVgPAE0yyGryx5SkPiU2V8mpXBSkrgqP5gKZkT7SzzHDI8Q9wUz71N&#xA;L53FYnUAbVjCj8Vyo6vIOXp9wEfuCBO+SxmZjViSfE5jSkSbO6UJc6naW9Qz8n/kXc/2ZKOMloya&#xA;iMeqT3etXM1Vj/dRnw+0fpzIjhAcHJqpS5bBLJpooY2lmdY40FXkcgKB4knLgCTQcYC2C655yv8A&#xA;WLtdB8qQyXV1cH0/XiB5N4iLwHi56fjm40fZxJBkN+79bn4NJ1l8nsv5TfljD5M0t5borNrt6B9c&#xA;nU1VEBqsUZIG3dj3PyGdZp8HAPN20Y0z3Mhk7FXYqoXlhY3sXpXlvFcxf77mRZF+5gRgIB5qxDWf&#xA;yZ/LjVQxfSI7SU9JbMtb0+SIRH965TLTQPRiYBg2p/8AON8ttIbjyvr8ttKPsx3QIP8AyOh4n/kn&#xA;mLl7PjIfra5YQWP3mi/nP5aqbzTf0xZp/u6ACf4RuT+64yj5umanP2MOgr3OJk0UT5KWmfmvYRym&#xA;K9iuNNnU0kG7qCP5qAN/wuarL2XLpRcY6acfpLNNF886besPTvYrpSNkRlEg/wBgaNmtzaOUelJj&#xA;nyQPrGzIY9Y09x/ecT4MCMxDik5A1MD1XR6jByYtcx8CfgANDT3qceGQ5WkZ494X/pCzY73CH5sM&#xA;BjI87ZeNDvDf12z/AN/x/wDBr/XBwHuT4sO8fNTk1SwjFTMp3p8PxfqwjHI9GEtRAdVJ9b09ejM/&#xA;yU/xpkhhkwOrgER9fsqV9eP/AIIZDgl3NvjQ7wpSavp6f7t5HwUE5IYpMJamA6oWXX4AaxxMx/yj&#xA;xH3CuTGA9WmWsHQIWTX7xvsqiDtsSfxOTGANJ1k+lIaTUr+T7UzD/V+H9VMmMcR0apZ5nqh2d2NW&#xA;YsfEmuTpqJJaxQ7FVWO5uIto5WUeAJAwGILOOSQ5FXTV9QX/AHbX5gH+GQOKPc2DUzHVedb1Aj7S&#xA;j3CjB4MWX5uaHmvryYUklYg9RWg+4ZMQA6NUs0pcyl1/qum6fH6l7cx269ubAE/6o6n6MuhjlM1E&#xA;WxjAy5BiGo/mdbtKLXRLOS+uXPGNmVgpP+Sg+Nvltmww9mSP1Gvc5ePRE/UmujflF+YfnCRLrzRc&#xA;tpGm15LbuP3pH+TAKBfCsh5exzfaXswR6cP3uxxaYR5B7P5O8geWPKNqYdItuMzik95LR55P9Z6C&#xA;g/yVAHtm2x4YwGzkiIDIstS7FXYq7FXYq7FXYq7FUr1ryr5b1xOGr6bb3u1A8sas6/6r05L9ByEs&#xA;cZcwggF55rn/ADjj5LvS0mlz3OlSn7KK3rwj/YyfvP8AkpmNPRQPLZicYYrdfkp+aOkVOia3HfQr&#xA;9iJpHjb/AJFyh4h/weYOXsoHoD9jRPSxPQJTcL+dGkAi+0CS6C15OkHrbDqeVqxXNfk7GHdIOPLQ&#xA;x80FJ+Zmp2Z46lockDVoeTPEa7/sunt45iS7Krr9jSdD5qqfmzpRH7yxnU/5JRv1lcqPZku8MPyU&#xA;u9d/ytjRv+WO5/5J/wDNWD+TJ94X8lLvCyT82tMH91YzN/rMi7/RyyQ7Ml1IUaI97cXn7zHfGml+&#xA;XJ56/ZKCWatemyRjxy6HZN9Sfg2DQ+aNgtvzs1La08vNag9DLGID0rv9ZdfHMqHYo7pNsdDHzTCH&#xA;8rPztv8Ae51K2sQeoaYKR/0jxv8ArzKh2PEfwhtGjiOiNi/5x8833FP0h5tKnavATTU+XOSPMmPZ&#xA;cR/NHwbRp4joEQn/ADjQOP73zPO7nqy2/EH6DM368tHZ8e/7GXghQl/5xq1COrWnmpuVTQPbMm3u&#xA;yzt+rAezh3/YpwhCS/kj+atl8Vh5hhuFXojzzqT8ldHT8cx59kxPSLWdLE9AgpvK/wCe+nV52CX8&#xA;Y6MjWz/gjJJ+GYk+xh/N+RaZaKPcgpPMH5k2RpqHlS5AFastvcIuw7MRIMxZdj/1vk1HQDvKweft&#xA;eoK+WLonuQZB/wAycq/kg9/2ftYfkPP7G081+fL3bTfKty7HYH0biYD58UTJw7H95+DIaAd5Rtt5&#xA;M/PDXqBoV0i3f9uV0gp9C+pOPuzOxdjgfw/Nvho4joyXQ/8AnG2x9UXPmXV5r+YmrQ249NSfBpZO&#xA;bsPkFzaY9BEc/scqOIB6h5e8m+V/LsXp6LpsNmSKNKq8pWHg0rcpG+k5mQxxjyDYAAnOTS7FXYq/&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:72c5be36-1c05-d349-9e27-01cace0977b5</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:72c5be36-1c05-d349-9e27-01cace0977b5</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3cd3fabc-b411-4b21-b4e2-1370cc2864f7</stRef:instanceID>
            <stRef:documentID>xmp.did:527b2985-9dc4-d547-9a43-0661f0db6a46</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:527b2985-9dc4-d547-9a43-0661f0db6a46</stEvt:instanceID>
                  <stEvt:when>2018-03-08T17:52:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:72c5be36-1c05-d349-9e27-01cace0977b5</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:11:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>299.407519</stDim:w>
            <stDim:h>84.700324</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -84.7003 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 84.7003 li
299.408 84.7003 li
299.408 0 li
cp
clp
296.094 37.0752 mo
290.594 22.335 275.118 13.7861 260.144 12.27 cv
251.607 11.4058 243.052 12.9448 234.495 12.251 cv
226.228 11.5811 218.307 8.98243 210.47 6.41358 cv
209.187 5.99317 208.029 6.04053 207.036 6.40137 cv
196.584 2.10743 184.375 .862308 174.103 1.875 cv
164.59 2.81348 155.514 5.74121 146.115 7.27344 cv
136.538 8.83496 126.946 7.51807 117.364 6.76661 cv
105.957 5.87256 95.1762 7.77784 84.017 9.91895 cv
79.3593 10.8125 69.8251 11.8159 65.1635 15.7837 cv
61.2963 16.272 57.4701 17.023 53.7358 18.3315 cv
50.8295 19.3501 49.0551 21.7534 46.2485 22.6113 cv
42.1176 23.875 38.0707 25.2256 34.0073 26.7188 cv
26.144 29.6084 18.1274 32.3818 11.5063 37.6719 cv
6.77776 41.4492 -1.49324 49.0249 2.45257 55.7803 cv
4.38176 59.0835 9.00677 59.8413 12.3744 60.7022 cv
16.6259 61.7891 20.933 62.6211 25.2602 63.3394 cv
33.6352 64.7295 42.0893 65.6987 50.4213 67.3369 cv
58.7289 68.9707 66.2543 71.7612 74.016 75.0615 cv
81.0517 78.0527 88.101 78.959 95.5043 78.5205 cv
101.31 81.6841 109.354 81.0239 115.56 81.0127 cv
123.952 80.9976 132.531 81.3564 140.87 80.2842 cv
143.439 79.9536 145.973 79.4639 148.497 78.9307 cv
152.862 80.4512 156.884 79.9766 161.806 78.7725 cv
168.097 77.2334 174.82 77.1289 181.28 76.8955 cv
187.535 76.6699 193.686 77.4355 199.836 78.5239 cv
206.251 79.6592 212.801 81.5674 219.359 81.3765 cv
220.037 81.3564 220.718 81.2383 221.377 81.0425 cv
222.081 81.2861 222.873 81.4224 223.766 81.4082 cv
236.96 81.2012 249.389 79.8027 261.768 75.0786 cv
267.054 73.0615 272.612 72.084 277.255 68.6533 cv
278.026 68.0835 278.793 67.4517 279.539 66.7725 cv
283.357 64.3511 286.659 61.0811 289.643 57.5811 cv
294.867 51.4556 299.166 45.3096 296.094 37.0752 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.505882 .890196 .168627 rgb
f
255.166 28.3677 mo
255.072 28.1445 254.904 27.9502 254.666 27.8731 cv
254.209 27.7246 253.74 27.6104 253.275 27.4854 cv
255.543 27.9102 257.823 28.3408 260.105 28.6367 cv
260.226 28.6758 260.342 28.7129 260.463 28.7524 cv
258.702 28.5664 256.936 28.4443 255.166 28.3677 cv
cp
235.498 25.3057 mo
235.053 25.2481 234.611 25.1699 234.166 25.1074 cv
237.273 25.356 240.375 25.6514 243.47 26.0176 cv
240.784 25.8062 238.096 25.6421 235.498 25.3057 cv
cp
227.151 64.4658 mo
227.572 64.4229 227.994 64.3804 228.415 64.3379 cv
231.494 64.5049 234.578 64.5684 237.66 64.5176 cv
237.142 64.8364 237.205 65.7041 237.906 65.7349 cv
234.33 65.6479 230.767 65.0889 227.151 64.4658 cv
cp
223.443 25.7617 mo
215.254 24.1812 206.875 22.2676 198.64 21.7163 cv
198.217 21.3828 197.718 21.124 197.152 20.9482 cv
197.808 20.9019 198.462 20.8379 199.114 20.7461 cv
199.178 20.7373 199.229 20.7139 199.279 20.6904 cv
203.534 21.4131 207.789 22.1294 212.035 22.9141 cv
212.177 23.1231 212.398 23.29 212.721 23.3672 cv
216.475 24.2578 220.245 25.0532 224.027 25.7871 cv
223.831 25.7798 223.64 25.7666 223.443 25.7617 cv
cp
174.899 19.8906 mo
173.598 19.7676 172.301 19.5977 171.005 19.4121 cv
174.834 19.542 178.654 19.7754 182.489 20.0855 cv
184.225 20.2261 185.979 20.4189 187.737 20.5957 cv
183.454 20.4902 179.175 20.2949 174.899 19.8906 cv
cp
180.277 63.7813 mo
180.06 63.8789 179.996 64.1357 180.05 64.3579 cv
177.697 64.6387 175.222 64.8369 172.797 65.1934 cv
173.063 65.1401 173.33 65.0898 173.595 65.0361 cv
175.924 64.5605 178.256 64.0903 180.593 63.6587 cv
180.49 63.7026 180.38 63.7344 180.277 63.7813 cv
cp
165.1 67.3472 mo
164.704 67.4126 164.307 67.4736 163.912 67.54 cv
163.142 67.6699 162.347 67.7822 161.554 67.895 cv
162.048 67.8125 162.329 67.4526 162.424 67.0249 cv
164.694 66.6753 166.955 66.3027 169.194 65.8877 cv
167.761 66.2461 166.383 66.7148 165.1 67.3472 cv
cp
158.267 16.9697 mo
158.36 17.2227 158.584 17.417 158.948 17.4014 cv
160.642 17.332 162.334 17.3022 164.026 17.2964 cv
163.455 17.3306 163.154 17.7461 163.103 18.1929 cv
160.654 17.835 158.199 17.5454 155.727 17.4605 cv
156.577 17.3125 157.421 17.1392 158.267 16.9697 cv
cp
104.33 23.916 mo
102.626 24.0332 100.922 24.1436 99.2226 24.2549 cv
99.1591 24.207 99.0859 24.1685 98.9975 24.1484 cv
98.2953 23.9863 97.5795 23.8628 96.8578 23.7568 cv
99.5239 23.4966 102.181 23.3721 104.844 23.2544 cv
104.476 23.3433 104.324 23.6216 104.33 23.916 cv
cp
42.87 38.1519 mo
42.6332 38.251 42.4008 38.3569 42.1645 38.457 cv
43.5532 37.6699 44.8588 36.7944 46.0258 35.7969 cv
46.1791 35.666 46.1957 35.4907 46.1381 35.3369 cv
48.6098 34.2407 51.1376 33.2983 53.7109 32.4624 cv
53.724 32.5112 53.7504 32.5557 53.7719 32.6021 cv
49.9745 33.8525 46.332 35.9912 42.87 38.1519 cv
cp
37.0356 50.6436 mo
37.059 50.6465 37.0824 50.6484 37.1054 50.6504 cv
37.186 50.6953 37.267 50.7393 37.3481 50.7827 cv
37.6205 51.2007 37.9506 51.5776 38.3217 51.8955 cv
37.2817 51.4482 36.2402 51.0064 35.1899 50.5815 cv
35.0741 50.5347 34.9531 50.4795 34.8354 50.4287 cv
35.5937 50.5078 36.3412 50.5654 37.0356 50.6436 cv
cp
286.351 36.2373 mo
285.179 34.1406 283.216 32.7798 281.099 31.7495 cv
281.075 31.478 280.934 31.2256 280.602 31.0815 cv
279.985 30.8135 279.349 30.5918 278.706 30.3906 cv
274.097 27.5537 268.046 26.7847 262.786 25.9287 cv
261.781 25.7656 260.771 25.624 259.762 25.4814 cv
255.982 24.5879 252.01 24.189 248.258 23.707 cv
247.882 23.6587 247.505 23.6226 247.129 23.5772 cv
242.104 22.4121 236.515 22.375 231.575 21.415 cv
230.885 21.2813 230.433 21.8193 230.391 22.355 cv
230.362 22.3731 230.343 22.4004 230.318 22.4219 cv
229.568 22.3784 228.819 22.3262 228.069 22.2881 cv
227.442 22.2568 227.077 22.6338 226.961 23.0967 cv
222.181 21.8047 216.99 21.5171 212.166 20.8164 cv
206.147 19.9419 200.217 18.6748 194.278 17.3687 cv
193.578 17.2148 193.069 17.6299 192.86 18.1538 cv
190.556 17.8477 188.213 17.7061 185.895 17.5957 cv
185.855 17.5606 185.813 17.5264 185.755 17.5 cv
178.255 14.0825 167.707 15.2134 159.576 15.8306 cv
159.503 15.7788 159.422 15.7373 159.326 15.7261 cv
148.832 14.4814 137.912 16.9565 127.573 19.4287 cv
122.66 19.6958 117.635 20.5864 112.783 21.5796 cv
105.886 20.375 98.1694 21.7524 91.3959 23.4194 cv
84.0463 23.5225 76.1987 25.5889 69.3393 27.54 cv
69.2953 27.3633 69.1518 27.2061 68.9492 27.2065 cv
64.3193 27.2197 59.4203 29.0313 55.0287 30.4189 cv
50.4672 31.8613 46.081 33.6514 41.8598 35.9072 cv
41.6615 36.0132 41.5649 36.1699 41.5375 36.3359 cv
40.4985 36.7314 39.4643 37.1563 38.435 37.6069 cv
38.5351 37.3521 38.2621 37.0713 37.977 37.1187 cv
35.4335 37.54 33.0326 39.1587 30.7514 40.3027 cv
30.3393 40.5098 30.3456 40.9224 30.5522 41.2119 cv
29.0951 41.8604 27.6342 42.4775 26.1611 43.0093 cv
25.392 43.2871 25.6957 44.4878 26.5038 44.252 cv
29.4828 43.3838 32.7587 42.46 35.9365 41.2842 cv
33.6987 42.3955 31.5297 43.5957 29.4736 44.9307 cv
28.5751 45.5147 28.0287 46.8574 28.7133 47.8306 cv
28.9428 48.1563 29.2055 48.4385 29.4936 48.6856 cv
29.0644 48.6826 28.6371 48.7178 28.2172 48.8486 cv
27.8041 48.9785 27.4819 49.5313 27.7763 49.9336 cv
29.0356 51.6543 31.0502 51.9043 33.0082 52.5986 cv
33.7856 52.8745 34.558 53.1646 35.3271 53.4629 cv
37.9736 55.9668 41.766 57.1777 45.1342 58.4292 cv
49.6493 60.1064 54.3022 61.2588 59.0317 62.1484 cv
59.6498 62.2647 60.0937 61.8887 60.2582 61.4302 cv
60.5986 61.541 60.9365 61.6577 61.2778 61.7666 cv
61.1025 62.21 61.2402 62.7603 61.8373 62.917 cv
67.1205 64.3071 71.7577 66.8789 77.2182 67.7881 cv
82.9272 68.7393 88.7118 69.3267 94.4448 70.1294 cv
95.2675 70.2446 95.7563 69.4063 95.5688 68.8271 cv
98.0131 69.1338 100.456 69.4497 102.892 69.8291 cv
101.378 69.791 99.8598 69.7832 98.3325 69.833 cv
97.9311 69.8457 97.6733 70.4775 98.1074 70.6626 cv
98.5234 70.8398 98.9487 70.999 99.3744 71.1567 cv
93.1879 70.4697 87.0004 68.8262 80.8388 68.8135 cv
80.2939 68.8125 80.0243 69.624 80.5492 69.8838 cv
86.6703 72.9082 94.9457 73.1592 101.651 73.2686 cv
103.804 73.3037 105.96 73.2627 108.117 73.1699 cv
114.357 73.9106 120.926 73.5254 126.823 73.1357 cv
127.627 73.083 128.059 72.4785 128.135 71.8477 cv
128.218 71.8447 128.302 71.8452 128.386 71.8423 cv
133.008 73.0068 138.496 71.3916 143.082 70.6572 cv
144.197 70.4785 145.314 70.3174 146.43 70.1445 cv
144.337 70.5977 142.304 71.1509 140.396 71.8853 cv
139.88 72.084 139.715 72.9863 140.396 73.1055 cv
147.471 74.3442 155.875 72.1206 162.816 70.772 cv
165.517 70.2471 168.201 69.6514 170.88 69.0361 cv
174.575 68.6992 178.354 67.7148 181.794 67.1348 cv
188.165 66.061 194.53 64.959 200.883 63.7871 cv
200.914 63.9683 201.031 64.1265 201.29 64.1797 cv
205.99 65.1509 210.796 65.2026 215.588 65.1255 cv
219.968 66.5835 225.183 67.0244 229.516 67.6484 cv
235.227 68.4712 240.981 68.3628 246.618 67.1074 cv
246.773 67.0723 246.9 67.0117 247.008 66.9375 cv
254.672 65.2109 262.166 61.1089 268.871 57.9346 cv
269.076 57.8379 269.185 57.6973 269.251 57.5459 cv
273.957 55.1221 278.368 52.0933 282.599 48.7793 cv
283.28 48.2461 282.507 47.209 281.774 47.4551 cv
281.959 47.2886 282.154 47.1367 282.338 46.9673 cv
282.804 46.5386 282.706 46.0034 282.376 45.6582 cv
282.794 45.3696 283.215 45.0845 283.626 44.7861 cv
284.361 44.252 284.133 43.2647 283.583 42.8784 cv
284.159 41.9219 284.499 40.9268 284.472 39.8975 cv
284.393 36.9463 282.574 35.9365 280.364 35.4639 cv
279.936 34.9004 279.519 34.3296 279.1 33.7612 cv
279.001 33.627 278.897 33.4961 278.795 33.3633 cv
280.733 34.1084 282.784 35.0859 283.864 36.9004 cv
285.106 38.9854 284.387 41.1851 284.539 43.4356 cv
284.569 43.8906 285.087 44.3071 285.526 44.002 cv
288.026 42.2627 287.689 38.6343 286.351 36.2373 cv
cp
.803922 .984314 .207843 rgb
f
260.894 73.249 mo
250.52 77.1855 240.052 80.0425 228.863 79.6924 cv
217.777 79.3457 206.913 76.8086 195.906 75.6777 cv
173.921 73.4189 152.518 79.8799 130.645 80.6167 cv
108.126 81.3755 86.8705 76.6934 65.5126 70.0391 cv
54.6928 66.668 43.8344 63.2022 32.6274 61.3521 cv
27.1684 60.4512 21.6952 59.9731 16.164 59.9097 cv
10.1059 59.8403 1.75872 59.1431 4.38421 50.647 cv
7.53801 40.4414 18.3823 33.0361 28.3071 30.6768 cv
36.2265 28.7939 44.5336 28.3066 49.8237 21.355 cv
49.8481 21.3223 49.8608 21.29 49.8832 21.2578 cv
59.269 18.4941 68.6992 15.8838 78.183 13.4746 cv
89.2514 10.6621 101.74 6.08448 113.243 8.07422 cv
117.743 8.85254 122.099 10.2642 126.671 10.6343 cv
131.636 11.0361 136.622 10.4395 141.501 9.53907 cv
152.67 7.4795 163.37 4.48731 174.809 4.06739 cv
186.305 3.64551 197.761 5.00147 208.861 8.01172 cv
218.65 10.6665 228.032 13.8042 238.246 14.3174 cv
257.67 15.2925 284.998 12.8594 293.647 35.4033 cv
302.074 57.3652 276.862 67.1895 260.894 73.249 cv
cp
272.069 12.9941 mo
261.603 10.041 250.84 10.7559 240.103 10.3906 cv
227.329 9.95508 215.877 5.23926 203.535 2.59473 cv
190.71 -.152828 177.455 -.729 164.444 .916996 cv
150.942 2.625 137.288 8.57764 123.545 6.21778 cv
117.137 5.11719 111.192 3.12598 104.603 3.68555 cv
98.2011 4.22852 91.9067 5.9878 85.6821 7.49317 cv
71.707 10.874 57.8364 14.6631 44.0678 18.8037 cv
42.392 19.3081 42.3471 21.2603 43.2704 22.2183 cv
36.8432 26.6069 26.7636 26.1885 19.9189 29.3135 cv
12.1581 32.8564 5.15081 39.2441 1.52385 47.0449 cv
-1.68269 53.9424 .0233665 61.4058 8.05218 63.2876 cv
12.4311 64.314 17.061 63.7998 21.5151 64.0635 cv
27.8481 64.4385 34.1127 65.5239 40.2836 66.9663 cv
63.0566 72.29 84.5268 81.3931 107.978 83.8291 cv
119.914 85.0693 131.949 84.9697 143.872 83.6313 cv
156.171 82.25 168.354 79.7681 180.741 79.2227 cv
193.204 78.6738 205.28 81.1328 217.575 82.7061 cv
229.101 84.1807 240.231 83.9766 251.442 80.709 cv
261.519 77.7715 271.943 73.8472 281.196 68.8281 cv
288.122 65.0708 294.714 59.8579 297.668 52.3135 cv
304.854 33.9546 288.495 17.6289 272.069 12.9941 cv
cp
.25098 .356863 .0823529 rgb
f
238.487 35.4116 mo
236.906 35.4268 235.305 35.3066 233.693 35.1191 cv
233.936 34.8228 233.935 34.3731 233.523 34.0972 cv
233.495 34.0781 233.463 34.0645 233.434 34.0454 cv
238.49 34.6011 li
238.589 34.7202 238.741 34.8027 238.947 34.8091 cv
239.771 34.8335 240.606 34.8823 241.448 34.9443 cv
242.244 35.0479 243.044 35.1582 243.85 35.272 cv
242.063 35.3418 240.276 35.3945 238.487 35.4116 cv
cp
184.62 56.0752 mo
184.426 56.1421 184.284 56.311 184.207 56.5034 cv
182.802 56.5225 181.381 56.5117 179.958 56.5073 cv
181.534 56.3735 183.108 56.2266 184.683 56.0566 cv
184.662 56.064 184.64 56.0679 184.62 56.0752 cv
cp
120.043 60.3848 mo
117.242 60.6465 114.458 60.4253 111.852 61.5566 cv
111.622 61.6567 111.523 61.8335 111.515 62.0244 cv
110.116 62.1494 108.71 62.2393 107.293 62.2886 cv
106.068 62.3315 104.777 62.2832 103.465 62.2251 cv
103.406 61.9258 103.213 61.6563 102.821 61.5547 cv
100.358 60.915 97.853 60.5693 95.3539 60.1411 cv
101.167 60.4019 107.021 60.3579 112.819 60.3564 cv
113.074 60.3564 113.264 60.2637 113.422 60.1392 cv
115.82 60.1504 118.215 60.1074 120.602 59.9814 cv
122.301 59.8916 123.998 59.77 125.695 59.6328 cv
123.823 59.9482 121.941 60.208 120.043 60.3848 cv
cp
73.8696 36.083 mo
74.4047 35.8779 74.9223 35.6333 75.4252 35.3574 cv
76.0409 35.3262 76.6562 35.2881 77.2719 35.2524 cv
76.1362 35.5205 75.0004 35.792 73.8696 36.083 cv
cp
272.789 37.5493 mo
273.571 33.1201 263.433 32.7974 260.969 34.2051 cv
260.871 34.2617 260.81 34.3315 260.751 34.4023 cv
256.989 33.0557 252.724 32.8384 248.479 32.98 cv
245.724 32.5928 242.869 32.5117 240.195 32.2202 cv
235.194 31.6748 230.193 31.1299 225.192 30.585 cv
224.667 30.5278 224.315 30.7549 224.129 31.0928 cv
223.42 30.9619 222.717 30.8296 222.032 30.6836 cv
219.306 30.1025 216.586 29.5015 213.871 28.8857 cv
211.663 27.5747 208.894 27.3101 206.33 27.1045 cv
202.944 26.832 199.528 26.8418 196.12 26.9014 cv
196.08 26.877 196.043 26.8496 195.997 26.8325 cv
190.093 24.6289 182.749 25.4834 176.537 25.5166 cv
169.467 25.5542 162.389 25.7676 155.32 25.9102 cv
154.731 25.9224 154.426 26.3433 154.377 26.7939 cv
152.446 26.6768 150.513 26.5615 148.582 26.4209 cv
148.199 26.3926 147.921 26.5259 147.739 26.7363 cv
142.017 26.231 136.117 26.4146 130.293 27.0811 cv
123.733 25.1558 116.342 26.5127 109.715 27.4551 cv
100.879 28.7119 92.1757 30.6807 83.2968 31.6641 cv
82.8222 31.7168 82.5575 32.0669 82.4863 32.4404 cv
76.9819 33.2314 71.4775 34.022 65.9408 34.561 cv
65.1899 34.6343 65.1596 35.7866 65.9408 35.7564 cv
66.6078 35.731 67.2743 35.7046 67.9413 35.6792 cv
65.7167 36.5195 63.5434 37.5039 61.5922 38.2598 cv
61.2846 38.3794 61.1196 38.6143 61.0483 38.8711 cv
60.8896 38.9229 60.7363 38.9658 60.5756 39.019 cv
58.7807 39.6152 56.3539 39.8711 55.1464 41.3511 cv
54.4853 41.5337 53.8285 41.7305 53.1659 41.9419 cv
52.9384 42.0147 52.7524 42.1484 52.5893 42.3042 cv
50.3705 42.6611 48.1664 43.0889 45.9887 43.6484 cv
43.8383 44.2012 44.3022 47.4902 46.5092 47.4981 cv
47.8608 47.5024 49.2699 47.8906 50.6972 48.3872 cv
50.1 48.6636 49.5678 49.0923 49.1557 49.7778 cv
48.7485 50.4556 49.2851 51.207 50.0058 51.2588 cv
51.7504 51.3838 53.1669 50.7881 54.9789 51.0439 cv
56.5864 51.2705 58.1713 51.752 59.7782 52.0166 cv
60.0424 52.0601 60.3051 52.1021 60.5688 52.1455 cv
63.2792 52.9648 66.1616 53.501 69.0991 53.8989 cv
68.9614 54.1348 68.9555 54.4453 69.1845 54.6543 cv
72.8398 57.9902 78.683 58.5635 83.4213 59.1406 cv
83.5283 59.1533 83.6362 59.1611 83.7436 59.1738 cv
84.1293 59.2466 84.519 59.3106 84.9116 59.3643 cv
85.9145 61.21 89.8915 61.5493 91.6498 61.8101 cv
93.0864 62.0234 94.5243 62.1856 95.9599 62.3574 cv
95.0063 62.5103 94.0829 62.7427 93.2109 63.1001 cv
92.5302 63.3789 92.3613 64.4468 93.2109 64.6597 cv
102.601 67.0122 114.039 64.8696 123.536 62.7261 cv
126.414 62.3325 129.261 61.7964 132.092 61.1421 cv
136.851 61.2383 141.813 60.4473 146.447 59.9683 cv
149.375 59.6655 152.298 59.3193 155.222 58.9736 cv
157.798 59.084 160.371 59.2837 162.94 59.5742 cv
163.923 59.6856 164.266 58.7266 163.981 57.9873 cv
164.055 57.98 164.13 57.9707 164.205 57.9634 cv
164.661 57.917 164.679 57.2139 164.205 57.2368 cv
163.899 57.2515 163.594 57.2607 163.288 57.2744 cv
163.182 57.2314 163.068 57.1973 162.94 57.1836 cv
162.397 57.126 161.829 57.0635 161.25 56.9995 cv
164.031 57.0732 166.808 57.2046 169.588 57.2334 cv
168.178 57.5278 166.807 57.9326 165.5 58.5112 cv
164.788 58.8262 165.188 59.9028 165.878 59.9092 cv
170.345 59.9478 174.812 59.1113 179.279 58.8906 cv
183.284 58.6924 187.217 58.4927 191.169 57.79 cv
191.278 57.7705 191.357 57.7266 191.438 57.6836 cv
194.917 57.6113 198.432 57.29 201.826 57.1738 cv
206.116 57.0269 210.403 56.7192 214.665 56.209 cv
216.632 56.4961 218.587 56.8447 220.564 57.1646 cv
221.898 57.3804 223.223 57.4902 224.545 57.5254 cv
224.618 57.665 224.732 57.7827 224.892 57.8306 cv
231.925 59.9453 240.122 58.0674 247.759 55.6206 cv
254.134 54.8604 260.77 51.3359 266.239 48.5205 cv
267.489 47.8774 266.388 46.0088 265.139 46.6387 cv
263.006 47.7144 260.838 48.6851 258.639 49.5845 cv
258.514 49.5825 258.383 49.5977 258.242 49.648 cv
258.09 49.7017 257.94 49.751 257.789 49.8047 cv
257.808 49.645 257.826 49.4844 257.813 49.3232 cv
260.435 48.5933 262.953 47.5508 265.484 46.3252 cv
266.213 45.9961 266.914 45.6411 267.585 45.2725 cv
267.972 45.0723 268.359 44.8706 268.748 44.6636 cv
268.929 44.5674 269.073 44.4473 269.202 44.3174 cv
269.32 44.2412 269.451 44.166 269.565 44.0898 cv
271.911 42.5313 273.18 40.3496 272.789 37.5493 cv
cp
.960784 1 .847059 rgb
f
174.57 26.2813 mo
165.16 25.082 155.166 26.3037 145.551 27.71 cv
135.981 26.5225 125.876 27.3408 116.318 27.3272 cv
115.546 27.3262 115.551 28.4922 116.318 28.5225 cv
123.071 28.7876 130.075 29.4839 136.995 29.5864 cv
137.043 29.9824 137.376 30.3838 137.889 30.2983 cv
140.131 29.9258 142.376 29.6387 144.624 29.4048 cv
145.571 29.3379 146.512 29.2461 147.45 29.1387 cv
156.531 28.3618 165.641 28.2866 174.672 27.0405 cv
175.144 26.9756 174.957 26.3301 174.57 26.2813 cv
cp
.803922 .984314 .207843 rgb
f
193.464 29.5391 mo
181.15 27.7314 168.091 28.5371 155.695 29.0064 cv
154.958 29.0342 154.952 30.1519 155.695 30.1548 cv
168.161 30.2002 180.878 31.377 193.314 30.644 cv
193.906 30.6094 194.127 29.6367 193.464 29.5391 cv
cp
f
225.82 57.416 mo
225.755 57.416 225.755 57.5156 225.82 57.5156 cv
225.884 57.5156 225.884 57.416 225.82 57.416 cv
cp
f
270.099 38.9292 mo
269.962 38.0459 269.361 37.3828 268.532 36.8794 cv
268.622 36.7573 268.673 36.6045 268.629 36.415 cv
268.126 34.2529 265.688 34.3975 263.823 34.2861 cv
260.658 34.0972 257.46 34.1567 254.282 34.3057 cv
254.227 34.2607 254.163 34.2212 254.08 34.1929 cv
246.593 31.6191 237.29 32.1211 229.447 31.4629 cv
228.953 31.4214 228.698 31.7373 228.649 32.1064 cv
223.383 30.4536 217.366 30.3193 211.988 29.6157 cv
210.628 29.4375 209.266 29.2803 207.906 29.1118 cv
210.129 29.1875 212.352 29.2314 214.575 29.1919 cv
214.872 29.1865 214.95 28.7349 214.646 28.6626 cv
202.165 25.6865 189.094 25.6865 176.322 25.5381 cv
175.666 25.5303 175.682 26.499 176.322 26.5459 cv
181.189 26.8999 186.065 27.4028 190.944 27.8774 cv
190.905 28.2559 191.071 28.6519 191.502 28.7144 cv
198.239 29.6909 204.964 30.7573 211.707 31.687 cv
217.699 32.5132 224.278 34.25 230.33 33.5566 cv
230.503 33.5371 230.604 33.439 230.668 33.3237 cv
232.528 33.563 234.446 33.8662 236.391 34.1719 cv
234.575 34.1055 232.759 34.041 230.942 33.9668 cv
229.9 33.9238 229.906 35.5332 230.942 35.584 cv
236.155 35.8374 241.35 36.1499 246.552 36.5674 cv
251.11 36.9331 255.829 37.6113 260.364 36.8638 cv
260.687 36.8106 260.811 36.5342 260.783 36.2622 cv
261.095 36.2925 261.407 36.332 261.719 36.3643 cv
261.801 36.5078 261.935 36.6182 262.13 36.6543 cv
263.095 36.832 264.061 37.0264 264.995 37.333 cv
265.807 37.5991 267.904 38.2896 267.958 39.2446 cv
268.004 40.0366 266.641 40.9951 266.078 41.4741 cv
265.229 42.1958 264.325 42.7549 263.354 43.293 cv
263.216 43.3691 263.309 43.5986 263.462 43.5498 cv
263.703 43.4736 263.994 43.3897 264.317 43.2959 cv
261.376 45.127 258.169 46.6152 255.002 47.7168 cv
250.918 49.1372 246.711 49.8291 242.921 52 cv
242.58 52.1958 242.595 52.5947 242.799 52.8325 cv
239.763 52.9727 236.719 53.0254 233.669 53.0298 cv
227.034 53.0391 219.078 51.4668 212.658 53.251 cv
212.44 53.3115 212.327 53.46 212.285 53.6279 cv
206.693 53.5674 201.1 53.6494 195.511 53.8472 cv
193.894 53.7759 192.296 53.8086 190.749 53.9766 cv
190.584 53.792 190.354 53.6768 190.057 53.7139 cv
181.262 54.8154 172.577 54.0713 163.762 53.7256 cv
158.253 53.5093 151.922 52.9658 146.213 54.0264 cv
146.305 53.3564 145.776 52.5225 144.894 52.7261 cv
139.337 54.0103 133.857 54.9351 128.168 55.3857 cv
123.658 55.7432 119.036 55.8184 114.616 56.8291 cv
114.355 56.8887 114.2 57.0332 114.117 57.208 cv
111.866 57.2295 109.612 57.2163 107.347 57.1377 cv
101.793 56.9463 96.1274 56.0361 90.5658 56.229 cv
90.5219 56.2236 90.4877 56.2061 90.4399 56.207 cv
86.2519 56.2793 82.1879 55.4004 78.1264 54.6592 cv
81.1474 54.6641 84.2519 54.2837 86.309 54.5283 cv
86.5395 54.5562 86.7099 54.4482 86.8251 54.29 cv
87.6528 54.3276 88.4804 54.3628 89.3071 54.4048 cv
90.4946 54.4648 90.4628 52.6812 89.3071 52.5767 cv
84.1474 52.1113 78.9936 51.5449 73.832 51.1113 cv
72.5375 51.002 71.228 50.8047 69.914 50.5811 cv
69.8442 50.1231 69.5424 49.7271 68.9389 49.6279 cv
66.3066 49.1943 63.6684 48.8989 61.0234 48.6323 cv
60.9662 48.3701 60.7758 48.1265 60.4448 48.083 cv
59.7104 47.9878 58.977 47.8853 58.2441 47.7783 cv
57.6943 47.6113 57.1303 47.5049 56.5893 47.3096 cv
56.415 47.2461 56.1908 47.1621 55.9823 47.0542 cv
56.2011 47.0283 56.4223 47.0029 56.6171 46.9658 cv
57.7919 46.7402 58.9433 46.4468 59.9584 45.8022 cv
60.206 45.645 60.1386 45.1445 59.7929 45.1909 cv
58.4589 45.3682 56.914 46.0557 55.3901 46.4902 cv
54.9316 45.6279 55.8241 45.1074 56.3578 44.7432 cv
57.5346 43.9409 58.8754 43.4326 59.9907 42.5352 cv
60.2221 42.3486 60.1078 41.8711 59.8041 41.8296 cv
57.7123 41.5449 54.7372 43.0664 53.9614 45.1211 cv
53.7114 45.7832 53.8202 46.3203 54.1235 46.7778 cv
53.892 46.8135 53.6615 46.8438 53.435 46.8535 cv
52.9091 46.7344 52.3832 46.6445 51.872 46.667 cv
51.5195 46.6582 51.1664 47.0234 51.3041 47.3843 cv
51.6889 48.3916 52.5156 48.5557 53.4511 48.6494 cv
53.37 48.813 53.3158 49.0098 53.2992 49.251 cv
53.2621 49.7881 53.7304 50.4077 54.2626 50.5161 cv
56.2001 50.9102 58.1943 50.8379 60.1596 51.0244 cv
60.206 51.0293 60.2524 51.0361 60.2983 51.0405 cv
63.1303 53.3799 67.5698 53.2764 71.101 53.5166 cv
71.4076 53.5371 71.7153 53.5513 72.0224 53.5708 cv
72.2079 53.6641 72.3891 53.7627 72.5864 53.8413 cv
71.642 53.7515 70.6948 53.6924 69.7436 53.6836 cv
69.4286 53.6807 69.1777 54.1445 69.4618 54.3638 cv
75.1567 58.7647 83.6498 58.4307 90.4399 57.8242 cv
90.5361 57.8154 90.6152 57.7832 90.6938 57.751 cv
101.394 61.3315 114.595 59.7666 125.434 58.3398 cv
125.626 58.3145 125.774 58.2271 125.898 58.1191 cv
131.036 57.5103 136.227 56.4087 141.22 55.5005 cv
141.116 55.5454 141.007 55.583 140.903 55.6294 cv
140.216 55.9365 140.426 56.7637 140.938 57.0977 cv
136.59 57.1309 132.086 57.0122 127.998 58.1216 cv
127.266 58.3203 127.33 59.3184 127.998 59.5454 cv
133.656 61.4658 140.599 60.5166 146.422 59.8154 cv
152.378 59.0977 158.314 57.979 164.165 56.6548 cv
164.935 56.6719 165.705 56.689 166.475 56.7065 cv
166.002 56.8569 165.535 57.0166 165.075 57.189 cv
164.552 57.3843 164.638 58.1113 165.205 58.1558 cv
169.025 58.4546 172.952 58.1416 176.879 57.6777 cv
176.668 58.1758 176.793 58.7974 177.456 58.9194 cv
183.201 59.9771 189.525 58.6006 195.285 57.9453 cv
201.795 57.2041 208.296 56.4268 214.814 55.7559 cv
215.214 55.7144 215.476 55.4775 215.622 55.1875 cv
221.889 56.5586 229.5 55.79 235.564 55.6172 cv
235.603 55.6157 235.643 55.6133 235.683 55.6123 cv
233.858 56.1196 232.039 56.6533 230.238 57.2578 cv
229.998 57.3379 230.023 57.7314 230.3 57.7183 cv
236.251 57.4302 242.135 56.1279 247.955 54.625 cv
251.429 54.1733 254.886 53.584 258.318 52.8501 cv
259.126 52.6772 259.059 51.73 258.522 51.3584 cv
258.795 50.5664 258.175 49.4463 257.157 49.792 cv
254.062 50.8408 250.925 51.7012 247.777 52.5088 cv
246.658 52.6006 245.538 52.6777 244.418 52.7412 cv
253.597 50.4658 261.122 48.1826 268.114 41.875 cv
269.372 41.1807 270.302 40.2412 270.099 38.9292 cv
cp
f
136.196 29.7148 mo
129.602 29.2017 122.827 29.6318 116.123 30.0811 cv
116.263 30.042 116.407 30.0147 116.545 29.9736 cv
116.946 29.8564 116.855 29.2817 116.449 29.2603 cv
111.05 28.9736 105.443 30.2178 100.069 30.7778 cv
99.9487 30.79 99.8569 30.8398 99.7773 30.9019 cv
98.704 31.0156 97.6303 31.126 96.558 31.2481 cv
96.0737 31.2979 95.5893 31.3467 95.1049 31.417 cv
91.5073 31.8359 87.912 32.2837 84.3158 32.7105 cv
83.8134 32.77 83.8998 33.4712 84.4096 33.4014 cv
85.6025 33.2373 86.7963 33.0767 87.9897 32.916 cv
86.9242 33.1841 85.8676 33.4541 84.8344 33.709 cv
83.6425 34.0024 82.4599 34.3247 81.2778 34.6494 cv
73.7983 35.3447 65.8725 38.627 60.1567 42.5244 cv
59.3285 43.0889 60.099 44.4404 60.9487 43.8809 cv
60.9604 43.8731 60.9721 43.8662 60.9833 43.8594 cv
61.06 44.3643 61.6205 44.8462 62.2367 44.5532 cv
67.3295 42.1318 72.9252 40.6548 77.8886 38.0352 cv
78.1083 37.9194 78.1215 37.6177 77.9926 37.4356 cv
79.309 37.229 80.6332 37.0488 81.9477 36.8359 cv
81.8422 37.4023 82.3027 38.125 83.0658 37.9902 cv
92.955 36.2441 103.479 36.1992 113.168 33.6592 cv
113.278 33.6309 113.35 33.5723 113.394 33.5015 cv
120.8 33.459 128.282 33.3516 135.536 32.0791 cv
135.913 32.0127 135.803 31.4478 135.448 31.4346 cv
127.167 31.1284 118.791 32.0972 110.503 32.7129 cv
103.103 32.3691 95.2309 33.8135 87.809 35.2373 cv
87.852 35.127 87.8559 35.002 87.809 34.9028 cv
92.5278 34.1685 97.4272 33.7583 101.841 32.1856 cv
102.078 32.1011 102.184 31.9185 102.191 31.7324 cv
102.205 31.7314 102.22 31.7305 102.234 31.7295 cv
102.24 31.771 102.266 31.8096 102.32 31.8096 cv
102.378 31.8096 102.408 31.7651 102.409 31.7197 cv
104.031 31.6211 105.675 31.5342 107.319 31.416 cv
107.395 31.5986 107.559 31.7393 107.822 31.7324 cv
117.231 31.4839 126.986 31.9297 136.305 30.5205 cv
136.789 30.4473 136.626 29.7485 136.196 29.7148 cv
cp
f
220.694 32.167 mo
208.122 28.0625 193.427 28.3672 180.324 28.062 cv
179.801 28.0498 179.607 28.5322 179.729 28.916 cv
176.535 28.6104 173.287 28.5889 170.154 28.5278 cv
163.997 28.4082 157.85 28.4854 151.703 28.8516 cv
144.806 28.8057 137.903 29.0264 131.018 29.4458 cv
123.143 29.2979 115 30.626 107.209 31.3252 cv
99.435 32.023 91.5522 32.4946 83.9291 34.2524 cv
82.9594 34.4761 83.3325 35.8984 84.2646 35.791 cv
83.6938 36.2373 83.809 37.3296 84.6904 37.2461 cv
94.225 36.3398 104.321 36.9551 113.687 34.9756 cv
114.09 34.8901 114.111 34.209 113.687 34.1392 cv
105.924 32.8633 97.5473 33.9399 89.5834 34.9824 cv
89.5419 34.9668 89.4975 34.9541 89.4448 34.9541 cv
89.353 34.9541 89.2836 34.9863 89.226 35.0293 cv
88.2582 35.1558 87.311 35.2734 86.3578 35.3936 cv
101.759 32.4595 117.943 34.1167 133.205 30.5967 cv
139.042 30.0586 144.884 29.6924 150.743 29.4395 cv
150.615 29.8936 150.844 30.4448 151.448 30.4111 cv
157.35 30.0801 163.264 29.9331 169.17 30.2647 cv
175.024 30.5928 180.976 31.8159 186.829 31.5068 cv
187.515 31.4707 187.657 30.5244 186.991 30.3096 cv
186.176 30.0469 185.343 29.8364 184.504 29.6489 cv
189.846 30.0313 195.17 30.5479 200.501 31.1118 cv
207.173 31.8174 213.841 33.1934 220.56 33.1563 cv
221.14 33.1533 221.229 32.3413 220.694 32.167 cv
cp
.960784 1 .847059 rgb
f
265.743 39.29 mo
264.936 38.1729 263.555 37.7168 262.278 37.3779 cv
261.944 37.2896 261.61 37.1953 261.276 37.106 cv
262.19 37.0508 263.095 36.9731 263.975 36.8359 cv
264.471 36.7588 264.471 36.0576 264.106 35.8296 cv
259.926 33.2158 254.227 34.3945 249.525 34.5693 cv
243.409 34.7969 237.292 34.5371 231.193 34.0664 cv
229.852 33.9629 229.865 36.042 231.193 36.1523 cv
236.993 36.6367 242.789 36.8403 248.608 36.875 cv
250.923 36.8887 253.359 37.0439 255.794 37.1314 cv
255.859 37.1787 255.925 37.2266 256.013 37.2564 cv
257.979 37.9209 266.183 39.5723 263.565 42.6982 cv
263.307 43.0068 263.39 43.4771 263.802 43.5996 cv
266.408 44.374 266.896 40.8877 265.743 39.29 cv
cp
f
260.69 43.6885 mo
255.6 46.2871 250.335 48.1431 244.797 49.521 cv
240.943 50.4805 236.924 50.7471 233.032 51.4746 cv
232.841 51.4912 232.648 51.5132 232.457 51.5288 cv
226.098 52.0479 219.788 51.2979 213.439 51.604 cv
212.841 51.6328 212.727 52.4517 213.298 52.6401 cv
220.193 54.9116 227.871 54.9404 235.371 53.7559 cv
244.379 53.3291 253.982 48.8667 261.4 44.9023 cv
262.201 44.4746 261.494 43.2783 260.69 43.6885 cv
cp
f
203.695 53.251 mo
202.775 53.251 202.773 54.6807 203.695 54.6807 cv
204.615 54.6807 204.616 53.251 203.695 53.251 cv
cp
f
190.444 53.3687 mo
184.239 53.5698 177.937 53.418 171.663 53.499 cv
171.539 53.4072 171.391 53.3418 171.193 53.3511 cv
163.387 53.7139 155.585 53.8955 147.776 54.1636 cv
141.412 54.3818 134.622 54.3301 128.272 55.3989 cv
128.214 55.147 127.987 54.9204 127.659 54.9834 cv
114.613 57.4805 102.401 56.0928 89.4325 54.5103 cv
89.2753 54.2949 89.0346 54.1367 88.6957 54.1216 cv
84.268 53.9209 80.2748 53.3691 76.1215 51.79 cv
72.7768 50.5186 69.2919 49.3359 65.6791 49.6719 cv
65.225 49.7139 64.9096 50.3936 65.4194 50.6328 cv
69.0073 52.3169 73.2748 53.1899 77.0688 54.3887 cv
80.8168 55.5732 84.7944 55.8467 88.6957 56.0903 cv
89.2035 56.1221 89.4975 55.8154 89.5971 55.4375 cv
101.047 59.4356 114.057 58.7944 125.83 56.3994 cv
125.889 56.6221 126.068 56.8228 126.335 56.8418 cv
133.659 57.3613 141.421 56.2822 148.751 55.8037 cv
151.695 55.6113 154.63 55.4565 157.566 55.3252 cv
168.325 56.8452 179.633 55.7695 190.444 55.2905 cv
191.675 55.2363 191.685 53.3286 190.444 53.3687 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (rain_4.eps)
%%CreationDate: 3/12/2018 2:11 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bFmN4Qa8CBamZ>=,HC2CMS]8e`0M(,M1aMbAZD9TA2dO.BeCIf7!*5mA.Ub.+1/oXLs6\[gBJZf=:G
%ao9g$0>Df+o%X,Ds7b]g04GC&07nD[0-'uR6[nss-U7Fqc[LB@rV;<L.f/4Gp2X/39>'>#EM`09/!l^F`Q)%UIs>u1o$-W0^Nt5'
%rV)(KcX4Bbro^o2hk%L9rVFXFns_#=YATssJ+_FLrqVbUJ!"NLJ!n$bH1q10k1/c6:YtI/e\]>q2)"s,n)Z%0!WLC<o(=YC8CNp7
%Dr/S4ah;]j:O`>%rVT3#jmgfLrr)5ncb=o#qT54>Y?q43TAe;c?Y7"EQabj8d9ju>I_KlDr)A-U45Tu$aUc_TkVIGK=n:0'5MP-4
%s2XQ:hkB.Y?BsV<NlPUarl`j>d#Tj,f@+GXs+\;c?._SocL64+`&#&tOI'6HnnW.[\2t3db>7qskeTL=^A.-lP;fs3MBTL1`_lB)
%?=b"Z95XW*)%jQ`Ui;T?('-uq#!*O/X7aW5OE[j5\`0)aZB"nNO3__DqX`Nm^O>[tm;![#ldp'hI.mT^;#8bGi_n4-`iHBr_1)F]
%+.hB(rhl+/hFOPV[P])&?bcI"p:5:^HCp\i:H7iB+7T<tN'BFMrU&tk&`Qm<J&!K2Hrl[6]ANPUi`AqTFpj^[p5n0\GPgqAYPnda
%pl"Fu4%hgLVcn:]aaG#&j./upnFg)GH<f:p>;1*4'+t31lY#*=Hhm7[*VDiQhPBl^YFg6L$?,IHWrL*m\>n#Mf)OB\b%JJ7F8N8X
%\as/MIQ^DXjm(H)imFZjh],t9^d*:.J*pkL]Tftsr7/:Mg[uZdS_W4[n*F92nF^^+aT^!sil7$$rC29<^]*'\+68d'Gl?o_msb*'
%:Tkg(qW[Z3YQ!X,pT%p[Dg2'$*Imsmh+u_tjRo"W^3]_oq<'EG\UCbYnZ+%`^AHSFDYiI%DVmSToD*7*oj_n;5Am+-H1b>DnXJ?Q
%s5eaR5B%DePhdEf5C"_c/H6dS4QM5P.^/aDbI.7\s6i=X(MtBM^YV4[:G741IK&NDl,J&+6gj`]k>,DJGs+3jO4'*[RjTtklRd,9
%m@-=(kaj!Phat<H0&&[;k6]V@*qZBYDuM;G_sPWc^)qRNJ$*^MYL0e6h!smpq=A7V^4,Y/T:\:&m9fn_rL\:`GkL@t\GM!;O!i2e
%j0*F`K-^510E1(`o4Qsq(lt(hIO?oKm-4,r0E:bES(i^X.OP2]QbRsJrH%]`m"Fs@&:LP0][tp<lTT/jFm2KgbPt+/q=5t]k0c&o
%^DbG'k'r.^l%=B[k*[X9HRA_rch[.8:IJ^mlIiqbA"o]es7GZSQj^MZIsC\LG+G,+?@2u^FSFmhT6tk+RFBL[EkQ&\>1U*,h>6,h
%\$'Htme/<s;h"95aZ%OVc2>,NDR!B@96UX:k:Q>imHmPlbiO"N[DQn^c/V=or:nZ[Q$dF4i,:6WJi2HE+,b3*In9Z*pfeO*_FOS\
%/Zh3c'R)e;HN3gTh.1i"?,$h"%)'cchdb8VZ*QNJh35dk=Vfctf#6/^H(4d,+8$uFPIsH_kkFitYG#m>5HYXRL$g!Jr7qme^O(G,
%&%g`5Ie*'a>DV3?b?"DVQM)ojD]r]T')pHcn/d)>5ACUeif^>QM'B=6`SmOD3WI^k8([PtaUt_o[D-m*/F=_'Z0g:g_bY-[V&!9K
%^,\3>HE,#sYO[TTC9HPK<`a1]6&nu6/5%V#K];Q^*(N$_=`0@;`_X`3L[=,AH-&^jOlM[dEZEM6%XD$RWQ:3"PXE*Ka,cCA2fbGJ
%5n81jfV1JPAt0Eb*'Pup#rgfga"\RpOO"4b<&mR4#N@!H.kcBWOR<F5^Ys0qj6."om,bbNnr^Z_+pVF0H+C>L:6cnKa+D4b\<@n&
%3VLm0Hg)7?C(Z:H7s7Iaki=J.^q&PrNmi$5iuijFbI&=L8!P=j85$<7kT_-5qS,$OnmZJVIek^)H1UKRf$]WX%K>""ih$l0;Z;$)
%s$+SE^#.#*l[@O2JF8=8BqI*gq]H-T">>-Ia%;;D*&q4,j1:-'5]T9.d+'=%Pb*%Ca&1p\+9tYpR#"j@JfmE17JQWs3K>:V#<DLB
%VsB3^nYdj;\L%`W8=.C6,ciUBAZ'R556q#a^&7o<*)6E3q>VZ=?Q_<>%?Wl9i@%?%o$-2b,)I[-<#Q;<B91XdE`kd_ZUcERZV)\,
%e!YU?R"XI[aCu`ejV.[,j,Qmq,>6YUQ]kWA^9U;dhOR&BJk0X?iAuZ],WnZ-*Pt[l8`id,nl[R4j!cQ/aFjSeF%dtW^*$cgU_aO:
%7X?Q*]WKVK7hJBAZT?93>g!E/aERk+^EOTTfVC03Uk=VR'hLAi+0TTN7_D8c&Lk:,R6$2k3LPIr\uNj0[_q'C'_-Cf+J"m\nc8Zg
%a6VdbGWa+hANGNDifR#*eBdgPE&u.85;t?O]I3ag#*k(%::o1Ta78:KN[%&,i;c/Wpc/m0#ZDG29(H]eV%bfnh6dM1K^_NP`4Zs:
%3p;/\Yt^;nM"0Lq,0otoQHn,]aH';e2ji,pT:XLT;Q3"&$6C<G!C(qsZD1*j)g7aak2(*PKtWEWVdALRXEX^mkFPTee+SGDc0iQ(
%&(\ke+="t17V?(dd^[:#k]Ss]LRZ0j[#YWGBK@#a-qCS:^d,sgi0@h,E5<.bIRK5LcuPj&A`]$4&add#_#R%ciM0tOn5ARK@A&o*
%8'NO;GRU"agDb>&%6qI#+.9#^+R!2_F`[Tt4C/S[_r[U1Thhp%M"!`YnKW(t-)+;))nHq.-O[nEPOqCK_P<f1*@EZj2C<\.<6(4V
%cnSK#(oTS4_gs;s";ujW&.*q$_0R6i#Sd^gN/J&Y%MV^6)VT654An>5pq\G*Zg<P@M/l6gDI*7Q"O8dTV/Va<5WKgI8B"1m'UbJf
%dH#:<U`U40b@Hs^=Y<E(qrih]*(2-Vjd):<=h6JJoQZLn7:b[/_K$2:]9^K<q=H4D+%7BY&1q.'Yf,mFE@H7>3b4$jQPIP0jWmX>
%Jo],tV!)i.B#l0'!$gQ4AdB07faP^f+`AjDKuN(U3hp`C8CGP0$V"JS%PfeA,d97=/e5HL/6igJ>R[dG%$W=33"-Kkj5aa*agIN_
%R:]#%BlpXm_^%7"`9q?&<&7)i%2,QCM3o288G6YU^_fXTMDuLtC4<,G;/(2!1HCtn)Fp4`0Jj\K6&s71n5htrfBp@Z2ZnmjWY)c,
%2W1a-J<rt0O1^Snh&gX#jJ4rX:\.'SB)5Q6!f@-&.AAUdRM8H0P/\dJF7f_2!YA#LE7YKmYj:2q!ViRZ0;#nerFYf+25++1#$bu2
%gSaHJFA'Q1I?6j424=7FdDJ^qKIH[)<l./01@0ZB!nKclNl+o=,*mQfd?E2j:4tQ_(lM9(Tg$n:n5Qtq[<l%4<1QK.cplc@l;Eim
%e7>@q/6%IQWl%bBIV#hYj]<8U^@9F+DI7FJWOf7pW2Z`TN^Le-e1roECuJA_VlELWSZ4bOG\*he<UoaS]cLY;W$:TNE'6s>h"1],
%pN3pgLBrFFF+fHA]]Vi?K51%m,N!j4q[^6tID;g)G/t[GIWg(Z+a8=\Gn3,'hsnE:-Juh":'pPR\lLhJ?<P4M%:YU%B%b?/"l82&
%KbS9gK.LdsZG6WHl7t5UBG;'LUM6,]YGBP/UT%ng*DF(;K5OIPmR2Ju)CJDF<,*GBC9grc;pE]Tle5u/bP&h!;hIcgZ!iScL)=1s
%d8>6H`K$u\@&@$b`e#(<X-T2KZ@91&34h'N%EDlsa'"aOUJ28fDTcuJgn`mkrNGl"D`Qh1OmX4=Nl6J943E2:\fPn4qOU3(q]U02
%`u4>m4SXpIrfK9kih-5jGC5`HRIj&c0o'r\9Z'TUb+AGtX?k5]8W;j_;c$M1==rND3\e)Wm?UAF"cf@QZP_pT:AR@`6>+SOG6@<c
%-s`ap>321\j2'N`e!X5C6`VWR!%b1g%'sP+FXM+k(=b$P!Nj/TWb$qN-Q8gt*5FK!UTS7tlBlWeZdCaI7r>WY<puPmTF8f.jtTR!
%@9VppA("=sa1L'kmDo/dmG1t7K9"9%r7AO?^Bso)m*Hk?i">3nASO$OB@l,O!9_,Ua^Y9K[meb`NU_UQ=A5aR]T9Ff.WsNTfM13b
%Z`KT*G#Pl?`&!$TbG+;V8Igru$e0C)TJ-B\#eQf/'Fa:Z1fiNG!9Uj9\0Z>54U3Q?kd`PP=k%>BYb9OXf2cS?&8<BoW1$@2,1TQ0
%?rHr#/YlLBlBSM,qAes6g(g!#@[#tDDbFUB51f(&c(<DN!H%e%F6e#G&PEs*`s]rPo!(Yb/fpV3RYMsS+c"kC60Ag[IaB6^I.4]H
%Q1!9^b0A2UnRaG4@C\rgiPqF+:.H2u-BfUp'QhBbj&&2IOD$htUF-b%4R<B+AceWci$Y2D7c-6?oE=4]^_:Z7^eTSE($Ib8<i.";
%6C\7!DSSu!2T;ESi9!D"bmE/NZoNc.#&c\S`2TLCB*UF3k#A!PThYbQ(%0j]'XeYH"RN+mfVm2"d89m/SOI+:>kVj9ffe<@CK2;h
%UFd7Zj[0ofNBr%V%^G[D;H:+d`GP^KlHuM1LKV3gkpBCN#>MhNO%,?m>HE$3icKjuEW5"L6gcpC`7r2cgiK"BH5pMh3'R*s4QMSc
%53TY+i2d<Ah!r5Drn"^@c-9m\nl_`8egR.Jb,;i2B8uIbUO:W@T/Fch];'))Obu:"ch7<dr%FJ5:h5Ga`:%8hCSX'?QQ,4]MTfY?
%\-6$B(]JFu<T2E^&+OoZ@_%#2JOO\8Gf3a+5;To%-U53SYHjWq'e]Hf?W6#,alf4%Y(CS'F3XOLqDFc7K@02Yq#p,WHigcK/s\A,
%5Cf-8lAUI[^9tt07^f=o"Nf%q6nr?:`Kgb<9Y&:.c_$glT".'*a.3S.T\o>71SH?G2@<<HQ&.gAMM%_G)RgEiVNfm7b=/-&'_g(0
%Q/[qO`-]VKb.h?G6FofqI#F*bA`UOprC'+:i!sn!;?,nKg#)=0^\?4NhC"[5/mb+ldXF)?2@2=-Yj[^*X=1qj$1f>lmMNr9ZCkE(
%>YG5iE4:X+EF;$OiN#LO=$^+Y]$,M#5drLr2$^;tJR!l0NqlWi$WNB'TK48J73g"i]ZgRs&Un1[].G8PVHA/(jfr"/?m%.-/8nO0
%<_i^(RHUBe.VWFmC6#:qV`,h^<V'.u\Z*jE;L<$@8Z(s5\Z)$ig+u]\AZ-eCFj<m%L']A*X$7snDDZ#!nY=PWLY5t2?q22,)MuJ&
%bITk%SYO:I2:lt72Rr7qj*9Oe+1^F.T:>_<q^f)H&?"I!bs2!M9\m$BmWbYsj,VH0I,?G55qWV9,M5sih]Ne,KBF.^b"Tn(AA9?f
%[hmLWWdbpS9VNRgkR/Dt*_rn\G)ctfh2Fb;C`7"`STGcR8b9/Z:Xrn1onhAQ4]Nkh"@:;5eeCEr15![GC$7%VL'LAsd6-ZlTlUU2
%?X'2&LWTK#La1->@IG9"7KD1GJ17]f5srGR>VZ^)V"Td952*j<Mo@.F*lje@G!4sG+*s#>Zsh;$mlC2,/&,jaeUVApkj)*dYt"$'
%B[Zo%k+>eUgh`%F3G/fdL)uW?nY9U(E5[*aoSt0>*V4oEEoEt[LYVDpgKT^3mR-F;J@"+qps4B/?8/^5C3\uh$SO6ts0.'@4A3]F
%E^S+BmlC@pbO8fEqjH1lg0r:pIn4JW$8.%3o^K4'FBsQc]]T$N9`Ic$dL%L=hS4V6@aAn"V/oJ46V;Vh8m=:>%[85bH\IWk5ggqi
%WRu2#*DN2hh!m"-[":a@JO=&Md!QB5H5KJ":PP!IgI(CRf&GtIO)jKX48<5S^3n!Bn+k4`*rhYsGQq\#A/VO/=`r!6,'NI,g89aM
%*hdLIMjVd[<[+4I8ZRqLK;95Qf;<a)dj;BtW7N(njUo[=f;bV?W&]2%kYB[Uc-T)7S%>A$H.6Vj\pdNW>Tn(6;_4!T;j")FWNr\3
%Q`-JlW)fe`B_ca202m;saD-MG/3hfcIB\=g^#d-hdr/Dp?'m%9RSF6mUOhZ\"kVTrFf5)^FJ']2Q0LiVRYS1L/Z`*&1tb89C,TRm
%N\VXNlptd0SKGCP\8_4i&,2*:)Z-352>]Ira,_9bSfO_Q+*,C,SFo(dJ*&h11_!*17GFJ?pmV#]<@2FWk(-V>0!^MfqDe:=O8V=\
%"G`[J-NPHR8LbcDVHTdM_Qo,s&68]p+\pNg7on*=ZZ+/=b!u99Ya.&NShet5'(\Ai2dP.BN%/%^>59Q2\Kc7QTu3p3USPUkpElhT
%bf>ge0A8+b-<#sZ4Hl$i!662i(dnE'=;0]\Tjl+ajqPBA,c7EI*npagD+`Z^/;^goGnJN%,,i[2;g1m8]G4\b4n>j?jQM;(RX4`M
%a6?lbh!pru]_+7U+*,C`D'*tL^>o)1mh8<'lp94^]!,XCCl@5RTQI0d(VoN(MX=1J>UrH#6lS>^%TC_)VXo&![/?I^;#[&L<bWot
%k)-BMX;3olV-0RHJi;<,=ZOH+;um%.dBKCA@Tum</[4HX>h]=<2O.A1Bd&AnPrm9&(3dp27S/="AJOh*BPj>cAVYj9Xb]FF*d;^l
%+Q!dSG(s*gH>()D%B&RMDS:(Y5R%^9ViFmn:GQX?bke4(I3^Glbi4AngBi^3Uk$"Q<=R(eD^7!?R'-bfOBB=r$&;p+<j>3Sh)hmi
%N\!;E%q!95FCI)B)o%\/-[<sH#TUd@L$omNrWC<8[M2X;"R21uH?2oK>f>al:]8"41cuN#a;rTcn[#"I3Qdn&A":^_0:D$JNV%E6
%k@T)P1JJI971TcUSBM[/)@F&7K<1PQ_^L^Y29KTuO]ggq_[Mu\29TTq//Zcg)hs`K@5?rh"M5_P=#'9(A7h-r=5BZ5%0PmcBh8c+
%!V9Yp4MBmjds@OJH>&:;Vt4RH=N>BO<D4qH\9l:L:I2UX<p""gP_k'n#FUOuaIE5gMi"I\ZA.PJL#nOYjuALC+RBl'bGQ7Qb^n`V
%)l&0cC7'B--4_hGb3tEt'>Kl`%1)N6X_X%%CN<`M=;n5DOl(o'j_Xh`Ri#GL;E`T+(SH+kC%ZMqL#M6e:XX7ta8OHGr.-g%pso&/
%ppIjM^E+!5*X1pE8>je$6E>$W8RrM!`WDULFZP@uoEeNq$'iPal4Dq-K\H2XD>%LNWi]2M%1adZ*mEoYS9lgCB3Dn^/Uj<TP4"$/
%ni^%2@O=A+,\Vsi0]JO'P#A%)OV6-dRZ`g!7A<KA@<?4,9X]KeA#^Ph)AYZK&_-g,#Hg:,fm/tqZXsW`\pRad&UK"T(rq/meXDX_
%/pE@bMfjqoHb;576RJFS*8Y]uQrW,eqsbm@^#MXF.ctBEb24rq<>+Q@.CBE#4L-<`17`U7ED(&qe/S+sSs5+gEWAHhRMAamW9?fa
%GER_fS)pBQ$h-?9DDf$PO=X6UY\;U?fe/[LM9bIS,O#dtrh)qQ)I_hl6nkC#Ko"+V=ckRa;bRL$2R%#u$mIs1oS1BqZ!fA&-di'<
%pXqY>Z6J3'kOT_oIGaS`jPbV=2jger=Fb`B'qGsF+>`"B.6\VH8Rs@\7CU<'/^VU3R`l80e6q]R-3O`W&=+"C$s]!uc5>h;O0l4@
%Bh$$i+raY[k@.1s(X#90croNA/B0Q]3?HJ5k*11b(Znp"m3";1hjjI"1[Eh%hDmgQkJAY.c"BNe"=S;H*a1SgmaK%Z?JfGpM6YA#
%s2o)]Xrh'r2Rr+-Y<I3EmiW"uh;]a45R's+lJq=dL<As_.,8m2+8Z?T^#S0&;AJMTXEK8kRu6O3[A>&#Se7j9>Rg,p*tA6J`ZIFN
%Botm3=@:/8Nqt/=\@Gg7*E2Ad-U%3!6e42^Cnuim@kCaF5HC9@`f\;=qB;&CQ0-U`R;Ju>+$NB=SH!UN>hF^<2M%Ik+OSbe]c2Fc
%TrI_JY*Y[H"M6G"O=hR9Oind6HKc5_2`okfX[.EFLE@$T6)V9`Y2_+%7sC#@Y`Oo*E5sga`*TY6/UUu&DsI`nY6f*13nFMi$Z&dF
%mQNAaFZ-6^V<&1>.c\HOq-qLb&p%/8nRuUJ[aKZf%4@`6O]qn@/M_9?5:`LN:-cG[oWqsuIlf$Nh2fL`EtVZ\*[hV;glTpd.DP.&
%c&'3UT$2ADpoCC/#_fC[BQGBNS,fFr]D?gY,HdRNJo>s%0FfE5pPbC7;M3G$C@F,EGY/7]@7e:R9+/J'(jp6gn=?B5HW,KT@eW1/
%Kr!Xf4F"n$Il8qR@</le_85`9i8%5fb\VM_i3rpb/d1\3$+nI@SATHm&^0u_[KU8DZ7WuI3B,3KDeQ1ZcWQ=S)3]gH06c3e!:t1G
%/m*`1kJtS5&Zp'.J-M@#[o!.>h)sCX%r_?Uf7:KbKI\-n$sp"C&BKVIL<4n]"*Zj8'l!p$@7==S53t]LWrG+K\']9S_-'8ke-6Lk
%n_fm.dr1.'9WqBiHXi6ggQ^'s`5V2B0"stbgu%Tr!p3\>>:_4;9"s)V?;>4$rGG:?]-/#:%peiqaJqH.&q+CCPn1N[@aIj9LlC&h
%,1]*JiS>7iG,W%D,pqEC7,)_B@`?rShnpqV`9;0Aabi*fcuEmtJ-@k;SUn?F)R8n&Xq/,C@o74607r-1Hkp/!RL(;&g7-i=@nr1b
%F6/7Kl_mR<d;qaf-&iDT60fj%[aA3LZ);_c;Chl[@&$Vp(Hggh.@=.Qge9>h]trjFf0n>3pX?Y@q7YtgmPt;\b-B;*ONEi"!$GE*
%e(\Ka"6n^`m*tYV9qBFFH,fe>o:%+eqeC`6iU$R.cMc)(ip7!M>;":&Q^0U,QV]g8/*&@/M-da57g'&_*W/u69'PaPpmA\W*;$KO
%cg'WQ6j_m,1$W#,R;2i"0p.dKr5FQXO1NTVcH'rbkp);04AI]\EnJN[0&%(HI9.-H3(86Vh/Q`<X_(a[F)j,^mkYZiH"c?u0EA`4
%2\TDM1\7f>H9JUEk8%EoEE(.1(kp,$M0pZ]3Er"]VVLC'a3cZ&:Rc$KAimdSh2cf3Ai^pBa\q4ElXb@\ieh:^)%P<*TLT6kAWl4#
%Y7&!6V?ekRRFVe%`(c7-d6e/d8_D8N/NF;Z_hJ+(jh9IJl'6UP1m+47dfr[FQlaGqUkq$a+`gf-VC6!/]5$39WgA;/!Y?7@a,`^C
%a'.ceL5!)(A[Rh=oJ2A36@f:dftLM7M1=CV[c5`AfFCu\Z-1Z`B9e1'nA0uulV:MsBS`jB)pBLF!F%Qj^f@hAb)E=$L^N[:a,`9Q
%19d!&p(h?/H=/-[U\$QP.XiG,'TmiZhW.P8=VTU1MR*_Kqm%TRfuhBe3J/RF4jmPp]H2+6]K+-J7t&Q83M:E5X\3ti0'rQha&L//
%G<B."MY:[ScK29V3EoPD_)jc+/L.X_XO%[dgZjKgED/(QYV/`RC[&gf1)f?EGa?d^9klYh//VE*;@Q(I/fjrFD;T[q"2/\^(F'Kq
%!a`R@@?UeaSFFXni?ja:9lCPCmQE>,H?RgBhl!?JW4T?k:ZdR<m^Be8p0Lm-Q<(3-C<3aAo-'Hia&1fe^gdYHWUmLe(n,[0L1n]h
%4Ph6.0q_d=rJlrK9D<gSU6Us3eQ(@LrQ:BF8OO0O:5-<'lP>S.#Btl=kViFdLYkPX6ZcM19]OBlol@g"K;")_R,oYaB$D,3YRe>C
%A$*FldFcXHok*[98<c2iEZ+3&@H0)ErmHNbGr%`WTe$j`6W<-HD>^cPp!bOq]@OJf5ld&s1C,+%/5B'u:8lsWU^5`[B3qV#`G/\]
%V?Q;UUPkgr^.6iOVA,RZrik&jCpQ&@XN.Z__"mtOCY\JmZVTDR%<E6C>W6cggE6(1q7\H+]E(dbct;+8VJeJ)(%elMHQZ`i\pVr6
%i6;2d1tu:s[dl.(-^0Zq9%)eJ?]tP,lW8k`X)G%2*=IRnQ\nEk_n%XhRlP_8*;e9s.>Tg9Ok)eG*(ghmRS9<T,TZ$<kU,>&21O2J
%kDo.G"K7BqB<.5*]F*tbF7Vj(gYM"hD3tU3Y%al9Cs>kcQ)N4`>,h;K9gWt!N@nA7FA4OAA\uO84&8:T%JASdIcs($Do(%9_:5o]
%e&NoIk?-Qm6[TQ*`B$&1-HB#QCijc0As7<RV'Jn3`b\L2VJ4ojbDfZ-A$PGfg%_Jko"ugD2]Jj)dCP@UU$\cMi#W0Bm%/i\Sm*uB
%&X\3&4_].j4mrGskXI6(iXmZ16ACL^=8'E+BcATf[Ee/WVJk?oM5jD_(7a0pmJ%4R-b=Z6%#@q^gG]U=T5`=s(Ng\_eh=.VX%mGS
%<kgK"&Er`)gD4_XOoQ!IjNW\/Q]u7m9N/O:eU263/^EFh1JI$[Z-"V?;GJ[D7[:&+-Ye<*"r>;1M(;$U]$Rqkgl.<s2N$n);KnGN
%<>$O'lRX'Sn-=RfRi5))n@TgmS]N?C*R.lD%(CcG]o]-Sq%N+@3U_78Pl-U!ol@3_Z)s0REnAL&(IPRi-eS*4hXaW%pdae!ad#"%
%G&Rq49=ND7&8#SY(p[/oGQedT-9bHGc2_g\-@@"O:g#KCpGQ`1%s`[^E/3+B-4c1BOblj`&PV52?]"Pg11;CeO5W3Yo/P#?3KN8a
%RXg%A&Y8+Z4JpT+DJ&],Y%)!2Mn3VEkOG*e\Xc68*ohO1D4JR3=[r)=@;nm3dD!h_F'i%8S.MuLoMM7$I3&-/m,ucgGJTij?hnQM
%%*VUg?Vl$6KNT'1+\@e"ObptF*bL72AR\:>)I)`b%Z1Yq\!J[>jPI(WEA8>sEKU:mI4stLk*DjD?Oe5E8;?*^&WB"!mfhVJrN?$2
%VuC^J;3#kUHMqi-@.1_1gItjRN&5T?K!6!j'sTa9^[='sKs&8"AU0lk\I[N,^L/m9NNtOSRFub\CBLBiO*<c^+]go%Fp\qr%T9An
%`G2=lmY#_XRV[3)bh9U^a]t?1`G4I`f@H;bB'\4-5kLW1S,)StC$\&a/7\IDP@r3c4*![Pql)U?I@('KT?OIDFd*;T+(\HC=a]PI
%X`(\_hti)n4'i=3,>I[E]"\HGmf\WPG&:DA0(=j:hedhSmJEI"fLG0(NfP8b4eAu$h7i(MVV?<;^"VnWVXnqe$j2F9C91DLGLU=l
%Qk1SCd\0:\St]:=#*qL92Um8S(*/HW20\;O+03T-79*CF6^.34h$d5*9t!d[kij@Dq=UeXG.7*S"eE)`dgS0PWAm2ne:ERidKE?K
%b*V.%Di(9HTs2PbH8KIB/)I[HpNFSp65.R44AF2@\l8>+3o0s!mO-*Ge:ED^GZa2lk<638h6?'jXOe0,'iF1A_9LK$gHFII!L/!9
%3Ssr.I$HedI/kX#]LgBl5hTH=):3j0RMW(UiW;NiI4``UAm;E[.DL;VE'MNcJ,Et0<gl=r#OK$L#"5<t^$?)FY7e7fGb:\s\LN'2
%Ma(q/lpYT7.qQ&Wof\)62tAjm9cHXo_QNAM-khqG_'Z:hM#bg6YsR#FATJ0`^)s^WG9gW)F^2"mf[`0,M0QL']R/Pk$Z[CG@=..n
%)u*O\K-)U/D8>@i1VrXTmtO"Y8P%`U2G[`RSc,[-?gC@36iTXZ..@%QGG*,sNJ<Fh>di'4G<DI2]SiJqM`[P;Jh2s*I^:nN99)58
%iu\J1fkKu!B@FZ58aL&8i\%+\_6bp9jMX2S'.K_iTX&Rpd2Q!=VZB^?1YQVFoUO7DClT7'4Cc5N5T)`fPb/!!G6!l"A`C$iI$TW8
%1@[8jppUDTs7P4>bI^^g\&fEST0p=>IZOI;+/JQcpnEV$EKDu*k_6_2n]W;LSUr<LD]"0Qm\!%c`[%e)hG!qS[=,PUgeHDtTZ\o]
%mX6_$OJhgrQ[d)?mq1^1aQ<BB1"d;P-eDqcW2c/JR*`<ed4t%*?ga4NI=f)EkCi`)It%+Rp)eJTk>.]K"Z(#en';j'B+4,_#5/o:
%qi$)S`kXcJ@%T0XcPY;IhtAk_nQ@2&bJ\%]pl'cP.L]!S^AcBXQbRnGm,a^L0>IJFMqM+&J+NH_Dnb9#K)Y1^:YrapIJm'Vq#(`\
%55COHYMd4j^[@Uf=%3%YSTOF&bY-a1e?57]b:[=LPp:NOn]'2WT0N;is8>7`@HE?X5Q4CWrVssrs0oB7<OuW5leOf*Y@[IQ@p\hT
%D@+a`eaL.tJ`]$)h#2!:4PoF+S"&3^]Y2E[r80_F^OC6Op@QV9="g2YrnHl(\in/"mU*YR^AI0f0<Kl@5(3%hc)]H'n"2`@Mfe"2
%IsC\bp?UVn5(3%/h*9hTrtGDk55r=qTQ`E]QiFM_8=l9&?n=so%XXoH-q9gD;&5CVqDGhJO&,BhgMVtD?A56:SI=C+j]\dQ6Fd.D
%X>C%KnTcJqmV5%eXRkgOjA6cMPm^;^EFRShT'DT!FB#8VN^6'9VQ&?r8^\eaMZ(!lX^7^,C$/s>.P7IP!LKP6/TPX;^!)+tjMZ'b
%;qXf:]TUV1dZUeKaA#jTQ1uJ.0,8nSjcd?*McZVtr(])e<F"V:/R1`LCj/,/C$@*TH8U0e`&lYGTn]dei:s:Cs$kRSD-$bVpeUce
%WB.Mh"`pp<k#M'2Y%IKiLs*XM\9<$1B9q2Ro2eM*d]UTjm*USc\h&Sp#'fXcL[?RLY!I]D3VP/-ppEJiW$.ZX+2,b!jn@!=+q=+s
%ET%:MH%UR:4K$:[bBmik->t05,;L:%G+7gc/+$q%?'DYKMk;-Taa5TsEeH4)3(O:1!9ol-d9cYTTk%6=:X6\3Z/Q?,0K`j-GEc)q
%4.=FX&@Wp1)"-$Qf.1,X,CHnT(Vs`8U4fA^bNh1Sm=8M<$^r+8,0rM5Hd#2uM5]2F8)Xem[C/If/r`r,_4*@KV(tpVKTn&D#&#HD
%h*,Emqk[%U:8S>dMnJ(&P]e@!fC=QCi4i1s\?J6Tm5esH^(0Ll,"iOjTMg`OP7P$,YO[gpH8K'ei/pab)7DAgAK31uG%0RS7.KHB
%f99nfOo7_7^Rb."=5pPt8@o[^b5+4(&af_RQ3f'c9+EnC3?_b:THUbk+=ha;ngHkndFOuJ6Biq^nM#IS)]j_ol5f=tP=VNU-0*]!
%k>tg5Y;.I\KN?s/<W5oD=Md/+hsDoX)sMC2f$0*UinlN'AH"HOFPIYA!EM+?EqRUD!!):O;H*Wg`C_R"-(j0cV.^rD.rZ>>p/b^P
%?kDk(>hP:U-\Rd"94NlnaC]jjb>f+s6j<a[b(,?MEj^]5E_^qOSaJlS+OX#LaOCf%3`BA08ae#=$[b:6L6<=WA^D7aX6?V@8lh+(
%V8I_#WP!E5!'+$a@X3btPf+%E593od8BWd]A&W+QB?FV?!Yq1pZn3#9&Nu-<<CCT?gnH_"GX_R-C!P+?F):Do[)fOM<UDD)>=9k&
%3R,`goMXR_H?i@A+AN<YU9c=R*%967''3K3#5B_f',k6W;?FU,e:a1&#dT+AO;kF#MTXL'"36n&.,Q31VOWGc?DQK?@B!ha(0Q>0
%Q^Ert=*?$/V,2:?/#K$G`BgV2h"8eN;HXJ`bg[c3?Rf-uCPiC(!SQ,a2*tCb]2OG$pCb.?(+cgl=UFtjfsCkt;I3O;a:O>N1>PP9
%JMGiB!L0p7@ap#'!%5nr#$mZO*AN:.,t%G@7'lQQ6Z[t>aTNFE0)CBSLIt51boV`g$8(gs?)m"5`1E9-A5ObbA&'![nJ[gl(gV=g
%BK\I=UUSqD1>"JBdYJ^+*g#4olWKgAYn"pT5OFepPfk)*4JPk>64@@l3<eH)E+QJ5(8u=PJp*t!Z'n^D$[;Ai&=Hp!`M.u#e]Q;a
%_VAc6Q73/+_45T]fL;lbq0^7l(k%uLQr4YNc,#N$aUhn7HYei''PZKl01haH4XUkp;=^IK"1#kaSIgoSdNH`a,"cZnS4n+2WuZ9*
%fh:<LG\N7gBoj;pAUtHR73O4)kZuh::m`<t;3dJ<91?)0MhYpHh^*1acYCm[e[6>Ak[>?=S1$%_0q1S$j^D:qTE;HCSNO!Y`@jk#
%-5"^[IJM7&LnD+CB?J+ID^NI9Pjj9[,sKk?`DuQ,YK>Pr<a?k_Kt&[,%^`XGFNYD49r(qKhKc<j)OGP[#to>Eqp_j6Q;loQ9K>Pc
%2@,2AS[,h_T-t_A0asG;pau\2`D,I0/41U:1kE:?7RtD*nOh1`g?Wc@gag3+edcm]N(Y\a4uuuI,t<!5]MPC4hs"POH&f/2.U<?R
%F'a6'oAUnU0EqUF>5:;.lEEL)/tSG!r:336<&0C@2!Y:!jlj%Z^^Q"G'?d+Ob(%$_/EcQj>SGeV7F\KYFH]]^j0O4$-^H6n;8uqR
%L8.S=nE'N`)4-RMmClO,>.iSJqI-[_k6/L8BpPTkd->N.[EC@:aCXeD-.dgJ6F3#]$sH]t_8-\LiDdFm/</QGA*uZ-O7oNiJ,mZB
%O#uY)6:7igd<Z60H4uG6V4%iC9/^8,Psart,t*eC`t?3_':Dm2?^/.cI#PNC<"jZpZ&"8iZ_<Z7<6QMJ0?488N+tmnfh.7+1:_C.
%_&?<q$B#lrMeJ?t3?feAmCF32OY"OM70U7@/JW%MjAfP'rfTB1>%k+#LK7\ddHb7EaZPe2<c]TL2$^n]I9[=hLC/ea"tusu1.sKk
%&uM"?;C[Joc7P6D,h!HU0'D?OkjD!>27D#!="gQFecqB\`;oKR?eQ\RPq=?8dLm>Q>ojjs^M%\.1@$..-JV3-=H]8q^J!#N+F;Wl
%K<7QM+%$JnLSm/im+[@2J=rl%rTrfT^QdCUWoLX'MI1BmRm\15F@&?GR2iau<"X`4XXcSG2QL[CdS2<N,rs,reN4bqcu\uJ-"T.M
%(7dQn<\/$[GEC_o[4rbl:$Y2r-dNGp0%<#)V.rYB=M,h?CZi:!B=pU,n&rZXrZ)`@qK%Z+_d<tuVfj5JcOB)QA2r^j1P)IO^4GZu
%fB_URJ%?0*purUI\Q'[kJ%#6p0AjEkp@?to:\XbPVb_eenbZC+T&A[Ni*oQj!^b[U+A(b<\sO1>J.QKTLkLYi,gLmOQsb<\G_GXP
%ECm=udbKSJ-_?P^DCQP2M@E%(JLnr/(7G=B:es/&a0*sgd8B)D_kHq-=Qa(1aM\W'^JU>T]borQACqJi]<W%YXF>j>$_C9q%4bQ%
%D:+[:GCKB@rGV`.8aj(gQ+0`TWk>B-=jU\&:#=$9X]fp'*!q6oV2*R*K"piMYPfm`_SJQhKn<X6c5g1bV2oE0b)r@mqdM%u?$2Yc
%iY#iO%agq@(+qHVE%?aVa9BdO.$((Q7#$9OLqdKiN&6=m$nJ'f8VIfNi3#e].i]sR&)E(b%D"o#m'nTchV]`l[6`DBR9kFt2pRTn
%,i+a].ai0Gj!K*^Z&6-V^s=E2kO:)V-(;lGRLOea!YB@Y!/0jZ5@cR_-nunaGhVe%:k9?P!&);i!C%.eBmI,Wo_#53DrZVp-d[cd
%Mjh3QWP,!#I_EB`[UroOdW[!IG0.O2ECNqWU6CoHV2-M>b[/WK4$HTE-.Q(+i8P?Qp-Mnj5$98;$H)FV$L/@B$gkW91-]s4Ys=\h
%a7'*s1,$\+1Y,sD^dau.l/@0$4Oe7FBbK`3H6'/2!sf3CNUBEeLFsdAdN[Zp,J.,5U,N.C!u;9OG]Wph`!D6:!RcRS<(<cQZ\,I,
%@o2))7p4a`)"c0!^6G_t@K[gr_Fms[5)LeA=7`6eUV<%SaY`6#Ca&3:.*E.+[arsR!Q$8)F&KWOb0'jToZ51-fdF@P/1.k=WpRd:
%76k::(7Cuhe,mZkm)L4FWY7(i75rD;/Tr<iSI/3H@qNk-%qigJ$&#JH@"njT];8YV5N+[d>Tbag]\'j%?HVSB,bZO36:8UB9i*or
%L?MVT-X'aU2@WhD-),>VmJp$]RLCg9jqZn.*5tpt830!_'5&ZB!GiCpamTGV$:$\IfjH\i$1)h4nQ\#Sf>X6k4-Zl,3MDKQPlr%^
%)U%,8,R5nq#.*&gYSq'ro,\g-E3kL`LRTKg?4P/UV1S2c5gF$Y($7=EX;N`eP_%%nR>!>V#\^=LAdr0JnL"4AN',?opM!P.T@`IR
%D,'_1gh<6$BB$O9>#D#]AbZWtZFCB>`g!Xim\8#-m\>?#*a9WVJ@*g;WGG-L)%n6MV3iVMQQBXu!@fcZ`=s#a5npuSA6nPsTPUn2
%U'5rk3l=WRplh<?NRaj-i_Z.1=Cp()a%Bu5;-*=hcpGWEAh:UJ7Y)p\Wg>W4%Z/UW::X&1J?A;^jU#CSbG^>F,1)7W'e?j['S_.:
%@SSccr(gP8-hX^L)m![W$8<I;<5S_*WScb]?l['#NA,gnh^.]R3DZ@ne_>4CV6+-)JJ2)7(cm5dgN?b^BPEI8PNGDp$$m*Y/>/g^
%;FHSOU3G^q(3SWtjO@J]"=44Adh=9q&Ph>(&_!JWKRe-VOot'&_$EV`U>ud9(.4Y1,77K1A)(k!g"n?,o/r\k$bdE/^d!@iM5lhj
%HNinL7]XpS(O@#.%sLr9>P&I(kepIjbd###Nt4[;32ngd6qPPiM;SBbP0"[-%)H1<>U5*PlcfhSEMR;tMqfe$.a)gtr^&t)>fZri
%=$nhXm!?O[Z8+abb49$R0cEN'.KS*JMUe1pl:(s.EVKM?e!<a%V2]9M.UF4$`l^`]Aa0'p.ltQhKf0.hY:YT3L=cnmo<gG8RNpgE
%qV?HNR1]"Yd2n1t"Yo-"qEsdr#UIO)FH(4j^HeYaOJu`^$889c4<7^Zl(uW1Bq[=#'<I!/L2LT'<$\W+f;k8PdR)LJ$G9Xq%5KVp
%RpsVL__.2,V!)/g9O8=]A9:+$LoNSb&SgSl7j-@UHG99#)&_r7*=+pI7"HB%Kfd[r!%](Il:ef(Xs9$1T`4G*'0oZ'D-4P]BSa2M
%mf??YSg2Cf90_"5MLZP<R9[<AB::#\1jC.4#Z.8=jh4@)d&JfJW$5oSQj_nkJKV$<()[lJUq/)aIG1dr$MNFa,!Tn#MHDP>Ks6J-
%k>HZ>\#@?e(5<HPEE%&L\.nF'kb*CaHAZ?["r?]:0Jd*bZ@sc*<5+!qcV%II'JK]]=:Pa-_h+&CLbLH365'R-alt@D.%f`)QQ`)q
%*2*XOZ';erae1,Z7_Np-bDSo2d1DnJ0s2j4WHgrd7Fd1-%`/#mN'\9GS:gF;'f*X-bQ>Q]L9,=s\C*VjYkS4%!B):^,%kJThP0Y9
%E3Y?j6ssQVU-Xa0E?2EI9HB7*=%&'/K"r420(ZZEbcb@R9QXYTMnt3SL';U^U5:n]$/gfsBn/2n'YV"Y*%i'iM=-h><.m%E+cgdq
%%(613/@$h40<"+Hj]@po5otXD+<81+6jE^Fi1&,u1q?to$IhNM,?d2CXCZ*nK*1GH-j]&Md=cOi`0Xm<8qT*U@\G>=O_j8t)5h@C
%6deBE+dG;$?9&BJDL"p.8jtEDA!O9ob+"<j`RT3?10cq0Hg+[h]dZDe"5=qGiiS;dUquNm9juO*hBT3T;NZg=e<gXI/)=R4*V-Vg
%K)m2&RA_cnWu1ToI$0d$^iR:OM4Ra6WlG/DZ!\7J>LZo1NX:6.&.sIrGNc`tYYtm+QE$%@.p3H/Kfj&"BN,mF[e0iJ?\0>S`e6O,
%f<,]@`X`Wo4pM)EKm.bE=C$9'#RPs@#0L?i@`lILk-Z%KJXSj:4V=NDpaTnHBG%WpSm#>O[2G-S>R>0O3fkr/emr&$W@2p=_AG*5
%Hba!\!I%X6N58c58#9ua>4BC2"1FP*O<U%irX?5C)NFL$o<"Y!>MfW0IDF[I0N).DE&*W?Q::N[CIIKuc'[lHAi*._aB9mfQr68l
%`Z^6E&Q\/C(YuHTd+Z9p*6](pF3VCLr?JVG(9Nrp1,6@S@Y$='+(UZ!+q44fd<CSS5\1?:AcdGqbpc4J,E/NsWNQaHBS8fS))>eH
%"ib>7Qu(2;9Lg`FbgfX_=G"%;M%N[fr.r1F+_E5R6A3jE$_hG3B>e-qibpO#kirr.pDDRO8_->VoEp>$n=nT:#;KD7^*e)!C159Q
%^q1485b:Gu5mFq\3+bc+)3VEg/[Wd^PGFfd\<l\+RWL((A7gK\a9*u7Bj_W]^4WJ`>mDphk`R2)9$btV+klpm%WNPLEO:V..3BgA
%"62H+<RJJ-c]$>h@YGmYr".M'oGaKlRApAD+k(UropQ9FO55SdCZcJ+6uXg\jO11u#RiH>#cU+](^=hODh4N_]OdUD7.MNE2elc+
%R^(KiLt?&6,,8ksqBFJkmCsK7JJJIH\@+g%YK2a']%Vsgd5AVi',?h$XuS0N@#5#.JQpWOL//`ro'd3J>.OgSVfG@J\94ZgerjS\
%&U=8S>B(&2'X@_7L0d?"Ro*F$T0sRDKRTbE$$^/i9G0OQM(PI'+9Du"0Sh*O8P$YV8'Oq**5[H\+tu]c7#]gimU.!o<j`@6RlNn+
%7Gsl]L_1\2BXGY4o*eb*]VXc3Utc&(BO5'h,>gpHhT-?NDha+BBmWMkbY1$R*I6d74l4.FFL1#NM0TppeIbq9GlP.dEKCs(io>IG
%.2>QF8\-]d;QgaR!O4gUn+C5"G80_UY`G!i*<U$&.ZdqKre*tdfWA*)&El19:;Ig-LmVr"#rLMuBbQt&'$[Z_EX;bEYKbG5=M$C*
%MkR#i!GFqi+A%QSV]F8!1DV>>UObW1(Qdl7N8K?1ohcB3(q^g/'nZG;bRr)fg[GB?"c]O-G`VW!YB_"[12Bt)BVe0f:bBkofodp.
%kC`H2#-Oa*AP4%9.N7T+SO8&:-M<OZ#5?'4lqgSW&-o>])iV)H-3>QN%5L1Oi0-$@&jlnJiH8o';oY\[8KChSb>(-+)[QAWiG`X!
%CWIKube_DiRM2)K:t66or?q.>#F[CRj)DN%pkT?O)$XN(0n9ebn3=\o=uZMfQrfYlAUE.%)B.uX!(,e;Q4_/]-=-%50FJX2I/JRm
%"TGOM7tN=V*VG66[q*>5Vd5A5N-%f#),dL8&#g(s"WIq6=qF%g6\`Kl@g*P^%rGE%0tVtK0s_@XWNO-0oSO8FU=&[.FIZ;L[&1hT
%^7MY5cm$q\L*Cbs(aN"VRd+;N!Adr9<C!8,JAn?8rX[9BO@9?RSa!&j$t6uF73PF-%[nAj[Bi@?Z'HpL+!\N<n]HOGJES53K^4UL
%I\PAefAm2!&eQn"=^+9P6pZX+<7E$H9ro9O>R-e5og2*.`$6hspp-9BOb#ofL6kZH$K8Y9F9m+h%`!a=Wi%uqL"=8lmhK*Hn,]SR
%[q,opU3SS?=1YSKiG(GTIO9?63<jjs_ij+<-O2sI;^2tLKW!X,n4me+kX)(9A6<Pro5XpFkCRBkU:=R\Rmm#4LO$3c%P*d*k9G(4
%B1k&[W^"ALi.pkScp;n)brYR%ch^J,)`_RKDHMQ95mjFPP[N]*']qn_-)610&mF![.Man@DDtB`An;!oW]>E\ZrEe$'^Ds,O_b32
%8Ps2_]E&o"KRbO.<O.5<$2L&]$UdaIDo57:8k7=*QUK4.ns=qV*%"+rJXEH25*\a;j/o1sU-n3'-OVi<>I'j!Ai/(0i3nTX_\YHE
%d#3D\nt!!G!(!Ybe4<[Cf(EO&]7m3uZ7%D56R7c%)jUfOH(n<$/]p)hHshj>quG)sfV,,AD#lOcj;M^,VKXfJn%5kl8=j*`J:=7$
%OF4N>ap^(W^?PuoV@+Up"9o-Y:NJ`g$n=d$/Q@g:M7ScKX3h?rBZ^jZ@YtWS"bqaW-Jr8]AB[Wb/;XF4E_pEa71onuFUNS!X9ibe
%OqjQP9LFQ-0h2f4.[F\g&dPerh%;P9rTb>t9=ihBa$U?LAt!.\%!a,2ANJ6Rj,PQE0,P'Z+ZC!1I(\Tp,-_2p;dXZ%f9&YG!+!re
%BL0LB,k_uG;Je_T@Hlu#f/p&GaL@C2Q'YW)K+,*1pO8;,Un<TR1mAYW1k@>')[+/Ikn?,Qfkj&769W1T'5nO[5YZdp8]sB3@0FqS
%n50QSlr$peMqXCVoC5dCd:o.C!qshEJa&YNllP&\2@ib.!q6Ks\ZCN:;YCc_"KuG(RQm+"r'oENqEZt*:-mj?8O)2ael>T_.mdVc
%km$c0@CF*CLDeAbm<V0a;n'$^gPji+$WSOJ&cgEi-3j=&J53eP4W-05TqgTQDP/rP3A=B-(/?il8DQX#K-29s0Wj4XlNJ%i\=a]\
%4;'@hr:SJ\n`Ofi]+C$^*a`B*D]fA?91)uUmsu%ak^BG&/!fp]R(;p%dWFc5C&fYP*I1hK@r<IX<!Xp?HS;rkWi;&D<#S49L9fO1
%XJgBt/MHL6Ujq"_BkbOUf.:nf^d>,d"6t"/N`]sP?S#<r-WWMHIEV;sqk]q!;r7d(IDF[aZB5pe.Y:1MoJ.;`GUt5\Q/H$nTP+LH
%i_XcXDt,KeTh-pI29)Yn6T3F*R[7WJ7j9\I\Bq/k$(T*%/K!\VcB)\%bD;]5T,euL`r_,()T/^OTERsU)=)1O[N`H2-/X+5Wi>A,
%0aPYQ=CL-DHR>lV9(/i8G;L$DS<$=B&eIcs*[!ULYY$(-.Za%4Rs5-S$Y2=b7.C[80LT%]n3G1V&RqX:-kiQDONm(nG.hN\6W.,(
%/M\c;Iq_6hQ98_rb2Uk%l;3=(:k5tcn1`*,E7X-eMC@l?7A20m^%B7#$E_Ep19`16a?9+me25CEOn=JoWA+5>Fp(FiGt@Z-WkTTj
%h9ZRN)SV/i"9:$Wfc-%qQ=,uTmW]u0$LW[>eR%P:QQ.-m#O=g48.,bqPlQP6e-7!o1)gM)1J7l]3a5(Z'f1CW]LsC$(7=38h:L&)
%*TEH!4J'Y[M^?SH`UWaR&UfEMfMQJ$6@]gc.^OhS96P%#(p/i7!'uNVGt;p3=9(:tQ5q$'^NCDiQ+'+G:eYT2#6Bd^NK6D.^b1p/
%P:`XAh%&P$(*+K",B+#I0L#RICE40GTeq6*,6r,k.8r6B"&]i8e);-Ck0<P"*+W!s%mn>T^&T?FXNg>NNWK-s"8(:S00KB>AZ!,m
%PF:[?!<(iMH5LpQ?iUQu#-MC?1tonK7\-dq&bqh'Y=+7jO/JY=(oV(D;DZ3_Aq&(#j^o^5E'kULR'L=*(8BVu/IZtpK1UL"4@AH)
%UaR!69%;m\(0"fo&2Wt2Jf`(5X_L!0#@:"sH6TEUOReZFpZ!-=(W?1XN(pa^;qTLOc"p-/1*^i,JI:ETb`+ste(&lT1.St+ZYiMP
%RTbNWQSq76:;C(i0A2_"e(3JFiC\dpNVY)7J`6bK]4&]RnCgI!?8=g/g2iP+S@pgr?@+G]"+Z+$;ULF<['4oM8liT9bqC8WMFdmg
%![\2Xr7Qr;:q?b>/.d'O-2;1W:LjnJZe^.9,NWSG8oYU/pJrf)8+'BpbLAsRpuK[foclh];";W!#K2H-70_kH%Zs;7!$:^j(er'J
%Z>^`XF!Fs4mMp=/)O]7#.8HB9&2b11e30!JRF[]p0["/j<"5]oM=Eo2!T&FB1r1`3'8,8lBdl5s:0if/V$e_qnGhH0%IY1:b]kYc
%o#T`=_?XPm+sFGJZpY$K[BuX=]k0Y-`lrD*$5d0IDbY$2Id@Dd6&'Xb"r%reAVlJ3(47\L%(I;PGFDRG&2c*k5Rh.t=Q+ucp&uK*
%28pW*4=ld@C_p:O%[r`S//98"1`mR..M6-TJ$C:E7E[<;.&43%XoeaMaG;B<H,s]*o(WB%#&0j8g^]1?83B]V,2$F&%&#UY,H1&G
%(`RD)k\$tnGSfL)r7Feu:<$@Kg1b#tK:h$`Ai&e/Kr<i\7QO&FCk;Z#(,TRF3'S<2'7kZr+qfqPf)-%4gS)-Jc,b#mc6<X:"$oU-
%81]XW#?HbJNWs[&3Y7$Y=P0\KKFd!V&>.E(?Qh"+Lm8\&5sq.('7^52AJE?jQWm0=]:<XDiR=T;5YGs%Zlq+m`NZ`+jX?ZmOSr??
%9oWk!W.><Vgo-DJpLgq@>80UK^bQRj"'"MoQ7NCjJdYa!9*?-"ei;i,a33`;M]Z@o7j+)1%aYuR0qM<c**c-Z]p+$Q#IZ?m0!"jp
%)G2#gN5Lg`h!spp;jXWnP1J-WJ'$DpkmR%u%4X27"Ei?"`LEh8d)_u/$aj/M$]&S!`0er$O/,MtY7k5n;JNY?7b6d3&X5pK4]]Lg
%$GJhL2$[edQFj4+<3`YYZn-hRCO-Lm+(XgBW^@%[='cRNNeD]Q$:G=(+tu@tOZH*f63:gC`l"'^SX%GKLlD7C&dfc<8LkD1JdbQc
%G=L+%BN?2W!G%.SBC[%L;Ce22Kf+V<BpN=1XF(_7cAWo[cIgaIa94)F`*)].l%dof'i:!pgNI$\b78*r5kOPX$l4*=<XsJV"UuoU
%R=7)@J,g6<AJ`u4eoaR[.;6jX:FY%MLYlc_'G`C`K`]P*`k%-Z8fB*/"_,ssMMJ1V:'8g,G1`Ee%\E(r,K&&46Km*9/TeYQimTA<
%:$Fr+g_W^45T>R2H*Jj7b1*^fKA+;lmhISL9_X[7dMdO!H8Yb2:H=Xo//YX*A.KpAgLq?I65lLUYrlNZi4K'A!QG+''P%5hXYn+W
%Zm/BEQq><S$BaqS'b;P2GbJ#fT(SOFdfM:>@C$#65`;)=R.-j=<jbMt)Mt6qXJ!DW2euIKK62062PPmYCDt(B)UNE@j>A0P$,K>g
%N+gW2C=!!_nMs9Ec\ddb=:$0ZIUQq]YcR.PLqpVfOb0O%8CRI6/>9_H:-3b6j7oACWB0+-lA,O0<tL2-S6n)d#n`,lZU0VciFqu"
%Jaii+Q7ag<$Y#Ytl@UIRF`o"t'LlmY#X_Uu(LFh1ZXF<j^.1E*Tl*`n";ol8hS#fM1PCNV&Pi#aaG>W<G'C^nds(*3OJ_cegV#PX
%^s_kun%\kpP@lP`5.pa[DdU9U'3UfRnbUcHhq:^W?h4*Kmr"c1\c(Z+H-#g1g[:t(g\pYliia/sS_g[[%lNZP1pO!7s$BolIE'4\
%&XL%1W%H$/RrSXrMV(Rm'EbZ#AJeu<!t8lU4Nu?]'2?]_+JBXGQ-qMC`#/r:>Yo*g;G*k[$kDD.C,D&o5qb)DQdIQ\5EP<Q<0BS-
%Wc8o$:%n#tod#c%XJ\#eOX#74Z<>,XYtm>#c2&`8"h?'Y$X-^4YGm&2@?F4i!V"KuV\E]ZQ1'GFL:gU$O_B`_BY<,lf>*$VP't$H
%^D;uS(T2P**_[J(C*LB@)cBS]:d`"#C.TjYUUo/QVMFC;&Et_4?aul*"7T,(%Hq2sag7QjW1/dGN'+5)e.&'F)/"=r2\GnM(_:Xo
%aR[,17\'_3i_\PCP76_T7Q3-PL#+[j1askU&5^=LN%U.T>D,"V-SabSeei$bDCB127POC:I1OCqPA;_i@RFg;[%86e?p[/;`jV[S
%NK+Pu"9?@;'uDMqkd$6b-L(^"ap`/3$eKUd$=K2)A3_mO2\\<YU3)?^?`b+ad#9F!P/\]Zc(o"aP-p[(8"5;<*Q[5+c%PdO.b#us
%CLHcZ8JWmg3&,M@q]%Kab]Bc1[DblcHV:boF+R\W,pR"fkZ=Qfp%km?i,o..@MBXo,)l8BVXuECqcR^<@0RiCDZOPgN.H"TY6^gF
%8Q'3)n$d5(jJ&"'BZ1m_k/-sh\-F]C6F<8BSG;0]i^A"N;Yl`O<?2K7!QqWacWZ.(h2^,6_I:[QF)#6$i<NPjh@XI0MCoMY;Ql9s
%=X'mnHrUuJ_aCFY(a<tQZii7no^1;d[$H6!DL=Nd1)7tc6N*TiIJ4Mj']lUHbNjujDc(+l1K<M=/V2CqFsVMlAgj$Paa7#43:_HT
%ddn?_Ed??)p5m[2:*k9)Xfbg4_W19'>#[[D`i423r&jIh;B%@!%u67.V<['gCMl^_OgNu"ojMOUYj4#soY(B'57]bED_9d4&)aD6
%OFL(p%/`b%jaf`\`#ldq,iT@aqftT=5mAW.PLBkPcp\\O#K7?Yc4u^kTPqHnE.WR3%%=!^FMK?Z;RBDm%PM!B@CoW2Wa,s#QW:5q
%k??A#.e>Pq4.q2YP-PZb*tTIc+@C_-6oHgG,e-=+[!5?:B,g*87;HS6b#)?&T^69h&4T:pd0*X/=Qj_/(+6+;c)=\kj-PNl5\giP
%#4,h[//n1mE`jLcP]?M=E+Cf/^u);/[&pYC#%TnKkW;bfid9&s,GipP>1=&[gZitAb1i/TNeL9oUlg]JZO7aU#dL/@KrF;Jbs]1j
%BaH5_gX(.q8\uUUb=Y7"HlE4LRq=E7VcXqd8^rkMJndS!!6X;9-bHBt=<^gQ1..dJ_4u#e%3l#[X:h8Ogh6j%+k-"E8IYcfFGN\X
%^?0(r3ooja/>+RuZUK%+`)iUi.uPp0f")t]4i^Dm&N'(fJ1Au.a,NnjKTG<f7-RdrLXXHA<h_DXe*;,:[/i4:Db%Q;VG_>W3][9t
%M64_/Jhhg!%jqj!/Dsd+q9hZA4jAOB!9qHV>6=Di7<l(.`A/k":_fRF>S83G8:lMYM3KHfD6PC5dJmlfLeQ^+(^?S6oJ!M\>_Y.J
%?)2I06]rJ5Rbcog5QV[k>7jCkU'0oC:hMX75jH;/-%)6:?+PP$WuqIIFa4%8)fa),e>a[f#7CU#$:&J,]Oar6!*TR?'b.NnM3GgR
%C.9V%3o_82">9jTob\+Ta+1T,<*:qiEMLcYZ4d7r2eG-0J;PIbgi6R(?@c2_;-7A>3C:%XFFfj>+YkrP_h#`3,Z8&#M8^hq$WLT`
%FV^Ds^t_FK@-_\oQD4Y%U#NGDg63RWP]g2oq%Lr8XKOC(D5NVOP7a4(^tMj@$@G"4)58b$QBS-4D#qccqCX$,(?"&JB`cJAX@"7e
%`H(Fe^cR:KGMrIO0b%*Fpce8&'>KFX&dpgtYcns:0-m\AG$cq/2tHX29!mWTR6$]+NYY8*b.;8#@RIjM0GtSh:m.jl<109i'k.<"
%;C!)ml+O1k$6$Td13R7FI(*"JV<K2`;k&M<Ba5fH!3lm;%?%)]7@')si^KZEJgr#eLHm?3>lsV'qqE@'*<B74rke@7+E1od37n=q
%*#'"X+eE4Uh&<21m/TI,OGWTfg_ICT1GVah!MifK@1OQO5dW>+7]3U.*q4c&M@4/V3!oi+P`q"QZ/jXc9je(;_6dR"\]E,UqqGhb
%I50iE#+>@"7pa05+<m^XYpt%*jVEir!D7M>W&-'lY]shnAYVJ$^oi#VjCjW.,K13-1Z=]%3ff^X8nJZ[^u-^070C>iLaIK!'4fS8
%/Bq+m]]5Ep$PiKql8XO4@!9AH_mFm?X^VO>]m.e5,uTbnQI.tg=?eFE=^XS>AH6=%)A#,LE(EgAccZBjQ,kh[fCA9#X""urdMH:C
%95idI`c?5K7KnB,*e4Hj;iFd;s1hFfQ%.DC\;sEsJi6jRP73A4m4$`:@ao2_kqfGP`k>c]_A`_76t!iadomNm9U_D<EXU,`Wro1u
%>FZ:m"WG<cbr_eVL0eZ`_;*Xo(-Wj&Q_B[\jDC:P*X"aBC>pYTP&VY/HC1uDDEtY'\/.W:=J-GNi"N?KPA1h'.+k=OlW^HD!fmoI
%Xg)G3W:BLaiCAQsEI[gYNN%l`$W)>sqe'6r9L/bFcPWjLP3YB`kGi.#\RekmS'f0?cFJO=<ZJAH[em4:N#3upJe8F8Z^NjUEJ.W_
%)9*eK)ftH/j[+LhNkSar?Zc'#8cqo+,0?LBAaK!@G_lD5GUBUI*G>O;e.S:\W%>r%@+()_)&>#ciMX"]"%pj#Kqk"IC$G3,!.^B?
%A\_D3>Fd(0i?<G8$/ejG!EpE^V1Cpm%Ne!oU3b!s^:KoFTOJ6[_(?Rdck87b[eIFF6I1KFGXY7;262H8CJD,kGdH+gG)QQ+j/F;:
%A^-C5>$O*s+YXkmHQ7#1H7HI=dO'Tb3\j^5%U-pmUu[A]XRtAbTk*hdJ>?(UVd2Vb5%)f?@HgY04Ab;0P@!M\Z_Kc&$rSWG)UsIS
%B%[9C/<I&j6oZJW7UMskl%0$bOGN0,,9`LY+:e/i^eJ9E@J,&[135,7@Rr,s1,+bsop3fApUmkHoGT#Oi1H4!W_"gV+Y[U'#oJi<
%2N-T2BdTZc<UI_CXlCpd;K3G<RPOPt<f9LAM:TP$.RZgB&#DY#[2p;b7Yf&b>-pg$cVTi=V2;"`7*@WFHQ!h`N)B##kSX1`Zg4*h
%OBMX@q/uP>`8E3t%^K0RNWcb?.N3lbZugJO3q6"?RAiYh0!4?ujC51O!CRhlUD]?c__8]XMTmD$+;5e@X)LCbOH09s(1q0i:@Mi.
%ZtO:hTG>o$@J8&&AUt,mqL@j^+do"Nb^*Nk['DFs?l_Ss";P&U=oE/*^oL+]Dh@[<>"JYnKTif`8=9i,3k^-jFC6H:e&:;pn4AlN
%S0BKL%_Wg9'n`g]%,t.Ha!h$!fec\>Z/D:`Y$f&=K!?\J>)!%ZWi`930O;8'p'\kSSFBm.Mi*l(L.`mA@ZJUu=&gH#@WqV-il;,Z
%<'QK7:Jj0V:`>I)j@Z,bJI>Lo=k_6[=LF[M2q@2X)bL5WZ4P00B$V1$jnrl4'JfrGnkZUE.VgG%<`N_8SeaLDhZpY"ZneRB)rVbN
%E\Zqb[P`1gY,";\[%$@!8alj`cI,asQp-E7-sEk,-!NXcBifV_lrI"hX:bfbY]u>\adphOHuSid1ahc\EVX3p%!n1>"9S6(LYcaf
%QD(-X3F#,iXiVb`VC^f/>+b:o5>`)'QY-"V&m:B[HB[9IAjiO6:89-BO/B+9C9%oV0Xo=S"VQ?a\L7ltH*&>G454No3h,*m_@J#8
%3Eh5Xq@8#6R4D8V$ug5ZBUrG&?Veb/"abV'"I1qf9@`=4E?u2Ma@L&j(<i]s[Hgq?pJhI-@s"^_`:^Es@(A&J?"UaeFp$1qeH:c?
%6\e;J`n:CT-5K.\*3Ut,2Bua*6^\Kh;X)#05Z"8/oW0AEcXOr!iEhYS&10':9#ipr(G,D9<6%l(?o%%/j/hBLcbV*s(rog`A>1qB
%RI$6X$W*r2p9+Z>)M?#B0rQj3kEkbXs,t7W*rE%3K/k54M6Tu+>F88^NR57r!:sDhk%;i'93-d@a$Cg%W*oO\;R8e\=V`m$>dNN,
%p^)d]*&i5dUIV%Vk2Im@KE?Z5PD[F-L6W+4dU"5d=;tH_3,\)XRQ88doH]!<O]4RN1P1g$"fE-Z>"So/`A_G[CeX(='2m3]Cn7'r
%VZIY^(pY,s-I+Bf'X_/sXX$$qR]=SOJFa^?M[3Smh3WXWQX_N1b.NV.*0LSC*0Yml(^,g]kS>$eo3#%ml&jV`,3-oPD4J+t\V5<Y
%;'QdtMMgK<Q1(+uPV=eBB-K*e%No!b6_^tB_?s9nIqdFE88<S7.uVscCN$(`AD1N4Na>f1,/j[aPS>0698prVDLJu258t#)dMD^T
%`/b?#`"l6S46'c;g"G!h,;K[d)G<gR<6(lTCB"ojn3G't.,f/LGN$=e!XWF1$,B6L=S4!6T0Z(kE3tS(11#0rUVP+_8C3;fF.gI=
%c(oYa]!rd=7#dbVVQVk1]`97n1C7\m-^"NLISB$L#ulkgQfn[sB2f=9$eDBHUmc7NkoI>K8[kMYpDg?7CBU'LR5"`%k@e!S?FiJG
%7(CW_"b\Cb]J6i(I?uL71FX2c>ds[IHpod&$Wc!,fGrC!i\MM-\cWB=h(kFl"?!9>O=j#m7G%9-dUd`XK$<<+FPP*YBt#M>755G1
%&O=l`?"!0;ZDI#j1SlP[$E'1t0:<*p=EGA(i1seNP<*\'G.$qTRT$=h:#k/$<Pur10IZX#-jFS<&`bW8I_ki8ISOSQ=%d3n30QsH
%_^Z_6D3WOA`Sk:*dP=^?r0QNs1T*3jPQ=a+9(?BG`e.-Y;:guV#fQgiP)Q.LMM%mb>MjQenQ(ViBL=/-[CIo(AI1j1?tJ$ebU/@-
%!R2Ug<Y?/.Z>tdHGu&(s9I5_d%ha(IkZ$Qbas"KhObYIR(fp'D>V-.W>IhX7D*3#3*Bmf,1Pb"5Me.a,3#j@P@.W1eLZ@EOQ?D&'
%E*sf;\YTaRE(WbBXPkkA@e2*a3/<1:8/our3,&Em7-=s`<l%\@%:sdmoSq-5SsgrHGJ\=qNhE9*n:`+!EO!/$7e`8Vb5d@'Kl^Io
%jNkoaM06)oca^i[1Q-q[:)2(0g??h\_?mB-+P3!t_.hV4>D^4"OWMh^_@&<nE[t!HnrH=0Z6]j%g_pEP6RN3GAKd70#>mGdV&1fA
%&qttQJUAr<-QJ#.$.Ko_E-SG*ZGX3mEd'SR7jeV`%Xh=A1IX:/Kog=/(rA]KYa+QI&C+B=I*`<e34ob7F*Ds"(+`26fYL.uSC/98
%GUj[?+6;@QQiq.d\A?QW,\Z(3K;4JO8d%1234QDUn7?&5#LuiV8jA]Z\M]n\'/_`tYT.hofM[?CD`@lu#;nK]__D2JW55BtR2T>"
%IAc]iaonU7DasTJ%HU^X204Bpl%8Q*j"sZT7CSG4Y:U]:E,B2eUX=_c?HA]Uo\_"YJeu.t#=gRoD&N90,YC>Y_VbYHP8Eq8f^aY.
%M[%Tlpq]P%[?0Ksjp0LDlE#Gnr8:g.5^GKt_F^ch8Cfp9K[YlbS6lT>\]5WS:HLj%$tCXKD>:rh(JO,[c4<ZZ../J0$,Y)a>Q8LF
%_?%;!H+EHtZ[p#,o\eMoNE+.@H>l-],C>rC:RHPoONi.7#A56K3oS'hc>:c0Li2A\8)T0n\E*s>/<k3ijTe9`\]k=C39bmO0RT]%
%a'qJPY!ESYF\:oR2tZ$]E_p=*keRQ+1<\S=_26h[.oTg>_6G89TPgud4)W7DNS+'C!TK4sCs*?Lj[P$"o7K+[_#lRZr8;89g@u+A
%\Dpn$frt>3#TU+8ABPLD3"b,Tc4<YWa[T?3q8"pGG)9l0i1AH/2%>"R:MRjn7Lr6,+`<=kS$C*jFunj'Z-FpH4l4P<K<QJ\]!'S8
%>FEDt&$@M@Sah>J1Z<Q<#@DE#q8)a'"J9=UE.'nG\Af&nIR7ZLf2%qUSut43R\PSl@L-W=i9Xo(2hN0A!C94&>b_NOD^Ru"6P&U*
%B8Z!Hi*Jtuh+A1fN0Q7r>C(8(C'oW<H>m83)M.2Gi&IWT6dZ?+\7[O%od`0bOBp9m%!lm`a=:Wn9Fm/_CP:_;%o*+4Z,dC!)](>N
%jGY0#SgBN6_%2PARWjB+*,0qsit!Y)3#UeWO[5-PS>='`4PB4Ve);Nq;We;:Q<I=<nFb3=5<,2jk5'7ME"Yq1:8l/C:AVN?SDTSR
%*$_*ZL;jbLgr7X_)*^*)).fbWo7K-m/5Y'C%h<%f@p>T$_6KB3&pj&"@n<#gYiQ*[ZYjL2$,Us3:rlBCNhqV8a\38+Kl02FE[M,o
%hG)l35r_7WJ2)8cdAkEu>$8Wb3"@)ugRTJBOl^(mB*@1h6E7;l"Q<I[<R<Z-iLoL9*p??1:3t;cgI`%F!1X8*F:a+,mV08\K@e'N
%eI=T"r-%.7F`MH:VDX^V%F4#s&E1ofgEgWK[PNOPY:L3T(d'b=eXh'&.:=;0>&`hI&`"Q5cTT<q_[2oc=MfPE8oS6/Y-YI/+_uPk
%Q4P&+'W0W.5&a#($5bf;+#pm(]_f\RcEq)!aOL%$=b35noeR[LRKIu:c3MW%#2PoopqY:OgHBEK^ao/V$\Jp/Fp9m#k\T1a@>nB3
%V#sN;Z,eF7Gj9kUc3Aa<Du[GG4#rUV4+B^(:,ZAJ[s.+U;KU;^?!E1I#?u(_baK65)fI"Wg>^:Je?,'HZo3m"G_U)igo8']4TJrN
%(6TS&j)6S^)1S.t_1jYW`LS[\&!m"_&QI]0_UB^2R0jq"#BrQl.WA94_XZkqi3:uZT/.3AX5-f#E,Kg@.[&'[mT<1(g)1P`_`t`-
%[P<=8g9<0%N<u+D2h@Ah1D;`Bl;Uh/E&:Z_a%QW]]i2a>fr;d7i8#LWGC>7?%1tSVQPGjX$CnK&8/CSli-\D[i>X7c(A.YBkZ$Is
%JXo\pP7!i14CWGM<uD-Ii(S;@E)uaaAY:i1'4Z&o9*A!:8<QMf,&eIK9S8^h^r`Uu;PHnhc4D5.;C;Mn+C&$]2%tO^;esgQFWtd&
%cdGA:&:lW_"s;WG^hG[QJEo>UTQ=ZBs-<n[)f2j*V"9,#Y)V/Eo73%tO>SU/*cT+C.M48M,e+(-9!eg63*M]_^?#AsPAt:e%ldb2
%b'#9G\766k%%7V931n?i^j*X$Ot4rVbQH/](_*nj%lgtUE]tEQ3(u]qIriL0NetZ%b<$0C,?6<,bmb+A^^t)a%2s3"W^gtH%6///
%o%Io*^q"J0&2JLG*V-sZS9>rm[#jTo6NcaI92(&qPO]LD(3\&Tj2qf"?pb%AB9L-=dt#oO@1?P@!I&'XF_<8`peK(Nkq(cRhdiG3
%L'=)m8_f#rZ[ajRM,Mr.^tH#\gT[u6]<SV=B*%0W+Osr*JCEfp7ejL!J?qk':p@3TUW5p60j)43pW=su,iE41j<KWd*'LfN>?.Eu
%7oqFQH:n:a6G/WE8cat(GGOTo'];_8+7b^!S?5c0SH><5g_QngJ?oEUl<=U7qF]VQCa+\ROsi_?[M7Z,Fb2>sP67?R[Fg>s!%74]
%PE'5bE%D,[J-H7gl6BA2&oaFp?(SMNi3]"HhZqh'XaU`!cqP!hdW@85@)E"?mRM2-+Z[?srfOd1E.C;(/Eq'7!2iXjd<?@F-F;r3
%\MFW'L8N/4"7A4db2<;%@U&/]Pm8;R(1T6DE!H0L#?9je#:cD5jr5L`]JY>lK*WH(VNZ?o"A\D5=rN&t@F:K(kX=@=)=&S,4Q,FS
%(7F]&4Q+_MXQo18i#9pJiY`7dR[&l5o7/>J\?^X+D*W2`b5r/VB19XE!GB7d;i<Rci(OdRD.3Mn1<.QV3X[n\kd"c/Xt8K:V(*W\
%B)uYH8p:f<=hk?b<;&uM[Vsa0]0QPEE"[0L%1P;a:ur'd*cT\[&o?l-i**6S]5)![GL`Vo3YOK:r^auZRD<6F-njV8$(Oj9ZLDr_
%E+!Ckhd:!t7uO\LD4&,dbe11*"HH")p@0pP3)MjP#BqM6AfB+!lV-5a..*!''0)dcpLieci##pDljb@]7U/IgZXEojLa[ODB*-+5
%EGN>*"O9-;*mts+QgEFh=!DUZ06qBF0poa657BO,L'aCGHj$6,'t@a>C<uN'=Y3(uY%9s(:>7_IYYp$67`@`$WPFq[`SG2d<8\+&
%=j8U$$"j06@;i*[R9N`$ZF+M\BFmt;!r'u2;R]W`m#,9!:!saog08cR$J[]FK""_;kd8JbkZ$KE\SEeYN!^P<>B-@=<8d++^9CLd
%F7AE1CoG,]_J?]Ih4Og>U:8:i6j4'$;-C?NDGYnjL+=i:Q^,$9)>Eo\$Chi=/ALUPi(,lZbq;$l3:"ZXmP>S;WmI!Q^pq0_?H/P9
%3Z0p6+tMjR9EpO/V(L<0^`hoFgqM_KLS3t[F=qNL!>a1q^j2ofbZs'+s,FS*\A6LW`cSk6JSU&uXAn+K6KaX?K*iSMk,?O(i"u^T
%_kU.]1G`D6]T!7<kKm5]0S(IL4d-f!1P,.k-*K_p#\N:BfFWVoUX\l!7,S@-.aDp*i8D`-1"]<RP66I0%%R`q!:\XQB2F.HJ/'Er
%<8dC!4(l'uMjnQJQOOb@\sok)>i:S20WD*oJYRo6Kj-0KXqcB"*A,GZB88UNZ[nm&omIc;E(5Ve(j7fVIQi^Oc3Jg=pO="Gn\KV2
%9UV^F\`!X7be%A%MXc75LN4J"irb'#%&Fo*I=<V2L5#7j#L:O[h0IE3^mS.s,*!*S3$r_2l#btgB0&SkJf(3afJ&^,AA\YteYj?J
%B*"s^jkojKmsaN!n'ljMI,M)&!iWlq"/dRSc[5/46hJK63r$K^@)L^:%3IS+S$(l2")"!d-#fCch"AUL/KZs@JL1ddE(hKCpO`qq
%e"/tu><6_.W@@P3%\,+EIbrG&o+<N*k]Ga-"teFm#Hg/tTL[eaJ^ZtSQ2R?XB,JBq^X@\N2&@-g><6`unKccSCuE59R*=:;^ju\h
%)PA$-E&<cpA$CO%Y?(5!c3E^HYr'A81E/<BX5h4L`Wf1ScSLVjAcp*.3V)EX2K6^]m7C#bCuBOKAW#<JJHNE_OVL:(#*'I^H>L[<
%&VgT5f&-U"`$'nm$_0d;90K$O7kg_"Znd1W09pY_SI)s^:2!iUE+"5W`0CQI%83WM%6-&W84LF`"WZe8J_36icDpp0<t=_3H[T]Z
%^mj_^0c7]WM5Y:+@/tMQCWLs9!(Vs-M(sNBmN,-'ka;GkA9Q0il3-%LE_u25,lfS4;8;[OUN28&:oF>*cihq8LA`(:27[[cr>TnW
%Uakcmhr$Qu4mSF2)tm1gc'8&d'2e+[1[mRZ7GAH)_e3=Wg2HD!c.!bDrC3(fMqg4dh^'ZgnK@d"=2iGt[ZZ*GR?TP!oG]AS;;OmZ
%fn+b1QLl-EbPL]oq@-6,9pFPnrI@VQAc1uXP(W6C[<N04PF_.]DIYdRqo6KA:Sj8'=5.hEOF8@'XOT,,D_bLn[PE9kXVmKD9]$!;
%PT"XUqIVN^7?$K#%D[Judl1HDLhrKn)bCe!9(WRj0=Z2FoA,qrFbAfq29R;aQ/rt\c-#H8PC-kONch2n7\g)'+._=/)t,hTi>[77
%B"#V8pEgI^VJiC,7Vp2%Zsi^KY*e.8)<BYA]Ylup[l:ZhAfBK!m>\n1g$_#1\)Oi,m[^>jdEIXgeD=j^qqe">Ar[i=FuJ.4BP((K
%OF*b!Gq8Vj-k5i9XA[c6H_X8D8UfdpL-gUm\RG3OQNcq\)mM>s(FXOl]\^oAe^tF[1HZ\ZoS=(_E'+0D*Q6gMrMc3obh`L&Oa/aM
%]nuWQi`B`1UAQE5h(j=%=Ku6]lTso4HlTe">AA)X?i5^Gm>ZfpI*JlnHXinL'>:79`ed6U*R*AVBVb!dRD%!AD*+]0dDDQui:a&.
%d`BQdF*eQh7Nt+\p4d_+8H%K?L'>GUqNfm*7T.K>jn8m8^AnQ[gtl_lb*rjL[mJG*Xk_dOmsXe[gRHuQfbi9fP_r%C**HeGVDXTs
%:jlpLVJ-go9('s-=F=8n]kN)'&n+/q%3SpAf/gH$F2UE=/%N-ac%6S4%CnEc%X]fXEOV\=&EusX9fE%i(L(ouV]L4iah8E/%4eos
%Ss%Bt]pY%:E8dJ`AjV@F(DsP=U']WPDeA]T+GIf7S_4sQbKSYUm*1)2[_K`&m7eFfG&QR;VD"qX+u?\e5*c32i:_?49>X<g%6o]J
%nWqmu+>?g,;1#'hA_;XhRt6VHSM>II08HT&BD.(.cTI^,ZT#"8P&)&C2t.!V%!H6$a%a$J4Ce(sR6R%2cKrg"1R`_2C2Z(m8j2%1
%^#<?34WDo-9#kA*oddF/?l\"YUJlLYW0p\$DZZQ<)E-+%/;XB_2Q4<G&h5EA;1%?JM#VCm]n,f37QdW_d09/p2U(#k-.,O:p?$(I
%m3lF89abY[[`%#fS^\58`8611^$Q*3&pk:gB1dV#p-srmK:UX6OM,OTZm#,iY/fgY:@*t+"J%<(]c!4/"RBZ/Dq:Vli)XH.N@2ZU
%14.Kt:Sc^8RD$_WP5#Gqp-tu>K;NZcHSZqfK^9/W2rhnK+WB.m</.W,[bT_=M;5/L\@njMI<I-M2d-JRDQ(7:E6MTk3k%'15*q$j
%m`fQfkJA+I2c2`W*0&aCo+_?baM#uq'V67aDbaCnP#h7u7^TIBHf+MahZ[tHE$ZK'T[kN-\@n;sQtVEt[l;M&8C#Sm]h,rMR/OU:
%HY_VLBIgPN*SB@PC2^VY\o#uPg)C54)+-Hm[t^i0>,f4"*ER-)1K/YLQ=+laVtO^t5>tWF\+e]3rUcZW?`4[A8B8;.aJsfk#FU[h
%q\LSIPn%/0)\*a3.u5F&&;Zi!,7#i973(=/E:6V.bI%a_d]c8:bCdX!(g+hLNJ;QiG[W0*7`k4/(noT-M+!Y;(1]aU5j/hXpOHYk
%8ErT!o8u:_aQho<4B=l!5Z5\!iQuD5+g`f2kI>$jFku<bKgE;4HdoW'qCpUqNP3F+6gqqY<`st$aAi5[TV;n72RT2Hn[)Z$].f>m
%(>C]32c_Hh@:BjUJr$dHSpJH@,E`h3m42.YM^#'hDeQC]OK]dqHc!;?dlon*G62GZi2g<6TXn7i$"NMX85=ejoG,E\+UiS!C.34t
%:*`adldVJk@OkGkZRtNGd#LL)nqFsD`HYDP,(V;0^+<Gc*5%O*6"r6-Gh/(*FO;LjDh\JofMC"WC$+!A7JBD>EcD1Y,LXU6Mu:D>
%2^inOH)!P'FgE]^W>&@$n4B'Ir"N,,$dqr#P5Scf7?&+MFu8N](]`1jC_<pA9AqK5BSkQ)%^=$Kd83eMK)p-l1L</3i.:G2e5IVC
%RU-?EML\^-$C0Qf.b<Hm.IDB2Zrs:B7m^?(pICtu!'sK_XYk9#717=bmIpaR1+HF`a0J<l>\Df+70I#*h\.PYgU@RP3FKqYXW=H2
%!CCV9`D:_%Lju0$!jjui[WGnS%=#4A^(cr4jOC^fib0,TV.$1GO*(KQ_O30<0Kmd]5jGMN-.s7B]/8g0%j9"tP`o4HS^N<jpi1B2
%#Fj9"SM1\[U;`SG&G8;O9IL4.D5''A/M't!D;s*!"]$\-$IAkC)\$?:%k(g&iM_:&CK+MgV>u?F5XlC\irUtO$@C?IMb4mM)uWls
%qM&5pnHl:fUY!dq`Lpc<_urQS.+ha,PtXr9`1_4O,N+V7i!D[[Z%R&BEK#ognf=1,O<6kpJbg?$?2RNt.'NdYisO0EjUT^6S*Ar9
%DUZf^9$6mgQI'kO<^J1Ie6D^36jq)[%GXC86jp)VRlNF;6F`c?=.ls_<?Q#a;@,nGdE(F"Wg#gAMcHdL859lg6*SWVU^s;`U)Sc)
%7Lr5ofIgHo_2L`PO-hmo<Ru-f1.Fg*5(9W4_\EH<j#+gR9tW`'UgnV3IKY<K\d'''i]>/K\[adu+;gW]PVf/n+:hY7AWdq<+=T]g
%#Y#1J3Hd.i&fq#f6%5-g\I*-W5sLe_i"J9T8bQh+)Bi>+LCGcBoaG@>?cj)F78l.MVR"Jfdd2!-]a:dM_kSCJgrIVt7IL>&H?6*Z
%.SNI=I$:StBtom'@\=sdmfnB"kmc^F]G')U%SoO]a!eV%>;9ZU#pBj1KZ%;n#$+$65%A9jJ3rK4,n6<"g=XW4,"V'PoZ"[%c(PW1
%#o!%<jPU$g`j:iIQND@[,6tcK81I!2JmB9CW-5(2iPK1EA#&2gb#@>0Grar=5p.EsD])-M3/8A=gtZrNI_&-5B7"n*>79T?EH>$.
%RWo:i,@VV<A_8Kr@[V'mYq"'=jt8UN6;)nsAFC^"!A0utK:@T1(QQ`]kr"](e@+9QXSRU/&phQEXE>bL<)6P0^2VU[PElO9VBXLC
%(;<5\gTWe#Pc&Sj_]g24k7IKtgA^DO.DSbR4[k>\Of4aoC\G1K+KCn2$";=TOGC+2o%*M\#^10V;M6A.18=jGU`CP-fn/U\$30c'
%q/mK%6t^&sY_O^%_*B[Uq_CKpK.o(]YfXNo,+79Y6??I\dYB_9PCr?_krfk[#Y8LC65mAc7^m%5lU!<,5`rru>R<]2$ZU<V6Er(f
%BcR<i30CD"^G(PAQX\Adkok7O2`,Sk>*re.OThPX2(\4K4H0L4Yd1c#+Ln4:aa=*['_9Go>d/#LdPX=t:d9iS,d_*,NHie33ghfp
%MVCD5DKEHJU.%`(0(<Aa7aRo22/gPWO,%_@EJ$fcSG:=F6]9$,hk:^nFeMc:<G<^rboq-HcF3[N^$Zo#]lnNS3Gald7Vj)L0K#'o
%h!':&@I-]]@%sn`l/'QO'>6AdOf".UNcX;Mn]DVZQFYJ89Hb+]RjDZ)=4C:;Fb*.RI\6ilm%Mt\=;7$NcleFK/#m<MHZg:<R%*)%
%OjRCNSOkn1AJ_;VW_"B79Oo"O:Pq%+:upCo!Nls^GQL]#Uco;bWq9ndj^ZVJO+M2V,]9TM]50E#8N2^/.Ct7HN,>os\ts=&L)b0?
%CHFaoA/7/u%_u2ag>Q1pf/ZP<_a\.s"5nstZ+4T+cl;,MmQ?AE^jJQ$=Q@R@c#Q4qd[:76Ok`bJL`E">>/Fn<qP4V.%WAdm,tf]G
%:9hcR$\P^#J]#8lIbjDnc(*A4BSKK"bspV<$#!bE)HsWUJ;JR&TJSJh="s%c%Lo;Y#>41;3Hl9kH\"<H*^1T!VNbI1A_]:SXT6(i
%*D,[."7LhS(9[T'rN#>fBq8qD3/n6Yk[LV6_&D",8gjp^-3A4[WZ,%'VPFcsY3b,DA.oBJ-7cNE(C%1E;8CNg/M)WC9Oemp4IO1m
%'d.[nU"o`e(0"dBX]BbrT"s=6Y-#4q(/4fdj/^\FJtYke_)pQMl+?S)Lt;mem:5@G!oqBg4,Tik0=h1G13&neACBc=l<Ma0'IA"K
%2Pq)&+6/ft&sZ3<MB*okj%D9t@7_s<V#.q[*=SS)>X=?1?3RaI`,@?"fHVE^*ODoQ'lsIa'<DRBC`L#ZlO`97(WCDoL^^c:kRFs$
%LXekrkA`Rq3*Ae%NAU@7/Xq!E@Hf*bHGu@-(Dubs;mESWK9/?:!OOr22maI:'OiJA?(J@6+3#iF@e?'b5X^4D<Yj`Wa<nNto>.G5
%$kSD(rQsCt-6M,F/6?Wt[Y].h1eX9Aqc3+V,qZ\MMs`bKJjpMh)kr.E3#1A!@P1cM#8Tkm-4DRQ#$fUg=,P:rRNK0,=<L;"R6j^c
%mJghfh4!@`Y&*'@7Hcu.b='Db-<5>p)EeCkmGi8db9tt!E_K.T+:o5A_M&)DOu:#RbI.&hX@maN"U\(M6T+Gee7Ni'hK*&U;KKm2
%*<Z[_\1O[eK(IgK3\ZB#RQToOY_YhsLK5R&:Xl!b=mjWE>QrFUH:`Wke2kIl6=;MJjA\W#$PN5@+CL@,4m\"`9tk]da\Xi$_%$?o
%ppa/-;[4,9*Er-Mac0Ok@0m6H<U/\9KN@S#Pn2[VZjF)nl8`fJ-3+TEbCUB5N_:O?6"*HRl=C%?<U!IcV?D_V,W4h*?-/2JX[AU7
%n>Wie9]q%-FF`b/+ump6=*RZ-j.T?B(Mo3LAB.=&L4RWC5#HoJ#'>qs,hSE^7-H:V:j.+fD*c1bFl]_1^d=5U/mmL2Ye=B#$:8+E
%8dMNL#l5sqlue7Mc2oC>Sia^XhUC]u?[#I>)mf_cFZ9SFCZq]aWIfSYap+p_+N8]<YJdIMI>%#.pb?W*ja$ELi3J%Aa,&K=@7K^n
%IV']?_>oB/k8goQY8Rh$mGL*>H@ZT!Y>Q[H$mf=0miRLiQ-`TTXr$Sk7<',Xd&%+TH.G/ilOdPF4RJ;p6,.-u,fn\DE@eTgs$K&t
%*[IgA-?4CM?*<BTnk3M:[@EQrLEL)FQcNu9AgQP?DR<1J.`8"k0EMg^`h3Y[EIkX6PmpDJ`TgnCEp-Q0$qT?IF>6U5o:>%6F2bVR
%l^/F]+GYg]!=^Aj'Sq)[5*-=[9<?h%Y13D:9U9,R2+Ll$&i/#?[NE(:IL6lO=lE*Jlgo4>*,7r%nHrXi/r&.2^G>1^a(to*[:W,Y
%<$p9b#_MY+Jg7_'X^asEr&sO&PH6eLWUcnN'1n">qb)pY*q^l<OFj0_I>t'8R"YhR@%<GbCFCmc2Q:NsDc*b(l,H3Uli_;'_3=4g
%nPH<;@+FW%H%kYj,->erP3t)-.pb>C*N<T>67OdBMPkus+YT`.6'Jc<,o424;4B&*8MHSi6$E[p."m^+nBU<%c`g_DB`[!.Q#C2D
%dQ<ScUk/E=/G6NWI43'l!Hnct]3*/$^'!q"kpV:^`ih_.e?.^AMFp2"goSs0,TG3G_1cgNi>W>,7i!?g"&/1aT,b^IF:c=`09SRH
%UW67I.IK%TS*&2$IhadU'WfA7iM@)Xfn+Um`aPbY`g2T7*IsFYZo.(sh(L6<WC)9n-"99RR,:Nn8L%Ad1@.QVV/n_5r?ijQ)r\>9
%[QC?U]Vbq8j&t&/iW:Bk>&G>^T?KIi!h0g9"Ee04p\<?k0g/]a;'PB.7C#`ckcr+/SJ<LQ<.ZRHQH^/+<J>H5QkLbA%Ih85@tV6E
%+)M%;=/6>%r`%m5!V[G27%@1n1bXVq/"SS23`qfg5UVS2@J5@R,#F't+H6CL(6K"F3E`,IMQ@&%,ZJbp@?S;>h#_6r]@CQq/dt@L
%Yfah!g(Flj@]NAC=9>!DaA),QMChimqZ9V*PMe*X>f&jR!jedqGT&o\@qH[/>4U-*\J2/R<:`<I;<sk49:uMTpSO)BU<lp"3+UGo
%SIe)#1PGqE'a[[4BB=$Q9/nAi-=!7HO^`do#uZT961ua+L>XIIL*.OYN"?*!+':k>]kh6%(GZS\D\CZl%9?BJQl5(L?-,LE<\(.4
%'8E8i;YGnL:gjc;ekEXYYQQ>:EQM8O7W<\&ZmVf$F\^p[kX1f38&Cf@M`h()YgX.<gajM6kX,9ji&YU*NA,?1Lhe]'me*KbYH*GQ
%BnNWQn[S2/?8KI0`2#7j.XalKmKDR0)H#+CKFV4Xn;6C]E*_"CQpMmGZ0FAi9Xhl2(7:jg-QV!r[_Uk#8o96&Kg`C@9nZ0b#)t;l
%*tT?;,h3$FO#=Ta@KHUNn=Y3X8)q8o\44F,n1rue#r-440461G!c#(r*M+%0$+cdC&o'V<`<BN7';dQ0ncr&-"L4=;^eKRFgpYbR
%8F6&9#91Jc+<aJ^O#j?U7ns%7@?QLo_YNH[k)VjU#Rei&R>SRF3^BY+8Dq(YN46k[#FH=fHXu/RK>u/>aXCHh#MeJ@G]+QLfKg-C
%O%t^dMkY-R`!<1Ba_ILPB8&PZ,gaY2lM@.<G)7O!e.RR2"@8d'/>&#2,-lc[g9rKd;8]ape[RB]$p*6lM30:4a\Q1Vo%<p\PT\7S
%R^(Gmq]F=9`Gl4ji>?1^^j),)L2nJg!rso<O=7p$#b%^pI4,4G)D:VhC[!XnN2K7\6s^7PQq]/2Rm"i@!WqR.?6k:_p9\(g2@?]8
%,JH]I$qNF?$k3GuXTZ448Z3QGbp,GAC'T>4]JkpZ*#M<pd0_+87;6q^oE)qEZ&t)mU&.EuaVAIh-VY#K#tP)aKgmeXd<hp&:;RmX
%S[=[;SZNtZJY9g\P=fGuA4:-SVH#f#l`%?lGoL*`=jr-Pfuf9Y5h*T$H01>>BhTX-B;]QmVS]?#Y6SY>DQ@Rmb(InoEjQ8_Gn1sl
%\dgH/K4%_NfZ,JT<`Z2r!0>>AeP,Mo9ki[iApt9_$RmJ+l>5PhoZS^tKta#k6-qTE=pGWp`+;*u/nUPp_b:o7O[O30]JAg$"(_If
%14KX*cQgN_"eg,(-d37,3[?!\L[P<)h*o#XEGKlo<gF+A1o9]eZ`j\VAmJ7[TWC+R@Pjfc_rN,e0j0nP@N7VT$_gMh![r$+iF@rL
%DV9LR9ojGVN]G].jT[2A,I-SNQ*^RR=gUBO;sc4SW!dGVH<mD\1PEX_+,W%h)I)J`%Acoc6(XIbH%I<W5%I,(X'.P-bc>UnYuP2L
%d/i15ZB5PY.!B$TbHo^783X9We4InF.NleZ#DqE_:b*e_Ini6H^`=&g?^b=*":__:JhEg@>sf(0PM?uHJBY?]O?gIu_@lQ%dnu3*
%'S-#d_j!/@D4q.DX?a&M2()cO,[>RfUP/@I&tXk43I91t&(pL7-,G6-.bkUKLp3F\'759IZBF8"HgCgWSj^e93c6_[embqaK>;aW
%&X"8?a[pLL&/>2:AsS^-(l?J"_4B\4LDnF,62!Q$\NM*O>&cgV+,;JYc:Qg9_nJNGXe]ls\f_`?-0PBS,YN*,6P;7e8'3Fo'-g^f
%H)]<JPU%*igbq-cTQCkCJr(_G<9M*4#WE9ibVt2jO^Pp:4J\im"Tj^-A#]n_2&a76=Bc&?e=sMW3>.n%e>,Q]6a/m^L$,;9Z=UI>
%PU%<rj8t"M;#>+Jm7AEG#&:3@MG?RLU)iJ*i&_.KE`C"UFIo<+d?*jl4"7$;FaDCa^j&B2%a]MV6G38=BqgKB_a/Z'r4D_o5`h#r
%`L.lRc>0ZZU`:[+:k71A49GhOR&[5[YUq.0Cp6O+/nlNpj.cn+Oe=j/N[Y[@!19IP9'<NI+@/)`4MeCfo)Ma=1)skP+P4I,_,4t2
%]0Oc@(j%H0U8AsHS)MK_lGSlh_ZMmp8P[K/>,2SRVoXB6Y&sM*EBQi";'V<iqU82S73)&<^;(HD)XE%-NS]*%8i'rP,N";0[5Nnq
%kiIBZ2P$X>O>B6^#U02+1ta)A'G;V9U0B0Hri,\`:uTY5"'e0;NfZt/og%b@?mpb9m<2;`N^bi';BjtSf.b[<)G.;%@qjfJ6u#ZT
%?iA1OK:$V6To`,;_Bg4i<_dQgQY]N!N"F&bcQS!-0-HY(,nL/jeKC\-L?8jQri5&k>o]G]_Y`@,ZC?In-i]rh_pSMj?LSg,<U+fK
%@B*A,n;<C&_D#7q&+_qoR)LElK!$,!@uV[n6UKB<i]j<;+pY#(3?t(ch1C]f"_a7Cg>I72TMGlRobgnO8Vu1?;i\*iaHU6cMjC:F
%<q=&d%pZ;;2+D$!Q,FE?0#t2[PLQKAl#\dg,<c,TmIbdETRgi(D[Qn.iE!I=WDb$1&rp70D88&X<ZP[hW^nmU^)Z'A,;V9":_E?r
%WALbdXp*T-#jBW88EUQ#D*8S\UUpP(d->:rc^_]mAkhEEK7pHWNXipRLr()[3M<21/MMs)+^)hChh5G@Dk(MuTn[hZs!UW'aXHjT
%0H.lL-E][9j("r\_rEHW.Zt2?>WIrPWC=u2fE>G;N$jin`P<a)B!=]I=UliPLebUd/7T-FY6(m90C*%S!m.Q`1,26-V`2+XP3-8[
%:')&V4jrR&gIWO<8s%d3Y&$5@`%O@p^hXpW/D3UHNj#EkJJlC4dRP0)^]6q%.$6_%*&s7q9TO+f]NujS%!8V%/F]P]6#<:2Jq^/m
%mDr9NR::]QQiROZFa!`9!<SEu_H+<ZO@ZApp+@)7<44ZWOa8g@+a,)e_aNMo8`;-E_&42N`&^SDp&h\U5]*/+ePc**^+'Xs.9HmY
%J_V$\#e'_(l'Wq`">n"V7dL<+B3FR=&B:uh-`,<73mBh-0nJ>#E?IcN0-Hp)?*`HV,/>Vo8tPoFBAl7r*Yn>h(I_3/`VtO_a0Krd
%U]&lNRN9Npb4gK9PMuZgNlJEb50%5jC,-\=BIdQ<1h?]b#>#_F[72UQf1lJm25WqPIM#,P'XX%qF6XCJbo-*/kY=+W,UN_.(09E`
%),9?MGR>!fQgkKIIa'I"4EA_1ouFY[&>;^ue.N<s"kTQKr5a&UH=V]P"_UEQS.0m>`Z;;hJ-/'Anf;SS+?'AiAD&-O%%NH2.p'E-
%bR=s96!XAW)8+hTq]F>b7<a'"Fa@R^-Bf"a5kB@1@QBAP(53q^MX)%CcHO-/Q4t!W;(pY=cV&NSSuA4MF0aV@OU7ml+I<pc#bs*@
%nC@Ug&XORuY99jQ!YrWn4Nip2$+q:R(;sf0><C=Eq&,oeJJ?>L>`jn`Jb9$9G.lbSPn\l1LC<QK.kmBeQVm<!L9#n$h5cT)4X$jS
%iEhIjJjgh.Saccp&=rC)0Ij6?%!)=YhiU>uV2><eiV*O][J+"\[n@>G/'rpCLslle>$9F@Ogl2cXc8%fKCRqt8]?kr&P4.h#;*E-
%,W&rul/Ko1EQ]!#]TLlYfeb%636`jF(5Na(\>:tGXSjICXB$I+;N"XEN>V^=:^dRF!#:3_Sr,7ZQsc+<6C;><8EgCXnMFJ$Lgj$a
%Q-oq5^-G4%(*s9Z1;j!N&7S.YMGbUH!D`#O&31DoRj,+pd7IA:8:$/36]r^?OQmWBZ9&6W-"AbWXJN:X-:E=j][BgdH&2D+/6+h$
%Pk%l[*JMa0^qa%m@p)Mp#-&eGAH5,8EU?+K^ktU+MK"A.s%q?D."#TacWXNRSUd2q+IB2SS!.u^`#@R8,04nBHO99a:?8=-=U`6<
%%?1u:R9&/jLfj:d#PgFL9)0d5i*%cfVulIL9\9o@K/"#$1eHgm=V<72'?!3u!DfU"7QHofFB6&9GeGPJ?ERaeTR7A+:fnsR,)dei
%&^]$lE`@Y8K&tRh"I\k]9WjHgN/5!YSpXkHA<Fu3BC(WaO/uZr*6ik;"Fa$@eQR+UauemU&8@M.Z=J#&Up?^"P?S#f"S)inU8DBK
%,gEd+KIXk:Th^sD@]X,#M%Z(i%5.1J)%<@W0EC;HH$WT66LO$<^gW<p*aq9bXhb[HrG2Xg>i8&G5i?t:a88?s^ragWnehF<<*5&l
%($WL`f,DNcOn;mZ\6!uA&/a]fno,-P>MGla'+u)[_^S"K%`8%<$;D+$Vm3=lCBa](i!45>Zi\k)Cj\m_QQ`;]@&7<2&g8e+0nn*/
%C5!FPM@<bk!&PE#,R@HQD_07t')^/j(D"Z,9-?s?2BZZ`[Q_R,aN>^#-@Q4?BPQLZ^4;PNEG#k\Ne4o7<,kPA2e("P!$OfQSjBeK
%?uVTm/jV3`."*VUq>:HDF,?6A\e[orFb=3i%>?8Z"ODW,,&$C9H%ci."OjSMQPW16Lmd;LM'daX'Gs,%ASD9_JaUF>nk5EV"C-jV
%&EF^f_<jWo85_,4UI]Il3U`[XL/Dc?0*q(MWZWS"6CJAm.e4!K,jf+G>S0lb1'#e6.hI)Regf6hX"0%+h41!q!&tf+nrDG`dRV??
%d\Obbh`R&gJ?D=+%i>U(Z1V!Q;hp@c(lkb0J79,o`^h[6l"2.b?\ndk`gH%qn^;V,HVcbAWOMs[2DJ!XV2&LsAAD1c`Gc5+NABH"
%M$gft@n:Qn0X.Yo,UV:=-\`5_E8$BV"&Hn0`J`"KY!,!t5io%<1'G[r@DUNhl5gEr<fi(^0UmC`3^oGE8/SXQYUPr6X46=P.o0MK
%e3,sZP/*h)^jsT/AEZ";!.`%WF@\5H@g-[SRKp#@8F6_K#'V4VJa",m0h*kd<bP7U"']jC#YuOV<]<?4"jhE3(aa!oW899N^iosu
%6-u5./TbbBRgE7!QS1)@G\KRV5:oZf[cjtm8/a.[Mm@\\F[BIaUrBSVE*FN9M3>$5gd[2O);$6K$@h=t8;N<)<$!:p0GBDT5:ocW
%#[Pf?r>cfL!+<_)$0>EW0c%!?MA_n6/tNO9Q@Zo5Ght-s;lAg`4Y%`0M'ZA_d9\;Q8?M%T^hKq)W0d.+L`,QPIVK&8PhB6eA*J%X
%!,YfC*3m8Hhh?JLp(;30K([-b1[0D9KQA?G_4QDj/q=+qfLFF?%W^.@qm&lA-4)glRa+QjbI3PPA1Z%p,?Q!"9<8A@oFbrXP$i,.
%,RGd!Jt,=J81,Q)^]C=@s/D--'oI"+(RD!STF6<_pl@2KP&M+e>%_fn&-E/]*@b6/+[dXK.,kojHr@c(!je@!-UI5r_n^YWj=7%_
%7ms^Zb(V9qg0,1X$Aq.ZW!<?,eXBO\%NqK\5uL.]R^aZ&&t/SpPaF<`s&="5+Ip0orC0Zjk\+PRe)7".e"@:4-9#U'!Q.2E7E[gF
%:4QDmlqV^;eK+kWU/m)>ShHk&]Au7V9R&Hp-[#V;L4o'_RX@d8BhOT-<hX=X2Y]*o)`T)km6^0XHED1A`.BLG^p=A=^DAjtfY\%T
%QGcEKL)hm0-DIq8;qi\t&CSg\/OIc30hm'1h'V&T>5&3Uk)O`U\ib@kkn/Rj"8_FS=iN3*">k`["XaB!>C]H-$+eYXS<d5t>F-3U
%XFmYa_?3ZMO$RB`V*7.N&!!X?i9=#P)]GBd4I0)m+DqD'@rQ5k,S,e,CiM^EHF-k`.?Ml9ISmA%G)VCJoo@o/R-mg[*bHQ=85>W]
%[`1bHs-Y6gYW.dbB_'#%BGhD[m0*]:K#Q^<%s;bt`D@Dm[G_K`$a^&3b+gYm&2L`C=WiQ]Lt2iYF8JH%M<OZ<MX:jIasd[\Xi2H<
%85,g&LC-I.MBJ>F<Dof+XVj<7,YjAs#d#m^>i(o_Kkgn2Z&1IJQU)2Z7n0ffOGQ(Q<>#Nsbp)QY;NVj&nhQSTLmpB#>RCPYCPRRM
%[<\kjBPcp`P9_[=91NJ?Jq7X^&l]GNg9SLA[Rq&RB;4JN48CRu.ZcKGe9ZM+aFeS0+_nn'Y*ol];b58MO:jq""GS'P;ks>[T8F],
%`&XU&RnsF&Ul]%RFFf+V-,V9i%-h`L;BqnC_ju#ckm(@Ylt,c\%@1jb(o=5c)VNM?&L8")-XjP9,SGbSCBpOG*pWg),gm"`?!J"a
%Ds%g+&#M5;&J3^\m<G-i&tZ@"\P];j#>GFrV+Q:]QcWnf)'*i*it2R-e&4?mAeG9K$W:Z3C(msCADCS!cmOEkG0cg-Tr!5gQ]>Uj
%,V.f0I#NqX;FX;eS:blXJ<)1.:iKUsO#.Do<es2l8Pod=^m7PUN>-eA5\&[G.$'%GfmU+;=qRKV&:'NU#(1\D.5/BC`UXM;0iWO.
%Jq?Al0jANg*X.:`X+#T>,<fu^$q^D5=Pc+$;/Qd[F(c66`gGk#"S>Cu#\5Vs<OPXc3!D6J7NBBW/@ERB\$Lsd`bI&*Pgb`^-#UL)
%-K7ec&"*14`j,.hC:4`'d_57c7",L;)p[gL6'<@!^%,a]Ap]@Ri"T,6*%*WT;iR-OMMia;<%8cG;:*+cWu=(Zd*_6A<%Fhf63:dN
%oBeW.,O4(C:LRf=3$B,]%T\[j#Zm)JA4B=j7Mc'^/kC[+047>H9GUBUL:&+0I)_6ZKD%]^)G:Qj'9ke6)q7;BoaML>11YFaf2stq
%5TMAKNF^QqB,="4pkIhF5kBZRmE7[2Wsl'lMLt7JOsHm[*?a,[Odtj<=fV<sXK*c6pl)gV$>1S4SuaZ.V2636q"IN;bIAhV=L0P/
%'MD5hS)ArW<SJkD<YALrk,V$uJO1*XW)tNL>"(7@`Vsu?=SHj#''5W[@2<Gi%S\Kr/S/jS+dAW3n.nU[LOoSJHDHXWiSQ&"?SV[K
%m15`PA;>lWZqdWMU^E]]D,TiOF02chUm%:eJglE;+4ssL8O0qZM)UHF@`XY0Qjm<l<ktfKNZdS`XQ:iG\"Ihn0UG6cnsmZ1Fb3mp
%$teZ*Q]7pE"AQ$9eAs*Qh?\Y_`)`lW8C("%%:>g=;YVMp(jT`;iTGV!COg,-L)AE`#_7\e(IWZrF^Kf<,YTg#AiTf>@@[gIftFT.
%(JZa7W0`m'Pei[ed1r$0r$m((8M]GhLMRrP@r+jBP55YVj^+%?1:X9GP<'uA?R#2qE[Ln*'ZA%i_sZI9f#FOe*[IBhJGb6)7U"Rm
%[qAKnL]&)*D-#4<!hQ>V`g+LfSN'4Ne1)`7F@D+,N9E\b;-:ts/!#Ppl-+*tj-^BKH'TcIAV1S*We&KI8LL(%0R+bBM5#"J`$;T@
%'SS0*RRJLVjRHs[;f5L30p-c)DT^&MB407ld69o]@^N11M5nQr&r%Q<jYDfc3\Gq(@-GF_iW,79JfCd)dP*H<&\A0p$c]%$X3t9j
%1_L4lQ0<LXi'Er=`/Q31[E;2l*<W6p(Eu!$YX"<X<9kI=Zue]-l<=-p"i*Kq1.[Xt(UI[2Tea*m&b(j%Is"khn23b7M+^Hj6mJ(o
%!r?TLWA]:31Kk70E$"RME'!JF7mr1+*dS1tak/og9%Y)EQH8PLlTf`EY`+`MlBT?rpDgSY@"^F-Em"d3KRd2UlaPL^W+mitCW,+^
%TH@)k3Ib-^G`r\!+`@tu'tMb=mj'#EZ+:grm#okCkVDU;lhmNf?<F6r3[#qtdl_&03efHsL?ZX;fiISbL)Q0ECC5M>OgAm9RPk6C
%X'V3Y;%ES0e>k=bJa="?kclFJ+A&t\&ChIuEXn7b'EDX=]n&\ll9OJ(+Rq[)_ZV_]<sF^*9Z!B=Oj/ah%4c8A33qRR'alH8JDNtV
%N08T]Qnh,1F<nYDN-@pZ"GBQ'$CU.OYm?jUo[>5K1-@.?>77'*.%0kKiC>4ZrF^]sN"YeQ^pt>o@Tn:\*ujP<X*_n9nqo`5KF-<b
%iK0_$>:bl;;5kt8Q"_B2/"J;LHOAnA,A@2<!25"^Ya6Gr-X]U<fRTN&(nJTR6qSsT"2LD;jq5,J!V5*DGliVg`(J&VE)BSPAIPl-
%3D4r.<nUL[WamMk#<p)/djPmu&gP+nE=!h4:86(;9FIO)C*iqq5fLi:=BA\bg4=pZokF8$9G4<3l8Ki*A6UJLR!/-$LNHl2o,Ju7
%Lk6dc'TTSZU>\'OiQ,&-`<t&KM2T4Z*J%aup#d3n%lJQ4&>9Y(Jo:`;PI,f/;g>:/dD03mE\0@fCIRVZSAL0he`#/82:WoD$JtMX
%MT)?Pb<SBiO8KVnZLBmDb!9C!@iX#kN/E!!5EuJq4G+;EYW7hQ"`PWJ9iH20+l$a78Bj;,]mYO*U.Ur3ae9@^,/[ji[3]&,r?>mL
%:BGMe`A,5LRrp[3`?enV'2=W)`LY0+k[jmOKkJhb;*]"A^-^MmJLaS/A3='[j5jUtT@1^jdRjNo-41i:BUT-&*?N-qKsFGX5?&t&
%.81u(:0&kj5a%QA;q(A^$HZNa'PWLOpCMY;g-qd9lou3uO-Ul5Obn/e?Z/To?):LFhJZmMoqYB9EM\\G9YA;aL946P@YWMr5r'5T
%<b+Jg1M2e07j+[!KDE9!\TJl$ga%Q]<7sl\ULXP+EYm,=k+t+i!D.%\KNEbW1uc^@7sRn''G]R7Ju+TU&$Z17;AG!?(jV8L`=<!H
%+/?Nb>=4Y_+`[\\BTk]<W\4?p*K><p$0]Z"%V'oV+iHeq5`H4O:lrB7X>1ccaE_7CPq\`9_Y=>`Y)6n2R;7K4_1ZThdtmfa\:Rh@
%b>=PdIZ::3TroX(,i$ScNn2:p\ruP!90+&eB[o8:Qr^:KD5;`9;FJLHH:`KM%icJ;JE:$EdV,?UU_Xk"CJk9[=-skPAn#AN)bIPJ
%kgL,(`+o"AOW8P9M(gk*6J'2:XDK+seDRR^U^@R-3!12-/%n21lb*P1j<2ptBK?4(`7a'2bB9_.1W&EZS15*5;_QKl0-nRtP'ed%
%N(iBOPpm"qW9UCk2B(%%<Yub>P!f-<h'es1^bDFR`X9I;P:rPnnWC-q;)b_E:a.GH;=$Z1&0kC-Q)JZrW'd9i/ndD"A&=%aOAV]^
%A#Ul/eQ+F6&Q6p+E7DrPp2_B[UTN0L^hDj23k@9So:^/%##-:;!mZt[/Z=$&!\GXUS]GQEN2K'nB)jnP7Gf?W3j`gk>ZU`d8R.5X
%A]`qd'F#2A!c/>"%f*MOK\P\qYT9rlW16=)7!@5,+gJFEDS:?+n6SET8YHPa@ONs-\If6KAgqDlpnX:6"S785J3kg=`8MZ"(R<O>
%N7oD`.hl/TehS*8I1X>LXCKOi@Xlk;10:TT>6-Q)_"9sq0i%i#nYDP'A`.P.HUafXhasbPq9"lMLsVH^#D:g:;/2d$!.b7oeC2E"
%<Ore\N'srqbV6RBX<_-Ib+Rd^#,gMr/6NT*J*(>h\S$$2ULKA$ga>??>\U0*_E*B''lO.)Zrj^M:m`(QXX6Lh,RrFNaHoeI%?s;(
%AB`L@;SdhN`:)6^Fp"RJF<qGj][>q6<+0atd>>o,9df:S,fCp95q@<$ebV>6=^X-jL"m$4[p\th?IgtjNF3(u@QS\tOj6_7Dt'VJ
%SW*oGA5?/1Sg;rK8hcu(%EbOTc:GgrA)eK.AoK31U0l7t[1H,!J]QuF`Y_p`+)QZ[\OV/oO@n8nCl51d<HJE^76j?WU?0X9V92U,
%2RUWb=.iV!cDc3JBfQ_81fi[PE3)jV,++-rGQkpJ+U0;B0j'T6=$"fPXe`'1YXj8tWXHFIo!fC0GqslSe1F],IT_<U/%l]<PQG%(
%ZXY6'=0uZCQYXT5f2P'Bpei$P\`^psLef)?D'KXrT1Y`eek9Qaj#Q`B;J-*g5kMq.,'s>6d)t\\O/);4k(%[mO9k%[\N,Y8mj?/n
%-i/PrdOFK"Tu!HW?'%$tR74O'$'%#;+q@5]a'iJ)6.6Se"9;[4O%3pd>%e<l:5WMHoC-8/VC\-I=;9$oSYTFYTI'q<']_9[7&+-g
%kVV77D+Y*8EK/%Q_[&+")$*qRR<k&2mM#@dHoiO[Y$sE.Cq$Ml!=9GjJL$LI/YIcI0R-(9ZWt`h,Odnu,_DnP@A,KN(M-/QGC\Hr
%S/hS^0\_U#P!D*;IH)tL@Y>>"a3FsR.FTeD]>cU),\V]HV!3XE'q_%-D@9>B%OfN]@_t2g8n:H0a&-u!1*?"EZiEDtOD'gl;hHOD
%Xj@bi[m<ZG[CR<g5\(A(Cj^\0*fI*q+XB0o"?(1pY9e]]oc9f0[k)Tt:ECea,SEB+L6H$)+N'/7aG?N6LQK/Ei\9eRDEZ^2hp1"/
%Fl3TU'+@PSqN,ZjBo.^J++t'oUfa?dnqr679='hDkgU8_&crNgcoPkl9I3aGEYi[_BK2Zu/M1":XA4YPM,XYrZ%pUiIn?J16PLqZ
%_W=4e(4"DeI6D`[gu])ln'X=]NJQhu0P_J9<2JJ[-#XLVM=@QbL6=6VEBC=T?jHRfLiA3bB,ouC6rJFT=-k=,:me54)C`H].;G4Y
%^Lq6,-q&GV9'oB<MkKs#i(i/'Q`fD83DC!;_68k,9atFtlMZe/rRU+*':0WI<T%&d8b/1?#cQ>]-n)k7eWRFi@ULJol4pp(I8.em
%2Ct@m68NUYFA0e"70jdI?8DCE!<^Pr0II)3'Mr:u2#r:lA8WEgJ7k#t?kg2e"DO?+W@3#gMZo*-Co:b4N5P#qa]`)[KV1cR9Ioe_
%N3Cj*Z@7XA\44T\=NH//Mh*MY;uHpZeDUA''b5[M7SKpnK1HKUOg%N?geA0=$0#oo0`N;9j98_DCtM._BEU]%a'Y]50,/@kE2CN2
%+O=bR!Fe$Zng&pd)UM57l3If$Z7o1WX@QZra''VKZ&mW1T9SD5`h7sN?nQjR*4WG-0;E6i;jF_*>=#0m>)2Nt;N3d))htWPP!OiW
%2;])LO\QfJ$+70IlXie`(-V2hSb;!NJ[=2?R?9JcEK9))([dig2D\VUJ795A--][u>01*6-S4dG8`C9c4E?aQ3M#YWZ$`#Rke*.Q
%ZiJ[U!&PkE(CEMcZZCa'o,&=<0#.`E_CtNii+6c'KGD"clW6YR"=&PF+ed89WrpI6[KPqn.*7j'85b;gGe)$.MPieAWGg07ECd4\
%_Q/N9lP6mfKhR2maeJ]27bqL\[XpC^q)aCOg)rV&J4SdY$2AU'(Me.9Z>>B^JLnd='m`4H"hZ.Jg:h0[p/n0Oi;H8SVGQi#3S_(0
%=/XT:SWXJE7_*t*(!<-#0UE`)/7;&2oo/bOJ`.kHHBA%_%?r`U;B]oq(/(dlb"#/te8]C1/]JA_>5=Nl.IRC48L9#s!d@Zrbk=r]
%6NfrT20c@j)SJQbfaarBA:K0+hnp:K<gprri7t7>>,iagD.@9b7_ta2#!E@TW"u3A2^ji8aj1Y_FkAMSS[RjP=!2(N5B:g+Tm##`
%5CpMP=r7[3RHVM)nYf;Y6?4hH,k^l=9#QgC-<*fOE<Y*'a/BU1LCh?sIV8$M:'AN1OHHX[$E[iU6d1+SG"on&J1'AVAi;c+.+pnr
%$<MKA_XPPWVSU798db=rNSI["^-NL9R6U11R6k-!'9P.3P!^UG/_42@J%DrQYQ."/T0!?WF-dP.!tmUuX;%=!#%4N0/iZ@*q1,'4
%NB/Fr').T]_2W!M0U%A5'0.U1C=-b'/0[4!h)-VA"^i?P50Kh*OA7QBPQ;hMhcQ@5T.3]A\iO!8$She(e<!tiM\d$45:j4ke([KG
%KKoR;mu6<j";*u>-So>-YEGlc^\4mH;*4r_hiPbkX`'Kg$[;u@19=$ObkY)%Zf_%E&M=1q'%9(!O"rD-`5_u]=_dSq<\Xuo;?0M"
%7FN]"==qI*KD#@dC)e_9]SZKJXAnJJpV,l;.?pG#lKMrh0M0][fF;"a?<,M:]5e*CbbM`71eErIa+Qf=6L@#aU2XmJU2g%$4c-PI
%(:54",s^b*ftAddJ2Um1cbQ_YJ43"3Yf0]qY$X^FZ(oe7+5`Fd6%Sg4gJ7:6(blMhGt=6t<i_mlL;SRE*F'/b`8!i1,PMgMW(>&h
%,EPflWP[Y)3=cb5asFM_dSZhr#DsJ6(78MQ&jIn\F(*E?k5ZOI<jJhjX4/&M&BBItBrI.X>0'1S6-)Slmktq=m.aV3&6lCslSIf\
%D5=u"Zg9OB0JR$IP>/@q3tML1CS`Ar*aG#$f9X4;SS1I]mEc+dBITY9&g8btataX^Jn/p0*2T!="[V0Q%5?/OA:80kF+Ws7qJog8
%>T*YY-b>?CUr&)oeO`$aV%ZOb-.s;!%U%587^2Y9ecAWO'fr;Wb=%-nVZ>OlFD)Mld>aqU:44H#Y95+f_f8381fFm@W*V:H8VY8A
%/.+9F>aU]N)V%CZM3*MP_Q6rT.9#jie+L_[#(eC%(iZ;G6GUU"Esn6[C#(',C&6a-'CDkDp+ZLR[uKju:_A4(aE+ZPEC2#,8IDR2
%`%pqjO]>+s7":%.Xg;%MC^<msZu""jn7'HC']VHb@\,">3T3eOP)MYq1p,?)_P9r.kbul_WMqC,+6"r:8sQ3@9.8jN$#RM:,Q*kC
%_E2C&Uq&(FE,bET1'!ah\[lUNTLA"c)'OX/oe#67eXd#X"R?o;QgFq6%0X-'QZnBS,>OMWjD,;mBFIoh,B7&Z4p=dl_,r$Y,61GI
%>c/t^2=`8>^(-Nc?:)Ser!#p<f\oAer,:!b%E$F]9>X2eGffQ=L!,!77ZkVRb3:;OO3#O&H;$qDTXct?,iA*QTJ*)kajNjumZ`sA
%;)ERT&'RIM0bBMsNPab]\[p6/8Op\6M2r_W;9!1[KH).C_uRjZ4m+E*/*^t+W5?9+"EQ=d@gLgeL-9Pagu]E(iRbG2F8('Zc>$nn
%I-I$>MfRNQQVq?K/D8pnBV@mNQ(0&.7O<OF.<g`4)FFUY?;&b63s>qpba`OdM@i7]k4*[o'JUdg;m0d2?!CtGWT78T=e_IG"uFJ1
%9mfOqB2DA[/qos^JNke)e`4C#s005\h/rD#h'Wod>_K#e(#pH&aR`n0P/gtAP&(N0*W19#oGi-E:UG+.Ob`^$;r*R]g68gb<J!>c
%'H4:4%JfOU1Ipfa_N0J2RUB&iNs?u].a:T3Ne^iJD*h$Ef+Q'@9uuiK]tq.D,"dE>X%J@aM8s'qb]p2t-#[F)`bTlm]Oo$7-b`"#
%;rQ]e1"%7E.QgASbtOMoC/YHO*j6rn@3R<,6Hs&=)Y)aZlV\%^1jB;T,+!c&Jk(5MFZg$PPUPGBScb$0dZMaoaFOTVbCQ+Y:uGnH
%L0gB)"('LJU.Tr+QsZ4/L&[06+b7<toQN9\B^lf1]?#rdfTY3dWh%@J6gd#b"qR!qNbmKY<@c:;F?4Y&@D8MS9GsH>d3Dg#Pfppj
%8*E?*@D0i/a^@d']ee#nkqjLPhAO7_aL,/qmgR]S6e,OgmgSK:^$d;\GHDPJhb&6Nduf=8,M'KX9);.+]kab"1KMd_e9d:)BZPGM
%@P&1`=:+GPc33H&q<hW:TjDV1G6a<5-'"8X%OP!R,?l>',I*WM\;(c.'cS^*_K?)%7JMEaeK)(UklsXOG9%"s&S<R^GK*U:o-)MP
%5o:6;pHit7&AbgBJE\[*jGMJB@_0Gb,>'0fdiG=gklR.7DBKfPh20d]T';8p,>WMlYVW/APjU9VSH6eZW$(pAaaJ]i=h*mGab]:Y
%_utW-[QD22V-TARc2]5Z[e5aL%T8uC/p):AR\[:(Vn7RL1*B&.GPSh3<7+<^B*`OMgk>)*@\FVgFE[q^#;4#fn'7$\T%%gK^,lGs
%-c5VCmg^a=XQ?C.G<eqj3ma8^%Y.?H<,REX%PUaHN`l/F%!f5$_`-Yg"3d!knL<97"e7hh]>G/IMEPR`"$dNN;_-[p!B:eRT-Lp/
%_\->1ek1.!86Q!@D5"Qt0PQUK3i9MFjG,RcVn4_gJtpcM6..7_?-d\L12Psk(UcE"HBFb;aED4;4GY5ZYh]oIN?i\$m>a%Ji7]$S
%h'(""9[l[XB?2i%c:t.I6cbP^p*7.1@(s`N.,>mekYd4"h&W3L:iAFm]/(_(#J>/P]/,ILHY,TgB:*&k9M]kFS//A/\iWHq\-Ib1
%GEsLND<U6P(j!-7_KL_",3R_5M\4HOhL/tI,8;>I]LH^]7&1sUKX0DG>EQab_KI:>CF4.I,,R_5l0eCl'tQL&BIrC7[:mMp[.Zh1
%fCtr"gIY0GJs1XOWYdFR:4^7%Cj-k/oWkdY)$W/njJ6U9R$kl-4^u%@*YVe"A\1>.Mq!M4gRTWS(0$t>gDr&3`O0"(mXW8"!N!YV
%BBb/.I`us?==DY+[V*2S(*h:t$eq5&8Tn%@4+^$2H_/f4!Q%PnP_JMMY[Suu$/M.l:47DAmLBlY2-j"%B35L.I<S5+#;e%V3%/lm
%">M-Geqi`(O:6a4?0L]EJd2\>?2r@ch&V"gKWhW,h#XWP,%?8o%VMo:ooA8(E%h[K7\RH3\OS-;1#3jf0/CgQ\iW7fdF@i2GD=J;
%Tq0Qd)7hmDb_Sf/\4Kei257^8<&1Q_h]8>!.&cXkiLV5Sjd>KHpRD5;(;;ljD=P1ehjs;[<Au6?1*gCfU$'&J9X<$GnD+r`=uU'1
%GDG4Ngi&JH%Tg%hpCZ;R61-q)bR35Je/lZ3aMN.6TRo9(C!V!Y?q,0"gDt59`18Y/]7WPtN2ja;#=G07e,VhIV+tc5`_:SC?^5r3
%4"u1%*@((/6)TX_:2'(*hH]DMm[t,9drX<`:jD8['R**96V0p^\3nLkae&pV*L&un5`b^-&2I["GbMT&%JU^sN?$@#6-P#Z8oFrk
%+l@O<[kgb3<$Q]NL`L?46>pKJ64i^1TsoY>aNR0HG*ii\5RY1EoF;Ld(32M%1s1d+ZeGM!&Lh%Ogb+i<HQfk&1ZNEFN4a?8*Gcar
%E+<cIBZ6bmXA!e61PJi>QR#:F+-FNN%g>HK#9f?GJPA;rSG\Q#i'W)WHm3^P*5eM4B#%DH--XHJ,r#<I6.Pnk',7sj&Sq?Xrup4M
%!]io7,cjhgCe(!Y_bd'_gKAQ[BGCuA+!`kPS7TWT8(a[>YFT7_.@?^ZNf^t76cR&fco4$m<e]09F_!hl</Bq7]*?</U`lu`_4M$C
%U:bX\-j%MPf?SJ1XB:nX=:B%m?9;(f[)]h&BJN/\.^L/e'LOG(Fe(@TKt/F?3u6Ddi-T&t6"j:o4MfI!l-=8?kl*k/,AW&BZ(9jC
%M4:H^G)"th1uYhu$pl]4WJD_I[$g\CijH[VeB9AG*=N2sj=\)gL3*YQ:3c0!iH\i*f,>i#*"qE]]QT%O$F-M:ULjNAYL;,*<&[U+
%S']lWP3$%bm0jRB;V0CORF#U[jbVIt@er8<XW8[tVm`M2K1(5)7^R>8/I4mFC$d%j!ZRuD1W2NCg2Y@>5K\nXd+T@,d>XXCg-L5;
%0T4B56"5M_9PNmM?&Q67e(PZn\toHhMBO/9;QsY348;Dbc`aEn4=a9b<E\^^=0TJR9P\8H=5B^Ef$48J^aSn*0lS<+)W0p\F%rFj
%CR*E[&qRqLXEK?.YfTXBmJ'O6ne>+dC-BLr.]dfJ(q!sBC58BQ8kU>8'D,I_XG3No&.@N;+giQk)4"PS[A0NpbG$Al1R1MDOP7P1
%BCT=T[A-g=2=6(H%_AmSM@6C(Y-BU@F&,Bp%-ca"K[UE/DaI66B.SnLH:Bt`!*0a[N-9p]f$X5NG%eX)S('7JTqdUOa:0$S.-AWV
%)!r^p&UIlmUSRKq_Is1^]!Y./:-XrYX$)SpL5^9e1B^u4m>OssJ#0M.THe'Wd>65r0L-4;:MC(*PN@(TduM`S'lqN4B98`fnsUF6
%_`+)@c8k`,3\?(*;;/iGONa+ZBkP)B]ZWo]B*cm&c%OLTk"WR,#,HFpe/g#f@o>CEKd*eKg>P/M::]<)ie+!o\2?d`FqAG6=_[7G
%&a&[OCI_35#$aX1G%`c'`=&ji3lWZE0s;VB,Hp>Br.AFG.D7R\CPR*G3,_3#LB6U$'7H+rN^k@Gp^4-o#plH3UpYi^MbVgPg55."
%-ai!r^nBbEe.,-BckT/f7sKG/'9>]OE2bQVW05l^F%31W6>C/#aW'W#e.*o(L0TOge.1Lh9T(,n4-L"G?=C7Z:F4\sYhHpO7fqX(
%WuYBGoQNoC#8@8[`YDrE+VM"f6>U:<Ku:"1G!n'8kuNZ.TPsTP\1t6/oTI;UYRoR*h^8P<L"ME5'84IH&_jQ+K?7MTfFFOpHTFlW
%mH=g$"'-SR,9KA$3]`S>nZ,VK7`9IH\1E4%$F(W,3@'N_`-/6,-fauXfFF2E1qkKF*SaLH+O@)"gK><<C;d/#[Y+=2roq:8LSAk\
%<E*Ehnjk%q/<5PR+;U#\@C@tF;q(Y>A;Uu!-D`D)[\G&5^$D*R$tJ6Kp<7]7i-`o,7a-&8"=%BH1>@r.J]IG>foAn=A0*DJG'",?
%%oeq`#X=n;2mf;h^s-Q7IT`'*+<`d@A[[f.H+O$1b]]<6&JtLZ[Ni!YlG1E`G/Qs+=u.WX#_nAa/^/C.I+%&8R-dH7&\HOKgTfD%
%lXn(OL[m1gRaa.J&O@gY?)A`q,:#T>]b.Rk&Vu5b=IAK3o0r6$_JD^f,C06Lfo@ltj:X&oG-'4;)ggPP6T_$h(_4+D=RXhoT%X[4
%?18_%e99n"iVXC)4-:f?;qpi?+rO;5&^!Uo8!Veg-tL3J25I[5\0V<M1><uL>aR\_ZQ4sW`-*(TgL3#$X=VS=67pW/4gQ0#_4DSZ
%gEE+NP4,Xeg[V%d:3l5g4tiC7`,!D.1o`cof8ah)FN52,4#0NM)Fhqo6uaNmBOS?EZa`n2f;_WJAFU]IZQ1XB6@d+5VFbM[s/i3-
%'*FK\1J2LS3ZBDg'l#gn'JQY86u>HDNkutlQpV"IAS%s+gBg#Dk9f85!'t%Q9dR7^Wi\+N\"!3tDY&[sG7>RD]P*"Zkj=26`Ej@,
%3uM"6AYllR\`cpg--IV[#n`BU$G.<-N2ZUiFup<K&P[F:Db!h98Z5R63th"hV%fe(`ZEeZ,C2H*d[g7%R'$nI?akR6gTC5BrWi+Y
%dbEl<r$h[7VgijHrTWm,rgn]A_096k?%/&cFH\fZjGD$?:4L@0)>qa7++3UIJ(Mj#*F6F.o;]OjUG#Al?Ko5,]&jMF2QKV<r1I2@
%qt#Rb]`%=%Zhj;Orm_:&hWij&n8J=cs67;)m,sX@ID5R(s(YRfo'a<kqSNi8,l#:j<.p2+DpYUgQi<L!YF"ua3I^pSoWJ+1Qh[dA
%-@Z9N,MD#?i94r<W1P?U!<jCA>oLK`_&Lff_-f5f]R_+NDd7_fl'@WKUSD3cN`u5&UlgWK5Q'Ri<F1/1pa\4"0;bpNq51>L)0Ebt
%<5.<AjBo7Z?R^$kakq58jE3:c&bB%\RBof8]2o@+D-TpEfgdUa]GSgHr!c9rT9h0b/].@=k?Hg@:b/IV^II*1m/gsWniNbO%7uH"
%Hb"77UF;51b(?\.?`8r[_MpA:C`"`>\hOk6Ae:#j[%YXM%7-(mHTBrAZT6nqM:E&k99"V'ZUYe"2P\D"_n4J:09q0*ND[5E"r(V(
%n9G:$.@s4(SS4.r2\M,ie'$Y!QrXP9f,CE)D2]'DUmK8DEBbff8Y+2ihcMjU9U2e=-M5@5BXRU*nuCkO\W^\0>2G+)/<)A(XhH_D
%HT(-$MViX8s8DNZpu:qbMIN(U.lZ;^gFii]gic%E*jK^0lrOdi$i!YM*Gc;[2ahQ+s(m'M)I5i_3a_pdq3GB#q5Y#jp^]MUmcXAd
%-fTnp&pL]3UOhc9@n"lhmQ:i>A9:Qg/FrXZs&[i:d/5Nm[hR6Nh+eUFf&!P":%&9G@N*!c7Ip*NpYc?WQPh?@s7pf\A[DYre!5YD
%)#Jf0W-Q9OkZ<P'7hNC@*2`]`EqNfg:KPs?e"IA-T`;'NZ$`o>Dua9u&)UY\)rBsN%9Rt$On\;ccJ[U#J)5L+]T6Z>)YqQprr"L"
%5!.)oqXB,ul^sksJ,J]scbHu9EQUM,[ISP>eL.DYrcrL4RK)hLDW(3@pMXtFhb`.Sb5M#'oU1nEBBLqN:W4<XX,m:,H.2d>rp/^5
%f;JPiO7GX5Q[q:SI-@Kgo=+SGX4+Bs?JTFC%VI75b:P+Qrc(HaRF@RRcKN;5pU^gJbilns]Bd>ap]#YfEcZ?qp@:XiimH;b&KgZ/
%-$RGf0@+OmbimgFl!<t&hU_Mum)@5M)-t\RG1E!Vs8(QLkHA55IqNZfdb0NrrP:jNSCcbK3tn*]9t5Tc^-@'fqWI1ns*8s;Gqs"s
%:7g@n7,PYjrr2W:?(\iVHTpW.0+[KN48/B^>e[oHo&Ss.VpdXRbOFIr:=7hf]M)(=n!s=@eo'$)n"`=;=5Vf'h4/:C"p`t0_rq#B
%G!9]I7Sh>mCps#P]W2:H?XK^\]5>t#%=e+7lsu!f\U&UNEr)-gj4CK[:1d`3QZK<[bC)V;c7ZSs+6.h&h0!8o8.W:Op%n=Wpu^jf
%7UQ!^GJ%:S?!Y+WH?46cDnA,./#YqohLLYO4+4[9A233>c44#O\]'e;9Y##;S6nt#k33;$G-U-%_31:m=qAoAH[1%0RrJAGe_-G2
%Q<S19`Kj_E\]'k=Cq1DjWIImUg_9PjXLWVIfQ2CWhSM;n9BYO2Vpk6U?6-ejqKWBQQ)gP>h]oZ+B:&g?DI.^6qU:jE5L7\3LQCo(
%?f.Kjh0)`q9$;(<>/4L*hnFAWG'nSB]m'@U2pYTD0BV%e06VS3c0<-9/*b(`n#1NdA+*3sX-YKsSDLng2]V<ns,qdlaB^tS[H#Nd
%l^,X>Vr+!aT?hMuN$$s-E]]&6O"A86X7NCXJ,B&lG'e%IJ,V4,O7M(H,lFZ[]QnpOo&\VCqrSI'[PN#CFSbD#nb'5hb;VB#QZIJ\
%rf`oGYF4:a5Q13He`H%d3nXJn5Ri`i'K=9q1&BcFKCZc=[-bc4?L5:Z_T\L.q*'[Al53l6SR()7TBG20j23b7)r7O?omT%pV.]M@
%ZhIPb*BbCWl^5J:0==0RH0uI0fXDN%L8+D%SB^Wb%en,)X6mrE%ZjO0r*Cnt5Irk'E;Md/g\NqqKA#o\np#cIGIZW+r_>Si5.c)_
%EI'ER@Lh[@4?pIRlM,1rKt(BJLM6nK`RB1#K4L;^qYBCK&#U8dK@G),Dm[PF*tR(_--KrCo%E@tS'd^RGG39MP!)V3q4/4:R)bK7
%o^(l.r94"LoRCM,m2gTqPBf3aYl":l`S'!+bI'IB>?g^(A7`G64$T;M>!=@XCrXC59MBWT,.m%0j2(B4X6\B@Y0O5"QuV0STc*F2
%Nj7^8g=*t*0pMdbWUs='YM[>6H47?[O5S7YIR_QFE;'#9W\bc3K-,%Jm&XpRpPmSE;6LJ:])VXfRcC)XqAD<F95QoInb]9PhqJT_
%-l:3\!u,RpD](13\[<6c/\60@fBB<,Z2[rOhp5D*#BOD#l-*F.X.=@llP\ZsB<R=K02Kp/3B]SiRHJKks2hG?pZ[W-iSFC?rf\A[
%2P6PRH$t-hEdD_OH1Uk%l[uijRT9/r[J!*HqW$sab!42!HcgtfI>I7gm52]iFYLl4`Gp@_N,\\\Qj[tIk"mo"B.05Ir*?Y8hriaq
%\_-YY5,Xe?+RqX-pcf8N#b0;28"ZA.,GFE!l=*L8'd)2\>gA_ZS#\RDd+.R\ctq1LL-B!a1<o@fb&b2[b5'`Pl1']Pnrr,*PL$Gp
%U]M&Jh:W^90g@>R+9oqd]B[E/.;ba4qf;Vo`S&Mh:NIk\Irnc*3^3T>pm2j3PV8Ssj6N,bP<?CV0"mdC6M^3=r-VhNlhTs0F*Vmg
%B?>],qX$?W>=ONgnF3Tl2+*9@G-?;k$[1S(*fclMWF^'sH$1oX?N0^r/U.E6Cerb2'4ig*[$/OpM)(tbLZ6$-i(TA<e$/9[j&&_Z
%SiilLPW=8#9.nBTS]d'T(M1mP3g?].^iN@bW0R[OMt/8KdTJYAs)V%4*`F]6SB`[r-qc28DfOMob$5YP430jYFboD_mBkrKm&@NL
%B4_WBUH\<TPZ`(4mp#aqk+\A.VHf?GSN2p?J"KT,6d2Nt24&MH20M!HLCKh6/&Q.jM8M^931PhMcrTM="cj#*nC,.$pDNL#^:S"g
%d37@RF$+o,K(SZe^p+t"ok10-lePBLQ?2FGk?;-9[2D?9S86<Y[[_+<EN]9)3_L62D,JpYq,f_t,$dsOj]&kHWO=3jMmBd]C<NUM
%=AH847-M6'`4,JX87i:HY78Sp;ugmj7X*`ZC"Ys3L1&\(b;L9@RF&%PN,1oHo[gD^&dQbN8gF4]n0I*?n>imFSt:FSIf.B54/dG[
%\$^U,q;V&.g#[C[b#'M8ldOm`cXt!l%%c;*<'MQXPW,dsL2qWb%LNT_baG+-$tVrBHA#ZSf;BEd>=X/D6eMi$PhVG"HUU9Sc*=`5
%T@dae6N6FcQ2glJr9+!mTB*ah4\UjYmOXI3+MR33C@o#l$@`.FG;o?.Z\ZU3-Ad4YGCGTer;/SsqnDmp*'N$QRe!RJILj8ih,Jc,
%?+dmtPO7imhekNRIcYj`bCe_Ul.nXs!]0aB5L.q:5ONL.b]$\`\1OR7l@[ufl9(gPgJXG/I;o'H&)6q@l@V*]Zg'ena4Z@LhVX=5
%f4R%G/l$?I>kJ>K7m7LZihO"/%l"W8a15J*rK^'j-2tNpJ+)+7;>bVC^k;NmQC%C8+iJjP,o=Q6s4uP*-3!ca'=Gc.Qh^$Pj1j(b
%&HT>b-SmX%-0Dh;Y+Rq%Cb7C!-0DhXI.+/'cHo20?G:gak4I?WAQELtkH(qr?gLJPT"B!VR0iLLH?rZ+qW7AIr9EJ"]68Ys_lK:)
%^loGIMU(GAoERJ,)J0uNDm*M[4(RclN?@'LZZ"`>>2A%rkYdl*UW#U/GfUX2fu)Uq$XN,Y+^7'>Mhc+rd`kTs&)U).)Z;$J>b@To
%IZh+WdnfO'I.kJ.-U4/-SY+bdEddfDPH4$0bH5dO`IG<(aIO4*bgZ1]D_q>dK4fCO$+D_eFSrmd(N46#nahaK=*\i,DOSnsk_OJD
%dq#Ae.A)HjnQ_-_K3\-G0RC[O#I?B3p=f?3k4Rt1<_BM:XE%]=klES@SbDskNnF#sm.Ig8f)Fp+YHp-6V[iDb=WB)Qj(35C/<6(9
%nZk,\(<=VXGe*M$KptLN0C"7bs(-2_m'-`*3*u%4GhLpKnTaVPp;V[UN>anam6S=I%DVWYM8rXoqrlBR*o(>6bEM1p_'\:E">!po
%qpC1I#Fh(_R'H*f'9A.K@X_eBrniWp(2;e+m,kA/Z`X6#j`9/:")YRgpL>9<rGm8o85/X$WP-%_mq;_TGN5jXgk*?6\.G%q0Wtl\
%dXo3?X(D.>_(#6Cea\QuT,3ZZa&\Hi"*J@Xb24/'i8Df3B+RMGfQN"0&t/a0];7B_%l;j=q9XS/O1dckY$ShiF*`JpE..Rlk)k%)
%Hi?\3nb6]!][,q.:1I\hB''-3+GVa%MhQ<[(7K6f^YHOi?_,Kc*3'P;lGe0[_Mmp,;5&036-\`6*$&dL.b*q)oJ_6EpA+ON`N6F:
%I;\e.N!4%nOng`kil=#$S*&Z-)!rR;A'F2TilB\U9D?g,r8Pb!r##;h1Q*>bnREPp+63*(DSe`P3M)M5o[rQ;PC$&QfhGZ1di#Y>
%h]KTnrU]^Hs1CM.4IMs`:7g?ChbIcC&KV\&c/m]<02HJGJ!sA*4a_KUSU,R0S==Ks`RWY3&dS6gXW=IGh[uBp2`GA.-ek/.,BjBa
%qqKg"XQ^Wd^!Ae*Yoik()/*^/Aao9el=,d^_T-iOP8S0`2ck&qPH3O4i_cEr/RV.S41'Ma4ig#C?qKflFF+"R1rmDA=0/4R3IgGu
%)tZseT>/(Qrr2;1*p^^c$I7'dpYG=F5Yp7iQVl_q/mYl//+Qj`V/na:O"0+(:1s8_h.ob%Q=R0^n@m6'3erpceLMj$D6*^:*I3s>
%Vp47E`o#jVIRNW!)7_a4kDd6ebq)tEnUK?XMr1@[HJl6e]OPBTjq_`MZ/ug;DEggg`L:#4\]("aV_pENNd:QRg^G0S`L,Bb@rB:S
%*LnjnUfK)0gqFg<M`J86F,N&fTB9C'<9DsLo*>c9H(A&2\pZ9sAo40X1$S\tlKZ>!f>ht#O2l.a4Z6o/)+MpRaKU$GFCkRPJ^D1Q
%4KcVSO1F1@*$DE&%QjE0%^5a1aOlJ2n2r4A6:Lfjhk)!_r:nB+6s$RQ:X3j,q6sM`l8LZ:SBl0gl>sR@G;C,'%qZp.m*DAAUH`8I
%*TSiA3t[PDf(kk`3=f_n%d$`;6_MJ4O6^V/oR(r,8,;N:P'l,-XG#gkG.$7?1JiL@E]d">)*P[6?N'e:()"Hod[`UJf,Zd9h"1i`
%lJIOoOuI<_?QPi0cCME6j,3s8X1C$TTCu[\V>6(^O5/\7B-7\TT'(TmkoLm.]<a$'brAIYs7bm>mB$(VI<&Efi?>l:9V.#;T0>?3
%NpqF&FSUt.fao2+ch.o588W7l$l7)qLM-"F(jZ]^4.'GEP`FY;7U#i6cMBK[dP%a$dm%2H?(ToPKDeR]V.`_`*`+:hFJ=,#a>^\c
%%pCEn,B*LOhm#hGnt(3t+']+USDEWq2)?lU+6RI-+*Y5%k4E(d>^t6.^YaIl"qEHSKA11Bi5]]\N;?q*I@!'fr7:[mh#4u(O0?lI
%?<s)HU0TaWqsjUNk,[OKXX<+L3UZEg[Tnji0b=/13R4%JID6cbT2U)d0Ab(X?LGi3?ZX!:]C?Fqa:$\Z^+)8VF3#HKHou'm%WY!#
%/dh$e$nlrXDTY6LRhsAZ"dis(-G#PGZtf6*9n01+gLlUtS25HP_*^0op\sIS9E+URG@Y\6ioto3S6n2W#3E!Xi,1-Yo;h3'hpo"1
%4sh>;_Y7.U4s%E^DO5_6i%[!Y49gn+-SoS8]gp1h3%r`U](>$%<"HUah1*3_'6d:$*p$9]J7-Ko9<^c3!OMF-#=G;9'S2DLR%(cR
%'$M>=oRkYkLD)P?Rde[IdD7?_O6L,m>5S$Tl1L[pXrk`QF,3+j]:.^D^H);mr:Jn0qB&4'mqT;aLr\W:qX`IbPHPMf(jVQNc"^Bn
%LU55(EgY%o/;Mn%Xg4^m-ATsd5tUS'Y)b6n]UZm8Y_R#nDHb<A.qs41"^)fe]3'&.9tSrO(Y?^)fjW%XVs!6$L%E%EF\/icQk[^K
%C;Co^OT+@j^RF;s5@)"%A4VpgLq`cGlLM"R(1I\8;>JW(%qh6H^\RAO04(">n1VQPjl60<oA#Woj]=[MStEa0q88!4lI-8.BNF$i
%r8@m!bC>u2Qh[bIrU]D0pp^9ms7G2Op@HE`X3XlIq-VD37K2th?[qjeP;ZP;eD"A4WGTmYkF6X;6+Lp*VU#'i4:?dkg<%6<Gj:KL
%,@P6OdhY`Nn.!(d2,C>W%:>S(X1ksLTF0fT9mkZJ3-s/"B)9f(B_;+,5&>"[kHInN,Ok';&!"BEd)eLBYHWaFqYMRNqo.iUlf/do
%=fYc[I-Ek0Si2RBXBd\Z?"e(fO_aX>2i[9J*ot(so!CITe@4<)hk--_d2')0RapM+`R_5Qng(k9$]^6,Z2]^'bmu,Tnk1S<'CZ7U
%Zo5)6L`"g$i'Yu$pd5jeKKhkoHn_U>O2pkJGpgLP;+B;#dgb@T6X(V?h:'Yp1DZ8WIjP8(j;@CI;cjK9Mns6hNHkI-/<=2m0Rbu7
%U\35>iOB=!H/IQZ[=bW!(l/$D5@^EPRuW[SNfuCtS$!]dn^UI-Fnh1qA)X5?@F-)0q.t=jgGYN*W>Y]LaeKE;)a0/!5(.,uS'I5N
%d+\?I@DCC6i7XF$H-YOJYCHTAK>5UDq=_d_+2l]"Ioq-r+.Hh(XZk2Y$Os=9S%SC@WpnNL]T4\@[IIsGU6caWWTi%m1a$e,m8N%M
%3u/_n3XCVU`Oid)2dok[FL-C>lUkq_#?fo_ag?6hE*cL%"AV=3C2>+F/NdmPj$q=Hm&f^m[Rp&Pn2.o+Y2m"A`nP[Va^B>hdDOEB
%(Ui\UPO\)-XEb^IO$a>Y0l</k%@sk7I4"SKgiN`is+c!?R&2Z!k+8C<e>88t$0^)*#&>TZM,-K2q:j<YEQI=[PA$QAgp#<B':sAa
%@s',X2$kkUA*!2@s(u'N\N`8cqL!UX0Gp:.MhN,`f1X765]gFWFRoFg4du7RTCNeG5&X=<gUpu7a7%S8r9kK:]O+/foD4d*I#%UL
%k9"0LjAR8-H$T3(Q]`C]2GZRS+j]!:>r$`q)Ja?V=j3W3g;0r0qWpnF(I8>g8>r!d[utGe^7fu/VM<,<<g'!p#qFFfK#)?lpu1-8
%Vm1$^7#2$3o!_S(W,d:<)>59,VpR@]QL_]N4&4X?8q.fO1cMaI+1_,j?^B_a1qY8X_]$S557;=CH/YoejN0KL\D6Y#^S\q,ma7nT
%KiY^2A?N%SK4a2*k>OM^TDoID7mkFOC/Sq9&ksWIRdlc&gd`0e;T(H\nk\g!4Rm\]3YsaT2F!IC^?"%MH9?'9+1T8Ho<Ur.5O7(:
%Al:IQ\ZEi*nH/`Wn$56"1H)fCjh!u^Ds4L-'A1!:041g;]K1Li]"4PGnOG\G[J@G:GDD_;[$trr[64UtpHr(75&Y"HFR*D6S#2P,
%Hl&T=9AZMXMBc3mi$.<IDBP/IMa<7JNZW.`csXEGGI9Ko3%b8D/g%2i-oZG.F]`unSel)p]U;H">s<BmfQBBeTjr`H.YuC9NG3e'
%.EpUbCaVhi%*=f@fB2+uol:F_q=Uf9kVfupa\@G".c.Gr&pKo2\h64&?.V4+P)!eC)Z9&7e)a0,/WPU62CFiHpdrPtpEjhQHp%8h
%oL(Jj>kp%TbIRiMSAeBefInto"*a?kTAmenq%CcHID0)_mKHYkH[bX$k#Zt3/b4VAYtb%iCVnf%Em*=\:NX'P0Bc_HQUa5:>Z\:<
%gM76ijNf2odo?iRQLld"`XV&.Ha_##W!;-bDs-^rFHcVu#E(.ja>gLRbGJG($SU7-EKq'J7eO@7Qa'$NF+2"O;&b'hRIdGRXfoV:
%Fq0hqA:cb4WujLH2dbDI>oYgNNfH:d3I,uAp!ld/FApN:>IBN=r75h`A];#L(13,)'V9fq`c8^bTB?%*LK#17]P1Yp;f25;@Y*0T
%Zu1281Ko:m2L4=A^LrHE-f[J+hG1>3mVu&FEl&7@80amPAG$FK7R%lRJ_f">`jIaG\&a?n\_PaJZhjI\lKXo)6hos5T;UjZSR0&n
%4h2/[f`*tGHuZm'6>V*PkVWtHea^o/l1O/iVa$]b\[gjIr2o_ro2jtp\+l#@>`'VQI<p8nKg5@ud4;eHcHcVn3tLmhY0UGP^XHQ^
%20SqNJ-`m')18G%FKdrNM-0+OhO_DW8+3S?+M[]VIT_H#*rN]A;Z2E@>`55hI<0S;GSM$uio3sC]SaH7Y9H]HWE1flng_X2?H%.S
%?:DWJX4WAT`dN+Idr4YS9^:HO34u_%1!K5=`dq4]mbcjY<S[LXodYht0kOYbJXhVBYBDDL/P\`SH]4MQZ.lrjd<9_R.]1lo`TFXL
%.TR'c]C+KrD>!=nJQ#F:Ha_],;u.3_l;LArP>cJpB9-YR<d]can.qYUrV7/f-D+aPI#<hXn\0F/ga(?188jfVcd-`Z`iDh\qn,g?
%LH\$LQcmJ%3-r<X=hITqHp4u5<1fW(LPu"Bne*akL[E0\j*Dg&(4!V@Hp5YOC^/m06E=9kep4"r>8Li5irJ`58Xkc<h-hbuj^'$P
%>ncm'8HI;gAPFW>4[t.Y3_OM>i*tpEW3t3t*;X4-%=-ArURNTdOTHgbmpPZNVRf.d-C3*_S'`.b!Grn(`[(naC]pZQ(mC;%d@4*A
%ON!(>(W=_O([/s$.hlXB5K^n*S7qM<>GEEWqLQsk"+>MGcPL<HYu?dSJNQ?DWu-.^VjD;0EQ_W'3ek'4@*0S@dkqY`C\5;H1cs1.
%#iVjWq,]';d6!bS4JM]</l+dVn]ADcaJGMoUTDE"9P!NIBq&#L6kSS7.21THg);1\S5!d+CtY-.EW\DXFXi?DS96a$e8+FHQo)CP
%R]a.B-6)=o\#Ir<0g76KqSjJEYdjcRI,e?CYdsdZ_)fe[UK43B<3@6T:W5Vk9p[si>9;(f=dOJ:>ikS6Ho0m.n,PDgmhd'T^XDR5
%ndEA&;U2H%O5+3TUk'W@\?P+V*^-.!aNa;'o<C/BjSA.Wqa2aJVP`?94JV2-fI#d\)N35X`(B]O5,Rm9)A2NIKeTP9`[-&]G4k4E
%KAAtEfQH3RJcdVYDHVMc[P%OkGa@DIa:hCq/ss.XU#o)-PDcFdfrRN_e-Bp"?2;C/qV%W;SWn3+*+&D?P-ZOpn8bfp@je`r(</nY
%Vh##7lLC5&]'1eiH@:F+9g6em^R!?Laph+jDXB-0jm.<+IRplPF&d)_npn@e3N06O'LWf0h6#C75)5(\R6Op$T02a_UCUQ^8l7c4
%PGN/Q4!ljWL$Y(<9"qrg-=(8B.FZB>Q>Mo<a_\JqX0t8lVMME?.0joS^Tqm:CI+8fK2F8!^A"0*,HP,;*t+"bUos//-aSSt0s3EP
%[XW6D92qW8h+MG@G8m!\3F*gB94VLg9MF3F6m`sfAAW8B9S?-&M6J9];0!?\+Yk4)],$fbdeOH:M7C1=`"k$+]-7o*M%IUNObpFo
%1,8[<7ruEqOU9XicpW8Kcp[6SJOBCL65*s(BYnZp9i*e)EG2)[95#Np%8DdOo%l_IZ,?q%GJjdFlI?_;f7t]_eefZOmta]6<+?Sb
%&=^3,GE:m8=+V+""t/u0[tH-s+Zp>pKdX_MSliiC&!6>j9>XZICK%1+=oD0%>@kLDTa';qS$A"`2MX7UVXe99PE5%8/b')#l_dQC
%X!c"!I<`b2pNZ`;d[midkVUdY90X>>%d?25SWn8%'G"1"M4In@!I*YTA!Pe[P2WZRC5!(W9&h6bG]RBf9_IL(q:in,Fb3hsDSXdR
%MC]7!/uc<CT^qGPGl^<RBm#gBkG9]2PG*)$+d?$C9:9Hm6`Z2i+riOY+O@("BoC/l)H.\A+.I<H:Bp2(#B`!joS+)LI5#LD13@r%
%E0LnnrJ33&GWO+227I,!kG,i$=l4.!R_bT-]$X*1aA/>6r4aD!@l6tDce!>4eOcC2!dERgLU4,6(gHUbkIp\)`g^u.d.olZbl>9)
%-$HajZr%bXq[G`=M>Y11XL>jhqLclLE(\JCS3u9k_)_M-"R(f&VH?Ztm)\koh`chK>&3'6O?#-lbW"XL8^)*rnCDq(]R81n<fH2q
%.k%W]2F![L\'DI#3/+iUpZV>Fl3+P2Vsu+iA:3Or?O8tZ3gQhZ)5lJ`H7VkRa]Kq]Hn91aA]^,V6FS;NYSoU0p3ne)h5n*WGr\0Z
%XKu%."G';]l\Q&+Ld%bb&nR'CYJgh[?;.fVo<]LOLs=#G2\=\jlkMI+0?0oL\:sM*b(6)ZF5E5c)0^I0oJAriog$gCBl!$cgslM[
%k6"l5?E/E[Ndhl$6o\r75b+1<`ZPijn2d:-9#K6#X?Ven5<t!fZs,%]6Js-(XNY4T-ZZrEni3fh)<lKo\'DZ.99FOj`:OsT:Sgl`
%V)3"SMtL&$H#%8Hn!AHl%<L#;5MuD8>'a*>TI#c,6rFRfq<Ag(nIH@,EEbaYDJglA\BU_3`bu-[Ql8R6"B4S)`k`?Q3t8&DIR?)k
%]O4c"A__keI+WCq+,3_lVJqFgmD:<lD%<K-J5=$2EJ)0[\1Q[(:!o3u!H3+rT<(O]b-G5ulQhiq>-Jc9.Cfo*@*73'F7g!sK.1r-
%`k`@7f-H`XIY4l$M3D=>fFUcF%T5)&UhMZ^ClGd2:;\OZ4IHZGSV0p"m*.gDf&cWJ:.^o_4\Ti'%gtP5)[hWE*<_QmO0C()i\nbS
%gm32B>E>[!og2C4.Ga-2MR^nXnW\LDrGZ[kY4NQL:Q;8gfq'/C.2n*c=*gfn^,?`#*)C9+XPpTQYt.tAY"De@o\l%-;%7i![mj<c
%;as]5gIG31rmdd3?e&7NWj*90i+3t3h%E@0fA%d?;IYa*168rUb!R/HP:@)',:4Jf/DTI:eH9dWd1o#YimI/kQ;C2PTp3:6,In8W
%Pg0_*.=IJ:h%WFp<u]3MiJKb7XD3Z$2ACFQ$&2!57it:dhME4ngLo,r4>q\4>3%F2koNA8-2EO?PZG0?8K:0;^i:?jC8[7T9(ct[
%i[B7C+N8.Lo8itLUs.jXgi`U1'/_"B&kD1E`)1!t&k>N_i[>IKR>Q?OUEl`L%5_O06j#6eLkZ4g3(g4`%6-P[`DQ2Ld5[$?.I[)_
%UR>K>3/U`BCoSJf>8ZI-KcVjI4^o*bWL:(mrd68h-8!8BjMU`IP2G,,9?aJ`m$Fqo:,OPkLDLOLj4)i:%R/CYf:j></mDlU's'P7
%>,YrMgNrboNo'^u\/H;&-b0peR&.E7LmrSZ&3'"=Teou.If93U1rQ9G4N(@3_]e9:9Bf_L]`,X?GJA(f&8sE\m_OD/&+.GfD;2&f
%q,iZC%X14M76Z*[3(hHL-SC8mGN5TjDY#7"Q6r`K^UbK<7WWQ8DKA,+]os2RXFB@4[D+)%jK#>NX!Orram3:(\u0CIo"#oU?MB%]
%^#3!G37\Iton$\ei)i4LV!\E,H:dE$D3DKnB6<_Fp78-`%PAaG]?>iRdX95ji.EWN#f)Z_e/4:cRmI,m8R;bp@bi*H@tlA0(Hs?u
%[!\XgNLgb.+-0c\Jb&),$)-HTOU&"N#\7gW^@ob@bWW1][4'T9hs?H?f9g\@Ndu!qIko0eD.Em4KYU*_-M5Gefi#AiY(B1QjEW>h
%-E`)qX0/+(gT'aGbp#gbFC=<^,0kf[^SLB=4uX$fg[ra>g6^u$Gs2n9/#l$=7R`Nb7S$Mp`_5H^0%A5D%"%'k#A-\B<BFu"F^7;i
%<OjY&#(A#E/I_c*JTT5VgFGM@fQOKH,^doS(ch/sVBgkh2u<dec&EKH^G&0.lBEY\GtG`"I?R8ZRY"*C>/hQ/i4KHo2g\9?b\tk8
%HNOs#VJ_FOOO'"47".Bq.^f*9?!F<5H&FFGA,4h4NsctK47`D%]LOke;BL*r)Ze&X\K$"-oh89&hA/2N(E2'44hafIp[BZ=>Q&?J
%S)pO7gJEQLW<+TGBW1$$epSf&IdKB[C-sWr1q8&&TPNlRE&&?0hK)p[bJck5hCJbSqp[MiL+;)RH)=VjHLp@i0r#2La3TSC1<G[(
%GHV]joV\?Ld7^7"-67-ga$SGPGmW`R<&q6jW@%2<^($Og>@3<+65,`A/ZUHUneu#dmPVZml\:KTa\QLHaeNS,>K45,n/A)b=5CV4
%Flcku1`BNT-D\%=A#i)VNB<0s(]8807(mP%Sca7&pt4g?YFr]g)+'^5CK'&uGs'W*#7'RkfsJ&R[:T,LbAba_8K$#'='2MN)K2Xa
%5kP>SEdT+J+l>@(=stjX.$`=\?p(PU(JueqHjNF$qS&_K^JD3<e#o%XoZGI_"LLMTIaI]D,r_b/CP1mu51E1@.+^qK?<@rm>17gH
%oudE^E>l8SpoL"MH;N9l?kRH=]q>.fA7`^TTUG:L&V=kh<0\@O6;AP%P8hf@36.D/H!;#ZIZsOMH5"oc8-l.?3$"S*=(uSWFKVX%
%"1aNt3rBtT$3k.5[&j[XPa\WAN9O4Q'G<?R8J="0DBRH;<U]4K0@)"dPZ:+YG+a*AGQFkA[C0NKMNCMN$g^?^>.!t,K02%lXu^Zo
%Pout`H)K;J#3])R2;Q:'>V%[i?(4aUK(VO-/DL&E#E*EZf,ZEb&Y^N2WeL?/$;TI-Af-ee[aQ&R1UMY8GE"(1=Tp:i0A91b<?MQW
%&Iqb_T_WG,Uj60d`*StVf1*:TGB4Ggs!u/lg\+s\r0(_@INgDuguald9I=8h_L)a0i!8MH734ht*57\hFO?BN()5_!n`*bJm<7tQ
%MlUMS%c05XNge><#OUnc46YAo.%HM&)V"0>esP%[Njm"nh>r)Pk]LeFJbRBCm9G@kb/cS)HFV[Bd<i"eW\;2b?L#)$hU;kW8FNPK
%-M;[\?B/l%OL=pgS..c,_*QObPFJP>W;ULX1N>*h3:jc4`mO/GSh1'#Cj8YVFM9U-?9JK?N<V;3^pT+?NU7Tn475)Nbe.Z16duLa
%j#N4qK9,EUnAZ>>PDP/`319*HbnHtTg;1UWBf7QFAo/PPgG5:oW79k.I!WQoJb.o/p7memO+dD$4AZT%G@&71Hh+tIa;n@lhtiF'
%9TL`Gi7HR7Xd71^4(Sma:^,=6b^itJQpr$)F6:9X$DrHt*4QeQ\Fs3r"5)t'3RHS@,2D>Lr`4ho9BO$Q3O!$(/=?T%cQ(S@`jEY-
%!M"O8:h4/Q'FbZ[;@2<kmmnG^C?!%5MWq8c4du1Dbo<n];oSCS&uH`#.Z&=G0j:;'Y[X\^X4V7%O#"o7<*nH<ViJd)DUm@d`:X5?
%e@id8rG[b5CH4KO)SA6P[`B-3jGS9+ZRPn\-*G.;RbM.r1ulPQ=VE,!?ba$qAr)m6`g\@iA*ZAjT@ZJh20jVro7^]4f!6!nALV4e
%4@R"R=ir\$a4D]BQF`<W/nN@W91rR5qg+Tp\s0$DAZ8=*l;ADddc+P9]M"0,Bck#]93o]6eYV&QP%2Zt!gC0/HIQE"GY&NdQZX2Q
%d6h3d;`+rH&48eG(8BFkWKCbC?u[Ql"L9U]81Pg*0W]36EaMW.JA)EPYuBkd/hb)kM9pG=]ij%R3[G;39ok<009?jXN>ft2RP7@-
%XU.Tpdhq%6MZqB;2eHhu-5QrLT9keN<q8Ml)@?@3Knb<qdUA@n'Q7Ygj]M$9jg-_0P<lo'U"tFJpB^03@0G.%E4F8)QW?dkoEpZI
%9c[!aLs?gPTY-].%)(b2X@1:.Gi32Jq.Rd;ahQ36#oE$&@-WMfZ?kss]/Kctr1`7P-*^>+'f;)/$P/>cHB=Hc1/F:)j]ja+C#WLN
%lB8fh4pj4gJZ(t4')fTIT3EoQeKdnIqc$LQF&O!ML-H9[.,V$[iJ]Igiae.0dKTnYD#t>!IH>NNE`e:)C,oT_R&(=-.'0CV^+o$M
%iV[9>(+U\XLaB=$Bq>)C$/_o*"ObgX,<iZ@^nFuUCBs$l-6058_oX=I[K66==,Vu!ee]Y,bkZ;+pIY6Z\AhZjj<n54iCV-@F\OZ?
%3:HfB*c=%m_[OF4WR>HS*@)=h$!.mC>V[TAZSXT[^.u.Ud)-$>'Q(Tc:iOfNR;-:<6.MO5$^C]hRfG3b8Ol2W6Z%Fq&dr0DB&g)D
%AO18_ad6j<R&j='egs`IVTeO<\.;8-rKXu4R=SYAM8Kpj89M&E7VfV>"hmLaV7kLk^fZhhb_nR)K"%VSao\NUeB)C?(bkS46@Jun
%k/N\U/qs-Sk8J"G0FnY;7rCW_kpN<0%['If$R/Dt\)l;!4FJ/pMXNPY5.^^3g`9cj?E9*R?GF6-erUiEQ\T!OVV][*\Y6i5mq',H
%[j*ggKW*N;Ts-!("dl.OSgZNS.SP8I,11DmZl$nd0(!\F2eih\J&<(I;VP2V?r.$j'b(Q"<fW&>YNW(d6ubLQ&hYFE>$4s1kUP7N
%`!Q+<Cerf3-#.>0>5UtE\>5oj]&uDnTTNb9YhAfbBsc[@K7W%8Q8)Flf%]%=Lu%4:2+"$T4n_4E,3X]B6T0/!SiSEC4n$RK(YMB"
%X-N"M5)LhSY#/pN3b).dl@N&k3\8@9&k"5$;ZI8Q=r!<tdA,&+4g]%=T#cgGT\qHS;h3>te,f;5G\A@"]'huu<i`0(:]83,bN4&e
%c'jM#Y$=aN&G5XAnsU_n^RMl^FkV.)OW1<lHK08f?VdPuLQWIJnlfA%jZG*$G1Gs-HR+HWACs<ceiV['j$.i,kGDQ]=^g_bd/qJ`
%Pj\fACY"n+f+W7<=oUJB[COYNFHr08aW[8.o>;NP4L*t+XqPXcP-nfuH14^%Nn22Gq7N\se'aWu7"r]TU0LFgX,RRPQ)[.k!nb`!
%Rlh[KTq"?/NFH8_/%qCE@p@Ec'3?\a]PIuHZYSZemFm_M?Z)aB;AiDOVQS]JH*>o"QVb5\nnF;pdUd8-S.'hrh7up7I$s<FD\8&C
%\U(q2M=(a_a$SIa:j+s(-p&3eNeOcKU$Pl042qdaPT:-Ca.>^E(WqblZ=ER>V!N>=Z?rc_GJholdnJlLa7:[bMSDSDI*XCil6^G-
%(lP`SUo)tdFknFGX,D5D%"cD:F]3p`3D\B*@sM?;;_j2R]^G">Y>['1Hd6m)&RCjQm$OdMq*[CN46bY/9g3gJOpSl71ottor]PaL
%+_XsjiKlt-[5KRmn;f@;^3;XJ'&e2Hdi]7:G<:cti<O7u9jXa28qcrVS[$l6FJ"EZ^";L-LKUjr+q]8[<5Mf_I,"k20`/I$'&g;b
%1e8g<FZcd1$2<h3HJ^j[hXNGJKC:s!I3/=%o<bhdpjqUB7NQrGSHn'M2L4e3Q4GAsYBAGqpFb&r9nV&N`V9>t]'F)%B;_o1K606C
%>oJ+GPQi4r2#&@+I])fHaeYY3!$JRN#c\)?GmdZ(kP[a8P3f#]]MpnsKNaXb3'@Le0)Q%/C%!e0-6HY34*U/a]CF`Qhh,1]c>A_K
%7"VtA)WT*74kr)l:ZUEOX#k.\G'TIr9e'lV1ZZPlIa:8C-*p=C1RmL$p%,iB:TNFJ0]1p%ZP.Aq1S5fXqN?fH/uJn8EK73:InWbu
%C'ggV\b#CM=Cc4?niCI8F?J"2A2+cLe91TNrKH^143RgXCALBtSRqJ&On\;XIEocF]567R*kd%#H/SO&@5iue00h$Y@ak';Xt]Hj
%Z8SEdI^=ForXIb/IVnlUS[:<O'`5:(k$+3g^-Or/qtTLDAJi9F%si/LA.!t`D#i%?I,grS$5VW;q0IBG/=+\\(bF5IF:MD'!lD5q
%O6\&:l`]3M=);'tX-!3%d.(MI[!&d'\gKGNs*:G5ma%JE9Opj](u]Z:38b3c>E,,jL#pNjq$8U%m4=bD6\/mQD.Cp(b,.j^$`N63
%L&.ofTh-d;hM(sS-ik$;$C8?Z[QL"dp,qe$d=9GgO(Q$@Bu\`VLLib"2[2$>6O=9u$q>.P:_5KaZUi0!Nmb;e<Y554.NIhHiTR;Y
%0g6r(4:dqBj8J$,?%+^^n`bBsI:CtY3K!ZX0/kQg-a1@"B)BoUb;VA$]0&jLGnSqL\ZqX]1QYCHd*$0+Q]G1no2.\6=G':NO5*#R
%&E4?a!YBb4%5\5Sc^%.uDuKY-p]?DdTb#,0dAME+T$:fEX;)YD1g'iJb?1*lhVWf$YOVd.BI+HEqLtEQ8[$@FetTNSm)O$i=_=km
%Q"b?LG#bk>e(I[E_G+&sd4El1U\Bg6>uBS#T=/HNYUT9]A'29JYZX/9Hi5Yq(=HU0%/Oe*M.-7\%3Y>*40rAWfr@!TP-;?-]IZO1
%I]t"p\(2h-$h$$tUL3ojqYS=&JRf[_I0_i[d=gbb\DK6eVu(>kqhH\3F7=WQ4rDo]>FcETC.)0.8oD>APW*4'HSu**s7PhR_#FrQ
%9R`0Zs4-r"Mpp5V3W!5N]j$*e9<`mPp:("7Gg+#'"ncb!]j">%(=]r"okm(/HXu+7"nca>p[8:Nh1/E_9bcHi6DcKtf#Mn<LE65I
%A#r);[TC_[@@2O/I#hZsN1=\LmC=OG![&fLEC"AW8j9)XEk<B!aa9id=fjP"f'&mjq%\1R27A\:qkhQfiqd^;W#XZ-=QT8N*PM>u
%3#?U>a-/#;Tb)mH()4Mhohg"5R2WcCWRAV8Q<l15%!Le@AT3Gs,FB'31h35q]1V$c0*bSu2O_A2COjS4"`!Wdo7O<"9"&FKjJ:&3
%#+JlX1YF>LEhnAe!*Z$G(>i7qb?@,r9j1TZH$_AR<T?g:24qfH3PF!6m2#YCp;.+A/HPl)#Qm"u&^bDi#-<H-@%0XJTH!#lEm)@'
%=U@?@P9i'WbssSHSC]%eFuHG!==uP&4^C6uF>\2:ZONRV?JkO`0nF-SU2o4i,]FTt:LX;gF>+BeB[1oa@?2,W-<7].e7:!d<**mr
%#"XuX'JZ=`MMmf3X\]mc@H"Vg(M95O'ne+?O,mO,#m]ic3,)SMcY?r?0L<]-i)3lkfo!#7NPfpHbK5lQ3WDgFYiq7o,Ckq\$.V&C
%YUu,\*p>q1gVYa!F^(hSB"n(S`gaMqO:"%^H0u9ic1a,341]`aTD16j=J3o.Ene3,3`)\L`C+3NUK`)i3%8=M3ITDmQ*\GhUB[E`
%aO$8jq)"6C\rt_.4(%3)bMeq[fr/Ph(Zo:`KRZ/ZWZ2d[,DRON9*.<r2*pc+69ULJ93_jUdH3o_LhT2.M*bp;;d[m4Z2Kj9XGG4u
%A<Wlj3PZUL!u,\(*p5c`VALkJ@=)$F1_g`@R3l4A",BaS$S\VK9iW![_^.G2_!Fag^h8rE-M$;nR0Z=-mcB8D[%RKIPu@uCFXq/l
%3KjHVf@KIcoh<LU8uO/P\<Yg#?"uD(rNc)iC/JM(&PcN\b7b0!$Q`O8A0;:sMfOVK7SO)/\1a2Id1S;T7#ddFrO`8mQCuV<1n(j]
%#oYtPTTS,2+W<6BNP_!S;9;3fKV4H$mTRsCi5#p91l@&[`#\"ENRE4gEGtjEDahSb]6<itK19HGd)^,T&Z*UaitBc5/jZ6l2eY#h
%aa4O:`=fl;!\q^Y%=IX`^$5Bd&_@qZ2;L?/6rOUlAd;2.]79QgmWTsljEl80Zc%jk,An2R`Jq_I2d531^N&&-YC.D2NI(CG4p6)9
%=cXN<q:s#M;G:"Lm\E/`1j[In%t1QCZf4GFMs1,IH,R/0NVY>iCI_g):r>a<#TB2(o;rpG-aR-'o^:>i<3TYtefF^K3rGZ7G/j9E
%bt74<4+N1]6)1m;iI[rJV3a,]TK<hD-Um,=#fg[lQ,Cf&K@L?`"hjh"I"R7!-rC0.%*qNJ>[j6)I/G_P5%N`6e*)m1`2NtS.A`$H
%=,]ogiM:%u*&JT\*9Io)!C$M.<+u6XLs9u1cWDs^M"bE:3au`l#^+(0\o@3C`2pUfHT6R!7&PD*Ru_0o=^Csk),'_fipR8@`\.6s
%5&p,1rG+@%pkQqG1"Ck.gERf[b#VEsZX0N>hONb]qEeV$JSVYL2+m#rBRuq\lZs(k*pcZ#dE7,sLhU7%'$@pDTacYXJ$/W5Q,=[Q
%Or/VL/U/O8Lt.J+$\&P4im149>bZu^WZ<eYX,#ROYKhO.9pCF=Jb!O9>;I%TRl6Ag*[q4;4uoHE$(WZm*=pl`NaCMg'En@2G@+T\
%IW^'^H'93IjGD%DV&oW\LECp6RX`r3hgKYH2ZNN<hu@n<^kX"Zo]_:7mn["Tf5KQZ>((jIH2PSEp$0`d(T5l7\EtqNo!cr*cd0r.
%3WAm*fnhoh\(o`!=)R^-k3;/HfGG^65F[`2r/U;#nhP[G:W<p#eSBG#rl(MUO)Jq7_;DEPT"J8(CO*si=68U+NF-#S5J.p5rq!V^
%2eRE0SA+go&$)ThUj3lu"8\UQo3;1U?&N+6aC26,1W+^_>k(&Ls8<D_]R+JOoD<G%H'eOKI_9sANsC+RCJ;G_<e4WDpn*?>o&_7q
%k*8\mjaZ\Z$Lb<;3r-C80Rn08bPCCl%mTjas'8t0I*$lU$2r9!q=2Rf/>C:(I<G.:e]2$-%1ai?a.MLhr28$?kf;$!oC1qLo=WWK
%lY!D]cRr;iLku'RLUTJ=a3?jGjouoUpWnk[hjg5G5BV,EipGFD[cd8H]DD<'j6N1Ohji0Fkr7K_dG-a7T78\FOO)mjVoNHG_#%62
%1I$7j`qQ5;lXTVXhp-,bq:Cq956(3MS"&`E+([or[qhS6X.-:g:Tj9!rW7QgjN:_Uo\!CH!rIc1r$="iY>8Nf*t1*HlF+ET4C!B:
%:KAQO"7n%TVL7XWb9'[sW%KPj^-9f6a@k]7=68o3ELm:.*.G6nPL!!2T3f6VoB#*/(]:mp5JB=V[NHTRn^(j8BAdR*j">,P%+QZY
%3W:1k1KfX6O2O@LDaN2rr56"9DN"96kJ<q3p?2A*j1)9i-c*iqjg"bpPulj5K8-Y-U[^g[o?P;@]QnpSr/:L=QLPje\-u?)f<qmC
%hprlf)9VO9n[h"gED`jXgLn).Nm@58DqR5@>ali,%K2f.$a\YChA[^+K+[P/ZG#esmYPhYGBW)n4)`<*Zu'Oi=H9Y%jUYbT_np1.
%$_ggfi9#a*i=GB\P9I^8rDr"AftQ(Uo#m@QhjiOg*IG2C5g!Hnn$\jGUDNRCiO`a<QW8KSIWiQ1P"=0$,/8I"k2m18\_Jh;I<kG\
%%QiUAD?B\s^'Rh/WPq*jg-tg<B]F-=hs\[IoGQQb-7A[RSQaZK^S_%]Qgj`.VgnR-o^^0A04](^`Vn5t>>c=[`=djUeSalfB"L?t
%q.'kF(0m/XdB.9=mE.uC_KbR(@K')>gr!82@<V\><>Rd=),Boh_8!8;s+"%=J+KRfSt<S`A)o<=M@Db1[m(j^Is(G??bY3#GK4W3
%W8(fa^8Gu@X5#]/]jo=R*F%+9+0%6Pqs"*$YjMF*p%lA1pTH]4J%L9Q(9&H_"6p;s%Bs?S/qp`t+aD_\r-u60f-?gs0G;.<e*=."
%kAN$!/s"uD?%)Q6DiaYecrth(MiW%n6`b-P6]Z&B#-!40>!Q(UhDN_f+u38f.MJ<FS]88NMrDC[AFJrL9aUHu.-Ls[,LR;TlOAQ5
%Y%%W3QWG@rV&s(Krk;XA0t;+@_>_^iqUJgeluIt:majhu_&22KpZq9r@?b73V9KqqM,bYr^jY]/m/8,2I'IlT#HWDgDu2h\Mea(M
%orn&br%75b5H^$lhk%!b3/(,4Y<JT9d!Tok9A5>=IJua_e<l4RjGX1)17NE*+LKOnYX.q=Gqt@SVS=e=D2/5Q;eVOpA:ju-(dKVj
%:^uuuYm,_iE4<X%JoMs:`V*_[O(;?ZFT4RPn(F4)Ot6stcPs.h6-(8RlDj9TmZti8HgcY'8-fc=AnO<?^\pl*eU[S(k1hs9G9c6Q
%Pa'EbT36l/[uh:]+N)-c*()%[J'j\2+`19b?f8it0>WDN*5'FK2)"V!b`!)PLr",q]p$5Uq[a<lp\$eiLRW8_9/,?/ML6`7"hqg.
%!9o'['4-+q'V`eJ/.?&#ir(sdnS^1Qrs,gmHaY,LlO(hDN-bS=eaM[7Jc#[;r?o_O57f!Gs#54"s-j;1s3F<'rr=K=p]&XXIte^=
%JcEnaiI?Lnr_eFa5BJFUQ1C+<k8&O-(1%*Ucu8PoLE47lqFeFTE!Wj558&[Jg'flfIX6#4e%kp;HPWKKirGlRDe'B#%kZBa&)BSL
%r]8e"Ti((I._LmriifG2p3QLknSOMpE:G;bDtJt&s6ZKO&Z00dC\;#QI/Q]>rV8Y5?tB1h&a:g_UDU@!>#12"<Qa87QGS"Ee6]]D
%gQ%]C8_EmFdV.R.Q+DU2b4Q!lN\k&1<%?.sV(6pD?isKA@/l"/%GPOp-k)RA^.kaf(r,iZce&4Z@=&DTK^GT`/B(b=A_CD"R\BGe
%KuZfl<sZDDjTgCA#A,qZ%#r"jl]]VunG3pr,-Jd!?S224?@4.<c#Y?Fi)*QD@#qFni0+X$N]TM$,m,brP5&Ppc6+^"+*Y)>[.IcV
%(f'XSC[D$+#9?,e0YUc(^4JT3]4.h7F7b'7C)6q6HQH"&Y1P-\4'_%6J,ie\$*96iZ+Hg6]<EuMQKfuY%NafK!6,kh]$2N5Jp'?q
%'%_rS/.H)m6]8;lI%_Ji_im>_4IFHuDhAj^ILYQm>MtFQAhY%QLC6k\\A;R(pa\Rl8$JiZ"$IJ^blkra&Q'-(_ndU-cR/;;K+n!-
%I%+4k8%MCZ^.+WR59V0+O!X!8Ubb%I+:N`TPTC969LaSM3P<kgPr4@"<*=)M;N52F?L]s`<g5bci(D[KK7TqJ*D!Gk&g^$STTpZ;
%ab\GV\o\_7-b\M""#a&;jk3>9qLp_Q6qur\>iTTl%kf)pZ"S7iSqJ#P7"G.\!lL@)"eUB>(WrPZn5kps]WsYG(H$b@+(("dBH[`=
%!Ln=+i_,(qekR>>4q;"]1u'KX[N<P6_L2bG1_r8&6*)$pL-ZkQWA03+3,:JTV;<k#+V+t4)i-D"N=EFSDU7k$n/YO]G[81?$1[ON
%%[/TL:!*L#q4?U[pUa<Pb8H\A%W]@H/NU6YI/!lRkmu,O1>d/_.)_sOV3[*ZK&?hRQ3e[BD5%c]&X;d4c12R-m*Ip:ZT8`fE.IT(
%cUarD5!jp3#qr.7k_:U(*L>)X5tljX">><7.+iY_jt>9I[08aN&3'gjojHGE5_`a$N$O?j$OaK\Io-4^3&k(hE(C_;3-FJ<-#AlN
%pgC;r7jO=]IP.6maDmf6e%uuAS;m&CdY\@c'?]:)!ugEcFZg4`W?X*C0\G+U$LU%oOtD3+7B[0:Ju,N8oK];3Qp-G>@;PKq6Q%*X
%3eLj,)L.R/*aSo8_^OYDENh"6kc8tC37Jm**K1[7odKK=A*MZ4^rI>&>$?3+DH).YnA@N+"[pd&0ujjb!oG:Im_GgML0T*nPuO:E
%/Q/<:nLS#eIDsk^&@JC>*F`Jr8>ZI]&`&&Z7a"e4JA3ahb!K6!8>2J.._m*&F8/c]W&ZtRIqW4c=WWXectghIp+0Yo]N.`GYsV*]
%:Iqc&fAl_;@cD4c%Ui?l(>s0$V,A;"6FrHo,U#PN*sR'43IG#/!WWh8,!Hpd>$JKHMnT0uZm#N"N-t6=jAQs-%SIr"!6*X9a9n>@
%OOj!a?sk:ko$$bHRqD/@&BM_>bm6@XUV(E<Z*ij7;-p'1L8:Xd#fZPo*QobB#jOI49^8eD%1rVU/kp!<c.O9-Op*OMU;2>*7->V+
%>%S*f`%Z5KP0L4ac5O]CJ>ciq%oDV;^g!U1D1%"u0]<>P+70GkCas-7/.C!1/@+raKO^Js[:(q`M^6JoIZ1Du+iF;S*9:enO^[g7
%Eb4U523n9\'jO29W4s;>_bMGo*qVPPW6LCjG7)U8b-qJeC!K*Ed`mHLnNZ-YYY%<G2Pb'&jrcR4s,imNXsCWs"0oY`3>4T+qnYfq
%4?SI"0r1gLi7Q!Hb(a=q'M?2na7\u%p+_H2kl6V+KkfL6g#*>c/s[L*/Hsb8,S?0^$ag__qM'h;]rngdoWTBV!ufeJO<b2rO,2Zs
%&OU/nCB9)*(d%i9TG.;`U0-qm'Jfi*!(OQX*k(,4?MM><6^^r]=kqaBAo($_N'%jMGJIQ.:<41Np0s_5]=))Z#*Ong',CL*WYf"<
%Xh(c:5[".=*k"%ZI6GR'.nl/>q-_57=G;n*pBC[!aA.lU'X/aD:EVmlnNQLM_Z(%P=:T%YPc+$>^d%@[J7K54,YRGf,rqBW#gA1_
%IL)4H7;`Hq[N'Ng@+g*!U8oop;=%iW%lf4Xc_LL^\n#>Bi"&Q@^Oq^S2,+8rfX^cm-"9D:\]3Q.K*Ou&$uTL;-;em#K-LD,M%pWZ
%_&6cBNFWRMW4nT3;N#2[W#RQgd$J31$AK3CBT-"`pPn>Q5#*ilq&%G?NlEX>+?bPKKJB!(H_kDRhX-;U\iqNtq!_V6hqpY21j[pF
%I4U9=qBoWO)Z=Xf*:!Q3ST:XWqL*1X;Pi%WC98P7hq>>^\O%B]qqZRT^+/ce.+MskH`]1,)MLDc"\#%QI]MPSn(g@/8tf1`7Gkd7
%VjHqmQ8H1ZXV-TElt$R<!^5FR!;plp88OLj(V;bUX`ENeYF!7@s7+NN6A'NVfB^qEYR0oah?)W2n38tX^M0"-G,8BU;=7DPDr)?g
%?fOAa_%VI-e'7=ZDhUr1BrF@D\F"2<N2#RVpdOq@L0.Yk?5OY</a*/':t9A>.mLjJUK)WCP^e?5drbRBZ,'n_=b[*<T55-Rk.&jo
%UYYiUUVk@VSOE"O,=R!>Pb4YDN_aKjLbjL#df7o*iR`e#ibq$t$eY0V61DD1;SUt%^&/&Phg^kY(V9jp]qGo>55[F;r_N"m/Ej:G
%T)UEDmT+i;$deYJ!_M7fkF2EdcJEb!,\EPC?_?bt<m`S#IXgd_l!Hc)`uSOeda`P'r5[->qQI1X>@Q#8E515\+$\K2++KE$aT-gi
%gA?>'^XpYNU\FYfl'?gUm=fJDI(HLjWs>L+HJJCg3dA(tg>`!)Ii5;=`8u!>h^MRR=T%pF0IoECr?^%b;X"q=?uPu_()-VhMjZ!Z
%TZN7.DQ#F:^YZ)Wli!0TUIr#Gkj*8cE1k^X&7]-J#0`uoRk?ku.a:Rum%@:n>P^_$T5Y$Z[5W`Ch+G.7G#[]!.\6F.<:Vk&O7$I]
%,@1$?]lq0b>pnS>IUqEn!d>!ra+!!P13V#ZpY1FD557]*B'P^LpXuW:RAI7uA`LFmWCj9^7t\[mKgsn&VItQQ\Qr"DD:`X6H@nRU
%D2tIh]iMX7K0A>UY?.3Q"_36]YLk=Hb%!,JX"u*B*]XTrNEqCU'D?-M3S"MS&)WEE$VcN]dee1k_oide2LHa%YsGQlBQi,6@$B"\
%0M9#@efA.4ppW&tR%`]Jk@Udeg]GoLm'OW.s)s5dgDLng(i'rA5iCJp9>==@U:X4`XoiqbH5.:!6?/=#H@oB7[rd)"N1ErId2U8o
%lb,WihPg1-'#uQ'*Nmr>FJdF_XjB3PCk"_Xa)cX09@/YSSQ7i&W>%,d:1qAq+]kKZPtLkJeNPLBluhO8,;f@R^CD"SHD=Ik1la'Q
%I\SuVKq[A%^kOp46ho6<!bKJ^^OVdogSt*OBmbFRCTJE](-"e]\W!dG'j,ZEA)TB#n@6p!..dLZS!a00b]`7:O#:S&G,J=i1f/d`
%ZlX+)Jt=2^D+(7?&lujfP*4.jc$[:R0Lp:ekod:igCL5P%;iGum+',V.u!Br%6q^"%k-T]57)Ub%,rRc'YW6.IuD_I_db`X"gok&
%B+ocpjrR;LpQ+0D[#ucJA:u!f+,afFA?aAi[;G-Boin9A`e6T*3er0ZB=LHejCA*HQk#Ju#dM`-]sGi;oI2Z_D>Jt/7cb^7f,iln
%5,B>\jY-i=?S1cno\a_e\tI]eKAZ<(_X.m!ZJUW6Y&53>W8>o3Ca#X/c=Zbp/Lf`tk_"#!F1KXKCUNu7U?#WB8/*a?ocg[3?;lm.
%-,ss1a1jeUGPfKu^T<cWc]Rpc_#qpF"$@J^^em9^/W't$63\>6h<up6Rc[6nAjgOsf(V$(*fgRPldL#),E+Z[/'ZXqqT%kqr[HAM
%Q?p=+C-CKZ?5_mPgrI#2_otM#fZI;U@kLB'b!eGJLE$2Pg<DuB$Nl/qiMfgN'^NH!!qQ:<Q%YqjgqNa^nsh,&r+T03$20@Q+Z"Pp
%rh[tem_3Hi5$6+onGR5.Lm+Xjcs_CYW<DMZSN6\P'l:@7D`.K@Mk-PlbGUPJ_i#I@cH`-OC41@+NsG"[h*3T1nLE4)b:Qeq8.`],
%p^d)L$W6UX>#AWA$_;5+hZf3?DcU(Lc!K\"'<TPiijUQF_`"`cG-0<jo:'@J;S,g&j!PMk^*#EWWRU9`Fir?mIN0mq)Qcd_m"237
%8^tHk%@N6P6#28ljAueKg:dN,aE"+]Ir)hRKKn6aX+Q;kgQq5M-UC6$=,e,h`6`EqJ%=B%QUT.X_hGD*aOPQC2D2D+d(G.:>PCc#
%`)R4kfftR!%4od!MRj?`[2(oWpDnSlcP`k`;55a;2__dlYe'9+;mk:OPT0!b[5FbG^8'E>IQmcsGdsAB)<o?gX5i5W([J$(^1bD'
%)58iEE"gZ@5@,QSaflKWE)L@Jk*i!INX]0s^t+Km7jNIHn3<Cc,W>\-oS$?=(D)gL8F'cKWR1*'QG8]'5lQa0HW[4qh=)r:"R"16
%4OQ<AhiLmJ?gPN"Ee`=jHOYU<ioNeq9CBa\\m9Bq`;=T5G5;#$gLVY$`mCYm`RrggV78e`<XZMknFA*I-Kka3>)c"*Co\`VoCFu1
%C^-r0L&!tqQcFu5N+G)$gWh2<+FsqQ'IbYr?W5C/8VN[CJ((+_F"/38%mH,*hjPO]TCE*rp/[Q0B>Ju97pXUT4fTIt>`66?N76PH
%eLGJ^?#Q/UM:S/';?"peV3aE*rgN66(!"R(#&gWB\4h_)BFVQa)[;qY0dI;p*iN$*F@RY0([VRSAnu'Yn*s/TN!%u9as,c0rFY<+
%2PU?A,CKNd%<A>*f^/Tt2>A=XIcEW+).SK!5$AB%BXQ%^mokrZhmMZK^;=9Inb3LdTG;F]RtgXWH5kVi$KXmXo$)t"JM(cT*3f1"
%`eGLm`boJ<O.(4J\V_*8po*H;7pb:I%CI)J60R[qL)b:4VJ2h)Q)P'A0XOmu%8;.!7UClZ#9-eQ"3)0(8=A%=6SV-t1V\>dn1Yb4
%_-k,MiKE/=!J_YD)DC%"?\E4/M]-trgjqoOBUE3+GMWYkcpI2:ObN2HGl$^KQXb3SAF=Oi/c*TSYFB^-lYZ,=Ra5?fbj`'T>ph\G
%_eU6gLTOTs'>3:4CA:@5&'sOAR$TCpU"GnU`9n+;AW.(r+OYCRW2\h$k,.TZiF'k$'Z<rr'$9g!K<=cojDoCnc7\I%"AAR-<+dM*
%>htt'Z'Y/.Oj:KPR<CKKP)K4Z?;Su:hYcX,?hS:2l1LV@T7?hXM*rGkOiZ>%GU,&V2%IP#mS7["cb]WhRYXX\%Q=Q=R-`b'-RnNX
%YlPrD%cO%"Im'@(XRh=HCY6EsT&%+MiPWkJrL&!\D/S=)9CulNp6XA"c[B\YE`H;]5>1W]b!38fn6pJ[#@C7%#>\@p'OAO>:LKXa
%R7(d2rg:T(j%&E6c[.QtRbu$N\P0\`Z@IGQ;Vc0K.,KXgEC&LE1R669rcsBN`cDZkYI""t!<31>>1SQOqNH+:^tP%M12)cq<,Yk;
%<*-)*b8!gSnbdF9T1[`tCNFZF+b#M6H0nAgF6P[kpn#1D'djg$ZdkJ'WU+fc^*B]k5&D..:*>jkLt#sYe)$ACam2C]iCk6iq<)jH
%ZBJ7&X8]%mig3_%(Q#%+C+lVBF!f6Ss,RX.O79NVO)XO_MLe.P:3HV!'B=o7fKB8?42A=5X#&LS!.V/@`oDu%7/Q`Jc0!D]_&a1_
%qXAaS[r:sQ@Qf-bFd+p:Y>(p9$PO#PBK#DUH5Fc-5-O%E>8MAHko9;WIU4SO-XSOmkokp&%(hSmL*I5&TKN2NRX/[2p@HK'c$cFs
%94s[hb/RmA\%<lJYA5F;QJ9OM.=8@-qX`$ekH4,BCphmb1mXS7MlGb4A2@/6/E:j`n)\.=Of``W]\HLET2%$,4ZtH7=(@9bE\1&D
%XCl`kZb*K7.pDQCeFqul(!cD"QAu3*f@eF>jpVZbDBp0E]&?C!4`@#u[8WXEVMIA?\&]uXLKcJ,:+LJBO47Y'S?/lk6mj$KAnHoL
%5Fr_<<oZ,^2SH`7qY"=iM>g)br+BOa.cQQsYRr,?jc-0/,^\qZnTH[MaP'Z*=$!Jp/37u:*f9;j]LM$!K/k-!5$_ir\Td`_s-h$T
%[X@C:FWPJ>P25>sO'fkga<T/rn`efIaM`IL0/=td`Q48K>Wf^*miiRl/6_A%fsShB,apf47HV%F&s:i*GWIU0G'=^YhrL@QM./Rc
%=a7$O7')`-_hdN&Q&%TNRuH"u;\a;MQa\/RIc<!>M>L&d:[Zr!+Ra,7(/H0!Oei]hk':KKqV7"1Y&<Vsf$7;;,KZg=7FI*8fgt7O
%i]`NpmS$+@#Hu7j``2g^ZFSkaLht-/WQ7hCl9;M_(5kWlVU];>YaDF\N]20QaJj<%)EI+JNCPU)o=;rmrCRNs\[a]m,'Sg%S&iL(
%4!,oC*?@Ym([]=8[Cj'aWO3)HaRcdH&U@NlI#YN,'C1e4deR[S2_R,0,FaDdpd@3W4$K4,Ql_m%?(?qq12GHc]K>d?DXA4*`bi!X
%!n3+?:Q&H;rnblcpsNXCApe`uYWSND>eZ52C.H>)q7CKVI.MNf0tq_8Ys5s0hK?i!)McT-e)&d"pn\,rh4ttLj7gTVqsiYR9O1rX
%PiMF8(uSu"I66:Ln2G?UhTVsf(dIF^:/!`b[>AS1GWl^(<Z;^h^@Wf.Bfe63^D+6mb7@7rM<*(5eO4S!CO]gRfZI"VS3O2N*8DMp
%'.6R+nVPGGkfgt^clSf-*#(FIQ,hpOM'ok4"Og%$O#","mW@`6EdWA=3]T!gH(9iLXk+o%V<t0P2feaM);O#^:9JKD,EnOsR$la6
%;t7ucfXX(h1uDT,4ARN2:YmXm*D@4a-a"ht]A'a8kD*r)ZJA_\9LY9D.ko5toYo\4<3/<*1F;`%bph19`MSsqVH9\D<qU]P]lmMI
%g>-(l:*"\<jOE:9mpbRbnbbFJI]BHJVu)7%WHP]A1*%e[SEZI)o&4\"qP?@BGiMHGM[/6f3a#8'_DKa-l>1fnpYr_DI53t#14=;T
%?CWWMF_CQUia,D>Zfd20IQVp?1Yk3Tcbq=A(Gj@iD.7,AE9Us]^"m^@2YW9U1C#k>CGY/Hg%NWq^U?4&<L9tYQ^uCuRGN"*%Ai%-
%l:PSF;%5-i<M1+?=.]?HCbEJE0tRfKEqZ;S4?\%4;^fnV\(WpMNO5NoHg0qfkY/QcMCrFK#>oDPB/R8Df1eZb?aJSP6/oEp^"CJt
%7itosm:^q@"K.*j2LK^d.f1-R92&\gbc0@`leL3Ko/sKj:KHTfVd"kcb?!_B%Lf8)\``hVoj"\CIiXG:+)bZ;Dr&I"2TCZ[m"8;t
%mEK8_Z1He0:96/+SVfStqMA<mr5aM)k%F-1ddo6/\Mq8CDdC]P](u4#I]5C`IsHBKc^,^>h#'h8q)gjt4F)t-VcI;ID_[i@VtOHC
%j4fQ..t6X;f^X`doA01_ii!X]5@.KL=Sd>&Tr*a-7'bC`BbK05Zfd1OS`Rs]@Jb-kdF`1l(<3iMjb<KW;/sE*:Uge#rl3d2raO2[
%\2rHW>6&\c(L@X?MUq-1C>#mg-_@Ft[ue)-H3Y,7fjja2.N[<HeV&dueE6*-9I%J^F?uuJ7r)S?@-rj#Q7#*uA6P_<EH!8&?L'$h
%=(Yo^[?YOKmEFC_]U2?nbAu^sPHR%]1NkU%gpE=[IBYNq_l8(BV75gG?nuF\m6(6jq"_W-dl7`K9[$XBp84C_bLj=G0fRd,.[Q?)
%Ve](Oh:V=(cOJ15EHaR0R;u(>p7lLSrb/jGo5gLlRnKq6?T`/'I!XaRSK&[-X(#SITjEApBlEFZ;-jeck>B.!hec_FB<1UV.sG0<
%?FPm9Ap=:1?f'FKqqIOGj'So@mJ6GBjARb;T9Oo.C``fEl*GPPR&_eD&!]`EI"-EjENXb9\@@nJO+@"/>@5%EeCoiRPEd[mZS]5K
%BIu64p&%]G44@IraklG:Q-ZpOQ?i`#I+asZE0lcVVu#sMXgGWDn8G&EYLT\/Q2''EAn?+f**q5Je4M7cB9V(#m4HprSR::BXKH)l
%\#Xl1F.96)=1_!)X6k4[H7^2a4KkmTF`,h)gH,XUL&?=AXj\m*abB]dKk/?4B9L<A;itVdjggq>gtb/lm)!m.Pq-3*VTp:0X/W"b
%67k@,r;;ch%f7pDmC(P:hkepPdd9dY#1I)qHZO?W-$NBGa1^>1VHR4hb>)C9b?8b5YFFA%:F*6TkI"9trNLX=>F8a!kL0?71j=6Z
%8`f5Y0:2L&o;?JTBqZ='pF=Leq;Qk,],k+6Y,o6Ts)*6@\qeb9hbKG[f3`%8cA!'MB/[%#S`buj>&JKCAZkR53Ie?J\s\FFT/KKK
%9:=&&@(il]mE<2Fe]L9rlhI9!]2^qnXDZAP?[&t\Y3sTDO",h`KP/!-1[B6;G?4,X?GbMYSk72oeBY4hG,$7%[_#^=B6I'GlZ2_K
%]bK.XH&oAHPfd;#S\#P^HS<Q$g&8j,IVD#nB?C,<nc&IcC[QK15h68U#FfKfrIb"(?10If>O<O/q:>?"IP<hedi;Cu.XEq`E*s]g
%fh^JPRD5tLoWi\PFhCP=5!<4Z3%?!,m75nYOn"pnM1;h>HucGN]79D(WtnLo8nSg8l0I`Ue#VNiiG%Icl1rQ:>7kM[[FO*>l?)IY
%4ISHW@%-]:A+fKlb+BS:mo3A0(M`"(l!ck8]6*T<]N_t+4\U0gg"Y!8jmBJJY9J[HokLb?ZZ^IH^Y$,Da[LEV7C>4$]kp!j?'k#;
%X#JFk;WK/\<PQ,U.CN;r,I`MDR-&R+Dm=P6H?d)DgH'%nG>:Fuh!IV7WcrT(mdr\_HCDJ'S/'n/l(Sr?LcV%(LJ1W/5MTQ=8qkC3
%i_<i5H$3N(8fergqO7_F`MK>^KAp&0m%E"!.isuR^"sW#;`a?(lV_MFZVX]oO&+lTP1;"rS6\W8cBdQm%T]a\Pt#BMW+p7`QE'iF
%(]EW?2/,;/db]B,5G#T=I."Ee2>aVg<'+3,3NG$/4.Ws('4%U[Sh=@$RsR51Qp.L%dcT$K:$gu@rOBE/*)&<6cY(pqpY:13(E1K-
%6bdWo(R:?WMjMt\jRViabFQjq2.pNRR:^>+gb_Y3ek0`79CuCl)tnQX<a8pJ95B$OI;jT6cu-fH>;4=&s01e&So5Ca3tXPOkp-qO
%B:\o[DnR*\WWrL\lG/DY^pD9`.IZ#Ya`6:Kb&4uAX1'%5e=/us(^<!<(>@q/(aRibr;K"@?hjS;lSnV8^<eF]>+L;sBL0\.[`>42
%is0)%$bb9WKBPe\as6?I?+\U`["^83s$ro*;!Cq0+%DXQ03`lAk*`p&Hh(-Wd-?Q!]cR"0I)nei'g0WkD#XFD=(moYBYKAj@fQYd
%L?4;"O6^1X;]bKunAd*=Uf1s9^M?CKTGkN9T]Y3s"]3sXYic7.H"6O0="/"82IG\Ac7?l?HKB>a5!#ZC\s9NeV_Zi(<Q9+fCogk*
%iKaB0f^H4?F0&S2H5\:ja7(p\S9WCn8mG?Zig9R!@PCS[*1Id,mF&f>DjU?\%/`Vr5Ls^;f2cso;QeJQ$FgKcoFYFKXuEoKfFT4N
%O28cn!);,G=KdD\Pq$9dWi[b02%&.-%kJ*C1MYE4>Yj5DQYO%gc"<7k)[:rbb^)IGUHYcj<?3WhhAto@TCGA"`$Z78VufF@FmAA_
%b+;(_n7X5:p!n>#FNbT_dLT+NW:IHV\b.$t,<_RmqnDmJQc2.cks=:5Z8kh&o4c[;:AnaK`?47N9^CM8ZW4#J=tc-l*"1YYI92g2
%@:J6Jb"Y+^J%i4=7E<ZEegW#[%U),9?^2^dR*dq-+mR?-,@h-uXq@jmGo5_^KZGi"#$BNr>\g@lqX'bX$tRh[mrlBY,hc'$l"J,0
%?1@WX9c/0NPVcB^CmG*YokHXK\pq$H+-uj(68gK]O($-k#Kc^0.XSm!?Y5DCH&KF540Ec7IsaPl?P/m$'@TuAjX@rn3U*$NIUE*O
%NUVLo*kAoPP;@[.+C@cnDsH6MM4bsZn#)*eR2p!qS';SMj'/m>.H.eZ"=;[Ai!S(k`C-D_VlGD4#VQbN^UKkG-qceHbl5I"WF(mX
%_\E">,8n1hnb&l?P5;dXq)(hTlUp>1>Q'4:It=Tl*L:&ol)@RY<@mcc$@c$hXE=F/B#n&J#LWD<hS-?!H*WX-X&_I;f/bOfd&W\d
%qCfg"U#,R$.Jm_.UKEcK[po"5SYDfnEkb!iDiL/\q&[aZio$#Ee[V6Sm^QWBa]csG&Mi;U;=PgQI>nHtp+Ki_aQrZQD!fc`eG"_>
%fMIV@;>KlIqAoJuL)%NPFm*bg_Xl`LY@"Rf"poGIP1=n+F?"c5gih9BVlsURk:8>]Ko>aYH[7oJ:3P2qC5\.taAtJ[5<G(.(D>Oq
%Fh3]6'8su]p!m>\D/n`NAiJE-Qb7]@meTl!E@*6;RsiFCc<HLSV7XZNEd>CT9m4#-!_ee_g50oFX0#_)ET;!c\a3:U1\I$`;DsZ)
%H$hR&:AGMLoWn:l7IP!)Q[QG>4'1tJe4XSTS(^!meRGRoU7]amPNV2.`lpG:PHA"m`=GJ.oRa)eG'JG!3lrYm5+cu-h;W9lq)Nqo
%>jNeD@bLRVIXZIR>_Qkt?hjpdN,81\gr!CY`F:]1lXahfPo.?Y_fW=4G$^BUCGY-9&1kD^\U1u)_5HO!b]cP)EW9`.FW@#enff[n
%jZZ?O4O(l<\WV;!S#JFB9?X:`HTIJLRt&4Ak@m+Yl-HK'D,&NG8u9B\I]CG/eX[US/ZaYXf;VP0/Cs9ub3?pqg.]-m]BQ5:Ni-6(
%"4?2X<Xf`'C?b(CR;/%"?=GFs9+0V"bt<C0l+/:[+\ULjmMTEXS#LYq[T-Y8B,1hnaC9@)2EkJ>2nXbZhS\I#<&1ej4E6s^%p[>D
%AiHpD`2]/<h8P]+b1DQW3,qUOXu<1c9<2fF!fuGHSZBXTU1uRa**$uQTP*@,9AE;/Aetfte+lQ$We8bKr8N`+TdDIQ<?0n<k`=A2
%IT_/(50n(eqojHUJObojEYBkr_MYIuk2p5um;YQ*FM>&n<.<Q5UXKWQ%--`Q>r)qs8oKDV\/d+dbcVpoX,97u2j2JC'=onWm\hZ/
%<(`]lT46L=_Y.cJ:mdYEX5`APE%lESRbH)`&$jaGqJ5ZpG4?0ni6LH+4X9SkQ*56&,'K8q/lMTBm*kcYVZ*A,QDuT:O82Il:&kc*
%+$B"jg_rlM+2>O+VtP>s[e&0cH(2'KE6Tqa,g^<S%V'9eKid-ZWq$P>V3Bb\l=?sIJ%rNQa;r-N3K/kk`!gbs*42?SjE'ah4S:*E
%QIiECr[)=m*@sE+kHdDuF7ZYY/%BqQ?DGR^5$W.G9Km7"DP-EO],=)gf$8U,IS17./B?I;&,FoDFs:KLT3TM%jP;SpA/$8gIhYlQ
%Zd\;TVP]BFF0V9(IR(*P#F@"T2TN?`&o&&hlX^tm2\F:seoG&7WH<HNnuh'LgN,@,BUk%j5/*VHcPM4pN[8qQChI.EeB)Sg#/Xt0
%aJO/6T0HL42'$G@Id'j`H#h>rld"pFo'%1UUBcdTI+GuoZ.8LPI)C!/2:u!0Ra5PN0<O72B-_g:@cM9rB$Dqj[-,k5^%+h-d6)3@
%:21T/0ZJ8e*2&jlDsb[EFPOK'*E?l2d-Z!;X^X@L/NTY/WhWt8XW!,9gtBZ$Om"L:p?d^-:HkpdTY,cq(7j0)l?'&U*Gma+3]afh
%peQnE1.es+?GL7Z%9cueEr('i?-b1-MqK7NIs!SL(e+nsQ6FX-XC=CQ]CL83coc6\7=q,uH&o2Fb43(Jr^1L9ZWdV/?(,`]U>NIU
%*C"@OoX@-O+h>7J8O/Jp1QVi'dqNgP^J>mE:Ro81e/2a85[KVEdc*)*feB0R>V<5IB:@[Sol4"HmnQgTFC[.^Un&+`R@PUP>.(fi
%`JRYE0!:',g!!V*>93?dBa.9<N.7^%/nV%0rMbg$j<8ua_VNHF)2+i3[+'+Yn%%uTOhAGDkHN&`29%j8_&4jZNNMmY"7\3-iTM-#
%E;?PCO!SOmb;l4QKc<e78hg("468WcZFkgLh%PGnd:e/HBT0E&15gTC/,^?GGAO,_]2PURCd8qB)dnl`dfLDLc,ZZu&.-C1dVtZ:
%2og\!0R?nESF8[^(iN0d9Z*D4?\?1/,D<'oN3(C?#(P'7iRI08/0ao[DH=M:(1&hG$A[\F8,m,R5Xk/[H$i4'fQ\e!f770k`#!iQ
%"T9BK/%f0I+G5fA_61'5r^V3]_m1Eq=#A@^m$,l&3',(5k]/H;e4eS7Au3KLmR)RI*8/E\Xq$8Sg*8@N+0`se\AX"rN%h6Z(IebY
%\A+'lYDJ"<:5G^.%AeIu%;Bl,O8^%Po!*k\UdZZ5njrR#\kesn#]M#qI/N/Be0^\YSXaOUo?!EC$2=O$3NPGs<"lY%j%fS^pMqu1
%R7j2V_l`aS!f0X(4d1:hSkkk?B'OU7a^"*+FddI-OH&5m%R,)\L2E(*3Oq68Xc7Wh[++GP4M&NjiPB-uAt\ccr%Vt2Gr@GtA8;(<
%X6fQRCO14ul2+*<W0uI;*oD*tJ#=42(GRsFN*M:[4f`S;*.Q&=hL<'j*k_bJorO]7c(?P_e\$hO\X"FFI*>XREZ5+EM[ZPdIPAQs
%[a&dgr?:WIfWkMW'cl5*O`+7QCjS+VK`g/jXbGT+RhRI`%4JIBh5c%EH23$S63brSke-i/F"ufb8>pO`*';^r*qJ.Y^k;.rM9^i>
%LXW58D)P[9V9-RpTP?11J">UcrjM@,2K#hTBf,uK7#U<IjRldSE9al%VD:aQmfQMu].-5IX(j_Yh0ec#"3dJ!J]Q;1OD8ZXB8rIG
%eGe\jO?Kfse*(0cTD9IcdT*.+69\LI2q6kFq$&Ot^ccqWeB35`rHYCEI!3#YiK"V!Rd[Afa,<4p>B9F,a5-R0LKU4r_IbrRgdoGX
%qr=_**Ne_PjComdmd/&#"n;3OHkRK]=3hPJg.c)i<d]C88DlB,)c!%?83cR_^em+j3[(7LU>KpVI[2LH_&"9>>DqU0L4r.*2<%3.
%FFH5oP6a\KnoqQa'DYn>O6e<nJet'DCOU<_g@n3$>Ns%X,\W7^QT`%3roI,EE:<Q1?#oPUq3.r.gmY[akC2s:g1_oQleVM3kKVM2
%4l=K_n"(Gp#q7[&lu[!?cJn9f)U5KsXXu]/".6?n6"Y1OnGRNV,OP-PQC'o(7Rk\^qCWL6D9'OI:7Tp(4iQ8]DEc_khqH/t7HY[&
%?0C,Gc'OomY)`)Kqe2d[HaT'\`OfaQr%L%B=Gn3O5oU#(7.*FJqH^%0,G*`VbWTW3HVZS_gaY5l3I,/BT<YY#WG,7e'XRUqPO1Z+
%nnU-)=p_JhG`/\=VV\F*$9uJ4O0#J=CZ`m'5DTLPNI)KCAT$/Q#,>eB5tr,K+$kr1+2'f#V7&$GREonbH`rqk^BF._"D>ckSR8_/
%R>hMR:@V@q28K:qNjbL^\;QW-l&%s\`kb!QOZ3t-k])f&&X\=9gcP1IF8'lWf<G1n8FeWd2]Jd$>"F&aK@T#s+=#N,*V>^L/mQps
%/K9l1fAtq,'u'9q#*a>GgHH\/kM4Qk[W@_hh1"l8/=%TH4k45K'XM[Tc>7G*U@?rNq`rJG:F):Y:8bFf0D4Y<HZkNB*R5ZfVN+D\
%k]j1)Xl"HhB2S(*)_e@$<Yi!1f/n%eJK.N#OO_Op+"cA7R@ZOdhbQpQAugHfFMj`@cYgusB?B3P8-(J!*iGT\14o%mlJusPK393k
%X%1uNCeducoc9W*q`]Fp4Ib^1_Pqb;QldQQ\!'$CJp'p&nWE9P,1boLqQ_.e<4N^ph0l;(([El4]3ssLVt/NaNOb*.2q$!j)W%=F
%f(I9hXj6(A^!b@.RjLdn]BD&ih%o`+Qg2-Wes-4il&*uqS%i6Yl-7I\];JKX]VD<[0'JVW)Oi[$l=)o_QT88s6QeGad>;+\8c<r<
%-_5W*1)om_<WXt&N^%)Bq3)?7+T[P5XjfuBF^mGdfPq-#Z9H@AM+G($r6WU9a!Y/cDeD;b>hs4E6qDDX8:169;ENO5/r8$V@W"9<
%P\q#$ja(deZcPs)kbEf+VS([S?FCb7/EEr`^$.I(%A#U:-X[>;?)Cf5rAd:".*7-C'`E;5=?\9OD0(M4<`bOa&X<LFWSC(f$]`<"
%]['Uh];VN.C?Y>.9]S"/gW+[gq098$\KWq1_8:9Yj!Lb9VrZOQAg+pZm0tWPjRU66Eq-g5R.T.(HO=>50Fdf)F*(_R9*_ksmZm1S
%d8?4])nRc.<H!9fp!)gQdUdZ,2Fu(t(IS+U5U0(Rag:8(Iq\=O[FNSMNll@Q3]CT[_`oM`4Q"BHe4n#nY:4L3dk@@)7uguSYu%LV
%4W&9BS7.@mm.[h*GMR.[^6m4u7jk30JKcaSdkCU!mX(Zg*!^W[Hpn7hP*cEHk=gF9GI!=4Sohai[&PcHXLQrsI9<,a8%+VPM7[*&
%g?KqIT\BJ=k[P<j6PoPlFj1u3On!A:@dl(!bGJ?io&?Wd8b]c]?!j/&JDCecNnfrGY.ET%9DR8cni8b(2^g71ZBaN5F<p^fJWCYF
%M<qe+W:+nqcG<UdInK*dZjkmeg2h:[[667gPf>b9:Z[9R6sAFB/%']gjAKlCq[c2Npg>"T78(>;bEEI%e9HG?R4GgBQo^gpIXnVi
%P]sd0LNBsf8@;@Gfh\IGlu2cnNA1f1Q1_Ys)m_i>SkMY'`3LW;YKu>e"pj8_<Y*jYUm\OL>5f((lbU`//j!r/\^>j`NTXMZkUEC+
%ougludZ;E/LokK!D%.WoeBi'Di?]kne'JCuKp`6cY)f=;BJEh!mY#p-N`GF`7'1R+d=-?#k7:GDO=DpGMUq@BY^N^1<;]1b;5dkt
%@fhiW<pHWke'$&*^Qsi[p"U(E4eck.Rd"'k>ht"0'C"S!rmA_i$flHjBSYC-V<Z7r1jJajC1&66?kr$[r6?VP^i>er%#q+T>\nm:
%"us8RJ(8FZ(\hus&uNr%5+3Ce$"lIu/iW@K@0?JqBZH`$+S,)=AhOr_OFi=kG-?LKTL@1a]3:UcN*`4`ZaWc'=BsFcY%a09D_*:J
%R&Z;@/fo'_J%aUS7!^s[]+mQRLsq^Y;IskE"a5;.*M.TMonCU_P0e!@b,FOjVu1$$EC`HYpq8^>Ck*,MZBhNh9'<<!DTu`/L3eM5
%Atg9(EkI:f(l\"FHp7?3`.$K+.=Y.5MEGCc"F:Bd5XX]IN0NF0F7FRZ3AM&kBWfi,^ZS8:?n/086jELe=\1^$jg$p/]fku#[EM+;
%G$Q.Z(Ml4EHt_DK\$q^E_n>TqDJ5s0$e)ZIdd8JcUu#P(P4Pk'&GfJSTSBN7e5=+H*tcVKMe"bm0qR4XZ@Vj"dd<*kX!n*0\FND_
%qb7LR*D^3HZB).,?_6`DeCEjM>RoPb\_$b"^8-T@PZ=EE1?(mK[''*_%]3_d8T-^a`<`]2gPg>]DCqW_hO_B<%jIa+j`9Tr;&8:(
%dZ(ar=hhJXBYrHpdY%<:2qbenp@Ag(r>OKo-g)r8S3M#W0SU+nU7VM:f?tJpkA^9qZ`.R,YoCirOWj2S$YdSR\rDhlcbQ]slN7VM
%Va/0@p'9Ji8ioh>S9cOboEER_V]FFfbP=\r'/BH)%Q^Y-F]6l^?@+)^9))$)/>$J9l3jHMq9//Ib+IS0nYYW^)rfSu:APCrk('i'
%QNJ0W>tXL&Dd_GpnIdQ"8(McA%_ABT]i6t0iJ$L^6LJP;T*niqgtbEd'P(#;nq6WHl?*(&8IM#Yr6;-lkG,_e<j&6mDL+5[XaA=;
%_\bE#Do:4_?jl>`B7R!0YB'/+s"Wo2g[QF"W8GiaVG=GQ3VBsh=Bbe:H5=/sAMH5S36E6'DjH9=cR[]'qW5X,\V1-Jq[YaOjg-].
%_b;XbNb:9iRI`@LJ0b_E-M"LtBck[`i+ft`KS#<l\dE":*IUmG=$4U8"#2ekobAAY)eFnKRpaB=5iEOMUi!.p)P:0V'crt/;pD_k
%62k<d<[(JtA@Ea_CTp&[q#0$sk5NA_>.cgH_JUiKD*%g8Bt:K[@=T3^^F7<F1E>RZM\EQaW`jFqqcI_p('+*Jk(/jo]"-8S"q5W8
%h4>$MF4ZVlj#MG6YdP""kpPms-ach_=#kTIDQ?bWgS_Y:h;R[BiUsOdYDD5H202^6)h#PIGc7>,a4\:',;/&p(O00>md5)A_aAfJ
%e;,F$Dk<tH(Rj<@RK(Lka7\S9UYAG+>5dU8Ko3HM\(%C#?JiEiZe9^I_r"?4Id1S1K*@p/VLMS=bqH(liGZ$]LAjC/6aB[Lr:ds_
%0er72hd/!k5NOG%r97K'Tf^6.s)"'*O,<)Q:6Ud%lL[::26>9O/0K^Pha;29K67^L:W%D&EM<.%gYs[[kMl6Ns/h>(p??4I/MD'k
%o@)[f-iP;EreN9.i%P(W1&frkrUR-,roEjn+8FG'I!PkHmpj3QgE!o?[Dp@=LG+_frjTE,<Pl0FRrR]G$#)KHfF*95Omm3r"5*8[
%:>fL^b=gL_lcX;4"Gm,.7QrH$9Ltf03RCM*Ei]E"V%"pg^4TfHi@5'ofg3LKCn&$E97IhpOLdCM$odj&<C-gRk1%1f!$%?J8I3.r
%]*[F%m-]]ui498(1?!Ou4Ofo[iqWuuY/DbP-Xd8&eZ^133B]<0qgn"7/9`Xth0h6@4+n4#:Iq=$VSGu0:4P^c?G_j,#-ogF@7qLY
%g0'4lSD=r%@*W=si(<-L99fbcXVfr\ZuG?>%<r[)/^hW\(D"#7CsMb]+\j4([+haQE-UDd6K(^>a)0qtYA2h)nc4]+4*rGC^YDOk
%$W[='I4l`ah)hhQ!dep3@[4/[?Vk+MZ=-9_?uY$1puD^K:mNF"6$[_5%W"oj4:i=;!XDI[F/2>,G@5>j_JVW;!6i:._;;>c&AH*>
%dSD8U^_OEjO;/`u9l>lB)n<CpfW8ilYVX>.'=J6]8=3XQKeOVXO%p:cddo$H\)USF0GXRT\;b8/r7S6*9pL6=FqKBajqBJkK^\_1
%D%9C3-=K0?V`^ITW"%#lf<5%)MoXb#(9E+r#k[4'b><+",3@aV8C%BSq:OH2Ypms-Zik21h#jGWg`it'?ipnK3t`<k$bib/?ipYR
%GIVu"-Y-@4cYg:8C&mkqm&<(L(k6*;^jm[82s7u*SNofE>0j,7J3oqLl5nkZOmC[$,@4d28BelR7!OAY)pcC05R+`S<Zk39+n>VA
%YdQg]fd.1TrW-EZVem#oi"9,A*EIhX$P0U5'SkLu84[Gi*QA>8J?1!rh#`pZ#B4M-+W(VZ,/aZt"Tnq`:3jXe89;3M1aa95$!GP>
%aTB?\8`Nqt9Y`)#ZQR+i%77oY?9tjYd?Y@1.NA]SOrlZp[jt:\fYFbplV]h&0#uOJNm%sQ^gM_^JQUWGM;_n1$71<66la9u+o'gY
%]Q+m?\D`FJKG')">Im@<[N6!IIZ/^b%j*CbN<es,Q8"+>_MeI9$#"2aM9fapoKAh-:H08'\IKii!eN^N:hO/;+@`/)+9UBm\Z&6g
%l%;A,>\KWP,$D;4l.S=>85"1B^h+UH?k3Ae_GH[L7q9tjH0*+k2X2lHi.0JokX?`P%Z$AMAcW]&9Nm$D*4[$-/3t<-5;&VW'maoP
%(Kr^Ff@NM#-d,#7HG^mITSX@3+?1Idk$rKHJO6=`&aMjb8?Aa[W&K*BUVHoC#"ZWk&UYe=JZ8_2/$9j0_*`of>C^B1RF-No?u*+p
%pr$u$JX)Ho<.^`E(KbW'51(R%JeMee$Mk+Vklo;/Y!A!^!=C>^3jLqISHpLF4#=U1C6RfrTE/:6:D`3rk!>".c:@r(kb(4F./`c@
%9)uP)s8KL<5$C<VZpI$-"je>C&5]6[GPpZWBTQnd"Mf_ak+EaY(#U;n7UTAtAfO^YP*I_*(q=;sQNaZ(`"F['p'F94=mQ@6SJ$VZ
%.i\```:>c7+P8!j"CPdSeQ=6p1l*D@6@<M5cI1*l#I3VTA9KAtFYo\EjmbG_!NJmMbS,XiJ@VWYH#?UZX;nGFC*nd"klhR_(6B]l
%8H<8Q#%m[7dh7'h,`<DO1@8Ind%?3F%'bG'4)A(L-$;<2!56hI;Mu]-#J_i-.Mc\+f,iBl6>NpD?rA&PL^sT%_p![k8-<IV$=Fu`
%-,[M@^i+):7Y/u-k1Lm<Bl[/_Osh'4bk9Tk!R;;4*FP[kV2N+K8]Lq%a7UE^fRY`!)!J2,LK6ec2(\6ERnX/BV`[,8JBfu1Jk9_J
%4@JB=o;.#KJaP-AcZJo8#eP^IF%gdWo4XL>9Bi975"cSH*0b@(J:?*C#:/iM+BU&#<<1X%[RL=m1REcR`g]BVe4;3rkfbrMXk;>-
%c*)*iAr!KkJbd__au",P`3.V"!<I!KPCeHW2WGOias7@8_2&1R/rf&rW6ZdtJ8GqV@&r6=F]6V!21TFucNeD3oT>mrTE5S1/4E#2
%l"c'$K6!5nQajJ8lOhP6j6cp@6Ek@+K[b1=nm-+r.*p=7,iMId%YQ-!;hkYdKTF1Ma:i+F\nF;NpAlk]%bXkcHLd&L+ON12AYRG'
%_Ac/aY[fTPq;`,!/0G?Db]dp+i_^NG4?'Jd)$@Z;JdEDj>!Z<nZ0sFSJdP"#Vn%q,'V@!k8lFh[<3iocVs$-O?D-k2aGBm@+=3Q*
%QFq!sCZ=>$;L6'0";Min8:i`>Nl=%!'qseH\Y4ijdR\Gdnc]n>5XS^8K8:]<lC__HZd;'</mqFAY`ON5Kli!;6Q#"jLLE(]3Plb3
%M%HQO3WW2nBe'2U-Q8)"G&fs#l:#*CIt6h@86f9/'D_b2W<H*!QF(HdqZ-k`D%3*o-(:ec':pT)ehF6,E0=6[Jj_];HpnE0"[m58
%_0f%f"92F!1%anKL4YhH`]SQLb0kGtQjGSnQus<63gffujGbtJ($#HW."ptaViiVA0S_3%JpEr-@Y!D>P._p-"Z6b9^*CGoZA,/4
%Qp&57`5C[(Bm\DS8P%J:YYo#S,KqA^!oLp?is<9oT$8D4dnK2&@'FqDJ9=/A]1B(C6ms?W8^TPK2^=RW,(LZLl-`rEobk41,S?]1
%bX7pe9h9;VIFM<7$.fW(Ur/a+2;u!/+u^%1('1*K2X?PZp/$%e8gE.N-DuV+!#`aAjV*_XJK[1C(Bi3sKO$9V/Gq5bP2<\!;a-mT
%n\0Q,W@:ZG:c'FIHEn%.[mL1+]#.*;;j<ZPa%\kkCR?&cNh5&RSH1Dd9\0<r'kpSJ$X_6@P6+7AV`\:J(A6T]>*a0]!N[R4!d)1>
%h)&O*!+:[%%GS.Z!Y`lejC%F;quLsafWgU=_^=%D3WkVKjMLu6X0mlKL?.V=is+!;*']u5N2*m3&?[iDM`kbrr<-i%"djhd"0>Nh
%"s3?2EW^0ng18Ym2V;jIR2MZ=5e7jW!N*"iZ7nP4F9@OT#cV*<`hc)tLib3U6q]TCNhjr]X94IOciF?jY</UK4hb<ki9^XgHUB.2
%iCfmU!.,F)6("Op!-+t>L'bnBV]^u`%Z8B[Mc.9'b16g5![`.G'3upf[/N35i6W">aQj"2^ep!-3$=7@53PR?2D#si&]no*^qaX8
%8r_VUFq;t4,[Utn"bAL_DEM#e5)5+!TA=`#O8.H%o[-b61t]'(V><[<@!@rC-\2$Z;d3oo.BSqeU`H`[Yc/n+$/PAA"d3;O_ZV@p
%8>74X!0nOMr0F)Z%<fk<6:[<"(4nP[=5YnL6R#?74FWe_i#i5Y<F"A.,;MY(#s"J7g!e2n.<KA8q;)`&*2)po&?%h4hR?n"ffDfZ
%+<)>+??h!lUsRSP@'mb""1dS6'Tl]&J&V*&D+5@sM`=N7KP7]eM-sRA_ApbI\6t?u]DL[,cjh(;j=Zp3jLJIX%b!F!(e>g;Xhu]_
%3]SAc0G)0o%P%<'AS_fVA8dUmEI?6"d"2j1'MU\8*%l.M[CG4(Ka"*qc*Jicjm2@(V9`"6AP(]`#-QHa)H9&;SfQW_[^^-#1Q+)R
%[_cQ_l*)^AW>XMtP0(jSe6N=ndLJPQK><6O@7&E^Ma!IT(Ne(8"`t_J@)a\9[5n):"=(:OKb5M:F#P?r>U;os+bZ]pLJ30O7N,h>
%<liuW227?D?ag/&JEF:JiBeFAU9G46H=aU,`rr(jT^D6A-8^9-:ZGN<j#u0X5g?GL"oUa8RWrAGAa9mc35A,skg;,ZIqpc4TmkH0
%(CL+_Bk.?`&d*OBkp!Ne"m9oN`N0Yg6L?JbhL*R7BNb5$)_<"W!JTo$3b#()ZH<1P7j>kG(6L$7LLd:u[2W85'G9AmQ&g!Md2l[F
%6^c<9d"WL"/u5D7g3hi:K(tRI^rW:qjH%.*?k=;fLCP]ko>),pOrX5tQkDHIi7glA5g>e^(3$Y(ZjJ1WSTG9EYe\0o3pACV-7n:b
%5R(m+*T$?@Bqk-pCeLZFJ0_M[E62SoEq:kYO!p"DN*u-UFG*`L-3iC+mXQYY3$mQ2fF:2B'.=NX!(H*DZV1#E,e:3a-%[k4]eR1`
%OoZG^Lt99tL,%A0$dc+)(DH`VS'7hHf"(umJe"CS>aB@a0tb_JWA'H^,T(^u_.\r`LW9JGgC@FgJZZ%U"9U`q$jO+RF45Z"b!ui!
%Ciq!^Qd&Tjf'/0X%VD060j*@T9Bcb"5Ct-g(hWT8mLA=(?uBJj8[-c.*<YnTnc8%fMCr=]a4I-M$VuIb6"U-A>j2bcB\Lf:cGsT?
%joGOD!*Yo&j4R9d;i8Lqj9,SXUhsbKNI6KVm%\l?l@lQCG0JQ%"6!OIV%Ym0Y,=Q<=erhTQE,VRjL0&P5TiUG67tbN5r*FHa?o?U
%$o;?=*L&hVVnE,8$/@ed:':4\/Ft/!W@_EC3)VM`j*rte?CSd&cR4C;Y-28kkQ/T,g'nORHXmt><#i3\BFX']kTn73`:ZZaC:HW4
%C"El]W:[f$FS!X0O6P;,)Ag=7k`h4-MsWJ9Lpdkb=kMKli099J&L_O2F)Tr<KG\e'K0ZmZ8sg8^f7khmce!I^@@ka06sY]O[LY^5
%*"',.$k.l:QoIMr%p\`C"'+E5&sSn0KFspb7(s4a"<A>q!oqA4aR>uT#ml7kQfYX'`[\hVcdT,6&OGVVp`*ZAEGrI?:'!DIJ\`CU
%m>tP\nSli^1p[S1f"R6?kTP8Bg*fIlQUh1k)%_@FG0^;U&Ss8^U+o?(-A6sCYL0%[?TUWXDt`VqSln0*"JTnAV9/8DjK.h6mN.5D
%pNYk"!I"gU+<1eUlW*G*!0i+$T#8ZmEj7/eEC^U-=a99=PDZ*n!)l4V#8eSta%R$7Q\-VCVGi^+$Xd_?Ou4M=JK(G6;ZN<N5.XB$
%/jbp^9bdt^K!A_UcmU`U'H?21:^ci]*H4rAmM*)5G'$urbL#GD"RS^ARAq'a@#IAH#kln>_bZ:&/3tY[@4mfj+A<(^s0>K81I_@O
%6E_F%Q-EML'JaoooaDoIR`ngJ\S(,eY3$+CnN8cs!DH(*&mZFF@m#KCp_8,^OCa;8Nc;@2jHI1+]p[7ZB'Tj-#3J(F]b9R`,AO+m
%h&7F=4fYsj.-f`ZF]/4h7i.1qj/<'fdu%I4^gUlBUnc98!g&S%4VI^FQ-0b`JiQ.fBb27DJ^-<lIaS)_HkXW!X92ULmh'2/.NK3,
%3aOD"MI&-lip%/6AdBF:odO-=;/hC*+O'@<*JJ[%/f_)A-!M3YW?Y*I=og!1ClGNZj5M9ilF@oKdml)OXp46V70Y(n&@0J5p.#73
%6PPEs`.Bfp@$oU\3oCI1RVZdsP*H?=>@]?ZPUCc;PRHX1=JFg@D*(^uJM;7d&16(CHB0q9:J?<P=/$l$U65GL_4D>Flk)E9S1Asr
%;mt10%YPKHd+&Q3IG`UM3Oqg#p"5JE5QhN+0]-A9"q<G,]-E^A,]'H(L$,-d%.opj@?tkl;/@'Pf5B&g@2@BO70JWGa%CG[.J7Kc
%>_H7I5i_8Tr"Ro.;VQcdb-93J,O2r942`#$U6j/F?1KEq9qhWr.F!B4SF)dPAEZqpCgp%r]P6!8'kUHr+&DaeeGtXn@.+VB'?.1@
%(LWm^knsjKo+BauLegTD],H7jorPsV"WlC3#@UEe?ZM81D'5SQk$"(220h6^/Te'!\NeFcKD*a$-'V<gWA3Mo)DHG#N,Xfi@B"s_
%@;jLn1'e%l_QdBJZ*D1PKuHY[B3%9TqWt0GI$AEZAT0<=3X?SbRRf@HaoOqIWZroM18>o;2J"XpX`Pa^@SiQ-9<`[ZB)@g2%58`:
%g:89Fl`aj8B@'I!bh&O-"G=oR/spG=&KTKSVu()X)BY>X%"+aa-3C0s4JoQ<>`9;7/=eD4?-AK$8QqdJO_+)`^oR*9@G9n`&.,6S
%4`lS'jD]38#!&>%+as:QDlL'=_X_6i>B+a%ZN-em0N+dX,t?$j(fXI$kgW[AknG's8F3puB]-/c#Ws+Uh:1V>6%h6jj3DkU(doV"
%%trf%l^:((:9VOS.;l+Z#YXJ?g_P*'!bUDP;N(7.l<]YiAhpk/+[B23gVM!FB4%&4,\q,B[m8&!q7^f3-9mC!K-W.BR:GgOR"?Y`
%S%uJS+nP6Nl+/ptroV-TL)08<9GeU,S4J3OOg^:1\>0V6d*<D1>*u*0Ao[u*<Br:.'Y21k*$1?nfGN(]]MJfOFePROS(,a4_)<hI
%OM5SM'%^^+Qjb]I6?2ZG>+Qlg0\&1^q@1gBF>d11IOM/mYn+9[n:B7K&d=(?7l`+NE:pXe%%&P>0gP3k.O34CioE.$JL@@;\=+mA
%?)ak[>X?((`ltq*<!aSeU.S4J9hS/@LA4"a=-sY$Y26g_'>%IR5k/aZL>sS!+6T:3`c&Y:IaMQXePMaK)2V6YQpOr5b&LC8GD5Q]
%;i:cJY7r=!lhco=Uq07OPdI[6+TjQCFiKat<]JY4*9d!sd.j?cJXrJcC"?u1>@9oh>.U7@kYO6j7DOk9AIGYYCAG=+mdk]q6lE=r
%_qAqqN^X)@L.9EY>Ttn<@>7_sDs/5(Qr<'A7gb^#fYO@*Q-Y!%'(?2]Mr>J2?6P4L5QTu,@0B(Eg8V)D$Mjg*O4DJ$7j!`03<M<B
%MRR"bhpnXK2*)4V`jB`nKI>K.F41l66?%;R)j!s;KFoITodjC@m($Q_;kR2Z--DV3:aTJ`-7[%&CeIjd"]Q(!V9E6_Y/Ukc8SoHt
%-WT5pZm'KP3RCkel2-e/"PY1.P\Yq(XAa.;"=#([(:I)U;PY*K!LC(mU-,CE9n7n19Y`-Sj[!8Va8$WZ>ilosb=r(J,r?UAcA5U?
%0XI1T3>%7Ya$BHt&kS5k#Ema$Z67)CY%T)AfXA3P!'8-N?8AR%/6(VNS;jH5BVB6P"Mt9O[%%<NkB]87F=Y<M![o8O$)T'hMd5rh
%Ap-.c,Zr;n<"KB'[>[I)%dG$h`42@LU5op[EN)#\F^4\MkQ5[[MN?/2-(PX8dX)5t;brkQ?duU8*J7g+@ub<>UR;fcEB(rFhpR+@
%V$jrWk`]WGJ4A/^Zk_niBo6&%>8V^Nb!r@\69%::mfd$ji+#.'eCRhCd'])Oo1Vml.lSnbNHlgR0mOQ9a=Bu)&dokf]>U.IdQ=V.
%lV[#Q*ZYnC/s2_jmp"C3U0Aqsg_*_Y9TtAgaagdlP3lQ1Kqms$ahMAu"\V+7Y)[)8"fJ62C+NKsZm>?Nb##l!<$fM2DX6(;q)aVq
%-,Gke!#&=\NCA8#EJA@eYB7<98f6380%SR^-Nln$a^;n1)q,\i9[5ImIShJC.0O>;H>b4;Ys-Y^9N&D]H6*((]I7!%rd\5W](]J%
%#D<KY*(>Ws'tP/SQS,oeNl1BSPjPUoVA(ad7'[IVJ$e*e#m"K9&i//UUI&AU_+Tj8"I,4O/Z(!&?%)+'pIo2'i9F^Oi\?!C[Q]B&
%1e^J&'jr]\KIGUF=Jd*@6jDi[Ee1SJF@eX4W!%[8UlOuJW8<r]Q)b9jW7'D].Oq9u18&P3!cnMG275#qlUhp@at&g\ec7^!#d2-S
%+-:_O#]kV!Ub=_k>['_W/h@L_%Z6o/@n0t(K[:HY(4%A[JgA?Ga`#!h,aJ@:d1-uN"B]P,nrmr@kRaY1BsiMT`V2MoG%=I\(>8pC
%Va8*(1'CHV#^uFKK:Np!'P#\UZ(obN(hM2t4hs<(q0W3/=_uB0>S:5gJN?kZDB<hK_bFF^C/C0Em0@(dfoSJnFHk.l_LJ%4!lk>H
%Us5*.pF>hg*%opqe-n7:%NYe@N?VHATgAd;h-"D]Bs#A-(G,*/SL`9cdPa#iOBu)K@RuuiD@5AXgF,b0OA&#sQ3u=Gk*_GOME4Pj
%?,F5rE=LbFZ:n1U+C5%J(3$:k_0R6]a?M/517*l7?OKEJ--:dn30)F230`>9U$1*cK8<-?!I]K<G?sU3'\Qf#!XN(MB:H5HW0/s`
%XG["c',\s(=t'PC"X=o7ZXZ%9)5G18EgD69=ZgXJ<tSjR`$(8&h(:Ae"P,)KSrQ+KQocK8k+cnTGQm5Wa;(Aj'jWA#F/J?<O=GZh
%6!BqT4g'DBW@?5(V!<3+J1#[V]I+*.SZP?ie(@9*]f^DK?ZZM$G6s07",OmT(gc9,7'))dM&W_Da>J[g[W7<q0=7OKe<_F`NYUYT
%O@HGsK^$oNXIdpQ%V.fY8uKD!i.CSd#=iJ$J0MjTR>#/I8CFrL(.E;nA(q-=kZlV+TlDpq^^$;QFJta&j\=<0g:Cm'(GWPSNh'Jb
%4p7=fV+o0cebL&)AlVGENaT*^Fj7DRbCs'Q0/u/_RppO\d5CUX!<u446\V[Xa)1_-nd[X9Lg8&dM5&0J[gX!P!!dfoaXKh9T"puH
%AZgo95`l)A@?tE/r>l`SlH3=lMrp.+3";Z;p)IbFC'CbX-^>GgPal;0*j6Lc6Do_j#YgY(-u=[5g9t8R_HGe8l(AL:e!`SurX6Pi
%.84qmlUog4$th:rLp0oT7m=Si6qqrEGZTI",iM`m?\_#4>E0;*lH%SN%paC6&RA]I`Au#nP8InPH#@RWFTECG3PWRX.S.#N/C6#G
%1t`%hg<.l&G^pQ#7a&K\$ZrV-e.?mh!S;Lh$-sF40`T)a+ZLbD47"4iKO/=G7;ME["^R*T&Gsf[;fq,[AdM-D"[o;!q0I'Ci;+HV
%+^a[C/2!r6_K%;N'[kD';UP)6S6X+MKqQ5`_CVC_B2T^)#DMSKL(KS'ARJL.U9s+Mo-Lr_"EBj:Bgl,7+o0bQ^-0Bf%Z>aO%J?[r
%MW24=Q;EMVS)U;KCq,kA,>F)=Kq)ILJW@^CgD4bE"PT#&A_HR1*LY[#*`Cl#VE:]';ZacL2rf7`Y"ftB=;pUfB,Z(7=E7qmN9iSM
%9Xn?X9n=bY%d&La)]1%n>!*^L*$Fnca-=Y6K:^m_/Cp\&3`rWN;g*icXb!bEYRHc(+cqRU(IYM4e=s5Nbdi)eZ3j?UT[@N-RT1BV
%6E[b./YC3id4#A=7*ZR5Uf'UK5iKsg8T>]9_4Ycs%>q-5Y,>)Y&"0'<1UYbT]e#q\;E2jM_2@Y8@`HpZ+9f@I4safP?t(]7VoQ-=
%N&(&LHts:%MPJ66<TGWaq<[WZ;$)V7PD$?N;T"#L?Nb=ASB_LaoG06hNib.^7rObh6bN<VkmDOHm>!Bu&B5>(LY[9CZ^_F[2].XU
%F_-N6I<eLX$WAB?Fo3@@fVc_MDat8&X\2DC]1Rdk#kL(KJ5LF"Y)'sr1[$p;GVP[8`[fog<!#nKK-k1`&PF(a/>in6.j(CAS[l4@
%;VZN[O,[4%*+.;t":f(h4d38B.@"ER/C[ucW8t9RN0@!#e"m^`(Tl?N_fO@KSLURd`Wl\b"0!fL,qn*+c3M`HRg)'>J>p<q=GB8@
%%4H^Bc-DL@Ea\,kf6!Zua<kqX2kot^)nLm#C`NeDFO-Ld>X8R=YoIhCKu:\,^/1K)Ba9&MTCYrgE`+Fi0>r3Roj`[a>pD]#`qQ.j
%[WZ&C&f+%.6s/21XsmYi2I;YCe;H$"d<pW#G'I(Y(PuQh0RNLq1W<Z__IsT@H$m&l`PhfYG?6g8JhA5A)C0t^Q;<8Nl;WET=CKUh
%`s((r'`p!qV#1q:.CqJu@+u2BeB&6AJo6>gfN?]M1pu(3I3+"U>naR7=LhZF;dN]bm?:tX'7V8Ybj6=Z%BtH"f.+m?3iGFNe=\I#
%;A[&mli>6)9P#L2^Tc:Vj=>sC/C'\^\2)E4!9e;:lV`[`#eb,2Y2.`t,%h.89%N3PQ>=l60lek06c>XiBCK]c9,4D\Q+h^?oVFl(
%mIe[lIOZ^V.tWYsp$'=7W%sb*9r1$nl@a<ikBRXdm*LL'CEH.^K!+L+Ts2K'%UV4,b`tZ!!"]$'9\knl7'lLL@Z$dq9[iZR^9*-@
%0tPTH4JBEll9RYXJ7+ikB0KC51Q2GA_>'<Q_5+WR%KrcTW-mQi@-gqt[Ya\dHK-"U2-@G3Fe,HU_U'2c<'i9;Kd#*l6C;Vi:p<!3
%n&E_IQ:@&).Qo'7q]&'FH@sW[MdUSPf/&!-eqFNMT_+<[)WfVHkN[4iIM!bVE:bcZc(t]Kae%KcM@0igXq'SolAA*3T]XG3J^(>-
%p\)L>=t\CA>`u/Vb>@;a5s%`fJF4=(*N%o04qnLT@4kAeb(0+I,@$Am>8doP%npA],KcC:ZaB2F,!9h^`&4g.i9+($[^>)^R[c1:
%dUegp0SlPa)!G.FKF3U0'3)9%(&BgNPm10P.>m`4pGB^Jl->l\LG.g=#()r<<I2HIFce`;r:TS""*<P3*>WaLo<4k)f/Eseaj54Y
%)^=!2p=M8mcUd:%#^T35cQf],MMu1q3lET*ia<3B!r3U6THhA@?Wq].="iCjD6^TPkjE9':bnZLc9rM0aY8&gNJ\##.#1I@;i"nV
%Zh['l%,Ga;J;\2G7W_cQ_i[!%9L\Y[UO]M-NYGqkPIVlu3CYWr_S["V,SUFjW&:O=7H.Mf^:kBgLsq,SY?`PdCY:NVKj_IZ'?d,L
%6la)H8qSNEb.Y(Nbh%(3I*^Ap'4VL""['pg@^qlH"q/XrZpI28gGoZh-%TW>>`4Hd35R/2<cL::mkUb7Cs(nPlNlW_Q0;;ZqG(A4
%_$N\E$HE!2dj:d$/%Rm`U[gGd6^r=sO.R2\G#EO.HrHJm8^kI1'c^3H:?Z)L)[en6UQXrI&9$V`1#B_$dWZ\9`0!ee:]Od&PPZ'N
%Q'Cjt,$'8k"bT0`>[(R3e2IXeV4pV7l(YI9lt<6D\(En,hYLLq!di@#!O+T_mT\hF4rSC'/25u@gK,9KSV%(OV(6g(is`Nq(W38U
%LACc:#8Jn,1Bc/A/k[h0lpS%P8@i\,h=3*U$`j$L]?G4s2!,?/JEf_?[dg*.I#j\K#DmU/MgW&$'3n7m$LSL<EU"O]PsTBumqpfC
%7<#Lu<o4S.[m.6p8fAZmJh't9ACBR]l.Z_*R%DTsGoV9UJgtrc."B#(N%VuA-X0\dUNUTu<?#9)p0!WI@W*2-kYO`s\3:Yc@A&`c
%&5?"6^/TfiL1k)HVmIh'JhV,bO\^T!dh62^L?53dPfr8WOPP^?,0UcoS!/Zl%-u%mT5SB3jN;"banVVV,'pcsaqcil'rh:5$P$kr
%.iP!_U1)kA=_d/[$F=n.>XfPl*P?IJgn:ItlFJEO`'OFN1T$qfGK,#+5@fF$gX7]7#&tmn4;#OHET&1J3?UrOdAm<aRjEsLg#8.t
%)EU9>@/U'+h%(Wq,Al6W#Vf^(Q'0SV(h9sYc`Du,o&34QQC`p_BBXZ6IWYg:LLY-3X?2_[TjRl4Cn<`4m$N1[F<su4EEX%Cej.D:
%$@c26e4>6Q/A:%n&$AIngM$$][\Ts<n8('&)ISBSd3T_t(d:@\bp>A@DZ%Ko^pnu\CB"D?X9*^97>i4u_ddKLcYkCss2!$0+O%06
%JL?eg;/^"Q1bFpX,,^DP$bVYE,U1p8+VJgSfg4.M)81,f)&#AX+<=n)',[+7@;g=,E'gbFq>,DsMs5/_RmOZh"cUV?QK&ii*[M4r
%U>tWf>O'9J]hh&=_M?^Le?M[J)o;Z2kdOb9oF@^8-!c_j6*P4jVNT^8JuS7^%G1V&/.fC-:LYG2'5iUZs''<*m:`^111BQ)=\b!Z
%0;$ZJQ.2'FNXgadbVtHCk'\9RF'?Qqm#CQV,_oiDQu:r;,f&W<#qq/[S-DdeL'h6+ji_B[L3#L`cpROG#fX6dN^-#f9'S]J^=PV=
%'nKC.Y"fPB43Kq0lCWF8M(`AM3kjs629gd3/(Vm(-44[+kc!""_WY+<l0+'1]ctAnZdRG<3G-R'HDqTNgW3VdL'!,[9fXBV.oZ:q
%UN2[>ef'ZZ3k2:_`XV[^GeA;bbmhOF!V*8p/o$R.CJn\P$-oD/>h=L\]ORu@kmia')'WA<ifLpM1INj\EF=p(c=eW?X?r+\%P2R@
%dYN%$6[/ET4V),Xn=Hl1f!kMU/%^sFbEAti0?F0TP6)bh7(8p/C@MGcJIWBb8WkEsTN+li./nS^f>Y;rdYZFqcb=%ah*e?P^1ID5
%N$aq/-j<2r</7/jT=@JYORFe68^X>S>"m2VamWhF71-pR7c0!R.tpkrUB`Wur9OZ^;5:t3`NRIr9AK"go&_mW9,<tU=',So!mtGs
%A)/!9QZ??)^R[t0gpgi3K_GTp*qK\sNAHt$WGd.ScuUTb'.u$<bhaG$:hnu%2\STOj2R33i/,$9`PhkP\FmC<%#EgHM+Bs(EiP#M
%]&:;hCfPl[_fJBjm\d3jnVI*5U,-7\XTi-djpg-Vk;B6-19:?<F#WZ;H__`WSka-:XV,C$8m`0rl5s-IgH+ZE]VkuBbYg;r`Vo*l
%rCc%ObhSusBZ;Mp*fqq+'*G:5h\IqPYgqSjL/f.37b&sB-p4s+p_U`i/.\-h3;3%oLFQ-ZkkT[g@I80dJc^`\'1-r!N:-@eb]*7f
%521G.OIR;eXm#.3>Zkmt!E9ZKbJeCTf")5XI!_p4-mY]gY9=2:iomjRT>AaSj`"s]oI<1.'hQkY-od_6o8(Ks"oiV_Et%iP)VB,.
%=T\s+a\&Bf,Cc.#61Y[A6d6,U-I^:]0V=q#+jJ3;s,?grTG-B:LGD2U0b=\WpjcYb]&*WHo&hbuNj5L:?,*\EnaOR8@2NJqjGj&B
%lK=+m<sOXFK9\;$2thB/]s2,Y<XB.`hPC^^N<%JWle5<n5WdO1GCpkE`-&T$+K[9gC0tdhVm4/Qpi0-Sq97OOpsJK3a#fRrr=7mN
%6#DmbK@1ts`)(qN5C0i)!YU)C1H6]&\r'aKRB/q^/2$mW0-JrtdsQk[U0X^-jUirHpQ]uZ\qh7^`'\ge;0Z9YJMNmc0(R'c#kU.I
%$DHG6[L[74?<pE41hC,H:d%er]ESqdMBmfJm&fjMiI$IPQ:h`:&#mK>bQc,U5.n<O]rkt>"+F0"#Tnnff2[143uS<<G&/MOS$Z%Y
%dq>*P?'Z(4=/o@1<Wo52e64&r4iOpGb3KFA)s=XIoY4V:\cs6lq/.a%KMAtd$LAu,B/o$s?OJ<8DJ(Qh"b<+i3YSr3C?X8@M[j5R
%DHs<ZD8CulXljXo0S[>5]&6VZjhkPapDGk#kOGJ616j1ln*sq0*`$IC)cX!r#)(H@=&XbbbqtooU2=8G-%*$[XWdU+[eikG%oO_2
%<gBc-i+FRL\I',n4^'Q2i<?=3oPFZf[k/$+i8\^;8e!i<`BMPB,LG]Q>X5Gs?erh)Y-;8X!q6Q%ltBM@\!-)TD7e^OjlgP0'%+22
%cWf9<?]#>.Hfp(Uba75cX<uOe,=0<S7!N9OJXaZ')`^lUnnP@D*fBMu71H-UrU%/(!di\%8aNXT(kAGu$4kF3E["dKK^<*O_fP/m
%W#t'CA0(W9&kiMC8BA`1),D;I`)OpR-IkT3QnKGl3c4,$ZDYU3:q%78s(6T"&g)UUoTt:hM"7RF&Jg=U[6g8fctP4JZ)icIZ(YmG
%Rj%:1AfuFliX8s.s%:WR_RDQq:e]pK0puW,55-9G%/Bg=qsY9n'6CC<3TSjkp:*VNo5\4Ik[,bSe:fLhMd71\TMfW8f3*.`_/7sk
%96hEWgm[do`6gZ`%Q);8Qf&cVeiOnn6HaeQ<hS?q1X:B'0@f5s&"L#-3jk0#3*=\8>0?Nkn,,6PbUp"X6J1p\-\qP2'cS%f9m?])
%pY'7bkG`;SGT+"hOPf6/bX61Ypr,-@^"(j`4@,lZHZ]b^Ll'^)P.JHe@0njF^bj3O%b?^/O$:l]Qpr3(l_d+.)""%8L'rWW$pp&0
%gr")r[gE+_45.SkO/-U%L[HOf:1J0=$LiDkd1W@00r'HIp7I:8Z,g%37#)iB5(%I`G*I$``bM,Pd]2D$6S?ARbIYh1;rL38oX"#$
%/:k;#2+hRJn(:J]!S"iFi*m0b#;g'l!#!p24ATQ.n6_dbG4;c*s/Y?VSRC.?)+g'ElWWmr4Z60c74O<md]OJ:/kI!g&OGj4FC%aA
%*">C9En$5i<5Cn0?\W?\FJs$,bDQGoSQ5M4Z"uSloID(&^=H!+^tM+`/>bJLjN8Mj0ms5QZ'm'd4Y1'sS/tp9\hmHr@KN$9$Rk69
%0.+b0+tj#D[MYLJQ&eTRCZJ'Vrh@a#\IEgKU)VsL=`)/<+V<[tL7!>p)+1$fh[W:Ldt`\-@N`G=AecHJ&G^11Bh/dP&#?oZlF*^k
%nh"gS9PGUON7XWu-nX+XVWmqpE(PpG9D)[(UOtU;S_AT[j6cneXbQ"nO%T<SPr$*Vq(IH/+uV;>"+]=TkM""d%qR(PM#T!Z<OWs(
%[SgX?2H94q49(`AFkoI9'#$:ug1n@<Q%jBiI.`eBlR=!960XrrltOWZ.8O#$R2gU\,,H[4B:S0=!!@FtMqfo[bGY<@Xi/c?n>9I?
%1<qOS_h]@(I$\hBO4:_I9re$R'(lpo)timQ96\\TR#2/$bVJ?8jN+f/<Z(uUPJ(>TIAuhHpgR;&c?\*"9b.:SNP:csk?Xp&9u:i'
%d'OZb0p-f6h+6lB+a9QMlUI@d#MC6Xs-%$r%[89Ej/9#0PbqrOD1D2f;"N+.d-]t%%75"+G@KbCn`V%])8j*b[,pg+JSq.h@OBTC
%glTnLHAU/d??.5TK-IAKj\!>21LJ%lgL^,+mc=b_o$CSIZ!*1:cY>C=j:u!DmSG&rSYA5%7+ES"-O6r]3R)NNlP_1=lfn-qJ%MOh
%@7p5eEb%+Srg[P;A@!F!#E\:jhD9h/aH9eP,2j,BEj!@OVP%T^aZgjsdD/e+WtdX/(BGFGV/@Rcq&r"uVHZfP<Llc?X2pH5$mJ$G
%ck,e+Ig`]3W),XqMNUG>PUu^Bq1q,TeCC(3IZ%rQI'ee+NM<g?[NDZ3[5jXb/<hZ<>u<CT4ZaA'jn)L:GCE;J^NO;Z8VP0:gpf)u
%J3$F:1Y!M$Ts.)_mh2$@c"4?T^#MWLjS)LCIjm3`KiT/=0NM]B$-GUH3MXf/e=R+m:>m8&rBB_Kc#fBla$)nj1.,jr]cDV,NKl\^
%p]^^XK+tP0^1V=e-Dbm:0-<n%JQQ+s>ndfFI.O$h0?7K?&]%)f6]'1gW'4JSn;LY:@"96Y(mU>F+$TN&=k17G^YGM2;8=$%7?Rl'
%m"dE\L:Nl<Rd:>f$Q5GlVsd_K4c_'f?TE;uW2tK-.*Dk\rS`fdUX":W=`I7N'':#f0JaWM$ENp56/tG;fWK6@?050GR<^">W8YMA
%^-e90hRq['iCk21G7a/\CqeG;N;Z)#P@[LDfR-"="FAtB/?9X_A>]E6[]#DeF4k0cEr;TqBF]+&(,'aD*j4L)373t`khp?>2U_E$
%Cjf&d(b1Pc3Y9u(co9'd'Eh1S*^As7:XKN\k?4/H9kFUaGH@nEiYOLUg/7,rIC5*!Hgm\g.IlICkWY42%'5^\TBiM"(Kmhob7/rr
%1LFoi^H/(j>Mq`5Q"[H@R]W;!iiNj:MpTjJW/hgR+MdL2-c'ZQLD/MA4o.*i,JX04CSg8VB"TH-NhA-`J8-PO`5X;CfcP"gjY++B
%"#&BR-/@K96]Q8fQ(u'^VKm[<Qs9RN&>FX[k.+o*V2%<Ph-j"KSX$6&9i5AGMV!Z]-a0:tG?g366-"'81qn#'eqLBE!_"q;lsCt5
%[UH0A?0Y&g?`g6u6r>:u%qb>f>HcY,,e,.cee?q@KP-2Rj&/I0>X4])=F-^`TSQFR@6\M?HoA"S2;!]W'"_o1WRu9k-tZ8E,DIuP
%\_X6U`u:W?T'Q@i>]Z9&Q`0Z9?A+h,F>U8OSB\^f/p%T3kAi8Y1,F"^S1Dl.@bq"1Y3T>4DnEDF0A>6STSUT(YlWPW&I?@].3ce&
%#Yok3$ipXIi<#aPMufY)EDLK4&sB80lUc:#'*67Hfd(u(aD1E"R8h)%8!CcH4@V/Z-dui"a$J\pS=WbHAu]`n1ft^jP6@Zt?hF+N
%]q$g32h:DZGsYULbjOlBnb#\a>0+j8-ROcI(0]FV]p:F3DO3P4IrUfa2*Lk/ZdVK3?2iVEha?9a6N]^NqXsTaEt>*]TV+ld_Uu7W
%31PWbIsMS.O,%dr(u)MaK,1hu3OiG/e&obOO2>@1iKMm>NukLELm@hH-i;+#1](l`Q'?qXXW2[;_.R*^)Rs*:#+CDWI9JB?IucbI
%5n\P(.QXWa:%3rHEcmp3V!2S_V!?G0SeG`a\difR,R<cA2r!FP[bst#`f<Z.&FMuqJ.@\4"B@bSPcLtpU>#tDSb.mW95t&_+@f<S
%AVEZZH3TqIC<(dWS!@)alk3aMi?F"$<qf7ABXT\eCC/0TiT->,N)LRN<C$Umn^dE&=]%;CAUBpP-!+]jcG/k%U647C)t7i>L9To]
%CM;U,X9AN*U=A1_2tIP6`)%6jXYpDAH4[Puh*F,^Gi,1o9b=oM0D[sN25LGkD6#ln3K*YDKT,C7F<S>UqQY:JSo=pcV6Lj[WH889
%la""?A#hd2k8We"-;U3Xg/NuKaeq/oX3B9/ZYo\3Ffs9"3ePtHc%I/s**7r3ru@gHqh./[A$?%GM&QDF]%F,+;tL3h6W/MT>jQLt
%3W54u>Be0]BXrOdq[@n:$l8o4qHqZj\6b?#4gH1Uk-R8]+$$Unp1R_YSC<ueXp8\$4tB`Pe"BISjp<u-S6$f8:s$OQV6-E7G1FPk
%?=1mNR1OTXG*j86aeegi]ju'1&7h&1rR%qC+,cMRAocC[81>Du`,Nggb7i=Ef$47'iTpRa?<9/"mX4ZJnI)TLI#5bKKe]i_'$JC4
%_TLIP/XJ171D.UcW3B>[:?uYb^s%m9c2sQ2pdBg+PF,W2eFCZG/E([610g&PXKuP'\`IP2`]GXG$(X]t0RpPlHk0@0\aD:&@ia?f
%%$2,%fi@5-%QI1S7a0>(OTWrFr7`bll-97[#\;e`!?N;HQR#dTLe9JrmHq<k.-SC`4c(Cfb`h][mnfhuO[h70j'BPYR4%^<VJ(Ji
%PcG>,#,U\EJkXQuN[n/MW7H_BXK=Gk6AVKO&4CDWEurSnJSo%Qbq_/2!ZaPR47LcXecm/6eb42/9pQYAblqhk#in*)EHH#'@g)XP
%3^8N8@43]42c%QBJedD-k@<kCm-(.Cm%2s1Wfc:S7bXY&pf9FbI0t75+d9c<:$oZK3`9Y?d?#r_n3rBmOs+&h<;D:JR#Ibp#cFA+
%8s!X%&%!HF6F-GA""T"0+ga,3KiF''dAGVqr+"c^"Cpjm'(Ob?+I'Qdi@JNr1/s#B(X9X<Irpeg5hReY1"gWDLngO9$<p7='g):.
%=^gX;.YmMR>XaBLljJOF>cX#D+KFOO9NN7@>$M%'U]'"Jpc>"be9"%DKl=iHGWHMEOTlN.or;ih`C1ALHm>#VAVls6'+-*A0?>9U
%9b!RSa2c:))GZOA/?$skP=O$;Kp;qP0RAnkkfqL@5&7<QkiS[BjYe5Y[4lmmoU)^CCY-pk-@B"7'k:Y"pqlou>.4Ra!g#Fe5b^^@
%o=/Dk'G)iLW$:f[,pX0lG>iZu6p1/,-YrDadg;#(HM7H*cfiZu'Phb[lTDg5c54VmH-*HDB`]I'Z6]_,B0"7X!_N&r,@JO^'oe`+
%6JIgE$g?h2>]6`R+R6=M+t]NQ/0,APnOJ<\Qeh\_E;Kkh3AYQ+irD;jX]IfcE'@IOoZh!DjgTTRk>65>F]s#`_j^fjL>-un(Z#Z[
%oZ@S7fsH9\<A.F_VZG7[)<e<h;Fp%fQ5PnIBjYnNC:>!8[U]pR_WEpkKOhRR*2uLNUsLs[lEa:a=A@1*BSW:!lBq9.d(sJf[0sWu
%#rbVLR9bB%VlR;qH+9ksU7iq,;,kN0qsd3I$9=n@-7(V+iMjH[<,8k;3&*fs?=<!8DcK'$K#6nok425kG;KlMn5:\aBI:DEFeh)V
%Ke8XI5E+&E<_.di]Vf*omgMWF-8;]mh84C`0[u\NV<k/FQ3#ukEd'AqVTh5NXH3"d9FpCJP7\TOW`Y&"Sg*#H'VfCoP2X>LQWBHl
%lo;SJka%jf"#r>@PWRAHcR#nlEr`-'HW&gCe*FXP<\a@UBkl,V^1?:(J%R.SJOl"Fk/crKjqGFe>9I!-U;1qA4nCgQI0cV'g#CmE
%[h2&(fCJR[R:2Ho:0m<?H['LelQ%U1!_E:AP8+4/3A&/,;7oK=7%G5>G\t:?H4VGR'=S$#k`OA*:[`C4LHUqdrVn8\du&g^NiNO6
%Ft+-DMaP[mVYq)dE[qmUi@U*L=B$J)_@9O(B4P'5c%@,,'A/I2F1!a]bn^.qCaKs8?ZO);?Gt7>;oHjJLLK<s_U;r2"EH-Z]BNSg
%7qkLNp?b#he$+q_PX).sW[9o`\d\s-(2B:Lc`b5"dk7ob#QF.d,_spRs5c2sT(=-9)87'0G>"Qa]QF#A92jE'DA]@\#B-H2S1c?0
%l@O^^kYRf;/Un-.P<ES7Tp]*E\OWZ*\nug^_f6B=).K&:p+IG2Qp(+(@2A8*Lq8/-Po<^F,rcoMD0;@?YWBe`/7'Ybm#KF6n$&'0
%M[I&KmlYmFlsN5WjG5XNBMjWFFu1-WbatQ>cu4UDK1Kf1H9Q;VY!e96jRK418'l7:C4R^!9_)RAd:+m'66U?p*Z9;ioK_?G[.pWh
%0RkP>p,K(K2R$@ka'Q46+OECm&pG";+TGocXj/o(T[hfW]EOBlh>$rIP!S;oe7GuLpaB08bl:`1rCHFXb:gR,P]9%_$*gm:lNYJA
%8'(;iAh#MdPKPl6AQN)dWM91i&MAQZjdK)ZjRu;?!eN]1<X+!_K#7[K#a(<eq-`VrVAr8r;ucL#%K'pT'le:Vf"fAqioW%k0ApjJ
%nqU[oLX+F"((G;^Mar1#*Da!I*a(\c%Ihi,*JWZ74hc6(`#32-P%4'ibGk\K2E1;)lo\-GDgV.bru!Q#)53_pS;%E"fr*hf"?,'^
%jtL_7ULQTN`h6g+Th6pdI(2ePrVl"3:g1F/iPTm&j.H;Ga+*s+&)[?UY<I@.rEoQKo?Vp]q-X-rl$pGFqSNh^Ja`X,dna?MrmssG
%p?u@;rUAW=^O>s^0-<FWr:;SVJ,9,eJ%kmGj%mF=q<do`If8j-[t"A<^Ce:JpOM_Is23anonW#8(K]nR-i~>
%AI9_PrivateDataEnd
