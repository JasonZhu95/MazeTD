%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: time_1.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 3/12/2018
%%BoundingBox: 0 0 251 136
%%HiResBoundingBox: 0 0 250.4424 135.6802
%%CropBox: 0 0 250.4424 135.6802
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-03-12T14:06:03+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-03-12T14:06:03+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-03-12T14:06:03+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>140</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAjAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:0192bcdd-cc35-8241-886b-053e5bd65abc</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:0192bcdd-cc35-8241-886b-053e5bd65abc</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:9153964b-b79a-4e3c-a53a-6e42c4691ed9</stRef:instanceID>
            <stRef:documentID>xmp.did:e9e8cf9e-5873-934d-9da4-d4a18b95c533</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e9e8cf9e-5873-934d-9da4-d4a18b95c533</stEvt:instanceID>
                  <stEvt:when>2018-03-09T15:42:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0192bcdd-cc35-8241-886b-053e5bd65abc</stEvt:instanceID>
                  <stEvt:when>2018-03-12T14:06:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>250.442383</stDim:w>
            <stDim:h>135.680175</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Mobile Color Group</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -135.68 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 135.68 li
250.442 135.68 li
250.442 0 li
cp
clp
110.283 135.68 mo
108.593 135.68 108.157 133.756 108.952 132.664 cv
93.6647 132.531 78.3903 130.223 63.3556 127.507 cv
63.8517 127.748 64.3449 127.989 64.8424 128.232 cv
65.2449 128.427 65.0025 128.992 64.6205 128.992 cv
64.59 128.992 64.5585 128.989 64.5265 128.981 cv
55.9689 126.921 48.0768 122.493 40.696 117.185 cv
37.8459 115.938 35.0714 114.44 32.3898 112.733 cv
32.1364 112.715 li
31.5954 112.326 31.0695 111.919 30.548 111.507 cv
21.7585 105.525 14.0133 97.4851 7.76187 89.5613 cv
.109996 83.9167 .111 70.3615 .000125566 62.0911 cv
-.0115635 61.2146 .651972 60.7787 1.3265 60.7787 cv
2.00334 60.7787 2.69124 61.2177 2.71888 62.0911 cv
2.88833 67.4534 3.0075 72.9348 4.59585 78.1057 cv
5.77849 81.9568 7.91663 84.7624 10.0339 87.9407 cv
13.0134 91.6218 16.2072 95.1121 19.6291 98.3713 cv
19.7203 98.4065 19.8077 98.4592 19.8771 98.5554 cv
19.9992 98.7185 li
20.1256 98.8332 li
20.177 98.8222 20.2296 98.8161 20.2828 98.8161 cv
20.4291 98.8161 20.5791 98.8623 20.7174 98.9788 cv
24.6505 102.282 28.5944 105.584 32.632 108.763 cv
37.5705 112.056 42.7042 115.023 47.6324 118.377 cv
47.9987 118.627 47.9816 119.106 47.7365 119.364 cv
51.3199 121.482 55.0031 123.383 58.7331 125.235 cv
58.8577 125.163 58.999 125.114 59.16 125.114 cv
59.199 125.114 59.2391 125.117 59.2804 125.123 cv
62.7902 125.639 66.3092 126.1 69.8312 126.542 cv
67.3834 125.919 64.9494 125.251 62.5485 124.489 cv
61.735 124.231 61.5128 123.453 61.6989 122.815 cv
60.5026 122.469 59.3068 122.125 58.11 121.784 cv
57.0483 121.483 57.3761 119.934 58.3259 119.934 cv
58.4148 119.934 58.5093 119.947 58.6086 119.977 cv
64.7101 121.789 70.8536 123.514 76.945 125.388 cv
85.5964 127.073 94.358 128.113 103.07 129.772 cv
103.506 129.855 103.591 130.321 103.425 130.646 cv
106.116 131.02 108.804 131.41 111.485 131.842 cv
111.558 131.87 li
113.592 131.783 115.625 131.687 117.656 131.568 cv
117.087 130.809 117.371 129.471 118.517 129.471 cv
118.55 129.471 118.585 129.472 118.621 129.474 cv
123.318 129.792 128.018 129.971 132.723 129.971 cv
134.003 129.971 135.284 129.958 136.565 129.93 cv
137.925 129.776 139.287 129.634 140.647 129.462 cv
143.41 129.113 146.187 128.64 148.971 128.14 cv
149.183 127.352 149.805 126.68 150.851 126.648 cv
153.651 126.563 156.455 126.475 159.258 126.347 cv
163.035 125.769 166.815 125.351 170.585 125.322 cv
170.586 125.322 170.587 125.322 170.589 125.322 cv
170.734 125.322 170.862 125.372 170.98 125.439 cv
172.316 125.281 173.65 125.108 174.979 124.898 cv
181.576 123.857 187.719 121.734 194.039 119.842 cv
197.362 118.548 200.618 117.076 203.784 115.404 cv
208.569 112.875 212.861 109.618 217.268 106.555 cv
217.413 106.305 217.621 106.074 217.918 105.886 cv
225.708 100.964 232.871 95.8259 238.453 89.0461 cv
238.136 88.6902 237.999 88.1882 238.222 87.5794 cv
240.215 82.1462 242.195 76.6887 243.522 71.0476 cv
244.968 64.9006 244.451 58.9275 245.213 52.7756 cv
245.248 52.4983 245.421 52.2468 245.645 52.0696 cv
244.608 48.0236 243.567 43.9514 240.703 40.801 cv
237.724 37.5237 233.837 35.1536 230.476 32.2205 cv
230.308 33.0343 229.529 33.7203 228.692 33.7203 cv
228.299 33.7203 227.893 33.5689 227.531 33.2082 cv
222.586 28.2761 217.609 23.3342 212.064 19.07 cv
211.132 18.3532 210.172 17.7024 209.202 17.0749 cv
209.323 17.9621 208.521 18.9845 207.482 18.9845 cv
207.254 18.9845 207.013 18.9349 206.769 18.8235 cv
199.304 15.4172 191.602 12.6115 183.679 10.4963 cv
183.679 11.2321 183.253 11.9101 182.393 11.9101 cv
182.317 11.9101 182.238 11.9048 182.155 11.8938 cv
170.238 10.3084 158.322 8.72339 146.405 7.13793 cv
142.778 6.65551 139.152 6.14866 135.523 5.66774 cv
133.005 5.55442 130.485 5.39281 127.964 5.14181 cv
125.033 4.84987 122.109 4.47486 119.178 4.16528 cv
117.384 4.1013 115.59 4.03005 113.794 3.93819 cv
108.558 4.09597 103.269 5.88742 98.2419 7.10817 cv
92.8907 8.40747 87.5416 9.71555 82.1886 11.0061 cv
77.3497 12.1721 72.4957 13.2776 67.6447 14.3918 cv
64.9533 15.6297 62.2799 16.906 59.6369 18.2458 cv
51.0173 22.615 43.0319 29.4206 33.8927 32.571 cv
33.7935 32.6052 33.7005 32.6208 33.6141 32.6208 cv
32.954 32.6208 32.6902 31.7077 33.0944 31.1999 cv
33.4367 30.7702 33.7956 30.3528 34.1667 29.9455 cv
30.1091 33.0466 26.3566 36.6457 22.3756 39.843 cv
18.9679 44.1003 16.0353 48.7512 13.775 53.9968 cv
13.6665 54.2492 13.4075 54.3654 13.1413 54.3654 cv
13.0233 54.3654 12.9039 54.3425 12.7956 54.2986 cv
12.1637 55.9211 11.589 57.5647 11.1012 59.24 cv
12.1745 66.3952 13.2467 73.6267 15.8429 80.4192 cv
17.4884 84.7244 19.9255 88.0569 22.4836 91.4304 cv
23.8083 92.7912 25.1901 94.0994 26.632 95.342 cv
31.4421 98.6628 36.5671 101.456 41.8732 104.021 cv
42.0364 103.807 42.2831 103.654 42.5675 103.654 cv
42.6966 103.654 42.8335 103.686 42.9738 103.758 cv
52.5744 108.672 62.8893 112.125 73.3878 114.561 cv
82.2267 116.612 91.2047 116.812 100.106 118.05 cv
101.702 118.163 103.298 118.264 104.894 118.35 cv
106.973 118.463 109.058 118.506 111.148 118.506 cv
114.775 118.506 118.415 118.375 122.052 118.243 cv
125.69 118.112 129.325 117.98 132.945 117.98 cv
136.192 117.98 139.427 118.086 142.638 118.393 cv
143.408 118.467 143.618 119.535 142.825 119.774 cv
138.546 121.064 133.99 121.749 129.339 122.074 cv
131.096 122.19 132.854 122.293 134.615 122.374 cv
136.467 122.46 138.319 122.494 140.174 122.494 cv
143.991 122.494 147.814 122.348 151.632 122.203 cv
155.451 122.057 159.267 121.911 163.074 121.911 cv
165.335 121.911 167.593 121.963 169.846 122.096 cv
171.043 122.166 171.367 123.918 170.136 124.237 cv
164.144 125.789 157.721 126.29 151.278 126.29 cv
145.312 126.29 139.328 125.86 133.663 125.436 cv
125.111 124.797 116.62 123.512 108.214 121.812 cv
106.775 121.726 105.35 121.637 103.95 121.553 cv
101.118 121.383 98.3014 121.14 95.4924 120.852 cv
95.2564 120.855 95.0214 120.857 94.785 120.857 cv
87.2892 120.857 79.5761 119.3 72.5416 117.629 cv
70.8766 117.234 69.2345 116.779 67.6027 116.297 cv
60.4567 116.151 53.0949 112.499 46.7125 109.399 cv
46.5705 109.432 li
46.2853 109.453 45.9991 109.464 45.7096 109.464 cv
38.248 109.464 29.4216 102.515 24.2765 97.8801 cv
23.7121 97.3713 23.1803 96.8386 22.6427 96.3098 cv
21.1637 95.1369 19.8752 93.656 18.7467 92.0291 cv
14.8781 87.2854 11.8341 81.9529 9.46599 76.2048 cv
9.27162 75.7336 9.52796 75.3367 9.90591 75.1194 cv
9.70685 75.1476 9.51821 75.1612 9.33882 75.1612 cv
5.39591 75.1612 6.08863 68.5698 6.41272 65.9348 cv
7.30286 58.7024 10.6964 51.9861 13.8879 45.5354 cv
14.0646 45.1779 14.3248 44.987 14.6066 44.9226 cv
15.2184 43.925 15.9127 42.9616 16.6515 42.0354 cv
19.2599 36.9699 24.3063 32.9455 29.2472 29.4724 cv
32.5558 26.6623 35.9918 23.9973 39.4508 21.4045 cv
39.579 21.3084 39.7132 21.2669 39.8441 21.2669 cv
40.1136 21.2669 40.3691 21.4426 40.5294 21.6789 cv
43.092 19.9646 45.7292 18.3464 48.4992 17.0774 cv
48.2951 16.5949 48.3766 16.0051 48.9386 15.7302 cv
54.2106 13.1531 60.3942 12.3523 66.0861 11.07 cv
68.4713 10.5325 70.8561 9.99538 73.2413 9.46021 cv
78.466 7.31272 83.7179 5.23316 88.9816 3.17846 cv
89.1089 3.12879 89.2279 3.10631 89.3376 3.10631 cv
90.2425 3.10631 90.5099 4.63674 89.4987 5.05397 cv
88.0763 5.64137 86.653 6.22827 85.2301 6.81617 cv
88.485 6.09102 91.798 5.23604 95.1447 4.45138 cv
94.3014 4.10909 94.4118 2.73703 95.3302 2.36987 cv
99.7896 .589311 104.473 7.35739e-05 109.213 7.35739e-05 cv
112.702 7.35739e-05 116.222 .319448 119.705 .717987 cv
120.148 .704921 120.593 .698649 121.04 .698649 cv
126.453 .698649 132.094 1.61994 137.465 2.53832 cv
143.99 2.99048 150.541 3.21022 157.074 3.32644 cv
158.517 3.12798 159.991 3.03953 161.483 3.03953 cv
168.484 3.03953 175.888 4.98724 182.389 6.6648 cv
190.009 8.6306 197.42 11.2429 204.628 14.3699 cv
201.215 12.4992 197.735 10.7776 194.435 8.61446 cv
193.852 8.23239 194.051 7.26045 194.794 7.26045 cv
194.797 7.26045 194.799 7.26046 194.801 7.26048 cv
201.659 7.31812 208.055 11.7453 213.348 15.716 cv
218.736 19.7585 223.604 24.4089 228.385 29.1379 cv
228.525 28.9134 228.744 28.7519 229.014 28.7519 cv
229.107 28.7519 229.206 28.771 229.31 28.8132 cv
234.809 31.0471 240.591 34.5212 244.319 39.2556 cv
248.034 43.9739 248.565 50.0822 250.347 55.6326 cv
250.772 56.9551 249.699 57.8106 248.622 57.8106 cv
248.572 57.8106 248.521 57.8087 248.471 57.8049 cv
249.321 64.2922 247.477 71.6072 245.206 78.2932 cv
245.354 78.1278 245.571 78.0527 245.793 78.0527 cv
246.256 78.0527 246.741 78.3778 246.678 78.8894 cv
244.926 93.2507 231.68 101.721 220.404 108.859 cv
215.998 112.787 210.557 115.858 205.537 118.402 cv
201.874 120.258 198.1 121.818 194.242 123.128 cv
184.495 129.136 171.38 130.135 159.582 130.497 cv
153.929 131.662 148.096 132.276 142.53 133.003 cv
131.855 134.396 121.128 135.264 110.371 135.678 cv
110.341 135.68 110.312 135.68 110.283 135.68 cv
10.517 74.946 mo
10.8401 74.946 11.1478 75.0863 11.3078 75.4285 cv
11.6832 76.2317 12.0895 77.0188 12.5021 77.801 cv
11.2658 73.2781 10.5202 68.6194 9.90102 63.9621 cv
9.16815 67.3923 8.76872 71.3386 10.5363 73.9202 cv
10.7487 74.2307 10.6408 74.7107 10.3556 74.9573 cv
10.4094 74.9498 10.4634 74.946 10.517 74.946 cv
54.0626 17.7131 mo
51.7057 18.4661 49.4484 19.554 47.2658 20.8215 cv
49.5178 19.7092 51.8132 18.6892 54.0626 17.7131 cv
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
152.687 121.552 mo
150.57 121.552 150.645 118.162 152.857 117.982 cv
153.246 117.95 153.634 117.909 154.024 117.876 cv
154.316 117.49 154.754 117.201 155.337 117.128 cv
165.473 115.849 175.615 114.398 185.53 111.89 cv
190.139 110.724 194.598 109.198 199.017 107.554 cv
203.443 103.886 207.536 99.8987 211.465 95.615 cv
215.577 91.1335 219.049 85.5964 223.26 81.1145 cv
225.614 76.115 227.03 70.5261 229.493 65.6257 cv
230.468 61.0823 230.837 56.4524 230.039 51.6243 cv
229.962 51.1539 230.343 50.5858 230.812 50.5858 cv
230.859 50.5858 230.906 50.5914 230.954 50.6033 cv
228.92 46.1418 226.568 41.6789 223.571 38.3083 cv
220.919 35.3245 217.039 33.3664 213.128 31.4939 cv
215.304 32.9978 217.398 34.6257 219.403 36.3572 cv
220.506 37.3095 219.494 38.7019 218.332 38.7019 cv
218.019 38.7019 217.695 38.6007 217.398 38.3625 cv
205.621 28.9031 192.39 26.4802 178.066 23.3215 cv
171.7 21.9177 165.418 20.1682 159.072 18.679 cv
140.578 17.8205 122.59 14.239 104.211 12.4841 cv
104.728 13.1825 104.32 14.3256 103.364 14.3256 cv
103.26 14.3256 103.149 14.3121 103.032 14.283 cv
102.254 14.0881 101.445 13.9866 100.621 13.9387 cv
101.57 14.7444 101.622 16.529 100.081 16.8318 cv
93.3874 18.1482 86.7467 19.6989 80.1847 21.5681 cv
75.3298 22.9509 70.4943 24.9797 65.5314 26.0637 cv
65.3151 26.137 65.0993 26.1975 64.8835 26.2659 cv
63.7145 26.8713 62.5494 27.4836 61.3878 28.1033 cv
58.465 29.6633 55.4835 31.7761 52.318 33.0535 cv
49.5729 35.0706 46.8913 37.178 44.2804 39.3996 cv
41.6188 41.6653 38.922 44.0129 36.5739 46.6135 cv
34.7877 48.592 33.61 51.0407 31.7955 52.947 cv
28.7829 62.1545 32.2092 71.1115 34.2741 80.2742 cv
35.0016 81.2786 35.84 82.2546 36.8122 83.2058 cv
37.547 83.925 38.3244 84.6066 39.1174 85.2742 cv
44.7677 88.7078 50.7233 91.5661 56.8913 93.8816 cv
61.5788 94.3923 66.5607 94.4885 70.1662 97.1301 cv
70.4733 97.3552 70.6032 97.7156 70.5807 98.0515 cv
76.2277 99.383 81.9548 100.326 87.7438 100.747 cv
92.7028 101.107 97.7389 100.765 102.636 101.678 cv
103.619 101.862 103.48 103.271 102.636 103.531 cv
102.124 103.69 101.599 103.823 101.071 103.952 cv
106.675 104.35 112.288 104.579 117.906 104.579 cv
118.956 104.579 120.007 104.571 121.057 104.554 cv
126.398 104.471 131.75 103.922 137.088 103.922 cv
139.187 103.922 141.286 104.007 143.379 104.239 cv
143.682 104.273 143.915 104.411 144.081 104.596 cv
152.258 104.295 160.437 103.924 168.628 103.744 cv
170.189 103.331 171.748 102.906 173.302 102.458 cv
176.331 101.584 179.385 100.727 182.378 99.7097 cv
182.411 99.6633 li
187.681 93.6199 192.952 87.5769 198.222 81.5339 cv
203.092 75.9494 209.226 70.4216 212.504 63.7376 cv
212.626 63.4887 212.858 63.3791 213.098 63.3791 cv
213.139 63.3791 213.18 63.3823 213.22 63.3884 cv
213.65 60.4895 213.939 57.572 214.32 54.6633 cv
213.633 52.6467 212.602 50.6511 211.119 48.6789 cv
207.27 43.5583 202.224 39.8147 196.656 36.9216 cv
192.605 36.1745 188.445 36.0925 184.326 35.8752 cv
184.293 35.8737 li
184.018 36.0739 183.682 36.1975 183.295 36.1975 cv
183.142 36.1975 182.981 36.1782 182.813 36.1365 cv
182.19 35.9822 181.564 35.843 180.94 35.6912 cv
172.706 35.2126 163.437 34.3171 156.35 30.4465 cv
153.974 30.0139 151.596 29.5905 149.211 29.2014 cv
138.754 27.4934 128.023 26.8923 117.627 24.8313 cv
113.424 25.0823 109.22 25.3313 105.017 25.5847 cv
102.648 25.7273 100.196 26.0066 97.7326 26.2537 cv
94.4039 27.2058 91.1076 28.2795 87.8292 29.4553 cv
83.7497 30.9192 79.7311 32.5725 75.8102 34.4201 cv
73.5695 35.4758 71.6803 36.5808 69.3532 37.0476 cv
64.0006 40.5393 59.6818 45.1877 54.4806 48.7756 cv
54.2478 48.9363 54.0049 49.0064 53.7691 49.0064 cv
53.1415 49.0064 52.5654 48.5092 52.3712 47.9002 cv
51.3307 49.1687 50.3976 50.4788 49.61 51.821 cv
49.6325 52.1169 49.5211 52.4279 49.2072 52.699 cv
49.0549 52.8391 li
47.9928 54.8718 47.279 56.9709 47.0958 59.1145 cv
47.0349 59.8303 46.4074 60.4032 45.7566 60.4032 cv
45.4644 60.4032 45.1675 60.2877 44.9152 60.0178 cv
44.7292 59.7849 li
44.1022 61.55 43.4733 63.5539 43.6979 65.3 cv
44.0699 68.1941 46.9831 69.9885 48.9142 71.7756 cv
49.4245 72.2478 49.0002 73.0413 48.3756 73.0759 cv
48.2002 73.0855 48.0272 73.0903 47.8565 73.0903 cv
45.8736 73.0903 44.2056 72.4493 42.9343 71.3811 cv
43.1031 72.0173 43.3088 72.6174 43.5402 73.1931 cv
45.1242 74.9782 46.8571 76.5628 48.7282 77.9529 cv
48.8514 77.9162 48.983 77.895 49.1233 77.895 cv
49.2443 77.895 49.3717 77.9108 49.5055 77.9461 cv
64.2726 81.844 79.1247 85.4968 93.9171 89.279 cv
103.142 90.2312 112.395 91.0329 121.647 91.6145 cv
125.327 91.2662 129.005 90.8847 132.696 90.8847 cv
133.171 90.8847 133.646 90.891 134.122 90.9045 cv
134.988 90.9294 135.397 91.6365 135.317 92.3005 cv
138.496 92.4129 141.678 92.4839 144.858 92.4839 cv
146.987 92.4838 149.115 92.4521 151.241 92.3796 cv
152.286 92.344 153.315 92.2742 154.335 92.1863 cv
154.077 91.2981 154.403 90.3049 155.573 90.1135 cv
160.847 89.2522 166.148 88.3733 171.267 86.803 cv
176.268 85.2688 180.52 82.094 185.469 80.6306 cv
185.542 80.6091 185.613 80.5992 185.682 80.5992 cv
185.782 80.5992 185.877 80.62 185.964 80.6565 cv
187.462 79.1956 188.848 77.6091 190.105 75.8884 cv
189.731 75.3508 189.599 74.6418 189.973 73.8996 cv
190.722 72.4104 191.653 71.0291 192.591 69.653 cv
193.939 64.7859 194.927 59.6096 192.94 54.8235 cv
190.302 48.4729 184.999 48.6921 179.166 47.8986 cv
178.479 47.8049 178.459 46.7854 178.982 46.4846 cv
179.439 46.221 179.906 46.0051 180.376 45.8103 cv
177.802 45.0266 175.18 44.3806 172.545 43.7976 cv
172.437 44.3929 171.997 44.9158 171.335 44.9158 cv
171.198 44.9158 171.052 44.8935 170.897 44.8449 cv
160.19 41.4797 149.14 40.4983 137.997 39.7282 cv
131.09 39.2507 124.082 38.9694 117.24 37.8313 cv
113.412 37.8435 109.584 37.865 105.756 37.9104 cv
102.978 37.9431 100.015 38.2097 97.0758 38.2727 cv
94.879 38.9978 92.7003 39.7912 90.5387 40.6526 cv
85.8165 42.5335 80.1637 46.428 74.8473 47.4109 cv
74.0363 48.1599 73.2506 48.9041 72.4913 49.6086 cv
71.1012 50.8977 69.922 52.2649 68.8102 53.6648 cv
68.8019 53.7697 68.7829 53.8791 68.7507 53.9934 cv
66.3903 62.3362 67.2555 72.3225 76.7794 75.135 cv
77.4494 75.3328 77.5719 76.2497 76.9728 76.613 cv
76.5553 76.8659 76.1359 77.0584 75.7164 77.2117 cv
80.6877 79.0075 86.2677 80.0769 90.6183 81.3449 cv
93.3951 81.6575 96.1798 81.9138 98.9699 82.1111 cv
101.805 82.3113 104.642 82.4626 107.481 82.5612 cv
107.851 81.9412 108.498 81.4656 109.336 81.4656 cv
109.447 81.4656 109.561 81.4739 109.679 81.4914 cv
112.4 81.8967 115.128 82.2532 117.857 82.5862 cv
118.597 82.569 119.336 82.5564 120.074 82.5564 cv
122.094 82.5564 124.107 82.6508 126.092 83.0051 cv
126.424 83.0642 126.615 83.2741 126.696 83.5285 cv
129.699 83.8044 132.704 84.0515 135.716 84.2331 cv
139.846 84.4827 143.982 84.6404 148.119 84.7136 cv
148.373 84.7183 148.629 84.7201 148.886 84.7201 cv
149.089 84.7201 149.293 84.719 149.498 84.717 cv
152.607 84.2581 155.705 83.5828 158.792 82.7282 cv
162.651 81.6599 166.566 79.9861 170.513 78.5271 cv
169.968 77.8587 169.804 76.8606 170.544 76.0427 cv
172.194 74.2151 176.021 71.2835 175.956 68.6233 cv
175.907 66.6276 174.422 64.8586 174.337 62.8123 cv
174.318 62.3441 174.745 61.9675 175.19 61.9675 cv
175.262 61.9675 175.334 61.9773 175.405 61.9983 cv
176.18 62.2273 176.848 62.6623 177.417 63.2209 cv
176.674 61.199 175.888 59.5466 174.729 58.2126 cv
172.881 57.7077 170.939 57.4206 169.423 56.9197 cv
168.924 56.7546 168.706 55.9573 169.263 55.6989 cv
169.607 55.5398 169.975 55.4177 170.354 55.3123 cv
170.118 55.2239 169.88 55.136 169.627 55.0544 cv
166.277 53.9714 162.64 53.4251 159.205 52.6755 cv
155.196 51.8005 150.905 51.2869 146.717 50.5154 cv
146.423 50.7472 146.06 50.8913 145.638 50.8913 cv
145.428 50.8913 145.203 50.8557 144.965 50.7776 cv
138.357 48.6044 131.597 47.9745 124.716 47.9745 cv
123.797 47.9745 122.874 47.9858 121.951 48.0061 cv
118.106 48.0901 114.024 48.5 110.004 48.5 cv
109.398 48.5 108.792 48.4906 108.19 48.4695 cv
104.075 49.7942 100.055 51.7131 96.129 53.7102 cv
94.9215 54.5901 93.714 55.47 92.506 56.3503 cv
90.1042 58.1008 85.4269 60.2678 85.5997 63.6448 cv
85.6358 64.3477 85.0489 64.7502 84.4465 64.7502 cv
84.2559 64.7502 84.0638 64.71 83.8893 64.6262 cv
83.7721 64.5701 83.6784 64.5051 83.5734 64.4446 cv
84.1544 66.1345 85.7286 67.5657 87.1627 68.6384 cv
87.3166 68.5442 87.4938 68.4879 87.6841 68.4879 cv
87.8459 68.4879 88.0172 68.5287 88.1916 68.6213 cv
95.4674 72.4866 102.714 73.926 110.585 75.8767 cv
111.55 76.1159 111.317 77.5739 110.354 77.5798 cv
110.295 77.5802 110.237 77.5804 110.178 77.5804 cv
106.358 77.5804 102.523 76.8166 98.8029 75.613 cv
99.4093 76.0379 99.3222 77.2783 98.4729 77.2783 cv
98.434 77.2783 98.3934 77.2757 98.3512 77.2703 cv
92.2467 76.4846 85.1027 73.8073 81.3678 68.5666 cv
77.237 62.7703 81.7223 58.7702 85.5055 54.4993 cv
85.8282 54.1347 86.1941 53.9823 86.5476 53.9823 cv
86.9408 53.9823 87.3185 54.1709 87.6042 54.4661 cv
88.9435 53.2434 90.6222 52.3142 92.401 51.5232 cv
94.7389 49.8396 97.0885 48.1706 99.4069 46.4734 cv
99.7028 46.2566 99.9953 46.1526 100.276 46.1208 cv
100.355 45.76 100.597 45.4392 101.026 45.3274 cv
108.174 43.4597 116.386 43.6907 123.741 43.6545 cv
123.929 43.6536 124.117 43.6531 124.305 43.6531 cv
130.652 43.6531 136.905 44.1815 143.007 45.8157 cv
150.851 46.093 159.35 48.6858 166.499 50.5759 cv
170.636 51.6696 173.572 53.0686 175.762 55.2776 cv
178.693 55.8987 181.55 57.4152 183.134 59.4021 cv
186.526 63.6579 181.298 71.425 179.264 75.3308 cv
179.053 75.7361 178.768 75.9988 178.451 76.1491 cv
179.536 75.9304 180.622 75.7625 181.709 75.6751 cv
181.732 75.6732 181.755 75.6722 181.778 75.6722 cv
182.64 75.6722 183.188 76.9724 182.479 77.5354 cv
176.487 82.2942 167.475 84.719 159.732 86.3503 cv
159.945 86.9358 159.673 87.6457 158.945 87.9421 cv
156.929 88.7635 154.741 88.9639 152.531 88.9639 cv
150.73 88.9639 148.914 88.8308 147.164 88.7922 cv
142.709 88.6941 138.256 88.4949 133.811 88.1941 cv
127.348 87.7566 120.908 87.0842 114.491 86.2317 cv
108.561 86.2219 102.442 85.3904 97.1227 84.7273 cv
95.8478 84.5681 94.5768 84.3879 93.3093 84.1931 cv
93.1794 84.2522 93.0329 84.2927 92.8629 84.301 cv
92.376 84.3245 91.8755 84.3363 91.3626 84.3363 cv
85.7245 84.3363 78.6456 82.9093 72.8155 79.9558 cv
69.4308 79.8694 66.2946 77.3606 64.4303 74.6199 cv
63.2726 72.9182 62.6911 71.1497 62.4172 69.3352 cv
61.6852 67.1692 61.4684 64.7649 61.9508 62.1043 cv
61.9997 61.8362 62.1598 61.6609 62.3625 61.5598 cv
62.3796 61.1462 62.3952 60.7326 62.4044 60.3176 cv
62.1935 60.1282 62.0412 59.8669 62.0197 59.5891 cv
61.5636 53.7444 68.3082 48.7829 72.3063 45.4885 cv
76.8073 41.7791 81.5812 37.9944 87.6135 37.697 cv
87.6346 37.696 87.6553 37.6955 87.6757 37.6955 cv
87.9607 37.6955 88.1751 37.7922 88.3478 37.9275 cv
88.6622 37.8171 88.9748 37.7073 89.278 37.5993 cv
89.1188 37.5598 88.9576 37.5251 88.7999 37.4812 cv
87.6578 37.1648 87.7374 35.594 88.7999 35.2439 cv
91.6863 34.2923 94.9081 34.0939 98.1335 34.0939 cv
98.8885 34.0939 99.644 34.1048 100.395 34.1194 cv
104.242 33.1882 108.151 32.5285 112.123 32.1902 cv
112.17 32.1862 112.215 32.1843 112.259 32.1843 cv
113.258 32.1843 113.572 33.1792 113.256 33.948 cv
114.019 34.0007 114.782 34.0417 115.546 34.0974 cv
118.485 34.0803 121.424 34.0705 124.364 34.07 cv
125.116 34.07 125.633 34.4338 125.917 34.9343 cv
128.323 35.1448 130.729 35.3611 133.132 35.5822 cv
133.042 35.5471 132.95 35.5159 132.86 35.4802 cv
131.686 35.0139 131.769 33.1834 133.172 33.178 cv
133.232 33.1777 133.29 33.1776 133.35 33.1776 cv
143.895 33.1776 154.898 36.5148 165.199 38.5637 cv
172.831 40.0813 180.151 41.992 187.106 45.1911 cv
190.183 45.8469 193.009 47.7375 194.925 50.5701 cv
195.335 51.175 195.676 51.7962 195.987 52.424 cv
196.076 52.4009 196.169 52.3892 196.262 52.3892 cv
196.482 52.3892 196.701 52.454 196.859 52.5877 cv
203.66 58.322 199.831 64.9245 196.117 71.0036 cv
195.928 71.699 195.736 72.3899 195.537 73.0691 cv
195.475 73.2849 195.38 73.4627 195.272 73.6233 cv
194.222 79.7204 188.314 84.7014 183.417 87.927 cv
176.17 92.7009 167.557 94.9255 159.149 96.6403 cv
159.065 96.6576 158.984 96.6657 158.906 96.6657 cv
158.546 96.6657 158.26 96.4914 158.068 96.2468 cv
156.934 96.3435 155.809 96.4182 154.708 96.4807 cv
151.966 96.6367 149.215 96.7026 146.46 96.7026 cv
141.342 96.7026 136.212 96.475 131.124 96.1751 cv
128.902 96.0442 126.687 95.8767 124.475 95.6882 cv
120.229 96.2925 115.837 96.5129 111.466 96.5129 cv
105.966 96.5129 100.499 96.1639 95.3991 95.7918 cv
82.3058 94.8357 69.3761 92.3728 56.8078 88.5993 cv
55.1466 88.1008 55.3693 85.95 56.5841 85.3874 cv
54.5856 84.5452 52.6564 83.5373 50.8258 82.3767 cv
51.3229 82.8445 51.8239 83.3171 52.3243 83.8025 cv
52.8269 84.29 52.5123 85.3481 51.7761 85.3481 cv
51.747 85.3481 51.7171 85.3465 51.6867 85.343 cv
44.8854 84.5793 40.1793 77.7868 39.0944 71.4109 cv
38.1271 65.7287 39.6086 60.3455 42.7692 55.9201 cv
44.6608 51.8029 47.2379 47.8332 49.3258 44.2547 cv
49.5729 43.8311 49.941 43.6553 50.3101 43.6553 cv
50.817 43.6553 51.3256 43.9874 51.5231 44.4655 cv
56.0524 40.052 61.0406 36.1565 66.3 32.6316 cv
66.5195 32.4844 66.7348 32.4207 66.9354 32.4207 cv
67.7129 32.4207 68.2667 33.3793 67.9674 34.1487 cv
68.795 33.6628 69.6266 33.1838 70.4635 32.7141 cv
71.9704 31.6697 73.7086 30.7727 75.5314 29.9817 cv
78.3517 28.5256 81.2048 27.1335 84.0582 25.7517 cv
83.0417 25.2102 82.2555 24.362 81.8259 23.0105 cv
81.6071 22.321 82.238 21.6348 82.8957 21.6348 cv
83.0703 21.6348 83.2468 21.6832 83.4098 21.7927 cv
85.1993 22.9957 87.4173 23.3313 89.7139 23.3313 cv
92.2561 23.3312 94.8946 22.9199 97.1535 22.8186 cv
97.9821 22.781 98.8107 22.7336 99.6393 22.6946 cv
102.686 22.0945 105.753 21.593 108.826 21.1618 cv
108.893 21.1525 108.958 21.148 109.022 21.148 cv
109.681 21.148 110.152 21.633 110.296 22.1638 cv
110.83 22.136 111.364 22.1121 111.898 22.0842 cv
142.37 20.4939 li
142.401 20.4923 142.431 20.4915 142.461 20.4915 cv
144.214 20.4915 144.167 23.2462 142.37 23.3532 cv
140.766 23.449 139.163 23.5452 137.559 23.6408 cv
141.493 24.218 145.402 24.8826 149.248 25.5017 cv
159.373 27.1311 169.419 29.177 179.394 31.5442 cv
183.479 31.9104 187.567 32.1419 191.664 32.5364 cv
192.86 32.6511 194.019 32.8166 195.154 33.0208 cv
195.497 32.9527 195.841 32.9209 196.184 32.9209 cv
197.729 32.9209 199.264 33.5642 200.714 34.4319 cv
206.916 36.4973 212.32 40.0017 217.63 44.6023 cv
218.39 45.2614 218.16 46.1262 217.566 46.6194 cv
217.869 46.8411 218.108 47.1653 218.162 47.5788 cv
218.628 51.1335 218.693 54.9074 218.359 58.7067 cv
218.43 60.8855 218.193 63.07 217.722 65.2717 cv
218.747 71.9582 214.661 79.7888 210.869 84.9797 cv
206.857 90.471 201.806 94.2585 195.917 97.1955 cv
191.505 101.378 184.114 103.221 178.459 104.709 cv
178.417 104.912 178.3 105.098 178.069 105.207 cv
174.424 106.932 170.527 107.407 166.576 107.604 cv
159.229 109.175 151.798 110.376 144.354 111.316 cv
144.303 111.322 144.255 111.325 144.207 111.325 cv
142.903 111.325 142.655 109.008 144.014 108.807 cv
145.363 108.607 146.709 108.392 148.052 108.169 cv
145.297 108.232 142.542 108.294 139.786 108.322 cv
138.994 108.329 138.202 108.333 137.411 108.333 cv
136.013 108.333 134.615 108.322 133.218 108.304 cv
129.182 108.684 125.091 108.701 121.057 108.74 cv
120.348 108.746 119.64 108.749 118.931 108.749 cv
111.87 108.749 104.802 108.418 97.779 107.698 cv
82.445 106.125 67.3722 102.804 52.672 98.1926 cv
51.6354 97.8674 51.4767 96.78 51.883 96.0534 cv
51.2668 95.8493 50.653 95.6384 50.0475 95.4094 cv
50.0299 95.9199 49.7043 96.4054 49.1701 96.4054 cv
49.0667 96.4054 48.9554 96.3872 48.8371 96.3474 cv
42.6803 94.2776 36.1149 88.5793 32.2238 83.4133 cv
29.2145 79.4182 28.259 75.0481 27.9704 70.3777 cv
25.2883 67.0383 25.5763 61.0608 26.6354 57.1736 cv
27.3376 54.5969 28.5148 52.2292 29.9401 49.9987 cv
31.5514 44.9836 37.6921 40.4895 41.2203 37.5573 cv
43.3434 35.7927 45.5426 34.1321 47.7946 32.5476 cv
47.8439 32.4304 47.9132 32.3147 48.0109 32.2038 cv
50.8141 29.0325 55.2643 27.0173 59.2941 25.1081 cv
64.3742 20.4011 73.2267 17.8962 79.8825 15.6619 cv
81.2907 15.1335 82.7072 14.6374 84.1301 14.1672 cv
87.6779 12.8948 91.3439 11.6311 95.0294 11.195 cv
98.6769 10.4128 102.373 9.81908 106.128 9.45387 cv
106.174 9.44932 106.219 9.44712 106.263 9.44712 cv
106.579 9.44712 106.815 9.56358 106.977 9.74337 cv
108.007 9.63795 109.043 9.59097 110.083 9.59097 cv
116.403 9.59097 122.858 11.3272 129.03 12.237 cv
131.392 12.5852 133.759 12.8938 136.128 13.1765 cv
136.235 12.8733 136.46 12.6228 136.823 12.5603 cv
138.995 12.1873 141.184 12.0229 143.389 12.0229 cv
155.966 12.0229 168.947 17.3851 180.9 19.9602 cv
188.471 21.591 196.036 22.8342 203.195 25.925 cv
203.603 26.1013 204.002 26.2947 204.405 26.4812 cv
204.339 26.0574 204.653 25.6192 205.154 25.6192 cv
205.208 25.6192 205.263 25.6241 205.32 25.6345 cv
212.158 26.8777 220.987 30.0242 225.911 35.1785 cv
231.241 40.758 233.893 49.946 236.611 57.0261 cv
236.968 57.9555 236.048 58.6993 235.215 58.6993 cv
234.791 58.6993 234.389 58.5064 234.191 58.0466 cv
234.154 57.9626 li
234.142 59.5471 233.929 61.1653 233.72 62.6662 cv
233.511 64.1643 233.221 65.6462 232.879 67.1169 cv
232.499 70.0373 231.506 73.0315 230.257 75.9128 cv
229.625 77.7268 228.967 79.53 228.311 81.3235 cv
228.061 82.0086 227.543 82.3836 226.975 82.5095 cv
226.599 83.199 226.225 83.8733 225.864 84.5208 cv
222.261 90.9763 217.835 96.9182 212.783 102.304 cv
212.856 102.277 li
212.927 102.251 212.997 102.239 213.065 102.239 cv
213.636 102.239 214.054 103.083 213.562 103.491 cv
210.301 106.2 206.674 108.424 202.807 110.278 cv
204.79 109.853 206.785 109.536 208.783 109.536 cv
209.06 109.536 209.337 109.542 209.614 109.555 cv
210.633 109.601 211.083 110.979 210.146 111.52 cv
206.19 113.804 201.419 114.376 196.99 115.289 cv
191.979 116.323 186.946 117.247 181.896 118.062 cv
172.265 119.615 162.578 120.755 152.857 121.545 cv
152.798 121.549 152.742 121.552 152.687 121.552 cv
208.854 102.267 mo
207.75 103.221 206.632 104.161 205.495 105.08 cv
206.865 104.549 208.237 104.02 209.612 103.496 cv
209.218 103.2 208.933 102.755 208.854 102.267 cv
211.334 71.7649 mo
208.899 75.0042 205.437 78.008 203.607 80.1306 cv
198.823 85.678 194.039 91.2258 189.255 96.7732 cv
191.859 95.3405 194.316 93.696 197.025 92.4021 cv
197.191 92.3227 197.357 92.2878 197.516 92.2878 cv
197.667 92.2878 197.811 92.319 197.943 92.3733 cv
198.42 92.0017 198.888 91.6179 199.349 91.2249 cv
198.441 91.6736 197.503 92.0832 196.527 92.4368 cv
196.411 92.4785 196.299 92.4976 196.192 92.4976 cv
195.2 92.4976 194.633 90.8529 195.669 90.4016 cv
203.159 87.1394 208.061 80.5886 210.878 73.0764 cv
211.042 72.6409 211.189 72.2029 211.334 71.7649 cv
69.5089 88.2971 mo
76.4191 89.8035 83.4054 90.9026 90.4572 91.5574 cv
89.4704 91.3035 88.4845 91.0456 87.4977 90.7903 cv
86.0197 90.5549 84.5422 90.3196 83.0631 90.0842 cv
82.696 90.0256 82.4924 89.7717 82.4079 89.4699 cv
81.13 89.138 79.8517 88.8069 78.5734 88.4758 cv
77.7746 88.2688 76.9752 88.0622 76.1764 87.8552 cv
76.0705 87.8933 li
74.3041 88.1811 72.5258 88.3196 70.7512 88.3196 cv
70.3369 88.3196 69.9226 88.3121 69.5089 88.2971 cv
176.218 75.6125 mo
175.721 76.1233 175.214 76.6184 174.73 77.094 cv
175.728 76.7922 176.729 76.531 177.731 76.3059 cv
177.175 76.3 176.616 76.0325 176.218 75.6125 cv
178.84 65.2786 mo
179.002 65.6233 179.15 65.9763 179.269 66.3396 cv
179.456 65.9304 179.645 65.4968 179.809 65.0554 cv
179.588 65.2107 179.314 65.2928 179.037 65.2928 cv
178.971 65.2928 178.905 65.2881 178.84 65.2786 cv
179.027 60.3508 mo
179.454 61.3615 179.841 62.4641 180.193 63.6887 cv
180.336 62.8943 180.306 62.1247 179.92 61.4744 cv
179.669 61.051 179.368 60.6795 179.027 60.3508 cv
212.4 44.2029 mo
213.047 44.9622 213.666 45.7458 214.233 46.5715 cv
214.653 47.1843 215.038 47.7956 215.388 48.406 cv
215.475 48.0168 215.556 47.6272 215.653 47.2395 cv
215.694 47.0754 215.761 46.947 215.834 46.8293 cv
215.574 46.6575 li
214.535 45.8122 213.477 44.9919 212.4 44.2029 cv
f
144.97 79.936 mo
140.165 79.9358 135.261 79.2834 131.166 78.7395 cv
129.477 78.5627 127.807 78.3206 126.226 78.1443 cv
120.62 77.5188 115.078 76.5452 109.579 75.2917 cv
108.749 75.1023 108.296 74.5676 108.145 73.9455 cv
105.88 73.364 103.616 72.7722 101.352 72.1868 cv
100.023 71.8433 100.462 69.9644 101.681 69.9644 cv
101.769 69.9644 101.861 69.9741 101.957 69.9949 cv
104.348 70.5139 106.744 71.0198 109.146 71.5017 cv
109.441 71.3197 109.787 71.2088 110.179 71.2088 cv
110.341 71.2088 110.511 71.2279 110.689 71.2688 cv
116.447 72.5994 122.253 73.635 128.138 74.2248 cv
131.99 74.6111 136.201 74.2717 139.889 75.5212 cv
140.915 75.5531 141.94 75.572 142.966 75.572 cv
143.245 75.572 143.524 75.5706 143.803 75.5676 cv
143.551 75.5295 143.291 75.49 143.053 75.4548 cv
141.781 75.2684 142.037 73.1208 143.229 73.1208 cv
143.274 73.1208 143.32 73.1238 143.367 73.1301 cv
146.299 73.5176 149.273 73.9498 152.242 73.9498 cv
153.194 73.9497 154.146 73.9053 155.096 73.8006 cv
155.943 73.7073 156.738 73.5261 157.51 73.3069 cv
157.369 72.802 157.518 72.2346 158.144 71.8757 cv
160.078 70.7683 161.939 69.3244 162.174 67.4495 cv
161.532 66.5993 160.828 65.8405 160.069 65.1662 cv
160.298 66.3996 160.528 67.6326 160.757 68.8659 cv
160.893 69.5938 160.374 69.9963 159.856 69.9963 cv
159.423 69.9963 158.991 69.7165 158.939 69.112 cv
158.788 67.3836 158.637 65.6555 158.486 63.927 cv
156.497 62.5598 154.227 61.6496 151.823 61.0334 cv
152.671 62.9983 152.396 65.1731 151.277 66.8836 cv
151.619 67.2542 151.765 67.8245 151.474 68.2712 cv
149.957 70.6016 146.703 71.1675 143.565 71.1675 cv
141.719 71.1675 139.912 70.9713 138.525 70.8235 cv
138.032 70.7708 137.545 70.6931 137.056 70.6223 cv
132.555 70.1941 127.894 68.886 123.533 68.3274 cv
123.131 68.2761 122.732 68.219 122.332 68.1648 cv
122.235 68.3181 122.077 68.4426 121.84 68.5017 cv
120.926 68.7296 119.858 68.8426 118.706 68.8426 cv
115.213 68.8426 110.946 67.803 107.843 65.7761 cv
107.769 65.7807 107.696 65.7829 107.623 65.7829 cv
104.881 65.7829 103.406 62.5996 103.671 59.8142 cv
103.619 59.3508 103.613 58.8709 103.659 58.3733 cv
103.708 57.8567 104.05 57.5534 104.439 57.4509 cv
107.204 52.7463 113.378 53.3303 118.026 52.3635 cv
118.124 52.343 118.218 52.3335 118.308 52.3335 cv
118.474 52.3335 118.626 52.3657 118.763 52.4216 cv
119.67 52.3182 120.594 52.2696 121.53 52.2696 cv
126.777 52.2696 132.379 53.7959 137.222 55.7458 cv
138.197 55.5722 139.209 55.4976 140.236 55.4976 cv
143.735 55.4976 147.411 56.3631 150.422 57.1281 cv
151.892 57.5017 153.319 57.9651 154.679 58.533 cv
154.805 58.1262 155.113 57.7766 155.552 57.6706 cv
155.921 57.5814 156.298 57.5393 156.68 57.5393 cv
160.423 57.5393 164.643 61.5727 165.587 64.8626 cv
166.264 67.2234 165.734 69.1125 164.553 70.6355 cv
164.943 70.5056 165.338 70.3811 165.744 70.2747 cv
165.828 70.2526 165.911 70.2423 165.993 70.2423 cv
166.729 70.2423 167.325 71.0788 166.895 71.7722 cv
165.094 74.677 161.914 75.9749 158.327 76.4436 cv
158.301 76.8596 158.114 77.2634 157.743 77.4553 cv
154.11 79.3342 149.586 79.9361 144.97 79.936 cv
143.219 59.9065 mo
143.166 59.987 li
143.611 60.2815 144.041 60.6028 144.462 60.9339 cv
145.679 61.2063 146.53 62.3293 146.598 63.6721 cv
146.69 65.5041 145.425 67.1199 143.891 68.0115 cv
144.879 67.905 145.863 67.7439 146.846 67.529 cv
146.939 67.4167 147.057 67.3122 147.212 67.2234 cv
149.685 65.8049 149.608 63.0447 147.716 61.1916 cv
147.32 60.8035 146.9 60.4485 146.461 60.1257 cv
145.383 60.0222 144.301 59.9455 143.219 59.9065 cv
121.078 63.5928 mo
121.175 63.5928 121.277 63.6121 121.382 63.6546 cv
122.532 64.1174 123.701 64.5559 124.877 64.9783 cv
123.926 64.3098 123.338 63.3914 123.585 62.1194 cv
123.77 61.1667 124.438 60.5647 125.336 60.1848 cv
125.603 59.8704 126.031 59.6516 126.681 59.6355 cv
126.743 59.6339 126.805 59.6333 126.867 59.6333 cv
127.154 59.6333 127.44 59.6473 127.727 59.6501 cv
128.351 59.591 128.987 59.5722 129.593 59.5722 cv
130.599 59.5722 131.519 59.6239 132.154 59.6292 cv
132.216 59.6292 li
131.801 59.1619 131.695 58.4045 132.228 57.9567 cv
132.479 57.7454 132.744 57.5588 133.011 57.3786 cv
130.755 56.8162 128.443 56.4285 126.039 56.2117 cv
125.28 56.1432 124.52 56.1163 123.758 56.1163 cv
122.34 56.1163 120.919 56.21 119.503 56.3037 cv
118.087 56.3975 116.675 56.4912 115.274 56.4912 cv
114.381 56.4912 113.493 56.4531 112.61 56.3528 cv
112.386 56.3274 112.188 56.2336 112.026 56.1018 cv
111.519 56.2546 111.019 56.4255 110.535 56.6448 cv
108.016 57.7858 106.685 60.1648 107.998 62.0749 cv
111.967 63.6174 116.035 64.2893 120.174 64.7663 cv
120.123 64.2232 120.522 63.5928 121.078 63.5928 cv
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (time_1.eps)
%%CreationDate: 3/12/2018 2:06 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocQAOX9dn!<9t6,!bEB7:"g,21kqh/YU`\91#WC<hdr3:s>jP]=9,Rbg^<TrRa,Bmapoc(M%J^/LnaTQ))H+h9F3hNgUpf
%a\VW6IX(\5Z^9S;?i@aSf_ONMc';T*Icm"2+$]VD:]C6thqrm4Ib%Mt.HApY(0m'ph,X+_f7^3k4K^c[HMYO;gQuimGl?plmJ#K[
%?9Nf2qYOX@Dm"ST^:nmdr:]:'lPE@Rm./]D`pbi]q5<\RI!baK*WOFYo(B1m8CNp7Dr/PCI/f*F:B/H)J%;1i/?M$`qTlpkrV"q=
%DdGYRoBb#Ns7J1<HMsnG\,Psl]-mF_\_/WZ:6(sh06bIkIsLV&o/HNih0PCbp!(g+\AeKQqqZI0q4:Z!H'%'kfV/=cFYraNk77Mr
%:V6K_r8$hY0'[Mlpu7*BGWd3']9q[2hC`bk*e9QKng2\9J%0psh=E"4DE1Cajf?O4Wp.YdJ#AuI,\+XuIdZ5r#hA<_X]I,C^T0-*
%WQG3&?c,l;Z!XgImd6(]DZB9ch1*1fo$-Q;)r9i3Dn^Vms2c\cZs:T6j3E@#Q0[GsK\uh!r:]eJ]mTNC3]+1Fkn*gUeMjt`V$#9f
%h)p2(6(bl`s)2QJiQ:D(Dr6A(^3]b\7d(Z#](FnYp4jI!Ie)+FfAH<A[]b2Th<iBM]_W^tje)G:Y$-f%d3W/-<mklrauPfZ9==3A
%P5C?`+?6!jU$duWrG]7FS:XW96H&P@YFg7?m,]m(aLe(ri_>Scq>/c'Wur5C@/W<=d8cb:[/S*P>e8n=S(j;.9:Z%Yn=+,a/6BU^
%&s#5ir9!M6"\.X$r,XNTiMFb^kHDV-hld";n)P6KHtV?RL9H+(8hPA^&iY:;kdUE#qXkZNIun%:o(B%*^AHI(IsL_^d8-s\H1e)i
%h63Ha]\Vg*GPpjSG!BQmPLjaPo'5n_b!1CKc0^^;\mIUGp>+'OERQT@p%HYZ5G-ia>!M/hs5Wh;Rocd^1;DN@mSEjerdh[H\a9=b
%qT2\3@eoaXk92dK;0h!4?`rKTqgT].]kAI4q=OsGH@#DImIOE:9fLYp*cf:SSj.MrjRq`D5"\&^Dk>%KY.)?+[r;9@TR2Q0Ija'h
%]5.`6SL7+GHI/FY]_V/:s8;TP2rB\.lT`u[a4G"Z6gf2Do)/<iDdPa)ma'4Nme3i6q#8UO5J2=8I,+\;n&LXShsjdXnj*odf,&p_
%p&*M;0?.MaQ7kX\T07UOqrM2"IrkLk;8qUGrUP.c[=@UnKq32^!MVgOReM.*J(pl\X"HP,IefW#.:58McWke9p/g97f)-WZ.=I:R
%h`MR+GgF<XlT&>Ojb[[;?U+G:4!lGgq-T`,'`2>5jU]\ogob_ieVim(Gj`<Do98W\3HP%b?`pk3?d$#=Y?O6kq:et-(O,bCo-qG%
%rT'G\Z=a)&<4A5Ld\XR.r::\Mo_/!T4Q^[rXP.*ls5rjHIt%</\OsRo+7M4U>JZcsn;kQ!b.ja&+8d^KH/TutR?gkq5Dm(FI(b%.
%M/G)^bc]h-(5C[VfC-!1\(K@S`6(b_h^f0'")Ho^O1`a:qi?&eoLW@7IIql6P1S'ifH41Om6Z#X+F`julgLG&rkn/JYFiK*p(eis
%f!6%)AI6(^r%4`2>f,B%$f9o^r'ua_;-\/7+]3oY[Q%OA-0P;Sr9-1K-TU1/\G"NLNhr<-34=7IDYU1_\("jpbr7#j;GZsfpJlZ>
%9?f>O+6^jA3QTU*Lh4[SQ;Ci#OlIk150GNuc1jjjk)d7rYecZJ,KD5RjZ''L*:g%-;ir:NEBfU^1*_s?2fbGJ5n81jfV1JPAt0Eb
%*'Pup#rgfga"\RpOO"4b<&mR4#N@!H.kcBWOR<F5^Ys0qj6."om,bbNnr^Z_+pVF0H+C>L:6cnKa+D4b\<@n&3VLm0Hg)7?C(Z:H
%7s7Iaki=J.^q&PrNmi$5iuijFbI&=L8!P=j85$<7kT_-5qS,$OnmZJVIek^)H1UKRf$]WX%K>""ih$l0;Z;$)s$+SE^#.#*l[@O2
%JF8=8BqI*gq]H-T">>-Ia%;;D*&q4,j1:-'5]T9.d+'=%Pb*%Ca&1p\+9tYpR#"j@JfmE17JQWs3K>:V#<DLBVsB3^nYdj;\L%`W
%8=.C6,ciUBAZ'R556q#a^&7o<*)6E3q>VZ=?Q_<>%?Wl9i@%?%o$-2b,)I[-<#Q;<B91XdE`kd_ZUcERZV)\,e!YU?R"XI[aCu`e
%jV.[,j,Qmq,>6YUQ]kWA^9U;dhOR&BJk0X?iAuZ],WnZ-*Pt[l8`id,nl[R4j!cQ/aFpNJ_iEt,h\Y@SMtFk0hagNHRC?2mngIu3
%A6*=\Mea3()]>h%j&\Vn*1QSsN-(/DY9F:.lf7YtaG:Xh.3_44,#]kO4XX/^8ll`FgibXsN["Jj(o.i:;'*M;olto?+-/q&UJ.S)
%8j)[DM#+YG*DT*bo]J]@O;A(N_4X[<d:kQ:kr@Oi`c:)'/0#c<%6k(a"C[03<(T8J^6HJ=Tt;*!K+K(QNk"gM70d*0.(0G&!\o0%
%8AlB1f?tO`$MfhLnclFhlI0f86n23X=MY)M-K&NT?$;ISFMj-&fA&G_['5lOimc/AL_UHYjP4gV@bRD-V:iPLnA..G*Fo<+e`c@8
%;&\&r!8T9Jl#:^RJbG3,&5=O)&EQG@'Gq,O"MBm+"thm0hiI!K"^4[nUT>Fj4JI6a4;]4*-@E0/'4,Do.LagIj/?*L)il/+H$dGh
%^#<Vukp,e!"p>r?V2c%9K#\8YEO]71,P3FN!>/Xo07H<,\O9C(F$j$(j(+iCE0;7k96`;#X5elQ`5VpUSEcL4"ZhAf!!BX,@Q71Q
%S02<<*?mdG,$5@d*MHrYK5kn)_L^]\<'u!bJ4HW;'0fSFDjEPK5#H3Sb,rioQbZ`.]+iP2(at/,&uet^M'A.i1n$N:M=a.ZB:8*a
%3Qn6jAfi%UKS.@a[G2B.2G:MKOWH/r["qDH6s'pCA_6M*.\E</l_?ur(8?M@%@3Bp/M:Tf<eh)\jKddTW1;p_=AZ02S.o7(bR@Y8
%$XeW-bRD<317KFh53,G7\$1*^94q3V)G0cbE5Car`BcrtMZafNbf)l7L4r:;Oc.%5Q[t=]*J]4*BUkU:0Y'*J,h":N,)o@KCmZJ<
%Ok;fkP%l=8Ud="i+;%NS#0G`G&Jub79G'c>7*Q6"4Y"^:A1!'f;r]:T*JR&$.`g#j)#e7Um^aFKlXh7O7Pt6kh$2YW'C_1Ls,f6<
%U\c9RP+8nWphAT`hb;p"<^;ci3CS%E8<\YK=44S]@'76%?3"H6)=DeO+*RU03WT3Po&Z&O\)6Pd[3kMqgjk=MEr4@WJSp<hYn*"2
%XX5k(+F;[sN=\O._+H\C<ed.V7DP>tgMtjQ=i>>6,'jlK_27Y.&S"Zf,1K-:%%^'-Wcg%2L8r]n"kmWO:gJsaKURj!NeJs&:N^pI
%bHFUj^AR9UgDA^ldHsSE10)rV*&SI2gi98PR9HKMS1VCRkZ$*3Z;YnD$EjlG[jo,kZe%Q\)c_Ps)6V$%NgkK*nX^57q%*SrGE-Y4
%M"_m'HVf^YGN=+3ErR;,]^L(;_[a6;_p<323TQ223q)%Jk<%OE`oPl6d4'WQ8(T4<d4:.M[6^lLeLZ&MTV,LO]oYSJEfal"7M`KV
%93nEL&WIu$IP`Vik`li#I5LW@]Rsp"C!c6]aIT8J<9#7hS4]nN;b\%nDQ5]8BO1M:B%_X#A874*3Aui$aUk3t+?F7UVV#m2#L!nJ
%``Op)Ct2Fi8_/q\)/%Q5T]%khj#HA1DRAXodqosTKpsohVuO.Gi@RP^449[Pg6!6!I7JSP;:e2'=Pr^`Da3<Cml9?UNsFS4_*;t\
%:]0hYEQ<9;PY%KH&T`3+^bjhWXmE#_`#9><P/N0Z1'M6sL=IJSVA"#4d;Gqj>2VA$3fB,\ihTAg-$88XFuSo>NRDslXAuF60HSH_
%4.U)N0XQ^(%)B/0bV3gu;g7eeDGfeq(=3CNXBK5GI\K]^`W9nn53dIVY)YNo1`MFLG19"ID"Z)A#.ecDBcb.p+/Y=k5:0)NGJ'ui
%hL=7`e)%5"53Vcha+(-Ork%*lc419b"<N[H=/IlSI<I3f!-%oVSh0S"F^$]ieeg&"LrH/.cARF0buC\&%`<2Tk*]f2FKh7GjWpE8
%'O)>YLIlNRoNe-(K*?r8TKq-=mAF>oDkXE;LB'$[%DaX,UZa^O\O+WE&]g\i,D66&f"JLYj+^)L0gO8oC([G*.L)+%O(oiW$<=9O
%NR?p6+4IC.bS-I.07$hH'C`P5cYE0DAe/S@^RSN;duRVJpc2Y?:7%#!Z?#L)N7L,`L^uN,NXn13!:YUN\`8=grNC=`Y#0(SDN6Z&
%=U`JJ\d:=`FE9Lcco7@$8Z&.BhAhS#,(N)Q0ciKOd,SP1&2Y%#FTao0I5^rQR@koM:B6u:3rsLSe>Y^rOg-YF3>LO1J9(g1)RLq/
%70ban!c:]j-DA[%gba9InKUdLKfD08WA(4OSI0KhfVriQhP.6>TI4,CNQ"AH`eocX!9u*bgZ,S0Mp:YrLL.%8YS_5^3%Z5pBPe1S
%j)KmWa,m=$h'mLTpf*;<[5uO[<D>EOl8WJ24ao5^]\-c-lOg$>Cl\*/[iTS1&L6-RmcL,$o[`%NX2jbHa5J1sh!m\nh#h:q396)1
%552h;*H,gZCR!-`jg.GPXAM13*C">(cPkoO7es,_52@5RUPr15l$ol9n)Jo>*/,S8ZtcjGdR\XY/iV9C'q*6]E=9'c0DsouWkt[E
%+6)l?`,YnC!fQ9NnVFO6IV*b):4@@0?=c'l.U;gU^S](8P0Z5)>Qs$-k*ko!okQJM#G^8<o*O28q#kT!>V'[7IK2*NeJSf@I;=i@
%N,2Kg$'M'mLgnZRM_,HWR<"M;T0GPc4EH!3N]S!:6,2OMB0o`nC_WTn.hdUb'F.3l2/Xj\9e!XMQ]"3+.IO)?/&`a(M>*0uQ%-Wm
%KliZmp_G%MbK,#jqhp8T^`D\uU]/`uZbPP@Ida3%]h^=J>eE0bV#>+]C_CV8@G`:3=]'j_'';VbgbFbQA3m]/\<mJ\i,0.5ikU((
%_H2l(Y(F6<FIDm%J8SrnC(=Pr!kAS>*V66](8r]-5]oIsMFNs\Gaf#p,5fB@G$@G)9sO=/b@@r=_*DD:=Pg(?XI]F/1=8OS<RSrd
%eJqQm:2`UFWog3sF&SRiV=r-_P>'jIF&Oq\[:cEBb>:WflC=^)$kl[3<e!kfgh>!uj%$"9%^WcB_2^L81_Pd*QZ[Z)4%GJrC9HlM
%CiJ?ka77#T5B=e;5<&<WpK;+o+\ok!Rt'q$RC[$dh!n.o`uUf@pqBgIJm93P8$Jt]^-ON7#1#0FPaRW.aaQaWDD.l8<<"e0Qpa)X
%cke_q4e,jCll6mV\f$?Tfeh-K3pAK.P3-2>SuT]@lP$V,H`BgZ$%eUIXXSjnAHn:me'M*6%1ebpUNt9b6g#4C^U?C+&!Ql&&4`*Z
%_qmQ#N<$Dn!)m9VJqee-\RZO28F7@QI'eOV(Q25k4cVN_m<Zpm5P-(\BZ$F&hfJ@8<drYLWWCSidFY.R@u]!-dA6e*bWiF3\_/#k
%F3Y]R%6Z2]j%%./iJ@4LkoE9[46?bijham@&%U_k[^R7Dh1seU!GB*lnb7IP?8/^5C3\uh$SO6ts0.'@4A3]FE^S+BmlC@pbO8fE
%qjH1lg0r:pIn4JW$8.%3o^K4'FBsQc]]T$N9`Ic$dL%L=hS4V6@aAn"V/oJ46V;Vh8m=:>%[85bH\IWk5ggqiWRu2#*DN2hh!m"-
%[":a@JO=&Md!QB5H5KJ":PP!IgI(CRf&GtIO)jKX48<5S^3n!Bn+k4`*e2L[49Ml"Z4,?SXLdP+&NfbQD,\D7O3fh`782kh/!3Y`
%UfBsa6.-+9CXYA%kn70Je8(,HnqcD/CXpgZe/UW#FJnEfAn\%,:#/[M4R0=E>sBb<Xq8,,.@*KeWCYR^<*@i*92s4F<%Cmk[!Xp*
%Q`3/tA2V:4QChum5$1,DhX]Wokr12s/kcsW9rE]rdD5CiJno:t\l8Q?3`(n*8p-n;bsPX7(=k$#RV\]-24LjG8"#BbG,2J)cB$a8
%>WDYpLO7'-NW%4VRf/etj$sVAc]6Jd&%U^&c?c,Cn+ht_9uGCed5EBh^1P)pPt@FDGp([hMl^Er5#+;h@m<d/_-q$,8\bUBP)9L*
%W>;J,YUj957$Tu5L_KI3Ok$i(/6oN=ZI++QXJO.BVbB"&`&nUs9p^#SUWO@F<rRr%mRUW-kjYV&.&l[^]a6/-o.aeHM`+81aj_OD
%cX\=3^bNn3##RWMeq?#0W*"(q3JD>SM.u4Va0rcrS!(609;69J?Gprb#jQHPeD8P&DZs3\O*iJh3I7BcVB3IlEI-4[GC8R6D`s-D
%LYVDpgW(>,n+])eqh3B7H]YYF0!#m)gELkm-s^T]j<X@pCk#pP>$6.pg@1e[R"AX!S]A@<j_l,jo(SBU8iq;Q=+pN][GYICbo.lB
%[)m42aslJI$4p<qL)hQTgTl]RJOM6Sg(metWOu\9$W.VAgi4sQ\5UC)8h+(!X-eB,C\,Ip3t1cM74e#=\>-A5q2SRc1W2&s6N^A'
%3+`,5l]oWr12q1oFj-;!P"A#Oei.I7,B89H(,lZY:.TIN"jAj+C/DWh,C+jZHp+E``!VMs3!:2/MF@m@hMIM@ADn,Jp`]p?';GTb
%ppE4F_0Zqbi#l>WI*Y@S+&MsDV3'[a8?^gtRtJ$-+te(hlM'D7iMhW&mW`?&T,mUM;=5DCj';"sa[EmZUqbYD2rf7PBo4SqH<Bt&
%A>\#,:sclnADJLM7[Y6s;+@mNbVJo3B$f>6=Z2a[_2'`!0Z;HLP::Dsf_$r3MNM6k1UGTDl6b%q(f9Bh95=51R/_ctkr%q#f&N:M
%6YiJYSOXX83elt%@U^Lrh*Z@2$JMVh1,flC9I*S#aCL6!johnk9N6_32*@3W/>pE@a,)VW@CKoT51O=U%LdjC(d3gU_rSEaH&,<r
%IY[9Ypq?T@5`cdt?&Kt1POg9@dTG%Wr&2JFBA84!`98D2lEPND!8V-XX-];.$qL&>P*Vk&m["^P&%oa!YHIW<YPk$eon[kd-to5<
%3do!^>(%>`,+D+^(=51Hdn,4f:T-<KW&uD+LBu3QeAeD#ZR6trD4OjEGVERs?rk&(ggfS4bNbp;nb_[8F>)^<n$2^)1BCZ,5s%bn
%&_FsaPS1*YPaGe.P`/j#&nP5WUJ%q'Z43lP;sfCiYRnC*T_=.)E;`q_cHC<s2.IKSjl=dHcjSXH3!Qakes+s0\U+`hXBT5ij/kTf
%1AUS&n<W+NX:k9[NurB**Cng\0gAlBrg*)QP"9LdWBDrtOYrhul*Pet>>grfhQR7YUf9aH!uU%FXI)UH78GDFP<AKk//P^"JG2?O
%X4](UA;N'm7C+&ZG0-OOFCr9-8WTh?#A#+-#XdbuJf1C97#V>kMQEeH@S5"QJSbKs&-3-72`tu6%?"@NOVXV%cfTM7(&?]NTC;Os
%qi6.N%gQ(E_0h6^!o+Hgk`f0LR1TZrn]?SZ,%G%0\igO<JPK7oA9Q%i#'1S:+^h7#Yb[@gi0nJ)`_]0OUm73?1EuN+ftb`p(NUe4
%=>nlac8p/W0s:&knSlK)Vpkg^0\>T.#I+U2k/=`s=m,5DcM>:?(IfQd5!/$P5`nG+d)nq(T,+$kqF9dHN-2l7=&t6%r<O(A_.>9I
%otfsB#?_o4*Zr3&12'il++Jbp<.:0#iL[sbfM?bU*@FXFW`W>5[3HCA<*WM,/Ig,$N%b_'C2gZ^B_[oLrqMUMM_p%*)FEk4e43BR
%c.t_OQu^M5l+)!VZG*SS,<_P;CU$5+=l%"QN]`?M&"/Z_1p7\;Cg4%:n6nB?r0R$5_Bo\t$1s_mM72:,h=+>R9s$X(^#X8_fTjR4
%FQkK?>jcjg9>>/Pg$qgP%J%+or-1I53mEY.*H0%^\pN4bKm^gi40Cjmp3L:gi<t!Y>?C$69lQTO\L-6@@&(kbpPB3[ZVfg5/U)/2
%)(4:`(K2ZHR)@('7ml%=Q2WRX3:R]?g_.tOOb%TM=W+&W!nr(#T++`qgGo<%IO)XuPL+pS5`'17L5^:Mq,NJi:Ad9KA@Ah_?VUJf
%-u;UHRhNp+">IgNe^ll"EUB8-I+&a\EA/iOB<9mT)P#)NK=C*];aN/J9+$,P>4C@di-Q,hmj&(oRgNsG]+6qT,R&\Y_)m\QZZ3Md
%PJb'C%\<n/mtLmVB#D4]^GWNF+b4c4fPM,]*2[5+=O'.;/MOMoD&LXE\S8L"6X'_@c?aTXQo(=_\`3kuR#eRm_&>-i5;kugBT;$V
%1q7Y?N<8V:k0XrjGh^QX#2Hm=>l!l!n7#[R5X+Ng9_K,@\Dp_j:b.nC/'9pF@5!4/rRWL0NLp"Wc8t6a2Mgj[#N&4DITsHnHCYu1
%)k0OSVM*eP/q,a%nQk_Fre>V00\=J(@S'-io&V4kE_<t1G@Q6W%Dg,4kc,^k<rFJ/kW<"JI,H"ZK5P-gACP3+Ynh'bn$_Ga6f""\
%1#XH*g5[Bo/&"4F*`h5G7YbJJ<m8+.Nap6;/@\"0%*Z-2Ln3.>IF.X/Mh6;*&HnH_ZO!nf9IMXIhV=tIF-;cV.o5527s/R*Sh&5@
%Bll<E=uS1?NQ1gR4ft3;@M'^b)jM>Ti%].@_6dt;Aoc;c%6!so-IRX\T>l<*mlfQPcNuR0NeNLD9YMbS!6NZWhDV,M8H1kcVl!7(
%l;W5U1[_0/h`PW.<thqNBD52GmXP3NB2@aKEe.9)[)@7$K]8,$+b.U,oZB<\+ufkni4j;18p=p`a4s,HTT?L*<\GgJ8f3&7;<O+d
%>RMs>M6qru031bre87Bm7Y])X++Z92ELN#U_cG'(fr"9(]:qR2.I,CHNp@U$2:Jk#PH,:@T:so^6Set&!SECGRFj9bR=F&Bl^>^T
%\+n[9ULH^/-rebkj?%Y.g#<,jj[RQYNg=[4g-c<*gArqkI`)UNe)AABQ7<\R0?Yj]="LDnE58%K4Z\*FP<9Y,?/S.,7=^NCZt;9C
%DK<+?*]f*P_Ic8Ua`2PE0)TpXpN$#+=7.B_6u">J)aoftH7V"=-JfGkb[hreU6'*XWd4?=?3\gc5\/(\58n)TCT3(.(>??deQT!#
%b:n5K"W!>5qcZE9rd!DUMG)9)4'\>r/lr:K<>H(]#:m*^4'et^+he"q0T3^MCuomB=4s;t1T%H%.`>7,5O*L9^f'1E>G/CiJYCkX
%dcY_Opj$CJ7/Em.P=Mli;/C;%c8$g9bFZL].jG;]%$&!p88gNZHH7,ujs]sFoe"5FJBAnA0'W>FYktmL;^J3onSl;pg7KZOQc&+M
%CfuT"n*o\ON6mTk6<>"?Wu$r=0u:*3^,QS'V&*(RBUlit=\?RiWSt(e?s's22&'K2FSKX\IIG8doYuGfN'P/cGkJ4o9b)8c_C'tj
%RnTP5]ffK.pW0T(fi8i9T:2(?m`H_;R4i0_g\)uHHY%>&>.kQL+jZ1pLKn^<7tl9kO!0abcI9dCB\njjU*YllG_bY)J9#)l4$MXV
%h=JaF<`0]5=)AcI.p$a:&OhdC(%0eX><qHog_I8kg\<uTIM[DCd:o:0NAldHbP_n\L*H%nQCA_Z2.(=<53VQu[J'/[@kYaNS%UI"
%;=5.@AZUfFNQ8F&9,m`gblf2DZ:oKP9pqofn^HdS;mX"%>2qdM!D'*3+Fm.j3(7sOTlT%R,&eKkH)[5KX*(tA(9GQ;/qsH(*b"6$
%;KUXf_e)uSc/*QH*mXlikPN`1EQair5'<2MbYa1;h9_j6J']_/qmJKU"uq#uRru'+^?(;Rd*i?jJV5W>nk%Gb1]+B)Cj5-rb/^`V
%9L`VC8WuYo9a[u(?QCJs^9&l-//3P>.PAgOlcrIIk2=X,lrWAI+OV6!=p%?;-qU4J13p<kFI79HRuEuir)n6843j<-TK`4DX\OcD
%.]b_Wbo772GFP)1@3W4mVPUH$2+uJ#U/nI2V;bi@$.8-!\n%qk29Ase#pVh+4;Ei5e9fsHTa,;F"^dGs;qknZ+/e%g@s)8lnP(PM
%lf\>;*(t"OdF")E:"!I7P!IhBZUN];VL9+/2eKU\`OZ:cj.ANY&"CAlCp;2SlT,N2[\)!#HQWm+HO^7+DTU6q?k*P;UuD:F]F3Yk
%)nkm%8#UA6)*71jg&LK<D6Wrf3k)_h^3sK;W^]!NE,tuej$/g$kjI7^+Bh?Rh`*lL_H!pJe8;9k^U+3J3j%4@rR0=bT[+Em>J*s/
%!]Y._2`EX%;Q_H&:$MLTo<n+t30WgV0Vt8W.^RVr3Mj5(<O/p#W"C3k=<LZmXq[#a6K8u'1I;T(.(6`[h,uL78W<#<ZZM_S*t3U7
%C-8o@o6OA[-EHKT1j9Zig]E6)6D!c/:U'0H]]US>niqHPbIR2_[S$P?>q]hs%+1*-@+WSIcV)[D+2-td=8#2;_)]^kh,=,8R%Y+"
%aAua0'i6TPpfLZY"2L=nn;3r,A\iKFgSEdkj8m]E*G.O(4?sfQ-9eCs0TGCH-/t-1KT4nPL@Zh=j#E+\4I5SP!Y/C(FIqC]QqjEf
%RH=%MNfb&.lDDt"a*6D%FroUfN9='HE>Apn):`Y\_(F&)q_BhMI:69!6HIm.7suHQFl__jT1=Cf"a;#;jgXJ00MB616025^Am')+
%,XiJ:-4Uu?QmH4,M(L/iCrI&K-o(q\?FDDIHb[#.`FN)j7K1X-]sR6q>F):<3J7AU)2<o:0F!6D(OZ,S]C)GbqTG-m3SncAouGm>
%^$iOM1N?\Td`hXq_HHq=`8V4*]&Tk,\d$cPj`rWE5'5ueK$h(cb2VJoB%r`V%?Q$'hYB!^>lE=0.8]Lp8?i42X.a^H'@r.XZJBd^
%BC?T_F)a)QX-*Ef>@6ZbX`&Ccd<D1#k/Z5QZ2[e.N8\PISituua9e^3VrjfL@1#PQ1:t][;)64@PZ;j<nZD8g^>8X7lPm"qGVNH^
%1r0RcrYh$8'/[/O[;"I,^c/QI\,#F"mrpg&)l`Ej5(7&8Gg:VWqk!DKDVs";C:h*HcIX?t$nP#OYuX`W;5XG'6Bq7<LFP`>MI*h1
%=T4]B:]m.iF?Ik!gneA,X=c"><EXSX:"I4+1JHIZff#P!Viq8Gf<9)Gh9qK%FP9&V1Yf@6iWN+W#;YR:'0KhT?]Lnp-'BU0_AZ)5
%dBjXiGh8PCgE!m49e[OV1dMf@:>HTIGRrlFT-20Q#9kMQ@AWF_pX#LU_k-V-?;hhF7%s&Q2cG'@pOKjY;"bXbHk4$a<USB2!M"9%
%-96h]AU!6K5l9qa?F6_g$P4WY[5aM@D7S)kr:W.gr@H"fnY<'cBa,k*Yj:it&=GHKXu!`(9%5cZI>52nWqa+WrhO,3(SU5uPg+7"
%pDgp(aP-hTD'6q.]>B&j9O(<rS$^0^!]Wik$<_/0bpCI-IaC.3ObbI9EO"M3>P$2finZB[mX9.0aG%]gm?r<>i+"bXI]NOW!M^UZ
%"NuG3)u@&i+apiQ4Fu%,p:%JYXY9&NrLX[p]^NnsJM+Pl)E*n%fh/a/nT^r$/r&dHmX0<eZ93a6c.9Z^3W;^3Ii*-9Vo@8Y9`kbN
%Z((!7]9m%4e&H3c'DF%PUl_1!b/Sj"Db+l?##'ltBWkRdF$9i83EC\$N!Y+:AbZ[1IKh4X!Dn62M9dsI=XH>U`7nh^h\Vs`[s-.O
%mo!0@-<n-4%f)Rg4o.*bOOhb9M^BXf6-f8!(\X$41RE'($DrKk@2+a3K,On4PJ@BL1]8EFp>I382dPm)0"3[JpUTo_T&,6-rZP(O
%S!j!oQhMlJA67i`>aKT.W`i;06Jpcka0Z5(\Q^9N$1@MY'CLALq:V7lJ(X.\5C*+/Qt`%>J&]8f@pko`Yg40=B+4,_#5/o:qi$)S
%`kXe8[\*)McSG#n-9fVkB+4-*@:7OSol"3Nr8RCUQZ&J/r:];<T3_-c2if'Zp,i7+kjQ61o&e3al^-VMmsk-+ae)nQJcjp1\oU&@
%(%HWod`GQF06%e,]4rNC]9(iKNo3LJ)dho\rqI<-pBUYPPpc#!pfIFgs!*$nhpV?;l%\#4G5qKTQJFK\H.DAo,tNMd^[pjsRdW@X
%pZkQFGdCaqDK8PEp*MH_J,aclqT\Q`dl5TZ]mTDIYIe0*p*B[JJ+`+&m\e[OZ4?a-oZa^$Y?l^lJ+E5=V&R2K_mAO8?iU-!l'n=4
%rW-*uTD61knc.t]]us9fr-*QZo$eW^@p)uYfF-M*1&@u-ZCl<hYK9LgI%pAfG%1sR.P)n7>R4C[f4qu5aqZ=5V&=fEcT@P6<sqW3
%SSqRRLXP+`>\JG@'>o:n<3KQ&UJbZE$mNhL:$'YnOqtT+m(Zh>oa6sY3u@KgBd)jR\.m2*O^$#rAKK>H-^H9Nb$J92Q$e=QQ@)\"
%DUK0#`!>gYWT\sbTB,BD]Fl7DGG67`iZc-Ti@9^r]DGH$932/CX8/e=hT66:22#6;a%uC+2mQJ"]*]\#J(h(ue[\s;R"LAWYG2&?
%29U23>SaKX[BlnnZc%<`^Ik5aFu<T;O$8NNAMI^P^k7t;Cfab]%2sW=\T_K$Y8pe8%H0/>kXBqP[s'G?Bopr,$X^]m)t`IW3DI4j
%hD=1KGp@STOm.\/gK\r0BfCD'R\\27quf#UhJ9*Q,F%`<5rq768B4D_p<lG:-+i_rEqWLl'p!lqi>IQdUT>Znd;2:-\0]87E6!^E
%?Kko:iN#D[#X2`1,qLWS?I)bm#P<%?d-U6<Gm:k5@r=n37-1j:$<M2I[3bZhBtP&fhR$E=Q'#5mUhl/J5YG8Hp+cHs06JIZ1/6,#
%j;iH<Zn'P9N\B`$s.)ctKa%$bf1E%8F^U7E=d&O[Q""j+I%^.YQ&dKIUC$MrO)2,IYbel]j%r%L'.ZR"MEc$mSkRmpln>[BmDQ3>
%&t^aCg:b!pf&nK<E#6U(9N\i0Ek$tM$2L;!%C(ls=ipQ-7iBI.[Kc[GU.dS.L\WIXn1`'`ms*`Y6n7RR);""1^WM.WPrXsM[.6to
%nt.\R'&K&TDHBEe8=.N,DI+S"s-D=ao<5-hj0l`4Yd/hEX'[1T!)Oc#U&n.@<_DU)q%PJ37Jg1jJ\t$b^Cp,?K8:o:b*E/o+ge%I
%)I#Ts2XBC.Y(Bb&1)RN###l"mX$q,lF40C@F=1MtO`mHeVN.V'RIY)fH9[6gi"H/LPdH5uK>*FS7:5^gZBFi1*U\PQjg>I$aJh33
%b<mPL,^,:El-R"->*c-0.n3/m;[-G?W7X5,D5jatk\3_o,#TZJ(:C-^/*_m^F,j"bA!>fF7@&q5C3L!<,!&$9BjRC+Qhk=CbDUrQ
%EE_iHSQ4A&5`qq,.0%^Q^h;&^d.m0u')6%4-G8t>O<q8bgjgtV<475n38X9qq$o,<j[9OI,5j,)9.bM!a=>]L`0;gfZ:eUVKrRLB
%0bli"%Vk+bVI([:b&W#@V?SLJ;Ro,#;ag*^aMn^n&]3P[SMJ-nQfnm_@%jF>9%^>kVBrI.o$S^LL1lO0kuO5YN6.q*TU`\/UDC3A
%3)N^1kgG.KLbZgs)8`!gR]X=ERO\M:-FcTjd74=%<*GH'p/!;;BT_cL;D$cNp9Zq,MaG6#"4i9cf>oM^kdi!(lf$5/^!1G]_6*g*
%7_H8'JFp9Pcgm$RF\kR+BtmWC>jb_T)5Zm9@Mm;4.2[hn/$hCG5c'AOZn#^De[,B_\AQ(6a95]s(*0c\<gFL5k!!jj9Mkcsk+ncf
%/n263k<f`skjr?%PcAD2%Z\1nL'Z8b@uCbn8-?VS8b+Fu3KY/;Or%sWO<lOIKSW$Z#$JAM;.?<\A?q,!m?hD/?4n?r97uk0KB1*&
%$]GoU$=To$n%sO*_Xt'nWk:Gt.Y;MD1e\;P/pRhM<g+<#Y2(3d&'GgM7!\Tefd,Q.&'NB&'puDpjC+$"ITa69M3oXVbD54Kr3RJ*
%;]_6M1GOo_KGQa%nYpsgY+dRt:#=a9l3^*5`+<(lTWN(->HU5,,0f]Pc?ijK\>2bj=IS:(VhUbLU`s/Rasgf.5u;+ZPgr5#7-T5\
%@DL+*G9PTfDCPm')%r(*$02OL3[2"l=,N$c?C0F*?3phAG.=S]>Zs/^dHN\D0qq>%Kd(+':(J;bF,X[1kt5'HoAUFQ(C)sU0b@aE
%b3+U^L]%g,n\d!<QQNf4P$qmo=XPmS8"[0mAiPa@=;JSJrnD:#3KJ+AR`MogU37i[S#iV-TCl\YYuK,11A9-R*/+`R0AjOc\>82"
%pSCd7imeOj&!J;%-h+f?ZRdDV<d,4\?(N3,/oue"\L'ERR_<fSd'?gc%YhJ%VqQQ1C&AG_Eu,I7Zpu,@"@*`Mgem5N)IiB!en\C7
%Ru".!eSJ&bZ4W"t*,6!;+aQgBNYlAsaKul_U=;WpA%ZBGRcpf.79"As%BZ_/@Le6B3B#5l<'qSI<bcH9ac4aVeu5<A=QE:^7&*`,
%&MZjlf@=htA3#Z".aZ^ZWE;e:YPPj"QfJb,6@4,C[-Hq6?5LdWk+N3gRPWWr3VZVCj+?JU<&cupGY(o$=fT#s0YPDg;F*usDOI"?
%RAT1h3A9PbG=O]rZ)+>1H:asB2Q66r#+-5&dM>]ZCb`blQE^/Po#R3n7@T4!=VkL)iDu\gP4UU1?'<J<dCXQ>Cb8ic(i#Eu4O*\6
%hbKsI"AR/*B34QuV9Cho*R@/Qr/rSa,gmg4',h5%jN,lFM@ck,?1B)E=`$NgDJE$"a\eA,hVi.&T#8#g.GK]`kiD!6@Ta)PK*6t.
%NVUq;=srl&H(HF)U#nWn<Ek'miYCET44iRViuK%d?S5[Sn#4%OT6"fcrdn69[0r[UAl)8J__Hq9#s=4@%;aq6?9^+@Qi$91TDffl
%\&tK+cZ]?`jdXlJ?@KN`l$e-\o]Zl>IfJ]X':aF[>V(b55_p?g,j@Eo(R"n/&7Y#2O\cXU`;.^f'9'+3O&2E'0$.+!RbP(<`01hS
%9gp9mZ,+L7O@:&.6?<,/l=icMfX7/)3pKsp3)kABlQ#7#R2BDm2sO;G(B^4\$p3H_=&u&HeZ\IO_/j@k@0I%L/_[N/c;3>os6ZFB
%l.n7j&m+@'Q$:b-$^rWBa]mH$<U28l,@M.`oT2+7n2F\G[6J4h3*6Hj:sdD9\YH4)oPn_M3>+/u?VG%AX,[i^>f$og+W<2Z_PJR\
%D?Y"r\U`?<jY>8Ra=o:fnWsZUOTofU@7:kiWDLGQgpMu^K`d%rTf]N^6$J-A*L?rT)r*ij2X"<odjsqL`d'=jUq8Bh7Cp`[ggmT3
%<`'YRp_a8$*8\Z27.]&0ZN3m)!$[F=J.R2)LMV\],t:9):Rg2L.^/s\i2(ZJi!3^T/[&3H^0[)nD>Z*`"F<p^;);9<[5ZUWYF!k^
%edQ@fqQ=AQ/fD/McDW3]FRkTf'_17Og$:YFa(L:;V#![l>W`)=?77>J-gLn9@9B*r6+qkeTtNBYk/XVc('p,u(d;=uk2gi-`Yo7%
%fEei84WMh7LY<1e9k(e.YJ[bc!$PdPd9T??cpaa/>!uV+A60..oL<50^g_j1Nt+F5(dX995[)Nrb33q\G4=%-$jteM-jtD(K-"47
%Q]ea`MuZ7KGj4M>7knTEC7`q)eCW,'R3l3l/YlYnAbdM#esb;Q5T%Ib:26+qH!*Cr*a*bBqa>Xg`<8+d[Co\O#Uo&d,*Put>2\%j
%rV0l0FTU^5k[p6d`D35*;ZS@pbY21#iJ`"0J^@C;bci4=[kpbH-[^])$RB>?(OK6796i[Z,d\h#BLpdP$#0^k&A9RR7#NS2VEkTe
%7.dV=*T1X(PJIFO]L!U-UU\G`8I*=Iiln2ZJ5,#`q;";=!GFt[)ls6*J__q.T'M.(\sO.?LU'oB-hMDRP$eAh@p.TDjIi?k@!6l)
%<hh3VhEsXBDO/]?E)U;tb@0)2<"Rmsa;N6s_L.*02'\uT16>WjZOd<R!NicGX<ENPhP?d0Of)@K5&G&mo=Eb\Xi]FX)m'e79RQS.
%.nUM^%"I5+(>$CER*l`*?1]#MI5DMa@uGs\OI!I/Pq=F16__N''_@"<dUN\@5QtbsR"F<SLk8]rXG_K@PV&2.[%OTjB:+M\J'q90
%Z+>$B*/YC8X3;LX=Qun8b)0L?>%kFfN.j4F..Dm]p!Q=Y+]1;=.@8-bYSH#i4@*e')0JeP"FBUH@R^$H_@R8Ybc0`Ts(RDdU`NQ[
%KCt0r!JY*OC)?q7op^=3N+;XW&]Sb`]>Ru1k=JXKHFjZeZk\NLE5JUn6RRt?]8l1h/ZnPddN")u6-iu3"get3MWdo<oWGjVU/%5K
%S@\$STVULZH@eR@_FaYW@Tq9H&9*Y2Ee%FL(a1>)Pe7%O@]4?m7):@#N-d-6gY4#mSd3bj_=sZ-p]p:J;75t5Y5k0<BJnN26>pAm
%iGQeNMuJ8LS[cgu3EFelnY'V.-e5)_-qX4t&KJSi13k+8+dgH/MrZR<]p[h'N\o"!O]quaANA&a?YIN7$TWb5C8aUR>u+R(<^u:I
%=agc'7`1$W-,B@FZ$LI`h5J+M%Ncg%g<s]7ZuJfF`TmWW=Lgu3/:F-u7;(8Jd)J?J[3a5C&=^LJ^:"59F$tCP^K^.Q1I>D(g-ZIa
%+JtZ6Ijj.`JL$YMY4:oU(W_gH13Mq^iPkGTVkZm=]sJY#/T`=LJe`:Cd*2uLMSupmH51Kf>,W?FJ[^Q65mBeu;lj,1fS))M'`BP?
%aXa*SN%W0V;3`Li6;:bK#c-0\cZfCA,6M8d!s(r[.'R3lE$m[UJ7W4fSS=G-FT`<be/o`M!XMH"%I5q]%5F424^]b]F$pmil,Qt.
%&J.;dP=o!;9N-V("qP5X!D7IE]U)2,=uGFF<<OlgF$\S5&;4'%,/YU[<0p%I:Rfm@_*5M)jG,<a&IV(%&9^q8>\]>o(A6>4_GC:f
%Nf";fQNA37*Rmki:[nk>^]H\.Ad5>4[SS9-b',Q6H"lSp!iDV(bCP4X=A[EZ&]OuNBYja-3Lp<ejYK'X1.:bu,8:/1Q87&K),u=>
%W0\!BGnDJX)T!.F`mmI.2:(K_W;=lm+aAKj;5f);F)W2/6:Ua-=TDR>O;3cU<uM>J(*DHl^rGG>jK'o]>Eh;c/s`bu#`Qu21l0O8
%Y(QG1W?ZHMMT@MB&/YMnAR:^eq=P,GM%33g0c6%rYX"4H1bm$3!PD8k%5:;+U)+W(_ZaNtd9Vs%MJrbEjO#T6_)B)c7@$C9"Z7<p
%r+`Pja?sneKEG>8kQ$,EHnu\,-MM:UJ_K<q7#P]0[4I;UE+#4P"X..qRS`F5pbE7DBb4oR/<hG/OtD)6j4"NP8=CqeU_8L".q^$F
%/WXUBW<gLPX:gguH#o+U\/Og/L5Uh#00K]J2oXui?lS/p]G:!t2#+bu.?#1bHfUG\.PfD:)O#_[V>Eon6b^!T0OP#,'D9=`($#:`
%:XTjVGRc\\dF0R9oiQ_e(5u^1MjeG.0`gbW+sJ`,%__TUG"Nq#;AE)O,qEH#O9a#KNCq+1[begf9@2_GR*[5Mg,24:p]7,@k5`<0
%n.(KZX)%/7+i3Wp5WR%T9_fL\]G@7p:_SYo-_ch:?c>\[/YX$!;et]q2FDMG.q&lQ#I4NcR]NP6'u_do(k\\n&,>HHi!t[$0pp/Y
%W-#.3$XOZc_"LY7;WP.@T>;::U[]CL^@fs!le>gC&%L@07Z**0:1dDPZKOJ]NG'?A)7(@&N+NA(3U=Tt;b@>K3+UDZ_C?T&U74%Q
%=rXu6K6[N@Y.6KqImj"[U(n>5-:Tpg/9$@-K<3L+K],*TqQ:DGW/O$Z9]0i`3@2d[K^fa+osMU;NNf?26cKP1^j%FCP>,5:l0+sp
%\U(7h9+X$/0k-$*+#+Te`,$_gLl`Np6$*S9N;-%5r!eB!?/;7N*[@.&ah$](?GWiV?8UF%+@^.npVb?K/POh<GZS>YaO>r!aC#eh
%a%Rp-6ddljKsk-3P4[3)pCc=MPAZ)Bb`"4]H%9HY%?/0IGAu*>l[Zqi?'8_bl$8^R7,-VK+jQi;N`Ikmjb(Ke?sErM.[jH8R;k8i
%XRIHh*s0'7INp[*;fuJ0AD.O!??<s[Z28K^mG%c-#S&23>hX<+JKa.o+Z7=S_k=-r/asF3[u?N086uG[7P0Ql1DY<?nJ]VYA2LDk
%?c5!ur>,Pcd)*R;f9Su-("k<A<u\Ct\u$9jU;A\72$]u[/<PH8E/U12n7cAu*ZdXF96Yp]<%\Ie\'?hU>-dK=!j>sR.rJdc65G+$
%d)u]61Q%+WP:-O%d'%OE!ACR58]#*qYsjll7"@QA#4Z4\#mj`3W*,"76eJVH"GUWTLbW,j*Gf6@Wg;Uc1PZ7M#Wsp]0u>.CNE3Q9
%Sft.b\'uCcP^B&,bmOqj,g(qf)gS1<bqLk/D3$,uR40Mg,L:b9a1HSPDK^Cf0b8o63[1U.n"1@T%alP"I(V*pV4rep8TuLTl?+:'
%+P(2h]q3IANhThqp2Mju@iu4a"g[I<T9'?s]6+H"!aUT:.6+(7&Q;CaJ]:nVD.6F7U,c7>/g3LF[2HOmCR<%M1"8$?!6o0_,cMCH
%["CDK`o9Bo2"2mN!]'_.n[f@C5&*CmK6IF.6I6gD3MMpT)nmH%TM[QWmh)2W2(q<rB'lT7XjkDtWb(u`>I)6.I'EV#^m2:"CoKcn
%774bmF,2NdUg?sHi1@HC*D.dgih2Q^K2Irf7,S3Q5mA_FI'TVE@d)`&]M?_"b1JO(WP]'RfkKVb"+_OR*3K`a%@P,!3B1/?F!;8&
%Wg\O6s$XTZ5Z7kq*"FnA+-?R\_][/W#4S<)rWa9+$O8p4o*Vh+CeqZA6_h<r5cC4%1?/)SUs#;8B#13nO'`HU^qUW\8?c[2UE7hY
%Q7NmN[-NjCOj47V6Y[@o+n\.+@)IOc$Y!d_aD_u5XFS1ITag<6Af$OfB%A+]eTD^c?;\R01tnOXNg"41f$l[rf5l*8>%F)I:o#]U
%K1*j];]RDQ?tKeO$7L!7Ydeeos.T6/ZH*$=1]<Q*+Y4J;.)^tm6'Hr*G4l1derkaGA)oQn?C?lp&:L@9E4rNq:UF<tRf's+,!om!
%CQ$8g-j\4bMAg$&M01%ql[[Hn?E!(MG_?5@?P`5e16;djnBsm0+e4md%KTAJ!LRh$osDc6d+VUu]n3:%5%&O([S/tj1lhk09(s&P
%>]%O(cQk/#a+,gV=L+IZj?TYPC1P2Qn?gpWhMKJb?&02O$nDd+?>^nF>S)lt'_eYSZ`)aY0Q.`I@>,?bI"]f.Ch^mroga6Fr(rsg
%3X?7m=i^O7=W^7W,6n[q%?"%.8:`Ug&e'2B_Ybg^A@)nM6;&7h`M+^0m05&^X=PJj2.t6sQ>/7,69Y$"P-"^C.4X_I2^!aA&5Zr8
%8li/Y+b(/>J]LFQD4$/Nkt%98OsjL"r_a;]_k\\@&6"k9Vc(WY][cXKF@a+-AAL`Y9@ad,N5cbBgm53hpnENEH4_hs^(XNP+D@$t
%)@9'P\pj!a[kO(6('V]nL]l.L__M6Q:UDUW76(U?%r>*o*rq`@41#]p/\hRI>Q\imoM,VfI90GTag2?^cu4",P4'/ZR:.Gh<ulk@
%FCCtu^]7g3C$pb4601YLKaNtn;&9jQ24EJ@:&,r39X-mr^sJ1]jBF0hN&f"I,uJ&C%LT>480T4VDLi=V28K_iZGP(GBugiBjp9sN
%`R6;?id_fV42M3$Im'QK8QQkpGfYHf9J^LH+ch;c9LkO\gbEC&"_3*2j<c(.O4Tmu,ZZ%+lDlQ"3\h!ZTF6&T/P,Yp`4hsPW\'#g
%/000"HA=?Zq3Ee9nhQ,7OC=INhJY0"oTKlGL2oV=-4gAlK>:S;I6n0']1qKYW(5KRibdZ]W!RE+Bc2^cMuYmG5&*B=>ma54;4CHr
%5+\c%3it20^n*P00R\#'h;c,sk(1ZB!'VPKQdq0db'nr)i73clo>_K,he:b15DZ2m.4C]Dkso!t\k8u370r6)h1/fXba,d&0Z3^^
%?&rZ>l8H(sRo,YbTuoc&!e<>U`'>CVd&C*R-c:[#FAs6r%J0if#A38C_?n6tWI&;l&-O6`VY-Eh]tbft(Gs$^7j=g_^Kqg(rnQmj
%(ZLS)j%IVb%4"5dBrDF(4V5IH]eB&"`U[=H1Y9?7RSKDN%05Lg,>ZL&bUpc($6`tommU;J2>*)p9#J`d:fc>8'bsNVje]YNo^A53
%/Zm[hRO,*>=GV*?5eRZC&IY`'MZlcK`%#GpDn3T+^\$!!lJ#^B&%L@s2UWdT7IWj<?7$m3O6)&)&f`G*'Wo/F*3.<S/cK<>1^U%Q
%``Uc5aG(U"o?n'<80gYE(E+#5JJ22""Tt==)=gIA)6m-$ZbrR1=?mHaA([%QZp;_rA)0l2<lEV#jI>UC27;6b#!pl\.h!D;c_RsR
%l(&RONi&P%o5Q3Z!hu[A"/JEp<[gF8jmbKN'@3=gJSZ]i.%W^.L+"PS*b\\=6Hmq$AHF_0Z?^l6Y4kV(88?>B74'>O029O?P,HMu
%=^2kL*@anl$IBOi*i>>-cFQ,?&Z&dE-oAoUQ_%;VTf!]`"r;n.R>7B+RYH)EP!78@'kT\eN^*n4&';Omp"*]U)k'&f_j@Wj!2/F2
%HR&+!'!0O2*H*3-_>Wl%g.OU/OoqNU@(iKMBgDd!'#;kNg>ITUAck>BAuWR3B?NiS@OCSrG6p[l!jc.9q`5Y"6QG]Va"nTHZ%SOF
%3'L[qU@6G14,PUl#ge/iA[X:2aY(gVU\3"9+D;?=%k3MC$fGXLZGRpW[k?^?nob9EMCG\$+Fk'3nPKQ"fYqlCZGk=egS*ELU>mJ6
%"E&bpjsQg1Xi!IPPiaW-jP\9*AL_>05`2:Y3ZNdp]U>@VK5><!5mTKg(I3Y0[<\@\0u/9`J6lI=V+8>/b`ioj1,D'/TH@E<%jN_<
%$t-ol^bnfO7_9MQW&#25!e5:MPt81JnJ!en"8*'pC1^SibjS]Age=LXDMVd1;qC<X6F7]6Kjh/u0WEBaB4sH"'ZEC.M0ch^Jr35*
%@YPq.cpJ\Y<NYHC^e:Xu:LnSg;SFpQIQW8OJp:XRZ,r;S$9MG'REZ%-Ajidb:glJ=\T):k]"63gk%L*-f$0%<;[X33dY=^N$$ZjJ
%,ocGkg,aU0>`!F6;*Tac:j`7Q2pAc<?9>.79-u&bH`e!MZe&g6CJUgH!3e.a.[mVo(3ZlfabmR/q*fs20kim?^]YgH5?lM98p;DE
%"Tm#\"@"L(M6(,p[Ms1$U`<)p.B_\.hJ1%"aLu>5RC[&<T=gSjIUkt].N\EWJ2i[baIjO&+VJK#^dDEJUZm#1(/?*(DPZU9SV&Ob
%,849A`JKcYU8DCN\nBG;e,&V@AiVGuWkm150j\NC^g#0P-C@5C@PD%J/]B*aWJbbmF<SU5r]cpNiB<s$)/gg)*Z83OpcqMU,if`1
%QAD31Q8V^Of5)kmQl5<l!<]FqX_A7#O'Mc>a=n.?J0JL4/Fd`.K!3.F!LEog:=H3ZU?6"jW$.*6/)66*^7aN"VV"8"LW'mZm6XJ'
%61^8'V;_TAjoZi-,sn^(0=GDeB\B3nA[M0bF[2T;)3G(O%lpab*kq^"+DoVngEA9dM$Ic],[2gW+nTA]"SKG0A)g9"rJVHun%tTM
%+8^oAanQ3;4&(ZVnFN-iCkhnmn.`OS8EWO09b<uLJqe(Zk=7mN+qTi+7,lV2Rf<D#3u#01)7^6u=_'g9+Ge,BM+*Qs^hU.&dD1cA
%#K#s=$[_Q<n,[nGicEi8/#7k,Z'%F7BP>kB!g(4.N.Mr5EiUX$QZGkEI%""DBW2H"2?_$u(m`ab*2R]_Z<sZ0WA2X+2/iSH)g)eQ
%rlfP/MZTj[=CqVUJ1=jKP%DHtE'XkAM')oL)Ws6MGW@p9nKU`k#c+cX!SS_Q`cI#tK57HhQP'kg^c&(5ATaV56`K+*EEFu^4$J+@
%lI%OUd[FA303K5JI6mk,6%u1nTFRHaGVbTc)L6FCTiT?Q!HHAA(c0n7OjqM6Fi#Y*9$LDea;R2mJoW<<a,1^4_,go<jo@!TEgLp"
%.Me>(Q=Wm':%.'+KC""OFU3Q^b)=-QOY@;QJZ'_W"D2<k;FcR?8,s+;GdpYSZa)RpOcdCP635"dBdMbCOC;n_cDZ$kc0Ad]J;gc(
%9V-l;C.6UNYf8@Yc*FF.Q&fD$R5"ih)>b<eR@j_F3,?5br=HTJ!Xd@ugJ0;3fqF?@L`YE3_#hs:b$e)RTHRl'e*fa:&7@i%liMON
%\h5Er"\fls.:l`Qn/KW3_?,J):r'Wb=LV-r8HX[C5`FD`nM&MHC#Jg-%f<TT_:*g@A@U>c#X'-/KoS)qHs/t:.6WKBqngGXBHtnc
%03/6YR9CA?:qJ^`]cr3&kruCN>,)U!cNXC9.>K[5"X=eBls[hZ)pMh[8-AK2Q=il(S/:*E^_jkBJh-o*[DnSrG3"K%1We9R+`^nr
%iaF)M02u]5ZX.]e>!PP/CfXpNBMl)O'41=eW\t/`,EW[k'f7oHB$G(;OD^*$7^VYr9g]b%"8\"E]OlgQ+h26J&M9GX%6B"s5)8Cf
%=n.Uh.mX<^0.[P=Q?@T\&U5*?;@o*,BmTfD-'XbFBh'gc*+/>%<JMPm*H>KN$3JVBo8@3)+bGhu<f$9)*:;TA0RdEXdcKS$6*(_k
%IILdRc>LRk_MF0R@Amr7_TUPM2QS(UpZQ6Le1GF+!+YoD]@RaFL@B.2_Ppi^)=`gEmd?EjqG)GXde*N_]D#nR=IO^3rR\f0o'GJi
%LKEC3p$5]Z6Ir#@^4,amGBVHYQi-jV]A"]ODSQ!N*ch8P[eo=8G(9F^q!/)uVt[:06d7Y,9e>Sg^X1OsT.r'EK]VV:C5]@eVAoW5
%,5+n^`IP%7)+GLh!(0om%s,/F6kf/E816r@V)4/iEQ1<g(DN=3PgX8/K7c1:)GT9tcq=hjA[IEE&#?flQ)%6OC0UsLPPtAK4UG[7
%lR>Rrj9Qj&C_lPYlk>CLZ[Ra<6#I%ZJl\3;CFUH:=<pg3!.6Wa.7IBDjh"rU+n&EL,[-rp)DAS_2=TP.A7)P+YD"7X`G+2##EqW8
%RY\0)L6PXoeBkD">#NMoW3/%Bl!_.'7/BOQ([e6c!'Crb"$2f`nuQI3l=ONU,>W)#FTZ;U`YflK9n`Kk`e3%_Z95@P;.m_P3#&m?
%,_PrXdETmWTm)J39hGa."B9@AUPiXY(1Btn8W7qm29$Mq)[b;e&WFA'hZGX`j;Q4HfFV4'XXAl2Qr)/(Yq9ZmUE]mK!PgC=KeQ.J
%]'Q2GM>@4a14u(;_Y"q\!na=M)3Bfm%>BhD-llg[=6g"p1h2ELUp3I/1FX5qA1cs#d3`<g#I8SN1SMLB$MB;K)ArEDP!o`r:(1FT
%5"CSpo3<beD6_R2hGPr_S7#E.abX(2q@tG]]ftchGhp0:(^3B_#iiUi.6WU?Ib*4gQiTb*><pmGA"[)Y.mdo?P181NqsBk"\`fkM
%>-S:1\ZgMrmK&9*&1qN>-U)g[376QlPl@Ll<<n.QJ244\ZPI"b[j-'QE#<ZmS/U'apjj3^G=3@:U5K//eEc0uQH6'4?e%U,n;qAn
%L.GQ-/O9gtI60>GXX.AL)rH[G9Z?R\:k,EHhn;H37<pHVnp2Ls>Ei:I%$c*R9-CWu>m]DI)%'tWnm9iPN]c3noR+Z[>[I-#4_1pe
%;[FO8X)"$&n2S+M(6sr?E@P9%57bDse4,Da_]^:9WOfV3RTgD0,d"OaI2H-Cm!9'`]rqFccU6"*>>+_;"#t$Pj<#'J"94NbH(Y]Z
%nH\P5M)[oGINHmRO?q":jKnt,FAYKm61G)DEs3m3khE6tSD^"PK-k:p*H6nE'J7k4_i#:)fIiJPC6q97A_$,5\J@&ab.LHu%]EdD
%Uhg1\#=M'FaA?8$Oc>;U$*I,N/Y5o(fg`Pfd2JIQEg2k7.(^?HK[J451k?Dd(-5^%`JLTg1[<N4puNY3d$b&m!W,t/Mai,_>S]j1
%AR'[(*#[!On@*0OD<ia*!LXH+q@47Hpg1>K887aW(:=8E[^r$>ni!>CA)WV4C#l&,liKZm6L8B)+mSnk1XRgs>!e,12Y:9_Ot_^Y
%ZB>eKhZa,WVO>ZQ.2GEq&p<8lTN]\KJ?l]=af[*5QH5>Xb`Jc+n>P,2_am&oX+VlW2d4$baL$>*;T"#2*MSaoYPFTu%_;K[$YYIL
%Clr!8nJ19Ib2S;O[4Y!EcZ.H4"O0%2TSg,%E?g\]iT'_r;>Si6iUen>PphX/[(>(<D86V=gX33gWRMlYN_[A`@Oj1:TZgca_hj!`
%$TJr9^,-F):NPG)5^G0/QG@l]&RI"dYm^t!</%4jQUHWUOs&^o,%V*r)sg.&oKO62,1F"NL4Ntf4UeDEQ_@,V(MTDeOCZD;AiD\2
%O?c7t<Wj%s."Q_)e6,KQO?,+:#p6'gQS)[b.YrUU?(Sjg7N=3#[;$!3_1DZa!`3)cDcmbfJ<n#>70BYtihZ(XRLon"cFAW:_97@.
%4U/gn0q^*#<E;dsgh:bolpQB`NS0=$TH_GqG9#4c=!3ep'GahhNmK<Y?!q8SLl;emE$-k:M,]j7@e%R`!gT-pSV8Bu0_\EVfXdQ5
%jf!`7W&QB*p7qp.V-OjJrl"@Ql`1G#S#PN-A45Q"YkAfi!acIPL8`;"jWpgP>C^aG^'i&9"h6L+R_\J>lOZWrZ.urGn;cJl*OpT,
%9EUP*^5m[#`33XY_u^Gu/1cP($]1p>h9VLl)u9>)-/.n;9V'@P7uO2PAR2Z"Yp&!7Qjejo.*5HqWm"4p$8I-!.2!&roNp*p"c_@m
%)*9V^^0<&6dW?)kWD,aY["FH4J67NYL.,%?,"p#tnKLk35nt#n6Qd-*/qNi$rU#a$NdrX*Ipm[,&@f#m*:/5I%Z6)=&5TU;DN.T)
%FoW[&a@(=nmL%d;)4;ko!7Iq6YQp:b+PI]&UJokR%sYoN`<EXf*/+H&b/qVd=RtjB-EmO.@+m9L>\%N;rTuGl^6nI]K?X;",HkQU
%&<YG==I$PPEf7rt!$s]/<#QNq=?JFHZI,:"@+ROfE\tk(O^a-'R;g@MSOZBg-*mk>?uVD)U&eXo7$G=L$*rf,QKG/GhXShIKo17s
%FW<bU0Y:`5@9UG0<j;bZ?G,F+&h-=Gb@i#DX<3e^/23dZ1&s*M%>Z)a3$bH\k@K4p9&po>lZi0"<L!tIkmO_]V75q_@l_.6UB87Q
%%mU6F.E3m.J)I6nb.hXZgrH<J5oVG:8VT[Up69B-1$UXkoU/`8j'FE?iJiI,,-YIlBe9]q-;@2Y\V91AeUc/K/^=XG!Y&VBjrMo;
%6a&BA@.%er$QkJ$bKrj>nhs0c%g!k\20"jeagdF(4\Su]2]u=$g^BlX/5Q^bn-N4a8[SmN'Pu3cods32JObO`f%@8Te9Lhln0:9J
%\3GD=``,Fk"fOZJrA-*IVP&L4B8kG6a`X9AF&fR"gbLFGc"LQZk?L;/.um^_gO3-X7Z8#s_$C8-=\Tm;35R<@$tGC6NB-b(EZr5D
%7pdmJ009"LV#dN&O^q;213WJ0]L2`+4HnB`%^Z6XC'i0i<#/t#0^2)k%#Z"BnC(O?!@?p"_GSO5ZugS&!'n`[112Z*Xj3*Sn.7^W
%"E5m4!3H]jd_HtqLQA*H;8)'J?X:u^:bdZii"h;BBF,VlgO!6^U$"f^]V;6YRT77W[AMUp]NK)D4%9:QnPk[XZ=_3U/M<Tu&=AIG
%4c[#S4dB8/Bp6@l*LWp+#;,!G;Y!4?<dJ]B:pPCB5Z4Sfdk7=A+#)r[Yk4l(*iS`)8MBaifhik#"t:<4%I-8:Zg<62(<G)p,+Of<
%UG#NqF?osA84<-'OV#bg&-r+Ei$L1^YkgOhRCSZ,0dIQJ)43puH:qk1HX9l4HB"(8nBX[!eKbs<&/[8$":Rk.S&KB*1m:hBWcmC2
%f'sJBWORgY9pp;uX$rh\6u-4"'d=p2LXI@"=q?WAUI4)l/R"s#B.-B/dR6u@U1Kn44cPF@`[H%"FGtXAg%A'D81fA1r&T7/@doZu
%#MH.d7tOo0'obIl=un`8SbOS[bZ#fDQWA3KEj=0c!$[Dqd>Z6BiKmk<`Fb8MO9pu1<B-[A8B60J$SsSE-hsuR>-p0ocjK%#0RN#N
%Z9SOqrBGJ@OA+#7Aj%bF>$2^JYR[@JJr6XfXF@T%i70-j2aMd./Ymjr_TCLkUs&uQSR+Tp3\V6.Bk$WHpnULb:6CfaLY`KXMEtBi
%#4X,5j-0P!CmqAZ=E%)@="rQ/_:TD`/].PheQ13*QnDZ$qZUI::AD$(77GE$_kiP10h:@!X""]L0fsf'nRI,hWZT=WV^S*;.#l;%
%Ei%.B^]gdH/8aThXBJBbRqd)g%4)&f=U=+SZY'X#EdkE*MA_%4q57A3Pr07#X/[pW:CA83mfQf!=rC;2NGo@7\X<'lgR:/D=43^i
%g.c_L,^9A@B5+DJ9V99,'J7u'Ot@gBZn&gjFt5!o<XFFl=?K1?jNcsb4udomRM0q?\9tVH#/*VZ!eL3%6gljCbL"\=*3LQEemo@@
%;\nq(X\\_sT;W($9/Cr;M(Hb>]h*051SReVVbrY28(6'W[8i#fQs43e!XV-A>SICu]N,Z4SaEfrS^$YGiJ3W-*%aQ<I>>T,ba#1;
%"unUh[*Gi$Y:!l(Jj$gNJk@#DV/#\U\<;XaA0a#p$YE@ug3'L0ql5;'0fmhjid09JYZr(6/i2?m]7K3tl2aB0Tu3]5j6Qbe'+6'i
%N`VPQRh;s&ThG_DWUsRS+=PZ(H<-5^B<bt!E3I>d#a:TXV;iPJ$Pr[WWoGLO0U['SEE7.ak?sQtN+8tk1=7#29Qj(g"fPH)qcACZ
%NPXW2(fZp*o1OAgIn='fO*t'U_46[U`7QN&/^1/j7VLUIJGH;oF#.FO,qD?[j.MHM<%rbiWS+#?/;os"Y1`@Qr.N!?Ngm`Cd3DL;
%F7Bt[634lV8O_\Q_b,VUBs3[mXGne@*&mRgc(&2mHBLP/81L9b)8SnMJl@S=/L:ISig[8h2PtSZ$*!+i[SBSJ;h9i?$sATJ'5&1n
%MV>2u<Y?Hs9i^=8_"it[7>*:GmRog<b:s`SAR<>R%S;=2N_."q%"cJ?FGgQnq(+#GoLS=@On!%92GRMugqp_=W"BAJ77He/b4j*u
%8f3r21D(Km#7rMB+jjI1@>1_H^U._],dkAWPsoJB[5V#@1@;=U8$At)O^\AA8dZ*,,t;E;\%Z(*T+(uOBo@Bei^X3"@LFWeSaeE.
%ltgKo&K(dBN?oqdWajLe[==#pGT^NuPjgZ7]5V-mJV5eT"CS*6XSNS,cQFMp3*JdO)6Z-J;;c$j,\TZD3Da2/Al?;k?/,p/U;kJf
%e(5MT?2tSrR=qoG'1i365:6'7"=hFD9Cr>J1TH2-"m]04;GF[8oFB]6Ug):=HOa-,21eNaba<q#F0r"d03o`4,2DCk!l>[AhAG"%
%^.Xd,R?WXlY1nD5^7lJ$"Y4G&C^t2!nJR='h#R`ZAf4<>Jf7ZZ8/J&rU?d.QkqYCg6"]\&3c8QhZs/dZU)44)#b^Ik/hhNXg!]WF
%RF2dhKi:XKQV<'H/@paOE71u88Y%gN]A!'ec)FaEVK$RMWo<#S(_lj"'Ebi/#]^b,^Yo#W5:8;dRjBm7S4P$5@24jV2G381ic)/%
%Bc3m0rlaluR8]VEaoJG&V0F_4j2!.hW,"t;K]7ME8]K-a`PL'BXm\<CGcSgo[%S/Rg0BuOZ@ntSYd3VCAeR\RJ7]9n.u=UR=h2J5
%]VdPtV@prC#DkM_F=QfljUbeEaMSa9$nHN]XqlYgXk_m,2P*"*%Nd@QRD\R+`Nhm&*0-6cYk`0n_t!7bb;sQ$3%toYgsUp932NG\
%eo2I1Z2'YAS3oVXU^_#tS?r9GU2u%kX'dC1L,(kqqF5*+:X'N54(1*s7o7ZPpqi0L\6.T"UO14<AH9[$_RV6rnn2Ll`4B(HB3aE>
%R70GhV[@'SD00Dii<7b'OD@PKi&#;UX[M-L8<7C?iIr4r\WnQ_q*u\Sfb0!#DN+b9TbE-4ZB.YSK.%^m;N-o[M8I*d5X(IY'+RIR
%"R6Fj35!dPg#60G\[rl:UQ^@@LH[3\R3EX(6:a*R%,iB6fLg<5#\P\/53R_C*8UpW\N;s!$^N,Vm,4[K:?d]W]G6E[%ruVc9EI'm
%gu.B<'!uSU_9kab,m'VT**c];pbFRVK5)n;V'!q>g`"JiM&I?J=:VrHCoP7]2]MnKK,U9?iL#.5eDO9K9F\/L^/K=oAHL?W2^A:`
%L2sBgR^p7sF@#cPE>g:eU0GaUf9Qk-\2L[ndHJDl04`B;H>jL=_$f/KK;4jH[L@V(&g\Z=@ISo5aU@u,D#(o(70@6Fr88jN>0-7t
%o7Q?]F]L^rIW-nR+MAcui?Zro,jV$-_J)IlcE@B0ggc?:Vk"qML,"na2Z2Lo$RYOhk6E@h'_`:)"Q=%AXa`53i;d2L]\N:uftcQ&
%H>r;s`iA,04ZK+jOZh"2-d4araQ>YWK/8W`ST*ToB/\oS7(;c?,Oe'Gh"$(Z(<X1pnq3]kgh)0\S92M8(r"FNA$I48f:WAh3i-rd
%)gZHi3N+\Po\bB&RH8AZi5Fu>Q)UtZi)gUW:cI%C*B.S]7dU'2!:`St[cIb7Ehc"Lq8")>i.7>=IW2Z-D>],1gi9O#lrSXT"HHSW
%ZK2<]S;;,ek6EAgA>?3*r8="^]>QLSE)5cSRKc!d-adDGUB`0'&3!,Fbuj'E4!!tO=Q^H_*cL8Y6!04>h:Lo-X\<2u#M0a[cM55`
%RIIiYK<I6"r8@ENK$Q5;\@s#4>iQ&r5G>E7l_dJe:Y-X*c-\jq0n_?/E-<t%Rm@S1J=n,#Y0hlc\!&#LTa,eP1IZG4E3H(!DP[RC
%`laaJ/Nl($2$LiY4ZKZ*NBhW4E1Bk;U$.4Pgp<BNqNW*Aa=_0G#!FqkA<eirV?b/k28X@.#:BMU=QG5!N=217ElJV"c]ZB,i!2a[
%c+Ce&N\nPunV<AOS.'Gga<8S8:=<QkSo"2<l0sfsWUkaX9._YYpj21Z+.Q(EF+$,73!lL)-WK+2-iMh0cL8mdNY,(h6fSDamUBkk
%N$"S%N&&o<q8"(q(+=%]#7%MnZ)u@Mi)iZT#sJ("0r3#nf^aZi=gp6T"Q;HT-tF\2a&5@-A0qT&6FS(3\J'WHn"t#U+<7*f^mMam
%BN=1uXXmil*/>*!m7n5\aRZUG1P0RD+k9[qJoE9i.d.h'E6r_W%s00)-bX2mD']I3!)A/P3XESQpG?1?_<YQbl@p<!IQMSW3]T0-
%e!eJ<#%qrtLi@"Dm?0=`gR5m9=-eV:%%`sZC<sQN'X3Z(/N@p`Li/<+kFU_Ii<7Il/E&f3,rdV(f@a<SO>Xdp9*gQ&$I`iR+1NOO
%"UprY&"Hp$hL4DdBA,(!AEnR#X?]UrqO%j6c%/&Xk6#?#KC2NHI,J\cm@H4`i0AZ<Kg>qR4+eJ"F>e*l0LdY*dX`e.=QG_V4S?L;
%B*5p/\,X_$SK,hfSNe>$-Q=]6gH5'e.D"`@Xt<)5K.XPjAk`WVNAhJfD=M0`lIJT_=rTqL4@;%EmaU.j*WWH7$V:f$n[FjjN'C'u
%?pg=<im*ni-VJj`#V'e(iG"G*9EbpLK0,eF'f[WUiV7LIE*.">c^>-1eSZlL34Cq['hN$>GH@YOm>M@Ai?-lQgR,bWD:fWN`WXS]
%S%q^oR0fB1FfHr(3#\lk@jV9?hPjnZlr;nVn88eg]=u20L'SdfbDOJ<"]!cN,`?gqE5!ain-p*lMgBm\F=M6u^eQ>s8HmCS*jN;b
%Wsf%_E$dX[3%KBl1=2H)M(uQH,m#G-,Y=dn&NC56VErEoi+1AK.8_GoB8D[RW=sgr&2#NjRYehjWASD93Y=?NB5&W-LqoE@K+IB4
%i3XD9^i^];coJE2J'.r>%CTD%dWrW"f1,/^H,.OJaI8D(%le&2Q&(`7'&3R'-/*tV*%fB@hsu;uage^C#95=)A\434gp)_F#0hl-
%S586E?p*?Mad$OfjoK+?N!<LF#Fnse3M299*2]Ft^U`;(a2HrNjdcV2OfB1Qk(X'[?jO)l"q<P!eYBU5"rt&RH#9uPi*88S#T5b_
%%f,!=:-/tG>0(isT`KA5-)SQI8U652$Ti%;EFf?!Yb;*\1J)$/Bu"H8YQh;[J3,Ng\hb+@I&H,8F;AidDmE2T_ZJ,r,jrOt=hpHd
%7&fK'i+uQ?D-0rVh:Pi/Z[hWfOD6LP_!1Ls,CEa!^fdL$.+hY;d:4HV(bFU*HY&Hu&o]U)nr^omNZMH8Xf>6KUT9bc]qk^A+^W?3
%V#\R%4&Ycr$?2o-%s^eKc;pt):'&WUD@=uD^tF<;odp>,I3if92A&>d8JE@0>7,?'3l)ZJaT9]d>3nXtJ<T_j8OkQA3#2Q>5_B/D
%ooUaT#rp8I0$d`7E*?#5mt9u$<keiKkU$NoBf_Z+Yi,R0pS0[RO<!1ts%(s)35?[OQ?5',J5`DFkW9/3PM(&UgmJ=N6doW+!I()B
%Aak4#Z)r/jaodZ9M_Q.]3!9-7"01sC!u4XUo*l9khO;:G5m33$e&f9H!iPc+/Ib%KYinb$F<Y\ZN:df&*cUa:Mp1rN*cUC7<qUVW
%E/eK`nVd\mc-"&VH,(.5>ZnkQ2BY&kAH@RfZ_Cj3J2:VmWPoelE$gG:2R.cG)<9ifSHYMiFP/E(<u,b.;O%fiZ[ai4V7VN//DpYA
%.f1N7gG`p)h4Od]3/P07L'F/kW:GWm%lil>$+=t'E37]eh).!>]5#grSI(fXIjF%>9]3-3Pa?C-"O<qW=a2t@33Y6qn#nNuUIA>a
%2GE%BAmSSP!llO%qtQQcS1#J9K0'`+1C\'LFXD&kPkN+O#oljBqm1DlE""H]FpA[?,;(6ofe@tE7$Kg31P'&+\@(4%!b\*.%quKQ
%96P0o.hObhQTR1^(eikV*sN^&_Z\844p'0'$J_m/[:afOXHoSuf<V(OVsPF5=K0(VUZ*H#<8^I>ibl+B.W>R$XQGkM">g(VYW#P>
%bcNB"fikgi1l/&.JU;#TWEUikp-l4L-L$BrmB*ud"n%o^_-8C.FBW5lF=M7^gpNGg7Kj:/Xgl_Y.WG)&?Wa;C3V`4S2H8T?iO.I`
%DGYm/d9G^EU&kS#W%?\72lOMp_j)".bKAS-N-fq>"jRH/Q="hcE24K>Af%!FS98@gpR)@.<G5!9?sMV@0B5f-SI?KVOd5Nd-3M<S
%d['3(i"0u^DVoDa6dTsh3Z#<7!"8'si4N#nAhJ%Qs2Ni%>i=g<@ldr,^bnLu<[r&6TlWk[5m<8aF4=eOE/]G;iR+X?R@17+hF7[/
%F6G)iR)"j7Sk4q!RDAXFP#iiH">b-\Cl#ms;/5oK,&d[''k]HPE:DrR(i6.daala(L/%nI!-mkd1T8)4^^:`t.WG6LSMT'K`Qbi`
%bD$C0h+cL%/o\gTR+0Zs^sU#V_CZQ`f8@<"NgAdhZU5ebftc"NqS!CX328iC$p,Cf59Im8k6&KZqnEO4pg?:)VG,G4h!fkVk2!:#
%`V@6V6b/8LnUX%LL=2(&5/3=)_a8[F"(u5>m_!4Ti(PUJ&]]V:*0[r*F?8uD1EE8p5n)-ACm`EQZJboKC=EZ`ZN*tjno&p6GJEe!
%GNsZs5&aON!S$#tJ^]j:k<8UU+o5_+*IQcjY[MD.L(>:&:"OFTJMYNm'"H3lmX!m7Q4Ft[5SF>B32R:]q`tIIBhorK/KHgRe.hdT
%#L4)35B#c$q$<9%F?4A'K9khr"'6NJcm*Gl_!*#:b'q]g1Q5\I?g5AbRZ!-D/KHhKGS9@d2K3+-9P3[.i'7Ao%F>P'31@tI1"a;#
%="F)KB*3A5=IN[WR11.\eT#)6@fn*ekF'@EZ[q0(*;O\<)n=qjp8"QA2K6<a1<".`^]E6@a9j,$"%N_j4Z6j/Lr4iUCN+hLifM'r
%"jWp.V4LP8,FHl!>+*0gQc_@@c33!?-aYH;33^1<ilV@`L*b?7"rnIf,bs;A!Y4mW5jTToB@VM).gL=*]frk=i6Cu@(_#?<7+A[&
%0Ru792.XHWJ>5QR`#-91G7Q'$oZR:F1-=VEFTQMa3@OXV&qCdUW*fA8;7T+#W7-5PBEDsW_u:,.RU!ABrf&sf;O)FrDt'<KSor6T
%%=>)DAkN#mM(&)>)0d6hU2>b%iNk0fm5OdLB'PD]IO!$n7;a'mmh1kDG`[BLX(#]J>=lT_9M1aKqMc8e..<thCdGjS9DT+^AUX=r
%rJ%6'-H^8rI__i914Jt<a[,]]>!*%Uaj0Vi[kXJ:I:M61Vp`]$X)0m]aM*d$f'4.'2]42G>FE4qedTb2VJh'.8e!g;IC#?@,0'9"
%#%0]Kko2327(,eHNMMGK-2NAF(L0&^q//st\j>qIRcP1Ab4:PiAn?1W8\VGba1>/r,>s)OO&#2(NHZDen.!-V1YZ@-H]n^?e$meQ
%,IZZ#g9>p6=%r,-%!$8[?=G"IgDa<D1Q?:Lp.!u)m.[()>B*k&pWh:FB]_enC2^J@I;_r/1ImH/3u`'U1c$O6aM$!L]Tr@EP_OK-
%<[hn,]hp,],enAH6_VBrgb=*8b5usiNS'`J$PY^F?LML\C2A^>)4h==HGkU@31^-3%UsA7rm].rAoE;$aLiD7hSf@cnLLq);194V
%DOJ0MXB;]joq;"*4q:o"/[[Og07Lj4p;TEH^1LKH]s1JaM;D-Wj$]]f%VBW;1fAMCbhd$1[N3lSBOT7uE-p&RBk1eC\\3hD,8$Si
%Hc*F&Ujd90_ZF7;IEV"P,H9h0EdInW?[r7hDJumqjirP7>9R[P<c2j8pV-I>m7hK9C^fVC9#W&2Ni]L4di(hJW4oQadkhGH-26P'
%/AA4HhDE&NM6J/t"q[s1CRs7M3FX0/Q/(-AAjHaUL>87l#<nH=\6DgYLib$=VAk&EM_2KK;\-UEjPC6(L6^Lt:J#3KhFpL-\8Y8k
%1SI54$]NdYd0/n92`#e:OM^#WcKpP9A`i>ep?"UTgYZH$p*L2C]=2j.dhc!gOdXrC+%lTTE-j\+-"3YDL7^l`GY@Eu&==s'W4gTo
%1@.<oc+qA_cBu;5Qc%@N1OI$RB-,?Qfpc#,8N)R])u'J;#!90#j/-$5ShYSubb%O)BD,s")9ol)[5XUGV&o*ThJb0*SdfFQV;nf&
%qN]bR0TPShdAaege4_C#2h=b.%3'&#QG`b@)q<_4$'c7\W4h_5`;d<rhE^oT,9G@kkQ:TH)eO#qP%^d-Hh4V`Fqh3WVM2Ah>@MND
%:25T,@W0-ThKFQTM7nbo1F9dLH_X#r_+s>+aBgeeg(8TEf44J=-h^#&Jkd3%h@.VRJorlS2sX:FE%A9(`Y2feRD%kK-W9?WbhhDf
%8UQ7IHR%%05uTeB]buuC6M?/gRrMr6&.NMq.RViQ>AeAZ7./T6gtl"b5.d*7)_D192q6\X39DhFS_G*)T?G+ppL^kDF5`)5S#Dof
%N^iH]q20_AjPFQI$I90l2^b[G8ZR/K,?id2^$g:AmfGI4\.T9$:hpb'gtp7J9JjbKgRDc#,\Q>rhB^uab^Nj.]f#=6[$BC8%W$,8
%[5Zl=h6q&cm1"]+N$4bG>=6n(Xjl5"N[m'%RAml69/*ul;gU<uT;el^g\^E*Ielh<02r9[Ugm[RACWrqK1nhor<j:58r'US%>PA*
%'uZ5##XhFL&HnE-+qF-R\9B@(j][BjBiq1.jh]kK%'8L77`.7o]W`.PUL\X(N)8lR6m>8X$SnD;+EWI=HU'8p,^#iLq+)VjA9DrY
%*\3t!+=UjLE+l]+&6bCTF54%p\o.1l_B@[U4_e7NI@0Bt`a7a&U%dMgX"6MMj=1.>:sk#,Rp+15GhT@M>o:XqMsVFU)lo7o0JNke
%5t'E_:VC91&P7o*p(aU=7?LNo2mh3i86Cqt4^m.0BceDP3ru]=E)s1V:gL0pKX#c<,c<ppqMJe?&;E8K[3E0u-^#pCFm;^pZ'D>q
%fbS`^BLed%q*O'3@_=18O['[S?PY4B%UMd&TJRTQ4R:*P\nI>F2a[[rlmHPg1ir!1U3e1/\[[3h&a<eV7K25Z)\fr8]MTc$\lfij
%</N/"pa"*5IL<+'"_jrLaaPqDU;i*a4.>h?$ioVp[YS%\V/R4U[)DB%#?YNaBIG@7_#QQq)6Y&Tn3HdTl7%l29eV337DPp'L!&ln
%'l.`rP]f0)g8n52,G?ZOqkI!uJ06:kef)0"U'9\lp3Qj9)3q;A@p(*FY-VuQ+p'IPmg0c=mG!?c*&-I=erJ:T!$Sf-i[;AM`4o.M
%!EpKE><9!e#/&V[?OBIUEpDEnEO6+;dP0,4a1;7ciCk+YQl]p?+E^c8P&(V\>oIkS#8#uJb"4/5:2**Er4'<*K?`]L:)Jghd:1@4
%LjC18-Bs2(2Gp$1(7)#!2XtP!JgZjQ"_`J]N<Z]X#8AkNE)]*N26&5n;ZO]^+<ua?E<-pbKfs4`73rD7NIIrtI7#WIp]T0nd;.pI
%@Seh.@KN<:'^Vs'8gYoWi_VYc&b*gVn:[Hi=Md#\3(?Cnq$tYQa:G#I5^eZM/q,3J'\IthEJ<V3EX-<Vc1GuW[qTFj-09JD95$F8
%/"r/5l7Mp*U'5)i#4<[,U'4T<c(#_X+^EF[/'qJ@.M/ukW<B$_B]O2!<QZH\`@BD6,UWro+B[e;dYC^kd1&E%UB`.HCmQcs@)a@c
%7nfGH.VlPC)'bqP+2:k+i<k7YnX<qd-=.fNd]kl*56A\6h#e'$E?4,agtWnu&.D<?8t&UrO9[AW1<Br.O;+ED"J^[6*'9Po#nMQD
%+@"'D>Qm$<THDDjn-P_;,^ZmPNK>aQ_hJo\H3Q-Z04bL^U8aVa;d&8nBm.%Rh?6m7iR*a5mUPCKUA'4#]fB(h'db5/^.HlKZsQEN
%1!l'CG6:.LoEK>3h?e(;LSl?jA!Gi#XV`h;KFiqS6K0[r"08(VT/!]p5b[h+Op90!D/<fU&L;NcH=L?Nk"l<)KSfR.Ec?PDj&sL`
%97a^>Ob;F`,aBNT_(H02<4c)*E+-)3Z-dUnjf*7)]Gtt/+:o0J[u@+aSAU:/DXKLb5@(+VZb8JPXT`e0\2c!'9tU\p&[@>Y12I\I
%Z-5+r=I&%YF-dhbTd;uJZ?MG"J<j#u_+hh)$cck?oGYk$C0U09<dd;(#sI<3f")GaW[B;S?b#Bi8]q6W;itd2$f@]?D-3ALb1!oF
%@?D)UEsV_JD?"ac'OW>dSta5i8CUAH21+'`&CjL*KJ;[:aMZYTH#%ai"?X+f.7+[RR8Es4dZ+jRCr,hiKR\B$r437MU,+QJfL(qN
%?m$;;I2S`s6'rMifOWhHOj*6=TfFbiksHDXa[(0@oH"Dh"=,a2+V!4BUKb*VFeP0&TZH(KY(Rq*Kt'0;Ti`)DZjqZoSB0="?Ppc1
%9/5[moT2/8)k+;p/^,r(a9#8g)O>S`Sjn<U=BXE"&6r,.A3PNh$Me7H/m,Oal'`_uW#nH:&m@''7_EATSP5Is`GH`+[lN:`dA!IO
%(\k7A,Nr"*RQ"c<a29m[\3Zol:4-[4Tge%Qn'DBr\kjlXW\b?tk)_S4BA7m8?MBK"?G!e:*4AEB,IWUaR$u-HmW?5$0_V@i0[\OA
%FDp98M-c^m85mPea165bG\%7=bM;>WV@X*jbn;h%.r$U.\j3)95L=uqp<[Pi/;d%bBFm_a("K\74hD,.bY<)NaQTbbcD7#)Z3sW;
%eKb_,-F/Sc-cI!P-us3s!8!!?49;B";P/^l<I-ICo!.A`7mT%;'":ib?+-6"Umjm('OAU4`jXQJh9rbN6OpW[[@JBr1(,(K#@OWA
%mI2[Il^T;Y@A>RJ!V""uf\EiPkRDT7G9013?p5cMXRYD1AiZSsktH^,88b@56k3!Z/R^GYI8U;RLH!trP,4C^VqC":Ku$m"^gZ.F
%^M\7HAkqZ*1d`b"Ag;8Y"LKj]%5$?;^r/?N:`:7E.iA!lLBc5h"/U).S@]0F]g/04&"ek!;bF9T1@C[:<WHLEN[/hRJTnpd$WhfO
%r`+/nZqdu2SAk\=F>;@,@#\u&-'SKj'*5X>eVu)$;c8EJ=8),]Z3c7`P82i^$No)3-t$_D()B7\VQl%sSkS0r$4shrd-^lm$`^J2
%<\$=I:Z1_Vf2g[IMl$KCnPs=3_,)Jni19?7oNh;O`9RNnp+^Y^Jaqfo*C\EF(Yo'^R5duC126E/FfsqSMA!R6)q0W$O)`EJM+XZY
%`JtOqnKjZuYTss.dX>Mi%Yi;OY+S6)YCbJ5i\q]Lm#_e@N`fH9MRe;A$.]812@eQ>FU3*,Mde[r7#"oXoEO'#_ePsto=,esS1LJN
%7N-X,Q;,$3Y]Q'A^#DbR$]OoJWRt=<5tIZX!88IT)qk^-$8Id\Y"i0V%qCn31&=Ql+<j*].uWq<A<U<Kq-[2U#)L:%IV<XJPE5/^
%Q7FiugVc-oRO-4\rMoVfOqul77<]g`5pHcE%8fM]S-j4!0c)Cb!t-Aq'*ag9"0Q?o.n+)Ic&Z.Q/.e]"9VMKY]m"7PgW6[Sh]8Ej
%:bNL@SnQ6e.h^ki;ss)&kK'"9QPk!@9K6^cA9#hOL8+&.r;&(ug,fs5>t@d=>u`^Vcfpb(:]N85\T;-0K!OUih=4kX5sZDa9A5`j
%I!;t/$t?@dcTX$6,1>?,X\c,Ik"h3kGM!)%K'*0J,TnXQ*FWS(Ya>E2W[!i6$">P!YfN[kH_O5u0-*eC9MIim_gW^l/e%-U6O;-N
%]mASsQX%=6#q_mO[*/7WP2L1,+1`%t'3J\MEtEe:!C.&D$UGm</qr3eNA4^C%hj2j8uKfi,tJFeWC_m28qf)s*TET?:Gnh"SJT`$
%!O`*!i&nVY&P[*_Pt&#cYXK2GNg7Tn':kJ;9*qU90L2X/YV"=[csI!Nm.0f&K$9SIaBoC,Kr-0,I(_VXp3M'9#^nQl+g>,pkbC8@
%f.m$H"Y`J0GCJYeB@%U&m\k[p=:$bK#Ro_Bcrl-$"oB4/%9P2IMYD-t8Q6T$#fAZYA(hR<oAg.m@>bDOOg$^lN8A@MbWmq:!>%!X
%*NUEf((?Ani&kXtJIbAV;C-&d[DG\q?PqHHTss;l0An(5i@`QOY9nAQg%pf47tbmOZqEspj/-CL+DXac=AF\P6bpba,j[64EI5T/
%Y38(?92p'\I[?4Q+Cf?AP1c/F9$4?mka7`:7RS8)"<d>r5n,s9!c`W=)jh%kh8LGrcq15G8E&@h@\DiF40@Q+MGKN'QlYoDLPcE>
%%45gHLjL=0O:YW#XSKG5l2-1%/Ap+UNkPK>A?6#P5AY!1'HqM&_ODIqVfm-OC1]DE$X`faVVEZ91AtM!C'>okAks[G-J:^VK(Cfc
%+L\7fa-&R'HOsO2=`k/$j\+&MOq8SqQTB+Ll:lelJtn0NNMR4hKaA)oBZboa'Nf)(Wc*T);6Uu'`^].C$/kAA,h]NaTm-USWnTgf
%L#E4[X`+l8mP7lp;*5g=D5lNK<5&JrScX@q\st$t-?!rt/4KqGgK$:t@'jU!i=s.+#U;^pRFSX8@D.KE!k:0-hl+V,FJ=am#4>],
%WQ0SW6YTR0n4OVQ`Bo=P*DgCk5VXNAIhbSRDA@q'9F=\\At(uWfU,DA%X_KFDa7&<<KMGC@"JX%jH-6JJ.Su8OTZR?4dN*=EMg"t
%1i'Gs<j5]QYThC]PX6d0$h>HJ%Qg48[X>V@!*DfX>Eb1)r1]@<3[NEa,"AGforX1D1fDjOduMj]#.LB$ImQKXLr^%+h=52)H<SZV
%SsR\I+[BM9jgRV:PI5%0?rI,tTMGFI*re8TVap2.8u=bE8J^Fp,ITS>Zf*0[8oQ(Sfj"PX<G9F(4$fUuJ2f)32FIqZC("F^,'>$q
%VijOY360Aligb%aGu9l!,&+9'YVM&d:)r60lj9Y%TTBCD)$;]2OUN3i=efY!p&d8eWjo>ga^0m6!ORNtC:"!X%OFbMARRKrUk;nA
%eL4iY!C7LNVY<<oQE'S*JZ+@+i%L:!_S^U"Z_p?m%:S(tZ40#Mp$&&QMH2F2Golj]rD/4q0ERnodn"d^kUN89=Z"AG6kJ'GiBU0_
%TiQJGcBc+r>@l8O-o;fUk-pm(L$0CbT<Vo4JML11i\JO_0i7au-%saj7[AFq'!]A%EQm*DV1aemE?<Yq/;-[M8aTY7*!MP37jNTk
%@h>qXd4Kkpp`Z&l9Stb1m7l3(T_^N*M=[B9Bn@B4B8S86!2RM-;oAsJG[R6Rq'VBlkd`Oe`7Z9:_)/aTT@1KW&W.n=@=+`[o>Frk
%_Rd[[2)Qk3.66f!j,FgOf85.]>AEr!jambDeT$sC++^uf3XJJ-@3l;_d:A=K@;T6,E7C[A_RW"->EgHY,\MaA(g.@TM`m5<!jTdL
%h?bn;JN.qZ4rL-c?3jd\np%Y^EM%oO[D";%.%(-OZnWS`(6T!8TP+u'5,Akn0'<Pa)3O^sW="ejX:X;:_fAMO`YaQgSuC9I:&kT?
%)Q;r*:)l7pXJAE;l3Y4$a"VuWJjsueL;?j]2)5.u1Ii)09kCt+D)oDER,9,-D[Mpl92\Wu*Y5b4r:/W':@Nl]QQD]rJb*>hPJd^[
%JRl/BK!W;N%OA:#g:$<sWnShcCf;MhR0\CTOkDoA^I2Z9"1>*HgelP-E7MHRn/;_JpC\]VRO^UF;938EB2F1BB6fKEOl$,6mOO;r
%5RPQ9iWd]/Ht+!@!]U2,![NU(r/IA73j=B+E+7e3%^rf06d0qHoLn8Q&;]#(=PE+-mLt[I#OruuUp6iZR']_H/Xc,tR:8G/H":YL
%88]_-N(QFe+CQ>e.7u[`r8>,:qVo:q.Z%2nBe)ZZ';cR*p5P'EbR<6&/"Bjq%WJJ&+gh;!!41$#jtT>D29e]Pj4)2_P.NOG5nOB/
%=C>%K9\3IQR@QplVdhmWFrG;Z@jtXYn0F3fBE1F0Cm\j0M3>j]@WQ_8[V%(k3p_0##2ll2^7efQ3[7/PTTJp+6CR3OP;W\aKqs-u
%dVEEX=rQnOS5J)V:Yq=*F>`B2?scGl),Orr=.j1p8J:l;Fp,Y@&8E4raH2b]n@Me:edX-<i'n?u*T*,^QQ@OW:s/\b/3T%>?PeCL
%V>jqpE7LX^dW!,W0]-0cZPoa=(M[MAJ3m0QmlVP9:i+\t;Zasr@ja_jju$CMZ5f'n\KJo^TfaG9,qjcL7iX]>#nWF$8$V^=-gk)X
%NEL.,nhlTR:?\J_JBXb^M3r%-\A2??;<W.*o$.pZF*qZ\k\>"7dk[.Wq#mZO;=ao^J:GXt4Ee,S6C:il,3#Z=LLU>"CM+k0HI2#q
%'UNI5K9:IfrMc!PF*'[/9b%fRS"WnSMZ0,r14VG3f!mQ/$4%PPVZ^;FgN<rWfM60g0EO#U6:(bDRL<o9a'"FSR\Bf3:H55Q_+B>!
%33WM(9%9A]EKG.uZ&B=C,=naDiH"RhlQ3:nXd9)"qPsll80Yoo;GHK]@`V0$?QZN\CjQdLZfsHo,[$%d9cF5O)p+0EYt@b`fS?C*
%LbuH?bem"_Pmkqha"u4Yh$g:gWlsc9=d(*2c$14_i&W622\5p$A$o4K60a'13%R?11lEp$!=h]NPT;3b3).V5H0(mNBN$G'@+Mb0
%#R-uma;6BI$)K]onO8+V+D&506Al!DQ/j)?I4GkJoGcPr:teAP\,^:P6(D,#Q_6gBZhQ@o,I&D:+g/]R100fFXV7Oea0W8U.5:CC
%)[Uj(#`4DllDnA*&YWl.\cTg1JZKjAYS<S)<W6Z&GgMuqf7u7IBGKI<UN6ZR]pKt7I_%A`7E+L6^)-c$nIZ>.@t(+-ABT6m(7u:@
%637=H*RZ_L+Gm/AXot4B@:Fjp&p6bZ;'-<;HB&-qXji`TJ-pfEqRI"u)[)>2,K^[)/("Tpnrr;dgB4hnh@ESb@I+%iS)Vf28VpVo
%J7sZbgT-N/Ak`e$ooko5V6hWg?qc[h8K?uRJ`:p9&u%iD.J9U0oSPWrfmJ<!a>MNRNuL7ZLm;Sjo1-J+6Y\'-K]qNKkVeur:QRA"
%2@(K*N4cGbh'jU;T#IqdV#5:jje9S],mH>^E#g*k=R(IgWPDIAUY9G/23+#8q5%W7>9:[5;ei,T"trXDQ7c'M;h+GG&e&6d+bi<Q
%"UUN;?s,Lba]u-j<&$]^a#\u6"@`F.9J2/=0WPClh(WqXkjVY(LZm`RbS/hTO-&0;ZoIk'jVa?o5k'BG^o,W#isaDD6AJX,$5KH&
%Wd0uX)8dpffanSZi#$5DGoRHOSrit,[1kV\ouWWd7-PIr<!f4'*c$E)$q[(S)XAoZ&<`3\2*O%_.\K\*V(C>p(>-`]Ld,jlg1i>L
%CT\ASE-41<SXbp.Kufpfko,BbY\:5LK**,n.s5&MQjL7="\bC(-'AQ#Z>'KUl15f16Vp4/+nOZC+<-`Z=bDU-f?`R?)V/(7Ck@<M
%6\PpY&_tsT^c/hDO9Mb;-H++G)e.?.rc!r1(<&!nR$B(oO\u9RC>K#5L`;Lg%.R%/2MfA@7LNs5-hNH4Um$[FY6:Ud!bW,qA2c]d
%ZtZH[K:jF1"<`pRFcb=a*.Uc!A]&m^kuA-CdU`Sd'U%R.VM+.YqT:_IJG^ndb&F[."t#Ge$CZf3C';5d<RPVF-Mo&2dG(Fd^9F.2
%;QU'^D%Ok0FY*FlZiQo@J]3eC'^5<q.Mc,Pm%o)oW<,bDP`HIQZbV-%WQXJpNO7;q"GMCZ$-30t.MCeh$7o;8$K$kI'p:!M"H/\@
%!*!U_cQ+,N=XIr23X1G*)Ii0`?td`l"uK6H7PVl"Ui;]7]V/?8$7Tr6"s^A_MkL"KXZ"NEBZ.9BrK!l!KiT*m!`gGQKe\1]Io8`_
%L(==0TZ;l%+SI@U4Tj+lf(Yu)qEq0ga&!F_cB\HNPl:^cg=@Q#+X@,Jd]]J'#<E5W2#L3*mr;/<;d9/q`-Eo'=$$2M*P:!5/>@PG
%LbU>5+Q@&s0B$slL?KtZ"+bYbm[:4/_"8c6!km/5XnFfS+Jd#!8\m%]M3WfrP('Qg"E"U%]JmD8e<o=8&Br!`4>4#i,6gpEZKj9<
%6-?CAj\SImDbp88DD5V"g*F?7`)a]/.4.9ZSS0&^iGsK%l'\kdDooX:pAf.4(fnAGNu$eE^mQ`8`0inF12u>ie;fffJNJ[g?Rpc\
%7sb3!HGAZ=O029>bf=6,@N0"[Sq:&SkCH@$aGSue7AhrBE.K=S!abMW2Mgr;hRk4NBE"E;2dBmFknhDeL)RoW9KP@Z!(t2ka3?,j
%C.Y(M=G(7c$!MnhA(H7aCh.=:fc`RIehN8<)3l`#0eT[OT\cil41UM`;#G:k>tP0^8U;7#:L^mRR,>UQ8CS<YMA#?ra<T=O6IH`)
%cjS5McO7)=qTC#XL\QmG67Q7TO9iT[i2XKbb._/=LtI8"'LeO3)"btVVi8R-n7c_jbT=tELIs&Q8eR7#ZFnP)>=V!np5ptV3>?@6
%6C'S$FkJ[4O%#RN1aWSuMc8D/R<A6&&q3kCO@Z?>XJ*WB!"^PJJ.$mb_GO+HQpaX;aW)JJZ9b:."DruP>P<k^:'m36#Yr*!8.l]7
%'g?3+pE:]uNr0Tn6@8idg5R4q[Kpc.`%"5(=\0e$.D?6_P2nru?f];r'XX3cd?(T!dMA8_r@.5.P7[9rq\<55\DA[rY=ptqRp,mq
%@s<lC2\d4/Jom7Y&2iG!LLboMNV!qD&F'1fZ(FkfaqgVO[K8L@0J,RCP9QK[FdU)ci2e-DFgA]6oaWA?;o:'him!3IM2P&jHO1l3
%A(s;@cEgDtM(Z=!"U7s,r_Wt@JoWP7_OS&4Gu'aEb4>b@OA6qHBnB3B-6SkE-mW\K$D!NafH4e!":Q!qLoq".KlR;Q25M=Y@'a7O
%[;8.kG?#tk8-h[Qgg<i@Y9[+YZIG;S,Jk\;QRui+l\iQ6$*%1W0Ws3+c3]Vf#pi5&=$eAeH8)l5i'j<!J2_3mQ9qY&es9-$pjVGU
%-+k'Vfr.cBP-#lQhDBka'Gq#Sh4[RS$X(RLS/"!lo#N'C8$Fj=JomMS&BG#]1^XAg-[iXGU^ip=m"s<o+JZeW7&ri`<k6eC(6>9S
%ZGO<'"+n<ckE\VgLtLDs4e%P;nK1%?_KQR:YH?.c;/@/oY.5hI(BQf$'pAd'S^mM$BJ2_L$c,HQpM1(D!Ji1<A#gVRpaI\7"TZnK
%3057f#s>IX7nW8D93aRr^PP4E$uJ7k.^hOhW2Ri_TdG3o*,&O7KYB^9<cMc7;3$7@85sTP#WHeJVuRu1*j.f:5%&?!MCq1L8LT!"
%gjD9fkdeXT7:-EKLq5l-TS>e"'9_Oo"VETc<dBC];?YIQIP*:84:nj=T-'L%E`$3I"dPnrX9F=h:Wb?TEY37B[XoXJA.23\dR'+C
%R1D`S>L.R2[5!VL,CDeu+4(-6i>'LWi)#PKYTdej<koFnAM4->S\"s>QbQ_CqG"Pa=PD#\dh)Qbo0M51>=/0'3(fW]g(9`D;$bOV
%#j;::JM"<:g1KWWYo:M7PRLA^K"r5f`?j>VAEKq(_LaeF3c."O*Q]@ec<E>I!/jRq'4C'u)$UgpeOD9`6V"%J\3cpADS[2'S0:RB
%Z@^#*]3\ta5n0_&8MKYB"LNF#=i&X$`"/eo[7H#Pq/e1_[ck:mJ;tZ2TbWqh<PD4*joPmEX=,t1ZUmc;DS5Q4"\%6GV:5i7)?C8V
%*'f5gV$$cLp7t'M\JZo*lgf@X3eGkQ:h^1O&ep_<;5c4$JL@-O`<^:^kp&<=Ug)X\%2D._D.&e\8Q3<65(NA7JqK^\%GL$s-oMa?
%!\RhhU@HTdEdh2,M,`hD(aP(We4&'(^cEVm'[#G1)@0QAIYj5jC2Te@Pt^NW1ke/:RO#heIP)EL#FGZagn,@Y4+o4WA:K@<-ihnU
%GeuFA@uLl`Smph/@#JY&3\aLa&^MCkH.sdZ6-kEZG%.FO@^_U-+A1r[!=2l02<q%9+(?QYBV/JE1hF'1lr_84#XI.0.S&iDeotOE
%P'r!f]3r=Wl:f2>[,@I1D2;h5K*u&f5AVQ['T/FZn\4?&]T]-4)D1+ub%5<u0c<WTBEZLGEf!dn7k_DB/.)"s5glC'<KQeX"6h("
%"?=1Tofk<SY/2l1oY;(q#';#m%0'2%=:1'T;""gd(h2F]X@#L9/VL'U*^tOP\k`[#=^ZDW_+>2cdkGa5,.WTqpCS">PBLA,@($ig
%OFgq<"6r1&<jei*WWS'U>*)^GXsS#mZUC\i'J3pVI".SE]F[A9)1EeV":VYXjR(m!o[@1[3#4Gd635P$*_"75f1pitHgFK;'AX]4
%kb;(5PFa^COLs".;bVEoF=257,DLm@lrnd1$#*%0`E&[K-oQ<,5T;[/B^J.S`-UfjL;\Zo?GNlS8A>s#7/4Y,2qCTc>T>gFH7VHY
%6;uVTr".<$MD)if-o"GE'\atm9NmJ\g_Poqn%LnHJ`RJs*s;B-H!/-B%0SM?.to)Id9D,qiX*3H8=l,;F/mCl'\5QO#2t,Hho?jH
%1=7-cY6X5iHgp[*M@C"k@B(W^*CuQKq&$&)J`K,gSh0tVbD91sT*"]P(`*W3=N@B(?6AD0cflK.k2@ht8<VH"K!00#c@=D:+YA`6
%#.hI'%U*J_l$ItISR?G6rh4c[GVKm:Ec(Tgd/ki7W:;90.tl-KF;?:!,GI'DhV>gWE?^-cXC?OoP&cG3A8?7B+VGH&aC.DtN?Un>
%Ga27n=DNYX)9J*&<J8p@-8&(g]S1,*`3G1YMi^49qF>/("H\I&03&Vi29d?5"B(?sZ>qb2Fi^%3V-F?/cYJ;h?hO)T(MIV&J<M0-
%j3'\t."["ccPBIl$eho%-RP[F&=k4,qG&)*V@""HUU2)g,k<(1;om[sJudIT6OO3(%8()CR(tGp@;7V_o5h0(=?'q-G7u;hf.*R5
%&R?NQD94UB15!/BZ.+T._K70n7/B2--@=FYdXu+p&>N4r75I#o.tU/%p`qD7Kg^MhA8.,TTiq[d-':qnn)@M:pNB;oo\`o:*<E^1
%hN*FEP4X]MPoGEXH-gT9[WEr0jK^XH8]F"9dWbm]m^+[/Lm^X3l[grsW7_;h&J[7W/<#FYTA;;;8SI@\bFp/G0<GuY6s`>MVc?2Z
%@%;jj:4SBTI8Fn:iK#`*7TP=6d7I7C1Vf;F5)hCI<^:/dph5_APgt2e&R#d@Hk:Rg*<s0%-RCFZ[DhhLQn^FFi.?PK!]aJ&9<&'2
%c;d*Ej,k0;*/7MSCKTFSk>=t_R<)IDYf9f,B*@j$'Efm&YUYjc#Yr4\QPi<b(gAT_o'NNQW3I;"*T_C=H\i\\Jr."$rW?38n`AF"
%(U_tQAa/(I?6VU&p^K9r^Q9^3=Kf@TXP$q>"usR9Zc7j*LJNo!-,i:c6`M^QN`"0=FJtWiim]^LO&@KoF@(Re/F2[b\g&-KiD8ED
%"p?*:FUhH6W<cRdiacXrV+2=%h_%HT%M)r<UeMUjK8.&]?=Lp9&;0[EIMtigJ.n/5JK**-61YO'?8?&3iR_<nMa/:EToE%%ZXt"J
%Uj.Wh@\A(bfBq<VRB$b_4GnaY/Ws.<]/r9f5pA2B;6*[hVc["tb41mDP7l/18j(d:+A3A04Rh7!@$Ye(,-Y\4<[aQ20K1-\CT=d:
%QE=1qm9$P9m0*hsbbek6<(VsZm#1o.aKb/%PnN2K:gk,W'pL$\]!eml@0e/m"JS?5qOsR4r&iCu_t7j][P+&"T`,2'3n[pb1!*#=
%O*&4EZ;(1DHEMC6Nc]<I=>6Q_r<!uI/IBM-ZgbsH:^e'O'siI,h?oWmf+B:aPdMLMitdjh&E_Dt7\-kFU/%rYM8APKi3EqPJ=t"!
%K,Ra$_A`O&R[Bn_Jb7`^eFXKE.tpcnLf%g))Le:@n-2u1Ar&`iLB)Son:ITWV!j5'NJ,E-@RfjZ')'G?QJMGlI,UkVNHU.-8/]&X
%&7'jd_l"^@cq;9Ir/`Q:gDF-.M55S#;7RKRUeED@jJ5NWp6UTKT\N,UYRM6*dqO#^D!T9P8M29]%tOS7!Cg8J<_gu4&eFjq.b^u*
%=!ToUK8_%5.\/Ok%Ep:9STMi.E6RN7EDbB2La.t8$L,cRJE*(.7<t1Nnn!FcA?%r>JOLrWTJ1U6XGLD+5i[u0(PY6m9@"f>D=[TM
%rfildAk]!@Lm'U"oGLag<ijW/<K%Eq.9Y2gUgP#PFtV6hADdOQ!JV2F-im0?.Cd2T+UoYp*jJ?L[pWMLYq"S[7Phl">)Ah@#qi%1
%,&U*MWE!h&)&PUr]Fa$6LBWE3TNTkPVPPM0;O@$2'`\biarji!*mBr#KZ`)%5eoV,q:/o9,1[lh-8$b-&WL1Y$L"7MT\9Ccc=f-^
%ds7lnJTd\E7n/=5*dS.sWRsNI9%Y(ZQH8\Pq`q,FfLAFboh&_JF,j9[0L?^'[H.O&6Gb:qqCTDb]%Y<q)MtpGl,V4HIQoA!ge!<l
%:cA\L7BX!]3XJ>SXD[/U]2j5?FI@?YFoG6)0C2[_SWL4kBq6q'*E*jZ_fQO39GK[GW<SUbRY"m=jD5cgVN!k?C0.jd.#7RLqULu(
%5]mAYN7a:MOJLT,7(%]6S:flF"i(shD\*Mc3`1/c8H)E;0S,20Q,t6UPH^rh<3mc9_[[Wu*8,>:MM79,5]<N17`dh?9UT@>3YGg]
%k.;p4!l?<$L!4Z.Z:LKAp!Y>L1*S<%>DnkN.$aSGiC>1Yj(ErYN#)(U^q#lE@Te61(`WAECO!nKo85iFKF-<bl&_R(>:bl;;5kt8
%Qd7qV<sDr6mO>YmNKaT;!/(Oddp@LMSq&Ca[/iM40KTSP6qSsD"!F&D((n&.!:o!KGliWRMO+e^E*c4UAIPkB3D4r.G1fn&\n!3[
%K,A(LBpOTgM36GlKERE!-dcR.4q"%pC*`kP5f:]8>$'RtV1F;<leBs^iZjScTKWGj8%+-B*ifCVs!cdU`]V9M%^KK@)F\'$]N@-'
%.NHtGlrZQA4)n,"Td,ZCo_psooqBt)$6g1i8;M,UAWkn'IYoNg.iR(,9!2_qCTWu;aA[>?TK9#gGZ+pF=,=R<Bblar/cuD)4n;6F
%aWfl_,6Np"Nd4SS3@aT*r*1j"o*dIM?ur'V$K+5rS#5F>8%?sPOBR"LIes=67@,tGP=$]G7#&qdl:WJrrM!o!0*6-0`A,5LRr(*`
%`?enV$VaeTL-(C(dE)M$$dYOLUO_,bI"eg7Ke$:;<'4Akj5jOrT@1akdRjNo-41i2BY"CF"!5BWKs=AW5BJ5F.nh2::0&kZ5a%QA
%T;LlO'U$!L.FK%^mNM3TXc#YAfmbV,*^)aY+qs2TZ/.n*?):LFhJZo#oV=-mEM\_H9YA;aL9FBR@]%d=5r'5T<`D?W?d,ki*.aIh
%%G(QVEp>VF\?-=rdUXlAND^MHQEuBE1G@Pj9M!Uc-G0s"U_-rl+3JX+Xf+ct&1igjHcQqh;Q<!(_+79A'KZ_fIa%KeD[fu%KZFV`
%UMU0,<+>smlY%QL:-a"MEgZ/K$6_#K!IAQaJqE9!<g>sjU?7;$=2JpBK^fMI>ntcDZIT;VK+"$1dtmZ]3.fe@b>ahXIZ::3@BLj>
%,i$ScNn2:r\l/#690!utBJhp.ZE./Dg.2;PUPOYiohtR:&NDPG!R&$jUsVU581cApp7qs`XtV[*bf$SZ2c=V4e>FO3Lt1c^,;ni;
%M/YD@6J'2:WbinqeE!k-U^@R-"9T[F/%n21la[8-j<1(eflSKWM6k%e/B==4bm:@[$*$7\[9d7.?:^*MP'dm'7MbUSaHV8oFELSj
%)_]Yt<Yu_mP/I1[ZVaUJJ765QN>6nV(106Yo-:ga=Z<RM:a.GH;>`f,&2RO(Q)JZrkX/ef/ndJ$A&3t`PYn,bA#h#AeQ+..O]'KF
%E7E)Tp2_B[UT^%7?o70L*CH?Kq9V*8K-l^.!G>!i(,W[,JX2G<DTQXlN2K'nB*(%R7Gf?W3im8.>ZUlh79kftA]`qd&dAu?!c/=s
%%f*N*_JSoIfFI[<1eseZ,!0W'd.2%5S9e0Gn6Eg!8YHPab>_rDE?c<tXA[DEnO[^6$0DII!JT1/$0<+j(R<gFbhA_u.hl/Tp+dJE
%I1X>LXCKOi@=Qb:nu\(@>6-Q)_"C$t0suPcGgagO2Xi\V4X8Cgmj-GdHtBGPLsVJt"G>L7;0no4"G%g>1t'B)<JD-SN'sopgb:`'
%X;#"9b+Rcs#,gMrCfqAjJ(A5>EmEmE8&Z[']2*r`K[SS;$0r;:<2']gcsjC\5[e-7]JVEY+_f$36b\e"CS38Z,@d>=O:(].-ZQ?.
%h@6i@0pFe:n]"3lU'cObN^5e9CcZ"^,9\*7$^0ik=8V=Qc2t>o0'":FhLa_@GZiY&1kI.rLhR^W,FtAnh[iLN3?&Pkae#FB4KW#S
%.)C`=1anhC3$S_cO,[qV]"t6-MK(qce3_Z8!g1_jNB+FR+5.!!EfU2h+I/0`2+:LB.L$!6,+p.gOa&Wcl1.cb9g*O8'c<3%E%:08
%D$Qe%@n3[Ka81B=JpBn@<tJ%C@W6o3K.Z<rV6`kI9%aOPMtEo=6eDj+a/'s(PPL-=DQuOtb8S<*l)im:'[QoQ*?/.q@SING>Urjd
%V@l3<QI8=K4V%``Hr<P67P\:7QSEX)94nb+3K+KsAcpmToYS?eHN>SBb3Xq?U[pdc!V%cb&^VP=EuJoQD5@T3kSO(gVlXNa#)g??
%6/i/N(=aHR"QlM93%+qPViC-QR^U9_!8p2B*bbpoUG7?[D%sILb)[R4Z=KD4;`HWq8[XLB9b<[?aE;$M7`2+MBd23`PSO>[)NiF%
%)/9.,!k';YoVPWu:Z*Jfm`<nhMWG,Qh'OQP&h$c^8LfEt5RRU$n;NZG\QUFOi-tf!">(M/6>&S;g6*rR!4bo#FTAqeC-,$Y!pt[6
%NP?0a&Oq#94!R:n/?_>-)V[q_TE/ehVOonkI!/Du/P#n=:mT)>KQhU(aGr`KUY=^<5+mqC!($pPB[\H.#"tDKckKls_+KZo],S1D
%A.>MSHp1F\MsO4_,Wp8R2K,Fq-%J,F*MZ`GCia2^*\@I>&jY`:+2Pl]Kc+*WO[DPH+aK\*@,)(EHF+F%S[DZ?^_K`o31*P=ORPWd
%',@Q3#T;brnO/qt'bSWTDC6UTBd_V8#W+YBl_Ld>Q!>KR=hkoKj+-kuoN5P,3bbH<;AC1l*]aD`-'^5+;4s!WQP[>=e57aiof+49
%><(]W>OtBD,-Ii\XIY\\Q#VGA]MX>0_QP.#9#=]mmC3LT*UGR+_R5=c6]mQE8aUpG?",(q@&<s>U]KMOQshcKSuG#N&Fm#*C3QCW
%"PkF.GOiI4FJZFiBlPO@ILTOqC%1sqmseC,[l865E2c-*"ed6s9&1*g!KB,@"U2E/g(K`0#$)A1?Eq+!eqAor_oCA1BI;#_N@?`\
%80K5294hNJ@"9++k2[YA!a:Pf-@epJbcP@in4^t.N'd9*,]/a0MLqb@GgOORFt/g!35R;1X9DX/#SJV!P4V*t^KuE4r[##3)C6J8
%,87@7#.F$IobiE]6i<9W3;D$k0sulJ+uR#&dP<t+2a'PELa-lUqM1@m0@3=%_^;*H,8a$9r\?'OTn!N&.kRFq\P<M@OMg=I-Rgn&
%JTapg7psD9L!_5Y7Iic.Q@PLG7Ujh2;Mmi0K+;4N\Vuemi_fea`iIcf:!tX?6)V$BL[KalNB?JGVQj(!+N*H4:C;YD-]OIgg61(%
%g!Zh<83D63]nC56XLCN.,_:1'ELcjA]i3-eQ4!dkN+.O;=\DC@fh:jg-/Kt?*5[4rcE]7('Ab=LDc6_,QP-Y@^`+#=-KOth@;'7q
%DU;o8'-jjfR%ZtFKolDk/9OQeJYTb>Q1RI`12%I:$;J#k:jceH_@DQgbdiL03g#g`Q`l&(WK=LZ/UA]QWI7s[26h&4ig-j3WUM]H
%ZsUtW407!YBJWQ$K++Xenl#dL<,,+BV_bhb])toA92#jq.7W^O'DaB?/\*e44aZhA.NJc?=7S,#;K'bC[Um37mEY'_FFZ3jor2f%
%m"l0e\REM[Q3:463+%aaDT,-W;W"@.Z:7kE`//352JK:@e<34jpEXE,Nl]Vja%T$L-Witj+]K#_ZXR@OQ\HP*5T9%+K3-[g.3c`S
%5i!U\$RGZl`cSQ9,W5_e7Usfn$rLm]9BS&;#":<b=Wg5B(l^L@;:J6fVV#UuVCC`9?-g.b.6IK*S'q\OZhFD*m"O!0@(=EK(JZ9N
%7PP4kaT0_'ZnEj?6Q<D*Jej7pf_.?rNAs.U(hW;"HQSmmOQ/\s[WX&EWS3)o'1(rQLee"HL/qnD4Jo'bK6.ignDK#ZNAF7`Mk@%M
%^aE7FcB@f/VJ*+05r?^ug-TOBp>AINS]%qgG>8#"b-o1l#f1rW,Y?6d:(Rk*7(6945a)Pj=L26<N[B%%C=5S('=!hlPNq'qWb,@)
%`Jo]m(*U*LZs+:`*p)f.2"C^PN[p`=doK!e=Ye,&&#+"/9jgY[-nSa'=JuT_!lrfP?.qpc'*pg=[8ZI0V*RG@J2DF=nfEAgU#V?%
%ZEREPeC>Xf=LDh6J^n[0iek3@9(W;""=Y3hUfc2qBZO=lI)lR0JgQ<lT>Es`Qo>XfJq,C0qFdlVKjADC-eb<ZPVfI"ihW6B5b8ld
%KnhTa?WntN]&^PC3[kDIUqT=pfe#m\1_t7e<g?/iD>C?u@#1eN]2"8`fl9\FF<f9F1a3:9<[AYsm+IRnbA'BP&mPL6Ng&:Wi<![;
%<rWTfg&tN2PRUj@`T$ZH6jc":Xo@jM)%[KQbW9m(+2s1Yd)n_]/1'\8U)Ask@L[9BS;=_8U.=VtQr&p0D+5YEZr2V&a.a)JEg9:7
%K9W-'B+>>/7P4+`JOo^O`6O'&O.6:\1g?rfp?Y[m6p_k,qPU$!qWK(A+U9/83MY>2eF;L^!$N]Z2=!+<0l<`&fX's%p+S5\A<T`o
%&O-g?Chopq`#`0Lr2tmlQ(;#GM!`Oq-YOs&jB=lNP`fSnXp(fe'KA]<gBrPP-VZ;Ab@H*:l#VIH/bX37HnGkZMHbgr#,K+q,h5IO
%i+3HNOX8[$3=a`jLR2E?;61G*ZmlJ\0p[Y1'smtYE"$CsX4`J5@@[0d+<Efsp.+&$d:nmd&lH>CfTQ`)3\1Ur%RQO\qAM4^!/Zem
%ikVX"'.$S9/2Qq<:CRG0C)Cocpd2d9MK9/hVU`CPf[Geq3>U=O60r%Y'i#_*PG'0$99A>fC;^RLE$ls=64h>_cULqmh%BT3<j[=`
%H=90s@[(Hq9)pW"Cd9]b/1];.ZCV^1eY\TL8?J3.R^V]6e1Ndc1b<D,b/oG:Mj.,Id`j'PEg;<di5H:W946_L1F:M?8gPIor9OiB
%AP'$W>::n^H?)Kr@-N(Iq,m=Q_(NPf#4H+b!I+^'/]QlmF3r!,[6jFAa<3;DX-8r206j+@.#)7`Ml)Ve-8DZ%P_be('fo\,bX4$4
%ig0KH:<D-#8='*jdK0m,bpZ6%6WnY*IE9E>5U)spiZCVd$3)5"F,d1k)%8(JVNKjW.LF*]\l(*(ZK=nR.2t^>kP;ns"?$@U38GuV
%*a_umH6_NbQoKrM,<j8_N0fbR"O%\_3M>QJ`HF\b/LFKM=&E@#L1j7h.W*h5TYPDa&NG56C7;cd1Nc_[,7mMgLHI6D^4qjrRpjG<
%k/@Zb;Q8^k_)3_<dn)Q0K[^hS&F<T3^>(.cJ7[hY!\6_O_j]l\U_mQ/BVo(Yrju-C"_m%%.9WC;N#-)p^Uj2<cHi;X<a5tt-PLu9
%0WN0'^&Mf[.GT%>]A4hKe5V+!]/AUl5tLr/,0==M>tMJYf+.>a@![hqU*n[)6BR'$7T73eq6RQQel<%I$qb3SE]<("6d6UU@gbLB
%.VaQPH[7dkWE*_6H?ME@\u?!!l!5KjM-D.DMi7kp?A^9;$Ebj9Sg>G9*AQTZ1R,PCKc.)Y.IiiA/j+t:\t06>^Q+EtR8W!HRVl_k
%$*V'8+i<:0UchDiKg;Z+lr52N4:GLV!L*d!Bj0$7O'1sc:UaV*Jd3OCGIH\MitprNAi\qfKCe1ibu,tZZ6-t4cBnVcC3rf(^a%&V
%>a3*T8$<K>h]qtZW$QaPL&EX0+uf5VGN`chF4u`Q:7B!dV7n/n2d"T;o,WGnhQ/Eg0jpl;:X&#7/Hj()iOpIXU0h?Bb;77N9BEiC
%Y_sAU+7\2*jFPC[=a9BDb[Elf?[2#JqM2cQ<d=(r'CamOHO&q/_Wqg"?*[AB;G$>?Q%$`qH&$hZOq/!>mh41aiJEihNp'1+DNsT"
%?5!+r`cQED.F@'Vg$[c"[:!MqA9T:7di8%C@dIQVLK1kP5bj,pE2C.`[O0hgM!;'0,9bKoL$6gLb&BNi\hclE,4o2tmL1l'2@Z&A
%Z9tcs*@%FCgb>H[U+kEnF.cd21>NBb6`)pWgU:b+j3*R_].hkTPGG"$9QatJnd-e%r^(WI@!*6f]3[6:]+Znbi.^QYpHiXsA\0b6
%$)VW(A@mIn.#88eSUi*OXRGEA+H["e&`$_V/u2IRdbPdmgp_0TmLE^"(b0WO#+u2R`h)YEOR&LfF$mZ'KD6hBpQb1W-qipgW-ieS
%:I7(gR-kH7:S(O'L$fF);*p:Gq!JQ9[)g-DjLYN<P`YDah&Q[sJBE%j+0lT-b]X5A-3C)G\iU"5.-<`aFE`Hk^@\Omm`pp$!(#=*
%GA#j^TE'(-GA"u-BgPU>B*nc3V7V@*.K<]"G)%tlilDqE4/.%`ST)YnB?31@'iWcQM!d_F]>Aa3*YE@.N7mW\Ajn"\-+bsD)(+OD
%dbQ).8pL4Fh&S3,j?k?O*?jY#&::uM6H>eWG"d*m83@E-ksBT,*3o4]$Jh7]IAo"ch48Q>`)>jf+Rp'c(t.5CP!Gkje(lbAD#F^q
%*P.0!:U(]\WR&0Qb'$9'7.PS^f^=Pd6)k6&]-Fa.P9kqM:*eDld+sPG!Hk6NlgIj;mc:(HPRH$='jK&=$f,)QJjO?&,97%bqAH8A
%^e?cm"s:2-EK2crb'%Ebll_FSZJFK_Zs;!'[QEh1_)5<&47p9YJ%2f?=lNr-'H474Tb:KpgP,#)=<*K#.Vs<p@ArD1Cj1D`10q1K
%gE!L8=l*E9mK?4h>@kDkR&$tLBn$pAga#3hf^9/0G!]H-]/.`H/?dFV6"7F&lfmgG>@D46%dED3`[(`mL$jsDAd$EudG4hd6#aOG
%h47)U@A1=!Ila=9!t^.T'c+ABTX@?\XO,chf*Y^MM!bb1=dV)Sh&Z,/WFX"jG<!:W3*5A4$o(0)Y,AlfKE_m"L$m5?gnA+F7"W<J
%_T&Yhh&W:hBiXrrGTB^KL$oN7'[\AMI!7R5"=UYHh&1-(e5c>4N*!0n0sQf`+]Ae4h]9HW)ncU9SKXYK@oiBmT`3(3<r)0&<6K;(
%n_G)4mZYbonD1qIENG$KI!5cA\C7)DI!8+n['"&R"-.nb;heh,nAna0<OhJT#UCu2+LGA-8Is%4kt^HCg7IL<$m8%&#X!=8l!eF0
%B^WCe>jPV]?k@S3F54`2Gj:"tG:8kH91rj+6dI:)T*iCTN(%nTO8/+(11=O7Tslfep_FF#*7<M,b_#^aD[2+Bhftj(1JQP%,C2G-
%*IXqSDeG.u&Fst;[t?rebX_;Kp`Re3(3Vdl*@(h@jE@nEPSpB3[fbJ29"ZXa>pu]H6>j9p`nqOLH1(qupc:7j`nYaAMFgBARI"<n
%$EJ2#Bskm-6l(P@'HE5TKN(\L[dAA'jHo3;*tm)^&T(V)0e<ZW%>:a]KGAbl"NEYPW1"ejJcaQ=`7d3>InKICJPHOt#qOL]gC\)E
%0U8T\G*\XDg-nBh#=XYhB,NGY&[lDhCM0&[$Do2Z,GZu7aI(Tip1D@_WY!pYO%^sk$F(UffAKbm1aKLSpbP30Ph-BH73EK=g6k]m
%'e?U2S"WR&CM+!4p6aGAY=oS0b&#*Z`=NE#>ph;K`nV04*?4<Rn3++K+>bSrSmZ9LF_<a]FT.r'OhJYdfZs!3`(a3?42^\s]>A>r
%R"Sqs;\;B1Bs[;;`+t,9BpVn-4#dd<aBa&X%-\7,>iE)CL$+$C?[IS;ECcU(iO(Hm<ero@*A%YdGa6hiTXsqd\.r1/;l]aGXdpWP
%6JM1?Fs]%L6oh!LK:&p)8o"Z'*i\O@m3!!KKb:F-9FCob<*D@S[)#4Gm0rNG\hri#i'VcD'O!T9/=Ngo[!&\21sMc%G*!Oa0N2.:
%@b9UDO(mti(u<mI3f5@0ohr#(<]e5lR*Vt;G1;dj`2]n^YUe@61o@Z:KWFOpT%;0eK>8o/.5>cbnXAA&963h&jD1%2%MF?1.BI]I
%\?N)@@C>,_aiIC_m:c/(5H:sA).M*a'iI,P<(^=$WL]^611`<g[=_QuLC:(%dEf&`.]FF7NHu@'WL^"Vie>kl*^?.o.]FG`!j5*F
%Uirtr,ue,?m;S#,JXh'ZC1g'Jhl^qP60_2..IE'?&Qd:lB*c:f_@!'/+bFk/4ej%Shk[.:)=9-)7Te`+N-5n61D`MB8k=VA)!ra9
%I(R7/#I?HoV($&Ial(aAa?N$]4,B;VY*=+LBp?A1g)86LZeB(\BkNg+LnU`RKDWda]ZOs/COcaPk-QqC:FpY5b`(Ku:)W47j"?l\
%_i6)3i#G;L9VJgLhFZO7V6i%3k_s,-dLP\>5&CM"G1b:c.">`)4,AS7Z-_2j+%3#3n7;'?.M6RC&Zm(lRU0#u4%P&#][5@EPaMiE
%&[*53ReYlrf+%mm(]9ZPNp`%]nd#01Yg&D0)WeBE]a1,eU:%lAFIn1M8o$p38Kb`6CM,uUBb+qF+RNXeosAlT3p]H*GW7B+3?klK
%;C?R?P1gLST>e_n;EGk5X:M>,G)VrRC:')V)-6;t]0^6;P^PnO`'S3oq%]dG&ZM=8$Var9[DPe:fWMI4+c8bkiA%ARhHK14Ph$<m
%"qlkF`-+Hm@)E>VSOj0D=c)O%@K>#^'&17Zn4dk3@QW3gOm9.^gEGE$"D*;>NdMLnaVtiHYnr&3@"m5CO2u[Z>p6Xd+HR"6L"ME5
%'LDW[f^d%[dbkrSgVMgR"Ni75FpR8m/?0?;YrA;6j!/"pFRmoVY/GJh8&^!>Y<m&<ffZ;QYFaAVd3lr3$a1S>cH0-bM=&A/d=Q"N
%6u3+57'$d&SKXMlep!idN)2BK)ci?nBF&tRH=f7V>e#\TZ^i7!+"Xl5Z^h68LfgS!G,0)M\fNT\&IOlKj+Z0H@6qna$F:c3a'5YT
%XlpT-1Kq(k(1oX!LlPE%mA+TjiP-PBSRm-N-:"!d#jd(*YVEI)E>"6(N/@pnWT3:[AikHhdc6@Tm7?aZ]=)@\A$\8Kc%t$_m:5!1
%D9m#g"JMK:R=YR%PR.*W7a-$D+<l8B@C@E+(WfkhZQ50ejRtrQ445gE9=.OMYuc]sm"O1(mh(8nE6)n:I^dVre94s\K$QEN[Nd^;
%^JCQ3'1qM9C-2Do,XZ<.6MUoVW)D@^KhOJ<L=CAX-W8kOZQ6'lL$>otgTa=@I((9**PR9lb/.sBe0:mXRI+r&p=u%f%d!&>I#j!6
%NXt5ob%le'H.`lV?9<>*dJPH+G(eU^35,sYO_K]F@DltP'N\b&(1oW4M^p)rmJ=anQKXGbgX4J$"F0jkF@iUc^\-*"ide=_7]GcG
%B>^IH6>]5U!gZiIW9oDp;-9UtF,6Kqm#4qb4/'^[g^:S45Z$*C;p"E[C9&B%gTAI!DMs=`G7P^F]]b'0kj=26`DIFt4.0&aAYlkg
%??C$=--IV[#n`*M$G.<-N+i))Fup<K&P[F:Db!h9.B$0k3th"XdL+GO@uou>&\T35kt^8^/D#XBY?O9VmFFdRs-*:Ml0\&"r$DC3
%-\$?ts5i7:rgn]A_=sR/?@8/2FI`[0oVouoQ9XN`)>q[A%mGK\InT?N7p#09^975,nFP`p$iShSC]<t%=a]f$K4aZ002FcVpZ)F_
%puDn`C4nchn_LDDg],NJqX6!4A`4Gt/cP@VR`3JJ]C3I[o"icj0sMK@_Kl)!Cb,4U^S&[6iOr6O?b[H6/-"u<&!iR(cU%:rG.9R9
%qGIRiPN4]r5XW"R"8F!,6Q-dY9F"*Fd)4t)Msij_ng=4];6V67Dts"J9/]9!n1-`&o(nQd5H0im^3V;pDgDbK5rUnpjVsdXr\_=e
%PTlHdI&h$,YG:WFR'oo:Pa,]q?7GBQEC@455%9`=q,i[ADp[MDU'rbm&_9%VfQ-/1>!\.d2>Xf1+b5:qhfJI-6Rtmm]j-<Md1j[*
%b(csG>j./cKc=Y]fJ$J[$tHa4R6a#GjW1@+h]W92D(ir#TptZ<d^$IcH)Zo;IJ0U+e(:Ph_=XnDN0hi+[?jb$^'lF2]&E;nG1&M+
%U3%TQEc33C^J$;ql"-#75-DSXb4T>)=<kLaVMk>^Kp1$^m/Duuj-Qb9[?h35H5j![?=%OB@TDhA)hBs:`(ZJ`0q>@p1b*jd13aPK
%n%Shqio9`\q/SbU1r-u1DZ9#.KP><c+WOKu*3/re@W2?tlApQ,UAfheYOXmsn'I)T,8HcO5Q>QCYI"0"P7RX[Q,rp&O/rqci0CgI
%9plGih\n#>?F`uLZr5;^H=;rfX8@C`p4;=LhVY/c<po@N?uGAg.c5>dJ0VM_H`K]?rr8R;:i2W:Equ?b[Tl:;@/.:di>7IOh]D'p
%@4(WG_iI;"U0jFf?5:#N(s:B/[!m.2`$":Dl$P$(XUZ`ZD"-DsMeL#A]pJh9pFc%9hSV#AmJ,"3FiaG^VP]K*r;,=Np=Id"I&eV:
%HrU+Se,,p/5'uhqji\tM4LWCNpns/h+9(m0lluJie,4f!Va%i+?G<8HSW3NIj4.p??D!h&]NU1S?l'p`rSkEg8,V!3YA]a)`t.c.
%q3QXs0tc`5j0NrUea)>]O0>ar>R-hBbOQU:$idl7iCk-55:;EMTDLd)?RH9@fA-npnq[6OSm3@C^:SWX?h*?#gPcY4oSP`kgPaPH
%[hHb>\p@GQS@3Qh3IQ2OHGYd9\m5d-PJ;VIak<08a5<B@LNNB5_K^%IT;TBm^?NSu=VG\FKcc?40)p7*r1A2VMj#UeETR%&IH^!@
%=$PJ(\?"`GG@shgI^sE!_m-\3jl5+l(FRhT5;/pJQJofpr'^#!nhOA)4uiAgXi%.thoUC$0#,+a]ft,H"p`%kbNll&4e))K7TWAb
%2VU]/DAp@Ya4KmOgHO?L`Gb_c48D9O?bX-5=oRgRps&-RP6jap`KVV*@c,_kl,>RZ0cl,+h*AEooO&N&DjFJFf9]PP`mS5*j8JQH
%o)-bogXGJ&gZ="CJnF*20C[Aeb?'U_B30!>r1M`.RpESXQ.tHDq:V$KSk\]eB2<Ce4Lkd!p#%sC='*H<(!]"X4FK<gEjIDXqf9"r
%2u@X%0/p]iooI7^HYOXR2`GRbHg]3S>?H[@ko;:)?ClTDqY91606?EY*;t!Z*l5ZW_'O>QrUSG!c_jtF4Mf/[?G<I[rG_IJgI_&W
%4h"^#!Im1[p\+"=n\roLdI"F!4CPe6S8q*4gu0D6AIMLtW0]S.US_mh^"6SWY?nnJ?Jht+%X>1,_6G$A/tYtonb1ehX5fE*f-eUO
%;Z\`7bBLALc=#Y,9(D!5m.0H!IX/W_*ugcC^J5`C>W8^:h_^;$DjDbX]\Bl5%P_][_</b1hjkcp4hnXSH[U8rAQ7t[g"H.hkl^k,
%5Mo^P/FPF2r[.s9E+GlVBdV'Os%\rGs4sAe+!utVh]ihIg;fR%UY)E&n`Als`V#.'&[">_ghV;>>P3]AY6Se69Km^prWp2IK]<T6
%'A2cMG%a(ch6J$tV?&"\C-PGG/3iN@Y=pq0IbGP;)3)K$[DDd)Rkb2Whqqks3(II4]08_+:QkVc-iDhnM8r\qf<<Mef2FlW6(O!J
%Vq58sT5O<5kJQgDS`%+JHLIS!G54Eg>@.9<`(V5J[536+4jNNdTPlPdq92i&RtGAf7^MP,Zq6m#c\m2M+AEg;EKr:B^UuZj\lp`d
%G=($OZ.C^uB+l2qYDut]^72E5bD!S$2'5Ikf#uOKj!gthKC[55I$fQ.a\GuLpT-S#bhg"FHLq"(m./1'-gi%e+cf9Uc,sftQ.KM\
%".[g(1FoZd`t`n/[A8jKBDjM-B66-1HO!gp&%04a\-dE-B@us<d7c9u%^`kJLFJPLTksQ32:lnf5MkF]dG)FF)sU60Sc]3GfN-lb
%>[UKW06Z)lnL0FF8NUG^X%%Q*YcJ>s`1/TM]4e79%-";ol+lJcO"W,OB4!=<Q7(/@/aGXSebD=rO=@j>pssr#j4!/>e$j8@N_bu(
%bDY]4No(i;Ojbl(IhlgL1o!:lr_<4/.<\LtE3GPJhOdOV_GCK4f$BEKm3\Xh&&MV>nmr<MU4/-"g!=R43r?&:-@Lf#hs+./8IlI&
%@m^+R?rYdC_*%SbPR.Ln=-r)K.]I[GY.j"N:O.@KjW(keh&)StQImkq$r3ZKZ!Y%Z=$nu0]iZ=OW$+Ac5!/T,E_7eMi6n0uYmK=N
%jV5WU\S>3`\6@;c\pZ-M041;WTDgt7j7J]+C/i5d^E!87i</1/kPFsgipe9qmV5:r-C.KB3^#Qo<pG">]>7`W?;+LBi.-9#6Xe/O
%d1%_beZ^B&EPpb#LO[TXgciUFofMgtN\=/R-[h=G5L^W7!arI7Bs'kW$O?([0iarA)9ee-0+PK)A^Y5DpPn^A.0E?e;^oj'5d.^6
%AbX%&7pV$.AOdc`d<"6R-kf:t"0"_7'F3luS[&4&-mt(T(1kWrk$""[(?P9MD'!7?MYRA(U.eH/H[e*$[4$Ce/kl'rLLO+&H7d:8
%DmAb8rNXqJS33ZPPUV5FP[/d2=dh^ZWL<B1n";O]q(3*r4E",OfDHp)%rpWK5/`)f`@g'+;;i=?o(VT;-(`9RpDb>;`:Ib:`:$Na
%INBFfp-YVSlr:7H%:s/&CNn0AERnn=VI7tjZX0-og-Or1^Kb?lCp)%Fg-2RF,o5aHeRkq,2m"tWCU:9(CUI<G4Vk.XbQrX3KDbGW
%:!&&;poQ!uK1Z-hgZ\([W1CEFKIN:tdCbH.CF1lr0VKC^#6!)JK#GL5]<]NW(d(Am"b(ancfNiHB?.c9^Or,uI9Xmm(GD,Y:+s%s
%<K8Q&hCO_k5FhpQ0t;C.TDB..TtGdU1mHaMF&5seB$(@I_,,;3W^d>LEj\$EgcG<g(s608U"j6:h(',\DUdO[Hu,:+$2M?*7K3</
%k<J/0rAahpiaI.<G3=G3"n?0]9V]Ws<;8O7]"=rfSO>;`0LbogL@[ndj59%GZ1"1^cInu+mj[-TjnFj!g.fW.jnYCh\(M;linZLU
%oc*SW/eu4o1:i+f!YaQ]5>Bfc5OEF-9F+c"Zn814)M?q@kr`A_gIdl'@rV>D*O^rK1^8"L]';OUa2s)8hOfeJ=/XZRc^36^Nr"Ak
%,9I2=nPL9hLR<n-j0tR@rT6ki3WD2(J+#G@;>tbE^k;NmQKS27+ln+p,o=Rks4ol33WJt!+)9+$cM?@'kC72/+p2YNO!e+oF3\u*
%6U?&?fU?lqF3]!Tq;0dWSR@_S^3]J?mIL)775ej4VQ@&1?gQ#%T"8pUSd=sP\p@GQqK7(,G59>K6T[C.nb%%=i9:PU744%3o`mRb
%)CDERG?:uR+#<N$NA'11h7)i#X`!StF=9j)d2X=!,@kkKls\3)R4`ZCONeBC3C5XTF;%@#_[hrf7K;n==3K^Ea4X'iI[gr.diU5-
%rqZ3WCjH!LeahhBQWM3D>P$Qir+m123tn?VbHq,UM=IIZ[6$I'dtBFrs6o4J]Ba>3I&$(/Y2"#ak0m65,$mO(m'J\4;fOX#W*2:(
%AY578,E=pS3V]i1_2#L<Q7(?6\U(L*JK:!\9NZEuniHt`f71*XgIgAs0E6E`Xk>cFYlDfbGaSXeF5UU>]Zbqn3Ued/?KT&HXiE'2
%//!3T-k,,hF5UVj4jZ4YEgOSbme"Q[WUnf4!7KKan/QNQktXG?hFAh4>=\(U6^r>iOO5[<dp[l'9E>Ed_'\kc%/UMm0a07@hn^W\
%)tV&@_Rf\1(EY6W`7aDJQcH".j6cHs\Anqn4rj=W47)k'p_]*[VX(4p58WeP!RGE=Y1MHf_">,JR-sHLBCr#<I;)d+oFHRQo_%P1
%Q^>J2,W1Xb.t7WceD->(2^ZAW\$JjQML;s/LQ2_0rjfY;2.[10fN*:FIW(:\f3XfI?G0WN@lIXE?VXSBLUQB\i#)KM5/@&Ch8eag
%m+[kP^bj-kI$E;O3s6)=\E7.9?_OZidjg.<KtBD9Ssh?A3)`ML*El:g"u4)Og7\iGa)M!:T<`lo3INoelqst@I2l`$>CL+&N&\j4
%%`kP.pc(`h"EBALA!l9nHgBo;g7Fqs(ip[,hnI;Sa-bm(#85)PA%8#td&rEWPpnk>s6Sg<94)j@f(a%_Y/h-oDjPse>5lj[ji,=U
%K6-/N?&e5^64i*Q!Sgqm49+=$qY95F:"7(=G;Z=#=3(+Oc9B!*S^QL?^UnVrp%CJ!1\ghCo_N*&Y\b*B^ieP)Sk]&dUT=-77m2%'
%s-S@lVAofDXtJ%u==_%#G9`NkAo`;[7@RQMDA8-E/SPD^g,blE/EoGae-qXbj.b91YbW]X`k>h-m4S0T(YGC9$N,;CmcoROB6gWj
%1FP6)$JfpHHNlXDE@dm)[9\N%n(-PW#>1m^1*0H3f9F,<H+DOk+j@o3HOtUt[WN(XfW-r!^>INArs+E42:%`3)iVPWTDB.Rj!W@=
%**b?"qDPfjNlD$D@k<(qp?@/*EmrOTm*3f3h!E;1hV<Ri6F/U0HZQMPGG@)U_2im>hV85RK%ZRH#A7qkLH7D-DD&&[h77r6%'r#S
%]5t;?\"E(nGZ=+d;tC87\nQea?+PH'kpC8>_f=r?j7;d&O&sA#cB$$6cTO0uM$Zr'%*5Z"hfN<0rIN>2*B^LCN/p!Z8fStV`"!%H
%Ga-hY!+bFC)L.PW3M@Yr[i`nU:O`.b+em.=a![e:^])u`B_C-G?dGU&$2(l8Xh0FKb6PA7-B@7c[aAHen.'IT:&PWan^RAe7l_+B
%3us8\HV:$PkDr9F4aOh)jeI3PGsOX_.:0mV06Xb]-8SJHI<%HlbSa^"X&8idH4gk,RF7Wj^$,qE%W:qE],KR[8s6[PY$N-@/>ms*
%n`@(ZqjW<pR@j1\cDBca]8o)4*@Ds>/^O"F-AI9\fC%u2E"gaCnc,2P^RLI[WE8M&4B0`j^uTbhoBF_&g'B@/AXEGpO=rpHn3RZ%
%K='cQb@%aeG,T3F`6`ibf"hJ:U($r0519:'FuI&@LOOO'^\m]Jji-dc"71Lm)b%)1oRKEYC_PY%MgVXRpn3V@47^D[q&)9G.IVNb
%s1s\f3S=;ET4Yr+rmR)@o@"3DbEO_tbNk5/i:hR,gV@5e@rQe^(&YH+RaDtrY0W9O;r9W!Nk>>SipkR`p$;52,hds)3Zl[CYJ31`
%h<I>PLZ9F+[/"[rO70=ALZ=WfYj[A-F?R&+kMdLFi;%3Es#'P+4W=ndJio5+m]4b,0M;=`^;kl?`BgY_a$miCR,MUp`D&A6AFn%@
%2?OW;^dRq&PnoAYB@EKQjRt7J5>M$!jhaC3LjOVnr@S'Gm1!'#LT'%TO7V`c^nBI_"n'sJ41i0%m&#@$\!hPH#2`pEpiuRo\6\Nr
%K?)&XqA;IQSked?p)YO?iM'"-)9s&5;a9V$GQ.\r9\dHTH^%1j!0SXhY.tOH"FR%a*Xn2-;'\aDi7mV38ha2rd1=Zs*e($oh1UQl
%M[nU:IS9tsf%P>OQ</Q!]m?>Zc64Ngm:&D\s8)MGZfSqtNB`H+hUU6?90B?gf3dE@S:#I@C?/O0BGU1p4.KmU\&2H_Al`N![*"DP
%=r]jF#;*dL>TI1aI5Q^M@1Uufh5m'Y2q%-L$ShrNG-U&f1[WbVSjOTh^(*fm4uk]o4e27PYB,Q^_j"7ecl:c&"R08Wq7C@Ts3&C)
%8qo`:JEZmV0/(&`G9OuQ;jAFVIltC]rl^K95(?N!_ghU\fCL(:cgn^/:O`,_il1K=oq.g4Mbfplcn)p.jiIbrb5X>W0CW>FqWGIt
%n[JOfs7G2Op<1<0MpE1=q-VD+AcD@H?Tn5CC"mh1=Z"tg3oe+6A*i1piag9>0"KVmZcpGe-XI_&B@bfo(:GsTaY$?`qd/'gHmcHj
%]r>k3hR%c]On&2As5bU241[8[om71%_rhQKrO_b^m0C$_ro['@3;N[I-N?)PN<St5[hnhh0,HiZ*PX_]-JcQ$'E;e<XD(@<m@nmg
%6F*.NU"(sV1qqG"+THkS^T"QcI.E;IIp2iG0@6SL2tbK8f<pO3r!?]g%??JD<W<e@2IG@q`$`),9Y_`DPNR4BQ\^bW&U\9'KKjR`
%C%6sl>9D)K]ArG%[S=re3\Q[;X>.Cj-8=#mDO]S(6CmK+A[5g:lsN`'(u>r?)`LH6rB8_#gU-A;dU^8l4U8j_o*=:S?2L*$#.6Ag
%r;47gqgQ+;4fP'F][38'P\`"=oj&X'o=qkS/0)E2'o2F_F%Q'l\S;&0%Fa>Be!k:,GoK5>7_=,qJT1O4m/"?f2sgjX55s`7Vr\*6
%kJ)KCjF_A^UO;h,aTlhUiL^nCrPrLfFjm7gT^['tbSk/]Y'ZIYOOo1'gLmJn;*LfMeo4T5I)P?Kn>pEB=Ospu?!kRU_4oneg6<C_
%6WFof8F)0'6`nmL^!a9:GU_4+pR\_KjgR%O\D$l7QCBenO^t"`=0da)hsQnJS6s?C]d[]/gJ0`mG@D4UQ`f\X\9THnXR*kf=5Jbe
%bHpK,%61C@b+u+f!*+B8<*f-Gb*p7*SUi\Gg4j7C%;f-f0'2n2;fj?M$i-KSVtjnU1O6As!u7=jSB2j,2-.J"emBHS+D(f>gu>rY
%#4eqd_<8N"gLmWEIe.LLOP>S&@X[,%/mj*Mo)?ruRf$FiA,\o'"SqmP.q(QLWp4LWIEf)T3doU=_WGpn00X`7[?B',jQj3J?Akf3
%S^ClS"6?H'=!X[neenS'RIXEqI,k;!0p]=+;gq:OgS+lJ]p6q+Y2S6[2et`M,tTDjU'3r.;O4`tXWLl<CgG#*AJrn-]o4Ht5=[;W
%?CpgeA*%1o/=@!;/#HtTFUWu4N&?YBO$pHXhWQlV4NX3L++-0^9V)[9P64//KuM%l4Lnm?b:t%XDM-K1?dgk]YO4NMr2nROG?+tE
%mIEk((f1,u<j*sZH+E#qZs8.W_\hb>r"8KHHY-NSG-5`LcE%;CB&sSoMjo3cr3JMXq58N10kQo,Mu,XZHSkQ'=h1=FYdj9=jHJ>Y
%(\b[lT,isXYtOaCh`#:R_cC'5^or01nT+0np$nO5igcUXT5bamipX@J(3[Z)h/mhAm2+E\:Lp_@p#kGEA!7^b*88*=_nn99=\Y7_
%(q>=t6^JUD?7)*tIt\T*G'%HTDf(GtjfdTH&a!@''uYNcpM&<!q;V;YnK%4Ibceo_2f%O9>4_XZ2sboCBaD%kZ;/^YgmOYQkP)DS
%/C82_qm,6C$o5uEfo#9WdCdKo/E(!lp^qDrE@lB>5'XY$44nOuPNHlI"lA8*?/9HX/)h6V20/#%r9(P/*p7J`NL/\0bp&RWXAKm<
%jOeAdb<07;`-dUsh!e6W$fg`IZ4bE7pK[I]q:)0r:MmGgf!IR'ER;(i>rtYrfbO=?maa`oQ@)gVYUGGZ#>/pl6_bJ8FX(mH`R^6l
%I'Yf@"*&gS/`P.MO505Z05e$`np`\[>5@rJVI!CZbp&e*faWgsXQg]]iPlDJilIJ^%9LoC0`2h&DKN8a7NMDf0!9WSc&2/2V^>V$
%:#!WQUuCP$PEV2Sk?hM$pJj%MRGM[nguG_q$g_$^]@Q!+Z%Y]a5NJRuT:Yk_bst]:?KudQEm+d^fPWiZM*d"Z/h<fVP92EhFGi,U
%NAoN;DL1jL$];93O-BC$+3H8Y2"WduY&*P6%U?Q,LZesV3cJ=_M[)2OfJWr?pupr4nr+n^q""'LbHijg=0Io;f+QU05K=Qncdp?o
%c1_RY[Geh^^:mo[?$s'Xnau5A'rU&\'%>$"N=2BJIjT4/IIu(\pe7-#nB[k6FC1Z2$8QdrhnNHf^ANK(?hH=#rIKLp]t,7IWYl5L
%??CaGlJLHh^=6QXXn*[Mpo-G[VkU3d5,tQd^eNe(cec>u4ddOIF(B6M%*k!O7i3*X05Djh(cFbd_rf$J31.d[gDCebh.S1k;e.T]
%cB5qD,BWF6hE*J0VF:^<+>S39kAH(aDL&BQ#&T>.g4tLnL@-uj#0iIT@#89M,(jUMOhik;1>#?]%$'N?i?En3ba(/?k\>dR)[$@&
%5_hnXVI))2QqCU;V+ksGW=M.\qG9WbWT,6RkiSi%DiY6[9i8_d7g8(Si-e&u\NNuS*B?g5JNJKS<dVRl?fdR&L\Vj[-DO]%ki.th
%J;s-YjXG@E`Ef&CNW5DZWStCW"u-F?Mnu]%*:pU5d1s24aLsP:%;^J7GZg?g*a3E+j/0h]$bL4QWJ-[H!UI^Mrf`otSX0kM[o&=-
%NY#&,Gm\,`&DHZMKT<]":;:+9bC!PYM=[1%mGa)4qI4_K(l]bp\iZCYBFSdr6lW8OL0nTh[&d28$nBK%.EXqii%9b6JiqI)^]E]B
%[:NsUI0Pu.O)f**@%/a]Y'fWd:OM$o9ir(ldj/-f?'3lm4J.ORnIR"l0-W_)6IGt;:!>ub8tR3(8i=qBgZZV91%NmiRA,*.#A7!O
%K@A5E4sZ6O0"(OAnu9nRUce0aq&0I8^:[OU9Toa1f='cUo#*JX?C[OWRX+%">/rH/K2H(J<d.;F7pU&*-gY<)Vl#+^<jp[GDDS0]
%pjH3/N,[r/JH"C>iQcA0O._3MK8_Esm+I]DMUdn<\qIW#d?E2#Q><gbgtE<3`-]plO/C\L!Uq`;YmUAFiT"p62_U5l\#MP4gqbl(
%+=,apG-MZ]*aKi3B'J75eA?O+359-,3*@,A@U]l?;r%pf`;*dsWNC2"OSb8A6a[BH%'kiT-A6Z`2c`Z)cnna>iHP]UEE3[NK[Y<Y
%ADLg`TS,J6g@DP>Zhb-E8WhP(&d;dYQZkt+<X&#[?1r%*`UI#!(h#Ru'V2=?/'GQCS^o*c/MDJ!a#9kMX">R]eA+N&%@j#H[_Ukc
%U0_$;FNdq3<NXflrpsIB<n*QVJq'7+i0nhpZ<^Ju#',Kc(BkP["Y;t^@T)5;lOp*sL8J^f4Ro]*M]60FC<I8$a,5XCE)pO)'[m<m
%^e+"(-)V617PD%sFKMtA/b3]n]pZJ&JUEfadP=g:jgF;M/2<,bDO\%^<bEmUhK?,@)E7^EF_Q2;AB9s+MiE)M+5FYp>Gr>2S7)+:
%-5`nPF+.QC0?j6G3PY%ho*]G7I\GC._u,,DS6m\p"T+fuODh^r?Ut]i?O49d05QKqhiqJ=--dU1jVPL&q1Zr:4du:RaY,oU0u))2
%#Ke]qhje%e[cA7[VYgKhcX#ZLg?JEe3'"a8*]1VC9;k)2&F-_Ne/qDW?f3-'=5n*g0Z7.?XKMGI55&[\A!peFI>Yke.>H`O@dojb
%$t2mcbUJ9n/j+lH@&edc.G`?%IOpV]@Nh+iNSBBO-t&?r037A<\C7re?5fLfdHRem5dRVu25]!K;aT^"Xkd;jB!iDb(NXJC/7IOc
%l8]/7AYg79N(gHi(iR;0M6h(OqNPi.02_)c\#8:c'RnP6Lj3`?UJ/?`hb,!!r&AU@!R\`L2S-ftL=:[`7?ICl\O4t(!Kdnm2G[%m
%[g(ft.,2,nCf$%tM0-J<69!2l$:jPCOCpp>FX@#TGEams=_t?WhO\dp7is.O%3`;d&NiZ9`*0R<c.!kuXI(BOY(-IlRp1ckZR3bW
%A8PL`0mS5f`^kGWS?;&F^EGE[aPGI!k;1S2-.8C2^?E%4CU0XrI'"umFQ9,F2t!>DRr5m&s)i+AlY^?JUFp:fXBB*o3S.a6m>D@E
%X]3Dgjk&_2#SLK=CJ#QL9)M-"ZXjg''i2p^P)Lpc^\nQ&("scc+^`SQ#W$DpKR&dB=d7EnQuDg:j"HeE&t>0/k"E&.d\9r_n,[I>
%mEpUAo(-SA_,(_^1.]FMp>1\sP9!+5q@`R3AUH\F<+W4io94c^gS.sXI3eV=UH3$^%\L1LCH#%AgroO5^*n:PCR;]-W)>a`J&RPr
%J$XmG+6Xf226@&[TejAZ79['6?Bn+3h*@@p.\!FfmcDN-8mD]P;GkE;-AmP=<>F\nTDa;7MHs6$=cini<O&O'331P([;L/hk\<HU
%)s::VUN[ZuoC:Ei;(k[$at\1ml+=(B>H`q][[ld*7_de0KFCDn\22$tWjp<;i7:,@\P40R\Q=KLngq-0%a)Nq<?]>]O:9troSQ-R
%;M6:\I"18pKk.JUlDkuWmU'0aWW=s>7/l[9OY;b]`Vr+o&JI'8780)=(("49,&pOf,]$)3KIrUSYUMFB2l0!\*HEB:r!la%Yh9UQ
%b`5ZkGaKLk^LMF4Ce9\P)'@r[d\`sZfTI@+iIkWkAAa?rSal@eM6=LqIbV7M8_B1O.4#=r,g#>oC[3!Y8<\]YH'5HpL<0\h2^M)5
%Q:sl^+]G[):OXunX18kRGVrXPDG$4Jc.N_4L9'!joc6*'_n,d&'.2P$L5]5u,D1`0N?&mFQnfPdA@*:R-9C8KS;@QAP:!Rl=0a.c
%ITjj^A=I+>eqC<6eZ?mNZb,2if[uO!<jnqP::=udNL:ICC?B'RR1V?Q::g<tSKuHf\1RJ'P/6'L0n[mIR?O9M$jM!d-;IH1SA[U0
%Eqb>19mru<,:lg9ReR-Vb38bhX@YG:L050=-sZ#ZB^IKh1?cl:2/=u2b1IQOh%n)f(s*5V6Fh)/js8L$ae1Gb"Cd.SP9p]Z-[fof
%e<,`3-_!.Q3raP7[VSQEF>\j42RI(4aaPpbde9%[k!mR\gE*u`S?_1\X3DOH0Jb(r9BIL;b++,ZWKXP4G7le[:Z@,iM7(7^8`-/V
%2#:C*`p^A%Qp?eHs%3>]dRl"rPd]>05j:0P:c@H3idKuc>,RdIXS/N%1=@:pOu/AR'6.7U`4M0sM1,6]mLMILpeX\WfL8B(X@M[G
%Q9MjQ8L$*@p%TY<19?ETUb7CUZ(ltDH],DKaXr52NC-9W&%rV,IApgeZY,*lN,]Kl*+X8,n@K<HmBSg.:r1k.3(Y#mJulH=n*$)7
%+jL@cC\40hZIF'Hm'b`ifkn>qdl=kZ(@d%&/fPumbq@T5?oA5@H#pmiDReTO/be!Z]3F*Kh]B(@qO+b/4jgBf?`]'q;91fS,*&_?
%k1/4YQPA/NVtT-/m0>T'+s&midi?Z\`XU>8]NOf^Dr;Qkp5]o3I!p9g3>Z2O`Ro5dp0<RT#`Gs#)!DhAHA7!B@A$7aEJB%Y+f%*8
%5jrhQp'_$d=(=IB2>6*/CoRC+/<\0`_IrhE!KB2J/_rQ`K$>d@(=+jil&`ZINs4O<F4/UfPb!@DA-A$qm!/nmH,gWN>3)Gmj6.!K
%:J:pik%lEZ;4\^R&+Ni;M8!)fYR]>HP%&puPW)3@WbtOi?(V>\;%7@`%X7;BfO.@Z]iE[&V%u(\(TVR0J2<suBio$?@Oc_2bQ"<D
%,-Bcu1bj^C*SNEQ5ADUrpJTNT<la`><UQNeM@gH%'FX&Q%^t'pj)sot=6HK6UA/PH;"5j!(:L@lLq=iHF#,J&Np$[Meln\FejeZe
%i50r^BXSpJ0lsj^b(IigX",^._\oTB0F\'(.?8CqLO@>":@Fi+J4MOL^BfKe.a"9#e$=Yt%CA5=-(pfMCNo9=0>`qX-(mI%_og]O
%Z>ZOP5)qSCG\5"P#l2D8J=HH]SDuIkOEKhb0'^\/DIL>6GiMhXd.e?sBHU+14caKM[=me'=U\Z2aA0ls]IV!7\Mh:S'PFP_lTdFW
%KqZ/nn)1YQaOY"_A2m/uTWW0mo+h(7Et%.W+%U];[*[Td>(o(>15!9!W=.]eN9Zc23[OQ_W>XL-G+J>X`&s%p+e82;DGH'a/+NnS
%nq(e6R$#u-giD"/iKd8s_q<*son;:NQ%?mmE>_GP6tsiEYZEQ_MON6U_*`L]%ni(d9j`'OYPuCX&&V]GC#t>b21mj*0k4-"2k$1A
%1n;Nk=sk<a$_<e>r@s$6iac*(mGLF^85IhlV-Zr9=@GU9n6FX#K+l[%#'_a8,q>T%C.#]`)kZq^?2-mp@\tg'[SZNP?^.ZXpj_V]
%3C"Y==RnnihXBZoqsgJ+l^]N=mIK!3U0(%V<Q4,kg-LKpldaRj[W\5&c]@^L\-Hckj%*!Fh@,]<hU\Be4YI^W2,ZBU`AWlQ+5VR!
%H="eCX(;AT26(4EZtt,H2@U0NCf_8h[jo\kDp_!R&"(*$c-'Q8$N\Q7Wb'Y':I-iS]5K).=IB=+YG`(8Pt$0VQ.=`t@`#YFNbMr=
%L3I=c\GiG#:uA=.6<D1s@TB!Id"Sdm1mj$8<SKF_QH?qHdIWa:#@2u8,q)8663K`WAhY2Q-aM=gh;Ka3T/WS`C67^j1SU<K=@*.]
%8i6\)0<6pg_"N\*#`0s=g<kO7KY3$Y]`[S)7*'[+&]3J)k#+%,%O0JmQX[b+hPu,\']Hj-ag3#=eg6W0,LD-Sn`o2d4DU9jd&8.I
%ToXN]3R0Zo+P1RI18S!u9-@pkbcbd!TMi/<4#,qg\&Go)M9/t/Tu^!O:pTnd`n0?MFe3U4_-I;_i@>>uomI(Sm74TK$R[u"_s.K_
%&$%k#U\um2UC4GOHC!_M^QY@mmGBbQ^R2H;L6q1B&\dbgA(BJQ25QS<=u3iGN3&FRDL-(FTZ]ejb0"#]A6Z7YE.doMe]l1QX!<PQ
%_]):;H8ll,Yr?;R:[q7fmfWS<V)WeZ;!/:o00j[o.$Q\Hn^.UXLL\>915,Mfk@PhE,C?;F;fC"cV#Aa2j)FAlE*q>#Sk#kWrMWVt
%Si<aHTl>7HCm`+;Wp'!G)80AYs6TO4rTG2XA)Ua,n-_#;mTYE`cf*Wrcf+nqrBcPmNIMJ06?=K'C*rt3HA&^Qo5Eq,)Jt=jl28dh
%6AL]L^DCjsFAkB</c#<PmMfDJbB&.\E4%]u5NhY$I/]Y^hbcReCNIi4oD*[SZr+k;b,i3@5//\;olNQFO=C!Q4\X`(WCIVoWqh$;
%j)8iH]!42mcT)q!.4Y*a1'O_:4_5AsXB6$QcC;$b0DCm_WoB1GoW9T_?(I;4P)0-49nBD2facYA&o7Ii4:BhLg30aE1Yu4uC0J1@
%c::h$bk@=3Jt2L<>?$>RA8qb7:d,=?dJ@R'CVHd?@,lZAbW,MZFb+f)!\o$7(&C))5e^PG?_+j$gHamZOM))Hc#"SE)p$k?O6/?^
%h^*(q[t2b3UH*-ILQ1H#d@l8Rju/;gCBM*b<JHkXnf@=*c)4[_iC?l`MgB%G85VVf[\?VBoMJd2nlh!Z@.G>$moKe?,--*j+Vj3P
%aP4]ae"K@<@">Z<F]euBE2.BJn7MkUbQ1ps;")kp<[H'thImY72ki8hLqI_rR>Y7r#ue@7V+!ZW%Pde4=Y.!t`5,a%YJBu2U<":Q
%eH@!N.ZIE[(^8Q1^$epfSMYdUck1V+m^tI$\"fA'd.na-gc9V@l[^pWE"98Mhe_Wn0QC</'5f%l?=A#mU)VOhMt97mKh6aaSWBZ'
%)5@[j"`SD,T_)_kX3hMG)MN,qcTX!^;4Vri=\dP&V^u;_Noekq8^l"7b-J$Tdnm"9H6=7$j(gaC11;>VJL!(gq*RG0/m'l$6fOmE
%7^WMh][a9KRRYnDh&7Y.NXTiKX`RZ&[:7KR*Ic/f]'0$/@,KU;nGbJ"3#'qIp!B,s[:#,1ANRc:O9Q!/0j:Vt73\>(pQ/*6CDHh1
%R&4g_GbJ,lIZq(q%A2Ti<"5>DMWN@&Ek[,F-Bp?FU<f-0E!6h:3MUE9Tb037IZR!C;CZ/Ih"^EY.#$7/O*n0$!P!j*)iLpnFdhlV
%%REX^o9/^R<)AksVL`+JY:>kSS$r>n(_]7hQlJ!OZVY!;eSqJ5Prk)%WtXpS[_>+ZT17!cHQB%dP\"9?WU!9\c?*?p79GI8KAa3L
%09-[EQYKa"#a!^J9M)F0-p=`V`G71Y>*B(A5+28a&LH&Jb&:"PjaCF7>D>#:;40L<`tmUoHXM-&KX>O\i?jcb0$;EVOLdhnQNT+G
%K^67mMU%+#g9ok-Xk,TJe@W0P[@VF!UBrm!*f8^QCAW2Q&H7Z'KVk=`fr]r03%p/gSC:er%3d@dF;BJV=)8bN+i*dShg,`)P]Jl=
%gh`PRI>m9X%`2)F69V7<U#+E')d^hSX>FF@dfmZRcfpfE5<HmfYW4_AZ^fP8HD];PM;]_8GGlAWY3Y@=h;WlU<#h[8#;nKnV:Q/>
%"kk<Seq6#5<j2@p`ViC2*7u4%Djb3sB>*UUJ_5%D+"b>o7K#Y,rQeA>=i^e#LK$HA)ct2Xb9<_!P7gL:6`Rm:&X^"*=qJ\_e-nuJ
%N$!SE=q<&d%k02GCI;>b4^=m'Yt:t,>WJUcV2rV%I03[`WN:n;<PIRRap1<br6bHCMQjZ\H:ISZJmLgj.'Q.]ak*D97ci)+JVTF%
%bgcLW`)?1nEhR,F7lI3DpI=%JjbPZl,pd!aXrYd@Fjn3]o;)tl*)ZO(2,_k`Ym>K0nl"n7+(*6517%DuN5Z>V7o]I?WQnE@biOZ'
%9?b"_39gm(Vn9+eE^X?Hp7I1OC./MWc#mQj^)6LMds#1r.]PL=;gelj9NE*=Je`>N08ad<A]pllm<B\0:qq-:]!V?OE3UU5;qN!S
%s2V[H7hi%AkPE`g46^d>*>PAT*@@Q1:8as@Vj8B#*\!hpg7!=Q@DfLL"M^IsaEX(mLR$D/1(7')"1ROb'r*_&8)!M0o$)X5Y0WUS
%1Zua$GnF]7Mja0Gk.I'A04rLfRIanM]\*8&jNMm(F'ebf3A58$C@?_tV")*p)91YP/)i9Q9"7=FhrL)b2<&R0QB65idV0@\FC1'2
%J`7iZ`fQB-mkV[bXC(/]iNgVJE7=cGDRlBY1>HqJH]Q,)LS)ShLgR6>LHm/<Rqr]22js!eB=<G$_!0bJo4GF`\]fISF.^Y28,%BV
%AaY2L;IAQMLam6K.W("km<P,3)si6;iM:fOF-!q"8$Kb%b^Bl9_.oBbg4YJ?q7.Hegp]CIb1ph?.'6MO5<qKuIEUEjQ882#5cHDX
%*s@fdH+"5ijus%th,`[p:+^N/cf)bFPN!$K*EUG/]+)$@mY4hA.\S+>8:8a=Y"+Y`4ENHDj:3u/ZsP-I@8i#0S4hZ#')139*M==M
%M8bMEdIc#))Ee*C]d\3A>f<V+_M1nK=?We/A!ad#>`P`p!GEPTfdn2]"V\rR*lW?`Ii[DlIlKHW<lH-4(U>bnE,0ZKh"HHt)q\^l
%YII"@]!9nA;RCqCGVHO0`2e!_q2BD7`M:uSU9?>QM"5M._ePF!@Kd3Ji>g3j\i$a[Vo+naqRoCTs+6^iQ"5@=kcD`sJNFsuP])^$
%P@4%I'o@$<4M:F2U[\an&?>,GhZ&JAHQ-%(VFFaqnj_UQXG_l.*qLAEg<6^F>^o`c=[e/XmmX4'L>`N^4ac$5*o;4\PAOQmDg;Np
%d>%6E@TpokZhb(ZhHLX(mlc+V7p#IA<X,ZPE%CZd8#E2/_qN:C"^moE?@.eDlXIBj#>6hT^8S+@.8O1^LK2'Kom:W0%0H:i<gTU$
%i!9j:"#^(hG\+p4](_-*"l*mX;3GBg4IFWAFe=SZgLg49Z@Y\%abj7?,-J-6[RhnW`6;,:5r0FKb3s1*ZEj)\6IpUV;JF#YYKEJ[
%ZeAW:MYK;T>;!>b*QFqbB]>SDVVJ^L7!1lqrOm1V2!#E:5fLdr1Kp#1"%D7Ig'4NQaIk@M_uYm=Yo2oTAtYYP_jCpJ9TlVG4PDRL
%I`6Nj`ua%>9ma;T)oOooee_2s*n&bJ+Lcc_^]sN"ESbSk\/C2F4MOJI_:3?9YL%T^cbCeJXd0d@b&ig2keE2(Cr@b*P'[AU5?Y=]
%,,88jaQS:a]m%k%KL,nd^#FRmVhTNGL@P1d;)#*iJ+-nrXGM`,m[qX2/tRTg_]Vr(Tj>3iS:J__]Sn:f81W]Y]mGb*lKMr9)S%<j
%JQ_eRC*0hCDdMd_2=^1ej+m=nCVtq-Bb4=;lKlYeb"\=JUNh%Pri&UTN77&g[>SMU2B1T1Ze1SPZE^pf1>FKgI?F%<(bY0kb%o8E
%bK(T@EML&9_l^"kPta&:mjrf)n$5naKY#_,T%lg*b')K\n)5JCQk`sC&#OAa'8ot/JSoVPf[Y0[Fjml12qaE_s4;2P4SkYYC]#g<
%o?4IakKCjE3W3rPMOS\NEt3WDTe@Hq%Xj(hS"\hRW43]pDD=MtbtrBbSk#EHioWB"Y+ajpFKm's[OdN*kXjgO>/6jO#&q[B^FBK"
%&]QuDNF8:c_gcIjE_E\?O@.%J7+V?sXIQW^?dF"B.rc>?1saN]UHM^+4&'q[1VCOY\:,H[CnLbSdrG9`Nc)BLn7u4:U.-HKPC526
%RlHiDQ53n,C-&'YKuk>50nkrTj`AZ_1>GnA5Oqq`ke!Oi"a+@P@'APq8?*q*N%)gs!9gJ`8T!@@Z`g;^7&0qh,d_sRROlS$9,(#\
%T9J:*!?jlu@+d:A_2a4"moAJ*SAhEoE67>aF@K]=<p/ca;g%Yoaa5]g!9Icj3?*qTI_\J$ceniA(+KG/beU=M[p4mY8WsLtp;B$7
%9t3!>T.Yi%^5S5HA`Q4=fm9XY`XWhLSC]mdTrb"7V%DF-_$=*KIC0'"O/#nkNkX.2DY(>9i0RCdSH+SG(i>7Y(D/<g\t2$l;2i0#
%95N^:"r`X;8Om29Qd9RA9E@;5=VZs(Xib&nLKLd8$7\n2qE`iIESBhr3T3'2Hp?V23ADie-6uq#gF&%Z]?!+m%-+d3*C']W;p)Hd
%+&0:#G#5Vhf++9s"?c!AijC]&Hpp.M=,@+VCK+<]ot=lG]\;[l!#:2GXPIJfOKeF2IE:;IV(rDR[oE_:T?Y>@U-Fq>0WXR#D-)s@
%G,ngV0c!nM`^1L>!0f-MDBS%</G,ON<sRVOG$_72fKohpNK`8)UU:Y6$4:%"$=k9i$'$;i7Pq.7>u5a[$<Q)bb$j`g4=4qrK11[S
%aQ]ug@F+7=G&!t]]H``6BY(:FM"79V@oYpqa\r/'M,r;p-+/O9[+;>b7k[#e"#VjV^@$k"C&r`p$88mR+hV;dVmEFM-sJ@U=$77u
%*m2KL1mPCM<K;cq[jiB4>*W_HCI;<V[#C9,#f*Ain%1>j182V132_/dP`MVf?<mIbB7/j#c^aNn1HpjRj5W%?9pR?M0]V1PB7*>=
%fD]E1jI<;p9r<^0RLFtm.35<tI(K4;Phtudhhb8mUu.^4BsqQ"gnq5G3:XW)ppAL+5&kVpA9uU]:FrK3/V$lRKiOhN9V:h5,%CkQ
%]:j'ser5[@7).npO![)W#p7bX:AR!0o@jpBIT+*2bR'n%iU],XHj7iI_h?@/SSsb^6,:!5:\ZcaKTC&`2)u:5XZ(%)):s5=^<<=*
%&('>5E,5Fk>7s,JI\u@aq3_e0^;jh-YMF;+[K*W)'o2UVRr3FlbO(DZM-[S3V`,oF7mQ`$W%RM6gCM-dXr4SK29BOfHjE?5PJ=G:
%>S;%&`L\.WLDJu:CpSPca1eZ4%9`(&$1osYdOD^9;[(Lj.u23'I[J_>q*+$V&HJ"SI4J/U-m</.0\N[(X2:"(>K*g\>$J*$(hFns
%V5>\t[7Qi%V4Xu.,ae#?!HP[fngu,SDKPEa!^R`?bJbMZ)#D?%ht^s.SL%%G?=.fH`$D`fB,%94`T&p@K"5JV:-Z\ho=jofolA"8
%Q&_WpB!(TCrEW_<g[p/?"CY2iNh)Nc]'Q$$5J*AN"J\be_2d`b;LTeFl'YR?FBL'-#!s<)Q//)L4-5in5&$Geb)rdpF!)SH$9\^5
%gX"%^LWDFnX>tg7f3j#CS0gb<[bC=9^K>!W<T3GlH8/mPXXh=R0j:CfENsI;XN]?;>+S+)!It.Ko?3%FY>-aRo?0@HWcCS!L]?r+
%K?rHEhidolQY5dXIt."+J*.Vmo"g*R]Y+/N\N%0Hp\+:>Zf?u(+.$&e0<SV6YPrXu5;)#(T-'\rSS%Qnk4Rtq?M[A;m7.PnG]Wh"
%nJ-G/O4LMZ>!ChRr/84>Du.TNiimYPpW1,Ele1h$XZuUCo%hFR[==Kh]R=(7Y+P6BMu8@^UYgRpmd0d,09kSQO8cM2VGipJ_g"N*
%oAfaT^U\%jCmd;2lf"2hhsmiDJ+EX:K=SO<DVk!\DY<NPs(D,rjoHPFpi*;hH$39m5-<lF4lhec0A3h<ob1I,hd'mRI?mSTs-=Dk
%f@Rd//`/bfi1p<rEV[c]rrrr2iR-?Ka\V88b4#3'qG3$150ns(1tkHlA6&X#Z<mCTF,`$Sp%0eR2?*IJlf6HPKj5h]5Des^C];!B
%B4#$+Tf<#<kkOQ0am`/o(GF[:?>mG>CZ!*$?QNQ[DgUW2='^7:bo`B9BCPL'LDTMB>k[OZ1b65"jE'IAQXtV1gorsX++83VIE$cF
%]_0qo='o<A?2c*VA9b]J%s<0reahcVlh-V>f-!TGiknPfo+O)Ir8qpC$%94/Q%(LC&<#;_p<djX/O!KgW%XNVfeqk_T3V;mQ9YmN
%61WP]59_bOD_B5JalV"S=V&8Qs2h1^2p7,GDnie!s+::En&JM-Zkd1;1*=(Yo,%1Z<k&N412j;^*<-R`Rt>Vm5nr>.V2^!"mZVM@
%gO+ihPO'suT>rrsUS37"50\0GnKP0N%gOc-2]^.%?9@ULI%@`bcAmC>^M]I3nVG@VQ1):B=8^\Hj"424IQbF>`sXN"`H_9]mXq:@
%I)fIbcAcW2,Mo-oB$IZD2U(p8D#%Inqn$Zoq3smKS*@qdgj/("=d#)9SdkN$P5HJJYjF;u-qDrqK7H#*I+SC;e!^^@^@/NT2h14A
%<L.")HM)H,%<Ln/\q6/r`4p0@MPD-_lL<phi6*T75<D$k:e?jcgEOC[p%J5XqJj&Orqk^OboLuC6(J/P%t#!@MG]<3gpE"1W;p,D
%=gR"`Ak+_;msZ(tISX,T46sA7^W$o#ICoF#cc_5"?G;ZCM&Z1^o54_@\.hRI_,e/kfUDaCH-N6k^o%aC*6`;KQeeg'G$Z!r^+dd'
%MN<*DlQT"Ds1R-<#Pj).qu4CGZfV4;T0!#70E5:K]Yhq65OoR/@NOue4T==1o)$1M]t`NdhoAU)_m4YckMeFSEUJ1oR`RY"XH>_I
%CU0#MrT@SCrR^&RHYr6/W.]Z8M9$a;M-\`L2=7ISn70)57A1NQNJ80IkA3b05/9ki!O^J8cd(C<T3`K^Ye0\kJ)247YL8kLZu_1L
%HU',>^0sDf7alPG-)-J8XV,H;odr%Yl!fioFP^l%*VVQ>HhWV<gNmMcT+_8MZ*FFB]f",`j#T*jFEo/jnNg46+"II5KBqY2llSpK
%0;aJ3B.Z<&?Onjq@uR%tYCH1u;:HRHPrC<.X"jH:pu#<-qaE9\@dfrpXFKGIqa&McCZZK,DiOU@PAS+-(.W$+QAa(UYUT9'k4:[G
%DpE\YRk`%Js/8\P%ZQf7hcuZ,3Wp!lZu+H'HCFadNIFQN?bY8)-cEKf@6p"bc?4l/'Z@<8=_$,?Kl@Dd/=76j<,A0BpIM/-6jLAg
%L>5cTcK*/(M2%!6m)][E]4!o$,FOVFq32_*MrZ4N$#t5F1nO1_BRFUJNXD_uXn*-rKh!mCD&;FefsXOb5"sNKE1WYTs.@"!ghJ0-
%eqMH==_mF+iB\U/Al\p6AF\N'KHrf*,U(Vmh*8Vhs5JmVP2XCQSsb"Qmr`6EIRf'sdY<%aABD,EL$d<\Kn5s-dJqMZpbr6:s2J=Q
%[&[<fqR5KhOaDZ:Wfkum(kqkk6iACcks#_&FoNh7;#c^r+o'AuQN$q83<&s<L&VQ7cj'I[@tjpu:A@Hs;Z+nDr)_$6rh!EiO^!'%
%oKoJ0^@$1N%kFiCC<n%[mef<aSng+bqY^!"qPSoA&(bVfjW&WCS_=0]i-T.J>,gs+g@s4Pp'T>j]3U_Vm+q]0R87/_?ST9dia"P@
%"1pMe`S^^(=8Za0-;U6`m;hjlT=Wu7pZZue-c45Q!lb%MpKAT=VM>Z(V="n\_E/^H^%1]6dO9.aD1,`n<q6/\o71kG+7qT7BY)nK
%QYYEC^)^=L!*mPlr81dq[sdE56EbYG\EmB4p^MVK=8(.q*^PX#HUlhVP,ph(XH-uBf7(@$=K]%>h+)8ri.X==!DSAOm-mf_#&H(H
%>i0!t`)hLVXaj+uRV+E=kOJW;22PQ6X%>5i8gcd:[uH[e8qE/#Q&OX'>2IeC"[MqZF]m%6jMblnrn&83_PgtW&:6;!"Os]WqT_rn
%+kJ?"3.'o:Q<\E?f\Gmg#<O3bC,3.#3lL%g0AWO_BqB(4/3\<;JH,ngN(P:1?@B"MbgFF+mNc)=Dj%7>q!@#Fg*)K>c2r902W!P(
%oBnT@m1LL/Sb\Wp-Cdj-@;gbm.3;!*E#h"G9kSF6R>1_r;t5<[4*.WQ/oRB:47OH?^)'ManV,KqZZ1Q9'S#Mnk**S"\GQ/t%3p_h
%'<mb+;<V2T9XX3/7N4j%Abfc$CHMu?%5C$-p'J6,Y$#.'HuB'8(3?2p;$(JI0oR=rC&7Jt/EiLD;L:P];P'^j@9`=eZ\7Ggk/f<+
%jD-dpQOoq+G]k-'6M4(t`-Rif>gME?d4+j<U!-B"kLfp?/Bt@Y9d&^7W.?!ACn]`"'<N6%AGjTRT!@?9m-%!P$PgrF4h4mCS[RA+
%=$VsYd1'['U^nKdll`$A<dt6ErAlsOeL,).\u47Kc1:,hm5^RQ?E7fTYKqP-L%qGg:KSHTF.Ah`"kj>dqL(j_bNhGk%hd6E7JirL
%6;Gu9K&64]X[8TnL%p&%e8d]V(siqe5T83b?Ekf.dQQK$HA[%BGb&.t4'(flJ@9Xre3#e5OOXsrV5!]T.U3XQ0iGhS!H!E]+?^4S
%$eAFkHsc"O#-:/\Jh.1G_X$G_7*&KJ6t0RjC?^7&_;<RcTuX#9lI=u-QL0R\_Y\OW0VG*`mH;YqFX9dQHJ8(=&r.9BMcI\7D3QCu
%&+J^V0T"<>i(F`70qH_?<g-X4fV_qi]X!U1,$su.YTE$CoGNIblebF)B33,5d<:9CMDWg`!"U_K_@[[JY2KptN9G'LNo."qE;<l]
%]4W0*F4]'lDA^N9L;)&93oV(niY+NJls%O^*O'MTD-RqQXMd7_<F1b_*6c5o3Y74/W,TE5(XH?+N]%GLdrmki@bmq\M>NZYa^aAq
%.Z:`c2o+Oa:%eEC2_kF%J=.XQ!&KC_%f/6;b0n_1a"L4hY-qGWE35QFic[2Q3?^nW\EPrfN*3HOhm]XYG(C-Y%YOZ?OKN0LX<G4P
%^DlP4SGpuh$)!9nDfZNbpN3NQqjs`M]LnKTTk?ml/RZYtbW^9GJZo-"e!]H'6.g%_>(P/g=?09)k%i<)&HZDE7Q@alRh%_=?>a;Y
%NTh<7?>R7M[&&\i54O&FcgoaAP.;&C@<GrC4skgA143]K4$2pa,Cht6io*=^X<h:h74@ZK07B>=/_TKVcrp=Z*+CF/O*b*tBl1+k
%i\prO+5e7$P5EXXm4kJYU']S:crm*K9ujoe/o0`Ce4_KXOo*@aT^Y-Qs%s8HYjjt;q*M&CFAs@)&9&ps;%WDEh0o(F5du*2-95fs
%6bCT0mBQS+L[U[)=+BLI6FZK7ad3U'#aNtRBcP*IL8oa3;p';$GMoU/P+7HIkO1W'RM(D=J1LIi[0f'`V-gcnbPFIa[O<1]^mir2
%36l"4MkCm152PEks7CX.h2lP(pjqN\'DXC\=7OJjOSCO$HN1g'X'$>@Y'$?`$ajU/pIW=X9_'d;g&*r,[1[=MXSb"b=Re&o9MZT=
%8@R[ef9$2BpObn"=\Noo\b@2?^)^6_m&A@H4o$:E_H6e&[_k_noj(d$(hkUW-`[($TOI?GpZ@3[M?E@dQ<+n7T#R78fm7ei,k!ob
%I;1KFD#8?N!>+!7<h)'"M"MGG:V=#pI=gm:&[tj`>A35!qR>X["CB/1Lieekm%8;DR?IoO)86's2:`PT.:@"jk<T]c,E9WC>oZXs
%P@6YJ$_s9us1dl_0p(mDde%JHUrc:d^a#AM[3L-N0iEH'\5i!O,^k1^Y;Z\Mjob#l$%XBW7(@lubAKe<]k^*^]pp^akfAcFIIIBR
%PSd:":2HR8YAjD`Sn%NV'Eaq&j>leY6ke?KpS'b*(s\b#9@6e:eK,!=I8CFDiOtVns8"dO_:sFR`hI"Fs5Mdu#(J$(?2Ykp.6!ah
%Igg1Z+*dFkVg9<IGOhP-.eAG_:9.:RY6pg9[//il]A?p^[ICf8i98Y*muG'XiH]aJ>\FnFVLEg:S=.A59/>7mXV[tO>!#r%(\mZO
%&OG:/2\6p>_V+Y6:;'X+jQhMnaa_$*CXcb#cu(cmpU#b?9mUlf-\_TODZ3A*oX-25<N;m-\b>GSK@/<GVql^=i8f-bFo,C:fimU?
%;!r9!>6.SXdhlH!5&#i,WosnE6W)$ps%Q]tX4PKYfqiGspeiaCBUb`n1Ok5bhH+G<R]uaS72!odQJ4L6RNF)f^\PX..K9!7Z+o.[
%T5@"#YLrc8AGkMas0"5qT2uBk^\qChT^?*=iN^[;Vq%rbrWUg/J!<Cb>6X*E?pdKqJ'P%n*HFL\qQ%m(J!VRm*rb[Gi:$[HR_4@+
%2?0j?He\58-*k*`r'"E[;q\f]p%sB&Rf4W*\"ib3O4:WHr9)CnqCf.Ud+4'#[DQpLp%sf9p%r*,=cSQ%QK*D*XFF2AI%g<3V4!X!
%M</ke<V#Ccmd"^V)K<31Rh]s[J$d.$+8X02$J(MuohMhq:8@OOYCS1Ef_m,YnQKfH8d)X&%?h+ujiNIG9[)Qf4P/1g*l$J_QR\QX
%Tn@Bd?L=+pV/Af&Fk[u&#%\''FW,Yj\QuA'RmVPI1+qhc\UM!E];iOc%W.P::I>A@<kI.gr4s+DIH-\b>\i8[h+kT0Bn,l=mIbp<
%iKjjg'l&f#_IIk)YMSJ",0BZ=(X,:G?OO!&BJ*S;djUG)h`VmX=KaUlWV^M*>)>XG7nTT,W$L6/CGkDEhBA]GLJj[d]t;@!pQY-Y
%]jIfGLC2<"ID*uY%FNPqk)_au-qPP!m.5/MIbNElC3H?_htHppRbmd@n(S`P:Y5TQiB&'=#46#renPmi9T$S`09ss^X1(b#5Fl3n
%7Jo:?;QCU@lGP`Ec$K-6^R\ikEr,VALDkjN0mKbig8Pkaq!O?N/&\$5G+!Y,F-u(&h;Hj8/^<1q6V$6f[YJn"9"T%LWE.`8&P!Ja
%mERTKktIfE>G62l>Q1.&HeJj(Q=(VDRe9.M=Y=5Gc"9bW]2FosQHQ,"HK1eTYh$NA%flP(^[Af\BXM$Y02rJ)ND?l=YR>kT_gqDE
%m.KbTd1t"Sqjdd(41&#eX^(g4K<1c%Y%")7`33_\[CEr^opH*#Z\F7sl<9lU)n1jgkBaSU?[llP]5>%B`Bk:XCnPp#M^(3A(ckQ_
%[[432<hG\*8Zh/;eS92:-fl[5Mn].?CK01H$ak.hLj#WAqOle;qp?b9q*glkkOt"e9*QBL?17dbU*"K<BoaUj..`]ur)1ck:+Z.c
%p1M%$Am@+,&"iU8]JIpfB8>2spqQf4\_053TW:-NI\Nb?M'hQ/g#$I&&lrJ[6EU"j-@>J\Z!(l2%oQHOs!5;O8-eZ6s3N3=1D'3/
%SGYtiN]Yc8_q+,OUsB+.h^cm!f@MZegS@?aMRI1).AM"9ZQE=AgDM2^YSpeP0%<M5Cjp(Hjf'gc"a/-eZ!-tR;@\Xs&*<Kps869q
%fM>!6drr;%*-k6r*+6c+i5*20%a#Bb-j1q%!U;,imh$!>o-K83d+_\!XqAIe!JP'4g?rW>:jZfN<pt&.:o,MRSD$<+pFfE]3d`S2
%rGmsAr6h6FR(.jCN4BUaU@b?],i*mYd-nJ-H;DdjcXE5gY2:Vp/+(pijF31`\uaH>^@D!pP.6;HWBWKj`&F.M$I^Bi?OP,Feh?FX
%&#M/8IA^'lk%&>\GF0I:<$_)3$QT2C'eQnS=#Kr(M9WbRbGU!%](\+s**jcE&!d.a5OPc/GPrY!Mjn7L9t+)N!(6Cjj$-XM]=VXH
%D_(2)IA-K(r\mAZ<,)s:Y=:0'98Rud1%F!7SY6LpV=@N'rp`^h<j>LRrr/)^T>"\nl)@d#I<E\G`4lc4"c_*2"1AK8PS6i"oEM"!
%D,B]]"m;q@pVsoHZHH.V<I([Z"2Z-4V;?l6q6jk0d7c78s/Jr(RHXMskqAB-BSibbVRs#!]pI`k0,k_n2/;!&ldko1!\oTs0Dc".
%Wf"rXYIFu;o2Omsi-cso/9?s(rhr\PL?h.n+3a.7`UluB-VDoYo:b#RQG2D5hgRb<:O2`-E#IES51K,mZL9:t=C8FtL%Oo&+8Q:6
%q]F.HNhg"iIQ/a`.7qY.=3!e46t)QSJS-?^+:LFQFs&R?Z1b"pPugkJmo\mcQ7;FO7[Cd=DoDY*6DIneIbjKDbs^_l.mNT?!5DsE
%<p.3ihTP/%dqVsZ9kIN\2ntSP1cOf:!taqENZ4h`4)L4t3n:rN]*2\3Vrde90"7;(Y*52ZmY@G;gK1RZbD`S"nE8tE$JY2b2bE%l
%FY4-Zs#uZadbZlH)$^Su2c4O!k^:WH"-<kQiI:A`oB0@>J.FikJ)<SQim2.&3d\&(^I'^4a\`H>U!7.9T3IH07-+!kgJ?r*Ofin&
%_4m4K=.J1"?h*g`aF6jlE5QZYQbfL52<uOScZfn[pB-%D`op?W+*Z3c2-Y\Om#-%@>-6YjW*f:i>=B$LlRP@G/N^B"GARO!gdh8?
%cN`X%#'R?G&!Z!rq=,EunQd5b,5'>oW("Bsl?q3X=T>NmX8LKX2Iuj%ffa(='(E&tqm"sHgS[B;gams(A(?;A>DNbkIq5fu"bX'!
%*qZ4>c!O^E%UXV5o^O00ntUpD`dJCZqm`?<*5?2kXaC:0W<GV8Ku(RCVeY:Xfs%rIKl4[C;1_csHDiJ$Bmo-QpB;TBUEp0mHk\3t
%%i7dXiMZ2IC&LK1k.@S.8"87#o[R[jXT-R-JIO3<^K+KN(\MEY^3nUHP9=qQ<NbpH<e&r4ohoLc5>ce'JnOqHp$Fm#nFk1JO<6CG
%pZplLpN+5JP'AseY@:fjI[e#(E7Bm'm>8q%l;'^A/((&f%Q!G:JY/ck/b,;Q`aZ2TXqU5?Ui0c+91s/GDKd[;a;;jban4Q0p;iQ3
%YS2pP:T`9Z[s"u2^Uqo(/,AS55D%__c;T1>FfY&Q++M4<;g6nsCjKPM(7X(rVJZKc/%>CGmsd/fbZSZJYM8\X[#%#.;Yp6p8fu(H
%l(?pB28)moPo5QGTn0t!Er@mb+!r?0ceMfGI04sOn=ODR=BNS8]@-K<U,\2uMu73;fQS;,@<*3U0;a?7k6Li?Q,K:b1sG5Q+uM`;
%9V^/-_<T[rN_?!VG49`/;e[8siD6&FT1p<L[ckW1c/7Y>jlRN]4N=#"\\"]I8UMr55G=]mT'i*GVlV5@\LIQdf-$]2\5*$s/l^j[
%GCO-4k81Iq<5RHpSp&S(Z[8[H\(4YFQ_&A6^F-4+pS7>HfnYElZ0Z)C^#<8WrH,#c5(Rrn,kg;0fA19k4*io*h4<1'J,D%X(i?E(
%[8D3K8$h@p:+eGoSpPchMFV;GO5p98TQ,Y*&*=.q?S7#ap[)XXG%Y>&HQBk4+s&-."tat,o7lH^Q)O6B4H=+LQG-KdkY5/8e"l^K
%QNQts-Xj3UcS#c+#GpPPFDc!7iu(Q<*oCkpfqk$GDS1EV]pcZ5GNkIid`fkgGpV:e;8$jk_/JPJD[T1t05miAqI:nfQs\`NC9r/J
%W?g*Xj14P/Hf]+TW8kFjr/Pef42jG`R![N=N5_.;9l5'Q[P=C8S6;h&.ZYn2p<^!E98RJq[B+Ec&,Gk?r6FoWgu^uZe$#,3n[nU5
%0<DY6G'!E/9II5n54Uu%q&E2VLAR=jp!W[>FdK86<8DZH+1p-NY4^_MR`0D2rXrO):kn^'B^DjIlECqKMPkO@_eR>3cGip@'DJJ6
%2DL_MR([OHl0[l7pBPJ/oFGQr5@Pj9p2"Pu0Oek.[.YJtAPYHuhI\)M>Ma%'VShQ3VP^PP@oGI%DmAR&E132#:7%Cdl(,K,?R,Bg
%H=6]F:1pWtQ.FGpJ?NS$jK\7-nG)[(Ch+m)',u)RpTZGI;EUQ+ocXJPo@@YmEk-K6S&uc&A(-nTM-,.T3$"JK\N,Mk?KIbgM>Pu*
%f\Bs_)7*ZDp1&8=QXfGSHSjl.N`F:F?egI:R?<u+[VqY??tJ)PKm@Sg2Lc^YM(KG;-dQ;EnP^H4>2%Vg/Y=:1@k0Du*_XgTB4I@Q
%OkWuU]K$nRn%GjAf#AV0Z1Zqm88N@UPDX2l`bo9JbOMRahRHaMmGFfkZ,?6O06V0&*QLo9cbm#oqFiMbELV?m0NVo-3d.i:]o(Vd
%q(o;QPCpbTl)ZTXHRLI_`Lc@KG3ieq>)U)>T>/A1]8>(j>Oh>;et-m4L1BP'cL=@L]feKL*Z6&kHoa>1Nb=Z[iRuf7h6=:m=;Z5K
%m8k3<fRKLM(_1^9-ANE"CKJDH'8=EaQ0.nsE9?ECE&`?Rkmah'Y?-LgY1@cOG>$]In3M332LO:D3>t)jW2$CmFa3]T0QoO*s%5XC
%/?CqNQ"0+;Fej"?gt3"c0hcrR=H*_22Fg9W^#c/SWQP2(aR#U()mS5j@)O.2j!2BUTf'-#\*u)WEq"H2P24gD*EbJ2nfqA:0?K?i
%X*npIkW(XbE]u690le9mL.;StL#tr%naL\^g"CbM@7Fu:RAZ1uGj99jG^&slFCHTg3#]P7I2]L/2P3M<f^\9@G]imA]!U.HNFoKi
%`9<YZRN:4ETDG;f1Tfa%BjuO6oP3f)DmV2_E]O!#^%jM]EnBT82VP3gZ.MAj8]-LHTC$HS`B+`7A+iZk2Q#3-pt4TOpsN9uH8lmK
%IG0/hgYPV!N?.<&b1QN/qeYVrqXQOFHEO3OkM*V^Z,T0$FZ`\SGiKGjV>]r&phOBpe&)RRo6^2mpduhi8]-LjWft]tmB`/5psJk1
%Er9BromXP]<P7kBZ@=l@bFU'#40qk`'B?4DfnnDQgt@@)Eh/S"fO).W88m(mM=o]Bd_t"mddk=jA[4%1ds9Z=GYmSnM:\m&gPPXI
%atg?_`)8?KR<T"`-<7#,-^2kBHSUpp31J\M*BACE3ujm*\geCA9,ikma_KO-PO8#)nC0k;>b%8+`:p/$f%/:!nkCVh[JH2+:$j65
%8lK@ARFA.IH>IZ&Z?1b.VV\>(5<Y<\Mbb_?01VniFnTZuH-L](??8W[e,/1u_Xr,eHo"L4l"^'kEd]t(Y2<R*VktN=j%`FcNA%@B
%hoE'IejFgt-<lJ%DP&fHL#LTbr-:@p`7r07RYI5u]H'Si3;N6<RDmkUj\2hBYKZ>K>9bref6cpZn]oD(]\^Dnc48Hd?=mijQK#5s
%IPs'Qg3GcNh5ifiB2AFUGP:IiFF3^-EUYg>H+^?onatpd6B0l('.Zif%$T=+R6436Cb:Yo$Cf(OM<[R43]F_10$_]_*8JjDV%J20
%doj;NgRW8pEu2k92flotrnQ8bc+PtpR9HuQj,k-nfe;EgNV;4bFn1n_[I3cphl>)>p=T6&((Fd.4&^3Dno3m9?8#F8p2OA"p:[#r
%gU4H&'5-[6P&d)R7,1qFkGlg>k2tGZRng%GV=L='hR5m#go9XKbuNWMSX]0<NnljhhJf[9d1uD$lS7m`:NnB/`g^aVia-Y&O*_i/
%nR:m&HF3()cUV2Gb8kHqnX&LK+.hb+Il3E-o8i'XVu5Q@UZK889PZLKSR,?JICH*El+'0(FDuK*m]2OOobO-[lffoql#<YeLP8sG
%ff[_29?rGJ2=&`&<J%L/hE;;`f@CkVAgZmK(J>,t6"P-!3?6^XEC-S9\JM-`:E&2@mV+Dg/!#kS#E(D0e!9P'q>'r-N7?JMlMPr'
%WA.a?8nMe)L!e.[IDO+.jqk>VM:TO@p3LMJFLj33cn8FuMq6sF^UTGPXt9!(("X60_:@&pgV_!9Ed%7@P?aP/9dOuj:W;D^alm?B
%Z/N;f1TR"iV.B<!H>.#5H@>&O@N-l&e>P4DQY0qe0?[!Mc0OKI`n'!e+[;/rDDhj\b1uFMge(2N'.\j%A$M<IlUrH;]=EA^\V84!
%.T\Z\9V"A=5,=bt$;]oC`L#b0\DMR+D`4\/qBim:P&<+7E>g0ffU6n=.;*EFF4bAKA01/?:U6a.SPiMWm^08=]88rLqXc5%D;8tM
%k2s[M._0XT4dA+CMPY?Yl.>P)`9D=n^G,Brk'+s$a8,VgG&&rn5F#LHB7l](or/r?Z[+c8gg5De:Gpb*E&4hdh.sa+SNZ)#em>8T
%O6\SlRnN(HWN#(Rj3(nDrAe,"DG52CSW0K:8:9IekimERl(ku!3OsLig.Yi.S8972$R$tF8pb>/BV',gD]RWLh)_&s9lE1c>X!(%
%fs-b.V+NeTI<8_6[\)"VZ(8CRI+h/kguZh\5I.We\p0Lr9l/u/G-a,nZ[4^fRG!#3]hIcQ:PFqEp#W7"hJN.e]cXk8kj/QMqXFK%
%3&sIGlp&G=eA:5$Soq:(53mib?uGeuFm"#0E3;<PI(24]E.<,=44Q<J%:@)8JtqGHUV6KFh4r$a_u9+InRU]?ICV@fHuZ[%J)!.i
%GWG;4P4m#ke'ds3_g(VFF=M_&d4hJta+r^(MdUAr[/$qj4&]qHcY'l[ab@(AQgNdXr,,K+B<RBbc`]!mi$)4#4C$)pD(T*7c-4cm
%??9%LQhEd^qJt&5]X]TLgb2r--&]%/bZNudlKZ*gF<.tgN70K4$TmtSf>mcD>M&PCWkS!1C?/tcG4BNMdF6.FM<!XOmJ<W\Di87(
%n[g5g]lTO>fe7P.QgJ6jFT)3=Ye5!s>.@\f4"PL)p\+%l%efVa:J*!]pW_t"K4;(65+uDBLFrD/=Pm@:Pgmq;F(rC&2+t,#QW%I6
%_t(utabt8ORTVUpE7`s(&%e`PSVNPe(&-*uh"A_D_suL%QW?9CjR1V8T(_;Q:S+R>c"=r,RTcZV+4":pC-,W"VU'"\\Ggl#'n:XL
%4K^&=_XVC*jWp>D0<OD,Tt6WG&$"e5]DO^;p:Bn-Z?Z0@HK4'FC(lfi6nL?+?e($T<jFoa'CGY9RX84f\mJWW37dLgA+/p\Y#18#
%2JAJei,6Yd4'aKJ2e-a"gg!EUT/:JaokJ8Wlll<,Q?mH@#G,du96oF89F_HFQ+&j*G,8%fVqsid\m^]<>+os47%IkXKn"JHpt,In
%]D`atI9WWbTBa\7qHuV0]=*L66M1S32%&`KcT<k@>3/8Uop9j$FiWe%M98'+e\-"pU&8>PaoA[.G@@)b93d\DRY,p-W:/i15L,%3
%'N)\DmUc"!L[@F16q?iKA01g`[-a/0Ibh2_[S_=k(Vu_W$:i?-U[_V_ScIC+V0b'1T1jdiFpiYGcrLo_WI:&[NnWV'XnHK)rhNHk
%7he-JH7HDH6\T,tW;T[:1+BH$<k42/qlQQA4I'\LXTJ93W)+GMBhh7Z_42rI;5&[sj]BB6S8N=_@d(>@*RhbTH#B;8hs6i,7[5$s
%f7qGE$GT16du[<HnY4u79qE<hA#,M9)S"NfNRg>DY+qb$H)STf<J@,]6([roA\iIXeOi^(a]k=q'.1@ubAq/]Y;7'LN(89FTioth
%H5!<cL,u^Y]FZsj#mWt*5s6$RQ,\#Z:BO+3d$MrPlF\o"Ak[O8#:FssIb[D1rQ!AXpLjK>Dgq=iYtrkkYOGY#+"61F[-:Goo%H=g
%O7NNPlg9##?@6M=?cuS5(:akN94?h8M2=GuDYg@1bEW5F*S9#bVEfFoeVW1t.R3.bN61>WEHb.\+]E&FNHh:hL[dQ%M"L.)D\pue
%CJEX:J,<gm4l+V7G-b))1g45ml/71Y]AW4eR)nFK:"!:oZ!O/!X?9In;>3k`r54]T5EX4VlGmea\cg-!"tFu6hS)Z:Qh,\+5(.CX
%=nqq'`r1ebba:q*@E:`hqf:&-L])#aml/CENdBXO_GAJP(BO>8'7<aYN].+>G^Vdk"@pCmB=M7uOuU25eh8nN<1-!m*VHRSI991m
%2=b";O=0-YWr*r]HEaGC5KV.KM*"Ub;J5]Em*C`'n;>6;V_Z?Y^DtCggSoX+l2>:pT1J.;&8H9Aj\P+4<3]T@0=81q^R)^:FT(W>
%aB,AHg\UHo^;PRXfMUO+WunEY("4\?b=>@!fDAaF;Z-odI5f!Y?$-!_e`ma:U:tD`Iu7%YK:,NsSmX$@nBio>\=_(7Y]GlAlF$<d
%K^ab$nY+$P]a]5Q?eU2tYNK-Bg9*uGmghRc^*a+ajk&O[fAQ\cD[8P+6[oUS:]!f!rY2s--.M0P1%1O5_tfMW[^Wn2IMlKT9hm5R
%c=Suin_Mmj8os[uC&Y@QgW7EI-7:R66D??;Nn8;dA:EWbF_TT7T&7,JfNr98ME7AN[Y$<ho0t:3Q$pqAc<-hl$TEq,Q,T.\CSeH'
%bgA*p$X9lJe7tbLIU(Xb>$:L?LRCbTWL-C*-6@XSCTDPP"6s]OCgLJM[^4<3C%#MS-M:R"C8KJlgJ@>c2:BTZ^!Y=$F*6K,L<2V]
%)ttHJ2QFY"IBn?JPrd&5:-Kc-^YSh\b2Q(nH=agUG`??K`]Eq;e^=O/_u#_6UVk/:>b>cl.aR6!dSK8SPJ47+G3!O'>I:lr<Yh#L
%:8K2(F=VG(GZ1M9j)<"_`mV30o4[E.G,-IK3%L4S1ed[,))(-0rr-Hjah(h\9T?UCnat,N*>4p`q+S=T]l^P7o!D4E(1-L0'$i^W
%4iu'Z2-8/Lb37Z/j^t9PY)Y)0bVnK_S^c6Lp_su&[Bd%,KEShh34W?eeVY$Dn`9D\S:8.D<X+_io6.Ud@WnMh69D(mb50Vq9(S=l
%>_*C<hG-hkcBQdX^%X!l38YWYafI.USE=EM+1]hdqP>*5d[Br+I.="S3Ubaa>][YQ[4tk5P+!H.Z!=;-[9pgP/YugOe?!**PL>b.
%?]T#9k6d.-q,mQhM.%+4\D^c(#n:D#&$L?X7slc#BKe#>ju0&aAgV^L]fG9$3cXYW'jk.ebrFD<a/%t`1qC+mHJZ3ke*PAIqV+aA
%d4j'"^!WCfF`.W\AF]`&ar]%0=?:fPgPt!uV_6J?0m/_/Nb9Hr2W&P/_Sg+kh&l)=Y%;O<;FaO%G%ts&\=G[$>d-Ic?_<D+6`#^r
%g"g\H]1^#R"5J4odd&K`-CS_tTq0fA%u7\.D^k?`R#3PV/=aj3Tk>8jGAG5pdb`YHI\k_F3qh^F:RCmA!l*/_FFqstnT6q,H,#i$
%9CLd7BWL35d1oOunRQ8fT<6g]CVudBIo`\/FL7k3lRN?5mGZRB7_A9XDSA3W^9*Gks/[(?%<X2X>G@:,^K$hWYah=*DbO`6eA4TA
%hHHGpQCH,:X1Xd(kfuS>Uq7XOX/Xh_RsAmkp+?l<h+VA2T67t`!BJ]gnEk?S[<n+oc=\1V!mBH50BG!df5oN=+.U5`\uLpk^!9W)
%.s[7`3uU])Rfk2a]X.0HG4fFJ9OmHCEaaXo0Rm:+Fh[>!($X1@HaPSU+,9:hDs,rJ/?H>G&"-%jU0)Q`?LBgP,O9-YFY/j@a'VE8
%&#R-Qg[X@E`C;]Lit^f8QbFKpRU0jgQ<mLFG8o5G8oc[?*B[#sWRT==rGgr[BYBMR"oDphb[TAM?$1@eOdi?=3;IPOIms\#$$4(P
%\++,7(6iQ"eF`Ot`"qU[j@&:+g6h;H[pN5^<B/t%K;[s%C@hA-L9slTUIPc2=,uqJDJ&5%a<!#Ye)T,:eATU^8N=fSDl7&?]F[uV
%[5*T)J,erkL]u/`A\dm/4[)SPFg[g13@Z@i,POu*`6Up591e79\#+hUZ<tK.@VBeHh:u8)bqJ5W.K5W7o/L$>p.*jfA*N95Q,%ZN
%p&nA#bEZd[jlCkcn#^FKf_7>F.<dm4RWG>qD_h$$AnqRBQAF#WUfG.$?aaSo1Ws&B&dj7%8Q2MFcSRIhL7dNke_uh#O)L6[G^"fL
%BPH]\[5aZ-rbV;D\\2\;ct!_,)XTi4G/m4MeP<:m)$U0Qp9E&:r_iKI"`AqVm.$Tj&m,TcP`j-rV6X],$QF0jg&h$")i"67^Issd
%8#,XIdAEV\_ncfDLDKA204_W&S'i.[PDuY,0'md@iK1OU43V16C3h8;o]>oJpb:Qq":atj0]XDD=0H[O#]J8ON[/mU]g''.ma/#J
%8Ka9^E1fiG1#A8;,*V.bh0$i<]fut(IE3Hoi!hO"lE72.0CLpQXQJ"19$1=?Jta8Wp/[0m]-$G+4-?@J]%`U"\'j]QbRaEP4?/m*
%mofY`h5J`SoE;CZD[)5FWQ2[,(n6Za5\(YA;r$]=&Re\GRQU$bp\WG,m[M.]9Z+IP(;O7"4(%hT)tN""1A^1$OjCs^g1#7/T&kM1
%m&=:i,Y-3eX&^U)#?'a2XtbT<Wg5\jGhaR[\_24?5>k!!S$i0OD82af@;PV&[`+k<I>F`+5IQroD')KU/6I8(Stj/`B-1caQ3CFY
%B$u$3"S2D'4.smTa5YYt*nTal&%7/AI/Q@H%pA@GT9EocDp,,4g/KCtC+`eSnNU.Afke?@Ym!lqGr3bCNh*;6ofPeU$tG9uS4lVZ
%k2JJqdb;c.EoGi`l"[Vf;Q#l5o@]+6D"O8;V\b62#:Y'YZc:SfA'5o@O6#Nlh-0]G2`lHfQn;+s%R.5de3WV40C>;k$XLe_8La4X
%?P;m_qtVW<mtT=#3<i=QIfrZu0^hh\"K?ZdiY!o[!Ic3ipH"nXduu"qEGN@YhL+S\j\F)%%]D\6>LT);lr7]*[nhef7(rO8S@tP@
%H8qCD_:e^bVanXHS\<\t?Mpe_0sFYn=4tj*RNO5N\nCH?SE89-k'jPM^cAL;&R:PiVD=3.\X)4Q$g70<9Z!.eVVeQfb_b[(G!@$p
%0lfO>"?_:^I#bq?m]BJbH>Wl][-:3FkqYUYVV8c][GU[aIVQ'tOO*b>:4-dKDDpK2bC1F[_SDYo\[/\TqJLf&*T&m52rE3,/cF,.
%hm9aLmi/(@At;`ZCVa1\\4]n=-Q24nbcLP@TQ<kcXcZp_H_%NTcQ'E'Oe>r,k\Mki;W5LTD"ii?cS+*gI5G6,UO)J,*6NFLYod=:
%.D/*_*,,n)D4V9%'Kj@Gr&'PnbAQTa[Id.k51t$YNaj5.F`D#8mP6fUEQ[A>NBbK#b>55MD_jKF0SCTf\DO;,Uj6XlCd&^7h`Wg?
%>'KUp1KBl)\k7'7d.s0sl&g@rf"#kA_UkI4H(^(")sR=7'f)-=Y<+)pJj\2J3BU`ij"J?1MJStB4($=8B<,[`,Q"gHUWi7JY&O+P
%O699`efse%g0VI[];t*B2chLhr=*NepQiX;gn(Z,54r@W3YG63;5s*P]iRDqLi:/`V2(>PQq`'K587U\m<Vh'91c"7XNb?9RaZK<
%MfIWJ+NEmVa;$8F8I$o&g%<k_PEimdE<j*DPi;/<-ZQh-h>E!`48H&:IPIG-4Q%eK0!7\Oj.MZq:TK8Bc'iM)VJfL17b_cg_;sb+
%>BVXfc6_hbP8Q2;U:j.B%E/%Mb@.Y32p>JPQ@Eds&R&QRNqiG:N/Gs96#7o5FhZJq2drV\\NUs?[E_QH#=n<bgmr2en`dU!/(*86
%UI/q1_1ZsjWeY3$4Z?*q\`3Tf'&eTI4`io,\I42Qg&1X#%b&kV?t--SHk,i1Z;WB\lH2tIUU?/]qSL/(rSu&ukoBNrfuIf3I$s7%
%0OeG>ioE^Q2XCtVWLfj+?LIf+@et`AcOj(.U0b"2&$r>".hC=Xbp+1$U"T6^UPjG_^l+uXdDPnLaS648A]k$qe;[3]EDW+c$T`_0
%%d0[Co<jM`&/uNekNps^6B9]8^QZpDNK!PES#n@3g"k]FlBtm@6TWr#a3<T(j*f'ea7a34aY*M&3,&Vf`_F-cZ1_l^C#Z=&gjRNp
%9NUCdF+>D]KTiTfg<H-`$dK3Z4b*G_dK2RCo.)I;Ih=>7+?YRmqmhX)#7NpQPPB>VDQ1>!mX/nnAKfmnK8j/`@qTDN<Yhj!pSbRS
%qQK&n:(k&&h5i0-f]Btbi#["AZ8p"!OtPh`Afn'aF>afCS&4,*]S&I<MVoV%.E9":ps"Lk:>Mj[Fgdaladh!H=Dh77EU8C(,9/$>
%m4B"/lLXA[_nP`YQF\T)Z`s^EJ_cY+khC'<AZg@X;Z#SKme!t^N%8?P;,=rI$-CH6o#o28;?O>qUs9a-gdUc4U2Rc+)Asl).R1*"
%[WT0MHJ8)`Z)O)5&"<\t$YL@SppJW]<m#<70<*`(8r!Z01pToXc`,1<o_,m\Lh0%.EVeGSfA.bQB59C"Dm5QiCt_A,_9YV(P0r'S
%Iu02#D0G#Oo;pAuTd%+4l0i-Hm?PWW0nrnWjag8V3iV&On^s$c_ZE?>\NLh3Nod.o^*?0d\ms=fjm&Rcgn8rGOng#uHFl"_Qu"D#
%S1i0@:KJd#m,l=*b?FJZF5AV\>L38i8o!g8kpgi.3U.FiVtR5tZ++>BX3[W/m\pDi_s5BLC,^MK1>@XY1/jCGhQJ,B0`r;a@E"+!
%;3_&TOpEeL-WV"H01R8kbCLQPSf8'0h[0UmZ?L88arIG,[E$m/;87<`CA2s)T/rnuDc?Z3_EDP@H9NM^e(Y+<?IFa1ULQ^oNRkTX
%*P$CcRFLn>5-qnpqLgUj8#d)DT```3>BGVRH46F8'5*pGK2skO!@@?Fit$f[,,Ggj2mNsn*5RPggZ5R82=cq$f<3_f+kk1I=3a<"
%*+jOQFm.YaIaZ8]4*<NGfgsZEVVgs&q-rY;+q*i-3JCfIJ8Ljl62cP$R4+XZT?KB@>Dq1ZlQ\>Q=l6^c)i(Co@\hIMK26AC8hb#`
%>)ru1m!!&W1Ik`kNhbL6g$JS3fdJtBC::d"1S!0kSi\+/pbW'=AG`e0>W,c$J#pM5aKBd`Q,hr'qtV=Q>/)LNI\<t:;hHHW0)&ZN
%@Y&LBM/arog.3]\[3l.Y<:$G7;qSK:1/)g9)kRMZ+<DNKHsg>o8JEM,@E0uS7?u29T*/MpJgj*\ZK5_so?!DEJ]?FYE[o,)fo=gA
%nFLhA?e<fQIA15N>OPJImmga0X:8f4(A\%-qqaru@O-Kmf*VVDR$uom]9fLlUTschO_3;@?f!P"\c'S@bBA7IY58@=CPr;kp2HI4
%Gr1WjB%AcB[oF\Nig)Yh3G#3)g1OK/Y.dZ3pf;<HO1hr.EUAP>eu7%B+O&$Kl<+%aOflFLK0eVs0_\P\\U,\>^")J/a-3LYM<iru
%dWN\&U^gj.hO=P#g,SM-+fjG,UP$cc[WMUTO^?Z[c!FuQWUYt5`O/D!h(\_-,@me&!U7DQ/>R(Xf<`$Z8B!_K;?sV?n`3\n^7JU`
%mC0D@PEU:;6ta]J`XGge.B5TL]Bs+lj8r&*O`8kHnZI>S/fai^EIKf1\R%7"Bhb--PJ(t>8KXcJrPD+r&h0<kDqM\K8%5$-<*(jP
%kc<[]REef$/\OmAhJ9F"''nhdaD`)`eM<^C*=!%;>g^GlY#1k6>\E\;WP5mr(ql@)72+iWV;fn8;jcE7=(goqe[(1?>4uC>SaM1g
%V9.$-I4'Mgh0J!all7lk%;%LmWAcn$,`Hf3c`^I<K"7mF2g\/$FZc(lh*:U@b<VCQc>,W8YjD)6Een<aSXuVerL8i2[.CPOeS,q`
%+*+HDHJ97MX?:FKb$RpL*,BB^h'jMeL=Jn!M`Zp4O=mkXH=@I(p?Zm4Y"5d*1C^TVQfF?1rFpJe-Us`qIWRgZMrY/FVMhG0c*[TQ
%d5cBeiAn`n2:L8$c5"[KQOAMrqK$g4pIra=l]p8Mg!_[d41")PCQQP[l?N'o=Y.M=<rVAikInmf[&Nac4]bT]IX6?UWhO:pqse"q
%hkKoo8G5P,EjOrFA(j"eBDYf(E\m;X>-g)ghDPbb,ZWqtZ3H6\0<=>\1n@m]T79H+9_l;\oLX1`7-jNr*h7>]"*[!$Zr/*3=O!A5
%lD]Q\_,@>*.bMA#WV:8GJ?u?hba?Hd42[>Thpb<t%h*juOMY=VO_1dDMWJ/t/#W:7E@qP9N02GMTD^m9W\)9b#R"Hq&;mOT7dRtV
%S"8gAp1@`]GO7Z?T,lh<C<FU0OAW^*>6Vn^eZiOG!_#i2#Zn?\CK9sNf0?9Go#'4,DEAo&oYkH6QAts<ElB>VjU9,hNR@5TG<$R*
%Si1;#CEB!s)l_#S=Us<#gSj!?mIG[m<r\GsmZk0RD\gAn[cmF>%L:j;gtu+=8`XFNp5p'`iN9b8C%qTAd/@6t;!<]jlZ]P9DA6jA
%[qPbB?AMjc]i85'7'YUJI9jL!)RbOJLZ[@'G6"bs?A@t@Wr9.$=nlA+$\.XEcKr.b=WPE+Zsl=Nn,$s)Y##&ohs;M5i2=A53.tX_
%G's3+Y7KpLrSRW5afU?bWM-F4Dapb[roaTmNn:VE3R[bi>0@hc>AAWBI2=pkHAeC7:Z7qPJ,K7`UmS&AQqJ3Z?2W1KO`L9rAGe9g
%+8nn.n+_6^5!@B(rtr&DU$\PsCMTm@GP^mgmsjpL4/#q-*"#'(#^,>A]b8^&';9>)eD,'X^(U]<+F/,IJeTPr)`U7V'AE!Y,2"#d
%T\(25i`VcI;+qGhK>dD`V=:8.1dB0''#*r$=URGCm\?'--$0t,r%(^9+B1Z:PoC3Y+f5m@G1maif!\EE'A>gA^]2OdWBG]RRAaQ2
%Z!<@DiTKHB1j%PAJ7%a6!p[[GYqB**0G"]YBj-p;GsoT?7e)tlSotd5k@%=c-(N>'L-.n?#ddE5hj-ctTCB'"L.WEdP2l,M4?qd/
%QB20:&kFk&:^?Q-8COn!4jQ\&Y(pGVKX-8A-YtK'VcCU>A]D)0cZ+3;.S'].bg/kjMWEYnG/C*)P;*-.f'g5X:S*tpk\6ZEV-*tQ
%AnjR?*GXf<K[MK-okca#g*\7=GWtlaj$\:6UH3WOVK.CUdI@]Dj+OI]7nCe-BuUq5ND<`)Za?e/=lL[L<D7NJQD0pj6^j;%F*I8Q
%nhlPGE/Z<LK$_E1[(hI5N8\6@L0RFXmq_9p:Q4Jb&CbhhgUuo1.dn$&etnqh+nH%8O#mA6aZ5(^hf9`dP\38b>?SU<=1NG,Y**(2
%[2O)aO?*q*d3K@#,`1Opb4^8:?k"a-UOGHY%:!W2"s-!$a.n>$C17KNd<#H9Q2Z1rY[tDQ2>HEUSdTfpBP8c@cSHL[KW`ME\k3p)
%kISl4Y4!`o8,R&?+jH'/$%1Ke\2^9sM)gfqKhH5c"j`Q\aMG+peYO"C!4XX&<E_qZ-:sn:->AZDO:XoDm#q2fnJ.@d)$`O3j!Xb$
%Yu"P1,GNPD*A8&;^m5k%HI0eh<+XI75Z300Kk/kYEZib)@<+!Ga^]L7D,'T;]^:lp.:Q-*L,RDmLq<`#]21r//t-@-T5s*bD;o`i
%:G/b2n2tUO3.,7)ngtfAdVc\>1T`3j=kBA]-(,AtUG)_8(n4JD<oH<d6BF_P>fZ%dgC9Q(S<+R@ZrrU?pIb6K:5E88BATtOPs!)-
%EWU1jF"C&.f8>p\"IdVs)8jItd1[H[!Bn9c#^&fL9i=TpL&35(<7$?s,Y<M<m>1'&gs.^eSYY'6>UDJb22s-q>/[2SNNCkcg+c),
%3?%i/-%rS3BE1P<k\b_qU^8NQR3b+o;l=6'D*s'mN2%Pdg)UOb/)kkKJp'8`6(p;lNgZq:a5mZUd68>&eP`mST]T6X_UG0&Q5MDr
%'95fY+]5021c0B21_ikY\6Xk*KY8]q8e47_!`tD8At^c*Ld[Sg$u%UI"Da3oOD,nVnj2e:'!XiscCSQE*qWj[W-_DC)Cc5p90;,f
%`M&,C7?L%b$69.reW:Z)'V%V98(NsVWgV1<ik;#sU1Yo/UW-R&3J])4`KFedc34P^La;ObnZ@<jA4A\Tn6piV4/.^B,LK("=VODC
%5dD4nStVE?JWLnF*<Cki8=h'R<A=.j8R2>D@4e/m-Fat/NFkj3#Ds$Z+q#[`9CkM`*n5bag5jd!8:j6Vk-MoN$PY?b)gr)@`kE"@
%[>_.0M68[U*2kYf[YB*<MWKVf1;R-HYt>96f01Vl@NHH6@7h)mR#s-LKbQ#1&>Bc;JfWqX/_W*233l%\LlEeJ(Q`Y_;auQ-"c=b;
%(6`ZH5:j0n9G.k\U^Fs=>XSq7V:H])25sX9%f1olXi9_V>(+hB+=]G>+].\*>F6..ja`tE^aPie_I,?WhL/1FZ4FlT*q>$Z87F8m
%72UlY8Jo:\"C-%Vi.XVs%mU+=Ym(UmN<`k,"$4Ag*[rT+Gd9%f*b7pg-=%Z$'JKf,)#?Usi+"u6)]WHuVQe-&Pb"N(Oq[G[6pbdg
%6`,rbnu,>\/B:RXA0%'f,a-FdX@8&@'+8a\*r"`Je``5<%C'G\Deh@ZZ=Umf1h.&P!jF71*9h_L\;6Fhg-Y=p,=bOAed'@5GWLN"
%nmV84&HUTXc%]+`-.;FBfgt)+Z(kk4;*gR3YU_.:TMs)j(IIIoL;I%$>@5\mnYKhUG`p#%K(OU<bXTiDbH[Jppd)\0l9OFIJheJ)
%9E1*e`n&Kc"qE.%N#9Eh">H*uFdAdSUY<dkC=Z52S*c"qZ:!%[+g?_hR_oHrnAnE;KfTb20[beg%uEapk-GPpZbUh$S,eRcN6#Ok
%[O%"LMVOC9L!?CU1o,\p,L6C8!4DpV!..&%VV$9XGh\ta*>2S\+AJ6]Oa2se0KCBcB8=38HE]IV:UY%t"gNf?"!XJAfci3OBr3kc
%#s]'H'8?S<MIK1@a'pjhdIMQ)8-`(#@S;-.83<R]Rp17o)oH^ZLp8;=6E893GBleS3ZA4R_R;0;E5foi.Jg=MVM\Emi/ZiT9>hfY
%5uYtaKI8l:(D%D&CP9AmmG$&_r%K$fHU'b1bVu:!C.1*UQkakeAs`i<_Sudc>7=1rGD#t9YQbm2,r:W,c"p2s-LVo#V(ICUUtj`J
%'PPL8"$e&?Fa,6njbV`3!Us=pIkKZJ96c\$1daYAE!Z$s1Q:n_nX)V!IG(2Gjs9*uQ3%-.#=36c"(.6DKk[C%6:AE#kNsLM9fak:
%X\W]_J8&&^/f6p1#5j\.'8Rr2@):2H%-UN\J*>P@kZM)<L]\E;%<k[kUEQGc23/A_3atPE^u01O[k?=!pd@ZE[er\^O[B]dQ$"6l
%2@X1)aWgAt\ig`A#2at9AfXUEJb6?i7Q^imQ]Bg$iism3Ld3L[-mL-bb$BXo/T!Vh+J9s5iDGU_)t-+Hi&ge,ARN1uMp@BHb40o5
%(8u'%"p-`:>(#@e!^61>83r%Uo16i^+u$/O>:\D5^f9Hp!:^)7]C`oUYYY+^XEW`u'@JU7)u^L:RY[l7l>cA;q10##7mTdQJ:OMX
%NT>g&>!5bD^)`><ja*_DaPD&NKZLXmL^QN]D\<k<[FC9JSA^.&!/!a';ST$0>nKWuF1[PC3ZC1S%Ldtm+#)Cah*>),Neg7-3F!c=
%Y#5$ZjOk,>"$`;VmZV*(Hg?OZZ*5sYVsj`QV,)YZ9CTn6HQd8-PTQVVjSCU@-f$&/P*I8o+jcgHb?E$nZE]Vpr%:KRi0Ll(6PeUT
%)_d,U3fdZR,TbR(cd;&/n.`>V0o,TQ0d'h?M!&B4!=<`Gpjl1hO;KR"N[>D]3i%E@5>i7q86[K,i5Ln,(c%I+G>'&',!"6U)_-p(
%=)Q"X9>U!<CBd**#94H+cCo&,E2aI4YA*Um!,4@t+0^`)*jt`o&7PXd$t\E+(D;k-jYG5=.L(B9C]u4tWJ.'S8O+Hp2(V9CHE__r
%bTWbiWlb!Dr5$Bt:r?658!#,Yi-"1/#6rF_SDq.;%E*Z#IgG,?Y_A[MhIRt0Th[9c+L_NE!XP\qH[)p):`2eri!plpc3I5SCo_EJ
%)bA/8:cM.ESYE6Z3GZeR$?:[5<Yr215d;hTj:HnUUl<1k_1qVk63qSOO/cm::nlS]0A"W=<!YXL!4%"W^(,[S4lBSk<J%_Pb=aAn
%hno>c&#=F^ZbkL_!-8MJK#F$!0UrJpk"70.Jlm3;r@@]KH&lf$fYi?iaFCgXI>$)pSUj2a87]dR`N"d,[,W$C$\S["$RjGU7"T2^
%Di#[2QmT!K?3O6V!i?iB3Nbo3`t4=+KoBnWe0TqjSX7Ab6=DPlE3f6A?,SE[2G'4R$V$@H5WDt#%=h/@LSIfLF9jf-EWei4-R7IM
%$L)5Dp]:S'!/`eZ#>5I!?#--qXs]D?Yi\6K&MuDN81)3"1!rMX"9H+GbR=gg9L<ucBi"rGPIe2T:aY-T!%*c`(KLW%G<!e_fTn?;
%fp?*3k#oe13f*3CZd91mB7-/P`!:]:RnP<B)[l:CF0#LA3IVbGp>Y"%U'$-"Y%nn5-Jn!Aa'<dOi$iEc=NKKsLO?pbGMrX]VaH7'
%$Ij1V7uD5BZU\P^Ka:$.!m[PkHB:D)B=\]tdq-i8?lGV?J/,=B)i.F."4[CG=TN_83[>DulFPXD5b)$4LBBrhCkl'pI;-lWA.EFQ
%fU+d^W!'3,Qie$I.KJN;Bd+fjcbV]NPt7FA9q2o[4'6A3JXg#Sd(U&^:+ud1G&bj(++n6X">N6j1CgnQ!#.A$BT30<hTce_>,$K4
%?jG]f3_mbHQJe"G(2O5sdcO!O&qBBP_;@X+BIf[R%irr[5TJ!%i94ST-RoZ<PL*J9Te635(ppRZQ/u0M1j?_VTT>$:6Ze?*!DUBj
%AmZ^G!tTtC#b)@@*u"&&PAN`T"ed9/2]nWTb<--p/$qG_,(p=*q)1,E3/7J@R7Ki:&4DDG2NQ)fRM!L"AfbFS9^t9j'JYuJKPpNM
%EclNc9hHoD<YQqlO\c@I61]ZeX"^!@%8['L@@D_9g#+Y.5b3'4":KC,.@qR!0hJ[!G#\hmM/VR3m"<a76`(t2&UJ9G'sJGpe=i9G
%]MRfm6lGNai$RSV&k=&Pif%9=0;m%18G)?p64$)^d0r2BG`Qf.b6TM80F5=1i$Ncq&hfL!N:IPY"=S:!"erht!,A2,3Oj`MGJka5
%aUJO[4:9C\6qEFU@s_C@$HMX0TN3t&[$(4M/gNRk*eFV,GE\fS+cNI5>Y>=%c=Vf13"\t4$:s=q0Sd5kM``6rN:sXjD%$gb0U=.q
%FV*ItJtR[!R0%!]i=q5B^gRg1muW>:5q@d>.T3Jr8cY_B0*paV<APi__&6\cB#C!tJoH-6_Ie\];]p2:(>G[aj0!"b`9n8B%9`KV
%KVP6]#r?j#i=N$,#reVG&ThU=6!WJYU+Fr5c3UI[?f5C<Ci:#re+g+;/fN3t!a`c^E'H6]7=$Y<?]0F?iIio50Q9l/YRAkopm0`3
%Q4Q@m!Up_9?SYF04%+=-dQC;.S8E.5HHlVmUj_D+1:eZ`9,*C-1#aAu[L@2nL5PLF/n?)Ujhh+/$gofg$C)C=aN5%se?h!s,QC0:
%]+tO8m(0)4AR`ii=:mm'K('Jo1PSMWJ;0M&)*XNKfB<(.P(:;8pFO.FZts4(O;UFgb)f&eX`Y)V3=)uYbt2kYqi8MW-79(Q8`nhE
%NrmA@q(E\Y!XT&9q+4\rA,HBI/u2r&i!&-*GR2?(,[gdd*#QsD@)#$4I%LDD:7HYFnrm`D6s"=7n-*Wl!9]SK84Y;9"P][d-X/mt
%.?L?f?pM46JKru0oP92PVYPbLHra,]**)%pd4/LWjrkiJT?%O'?%U<dCf"X-38!>K\0G(l#m$6pnN"4S@BVZD!uN(O1Frdb<L=iL
%*;Ic*#\Q.O:.,N4_j'>G)F?F0%@@3!BIfr63%7J>LAZ2I2E'Kdpdhe[]5gZ$;`u,oURbAU8VWot$S2aKM>Rl;aN%&]Hq>;s?tV7-
%CWLO84&4">GiKO[!,Ba.ikSd>V]ms5Kp)F*oN?0Cdc2/V&H_0"`Y8\f#3O$(:^%l>jdO&;&-9*J7[<43+8=;qpjhq:r,ME2C"6;F
%c"g',=r\/#^XPP59cMEL73Y,T6&!>?2p/r]jkslF,e=WDn2NJoRWKeA\72FI&4@ctR*"r8-oEHMJGha/66d;fBlfrT0Jk$]&[<E(
%gC1)42$-V&[YD!g-jA#)[`oN[gmNa&,XtdiY1b45U(NWC1E-$c-Im]@!cO=iSRYR*`cSL>.#E!t8:]G%HjB+s6V5L'-nc\J=dq[>
%DjtPJgd,:?fTD3FA\Uht4?rPF3<Ol4];ChuQu3NXKN!9I&@!j`9!m.rr+3_2+BRQjAA=*,M.gg*JW;Y90+Xt3(o&jSEt@d^:.VqB
%/J?[R:9hcgpDfQDQ:<#!P+85+ZL`U9RO@G=$;r#em"CuEQiJ)R,-E9=6oe,c/I\JU_;t5/M$'6k#ApAA"Af0*F/20oB^tRLa<:79
%o95)/Ve>9&BU5=pM?=1<]82eE*"?=NpeRj%:`P=8NE=:]eW]>,$_FdeRS4g!^r1@AQ,J-'"D9%Ui'`Z6Gs[3?oH]<2LI*1#jOsaP
%Gm''dNogAp'ErP;U$sV]buu$+16G.uo3dVF90h=!TF0]oQnhUY"D8S.^;GB8T(CpnLg;g_+XZ@kT7QKnV'YWoMLWU$N4FsIn:;]B
%dRKhU$+B/C]`oqc_=mtE+QR^Q"8EeO5OjF/D]($Z,XsQ^W2*;+!^IDi<e8-XD5^l2g<hi"X;5&5-P?le4AQUXilkN!(LU*#=X67p
%mAD7VZ7&j)T+d7#7L7)?Vh><pdS9)e6A[`WLkrAlJ1c_J-@6dhO`hMbJG'uia8&us!X`CsSBdj-(H+Nl"edgr.aAd\O#70_nJ&$@
%+Ec/QpVepT1GS5[o!XRGKd\I4&hde:3ReOr#E-Rj0gI-Qo(2rlO"T$*=VC)m&BRBg_T'GZ&%L/G$)ua2r='t)%d+Hei*o:-dtZ9_
%GmoJtV`*s%%T@G)cpOO(Z+BIj_*fFo@At3(_7u%=UBqS_;;WLZl#g,l1<*^Zi`n&i]!c0>*/S1t)!125)bQ-Pf2dGIX'l^e#h,'Q
%M+JuZ`\dslkoQ=Jk;6!h.%F,sR]m?j""OL#)DIE0"@#;2*V-!A#>Y@tO@Mf$+oF+6>J_fcc#m,Ha%dWka_n$`gQRRH_DrYo%5YbS
%1q6M.E3RaPeL7r&#[7A<!MOjB-tt"=M&[!l+=gsDq15IG!#*jnfc1#=qo&^Q,eQr89OOJ1"a!!7*-1]u#RH0)!BZD5#XV0^[giHl
%0TIb5JYAO/ZH(uF.UWbi#Ouiq5TJ)<UB\t1+WnK7:]d.oKc1_]e]=($VEm?JNpB6LUPgu7n;&f,J2f65HiW=r1;b4IB1#g(P3N%$
%r&%=njO49++lTY"V2m8?,2S-mNt=niqo'8SVf5"Gi:E/Hj?6>)J6GSZ4""[p&M!Ja'ODGOZj&!F]#Eh61F0Y-;35lJWY0pHS(VN5
%<'%Rg2<<[Xe0F->kW_)O^m3t,lXC$Q"M7=\fB@5JME&g$L*fo1"'tN7TJ/l.]e"0E&:O9m[_'mr854>63uCF)@(6ph;\gj:Z1&sI
%8-G>SW@6k@\L\F`VP,_?()FhK2XCJmj.HYi0LsiV**--3RO1cT.k8/`Aq\9;Y(s=RN+F8^,N>GG#$#1u4bQ<:hc?ZoA4(.e<k#5c
%9XlZR"pp)u#F[GB#Te_lBGXGOGsb/V7G14-X?LS/=+2:+ai.p!j=+0C=RH!?`+c]T'TK>p_Gh<i%jXmM)/K9jm!BM^Cg\I5oQ;:L
%*s!4I_3W$7[25:357TH"jOd^MLO^ieb&G@#+FkNp2c5Y"8#gDH8WgjF%g@QZq?8l"O<!"5,d*tRc*&E#0@']&+GRf`:Tij]r6R]m
%T%SbCeg>WL1"p,H^nk$<!D>n6+9@e?`-`Q"(1[k:_*Mp:jhk'S25JX1'L=4B"!AqN-48V<!FFP6U9gVp7oE08kX*neDA6h1I@Pk)
%'LjdaRjaZo/AiBdcU2r?Q:D4IQg_9:0J5_c7'84s0.">?8E^JB\OasiE]>&.5n;X]'TK2MCSK'-0d/%VR!$Ijl4%"U,Z*_UO5n^j
%4FWSQEq9\D75WFIa]FX7PfFsM_8W9"G=VKG'b.=q@tp.Ik88C[JS%%0Eg.O45T,DXS4l3C/+?7O3(1MM$-7Hk12Wd9dLS>*75des
%;Y%r,1R8?dVa6p+1K>Z)/$D[(-hEu]30rAg8.0&O/4m$c.i2<kBY7l2b8&+1i@lttXlZf0L9*1)+]',UgJ+Z,35i7:;AgJM<"e3N
%&gC<G"K8gs)is%6O=]I/MGdR"BjD%Q+KTLVC^]`#Ka&n+I;,rsNeEQ]+un[>c/uTKUomsUOVHteq'fj%'J+7&U8Jt=3/<1-$,%`'
%J20TgBZ.SLEB$q#;&:U:6\]q/nn@N\:lS".(M\s\Kqc5!6M-$dZZJl,,i!5YBTK7)6FDKi=X/qu_dS.p#CX`\);nt.!`ED^c)FcU
%Mla5RLs8Gq%d]5@omgQ6)I\(t,3%:G^*KG4Ucp8.*:6;MWK/5ZA-GQ1"9jR@.;49j^q!'&A$"GFHPNE6Q!kt$>i,mbF&/#,oJf>R
%d=$fr%cEo\:D4Fs7E!D@QFen$=%\I6N90mF-K:a)/eE!O9[H"OD^;nR<.m;9-.,a)i=E7V^sdl9i?C7sFmVa7PH2E/;H!@H:]Um7
%p]q3aSfX'cm,'3><keP5o]_0q6?AJ1K9+qj-k%Lh)rED?!ffSN#&H=**k@Fc'SEP"23f_END^foAE*cE'0tOG&L\Wn1%>eo[<B>r
%>gpM3OMb<gW32d[T2Q\bJ6@Fh+1B+:J_Ur+0o3qR*eQ;(nLh]k"">cZ.jb<2Yjl.r"%_K-_hJapEJ.C`JL/fgLoUZQV7:UT$3Ga>
%fBl,2\0GZ+p!as\6[[H@MaWTE1Wi0^%7Sh\#dC\sJ,sIKWQ%Ha3E#d6Ro+I29YJ'TI2J$gQUPPMK#AG8*)6UP']_$u+mSNA#0C#!
%+:$ZiQJs$0&%@CT[SbnQYQ7JTp*5(lDiF._BV$77]H;/:*fu@u$Y%8]M,L$:9.H"T(ZGiegHKIFau@5\9b*6f'j>Qub_)ii6sZ1G
%\g@RY'Oi^=]*P8a($.SGD9eAU'sKS%0_2d,JB(P/^i:do[n/.S2MVs5aI2j#o'ett3ui2S7+@DPojsfMd1n8U-)Cl_)+]ZI)RaK&
%>L,3u.4'6@W>].YO0-B,'""tSTJ^k:DH,!EQr<">ae?4n'Sm'#T1cmu(PI.^Dh(YFYfp"Yd$2'k/N'Xc@jJ@!Kh$>;Ydha\2eQs3
%dE&aE'2Cp&N+7ZkrJ#r6&nJE'?#^)jV7h_K;b0?%Y+]n#0h<:s1/T2NXHM!oOJ9mF:1Ne<$rgn3D'KjVKgK7eL8gOZCOjBT"RJE3
%L`;%L:+5k#>hb=NF"NH8?l5?h+F-D,?_NXXV>b9_opK()b9CV7rEW":Z)lZ>\ROVdGqu&Ql;cIYf+I(spf*on'HD?'%Iq+<[p)Vm
%_64!;+S?jG#X5DnJjO?Ya:rJV8*CiKjl33@p.GLuKB*q6N$o#Q0W'(ug/u'<8O;edb*\8dQa-a)o6clRRN2B)Ugad>K"9e!E]fr$
%DLc2,Y-MF<'7^Zgh*k^+)"Jp]S<:[-^,?'6mO?F>U*)=TZnhs8OE7YZXPd'PgJ_9b&]jT(n9oj'!ltYkObRIgjaN!&'F!mD%"Ri/
%/b"P')@kN^l8l]t6n6kKi5gk?OsB!?E-82-J-!2=cBIFIM*e)<d$'-jB:C^aRE88C9]dIg&!:qKR62UlLtG.)"NI:t;*YQK#tAh5
%;gbnRBNp!$=1^f."<(?7Pa9Zp7^SN"0GH,t8gj[T\F9e/4[@#Z,PS_"!Iri6b[gjo1i93"ZoN8[fOW&R6uYjsN=X&KKYTLN!n9\\
%Bq=6FU*2lEY!2o?J>pRk`/TZ7fq^A=Z/ml9aBQS+.V*'eg&WIm%E5afXMLb7$t]X\YZJctKpX#K9Rrp"!38NL&9[%`4kp,s(ULU[
%(GS2eO]b/SO@p"(+MeRb/5H'ceZ;L</lJ/u$,2*..ZP^+\026;684p>>:pa1f;k-GCc&GF.)82+"KO]"GSllb=jdn[pA!cN@!BYT
%q\_pOU5I%p84>fu;Lou]W3?uSJY=\9><HUP<cfXG7`QHepQfJ#!Y`#CGc,@_nO"jbj38SC5k-@;D(LEL5*mFU2)1B!llUP$"]<VR
%has(uUWWh[7^n']+Jk;5.`!gQ/b`D(0+C@fp9S$8OD-L0UHQkUgk98"MP_+\3XQ)FG#Um#9`g/6.P7k,<6(<A!Q+P&Hp#:E0&MBR
%Cpp^lIK_(ITP_5_,taX)6Pr=S?!8MlI'0Ke<,=@'#%/<oQL?..'q#o!:!glcab>*c0VKfU@fbtdkWcplRZ$#SGke`B0=DP]WTLK>
%R,:0a9iJ!,&l=mj%IiF/NGJh?p=Clu6klc>E,f`&aR68Gh5fY9/#+HH^%&WY1D&;n+>F6"!j:q/F64AD8V5350gpGU/Ob+n&V:"]
%:jh'CJn><+ABQ_?V<)K43g@h==;$Br_=fbe+6#*q/-8Cb%I?Da4/*4ddh,pf-,:N/4QiJ9Jg3HF+I!ERF#0O>6S?VK65PrA'7u*7
%'f`R;C.S,#Qf_1Z)%dH6b>F"M4Um>Q6&J#CmKuC_[HjmWb(M(O*kltKfCE;nWND/H)DK=l)F.'GRtq9q&dhdH<s0HFAd#X3aqVRF
%Kb0Khf0VXBf'rKT][^Rlb(0gn1jU-Ai/>4'+lO%k["GJSCeQGp#gH6[<T;0COK2J(-9,6^JbUtZ_rgG>bIC>#pT5_Cd<eR/4XJZJ
%9"WJ\JW5j;(ujQ/2==gu_MXJ>YDf(ZA`TfX4`cN[*i+g432Y>%(\?b,*A2oYc/Wh(cLRB*$YmR)N!>V!1q+Gf'tnpEC\_'Wa9?f`
%<L]3iDFJ8:7\8[]YlR<gTE:.]%\k!gX3jW\W$bfmKdVlj\`VIlBV+<&PK+F9N2\CX6%R,tZ)_aMeON@>,UN1T//*AaM+'8I.+urm
%4.oG<o;Kid5DZ!94eL1]%Y&/[$O4Pg1+X!&iu9HT6_VPc19"-27=#U,';OL_k#S3hHsR@EoZPiB\Z?j\!u_[abn[sc7/8&[KB31=
%>!Zsf"M9FdF9NB?"fAHCQ3p@u/Zp]m8<*)7i#WTf0UT0HnMpp)#@cU*lq(%]ZT.*d7LpYki'+!5[#!K>QV7$@JjPZ0j-aX]hT2O0
%M]HZK3s8XgON\jP0/0)]cm5Oa_8,!<d,K(#6r<B#(_qpSr)Nnml6;M\RKT$FVGW.QEIs-o8=i/TQiH-b0@XcZWus[IP-9I&cgml!
%Q:=E=-PRA.LTE64F*+qOXVa:4%UZ=!b9CuKOITcM/ep>I7*+[md>?UD.-4B4ONsb\Q(co#`j[6L%#Q>WI%3_!,Ff4ZAtB\'%Q=G*
%As(;fWWMMs!\Xn0=eR,ZEf9N9..n)ka$=C#1G3L:"R4$Im*Kq'+4qB,kT1d5Z3lUBDIEgiN/.&*1)D_!dmf'nmLAb<70)[^Xt<iZ
%YHBe<BgpRr$8/V!0MLH[W"N6%Jca.:(r*op>htAeng+aiV2ldT.0>MNC&fhQ@5eVGcSCVgi^g2]XNZtH_#Vth]HEp#*0G1?bF%:V
%)LiGQfR0d/>c's.5R5"CKgmNs(6&_)Nm!OlpS(nBYkZMC7QhZ*:5>)s*qL6m!H^t!;<]ZQp>jW39]YE/b?7t@?7=`8QoUHB9E^4p
%7D)VG1>3M5&)Tr`<b<6CkoFgq)H0O32@+(DpOk@I>jUW8;?VZq$YAk98Xps]W5Yn&-j.?T*YJ;<qlVa`U&CA54kP'c@djg,$,oI:
%NA2ds&>G%"'SKTL>mm>;CaB2p(G(GA#/R=)_j>q"$OGp%+n#n)E#Q\qNk&^?FG&GY$3\1bnY9W!ZqpgbB>D"7"M]Y0]hG#PWuIi=
%L4+$eOiu<b?=6.rQDs$=&=D0,aY;3^\H9$!7+R*S0J_a'J?"Q`Ttahubt;<4^^#I<E1r+ig3>C]cA:qcE*.cIX(!ao3h62V*P(o]
%Htogfj*2k?Tj[i0k(V]OUhnPu!&[Cd$j,daGM<)t8?UE2JBa5"/$<of#`T1f0[06,'CO86H'\XhP:AD_+mj8]&rAeh#187=!u*0(
%2o/EEM./FhT$lcG9o<jlE<`&1ama?/1%82>^bMZZ?$/XMmmO5<.tR2-q5u_r$bp5)mt428f>9Z`j+3pa/MM($(V"M!/?f7eKI3/1
%YEaq!WPFOA4!cP?@]G%d3dari..5AN+[2XBAE"Wis%)r'LlMd(S+k.BTaVpepdnAdJ[u;eN(7D?g5F*>\CQ;C,s]j)P9_)cR6k:D
%lhapd!'Fh^l:kWB*>O*Z451%!.l1`YDhdel0S#kDs52CqoLa9@;0[$$s.MABYX$>SEnXEC'bW&_Y\cO,#)TdND8G,-c?CJ5)a.61
%drk!4\jL)JR1`N=FhE=32`E<WBTm*:,'8@4=Ij&JcB]/MR6?5!THEK>LO*m<:b(<n]tm)p.4@e\67nq4B([=uA;;+K>^H8!Z^.sp
%\ETGs,U`oI7C8Y9Z)EP9Cf)HF).7*KacO'3mI.n21^0J5@8cjmdM,7#:Jdc1kLQh5;4qs"3Od]=p?'!_4:0?<"0lIna`MEqZ$Q9/
%BEhjP3o@TaNsd&olpH=BVA[:mQ`AFh!3j$d@Qa.+D+$riRA6+&p0fK\bB%0(2$@p9Z\S>j"dUmkEJo^q2OoFkdf)XV^h*f*](L2a
%R8\aN'jG+O6`/#kM<_,uIoEOn]VJrIq%O;orh?&$TB4jI*9ml]\=,#-faDm*>\W^'?j02K'rT't;e;[Uid#>2]2(o)YTt$7)d'7T
%/s&,s'OD)/[=G*;S?<ZMku+H\]O);qDR6]cU>.BS`XDd<0BM-aj"bF6,ZH8)Fo2Vt:q#Z3R\m:4)7Ej3e\VVH@AQ\H8cgZdN/Yjf
%0m`WsGh-h-MZs[pZN:kd&>Tq)M5lsVQ;]WM=;27p'TI1,)EUuoNtX,?ricfR9p:>W&L`+ScEe?-Vs?V2Ygn_H9p-3I,b&)!e%PPn
%!h3jIQuF<S9CP/`J5HN.Tt$);ils^Wfe"-I.=18>bY,<"7HX'$8?!UVFQ?kACo22CP[flk)7cBf)/=\j8L*7@.Y?AhUr9>rXf)>2
%M?-Q,WtFOD*#WM?$7Qm0Aj4:pl9MSfG#"E%r$5g'T)rk/76Q#]j.Q1/;-bHFL.9hi?:7jslTZrm/]EBZhMY<E_M0ZJ`(?BE,P=F,
%<dj7lXAtRW,l6<M4o=s\Rj)Eq#u*..P#A#f)"Y.Ee5oc$ZNS@TAn.^$,,X)-&"LteT!ukQ#(1GR;Cj#82/IO&4'1kpTWDKD4@I\d
%?<U?&U"tDn/`QCa8ErbBP3S'Je:ET'+k$EXgf*K[Wg95nJAre%f$ZT?jCF,eLc4h7IEic\$7&81-Rb$nk!'I^e?-$YE+0[(Cp6mp
%1e>TIpHTp=i%,OQD4,h9'[A:aDWR=&`Q2/iN=juHdk3#EDkpZJOfm1e;T%m<'V:"n3/g4>&BeE\rLP"GfLCR:k#LBjE\>+G1'8k^
%8RpBkKK@32!U&7hKqY>jS`ru7@0"\`'&j(K%Y-@&aqP[8fUPQcqZsA)82*3tk)sFF[`>tORjtfK_q259#SU>2%*L1EMpf%:XI[EU
%aUp?bm:4Kbkh/XFFJG8p.%b!QbRs%=*rX^;gfL5$d$i@Ul'500P^@_dr?ZNh^Ho_JokG#<BrCEq'SC%$n;0:B35)8%+ooRGR4?G/
%HRlAb&PGEZEN"*b#?shu%*`P*L1@'/`(l.=[FrV0,9KC4_SH7,aW9K2dp.6JjVmJ2WbG:XZ:4h:28[TK9Micga^1rDee;j<-/2CE
%ESPsqHR%Y'S"SUN[k>]o;JNceQp/>'.=!*;:Qm)uTid]#.7Hj,[F/RYQ$'b.N#'CW/8O6c@*HKG2m?!#9,qBj=.#ltV<++A,P\#+
%*+Ng66o%Z2&PS\s/N$TKaA0=06Q@O('ZKYf0jC*g+/\&+_t4(GDaQ7C+sFmKMQ5)K2lB/<c+7%0),"!Mk>;e&B)V[J[mo3VJ:g=s
%Tn+XYI\g@Oo/0d+:CE!O/%ttfc[\#h3&V<S\YqA/'t)g![0T.rk`O82)(4r`9d8QG0T&aO'uR>#nOLi((t4DL`l\\UVkd7XK@3]6
%(P.0QRH.<GlF?,kbT)%)lu3?s`p%YhU*JP>lR/J/ctCk'-118.DZ#/!+KGYKnk`A.Cj*\`\.dj&B)7qc-1O7AUF5knYe#t:kb^5D
%j1VWsV*/2J(R5K2Cc08;1gu-(oiMqScYL$A&64s]aqF6+b#edI'KGM._SE55Nl,GpFts$$d:Xn(#l\$d#JpKQi(qPM1gmIS/:BS-
%AY*TfTe,i)10&O-l^kT;Bsr]seud;c5=ddlgtWK>='d:Je[%$8ldY"g,W`2N?Ps$V:f4?T]6euq!>Hgf3,=O7)u]`\kdp<dA<-2/
%-.S9F\;4+T/hlH^]VF<TZC9D"17Fd<m'.NN&g#Gr7/HjSkjJT1VR,MBq2?"j)%!Dbm[efKO-bJl'foQ:\c`<U44e!O=0dA1>,@KG
%S7gF8/LrHo.*)1E*"A/aSH-$[?:Z8+2<8=G<lioHi+f0L/6s0GRT@SVFYcFM$>3P4LIC,6YN.M3AN$'Y#R*b(/H]lXi[V/V?Y#_V
%c<(`;bJ$3`/ju7'RuO9TM8=5$-K.C<qW>q2PL])!X&602[">l\l*@[O@oreO6gEm$ipd2Cj?_?J<En!/_^Mt!kX.98=M:bJktZsK
%`F\d;.KK@iSnVNs,RY=96(K=U[>_C^ST-2LOkGJ<_7*`hY,7G\29#/?a4'D,1h*A`S2L_$S=);7I$a4d=gf#DV,l6MNO*5$WYK,p
%A^.?(?h7Wd,?7^U<`^_%rIA7)U\IE[5nr.eDhR!^USF)=NLlT"C8sNXV0pE"d3<$+/oamELbIi:)->8:'+C/$pl(g6-!*p2AA*pi
%a0:lNMVRT+&PlK0"=9A8cmNKj;/8%>#u5Mg",FPc+J543'mjN]RGqDN=g=teN,O>MC)J=)MSjh\r#VR%qQ6LTZDK'TpsoJZ*_BfK
%+B#XM,T[X+6g1O?-O4I74kJdY(S8I/We,04Z]%NQ(u&)"Lu:TMe5@`h.Z0#^<`aZFbhGH)j=M<RAOu!j]<-@0)F\DmL*NeQZS(;G
%N`aM7b;d$T>I9N`@9\Y]B:od/l>khjJMMN5R4,5dPobQDob67Xnc<HX\/R+N'L)_-==$E^QEs@'M>6.H</96O$IK,fl&7%AQG6L<
%2fO_UFPnE:oU;2ZH?[(C8=Y%(H$/:d*HZDo!D,gA1+8G=+4LDCJZPWB;M].om;-4ORW\XgY"[U2gM\Ia.uU<<Cltf'H7uh';A&5[
%*r]+o=p+j!l?cGbE#+_qAr**t%:Fn;/Ud=!M_m_Q)2tAl6BB>gohGiMf2"!\&D/3M)oWT<g#fZNhX+e'JH`Hk>bO9B!eN4%%f`SA
%J.q0,75Fl)c2nt`K*+(2-@3:$V%$jLNgIpsTg&#P7V4N?2C)7MLIIen8;bCml)u!Skoe^ujb_n;-,3iY5b+a1-'2EDLH*irdY$\(
%1M^/WCpqpu7'3JU#TEQ$/`k-QAs>4DM,'8:Ng8/o%M@03gf0l>7cp+1lQo$GCc5,?W$6Ym\!h!?Go0@'AKc(+0q]G[A*-cIe399W
%6%XZn7Z`:;nehf0,peZ4;7b*:(%Qoa#mKpdP6hu#A5Pq^jsfYjhF?s%T'4F1TbU[WBHW.bZB+#X1]9+g>E0,TAPDtN0L5X]-&O5j
%N1cZia;gV+38HWiW7+s8`/aKf.a59gF"6%\,a&:k"$](^c>tc<lp4iV:*u,i[1IA,MGkg_nma59U8AgqKm^/t=5<(9m\M#/#:(Rg
%-EOnXj/BCfmt`=V1fr6(W\VF=VXimJRJLQ0*#FLZc7tp*1Oh\VPdqHPk!XGRp2]XD1<'@W.oA`!TR-8l@-YlN5YVs7,ckA-!l``F
%rur3U4ch[?DsoJi]k'c"Y2He`Vu#mY:pYi0gB')r:(VSN$+udTTFmQ=B\hBIr$6,(-\9HEIB;#h;Hhj>06;?3D73^ddf?M+ja-m$
%e,,8p8JYq?.@jfV)#jM.r<q-C3He5d?6or4Ylb"]S?$?fH^L%#ZM?72;noq"65)t\hao:TNkq`e=T8g:TFnP@;Z6;.-sSRuBjsIh
%b<G2FjhoY(*P=aAK1*G9)e)?\90iG$5B%f@j2,M@i)#Zs;*>10D7qjd36D?N?ouWEZ]K`A,:%jbQNN/$E+rD"^ZTSM3[Tk@m;lZ9
%#+N98BAtW0;b*]aJC'RPN6\[J?s>D7/M]Xi:>;^_<Q?Ve\Y,b/gXV*0Dh'_AR/#igG;.o,"e=)C'.ngb5C9br9<s.FCOq=kor1kD
%8Q`upAju!M"MtG5c[ZEf3;fZKla!D2c?*;.9RiX3=PPGbj%`OAL\/._l/UqFc1c@G0+1DjV,-7>f)6g\\fZY8Tu3^<d@kW<RXr&S
%VAe1!)i#bQbq;)%L9R>RbZnKiM<7(Z@A,nTrbgu:[#aGN>iNEi.oKNW]"&GZH=#QB,&Diq(=+oN>f*OAh^i<hif1f`0Yj?Wfdh'g
%h2g?kbEUViaTJm4;OPC!n!>k*e$c?I#LZjgcDY^#9'4'DrZqhDFgK>b3h*G'?D_jY.`u"ud?Kkj"h2Ru26qAR)mdeQN^baJ9S,W&
%$?K7E^3V%P].G)S?it"n[u<G2>p%#''*o_7'Lfe(RBH#_eP2)b?XVkVa:V9hKE2YKYN+pHJIA>UBIZbD7CbiVR7QHl\pU5d,E?<L
%)@C-PEphDkVV+PG*7jrbcJL!YApTr4!cbT>ZeQhMP#f(PE>VTnnJ%Cam8R#dU+*C0Qa)/0Q'<abQ?WB5]'J?[VTR6Un.RN0mQ.RS
%82T89R!bS<n'CUq5!M[S]og7h9hKnYe%b7Mlm>jmJmo_t>O(-CEa[euhjfrPV7s&QX,uA'Lpp>j26&^SrUa)[EuWQGg[=ZMeH/A:
%miY6K(!93%-L&A$iljr-JiKf@LZZ&5De@S)oJT*=a?Fs/\<<("63/?@e:.kUR^d@UTKK%P_=2?4kt&NI9*OmfeBY*,Pq7d%cm&r+
%%F7drlcEjDIo$8<\J!X(Z`Lq&G^jbu"eZ4qLn0:jRM:[I0grQQn?6C4hn4_f!@f"];>#\gEB1"^S2H!B)(uQ;W_)#aG#5t;*Y-PD
%2HcIEX,Y\bY=K6p#_7?)KjEE1JcQen[%ufUjL*BnF>E2;JT%m='Ut&?@0W4WN#k0%mDqW.Z^"&c;5t%h5T=\dcfHoIq629A1\%/m
%0>8-:X`F-kKn7T)K_E<-pW]?JIN&J_[8c0tlgV+l8g?us&^^B:!r;$*W0Lh639aBeUJA/q7+?#5a</B&D&\2J<&BbiFB][\a9YhC
%4RMi@l03K=?cVV8DCJ![8EXJTIb%`!`S;il*$37g1!GY]H1oMZkdS4U4EhdQ*HA^p9jM>XUg'?;-Qb2H$/'G56AQ^aYL.[Q`I7L:
%'A6&1W#"6U1o.A;mHQ`cTEJ\!_r3NUAA^D/mO?_Y(H1f$0X;2r8Kr#!PIac]16ck9W<GE^,On>SJ6OpfCr(X0\D-Z6m^AH4jEf[[
%CH[Q%g"FJ8as9Ah^(G[NQ#@Z?]!0?Kc#f<Hb>PaTR,A)toXj8nDC7.@iO/tBL\"J!6MI75rCA.\>9SS+"Q^'hg[u=oaH8TKYX-,B
%^`N1A/eE-f]7'[OHj?^pb^][>-$ANS89<A')WAhJ.gK3%Ai^U%I/(5*\s5(s0PiGj<j,r#%HlGi":)c4flf2/cEBW/XjSseEjQ&V
%K\f8;rhYbLN!<_^Cd"Z,&=MReERVmWKKsri)HXu%"2eG0#$$[tjE)JFUs-]I^9+Z8E..NMD=3bqM90Jb75$Ro)O>TNeE3$TSg;Ht
%:V1h,G1,-g@\j[j7(qQTg%ZbmFse3b1g^KbDp;Y_rG_5e*cc!pF*#=UXW+tPmKPslS+p3;$BBZUZ)6E^B&!bqj*1bG#CYpZ;G'J5
%^(lc8iDkBY$o!fm]&cT$VNY-5GUrGpl,&=l=FI`[%F(hC9E;A9@"sYc[b^;)(AP-k,pQrbDgc4=j"UhTjjW$/Tt]E+]RhV$14\l=
%l7E;ZQ1XiJe6J1ZK$$69>jO#h6-$"UCGGRSIgm*p@=;mp"K'0JW>[3+"8jY8%-:&2f*0R8@>Ck8<Pnl2`.L@aqmJ'I$>t)Ge#J-t
%-,V[G8MJ=2#dp-'?8:>_[Z1JWdge=:R2l2M"MH<o6HPdC6BJ%?TpCY-D(Vb\D3EV5KkgC(hA:QH"&UuqOg7N]ib&cgC9u&!2H8o8
%JP_>?B1.b1P]'HAoIP8KJt^d5"!\iMB4h>M=^J;X]X_"Ii;O9qkI\[&H!#?QEuZZ(M`rpqb9_;bm.hIJ@!3BIQ!^_P7D=X>o-5c>
%NiM3fiH(N2EN2$m`,X+%6"l*J$/R1@>?,>%rdK%=_K&7N4i!iN()6m$br]aRpm*fIB1rZO'!Ej9&R`u2fQI/32VUhk?/.XM;hLp,
%prJ(+`$9hF;KBOo6ZDD:IC$>nYjJ1aTGl,$koB^h`rX8HcgAQ+5@/\9fJB;o,$L1VbH!=$olR(BDS5LW!i/DdXHI9"`&XcO/N%<d
%<3P@%(RL[G5G0>bf@-^U`E??\riXNV%]n'sK\*`=li>0'.2'<P^0$j/alLm_`WgB#)9Jlc(Hgps>O3"-qDfPC7-D\pdddh9%ch0;
%(*,TdDEWK/qc/6f]Xu[&!6OrPStP6S(g0r'Ha.4LdG><-h0YNkVf[HL,&P%GH9]eF!o"Kg=%0/K6:&@oGpseIXY4N.Z^U0Ck)-<e
%4-b5p%CK%a`S8gj/>S^+=CEGQJ[Q1SA6Wl3:h[80Q\UbC1bq]VT\Ae3hIHke:Q#0[!>Rq+E'OcfmHG5MG=S!bC$]lU#Z%`P1+[=&
%6>k6CA-cg1bt5ncMi9(CoR<f_Tg1T\O(Ic8ACYXJ.q75NT/FX^1oFR.cH+jDEk>T!bS$ns/ZGs%0I19DQ8p`"VN2\nG_`LDg%rW^
%f!)$l*;Q%b5`MT)XdL#TJ+)9$mJNS6J(O_RJ,K,g^O?"(r:%m:IJE,8^A[3g^WG<^J,B3%f`1m$^Xh!%J,K)tVa(.TnK7e\B'\@Q
%o^Uh25(*;-q]C:dq"(D54oa,hmsb3,e'C8Vq!#[lJ,eIl)UUjS"+Kcuhu;SYhgY0(8L/Y1~>
%AI9_PrivateDataEnd
