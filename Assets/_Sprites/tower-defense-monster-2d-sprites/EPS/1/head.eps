%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: head.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/13/2018
%%BoundingBox: 0 0 517 576
%%HiResBoundingBox: 0 0 516.3810 575.7447
%%CropBox: 0 0 516.3810 575.7447
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 116 128 8%%BeginData: 23274 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD05FF7D272727267DFD6DFFA726F826F827F87DFD6CFF7DF82726
%272027F8A8FD6BFF2726F827F827F82620A8FD69FFA82726272627262726
%2727FD69FF7DF827F827F827F82720F852FD68FF27272627202726272027
%26267DFD66FFA827F827F8264B51F827F827F8267DFD3FFFA8FD25FFA8F8
%272627207C7C4B20272627F84BFD3EFF7C524BA8FD23FF5220F827F82776
%7C5227F8272027F852FD3CFF7DF8F826F8A8FD22FF522027202751A07C7C
%272720272627F87DFD3BFF51F827202652FD21FFCAF827F827F8767C7C27
%2D2626F827F826F8A1FD39FF7DF827F827F827CFFD20FF7D27262726277C
%A75251275126272627262726A8FD38FF27272627262720A8FD20FF7DF827
%202726A67C522651272720272027F82627FD37FF7620F8272027F8267CFD
%20FF5226202720517CA07C512751275120272627202727FD35FFA8272627
%20272627F852FD1FFFA827F827F82651A6767C272726512727F827F827F8
%2051FD33FFA827F827F827F827F826F8FD20FF27272627207CA67C7C7C27
%512751275126272627262652FD32FF52F82726272027262726277DFD1EFF
%7D27F827F8277BA67C7C512D2651272D2727F827F827F82052FD30FF52F8
%27F827F82720272027F876FD1EFFA7F827262726A6A67C7C7C5151275127
%51272726272027262652FD2EFF7DF827262720275251F827262727FD1EFF
%52F8F827F8277CA67C7C51512751265127272627F827F827F8F852FD2CFF
%7DF826F827F8264BA05126F827F826A1FD1DFF7DF827262727A7A67C7C7C
%515251512751275127272627262720277CFD2AFFA8F827262726274BA77C
%7C20272627F87DFD1DFF5126F827F851A6A67C7C51512D51275127272651
%2727F8272027F82652FD28FFA8F8272027F827277C7C7C5127F827202052
%FD1DFF522027202751A7A67C7C522D52FD04512751275127272027262720
%2652FD27FF27272027262727A67C7C5152272720272027FD1DFF2727F827
%F851A6A67C7C515127512D512751272726512627F827F827F82027FD0CFF
%A87D7D52522751274B264B27272752527D7CA8A8FD05FF2720F827F82726
%A07C7C76512627F827F827F8A8FD1CFF272627262751CEA6A17C51262727
%512752515127512751272726272627262627FD07FFA8A852512627F826F8
%272027F8272027F827F826F827202727527DFF7D272627262726FD057C27
%512727262726277DFD1CFFF8272027F87CA6A67C7CF826F827F82727512D
%2D265127512627F827F827202020A8FFFFFFA85127F826F826F8272027F8
%272027F8272027F8272027F827F826F8262027F8272027F8FD057C2D5126
%512627F827F87DFD1CFF272027262751CEA6A05127262720272627275251
%51275127512727262720272627F8A8A851F8272627202726272027262720
%2726272027262720272627202726272027262720272051FD047C51525151
%27272627202752FD1CFFF827F827F87CA6A67C51F827F827F827F8262651
%27272651272D2627F827F827F826F827F827F827F827F827F826F826F826
%F827F826F827F820F827F826F827F827F827F827F827277C7C7C51512751
%27272027F827F852FD1CFF27262726277BCE7C7C7C272627262726272627
%27522D51275127512727202726272627262726272627202720272751517C
%75FD047CA07C7C517C51512627F827202726272627262726527C52515251
%5127272627262727FD1CFF2027F827F87CA6A67C7C27272027F8272027F8
%2727512751272726512727F8272027F8272027F827F827517C7CA6A6A7FD
%07A6A7FD06A67B7C2727F827F827F8272027F82727512751275126272027
%F851FD1CFF27262720277BCEFD047C202726272027262720272752275127
%512751272720272627202726274B7CA6A7A6A7A6A6A6A7A6A6A6A7A6A6A6
%A7A6A6A6A7A6A7A6A7A67C2727F82720272627F827275127512727202726
%2727FD1CFFF827F827F87BA6A6767C5127F827F827F827F827F827265127
%51272726512727F827F827F827F851FD04A67CA67CA67CA67CA67CA67CA6
%7CA67C7C7CA67CA67CA6A6A67B51F826F827F827F827262726512626F827
%F852FD1CFF512627262751CEA6A07C7C2727262726272627262726272752
%5151275127512751262726272627F852A6A67CA77C7C7CA0FD0F7CA77CA6
%A6A7A07C2727262726272627265127272027262752FD1CFF27272027F851
%A6A67C7C515126272027F8272027F8272026265151512751272727512027
%F8272027F851FD167C76FD077C5127F827F8272027F8272627F827F852FD
%1CFF52F827262727A7A6A67C7C5151202726272027262720272627275251
%52275127512751262720272627F852FD0E7C52FD0E7CA07C512027202726
%2720272627202752FD1CFF52F8F827F8277CA67C7C51512727F827F827F8
%27F827F827F826265127512651272726512026F827F826F8767C7C767C7C
%7C517C51522D51275151FD077C767C7C7C76FD047C51F827F827F827F827
%F827F87DFD1CFFA7F827262726A6A6A67C7C515227272627262751272627
%262726272752515227512751275126272627262727FD057C525251512D52
%51525152515251FD047CA17C7C7CA07C7C7CA17C51202726272627262726
%267DFD1CFFA726F827202651A7A67C7C522D51F8272027F8764B27F82720
%27F82727512751272726512727F8272027F82727525152515127512D5127
%512D512751275127FD0451FD097C5251F8272027F8272027F87DFD1DFF27
%272027F851A6A77C7C5152512720272627517C272720272627F827FD0451
%27512751272720272627F85151512D525151515251512D52515151525151
%2DFD0451FD097C2D5126272627202726267DFD1DFF51F827F82726A6A6A6
%7C7C27512626F827F827512D2627F827F827F8512D512751262726512727
%F827F8272751275127512751277C51512751275127512751275127512752
%51FD047C76262D2727F827F827F827F87CFD1DFF5226262726277CCEFD04
%7C515120272627267C275127272627262727525152765127512751275127
%272752515251525152517C7CA75152515251525151515251525152515151
%7C7C7C51512751275127272627262720A8FD1CFFA8F827F827F851A6A67C
%7C51512727F827F8275151275126272027F8275151275251272651272727
%51275127512D5127512D51517C7C5227512D51517C515127512D5127512D
%51275251512651272727512027F8272026F8A8FD1CFF272027202726A6A6
%7C7C7C51512627202720525151275120272627275251512D525151275127
%5127FD0451525151515251515158FD045152A07C7C515151525151515251
%512D52515127512751275126272027262627FD1CFF5220F827F82651A6FD
%047C2727F827F82727512651272726272651275127512751272726512727
%27512751275127512751275127512751277C7C7C76512751275127512751
%27512751272D265127272627F827F827F8F827FD1CFF2627262726277CA7
%FD047C272726272627515127512751275127525152515251525151275127
%5251525152515251525152515251525152517C7C7C515251525152515251
%525152515251512751275127512627262726267DFD1BFF52F827F827F851
%A67C7C7C5127F827F8272751275127272651275127512D5127512D512751
%2D5127512D512751275127512D5127512D51275151522751275127512D51
%27512D5127512D512751272726512727F8272027F826A8FD1AFFA8272627
%2027F87CA67C7C7C512726272752FD04512751275151512D52515127FD04
%515251515152515127FD0451525151515251515152515127512751515251
%512752515127FD055127512751272720272627F851FD1BFF5220F827F827
%F8FD057C2751275127512751275127512751275127512727265127512751
%275127512727265127512751275127512751275127272651275127512751
%27512727265127512751272726512727F827F827F87DFD1BFF2727262726
%2727A6FD047C51525152515251525152515251512D522D51275127515152
%51525152515127525152515251512D512751275251522751275151525152
%5152515127515152515251512751275127272627262726FD1BFFA8F826F8
%27202626FD057C275127512D5127512D5127512727275127272651275127
%51515127512D5127512D5127515151265127512751515127512D5127512D
%5127512D5127512D5127512D5127512727F8272027F82652FD1BFF7DF827
%2027262727FD057C51515152515151525151515227512751275127512727
%2651275127525151515251515152515127FD085152515151525151515251
%51515251515152515126272627202726272027A8FD1BFF52F827F827F826
%26FD047C522751275127512751275127512651275127272627F826F82720
%272651275127512751275127512751275126512751275127512751275127
%512D51275127272627F826F827F827F827F827F852FD1CFF52F827262726
%27277C7CA17C7C2D52515251525151517C27515152FD0451262726272627
%2027262727FD045152515251525152275127515152515251525152515251
%5127512727202726272627262726272627262726FD1CFF7620F8272027F8
%2726FD047C5227512D512751277C7C7C275127512D5127272027F8272027
%F827F827F827262726512751275127512651275127512751275127272027
%2027F8272027F8272027F827F827F8272027F82676FD1BFF512027202726
%27202726527CA17C52275251515152527CFD055152515126272627202726
%272027262720272627F8272627202726272627262720272627F827262720
%2726272027262720272027F851272720272627F851FD1AFFA8F827F827F8
%27F827F827F84B517C7C5127512751275127512751275127512D51F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F827F827F8F8F82751A09F27F827F827F826F8A8FD19FF5227
%26272627262726272627F84B52A77C585152515251515152515251525152
%5127262726272627F8272627262726272627262726272627262726272627
%26272627262726272627F827265151A6C8CDCD7CF82726272627262752FD
%19FF4BF82720272651F827F8272027F827277C7C512D5127512D5127512D
%5127512D5126272027F82726512627F820F827F827F827F827F8272027F8
%272027F8272027F8272027F82727757BA6A6CDC8CDC8A0F8272027F82720
%27F827FD19FF26272027205251512627202726272027277C515251515152
%51515152515151522D5126272627202775CDA6A67B754B51272720272627
%F82726272027262720272627202751A6C8CDCDCDC8CDC8CDC8A626272027
%262720272627F8A8FD17FF7D26F827F827517C27512626F827F827F82726
%5127512751275127512751275127512727F827F827F82775CDC8CDC8C8A5
%C89FA67BA07B7B7527F827F827F827F827F827F827265175A09FC8A5C87B
%51F827F827F827F827F827F8F852FD17FF7DF8272627277C7C5251522727
%262726272627515251525152515251525152515251512727262726272627
%51CDC8CDC8CDC8CDC8CECDCEA6512627262726272627262726272627F827
%262726512727F82726272627262726272627F852FD17FF27262027F8517C
%7CFD04512727F827F827265127512D5127512D5127512D51275127272627
%F827F827F82026A0A6CDC8CDC8CDC8C85127F8272027F8272027F8272027
%F8272027F827F827F827F827F8272027F8272727F8272026F8CFFD16FF27
%F827262751A77C7C275251512D5126272652515151525151275251515152
%515151522D512727262720272627F85175A09FA67B752627262720272627
%265127272627262720272627202726272027262720272627275127272027
%26267DFD15FFA8F826F827F87C7C7CFD0451275127512751275127512751
%51512751275127512751275127272627F827F827F827F827F827F827F826
%F827F827F8272627265127272627F826F827F827F827F827F827F826F827
%27272627F827F827F827A8FD14FFA727262726277CA77C7C517C51515152
%51525152515251527CA17C52515251525152515251522751272720272627
%262726272027262726272627202727512751275127512751272726272627
%262720272627265127512751272726272627F8A8FD14FF7DF827F82726A6
%7C7C7C5127512D5127512D5127512D51277C7C7C2D512D5127512D512751
%2D5127512727F8272027F8272027F8272027F827F8272651272726512727
%265127512751272726272627262727512751275127512627F827202027FD
%14FF7C262627F84BA6A67C7C5151515251515152515151525151517C5151
%51525151275227515152FD04512751262726272027262720272627264B27
%512751275127512751275127512751275127512751275127512751272726
%51262720272627A8FD13FF76F827F82626A67C7C76512751275127512751
%275127512751275127512751262D27512751275127512751275126272027
%F827F827F827262726512727265127512751272726512727265127272651
%272726512727F827F826F827F827F827F852FD13FF52272627F851A6A67C
%7C51515152515251525152515127515152515251525151515251512D5251
%525152515251522751275127512751275127512751275251525152515127
%51275127512751275127512752515226272627262726272627262720FD13
%FF52F82720264BA67C7C7C522D5127512D5127512D512751275127512D51
%2751515127512D5127512D5127512D51275127512751272D265127512751
%2D5127512D512751517C51512727265127272651275127512727F8272027
%F8272027F827202052FD12FF52262027F851A6A6FD047C51515152515151
%52515127512751515251515152515151525151515251515152FD04512751
%2751275127FD045152515151525151517C7C7CFD04512751275127FD0551
%2627202726272027262720272627A8FD11FF52F827F82751A6FD047C5151
%275127512751275127512651275127512751275127512751275127512751
%27512727F827202D27512751275127512751275127512751767C7C512751
%275127512751275127512727F827F827F827F827F827F827F852FD11FF52
%272627F87CA6A77C7C7CA051515152515251525152515227515152515251
%525152275151525152515251525151202726272651275127525152515251
%5251525152517C7658515251525152515251525152515126272627262726
%2726272627262720FD11FF52F827F82751A6FD057C762751517C51512751
%2D512751275127512D5127512D512651515127512D5127512727F8272027
%2651272727512D5127512D51275151512751275127512D5127512D512751
%2D5127272027F827F827F8272027F827202052FD10FF52272627F852A6A0
%FD047C515151527C7C5151515251512DFD04515251525152515151525151
%5152FD045126272027262727512751275251515152515127FD0451525151
%5152FD04512D5151525151F8272627262726272027262720272627A8FD0F
%FF7CF827F8204BA67C7C757C7C7C27512752515127512751275127512751
%277C7C7C2751275127512751275127512627F827F827F827265127272751
%2751275127272651275127515151275127512651265127512626F827F851
%5126F827F827F827F827F852FD0FFF7D262627F852A6A67CA1767C7C5851
%5251525152515251525152515251527CA776525152515251525152515251
%27262726272627205127512751515251525151275127515152517C515251
%5227512751275251272027262752CA2627262726272627262720FD0FFF7D
%F827202627A6FD047C767C51512D5127512D5127512D5127517C7CFD0451
%27512D5127512D5127512D51F8272027F8272027F851272726512D512751
%2727265127512751515127512D512651275127512027F827F87CCF51F827
%F8272027F827202052FD0EFFA82720272051A6A07C7C517C7C7C2D525151
%515251515152515151A07C7C2DFD0451525151515251512D522D27202726
%27202726272651275127FD05512751275151512D52515151525151275151
%52272726272027A1CF7C2726272027262720272627A8FD0DFFA8F826F827
%26A6FD047C517C7C51275127512751275127512751517C51512751275127
%512751275127512751F827F827F827F827F8262651272726512751275127
%5127512751275127512751275127512D27F827F82626CAA8A7F827F827F8
%27F827F827F87DFD0EFF2720272627A6A7FD067C51525152515251525152
%51525152FD04512751515251525152515251522727262726272027262726
%27275127512D52515251525152FD04512751275251512D52515226272627
%F852CFCFA7522027262727272627262727FD0EFF2726F82720FD057C517C
%7C7C27512D5127512D5127512D5127512D512651275127512D5127512D51
%2727F827F8275151F8272027F82727272651275127512D512751272D2651
%27272751272726512727F827202052C9A0A651272027F8272627F827F827
%A8FD0DFF7CF82720277CA7FD047C52A07C512D5251515152515151525151
%5152515127FD04515251515152515126272627F87DA727F8272627205127
%5127FD045152515127512751275127512751275127512627202726A0A6C9
%A6A020272627202726272027F87DFD0DFF7C20F827F87CA67C767C527C7C
%7C5151275127512751275127512751275127512751275127512751275127
%27F827F8267CCF52F8F827F826F851272726512751275127512651272726
%51275126512751F827F827F851A0A051512627F827F827F827F827F82651
%FD0DFFA82627262751CEFD047C767C7C7C51525152515251525152515251
%5251525152515151525152515251512027262726CACFCF27272627262727
%51275127525152515251525152515251522D5127512727262726274B5126
%272027262726272627272726272627FD0DFFA827F827F851A6A6FD087C27
%51277C7652275127512D51275127512751272727512D5127512627F827F8
%51A7CFCA7DF8272027F827272D26512D5127512D512751515127512D5127
%512D27F8272027F827F827F8272027F8272027F8272027F82720FD0EFF27
%27262726A6A6A6FD077C5227587CA052FD0451525151517C515127512751
%515251512D272627202752CFA7CFC951F82726272027275127FD04515251
%51275127515152FD04512627202726272027262720272627202726272027
%262720277DFD0DFF7CF827F82651A67C7C767C7C7C767C51517C7C765227
%5127512751277C7C522727262D275127512D51F827F827F87DA7A7A0C97C
%27F827F827F8272727265127512651272726512751275127272627F827F8
%27F827F827F827F827F827F827F827F827F827F82027A8FD0BFF7D272627
%F87CA6A7FD057CA07C7C7CA77C525152515251525151517C515227512D51
%51525152272726272027A0C9A0A67C7C2727262726272751275127512751
%274B274B2727262726272027262726272627262726272627262726272627
%262726272627262726A8FD0AFFA8F827202626A6A6A676FD077C517C2D51
%27512D5127512D5127512D5127512D5127515127F8272026267C5127F827
%F827F8272027F827262726272627F827F827F827F827F8272027F8272027
%F8272027F8272027F8272027F8272027F8272027F827202620FD0BFF51F8
%2726277CA7A6A0FD087C5152515151525151515251515152515151525151
%5152262720272627F8272627202726272027262720272627202726272027
%26272027262720272627202726272027262720272027F827262720272627
%202726272027262652FD0AFF52F8F827F851A6A67C7C767C7C7C767C7C52
%27512751275127512751275127512751275127512727F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F82720272651275126272026F827F827F827F827F827F827A8FD
%09FFA8F827262727A7A6A7FD057CA07C7C7C525152515251525152515251
%525152515251525151262726272627262726272627262726272627262726
%27262726272627262720272627262726272627274B275127512D5252A77C
%A17C7C51522727F827262726272627F8A7FD09FFA827F827F8277BA6A6A6
%FD087C51512D5127512D5127512D5127512D5127512D5126272027F82720
%27F8272027F8272027F8272027F8272027F8272027F82726272627262726
%51272D2751275127512751275151FD097C2627F827F827202052FD0AFF52
%262027F851A6A7A6A6FD087C515251522D52515151525151515251515152
%512720272627202726272027262720272627202726272027272726512751
%2751275127512751275127512751275127FD06515276A0FD047CA6A65127
%20272027F852FD0AFF7DF827F82726A6A6A67C7C767C7C7C767C7C52517C
%51512751275127512D51275127512627F827F827F827F827F827F827F827
%F827F827202726272651272D265127272651272726512727265127272651
%27512751275127512751517C7C7C767CA6A67B27F827F82627FD0AFFA827
%2027262751CEA6A7FD057CA0FD057C525152515251525151274B27272627
%262726272627262726272627262726272751275127512751275127512751
%275127512751275127512751275127525152515251525152515251FD047C
%A6A6CE512726272052FD0BFF5220F827F8277CA6A6A6FD087C51522D5127
%512D512727F827F8272027F8272027F8272027F827202726FD042751272D
%26512727265127272651272726512727265127272651272727512D512751
%2D5127512D51275151FD047CA6A67CF827F82627FD0BFFA8F8272027F87C
%A6A7A6FD097C5152515151525127F8272627202726272027262720272627
%265127512751275127512751275127512751275127512751275127512751
%27512751527C7C5251512D5127512D52FD05517C7CA6A6A751272627F87C
%FD0BFFA827F827F82726A6A6A67C7C767C7C7C517C7C7627512751275126
%26F827F827F827F827F827F8272627272D26512727265127272651272726
%51272726512751275127512751275127512751277C7C7C27512751265126
%512751275127517C7C7CA6A651F827F8F852FD0CFF7D262627262751CEA6
%A07CA07C7C7CA17C7C7C525152515251512027262720272627264B275127
%512751275127512751275127512751275127512752515251525152515251
%52515251525152527C5252515227512751275251525152517C7CA1A6A626
%272627F8A8FD0DFF2626F827F8277BA7FD087C517C51512D5127512D2726
%27262726FD04275127272651272726512727265127272651272727512751
%27512D5127512D5127512D5127512D512751515127512D51265127512751
%2D5127517C7C7CA65126F827F827A8FD0DFF7DF8272027204BA6ADFD0A7C
%FD0551525151275127512751275127512751275127512751275127512751
%27FD04517C51515152515151525151515251515152515151525151515251
%51275127512752515151FD047C272627202751FD0EFFA827F827F827F851
%A6A67C7C767C7C7C51527C7C275127512751272D26512727265126272651
%2727265127272651275127512751275127527C7C27512751275127512751
%275127512751275127512751275127272651272727512751517C7C51F827
%F827F87DFD0FFF7D2626272627F87CA6A7FD057CA1517C7C7C5151515251
%525152515127515151275151512752515151525152515251525152515151
%7C5251515251525152515251525152515251525152515251525151275127
%5127525151517C7C7C262726272027CFFD10FF2720F8272027F87CA6A676
%FD057C517C7C7C515127512D5127515151275151512751515127512D5127
%512D5127512D5127512D5127512D5127512D5151A17C5127512D5127512D
%5127512D5127512D5126512751275127517CA04B26F827202052FD12FF26
%272027262726A6A6A6FD067C517C7C7C5151515251515152515151525151
%5152515151525151515251515152515151525151515251515152517C517C
%5151515251515152FD045127515152515127515151275176A05227262720
%2720A8FD12FF7DF826F827F82620A6A67C76FD057C2D7C7C7C5151275127
%512751275127512751275127512751275127512751275127512751275127
%512751275127272651275127512751275127512751275127512751275127
%51517C7C27F827F827F852FD14FF7DF8272627262727A6A6A77C7C7CA07C
%7C517C7C7C51525152515251525152515251525152515251525152515251
%525152515251525152515251525151275127525152515851525152515251
%52515251525152517C7CA77C51F82726272027A8FD15FF52F8272027F827
%F87CA6A6FD067C517C7C7C51512D5127512D5127512D5127512D5127512D
%5127512D5127512D512751767C27512D512751272726512D512D7C7C5227
%512D5127512D5127512D5127FD047C52F827F82720F87DFD17FF52F82726
%2720272051A6A7FD067C517C7C7CFD055152515151525151515251515152
%515151525151515251512D5251515152FD045127512D5251527CA7515151
%525151515251515152517C7CA07C5220272627202651FD19FF52F827F827
%F827F8277BA67C7C767C7C7C517C7C7C5151275127512751275127512751
%275127512751275127512751275127512751275127512751275127512751
%5151275127512751275127512751517C5151F826F827F82620FD1BFF7DF8
%2726272627F82751A67CA17C7C7CA1527C7CA77C522D5251525152515251
%525152515227512751515251525152515251525152515251525152515251
%525152515251525152515251512D7C7CA77C51262726272627F8A8FD1CFF
%7DF826F8272027F8272652FD067C767C517C7C7C27512D5127512D512751
%2D512751272726512D5127512D512751275127512D5127512D5127512D51
%27512D5127512D51275127767CA05127F8272027F827F87DFD1EFFA82726
%202726272027204B51A77C7C7CA07C7C767C7C7C51525151515251515152
%515127512751515251515152515127512751515251515152515151525151
%51525151515251512D7C7C7C5127202720272627F8A1FD21FF52F8F827F8
%27F827F826267C7C7C767C7C7C517C7C7C5152517C515127512751275127
%512751275127512751272726512751275127512751275127512751275127
%512751277C7C7C2626F827F827F826F87DFD23FF7D27F827262726272627
%265151A7FD077CA77C7C5152515151525152515251525152515251525152
%2751275151525152515251512D512751275127512751517C7C5226272627
%2627262726A8FD25FFA852F826F8272027F827F82626767CA67C7C7C5251
%FD057C515127512D5127512D5127512D5127512D5127512D512751275127
%5127272651272726512727277C5127F8272027F827F8F827A8FD28FFA827
%26F827262720272627F827517C7CA7FD097C522DFD04515251512D515151
%275127512751275127512751275127512751275127512751262726272027
%2627F82752FD2CFF7D27F826F827F827F827F827F827277C7CA67CA67C7C
%767C7C7C5151275127512727265126272651272726512727265127272651
%272D26512627F827F826F827F827F827F8277DFD2FFFA72726F827262726
%27262720272027277C7BA67CA17CA17CA77C7C5152275127512751275127
%51275127512751275127512751FD042720272627262726272027267DFD33
%FF7D51F826F827F8272027F827F826F82720272751517651FD047C512751
%2751275127512751275127272627262720272027F8272027F8272027F827
%F82652FD37FFA85227F826202726272027262720272627F8272627264B27
%51FD04272627272726272727262726272027262720272627202726272027
%F826267DA8FD3AFFA87D2726F826F827F827F827F827F827F827F826F827
%F826F827F826F827F826F827F827F827F827F827F827F827F827F827F8F8
%F8517DFD40FFA8A15227F827202726272627262726272627262726272627
%2627262726272627262726272627262726272627F82726527CFD46FFA8A7
%52522626F826F826F8272027F8272027F8272027F8272027F8272027F827
%2027F827F8F8F82727527DCFFD4DFFA17D52522727F826F826F827262720
%27262720272627F8272026F8272027275252A1A8FD54FFA8FFA87D767D52
%512727F827F827F827F82720272752527D7DA8A8FD24FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-13T13:56:13+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-13T13:56:13+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-13T13:56:13+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>232</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADoAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q+E/zV/MXV/NvnLUL&#xA;367KdLhneLSoFciNLeNiEZVG3JwOTHrX6MpJtmAlnkPz9r/kvzDDrGlzN8LD63aFiIriKvxRyDet&#xA;expsdxiDSkPubyf5t0fzZ5etNd0iT1LS6WpRqB45Bs8Ug7Mh2P3jahy0G2Cc4VdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVYd+b/mQ+Xfy217U0bhP9Wa3tmHUTXJ&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stRef:instanceID>
            <stRef:documentID>xmp.did:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:46:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:56:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>516.380942</stDim:w>
            <stDim:h>575.744671</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -575.745 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 575.745 li
516.381 575.745 li
516.381 0 li
cp
clp
507.132 436.626 mo
504.123 411.895 490.587 398.312 475.186 385.839 cv
472.875 376.831 469.995 367.842 466.328 358.851 cv
466.054 358.176 465.68 357.577 465.338 356.952 cv
466.649 353.629 466.845 349.758 465.145 345.749 cv
450.946 312.239 436.148 278.974 421.565 245.629 cv
420.4 242.965 418.595 241.239 416.52 240.143 cv
414.649 236.053 412.711 231.985 410.688 227.943 cv
399.116 204.81 386.203 191.577 368.775 177.661 cv
370.828 168.378 372.556 159.007 372.728 149.757 cv
376.465 127.758 379.284 105.636 378.034 83.4758 cv
377.131 67.488 353.891 58.2834 345.663 74.7072 cv
336.392 93.2141 326.404 111.579 313.445 127.814 cv
313.348 127.934 313.243 128.044 313.146 128.164 cv
283.643 111.44 248.718 106.185 209.614 113.829 cv
184.109 118.816 157.102 123.113 145.105 145.247 cv
141.878 141.38 138.659 137.506 135.416 133.65 cv
127.33 123.403 119.253 113.148 111.194 102.878 cv
100.242 85.4802 88.369 69.1858 75.0116 55.2131 cv
74.0604 54.2175 73.0272 53.4773 71.9632 52.8816 cv
66.306 44.5422 60.8402 36.0647 55.786 27.2893 cv
50.4266 16.1408 35.45 23.1623 35.5936 33.573 cv
33.3665 34.6535 31.4544 36.3542 30.2796 38.9558 cv
24.2645 52.282 23.9901 69.4392 24.7581 85.9416 cv
21.1117 125.743 14.3006 179.246 37.158 211.102 cv
40.0306 215.106 43.7122 217.147 47.4071 217.677 cv
51.7386 225.007 56.8597 232.036 62.7581 238.722 cv
62.7699 238.781 62.7791 238.841 62.7909 238.901 cv
59.2952 240.372 56.4286 243.418 55.3128 248.458 cv
54.6986 251.235 54.2074 253.994 53.6663 256.758 cv
52.3582 258.34 51.2943 260.301 50.6678 262.781 cv
41.9608 297.267 38.6771 332.133 43.7948 367.518 cv
45.6517 380.358 47.3563 400.685 54.9539 415.044 cv
55.3333 449.348 76.2411 474.908 104.01 498.132 cv
126.385 516.844 167.387 552.044 199.873 544.018 cv
202.308 543.417 204.404 542.643 206.258 541.748 cv
280.446 584.454 395.169 553.668 463.091 513.349 cv
494.052 494.971 511.755 474.62 507.132 436.626 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.352941 .364706 .231373 rgb
f
108.672 254.95 mo
95.1971 239.99 81.0452 226.917 68.8382 211.928 cv
62.0682 198.387 56.722 183.738 50.4173 170.029 cv
49.6038 163.053 48.3792 156.049 47.0584 149.039 cv
46.9339 136.477 45.7464 123.894 45.8475 111.193 cv
46.036 87.5178 48.1527 64.0256 50.5741 40.4919 cv
51.078 35.5969 46.6683 33.0012 42.4759 33.1711 cv
42.3787 32.4138 42.347 31.6506 42.2357 30.8947 cv
41.4901 25.8298 34.1097 25.675 31.8309 29.5349 cv
16.4339 55.613 16.4876 91.3405 18.1341 120.821 cv
19.4676 144.704 20.6605 173.491 34.0052 194.07 cv
40.2157 218.101 50.2308 240.539 69.2166 248.097 cv
77.1527 257.421 86.3221 265.518 97.2484 271.287 cv
108.112 277.023 117.779 261.305 108.672 254.95 cv
cp
.611765 .588235 .396078 rgb
f
93.4891 177.837 mo
92.5052 173.279 91.8573 168.655 89.6693 164.5 cv
87.4149 160.762 80.3294 160.167 79.2503 165.617 cv
78.3143 170.35 79.0457 174.969 79.4691 179.735 cv
79.8866 184.433 80.1092 189.588 82.7489 193.611 cv
85.7064 198.119 92.7826 197.509 94.3407 192.096 cv
95.6751 187.461 94.4896 182.474 93.4891 177.837 cv
cp
f
205.197 531.91 mo
204.92 530.97 204.527 530.072 203.954 529.328 cv
204.065 529.282 li
203.971 529.203 203.867 529.14 203.773 529.061 cv
203.257 528.456 202.614 527.998 201.899 527.652 cv
191.612 519.508 179.865 513.722 169.005 506.356 cv
164.171 503.078 159.573 499.513 155.076 495.83 cv
154.683 495.305 154.404 494.766 153.921 494.258 cv
149.053 489.119 143.965 484.427 138.769 479.919 cv
136.342 475.332 132.969 470.926 129.234 466.644 cv
123.571 454.647 119.291 441.717 115.021 428.829 cv
117.764 434.968 120.752 441 124.087 446.752 cv
122.882 447.516 122.227 448.968 123.301 450.544 cv
139.554 474.383 158.883 495.668 182.522 512.408 cv
193.001 519.83 205.867 528.35 219.433 535.003 cv
214.671 534.054 209.922 533.041 205.197 531.91 cv
cp
69.1956 347.325 mo
68.5955 341.107 68.3617 334.929 68.2474 328.792 cv
72.3084 348.794 76.6864 369.473 82.9085 389.35 cv
74.9403 376.094 70.7259 363.176 69.1956 347.325 cv
cp
274.443 545.256 mo
268.708 542.207 262.415 540.855 255.974 540.029 cv
236.164 528.633 213.393 522.515 193.936 509.515 cv
172.564 495.237 153.762 477.966 137.396 458.332 cv
129.043 438.56 117.397 420.145 109.255 400.138 cv
109.09 399.734 108.811 399.482 108.544 399.218 cv
109.876 400.381 111.208 401.541 112.576 402.665 cv
114.36 404.131 117.489 402.816 116.719 400.253 cv
116.114 398.235 115.465 396.242 114.785 394.251 cv
115.711 394.91 116.803 395.402 118.246 395.402 cv
126.281 395.402 126.294 382.915 118.246 382.915 cv
113.301 382.915 111.421 387.638 112.562 391.276 cv
108.894 389.247 103.155 394.48 107.295 398.151 cv
107.531 398.361 107.776 398.556 108.012 398.765 cv
106.794 398.068 105.17 398.294 104.323 399.223 cv
101.951 393.528 99.4076 387.966 96.4364 382.722 cv
95.3255 380.762 93.536 379.893 91.6732 379.73 cv
87.2816 364.755 82.7396 349.801 78.8446 334.694 cv
79.0155 334.294 78.9202 333.841 78.5477 333.592 cv
77.1932 328.292 75.9188 322.971 74.7684 317.624 cv
74.0116 314.103 70.3187 313.861 68.0833 315.575 cv
67.9276 301.883 67.4925 288.395 63.9476 275.144 cv
63.9827 274.619 63.9886 274.094 64.0272 273.568 cv
64.0946 272.642 63.6566 271.964 63.0316 271.505 cv
61.909 267.926 60.5482 264.363 58.8685 260.821 cv
56.5975 256.031 49.2547 257.594 47.9603 262.246 cv
38.1488 297.503 30.6292 339.728 38.5091 376.03 cv
41.1693 388.286 46.7611 403.624 55.8241 413.863 cv
61.4867 448.978 73.0921 479.136 96.8079 481.688 cv
107.579 496.768 120.476 509.434 136.128 517.102 cv
140.452 520.657 144.856 524.081 149.312 527.405 cv
149.33 527.426 149.348 527.447 149.366 527.468 cv
154.264 533.149 160.862 532.042 165.241 528.103 cv
169.921 531.101 174.874 533.425 180.181 534.395 cv
180.271 534.412 180.331 534.358 180.42 534.369 cv
181.624 534.992 182.859 535.467 184.077 536.032 cv
184.558 537.836 185.758 539.466 188.047 540.227 cv
203.231 545.271 218.615 549.501 234.336 552.517 cv
246.966 554.94 260.939 558.532 273.302 553.982 cv
276.906 552.657 278.336 547.327 274.443 545.256 cv
cp
f
342.903 76.2087 mo
342.06 77.8405 341.316 79.4548 340.706 81.0695 cv
339.686 83.406 338.648 85.8498 337.589 88.3401 cv
337.229 88.8337 336.862 89.3176 336.55 89.9099 cv
329.819 99.8899 322.902 110.284 317.463 121.026 cv
316.749 122.435 316.382 123.781 316.164 125.088 cv
315.645 125.793 315.186 126.56 314.652 127.248 cv
313.239 129.065 312.963 131.257 313.393 133.226 cv
301.537 129.127 288.166 125.649 276.425 126.739 cv
275.877 126.291 275.327 125.843 274.592 125.542 cv
263.496 120.991 247.679 119.223 232.698 121.171 cv
230.494 121.232 228.3 121.392 226.122 121.719 cv
225.968 121.74 225.813 121.738 225.659 121.761 cv
209.119 121.674 194.303 125.428 185.729 134.716 cv
180.593 137.048 175.993 139.978 173.224 144.237 cv
169.684 149.683 174.318 157.291 180.634 157.149 cv
183.873 157.075 187.087 156.953 190.289 156.801 cv
190.218 163.22 196.002 170.036 203.55 167.829 cv
205.404 167.287 207.257 166.744 209.11 166.201 cv
215.761 167.575 221.618 166.245 226.37 161.276 cv
235.708 159.707 245.161 158.504 253.965 154.496 cv
255.491 155.029 257.045 155.501 258.554 156.063 cv
271.675 160.948 283.872 168.21 297.641 167.476 cv
307.142 172.881 316.566 178.432 326.197 183.234 cv
342.857 191.537 350.982 167.408 338.508 161.197 cv
338.288 161.031 338.059 160.884 337.838 160.719 cv
342.455 154.405 341.168 143.844 331.342 140.01 cv
330.357 139.626 329.248 139.19 328.189 138.773 cv
332.05 138.918 335.899 137.257 338.197 133.145 cv
338.203 133.149 li
345.086 123.274 350.967 112.26 356.566 101.61 cv
356.635 101.478 356.66 101.35 356.724 101.219 cv
359.205 97.0227 361.626 92.7893 363.869 88.4646 cv
371.058 74.6067 350.073 62.3059 342.903 76.2087 cv
cp
f
494.871 441.044 mo
495.047 440.013 495.223 438.983 495.365 437.966 cv
495.592 436.336 494.652 435.123 493.469 434.546 cv
491.882 429.608 489.001 425.287 484.55 424.183 cv
479.382 418.731 472.32 416.063 465.179 413.563 cv
461.897 412.151 458.63 410.902 455.434 409.91 cv
455.296 409.849 455.149 409.799 455.011 409.738 cv
454.978 409.724 454.952 409.746 454.919 409.732 cv
454.637 409.647 454.34 409.522 454.06 409.44 cv
452.084 408.861 450.455 409.982 449.687 411.522 cv
445.515 410.265 441.327 409.018 437.265 407.518 cv
430.887 405.165 426.792 415.229 432.667 418.427 cv
442.522 423.791 453.21 427.928 461.41 435.873 cv
464.647 439.009 467.381 442.65 467.946 447.239 cv
468.535 452.025 466.836 456.107 468.69 460.812 cv
469.202 462.11 469.977 463.243 470.925 464.174 cv
470.551 465.619 470.21 467.052 469.665 468.551 cv
467.713 473.913 465.212 478.719 463.114 483.665 cv
462.965 483.472 462.81 483.279 462.527 483.195 cv
458.872 482.095 455.805 485.534 453.211 487.677 cv
449.568 490.69 446.194 493.982 443.021 497.482 cv
441.861 498.762 442.602 500.387 443.797 500.912 cv
434.367 506.852 425.342 513.55 418.223 521.657 cv
417.95 521.968 417.982 522.372 418.136 522.703 cv
414.822 525.023 411.494 527.309 408.084 529.398 cv
405.966 530.695 407.948 534.081 410.03 532.728 cv
417.464 527.897 425.612 522.996 432.772 517.286 cv
442.321 512.99 450.584 505.319 457.173 496.782 cv
457.98 496.291 458.745 495.753 459.563 495.274 cv
459.432 496.123 459.28 496.96 459.21 497.844 cv
458.98 500.73 462.553 503.72 465.37 502.537 cv
482.112 495.507 492.852 476.26 493.508 458.306 cv
493.539 457.448 493.396 456.677 493.377 455.844 cv
494.373 452.468 494.972 449.048 495.127 446.028 cv
495.201 444.609 495.088 442.866 494.871 441.044 cv
cp
f
350.36 540.014 mo
347.879 540.014 347.875 543.871 350.36 543.871 cv
352.842 543.871 352.846 540.014 350.36 540.014 cv
cp
f
91.8026 367.245 mo
91.3304 367.245 91.3294 367.979 91.8026 367.979 cv
92.2757 367.979 92.2762 367.245 91.8026 367.245 cv
cp
f
73.1942 305.972 mo
72.0125 305.972 72.0106 307.808 73.1942 307.808 cv
74.3758 307.808 74.3778 305.972 73.1942 305.972 cv
cp
f
74.1737 287.242 mo
71.5741 287.242 71.5697 291.281 74.1737 291.281 cv
76.7733 291.281 76.7777 287.242 74.1737 287.242 cv
cp
f
100.418 331.329 mo
99.6517 326.177 90.4735 328.961 93.37 334.301 cv
94.3543 336.116 95.3846 337.764 96.5975 339.436 cv
97.9032 341.236 101.082 340.783 101.046 338.231 cv
101.012 335.864 100.766 333.669 100.418 331.329 cv
cp
f
104.535 373.733 mo
103.59 373.733 103.588 375.203 104.535 375.203 cv
105.48 375.203 105.482 373.733 104.535 373.733 cv
cp
f
133.35 429.658 mo
135.967 429.217 135.856 424.967 132.937 424.967 cv
130.336 424.967 129.958 428.365 131.764 429.414 cv
127.02 429.636 127.06 437.088 131.957 437.088 cv
136.39 437.088 136.841 430.972 133.35 429.658 cv
cp
f
139.792 441.219 mo
138.729 441.219 138.727 442.872 139.792 442.872 cv
140.856 442.872 140.858 441.219 139.792 441.219 cv
cp
f
182.886 486.975 mo
181.468 486.975 181.465 489.178 182.886 489.178 cv
184.304 489.178 184.306 486.975 182.886 486.975 cv
cp
f
223.04 515.683 mo
219.496 515.683 219.49 521.192 223.04 521.192 cv
226.585 521.192 226.591 515.683 223.04 515.683 cv
cp
f
163.298 388.301 mo
157.154 388.301 157.144 397.851 163.298 397.851 cv
169.442 397.851 169.452 388.301 163.298 388.301 cv
cp
f
149.586 345.943 mo
140.606 345.943 140.592 359.9 149.586 359.9 cv
158.567 359.9 158.582 345.943 149.586 345.943 cv
cp
f
164.277 336.548 mo
157.07 336.548 157.057 347.749 164.277 347.749 cv
171.485 347.749 171.497 336.548 164.277 336.548 cv
cp
f
137.834 285.589 mo
129.327 285.589 129.312 298.81 137.834 298.81 cv
146.341 298.81 146.356 285.589 137.834 285.589 cv
cp
f
136.854 237.293 mo
130.474 237.293 130.464 247.209 136.854 247.209 cv
143.235 247.209 143.246 237.293 136.854 237.293 cv
cp
f
152.525 205.891 mo
147.326 205.891 147.317 213.971 152.525 213.971 cv
157.724 213.971 157.732 205.891 152.525 205.891 cv
cp
f
155.463 174.398 mo
147.546 174.398 147.533 186.701 155.463 186.701 cv
163.38 186.701 163.392 174.398 155.463 174.398 cv
cp
f
138.813 158.605 mo
137.041 158.605 137.038 161.36 138.813 161.36 cv
140.586 161.36 140.589 158.605 138.813 158.605 cv
cp
f
125.157 146.072 mo
119.722 146.072 119.712 154.519 125.157 154.519 cv
130.592 154.519 130.601 146.072 125.157 146.072 cv
cp
f
272.01 210.88 mo
270.71 210.88 270.708 212.9 272.01 212.9 cv
273.309 212.9 273.312 210.88 272.01 210.88 cv
cp
f
274.948 186.885 mo
264.195 186.885 264.178 203.596 274.948 203.596 cv
285.701 203.596 285.718 186.885 274.948 186.885 cv
cp
f
243.607 177.153 mo
235.454 177.153 235.441 189.823 243.607 189.823 cv
251.761 189.823 251.774 177.153 243.607 177.153 cv
cp
f
356.237 199.28 mo
353.874 199.28 353.869 202.953 356.237 202.953 cv
358.6 202.953 358.604 199.28 356.237 199.28 cv
cp
f
349.381 470.999 mo
342.528 470.999 342.517 481.649 349.381 481.649 cv
356.234 481.649 356.246 470.999 349.381 470.999 cv
cp
f
309.226 460.317 mo
302.491 460.317 302.48 470.785 309.226 470.785 cv
315.961 470.785 315.973 460.317 309.226 460.317 cv
cp
f
310.205 489.944 mo
306.306 489.944 306.3 496.004 310.205 496.004 cv
314.105 496.004 314.112 489.944 310.205 489.944 cv
cp
f
378.763 489.148 mo
371.319 489.148 371.306 500.717 378.763 500.717 cv
386.207 500.717 386.219 489.148 378.763 489.148 cv
cp
f
398.35 440.056 mo
389.489 440.056 389.473 453.829 398.35 453.829 cv
407.213 453.829 407.227 440.056 398.35 440.056 cv
cp
f
343.505 340.801 mo
339.251 340.801 339.244 347.413 343.505 347.413 cv
347.759 347.413 347.765 340.801 343.505 340.801 cv
cp
f
312.164 335.446 mo
307.32 335.446 307.312 342.974 312.164 342.974 cv
317.009 342.974 317.017 335.446 312.164 335.446 cv
cp
f
330.773 311.114 mo
321.084 311.114 321.068 326.172 330.773 326.172 cv
340.462 326.172 340.478 311.114 330.773 311.114 cv
cp
f
234.072 543.655 mo
223.318 537.516 210.709 536.166 198.854 532.999 cv
187.107 529.859 175.521 526.122 163.99 522.258 cv
156.567 518.806 149.007 515.54 141.614 512.18 cv
134.156 501.166 122.261 492.838 113.084 483.486 cv
111.752 482.128 110.495 480.708 109.194 479.325 cv
103.705 469.26 95.5677 460.694 89.6419 450.79 cv
89.3226 450.257 89.0736 449.689 88.7611 449.152 cv
89.7337 447.911 90.2821 446.261 90.0243 444.722 cv
87.5619 430.032 77.5545 417.488 71.2015 404.182 cv
64.16 389.432 58.6493 374.158 54.0614 358.514 cv
53.9661 357.977 53.8275 357.449 53.7342 356.912 cv
55.4359 342.08 54.2557 327.033 54.889 312.101 cv
55.5658 296.167 56.1073 280.676 53.9578 264.845 cv
53.3075 260.054 46.5599 261.124 45.2811 264.845 cv
38.2928 285.17 36.9105 311.517 40.6214 335.006 cv
40.8294 340.491 41.0462 346.192 41.41 351.955 cv
40.4217 353.283 39.9281 355.022 40.4188 357.112 cv
41.1156 360.08 41.9085 363.011 42.6776 365.954 cv
43.9959 376.635 46.3255 387.086 50.512 396.427 cv
49.8748 397.958 49.742 399.791 50.4286 401.892 cv
54.3504 413.905 59.201 431.33 66.2572 447.672 cv
66.4388 448.171 66.5023 448.655 66.8182 449.166 cv
66.9334 449.352 67.0594 449.532 67.1751 449.718 cv
73.4578 463.801 81.4603 476.801 92.0047 484.594 cv
94.4544 487.598 96.9286 490.585 99.4959 493.498 cv
110.266 505.722 122.846 521.027 139.382 524.884 cv
140.878 525.234 142.2 524.912 143.237 524.22 cv
158.638 532.724 174.887 540.682 191.593 542.685 cv
193.338 542.893 194.485 540.172 193.086 539.08 cv
191.87 538.131 190.488 537.368 189.222 536.475 cv
191.872 537.347 194.513 538.246 197.169 539.107 cv
208.861 542.899 220.56 548.012 233.006 547.591 cv
235.051 547.521 235.944 544.724 234.072 543.655 cv
cp
.776471 .780392 .411765 rgb
f
49.0662 203.257 mo
46.307 197.129 44.0838 190.84 42.0941 184.475 cv
43.471 171.532 37.8958 159.176 35.4139 146.317 cv
34.1414 139.723 33.0614 132.992 32.1156 126.228 cv
32.2909 125.93 32.4911 125.649 32.6161 125.322 cv
37.9827 111.275 34.9842 95.3698 34.5423 80.5837 cv
34.0374 63.7224 34.9085 47.1775 36.7713 30.4055 cv
37.5301 23.5764 25.8104 21.9275 24.6873 28.7697 cv
21.8704 45.9377 19.4442 63.2566 17.8499 80.5837 cv
16.9198 90.696 15.7972 101.051 17.1043 110.963 cv
15.4725 122.169 14.8949 133.342 16.2938 145.326 cv
17.8172 158.378 19.6346 174.304 27.9793 184.953 cv
31.6185 206.522 37.9959 231.594 56.6512 238.324 cv
58.6751 239.053 61.0614 237.14 60.952 235.048 cv
60.3763 224.077 53.5316 213.176 49.0662 203.257 cv
cp
f
351.011 70.2942 mo
346.944 74.365 342.956 78.7077 339.593 83.3952 cv
326.463 76.4402 312.162 107.271 305.523 122.681 cv
283.821 113.427 256.23 118.204 233.484 118.038 cv
232.606 118.031 231.844 118.275 231.091 118.523 cv
220.297 115.491 206.851 118.402 196.914 120.929 cv
187.795 123.248 173.308 126.943 171.68 137.291 cv
170.321 138.147 168.961 138.999 167.633 139.939 cv
160.805 144.766 166.618 154.944 174.214 151.197 cv
180.8 147.947 187.548 145.982 194.399 144.719 cv
200.62 144.32 206.845 143.749 213.177 143.217 cv
215.663 143.009 218.076 142.832 220.432 142.604 cv
225.253 142.552 230.1 142.581 234.967 142.56 cv
245.94 142.512 258.034 143.095 268.756 140.081 cv
279.863 142.015 290.868 144.351 301.407 147.716 cv
305.689 149.082 310.253 147.464 313.429 144.537 cv
315.149 142.95 315.978 141.32 316.606 139.085 cv
317.226 136.875 317.019 134.55 316.366 132.361 cv
323.207 125.492 329.605 118.615 335.448 110.623 cv
336.211 110.528 336.946 110.206 337.532 109.539 cv
346.702 99.1096 349.953 85.3371 355.001 72.6174 cv
355.917 70.3093 352.585 68.7199 351.011 70.2942 cv
cp
f
496.691 434.59 mo
494.938 425.291 489.727 416.801 483.199 410.09 cv
477.279 404.003 465.624 412.353 471.086 419.435 cv
475.798 425.546 478.083 431.809 479.293 439.384 cv
480.285 445.592 480.104 451.904 484.289 456.975 cv
485.539 458.49 487.72 458.323 489.296 457.622 cv
497.653 453.905 498.148 442.319 496.691 434.59 cv
cp
f
402.109 520.322 mo
384.181 516.621 367.313 526.886 349.558 529.785 cv
326.03 533.627 302.693 529.67 279.871 537.666 cv
274.337 539.603 272.716 549.564 279.871 550.591 cv
304.89 554.183 329.285 558.014 354.583 554.311 cv
372.981 551.618 396.724 547.509 405.95 529.763 cv
407.743 526.317 406.372 521.204 402.109 520.322 cv
cp
.282353 .286275 .172549 rgb
f
419.794 412.904 mo
419.331 407.458 413.106 402.093 407.714 405.971 cv
396.17 414.276 379.818 415.851 366.035 417.439 cv
364.432 417.624 363.206 418.305 362.169 419.152 cv
354.377 418.837 346.343 419.107 338.214 419.813 cv
323.256 412.903 306.871 422.195 290.446 427.852 cv
274.449 431.584 259.228 435.892 246.022 439.558 cv
244.964 439.851 244.183 440.347 243.544 440.925 cv
223.532 445.254 203.187 448.079 182.927 448.955 cv
170.067 449.511 170.273 467.805 182.927 468.788 cv
230.458 472.475 289.326 467.625 332.819 443.268 cv
332.881 443.266 332.945 443.262 333.008 443.26 cv
354.665 442.596 377.313 446.057 398.217 439.919 cv
403.259 438.437 404.189 433.639 402.243 430.003 cv
411.391 428.836 420.681 423.329 419.794 412.904 cv
cp
f
348.848 387.967 mo
336.013 390.89 323.432 393.761 310.53 392.541 cv
310.183 392.303 309.958 391.999 309.542 391.804 cv
308.368 391.256 307.25 390.553 306.162 389.777 cv
306.168 389.217 306.239 388.644 306.159 388.102 cv
303.778 371.96 289.624 354.319 280.418 341.098 cv
273.75 331.523 265.493 321.578 252.826 323.678 cv
249.552 324.221 246.815 328.156 246.969 331.371 cv
247.118 334.467 248.181 335.992 249.994 337.551 cv
249.969 337.561 249.943 337.571 249.917 337.583 cv
253.274 339.847 255.759 346.841 257.586 350.365 cv
260.654 356.282 263.864 362.121 267.065 367.968 cv
273.511 379.744 279.298 392.196 290.131 400.424 cv
291.893 401.761 293.637 402.227 295.316 402.285 cv
297.65 404.124 300.253 405.635 303.328 406.545 cv
306.535 407.492 309.394 406.212 311.273 404.034 cv
325.761 405.414 340.348 402.626 351.26 392.109 cv
353.111 390.326 351.181 387.435 348.848 387.967 cv
cp
f
444.683 314.538 mo
439.598 306.664 434.442 298.858 427.261 292.705 cv
425.874 291.516 424.394 291.05 422.987 291.045 cv
424.829 287.626 424.995 284.301 424.398 280.994 cv
426.101 278.47 427.37 275.799 427.934 272.989 cv
429.317 266.11 426 259.914 419.229 257.655 cv
416.472 256.735 413.845 257.121 411.345 258.24 cv
409.371 258.459 407.622 259.49 406.533 261.414 cv
401.578 265.569 397.27 271.713 393.809 275.194 cv
386.799 282.243 379.759 288.037 371.793 292.937 cv
365.406 292.051 358.496 292.259 352.358 290.887 cv
343.391 288.883 335.177 284.434 327.126 279.745 cv
326.331 278.765 325.334 277.925 323.902 277.504 cv
323.585 277.411 323.289 277.396 322.976 277.315 cv
319.31 275.162 315.657 273.033 311.963 271.144 cv
305.764 267.975 298.194 275.199 301.399 280.711 cv
298.161 282.35 294.959 284.259 291.694 286.187 cv
274.515 289.421 257.07 293.793 240.352 288.807 cv
238.538 288.266 236.73 288.414 235.031 288.921 cv
226.942 285.475 218.09 283.814 210.205 279.68 cv
200.532 274.605 192.491 268.005 188.131 257.786 cv
185.498 251.618 176.391 256.184 177.725 262.173 cv
182.567 283.892 203.621 299.857 225.6 303.269 cv
225.377 305.815 226.534 308.495 229.438 309.096 cv
230.855 309.388 232.27 309.66 233.686 309.937 cv
247.94 323.106 268.905 317.937 287.368 309.773 cv
297.79 307.321 310.076 303.906 318.814 297.606 cv
325.83 304.564 333.124 311.04 343.139 314.389 cv
356.342 318.805 380.531 322.281 388.299 307.373 cv
388.517 306.954 388.694 306.5 388.821 306.032 cv
393.34 303.968 397.794 301.778 402.075 299.356 cv
404.697 297.873 407.637 296.074 410.578 294.042 cv
411.55 294.673 412.49 295.32 413.721 295.815 cv
414.846 296.266 416.006 296.188 417.138 295.92 cv
416.936 296.783 416.833 297.695 416.978 298.69 cv
418.289 307.658 421.876 315.737 425.642 323.89 cv
429.136 331.45 433.078 340.692 441.071 344.291 cv
445.156 346.131 452.014 345.136 452.805 339.517 cv
454.137 330.051 449.731 322.358 444.683 314.538 cv
cp
f
396.269 211.14 mo
392.054 202.374 382.963 195.685 375.614 189.611 cv
368.635 183.843 361.598 178.664 353.397 174.982 cv
351.397 173.583 348.817 172.992 345.848 173.813 cv
338.379 175.875 337.393 184.241 341.668 189.643 cv
347.227 196.67 354.295 202.316 360.74 208.493 cv
367.126 214.613 372.95 222.323 380.749 226.661 cv
391.145 232.446 401.066 221.118 396.269 211.14 cv
cp
f
369.872 105.91 mo
365.016 100.235 354.904 106.263 357.289 113.236 cv
362.542 128.592 346.453 153.488 363.977 164.432 cv
366.48 165.995 369.448 165.226 371.543 163.456 cv
379.23 156.964 380.554 142.637 380.406 133.244 cv
380.242 122.806 376.633 113.809 369.872 105.91 cv
cp
f
191.453 182.401 mo
176.044 161.065 155.926 142.839 136.409 124.441 cv
121.237 92.445 87.7606 69.6325 64.6781 43.5813 cv
57.7674 35.7815 47.0013 43.2761 47.3109 52.0017 cv
44.2562 54.5417 42.5516 58.511 43.9227 63.0686 cv
48.9012 79.6154 59.9886 88.7302 71.8988 97.6262 cv
78.6156 106.015 85.3636 114.365 92.6331 122.405 cv
103.365 134.271 113.274 146.887 128.578 152.79 cv
129.053 152.974 129.52 153.047 129.98 153.081 cv
142.17 169.796 155.134 185.903 170.387 198.655 cv
181.134 207.641 201.048 195.684 191.453 182.401 cv
cp
f
130.197 187.356 mo
130.452 174.251 118.858 163.387 110.604 153.976 cv
98.9896 140.734 85.8592 130.176 70.9212 120.924 cv
65.8885 117.807 59.2596 124.118 62.6307 129.215 cv
71.8148 143.102 81.3358 156.493 91.6536 169.576 cv
92.1649 170.225 92.661 170.92 93.1644 171.592 cv
92.8182 172.336 92.4764 173.088 92.3607 173.962 cv
90.4676 188.251 110.74 222.245 127.296 208.529 cv
133.491 203.397 133.394 195.307 130.197 187.356 cv
cp
f
150.177 227.088 mo
150.064 226.999 149.958 226.921 149.846 226.834 cv
150.296 225.896 150.84 225.02 151.208 224.025 cv
151.912 222.127 149.401 221.204 148.139 222.238 cv
147.456 222.797 146.93 223.486 146.306 224.093 cv
144.076 222.34 142.031 220.513 140.366 217.832 cv
139.273 216.072 136.485 217.202 137.01 219.247 cv
137.93 222.834 139.01 226.951 140.81 230.41 cv
140.215 231.216 139.589 231.985 139.004 232.803 cv
136.666 236.08 142.079 239.202 144.396 235.955 cv
144.63 235.627 144.826 235.288 145.056 234.961 cv
149.516 236.442 154.494 230.475 150.177 227.088 cv
cp
f
172.257 217.427 mo
168.869 216.237 165.66 214.731 164.317 210.721 cv
161.139 201.238 147.618 205.097 149.443 214.822 cv
151.116 223.737 158.479 232.527 167.512 234.639 cv
178.788 237.276 183.038 221.213 172.257 217.427 cv
cp
f
197.577 193.986 mo
197.222 193.986 197.222 194.536 197.577 194.536 cv
197.931 194.536 197.931 193.986 197.577 193.986 cv
cp
f
213.246 204.3 mo
204.739 204.3 204.725 217.522 213.246 217.522 cv
221.754 217.522 221.768 204.3 213.246 204.3 cv
cp
f
247.582 244.508 mo
242.166 240.202 235.67 239.481 229.139 237.634 cv
220.771 235.263 212.789 231.992 205.055 228.03 cv
199.399 225.133 194.404 233.552 200.05 236.592 cv
207.562 240.636 215.357 244.131 223.463 246.813 cv
230.68 249.2 238.856 252.192 246.286 249.419 cv
248.116 248.736 249.48 246.016 247.582 244.508 cv
cp
f
245.566 212.9 mo
243.085 212.9 243.081 216.757 245.566 216.757 cv
248.048 216.757 248.052 212.9 245.566 212.9 cv
cp
f
259.278 211.278 mo
248.407 211.278 248.389 228.172 259.278 228.172 cv
270.148 228.172 270.166 211.278 259.278 211.278 cv
cp
f
283.762 227.744 mo
272.655 227.744 272.637 245.006 283.762 245.006 cv
294.869 245.006 294.888 227.744 283.762 227.744 cv
cp
f
317.061 203.229 mo
312.217 203.229 312.209 210.758 317.061 210.758 cv
321.906 210.758 321.914 203.229 317.061 203.229 cv
cp
f
340.567 207.697 mo
332.65 207.697 332.637 220.001 340.567 220.001 cv
348.483 220.001 348.496 207.697 340.567 207.697 cv
cp
f
330.773 210.145 mo
328.528 210.145 328.524 213.634 330.773 213.634 cv
333.018 213.634 333.022 210.145 330.773 210.145 cv
cp
f
290.618 205.065 mo
280.575 205.065 280.557 220.674 290.618 220.674 cv
300.662 220.674 300.678 205.065 290.618 205.065 cv
cp
f
128.904 306.551 mo
126.426 299.805 116.403 304.046 119.842 310.372 cv
124.555 319.045 129.611 328.502 136.406 335.742 cv
137.767 337.193 140.396 335.694 139.782 333.776 cv
136.823 324.545 132.256 315.679 128.904 306.551 cv
cp
f
168.195 359.563 mo
159.097 359.563 159.081 373.703 168.195 373.703 cv
177.293 373.703 177.308 359.563 168.195 359.563 cv
cp
f
181.906 323.571 mo
175.644 323.571 175.633 333.303 181.906 333.303 cv
188.169 333.303 188.179 323.571 181.906 323.571 cv
cp
f
165.257 298.198 mo
159.113 298.198 159.102 307.748 165.257 307.748 cv
171.401 307.748 171.411 298.198 165.257 298.198 cv
cp
f
186.197 308.065 mo
184.687 304.874 182.996 301.767 181.364 298.639 cv
179.546 295.155 174.137 298.761 176.893 302.09 cv
179.109 304.762 181.282 307.482 183.601 310.068 cv
184.93 311.549 186.955 309.666 186.197 308.065 cv
cp
f
328.382 350.389 mo
328.86 344.637 324.252 340.025 319.386 336.611 cv
311.841 331.32 302.947 341.5 307.201 348.798 cv
309.884 353.404 314.72 359.115 320.58 358.461 cv
325.238 359.641 329.28 354.813 328.382 350.389 cv
cp
f
351.34 356.594 mo
344.353 356.594 340.821 361.944 340.716 367.373 cv
339.972 364.947 337.987 362.961 334.69 362.961 cv
326.183 362.961 326.169 376.182 334.69 376.182 cv
338.692 376.182 340.743 373.245 340.982 370.145 cv
341.909 374.688 345.339 378.631 351.34 378.631 cv
365.519 378.631 365.543 356.594 351.34 356.594 cv
cp
f
375.825 335.415 mo
362.118 335.415 362.096 356.717 375.825 356.717 cv
389.531 356.717 389.554 335.415 375.825 335.415 cv
cp
f
375.825 363.205 mo
362.591 363.205 362.569 383.772 375.825 383.772 cv
389.058 383.772 389.08 363.205 375.825 363.205 cv
cp
f
182.886 381.232 mo
171.424 381.232 171.405 399.045 182.886 399.045 cv
194.348 399.045 194.366 381.232 182.886 381.232 cv
cp
f
181.906 400.513 mo
180.134 400.513 180.131 403.268 181.906 403.268 cv
183.679 403.268 183.682 400.513 181.906 400.513 cv
cp
f
214.226 352.529 mo
213.722 352.529 213.721 353.313 214.226 353.313 cv
214.73 353.313 214.731 352.529 214.226 352.529 cv
cp
f
265.154 501.237 mo
253.102 501.237 253.082 519.967 265.154 519.967 cv
277.206 519.967 277.226 501.237 265.154 501.237 cv
cp
f
319.02 508.797 mo
306.613 508.797 306.593 528.079 319.02 528.079 cv
331.427 528.079 331.448 508.797 319.02 508.797 cv
cp
f
350.36 479.967 mo
338.663 479.967 338.643 498.146 350.36 498.146 cv
362.058 498.146 362.077 479.967 350.36 479.967 cv
cp
f
411.082 476.753 mo
406.592 476.753 406.585 483.73 411.082 483.73 cv
415.573 483.73 415.58 476.753 411.082 476.753 cv
cp
f
438.505 455.848 mo
438.196 455.848 437.931 455.916 437.635 455.935 cv
440.771 450.291 438.132 441.311 429.691 441.311 cv
417.492 441.311 417.398 460.11 429.438 460.384 cv
424.722 467.164 427.706 479.171 438.505 479.171 cv
453.512 479.171 453.536 455.848 438.505 455.848 cv
cp
f
132.383 179.202 mo
122.892 161.156 106.763 147.415 92.3333 133.344 cv
81.1214 122.409 69.6009 105.937 52.2684 108.904 cv
44.9608 110.155 40.6444 119.176 44.179 125.664 cv
57.4149 149.965 65.7454 175.457 69.5272 202.87 cv
71.5946 217.854 94.5951 212.976 92.5326 198.028 cv
90.5907 183.951 87.388 170.239 83.0799 156.891 cv
84.2411 158.185 85.1341 159.17 85.5579 159.591 cv
94.8997 168.898 105.158 177.922 111.362 189.719 cv
118.404 203.11 139.44 192.622 132.383 179.202 cv
cp
.160784 .141176 .0941176 rgb
f
480.896 471.968 mo
457.735 513.985 413.433 535.529 367.826 544.504 cv
283.07 561.179 190.884 548.167 119.578 497.325 cv
50.597 448.142 33.096 334.726 57.8841 255.862 cv
69.1395 265.36 81.2664 273.934 93.4178 281.826 cv
106.114 290.07 119.204 270.542 106.508 262.296 cv
68.057 237.322 34.1981 208.425 26.5755 161.171 cv
19.5443 117.587 26.5003 71.4992 39.1878 29.3288 cv
59.1927 54.4797 78.6639 80.9065 101.16 103.599 cv
127.056 129.72 156.675 149.361 179.461 179.001 cv
188.706 191.026 206.31 175.435 197.13 163.493 cv
190.194 154.47 182.762 146.453 175.075 138.863 cv
207.577 122.872 261.074 124.009 294.651 134.535 cv
333.433 146.693 362.86 178.455 388.66 208.316 cv
412.488 235.897 414.846 265.549 426.741 298.188 cv
437.901 328.811 459.721 353.506 466.932 385.704 cv
459.709 385.99 452.412 386.956 445.404 387.608 cv
415.568 390.386 385.695 393.026 355.923 396.427 cv
325.914 399.855 295.906 404.136 266.545 411.368 cv
236.237 418.834 207.053 432.56 175.531 433.842 cv
160.561 434.451 159.141 457.936 174.297 457.32 cv
205.939 456.034 234.315 444.05 264.648 436.127 cv
302.949 426.122 342.309 421.221 381.619 417.192 cv
399.549 415.354 418.629 411.659 436.641 411.906 cv
450.4 412.094 487.479 419.368 492.851 433.521 cv
496.401 442.872 485.573 463.484 480.896 471.968 cv
cp
360.285 77.9743 mo
363.288 88.7527 366.144 99.571 368.598 110.463 cv
372.142 126.188 370.809 140.354 370.196 155.147 cv
356.057 142.168 340.932 130.87 324.344 122.307 cv
334.623 106.115 348.791 93.0544 360.285 77.9743 cv
cp
499.57 393.899 mo
496.52 391.584 493.261 390.01 489.918 388.759 cv
490.604 386.912 490.848 384.79 490.344 382.368 cv
481.679 340.646 453.467 307.189 442.23 265.975 cv
432.153 229.011 417.059 204.241 392.902 177.94 cv
393.39 176.63 393.66 175.134 393.579 173.391 cv
392.619 152.607 397.287 133.69 393.196 112.806 cv
388.77 90.2234 381.918 67.9265 375.464 45.8635 cv
372.24 34.8459 357.013 33.1779 352.811 44.5705 cv
342.788 71.7434 316.889 88.4245 302.471 113.098 cv
295.048 110.619 287.411 108.549 279.359 107.281 cv
244.352 101.77 195.154 101.824 162.926 118.604 cv
160.699 119.763 159.185 121.328 158.179 123.069 cv
146.361 112.549 134.191 102.34 122.179 90.9758 cv
94.9798 65.2468 72.7337 33.1125 49.0785 4.1506 cv
45.221 -.573518 40.0833 -.841097 35.9178 1.23752 cv
30.3436 -.62137 23.5658 1.10763 21.1551 8.28683 cv
3.40072 61.1545 -7.11588 122.692 5.61556 178.014 cv
11.014 201.472 23.3636 221.193 39.201 238.193 cv
20.661 286.652 20.2547 333.789 31.535 384.334 cv
41.8573 430.589 54.1898 474.016 91.6136 505.669 cv
174.344 575.638 303.323 592.724 404.621 559.105 cv
444.894 545.74 481.959 520.656 502.334 482.489 cv
515.783 457.295 526.853 414.61 499.57 393.899 cv
cp
f
257.759 358.893 mo
251.501 349.588 240.739 350.907 235.316 358.07 cv
234.69 358.788 234.204 359.588 233.837 360.473 cv
233.02 362.092 232.369 363.845 232.112 365.84 cv
231.967 366.96 231.956 368.09 231.861 369.214 cv
229.496 382.55 229.251 396.07 227.967 409.636 cv
227.495 414.612 229.505 418.028 232.56 419.962 cv
236.342 424.941 242.827 427.313 249.599 422.557 cv
260.402 414.973 275.458 411.47 274.141 395.611 cv
273.004 381.925 265.217 369.984 257.759 358.893 cv
cp
.905882 .87451 .717647 rgb
f
435.355 330.733 mo
430.726 324.064 419.566 321.657 413.269 328.113 cv
412.856 328.536 412.443 328.959 412.031 329.383 cv
406.981 334.559 407.455 340.69 410.615 345.193 cv
407.478 354.654 404.259 364.093 401.126 373.553 cv
398.903 380.267 403.825 386.194 410.334 388.485 cv
425.482 393.82 454.133 396.009 454.175 374.87 cv
454.208 358.926 444.344 343.686 435.355 330.733 cv
cp
f
264.085 390.498 mo
255.756 392.021 244.489 391.733 238.169 398.076 cv
237.554 398.692 237.115 399.37 236.772 400.064 cv
234.449 401.058 232.125 402.065 229.912 403.255 cv
224.213 406.32 226.437 416.995 233.399 416.131 cv
239.379 415.389 244.032 412.779 249.485 410.36 cv
255.429 407.725 261.572 405.808 267.989 404.76 cv
268.291 404.691 268.59 404.641 268.893 404.573 cv
269.161 404.51 269.257 404.29 269.483 404.185 cv
276.754 401.317 272.766 389.193 264.085 390.498 cv
cp
.807843 .733333 .415686 rgb
f
437.369 362.993 mo
437.369 362.831 li
436.798 362.872 436.278 363.009 435.723 363.083 cv
435.591 363.108 435.477 363.071 435.343 363.103 cv
435.245 363.127 435.151 363.161 435.054 363.185 cv
434.193 363.318 433.326 363.44 432.509 363.657 cv
431.262 362.855 429.705 362.572 427.91 363.301 cv
423.577 365.062 419.273 366.836 415.049 368.821 cv
409.845 366.954 405.941 372.441 406.844 377.047 cv
406.771 380.549 409.531 384.28 413.489 384.384 cv
417.835 384.499 421.165 382.613 425.061 381.142 cv
426.841 382.292 428.995 382.827 431.147 382.162 cv
434.727 381.055 437.964 378.876 441.216 377.032 cv
448.193 373.079 444.414 363.142 437.369 362.993 cv
cp
f
236.443 405.573 mo
240.255 391.346 243.716 377.054 246.548 362.619 cv
253.806 374.512 260.957 386.471 268.022 398.48 cv
256.969 399.182 246.274 401.176 236.443 405.573 cv
cp
298.909 404.674 mo
283.243 377.579 267.092 350.784 250.451 324.275 cv
244.239 314.382 229.581 316.746 228.201 328.918 cv
224.428 362.198 215.523 394.215 206.275 426.31 cv
202.849 438.2 217.207 445.36 224.803 439.519 cv
227.536 439.783 230.433 438.862 233.037 436.204 cv
248.019 420.902 267.682 421.189 287.782 421.672 cv
296.139 421.873 303.51 412.63 298.909 404.674 cv
cp
.160784 .141176 .0941176 rgb
f
410.467 381.7 mo
413.544 373.343 416.21 364.844 418.239 356.112 cv
419.49 350.727 420.584 345.188 421.5 339.736 cv
421.584 339.235 421.854 336.943 422.139 334.038 cv
428.567 345.407 432.721 360.334 436.826 373.006 cv
427.747 374.687 419.068 377.933 410.467 381.7 cv
cp
463.97 378.438 mo
452.194 355.207 447.105 312.647 421.085 299.385 cv
415.879 296.731 411.529 297.01 406.786 300.316 cv
397.285 306.937 400.1 325.458 398.536 335.156 cv
395.266 355.429 388.841 374.717 380.331 393.36 cv
375.784 403.323 386.265 409.864 394.755 407.541 cv
397.869 410.123 402.187 411.231 406.917 409.091 cv
421.626 402.435 436.202 394.122 452.842 395.436 cv
461.693 396.136 467.895 386.183 463.97 378.438 cv
cp
f
405.949 252.315 mo
405.951 249.384 404.806 246.924 402.79 245.259 cv
400.654 242.869 397.529 241.314 393.393 241.482 cv
384.943 241.824 376.245 242.55 370.439 249.477 cv
370.049 249.943 369.752 250.425 369.445 250.905 cv
367.19 251.423 364.85 251.8 362.341 251.88 cv
355.713 252.091 348.801 251.205 342.065 251.396 cv
324.687 249.363 307.419 251.676 290.128 254.478 cv
288.264 253.338 286.082 252.6 283.595 252.524 cv
283.595 252.316 li
277.086 252.193 270.059 253.003 264.205 256.089 cv
263.929 256.165 263.665 256.264 263.391 256.344 cv
263.114 256.163 262.891 255.934 262.577 255.787 cv
247.921 248.964 233.496 250.608 217.575 247.551 cv
201.202 244.409 195.298 266.485 210.741 272.339 cv
214.144 273.628 217.576 274.731 221.02 275.747 cv
227.067 280.007 234.322 283.023 240.779 285.496 cv
248.988 288.64 257.071 290.129 263.561 285.767 cv
269.279 285.521 274.997 284.621 280.578 282.963 cv
281.893 282.572 283.01 281.945 284.022 281.212 cv
300.409 279.717 316.753 276.291 332.735 271.604 cv
340.304 276.797 351.071 280.057 361.947 280.762 cv
363.529 281.403 365.252 281.722 367.065 281.596 cv
369.187 281.449 371.509 281.044 373.911 280.453 cv
385.295 279.098 395.209 274.457 399.755 265.931 cv
404.633 263.063 406.637 257.459 405.949 252.315 cv
cp
.94902 .835294 .352941 rgb
f
366.793 270.46 mo
355.953 269.55 345.281 266.781 335.049 262.882 cv
358.69 259.297 381.585 253.235 402.513 244.806 cv
397.278 260.818 386.22 272.089 366.793 270.46 cv
cp
244.176 282.369 mo
229.211 279.08 217.311 269.87 209.355 257.729 cv
233.821 264.015 260.101 266.906 286.528 266.732 cv
273.978 276.921 260.464 285.95 244.176 282.369 cv
cp
428.683 235.123 mo
430.202 225.442 420.845 221.596 413.448 224.126 cv
410.347 220.322 405.203 218.16 399.469 220.686 cv
339.127 247.265 257.404 250.803 195.327 228.778 cv
193.754 227.742 191.968 227.123 190.104 226.935 cv
189.982 226.889 189.854 226.852 189.732 226.804 cv
176.961 221.858 169.751 239.616 178.911 247.089 cv
187.12 274.15 207.087 296.245 234.938 304.383 cv
266.186 313.511 287.379 295.475 310.171 277.483 cv
333.142 289.022 361.252 298.58 386.179 293.044 cv
412.478 287.203 424.899 259.244 428.683 235.123 cv
cp
.160784 .141176 .0941176 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (head.eps)
%%CreationDate: 2/13/2018 1:56 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CQBLXFX?mt!WIlG7=[5H.VD.]4Atq5!pAgqKk*'jnr*`^d%K#;M.8Hs@'a(gr;+%Wg,g@D-Vmb4@=.?L-&Yb<-SmM5@`Nr!
%rQ(W/jRD;efAF5grMRQ&J,.'$$uu#_2l*t,C#&Z7Rce<jr8]7*p#U,\^L*UW2iWIQal1OiZ]cp;?$=NbZF_PZ'<XL3H1Ae]pTNJ&
%q=`'kqsV9a^3TD6mJ"BJ*WQ!6p$UGXs!44!hu3QReZ1WYfc=B^J+:j*c2O'glc[IQpQmgW^O?*!([hPdNaMD;J,!?QOq-tCgXFch
%r)T9#\psHLL*qE0oUl'Tmgf:JV3T(ss67#eIsUqh]=6,D]mTGJJ,B_QmXH+^l`]`kH`eG]B><(Z3IWG"mS<M+I/_$aGC%S@4%k$N
%pTkmOpqM!eq$o"6o;X2to"9@S_s*;!6TKV`n?8C+r>U4[]5]doID5XMKR7r,+V)+5aN*-iE*"t`b>1,hbi%sX^]!TNo69q6`9=)1
%R>[GQ\sm9I2O_dBZ6$UJ0&Fk+cSB<$jL]DnLROd#?dL^NGW06$mAdVipHQC)s3!'=s7QBe2tq6-NV@AKIJ*/\a]\n(X+km9KU1%C
%,s1(p5J4RWq[]l;^6<8jCn#R@If8Duqc>N^XeX(?k?Rk$(APY8n[mt&s)e99W;+W<+0\MTf]AfSp@ge!qlAn0]a%Ou]?,!*]79dk
%2uek)rd"5:DN7R`kO5,eUt`McF-B;rm&%(c;qsB?m`Um)hU*'!._!4"rT$VFfAF5hq59R_Ikd"ij(.Hm.KA5YQesVl:4AQ&5B_IA
%]C3:XgR)OVhS$ON>oplYYE-Hdp;CqEl`]Xr^\dU5hu;U-o9Yh1LN2Jt(@3CRfbpthcegnc`QjN.9sRt&Z9/!Wh>R*=koa?nM#Uu'
%s7;3LO2o[0NqbVppiIMGkr@t+QO>Iub@8D(1#ajSdi&2GZktH_dcimSS9`+7o1TpQ?Z=^]j#$[gs)Hc_LsqAS>^ANlPN*8<>V>gD
%Ef#pF?S4=sEm]eecoP\XOks#$`MM\fEKnZ:"/k+gn39[cF-WZRcgXd++6VRUn3<PY9SZr5kJI8o$P.skd?RImG)_9os*T"fJn@+]
%m](?.,J\#<2#NDU/f1m[<T;qZVKFM6Wpmc0W_]f/TYoC/l2<X;Z;fp"rPE8n7f8=MF<U>!oeTf3r.<DeN+Ji.C@kst,Q>_jGX/)-
%r,73X'E6$dGXhV7MlGd3PH,qD4UWi\n:d%Jdch<cmW"[j?C;a\H@5c'?AGD%f"T>5kpb^%kMQ@KNT'ta\N[QQN+^*/3)+*-c`$H0
%(ZU"8K*RXa$^I'LUsl79:eED%>_o9(*=&bnUI7s;8Qf8gI3"s*^"um>O+T(n;k?d?O428M[<q:+5M%P-]P^]FCgDCY+RS1*0.#_g
%qt1l<]^4L`ccTe+I@ug2p->B@?J_W[m/4<GAZjd&?qb,mH$PmB1>FYGEbFcA06M0j(Od:'FS=h0Iaii3f/2aLmAGETjWS;9ql*pO
%l/1m+Ic[Y\k?RJIm;'JgO4mD.3ZRe\p/A`eo$^1"g/%Z.TCq[H;nn(`AUGP7M#VUGp$_I<rkpVhkr=C?BaC%u3r-]=VUOW@:RB72
%I_TEBVb:Xf&a/+k%t6,q#(3f(o$QE:nYr&&DirKG7$_K39DWS?4R'o?BE.@S9+G8lc0SIa)VRtl*c7iQq_*/a%`.h5^cA&'N5Z&$
%b^+L,Q&b)g*D54U4<<MTZ]+,sZZG%nEcpjgO`m0IG^NbNMOtaPB[``?`_4!OWb2LEkO%WhgH@PbR6Ve&Zq#6$SP]!n4\CUA=J,PF
%V_:gopN"]ueO7Q!:,6Wk>+9foI@l*%%Kfle$AL\:1X6ltK++StgmnQ)8'XCg8+nWhXh-.MR,ijtP?-CK5UTm`8VqabE9W0mZ16ba
%>A&*o)?JC#QT98Vjm(#/7nf.2JrZtX#qlgVXDr5_C/_+Xg1X5Na*G.^mtTMmNls;#XY8?\M%t(abNmI/EEJ)j7gJEa\iSM@:Wq_>
%=OHZ3*Kt<n"tB/4U@u;sp"lu4A^J8Y&_l4[_c&TX[p<j(lAZFOY(-s&K;aDeQGJp@BUuU;co(AaHhPHRYYFio/h;F(K\^>sP-e$H
%0fXCdX.0+mO^^_!VnMNep5.QoBjTA/Z/9N(G(5TJpHYYU(;U_te^6.E/(_BBp1Z"_?I+o`KIkULorPs#:"iA+Cm\7a<d+Ri*Uf>R
%0S_\TA]T>*#C3X2@bcD1I-LJFQOB_I%(^D)RBRrh`*I>5YY/+_'c1PK:QKkn3sZI1hY-lS(Wl<teNIl&40$r[n)04=)5lKtnc?po
%]=mc4q9>#*(AgeF(<^=XKN.hOW)39tL;.8]nu4`B\)17K)(J2E%f8L=[Nk49'5WW=Z&<Mk%cj\gP!Q]@Wn=o>*;o(Fij.AENhq^r
%pj1OIoL;#&gB/P&B3Cbm-*LO0?n<@RIDtRh7!mshNM#:R_ka)eV(Nst18Hhsp,Fu!$X'[]-[(gq='a6t>[=Y&:jd?-/5@3,]!UjN
%SZPZ$)gCgf8l(6&\O`!^$s"74a;23%_YSVXV!K3t_<Z]uVXD+TChU'e*K*['%idUuD;DgbP7;tCcb2p'"U3VdYB\6RH1jXr0KSSt
%";nSkOS%-*pGhA"QE"B&a*LlN<*m&$m6PAhB4R5&;IOA^c!M.LFPnj:IE1ZGe?$5.qehJA[a/]K#2cK".nW$F[UYLN=7d;1npRY6
%W.`%s?o6Wq'Tki>[V"B#2<q]aV_;L(2CW-XhNXeP@k+a"&TFJ#>]TV9C5T0Zk4Z78p4GKQ7K:r,a'9-ZG?HP2[hjtfme$&s*oeU)
%-"gqeZm@8&f6WY[d1rHJ=tX"GXR[Tp7P<l"2;Ku9):e94@\&c]qlS,iPiUe^rN/:Yf.Kalfl:e6HX#6/CXcGPGGu/EDOn&,G)ZF(
%QBX0G`],#223h*V.]3_^T.6TgdVZ)hY8!d)Q&X84IP*Q+ZK$OuXjD8c7J';'[;Y*:Y)oU\FEPU,9]4P-?:B?K.>P'g:86UAJ(L*<
%PhW&r`_Q,(G-R,`WeAOpZ\jBNQ<b2;'2jPDZ1lC'oDVb-BHj2!4E$rLmY]VjZSK/h>FY$ZDe`>OE)l"&Cld5Ur5Q)nUK3-!pm6l4
%[AqTu:rc1sHE\)Mr9d:^c#4mI-'\W#F`$bJ_H):4<gDXB6Hll3:Jpg6$_a\<T&TVG76p_rl&nllZE;DrpU<lQqC0$<%n3\ZkC+Ut
%0=J]@ceN?X7W6kTjA]7'aoFZ6TDAPrII6JR9BW[h->K_FQ"B\A%$Sg\40hur#oIp[:(,(saEF7_.+p6;=cQb@Mpf'/Zmo[G*j>?e
%/F#TX<tQ'Bc"^Es;es#$?P1J5jr^8\9)I/e>CEs8n#'B'6.IhS7L?Z%"^Ql?\G5aR=qb_Aq=R5shfWp?mH_r6W@>u0%RlTub,9Ef
%`!*U&p,-!>WEV793qZ*qS_D:pFg3AH#Q_O8(#Yr]IsZu<j\+B<8b9s'f!KmI#:u`q@>o:EL)"uWJtpP<K-/15M_Y5KnQrE;>"EMW
%og>A'bL[gfB>.;P%R'H!N-ZQ^QLWNbkId]%ZnI].p#bI0Bqb9cF&mhG2YHguN"1>Ui-/$/@KTQ;8[`Zt`@RE;E0JFM5G>R^r:SmW
%]Co3"SbI(,EHc0T#,tqr2X=K8\pef]W*HpYgO#SUqso?8DSr+%W[hss>,@A*`pa>a=t\d1!`+R*4L.h%I_O5[QbBR2da$-?d<s?1
%WRn6d&1&Y#D7jM8SFd1JL"0d<;u&;C^Z$g!h`CD+K>XR(1&#f;$J<hVTjMKbSQ<9TYTKG1HMIYFiI]dID:Yq."p,7.c/KQ#$\&fb
%mhS>u=cjH]L`99<p%^LLB\(-,TAM<0bEWYH%q#uK%t(",@Bd1Kht-`bjf6YBk;Qb6-F.?Q1POAr#[K\:ne`Ek<QN?(YU%s)q^a@J
%Lif!@2t*p!#Mnp;O/M#p!;GKCJmHH=9SYrA\EF:f8B&jH0Ve&EQf]k:[V#IE#eA_J.!?rTa!9[DYWT*@*#IX-UL2J[CA;laO\9\u
%1.+u"SeOI`!E@a9E^>\nJ0":og!#fAo+>I-]I[<CaNJ'=\hZ=)p=d[>S$(]JD8+G*Jk*(cjF*-5O*SItai%LGi;%8/&M.N$fE\qY
%R+">qi6B_F0VkNm:p%?;36mCp+&Iqjg0W0SE;cm/q^hc>pMhWZ[e</'H`'AMSm!1gIiC1"'=d8Nb=R"RAa.:U^.#rn%unGKH)P(d
%m>*W#H#$dW?CaB@5QV`2p*n;qPfdN?djT?Fef+M<QDl'I6,\IRFN^`h7b+TCA]Y#kks@cR.kNS`<NR4On5`lJjnBN[]i'P+&/=Z3
%I'8l#jHh@+c2''Job6l53[Y(W0-J?D3M>#d8boK*Zdsa)*Od?>+./8kntCR$ldLfL9mn.B?NMmi[tna#VsDZU$i5T*Wo"<pjSDK@
%^Z$Tlb&Qe]SPhl8M2jb8\__u9gI=H,#hIE8o./o]XVJ*iP(=?4J^6PKdaa1ZHK>3f:ji^kq@[T7)!l<$9rA4[HWVTN,,+=p9/#dD
%2mmQZBoVV^4D9FKDTe9Fp(^bZ"Zee%j/_Si=ubp;QC&T[5a],l=q-G!.Hlc+/RdAj[W%Mh4a'E^!Zf]9B%7IGgP^;D8GPORTq$%P
%@qD&X37;Z61@qpBgO$%#C`@+T[+e^5[^]0*B[,jD5Il>MDm_)Z>9;hUQ?g\"?gkKcFglR_IAb_"lcfn9ODNt2n<'^kB0cUL=aOWt
%<H].D5jQGXdKR<"+Lc>oZD>-Uf@o%ilSKinhaq$F($N22&G8Z<Ci#HpH+Y;[HJN1CVd4!X[q+8lQ>LN7@DV?h=<B$.?5@9-Sr1-s
%S)]oul4BA;qGe>H$%Pb)Q_2uG=1\(EAf<;_F_[O8-*Fm5/3k#$222!p=lD.U!blN!Pa-Op-!o@]G+6"1@g-tcJWCsR4.V8g:h(Wj
%QH^@HB)PG80])YRKBBAijp!=fL@DNLm"+=>e4>MXrg&)_#A\]N2P=8!?#IiU`d)L52GRJZlY^jV/TY^D:+M?/[o>C0c(TMP8.B3Q
%Sg]c[9(Yag)T=qHi>F*7iJYCXcmn60h>l?r:mW5dEnPKr<=r@k=b+W^GcAMm>J'7O)badC9klg"[Olm3r8,q?[LAdF7H&6Wp=+;+
%h!ajKlZS!6_&UCfFjFjnBA61JcB;oL^p\(6?sElpY&q+^A>)kB\n':`SnX_FnT)8bMSJ]7mTukVOFd8ILLE6Gn[Vjbh4"&Lp1Grg
%>/fH8VqlB)RX/(Zgk&Q"gZLNubpZ8]E;sr?3)Y_M%?2@WfI`2s`AX:<gZiOoD<l>h$r*XJO6d8qeb'_B8:u'8$.(@j<.<Y$$]PAd
%=9\+LG:R_c\j35bmWnE9Vtik)etTe9JiPG)TsV9L(Y>,k9M>&j)ZY\sHf6)YNY*,\q#.YYrJ"X&[G*aMn@6Na=RLp8?/--XCR>Rg
%6u:JFp3OL(7r'oT]J4UbjA\U<W4]R2Q<IY^Qkb-0H)eR:Tl%!(H>.Q!./$MEf-&+$+:&k)\OCf63Akj"@N+bZR<lPRDPSS<p,fD[
%fFLpi/psI?'gZ.of[SK#Tm1D;QOj#\%'d7U)H#q70Z9i2(m<j]UeHUu@fN?T+a[(l8*K)SS1Viu1#)X:]8:"P&5j$fRkK"GZoePM
%#rTP`q:B#mZiU!5)M-T:r07u6>m=le=4+Zb)E#khb7_@>*8^JIoL\QZpKbX1X:_$]dT5>A#LpWP7]B>t:q4O-FJ)PcKUQkirdFiT
%J&9OQrFY;DFiRpi+>B%@>cW_mb.)o/(H_!J>NX>*_faSEs':+0Z3&5#j@r99lLu?unfbC0lMGlB<bUIhI]pT-U#3$04<`IGJi;`]
%@:!K:Bb^;Vs#jB%D;Z'<I:(`K\+Ud8ADIPu?-H,?>TYDC:%`mqH'pOhmT&9<PtW:UG?:s(/s?%0RqDWcVIFE]*u5t=(J?hH\l>,:
%OCDtQ]2K2Wm^dH5VehbNk8J%tM<86*i*K"N_5)o*7B`b]YrpL`H#d]0R5o5_;td65%=YdkAX93,+5qMBkDa+-Q?'86P]UTM,j3%]
%'0C)ABdRu+eQDeCL?^&4VNb5%QJ8J2pqkk>l+2C[%`ICqe"K6c2_i\BRNJTeQ2;h`B._Eo.Jb$%Jbp3mCuIp5im3WC2W=U(Qqbc`
%EZLHKZK9aSn<qn6m;[]"jc=c'mr%(mk4C14jV:3uH"giLD"-PS\s_I.B18.l>#ZL>Xo2dr`<2U-E1?Lp%'1#b(u.U1LFIr<-9;KD
%,KC!N[LMq(PBm&DQ7JAHSZNTa`-EG3jHE!-YPC/,qbeF\*j66>l=G]1i4H31O_(NYZF(fZ8_@o.4`/rLpJ=Jo^UG4uA][8o)HU%:
%RYV<'mpYtW$dlE8]ardOC4&2,[,1Yi??c:F7e@M'co(I&m>=>U?B5h+j7TI4'0@YL?C5MS]*84!b3,t[\cAH4&P3Z.ZJ8G1'<Om@
%jjYk9psm\B32EnG'K,G?:V$/cQ5d9dLn(89]4><rcuT*nLKCh+W30Rd$gPHTQu23Li=2R=,"o1FZo>"s"`,Nf4b@\Y]ik\#o+gUj
%`Gf'Gc7R2rK_M,0Zf8@XO06:\`KWYG/5Ekk:TKmchUk.&fGJEdQ-fHX3hu"h)"koClLLhYX/jEdNYdYipRslI78je(*6hb]l,01R
%q\Wc]>GM1g+2,>(/dnnACD48rNM]S=rjeo6a7mG/bpW2S0A:b[fVr7_&+$e-Yr>t;E`Q(ri,;ghrEa46#e^ApqRJo`p=(%.T_Lr,
%CXI9%+7&l93R>E<9Hp7QkMEW(feTBXcUsCJ&:T*^lsfSWLO(UoGI`];cH=$%`sE)kekBTfQO<_oSPC]0D>3rB>K3U7l$nC8=IS?X
%^,/YBn[[Am#?#*Y#&3hOaNDEt?p'2B]VUuAR\06Mo]%^,02CB6L:d^M%=32>jl"dcq:1ug3;cg(q7.Y[)E0;oWq5VbVHAK1(1&0!
%^^&FAFGp!6Ll&&#qsO$T=Y/jYl!1"]=t,q`Kb@llj>1)gl[qf,rU.qG/!A`FJ_W@l(j.>\7t));"N.3u?2gWQ*jMr7V#8<[Id4Ac
%N<Wq&&JPmE$Wbs=f4MIs%Ge+^#/Du,_'3qaLt?cAUJ2ctB@Xh7I35DjZ`b#JG&^O;XIFpR0e6<kTr0NZAFn*B]M"*^DRA"TD:r,1
%hP"mmITJRX<&Ij.X'L")g@B0J#h5fuFBXu?kp`a'InI#OeQ$ol8?M<'"%Q6$WQ":g;L9!E92`?A4g\$rHU\0"Q9QJc:"Wc5YtcH>
%5kT?W,+X0`m./\Q5BL'&9ifC&"BgIn@&Ym4(P$lA8ULltfSON@_NS3/[cQ?YfY'#\<LpA7Im.YYJL)toZg\k![gC>q=6dEJ=m>_!
%P3-9AHVm3`pq=SVKSaXif1,JuW?L?S41egVqJob*c;.K1oI&hRhk1=brH`k_/P;D*#.@RRrpoHG=)\(KT=-uZfiRq:Ie`?!<rQ^K
%f73fi/pR11A[n@\nb;l_rqaf>5KJV0p\)iBhu3-=+5]3XihuZlhYc>]pYYCG]R08Djo;plB(qcZr(m.KB=jeA])D&@DkFe+5320Y
%cJA)Yhu2o(%PP#W^V/OhVfFBh/3fbIrTX<BDr,rt3mcILlQ>S&^%nhs=O2=dO'fVIrqcHF*C$JCrp&U+o#Ys@Vq*.h]RT[::[7QN
%mJ#M[['1@<Zg.RA'=s6rEiWQ\I!sNKgRc0.pQmgWrtu4<lI?Dm_n_bNGPD,Xs&b=hrU^!"(OoccBrrK4l^,rTrHWU3FoV<-n*;Og
%T5B<;le;&s-U0eEp$1Y2hELu-cS&Yl%W?jlrm/46]m94Lp:g'B]i4qK5Ji[]\`m1FrUpb??G6:9gNo@'j\)#5QS2\$J+_F^hq^MV
%qG8I;mH`ZBf(lk*$9M\p!;j7ooU>LmrP.aUl;_&4Oq7R;h;t[RS=-L+/3g0/Z0)&qmnsqsr67mf]Jg\WKBIXTQfl3oIeE7BO).ch
%o,h>Rr^Op+eIO=jh7()nk1f@org)AAIt%CQ4a0X]o;gGRpf\qH0<p!*o7pnFRs'S=r@*6jpA$X#79][W7*P7@6u'Eg*TbUonGE+[
%f5dAJp>)qlGDC+.IIU+Z^)69ica+_`Ru;@)].k<)(nAeI-.n+nL:\:Cp(KY!_^rCI[/7tsLUWnSPAW(ddLG'OTq1OB+1ot?c?e.=
%>o7a&(sifM](,G`G'!HXUIGk[a[!^5O5lE46Uu,U22WtRGCpIAr8I$eYO;F&pRAY<?iLFQF5=,I^0qlW*:_c#U2p@Mc1C-^IcDMq
%)BHpGAj6K_cnGt?(DY*gJ"D(nO8C'?Zlf$=:f352/B;Hgb^7&],0t6=o/)N7T:Hrh53Gj.AGI@G*:oDCG3M>GF&#&fU=;qP9J0Z4
%36?/rdRDB-,=dPg*9#e3/e2k,(HKe",f_VZjH*T"*0M9b9QGBVa2(Id3R6)N%N4Og:ND@Bie2$1_b\0,N0j&ca([ZY+ceG)A!S@!
%E^Q?BCZX[4NA<ZWi%I4<EeoE$a$Ga!Q\Y4d/?UB[Q`g;.=!9O6c`J2Tim)S7j>b56*Fr(/WJ)U\*0C6:jQ&5/^q&DJa*BYdEKoq0
%J8!l/8!YCj#fC2nW4.$F`W+-3Ob(&hq!KMb]_K+/23d-?_7(FtI\/ogo(+:0+6D,s%e@:tbQh9I'If+iLffDL-jQUP"2;irQK'@u
%:)CbY>9oAPKYT:l69D!7q'*jNkiX?!:'?sj=ce5#6V9dlGaMV]Td:uF+%T1S^'m>e1"'(G!Quk?-1h?JbC`XE=Y(^1#!SaO/HX"h
%o6ndPJ!0h/d3=)tK`4*",7S@C@P%m4T&id`4NdDLm]&U?8a%o:AV)fJFb2fJdHAIs']26TAT``'r:NUA:?WqFe/a:M)hbr":u9$Z
%Kj[BDe6/+'4Q:3C6)O$/MA\V"hO,^9XEcj#k:hQd2GBDWFp_l-^/:I_+iYj8A>ViL[oqka,\6.M=%Boj6WWCplSZi]-/f--=lrU_
%HBa]@64(^2Bn$^5nNns%W+[h@FV`\PZ3;VDW[*L\=0A'Hr7u(O8W7-"Aq&plrcC,j:=>nRVstaO`,cRbZTfPX-TUhb,$W+r"2JB-
%W<hb4QU>te0'@PN\2j^.#XlSN!>0mM-6]B3O![Xp@[gMuq`l>fOW;dC5Xkub0Tp5SkQGGoljFtLI-kK#%OCTYg#WCLRdALE4%s1b
%>3?a3R.YkS2J"8h9G^Ho%.iDedDgg?&[u*-7a/@C2s5`r(#/G@/^<P!L*(8q_bjHr;iSoU$e*bg!_b[*Fs,W`gd`,F31VV;,Y,)8
%^d?*e?q@R?\DW$c5@I"dE&lm<+us1ZK_oe8YWss<G\C5,%&tlo(2C?=E`V/=Fie1O&ltDRI-e.eA=q"r@"QMM0`b\O(a*^ObCq_j
%r9T,^6,*+,\tt5(,j#tCNJS<7ETAH0Od9s%E*('hNK&o,*k9b*jV)kI=TB6&5fRagM`?@/^cI.#^dK:U7#mA6i5W9oYI#J5RE:0n
%'S%R:V_]Ds.BfX4Tfun&J]t7C?_P9,"q)1>F?#En.j^@`OqNHqHYPB`X;'nL7J8Q@W3W<oUWg#)64$/UM7n"f%3&k^-_VS7F>O7t
%Tc2-PW,+,rc1:'qVLB/8KHM0]C`m0s-="tbZjp65M.4G$W1;se&1Dm_PGI3Ve;utf!(t>[e.;nJ?4DJ\OHI\%6$Va-1,=PQO?"@2
%0T*(ob/ut?5WD.=#8I[M7Danu?r&M=n.)n,TK"DKB2_LtVNsWM,pVCJJL\c5./#ok,b%C];'BqZOGKn;L#cY,#aCHZWedD_U?[N6
%*XX;";`UAI)CO5+:c)cT6*AL"nQ/.u=7j:6;$6V@5#hZ.70hT_'lZh=s2^4"l2HK6Js5m^I@:b5c?*#0!JQ-d']Bor:&=k.4)#[(
%]UR7qoS"(sOu$?I!?ZL`HPunanG;hLDstHorQ1K^X"XW6gSOdDN.I^[GgR%RE338dr_`Hp'-1KorWOn4kUt?u-6]TrM!\/aKd^JW
%&/%-a^>OZhK93>l'd;iUFTtX=$W_TcRA&th+p4C84-3_TZNQbfa;bjridpIc>f<g^efoQCp_L^#$f*"IK<`#)k/aOCi_GcXajr4*
%k=k@pUJk3kbV%D3%?r(j(gh^=Ql`!V-mL:eYT7@<0'.WQmLH^S#Qa_$A)'2D)b4!OA>?VoGk4J8&*`W8BDKFTl1+"NcVHQsa![GP
%o]("R\'F2R)^daZUt&>Pb$"M^+Em,XmjU9?5m.mHMl.;QaBafMeh/0)7M0d**(DoF&GaGXbXec[;<ajUBBgL:]1dqH5Xk*7I\Rl1
%OQU.p*NEiuXGa+@W1Xmne'tZj<QS2`;g#/kA"=f5;a>TW_,R[<1C$Sg/'?LXb#m\%]h2=c\PpfIVP)m-f&P9OZD+_j6.KhN-ACbF
%S>Z>9Nq%[1=rlSeYiI(iP$:G&nr_ZM4m)K$k(aK3nW>WapNU_>:]?Lu5Om?TNZK;&-lkOo6KYLiJSDVh><.e;Lc-[Z,`!)(AIFC&
%L=RPLVA")6:iFJ*>$s<N)N,7<`K$RH8a+A8/8!gWN`(*ocW0ZQN(5\qc7?%Q<j&/."0ej.1\@4!>`?><>Elau#1S0Y`au17-QFEa
%%)BF=7to8oo9_D5=`>A2UD@*Ia`gc*B]E37*lA,Q`g(E`*N,&AYIW9&a).FA37n&#j)^:]<^$Goi31E9FTRLa-<aZ:ge@Os?AnpC
%r"kqUqEK8[ADD%!^YgLYPB&W9*"G#.-BC5h]ucaT(7!?7D^q3>=CtrW;0X*>ag'lM,P`?:-u8ke_Cj?17`0NcPnb,=J@R98\"lOQ
%F5V(qQJ5(UMqj:'(:[PQg(KYi,)sM@Q#iooUc^+E9PSJckFl"Ons.'HarW3O=r<W0@\)ULCJ/=B2HR5dHHW:sJ<ooP>.a196kdSl
%C#_0k+3h-tH$FXNSpF(+3Ma\CSOW\T8Vcs5jE(>slEP;mbN3cU*(1X@9=TosGJ9SCZLkJ>L*0^ISM$h(O9cuVGa_C!;!@.g+:&kl
%J3&:SJ3IW"ercUQ+AW!/J3*dT.b(F_kD?o."Z[=W1k9WJDAol2)FXZcT)rkQi$P/B*o&Sso@Xr83XTjBOAfT5d6beWo=pk*mQ?jQ
%2A>]cm&@_O8\MCGUB#g*o?%i`m)aX]#K!0]AK0d,:$/A8:$JdN7fDm;7+\2,<S;9Q]*3S^8(h&LAgsgYW)U;K<:-9*;8'WiI(ep7
%\mntblS$j"l*:)@Q\W3.36i$U-]oIJ-QgC,*7El2cFX*iD&h!aPL'1lVaj/=Ic`&N3QbupnsQ8#RN=\7Pg:?21Iq8b;*J9H`_gJ!
%EqdnFIin\6@hb)Bd1$&gCiK'3a5GsIiDGrTbSE,[MK\$HNDP=)di\MZEotZ,#T">2\(+]aR`h,Hh)Y;bNRM0T?)YWkBB>R-I0:X9
%I^g?qS/0_X5:b>:_@LD!a2\k')t=&K&R6kBk"pVr,'@Wf%Gtp7T,Oi3+[L.5(1GFLEO"cM/R<2`qYpGalTGd!;sc"W%f1b6=%&J)
%1m<a$81"tsQlIMCADE8O$RrXcAWnN,7=Q5[P!$ULfU#-0rW:2qE0i]^Glm@D2=>&KMid^i*qD(\rmUOC`qZgbqe9^3'5S4=D/Tu"
%?Ytln^eH0BH_Ma#&n9.>H/TN_FCPIdkiNWse\DdP9qkZ.kn&XIC*Ka[TIqBn`]YfES*@ZPSQCA-/mMGTGYWlOW`!t9S`#g.''9MW
%7KU&<5LH;j%lMQX=a5qFZ!,*(874>YgoAAqScQ\`cp`Re6B+mn(f^`70/Ydjj&;;LWO'R?QH7R^Cu7$Y;`-bH7&Z+]To'];5"]rU
%9NZ:<rAr\Qd?rHs?^q?]9^b$'G"hQ72:,H8=dMXm3bIVR@pStAJI?B;ViAU.UrTU@bH9fjB%@GH$J'(nabN@NXq'^dWpSi,cTT#2
%Pm\t+]$92Mb/S?2N2+[>FYQ;hjCkdTM4r[VE?F:,1L3\k*kCJ:%@?'LcSTf?F>R9<+CI$dF<F@?=0A?=fVsPh0^ee]B^6;2'5E&j
%``6f1TP'_0`;"'9.[Yr\$dR-Zkt,1Dju2+dUT(cFI<C@`c(o7GioYstgR3\.A:fEEJ1\:,.PM.qX+>ZJK@La,](gUlI;moSMo.ap
%-]rAc&s$C/nk2r2iI8oM6]KLF,M/]9l:l!@T?$r3B.B80;)r:86!`TIE]j6Y1i=;^bp,>k7-QEiq+)Gp?6@VU<SIVrr:hEu52iU;
%3W=*o=;#5#:CSuEQgbVtrf7G3aYRM0V&O06Iu3\[>C:pYmUp@NE/-Wgs!b5O%9sg`eAH?#kh:]UZukS0,Q5*%V$8GagqSD4U<bE"
%V)>2N+Ji0`V'VXR"XOK4DG\ao8D4--;CrlpKT8+?8:%q'N#Gf?$QN=N5lEu&k\3<,N<gaf0+[;ee`-.`O0j&V*;m#cDBI<eNDDb1
%ps7aU$HPDg(s\JH]]Lu**df6BaeG>%i&Bgb<9FoNOcY?o=\-V"dL;qbnX[I7$-bX`\OVs2`,sRrFn?_88'eoZau[+5Y-_Qs*L4jD
%P'^1'P60YLJIA)ZH?AM:<%Uh0H&X+=Fe,1o)7lU-dp\fEqWnU5+]biFCngc>$.T9=LRX:<Bl\?*TTF1T9sgK#9HT[Am;%\@niu/c
%H5';X-k.a<V.D6c-pFYI_@8Ak0m?.QNjq-elF?\R*lj8Xh`T[=#<DKV%s%A6O(Vf^m6!JUNuug1'@(orj$.UG$VnUh@,X"7(Z$t)
%29R>+j?+RNO[@VR>9>5bBsAc%NF4Haj@R,mA<VlSO0(=&6U<7j'I(^B.)_POlGRLB2&>o0U7A3t-K\2qk#2K=6D>NWp84Q)@T9B3
%W0Vo[T0&1e*=KMp3D+$J'Pg$.ri(l#RpW[6?r!R?A$o!6i;ak*=?nGP:lZ;&B/^Q"mb!<A23=2o?9=GZ50K&#79U=H_fZU@<YEo*
%b1(QKQ+)FILHQ`s;i[%)V4i\5EL\+4UrQ!OH13eq&*`VamGj5Q4hf845-?a=*^ge,JJk5W>E%DO8r&?a8Ka^K'&B/s\7V%EGT/iR
%LX,-AKseZg>5jdm;#WpVX0h=Lb(d-=Ad]Zle?#**6(RAJ8uLm:.T!oI3,D<g=Jf(L'.ca2f.t0Oma<Tqe.@?(8rnCh`DmgX9rW(X
%XePiSg?+f)()Z8mX0B[[7ZYgrj9oEWY7Sm6()jDL_^Wd8gT53-OF_se9#n<SPK5LIVL;D;4qSTu:#guF>7)"6=TW22XVrKm]G5^C
%`k8LOLI;NA[,;L;fIRpiXEu<ug51YVYi1coS5,:Q=Q=b=Fb'-9MSN)j=P02YMuTI2cTEJ=p_dXDDTl]E=gEn-h%'D?:)`P`BV`\6
%1;5g?eWI"pKlSe/DQ2jO9)@Sj\LHE99iH^Rd)4W\B2ccEL4UI?+Y,$F<QaB98f?/7<gL:uR"9<;[B*HO7OrT>WZn<TQu%%H_=gn%
%8lkj6R$sl:<Dfa@<In=T>#N>;_Yb@3VrYLWZ6&>+*h"<Rb'D4]=\!\,AP<L8\;SN_G##YM<p%hqPaMeWf4$L97ck,`=]A@SQIS,7
%bq5iI@np=W(qABKX6#PI9[&XeYD\[$dF'`=g*[CdR^KjsFL0W5r,m[V(U@qM=C=kKbA^*AW[7I_S<c%e5.hOZ(GTG2g$(uq*YYY^
%3Z[FE0(C3.SA]C('$_TO_8f4#)uaW&jhIr>cf,*[)b@G6h*TAp_'ZIIF>8R5WGO"+Nj>@!\"R9e:^&%JD5`._1\[2oCpg^Z6FC4@
%c@TbRbM$DS2G:AS2#4ho8;\.fAU?8gU+_$tMP)!%Je<?=8Ql`Yf8uA_eeG3qhF*U-*EFf;N_VO;A5(Muc;d4[3eHW=HGfI,d`td8
%Qo8Fkf(Q?p&P@ZP=H<e@X#;7e%bF5$`JR-n4<AV0Y`_dBNXm+*Xt"EYJ,G*iH`UXGam<hTq9+XcR>(;0OP1q-*`3#S),>P:\cpVu
%nqAl=?qEe33Ii9E9T."DW9@C,mOU<QS*$HV$h-?ADDo1>A?ePU^qs68VRo6^8T^iES6-h0r=<(g83IBX%M@2=X[5EoJ4O2[h%Wk@
%RLO?X!/#5eBR.MEU9J&]D.fRIk\fWI:XUHEqs/<as*OM8Y@QUb<:4G.`lnS@1J?,0@0&bc*(e+^.o\:O(P\a?;_9RtMNuDk4(M9b
%EYfrDTW"Sm8Rd7%4fd+9KfYMiC/sLT,3$ra)eep-VANE@/6^_X;K_EKA6c/oa2;&V3A!Bj&p#Z)[MCb]kc6l_<TgONcM:XlDQJ]-
%EHU>G!(@CV6`h]k/M>iMo``t9.b=Fd;kujG+(JC)@+u$,2L)rYYR9F`nIa;:C71B"iu^0bjjtdmDB*9/I_nI!lmtT2@[5$77jtsJ
%\?9RNlCojB@Hu':kAL)npFg7Yfb_(K6?O3I$b=V]=[dHl(Cd?OasH2G`87K:qI791H8muiZ9nA%An%]/X@FaqCs#5l9ge/fX+h-,
%];(F:=Z[E8DO?-QBC-sJ>-HQGVrF.[?e8>!\8la]ejA(ObT`ApYH@Fkh9CsM95CcGgXD32UnCZBGjKYto'#q[JVAKiJKC:ZLpN[5
%>Bn!thGtJ>C]SDo44aJfNG;EiHLE?BQ"j:'$d5Z[W2q=PWu$u2.P\tE'9A$ZRp5^7\>Y7^:unn^m1L:=Q_0OC=r3hpPk).j(]Liq
%5^TG\DsJUSW-Y+jBW"9Rg(s7[(/l=MHRcjJX2&'OrIlc'Kqe6kA:4HFipLRI*Na9t*tWfK!Pp`4'O2h_DM8:M<G:kW4Lbb)`aM0L
%%tt0o#6s&o#egWQ^)78o-$Go&C]jokjM;o'r`PWDa3NUL3X=83_/!+[?eOr&iRaTH)\0M"DR\JnF6nqDA(cA)\j0VfCg#_5?(5G/
%DeR7#f2[m_'pGZf00LpqJGrZ]$_#OPI4UTsi>STtBWuVA<!)Ptok4Xp4S3bpJ\.nuV%5e*?*"J@jMMJFA3]%(*`oL2c!WRjPdU)"
%Op%KVYE\7Zo%[;+CX%W<+MnQu^3#loRClsUSK-Hi24:f[$,%rrr-7Jclf,lpKNA2A/[IB=:f8*W\Hon8_CeK"$kU#^N4`#jqC0C`
%56V[JodZ4;lp3Ai=nIN+goMdT68%]^H#bODip[Z/8Xf"*,F]QX+5VcaG_sl-R$0DH30+6`Q3S8R_,r0@kE7'ucKY1ulTZ-gpO3bY
%QfaQgflAFH0\=.bVMc<`>+-sb`OS`Ye6%"!M.Xk'KB&nU',B8hR@eJlG&p\8!l_riVFF.%N/OE<R^I/"9Jd^)U>J+r2Y;I$rN?%c
%q`Sm#p*Ic!Jq.sO,TQm$_O2J!;,8bC??`<%:MK#lI,H'TbKMX-<;Y2GXlHG]E7P!b.9:X@ca$DK4jAQTF;U33I"hJ2LWO?!n`mrA
%;[5PKU_'\Q^rQ)AHdGPKH"J]7-VPAl9U"ljft$6AWZ,XhB>9ihrDDBum#E'pK0Dbj0qZ#tBeaF<*R!$E=!.#8SN<rM.<h;O]@Bm(
%U/!Tmns6"Pe3d.>WrcCf^:pi5\5N?aW`LC&95O.TPbVb]5tt>08E?g2jCj!o^>qb?4J"+`pq6)3BX@k8dR3[DBV`P&03QF3Z<kI"
%KIatj+rp*tK&Rfd/!E)L]F&nW9Hdes1:7CC^m?#M_M=/gPOL?&#@\Yo_M/"'`P#N+Q-?qW16EI_1Y4sUU3[67NY=&Y6i+0O78c\N
%m]-9R<@&*M,_/:qO1D-9Zr@Q;273'0X-Tb_dP+9#"U%H%pKC9dm.9dc.uKq7hJdV?Dn.poXtk24*a"PAIFD2;%<2[;TI5:"Cur$T
%X"7,5*`Hd/$Ls?n?PGW!@OY6(\%k,p.u&)DWR#!'q7/sm9XIaY,*&Bd;(Q3*<Y6%TU*oH9Po9b2Jg51TiIN5^6[F]L,MbKQ"%R!S
%8rlW/oQDePiIRcIA<\-r)ck?p($(mFc,s0i-*DBGH`O!SG+9ki6=FY18>o#`_cH`q>d9TX9J*<M*oe`G@2[R6CfN/?h'<qsYS8+,
%n!<#%e3Iq0Y`fe5YQS;"eZd/Q:3QEnW9u"--k1):/`"$.=I&*M%GN7c+fW"-"M=uo1j=;[$/WAD9U7]rM:N5b_rjB>2iAou4FtI*
%VHJnVKuG`ma4_)Gn2QIl6n\n3)gf3W,C1f):CPa9U9H\km#aH@'IOZj(o=-pWNkt.OP5?!_e\HOp<SNgU>lfV2J.^67cAZuo\cAj
%U'K0&7*3Ym_Z9S,b<K%^MjqjqKW`p2?WKS*PYb+T/fkfE;mVf+jc^K"KI)jo_lIRq/@C2&QC!o+q/oo%HfkN>0kEBHA;a0Q=18lC
%0!D&fq&5c0<;",.M5sBZ4o8^;'i<a![XKYo.3!bA]G58QDE;Hl/'#I%rH-;&H!.eXDX3!:$?<Kj3gA5<Pg&so>+GQq39>iPm:A0:
%Pr"^l:G'4=&sbtQcRK<'qHk\X?)V7)+'!A;)X44HF;FhH-*W\Yp"3F?F(;1L;#"?rCs`[_cBN3mkL$9CYKh8cUu%*\*(dgo8Z8Rd
%H'X\:m,(4_.6gQ*BlBS)oe.OTIe8V$SKt8:d,$b6^PH:n[^kf`9E\F$=DFV5SuS(jeZ>KGMSHhM6sm]+.'$3H7q76"X;H8_;_^(`
%qI$LU-r*racIZILe9S<s:RuRQ0tX^#ppqpjD05hQ<`'cOF`_2@Q*`$;/>2F5Z:/)uVWB++Y3p=9MtRY'RGVSB*uBsP?=E5df!Z(/
%q9Xg#(IoTkGOGt4HmM-_J_hhXJqag5r[iZ@U@ckdY-,XeAa&pOb4<15?A%@Of"Tu5jkCSTU2lKn3@>=J*WMi"7!J6f!L'A0Q59e)
%:"VG[-?!DNqN_P+4DhfqI\FJBT^3J5YB\5+"E<EphHYL)P1H'gV(%[J3UX"uM_k2^'rLULZ!(;qX>Qh&NA@Q?SB2?i<aYr6SLH!7
%b(Z6=i)3hjGYr93Q&;hWVNN@\94R59\Nf<U=QF^AL?H9_G6Z7WFB!H!10am82^(u-o-\eKAcL%KL?*jV>;,lt(OK0Q8&"Z%YDXRZ
%nIrS.Z@D&6E:Ap;lQmkS7+f=9ln*X^p5q&H9Rn9iL5f8"_._h<Bjh0q1Gn&(;1m;Kn[sXUiB?B*eA+#eIPQ3L2$cp(;Mnj!fDAIa
%-_guP_0ujj<UA>B?cdaKqpbfhe5is6hu0!eX1HsFrOURF'e\d_ea:ttJ'2]D_YkDIX).)Q)Tkm_hi>+Q6s8pE\i@1SZE+?UZD4LI
%^[>t#qmGlo^OHW/^]%EoVU.S("h1#E4XKa-i!;m]/I5&j(\H'Q7&,TM;:'#PT$Tcd-/e*#dkL=JYOg\L?s(E\rQk5O[(J+P%9`(=
%&-6#kF:VGc$kdhED#<t=m\>d<mED:a?((B^jfW"[CX]C=>aMO*k+OhEblK;)Z,48YN3u(&?uJo6B/Atr@bblMND$*alHIIcDl0!S
%8:RRJ5'JV\?f16-P4/fLd=@+OW#`(s\s'.1=!McE[]raIHW;e)n\;c^V2hX:mK1g\Sg3iLFJ6Eu.Ts^ZSt"oYZ(8CuFF:)`H9ZQ_
%M,1!MR2fcA\W>1=<Z5<a>8pie?Q3Dmj/0F*@=fG=^H&-oSApl,f#`o2H6^V<oqP`On%>YYP5?stqnhpoSB^8<SGc!F@s'*Pm[DW#
%4A9i!$e(Q4X!m,/;hm%M9)MS[9&ZAY=#M)B+4CZZTWpr+A'O/E55\MhQ8VlKH4NbOgiknT=ZG(iTVI1(N/XrYB%hCm8HYNLOAcZK
%/PC)X:f@BME[qgY74E0Pd2qeQM5&@EBuQRm^l$1hftDcC2k^OI,G$u1U:mP<"!);FNe\*b4;T-7"!1YAcMej<rS+RRpK4m9a+c",
%GJWsK4dYVfgB&d]"BiJAE%U1sjZS,704"eE&>1SOHk0mT/Ft43MV*G-q-Jt:bq.>/[c6'=#kq>Xqm.reA>L?3I)9*S=$U:uP]uNR
%m7'srM"_tEm^(pM]_Jh1c#,l&9.K8lXLrV!^S&%GC0Elc)fLH15ap=8"m`\<_?8Fh7"_Qub@V-f^("8$.uNOq*LdoWbFF>S&WbDZ
%j6t7KTF7G"HY;b@a2bE-IPcT/JC-g1"H.oHG("1(89rs+m(hnepKQC!Xgd-rr>uWE]_1BhTZa'hNXJQA/ZDs#4KUU"VX&-kc)4d-
%jU$Xu9Em,-j7fD?NtnfKAb#H<VBZa%nM\iPhdVI%R*LWp3V/f<JL.+=TQ91A7kZE5+"Bs@aCqbSd="+^UH'5X\Z1<KJ9(Pr:jrTs
%*s!cSe&5mfpe2?nC#U;)q"Fq?s6\)&mC-%@[tkeQO2H9<Hli4q&#B"WGbV>P@kH"$Tbj#Za-B6K)[0N_?W@H6ha*NZKh>a2^"E<[
%CAVt5\.7-fTZ\o\mX6_DLsu6_b<P(5f9(>#Ed>4e'^U]ZK'T/FW%+\V(sk3diA'rD0@qXNT:i[fgi3;lcS+23s3:!$lM6?f`_Kb9
%r>>_7N.HDs^cl79T/!Rr(t`I0ln\k>)$BbPgO@.(51@G_ReTPiT/!QGKn2h=f73h_op9T(^4,hIoq-^4oA3I85C)tAhg`\m7fD\s
%kO79`^O7\7r8EDq4o`Eh2_a15Y<1pb>nXb^-^/p:`F7Ip@D84b??Th#GB#s?</c(*5Q:1+q"]RA@HiW\J,HAHrVt".s&3,$,1Edn
%p$SIOa0>I')6`lg?O9Wu<I3MMMrq&ZmXDQWXs<hoU6?P@b>)C(^VAU>I<U#5in_d:YFiT.lg>ScHBQ$+]Qs*`pXB'oD1]JcJ+N6e
%S$u`HT"k&5RDuF[p[Zl5f>#"Kna:&%^VLZb2u]igs'L6%?;C@X^F=(H&$l@H%)X&*hM(AF;>Mi#1*Lei\)=-5I'.lKVf<XHh)M4?
%F5qK]@a6l)A%G$!=D7utj5WlmgtdK[=m+s0TgNO5GA`rD'ISe:mY+t-a@(a+k%PN-Q>J*7%maC[9%!Z^j.,S"fsGg!]M%i5G"5ep
%AiE94d_5""*9>%[-X57sbB,+miM@jWjY>'/1>[isiq64.#BrAQki_2*G_Fr\LU`fXq03tL-IHXR5O)tADT)7;rS8mQaUSc**-X2R
%r++-g&[e(j]+Kbe?^.TXG&EW[p>F0?Zgb_8Nq+/'/fX7UCM/uRAt$kbr[nIPg?%QOHHb=n;`9UI%C"c%%d1GP]ESg/a&o2mj(!jF
%@7*"K*dWp/V0hC&,RlNqC#B!(N1aE'pR1-2AXj@1abXIe6IQUbDI_Q%?DlK"e-'X^@OK6B19Mcr>bQrcO"p`&5e:R%[&:2r8D09k
%PI'_T.H;0d0\g0"0o?[mM.SOj`!o"ML)t!gou[ul$Ju;%7IV@N0O\\c1-B3U4^s_pJ7aRDj;s\#O1cto'/I&9:q2-\XY#a?QVMbA
%_.RW994aq(&1Lgo%FC7Bl[F_?.[N1>3S>`m:,9iFR-$Kh]8d!e,QA6f`.\NiDV%I\bk9$p8Ks=B"/TI#SNNRiHBs=[2PU<M#.L*k
%cELl';:ZnceBX;h16^A^2XA2hNR7YIibp2feXb?/&_-6fS?b-cUC_VND9I[!hL\*BZ7"^i"uK"pD%K9FSpZ]tN+e]sho86rSB&nP
%SY'mXlr!6(D[o+!G*T/pm'sgYJ9dDC&OEcZVE+6DfjFhjk.KGK1,guMZE7am'SsM8GKKiRQ."&3E!&Wh']gg2#lt%U#GigLU^TgD
%'.&_!Kr*uQ9.OruC%cbFIUEb-VjQ-M:eq?K@7i=[KL=$Ca"cD0U7')3i)3]S;*aORiBbc2XE2g\O9%o+#nuPM,0ON>d%&=/&@0(r
%N9!g`,.\3F69^iceuhE(PUddN_5/pR`!(2(%Rfn"MF`:3,^)5YmO0YS2ieiW-'Kd9/IYU#*oXP<fLbip[T=*A&Ts#ee74=2T[Ff-
%Vp3[AT;+in7TQrZN7oI<6-kt4gda$jZY_?K$jMF77\;D<R4SmpdZbC+09lQ%$HE:iQXA1^-PJDsAM-FaTehQFYU'\#egEhE2a($0
%6e"gj&PG7-]Z\R:*'ILo$I'8>.EY/(.<MC@lOmfG7?8&d3E*HPPKBXF%^=1<+K8Tq=3*(L"RgkWlnFB<*#tkTQ5G#Vh`qo-Zt,;P
%jiV7A!eQZ'-<W*KA"7AE1^h,:D9;q&ffN&G;>'u;M?F#7%G6\C6_"cTquNTRQbf@UKCEE($[!i1`JC!U9CT:D'I!l9npH.kj`s7d
%Q?u#..-PZ(N5ui*A1C(-*@&'8DB1IdS9A'%4Q=cq".'mefbWsXmL^TIA^t.P981Nba!CCMRC<aH=E[HV3Wr\*mA:1@?'q9j.8-bB
%(#ZqLrZ6b?fTID"d%XcJ>(i9dc@M?,!@7#'7tMaLCR<'H*KG9fK+V&'_POe&16MnUVS:(d=\bXp55>cN?8cjk0j#_TgjVYU\<mpr
%&j[F(C^n8"lGUeV(VSNW`gj@\2M.8"R?neU,GtrH@_=CJ+]lAcr<Wn]6U/^KGdM!@gUqKmH,OdG.-+^@Zp;2<K`j1_CQ&p<n.E9(
%aB<BrV$/D(lI<r#B"%JC.)[BA)Xq&s1_4&nm4arKZcLE[3<Bj8E3m?lqC5a(?htbTNAmnkU__saL`CALPB=\_b*kl-N8Ai`EfD8K
%>/juoP^TRa8P;VF"NHrYlo#E4aA.jM@OK;$6nAF`-CtUj:,,\X0LM[m#YlKe_!23YcFd&"N6]"VLV<g(A=[\+a*MI^hT)GX[`"%5
%'/(%L_fL.f5b;aB;Pc'UBo[fVC`XS[*6Q&&]iH1M\2s8C;2$B@&YJu''U8qM"3nE.TfMtJ/Ps?YoLruG/*1EkOl\]ccHS]1,"1fj
%Cc@KV&WcTp3AG+(NO&752-bhDL+gk;aL[&_WV;+2d,J%9f*;s$*Wt]@8@+,87'1eOX'P-:9.kRH/MRLc'q@E%AhZa**ZPl6=\dNE
%dP18Qr"KO$aK7Vr0L,U^nBn$!0/QAUcdZ:A!OE*YqN+DV'p/r4FQQJJ=:(23QK*j2V[6(uZ7emWGWs\_(2=V62*m$*0=.JiBe&D0
%d$J5E'h23!+h#83<nZ7f/O;iPh82L6dNTYWF,u,LOpeIJ;'b.G;GmP!7SAIe"hj2?@5#_SUkSYk]kLO3MHLb?9(nr0Z)TV-WB0hO
%1<0^XFg,ge@^)$$Lfq$o&?rjdP#=UTEc10$,h]&^F#bnnRHBN'g<>j&@^D4qBq<)g-W.[ld$M0H94a"n[^;!G0.)a]M'')b3SANg
%e0]8`$nTInj6m\(57$/SbFiWJ_oGYBc/EB^ch?]n$;dC0G5BkE]5f?q%@"n3BSp)98"E$d7!1g`Jsnf!3b0CcB%A7m7Q.;b.+CsD
%$B[H-kUI7+B(.fCb7LD=#`VUI/eZ?2BH73m7!%/pZYf$DqG*V0$=0TV&6%/Gd6W"OYcOBGF<3/kRC4c&([O4=0X^'`)lgRoRSPP(
%.$$BgV%I.'_or7T7f<P&n$U]l$ibGZ^\I'>n`El_p%5THhgY7dmE=+2gAUY_fY;\$_mdC/oBnV6?3;!rU(ng1R0o*NT#emD!!A$Z
%Va2_1La@$?1Vs:\/'9*(VlWO1=[hpeofTLT`,JZ'#[hIFne5\6(,A`-^k-mt;/n'j9c>$t/hA!J^C3+-I7#oIW;&/oWT]6bNIqL"
%i^I9V_L^7?n=ma?CT:hI%='#%AbhjgIS0X`5CCo9(8)9dFj+$5eS,aT&Z!6Ig9,#Q%Yc3:&[KWB)HO($^+HWT6p`jE":u9SEcpiL
%1mL)H1F,Hjk:a\O`*IQA-t3fY0Fm'75m3OS#j;WV/p%-%&'UfS25+Gd3+=NY4<k;E!(2Z80N,`?4_iRQl4jdTClcPkFYe8tW7]QQ
%^j(L"kZWV];V>A$#?T68%4'C;3>@l>drC!L6aWRS3j:CQj;c2!6D/Ykak6YB$iglT$U=u)m6`eLM@q4E7\)I)$nO(7$/hYi/)UYA
%5'(ODSdmEso?M_;Gm%;Jo:Tj$5&+fQSR!ndLt2uN9BIiqln2GN.)r2@7837`^_CeO.<=!LoT&Y[D+XPg.(Hbj[(S1OQqucGUbFW$
%Vk@A5CSAF#9]jC43X-.ZpK0Ue87pt.0udfR0$k3/=aCpXF0'2%<,*'5<G!8KoaDBEar8NiTJmmE3i,9d796j20Z#b<2NJCbB^qGi
%["o>OYm!Z+)FCHf%aL)\FWQGBo6:lK+&G66/RhA0lk^rJ?5?l$m.j4P)%=croH3n:9MD6S2a\D0.A'$+&8RbJeT66pMXh`d0?Z+Q
%5a*6dGu4BkG?/.(Nf\*2g+=9O41*'UQ+J@[[\?"c=JX5uI4`*7p1prIWTdrDarWWCKKP2*%jitG<X1Ku'Y@S<AbH4t_nuTi28kEe
%/+QSmLQr"/6jj_9]/5'*i#]a:AY#c>NR2CdJh8_Q\b$C$1k\W_JnglCNjBt@ar8A)aCaGW,WgNOijnkj79KY):M;Xg%=/)R?!'5N
%L<[<.';C8f<@fNAnOt:G#,9*]gkk*bAX::dqA-G-&S0aN6P44%eaY=l7-_a2=L;TQ]W[DQRY?Ik#X3#rbUgt'G.$['-qFKJ>(^NV
%=B1<US/)^7RB3$kCZ,/KhQEus`l/ar'BBQAH__E'N*2H2nKF)Hi8bTh*R.m6)8LYW&CY-I"!<Vj4:IW0@17lYM..q!$.l$K(hA11
%e4`^C`FoeeY;DXPHRLRPLgRMsY(UGTM?eLVPJ/2G$6Thu$%u<%NBF:9eg/Is<Y\f:\B0bb2*7#[$'XYN1KB2ql4B^q2D`-L=H@J-
%dD]\IKfp%3`Fq\u/iSJ.+KUr7blRjn(9pFo[-S[a1G/hJNb-@C"n9Xkj<:09_\Sf9r"cn;bU#':KLMoKlbH-UKN/1NR$D1F"qk_'
%;'&T`WhYd?M&6p$*8\#PQ39tq/]s%*PsGjo`6$,pR%==P$APE*=<oC:`82]87:$9%kB[::fEI0f"pKm92dfi(FY8_/=G;g`f8ube
%/pO]b^s3Ub(G3EeJB%tsQ+t!6Gd=)EBt"J`XbDP@.??(Y#Bk3^PS&$hZ,P`hd3;&[D)Gabni7:%^fn$h-Q5?KQf/a;A"E;G'GiL"
%WI>62.W?ls36HWB+XRP:!;"l?N<$Y`Yc^Mdn4aKZ"qdW(HD^gPIA0i?3J=,+5`W_d#hZRB=u(5*,?M/HJ2LpGkrHoA#ADKsqC&j.
%d!fg<e1sF)Yaqu"USBjo2Q5N@^19aT0IOI]Hl'_cK.An"kho!pIHb@(Xuq8OM,C^A4Y!P#ddj,-$+?0Y_ki(/Ue`\^D`ALi"/$iX
%D%&(-:IkjrUJ%h7+W=m"'K:`i)QR0m]1LDb1`3pCX%Dc34:kY@THQ.mkr]!G[c.$khaKrKbB(H"#o*Vi/-U6jd/[9l9$/sW;OEJ0
%@Y+BniXGlrWO5$@6dZHf=iLJB8a[hI\55D#=b]9PhFrg0R6++T2C^h^9fOOUjYAH`0XRk+$*4D;C5N=H[uhf7+r1b/3N+tJ$@UX2
%p'UM%//'+AQkZfu(CG$rV9U5#IrA5CN@f5u!9;.fi-Hj1Og0H5JasNLn8p5>_4YC*qd^(;U9K"MFe>#G"]2uMFJ:eB&If1AAn$@4
%!>LtVJ8J%oc9uqO&%E#hrSRrMJ;]+PR3milO;drCZ%s3iihS1h@:PNKU8`Ea087r;71R019CtOs]K$5[iDms<?SMlf!XqrbE,^Mg
%:dFdUY5pO.cQ[!jg"sU<_/LR;-?rp/f:kQqSpDEeO),i1A!_k/\UqU6TJ#iI(sK-)!)+)7'#L;f0#n!7'IG&Ga9gda3ba+)1)R]l
%=BmI,4+ZO_Zt-[&kTQSb;CH>rS/=XFE\>Gti8n%2F[-pu.j,hI@X&+XK]&9G0[.u&S/%un*0b-A9H_MFI0PJ,e&!5<8q[jMs6q[/
%&X3JS#":ls7RaUoY%=/]+q7-X-APD!;0_1RppfED1KZ,sEEK7AOX_Rl>+:uO5"(c_nFk;9&:IKA/ipF<S;:GomRWo+D5:!CkjOWW
%$WTTh.sVI+Ju)p0jT>7HoUs)-6mh8YmOJ)3\Y#[/!oR5?S3T^t+k1!%Js`d",?n,Q"-4<#5J\QG[I../J&[sULpCQF'O?TR(b+N3
%[77jX0X>ORnFe0tEH"V@'3OYe+f#&;hWm$!n/1$@iF$g"qa3oYHdkn&[1HRAgS/#4;E'aPLp\V+']<?;:9H1c(;s+?gSM>G@dts7
%L0t)9!c1TlW_c-i9B!m`.Td\iH4QC\6=P'!EZCLEF`"sF+Tn$s@Z`!prGiFW?lRX9>WqDNT@Sd*U^u[+#pW/s&5Hb4dP0m3`+G`d
%I*J%l;9[066'*lu9JN@DQ]4?H%6U^IU#-X9AcgQgDWII^J=UKB%J1a94k4477?WX-<"j>C_>>?QRR.kRPG@M+5m*B0#hTI]A29o*
%p]rgM6DZllcp/sl<1,@K3`;W`V?r_d>);G,V'BLCPUE>*ba:YV.3q-*0VXAk,__/<*-$LQ%=_.JAVU3oMAf4FV"#K`ROEtsoF.pr
%gBRh?-65Kg*HdlsF4*0od2a&S0a#@.9Mig'(QXT=;@&#QDGCXX+aemcdfAtPf#'&f$8n4`@3G+QR^k9%$STglWG0rbMbP[aA4,U,
%)Dae;hq0*tUG@j1;)[Ne`+krP#I>nM=6>p"3bYV!,H;ac]oI7\3&<pETK>R,%O/)*n9uoH*)/LR!%!5J#p>R\*F*"A\PAe9`/.pM
%>'LGA`8iN0,f5a(!HKD$`ha9a*_s?cl7X?M>1=@n%WMHaJ-r[1nOD1ed=+N+9NGjPqF0B8U/,<5Ah%kp.R4Xb0a2Gkobf[TPRrTT
%=4C%T+PrA-_4g0cj_PDB>t!WDpI0uZkbesm&8'-A*8L2G,5Pi5"V$i#R[8PkRP5%m9Eqp2ZN:H[8OFksX<o(ko,l3m@cH<(biXIb
%(aXRR(3^#>(gZ6&NGc`I_%qTU-7_Q1A>%?XF3i<H2.Ddg,84O+[%M\pJrDr4d<R+2kh$b2L5,(MA2#e"A1GYVDsB%m&(6GtK+mos
%e5/Y'[:&o@JDhV&ZGl-S@4<K36j`^%_OspWquWU@Nb-dol/%W.Q[s2tN:,n#"'5Nj3jU2E6V^'3Kar[56gPMGd0Ujm%64I0)a&7P
%@n=Hs)B]jS+SFFs?4>M`^/upD<=V8Ml2h9lKY/_+Ni93B&JtuD$(-5OJ"cm[S1#I:+GS1RMHn!^O-_l$R:mP2@%9a[Wd.^-GZ:kd
%)8\.M@D->#7tsqob/\=Tk)],/c*'12U]kI*"\MDPl@kfsKF'.$&<]*K`2"q\;Gn&2Xc+3h7*Gi:-h%Sn6(),Ec"\Ma"l+g^WNf52
%0?jl>YQ@sN3r.Jpi!0IARk(k#aPk>[S>`,A'*AKFWe/+fKYChZP6R^#<\kF#&HO^U+cK5%n=](G#8f`9#=''b$DU2$(WE>Hd[gI^
%AF=/7EBIl1EG'rm+B7k""'cH5>G7)X>p_W'&`%BASA?ic+3>,RS00S?<WO7>)\`>m#!?)I6UO4o_.[Tf'G`Wu+YU+4J@mVB%[!`n
%^dthi!ZkgJmMT[t.6!W,<K?S@g`:n\)5^=MW=-We&Mc3o%i-*<Z@uBa(ciC6>h\[sE.3Qj1'$MH5:'nI%0eBkEC)^"E"HPmnM!:q
%%!3R9^)?pmJDbt":F$Rq)\[\;eL%K9%u_eYA<s"!#]0j"&5K4'6"H?b;)0O)S;qn<UIX5S"?N,jMH.b`+O#d1#F.V80/+@IQBVJ*
%iLKIQ&"t]'<V1VA=0[.gl=@715oMS?#%OM*MAAh=.estCL$!*f'?h"j:1J<0e5/"H@8C"ZEs(l!k63M,LdZo^"un9].)\-])`&o1
%QaO.kXnf!R%$&L<-KKF[h9XKcN.52PiMl=!Gp`#'gluOokLW5;.FjD;WZ/*UKL.s3V!42<lYB1QO!74d$\9V2bVc>$fVFtl5U@;5
%"U$<qkipMnNWr=YpqCLI(#UE-V*3fBA5NFKWf0o6$C1q8D^$_D0e%RSC*Gu*Jd/mkP1D%r,^A:P.8h.BWQO@%Wan(q;ge`W;QhfX
%d#m,qogDfT+X;Qmde=5UoN4C4![`_IJoh!EQH?';YQV&na"k5WTbJ[bkcZ-B8DO_a!d#K^<CHG!<\PWJU&mOZ1dQ:u8O-L1%2-2U
%g8Nu$FS>UKXPf9)'I9@/Qi[EJ%2L_:8>+iV"AZjg&J>-KKX7S]+$p1"/+!Nr84oUC,f".O_Jq?n#?NY%#6"Zk6NVmY+U[ITOu3Wa
%^kOfu[#-,cJ=sIS2CrBjX,(;@V%;+</njS`ppZE?=Ydqs/_3#=#,+.B]lZQ:%<t#!^h]_`?B?>>KXFK@RUfYWA]=m@^_:`%'#hb(
%9IKrm&3':Z6KYj7!>1t,Adp<tpm[(f9mWeI_!`rkoTA\S1'7!3ZDo[I_'6t)bC#^:=[:]_E(5I?Tg]%h7mqtp=\**kO1mQB0TBJ$
%d*]ec`#XpQi(D?O&8rrt1_fk`#p"1<1k@r89&9<QX.JN3cQiL;k(^\FNQ$+&k>IiU/.W6c!/FfY72@'D!D7rF27CJb"U)S;[f_*k
%::jG$3,6g$R#8FOWa\D9lm(;9<[H7]C!^FGnO^D8hW.LTCpc/KD4VAC-G0rke=e4LZk3>0H:<0)FLYgH`SoUfCs[31Un.ie(p4/#
%6c0=!5]C+EcQr&_64bJWKE[E%9F#o-c(Oj>g&DoK&M`=`']0j#!r#So(W(MaK\r*+eAi<KH[sFIk;$^1F[S+fR%pfH293;;i-.eH
%Pek$<Q&_m0,:&P3Ob9C0\g]Eb?51XWB-#sg3I5FDdnJ4A:_H#)lfJ1oXahW!Xi?9Y(@VVZBV]RO^=Q0WkpQ-I)!M-K>=BbG10"I<
%`9:bd;XtAH`0F_<_4bNKDIQG-)W,"27RNB4)QJiu<JP7d+ZM.*+HJcspi4,IYnB$Yfiq;".F&K;&l\Io,+]ejV2#&)#E<V&#1*Dt
%p[iUS.U1k=VoUgO3GW<?LC]!@2^Ae?ER1;cQt`*;`f>eLNq7QG=TZ78P6XX>(.]m!;s!^!C_QQ9DLlIKO=9N_"pQ_2*?Jl34C$+k
%+/o?"*MRiXLpu4sU`lZhM\b!1Lqbbj@nZ/42at7#Cj!fe+XfT]#^D_+%QKsKd?5pFdQsQU`k@VPM@?XZIkn5V[)bH'I+2!CUDic]
%3QY+p0ff@^S3-rOrk8f%\Sc(ME>f>,<W[f;fBA3N%i1h'L15BPfF$br8(LupnX!K'N<^t*Ka8&)&LmeiSYuu=-q-$*A7q,6%!8r-
%?n4\J%iEJ\Zu'?<$f8UX#.u+>EQ7[CFL5/c9NE.*6^]WPBRq5D('juK+AnOYN*ES\U\\[&A.B0X#aYc2:Bh3"1VC$2,OdW&or^&2
%3!;[8<dbOpM!Fb+KE^^O0f.4)lJV&;DJ7Gj&K--Pd(oDZ1pf@r6pbVc&loLn$pph#e-:RSg8)V?aGcT;;)sH0VB#f+1Md):LmX[p
%8K8KCLBZnL'it/6\<`9JU/+75`rbmcM<^eq`JO[)GSlg&_89jj!uQ1$Jja!b%_NDtf#=85An%F):.^ER99Ja-K;P+EQ,3rLCgkDR
%?($LlUG^Hd2&T*QUW",)N!DeV&5f/;mpo0^L&s(rO"H`mLto#@`8SL(a[&^5Fr`o`,4p?>K4BJI01"9%9A@=Dg2:GBJ<Do9efLbD
%m_RO8ZnPb@7n[p190Mn/KV>B"Lq^6)dd.*q6>Xc3nMPAl4s[:)0YWZ6Kd]b[!.?eb\/DtT;Po^Q:aDB0,rA,qbo51TN8XbE@D(*#
%apM<3]m:t\hP/"+&N7V*5oB_.#Vl;2Oq*Sb"1h/KGjZm1Bi.Z:%MPVnJ6O8ZW,kR.MXu,"--%8(C;sZPTIG7D11C-;O<RY/j6$G_
%,!qDe3NtjRd_LEh\2\f`0jZ2%,CZeMlbf4p01R5h>Ih_0P5q=(@fa2Scm?U+@Wc9C9o$ldYu+uCi)G69^b:[$PK(OK\TD&59qY],
%lUpG/L`Pi3(f/\.7Oo_?dU[?.0GS!u0k?E.gGE]'#[28;/*lmI%HV4lL3mLI!%\"1CC]0]K`M^?0HYiH:%[6s`Q(OXSe_A0-3sM[
%S^\T+NQW6VL9OS"E'k?:J;O"=@Ll3t%Mg1'(L$SDRYM_2'H`u)D`E;J_Sn!SYpCS^b:WrIUUB0c!s4I<LeJ)"LnTYf4oq*LZr&-Y
%6XVAF%oe/e-7k<'oVQA^C3ts4NR'*H,:!uC_O-*#bDG0!GR=mA%J4f4nRmp=%/jVm.2YJ_k6Mht0S6KflE[7Y*t=Wh5X6CLM+7qp
%r[XB'OPJ,n`&]#QOU8QC5thJR%#U")bSEhT%4k'C8/Rq9@B\5q*e;-N5,V?9+>$h(8IFaUU.t:e5Q^[8&nYt&/Z4t7:74HD1aj<i
%<#[6&E/]o6%!.hWUs9.jIa/k/`\940^l8?LaHPQVB=+ua'M,@A1'<n6YgU?E=XHh$DUcU,,07R,l8^L)?;?Dclj+gs!i_]4J@=s+
%nXQE@i9$-UV$'2rYVX2YU7+lpU"&SO3XcV[Njl3Q3YY=#1oD,\bGl$(^*ruT:5)gg6*<77ntml=2"I$j7'7<YK#0AS0rDG;,H-gB
%l\&?TP\-,Z'6Edg"Q`O!O+nL8_.O=T`W-Ia@[C([-$.7]bL.if_L!\Z&A8UQ%PA<X]LX$D!V<N1L`-=_@"]jhFef:s"OKDmLQ\t1
%b1S5"N;-s"'S*r^=sBOA&Z4^YS<Rrb=`"R,OKhiX_/nO,F4,"Wa;@CE=d2ploMI/#,DNuoV]ql_#&"#_NZ'QF42`brJ:^a<gPO$/
%4/DBJdDO&h/F^lcXSUF/W_45S[(A$p"IK`L4$]FBW=)n%JuT7>PbJIHI%mlC&7C;%"e7YR\W&.4.O[soU=U0>LS<!g*R?qcfUl:V
%T&pDD_q?:Yq!;NC1q_5q6R/.)bCb&,0AK6O2?L;XA6FGNTk+lPC,a[gcg[VuRZG[W<pp.-ZN1&Qd\3aN_MV&gm%O9&B<&r?OH/7g
%&C8uS3,aK7!+c-@MIHT'<qA$jm)Ti)Ars:,7-$=@`^:1j*lujHB>)=5bTe<HTsFf!5`;YMf^QcH)VZN:NBgB$<m]c<S'@8RK5bmB
%2PPnX2%F'F)DH*Jj>A-O!Pu*'):>2;eL1[Lr,^MnSf&VIYnD;sr4pgDdA!eI&:qkeOT_kX:t,;s/0V]s7QY2olhG=b;`2Y$e_p`;
%Y94C94[3U*&j.!sGD.Gpe^,pi"6Bb;/PTPh(AKp&e-AW)lL'DaBro$g+:ME'?<I$gcA"5Fr>tP=K6j+G:Op1XC>EZ]5$`EC'^er(
%L5]6UDKl&TT70Z[6CQcG\!rq*<,)3jpL!ssq9.As+5_J?f<=*0O]@nMmd6Jc^9^SD0DY#6GPBG@h1,%(ggkj-H2#d[mJcXjj4B:=
%:@FU)LR`KBROP4is/i_iZl&sU8!r_9_7&PHT=%-Rb4*+*N\MY+?C"HSF+b_hKSR70G/B*h$Nc4E>"Q&HS%)tEO:r8OO@naoT><ga
%6&m:$/nh)A>0CTXW?2Ci@jjnm7od;4X=!iA7m./m($u^5/onI_OZ!Ss2r54.>;Lbc:Vka!a9Bg^s4:(4qQO'q#nHIY&A&KbD3a:=
%)MYb'm7=b,4K-$MmPgmN%TE)o\hYf>kmgJKp,jg=b``7jla%`['b,F>f4@Z*Aa?.h2M:7f\c>.p^!8:T;;hPc.?k$10Z2t>cShek
%NNJ.!XW#[uTM6r^pdr^un5!LULj`]s#L5'p//T.X"F$eT@%Xa9Oc_9'Y0it08Y\9HQ!@/5`A)au0IM/ZA_q-]E<P?WKQ]ff,HfQ5
%LC?2RqJse=KGJn"=[N@X:sbrN/SSqU&H[Xd?l6XFQt8r@p<g`BI=PUcc:p^cq>sq'lr&TIMN#=Z"cpku*Fn0^>S7OF`[#1_@hYuh
%TP+mg[2=6\SVRRmLuL_GK[)V6e2+sWT_'I"(+lV,@d&Eh3HF0ukE<YsPF]_Y/_T..$$OQe))2ReT-B5[Y7H$_<];]_H@_2%6@Z1O
%8C*s>T/i5XAcP`9((bXT+"65sL'nGVP.H!gl$h2+(VMY#QE5Yc>`dirHN5;.7EaN.NR'XfgutnI9)I$mX+O.q5T)KI;%k[,g>TYs
%4,bnB:6fWir'1YN*K^P\kTYO#PWX5g,r08QB/NPs4=i>o7:[;P/Yae!3]]1FRS1F]2i`nUR?GN*+obB6^.XAjMY($?j`Vj'>GPDF
%L<R<]1:"9C>m]8E&IPC:ZEJ'JN]]go8j$V5>$gou`FUln;$e12ZYP;on2RP=H.%"ToMb9XfQjF=8T$rR4q'bEQHG+aagku6MkKl(
%bR['6KO0]cV"HSHp%+htbgoTAoFWrqeE&nE,)5qeRcT)g4SU!p=%UJA,43G9h*s+I&PZ"VTM[<kBg*s5^iZ`AJHn6iQG\RU;khVA
%oqqmed?^T-g,+'%U&j#j,#[f+0Y431SMN3#l:>LA-?9?U0^#+Z#f$t,Nd;C,J^VJOADBa1N@'t1F)!hl8nUk%6Shl*QK8sk\f!8V
%d5%KD"BpU`k]/BoB2W=[Og!&f?QLHnY$$;m<$.%YTO(t0Q]3NrA[VHG33nusW8FadZu`3%3$Rp%^t^)C(=.mS=XhVPdA1sDhj1`-
%[CT(@d^AR1NAT4]_sTjN/@a?[i5S@M&(O([ctNh9]\D@g,D1YHa=_3^,-A=?5^q9Tk1M1!7s#AhjFNuXW#G_NEOcdqatQpE8mYPQ
%7*^BSjt7Qe#R[S(#W$P0'm0d"QB+RO.'P7XkX>'f^9:gt=FLqlQj:mh@Wb-7=29_MP:K,IF[9\eS8'[qW0(]m<"[\a4$kt?*hN*>
%VOoF]:+tY+KP;]dea;Y+!B6\.N]s"MV:+k-:',SO>D[Wb>58PG3)cr<"e5s3^,-C(:NNHVJFI$H/L0;LKm4c:VGp4(+Y,\A-k\h3
%#_I_lM3'0jD,a=%_Z/"K(R^:5)$V-6ol+Gb\L_TR.\q((N$(3Z27m%u!s)@XDM926M%[=R5oit%5Z&nT/n*f$@a^6t=:$%qXPsQ:
%gPB@ZUfn3N4_PDB;ug\!isgWM!oPidW+_j49:Q^If5(ToOCqg'KrE1F:d$kWn1Z7pL/M/Qd,[[NX/o&!.,HH.YlU[,UA>nrFf6fE
%V-59`@_+R)ZZ(#[1)jM0C`nL#&L/!P)S;594Rt1V,mKX@i++(^I:NK+`QX)sRSd9;3DH@D/.X4(3t5Bh'B2UEX"<,_Q^38d0eqg@
%\ZZPO*$2s*OdBM9,cH!XJ9%B3(P2r,E,XeoTurS?+Vocc\9E)S*So1+eGb"S%9/Mc52q7uT8M#/""^6f?o!sQ86gSurLDiX'8Je&
%76=foa`G#]W3N/@XHTM.cA8q3-A*Qa;KC=i<MlZf$8J9.dR5e9_L%^:26-D*_:XlIn3p!</5-j$T00.^Q$O!.$/hj<h(WOke\kEB
%8%aX(X2#(!a2*mqFI/-[Y%@52D26#oFap*3N%!W,l#G&T-J"iWO<<IbXK6*q,d&.Q#Wa^QhM,@Q)^@N;/2DbFl<O!J6k]iML=5:m
%CkW,,i1/eYRLP9FJ[(-T`LWCem=GPH!T.;;0>Lg\BUf"g1t4],o1+H"rNp'?`CW?`DOY0>ntsS>lAl%3ljQ^Y+kWLY:sFkurfdo)
%@O\QOK01#E$o'FLL)HZU8HVCa=TfKoC6b*\!FSMfPJ-Mn<mut#bu:XTZHOCX76W[mNik%6?-qW9XhQGkYliXM]Z.5i.7[')D.)m9
%?SA`k?pmXB!&Y`*n/oq08<C[6b=6(oZ.>:Ka52G\<RSj^"(3`SC#M=T[(6mN!lD*!5QekPl4DMWq!"^I?Ss(rj$T6M%0sor_kb9F
%[+Nf7V:T,(7r$0<HU1eg23,Nb,82Dok-D56Up3Jo[nrX&4A]e#a]SYNOUA?poo<ISA'$V&W8'=mReVEs>e3t1'lV!5pF$%&ZNcH<
%.]F4>W.uOSW"$f`,kjX)'b/Y4)8$'I4\MmY#t6`9aSZfHTti6JGFR:6!bsjb<nJ!o:qo53VO=-:i!WqBN;I6mA7'omG+M^H%U**B
%X?L5rS'<L:W19t`Caq;Dd*.Fn-Hd1Z<Kn(G$4CJL*V7K%*\BCh0(j<rY^RO$mU^@t#icqH3J8SupbZ.Y+JXf>SPg6.bBm_1,Ds8m
%G^Uu*)rRDM^j)?UMD6"doV4^,acp8ektKV-POhQ.-q6U.\3)JGTOhr=0U@ccB?=af#bG?(Qkc\&XUU<?5UT'QO2,[r^#_(W?-aIO
%0nkq@%I0#$'K27o06,*eScd0o,u$hXW#@"abo3.hcLS&Ja&i>BhNc&_RBttq(5Gel&=AG11Ch/%/X;\[BTp_#?(%cu#;*"rUr=!q
%Q1WqKTj[\dJ>>N2:-4C\pjbY;M5`uKo0B1^%sk3&b`2g7<01QE;Cu11Au7_qO9OY:&.#2QO"hFoCUbL<#m@"!>*0B@9FqI,0Z$Lm
%>[d>;]/"C[W\@s8c;ZNZdIJk,3UV0,;XZJ@Skso3>-\@CTS:1SkpNEkjL&,![u"it8=%e$r732Y@jr-oEFIEj4Y3X&Ua8ad_Mfsh
%89/^HK=!KX**u)>cW(f=8HJQ^PS0sP/:iYD[Y7?k)f$98h%ed$c@na>ce?7a!XR#rh3/"'DjbSV]de1V:^a42-4h)M;Oo%VodA/2
%:a7fp3U,\%Ygr@G,)n"G3GH/;5Em-;2RA2?/)em^$7"%-dW&U@_T5DP$@LMX%@WahBSGR2Y^:&N1-l%?rBD(5OHlKdb^<ZMZnaEI
%?l`M8";R=@R=28-^o@cqDap:/['9H1&5MB-+_5K_i9;-@9Ij_,3)+4<!hX"[^aZ!Yh4\sY\)O>dG\Z27`lDco**1Nf5/`,,4;S3S
%)Cej9Ju>Rt+=OX_o`iE/#E=2KR\D/,mu'Y(bQ5n`RhItUXmMI?,)B]oo#8^P!TB8-Yi;:LFC(Xt,/]5%6An2_=NtEF/,t@REgkmM
%Zd[W)64aeDTcD5A)$@@8?d4sI`8ITeVjV?9eJ0<,<@_0qJe+.88!j_71<;Rj_Dt0J@b;'1C[uRP8UL;&;:UMei"!u$V66DpI0Lom
%[,>5VCdG=$]@(J,[hcr:P^n+8ace9H>UoTV*ZQ4&blMs].)))kK3>#d!D!+(V0<i`AS>f-)QkV*Xhc2hVG-'oR\0(Z3DflfLY;0F
%"L8.\lHKBS<$P"liD=TYE,40RaL3!7$KeluP<ok38RkW]FRtqm@!]957!(?)dY/^eb2m:[_W_I+KmU7+D,A#N;aU*B'((!3[S5?6
%+Q-5YH43r_a6JpX]Kd]M`kA$7`CZtfR<QD!i:\ufjTo=Afg@H!)<NOrhP%QTdKA/)Pdk4S9*<bu!Tk^EaD*_A9d76/O=`9:K[:?0
%EAdoN@Q@!*Ci\$.//U:h.on6Tb0-a3HB,fFKDpSk378gHAsG0tEpiT?86JGI<kFNGesKuK[j5:1Cdh>'R\<)YZ1r2FZHTl/Qh&)p
%K#6FemodI0F%]sUj%YqX@72t5_H_0cW8FU1cW8_>LfttNERF)f<3UgC9=%?MZ4*aF\_4nOn.QRTEI?G4X>;VGa]pqs##PB)@8IPO
%M*Y%u;X1<a,rX@V)E>I`7lbXDY39!k!_Q?W3LK*%A6!ShZ)FWi!)`[\/=VVBSZIL/<.MC$$#jXTE.T:W[:\>JSP55BCO;>"LL-1P
%EZF$8R5Km.?&nbf!WlYfTr>*a.RZ9F&_]3&!FK4gWp`5\OhilH6)g:gM-VPe522g^'*hQU@GKb9*X]$,MVuZYn!Q2#:b[H5_D?uS
%+C#=D@\1X*<lga*9<Eq6dTe&))DkMtB/<4^9Y8#nUZBr\8ML2[AI/mF.7UD'DK@a=I5WL@/6hI6+auh`#I^k4[Bhp<,rutu`0f`m
%7ZJcR'XD5d@(Cc<Dt&;#/nr/^d,)V?.09if8.!(*5?RV*hEQXSkg<6`b$+>He2\HC1'8;*7]&1B@dI]mHIHnS42?^<4.Bh&<[IGB
%L^<`#S5#Tr'%!jm6HMkCA"6/Kr^cmUPf$FPou]A<-<q.rQ$4G9QK@p*QYTJ:_+NjKQiP0Je?%mfD3-LbDTl<O_%h:Qkh?<V$PpJp
%Zl&Pe?Mf<PMI^rj>&$-IF(!blc_tdJ$5iP>MeE/*<4=Vf\lcpi$bp>90#JnJA7f+Aa-W2RSJJ>LOfSh+FeJ#8?(g[PZ_d&i4(VI2
%'h0dk?</6Y<Tjo2_+DU("uYDMm&K5q<N"uL22m/@WiAP&\j>lCKk0+"%7)W,`$\YOki[JnJ$XYP\226;(0/>OBJ2t-7E&\E.FYSs
%iqUXflb95UPEZ)IQ'1.KC)bc^iq0gZYUV%2aHOS&8jRGrC>u;_8j2])>BQT-3H<.&4G6`]*#X9pC$0n%EF]JkjFFYD:dIdWQ8jKj
%FN=$M`:<\V^c*9u;W:'E+[2ubLF_^N[bB]M=qm^AeIM?'n_C-dGTBJW*0/u)M\9IWE.f4(Rd[P$3$+Z)=fE@#)AqsN0$B!q0M9f!
%X+j!pRV(H7L3#pg)JN&**(JWfH_T!u#?JZ?Zpi++B]0o,@X+7ln@0/@VsT;g[#97hLi+1`mYK^_7`*RS@b&?k>,:(X`PRIS1%W_+
%Kem<V!UZ^_3+H_O[ji+fE/b$AX\q,nRa0C;$AC8\I9MmB:OJ:kCPBV;J&FZ!b<k0JYJu.Q:^VoOA0HRtCS>\]PbPX7=XY9_)d#n4
%e-Q@)AH;Ct9K9-(@+!pILO?]SQD5-#`uFlreGBm;L_`=u6*1\N<.J&l[K>F[V8ELCe-Cd%_8>!(4SV$BR']iuB.;sS<lMo<UqZ>%
%*#p7OJK!.oi0YT%BO?u.`uIfE&L`p\;/=>^^3#XV;/.T]V6?0#q._m]]@,UcJ`ZB%Me-UA^)IOll<5*rler\2DPb1]QG,2c2Z$D#
%4)#upc%!'ohgD+;F1qG(i!?o%q9sX.9?9i1'aJY/MsB6SbcF8a&'hm#4]BOVZTo>.n7?la2"Rh$[6?PX,p7*!ed#h60>,nF=Wa/9
%1m$j'+.Pd-#$1Qfl\"M-l7@FDot`(*;"V13#\R!da(!k1JT.WOKCc3138_!\r6nOd*/ZJ'oG7,9=YH/=Y=j:_(5CiG"A45a[-4Q?
%('VPU]P?tWWt3J[/t\C6kI]E7[Cdmu%VW=@O43\,[Ejo8k2"VoB-<T\iDq%jd@::Mh,5=7NZZ^0Z9Gd.U7;Un4uc_JgT8s2B=VA"
%(uEDf6WgTM="Opm3Mkim(ZiI>jWMaJQ3Sc?a=)Ng%o1>$=djXe%h=_P!d1n3\DrKM^_'4fE.E0a)7HUW%WS7:;<icq<e:Qk;X/n0
%7<@K*ot_[+eJ3M5%h?VlF%M\j_;Qac>ZU-BZ\7C5;cW.9CM<&gXm1OcQHmaKed(q#XZ3H*K<p@F?]J0U+m%oLXl[ABk6;\b?Bb[b
%_1KJNIAK'9V+Gdj_6q7o<IJh'-N%cS_-:QK5.KI7i,`6I>_bfgfBS!t7jup'ohi>U(MuWVo40J_BcL49_)]IG2mkb-*J0<:E325^
%lZSGe(ZiJ=/<ur%H#TrU+^HT/%ZHZ5:Wr=eJCP>>0BL$$`Mj*BPR#5hR4f7[PR$qVVTZ]=#7%QXZ443(3:"Y#_=50$34>t)*4PLs
%"98Ytgeb\(UBZa[l@[![,k>%&K;4.c?*+Wt0YjsO&$8#T/')9P#0H`"/3;"D-]@iZ2#(07WRM1)QCM-,n94&j4ueNY`ql"ti%-ja
%DaLl.i%.)OR.8qrK4>(lJ>(KuBC+V;VcA.a^1EP3k#*;Vn]_,LDY:hCfZ'qnp[u?G9UH,ll[r\=)6:!C%ut7MV.h@ic4baqQ3-"V
%<Q%N+!oX]4"2^9qJT.a'l/u4m*2G<`@d]s[X&cCRbQ9--E=(UX/d9*4X*b=n<?Rg.OReW>JT-EZ-1jWWE0T\<3ma]g36R5W4LYCN
%%`%=BQdu5sRI;tLjh^OrMX$os3:(h,BU.T8J5()Y[5L!so2#_%0=[RI\n4THnDq""6R`EbB<A5jf**OQNNncQ`u?WX=,V[N''$[(
%#p+Y"_LAkTi5CRZWQpBUW:?_-K&H-r0\j+d"*^h?!C`oe#L9;]h0l=/cELfmOK$_3B*Nt=X7,A*UNrXE<U,,kK0eBjAbEjdU9AoI
%e-"$E2r.TZJO@cAM\A]?E9],X>-sOs%udcLXVuF4NqlQ^r5rpW<ss4m9`K9b<=GDJE*9rhPl>9O0&!;,-)kmgXK@If'E3LThR,A(
%j2r/9mKiarHu[*K#nsIhB9#0DPjLR,b-o1XS7BNt)[ZiR,ohJd%L>\Xr;)mum@@B[h$p)$Om6h__D;giXKG&WpLETu*3o$+_C[>t
%NC;Un;iK:dd2UCCJ`0)s/an65<c9.\+a3eZ:Kb^+-]_YfS%Q_kQQ@%6l"<hD",/*k>#Qni=<:F0;^u`a-Go:e>i;jA0L)I7i2h)@
%M81Q_asrRo"E%=9mE,VH37C*dW3&bO#]6LCZnd3=kf+461h?`d8KI@m"HE[<ka3!6;`b_qP`6"i%G#VFE75MUAjkR%?WLDi.WEh5
%!\E'(_"j^\LX2p7=k&)&5beCY$#G8]S5eFJk,DD5r00M,"jUXg!b[2t=9]ZW3+GW/c&'6X"A'6j7KcIRRP9OH&NEoN=\@2"^mSZm
%Y1/9C)%]OohO5(.;q.8CB8m1ee?^tEAjkP[cesEp%lgZq)K:Z@*-@4Bs.An5;dc*6,E2quFD]f])\4o2%p@@:irNdF+u>si0aVTF
%U-uWbJ>7h^of3PmR#FBMH,.g*X_]faJ/_OO_4[4dJFfa&$Btdc6#n,PTCRN=4@YJcaofpp7Q@$*#99V7k\nak^p.jW>Ma&/%B4(S
%d@AU7,8`b3:o=?WX'5/(dX]5Y+Ks%[#Fm.h&g<eNg]7@Kj0\?,UP2s>1E(4">%2C%%?rfM/8V3ba"JZh#;[9;5*H\XN<Yo-%;YGO
%%CdS1WnCb\a*.m!V6PQ7J!5Ri1DXrhP,Q7G=MP5`iiHoHi+s:\D&?Ek9c$iF/Dtm\5V5#)35'd=KT@>c33.-<$<@p]oGG\.3X`Hk
%<`[os!@KZL+/p7<keVhUW_*;PXs16!:'&X,]Ft06!KPbjV!N"6i'o+:ig^(?Xk\dQ"ZT^7$e6Z@fn*,p3<_Bj-**2'$mMr%$5oBp
%"ZU?>Vi9No!,$cjH6G;aaa6V+d?F_Q#6?&7SHE-j,EkS0E*`X3k;`i./Z7*?OH#Ul=/QJ_j8^Q%-ZKAI%WHGQ=u?]0!=njbe:!ki
%*0W]TG>euj:+C/RN<Ph[2GqVfZ@GS_3_ak79d<d)4Q&PBX'ILOJ>67gbfU%56pEQ%)@ng%!lAh=,6Gni1KiOj_!u!A\7\4foR=Hi
%+N+WY7^n">"HJtV?=LnVNZKU?L`b^ZkPiQ&hSoXMq<Yq9n:79:fXMh1\:b&V(3#iSaA1#`^bOGD;:&I]#oFnoGfBe[OGGJ%(2ua_
%.*g1A^^6ZlMSpK;^l_5(6BoIkc<QX5LJM'g)3Du,QdBR+.(Hla"3u!$j2*SjE8%#&(G7i.XT)h8XYGB"[3k:D.20558fc9G^^9i^
%&RT#LLSZ0,N&)f"Aqe=Ce!Ro_9,#"R`WV;;@J-*EJYSXCYf6g+8#Uh5PR3jW4q\)Z-?(.<C">-gE'BN[`f(3DZVpGK)A>)bQlN`/
%$(MkLP/5A0^bJ924JsobA"4t7f9sF2;emha:3F[]9lVE[#COW[FJCXC$U+u=\/>r>nU(a92_&daK%,PI9Mm?0O_^@^J^a>chMkLm
%L08L47k/HZ]Vn:]UB6b^Qe)**PT]OX)to3tSCkEK+^7CiGn':#.WB0f,]uiccG"7dh'?9g7XO_uVZO=s"2T%.E-,8q(GmU\f\AKb
%Zp=kUBNm6pN)\a%4he-sJTL>F(X/hnOhrWRUm"OW%\U;TRgBfh=@MP\SPD3\3,?%@+DY,)4+hR7c`"W^!QO]r7Kj:CZ%u[B.WEt$
%ak`joi2AsU.Kec6B6bA[WYua7hBE<iqihL/Y=i*&EIhVo96'if$QKgcL8JsA9+,2pN=27@Q'Nj83.h1Qgn7p1kXoDI*kB'47I!>l
%E.H:aM9r6;d@uZTPR8Dj+;u;\$Co1biU^)"E*Pb3@E&E[<-olJIU`HB6W4t]^lcj&jY.n\a%)!Jdtkf%]TkIg14b'*=2nW;"\oO9
%dPE^0E!Cj)G#,";`rq\^;542j?eIEV%:.bfH7h!+E,dg2)7dPNiutA%EIjm='np]]E1Re=Db%t@aOsE4f%@dc_"tb_)`Y/k3"-`F
%3'SM)8)j^/o)0X;Hi.D<E'bo9Hd;E%%<6Tn9i4)nktp[/.3CPC6^O5Rg")K$A8"SrFPoP&MXmLiJJ2!X,*!N_3#6RME'!Q@'+U25
%+GS8E#UXVDbkSu!)AN_-B`b<Aq6,2(gL'gV48$Db^fd@aT`1GlS>IPon'2/uWD?"4c3I)G)qH@]pqY;7F=fQr37Fr[JSTYkV?'KT
%I,J[-1niBL@i7"Chs%q]lq&HeVZXsm"_-BQ^tD'Do8F0LO'lZfUBAOmBXr:IE8b4*4lVD1S/rlSloQ4Ie+brWOU`A6H(AGo:'V7n
%SclZb%@j[(Jls$332-GA#3_!T*6i$`k\T2HX+br&Z%3i$9/A.^AHPGD2AE#h2K6\0/9)(s2K6="+eNX^"#gq'-T.I#J`AnH.<`]8
%NkeroX<:D!E3t_V@n$Z_4?WDC3Ysb2%ae"\^^3UNncfggOr5R#OU3#;<7VX<-Lda%BQGA:_uc_*,7caP#+%guE5V`>)$Qohi7Pc*
%M!ZJGXSU7dj8^j5oeE?E0<1Sj)8Hgt&_hcS!,boj&FIO=NYWKGAH4Yg%jtBLPQ;b7G/P[a!cV7%./02EJ1")h47[lrEf1E(U]4rS
%"P1AIr>X$>\T!i4)g2(S.W+8(i&_$(l^[hkp/9npK_dbcU=^6Zj*b$e2CJKYcT[;phpf._F@TKKJ[/aIgPkbd3?]X8Uu1AchcR`b
%dVh%-P,=@jUI?TR)sK:cOKb4<IUi)W5.m)._p^.Mb&?cu^o!VXI^a@>:ABfP49Lnk`qKqOd;P+pj5?Z0d`B//MN2ndDrAZ.hOs]l
%ULbhudl6-PM4)Z]boiQRK2.iKfhA?#14?J00qchaN><EVF/JCm;T1C(IDb;jVJPaL(F/I]:@jI6jlH?\ndTuQYe*Y%^2Yq*4ApPO
%;ZXg,,P[#_Y(7HSj7b0@4*5pi'&d6o2L9<&QE1HMG&O<gJnLsEHXlS$p<gC`Z0Ofpkbckd8=YkA^/95Mgm60t;eg5-o-6<(2d4;:
%f;ZH?O^l5QN8#;r9F>l^DmU4Zjo,lb6bO&3P\0"5.$GL"*P&kgTu-f!0mhs(*-nTMfULP%'Ke3Yn"R*+1Lb:"Vk'+p0r"`/-\QM%
%YrC\AgmR?Lh@0AcH./1p)>?qKNm-@=ntRm]cKpO$`;h4M:@6=$3-_RfeD<1"p^s(N)[B[A2;LgjNK]f+oUOVS(BQMLRD%9M8D-.;
%p-pi^gJ7-q(+)a:[l5=o6<9C$[l:)'!!4upDcdh"e9>eK=<L;:cag`',j"5ZDJt3j#=JVT[l7Kdnn,o//KndH7W*.amqo>#gRHuQ
%;&Rq4;(@1=33p]p9ku.*U&)ju:".=?OkcF51"\=GHd`+--,PVr)hDt-?Ye`Z`/(s;7riN8Rft*G1NICh*E\q'ibjV<@nJ\#Dn5s7
%>g1='NHjr(,kmV_W#N:\jcZi6m7g+adY47GRt).102QD%A.tp?2eD\p,)+#9NS,8A9B9o%p?"UdeTVk@]bq$Ph:oHQl&,n$aHYEu
%+3OXrkOpfmQai13)h&Ep`cGm5#(a=]/%%;S=GGY2]p\X4_?R>*EB--u)RDBhHfB!Vbhf`'8[>>>hM<hHA[!n9)iAMN^VT9]14L?2
%NS0fB1R`_JC2Z(m69X2(^#<?SHIf(/KoSMNlUP].KQ0E9UJZAR:c"'[h@+e[C7%kFZQoa;Ytj]2.&!ks/%%=mN:Hp.[5T<.bRo&6
%Dfc$YTGb'p>"LR#LqS)eTSap#C)TV^0dlZae4C(27dSCh]N%CfOk?.#H:%0AYr>kI(i7.I#hb-gd>Z_IEBR>51h(C1"RIS.fUI^X
%b@'.jfUI"3`gMtB>Oi(aO3HI&oE2(9Vp+#Y?O;+714(7r)aREUWP+^_,9V?QmEN9u+@MdTS!tSfT/jA>[mXtR.(;,o6Q=:km>Vkc
%+_T<]"<:@:V/^ilmIPSdjPE:_)riit]c#@aR%ogkF1l%U3k71QKYhe"m`boN3bVNB=W"8WgtpfBrBgUGT3M\X/Pp0rB&)7],mG:J
%b3dG/4d%TXDJt^,%Vib=gti)pFCjP,V?<=38F6kq<+N%AeD;mha;E@(]d6*a_as/hml48<AkMGb>Cu)87dWoD5G>-;gO&fjhg_R'
%MFui*m9#PhZ7;O4!>6%8rdfTueA>:KiM],I"`\&a!g+/Y#SP<Y&Vk`hgcH5%ngoD=%?&`34;aTFNcj,SBio_5(X=5C-s7T",8A9n
%,dIQZ+9C:.WCpdX*Kh9\e;7esO[+04l=L8@/$`k3.3rTZ("F0gb7GW4*STg'omst&&T[VD(J5brRO7AiXrhs3<i!#48g@C<(k[u.
%,Sd_[7<.15-RoPcZ\;Wdp;X1F49R"i,oDcQ`2U3_]a&5UW3/r4M'=17DeMu_,b2p?ShP))hM+P-'0s/2B*CmmH-jtQk2IO0-V6Z$
%MHr/okmgare@cY7OsuW<l:+CNKrVJXKH1HS!V@LA."#?[<sC;ja?o.7U*]T[9*l])Acmj%/\+@Va\pccd=C]?L!h\Eh0QGa<W^(U
%"[n?#O#\!OKDVfMn06qQq>f$i)FpZ&<,'2s.7W<pTILr^91;L\SP^+Z?9Hrh/3h)R^`HlVS^qIG<,k0]Df2q77HTki+sT#0?j@G.
%[A+&r3'WpXMI]/>T>ImC^oCoOQ/NT9Xf^;TddaDQdnWVlKX(UPH_h\^6';>P2:PUQ!cq]E4WmMaKri5P==$>;;->K3"H;u"JAnY%
%>q"#"6`rsAB$CB:?WrAY`!\m/lQmZ=X2@6OJOMHSbm&R;&Q3/X\S&iXIi*inOZl"T"],Rsc=*O5&WLh,mda8=c!etkHI70A;9g;S
%`-'`>N<gmrDD"!&XR9tZOa%Tiegq_:G9k;K-=J&2eQ?No\Q\DJ<_QWb`3Q<A/b$L%5Seg(!f!;,EWBC?g&a)70Ph^?8^uceABZ@n
%XK"\m8Y5U(bXm1L*fg!uf$;ZYkH2B114@.FHHdkj>?R4b:6NDd19sEc*ui!/Jf\A-?`2rJ*D,`@R\c)f6sG]K3@_W8U"H*T%d]E1
%6p?hBdRK\ij#G1<Z\sG)]q`O]?5&%>8UbD3rCN^e+EJQ',Y>AYlF8;+##>MgV"tG*(A/C2dK1ftkrK0^*)MpKM10G:[0t*5!^6n@
%q1J;_,uSi;&5MK+)$&6[%`2Vn+f%WP3("J4E;;8$8<#`\XJj#iO<2GX<qA9>#B`HRFslNE5WBr+@'GH.-YK<d4/+to3;HM$N.Q];
%8MQOV9IC!8c7;79=u_^o,826Z!MUdRBA&#>?o&)bdHhH/i=c3s7giaYC`slYXOtr4a;DW&3LL,'DW4?$SNCGiM66EiZ/Q7S`iQ(u
%R4T&bG>rlEZ9`&hP[O;6<SMfr.3j\0NZ>eQ&O\0g7.//Y6#etK("eRRH3:Tbb[CQ>0WgELLPb:u"l8s4YtI.m9(sm9'-q=$1J<TZ
%@gBdg*Qp;:FqAaN;'1mPK;^]"'f<\dW)?(pE\el<FA<3eBqV-QSQcF32FWStSoZ;Uon27Ea9dJeL^.f8TN>Ac`"9mNHb`EPBk(,c
%'<sEm%NWM[&_+a7O<+uhSjTted)C.8iPI-.DcjUci'L)PL</3T1]]0\&"T2E'c2VL(@W6f;q/86)6E\Q*+e=OmkNCQ@&@,5;Y,UK
%S=-`X0Q/_.ep?fp;Vm/gae1be`uGS78'N4LCKCCVZm<RdFF3SA=!CL#j/p_/&0S!B&/)jYP9:BGA*[@blQOqIR8Th-O>>i!Zp?b0
%+_D+jDZ]q.$2(LVKL0jZNZBrU)&dT*7R3:PRlC[0*<J-]pHg45H!Y0EK+7Cu6=t6Lh?LLq'+,47-6/hA=rY_\FfYti!WYY!QZ6UC
%;Hao=LFM<5+@",A?ih/8p$`2uZ/hfbF9"JB`p/:j9%1Ws@uAJ2RT=C?6Tg>2n$'*r%L=\d?8Cub49^*MRM1]u8%L$@/_#iU0F9<C
%?6e=5QprFIOeN70lo)ac,?lu=klTVcCEu&`(A!:InTYmP)$M4dE8hObLR'unRmJL^eqp_"X%GP8ef6Fil"nmK[A"ZNX^)O&K1ma3
%Z"7afe4fj_,C7,-CXY$m;:ldT><*#:MsD36FiYQCb_9M[/PIa;,>+i#'V]2rQ-BuM,^irdV*$t=P8!f>XCj)A8jI(J8CZb?[#5B!
%L+]>O/iGJ2CUc07B=QVTDI$CX+p+,s)0\l62>YtH.@pOkLG0d)W#MDUh31I5R:Q-?>dc'%AkSemC2@t'#UE\=U*@uB4JU)3o6!uq
%)?U1Km+TGilA5RtFo]N#edel=r1+F](kfoM#J^k2?/2dnHGeMQj\^+%eg""$KeK&$jbT4r0a[Cq.B&,[*1hge_P6DnU^kla0.L2J
%;G+GtCpDF*A1UsC0^t/GjY"p(AaPap81(Im#S]iq$^#1;Ta$$Bo-d1Em.`]ZW$.0A9TBXJcG=R>/d/RIcC9Sb7uWNBkU>K:!G;Sq
%CJZ;0NX\)bSf)eDS&\Ud3RTt9AhfG^I,1[)F9HAiZYVtU;+q,R5$<Oh7$JBaW,;7t;PHnpTdED^gkC;1@MCN(6OSgO&DaUTLaUZ]
%i!'H%)VQ4iAjJ:4\(+/Jg+mVlhKCDADUB.`1VQHi//ZOj(Ynl4pYVh9MKo)Q]DW_\--(D=PE$jOpZlDkKZH,K'JaCmHtBG$H&<6I
%U;Aa0iqIGP;Me#D'#fkPQ16<'TeHV;n>,r38dEgXZ;sesN`SM`0&nl-:2$H@\KgAH;To;l9s?6PZ14R!Zj)A)GYp"^`K[',7Vbg$
%%]t^/YG3'nS1MH_4cR.Ra!P,f>Im+V?L]A\!b4AtDJZDs?q?ru+LKnH2l%>*'QPU^>of`P+3#i41%J"S5`>hg.?"1GA<S%Pq-[2U
%#)L:%Ht[:d'-H+B**6s".UjF/b^s5<^M&$ZKL,647"*]JaXkds6kL$k<!_YCk(85r`raB<KE5])J7fek9&=6[k52T0%%'_[80Mdb
%7GSspFV"Q$E*C](K]]o4F^SnFD"=Y0_^(uC*Sq-:4Y_G\T\Nrl\5&V#p6's1W-+o,7>"#6:fACF/@6PnJd-gCqIWO3C$MP48VX39
%$?"K,jMutJSI.]NG3[WTTt]Ro%$ltd<Ma!H6--pPWI!btW(gZRdEY&Q0nFil<Yg9P#[E8&$OUB9lA#[.=-Z]qR1`[3.&eYNlP`).
%V[e!tTVn4Z9]q*dFMR9o+ump6=%#uNj/15j(G([WZ"'&=6V#`WT@a3%"$VfN,h/,o7-H:V89T9)D*e$A($\kQ?suS?Qg],Gg"pC\
%"d-!#,m7gqKRB"3H6%Ep]`87nkK<8)pC)?mef?Wp"tMuc*J$MH)VXL2WaK2/Z2q989^uH7.u>an*aq#5ED5+RH(OjT3,B2C0bUp,
%RaHJaT:*&[B`OqHq]2a]Y8.P0mEdsC]YFc;=6V;O$meau+"rSSQ-`_M2`C/fc#B$#TW]\_jjj3hV+68[kd1^CK5oB6OUu<S&m3G8
%s.b.-4g_H5R)84m=1PX6a=i,2arHb6LS/*p8Q<-pZBFK'&,K!o.O1Yt1'.aX`h3MWH%@ri<=MVcMUfZeim:h)#*a(%3Z2VAq4]it
%cM62&N`g?4EN#fMcqpH+J[d)f!sPs;`1!l6>2:j#WA9F?k3*2WKo5Prm>((fT-?Zu<I!!QqV9mH]:.DIgql"bM^c-<Y=sGt&Zq_#
%euX^]aWsLb8T:7j#fI5Om0Lg$]Edt<MH.\><PC;<+pG5kI]3u>ZJG_#;K+ItXt_d8;4*FF`_P3sL'!LG8UW*WMh9JM2\nGE-U>ic
%O^udqLZSaCX)81:.su4Wdg@HGjXu1n'#hc9OW')nXYLNfGRF3`E&h&>L:YU^@e#`9C/_#d#t@2o%&]2I651:=c`C":%.coH(=9bB
%p]_q+d>8P@#4@\TeDn@<TbT'^pa(md@Nr_d%`"Jf:lL^3^C%)@[l9)h9F=DT<gu8QCeU`1#JP&EDa7&<-qLuZ35G]+E_'+`5`"(-
%Zih9b,F>F;i_1TR[-hPdX^JE,?q$ZD."t472WdB@**,+7D#&,="(3F+D,%a/i>6>kmp1Oq--aMQ&`:a`aWRNGl#o=5);L6Us+qNZ
%NJQ@$m>dm&k\4PmGgR:jKE0,j<o4CD:L_Y_d&$q,5t1_6OoIHrVap2.8u=bE8/C=o,ITS>X5P=W8oQ(s>?h3-.[8u/SY4>J5TH(*
%)kr%/CC<tOU3%OFVj9g]36+iAigabYH.aaT7+,K-?tPQ(SNOb`fb:KNJO1CX0F$lGA28,RA<!lFZ6$eY:rTi!8bH87(._*n=b@LJ
%_P&6.<@6ji><4a#YJq@?&eJRS2LYKPQ;j4>$Y2Co_S8ca#nQ&&b+@%uh%8-XO_sl-_l%ir.9b]/k'?<geit=D^^,In9dAmkOfQED
%8C02G&4'h_70>\G$[8E`m;/b#32r>n6D<('0u#<W'V]6%4XFVEJMJ>NELC<k(p*\o'#NmE,9^DZ,.?,LN]A&[5feb?o0?@i#a_r^
%g(Q.[Kp-Of,_-22&@*YH(;ph*8EM5)nr7&OVJAt*r>qKIGqc*P+ch:474*?]dp^W<0u>I_SEM0ralGKt/r_9!%`iE>NUHJ;oWNUp
%@`UjbT"*U%Ej$?X>p<rVNCr(Na$huEBG$LR/I^9PLJNR2,';AM__h/poMm=QR*MEu(5U@KO:G]9gZWV+Uc+sX6D7UK'+pD65r4J<
%"2\N.PaXl(Z,8ZN9L9kF*ir/WBY5,^f8)O1DFWJ1&SCG!$Q;X7J-IT!8#1iJJhAI@KXssiKn.p'69$2FIh5UG&rR"r/i$,`S9p3W
%h!LLK)p&E56CnC!FdOP:RK-C:,b=U]j&6fWO!;pV&'HYoMRl7]5\T:Nid0gG\%n;^b_u9[Wq#5EH*]&Xdd;:p6fF)ubi8gj893tB
%aYrY"g"R52_<sRn=r>*+i(oOPfOQFrnY`s'@`pZ@&s5aQO=W01-fgW8Cu@ZtmKRmb1bDric4%>i"7K`XOXeV8T=QH1Z/[XmJim[m
%NNFj^s.+J74AGo+*(.XRS6$S<(ahX0!7CooM$!U7TL^*U6QnFoE/B57V9`ge5#(;gl<FVUCs%DhH\hP%,g[^I8.B:7BfRMW'OaXH
%Hi[.S!1cWWL4ePf!lLrN<"0K&Oe2^/J`I'^%H*-HF/]jW@A^.EbtaL0i7JPunhMk=5=m]B!Zg3p^lT$k$K*Hlb'ArL\!lG)ST-:Q
%Y12m`IKBSe$O]ZYQ0FGHS(X42H90X+DQ!"_5F/=G%o4t(M$?;r^k-i@8lRVoOINSTg7IQ9lEKTj)1^29qM'#6ECPu&5ni_'Kf%E/
%9\CPu'pA9q.^)iHC+6rnE^k7O4EXR,frKtuJUJ[FARM(r>(N9$Ot?1[X9aEs+jrEmO<H:CiHGlJ<i/D)\<1<Aa1)b)l+o-*9pn5"
%V<=!%.m]t:`W>\,Wt%]i_\'LGJ![*H2,6k!d`QS1KqT7<Go$)RCfZuR!Fs*R&n;LE)D3[CNiC1V(utBf*Y<s](VkPG%j-u<#g7\E
%/3VR@4(>A?b6(GP6#tWrQ*^RV=nFli;]QAbQjYp3]IkAr9]7\GLE_c,F%\r1."gdkElS=F#qZ2W+VB"$C+1?of>AflX2'L#!5NA]
%,8GN$m(sI'B;pLq4L"h78^07F+K-WB(;lW8<_,K*:.Q7q*>3^(RSO(j%BNKk0&u?A5RY"+p'"egj]Sre5eQ9s'%T&$.)6N#Y^XGD
%,mG_UC#Hc6'J!%%'#pW!'9=h>7$#^3r=CU%aL^e*H_.kM4Qrsm*$L.E>6I[eKjr+1`c$gg"dV;C1UH=*bp6GM_57Zni/M8<Jlj>^
%/aPi*!(<8Y<p&?d&g`/dbOGuuMOOWmTY'!NPVlSFd#?$('3oO?GOt;WnZ>jM)jDsGc!^pi5ndc8%</[B:"`CLMqu=qQ<.?ANA`(S
%"r#aG+;BcP11(SP&mBE!ien*6TTsahKGI/Q/'1.^qGo$&kVoA&;:;*D>`c@I+AOMg97W-Q(.48iM%.9/ELi\fZ-#bI:)"8#-b'.*
%0[tOj$%%g@M2BsSX5Y?J6ICg6"c+1O=ZNKj.5jt"rFiS-TK@(p%rHX6._p="jUTphd6g%pFD@P-MVURI0Dr;t7j*nRrl(HP9?q=Y
%pq1Gi'Mq'$6[Aq;,]QgeQ!cCPR+Pf37%_n<eAjq=StePt&r\7JVuW9[n(YlaK0YTCA9icB-2R_=r1lF.nc77WqoMlR(qW&\VDr[:
%;PM#<&C']DHZ]tCm-+Oer=gV+PST>]`Y=i&`0&=^.#nO`&.KgTWBVt4/)n'NlN*k.f9dXBDY39?=.0`I+*]#be8gchZBkg%gD#37
%:btHS#V#b3]Wq_/'J3je`FlGHq>1rN6\RHB"uq9T*@[H`og%b@?n-n.m6%?da%I(p.2hTmA!esH6%Ck<=h;(aO`JV)d8)#)RRr8O
%RMZcC32H^cjbtO-au32;Lk$Ib%OhNM!MN1>M&7YA"tA@^FC48$G:SI8ieYgBhB.f?eJo9nr'bseV#q:An1jF3[.2ed1p'U5'a:;J
%1gN$NlT&I2ifaP^cjl)@6(,d@_U&te5Ggf1K2\D4R8-#V&>RAjmIHV`gs;)SBrS?LObJm]KWQuikc4]Z/>4UuU)$kQK8;a:]i)<V
%75\.s/"Bn*BdY:TV[s_f2._l:!'tt,*?=:9>/>'l?ma\:-STCP5U6ro-#*Orl&-T"6Vp4eOS*QXOH%E<`1S==omM1tJQN;59p!_1
%W0"h=P1t:"pdS<eZCjA-KU=c06UXZ"JO9fZ;&f[kFV@2#;D=c.k%ur1\04kl&Dr.LK4pbm'Mq/ecke9)-\u68!i&$_B+c\)2*OL`
%%,;nVYTcXD+I"*181e!Ti$RBh@6UC8.L(KHM-u5cZ5c]*&=l3r=iMAA?NjdSDDoqY"H$DlB4?l>6#UG%,fO9!:'*"nHbem8g.@se
%8s%L+Tkmt(i"r=$&2aq#9,7Qlp^S#H6kF]rO"s^c%M8C`R6MW232X7qNut11?<R=;FBM-MpetlmDPGO1KrFY2^oC4)0d'TB"9k_b
%bLh$3J0[h@8otIn!]@pMV888IZ3E27kXI;GD?Mpm2VsO[Y!N-6=C;io+UHdtfP1MjJO)t&=oW`H>\KsA-"$pt=VrC=qWI7h`:+qD
%)>5e*08Md7@aBQ]NqK.qV>egjp))NeMR+UZ*2UB"KXQ<O8dL7VU\$(Imt70b!tB`Zb^1<Dc.!O/'6,):ifuk1Z`ol=`ZiS"Jf'[a
%"!WfGM\\Ls@>JYR3Y6O;jIYVYJkQ\,-.$Fe;JNBW'h$Q=/h-E]csiiEQ(jn?+b>E#+[;CN$/:j.`":/09RPZB;na)0"j!i>Ig1I2
%F3+GQcEX;GfG>A[<%1Hl!P)3L9T$q&ZkL\/,?c_P91J#ZfNZema?>%n!/?alo[/8\#WS#ZKfCjp7L%.CNS4s^)RtAYq\:!]rMAtt
%;r97?e!$i]U[g.)KNJF^a&<huiB4=m'Nn9Q\#=Bq$5ZrF"Rr-lF?l@_o]DoF47hW7]AY"K:;9%G0jk9^..-NR!@\VY*uD+7Wb%k2
%+pQA6-V-RBa/fHTfr3I3ZU91rXCIn+1QX+b0eTgSOP]EG4115\;#YF]?-5Kt8U20g:L^mRSDU+;8CeHSMN[DHa<Oe$6I?Z(e-j['
%c3pu<qTC#Y&,@5KK[d"Mcm&>CTW@eCX86uA&[;C#.#U(F0W:7J9c8Y3iR?N5PWbBe%UE$r8J7-uZFnP)=[u@'NfbrS*.V7ZPi[OV
%0$C+H=QF0c@Br_:39;`W?>&XYl"@C*M3;'')B-hQ!.iB#E.Lh_2!Scl;ht`DR3RDg22G4l+LObHAW8,7PZ0)anDjt2,\^,=kUA=$
%NttX[aA5Y_`$Z\+4U<9F6?#k,XE&D\PnYgF`4)F2P$CQLM]18;8UIERN>C)Cg*RK-56YD.(-s!^^Of)nf/o8qPtjhXEtU5^<l\<C
%;c/)q86$N5;)=5\ZqS!(Oe*a;,2GHtp6,hje`*X[ejq/"VBs>q<b?EQ%T?I3RT1WDc?="IhVh^gC5?=AheX-/\B&3kQS;l'[N4Gn
%4=fN[W.N3!BMaE@+%Y#q<.cogjtmD8SgoS&k6]BW3e9i"#t?e@^i\/%OLVu<EaGniJ"V0%1f0Pa3[9R`j[a'"=ue(SAta6\=b=k;
%<@(_ROGo".^RfaX=\rWaeX=#o_]u4K/UOhl(P*)1<jf#;>e*An'/C#\8sX4pUf:Cg?tp(bMZAcf2]=`D6;k1u,ukPs%s>IZ(Lna1
%GEf%8CC#b-_k\f:L&j\d_!,8OMn#Cc6AIiIH)1C0[Y@>7IV0E#EhO;/6@nGO+7BHNJQ%t"o,80NFBXT9Q0H)aef)urOn)aXZr]^`
%&3/r[nd#eh>MGla'.kd57o5$6*Mi:"SXLa[9k.<`Q\GE*kQe?2A>*cd)W-_FAP-\\>\P%i6ja;u9OTlg>+pYB!hh+IJ>UeH"OTj"
%M$5n;P$_D`ikbE7,gp4:!tDe^lQ_Ar<#,WpnO)e2dg@Jq"erBH4,]&<']qiiMH`Q[O^eRsKH,9I#&&G3i!u;`K$>"'oN?G1q$aLj
%OtRVo/Sm`&%4r6--r`2MGn+-l@<55E.u]]:P_O=j]MS0lR2CD`1^W6;cj0t/b91$t$m2(M?de$[iEApl+O=R,:++1N;L4`A"jCi5
%]Sfr1`b$HA6-(.p"JO`g?oi8*W&*(o[$)5F7C9@d!M%H3;=N+5lWh2-B+goo*1T=s*:sJY7r8Xuj21n3dV_Eg*hX(KCQZsG:'+()
%]p-e6DBg(;0pE)E9Tm1.WPt^hCh2ZY0k%m<;suUcqMo"q.d&Au2k\,:k6\Zj:^dF/>dmQ=qp<_>'<R@pUg%emKP(Q2S#nA!feVt4
%7TdRm6]qj?[=B#'3\.l>N;.shYCg@VOAEoKDi:WB"R&rR*g4ldlK7DsAM*s:A7]7L17PAnkJjPt?Vo<:h3=)LUQN?BdfEqAfT\XO
%`L:nUBPtfsft+g;U5fem-WM)%Kd6h6C_YV@ahY7(SDjoma7PLc516PS7"u&Em5?XmPbk>81*=;Y"lVboT*?lh)jHfu<WT*O3RN(b
%6odI`GDY,A=;W<9(Y2#X^#1pp0be#8Hjt`\JR;kZkrZB%U.QbU8XdMg3_^7H_nL%*Op@?S,HafMkROR"1=b8j!=Aic,+^L6eJMcs
%]4Wp@'<oHV".bi./EHDW;kAlP)iUeQ<$rHg'!o8.!!037#9[]^eu0D[5FS#,TRCR/e!+MtfWgCGOFXbrPU"a<nQf7P<$1)IDHq*J
%S]UU2"e:d]%Iku#E$6dj^^`+iZ&u@VhR?L:GEUInTQ"5C>in=!PHimVNGs/60!T?Ed7^VS;hDC`BLsUd($7X,5WVIKJIXBqnY\k%
%<>``.*`umk5V<2*i>8VS"`P0-H=mN&O95`#*@b6/'1=/>..S&-I8[r+7^JS;-UIN%_o-t\e1.?Q7n0j0jhbhbg"Hj%2Dg%)<"D=&
%W\po1%NqN]@o>b,R_0rj&t/_tPaDn8r\SV>+bIH!q1Cp<(hi#tVo_<jVnjQr"?1!\!Sp$^78'.d&`V?']9AkDC(Cr!d43(+c^QZ1
%h/L_W-9W<J'+;p<d6`/&"Wt()ZDBgkFXe=g)a#%7%I=^lFs2'=^",0<`Bl(]aKldV^DAq!pqo]_Q6]'TNZATm!`?;Fe;f&$;S$$$
%72QmgVl>_dgB=$<gTc9a_D+9c/e:`#4G*38@,HCgVQk4F$-hC#+c&DW(3#I^P&:_lVrc<rq_WqYFjQOBH6Cr90uumtg&ojt@%V0C
%T)M^"Tg:0PD2Dg/&nYN8#2?"Ont:6R[K*[G6n><6!B`HXMhVtJ@j&@l5P4pKklDO]@2'?;jRfG0CV4QJ5B0RlMZ_a"QP\%8bD\E/
%0.<c_/.S/!k[O]JL5gaf)np$n^e-:q4GqPo.<E+k"[I0?Zprc=b;UV?`3>;&DJrWT:0EZp0+K^I@\O8k9IQo<"@7Y6Q7a1nc1Eb9
%H#gQTa?%5Wjf+*GE5P('<r$>>1'f*(aD@.R1/[52\&8TM=dk7F.M<mT2hP=i]STS/V',ECFt3:;?S?c"`g.-S!jXSqI:s%k@H-"I
%"BCnED-?'9ZcYYVSgYG(-P*(P"[KtUf&N0/*b93s=W8Qp3Z]9QOKd78&jsP>NZem2U[ac@RiOiRS5J-;Qin]aV&1(UcpHKMBbk4`
%FgY\YO\phs:>C]sK.K^iZ?W2Mb@V>Ul/mn9Fu39R(.mF_YhV)J#uZoI8ZIHu3X@4WF@(6hQ\=2L3G$WkCJApSj>KIl*da$FB5CI_
%'O'TaiF&Wb.?NUG)+B]C:kpkKM3*Vso>m:j(9eFIcpGu(=GoH"@'MC4JpMUdUa<":^Memf+CC9HnjHeR6RSk-,rj2D3@Da8>s9Yr
%XmcQ(KTR!i;%tH/@0Y?sj>0?SB.#OuM3%3uZkD12#E]`Eb6OG:=^f+8(P05XeeZFj@)gR_JI;es$05p5/@cK4<j)9*+-4@Mi@lO:
%Y@2`mT1:mrUsEID^`"H?cNrd)C_/ic?rgm;&Y-k100P?T0pZ"ml!(6pW3I8!($0P5`tgV]"I%slo`mn!n`<mL(DUdT=Lr^*Clt>6
%r.[@]]T==.R'4.?XP'kt9mDQK9T0Wl%mu>GA`Z>n6RjsH@h^gTrD_#^Z0N8##LnWm::),\9>#\H4/0P3rY/[N5S/NMk?s"3MKJLk
%-Sofn27aq*G!RU"GQ=L-b%))@(g-[o-"`)OEmUE$:Lh9B3+3[=\j;l$1uFDRV*ZLVIa<-M"R9(qD$3j7bV"cDnI3HtJaNhOG:`W%
%Xtm6P-jmSqZm7*f/td/NMdX,kU/^f`Qrd/Cprp>VKQ@]\-Yj-$C1;l%rk/uj1/:CDeh"uO`R>L^-3RaO\$i9AQ%[_KGSMY\:o[t?
%'hbAq<]4IFr(fhBFY?rJ=jBSRB&Qd!e&4Z+;YDXKTd5U_Zq*eRPSB4s,D@sJs$fl_OranoIpc?U3\4H.G#IuX<U`Db8\NHK[EcpW
%+t&;&;@;)AYeX(uJ:'G02i`Q#5Y-"B#0qKEACdT=,i,i<*6$qRQ4=2_dYS1R=WC9dh"B`9G#!;8a;R=ljN^%#<12r>J@$Y8WG\@k
%2d:V)$H8:)-deB61F%XHk;g0U_SQ^AW9ofL%g+JDqF9ba8D-P&>\qUirj.<$1;L2Bhhs.X+Ob"jR)YB,Rt8s%S2u$I@Lbs@F7M]4
%*,K+99dGnA%u@7!+CE:PU:-Td0#@CIAhP]ZOt]Qq@XQns%ZtUV\Wl2B')I."T,_7'`D(B!NfnWhT2F9RA\KAIM&KnE=kqHIUGTcf
%!pHF:/&F$9(WAgO.3jj8)Cgt-_Z>d5$:&m&-1Yo(O^r2lb^lFN+tO./"Da`6*8'e[X:%Ch`)a2MYYFMWbb&p<_Mj>Y"*%4.6D)(o
%A&\9QFc4XC*ElK$AcW=8KpBi'*Z;HfH[oN-,>%r8IL9qr,,/LFas2*:iYKa2+]bG?g1VfM:+P#hfRaLADiluUrR@i*TmR\J27s4R
%ObX*p<1mAQ#cFLD92`n._bP`;4CsU*1Cn(j1ncD.+;"$2422+L.:NbWdGuTb4CSlI;'C@p&lb@IfGUfGA3(6G($lFcc&iTI]n`1G
%5nI8A6&Bmi@#7PfZOW5s#KnNpV;>dbE6ckr#"Rlb"C"W!-7$g@bhqPeTW5-mDNK)NP(&(%Er7UoE$l6<!cAVi't)K0kThQF0tWjs
%/4jS=FIF"K3a]8@$Yu"U-R:!VMA&HP@7l/_QqlY.\W[7QeH![oC&Ff<cF-#Lg.:;.G%FQ?3Q,i5YJue3cm<@6`0R-K'\12me023K
%*2Ecf#f\9>K8>?6NiM\:npdBg$"ek=3fb1QU7Q7RAjqH/'fL:sWoIP(M^Tg+hFu+O;LM0%1<'67'Ynh7G>"5)Jkn"VR-E[COZ7"=
%B2HQY6s>8Q(,<)@OSInq#Ek_L1Z8[1M>A@Uge:uc(>q$h`]F&>hXU6N@ZW'J;YEaE,cKf?)^T9!.>epY(b#=)TM+:5K"ErI/3j7Z
%1iSiUnrrVI/4j^un8f#EPLtgBBa$0jU8_?/JVO:L5IiUHBTSF&l.?#C2j7G\K<-2..F>j[gYRN3))gPI%'^Mk1@ZnM&t>/J+EHWZ
%qCHJc8:AjI!.4hW-RWV6Gmfrd/UUcp2LgTMU/XF.#$N"s(>=+OId$[tdR,V1F3NPb$O5*/!c,!/L#]Ck"0K@r'u8VHMaE)W:bpMs
%o?>a?NnkF>-tJGOgH`k+]jL[O;(<b.=R8Y^AOgO<RD$[?G_r(SCtnHV18%^)^1Sl1O!63/(.NW2QU&Y:k.i2DKh[SQ<%BsYl<Sep
%/u8%HG!t<O"MP6(655odkse0f:fp9/*jORN^e[fR:<)?kKS@LO(dNMkN4NA(2F\76@k!EMNSA3[#o8k\r</Q7.u$-F\(Sk+%1>tY
%JPeaO0YYEV`eH!H&0RPrYOQY9l;-YSLhNUr(mBXa2De]lVu[ELW5;Z7JfcJ+V%dO'DPsKL!0EEl_U&^dT0b7K,Xhn^i#Yebd^g80
%b5Qg1n`]dG(R[spM"PBFm]*'$q0iQ!d$#%Gj'!H(Q$CF4$t#X,`([EN@58Vs<Zn'T&Mm"1,A:[WKD=?Z:)uh02i41Z9t"*W.&c(R
%c6>a&]Mp74+\?I=oL^g!ApW-X.*i3aU*>"OZ8>2B+]i%i<.XCfOZRhbmP%3.1#!)M2,pQ:+u`>Z2@5YI`WAug0h>iGK^MOp0\9s%
%6<m1ceCY=a!q\6FA_8tnGp;HE'[F!4^-T-,1YQ&BNUV(0iNd2:&c[J.Lpa`dFU@bW-LD.]*D%X+?<23U6#K^Ai%HuJ*3s6@4Ila.
%<_OHD+CPu3Yd.Sc0DGT=75]$EGFCA"BHX:."j<>KiQ)aF`_i.k#^%AB)l>e>R7"'M-]MNd\L58M?j^0e4&FZUfVlo#X[s6F8dP\_
%U+<oR4R9N_[cARKcYPWT\)c6#36Q<>\/A.dCdAdmf3L$`9J7U1fTLUt3C\VrE+B;`#$"sbf>c!u_2:Q(6ZRGOH8\C\">gP^:1H_"
%Rc)@*Xaal"7b/#`-#=0YR4/%XH\e(APY-&/Hdj2n"rFWf_%AA1,\>INfiT`HA@3/*+]?JU(lk%F`-Q;FC\/?_-]BA^cnWHfS.C79
%12%#?P&Q_mDF)10SS/mTlpOi@<BMT)3toEW.Jk/tf3s*6jKeZ\"E=m6Pbj6V+:JrH"kafq*U7EK$b+MZBKP/@co@"[K^>q16fQi=
%3VE54^iK[O:C1U>,c21VN>ph1,t^I%`TPK?,afaC8LVMt9l.O0F\u;DafGrU?(o@aZBi=?m"6Q)<#p$TJc.rUD61%[X[!d:i-M*J
%R(In&GZ)c$1@R8s4X8Fh09U'O]s8n@,4q]K_4YsfPT&a?5p2!hNO0:qb"s:GOT6oK%?j`,$LkoV"W^)MS;L7LA4_%DM9SY5c=j+G
%jW]8f:P)o+dSe8A'r<OJBEC<'fW>iYQl%Jp9o`Da$rl,X?:q[a:_m'0R&;g;_YmddmZgqeJ^Q3+P,BV_Gj.b"@;+7ILrYZQ-gH$m
%`1p^+QF5^uI3%0IBJs"IS;#Er3.(rao,<oa0MMX(:W%LCZ]jSlU8`[LOeJ!(M+YUJKKD[-7eETEePr4[8XaoU>[u:nDFIWc$[S'R
%iXR@Nfj*"iA*`f]K.&%,$rA3Iagn)oU@MA?(grR/*Ee3BPM&QnTA"/IOX%$EW!n8VFhcCG+DtkoaOTA(#fn3XLEO6]E6=8p'9X1`
%8S9HB0O635'bV;H:U>e[#D1!m+O*j\Mkt<r;t.sM`*+%\i1L_06Co2&RD*-)PIOj0.qRpr&;[.kK":'\5`/?TdWpq5fD"[%9(l/N
%_gDsSK='=I2\<[dYK0m4$FD<F,3%g6O>.m8"^6S$LYA7fbBK/CnB$-Q^N?K%7V].U8f&2%+L7rt3$Bt'+QB%,I-`c*04`c\P5q6`
%iV#f85RWP``(<h]Ec-?-fT[g@9T-cuUJk.8#h9'7M1Su&Q"UkJMOZ#FX[=T^+Kl@lD4%"$+X:YN,,$qekruqE`4I6mlT1@Wgif.j
%"=-sJ,a)+5[=Akkdbl!sB=X$:,Omu),_AA&0[U3j79NOO*ME*47gF\T7,+u#,1'(ahtTiY0qnrWI:n5TPjf%0Y-H1b!"DJO$tIn_
%ij/o2>F5Jr6!8et8al#u+tFQdNc'bRq1*gf"VEeO7#.S.)MBq[OX\(\K9[:#FZ4,f8.;IKHp1F\Ml]\t,s563(2oPC-%S2G*MZlK
%/9>Ds*[Ln&&jY`:K4*[A@E)2UjA:CNV!aELN/PcZ8)*joM;?S[Y)"jL_8N43((N/a;6fD=Lgcl6:Xf]RLg7B14%Y9(44,Aed-s`2
%;oZ[rEJ5NJ!IKK["5Yuc@thneUmRTE<H&pJl3r%nV3L5#JqZn*]]dlI8$1Ruo8paTiK0[:RRaUpEBTS!m<._pq/3-o&'FB0qGdYc
%.2^7@*G7[BPBB>a\A[#U2KC8kWP+@f98k,5bVVSE'O[Fi1JGC;1Grj1,!I?=FskI%cuhZq-h#)C=0Q72_4biC2/o89i9a<gs1S8X
%C\'H89*<$\#VF^T\0Vsn)Kc)h$@"kE,d-PPQq=*"`TklR'+icMKsO?]-=/VM;_Y"<+X>Z5AR?9^TG\=&j<09\>)]^6J:L#Ld]lDh
%-?'!\eGUsj4(OVNi9;m91ifljRjBhMYY1d,J^kBb%)bi*H>)HmqbLA0`%kSmiaXNM6FOkK(B2$4K61jas3_:1^)Af)<k1L!_eUML
%1GX1'6R4o:JJ7#b&pmr`Q)KF37Z0PlPXbX`>4a!>(PGjn63D8!!Xt1..B8RGL@.;g6.D#6ZCrsM<`LCudUO0=Gq:4!j!+^IarGNm
%P0@L=KH6Buq(c:$(,\ZVcGE=f[1;!rPo=jK2b[`EL*4Cu>#,L!8>hE5UtW-+]%L,_`CN+,B>&t8&?N>bAgDqOm,L(s7=1r#c%HIW
%:lNX-8J=`i0A-_X_NJi$+qA%U,A1/I;abhfjkFU&c-$le(;Lk(JgTRS6;qPE3]C_-O,4J&!mK"8rPHVUDO-1f<o@ZZ:Sg/cS.+,*
%Ud>`s%Y0UV9A#q7Ou`8uU_9*kEZ#l3:PGms\*-gOUt9>>f&XF8b$2kPVP_[M;19t-mP%kOYg!H&#8p8UjJNJ%WSB3oT?cA(Y7:]X
%QCK!].7UGd'DX<N/\.+dRQ^LW?&jR#.s77H_qVK/D-O2=X##Zk%T#X*5;b=?Si@;)%6G?4,X=NQHpM4$M3/h^hkl796"VU81Xfe^
%.onh`,Z4G%$X8Q7F0t3eP>^6DQ]ee=.L=a2YpnF#5n=hUNRm%(WuL[F&[39XGGtLmQ>mA/]3/h\#GH460kb9UW4%\^EuB[a@[MOG
%TLQ=+NAs3)lD6[C//k`1)EVdRPul>T8q15iMF]gErL_GC==jr9b=m*<g`gKLVB@l6+Hf4kZ3i=^TR[AQ/?X!ICEF#Fr/bBTi-3a9
%?q3JB%u>&(:rn7B7Pd,Xehn>;5b<p?R:phe;6lC-'oqeA7H'4h9S\PDQ'CbE(:gacI=j!&O["XkR3l.Z*K`3=Jt\C<(@/-F5Mak5
%=9'MWcUF#H>id6Y5`=t\<XR1V!>p0L$c14A&($khd,7;c&q87lGS&@5O]5SQ^p&Wn7F>jQA9_(cCJr4]_E,tiQ;(QqSKqa1#p)Ll
%=I[*n.ToqI+"Z?%N6j9g<1!:k`<='h9C6iq[Se4k<'V?`UNd;@KM_21Ub(k4.Wp`k*bI!]B41BOMR_[5ZO2,300p_uaqRLmLPD<6
%j$Q8F&2Zu&p_4dl`4V3L',mfIUVF1Y=]ei.4P:KE;:2USLm*I?"nL0q<-WYOod*b?e>;U3:]qKT8:?QkZW`_?B`rTH<g?/iD>DWR
%?o2q?/k&(+X>hOI\e/W])A,\JWsanCp?X6(A[S07#qdB!a3!bgDum?Yd6Ei)2@1/Hb(;5-@WD=?7=ZCId6E(6'7g4A=m)OW;9Tj^
%735?<.;KY4c#<dsH[lLKR@N"34`W-jKSl"11I<Oe8/2m^bC5PO<A)o.JYPhK%Lb9c/MP%L,_"-MkG"V>blJ$;Xe;dZX4.>f+ccs.
%e'Kn!oT5&gK2@]#d;;Qlq!hLC&@;/#r>LZ_%T6^$=`t]RRM^%MWMV\3+,CE8]i#Ng*a4jLf1b2H,$#:b4*8>2>"U9T7*:Ak=XJ)>
%#b"]U.(q/^1^lQ`Jq75TlUtHQ'9$k7QZLVs)+[_s(d=CE$4i;!VZ;:7O!$iV@X$<]A4[kLK#L6bGDODA0L3TZ-;mgq"W2u(5f6^K
%DBu&u)Nd9IJcPL7i/Z3!64V,9h@]Gq_rDdRKc:7?9S'oI%2,=&`'\NPp8&):'I1d0]lC!e+Nkc0)C`B,YRtkm@F?F'RtNrL(n;ht
%c3e%lnQ.\er$[;W">!-9PLYI.1>ttNZm$&SjQ@YlRdQ"2&i3]]X^=&LU):+NNWf,dW!3sr`3LR^P^#q+</2_^OH[Or9kl]r]o%gc
%%7*^bSUAMn#a?f124$kTFV3?I(J"<RTnR^9ZqPOY82u:u=W%4_P$2/"8PgW(jG\o2deagMZ0oq*?%R2-hTKp@nHKV1N6=<FTTQ-E
%,4[V5+:JI\PF4B`I%S8(L1Di$dmu`&(tU307*kdgS?E%XTpHI5U:u1W0m3\_"oh;"TP:tTYTu>q^e=*N/6iB*15[?kBY0o#56@6g
%FISMUJ`Sp$!l!V?_,s6B?tmKHMi(CBasPI+JQN$j!s+p0PU;HpX"/T03#XhQ@e>J;1,%Z6jbO+Q%)<i:C>NF1U>?ZV.dF&7Qr>.H
%?'nh6p+.W]:g=-`hiNWPnT^p?[5%fgF:@6r[bLP<;IhL5e_e#ATgk,9:)R<3MEdZ@1Iacl@0+3IV<c<i!WXd6ZPfb[5n%OHO6=b!
%,==9S>1VTm-7_V3h[3nNIPP5sC&[P[$_3h\4[iV55UR4p?9"tJhtm>aoj-ORa5?94;F)mGG^<UL*YO.]5@u*b9W"l3[clEg^),"l
%O[o+5)`K&5OP^n$33j$@;RNY[OCnQeTuu1j*tO`!ElU(d4<SBj9qsflN)Zi5/#,-H:>J$c;=lK)`PcVLj$cFimF[:I"TVV0)UFS-
%`Qj_<=;a`ecDHOZN08G'L)-B!'&=siLL8(mO%cD>/58(0TnM$)V$Z,NGg[KWnj4JL9QdA'%N[f>.KNKQ%r#3Tl/sO@[&6h?7IX\Q
%q-li'4H;t+R,q9L&'gMo1eX%JX*tJP3-,89W9$HR!08tOE)E)'*PFcNJ'[3EYV"8_C$Ko)LtjtIhk@'@b%XfA4"1@E?2BRrge_!d
%b'+7TGdF)ka+0R-4u&g&[La:B:%s[tM1.hbY4a-)/RA+r^b06GI&;7'O9_N2B%+FL0S^*3J'kqcW#t`ID!9_e-fi$Jp("\Z"g;R=
%GM*=NV2O2A/+nj,o+(F7'H`bnhIXnWdM&\>*SHk=h5K0N]Hl"Mc/nBO;P:t5X51Sq8l0&6@WrM%di4@4@]X$kLXid"+JX`PE0n/R
%ZDQF89^/^QO:Z-G-?Nlo=#cfZh&3"3&UJ@^G6Sq$RjUgPeKJ"sNg\<9DAZ4hd?O&Y*.SE=V7T=B<9[/HD&S]-pi=mKD@1R,A:\jK
%V="a_4s:(a?:aGcbg*).2n$rKm\H6rn=k*HH_IgIX5+Z_"OjiOWnj@K,`%rFSUi*OX<6QlclraORG;(2/d*ZXjmEOKmZZCe]0inq
%$oPRW"4@8fj/@07W-(o#\Z+GV62VD\qlY,JQ6k+&FM0c?-NO]6Qb*@YPGaXLPIgokP_`g-]fSS%/aDh"p$P($-";6OGK0mtTW6i,
%LP0-_ea>]L7,l]KG@s/N`Vemmm`r&TQbKlMh&2(c+@t8JmL3>=!'o^fGD>sU-B)thVGV;S\N@0/e\<'RmSJX4*r2[V7oh:C'2I*G
%%$_(&`AFtaZF`uPY,U6^7Kcm6F1"**=b0!.@X!PV_pmI@\N?Tl8T-hW]*%5c%"udZOb,3>36L'>3Y(hkF1FA"iH`dC2n;$1aL,Y=
%jR*HHV9Y$?GK+>/9:*7XMjNqK<:8%0"=f1(mZ';?lSm>]:gN.0Najl.qS_36[6%80;TERMG"5"/8kl8<*OuoQ/88jCdULIUgmp8X
%TWW<Zj1Uo:SNJ_e\54h^Z&Pm!ak_q`d)>>49.(23@up7ocqHJH#+qsPZ&eF??1#okfg-c/<P-/i,gPVAg)\b3n=$E3*U7"-5$ZY+
%/GZPY$I.)gJ4,^MG#Q!T(Pa9#RbF<D(b5Bmg)Xk#9Z_HW])rioiQY*a:<4^(VV3'4,XjjllaoF@-5"CtG%Xp^'B4c%ST.D7Gtm]:
%/Z&qfPe/_&KqZ1AQ+I,;QO"Qf\N>tAOZ[D+G6^_EiV@A3GLD'NS(uipe!\u3L`f*hYfY^PX\CQ[:$rL<Xg%KDjR06,Mpb(Y]>M?Q
%.@Ia%*DS7;c?6ZZ6OqLC7_(TJC=&&$jR*Go*D0p3-9.M@/BjR)h4[i1<_`%Cf.e#io^6ZnOe$NqGDC67LdITfSaj-W>ug@=Gh&g`
%$O[gZ1;ts4h/O]Ckgf=n$jj$@Z_;Sum@W*N?1/7n[7p=_hOO[jT1W]img`rj,:^"`h&2U<:4G=ih'&2Kgo,B$*WZSF9Z?GXOV:UB
%[-liXA;(5Lg+=&=JXJ%EM0r;AL$kT6@^M2hEsJ0e-G(FBa8+lWW,`,q^me3]/r$6%2jLlTA.Bn;?/Z8NY7uJ$!d?=6=TL\7[mS;k
%Fl?'Oc4&'(5W!L.Dhhp+m^p+P=q()DS%P:0g7k%XgS*<JVeYdG"t9Ze?PduL1l.Op9\p6]_Am5f[tEL&@F-?=8"2u5ECP(4n1=_$
%e]$oB9>*9(].Gu@Tub;N/tdj#6PF@?D$R,/P([,_%VDT:.ZZ/Q+mq.k338h3aQ+J<Eme@EW&lBAA2X-]TFR#RV7C*''_3.J<V7+O
%no+lYInETr5C!ANh"VLdhtd8`oM>qZ"<^9>Ti'L'4F;g^6rg\%e0NEk)B(g?3O5/dVJJcVVMVIHA`>/+;:pnn^=Yg8_KN.B$P09b
%Ckk&,O_edLG-G8),9U\MCe+&/P*i2N*?(/nA?'EXM@(kWANLYpRo.e_1_oDgXrUi:,$&"&N]=uh)g>SMQXsUn9\GG[FYWYgfhNBQ
%<>/0<1uZ#%*BcK6!,#j0E"fZ9]JFgH<S5SN]pCX!m0o1T9R80u#VBlp+(i*-\<(lZf<p55+bJKDf?R4\^r6ag4'6_Kh#4p@aH21q
%\IDh+6a/lsAaO/6^r5QEFs,>;"5u.Km7]nCG?I!pL4rSr=Z[9$"]<QUmEj)08!gVN9DqaMb1`OXL_XO-FtbL=8CD):d%U\%.Vi\<
%IoQ!Ok(+')_9c`[%'sWeDTLPJIa^-3b1`Q.Lk(o9g6&u_@m-0d1Ji0dNH>k?6Kt=SkGi]]Pq\if<UI:tU(FB+g;0q"J^I`RcB,3?
%Uf#^gJ:kWcpF/+AdGd$u4$n#5T]0`meIF/tLXT5i%!c9Fh,(N>6`J/U<:+AlO?]bEg)4q\RLN+UI&TA7R])d]f.pnp't$E8-k815
%40kJeg3$7S[LDG(N1tKm$]-f>4*^ZSrp-;%N!d'<Di!,`(7%d:'=G_4<WY/Q<7K2i*^4FSg7d&d0M:%:9-LH8dE[i(eV"B#4$s5<
%kXS'']YDQU)AVZ/TnB;b9bm'Jbal9ng9H>ukY9Hb/]FUs76?mefr@_+j%KZdp14/j.b^Sa.HiBuB:MHe];2!K*&5i11J'[G"@W`o
%U`J5dQKNBb4'i"iaLS1=!C!dIR[G&21Ror?3Q>?^(;nBBmGJriEi)F^)=I]Pfd6"o.6=6WOL0Xe;brm>W#ZY]#Ku"0e.0_IOk=43
%YTH92>4>M]_,_c6RPS).1i%D?AaRhgb3)LMNhjlm\BK'^nCHY:Dn:,e0NQ$9Fm\B6H%eKP%u+YmN7+Z-*UZAU]U>iA3hU^!I8ndX
%>9o(#R]N%d/Z1as[6n_d6Q'J&,]l#'g@9,i;K=+!LT+&6$5Krn]fs9N1Jp4RC;^@";*.7m-oK^Hm0o,id;FcoJS!_8$aGQBTmoLF
%E@,F5;No4<Wcn0:JF/f**MRcm&>#rViN6,Z:1`h.@N`Ls->Y%r!]Fj#gR5-bQsJ@)/-^(L]!*4A%6jtS(Ues%'"K#@@6;F)7%gUf
%gJMm@1jLlc44[jP%+^+!n;+ZQdtY(I"+aFeC;P/DUBk$na-&AFPm59&fFA+P,uIt^[R3$0@SpF`Nj\[^*1mPlTou%nG8I\T3%>-j
%]UH'qAauj6]LH<k7%Y<gDRt!>3i?:Q(Ug*!7"W_D9\9j"'!Z>sG(t*RMXL[GN)VY`KahTT)T(@C;;'5K([g:]ChH;a#Kpt]CaVM&
%1=iG1*@2]8?-ec&8;0^unYU-CYTVsk:"bR!j%6MLSK.f@7SEEtVJM#'ZK$%<4"6Y3pi!0KB3?:,%T$^u&j)`rCp%SESckfGULJhJ
%lhJ%cfoC\\H/+gn*@3mY8Y`R3MqpC3B$,9F+7jA@UTtmXKS%cd$55Bs,1P)2.GKu9M#;fufoA1%'Q7j2G%<@kgJ=+%.)S;%d3`_N
%=rjWJ2f1Xh7hciYWO<i5h235Lm4d4IT5c2p7r8m!:Qr5NQK1ML48r2_VUBX`ne'kYQ*qnFR:pb<V<uX".=nD>G!M[XdUuLeA!)lJ
%DGt+.N/$\a:"`:;7<092m;NNcgg&JAE:ui9a!PWCL[mLV[0(e_(<&u!Nn%f"J"!M\l*_IiDo-ZsRc6$FPjQQO8rh;rCr]q'Q_a%L
%T:!_54VD<fHC@P.Nrr+Ce11H7PdV51PiX\ND+?T*K"@DX*CU;@X.Do;OgUs`8.4Sl8S;0DX5\:HO&ati\/e+:=C]h!m6k\>:#t\"
%irT`[7"0.c*JqGmL!JcHaL0!jDXqu!WE@:mDhibgV.N?.77Ik5K%la**@6YXq_rXZ$5&CpFs_,t<=8iWWOs7*GB,3f)-!k2<ln%l
%NkTV_\/jP^E;ancW4^s[QbNJpIA6:UogSj^s8@`QFC5%;qPF1_%06oFrq5FMZhd+7oqS*Ae+Vr@?e<ntr67aHq<N8&4#=rbIf;S3
%r27`=HE3*UoDAN"I,OJnq3OnWHLp]ZJ"D/e49"O*PCNJ]l`9@JQd=q)hHk[(p?poL5H8ncmFgVZkMKNN]tD%?::DUcs3L#CnLsEn
%]-"f"i*Y%fqsk8!hgKS>V4!:uo[<3SY28HOQS7g<k5+GP>Z0G[(]A5I+#EigiK*ccJoCG9r]\.,90V@)Mp&<=\QePLmD;43OWPBe
%a,c!>,!T>H]_c<WLZimXqO!bUrqFD-h=I,Ff.ZH*5/4XH2,(aN(&+m2]"Yh(Zf(^m=9!0kV]=E^Gk^q*X1).HfB3q\pQ#1:_/AKr
%hoc71hgBlsH$=_pr1&/[)d`9"bH$OIK0?hmDd,p.O<4D*YKl!0r9<q7s1GJO\n&_3\:.d,LT1(<a5((7H$cs[3+s,rlZ;F1hfA\h
%p#"'`cG!XB!N-_eghcD*EV$=LIs@0ipr>ak`oOhjh>M[<REOoOLZ[a2MqbSMS(e)K1L@YrWV6/4gY;=X5Mr&\pW_gq!o*F_n"8:A
%f8%'R>[H<s`9,rcpV's?gq<XSk0<#DZK:Y.hL`bi__:NV:G,tEI!dcRS6oR4eWj?E\Xto,X"3pd>e*qFB@T2YqWlDfS(3og$>46B
%*-1`6%`+K9?tHFRh!3(b^>)N?$!(F$=7+0o^\IfflLSr>?JbVL,a*5plr3E<r0-^9QAs"[HZb7djRHR41&<tP;DJ[Q"O>*m-K^f0
%Q_.N1J#O9K"]!A8npPr<=''>/4/m\+-a6Asi6Q%Shn6K^]7,5/f,_<U]O8=a>d>0[guE"Vj;XDTYqPira=^[<#JYWA]R'85ipIhf
%iJ?+^htV%Y\]P_="l?o*I<B^^nbN"6eWP18r:581[k!i/5Ui;^>i"37`t.(_muP`=cQAL%UKk9G#s[`3hL'NerjTB2Xd`gZ!h*Q6
%*33HFp?M#<O8o(Ek5+(`a_,JjA8`R"r;0gU>edg2HdqeL5<2VsUO&$>Y[@t=pOZ09ml`_K@F8-rG]_r5=Z.,?*Vt3<(n]Vh?Jg1B
%/<]S9&,.!7lVd[\ce"pKHCeA6@.?g7n2A*-6T1"I#orZ[*1P:G\1G[om/RO\QuCf4_8&JECl<_RA:8j;a5sSaGlIEN+O9<mr*b)m
%I:G/3#.)'_34ll:qr[Rjh3*H^;4WYA/Qr(/PQ'Ld`iI:pcd"03oao`mnMm)ta$b4qZekC9TRXM^rV?RYH'Hn*nqHcoa5_fd`JX53
%Ijgp*2`FgaD_EaBHU4b4n0(!S[mqN-HYNhY7A"Yb#TpD(D>_!12U(E;;W6B:Q^;WWoLQT5?UOh`o'1$_1A2"PbbkM">OW(lPET9-
%*fi!$p1j9Wgj]"Bc.1(j$VmW&F@4Vrm,5@XVm(G0V6[BQKe_oUoujiT:B1p;W6X\TQhQ*EfC>s2pKYnKcNSd9.+gu+E9I[>XmSE^
%lM^tLn<$cGJ$m5C5F,#i!Cm(OeFk!N!$08!F6!H-pYh(.]A(cfMu=Ds4GdQidE4FrE5bldVUa)\^e6lRi:DML?]Y_En]fb[ou5JE
%(KVF9b@3rq5M=Z_rF&!(mIB)CrKBC:2P46gq<mP7r8RCgp"a!#^,sI^B/jW*45'J*RJl[71$'LDQp'iRKAK!+rH*@6<c>Gi8U;*=
%h,atnC<(Bb]k=(eII;).:c/'9G>5K_hVT*.`M"sX-+0%/anN'UT0AiH^YiVYpSpHbe[Ak[^:M"']`bFSbP!fZ_gPS01`clbUEsn>
%\SbcHEclYUEOGjsI=??^rg0*#0\XXFqtd5p9C;.ZM:$CNa)>'6a'LB,%$I[bobhCD5Fh\^i)Aq7I!9bGE$L]"p[q,02qJGc->/E[
%Hi"<6a7Pju([p[rDD14U0)2`=0/)cH^L-V=rR-+BeH3X$qJ#?UJ)s0_r-e2&p[sZP(*_^E?!^eg6c*0sfs<ZM^3mV-l29s:]tk@)
%Ap]hF,g&D4B]i.tM6c2PN[9'm`(6+]_f4fI@n!+3)\V6=M[#b;,q-nKK"7YoU+@1U@l\jq*/h,<ZoesPb*+eU(TiY6a.f(g,qR3%
%O'/_9.i.653,P64(<-1YYUGDfO[D@(SeMt%r$c&OQ@-o]=ObBO79MG_LVD91.Mh.D.:H)>I*AjsqY-DS3CZ]eU9T*aY-H<X4Ds`&
%70p)>,`[qUick[eK>,;ghr(L((Oe\GQnR?<K]j9!Y9adqQ0DrMKOl6Y(jiG*lf2)ZepZp?qc[8![09j?mVD.&[dIp$Z*4,r[^N:"
%g=%h//hj6iY.!b5^[>BE2:e@`Z*s(8l`Tr^hUSJ@TeH/%h`eD"=jR=:2^NfM$,C[$4an9FFVudpJoqs5b@ieH_Jg,'TFp:\s1Sc#
%34X3>el^`J5.gaE`RSU&B0Uk@SuVndnj0=bd"5$(]RG.rlLOe#Xi_LolFVt\]2'3i;bX@MfD%QR5*n4cJ^NT<cT*I=(UIY&<\fo)
%$tU_PH$?gl"*V]S1SNT1]Y:q#0Ra3>b'pe4'D&IL:/%Vd*)>f!IpE"Ys8?s9Mj"ZMj0Cl[j=uTHLLqGf/PWue^sUsK5'N.9psFWe
%Q[R/_&]VR5pZRIq>SbVg6f6-0SN8h0,5I_[hqbrEIe_gWhR?;Zbl)@M)o7I+F[rtM/;T%/HQRoQ3Z,A?DeA0aDcj;9^>7ff=V,]R
%p:e2lll5k2J&?\E2>[Taa,%e'jkVl!0CG-B]gm3+5&M#tP#HD+#BNjWj9Hl9HkM4q0d\(c3OVE[#$NPUf)5",jaZ/D-/Y0k4k+=m
%c2ShPrqB"LH*$i!GM&[+rq?MBescVEo=oXus3c3]#1sD-0=3"VSF;"u9Fa2aZfZYeSF;p<II(qNG]@kKo>AHJEcq3N2g=qHBBPqd
%>VJ.,5M2Ia]l`Xh^6%Z/G4blce]Z-;YMR"(G]@e1mHa'a>Jo#Fp1?05fZN+.^8fcOdQs@0Ic,S1TqA\Q:S,q,[.oQNHA0ui+^61%
%q`</+\_&c+[RS?p_re2=;I@=P2hr(o'//_4YAZ'HY!9'iil/t2+MRdMk2Yn`Dlt_\5/+^Tq=2_sg%E%(m59@$NtX#s#\Tb-pZ:_M
%GP>f#c5'HmEaQ.,0)1rpX8602j(FQkpDg(+jH:SOVq;p^MG<n7*0!a:O$:^#?T4aX*%tKJ%gO,&Gk9b1H*nT05?R$_iQaL_nj!->
%]5!B[MWepWA8`R"i,!+GqhU?qp.s8Tb8PV."#"HJAIZ;RJX87`nj*KK#mFWlbT_TSNP[CKZ3FVFfE5C]096FPlu+\-3]Naa#p=Z!
%%aS!BOIdH>`1qns#9RE#C6c.J4CkhFSa!Z+-C,2G*'2ckP&FIE-4U(j\WT\RpItB*neVOk(d.`fn`o]5Za7i%j6c0kGeb9PTc]:F
%'@UA0N[kdl!?[?F2rK<Q(E_lJ+3iKK1,(jC#,XnLlcQrKZ7kT\Rf;81^\n#!Z^3U8X<KO:(6YDi<L(=L>AL@`58]UBkf_Wq#XuI4
%TN''lp,07DI)C@okNj/eFm.$/i-2Ao=0LIcggN(q?G'OQ,p1m1ru8`CfB<>7PgOoJcG6-5bYo8"?9PYCm%HQG)VJaMr:]*q=CQ^F
%dJ,D5=RZp[>V#tuoa;:W9U8egHSfJs?SWrm>eXHrf[T6<35tu'=&1?,&_B"^&c"7R+32Gu+HE_f)qI!g_0W]5[cZ1$`YulW[#nMO
%(i(,OLuK7qB8`uo#9UoerNcZuFT.l*0Dgla\32pg41k@Tc/fQh[f#R0&*gX];pG@*GF*O:pOtnF%O\FVa5tjGWoMd_qtdh]F90e6
%=(cG(rcEMWJ)4L:T.b2)2Qkrh\",/X!$;^pd/q,Qp"S)JX/k^d7FQ1$nKEt?b4'ek6pjU*QWLXTYEtdK]PLq^ng&L8L=6;=/U'-H
%%d9D\IDngEFT73*OsPO,c[)$j8P<m4Pq-S?:hj6,q[<BcL,S6_"b-I@p@bPr=*<LBB2J*>Z(ER&Wt.@Vn,Z*Vp)0lY>`mVV."-?7
%r8BlT*&jNDn#O2eVJtc4ABpl9^4n!=q-*>DLCX)_1a4I.X'9a;T2<%Ea=LO?n\7/]8Gqt!6h-P$:FI'p!(lj)@e'?&:KLokY^Eum
%.qeP;p9Rq'DskMhEska]eXJW7hdQ3?%W+U7Dslk7F"=Q]f_i8`]Fh2+G6mWlJq7+]\^d6Th7;(,>MZh[]6"#<k2tdW[qA@"o"k3D
%ccf>Wk/*>Qk*D"KU&/nh`anc*SrQ&0e-$U((ssiW_u>(TKa%*=+p3&]]Fl_Zk/o2oKY.qEr4&Z2H+b;ON;WmSYGtMK]#t'Ce^`@K
%[i_55e'3)LkEgBWrl:bskF9(*YEhSUot#Rr]7oh'8$e3kIa>8MUH`2H*T\bsEm`..1[?J2UIUuJo;&L@2^Eg"n[/"uj4;ENiL<89
%m8kd.rTmhEa)k]IJ$?+*[oe:JoCK:WL<f/N"9'bbgO+!^9bm@J^>7p)p@WP9&7oe:hS)$4^K<O1o?12?p1Jfn@N!dm3L?$>dlqcG
%'B9k0]sIaQI/S4cNh]slYCVZ@(jRa:l@1AoG>GBtf-g)rh#f%NLGGJc\`@Jrl*="FmlofjE"i"G%@>V64$[S![1!Q!13f%FmEo#@
%95*/8QiHS_hq_OE/2F]DIr`?]7!mTW\.dU]=cK0+./JH`d:s?.pD<X1fC2WV78GOhs%'iu"#h,^+AVb%8*AM-,E=k<^#7iGp-*Mk
%l!WGDI8-mkhlpXNI(REFZK)tm_^<UA_&p&3r9\pabeCp[mi0Pi0CQW#IBc>Yi2BDlVZtp^*hY^poC;,:m^'7CHX4_cE'3%fmEcBa
%-/YpJNed-6lf!*X)t:\9Mi[L`f<b#Bcc0IR+Ko7,LMHI/R(`!6`oD]c`DOp:V^90m1(kTD,LKF:R!k(Zk,Eq7<aqg%%*cnes4d4E
%hX^12nW->_Y$H8\/*u2TY1I=ZFpht4NoJF^F8bd$G<jT:g9\E&\c'^`#4&M&M5OqS4]RB#%popXcS]h:*#['<R&pThP4@lfY[i-k
%.+;KdkAS+34mY@6rt1Gg4?766,7Lt-\TWuU8V0nC53a43N8aP',YF))C^tmtR3h.^7qkap#AQO^iN]MZUGo-DdQ)ukp<QeV[su!%
%h.-BCcplZZ/-m9RSUGX'nNWA[+(n[DCUEmMmltWtce[YXDm.LeI[&U.Bf[,,enK:ie*PE$3R,dZR2sa-HbNR##[JF74TFI8m/"u-
%,t\LL39Qo=ki6Ypg;.!aO0/LDMSP!peUB+72>".hF9m0h_q!<&iV_4$\j@r4%)h]=]tkp^OFI(^s"qW[J%U6``K8^fd.HF,Dlu=*
%G9P#R1MqVjnb)#:oPZqic!S5$pYfJ.ro<=JDQ`9:e02U&iT/IG=*O]Dd;\Z3O+&mTr:>])Ie1#Hhf/-Fr1fs8rqRf<li4,;qVS^J
%LD)J6r8m#>rVqV9QhAu1r;0"!H'UdSV]h@RP$G;jK+IM52;=$N/Zqd9T;=O.dm:.]n^OAuB8q@ZVZBkjis(]j4.I)Ho?$'rhM$.)
%nI9dhD\,5q[DNR=(]1GsY%-MY'uoshqi8.VI+aNdGk'1"SpuI^PQ*fG#4q'9rp(IIrpo.9gU!65eZq9AopgCfS.:/hX?@Fr?-'HV
%i2ocQ0_hAP+ocprLXt-WT=s975AU9BD\/JKGh;e#ak;m@FWb#L%A#fIi;O5qE4nHgbU9q49Y_aoODR+r9>no<W#n4QO/[UWECfjl
%[)iPoo$=Z<R!\"m^L"AjpF1hg]6%NG4W[l]o>]AA03XElhW$e%G;?i`3]HEjn];g:%#NB"fu<V/[Vn5ccJN'Y5'c+9gZbVQpHuX3
%T.nWaD"^epp/CLZf"3nUQhfJZCJM!'@G\NaNk'X936fRdib5fDamA:?1[V*%:NK*=I^/W/DVH*ha3&>8n9E^0VsW]'(\dRJVjt'm
%j1deSc%!jhq<,q^IM5NVmGC_=q7h*^ES(%T[k><YW%6DC]N$pChJ8JTEghWC0m302r36$BHt2`eT&r'kk)G"cm00WJj]&.>FA3`/
%1XUtqr7F3bdVL^*O%,W%(Y<B_9&V2:dql_A[<u.ek#/Xc`[<iCD.hqTn^KUK6bTNnD)]%UD4FDQkPX'0MY#r$j`s$sT'.olAOEP)
%CLc1=fXJ<1D7>6cpVU9`@.aJ*[hpn8K5Idj=@UB%\t"]3g&VXPU41+g=Pp6(8GtoHJ+YfLcV/af*itBsXkO_"^t(:dQBQgLR8@8F
%#@Di'Vpj_lqsF;uS]&V[R)Gul!&;*LkN>).\^)'Vf9XmQ1Bn+02:VGZkOq(:^X.DHBqCm@gWO%"3UT]Bne("Wh'5U8oarL@B"WYq
%O#eYZ2\%((lM5$a46g:lWkh?ZfuO[tVZqXP=-e/;%BaOQI>,41UU)c-_pGX8@328ih*;q*g[mDDk1R^nLm-).aDmu;e'iH'U!NU6
%l4AZnMo07$*_WTa58b\inG9\uf\.LOT-!ZLg#8kYVS7B;q,8q$R7BlK7k=SGZQmfR0uN+7&'h&j.IQN<1?:L89l\Hq:[rc-f.FL-
%(NULSYCEK6R7#e3T:%`&8NJW:;d3V3G(Xum<3/d`H;^/-LWZA&gc`E3Fh=Un?%6(n/e0e]'`X$9ID5Keou>Yp#t&?98^+(,DniAk
%akbbBqX'W%)W7i5:X7qt^:eu@o&cFJmk.@Ae%bYu/q`]ljh3$sh(WVgSKh@>"r?Yt11*@A=^J^h7$;+;BfFRIc(;8U:*!8M.SSpF
%3Qs"sUet_e#%EC#IW8Y<a]^<oHI1i+LJ=^g[LBaaOpu9eeVeLW(s9F>e/RruNcgsC2XFl6q9s(,Me-hmb0,+<jP[RsP^$B@<NNE0
%2u%'U5uT/di8i<gg)?6jFnP^uND=YW_`Ln)ii4g-I'("7<ZMTY&'I!Cq"Me&K,'S[k16'X:qO"+Cu$E&CY'WsZ5;$*F4+'2RMT%d
%.BGOfR?#b#Nb5]%mEV?T*Q)9iUejjMC+g;srL`l7k=_H4lep=DMOr(8@h3JC9R1#Se18[oVi/dq2DnlJph&lid:UJJron%ld#C8X
%cL5Yk'UuK(qqTq4Vpse<g[Ft&"/\Zg?\(R&%,A0JVTj'X]s-cS`KRkO"uY[(Sr>[-YOah.$2P8OPpNncIdaDc^X9shgDJl)S*IaO
%WuY%R6A^oY`:N/A3'VoiqX6@e,OVFIX:H3kn*sOBVd/%<9!W]$\s&TBq1n5\f/**,mYj?*p3()\-E,`WC0tn(+f<I1d+E65mFCEM
%G<64m?2(n=]m:BVp?hSgYNS.CmOp>9L9[SC'0CDj7gIJe3bJ"Ne$O`T:@C@5e,*D-pI46*pWmbqY%UO_cS#6?EV8#(mAl0:4,K.!
%?Y@tDYI6$?T6.8$?6_&umDY-4]4#`jqs<\;mc*qDY5.\DbEj-6rU#qp1jAdrs8)0Gp?j"SkZFGs:OL1^RE.DfqnHL.>tK/Nrd+:u
%o(gh4:j:O=qt'4:bQ"KT;:p?Ih_2^XHujMTOe"URF*,GVV$7`[`>ejJp<D^p)JWMENGGJ4%5n-b6B/mc=Q?V9ei;FuCE/?_esPo_
%22:qdG[J9Vqb%/5P6V!DA,YIr@sEC*naXr]&T#,C\Ir]e/_IQNM0X$U`pg<eNTm$Bj01&fkRSfikT1CS[#:]=iKoBZ`YQ,.gJP`P
%HIU8:U5^)`ZXrl,)/OD)YgMhF2D0IFo;.L:XO39f@uYbn285DZUY-At1i'14NA\Gr=<gngjq4Bob:FEBL-"&E.i;c)oqeOj_]WU8
%/-\,H^.t-(]7#!Rh63s#g0@o+d[hHpK9NWW'$84)Ci4I/X&IMUO4&29Bs2:qWnA*hc9O5;4r.A(:@4.tQ.XW0Gu^od'tni?_<[5H
%99dP(\':Xad9.j;9J5#*)cU#l`[#&-;W8-@%c8BZ`d44uZn[cp`qi-'fq)6R%^[$fA2cba/T]1QfGKQ*An0q%1q$SuEW\5K>sNb\
%r<Ct3oa&OVo0p:$D%bB^%CYq?*.,EFB@trXm5RX0XIFjNO$0+DLWEAl4mu+0`qnh(%l<REH=_5mgM>E4Y:lbsp=pOdl)T53Xat6'
%7W#5%Q%!(GAc95LjZ4n:;@c@m;62of9fs;RTt$caQ$omb=PoqaI`0la*P7Ppebu$C,`N4:IIai2QaYdO#9\t+HQGkDKiO,3(5CID
%D-oD9?Os"P@U9-!FXJ`;mdiLAk=c*V':8!2]<(O=YEK^M#6n-8T%@DS?+Kjd;#@VkKe81rke>@b^+Ydt6E5ODO8[9^oINaRL<qi^
%8R/f6Z@keS3FoH2T:T?7o5SF?o_Q.E-#'QP<ua.>R,hqAZV@G]h=n9dU)Q2dbpuKA]e4[PYotK/j<9E#K[!/l=^NP)gNtV?#JG@1
%ipkP*RL;'H3\%D+C+Vp7LrQF/a`W&leqK%;/*fB/;O0Beeg8@72%G&YqI2J\T[@sc;s/"5DVJ5u`n&:6+AaB-V&jf&Ebf/C-HI)\
%f(M1u^$_B</d;OKTUc1;2RWLa\&6$2_<&r?LsBqpb]iGQ>e&KOG!>i&lu];.qj3GbqWb4dCH1S>b3]!(A[$[K^/f?VEnJ-cSh`#'
%D2^j0mn5VLc:>(`-1tlOQT`(V]k,ij%`hIogHo\2)a+XL$D"ZN\a<aHInJ:,g`nehD;G#maJ:PUiabq$GQm8YNXrFN#!bsh]>K$4
%IDOGb$&WVDY??`iD3j2L@SKb%8W#AsYpLoK9h>\!FsJNJd4n?nkiZh0.6;k8(m5TtSg9$i0M)VX[j8pU!WR?i.<8&s`-3IU9[?T2
%>rde]O+"b;Z(!`\s+,2)rb(CBipIe?0!UBU"i9bVc;E67j=&73*/4Ec3JuIP"o01\!k;R*/4a92JocpF&GM21"Z)("UmU3k*rjmU
%M]^+f737X,APH(8QR'PS.nMIs8W#AsnX]d/E$J&c\99/LL6JfFG\`7<:X*7qkK5p6L@>Q;f<+`tnZ7>QiE@!@NJ8m`qNA;@l`!mr
%V/5#'^X!Z^3`"#Ip)Q-1P%>aJd@D&eXS*)I6ul\hC8>]9Z3Jt.;3&In4ThIb*rfiIZ0oEXVJeQ5=DCe%!R)4&SBI)1^r@r1Cd^Oo
%`S7M;D+COK.'9Ks<hm"7R]5mCC9ZIX9-AIb,RQHfXIlk:^/o6U7UV/+&#Uk'mF0c2rQq0[fF)lcFCZ3oX#=iO5%`K(1.$`]8MWih
%X-tF/rAR6Vhrb#6HeemB0%T.u`O=BXB4lmhDGS*`6Ps!KHj$8bPb.LYIB6fBn%IAkfLR%I^?j.k(YlRhHDe!ck6q*8g`$cNh!$ht
%o3/VdC+:OSr=.F:-bgQ];;0K@9G$["Ym!dH!#GsQbSW:o-D0"$gqNa)6YK^^R;<g/1E`62cPY6>ZZ`)(AAj"6Do%GDD$[CgMneH/
%lJ]b@b]Et0]^PHIn#PIb[l35O2T^?YI=EODA[Wi<^A_`kI&'AV8)A'c#>^KU\g).F\C<[ha'lU9^rpk3oD\]:[RpVDF@Uf"R/)hK
%dR:!MZSH"/0_A?=+c?WX7\0Tm6uJl?kSnHr<K1mB@j>GG4Ztl@YC-l/<?Bb8j"tZE\aRQ24LVum`hDe>FZ[k.6"/Mc*9t\oQTul`
%',X*\ZaS-QlHT"+eEd92L`Ecd:"7eKm'1Ol*g8#&>UV%<Q7t%);IUaATl8!E'Ec-YX!C:*1WFFkkE]'X)e3p<N8@D-QB_94Pc*uh
%]Q2M`NTp-;dVcX0F5<""RuQ13mtE//7364Sjk$(kq<SO$lQ7U5@Wj+rbgIb/1qSr"_/:Vt`!kElU9kkU-;ij`N?jD:FX)akn$"3s
%14P)9pgK@7I[W[p4-D##r,PAnBQbb#HB1jC&q\?\Ls\\u4,G/DlHLTsG)lmqnRpTJ'XK$@@e,O)8pc?<,YDdtL1q93CZbGAL\m8`
%]q73G.'Y@aBhfl@aJ"Qr37"9hY%]\IZIqrag.e%s'XK$>,.HCLTo;A#\))<bKsG3::2[;lrr,hE@<\D8CuOerTgpj/`kg!pJpF&F
%D/b2C%`ReWTpU1I-tZNj`UCsCUtn$F$'oET;8t67e&AT(dUU!VAT8.Q/C<3EPgYaDA#4qhqt<k!k:B6VCkfQWU1GR=Ok_4=;DalZ
%;")(hPb(;mEQk.>riscc5?<pq[O"dUq;?rJDKcSeB<Pr.Pgjb&P<+c;]?WbfVAjY!Gt0,=mgeF@*HBkFG/SC6fptBbXs[&c+qJI4
%,Z).A-;Z$X*dLfg-(aJg`=H&1&XF/9PT;V&pZ+RtCHUT<$"Y0(lunB/4ceEtn^rf_*_H4Hg>2!,[85uM'0Q?Yl'&iJDPU'MgRP0;
%'H"KF50;:Ga]RTN!isc_O'cYD0m/Y'V,#I!e;4LDF!kBtnmpV0LZ(C/:Qj0h#(Wn?N,\7,@mi8tSn-)U34nd[P!+XRHW%_J4aHs(
%T.bVmA5?[XT'WBoHsHC+>u_rVj3I6I?SZ))o.4f7@VIb$bN4<Kl$XVg[1BE8Q'7=A->YbB_b"-EAf/CAE>n'uP6XN`Qa0(b[IA56
%3Z()(6>NCiiVPcfp\jU?$%^^]?p,_sG@q^^Zb)-jg"hqXT!$tbrs.iKA9W5PB(!$!`p7)_<u5f4n+jTa\%@ReFYDT=m!A$P=mS2=
%c1Xrrm0L0sA';almF1rGS94'/Y?M-RkG+g.rJ5RA.rF1Y#9L@#Et(D6;?=kM(5Fs@,Q;Nj3>D;6c/$X%k?d]6/"V)H<dM`+5>=97
%b&=ua>HdtU/&1c"DnY^G5;bFpb&=u1\N`3HHT@C]d,BTPB)j<["/$eK&"o\NK+)K]3XE;bRL=8A)"Q&;7;)[[i=D@/6_k+B)IKjB
%R`ip:m>.%;q)oAGVQ=bP)_DT4H32YDBB@[6Dmujg8BF<7@i?rAFijEce]tSkVX;]A8DHL3m]<[b\>`Y.UQmbjV<DCSU.K];.o)LJ
%g>dK)B_lV[nO84"ZL^#m:S^o<o:(E?j)L8PI5fu6dcS#d]$V!qG>-8]W#Iu9,;NdMeuec=6>,O1,Hs?ThJ"uC4LdH+Uggt)m7#GV
%"7Vf6(kYXjeAc$DFOeClggp+Lm[eVV1$Z`hiL5VL2pO3DleHJdc=ke^DWgc0StAAs$_7gdc#Hd&&F1CpD@EjMAe[0gUDJ8ReSO*Y
%,<Dia[Z+$f8(F$L>B?('$6_<I)bXe<S*0GR#W89pOW/@,g8jBW8hb850"YF[":n'DSCWEhgkAM*1cCP!82e_9:Eic?*3fAFHK0;J
%+IAR3g+JC'_;[SlmA+aq$GCla])B(dn(R2_o3!H#iSh4E?>kL\k=]C7Ncu%!//(dZ+1ekmHfL%@I8PO8o>#O?=S+*4`5t_)ZGCX(
%U\=B5#-JWo84.\bdG*2@30CgR'3;BOrN<kX)BG2#$d+Di;JY_=-MbC454:Le?qii<fps.K*:N.V\Ec>$T?5pYn*@5sN:YY]n:(YS
%p"ENJ6OE@&YH)K<7aAZ5HK.J]:>1'hA"a,K5a-2f'/CpO[Ka@Yo#>)3n!hUi\8-!$Xbli4T'fjFOttmZPKmd*6ePIQ@DO?mD1=c`
%qJ?X(_!MK*jeT]a;g)GJO,d>gl^!`\n:&^@I6XtC@b`Sp)%E./a^o$ZMk2C#9\<YYB%8.]Ti\`(p)dl#KeG0f_L\e$:nCF>!TcLT
%j,:?cli(Pf`^V'BC`74im2_gWK&F6Q"S9j;aYau&;57)0B,`h+9LrCTE1#08)V7IsX6beh[oqaAR*-?3)@O4CVX:sc3,,iW3N%pj
%J)7Z/p27RKQb'0$e(X]9)6>L_RtSH7EK`k?[iSE&pm+]7g/1WXo.4q'UK<tdXiW?'JFp2iS3PCN`P0U%4g]A[VK8:73G!'/`_Y"%
%A-XWEa`Ra;,g@/kc"6NV=,b.JqOAENfIW+GR?4cI+ktiN*n;CU3OZE$6C%n$eN(</21G+0<Rj*toF<U`4#B#HN5cC&Z9rOMNLu"t
%g@cMgdsiM#ib&'g2ih\/"B;,ID85_q=`n7JY]8+jN.G+Xql5(+KN#1aTha$i1'+@hEtlN1H;@Yg`_+%X^Hc^"n%h).PfAXIiDg*Y
%N0E!k)J?8#gS_70D`dp#m7oWZrA1G%eV18*^Upa)-LLKrAnVF_/Rjt4=NnJK7IRcH]3%"h3h:<=lE86'ChQgRc/]bsm*+O)mHBUK
%ng'=^3VgC<f6WUX7NOU=[;l574,E;$HMbA<WY#K%]:Ib<RQU?:FPM!\K]0T"GiE6QS@pg_3hrraYDi^#N1YTH?!BZ3o53ijhRLt0
%PP3l3=PeTGk/fU5\L>[S)hZsRH"4)UpJ#9ogblS#ejOn*:Nt+T;"k/?Iq9p"=(a`=6j8c;3A/rLURBqf"k/+.!Lo\_CuCY]@![.'
%JY-5b[)*"g#93G''hnA;"s0dPROsPj\:GY(9ZMc)GV:UeGnCEhI,?JopH8/9@Y%`l""S1qKak,fJHLE3gfMX?Z7ju5Jn@nYA/8bG
%o)pu`>6[=,"#o-WDEs8JTD6q!9:m]DJ^eW@5Hg15SQ/?.Vc=MuU6Dr,%@gCPH6OZa9Sp9c^#*En-&p+9A?;S`gKSEnI#7WB*ZDN=
%W9&R#(KYoC9l3B(nN@[i'**g-[%uj#)a@\K@k"Pu2Aj/WB's-XYokT*8iWLHj*F3k03=sg<dVU+VlRDE04(%*[4oQ>E.I3EMmM10
%Dq<'q[5-k56VM9,b$(3R6m8G811dR]=Y!G%&CVP,>!ku!LhWtbH#f0!%oMGq6*/gSmG]rgDABtoe`$"\WR"sXVEp3]/C]%b7gH.6
%g``08[Uj:'=k.#_mH$eCA?9FLZr=eC)p=lk_eN=XD6u`RJnkmKS%\u\#*5J_RQn]cn0E<``u0,!c/p=+Nj@&T\5El+A%dEqf9+dq
%q:&Wr9*Ttu1i-_\%grE3e;Pp[*^X@mWYc:I0Jn><=eu91VTXnKS+BC(R%_3^'7OJ*G7G\VFpJS:mnf";g8o5bke;1O`dsLo,7Pj9
%CqfAt!.3";NPR3ZoCF8P0!pa!Yf(%feCSP9XX!.B>BV+jJ)0To3CO,O;M3sHO\hoG8P#B\@Pn.Zjg1F7.L7_uH6_@`n`&hR&'cXS
%Z?S5<Yb'ri:fHAdKhrM">W8tt[NE%Ih1_t=]ETUtWV+>O.4Z;fj7)7t`$$LFpF6X\fP*9cll^t9r!G5sm(iDSURtmuSXDO<<I31)
%;Lec]d-?'U!dF;_:q)Ro@)T+;.Qf4&3S<4'HFuBRk;0bf[1R5tl>BJ>>"8q0C"_^DAJ#kT46<D5fH*_Go5E-uo7jaIOL:ZeCa#=L
%N<.b8CAZ`9=A800&?$NcPWJ&,Crjio_Q_s@rFXkkcqSX09LQf>PcBS[X7iDq>kH!;&qCW]mLZ^*RhS]kT=<XN*lkY';-f<Ic3ogT
%BK-ONd?=m;N?*'Ym)HFFd=]ec^rg;HH4!+%3h.%8Wd'6=ip9\9H`(e?1:"_S>]i_+!J8:4fPE^_@Pk)Rd`TR["`-$k5"PlmHRc\O
%U41>3<\5g=*nXZ%WPd6&qRJ,p'3<fP,+qPVca@oT3te0W5N9]/+20IqLEC?c/s=jLIt)(A_92#YAVGj<s0MHkh8pX._smPKcgcJb
%+X%Bu:$eG`$=m]k$'ZYP6kmIDqnr$[hl>t0@0TQ<G&?]UHY[J6U$,<Y?+Enc#2:J.(+BK^WGE5",KDfNN2#OE?n1:q3FSCj"iSE&
%[NDQ1M,qPVh%n@8k881mqZ:l_6t;Tq:@ACQ*#$TE7%;YH&[m[2+>Y5AA74gnZQ)P8ea+M^](=p3MOHSCMl2:L,IZ?qc66!q7XQan
%^eIb6A_a`A$q[X*ZE/pb_)]5-i-6!C<4;@$PA+nG2s"5#&_]KUC+2?a3E'=C7lc6A>:']*EE-[><,b1`D.(?.W`^[k<>]SS8hU6s
%Ejd%)"tU@+Oj0#!mT:m^Yu%ATX:p=DH81^@P[mF&l&LH!%j12EKnAGh-pU7!F\DJ_((0D\,bEA+#2oQQYfO7Le&$?WeZr""98[S0
%/.4n%SfJ2M=?FN"*T7aXQ5a[D.-klOKbH1NTi=N6l/JO[kDZfkZ:De+4h,RM_Qm#5VRX^7\Ai1_/Ll<+d[2af=EQ//5'J/1Sq(8P
%9mjt$R;-0(kS4doLMIbP$XnF_>dKEMD5"0cB;WK7:dt..dA&\VnjWak["Fj+j:iu^bM!eNU.2=GNim>BE&5/gGNb'@_XNkl?@K;5
%<Wh:W32b<o_J$AG\1FBf'i$kIC_HuT[_g6;Y@tN*D9>ZN`9c./C:*2@Rk;fO!@Q"5@5c(Z;'m@PYrD;Z-44UoFo5g2(Fnj+[HWR:
%52XZbrIDq?`Q<+Ln5J\&s*h`Cqu)QDpH-+Hn+_@Hj88e8n+So<hsYc:^YeS[I`G6u.f'$la7oHOrs.HMpi&ZBHBjr[hLW_s=no6<
%5'mMBrrhb-kEDFD`.;%7c<8?K\Li.!HFe%NaqVI[$#r0]_.+fu4#UFU*s&!^>2l=N;BNA\4Y?1Oms^ncnfiGC8"52SHf6b^TGYZr
%E-FD$gZ$!*CRE:-?,?<MheW#D(&trtrd.`Es/fSse(g.&>Pp>PjOtA6brp?]`D:PN5QA0:_^ujd;bqo*^3Jc.hA>WcJY;o[qr6MD
%52i8bnNYn!Jpm1XoK.Em_L/l_BBPlceU?ucSUL%WjHF@hr&"6ATA(2Ibs-VbA%_BoNUcl&ZSA&"/JFp383iSM90fJ7&l;s'G!5s"
%::E"c.*_Oj9L/Q(gZ%<`gZ%>`D=QN<ir<L!2Af,r]aAZJBoHGF5mCU_DsqZj-J%PNZac]?H3(FI>&]5j*P(+Ho\LB\?$VY.i8-t?
%fq/cKo_[l_\23N&mSLFVDIj'UiQ;JS%6S]Q[N-!Nq;u>Ilt)g+faM,Nm7mUfJ5=Wsn%r]Z\2BYr(W/E&F$/9ZB(MAj/dmm*F.NXR
%Q^lC8SKRXf/V'&b3g1eZDr:G2J`3+(Prq&i,S">>"eQD:!_VE*G^7->,]t0rBn*"0Cl`Y(PMVk]UVhmGgsmITG'_Ek75;^^\@6m)
%s"LFBbGM>3F)A"$pqYW*_,Ymn05>,SeC48An'%.D5'8'U3T:]B)/P>Se-qNW_i8kS:\mS%htQL&T"CUsE/eJW"oI"84Ghleb1GTn
%prr>e=!jfWb3^4#Zb/&S/qUVrfDBs]o9,i+>Df7[:=W)5(!&#Q'DG#C_e199@Je*jh8[nH]6@[o%dkOF3j/qt:9h,A-/pH#(W/DF
%aNnV<0.s&.@a6ZpDQTZbg@Z!($,/nq=VT>6N*LKE%)g(Fc\*`H?$icZY2I\2BA<I<>#'L>A[H(sAr6N0`t<-W_.+BQeBYrP[Z.!H
%h]:<8Eh:N1nRcgZFTJl2EgRo76ZH?@YGUg's0)dsPp-.)_gh$,nX4PSroL`%#d2:6:W3.VEB7^c5rd>a@gWTN0R)RQ5+Ks7<LK7^
%L,46t4"g<poB8(sbelUAF6qR%&,s0jIePJR+l'Y:I.jrL/kj>KgsRl_pL(.P7u?1Vmu4P#P2b_p3u2"f-'b<SN#<D84cO`sVgYIY
%C.^V_j"VNQ7@.;!=&WWgNEM4MI5ksW;c!!`c)j&Se*q$g`GmPig%hu0$Z1V/"Gu97T%6%F:ToZIp+(ljbjg\/k(lXS0R5D.>XWAU
%0Tu<a$Wk[0HDk7q%#_9m8%=!6D74*S`K%.;kOA#GKpV&%*,1s+Olk;**`E3rq8HKSR2)^#-rB>G7LH*sn[K4$@kdFn`]SWLg(q-c
%k)72opiCBj=Vh?)_1aDUjqrs$UIoKb05>.YRfD+'pU^D!3>629^YbH$CVKaJj8119mkt.62?3,&s8Q;=rnfZnIG]_PI1tK39mGPS
%iI0U:pHQ+Is*YR;pQGQ+r$FPPMn<;FfB/+HKk&Srk&VNtSKq7(o858p-Fn938k4'4@pM^dc",,Yo?$P1hQ8&=BV2DJ.\NV(29rD2
%BOKT2aS?On@kjlSk$U,Ad%"Qr"cT:2*mo?q>Ta'CXgOG?gIltMSu1G"+)GNoQ'G^>8Du$8fP+*PMH`h&?&cam\)P67Yo`]F)U%?e
%$U:!$MRAPFietTY+C5sqT4)fVFFTd]Lh!?_I7"EL7*)IAZad@?_Z6;qEZX8j`J#Zh54="=4%hC[V5qE5=.$KO7E;H:FR'fI`=VJ[
%4$YH.;m6ZYik8,gUT/%1iu%K\DK@Z3`-_G<hro=D);Y[UpPZ$%,iSp:_VaO$h4/3:aeb_E#k$;+KiO-SV#=]s(L'X_Tk1T!VJOP_
%'&LYSll+T(8Tp+D.sM5nQ0(LohA008Sg7ONH&[a*PLst!"25gnRPR2>/(n=A.`ehIKsGX#6;(cn/uMh!#4e:;Ft[\k?s:&#J[rQb
%@:tdZr?+&U95#?*`bZ0pG%?u?Fn^k)SAB"K#'UnAOk$ISq%>0"fsd&TIhjQn*3.pl@UGMOQ7O[V9EiQKa;2,.b@u2W-$ugL_oml&
%[q!/)E9[f?PPefF1i%13`4OjLBrl&qN6X7'5.biK?ZY@\oBDr/8N`h5"/e5K0LhUIB4b5`4?h4O"6Se^n!\gdk[J4i4-*K"c-aK=
%\4d/.q?]LUb&iQ,l33nhVDrcfac7tX%h.pN'!62ZY8kFtAmH$\34d`F>qA&MK_J:tOV%)$BM`9jp*uH>\Pi`ZiX>57ISE2b?KM7$
%QqbE43VIlofW$f85Y&0)bT,$YcD0X0mC14V"u1ucR'dV@\`/W9P4>4jbD^.9d*8J(QS;Ge))FN:eh/Xg;MF\Y)nmk_"AZFSo9efV
%,R,/Y[HWN3W25VATBORk^A+/1V316g3pYo]k%H"BEsZ12bZ%BS?qc\WX]>ls#R*)KNUI;+"@:jQq7U80]jg&+0fnb&p:Xl+]jUKG
%@._-?oRCSk82D'`(cgn(mM-s^\8s/ic;q=PL(ts4cAIbXf,PEgs!s`)Am]kU>Pkb!kC0>`^[$/_mGD5)@Z+<H/.n@S187a`IsB(+
%q2lsJq9)E#g0_F%`9a=iGHUk<V&S,N.$ecGFNK>`ND=8h*ukoiPMK]iaL,LLj5$THgasNZ[@\M5/,R%^N;ebN,AGP_On?=roY"`+
%GJ9X/S:'t3(ep&BcE%j3pe&SY'dL]2@YF#k#*/DuIQ,@(cKl&53IJQJ@K]`dQ*,fiH"Y+;[D4#6(3h+L?8,:HeK\Wk3Rt@.[*"`(
%97>Tc=>*SFq=Pq3,lB&tNI'40eng.PN0rWq>OA47-+qi(jS2I8D'9I#PHG&(*5?V^^C07F0c`5Vi9?g*eq4_drCiY4b>9r,bVH:V
%Uhu?=BCkgRGq*6O9btmePU62jAEt*^I!a$,=Ub2\$Erd]JC2'XD==%;JdO9iX6\QEn"JC#1AkKe)3Ka,]X`/g1h5<4`7memA3>=9
%/+43b\B&;WpQo)ZIA(4&`BV+;l-E&n4,9)5;Z+f`UR;f\5"EQRO*>X=rJ.E3*9M;"FPEG\Ef&T^T0EiHO3b)sKV<X^Kp&JRHZ^@(
%c"t[f(!Vj_*TY8fXd$3c0H.*[R^=K".;A*V1`)6+J9L!d$HMftNEJ8jPM+QME$e@:l1S=6PSR'L39s=3)Z<ti`t+bn[C-EnQ@8G<
%,s_5ZN8fE5+>sCu).E5C-;<RQj"$#/D.I9mp77<E:.Q$`a7%?PrSH53eJgkgdAR5H4LP'Q?iG%+T\g1JgKA.jJ+Mc'+PndO#UQPM
%Em9ph:.@t88Z>d+e:t^8YZ`!#5PrhUISH.iSJEXE6*jRrMACd8)a;e2(rq"?(h%7)QN_dJD0Tgr)h1i+>?LV/6lSrIf-u\DX\e@[
%.a>Mr72r#a7bAN`a98=3''V%lpcDS%?/8JQmmn8k=8Y!7LXO4&s,6iVZe_\OO1TJt0C2rAc>c$:hmuU]hG!e?YO$NhH]4EE'I`VB
%O&FqD@2i/C#"l*Rrk25LrUQ#/UL*u0*dpCm(eSpCPr9Xa!aM5TY]&P9gaU_o)bEkq^XepL)eghBca>g,Ei=/m=_dVWU5/f)KjqC2
%X=p_W(h9Hc=%efJXbs`kI]keHNSc5sRa/B^<Z7"UlglX*cM%)(7$H]AWe]@5W>l\3Q!0hc2T0](iL3KuciX49D%p47%fNJ*e"-E@
%0HTrB@Rf.=$mqu=^8P'.TL5dTX(g6#YRA.!AILNkJ:T=fFXZYn#N'/=gMh5+0CB3NkcLWCBGhoYjIuk'!L"5poUB`.OD2NRM8Z-C
%$a6VZYXN0Hq]"dU?>VNfmj(gNe9]YB?I\J'@fqMhr/MeX#+a32ii<p-TUWp70N/eK,HJC*(=0c&;s=DZ?P)<bkcEbW]U03dN.i?k
%P4,Nj@Pk:1-8!9`XN&C`jM$b-=bus*91(>M]JQjl2FescKgR":4m\g.b&b>Cd+@#sgdb'"o8:kq*2GXBj<q8)+`D6p$e)Wd0A9Mn
%a+`j40$6mmGoujC7q)eRLI:lGaa8fn+M9LL$($44.mAKIN3?@&$q\;6VO51uE"h%)LQ?[Sa!Uof,u.Z,gOH6/bh)0Ug=QXJBldTH
%*csFVnl#A&=RD`g`G3fL_GhV+49_1ukM8n6)n'@@jPmR+*Y<iCF]GqWY[8K3Im=.N9u2mY!p+&R"[:]<`IC&a2nTuaIB3(FWHR'r
%U7$LhCB'LI(/!/m1O^]7E&jq0J$&D7eZ*"<Cj=*C5IQ=TM]uqFN`0)Bj+P36TG`1@MCM:2\u=rQnt5"Prll:03Fg-=437Bhi=#V-
%j8W&K_>hXqk(!(-s37_H?T?S4-i;4nAV/!Z+/t)#8WQH<<:9LQpBj-'^>n[=<.9?Ls2F3]hob!Wfb,fb=^l4h#s2JQ1f8Jc'"^Zk
%i*R,cIo?[RI>!]$_\MToPjm0=^9&a$9G<c_"UT.m%9M@$XXjASPk[JAXY=MX[X'7Dm.ul`PL@dX[(_a25C[5Co-\5]8WtPKbF$LJ
%/"2DGij](RAZ]t#4L0fVaZ^'g(&^45s3A_]F0_<OW^:?2F<+;bK!PS%8bDj9*O[\R_^+rBE7Y'^*%]Q=o/d3SSV-m7*:1-Qs3ACY
%9M$((f"UaZs48.+<aU*1GTi8!<g*HsM+,-WYs4lb'^`)![f9FW7?tSceGjF7V[,IogR%2!C;/.8H5&SZb3*]%hGd2_gLat`K7Bud
%NBtdCql+(MJ6L!c%>-*7?f4c'0U]4(RG+8J]);j?U2aJ5%7Q/WWhrJA76h,OAj3(BZAqHA@Z2ps5e>;O'(;#Qr?!2@c;Xn,rkqbY
%L7LNVCc5_-N#,Oq3><4sp3E8OgA_FAR&Lr-A^2,UKe*M(!]*@ch(3#-j;e;QnEArFo[%+Ers2''aXC%b\7sUfO?n5$k_'c;R1.3V
%hoc)S"Q=hW3W:;5q/<('_,Wr3=-k45Z@`N-X*%@#V3!oLW5"Ldrdk9PqVMuOrAQH_n^hNA^OR%5rL4W&)I<CFrg0n,hnf[aeNSjD
%L6_eamZR%CE)B_^&+J#C1OaENKS<HNd$Y)k<]KQiXjbi0iVIrpPk_lTpk<4DmG/apTUj)o1!hqfCp3+bL%b=^[^/l02BLJg5gIM:
%JpHS:I2_f69N8Ot"0(J^iKo%a<>JF]FPUbmC\H(=FKSr?Vjk+71JJU&ns(6pTi)\R.GmRrl?"1(fc]GZO-E"Jla&Ap:?gM:Vh6or
%=r!FAnDXV`;,>TQ@BJ+%9'W]*RDQd?FM-&V*ii4'rHi6^gb;\7Xmn,X?((,,Eg=\@KMu49ZGa[j4Hib4@,i_d;JO^-j-!>0Ad2T,
%MtarQG\eEb.,5r7+lT[WMFDW!0\c^P6\qV]jIXi#^M%ao2HAYk[VGY:gR:;PUSO8dJ!.[:kWt?@\40?441qdJ'CTD(Mp4Zb,AS,-
%g(!)M)gg=s!=c*R236NLBhO&7F"\Gr`DWsXfMi)SDhA&EgGU?RK32EQU$I4G-WCO%dDTN:R)$KZm@=`m/7'%!Rm\6-I+Vq5Q!?k[
%R\<Z=CN'I7>,9.HERQdNk"jK(<*9AgYT)%'5=@K=Xd`5ln_k$J[%JnS@9SY!cqH.k+#+MXdqMKAlD[08FZSQ;_0+!l#;8Z3S9+lX
%M^Zl[-.>O9R^Xjk(e>@cJBS-8RB!%h<1Qk:-6/+>dS5L41^V3;,'lq*#rlFp2*_iMhFaS7`/0Am&jRn8@2)!uX%f/I!pZSi\Mb0I
%VFb#-Chm<&L6k^b<]@T1CFU;7(YW^<FrJX/S'H\Dj!=n.22Q:)=jZCuRDL4DPD+?0EOp]XL05UNH!8.eC:<f7QuJoN-MajDgD!4Q
%LMTbc1Jkp@<_KITN)Q$JD&Ij<M6893%/Ndt/.,i%:3(!?fK=2!(Z2[&o;QI\3Q\0gVrn1tGiPd"G]fa7S`1:lBnD$N2as,ARDCb5
%UgI1?hJ_GaU)HXSb85;p"%!L](rhg<T_#]@p4VXO@T65_=YQKqF96,XQ$>_5)&-_4D=e[PXO0!b)`psdGXE]WB\##-8<_O9*]D!g
%D5g@6[#?:G,S[1On-mC&K6:H5d\Z722q&la!gB:MnA_i7%`JhoBc(&*,a;J[!!<e&:9A,CA;X3SlLY*q%?uS?POTe)[t_2rT.]9K
%OZ77EBj$otS;R,HZAS9HYpMqXi5OZr,[rhFrb,kNXN"X]HeUN'e"p9!k_u\<_7PhO-<Le#$FXXS<Tg6V^sg[cMG6jpX[l/=iRKe>
%0-IWf@<N'7d)DB#[BJJ1m"S+GUW?C*W*!\g'telb9W+jog5=X4_bBu]+/\bV,aL>Z3*_+m%@r`n#.$o(dXd$"fa/<9OV&<J0D(07
%*F6)[LfRGT2%jBdd]&[)W`4b0NR25LOFRV0d`YY>peA.jJEek1TG,\riC"WfL@OD4d@Ni%)DdXO,Wp<VRKfKIRa@KH74</V>luf.
%a_&,BW_?4i-3nI>`c`f-/'0P\84W\Aa^.\]cPDrL+GA$2Ni'BgQ$#g"4qk,\+pBFMqTU.LO'-SOKEf9o:nHK\RA$k.A@2hWg+ZID
%`\X0$.eR0L,ERZ_K99m=D<%JH(>CT-*of\tbG?dj;eG#/]-ccQ(Vs@GMI:RtEu,L_jg+YTSs_\$?1Iu#/db8h-U-^,Bn]A;=`tJ!
%fnnt[TTe/12N\]*``!Lc*+XuoWJWY6&LFq<c:8hZ7R!)H,:qS9-OH&T2,#i-8Q4B<B!"LbkJ$?t?F\1`?aL%%/aR0u=/si!`P*u7
%N[od?_P@+3\V6;2c(7Xa&?)`.o#"A/;>[`:RGss?+$,eI'`OG.).=.TV7A,dp`(O`n3=3W9NT=(i1Lk(igcQ'TD`/58t8"k$"_k&
%WgTic,lLDjAk3XdZ;<[Y=<R#.<Lj)*f*fhe^>K9HVCh&48V\"%6W/_sFFgC5k__6&pos7VrEqM+8K,sdjt9A?E_ai^K8Lg28XBED
%!Xt1k;,D?5o,(O+MeZk(%DYQ%71E6/$[Br%$1IG]IVe(W5M0g'Ur"NXJ\P.Z!d-iDJ;Ug.F4(/j/6!I"/ojaTo:OVgkj#7[OdJ^@
%!'D=]EJ!t+-ENQ?9JZ4UDNbGA7^epb'`bHY,K2+LJ4MnUrkt;s-mip4ZaiNQa?lXcKtl+3`6_3+6(jDebPj4b/EXlE)l)'sNj4lu
%9L761V@aMeG+au]Ul1s%&S+ucYR*rcHiMt0aiKUkE2MU_FJclJPCj*h/j;<@]8Vtl45=Xud>6!)`p8]55GeaY:'imQ_@YZ<SE]=9
%Xk=^NC)tK;\:r[\<,oGr(eY0&$B>c;BZsO+qFou6>Ya77I-eq:VT)*p/2b]?3'!KN];=`$2&^g>>mn)./3F^>bPZKPhSXg6\L>kW
%^NdARpF-VhlMnb-b/7Zf2rAVW:;*8WqdWU?TrV5%7NYAPUK3(t.SWC2eO,%1ImANZl$$!VZ;7'Y6"XGhLJ"u&YgNs+h<AOFn\L;<
%EbG4`BWjA?Pf>#\.aJ<T>Ojne;$,OC*1ur*[<I([qa1>LG'Zt-=rNHWXYL=%^)LtmBN"\2S,&7oEL!R]>Fk&`esj5<ci+g^N2IK\
%Kn@"co<5"L..5e(m4S9O$+";G@JjR+:-mZ>A`)Y5ZV.J$09N9il;_9FnlI4C,V@NcVaQ_%ONUpWrMLKKYMX[;FjE<7rCX\&rR)hU
%U44Lgr;2//5:4>#k.68uCjnr2^,!>#n]CfNV6Kd]f@9qgrAg5ba'"gh`r5=$T`4pg(>TsqE:"*O-n(OfF6_X+2h99$L<omc.$*Z.
%r<3&s?_GM2Ga7h!bhPRe"S'(aS?@3ghS1u35DdtB\W0I$nkY%kXB@L$IQf[%kYEqKW%;q9DqgL@*THNp)VsjHah[E1&f"LD59&0l
%XXY@TrHr9Zae*$ec<VabNiUqWK<KhLGCJ1rd.U+"S?MS6\.tem$iS2O;G6!:^RrEI!-@m5i6eZd93#r@rWHcUIiFe@e]O>.M<A-?
%7J6PA>.$6PqCZNXIV3-W=)o3O*ltY58]uYa1`=Y3lZ'%.)u@j72*@]'MJd!RHFWjfoUXK$:#ABR1p.9lJ'ac7=$O,JP<;k9POW$9
%riD9a9j]$16h%V8CJ7?[Rd[=BQjdfQ=n$a)&F+.Ie@'@*2Ca>WeIH9[Xt'CqciQ4M9:_A#RbUpfeNk]D>Ac:]O/J2'4RaXEj1[<?
%RsIc[e`kNiVQVfrQi!UfeH]CSLHaDC&Bd=*k:2p0]O+e2%@rUYdrp56BR.aHT46_J=+7X:N"3i/j'eoG)O*K\._e>$Xf?:rV3:^9
%%,#:bZ`i3N=5&(1S]7o&bke4c\q]6[fCTME"(:UqX#oR1>^Z9@h^r6^d^TL`eL6V<CH&1K8^$VTR]fijkLc-'[`5.aX4&!A7N@al
%<<lTpVphL!YGG+41OR$5WD9Qr]g2>SWoP%OlfV`,i;V-7H"X>00:+^9[DAXpnr1jo(CcS+ZJk_1<Z@&'2*(ns%tctX(>41tVg?>:
%</N6_(E:8@BA9_'?$S&Q,c,MO:AWL0*$P.CNd_%Ikd5Xnh\ZX5TI=jr/bR+8+%UIp(?^dR`2&b^-.ks6j<gFX4Y^#g2NSDtI8@c)
%)!aMjZX4V<p#CLte3TokU&p6I]2SP+f5_BWT!IeAM\t,Vf*ds`&MZb^CY^&/jq8.sZ/]6<-RIhIhf8&8>3ETh!>\E;++DoTYK\1N
%aV!0ZdIb,>pMd-S=p')]YuCNI.%pjPm\j(9)`-n36dhCM?\)WNJ:WPM]ulk;2H+6r94%YMg2MRX&WT)Pa;WY=guW$gQQGi*a^M<9
%Sd^BQ(5sKE:,ce2&7]V<2P=OF]48W8Bka,jbT\hl.m>WmHhQ.S;QjigbmuD&W-+%T$I)L$dOXpddaOQLbFTGt]JEFP/%tnc@<PEb
%N@Bi\Og^Y:_S['oks[Cc@[fcjSSI!,>oN"j6T<#[\8g_X96ppdl&jgS=.H91fkjf:r@&EV>!;Clkm04pc^IG;_-*(HQ(W-@'lZeU
%Pn7iQ`g%+'e@QnLRThbuce.&Sd2UPjA`L1*Ng3i/D@+;.b9[X6\]YL%h0,lYk+Z4da$alWHR8-Hn!8^qd9LsB!BT*"-_hS6-Q+;`
%A1k#a!L5A%O3a)CiK!H2VQUMMkXnR^g\JoN]('4t,2$7?\bfahi6ZTJ_(LY$akfCo>,rl8\E!*4N,@pCm!Z16'ebo.T@/2h.\kOp
%pHRrV19ALl_aa"E%iW>@0U>#25Q'Q*@\_)=;u-AB*B$,i3RLa$2u73RZ-^#2EI!Pl],cpIEN$jF+1-bh8(sX)iW\G=Jn6IHs00U[
%D:E=mAj#%+6g5-/Y^BVp0GqgNbQ"M;B,Kr\]Y*u/;&Ta@o1="`mOa@qGomg)oQsD^N3V.$6O?.3>[d=BZrI>iB7.X'8=sLd0#@EY
%4@nUNX1bIY#eHM:EF6NL1W<>^NFUMa?s)m0bgL-/qs2l2T.1BM*A/S+l1-kN&%gU`KCqMJ0b>.^l)#M#\@reMQkHkD>hCKiWJXtK
%+&*]=&dmACADm@JL2"<PXXB%?=SkFa<YlJ3$u7G,R2Wa[=oD=7!W.(5"1M2,\DTlG$0J!aCXDI!T<Qm[;BCf^+S'4$Z&)/[>T8,?
%SQOYsfCQLs+#Z6[Ibs:]MQG9H[Hd)ro3Ktj)mnX?j.m2oIa.83HH=_,FDBl@\bseJq\3j&`@_;lJT\-lb.mg/6_Ni9SUQYd>_jTE
%REER?jDh.q1=T)L%):)a*rk.=rV*;7;>HYsLrO%ll";']B6#gqq_4nl2"+Y2DTn,(qr;:*2UsZ`'NqfnqhXiLm8^a4g\*-S_F'=g
%fef:)@8Y"-[@"#_Fq!6l_kdn\2`.TG7pZYu6+Kmsf67[=T'fS#Nn-]BGm'l&Uf[AnN*!hIUA$kWTP"I"c-^I>$fBp`:Vt/?2I%H6
%#T5&<+&jV[Q)O=>.l"&P7)=GIh^?p+;BPur"kCS8)p:-4e_78$8W+T,6eIPb_0hBaL(SYD2:Ulb@`,`QOjY&(MDc5=Q&>uQDVWkX
%Oag2(,fi.ug1burC-i5#.$hN&M0IK@Qe67<OLUK/`[jF(0(!^kq5!cEp>UG0:.uuc8sd':"X<'teU2orrB\$Wdj3V%*dsqrBBqd?
%:=+`]`ZM64/8)G)*IdggbosU@_bmO3%n(nPFOY1;+J.f)5N!FRYWg#>"(!pH?@Fm#QOb2WG&tQ&<q1.350A/!2HbscD=uVR&\)YB
%@=@qE!M-<4'aQ_<1S["p[=,PtguhC@4)*rI,iYKHF(-$Qg?Q"<c5I7+@JYV]i'D;(&'3nVMkAeBk1lFZEu/o"\i>(%]38(q3C2gt
%Wb#*^=\'VS(jZB7=J[N'<j^\1n34.#]tG=;h5h]u_0e)))")O9RuO$>0]udRXeo=!fP$[YmUo[11NBt7F/&&>*^?`t,_hKicXi@T
%@n"tUJ0^+0YF3DA[%)q:`RYZ+l[r&DFJN_<2i7=7IqY00*2a_PkJrE2X]A!%[Wa3h=DYB"f@P$8(-:NEgr^tYgDad3+&gm!F?S=E
%+-2QiKlJoS_ZH$,7U*T%]lmHH(&(C-3\2q#D4-l9IW^,>O=[8==7>nK0":YDfP9Rj':Yb!2j.<NRH-\]eN.e>oZFj0k9l\oj#'VT
%&tPN:HE&u#2u0$2Tu]k\;j!-u&mMuKf:jERHB`kn4S@Z3n1A]X4n,AD`p7ZN&.S77&iZZP"M-<p6]k!LU7[4h:$jsTQ!@1=OjrXl
%9-fX+^!*<gPI6s^_a$"aWKc-3W>3P+O.2kZ=kY:o@;G[MZh8EB9m'K[=/3[S_^'M4#eo6t_MS%r;h]*kr9?#!lr@)uOmSA-#4F`l
%[lE7^e^``bEZdm+S$LLR-$)&W!m:&`)S]=Ll=MQ[;1_B*:UWX<oieB5camQo\&U"UoYFSd3kK:pGdC!(i1:*qGe3nhft+3?D^ska
%,IP/4>CdsbYdFI+b<<ILk<1*@:9#=H;2[`DWlL;#(c]WRPdZ0(J)kL'h(\ccM-?Ssd#D"23md(`A1+itIG29X*f9IPp$@TM9t=76
%J:hd9aNdP(?-2Fk[]P:e\$tAIf@)+99a>0A0;$\[DP0tocp?W1MLli%^;*W(NF9=^Q$F]sB542INSUkk9!Xh0NF_;n7rR'YBluGT
%b*V;RfuhQN17q=4Aa5!#>N5$iZN8mX[+jTH+QsiHhIW>@aAkjE8`k)^fB_UAl]l>*leRgq/mVhJJVH6>S6o7mdghAS>PBP65@-Fo
%A\utB5olHG63NAR`e2ohAG<+r-AJnFN)Cj+*%rUrLZ?MSi+@f2U4bZI2ab@9;un6mT>o>Jft6NA6[@A=bt,C#KM$Wros0k+!0=4`
%7oFd,Bm.5'`-"kY4W/j"G+565d0W>'-Iq)F?Lmng-GJ/j%,rqN;#Mf.PdZHn8pL/G946bU#b,(d[9P+>#cF0YU7I8`a)Y+-"Za*[
%PHlWJX2q4GOKNI4"r@QC)pR`*a"*Jm8UdRBcd'G]Icnl&psNJ,\m@929oI]-*MoI!AFZH6!G/TIAl?[Ym7$eJ;-1<A>@%QnaXWIZ
%Vk)&<chK%-53p..)?!<em-MFDnYbWu?sJtC/t:76MFI,<UjHSArma(&Rb;p'XJK7DeS_D9]BUc%c'r9Xj!`nD0Z^Ek:R,0=b3tN1
%p#[`'HOQcRjLAp'c>]Yp]$CB6IT*2`m+'@pXjNhtUW9*t9/O(q:uB#ub$+BtH+?fjH-6AT(WH93n_/h;O`m5J"mfi)TRSA,V:qV/
%/%;o6LKpkYmUE<Z-4AHAQg0m5ng#1.I_21TSs`rJTgN>H!!I(k\H9cD,^qGIKDr"VoTVK&ga<I_LM?'U1\m3dg/#b^aNG=^KB$?3
%^7.54$^7;CrKR_b:'4$G0s#0q`K[n:FlRX\2kTO.Mg?TnQ_,moC='_c7Fk5WHg0PnIbKnopZ-1j<o2Vsf0ee.#IZFj!SpG-&fAB\
%:bS]F-@KHZA*"\[h%nQ.*mt<eM:Rhod2^c5R1&-PDNMg]>>uHSAtU(J_%`1rSMhb)_%+.q,TQH#S/QAsK'8^::<nBRKF)`f,8F]X
%[.r>R8J,BNC2MZ6[4t<#)sQ$^l)W9>_=#=B:6jg@J-N;@V'_HT"9frqNVL%OKE@:cl"4^CqN(lnZaF1is+SR^R0gJE;$lJED4Ces
%V".DoS&R>a9!(*Zmk$dKZ$8)eT21A1RQ``+MI*u'"`L%WG`P#EjUEbgm#5`&0+7#559N>>dq`.rQR'YLaS'`*=?+'OXtq9fcu@_`
%g<<*E/=YKSG.m+8SZW-3ch'h`Vp^>/4e4@SeF$"uQc^O-OpaZ)m\"geW"HkGoRj7LW8/OCpW#rp<$t"1b;Q7MdY9S<7n.ue)9&sB
%Z=Kq0_X`9rE]?je`"_,p#^uVlkOf/5P/XJs?7rKd.mb4P=5<Me9_Q8J2NDi3-b#R*s&oiU)@k#r4b2`OpbS=]i];&38@P1^'A6"T
%/LYG)bK%uMBCCU;DI4Z0:#QROCYjl&:sChkiEbCUSfNJ+VFJlFO%Fo@eS<0!2^]DcRA6OdP^>s#k?@GNQcUT^:W"qK\",ogp3%+C
%cslTGl9&uR?ZQ+u?T4:fpCO90%C28li^Sg-.oBA].At=J9PlAn5BXNXJNB<g;qb@1fn5E27<`Xq!od8iJB^il?PdV7>QZo'</^H/
%:+dTNL_r0Li61G1s%`(SKuerfW.-UJq*O.O]7UTg7WEAkYkCK+:[Mj!@ru1tI;9lV=5&tpFE<fn%sLXGBiG%QJHs0KG/UfgO?#q<
%<TkT2:7Wd#f2Cc^O(33q;/>Y)UiM5?`;Mda.$cl<jeXEf0^q?e=]:FKmIRC(EA<lr49Dqr0blf3`T4_"6]cDFYr,#]p/2p^\>RsZ
%\s\9Xo;L72RD&;d%HQl'$e$14pp<6A)_@7K1D8;7^$QlU'>nXg>0:G1=m.+T:qcBG="\[f9&e9;>2a:;XTnE4CS)jWPe2)]h0e^1
%!liR42@DXe@)+MH!iblb"9Ojp]&j:@-H6KjWOB,"TDmd<]X1i/FsNTX6VeuP;Rrpr6d07ukFNaH!kE,cK&Wc2QsE)KfD>'X]tl5>
%LT0mO"B^`>m\tp*jE;hpITj7uOPKioqGjrEg^d#i4Xm!pa+IK,Dj7F7B=bOjF/J[r]5-WMiQPP93,Do9RjZh"e3dKpNPAj$R$R#L
%qS:X+IZW8ZBp4c,Y@!=fSp@hq8t,:FW:NARH],:p,$N0m-\b9Lqmj-(\d#2#)?QT)C(JP=75"<Sp,?umC1=7Ae4X&=7tR5T8>-4<
%d!R-_GNnD'<6'GEF#[EOYrHTlDuA9/;:L_=:MX;N@tc4]A.g>(o9gl)dlca4@dLr7`>G>gIQcL*[2>_^UA#JP@J299e)V=N!NpUl
%rF!id0il,i3U0G':"f#G7$%f6SrJq([rPKmjn@)92,in2lS]-*Q6;^TPqqV&J1saG^4.LW&dBQ7G.k"rem<qcMcBRd)lZU!6A@r;
%4n;%7)q!j5V=Bq$ITj8eoGdeJ>O!ZuR'<I*I@u5Gnd5rG4?sk8aHedQ>$fO0o_1M&pm)4NDP.*NY>5?+Y<<[jq3IJOAY8PTBCK$_
%W-dggCaC8g,di_Z%]]$P&H772^D]XZm9TuQ#MmsZ9#%ro--t2g)TdnH"9X^uQ+]\ZC<P/$gOTq@ApYbDE.>NT*lnL"!F<B==G4Cc
%$n`?:c[k"kV@FkEFc>GTb[Dn>,*urB"j"AjXL*O7bb]Q4\^4U.Ws32/@[)kRZ+A]HiHu*+;br7Njmh!fqA?*?iFh32g]]I??Aq<9
%^TI@/KDW>6Wt!,1;I9+Y[9ha,Xe)/8YIC+IAT%7o((JPf:6.Y!n]1Y-_agQ+f(`r*St@GEY<@ToP]tkED8]Z3p&:KjC/UC^"[2Ui
%f,_&s@_#Q1g!&ta?j*q"Uab)g?$<Q@5##DOc7k'^p+c3sK1l/d!Ag9kF1I92;c4#PI#YTXdJCt:H&.$E*\k*oHe[H#FH6$nK5=9C
%;o#$)(LHt&f$^i6r2o(E]q'fT,"A<;6/KfZ.g,C=^*+lqS(XQ)4>h)ijVD`<Tu8X":/F;*P5MS2R]2c0)qhjW3&j9'o6%QH"CL*O
%2VE$2f8sZPQ>sPcqYDm7+4/_)E3[R22H(E3M:kX9Mb.emO?`Q2WLo6u8.2P.iO^2QV3?t">WU9BfO*L$&!H'E41VjlEpY`(<BM\k
%[PD>/3hVfA98UpZ=sIGaL<l+,>gNquHttQG^e8=bYDuWXJ)457p,XSWa:@+^7sjiN(Vb*)9*MGc*FXj**-gO%R(0.4-a(I5f\n(h
%];S14S#<H,Qfej.MJO`n93Y%JNnh>p.E"r'_&dp"@(!>gX?F8LjK<37MX9LRRJj&2.'m7*A[fP"/!n&6[r86`IRg#CRe%gZBC.d$
%T]0ttPb,;b5$W(P;_JV(*gGqqQREo6*aeVAErMiP0^ppEeGI/9!kpP.N]+ba3-:?Wf6>cE(tnEgH41eB\&.g\/`44L,XlW11OD26
%2=N\$-8N&qX1OMCDEJ^rW*Ws6qLI;Z-<&ZF_E_QCRDt'.16K-`$6/gqILXTNhJ4l"Vc8JlGM@tVSO(%CPdYc=T;ih_6;"$G41940
%AWqH4kT!TW]V$2n7ArE3Pi>"S[?Nc@ALi';\rOeI$g>!ejFrd;bergNZCe4RhWY6CIq64D7L5M6WNg^];8K[VKDmN\XG?\T\TpsN
%S@lNl#&u9hP*3,?3sX>_Og:8,Tq4jB&)QZil[<mIR,FjTgI-g_+)R>hZ@-tAkTUS*TuU,f-^H40YSKVEY"\>m$*'#Dc"MN@k`"&_
%X#ScC9;t[!n1k[?]/\&Hb0/JD['f2mn#[q)p`\<>eSn5-J;ZQgntLUrcE-3dWjW#[SiCD1lj\(NbZ:%^,=FTl@4l>#m*Bu#Du1?k
%'Mc^7h-^egqc>[uOVW0F-_S5\0q*(Jjo\*uI[uJZ=!KuJVs$Y4G"t:DO-ZL*>\m9hd#HNOF^hD8$bIGOg"$N!$R!U_>P^0l^6!o&
%m#:AVWM2f2M5/c7SVM,<JiVY#"ZEh@?e6oqHgY](:me>Ji&?X3db#LuE?RK6$QV^?ddgsn'X)?X].iN.Ye04l[k>4XUnMu_26Z;8
%,`VAfiNa#jIdbQTqqqVNV0IDd)pTqmr`WpO<PqsL-I0FYa.$l\^_nfdEesuSHXTgRIa5rl,%I>M7L:HX6e;Z).9e1A_Kl:GVQn_D
%F@/0ZX\>%PP=@C;KWZMg@5>&_]in$D=0(]Qo'sl\]BT99o=heh+kT\%lWek\*$&lJ3U=tse^.+8Q%I[Wr:(C^;LT[LPkDKm./gb9
%R,RlaH-t$C4Y"!aP8K!lQ81sc.WBk[2-?Y[m7dRnGJ*]5l!`;K&4g_P)EM*V>+[pafZr5T(;clT\(k#e@PO^SWuO!.X!^Q<NNAN-
%//[&8n>-P17K?+'e%ANEDkX3q=FQ-&1SUAhC8JG>Ph+,XSZ#fK]=GQ<_;'uJe,5gdEr&b,jB`lT:#*Ri9#4H5[pIQt1>ENqd4LMj
%7d:r?CRG(D:pO/?N#Y"DC%=j[P#ZVkg[MRs"b,jf"DE%l!\3Vc1B#b_[-M8mOr(%W1Y[c<@i0Ufg6:Ye9#"V`bo0-JUpP8*E$\D=
%?E)JW@V2aM;;#-f4\@#[o`K"`fYZ$te2i',HdoMPaE%6bi+&T5ao'OMY.HT0OV3NVVt24='t*p`l+6nP+mqhnFX<A3qlT56:%K!>
%:\8frq%n4B^ONYUc#N11h8XNpEP.pGYcs][$&;`tGAnUsJ:0>8I1F!,8T#9QHMK04]ep]Wm95L\=J5>ohFJD<UG_ag<8-/_#W`+9
%f9YdjctR&#f5K[1c1Z>CZ#q")Z('2RL&YP5]'m&#Su8'7C,C"Y8RKfR!KqL&&BKQc;?kFkg"gu37066hSN/a*Ke]U!/Jkbi<)%\M
%^-cOB^Ijo34.1,%;Yl(kBiV0Zo.ulhd`^s&ZFB-abIrQM'blO\bb;d(9bF`OIt!7sjS(=[k07HT7T7K5^*>>%V)Jl19G"!!(PWtP
%gj+@W)0l)-XsMnONatp0-:hKS*Fu-/b#W]ZTrH5n@+i3:hCk@XCQ,%i[scKba.AI5An?p'rkG#gDF![i]+!N#ntk0!TmOG3Qd.J^
%LHa</<F7q2Z"V`5mS>sgjIV:I<qc_m-[h]T=fG7[puJfV?.Q`biQGe2mNWSk@<#.[\.N&S-.OW:[e:djLEE+JnDJ<F3cbl_2J](V
%Y;E?V`m'su3^D^Ee])jqn&Y6-Ze"`-9#'@BP^5N`V_HZ-B+#4qpdue/EOqdk^0;iE],X\cn96/CGoH[q5Of1D:po3PeZ(44M]'nR
%NAg:&_H'I^o=7t6h$4r^%J4%!^2Y56WmlDJ3gj:EF\8Cbms(m(Be\bX.cNLXdA52YKF`AH3Ysen9_</o#8E[.f)>FZU"7:Dl*^%M
%[FdRRM*c`'L6a@-f&2bZmIm@:8u(p!XaJ[!rUtp_(Y=#@52<AYQZ\=TIfTqgQQu1nM-bOV`?A(-3MGsQ"r^@U3iDpfjuf6,gj,f'
%_OrS8or=kI-R_egE@DLV`6fNrM%__E3R7K:')).<`Fg**`(p0BI\f'kGAA(`HuWf^guShM%o<,Ur>4q'-0s?J9*V[g>gfI"\;7"^
%qtQQE-e,@2gF2NL@`fln&ffh<Y[k<El\B+c*F>Nd>WJH$kc3P:_tI&PIV%`bb-55*NK6`If7pX+T6rb6l0/e>UK4SpV310T9>>s1
%d#U%>&BWJ#FW8N=6mB+;rlVV-X.FF?p7McAgT%`Qit(Tdr5JP<(8'Vi9WU7j?p?n-f*)&f;(bA$3d9M<!sOVO2Y5Mtg-')@:AAr/
%Xs%I#OpsGD"!2gX?AD[mk.:8i1<C>S-Q'./93`Lqd?gJo5J,LEk@3g>f%ZY.T71eps'8e'U>`=9%M+JWAk2NfB.+65,K5Si/,nD)
%n_rS/+3=VBdUI4kL]dCUUXHYQCehS'?E)KNMQ:M!9@7ldgD;D*piAi[UAN@H7K70t:qYpSORo0V/PO;H[JetW!dWu["Rp(I(Y':,
%WShrjTmcAeDBDL;N26K8Q<<38\.N"oP4Jo2<W"mZrAte:'>o2[mmO:GM1:;lTA9>;"lm#cK!^RQJ`ZeLoIActc"[:cBVCBh,&&F_
%>];MuT:U!`C]1Tj3NEVT2<Q6T$A#_aI+ks/khLSWmDB$>I_S*/1!^>.ci2[i*At0ch`'T+d`QMj<N)MmNn*p(h`nc>r'>3",-dP3
%N6PDkjP^UoIlhB,JpYOj5Q:Gqmgm0Dr;O+S-,2Zd\:f-BrA^;HA,8FR`igYBk6Ebi=<?JR@Zir63q-S>*<%K,H`9DM:LFlQ@KAW3
%p%T;W&$)c'2>^9335i"?qO1<Apb%$?Mo*HFasMS>d+>(5Xq'AWBF,X88fD?GFnc[-`ihg)4Kc\elgSHp9.aH9XgCl(pp>L-e[+Mk
%W47Cc#us,%]82L*6WBpiF6VEJ%DQ6/f4akhk:M?/9(9mN;bFAYUp"5a-K)o9m^,53?%:Z/KAEdu1KuJ(9=_1K,T0OAGLt?o7eA67
%HlK3KZDf\bkT+unQBsQ!n]8^Bk%LJQ&_2]/R&Ho#La3*%VNNr9:R')orMK4--"$T?7rY[p9JCYBC9V1>p.ia+UT'5bG:-kG#untF
%UPZu>]W>=9\CSA-5hE3_6_I1^$#(E*-6Q=op`U&gp#l_?m?V%&BbRBmrsZX^>YGal`&+Ib_QKRrSAsX'eEu'\ntN]79P$-a)IX>;
%2;XoKR@X%p2V>cIgIj]6QW/=<\t4/YD5CJW2/P74r.Zf885Kc(hicfEA!5Th*TS)"Wo0SgrQRn,jB0E5#9Lu.k>%GV4K88Ka%#sq
%a<0(Q&%P-*hVk?&jKIPI7c&RGM.&#qBCG,r'J0o8*7Z8Pn(u6S1\dKY%n?HlCfsr6,`cgFFdUM,81JAGhc$]S(YX/h;,\K`V<gdA
%R?&aE9BV)WpMiE#R/!/5<*$!e-08PL%ipt<1j8LWc(n*0G%N,QRaF?URK)a]_K+-JfVioj9@`uB^HZeA!V6fMIfJip(bo=%-7lh'
%\E"0mhRr[92U+*gFtpU*`00!(,CU$]6@D5tK3^u/Oi/['0^ttg1:]X5?OAu7q?-&O;ua-9.Jm1+89&T1YG2f5DG#9Tcu/%'+3kYu
%rjAMGbTAiP9)7)BT!&"=L[;'+<fVq5)i`FW?g=5RqrJEnq:39*frn.'R9pJB*W"H8i5s=,kFpd(S>^lmVsX@?0E"]GGbp#@jPLGR
%F8sP2@G\bG[GC="H?-rrg0Dhre+\E+Il98kp?0`X')qip_1Vb157%%FU6DDQ\?thn5M_<PrF\E>i'/kB>Q2LUM<;R;DD(lhPLh,\
%9n,=l^O+hWPtV.pbpE*KSTc.Q01C<F?bX*"po??+AUhD)F6mi=94NH5..-oDS%!>8IQk4'J#chhq8_gDrf[;S1g(.o;C>,R<$8[b
%C>N2J7FJfr;KT;:Z6Z!*i_-;!dY2S)o[h@*-0'))ZkVEa4Y6!%QF<(l_qVYsFRu62P^>I>Q4=rH3_RL(qt[(9ogE#qka_C50#q&4
%V-=6EH:W4FQC\K`kG<28\us'aPblqW1sc[?*g[(D`W:6=?G0m#V8@13&CblmJT.Z;*JbK`IR$qPNIW'L,6=QD)?mQUiq5Rriq4pc
%3BbRkp'XbNE.$Ku%\,\PCOtL2Fu4.W#d4FRc,!;NFB0:aC5kP=n>[Je@R?`3O_t@m_.7&$.DK(o?<p>cQ6T1Pc"/>QoX_.$0>#Ei
%_t2XRcI'GBSBf3VbPQ$0\pP.$esA&@8))5=Z-BuDLQ/@@jjIc!I^soJe6Hn+N$c`#nQp%N+.lr,IjK>\HFslYX?N`,Vkr5W)^cj\
%>Go<.Q'>6$XR%gjRk#jVgYnD!O!RhEQc:s7:S%469(fU2<aMD*c;k/B8iPt;QF,Rb]6YNW"hTD[`g>]$bqo/ZQtRd5cqSJ?>oa)E
%DVDd30t=q<]K>"$#>7rf$T;brIB]'KNWgfXnF^O8F<+YHei%DH[B%@#CA^3nYaRW<CT@^96?Vtf@:sfW\eQ-b5#%InX*&S)=m[7P
%4Kje"#s8V/>2@m*LLPDt-H&Td);9Ns`h@3$IM4aC*>p@#$Gk*,6`C]u*Y+2tSWq&Zj4)ISGVrL%KK%>AZS4U-h?iX7NFLk[\'-7J
%(2I!h2i$Y`n4VYg'Q3:PZ((5ea3`F=12i;_=R\MY`Z?pSCV0IIHYm+qY-"6"qk^^TIdLjOgaPCf[9J^dCZGEcI3]eM4@U$[ru?ma
%09mcM(TAH9?-dU:f-`Mp882eF&pZVp@Zg3/"c%!H6dL>5\ro-7?/LP5n(4n@>\cK0)$ST0+4&I0b);]on!;_[dA:0S*K@5g7&#&b
%RZ&Rhhl`_ESU*MHV*Cp+Q\XmjBKLCbN(t:8;Cn!B5DcXQ\J%Um#M;c;kULZp]/nePNg5VWpLBc3?>!d4:u0i]?<i^RN+tW885JrO
%2Y*>IFlVo\n7`!W;;ZU[HR_[^:i]3,0*?'*="i[2_spkp\nYcYV=M0s90MK@?9&;MD@BZ3%<'>BKlBsS-qPfWAY1Jn=\e_QhYu2n
%ZLZR=.a%I"7+pg;43CFskuP>tMsVtD>(J2Ba+75JS14)0VM/C,[/P*FT(1=(qIhK/eCW`8Te0R5-0RhQ(oJV4p(e0RLUWBlm:L3\
%XOV3T8(pL>*pJg\g/p;;q3&IY:9WlJ)u6^EM)HXXD1.DM[C+L:1ZXmNQ:l'/=Ri-TbfZJQLV9+b6,*&c0lD`H\7Lil4WWAJWu\%]
%X2FoT+'$_@SE-l5Xo83LEKj44`naDfe7]jK?Hk`!TpSI>kfc^(Y6O-7[^ft`e<WDkNNMlu[FXa@k%8MQ&*dqSDtCEg*,N'@gN`'5
%^3nGpa0kPG/tU1dNoJ%%j)M_XICL1;Q_`q!.2:.<''\$!elf>"YZ3G"_HUsO]9hpKmVR8sB<<*/4tSWBgWrsE8)&Y`?/8Z@3u[O'
%B?H8sVakM-43r*ua9"GUef_IANMbIB4/^!:h>H4+Cq#X5cg2,H,r;fghqL[I\[n4XKNA#-C:?>sqO\h`8[WZt8nP-5NT>6B\t4:T
%/N$J->OC%,Gs:JiNX!ocop"/<U^"^DY$@i6Ve^$.W>tB&$fgbc\mF7*at2FDWYqBm*G#`PYup/Y\s^bN?;:j\NSmP^RkiR3fujVM
%1>?!uhW@kB?Uq[%7aoSPf%QJ$Edg.)o5BAmp[kES[!*'F`GYAj="5SEDisO.?S[\jqjFd!HiKt2h:_8"FW(MN`M8uVA2sL5E-Ye^
%+2"%h_o(t33Bc/s"X8_U@e9,oGu`TZ$K^_H8)&5`=%<gfR@lZHj5Z4U]KP,#<q+&iEFC`8G20aAIm"+]ri;6R<[rMq]PK#EYGo&3
%1r:3Vdj3,nT3gi7e'ma96REm:ai3k>-V;G;02:$hDqXjLRF3Vic45">->1ZbVt%=tYs(0,ErDj+]GXn(DU.P[(;:&kS4OO/l79WZ
%1,a;/\u1mMKoK:*ZEUfX;(aum_h4\5koiq]MS!*3Zcu=\fGN5`QYVke^h)g1B_1etO>sup(?=d4rFoKM3be#P>h+J[fB[CUJ1#$5
%PE#G#opr@nF?Q_oA8g-"j6KE'&rPR'g*`0?aNH?Rbrf<uD]eE_j3D"HeaGDca1HQ7p!*JA2]FrpQg:ESq]iN=FC0GGmlZ94/,k=r
%9'bp(TfgtQoKU?7*VM4:\ljKp4>.[=p59sjUm5'?.IY$P5IL:?j`BeZ1AcG1P501\VAXXcCBp&iFAHeh4Pc&KV<*@#6YSK!F^;RO
%S/"Y[K<t/ir8R(EHr[j@.hC7S(DYtPHj/>*$7#A\dQ]c@<S;]Y[<c/AL=P_BICQ-p8p]l@q^tn7UuN86FoSRAcX5R'lKrmaD5`><
%d)[#Tc].Xsmr,5h]m0-bUO1PX["lPbp(37nc7_-F>J8KqFA-&p=lnSLn.=iu%N5T,D)9hD[]_GXhB'??8tE*N\^@sYaL1Ha9m<M)
%fID!T:J1&Z[i.#'HeDEpTi]p/[eoAQ2XV[TX4R;^H"Uoc8GU'ZXRQ-CkXYQ+d*8'MZD50?+-`(GIPk.F-=W$;_rink2[Zb<:%-6n
%>\*/(rcML.UduTIb>(XAR,tmcm@<fgl1'$uCLE^\BB9>oEV',qKhBI8<U5!kP^8U,IsBO_IFM\;=Sg9`4-VnH6L!+UaeU_1%6CoX
%bT07E"cM9Je^f%IG32NL'mu8]YKcm^ooq!ZJGesKfdD,QroU'g+*1J)I!f!ck]-EbItXc-:Cd8^H^&"?KGM7VFa9)=D>HZbB.,?D
%<I0DZQd3;-M!-Y//tU!G2o#=^NsU9VMta>bR@^g!\k[2B)R:R96c,j4Rc8s[YHcPLg)?=A2/%B%?)@:G-0HHBS)<bj+aeS>fP`rV
%nt#RD+!k:e(\mO[Q[]iGNTj-!I8NpS0o;BsYDZ4B6<=nPb&U2+9[.3`4=81s6.@T6N&.@+$rr<BR:uXVoU'*fRP,+m'f2^Z3WgdC
%0u_KJT:rKVVW\57(l*]F=&J2/A,tiuQ8a1+XK08r6R=.A0`Y-<=dClFP#TO+O:2D&C\[[k`)P-d$KrE3KhmH?I0``\L950%9T^'i
%WH1Bo",ubEF6lod0pNEl0Ns26k,&1`%IT-pD?0*Zmc0hX9G9B0b+YtKW&iMk0LeE`#llC3/cu0F_p8\6)h@E4FW_(T$9h;rQuLTo
%kKA][SBFHCXK1XYKXm."1F?lM'pN2H:kAegA:--paq[1jj>(kY6Nmq_)!-nr;]#oUqe%C#(1ei"X3/eXJqJ^_Lbb!m^_!bTBEojd
%`l=Zg6WIN1M@hWR#+[H8%?8J[1/+IE)pe[3i^j@)<L&q[@QA6mQD%MJS]eg+;'tQ&-oD*g#&O?gU/4'dWffVM78B%TZoV\^%0cTi
%OeZK\PR_cX<@!*j5U.bEi`]$qnkb[hF;Xe'HrPksMubpU1i:TQAK39uM?3)Q:8:8=R%[AWJ9%)MKW9bM$8S96!,3br+Is`-,DaGG
%9b>eC%=$8,#be5s4rg@,/1QCt<1#fgNhgA[.2`s4Ob/%)%3H<4;TT-ITqqO,p_eaB:]^:,LY$YT(_Y`t"tFE`B"NZnC*nf@a,rV;
%d%KOM9]S2I;#r[7Fl4PTVV-L16BE)f&^dS\Tn76>/jNlFT*FZ'/4os1,bQ?+^bM^"L`;F["a`fu6(3<T87Y)?B`gtBL_N&?%Wc7#
%!#aIf+^Y;Cj.'g;'q?UA;t8O^'E_/NcjDI]"q7<l>X8pA!Uq>T&TBEuY)`JG`)@SS!gR1ARL17YTV0L4aeCggL('9C!V2,,UX_Z"
%E(qWb#3gn?6B.or6U;D^(!0pX_U+ub?m#Xr?n)?1M@PjPWMeEL%H%YY&JS>A11["lJ3XrB)!ok9J8J6fHGa&h&.D]>E3uWrE_XMp
%)0*]c5QF7$"f2V@\6h,S)!D&7"!,B57LMm"P)B[6.JNlan@ZmiBEX$\J[45Ii!r_DkltN072aKqTFU[2K"b_;M#c'+MG,-a^lJif
%&/h?@Oq=Djc_./t5XqssK$'5Wie.XTVANN'Ooi7aP%#jZ;aS?j(=!o>.ruOFejZMde/.V[WbYR1O\DgK@d9\jJceArWXE]t=TM)m
%K]3(q+=7_C^*,>1_%d,=1<q:K"Y4**MVoq6Jec;!l1j\[$-WXm@%aM3U]MJR)M'/t;(75l?FNE4`W5m)c!mCMJX2(bUIs-HiaLsT
%,ahVh!I*Kb&s\SP8I#@23=Z?B%iBtp&HYSh"quXpNC5Z6"Hq4:BrJ]Ri,l2O-<Y2S%;m;;-;>54&DC)K*K2MmKINc'8H;*[TEb;r
%g^94ATHq?9K"V.G%s.lZ$oS._1r0@u)MG;KRSX3Wa:b_-!d`Y"KB4n"1m,)>j4(p_JVcXk-mlerc8<oDUo-K:_h:m0RL`4\3[:b:
%_^)Tji$?)X:lCd$VNWhO.O,&G%>YP90'Xtt*?o-*f:\ED-tiTnk__b^S:*sDefL\g6gC-fciGKL!7;rgLB@a$bJ"/J#un"$P6?OB
%:*cH&6ZFJPbKpocFSL[m12no_!HtflRLF1(-OH:nQr=m#)&/KnB!R=e&3KrHKEi>0oH2?\(^VUCOoluj-oksC)2S[E-0TH>6N]nS
%()ZZLn32\rXJ8Mo'aui#1aeQbObs@<"6s't'q(k\&HP5aW/L^&+;J#j[.Z1#@OB>bO^K+$V-;*GU)SnX"LOKA[(qL'A^B:)<94*W
%38"u[+rHEdYT!@YTVIU,($ZOX2X5L@SOo-784"hq@(D[LWcH$VW(Pu'JXo3h#:g%j?Um6`NeO9u!X'F&#_c)OY#H4%24/D6#Tf9]
%5eoD`@8*RcP41b/3'fhYA/T=rJB1Ou-<Lo]=YZU%"#LW8[t=Mr;^bH2_$m3'4T^9Sn2,_j)/5g4)k\KN!5\../JUj%O&QpsJS>B?
%/Yh'XC0X)b#s'#R4.Qs)R]tnP]bO6R@g09A+U([]6e=A=!!D'l49jqJ-&,kI1P>r8h'DVF\kL1MUtZ=)H!lc^DarUfAeug''H:1[
%;Q+8"1uU3(n?]80H\76VE>Yh_@fn/J<=&^:=qEiJ3?^qWHthO2RBe7Lf248r;3VRK3YU%.N>ao?6jSTcTPA!c]b6cK%=$P_M8MV.
%k^j?g9#10h*p=V<3=l7&)UKT:#F>j,!((UXkR+7[W;alOd-s&#<QGS>4/[ZsME!'r_urfCBqblQZson?;s6T6d6g/*1^mo7!9kul
%#;-!i333KF\7s3Y`,q\UJ_2aC'G>(uVP%-*8RQTnYpOe-)Q5B`]HJ85>o2q3"s+8Y0oc\h$^:W+,kMMXE#rlJ4HY>@>FT"oRR-lZ
%RM_k&Zn@F?iuj]nnf1WYS>;)]niD)bL8G:M%e9[QkX1+9k*2mHUh`M.TFVKqcOgQe,,#(iOff%VKGY$.,&gV+N%T6f&^2]>87dlV
%RHR><g1G"HFjMP0gX)\23.U7D:-_9&pBX(fCfl^NJWki&W!PY>,i_"-/;PY/6n<h)K1lU.42u+aJclG]&8[.LJDd1.k#F7&,6QJT
%MH6-u6;n$nR+.pL)4EaZ8$%VJ+:hT,@'Icbeq'+h$:kdjQmO:YoJs0\'IaZC;aOp2Jq,T6WeuCc(kSiWWb<HJEC84Y.VfaA!qQDi
%@6n$a:[eT;LCsRu7FnFLp^**96j9TBVguL8M3]4d#l@FtKaA=$]I;(`I]G)_jUH`;E^L.$Se%2SBF[TrX_WQF`dkcq"Eb&\Lks1o
%5cF3$H9_[2&7gsa.Z>Ie7hLRJL*7`Yd!A5;719Y-$:"b/K('#%-n$1e0DpbM.7)@J_0K!*VMKM^A6C5j#c'(<MJS.M!3/q)Lc*$-
%#>o(gqS<pQj$A[3SZ:F<_$.]CG;*R%-tmQ%I5N\ei&R99Ye\:-gh8PnfjIo/[3E6dn0"\Qkq\qL^^\hIlN^o7WY#A0'd/;]\ZH)s
%k'+U\`'L-77-t(+`_'4o64JP:5mYIWkTu?S!:_4:!aYs=9rETCN]oRW'OkSfAUnh&P(7GY/HK2YnPbN#\k*C/8n*Nh(BkgQ[(Re4
%;8?:*S=<8m7j4LU&M1qD)T?*]J>b4A-AX,o^r?"Yb^Yu]@t:SDDh1/T,maa)"IKFr'a@kj2@qfu>K+^75pKdA79/PO`Z,[?Dbr0:
%!^naOLk?2/O8r.BM'2:[Kb+4u$ntjGNrCOBFX?Ur1$t^/e]32/jA8+_:!ADq:7S>Q'GFkXaM`,_)GqWod'#nEk.<$)KXM;[6OHpD
%\>2q(-Ha,L`$>@5%>mLu$<Y*[;CPS"kR+(J?2-92Ec/i9TJAB^73s^L#-s!bj2XKZGu6acG+^:m9*BQ>'3kntKa7^qXscVPJ]FgI
%pfU,_1hk+B'm<utKeY99*P`3n`U,^4m@_Z4BNPlgL*EuN`j?SrVM0d+nKruAJ2<!&W^]7F`0O)OJJ"9(eqVUI'V@W-,,Q1A)!'G%
%`<#Q2&rt'F"YBn00NE`#&VqMX]EJk$qPLK)#c9jhJ.3VK_70q0Te?F%"Zcpq\-'tj_sAh@78/Q:BYr*r.hqPN0FYNi#><.J5R3i8
%Tf4\(T^&7i'k;=3B'?S$P-CmP+Yth,"'u2Ag13BIFF?jR$P3a#;746=1'g@K0`f2I1VsRm,qPE-iWMqB8E`no(_n6R'%fRFe.@1)
%<.^?_P*d'rZ3hgnM."dD_4HMdL<7una[(!*0E[k]QjI^i^h%&Bj1nJ;;ljZ,Z_?(?#eKUgAihl@n3l^V1cdYG9QUc%dc=FA&&T)T
%'He6(!(OeTm%>)l2@,+qGVTH)OJ5kiUkW%TWrj(bAV=GJd(nKHrBeL0:N/?T6qn%O-7`OnIu=/?6lRs76[#/F2aSgE'#7$sFNm[&
%EDs:[YY%*3Ji8gU!8mo-RcVsG'L*fV4^j>F?3TR\s#,`8Xf695iDgUm#[0a9cIF)mE(h1D4R5<MnsE+<@(`U6L2R+8@R)sm3m=N.
%QDFkk/&8rm]#C:<?)E//e4!4ID^Jkl+bG(]K.o"ceP+pkd`A*BYm!Ud0#1..QP!2hBmYt'k/.IXJZ8m;"c\=V%$?R#nX6=4&-aq$
%JM[dL0GU92VCcbmQ.ZC*O%q_n.\e)c.O6$BltDhB`5^m=N;k`"`WL7"=>LIO,=o>[*8ECldp[bCBJ+uq(H)P8!tc=T$khF8GL(4;
%!kZGd'P1Z;o0T6^OK/b$Pm`\*%Om!/?)FW4g54Q]pLoe7"bFSD!S%c/+OKp=.25'\"VXOBn3GY.LN"c+!%O1RiD2hU"t%qE;?>%&
%hC6Kj6`gdB1o#TP`!j"%En1f,_q7NQl^EXs0E]N6R;tqS*\NZ2#r7DMA7\+CXGe$@E6Q]k[ppmm2_ZZ[U7n97;.'W*Q!/f3OMmlF
%L?QgT+BhEK>Y^6P=ggard-W(`':jPnQV>T;!$VD3YXJs):u3prX5]9Y9nuCl%@*,0',/KT26`<*1o.*OD@%%$C.-;.R6h2[,E]L0
%Shc[JfSWTD8RS*![_^DS.OHu3-1k2CZ0_XL"3gWD@2"dog*NmtTQjsa%D-&iTbsYpL<-@r'U:7,_oO.#Hje!=#Y7(0ABK`R@DU/c
%?4F!29M902KOTJsKQ7n?UE-1Q1,&^\0Q<"G.RZj'>uUttO7K>4k!:\XN$)Qa&-SNbA*!2Y)?h!O\;2!#.N1(;NoSMP3\cdu;4bTc
%7l=o\"JuIr=HjrUd.3oO`Xk\ZcO.ACLK-&\.99SNO^(>::8&n"Dc%1Y>(fM<,%XI4!#Isf>$46!__=q8LkMoIJN0MKXi2=U&+Lle
%KAA9s'LE\E+%W.Z(5C1!!>$S4`DRI=Hc*@!(JPl]GBC4i+ubQN7r+,#T":1]@>#4"@1O%5^mF1[&0h6K1Z0B0PD13:*%;jZn?FZW
%^ndhoX#<L5:jbGRdIIAU919Pei2hGF@$P2Q:m@[fb;KV/$1QnG%=#mi!!2P@kSWN%M/H2EKbhUO%bDU%&A0EE5e(DB_aR?(8VUXZ
%&;6lHGr%3MG!SM'1BX/!;&l!4W5=D<d28NJQA)(:*X;CZMHI.c<sG36$oCp5L16'M%JGU??O@t\DOIR3Xc<6SX,8%W1+5U6AcX@A
%M)$*(%imeTk^d7_5p.GY^%/$me-SB[S_Su.90+Y21KlO<9[K)7h?sAB(CPAh@BRn[P-Bn?g&P2A'5McYXYjZF>UHR+iUWsWXTP>I
%0N;LuL=f?=*QB=i=d`+WJs>KJ@<.:j+rdOlZu=*mBM_"tLrr$3BI9sVM=qST!%BBkT5e+8[8K#j+97.XaMYN^BTf#2KBi`=L</f0
%kV4/,d9ptM'V%<9W1g0lcV)9#!F7ra>Tj,\%gG\5K/mUJA;sGod'XOsBIG5rF.t$o<mW=))\SL>nXI$XNkJmg+(I=R+KCf%U]d^>
%X=T`ibL!c//$pmV1:SK.JPj0\l4%em0N]r9R'*B^%l+HM@O,Cr^l@S&4+U3\)`G^'PX#d/4+sOLoclk5Fs393r=#XD%5bmh4bu@6
%;VAWPoP:C.;8o76(2M(6ft^%00eON)j=!8><4E@=2Q+,9/u^%k5`"sD632Z\74bQkWWr-r#cNVtUXiH\HP)X/#E1Z&Ks[5)b15#/
%iA+E@'HX+o^k^sk)3epR[:-3<T-O;6P$2+>P&V:h9Tt#7+1)j5`6pdQ[Z"8<0jCN,BdAe]Ifftp_'G*n,T/jT&]B\1)4/HBKBafF
%TqNH\0MJS0/%!=t;sgGr#X`3-WAiV1TTM:PXT/u[j]l8(+XDs9"q`!+ABsfSpR(NL&:,R.1<Y/%3Mitm.`*-g-4<!\M!<t5i^,<$
%0d;EPRab:c)e:O(iEEN\:(g$_+GX&q&l+UI;*=%[bi9P=QGI#14[lL\!sFlE5:.dA#a:rd%=M9AI1l\m9u`/NP%C(VYa\<$;5\ue
%D,FBS75Cg!mQ%+<8MD$!D?2PqL^7?S=iH8ccVV\g_p'dCd=r8j$o8GA\ZT>J%.^>R>,=W:5e+Q7jbaM35XQY^V_'D);F%c*841<%
%,b*AV)MC_Mcla_A2.VN>1>/ZX8JXiQ/W_M=0F3m[%1Rl%2o(j%'K^l]D8J_)":=5u6*rQQ]9U_PTIbkO`!/+UE4sN#>150pNt>G@
%`tTFH\aY&%6Ubee=H6l$S"m<eF$hd]T`fCXY&G[/5dXie4FrnO<AZ+d./RDb+NTGJ`lh2hEa3B&V\I!?^do57DN\(:MV/3o%O6W*
%6(]>JZss9@)J8#[0/ULe.`sg_<l+`%6n%,!F@cpFpnc(tMi7\&JLNR=/gku-ZlP"gJsp42jl]JXE/,5R5RVHVl?\E\%9cXS?GspF
%M9SNrA\s?1.Fab42L%f`64m$R\6b+s7MT":!/-b16Yt0PU7m/rBlOAJVD,9YKRt$]F6<gl-j57F$l9tQNA+&-.Y7egTo^G8;dL(m
%<MZg4V3r*V0Z9,oD1sqVI6t;B->l@PYS2s11m.ll<jIgrE@Qd7BQQ)9gk!>:8r>6A?f3>?6/4#AlHmJ/1'V^.QntJKJaU0[E?bTE
%A1(%afD]bU>PeAh4-p`;Z7A$2$gKrE7j*A$eTsIHQ?6C:K><1XY^8eO:1SpZA5ZPgp$]T/1$1N0a$%gh,6cUhDU-n<ZhJdi`u&<l
%ZaK.-Z/HGD%8]N0!4b<`BFG<g_HY^]b:2P_<#rAQWs`L>,nPY1*J2JnTfc?"FKgp-qH2A=bHX>^@SUI78??-eg5N%-B&IWDi!+6E
%F2NdNf!;&(4FGM'b17%MF?o(ZJrKVBl&OAHRXb\]<,LA]cHRM?)[U"eiNB"nFY=^W0s5FP,(4Iu8Q1DqaR)tR#2<]&(8aT`Q<3aS
%=0Ddfr$nmmimpTuJ4+Urjq3f^U_5]0a_^k>G<VS?U2n91$oTfY;dONl:(<H1VV36a=[t$MblAo@XHQO%@jb3_F]&5?#pqqtSPgl]
%\mSeg:@7CA=D$,.^pXR@("5$?MU<MW4.h?%\o!HNTIPR`Z>pJBNPMW<9pV(B^0'X.^\,0=No%->iAcg45ueA'C"XkR5]Rsq[0a"7
%jpaE:Z47Vd3Z6N^qd.+Z^m%tIAFeI$Pr8;NgQQV">(8Ft9Y5=c$K6<0A4uZUA=m,H"_k$?>59+d6(HXH!a>;48`%h/g\JTJo7/e5
%;b;487S,mp_q_2\QFkhYh?#W7!<q@V5;ktQqq?/Oi-?`Zd6:n-p$V9GFpDB.2Zp'nOO[FcSX6LBf!3BIQ1ViR<ibWTI]>!g^>;Ng
%H$^$j8X7'R[9d_h:IArq1(#O7/&NK[CURPJA)F@G;3sfr0C.Bk9O"6OZs;*BLWQjmLJ,>91END?Vs;%@`DcJY*[W=sporJjN6jUV
%b4p/J0tk1EG&;-q_h"1SML&OqotKr]?o"0+^P&HeK&:BeU;GY1'brK5WCGmWjmL:kMDAKKYQ7&_dLQTSLpoa>EFi2PJ_MfD@Znmq
%bhTT888RA9X"'Wk*%-WI=,\>r!iD^?>8NB8q/RrXl.jCigV,?*;(Pk33h@u@.W;N*2-p?Pje59h.3KhBDmj!"i8&,]pXZ4:>5e'B
%0W>h8/I/(XmK[4l\[SVfGM@?`5b5cQi+$D/_f&;K.aB3nH$M,=<N0G0*d^j09r^n>bVtaNl0MIrIlMBI,bB2+/l1JQgK1VV9H5un
%j.p-7]?LV2T@ATh>7MB.&Y'Y4X\00#0tmI@=%RTdOGYfYfi;@.['rh[XV\OFMB#b[<klJRp!&?E.f_+ZX%cdN[;n#ODs)jH%n*^5
%e.2dn=s#ElEo/9G:]SW4$@>&CfWJ4Zj)AkkrE*q%OZ+@59D<MF'PSWaD79UY)BZ-UEnbi1H*+^-gEF0c!?Vhom<ICI`ab9ji6R,"
%.nCRspTooT=Z59BrkU-iEP:gdak*$&@pNt$6%qtBI41.-gpgK!a"#P#i0"FbjE^$q.$)r1fT,iKQrJ=D?1%O$`mXo[bZY8j#j.N0
%)]m"d2lfV@CIl3Hq"=;tVhRWo=7W$UFqg'Pep6FVTA24Dk'EdY0Y!?cniH6:q3o>R'.^p93%J1jDs&1*?4P']r4Uj933"('p3PIq
%Bp:3t`^9pZ.=Z(ff*gq(X%Z515!4*+Xll\(U4NtGTA4?cR9!\hX1d<]4ABtcj3&]*F9S^o*-RoSDcTPIj7?'`5loW0k8og64LoUN
%?CqHhS@IJ:PM;\&6SO57IuX%M`kSAn?Roj*)`Ofk6=ocA.)Oh94f0&XQRfZ9#@\Ug69_UHEn`CTJ6k8)8/BPK!]RkV_f<$*1mGD^
%hUFENfA#]J@s[lK>tL^9kCIlm8esWDpNk`g_5ML4QI3g0mHM/M#$/:mA!Laf.1Hq!0\H!P@u;!^M'6k#&C^Vt[?oX>N>#\]O59lj
%Kr[0.ALbV<X%\+R.@Ekqms43'B]!>l&G#XB*",9N?gQmOIM`^A#.f^:"9Cura3-,M2k(6+/;_5qK'@PmR$=hPH6qY<o>&VXr,B'1
%S&WpU9HP@f_WfIcW%M"e<gco&R\4PS?ll40/3Jo"V<Pm;QqT#V>j^XUnMF=3Q`?1O'Kq3&6*X`q)`h#f4I1eHM(3H,*YZj%28m&\
%kCF$'=MA)/PPb3-Gbmcm0>cme*5,[P06""[SE5Ice^Cki4\gE-hOQC86N?o@3)&48mJFN8e#;tYeq>O(q35?Z[Q?r]PhZGjKR\J5
%o9eC\Y>]'*E?HT>O3bd/\S6FBeTodX2PcON(c>61b9qO:AWkfk(!>WE^>7'tVKZ*7ld"O>i8caE@"2GLotKU?#3gAX>U7:S?dB8e
%X5C!:V8urLcLX.n%>u84RThGS_ltP\\6\F^VX^p+2^uU->k4mW"],m]i`KclL(od3!#PVsq.\lAM$H&aLI7ODHKBUpf3?9OFW_LC
%]YN(A8Y6F:kK`YoO&[M1L:`B<=5IiX*g9K*ot%bQof*MH@#N@S^"t\3fd?N()J]sH<!+%HTl@PNPf56bV6I5^mO*bRh)ULskiH6<
%Bq#lb0)#6,cgVOpB,DDl4a,K,'sPfUs&ZdK_2'[F*[cXf&-LO!gMVdTBb#!.To\r*-Wmlnb!*V",Lk]r@+D4fqQOF\>idpbTBUOa
%0teN@EUD-KINWpg`+o4_g?WV5K8=Vd!ZNIE<2Tp"BS$aer*tb&1Zoi1!@\2c.Rk'K,>`DD3?d/8Dam8#6j=>C\KN,1W#N(hm2BZP
%!RD;ib;GO8!NG^aF&D2)ZN\bb::SZ-]*ES=eA@;KCV$7g\]bYcaX[9-p'5:HfSOQ@U>0$4h"PS!L7`cTo7>n+;qq'jIaK&gnHSNu
%0L/ifE<:#Sj+,?8q+N0r>@]EUrDN2^4oo>5b/V^QY!d8VR2Jh['EZ>ggc;CB<C,JaQ"d6e2S;S7M_(Y\XHZkpk[#@5\ZF-r%XScf
%QEh%^XsUU-ZmkT.0kLBD`aW@a)HY-M\blYj;1r*;Z3&?1j\F'TBjJIio$B3Y=\Moq>\LE9f]u//SL;P=7o+[:8'O=`(c@*QJ=EN"
%)G@TYQgMU7-QOs-h)*[&"E,+'AI"Dt*4Tm%X"\GDQB_JQb2QHkXrl53WoL<KW=`k\6X&W[!2NVBU&pFd2,s44#uR\++(TJR')uL-
%@d=,Wm"%4n\lF,WODP%bK8bioG8'PgSBhX0X,5$.Psk_&h191I`$cD!l?7&FNh,2YZ,=Y7=Be4u?`O'5!GCft(W9F>[\1_-=,?Ct
%I9;tbF%ooA/sB1B8mLi&p+k[%Z[Do8hLN_6hBg.&;.L:Z=Kf3glP5<3fRA8rY?+-AWg.mdVH5Da'iAE:YGolHn,cKCIUA6G8Q6?i
%8!Vu7!FiJN['NKW8G&*g:8L/(,*=!!"f=CT0Pq/N%+D;Eb.^hk>mKG;`Jt+t]SiVgd\'N<'6YG`mNIH9P9^A8&F0t"'ItmXQ7^VT
%DML`ZMPs.VbdtFhgJ@W@PliaPJMS&crZ)51JAj:,.PK$))6Db3Y-$g^j)o(7Gfhr/-VWKLQEoJo*mHQU;@?Y.onm<>OR]'8B`)OD
%pCcCD#UHZc!O)YnphorU&?JRHe3(^m=';1aWoseCZ=5U7k#==@F[%X"<P+C;6e!K>/Cd`B%V:MY@#q-+8ta51E\(^lNC'IdiRN#-
%VO;ka)BtQN:i[cYk(l"4=3fc)S\uUP89es]+'KOA#*.t/nE,Yf)rODC$rRJG3R[tee]s6S:#U,*7NK8jDfE/fr2n'N*et*Ncb5g?
%OsIK/;:gR7E@buk!j)qqC^4.7W/n%lJq?"'P8Uc]ZtnW',&u%YmM.gkAQ5YuX<c(^,#:Sp[?<naraZ\'Gaa&%T@i:0RN14_=;F:H
%'[N)elT-GuVF'g9M;Q:KK!Vu/>&%p-cl*U^!>-2BKFm25qJo;(l3FF[OKEnn()N9.`UP-5?D@PoK4^VjmXs(HJBGCk_CuJBD;5oJ
%W6!^q/#3hP)a0Gk:9oaJBiH<W;AVoL]I"=G&@>Tkddo>]1ck99U0jsT\/GC;lJ1QbRt`LS3jqaX225Es4_W-Bjs>R5"%KdERt:7d
%p-B!.$3Q*u$LK6iM?4.H>4*]_+<31r`_qC^1GrWa'@Mr's$7,NRD+2%(?u6mE"P"o_]o7W&7pK&ObrC4(`1)rprr6`33'lMdn=Dp
%9%KCZTQYr=#@qsNeHpur"&1[jXu;2&Y(?iG*'?pD4hC8jGiSm5/$_p6Q2CDsCf8D'1e6*dEKc\j6J0P,X$Oal."jjAi\cQAG7@gp
%#klol>`7Nth?/EJa@%(I,Qg.+%SYKdQi9AD9[Ti`An=QQo+?2:>&oY9bp^rA?>%UknPuiWecsFjEeFY1KJ_/E:8X#NN3H_`-u&`+
%f5$Xemo<,5b"uH,QjhnZJ]JTmLSGCAnu1-V=WGqbJA;OXQ`J5s6NIh94ET>3qLaH%L2`a9n%\!sehXQ89H&4M!FBEm-npsP"U3,Y
%eq]2h"ea6HYqa3PHb,<`68hgK'LYm1:\M.12n_>3XG*o;%CICcLY$']$Nb5J"%3Zs.m4[#C.ShV+ZtbI%C#5$UN38o.YG-1lS31,
%_5gt*H6m((Wk?rPfY^+\W]`gh&]]^<fk0/<Y9g@[i]EUfXC*sh$V]ro$4+bJ%C\Vi0sD>!au+$CCsZ`6NrBHu'WaBY[6SJ%+aSE.
%ZNoF@=asi?8T<-*bmf.B;$WYq`;P:2!ocW`CeR8'lm^lWZ7.NY\F6i8N)eoRPecbIL;j0+XK]ZKDV7$)\&cOFGcO>cLJ?b;@#:[!
%=trT>X01QQ8/6g/aq,qT+u#oQkh<\RZ=j+5"_?5#KG%qmA&G67Z9?kP<3R2*LJ$9VPqfXWY@8WfI+b4g-$W_e?ip"mck(.caoGS]
%i0G,6a&&+TYT?qtd>*K[/_<F]"lT.,B%72Z%>Zr48p'0^G*`;RNPa=f2L>skdd%ZR%>a8!%A4\SLgC?;pXO"VUC!@4W^F$4L;^LF
%LM7T-atBD73Jm9DW#p8QWm-DqqYDan3N>9N_"aC@'B$p2D+WLef8Pr?<dmEZQ7u.ec&t1<<.csEohQ>^YBiiV.Oj"1WRV6<[E:Wg
%JFn.JUiit?1[)Z*.$U(,"/:'8*^_ab+%Talk`QY`*jC_Y5Xe`eVNe`NO@eXD/F0KE^\7,$j;"p#80"[W<Z$75UB:-+1r8f]+;Lp<
%(m]]qntT&Z@pC\/0fY5[m89'h&d2,eU/p9^/O/_o'/,FL5m7U/$S[DJ9R&IR.f2p=?u-L(V,\^B=7HtYFY+faU+W>`aR@;65$=Im
%;2*jP?gV#R&`p&634%BSp5T8jWcnDPYVmjt*nOdHhfJ2%`*kNZ8oqSR.uh'/NdOWSYg0C2S#(F5O^So:IpT#"?H[JjNc<[^*\]Qj
%dnFc&,PI7N"Vch5bcd\U<T5^5</;bTk&KJr'P&[<\J`uM(nY8;5#8p/g4YKAQ485++DM7`%(q"#1L\BZ5gEe!Ug.[T2b+C+pJsI/
%BVL>=26ouf)fF9'Y6"L'5^9?mQY34WM=^<I!jQ"dX@$%r\hH2OE^[+74kp;e^*<QHMF'sY*Rst``++Ji7>hLM^0[XI!JI'*S8R2B
%()BNaWTOcF4pAtFGUneNd3c>V,JBu;"G>oi6<5Nn?:JBCOd/e%i*^/N;c5dafF-nj=1+O^W#El]f324D@4b]YKjo(^H/!lqM\Da?
%'[YH?XJT#qUH8#WAlnu?-?B:*f<X9jWB;1hEZ24?^pJ5V*!nesq$@#4!c5)/f:MfXL3B[kJ[J;,H$7gD<B*^S'nmcm#-tX&W2s<V
%)`4obop4R'9TsRq4N2jN9eb_hQPt@5H;91;`+AgufUheh<[9)d'*Sf_DE8YBBIN,on)k0/]jAG+^a",TZ]9g@&1]H[e*<-sTJaCs
%P^83!3EYSLQ9AZ9as>Q-9EaBCTr@B%P<Aul*eTg@?mIQFchbF$g*o-]4V6Jg06B7s5"3-7_QQ?4\rK.W=d9ktE3K]^4O+inU=RR(
%#IE`LX=0fi8HCV[Xc@Xd!k#egTk>6<Pse8ZOD=dWS[Sn5JTOEdW6GTQ_c`rGl-,a>QMZ%mZ,Kk[7chcArXIISWf7'h`IUX4;u#&I
%Gfc8^e2kRoliVf[>Vg&LSRk/tX-;t;8<SmL=Q?7qPoQVmK[Qm!@:S&T82f]TjG*;2O'&#RNh!,5i5G;;R7F5\hR%TX8jKN'.)#9@
%!/[\?Q!"3,-SZ.k64"KV&aUSZp^dTrBto7$&i6TCV3,cUkX)ouD/`)$np7R<ipXDVMY[h6Y-En#YX-YHnJS,j,OH)UXMg.SMG]$U
%`Rhp6&s6<tL_hg<0NLS,&KTQKB&FP\+k!?Gk30]t/V(d*6$+VE$HEu=!+'We_QAE\bQb$Zl6M!/H`'3?<.utLR4d+uW0BP4D43dX
%_3T>fL"*8'_8rs]:ar#*KqAer-nTkR5-2`0s6_Sga@p<'AOhh5,nWcg,>t=):*g%;G"f5G&k0Gmo6Y`>:r1(V'I8Um,V@eZBbWVg
%$=\CLj/-1a<fbM)\^7sAXQR)ZNYhuW'M3%D0!:fX2fDDsFQFVl&dp4YQ]P&GnW3DnW?T$+5*"*Mf;LVS^nD;1YgBDK1LDJVpoTB8
%9*q_fNIh_rXQ"2q`Poi"n0$@Z9#./NfMuTA_ceKn"B.Gm>ZQ\u9P'4enRiODL89K-6ZO"36GbEeP.'C+=:h=t:nL<P;ue<VP3ZC?
%-`so6EbV7*^Hc\kX7.K8Ckeh->=KN<?:,;;?qIS:>C!)',6=Yq?n-=b!N!0?jTNd/$HLcV&jtnoUgeAM,a4IF-.*$jSfB[u23nH`
%e4J>t<6ohhAqi<rghA(nambVL,7n\UQBPP43_bS]rDFb*JQq6>.4H\K9o!_K?T&4#V4Nn@(_Pj\eRCZ-4^MhM0t"l;hWnRQ`<XOY
%#Hm<[e5XF^pD#GBqn>l@,Qp1HHq>^s"AP+0g+$#6+?cM`[>3fJ2foerW5-jp(_Z_f7FHrsps,[6]A\%(o"1Hl1$)7Tp08_N67rs3
%BM&@4g*VoS,H&"tL^TFFb:Te'/e%X1PWG1*OA.Dd.>qUqNY`p,,Fc0/K,pR83K4A(^L0Sc[p#K(7o;paqJN!'FL_EX>[%U4#,S4X
%c7]fD<V<`.ZhV=De^oqD*fF!WYCh.T[])^BO:<rb?oc*[;^G+U=:%k"_HlDSG]@3\6h6a?n&[&<O\U[9U(IRGPgj^1GksKk`SuqN
%]$'ct2k5>-!46ku1C2`-W*[n+Wa:Tr#O1%MP8PINRLP)6kr$+X84^k3CQc2qnaZZIP7[<mcU9367Hm,_I@;]!SA8IG``T[`di]AW
%jkqbEjq3Do[n+j%BB3'E>a/*KOEAjZ.S40umD[n:'K.CU8*3?2/b'niq&-/F&++%e\6!Kc#Xd%(Jaj$D67sa<C_cp,6s_N4H4NV\
%_beOdPfc].-A^o&8s!;4d1SuKj!0Z='?^jYTcckJTh4s8;bMsh8e3'Z/`h%';[Sl;\mJG&'(Z1_TiZ)5qn^H&05joFZ+k(7DRAR/
%b0e;B0Y+fFD+7+=WI"+a;Zu\<Y_!XZmB%:#"2eP>VFYS2--Y?U3nA/D8K+J*!p7V$#,u2.ApdC*5AhgjlC%oUoroH$X[.u7H3$2g
%_k`]\3`T3l0-_lH`/9#\fR<u=V(aLC8o[5rP0?%NKGS!GTA-bt&a325R+G<[;#Vfq6K2*TR`ZRCapsk*>@T$?ELB^7']1;&%BV<V
%`i1"T;-8]j_olemcK.bg>Y@GLTt8LC",gp,r!N&eaP"Ng0B2!$Di9mB@@Ik:R]<NhaIS$`=D$_6HnM7!UFo\o\l]bhJ:k,YFUoI'
%1(;rEeX"1YChC$C"hIV2jFO*jaBWE'==.'5aC,Kal'T>^fhj%OZ=h=Pk%8/BE)*3R-2nn*N_fS@#^M7*-'g1.DS.deG?2(-J:G<F
%K:7o=rrQ^];jp3W5?Zm.MSO1S"o8/`ho0.l!_uVUMt38M1jFF_HWXJW2-anoZXs(<V-R`?IjPt"a]Ut%.JZRZMtKdb.W)-plSti_
%>D^]QjhN$`N*(Kuki:h8O?U3P$iW]2#0"]`\t;7K\A3&),YC6/"(a>GA6ah]Y(;n.eTo7IeKs[Al$Ns#2sO1a>/VDa0kbb6rCYpE
%Z=6#WAnZ8gQ!qnNI[^%DAOMBC\4K;^hs?.U(&[d64"Qe4aZa_"6ph7t\eRW3p2$d(nU^D@`'9MEJa96AWG7(r4ubeKX!MQDigE4.
%#R#f'TK)TRJB/FQ_ho.-r_jRFE[t6n0T`tPJS%m4g&`XXBPTJar&oamltk0L,"oKYcDk?\lp(09_F;O!,jRt]l>5l90?S4;2ot>,
%*S:)SLAsm0A[Xk&G:Eu+$%a3eQ3&C>,U["#M9qRe<[=Stkl1]<';a-35VfmG`010sd$;!W:^TfPF@78T-sB-)\qn_R,4/?W';2a9
%O^58tW;!dhFe(;#1LX8-p)_e\hXY6h+B7k(?s,Qu?Vj<N+H&0F&b?C@.B2Os)[u$aAQkb*omunnI4OgN8'j%L<@ld3L<,a\:?]$h
%f+h-dPIbI!>,`GFN4,b*.F?%4GuEq0a\"Td)L$0sY0A63h?3AX]!['"D/bRkD97TCl=qOD@EQJ";meP2i5qJ,E):Ao$51=:5_g&A
%*qU;U23ZVo&4$cOZWiUijP<3n<!c@$+O8L&:jNXi_Ed0MJ)KUIg9N7825QfnRBn(\6Y=?TD+2,r=d;KLJhEFCdZMs=)i<4#.d!^^
%"oAuR75K:<7-X?n]WW2N,sY)^Ttl9rilTp47FF)3KTP8MYR$379l:RQCbbq$6scXNNl6(KU]UYVGg\@s6,gO,`S75Fi794/"OaYW
%F[cn%GS!g2RWF9r!RggZ+n*i9"=>?$C+)9M]FG6g2-Zr#W3=g;6f=N:Y;N(og677.l`](TEl2F^eSiA<)U!C[6QmcpiND8QT*3V@
%hFM*<JocD@?,&R:B1%Vt<ZO'@ph";??3dMbp0FN('aLafLT*tNrH'-=Ei_q/Z:ZbdJf641hV8Qm_Ae4QZlOKjRlb0YY'DNS1V^FQ
%acrM4X>%FI##'[]$F]S54Q]R"3qE_0Hg/)!>Z?Kf[(sD5j/&KH[_Odgi)KQDBCAe!$In.2q$.f,Bssl2:"`Lh$3b+U4OK.^9m$'`
%!0*jT!)5eILgh+`OC^H#G;IsE:KKejEig\I&\W8tF^fc"q41o27]750k$D^4LnB"%PhdJ#SW%YB!FKei8e30uHL"%G5^TBo"M_;k
%7B&g'M4oaHOAs[glB0AY7Zj:&Kle=Eg$\$r*a7?/7h\.9M/l"LGkk(E#0FjqaZ+0.]d*f%[lt[cZ0=!HQTY)FA]Qu..DP97(GFDs
%/SNR-iRY4bMbhFLPUhp[@CNL*DCpq]\F\4;1-PbaIRj31,>[/"="DbI$j3uJ(dL^`M._+&86n;Z("ctS2eQho2/$"XAsJk!B=_mm
%/5np*,1.c&2;S@Z9S%GC`tE<@18)&<CpQF(G09%^MuRaf9^f]!<UBbE^a_n%j'pp%0ci_uU2`LFnEe%9&="ONpoqojjbugZR9f$%
%mP45c;nI4e+,FVM..t+*bC/9#Tg^@[#ZV6@JJ_Q@`!,]2#HCEpDbFu`UW*XHJUR9&P9O?iTI@#Tr'^plpb(pK3PP$k<)<J*[`!TY
%EgE=&Sj;@fcs.iu,cH[Q#Q-]+nO\tP\HBC-!oFA``ZTD]e4JPN4_+kXh'@b?7:nH$$D(oK-?50*ck6Y*Q^tc^<`Lpmr=8=O6a3^*
%8$*>$ip@V;Lc#8p:e`1HaVkTk8B\c^j7DgF2:k>.Wh3V38-f$([40-d/i_;RF2J\&A5D<1+PLhh'cqb>fDEPiU#]ZSM(I=Jd6+pj
%pA'J@(+0S@dh%Pq:-BrS/VZ"K[f\?FiUjY8lYY[-g1f-Rl'^*fhcpT#r9:gn-AB@u9,b@PgUYAC"'m"UW1*?@OK>2Kp7@Ut]l-"E
%5)4>0`0$ACO8=k#k$aKCio_KuU4)bu0e>Eq.0_/^+,@+T\(gR_mheh%n&MVoN5[Y^oI+Le;Xh%S8tXst)[MMZWQ4XKY18iJlbb39
%i$m!Q^#&J]40Fbs0\ahi_/F46k'L3InpV&S"J+-,\]=@1hpS<>Grq*8qfoN8gRb)`%Jq,L;Dr$!W!oU6kZHB1c:e_Th5R@/c98%K
%Mm+N]0olE:rQqG6\D6Cu:LHHKV-G1L!GM]&?)"IDWbn*pl):j4A4tKK3GXGp7@<<#*/^<DQ%F^reBNiIA&-6U%OCc9;SM(04g\BJ
%f\GtgY4,@i<P0JYmd/"UqETo`P/skr$">^<*Do4NHs3A_[Q"[g47@u9)6FoDq7Xfl;#qfl,7,p>2adW,s#mJ>jW$sfm"k%KmP2gB
%^os*#bi:r^<RoL;j^.Bp%ogk3<+AZ5M6qg0H9JAcNN-%dAHd,.oA!i%2f;VAOP>>QBuj/a?1-ggk7-P"+=D(UWQ4Ub6C]4#1:bj@
%+Tb3%kID,P]B(9'$A,_heb?-#0DBeMP;k!'r,DM#9U$R'b*F<kCK]6_%sAK//cFl=Vrs(4C"bk]J3#EUX4;Q2!n?r&RkNBmq1r#b
%3i,GQ87BU6G-89aTo&3rELJ.G\"p3jlBsE@P^Fr,[>TD:<$dA2Ent:!)J+[:D$I`O\S%%7h^bV/hsA&dFd,nb!g0Zl>_3nf!"If+
%Pf>P=)5i<W]SFE\W#[b@P?<qY!*!)IPpgoPHo1pi,U4YprZ62M+=5^j2`8t;P+G^C>HMX%WCsat.I16h<m@upCSBU\Sd]-P"c#aN
%nPCJJ6HHk<hQIGl]<Dkq83K6*;Hm<`lOZ!Lb[8_@?nN]JhV<(#ou7P_[Zr34#9(iDQm:%l<F8!Gb'7g(Ufk+4L[!W;)0t8gj-Jb;
%`A+._"jl1Ql7ouAR@F^cGoer)aM(?j4'Ft[=nuWBO/YWb[mku`!-\!j-#]m+BH`7lJ,=Ifa7/M]m;?N$T#35gIr\lOb8ZHeYenf:
%ChF38XpJmA:$5rMaaGA3`[`523&N8U_%l_!4,76I`lsrg^#&DCBg<SZb>$nZ8/q#+<2s(G93S*ch_07KnMHQZI3'fd=BbI"^#&E5
%j@;LMXiQTQMm]b#gJ_4f*;4(!eEA)u485*VOYA5<'R:\N-!:!%Ej,4cfibcS+L/6Qe'ZH]X>]0j[nO/"T'&:2moGUoaXX[\5YRVV
%c`=b72P+QE"O\1kl'TThc.6\TBGbS`F"Onq_j5A@/aq)K^_P8;@9@RLmTSN(1DWn8WS14%*7;5+LfLY?K3:)WHLX]q.c/K8[Wcq%
%):`Q>a.]n%L:psaPFEX1+)M9NGgl6S("*-I[-S()CaH=3J2sG7n3$[%hX)@klYlcA-oNrt\m=lj]>n0'#VjbVUQtJu<_.h1+/=09
%=RgID]@cN#@uC,D-en5X((Dc;T?DY'gN];5dCqt<:%D/YhoL$\APk97Q!8q>DJ($>]?s!c,<q4+@[5B^`P0*"4H"mB7A9*6QS!/&
%f-1>]_`F&@PT2BS8WenU']W;](O,eL,6"=8p'hU8\m>^@$,Ca_@6nEYMf/;D]t4cfb>Im'JSlI+-eY*ge#8(7e#H3f=&r46$UP2L
%mFm3!f)Z!]^sChcmP1]2$q;qsRoLd;rU+U^]3"*<ps3CZe4o6>jFS/g*1fA\e<3]4>05]D&jS\hgF,J:`-+dk=.O*BgR(IpQ7A24
%]%0B2$L-?PRaVWtS$FAP%liGlp)corF0FfYXWF5^8kOX#C$:l<K0"-"ZKRuEXE%)L][&!Lj[8fp.AI[3<4&M?NM<,X40h"jEKtS"
%=6L+"^d.'[a+-`?<>D%Bb#D>4G6]rnkNXK5jV,2rb&pd#Iu$4C1J,T_ePk-4MI-9N'Q&XIMrfr6.8Y;(lJkp>TL)<BB$ln'$>P:Q
%T^#*h$S\='!Eb*Q>Vq9(bF/L"e22*BVbtqfaag=UbIaPDc&gMA$8I(R]$"#Nd4[eq4J[21iDIpFrI3Qqbj_U(5V$mo2nfb/&%Q'G
%e)13!Vk="f+5_SIj.HAD_b^='p2@57q?q_7Y9d]Wk3_X;bKiEOnP=XZqt9E,pY5H:J,]/6s8;I!*;l;8J&@u[NrNeV5.Ziu?](/,
%OCo'r#`<s9Y\\ntLdsOk=90i(BVW.<Mj.-K+=rk@_P]*."d]?=:_'?D,O]HbB>(`1pUd_p!H]Lk6rF6q^bko=RZU5h"<s*3CM0Ym
%Y_jaVdK9ph^KF5^n:qH`Kodf_%M3l9_B],RWkD<fBh'*E#ofehf1Mtm"+X(^AhnK*;X\D:j=1@sE!Va<k9bCLTm=Eb>T`Hc"p5L=
%?qGWd`Df[!iTG4;MV^Hpd6Ro1mcosE72?*=!#]278Bb3HM306d;g"n6K:03CC.PA:0rp@&Oq,(KD9O=o%(CI>'X2R@.&iCdF6U#H
%MZp'`MU[=OXI_4;K"JS15+F_(>AF,;jF./6.boBKYH$5tj.XOU'^gc/S_[SB&q+si'GK+0<;(&C_,QsN9F%;DP)E-on6:.H7.MRl
%l)O&e<CTGU!>h81WDO(5D9Ug#,QVsOb@[.$SlC6`f!9;IC3=h\k,qkb6TfMT-s6nsQA+9LG=9S=#]u]-,YV(\;C[jqQ_kfKBhKA_
%>r5Pp#Obj*BS/?)8jcr/DDO4r005HL<eVBcC7qS^E.7"Kh$"([82T/IUM=]]RN`O3b)hr8O,2%^Zr[K_,`P9(P_R#f(!*2h"c,f1
%X=%mH[kaI"g5=K6%?TohL6B&/YSq-:&8KK^FEV'\4VD1:=jln^$h6Wd,*_Q.gP$G:LfCls,f6ih//!'"=IZ%,mY5aR=?bn*P$,Pd
%Pt$JoNeZ-.)r/DO,*7)L>:P4A^Us9AVPPTkB]Sts*&@JegS4OF->8%uZ:?-W#O%XZ\)c7;@[o8/<s5CE^P-\pebsW-rFHdcl^aek
%YMLpsP$2"LTQ4Y<BNUaD#+64t5bA[nGbNJXXN'jg'HaAKT:l6>W%=+^(C5&;^9rn;MBr^ZEjEcN2J\S>TICBiA?f:h+if:;mf:C!
%p.PRE."L>a.R1^m3\W+]@YAMIHoe[CAo<+hA&&#;Y8$\&F`ZlJrWq3fV+,4ih^iWN/`tt(5/s]bq=Kp18p>mi8lpF1HV5K:<chbV
%P2uiY;mX(R81'+#cM!H&1`n[tH9p)G#6>>%DA5+\kKt<'V(ZmQTe?Y"\`OKu3-pcT7(86eQ*Q9ojc[]KH5=%@'b6m5/;H<(W5l;B
%pY;p^g#/g/[LB9.FC[kp7i?`dp@LW/!5)D`KN!8qOBT,aA/@QJI(G2_ZFU4]bq0D1OQ:AMD\7N&)2c5M[5p"+e]bKtY=#<UFnN69
%=tdN`3A<+:iW<Np:QLl5<VK;-dm]Q?;Wp69QKkWeJdH"a@*ff-Go+^&!aF"T-d]jf&OZmFAsNs9!80EqhWdsO!W_)p>2+',IA?is
%m1uhY&3D<V73DkNcAc@Wi#^;h6oMU<!$&%D<1_L^PDZoKWC4ASEV2As(pDFsp^HgKb0A5Q?I&N-OtMM"&BYqT7+>Uaa0)Z*NoQdg
%Yk5oV[;]?'9ih3_rMf=3N'\!]N-kW@nQB2#;WFlIitJ5LPg]lf:%sJq("uL7g8NF+.kG622)qR17),I)h'-!k#iYp&Qgci>;7!8U
%M2A7/q2!cllJ*mpf*)N^e]@*3j"+?O[4:RD=<S!QgeY4T^h'?s.Z&?h4_p6[DF.`g&$Xjt"M/KU2p7XIL786YP?ZJ5B\jtKEL8B[
%^L:<WRX@UEA'0PZ`m(tol!c[da)t,(2:!d?+5R?)fe:`rGH4Y"&133q:#pdRqp8Bn?:a]BWWOb?Z'S.qV=(l58T#u]g-iG=E))n^
%Atnj8[@_XOb\apY'e&+m`-P$R>2/JQl5iSil$H*HV!+XBAm7rY5_i(]#/=BW!c\:a&air!4@.Np2R&ZMIa([UH:/D,k_\?Cb/)*s
%rM';7m_eZ'r<7g0@ZLj7#9S;V$V\^0?=+$'a_SuV4i+'Ai(f.fY'lR__@RDq]:Mlh';u$*Ssh\lKe'ru8D=L]7(8Hh6OHBP'PrZD
%7u%6AeS87?m2e;28'5-hjU1Jk':0n9O^]sjF[c:E"e6n?#I-.UH<LA><%;6SoOJk5G6`GNHF7F$#sCoBbn3*ZA2=(TZkb0B>at,,
%#sk7(T7aK'qUu;Y!Xg3LZ'8l9)+4$6P\JA"g]hf4Rut'X#-\n&bfADb\(MDbTgjf.Q@$E01sP(QCRikTlK2]o>rCmjp,/s!VCAsQ
%\6fD4JEr0sr)G=g>JYJ/LuJmQ7^"E:^[BRMl_"d$)rAs^DbF*aHt!1/.)7Z[AZt.RA-)f1oVe[Y*Zrb;E`[N)i$'O(RFUJ"Cl(jS
%eZ&J(/kV!Z3f%2rX+s]8&ca%SLt!WFf[PXjD"Q4:D6[1`eQ!X!k&Ri;ZCu%SXkF3%<[=-2-`09OTLo^L@b<9?7OE5sWA&IA#^n_O
%*\\7Y_KSVG2UPNM=(Q-YRkj/uE_CW6:mt9VBbRe[ll$0,V>_dq/q1WT0\%GE(`U:8Q6Gc58maI:aCMCgkCaJW[sEMV1M6U/?q<NX
%5jq45(0+PhJSTZO&h05jFW=R1(.lR34Clta0CK1<Pu\4$'@Nad6eiq`=XM)2<\YN$SsFk863"O?c*&Qd>1Xi:NfG>=@!up%+c[,0
%^!/'G@9Sn$UurM)Q_%9[0!&O)a%IncH>[jK4J^&Leedlc[@Lc&J-qY8UpA+iH>.8plj\0+AC1QSp9)=tG8(%NcRP.)?:F$;IV<f2
%=rlNl@gJLR6Wn'`OIOSl+dYd^'8M*;7EWHq0'ZDn""^!ZQ/&-]1FbTVeVtt5gjl'u9[s20DrTZ)@[9e<;[H]2LYE\Aa$u*?3drl`
%i0376e$dJT1hF.AG\!M6jNocsEjZ=7:e?g6?tt'E,gH`o+%nNQU?QQ!+06Y5rn^Z^--KJC69t[Eem"He.5FHRHe16WRi@2=W<sd.
%@$Nu#,0`)I`ECFi'l.?;r")o.+kS9Y\H(H*[/l\/9(qf1Fk$A'V`2Op`]B53,hru3>c%Z:KC%U+o19ue>7d*#EpOFJQ#EW!LUa@O
%&m5pR`nMrZ:Ngf])e9UP'_"2,H`>IREB4Y#^aI**&LV<"pWu:@"*@I'HR#S_FEG/O9G3*9Kqr0?c5`^0`&_%aJ1Z)!MJ>\+F#YOZ
%aA+7uZdLN!l5KThg"a2-ekNg[%X$[3jHcH^_7:A/JNNKED%"IG9]&6UL'ft9>'6>ba,UtiNT:(WEAR\uH;l]I"f^?-N]=NL8W,UO
%d&o0e.isi6Bbjqf32*Ad,\ZeHEkV*0e9pdtKKH+$8<WuSKq=u4`]@DMXgYu)1GC@o64U,lEl*i@":$Ugh`er`pO[]jg%-Ig76iSK
%[LOsTaZCni<oD$.3R69^e^g-1X68cJdgn=V<@(gsUtNcmStVl\lg1@^'Q&oYj!e<>aWuBM5a0S7)6,iXeIJHtWTr[r&n]=Bm_.^/
%,%OU`&<ZNYW!X3m*n=;jYRm:_i"?<]gSA[beC[f;CsMa`Zkp6oHcb]c.R(#1RM#`5N"s8PJW=nmXnHHX:k&4(It_,J52pUf))[N8
%T#D9,LS^j#&"0GFh#&#8SN.1UH7NUVg+p?ZP)(bK0Rm</!MmmVY0/0:Vqn:Uom'a<?Y;tZVKn)c!kD.^ajO7LH*CSX:]/B_gj[At
%kulPGN#4iJhf/pYhqUMBR*8:QEmV*l/Ou3^_"D\^eSUrarbb_O-rO6PdaNh!SOjNP[b\DE9sPkBXk=g[eAtO4QdtK4<Paj`XMd8$
%OB&>f"tVlX.722O*@\Woi:Pm(4,KbF\5AYSI*'T[<fYEmAj06*e.ei'[r,efS'`ZPO0"r!Gu<)6jtKt\At/97def'beFQj!;V>5d
%6L87]g1mfXd_`g.=9%`(kKW!@Ud;rIA7b#jn*FALHJjNI\*NQ@^Fgl7dqN!\rl235FK[EkI+c8(:47p?(Zib4,k0'PNDl$6\s;?m
%VgO?_ICrB+Q;#><-k]5JGAGO8eJubY-G#g9)VWpnOsqH#>M@t-H,0'"X%MeXTbui(V.S_YNPh=:Y]Pd><$:\LgTJ,nA`)MDD!k<j
%`b<jo.)!];Ml6nI[lr$9H-S4mRcXgS]nY]EbP?YYUAjg<&(dZOgTQ+up>>o)8[FN=>3bPWfGF"dK>^]SV<oK2M7b0^:8(W8]goV;
%!pQE]FaXi4&&\lFN$Mn,<h,t1&M"e%9pP>m)lWUN9>D`Uba-=,7@uJ#B/Q3qajNn:McjsN<7b^)Y*Qhm@!&;<3\$mW+o[3!kb`B/
%FfAcT9Oe2r;0,S*+U<i<7\,Y*$Me#`>MY97/>B^DPXlO3GFO,E-?^Sd,LrrTC'R$+.PMW+5b+Q,#r0io7^CODgGd\Y$;6'oZ)jkA
%JW[VXI^$j%qN2IP#\q%]l;_<H[iJNpJ<['8=%P_iJ7<X@VO/g0@.+4ZL8ui3/uBno#:Sfaj%&IHg6$r8=srD-h`J"+q8msB@FQbo
%$np8bP$GpaWBCSE\4^0LIoh,'e7N_X(ea.RM2>elW8jE*?>$\9Za^D>3KqODRX+GHldj:tP`koY+:XGT/sLY-'!;dU;-_uL*L/9J
%J4J>+?dN+M.;3e>a@Oj<Jj1:qja.B8.>#?ZlK/Y!PR,CY[g%C./Xqupk\K.(N"GI"VOGbCW%,K_jJ$$`:K=f."&1^"*1?$U+pFa9
%%cgpR1T:gLQ#S!DV#+t2U1KHU9,^rcBS/FGH;RlQ7)BPA.:4*3:TH?m6&FG``%*W;aeji\$dXqEnPk4>\8%l@nG5<kg==rId&;Q&
%AjEd!%63m<lMr:=fOghP.:jN/pDPMlZScO^jIsBq'th01L\0HA*g(7`o7`p`(%s4dY2^re+mTj$F-/BODU1E.RR)r@%'L^Y"IO3"
%!3ELC^ENgcZ"ORBbY;Fb8QaJbo[R?$5oQ&RQ_%\7LKCQWOuACU=%D.Fe&X'oHs'*L%V$G8`p,ScE"3<bQJA(.R"MJo.ZOd%;31Tb
%OoFI[3eg@priJTXkK0>+[tb_RP7ecQHRQL'H=<JIJ1OZaf\u.Lp2_;K)1RnEPhJ?SN>i"%bitthOGHoaAI0?W)lc[k.T0`5\57gP
%-aU*9BgnXDC(+u'olMUe@dh,Y5m22R+QRa$%(45a22`X=0.3*j[VW648NMOSTo+`Z?ssWIhs.'a3$6BC^-YGM!(6pR^atC@_tQ&,
%(:fF+RVQbH["^Rm?_\?:f5Uqc0\!&'FnL-DmLbsXafphfF':FVC#jo$4asBK>!@?>[mhQPdN_K;",%cV+Y35ckukW3pG4+?1JAR<
%X[?r1?FCa>PSU`>;cP\LY-AKfl"DrYS6fPtUjk.grX-rQ&dM`kKtXOa93Den9Lt&>"STt\0iVr99C@q%QB:&\J552JCK$A4QT0=5
%DZ9-Z+^L5GCHr4qoG`0g/(%8CYaR[m\kXj+\<Ln.NZJ19hWkjTZL<Jb=N$_MlDmCL9,p!PA/%*R,Ye$-Wr<_aoL$00IE%ttYa7:^
%I<,)X\C8U7Gk'YL91TRbX&63YbQZLHY7WK]>ukMBKm7KU(`R5qo_?NQs6D7OhEC?-T7?n?GLq,TrK$oLro$ZQj7be9bE"l9q/R@%
%ooD?8iQ(updgps+?U+P^[t"")^\mSNIXM%O:OhAa5Q:-;:N(aXl,UR:r9']$I/D+er:Bs-_F]e%IeBakpeUqKDu\u"!OdGu9E~>
%AI9_PrivateDataEnd
