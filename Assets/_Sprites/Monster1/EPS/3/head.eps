%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: head.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/19/2018
%%BoundingBox: 0 0 445 397
%%HiResBoundingBox: 0 0 444.3178 396.3149
%%CropBox: 0 0 444.3178 396.3149
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 116 8%%BeginData: 23030 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD1EFFA87D7C2727F8272626265252A8CFFD6FFFA85227F8F8F826
%F826F826F826F8F8F82651A8FD6BFF7D52F820F8262026F8262026F82620
%26F826F820F852A7FD66FFA87D26F8F826F826F826F826F826F826F826F8
%26F826F826F8204BA8FD36FFA8A8A8CFA8A8A8FD26FF7D51F826F8272626
%F8272626F8272626F8272626F8272626F8272026207DFD30FFA8A7525227
%27262726272627277C7DFD21FFA84BF8F826F826F826F826F826F820F820
%F8F8F826F826F826F826F826F820F852A8FD2BFFA87D2726F8F8F826F820
%F826F820F826F8F8F852A8FD1DFF7DF8262026F8262026F826F820F82726
%FD05512626F826F8262026F8262026F827A7FD29FF5227F826F8262026F8
%262026F8262026F8262026F82652FD1AFFA127F820F826F826F826F8F8F8
%4B51A6A6CDACCDACCDA6A67B51F820F826F826F826F826F8207CFD0DFFA8
%A8FD077DA8A8FD0EFF7D20F8F826F826F826F826F826F826F826F826F826
%F826F8F827FD18FF7C26F826F8272626F826F82751A6CDCECDCEA6A67BA6
%7BA67B827B5726272026F8272626F827F82052FD07FFA8A1525126272026
%F826F820F8262027265252A8A8FD08FF7CF82620272626F8272626F82726
%26F8272626F8272626F827202027FD16FF27F8F826F826F826F8F8F87BA6
%CECDCDA5A6FD087B5051505750512626F826F826F826F8F84BFFFFA87D52
%2626F820F820F826F826F826F826F826F820F820F826277DA8FD04FF52F8
%26F826F826F826F826F8F8F820F8F8F826F826F826F826F826F8F84BFD13
%FFA826262026F8262026F82651CDCDCEACA67BA67BA67BA67BA67BA67BA6
%5757515750572626F8262026F826202027522620F826F826F8262026F826
%2026F8262026F8262026F826F826F82752A8FF7CF826F8262026F826F826
%26FD07512627F820F8262026F82620F87CFD11FFA7F8F8F826F826F826F8
%5181CECDCD817B5151507B5157517B517B507B517B505150512C512626F8
%26F826F826F8F8F826F826F826F826F826F826F826F826F826F826F826F8
%26F826F826F8F8F851F826F826F826F820267B81ACA6CECDCECDCEACCDA6
%825126F826F826F826F826A8FD0FFF7DF82620272626F82626A6CDCECDA6
%7B7B2626F826F82620272626F826F826265751575051505150272026F827
%2626F8272626F8272626F8272626F8272626F8272626F8272626F8272626
%F8272626F82626262026F85182CECDCECDCECDCECDCECDCECDCECDCEAC7C
%262620272626F852FD0EFF7CF826F826F826F8F850CDCDCEA6A67B7BF826
%F826F826F826F826F826F826F82026575051265150512626F826F826F826
%F826F826F826F826F820F826F826F826F826F826F826F826F826F826F826
%F826F826F826F87CCDCEACCEACCDACCEACCDACCEACCDACCEACCDCDA6F820
%F826F826F8A8FD0CFF7DF826F8262026F8267BCECDCE817B7BA65026F826
%2026F8262026F8262026F8262026507B51512C512626F8262026F8262026
%F826F826F826262726512651265150512651262626272026F8262026F826
%2026F826F851CDCECDCEACCECDCECDCECDCECDCECDCEACCECDCECDA62626
%F826202627FD0BFF7CF826F826F826F826A5CECDAC515150577B26F826F8
%26F826F826F826F826F826F826F85150572626F826F826F826F826F826F8
%F8F82626577BA6A6CEA67B5157505150515057505126512626F826F826F8
%26F826F826F827A6CEACCDA6A681FD047BA67BA6A6CDACCEACCDCD51F826
%F826F8F87DFD09FF7DF82626262026F851ACCECDCD51515157507C2626F8
%272626F8272626F8272626F8272026507B2626F8272626F8272626F826F8
%2751A6A6CECDCECDCECDCEA5A67B7C5757507B51575057505150512626F8
%272626F8272626F827A6AC7BA67B7C5051507C7B5751A67BA6A6CDA68251
%27F8272626F852FD08FF7DF826F826F826F87BCDCEACCD7B7B505150577B
%27F826F826F826F826F826F826F826F82626572626F826F826F826F826F8
%26267CA6CECDCEACCDACCEACCDACA67B7B7BA67B7B505150515051505126
%512C26F826F826F826F826F826517B7B7C7B7B51FD047B7CFD057B512C57
%5026F826F826F8FD07FFA8F8262026F826F87BCDCECDCEACCEACAC81827B
%A65026F826F8262026F826202626512626267B502DF8262026F826F82026
%7BA6CECDCECDCEACCECDCEACCECDCE7BA67B827BA67B7B50575157505750
%512C5150512626F826F8262026F8277BA67BA67BA67BA67BA67BA67BA67B
%7C5157507B2626F82620207CFD06FF26F8F826F826F8A6CDCECDCECDCECD
%CECDCEACCDA6A65026F820F826F826F826F826265750512C512620F826F8
%F8F8267BACCDCEACCDACCDACCDACCEACCDACCEA5FD097B50515051505150
%5126512C512626F826F826F826F826FD0C7B577B505150515051F826F826
%F827FD05FF512620272626F8517B57517B517B578282ACACCECECECDCEA6
%5120262026F8272626F827517B50515051F827F8262682CDCECDCECDCECD
%CECDCECDCECDCEACCEA6A67BA67BA67B7C517B7BA67B57507B5157505150
%5150515027F8272626F827F8517BA67BA67B7B517B507B5157507B515750
%7B5027F8272626F8CFFFFFFF7CF8F826F826F826F820F8F8F820F8F8F826
%F826267B7BCDCDCECDA64A26F826F826F826F851505126517B27F8267BCD
%CDCEACCDACCEACCDA6A681A67BA6FD0F7BA657515057505150512C512651
%5026F826F826F826F8517B7B50515051505150575051505750512C512626
%F826F8F852FFFFA826F8262026F8262026F8262026F8262026F826F820F8
%26265181CECECD7B51F826F8262026265750517BCEA6A6A6CECDCECDCEA6
%A67BA67B7C7B7C7B7B7BA67B7C7BA67BA6A6CD817C7BA67B827BA67B5750
%575157505750512C515051F8262026F826267B5057515750575157505751
%57507B505150512626F826F851FFFF52F826F826F826F826F826F826F826
%F826F826F826F826F826F8F8267BACCD7B2CF826F826F85026515081A6CE
%CDCEACCDA5A6FD117BA6ACCDACCEFD097B51505150515051265026512C26
%F826F826F8262651505150515051505150515051265126512C26F826F826
%F8A8A8F826F8272626F8272626F8272626F8272626F8272626F8272626F8
%26F8517B825151F827F82750512C7B7BA6ACCDA6A67B7C7BA67BA67BA67B
%A67BA67BA67BA67BA67BA6ACCECDCECDAC7BA67BA67BA67BA67B7B515750
%7B51575051505150512026F8272026507B5157507B5157507B5151505150
%512C512626F82720267D2720F826F826F826F826F826F826F826F826F826
%F826F826F826F826F826F8F826515026F8272C5126517B7B7B7CFD077B7C
%7B7B7B7C7B7B50FD047B7C7B7B7BCDACCDACCEA67B7B7C7B7B7B7C7B7B7B
%5750515057505126512C512626F826F826F82650575051505750512C51FD
%0626F826F826F826F85126F8262026F826F820F8262026F826F826F826F8
%26F8262026F8262026F8262026F85151575051507B7BA67B827BA67B827B
%A67B827BA67B827BA6515151A67B827BA67B7CA6CECDCECDAC7BA67BA67B
%827BA67BA67B7B5057505751512C5150512C262026F826F851505751512C
%51FD04262026F8262026F8262026F82626F826F826F8F8267C7DA77DA8A7
%A87DA77D7D52522726F8F8F826F826F826F826F826F851505026FD157B50
%FD087BA6ACCECDCDFD0D7B57505150515051265126512626F826F8262651
%26502626F826F826F826F826F826F826F826F826F82651F827262652FD0F
%FFA8A85227F8272626F8272626F827F851505151A67BA67BA67BA67BA67B
%A67BA67BA67BA67BA67BA67BA67BA67BA67BA67BA6A6A67BA67BA6A6CD81
%827BA67BA67BA67B7B507B51575051505150512626F827202626272026F8
%272626F8272626F8272626F8272626F8262652F8F820F8CFFD12FFA726F8
%26F826F826F826F826F8502C517B7B7B7C7B7B7BCDACA67B7C7B7B7B7C7B
%7B7BA67B7B7B7C7B7B7B7CFD087BA6CEACCD7B7B7B7C7B7B7BA67B515057
%505150512C512C51F826F826F826F826F826F826F826F826F826F826F826
%F826F826F876CF262620A8FD13FF7CF826F826F826F8262026F826265126
%7B7BA67BA67BA6CDCEA67B7BA67B7C7BA6A6CEACA67B827BA67B827BA67B
%827BA67B7C7BCECDCECDA67B827BA67B827BA67B57505751575051505150
%27F826F8262026F8262026F8262026F826F826F826F826F826F827A8FFFF
%7DFD14FFA8F826F826F85126F8F826F826F82626502CFD067BACA6A6FD07
%7BCDACCD81FD0F7BA6CECDCD50FD097B515150515051265126512626F826
%F826F826F826F826FD05F827275252FD047DA8A8FD18FF52262626F827A6
%CE51262026F82720272C577BA67BA67BA67BA67BA67BA67BA67BA6A6CECD
%AC7BA67BA67BA67BA67BA67BA67BA67BA6A6CD7B517BA67BA67BA67BA67B
%A6515751575051505150512626F8272626F826F826F827517D7DFD22FFA8
%26F826F8F851CECDA62626F826F826F82C50A67B7B7B7C7B7B7B7C7B7B7B
%7C7B7B7BA6A6ACFD057B7C7B7B7B7C5757507CFD057B5750FD047B7C7B7B
%7B7C7B7B5051505150512C512C27F826F826F820F85152A8A8FD25FF7DF8
%26F82620ACCDCE7BA626262026F8262C7C7BA67B827BA67B827BA67B827B
%A67BA67BA67B7C7BA67B827BA67BA67B5750517BA67B827BA67BA67BA67B
%827BA67B827BA67B7B505751512C51505126262026F82652FD2AFF2620F8
%26F851CDCDA67B7B7BF826F826F851FD1A7B507B7B7B505150FD147B5150
%51505026512650F826F826F87DFD29FFA7262026F826A6CECDCE7BA67B51
%F826F82651A67BCDA6A67BA67BA67BA67BA67BA67BA67BA67BA67BA67BA6
%505751827B7B517B7BA67BA67BA6A6A67BA67BA67B82577B7BA67BA67B57
%51515051505150512026F82651FD29FF52F826F8F826CEACCDA57B7B8126
%26F826F8517BACCDCEA67B50FD047B7C7B7B7B7C7B7B7B7C7B7B7B7C7B7B
%50FD047BA67B7B7B7C7BA6ACCECDCDFD047B5051507B7B7C7B7B50515051
%26512C512626F826F826A8FD28FF2626F826F882CDCECDA67BA67B51F826
%202651A6A6CEACA65151507C7B827BA67BA67BA67B827BA67B827BA67BA6
%7BA67B827BA67B827B7CA6CEACCECDA67BA67B7B507B7B827BA67B7B5051
%50512C515026F8262026F8A8FD27FF7D20F826F826A6CDACCDFD057B26F8
%2626FD057B5751505151FD047B5151FD167BA6ACCDACCE81FD0B7B51512C
%5126512626F826F826F8F852FD27FF7DF826F82651CECDCECDA67BA67BA6
%7B7B7BA67BA67B7C7BA6575751A67BA67B51F82651A67BA67BA67BA67BA6
%7BA67BA67BA67BA67BA67BA6A5CECDCECDA67BA67BA67BA67BA67BA67B7B
%507B505126272026F8272626F852FD27FF2726F826F8A6CDCDACCD7B7B7B
%A67B7B7BA67B7B7B7C7B7B7B7C7B7B7B7C7B51F826F8F84AA67B7B7B7C7B
%7B7B7C7B7B7B7C7B7B7B7C7B7B507B81CDA6A67B7B7B7C7B7B7B7CFD047B
%505150572626F826F826F826F826F8FD26FFA826F826F826A6CECDCEA6A0
%7B7B517B7B827BA67B827BA67B827BA67B827B7C2626F826202626A67BA6
%7BA67B827BA67B827BA67B827B7C50577BA67BA67BA67B827BA67BA67BA6
%7BA67B7B515126262026F8262026F8262026A7FD25FF7DF826F82026CDAC
%CDACA67B7B505150FD0F7B5126F826F826F8F820517B81FD1A7B517B7BA6
%7B7B5051F820F826F826F826F826F826F87DFD25FF5220F827F87CCDCECD
%CE81A6575750577BA67BACACA67BA67BA67BA67BA67B7C2626F8272626F8
%26F827507B7BA67BA67BA67BA67BA67BA67BA67BA67BA67BA67BA67B8226
%26264B26512627F826F8272626F8262627F827262652FD25FF51F826F826
%7BCEACCEACA67B7B5051507B7B7BACCEA67B7B7C7B7B7B7C7B7B7B27F826
%F826F826F826F820F826265150FD047BA67B817BA67B7B7B7C7B7B7B7C7B
%812620F826F826F820F826F826F826F8F826AC2620F826F827FD25FF2626
%202620CECDCEACCE7B7B7B7C7B7B7BA67BACACA67B827BA67B7B7BA67B7C
%26262026F8262026F8262026F826F826F826262726512651517B7BA67BA6
%7B827BA67B26F8262026F8262026F8262026F82651CECD51F826F82626FD
%24FFA726F826F826ACCEACCDA67B50577BA6FD0B7BA6A6AC7B7B7B26F826
%F826F826F826F826F826F826F826F826F820F826F820F851FD077B51F826
%F826F826F826F826F826F8267BCEACCE51F8F826F8267DFD23FFA7F82726
%2651CECDCECDCE5157507B7BA67BA67BA67BA6A6A67BA6A6CECDCE7B7CFD
%0426F827F826F8272626F8272626F8272626F8272626F826267C7BA67BA6
%7BA62626F8272626F8272626F826F851A6CECDCECDA6F826F827F87DFD23
%FF52F8F826F87BCDCEACCDA657505150FD047B7C7B7BA6CE7B7B7BCDCDCD
%A6A67B26F826F8262026F820F826F826F826F826F826F826F826F826F826
%50577BA67B7B7B51F826F826F826F826F826267CCDCEACCECDCEA626F826
%F82051FD23FF52F826F8267BCEACCECDCD505751577BA67BA67BA67BA6A5
%A67B7B81CECDA67BA62626F826F827827C2626F826F826F8262026F82620
%26F8262026F85151577BA67BA65126F826F8262026F826F851A6CECDCEAC
%CE8251F8262026F851FD23FF2720F826F8A6CDCDACCEA651505150FD057B
%57FD087BA67B7B7B51F826F826F87BCDCD817B2626F820FD05F826F826F8
%26F820265750FD047B815026F826F826F826F826F82020512627F820F826
%F826F820F8FD23FF51F826F826A6CECDCECDCE517B517B7BA67B7B507B51
%827BA6A6A67BA67BA67BA65126F8272626F8A6CECECDCECDAC82A67B7B51
%512627F8272626F851515751A67BA67BA65026F8272626F8272626F826F8
%26F8262026F8272626F826A7FD22FFF826F826F8A6CDCDACCEACFD077B50
%515051517B7BCEAC7B7B7CFD047B2026F826F820F8A6CDCEACCECDCECDCE
%CDCECDAC2620F826F8262657507B7B7CFD047B2626F826F826F826F826F8
%26F826F826F826F826F826F87DFD22FF27F826F826A6CECDCEACCE7BA67B
%A67B7C50575157507B7BA6A6CD7B7C7BA67B827B51F826F8262026F87BA6
%CECDCECDCECDCECDA626262026F826265750577BA67BA67BA67B7B5026F8
%262026F8262026F8262026F8262026F826202051FD22FF2020F826F8A6AC
%CDACCDACA6FD057B515051505150FD0C7B26F826F826F826F8262651507B
%7B7B5151F8F8F826F826F851505150FD077B50575026F826F826F826F826
%F826F826F826F826F826F827A8FD21FF27F827202682CECDCECDCEA67C7B
%A67BA657575157507B7BA67BA67BA67BA67BA67BA65126F8272626F82720
%26F826F826F826F826F8272626F8275157507B7BA67BA67BA67BA6515751
%512626F8262026F8272026F8272626F827262620FD22FF2620F826F87CCD
%CEACCDACA67B7B7B7C7B7B5157507B7B7C7B7B7B7C7B7B7B7CFD047B2620
%F826F826F826F826F826F826F826F826F826F8262657507B7B7C7B7B7B7C
%FD047B505150572C2626262026F8FD0426512626F826F8F87DFD21FF51F8
%26F8267BCEACCECDCEA67C7B827BA67BA67BA67BA67B7C7B827BA67B827B
%A67BA67B572626F8262026F8262026F8262026F8262026F8262657507B7B
%A67BA67B827BA67B827B7C5151507B50512C5150512C5150515051F826F8
%26F87DFD21FF51F8F826F851CDCDACCDACACFD0B7BA6FD0C7B50512620F8
%26F826F826F826F826F826F826F8262657505151FD0D7B50515051505126
%512650265126512626F826F82027FD21FF7DF826F82626CECDCECDCEACA6
%7BA67BA67BA67BA67BA6ACCEA67C7BA67BA67BA67BA67B7C51572627F826
%F8272026F8272026F8262027507B51577BA67B7C7BA67BA67BA67BA67BA6
%7BA67B7B5157505750515051505150512626F827F827FD21FF7D26F826F8
%2681CEACCEACCDFD057B7C7B7B7B7CA6CDACAC7B7B7B7C7B7B7B7CFD047B
%505750512626F826F826F826F826265150515051577B7BAC7B7B7B7C7B7B
%7B7C7B7B7B7CFD047B505150575051505150515026F826F826F8A8FD21FF
%F8262026F87CCDCEACCECDA67BA67B827BA67B7B7BCECDCEA5A07BA67BA6
%7B827BA67BA67B7B5057505150512651262726515051507B50577BA6A5CE
%CDCE7B7B7B7C7BA67BA67B827BA67BA67BA67B7B50575157507B51572626
%2026F8267CFD21FF27F826F8F826CDACCDACCEA6FD057B517B7B7BA6CEA6
%7B50FD0D7B5051505150512C5150515051505150FD047BA6CDCDAC7B5057
%505151FD0D7B517B505150515051F826F826F851FD21FF52262626F826A6
%CECDCECDCE7BA67BA67B577BA67BA6A67B507B51577BA67BA67BA67BA67B
%A67BA67B7B5157505751575057517B51827BA67BA67BCECDCD5157507B51
%577BA67BA67BA67BA67BA67BA67BA67B82517B517B50272026F82626FD21
%FFA8F826F826F851CDCDACCECDA67B7CFD087B50515057507B7B7C7B7B7B
%7C7B7B7B7CFD047B577B507B517B51FD047B7CFD057BA67B7B7B51505750
%7B51FD047B7C7B7B7B7C7B7B7BA67B512C5750512626F826F8267DFD21FF
%4BF826202620CDCDCEACCEAC7C7BA67BA67BA67BA67B575157505757A67B
%A6A6CDACA67B827BA67BA67BA67BA67BA67BA67BA67B827BA67B827BA67B
%A67B7B51575057515150577BA67BA67B827BA67BA65126F826507B5151F8
%262026F87CFD21FF52F8F826F8F851CEACCDACCEFD0A7B505150512CFD04
%7BCEACCDACA6FD197B515051505150515051505157FD087B26F826F82650
%512C26F826F82026FD22FFF8262626F827ACCECDCECDCD7BA67BA67BA67B
%A67B7C5157507B7BA67BA6CDCECDCEA67C7BA67BA67BA67BA67BA67BA67B
%A67BA67BA67BA67BA67B7B507B5157507B5157507B517B7BA67BA67BA67B
%7BF8272626267B5151FD0426F826A8FD21FF51F826F826F87CCDCDACCECD
%A67B7C7B7B7BA6FD077B7C7B7B7BCECDCDACA67B7B7B7C7B7B7B7C7B7B7B
%5126517BA67BA6A6AC7B7B7B7C7B5150575051505750515057507B7B7C7B
%7B7BA650F8F826F82626575026F826F826F87CFD21FFA126F826202626CE
%CDCEACCEACA67BA67B7C7BA67B827BA67BA67BA67B7B81CDACA67BA67B82
%7BA67B827BA67B51F826F8517BA6ACCECDA67B827BA67B57505751575057
%5157507B7BA67BA67BA67B51F826F826F82750575026F826202626FD22FF
%26F8F826F8F87BCEACCDACCEA5FD0F7B50515057FD0B7B51F826F826F87B
%7BCDCDCDFD067B5051505150515051505150FD077B2626F826F826F85150
%512620F826F8F87DFD21FF7DF8272626F851CDCECDCECDCE7BA67BA67BA6
%7BA67BA67BA67BA67B575057507B7BA67BA67BA67BA67B7C2626F8272026
%51A681CDA6A67BA67BA67B57507B5157507B5157507C7BA67BA67BA67B4B
%F826F8272626267B5051F8272626F852FD21FFA827F826F826F882CDCDAC
%CECDCDFD057BA67B7B7B7CFD047B50515051507B7B7C7B7B7B7C7B812626
%F826F826F851FD057BA67B57507B5051505750515051507B7B7C7B7B7B7C
%7B7BF826F826F826F82650512626F826F826F8A8FD21FF76F8F826202626
%CECDCEACCECDA67BA67B7B7BA67B827BA67BA67B575157507B7BA67BA6AC
%A67BA65126F8262026F82651A67BA67BA67B7B5051517B51575057515751
%827B827BA67B827BA67B26F8262026F826F82D50512626F826202052FD22
%FFF820F826F8F87BCEACCDACCDACA67B7B505150FD077B505150517B7B7B
%81ACCEA67B7B26F826F826F826F851FD067B5051507B50515051505151FD
%0B7BF826F826F826F826F8265051F826F826F826A8FD21FF7CF8272626F8
%51CDCECDCECDCEAC7B505750577BA67BA67BA67BA67B7B7BA67B827BCECD
%A67B51F826F8272626F82626A67BA67BA67BA67B7B7BA65157505757A67B
%A67BA67BA67BA67BA65126F8272626F8272626F8575127F8272626F87DFD
%21FFA826F826F826F8A6CDCDACCEACCE7B51505150FD087BA67B7B7B7C7B
%7B7BA67B7BF826F826F826F826F826507B7B7C7B7B7BA6FD077B827B7B7B
%7C7B7B7B7C7B7B7B51F826F826F826F826F8262026F826F826F826F8A8FD
%21FF5220F826202626CECDCEACCECDCE5757515750A67BA67BA67B827BA6
%7B827BA67B7B7BA62626F8262026F8262026265757A67BA67B827BA67B82
%7BA67BA67BA67B827BA67B827BA67BA626262026F8262026F8262026F826
%2026F82620F87CFD21FFA8F826F826F8F87BCEACCDACCDCDA62C51507B7B
%A6A6CD81FD087B27F8515026F826F826F826F826F8265057FD197B26F826
%F826F826F826F826F826F826F826F826F87DFD22FF52F8272626F851CDCE
%CDCECDCECDA6507B7BA67BCECDAC7BA67BA67BA67B51F826F8272026F827
%2627202726262057517B7BA67BA67BA67BA67BA67BA67BA67BA67BA67BA6
%7BA67BA6FD0426F8272626F8272626F8272626F827262627FD22FFA820F8
%26F826F882CDCDACCEACCDA6FD067BA6FD057B7C7B7BF826F826F826F826
%F8272726F826F8265057517B7B7C7B7B7B7C7B7B7B7C7B7B7BA6FD047B57
%7B507B5126F826F826F826F826F826F826F826F826F826F8F87DFD22FF51
%20F826202626CECDCEACCECDCEA67C7B827BA67B7C7BA67B827BA65126F8
%262026F826202627512026F8262051507B7BA67BA67BA67BA67BA67BA6FD
%067B5057505750512026F8262026F8262026F826F826F8262026F826F827
%CFFD21FFA8F826F826F8F851CEACCDACCDACCDFD0D7B51F826F826F826F8
%26F8262626F826F8262C5150FD097B517B505750515051505150575050F8
%26F826F826F826F826F8F8F8262626F826F826F826F87DFD22FF76F82726
%26F827ACCECDCECDCECDCE7BA67BA67BA67BA67BA67BA67B26F8272626F8
%272626F8272626F82720515157577B7B7B577B517B515750575157507B51
%7B50512626F8262626F8272626F826F827507C7BA67B51F826F827262627
%FD22FFA826F826F826F851CDCDACCEACCDACA67B7B7B7C7B7B7B7C7B7B7B
%A65026F826F826F826F826F826F826F8262C575057505150515051505750
%515057505150512626F826F826F826F826F826F82026757BA57B7B505150
%27F826F826F826A8FD22FF7620F8262026F8A6CDCEACCECDCEACA67B827B
%A67B827BA67B7B7BA67B26F8262026F8262026F8262026F8272651505751
%57507B5157507B51512C512626F826F826F8262026F8262026F85151A67B
%A65151505751575027F826F82626CFFD23FF26F8F826F8F826CDACCDACCD
%ACCD81FD097B50577BA67B51F826F826F826F826F826F826F826F826F8FD
%042651FD0426F826F826F826F826F826F826F826F82026517BA67B7B5051
%5051505150512626F826F8267DFD23FFA7F8272626F82657CECDCECDCECD
%CE7BA67BA67BA67B7B5057507B7BA67B7B2626F8272626F8272626F82726
%26F8272026F826F826F8262026F8272626F8272626F8272626F82751A67B
%A67B7C51575157507B505150512626F82620A8FD24FF51F826F826F82682
%CEACCEACCDACA67B7B7B7C7B7B5051505151A6FD047B5026F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F826F826F820F857
%A6CEACA67B7B50515057505150512C512626F826F826A8FD24FFA826F826
%2026F84BCDCEACCECDCEA6A67B827BA67B7B5057517B7BA67B827BA67B51
%F826F826F8262026F8262026F8262026F8262026F8262026F8262026F826
%F82751CDCDCECDCECDA650575157507B51512C515051F826202626FD26FF
%52F8F826F826F851CDCDACCDACCDFD087B51FD087BA67B7B2626F820F826
%F826F826F826F826F826F826F826F826F826F826F820267CA6CEACCDACCD
%ACCE5751505150515051265026512626F826F84BFD27FF27262626F827F8
%7CCDCECDCECDCD7BA67BA67BA67B827B7C7BA67BA67BA67BA67BA67B5126
%26F826F8272626F8272626F8272626F8272026F826265782CECDCECDCECD
%CECDCE8151507B51575057505150515027F827262052FD27FFA8F826F826
%F826F8A6CDCEACCDACA67B7B7B827B575051507B7B7C7B7B7B7C7B7B7BA6
%7B7B51512626F820F8F8F826F820F826F8F8F82626517BCDCDCEACCEACCD
%ACCECDCE7B5150515057505126512C512651F826F826F8A8FD28FF7DF826
%2026F82626CDCDCECDCEACA67B827B7B5057505751A67BA67B827BA67BA6
%7BA6CDCDACCDA68251512627262726272651517CA6CECDCECDCECDCEACCE
%CDCECDCE7B51507B5157505750512C51505126262026F827FD2AFF51F826
%F826F82026ACACCDACCDA67B7B7B505150515051FD087B517B7BCDCDCDAC
%CECDCEACCDA6ACA6CDA6CDACCECDCDACCDACCDACCDACCDACCEACA6505150
%51505150512651265026512626F826F8F851FD2AFFA827F826F827262626
%CECDCECDCE7BA67B7B5157507B51A67BA67BA67BA6515151A67BCECDCECD
%CECDCECDCECDCECDCECDCECDCECDCECDCECDCECDCECDCEA67B5057515750
%7B51575051505150515051F8272626F8A8FD2BFFA726F826F826F8F826CD
%CDCDACA67B7B5751505150FD047B7C7B7B7B5750FD047BCDACCEACCDACCE
%ACCDACCEACCDACCEACCDACCECDCDACCDA67B505150515057505150575051
%26512C512C51F826F826F851FD2DFF7D262026F826202026CDCDCEA6A67B
%A67B7B517B7BA67B827BA67BA67B7B7BA67BA67BA6A6CECDCECDCECDCECD
%CECDCEACCEACCDA6ACA682575750515057515750575157505150512C5150
%5126262026F8267DFD2EFF52F8F826F826F8F8F8A6A67B50FD187BA6A5A6
%A5A6A6A681A67BA5FD047B50575051505150515051505150512C50265126
%5026512620F826F8F827FD30FF5226F827262620262651507B5157517B57
%7B7B827BA67BA67BA67BA67BA67BA67BA67BA67B7C7BA67B7C7BA67B7C7B
%A67B7B50575157507B5157507B5157507B50515051505150512C26F82726
%26F8A8FD31FF51F8F826F826F826F82650575051505150515057507B517B
%57FD0E7BA67B7B7BA6FD047B50515057505150515051505750512C512C51
%26512C512626F826F826F852FD33FF5220F8262026F826F826267B515150
%5751575057515750575157505751575057515750FD047B7C7B7B517B5157
%50575051505150512C515051507B51512C5150512C515026F8262026F827
%A8FD34FF51F8F826F826F826F820F8512651265150515051505150515051
%505150515051505150515051505150512C512C5126512650265126502651
%26512C512650265126512626F826F826F8F87DFD36FF5226F826F8272626
%F82620272651505150515157507B5157507B5157507B5157507B51575057
%505150515051505150515051505150515051505150515051505150512026
%F827262052FD38FF7C26F826F826F826F826F826F8512651265150515057
%5051505750512C5150512C512C5126512C5126512C5126512C5126512C51
%26512C5126512C512C512626F826F826F82027FD3AFFA727F826F8262026
%F8262026F82626512651505150515051505150512C5150512C5150512C51
%50512C5150512C5150512C5150512C515051505150512626F826F8262026
%26FD3CFFA851F820F826F826F826F826F826F8262026265026512C512651
%2C502651265026512650265126502651265026512C5126512C5126512650
%2626F820F826F826F820F8A8FD3EFFA726262026F8272626F8272626F827
%202626272651265150515051505150515051505150515051505150515051
%2C512C5126512626F8272026F82726262026F8A8FD41FF5126F826F826F8
%26F826F826F826F826F826F826F82620FD112620262026F826F826F826F8
%26F826F826F826F8F8F8A8FD43FFA852F820F8262026F8262026F8262026
%F8262026F8262026F826F826F826F826F826F826F826F826F8262026F826
%2026F8262026F8262026F82027A8FD46FFA85126F820F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F826F826F826F826
%F826F826F826F826F826F8F851FD4AFFA87D2726F8262026F8272626F827
%2626F8272626F8272626F8272626F8272626F8272626F8272626F8272626
%F8272626F826F8517DFD4EFFA77C2726F8F8F826F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F826F820F8264BA8
%FD53FFA8A752512626F8F8F826F826F8262026F8262026F8262026F82620
%26F8262026F826F826F8262027517DA8FD5AFFA1A152522727F826F826F8
%26F826F826F826F826F826F826F826F8262651517D7DA8A8FD1AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-19T14:00:10+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-19T14:00:10+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-19T14:00:10+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>228</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA5AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYqhtR1LT&#xA;tMs5b7UbqKzs4RymuZ3WONR4szEAYkq8R88f85ZeUdKZ7XyxaSa5dLt9aetvaA+xYepJT/VA8Gym&#xA;WYDkyEXiPmb/AJyK/NfXmdf0udLtm6W+mr9W4/KUcp/+SmVHLIsuEPP9Q1jV9Sf1NRvri9kJqXuJ&#xA;XlNd+7k+OVkpQySPG4eNijrurKaEfIjFWV+X/wA2fzJ8vuraZ5hvY0XpBLIbiH/kVN6ifhkhMhFP&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:b455cb8e-2df6-4647-8886-7b9fb526c1d8</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:b455cb8e-2df6-4647-8886-7b9fb526c1d8</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:164e0c1a-b3b9-6e41-a80d-419c86d5e001</stRef:instanceID>
            <stRef:documentID>xmp.did:164e0c1a-b3b9-6e41-a80d-419c86d5e001</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:78ead596-65d4-664f-9311-ff5d6a6a9ec8</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:46:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:170ebbf7-4b79-5343-9e6b-0d3f9d7a2ef3</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:56:13+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d7886bab-91ac-7048-a0fb-9440b5348aa7</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:164e0c1a-b3b9-6e41-a80d-419c86d5e001</stEvt:instanceID>
                  <stEvt:when>2018-02-19T11:25:49+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b455cb8e-2df6-4647-8886-7b9fb526c1d8</stEvt:instanceID>
                  <stEvt:when>2018-02-19T14:00:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>444.317793</stDim:w>
            <stDim:h>396.314884</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -396.315 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 396.315 li
444.318 396.315 li
444.318 0 li
cp
clp
426.537 77.4238 mo
421.628 45.9102 386.383 25.0488 356.433 32.187 cv
343.444 35.2827 332.655 43.0601 319.647 46.4868 cv
300.58 51.5098 282.501 48.7568 262.979 47.415 cv
241.979 45.9722 215.751 40.1069 195.25 46.9385 cv
191.638 48.1416 188.399 49.7266 185.441 51.5376 cv
174.821 38.6782 159.863 28.9614 143.448 23.3286 cv
103.994 9.7876 71.6086 32.2026 37.7922 50.0381 cv
19.0295 59.9331 35.2058 87.4707 53.8606 81.9395 cv
68.1418 77.7046 101.334 78.3589 106.565 98.23 cv
106.631 98.4819 106.638 98.7661 106.683 99.0298 cv
103.523 101.247 100.348 103.48 97.7536 106.521 cv
92.5944 112.567 91.4284 118.871 89.2907 126.26 cv
86.3689 136.362 78.4646 150.913 82.4231 161.305 cv
80.3454 169.729 78.9836 178.275 78.7209 186.895 cv
74.1609 195.504 78.3571 209.478 83.7263 221.497 cv
91.7404 248.549 106.491 275.807 125.035 299.272 cv
132.386 319.168 142.067 338.016 159.425 350.465 cv
185.498 369.164 222.333 382.319 254.136 385.603 cv
311.171 391.494 401.527 386.062 412.242 312.488 cv
414.655 295.918 409.816 280.762 403.572 265.58 cv
394.817 244.294 388.977 225.848 385.219 202.888 cv
380.118 171.738 371.953 142.708 360.013 114.277 cv
379.149 111.917 400.274 111.759 414.847 103.727 cv
425.765 97.7104 428.409 89.4395 426.537 77.4238 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.647059 .65098 .227451 rgb
f
397.184 289.27 mo
394.802 288.589 392.124 289.48 390.177 291.015 cv
387.378 290.874 384.544 291.534 382.089 293.234 cv
370.501 301.257 362.237 313.138 350.68 321.433 cv
338.63 330.081 326.202 336.958 311.652 340.185 cv
307.668 341.069 305.286 343.678 304.191 346.86 cv
301.473 347.611 298.753 348.278 296.031 348.758 cv
288.35 350.113 280.471 351.083 272.55 351.6 cv
259.652 345.19 240.05 348.282 226.328 347.344 cv
225.41 347.079 224.473 346.882 223.56 346.591 cv
222.021 346.099 220.608 346.154 219.341 346.547 cv
209.952 345.443 200.614 343.975 191.359 342.026 cv
187.084 341.125 169.936 339.953 166.726 336.745 cv
165.802 335.822 164.273 336.314 163.709 337.342 cv
155.184 352.901 195.319 364.523 203.511 367.324 cv
217.743 372.193 245.232 381.848 264.553 378.06 cv
274.048 380.039 283.822 381.126 294.17 380.936 cv
306.984 380.7 325.366 379.07 339.155 372.449 cv
347.957 372.11 356.363 369.785 364.572 366.442 cv
368.199 367.15 372.082 366.418 375.634 363.554 cv
376.77 362.638 377.67 361.719 378.644 360.803 cv
378.684 360.85 li
380.142 359.311 381.822 358.07 383.725 357.125 cv
390.362 352.994 391.976 346.87 390.468 341.35 cv
391.359 340.531 392.249 339.707 393.113 338.787 cv
404.099 327.084 422.424 296.48 397.184 289.27 cv
cp
.419608 .458824 .0901961 rgb
f
390.342 238.001 mo
389.512 237.402 388.663 236.975 387.811 236.614 cv
387.405 235.741 387.006 234.853 386.57 234.035 cv
384.991 231.068 383.427 228.123 381.89 225.164 cv
383.618 216.338 379.936 208.181 376.804 199.792 cv
377.596 198.325 378.236 196.768 378.471 194.881 cv
379.846 183.787 368.917 176.434 359.206 182.044 cv
355.513 184.178 352.378 186.847 349.431 189.922 cv
348.545 190.847 347.939 191.853 347.465 192.884 cv
342.933 191.563 338.493 189.973 334.133 187.876 cv
327.071 184.479 316.649 180.561 311.284 174.946 cv
307.639 171.129 301.842 175.943 303.251 180.381 cv
309.787 200.968 334.643 214.755 355.244 216.648 cv
355.475 216.668 355.659 216.594 355.885 216.602 cv
357.63 222.038 359.456 227.357 363.329 231.693 cv
363.629 240.396 365.819 250.754 371.285 256.922 cv
373.138 260.861 375.471 264.561 378.559 267.879 cv
386.322 276.225 399.282 267.502 398.998 257.745 cv
398.779 250.17 396.734 242.619 390.342 238.001 cv
cp
f
341.946 279.235 mo
338.535 277.891 336.731 277.208 333.292 277.329 cv
328.931 277.482 324.066 280.824 319.788 281.708 cv
315.572 282.579 310.927 282.457 306.617 283.186 cv
292.345 285.602 277.64 288.182 263.074 289.31 cv
262.889 289.124 262.788 288.899 262.578 288.724 cv
262.511 288.429 262.337 287.975 261.923 287.168 cv
261.694 286.54 261.464 285.909 261.236 285.279 cv
260.453 283.075 259.741 280.846 259.043 278.615 cv
257.758 274.507 256.416 270.45 255.05 266.37 cv
253.595 262.023 246.448 261.076 244.632 265.72 cv
241.508 273.701 238.519 284.832 241.776 293.195 cv
241.778 293.191 241.779 293.186 241.78 293.181 cv
242.591 295.571 244.906 297.011 247.315 297.091 cv
248.821 300.313 251.196 302.866 255.422 303.567 cv
258.716 304.113 261.432 302.893 263.208 300.882 cv
289.601 306.665 320.788 301.05 342.323 284.809 cv
344.105 283.466 344.342 280.18 341.946 279.235 cv
cp
f
276.959 168.258 mo
274.601 166.82 270.976 167.234 268.804 168.811 cv
266.225 170.682 264.512 173.773 263.613 177.189 cv
252.276 185.685 248.515 200.589 231.523 203.155 cv
220.001 204.894 201.212 201.005 194.926 190.468 cv
191.639 184.957 183.393 189.594 185.182 195.376 cv
191.781 216.698 211.38 225.018 232.932 223.967 cv
249.163 223.176 269.942 210.375 276.871 193.993 cv
276.939 193.956 277.02 193.952 277.086 193.912 cv
281.99 191.002 283.107 185.845 283.27 180.545 cv
283.431 175.334 281.458 171.002 276.959 168.258 cv
cp
f
228.027 51.751 mo
227.61 51.7793 227.654 52.4248 228.071 52.3965 cv
228.484 52.3687 228.442 51.7227 228.027 51.751 cv
cp
f
312.318 63.686 mo
288.558 47.9419 263.378 41.6362 235.149 45.9795 cv
230.967 46.623 231.276 52.6914 235.597 52.5972 cv
259.309 52.0815 277.324 70.7993 293.701 85.7202 cv
307.548 98.3364 320.563 112.085 327.686 129.673 cv
327.432 132.582 327.607 135.435 328.57 138.178 cv
327.866 138.956 327.177 139.713 326.494 140.378 cv
322.925 143.856 327.399 149.851 331.799 148.219 cv
334.025 147.394 336.68 146.751 339.001 145.701 cv
340.848 145.498 342.64 144.62 344.084 142.739 cv
344.396 142.333 344.568 141.862 344.845 141.44 cv
353.598 141.219 361.994 135.099 360.717 124.141 cv
357.668 98.0024 332.904 77.3296 312.318 63.686 cv
cp
f
425.284 62.729 mo
424.436 62.501 423.645 62.3521 422.864 62.2183 cv
423.372 56.4927 421.943 50.2808 418.388 46.0029 cv
415.585 42.6289 411.462 40.748 407.092 42.2734 cv
403.38 43.5698 399.803 48.0015 400.58 52.1445 cv
400.694 53.0439 400.726 53.9395 400.827 54.8389 cv
400.872 55.2241 400.93 56.1104 400.985 56.2959 cv
400.842 57.7813 400.391 59.3535 399.883 60.7656 cv
399.847 60.7993 399.645 61.2329 399.452 61.6006 cv
399.016 62.4409 398.689 63.2974 398.343 64.1748 cv
398.032 64.9668 397.741 65.7686 397.489 66.582 cv
392.341 67.3291 387.142 67.5605 381.88 68.0933 cv
370.135 69.2842 357.447 70.9482 351.258 82.1689 cv
346.901 90.0703 354.048 97.6279 361.762 97.9023 cv
385.364 98.7466 409.355 103.409 430.703 89.8013 cv
442.182 82.4854 437.165 65.9224 425.284 62.729 cv
cp
f
173.643 37.2344 mo
172.854 36.7559 170.438 36.1948 169.884 35.5273 cv
169.789 35.5337 li
169.543 35.2261 169.355 34.917 169.071 34.6104 cv
167.239 32.6304 163.475 33.3408 162.052 35.5518 cv
160.179 31.2363 154.191 28.6616 151.543 23.8052 cv
146.579 14.7026 131.583 27.3735 142.586 34.062 cv
143.833 34.8198 145.005 36.311 146.06 37.8999 cv
141.852 41.6055 134.234 40.6006 131.864 46.666 cv
130.015 51.3979 133.65 53.3174 134.674 57.2495 cv
134.697 57.3408 134.716 57.3696 134.74 57.4536 cv
132.783 57.2539 130.802 57.063 128.873 56.7451 cv
125.672 55.6284 122.219 59.4746 123.414 62.645 cv
124.339 65.1025 125.714 66.8022 127.61 68.0938 cv
126.349 69.3218 125.086 70.5229 123.921 71.6743 cv
120.941 74.6206 115.807 77.7734 112.762 81.7266 cv
106.472 84.0918 104.127 94.9263 111.728 97.8438 cv
115.179 98.876 118.327 100.519 121.169 102.774 cv
125.105 105.72 132.251 105.645 134.321 100.167 cv
136.048 95.5913 137.834 91.2324 139.831 86.9756 cv
140.654 85.8052 141.482 84.6392 142.321 83.4585 cv
142.393 83.3555 142.473 83.2412 142.547 83.1367 cv
145.213 80.1064 148.179 77.1641 150.783 74.8174 cv
152.45 73.3145 152.349 70.8525 151.925 68.9019 cv
151.785 68.2583 151.535 67.8057 151.353 67.2354 cv
152.196 66.707 153.04 66.1924 153.874 65.5513 cv
154.277 65.2422 154.717 64.9063 155.152 64.5728 cv
156.395 64.3535 157.691 63.8486 159.005 62.96 cv
159.723 62.6885 160.443 62.4175 161.163 62.1455 cv
164.739 61.8057 167.417 59.5498 168.647 56.6636 cv
171.446 54.7334 174.112 52.6597 176.221 50.2349 cv
179.998 45.894 178.195 39.9971 173.643 37.2344 cv
cp
f
277.802 105.691 mo
271.778 106.099 272.403 115.461 278.436 115.053 cv
284.46 114.645 283.836 105.282 277.802 105.691 cv
cp
f
254.088 79.0112 mo
244.324 79.6724 245.335 94.8462 255.115 94.1836 cv
264.877 93.5225 263.866 78.3486 254.088 79.0112 cv
cp
f
261.465 68.7705 mo
258.838 68.7441 258.532 73.0635 261.154 73.4097 cv
262.425 73.5776 263.382 73.4883 264.646 73.3047 cv
265.456 73.1875 265.936 72.4927 265.709 71.6929 cv
265.081 69.4731 263.652 68.792 261.465 68.7705 cv
cp
f
209.033 86.2959 mo
203.217 86.6899 203.82 95.7295 209.646 95.335 cv
215.462 94.9414 214.859 85.9014 209.033 86.2959 cv
cp
f
235.888 122.292 mo
234.351 121.438 232.618 121.059 230.937 120.559 cv
227.991 119.681 225.459 122.822 226.011 125.518 cv
226.564 128.209 230.087 130.083 232.459 128.161 cv
233.824 127.056 235.265 126.056 236.361 124.68 cv
236.998 123.882 236.78 122.787 235.888 122.292 cv
cp
f
248.325 113.358 mo
246.858 113.564 245.69 113.875 244.471 114.748 cv
237.81 119.508 246.635 129.23 251.811 123.036 cv
251.832 123.012 251.852 122.987 251.872 122.964 cv
255.492 119.855 254.055 112.555 248.325 113.358 cv
cp
f
267.801 141.882 mo
266.032 140.922 264.323 141.277 262.345 141.373 cv
258.091 141.581 259.485 148.555 263.503 147.028 cv
265.326 146.335 267.068 145.972 268.299 144.396 cv
268.953 143.557 268.752 142.398 267.801 141.882 cv
cp
f
288.531 136.418 mo
288.087 136.448 288.134 137.137 288.578 137.107 cv
289.022 137.077 288.975 136.388 288.531 136.418 cv
cp
f
303.841 124.098 mo
298.543 124.457 299.092 132.689 304.398 132.33 cv
309.695 131.971 309.145 123.738 303.841 124.098 cv
cp
f
275.89 250.394 mo
275.542 250.519 275.195 250.645 274.846 250.771 cv
270.484 252.343 270.918 258.827 275.458 259.797 cv
275.82 259.875 276.181 259.952 276.543 260.03 cv
284.734 261.781 283.82 247.537 275.89 250.394 cv
cp
f
320.046 229.792 mo
315.857 223.629 309.655 223.109 303.319 224.148 cv
303.9 222.46 303.748 220.597 302.333 218.998 cv
300.775 217.237 299.334 216.146 297.289 215.057 cv
294.685 213.671 291.484 214.502 289.499 216.547 cv
288.64 215.417 287.296 214.526 286.102 214.028 cv
281.117 211.955 277.352 219.481 282.356 221.563 cv
283.93 222.219 286.093 222.695 287.825 222.167 cv
288.078 223.428 288.771 224.534 289.647 225.523 cv
288.976 225.52 288.305 225.513 287.639 225.531 cv
283.677 225.64 280.14 229.648 280.592 233.602 cv
281.005 237.229 282.782 240.331 285.308 242.76 cv
282.528 249.046 282.972 257.103 289.011 261.373 cv
295.767 266.147 304.631 263.546 307.058 256.35 cv
307.734 255.926 308.729 255.329 308.899 255.214 cv
309.344 254.959 309.788 254.705 310.234 254.452 cv
309.608 254.684 309.659 254.651 310.387 254.348 cv
311.951 253.5 313.728 252.925 315.207 251.914 cv
322.254 247.086 325.023 237.117 320.046 229.792 cv
cp
f
323.145 230.355 mo
322.701 230.385 322.747 231.075 323.191 231.044 cv
323.634 231.015 323.589 230.326 323.145 230.355 cv
cp
f
126.226 217.148 mo
122.8 217.38 123.154 222.708 126.587 222.475 cv
130.014 222.243 129.66 216.916 126.226 217.148 cv
cp
f
138.649 238.816 mo
138.205 238.845 138.252 239.535 138.696 239.504 cv
139.138 239.474 139.093 238.786 138.649 238.816 cv
cp
f
141.527 255.766 mo
128.335 256.66 129.703 277.161 142.915 276.266 cv
156.104 275.373 154.737 254.872 141.527 255.766 cv
cp
f
180.326 241.266 mo
168.173 242.089 169.432 260.976 181.605 260.151 cv
193.756 259.329 192.495 240.442 180.326 241.266 cv
cp
f
154.379 215.692 mo
141.187 216.585 142.555 237.085 155.767 236.191 cv
168.956 235.297 167.59 214.797 154.379 215.692 cv
cp
f
142.142 205.269 mo
139.649 205.438 139.907 209.312 142.404 209.143 cv
144.896 208.974 144.639 205.1 142.142 205.269 cv
cp
f
130.998 176.917 mo
117.806 177.811 119.174 198.312 132.386 197.417 cv
145.574 196.523 144.208 176.023 130.998 176.917 cv
cp
f
135.745 170.404 mo
135.301 170.434 135.348 171.123 135.792 171.093 cv
136.234 171.063 136.189 170.374 135.745 170.404 cv
cp
f
155.959 132.23 mo
155.417 133.832 155.532 135.325 156.235 136.857 cv
158.019 140.744 164.798 142.546 166.654 137.507 cv
167.011 136.532 167.377 135.619 167.479 134.582 cv
168.233 126.951 158.374 125.094 155.959 132.23 cv
cp
f
188.743 101.666 mo
188.299 101.696 188.346 102.385 188.79 102.354 cv
189.232 102.325 189.187 101.636 188.743 101.666 cv
cp
f
114.971 144.591 mo
106.245 145.182 107.15 158.742 115.89 158.15 cv
124.613 157.559 123.71 144 114.971 144.591 cv
cp
f
104.54 160.837 mo
91.3503 161.73 92.7165 182.231 105.929 181.336 cv
119.119 180.443 117.753 159.942 104.54 160.837 cv
cp
f
108.303 233.423 mo
99.0588 234.05 100.016 248.417 109.276 247.79 cv
118.52 247.164 117.562 232.796 108.303 233.423 cv
cp
f
191.359 297.304 mo
187.882 296.172 184.874 297.716 182.982 300.69 cv
182.8 300.975 182.62 301.258 182.439 301.543 cv
180.148 305.148 182.881 310.042 186.473 311.278 cv
190.55 312.678 194.616 310.192 195.641 306.084 cv
195.719 305.766 195.799 305.447 195.878 305.127 cv
196.697 301.839 194.466 298.316 191.359 297.304 cv
cp
f
190.606 316.438 mo
177.414 317.332 178.782 337.833 191.994 336.937 cv
205.183 336.044 203.816 315.543 190.606 316.438 cv
cp
f
229.895 326.208 mo
223.766 326.624 224.401 336.148 230.54 335.732 cv
236.667 335.317 236.032 325.793 229.895 326.208 cv
cp
f
362.759 49.1299 mo
355.903 49.5942 356.614 60.248 363.48 59.7827 cv
370.334 59.3188 369.624 48.6646 362.759 49.1299 cv
cp
f
375.107 47.9985 mo
371.396 49.8662 371.756 54.7988 375.111 56.7881 cv
375.307 56.9043 375.502 57.0205 375.696 57.1357 cv
378.3 58.6787 381.231 56.6089 381.938 54.0898 cv
382.006 53.8452 382.075 53.6006 382.144 53.356 cv
383.269 49.3496 378.477 46.3027 375.107 47.9985 cv
cp
f
80.6418 50.7593 mo
77.737 48.2231 72.111 48.0532 69.6862 51.501 cv
69.4006 51.9014 69.1189 52.3047 68.8444 52.7119 cv
66.4787 56.1641 66.1711 60.6743 69.5857 63.6558 cv
72.5173 66.2173 78.0666 66.3276 80.5295 62.9146 cv
80.82 62.5181 81.1037 62.1191 81.384 61.7158 cv
83.7951 58.2881 84.0349 53.7202 80.6418 50.7593 cv
cp
f
116.818 35.6631 mo
114.948 35.7896 115.142 38.6953 117.015 38.5684 cv
118.883 38.4419 118.689 35.5361 116.818 35.6631 cv
cp
f
161.016 315.154 mo
157.404 301.644 148.234 289.25 141.247 277.196 cv
132.657 262.376 121.144 247.448 112.216 231.887 cv
112.057 231.523 111.865 231.158 111.717 230.792 cv
104.004 211.877 99.9392 192.481 100.149 172.055 cv
100.156 171.328 99.9289 170.732 99.7448 170.112 cv
100.238 162.674 100.866 155.225 101.755 147.813 cv
104.472 134.646 107.738 121.616 108.616 108.316 cv
108.899 104.06 102.841 102.778 100.402 105.548 cv
94.4138 112.348 90.4196 120.562 87.6569 129.475 cv
77.4421 152.075 73.4055 178.668 76.196 202.687 cv
76.4167 204.574 77.0759 206.551 78.1496 208.236 cv
77.7819 221.014 79.9045 233.498 90.3112 240.262 cv
94.0974 253.018 100.004 267.801 110.769 275.22 cv
111.017 275.722 111.252 276.216 111.504 276.719 cv
121.208 296.054 132.139 325.569 153.169 334.491 cv
154.875 336.543 156.67 338.5 158.646 340.247 cv
163.35 344.403 172.515 340.713 171.447 333.9 cv
170.242 326.211 165.913 320.647 161.016 315.154 cv
cp
.937255 1 .427451 rgb
f
203.425 254.841 mo
202.848 255.537 202.272 256.234 201.696 256.931 cv
198.505 260.787 204.153 265.721 207.545 262.038 cv
208.157 261.374 208.769 260.708 209.383 260.042 cv
212.836 256.292 206.676 250.911 203.425 254.841 cv
cp
f
167.018 269.775 mo
166.87 269.635 166.722 269.495 166.574 269.355 cv
165.067 267.933 162.308 268.12 161.008 269.732 cv
160.881 269.89 160.753 270.049 160.625 270.208 cv
158.195 273.223 160.316 277.979 164.344 277.706 cv
168.358 277.434 169.831 272.434 167.018 269.775 cv
cp
f
137.153 235.226 mo
136.935 233.888 135.089 234.01 135.054 235.369 cv
135.039 235.947 135.025 236.524 135.009 237.101 cv
134.969 238.667 137.683 238.488 137.431 236.937 cv
137.338 236.368 137.245 235.797 137.153 235.226 cv
cp
f
150.22 204.931 mo
149.744 203.687 148.486 203.147 147.229 203.491 cv
145.352 204.006 143.911 204.207 142.486 205.729 cv
141.085 207.223 140.146 209.338 139.102 211.084 cv
135.473 217.165 146.168 222.541 148.955 215.982 cv
149.74 214.132 150.909 212.073 151.266 210.075 cv
151.615 208.107 150.889 206.681 150.22 204.931 cv
cp
f
145.172 166.78 mo
144.849 166.532 144.525 166.284 144.202 166.037 cv
142.576 164.791 139.567 165.779 139.918 168.161 cv
139.972 168.542 140.028 168.923 140.084 169.303 cv
140.998 175.536 149.38 170.002 145.172 166.78 cv
cp
f
136.179 151.271 mo
130.466 151.658 131.057 160.536 136.78 160.148 cv
142.492 159.762 141.899 150.884 136.179 151.271 cv
cp
f
150.95 124.261 mo
149.243 123.691 148.029 123.897 146.38 124.562 cv
140.791 126.812 143.9 135.752 149.479 133.42 cv
151.509 132.572 152.665 131.774 153.654 129.8 cv
154.889 127.336 153.279 125.035 150.95 124.261 cv
cp
f
227.12 45.9429 mo
214.843 45.8379 200.561 49.5059 188.656 52.5054 cv
182.892 53.9585 177.171 55.9028 172.18 59.2002 cv
166.636 62.8628 162.681 69.583 156.797 72.5073 cv
149.45 76.1592 152.9 86.4341 161.021 84.5737 cv
172.074 82.0405 182.108 76.937 193.329 75.3008 cv
204.955 73.606 217.072 71.2637 228.808 70.8623 cv
245.017 70.3101 243.023 46.0776 227.12 45.9429 cv
cp
f
403.133 32.7974 mo
381.519 21.1914 330.499 18.7051 320.464 47.0181 cv
318.645 52.1436 321.533 60.3901 328.487 59.0405 cv
339.326 56.9365 347.615 52.6748 358.961 52.3267 cv
371.516 51.9424 382.86 53.0054 394.956 56.5674 cv
409.173 60.7529 415.333 39.3481 403.133 32.7974 cv
cp
f
143.527 20.7993 mo
102.158 -6.7373 46.6633 38.769 24.6926 71.8042 cv
21.5471 76.5317 28.2766 80.6782 32.2365 78.3921 cv
33.2834 77.7886 34.3293 77.1187 35.3737 76.4805 cv
36.4641 77.9658 38.1438 78.8984 40.2883 78.4644 cv
49.8205 76.5356 61.823 81.145 71.3435 82.4077 cv
81.4353 83.7461 90.6965 84.0942 98.7194 91.2988 cv
100.673 93.0518 104.072 93.9429 106.558 92.8115 cv
107.872 92.2144 109.071 91.7715 109.912 90.5405 cv
112.38 86.9253 112.616 82.5356 109.154 79.3481 cv
99.3112 70.2856 85.7985 65.647 72.9519 62.708 cv
68.2902 61.6421 63.6506 60.644 59.1413 60.1826 cv
83.948 42.1592 109.958 23.2383 141.125 27.7778 cv
145.52 28.418 146.953 23.0806 143.527 20.7993 cv
cp
f
184.083 109.477 mo
183.639 109.507 183.686 110.195 184.13 110.166 cv
184.572 110.135 184.527 109.447 184.083 109.477 cv
cp
f
208.674 105.556 mo
206.317 98.9556 195.717 102.738 198.441 109.136 cv
199.865 112.482 201.778 115.136 205.719 115.053 cv
207.756 115.01 209.333 113.333 209.81 111.478 cv
210.396 109.203 209.41 107.615 208.674 105.556 cv
cp
f
209.703 130.227 mo
209.259 130.257 209.306 130.945 209.75 130.915 cv
210.192 130.885 210.147 130.197 209.703 130.227 cv
cp
f
234.295 118.759 mo
233.851 118.79 233.898 119.479 234.342 119.449 cv
234.783 119.419 234.738 118.729 234.295 118.759 cv
cp
f
249.316 76.6587 mo
236.125 77.5522 237.491 98.0527 250.704 97.1577 cv
263.894 96.2646 262.528 75.7637 249.316 76.6587 cv
cp
f
270.947 97.1704 mo
261.495 97.8105 262.473 112.5 271.941 111.858 cv
281.392 111.219 280.412 96.5293 270.947 97.1704 cv
cp
f
285.286 130.355 mo
284.368 125.901 278.447 123.838 274.566 125.193 cv
270.142 126.736 268.048 131.562 269.402 135.914 cv
270.35 138.963 271.981 140.754 274.718 142.268 cv
278.197 144.193 283.1 142.442 284.757 138.896 cv
286.204 135.801 285.949 133.565 285.286 130.355 cv
cp
f
166.674 99.2993 mo
160.547 99.7144 161.182 109.238 167.319 108.823 cv
173.446 108.408 172.811 98.8838 166.674 99.2993 cv
cp
f
258.973 236.291 mo
251.703 236.784 252.457 248.083 259.738 247.589 cv
267.009 247.097 266.255 235.797 258.973 236.291 cv
cp
f
275.067 210.004 mo
267.275 210.532 268.083 222.638 275.886 222.11 cv
283.675 221.583 282.868 209.476 275.067 210.004 cv
cp
f
183.303 225.642 mo
172.813 226.352 173.9 242.656 184.407 241.944 cv
194.897 241.234 193.81 224.93 183.303 225.642 cv
cp
f
152.53 179.883 mo
147.96 180.192 148.432 187.295 153.011 186.985 cv
157.581 186.675 157.107 179.573 152.53 179.883 cv
cp
f
162.806 161.359 mo
154.601 161.915 155.45 174.667 163.67 174.11 cv
171.874 173.555 171.025 160.802 162.806 161.359 cv
cp
f
239.014 172.284 mo
225.927 179.069 209.838 168.026 199.58 161.196 cv
199.607 161.594 li
194.566 159.26 187.108 161.666 187.903 168.991 cv
190.715 194.925 232.728 202.794 251.478 190.636 cv
263.75 182.677 251.357 165.885 239.014 172.284 cv
cp
f
370.402 158.165 mo
370.455 152.963 365.408 148.654 360.534 148.406 cv
354.853 148.117 351.191 151.614 349.452 156.761 cv
349.072 157.886 348.731 159.231 348.268 160.458 cv
348.025 159.905 345.721 161.385 344.198 161.783 cv
340.239 162.817 336.237 165.711 332.167 165.35 cv
326.785 164.874 323.523 171.997 328.929 174.757 cv
332.164 176.409 335.29 178.651 338.576 180.135 cv
343.03 182.145 348.223 181.66 352.825 180.583 cv
356.507 179.723 360.141 178.412 362.896 175.701 cv
365.632 173.005 367.021 169.714 368.321 166.259 cv
369.561 164.556 370.358 162.372 370.385 159.683 cv
370.391 159.177 370.396 158.672 370.402 158.165 cv
cp
f
356.191 304.393 mo
335.643 303.522 314.269 316.881 293.386 319.61 cv
275.751 321.914 257.518 322.089 239.761 321.419 cv
238.677 321.379 238.366 322.675 238.778 323.438 cv
248.585 341.652 272.528 340.507 290.569 338.763 cv
312.862 336.606 346.836 332.561 360.706 313.499 cv
363.66 309.44 361.061 304.6 356.191 304.393 cv
cp
f
402.989 297.35 mo
398.874 297.542 394.746 299.656 393.207 303.577 cv
392.808 304.594 392.364 305.594 391.922 306.594 cv
387.503 311.506 383.491 316.941 379.227 321.717 cv
372.004 329.808 364.498 337.623 356.76 345.221 cv
354.384 347.556 353.509 350.106 353.627 352.529 cv
350.965 352.981 348.303 353.597 345.643 354.431 cv
345.546 353.959 345.567 353.529 345.402 353.034 cv
344.028 348.934 339.951 346.601 335.79 346.694 cv
322.801 346.98 309.888 350.66 297.237 353.401 cv
281.024 356.913 267.328 359.744 250.497 359.663 cv
246.864 359.645 245.06 362.125 244.751 364.917 cv
236.085 363.49 227.843 362.074 219.013 362.065 cv
218.618 361.433 218.097 360.834 217.348 360.317 cv
212.517 356.973 207.324 355.198 201.757 353.425 cv
196.633 351.792 191.966 349.808 186.476 350.53 cv
183.895 350.87 182.337 353.157 183.074 355.687 cv
186.05 365.893 200.32 372.827 210.92 372.367 cv
211.105 372.413 211.234 372.515 211.435 372.543 cv
225.013 374.433 237.073 381.912 250.833 383.748 cv
256.765 384.541 271.634 384.507 272.189 375.562 cv
290.473 380.45 310.38 382.476 329.054 380.28 cv
344.492 378.465 364.341 376.347 371.51 361.101 cv
372.134 360.701 372.746 360.246 373.334 359.692 cv
378.058 355.25 382.674 350.698 387.225 346.083 cv
388.962 346.18 390.749 345.82 392.367 344.843 cv
401.405 339.389 406.783 329.854 411.035 320.254 cv
413.045 317.529 414.812 314.698 416.055 311.708 cv
419.601 303.174 411.386 293.914 402.989 297.35 cv
cp
.345098 .368627 .0627451 rgb
f
397.001 250.125 mo
396.458 247.802 395.8 245.533 395.178 243.247 cv
393.774 236.781 392.37 230.315 390.966 223.849 cv
389.552 217.341 388.65 210.796 384.79 205.212 cv
383.59 203.476 381.706 202.638 379.795 202.56 cv
379.712 202.527 379.618 202.521 379.534 202.492 cv
382.046 200.674 383.175 196.844 380.246 193.935 cv
378.267 191.967 375.66 190.088 372.931 189.34 cv
371.595 188.673 370.032 188.26 368.183 188.292 cv
360.801 188.418 354.378 191.217 346.892 189.295 cv
340.933 187.765 334.937 184.687 329.522 189.246 cv
327.401 191.029 325.96 194.481 328.044 196.976 cv
332.53 202.347 339.117 205.62 345.794 207.463 cv
354.037 209.739 361.234 208.213 369.465 207.222 cv
370.398 207.11 371.225 206.874 372.001 206.585 cv
371.971 206.994 371.95 207.407 372.027 207.867 cv
372.292 209.442 372.563 210.993 372.828 212.559 cv
372.89 217.627 374.205 222.55 375.259 227.635 cv
376.912 235.609 378.565 243.581 380.218 251.554 cv
380.664 253.701 381.714 255.129 383.047 256.008 cv
384.384 258.648 387.329 260.551 390.308 260.265 cv
391.795 260.123 392.774 259.666 394.083 258.964 cv
397.256 257.265 397.717 253.194 397.001 250.125 cv
cp
f
253.082 184.219 mo
246.973 192.583 238.74 196.321 229.093 199.581 cv
220.963 202.328 213.618 199.18 205.602 201.077 cv
204.488 201.34 203.64 202.757 203.767 203.859 cv
205.182 216.1 219.558 219.143 229.758 217.312 cv
244.117 214.735 257.884 207.846 266.49 195.926 cv
273.14 186.717 259.862 174.938 253.082 184.219 cv
cp
f
417.314 68.2754 mo
413.101 69.1406 411.657 71.7915 409.213 75.0024 cv
405.436 79.9658 401.374 82.0381 395.051 84.2207 cv
383.078 88.353 371.103 90.1875 360.337 97.207 cv
355.988 100.042 358.976 105.673 363.342 105.917 cv
375.317 106.587 387.086 103.163 398.568 99.9346 cv
403.442 98.564 408.24 96.8853 412.647 94.3428 cv
414.534 93.2539 416.204 91.9453 418.006 90.7388 cv
420.219 89.2578 425.435 87.5835 421.378 88.105 cv
435.903 86.2373 432.015 65.2563 417.314 68.2754 cv
cp
f
332.176 70.3281 mo
319.281 56.5747 292.796 30.9434 272.433 39.4619 cv
267.119 41.6851 266.98 48.3086 271.7 51.2188 cv
293.907 64.9102 337.739 91.8594 336.08 123.323 cv
330.574 131.815 338.455 146.99 350.59 142.281 cv
351.047 142.104 351.505 141.925 351.962 141.748 cv
355.764 140.273 359.521 136.812 360.022 132.518 cv
362.502 111.252 346.178 85.2603 332.176 70.3281 cv
cp
f
180.099 36.4326 mo
175.689 30.6064 167.008 29.4209 162.867 36.1377 cv
162.861 36.1489 162.863 36.1479 162.857 36.1587 cv
162.81 36.208 162.797 36.2178 162.746 36.2734 cv
160.885 38.3027 160.065 40.2959 159.246 42.8916 cv
156.808 50.6138 165.734 56.2646 172.308 54.2983 cv
175.146 53.4507 177.475 51.6396 179.314 49.3545 cv
182.146 45.8345 182.993 40.2549 180.099 36.4326 cv
cp
f
158.224 60.5322 mo
155.542 58.041 151.679 62.1538 150.195 64.082 cv
147.059 68.1597 144.297 72.3818 141.317 76.5532 cv
140.309 76.8081 139.355 77.2534 138.678 78.085 cv
136.381 80.9072 134.708 84.1099 132.27 86.8223 cv
131.826 87.3184 131.622 87.8755 131.53 88.4375 cv
131.021 89.1196 130.529 89.8232 130.051 90.5244 cv
129.855 90.8125 129.734 91.1025 129.561 91.3906 cv
128.088 91.8013 126.761 92.8135 125.954 94.7227 cv
123.076 101.535 123.496 110.103 127.553 116.287 cv
127.551 116.35 127.549 116.414 127.546 116.477 cv
127.312 121.547 135.726 123.236 137.444 118.451 cv
138.008 117.824 138.628 117.253 139.301 116.738 cv
140.2 115.702 140.789 114.513 141.07 113.17 cv
141.67 111.081 141.82 109.066 141.529 106.909 cv
141.262 104.919 140.699 103.085 139.705 101.334 cv
139.322 100.595 138.873 99.9004 138.356 99.248 cv
138.175 98.9395 138.03 98.7017 137.925 98.5322 cv
138.089 96.6182 137.383 94.9551 136.238 93.666 cv
136.708 92.9902 137.19 92.3179 137.591 91.6138 cv
141.138 90.2002 144.502 88.3062 146.699 85.0898 cv
148.044 83.1255 148.316 80.7476 147.113 78.8008 cv
150.102 76.2046 152.957 73.5952 155.496 70.4224 cv
157.209 68.2832 161.207 63.3032 158.224 60.5322 cv
cp
f
223.095 272.204 mo
221.555 275.473 221.736 279.434 221.317 283.021 cv
220.856 286.965 221.484 290.058 225.003 292.26 cv
226.55 293.228 228.922 292.906 230.353 291.898 cv
231.424 291.143 231.95 290.189 232.276 289.113 cv
232.225 289.364 232.175 289.616 232.126 289.868 cv
232.975 288.064 233.654 286.25 234.297 284.363 cv
235.187 281.747 237.024 280.038 237.51 277.163 cv
238.927 268.779 226.918 264.094 223.095 272.204 cv
cp
f
238.913 256.579 mo
235.143 254.138 228.797 254.109 225.942 258.236 cv
225.456 258.941 225.126 259.688 224.704 260.41 cv
224.645 260.388 224.586 260.369 224.528 260.348 cv
224.418 260.657 224.283 261.029 224.165 261.355 cv
222.757 263.927 221.541 266.562 220.356 269.338 cv
218.76 273.081 216.382 277.167 216.062 281.245 cv
215.694 285.917 217.137 290.386 221.61 292.612 cv
224.228 293.914 227.53 293.869 230.319 292.733 cv
233.332 291.914 235.981 289.399 237.003 286.207 cv
237.57 284.43 238.075 282.646 238.573 280.862 cv
238.813 280.166 239.051 279.471 239.303 278.756 cv
240.657 274.898 242.627 270.807 243.174 266.763 cv
243.104 266.74 243.035 266.716 242.966 266.692 cv
243.663 262.826 242.447 258.863 238.913 256.579 cv
cp
.258824 .254902 .192157 rgb
f
232.821 287.447 mo
229.959 286.076 227.099 284.587 224.237 282.962 cv
231.679 270.974 li
231.748 270.864 231.833 270.705 231.905 270.582 cv
231.942 272.376 231.983 274.054 232.086 275.445 cv
232.383 279.43 232.578 283.446 232.821 287.447 cv
cp
376.665 356.549 mo
368.158 363.678 357.613 367.089 348.238 368.987 cv
330.348 372.609 312.001 372.873 294.279 373.497 cv
252.197 374.978 209.805 370.594 173.862 347.385 cv
142.683 327.25 121.306 291.852 103.418 254.315 cv
94.3879 235.367 81.0236 213.13 80.2248 189.344 cv
79.3352 162.808 89.2985 129.27 103.249 106.825 cv
112.336 112.076 119.596 118.932 119.66 127.375 cv
119.769 141.598 137.169 140.051 137.058 125.665 cv
136.783 89.4854 94.8205 75.4282 71.906 71.5391 cv
63.5349 70.1196 48.9235 68.4873 35.051 70.6182 cv
54.7985 50.2197 81.7619 33.8022 100.559 27.1934 cv
131.928 16.1665 155.11 26.9043 177.871 45.3018 cv
172.37 47.8706 166.877 50.5898 161.42 53.603 cv
150.707 59.5205 153.844 80.8906 164.677 74.9077 cv
225.633 41.2397 300.351 32.2861 342.564 93.0313 cv
349.71 103.314 354.039 116.3 357.202 130.322 cv
356.916 130.499 356.637 130.624 356.347 130.842 cv
348.665 136.633 340.916 143.479 332.884 148.148 cv
324.779 152.859 317.05 151.433 309.171 149.959 cv
304.427 149.072 300.635 152.911 298.806 157.641 cv
295.984 161.87 294.906 167.868 298.26 172.311 cv
314.025 193.186 342.503 204.577 366.942 192.94 cv
367.467 192.691 367.929 192.374 368.388 192.055 cv
368.872 194.169 369.32 196.325 369.863 198.371 cv
375.799 220.674 381.998 242.495 390.708 262.503 cv
388.243 262.922 385.701 263.656 383.137 264.503 cv
382.887 261.902 381.908 259.477 379.884 257.767 cv
372.941 251.896 369.539 238.31 365.677 229.062 cv
361.636 219.385 350.355 225.24 349.104 236.214 cv
347.305 252.015 345.216 267.802 342.858 283.584 cv
308.901 298.794 279.328 302.741 250.689 294.321 cv
250.73 293.573 250.732 292.822 250.695 292.078 cv
250.162 281.345 249.479 270.657 248.593 260.029 cv
247.866 251.314 248.204 239.616 240.778 236.785 cv
233.83 234.135 229.307 241.704 225.105 248.472 cv
219.927 256.814 214.749 265.156 209.571 273.497 cv
208.499 272.728 207.43 272.028 206.355 271.222 cv
197.289 264.434 187.322 284.654 196.359 291.421 cv
224.495 312.487 257.642 327.707 293.117 323.167 cv
309.194 321.11 325.36 314.476 341.038 307.425 cv
350.557 303.145 382.564 282.337 396.181 285.87 cv
396.712 287.674 397.753 289.268 399.422 290.412 cv
420.665 304.97 386.503 348.302 376.665 356.549 cv
cp
401.158 44.7847 mo
411.904 53.6162 418.147 69.1572 423.071 84.9229 cv
404.607 86.4961 386.356 90.3613 367.736 96.6543 cv
366.711 97.001 365.848 97.5347 365.062 98.1445 cv
358.111 81.4517 348.82 66.7109 335.383 55.2905 cv
332.72 53.0269 330.007 50.9351 327.264 48.9517 cv
345.164 31.4717 387.475 33.5376 401.158 44.7847 cv
cp
364.401 171.388 mo
364.159 171.48 363.935 171.517 363.685 171.635 cv
353.538 176.467 342.364 175.647 332.359 171.425 cv
332.397 171.41 332.435 171.402 332.473 171.387 cv
342.374 167.42 352.019 158.792 361.222 151.592 cv
362.302 158.2 363.323 164.833 364.401 171.388 cv
cp
417.401 277.974 mo
417.36 277.865 417.344 277.756 417.298 277.647 cv
416.44 275.605 415.495 273.809 414.48 272.213 cv
414.832 269.475 414.52 266.657 413.112 264.17 cv
389.133 221.83 386.21 164.825 371.898 117.69 cv
393.239 110.572 413.963 107.047 435.246 106.586 cv
442.366 106.434 445.75 95.9482 443.749 89.0386 cv
434.513 57.1563 422.575 23.5767 394.226 16.0254 cv
373.298 10.4502 330.259 12.7183 312.585 38.0337 cv
312.27 38.4854 312.035 38.9497 311.778 39.4097 cv
277.835 21.8765 239.261 22.7446 200.573 36.0811 cv
200.515 36.0254 200.476 35.9551 200.416 35.9009 cv
169.129 7.51221 139.428 -9.7041 97.3015 5.88965 cv
65.2634 17.7495 21.3186 47.9077 1.6921 86.1655 cv
-.666788 90.7642 -.338663 94.9746 1.3254 97.9355 cv
.932821 108.234 14.3493 110.21 18.5886 97.9834 cv
21.6814 89.0581 66.5319 93.7993 70.1872 94.561 cv
73.7463 95.3027 80.2234 96.9902 87.3332 99.5796 cv
74.9494 121.66 67.4572 146.499 63.7736 172.536 cv
58.9279 206.78 71.0393 230.947 83.1433 257.2 cv
110.648 316.856 144.202 365.077 198.559 384.507 cv
226.865 394.626 257.335 396.919 287.766 396.191 cv
314.836 395.542 347.45 397.82 374.275 382.095 cv
401.874 365.916 439.241 307.527 417.401 277.974 cv
cp
.129412 .109804 .00784314 rgb
f
134.063 62.0713 mo
142.017 70.5581 155.401 53.6797 147.397 45.1382 cv
139.381 36.5854 129.779 41.9873 119.634 41.1079 cv
111.115 40.3706 100.315 37.5513 91.9768 44.6812 cv
88.3615 47.772 86.633 52.7788 87.1574 57.7583 cv
88.05 66.2471 95.0359 67.8975 100.361 70.3555 cv
108.169 73.9604 115.716 77.4111 121.184 85.3945 cv
128.082 95.4634 141.379 78.4805 134.517 68.4624 cv
133.035 66.2979 131.395 64.4097 129.686 62.6372 cv
131.681 62.1055 133.677 61.6602 134.063 62.0713 cv
cp
f
222.719 189.129 mo
215.404 188.19 208.372 186.65 202.925 180.605 cv
200.882 178.339 198.173 173.981 196.431 169.12 cv
213.165 177.651 233.842 178.936 252.071 180.81 cv
244.349 190.652 233.54 190.517 222.719 189.129 cv
cp
270.655 168.567 mo
271.027 164.071 269.423 160.007 264.947 159.451 cv
244.363 156.894 213.624 157.792 196.329 142.457 cv
195.598 141.057 194.506 139.935 193.076 139.178 cv
192.781 138.84 192.448 138.544 192.164 138.194 cv
184.846 129.171 172.032 145.022 178.366 154.404 cv
172.981 180.265 189.952 203.541 206.968 209.292 cv
228.886 216.699 258.952 214.854 271.647 181.438 cv
273.606 176.28 272.748 171.62 270.655 168.567 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (head.eps)
%%CreationDate: 2/19/2018 2:00 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BoaR^FX?grJG]rH$N[P''ll*S>F[Jdi2p`(8?ot)\jZma68C&nbZ6?MXK8/K^OGT2pY+X+r'a(-P$7,ZccCpHkAG0TG3ppF
%0)i2L*FAd@lJ(L*^,s",QXB0pFEuYi3W$>XdI4dXIX^k,c[PRpTE"?YL\5rl0)6CJL:_^JB">_5Kq's&P2@Id4M?4;j3.=$DngVi
%qUtfX59+%FGl?c[?g`r(IJR^QS#>/c-Vnr9\:=&.oj;lt(Jg\%ZWsj:<VY_Ir5JWrop_:DhsTL[^rGm`?Mk<uaApXhIV4$(k#X44
%l0J5UDe3n92bsD+n,Db%hbmX'r;<19GQ6Lj+5X_WqY'aN=9%:s3-G8%W*On$s8>mp5W\f(cH5Ttq/CPhs3oF=?bFp9mb1h7le>e5
%d)H$mqsF,kq12U9\WQ(:K,m^J>T:iUV8L&kg@]CZh=&A>V"a]MWtXp[on5<kVB?t-]>._.!%gFu+>JM`^OQ(XMl1L^\V0!jQ]g,g
%q0Y-^\Gj*F+tK?;mR+_[6]ra>DT[1FiL2LW3@CTtEZF(ERd4O%h=#i>IfGaAmf)PNdr4^4f^eIf]`%^&s,pr`VWhu?.Efu2r%cN?
%_XDr$EW>/C?9Ncg1TFa+\jjG[rU'OkR=Wr:ji(0$H8bm&hp2#qdl61?^D6<frSg<ud4]]h.%gJ:O"Z"]oWS!387smWmJ$@YIfK8Z
%EQDLu6&%<-+m`HsEQ07SHRF;:1@MQ=b(<B.kBsfrQehL.BBZAN,[h.s&n:h,S*/ZlJ+_!1N4U`anj^ZLpZD:\NJs(YAc7ZqhrX9Q
%0&JR%R=htempD@#E;l?eDn6B4h#6AN]>sC?r8Ysb^3]VqF6KH9+kDTL*FrBe3^%ogoTqX(%c\\toe3qp?f0`?+J0/723.Gr7f5Ks
%q#>RiXlG50j+pLO&YG)YIX8QoEkO"nS/*@KM@lc*LsohG>Y:pcN-",!kKNM9bNBb@bqi,4DtkEP*KN2IGf6H!,<e+/ER*Zt:G8%O
%H26QR'.t*78-c7aee..0oi#+!4s*;**'\B\SdYSY1d"ib>5\j?L&Z-&*X_r=funL$`HX$5O2(0\p`Ef+A80Y?./_D(a"M,GF5a8_
%V`FmLL.B/]39P<J>?N6^?>!I);Psm%l_XIMq>`R(*M)&ZK.fkt:=1_bL1eI)kXlXhT3OUeKu5Q'%F8-W>,OhC`\ZV(r.PAT3l(bR
%GVnB/S;([ps14Ri/ipO(!o1-/!XE'\W@XSM;<K!ul/\,?dAPS$i8A`kH=uWW/=W5/^2OQ'Yg=d>OI,9slc46>r/]<kf("\[07#AP
%a#SB0\\(aafh"5QH4QkE6I(9u$Jf^k8hs!QAWr@de_/REl.kTqFn.NeZ7tD9FSIhtgg@\F%eOi@ZGGir<Q`n#f*TkX0)SUFDS'8Z
%Oitr9D>UD.<ndjOl"(A^9'#)nR``ooX'Ol!XTldEVN[@U.4N.d6S<T6NqH<5#(GO/YtAY9hWm]!Vg_@(rnW%gQWtS`2RT1RQ'2.&
%Id1"[qKL6Xmb,>JHi9oAe??bUs)('o9.iH"[&O#RYObosDEmf0W*dR-Z%i$\f2qu)J*B`kUS!QF\=D@MEnTVt8k5M$\n(V$iWqaC
%I?l<H@A<KVG^PCdK:h0oqpsofp/t-T>V>7T]X/)\on/jdI`gdF@Q?mFPN9$Jj3[5jcI^tPjm6G;i4^Et^i?`R(NbD:3'3=bVM"'8
%&,mP&e9$k6#BlUk,9Fu0:MSc9*H@Nl3,L_3*'RtEi8#J9"g]hP*GdW3S)/I:mEIiC9ABj"\i&MkG1("f#rt(ob.)G;_J4>K=1[Di
%B:Se`p!fV>i[;4%@67dR>Z6G`4ro;Ii]\DZqkJS_?g5?P)Ra6'*G*/:bQ`/:Gu!%8-XGQeN$lVV%hjnNf;ZYDb##ELI&nEfDFP8Y
%GW["mpt#!&EB/KDK7&+R](3b%A2%94_N7;B:'ek)o2Z5H9r[J64pjg/5$??FU%p8q*V_T\l+014ZYkEYe"$,?+)s5bKHW>N:AEL@
%6b-#!q4]\_]WQUXiJ6WdO2)KngIr`alODT)NT'SKi##3a`PFa%/Zia4iLseENk.bchr&WK%``4aleHV/'.C4/QOd+\a5Cl4HmKTq
%5?kkpkPFO3&kWLt/#F^&,S][^4OWn-@.5d1?+fO.;6Xm7.:(p\QEpGLOue(D9=gSfa).'[h:Iup?<UFd@o#(cJ8Q30%r?'m4ECn3
%HR<`;3d0%S-'k*74"_OSX=>h$Nced$I^`V9M"]Z;IcKTh9Z0DKZ6$_Cl.5V.R#Z@a2IJ:pF&+,o;Sum19MUc]$YHf[e+h_R\@1Ct
%%D7,bXc7[s<L3)qZrK7.gYVjb7Ct+(P^IPSO(GG?g.qsE/s%qKC3]K5j-)"dG>u<SHo6-`dlLKG](FF2M/Vd*XE@%\2qGS<^5n7i
%fGiK6E4B4oU%,o+Nk1WIXZYCkEU.O+rL.#9Qg5[tJRD6X.94+US"pYBZE*ZS'/)9fSK0\9iMn6AD;CI-F:o>rd4j/mhJF='YS3Y"
%UOj14GCNF0_ogm3]Nf@.`H$e:pXPC(@&S-DkMq-*94pbC@_&#,Mlq70]M4rN#U[U8gSN]m\Yjc.8;G&'61\YFd\0qFi3pRuDQg`n
%RoGgFEdK9CYm3:2FC<Ej.H?KDG7E?!G]'NqU]DrV!Ir9F"K)\:O]YSUIUA@QDiA4VbRVc0oX`\!cu7%7<AAHB>'=WW*D^jl--OW3
%[ajP:N<\b&YPDjo,Id:PrPmZS7`SM.6)WWT5q.`*e89N.IM]u)mP:8e.ooq9^2gnq[GPOLa)9^/=6qqT5H`UET04fPl/GoL2s>[8
%iDN@"b6:c8gd9^Th'T"dV!PG.MT`o/MdEN0+50DT?.\Bt(Y,SJ'9Tl\;n&F"fIm_8VU59Nn!@Z?3^\C@*IR7Ke$/[$89N*K%A"]W
%^QuN*D7><-hEf+FeplClEdXds:hKjmj4W%rS1Ij!%IK#c2)T:/Lkj2h\RE[E>qq,as"%-tnTj)7(KJb!M<jhhXj"r[g+ui>UFFsh
%]H7gj4P!t_dgo=-[kO]QG@Sjk<udQR^[1^EMh&,-(B][J2Gnthj[5q^a#8L9$N_D/=nk_)Y&.WNk>#I$3oNP1g>f_NG?T$IUfuut
%p@sNWCDUCI=/s[=eCA-5>dbJ3mF?SO83cmuZjWrc,\Gle[L0U%%2*?4=ZPk-'CJi(j7VTY%D,Sl>ie(BY=u!h$Wbs5,VL<)o-ga;
%_0%+9dS>j7YH,kng2WcC;4;Tj(,;nm*P[[&XS1,!G,>%PnGKC/If["rY(T0IlW,.Wg,P+`<k6HjMAiF:m;g*FojHI[O/b>qjEbHh
%p2iPEF?pC(h:#*d+8^WDoCI%+4(e?jm^Cula)p#c8<o!6l(7rR!3,3sgXO##UYCubFu:[SQTH[P?@>^H[]ru%VD4?6DZ=noW7#,-
%XAiO[#.tZ:pNg0_nPn#s7rHu(9cX&f_7WhW<u,^a'DI<"[HJ[?-E:&VG-.PJW7uU50FOU\/^WF:D0r_I=/D%egP.;;GPe<iB/9UT
%,"u^3!kOTKa",g(n_>J1j$aD2U;Z)X6/"l_b^hMhrDpbHPd:,kf/n&Yj)Ab>O0;>b8Ctjqf=:FL-F*PF!9*.qJFVm$@Y"+;C*igh
%0qkC1mc&f5D>EP@:MK<)Wbl`"f:@8^E4tkOpcR&9cl=&3ADDoH"+hlh=KP<_[&-D2RYFX`LCmE`,j`#M&U8H`8[[9s%BI;(N?,H<
%,Z)udFFADOk8P?KY$iO1-"9;MmtiNig-u(W;\QL.B(gR+4k!:9.a]<h3im4kKl&u7D&Mj2K,X!FOA\^YUM./kr&h-iaUKED/#N7o
%Q.Fc6qeF;Zfr5A>[!/tR4fli,;&`\].eDED5!1XD4PTdAO!qalVU/`#ghATMh-$.T\Ta1BKjf*\YC`E\E0'ls?C(_u!%#inJq8eh
%l9A?Nfknf*X+NMj7og;K7<q?MfepfB1pcXQGhlQDgA]412dEG3YRoDbRIOU7dugY\^/Dp@R$k!jD8l:PcWpN0C9F_EA+L3NYA%fI
%?n7REq5J\)%Y#pO=1%3c81AiXm$Yae`A^kTL.kT+Dj@QL*Yg2%9u869^U^)r;n"&;4r!Lq@2CEtN*@P"d$sU#rdh(j@D-7&;m`(V
%/a]E1h$/?<f6:H"0q::q7=XDi/.\DR+t#3f@onB#\BVI:d=)k-iKC*eIpREo9o?s#`%Wi6fNNQgD"%rYdHYr5GAS(\N;LHZY5<U)
%QSqJ&n2,HGDA$fu7,cWI\mJ`\FL:"+`)$6F6UsPmL)$?^?3&Nm8"h1Zh-@I?G&H9O`mi/;%laICL$&Z?#(p[Dl@(J/$V5f*_YU(K
%D?"7>^nh)";_td%qjkF*8fss`mCFK?HQQBJ'1g&p"ZrQFJBkF`N=31>\8AqENNP.>TkLMj#L746:I)d?^hN+BZ"V!i\oWf7%.[;l
%Z9aK%\pIS8`[8ki1iM<)g8saj<P9C5e<O>^<fE<qFa.)crU-Rmf[tq[W1iJokZYNtl<ZC?2g*j?n"K\*'2P0\\oh/L#FnoN5lII(
%_e\=#j5;mWC_C\a'Uj=LL'?pQZIN3ClN9UbK:\$-gcC]1XTgjd`Rm)RL+\jM)11hu4r+U>f.t]Q17Jm]q0ZE<DOhjW3]/7X*,k."
%4R^.*ZERmEC/JIOCmJX2UI`X`CFNA><-CtQFoio1^S>-BOGtBf*[N;LpY<3tD4:>p=f(Rqh=;ZtZ`A->]WY/1l6A^@MQM=jH+H9!
%2>.$&=aB^d)8%upFcE`>#2S[J@2U*VU^n6HfroVgdI?.'l.*/fOH['jDUW4YbDn&]Q@4mQVHGM+R>TC7MGRER/8IId^G,=*b#J-D
%lB?G`Dbt*8Qf3!?R\E_EQ>iTb':j'u&9@EsF*h2J77Xg-WS@<L(qRtXm$t3@C<%d@Dm2\dSk@h@1CKO%O(F\ZpUr=Kj$N0Xl?OEJ
%]6l;)D>#AFgBglh;>mBeGFMm7^;)>oTgHEWFiqt`.:!1X^os6Ol38>'ZmVBg4I,"l!bWTL^)LLXjihXk0D>LY]X@0u:NF'?h%sYG
%/EqUnMh"ZDjst;#pN#)VY57-rDe-J^N#SgFN&Xr.K@5m6bgf<#Xo@NGW`/E!\$Km(39<bTl8l1XMm>6,Mk+tm3S=hdg\t=tUUtnb
%#a@TbcG`k62CGpB^42_@[)M*X<``6Fo7mjq#QFe9=DV*ICJQHo.M`tH=Moq/$;&:f"\pY$*,Z[gVFb_%_AK7K<;.aUiO1"53q3U%
%hODMD:#P>nRPeu-amELPS//+j;+9)UT-=L:)g#F`UWr#Q_NaCk&Yh4$F5?$%k?Xea\rI.GHIAP#qV\kqo(OIrNC"OAp%`>0FTG&<
%$e0rF8ik<&PB#u8[S>T3D<KF8C`.-DA&h`I+_7-"Yt0FTbF&=cd'5Gk+.'%cbVJ!H3gtXAPRZT;Sb-C/p1-P3j%;_J-Z(&)/Xi8Y
%qsTPNFC\U*U91'+)QK+'B([c-*]dqZXDUs*4H);MqI_>dOQ!XgF`;M"q]/"08N(_M^T6:oVRV?nl-u>ID80gBf6U()hY76$qh=<`
%M-2uV\EifMFOQ]DbhJ`G+P#dl>lLhU7(6iIW=$$cMg8-(p^>WNd!RXme6C<(;=+0^C<Tbs/ke9G=)f"8gZT9Y$*:rF*H.!5'eW1c
%dpc+B7,-_Fb"#)>kgi_inAB-42-n,g`[\%g&dpU5<corEEFBn/)d1e/(HO'$%39N&dX)`d?U>sZrpDfBJmkSCD,X`.U!"'GTtJb>
%N@+@):kN,ngN4kK>L"605&o%]UW4mdZ:n.E@66!Sk`R$e.C>dl0'rA_CXbCa,q`+kWm5d$1sU'U9B.f3=RTk_@%L29@`5=oY_?,m
%PeknLeC<9N@o8ktG%GUZChab:Shb-,LTX7uk"W0K5ht'0FVWete6C@n1EDoRh5Gd9i=Ugl1Z>BY/^d:%-uneVFGtI@B=Ma%4tks^
%MARn8/0`EgX_s*[f.,1UW`6EE1+H/\H.%DB/poq9<.Ab!n_'7&\07&;WejZZePUb20%TB=fp-rWqT#:(M\YcHYa6t(Y+ti/gqJ\^
%XkY88L.&6<9!1V=$*,(TJPmFC?Y7(Q]?^A[&J^.GPt4fjQ*qNSS"l"m0!cR`hec`3+e[G2\[%HbqN9%P_*cl/i&5K;oiV>Yf\[^u
%aSihT"jCdYi)3k.j\qfA8i8)5c_a!O"[-6>D"-S,WU.A)QQ!#GXemZAGobb-,tke4Xu2_"??be:IE6c^l163l9NRrOj)Q4Q<B:o8
%;&(n`=0qa-eqVM&OH\rop$Q%^/\_[:7LXRYq^Z!N]Vb4^Xa&-O[*<8a]e5ScF)P7[_n+s,Pc5SGKDknD9!ldar%G.d_#"mK'RQm(
%4YObS:WqGY'/$^-oqM8O+h%)-54m[5"Chs[;Ytooh^gW+^"jFU#`Pk`?)VOchCYV3$cX1_Mmp01pG\ZanTrf/hJ)O,hV`M#$Q;Lj
%#t3S^-,s_7P'8\U2XF@?YAR3e1,>kYfQC*FD,TaMn]>BRj'W^P1@CKd;:t3!B#@XTX.P#U#'<k&QK!QR?amg;1bS"l+ang-m'Fg0
%O.1AlC>OMAo%)q^!jnX\KdQD`XOF7!L:K-ho^^G4cj\JQb>@7dhqM\ri*RFCQTNQJQZ%Rd?O','!F<oUm@juQN8+qRT5]J`gJ5QG
%-)ts&JC6#8\K^G#8F9-d#JPt*Z7UZ^[[(dtnMO(/Y*+49mFP\?]U9_K8>"f%.5uO$2tPQ"08m;c'TK;MUO>.rPja%kluHkurNUD:
%eJR0GhI!Gf<&G/7*HTVFTWQkQWGV+(>tg$MJ6;5mY`QNBhH^Ti&`0M+:D8j:cbHFc$X!!MLW;oE5m#U4b80#:KL7Xg/?akCGlO0R
%8cn-qa.7!^>D%-T-.n8>#:8B1@HQ'R47TOAL"+AP/M=mqZLQn\>%JesdG%?ubC.?\"]MQN^edAKROkU?=*\LMq=K/[.3I/&:?P;e
%$e!1j'`M]3G9r$ICbhK*Q)P/Uh5.jXgU'@RWjAPRW+2U8-3uZO`V&Q%cmgQB788!sIF/mkn6$H"-kF\(`&d\Tgi%iJ-Og8da4h_s
%mF^^*Qt"Epm7.*Yi_E/5U*LJR+!qa_DinA[V3u@"\j]e6NK.@C]0Z>k"aXXB^B*ftic8n+(=@@_-hL^%qkA`"c4O7^5IEIHlM&"b
%>$\WB1XpifK\Td"a>-9;"S<mTpUH[d\6-NMnG/l<,sGWq;GQM(l_=FeBe(_&!;8"CB;s(Xa`a)nglW*+[C]j"*A3o7W&i;+B*q8I
%\OYo-N\<"+jA0_G6$#AF`k,=_CoC1beRE]G*brPb-.9q?YcCUs$3$hpTPDHT4mAsip263dDb9UdgWZjkFc2knK4!k$/:k3J@CP]B
%?!<TkM+'IrqfRA/+5449^3cka@_a0#`c6j7<%T4>bG'9faMrYtB>9:\A^bpUQh47DB]]+uC4/mbU=;/>:>;FE6_TeT=b!Vsg)DkL
%V+p.:+'Nhoq04Co+;TkU[EXX?.kNY$FBT+B('-"9/lKpMpY,]A?MKT)C0I\,X(gqg^6E@1F?T,73Ha.h.tnC9GY_qba=)D`]C0l4
%hcf&_k_S'neji@?Ck?tUGNbsbO_+2,#R%@/B':<PQQMQYFS"[AlI6X'X14/?\J*8Sl>tE.1=aJ?Oim,Y3]d%R5RTHV]/)o43@uc/
%`d%Z2kpHm"nMYAg.)X'dPUO&nW'q3>]PJH2CU/3jMU=*:>,tp-*&PZPMFnI^X0^<S5OA:0jf0FsqnD"Hp%gVQq%VAdkQ)F42Nciu
%H87Z`T'X@dSPt@(OMn6;=N`ZBh6$66DjmC0/\FO`Qii2a$S6_IU45`)mSKd)'(*Y_OJYr[DWor?=atUDodqX[gTSZL02^(8oq8]r
%oN,s;^Nf^JIG4\YB4'Q2rUKb4=p:B)hu*Fg\`!96Pb`d!`S]uoq4"Qor$WZdh4*"\IfHHMIsV(SMkBIQIJq4`h1*%dp@e0KkPslI
%gYHfJpcml$?gN6e1@Mj4^NoZLqN/JX3Hn8kJ,bFNFEi*$oZd>05F$$[BDM@jlVI8)HMuu;lTe\#YC='4nbW-c@m0984b!(`l)U_#
%G5S"Vq!7*-aX9kqSm%I?nc%o?5,us+2a;[Ce&#F9cDpmL:?XlfbcQ?mr7+d`CjZ$@m9a27q.D82M\eU`eGebmGPD,Xs/mEXroa0f
%ci1TFdonuGf<:d[rU]IHir7K;5L`i_5MHTVf!Xm":O[]fil1NXhE:c9cd/6N%W?goiQo-n^OH-Up:g'B]i4qK5Ji\H\`q^qIJLq8
%0:r45ZJMHsq+@OIq6Ln3?iTeS\+brY4qrs*oBNfgFFLBb_G42t_#DS_^#m!ts)37nHI^T;jMV!gGPV(QB4gHNbE(q:XSI@`]9G`J
%J,<J/mgTKoi&P0Ejf'qd?U+SN4#SRcq+o=DI4O@WqT%c;n(Z]HrUP<J`ani:T:^R^c^e"[r47"g^(H4Q9<9e]Hru]FBm4gPTCR2E
%SppQAUua6u`'"!!Ut4kf;?"35^V@O5-+DQFh[R2;GPLmR(]X-gMr?;`4<p,,\8uXbGYa"1++nX&^BAmT_/L2Xc@4c.@@0LQ:V36I
%F*R;53p?jT/)B-c'\^[3oW]oPm&Yu5hh>M%L&q82%2@]IA2f8c5&)A%P7/^aoJf%V0Q\"a;kqu3F>jKqWup5Hs5O#rG/&Iso[S/I
%S*Q@dnI<D"kD8$8&=j4(D4X8dnJhMLe*'=T1&E\eKSFbk\>W6Ls7>:ZiacI^mDlnqR^sU'ZQ,n=0^nfAKfmC9bgS]"IWf`?q4(7V
%OQD+bEm.JUfd/BDjd;6nAVt1o@rh)`a%;:YPV-G-gF5IZi^cJh`?>`M,0)^6j>_mH*-/*A#n;VCal-*-3k4Dua*B_g+[_g_8T$7O
%S1oqCph?+MnM6]t&GoT?H(8jqZQ*\D)r`,G.kfdtPj'%jJ)PC5j5c8A*9>b!Gt;kI(NKX3?2Kbf"`W<1*$*hRS`MiQEKCJgaJ?mU
%$V;U(,,+2Aa_c!JF2LG,o5KlQ.,Teg0?;9]b7T#Q@BsCm><M`@s5iOe^g'$MpQIsNr*@Sdb&OrLgQ"))c_*i)H'J>iEpO;Aq;*4U
%K.Ns1d"dEg3/hlc8hf1]*9THmF5l8o&B:;T/*KGNBI)u,HKL,*-_[0-*&nO@,%NtH!Y$RniSe3USV3;hEZ@VGHbL=_/5">jbQ5nB
%!g+@aHc^n:fi]l"1C@h.n_;5AbBK9PPPh%<3$8[(5EFns6Q2\$91"JJ3KtGCnpMW->j*pL>t1M]ct8tHd&/\r]GQ@^>NiGqcL?\*
%hU/)3qM6nLLZ.S(Ts#l/GAq1<Qr,8SQK:/gGV`*VBfh>&+Xbr)dj0u3:P\0SL+pc)ag/fZi@N;6b#9ZQp@0=_29NYX17'@39..>4
%i[#>F65Ne.;:[B,7l\aKQa5&7XF/kLYPkiC#`X)&Qm>Y<(RdAmm5`jOP>"u>`Pq.5:."sJ1s.(50k<)To4`\8S5(Hr;7=qu%Qr`2
%$2`DJO6;]HqK7oPjFmVB1!!=IFQUc?4&2,`4\f7QJI;UTiT#HE5YR@Q<KK_7-RH%B/6d?A&Y;ORk^+GI""tK_[K1IO14JeJO>FWE
%1)U<0q2+J/JmD+El+%f]10)\'i[ZBgICFu+fh"*NKbGiO4?.5cnK;VcXV]M&MApMU*k54TD9pk_S6g%,d3^jnAHb*ER-_L?NBJmR
%*mHuriJS>Q!5du2&LKMi/HlnV*W\Wk`P;X)bkh]&3e5B[Ih^!Jb9Pf/bC]t]Bu36\11=!rWN]4:`K@J62m,e#qj*ntI,SS%m3DL-
%('G:EVN(r_K?!t34'XrdE\6o8`!c.TQd@<Q6maY7Qtf<b#`9icl%ud#>D'OKDJ3j&D",6BN\-m=A&n_U:^8b1,?_r&1^;MS'Ef`a
%Gp%-\N!2/[`I,?,):(u7FJ&UrOZf92^e/l8m0WFlEslMrL&MD_p,#mMYc#C$FBBuSN0TVU1tbg&d:9"D?R`:Ya[27U>oI:?eIbD5
%$;Kl`95N6/dlIg.GbLluBF6r:UJTWMDO]b8UJ1V3'F@&^:tS%O*)*l<K4l:26kdOsUJNu>:D>4(MNajq`70l7ScDC(dF8^5O^8KJ
%plLW\CdE=4AMQ#p7Z]VO.56X`J6N:G!l?*Y32gL--k]8h#()5YK_LU/"iX>!3LaK`2mjo//K"R(MTgfIEY=6m:aO5\P"\hGS15eY
%C-Wq&QoY:[,a^(@W._,GTrNkLTts\<B<&sC[Q>1_),cQsZV^R"&_n*aE*(OS^6MHY^g5=gG=;\j;Z/hc,?;<>U6FN24\VJ[7&;[[
%Pt406+?;l8L/=)JNUT[]LCs">o*Kj(jaH1uf2f\B?2pK#^d#JXp%7AE\%D+1$*ssp@'a.M&&fA6RYVdY+:-SfA`k.h%m//N-K/=Y
%&ruBH4TXY:B-F]^eJ4g?jZuH0/Gar3iXJ5o_Gl2e:Xg7ER4_V/6"G_UdtnKTVX?]m.EiE@E[#QuA;LPs_fHF)Z<<+\<T.-bD_H3j
%a:6/S$C`9<,)\N_(+3>0fUOb6X,KeVSME9JrKH3:b4Zb6X"W;W6Za8YKS:;Pj(uc4*"^u_iO07?!.T-MS&]X2#g7j:o[XUm*pNAA
%4l6#dJ(Po-55spE0o,DrW:M'[I.$OU)4bX)KVsd93XSqK$XXdiXrZJc,%iolJ-'ZZZpGD9b>H4370MBoU+VVH#Y,IN58fe*BpBqn
%I8ol5]n:'dWR)ZaaIUFkPiDo;S4p(Q<DA-h;:QX$[).6[>'?hoR4;aIN`BYl;oE>V#`h$6.X#RhJ>m!H)&l9fCL!l@aiZ>^b1YVc
%1`XP^S9eLBPVt\'\dd2cE#j`*[(k<L5&a2r,?u8MNl6Hc*U1sADMRkOht*3W5,?5CSFO>6UO.C\Qh:'0^]&<Hpb%TTnWPM7%dOmt
%L?l43"8RdeK>LE9.+)2+TL`j3/Ri9P;7?Z#Q;"CaL81NK371RhpkbAkcA]SK#2\JjKr=QJAT-PKC?D'g>\1!A73MkC=TrF$3QnrM
%H'PieG>SgJ!=t15<7=W&8m3'^F4H<YT=O)=CJM4o33#J#\B^9+X>nSHZ/Rm##sOA"h**kp,s>RUYD81n4RLs0mt6YH4oS[Yq!WgL
%3]kgt0_1TEECFn(j_&op#(Z;PGd?Q5jDC*#\!d5IUM*?DiOj+hkY.C,mTB-/DjFO*:'\J3BMN$)J[%Z&Fk@t[No,iWGL3"e!>GgO
%:k'AmlV1>Z?k<>#\e*Y[*ehop6'.De9H]8KN=Zl8>-ZcoPoCp,_uQ'DWCE[G.N(opDr9]N=J>;N_D01S05F`.Qs!mhj[ErXBEC(n
%Z`JJrWOIDDp<-XOmCkt%`n+qb3,]n`Za+k$H>=RK9TM30a%)[j!;KEHo_@Wks%hpbE0SQ-Ek35Y(oBs9N#-]PS56H_ZYY@=>L8on
%Vj!2J+OPG&:7b;Gl$+<V)@:pTJtIQWBA1q!TI1jX!1n^&!HosBWBfX'^+ojP(#h'#Erg.sZmcn^!B2)&D0FhaU!4Y61jJW6(Yh%Y
%E>FX7@86te($\c&;rQ#SH!rKp:V`ReMk/?:.m+.=W&(Vnn]RNJ2gZYe\lZ=K52'Or>2GM#g1f%iO$e"P\l=s^G.q1rVg=T0<FD-0
%C5PWKlTs(haVWLN)pR!hNi>+[`NfD_m>rBiO*Gr[bDkQ[i,KCoEI.7sI*<`s53fd"E7W#P4[/_ts)WKSK^NK5nsQ8#jsZi^b,=Lo
%1Iq8b;*K&ccQ)&qok5>AL*CjA>l"-a+#6;/aVN.jhoc4*:O*@$c5@[Gfun2O"/9HfIb>!,pb_rc5;-[;gk]p#6$QVI`N$J=);UjI
%YMD1o7G!5CCjf?e8^^,uET`+hdEcNHc2+bebp*(Y2LKm7J\)Lii"j/J,%D)tLac6"2Uq5uk52.*WYuKq7qiRT*#TQ^*o58`-Elmq
%hmqU-DnWTN'&oQ+pjGSq.8;UT.#VU[&WOn`;FJM6agI4nlX)Q,nl,1Y!@u8:S;DZNAE>J+>R5PqK:aO<r_VW]<keosO6@`?,O.L!
%T4Ns'qn/PEp--:sERXUcOnR<0=TmMj_S.BYZ6gaW9UHW6ECVrg&:n_:ED[/b_;-AO`K:XM\?@6r\dI^8dUh4/!kOffX58+:#irj6
%Fc,?=R%l-2#Ls,u.4Sbti,'`Y$hk<?g@J.YCm'M(=<+A1%#tI&PJsY=bj$&g/-B07==)HF<K0jUi:KpB;`-a])4NZk>\]*h4j3O^
%1H&7n;bMf/BG%8#;=1,XB>]B;Vq%uW*>a]<IIb@&OMg^no4Z0DO&,q<23rB1jJudV*];NV58Lcuk&K*7lq;Z[qRYHCDJ<_M&>NXh
%jr]"bV!dN0*j=9]meGStqd-gPEiIe5cDGFU#/N:a4BE=tA3c.ZqjeS84W*ojr\N$B,j^YO51"6tmds1_k<qhhV$6ujj%'FGUiYWi
%)MakUW".jjc]#:bTfSkO#\mVPL'W+&),-!]#-WVmGdQBKNK]s`F`)*g]fDO=S(q)#38@3mp+C6#33\r6QprDNW!h709<&&Gd(UF>
%7m0skZ)NYra3b-imCP@U@rW+f2_=Lo,ppApjVR?_*&,kZI6DU6R]##,-N/5V^Nubt=WWiLp)MR^4t=U:02CQI1#4t/4,t^P`^_+b
%j2gORHG"!>i0`DM8<8fkl[=fngc^sVRGh)^9D^$J`0gSb!abFk)/JJk)Wb=8r6H/9hkKucgFq?UO7%KkCjuPR`\-rRg_.1VTd?m^
%r\`,R$Wq/JP/dG>W$M5p&lr1g8d/+M'iJ5P8QS`OnEgE+/V0]L&1Q;;L5n=A8:%q'N#Gf?$QN=N5lEu&k]&l4N<gaf0+[;ee`-.p
%O0j&V*;m#cDBI<eNDDb1ps7aU$HPDg(s\JH]]Lu**df6BaeG>%i&Bgb<9FoNOcY?o=\-V"dL;qbnX[I7$-bX`\OVs2`,sRrFn?_8
%7o-k/au[+5Y-_Qs*L4jDP'^1'P60YLJIA)ZH?AM:<%Uh0H&X+=Fe,1o)7lU-dp\fEqW&%-+]biFCngc>$.T9=LRX:<Bl\?*TTF1T
%9sgK#9HT[Am1!%HU=+\a5WsuR<Kr4RLXNID=qi&Y2W9B/c'Z*fF[o[W@<Gh'8WVoOiGTe**="Uu@h3VRG90PoGhdRfSDS`cO,l9d
%I?+?O4YA]';hKeY+C06<Gh4L91m7H\X@EV#a)$0oI&=l3,WC=k0U!jb,EPVL(-K%Z6k0C*$rMg3J"R?cnuEG1C"6><1Q-:NrgK3I
%)4=8<C^Z)G+PN<BG)0"t(8+jF^5;SP??[siWoYY.m80kj1)mPSAFg0f%*ZiCA#ttf.ia)7((7'p!m8mlip<P:aW:6i\crdGdqcuZ
%_.OXK[n'/dDR`GNg.HtN:78[gXn%csos!UhGg'"t]eoBN4c]-G%dEMSk<+!Zeq`mBeb4"'k8rODGTU!*I1IN[o>$;^d4Ih+$)L#/
%b>OEu3f39#$sYS]2nTSAg-b&qR_me9,q]/>/gu2oV,c5n(hH(e2mW[K?#!D7TqG/(=f#'h8JNX]+WRqf<%QKJQ3e<QR;83u0mDjs
%#AT(3GbrGEc/L44X/8k+P#ft[7W%b@.gldXmo<KN?_^,(!V-E!S6(O.6jjH+V;[[#fkjcu$cp-!/Yur\i(7Gs,1F9*H_6*%bbfAI
%i@P4ic7B"&VcJe?0A_T!5\&[&dR0`4:Kh]C3c#Rk'\9r2/a^Kp,M;KW'M^#J"0D%+gcE5s(.I.0<\/(5M8as@nn0!V9Dj`(.lV(H
%Q7U_-j_fj&D^Q!<8MnlU8f:tVq<CLPa$MeQ*k,,@CF/r8b./tY<D?DF@F2pI+(nNk:54?A9Hbo9=]NW*BM'/m100^OXdFZ\2mo_g
%a[Re&iMn*!C7&g_;o/0-oh&9_,++gql;^]\c;fF!='AM@Vo&?NN2PaLQa.[uU)oaJ<Q]U2eQGCdSRkJ'"LsB5/p:"%<`\A2Q'@[B
%<S(\8<^u3[YZXq)KpL7P(X4P0Kk!k`d29CL-EH6lX\?s$m]VP6LXFO(n_,?$17GVb6ZfZe^&3#+P8CNBSlfApcHC0"6`MI.FI\XS
%gHN7`.i0pN&)$2:n/`7F?90+jN\9iIF.C0fh\+3VfYPU$f,O^)J*"GJ*m`gL/K76i:Ye@^[_X;rNH?n1k,E2F+c`k%Ejq`Oh,"8!
%>]$En9f)O0N,5o1[6h9/`m00MG0ATK.5ji*;De3_[n)AkZ=SA>gS-?O<f3Oj]7LWA@S'`9/_?)OP1C>K\DBW<W?#"lc&POXY[gGX
%,L0:V-outF+*tiue^D`AGF19u(tSDc,nWb$qcJmd/ZUcU4V$(6e]!D8[QGUQlEHFI3K=UiO00sP6\##i6[PnC8'1+6AbjN,8"#)'
%qN0DUI3)5fC)Kcni49*BC%?s6E*u7+GWC9tSkP'a/?%c8b3gf>h4*Q$\dS!kODZtiARr&6ftbI-O/BNWQ:Z1q^RSCI;>h#/M+Bc<
%V%+*e.'5g(Dh(Ah%G_^uJsm-j)ZYM0:hY-le"X'T12UZu#3]sh4HIo7htu_\O8jS$poe5eTN(>m[`6MogbVUNBjh$17N>"=B.Hq:
%d2.P5gJ][U:l:O^Z9)SqUN..q+eYd.?qFgYJN^'a=bSo&7qu&g1a:r+'cUiZkGB(u>qB14JPpXYaCJPV2oig=V)^+j:_Ih$s0`\$
%@D+\+D>L8Rf6-8(XZe\p7,GF7E\2ecL[_!<PO92&meQ^2lZX*0I/,5>U</J$.r;G,Kf9r5h`=knnbW$:C*9oX9=+.!S$)>J&dgQ-
%ZXZ5YTfmRb,$D0CACVn=h,IW\[4QOKQA@5;k,NL3I&["02#cPDgD6JDNR`_fkbtSW\snV4<&!DHF&HK9e7F'5?m@h)*A(EfHo3]7
%e0ENhPs[H@UZSGIoX\&?LQC9=a1n^H$O\o;_U5]5&hU6;C\LbI9sq0?.lgip]-;#6D&m5N997\*qPN[ma#cq0YeJlPO%6"=;r)]M
%nNc0_ol1'Aq1o,92Q%+!4`e($KI+:50_F!!gcBV]!Os*!W1rq@<Pg9:W+$R/>AI)=9tXL[-?W<tNiaWL'l>n=nt0o!'2P=CAHCL2
%19`Aq/$$$05^Op@B?)Y&D-_\c:]oV+7;,Qk5RYt7Mdj%FjB!q154J;GK%X1U^DcqV=',i!lN>9*!&2CJe^cfciS$I<peh0FEA/fN
%7',/N%1]Gci+7.P(D)PCJq>'O$bd)Z^)7K0'bl$O'\H%E53gc+$NA,!4kBS<0Y*78_7aq#Y+:0rY/%cWiO-S,3VPEOGW4Dq]fYE0
%*PKM!s6=`X^+.gA_V)LYc*H3QP/4<%*j$q><T@G4>eg@<Z#UX;Vnr43-n3"j:(,EVlZf?2i5=j-&pefdl_X`-;h[jdIakr2)\C)G
%*JV[b_?2s(>_SW_FDN@@jbG,g6MXt;d;A!UYAi']&%+ZU)]jCk3;kUX_tZ8Q]!lE0Bc.P0?+B[cV2MO8(RG_?"^nd_hIJoD?1?r"
%oWek:/A3c'lp<Ds7_.g)'W_3I8G(H5<'IMk`Lpkk,9h07P%Y66\9I,X\]frK;a;^EZ8[e[Apf#O+-tk38r$nOeeI.,(*$O"?pFs,
%WPG#sNn?Cjl[uA?=;9Qf9b:Qu<uttsRF&fU#;_i%AgD))Y1OKP3iPtdjgc_,,r6!jUZP9MCh%(+`dujg=g85H"07h.-/gR2MLoQn
%`hbK=C]oZFpI*`^qmlF4m^qr^^^\q_*#f7edb0e*!!E[BH>#f3ZM](*SJj\gTi:K4He^50^UR50<s,giX8^":s6HRbh4ZsS7ToC@
%#O^&L9HN^=nk0rLYI2EO#7"!Er03C3\D@6.du3W[5NUso]c<Or@JhlT\sHsjRR=&lUg]elB#aI5Fn;k"Enh0$(g4k+l?8uBYbcIn
%>N]=@QP\l8H$r;qj4rFlVHOaXZ71pF'ZHdfRQ=Oc^nUJoKe:?1qH$Y0&m8IKMta(g,uY.cU9[64?c=0Yo+UaB2bN0$A.clFKss=B
%*FP$OWkUeD*DV"(;PoQK,$lEt+]]36J9MbCmf6[^j=0.i^^F]\!@*i.75tFajCf)gF;1="QPhptj7!U4r1>D*jnc#gmKJo5e6&*K
%(5`gVA%6WNG``ikVhH[b6FqABol%#`Bcn]&KJ1u[BceqW_c7/J^!!FPC6UQ6P!T2#'(!;4P8!i+]\A=<B<X="Sa0L_Nk2:8*J=Yu
%A6[r5eQbH]!]oO:?isUnD;Zm:<2IW7)PTP\jiJ;B:T7I=<8T8]chiTn>\`PFfLgUqOVAJre@:=0BMfJe(lD;r`NA>1]POFa^oZJ8
%Rn%_]M!^9Fj5NTgO8Qf@)5,F<dNlLH$[[-VkV=$Pa5_nSFBA],Vdm&RQ;rcWh;R4*WNI7SM69\-RM?J#dD<%e^Go;rV'K!_C95Ic
%$>ETH2&og8$qiP$L*A0;LYo`*\2uRp>7Kq0"U$B-=*lf@ZD*O'4uoXTaXBd!gIFp2Xq=\\\n].Va^I_TXped'q.,r+^"rn\?>1b0
%SF8j]LqVd=+d\\;O^Xis@MmRq`m_e6R([!HLcK^M`u^rk"j2h<h=2)j'[%j.C.V9)*FAH\*aFR9$W2l2;p*VBp^0RZ_;4'-F:8!/
%_gBdN#YuBq_g%qq]i]T":__<0Bl9YUk."iMIF.'tX6ml#AM6C%l`DfjU0L;=V^`LD$]D";98iA_M[dN9b-L!V2.`*-_G89I9?mCG
%/]YPG!jJ%ISH,t7VTu5H$7_BD;N,u4:+rVn@F`:r-a91iZ0;TDmg*.4PbOD%5;(e"[Wj_O[)\GA@/YPck-quShG^oV_An7hgC#%E
%lOQVMI!I;=rrS_]6C[\SRe"T=bFkaK?5s9pU<@27"Y9PTPh@\=Z)!G\3>mhK<"_6MIa8X/9=oN:XSTK4e1)ko0.ODDL3[E(2nehH
%<8Ud?3[[ho7V[sZhN]?ce>YQ'8ilZaU?e&9VZ*q]c^jp!&Kj=7`iDjteQ$:$SEjNMY^G21pDPB1X">m1d8j%C98[Ib;(KWC?4s!9
%h^F`>W2l\u65*B.^!s$KR6uD,=$IBHXZ,EY0PB[`f[HbD\`]@9=Bp5Z'oTL]J0q<F%CS=/1;-:`Pu8AopK#rk03$Ek&hI+.\ZSAJ
%#Na1uZHJ::a'Z$Sp.B+)LZ<dG_Lmak&A,Pu#(""HTr^NJ'J)PfLOK1<^gg5fBbsiP@HTCfHuilph06'=nm-%gmeZMA$S>49b0c`C
%LPLoi:j/SFq9"60;JOC5"4SZ6S8FJ!0lMJ5"u`&2?V/"/?Qi8>Mmld#AIAQ!ng/4W^3iLf9qg""b-rAb<klTkI?t:>qN=s_/9TO4
%;NsY=<E[W.#SS_mJ?I1^'GKTF9GqfK/dK$;[[9\+=>EfHPjG6OFR%X'FFGc]4>k#t?aDhHATg,7]*]E.!Q1CgVqh(]]_/R[k9WLd
%5PhLKIHHI$.et=HHJ-oh&FT<"hKmkio27RC8&+_[P'nP@i#MHV^/Fi!Qsh>W&1tf>/"g9,nZfI*!l,\Bn;4)0Bu,&N6e(THoDiXa
%)eM;P4b+H(-9`kI0T>=G.H6Q=KWSXsLA`Uqle&CO^R"h5!Y/rqg@+KZ9tOD2m.,U2lcKPNFku?VleB29[U8!BNVc_aFVYEtW7c+0
%>$I`&p3'`3>AdTpKFlg6<kVl7[dsCNpT*2d"h.igX`%-OTVmBG:?A&[H<P9@,_["e-B8I[kUE7R`3LfT1ac)_+NY8cos/;!q!QaZ
%E)SGAA$c0tqd*I_R%&i3Fub?Y/fD6UX"ss:]Gn<Xqd&sD7f@LB;4Of5HMqkcYkPQieebJ^<]'DESZq5V's^s#?WY6NU1pj@.*o4;
%pL>rG2jD=Y;DrZ0B!aMGbn[$=e1mRWQ`I=YFrEqs"f,fs78q]r=)Qhc<OSrj3?-`*WJeHiR'$/@hW@^+ejaiakr[4Rq)Z)`h`mAW
%@X-5DF5Y\Gge^$q<@>I%4,:a%e#Q0&Z@^k%BiQ[CYDoZDY)TWEY`3YO?&UJR%CtAddT91Rb?aGp`^[Y(jk0FW/]W'A<?''Y(nZ1a
%q0:1sF?.WqUs$$SP&5Efl$OO!\q,QLc-00%F4@0VQk1Qm.8Zj[:Z3gnNoc>dL)eRmU>rLjF'B`8/2'YcX=V$i-S+Vs*i:KYC`1Ss
%_F[5:f/GMQ3q];":.r[-LRXU+3)QWR!#`>4$1=OP\,BtNGg\uWBYLk59l".U]AD5SHt,+/#t?/24(tA%WOi6QDa9><%WXZJ+JJrZ
%>5?JC*SUJHYl"/s[h-T7.$Sqloqag<mss-o.#S42^B8F,jj)sNJ/p:L"Qp>h/>de*BKn'>-Hh;!J115"M`&a1e!7B$g\V9N<K-g=
%0=k\j*gD&j>F/DVA6>(?mG[G%;9Odi*np%giqpC`Z_kub6JG-_lfkL`F*PHm[gm.V5a!()L&XE,fFA)N\AlAffMb1jX>S15$aRJU
%>)+VckZf-t)%Xo\LI)UAVMTN32g9m,KI6&V\MkNN_qOq6!,;U*(GujW%f4oPYsfhtD6pJLX0:AuD==mhH8kJG7"FjZQb.i%M`*UK
%2!)*?DX$\uicprq]?N:,DF'R9'RhhU\1EZtQc;6j\?_@<f/K1Z9Us&U9[A*E.GeGn1E,>uGErH!OR@\BRI;00Yf(sg0I7p<]gbHb
%nJmMMBE7.o&dABZnM<H+)5)?^5l$fp51@G_ReTPi&(/>100o>ODk:m^V(0#E[!6j9ena::k\k\gc(DfcFbLZJEQ/O&YbXCa9Z#X7
%kQ:a`;HWl-WY@!`!aG$1p4$&rLQfZ!\D@HrDIISSF6Q/ahM5A8+a:Y\bkmLFbFPP==2Y_V(\L3s3JG8!^;12<R5]T*:6GAU]tNT`
%qsT#`rq?>0G)$l0TD^Qhg>_SI(t`I0ln\k>)$BbpJUPPR5%@um0sJt@fOrt41Z%Yi-9fnsB:AUSJUK!V9No1+qq&$cHLq'bgZPcS
%qsqqe<:<%so#9L9cd,)Zm&R%&hql+n-!'s&a7#W!nb$Z7nE&8moAM<Yh6W;:^74+9mA;SpbsF(q0tOtVTh[(,][n8*p_Wl+;?*lm
%`8*ZW<WE'ujS/['XacIIf_oFV:]FqWIJ\\!rJn&a.JG;Tmp;aal@uoX0:M4JI_Ft+7e<pL=8;6&pM\o[Sj.T!r:R+gDuR?FV7rP^
%D\'$Y^Y&L4s!sS3DpI6(J,B)e2i"<Wr`Q,gS)6G[EW=;Pm[q2k`U7Y``W(qtlGNXg+17H!55B-?)p-"a5T%Bm7u);^qam#99;5*N
%*VD"okoZO4+3SAg`dB]T.IPtNhM%?'c-i!I:_Hft!VlH"P7;^p+B@"gq+g-M)Vgl&B0F4j@_[8e<t6u_+gZG4Kp6/<9$]kd(:d?8
%^YLm44(L8:g_B5*4GMZ(Q_N.Bd^=0Mq]H,(1#9rPp<k_Pa^]R0M0F6(Za>[8@Y8p=<;=;#%l4!,\e?.DGJYNkVEmD;a1Fo"gYGYO
%>.>NV]k2aQMKQ3l6QX;(N#Fq6o5@%!k4rm_@Jjd"WfWe+jb,cVZh#aGDjR4]a+VXU44N!;AXo0cEh0rQ_NT.g\r.VN36@CZ@mgDM
%GaZJF/dedJK?l9<.EqS>TiK_V:6UGSjC@H2\LC+&%!rmP!&#QFf?&GQH"Iq,`+^tN)33)9KWs3uGCRtRp+eKkS%[G\Eh85*a:hW'
%@`5$8J.RgFR4.I%X:S9Qjn\!(]4oEt"UGP2(hARL7<G9WN!XJkOIMra)0rnN`Nm@)K3/_u`un&X>.b9ifkc_:jY3@\i>9$0VV,Ht
%9$;n3D(uam?rh'djQiYkST+($S+TZ^W<#E0(0LaHUqsX7U7]T):.S-g$(@':EAscj:AD!PJGmR(6Q0rQ!km?2dOK<$E^l4J,i1ec
%(fMdmBX=;l+d:/a^qRW:B9=udR9c&"a=+GPAZj6&p:SXr0Q&,B5D]*hM-Y6O2Hp<lHSMF7cGM'KSNtr8@AUHkd#%)qH(k<Kdp*h[
%P*[PgA18bWB(39LOtGj:1OnS#g^JPZ48,.r:o.GDlT.,qY;BWnAPY]*Xc-u>r)5LU^mI.NG*U:29Y#!*fa@uCDqSF%s(8*LF:6k(
%Opsjjb%3m>!;/W,8cU;-;T_DLUNg2r3lfYU*(HCqSZ!W47,05'[KP(n6;*]obSK0!Zd!J`GGAguZ5C)N(/u!0]0U\'F#*'OF=1T!
%P'4]1\r"K`R5-THZQFiOn-C7!PdH6!K=R))-D.[rOX0$\LOO3A$p/H[S?`7E4G4nVhunn-%^%lcbL"LD`bNV+b$k_\'qIk)/K&^E
%5)nrpKPEp2+uf03U->M4a2r&e1s>&q&[@I`m1,o"#Z&fgAhWo+9Dr\]b6rqgiO%!F9NGb`6]!Xr7/9JeJ<.Q%_=?WR2"JbA9mE(a
%;+0W,iWa5@_QrjV:ub8GPiiU#;bk7D%l3ToZS4nq(6Lp>78/U0O^/<"C!=/A)-bL``'MZ_DYdmaWJCX-1H@uUQc^$u9Hh56+<*BN
%@iP`ol'*J`?c"`u"Ucnb,[n5=)OGssjeYP7%,MgKgF^Z:0LhP;J9(?YPZj;7^kj8O^e4d<,M!F(6kFhJC!L:/B[.__g#,3Q8T-?C
%VU?+TCc@'(6Ams5Tk\iodAQ(I;&BXd*$HO^L(Ti2;0^+eY(p4ObVlA)(-@SeFMbh)#%Y/2H^9"Ha?`u%BB<$bEp5=#4]:Do6nt!u
%PHYMt=%9f9!_X=VBNN=hX(hgJE/21uTaA/<#T^9#=-aUFk-B%NVFU[nHd\$a#LV8enNhq?Sb$7-'XD[l/rkl9JqU,lYsjsWW.@`.
%"M'lDS59VpaU>R"&LB'lKTJT`"qb'l0X3ZYZIq[MG)S0=/;]AEV*X6T#3EoT"-aWU$t75Bmm;L*_t;<:Z4%d+)9t,n*+g8^>VZYs
%f.8M8Y!jMM%*KRL6lCBjDA$uURmh#l$]I,hEjM/cIM`DH$(2"1QOh>nfP*E@VVE`.1Js1JKEp9`n?0J4=5fK0#B/YI.NtdF\0rO+
%gtF%0E/1_GdO_/;hQ'nV8=,W^QlTb1.X'5QP!":MV[9sEKHd^#Ul3l^1'&!1J=VP[K!SD"<%cBk.3a?Wa9]"26FJ\R'HX$U0&<5)
%!!QLQguYeIR^r/Il+/IOU;OnWL!&nT*]fDG)N.QD9N[bDhufGR#<IVq0LDt.`tPTcrF8gcM-\%I58H[66HML!DI@.<5&(JTE%!kJ
%)Y?Yt=`e17O/$d&d'a3W]+WjmUh[hXrDZNc=a6^C]hAl:+bSaso+/,Z+aE:#+XOL?e\h'r7"iU2H8!\tU*NV%T#GH2HcVAnhI0($
%!I"][:PB\1;7-W679l-WotE9,Hk&B[66pSeO$!g^J-^PpW;?r3;t`#Tf5\TB_QuF:dm6E5_\\lSe/hZ-jK[gV@b>B]e#MaB;\u$d
%op1<#KjROcU;G)iBgnJJ3[F@ZfKb-f'krK+0XFb;2bm#-;+\7$d%RfP8'0O2U6=TSX'l^!31c@6^oPkG+\P,)3aC<1EXQTT^0Y`H
%<OuYj7C//*-qgZ,9Q[9Erh7PUJp/4d*0qGCUb#u@Cb>j,0<q=;&;-LB3[75).HXm\MfGW),Ek$l-&:-SUf:N1Yk1L$0JE'p/](E=
%@Y?<bj5>j;,AZ9DD,*iLh#t+l>mUT@1=Q"["l0^+GO70L>1E&He5142Re*jK4-9RYBUYJUG4r(Db%Ln=nJ%F$QeYFcOTn[Rd#anI
%:Qu>lLnL/YacDS/WZ):fPD_aQ:EmBmKVKE4%aQn`BI?-APIlakZ5-UK!=$qVpVUh%3j?>^kD;MAWZK*C[:OFk?5"l*k6dbMN+&UN
%9Ap'ONXSVK3QHkh08SbS$PCNkNbW8r)!3M.JYuA[JaRl%p%-$bh81gor[$FV.^u!uZ2<:ZhnFC8lFYlu%u:+iB0X-.h<VOGEUk$X
%(_j(P&^OF<AF`,@"pGi/`&\>oTgC;]qk"HI=C4oH_)u:7K$,X4kGm^%,pe;8P"#F]K9DilMmAG$l2VUL;icf7iG-g)aE(eKOSrb3
%3TqEf0gs!Qa\,'0*,-B\kRl,JZP!bLG(g_ASm,,..qm#qTIn@Mr:Eqa?iK#Jp9jsd.&g_-\uST,TSXd#hU6R!>B_b@$&amVL=EGZ
%^%&DLrX]Cp5S-1Wd)snPUXE-(37![+!M$n1;\=6,EMJ=](r81bK*DomWZn)dOLrjCe35RIb1;6#J`2EuAFPO7L]Io9,/HeR'DAA1
%)lQgtPd!:d,M(,t*MR"=_Z8^+Atj&M.SF?"N>u1d:H";.=6*1gg.]Nr2@Ruj$L,@O8<@m0M[P+$YpX/dTJ-@6X=XDqI'jL<$nFr7
%L`(?hZnnr%$m^@iii[eRM##9"BmDbP/C-EL_;l2A7EpIb\b`8$+a8+C$mSq3YUu9T'X>8\iM%0aaqQSP6NC''SYsP3O3p&G;m[k4
%=/+X4(=;cpe6kJ&'9L)X4Iq(M$*T'VhCt@i$L8No9\s:TJ0C>Gj2Dk)Tt!?XTP!FsJBkF*h,1.CZr`Z<R+=&Y81871=+]:N&F,Jq
%+W";7VSNPq(th#<=J3WC!mi,`d)6\B/SGEh:-(?rlIC/2$I%O%"FNH<4g^"s-*gmB!-hXkBsZtM;.VF<cdI=(f.o(C.btM=8>ghJ
%nO'BpSlO);_C3QJ:q\F'?i`uJ7--`%'AclG#s(D]]kFlo..#;)RoJgE@+^A9pf!;9,PJP7B%aB0:8FbN!@iH_9G-hL7Qd'R=BHTn
%YYjb)BpRE_GRb5t8CS2(qQ@n4)'2fk>S8Vf,j`qZ[Y&o4?^5c.`\g)\5mt->jQFrQ^s`iUKaXo+#!'thj=4pj'-Nd$4-T"23f3%^
%G84ZmTKT"%?o@-SS9A?2PT)OHU/$Lcb#Yd;0ZPu;"<3.8Mf:&,K9fXUZfkW?)F]a5%h;%<=]WS\9G+6?a'mAY;=M:dc=dt/js0Z&
%.5A._"5251$_\[TctX#e%:N6kP&a_oS7]'Uk,s:0.seh9"re@cZqc]=E9r]jPV?]PrksRcY(2^7#^8+L0kUL\d6LBd/Im.n>4O@X
%[Y-@P&g`F3W$bi:ia\&R8l.<4'bmE/(qe:-*pfT9Ca"8TK"2Mc@4E>b8Pf2;F=D`"(afkqfer?)10Kep.p>qdU#IC\(=qhGJgX6l
%Qd/PN!i\PGEnSY:>@B\;*CL^1<>Y?sTGO@</\9^OML_p?DD_[s:Ktaap!C!WB[=1&?oXH$NtoGXJ!5Y<EXZ/oK(<.4/hr^:GS1dk
%euf**SJ,$=3+5jJTc6P(>t90.9rj:LRO;Q<i,a.h!a64!7C4I!Alf0oW"CC)LLPQ60I[j-Sm[\^E"IASQkjrn#b:2q*+0R6`Y]C<
%$Jp;M;:N-=_I+*B7UJNC2S.hknc1aIG[@`Wrr=)fXB,>o$K0$d<i+V)oX5MVk,(8Ln/p<1JPnteZ,@E=#=XOfWOC?18]p3aDua[q
%k+-/o6!]4P,`[#uB2`'ROJ_k+FK<3VLuToTKnbsCa8sLt6T"r;HG[6;)8S7#r"qh\L?b<:JG"b.Q0&X8;?8cf)^&PCdV-bPEK+5B
%l3#V).AZ,TF!%&D8*H`+`^'F/,uDbrS\]K`[Z6C5LtJALfD:XN+iBi:VXRk&;\#tc'Vg:*8bT!M3P+baZ6_un3qfMV@S4hM3[NEb
%g'j;`-BgX0%):b'e-pkb`3h>4N'/=9A;r4Xg4a4%Ki-V>12Et;U$O*ps3b<I$Ekei$h?Pnjai05XJYRlUtURdMgZBR!ADb"#:*7_
%kckiWJOT`LfdSArZqFgg!f7*G%uW@HKVd6(q$fb[e7BL&<$f)90]PLuOC]:>0mGK'\n:@e7G+R.J2ZAZ`0AHTN5ErA4t!QYE2b95
%pt\DkY_lONB]PiO1ar!1]@ndfLTsO#Y[LGJJmKk8?'IC*>l;9,/N1&aPlQaf@tO$CJ4IT\l3GI1gr%UGJ-U^q!UZ(&A;S1o*RoLD
%3Yt$^>L85h5Y!Xf.%,nuaotUT_>q#)SN.AF0g4GMGk?V5'EKg%,%[2oW^:I]9?/5_KSku)n:ZcuRY[j'l+Id358H6^lS$WnQ13oU
%S;1/h_gTKP!!k8HKu:_A.RF0p"2"ijQop:s'kM_"dg*dE(n9H7O^3kL;0qMMi'+GhKT9=N3p$bN@t;/7lXDQ[IK2'!J4U$!lF@l>
%cr$0hbTS?a2sR1>k/^s&@Ua>fT^2fMCXSC)cCfr?Z:gmq<H)CYZ,jHuVh:=CFk-S5#d/\s!/oeV!"a`p7`-oQIreY`G&gER`A2uq
%$hYAWW_NqSO=:c:./h&u$q3u2`#'0tAJc0(QFW<(.Z-&29pcne#t3a;Zf'l0gWX')E5l=g!^s&I>\Ithb52`YikaABb<khq;7buD
%7WBVqKt&@MI^bG+WM.'sL+H:9M6>ng(^QFb]p&ocCXRhF,7p9I0=n4JpZI!gQ3i(SKl[;IXb9N3!=3/O.ZS=BFU^HF"T/C`#h6Fq
%RJe"A8g2??'iK-&.Uo38#Lsac9#J`Yftc@/^rO8G_,"IHX+uZ5"*h$$!5Q59%M&fFS)5;SK&*2^Ei=]Enh5oI/P=hi:*A,ZOA^UY
%'g&t7#[7j5D/P]o%Z/0.";udtA.,V!OfLe`aY&8dK;r=!q!1(N%L\-@REKS\Rb"kM",74d?A_1?./(hIfRds>a)UdRT70rcJrr6i
%[j?ti%73%:5tStemh)%Gf'tV-p-pbeZNNS>4>Fg>!aIVn;)IdHb(RJ[Wm([L%G]#j4TRXrfGj$=6@5`[MM`YuUSoO%3.prkUbmcZ
%bU5p8Fb0fICCm]`prR&98am=04G?CUStU^1d&8^*`cS"AGter1S$WaUd7[!Ll7#M&UR3ce*`GUYpg?K%1J%oi+Z\N^mi)1qnB27?
%)\b/u\k1pFC,Ad!\`ao;6+7@/)GN8KdQ6YQn`HWmm%QQq<al8he!Qei5qa9",Gbq[8_omTg-YQ;RAU)J-*2l)VA3i$,Jl_,,;aIU
%TGLq+K2U1$!u@A*,fteho/('8]"bL;S4@-1XeKXS",YPn^CFjU33UO^rH-Cg@7O9Y"F;*U7W;sol9KQLe/^q`;rIURCcIl,D?*93
%!u!pPofBUui,bGS22Dp`U:'J+fSR^S`(>V0DZ\uh/rWFJKKYiM1Xoc"1ps88@NFD+K)l^#U#V-<AYT-\ka8I"7eDVUks_5cd*,JO
%5ZN=]11CUGT^"=Lg*n0T&$Dk)(dP_a7=mnYOil>s/@pYQlQ;!"2pb>D![,^SAN73a`C9F@,RYMEY;@m50/[/Nn<aW#&S;1ZTTb+*
%4BYBF!p2_9/]>TDD4&QM__=^XQn@_9\hUe=W>aTO+bD9I$VaZ\nAmkk($;*cbA+sD2+Aq2ib1XL!!O6k18=A84OLDiC^^d-A&r%g
%aN7DCBAV-J/0:T+*=!tWiM`H1Lhad$_Z7S?>%EQCn\S0r)Mf$uc%JBb:A=u\q]*e\#Lg@6@4q`G3#LK!OTqrig3%"'aG-4BFp]5k
%;hs!S(o%a,VAaIVN]24J`5[mlF#6-7^d77n)8$fl97='IC8r8(B%-ts<!dhN5TN^3E?[(TfFoq>)?)u&h)J7qC-W2uG87Z?diU5a
%6o34K4Ma"<l;dG[*q?18j"c:!k/)Gl8ra=X>*P*$'$VN]8"3k.>Y,=OQ3rk@eC=piLBnPml6.EqmYOM<TVSA+%U'`/3/O"3"A[ko
%Uk:G=-C`OV*"07aX&EN#,$p]Se6iHclu_g+J\Vd)%Q@I&%?\Pr0fW#tF!_)$A5reers=+iJ0k^l3NQg@*[1Z!L-c`N%,aG%r=:T6
%)@h9K`YCt,CsRu96_upJ5fha0ZJp,ST]46&1I7tti<Qk:n@(_+!P1sHj<M7nJiSIU'g@d*_Dsnm#d".jUc'V(2@Oi;^k[Z!#_UOU
%$7IHC3^[4_G6)u!A/ujm?%J,O'a6_<9\hMOE)LR-c`.uDl+&kU/M^"t1/\pE5pBiS<ZWeM?t9YM$8?QOYdh(!s5<eb;.K[R)1G3%
%&/ks\']Odfd,6%fcJi8c//dY87XR#iPl\]%PFkAkPW'reKW@gRK-(q'7*$oLD%YJ5"sKL7;1lqDZ(bc*%QGL%5XpgM,7&BRfbCKM
%JO#S?K+9AbE*cp3"=tu,@)=qcdiLhaSu_)L$Edk6JCVbT)1j\Y*"Bn[o+`jA[T2lSa:$8ALaSQ5ZCJqqJ>f/V7)GP"[-%YMM9ZK8
%L_,CK/IcZ*S5G)`J2_(:gb3GUP?RQX]bqfV'hl^?(:p-5Kc0oagqm"K#P1XI6+AAo3mOpiH;gg_EE"l%eHgk\'M-\)6.a_U(`u24
%N"uIfBUNX4Z*6eW]7ER0.LQM]NmZ=PV&Tr;;"8ta?n9#eMFr66%EP7J3)gcp&eur.Lu1U&+C\7H>h)5qF9E&!#pcWMIS'%G@8is]
%&lY(?Vc:cW]VbN0)Pg\LZCiGS+mOoa7RKWH\#&O6[cjuJ?3Eq5mf_kT">,g7,@Cg[f2#t""%+M*.*u<g,`oSV`!#9d:ofE7jfDiR
%YXJ_E!,-uNd#rpf!#m2(%CB!M46c,+Kiu5<cRDCM^G,lt^)JV6L64`N-jZ>t$R6o"$4(9?@m>VT10<0=A<<$DKh-aEBS>DVbR^jc
%Oq%<mL5#g8ha/%*k9OgYKRjSP<+m"<&ck:@")M)\"BQ2W$qh\B+^NII,OfUt$aXB$"'VdM\.(cMH@"h-8fR8Ed"0e>1V=htD@(*H
%L,@#^@*4E9L4CZ4-7"J(f9fA;<Zl;F%u&5MAHF&@#L")i&F_UjqjR.TD1USQ.-Mo;*Fo<4/S.pn0S;fU@@-dFDmFo#PMqH)F$bch
%&<;PNJ[1B[L)tb]2IRN?*hf?c[>?sf-bu"?AK]i+!ba"W8J=/O;J6,alBJmOEE><NBq@lrp<3tsm2LuP*m^ZD%p0kmn,X$0W/<,m
%p&gN^YA.m3*t&@'UM^>9+ImVQTQ&DR+#+LOUK#3ii7LQ0!Netm/^pB9%-*Ot4hSn1kh'We:>.fVZ:oKh!2r7Z*,-W!3q\C(7-JU1
%Jr7IVJ_?^X^dpU#S1n1[\qc"XKRi!rd%3hi"b\!lcj1"#JX?r@HC@.iCU=%HLe#CB%o[jo+:6gr?!Ra)!>3$sF/b3NReHfS\^"d5
%E9`6q!&-oKH"r@^Do(n,#UtCQ%k8T"eON.['dErP=`mYT<'2\"Qd.Y/^N9%s[&07g=eI$j+P+d<p0%Je#[33()_Kt];U@tl@XYGP
%o[?V$6SQpnoX9WH)J#iR*f8:f@&2j,:5CF:^k+r$'&:Eu.Q+rZ^5Rdn5rDU`X/ZZW:d]2.W^.\W`:2f=ULGNg,."bOTMq@(c6T:P
%4%27n/4pER$4e'2Xpgs,9((s0SlN59^J9o0[WC$HFq5Yt@;e[R(uh,QCGF:!98jl#8KI!e;R-FM;^W*;*\EIOn>=@q9@tTZ6/;Ui
%:*<EhK+&/p<]W@i13g<raZiZ.C-"cSq@RYZB1PBd>o##t.1q&D7)kPF7;e!%RG$keM*b$h\e+?bN>umqjeF,!g80Eg;iH&PJJB&-
%PQ#*#;.u)?kkV0NW^er1'6B>1p1&1I8iV)%pAI>r*cp/aN8cZ6N3*3_/[*P@'-Abj.h0Je7^*WO&!*g*:uX.=5T1/6OpVd:1a5m#
%(ckM54A^oO+NVhV'c?.NWPMVo"<K7_O_ELj-l9OE*=[6\*93"D4m?XbJ=3Ju5)1n%ma)"uMCfABBL/@J>8Xh[QU^YqqT0^"BFuj-
%.\7%a5\G=QLI^9@*pR$BFDqMC.]rOiJ.^?%OU)?I`F<GRq:*78_;*D3lQ\.d?(cc=$#"!t=GVXYpa*!]X;Q[b`Ma4O;7&oM@?;?c
%;ke:D9hd\T/n`f<n.7<5c]^=<p^[bZCFcLY$#hI@j[Gf#%$(SU#8>WTabpl9)"945%>0A^%L+WPNWk9ThAgbd6EH)0"jOtN4e7`S
%)3uK,HNm2''.S\Rin2,027kUUm7(lcgM8R3e45EQZl'C3@NhI6/`+U>M@9YtKH=>O6P6k/F,@ecQ'-ckaQts@Hq!8t\-L%UIp[f5
%ad0Ah*OX_Ejo?]K6EE=H@GHL?EG/dj\rW0>BU=&-bm?a9%2"#&_kbrl(kpV*1ZN95[X:VNR:(CeIgT&GGQ@SX(i_?XSYSq0R@m)'
%YtA\i?CNgT4W)';^qt>qacmOIE-h1LB"UQl0-Y4i9nP2($kQnEZR$V7FU*#V5k*Q%Yg]><a;cNr])fB1aAM,bU(le^AkS.Sm+%'2
%j?Z`>A7WRR&KsTA\Alhsi^AGDST8+n#c*"R%rlU]VIR84S4<E]%G-@q#@<E[#.AQ1'.3fK9u[6Xc_*pcou64?EgdK'7q8=4Gep?Z
%Dh276@4$tj_/eeK'Uq@s0%Q<;Kb->us"L%Eoo)p@]VWa0aC$L7#%GXt+h)1:'G7_51fr8q2&aW`N"#I'J,r^IH.EtHT*bZA&7Ia(
%".JGcAVuP4(-F/O###O)*BL/Y:)]HVJdl.bR,NcJp&Piq28gQ+HlO\&fIjQ#*Ae9]==??uC#3e1X+ZC2raJMgLmD<R;FYHD>mCKN
%&J:EBndn/%H$fZMUM-DpDMQ#,"<OKG&PQ:P6g.7p(tJ<uko66pkXS/lN.its5EunuPOT>*FrKT1i8`-)],CI_^f)qE)U8pGRU?8*
%)qALm5<g&A"+btb_@qtGk58:7gEF+uc%pL-bT[^@7tR*:O;JZL+.4^H$6!$.lB*b_h83L#-ThBa6$uG*]Ko`2&<[aW5t.:.'7^5R
%AL,LPPZpm;VjoMrn7b]WTW'hGg>Eem@i4>`j[bpMT`(B<9T<ImaFP92\<//Tn'>Z[2^jbkJRo$>O'nf:BsLF"(u;-IYsa\)C"79r
%'tg%P^Xs,fF9GK%lMte\)<3_Kf>5]T[n@$`E+*C6b=+:\KL;`tNHH'^`#Wc'+*B!%+D=M%k*K'eY^KCH7@adl14ibRK&fX+#&*'P
%]nouGZ3>qt)IcBY^IM*JK@^F5J18_i<@?qm5mYW0g`?nZ-A0Ve8<!WgK#K@CJ4esi"dc&aUkSP>qB1)+:`Wd`.X@.9=9I\o.hFQ@
%Lqj9jGj7g3$43AV(_7p(gQf*D&/k#]/1:LJ-ac?)$R/9hh)QqA5dT/]E$/Ym4G2h4Q0+n$<0/hn:9u@LAEfjkF@H[iF&#.n9aoAM
%8/sKnRWaKmRK3SkgpRl[Bm*&-"epd7d95Cq>?UWuGuU+cRV?tU"pcn+;KdRS@8duL4p=q(`[O=iGka[:UEI>`(CE-GW,`h[PZ1JH
%$:M'L(_9!)SN<?l.^2.D*'DI^HA8at6L`[M>%i/U`J6oDZ^(jd0OM>X!,VjRkK1"01IK>4.b&@9o:Fo.O#.rH.BVG3KP(Aep7t&Y
%_h8boXOoo5pWc`ri?95X2^+ct8T<MldfISk*YcQp0WaDH7bEhNI`rpEDi)PTd#<_uA3>sQJ^8Y%V3shAe3[dOVLTF^CU)iPh_hi6
%W#C5_E3,_Kd5IIG[g1mSaD=6P#AY<rW\n2@LrjF#3!4bFFY][[_lHWET_[cT>s0u-U1,G<JGFbq+eqJ3?QfL>!_!a7E^ELh+0pRl
%EZ4>47BGOm18elKA#mKX$sl4B)LHq[80iF6K'itCri2Ytjp&s=<*Ga'gaqr;,,c$<Ct.8M^XH;5j$4HeWkGY-eX[.dM#'9s)$]ar
%Bq><Qqpi:0&:M.ZE%0SA?4@dWOPT@$8O*0L5(kc+Ir@8-gSiQmWuo(Oc-tjZ^,`q,rib4lrY)=jrS<sp5CROADI;tHqsX!G^:jR?
%)nF)emdol0^Y&MFJ&e`3V4HI!$P,8`A2I4_$id'3NjKZ+@n2pST#%l!)kXN-5g&T0jGkr;.UJE<Q?.^'/VJnmRWcQ)fa@k=iEAgZ
%HCMES_2o<Cc&bQ^1nVTMSO&8_@P2>jN`sV>W2UjEG@N$m,"GYJ%'1fQq^4N5Bbg"LV_3#"O-)=.IlH3tNa";hM,1tA'Z^I&9`N^@
%5l.]e9F23ug(:k-ASm^qL)PfV=7&Pg`]U37h!R+r%LuG2osun0"R-Ckj7YSbC!;bFip3oo,S^c6/D"H-.:qh@VDa(kTt14lqLd'H
%bYd="\1*XH9JFBFREmdkR>n>-33=+K%A6EGcM0uU7.<u]4G\DoPm>ShngkUnLBMh"A72%8\ri+-['%fN5tRh3!L6nddD[hfM_HN)
%&nTp6Nc>3_L4j_>"=()"(P`DZ\b^?j2hVrmlWHRYPu,i%^+F&5h@TgC!+6YY6C;=X.e_9,5^e/gOj6ZhiVEU]!UN^>%#U"Z$jD^9
%80)4$f3ApuW5^)q6":S1c(J_]K!cGB8"GGB*Ji]@c@jJ(1=S+sCS:;E8/<eYE+8$_c8fq+)<[1!CQk=/l7L]KbmAR<9GoPo6D#H\
%QELgI!`h66.scc/+[U[^B1U@A\XtmK*+f1KZka3r5p%N:HA2e:6'Ag+IHc43+;_^J:6qu4dThmkKR3\D_aVc)aGnM,=PW,C?:t+C
%1TQ.'-pSY.m84NOFkYfdKKG,II86&D:&I6aj;j?eL?Kh3+d>*7VBn!5_Ik`'\NDE##"<&@(+l:2=un]&c^IMB5W=^`249WH(ErfT
%UV9BZ?AeAWnE"g;gfpRWG)"5RehXP<Lg:>AN"HDo=0f#G"cb]8O\.`Ge662PUr?n%Qr+//7^HlbW:2dKRX*>-D"LZr;V68nb=QS>
%h`_H86C,cP;ouR]JW$2s2Tu\!98$W4-)C2k!ql/XF3N33/G'N3C=M?0.O'WD9:Fsn6p15d:fg60@3Y*ZlJ4oa-kT0K1S@St.VV'p
%m_EqIOb!`ug6TX5qGX-8"SJYp:=5B'WS01Rd@pZraWaXM;D>\\I%<&P:[1J^ga7%HPVD9neHir$LlQcq6\3\(C1Q*k0T@EF`H,cV
%gIc*Q>!k)KNgAcD[CR52K[DQMcidO.=Qjc[(M?WX)Nh5KMI.DM!NoRV(fVT8j.K^c#+(<#!+iS9\2^d_GGsE%@C1*T1,pKK@DLYA
%@i!CK(0N*2hU/-Bi89j01UXeg@FDRQ6&d_PUVlLdN@_TldGW#9jU]m0]?k7!.D4EnG9_`n;91A)0d<a/5sTnM8ESSS(.WHZH/sOL
%g8GqjBlUZt]?2g0-;%TFL.'==8*2EBC'Y0H8dI4o[2!fi)4$=SC+-;;LZh.uc+^AeLKK!>$^_1Dfj](mpfG7h1Qs=Yc#l<cHCS_&
%`Meo3!)sQ]=Z\r2&K[P<';hBR*_nBKW.\k1L=P\VYQ6\UhMsdjCo,SLXA/h?&mL3<NEZ,cEB$n!N!5^ZA\Ku4=\j+;++WiiW%B7S
%TnR_7Uo%*a^`b3jlmNK4Q3`(qObo/KY\d?8o"tFS5SoiK.N&F3/bO'nG.B/@Lao3?`f)$%VDYthZNC5-1iA!i!JqH!LHuq\V*Im*
%H7iXdjC6PsOB;f1d&c45e_>mi`hZcI+['KM^f1;Klf/G,@KPICfViJV[S*,)f%4^A"d!A%>_T-"J5ABi_sf?.>D?$Y;paSpgT.DN
%"=W+VgT^dU#bq/9lZK-V0Vqr$Cgst9>dJBkTe[QmA8EBD6P1OWOW(ir=?Q..J0bDbZf#@=e9tj1cGe"_31<]K-ok"up+-_(9KN\e
%q%MaZjJsiggm==ZOYJTQJ@Vip$61,(%$?lbiZtIJRt,ORHl%A@'6%mN1ni'Ua<;=QKt)>Li>pb'44O7\1(@3Gpcd\k".tIu&d'\\
%EF:Pd?:\=LgjR:`h20%AQ(f9PNT@Y*GLT_mA_'FO'5,8<!L#g4%OjDRJL],I-A<:66>7V\B]6YKobuA-_dMiP./9O59GXK5O&)@t
%Kh=K6T`jjbQu89JP\OYWR3Q%VP#YnD`8fcH7Cp[`Gh4]sKXSeWb.>@74[p-)jn(Or!u#HH9ZRb7/65fYE>$k5+9W^Q#]E)6i/Nkj
%Gnq8_G]g1c+JK0q4%!_(>.29M?>rYZ6-TU(U;5F#jPip.q0#%+fRRlolka%^,.()EFrG+fN;957p3t`#Y2Z6",.C:P/:#_+#5-";
%8p1E;bRj-fGc54C.t:0H?*TVrUHtK1-&*8($,[1uq4rS9X=OD\(put/dJtsIU<-a;"KUcUVWK=-?<QFZ6:F't4-$HsW*Rd1YcV7J
%Xk3Yj:L7O6M3K6^V)GQ&XKRuD/hj#r(k<Nb#5A^A(aR2\k@GmEPuqfqY@I#eZRY3KdK)%gV6k37;d*I`<<6O[)k[5j'Qj]I#Q43m
%q6-5!p[OqNi.ckoOC?RHHWk6"YgR<kkp*THqRrQ'_AYpQLlhuW:30Q?A^]3VJm50K=ro*"g>o>cfgphLX*Vgjd';Z#HW9F&7nn@r
%F=piLd>GDA]6b4lnlZ&bBpI0U):ZQc7FVNP$^,k1e;=HFNXXbFd[m:9JV9bdFC]iYV,6(cU:\ZdB`U)_Ft;p80rX!%2UflH7dpSc
%5K<XX0![,r"$=gY?3`'b"'-MMWm,.A5uc-1-8q-X.qiP7&X-dam4-87'nq>tJrY+g'9AG!@@);O0j)2M1&!H5EJ3kB\K!pJ3d_ht
%"-?AKP"mHaf]Be$L_3)6)8&-ITFLD;*+6ER>/_<f%/S?o_dl@olu]+>JB<)7E"jN@/R4ka!73L0<#EeKbHk_8/-Ja%!R(mOJCXop
%C7pcc^dm=laPLqUYHI$taI#<;kQ^]MBF5^%[[4L76I13on<0XmC/bWUen0oe?tXc9Z=>G9<U\)iXNXgfA;`f(=:!-jQPkS9JX/o%
%)RN*!S$#H9Xb.D?%FX6m^.N]ii)$Y*:-_^N<2UbV&q%KfYJeqcJpAKfgBYFA'4sad0IfUJ)6&oS6o3:5=NCR6H3f2Qil@FEO>U:)
%^]X^9IB?%rAgW<9IMcK?0s35-Z<\?Y(KD<X(2'Y7a(Y:7N#_T)1o^3f.8Qm,-S8JR>gPfFd.@uN8FkIcL>,*R.4!)O-[ohET<XW<
%X10j!V&krQ,1;W$CLK[I4=%JIdQuTU%h:7fKBF]mR\YI\-q]?G7$bVV9A@<0N/]]ROmWSF)!=5\lXt'CB`SA!kO-FnS[Zg&LgCfX
%(8qC90bXg%6`J@n]D@_)AuH<1e!tN$;V5`1!0Ka8d@@T#LEB+u'q8@EJ<fWf=bRH&"mJ"MBOPGK.g<Y'Q3PT.!joi8F4`W49UR#T
%W;`Cr@)tseBP'F\6X#lq#I"]@F+T:nMp/oe,%/q)_De7810RfZ!=1&oit*t)HLUQcEi'R-6(B8[5ClV97,SbVX7"?GTj)Nd.Qk-.
%.-'?p!"Q&D.N`-:6(SI:5n+R14i,TH'bHV`b'F0MV1V7P?qjK3rXVGm,3FF;d`i)jUXo.^8eFHG9DRT.X+503+'A&/;*(mW)NeIH
%8tj4t(9HZ(ba!ZFC,sOWb1UKG-m=D'M,4[np5FQ,bcbVP0k,+OqU8-HMX$'2WN$]742H]ppEN?9C)LQR1Z9<!E\Zna\i"aoY,"5Z
%XJkF&8T4oHc;I`ifKOp"-sH,C9=CKqVd8OEZWi@I6;#$V_rOCT:+d:[=UtuQJ`_JD;&%p3O27nqMh%ROi6j[rfeTokC(45[MUl/I
%0N0=hA^+$GWLTmfZ,:DQ4p"l=(%l0i4/rmh`,MY88[pWp4_.cV'*[u4W_&li^ne4`FLlbB,VVC9CEbg/@HkW=BB=0@&E36brk^g&
%WAZ0_X=9igG):B*+^6;[E=d(=EBT&Xfjj\I,$pq)0]QJ9UZ/(Ja3;.['QADfS8n`e^$Ho0XpfB<&b"*&;!EPt!D;.P^nh(tli;)?
%$Y6XbY9jif7`^l5BgQJ>WAp@J6*VE*B/Vd8//AX5jqXp46KMcXBg'MpJjKE'Fr]`V.^R88B0#^4%]$2$+0/\h5\j%KX'62i5dhl:
%J'H?6YulB4#$L(nl:ZE^ImIL^O8#_`K"324M=IH:[P4GE*+:H\!n;-gR:iR:3CL!2l+#sM2(D_CUnu`k79KgpZeTBV(&/(C[lD+g
%-.Ws%Zt(e\,(h9DfJ'7[[DX2eE%1H[ee4J<.h*J*m%^(26<Ee1!WaSrTc?aK:9l?/\QI?\,(M(jG*^CmOA8hC8h.X1jodY$;E-t)
%j]XHZQ;4;KVmX31_F(NK=ud(3rlgg"KJ#cC0*-VVa&(8dGnm%nPR)+GRt*.G(tJARYK1+?c_+63Mo;b4)P:lolA5Tn[kR5g;@eI^
%77H]WX7sgX8gp(B1Z94i";!2?+u.DRFXq"Ir2!F]+DEHk0+F@#XKrck/#HTZ_bou>RA:[MMR%njdhF$-9"2>MX?IR;9U7:(V%>j8
%fE5>[db7hEjq=5E(Lg'["!bjL)[b9'@BeP%^c-MRAXBd^EG0:LJ.r$<18G%\VB7Ad'(;GY8G),E).fpp?0WDhI$k!C1aCHh-o#m$
%9>,&M\/jKqopng`%]^4h!^q]g'$_h"A-lr%0qmYSO>0KV7=QS2:<MOp_0Y46A.u,%hT@nlFNa7QT$'!jN*mrQ7SJ?m3GR.;QSqC&
%#WLltU#68@DtIn!hZ\qq$sJU:C9RTOIRQ$))_JIg^,`E7ph/*cFTi3OX$njr$*%2I/mYR<bJN]cUs&65"drLpe+$ur:8^N2>pLqP
%>90[==r/SLctmFnl;!`^EJ77_Ya:U\6P[1b7W;81NBrO`0"^EE?Ic#8B+<nZMlNe>YAR1LG9Ij69gb#c3:R=+&,J;Zl/+%b$1:JB
%R71-G.GB]C8l9Sq=N\"PW&T5]rOT0]c6Qs$<McL9ZJ*=+U,]ih.BEl6"7ftWN`&[nQ(%L5]2DFPc;ks!;,/+:3=hf`#tG2-B%hN;
%9cP#Q)ED3-/6!0ZX!Nea4l%i@.<3$"+Ri)1V3Lc%C5<D$io(5+NidIaXql_)DRIAFFZd,_*F8tL.YhNDaeD1*3#j(HW91]C*0,e%
%>#spCUBUr#Qcl\n1Q9a=f;de+[\h`eU>]>iQ:>$l%>U'(_O`/5_gtfA'l?f'4BhMLW>H[g$Tp$F_eD3,2!q#D32.>sM`[YWO--Yg
%J693u^(r0m<O$LP?-N5Q>2bF.76l2K(!bIcafS0h'3o$u>cSR!R\o[5[mK&t8=rpo_@p;;j]\?s`#l5qag+aQj/[0m30Zbg-s=Wa
%dTS%="f:E7?PWu=r<ChO.<WMD8/X\+-kd)+2-=r[`?F,VLZKpQ_XW@E1A/@L322*<E_n9>$PhT"ZE6AOIHdt%(\PUQIBYDL.1\V'
%(+*nK_-)XUKN3$]3N4[E('d?d8YF)22E9iS"kjch_(eFn;?TU'E7EUIJhLD@E0T&`5j<&qE5!79kH6X$8mjZleRDZ"SF;2bK=[?Q
%kB])lTNc."Y,*c\Y0F\FoM/Qr9_7/CkVlisa'>g^2E6:@=T5\!`Y*<UCW4+obG%&-2D_D]b(I#R7*jBRi%34Y.stJ@*6ikH9<A`M
%64&HPW:du0aU@Q[=Om^)((I(Med#hbXasKdqtf7IQ9*22@sr;'$5C1U"i=DAbHY/n=!4#JjPYD9&C,L$1&nTp#_um5+MC3lE7PD/
%l0D4hS;![35(QTS*%h$PT1+<M!3]S=h!0NuJ]h]f_>.t,Ah>[YK*0i0dGskH6LF@hX*OI4_&5e@7_$tRB/JcO7(:YNLZ=0^\?$5/
%Qmh,aWt14+ei'T%_--3X$AQ%\i"/p?buMr>6V_>UpI0@H693+BX6%/(!A_gTb(CA699uI3b(E&,TKleb%ds+$(3%2i*ulCE985%a
%K1"GX;O%%9Ng8ORR[![,B[PW17=B-qGBH@3l@Zuo`*AI:I;nt<#a^hQi%-$3do=loi#3Lq9WS$JSu$LLW:dti9.Nc<o&)&C`0[6a
%Ak4rY:2>,oaLQjjNu-oo;6V1IFC-I-DJ9_hH#RWjDH.c`RgHi6IIPfjW=Q.U-2?9I#M7q^`jP[$m1DrJE.-6=iE;Y4g,teHD&UGp
%H#QM5`(_fo:5>KP-!Vr2cFTPlks]l:(JCU';BFV/;+T<]K*,UpcI9']3++TI_Fo/n?ubI_.cnKd:?DpQ(ZiIrPNfAkjhZN7Z>;l[
%&'d5A=tmTB&!!c-"im`-3!"QG4?$5Xgo,cKX8:bY/;a;TqVZ%\H<9Eb,7JNBpd;(mc3eUFMF"O33/\9Qk/j>]3"8(&:+GqQ[3__O
%+1tmjW"2WJNNp3o4u`pFl'kMO4uga3%;,OHqVYHV/RW8b_&9jEc=p9#S8T:AX1?^bGC6_^RTk2Z'Xk8]l[=2##SUf:fD=G*5C;kQ
%*63&1Mgfl'rWBko@ci>8=2$I\T1mE$SU5'T@<p/'il2E2"G.8H5_'(B-#7u.c*d8jXK([m;34=k2cS`RM;#&67m;+ak?=6Negeo6
%_''RddfpB/$PA)/!9#o;(b;!UK]A^E:o<"J_?G/4Q4=IdV;Zrl42Y_HjBCe!?kXNX&?5%$&8m<p0piE#E'b^ZT14?M*7M4?B)pn@
%lP(?&"qXOSd?Mf[&8i%=Fo'Ps&>%!X3l6O45n2?^3]R%\e7^^YE.gr,9H>(B`H_I#SH<],.&kmS%%aPn4>^I8=9M]PM@7]5k$j)L
%#K)6S*>CWE)XeOjGXTI_rhDf31M1/93\(>1l:^;ji5hh#gpZ0m)^84rd$`gCF6JImYB\tV4!l+L_ZONVK&G0Tn\?;koV!0E3'.t1
%T1\Xh+VD;`)'4#L2kB8Ri35".SC#WuBu;@+kQhD7=CVq52"8j)o*l.VbA[Doj\CQtho9PaJJ/KZq!AOeRh/lt;b'Clk?s=PNEm2;
%CZ?._>9l+d5i)!0bgm3M)p](Ii<K64msuT^QOqXX)Lq`b[dj7:,:IMp\(LQ*,:e0<),T7i_NQ=K.24`m%l0k.'K@6LiV55\E*.![
%T2R.WG.W`!i1rDF(J-sq2sdDbAHN7/koX?`<[;X;2O"8HOhfXlj&i9;709AY*V'I=%Y6N[9S("$SI/?="pGKf2&utX1kq\A&3/O5
%*L@3BS?St@(2Zn+Hr7i"B2IN&l9SCB6%RJf2?G$s-uaA$<3'e`arp3UB<i\3Zbm"r!t>R,0d`+H5i>%^,`$OE!iI3d15I@j3)MQd
%9%8C,R:;smC-^\c#U_NK9nC)OC/*?e"p@]b=W.T&+E/+Bi.DsY33<B'E"*$lE/s;bTAtHc@%5Cc%0rDBD:H9/#Fq`JltMmHJ28"(
%):?m""?A`pU>9h)+^t'?*!]_B`hA>Ni/gnggPe,ML0\=DBP'6^Hn(0Y`;sV5>_(D'38eV6O^sC0J5aVsk-O&t__`),bo%!N2@b#U
%)[s5"<%T;_1Dk'66WbYa@DM]=(8Iuci345XCGX!3kK/QK8B1`iW;i`7g2OhN+kG``#2BcUQjUG?jUFfigL7nfbD>)m$jN6J,_Tla
%!N0AD*kV[ZDMYZ72Gh3ZSPn4j:r%q&a[WBM$97@7aMQA%^ffa:<S('_.2gWP(fA(C-WXt1i-Yco>'(HtHMpS>+%I#aG3L[pX=3!D
%0nO7a'Q?FBXL&!0:1Qs\;DGsAJcf^e'`o@B`R=$3"?7@j9(X>23*tJRZG/\U)hEBmEsQ_WWJVVt3$kASC(T<fTN-CM!D["D.V09G
%88O,L7V<23:0Yafi\rU-3F7>E8.9Is?F&d.M?/`iJ.\H7!A=5iU_*a"f7;t.%K]DK.5`/Wj/)Y'.7,sJ^^8K3\q:k)33aR-RYAZ[
%L\jU*^5`5S7A3.o;[dUt.Ot:L!mY75@EP.8J4jW<9lRmB"'FeIhu[_q6SdYO6``:[`;sVGT,^Z:#96SA5rYD:J`El#XR8@3pbLOX
%1E^X_5@2MU`!Z**eNj9=a3E6i0uF%4#SbUB+2n8YIUlMu_Z?*Op>@lK^`aIMY(d$2Ttq<ES7_r0PB.FWXEA\#F;/[0N3Ta7L'#XE
%&R-S1i/EVWS=uX,Z[aZC-0C!bN`<"YU,3R'k,O(tI#8!NJ5#+8KP(*NWOqIMi(PLQ/j+aeV]@73iIV0Wr_EaQ)A9Q%CXVX>,(Z5b
%ciFR^S4.o1ibM*CYVZKLEJ=VAX:S6R)A5#=Bu9VrOME"O<50:`35hm+CImB.K[Rn:Oh_jr,B.Th!b\>Qc+8W4cA0j)Qm%#j<=1rp
%6NY:B'4\KrJMZ=Q0UN^j30oANk;4H'bS-uS3YFF<e65JF6X=_G;]LA(;8-R,]$ZYUV*5<-\/>o=lhMBZDG]8G%B6JX1I\P_Ks"tk
%"]!h(HT+9B)eR&p*21/Ni'fQX)&0R`\?tFcVZ\OMW3Bo2i2j%R)R@n.40Kg!"pJn(Ju$\c^c<0*Z^ZUudV*P_ktp<hBHVO0"cbml
%*.e@u%\#QCPW#2M&T(1\Pn=@nUW4/d-u_pFrIPn$3)XuIQ?:QK^es;IlXg2%%TLi%Co<I,"jS0l0Z[Q9gs2SFj"i*&G(?jr\j:nB
%jB0JU)AG1.aQ2bf-ua:%$'^!MJ[<%K9N;N1*,cDmo6grMNn:*Zf<E&qd&":$L'<Tk/lU6'^dWiW:r<@t:IR%X!_;`eOW+uB*(-\r
%a!2A0Ue';I"cadK;Bg32E(JJURmM[9*e_G+6%Q?t?gt]C$67[E<L=q\UT-Hi)S[GHo:[Un5i>1FaEEpOJ`ENDnnCAI8DZt/?'2pR
%P:L].K*!D)#2pF<'K?31S\(deJR\^RR&E<%e$!STiJ&t&<'HWd(:^lDVMnX8bjhp9X'pQH_N)Jn(-'Wt`j[10H,T'J%r5k:&?rof
%L'Gri&.ZU4#0tPMn^6jA[s\5Q_B(oZ&"Fr0oK?i3i.cAulqL>>E#DLCkU@Q4oV"q&Lhur]!&?C-7lYHg((0Z-_L]%lS3S&M4E,-!
%eB7$3#L7@OX:6nC%Y-7$)e=[.cI8_*GYSoKV6,6d"5j++%mQutNX*i>,m<o(Gi1D)iH]W0E%HD]RW^f4!na_9EJ=^YnYU*Tn\CQ)
%AIDb\"#m@OA<$m)0qnsp%NO5ZU&,<)NbqQ7q)KESIOQT:%1\m@(-g.'_"e8E(,S!i4G/r8LBA>4#/DJ/i5"S#U<C9gJMW:XUE/=/
%iL8@Uk3$^AnDahZgX*_R)dkC96N]h8+O^=]Tn,R)"HSQI%_l2_`u5l++gElQ_G`:1LpJ6Z[A&4.[V&a`0LZ)agDT#82DfA?EdL.%
%.2k2&6]bbiB]'0OA^:i170A<uTH5mCE9,u/LXiZFO`?1pJd'GoPTas1JKpR[@Mk6C;4#EhJqaD7PR21:"HHSlFFM./LL>(HKE4RO
%ckB8qM?4:\Kg]_^!GC#6[Nc!$;6Gs?"F*f3N/dmuR#'Dg1B_[7^4p;k"E6nB:)!`aO?K+1d8L0eJD%1[W<%Oeb!EYs)ur*@M:rRA
%)kC2TJ/\>EP:!L<B'A,kY).k5khkUa-WFd^rs%<ti*#6qhlrF[D^NigOV,R@3?@S+<jXmV2gk=-K`*7<2+r--oc$n3CiZ"rIO?LN
%`#\Ih6ff7ZfEh=J0d16LkVjag;;ORQ.7(gg%f218bPpu@q@-6,9H_*$qZ31,NqhGa,s1$DHLVD?-6(f#gd]$Zp5O]_Sk9+^c:U.S
%_7ic2<q6IE2\@W/)3MZ'ekF;0Ui-J%"<)B>oM%&5725!U!lTUMdPiF.7-7%tKqO<7"T!l%k=jREq(>.rFWKT`4j1tC&`ju)c%>@E
%"o60[m.1MQND'L*4rV3qLj'<Pn/8ra;;7f)HP6YigUG"G,I_2hR%\kZ'b`P_*S_U'Qa)U+m1$02=[k?(p."&+kk>P?>N3(Zm[Z[k
%6d1VTd,'iqIBQ"bZUTra4#:\kLm\t@i80P0X6om!8jg?)]9HpchIr)iJfV,0Tho0IcB,a0AWF:N$LH%("WAF#Y'3`HN>\rZe'h&r
%O-icE`Y1\L*S;<NIqn++Z8[F9W4_B9hMh?0A4L0K7etH!3_/m5Z=3ftFbf[&HlTXsF(fK^?i5]im>Zb$qO2;Tp;TZu-[H9iN=/TA
%gQB/u."prY,'u[ND;1bt+^rfp@sc[E.7@a8@XBngN'`&Lm1&B5RJMs2%1@h<of9H>NMIQMM!^2Kr.%=Ga7b6U3cAW_h@bFK@DqkO
%r8&4DZ+Z!2(_pJ-&uB%L)/!!t]kIoZ"]QSk]kNqG0S4ZC.gDJ4E,V1QlpR4lHQs(SrG)ktRl+Y-g(E,pct5QOfF6Q)8-d_D&\)&>
%qH2/Tgm`0].PBlAhF9X&14jjGE7Bm"hJu3?JG*SH'%2ISg7&6lJmY1thT.%*qeqAYbsVo.ru87&#+(U]*SHnqQ'C07`:dd[S9Ahg
%p80Jm#U32`DgX)<QlXr90OEa.BQ*Z;N#L$9]bpsM8lo\E#hXmfTtQlh(r?K_2sYL/g,*>Yf_;JbR3?q+l6jZM,'tQK5a9*>lto;)
%Ac)b<2r"7U">s_.<h@_*RmDD=GnfK4#42j)PL6]Hm4E8sg0$X,HR"IollHVi>D&AQK_B$9P?,R0g7'ZKLl?IiDak$:'jRHGnRda[
%c_8#al"?$d6[N;KkQf@o]ce]K:]pFRAV2aqBMm5DfSDPl2kj&VLbrLXL?GZo_Ml:eN7,$X^B&[K,0+'np.!,0aGslJhMgd*H_:Cd
%6P?%j3j:OVF-aYR.Bkc.:lI1TZFAm.HleE`l0&@=m7reWM8'\u$q9kZW](!VZ9rsp--(W()7DKq`[E"qf\TS^Y^bffhGf?ml;2;8
%.RP0"M!YWXK9.m&D\a=VV57UIA+0#6kht=!(,s6MJ9s)P-S\*ppZ?qD7!3He8-HeN#4B_FCO4C.r3A"[fs&0!^&.[.*'^tI%Ot;$
%'P?"SX@isY`YI6tD0c=tB\;/Eh]:3q*O3;SnBdF4gRA[h1*a.bgesiJRR);<i$)W$KD(TF[1+@f2ne6Fd[M\m2f/k%f/IA]f(?:j
%[:+E#J*D_1e6c''>cImA&jo\':d(b17(e"W5u_UX/'r7bWRlka+p\4j$#9[#Aa,"<4rNc/RVR27JWba^C=4.3bXBK8m\hh@]tk(h
%&Rpu@%u(Z'js:(3!a1Tgh%$DWADJ8h)82s^@b)b)n;uJN%X"koV?*KS7Dl8VcO_?hCc1Y=?5KUP1^48K]9g6.qCp;R@P;3hd/1%6
%Q%`$QYmQ!uPXLUte:JIT=o4bo0G)PGF:HTV=ke1'R"Uf67,"qA]uB1uMAD-@$>#nZ14o<+M6\8_4BD30H)%](4i3`ifG-@r?inK'
%[[o/h%jF#*'%0kJ]HKsmY\U*#?<g$s;"gk-BuLjdcCu"rChQ>4#Ot.>o4#EhE01,98m`?si&`P;Hr-7@!1pU:*ZZM!@>dSW^2Fh1
%^_CqW+VCj['GhPc255KBZ,n*?G9)8O+`HuXTPrC@,*elq'0\uB&jHP!l%$'=8>>L-Wp'!4d13GZ'GCInJ<ILF+\?3aJAaB*g;,!)
%$:Bpf)g&<:MW3@;"F")m:-:t>U<-2>=YX;aZ@pBi$sD.^D(-?Ip9a(W-::%$'_cs.)ur6e"0=B4<$?fQ0B4)bVt:$k@WAI^+kJ-E
%Q:D!G`]_,s<o,I9k5ZZ,W#`3V!Ltf;@OL\4!<7?O#ghjUTQFR?%</XN^>rBoAAl#k`)2"$"GW%&5L'Et$V.@.V!/JNEeNlOdZVjh
%d%>XCIK33i+IL)igBifE(I)di4P9#gDLdjo'ku5M)Gt\]ab5h]TS[E^['3de[>>V3(-&R8.Y%ZY2ZuP-GA(CJkpV=]CNNb\V>u@1
%6U_X`\.BO!M'K';;*g@XI2m;@hiNU<5(UCgo\+R@mfZ=V0nJ1;$M7AB,nlIfE2nl\#l%m3E'c6FCuO]!*.8r4Hj?o5ncNRK;4jVY
%M]W9@"a".M=<[7/A<8\nVN9b.e'&sBK(fb3/%d29TTf<'CAO,Z$`M9lA<A.a!k[KiQlA.29Tnfo^fo5d^l&>l"GH(h`,\+E8dG43
%.Fg$r-495bf]NdlLQi(l%6un,#A4$=Il[je)5iQ;1#i[F:rDD<Qm"?Xpp$S(^Hd)bY?B--^`V&HBfMW9*s(;UE.GbKc5iFCjR.g*
%_;OBM#r;nsE[T+6\h]g5,WW%6_2rU^qZ\B6^]Qtn:nM<'XTHHAk_Ie8I)78(a;tt[&Q1qXCfms=<?PfJ6KDSsUi[8_.f8#+RS@V#
%2i\o&GViGaH-C)eke/4iRh5gh@8[0gRo!s7mAGmg3]_<ZDF>&@]b.e&mKCZ!n5Rndo[XtS'k7]Z+9]jp.<1`RNa:!@cPTj>Ti&C6
%8Y&hT(5gdCKG?SA][<uYZ`A_OMi%@^S/ar)nZ8DZ,tF7V@Z[&c8>UC]YY,'%h<n5k4P7#MXH/l=H`A0p/r,fJ8;)6;/YhMEf<A_?
%jISNm-`==+b2nK4RT#!%jJ3&ri\_"&#TD$_gF='"]%_14(7[>M>nV*B&tfdr\gU:'`9!\&e$.lL:i'!8_f^jn(-I4TT3.is4l\]F
%^(IGG92oZ?E0`;DQ3l,:7]!L6I"Sf8iHR+k:ZjHf6f*rH#ihA=IiX]*(lG=@06niFFYhkmXV(Z/]*TW(bW5dq0K6GS[D!]F*Mb,Q
%C'#h?/jL@di#Q:85l5005<be?F^%\`cIBB,LFPZDNkl"j1.$g"0[h1Q'6u6A17RG1E?&eVLDD(t"7S4i4d]&b-tL1\lH$B\/6^*.
%:i$+sjDZ&NL*/q%\2m;,T*G+*mJmp1OKXF(0T.5A`MQ#M6Yr]=&<iOujqq$-%]*kCa#hAk#k/<SMsPu0P3OXj%`hSI07u7CfQMp`
%_U:dN-lS9lM=;GRT#EN?C!IE,+CV_shAY(ATu[etIU48`OgCE67$#C+\B@DSBa#0B<HsVTp"UBF&[tM?("u[Q)7Sam)+eHkT;iXo
%BQ3>GR2fm<JVYn!$`%CoT,ZbdFe,"fJVc^-&8pSTKjNQT-rUAqEQm2d<m\_51,m'\MFA\)QIskQ;+o?h79%G$"#W*4&']F?U8\9G
%#*(rS?;.u`Wlm*7,fPH]UUPt>'6],Qc;A^q?&8hpU<9um;XDed+t%X;>T]:%3(2S!qV465eAML5#NrB]6T-6APcD!jm33k@l4Fbf
%Y2L7h2Ogn>)V#[>^r<Hnpn43Yi8>*\>f5:S<JJ7E;BuI@1#`6'_db&QD1pb"GD1;V_gq]AWj0F-:K$9[aj?+Pq2lq%777V]68)bE
%FF?I\l@9\IX^iq.gaPjs8=5@4":bMEq2t(H@W#tb0LN-ZeOCZQ![OjHK7k3E]$-opV4mF)JrrD?)GH/%[*HL/DCu(&5gGgR:Ig?i
%-/_Y?SHI.E`7MdqZ5jmo00D&[j>RV<\oWOIU<R-m-ht8)@i5RGaC\:9d?.**i'(;".tj-$9;j:dGUZK+L-UqK-18W<(,6/`g7a5>
%</>;U,im'(/uScd6:8?efIZ7+VHV7:Ub)\(B2)TmEf6dp`:tf:Y[Ajm?Z><m5Q$VW0B2X<me1_[Q5oM<:'QTKhliLM&0g-s;8B!H
%o9I!5k:'U(MA"CfL#;&N8gc*Z8i/VUFN15WL;FL4_%Z5=/0.EVa^.8o3aN!'\W#ER3l-pgkDiPDTOKOhCP$]FNfE5HV):ec_i%tc
%.[CJl1R^Q834(VZ]T.*XE3`=>l=oTR4Z;gKh9l`6oSPS9/MQn)V.*q9#"&GdK$\CRh[hMi.HF;FLH7tM5E&_\`5ja.J/AUX<#5Go
%LaG3>o>.S99G!1hq9UHZ'-H+B**3h9-*`KcAjL0I^MICDKL,B8KRMK5aXkds6k^0m<!_YCk(85r`r_+QKF)81J7fek9&=6[k52#:
%"tV+I8g,U@U@+$H3sZ2AE*C]("R!D_I:*V-20nnH@1eXq%W@&94Y_G\<4Tn!E#h%OkTp7<;<nKL$\?7sOAd11/4^>!JUg0I?.fm.
%RXF@=P$r)<JfFCcnSquNVh,JWSU0sXW%WDtK-_d2<G@e@'!gG4.Nc56BG4KVZuZe-9E62iQ%^=l!gc7CK#X1@qI'HO<U!K9V?D_V
%,W4h*?)s(,WC*13n>U"6VXm+m3l#o(':`_0/#'#b;/%la"^<7)lr[uW0[Osa-V@4[J.JH5"PY\k#lS<Gat?Jn/]`1I6N1^"/.@Br
%o)7tZgDfO^+S=4NKYV>^TTAZF?H:\c(Vh0`h"dN8Sj@;5\t]J`?mWmm,;=pP6Ur.d($o^X2INom.Gi6n,uJ7+,7N`XNbM]Gc]]FR
%LFj]07`*_M1O?8'1D@kE#!g,RGHch7=tiLUKCbVp"[4?J8scJ2P_>TT]J-Wm6>olZ.,Z>>i@`QOY9nAQebYB07tbmOZqEspj/22g
%6.VVRYac=*LObLM8D%EGiq@r8>g[u\Q`08nS<oOs+Cf=]A@<ejP4C+6qFsX5,GGZ%!YG4JTEZHWJ[iFZ%88sCh8LGrcrm@W8E$(\
%1!jt47I0`ZicF9DB#d'UTqXk=K8CKUigtr:,fJ7LCVF\#ID6>WAJfd=d2/I/N:h_gL[C%m,",1,Ggk^Le8C:6c0QcpiLA`DP[!<P
%VSDG!Xe;K@m"pD;,[1OGE1TN)`")b5=H\Ga&)tbXX,]KWHtiFF&n9o!;C??M]a7M5E&=i'YquN_0L5^J:"cb*!\8,OqGrCf"fmc'
%Cimrt!1+cOadsL`bmOeXh%&^#Hu:(T$5XlM/q^PE`P^)c=qr]d1)&kr$MYM(Ej>t*]$2\/pe%L=eDX)Qd@pr%;[>l:N!t8Mf#W/l
%occj5i8/-pUEYoLM%lcpga?[4a+<VFCK:l59,QF&6AG.R:hRp90dJo3'j@MQ(Pg@2$<$%fRm*LtQqe#!I+sm(5Y`>"OE_XNJd96T
%OJZK;&@$_I"<&.&QE!JqVQo!bC:!G2YZT8V,0rZA67?Canf_?M4.S(6I(AqOY`aOF-==pbMb;:kOC39h(n!#-[k`+^86)8j4%aQ3
%glC+g#mk`!+ucTHa4*ZP[%VV)Djs<bJAb?dDhl7YCX9Z/V?AqG7Ju9[s#Mj38+/'&VELSD(?PoJ[Q([qi?WqGE$]PZ>QIi)BZGZc
%6)*7e3%QX>6jp&1$XgUkFWg(LQ:D?Ca3Z-lS8tBM;3k?/Bs;]`15UQW*9"p($)qI.O9\#g"#LdU$lh91UM**i"#ppn\@+*5?Am,2
%BF-n=cj!`7PUp7.KfS4[%Sl#a;8QQ>Jh3ip++K/"e`lr4;%JlK09]YX_fu6hVb!`q@GS2o%6n_&l(2.;<\UP!*rDo7:P^;N!hanh
%8:".s.\R>T1sI.2&DBh:5gLXJ<dNWJQF_a5Z=tKsRZ0/qgEK03H3W'#//^dI$l+B(bV;Hne:(d3iUjF<-"!T=Cp?POF#I,L+_,)R
%7s-*ciNdW)HPR#[_5&%_$"1UeKWJ<u$Xa99,kI1%nOB1bl.QeM^BZ-+*fMOBcm.LCOi8AlFBC@gN%g.p-G#:g1:`F:9-[-#"7d@(
%UO2qgrTbMu(ig1r-`T7(lnp#h9.X7FUXHW7j!#=Y["q<d#m7Wcn;67Y#[R,l0TA6t@o\BhVR*Li"kI?B8;FFXD/_IL;B+S"+jhl6
%'+pD65r4J$#DC&;8Mu(O@k[;(R".FA4BS57d<I;IXq>qAgl/a=6Hn0@(GM(I!=dbMN^sQ""C4h\$$Dk\$N[a.K]S06r..fN8M!mJ
%E0F]jkM0R+`,<n#C]l,9KK'E?F]^#OS,cU<,TZQ2o2?LgO$_2!&'HYoMS;Oa5\T:Nid0gI\#:k`Ql#@@AE1p#o4D,T9"3g]pOth\
%16*%G+N^HM-YhR^ZaWNc"78@Z=r>*+i(k!mCpK;Jpf$!$Z"9C[J]L4j,`Bn?$2Gl&)u*7!]>5LF9ab$^.g)uk_##N7d\XME;\t-M
%G'jK?aE+fAf_X#,5H'?pitRTl0s%m9o."eij$WkP!*Xmu;1QCnZr./&:^BfI>h6aben9f,:Qp6a\eY?%RkdX+4ii$Q''LHE,_n5M
%ZlG8f$F(m5^*lng-p!D_%0t"W"GTcFW#?r*,<nV2#Eg/k2c*j$QqJaQ$8ZPDBQh8b!loboOdC?eqanZH($GWF/I^kI8-,*37PTto
%oiBP3KJUnBhNclefh[JjnA56j8nPYF`Fa9?/"_jp[+f<-c&\]9l,/_/EhWRG26^M\2'kj5'8Xn9P\n`g=EW9h^^S"m<II6FOEF$Q
%^-O"4_1a_t+XV%;g^6XM=JaWL-FG\gOZB2K.A"1$KBR($pV=M)L,,FIG-4*VMNTO_h<YE!`?E_laH.Pulf!&md]?+m@GjTf`?"Qm
%W_3ke!@VOY'UG=\P-5"^Fr;[O'<XAA,n3B2!omR\T%,eX]hg6&!>L:>Gj!c4K4;189F2OdNh%#>R+H;&a`:'Uk(X_nL[os4Pe6u#
%*-(b@,X>K*b@^"D:Y`5;)P]F1j;TA2S^C"J!1?:E'/A&-E.PQ]UX8>4jII_>k4m<A;0m,ZBGnscI"Kk8W-Nt?^cu?u*kPU5&E`Yi
%M"iIhi>;Rag=]#O*]1J_`T>e<@&+iGJ*Nim*$#T$PCpgCB'9tmU-C#u%,_VP4YG!W!eLX-.7'<jG%I<M>GUrr?U3aV84Xl[F(#B%
%SE2/t.1/?=KO`.CSD:&o"$9>\7*Q#T#721fb:!rcJqWt30#rdZmK%[+]G,V;?UZq@&eVQC26dsR+Y,F!A&L"(m7G7?VW0LsA1]-t
%2@+mnOs(-@Q(57d%oE?=BkCS;LQfe/)4XiiB;j4h),q,gQeN1Z-;+?-nMkoJ.o,YQ*r[J"eOoWAW=)UF=Fr#9(0Q4k*0R6L4&U6A
%R$cRtb"JSYVBj8kf!Z_-"f%R.(G$O4XZI'`7>,q/A\B6RMZipBj<6+'.hH[l)cL)lC!Zu8^tM*dV\\)7W0&JD;j.EB%D`El*M/V&
%b04Uk-q-7i`<Ae`U%d;4fTSQk9[n5m'd"#"MKYdG5jT?/b#&U@Z$DN'7mk.Gm]<r_[-9lW!9YAn4$`,N#k@Q9V26fS%L;O;nD=j#
%!C8cd(HOplSC_<A=]6Ul:k71A4bE`t\>nmfYaH+N2V9>'QS]<InPH%E8C3s(`Y8VV!6igamGk65+A"Yh4MeE<I/k`])32-g;!['<
%7$S\10$psS%NV((W+?3iApCVp3f.D@oDhiTaba.mMin+\'Ub'$Oj4dlNX%!V)MF8OIp/XL`,X,S"&)"`Ys*Efkh/J-1aASVlAZWY
%b>BNQ0+UI[.8i>qc4&AKK_R@oaqf,tO:Z[QT>`/=moq=R*Sr>%^`eBs#hd-o&%#(8VICCmcBGDN]JReb-0(P@%'rWAO?so!/DXOA
%83,f%k[u1Y`.UJdNJn2W0'U0WE^l8'A=KQ-KKtQ?%OhNM!PqG^M&7qI#&2mIFC48$G:SI4ieYelhB.f?h&Nd]q9/I?9*ZSa_.2D%
%C#a2dBj.4J.nYL&draD.XQPON'q]:JL3@Np%>m7X#t%M0s-R,M*1Zldb]KS$$SeXicn:Be6%+K`:J6\,'j1f68_=q[Nj/qiP[u;%
%[\s@QnfZp&>d)X/7UaQ,_A04+a0_%od\dWoF>[WkQiN'<7QWTV6+'V""bW4^.pTlsWDOjr^b2ZGi0uq!JM@:-U_pBY%LBA&R@?(4
%8:#^A?>a/Q"i;TWkV,uWi"3_A4Uc_5])c']*b[maS?X5<:"G/RKWlkb!Q(j)&WN"n:f?mCQp]Yj/7XKS_QZ<_c4!lQ_`FJE>EDT0
%MS0X]"ppekW0#j1Qt\?Q4U+2@Oo[fr8*V5)BfQ0_JBN]CK\!1@=JX+I[O<EE!DNmJ8bA9bX9&,si0E85,7I6g\J6q7F4:JAK<$83
%4XU%O+OSr=SA)8!"B)?)3Gf>M`cWj1!ji!&`du*l71+-a0,4kr+SJ\sb#ABG5fuTRr7U#DZ.*?2r#kD",!fY1b6"ubT8Ec^M$=>'
%U;FC7<eY(A!Pr4l-ihe#`j#UK,g1kC7)pF4;FBeV)@WT^CHs,(DA6%97LFp-`Z()X<ChZs2Ah9n=9S"=BXNEB^`]MNm!h,t0!s'2
%'!MGJ/W:9XrNl3/@e^M]%!mlb$Y%GffeXb1A,SqjWBYK.HOMc_k%k>H8*MZLTP\&A&jdeX./cd'IA!ocU>_/jH&mTPRG-YM,0j]O
%]MdsC(3[%%=@E$m&7\UI5fD&phSSG8%+.d=#6O@OgbW5=JE]?t!km/5XnMTg5tI""P(I$D&h=En,lQL,$/?=*q8qhq:h,Y%6SJlu
%nT>dFq-rh-+M08d)5R2!>7Pf:S9rtNI=i\1Q*U#p&6f=YUmV(YG+s7mKZaP1A7Wu?]d;^!g]P=m?s*4k+"bQjJ2:>OLbk6&ADkV\
%W#[BU"*Y;X^K(PWJ*D_1e.7K*o]Z/DaF$Z.+gusQq%Ubf3"Kg4791,C/NTG*KaTF\(@\&*F?l@_nE(rm47hWG]AXqI9YWhF1"6b(
%@G9\>"&L0o5Ajdn<6G=X`#:a29ooM7N`ca!Z]V@1Ar$9m=iWc7AlPp(a1/p2J9ngLn)R)u61MjHG:<nn-L#*+4Gi<;@"+1!,>h7X
%.S@2e,EH52#YA[A5VGO'4>4p9lS!nS+6#Af$)r&E5U--_J?/D#/,OK?,%:e':_[oh@F-OJSh^rQ_PafH0mbT]*'1'DOsD5#A9jm1
%[Z6"f*$\aZ3>?@66C&-;]53tVA.b^WNQD7LiY8k$7\.6-KV-d),Z8@hCM5C8!!J/khu]RGE7E>j-4po=1.MVVC(Mg76#)Nob8sN>
%.A9WD_9!K!8]%2IiDX?7*tgp,aA:25`$Z\+4U<6E6?#jK<\ZYW8d`[2nSLg[,T"o,,"HfRcsAIs6c*/%gLrqGVnah-6HDO\=(&#e
%HDd"B1?`Cf:'(X>mMO,b.Pag(kpccXC<!LhaTO+4kpaImdeuOC5G@S3/\YD*%<MY[>(U!k75cOZ0Sq[&=[eG<Ce"ft*R<`DL/eZ#
%Rgju_(RZiK&k":j[Y$]5B;PM=?#\I)%&s=*UCoHfj^=%#3DECs:R8rEo)u=[:*@u!Jl.OT+J#ng,]7N=SX8Zp+)%8L$l%9KXp?8+
%EWe3VXW<[7ZXC>OCdI3r.[)A."=#,YY:#rDQ7=XmlHJ&riK;s>QD7UU7Gu&d<@qu'=74JVKLj"6OsQSJ+dEd*R+qc4,#CeF)\!f\
%+_e?l,ubK=%t2$B(Lng32+giR22&o'@5=&K_Z6>keELBb$b;n9!f'&_H)1BE[Y@>7IV0E!Ee,$d!eKZ/+7BH6"",mOju!.[kcbiM
%.ailJXu3#o,O)b?E3G4N+E5i@jUiUZ[^JWN-7!F*7o5$2*JF#W*L\109k2j6QNd@Ti!5oaZG<lS)W)1pAI</q=D=/;6jO/c9L0V%
%mEi^G;5#K?J>U58"Q;u2M$5q<JmV^@ikbE7"O^go"+o=5ooV^4<>GlunO)5"dg@Jp"erA]4,]&<']_]WMH`Q[O^gia#Vkmh%BB(%
%K0+0s$&V;@l*K=1o,0g>-!i5#=su\d%?_#T'Y9fr49mKpTXcH3'h1e-9Z&ns?6FM9ArT#&RK.A*?j$XuAItpHL(DVa0BmKhE%ND&
%OCp<QV\<bf8\N?'U<IK8]SkJ\7^3Q>+QO&HJroI/ANFe/a>;J2[$)5D77c+T!)2S(+Sb6'FfaK%.uC+YS=DnG*/k,J7r8Xuj24aB
%Ur.r>4GlIUY!kSd3!jE+p!PbILQ0h$NhL!6@M/g`81uU[Ag9*=M$XRPR/4&Wd!$a^:c`OZ\,e-=0i*=rLLqB&^i^U8E"!bX1>rRs
%$G$CR88s;;Yh9?rP:`QL0S13<+-L$iW<KYRcrn38B>b=ZI(`(*!;U^fppTCt7t?U?j<4iRVCGrN.!#Cm6WOnjK%X\24uZenqLYI0
%WDZ=iO%'*O/dIK36R`$9M`p<dBPtfsfXe^:U5gA(-WD#$K`hQkC_UWC@,P1$:@SLrfCTZH516PSKSBi,m5?XmPbkA91*=;Y"i3LO
%T*B.S)\ebJ<WSO?1!t5Z6odI`[7"nU/.@]X$gOJQ?=9<8(^ahoHjt`\;85Ljl'g@?;^E*h"ARiNSL+[5@GeO%M$(s',OS?cdN(Xj
%A?rtf!YbWN6p+nJX"hTuG#'i6'<oHV".bi./B%.7;kAl@)iUkSA1*[X-"_L<!2?il"+[&P>,,EHrul![KD)8Z9N+u-_2`*NK`JKV
%<B4N<Zb?hEOR+4Ig(!A-<G1n$5mttpfS4Vd2Ri`&E+0&TUJU%<O8!LXi12.d0PEI";(hG_Mof)d6mGeTP"Y/!3dSn*@S*d_!Kr,%
%<^G"U%&B($&`<Xf*e.qc>_QTKk^b$l%-U#c)1L7n=:1'T;""gd(h2F]X@#L9D1nj@*^tOP]2&d$fjJuei$8TBBpcD+O^,ltqhU&/
%Ug9?#R'"UeUnAUTJ9hd"<UFLcl2W$.2C):uX,1&t/<T0]7>ohAo1p$T(F&&nT0GjQ!<]J%nhbV?rA7UZNl;Hr:r%%38("Wf[0Z9e
%Lu$2!7(3C%\nDi<V!#u>jDK+e'GI&Ih2-hn`/kP%?&Oam+`/[.fK,6+`<MA-BEO"mX^0#==Kam5OB?J@$[>\Sl1Y77#_,t8`f`a3
%`Nd=Sa$S9,1ppi0%jBc1p`bZU'%>?#Z#'QfV!V:"IGpQcgm<dDYWRO,@mJq"h3P;S!s-[)8g0!UoG1huG_0fBP,IEhSGP&DKltb-
%6$OO+pG'`_B%d@Jp#)3P&"`c"Z(V1J9XVgI!spb;*s8o"O?@45ZRl/o):?Ul;kT^&haPEiehJYc[m0N&O6H[&k$]#<P2u87i+ouC
%k<J:.O;:?+"'o5$#;%akoY&&5:9Z]+s3Tp5?4;O=>T:Cs[(o9fC-2jP$6aIPSHXo7LhMdT2n*]nS;:SqX4Z:5Un"/%g"m]XLr;\"
%EgT[6UBja(hBe^Resbi77e5Vb'qoc)M9Ag2DrHEWENJ0E,%M7<rfPkb!G!D#9:*Rg9s]Y65Us'+<c/,N%XA_cPY4=#H0pjcX1r!7
%!f\cRi2"H:q"CC91r7,<B+(_q"`7E#'=6+SLea0QI4#OP;[&&5;-K#n&p]ST.:d9t_:@kfTnNWO"sku\9]-cI0Jsc@q7bN*/=\MR
%]*X[o,_ZpWU'i6R/X^3:Al*\%Q5U?8R-qn`83b28A1sERHE_3$@[(cEBP'bU7?C%AT7l=/O[p%@/5K.i<9jO_,gm"`?!J"aDs%g+
%&$@eC&Wk`arHRNM8^H%bgaKPPK9h.detkWnb@IuCN.F$cnHaeQZnRPsR7%'+5oM?)CkB'NMAp@I`^J2"m[:F-[.O+[d#lJ;A-G)X
%QdO/Ob%M*?F)]D2n56(o$;N\\;$OnY$F)":1mK`sCg#gT8CM2V2!0XUp.._Wh%p<i'd:^)O]U4E^mc,hGo<_9[WfNGU#?(i'I4=4
%flC:p'c;+sq?\4(`44b[,`T!9H0^hf3AG'g@84NUA!NYuco4f5W*mE@bYBBB%6%W`*6hu0[A_9X=@H(s2\nKtkt$jJ2rOlQEKU5&
%<ke+cf_QDlg5'>)hYC"m5=P>V3d\N$,Y2%@]G[g(;;ro^`>#YuM6D]6`m(gK,)IJ.>(pH#1bel-boLff)"pJ!'h^S25qnVtp4_pj
%#']i@GaSRu#\KW['kAf2eY>*lR8`@t"i.STd\4P\(_UPH7F5FMmt[6s0dO]14d2MX<Wh7_APh:hF]$M56\^p9R9]MMf?GL9a%g:m
%<V<HH72%,AiM[UWT($mC[SQ$8"$;R<TR2SB8S`MNKGu17diGhg<I]mK'r;nBGrI22*2LN:4U/2KZ,6\Dh?dd3QQuWJQ>M?8km;DE
%K!;+VgLSu0!c,i&'ko<tW+%Y"9;bB_1h5G@:IgFf0<16bkCa2KE3#WgZ-]nD4UXV*5pHpmP1C-I"m#;H,7W,:;:rTn"G6Ild->.s
%Ku@LL>sHa@ccS01pDLNmff;skA?fN7+o2F%(g7Q6DeJ$g,G5l',W]N>f=VhPlV\"ODVA9Sic,>u#7,D87&/%1*)S*9ou(6]:2nmB
%)F2[1N^8Z)1?"2mBMH_!h*?:(8p^=@c'?-ndDVt>@gtZKF*Id<$T#_o[Sm/g9Y;M5)sR5DA0YN'TpQGiVhBIRW+G_;2d\PD9VYm&
%)H$cX#"2O#lL:d/3@(SkP99AW?lNTk,*=^25ZI.Tq,/OU<H?ZG"T(j1?;U&8@@2YbpiP./,2;s7.EdDJoDt%<0u-><S)j2].IjW,
%US?#UH:>[a4ifUgW7$Nt1r-1Zd7J%QKO[J)MMo>P7N?\1<(LYV"!#o,']iK+aL;UJOJr78#8WjE6"07L=;/[5JArh?/e!FH>L+LN
%D<gn,rfildAk]!@Lm'U"oGLag<ijVD<K)Cld'BZ+9>N;-ls-FZaM7u+!t6Ck;$*E];fI@(+UoYp*jJ?L[pWMLYq"S[7Phl">)Ah@
%#qi%1,&U*OWE!h&q(R>6GTjpK%LW]E5dP>>9M7m?UltD+*<6Uqarji!*mBr#KZ`)%5er`Rr$kgELc*7D':4sRLd<^b"n^27:i-8D
%B=&V@krdIr5W_f3,9t-U%m>Vu<,<]_-0u'h94W@9IA#(3Cni8BHDe$b3Cg+h(nlSEg2_d#+^p[JrANO7?#AtQK>^uUoOI,4k7<IS
%G7l)Ie4i8,OXk:-:'+<-X.-ZDP,-,cQ[+^qo48<CYZH['6IPG%Fi'4SVDJR5kp2:W4*V<8%4M$0%DS.Kfes+1)hIq;Y"ZtdL\NIt
%eX5nmFU9=PfTJ(QUtSX5]nD]AKB+-Y^_gd(&.u0.:j"olr_M0#JW*FZi/rX`f[DFP=coCdLCIRMm'p0:6HTS,2q'OWA=jL39X-f&
%#r!Ckh3'&biKK0dAib3?,gMhS)3f+YOVYd878,8>8poXfUQV8>1VjDfMu"RSge;"Y/APtYNICXd]]87%`?8I'K^>%I85RJ]2FuDt
%<#![51m%Kt6'oMQ"a=mHZ2b2]d(j)Db>6h*YU-8,i9(qh-_ZJiBn^!r6rUQ=!quj`IWB4q^`Y#pd\-\J2j7G`K</%tP+[A3[U"J;
%)%,p[L00=FR<Y#7M9SX`&@lipI?lcCKKeUb!.4hW-RWV6Gmfrd'#(JDRm4k;OfG'=!tn,4L%ZRW+8XrOoM?Lu*&BRqJtZonJ[O+S
%_JrE2W)d<H$Hh.\Mo#fAJRkYPkF&@]]lmHgTo_]0C]c8QoR?=/7&a;9^h-Yg/N[-Oc0Rlj_Fk$^6#FN/asaqioK>jRGSG098/UTR
%?_U..0aAa;BP__5UKYc:Omh<,Fs38dTFh?s'D5?*(F%Nh9fG,MK9h5`g*?=G&,7Tb`/0j$MP(Lu2?Tm2RF1beRZ4QX`3C&t#fgei
%h4tgQJGh#U8QH7D)K2sG#oj_P70c9_\UjM_@iGbVZ66)j[_0W'\Z.ljO!1<a!an\951n5(%AF%hLnP/cSIBu29U8_H6&(r3<[`JD
%2%c]t)#Y/3\KE=V(b+kroId8(5tfnGD_<(o5Op!3knLDZ9\s'O<$U8g@&<L+/;%rEO+9p:`,^U9:KCr%fSUdh$\'ZVTZ.j*8V//u
%1SV_^hqUsI7gCsZTe0!If%VTQ_5WtoN1,%V:1-DOei)KP?m*_hZM@=g'50g'qLW*hUu"JA^pHuCU'jG*nt=WDT_)a&(O0`Z;B\GG
%+<PG5-rGs-TW_jea>s@XRE/g>cR=IVQiuWX@0m:@QW[;m`JL$2(0q6a=Vf"9OEPb7HcoS;HlZJ%XIMb]s1o;c?<jA=V"SRnm0[nT
%8LNJ'<d(i9DH9rW?YnhCaJ/@sFCJCXf!LPD&k3HB/*j&$"^g3/W!4g9%[0?u%3W'_@+g_f(qIN-3&2/R6JY2K%9&mZa<=Tb-]QW[
%;^]H<?j^0U40#`CYYgV%g64!CPS+CHXKM0snZ:mpd#s#T5I9TFg_+7Po.7qQf$+K$@gf;%>d[mGQsN=DTosd=3^snViQ.78)0C"D
%?Q1Xs"tL+A%*@K,le*\c'>Q<[4,ju(Bbk&>DrW(R)-Jo&Pu&YU1K"';NY"!NBU.e#pZOtR$nc3XJn)WQOd&_<A7MYgPLW\`%$=Gj
%a)KPP+nft%=ei0f4('o2!$+FsK)%)[BnIap-NRjOlP;=ifn#HO`_L&%<5qk2^G>m1SYGS8Frf-m>;!O;as*uSP-SV<6O<i$:B@m.
%CPVgk:uO>/$#BkE*?(j'$'?5dF%C[_,H"l""$BZSq4piA,VbQ$B\WlJ.B=.><IEBQ7"Y5#9L'c0CI7h$j[Eai-F5V/m0\ggOhD/m
%@ikjD+R>D9>1c%RfB+Pu\J7@S!aIDN)H.$BN@2sZC]f_3fJ=`-q]`"_jXX!P,=5ap&I`^#7d5IF'*OJCcq#,A<#J;=1(qQ`E5Ua9
%YYo`)4+iQ')4ZjgY[pCFr)oMSjIFU`O,?@-GFnlK#c4A`#qH?g.a\BDBX(bjTJ/*,hO5:hO:5[W+^[jN2:*+=aI&kgUk8PO,jprN
%]7JNdL6AGdhK\9U<+0at0o3l99df:S,fCp96'f4DH@Hsl=^X/@Kq&=q>;1F00C'OB7PKf(0i,]5UpH9K)ks;[B-T_jfb5*P-OFsV
%&rc$MK<hJ.1QjH`fXSr$)r-mb(`2g:/OU$r&D>jf(h;n)Tn>$FNsJPb;TZIL;aeU.@PGSG!]mUuR4#>+/jHbue0@IgJPd9fVlIJ[
%Fs&7kG3!CYCb3XOR"nXc"i6EH"t(fRfTONV3m2WIPcYM$8:R'cKKZPa>T2$QRD7D>(-;Z6X?l3<d0^@U!A36_EKK94ehhs$[:5s@
%SIbk-PX0'PGq]fhP=dkHP4AC_I8e6o3cg\7@=4.p)t4'+(]G0&$V5hlAk,6/SI[I\`4LOf5^1;oBs`:I8JOG:0D(T+=jI?_(5;")
%`"B(%l9.lJbXiCd:^TAr)rDGgD37Bi^kGTJdLsnr@g$dL'XsUTNua^qA;4es3&N`g[>[@F&==leF_$=u_ktdp,1nr`('<J6OjSn$
%C&g!j[N`$L-7R^tn<%s>A85DjEeN1bZP3EH'J"_[PsR'qKn(k%7a&,CY7r5N563$]QAf7GZ_/+O8KE#*gaAU4!%tM0NY7L?4(3Qt
%01B?'&RNN'#a-X[/'toJ2H(<'J/Vr8LCP>s74PbM.0'^tZFH:kcAiOjd>2da>F`nBe<(M3kPu59P%&11UcAfW!HoE``7V]6@1,KS
%ONPT+,NZ5PrY.]9F%9X0G5>ADaOB!#MKR*#B?'#[1-d#aUi&-u-;H&7fSYV-.V]72q]l4&,'<.uG5QO7DJ9)P8=ACD6KpkSM5DXM
%<dbN7bd6Gg3iOVRQ7^of6DDq(Zq1N[4B(RAYqV_R+img%&Y\68pW`>4@Bhk-VC#1U*6/XP"5ca$ANHPN+VQI]HF9]H<p]-t8Dq4$
%aA6]u,M@m_SdMgt\rE_;2d"0,7<g$S.Y=?>N+Lk+X!$':4sM7V@dFtiS;^!Rn)NUE,7+Q1%8\8Y(h_)%PMu70%2sqVO%H>,M/j2M
%T+Kf"qsi$ug+oSFTlBcaE1s,EgRn?$8+jdnk%tkd%1'!WZt,BM/\r"FW"W!(J.&A/EE-LV,n]DW]1ZX.W44a%S4u=+n[dD@;F?<U
%16T=]p4WMOQiUVj%[&65`>Eq'#^+5D3`Z:-Ug1\`FFQs3%U#bZGl!='NLXf^YscSDG)9`]YhDF*;)+92+.E#ur_rMDYmo;5q%t'=
%ODQ_VKtm*&+IjA0^\#CZYJuO#<GW5GiAHda)3MPq+gO?QJJ6U!,`]N&/!1:1L_bVN.#n#F[-32F/dSVeKEgKu/MKF"V^P>=(qKh:
%UnWmbOKAj7AS"=$69UWcSB"*.1Hn]o6^`Q:?BVjXQ#PZ%"(0'KfqKg-a]ZuiXS/@"TN'q]qhAhOga^Ba]%3'3+OWjA-)n?>[;WK2
%C,$@IhH;L?)[,K/O;UXJ*I8]<^2WNtZ^Kpl!#22q+_fNUdS':34CO)U8J6e4iK:J5bULE@`V+.@@.R9JecL)k!mlT_?YBkmXNh9D
%b[Y+8[K&+j8A?i6J=GYpKG?J8qbp'^"=JhF+ed89Wrp=2[O(:e.*8!+8CE@=I(@H2R\rL'd^SG*32H:_iRYrYonltn7]+2OAC5iT
%U[G?iZ_5Q6r=1TQ2TSZ7+B#0n!M@Zq@dadpPq=^R:o,#:6Vlp\J@FT;*ddVEO**JnT!.3d$E`0N_en.WFkWBhP]VF4b5J<=;>.qZ
%[G7ur!DA$EB:LVG$n!dXK@IAEU25pV$?9Z]/7krKO'7^Fj.6E+`Xt47q3VI;mfZ9T-%lU,G?/P(p<q;T"A#:NGjsu&4[l1!%]DI"
%It;.c_\d97R`%MMgh7+"RN]gjA*I5f_4VVl?P^^[/Ogs[:_`ScT.(NbfF/4[[Z&E\OL!=W[5g[SS[JJn?n\T>#/b"!\o;O!22Xsr
%:'QNMdCu\M$n5jU"YCMAYjHRl#'#(t1!JX$p-(_d+NK7pD!b'?;RHrg#D1Ma&YB&p%'@`gGRRHTPB7P"nDK#ZN?_,PMpmq*n-Kl@
%ZQssO.G?;%&</H)[ZDDi4ZH>,-ZLa3>n__!ZgFst6?&QT,cS>t$).HWkS>ZXBMnjJH^5&Ud4>f)9fcs,+smU\W=BuFC5/!QgmG$K
%&Q4O]h6P,k.!O:=OV`Oj>kr3*[R*$sP#3QN&:J&,!b85uBdnJ9:`!XFNbKWJ[$N0f&:W8HVqTltK7lJjC$^f>4Tl?`a!WBK@BYin
%CHV<pC=,-GX5B#W'lT_0kR2VA;DP=EZ)mcJOL*O5O:a)J9bK6GKnhE<D^<=*!Ej10QW>gK95B&*g7g#g)V,jIEmV!TSf14TLGr(;
%P*JdJo%jmGMF&2[mu`'B$^2iqL#&D%j\\HN^,-i=0i`9D>,9<$A&=oYTm!(@dC?SFd5YX^SjZa_)d8?]&g2=els:):5T@!)B+ifC
%^`oRjfO?HKa"J]9fMT$P`t)cK:`qLY>SKD[)<7BTLLaQ1g''o$*!*u!i.<p%EuRQ/ge0>p+t;9*5Y>ae$Cd)F+!bll95T<GUIo//
%$o^X-0Z-.$IbnPs_OsEE!=#!p<*O]mW=:$pNX>[5cng+BOH#?SOHH'\D(KGsnQCARZhU!f)NC*odU;FpFrEl<(ick'VE'GSL]Ort
%;\NUN/kaK*-?*N.WsGsN3oL2n-'VXYA48"OB&QpTC/0>ToWkSA(jsm;"2.D%QaT(*(uJdUkJl[?&?%QCHo)u]*[I^[!Wk"s_%Kn6
%h3$`Z/U_jM2BTn%+A/]O!#9"385VY\0FZ!PL9[3'8.+B6<W_ds6Er`VGDo;'jH,2_]u$@OGgp/!Y]15kPg\0^5lsT14;8$4hjPs]
%@Utn#2bl4AA>s"QOl@;\)_92c9U_c*PH^r&K6&TNZ\$iIqCA'oIO%9L!gXtTa_Ja'R;aN"ZpG>Ib0N@S2;JlC-!%Cu>/,#!6nuii
%3>92d+WF7:'?c8UU9*NG5]oUQ!]astX\"LBTm+o3U1$ntBdY"n02bE-Umk"*j>mTa_i#c;QGC@!B3M/m[n8W5q:QVcbE?+9[S]jF
%p#M'n_:&2ro!.W/K3a(W%,T0N!q6C,>E$`ek+Ij78j`)+aWLurX-8r206j+@.#)7`Ml)Ve-8DZ%P_bq,'fo\,bX4$4i^A4tVe#-"
%,YS(pBn</GAs=V#Te*jP5%N\/+Hb%snR^0u_Z,G7>bc%34pI>=0M(^CPltS?V%lY0XLT`.je-;X4<I[`^h+]'V]1?3j6Pu*+/Bkc
%"",gL`(-5^nWIpGJ/JG3#E51^fWOGI`LmS8.LODA&<.jWXUTUm'Y#eK!lo6#_sm/AVIHqh!jQi@jQi]1HUoTk)4'W-?E?sJPtFd`
%>bdHHS[C7C8<%$Y_60X#bFO4d=B<^ZY[R_iXJm8eRNY.RB%jZZ^WVU;O@HsLOsTtHG[[KF]8J?(r(QBi`MF,f1@aN2UO)pA++@>L
%(N+Qoh**(ue5CstLGe*85tLr/,KXFN>tMJYf+.>a?q-/=U*n[)6'6s#`mDVcFkW%bF`i9uK+]*.geIV7:btW.fZ&u-MOIr%8<4!#
%eLJhdaGu$S2\0=B]ureuE?!t`OjRPu8s,r8_,[DQZc$@Y1M/amL6B$P1#i]f-/PlBKdX,n2cAVnf.k\u;^sn&e'2\_iUp8d7!Lhc
%["jLJ&4e[BSSH/sLJO73!2[M!RMN='Eu$mle#A9OGVGk>Yp0JpB;CX5Elrq<kKAFFV,?/N5DE%*3<NU;p7b<48!mYn.#n7e?6Oj6
%BCpCE9D!HIqd!`$DB-ded+(nRZmka?1kUQYI7H25Yc9SC3sH_<fjMO(^e>W<R*d-^#`QsHHUm9f^VP4t8!:u[c?j23(Gf_gj1R7i
%"-IB*n_P.N_hP&'nD5&T%sqYAGjhpOnD?uf#OP(!lP]"o[Sjif8aisMI`BZYLOKbs%o!r11=d)sM3[RjkY1J`Pj])g')L_PFE_[Q
%d,N^2mbe-m0X<RA3tdJ9NCQMoG-Sm$C0YtU;+)D6;r(kdPAY?ZFB?g[LbrTd\hg3>S55"0%+:4C]f2ZIK+,35';iD,O=OAPN9Lg2
%N+e2a9R!!:PRDT1]8:(@F=1Oe7]&8]*-o+7K:O`"9"O1bG6T1^TRn"6,kh=?BB-QB,r;hg&JG:Rf^<u;[!$T#3s2!\qUSTR4%P'W
%\C'+M=H^u+OmW\lWIUA`h::OP8jthtSKZ(&EZ9+E&.?HRUUr;^4`E-9I!:<MpS=CMo%b2%5EW\KI!7hY@P:77]*!?lb(8\sG6!$]
%UiL6mGCYM_Em2OIB?6i:*kj)\*FPatN)/^+.,Y4XgDtaa;X?Eu*<;N6SD*5q%)AR(s.%Km)7K=g[oU(%6dc#=BcGm!JP1UscoKpQ
%+[;b/,Meo)&0.8/%[*pkG9bi_g9?DYhq7@Ql:#m5.GLC:o,q"+A%Nts)bKB7gDtW/^pPn0]0i#%Q)L8?cB)V)S=<,pLQj=Jm:UNb
%^jM?&:qA_Td%q:D\iW7!U#1#gG@sH/%s[>.G@qo#p<3`sSRHrG1F(_HESA@Zl0]\a&g!Fgh-#n+jY5-=1$<BO#2:00Mk&+5'I0U'
%])0cr7jpdrGg4n/Le'h3$"^^n[N^n]NU9Ideni^hM3n<dV7R]8e`cG^Ts9jjoqiJYd+TGph=q/5gePS*+ugN3Ul,70knFt^c?@5_
%``I>l42YS6M4Bgt%Ps<YU1\:dfOKMKY&&=GJ!'_LA\5:ea+>`sA%P)SZ@oY*gE!LX,b``?mOZ7PdEgM6!"3@1[NjNIYS^O"gt;#t
%9X8K?h%<=Yf^lJb$P71gTknOhL)i?!DU@2Wk;8LVkjBQJALJeZSRF#WmG05I*RM<Li1SKR&]BXd=YmWN5V`VjGGDb`#qg%9GN2J3
%FE[_:&AH"NG6bK5abVgc46Tj6l^cGZ5qrbr7\dSJhBS<0SF-lb(E)Bsh45^DBIY7_SKTh'a;]5FL>`UG1EmGO:(fHsc04R<PtJ*s
%GK9$:$>Os432_R-3Tn#l3@@(cNUP/;gS1jnGA"R/e]ir)$ji>2)#<SZPAKl+I!:<qeq;Z6]7]r-pKQgm_bi#/IE$JD:qKLMZc71o
%ZcB=#ZLQ`gR,C_h3qD)MR??:GFpAuf$)^J=mbj56U8i4h_%Fal)F.uF<29b2c?(H+<G<_i!s=A,0`oZACq?###0e1?Ru8N7*=N!f
%7ZP(t)Gf1RiXR8UBPH]>GNa;uq,8NJK<`K-kS_,U;C:`<DtJ3b!8djPOY_;FLfn]Sl0TTJj;W%0G%PEWC.<+HZ(k+Fkj8dV#XZ6X
%oQCcORJDfu%MQ]!BOeN(h*GMs7W(_c7[\6cG!"V6U;X*rgP(r>Drc(GDZ"pFOe:Do#@E65gmm+/<\Z$04-L]/9OUpB,tUbbB4Q#7
%6bsAV5tL**@+31Y-bj1NplqE]O%?+X@osH9)@0>c#qPRc#g@cj:c1I_"9i[jM667En3_N#%<PJj8Q_[KfoA%=L8dRP[^5$?d4Q=U
%5:CP_43NT9Nj)4k?9??K;_TH$*?fj)6fu=1YVuq#X%$o\4u/gJC;b;"?%ZWQdZiCEi6MN\;-l<i'S0f;CM/M;.s>Md2FEsrf?Q2g
%m5_?j?C<'>S_9$GMBOnE\frfN`nVH<*?4<Rn0>91+>bSrSmZ9LF_<a]G5e/)OhJYlfZs!3`(a3?42^\sg>K@p9L:JuWJD_)Zs!/X
%j0cdY[*(P7*?5>.jDMVRL3*YQDXcAr_XkS2mla'n3$cddnCe`q/&[S$Ng9iB]M<5I:u+/EDM-NcZmu)NCM/I-ONL+0B>U<1PVZK)
%L`-*R[!%P\0=<%,*@(]f0Vc%.BgG"I:2:)k2V9F[SK[u0an))/5*Q:>UU;o%U)CR/CBs`2dk"+,#Dj#o1SqK(FtMj&:2=LXka!.N
%.#*E)9>SnVm1:dV5/4GX;-0J(X0^NrY$cn0SCYssY.CEkf$48J^aSn*0lS<+Rbo,YF3UB=CRruc&qRr7XEK?.YfUdeg@:kIjCt]=
%[!INMeQD2I0l"r;W?&]P8m3.4SY4RiAMkdAK3/tG)lXk*c`lasW?!:;H57a)S`rQ%NRSFZ5F_[6W?%`8DTEcmG-HZH<8:%3E/^&I
%c93J]1Sfe%)k;)5H4rb?4(Ck#2)<l'!jJ,t_.[J;?lf3eBSZ=@Gt90T*BnQV(:blh*Q?OPNR<b!&tq6R4%bB+)iSqoX0YfpElOLU
%DXE;Y1M*qGQmq5oBkNr*q)bFD!?EnqNFnDuL'`_S7S5bPT5;j>S9DOLW/u'q4+mCJ<nGR>(nT]NER$<,;R@<Z7VN+j5UpCbV4I-O
%l7P/pSKUC61`M[&E,Y#U1Ej0DVY3:NS!2Pl//3r#edhO!3otr@M[rdDE,3a4m3(!PZI7Gm,0]50erHEI9Xr;kmI8]F(N6s0pb6m-
%c["pA*dK>ei#`B^9Gs[(?9?r#^j._>3t+CE/G)eC4/tgQnMOK3'3\.X8o"ZGM*i.pm3Hd5P1oGF?rD#7C58W\kR&WD,J63uM.`W-
%37M%Pe4K$E3@!'f,IK>/jGe>8e.*o(L0TOoe.1Lh9T(])4-LRW?=UC\:Sl^HZ.^@Y7fqX0Wu^&#l0jkf%O_MoN,-@T66osV#-j`@
%$A[;km>,3Of<#_@_;=ZKE-#JMfHl[FYS#V5hBrG;NS'8='84Js&_jQ,K>h5XfFEt@HTH!TgG'71#-::17m;g'I<9:Nj&9Z2b_YXo
%E*38(2.AY#F%@(sM=&rb:WDoBYoPn$l$R\a4+sA<5b1t$[^0eAeVr*NCkq3fj3s">%Sc-IX6@KFjH3!k=e$)Y5qEW6`b]8nVl'-X
%W"^IU9hJiHfoCfkpMONM1X(Qb3&95+K(Hg!Rk`Yh&<)Efb%sQT#HI)-ZQ5`YaZSFIm2-UL*2kUH&UliVD.lG[5a]r^rN\045sf[`
%c>4kFo*kXnRI)Q[,;9,?Ce%k<oRY8Tm>-s6ZtE?3&.BRd[kZWWnk"m(A%!W$7kA@b[UZX*f?K9-%ddc_%;B@],D&b=^.^fo7nSG^
%H8B.p+qP>NYVFlEkDSE'NS0=_7WSATZQ3`sa<fQ=mF\I,2YP.-L\HTk@lWSYA%u6Q,IJO-]APKjW9qZ#_YIoqFs9LqUpf;Z75C^J
%,F"5hO".OX;94EsCJ&FKE@(j\1>AN!>aR\oZQ5Ng`-7\+gL3!.=#OYPTbba]A@BB5fQ2+C4-['Ani\m?4$Jn\.Bac7k@IT9GjX.C
%7e<PJg(A4liV5lY8#@_1_i39/.'CK*D9R/3(3`C9hXu_j/C>\N[\KbR#k0h$F@iUc^Q$`dide=_7]GcGB>^IH7VtYY!gZj4W9oDp
%d9*1JF,6Kqm#4qb4/'\EDM-^S+=QT]l/["S[?W*2G+3K&q][4K\VH21?M$QsoQJ1,i`A'b3uM"6AYlkg??E07P&6DFKS[TaNSTU/
%7^W+5],c`aLaG3Y[j.r-'\"SF*Jnu\CP<XjYt&uZN8BT/FO@T=bI-=*lP<<C]Bq9Mn:UR.l0[bor3?7u&-(n.qW$+!rB1;bK!50"
%IJ%maU>,NA:S+N_g%dT"FXDV0a`%1TL4<h?q9(GjkF_crEER5Qa_uXcs,7KdrBL>QiigrechZc"\%h+05!A_NJ%`S/Wdji?^>R8T
%fC*V'ht!Q-&Dipp??>i-`T>:4EuB(Ho)&I"\fLe`s1&$tbrPg0%bXp5\:!o8kuVIPGLK4"5J;HBf3Z,&j-m$tf5aH2#@-o54akQD
%g\X4p?OOU,?i0^'1G&?XDpL)Nq=]!JQa@,2Gt*6fn/X_7qMb>knacD."WsJjmH\8b^]*-RB=H3ihd*psYPIP]Y2(f-Z<,O]s)iI(
%qf]gMc*%'%Z;3J;STt&"k3I5Xk>u<ZpQ(@4lJ>t62rDd`?!Vr"HZ=CUfD;"bc<FWLO,M3Q-'LL(H>b:1H:[d[f[m$>ci8*.rdWeT
%BjIHP2Qkrha'gFRs)C!\Dr4hQ3=absqt_:Zs0l7HHi:F[gXGU-/\pVi$^JtB05fY@iqFtFo7,Pn1a_\iro)bXbZnE/5;h&2c>QHr
%YAY1Mb]rBdQJ*/,mr$Frs*Snak1bg#"h*f(h`nGaY7=hO>[6*m`TH&dpV("+?b_&2rV#5oflm0^Da@mprYPA.BBQHn5!9fccEFD+
%lH663geXK'eWkJDY2$(IdqTt2rq6-ImHVn9Kep1\%_;FVLZ$?-YVK6dDY<*l?gah,K%64b<Vpg_cG)TYr8QJ[Qe+GaMWEP+q\X]A
%s/:=VATMnU?JV>9H+6q"N;ej-PRIXWJobs`M>?l=j_*c6?YGG@![hW,q7aT/lcXKrSQ%i&'A02tnE88EDr4lk?9PptlOMZe?Ei3k
%0%#A+pS\LeI)D+'p>m>+fk&pui3h20X&j5cDr7l?Nd.c-NSeoD]A*f&:6dd$BC@HKDuTO82qM-o=%alPq^6`sLR*GIoBWHd\#0c5
%^@<TJqS!-`*cKrl]K/2;s5ND;E_/N?Ieg^llOpo3b"U-a0<]<nj+hRAG,T$Xd#ZAa;6F,GqTo!Hm"3!c]5,1Z!XenQZt]1ULLGa'
%rU0nWn_\\8KYsOf3:Q.M'=2L1Q94a9ZnXbZ^::b&Yq2(/]8u\)?g,?#6Ik[))Ej-6-*UJ`+8h8l^lZf.EWV"Z1WSYL4=nZqBGt90
%=7Dbb0H%CaJ3BCjQL'\$p:*7$*7*Nu'uZMgK0S^@\8/6ZhdH0P%Au-$\)4n`^Km"!5,sh:YpIR8E7,j+fm%d^qt]KqSai$=E'-lC
%p`YdVL[;Ku:?Z'1Dn\6P804V8Z[AN2cM@76Dm<@=I(1YukL\=PcYh%Ss*I&1p[Ch'_JbK!LA'7LHkq.UTi_#V[;Y*We[JtY/nc!6
%3IQ2CDTR^A$hlO?0/"qRQfR^td*I(jV.L+LiFk8.QH[AO9SpGd^"52]^:h7nrartQFb"ANWl>NTNBIL-opFIUQ8HU_b3PC6*?IL0
%m%Q\E6f6`.nm9AC^HZZjdlo_c&Qce$RYF2e(i+?qZ$#do0Sb^r]Dq1CQN"-;kliBa5Gu!j?mk/?%\=mM./<[k/A^pr:TpqH0>BK]
%4?m'495ac??VBbs$R5!Ls1[lmm-FQ:WY:kn:.neEp=jZY.*S>QRdKU&A%l9RXH)EG?1K_jEnYnanb15hl.Pmuo;gW\SA%#+,A/uM
%s#\p1URD)Nrd!NGQ^Br'_Ll0JLT]H>T@VaK8<P$JHh[2bR+h)o\.9!)\ka@@*'KX<H/DL]D#LeU/e3<10Bl_*9"^2grq,aIq?7u4
%Tm-I/mC!0+p!q=[lQsM2]PLqr3S\2b9]L-N1KkEHPO%r8.@1iPkGJ^QYH,E`p6Y(kA[IXop[qAk[bC-A&u4W9O5I0LNP/SK(aN2M
%lSD9hIlRCH_5C9*I!^1G:m&qdqtd+hl`12'P>fi<]mEQ:a7Pju([p[rDU.LK0)2`=0/%2r^0gM<rR-+BeH3X$qJ#?UJ)s2Us*aM)
%p[sZP(08;e]"#CX<XF,`B@#T0lJhK2Xn0/co`gHWR-dIO.o?en5s'EePpf9hk#fJ:7pLnVBGqA/A#tqDa&\&fLe.]p*`FN1'"GrV
%X$p/H6cX6>XL0H<k%1Y`q5(fDJST3M[4%*Q&6bm_%_ie@lnR%b/GYZC3GfgK/W0?=e=nKtKSQ_d*`Xf7fjh$N=n4;fU>q9I(1klu
%*;W]cXL0HhO/Wn+ai>CEY5aSdRU`Fu=YuHUcl2eObMrfQ>?'RhcG]7(;]O+OI+5XXk8QNAr5-d9$1l[g+q05b(eZ&B/(2c#!R!Y6
%0_SfflbcP2<k\2<]bX\_[U9AA]sd46<NdEs?MibWQ)s-%j"f630r_3S>IE1g>H=mGg7pFS<irfF[9p=BRq@>fg-^>dd"Z)I&H(=J
%lqo&/f5:0LD3WUgZsX0jD7"2UfpW5b8Q\fK-m/E^70SO3C\MD"<TW`G`P9\O5JK>ZnZ*2U%Ch`8>.K>&%+<,FbO\dO=*J^cc75OE
%S=eYe[KrI6Ep^U'rt45#]R9lMQhs#1W:4'9OpP=.:f]97'b'4&mFM$a)97ekEc_6VqTd4X)+Z1Q;0s\Q;`gM:;#`PGeGoQUrji%*
%e+sk.+/d.jIicZu&75pl1jWDsI_UE.]:\rT77?0+;oHH;F+0*[r-NIF*a-d"iVGTWD>)o;dG[#e?b_&2rO2R]IsZC+T)+lOCnHUC
%H2G1Je,g#P@Gfm@68P/@>dQGrF29ddfd,JBEK;XV\pej)?>T<Erij/rY.:!LK@sbQj6#@pgXkVt92t@WSW44Z_FJW=0(r\5lAYX3
%i/<ZUO?CNN_uo2rBSqAl:;8[dH[PYH%h-Rhk'mnAmB69BA'"[68j8:ns8*jaFNsi7K[3in^MEgmn+g<oO2q=UiR<LHjI5['d"oep
%a+)[1n!`iRF1r0UNZZS#0<]l8ImPb@^A7K2?L["a&=!VMBCc@T1VB(BSM(afL!Qnci3.HPn`nZ:\*))@YH!#![6ulgrF0\G_ZEj;
%mcINWDO4,Pr:0sAI><:"l8j2YLXP08HL)Y]CP6M`OR;@)>NoVK#h^+>qZ+cIJYg)8afZ.'9I=)uVr-:"T3m"MXi0g,lTopgc1S!l
%?X-s0hgTlmrpnP(S("E"o@e!XC`b$*?4bCErU5Zrmr%UR;OhU*G3-G=@9i:^kEkkV(<4ZIfBtXmo@X:1g)!SFH`^$<9H9$.WhYVr
%fe7?khjg=he,AEis*@U\LIKUGm@Wai&m_^Pg=ne6]X%L"rLKL'\Zq2>ijXZ'%Q]!ep;('^57UDeY(;osn?N7)f"fK,PLdOm)L,Be
%0-Br@7@6LF0,fOQr+->M*3og\#$r>^GhJ]EHouO8#89B!6Ck$LNZ^JGTSWoaZj6&m5IO>@K*XGa/;8&u?kZ05!Y-5e@`^R1?kWcB
%'=i]hm.X3L..e;\?86^"kMt[CmH:A`GNQ-\_sr6lg7]UK.h^<>*0)N^dfCPNb8'N_T8O6PKTG83>S3>E(BW%fk&j+">1&]1[7pVi
%T3m$:mHMg[+'+Pn?OKEPj6FcoJ??5&jWBFQE:iPa$]$!6/mp0j7Jg7l9>9@;brPZUIi\CZ3-ah5rT_qfo3:R9S+DsS<V!E^q7lG=
%IuQY-:RU%ZkmSQcbWJq3m+"IM`#dWBJ<>7h_JeoCN$[&q*fU]jL'8[hmJ4%sY(#><ccHg#G)o+pnOr$*LPqLW.Q6t223)[lf%&f<
%A&L6bEC<"8dDn!4,D]h\q1^beENl&&Z0h?ENj6SY%W,h/35ulW32/CPmHLA!We6@AXT$n)5s"nYV(__>K=Ep)]03k*lh/5[>&=#j
%]cYaB^Sd\'05`F\cgD-mbT'A_pQ(6U7:!s?X7u:,_p\eI4C=_p4oa!Uq>Y_aIW`*;ak=1Q?f-%8+96dGLr`4CYccirr`e3,h_//^
%du+`^L/rujirp?)U0M$\>eaTc_Xk']IEA8&)&f)!TP1mL??/;<n*_c-Yb\m,X;*;N,CJ)&"A;p-j/lETRtjnZ9%mYAk97&q+"QjP
%O*<Ni^UpQTk;\*GNt2,!O]d+rObAc$HEtjnmDGC*ej/Ku$fqp!q:2Eo^:LBFqO#-r9.Fum^#WsR<$bmE53C3"^)"u7>4C&o];&.M
%gtl\0Xc`D9*E"/3GeB_p/B(*nN*fCQolFU4qm9.#?gb.G\Rdj8p#btS>?5\1j*GbS:;k\P3u$R\p#Za$7TOHqnT]+jA_"']Eslq3
%<d3sCgpmS%[CUF[41DeBX#mf%Et<HWrn$i9bAV8nQYbc9pZ8!6a5G3r8*.uIS!-56k8)=alH_U7J*sQR0J"oP=$VN=q`5*(k`:B$
%mc\X:<d`++=5jL*-2.+RO%4JD(k@SD"J[WN;^]6#s7,dDl.L9QSquV,c0<p#m>q:P./Nc5p;b?&;/3d^?gDSQIItqRUP7TH/DKAa
%=Em?HM]Q/GF6UhnN5t,oE9B>ulej?\?_9P8h0.S$Gs?\gW2okpWO&50:OPnaB(H9)>&oN]W4k5Q?"E0CY!1dI;R4R1f2lKk?fKgW
%raK5A\"KJ^mCSihVe>0c-Z+>.lG3D#cWEm$H8Og5Eam`m%Wl18K"ZC)h\WKR/]r)*/,(p+E<.90q.9N.L#MIA[JTeG*is_(jS;p?
%dq9IZD-ed:AH)",^'L">$T21Ld[FBl5h4LVs7icVf2q-n/;*>^*3eDN?M4Dcch:0.omMnW*+)FPK/W*<`'jO.^oe2CWNJ_<;&Da&
%:%Z8/j9sKC7r8r'\e+iCq;Mq_bk[';b(i2Ca$pncgqiC^#N'`LJJ1a*!uL??GqJiH-%"^b4`6B.hf)Y6_X&6>6$o?`h0%!/)pJ;q
%iUl9lp=n3^M[0`Ol@aP$KtGM1e;&N;?=)E9IX6!H>\6,=%p5MGqVesF)qMps0YUsY*"Q?V+8i\E5YlVf)it#84N7Zt8iCpm7aK-&
%KuYtk+8%4GE^`)C$LSXkkdV1\*](Uu]f7sk=??5^3T'OUPT2\;OZ=<OJ%P^0-25_-s0uV-g4dSO_[c\0H@8t8[fD`R-k<@Df3c:@
%:IW`0HZkb-2h-,1A0&+IG[(I1@tj^Qp`4AOgd=SmOmut5fm<-1),D:U9#eo01@=1Erq6`m_sVU?+#1jTUT:MDJ>)ZbpWa?r8WZQ[
%8,_JC+WN_(7*-%bc,&ikZ\0@t..-9`6nRUL4LSO;oEOtu3esrjrqYjWk"cdPH]3Fog'l`""eju2e#tFNs6%i*j6Z&Zbr/qg_h[XQ
%WD3Bamcs0-8#\tLVN]tL?"V-`bl3![bKR'1m$Li,Zb7-0d)?$G^cu^3YMQus_PD.$C];_84s"=5*PBqui#[uT#^j]pmFRM-6Q`pP
%LF$kg\@c'0S=dB!f+Q8f;e#QbhV`r18AG,@J"#>s5@2%iA4VpgLq``Op!r6u/qg0KU@Ms[hcsD\s5oO&r:Ndr&-)3Y+('MGI9GI(
%:AOPn-SNbPh>[:!_oWuaq9<mLcQ>@Hc+E\!_o^g*O&l5NcQD[as*+Fjs/rXL:<[\JQ]qIDru4^>emJIKn"9O?8N+CI9fA?%jILR"
%N'DS^E@an@P0GDXZL"/d\^\ZtKD0XDN:*[K(S:0kUGrc[;g.kFG15I*9ulFt9RcI.;\r&p?##-8pDemnkE"WE]8efj5AKN]T7?F$
%B4#0(jF>Li`<,nFs16'H^HD>Sk4Ib(2<dkP4Wp@*:PZapet*<C`n;,c6E@#5(js_&OFKHpF6`*jT=s975AC.k02S1VRgr6#2t>s3
%SUspfK4iLiX8`8X>Hb7!aX=V19Y_aoODR+r9>no<#X6`=`ZIem')iGZo"gjoo5nKJl_sYDfl^Po$ZQm(!2_s4@7Y8geA6Uj#!;Lo
%G'6D(Z^]ra[g(S^INS11D!M="0?n[\4\+Jtq4i3*Y2`6sO4sI0qYNKcIQuR,ShM%R\nq=QdjUOTh&^:%%QTcaE;k/hm).:ODfmhI
%BjGr;_db%.Y9Q&\q3@iD\E,-/4an)@?FA[3r1pHuJ%g8+?>t&dO8o(;2ub2YjI\(iq+X!I[spX<kPs6fULs?reIs!a76C^c;0Z92
%:E*sdT%<:>A0.lIL23qUh[OgZWm`Nb@$F)Eh=P">'@mR^`<E>1C,4C*[4`@U<>r-&O#:KlBjF1O:_]Nkm*dFWri*/Z>Lq@aY)Brr
%A"U&5Cka&kW(YQrd^a]HS5&^NR9_l2>BMObgkTM]qlgQq259_Z*?f3h%'#/sl1P7Yf%[%cUAstf8Bam=PhD67T"7mfNd9o1/nRc&
%RJ8V7'Mk=M<su0kk*%j-f%Y07`.Y$7bH03mWZmK_YYXj%grVeH)DLijK<J3Yk:\h(^olSGaiPFD,h28g/uFhFB0Z@*cPA`hn5V\S
%XdXXn;K_t%TA)6rIpr,P$D/?QgH/j<1$qd9nd-($_;O>G6@G%Yk.3?r?%qrN_1\_a6Q2K_@;dAI>b.'`cN&E%Sb^.1=Z)-q3Ahg?
%mOe=C'[+2OdaPdpW?\[.ieA?_fi_P62OQ>42"sXAH!3P%bIBBGZNn'$5k0+0BO-_=nRKJc^r9LGUYf4`BKb2Djm.Z%YDKS2e,djd
%8t_2to2P2ji^hibJ7n=RflD`NB2dg<`r6ot?.u1DFLSrjlf)op50'.jdJ3Qn=;Oh*Ffh'2LF:1P<%WWKR_hlkg/T;_[];V!os9)F
%`-R+*r[maKr\B3(rBAaPa//_JTDNHpF6hs;WGpGR^:)>2QhG@4Wntb_gn4H1=+f5W0N:ini7,KQH?o)TgXA+E-a2bmr!o(0-N<;U
%_np:nX1OCPXka%Gp(LR]a[U\qO6%tJAX')l(T-5%O7?qLE<Z)XeDnD&MIa!C@4j:efp-]djZ:E65BWKE&T(Fd'S!4$Wc[Nn[hHAk
%2Z0`#9/XP5dCCjF`*[\o@7=DR=p^*R&!CHTDjosX6?,t5<HrCpLOQ7i6u1lC&A:;rNG>DMb/Xs"RtCBN\AShh8h'ELfPjgk,S-*L
%*pe>k^K"i^F3N.R$0ThPCi=^aPBta/Ds#!VqJ2!h?`Fa?2?S,l`>Xe>lugaW)7]:)&D:<$.FcZaEYW'2s0RPF>Pc]mSs[_X^?Y?*
%WhumcjIRAhY:0,d-aMO^g41p:FDHQW7`Z:YfG"k@b*,j*IW=ijnT^6Z`-!eoO5,&t(\cQ)om[/EeM'fkD_.45U`)tXqhZ[Q@Vp*$
%c(BoZ;(qN&Xt]DRR#;,,H?T%BlDTFua]l*_>D<(2'2u$!+dG"n0Ka^ULU4=2YQ''"3u6.a20uH_nH#8iF.LjF\0R!aLoHd$q1n8)
%ee>FUP'T0cp3*@G<b:!h>[MD/)-*;&<mE*Oe)_D6&VmU^-?k9Hd5Qrl?;TFJ%lgT(aG^u@L1\`obblJP_D3-r;=(/)45T$.nT^7u
%]0=6)r;PCBod.k:nG1&<c7_CH^NjsNFt:tBs6K=BjlNqmn<<;5a"*rA^H;HmD`:?BGFtMahO`V0aYeQsGO\SkWPADSNqQ/]l<eJ4
%Df5U&Jq`m>nYE`rp&@_HZMsg[cVH3j.gUVfqf2Gknj3nWlbrbtk2PM&e))Qi5O._#hd!h-^#>b^*k458@sCk'K"L#qIsLe^ibT&9
%Xs(Y>7(@sW+'j\A&<CTJ,.(oC6n#@C&>=o@+[h]@LC!j+++0FeU%tNPKLnORE0PflLbLqR7/697mKaE]nQZA4VB-p<+"9VAIs-W%
%mLBiohV&5I])@?hh9lk.=WAXX^J'G;[W#I-%b7E&6ZmYe,1K/S/\?MT#bgVt_BJ<(&2&FuZ_`_J!+Cp!g,2(hZf?\UY5$qZ`Wt,j
%i!5/NEbfK_3-pTY@X,&9Eh2Z:l&VMh=*OKXnhY<L9]Ll6X1bLqs%`CNncG^Y`2.3"%E@Jo=RjU0ZP^q(<nf293-oXma3`)`J.XDK
%>Le3_OniacS;7n]9[X=)?rG`\eSls?O.1G`Ai9%3^_s*ReQak_M$bL*Li13nX(O#3'PtiOI9qr8C4V,>1h='4,:=E]8]Lo@6,d5k
%hOtu_W\^jiq$hJ5ErB':4g8E+.P++%_0N)Zp!>TUj[kM'QeLnN>\l8jX1J,4?/!d14<`2:H5uXif]s-U.B`-,X..o*j07^E<O_Ld
%n5P/dM9tfQ&]HcOH!IN]F]kY0XlGEd>OG`tab^ik3^@gCS=%h\^1*B=M8lrAY2Xc'3>nK)EH6SW[='eNR/5D\R\F^sN<^j&;]UEI
%o+(BSFP``BZ2(;OG&\O3;jF$`95%K]]3%PG]R&(1jk7(]_T!r"nieRMW!fCR/B59%qQ&p=mYZ.V3al#/fCsGjVi3s?Trh9F*TZfq
%`4O;[[2JDB\=0kBVU0qPbO5:Eadq`EO2Ko<.dUe;O=*n3XE<(e<g]D,%Yi1E'fO1*CkS*eQhtdecc)*KX5:uK/nJ!A"o_C7a/OOQ
%)r_?IeN,"Cp<5Kip6@50*9oLq&b4A(cpDNIiT^sl3,=?b=%_'@7e,^S8..W(0\(Tu!Zn>F5R)s39OY:UJrR?k"s;q:e`&JQ[Z=i(
%RBJ;((IdOr31VpdglrQh,IL8eb!@r.!6ZjjYTt,I!Bu8&2h4!pfdMJ$h@M$'Vg9^rD0:.&8-X#koalN*\eTFf-Z3%Kqf17]<Eh2W
%I].#)MQeT$e1@rBAA,;6M5GG?e<[*j-lb)^X4jk*[Q%>fQR1j40o^,RS;g:5c0Cr9.uLC!FZCer74!g<J_`Q[r2gKKd&^kS.6#4G
%9h@Rf(=4I1oq\S\SdJ-3?<0IKombQEG,4\^4Nikl^!".N(7)U"Z`i!A_QP`*E-o=](=q9XRTim8$]csMOE]e%RSbfa/`b`uKiV&i
%n@=7_41F-37W)Ye>AiD[3;mHJhbJ2"\]+@(qf3(Qk8*Wkgqr(65$RqiaXocQ0t1Q^8'3EnT:K0lGN9P1Y1s(1ci)r@BW*T+/I[PY
%$gseP(1I[BkP#,T&[IZEIl:eSJP1r!IeTGp!hrke>k!s<_S`#CD"2S7?%BO2f`eis(Og7F_3H%o"^fjI_O=d*OO_D@%8=75G%DSH
%PAaWdC5b#GN8#rpZVXdoTK$eF$g\mr"sbcXOu$:50\3S`P,BFbgs*Is]5/3-kD?1k^7_&uehIM2(QPK85W]sd2.IM<_r4^t3OTfL
%MD13G*-o4^V4*Dkqlh53.(6LR1s0fQAXPjq5>*aBomP@_Xh22o[`6IjWROm5]m(r3P6:pV^_cBBN,(G5>kBo=i^i^&"*SJ4&8o/8
%-qD_([#9id3j=8.m?HKF\*"a_f`WIs"f:s>6]O8pm*f>78X'Jrr-Q1As6V`=P`f**:p7&DqMCN&]4cCXfrJN`9j%E9_P#lT8MtbK
%UNI*U.!rn5hKeVk,9sW>qm%/*>B8c(>-%O+ju`Bgg_nspfXX#@Di-f0@U9G!4%*i6GB_SM&UBg?$!2=a!>)4!(G3Pe*FmXhOcYrW
%EQA%HT>LGDfP!="AjAKUN]F1rM%`<5W9r0m@QoM@L(`pa[Mn)?RP:;LHggiJ_0n=pDG(Z3Z:=!Qp;>G?Q`3UFifN<6\#JFk]f\&N
%;5>B/9^Lsd_A+\-iWOJV\ug>"C"?k]"^a+*iMqao(uVPTKW,<[.1Y!kN;>d?Po-u>rD<&KWZl:`Q`"<F&AjLo=k/@6@UY]VBW=%7
%%I[S(`HC8YgJtNCWjjP,0HLn<X5[mTWG.&<ch]LI^uF@.E;j_g3ANn/?!P%o+W[)E5$PqU<Ull/Vg`B>Auf8E\W>AVp7\PH\oV]o
%>;P&P1WF2oW'1Q-*g50NFU*UTQIth,T"^ObZ,UC1(a`mEgTe<SUX\taf)9q;a@;60RLAp+k<_?s"^Upo8qsj[3ud1ricI`$,9IPB
%j[6nfKLiTt,8,0r7,kA689dBp`,3.S'7S`<LnA9JHA$C/'sYM]<[?I_(25!Wb;J?dn^qeN@`7\*N,4K`$?r@:FQM0r\)#8fKKG>A
%Xe]]t*8+YDm1/SVO+]Uc,AhWuZOUt"CU3Jj)]=gG,=AbHAPU6ZSg0A52j5M$=-=iqcB?*]opKD`2Ff2iDm1hnn;3<K7h\AY8WcRX
%7[ORYTBUre2N1[X0MRhrLsL,g0'l?!aMmaeM+4*!fog*4m*(dj<\6;UQ:rVg9fL,<?4=<J5p]r[`s1@f0p*ZNc#/KE.qMUBFNPkE
%k/,pTI^5BP8<]!(dEDd3]6@j\>g&L.&ge-=lEeH*Q$`me/,>?F&*lUW@W\A`1LJQcdaNT#<"j0A@MCoKQV;][@aCB7H8.>LVCL@A
%`V$j[\3&`\iJs^*l:I2rO>2DoBp16qRuBKJ>!b-nS(Npqj7r.J1;]dBLhq:BADE=COHtis20hDubC*1Bm`;ouW>ciqkr<`2nW',2
%gm'Z%4-CrLNiYh)Pr=I\dO*gGdO(0T$q[(02J)f,>>CCP:UY9kP#%P0:2lNecCL2*\W[J2Ru.`H4%W2r(acY$KR6K5,>E2+=jn55
%meipB:3+OKUb_(-*rOAt9-;=3M:]%,<;HI)eB.T61L`!VpX<Zp=SV0ZH&GN^.lSMfEeenPaZUC'KCa^U):;O&[NdZ"<)mObH6*p$
%n]a%=:;C#00ijklH,k&M7d?]'iiDh2n(Bku6]?"5)iF.llYC^(Y)>A3f>X;uk][R6f"F;rkk_Z5FKo)KUG6)q45;j-g\6&<ci&$I
%m[[\'#DcEA,<LlcLU\LVYoulKBQ^gTlo,!jIe39:>Q/Hj;b-BEp3ubZCu)^Y(q7M(%5n+dTuO\>Whj%hWW=+?#97j`pA4K/Xh\6n
%Yh'6K[0$6Q<FE!1cmo+g$37a@5d(17.ff3=QXEHtcjBcdQ=,3T'("`Qf<"bl;+uU?-a9$<"in-8J.>5MHGs,H-\BEtc`K9XnEf/^
%5_c@TYqB#J]Z%^=Nt_%/jM>Cb\O!62.Ht.rc:F4AY-5gQZ2/],jDKq-"(03_guPndn^lfG>9'J8Wf*Lnl=L:SYqmQm>Dc4O4ZDf(
%J2l2>9t@6D`JNhTdr<V!`DlQDfDK3l'g9FVE3nF`]Al0jTtZfKeS]iTM[at1AF!^2*MR%#443a^fssSDlcT-A/;"1\9k4i":<VYO
%6DE7XH'SfZ\u&_3@B]eaiDDVY&&jfd*LD_^fceWM$:4?#l9=!6C&."Nlg&MI4\dG'E[E`L#RKXjD$^4;Tfjfk@8aM$Zsp???>JP?
%$4eS(h&m3<$\pVjW7R*5Cp)$olKo_@+`>"[2F_oIKFi[ZOq^H]RSm]*K,PtR4";'F(5e?B@LkOZ(W++u*P#i-%u:2nE_sMf?1Oi5
%3BFlA':uU-W]%5R?gOhc)9#MnD`\QVhI2XE??j-Mo[C7giG:DI0l69?f,O;V*gt+8hG3'A_7)hLY1FcAG''8Bkb'BBbmNTZ]F#]j
%9TqP_j0]&d]&]>Ie-QWpS7@eY^=jE$=*7C&U;aUdUTDJLCUd0(a@^qf(&&u8ITblpAt6`?31rS)*62A?m-Y^"\*H4X[1(loDp#1r
%_:]b0[]*HfRr=8a)0;<rZY,@BbQhbpc:;n!+,:lkg[LRJk6HpldFX19F`uPrq!3-`9>p4$95\P(4hkJ@(M&J`GNGVF7-2!uGGU7K
%H<'^B+&3_*dj3`\I,dSuYU7PrlO:"XI-XqGs*i;^\Y#Df4$$A21Zi=Z6_Tg[(f@=+c0_;q.i1')#2?ablLZ#Gg,>Wfde;^pFJM!$
%'C7Xr7F.I/<m?m">d[4+oAoYVg,N6Yd^tJ@e'"[I277F_7\"'<=[\%(cWfDY9qT-Qin4!;A?F+0LhN&.Ai99c5s]\sE$Dcs0P=/h
%6[r9h0pOn?L8A!.@E':=?3NRj]lQ7V1_K"Wl!<--=1m1I"1$4KNQ<3e=RE3B=s=V!7jcPMb9__2_62<:pKarqE!!tL$A4VRF'TM@
%;1[]KTiXTUZ@DuL:!eec(c6op(<a4hVK(7.%8O6VP_qmM-ED:Y6#XOG(Ko>"]iEUJFu5\OPP'RZX;6J&VG%io)[K(QNqSH`J%2m=
%!O!l<Klce8nFfgsSc*@.,HLefp<Zk@r0U%hq%F(7QIpKu]n/"_@>*;m_OHPU.)t*0[WSF5,-g;#*LcK!LYmL.rpA][L^oPBqW,'u
%iTqRSq;d7MgJ0qLHQ:>b&5B`IF]WC&dEZsT6s]lJf8fK<??pMq[e=[/mbs!"dI^>M/\H_;>uou+]P62$h5V?HG%T9HH,ua\@f]?&
%dD0p,3%VV.[GuUn.VIo4oe-]J^DA9\X$]'ak;\K&boK1<G2:2M*lbMkNd>X?`kZ[0(mN\m@oF_#g#G"9&EC_f)[C!ic:;n!+,:k`
%g))c<+07[mmRoXLoUOg<J(M1ugoe'G[MI`k4%=4U1qGK5pabYO\ifr]0UddV>^4V`r!(EWs1Y3(F8<R]hp=m9jo:K<6]WUcs7>!!
%er9UVN;gk3'Y5foIp\ttCd[P_lgJ^*3g./T#=2D6MicJ4P.(9.@'r';qb$sjX_I`t26FWjp"-SM#M<i'9'bBj*ONko55H@t;9(60
%YhM`Q5ILuIISX-3p?nSFF3m:Hq/#:OV)a@<^o[Mnn^e#?D&Kl[fO3\c5YT-TS1\uLFf_pX]]*gS]?cX8'pmaufVoLm<GCbMM>299
%3a1&fH!2&*Dc]5H^m2Ma[SGI9VEHI(hYGif40s8[Dk-Ga1]&ls4%KF&!p%_*`q?$s?-gI1%XG\4M\UU=QYZ`ng&tjp3-Or5q<?/W
%[qcf$g')N$Oe];lAF0FYe<nY;"nIR>Mq0MB2-dMCMq2jp)D4(FE7*ACEb&GupRoW]5)ZB0:*[,a<Vo))GQ?_SM00B6ME6I<$[s*E
%>SE)5e2`<#2+sk4hNX6IeUb'2(F<P`MG>KaY6oo<gn4XC+H[?JgcBu<CL_e=^g7)'V@#QPo>n"&7gjms9UolUS.H1DQ:TAZnU!7d
%C;`/@YUe7t#@ZkT-9"ho#n5rE`B=d$TU>RA8MP2i,@_%<+L[Eb*om.fbGu<A8,RC(QJ*AL1m=QO=NA/T]@n/44M8a;_H4r92JAW^
%/BW84V0.W\1h;TB/\:8SqsTEG%<2IXC!r:=:",n<#AX4=KdZ`.'e^&WeOs;-/QrntpKYm[MjaooC1F#uVG)=P#%.^kq6b?S9JK_L
%Ln/]5o95(P"_p*jXp6QPN?f;gHA<2f&Mmi@P+E7OC-D+=Ljf!F5jP2fX\bY@<S&gk+XPT%_+\CQ/3OFcbcc.W%W=JOYr#h4+bEE?
%:Mb)p(G)#$[#i\OMO1(c#^J1iR[*ql:W(kep=02,5,gb8HKNh]*/pP!e-Rj_#(Bm+:kIl1+QNAE<Hcqc?fSpCR-D!YN#u#$%9e%r
%s.@"!Ces.`)M[.qHX6U]+;@'H1pMBs.$0]j"Q`/YM'R\dp4qh?^K&f?_[IZ`A"VdEp+>`:L8&2>W_W'2Y^tSKd%k.u<fdHDX_.$d
%[)\*n1HT&]knMVU-?HkY%1r)dF\=BG(F@#85SZ"RGX;*ML*j?eiqp%T"4-c'[)JDWY(=\1=/_S$J!Y/7Hb%[Y3N$)K\>S.g(:+)9
%%UrSGh*48)Xb&;L!ciO>M(PcM(l?obR]XtXge;BCoS0AKqtIVZCh!X_1)0UFO*sJ*,MM\\nX@=C1Ke.X"8shJ9Z<>19SR9c_\#P4
%aL2q[UOdK.c6fL<]4KB2V)pudhp??5'+K#']I(&?`O+1oM[KaE2B%r'5hU)1CGWD-Q:57K!,]VIj5cNp@QcV7Ot!Hl'SL=j("=/I
%L1%nRbd)JFg&gQ*%@;_aJ11o_\[do`0?r#f_i.HFY)X#?=GE6#Qf/*A<`I6J)j9,0O@eTi_llV:A!o3Yb_C8DW5b?kQ9'&YGZ>cK
%3E'do[4O1OPrC7e/o1/h2gh;Boa[.ebggBsn\YgBQ=;[JS(m'sF11h4ijfC>gm/_k7k8]YR%kts(9D?8b\Zl-/rN6b9R7og1p^Vi
%CU>mp@6MhBi2cOrc?7l(iI_Nhff/CXFQs?]_Q]8jjHq=i)%Su73l?'`'1;A%>,p2[:LG0P+a`?Z_jhjj[SPqhGj<DV:M*QqY<nTr
%gHGYp9^^O\e_\3g0j1X4]8:D%A3HA<M[U9]a`)?b/tV$FN\F[mCHsWl5!i_4=dF=W;.n`G=tj`PT_g%kS1&/4k/dad1i+PT2GXnR
%(rhriQ??Z$ICEKNHarhV\&5ecFTNmJ*AS5Y'3g;D..%i#X`:&GVC2/;"iK2rDqL?V,;GHfa';V5=93NN/_^F"`akWq<@sSZ4FnB6
%75ZSFk,:>CUEQXIRZNSQFj)1+(0lj>8@Z>JhAWC4[@U&XCLpWq4N+0[QAI\h#t<+G%h76Y$'RL&bN)T,:j-KG9ill;nM^!B2_AXC
%/.T;*T4:t!f96tW:Ki-/Bjisooq]RYP87M$>'rJInb&]sf96tW:Km\/X,gU`>'rJInUL%"Mn/:ZN,L82g`$`_$#jb`m(MXOq#ENp
%jF]k."G%+oG+ooH=0irt*cF!Hd_kL.1YbbYE*R]EAs<Bc1PcC9[]dHt?LiaB`01SdGLJSl?aM#h8RkMGEt_s-,p_M?h>rZVq:`mg
%opC:lgN3bnqg-KECE*0&2YO=km/Oe:m-^+$Z]3e3;OWkJH7,EYF)PRO/if;e9DX\'f]Bkp)nU1gJFXMbZ+k@$_7XXOhqmg\D=$``
%.rn5:c6^^pZ22.T8Ukn&4.EpCh471WDe""QP%M\@5C+9\P=D"+7%0Z6qIgh[p@iB5B:hfZ^ou3Y,]d9)ak=WcnQB"j:Nnmk7=(ld
%M(Fh\ccdU3<.!8o=aSetY<D5ZHeA?W0,[<<AGZqr#*//C[eq.rK.ga'9d:-Km9QnVGMpi.Amag2HJ3JYM;p`PHb*)smss5<!&OHJ
%K"pPY=)T<[7\.,c(iLteZFqp>i9F8d#ZnCt`jOJEHk4H6@'P%N$0W50mt!W_Zm&;%[hkpW*`gCBGEb*hlJjIck#?@6_;ZC&aTi!f
%f"!6.E(`?^bc.JQQh`H#9I=iDhVa<pkf+I0)hSl(3!15-gGb$cJ_b0=F=iF6(`]0[4g%4;4&[LG,N"IMaUsqg-J7._[qd+[WQO6n
%cAS^R;#jBr"BO19J?TL%P\5R'9i#u7E-W)Pe:lP$-;X2m\58enp.P[5)XM?gU20,5FKph+CZ]qN^bq,9X6.Z0S;0p\?2gb;PN/%m
%$4kID),dk$k=ooL+jU4jP!%Fj<85m-+>_Woi+%MK/e$>Z=\RVJ4:.UD[omS2SD/M5Bl;86`$Eu(A7bU4Es.]RGQpMD`/L*lpD)tW
%MX>K.(ml[,%&R70(pc-S/%@ajn>Z&7MZ#TEiR7Ts<Fu'kO:'28OlSTX+f&WqGBV\iY3"_W>3:(R6iXE0!n]C26S-,]T#EKDQH9+m
%7MD22i0q?I)q;+O\eEb;(JKn%?o[S+kG=r1<tD1E*gom>0DM$n]_478#=%hu:gHI*G\Y:W``+/g=2sD(Aj!$Z)<#pMmKJMa)*\-B
%j7PR>8!Ou&mAI`@<loVFT]=EEn[iG99W',cUtI)4ju6:gC/GDUQ4e2,S#Nh:*JG;V/&E8SDU#+><`\ab8%7!+iMF!M,trmGD3'%_
%G/VQ]*`J^n%Y?UlN\Gt&`*cRA][=Y7h/,6eC6EH0%(A8U*8eQ!+ID1/BO7.^^;2)Ih6a(Uf?J$$:;tkN8KQi<&s:\"Y07$\gE'Q?
%_m./VA?Y"//89.o;qJAi<1dVRaYEad!)JTl_Z:ge*qPqFE^Q;V!:c*),ZqJ#]M1*"KZK+_?)DSV,@^j7XlCiDS4%rk%A"-.=`(cr
%@+Hh&'\Gk)Bb;\rn,q;ga0;Nt&m.#'1brjkI.cK7h>HST7e!_<)RZW[]k76/lF3rSo<1%CY;Pp$hjXAmeSeer^O9Ddp3$&_f@=eH
%=24^?Qd+WqX5CXWc2X\C^NglKp%YjOHVC505TZdX'tQJB9CKns_X[%<h9b!&M#0.o=hi(`I'CJ=2[[YFg1'B@#&%V1eEMYs'It(!
%)atO#$[fV`%,Af9doteYXID\Vb,HLn#31TK]^]uganb=t/hje!TgD1g#J=tBG[d+_^QtbNhBZD6UH+BuX/>j*1rn38RJi5S_.@E,
%:r^P#]g*mDRa1H*0c]Wp!=s_g)tqf1GjCso9Y9S+ScCA$*502iMsERj=`2iW$8P=T)SV&I%kg5rXN+"Gh7E'm!DX'IJV+/7N18BL
%JGlRG'J9cq22/@I*7[ikNG\_cn-V:*2,pts#f2`o$5G3sj7Yo@.QW,cI]'Dbia]9e.0Ka$ZK:-p>"8D,%B`F3P&B#0I+oLAnoNY:
%ekF23]c;@'Kb?%`@?QmC=#J1S(iL&&pPTK'!pCf\(lh3_kOu6Vp:X03*EcIJ@I,:l$fD.$0@<AEA$Bia+s5TPF-&=rM-!-8_^qf<
%QDNQ]K%pa((tf`9,)M1JZt`r0,bnPLLHC'pn&8!l7MU^dSsmMqDNW>RM1N`(SQj?(4sZNY4(Z6-W2=WPluNU`5LV:nOD;Jlm^>(3
%nOg.XA+/!?JG',u]1GG6DYJ1(p$oRI8Nc,u$-+!AnC@EXAiq"EVT(AdpWJRlnYH&QW1N$$W6R3ARcN[@E"a(t*<8a?69hbuS)5%g
%@oC^\Z.,<H7kl`O5DT+?`)7q:0-Zg@=,pF0fK_UdLlRG!W[uR]Y!iKc6<$fc<lILmWWE<5eoh1![r1PQJ.i$+i#j?>rKhahQSi+P
%oWU#(;`IE1fOVFoME<o0Er[,f@L:%!0@0/!E.<C_!urtqe-u6:8:+bW2kHG["OJr>(S('!p:KY!.cP[jQ"\!Q<"[1`5/<_pa'bkj
%"[crn'reVkJp<J^='j"/.`/ZJZjG[/aMr1<mZ9k+X,858JNG5)Haj_k'*ra(j4B17f8>Vkn]>p'qc`Lb>4D>knG-8Wq:@4n8B._u
%P4gA[qiIU.F2>oMp[uugporEZ53e1g,Ur[:?\W0bH5W.hZOTS+Q)C>5l1aXm)I!*_$U4DKLEqj^LEn=+s5,F'=L#ug$U3":(OX^S
%]&:KmKpR!9Y+gUd9VPa8?HM42+(?rcY,KW+,q1oWD+U13_<9SM9n'Z\>4Ad,R6VqgCVAo7Y4m`hPS<@GGXL*7HI(2hcel+diuHP>
%Y4jn`n%oRTOCW+>#;+q[]gjm'.6+L)=Duu>RdmQT9TJ45lTM-1>g*A/)2Rh.HI$h]L,&GnN,BL+EY%$<c=`A?9uDk"b+EE$3PRSZ
%g*7P8.=/Ym>ib6*fo-`?[r#\$=m,ZU@@*PH*nf&Fh=<$/YMlFYc=kNZVWb._j]t-41[0G3-7W&Zd<^KI1QRFPXJmnbXW8)I\4D^e
%8'Es%1\>pl`EDZg109,Mi7t\f1Af0<]"D>A!kfftK@-+7Cc<BG[N7Sna01nUEV?@7r?o*EjO(Algph*_6KHP]j%s,2l(+;f$7iV[
%-_$\9rJ)sP5LZo/d803]qMm$$n_"mXMLH!-k2Pns*e!;jUuoD&:XP`^:n%9lH2FuY],<MTKQ(r_3S2A8nY-;$8+?bf[_5^P@1"Rm
%*qj\RoWlT@AM;S[_$_&?F\:h+:>'s0b6:9AlJ-bL##"/U>%/[+p@T@u0qCEdZ_%DrXEM`-0]RnY;Kf1-JtA&5CKZl@cAgqolsS+*
%ScF(,2?orTd-VXD^lL9>ga=n)4i*&^YCuIJ6<V@t:WM;:Btr==6>)F:"fFJhqj1[hF53PJ%.W(dCBT,_8hY_-?iC^4<4\p+0A.EV
%)SVtUVc^.rI4+tc[3,8/8"]Q6<G](3TY,W2B%\Y;!7\4L<*sP\opoSHYs)G/F?HqhXT9D(YDTfnmd#]fTLQ@i*.D"`clJAj;a60u
%#*&;;05@0e;!UQu%m]nOUI;c+Ys@1Y0D'ban(7b8o>gbVqc>/W=5eYscD;W8\PA\?4[n8>:T*&CqYuWCGrC!X)AWVnqZ"$6iQn`f
%.=M@FQll=aWXaLRch_(JqceiiTf*<+>K-.`*>a=42MNC4qD#KVW'/]FTJh;%3^qY!<]H^g[QrqNm8Tk5m.`s\!=fFTAsHMg>qJ:Z
%:?P\O('i*i];ohI127<V.hA)o[shNI&)Z^E1II`"F$?9hEa7.ImXeCJMa`Ou:bM'cS5?_1j#8rM5CDdNk-.9=/(A\,Un8b&]<?f1
%DG(1el42.@jY#cD$N=dDp&s_KVf!Bioj(suo4e_l]>_V\dEL1tgujUkK%BGBcs*l9%sDu"L$!nW$=3L&[muNt_B]H,U5!GgQc4E;
%b`qi\dLi&8?ngD.]%X3..YAC3__[?r5S!9FFu\]nMSG(Q@d4#5(Ae00cH._?F]GMoEQ(oAK5SiiMW+OAVP'\85t!['_fatPF]9c`
%J@A=tW=u>3Z5'FDVh#10+)kr@2)$ZnCog@)LiD<\aGUT+B=m`aY7p^(2BMH%;u+)c1FWRN(,Yi<m*+S9F_Y>Y$OKbDT3RG#@;alC
%qh(M*'2+_T:?@rkmi>G-$uXuq/7YP#53NRC+[^gADecdc.iA[JjGXW@G`?TBpf!\@S(cb"=e=,XKBgegDJ<Ta6123c,P"aErFkl=
%e_+]be&#3/c6n0To6IsuCkjPkP$GYAL-5UbqkFM-$[-<<iAZS.QRV\f;kX'TVSHhk^\GQhiWa#2?sfr4F/g6>S7q'BU>!AGg-WpX
%/+[u5!uHT)k1=A2Uf%duLCK;Imb@GC@8UPeb\J[ansU+LLg`d0\_7@RJhHCNA,5#&#6/.k+3k^Da:<7j3IINMHN)gP)>m!&R"'#U
%s37_H%jX$^ao&VO*oUMFO4;+,UrTE?/9SR#]D8'XhspG/.c8%-IknV196m&r/[=lE-._4@OQ.XI'6SLOZ$Z!5rfh[-74%m++[X'?
%6h-P#6nc.;(s&-mf*tZO+DNV*#;,iF>2g(.`;`,?Ki)p'fdUBBf9^_$'n9Pdop)?Oq'5L'5=oW]RRAT-`al`%Jj_;mLf4\kp<N0D
%;(*f]9JY`7mu%)Z\:<UNa#R:_gZ[l-N36Y?<cFA_,:TWaW_$i89Le44IKX<^?dHPD>rBB;Y[9ECDp#nFWU[1ild(fKO_*o1s8%59
%0l6N:Vh&J9M..dqs%+d4Q&>ME/YHcA3naLn`/?*nV5XE/d\d(/i2\Na)HD4+<V.\ges+M<(qlo;-FV1?"s#'(d2R_*%JNdk\]Q(q
%_n:N9'X#c$-tONuC_9VC?D6-R&0VtD-/)1kkc/C?FR'$^Y[lndq'-o@eDXCgSBtlp71ep_7K&RG7;&WOa*j[3+N$qrBf;G7=lt[i
%Tr:"YrV%p.[!rBGR&Lr-A^2.+p+$]K!]*@c>nCI;j;e;RF?TpOH;sp2@"b#.+shr4L5c]]Zj2=\;-f>ZL?RXcAV"ZNnF)3on)QD,
%NEA$Ib"1LV1-L:8fqN(a3+FDu3=PR*g$&_e8C`2fr:Eco"QRO;Q63mLMZ1R&5DBsSJc@E)pff`:VqOZ2aft?>ln8)@$YP0IG5s:V
%>/LSh5aZJuH`_9QBSH&LgcB;s&?a>l:PQWRNh8=Eg"stn$JK4XR00!IbB,5:;eR6pB0.]RWl&7F9]WSQ/L(e_\PL+,KEqt;Ij"Ht
%5Q()Ee+,%`"g8ih@FbAQS'KH?o5s#YnH?F40Z'SI/p4mtoUT&6:)=P\9>%2cdil0mfpNMOoM)aD_AaPu$;=lQDl_]mVs&$5>4"9q
%FkMjMiSZ1HhFq_2eL@-e]f7W^(b16ji;=M)1>_]b.Z[.-VnBlXM2B2r-E5c<NN;tSZ!Qf+MbY"T)5^*["#h4g9u_sN%C-ia*m:9[
%6t^c?MM0<sR[Qq<3N`.9<k%Rp^YLKloHgt'I>gWe0ua,;Keq,/,&qTAU1BppNt4J7m43:&R0\:Q%0Jr/@0Pet]7nj]D5k`J7rFd&
%-,E"'M[!at<,<L3eJY?q6%J??R?FI6XKKq"FVksnTc-TK_IF[T^q_&ZSIRF"IbZ3/;22j4VW8YkWYmk:\-?#bUI8UH\==J35`BL*
%?E#\d?XPgij7mT/aXu<g%hKhp;+(el+rdE0(^A4f_gdKA#bOk%$=ZdWoVl>X)[8L9@LWPaJX)aI":c3&38KloPYa2T>C\E?]ngRZ
%A:fe7(%2WrgnCg/3'`b)Rh"%`'$f%GiA&k/i/FYd"ARg$/!2"f-Rp<5!2XLd;$8)F2Kb_t?ECQR[BUQ'%Bl9I[^Bu^Mb5HA:NWAd
%Z)5Aa\rT=f7AIcd\$t"W&gknj(eiI*)B2L=VZUK;POLn,Ej$``(PtU9lXMVEMg/aaQ9H&tc4n5CrtTYqhTJ7N_'Z-;;8Lpd9<.-u
%;jL^+))*HO>uOE6oV&!](rRtqjN^#ql+o*=@9Mc'eRiib:Q8,qM4rnIV3^,k#o@cB:GejR(<3U.b#l^nXr/M`]#'i1NEoBj-,AW#
%\qU;R%`:#[1&=3!F%u!-dHSTJUh[2C5Y^GFd',"iMC^M2%Xma'0ka^bH#!':8A,*+l)HnXfFkBG6+)B$9sJhF.T@oM@n?h1"_n]5
%"#B"H?.XaOl+._$Boi[a,eEO^-9]qRQm![`@uH%o;@<WE!KKaPR2VJ;<2Vd*OCV@)/\L&.)'05uCHl+Ob)nZ$lY0K@9:Un8>I',`
%Q-2i71C#`LOfe"1pnO+*Yo87om;Cn<9p]_uUbfU-#6kSP:9^>+C!q`4F`)#QEB6-MZ-d9s'rf;$"!bH,#`!8a*Q'%B0kOe[>BCmt
%Tb:cJH#+N:lO:&8<RVZC1j)GqELUm6M4a:TfY3cldKU#5$ZW&;P7lJtW\bk>31,l"5S/d2W8Moo?Sq*4ZAh,VRPMTL#+WtE3Yf/c
%p_G&3)D73R"bZl@8]4/[RBoV<l7m@Q'@=rHTab)@S4QtmVpY1U9]Zln%j%(7M5ZF]Zm_^U-#U,+i.st1RI7pA'3G7o!&:EX9'JsR
%9H)@,s%]k$;r#kh'**j8)9L9.f;c-Z$.W\2oFsGZQ>GkGK3UTPiB\+q#U_l_G.V=?_Ch&&16cdr9G&5iFKVUmK)por*Y(k5-K<e"
%9=6@[AU6JYMen_Q>H4RE`&W!8d`F+n\Mb2=l8n)\-:#acnX2L*460]<!*h,`&<%9pF0r;@.$uQtOlPfHFEZ#&DCh95$A%4lMDYmL
%7J9^")u^*V>ScLtnb+<8\b:Pb>Nd?+ZE8ifa!te<>L]a^8FkQfI)6883VKf1+MEIlc")`tWiseBV8.)):f2Je+#Q!`P,I!^;',kI
%2;_!?fVqq:CiH,YB^2&s-9-_Z<%K7f,-!JdV#d3@_uTc[42l;qr!j3O5qL=7l1<"-[\cIP.EE5V;pA!1-0]%l1de9>ObMfB%D:HN
%7sPm9?eb6?Z]C.q_4P^?\n]Y:"l57S@No(d<+U0R)D6D>j-omR29SQ0d(/9k9kJE@bccYV+ZDuZ!($_qOT8fdF8khL<r@kjAulHW
%8XDjT<=oU`c3FXqARV>#_+fB_gK$k!;5=8Ca79E!KR<e30;6lq?'U*N"3j:&$$6+=)?sK<1cH%'aU3R=,<S^4?d=>tEgB9D51j^m
%@D^+Zo<A>s[UZ*mAXF%n-d\K14!)?DcG)9H8/bWEe>Me[*1n(:8NI-!P%<61VMN3]W+h<+nq1GR,mmS4[?Y_7"eH`J,Wb1aBM8OH
%ed$$.;U=5"3[#A$&fOXdrf/E:Ass]%n8gTk6l]SP.G]0Wg%_9RQbtDUA4[UMGYA`hQ@pEu,<4`69j=qcB%/l-j)>C8mAT#b:GA(I
%L(kUT1=2Dl;"TUcdCGda'D^:C,E]tei+[5%h/RHphf_XiXuR>F;I))e6d.Y.o?6cK7c)%3e%$mSf:T]]anlbW2YI+/0'.PsqjT6?
%X\nPbNU@A.Dt(&8WR?Qsd@aX>T8KBEC@tt`f^09D<W$-eT^7m*AWM\7h4[`SfIo0M;g5fU_jE5+$f1&b);=Bbe&>aXY0+'Oig)]&
%DNk.Q8%IYtV>AK`0jjFbm8aH!7#Jlj^KH.[fQZAX"&=`'CGXkI(K\.fUY2[>X.>+5rp69IcZ":%??!G2Gl"i#+2hErU>9C1/RfL?
%.Z?S#hC48-X6eU=I!3W>IhShSbt\G>/Umt'JC8gfGYC*m"M3C-f7&V!G.O7=L@1ICX':%T<^&B4]BK!"MSG/WGs3E98*_L.ZhZ&l
%p^D<FkJ[CDV6KLUkLBX"rAg5bk?/i8L>DQ!T`0BgMf&r\\FtY8'GSgT3VDj&)]6rJ2P,Db-kC(-r<3&s&('A>]ZU"V6i2[a>Kf+H
%pcdLu8+W?@CTAeWMt0*&<hjEc'`7FUm%Q_`"='e<7nlSOG_Wt_C3%)h,kJnI"&rMTph3jG2(Nd?pZ&5U-%Cg:3EMKY40MP+#d+A$
%gaE%I7(/_VicM#h`iC5)RI?14j_>Des8<pT"^&C/@N=e#YZLpUlT5Npr6'^!<32n;Vg-Ke>#`6uW`GR`[dUjikdEt3FsX&[`4df"
%S?*./:SSsOZlW70e\:LZ?c=htY2E@3a(N$Y:#Afjd.!SB#K(;kq$1b^EqNomIE>FLA2NY4L*'EY[IF>%;Zk5Y47uIU?M0k4H_[/a
%3A]Lu'11M-%USP-0RG4]@`=@?mB4Uf<o3s=Fc3B!/XkHq,*cIj3a$@IlOLs'8F63dULDcBUl@O7lg"7V"k-Q>%nk_f^Z'mK]7$=<
%X,Bt#.]b.h@_?&Mnb&H/r53]mTkJ/aH680_4^@g=JeL0^$OlpOcCe5A0e*,4XY_QB_&,i5f.^a-c-O,U::L/T"kK[I]+3@U*2740
%Y'*NHYLip]+#M`I<mem1n+>E=p+-]Scru\I8X"=M8s?XSJ$&PSec-,-R7_O&/2^YVTl%_f'ifCrC@cPIf_Mp7aEsd;=>\^2<\*@s
%h-:^YZZ,kJkk<dr3Z%8O[^r;Elb(pj[0E5U\a#ntnl.N;hbU<O6*En9!:a?V-Q5G9^Vd<_nMZXX9D?QJYi!R2Cfsi2nfULQ,i2D-
%15dA&?d6to^^[DXVs53&_IjQoY+in\Yiu7(0&#;)<0X<qF_:ha'DpH[X(;t,&r$joK4!Nb0GDGe?Z#0FLJU.c/JhWi1^?uf[V9qX
%n)I=6IbI`OrHePI>O6Y?e'15!J2XOae'qX>@4?Aim+J=nSE\3sJ$$09RidU+al('4lf,/e*)9rCG%!(R0'9i%Q!;KS^!YK4rYLeq
%*Em[:WU#BYGEkAVbfI!'0He0H`5PJsb"nM*e$C@(qeNUs_kdXZT2K2/+%O691nqT]^Y;ERX2WSeh]K14%%27N07*a<;u="3.(7^K
%_0?WZf%EjF16]$'",!gn+'gLB.[Jn\CFM]S*)[K>VcoltVG3nb0A2[Pc$t(QU=s7+qe!b4-5t,XKhRW7R,Zo='OL#m1Q#Y25d;>F
%h2bh[l=R1<j&+Skob0uEnfI%XhCVeGWuTf0=$#.l'De.<nNc==pNfW(8\;f1Q?AIcGt\rl9+I3uDT;OL&=MUk+sWPG3RNo?h,_qh
%j+q:FV-AhCR_s:\`Qu^R%VrVupZh.tBF2pP[oSEEi5kUahC[V;p0S&'jlIAtnMWTM<.R'O34Xi*]2BMG_N[8K<=5Tb`2f=j5K1>e
%1\#AG"6\abgtkK&]@M)u5J+bGlMuNB(=//W2r%$5L(*%$a$2;fTnBZFd>Cu;<:#*jruS+tAuF4Nf6b&8M0Adhkc]%G__Np4?DH9T
%j+CfnEj&LBrA,HPk-1@hWSAB8UG<T'2Hqf;;0o^h!B:S>BOaeQ.!26o\h7;cjqTFMnbq5i/(HqlhO3kdB25;X8&On+a^2.m,qjaS
%TiOD3p3:lOc_<B1Woerr*8Og3g[jPC/pBBRI#,&^@'0Xl-sU3S-aZk]pL_Y00#UP\96]<B,T\4P[agsLBE6kJh7-7>mN]\MlO9PR
%<j,lr]$/Sm>l3jMq]@=!r>dL8S*BK)Al$%g7"[@pN0oEZa)k7@.U8T/7NdOl$dS)Qb#H<VTm:1$;F4erKa`@5dkHdU](I>RB5:j&
%eSKl4S7&JP/5rCc,:al$2dlYdZ0,/fo*`jm9L+Y6[8*%jI_]->;/%_SKB0kQAL!UR\_<Z+SQOYsfC?@qEuXOI5&R`/6.Tb\>'794
%q6$`oFkUfBIaj'*^Zou.4m;4?>#k-q>lNp`I1!D#O"L_:JT\-j9#(8OIDB_"SUQYd>Q[ET1R7d+jDh.q1=QgaoKUZu*rk.=rV*#/
%;?!)%LrLd,kslf=7rgFOq_4hZ2"+Y2G1;O8]>I*\1=\6Z'NqfrRE,-+p<)d[D>P%fi#0T69F?i_Y__;\>"hq?3sP0GiDPK<)sUN$
%"0Vou;m+d;FBt*!`]KHkU\2GcO$JpLFikeknLD%Oq#51BoLoe#3VX%BiB-u4623FeL.e=S%0fFHH^2uK--G&)8dq`k0\@'6qZ(t>
%$7'#RTK:hFA(a>V;XIOMBX&jn#[=YBb\('pR"71n6_2LPet39a.=EqOBRNo\3NJh7`XP'Cq4*$\62!Ul<cak5#ph:!=S*pehGke;
%@`._(@SXo[ZNLTH[*P$!PMV5P$h*1<0ps^G?/eTqLm5eio*(l\S93#28[>lJIB-pllT^8%d"W<ko2QQlZeMh3^<CH#%k_pQ;!l^.
%d.</*?CO*6-T\GPGfDnK&''M-YBu47IQ6PWp)t>tF2MWknW6fCEaBh"C\D_:S_)Em>de[fepj0A-`^JiK$E8mXS+`Z527p]o-U`5
%[.Ha!Yug9OZ&Eg@ok?I&9aJ'Zh;1utTJts;B_.dNTA7oXgm]s<(NZ^i3.*s$>*88560ER"Bk&fY:[RTiH5\J>Tc5bQ[%3EB]C=t5
%ek3#g]lp&$T1"k4rbf?Q;=F8jZMq8i8uc$Q%Mma:?A8VAiYT5]8(u6XmXF7GhB/#.2PV609<tDu,\`?h8_;Ri`H^`(\f0I2lODj+
%6Y.:LM8sZ9^0U#3R&obIjl2b524nW$D3r`!kXp9'Y?^/n3ooPldK[JB*N!0bP1jb`/^a"K#)W<VYS#`(JPe>-/RB`1=tBB(Hb(OE
%P\.A4aNYX<4M/4$'N3?%pNq%LgN\Nm^1JJH)hVfcS6fD<AV7U[)K\@Ab!&%\N7,+h/"URr>Lsh%A7M!An6=RuOlthJ=jF_"2g8<*
%6piZl60b`SfS*,EDs@5C^-<Ji?5=4M8>%13EF#Z)TH!JK(bTIDqH5N&d%4^9M'[:)S31,)%`_Ku(YMc1[(:[2&89#)jl.e>C5+OP
%>XNTb9C#%'D_=4l1`m5Xak"nc8u*QC+!kt'jYr\p-ltH`W6c!3>s?1?SaoB7]QFomkO&/K-Kj]IR[WH,pZ:o1L?pa":*0ls!HWXb
%b-+dDZI)@J(P0Zud8hs,<_^$tBj8g?-FX[bm;E3312EbI(Rq5pmoWteVn.rJc-+8cL/J@@:qPJQ-(*+=>7D]Xmar79lQE49PHQ,F
%Yo*,=P*=s^^eoEk\@J.&LN!(B%Ds8/W>-lah+4ArI>tso\$MRTVp29dTdZO:b<1^6PT+0U3;?YaDf9:>Pk7_!bA-6UCGT":3IW5g
%3[9CQ:6N3E%?sI+3(%p-%m^\CSR\Y!7PNYj9Ks-#e()9p`bsI&3Di>^K[[@%_m`=E\?_K4V2I/$FQrWGEKWqcVJH"i>Q!ksUCQ**
%[@>$s5j0f#gh*/=n7>M0:7PkD03:rKjpPCSe_3[hCoXon!tMf43Bs]h`uQ)o\+X7i,e&)e9nt3R!]r<CKa8e/%"$C.nBPV89h]8j
%)9$j%0O.-_%YgbCa\<o0KaF4cf6tEi<$!=K,__#11:NOF](3MEPErNKEL$<,o6E-]"s-oQ$R`RKj!;=NaE80J-AGp#S]5&*Gf&.D
%;0@uT9fsH;`&F1E?L0ZkX;sbDdUqH=#q\>YMNN-<_FE^#2&ffgKi/A'rgF/VU=h99JfNQf8_N/\'kGfR86:-U-5QralAa#<a3#4]
%$%Ap[:"&!BYBB)DHsnrI=Y#oHaC;ka%o^hLU2X'<K<j/ge&gCil`BVS;-1<a)dWX*aXE=XWuXp@cgWb13c2jAC&M'=DsomMl)4($
%?s_qu2Nu^;P!r+u8bYX7]ur:u280"E>>;g?/+$lJF4j8%)V9no`aRM6TU/gI*\5q*#es$&f,?/9m9r#s_RYDt3^`/carZ3*FrNao
%AhL:]ClJof*'P(dCqRK)NV`W7?.'WmM2S5$^ft\:EF-.j))&,5->Bro?,1?t"hFreB(@h3CM#MLje,8shk%"eh.QiDi_nU<<#T>"
%>AmSQb;8Z=13@KVlS-+hI]@qg*00CsC7r>b!Bhlm>'Gi$o0LOqeP&*G2tp3I..V`lqB38;P]'&fM>X<FNIReAW7(apNq^^9bCX8B
%6!_7Ygc7rKpj&t_PY7&R$$Fq9QpK:uah+NW*'\:5#J9Pm<%VtRaD8WANW\#Wf77bY71"o[PGf9r<0P&%Hql]>?aiFG]8%*;P+oA&
%AgGRm8GZS:]'X(5a<hYAYA*4?).4(M*KM-Ph-c#p2WE$O\"+El.Y>PuV(jtD:=)P))k*an1Cf>8mN!#R(8KI#h,#&S=L&/pfdhJn
%g<87,37Y!+$k(EMG/i11nh`U_aA+mAjrbgC.!<,SS0/oZJ<sFqkkc``0gQ,X)c6q32/\p26E'HaA;fS-r^s:Q?16&U7""]E[Qc*s
%(c6Y]RM<G]^C&g_6gu.D]ZV6r39SM$bV(dB76_n^:ZH4`9U@$G`lQ_Uel_]X(1&@Vf"p=2KsZ])&m@3+D<uM&PB+5MX?Fr]'cp!i
%1A$rE*n"qeR?u&@1(lB2-KYa,e57HB<Ts`m$W+ImNpc^:6Wb^(;Tgtrc-h>'3CcQRN>Vn&**KRH-]R\e)04qo4p_k[6tlAjkLSr4
%XsOLBLRi7/V-8C/TVf6dLRI@VorR>^cUTo5=oW4Nbo0@%YW[NX,5<tYfD&A(U7Q*`5/f>>f=,="gKZps5!46Xgi<38i@>7Z0O"';
%4>bQ04VHH\52kaTk^I@?4RndQLgR:fbuA1pI[`M`HqV&KP^KJXc9(9SGlFsT6KbclDp.!T_A$0i*)!E3c,at748J4=6Kem\e]V9r
%]N/-1Z8Erf$8(@MWLg8qB(j4s(HG:s,BJe_b<*<p:0c2;gTuG*'a%jMQ0m.UgG[Tt[0G/*h=[Q7qZIB;*@UF=p"R4o]R1oD+U@9c
%"tuU)>\nW2@FPQX:'B.>#l4"5*5NJoBRe@&_o:')jYgBd,g!qEUMAT6^Fo#KGh\7gp?pCb8[\[`KM'@mpt]]UD!>A!Xtj`$4p+gQ
%:kcE/RiOuIq_,TA`Z,1(LcgRuM9[0WCul"\PD_e9HOs,lUZ7KL(NTkHDDS`daMDc"`ThX])aH@Bn6gR@eW]XnlV\JYltd?a+(b5S
%2Vd[OPY<kQduM-/k2(r'2HMG@Z^]%FiaJclJ!8(=4"!Yu_J`W:Cgj^Ypj1IS8.I&WYCT[5hS0(9IX8;&i#rF@NhR:[^)htO:cYXl
%NhC2rh!g\Y<OVhc*upl=2Ce*[KVUZu7+*WSh9=YESQ:"/nR4;:c#cE'T$!5L2?\N3/[!tK]UV&SSt3m;HJGlgXeCbmQ4diNq+D.<
%m2rK;<"$t,AVn0^8uGRi(N&OL:9+8LY&3^!kl#jP%Ga"6R>pt<N=0U`k\>m!Le0\5B++c=;U%o&],Eou-23SV-n38R(B_F-%X3s?
%1NjUTIOJlJd:P^5CRMSTJ)Ocg],Fl%5]p?u!45ekJ@R_eAtMEh#0p5.DjDG+nZ0"cnjXjoDh9i'?\mND\p>jVYnotRoN.Y::7LAb
%IqDn!FX5Yhg?6CV@>SPNM3P@B8<VMCSoVO^]1.B]%+/OnQ>-nuN7&6!]6!3Zo9PhYne9[V=1`*o0]oe\X5MJI[]%9%D"o_/aG+S-
%LP`nf\KY^tFa.._=5)f*c%<b8#j6E-FD<HON)QP<hi<SIJ]P9*D<W"ikN/^tWkHmSA1MsY6_jGeq'+1Fkk"SdGfW!10&=A5li-Z`
%nhK?qY_L&DTS(qW&g5*I7iPFRPh'cB?I+AupDnt_Q3kmfd=L:Y8%lReSr9=j;pA8tO!gbOn5s.uHYT6J3@ru6[%M[KWpn.BrdiV7
%)Mi>">V)fIgWd@+IX)r.S?8C6'Bb''"s1BL]+7%".TcIa#=]PtXnD>c?#CB?OE2lQ\p?.sC\UA-Gqkq>$7t)1COi^$b?/"B*s=qs
%Ed>Z.JD?(ZdOT9k\Ibenjr6+&e\J8X%l3*D<cd"WUf["6q&$kO*"JOBF$Sm!T+,kpF(Ast&<1p`>ObA`GIs>F)ii%:]^F0?XgZV^
%3BI:LD_7)Ghs@JjR[g:G*enQA&)FkpH)3,pq/JE<1/T;tI13eehJM;_*c#B=]!jGn8R5*Pp$BS6HapY=j^&p<1W<"<!SE^5L2_'S
%f_'.I3-Dbf_'%=_8)Je$0(msZ:ceU<EZ;-XUaTXG$84]>oog88Lk;9@1:EHrgY5E2Er+ES[Ku[Gn>C'tkAI<1Yc%YRCF=tap3q3$
%,8"dSpJ/<]Sp=:>QP1_cRDX8#flOdef%;m5nUACrTn\RTpd=.&>r/,)1UkonncVS0Qi9SXI"B>-7(70AMFd?EN8m@SfDG+-@9>Vg
%/lpZ^@d5Ks0jbT^6@t]ijA.t9CM*`+dR%_Oj4t)R;i-9U2ANEfmk&G!q[%?B2)2^6@eD$r=kGB>2q(.GE'Q&](?-97eU$$7oq*Xt
%3MROLq,W>Y^e:Sbcd#PcJ)43aG?[T)n2B1[6[SEJ)nU*gV1R:B$o#YM#!DI^*5AQi7]sb?ftf'W4g.95)ojV80$bR;'\Ga\PHpKl
%*4^Jj:l(TWK0Ajg@&:9fW'3E"kcSZ<N9m*odX.%-6$fYtc"r+MQS*e5Dr-ZEPAP`:C!IL0SA!dB!u7#PT_,T;nDO`?kusbknXris
%]0pXgnF4*&Pk?-<qgldr]%67=BCN#0G-i=-`M)U6Wj\[_`Q4'Xcsu"$^(mePG4GF*.4P+/,JC_&<!C%SA0Q)!^:YIGmDcHJrQ5iZ
%T_GB:Y1(qG7gpY4iGjh?//,"`_2tAb@oqS>mCji@jJ3.1ps*Z&F1W6-$`352_5GGe$^&kFm?VTrBUOMp3BTZo+j]A,9$pHWZV"Z'
%O]oig3gm;1JZ^6FcjY<(,^B;:$Zrm=9lq&Vi&f`pp(*/Wg'E:/-.Or7_CF3h_Qs2?,4"3:M`1#1J<RI/L*4cq:-qj%Z=gsVcVgWf
%e(<(=^##5aGccma*Y[>9HP:>FntYSmKXVG/%pTAA1\?cFnb=:s)V0Kg_j(PB3^VA:^(I>]p78b*Etq2l+Xu)Zoq!PjHl&]k9R/'c
%Ou?Csrk6i-'0daG`@A$)"E:V98t:*H_t;[)>K(cY?:W;F4naWA=jE6JfE4N&rdHb8SF90u+E)Vi3=;Zo[J'/H7/&?Nlls^D$B@B$
%B;.e5lt29Q&\H2=:KG>__oKj2Ena),O,&Y?FZ):]CZre&r@5P7b(e[]qIFC;pB;+>q(6`Z0qZS'KXV2qk#bKTlGQhB"j]Lo(r72q
%2Zk"gQEP(jb!*5a)(820MY$.[-=Q6NL:E<daT`8"QRVa)4c!)sQJ4+Zo8pTMmC,!aQ_^=!b#PY1*$pPAYO8\-Ujd7.ML47aG,8;X
%<:*I2ipLQ-h,V?q@j]L;/B=5rk.qq]B=%+h0RJ7JW-lh/N$;cK"@`\f^dD013%:=eM>UNsBN&:*Ge,%>c'1^+:C/6Y>sMJR9e[I;
%VbT+K]iHWLo&AWVi&dpO<9(-eJ0EQ3I.L$[9HP<n/i`1BPL\#Ub8-F#n^t__Gbk6g/1G@QAPi64Y@**#]u51h^[e>aicTV[\m@oL
%*iQmQJRi\bG-s70SDNhRe#7n5]6ka/Q*0Fh@<6:-hdkJ[Wu22,<o:3Pfs8S]NimEPPc^N.SMm]]Nmm+Z<h(h=BeogLj<;M6Q0p!1
%lFk0Wa>bEU;5ocf)bP,C1tdc-L#)(LlOM9RQlP;h7$6NMdO>"j0P]MUNYMnm,+Z,n7`96Z>bXk:"\!1lOXm+(753+<eH_,+o/-9A
%[)jf/p2,'.]`c+DE<J86=TT=^2B)U1ES=EeE5;oloU2oQQQ/]5IH=%A,,V!9^h3885sj9fm^Wt0KWjIZAg+kA>VC#uh&IaT`nEVb
%\(npTOOQ=?dX0WU$"USq)=Xnoji#:"*j3-+D\*S>B1uqG?n87$Z/SdX"[h)<bf`mB@s4?0a6U_Kkaol?N:P<]ioKOH;Du)PrO\&%
%6c3"b;e@19Gn^TCH"[..9EG$$)Z'qjJYVQ=E:r4--?<VGPM29?ENqe#ENPf\U^*semBF+,"VGhfU9@;EgS**=.^%[I8fOs<l%eCq
%^r:1d6PTNP%;NZ0L3f/#`%-uBIOfOui<DiqfmOt^4A6YaS($-"XpYE)$p&HO6ka'04]<h@oWakWFFB(m`*S-Qh0(R8ethpG7FJ28
%n`FIB1<&FC[7"ZJJ!tcq4t%fnpZVd09c=PhDZ&`R[XYT,c8MgY8hc`Lf('i4i@MZ^+CTj=rP&p9E:;*DZ]2c<VfjZVk#46\'K/8R
%_J:8eKgDTK]a%8;/GBq)Mp1"O=hhgE)TK4@3W8/OU<k;!EKpKAHb:<E]DjKXGH?1,G@L%O0B8mMNSV=pogI?.cWn]J[>?+h9kU*:
%V'L9u^G@te46Ws3Bt)W7:'o5&du6@.Z%\rjVd"'2]Bs@EqccQqff+%uHKOASD`e!umJuV.-X:?%.jtBVWFAY.7+%O:f@t2Acu6@R
%n>+V_b+9C7ebp"RDVA[hq^Od82X*Ds12dlie[g+Co<=Ibp0oEGF&.[<`c:E-IhF:h!6r5e^ZlarW]o`&O`+&:,,PUZh\t%*Dc$?H
%=gH]M+Yc;_cfSJC/RNLJ5E>KHg@pOoI2<!#)#b"54\ru1G=T@g0SHXanPoa4Bc*Sl3^29Mm"fsO(E]aSTOXmN%SXu'ls`?DWio!l
%e;M%A;:PI`DceI^HGK=8C7`8?gqWsZGLCS&FPN8Ig$0)%3.b"OCZ>FQ#JO'u'd&d#^*BPapd**bI^Adb<e$Se=ce`GC?`$,rTt74
%(K[.akAK.bb;r/\5;<MVUEhl"FL+-F66@oHS5soJ"<(^c3j\g"k0/f\1!NX9q-gO,.JDqsH2BiGg4sO0GI6!>/RoO*O,(OaV=(O.
%cd"THV^#GLd%VYT^NKFW@s.;ZeX%]Y];=L@=8]bcT=k27^<TK5O(]Lk4-`UdFLPWTIEk7DCEYs+X&&%>Q9U'I[s%TV=n,?b3a0.&
%!V/-a:$;;h4!XacI4hkPn]XJRP[S+[J1MLf^>UK,UHG&.E5[<Zflrp2COY]CZO[@+T"f%Jg0D!.LX+k`p[30k2!%fh5Kb=E:bA?Q
%LJ;c2JB)$n;!$H>5!0Wsf<Lpur;HDCU\O<#asWIN`Gp-)CbRlM\_`E-KT$a$N3E#'VoIN8WTM;)MUH<\R)acifMQWj/Mora;Q&/`
%IE&t,KVdV<XmHeQ%X],17)=<9Kqa&R-R`;D+39l9DWaM9,]1"H4@^Ih$j&O0aG%$)=":`97;1S*NS@]pSWNJ^dLrlq#kpSsTB,p)
%9,0\;<I_t3H2RC3F=1m!&H3^:IW4c1-]H[D$e"/d!mCDmn!(YTT%!lScpAUY78cmr3TFeM5!IqKgAGlsF^"1aWm40q'`rCLq6Y-E
%dCK.9g=udDI_S*'1/AFD:]?jND)K"UZ=h1_`MNQ711**MjODhehqu23r6*gNH$nWt4uAb^U\d97PFGDo]=aX!rUIoMIXgQAmJ!fe
%/GT1[K*BItlab6]+6.jD)o!$STC'hk@Bkl#$OQf/Do%4*1\e:almCcC>qr)8"r>SGQOe!Xpoq%j?Sg$ir<)s9UT[8>M!a-P'2c8Y
%>Md0!AbqiLcI<n_#VKNFRgJ-IV$<PY>PPUVM8tlp@L^&Q@]>(Qh5/_5'gA`?A+`Nq3@Luh<uS*1Nh/`Fn0'")YLum_s+Xl6n7s<@
%]_rVa%n68'l:IgLlI/fh)\^62o_,d[2H>+VqLdV0?6`Au8.4+qoI(;OF$$F;E]nH3.(g"TZC0dR!r*6hA4hb!GBdY..=F0R*sl_9
%:JB7O"i?+H^S.IteKZBRGdehZ?cqP]r3>$]m)Ku*B\$<0Ec\9lr/p&dUV.\VB`ciT5=B01iC2!8iTfa2!4mVbliVD4$]+-<'*5@!
%^^jhQ.u0/cIr3nn(H.@C-Vs6TrqUfSS<tXKQJXFHqr=WfS%Q9p:RkL0QBRa0J4:aj7dFuRiUlj0<bAmh]t0]GB@"]ONQPH&mA?:n
%ER_MO'BD)gfnG%#o'9MSh5uaDS([`R`X^1:k\tGbS2na6\Eq#KR9]HQWJdPB++LB,*ZY$ogVZ4aYgb\cY`nu"gq_"cpY/QhL%3B(
%/XrO^iq:2m=QAd1q-meq8$W$/hFXRiXc3sK2h;moo-KocQtLW-X8[frhR:pE94'/o;J,%n$Hg6=!VDrK-LrC2,Flt+[G?MkO5Q_L
%P*O%IgoK]#dF%Y5@4dB96-T7^57iu&rkNijm9cgY^%hQj.h.lTTCVl'%Ycsk"cHc^eV=<XkkP#!^UdjV'!hu264lk:K+I`/O:?@B
%kmqqPBnbT":u/pZ,08jEAcKX<_hLC[Q9P!q.cHP?M1ZKqDk6)?"Y1P?Y!9GF](:\4q6#5?0Ga>:cPD]C[EHT`J)ifbifBBL+ocl%
%\`K13Ve:I(^oMoA0O47NUC659QT#HQCb>/?kOMR/Do@]9^R<XGr#6IO7t7UF7PaeKQERfJHi)a>^N6qcpW#@9fUpr$:&@k5JL>qZ
%\\I@ST"`2BHV;&!s8GSCi'30Z')l-Ul,eFf'+Xh6QeB+QXH[DpoD;%Hs$F<2n6_2^(Aue?[>b.ZBa[uprV+n[h#DWM](\E*oJM-_
%niZBE>k]$4[E<[<hrki2rmt^qcemThH1Q5UU:^E6o$s4Z\>JUEq"K]AKg7;:['6&//2%,Ff,"hRe;gmI)([p(84UYOJgqkMTpl5a
%A`I173*lnD`&9[N$em2Nc%UEBk%u9l36s6g*tPc5rJ1@&6LK<kADs>)Ub/+Gc8l=L_oop6N<B^H-X$lc:O2uh6E(E"f4+X"6Lt6s
%BErho$b]JK+1iDn>d2"1^:tLeeohs_:pY6YLud5q5ZVf^JA/+>"%Km^#])]FC4Z0UbAAAMHuK_Nb=gMRmcnpFE-d#2"UZneOha[6
%Zk@U;HOGDaBsAbYf(8:EMfOW3$%^BIWY$(!-gHTt-Te`TQ*jS>1&SQ9=Hm9M08mFAU:k6s5J8Xd+85VjWO0=D\>LYtMau_VIIV]%
%YdJ]jh:Q#G?b\^//8bUY(2HEqNQ'N4_.^)4gl3r^@jB4g0.gNQkE`u[Q2;m'\Caqn_aJ``o6>P-.4Ng<9=p1i`mW8n<bNr.U[b1M
%L#M^QA*`f)WUeJJ9.s)eVb=^,\\7@5'Xd%ff?2ceFLg43f(_RJH/hl<>E1WU60Mp+QX(Xb+'lX)Q4(lO>KaKg];=V`eC9fM<W-gG
%PJ2o,O!:9uQ0#h^A0k,Z^L#;?+/19jZe54Ko!#0sm%<>h/#W-r4"FCW?uP.He2UX2Z((5T41G6s145)A@?BEip6Io[XdRd,B!RES
%er)6kB!S]-i">1o@%ick%c6(ZbJD=e0,JFN,o.II%i7P_a_EiCSdM*EGV6HGg3FZ+6b@:$60L0%=p\IVUom&1?2n?3\R!!g6>nGC
%?X6:=Kib%mGC`cfOFCEig!a8/pXI1IlIg3e\9cW+5-C2T`V\3;k/6$?YkrMY%Ya0Y@E%FoKk#H;V/Z96WeHMcd]N#hd<.ZY>So#G
%?]L(YGdq_<TprIJ;]rWJAG;/:2C%%i[EKcJ>WXAF!c'_*Vs7I]=j=%U9<VEZKhgSa&m<ou8,,P!&P3tW>t#6-[;P&'^K2Z+pK'kI
%fB@K)1905(d;\[E.*@iKX_>Ap_eu3(Qbf`dASuQD>!0IMMma*VXn@AMF`T]dIU62:.KOr\2;3C^5M6mRlaIZ8O6aTAqYJt2@n@"3
%':Y/2&U9RaoO:i^(nLr-bBj"W.\3QMe:EYAV>VP)`fT<Bd(6lT%lNGHU3%YfFL`T^jA]4Km%%H495i(.U26rbQ0iIdV&Z?RDj9S<
%kcRg_k.1&K$`p;#FM=M*/bH-Ao]HVTPU@!k#BMW&^?"R6[W$@55r[No0GW0I2YjY%E"cR)Y#cEp>4lKITFKDiJKB8G*U;c%?dO!q
%W?qLPr?S2*,BZS->?g3*FZ$_I%/G10AWuG*<]JDiYu3+)@W1DR11.`H(cOesgbQuq*tPRNjgOa&/,elc+&pV>*1^=PRsTKFj"QbJ
%N8*aPZ-b[m^R0S9\7-r<_c&A%I+^=%16#$"\[i'0DeuRnX>Y"B2E%iKISaB5],N]Z7W5&)fYV,gZ,OU]2l<EpZa"UuAIpAf+*+X/
%e\Ojo=HosHV-lRGN2L!NS#;8:rasQf%rK&2DP+B^4#a.@mF=gBlaYRqD`qAY*cCW\FEMqIpTVEGPqG49+!7ZRDa3&!+U`,\R_@gR
%80ml>Z[LVYfK&3X:3VTK[Id5/=#At'-bJ^7"BS[aq;@E#?>71J')oq,f7[>?CF1g%RsO(oIT9%RX:uVqQ-IpIUj4k5-P(Q%5P^]%
%%4$<!19OlZU;s<L.\Yq3;u,DA+B9rZ?D\OB8!Pnq3?Ft,:86/._c7qDmQDZR1[E6=btQPf%:q0[rJ=3h[=+6E\U#-(A*XR[HX)!4
%aHfSUK3eLHBPU\1(lu<+Tk!G$pL1%K[/1UKp%Ka'0X[62mD&'p2_s-7mF>6cJ$!\"]q5Ra?M6&?b,P=UF16W1)C`]3gXSRa+CAeE
%*&K:KgP<V/]><IWmGm:OKOlJYcfQnt2#9/AXX=9JD!(:=M:Gkko'YTf,l96U[[YCg;;n7K*5*V-ro5]92i\P&F*E#.#EFl"S+l02
%kYX6]P(&X[PIlOrg<!R]FlcS:'Eb91485N!Vr?\*bl:KYSJg,K_V'b`>_6k=C1.l=&$DNsk<%r:5JK&+GL"s`(C0d/lLIAmGQ#1=
%Iln&1$N>bVE5<shC_fc)JgZ9KYZA>;/RJ]7P';[#(Us58fgWXeHbIoN\)b`-`qIekD)q3.'h[WY"O0r@?G!_Y23o#\qR,_72;<J&
%\NU<)A(UD*U[h.SH'.![+"g/E%sNnNlRt/3[i:=^c>@!,UO1b@KQ;9WD6S>1W7E'Z.Z^Fnqp8BsJ"KnZhVR.VHJ8u0LFB=C5/`I?
%8e2_Nq:n?Hd,L*iOTce%r3s)S-==H2MI'OuT([dlIk"ea_TsBBJ+T8raKNpNGJeH@EPHU&gkfBE'lW-1q;Q)foW/`g5<UT(<\@0@
%rRK>Aff1$Z69"$(5e\am&,1ts[T7mWS<]q"V1!V*WbMd%?9R,U9ibJtfQg3IHRm]CY-(:&f32F]X,=Jq5KPQCeR&PeImZBb`#>Q>
%mE7ub[GPn;pRt^\lsf"Xff@?OA,=&;bPNsgqf)G/=5Vn]24%O4f?88f^CFRr`R\Y`b\5gkjD'&#]"Qp[Ds#gA7jWN/=UCNIS]lt=
%h^Pa%>MV.X*Hhtee>mJ^[(Y-kUm"(42#m4'l\>?Cd*8'M]WJqSm2$T8IPk<ra.j03rMNZ03s[Fg9^g-m<+P;urcML.Ue#ReAZ$e[
%b];6aG)j/Dh"ES'f!3NYUN4'-Yjm19I(AITWqF%pMOed_gHY'`kB30[(Ou&3%V8Ej?i7<X1hmJh]iI!FE<fBX`o8pp[C'>+STn%T
%#p3`tCNFrE]d-5Y+M[hEp;rn]^U`UH\""0RhqllqROe@-T-0EmaWY#o6TG>fd&cE70)!c.%A,'I"Jl9%V'd[?iS8d?"+A&,`=r%0
%qR9i21W".-n_8nF93tJ+K3ihh'RX(DC'$d:miY7A(XL<H8Z2<nl)eEBUu$Cf?#gu2^]#7g*PeQhJGnVo-/XjRmQpDDIXrTeJ,,/"
%WDQ#<QnQ<%NXo&E+8FiQC.&N[P^O.7lVYo;W_\aVkXn4(Y!nbYqdcj!\YL,D@<.Um6X42i#Etleee+iL%;'ROXI2pa@2p4b@,)1;
%Xg4m^O"UTk74#)jW[dV=ThF%2+\-N#VMX\L.3kj-$MPF&b_PXH<fe)qV4/5kO6Sc&:K7Ee16'G81/e?s7Wh/N6smO"BirQ7RZ_)]
%9lYl.T8kS/Mdg9tQ!m2j9LL3Q^i3ffVO[ME57ro5<@l1LW5:CA(JtlojdAqT7!4JVZRUpVOAl?30NFcO)=&2<N\<@^FSK-qO1pE$
%A(srqYt/Af2(`RC>RZ>FA(FabAj?A1YQEi>UH6+-%ja50#q@aHSHL_QOCB?hOeU40Y38o'=c;PLQNa&t;hBI+>,nQA!A]da,(Ll*
%6,Q@s>0+94CnMC0(]]Po`!fL:1*n84Wid`OK^[J*Lri=5$d^">Asb&:%=D_K@OP+(OK]^&M?+5X%%&Z&E<6EWQXGp-X!pJK<Pq!W
%-&PKm7nac',iRrD,>*BPC/i+F66]+TUP?e,>k%hPL+$V,LO$_WAP#6m@9!COkm"Qr(r!%G,DN?0;_i(.Z@i<ZZ!Yro&$Z-D=C'AV
%`W9!BP>'B"KZqSM(=`gr[V?c@Sbi[oFF'ihPZ3d)3Da!ja?.bS,UqB;%\.D:"]JmMVLc)4^aQK\rNW;q!d@*B8I&_(,VmHl$o&'Q
%#,\9/3^,B]kQTIT>m'A,TGrD5!5tObKL2E30Ot%*0^t3G_D?-k1^EV+9W/8rn\HUk5%5#sQ@[]io3@;j&gN2RPmrpF#T6@c'Gut3
%^a-Fhpd"8Ag][RD"[PSF5".bDV1C'l#WMh]<:SgFj9l'oUe<rs:g\_YNWj!a$<788BIY4OKPj*Q:gK/q-tjfj5^+A%!K2N/6nE=c
%"&4L&-pU4\Yg6>E`)WL>9FeGKWY2NKBK7/."uI^u"m@;P,ddj9@Gpbql:.W^IV%Fd%67AiR6k..+E4oH]S.J.""YnJPDkq83EqbK
%@Ra>$Ot,MojUPBld88G^#a0`L0_mq#%7At*H_r+qe70ITK52JdR7rj]lCE,^f8_r$#-A7]!!O_ZpuT'iif!9SK-'"DNkGX<Pjh1;
%2[i.H4u3]V']>cCOQf"bZn51KhC#61]F9#iR5%R)%@eAp[fS>e6m3cV6(&u3Z\'8#"u-MeeT;H4b,BAP7t=J?@ejOK6/<eu#:59N
%,br3'/g1%i`$.H'i%bTr'=&J\On$Q/oqmb4C7pO-VG:-6H?p,A"N/%mRO;,)#KR5(#7[^8B:Gi"%>G'X[b)UcZACBtBQ[aD15ndP
%V$i6?q?7ua.735`E](4Ha?1jdRRU:;+<5.;TJRq$70GArLB*"U8VPOFBdB6)Lcn[M]P%[H5U5bPf2-[a&2OOW$p4qh`4"#h)5:'n
%+.NP8W50apKS/8\'g`1K$.sj/"6+GX=q`uQML[te9bBXFDo)L,F"pX]'/P"Sl>fjP#`q?#i(28TR0p>*6O#F/;kY"fp(JTSo7:oe
%P@RkI<0_bsThl$l:^F]SUa8R>Ag%nJU@&,1U.R2+Og,3*%a_2di#dt##HE,Y7kTMrF9<27\sK+b2$Iu"S=qX5W.(s'(^Q,r7Ri;&
%`eY4^+NTKSs&33%0n`\-8F?f_TNDW`+Q*<RY\7cZ^'rLT@*'"5-Mf_8<E*CQ1?r0W.\I%!H)@5a0nc.Kd*r*l5k<:MJ]rYBU`kK>
%lH.+k@%kpd!2V!8H\@7g)MbkU@t\_&Y`(+uBTOg3"\2T.5fE`&Q'&X-:*$tajC/,RW7oVNR%Q8^'fnUO"Z.VeB,WEj]nHq<=>-*Z
%\hASS)+Ud%<Pk`PA;I+g!EeHH"\%*22%+;R@?m$QA5*5e$PcQj*A#SB'M9:T#6t+/T^RLU;^7#B#64o<liB(G8-H/bT[>>3%8`TT
%#G<"!%:;loHqgI])X,^lKsZ_J.O6]uB@O[/qUf>?%#3Q5#os2aWhLuiMOTRsS"_WqM1K/YdVg+\:Rh]Vg!XejCBYDsetBUc66Jb7
%Jd)mDY7f"skTgH*#[.AXMbp&U6UWG<P_mEpL2%G4d%j/1XqlZPNcpnE*[Si='g<I<:;.<1O[(FuJ:]Q(iY%'c'gWs@>_$?a0Xehg
%2$?ag7%L%-#6*\B$Gp=M?nokZLtE^'>o3_g";k'G"@Ue@l9m<qSd#G-`^-XK;.VIk#Z/U)TjB$m;ZK>tr`^(NNr5QCNsVBYe7>M:
%Om+h\%N%";4P']t@0"3M.`a_CO@aht9.2q7ZCq2Z$,jpniZN(V=qo0-J8b\tK3B8t*72m%RlU;+$l'-U/[>qcTn)n>[g4>b4:uIE
%U+/[.Jq8kmb*K)b$n29f\O:>E9U8HhZ'UIT'Y?W"MAhf!=@202BUVnZ`rO_]4;&.t$[C?fGL-na-H^ng$N^[4&r9ptIH[>UA/u[V
%NOn4bk_SIW>Z!AH$3DD;DaAoOil1`o!8[sVO@dto'lbA-XpRWGRjt2Xit@'*cn"_lQB2FTZ5!eg;5)+m[6Z([7!KiL^SheJJ.DW7
%W>M0TUZ]Y9LjY"NSNI7^Td-])%Y?R8>>V=,+;=9@+PDiedWRC'Pm&q!Me+T>?la@J\MFD'!E91'A%*S_-D2Am/YQT!`g21p!UHNs
%-*3"a#)\l5A'"q"LS.?BA>%P4r>LJ@OqZaj+tYMo&6'hp^eYl;*>>?%>)]64dC;ZiBTU[$W:eO7,3_BL:NfT%#*DdO5h!;Z'r4A;
%5mek"(mH538mQ\r(tN-ba2.e+$#68\?kt^^oU.G*QrY![<>WaoirdKb":TBp9N4L&T8"Va*9@I99ZNihMh.>>6rH9XUk@tb5^"D*
%,N0qZ=fa,^^a>fqYM'#5L0Q1.aCF93J:&iD'h!SA%lTJ*YCb0-7bfSbjPln,X=9NZ^u3.=!X(hBoE(J#%''E/$`68V-=bm51a^9_
%W)VaZEe@5qS&1`s:o9TqJKP60O$YhLpX[]"!Wp2f/;p/.-dY7O`2Y*a`ip#-(oHL,e?sl>=i?LhCXAWJ%_r6*)&[&eapNNjg]\Qs
%),ijEj8]3l8H#6Z'UY_=$AFZtD8q+\0ip`n)ptYe*]UlPY&Zg&71tPKhB0:L(ft2iL>IYNc%Bnq<%uV5DCSfmM?cj]-^94*238-[
%dtF-?V?a`LdG$$?@:1r07^59TFS$YgS2s?!@iE,_kthe1O$VTijF<q9Ko!SNCaYoY;=ME(&>+IsDF(jc0gLOi'aXqn7M&_3+H3@%
%7<$LG&bCU?-3k*V9iW$Qh#mpoR&"/JJ2#8?D_OknLt56nbPAqRckuR$(u+?6%qB(.*(!"]XX3OPJ5R'Z;Z_Q>2i3:+)lB8F3#f1I
%S/<'L./<MQnq!Te&5tSgO?c3:"ocn`g/&>C8C0RT+l1XYJM7B+7$tp>G@AF1.UiDu9SQk8N=OS_XM<_`+jo1I@t7B)$:WU?h@'h+
%g>kdDS<@G#b_*2+9e1TO"Af54?oAYN*mb'h@`4_.UHttT@AL\W1!i]$2[Hf=0G!rH1?&mt(0qc$%T5]J!sE?!/]d^[&o]I*@r@BG
%#;"$m`"Jq_a?<BtS'*!T!"Xbs_l=W<$#C`A3+YG'fKjV05mOn2RP=CIKWS9U;msn+0G6A<Qlfq/6<YB=.iL<V)245"BRQ;Q`5JmW
%AJ)`Zo3i8--U/$g]pK;Xd6So4:Bu6@Mf^U>LBM*SXs9i3'4<p:)0lXs?0G1ME?]<4<$Gpf;h@1gfdVSgT`,LS.6%>/%RLGG.@Pd#
%-lk9Bi#="Idmee^/04t!Lh$t4;?Z7$LICl('mX8AE`2_sJXGAkqCpm)&Fq,^9^tjKc$*_lE'Y4Z=tuc\`Wisd>SRP*D&>7A50X!U
%a@eQ^*>84>:_2>!?'GB1JJ91+\ZT0$BokN=`Ag:Ie.hZm^8VUWY?f0'*n`Ln69#-[X"@3bTW+="XTPVd72$04%KX3DDC[E!-DT<_
%BmZ@,:<:4UVj41cQ(Xdh^q=3/#mL9J>nNJ4K#i\fZ!gt2;en'[nA*/El;hL9""XiuJJCl.bn71pJ/m]>aG,Xc!4-_XOf;m`%<NX?
%Ym9,4\.qOHSPtsp<uVS-@>'71;jnU&!,bV!"4<*bB*m$F&FfiE;7`6jGo)AE#aJ8B!YhO\F/l6SaN'6k6SMo8R0%5>J\Vd-$S34Y
%m*Ilq]7L>kW_,Q$5YM^iFLO,$^**q&k'F+.007138\%C9pRqKjk8:'CWrf)s(_)$4X-!#[9S,%X,)6=+;^Si.:rsi0gI0YIl=u^L
%=%LlB3[()R[Dm'Q^_fe4UPfUg%tY54VBLaB/gD-CV@&CfBGM(:g38`9ZkCYPUL^!KNWH(:O_M\&/\#.i#j0#>B)27iZ,6_[,d*0Q
%(4(V==DAss&5CP/'7\n)>/MU/3_nUcKB&_b8/cPa'M0KJ66n'H=HhkX"pG6,&6Z(NU$Y1kNZfu$p@1Fm@!=G/kdt?q9t",^^`?ka
%d\F1Z65!mt,1hmY/&`:6'W5??Y+T!sOKa>4W%+\#61H^1&^kFX,&rL^Gc",5O9-Xr.<#Q^<D1[n[T-uIcdl&8,:XZf5Y^k]8SW6"
%&HO41$%d0I.0GS?WepYW)^#HE-:/Nm.r1"kTE]$(&>YCTW>dlFVK;jeR=H+u#=UL!NmoeR_5Irm"]7\l".%i_PRW40";$6C,[KR+
%G\*:D#:[?>\U@-hb00p<2pDZIEE/+!,9+i5Qp>6tMm/R["?aTodFobb!,mf]@)c`nFI\3/?QmZ^ZUG$%Wfmc^1=6>t='ZL0(T1(0
%65.j1<h][@$Uk&HYnbEaBX/Hsa!b1/3>0Jk,D^>T+U8P]mLUNBS2!dT0D$E/-5<D=.n_X4.`L=T?'-ZKM)JI[iDbAX_/rr;jd<8/
%$u<fafb,T3;ABS8Td3fE*N%O`L+6jEi&u%+EU>mj$j\D9e'NVHLs*"-eI!oDcopU4+;>V85RTk#09Ud;.L;Pq0rAON]?5:"VIe+`
%S'K*-e5<XT$G$N+KhsHLZmq"%%BW6t$Rc;mGSlkLag+Hm,Lk3sQk3*Pd2YJ=j:'E[M?3WKBdLuG+@N-o2_NI@BgeCtfLVuZE/G'f
%C+>Om/Y`ag<>B:\*eg'rERZN6;`#7phU'?H1>mF]-Gq[#C04-b5T4<2[FQ;t"Ci(%-@uW91b.EcO9];8*V2l[#>C?F3%!-n6Bbi`
%:U;hC[/#6j)7+q%6E>.3W'fTtks00sRR#'O3^]2GX.ZsX_+C[/'?VX_MRZW%l9`8%3"b%];)I%Rcp\QtK)VfE:e]?2$QMGWb"^%k
%1We-^(^=]?mPRu&\.DW)/LY"kM1W$0>W>prq2pdC-:$M)UXmAF_2)j%P-IH8e-)q7EWNHC-5BIl\cA_0=@0oj?jYG78ae*m%gPGc
%PjZFP!YU\fqN:AL+TmTO64EW0BI/*s,:^,g@#DbJ/#n.L80*!&0H>LLXYo.b`1n[IUYoB.8o*JqJ\I5nou%m[M6*l`D?hXBm$BUj
%OGbBHc[]m;if*dEM.8A2&K5=Vg4pfG1/YR69n;:kl8%FC:<>^&QaY:E"02Uq$DgHO#@tAe?onKE@q(=?)0HC+'Sm<Aa^"1,OD-!B
%#,gcd#dfZ8,R[UWCr-1NjZ+LmBc*BS85W6SOj@\eM(+f?;`)<.5XCQVL-\&cHI56Y'iLoj,se[8<C"!Raco./e"m4hh=arFP^;g;
%'ZrssnGl'_f1:WQJS'kM2,+ncU+rR*(SjlHnP#."O[KJ.&?6:+d4;AfMM5p^24ZL%$n[?nVFSU5Ou@huE(aZ"$htW`O(?`cO][SC
%+t;1O:rQ%jWYh=qQ6Dt"1P-%h?\%L<i?EkRf@3cXeI7rQBbjV\&=C4(&-r^s.qbLWP7gl<Q*^WY(!;./%4nBrr&hrRZs,l$2sE:f
%+QNa\6%a2cTIs,5EYSW&-uY"2,LHuei:[NFLm"]?INs(Nn-QROW1mAKR"BdkU0@@HPWgc9<a?g_.5m>\DJ^Rq%,E[=P(Z#U!pn"H
%CseZVfE-IKHmP2R.OBh25@iH1H5XbV3Eed^6=GC#-"r3>9Nl:"Db;<oT(_H2]7M1A/LY&YR;:#e-ESS]Lk>%7Kp&qlN5@0+cqa98
%I:ukuS?dq-2m&iZq[H*_35s2Jjl:F`A+0L!&<Dp'lQUh6/0HbY7S9?,6p?-?WX,OI&dL105=3nodcNF;2q?r4SI^$=]%H[a?igo&
%K0%*'9Helm@MPt$'Dn#5KaG7.6S$:l1?:&72N.M5[@L$m-/FlPqZZX7:8^>bne*H^IDfl8;M&jR)iF@MP.m04=XCO.`IDegc^6dI
%2c!=JYjLPahRu_OLfba?N]G+HjMT(]T>AO-!#`S">'_!kn^I0fHT/7b.ZD"?35:rP>8#9?os"MaYF[?*3SZZgA3]s,ds-mF;gS-Y
%pTNVfRsBii:+ODER!&IV=C^BLpWbn7cRQpg\CP_t-c7pgZl"(#nGU1;I`itrA6K:Bi2$n7)HbXUR1]^oM7i:B9V67m]p[l5S^k((
%5A<fV>`"e[NeZ!s$XV-$M=MYQ:QAgt1,D.dP;F+#lW(HIKCMNK5@>jE8,`6rgDqB.0DO,q)<?Wlr<)-R(*0\q`pV"-_0^Y5T_gWQ
%(aQOq9_?P+9"J>!)GjIpD6j3)IN\ImadbA94#jru9[n*Y=9GbLI<\X:AmKOgN4Z<aabK?`_%k=XcNLQ3`u0M).e&,\cXk,X%iA-t
%Sg.`1LG8E=YR=BGo:L\#+;'#g/F?iGB7B*QSlk.HK6cd(ImW3>?4CmpoD$s=SqH?NS*X3CF+SlD6q04r9k#oH7I5h3_1_uua8&1a
%$nUqelJ'J1,fBeiQocQ_DfMA*I@e8%a-"2(Gf.Ve&n^3mSrUn]F/10aUHAo\jq[dbDV_d\Whk;&o(a?aq?V#KrDr+r.J@uO!6NMP
%U.4OScUhIg2jh^5eb9p6Ca1CI>S&.XCCM\DP4<L<KB[)%iqV>MYD./L$I7hFblZmrL&HCVpTe!mUcUfU1k=HS;XTjS9o(SgK0EU\
%,.B>t[i;3lV]1":1(4A7Lg1_OVh!aL%+S3@K`h=>/4p`g-fofkg>2:jTdKiBds;eCbY\_Y%X$q7PV%pnc^0&9h@2'aP_$5<,fOW*
%Gm_9j&#B!T?m%O2VX`K.)*"OE-hYQHA$3(\:P19@NsQjfJ(MTS-D-S)p%c2f%BDHtXd:S`#tM",n1Ea1gm&ptfHM;bN0s6R&6nAd
%Z59+"cfqp;,#dshJ:8QVI8fAg=aQ0TOu\m;.8%Da].[O]o.(;,;?m"3Z[<<P&#hDthQ7)ir2;\%c^%QN8HNL^Da_N!H=Y)g[=E8=
%NqE,oh`Ec)fMXf@RMER\OiW=g1/(?[m<O+*/\^pW$4\$;INGXCQOoF4YceaMH1CHX#.+HI[BmBEcd7dU#`P1N%V&?hWL=*_e&)TR
%P2:W<XIRZ#j?a_)W!\n)E!VH0@,MZ8QlaT3o6U^8m6rMf@g=+\X)H8]U;pO3K40D?<gPcg9#H*"Af,piq1$^b*.h6D(RQed2_gSj
%_h)CSR9gng%0KuU;a&2QVMujt<uc_4%V>,9lZW8VQqN(5lH$,Klrgul2+!@C7gcTfH0>JhMu.hOE"tPUr6JuS5[M0e`BIWtnl)Y\
%7X[sH`j:D[D0]$6e*BrVNN,EbpGbW<R)?3D;f@*D)tlbLi9<UtTRZ]=&*[?MU.MS>I/$p$&@SYaecZ@i88`sOF+JL^[<27UD(Yge
%M/K^lN33bmd1`pXfi1,W@8H7.1bb,S9Bt5[9q2kpKnWX^Rke<A_^X]sHi2ef2KIfYl2a/fDYF"c*R5</8,`o^[^5fJ>!(M&7V>Yb
%Ee?We8leJ9N1;G<7`Ia&b0Y^bU;$I,<],3?V0'sfa&PK-aj*nJknA]c@][`s$#g*ic2op0SB*@<:^3g`!l_0FY4#hd?SFV(RrOCN
%3't."6[;Q&I^)JWFXN@<:R//>$:pGB$N'Sq^:gVe&-#(\nbN(,AI#[W"b>LT_IJDG\E])9].B^IIF.gerZ%cM?X3?=M#.1C!$#S)
%=\oVogpu"HMs%Q^l86g*E3gL[m,5KM1u@VA[Qi`b^,!,-:F5^dq>+ko52#,B^A#(g<lJ#Rj;tb9mhm._hMqX;0iXB7UM7/S^3`E]
%+V*DKEL5EeT0(iffk\L]-(bnbr,gIJh\B@:<YD+`RI\FL/L3tXChi*`.okM(OdZ#=e/\*Y(.Tk`b3I=kP1Uh"TXhb,d?G(dKRUZ#
%Hgci>e&P205=0YrE#V:=$]P2j+:9mep>F\E&?-25ob391IT`lah-PStWC9gMcl\G#P`ECQI"FrhI*">)&V:\Z5o8Xo1]'.dgZsNj
%`$Ss+?Ms7>Fl91&i0rC%88DNGb[k3=Ltsuj*Z/J#6H&<1I-or1Q[SJt4%f&LO6WSPpcT#F8SIq982=FVi:!T<@-u'-FG.Bdd%]t(
%/`?DPL"q@,mt4foZf8,m@br?er9:5"h>tSI,tP?k,mg96Ytq8'724,X=B_;fBK8#6MBY?953M-Lrj\p3JP8sgK0m[sNDjgAqP2tm
%T.^$'Q\D*j-+alLp17+<0utQ_OYR&iF6C$KkTZb[]@STghH]r*eR#g4+@gd,E9,tsO[8d=q7:KN>K4cH);\*Xi-SEk61!e+R^tN/
%M)7nWmX3!4Uk/r)a_,spo.O`0\J#Ol1E"%/_0;CE4WrWb_C'ONGXk88d4E/r`V>)3oiGl5;ZEUl!DYu6MQ)kl)U8+.`=Q02S:qTP
%cY0PGpcaa%]>79eqd*qD%@(tnB9+.sWJ''pp5T/_6EQWS#WtE<1L35,bS73Uh'utB:\=T(Cjt_25cf%sV^P.9I(f8L%2`O)DrFJL
%i1KJ;EcuY#7b9IR)\OO5biaYhc4J3m:\!I:\$%pW064FQ%W3+*OoopiMh"+>M<WQ>^?g2bCROY'U7Pc^]Q-9#RP/)U"`9>12G;a`
%ZS>UIb<5NA*(A]=B?kD'Z?^[k1_)nS0Jqh#<FYCNgu7G^^A5M$--]''Nh^crRo8nK&hM-hTa$WWo^e8?K"jS$Mr%npe@/EdVZa_t
%/ZeC+7-JH)0IcQ<ir&VXmtEfpONJ4Ib5&`WUn3)rKQ]>P:Z_uK.S8T2j'oPr9NED_+oLD$Hp_@j4MgY<55B`\oL1sZp`\4"^Gs<j
%U4f;]MoS7YN))3P8NTG:e<MCGH]q&b"E<Q:;;tq[qMMh<lL+K(,QBo,+?_MQ[2!%R@-eTEh/_t"KJ+bS=2e,CjaT.?s,dmQ+)l-\
%4T&4H$>8YG(MA!a%J;!u>96'mThQs6o7MI0X\GAp^To@84qh)BEG?BIo!^7(-0cJCal']QGuF/hK"Y>7.)Eo'MHG"Z!):l$6WPLe
%rHul!hU6JJ7hMC*UV"+/&G/QY9*feupZ:Hs+UC"=*d4&'=pD-kGp'LuR(h6#%SJ[Vrqu/AK&<Ja]b_)FRj0TW-FjNl#T1=Z1)Tg1
%0tZnYM)P&E>NOKe!p0F;260c;9NB3"bXMMbSF@#l$1]=ops0b)mk$huP=H4jB?s:85A*`Z&PGGs=6b-'c]r%V#Q:fuP4YSN0I)7,
%[>La+Gtgob<djDh4A$n.o]ORF8H0I%mo],tn%70J7ZGoT,)*"ICe&4#Z:lW\$bs<q2-NI2$ijQ;qMUBfO:s@uAQ6eMl4I!f.LW%c
%+cs:T./i<YU90<V?Tb@_*^g(d+d+8hCWSi`M+r\ZS8XJt=RWSu)Oj2)U3X^"DP8*jhn^^'mns[<g!kuBi+:+F]4:T+\TgSLOKY!K
%82AoIf`mG0Q%*=#8,^-PY9M&X]tM/WHpHj'W&_>T/pC6)?,bZtON/5!EQBt,=L2@"J9PuASe!6"@;MMAJ7)QA$sgR1]%9f@!XuMV
%LMlfE`V7]K<nB10ps"k,4Rb97JthC92kE0fY[NuS=%9AnOkU/N)"4.[7:g.j2:P5'7)5T;Nh])g7Sk:/)8m@lK)b)@n&6G!_Ga2n
%5024(IMOjAI!0*=^)ZS>:S(RJSQ8-fkUN_P;8K3BA?BjsSk<577-u)5GL,'iK_7l7TUs+p[X2[V79O<MZNu#hTHL8Q9Bc8gT12B3
%q($t2;@U_m>7#PDms\9H+oW?@&#b5be^0"`qcgTn"ZkRc=U$,qN6M#!H&UnSq'j/l9\!Hj=e>^^@S-bh^s6"PN0^:dU7dC5P]cCB
%P8W_M"=K_F)'pL32?q::%a!a"VBuf/dJJ@^#^IjK:@gu_'6/78Xe`8Gnr:]l+\p#=S7)V[\DBmcAC/?5nWZMBA&K8,^HAN>7EY1T
%F@Ld&WQk-ZY]m*g%ekUX9+I9%3hn[:EnLr@.9=JhrD8D;?@/4TO5EBHVP5g+Sg1L%=+MD$?gTD3VFa;/Ch3b+Tr']j3N?gCJ3R!G
%^V2U1hsjP.?+\Q;S8"WKVEi8Q2[0V9pJCOnm<JlAK\E8UP)?3g3\?6K#lm2b^s;h5Wsb[Q;(T+*$$fM>[7Ru/rm#`6!_R)V1VSQi
%S&"J<`cG?c9m@upC8+/<@:g^]A#5Uq1i\Sd<1jHPJL1k[:`<CTnu>JXK.="6frO6?V#;%_*%2/_ZEW0ZEmf5bInp8hGJ8Ahjt<,=
%%9DmuPf>:5Wa>OD+@j)Sg?4IUl[+UF.+%YhR*Sd.XJT_@KXkduJCO0?bS`,KqWUuspLphQ!I\*3$6Uj%qL=U*hB+%<7P)DCIE@o'
%<5tQ^eNK>$-J)XC*W;q!-T8^VRDVq=D5-)BQe8rW^M5o]iZoVMP,AhZ-6,8+hj\*jc6qqH"Be^s^M!0[]11,QS`SA-C?UI?@b.&S
%SC1D1qP&kfrFePuAjSeH9-T?U'"\pC,'F`j\CJlPi`:-P27f&VlBnPeDR0![&\"U,DT+F=-Bicn4kqT05uM_Moegt"$it^.pNMUe
%qeRqH/EIY\"t\Fm_+nl=ADn'tr1Mo*Y?IDZ$^(adpmt?$d64N`<=c,g#DSi./'<RVZEmDPH#_%E2<.%&[Idj?aXG[77>3B^m8X.W
%Y@s-In.(7bjKV)'NBPLF;;?-SPSV#sWRb,o_u$`r?`\X!#`VpaOse`2+2>>ApHHl\!7Vkp42.gBi/!\:Mi!d(_I9rplB&A>ab0YT
%4=T-/=#S``iNEuc5YH<*)#eDVh*"-1[d$(Lp&Gj[\HN#\lrP34$2ouMh&_9:DIts6^sf%^$/p1F$5Y$dAUUlVhn2o3'^qj>]]05V
%4fHni)9u^Zf)cGZ$b$9;4)^U\j:V\?RF/0)\3*A5!2W9<_M+VUO+l,P><"4nIX]:TIYS:@ST,?kX[J\!/LsbMAnCmlO"(Q3HD7[0
%"VM]0)hYTjL[(UjnkI'g^.d1FZ:<O*0iPF2e78[HjRuag-_Tg]`WI@l0quMF1ptRYPoo=JWFij@E+og-,,`[S?*-^;6V#6o\,,gX
%9drIa63uL8Ac7k/6@^C+E@@dB6"lI7oMJ;LBgoDTf7UFaa5GLK*d=6[.s.W4T.^!&fmuk%&UEjERN7,1=%5uj$;eS!W1diC>-=Jj
%d2@WMK@kKIqi[Y6J84\9=l>$5'ONJR%Q9?]X"nc:_,^:cVs?sW\Rk2e4*"@G\t2B/a6Fmhnl<#Kd-]Oe[b9't_5[tC(kPc2)ZB8S
%I4qnXCWBJ6HmZVY/2JcgOWXqsnC:.LI'<XgHBmln'>eX@0fNdt4o+p;$BU\3_0"0g-HI0%/0H-22a!"23PPS0FF@E`cVROtF:_qD
%K;%?Z;)5AZH3_*&e#iesLM\)"QIM#gF(?$tGoTjdRX%=j_-0>)6/jqK[tA<XU7(UtK7-0@Tg"+7H/8Y?TEr#g6Jrc+iGRbo_VL/P
%fbK+*hnaA<+^i39M])oZQmZX?'eK4*TD>lY5/3Pq^3N]<h5ta#caZ;/_K\FhehNg\A'%5+Y_8'Fs6g^J#+7C71hX(=T7@<4gDNOs
%iA6$D9aSu1D)Bl:``Vp)k?4muU!$1sKEEQIPFbT!hatAQl*q\o'P5+T+$57J,]LJi]Mf'H-9=!EBqmp_ja4]od)K).H"sh9HDAW0
%ShW;(kA@B[1E0-/?Tb;HDeFToY-+Iq4eNrfAP8*kIoY).k1musp#@Z`:;>`dE('X)MRI:PU&9mhF2n"k"0SdIoH_P"HbshI1-0PK
%-$T.4,kkqX'D\kP[>la0LXPZGUfO]SC7.Tp2$(arB(f,^NoAOI9ATEBSle$aT@"30G)VTX_V`8O]7.AHiD=IqH/P^%W"UZIFhcMp
%hQK"*Zia6TI\C"2:%aPQD?*Cr(I:SS>gDLETYDV@@mmJPr]S@?dWnie=&u"age0Keq36ZR\!/$(.)DRfL3N39eUnmk8E]mp^ejMg
%Sm%="pe(E9-)MT@kt?;f,.&*bjd?U(W6WTai2]*OpCS"FrSg]Vc3h&]]r^nt4ZIZcPO3V0iiW;/E=5&#fN&+m(=^5SD;;2W*c&bM
%%k)T-F/%i(E@@_Qi/A]9/Q'KA!'RQrS\;_rl-ha(WVYTQE/f)uq;&$cq"(e9DqP8J6ngF$X4*gSA5E/J7cDFPf<;,aW)qj%qn[#%
%8/NSH>_pR@eZmS!4istVjAd6/T.g#s/U`j`]LZ@IeM)N_kEOHAAm0%/ne;2EeCFb(S.L(T*,69DRfFS@kREPmoXgofc_oL'0tr0/
%`LGi[5Unt"rj1[Z.>*-6:8K'=<'WfjV:SZYB-oEnh`0$Q/+,YO;``<J_E:orI#%0=J2:XL_mGm:pt`c+*MlB?H$tXQaQ&CAA(i>W
%E7`/CSKAboj3`]/4eM!mY]S^.1&,k(\),CqV!O\kk)J@C._k>L%O,@p,buF%r6J\?1*B6,OXn$g`7tsRIk:0df_O5hq]-o6cW>KI
%a(XJKf5i]0BoC)leeU:GR'Lp'f!k::`+EC$CnDW2\-SaKjK(V"X-"THbo6a*4;i?2\0LplcW>KI_rD'%6M`a.S]SpG825/m;$_EL
%cL:&%IL?BYFM./*kHKPa:MrXEb]J;sP/4fO)BoSNpk)\pI(nTe2c]JZ6`OB^k0[U78%BhW<8cIEIckp:RZV+<UNFc'bgm+pMZ6BX
%)^K#dAKVJ@/<X3pE;R9Br+9]<2u2GIGDqM_XOtk;5G#@1MPg*C!R&te.>QCD_tnJiUl!7#&!`3HX*^D#IP!UPAeM>SbOl<]9@"2%
%ejZ\Z#>6d>;T?^JnV\deAlolE5:..2&L/Q#T[QHYGBN2d_E\@8Br]q*0%=1WTmd]^Q@:8aK_@+2M643L@X_F&=C_/Kg%Vde>^g6]
%I7Lt>J0*VV1EW..BF<[ETnoWJ^[5]&6;a5S5S4?!oDg4d!K,@llA#I"*5>8cI-^/r9=&mLaP25Qn_KfpK!U&04aZg,^/>P8:r#EF
%P=T`$aRHsX1eZ5t\X,g4e?7<@f[QCJ^n37Tk*kjCQ_@oB;gCgWPR(<'mi]VjX6#F^GD9f3p9\utoLH:jd(so@e_^9<YjlY&TEh.M
%Ue^mQU2NfOE:iag*@N#1rXZ.g?_^9P!A$5T2X4[oWccKS8rQ;tq3J%+]HEN;c34#W_3Fr,B'&IPA`(-jliN\BqfX!UOT(_01-EpG
%9`i(.g"Z-L?kXXke85tRe^k347!Y)GcY2X-3^?oP652'palgj]2r6hC(F/Me0_i7<")U+edT']eL4qMcaucTTo#fqoY\am_-V/Ap
%B:ajRYhpr:\V#@fTQ0?$0KJ)L8JE++AjX&q44Z6O+J5l)7Y+l:9kT)!aWEhDMKSD$otird4JO0Q"sfkMRZQpYa!=jr><i#Z'CL7Z
%m5Hi`-ntlVL7TA42&j6MI@Xasr:!1tI"fq+?g*OIUJ)"S%<P38AjK1=Plp/)8"'p24Z!]Ml'UZRhS;a1=]P#g_],<Orc_:6DD6EA
%O(l2jO3k)h0_]V\KLTIb%+r.$pP,U-%ed_LoW'QZ/Ni6#FjG7.]J8k`X7al-Eu\=1R^c[mH?M5Kap\*HI2NVu]EI^S)UAG<#]Js#
%^rmY+)TD4$RaY-tU#4rbNmnQIS2ks6@^(2ma4fk^E!qc=&XB=+r;rQ8?;>Ym6b*/6m>#GjC1[$1>9u"!]^Sb4KaG<Lh?@6g,6_C^
%Qe$\7ARfQ3F?Eo1fJq&\Z,MPo2N4RRV07%$<hbTfgO1!%%,KgBf_!fN9:<G%!3IX=F'U$#E5iJQYEbeY"c;jDPAdQJcccFVXYV_j
%P^i]-k+BuYpTBXT:WJKhpP+p,%K74WD7mWE)maDce5r$KSK8OZ!Cu@dpq;_1P5A1)pn<N:M.AY1k]TEBA-H5soX;)c;Gg#?<L]^k
%BOH?>9&0"iq`J4&E"o*=/+8C,Ot]CP#n.QsW7u.P%N"1KmV@S(MkZMBV=NcQ;WK50Kgi0;Upa#W23H/k@0<`<RNer(0h7(1@"KJu
%NGPgCC.0u2=Rd3Rp<A-r1AB6]><Sc\g2NU_3TLmOMrV,e9L!Yn\8gcHFWU)!P=`Kl8;Jr<D.s[!=``G*r:s/lJQ)Kg"K0(02g0.`
%,SO\WcuhJFD[SGe%p*H5NRidl[2l`$^rVnLi$u<=3mHWg!)e@XCT?9f,Y*RAG%i"RbSjbcHkfIrPladUg@elh6odF.oFjV.n'U/f
%""K+&fp>Q9asONMQLPrCT2rO)6%]8],)G"!9C/ldD9Ha+MAJ6?@-+nJ0?J>LIUW&u1ZHSjkdc-mfAe<G3qC,78%/%OjDqu8Hl\!F
%-1cuBWC<Pt:4LjE<_eGK0\rn-?nK",\BQ,<-Q+pG]Y"qiLGFIj2.-Ymop>s2p?Nt8f=XBXqj%e\eh]8gm.C(RG<j*=jqLcnEB;O*
%3aZEh<4Sr/cTqee^F;RHcPISTkD`.j;TWQUdns`\d"n:1oPlo_ILlq?d/jdk/<<G&q,nr[7sg6$I:<VE211/"$[0pCOAre:.I.tI
%E"MNqH,DF4Bhf8UR2<?*J_3sU[th"Oq7g8_?`-I6i=nV79:c1UkFsS`[Uc4s)S&`93!#OHKAD_L/R!?>4H"b*go[@-=E1KgE'UAI
%PVS--/TL(4Dl^"#)hOVJ1;X&+Vb;]JP#iWVV$X6'!.Z^\m#Nl=-;AL<b`kKm_HPjhciCftT(R<8(un_P-#Au`>Ib$UbS=bT9kou1
%Oie)=,9kVlAUtnNQsIW4!sXBPc.GqHRGt4(%C$jHUbNlhAYan14j/*kZRK1O[WNGunl?4ZG+)$/+/ul[RM6FHkL]&Fh5A*QBb*,0
%AG5:b8jPGR2_6+4Ti^#\iTjiO=I:_eCh[qgGL+_#ce1LfVsS?4g!*WJfOsc$ose55I&5*>E?6t?M`3_sZVT[`3H)C=<8k<:!g_:(
%-,hpu%6LH%\8bmL9BDDP3Pr<X*h%C)grNOc4e[CNgb7+9M&Z<ulbgRp)tUVDEr<A2LSl6&>":-YKhlXa.KG$L5%)+=(%K;Fe/r*4
%+abIr^p(i602:6h!QGT^gE,134jnY.9$1>h=bboFF.;J!b2<<GA++.3`GWL!8Hc't"A4a?G=loiD7fIuGYZra0T4^(g%X=N5P.Jd
%9HLq:qCWcWp0qnO9#+-MEEIChFUgG^C"pa+/'C^``3"fR`!:VJ@:;do\dTT;VOMS0ETgN.hG:`dPB?gaTdl\#q:!6>%NL:]A4%i3
%[YT2+8L^E>NkSg%[[`ML/+#'ub03aT'l60@Xd5kq417"QqPs]rhQ$VRgkrta?@O,i1:/Op6MMu-NUNb%+")<ijEX/S@0AONW'TMu
%q_Dp2eS(aUqJ@Q*kE2'D4g[9DP\"gn=0L$Ufa0qe#[/`T1ee\0l]i2,`km.'?XFl2W;VMU(E4OY^eD,4cZ*-I.?/ct!1]RY#n"A>
%H5<uMkAiaO]e3hCc/qR1phagDn8Jl"rYq#,qbq*(bWTW64SEMKEtQ(>&rcdieMgj/M+;aqm*lPPT0$6dD+*7kV,,t>48QHnES/?R
%2^D`*gmp?Pp_PJm9EaE++*?<XY<HK6qO"kVmS#b<kHb0,G*QfXU^rk*:LGUilEsG$Oe<8]Ug][),kAIE7m2%PYn7%a5AJqZd9C>-
%@oE`$T'A=1K::V/<CgfQ6O)2D'r/%/Iutb&mP_#%5%IGJ.e#8K)s]+dZ+Gmqlm[_#TQV>:b&bl$?9INeYpGme'04D:q(Vq%ZKI4/
%/ao+BaO&4[,&@7>q8LYS?9fH6[]GWB4%lXtccB2'l[]mEeNsS8p;p(JOZd:RSi_g?iYe>Z93oO7o-Z0&/,H/7M_QH)G%lZc[#(4t
%0#_hRN?0/f_Me"V6cB%(rT_O"Y8>`sf0kTJog@$h,]@5PS=,POE_M.Va*GF9cAEtM+YJb]iA\"VY*#:j=U)5O\?X>Eo5JG<'b<&]
%^[2$!(\N$Y%JsYf[h)Hsk@aYJnh=>#LdH4aX2@gWm8cE^3o$<M.2J_3PCrOc<25];ppG<\.jn'4idXW,dc%HW6RBE1MN:7)d&>F&
%E`^#:C1hN+jcDAXRFpq'@I):$@G0J%3lhmG8o;`To:.Rd.0iRk)=&;@;qOsP+soIFV(/4DG*Y\j[(B6t_GbYg`MQ^iNO!_RB\ZKY
%q"rd1HqUcXoIZk,e:piN.)lWZYLCgcY2lj0K5jgSR',NE0oDBo'gFua?h/\+5-;\;"<Fe.*\k2Ve#LJVJ@9W>nZcGHFO*!phTs/N
%h\hio.elA>YR_H8a@/]g3@l123ck@NaerkC?>rIsQBXDH@9bHB$mWkdb7lM]E7/5$PWD05Lh@m$@Q<?(:$ETsrOR15aET6pZI!["
%'#i]uY/rD!R!)J$rYG+A[_apX#4DVT7iY=ObCJ_4P>9;jo!m+T'.%mQR;(AJ'A_"Q4''KKcb$#*poPC`HL+n%NSJYq0KSZnIO?9H
%1$&8+&Z]Fi7]rfl5VnHTX,oIV,iIer5]TKh%7G&(*rbR>0$eS:Zmqp$FbBI`\@M62U]^6B?Hdc>1m$(EZmO`K\5UPX6\Xg]8XYB2
%%K_]na9Oag2j@oM_pYJ9i:a?'r7lA,7[_qibk;t>.F['5coM<?TYA"tq*,VVT;h"0g=lGA^p)KU[C!%0fO^!d3Q_l\6<k]f1bT0=
%]GldNV^-+^V-<ZMYDV!sgQf>%G1E%jICAJlA4d5sApadRfRA>-HrSFA7Ol\_i46)&a_QJ\HJ6^M&m\NNdd^YHqKPH"9%7E<+*?j2
%k7s/KR__AgYFf1LS#8M)F9+_"RYUG^C<H"".(N&R>'5Hl7fr[D80\S.0!#&QR=e*&b%?oF3#)6Q83*gGN)*Y3Ijpc;)Lm_XU:4F'
%P2nZATb<`Q=_)\k*\D2u\[(h%#DcC\rat$pK?2>BN\iTqE)B,o(srGk\>Xr1LC962Y+$[om[T^0F<'s?;shF;J$9N4/NYS+PA+N-
%qpm/oT/e'A3/A]13?`[bp%DfJat<*2&MI][gV#SA1[SY-N%Oo<2Q\1=_VM[KTZ#0T_W`kA(*mig\+:ZJekbt'>.cJiROjS9^QQ$&
%-)ZDR=KOAK>#a3HiEk&f`R-c">>"Ar0HN)^gLH!a%RJdM?7<$u&Fh.tDG"qrfoWb*hk^Q<FVgE'eQFaY+9P5r_%<]5lX;m79?sWs
%6/c<k+aJr)p&:CVUR][+gH;+bWlYnG6%)qO7'>UKcLa-r)TfurUIUSr[)$i">dh_$)%MDK!p!O">K,Kn)S3R*i&OJh#\'Y^<XKQj
%;]6Sse]6mRNa2:T\[C:@[/_E)M$A[lG.FDV_j#SKVNDp(@"sPhabli05HtZ"EIPQ]bR6P.dPK,Yk.."H$[\[l=+<*"(c3Y#YF6j&
%H%kYX263o!nK;84;;algU0"GE66!,p%(Sdk+j1Qk5\X^91(@I;Yki7;4_SSj\F_^!a_.6F#(UDrj(<>F\t6/7BO^FJ'G8o9LGJN[
%g9heiqI/RE'fLaXM,F]bo5GAG=(A"<&"]ub@[u\56o_G=F?0kCm.$r&p!^)?em05nb5$2/ab5WK].)Gc0bu?#LrK$JWp.3tdM1s"
%D39bec,Ymp:8YQ"Sd-j$iQ"Qu\j;1EWR,cC#:&<"9dPWf.05Gua#C7pT+rq3d]('+gF'CVZ"a_RM[`KS_KA,Zrdlb?ZO49/]Xm:c
%o.YALHk?bjQNa=>bo[h>SM0P/qMtS!s4p13'#`d8>dXl6GIlJq1G0<9&^QZ(<gq=dLnsJU+12XT6tH*)e7e>Zd0[UN6NA=hrUQQD
%R34K6DR3JNXm+fdFqk\_XZYOP^JF=eh%`HIW=Ph&Ri2Ioe#'YM`8OMu!>BD*d.<<Y%tL>pFV!btgk;*'TmnVjCtpLKNVj["Qok5h
%6Q+o8!4N_.dhUp5<$moW8MLkWeWi!s"f-Z8Z7E+b(lXG^^?P^+?\YQNn2`,CB\I[;aB]:'YE9ZapPRrTON6aC>p]a`Kab7OCY,G`
%Sq-1.Ms>8Io9omQQ5\P#&#\@^>j!j\3qICZeB7ofUHokXPSQ@h#\D!d='J@&0=<!_^gt$*1ht^Mk+T5PCgd*#0S)/8!W3'LlE$sc
%N]Z'Sr=p/V6E5BYHNF"C(-8/RY/Mf_2/Anirq[!N)*Q#F;f&AUnR[K!@fDqiHh<1bC%i'7MO.Aq7'#!Cmf&:sdW9oO#JC=G]!'h<
%(9M19ZL,%G4d-=\QL]'bJR:PrAun<XYeT,$_d6EX76gR*/mm(:qT,_JWl^N$/:p?<`]HYeMKo%7eEQ8V`3JMB[UOhDTaBe@=dj,2
%E4*=?CrZVFdu&D9MZ(T1r/8>ha6Fq#@;,i*4>aB\XCI:1Rl.dC'uiUF[cTda)]E]_4h#Kd2Se9"A/'NFUOXUh'M!E_oHBqpS^g%E
%9!"VH&_B"$%'EEf!CL<n^u<^@]NJ3SpVh3GX<&'%%VG-E]4_;436lPE3)J?)_;4CiW0%nX19k?bfcd1A2I1\2k%U`9`X*#6?"lP1
%>-RHRmg9Y,NID>c@8qj7kk]@8,@l$!hG+W.6@"Gp.UZ2J7q-"e7uV2VGlmtl7`"1.ilDeuS.Qcs<:'i:3PjOpa(tpn+dY!/<Y2uu
%NRdh7^s,rC>,Q$q0<u7JV6c!,:7Ej,YTF-96gU?d(T*=]NJq_$Y3?TR=-JEAJ/3aJIV#Dgc!Aab\j:h2O5:AQrR'X'Y0$!4;CRSH
%Xn_P2__ll>Wdna<YJbnT!3`?74uR^VB":sab7BpQNrs<m6Ah9BniRe$URA4,3?k3\O'P`37u:qSaiq+'#?k&g=4[L5!Q>?Y5]"*]
%0G6Zb/&*cS]u&5Cm7QtL;YMm9:Kq:eI(cT/["%_KgRsdroHr$!8GS^?lFYKBASYeV>EVtaqCG]WId!K/d0p;-`[\+'J"Ni)K#;4j
%UbfNq8:$J,8!nLi]3uGLGZD2%FbisRe20n2d_JHTIoPl%$MNf9HKp_":B-ba^Mig\<KfmRb3bu@[*h+/+N%2d\pOV<FYd#kF\43)
%>mDp&1&^PrVa]0u;EbCT07O@6PK>1D;]gTG=U+F,dXmA/kp!'S:80.7<[Vp1"<66\rZ:XV2P-`qdcm(7C'GW2"($k`dmb^-B]'+u
%DN&N[k2!$P1S(M(%rEXeSVJMb*9P6qRu5$8[b-)8E/sJQo6TQokOil*ot2g\Yg(#^4eph^DNHskco$PQ&a*^Q__Wjd*FJY1:ZEqN
%!k?A`78S!#Qi"/iSSUrdFo[Tpgr1I#g//un?.3+ELAcauQ*))8;0[(/25^<4!1m]8WXdP"H%A;^G5]hCR'W1.C"En!RVl=ablTF:
%b=(]'aV).n+k8#s^b,u9T0K@M^(:W!ksrHY^5l+\=CT[\dVFq.eneD[@4^#4i9Hc7-\!-Z#b4]O;K6#.g4DgA8)'!1#k;8/WNjJ_
%ah58&I!j]>CY,QkWG=9;"=N75U1_Mlm1S/7f8ksYD2iSsV#GF#.[K45"X@;PB?7kHI'WSE9$5a2Pm^&RG%8pGina]3#Pk#bC]Sk/
%c>hArS7cLPcUlL3\l_"e5pS%T)c>;O8,Q.P=o[hifPK/#M]p]T.,j8BGg&Ka4%XZ?+q!m)6`@ah&I0'4h@f9a1hohF?=^..;tc/J
%qCmPLhG%cs=0cOJGpgh']7aSH2G)5oKuu2539lsra8sUsTf+3ZIu?`fr0";(N=Fms:$e-Za2/1Qq4?Y@;TuVUh$[4P4/].W10=.'
%!_Moin5tOn+c4Kn3TkC07XRH2#L7(rgW3I`Z>4:T]3[4WNK(Z<#(<DUT9aoB?LW9Ei-ch%k;eFgQY"9TjT082_Ns1S]?;:2A7um_
%3AU8]707^o10)h67f5d<H.\EIjSop\EX3bd^55[qZ?oZThI6`$h<0S&0$_:7-d]aLNg!kIZScQfE"B[uLF]>d[YSgb8uZE3UoRHF
%n5Yes'=-Hm"\dg*S3odSmI$K[,9JaVs.Ur->4_GI0BT@>B%dGWp<@L*9-mRJZ!G0*Z8MmW.eruo?F]re%m.^nK5)ATUNd\!rQZ9j
%$g<#P(l18@(Inn12hJH*5=S9G]ULndmOK,#>=`?_)ph>RIpnDHpIC#sqZT8a/r!<68gh=2d(#PGY)'5F0uuZU6re-&/N1]lLbV7Q
%co$[?=\L,8`)9]dY()TZ6U5D;#Uo(+DTBVg"]ScrP%<+lP>.r'X>_;V1n7]",B7fG4AOZ,Fa%"aYb(-Yh#PFkVqqr09`''+?+P=m
%HT8MZDHJ_1ERRr8IM`W7-tsl7PCpl[g2XeOVAiSeGL=%r%!2M_]`+Q,X;q,\g57MMOLUQS1c%"Ngp;0P-oP/ZAS6s_fJ*JT6S5X4
%#")=+)+2jB^.*;Yb_UG]C^uDW#:na9i<qcHG3)Y\O<loHPi<3Z2J"<%hCMsTE:W3jGBS(V=E*%KRQ<<Us.!-+G:7l$S@"XYYV`q9
%BPu$E?SkR8G0mje::XW<GXZ/H=(k4Nf)X$;NUhqZ0.18aK&K;%l6ID.-qdajel"O<j[]F?ro2.=]2V%5Yqf(ZHAYTE7_It:VEcU*
%L?6dVa%or4dhiNM$khR!HY/Zi?F3j*ZXX\#`7Y]AI8-oPB)I-G56Y`S]Un<h+GDok"`:kU/_JMC/,^f/VENiSC`IJU>eSMABCb2C
%Zf%]@ZV+[p+#-8aS2$,@0A"Wh:HC1ukO-3oZdiR:c*W#Z6[uhkB6l]KD*5fC<Zh8m\%ui+;R2T9cnGJPT+)@&K!-28!lhmKf(uT'
%Z=0Q^*b#&N1o<(Xh%t3>ftHtQkN2Df*?OL6I#ru7TFYEh\KK5?&TeSE1BA[c?H`<(0<%RIo?>lY@L9I@H=:\=V&9W.f*f;SNmp?[
%5f7,F:Z=@N^/l)o4`mEW!pC!Z:Wp(AEcST9g_a#]b_5SRRqK7M#@INn@SR5-+/r^E3muotVTF-EWMeW/Gki['J^`?]?A'dhMSVsT
%H5.WRb"HWI8mrW"du=?ebM60!"nqp][Aip1QjQ[r0saP!eKM`p^BjDe)b"3g/]WM$IpB8-,S&,CBd4t$Piu)Lo)]ko'6*/k2GEU-
%?"(PcZKVem]p0'hcS="k@>1Kp%3A#C+#:'4NO5*`^['Q,1Xl%#ptk+cbS6TJ&l_DD+L4P&(m_N]%3PX^M>q+Z^G_"&7JchOhj[mL
%om_AHhkKa-K+Y(C=n0*j)&Z'TSsbn4pg7"o6JrAlJJ9Eg(OETt%#)Kp\qT\=NgWN>m^rCRltC8.C2&S3BGQ2N+`fUGo]XN*[uq@0
%YBdDt$e@CkX.HYF&XYg%O0)F<P;e?PW!)I-n_+Ksbn!'YMjOREZ>=2&c.3>JeUe^fCu$90,;4DAh:iI<WA3DNL%*33Pbikqh:E-A
%78=LK+PbO'f92R6q[ZA+M*X5[qtoKlj^*YeRm*4Zd/C,Iq9D@NDmg2)ODIo2P:`_eC.]leYGj<(+$Ol_;2XS[U,`A]+">'@Rmhgu
%([p/sIR*\()!;E&cOo>R#fo*EC<An>d"\f]4=;'cnSYS*$Q"e1j%=lG@W"L4b#nji)!\6q,_Epln3<#73$+4H<W-!u:Ra7>;t(np
%I9Tk'+Bml;aSVE`>Ec/;<`V70ZK^t+FHf.Eb9/!\a.Rb2h`f!oZTm4,Fs\#1aZET2QJ)N1TM3]SgN8%c1rKP?UX6p+$%_@Roh(u_
%[SVuIp3B(_E<eL4n%rlo*JP;tD1+8UBL)Xdn<E:AW%j"n(Aj$XH`(4(cKWO[AOQD!Qbhh[r#5T"5^\oc8kCU8Mi!T:&Yg:!Fl4'0
%*.%5i.$5k(mh;E`UVX\PhXcM[a/r=O3I/4O030mq$,edm)r#SBg9:@,GCe=Vg#nbKKMLnc@fmnDM'Hf3,"FbX^1MP[&Qr4>>FZFP
%CSer\MYqj_DdI[,4?]9#[6OZ0^\mlQs67l0rVM*Cr;V9>Do[A'S%nj(^]24OrU#YQ^,uLIp$_qM\%hls5Q9WVs,Z(:pm6L#\,YrQ
%s8C]m+9(]sprgGNcf]e+r9YSUqhP4EpOE,.iue9Thu=cfpsP3Vr7,0Qc+j-7J,'o\%l]jS?N~>
%AI9_PrivateDataEnd
