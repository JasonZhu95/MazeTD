%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: body.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/19/2018
%%BoundingBox: 0 0 588 577
%%HiResBoundingBox: 0 0 587.0926 576.5209
%%CropBox: 0 0 587.0926 576.5209
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 128 8%%BeginData: 20821 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD34FFA8272752A8A8FD0BFF7D27277DA8FD6AFF2727F8F8F8FD04
%277D7DA8FD04FF7D27F827F827277DA8FD66FFA827F8272727F827F827F8
%2727527DFFFF7DF8272727F827F82727A8FD65FFF827F827F827F827F827
%F827F8F827A8A827F827F827F827F8F8F82752A8FD62FF52F8272727F827
%2727F8272727F827F852FD0427F8272727F827F827F852A8FD60FFA8F8F8
%27F827F8272727F827F827F827F827F827F827F827F827F827F827F82727
%7DFD5FFF52F8F8272727F8525252F8272727F8272727F8272727F8272727
%F8272727F827F8527DFD5EFF27F8F827F827F8527D7D2727F827F827F827
%F827F827F827F827F827F827F827F8F8277DFD5DFF52272727F827F8527D
%A85352F8272727F8272727F8FD0727F8272727F827F8527DFD52FFA8A87D
%A87D7DFD0452F827F827F827F82752A87D7D2727F827F827F827F827F827
%2727F827F827F827F827F8F827A8FD4BFFA8A87D52FD0427F827F827F827
%F827F8272727F827F8277D7E7D7D522EF827F8272727F8FD0727F8272727
%F8272727F852A8FD46FF7D7D2727FD05F827F827F827F827F827F827F827
%F827F827277D527D537D52522727F827F827F87D5227F8272727F827F827
%F827F827F82752FD42FF7D522727F827F8272727F8272727F8272727F827
%2727F8272727F827F8527DA8FD067D5227F82727527D522752FD0627F827
%2727F8FD0427A8FD3DFFA8522727F827F827F827F827F827F827F827F827
%F827F827F827F827F827F82752FD057D527D597D5252527D595227522752
%FD0627F827F827F827F827F8527DFD39FFA85227F827F8272727F827F827
%F8FD0427FD04527D527D527D527D527D525952A87D7D7DA8FD0A7D525227
%522752FD0A27F8272727F82752A8FD35FFA852F8F8F827F827F827F827F8
%27275252FD047D847D7D7D7E7D7D7D7E7D7D7D7E7D7D52FD057D5252527D
%527D527D52522752275227522727F8FD0527F827F827F827F827F8527DFD
%32FF5227F8FD0527F8272727527D7DA87DA87DA87DA87D847DA87D847DA8
%7D847DA8FD057D847D847D7D51FD04527DFD0652275227522752FD0A27F8
%272727F82752A8FD2EFF7D27F8F827F827F827F82727FD197D537D527D7D
%7D537D7D52275227522752275227522752275227522752FD0827F827F827
%F827F827F852A8FD2BFF52F8272727F827F827277D7D847DA87D7D53FD07
%7D597D7D7D59FD077D597D7D7D597D7D7D597D7D524BFD0D5227522752FD
%0A27F8272727F827F8277DFD28FF7D27F827F827F827F82752FD077D527D
%527D527D527D537D527D537D527D527D527D527D527D537D527D537D527D
%52522752275227522752275227522752275227522727F8FD0527F827F827
%F827F827F8F827FD26FF7D27F827F8FD04277D7DA87DA87D84FD247DFD10
%52275227522752FD0A27F8272727F82727FD24FF7DF8F827F827F8272EFD
%097D527D53522752597D537D597D537D597D527D537D527D537D527D537D
%527D537D527D525227FD05522752275227522752275227522752FD0A27F8
%27F827F827F82727A8FD21FFA827F827F827F82752A87D7D7D84FD067D59
%5352522752527D527D597D53FD0F7D597D7D7D52525253537D527DFD0C52
%275227522752FD0A27F8272727F82727FD20FF7D27F827F827F827FD087D
%537D527D535227522752275227522752275228FD08527D527D527D537D52
%7D52522752537D527D525227522752275227522752275227522752275227
%27F8FD0727F827F827F8F852FD1EFF7D27F8272727F82752A87DA87D84FD
%087DFD2352FD047DFD0F522752275252522752FD0A27F827F827A8FD1CFF
%52F8F827F827F8F827FD077D527D537D527D7D5227522752275227522752
%275227522752275227522752275227522752275227522752537D537D5252
%275252522752275227522727F8272752275227522752FD0627F827F827F8
%27F8A8FD1BFF7D27F8272727F852527D7D84FD067D59FD057DFD07527DFD
%1A522759537DFD045227FD0752F8272727F8272752275227522752FD0627
%F8272727F827A8FD1AFF7DF8F827F827F8277DA8FD047D527D527D537D52
%7D537D525227522752277D597D5252275227522752275227522752275227
%5227522752275227522752275227522752275227522752F827F827F827F8
%27F82727522752FD0427F827F827F827F8F852FD1AFFA827F827F8272727
%52A87D84FD0C7DFD09527DFD0A5227FD17522752275252522727F8272727
%F8FD04275252522752FD0627F827F852A8FD1BFF27F827F827F827527EFD
%047D527D537D527D597D537D525227522752275227522752275227522752
%275227522752525227522752275227522752275227522752275252522752
%5252F827F827F827F800F827F827F85227522752FD0427F827F82752FD1B
%FF52F827F827272752A87D7EFD047D59FD057D535251FD155227FD055251
%52537D537DFD10522727F827272751A15127F8FD04275227522752FD0627
%F827A8FD19FF7DF827F827F827527D7D7D597D527D537D527D5253525227
%7D527D525227522752275227522752275227522752275227522752275252
%7D537D525227522752275227522752275227522727F827F80051CAC9CF51
%F8F827F82727522752FD0427F827F827F87DFD19FFFD0427F82752A87DA8
%FD087DFD0552FD057DFD0C5227FD0D527D7D537DFD0A5227FD05522727F8
%2727CACACFCAA7FD0427F82727522752FD0627F82727FD18FF27F8F827F8
%F827847D7D527D537D527D597D525227522752527D527D53522752275227
%5227522727F8272752525227522752275227522752285227522752275227
%5227522752275227522727F827F87DCACAA7CA7C76F827F827F827275227
%522727F827F827F82727A8FD15FF7D272727F82727FD057D597D7D7D59FD
%057D52522753FD047DFD095227F8FD0427FD0B5227522752275227FD0752
%275227522727F827F827A7CFC9CAA1A17C52F8272727F827525227522727
%F8272727F827F87DFD13FFA827F827F827F8FD057D527D527D537D527D53
%7D535927522752525227522752275227522727F827F827F827F852525227
%52275227522752275227522752275227522752275227522752F827F8054B
%CAA7CAA77D767C7527F827F827F8522752FD0427F827F827F827F852A8FD
%11FF52F8272727F82752597DA8FD0D7DFD0F522727F8272727F82727FD09
%52275227522752275227FD075227522727F827F87CCACFCACA7CA1767C51
%272727F82727522752FD0627F8272727F852FD10FF7DF827F827F827F827
%F827277D7D7D527D537D527D537D537D2752275227522752275227525252
%F827F827F827F827F827F827275227522752525227522752275227522752
%2752275227522752F827F80552CFA7CAA77C757675762727F827F8272752
%2752FD0627F827F827F852FD0FFFFD0427F8272727F827F827F87D7D7D53
%7D7D7D597D7D7DFD0E522727F8272727F8272727F827275227FD07522752
%275227FD0B52FD0427F87CCACAC9CA7676767C767CFD0427F82752522752
%FD0627F8272727F852FD0DFF52F8F827F827F827F827F827F8F852A87D7D
%527D537D527D52522752275227522752275227522727F827F8272727F827
%F827F8272752275227522752275227522752275227522752275227522752
%F827F80527CAA7CA7C76757651764B27F827F827F85227522752FD0627F8
%27F827F87DFD0CFF7DF8272727F8272727F8272727F8FD097DFD10522727
%F82727CAA7CA5227F8FD042752275227FD0552275227FD0C52272727F827
%A1CFCAC976764B4B2727F8272727F827275227522752FD0827F827F8A8FD
%0BFFA852F8272727F827F827F827F8527D7D597D527D537D525227522752
%275227522752275227522727F827F876CACAC9CA2705F827F82727522752
%27522752275227522752525227522752275227522727F827F8277DA14B27
%F827F827F827F827F827F827275227522752FD0627F827F82727FD0DFFA8
%A852F827F8272727F8527D84FD047D597D7D7DFD0F5227F8270527A1CFC9
%CAA1A12727F8FD04275227FD0D5227FD0752F8272727F827F827F8272727
%F8272727F8272727F852275227522752FD0827F82752FD0AFFA8FFFF52F8
%27F827F827277D7D7D597D527D537D527D53522752275227522752275227
%522752F827F82727CAA7CAA17C7676F827F827F827F82727522752275227
%522752275227522752275227525227F827F827F827F827F827F827F827F8
%27F827F8FD04275227522752FD0427F827F827F827A8FD0AFFA827F82727
%27F82752847DA8FD0A7DFD0E522727F827F87DCACFCAA77CA17652F82727
%27F8FD0427FD1352FD0427F8272727F8FD0E2752275227522752FD0627F8
%27F852FD09FFA827F827F827F82752A87D7D537D537D527D537D537D5252
%2752275227522752275227522727F827F8277CCAA7CAA17C767C7527F827
%F827F8FD042752275227522752275227522752275227522727F827F827F8
%27F827F8FD0E2752275227522752FD0427F827F827F8A8FD08FF27F82727
%27F8277DA87D7E7D7D597D7D7D597D7D7DFD0D52535252FD0427F8A7CACA
%C9A77CA1767C5127F8FD0627FD1152FD0427F8272727F8FD102752275227
%5227522752FD0627F82752FD07FF52F827F827F82759847D7D527D537D52
%7D537D527D525227522752275227522752527D537D5227F827F827A1CAA7
%CAA17C767651762627F827F8FD0427522752275227522752275227522752
%2727F827F827F8FD0B27F8FD04275227522752275227522752FD0427F827
%F827F827A8FD05FF7DF827F827F8527DA8FD0C7DFD0D52FD057DFD0427F8
%A7CACACAC9767C767C7651F8FD06275227FD1052272727F8FD0C27522752
%2752525227522752275227522752FD0627F827F87DFD04FF7DF827F827F8
%27FD047D537D527D537D527D53522752275227522752275227522752527D
%537D5227F827F8F876CFA7CA7C767576757C2727F827F827275227522752
%5252275227522752275227525252FD052752272727522727275227522752
%2752275227522752275227522752FD0627F827F82727FD04FF2727F827F8
%277DA87D7D537D7D7D597D7D7DFD0C52515252522752527D52525227F827
%F852C9CFCAA0767C5276514BF827F8FD042752275227FD0F522752275227
%525252275252522752275227522752275227522752275227522752FD0827
%F827A8FFFF52F8F827F827527D7D7D527D527D537D527D52522752275227
%52275227522752527D52522752275227522727F827F87CCACA51272027F8
%27F827F827F827F827275227522752275227522752275227522752275227
%5227522752275227522752275227522752275227522727F827F852275227
%27F8272727F827F827F8A8FFA8272727F82752A87D84FD087DFD0F527DFD
%0A52F8FD04277D5227F8272727F8272727F8272727F827275227FD1B5227
%52275227FD05522727F8FD0427522752FD0827F8277DFF52F827F827277D
%7D7D537D537D537D53522752275227522752275227522752525227522752
%2752275227522727F827F827F827F827F827F827F827F827F827F827F852
%275227522752275227522752275227522752275227522752525227522752
%2752275227522727F827F827F827F82727522752FD0627F827F852FF2727
%F827F87D7DA87D7D597D7D7D537D525227FD19522727F8272727F8272727
%F8272727F8272727F8FD04275227FD0552275227FD1552275252522727F8
%27F8272727F8272752275252FD0527F8FD04277DF8F827F827FD047D527D
%527D527D527D525227522752275227522752525227522752275227522752
%275227522727F827F827F827F827F827F827F827F827F827F82727522752
%275227522752275227522752275227522752275227522752275227522752
%2727F827F827F827F827F8272752FD0827F827F82752F827F82727847DA8
%FD0A7DFD0B527DFD0E522727F8272727F8FD0C2752275227FD0752275227
%FD09522752525227FD0752FD0427F8272727F8272727F82727522752FD0A
%27F8F827F827F827537D7D7D537D527D537D527D52522752275227522752
%275252522752275227522752275227522727F827F827F827F8FD0A275227
%522752275227522752275227522752275227522752275227525252275227
%5227522727F827F827F827F827F827F827F8FD0B27F827F82727F8272727
%F8FD077D597D7D7D597DFD195227F8272727F8FD08275227522752525227
%FD0F52275252522752275227FD0752FD0427F8270027F87C7C27F8FD0427
%52FD0A27F8272727F8F827F827FD047D527D537D527D537D525227522752
%27522752275227522752275227522752275227522727F827F827F8FD0427
%522752275227522752275227522752275227522752275227522752275227
%5227522752275227522727F827F827F827F82751CECE27F827F827275227
%27F827F827F8272727F827F827FFFD05277E7D84FD0A7DFD1A5227272752
%2752275227FD27522727F827F8272727F852A7CFCE7CF827F8272752FD04
%27F8272727F8272727F82727FF52F827F8277D7EFD047D537D527D537D52
%52275252522752527D7D5927522752275227522752275227522752275227
%522752275227525252275227522752275227522752275227522752275227
%522752275227522752275227522727F827F827F800277CCECFCEA7F827F8
%27F852FD0427F827F827F827F827F827F852FF5227F827277D7D847D7D59
%7D7D7D597D7D7D2752527D525252FD047D5227FD0F5227FD0F52275227FD
%1952FD0427F827F82751CECECFCECF2727F827F8272752FD0627F8272727
%F82727277DFF52F827F827FD067D527D537D527D525227597D522752527D
%527D52522752275227522752275227522752275227522727275227522752
%275227522752275227522752275227522752275227522752275227522752
%2752F827F827F827F851A0CFCECFCECE2700F827F827275227522727F827
%F827F827F827F827F8A8FF5227F827277D7DA87D7EFD077DFD04527D5252
%5253FD047DFD05527DFD0C522727F8FD0427FD075227FD19522727F82727
%27F852A7CFA7CEA67CFD0427F82727522752FD0627F8525227F827F852FF
%FF7DF827F82752FD057D527D537D537D275227527D7D2752275252522752
%275227527D52275227522752275227522727F827F827F827F8FD04275227
%522752275227525252275252522752275227522752275252522727F827F8
%27F82726272727F827F827F827F827F852275227522727F827F8F852FFA8
%522752A8FFFF52272727F8537D7E7D847D7D597D7D7DFD05527D7D522752
%525227FD1352F8272727F8272727F827F827F8FD0A275227FD0E5227F827
%2727F8272727F827F827F8272727F827F85227522752FD0427F827F87DFD
%08FF7DF827F82027FD057D527D527D535227522752527D52522752275227
%52275227522752275227522752275227522727F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827275227522752275227522727F8
%27F827F827F827F827F827F827F827F82727522752FD0427F827F8F87DFD
%08FF7D272727F8527D847DA8FD067DFD06527D7D53FD1952F827F8272727
%F8272727F8272727F8272727F8272727F8272727F8272727FD0852F82727
%27F8272727F8272727F8FD0427FD05522752FD0427F827F8A8FD08FFA8F8
%27F82727FD057D537D527D5952275227522752527D285227522752275227
%5227522752275227522752275227522727F827F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F8522752275227525252FD0F275227
%5227522752FD0427F827F827A8FD09FF27F82727277DA87D7EFD047D597D
%7D522752525227FD1C52272727F8272727F8FD0727F827F827F827F827F8
%272727F82727FD1D522752FD0727FD0AFF52F8F827F853FD047D527D537D
%527D525227522752275227522752527D5252275227522752275227522752
%2752275227522752F827F827F827F82727A0A7CEA6A77CA67C7C7651F827
%F827F827F852275227522752275227522752275227522752275227522752
%275227522752FD0427F827F852FD0AFF7DF827272752A87D84FD087DFD0B
%527D7D7DFD0B527D59FD0952FD0427F8272727F87CCECFCECFCECFCEA727
%27F8FD0427FD1F52FD082752FD0AFFA827F827F827FD047D527D537D527D
%7D5227522752525227522752527D537D53522752275227522752537D5252
%27522752275252522727F827F827F827F851A7CEC9CFCE52F827F827F827
%F85227522752275227522752275227522752275227522752275227522752
%2752FD0627F827F87DFD0BFF2727F827277D7D847D7D597D7D7D597D7D52
%277D7D7DFD07527D7D7D525227FD06527D7D7DFD0C522727F8272727F851
%CECFA751F827F8272727F8272752275252522752275227FD075227525252
%275227FD0752FD0627F827A8FD0BFF7DF827F827277D7D7D527D527D537D
%527D5252527D537D5252275227FD05522752527D52522752525227522752
%275227522752275227522727F827F827F8517C27F827F827F827F8272752
%275227522752275227522752275227522752275227522752275227522752
%FD0427F827F82727FD0CFFA827F82727277D7EFD0A7D52FD067DFD0A527D
%7DFD1552FD0427F827F827F8272727F8FD04275227FD0552275227FD0D52
%27FD0752FD0827F852FD0DFF2727F827F85259FD057D537D527D597D527D
%537D527D5352275227522752275252532752275252522752275227522752
%27525252275252522727F827F827F827F827F827F8272752275252522752
%525227522752275227522752275227522752275252522752FD0627F827F8
%F852FD0DFF7DF827F827277D597D7DA8FD047D597D7D7D597D7D7D597D7D
%5227FD075227FD0F5227FD0752FD0427F8272727F8FD04275227FD1B52FD
%0627F8272727F827F8A8FD0DFFA827F827F8272727F8272E7D7D7D527D52
%7D537D527D537D527D535227522752275227522752275227522752275227
%522752275227522752275227522727F827F827F8FD042752275227522752
%27522752275227522752275227522752275227522752FD0427F827F827F8
%27F827F8277DFD0EFF5227F8272727F827F827277D7D7EFD0E7DFD165227
%5227FD0752FD0527522752525227FD075227FD0B52FD0527FD0452FD0727
%F8272727F82727FD0FFFA8F827F827F827F827F827F8527D7D527D537D52
%7D537D527D537D53522752527D5252275227522752275227522752275227
%522752275227522752275252522752525227522752275227522752275227
%5227522752275227522727F827F827F8275252FD0427F827F827F827F827
%F827FD10FF52F827F8272727F8272727F8527D7D597D7D7D597D7D7D597D
%7D7D5952527D7D7DFD065227FD0952275227FD17522752275227FD085227
%F827F8272727F8275252FD0427F8272727F8FD0427FD10FFA827F827F827
%F827F827F827F8527D7D527D537D527D537D527D537D527D537D527D5252
%277D52522752275227522752275227522752275227522752275227522752
%27522752275227522752275227522752275227525227F827F827F827F827
%F8272727F827F827F827F827F827F827A8FD10FF52F8F827527DFD0427F8
%27F8527DA8FD127D5252527DFD0C5227FD2352FD0427F8272727F8FD0727
%F8272727F8FD0427FD12FF7D527DFFFFA827F8F827F827F8527D7D597D52
%7D537D527D537D527D537D527D7D7D2752527D5252275227522752275227
%522752525227522752FD0527522752275252522752275227525252275227
%5227522727F827F8272727F827F827F827F827F827F8275227F827F852FD
%19FF52272727F827277D7D7E7D7D537D7D7D597D7D7D597D7D7D597D7D7D
%27527D7D27FD125227F8272727F827FD0652275227FD0952FD0427F82752
%A14B272727F8272727F8FD0427FF7D27F827A8FD1AFF27F8F827F82727FD
%057D527D527D527D537D527D537D527D5352275253522752275227522752
%27522752275227522727F827F827F827F827275227522752275227522752
%275227525227F827F827F8512727F827F827F827F827F82727A8FFFFA8A8
%A8FD1CFFFD062752A87D847DA8FD0F7DFD1452272727F8272727F8FD0427
%52525227FD0B52FD0427F8270027F8272727F8272727F827F87DFD23FF27
%F8F827F82752A8FD0A7D527D537D527D537D525227522752275227522752
%2752275227525227F827F827F827F827F827F82727522752275227522752
%525227522727F827F827F827F827F827F827F827F827F8277DFD23FFA8F8
%27F827F8277DA87DA87DA87D7D7DA87D7D537D7D7D597D7D7DFD1252F827
%F827F851524BF827F827F827FD085227522727F8272727F8272727F82727
%27F8272727F8FD0427FD25FF7DF827F827F8527D7D52FD097D527D537D52
%7D537D5252527D275227522752275227522727F827F827F8517CA17627F8
%27F827F8272752FD0427F827F827F827F827F827F827F827F8FD0727F827
%F852FD26FF7DF8272727F852272727527D7E7DA87D847D84FD087DFD0D52
%27F8272727F8274B76527C5127F8272727F8272727F8272727F8272727F8
%272727F8FD0427525252FD0427F82727277DFD27FF27F827F827F827F827
%F82752FD097D527D537D537D525227522752275227522752F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F8272752
%27522752FD0427F827F827F8A8FD27FFA827F8272727F8272727F827527E
%7D847D7D7DA87D7D53FD057DFD0B5227F827F8272727F8272727F8272727
%F8272727F8272727F8272727F8FD042752275227522752FD0827F852FD29
%FF7DF8F827F827F827F827F82727FD097D527D537D525227522752275227
%5227522727F827F827F827F827F827F827F827F827F827F827F827F8FD04
%27522752275227522752FD0627F827F8F87DFD2AFF52272727F8272727F8
%FD04277E7D847DA87D84FD077DFD0D52FD0427F8272727F8272727F8FD08
%2752275227525252275227522752FD0627F8FD0427FD2CFFF8F8F827F827
%F827F827F82027FD097D537D527D52522752525227522752275252522752
%FD0D275227522752275227522752275227522752FD0627F827F827F8A8FD
%2CFFA85252F8F8277DF827F8272727F87D7D847D84FD067D597D525227FD
%0B5227525252275252522752525227522752275227522752275227522752
%2752FD0627F8272727F852FD2FFFA87D52A8FF7DF8F8F827F827F852FD06
%7D537D527D527D5252275227522752275227522752275227522752275227
%52275227522752275227522752275227522752FD0627F827F827F827A8FD
%35FFA8FD0427F827F8277DA87D847DA8FD087DFD1E5227FD05522752FD08
%27F82727277DFD38FF27F8F827F827F8275284FD067D527D537D537D527D
%525227522752275227522752275252522752525227522752275227522752
%52522752FD0627F827F827F8F852FD3AFF5227F827F827F82727FD047DA8
%7D7D59FD077DFD10522752525227522752275252524B522752FD0827F8FD
%0427FD3CFF7D27F827F827F8F8F8FD077D527D537D527D527D5252275227
%52275227522752275227522752275227522752275252522752FD0627F827
%F827F8F827FD3EFFA852F8272727F82727527DA87D847DA8FD097DFD0D52
%275227FD06527D7D7D5252FD0D27FD41FF52F827F827F827F8277DA8FD06
%7D527D537D527D5252275227522752275227522752275227FD06527D5252
%FD0827F827F8F8F8A8FD42FFA8FD0427F827F82752A87D7E7DA8FD067D59
%7D595227FD0752275227FD0552275252522752FD0A27F82727A8FD44FFA8
%27F8F827F827F82727FD047D84FD047D537D527D53522752275227522752
%275227522752275227522752FD0627F827F827F8F8F8A8FD47FF7D27F827
%2727F8272752527D525252A87D7EFD067DFD0652275227FD09522752FD06
%27F8272727F8A8FD49FFA827F827F827F827F827F827F82727FD057D537D
%537D52522752275227522752275227522752FD0427F827F827F827F827F8
%A8FD4CFF7DF8272727F8272727F8FD04277D7D7EFD067DFD065227525252
%2752FD0627F8272727F827F82727FD4FFFA827F8F827F827F827F827F8F8
%27FD057D537D53522752275227522752FD0627F827F827F827F827F82752
%FD52FF7D27F827F827F8272727F82752A87DA87D7E7D7D7DFD07522752FD
%0827F827F827F87DA8FD54FFA87D525227522727F827F827527EFD047D53
%7D525227525252FD0627F827F827F827F82752A8FD5DFFFD0427F8277D84
%7D84FD067D5252FD0627F8272727F827277DA8FD5FFFA8F827F827F852FD
%067D527D597DFD0427F827F827F827F82752FD63FF7DF827F827277D7DA8
%7D84FD057D52FD0827F852A8FD65FF52F827F827277D7D7EFD047D537D27
%27F827F827F8F8F8A8FD67FFA8272727F827F8527DA87D7D597D7D52F827
%2727F82727FD6AFF27F8F827F827F82759847D7D5952F827F827F8F827FD
%6CFF2727F8272727F827527D7D592727F827272752FD6DFFA852F8F827F8
%27F8272852F827F827F82752FD70FF7D27F8272727F8272727F827F8277D
%FD72FFA827F827F827F827F827F8F87DFD75FF7DF8FD0527F82752FD77FF
%A827F8F827F8F852FD7AFF27F8F82752FD7CFF525252FD36FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-19T18:27:51+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-19T18:27:51+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-19T18:27:51+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>252</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA/AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FVO4keO3lkjXnIiMyIN+RAqBt44q/PHUvNXmLUNfm1+5v5/wBLzSGVrtJGSRWJrRGB&#xA;BRV6KB0GKsr0n8/Pzc0xFjh8xTTxr+zdpFck/N5kd/8AhsVZjon/ADlt58tXUarp9jqUI+1xV7eU&#xA;/J1Z0H/IvFXtHkH/AJyF8gebTHayXH6G1Z9hZXzKqux7RT/3b+wPFj4Yq+afzz8xeY7/APNHWk1G&#xA;eZP0bdvb6dCWIWKCM/umjApx5rR6964qu8qf85Afmh5cKRpqranZpQfVNRBuFoOgEhImUfJ8Ve2e&#xA;T/8AnLLynqHCDzNZS6NcGga5irc2xPieIEqfLi3zxV7Ro2vaLrdkt9o99BqFo2wmt5FkWvWhKk0P&#xA;sd8VR2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV8Y/85BflTd+&#xA;UfM02sWURby7q8rSwSKDxgnclngc9BvUp/k7djiryYUqK9O9MVZPbeRbjVLA33l+6j1IRis9mf3N&#xA;1GfAxklSPAht+2GlY3cW1xbTPBcRPDMho8UilWB9wd8Cr7m9u7oxm5mecxIIo2kYsVRfsoCf2R2H&#xA;bFVDFW+LcS1DxGxPap6fqxVMNC8xa7oF8t/ot/Pp92tP3tu5QkD9lgNmX2bbFXu3kT/nLTU7b07T&#xA;znYi9hFF/SVkFjn+ckJIjf8A2JX5HFX0J5T88eVPNll9c8v6lFfRgAyxqeMsde0kTUdPpGKp7irs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVSbzB508peXU5a5q9pp5pURzyqsjD/Jjrzb6&#xA;BirzbW/+cqfywsCyWP13VnGytbwenGT7tO0TU+SnFWFal/zmLMWK6Z5ZVVH2ZLm6LE790SNabf5W&#xA;Ksduv+ct/wAxpdoNP0q3Xah9Kd2+9pqfhiqRa1/zkd+Yetafc6dqaaddafdgrNayWqshWtQN2J2P&#xA;Q1qOvXFXlx6+GKorS9Uv9LvY72wmaC5jPwuvh3BHQg9wcVe5QW+j+b/LNjea3p4aaeKplVeLIwJB&#xA;KP8AaAJFQMkxefeYvysvbVnm0aQ3luNxBJRZgP8AiLfh8sFJtg00M0ErQzI0UqGjxuCrA+BBwJRe&#xA;iWVzf6nDZWwDSzkqFPSgBJr8qYqiL/SGt53hlX0po2KsBQioND02P0Yql0ttLHuRVf5h0xVW0vVt&#xA;T0m+iv8ATLqWyvYTWK4gdo3X5MpGKvf/AMu/+cr76Ax2Hne2+tRbKNXtVCyqPGWEUV/mlP8AVOKv&#xA;ozy/5k0HzDpyalol9Ff2UnSaFq0PXiw+0jDurAHFUyxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVxI&#xA;AqemKvKPP/8Azkf5D8rGS0sJP09qyVU21owEKMO0lxRkHyQMR3AxV8+ecf8AnIn8y/MbSRxX/wCh&#xA;rBtha6dWJqf5U9TMfejAe2KvNJZZZpGlldpJXPJ3clmJPck7nFUfp3lvX9SobDT57hD/ALsSNuH0&#xA;uRx/HFWQ2f5R+dLinqQQ2oP+/pVP/Jv1MNItNYfyQ1s09fULZPHgJH/WExpbRSfkZOR8esKp8Fty&#xA;f1yDGltcPyLeu+tAD2tq/wDM3Glto/ka6vVtZX0RuzfVyGp329QjGlt6Zo9nZ2Wl29laA/VrZBEg&#xA;bqQopU+56nChA6lPa2k/GRxGr/ZLbLXwr0wqlGq6J5f1tFW8iinbpHKpAkH+q6mv0Yqghoej+W9P&#xA;ll0yFYbp6Ks7/HIakVFWrtQdBg5JYjeW4lZvWXmHJNfc/qyKUmu9Mkjq0Xxp3Hcf1xVKpbON9x8D&#xA;eI6fdiqClgkiPxDb+YdMVTXyt5w8y+VdSXUdAv5bG5FOfpmqSAfsyRmqOvswOKvo7yB/zlfo976d&#xA;l5ztP0bcmi/pK1DSWzHxeP4pI/o5fRir3fS9V0zVbKO+0y7ivbOYVjuIHWRG+TKSMVRWKuxV2Kux&#xA;V2KuxV2KuxV2KuxVjvnjz/5Y8laSdS126EStUW1slGnncfsxR1Ffc9B3IxV8kfmb+fvm/wA6tLZQ&#xA;OdI0BqqNOt2PKVf+XiUUL/6oovseuKvNrSzu7ydbe1heeZ/sxxqWY/QMVeg+X/yb1O5CzaxMLOM7&#xA;mCOjSU923UfjhpFvQNK8g+VNIQPHaI8i9ZpvjeviC1afRhQmUN2IS6otYyaqCaEYVXHUpeyKPnU4&#xA;q1+kZ/BfuP8AXFWxqM3dVP3/ANcVXfpM0/u9/n/ZjSoee5klO5ovZR0xVqK4liqEagPUdcVQ19bp&#xA;eQyRTb+oPtdwex+jFWCyxvDM8bbPGxU08QaZBk6SaaSnqOz06ciTT78VUyARQ7jFVCS27p92KpZe&#xA;aakpLKOEv4H54qk0sTIxSRaEdQcVQc1ip3j2P8vbFUG6MjcWFDiqeeUfPXmvyjfi98v6jLZyEgyx&#xA;A8oZR4SRNVH+kbdsVfUn5Vf85I6B5qkh0nzAiaPr0hCRPU/VLhz0EbNUxseyOfkxO2KvZsVdirsV&#xA;dirsVdirsVdirEfzG/NDyx5C0sXerymS7mB+padEQZ52HgD9lB+052HuaDFXw/5v83a35s1651rW&#xA;J2mubhjwQklIo6krFGD9lErsPp64qmPkjyDfeZnacyC302F/Tmn6sWADFUHjRhucICLe16D5Y0bQ&#xA;rYQ6fbrGT9uU7yOfFmO+FCOnvI4tvtP/ACj+OFUrvb0iJ55iSkYLFVFdh4DFWIXHmDUJLj1I3McY&#xA;NUiFKUHj45G00j4/Ni/7styPEq1fwIw8S0iE80ac32lkX5gH9RxtaVl8xaSespX5q38AcbRSout6&#xA;Welwv01H6xhtaVV1PTm6XMX0uB+vG1VVngb7Mit8mBxVD3erWFshLyhm7RoQzH7sbWmPafpzatcz&#xA;3Ej+nHyLNTc1Y1oPlkQLSrX2k2OnxSGYvJ6i0tiNuLiv2vwxpUkwJdiqlPFzWo+0OmKpfcW0Uy8J&#xA;F3HQ9xiqU3OnTw1YDnH/ADDqPmMVQUkaSLRxUYqgp7N03T4l8O4xVD4q+qf+cafzivdcU+TtfmM2&#xA;oWsRk0u8c1eaGP7UTk/aeMbqe61r03Ve/Yq7FXYq7FXYq7FWHfml+ZekeQPLb6nd0mvp6xaZYVo0&#xA;8wFfoROrt2+ZGKvh/wA1eatc8065ca1rVwbi9uDueiIg+zHGv7KL2H8cVTTyP5CufNBuXM5s7W3o&#xA;PX9P1A0h34Ack6Lud9tsICHtfl/Q9P8ALmjxafbMTGhLPI/2ndvtMaf50woVJ76R6qnwL+JwqhcV&#xA;S7XL+O2snSv72YFEXvvsT9GJUMOyDJM7HQp7y0NwkqLuQFavbxI6YaRaWHY4EuxVrkpNKivhireK&#xA;uxV2Kplo2riwMiuheKSh26gjCCgh2s6wL8xqiFIo6nfqSfliSoCUPOqvxI+ZwJbnnigiaWVgkaCr&#xA;McVYfqfme9uJCtsxggH2eOzn3J7fRiqFt9c1GFwWlaZe6yEt+J3GKslsL+G9h9SPYjZ0PVTiqlfW&#xA;MDRvKBwdQSadDT2xVj967rEOJpU0JGKoAknrvir1b/nHPyf5l1P8xNK1qztpI9K0yR5bvUCpWID0&#xA;2QxK/Rmflx4jtvir7RxV2KuxV2KuxVAa9rmmaDo13rGqTC3sLGMyzynsB0AHdmOyjudsVfCP5lfm&#xA;DqvnrzRcazfExwf3Wn2darBbg/Cg8WPVj3PtQYqhfJ3kzUvMt7whBisYmH1q7I+FR14r/Mx8PvxV&#xA;7zY2enaHp0On2UYSKFaIg6k92c9yepOSYqEsrytyc1PbwGFUPcXVtbJznkWNe1TufkOpxVKzrsl1&#xA;N9W02LlIf92ybKAO9MFppKdW0zUYf9JuXE3I0aRSTQ+FCBtgIVLMCVyzSopVHZVb7SgkA/PFVuKu&#xA;xVQWAiXnXatcVV8VT/T/AC5b3FnHPJKwaQcqLSg+/JAItJr23FtdSwBuYjagYd8ilRxVosB1NPni&#xA;q1oo2bkRvirFPNmpNJcCyjP7uKhkp3c/0GKoj8v/AMv9W866wbCxYQW8KiS8vXBZIkJoNhTkzfsr&#xA;XfK8mQRDPHjMiyD8zfyY1PyZax6lb3Q1LSnYRyy8PTkikIJHNKuOJpswPse1Y48wlszyYTHdgGn3&#xA;0lncCVN16OniMuaWYRyQ3MAdDyikX8DiqQXtrwd4G6dj7djiqTMpVip6g0OKvtj/AJx185J5k/La&#xA;yhkI+vaKf0fdKKAlYwDC9P8AKjIBPdgcVen4q7FXYq7FXYq+Sv8AnJn81TrutHyjpM1dH0qT/TpE&#xA;Pwz3a7FajqsPT/Wr4DFXjvl/RZ9Z1WDT4XWL1T8czkBUQfaY1p9A74q+iNL0e20TSYtP02ICOIdT&#xA;9pmP2nbxY5Jih2LFiWry7164VWsKgipFe464qk2q6BHLG88TuZ1BNHYtyp233wEJtJ9Dv4rO8Ly/&#xA;3bqULDem4NfwwAqUz1zWbOayMFu/qPIRUgEAAGvce2ElQGOZFKjdXUNrbvPM3GNBU/wAxVhGo67f&#xA;3kxcSNFED8ESEgAe9OpxVONC8yx+mLe/kIkBokzbgjwY+PvirJOuKt4qsk1G8iUwxTOkfdQxA39u&#xA;mKqH1p+PQcvHFVaKUODtQjqMVamiMlKGlPHFVEs8TceWw3PhTqcVYBPM008kzfakYsfmTXFX1j+R&#xA;/lqDRfy/sJQv+laqPr1w9NyJR+6HyEfH8c1+eVyc/DGou/MO9juxPp0ih7aKNllRujM671+g0yEd&#xA;t2ct9ny/5k0STSNTe3NTA3x27nuh/iOhzYY58QtwMkOEr/L+omGb6rIf3Up+D2f+3JsE31W2LxiV&#xA;R8Sfa/1f7MVYrcI6ytyHUkg+NcVT7yR+YHmryVqf6Q0C8MDPx+s2z/HBOq1ossfRupoeo7EYq+wv&#xA;yn/Ojy9+YFn6S0sNfgUG60x2BJHeSBjTmnj3Xv2JVeh4q7FXYq83/P7z9feTPIEtzpwK6lqUw0+1&#xA;uB/ukyI7tLX+ZUjPH/KoexxV8QEkkkmpO5JxVrFU70Hzj5i0ORTY3jiFettIS8JHhwPT5ihxV760&#xA;qXenWt+E9NriNJCh6gOvKh+WTDFD4qgNV1OCzgYEgzOCI4x137n2xJVhmQZOxV2KsP8ANeoma7Fm&#xA;h/dQbv7uR/AYqhNF8s+YNc+sfoewmvzaIJLhYELlVY8RsNySegG/3ZGUgObKMSeShqmkarpN19V1&#xA;OzmsrniH9G4jaN+LdDxYA0wgg8kEEc008vawykWkrnwhY/8AEf6YUMoinD7Ns368VanhLfGvXuMV&#xA;Q2Koq2ZihB7dMVVsVUp4+UMgA+NkIB+YxV5tir7J/KvVLfUvy80CaBgRDZxWsgHZ7ZRCwP0pXNbl&#xA;FSLscRuIYN5w1Jpdd1ABvTgjlZGFaCqfCxP0jIhk808733l690xovrkTXsJ52/Al/i/aQlA1OQ8e&#xA;+ZOGMgeWzj5pRI57vOwSCCDQjcHMtxGZ6bdfWrOOVt2Io/zGKoPUdOVVMsYqn7adae+KpFcWdKvH&#xA;07r/AExV2larqOk6lb6lptw9rfWjiW3njNGVh/nQjvir7d/Jv81rH8wPLvrPwg12y4pqlmvQMfsy&#xA;xg1PpyU+g1HuVXoGKuxVJvN/lDQPNuhTaLrlv69jKQ+xKPG6/Zkjcbqy/wBh2JGKvif8zNJ/LbRN&#xA;Sk0nyhd3mrywvS51O4kiNuKf7rhEcaepv9qStPAd8VYUiPI6pGpd2ICqoqST0AAxV6d5N/KSR/T1&#xA;DzH+6iFHTTwaMR1HrN+yP8kb+NOmGkW9HurgSEIgpEmyjpkkKGKsN18INVm4/wCTX58RXIlIS/Al&#xA;2KrZHWONnb7KAsfkBXFXm00rSyvK+7SMWY+5NcVfVv5FeVotD8h2lyyUvNYAvZ378HH7ha+Ajo3z&#xA;JzX55XL3OfgjUfex786NGtfMizBUCXmnLwtJu5YH4kb/ACWJp7dcOKfCjLDifOckckUrRyKUkjJV&#xA;lOxBBoRmeHBT3TdelYLHOAxUULD7RHjirKbaZZYVcGoPfxxVt4I3NTsfbFVyoFWi7YqowrMJCWrT&#xA;vXFURirAddshaalLGpBRj6iAdg29D8sVTfyp+ZPnDyraXNpot76FvcnmyOiShX2HNBIGAYgUPjkJ&#xA;44y5s45DHkk+ra9rOr3ElxqV5JcyysXcu23I9TxFFH0DDGIHJEpE80D1yTFxVh1BHzxVOtAumgBV&#xA;/wC6kbb2PjirIiARQ7g9RiqT6hY+i3qIP3THp/KcVSS8t+J9RR8J+0PA4qnn5c+edR8k+bLPXbMs&#xA;yRN6d7bA0E9s5HqRnt0FVr0YA9sVffGlapZarplpqdjIJrO9iSe3kH7SSKGU/ccVRWKvmT/nIn88&#xA;5ZZrnyX5YuONulYda1CI7u3RraNh0UdJD3Pw9K1VfPmm6Zfanex2VjC09zKaIi/rJ7AdycVe4eTf&#xA;IGl+WYFu7rjc6qR8dwRVUr+zED/xLqfbpkgEWnlxdPMadEHRf64UKOKpTrGuR2qtDAQ1ydj3CfP3&#xA;9sBKQGKO7OxdyWZjVmPUk5FLWKonTrCS+uRChC7FmY9gMQFWeaNIl0/TrhvU9RHhl4sBQghD2qcJ&#xA;CLeV4EvujRooodIsYoaejHbxJHSlOKoAOntmqPN2g5PL/Nc6LeXsTMDK071Ue0hNckxeM/mNpUcN&#xA;3BqEQoLkFJgP50Gx+lf1Zl6eVinF1EaNsStmKzoR3NPv2zIcdmOhSlLYh/sljxxVNwQRUdMVbxV2&#xA;KrJWZYnZBVgpKjxIG2KvN5ZZJZWkkJaRySzHqScVVY7KV1DEhQfHriqIWxhHWrfP+zFVeOJRsi/Q&#xA;BiqISxun6RGnvt+vFUVb6TLzVpSAoNSo3O2Kpriq10V0KMKqwoRirHrqD05HhbcDb6D0xVJ5YzHI&#xA;UPbp8sVfU/8AziZ52a+0G/8AKV09ZtKb61Ygnc28zfvFA8ElNf8AZ4qyn/nIb8zn8m+UvqenTenr&#xA;2s8obRlNHhiA/ezjwIBCp7mvbFXxhBBPc3EcEKGWeZgkaLuzMxoAPmcVe++SfJ1p5W0sySgSanOo&#xA;N3MPvEaf5I/E7+FJAMUzmmeVuTH5DsMKoeaeGCMySuEQdWOKsd1PzJJLWKzrHH0Mp2Y/LwyJKaSM&#xA;kk1O5PU4EuxVHaVYQXkjrNMIQq1HSp398ICrba6bTb93hYSqhZCezrX2+WKt6zqkmqRiKRBHFRhx&#xA;BrXkKHfElFPJ5oXhmeJxR42KsPcGmBL6j/Kf80NAv/JEKarfw2V7o0KQXouJFTlHGOEcq8iOXJQA&#xA;aftfMVwMuIiW3VzsWUGO/R5Xrv5m6Q2oXM0KyXkksruZFHBCWYnYt8X/AAuSjp5dWMtREcmJeaPN&#xA;ya3aQ26Wxg9OT1CxflXYinQeOX48XCWnJl4gx2Jgsis3QGpy5pZBpGqIzrb1qGPw9iCcVZHaud0P&#xA;zGKojFXYq0RUEeOKpa2iWpm9YwxmSteVO/jTpiqp+ioSamOP6Biq5dKtB+wv/AjFVrIiMVQUA2xV&#xA;qh8MVadlRS7kKo6sdgMVSi68y20b8YYzMB1avEfRscVTCxvYry3E0dQK0ZT1BHbFUv1dKXIb+ZR9&#xA;4xVJr+PZZB8jirNPyF8xvoX5qaHLyKwX0v6PuBWgZboemlfYSlG+jFWvz283yeZ/zL1a4D8rPT3O&#xA;nWIrUCO2YqxHs8nN/pxVF/kvoNtc311rExV3sqRW8fUq8gNXI/1dh9OEIL1HUZauIx0Xc/M5JCBc&#xA;yBlCqCCfjJNKCn44qkXmaxrELsOx4kK0ZNVAPceGApDHMil2KqyWkz2sl0tPSiYK1TvU+2KqOKux&#xA;V2KsQ8229ol2ssbj6w4/fRDrsNm9sVSDFXYquWORvsqT8hiq70Jv5G+7FUfo9jd/pCJzEyoh5MzA&#xA;gUp74qzK1U1LdugxVu6ZgFHY9cVWW7MHoOh6jFUXiqm86IaGpPtirZlX0y43GKujfmgalMVWyQRs&#xA;SxNPHFUo1HzNZ2gMVqBPKNqg/AD7nv8ARirF77U72+flcSFgN1QbKPkMVQuKsg8rvJSdKfuxxav+&#xA;UdsVRGrTwuyou7oTUjpv2xVKrpawP7b/AHYqhdOvZLHULW9iqJLWaOZCNjyjYMP1YqmHm/yvrnlj&#xA;zBd6NrURjv7dzyYnksitusqN+0rjcH798VZ3+RaVk1p6nYWwp239X+mEIL0e/gKt6tahzv7HJIQm&#xA;Kpd5hp+iZq/5FP8AgxiVDDsgydirjUbHbxGKuxV2KuxVguvWN3FqczujMkzlo3AJBBOw+jpiqlBo&#xA;95IfjjZR4U3/ABxVM7fQZdqKqn3+I/hXFUyh8vr1lcn2G39cVR0Ol2kX2VoR37/ea4qri3iHavzx&#xA;VUAA2HTFXMqsKEVGKtKir9kUxVTjjkWRmJ2OKqc0LlyyioOKq0KFI6Hr3xVDajqtnp8dZm+M/YiX&#xA;dj9GKsR1PX72/JQn0oO0Snr/AKx74qs0TQdZ13UI9O0ezlvr2X7MMKljTuzHoqjux2GQnkjAXI0E&#xA;gW9T1X8lLDyN5LuPMnnW6WbUnAh0zRLZvgNzIp4CaUULBN2ZUp9n7RzAhrTlnw4xt1LMwobvHVVm&#xA;YKoqxNAPc5smtkzL+jdPjt0NJXq0rjx7/wBMVSY36ctlJHjircl1C8LgGjEdDiqDghknmjhiHKSV&#xA;giL4sxoBir1r/nKQH/la8/vZW3/ETiqE/I+4ijfWUc0d/q3EU609UH9eEIL1K+FbZvah/HJISvFU&#xA;l80zcbKOLvI/4KP60wFIQelWNrLo13NJGHlHPi3ccUBFPpwBVLywkDX7eoAXVKxA+NdyPfEKUd5p&#xA;t4fq8c+wlDcPcggn8KYSoY0ASQAKk7ADIpXzQzQvwlQo/Xiwod8VWYqskiWQCvbocVSvUtU07TpF&#xA;jlDySsK8EpsPE7jFV9p5h0eYALKIWP7Mg4/j9n8cVTJHR1DIwZT0INRiqy4DmP4fHenhirVsHCnl&#xA;WnauKq2KuxV2KuxV2KpDrfmVLUtb2lHuBs7ndUP8TirEpZZZpGklYvIxqzMak4q9Z/K3/nH7WPNU&#xA;Uer63MdK0A/EKUNzMo3+BTURqR+0/wAwpG+a7VdoRx+mO8mcYW9/ttT/ACj/AC00drW3vLHTIkHK&#xA;SJJFlu5mA+0yqXmkb/PbNQY5s8rIJ+5t2D5g/N780bvz95hFwivb6NZAx6ZZuRyCtTnLJQkepJQV&#xA;p0AA3pU73R6UYo1/EebTKVsd8uWHqTG6cfBHtH7t4/RmWxRutrVl90IxVjGKq1xZXlsIjcwSQCdB&#xA;LCZEZOcbfZdeQHJT2IxVmX5KeV5PMn5maHZcOdtbzre3n8ohtT6pDezsoT/ZYqzr/nLmxaL8wNNv&#xA;APgutMjWv+XFPKD/AMKy4qwz8m7gL5huLcmnqwhx7mNx/BsIQXs16K2z/R+sZJCVYqxXzPOXv1i/&#xA;ZiQfe25/hkSkKvli7QNLZyHaX4kB7mlGH3YQpQOp2E2nXY4MQjHlDIDQ/KviMBCUJPc3E5BmkaQj&#xA;pyJNMCrEdkdXU0ZSCp9xviqreXk93N60xBegGwoKDFVHFXYqxDzXp06XbXw+KCXipP8AKwFKfTTF&#xA;UgxVUinnhPKGRoz4oSv6sVRsfmHWYxRblj/rBW/4kDiqr/ijWf8Afq/8Av8ATFV6ea9XXqyP81/p&#xA;TFURF5yux/e28bf6pZf18sVRsHnGyY0mheL3FHH8DiqeQTxTxLLEweNxVWGKqmKvOtSiaHULiNgQ&#xA;VkalfAmoP0jFUNirsVdiqMsNLvL6QLDGeFfilI+ED54qzOLT47S1WOM/CgA6dT3OKpRrbDkg8FJx&#xA;Vi+Kvvbyl5S0TUPyx8t6PrenQX0Eel2YkguIxIBJ6CFiOYqp5eFDiqZ+V/IHk3yqZW8v6TBp8k4p&#xA;NLGC0jLWvEyOWfjXtWmKvGv+cwdEaXQvL+tqNrS5ms5CPC5QSLX5fVz9+Kvn38vdRFh5w0yVjSOS&#xA;X0HrsKTDgK/JmBwhS+hbkVt5PlhYpRhVIvM9hziW7QfFH8Mn+qeh+g4CEhjSsykMpIYbgjYg5FKv&#xA;c393dKizyGQR141p3+WKonRdPgvbpo5mKqq8gq7E7gYQEFT1PTZrK4ZGBMRP7uTsR8/HEhKDwK7F&#xA;VeewvLeNZJomRG6E/wCe2NKhJ4IbiJoZlDxuKMpxVieqeVbiAmSzrND14ftj/mrFUiIKkgihGxBx&#xA;VH6HBok+oJDrN3NY2UnwtdwRC4aNj0Zoi8ZZR3o1fCuQmZAekWUh7Vpv/OLtprGnwalonnKC/wBP&#xA;uF5RXK2hAO9CNp23HQg7g7EZrJdqGJqUKPv/AGNnh+a2f/nErzOqkw67ZOQf20lQU8agPiO1ofzS&#xA;jwi8d80aAmg6xNpg1K01R4DSS4sGkkhDV3Tm6R8mHfjUe+bLFk443RHvYEUlSqzMFUEsTQAdScsQ&#xA;zjy/BNbWSW8v2t2I8KmtMVTQso6kDFVKW0tJmDywxyMOjMoY/eRiqxtM05vtWsR/2C/0xVS/Qmk/&#xA;8ssf3Yquj0jTIzVbWMHx4g/rxVFgACgFAOgGKrLgqIHZjRVFST7b4qxHWLpJeciV48eIr/n74ql+&#xA;jabNqmsWOmQ/319cRW0dP5pnCD8WxV+jMEEUEEcES8YolCRqOyqKAfdiq/FWFfnN5XPmX8tdc02N&#xA;eV0kBurQDr6tsfVVR7vwKfTir4OR2R1dCVZSCrDqCOhxV9HaLr8GseXLW/Uj1LiMeog7SD4ZB8gw&#xA;OSDFd6UnDnxPD+bthVTdFdGRxVWBDA9wcVSHTtAVL+f6wnOCP+55dG5d/oGABNq+qeXoJo+dogim&#xA;X9gbKw8PY4kLbHIJrizuRItUliO6n8QRkUp1ceZLS4spIngb1HUrx2Kgkda1r+GStFILR9HS/WVm&#xA;l4enQAAVNT3OABSUvNYpjQgmNtj2PE4EppqmvC9tRAsXAkhnJNenYYSUUlGBLsVQGo6NY36n1U4y&#xA;/szLsw+fj9OKsL1LTbjT7j0phUHeOQdGGKsq/LD80tc8h6uJ7ZmuNJnYfpDTGaiSL05p/LIB0b6D&#xA;tmLqtLHLHfn3soyplX5rf85Cax5rSTStBWXStBYFZSSBc3APaQqSET/IU79yemUaXs+OPeW8mUp2&#xA;8gzYtaeeX9Nl9ZbuQcUUHhXuSKYqyu3jKjkep6fLFVKevqmv0fLFURb19IV+j5YqqYqpS+qDVPsg&#xA;bjFUKHflUE1xVH4qkeuagrL9Viau9ZSPb9nFWOX7UjVfE/qxVm//ADj3og1b82tDV15Q2TyX0vt9&#xA;XjZoz/yN4Yq+4sVdirsVfCP50+SW8ofmFqenxxlNPuX+u6aaUX0JyWCr7Rvyj/2OKoDyn58uNAsZ&#xA;7Q2/1pHcSQgvwCEij9mrWgwgopmOifnRp7stvqli1vEdvXib1QAf5kopp8q/LG1pm6NaXVsl7YTL&#xA;cWcoqkiGoySFmKuxVLNY0aO9T1I6Jcr0bsw8DgIUFiUsUkUjRyKVdTRlPUHIsnK8sdeDMnIUNCRU&#xA;YqtxV2KuxVRnmKUAG58cVbhlMgNRQjFVPUNPt763MMw26qw6qfEYqwy/0DUbSQj0mmjr8MkYLAj3&#xA;A6Yqst9E1KYj9y0SH9uQFR+O+KpvY+WkSblM3rAfZQCg+nFWQw2ypQt1HQdhiq+SZUNDucVbR0kF&#xA;adOxxVfiqyWWOGNpZWCRoKsx6AYqlsfmbR3k4esV8GZSBiqYxiBwJI+LKd1ZdwflTFWNXWq3c0j0&#xA;kKRE0VF22xVI5byUueBoo6e+Kqc85l4kihAofnir3r/nD/SxL5p17VCtfqllHbhvA3MvP5VIt8Vf&#xA;VOKuxV2KvIv+ckvy5k81eTRqmnwmXWdC5TxIgq8tswHrRgDckcQ6/IgdcVfH+l6Tqeq6hDp2m2sl&#xA;3fXDcIbaFS7s3sB4d/DFVbXPL2u6DfGw1qwn0+8A5ejcIyEqdgy1+0vuNsVTPyX51v8Ay1fclrNp&#xA;0p/0q0J2I6c0rsHH498Ve3wS2d/Yxajp0gmtJ15ow8O+3t0I7ZNisxV2KoO80q0u5oppF+OMgn/K&#xA;A/ZbGlX3thBd25hkFB+ww6qexGKsTFmlrqSwX4IiB+IjaqnowPhkWTtV05rK5KDeF/iibxHh8xiQ&#xA;qCwKpTRBxyrQjFVG3cq9KbNtiqLxV2KrRJGxKhgWHUAgnFWwAOgpirTOq/aNMVUJozIeafEDtiqp&#xA;bxsgPLqe2KquKsT82an6kwsYz8EXxS07v2H0DFWO4qj9M1i7sH/dtyhb7cR6fMeBxVUv7qAqz21e&#xA;Dmgr1FRU/diqWYq7FX03/wA4cxoLHzTIB8bS2SsfZVmI/wCJHFX0birsVdirsVQdvouj217LfW9h&#xA;bw30/wDfXUcSJK9f5nADN9JxVJ/Pv5f+XfO+hyaVrMAbYm1u1A9a3kI2eNv1joe+KviH8wfIGueR&#xA;/MUujaqvKnx2l2gIjnhJosiV+5h2O2Kpj+WfnY6HqH1C8kppV4w5FukUh2EnyPRvv7YQgvaprCN6&#xA;tGeJO9O2SQhXs7hf2eQ8Rviqk8UiU5qVr0riq3FUBq+mJfW9BtOm8TfwPscSFSH65HLp0lje1Se3&#xA;3gcg1qu3A0+7IpSrAl2KrFhjVuQG+Ktu6opdiFVRViegAxVhmteYJ7yQxW7GO1G1BsX929vbFUoR&#xA;2RgyEqw3DA0IxVlGg+ZDIy2t83xnaKY9/Zvf3xVOrlW517U64qvtVYKSeh6Yqr4qhNUvlsrGW4O7&#xA;KKIPFjsMVefO7u7O55OxJZj3J64qnVj5hs7PQZtMXTIbia6blcXVxViKbIIwvErxHfl1OQMLN2zE&#xA;qFUkeTYN4qzr8mfy5Tz75yTSp5mgsLWI3l+6irNFG6IY1NRRnMgFe3XFX0l+Yf8Azjd5N82X36Ss&#xA;pG0LUHP+ktaxq0Mvu0NUAf8AylIr3BOKsw/Lf8t9B8g6EdK0rnK8z+reXk1PUmkpSppsqqNlUdPc&#xA;1JVZXirsVdirsVdirsVYb+an5a6X5+8syaZc8YdQhrLpd8RUwzU7034PSjj6eoGKvhfW9F1PRNWu&#xA;9J1SBra/spDFcQt1DDwI2II3BGxG4xV6T5H/ADRsbPy7Jba07tcaeoFtxHJ5oyaKgqQOSe56YbRT&#xA;JNA/NPy1q9yLX97Z3DGkS3AUK5PZWUsK+xw2tMt/czx9nQ4oQVxYulWj+JfDuMKoTFUk8w6T6yG7&#xA;hX96g/eqP2lHf5jAQkJBcNZGCAQIyzAH12Y7E9qb5FKHxV2KsP17zEbpXtLcFYQ1Hkru4Ht2GKpP&#xA;ZwwTXUUU8wtoXYCSdgzBF7txUEnAUhnOtaJ+XMuigaRqUceowrVJJHf98R1DhhRSe1APuymMp3uN&#xA;m6UYVsWAZe0Mn0nzTFHa+lfcmkj2SRRUsPffriqpN5ztx/c2zt7uQv6uWKpfcebNUkqI+EI7cRU/&#xA;8NX9WKpXc3t5cms8zydwGJIHyHTFVFVZiFUEk9ANziqPttD1Geh9P0lP7Um34dcVXy6ZBC/AyGVl&#xA;+0RstfDFUukKl2Kii12Htir6i/5xD8stb6HrXmSVaNfTJZ2pI/3XbjnIw9meQD/Y4q+hMVdirsVd&#xA;irsVdirsVdirsVeI/wDOSf5SDzFo581aPDy1zS4/9LiQb3NolSdu8kXVe5Wo3+HFXyLirsVeh+R/&#xA;zRn050sdaZprM0VLr7UiD/K/mHv1+eG0U9ktbq3ureO4tpFmglHKOVCGVge4IwoU7izSX4l+F/Hs&#xA;fnhVLXRkYowoR1GKsT1/Sfqsv1iEf6PIdwP2WPb5HIkJCUYEuxVheoeV9QgkdoFE0FSVKkcgPcH+&#xA;GKpVJbXEX95E6f6ykfrxVSxV2KqiW87/AGI2b/VUn9WKomLRtTk6QMB4tRf10xVGw+WLpt5ZUQeC&#xA;1Y/wxVHweXLCPeTlKfc0H3CmKphDbW8ApDGsY/yQBiqE1G/4VhiPxn7TDt7fPFUivJuEfEfafb6O&#xA;+KqGmabe6pqNrpthEZ728lSC3hXq0kjBVH3nFX6BeR/K1t5V8paX5ft6MthAsckiigeU/FLJ/s5G&#xA;ZsVTzFXYq7FXYq7FXYq7FXYq7FXYq8j85/8AOM35ea/69xpyPoWpTuZTPbEyQ8j9oG3duAU+CFcV&#xA;SO3/AOcSfKkflq6sZtTnn12Vg9tq4T00i4ggJ9XDuGRifiq1elCO6r5y88+QPM3knWG0zXLYxMam&#xA;2uUq0E6A05xPTf3B3HcDFXeUfPOr+W56Qt69g5rNZOfhPiyH9hvcfTXG1e4+W/NWj+YbT6xYS1dQ&#xA;PWtn2ljJ/mX+I2yTFGXdmZGMiH4j1U9/lhVKL+yFzbvbSEoGI5EdRQg9/lirHdT8uyW8Zlt2MqL9&#xA;tSPiA8duuRITaWyWN3HbJcvGRDJ9l9sCVDFVB7ZTupp7dsVUmsiTUqpPjirQs2BqFUHxxVf9WYCr&#xA;MAMVWlYB+2T8hiq6OKFzQE1GKumjiQUFeR7Yqld/fiIGOI1kPU/y/wBuKpNI6opdjsOuKpXNK0jl&#xA;j9A8Bir6U/5xd/Kh46efNYhoWVo9Chcb0NVkuaHxFVT2qf5Tir6RxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVKPNPlPQPNOkS6Trlol5Zy7gNsyP2eNx8SOPEfqxV8h/m3+QfmDyQ8upWHPVPLVai7Ufv&#xA;YAei3Cjp/rj4T7dMVeZ6dqV/pt2l3Yztb3Mf2ZEND8j2I9jir2TyT+adlqxjsdW42eomipL0hmPt&#xA;X7DHwOx7eGG0UzqaCOUUYb9mHUYUJbPbvC1Dup6NhVDSwRyRmJ1BhYUZKbfRTFWKatoslkTIh525&#xA;OxP2hXsRkSE2lmBLsVUp3ZE+HqTiq2HlMjI2/QA4qqfo4qCZWCEfsnZvlTc/fiqaHy8tnAbi7nSK&#xA;LhyFDVmaleABpvhpFsM1HU2LtHEd+jOP1DAlKndUUsxoPHFUuuLhpW8EHQYq9T/In8l7jzvqg1XV&#xA;UaPytYyUmb7JupVofQQ/y/zt4bDc7KvsyCCGCGOCBFihiUJFGgCqqqKKqgdABiq/FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq06I6MjqGRgVZWFQQdiCDir58/Nn/nGG01Azaz5GVLS9NXm0ViEgkPU&#xA;+gx2iY/yn4PDjir5l1LTNQ0y+msNRtpLS9t24TW8ylHVh2KnFWW+VPzU1rRkS1vR+kLBaBVdqSoP&#xA;BX3qPZvww2imfx/m15JuIAZppoi3WJ4WLD6U5D8cNrSYaN5j8q67IYdMvg1wAT6Dhkeg7hXClvox&#xA;tCOurAhCsqCSI9dqj6RhVi2reXTErT2dWQbtD1IH+T44CE2kWRSgp6+q1fo+WKom3qIh28MVbklR&#xA;BUnfwxVKtT1kyIUMzSOq8YxUsEHtXFWNS3kabL8TeA6ffiqBlmeRqsfkOwxV6b+Sv5K6j591EXt6&#xA;HtfLFq9Lq6GzTMNzDCT3/mb9n50GKvs7StK07SdOt9N023S1sbVBHb28YoqqOw/ie+KorFXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWIfmD+VflDz1ZGHWLULeotLbU4KJcxeAD0+Jd/stUf&#xA;Tvir5T/ML/nH/wA9+UZ3lgtX1rSKkx39lGzsqj/f0K8nj+e6++KvN/qtz64t/Sf6wxCrDxPMlugC&#xA;9anFXRS3FrcLLEzQ3ELBkdSVZWU9R3BBxV71+XnnRPMelmO5IGqWoC3S7Dmp2Eqj37+B+jJBBT+6&#xA;sRu8Q+af0woYP5i04QXImiX4JqllA2DDr99ciQkJMVQkcht40rgSl2oavBAzJGeZHSmx+nwxVj9/&#xA;q8j1Dt1/3Wv8cVSmW5lk2Jov8oxVE6LoOta5fJYaPYzX94/2YbdGkaniadB4k7Yq+g/y1/5xTl9S&#xA;LUfPUwWMUZdEtnqT7TzqaD/Vj/4Ltir6PsLCy0+zhsrGCO1s7dBHBbxKEjRB0VVWgAxVXxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KrWiid0dkVnjrwYgErXrQ9sVfOP/OUH5TQ+&#xA;g3nrRYAkiMF12CMUDBjRbqg71+GT6D4nFXz35b1670LWLfUrY1MRpLH2eM7Oh+Y/HfFX0bpeqWWq&#xA;WMV7ZSrLBKAQymtDSvE+BHcZJip6hAFIlXapow9/HCrz/wA/xR2Vml1bgRvO3pPTbcgty+4HAQkP&#xA;L7i93Kxmp7v/AEyKVOw0+/1K+hsbCCS7vblgkFvEpeR2PZVFScVfRP5b/wDOKRdYtR89Tla0YaJa&#xA;vv8AKedT96x/8F2xV9B+X/LPl/y7Yix0PT4NPtRSscCBeRHd2+07e7EnFUzxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxVRvrK0v7KeyvIlntLqN4biF91eORSrKfYg4q+&#xA;E/zR/K7XvI3mC7tprWZ9GMhOnanxJikiYngGkA4iQDZlO9famKpB5b806x5evPrGny0VqetbvvFI&#xA;B2Zf4jfFXsei/mFo2v2JowtLqNedxBKwHEKKsyttyUeP35IFi8389+dxrLfULIU0+J+XqsPikYVH&#xA;IV3VfD8cBKQEs8leSPMPnLXItH0S39Wd95ZmqIYY+8krgHio+89BU4Evs78rvyg8s+QNPAtEF3rM&#xA;y0vNWlUeo/cpGN/Tjr+yOvcnFWd4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FUPqOnWGpWU1hqFvHd2VwpSe3mUPG6nsytUHFXy9+bv/OMt7pXra15JR73TRV5&#xA;9H3e4hHWsJNTKg/l+2P8rsq8BIZGKkFWFQQdiOxGKp95I8k675y8wQaLo0JkmkPKaY/3cMQIDSyN&#xA;2Va/Sdhvir7i/L38vdA8i6BHpOkx8naj3t64Hq3EtKF3I7fyr0UfScVZPirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5h/5yL/AOVK/pwcvrH+KeX+&#xA;5D9Eelwp/wAvXP4PV/1fi/m7Yq9G/wCcdf8AlWn+E5v8G+r9a5r+mfrvD676lDw9Th8Pp/a9Pjt1&#xA;/a5Yq9YxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:536cde56-d82b-784d-b137-c72e891e7fec</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:536cde56-d82b-784d-b137-c72e891e7fec</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:8aa21147-058e-f140-9df4-70aad8aeb282</stRef:instanceID>
            <stRef:documentID>xmp.did:8aa21147-058e-f140-9df4-70aad8aeb282</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:68cf48fb-65ae-d247-abc7-767cb7648306</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:45:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d741fa58-aad3-c54f-a3ac-601ad698f002</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:54:39+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:40e72682-4693-5341-88eb-f6632d3f8d4e</stEvt:instanceID>
                  <stEvt:when>2018-02-15T13:33:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:8aa21147-058e-f140-9df4-70aad8aeb282</stEvt:instanceID>
                  <stEvt:when>2018-02-15T16:26:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:536cde56-d82b-784d-b137-c72e891e7fec</stEvt:instanceID>
                  <stEvt:when>2018-02-19T18:27:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>587.092579</stDim:w>
            <stDim:h>576.520830</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -576.521 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 576.521 li
587.093 576.521 li
587.093 0 li
cp
clp
572.759 256.382 mo
565.956 229.652 555.401 204.427 539.517 181.748 cv
532.309 171.458 524.089 161.728 515.213 152.854 cv
512 149.642 500.497 142.542 499.347 138.314 cv
497.665 132.128 502.767 129.507 503.529 124.478 cv
506.56 104.501 497.99 96.393 481.291 86.7265 cv
446.71 66.7069 409.604 49.9091 374.024 31.6913 cv
363.242 26.1703 352.531 31.2729 348.361 42.1317 cv
347.671 43.9247 346.983 45.7182 346.293 47.5121 cv
328.715 38.974 307.548 35.4599 292.263 21.6532 cv
278.533 9.25138 252.571 26.1044 265.028 42.6679 cv
266.027 43.996 267.009 45.3349 268.008 46.664 cv
232.023 52.0131 197.764 64.9804 163.307 77.7089 cv
119.695 93.8173 93.385 115.084 59.9836 147.111 cv
49.6301 157.041 55.1975 173.995 68.1438 178.017 cv
71.3928 178.828 74.5725 179.817 77.7141 180.901 cv
77.2083 181.603 76.6887 182.215 76.1868 182.95 cv
73.7952 186.44 72.8958 189.882 73.0178 193.091 cv
61.7844 201.491 51.5559 210.845 43.3381 221.287 cv
40.9924 223.286 38.5481 225.205 36.2561 227.248 cv
15.5608 245.685 13.3489 252.111 17.7385 278.882 cv
21.512 301.9 20.3606 339.639 34.8928 358.987 cv
44.9563 372.388 55.7376 366.662 68.3342 371.776 cv
89.7209 380.462 94.9993 416.69 115.227 429.117 cv
124.605 434.879 137.322 434.136 147.19 438.434 cv
161.89 444.837 174.24 458.445 186.648 468.412 cv
208.474 485.946 229.885 492.378 253.883 504.464 cv
277.301 516.259 287.469 542.474 308.021 558.178 cv
314.589 563.198 325.157 560.48 330.614 555.262 cv
365.96 521.451 414.974 509.272 449.95 473.546 cv
465.285 457.884 482.941 440.405 492.995 420.584 cv
500.875 405.048 501.92 386.073 508.967 370.236 cv
517.244 370.796 525.883 366.535 527.4 357.487 cv
528.486 351.011 547.103 276.677 543.381 273.482 cv
556.369 284.638 577.287 274.184 572.759 256.382 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.356863 .356863 .356863 rgb
f
324.74 308.888 mo
319.252 307.73 313.241 308.033 307.672 307.986 cv
301.616 307.934 297.089 308.357 293.225 311.437 cv
292.723 311.332 292.224 311.162 291.72 311.089 cv
291.72 311.188 li
281.676 308.938 269.556 322.425 279.86 331.463 cv
293.887 343.769 330.344 358.848 338.915 332.188 cv
342.409 321.318 335.616 311.184 324.74 308.888 cv
cp
1 .984314 .619608 rgb
f
499.828 252.493 mo
496.198 249.44 490.91 246.942 486.054 248.851 cv
476.02 252.792 470.543 262.72 462.225 269.194 cv
453.474 276.002 442.668 279.211 434.266 286.465 cv
428.538 291.409 431.21 303.017 438.969 304.279 cv
445.912 305.409 452.448 304.382 458.701 302.164 cv
471.317 307.378 482.519 297.194 492.606 287.719 cv
501.031 279.805 511.57 262.357 499.828 252.493 cv
cp
f
261.646 189.893 mo
252.923 179.783 242.833 167.572 228.779 166.826 cv
217.074 166.204 208.552 181.147 213.956 190.908 cv
212.206 195.989 211.167 201.409 210.093 206.562 cv
208.307 215.123 206.984 222.944 211.46 231.046 cv
217.709 242.356 231.398 252.031 244.226 244.373 cv
246.808 242.832 249.075 240.988 251.115 238.962 cv
255.534 243.142 261.349 244.841 267.26 243.012 cv
273.992 240.928 280.322 234.126 279.762 226.592 cv
278.698 212.261 270.832 200.541 261.646 189.893 cv
cp
.670588 .568627 .47451 rgb
f
439.007 129.849 mo
431.721 124.027 421.679 122.73 414.561 129.849 cv
412.602 131.808 411.282 134.233 410.479 136.812 cv
400.351 146.631 393.098 162.38 396.138 176.278 cv
399.658 192.374 416.588 201.343 432.143 198.756 cv
447.343 196.228 463.115 183.145 464.243 166.996 cv
465.461 149.532 451.183 139.576 439.007 129.849 cv
cp
f
332.692 412.434 mo
332.608 412.345 332.574 412.238 332.485 412.152 cv
327.957 407.957 322.228 405.314 316.384 403.467 cv
307.653 400.709 303.162 407.838 302.732 415.571 cv
302.516 419.475 304.377 422.868 307.775 424.789 cv
310.796 426.496 314.568 426.103 317.819 427.247 cv
320.863 428.317 323.413 429.695 326.791 429.55 cv
331.822 429.334 335.31 426.299 336.91 421.671 cv
338.367 417.457 336.04 414.035 332.692 412.434 cv
cp
f
453.132 377.935 mo
452.946 377.954 452.761 377.973 452.576 377.991 cv
450.089 378.235 447.631 379.152 445.673 380.665 cv
443.904 380.686 442.136 381.43 441.427 383.041 cv
441.361 383.192 441.292 383.344 441.227 383.495 cv
437.224 387.77 437.57 394.681 442.711 398.4 cv
447.634 401.962 454.112 401.794 458.726 398.411 cv
458.414 398.722 li
460.844 397.212 463.232 394.757 463.71 391.824 cv
464.737 385.523 460.922 377.167 453.132 377.935 cv
cp
f
241.819 195.716 mo
242.176 194.767 242.575 193.832 242.962 192.892 cv
245.842 190.471 246.479 186.125 245.152 182.588 cv
244.979 181.649 244.667 180.767 244.285 179.921 cv
245.58 176.693 243.675 173.187 239.748 172.828 cv
238.534 172.718 237.419 172.891 236.323 173.116 cv
232.281 172.065 227.793 173.341 224.91 178.398 cv
220.374 186.355 218.15 197.985 217.807 209.515 cv
216.828 220.808 217.948 232.452 221.987 242.813 cv
224.555 249.402 236.045 251.537 237.601 242.813 cv
237.698 242.266 237.688 241.747 237.757 241.207 cv
238.932 240.078 239.87 238.676 240.153 236.764 cv
241.939 224.597 238.27 208.216 241.819 195.716 cv
cp
.94902 .819608 .709804 rgb
f
432.192 140.39 mo
435.114 137.052 432.786 131.735 427.773 132.666 cv
426.811 132.845 425.932 133.129 425.026 133.38 cv
421.768 132.275 418.02 132.85 414.765 136.315 cv
411.871 139.393 409.778 142.691 408.047 146.083 cv
406.202 148.999 404.686 152.245 403.569 155.839 cv
399.678 168.347 398.676 188.013 408.673 197.844 cv
417.183 206.213 428.838 197.436 427.208 187.055 cv
426.099 179.993 425.327 172.748 425.401 165.585 cv
425.466 158.994 428.737 155.043 431.916 149.55 cv
431.732 149.55 li
433.451 146.583 433.366 143.282 432.192 140.39 cv
cp
f
268.281 196.966 mo
265.045 188.494 253.239 189.81 252.502 199.101 cv
252.121 203.936 252.773 210.643 250.88 215.184 cv
250.783 215.412 250.725 215.562 250.662 215.719 cv
250.223 215.979 249.266 216.39 248.878 216.576 cv
246.479 217.725 244.275 219.454 242.622 221.529 cv
239.158 225.878 238.03 231.511 241.749 236.182 cv
245.114 240.405 251.324 242.039 256.148 239.056 cv
258.679 237.491 261.617 236.938 264.255 235.399 cv
268.721 232.793 272.007 228.331 273.419 223.379 cv
276.095 214.003 271.561 205.554 268.281 196.966 cv
cp
.564706 .447059 .34902 rgb
f
452.705 149.471 mo
451.16 141.314 439.354 143.818 438.9 151.338 cv
438.612 156.109 437.524 160.65 437.151 165.415 cv
437.1 166.071 436.97 166.69 436.882 167.21 cv
435.781 167.571 434.49 168.101 434.386 168.132 cv
417.289 173.069 424.873 200.356 441.725 194.75 cv
450.681 191.771 458.386 185.614 460.115 175.846 cv
461.916 165.672 454.476 158.815 452.705 149.471 cv
cp
f
70.9573 245.963 mo
70.0422 247.946 69.1028 250.016 68.1545 252.153 cv
66.9553 250.992 65.5305 250.094 63.9602 249.482 cv
66.5032 248.049 69.052 246.605 71.6282 245.154 cv
71.4036 245.426 71.1125 245.627 70.9573 245.963 cv
cp
370.29 29.5976 mo
366.702 26.955 360.971 27.9867 357.744 30.4804 cv
357.206 30.8964 356.833 31.4071 356.397 31.8827 cv
352.82 31.1689 349.075 32.2611 346.752 35.3725 cv
344.563 38.3031 344.128 42.3173 345.693 45.5727 cv
344.92 46.3705 344.294 47.3012 343.828 48.3295 cv
326.034 39.3007 307.261 31.9936 288.874 24.3857 cv
288.817 24.3617 288.762 24.3578 288.704 24.3349 cv
287.429 23.5629 286.146 22.87 284.868 22.0712 cv
274.15 15.3637 264.004 28.2294 268.75 38.1889 cv
269.943 40.6908 271.163 42.9936 272.44 45.1708 cv
270.837 48.9311 271.208 53.5712 274.865 57.7348 cv
277.362 60.5751 280.823 65.33 284.553 70.2152 cv
279.826 69.7289 275.131 69.3437 270.473 69.1044 cv
275.167 62.2655 272.031 50.1405 261.994 51.4306 cv
237.942 54.5229 213.998 62.4198 190.42 71.4301 cv
188.656 68.4477 185.646 66.2372 181.858 66.4027 cv
158.997 67.4018 136.441 84.4306 118.722 97.7309 cv
106.196 107.134 75.8938 125.599 75.6809 143.328 cv
75.6604 145.036 75.7942 146.522 76.0178 147.874 cv
71.4973 151.26 67.0647 154.854 62.7161 158.744 cv
54.5579 166.038 58.4065 181.916 69.3967 184.057 cv
71.2415 184.416 73.0559 184.684 74.8586 184.907 cv
74.886 186.524 75.1897 188.136 75.7297 189.684 cv
52.551 203.461 23.0745 227.181 17.1252 248.63 cv
16.9319 249.331 16.8284 249.959 16.6946 250.61 cv
15.3333 252.48 14.5383 254.928 14.7366 258.042 cv
15.0159 262.435 15.4954 266.795 15.9085 271.165 cv
9.00513 287.657 4.38208 307.309 18.9045 318.75 cv
20.2747 319.829 21.7981 320.601 23.3635 321.228 cv
24.8118 328.296 26.4163 335.34 28.1487 342.368 cv
27.1096 346.881 28.8108 352.043 34.2043 353.009 cv
35.7649 353.444 37.3215 353.871 38.8831 354.304 cv
37.4436 360.116 40.1262 366.635 47.4006 369.322 cv
54.0012 371.762 69.5471 377.142 80.4612 377.901 cv
80.7961 379.565 81.4387 381.248 82.5334 382.909 cv
95.2239 402.162 109.393 418.071 127.6 432.371 cv
133.394 436.921 141.297 436.976 146.855 433.728 cv
147.41 435.767 148.584 437.734 150.519 439.454 cv
164.471 451.863 179.962 461.114 197.262 466.53 cv
210.117 477.502 222.393 489.509 237.522 497.081 cv
243.817 500.233 250.681 498.019 254.953 493.661 cv
256.899 495.156 258.835 496.657 260.847 498.093 cv
261.859 498.813 262.918 499.279 263.987 499.643 cv
263.594 503.063 264.532 506.58 267.537 509.35 cv
285.63 526.037 296.727 547.102 319.599 558.041 cv
328.921 562.501 338.53 557.048 339.977 547.98 cv
341.132 547.06 342.183 546.016 342.947 544.766 cv
343.512 543.837 344.079 542.909 344.645 541.979 cv
348.96 534.906 345.509 528.268 339.837 525.387 cv
339.483 523.694 339.112 521.929 338.618 521.171 cv
336.701 518.223 334.051 516.591 331.044 514.855 cv
327.76 512.962 324.227 512.715 321.08 513.655 cv
321.293 511.045 320.753 508.227 319.1 505.337 cv
311.438 491.94 296.52 481.979 280.939 474.142 cv
280.554 473.392 280.001 472.83 279.492 472.219 cv
282.138 473.69 284.789 475.133 287.685 476.194 cv
288.644 476.547 289.032 475.184 288.33 474.666 cv
284.249 471.664 279.862 469.172 276.202 465.629 cv
272.868 462.401 269.772 458.959 266.835 455.367 cv
263.253 450.987 256.386 458.276 261.764 461.938 cv
265.061 464.181 268.479 466.213 271.972 468.118 cv
270.79 467.972 269.577 467.957 268.361 468.113 cv
261.52 462.942 254.784 457.691 248.398 451.894 cv
243.196 447.175 237.044 447.13 232.416 449.871 cv
234.284 446.267 234.43 442.006 231.419 438.098 cv
213.663 415.052 196.38 391.523 177.022 369.784 cv
170.582 362.555 161.187 369.484 161.524 377.2 cv
147.439 363.177 132.883 349.686 118.158 335.82 cv
114.152 332.047 105.784 331.891 103.218 337.745 cv
101.504 341.653 100.76 344.277 100.83 346.628 cv
99.5227 346.264 98.2131 345.905 96.9026 345.555 cv
96.8655 345.487 96.8469 345.412 96.8088 345.344 cv
91.0178 334.918 83.3665 322.272 77.5549 309.055 cv
83.1125 291.576 88.3997 272.427 86.4729 259.09 cv
85.2649 250.727 86.1995 248.251 78.5208 243.981 cv
77.4211 243.369 76.0266 243.208 74.7083 243.413 cv
94.4797 232.222 114.587 220.148 129.437 204.071 cv
134.737 198.333 134.515 190.635 130.762 185.221 cv
133.598 183.186 136.432 181.115 139.302 179.027 cv
153.073 169 144.477 150.246 128.119 152.502 cv
125.402 152.877 122.77 153.454 120.172 154.115 cv
125.56 151.366 131.016 148.753 136.387 146.137 cv
152.16 138.454 176.331 132.763 181.094 114.028 cv
181.746 111.456 180.954 107.935 178.858 105.933 cv
181.216 104.063 183.555 102.172 185.797 100.188 cv
187.15 98.9901 188.12 97.6928 188.791 96.3485 cv
189.752 95.9745 190.716 95.6059 191.678 95.2348 cv
194.244 94.956 196.812 94.6742 199.378 94.4467 cv
200.384 97.7797 203.189 100.48 207.899 100.489 cv
207.919 100.489 li
233.896 104.465 260.16 105.567 286.37 107.278 cv
301.181 108.246 317.2 112.769 329.061 102.1 cv
333.757 97.8739 333.329 91.4818 331.102 86.2792 cv
328.243 79.6054 323.643 73.3998 318.353 67.5131 cv
324.776 69.7445 331.481 71.4491 338.718 72.3085 cv
340.325 72.4984 341.765 72.2997 343.041 71.8256 cv
345.223 72.6947 347.357 73.6806 349.566 74.4867 cv
358.515 77.7543 364.506 67.4086 361.466 60.1952 cv
363.771 59.8051 366.075 59.4125 368.379 59.0204 cv
373.655 58.1244 375.722 52.9828 374.987 48.3295 cv
375.609 47.3026 376.104 46.1908 376.415 44.9882 cv
378.072 38.5766 375.406 33.3661 370.29 29.5976 cv
cp
.541176 .552941 .572549 rgb
f
140.082 285.039 mo
139.814 283.88 139.08 282.801 138.144 281.962 cv
137.611 279.559 136.105 277.289 134.146 276.143 cv
129.84 273.625 125.448 275.542 122.698 279.144 cv
118.448 284.704 121.584 293.528 128.086 295.611 cv
135.005 297.827 141.756 292.265 140.082 285.039 cv
cp
f
145.147 242.013 mo
144.686 242.013 144.686 242.727 145.147 242.727 cv
145.607 242.727 145.607 242.013 145.147 242.013 cv
cp
f
164.668 228.853 mo
163.924 228.669 163.171 228.518 162.412 228.403 cv
155.128 227.124 155.082 238.403 162.412 237.117 cv
163.171 237.002 163.924 236.851 164.668 236.666 cv
168.53 235.801 168.532 229.72 164.668 228.853 cv
cp
f
182.631 148.3 mo
182.171 148.3 182.171 149.015 182.631 149.015 cv
183.092 149.015 183.092 148.3 182.631 148.3 cv
cp
f
219.372 122.102 mo
217.801 120.598 216.042 121.468 214.371 120.662 cv
208.277 117.724 204.323 126.976 210.761 129.225 cv
213.008 130.011 215.093 129.973 217.414 129.523 cv
219.399 129.138 220.558 127.091 220.672 125.242 cv
220.747 124.042 220.235 122.928 219.372 122.102 cv
cp
f
222.794 128.665 mo
222.333 128.665 222.333 129.38 222.794 129.38 cv
223.254 129.38 223.254 128.665 222.794 128.665 cv
cp
f
178.507 149.09 mo
177.977 144.265 174.616 139.816 168.352 139.816 cv
154.676 139.816 154.654 161.069 168.352 161.069 cv
173.553 161.069 176.766 157.99 178.014 154.18 cv
179.362 152.885 179.52 150.639 178.507 149.09 cv
cp
f
185.309 211.355 mo
174.111 211.355 174.092 228.759 185.309 228.759 cv
196.507 228.759 196.527 211.355 185.309 211.355 cv
cp
f
167.459 290.928 mo
162.182 290.928 162.174 299.128 167.459 299.128 cv
172.736 299.128 172.744 290.928 167.459 290.928 cv
cp
f
179.062 338.342 mo
171.632 338.342 171.619 349.889 179.062 349.889 cv
186.49 349.889 186.503 338.342 179.062 338.342 cv
cp
f
194.234 337.51 mo
193.774 337.51 193.774 338.225 194.234 338.225 cv
194.695 338.225 194.695 337.51 194.234 337.51 cv
cp
f
202.267 350.005 mo
201.806 350.005 201.806 350.72 202.267 350.72 cv
202.727 350.72 202.727 350.005 202.267 350.005 cv
cp
f
215.654 381.243 mo
215.194 381.243 215.194 381.957 215.654 381.957 cv
216.115 381.957 216.115 381.243 215.654 381.243 cv
cp
f
119.195 311.419 mo
117.29 306.976 112.945 304.054 110.639 299.761 cv
108.017 294.878 107.041 289.289 107.942 283.814 cv
108.874 278.154 100.281 275.658 99.2278 281.412 cv
97.8704 288.833 98.5833 296.036 101.759 302.924 cv
104.471 308.804 109.406 315.965 116.522 316.076 cv
119.097 316.117 120.073 313.469 119.195 311.419 cv
cp
f
161.837 333.059 mo
159.709 330.444 156.59 329.475 153.912 327.625 cv
151.481 325.944 149.917 323.662 148.744 320.985 cv
146.38 315.586 137.968 319.478 139.416 324.918 cv
141.777 333.789 150.735 344.783 160.884 340.458 cv
163.947 339.154 163.511 335.115 161.837 333.059 cv
cp
f
218.056 398.151 mo
214.388 389.4 208.356 381.661 203.06 373.849 cv
200.886 370.643 195.625 373.728 197.856 376.89 cv
203.323 384.624 208.456 393.168 215.4 399.697 cv
216.448 400.685 218.711 399.715 218.056 398.151 cv
cp
f
226.364 408.682 mo
222.164 408.682 222.157 415.208 226.364 415.208 cv
230.563 415.208 230.571 408.682 226.364 408.682 cv
cp
f
248.676 437.471 mo
248.216 437.471 248.216 438.184 248.676 438.184 cv
249.137 438.184 249.137 437.471 248.676 437.471 cv
cp
f
350.516 506.206 mo
349.623 505.908 348.731 505.61 347.838 505.313 cv
347.403 505.168 347.214 505.856 347.65 506.002 cv
348.542 506.299 349.435 506.598 350.327 506.894 cv
350.763 507.04 350.951 506.35 350.516 506.206 cv
cp
f
382.437 471.24 mo
376.531 472.414 370.917 474.323 365.519 476.982 cv
365.23 477.126 365.483 477.559 365.772 477.417 cv
371.134 474.774 376.71 472.889 382.569 471.725 cv
382.886 471.661 382.752 471.178 382.437 471.24 cv
cp
f
401.294 467.615 mo
397.748 467.615 395.526 469.616 394.517 472.147 cv
393.837 470.785 392.572 469.734 390.584 469.734 cv
384.554 469.734 384.544 479.105 390.584 479.105 cv
392.272 479.105 393.436 478.339 394.18 477.281 cv
394.893 480.364 397.198 483.011 401.294 483.011 cv
411.2 483.011 411.216 467.615 401.294 467.615 cv
cp
f
207.621 326.544 mo
198.792 326.544 198.777 340.267 207.621 340.267 cv
216.45 340.267 216.466 326.544 207.621 326.544 cv
cp
f
138.899 251.044 mo
135.13 251.044 135.123 256.901 138.899 256.901 cv
142.667 256.901 142.675 251.044 138.899 251.044 cv
cp
f
303.135 136.025 mo
293.786 136.65 295.386 150.312 304.869 148.844 cv
308.869 148.225 316.275 146.759 315.56 141.11 cv
314.845 135.45 307.188 135.753 303.135 136.025 cv
cp
f
348.636 99.6537 mo
334.961 99.6537 334.939 120.906 348.636 120.906 cv
362.312 120.906 362.334 99.6537 348.636 99.6537 cv
cp
f
361.131 96.9482 mo
356.61 96.9482 356.601 103.976 361.131 103.976 cv
365.654 103.976 365.662 96.9482 361.131 96.9482 cv
cp
f
462.981 407.467 mo
459.505 404.626 455.031 403.438 450.449 405.807 cv
433.858 409.832 417.041 414.685 400.064 418.92 cv
384.995 411.87 368.894 422.434 353.27 425.631 cv
334.231 429.525 309.664 421.166 293.236 432.111 cv
290.045 434.236 290.123 437.869 292.444 440.373 cv
292.35 440.398 292.255 440.423 292.161 440.447 cv
304.834 454.436 331.679 453.41 349.204 451.872 cv
356.369 451.243 364.609 450.016 372.734 447.927 cv
384.312 448.257 395.859 447.611 407.334 446.01 cv
411.858 446.795 416.217 446.811 420.481 446.333 cv
412.365 454.885 405.263 463.958 401.266 473.838 cv
399.99 474.026 398.716 474.471 397.548 475.576 cv
392.247 480.59 386.938 485.599 381.518 490.487 cv
380.654 490.966 379.777 491.411 378.917 491.901 cv
375.833 493.662 372.654 495.477 369.491 497.382 cv
368.207 497.443 366.902 497.765 365.627 498.465 cv
359.283 501.952 352.868 506.9 348.222 512.46 cv
340.06 522.227 350.948 540.382 363.003 531.618 cv
368.17 527.864 372.706 524.128 374.927 518.766 cv
380.776 515.981 386.37 512.712 391.743 509.427 cv
394.006 509.89 396.453 509.675 398.821 508.492 cv
398.864 508.565 398.906 508.637 398.948 508.71 cv
428.505 488.873 464.686 472.312 477.485 436.893 cv
479.24 434.545 480.916 432.136 482.522 429.621 cv
483.323 428.369 483.789 426.762 484.08 425.09 cv
484.774 424.012 485.397 423.026 485.705 422.559 cv
495.491 407.666 471.568 395.326 462.981 407.467 cv
cp
.309804 .309804 .309804 rgb
f
378.844 322.062 mo
378.409 319.177 374.632 317.394 372.051 318.205 cv
370.422 318.717 369.028 319.405 367.726 320.167 cv
365.849 319.025 363.398 318.916 361.428 320.924 cv
350.376 332.184 338.216 341.61 325.822 351.352 cv
323.601 353.1 322.613 355.233 322.482 357.395 cv
318.579 359.507 319.135 365.9 324.54 366.295 cv
325.414 366.357 326.243 366.319 327.087 366.314 cv
330.176 368.634 334.344 369.546 338.198 367.393 cv
353.519 358.838 381.931 342.647 378.844 322.062 cv
cp
f
316.304 221.4 mo
314.381 219.025 312.058 216.788 309.471 215.105 cv
307.198 213.826 304.845 212.713 302.413 211.769 cv
303.105 211.76 303.795 211.752 304.486 211.745 cv
300.555 203.496 300.764 195.048 294.428 187.199 cv
287.567 178.699 278.448 173.129 269.221 167.548 cv
256.723 159.985 246.153 178.825 257.905 186.911 cv
266.296 192.684 275.975 199.018 279.366 209.309 cv
280.728 213.442 279.738 218.274 281.31 222.414 cv
282.531 225.629 284.418 227.896 286.508 230.591 cv
288.033 232.106 289.832 233.154 291.906 233.735 cv
296.39 238.328 296.196 240.24 291.322 239.473 cv
287.918 241.776 276.697 240.73 272.103 241.908 cv
267.316 243.135 262.692 245.091 258.173 247.05 cv
244.859 252.828 232.395 260.184 218.605 264.841 cv
209.893 265.353 207.193 282.967 219.346 282.313 cv
242.258 281.079 260.744 267.12 283.135 264.095 cv
299.654 261.862 321.073 263.8 323.023 241.753 cv
323.664 234.516 320.809 226.959 316.304 221.4 cv
cp
f
566.668 255.094 mo
567.87 252.526 568.373 249.4 567.719 245.74 cv
566.882 241.052 565.908 236.538 564.879 232.031 cv
564.048 226.059 562.493 220.016 560.02 213.538 cv
557.686 207.421 552.653 204.439 547.441 203.884 cv
538.589 188.747 527.883 174.622 515 165.136 cv
514.99 164.517 515.044 163.917 514.947 163.275 cv
514.535 160.568 513.954 157.954 513.352 155.35 cv
513.277 153.817 512.892 152.266 512.159 150.72 cv
509.478 141.108 505.554 132.141 500.677 123.642 cv
505.236 120.221 507.198 114.502 506.048 108.439 cv
499.917 76.1342 450.674 61.0556 423.429 52.2167 cv
416.636 50.0126 411.443 52.1376 408.305 56.1444 cv
405.083 54.6449 401.803 53.2089 398.574 51.6723 cv
395.179 49.7275 391.77 47.8109 388.375 45.8637 cv
373.039 37.0629 360.204 59.6791 374.641 69.3598 cv
386.932 76.9872 399.169 84.7016 411.439 92.3617 cv
414.323 96.7235 416.904 101.348 420.698 104.851 cv
425.817 109.576 431.539 112.337 437.337 115.25 cv
444.214 130.762 453.934 143.231 467.69 154.363 cv
467.958 154.58 468.239 154.732 468.512 154.928 cv
471.566 162.003 475.579 168.077 480.127 174.204 cv
478.384 175.248 476.885 176.674 475.929 178.276 cv
473.99 181.525 474.57 183.778 475.096 186.878 cv
469.48 187.657 460.82 193.378 455.83 195.039 cv
433.304 202.542 407.903 199.875 387.809 214.536 cv
382.384 218.494 381.327 230.015 389.988 231.205 cv
406.74 233.509 423.292 228.798 439.959 226.756 cv
442.995 226.383 445.853 225.822 448.711 225.252 cv
440.1 229.565 441.669 245.41 453.505 245.41 cv
459.885 245.41 463.253 240.782 463.682 235.849 cv
464.261 236.108 464.806 236.393 465.453 236.595 cv
478.746 240.726 499.103 232.998 510.496 242.036 cv
511.498 242.831 512.539 243.495 513.605 244.062 cv
514.164 246.94 514.778 249.754 515.699 252.445 cv
507.045 263.433 492.587 279.704 493.786 293.353 cv
493.789 293.401 493.807 293.442 493.811 293.49 cv
479.252 305.725 454.617 306.752 436.54 306.267 cv
431.646 306.136 430.371 314.04 435.363 314.978 cv
455.681 318.799 478.434 317.776 495.483 304.141 cv
496.614 303.236 497.665 302.204 498.739 301.207 cv
500.543 302.114 502.718 302.439 505.12 301.986 cv
506.372 301.75 507.563 301.382 508.709 300.932 cv
508.276 311.147 509.73 320.931 514.294 328.829 cv
513.17 333.011 511.8 337.233 510.13 341.342 cv
505.307 346.664 500.446 350.986 493.065 354.287 cv
490.905 353.615 488.522 353.913 486.814 355.887 cv
479.149 364.74 471.479 371.718 473.635 384.43 cv
474.404 388.965 479.399 391.887 483.62 392.033 cv
497.834 392.522 511.729 374.886 519.126 364.557 cv
521.626 361.068 523.821 357.421 525.816 353.688 cv
526.88 352.298 527.917 350.892 528.932 349.482 cv
531.13 348.884 533.206 347.603 534.707 345.394 cv
544.563 330.894 539.562 312.985 533.802 297.62 cv
533.615 297.117 533.373 296.682 533.131 296.246 cv
533.473 295.835 533.712 295.325 533.973 294.82 cv
536.291 290.377 538.438 285.871 540.142 281.281 cv
543.008 283.969 547.329 284.422 551.042 283.171 cv
557.286 286.212 566.405 281.928 567.737 275.117 cv
568.632 270.538 569.086 267.129 569.069 262.46 cv
569.056 259.434 568.139 256.984 566.668 255.094 cv
cp
f
378.101 120.261 mo
373.259 120.261 371.13 124.323 371.532 128.059 cv
371.378 129.135 371.695 130.248 372.5 130.977 cv
373.562 132.786 375.36 134.151 378.101 134.151 cv
387.038 134.151 387.054 120.261 378.101 120.261 cv
cp
f
374.557 151.778 mo
374.423 151.372 374.21 150.974 373.912 150.603 cv
371.705 147.852 368.241 146.454 365.054 145.204 cv
356.516 141.855 353.692 158.288 363.363 157.694 cv
366.656 157.492 370.25 157.113 373.109 155.309 cv
373.109 155.323 373.102 155.329 373.102 155.343 cv
373.058 158.993 372.019 162.434 372.335 166.109 cv
372.445 167.402 373.715 168.889 375.194 168.287 cv
380.235 166.24 382.259 161.785 383.62 156.766 cv
385.24 150.8 377.761 148.52 374.557 151.778 cv
cp
f
354.884 184.636 mo
346.055 184.636 346.039 198.358 354.884 198.358 cv
363.713 198.358 363.729 184.636 354.884 184.636 cv
cp
f
339.675 161.635 mo
336.76 158.839 333.118 156.651 329.859 154.272 cv
326.361 151.719 323.045 155.878 323.527 159.132 cv
320.176 156.387 316.684 153.892 312.893 152.292 cv
308.756 150.547 303.311 153.207 300.844 156.401 cv
298.053 160.013 297.607 165.121 299.948 169.131 cv
302.176 172.949 305.791 175.668 309.033 178.598 cv
311.898 181.187 314.763 183.777 317.629 186.367 cv
322.368 190.652 330.288 191.396 334.906 186.367 cv
339.08 181.819 340.107 173.506 334.906 169.091 cv
332.448 167.004 329.951 164.714 327.41 162.449 cv
331.026 163.331 334.688 164.421 338.372 164.778 cv
339.992 164.935 340.761 162.677 339.675 161.635 cv
cp
f
361.703 245.368 mo
360.433 243.729 359.116 242.977 357.904 241.582 cv
351.546 234.26 338.341 240.1 338.763 249.51 cv
338.938 253.42 340.87 257.175 344.317 259.191 cv
348.356 261.555 354.678 261.151 357.904 257.438 cv
359.165 255.984 360.349 255.398 361.703 253.652 cv
363.838 250.897 363.858 248.148 361.703 245.368 cv
cp
f
373.626 257.738 mo
366.413 257.738 366.4 268.95 373.626 268.95 cv
380.841 268.95 380.854 257.738 373.626 257.738 cv
cp
f
399.509 250.04 mo
385.834 250.04 385.811 271.292 399.509 271.292 cv
413.184 271.292 413.206 250.04 399.509 250.04 cv
cp
f
422.714 247.613 mo
416.254 247.613 416.243 257.654 422.714 257.654 cv
429.174 257.654 429.185 247.613 422.714 247.613 cv
cp
f
432.085 252.411 mo
431.224 252.411 431.222 253.749 432.085 253.749 cv
432.947 253.749 432.948 252.411 432.085 252.411 cv
cp
f
383.444 358.953 mo
369.23 358.953 369.207 381.042 383.444 381.042 cv
397.657 381.042 397.682 358.953 383.444 358.953 cv
cp
f
399.063 328.58 mo
385.388 328.58 385.365 349.833 399.063 349.833 cv
412.738 349.833 412.761 328.58 399.063 328.58 cv
cp
f
411.112 347.936 mo
409.712 347.936 409.71 350.111 411.112 350.111 cv
412.511 350.111 412.513 347.936 411.112 347.936 cv
cp
f
451.72 334.576 mo
446.337 334.576 446.326 342.943 451.72 342.943 cv
457.105 342.943 457.114 334.576 451.72 334.576 cv
cp
f
466.893 330.811 mo
453.218 330.811 453.195 352.063 466.893 352.063 cv
480.568 352.063 480.59 330.811 466.893 330.811 cv
cp
f
264.131 373.039 mo
269.005 366.99 266.405 355.355 256.263 355.355 cv
242.587 355.355 242.565 376.607 256.263 376.607 cv
256.572 376.607 256.834 376.543 257.129 376.522 cv
253.783 381.557 255.942 390.219 263.849 390.219 cv
274.831 390.219 274.92 373.367 264.131 373.039 cv
cp
f
294.194 275.839 mo
283.857 275.839 283.839 291.904 294.194 291.904 cv
304.531 291.904 304.548 275.839 294.194 275.839 cv
cp
f
264.741 125.899 mo
256.126 125.899 256.113 139.286 264.741 139.286 cv
273.356 139.286 273.37 125.899 264.741 125.899 cv
cp
f
365.148 381.433 mo
351.15 381.433 351.125 403.187 365.148 403.187 cv
379.146 403.187 379.17 381.433 365.148 381.433 cv
cp
f
349.529 462.65 mo
341.915 462.65 339.871 471.135 343.248 475.89 cv
330.078 476.406 330.2 497.096 343.728 497.096 cv
354.242 497.096 356.652 484.56 350.993 478.752 cv
359.934 477.198 359.541 462.65 349.529 462.65 cv
cp
f
395.627 455.524 mo
392.585 451.61 387.365 452.5 383.028 453.02 cv
377.819 453.645 372.627 454.407 367.455 455.289 cv
359.388 456.666 362.7 469.488 370.881 467.714 cv
375.758 466.657 380.654 465.704 385.579 464.907 cv
389.686 464.242 394.169 463.772 396.15 459.581 cv
396.865 458.067 396.618 456.802 395.627 455.524 cv
cp
f
181.896 78.3837 mo
160.462 83.1713 137.87 94.2758 120.079 107.032 cv
101.548 120.315 88.9309 137.959 72.5295 153.328 cv
71.7542 154.054 71.3723 154.839 71.1506 155.627 cv
66.6799 158.114 64.0803 164.461 68.9036 168.256 cv
72.9465 171.439 77.6194 174.547 81.3713 178.068 cv
86.7629 183.132 84.7209 178.485 80.8391 182.206 cv
73.9348 188.827 66.8313 195.061 59.4348 201.132 cv
47.5051 210.925 30.094 220.842 26.5452 236.876 cv
25.9885 239.388 26.4319 242.342 28.4661 244.141 cv
28.6975 244.347 28.9143 244.435 29.1418 244.61 cv
24.1311 255.942 21.469 268.122 22.2971 281.224 cv
22.801 289.162 35.0569 291.863 36.9251 283.203 cv
34.4377 294.733 28.1262 330.983 43.4602 344.65 cv
45.5598 346.519 48.7463 345.752 49.6135 343.025 cv
53.8879 329.591 50.5081 314.768 50.346 300.732 cv
50.2278 290.45 50.6497 277.041 45.3518 267.785 cv
43.97 265.368 41.5881 264.63 39.0823 264.735 cv
41.3743 252.05 45.8196 240.634 54.1477 229.202 cv
62.5344 221.568 71.3264 214.477 80.0637 207.095 cv
87.7756 200.579 102.021 191.097 103.327 180.139 cv
104.617 169.344 91.7932 163.041 82.72 158.02 cv
99.5471 143.756 115.546 129.572 134.541 117.879 cv
151.512 107.432 170.16 97.2099 185.314 84.2582 cv
188.154 81.8315 185.065 77.6757 181.896 78.3837 cv
cp
.623529 .635294 .647059 rgb
f
283.148 53.5688 mo
281.043 54.5268 278.786 56.8798 278.139 59.1249 cv
274.259 59.8173 270.051 60.2475 268.241 64.433 cv
267.872 65.2904 267.726 66.1806 267.606 67.0614 cv
259.945 65.3627 251.611 65.683 243.573 65.6166 cv
227.302 65.4833 211.249 67.0834 195.245 69.9203 cv
187.118 71.3612 190.676 83.3637 198.626 82.1845 cv
213.541 79.9716 228.501 78.9882 243.573 79.7621 cv
255.244 80.3622 267.698 84.5282 278.88 80.5365 cv
280.65 79.9042 282.086 78.0121 282.196 76.1342 cv
283.243 75.9638 284.291 75.6962 285.346 75.3119 cv
288.808 74.0507 290.911 72.1396 292.433 69.5248 cv
294.004 68.6254 295.013 67.1542 295.355 65.4735 cv
296.969 66.4125 298.597 67.5639 299.851 68.9599 cv
297.95 77.1024 311.607 82.3876 315.653 74.2616 cv
324.764 55.9662 296.072 47.6899 283.148 53.5688 cv
cp
f
318.633 34.9535 mo
314.494 31.371 309.711 30.5424 304.679 29.3642 cv
303.191 28.4252 301.377 27.8266 299.172 27.8144 cv
294.027 26.2299 288.954 24.3661 283.888 22.5551 cv
275.464 19.5419 269.9 32.8695 277.799 36.9999 cv
278.399 37.3139 278.998 37.6264 279.6 37.9403 cv
279.615 37.9491 279.631 37.9472 279.648 37.9545 cv
282.874 39.7846 286.214 41.3437 289.641 42.7011 cv
291.006 46.2587 294.142 49.06 299.103 49.06 cv
301.24 49.06 303.004 48.4989 304.473 47.622 cv
308.16 48.4657 311.909 48.7704 315.331 47.4613 cv
320.139 45.6225 323.283 38.9775 318.633 34.9535 cv
cp
f
291.517 496.133 mo
281.716 488.944 267.48 482.775 254.209 482.234 cv
244.21 468.49 225.484 459.703 212.204 450.202 cv
209.902 448.555 207.655 446.828 205.374 445.147 cv
207.552 443.798 208.572 440.64 206.32 438.551 cv
194.307 427.416 179.817 419.831 166.643 410.131 cv
164.231 408.354 161.786 407.043 159.33 405.899 cv
158.098 404.655 156.798 403.482 155.588 402.215 cv
153.128 399.642 149.546 400.032 146.984 401.776 cv
138.137 399.681 129.205 398.465 120.503 393.186 cv
119.115 392.343 117.498 392.092 115.902 392.28 cv
100.107 377.065 83.7483 362.528 68.0793 347.126 cv
62.7835 341.919 55.8284 349.524 60.1516 355.054 cv
79.3694 379.63 97.1672 404.225 119.133 426.593 cv
126.93 434.533 141.217 425.365 137.648 415.784 cv
142.12 416.352 146.663 416.953 151.34 418.181 cv
164.939 435.166 179.766 450.619 196.723 464.555 cv
212.411 477.448 231.85 496.401 252.994 496.97 cv
254.169 497.001 255.173 496.699 255.994 496.178 cv
258.815 497.508 261.519 498.814 263.52 499.431 cv
273.151 502.402 280.255 507.842 287.413 514.812 cv
296.865 524.015 305.143 542.189 319.581 542.918 cv
321.508 543.016 323.249 541.493 323.778 539.724 cv
328.91 522.508 303.115 504.643 291.517 496.133 cv
cp
f
568.791 231.482 mo
568.488 229.722 567.665 228.47 566.671 227.439 cv
565.629 217.005 563.3 205.935 558.712 197.874 cv
550.789 183.955 537.904 171.495 527.813 159.097 cv
524.657 155.222 520.849 154.034 517.232 154.54 cv
513.832 144.045 506.161 134.336 499.696 125.234 cv
500.626 122.567 501.118 119.89 501.177 117.119 cv
502.813 113.003 502.391 108.015 498.581 103.753 cv
497.996 103.1 497.412 102.444 496.826 101.789 cv
495.33 100.116 493.483 99.1386 491.519 98.6991 cv
475 87.2196 457.202 77.248 440.113 66.706 cv
437.231 64.9281 434.407 64.4311 431.825 64.7929 cv
429.345 63.3705 426.901 61.9818 424.557 60.6459 cv
405.707 49.8969 385.675 41.9584 365.463 34.1977 cv
358.795 31.6371 354.436 42.3383 360.627 45.6679 cv
379.073 55.5829 396.518 67.2533 413.756 79.1225 cv
416.592 81.0751 419.428 83.2079 422.275 85.3842 cv
423.289 86.9931 424.711 88.4711 426.683 89.6811 cv
428.909 91.0458 431.128 92.4613 433.349 93.8539 cv
440.051 98.9057 446.959 103.64 454.28 107.028 cv
461.446 111.5 468.709 115.773 476.066 119.832 cv
476.046 119.977 476.026 120.122 476.004 120.267 cv
473.677 123.589 473.974 128.768 476.004 132.12 cv
484.746 146.55 490.258 166.38 505.664 174.731 cv
506.22 176.137 506.95 177.53 508.052 178.859 cv
516.064 188.532 526.924 198.556 533.342 209.396 cv
539.417 219.657 538.325 232.814 542.415 243.929 cv
542.85 245.108 543.468 246.288 544.179 247.425 cv
544.089 247.501 543.99 247.554 543.899 247.634 cv
532.274 257.771 519.847 266.413 521.71 282.815 cv
523.094 295.01 522.62 303.871 520.491 316.162 cv
519.96 319.231 519.726 321.665 519.718 323.985 cv
516.053 324.034 512.553 325.7 510.66 329.68 cv
508.076 335.112 505.327 340.689 501.086 345.05 cv
499.358 346.827 497.486 348.414 495.355 349.696 cv
493.828 350.684 492.2 351.434 490.467 351.952 cv
490.183 352.029 490.087 352.076 489.871 352.142 cv
478.804 350.658 473.67 364.967 480.33 373.118 cv
481.065 374.017 481.898 374.64 482.719 375.292 cv
482.278 375.763 482.027 376.67 482.066 378.25 cv
481.214 380.382 480.338 382.501 479.435 384.612 cv
478.709 388.485 479.583 391.132 481.239 394.587 cv
482.464 397.142 485.557 398.553 488.246 398.606 cv
499.531 398.836 504.96 386.516 506.757 376.817 cv
506.984 375.593 507.076 374.405 507.125 373.233 cv
508.615 372.31 510.041 371.351 511.302 370.365 cv
521.704 362.225 527.573 350.87 532.07 338.706 cv
532.202 338.351 532.244 338.011 532.334 337.662 cv
543.215 330.625 545.086 319.162 546.559 306.566 cv
547.453 298.923 545.933 291.778 546.263 284.309 cv
545.502 283.814 544.966 283.332 544.54 282.858 cv
546.799 283.674 549.433 283.721 552.372 282.607 cv
573.796 274.495 572.105 250.807 568.791 231.482 cv
cp
.2 .2 .2 rgb
f
477.038 400.726 mo
464.95 417.842 448.363 434.123 434.201 449.809 cv
424.436 460.623 403.609 471.265 400.404 485.834 cv
400.278 486.404 400.26 487.032 400.273 487.661 cv
389.92 492.882 379.275 497.589 369.136 503.377 cv
358.295 509.565 343.404 515.487 341.406 529.259 cv
341.061 531.638 341.96 534.304 344.62 534.919 cv
358.308 538.084 368.479 527.393 378.702 519.742 cv
389.19 511.894 399.3 503.006 409.992 495.34 cv
425.774 497.081 440.564 480.242 449.839 469.139 cv
465.995 449.795 475.369 428.429 488.309 407.313 cv
492.765 400.041 481.809 393.97 477.038 400.726 cv
cp
f
358.844 329.554 mo
353.367 329.138 348.842 334.466 345.232 337.909 cv
340.788 342.147 336.238 346.265 331.602 350.289 cv
326.467 354.75 333.809 361.639 338.938 357.626 cv
343.792 353.828 348.567 349.935 353.239 345.918 cv
357.07 342.623 362.439 338.473 362.192 332.9 cv
362.106 330.988 360.72 329.696 358.844 329.554 cv
cp
.145098 .145098 .145098 rgb
f
306.9 231.763 mo
304.461 228.604 300.644 226.69 298.346 223.734 cv
299.434 225.132 298.323 222.295 298.456 220.741 cv
298.674 218.19 299.852 215.777 300.044 213.164 cv
300.764 203.375 294.466 197.238 287 192.052 cv
280.263 187.372 270.79 195.136 273.191 202.669 cv
274.521 206.84 277.186 208.457 279.375 211.749 cv
280.967 214.144 280.583 210.834 279.539 215.525 cv
279.039 217.767 278.96 220.117 279.091 222.378 cv
279.322 226.348 280.677 229.789 283.57 232.556 cv
285.912 234.798 288.353 235.772 289.466 239.113 cv
289.572 239.433 289.726 239.672 289.848 239.965 cv
289.404 240.015 288.94 240.034 288.539 240.156 cv
267.244 246.641 246.663 254.351 225.681 261.644 cv
218.598 264.105 221.385 274.647 228.794 272.94 cv
250.512 267.935 271.71 263.105 292.991 256.303 cv
296.702 255.117 298.906 252.053 299.138 248.229 cv
299.183 247.471 299.15 246.864 299.056 246.327 cv
299.612 246.85 300.344 247.223 301.334 247.223 cv
303.679 247.223 304.781 245.339 304.698 243.519 cv
308.389 240.854 310.343 236.219 306.9 231.763 cv
cp
.2 .2 .2 rgb
f
491.215 194.809 mo
484.589 189.244 483.095 179.816 479.447 172.3 cv
475.781 164.745 464.743 168.918 464.48 176.354 cv
464.266 182.35 465.816 187.277 467.794 192.142 cv
447.739 194.783 428.619 204.326 408.432 206.997 cv
400.914 207.993 397.013 220.642 406.408 221.954 cv
433.157 225.693 460.134 217.328 486.43 212.931 cv
494.229 211.626 497.157 199.8 491.215 194.809 cv
cp
f
331.473 419.041 mo
323.036 419.159 314.875 418.67 307.066 417.532 cv
310.994 411.76 315.882 405.751 320.727 408.005 cv
324.362 409.695 328.353 415.821 331.157 418.715 cv
331.262 418.824 331.368 418.933 331.473 419.041 cv
cp
564.781 272.792 mo
558.064 270.407 551.323 268.438 543.903 266.945 cv
535.527 265.26 529.19 271.846 530.728 280.12 cv
535.849 307.659 524.609 334.366 520.432 361.719 cv
518.706 359.897 517.047 358.004 515.504 355.989 cv
509.67 349.345 500.309 353.841 497.604 360.715 cv
495.141 366.969 494.009 369.824 493.409 372.622 cv
491.022 373.716 489.156 375.925 488.623 379.539 cv
488.187 382.486 487.605 385.384 487.012 388.277 cv
486.776 387.962 486.583 387.639 486.303 387.332 cv
477.639 377.893 460.167 360.852 445.937 361.503 cv
438.69 361.834 435.279 367.293 432.073 372.904 cv
427.031 381.731 422.277 390.739 417.382 399.65 cv
416.442 401.361 416.05 403.035 416.012 404.634 cv
397.447 409.837 378.061 414.371 359.118 416.9 cv
358.942 416.694 358.819 416.478 358.621 416.276 cv
348.531 405.868 334.74 384.468 318.322 384.65 cv
302.525 384.824 292.864 401.512 284.536 412.786 cv
274.474 413.377 271.29 430.12 282.882 433.985 cv
342.1 453.733 424.398 425.927 480.685 406.398 cv
481.405 406.148 482.048 405.831 482.655 405.488 cv
470.872 442.726 446.044 474.023 409.311 492.167 cv
375.919 508.658 351.971 525.239 326.796 551.603 cv
299.94 531.949 li
298.665 531.018 297.402 530.473 296.172 530.185 cv
288.858 518.142 278.138 498.818 266.067 492.392 cv
259.083 488.673 253.867 491.357 247.043 490.621 cv
233.465 489.156 216.747 474.727 203.969 465.703 cv
182.047 450.22 160.607 434.101 139.498 417.527 cv
134.788 413.829 125.666 412.646 122.677 419.694 cv
122.51 420.089 122.37 420.418 122.215 420.782 cv
106.272 397.969 74.6213 345.926 46.7112 359.409 cv
31.2424 328.684 25.0422 296.192 27.7112 261.281 cv
27.9729 257.866 26.843 255.309 24.9885 253.595 cv
36.5784 225.298 62.8967 205.718 88.009 189.061 cv
94.2756 184.906 95.6174 174.401 88.009 170.565 cv
80.3352 166.697 73.0647 164.555 65.8723 163.96 cv
70.6086 157.79 75.469 151.714 80.592 145.821 cv
83.8098 142.118 107.777 121.835 101.271 116.959 cv
109.436 123.079 117.387 114.493 116.56 106.3 cv
166.34 68.4433 224.844 61.4916 286.55 64.4652 cv
293.908 64.8192 297.288 58.8769 296.782 53.1591 cv
297.902 49.9023 297.326 46.2006 293.823 43.1674 cv
288.825 38.8427 279.626 32.6684 271.892 25.9257 cv
279.986 27.2016 286.679 29.9628 294.586 33.831 cv
311.329 42.0214 327.848 50.703 344.469 59.1337 cv
348.651 61.2553 352.644 60.4711 355.635 58.3139 cv
361.568 56.4052 366.156 49.8925 362.031 42.9618 cv
360.183 39.8578 358.278 36.8817 356.347 33.9374 cv
380.705 43.6913 404.312 55.0995 427.358 67.9735 cv
441.882 76.0868 456.16 84.6225 470.337 93.3251 cv
477.354 97.6308 484.886 101.642 491.528 106.502 cv
497.342 110.753 509.801 109.615 495.574 111.723 cv
488.526 112.767 486.099 122.067 489.174 127.456 cv
493.054 133.561 496.324 139.962 499.109 146.6 cv
495.646 151.986 496.589 160.824 504.548 163.577 cv
538.098 175.176 573.557 234.035 564.781 272.792 cv
cp
445.058 393.746 mo
446.283 391.517 447.507 389.288 448.733 387.059 cv
449.867 384.99 li
453.16 386.594 456.327 388.712 459.31 391.116 cv
454.273 392.822 449.043 394.545 443.667 396.278 cv
445.058 393.746 li
cp
522.57 148.577 mo
520.101 142.008 517.411 135.712 514.406 129.524 cv
517.366 128.553 520.258 127.333 523.185 125.472 cv
526.108 123.613 528.932 119.944 528.49 116.224 cv
525.159 88.2387 475.933 71.3158 454.408 58.7494 cv
414.083 35.2079 372.445 15.0233 327.9 .857334 cv
317.251 -2.52987 310.566 11.2587 317.481 18.7577 cv
318.875 20.2709 320.17 21.8232 321.506 23.3588 cv
313.789 19.4184 306.071 15.4789 298.271 11.7206 cv
282.717 4.22501 266.772 6.7377 251.347 .688388 cv
242.871 -2.63534 237.075 6.78214 238.172 13.8632 cv
239.92 25.1376 248.818 34.3803 258.63 42.4814 cv
198.532 43.0121 143.316 56.0624 94.842 96.2675 cv
92.7678 97.9882 91.7043 99.9477 91.3752 101.921 cv
67.7795 117.59 46.0422 153.889 31.5549 174.86 cv
25.1086 184.19 37.3977 194.197 46.2083 189.514 cv
47.7522 189.491 49.2981 189.47 50.843 189.447 cv
27.3538 208.017 7.18677 230.402 .306888 260.617 cv
-.965573 266.199 1.88306 270.418 5.84302 272.512 cv
4.88306 311.227 14.3518 347.441 34.1936 381.338 cv
37.3977 386.809 46.5667 388.947 51.0159 383.505 cv
62.6389 369.283 106.373 435.355 111.003 441.348 cv
113.71 444.85 117.099 445.625 120.181 444.736 cv
125.032 450.393 135.088 451.095 137.826 443.261 cv
166.72 465.947 196.228 488.738 227.482 507.731 cv
238.312 514.313 240.455 512.138 251.14 514.233 cv
253.217 514.642 254.563 511.444 256.339 511.993 cv
264.204 514.423 275.349 537.386 279.471 543.932 cv
281.5 547.153 284.394 548.612 287.354 548.857 cv
287.869 549.419 288.455 549.952 289.128 550.445 cv
300.324 558.639 311.521 566.832 322.719 575.026 cv
326.35 577.685 332.756 576.595 335.697 573.351 cv
356.92 549.951 377.339 529.391 406.577 516.357 cv
423.525 508.803 437.663 502.662 451.084 489.159 cv
482.191 457.861 499.449 436.945 507.521 395.416 cv
510.911 393.935 513.603 390.869 513.819 386.143 cv
514.19 384.491 li
517.366 387.107 520.66 389.629 524.293 392.121 cv
530.964 396.698 540.686 390.64 540.409 382.874 cv
539.269 350.93 553.085 322.115 552.869 290.916 cv
557.3 292.277 561.65 293.935 565.903 295.929 cv
570.756 298.006 577.974 297.866 580.558 292.086 cv
601.807 244.517 568.282 173.659 522.57 148.577 cv
cp
.129412 .129412 .129412 rgb
f
312.781 342.622 mo
312.726 341.054 307.203 337.39 305.413 335.639 cv
298.787 329.154 291.193 324.284 283.401 319.782 cv
283.526 319.796 283.648 319.818 283.774 319.83 cv
302.343 321.653 320.341 321.397 338.73 323.409 cv
334.555 326.952 330.258 330.355 325.717 333.535 cv
323.427 335.139 317.136 340.725 312.781 342.622 cv
cp
361.1 305.683 mo
360.251 305.267 359.327 304.913 358.235 304.712 cv
337.726 300.934 317.658 298.578 296.772 298.743 cv
276.797 298.902 257.591 291.986 238.412 286.905 cv
225.657 283.527 219.944 302.225 231.121 306.962 cv
231.33 309.116 232.314 311.286 234.435 313.208 cv
245.757 323.458 259.327 328.548 272.115 336.481 cv
282.655 343.019 293.598 360.85 305.645 364.296 cv
326.325 370.21 357.232 336.504 369.514 323.972 cv
377.081 316.25 369.42 305.324 361.1 305.683 cv
cp
f
472.626 290.52 mo
461.983 294.404 450.969 293.945 439.973 293.127 cv
457.702 280.652 476.731 270.103 495.898 259.885 cv
489.716 272.755 482.161 287.041 472.626 290.52 cv
cp
520.837 242.803 mo
522.37 235.153 514.01 225.952 504.883 230.845 cv
471.452 248.771 437.781 266.041 408.441 290.373 cv
404.288 293.816 404.117 298.206 406.042 301.769 cv
405.108 307.741 408.467 314.227 416.182 313.705 cv
439.129 312.151 464.191 319.304 486.662 309.122 cv
494.117 305.744 497.004 299.407 500.948 292.543 cv
508.124 280.061 515.097 267.458 522.168 254.918 cv
524.785 250.28 523.62 245.838 520.837 242.803 cv
cp
f
232.186 178.142 mo
234.463 180.437 237.83 181.512 241.954 180.03 cv
244.658 179.059 258.154 198.761 260.875 202.638 cv
267.275 211.763 269.321 220.656 267.426 230.406 cv
263.749 230.179 259.365 230.062 258.501 230.105 cv
252.332 230.413 246.413 232.076 240.708 234.305 cv
237.639 235.503 234.706 236.92 231.872 238.493 cv
213.48 224.299 219.926 196.28 232.186 178.142 cv
cp
298.254 233.303 mo
295.31 232.924 292.381 232.744 289.454 232.564 cv
290.453 227.051 290.784 221.518 290.924 217.558 cv
291.492 201.493 277.414 189.267 268.17 177.497 cv
262.039 169.692 255.979 160.723 247.207 158.577 cv
247.119 158.436 247.104 158.3 247.01 158.158 cv
243.97 153.623 li
239.866 147.506 232.663 146.889 227.149 151.454 cv
199.866 174.037 188.516 223.524 214.09 250.785 cv
211.987 252.453 209.893 254.136 207.808 255.833 cv
198.41 263.482 210.705 279.373 220.785 272.653 cv
244.388 256.923 270.156 251.102 298.254 254.723 cv
311.887 256.48 311.758 235.044 298.254 233.303 cv
cp
f
422.442 187.956 mo
420.036 188.576 417.607 189.174 415.187 189.788 cv
405.3 183.95 404.165 167.99 406.846 158.399 cv
408.866 151.173 415.804 136.935 423.991 136.564 cv
431.961 136.204 441.547 152.871 445.656 159.063 cv
449.423 164.742 454.04 171.776 457.011 178.835 cv
445.151 180.407 432.915 185.258 422.442 187.956 cv
cp
480.106 182.262 mo
479.583 167.428 464.958 148.841 457.962 139.5 cv
447.665 125.75 431.96 104.281 412.795 115.995 cv
386.991 131.769 374.81 175.216 393.365 198.883 cv
390.354 201.199 387.687 204.048 385.599 207.782 cv
379.569 218.566 393.46 228.924 402.42 220.761 cv
403.162 220.085 403.904 219.408 404.646 218.733 cv
405.893 217.596 406.75 216.371 407.296 215.116 cv
408.887 213.877 410.768 212.851 412.882 212.03 cv
417.025 213.191 420.363 211.855 422.557 209.353 cv
426.835 208.491 431.003 207.873 434.084 207.079 cv
444.913 204.288 460.851 196.981 471.681 201.328 cv
483.414 206.037 489.017 189.034 480.106 182.262 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (body.eps)
%%CreationDate: 2/19/2018 6:27 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BoaR^FX?grJG]rH$N[P'N-7!ugGjfdhC<M1M?OdG/OF+bP$&q`>?RAJXK8/K^OGT2f/EBd0-YG1e5Bq(7Ri%o?Ym8rpNufc
%5<6CPiUo,_?iTZck$NVCZT7E%DPiYA.>?U(]pYI?nWTUCh94^4J%n29/l".ljEP=#Z#YQ59@IEsfj+lI_mQC$07N]irq3lVhnFAU
%s8D]42m;)NrVdVFj'SCmhYm<H+6A^L]AMM\HM-FH]>L]40E+DCg&KKMI<kYRrpo4=\'Nt!_VN."pGFW'L[X=S\H..lHi3`,hb)@!
%p[?s1pZ12to5F[&0KrB<H2R<,IXD+8Qf#Q)qu#9n2m<8%cZ&1KQU,Qgebs^<o`MbX06TgFT?;r$e,;Kqs5DKiIHI])-,71kfabLd
%^NRBf%P?T0WZVhX]R22ad3H&RHMlRV?U*rS2uIQ;DE$m&^ARPTB37;?9Y9!$a0o5\Xr`+ZT<aZJ_;F'uqq\=9n*[`B5.`o"7>s7a
%)-O2'VL"r;#;7j[gpnl/gJ\T+h@#mAaiJ$/NIEX,etl1ql`5O8j3.<as'k_HpWpUbIp3\6s7Y8M0E7@iVAC/>Z4/l;jd('^jb2Oj
%nEU#?5J2I@:?GPpR<>?TrT9UH=43LcUW]_$>l.qJpjY<aGL,1Gnc#)@nXETE@%i%S'2gESrV[8arp';dmQm/94QJHYh7rsFS,^J\
%s4l\"n!l]<VKb&33:E_+-XSqkb5u31f9Mn</o5qqf=sELpVYhPF!;Ck9;1(s]RBUrQ`kn$Sa<d!D'A,XIJ`T):<uf2QN"p/hkf9n
%fC..-R>,qSmU+S.)#O!rf>Gn$mXG+7H,f=PoY\.fGl@OdVU6`>A(lEQOT"_Go_dNdg#Z.qdJVi!^[;S]H$B;%HofB9F80,9[s[:r
%s,Y4SMHRdqps_<OlC<<L\aXXQ/-MIY!r`N-VhKZM6F^:c9ln<73THV\?bAL6S<bs+_f,;lV]CgXm<HRGa!3c.*c]KeJkn%d&:"$4
%JeKaQ]gt5e?.L(]1\F[O>!I5`#5Ebu0J<9adkIpc>5\k^_Z)S#K>RX.H^tY[(urL5p^;_ks1"=hQJNO4_Z(T;IR,d0Kr=4+C(G8%
%L5,_JcK0Yd\k;>%cEtln:)3c[96Kkf!:@Mo:7okXf;5LFkSI"3)"Bh.V$j7If?_UVi>8#=1"MW@WR6VY7f8=^0L2H:r*MLG-N&qR
%0LkuDMlGd3PH-j^1Fk&]o9GL(dV0M?mW"[j?C`#U]afR`f<4A%p"jiEoT]3+F"kC%UDP+,f9,C>(aK%#BhI\.UX"d(N;ml-"t5g>
%.^(p*Vb`qYP[;JB&l#2aG$[a0M5"mN]!aZsg-;-TIBlTh4'rf$N_d9Je*?Ptp3Hi>>e`noFe^Etle:Y-kq+Oc;Guqp?a#U8lgF0;
%XA2gR#>46'%s1G)jdhk*cL7f>kIRi$qGaAVQhMr.h5stc:Y$KNV8c4,_U$(K:&2(q5O(K+CS(4fr_pSmEppE8s4"4hp$_lY^J`Lp
%;ef*(j_MW_O8;ZN3ZRe\r_pSmo$^1"qG7&NTCq[P;no4'<VS]-&HD(mlJM7frJ<8_q)J8paj$0q51sVE\,3O.Qd^&d>iH&AnV"Zp
%rc5h^Qc.o@@>aQJIQYl$qBbBM].E0*[B4q-8\?%hM^NU9ra24*,B)N%__b\uh]RuUh8+sFX&JX($qG2E0,JQI#F),>T.-\Z5di^X
%DDP]T\1oYOCl[iODa%IHHc".VXaUq%EJuj4qH:g%G+?$'@u9i$]j2FoF6[Xkj+#qTK`8(q"RRL\\(+3@^5Y_GXXp>eT??9Z(?Se=
%14E`1[lQZoIet@dK?Isme0g7!\M<gJ2Y+dBSgpKu00`eRBef3O'QX9EQ4BN6s3T7JSrT_j\&2"4jaJ\+En/@`_I7hu`RC0?h]eU1
%1g`.[(n\pA=ae4&<gW-RiZ`T`>d$6hkh*)j*"uE9,O9a@n(J"oj7:cdjgS-TbI'!-$d>LbEZj2'V_,XQ4JfbI-i:J5A<j!dqrQY!
%$Co_G=2)$=DS/_917lpq:Jn,rs6T?No>%95::;V!n$4/:p<5dG[CVRB;sQJSXNPPSY5]cRdU0CdW=?Y43gj*>A^BX8Q*HC6-$u^!
%Megmg3LO,r"WkLXj3L>ZO+#2mDc'ecqI(ral@/(Ea!7k\p$#Tqa(I5gIucf_PTJoWe(><>ir(_h@_-AZ$I$Iq.(iunmX8!ech7%t
%F'ejQ8_YGa`ROGXP7;$"FZYQcP\)pg`pi3#g*VW<1#[5>r<k)7ldY#W*kd-.KJEJ]RMXSRY"]Y1?cMggnT:L2&gg2jFDYVAY]TMJ
%UJQBdl-et14Ln;=AKW#]E&kE";a*@-f0*R%V@<S>g=NUAjj\-r@fb%9!@c:Fc7^O6.Gn_%]%j@iKRoM3n+=[73r*1>'/t`JbS!k*
%T29m_B;J4LF"BB>853Z!ifZ]I0pC/35NSBD/4.!S^<NI=hl[`<+jeB]E@cn<6n':=<2SFfK55kkm!7cQ%Ol2EdBAhCXa[@Y9(l_D
%]fE.-^J-V(9e'GC5>!j&2t%[uFr]8ElIT]g^YHarY>[4;llJ04\ST@#:8/WXHr/Ia>,Y5%&859RPrr0u2=lWXf?HqiD*74mqeej0
%:Yi&D]HS\g;^F?]+?$\VQ'6KdS_c$'2C*C467.C_aUpsM0Y[-fDtN:*%mb(aB@`QcnYSsK)aqm&c..[kB"&*1Pr*GSYBsXU2GW0>
%Rc!u0'C3n_J'>q@a56RA/]-VN^qnFP/&P>OQmZ8o)`p$Fq5p14NF]+'E)=cS1]-4o\DP?Spg'(;G<d)6b;/ZX&R:O&*N*UE((L/S
%5P+"oVKLW&G0qZH_qN;li\?1a+<N5nP4?Ona%%43a`l)5Z!i&"V/'Otp<$cU*7k'e?G+ppK+*[D%U$@p1`qcOQJH1c_u(m=\@$',
%fMi7?W"?)W%l9/%o;q,g2l#fbHL`lEKeCRjRU_H@n]Ric@c#6o+lgdMIok0^@d2CmKklrfau;AbbH`=cU[AMOOK=60PT0="MN4/o
%3smmSk!anlXZH'.mcm&]\!cmk(A(Q#s+YDiQc7_>V6#NTLQ#6IQc;n7I''`ZjYF->[3n=e&?0QSRcK(lehW3elKckZYIgeuNJdpW
%\sH.sP*:9SXKl-G[7o&K45d9VQ0*r9H>QA=`p";"Q`Ysfl?Bi[elh0N=<oPQ3?PC_d'uu+/Yh<6m;-)-`&8JZE?eY8o#TdEmGiuZ
%O*Y4Rqqc96ALu2U5^0]g\okRnV<ms@:gGSeg=#Lt9DAa+I^R?d,p4/=n*Z=]+(L\TM[Y@9`!s?6;C]74A9G731b0S"Q.1)aQ&9bj
%K+L>#$.$b.7@&m=]<Xi&^:UhNF[O=$Vf+5SRUbuM(SCED6[hB7]4mj[LKhAZ&K?J3+!-lt7taj4WnZDuk;Uo9Q"X&ki>C]jQ[@Kb
%B)=I+.n[rQ\Lo.$?&NSd;i<?t3\Gtf>qts4IV2$^mB>_slhL?%-La:\a2N?]1#CqGX,22G:"M2929*W%F)"X]WeQopDS5SKT8r6a
%9RqH,4nW3!R9Z'\!l+@PE#m0R3gf.9eb*4M0"oY'@V];Nc@[uo>K6<a#7<:iMmD5_HU':;0MLT'CN1(kJY[_\i]\FdY>[[U;?:N@
%L1?eSB!0?hh/s$]TMV)?@FY*SL/iq*l.9poW,GDaaC4b0bMF]$-r7Ns-9aP/e^:s1'$?K_.&c8)\CRU5cJMrFSZ'+sQ9QIREAs`;
%>XQ&=m+puU[8i6kdehNpg8oqg\r6QTaiPlI)iKE>%pQEMo];>ie*m5LFtq.2DZ4"/RTqZIfB/.-HMZ1[]&C?'g*X=]SQ<u"Q6:M;
%q`QO1^6RF6,:a[7@L;.Wr15B*WiADU(;_HGh=u+]+&g;+@Fb2$WA(Ju<tF;)koqTcSO)bTVsLbqB`9`C5(8!KS+llQ^:!hL"!9?M
%[>i>CX!4S.YAj@1>E;!-'siU;2^m_+O54.Sm99IkS>K6'?l1bVmlDfg!9;dJ^Z#$6m/)XPm]l42)7P"1AJ$sC$+<8hRjN>-hVft(
%FqdSmiE=ONo/K$)"i%@62gc&2WYUV#F<fI$X?8Th,.CY7_B@#,0WR&G>e0a?^T5Z-K[iWbQ`K=ch'@p3:Y.bVRD3R#k'@3.8NArP
%Fkm?B<*D`LY.)Dk'cpa!:L/P1koW[nO*F8%@PZ!qn\!_")j/M+mu+I[kh21Sg`%/bdMjaWIQ=O&?*-`150rfWE];8_bc6fF+Aml$
%_dX)/fLP<4V"9.9pO5tk7i$!4<`#?#(MCt/IT4OW8SMD7m*\T-T#)$r#//OJlM-iL3QLCh\;WZFG;rdt<Q'Y<Jkd@?b@Oqj5mJR@
%'`OG^Blq=qE]j"PC/X3YgLc)iIHYltFY7=\lmEgaDNc+b>;,6<gBVKHEhQZq/Cmp?1VdFi[\/6@M#jBQYEEJ!-oA6GSs&R6Ic1m@
%SZU'm\jJ_V%-McfBT\aknkiJ_)L'1To6!2<k<3*r\[g`AehcTN3kG[L:9?Rsl[J'=.GsfnC/6Yjjj]VnpJs)1r0U1)m'u&]fjJ$"
%WEL$m68mSrO+6olO#s]5o4_=<ai;LR!]3[,UScDeQL8MMT;';1ht"H5+%O$`H^?-Jb$(b.Bf3)PN,=s99o]"3T1keYm'pnt]W:(&
%\#\D$T,%cZ=g/Z4?.6@nn>VPsV_$O8BE!4t5u_Y_I46^,`nYu`h'pshf-UFQG;?IKqS!oGEcVemGar$oZW;30pS1rc1=^N1fL)gM
%#:.[@JD*Q"qal&e]o);n'sH1gC>oI*WNE_7hY8/S\T.`kb1I(D4".eAH*T=uWa\l@pRUH9O8;bVV]H-]B&ZEO*nGbah7KK9=HRGB
%ohl(&=YQ4g3i:3GPpnntpRUj)b[3@F&)F@r<5k/;U<dT17*j\hWIUM=0W`I&&$.HC`1X@Dql!K$j?$S_ZC@MFWG@5a(q/a=Pl6M"
%p%=W]2K_'a)n4+>`T)'!C4'<.s,YdtQ7Ro!4t\?b$A2gQG7u%p7^VGY\Q6gBT"gd'>68]maW.pfTuN`qq;0SsWYFZWQNqodfGrZ3
%^R4iYU-(&D#JKQ)b'6'fg`L+Jl"HCtVV@j,'Q3&6(Fdg5hIa%2CN_S<JN;4:lp^9UM;Zj*.Nj548'52YAY'_Tkhki;"tk>cO)16O
%mknZ/jL]`>7RL]+]+uOI%$GlQ3o=Q'03<F$O[J^^C0_>rn<IU.@C!uR7`ImIVRIdZK2?f]EHlQeT,)BjP36?a+tgX2HtP4]3fH9Q
%WnUK[4lj/"/UEOJpEJ<k@]D#;l"6X<ZE$VEeP+/WE+QqiQf`jk[`Q&Ro9Xh9bu[g"R/)O4)`.GiXrJ2r]>c&\Lj@\smk-3(dV_S:
%f/2CI\(#,+Z(oV:e`>it\4o(c.X7?[Y?YCW[;i\>rXhB^6PJ/9^MmB;Wp8\=^9SJ[>lQA@Y+rq2>qr@Qb\4,[Ep>LOB%%<,q=HPN
%I9ZjnLTJdtb-T([\%)GbdGC1j%pZiEBl@n6Igpe"g_"$L2%Z)e0^g;m(D`R_Vt4q?qWnW1fZPJVY'S$qHl6+bJVeb4Ahn/!VJ8r:
%^#BPrh:A0HB_iLeamDaAn(RGg!NmN'Q#K*DmOBt%l<LPcKZS#Z]9-l4p?VS<b'Qr&L>>Cn-n=I*M<`c]Jkcim-@IHP8eYG6?J"B6
%+_PlpmcJcCla/E`P\\h=e@f4'EA0\J8j#efHpATLc+J>G'f26W<HGa;EEqb<0"`#:mV5K=+Oi"=rW1n,RU=B$9?lI=iHuI&nbfIh
%AWA$^WAuhkE=6VXhLdGa/N%W,=_qt^ipG-qM=^hnl?t&K;PQPtM_c1iKfSPPZD`kENj-*:Rr9P^a[qs6=j4a[oAR7sD'OZX%opG=
%ZC0EWX[9M+7'q.:AtJe"q5@hXc6"p9[]2Nd3Mp&0fW(XF,q9cT+qMj,4\_8LnG16s.^l/n_isenP1I_QE6V9<HLIl)-O3Q$';m=4
%>cq)`bO%?V8lsk]c:*h<fC(K`Jd(IS%G-,/gT3'<dA+[nO0-9<q0I-D]5HNN_So"42;k`>5hAE:D).Xm99rE^gi,2r>SjLX1m(dd
%k&PJ!.ft/_bdQP2,eNYj5.M$#`Br^@O=KSLHuha%:edM*3k)HD746e:<tC6#.[JRq85$cbe-UIrM7)\f!-HR9YQb^m6Rp7BWGBu5
%dMqt3\O=Be,[-&!-)!Q]&:)'O];EG#YX),n7)Z[a1R&]1DA8FGjaR)lG/:e/,XbuKc?E@Q'2&.>.83/RT5Tru>[$[qofr^Gm@%&K
%DU'2EA=q*2CoiZ8NQ&HjEh/:_Fl$G+R!0:@WQ=8MQ`W2Y4Dqf.8^bqMa4FXVcg3)#cP@8Zp/Y8Fc2^C0?N\Yd;2m%Ih3u9n4oNM@
%e\$UlpU\&P3&.pYDg?uY.!%W:9bkodR0^>s?+J+eWS8W8AQEGd:Q0jYX"@7IRoV;A-D'C_BdmtbbJS<.A$j3(Bf!Gn1N;WX-\^^+
%$#.KmEH7SPC]?m3i/X#Mm&_k>3aF:kdA;ConE,k4$fcugeVqBSnF%T&5cMVS!e^00oBU;p\6+2C^A/P+R=JL@0ZGd'^3TD6O6+ji
%#=&+NrnS+B4]@G62LPJtDrcM:YCZKDm#/X1cdLEP^A:,Zr7e]!Ie`>tYQ+FCZS-d=s5qQJmW\]url)K.DdWLIqepYmq8<5s5CU'<
%.H+6M^O,kUL"o&pDWfe<J,.pH*kC7keap9E48i-]je)5/;m&@@s7;_hhtA"&lhU47pTNG$2r%N]HcdADI.dF1o=$f1cu/WZQTrV?
%cXi^E/TKeK]754V4n%9Ws.)gkn%s-HpOD+SiM3;5l;oWG?ep<NcelJ6o:*5hJd$Mol3BZ0^3P'Ls0)0Xh=7Oq\UXA5:[<@nedoL\
%Qd=RfBm4fEs8&5RgFVQ\I>0KBg@gbn+.p;op%"/^T7?U5QS3N;[m,9?Vqpgu]Qr&q^@?JqdeF\E_NdoBkZ<90p()(J^&7lap6`,H
%9:;B<04*Iaop>.)h*6nqJB.N[ol"1&r*5;WS?O'Mrp;e\k.Q*@Du6nbe^frF_uE8'q<A,rB'U>XO4nYIoDaP@WJc0'k+unN)[u#J
%F2%MBF(#9fHMN=d2CbU"T3o>37f*)6%klhrpV$Cbg[>+Z^AI1kcbI*TcDbH*eSj]e(5XqAXIoOj@9I4)h;S$Ob29p]rln)uQG3tC
%oDBPi>&SRSq=>[*rr2o)4D)3R2soDgnBJ9mror)Pe"%>iffK%C6B6S)2Y^c;-LhmZ0S$(5i)?p;5P.kiQ"/\LjQj_<:NVeo1V7rP
%J3N9nG4cogHAc(>_p7]JZnp0aqZ,RMl]8^'iVS]$M>nhAnK6SJ:XT^>`So;q[M%C*6N$D0\)4m1s-qh_hEHGf8'&qtbEDXtak7['
%S+FH5O5Fu$f&AXfO_/5s/g4B\8O?@I$neQEoD^rM@NY;MNd:*e(5:B;.A,]]j[7l<TK)%pI@ddg2B+ZRFAA`U8Ff'(.ASuWAE&;G
%@Q=cu`Xq=sU'VVr7,8?.+L_W5i6OU2_4f"-QnX69?fX1n0o5bT+68MRq;e:jhTp5hWq9o;aDmf4E_'9p4Neu3J.lNBLRk>gEYiqc
%j5c5@aDbC-8WN#qJN-6Pb0%251-KN\(ER3L:A-*V6&rXD6!Dh/d7J9<f%(FUf>o]*0Geerj!;Z2-L;k=,,5p:LiNXYjd;#i"rA+4
%?0!t@-TR4XI@0_KA0+=&^r&rh3Li:mfbaZA=%>;`g0oc/m.00)HIc&V_ZerZ3:m"UMNj`'q>Vk`rc!tfr?37n5n?g&IgB/2K9HC9
%Jdu/K36Qk>6C]Z]Ytm\FTH#+/9XW4WW@)'63!oO'jhQ]q'-R`]&84V6#_RnXEtVY;b&JOem>3nUjrin<,`h%#l4WppKr%A>lqHI<
%./tCMs1KCT^6AI:jo5V'!GMi<=Y*(5iY9=7&kY:0U""=OmfU/YkV<KN#,+`;Au/8LV^_7`.27YXU!pS6djP-@jGl^n,KS@TVDI)"
%+C32XI:j]?-^:'2\]t]#o3S<]kY=H>Z?PG6L6^r>I.ibJZ=/p_Y`h;ppmd:(at+OM7:s]a^.gAL-Qu,-]/foo>#si2lfD[UU2Yca
%QFW6FG-^[1.,h[#m4UdN<[]:%(%$^Pc9ckI[br]8'kMB9mX5`=2^]u:(uV@UG<5+eLXYK5GEhLUcCRNc7q"XZoC73k6bb7ZKrcs.
%/-_N"OA<M0L?!A9\)YEWRCGL))@d!?"CdgRW4WO57S7+ldHuY_5_LMJ,OR^Wd=E)nP-"t[J;g+K+lnTc]hHFs7"->l]O4g)I9LND
%R7n>P7\",E$&$SV;g+>KFQ(/02\1W^boHd?ijf)p&JH5$c$A5J`O7p>965EaiE_j^J!:]/<+E6._DLtr!7NP*Z<uS_`<$=CP=:l#
%n7=&Q&2FB18JVCES1sCZbif0^-i?geLFeL*?S2j)8>Z]GQ=WC\qGLaqVMcU1'lMfm9_L'O6M\K,fBjg[<#,TM9W!gV!/!cHnMjc+
%S.YZu;[#b,p_(07Le&fRN2ah8M4chKPFb<<GVlq2iJ,@l`Wl1ml@I#<i%eD</C]60iCF`(#*"1V#R,d95TY_$+_1&DN":f;:<&L>
%L(4oJRPf-JJ<f[pg(W`bk2se@.fE?S*,2WTiCJ`aFP&"(N0TVU1c\HDTuTWb[Sc*VPEdUf\h'(K=%=[t-oA2q>@PJSRFYN>`sNi$
%:!lN\lp)PZ,XW(tos7I?"OTVG!tfT&_Bg6kl]<E].96k2b#t;?J[215M(28X)D]D?TS+;C)?M';WZ_oqdSlPc#`lYm7\\9!1<5CV
%UC)pSX:0abKL;DO:sgso,b-7kp(RT@YPVu?MP5'2/rIcbW$R"0#seS\Aj[k)$,msaP,+h8bZ%,l.O:a'5Tr-%FTfjC0<0i%&u+ZH
%WZI"3LG(-4.B:BZ[Q>1_$n99J=Xa9L#k"]6\>s?e?i$Khi3)?q];bpMWW!ub,?;<>i[3MQ]:V;^O6Xus=!@[!K&dX))+%'o^7RK$
%S/bjfK3DsoNLi1G]X@l*m/$H5!<1sMlf[0^J$]#^Bu6sg%+oB_g\Y^o<)(;gIc,oqA_HlLiPS-,KN\'d["P2nA`sH,&6K]W4#L:e
%#[&4%7*hS\(a33=A1UDCM#'N1_34&7eK.+j-p+!A5VmNfZ:eVl@$<C7@jF]0O<'pnpm'*-`NKX+.X4IW>=G\JXKJihE[nB);e'gQ
%[0iBZ7IVe%;c]g?:>)0n]\(kCB70*;(4(dSUPuE4_g\-!EN'1rpMcMe6O:J6*H(J9D]F4OOH&*X_Ta=^53.a55"cu@a;pn%G(.RW
%GC7ha:Hq&#n^\S1D.A6s3*I>fX.4mI9OcU7dE7][*(3&C[ocfWOkf%H@dP?@cAAJ-j=nGJKZHrCb;`ZOO\-]q]qX@L[7aK_%TMN7
%j>Y5$4F'[Gf:f2k_Rca^L'h,G5$]a%1mL`L10)A`1,^Oi1^/P&*Ju=ilK1?/`Mt]UMDEbne>SP\,7hrM^*mYSNpSfc]W<T"H;JaR
%RRpol%VKL*otrq3bcAWg*TW7Q!SofrPE43(\RTs3,<pRs*?R<%I?,c5n]>-Ya%uX+TAtrmEKl$H,U%52\+"+!6!H@2T85BRr5=L+
%SR`+c["d-U<i-IOgJ`#^e666>)B+Mi%E3mjLe29;0j)]9gDm'\P``$5.2\,bbWE#<MJHHc>n$46<B%h:=jGR=CV3*HMeYN5n^+g?
%1]<!%`.\5ZRsn?4bVbGaF.*9Q;*A[1Fd@Df`ITq-($@#0_5D:LgW.+/jGqjIlf$k^:OAVtIF.N[NrN.(r-.\GRW<'Q_"!e+E<UA=
%j_&op#2n[Zn79rHakPsph(n!o8(!]g_cbr;d$YMlgp-*<[TI--3?@ahW]>oI#0%F3f3sj_#CbjWn";sT"/mI26N,"@?Z2aG!eUJj
%Xp^e)E_#)0i,XsG>G`X'gl3p;E4'Gg74L7g1suW-S4b^`j\`:m8^#:/H)RoCq+B`cFcY-3XUM:5@Y<c2CJ/=B2HRAh7a#MQJ<ooP
%>.Yfh6kdSlC#_0k+$Hp8H!!OOSpJUV3TQ2r3fad/-QR6J-_L9cdN'i.6!EF4+Mog=r5Dscq/S[@dV%5A?FHLe>tuaj&\(6HBg,\2
%6;PW(SY1ND:daCn>b@FmFeI1s/l+GhiU2B*;dGsZkWCS#VG9m/E>AfB_RWfSS"`bZkN5]JRtGdGY0GA)=koLm^>RR>(M@l2Wgcp-
%Sa,K>B;`=&%j_RPkk'P_;e*)=7Uq-B_#\:C<49eX:F.oGTK@8!Cnnp^@u8\*To@RJq?gfmKlW!Pa,m=,h'$qLpSf3VCK3;dAMmJa
%9'n%G6nQP#9!#KDo5M4YZ2QNWO?9lfna\B#)oqcjj!<(5o]5'-PXFm6V"8K6ZSi<(j-.gf5Ne'Jd/D0c5')t7*9AtHq)!<nbY^QF
%Pg:?21Iq7_G:X`1V'6HM9`=_U+#6>0aqd^-hoc5U89s\OjFi?#lt*Vm$!FVS^MK\qI%'pU4tgR:N'k1l,eU6B@b"`0%-GjVf?VWb
%_$m:M>G'G]U>3Z@Yd;fLZT0Y@=asJU=em.HL6'Y.0K8P/bTaT"AB^`-@]Ipl%5!"/a*q4#Whop@;-S].#Nj"F-asMpam8,N:N"K@
%*)Grs&UD_6r4XAt)!=R:8g9Zo6nTBSMTE:VR\!DtrQ?NbIZ"#:_Fh1+BB$TmZLSf&/u6+TalXJJ5IJ.jeLs8K%X1IeN;?=oce?F#
%*Ufns]hbjube1VTUj]X:('upVDVl*0=gJZ\U72s-EPjJr(P,o0ih@>.3d7?t'h8JH&\a^uelAV#?+S7,</5@#phC4DGrfsXZ9!\\
%S4]G([K+ha@4<[7QHn5Ma">/($u+n(V:ieM?;pDs9?*X"@lBXc<R"Z0_[4LS(JRs#/PB)b<7Pu7C"]JST=W6@bp>$NAu;/2qjs4F
%WqiVO6e.G1<TL*==fT%-K[il!?fuH71hZL7(["AMU3E/63TbM[Q>!A1XNMho*Ehg/\ZXttn-a.UVi@I!aW7k)0"6jFRTVkn-s3t3
%-QeeV]/o#5=)B%'I(nY<?F^>^C"OEAVH!="P&W='Xs'[XKH*_[4#(l).bmPi:M,DSfHV2\U>]"fl&!F*M1MNs9*>ZW,9=jhcAa>g
%*d4Wa3m>3"1Y]L<lM-YfW-Qp^,%t+k0Je1s]F(OpYpALGT(K+Xo+Et=QU"IYPM6ia8!llchDNN:!4F<W-H?/k%0;gVP,?#;[BCnI
%;%H]3C``09EK&"Rq]QLM=G'#Y%;S.Vc,m.lq3Ch+#P9T<?]W]s*iUebPQ!\)?R&L[/<@e27h08P+-km>(FQ\3bVp(4a:[KniQ4UF
%37@Yb4'o<XE9,%M\`4@KHCs4^pDn%cbk.mj9DbQ4M)kUVKmUqIA?;+:C6j@onNWB<rgqrlgj\2l@s7lNEr3IiaUP)%k?cNCkutB]
%kMJ&n[iA&sXe^7B`Mk-ZgsW=3Ft-LY;J7\ZV*!qaPpCah]98J?Ub*rl/B?Ie1cUKUNn5nYmOYs2**P@Q`e2R0V`AL0A/L`I4QMO'
%(6b>;`3"[Si.i=]qiEnrpuFf's3,[l3O4\iL=7FsYIR?$#9V')P%a#7ps"'sebR-U,h*uO'bY8CZiXrKpl9!uKN92Fg7qPk`,aF8
%Fn?_48'eoZW]I^JY-_Qc*S&<->'j6EP<-M0"YP1[jj@Kb;CuI[XD=m`Wp9`:`7,eZTD%S+eRr6R)IdiTT8TX3Q@eBhabS&n^M.\1
%A>50+3\@_1M_j1oi7\sE\l&H.Gb?,.Pc@>CcU6qs$U'E/.[tBEc"9Ye&VhU4%_k'-^>t;lj01HQo>j4XrR?IirR'ZY(Jd,r*9Y?Q
%\`4@KHCs4^o,SX;L8D`'D,;jtB>//E9cD)u5h:r^f!&="-_G+X+3BLM0P'`"p]tDoM?T'C2NpKo/41,GararG1\oRXe[0'BlrccF
%WP:pR;?k]NqQbfC4V7!T76AGdU'7K]IjUdLOk1VSHaUS0RRab4aD?`n+e)iKTk@)s*j/Wm*B4$h!t/d-!VPX_ETNmgaW8D9]'^i@
%VUpl?J^6(tDc)fgh/HZ<ZrI7:>r$P.>%L@Ce\dN1kp]+So[;7,pGgHZ*HK1jc[#">XUhu&<SPP7TC;P=a8:P<(jcfsS0h9qMJhBh
%.4C`"0^qq93fEE%+1P@;DF>F-oF=78C\I(=QaH[U6W!JG8ZT5ed*(ichlISU%]*=1KRu8<AQ;J[(0(@M69&d3WE>Hd/.4"D1"W_H
%+qNcM#AT(3GiarqRDi/D="C7([B*j8N8!E^=&q9,^DF,q?fR0D,fj&JAR9X5B3K!<<>If1*IF3>D#bFj\.q'%-_:IX&/FT%](_&1
%JQt$L.(g:VkY)8L4gf#i^=WMX!f_K_TSGoCSeZ2M3c#Fg'\9r0/a^Kn,M;K_'M]lF"0D%+4PI]!(.I.0<\/(5RG^;[r5hk_`/g*b
%\M9Q_Z=ME;G<>JE]4cF;U6.O?Pk!:dY)[aL/<k4dj-GROXe\1aS/:;!WG1X+R.MfcO)n1;:;mTe-jj*WadQ*S7p!j3Q4[9^[UKHd
%h:8f.-$'7R_DF\TeM,\I70VF)eLMF)$X_C7<NiDpF`%Q9)JMbXTB>:n?p(jZ]u#)s5s;SEWks&B(9D#UY#J(gFE#in>o80:*EM;X
%5g%;m<AuV"![Dc@ZWU7,FY.BR/sNT1!lpf8ckqGlk(;]Y$;A[+iNGn*LJ_`PE#k,I).gd2#UYJcb?l9A]T@8]-GZ(?QOoI;</^=H
%S!TLZ++BCT(BO;@,`F_PSg%@?giR!b]&o4;0T4o(-(I3h"s5L(DoAjH<W'Es4DPY<DBRb!D$tL@#+MQ-Ue;#-T)*UCii!eG%3$e(
%%96\eWsuJ@C%>rZaB%V2b;TgK%2MXH>LjQ_[9:)+U;cSr78g7L/_d&T(*`f_"[P3[J.[/)Oq\N\[?R%^f&R4KhFoS$571Y!3<n<4
%'P"-aEGc[]eIbd\cj09J??RBFUM)I&LUDPH8VC:*mb6&nbGn:Y*N/4ul!dX;>94:ZFbo*WO5g>_P>NWDk`6g*kT*m];(Qn!ZMZ$.
%;'M+YQr89AbTgdf/^nDE>W8iI9tG9J%YReLPQO+f;pf%e!>R2[m*>1KIF2;!GCdL>Umm7uiWthu)d#)cZ03fk0Su[j0.4U]CA^A[
%LbutFEJU8W.1-Z^!@!X`F]26GC,XFUi#"k46K&AL$XgkS[%3U'TXgoj4@tHYn#t&]r87C3IjGI-:q<a])OUc=B0supYQ-F'NhkZU
%!@jN1PoN-ZVZn_L_+M$"%b]>smU@LG'NG.!6ime`M,m[hl3NI#;<]n^i\5llFSr[0GbU+M!]s4UkDh+5/U2>!9L5+Gk^cp)>O$,G
%YR0j^`3pO\kH8gfCdXh9XcPKCNmn&*j:FN)1$NRqiK:;s\Gh"\BBr?U(0uC!!SCf7$L]lt\oeR<nbW"d1lqpjdV\p"AuPVG6K,p]
%m+>*YkT'n$OfVY2ZK`%eh,M.lC0MUNXVkOcbgkWhrR10gC&HX#AR"pF1tE4YV5(VZ)K)\r;Y;KjS<KCgV]kA!8N,#7PbT$Fe?<a:
%qK@O8`-TM%m*sfJPYnpTro)mVN;5-mi5-ZHZO$3)K1&AuofE"M6W<sLg.M'?_6-$SUogCojDr:V.t(??/'"F3)T6iHqXK4OFK-:@
%*=l[%>ou"Q+Wk^^N]ef/=\kP>N3K1g<JDQ@K%n)d2$%n'N@N$*#:-s>7MUZbgkJ6t0_%219H6l<NZAdoMRLVIr\H)Zn^J;a"JB%H
%#1i:MZ:\m4g-^RdF[Q#[)M%P.'&V7_Zp6cN+PM)A7b^jjeRBF1InqqiD3amsWP8^moi/:QO_d\k;noruHH-(l4!k);C-jTa-3`"[
%Q!:6(I[(ha9Fi0WJoR$Ni.oa4Y7lP,-3R[%"lDuW/eGWj3]<.Q5P!_Qg\t?CgrI7h?3UYd6,Dk`i.u2o*UrC2]o<$KNNh.Sc8cBT
%(pP'q7U9Ci-!MR`Xg)T+GXG+.]1+qe,:5;.?gbFC",t8M>gS*-lXQWa#hM$fS-E3<6P+bYX%,h7_a@ci'tB__>l=)diF6Z65X+N_
%51r_Vi/Xj7TiNif]9fqq_cd2:r3&G/(O5?u5AR<T>'P_45PR!QqIT1diToRg[\1a\AP2/DE:Mu8`Rj%e[>.fiR(]daQDC<"q/VUD
%3M]s3].lV<6>,?g\E]uB<IY?Oo[U!A54B'IK?g2]"Oq$Pd2#Uhn)i;j7)\';j!JauD]IH3q"jK,PR9'@3Xff0jq+i!IV]n;KH%FY
%^mo/!fXdsGK<G5V0=\EZ:2joR7@6`mKE?38MV3)#7Zp)ZK`R_0Ude(0kF-+NA/ZFXXda"<NQh6X"1=W)qB>nDeg`Ol_.-StJn`cT
%AMDM(%i4oqe'j&`TA+eGpE&dMi!(/Ea'A:f%(7D`!5>6b4g^uU#lib)Vl!7(l;W#d)7O&:(Jef?eHE#7lMgeJrp*F_Sl!J5!NR9J
%k<>GA[)fG4?c"X(`?&q0*!CER;blo_H3\iA?$$V23CV-VAT*5.j-P&B]d,\K"I.V0RU!:j("47IRucBfDEI+#&]T2>G%A^'MsFWV
%+h[YR'^.AAI4F#llJ^<g>#odO/!7:T`MsspFg*<F<TtHR/_s%tX/]LN/?ZP&qk>(LU(jt$A^*WWb!QXb:,#"PeBHs`A/q3Xd/qR9
%J4Y'#nH-sW3:S:fM*fdNG_L*j=@IrHhH<[M"*eC?V3"aZ09dmgN)Z[GiSaNpUIk7-;0W^[B(S?K_aAn3s$V,cf3bq+cP%X'F('(k
%MA4TN\dY*R;&D'SKe/*JL3H^YDm-0P+LM2;f)42;XmDgLHC1S'oljR3;N4k7;+i;[:jdPleSN/fYOAookaBR4Y0QDd=%D(H,ohR=
%X(PYoFO``GliM&YP/)fjjg<uJ=aF(;T1\jVd%BmqMs=)P^6H1A>9N*Wo:]Dml*K7sIVtPf1[W\raJ7s%'[%JR<<gFElj:=@V<,Lo
%glXN+s1f6C+a4?Q,MkQ2"34f"arQfql0Va._ZRqUaXD?qDHK>_<K_DcFt73^9&+B@8#rJ?G"a?,Ku2EC&DrMa%GUN5F7Zfh@VT&*
%FWX[6%EkQ%@n4?`jX-sO&XK0/m`i&pK,SD2#'MNt!i:EKmok+&br[r\-_6!]$:SZT].<""/]4T#=)HSRa\PdYQ-&&Tg-p'9Y;a;0
%=1ZM:e"(.]@5N?qjRQc",a]s`(gP:"4=r+=C^mWmZF;fSG6h4`.-!e/j!3ti/YCt#,m@_"GhF>1?t,K07,d3%0i;H@.j4KpjpnSg
%>M).^IM_C,n2-K!`Z'TsKmEt+71j_lR[Y^n.;Ti/+*@>!C3sAffaH1"7dI+*-s$]9f];%3@52nOB`Xj=fH>iDQ4:$kWFDhYm'O.,
%e4NuTf=2>W!.lXU#U!>f*hp4\:q=<'_XTKCUSo)b<>S_h^j>^nAgj=d,Ad<VM@(;P>eCefnSUC$O/p(3qYbM!DL#BtVf(gS3U5Vj
%06F.r5H'k=osHd>$ZPA=D>MFjl76L>"[09_)G!t^/tZ,ZXRs77ZX'P?8KUZJ.PrnYM'";F4X%%qG-r9jqV54g',5U('jEN4\hg1P
%0mIeTn#J63&8;Otog$qB8eNTl<1YB^*QL+d%E_IJJ,5Yt:?0M':`k,G<@>'0.eG[FN@uJX^27b4%25;54Y=(jejre6MX"5>LZ7bU
%$.7@C<6FLU2:,I%M#rE<E@N_ZW"8"?%lHmn9CUJu?ts$7l-g4!1TYJq+hdurU9>&3P>.;<Z9#QPUIs7);?EfOJo$PbWbHkfQ>*s9
%f:p$41@r-Go&Cq`2_(o(db<=3Qk)Q1E")qZGE9R*b?$IK'c;RT2/2ii+5[-EX@b/5iYF!`6AC55Y,oCmiAF_\BH>jP#iEAC&s]43
%95sIkd.&4#:,Fn:)).D?gA9e/[0\p-gZ34Q>MkTpSYtR"l0$eO"R:H@jV;^5,QSn\OuLir^8+k05akUHQGUAo\!TM>'k'^A'!')O
%B>p+01eL/I3Kk]36sp%$SLH""b(WM,E+pI#]I:4W9%@#nVNN@\94R3CKKg=O=O_S1L$-0MGPY4jBrLI"bAc]"]]o!O-\$`W?B4Ke
%A4lhk^\)WKHmu6krlDQTNjoqC*C%AE0?89C$4$Up[pDt<cZD5cK>"+be3;=*OQg-YV8C6P6_VlFa3qiI!RB2J:IGXa$\db,6k/TN
%&"j-@@J5o4"/nM!ifd7Ce%"8$,!Hl=PSG1iE*UA%*QOEbf5b+j\:aX8Nr+0.dpZ5m]6ml8[^*b=c*4e>qMoL)*ERJjj)L@-3fA_J
%[Hb52_j77%]o@qk.kF=e#a$-Me]2h$.mL38\GG5iE6%WQI%*_1,8Ju@.Z]fJdXn/c;J8@0ijbY:OWlh\/3uSb*%bG$;3la9Q]9J<
%GJE:^beEj-2Xs#hpX8oXgc-Ufb<Z7:aY5j4Jh\\7h6?;(n%+Q<lF/:%_L,qGl^,/&HXE7[,B-p>TUCQNKIm4$+cDWclcN=f1_'.)
%bO\ttHWQ4(%Ae'DPg+iK)9SH5Ec]YN>+a,.aOR_C4#mp[F]*<O79A!!=(0of<OSs"RF4#QW/IFNQjWWG^<EGIXS;,adPmITZ`SGc
%]mhMtN8ZoYc[gL+EC4I?<1UDI%0;;]VH4Km8d)\cd]-=d?gh4f?12.h@IN5g\/8q3)fi[uV6>KjV06^;)]O#HbJ&tL>P@Nu65rL+
%+.msYlL@Q9d:GP_ShBnTC:2kTVmC*+)$UkRQ!(.9k,?[X0O9q<V7J.1HO=-5$nQnPD9)_c>;SInCi8RVO6'qmPEj,]i++]m2nCFg
%-X.p>e8u>Dr;(<.?'h.)Vpj)U1qK0B:n.N#WfE%f@=j7cjm>%]"-GE;'RD=47anrTij!]N0AkDVf*&Dlc\$#-^SuR!3o4g9*X7tk
%\N1o=a$YXN*8dGQ^(#F:O*+6<llLlW0";MIF86<U/I,jP+R=4OY,0pa^'AW8`J`ds3[h$X5<?.nQ?dPNMV)lFo">fSRTYq,D<86f
%)=FOFpLdhA`Ccn(nd05??9'5.!oA'ADg.(BB"X2-mBJ-iXG];Yg$GSOHV%cnS^hoomhbUS\=+0cac3dHIiqI%Vh,@_@hA_].AFGU
%[E<+)AUW<ImB7pI#^'ra4=k7h.RcHp'9BmeGCqN$-H\DkD[&D&Fmu.fW/G/-JXK@*TW^^)>80um2B)j5p!rrAbBpA#h@9E*d6W'D
%b?VS1X#B5YRW;Y2\(pM\icprd]?N:,DRh;o!.HFRE!_Oh6K9/W]<]<5l^LTh$RbI&dkfljMDpo7AqQWLc;IFDl-W@rq;0L,+msc"
%;^+$OC0'tocbXFXm\!f.@F.=)5!(/W4")1j:k#9ucSY0[-9fns6T"?%l_+0b2p\tj;AIG#>J(H$GYK0=re:Gfr<u.P!&6BN`Xfbe
%Q9;<D_U0bK')n=tf]!C@'J*48ZIk*&s.m(6-]./2]aq]eUrg<rV&O]++*.144S_#ommA_2:S*!F,1P\bTJ*<;d<d549icL4hY?3D
%7-YH@m6*D`J,e!@GP?Tn41on=ia8q=(4Ui-JUR6CIJ/5?p47YcJUR6CIJ/5?p47YcJUOtD5PmN+e&5mfpe2?nI:/\i#:;$0s8AG=
%?bUsaqVB?HJ,K,g7oOj6jOk?!ruF=FqUq4]hn?XOqc^)r_[h6EreEFN@)1B$GK0Kk.!Ep3-M_Nhe%D/u^<8hr3u?+HR":HY*q/dB
%5Q2NbJ'^DPH/e66s.Y#CJ+EL:Ph&(B2!f\)qksHKmCmkcX+&5nK%+G`47BmPo@3qe^KNJ'T)EDDP8hciS%Qajs)nA8h<F$ZG;%jd
%IfB$o]3jdf8cJ&7c'qeHTC.23-Ksde2_X(%H2I9nq29`bC&IgO043ObrS.2cms__B)dMo_j1dMIs71g!jeO.$9mn7scN]%W9fX''
%$f0+&oT^WCLsf/TPFMRA\_^gVNO)9%DMhk8S@eA9V(t[rh>n6iRc3b@@4*#^DF1>(Z2%/Y:`@QKEEQ'lU=ep@k`q?*PYZ+eSWL-n
%;n;M\V+%O$rGUk>\jL&XcHP6"B'4A.>`*,LafX[uZ4E+b'B>X"ALfA(SIED.9=RVIA8-%-@Y7dr<;=;#p!W_"h[,@J45g`po->Dj
%G;kFl]DGH$o61]!/)*-5f#\C2agk[]`_Wo<)d03jh`1\s^Sk60ABZYpm(po8-fKQe'P&1>/ou6Pg=[dB)<Z=:^%9+)G%nYu(3;IY
%Pg(hR!>`>l@D3,dCX?Hf#^$If4uR'h2MBOid$&i.[l7oZdNIA;-[*9t&*e<.S1J09IKl;h4d,4=:!ZAB%;GQ`SRsBNj0dQtSKR)e
%^SWi/K`ZSeA-.F7FNm3fO*-.QZ7Ft!Zg[$:i=R1d4CaO<MA4HpAhtdP9O8cp4(d"8aqW#+hb@QKn/7ED@;3!p4]>tI@@$kFAqOIO
%)45#o]dYNh._!An\:[qd/[K;\c?I.AZSq-GZ;M?lPV'0FBSfZur>b0/0/Z(:Z;&[cV2m\So:>AV_[]nk^O:460S80)Fj_a\m5Q=f
%6kUT7</df?!L?ka1<<R0e77CoO]g`R>I"R@%LGrnF5k?d@aCBDpP%?-m8"r*G%+P/M9Qf$m8hH11?[L#EC\BaCfn6;2n4_2#oV-D
%L,l^IOlUZGZRfZQ>6]RuZYVX[LY4bYnM'<,CO"atKdt8GZEDl"J&M`c.XN@iBVeKbnP@hG*e!1`Q`FY7ABJIfB.F[P^L_W2rl[pu
%\1RU_ODFpYWg="m^o7i:;$)O[P#<W!L15k5kT!5Gr%QQ8mmR,i,2u0;Z,Hf@#VCLcR4Z9!F.)&"n!n&<Z5C)N(/u!0]1I7/0f&'b
%F<b;rOuC0FL5AGVRF3r;ZgWT!0EalU,qYk7?nUN8fd=Ct8<S:q_0p:%F?=MoN3WQ54G4oQk6-X4%^,,nAK'\c@C9W$A[-r?MU!I%
%Q4,h^T>pS^68bKTOdfNr;$SSq@5ch%BDEN!+uYUih8sAhn,tm%>Bu68C3/'7<Yu6qe!s."XMbkVLbtqrq+G:L%Djj9n`?,$3&4nU
%<p%8U#gE?.?qV,uXWmqfS";%g&9UoH`"Gj$n+&0)K4Ts3ThH%3K7$WNKs'L"/n)Ut["(,,M8DtW-C9TL^bV++`-SCf+l*hF]Rsj,
%LMf(1),@(\1%$?8""78b8KnK,Q(`.'#Z=tIA]YLC0s]VE(4n!B.17P:mmO,YliBiq#mO`$YoU*(3$j+M4\.B\cCm7Ln77.ZF[pk5
%_aC9>gKYd,&VUu<?_qKTO6G'`N$&N4GBAoY$/Gk<`MgGeJa;:B!OL$bQc2]0Qd4g)b^dpGB[?7.!')I.rh<^K<%`BRnr/t2#Z6Ol
%k<uD(a-E>\1kMP3'.d5-'!#aNGMs$]4.uth,R>Et-s)]M+m-@W+Jq[0&UVrf?mj@UAb_ocfB1j)@e*+#1`&Z.&jX=`pXg\5.Fc.q
%:L9VmAkj`YX(6q=4(O2+3?][,V*W&N,YY:6S8<ArWss-o3D3g+=D<kBae0V6AV(P)Kcs-hnQk?S@$h`+;3K5",pCoQKu7GVEChhE
%=]noN?)p;D)4!/"M:23Mh'D&4%h$ee()V/YjC+H.G+'m8$(6+PQOh?)fP*E@VE?F!Atg8r#u>f5k>Q42Y/2i/o!\0LWJ%&_@Y0CU
%E9e_4VE;S^8@.sF=K?J%,$eC-PRV2r.X'8"UPtj"V]!)UKHd^#Ul3l^1'%F!J=VO:+kS5U.Ml]3'G8+eU^(!B+kt3kKu`DYbO'7%
%%g?)`ga(K(:#,W5FPW6bd:q`s6=h"3KaqY(`ZeD4':.c7=jQ6PJBjhs39[b*4Q5SP5F`'VllqJf=;@)$,m2E'JY>*XTIj!XU%HQK
%dOXEleWJrUp<I3BD%WN(8o-GKWWC$6Z(;ern4$Q-R2W4p!lLAp:U2V0>O$W#7^Q:J_f]?2_Li*MM_p>?M:B,C=RGYf=`W1WC^J5D
%WSm-J14pQGHSA:7AN<cZMc8atll7L;aJ1?P0L,U^n8UtS?YGgjc.$(UK\8b(I7cp5'p4JXFQ-2&=:)=QQK*j2V[6(uZ7emWGWs\_
%(+K^,RNY(QQ^+B^Be&D0d$J/C'h23!+guc1X))[D(*THIDIK5+Bb?Ag\48q58X3Ap-k^M^/#e&#UEr3lJmPjsYa=D_dR&Aq4Z'-[
%`N4u0-2UN)=OigI<#tmbS`>Oi3`n?m0j%"=`%9T3pXie]8LYg/3B%F;P&+(@\XXI&VR[q8QJ%FKkZ1T_XVi[<('VnhI;+VD<43LX
%Q52F4C@]H7fL_R-O^0n5D8NE.JU*Ytr#NK=#N<;V1?_okn?LJ>F*O.Y\W!)N!WY&gUVfjXe4Z3HTKJf4;s]Z/l6Oe#WY69peE!%G
%+UJa&ZS#DtfW;ZX:cGp57.Mn'X%kXC_<3M<abOm\1cfon8?C6+lbLC\b&'B(ZE6:[SLdPN\kr&B`2#!15^:PXXGs3$*mf[9gR#bb
%p)P$<g2huXc!Ct+-WM@T@61eQ!Xs.;RII+O^Obg"D>!M;J%k$Zq!$,pk#Qd"r3P4/rT`4nQ`pG!qs!(DJ+;NRDh%ZHh/f+!G$I`+
%XT/rG.S)=?+r@pR(dQ##%76aT/=ua2)(&Hm;'*P9AR2r?.[kG-o>He)_bE_?K<[_aO.\pEa@LFR$YlY2Kt24]Bf+n]Y].\_''(&)
%%G;Smib.g[d2*g_K)e'o7:fN:J^pp-U;:ndWaZ,@3D\A7*9X5ldf8kKTCd"/V\1:u8;b#o'Eq26WOJ^?[oDZg`K,[@82<PI=M`kh
%[`X%@ke_lnJ=rR#X*[@5WQ]A)O;o=3^C!mOGKFg!Le/H!3.up1&R;=[i)UtETaRfI?lk<0#n=e-,PG#TcU`[*^sF8LN)VK>$g_%m
%]tscdp/m;VPJK=K`L`t6`Z*,idi28Pb4]lB>WY_>OA&_`=(L$BNpB=s6n>:5"$7_ocClo2H`G,PS.,s^#u8Fi![iY<p*#o67>VY>
%J^^JT!t.fl"Ro;O(%)>'HueFSSoud/GV]RO6_G0Z-WP51W3mcXG.huBP\0^!AF<pBmZN83@Z2d8`$A,"9G('l"(sb"C\UTNQBYa5
%Jr<,agN0X3q*[tC$:FDAlI:`:/[Vq)-hChZ*>=7N=tCbC8B&`V@Z4kH0$k3/=]uZ83Ae21PaY!eQ!&lVS`,6TZ:8oSlU*%n:2(;\
%Od5;PN:7:sAd;aq(5iJaM^UkI>Ms3]K9'lt_:aB@B<`j=O(T'o*XI(*&R.k<^F0,=ZLH:[cd/?.TPKk?J)o3:0nCf[L+]9#5)]30
%Y:XD;F5UI@jk6\@QDCj+9j2)h61#?Bfn9ZLKPGk]D@o^tTg^l=4>k![(&d[C.Wla)[I@e]YHaTg9ddcVCp>cbaMSk"?imL:3iHI^
%lu$O'g%Q>=KaB#>L_Y>>jJ?r/.g[hb(+KsY;@g3gB*_k0FeZn;T[TP;>@P%OhAsm?mg"OSWd+Y+Aj^U(23J9-c,?/EFo\)OEq>d_
%AVEKu7WWRM5u6FG$]Cq<.'kPkK]o+G(!?o)SB3&/5d.EuGC";VP%?AK^'1W9"IZ[U:inY>l<'E&,5$PW(+fiCpW_fYAmo++JBnuW
%-4;Vk>qNZ"$5+@_]qK+,=B5!hSedEc)9[I!d(ngE]j4ijknd^6:+)rPhZL87@Ec%TOb8Ui3[\S/mqD,ucJ[JJ"+>K31#N/^P,9\5
%`B.Eh;5.0MHGXg(0a:dR#W5O[5qs:2_(/6WW=0-X(?-,^Qn.,57E'mBBh@3D0%D*T`X*0Vll$bC9\(c=MH1HqW49s0Kf,>kn8slZ
%V4"?9-Zt5B/t3a(<`kFR"OY2"eV-06d>Qk=(0r!h76js0\!hmJ:Ktaa[Eu38ZtEVNB/l2+\`U[TJ!3/`3JK+H6i!j-Q^CFbGS1dk
%euf$(bn6u`5@IHMTc6P(>sim*9rmq^RV2Ja^ut3Y"ggZcMJ,j6bcZ&&;Bnq3p=8g-?rA[8/Y,>9_HuR\qR"<o6/Z!$Dr>fT@Q:QO
%,&`BL>8234O"a[Y+6-[+$Dht'(<ZgH4CYs:Jc>iO3+95c[oE[)ltBDQbD!C+Kn[&d_\W4R45*WULcQ=)@PL]dLlklLRP7>/S/rZ[
%[:JmS1kqYU,;'U6S+U##(GV_bILFu3j&Es:OSM41L_SohbbsINnBgLceeQ:4^+&'>\;8PZU/N+NI<r/5ZhIJ!J/j=Ri3@-5Zm=qH
%Kj;U^K<I",8EV+:n"E/TkbI(UnFgXUVj8Je6eV:hl3u2TYsIc[hb/-GFE9&F7I5UiAT-j$d5qJoA7(eLhUN4ZQ>j-Pb"uNce<Unf
%9!H"9)'LS*-=_W6EC3gX$of!df1,KIp4Tf724=ed(SX227fB3G=g%"CZCBA@(T0U'Lh\]V+9Nf<pG@Q/Ra*]OeYRW$g33Q8n1kIV
%+JGMpO/:e.1`G;<SYPc"E[a[PG[fY)LW/T<KVd6(q$fb[e7IkL<$cgM0]Pe(OC\_!0gmfH\h\JuHJ#1cJ2S"4`0<p0$AG0R@npE#
%i)4WPLq>Z.@F\j"TTOl,j.rj(ZE()gqp:[t".Noq=>1)9Y_uEBP\RiiWl;snL(`G)8=8=Y.GQ/N3qYYt.@src=MV_FAjH6($X'4.
%HinM`QfdR0^_Sc$3A;!R%8(5AL2m;J1u/.CF.*_8P[Rb*b7N(qL9:f$0cqgmA5UmR7_WuGi^Ke*C'[Vf(o<(&C6m7?@J-eG+]s5V
%;5f:0kMSJ8$5qeQAcY/I+Y+N50&Jc*&3fU8^c*TMOgBXUDdiKM\.E.++u$<<d3)%W]+3Ud[Z8_>M*f6f622:i0(Z[4Md8Q`0i8sT
%&-a_,kpFc>T*q&S:;GbcP6Ns9!i$PFMou98a4":WQ@s2],NNpV'FJ&c:.uiI3>^auM"7Ul3[#$M<$rZU`J>#>&V;a4@ENW*SCCCt
%)^s*CR6[)62?j95BjhQ.-,KuMreN3p&X3JS#":nIS9hJPY%=0(+q7-X-APP%;0_1R`44n`)(ZN=338C#8<obSXj(-sT)q\K7!iWN
%LqY<1(B`Cl-fV7iGGN(DhGYg[N;#l0Kdm/;.r"^r#o9STPcDp98.Po`5\.aG(p7?'TDM2`AiMoB43,guMFdE-i'E<(7E60Df>(l9
%geW`^5cm-!g!=nA$G@u^?&Bs5oba[OK5-B8V.!o$ftc@/^rO8G_,"IHCP7Z:"%9?E%Y2Ut*>SZVPMb8O"M7/+j\Q>ijhIq_[4$0X
%S3X/=+XN3E.X#iJ&[igJ>4.`C*>3*l#r2Vsa;4R%7'6ks`,[<D(fUZS^gE]7F'(tl_-H[YdBmdCkV-P_nkq$e9X.rs_%pj^erQl:
%Iemc,aGofmG?_Y@k",h+0I^_)oK?ZOhE&A_XLqE3^aqd5ZVF2B8ff,pK.Ip/=Cjh6XfBVSXpr..JU.B@Y.6L<It[MpUD4M82F^\@
%9&L-*#EdFK_D%SjD:]XDW2tQj:>dL@0hT(f#ihnbe><W`FG<8M(c#\G"j1VNZ.Yq,4rq>d0iq.r@WZ)!GXb@Mq%85k7BB$XKF#[3
%-UcSUkDWb'ibqZCB^/(3pLr5J?K@hlH3M2Mk\)Bm6'PEJrPY1hZ5^)2cr^&POJag#+bO+f$o=`A$q]9F)VROQGaYH9js@*a/COq`
%R2KEUEX0io)An0pEDUD9lem\\.["=0l$8^R7,>V^6_$YX*3GrOb(.EF?sErC.\'T&R;k9$XKWq<*<Np7FsAt&;g"`p"R6I@Y:8si
%X>V%m4#=]G"9T<t>j?G;JKa/:K5-JqL.1Fm/[,n`/K#o:Oh;Pa2f`>3)BeAY`61u,OjV[b^?Fk_pRd><!\Fhn;7=]U?]c@m<8*.W
%;)u>R'+(+qarI>ecpSkN^eCal_krtLo'd3JR]6D,Vc"cWgcA7lbJ%L'dII)1Wl7\k;htGC)7,8%2l!n(5+,tJ4m&$l-/;.!R!9%'
%M(QTG5QVAB0Sh*W8XD]!+6AYp@LtFk,m(t@9#R)ihAp]Jga^9TF>J[X[KnE@=Y[KX-7Z,OpFJ[4%_^@3)'<Ud"jI\pA0f<Rc9(Vc
%_jb(EB\FM+"p7e!k3@6S6S8.D6+Xn:F.s^:9m&j)$i9<>(_4t<>J0VFQ;Z4#'X)F%oP/Lm/g/lGX0_5PmQCr)R5i7$clE4&i$tC*
%;sXhDOE8rITgN5QO?3VUF@O2J;bk-u-;0o>0I5Tsh'(qn+LTo3?4>M`YuiP7<=ZNN1^)f<$$fC=3hjXR7/1G':V[*Dq?u>-DPhg2
%KGXp^Rcb#DJ%Wu;c1JGQ">2cqW``Gb(ol-!$t5R'Z<jo$,9s-&jC>WO&s'B%bc_5RU]k=&eWgh+e-eEp*[[i8PE-X;'9f`5P+k!W
%d)s#;=i@D>irlVQ"t1^4ZE-NiX3P!QSXTEinBsG&"tMgZ7OMO^kkK_F@<-Fk+`fUt#:F2"cHO4XUoL*W5G9_Id%irULWp7H+9EP-
%:^@/f!=VrFs):G(_gs%jH%hq_[MRJmU!fOj5Y0\ZZJl_!=)h:I1IA$Jn.S,#pfh#G*kG$!j<M7nHjL"lW-fioUiV./OBMh^OP6?=
%fJ)72Jf#CE!Y!)S<q*ucTc*D6]*k2hB%A+]ePnI?XWiflAEobXL6HY1S5hSdkd`e5>%F'sA#.,n#Dn\EX?9U$^q^`^._sE1^uEf1
%rs.^Ga<H6=Sa!'E)+&sAMn1kk*Afb^ZEm";+\O/:O-/=YGbmoN^hdWr$0=knI_sWIX2tmr-)/R6"`4k*&-a;J;S<9cBjt)aTH#Z>
%l\UQAM+8-@(tfmtP(?#gN)"_b69*:I*<MOkJRcP6jjOu3+m13KXZBOgI.5ZXDjc26Bc[`[9(NcLPdX<W1W^$LZbm&(7$c5j*"Xu,
%NBjs#/FD5`GG=\\(Eu9l5YH_k04Y'&:5Hn`lM!qtZWXF+VVY"$b6fS,q$>g&TqiS+^-9D3i<St5i'DT9eN2!Z%Jio$)o65*Y%`PU
%60_"i/]#f#Mp.5+91B:095)F!WE@fKRbdI*1+N_RW"ahp84tr]S3f+,eWR&mDGm[F7G`PGW^f=>R4:LnjW=5e8..g\MTnji6qW6d
%U_chTEq2jk'FpTV#"P;cCd+[fVW2gLf@(kMRZdmqfh=\-<&GRL&q4')hI2<`S(!9*'BD5@3l$B6aJb6*"CKcA[<E9_.7>R<?:.L2
%FZ5*_d(-&T&PA:o3V236<6#LhRNO]!7!Mqo)l2X8hF:6.A?arlAqc=/V]`kRN@@-`h,I9aQjNE^l@IE+@AJQA!TEBZmY?lii_#\s
%%$HdP&d`qCRc-4Bk(cbfaTh9eiXPEO^4dtGbXpC0$NllM;qELV,Wq7T-J5Pa$)Vtn'.eR1L($@XO!).O9:@/"*7.UONj+)<UM#h:
%X0_ng#9?pk1rB\VjH6[4Bh4GHX&#./_%?*X\I"+%n<t#J`!YR"rP"H*Y)GjTk_*)+$PNGNqS$RT<*KoXR&]nCnd[DVq3J=dd[@(F
%OC=L/3cD<S[$))\#'3+h-4i4KK0WRqF[J5PRSB/=YXdnj@Vt*2W!P.8Bc.t1-il.=m&U@2j\fanPNnCDoC5dCd:f)-L[UWM!o#Z`
%fKI6N3Y,=6!q763\Y+g2;YE8<"KQ9RcQDaLI\UccrZI_SVbZ3D8O$Z6VG=,U.mdVckm"LETsi1//i/G^lLfr[ql4/,[5i$o*6BrJ
%Q%24BC8.J_#hQ%UDbklnGH>+j"?/"RZlGI4-\<"d.oQ,gO?j.C%eP0C+tk&A@=e\cn4:JSYh*@h`NRPca#kCD1Hs(B]cB]&?5i)q
%H4Pi$gH(Z^>g^23`6<?V]r"^5<!.Y2lH3%HCjQP0Vb!.0\G)fI;,r%?Uf&p&:m=s=AOXRrWd3j1,Q0\-9203I1sJ-/!<fZF%^=RI
%E.jn7Hne\84s:(;l'GZ4l]HYm8U\[>oDs/?AKso)<HK:=dE?'rBH^.7=+Z!WJ79sH'8*;oI#ECjMDkjATuL27FU5s%#gQ(#a<H``
%EEmH^X9;:/obJ6`MDO=]K\0b3aCg8sBd#_R6"AQ4$+02b>K47\b#ZI4.IrDaS2@Y0+pL?B2^Ae?EQb/cOD(1Rk)T;:Jb+%6=TY=s
%Z\=Sa/W`kdVTRq7g*WCWh#c8)+Ak7R$k-!6#!C6f=bN0a5N:VN1s"ge%WB$n8qU2N(+lg@OagMiN%JJZg_A_1fkO??6Djg++o&r3
%F24"hGGU,$>WSj"MKpj4Yp+a717en]'O##h=q9(Aor'0b@SRQcIe8Y\&l'L2I=GV9a'(DY".Y+:.4YFSQIY>]R03'-8prS0O_b3m
%_kLnlfDJ8oOQM2GU-bXZ3M]9_LJG#^"r%.Yk[\=l$4M$bZt(\!!`/$<UUSK&b6;fk7g%TZa#rDU9EnZm_G!il5.`R[ma)"uMCfAB
%BL/=I>F;m!/e&_o[;uY)TLH@QW-Bq4!Se*em''%Y9iHD=oF:mf;5I87KO[DmHkaH7m8@t:6A_[o[tD5b7Ft%?"E&bpjsQgqf3og9
%9(SCREj0/;1)5C!+@WP/3XgYZ]U>4RK5>;V5mTKg(-mP/[<\(Vd@C6@!3N]H8tY(FAZ!-(PC_u'E;IC=[8?E\o)VN%$qs#qdV,Q<
%@+62)&qR_VnOfTZf6@Xkkl\=%8nqs?%*\1.[+n?R'P</0$WGX!Q''p@Zpoe`k2I_qU#[)W)>EF86:Qf8]Q4B/1)5T_H>LD+"k6T7
%RYLtq-$_Y9eTFFY$IJ\?%/'kp^'J;6/U\!GC:f&A*_PRR>^L^LnI4R"TnVar2O#u;EiEX+S1leM&90@?R'esU]b"C'1VY:2j[8"L
%%-&<";of$Z!#W=V`f7;c8VpJ'SKb&q.\Sk)D:Z@C?Pj7m/BjHLMm@pM:9S!GMRT8S7<G#.df>,Q#sp1m/k$!nh#UeN&3T\"m'NE5
%ZA+4hDX^jTj_+ol;2TG-W>*AtpF;poC!mVXl'\c)A4Y*Jh"'Xei^AMFK5t@T8>JNO%s`/RVPCmWS4<K_9@nqZ#@<E[-FRrQdn^#]
%2&QeS4d.Ldee_LDb@in8EeTM$`sYWGpD3O8+j?lF0j$'aQ=:Nkf#>4`\r^A+q]EgVZ_#ReN41d54>N:]Y^r1I8=/)$[6t-L.H\X]
%X_'rRbfk%,$lI8^S$U\mrE's,KFDo,+4/6a/PCJMZs^6P(bdu>[i_E;Rl)kBJIQ%a=Q+ucp'DCN28pW,geB(\\6N.aGL/GU?W-FQ
%Pi`'\YY'RNjY+%FUhH#d6-<lC[Hhd_#%U+kUc\e;734sLAq2e>j>KP&7H/l5&AAF.=?Q4EeSo8M3QB(F$N0r2Kt]8(iQ$6gGVVa^
%Br@Q-%Lt^-lt5Gl'2LnI=uqElf`Ve4c"Y7bEIK_i-3D$TLe'X3=S(F?f`oF_CdtQ0EY_f>lfc8tK#FIVEQ;h!=M9:9;sie'B3<fd
%on3@M)t_J@P]rH0/qbJRF\pJ_q?0:ipG*(fb*86]@SSpp$JhUdfmoCB5\WSnN/V2fFimQBk<\toBposhbYSE)i,Bo:6JS3dc=TsE
%C3(p^J_>U>:.:@X_1XU>$Y/EeL/4k@o:l*)C%7*%;2C6m<6dOp[YTn4S>ba]Z;:Es3^gK^RH\`XbpVIHC3X5/V>tVVa1%a;PnSDE
%WQ"cJ[/o"ui%H!JaN=cddg;a#W\U)6(=O5EeH/qT>gkjUN:pI$FY\65mM.FP>bpZ/)Ee?l\WkjDH]6))'*qKWJ0nWDQW6;i&s`]f
%APf2#pJC]/HQTCOKKrN-U2[=_bemJSf+:[[AnWAd7uC-0!#k(]Tqq%e1)k?[,Cc,3!f2%u9>jqo@9UO=ZgnP^X,VZ11=jT'Gn+(.
%7non5N+$m5ag-f#Hk_LaN$3/c\]Uk=$!M9\#L/U4*E"LaE!<5r/gnZ5fqF?@*^0.S_#hg6b,.sGV]fV.e*b3ad(tB/fa7LCR6%PH
%'NAY2V\G$(_^Cll"Ta@j:q1SE-FZi@8HjgE5`FEKnM&MHB]/^,lLnkUK;JC\aD`Vl&:AXR/Mt,f@XTVpXRI>JjpO*]>T99gGq;sG
%M5b&B'l#P6Gu'6i#F^^TPh,%#d^.m4[\Q8n_h]%s$eRh)pL^GELla[e9o*Fu&tJ,m3^=Ru5QMXNDY4i&dZ,mWa%S7sV%>X\>4Kt&
%N$gA<n6)g&1ta%I(-3sn$><;E()pTT?"]XK<?mV?JJC!Yg1InFp)r02Q&THcB+'JCBFU=fqW'LYS-d#7K8aKkoP2/Bo_9E7X(B7?
%:gXMQ@!6!nLauW[<uuq5S0APB3ME>E:K^#03K84+,1c;=3i?_SA#gga$sl4i2"pjCR7N-AGhj+/r&$jRc4-![W3eC,\QKL06rG*X
%fq>qrE@9@Ij7"`J<I809CH*9e&G:Co1CWP2CRkH8qou_('Rb`*E%/Z'<XfqOONm3>Un<*6+7_8%s4qSLC]gNuQf!;klfTp.Isl_9
%h-[mFo?TgAqV/JtIe^)$FSh6YhLBbLr8%<1?ctgf:X?YFrbV=iruJjl5WcYl'cq,@a_9h8(B1esl=_u"k)Q\$4b7H)2P(X.+=>$5
%d_H]]'ed`YbNYZj$fPNt`gq'Xh?=5)#d)%Hd3e9`0]\$V1R(cUX_0=aB2G@[S-rN":9fbT<r.Ah2l;a+E`A%A^hP?Ks/7<=XJ2=r
%1dmAn1!4)?n&B^knS$K,E>6?g5V6YYq7id.1584O,m;"f6Pr^c[8k3U2%4c6H6_AeH.$q_H!U[b%SQNg]%S_]ktX_>p+2:^nuR]C
%3]<e0U*7'n?.+m6[a&W&1RT;a$_0c&fD1+\.Qd\AL!kJXAstjJfpnMafZM:aC.[6#Zmk!nS^gC:s.k\\\M$?ri#JN;Jn]3QE/.$i
%p*m$]R-?s')D.DBj@Tt[aT[JQL?VoaF5frhbT!Z=%WJtPTUct:aD81@+@Ao,Z()FG649R]`)$II$<f9p,qV8@6:W1=0[*mtS&If2
%qe0E45+Go0_+eJ!g?Q8$ZV(BU!#^>*$6GU33l]CI>RM%?`^Eag`b&DD?G/Wqeme%fFWqTC+H$I^'0>HX:esWcJ^TT)=gSb!Uj*\t
%c;>h44I61W)p;q`Db284SBe:]P*)J)kU=(op%m#_@!0A"`@*Di6l>C#9^.tPp+rOK_[M;7XTbM+0Et.[Se+4UP,.MP>Ap,ka[Iil
%F",Z?1`,43h*#^%,=K`2aGit8/8fRY/u<u1=k1>2'O2Meg4L/MlEhdZM/X;QqMZoW>53Xaa?+\dR%fKA#%-]W=dI./$(KF4jmist
%%#W+g/R"Yo>1u%rB<<IfU)SGL9Vtq_Mbno%=l6VU01C.;pi8S2i@WJ/DhcEIhVnem;Qb[i`XIQq=7T[s!$#/8,1_.]TNGN3Ubu[>
%'r)C"N)nP(6/CS.C@\HNClD<_;V691jWlcoC``j)?'`WkA$*9f^kLBd)qKe<,s\ZS'%6VsnG6;73G*',(:jT;NJ@A%HGk?KUfAHa
%`'aG'\4T't1MK(\kVg5L6o5d`J-K7Xe9XqRJ`U-sM$Mbh?Gd*I.8ack`m`mAd?^`-g,+'%U']SZA>GMa_<?LAFj=6`23>tn:"0Y$
%@:l]V"Q0OWN`pt,5\VD\)0Z]eURA?27ZHT:dRfAJcqKb#YT-EcbtoRBQ40Dm[*W<VbJdYT=d`th]fHb?/4]hIZT2KF4r2qL;-tZ:
%3<DG\/3bbIXQCPmgGOsK=-Q"+b_HLGLPf5n(G2pj>.p\"mI5Ul\t-Cl2YgM-_Kn)fLe!6V"cP!cf[4*^XR_-]@_'j!#q;V'i-12Q
%_>pkL$:^h9)g'/6c",*hI<"mSU5n$XWTJ:)TI_]qYc@nZAZ"N71*gTM/1Pkkcr*\j.O!$[ZrZ)r1+aT9e50NZLM0*JANOAQ+dX9Y
%!I<+^/YXa>^&hW2=Bsgleci&;@;`Ie:,C5S:dnQ#]+N2B0R,cWR!pO\E-`CK,toO=X_ub%%<hpDG'%i3Q"n3p2@8#-Co,J$.In;G
%E9;n6"[<f2^,-F):G]cs5^G07(<:f9+^PGR3Aq.&</(2i73]ec8WYV]OYR*K%J1nrr#Z@VO_M".nUZHnHK\I:/kbM_$>H#mO^uM<
%B%&FqO?c7p<X9<j;*+,R:^9uL!:%MD-#B)N9f`N9'bLI@.\;1I7R(L@Wn#Im#7U_u'f`UDGgiHP!H8om<&@G+V4SIQ="]")W&(TM
%6JsUA<KFsM$jNqIJBF=o(,qPm8ou8eiX<%4)ZW;<2"'#!"0TEZ)c522EcZnG&a09O)ae.P+GU&T&O</I:_J[0:D6j)=#gX`k+M.;
%+u!(S+6"[N>::CAV7)$^'rE!!7K.sb')=#8QUb^L(`>,N%TrT8Ttp(>bn,"87@\T[D^2obJF>f[@>*MW2,->]&ii?V=GV=Q(>^`-
%]`[s=P\G@gl/,"FYihsP/MY(.EYFA)oKrE)h<sH"f:CUnX;#MrBcta`^8&[\)mbQ.R[B4U#G2E^F@aMF!NM$K196<F&5"aLJL/!r
%[9cV'2b_4$b_!$%b$<A:&b/Fq6`ALeO@k%*7F;R>VGbYi,r>00&[DbFOT%3B;GllAR."4*O48=U>`&=ch899/Q.'69&'VtbQr+r7
%$!(*7E>$k5:'_%ZOkti)Ji<m'jp<eno]jru6"CW7GD=OZ'Xklq]jQfq"go6gK`Z/5ai0HGnnl#dYee)jZsPe6OeH(QDkj<*YqUYa
%aPMt>i[W7=7-(e5V+SJcEg+N'i(>oHTopSOU%(t($3gEn!P<(q&YhW]7Yi37B#66Sl[78O;'Lq6!X;\>/K0.8M;DdDI"H$XJYdWa
%Puj:I@pY9.Y)[#U$YgLM3,Io!X&a&pCl_V<=m7A*:.o@FGcYbKQ!I4BQ=9i/3#W>mbV2Ra_9^:EX-JJuVUtA+?E5On@aYajQDM$o
%UN9[GM,aRb[g/Q,knL6-lN)J2WViet`-m"_'=d"3Qt.$KCeqm5V?4F8Rm'YAB&!d:.]dUi6T>iT(p.?mb%+qE88b+^=mA8OeOEI;
%bT%@,X6L_S6=$]N[m9B):(&/*S]fAP.,\spmM5df2JM/!XcdiNPBrV%#])c7TXYe1X_=@ROMN;0g(S39Sku(O#M-AK&dg`fFLTJ[
%Skrp2\&+/E?K;$lR5.\Y_&'odR.nq>a:X".G$[JIp'Rr)<ZdL)c,D5dW6>Dl2HJ$:1pc1t`Nn$;'kO1k_BKi5^c\ZS>q(d^QWf+u
%Lu64BHg.&A0]"ONPHR<.UJVkY";FE3V+S`[T8cT*JA<sdIB&;c\;.AFnMVnT0cHGOUIg3F.)iF>=fMKLB8sKtQk<KLjllkt[u;o`
%NFbJVZXbjC"Nr1obR,OZCP*cf0Z[,I8)UkThD1P'Y3/NXQpQ]ePK"iSKT35'2(tB#B29AWW25<=<PsErXP"K(=iq(57KBO`<._H^
%B$$,d:)0uE4r[^=*,u3e.NrQT-A-6J1.eqb>)4,ni/+m6H<Zn,^=75@-06X<mGr$Q!L(5A996+!"-q`ol_TnbFqb2a6&NWP%D!+q
%/:/M$"nM>J#cHV$Qj]NC?'('Q,bj"I8;LjnLr92L?m[V30\O$CRCO,5(_V`_2P5aTop3fA\%FP4oGT#O^n6gVUe*1PTjt=j-U:5.
%g+8!59Jsr4;UnPBD410PV,Y3enQD!##cgBi9:SW_/#j.(8Mu_Bdai_`6l?FX=+8RA"[#/cPUK6O"=@=K(9V@f`%XZk/#$OD$dGj#
%g-THR,j)"5A=gVA<ZD7CMB)_4iMst@K_h[BF//hd'$X*-6?C@J2^a<]Q3Ydc#T1fhnNQ;=CT,lZ&-F-80sV-2ZiJNo?I?X69N(u+
%at-7jRfq=MiTIFlBUH(j"Bk[f<ehi\T[Cu0>c+m61(MSjK[/g]A6i`OUD<m2cI74%FI(<@p]l%'=W<-\3G61W'AuQRcNJN^f_fi=
%OsRt@&JTACed]NS:/Q6Sn0mng'EEo%R`^CfE0,*O0YgN$g=(<cRfWYiXeZIU]QDTg(T]&>iI>2l.f(-h>e2p-F&ZtjU_H*JAq_mu
%[L!57r.0ZRlD:iP8u$#9\Pd)q^k1*?QJD6oUmBF)VNd$K6O?'&/;,d/fddKDjSWc3'Jfrai_Qo5.VL5"UoGV@%tY>5pC8MP[1"h:
%9QpsR\X<'lh3pGH=43[h;,qc88alj`c;I_>fKN4W:pf.dQYZ\)B=ZH*A[d9N6:r@__r=6S-W`]cik]%7B_K5uUA/>K$tbc."9S60
%QelDu<q2I[`Gd,"ZmL]]RBho-BmmjZogDN1ST=8h,E]q]:i?Ej;2qLc_nOYHiR,%*:i5<+$KbU@U]:HMCG#sHDH87oMOn[m&=q(M
%FCBq<\K!3nE8'UV_D=8Q)\d7#8nac$Ug6c_/IV:)#m?O'*`LMPZ$%EV?D%n&nLUV9@FhDfjk]C+F*jL<EWe,1arjfh%!.aQn'Km@
%oK`*M-14mkV&nr=i9$miOD$XT9d76/O=_>]6>5no#+OS'+rmCi2*#UkWt-03'i>@4nhR8QSQ";IPQ$:$378gHAsG0LeD0@MOKsU\
%XF;H/XYIpc\"pb=eVZWlb0Zie=F<%3=_=i3;O7;HYAS<;pT.bS\L"M;nYT!g0Vb'V+]fZblF3e;\KG*O5nPj](VRLO"mZs>RVc(Y
%bG8m=a[NkZImW'/_jA&i2C#Opk$f#26ii&PPDY/B#"aMAWNQq-/@S\!(r"Wm3HK_RBF+_@,q/m*V?J?($;N2h[$1hk'UqgrAn+F\
%OcZ:EYeE-VS8o<=:h7,f9Uo[UC"@"cYEH-:CQ]m^_4@3T=[^l<e+XL%d:J]&g6#G[b!Cm2`j#jF!X#@*#CT#FbBtY5C0DnE8tkc[
%(9O,e&\3U@J$VTm'GVA)QQ>O_23^okiQjo&&/.<Q0bfJ7>mi/.Xo,"r6Ut%WOtTR6/$-)Ak5qO:?GfY+C0@@ri>!YlLX?_Z,,LX:
%RgM=u'MQ@ZgBtl[%!Kr46<]k1_d'OSnNr2&@:7SeE^QN]ek`.9cgqSe#h_WM4SJ_**0;A;:o9JmR;&QsI>R^E+=5_ZC.:c,Y:In\
%j3%i:d#:S<G_r\p$2(07EBCZD20Lljm8bJ*#T")E8U!(<+sEUfa7ri)5fPe8&q*:HS<^ujK=/i`aX0[r]o@4[l'Ci:QHM.dN$+9D
%1FBp-$oMh?9=mib*cB2+"Q0V3DiAOcht`GMknT/(m]ZT)IRQ!(EM^%5YrT%*`+Lp8FlaJ8X(=,=$#3Q[+^M2/\!>i,8XJZRl=;6E
%VW#]lN)#9T?,QergB+>M=r/SLctmFnl;#IdEJ77_B.oAQI1s2UAoLYQ%:5#R0"^EE<n41>P,<6g79.URf.\W0]+BmARt`&PETRPX
%"9"b:oP^&BKQ&9+bQ:dl%cp,N'iZ/"Q85QD.ZU,P^E,,K=elHr<J;-J"l$O1MDON9r<c@@/l.(=<'YFG2=]4@'i-riJe#/<'8LC!
%POBpYVuTLB4!2kg;)+`3"/V8J"X/%?E?t#;NZ"P/nbN@62]YjGnYp#S:FkpRFZ[0p*KI0h+j(fegeu0K/*QKRR>MuEm`(D96JugY
%*!"6-#onuAdp#jm_h!AipuN,H4MrS,\Y4aFfp]87T]',g66e'I_dT?$fFnuU*52cGU+IM*6V616LuCOa`8_1A:>6B-ZjXNcA2d70
%mtf@SB#6;';UE;V=sS#f@,^a#Z1>)+Kem?W$1/HWS@Q&6=[@bj\OM,)JeS\gdlce''[DU.Gm+j&q'%K@J\mP!6m.X=:q5JbEM,9j
%TQ!.319%V]K`b//dIJS[3:IlCVc%NO_+9tZ]mpEE[H^D.35m&uDMR>P+Q7Q4+.;s2&WUZNU`;4EE1m?G9""hT1R8LiFFar4l\!".
%'coKLOsXJ]_$S*Ir<aN,7u`3]E,\'9_J@r2_(e.WBO=#W@ub/c#ZP>R?u6XoQN7sD:g4uIqM#F(=2W]J5_B.?bM]K<95&:Y)\)o6
%"qAlN0MF_bd,7:7#S!r][R,:170:s7[fZEN(Ws#6CW$EIdKST*gM)>&RnX+mmk"ohE,B2e@t=mJ]oYD+i5#`H"Y4s,%ut89[ADi7
%'.<m,$On2J87$PE_\+&]^1_b[)a65I[3hVqO8.Z0QF]sY7XT.^$@ptkJ8g*T)1luA!9$m%-Y#5'38_!\qU5c_%`Of,H4,+>iWU"l
%]&J>U(lIbqVuYdid9$?!!5d]><UfR2&'bA3?\&IF]@g;o]RU6BCU[l91\(j[cT7eGO8.X,,Z>r#i.EhTF+Qokie&KF6[E"sK,YTK
%);ju#d6_ZUL(@%hhZ=YOiP?\=#gLoX_',]jc@#^(:0.q*bSiT'?%C/i0C[olfu6jdhVl9o&cbb[d(p/ubQ<f,n\O2&,@oF>*us90
%Q_NJl)^<,9CJs]=dA"&=$[cp2GBF)Dn\Ges@P,\7*uo8E]#uQe3$BP'9i].;f@8Ge?K$N@6K]]QnA-]M($?;o3'i5mEjXO/.EC(T
%K*R1%Rg=>QJ-Q<eJL>PHKa08B&d(8+[TKlQ#M3S!h[;Vm^KJM\f;I'm4Q;!/pLrS&I.0=QM?^4N*?&8V)/7?:$+\=+Xl.#U`=Os;
%*h36s6R:Fg%o1nTP4Sesgk:P!<T1crJjPn9%h9[3CS$j]i,G`r,J:mG_\]3_W!X&qEtVh.\pt$p/>c(K_h5k59A"t'%o+*I"UlL3
%_6J+ji-9eXVZU<VOW1;Z`bFGR$6L7R,s?_e*ulk3mi"ALdK!SG5BM9l,06S^#"a2]JdrIcA:Y7dK9+YV'd$[b;XF2:rR(j53/ocW
%qGqu_!`&!L:^]HHiTI(Ir-!I,XFL?h(4:)`0"N$(pu$PC-pu5o+5HA1!\nnHDueW,[.P"Q*5[Aocj_':9?LLn,sF;Wop)Bh+Ijgr
%$X!MI+fa`V)$.StkU*)S=+G8/h6a]nKS)*$&9AX)XbpAaPm&^jit<QC>lheO;*H>5!XL.f;OV)##`"dJ6=0_G"0PRBTIW8eiC.8!
%*?a.QEU(]C%3Re'SYdDK4AA7A?(chfDF]^f"UBh;1kjSd_3peu+P[QJ3sH/=<b1]5($2+jK86P<g*840$-\)-$][/NbbfrCLRR8:
%^]Y2;=MfM<OPoaKR>T:IL7n@=90dI7;j_H,n\>Tr.A5l5Gi5*<ipIUFE2FZIKhN3lS.u<e=$P\qUY4%LWd*I'@*nXH'g-HBkj+fU
%Gi4GIVK31V*-qfrS5@VKWP]E`d1-ELR:?gi)Ruu%q2,B*A[h]id[^fi^PuNMJJ/KZq!AgmRh/l4;gV/:j'[_GNEtQbF5mW6\$jrA
%J\(MPXO[I#)pckI$s2Y2m0B.`XbEF&i:tJg=iNZ:O'mSZH>tgjs'U[Z*ruP*/3GN4)POs?H16f,"U^c]M(j<,(-"-0d,tZ<c>'fu
%"O:)>ZAPG%JK%Wg]=^H3BD>!SW*PM#iS#]`J1aCN/@oiF<#Un7WD`WCJ\]Z0$9CX!E5"CKW0A#(*"CIU+E19:0XLf]7t4Z]=eWV;
%Ru1b($3e_8_B6LB!bY@@]E/fTS1:a?#]W1^Z^OCkY,.@Ki!%,2707+U%o<H[&ib;5-8'kbM$-B]km@Pg7@Ip%,7lh32-EONJ\W.4
%,Zh!2i,f5p(2o0ti-_L]@F$D732'ua,V4J]R66*&<uc0o%9278%QNAd=oZ7T!Tsj!=ZfT%^^8U^mTX\HM0d73Q3@aX@hFP=Xl>Q&
%4$ZZ;h/L0W_X-qA%_/Nt;slX'BFuiNF<#8;.P`D/$QO+LQ(jr0JC@)m5jKX)36PegfMZ\(a^l1X\_r!*2:VA=/o\V2EVSD]$3P/O
%<==lM!X9Xi&7u5+(iXZK@^ZXQ3-5Dbg+76Z.6.tGBfP#Tq;5.H.h4OBLip7Y!B5ZX-GuuXGuJu?CkDc/Pl]0_"UmA_8I3cP"&?gi
%20]i?g^n2MXAH\e:<dXT.,`&$A>.QU"e9j0Hj`S9!G@Q/WNMtGZXkUu6Uq/9mDV[4"e:!+W^T8UVq(5Ci+#7XB9`s4_$'u^1IeU.
%L&u8fY,o,7!@KWK+'C;50nU-HX'-X]0i^oL?:'1K&2/gL6\(s/L62?K!o,3b6Wc[*Z^%W%6@cCrYD&tfi+t]Yq@Wk"[ZW5GCn_T"
%,uKK^/0Vg.laVQA9al!df2PKj"upTUR<18pJ3smp"4T$?PolFH6,7aUhX\;^!N5&ol[+`<XOXMW+ES8!S1pMX4'5m@'Dp/m[?)6`
%0`MF7f.b!+'IE!]_uM/^OjR5EE$hpURrV"5E",O^!=.CZJ<bikY/%JW8idGARS/UMi.*W1cZ_WS*,p-+']"-;"HHeE=P\MC0f%S?
%$QsCl5BBDK:b?KAKcO,8E86EF&do]Ks.?uKD3!YdZ:2Mi6N7'n*&06Xd?X1Ed3k-`I=3bc.kH%-'fU"Y+:o6,"9L\.-s?QB2qQbF
%Z`4oQU-O:pDQ(E.'"(kJO*p<Lca>G.`O"PoEPSOqg""hr^a5U9p^J3^L]rd=iIFR7E's`ifmrGM*!I<tSK.kS"e5a+/1mHeJ?qeb
%Q3dmX,@`!3BIMdiTSm!13MM$KPq%;4%0`94.U`j[U4>$BP;t7hftL>KmQ(b9dn,K+cX=P&LC.@ti./06PJO\^">8N![(E2+i$Ksr
%5XPTcd3!r7)A5"\%DcVG+b;F"6kl5I"HHTQnGP3iE(C,^Dh\B)1$c[p&i^r+o^Pj*E(9X/*8HXk=_UF5Xs&AfTsQaj8DmU8_U$ep
%^bNgHf^25fbd\2mAqgGK,pM8-%1+$G6u'Js"O9'9QI>%pQQ4]n7j)c803OBSF<kh)%mq=SL'5eJ4pIf%'Y%R=C9-u#;(P/0CRIJ>
%e+WIkNDSPf=`G6J-u]rHOc=Mg"YKg.mJ5im_9+tllkpKsC[7.<Cpi!BCP\lSJQnllWH0J,NePsK-K0h=g7+-a'Y$"=#bFD7A'cud
%TL".Hk0>u`%4H0`gQHPfKEC?#nV%,RS<Ha`?j6dp'OHVB*H`cL'RIs6R6Z<*<O<h%l)6t#Z\L%>ZBka(1FVtl$jrLF?u3Sq:uE`^
%(:&i&"jT:e\bd'J**m4ZAY</`CbI#3<<E?D>=?;TT7VXSF_T#V/9!.^Bl9POJRbCse2/^qOWYFhYe^'5O\E$q&c>_k#/pYa:b'o`
%L]oC[;E$pnUBmET#TX6l&p;^$:uI]GiUCMWi2k-=4E#oTa#.rRAk:jYC6+%fDb/f6BSn#G30G/b*G.RppaECp)A"lk[h<=T,]M]&
%arJWu^kmV.G_QD+c2_hHmcdR+=MPOrC/Ej\.iW*1To0kTcXhh70(,Sc,8N7[4=oc4=Q#:FUMu4scEj88m7:G&0g"[<)B(R<m-gF;
%JMTB@_m#hcoCHC<1d(7H^AhJINt954B?;EIcP[e6@GMrN;\TaI#*_5rM?aW>kYa2\g\qh9$r,su%\/f<_Rugdi%-?*&B>1i*1Jsr
%E]W32ZQ(6+6O]^l+ACo%RGi_g1b'E8df`WalX01tDgprg&*fbHJ[7]M62`eb3))thhAm+H9:q$;*=nY?2XF/.iIPLOkur6mE2Hdk
%!nZqW9e/>oj+0RVBL7IVa#7Dj^;GM3gCm,,%L8#$8r7tK"/ggkcSIP"5(]m?%1XB(T]Ond^]fJon;&k[E-d?(ZL;bj9]P;L7lYIt
%k&l[Z3?1$VGQR4i1iUG==NoLG^_%$s1dG\ei"-R<USECXY86W4L'DNd/BtQk'Fc&ACe.7%B]+j:=k5<$dD59qL3U9=%G['#T$VS:
%#*/EhUt?P'3!+<WZ\(fr^`al"`s`@rH$J7UFY%KB*28p1J[6b9a;[t687n)'7O2s&V6Z/T+b:G@6CS(.,8M,e+*#(>(gJ+j^_$\@
%6kl/cJ4"`.&_fUeg%D!)L]LhHlXLD*?BdOH,Ch!c,.@FY!Sjo_+kdM/*"nYQ70#8W%jt?K'EK1]G-">O!8t)%d-`gt!)HjoG/XDM
%k8#)2#62rD$*8[qqDXp[@c8g52u<:U<SG7'JTh<CeiEF_m%qXi$1rFP7'UT(a8<(UD%?IQT7%Pb^WCK?dN(dT7[4^Xgh*5:aU&f(
%#Q;Y=q1]M?JppWl8=BbZ%>d?72pcJ8OKb4,IUi&V5J2Vt_p^.MaD^!c^o!VHI^aLB%eu#i49LhiLA).dd;OP`j5?Z0d_NT'P)aaj
%Dq'i5]E.\"7*ACrUi3n''/LZnRmB)d#+Zrd;p8,O7J`k]0qaR!%1*K+3RW*pW+$Wq^>\]E;`8U/Mii6iL\XEcEcQUsq*oe=TY!rb
%^2Yq*4@4E?;h9ge#4N)]>lum1L@8EtG3J_X"N&"KD=HE'/Qim%kh]^d"O9[GpVu?,m%\!96gI.+d7p=JOZ4Z`I=q6Z\1NhiVpO93
%o-6<'2^CfKld4LiO^l;S%,2_1-3ZH?2^H@W]>'$IcnE<iV&?d%g*DD\7r3)l<7mg!A8cj`,AsmjHS^#"L51NL?'JB"#40V,[+!SN
%Ae]dcKMZOkp.!i0RX'q[c/:f9D`Y0_j8LL\&_WXNIPdqIOhHmY(r0\<TtM<c#HlSsg)K2k5GCMlj.NHeVAl5BEDk8BSjRkb6Bo`<
%A8_e^+hOYnh@NW?G%bebQo+'[hK3!0;-BdKhM`YR&>3HY_n'6Q^12N-!b"]LNpTOc.7Z=+HQt@3+;3>3]ciN`Ri/ZDKV30!Z+V$i
%\&EN,DdjYT79H0MWE;R.R8n?I>!kRVeOO_"RV"12i84Bh_57h"RjJt6&SBtX#_YkN=p+M2NL5WI"SXg]=jR4."8=.jJb<^[mZse8
%Q?36'VAk&CM`J;V&J)U7i8,(dFX+?(>S8rf]igMOFCBsuAjM:3(FZXLZ3fUkRj*28Oi$8\L?so9A`[_up?"ahj`_QH]bq$Ph:o0I
%l&,n#a;!AJ+3OXra7_EMQadX])h&Ep`cGg3#(`c%("sT.[UFAnD^IZ&Y^u/c\f@;"%G;]o4mR'!aPO<#$*pPOhM<frA[!>))j5(V
%^Obar2Lcc6%G@59B/KKtd,&^_"a[gIHc*[1oW1E,$QOqFerS27#ic3&7t^NdTOo%7]c$U@eM)XLAkNOV@ia9m;*mPP=(lNb)<:a<
%BQ$<8R3V.HhA?=j5r3%i8-q-&JA$6]TSt'ue2.^p@LhaaW08&B%G70/H)llX,Hs,%oIS+&^tt0o1"_#i&[E4YUD^9pj*L&5BY`Jd
%"R)'[m*3J=A[$%Zm*.^.j33>G/boOA7q?O!qLMJT;e0h+Y67$VOhHnBNI\"pd,%I<YonCJmEN9u8r,O:2jGQQT/j>=<?et7'\f,"
%cpfg#HUGXmj:'b3"ik.fC"V:pq`Go\\2UJ-NH#oqhMg_kbYc3i\R.'g*S_SHJaf1\HZR)n?F22s/<!UfD"!kMrETGa&+5+'$BuTc
%)7DKi&d+,5`V*o5*l/^4[Pu$H#IRo/Ci:abFCiDaV?<=3#ji)1<+r=Ed,$IdL`"R5]d6*a_[,X(ml6O'Ad[p">CtDu%GI:/r@D5k
%f\SR%o\g&J(XreYlG/k,OAu<\%k8_7miPXCQ!3qi1`UZ'[3:P963)&C)F7h83oZ5sL3n^<>+T;uUg]IUZj-[hdBS`o.L^*2nA8=]
%(a[ph@>'5XM*R@l(1]_?6g>:eGDB]u0C"4Xogf'FA9Y@I*@nF0!%DI+YUdjP"N_3ZNB=Z%L$Ac"5sjZ#V(\&s9Jha]Mc`495-.Rl
%+d>Ht![%[n&L8[1TLEkKIO?ZT`3TVQ"*A&(2BEV\i?]>'[]EDG0m\nT`M1"3=X]/d@(nq$/4_a]eNI?tkbLq6E$kX/"jRIBJF]A8
%-d9P^85>>$oG'H+#h'g\>,f(L(D80]IHj:*Ym%/6."rZ\g/7'"]MSC9R'-p',_1TsQ\?^[N_9[#P\(#JB.^AY#K]lrU="M[gP%C:
%7GW8\KI[)B`<AMd-m*MHnd"koLYtVB)uTg$Rl-3sV<H?\:K!.i:B=HVTI^h@BKMq<HG"L06S(I@"Mc(OUb6FR&m61sn]d&:YfOJo
%:h7KK*UKGn\99^F*S6&[:Q_Shnl&Xk$s8cGTe\_tQF0^s8d:kMD*"W;&5X.]rE^WP!0H7ACCN1%879`d\-Kr$]muAM*32KK2+jq2
%OarR6&$WR/[gVR`5fa[Ta/iDDk=_#k8\>VM^KpsCZoT0T*S=<ngh`3.3L1?sEUF]ae/nmG@AM51ErjY)O_YeJH:4MJTt@tEA9/[]
%Vd?kT!0f8F-?7jb![GS$O.-Lf2S6R??mK&IRPg!me/^h1Td21&U)GL5/6>J]@`=!(:+VkA+G'7r!E&V4)Amc]b+\#;h%kMiJ77J7
%O[MAc7)iKka=:CnOQ9Oda.1(,jPbnj@.,)KG2CA'!Rk[TT_FBH]p2mF`$>YZ.O-tUrn%4@&<%0)pc9Bb+%R1)5qJ#n!8;JCkNM-h
%LI+E1*S;fALjUTgUlC2pj#GIDF,5G+]gLcdYDE>E,X8]*rZohl.WZV5,RLinm^O_.##>MgV#(M'(A/C2,!dXYiAq=N*70u!JUVT2
%[0qhJ!^$b^q#g74,sl\U&5M3#)$&6[%YA*..ATJX3("J2E;;8$8<#`\m&7fTO<2GX<qA9>#B`NT%O^4*!&u/B@'GH.#A5Bo4/+to
%3;HLiMunXe8Mc[89IC9@c7;48,[AI*JVas-!)X?XBA$=d5VW98+nc26n-LMKLP05lPRn?E<buIbaI'[Q\X3UNh8G`(5'O)?'3jd^
%A&fT2NE&aq1Ku,Nn&Y-56pYCOPX,$k<81"A.3j\0NZ>eQ&O^GR7.,mn6#o%L't#-so`f*K=MlZq_6QC"*%%[q(NdPNL6d!rPjV[P
%-^CWa@^ZtZ`==;7FDTFml6,;",!R1t#>o>#.qjCROen!RjCSHkl'sZudQg+-4&lUu2Q[h^,NmFFl3FH7+XRU1+WbdL.!iiiX;E.l
%B+OdZ.;b#aGp9]Ze=e*I.>""5%Dj?A`cL@P$AQ(Y2I)UQk7)d)"C.#k-q'(J8eW=eH0Em;m'n_`>Em`YSYERscX>?PegNo3G`T+J
%"=r"8Q's@rjijN3Jp!8SBrqWt+RO#*Sda?%H-G6/GN9a\\7Xi0LEn$tU?]in?AUr'N429W7"FK=6:_Bg:4PINNNI-$YD6WnBhFMV
%5g##ncitA4LR9[?^00rd:T/d!()4&1Fmd&=b0Zek0ESnG:uVK!F9pMeh@#aqk'964#92`tKui<T]FAll-57F,R;e6KEc!Xkf!-kB
%)ZUF0gr>a*8<GU/%TCHH6%57a^]Z:NlerAu@`_ENktq!`)lajqUo&i+`Y=h.Bj/@C%e;FX]Yhl94!:c'HHWr'neCB4+AOo)*T<Hk
%[*V$p`[")!]LKPH0b$gF1IW3QfPQAP7^ctY1'G%Xf1:5K/ERDhj7+hk1(luY_8Kt$*[Gkk2hk)GXV4ciG*RBnXZ9r^db2d@C5"_f
%>e<<L#F\U7@a!O.WL<PE7ehF<kGDfuU/2b]><,9K(\]Z,e3S-q1H11+ZnSo3NA-c0;$`X;FuE.GP4Wl/Q1Fi<9hsn>Z_"F8.KQ2n
%,>a^Cdk8)o1(5m/EM:J;Xl7QYSY<?1<*`X.+p+.11@C_JHh=#Q8Y,q6LLiRX;)a_'G>B\G0u<Fs\STZT9h?J(C2@[t84gC=6q*hc
%GXeUUk3Jm6223#gZ"k:BW+Qi)\-"G:Y]b8ViU;^>M1K?!GQ@[2fZ?i,Tf:2$@33BA?pCB#XRP>8<&m9#1aGA9,RIH_Oi*C093;m6
%T?r-Mi'h?1fh)QpM@qEP-=\KU_n\WgUq;/EgY+1%O=XSC&P/&b#qOOK+U<NMo-d1EBRHCZj:I(NPN)bIF7>]h$UHD,PNLiQ&S"B=
%Ga*42J?o=I2)(3KN"+PWSf)eDS,7Ec3Pmi)AhfG^I,1*n$j:ofZRDO281"CWT.Inq6;!+]e<E,/Pc+sWTZN?0G@;\R(^3V#d)'6A
%6oB-#nmiXT<.JAMU"o`c(3F%bX_)n-Q@Zr;VQED"78j1qI$GON0U.DIGiLk-IRr?4nbRdJr=lafa*b1VJKj=PlXg-Ma>cs00PU')
%AZs1#MAEk!`&)VqpN_bHM+XZYc&Nj9nL:K30EbPJK_kaB#Ld=k=4!_&=$^aWj#<?#E2:C^A(;<mQj`DP?sU!Hj&pG;%2.LdU=bK`
%,t#h6-;XaRm>W$f,98S1/<mnq)LG>B9tWs)FFsS,i_<M_N;[Rlf[uJ*O?f!P[+j=o6k!E03>BN-%as/DA!R9Qnk:GS7Y3[d7=R=l
%aU[<XYcAQR6t9:^ZjG1!a#=mV'u`p>X<Y2WOP8Elg6`CZ&3^k<+*LC7$a^Aj7)V&"_YK/$i*buX5U&-qJse@OR>/A;2]A^l^8[+n
%Moi;'#g/m?]Ap^;Jq>hLQF&<]q<iPN(rTZRSpb!K7&7N6>G54rbb$:`m][((#L<Ku8O-D-3l90/?nhZB<(APK'#\*!@$+/bp-bAs
%?TO]fR$r]dLAaAb>Su1o+G=I,?G.HG9-1oW#mjI/g?"iX/9mZ,LMd7K"BHB,*/#CI!/P&p+UEb:V%C;40rCaqR)!cC3`WU;6"0gc
%9fcP2.\q(L&EaILWYpNT]T@jXYT;'nkLofkBPMQe)U3`I(<I[\<Z3n*FC"Ho&l^[F"0!K\[S.o4Ii3pFbL:5711%,F^D[([6R''g
%^H9:*7XHWkI5O)0YZ`:8UHGU/1%rrt0M"<MIcnCWcl97XW.?j/#r:cO%-#d`;28!Pq\l"7==ldqpMsS3<#PB8_`<N_g(qj&j9NM0
%M[5?*YVjmghJ</86o'Gs&2EetX<Fb_%$L#94D/qj%na%R-#*i7@4*-MN9lhV>89((prI'WM_sXu$!hha5%Nsk@2qDs;Nel+C&:G_
%[:]dsB>jfn?t9c\p)'"'IGc_ZF<C<)._@J!V<&lAfNSuVD98lTr5sY@'9gRpVuqtYKYB1>JO`rfY&@kRPE00sYm3:2Q7;u73%%u?
%[+p&V3e"7,gprHuE=[)gW"@<`U.0dF-fP47Z*hQ>Y?P2f0>qB=`a3`Y"XkO(4^e.q46*4EOcpO:oXI)mS)[=$]89bek'&QAf(kTq
%mlFK".&f(N,%37K(.&Y(V\'!86[q1`j<<B4pbKsk@ur<MRQcjefJpXqM&T<1!gFB=:$cXHNPI#;:]Nj]2QWUf9&$/U'r".5C8;df
%S[0!FjbHC4B?*C2!eOF]KDGqI)i1l<77b#5@')ieE-.mV`=&Zh"?N+UIYPG(/:sR5F%S!t&umj430RaWBS,1W_GLR`6f=@iZCYL<
%LsZ:62]CSPaCKB:74A?58Qk=u@/J<>'a+@H`ceVK@=8C1R5.SI8^Cateu@EC+Z,C7e@F,,%k'?5dt.\Z2WYm>;b%QJ?3ZeT!AQU1
%W>HaGlsD#h7`L7\.T2dNX>d98CqLK6(,W,61D-Gp9%erHaHse>-]BWaY'g;O,bV9]QSSK5P*8'TfNf[jVMk,LN1CATeL/7pdTd!c
%U\91(6J[I=%BJ;>2%i&hBH>FQAs*]JZ./'n+n<\.1G>s]JPK#R^Nmc4%a=1b]8Mhd%qq,[H,>@h:@2dU$(qo9M;1!j5ZJQQESsTR
%kVjUo98a8,_Q);k(p?IN8GfCJ&Hg<5FGVuTgh:#YAX5k*/01fc@\=B)\1r=s.N'Yq!Dpc9NC>)p7o%V`>*8a`NeAmb/PNJ%ij/Vg
%_Ts.-!>c4l93>b6%_8EgPPAmW0UI;4$Yn/2T41H9qS#5E_^,$#,a\!ST"s\A&o'd9GH>Vu:Kr7Y-^UPBN,"s)5&1*2@L7tnkh\.Z
%?50tCW'_=p1C+SG2H)T^ZUh$[T!bo$0&`UBRL"UZ,L-.p#Z?JM61tUXL(Gb#Kci!hbRala+':ih]kh6$(Fg#$C_FdY%9?*B=;g:!
%?-,FCXI[k4"iF1k.7Zc-QnS^fCDP_-=Fq4.]OY'U&SQ*op&rq7_+C.%@nIF,82sOYYm2Bl(/5Acbi4210'&WuY+t1.#SZBO]EZjK
%?@PTI\jn0'*/*^9lHU&ibm<VJMq6CVoW@2a#f[f8U/FCrJ1WX+@_!UJ=8b3SUQ<2mPp1eD/?EB524=s%+foN"*0-K;7Q=I?FGnR8
%K]Hsr$mY'=@Bi=#9d'/^b<$jo+:nbgegFrah@"mM6lljt,OUa,ZhF+s$meh;K/TSOdR#]T(DKS1h5B$p_!O6m3?p;/+B:]?M\Q<K
%A6@,;pD>-[gG9Q`_$M5-:'4K:eqkV!J<_r_7m5i/'ScFY&2_8A1(:%SYE8hsRQ6P@*]i=5C<HY?`V^e1G]V6E=dFrnS+2$@_B0kY
%irhS;Ep:u.)L1*)D3FZZ4-6NZ7W:6[dmO8,/>Y-$<4>M:fqqFc1(aZ2,-u\aIYl8Q51J_4E(<XO_H#X=^hYXn5"^cUBl<ju73R^4
%T0WeSSF&1OI-JNZlFu7;"f-)G.rO:XarJ;Y&\nEt(*H0_i,8b#e:BasJeJNYFg/RP).MaWUgKk!Kg<kZbgL)6Eh@jb3f"To+cSW:
%a/"\]CrqVhaqOr8c6H9*6#nK,@8ml>"psnB:Johsj9O!?e/&AP;G"749Ns<ASM7amYodfCAR=SLP&PFF3l";p6[Ac2!+qp%b[Z%6
%eMJZ4N,t,*-$O"qP9LRNYe[&tR4_XIR@VIBVdhmWFrG;jA#WZ.n0G?1BE1F0Cm\j0M3>j]@WN;rgG9jN*HjS"")qFDhbYq9SWT[c
%d)^QQ+jG.c8K.fA6IJ%ul*[N_/Icr8cKK/'-Z@-M\si:TYV2fG%&gM'/'tVs,R]#Z4+^j[#dk-tAB;r?pg'sX/(7*-\<01!a1S_C
%dK=%\8sqntV<=!%.m^+>`X26iWt%]m_\'MrGaG@A2,6k!eB2e3KqUB\GrGAhfW6o.!lg+--cR:k2-aIn*0ZYu+ia&G4<OhS07X'n
%*'P\U&=39p=aKEJGHA?p-kA$-#0CFhFOC@YB$pKD9Q`I&?nULgoXZT!B*sDS4u@8DSm*[JL,(0L+>kK\Sfe@/%p>%8Y*L8bGs*]&
%^']6I"ou;Z2Nja=bq;\0H+#aNW<_"H3pAXp#6``@+>LMHHA/0YcNu!%\3j_d9Co-5TRh5Xct0jq)/-i%WI;T!OEhTS&r?9e=Mc+l
%3=9MY!`2,?R'HoD2eq9d%MUEjErs?I_M-#c8jn^_Tg".Q0qtgt^n)o,"Wm;;&WVr@KIp(rligk>8r_^FYmYAp&i$`W36`^OMohh*
%K&DW!8:jqi-S=[P;uf=TfiI7o,dL#HB9qQqC:%j_eH=Xhp4TNh&qFRV%\M[:PJ!B?Iu/*O;SGH^K%(d+TF.,VQJ_au,\kJ^P[,7U
%B"#AC;JEKe8MZ[@D$WJEkU,j($V*PLc9lsk@3.sBDhuaa_1!\U85%hI"<@B[e/(^q1k?%=[LgBV7<]&Q,`9RjUd8HWn3UB8k@L_M
%ZW\_K&W^RE!E*=hrAG;^,S1S%[G=p'7mr$)*U*nB3sN!2<5VUMStu;3ORSo)Bs%t`HI+.WGt7$-d!@E54T0A9U5OoH6$t?`\&:d%
%OH/jbcB'X@2-G=T<!`jF+Eg<%+Fk`?._?=0VM'd8G"M<P9gjCl'^7UjZmVh-K`Mng1\?+mphC@2dZ,_OE32MMJBCZBUMUOk3d<kd
%V1u5_1i8+;#:Cg4f`@fbSntT*,+1SW!7akc@[>H:A:QC'-7!T,1Br`s5tZq;Tqp21(?lQRgp?YR;ikdr%j!ZUp(8h"M!'hF,DO]g
%'FE11"4:tCPY[As6T,2nrf"Lq7GTC<7%VA1Yt=cg(<](#2bOQu#iRg22R1a6X]'eM(e1q)Uh^r'c14NLGUFQM/5mI_ciu-rpQdF0
%:3etu=U>9ei=J@$UOn.l3j>]Ud:=l_AuZ[kOCOhK$@u&>0U#-R#0a)5=uQlG(HVKMas">U,4gK^a!5+R#;&^MW]e8J!=3$$)#.(a
%GT:.\<p9%1;PCra>rN;[3Fc11-Q@Z2*?8RA,*,+.ckGt7VO&J3V`m*sSLE;\N%+q:b@>BcT-<IJ;Ia3*(.(n3[`4PAX9'k_=j!Hj
%C4Vp<M"h)(.s6bI=EC<XKr`BOmGt)8.7=AG9c53'^nSNi%M!SWXjh4(?maY9(GK]@PXm"&bGl$HVU'Qr$pbUWL9-.4Jo"u[Adp5Q
%?Ji5Y)d$m,YR(q'$l(NW6uZ?@"5i<[5Sg^3RLh8fCku)TFlFMe/;dqfYUWL<,GbU/e@Z7Q&2tlX(uh#=C_2R^K,2t@:?\_oUm$[F
%Y6:Ud!bW,qA2c\ag'grA5u<\S!"d;83_4*k%_sFLZ=,qjodU.]l*>mm$H[<R;aPR=I:X@55^jGmA[pD!!u"4C"jOt*21j]C.S3g)
%aZ^#%o_']2DepeP<%C70)hbM:*=KU^D1JR)@'O7)!Zg/k`<%QG]p+R5<Ib+3nkgT\2E5Y,FdX:88:/$@:`/E%J1U2f,!g+@_1IB>
%nEm/S+dle)Ya>_(5]rB4li7(.11;]\0hA+i&:9`J6Yb?ocq'oN`>#qH_I92/L88c';W*KC7UdAR62LslD4ia?LhS=8+&A.0XYd*^
%X?^Y2@g$$9Uj\XJ4p3]p*[CB1fX#Df$qTD\5E\q0&"V8m6VX46>6;lCq?mRBgR#!pO9dO4^QNmbkU`6;pnM<Tj.L(_[eQJNo2moS
%'`+GUh<Zg2dCpF8R$8F!EAX8pn2UtGFHb+'^q1fb9NN!;HB=@VY;JqQ]m`ol;Id;6i"ps_8jb+#5;tq2G6L>t(u5L59QFSJAmm""
%DPJXf%%[N2f4@'sP[ALTToPXa:]%D80P%+[Q<jW%X5K?ZP98=M1lmT7\NlL?bh950ADE;o!&sre.pqM8"Z[06-Hcm=AeL%2>e(c\
%@qB?3%cZd*b2AarqXB.6YiniCY"t,&a(,fl)ebd<5qIf_^nsq=7<.+We!X4G^li.-0D\*B`-DZ-4qb7ZInmEk/i(98$fhpf%:KsJ
%*M,:l-0"LUjqU:l/5SX6_6_Vo8`9!'[3.@Hg"KkXaNorj%&@9#jbe/=$`jT3\,5\jY+umK5?rH"ZG:"6?:N&#R'$YUpLl`'on9E@
%KR5HE#W@BuFN+^\6?LBA_Q:9H15PoQ^*B,/=r.>f_X@rDC@AjADmpo7G+](/&SE'f]s?uR,B5Aa=rSEe#P5p.PDU_Z,*G9Y(Kt_B
%88,jpd`%VAiKbd#q&m#e[V8DNELP:B/.aC.ED'lmg&"G;=m\HuV&$=j"u?9FTGR\^!%J=G4Ukm60u55YKJ9G2OjXi;(2:5D&]L+M
%.V00]I"@A)/4pO=AZ#2F+iKE='Wj]L!eT-Y+EAe32aq0jUQ_dTOGjn2L*T?2+jDZ\A/>F:-"AbWm%q(K-:E=j][A?a4N)[PQ7B%]
%9)0uiNlL3,?sr>]Z0\>3"'(Gc1'"%\*;bgkYbI8O+rhf_5;`'I$=DKGX4>cd-P3.$aCSC_F0Z:>=9G'n"M)g$Pd'$'7"/lQ`B_)h
%0IUq'a`9%#`+!OEaO>E8atM-GQbC2-$G\kU@7*j$`^lKG,aJ+78aJQ8&.@_*,+U%tj_+_D=c5W+p865_\W6W>p.<%b@?'K.0N';h
%5Z?.c;$f,gQ<VNJABq52\O&V:,3&TJnp+fG,*SkKg`6tJftD2^RT3\t5"nf'ZA*A\*dp_<1e]<#ZFLTG=j_lD/H@F*FTfA)d'4:J
%<a/cp'k.*gVb;7hG-Xu?6mZ&)8:27$6Ra\t!4kOg*Yu&Cq`-0G)!$fLg5fWWL]lsdAjIOUGgRoN\=W?_IZQU01:(V""+Z=?CD!Zm
%*E_E,6WuU8T$%K8ap87S8"Ej*!?tug>P)_u_T%'.Ka?R%35<t:.AGHOQ<eQ7i%G4^!%K<'>W]"V/^[n%TGE-ELA=JqYQ2TU['A-k
%/c6:t\cMkF3ZL[%Xot=uTHbcXV'R`8N8I;O9nkPKa;nJ,BiJ&CO\c]U":d8jE'dnS8uoJ.a='PE?6lP\AV;!_AlO9l,7iD!=s#H.
%6V!K9Qm@n[$Z8/#!VBXVjeAr4&k(OuR8?8Eb6c:3i.;6'HW"0YU_LX%XOH87Op>IIpiE/9+;Y2N:f(:!_-17An>-#G/f+Q?@M/fh
%-=_!UOVX,0bBt_\gd]T$W/Y4")rV/krdZ=$$*R1&",DarK,mNF=TMTWPe@L@F=n#SYKg=lqTZU7=PD$A.0RH&G`[.![ZE[:*$n<?
%Cl$?2-j8a;"S@5.^_U--D)6Um=H28V8d6[j6"#ZDif\1;1@pcuY[EKj%iZ%-8$WAro9PCU^g[uK"B]t`L-YuJ[o!RSd*X9UY)oTT
%>B#<"B*\U/XWT@O1274BW8[@l#mQu)5`5l<'jQ/Vr.)rAMe!*T:WJ'*MlqC0kh&0BP/(n6no]gF(Jler7Bn;/9igP#j-?Mq.-dBR
%V'PPD">JbS!#[h^&cf/gP7EH3AupNbbNg>:#Z?"9V'0)7:gh:4TuI?BSqZ;@?XS4T+5uH/h<I:>VuYOh"4KY@Rd)Kr!PDJF*!H4S
%cpkK1Z'eu7E;:+[NJBufo@$T1jCZHL+;qhb0$<Sced6o$:_q+'5hH_B99b[D\W&LI19jL!'`QTrOq8`/ICkS#^aq2!rj4*0+`p!s
%q`?>o!Ph1C'?7R$@r,QI'JhZK>J*#DR>JdI4E!4@W@5?oaGNN3@]<C;[[.1@9'\J;#[48dlD=D#@O=0MT3B&fA[N<?=N4SO5[.EW
%,PF(^]<Dgf5/OGXYhiK)-JooPi1,U?LhC.K$X`u_G*"Qg7F(mWhf]=_8Q$(OQLbaN1(U[XN299+K&n/d`3-&6QWtc$"FCe)8SDfQ
%j?1:E3_9na%P[#7Vaes3(rh1L=CT:#/d.L!=)Ebii$\a$c4GjV"qJp>FL9[iLe?l.j<qP9Uk"jBAiC#kK&E,QM>J"/<D:/gLhK62
%KdhT+g'g=URR%C]#6A#YSlVg#+JNU<;FS0c\0]?3RJp-lQjkhN1i[a`K"ggOK9Qp$d)n";PD@R^K14^#gn4rW$jV%l/aHZ"!3_F8
%Sbu0'HOuj.<Zt4ahMabg<X2>RiRuSK=9qA)$/sRFpm;]BQD08=6eP:Pn7[>1E(J@0L"qOXg>`Tu"]r?eB/Pd"05ua:LD=\X8X*I"
%3uiPt7*S%s3u7`*d`mY&_T4,[9mm`1-K%S/)%3r)*:q!pH$BD6,7$L<o\J,9)9X]Fcj[&kJd=b_!B,c^kggl%=rtr!0/HF,#@/4#
%#GQVgK?Rl'4[<<aNiDa1kt`$5)PFrH95H\O0E^o$:n%O.KB>>O!mm5FXfO\ilIk]51ot(*US@YJLHbX'mSRI8Ag&<h:7hm-`p7gI
%ZVCjAE>1@Yj[F:<1*]QO$Ol;'MhCR2I;[u^:`.9]i>Y8pX9><<UG/e]1:P_8TSSVaejt./qaSM\)"t4lm0u_2.127*boqg49V`he
%#t6b0+I1kjd]$`YR9jJN:QAKg>%a544>lXEDO;!U.c)^C#!qGpREZ@0-M"fk8Y"9eMms%g+tI3cAoR't2fVI#'Ek#Z:'n]3lX_`r
%f^]&<MQDbT*u[K[9O)qQTScjuQ3BH,.m8RL7&eRXnmF4QTP,1=olqgG#8s$ueqOoE]cJ.s8C2*J&jsP>NZem2U[ac@RiTA_3MX*R
%0F:?L822="5XO4gBbk4`FgkhZ&Q+8H:>C]uK5=6TZ?`8Ob@Vnel/mn9Fu38'M'VR^=RI)a"JNp-,ZR1=%Y..qSWM^I,sh9K:6G2,
%>*Bs-\W,!tLG"b^N(qHS6E<4^3EU$%$3[n57OuRtW'_Ja5fcA%o8&c*'X/4Gd6c))=Gs,f_.I+L"T@\Y8P;BCJ):_VWI.9<^_:u2
%%@s;RQG>HbkF;MoFo%ch[)3ts+H3B5MkWa@#rBA_76Z>\I<IkcT(lu[KTt#8E=c:cU3mMtPoU(AH'+8VdFr&V#L"#'5&`eR,(Z79
%[j>%*@HXY_i:0?s)\,6`p_oI-Nd6j&6cL+s"KX=Yq&'3]'*Wpo#->u61kO1qo4>kf4N:E[\pTE9'K(&DZ(mhLoI+\m:,!7rks&S;
%)deW-Io38+=I/BG+!pJVK\rH/`sYIjK_<KW_3uAjDLte\0l*<SHC/I&/1W?9(fI>53(?19dneNL&VlBTJ!=-AU_=@D@p*_Wk`0=q
%LHgKZ)%_I/ei?huVBT8.MNaGgPoa32I(LLA3]qp9OZ$>F%0lNTG_m;*64DQ]q.XY&!)?>p"`@-Q"jJu:Gfc&hL#6t-/-9t\KJl_.
%c^J,rOl@7=MLk1%?[$>`A?I\lo-asW[n)[hFr*ER5pA2B;6*[hVc["tb41mDP7l/,8j(d:+A3A04Rhg1@$Ye(,-Y\4<[aQ20K1-\
%CV$oJQE;F:G-"c-p&]ptAlGsVWanOSp<EVZjB2/N8r7R`W%\Ug$;(s>?!H!g0SC&q!mr3+rD6<U:6.6[0`;rEm7TnkW;cn#:3K`1
%9QnkW,@0f?Cm0=?O_^MY,=P?C$`4W4Ipdo&,m!gb(>_"PMP3A2@lA;N>62&_KcoWWXlUrP\"Ihn0UGNklC>g*Fb3mp$teZ*Q]7pE
%"AS;$e>Oi1h?\Y_`%9^RV!"VNVm"HP.=;b&N&icGnFJbt2o)^Q6O[]k"i/$o$_k@t^+Vf2&geEP)8UepfI);TG40eLKp0Y9g*NU>
%Aaj:sF9SNOT8K"'P);9q+^Y_f0t&DA8`L%Dj^+$%ATCWo-[eOi^I7Dlj\?GC.7fCnLYX,ZXY6$H>Y%+%!;R91N3p)d:=#%8&,S.4
%g8qAW,WsJ,N$F61SN'4DbUO<tP\*?DB(Vh--u<J5O[hcmFCmMJED8_rSn3h-gL(/P)A$std7Foa"ttWe;(N2j4>Q6>:aiUA/>Cdo
%N_ee5\Og5L7,!2O.3hKXJQ64!q@$BCkbenBWuA;Y$q%nWANGk\>Q?q&0S0l_!%L2:2cp[?0J_`%]***]k+rWidTp]H'+Ce(k]rEN
%6L$/^`jD@AjX-3&"/pqj,!=kh^lSm[lNY24F@8\M=b#')n;sOVP%EdlCfsK2bUj)'I+?NGJjkQ!K7#Lq8K!R+"ERO-+0>[r-89U4
%]-3Tf6bNi6"1:-E6L=Hn;^b2U(336ghLMn"VMEh09)ZRa8ognT)Cq>![(:f#3Z+hJ-R]W@Am*]'o.A>>ep]PK]ELkkQ>UaBYZPil
%+`]p*,SV!(d`1Jr+@WQHREI-QH9?;;(YLiV[Eo;.Pt38J/T4f?$qXl"K4('Aig@9/#;ObZP$c]-98T0UK@$t;aC">WUl9>MhkFJ;
%.1]CE5f/=/8HVPa%7Sc>BZW8*%T3:cOnJtk&ZZ"6f7W/aKFJU9#c.tO3LGI_h4g>Q)&d\Ni8r%?McD=(Mu\/[/Mg#m.:L@5qpUZ-
%dkT`3=V;90\L;!cPF"_tS>i,H)4(qL&_pR.`'UNC-Or?jq&)C1XC/E6%g(&$e.p..SAs46Vr,BRSt9!ldNqT.IS#:t[G55DA;s2M
%nZ5FeM-h-B8_d6`pBE&SO8oOq*2^FIUce`_P%k)JNa[)Db(u9_-jDpnogV@-XoQNJ\)mu*EY:#G)W5`o\Wnnj9'%T1)VAWU-0UMc
%+AZI&V.c0OB8Mc'XFp_=4"&EgC"#E4K3el"-dZgQP1Go-E-WYdg\S;Q;bRh'$MlP$EF`9en$2\^%mQleg6h&j_*JhF<MKi$]l"UG
%K*k,V!]sFZk"].q<p0f71VH$!>^bhD]7L<B/.uD2BUP[jMk;1c`JOjX]96s_d9:<t0Cff`,,bud)r=O`knTr]=dm=)ONTo+8<<Z]
%<O.E@nAmk)P@GZa8redV(Z2\0aZKZb.+k&gY6)3Faeid`d1IG,/>Ul=Z/:#G:XLI``8j_tKugJ95^gb5^0fB+N("kLXZ/d0DQE.O
%[C?A+B;%o&@^sm3S"372Yja2)0FGl1`)df1:q2Yl6,g1l2."R.r@*.'+fuFYA"rJ/L8J_t2;gb/<>b%4n3^io[)*5,lt!Lj!@4Y$
%0K$c3Vi]++8Wgh[E=\aeBjD-Nb5Qg1n`]e2(R[glM"PBNmOG%OnU:]nV'fajN,*hEAE"o$1OOVV&i7L-"Nad@>>YDYcBq09*.aIh
%%G(RAG3V%J\4HsCBsP/'7]?_im4;_rbY*-]'9]`2$*OI6BuZLaL[ps#.k8s`"A:!4*c_F]Pq!>N0N+)>`=<!H+1&Yr>=4_a+`[\\
%BTk]<C+K@5*J6c2$0]Z&%Wd%f+iM>F5`Z@I:f+jLW\Ptte3(#"8f5jZ0YW+FX!?>&ef*N5i50'e1h-CoNZe&T1=[\Y?ScFuR-R:(
%$2:a2UCD7MdL,t_.u-J-XbWefbDN^)NAQ_NMJ-*p082(S!_5^;?o`Fu1qI?#WJ(N!SeT#^'kYIJR@"`S7LF%#qK,+8Z!';)UkYF$
%&afj%kdoDD[4R&kRN0nM<2$"M@%_"PV&+r#4njJm*+\o69h43/3#eB#3UX7l7T^[8:^,jYo`E&'6?3L"jKm2fZBu.mVA.7IX/l-O
%GaU<h@;'1B%e!cN7S0-NL&p1GXRJlhq!qQ,+48?S\q-u:&n.2biZE2oR+Xg,7#/BE*ti(&62M66$V$)NN#Eu]>=Fs][SgOiP]ApA
%ULk"@T,YljIDstBUKIic(uc7RLVZP$1l4=$3(mGaT]+-*[#?hb,-.CmSeD!m$/k"]I?1c$YeJe2g&4hbE=J(q-&W^7(eAlYYVfNE
%jO\tj\'[uZ45fSS3/p[hm')mFinGA3osu4&\Ur-TKeap1WPh'^7PIM=V4agIPNF2)bR\.a$F*kMau:_%._@R+[6\Y2BXET^AM>&"
%+G^8*a.1Vqrh6h[='<_K!#cI-HD/rX>!QpeBkC`lGauR@&aA-g8[U'U=csg<qGN8[O?5?m&+l53OMlc@g/t8q:a2*c-ru!?-DuH\
%_@,6=F<&K^Pam=W97l3Mg8lR_N"1/5//#Ji"R&9&/[\8S;<Uo7-GW!,h+@^%M=L/f`2JB#+SuZE;S&u][\uO44RF:,m.V]DYKYi4
%[!j`o4DjW.91P]`K=d.04LT&e@G`:Q*XN4[lkS.LlgW1$ZcOi\/=>:GiB)9ef<@)`BcMqS)V-.(SOD?H9gq&]&N\%*W";'_Y]H%:
%7"6,>9bj1\KUKm#2-/Pkeo\m@TN>kOC-[?kk+9R0>H\PXKIM17J0L(IcE3NZ.Xi+b!Cd[JObLk=RB:T,WSOEm3T:C)ariZDoprMn
%;5(6>=-I-(5o.:!Ur"VfV@51=6&EFDFGA4HVJE#EKn)Vge#X_ZJ]6ZtOQO[_`E'J#+o#UX@]t_kE)6mT!RHdY/75ZZ$!aVJ.qRpt
%&;[.k;KL0:JInGQdWpq5fD"[%9(p]$_gDsSK='<^2\<[lYK1$8$FDTN,3%g6O?"H?"XF/\6Z,YomCPrin;2Uf^N@VE7VK"S9G\t7
%?tE4(EC+&.MMQm_n8[+U^7]1u9EG2HK^+\cJ2S;jLm+RCj]$]qfT[[<9Uinud7L?L"DWP(6p[t#9/IPFKh`;tetKJ_&D)_s2U"u"
%O:e]3Oek!.iBDgR`4I6mlT1=Vgif0`#Y:Uj#pcJaC&omhKY]HJT&k9p(kM\n+;(tk$k&U0]kC((\-(eUiTpP`J^nq.O9F8DlPk=&
%&gNA)3d*uS9Nb\QhDMa0U-Jh1+N$0\kkH],\Lg>Q:f*Is`IrGYPfSkSN2,.eA3QZHZiEDtOQ_c?;hHC@=_J/HgL)>IhVAWF+L6`$
%2Ei33QUUVG&/(Qr!h6[Jf+L??p5W"O>IHOJ-BFGn&d]\'_auP%;IRRGAE6Qa6V-&]#oFJP>E?5Q\$L6N"1U\?":#T4*th=*4]/KL
%K90N51f)Um>nO>Xl#m[PST^`%6D3;*=so;`l/W1;c2s"3*='5qVT0%%eO_PSOfI>!NmJ[=?;`6$&HrN0E-]j373/dF?dD(@GD/CJ
%\2B=X,N=#!bhDA@Wq+tR,p*i[M=@POL6=6VGrr0\?mki1LiA3UB..dU,,r8:UJ$Ok(sFg%NAP%51c%g[h_R-''I#^fV046/7F6HL
%E$t+p6W\$GS/-msiRbl!Q3Q7Ee;#-rL[E@@/6j))<^CE@-E14$+eV[[TV)9$<*S@^`kY1je15^/`gT_DD:gh;KP'4dZSA;2'IdQ<
%HcbU^!t6jc_OMSk;*^$op&krlOL]M8!hMuoJ5PP0QD>P,;GlrU(CqEEfqMr4N$I[%a]`)[Kcm."-;-Q[oBZ@QlsF3@Y#4aE2DQH1
%@UKRnhk*1o28k"/KnE`l),mTg+B$*m,V:erGLJoiJN*]YXFEb\H%B!?)`A9[#/O+SnX!t;$O'cH>\OKRaE:ZoJ/h<]Stn&^#MMa<
%*J#A<'h6?gMWBJ;/-@nnNPoFVU_JS>#9CH&Eu?Le^uYd7N*!>S:"#32TMo"\6[(hq`Z=a^e(D32OPt;`-\Xg]PK$6nD:r^^ChqO0
%,bD]U?G\T+els:RP/'0O36lp1hJ$RXbCosF7PR9YXJMb[m%nsD&oWsZ%Um4!BA&\OKQi@AgQ]M9V$*n(n4!SS$$j83(n+Tu)`3u'
%`!C2\An[<U@:T?sb=)^fE&@<eP+DqS#44`DTa=d*MN;RHfV)0*3VSW2':JZ:R2n+[Krh+hd493-n'f.UM08,![u?;?NM"=erDH,@
%@C9]5S!!OfA2nFfT/o65;I]blS\`;%*Jc1L@X=\>0kuK8d!l(7ae_,nm*Qp@F<!DMaibB%]e,#o[f,Ku40p@"!,7\p;cBIXM$%P(
%@E/G8"BEc-?]Z+"@\a7.Dpq,-+=e2dbd:Kp=t:]&,Z2TF$X/K6EjYBl'2mZnQBFiG'a3s+fU2'&Tn`o87XOX_eI?h^8?j13GKBab
%agd*\h!?kSK>>%F(pl+ePhX4+\Vu,+0hf;4OJ?!<7\$,"l6SYn//k`1)EM^QR9(MBVa"p;MGQBMs.@)5=D\J$b=m$:g`gJIPE;:C
%&4rXF=c!tnd"2U./?WF9lPL)jr"*>)`UE/AJ4;ea%i*dOToc*c)e'9[X_T+E!B_6'RFUdDU1>Y9.NIE`$c<oRQjsq1.k0Bi/95Ap
%q?Bm*=8j<\AK#D/2'RBdUkVY(>3rjJrcDf-@0;2@4r6dgF-dP.!ts!5<Z9>\!\j=!(P8Db*h\sDd,7;c&q3_!4@n!2/#g$5;8XTR
%(.GiHOl91*Y"9ik!:./cff!]$FHRrF9^j2$`ngj<</K%$qIH9Pa9Wd75^$ip;+r,1YglLV\!7.(JHF9P)9I42,(ttP<m&9c,u`E?
%ls\G=Gm7<a+c.`+4tG"sn.MO-=HR&qo:[=?XmmPZ>R6cDApaprARaLeN!TQkeEAQf@MY9\!)Ksj;j9,?2r`nk?\(<sPR7q>U:qm'
%S\!mq+,Ubd1/d!SrTk:H8K%uK6*&/'MRInH3Z)>+k#/QWPo[nu6T7@!5U3"CCNZ@k`h#>M[&c0m+Mf?hl8[J1(bU=s@eJ%mY"aF8
%8D15d>V(nB8>NJbB_@E.b_2WS@b/(<IM=TX5q<JfZBVa)MIngLLcrNWE@0g+MB9<p?p[:[[MaX\dRk64+,`<Rj=6MM"t<'-c5[[=
%N*9VDJOo^?`Qj0'O.6:\1g?rfp?YZr6p_k,qPU$"qWK(A+U9/83MY>2eF;M)!$PtE2>]6L0cd(+fX's%N\E3IA<T`/&3g^.CjW',
%`#`0LSC^Hmas'ju@QS\K$!KqL\O=Mr<jKrd[34"i!_;Kd><st<X9f)WRHuSDI82K1`EpiLcXe4qEFS]V67P)g;Ompn?9WreZ6[%,
%a!"[`n.KP$ML@aS<eUQ(`\N[NJeh`2NWBT!27ntb`bDLWiXpiQIg#0VSS#te&_25^4j!2l_kLQ!+G;2?Y>KoTO9g+[%a;XE;)6,3
%1.,uMC*:Sq_giuN2Zbm<S6M@;8c'iC:GW4<=D2=NZ%r!R3,SRaL5H*b6(X:jL`8,.:.f2R+I8:bK</h!,Pk'7BUuP[iBW3.P\"n_
%J/:R2TGT&B($e7jc\[2;OCSK7d^!&?)NR5RU8(/pU8H@653-(HPU]6`QVbbG'&&'V8,+ZeKm1hL9QP*:E!Z'A1B<^e\[lUPTLA(e
%)'OX/pFYH9h4Fqa"T'%KQgFq6%4&A!QZpY>,>XSXjD0oE(^sFm1N?aj4p=dla]K<Q,6:MJ>c/t^4nC1G^(-Nc?;e^ur!#p<fF^Z?
%qJXd`:".?89>X&!GY*>)`aqCZUIjIGVYu2J&XBmreYIR$/D"<liYs?R`^39JQ=a9@;,YP&dH#R:YSMf75U]Ad$BrN^eX\lp3>r)s
%@e>J;1,%Z6jTklC#!`Y83H)0.d;Oq/(%tWAR$/[36^V'sp+.V2='PlghiNWPrq/t(C1dZYl'TQD:##E(;IhR7g#'GETggMsS0GI4
%-%@siB8hoj_ZGEq9@oLl"U2-3SBYH\#\$n74e=JtN!R\8CY=3()m(6BHn-L9oTSg^9_3HE?cr24eC0:J+m<IrcO358r*(7l=Pjp4
%])US-&diA&_UJIPnW4lhrg8i/0q#0igVR`]pg,X!7ip%kD;:f*6[iP/iQ+(I8_L[96(U@K%9`+rr-50.,Bdn`a$W9iY\BoRK99o6
%An>Mn_l9,\0Tt:(U6rG"EkKJ,YT9R];P;sJ;r_$?Z.KpM*]la2gY%taL63*ef\jW1=J?b6nF5`\l&dD0Su([`2OO"1X#)"_*`(M-
%6sL"nR`S;^j2&X29.,8<i#tgQ>5C5e*pr2k7M7g#;81\F"-56987jmD^k;7?5g@_*n>[SJ.*e=`05>i2-bptN03ja]In-[R^u$sE
%4/aHO4H9:lZ6D5fjEKg&-Ze"+qbETr6`7XC)`LmL)Y4u%%c2"Uh_AN9N).[]&M4.*A`LHKFJ@Z#]rNC"A4u+!1U)cT1nX<p)<?@i
%[Fofn%*W-IdpI@g%/Pam0,qQJfa7FlVnI_+,iSEToe'Gt?g4A1fh+J=kIa0s#K_auN-?.TM=AGUGXlj&GW3ch#;6D^Ec\fR\.iUr
%ltglbJJ&gQ)VH-f`Uq.pU_p_ri*eLG44#B"%c"&OYcUJU3+KNMBI$!7Yn>e0di$H/7!AiL8;,h=d@EQ-gZAgk?$44'X(0.kLDr^i
%7Ppu(:'\oF3n)nQ11e$1YtZIl*FFghh2T7rQn0Q>F/h;(OAA\=N#.ZS!3<GGh2RR8fq!p*!\\A6]GFb`3np2+:,%+^.GGl=6:'Dj
%mL1X<BDkAF#DlDFbinK[E?V0QSaOc7j?C*`\iY_%@]7]1)1Wd<(e;;%6`tc6cV=6'%-!mMhfldrTId@7U\!:B4UL48F1OF55'^&:
%27blb6jYkcj1@,.d39+YPj])9;aSL%FE\F<!gW-_5@c5:SF$dd9a"5YFE[rI:s=F7kjAj`I-Fich45^'!J7\<m`rVE5lp2>m`pn9
%dY*bNc85fe:3Qq7<rT^nm1+!c`0"tSG=;*J45lFkcB*;_.]0K,&`&ElG)bmL4X/h<R'YTlc&,-C:3L9k1/,tfV7T+;Q14K'\iX<6
%a[@Q5*?jWELa1^rU#XL<4/]\H,b>7RFJHH(N`^X?KC7$h^=8R5m`me/@d.uYOE_'B9^1sr8YC)@l0ap[[XNkr%c'S!k;\?]e7[Tc
%B=fB&,'gh5Cj/:C+Ou.Nh%<kRacaYe-PC2QkjCj_J@a1bNV@10GOj,5b(Y/jMJ[%oNUC]^JjsW*?TJdhN$HciJ=1Kd$pJ=9iu$f,
%456<7Z@bP?b'&Q.8R0Y![QEh1_)5<&47p9YJ%2f?=lNr-'Ul;_Tb:KpgPtS1=<*K#C2A*[@ArDQCj1D`1*t\;m1*6W/8oEBG60*o
%2VIL(-7S;,g><&>2i1?h[QDBeSIdaDmYl3*bA23DOI.efOm^N!'o)GMPjT#p>XEDVkjA^c7e!Jsh&RUU"R!DEh2)7N2S-NjV_bnG
%!'plt@ACF:>+9'@)VlEUXe>@4kjG+2Kk[=0h*LLl8nLhBLXV0?F.MaE&48:>Om^L+)DpLa\i[fKLOpBU#nA<h)ma-uGE>Fn<TC^O
%F\Drr^,qi`7&QRHh;Ok;T[:]&B=r(Y=67%M?Ff@``'T339JMKRGFV5_H8WDu6U9tRD"-7HrKI,\oA/B(QK:<j]/-DA-^.]n]7\es
%=;BNamL2d.V`u3tmZ>X`DIg?]Ndud]VIXo?aB;Bj\F/8\A1\65Zs,$."#FT$'De^c'&A*>`98%hk70CU9Ql'NNpFs/Ol[&WJN"go
%>mu^jDG"o(Ou]nVFG;mL]TW2l&_t3)A-_ach[V(Kp4YGO4#;D*!R\t+]cG$B\F9'5O;RPJ2gRPAZqWEQ[tE>\VeYjI"t9Zu?Pe#M
%#_^EL7W4%g@1KZLgVN;#0k_f@UJ7N-3$Z$Un.nm\e]I2F9>*9)],PYc?'16[DP2Wc6PF@_D$R,/P_>UL%VDTB.Z]ag-13Rp3:*?s
%Lu]\SE[%`%jIMKAZ5\0`:kqQ:dbHQ.$@*)6Wk*iuGrPrh5:*7sT0.],2nm4imsOmRh:Dil.?GgVd)^#nS3=bhU,(J+Eft)P%?2GD
%3O52e`b\/tV?sGsA`>/+Ok>\U^<e$E@QW53KniYQ[R2.):c:1?44p^PYomaQCe*u-Js[si*<_6b1?Go"7>Va@ZQ5O/c,a[5)N4<Z
%f++uX'!';oa#_0N)g5MLQXs[pN7j5NFYWZRfhN*IPnQrt1uZ#%*BcK6:sR/=iC7WrG\?"_.^>OQH7s.)g)262R.O@r&6dd=I$jHX
%iBl8[S_">]KFi/_?9:Nc!uEn@m9nmu@/'C:,"!=_k;ISP%#Yk[88C`=![_6O[0*@FSHu\jCM-h9J#B\16s)ukUpW!ecm$UMXW>?=
%I<8XS8EuPqOk(!T!EPT8g;1-=+A&K=K1$YpPh++ks/>"(cN>93K;$]H).q9Th4V0.rMF9EV6tro#_ADlg(Cq4F$6G/1LP;t%<N:O
%6L(CTkH&i_Pq\if=m`.<d>6=Um9j#"_.ZSZB*_REdR\.dJ3dQWqihr-OEf%=Nhs9u;"D$>C'TU2iA=Rs6X88S2d#JB:bqSu<]aJJ
%`/eZ7G(pjAAqSSC?Rd?RNRU_MCRMJsP1i2QN5LY)Np(+XG+I-CP!M6hOjqZu,4S-;#EPM%J">)L;#rW:%8o:?_@e>9Uin`;8g*;g
%P1gf%_l!r=4%R$k,Ggs9,iT^[m0j"t:"Wj\1ISI-IUoh'qjT^DOjOX\3XCZ!PgPM#C?ENL7gY%!)l"E"`MX/74.+RO.SVq`9Er!"
%7/iT0g-NpsFJlK%:8@`Xda!B'R+4Y^8ison71:E;*SaH!kB0N]?3=0J3N&E6I:B6mAnDItE6:0'(j@F_$oargK6&0#1QBi.GUIX#
%S^PdpU,/5I8isOAosC-Kg0mp,T`!&+m3!1%`("MII1Vri_3;hCW^O?SB=)gnCO0,tm3!#'o1!Lc:hD%ZB"W;3CZ:72?9<NO]AVkb
%G'&eXQ9XjLL2EfHdO;:>mR?'H)6Fn`TQh7K.'4Li,_>_/XdobMV`glaK=&RjN3ma@3ZL`YGW7B+3?trL;C?R?P1gLST>e`);EGk5
%X:OTlG)VrRC:',W)-6;t]0U0:P^PnO`("KsnJ.q?)6'/uN@(j6g>Sr-CtDeV&B,lFn=8#=DlrYU8o"YG!sut)@QP_GY[N1:c=DXH
%m)4'80nAT@M="\hp`[.-YoW1o89NR@m1A_"K!Ij^8%o;HjNWMJfSdRTYXWGa8(9\m2Mg`;#UBLQ,ISg=7F44Z[_2.01cT*cFtgEW
%Jas_a*Psf^MsA6(m*-p<pl*i8Sc!TD40]gC;)+`hWtF)h2U?-XCF$>UoSN,&`bU@,F7N=Q@QX-O,k*A1M!Z=NLim491PA]UqG("I
%&ZR1SYeb-G6eH`E1><]/_He.Lm0pi,@(FOLm3Ds,`&_J<,D?6Moo.Ra:q1$WDp3A5$Si4AR-b/DT!UD_ULPFjBZY_VR-c">3_j=r
%PI>aks/+"`QL,8$!+iS`YQOa;k0/"e8MJjS.OGFUNj%3)m5Xp;a.4s>Ol@UO1c!gjfq%G@`b^G(1%0iR1><C,-tltb+Fta`69`(#
%ZQ0X6L`b9:m>1@&o%(fs7jK=irKPuq1^rFXD:EaqeKGlYj0ljP7%l?*EndkVXk8ci%Z=W^)/%HBj<ij`1ho+7,WAWUnY[S!;VMf+
%7t=*pg5[Rl_V$fC[Y$Q'!`,6O:jjriT8hNa9g[jO9ptB&)kni%Z^jpNj>&LFi>V'n3O'UIfd$;6)mLD*b3P;D%d!;f.;$59lpdcG
%ds16c\'8l>,ISiG'W5BZCe#1@@Z33W3sLU)-$A\Q`(H?ZOYGP;dqf/3S7oL0<pSX4C--E#ffl1\G,2HQ;-0O$,=qpZWb9h)7."Y=
%dXjJIcrkP3._2+s@hlI=D?g^ep=OJ-4/(A#'7.:8\A2A^OUplR,EN_Tcl'M;Z*sGXNS[D7'jFi*m@Y8$C8POrA0`=-EEcq^,D?_H
%s2JqH+sNc'cKOZ:C*<b'8oI5ZS_RCW#%d.`>r&1aUG#n0DT?d7\Gj&CPhtijQTk>?5#Q^=qBE\Xs8LiHgt0<UGbMmM+@,Gh?S4"G
%W*aXP5O-]n<W;X_g\Nsp^\QqlIsJrH1P>VeQiHZt5Fe:r>CH(ChtB:p"+U3o5<o1kjbm(:H2d4"q5_i%ro7@hcS+QjITg+JlKk!a
%f;EQ_;0</JN]4.%H$+<0ip'JIh&cOg:D_XC?fE0Z5JB/>?e-CtqKM+@?6+N4-?D,Zo_[\?GC&Z0Md*?p3.<HGe9A\s^Y.#T%)9OR
%,Q>+/)ud7W:GB\LO*Genp?epH"^f\1gufRNEPZks\F26E_qBt6<sq2[YM7UJ>^l:Z:J\-c?G=$r;.&qZj__V<nmsJR]DceiG5ZU#
%pW]l?c*C-u2k>3lmcp9ckGK+DVg"2^r9DR9kr7MA#@1S`H$sjaEngG\I*Pr&p\2#cdj:2@]6\*>VKtdWJ(Q^#DbpCPFo$UEeS/<`
%E&OlVe]2)IhYhFqVf1I`00'NrKtI1$HhY!S]R0V/PO%8t(G3Ge`=%sUD(fe`pYpBIaj\#^V)0OfrVkd5aip8\gc[N]DbdKrY:m'p
%9[%bGY*Re.Qg_(P:B,Q]r8uP_aTC5j[dTjA[MShD$-k/@gLBdCYWL_qcRrS>\U8aI]kk<.Upm#%Eq]t>p@Hb"8"Uf\/*Bu8DKY&A
%=7/FgA9HuTO"9tqlF>Q'kC:$)Hb2=[#N<lYLdS>ZgckLR$`o<;QWnmKeX-/09sFJ7^M%!Bl07r?k?kqaIW>2$UI`[YC*/((k9#sb
%[qnh5h5aa:-hmB#%aj0rPEK@I7rV3U0JVHk^\Ia!q_P?/=lA@70Ak<(I<5DU[Zfu(H31^c!rdHBmd8c8j,9hEJ),S.bmTilM^>t(
%`=A0lP&FHC`kL*a+hMQ;m(N,(I/3@#l1KCH_ZB6!^[g+hEgN8(_5["fo]4j(n^[+.p#bi)oO>q\h#,:>m%NOup[%J1mIg"_^2Nqk
%Y.eg?[E%$G="fV1:;8nO5$nrLSR9+3mlH4WJ25T;bO`oXs8M!-m1/g5!;^]g2p-9D:B*nXJR.csGIQt+T0]1>Rl7Aij=i.3W;g0X
%'`[$`,9.JI`L]RI4uLM1A%=tA9,loLbHm,mkK>%u^\N,XnYI:ScW*+MUs\et;?Dakn_P?:pC,a1-RZ.U1NR4nci(-hqkaB0GQm!8
%"d=Lqp=Q_IDTVnQDMQtV_=@HZD*a]F2u*@NL>1j*p'kVXhf*scG5^_!l1L3mnj/h*O"FL`O->%]cc5R_lS":EDN2-,LZ;f(_=rfY
%hIjUjE^KeRHM-YS7e.\(S`LgXER)TpI>bMUkM`FgSm>Zo5J9*@rV(n?n,A[KKO5gK%.1<"pal93IBW,pCZ!,bX)Gm<=jSXGFo:7c
%h3&@a([c%\?_!Z/0?N;rTV)$^9$J-!_ngG,/=DQGQkDKgH7uJY]Xg5?r-#m_[>/Y@WlFa=NBIL-opFIUQ8HU_b3S51*?IL0m%Q\E
%IG`lhnm7*X^E9tPBpTe:J?*&o9uF\`N4$:td(9)jR)90_h>b_49E.hQoR[_AT@2K/[hEj3#L@r''`;f6QJgGsj,8iEo.Nnc:J[;P
%OuIlrX/5O%"VLM+J)AMCm-=IcWtUto:.neEG2%*..*S>QRVi(_A%l*MX:F@q?1K_*EnYnip@cc,n]C%]du3NV+29hW,A/uNs#[g^
%7l1&&h=JWN/hq_,KmUK=pKbDE5-DA!O<cspp[4LS0t"pHE=WI7\k=(<$pBr,Ic"&XDuI+X0(s^o0Bl_*8A'uerq,19q?7u4d(=ba
%G2%V&qXWqBoo`c)?FHoF*,`)lVXZY8)(g]_a`Y5lPk25>e)LW)f@Ab@q=E^21>9jH]DAH0>OD9-M:$CT_f&Y]`a12^%$IZ7obkg5
%590^5i)?Y%^-987W6")C?%(/?ji)hYaY@JahS#iXA,8pKMg+hs=/Y[k(OXno(MD?4h_4i/Id+#LC4Y>"rNu:f^[NK9rkA4$]DBU8
%$S11CSt2K,X+WXnZ"J'(EV=_+f(mS2H@n]fbk>aW.oH#W5s'?cPpf9hk"ro2#@*+kBH$SmA#tqDLK99&Le.\E*`FN1'"Gr6X$p/H
%6\f^SXL0H\k%1Y`q744XJST3I[4%*Q&6bm_p:hC)j>#2Z/GYZ#3GfgK/W0?-e=nKtK_qq.*`Xf7a^_>>=n4;&U>l`s(1klum/'h5
%XL0H(O/Wn+ai>CDY(+MDbotZf/=Ob/BT6<Cj^Ef)/ZS;DBB&Er.1Tu753cA=ndQWZIc9J.K_]p!&Vb]QN$T(2($TAoJ7Tf+(ji0<
%omS;FX'WE!?Akjj>;-2\?<d*VWn._IYPnI#8lg$#ELCU?R+,-:X]k+YXjpH^m84a:X&`H4g+QX19f#+Cmi]BYDaUg<#_$M\p7N%K
%lSc?S2G39n=tg*F2HmT;Cs@Xl-nM;dP`PguU4U>*[C``aWcImolsH[R?^r5<q"4`5"7G6&<c4T7K62;,iq2?c`U-oqZV%/TVoRD]
%07p*h>e@'4ImeN6Dr1QBjmLGT-p/<PA:di9PSFU<"[dQb]Cd1f`o//9>b/UC]QGuY!YWXneD?>`bRR,ie:.rup&@7WJ$/hNXT$2d
%a6@TsSHj0W`0Ym.N?/n6hp:6Em\W0l&^gBi'_*jRS6o_Cs,Pm08!\4!\A%ZBS)$/K[/WkOQ`o:O^9)kZ?f0\:Vgb@(gSH*=f"UPp
%[D7B-fQXficqGeh([]H5>jr1q2T^/)g`m2YY2A'$(Roi*hsYKnD6@L.@!3CW\2q6Np%n<,M<[7&e+%lZpcqTr`?*5hSWP!#I.:&R
%P)#E\\EDWg9JOoJl*of)%kmt[^lWqZrc_`"m[F/=K`(;6jRZLF^[JEtfDP)-poH@Q]B4TeT)YY[L^^L.5$M\lXuYB&NL9'Xr+F:M
%XuYAskBl+Nq!n"Sr:5WT-fk3lgK3#"Jko/B;7U(T2Lhqe_gCY)q/RWZq!@9/ri-cI042G?Hi!+"U>"3892rfg?gQ!O=J3go?+m>j
%mF"Rq?bY^7Dr4>o>pk]s:g3ccO1dnsNKC7SZ<\Jb.p_K[+^61%&"jmX=R'[hluJ`8AE&;kp?gDpl,@;c8j*'R*lM^K?@MVHg#`%o
%ok.@(00["\3ki*]YJ%s%G&_!Q"l[\cJ"OE'GC:EsibW,4.sJB.j+>T;4g4mn0RbpjG/n$[cd1h&5)3n.Bl2#Uib1GU*IX<uIYiFN
%k4GI@mT71'f:-M:/;cXHr5m58d09E?^$Ru".lVs`]<h)e2tg*:r7:Ab?AFTq51jT<a1a"Q2=RmU?Ilp8)L.["dMd@5"#"HJjl7Do
%#d[([7ADPq^T<!QIJ,qX^rnkB0=t/;O/L99DZWI:Wq1>Z&Yqo%1iY18G4-IDa4<ho(BK;PV%=+UCgm]9^qPFq/GY#8Cgo&4,$2"*
%h4?&;L&PQ-.gGbJHosX*ro3_>ef<7e3:=%<g\8U*7:Ou3_f8+Sg>g(j\H:XbF7GinnA1WS.g"2[6=@CF]WUHk/,I\sQKdl;o_"QS
%NaH&jY`dN6;F$*\=',A&Cot)qIrA#4K5YC05SX$'!E1F#g==VTndW'BcIk/SCYuVAhJ9=<QS76f?=Pp!S\A4)Oq2EUs-;L:9Cr6K
%A9K&m1U(dRo2s,?<tF[1HYAH@7eTaoIXUs'/?qB^BRCXU/GP$&Vost.qM"f0-VLPp*?)?*0:A"Gc<`'%f[T6<36!"D=-"kl&_B"^
%!VnPW+32H`+HE_f)qI!ghKlbg[cc7%`YunM\!^CZ(i(,OJDqEta,=]5p-+A=qI^0?l/[Cg?ZndAEHQYLI=2$\bHiM&f^cX95H*Ig
%7m6lZ?CtMqg_L*^3LmVImq:gA\rLE)n*8qf-O[_8^,^XhqM2-#s7>[Niadn0ZZ5rH^?oGs!;Kq5OdBH`?+bO_f=Ljn?aTa.([pr(
%XU*7.$T,4Y\\,SdI(eTok@M:%P"1?b1d"o+d;jZGjFFu"h,g[c8[k<o.p14ipoMLBQF+TM>Hs>L&#G#G[(G8BI:.[k<oE00n#jBM
%G?u*2@0QlW*W!l%Z[1LR#p0cOA='"Dq_`Z$J^V.Hb4#?%or*DT^9.G3OM[he.Wb<sjD0!>-!s;/B&=!1(<sp(nC9,&K23n#hdr+U
%Ondi#;^?g:]V0R$`CCW$?Vj>e;e#:/Zqjb1DSLS0ANOPtk'"(8<c@EdH?0Hh`7:@3(Z/Zok4WX]<c@ErG]RY3eY2e[$ZI=kGA\MX
%\HNYS\oXo6\%6X]41DeBpNGa!fB)+PDm,1fCurA)jZYP__4(gnb*uTn-i<>X/XhmRT6i^"gg_R:=C=P#J.0'aFVZm^*s`>2_;e.h
%pm<S7_u\jim-s$VO7IT6J;i:eUX,u>-bRV%rQY0.a`j?tM<ONTn]BJWO8lmAqYBj]a7CTSC;"LdlY[kooYKmhL#6r"gZT/MGR(d;
%*aNl/l,n=2a63PCk<*MFi%76%T04g_G1_1f5J11LeUF[Nfq5uSI7u##o*;m2Ef2rV^-"D^AE_7?hW(e;ZH[$K(M$r]inJ>L@TQpG
%TVCf?];q:=-`9TbD1;<G_#C.U=A7b$0^$l)@bO<^FCO$W]m'DCZe+X]jZ*+%]:.B^!0QI:]`-O"E;/GI?%!=refA/hHn=mRo.usr
%c^/2uJ+GC%KM(15)D28/bq25SC2BZ[s4<a`Mpk+\_9JV=Z/O/<p)]OGc(F@fq]<@0^7'4lD;*g(M>1S3?14=^?&bS20T&o#keUWe
%9@X7PD%o.E&H4igiqNApq1s19q`d/t7Mp-t_<qI3hflP\'29hV([Ys_/bt,IHfVdZDNQ7&E*I1rll5k/H_TERG0T@mbjN4(q!.5B
%ea([Q"9o*R69_iph;n\&rBDCMc`Y#B5.`[)ZQ>-RXO-\>E*VrClf#>qhln/^H`qtor`m+6-bQ%1LOV3'@K^s&)r+MikMtdC_jQRH
%qA'=H+s%O(pPML`=GTA+).</5S=;ks*W4Q[DnA,(%NLkW*"DbZD1Ci6]B>6)>V^Nj_F)saH[g.N5-DA!!)%;CLXmR5YM['lU?S=6
%]CX4H5JM-Bp016R/q`Vt6@=1YNjrB_TnCD,piM)?]([<bT0<IDN/ncdg<&OUok3QFh<"&h@$$48='KkZ6g[b=SHDEG+I.J<qYNcM
%3.;QuOoq)@^#)+f#s7uLg=+N->0ougBY3Kd%I1uU%UlL<oB#5e+3q$4)#r6t)7E$C6H@]uhjg><cdMUKm-7m$2IGJ&_fiZA-@^8a
%EUpSk<$P2ed;ZHFZbopXIltqdAl`Jd8?;+A:5_L'iW)L,moROGDdP,*;V8lEs6)ckpG::lhWhat&'.$>53/bfCIt_'O);5@P.0>>
%T<B<]LT]7:`:DrQ=FR&)\0hU2YCH9o1OT/uM\homM6[-/f71?DpnHW!&2g)[r9<ITB,B%3q;bV,H.23!^\mZCfABi)f6=2mIegn/
%o@'&Xs7scUoXdnJ2&uSdLJNBlY5R6soN1sc<WE!g8,V!=?2sQ3X6bTd1E?Ahkl:V]L8,RXfDkd'-boL7Kp&(\@dR$5EHmXP8Oos-
%O!ZuGdJ/R2$>k'OjPo6mPVe'(Yh1<5=.\mk?1*LEV]hD%l#"+VmC)%:F<U)ao'iGW2nq8jRs,m,o2h=#a7ntFSUB(U;0_fVYF^2q
%iKO:)I>)h9+9/jdN5%@Kp?MFl=gdUVCcs.1*M*[l)=#P'-SFJ+,Lfp\n\a:Cc@u2fBq8F?TD7ans81:=+7]W=^+\?9ITK52k\6TD
%Q[".\:H>ucKaFp6-_'oW(P2tgK,LtS7sKk-q%CN!Tk+(p`$+(Md3]sZd6E]TF,kfoIEk2<:J@`43m'13WEia6gcIHYp$mJXj5&fG
%4L%*HUZl&i2#XS@!B63(@"#O)_X(a5U`6e6#\WT[b/a5smlLEOS"ieun-;YYkF87--_l?a'hhRC=.(#][AM6%0l\PqGf*Bb=(R>a
%D2][f5AV:7@62UM'0<Z!`HA<?\EcPm0i@K'qi8.VI+af_G]q9o4Qgb`YCCrjX+/4)q<*Z3IMIqCj$/V(q7jA]W3JNf[8l[`ifdVP
%``r6da^q75179L53A4<G@U7^_"MB9J4I[_GfeaARib"(@bNgscQbgcZ$^3'cNo/TX<Ldd0+[$,lf\+621h/t@<4um'Og^9Z)).8R
%.N36\\?Z>m2m.XN`Z3*+LZ7aU)CLa)l/rk$lo;b.GFm$&-Uu=)d=unf*28C/<N!Lqc&#8>\4m,rs.<</R%Y@1\bbV>oj(HqJ1g"o
%DC@a`lXZm(i1bQ2*6,(/NqKip%JE%.XF<OY3T1E@I=nQ2l;B<9>m=ZncmQoip7KoIloeECW!WMCn`e.#5PF@$a+gVa9c\hs:ii2+
%qW2s<=5a+oi75/FFu8+3&).V7J+Vo"YZg>@*8]!&=I4D8(U?7t>u8p7?N3tsgWW[^6KJZD6L/`?jN+`3(Raf9\NJX!@.gja8_d_,
%4i+/8%^4'sRn\$u6J3E&SR`Q'm,D^U`C#&m*p,dlSZ/(d?(U@ZBT$](oYd)L%?g[R0EepRCnFq@`%\!iq<O1_!Y1YuSn'YHQn[r"
%)0hfR@7nW_D&p]]pT/9niBpU"M$ptr=#]1bCe%RQQQ$=F/qeQ)eE'U$P4A2U<Fb*Ol3E`g"1\^'OB7&[)sfY!lD2r,E.tq#PBp&T
%l:YEZmZub]!NIM/[V$T\=(7=-rdiCD](ihg3o4lAl4N0"ShKV@IpIJclabX?l`UQ$^1#;.S\XoHGOa\VmAo8+VamrT>l4em_/fPO
%et^-#fX0BCOrM";k3aV&?>LMO[HkkE4ik7j%oqM`S@MtkG<<j!4?84CV4.`j-.e!X3Qs.ZF&I2tKQZMD@9cd,)Ik5':P($4kLGLN
%i2L\\]tto`>:78^Z@e]L-TGYAlET6**\>]OZ(l>>W27SgAjS=kkLIK$"tpei174iiYh+Lc,eG49F7GimQalXe/hO>Ik>e(=4A>&t
%i85ImYO6n0laD=i:(G<K4TOc'e1G%*a%*%2D33^sq+7mBQGC5@=RE=C@2NRglHPqfCX`Hgc;dk40U`?8rs(a\l,'>&gt))LYA:'H
%KtD?-gp&m)($3^S7Pn[\*j@;<o*WWR2C+DLT?CNJR@4:-9DT-DG#S3]TA/E\.Je+p]]\lJN0F+Q!fq.7W4+^Oc#?Y<Yj*m\,8[o5
%@&e'+)/H$Sk:cpJbB9Cp,5Q9#rLUb'IMcefP.`U#gK!TiI#@NB80q$J'MkA#mc<Hblb?_3O!Qbkc/*/l4Q*QS0#"oo$WKGMQ;`>q
%`#l"o>Yj!u?J!XV[C86S[T*4&L&626.B.'#\s,\[0O'_6%QVanD>1S@?MEY3ht!Au,X()Lr[]j<(hT64\MKk&i_S:]^l88*S.>&,
%"hmDh^!FZ7?Y#1Gqt0IMS@1l]ip:$Mk?j`c]f\HgQ@RZgFaW`=r2+o46216S"Yun2Sc5Rs)^^o`0936>:TlD3RQnMJH_DV:?[lo_
%j/68WY;_eLf7.`/a84kAj>6e]7'?(;rpB@Q>T/Ukf<ZQc0@.rI"M2n8+0Wsrr'1.>_TbULmI]/>\(=]OfuX=TB6T;:C7K9Jkjd!f
%hO^:>;9(QZ\4.LjW8fNYl:@7Y1[=2473129;+Ggq;+G\#e1o4W`WJXMrQcO-9H*o2YHoMP2jA/f8&$VAkU'`Yq`f9th!p]n9&-\*
%*B.I`%i0=^5;DM,%u'CZ7gY&hKH9(oKH9*$_N'(bfJ3=e@E7"eGkktHDob*>(FEQ\NW.VDrMPT8L,%uW[RD2Q5PF?ia"ljLD'qWi
%Z3D<k,j=I#"WcD;FBjHY%iocQ0%i@@jD:4g"m^N#3of$F(dh`?*hec?@Zp=o(6"bhmp$m%Xn(`Lok9='C9*,i"sE1Rqo"\CQj,;g
%Dthp;a%9.4IoP9!i*<H>5,m@<O+SiI<tB*Slgi>u?!0=f[`.No(ep5VB:Ps,n*5Ak10i\7aMCL,8JCX<^-r9/68F8:aRAH:Q'1R'
%_9$Br,I>Gl"tM1bApeo)+->(na>[K.#!NOjL:8W@cL\I/DDB\geN70'kqYLFD81]59mmsoT<Htf9iG#<Vf);g<TDHXI0l*a6]TVP
%@Am-h%Xka+iV#W@LH^$HRI#MHBKl!G`e@,CKi//i:6"&['gk.JgCVoWYk;l`F@ZZ.6\<LXh4TdU$rMa-)kR#<Wu;:Em:SRZlbLQZ
%$gT!l/lN4?WCo_A+U4h_^0VC_/?;L;<>]ONG>NCVeK1eN\ug],NjeA`YO8^"X2:jU\AZ_Z$s#e2\&H\ZR;T(]j"SP,CG7iYV2EeZ
%eFCm.3X3sfH>teeHo2+3,^n@:T.[W02L;;(1fIpL/Ijq''>$<"V/%_G3=5"lM3GGi*l<p3o^$lFP$@%slU+Yj,-T]NNEXB#6L>M"
%>,j[@\&b7i$;uo1S(fr@/_bGtI>(?j,=aa_+frCQ*n7!n2L"P"l[F%Im[T3Rlk"n-WQ9%(nO4$8$*;?:+9:9h8U"E\dCiE8--0AI
%Pb%08U&'fG?3+]H"Q*WbSM\mPe5tJI-H\h\W%T[TdZe->(n<+^Oc,(p%Zm$YEnLA;LVA\$@(Q4"nnL"X3XqSDM#M=`ghge`>?BqH
%f]T8)XB/E`?o:kbQa9bOXm.R7=#RH,Wh!.;;RM7W*f7($ohs.8-A]!/YS^&7@gT'LalqAGdla'M$4L8ldue]h$8f[67+#-V]D`.C
%J)LaB7dBaOh@s_>RNs?keg+B1$"%r*(V$:K`PrgR5ME^'^>`1ZlpNYBf+c1W2aq_7\n3AA%)n[/=>LZ+S.(,)QD&!c`[jJcDokh_
%_M(@u:^jgD.,mb=:q5=m.)Jd$:u(Wrbm]<`QD%FYgasD$>COa(`DCl<_LJ?q7Js,6ML8'S_JDkBY\&@).>i):'STb]U50mK71ib,
%i0JmX9bPBk2-5m['Erq0aTD@2*!ON"RA1%!P,#PeF.Y(6/s@!H-RmUd`P^abm'[mf?#p]qNoHaR'^A2UDK]m?<t%UVb/tVQOOMDT
%md`INZdlUIELSpY1ondX^U.b(d5XRr`oToT%^'J_gqCDFNAB`T2+7*^G_d)(O/coL0Q2#U(n\fGY0S&'<GJ#nWo=U8Q'8F2dT!j,
%(pu.h+bI8=N+&F2F]5c-Yo3[&m!lef6oAE=?YA8jm=Ru9-e'@i,Y^)i4S2^U3kD]"8@J@1=<;S6nO:iA#WH(,PZOnk6h]0'$uORH
%W(0EDqWFXIN2&G'[R<cr1`KtkO3$ARfDXYRp/MRi0\i2tG+Uk]gT)g.\c*cpBq;k'1iZ0U^2DD!2eW)5<N%K551ZSUoGr:G^?Xg[
%h/9jW<@qlX06giIkGJ^UN$B_F]Fh(AY?QWgpH(eKojKYO)+N))#Z7Nj<=bHJni3&$BUC2]!>F\ek:On@%*g^0WD2?rgYY/J``:L0
%[OF%#9]<E?X9u3BU*O>-e#+iRT0afgl@HPF>3G0bSEt>%n%A,<]C2flQYn53D77PkjZZpJ5b;]O0$gl`HmD?Q.rU=212nG@+0qa!
%,pF"H6]Tqo2$>i+?Lgc?hg!9+9n-,JQV'*'k<q8cl]r+'R;nttVu^f/Atkq>'/>=u<8Y7N?=[tSl]"4jCnYXX/k7AlL6X1EVNKo;
%k=aFJ38nr1aJircK/@b$2r?KuWuBYJI@BAL64mg_jCZ8gG8oZ:d*s$<bV3!.@3eIp=1^2'UIH;W!/OsK]\1]N`(:jCeD%-glY0BO
%c't7pHClpho:T9dqAm:]o`j$4;Um*g.Ab.%+dq5P&tE09`fn1)g\TpDccP>*HS<N2T?!Blq5%_%^,Q<)qo;=*fNV6&G$uks*iRgl
%.A[3U-`Ie5f&/ZUddJkcV<G<+WKcC[VGbDQ/4l\^hk1?ADCWV$;^m/g.OCCQ/X:qHg6PA$4h*IE9n]"`>$STqQ_GYhNEjWgLoYKA
%/u>\^)n4YEV=\uAO\9E=%?k>F[WU3iE,.5*O4-4Z,59ebVF]KMSkL#/E?gkq\Y5!nb0>&hNm`nt9%t7Cm^eNSRESXCq7[fiPaeH/
%Vg#X"J,!PHgtM1YL)(Pr[X0tq'/Gt2;$HQ7O4]=*B#tb!/X^'d8Z(,laV9_$D.HT9p1t)RAt.J<EQHCHF):=>Qu>gGVVJIC\#*(t
%c_g>`O!:oZF!_qfS!#Y.iGNA#fL1(+P@R;5UkZRZAODV0YpE=Fd=1Z&O+"V7Z'%aO4dY`e]02=f-'dK!j\f7dEn9YU[^UVE(''l5
%H\dj;#jGCKer[%(:?Nd+A%.,5Ze_'CEKUX]B_R=+9.hOFBeEuFmSUFS;UWtDOo0Ik*ar4/7@E479$:qEp[rn*>Y9tD7@C^P\PF#+
%GGF,lpk)8;7(5=IU,M9fRF4jH=YaPtUX##O^5"YFaV:]dhFsf2Bej79pb8Qm;oXQQT5j$KR8UI>;t?5b8r0r%;rY5rb(d.F`<.Jd
%P1-cBU+VUuE&Z5a:=C+X1Li0dCK^h[`6FoH1<$\,MOl=?ps>oH+0)l9Q:fgC]t7W$jZOV+LfuW>@[9+olY"ZtO"lSNd'N(q0mC^:
%pUR'AI;gTu*Dp:_9rD_cZ3ZChs3<S5H+M+M]^qtR?)p,=!8>]`lEjNSXG'pJ^>IE6h[^eM>hIDaT<_F?gCRkGC`DA24s.r;5.AWu
%ndqR[@d=S8iD,,<Ea;6))<*7BHi!a=D'.bAh2DRE@ZNl<$XsWa;uV.sa6>A8"niH%oKF0F^%$p1/XF$9dA)*gM"*[<aYt9SD)Bj0
%jNeQsXF%4`'@h$#s0heEP'hCtICWC&YLVHEFn_2G=KB%UBm'0-HG-%ZYGg&'lLg$\]qSj5Uj1u"'mHj[f5#C#cVrW4\?_UXIkX<M
%L"p`VW*Bi)hs.IEi.1Hgka6'=@$Hgm:a=@Y='clU7id,='N5f3CSA+M6c?+COrXDt-4!8<UlRi&(*G,jLBQIbo;:>'<?ocXJTc'D
%!&eA`U,M,_!-'K\Q11(`qfaZO5TfNkWAe]CO#?HT;dQBRQ>e[/>Rq$5hlR9You]hO?Dibg'Ga8^Z^ZVIDE_qfe9=h)TPT)#o1_5]
%n!7rZ_Ndd3-(WW3p$tcml/uQMI@]A.4b$S[RoTe^C$\_fI9D9S'N^t="MK?4H_+MC(i5Wl*Qd72%VA7XZ"i'&iq&.fbg".M>a.&*
%FiqCihkUU[iSInYP_Mii6dRo>+RJ_^>:n"!GA+tiebVnXgphufQ;h:/1P<[IS*]8u`PtHRUmpq7;4]^.+O3df7CmHBr-Qj8-9i)8
%jfSnf]37.9/9=t1&R]t%`[LTSqZAcJ^F?0^%1h+5$T+QIV6&)cil8rV8]@=fGF])=Y:u+5f:C]>r2qV]E&&H/8SGX$Ok1QCfcHR(
%X,!?kVa5HE4rVV6BA:!k[l"CD93LgJVOc+=+O?P4USO]F-@SKt6O80*L,LPfNY:bpN#]rFlWL%&^&>B^a9KU/RD)gRj!O6*-2kJ=
%`bEX2&B9$!0K06C=!d%sj#iV$qlo(j>Q&t#G'u>sD(LBmT\.8"F-jc>RsmEqHk7Wo%ama))ptXt%mN!uEcF!7G_],ZNg*aiGa[me
%rdj*eR1)Mk>#X,Hf\&$M$^+B,]5lCuX`AjMD:p<QRAV8oB]<lf3b4`\4W@DJ*Yc(gkCLo8\<`,co6sKmIm;WgocH,>@n$jh-N[K%
%=W4@XmE1`dh@s"BaC,GK5*p$LA5Tr--%'JNLjB3#ECQuJM?NW$I+HfXBW<\7hXmPmUM7@Ig>S"@6MP0meFsQi"6sE+s'uR:c-J:i
%nmn*39tBS5dAS,1fPrjkR[XYh3.i5=?"9KC['o5mcR:`X5c9ZqKAI^%hQ70X2=n0-3HIY)oLL5d]*UeH2]ammlFZ_VlGg:qT?Gne
%&a_]$aJ2hlX">i6@KPe>D2B0hVFB7I*Ta9D[6hDFh8>mP0/Y=X38R,e"e4nhEnW%<)cB?</gmReT>#-]2)Yj):=eJWI7SYQo:&]f
%4[Rk<Qr6oI6e"1so;@Ok[RCsqL\]Eecn$2%RQh@p/f`+X/Dlr?'`0'dIW8;8A!k<LDI"2M:ql3jEf=L#3=8HIMBt#nl8.KtaD!7V
%eGp(s;QJO45to&X4mVel7RG\do:,6F`U=66UtN_a^-)SDj'AS"kpoHgm;440*PZ@4#b:,:9Nu[_@r/UEc8N[ASoHNn_nJ/48\BbH
%S%4cOD#jXZfu;c%$cZkLfAn8)[<A]bp.U-OCA*VWS49i_4sYpb0d^e2X]p`nRYL+2S2Yj`rOtDa%Gg+#[D9E/3h2tuZ[JXInpVZo
%Pn<olM%_a+HYih-&uoOBg>&7Ejk6Q<Rr/cN/raI=(X>Kl.ef^k;`ApkEAg[=#6c8%\#A^(19CJ+AYQcF/?YskHJE<ScWMa_f!+3g
%XHVoHprE>HA9)bMhH(/rUWHecfuS8JeNh?>TPECtlsk?X<<GIrNG5L5\9HK=7quPFV/5(M2Q#0afNpJ?[>entp>!EgJY)uNQWjMU
%]ru;roX]VK5bN(?4a.PR0!'a/CZ3'433X/.4Pmr+>8ruR=?$;I<dKY3kMbSe793pTP/<83KqI4#3)Ef;J=\;6psc2LT;mSIC;#jK
%HtX&.>Vff;OX?G%>)P$C@Z:8(*N#s@Z*76bn$AgXVQRV-Z'crq<3*.s-0!g-BK03@ZNE9s>gHi3\pg[lF3DPqZn?5MZaQ;an,.:D
%SYa0BDk-ekZ&*(g[6S24#!UG3`qH*t?E_<`2rsp$cW@u7T=m>*CNkZhj"SrKVoMjdYL`E3[68*i"&3QXb1`G-5_5f?4_8J+=kcm+
%.+9)G>,+c,P\Fu1H%bQ6G6$b6I3,Z!LPB7HH(D\oo&?L]!-MtL=WpI,l@TWXNSGYa-mY%]+-]UQ);FJg4c9-D$B^Rm,-4h/Q5Wr-
%-rrUr(FZXOJ3^.'F[XHrMu>GjB^,1MM'd7CGR1Jm8V*&SOA]b=eWSJ*7Ta`*_&K*ed21nuF>umb[i2`ob#%Y"Agnq(_O.XW#^E0W
%X`kVFN$\h">;#m:+Q&12mR$Fg@XHX$`GQ""ea47%Y[E"'j;V?MCr7-1.U(H.K1MV^lc"";Al)c)(iJ<'T.[Z19#S'l-nHFoVS6o9
%[@5/f5"pLJCj=Z1NJOr>Y18PdcdMsP/=$BB<e`RKC*?pc:h6/'%"8<rE6VK_,Jhn^.&onaM3A]DQ(hd`(j0.qBiU.-JjR+_,?1]9
%fJ(49<FOE:*ucs*:fM7b/XEfBh9m/FJN)X[po1J6MqOKhr8O_fA*=o]-$1ps$lXmHU:]1]FO=P%>+#'To7=R'Lm&<lk[^phBfMNG
%h"'u)r@M,\]nsuP;>jl_(g=1f?ksMr:G[=jJLWcr25YM$m)I#YmSC%'qEPp.\5c7*2eF,offGO_N:WcDB=?EoHdbP0+h"AK(,R[1
%c07>lj3e:;I\!>Z[?[I>L=Ul'iIq<":/[]fQTSN,PGTgsDJ$_j%4:BK=&VEpo/OfN:KFM'HeGA5?Y4U=82tWC"]fTcH?'!2QU53&
%Kjmqqd:tB16/NGq?n/G3<`el]MZhMU.qbjY[)&]KNj3i7iT8[6k`<0SK_JX!pJGZ8HaE"rW`:g_>mor<c55qTEasS%?%?-3p8H_)
%9rT_Wo@!kek4U4fB",_@iVO:p%DEo)F^JS7^M`Uc4r9&9Ln8AE1RaQ8@4ZMDK`[%>*M^=jcug\.VgCe-*md_/`j\cE;rr-J\tOi1
%g&[2Cmt_Tmq>jl]SFLtbrHo)NE&nu\TcGp,i?5M\X3`?h5b1(10g9C-dsr'88o@;j!NhhG)<%?oUQT]Qj6_5s0:rA9)]LmcmCk+/
%Uj.(+-u3M^h&%-MG#QB$<l:g1cm#B)"dp&FZAI?3<4/kBD2=bbh=2sWBlUP(54shR\tl!(lUg_+c*(fGN$94iO/LWk-]e8*W+VMS
%.>jG87\[CP$MAX1<8LA0\_Ho_4YFGjWfm%&$HN>3fgg-mpP[c$1gUUUUsSJI!Od^W5OEiuC;[W34r#Xg7m%:Z2JPYG$)M`@>:3n?
%KF2!<Gqt`\/gKWL_+@J\U@hXP$&)m:\rBKb@6_\)/9^(5cqc'35l,'rZkKI2%`Y>bVV;DWlC'QcB%5G7X4-0Rkd2#G+lM!K-lhJ3
%W$3;$JZV7e0beUtn+7+H(p+7NVG<1e%PX?ZrRM1\3at=IlFNoihH6s2e?;+>@;m/%S)u@k#s"\:JA\94'Sa_gCW3)kV#;f=Aif5C
%io!KV[@2J'U-,p[cki0i7oVs%:Fk^K7oZ&CW!tGM9AsD"Yq?]>l0aH&Q-*T0B(Gfhc$gABY=oufPK1i,YqgU+9HG^Ja3*JJ13orp
%*\3Gp+f$Gd-BFG6j-RmKn_UA.BP!N5\RO3U5G-+XE*%d7LO=E?4(?f/h30S%fJPE/gM!h3l?,gQ9aO1a,STii7hrhal_sG681*2;
%^SgP8T9;l1C^n#p&RU:Gr5;>*o=95YL,.WK2Ylu/CMj!lgi+J>ofr-H<p#.E1k%$9?VBF/6)F*7!&Z?f*s5?'deFl6g*hq&"&Sl%
%)K2KW@se.<!DDJOmN<?aM<;G]JtX![h\&B3XGqGY+;bkYG=urR/^K^Ap`=t^p^sG8X,W_UT`"K`e>,!O$pa3_2LZ'"/Z=['MehA%
%cVkc)QN_uXUc,s+Jc:/mhQsn<guoi/?K\oj*@,i3QHT]!Y3PFTmTj,(AP#qUc0gMiB7K&&+=TpKb=Ql@:%"5BcA=XdJ\baj!209n
%rb8l"?D!I3qY%.mmg_FFI^5OEb4O.iDeH^HBkP*XF(bEsSah1.ks+^s#1GIm^Ok$U(a?J-&F@'6LL1N&MX\($gA\Lh\:<(O_$9V$
%#2m))f5#ETj<OH`[qtFr*<'I*`#\0!K\LK9DHZ[O3E:&J"&mGa?@JmYS2Z>YeG&ISBRU@Ka5DjCmJ?i$*lqo@#Ts)l/Nm#[_ag),
%J%/e/],i%\AF&[sSdacicc88Ei4+.*-G\;c*DMVjk^VY,#(4$5T*^d_BK3^82cpO)LIAJ&-=)AR`1;*Vl?i:ss.eVL5DOHRH=$I6
%n3)'[YP,+`LZ)\^0+K-PJ4I0mrIP,pT/fC14ob@\H1kXQ57'9>EO97@RP>[tN8ZWX^1*%b?]JWT;dY.,E?]HW2K'(Q%j11eCih'J
%/U6Z(@!!dk]nJ_$PA]+k+###1d_tn=n*la\/0dJ9A6*VErYViK(ULc0lc/_h'=rZH/,2HS\?%G]Wkll?"0s+(P(!o`QcY*_n,(]V
%%s?33?0!"g5[j8T3fn<+4h'sAYnV=)g`F"&rgb\>?6'2p3SP=H>=P$fq-V&68*l=4[_ZpqYEGA@P<l@KGG9r2)3hEjBFNd*e,@Pk
%hs3;qNLjS+/0p,Pb\neP<^Ye7BRTXr&'rC[N0>d%mt&1@kLa`6I(8/4*;537@JE%,W2^^1)T5&=kgre(590Z4?Q($P#P"p+lgNd:
%XdkJP1Jo_ElNV=hK\q>.A,.iaN567"c-a#Y6RmQo+9+mC`shFq,L!J9g`_^\",_JDO'6m]?2Dik3=bqr%EE`qVIR,80D;>gn?.7:
%K>F$u+TLj5B#C;_ha4C(Ulq1e*d&Z^f<W/HO7_lObsSF\D!:3S%Ef0qLHW1Kdi-9Jq#ILVp/:QacSLp=Lse2/kJA-E4kI6ka1/p+
%0&FK9qB$`(G[9+gd)J&M-28L_\JNl$GR#>XI5nIiRrIED^s]&uhK:^?-@<PAK5]cuH/J#a%f@>2UMM[%oDst/S8jc=?cZBbLO0:#
%`Yi8kVujiO]C\SSOQ#b/9BJ<E@!S@E+.'Hnr<G>mEWuI`4@%QnU+YEQP;(n!P4B)_WL>A\;EkgFreor(X8Y=ZS%,m*G'!.V$#MV9
%5;0qO=n2Mpnc)b^s$'KQs*5L=ccbg,?AA4G1;'6GiVgCtmshG"s78"YT-aNP`+=0<+5[O=]Ye4gj/$6Ye__`7S7%pj("tX7DfJ+\
%-I@abR:J.@q$rrKW[kSf8N!^ucTS*kMOGO&pI,ib_sKC/85n?]`mElmdt(brXKNIgXdD,BSVC?0]PgSqh-K=;m[t<iq[Fccl_^"*
%q#stJgMB)RF'LA^n&M]Gcc4ufOSn#qC3P\#Pt^1-rfC@(<#ipu"-O,@L3JjVE)%:^lta2A`8Dt/e%Irgnb7JD?YY<;S653M-b?-I
%N;X*CJueFO]cuO>.2FOhnNN.0@B;6l*(;FZa-Cn\E9Eo#eLfhf[XXL>p4`PCD8n<t\:Bd%$_bY$PR]@\PUg$gJa7#l_lM)!41*Lu
%)T.W`KuZR<loF`uSmdU\0#tMZ>.DQ]QhNM9Z!@U_J:HU.<h9_j0<eWM_AbF$Y?AG\WK"BP!M>K4`aC#a2MC,5+Br/pK0/8OCTMJ3
%bOR9@Os(&i_8]Q0diQYtHX.\u/#pqZ[eFo^Pl>LnO>QMkMRtBke>tA3*96Z7*7Qf%f<qo\9>EJhWhG8KqkLYmG;l+&M[uUaELdP_
%0h?i9W!i(4S3]FV\I]i>-I5E<r/\pHZffgsH=e$-b'Ubl#N#$K%RX9D`:+2Aio:21n&D\2pb9,8a=jTT_>/7$W3,T=`jS@L_e3(2
%YW^g:NYDsC`Ri2L=OutOn&!\t"puWY45_Pp#KIdC0d*_=L2ct<LZ?Z8`UZ"EPTTZf=CYOkXe;7XVDqWJ%KuBgQ9r.oj1?43!HEHT
%a;[5n^4"5])PPgS,-rG3'K7*DH#YJAj_ill>K$B@]m3,V[/UGTc1>>Jho,%[KQC8]C*a+?4+46,P?'HP]0%Z(IlaZ?RdL=k,JXnu
%LN%WYg@fF]o!B%W<aJ/5pQdks8$6^`o!OYCCF.CXVWMY?a4EpEe@G!N,>Tg5JY7r&a&[Nm(XS_ACMRcUas&J-';:7^P6;=%k0Lol
%cb`PPE4"O%ok3+EBAMcah<8M-kl4E68=aj#e>n1[e;^gGl:0Wb[/YllOn(fo8Gjna7J6\\O*1=7S.FHs0,tjZd)W`4)L)*hh8Z'd
%3>2AW;,R4Cb)naLW$p73s21*Ho1(9#qR7tFi_QZr$*SsP_8/cf8W\UL.l__1Xtn`n[&JIo<n-X-.PmV\jljb*9mq@nXrOFY]?5R<
%NrG-WOZ'1XV#;har@Ar-rlp-As,>r>iQ-e8'oi]CC?u7\,9p;MU,e1M@?\>7#`\K:N:2AuB.?EM.1B.`Zm6_mNWPIeIAG;$pk9s`
%&QLS(n(Wt5P$qPY>MZ,>mg`O;_EB%1$:gt_o0^s[J5Yn22k05d7U$dI^Mm`*4nf_pcstoW;JWpl)Mrog>CR2Dl=Kg2AGV)Uf=PD!
%5c3EqL;b$'.LiO<Ucei;K9$u(Hu$GWX;bl^@S1KfN3_cEGi,Qp:u)\XYVF@VE;2DQkJQW\`e$nV4,SODr[?%*Q0A5Pf>r'H0q)P6
%$5tRO9ZL?imu[5Zpb^G)ND4d``"F;Or\&UnIA:F6dJn[UdN=n@pJ2Qa-2N&b=@++WO#%9#h\sT->Q1l[B6Xr]l$palmDaOGjaW'0
%Ic-lmr)a?4Ws8!!GkDNT.mE`URr&\Br2:sP3GJ4$Bjc6]FhMSb'59`T?O,u)W=MKog2TQCS4q\LRDd%A7(cL1pZ49XMl/]X1kS_F
%E:-+:bHKU!>@Y&Truu\`J1LuQ(iTnk+l'q_Gb1*p9iO&!mAM)?@q>J)Pl@)8Aq5`Q*tR,.j)1XBVnlgs(XBSVi01qUmBFLSD#*G-
%3M:k_MU+]'^]/-o=`,$+Ti?6_X+q/lX[9/<%39T7Q#>Z`LEZIM?"c,8UrYXj7`fLn7\jB$l(Lj:*]c`_Z2D<fl$M]*oF59icX%K+
%Ckb!V%sfJP/G-])iN,0je_`NUIIugJO\jgZ'9RI&8:L]W5JRnR%8qcW#$q$(jaW'J;#)*oIr]pbI!D4]00$K4-Ot%bi)ic8[M^iG
%1l),2cQ%3cHh?Uk&nq4C5>$WZL2@q+N0I_as')hXqto9:pKHrk>Po;EiBjPI.)#,l-,R(HO+`f0adn%W=AG%5r2&C3>u&#*I]h'D
%Q,@O<l\.eY,b%>D6n1+(c-k\)npLrCq.lrrY>GW:eS^WWNW)H88^iBZNsjeC7q6uQeaY@Y?YGaq_!;BEL>39`ie7RcQY!^te@=Mc
%G@:Q&KU0q&r?ab[\Ei9S2rF)4?f[(I/K$->]74!5[7Q.>n^MRG$/(#5br(7!>Jre)Pq"X%MF6U.R4SZS0=2X$E7%mAkNEg+%!#OF
%mYFH[gAK1e0ZZ(aP"]?\7KBWM6FXdCC@iD0LfUA(HTt&ud]'Ur]d*?ma?5cF35k8&Yh*S)IZo9(WCsh5lq8jOb!*+KlEYq00tY^q
%9F%3a6Br+MAY]KHHfC*ej@?U[C-iE%_^4!@MQH(In&lSPL"-`Sks>BT;&X[YHUf9WKhnC>H?bLaQesqHU[MmZX!))Td&?_ub<`."
%?%*qYTCV,"pFoh[m"bCS9fkVN@4r]Is7o>n@JY'q5:h(%YSoqL2TiNr34A`n)G&4*fZE7m..o'uL:]S)s7hQ)-r@DQ3DQ'Vg4-',
%4K;G/Q%"PEde\:o\^P@)fLp(*j->*n-EG+J*esO\o-H(Q5(@E-?6ekfZ<TN$qAfe0='d?8FrRlj^&AOu^e[nuA#;NgX.+^&kPaE?
%4qfk1$b4pKVeZ6lC<(3,_tgd?p-2)b6*gKTq>9E-o3Na?9;Qc1/k`'/a$Z0iZ$fkj$J%P(;k&m/Uqf9j)>i?t.O59%eFdhWcZ4d5
%P;3&Y`_[mdOSdqQ(Zr3is+`Xfs-5*NrQu#NDg)*Z`20>TZN$kf#!bXAj=Vc)4U/;\Z/'lab5ZVU*WM^%jTjH/T8YE%V**$F/[=TM
%-._+=M!lW"'6UbbZ+CNhr[IC:(R=L)NtBr=.SuX(3EF&N(#2QAlD,[kg_TN(=SDK3`BSndrs,qHU?:&sX+8E3./>bLr,n:UcQqmb
%5;N9)-Y[G::cKaOKSkbK/:qk9*dOE/g_,@\RR_LR@Xf</CZ`sYrF\lKR$4p/glm>2&Z1CaXQ1qS7nVQ5FGCC^35f6_pes0<s*>/U
%i8j+J*:1ukm#U48J#`%2q:EAZ&k5l\TD@+=l\sf%0,u:0a<[4DV#P@BOe8W*+4((XnRj6(s"!?..mHt^s(^!FN-rF-:oZOSKFTO%
%./p4qT7:ACVAk9F2P\t1rLY%B$&[E?T,O&j;H/FaJ1WV$SD[5D[$[l*R)U3_]);j?@T]ME)i?J9&'a%T#R+Gs3L\Q!';t3VJhN#^
%?2,1lO3+-rO-%<p3_mI@I!4.8*uQ,h#Z\88P=*enc2!#6`r?<-KO`XmB?gW%G*`?ZM&@"[D\p7c9a*JVW2B4o4j:G35=,t*&KE66
%Q=G:6:e?!VFM]b%7t=jq7p-sq+P%W+N^(U%r\ma&`mkkP4,o-#Geo(HpMR$O(%N^\ok1SZT9(2Gs-r#Gs!C4>s'3h>-a827roAbt
%LDPbss(/;$DrHAae38b.L6_e]mZO2NiM<^IQJdH_Z[X&*#kO&-:3.6`]&EQXDOn7K8D!%:Vo1ena%r53lL!^n-LK;)R00'KbI5QE
%;eTM[B0._&/,aoc:?8q[,FC.>##E.n8!jWb^Opj-&,uR;j3f2F/R6jGrJL@ELX+Gno5qmAENuTW$`9[[Cj!=S$Ct5?rXat&f@[XI
%0QB%-QT=S??WW[jg_/kc+>dN\_bN^jDKRIpQJ^+iD8hVIY%H[B$ZE1sqt+f\@<:2S3OC-rf/C%qY,=O3,UNB^R\_K#(?>5&XWBBO
%p'6:TV:@6oYGd%+?/^hNj6B0?he:\Z1DChPi`O,5[_NXYPsR;pAbV^qrj(-ue^6`glada%XW-DaN/Hc=rCNG(j9QZAA`^E=\%Q9"
%#M66MrFRh_;%3Y]?H3u/@;B/TWFK3:f$SLXhNHf)m:D'Q//<Md:%p@_m>t^[l]*aK+^WcFl6[Zd0rhZYGi:@]&f>lWm;u0Mp;8M6
%UItPaT1T)Th69V6EG\>nNfosdo"o0I@](u(1gS(5jh8r5i!4p6l_ZI+&GMr6Z3OZ6D9)#P5r6FJ+(d""Vr*mHlKLu+ICS:FD4--6
%Nb1ma[p?l((/TD9Qc^h0gYRO1&]%#4GQh%ifuVQ\f7FVDANdmBWGo+oa#/U'\`0odFeK$C>R9/VTL4+q-;kQ?6qq8"W0PCWRO"]`
%Vo`^?n"eMd@jjg`^kL.Z[dK,aECD87a^Ijrf$l7)58l-N@dFN)KG^ipY%"Z(_/r%Qgh7Er5#A*_`@t9U?7?ZI65iAF`tfm_.NkEF
%'GF,QR`#+TF;o+RAG+k4WBX8%fksTsiQkG&"+AjU'T9+=-VXA5dp*5($`=+`:uXWY!]$jGekib7(<`VlVro=?\Fn?O]I)+E9C^,a
%%*?B%:"+h`Am:#7dVike.)sUK2';o#?Sm9C#s"\hgI(OqcF44m-cG'ZUP`rfOoZ#k'3*`fbrElTMSHkHH@gH$Gb0YF*NOBf5h4;-
%eI5VPLXd"IS"b+&.WdU$j%9I_"geT]J.+Hj1^tm>VC?M+CfV^d#e6%N-9]kPaH3Z]n\dbFeDa4J6?'HAL1@G:JiYdbLSF'3CZ0SE
%@?5(M:]$Q#XaGu34?]eb6]'9S^LaG_f.Bu>EoobZ?=\7A%N`2!(q2;ig=A=ImK@V>&RFnV555Dg.4"5A:-kM\<-:KA8j%MBUNtpB
%Jr8'_'H7WjS:nd9beE%t\es+%mg<CYDWn_eRQ<9dRX9ck_o4HQ3??T!<gLcb_Vn_;l,V/b3R#o0$V,_dNbu'7a$hdH+d4mQPF]''
%$6)janP[+=ma5U,J?YIl^/dOiD?Y-^@B_4=.:Qe/Ku1;L_cZDFG/O)LpIp*$@cg3/^s$5\m6J_%&QSO;nD2)N[hKT!*1,fEke8Bc
%=%JNIh!N\t`[of[$rBqp.a[2%@W9)PdT'8325IGUrFE+*"]l'YJ-]QjQD:.VeQ(([WmANS;61m?:VYTLnd1WmL=AJU!9`%KScsdQ
%AZKBX_iBEt2kHG'U%8OJ0`l\]1`;Pph_STMB<bak1Le#LFp57Lm\iID@lG*cm37s68!C#l>#p.[@(BN+;odH!]ZV?]^dXq#Z^B&j
%=B[-f6</ZVnTSI=46VnOPoYrQdWe;l_r=>'TmUkE+&g$SjnWRo2;"hT4G6^1kS1#%h2[oC3brJ+eD+4QHgXNMl%K?^qaiZddDdEe
%j9k!@kc>dsPN,9/U@bD!l>GTS,MaCO\eM(pKoW`u<itq(LL\S?=$Ld\_/K6I`A5je6DXi:%J^tp#4s"G;o7&:n$#>7aPr_V4s0g`
%BhBot5&mkL0\+#pFI%BL;`Ccb2,u+Ie&KAj+jRF(s7KVMR!fXZ_&R2pln@Ee$Dsq=bXA<r<#<D.q1jaWp^ai<MkpI"[2%&!Nb's:
%S"sNG9emI_Qj@L2Z)QiR=S^hd_hrr;Aqo#iS9.cFTkgrakPnB";3iQ_6Z2gWf=/aLN$B)6G:6go:=p@*nWHLM2g&-#0[a4mSd>A2
%UP?V7a3BSf*4>q0nOS_)`7GXMHMM-8Yod;EQ8E#dqlQOn+LVrb3)uCYlR*G)@?KN"mJkeu(<'Yh%=LkK%c\5WE**@-:/Y?o-T"uM
%M)ubJj$.p$X`0X/f%,Qf'R=ktOnb`1AdB8b\3J>oX.Di]f+6!UOYF#fo^?aqa\9$n7t*(..TQX@b4HZk0t_0Fi,G_X>8"a[4BrM>
%QD>\@&Y*9Pe'mZt)0M#%ptT>(G#SjZ-]"Up+XP0c%5dVjRQ2-DqNk->6p=r<a@kP:Gao[aGPiH+O53^@hrs`';I'sE6VKTXoCr"2
%)3#^2H_64ZA,VV#.uf#'"'tkTfVRBj[XSbR=/nCZEP:1`qH^UEPUl[l@*i\RpebJHK2u@#pY-\m1^h(?(7]dkq)ZUL8*9'48tfIh
%8)E(dk+_CfP[&6Ag*Q$fe^"s+"hlJ4"3=^;7WP74\2r8,CmQXo4C/IKr8Y3<U'@kh^Y`lBBbK:YGfrL=_S<LJ5A69H]2H>i/9`VH
%Z0VD%a7uPs]Qe@'Y17msV9nV3#'NE?g\t)9(<p]T#JCWd@W.NURpX6P\b*X)Wa_`'VJ3*gTbNVG?g/Xf9tior@.U50`+3*>ejl["
%9XNJ*]i</3R\\R-O(=,tSIk)LK_XD-2fR%([j9uqX8<uGr#\uI/&-I=/YMK<K?5jod\,31^]"Ddhk/&c/%l"!Dm5q2BYMflrslR_
%K`5`]r,7F4YPRQlJA;*l1jKU5)?8$a^#mr]l<=0]EZ_L^pX]6qU:'M['2qir0;hgR\2VBU4ZBS/?XeUA<O&Yc`ST=8;uH#eZhs,C
%1,40e6#eaOjg9JRPkdT5f2H`pr["H)hc97+]Sc)?q&0OLO1Gc-D8.sIpFlJVg^;W!q=^IcWhclrn#t\OOLb6]i:1"8(WtfXr;ju!
%s"Z@YAN+Dq/Y3?WQET0e<6C3:CZr.RCGuLdIO2b(jGp6pr3Qn.:P0.L[-h"!Q#>fq>JVK]5]j&q_o(:l:?\A!X+sFX]mcg4pmq.A
%"ibOhd?ThqNX#I-T`<P8W\ODQ_)heo$a&-U:of80gRUXNPFMq$&X,Q[>3NYE\G-uD;^ctnXZ'4Yh<_]qs4p#JiJFGn.?SYK&KbrC
%la6Q,77cj"P(S5<T;4t?@@I&^dgAjKd-VY(Kl/n=6asZN2,ocN+K9E>6aK!pXG+678H*285L?bsAA'WN#bnAKfPjLhUHuY!B_=Ci
%&sLa^e4ZPVl4'^,r#CG0o(Y6;dV>+Tg;H%[DVJOk02W-O-d]%1l4c:ti4[.rTNMQih$7FKLcl.E$M@HY9[^H,i79G2h-VY*ZcYN/
%Tkq9e0,,AM7c-#].&6&kXr^B:$a!bC^&5tD-&\XhPtLidm`e1/A/9a:BC/I`Tmu[Z<jQ'_1f#Wm6*iL*]>2$49Hu4Frq#/B\(@VK
%.6r7tjH6^grhD^-/#-CHf[>2S1Q4EPQRD+QA"FqpNQ!tmQR?d+&utg)M7B84BN7BI,5?hg,1*^Dl8M$Tblpn5(Gm_H`.KMTQfLnZ
%ctn"9F$XIQl0.A%)J72qk:=gE6D%TADjLf*.*WelQu(LTeiThlmUSf@#+qM2ZGk0(Qu3NkHG"%LS#-c/%TfoFZ6t8+3&@pKq5)O;
%BRYVgT>IKrbOTF)5UY50]?hLG0BOLL9$Kh\5N(1qr.C51NI(?LC#Bpd_,n4L1Ln02_iOj3',OiKGCJ8u3uq,fg:pUu*Rl9\InEWK
%bHS7p`uQegD0M0!8g-@]G)%WY$>(;rbT8"K]8bQuMV$`LiL=qsc;%u7RA=MH%)S<SG.GsL]6<dE9.AcPa,3dhr"eU`pSMtA/2`YT
%cN!ZIo!RqFp;;VF\7e"&1mfKS1<&J`;iF=%bUCCf$*bLch61*&*p-B[AjgWKl:8#Lj@?"9q68].;!"WA]@(F)R5!-(afh')Yh=BY
%9R7_>ZYZ9<cf8;`T]C&"l"2JR8<HJl-o/*?M%fiFh)uLd4H*C.TA.>0Z-e%Q5l=*^`+Q2[qbHPO-!l88BNM6S)'!p.abT7j$f.0+
%]CtLmF@NkaoI@eLCn(Qb3VfKaWJ#Kppq'Q`h*17AqYh2@J^hVnKD5;=)kW-CPMObYE;[fuFos*']XBdnp(=mt8ehaHN5r[f\%YYD
%O3%_Z?7^35Ujn/!7\`t#Il;VP>E62)[J2DIFG;\1QVP6MrV_Xd]i(b2qX$?Hej!S'fi+m#qeVPFW8D7m]LM##!INle<9!RHH@sSL
%2J<>?62R`ld>dTZmBU!]2/969cY1m"PA,5L>/n5;pFSItDOg\'cPe[Qn^e@;n)J[-H;`FDd@IIhMfOU0Vi=@:(,bP*HL#u/K>8ZB
%BR`BV26f=)1]@H(l>=6>mjeEIWUoKMUddKcDWo/i"1ta9;mk/:Q^aO`[2gqp?h*M:h]I?H50OPIN3-^-n!H6)@KRtCP;[G*!?U83
%L#V^@PAm<D$0o?`K2S2Egc+lYZ;E-OZJA!YTuLs(Ys0.M,`b)ks&,o;/#gZGesaf<(&iYmq+D/em,'@9JnjuML7d]W>)u^\`qKRa
%_-4N<Z.K#/aM!&O,;RG_V>I66U:K$]2<*\Fg2X%gFf1cc=Jm&#e_`5"\uZU4H-b%36(7rS9$dkb+^_k7XKZm`n3B2Z;mOXZ]*0+6
%luP0dr%4/t&oG6&Mus7j+:=-M[*LaH`2S?!k[2!LrB?R.GR,DT^Fu.<de@9>FuHKs^[bgIP+s)b6_Cj:Hu)5Xj'MB2maiuLaf_nG
%@*qI01X6O'=*jhiZX4)'*-9oWVK$WF`3bZ>`Oj`SY/(?Q";KkVNk4=iDcD@;d]Ur3[0)V=:Np^<`Tt4`49F2VcmjIoAlQT@UA$l5
%Uh;`]B(&gf_tWusMZ@e!O+9bq6AA[N46=:[/P>E6>4a;:;6V;0pBC5g'hQ2C6[c8r7b`6_>j5;'kcq*2Lb3iZCe_4f1kX1T%1bM!
%=nc4+a9des9l#sPb"3%J2m,@XPCM"WVT?Jbg2)0!C/PG8'FU\8M%A.X/$n2R,--1<(jU_/f/aVeo-kbMmUmVQ4-<:*PV<Cj$tRfF
%],:_(qNHTWQYEa$4o/d>bL_4YT>60sqOaf>[.F-8O2$(rB9ulcDQhLN:IK]h[.i#4:d!-Oq1NC4e+s\QKY0Sj8,6T&?/2,u362Qd
%WT.Eh50J8#[9/X?D7!W<4`]4Jh.l]O'0<\k8ec1:a(Da.H3n$3G\Apnm3edOdYOG\bE$5iMlVmp3Hmg2_mDLRab-?[59a=q83RAU
%gTj:)B#/)1\r4o/j7S:Wb7?Y#;[ne6aaADIa#5_A_(oA\0l(SHc.tk@0%]8f$Wg!5qV4q!Q0<,!elQUgn89kkZnS+i']QeDEP@tY
%djp:HXc3EmF(PAhrZKT/PcS+j40W?t_jFJh?KO7H>>f&GWt4a>`7e+eQg!gNb;;n%F[+[S>4)#^[I'1V`0sQFV]4q@V+a!8?[F`_
%IefE:Znf2F($fJ4T6\.H))ngsjD0+WQe]^Wld6.r4ih2nREO*$Eus4YcW$1cil'\c/>m5gSD;sIcdM?AO%0Yf>IdP2^#\Sp/%t^n
%1p]##a=V4nX#(76/,/[\1rrYb0<J20dC`Y^VX",%h7?HR..T3].B32_M7(V(9A'n#h+Ku^*np7%mObbDh?g)hp@Cs5+.I.>,d%L9
%!=e'O018IdP'O?pXrEG&CWT_-/t+h+HAX&toB3Z+A[&[aYrc5u/X6Yrpsk14X8@$"[&PYnXDVP1Br1@(>>@%g2s4],khRAlT:^JJ
%"<r]Qh7?A!Lt.F\7']g]IuUTQX=d_\GO#^]>4,D`A@Jq@7UK1q^WTMe[s(-&ZfWdhV66%a)X6>b/[B],^(=MKUmfm)X.7*#rbNdl
%ZSm6"?#iWoD3ES_("4+&])<1G]-uR>BZ94_mWYE`92jOUMpkdo>B))e=s2?bl6RW`/q[JppD*@MqB3+L=I[KfUGlHe,OjWBHf6;.
%N)H2"1&-gn7W-KL[<@toPO6glfdGIBG-1-C#@Aq-NK*:fQJ&@A],b1[YH=+_%j-$RI>k/?UQk!P6`j7u4pq$O'\%j0;m`PA$o>f#
%bTi<5;sA-;i^Q%sP%U3GBVrARpQdBFk%@SdG^eWlcX*.iO4(#f9Jt^P9>')ae7b56EIIO/$$mi=2q^\YHBBtcP"3(,oAsJnnLTu-
%X08k;>e7MF&e-dk/F0[u*Y)lHhd6&?8,J3k\P/g3-`Q.R>)E;^T\kTu6oQb+DfSGh_Cd*7ch^S^ZebW=rT(tS)k_kn(g#Otf2\Cf
%kU;G^7+n(#Ce]7[gWV(V]7eIWYkGGib7K^c/k&]Uk@&bO7Yr'h>]2>BqeXi1"/Z`D'-u,rr`8T0=(T*KMfr-nEXUF2GZ%[+]?qfY
%%r2fA;2U1GWDgnjb]P,o\i>,[7ebrR+hs0[>dmkhjKiDOC4`8IFcIe-*D+lJfq,TT3^6>B2qmBg3ZN&s01J!pg<.F$MU&#/EF(,A
%Bc8=DG#43^ZIs1PWVu.L8bd>T5eF.6X%L6meJ)lD3-`b5rSq/D\@J'OQoA2jA*XF+TS?C?H'PD?CrWh[,'J(E\gOXu?S(`GRH:?l
%@d:L2ISD\(([^9drG%)`fSfSHFL"R,6S155ZYku)ebVDAG!D<+dJ^YW3[:'Xr3d_qgNBJ.ZPQ]tSjoUip?p9!>b\ZU"b$E8.2qm&
%jS<Vk2qi.%H$XYg[%Ehm2:cY4]7==E%GJG:>3][me&\Y.W=&`,Iri2'#a0mX90dX#8o]qu=F[q&>+W!s@-E<Y<?hVsq0*;7Vs*D@
%Y=eZ'1i9,>61["&J(dW/:S$QF@Vn1IV^>1UU_!1^;X2Nb0ps,R)8iB-(cmX!YDI.2APOj\:f*L^f/A]</aKcI>>U4gk=L(S4Hfqa
%Vq%pAIKI8BPhdp6?)\N>2V"XXoVN/R(qr;R%%B!hJ#8kTe,1Qm.J!Ai$(e<Cf=_dEJ>HdpagG6r11Q_NmI@';7?]THN'B*TN/q?R
%XU^+,a^Hm]BHIO&r=/dd<Ghk[NYs3o_F_b#L>eQC3<Ll!Gl-D-YZ:+.3"5O9:*gG8nPT*X^V@E?N;krR[#,&MOj,%,\NM/c$/)>\
%T(k^p1J.ORf#F!d/24Y='@uoM=H'MMn:m&YJR67>Gp5q^;2VIH]S:oVDuS*f'9GaYT$>:,b9E)2?[e>^eBpK,Dnlp3`#^#k"rct-
%o,@2C7!eA*0_B^<Xiot7"F1\a+3kdaO!`7s9OrPiY.I(@RjjP4A[INC;0:7cd#tfW7chWWklX9`QY^2H2hoQ"m6Q]l"Hcj[;*=R&
%Lh'M7i+W5[pW(DS3R]\4R?641a(^aE+]$CMd2ujf\LbHG\Z1ju4;G:C3T=Cd#qur\+91,TqLjdKZ\uLt/hp]nUH"pH"mq)/Cm"Cl
%mH:&NY#fZ&`Al'[VIk/r5\u2QRES=`Er*G7DEL$.ZDEns3GI4L5).`Tr]&[>qBF<[%X/JdNCH$hC8Mc)CeC>hGUIMj1jUD:Qnk5B
%QsXg\otfleAoI,i'qA1eZ'%4dAW@E!LMd^LD):^^NXc`acsl*5Bg/]=SoX5gVor#$>7+=_3n_s0flB\9BsBp:WMYQ\9P#rj4`n6e
%J_D,(6e]',fq!O*M!fkd"i[YNJ=U;T?'T<^]+1tPH7d]S4ug5K!\lZ2jNF#Os%;eONQ?eoW.-OHq*sH)\V!)@`\9Cj=H>kk%kkg+
%`brf.g[7+mcb?o,e(&>n4kq3[L0ac("WeY%HP+m'?"P`9k%TK>0m/Yh>tgg5hY5]'L=WRUO=D*I0_]LA]m+/Pfd[CZLVO#1F-e$&
%g9rW&qe+$Go0$Q0&lZoI6VK\$3@%0TKNRm.?n9bA[9JY#BUE4Qn/g-&;.f-*[R,"XZA/!AM1.&L[lRGVa,-r;LSOh9Ih9N!c+D,1
%/"(<&U@`d!9eDoR*bgK&YiCJEB8[M!f8K/fE^76^R82B&_CL<0j.jWrpMlX@**OKXEY,'4jg](#K!L!<i?@lgXbVZBI%FD?b-+MC
%9=6ho8W-Pc/UJ<.Ha.T%pP[M2Chj%@e7P7Q>OpCobjqlQQ1fE#-cZP!*nRTN/ujQig#U7`rW47RpYbUFGKJX3;ll<OnQ=K5`1'uE
%UIo`HBMUb27fT6=VI=ktbU'jVqRNkOE4O(8X=B^?:C$sL9%?N%"?Jd4Upa4A+Jl#0kIpB+3nunES^kE@s5;+GM`6eS>0ANE\l65q
%\])XQ6)s76!hcB1Mp0^c0)$1hf.g>iYuZ6c,q_ufF"?os^-U>sH"M41kj!AkNpTq\\%DFrEnYlS$"l2-;dY\XHMa9NCEbdZ-BW@-
%?V.OebYrsC`W8aU`Y:#5X6E*W+ZTE3]00/;ZZ#*50#*MX#kWHV-=cJ#Yte'=?B^k[W-0!i5q[2+ge[?DX(Ai-l[+EK9_m4AnlTj>
%MSf0`-'R2WQGtB)%WB9s_E__f0%\@5b0sV7-.V_ZEiL!A<N4GpMgZ0U7ZMb=DVo(K+(fEtrE;2NQ?l[&9j$675178VAsS83m(`hU
%ZGkpp`i*OfqYQRGI+O&?fAJnsQNs)ZW'-JAXYi7GaZ^[Z+3A"qL$kp0ZDFL?QS]JJ'2jON[e(*cnb).bg?/39B'6RARkcY"ilRD'
%j')$G/;h5QCNf%#9"h1bDU<rs#%i9DZZEan#S6!\RujdZb>1I^5+A%`k8pPaXts'%=fQ2^/7iu@+q*c.%(-)I(U_p4iXBI7[5sMT
%:DhV)Z[1?K7MeKNB^`03S]B5IiaSeBpP7V'AZg_UIm8,aL,RB;Z&r\j@:eVFCX)7a2n>I14a=,1<uUZX#NY2&-$,L?mDVY\)eiqS
%BpdHJp?g[KXY(Bk_p[ht=Hh:X6f`smDC^LMeOF_]IA;so1t?-nbh[3Np(uo>mb(Z"ms&QX8%.NP0&<!kEOD&q9ODUr0o0'2k_=#t
%V1(M&Ptnsqgd\b',u,/g`'$Xr5FJ_cE>$ba+kC^QgM<5>^,^:sh1^6D%VMg;VfoX+2.I8K)b8$$`_Ljn,OsK<pQ!t(NcS$&<g-$(
%ftG==WY9Kt?/4!H'&Ap2J;-fEXo%ZtVWp8qB5]9u\M97.ce\CQnc^);PO84o,)A/"1;4RDJ)1X^-aYdU!j&]40(__?ik-PCB1^9,
%AUj8*;a'B]85$)Dik%@E9.01D\TFQh\imC&mNe@bQfR3Sai3G]`S"!0\!H7`clp(b4dB-[XOIl+Vu+Q7bR)0`bdY[Z7D*_Is6a-g
%s#8ZTg/dh'27d45D8Y5Ch5jr[X/2$2bk@.X59V(nSkE<fcN\sG2oP,,'0e(h&hAa`0*0Cir](Wj\Q7E9h=u$fQK/T9oh+psA-qCf
%bOs#qP=P%u&Z!MAd3,dod-G8/MRi(WA7kP*3:cntom3uR^1Wmu.5GNh2s`f3WXGWpN*5`1cB^9:ZS'4L9(b%aMEANKVleWWGV@I8
%IctFEm;@:Qh`>:<CCq89Y&`dlVEP\=0><"X?m0qK?*E&-eT4+*ba3WfCLae>IYT.Yk-fAOe+<HBbq8:H0+i`k6!IT*.VfP#,R2Y)
%N9HUboYlN?D0Au6a][>D:*-A`SYGZ!Qc.TIB0%H*Sp*T;b0'fP._VYtZ#OYlP@eY""=cd00FYF"<$-/7fgI&BQ.p4g94j*:Nl<4V
%kV]!>ncq0YL[3u24'>ka?l5X;T)DM.$fk89[?ZBC::Bh30)R;`*T;HkD*AR45B!at8Y"+18O_CXSIfR".G<-lf?>MK4)\HcV)B;V
%+h;=Q3mm$ZUZZYcf6;.V!sBf(FJ!;OM&D=1gk)IiA\qUj5]rU"`2[TYJ$-Um`PH^c8N!!.Vm/3G^hEgJ?Ha1M[J?JFmrg/@K4M;b
%5tti-`?$=Ng>;:2QB'hESceX@nBi;^2a#;h[PT;u.FJNHF'8B^He\^KgHOHVE-eqg3]BRVrNd?P8/&Xf"4H)[3%m7Gq8CZ_^!&s,
%k+b>^LY-8,2@`8!pL\+&>^XuH1lOZqAR_d0MZb'mn_WgY$Qs!U/Ua"/T%LhH2gRF.:f0Q%@TMe&-]r140Sdi2l'4-XfC`>/*h1?)
%'W,OjXK,M_BlE\@.&=n($bN[%[!M`*>HP!N^!`uX,Jg'4hHnmKA.?4TWf3t'6..B/C&n^YlM'G:YY@l#>?S'<.c#)5gg82U#N"rc
%bfi)gEkJAHSt,=u/siLKZf_R+jfd?>E+I1W5a64Q4ERQbPHo@nbV(8UD/,!2O^XVIZ_bLfA($CVVr0%^0d\.Be>f='QZ?56SDR]+
%en04i?,%se+U"9,XI\PcRD$;A.DP:5rYk^A>[]7S=M6pHO464I.b`<TM3S"a$^osg-[FE&01Su^i@<65>YSf'G'2gDku;;YG4d`o
%*8ak2O+S4rG5:CpHDY;3WO8S=>siG@/S6G*>("Mqj[q.(qRXgN;kA;UF^!+N3KE9slNq>V_j_5DPP__P0=TQkWcr%r@`+/g9"A1f
%>L<e9a/NZE4kmQZ\SBOGoM`[*T58QC:`SPfmK[n$i0`]c.FqZ`1O(X+$a/t^P&a!kbHX]DrUY_RX'"]`H>]P%#OReY@US*58A>u%
%f00V!L=`c-i_B]qV_4lQ-I9u>ZQ].7Qc/JZ:&ag+,g?Wf5@'Gsl6s?AZ?Fk,,Z:%:WVNs.b[P(m['k(iQV,t)46UUcJ_@9WqL6j_
%eFsa"FoAW,A#2f>UV1No?#/&bKJnG2aV<Ecb3`s&ZMf^nG<,O_S'*k[7eYf@ISRI%G!2PtP;ke<I<Ln#IdZXAc?#-IC-,W4&MnP@
%M);<bc:O6&p@1!5$2FW-\U!3"R@A$Zg9.9290F%uJ]>T*/U<ZH/W.$N_WEmJcjLP9Xf8&tqRnGSI^<3_H!/JK2m0%\m,iN1iBQ"g
%f8odT:X\o(3L8?4VD$!F!(Au[S'EVPV/36Xn]arn5_>+,]'si1"#6gD/Y6OuTpcr=q?G6`G*t/B?8CW^iUdLJd^i<tc-NJ%$W#)A
%ajt)!3;9e!Y<aT)1:uMF1.9LTr:+3<k@j`lXB_;4Bf;6HlT5`s\U%ae6%TsQ?\CnY$g.9(b4PYAFtK--@l/NDF\)A'9-d/C]khCm
%S%:YQlc_?Og"RCBG)8bYE8*iW5Q6a,X-`[uo)EP8G6<ln^WZ*u/)T'O\8[B'Gkkl[],M*)V<ZfJ/gfu>"@gG"gnVNJ"D@7/rF<Bj
%*cE+/RgoCfi8d&Gf\qW-%be%.WSVL,<\j&L>Op@ZGK6U/DP$j4'C[(fi8$U0+;6B$+PNV!*I/Agj3t]u?:SYa`p3Y#C42lEEM6Fd
%q;Ub<f@IR=inJ<K_;cu:@<#JM"VL`m8niK&G-_#08WaTI:'9ZT(=)25k"qaU$2*VLOF*?Ce>r4-l!ET*HDMAA'n-0V(0Vk47YK[j
%3#AY2.eN4L\@:##Bd=`\mr?D?Dbn)+dd_8C6)[-Z&SedA'tLi5L?u:%ml!(-o"@kM&!fO=Yhqa)VA/=)d8?kUC@F7V6E"%Kn,7u&
%<XPB-0tt;jV`-$SJacDb_l#nXS]R#MnVDc!_Ra"n,1Ph1#-A\h?S;>/S9j0b4dWa>c50^`]g^&*KNqQ8(QHS@hcOlDfh(5Qc.cQ/
%s02G\Yi&_X;P0S"p?$SM-&VPs<Be46?qRr,f"]J"qnl?+T..9t^X+GH\t>U?qa)6JLMaC/[+LHk6P[+`_dLSqqj1+)cMI1r,@!7W
%U*QAG[_"1[Fn$L&QRm:6`Bo'hn6;_NIKRaU3]fJeU9W<`Q+o3*X`!+,:F>qK(*Xq+`cUZZq56ate5"n(<d`M_O4N``BmCZJL4B-[
%",t!?UW__>4HkWpc7k+t+BDm$Ic)W@Y<;_eE9)S%ag[b!^A5I3cG!QQiVWdV0Kpd%3:mk*qrhXIEDq<hq.H,V)leUVGJ>:S%iFi'
%^/Xpb>@3t[p"j]'Y5-i2(J"![Pa-/:9:+[X=KFGFX&$DPGmG9%59!r"pV@f@?;L6^4@#,XMo00I\:oJ@rQ88kn60WC)U7`\GHS0?
%"n$1'L:&6JL+.*X]_4ZJ^R>fnY65BsI-PV4#=U1\]@B+L%t035,8qsq[7OFL"PlN3J+Oqo:F10XdXOe\9St!FLe^.Uq#f4uI\3\?
%'oOp.[su-[9WbRRs+%[fh#-jTj#-Xi[*KG;lhp+V9&rX+CB=iVWK"8/Bg:OGE&?#`So?c/r1h\&Y&p]Zs!4+0JU$[3g9@\!4EsEa
%dfX:BE&]puNd"E_iTlI44gTOCmB#FWZeb:R^3VKHYHK"%_qds34D/K&-<?->IA`2h\GP)G\fT@BF'JO4hgbYh*0*-m_VrK0WGm)j
%G7&V1F$G$DqsZg,9NXr0:Nf_61"4+6B1_F'etaCo-hP`L]p22h[Nn=`FYkcc(\_h[qCt4\IqG<F41k9/Q2aPBp?F"(4Hb]MDFuGS
%Zc%>?m1[0#58L-Cq-)31I]h,&a?';_6fN)LSm8!S(=?m^FDLU3:o@YnLNktODY25?nL()HB&]_n*rUnor%sbCFPlTN3W=tKT/POA
%n=r8K3+bd`(VBUCS;fnG$1i;l+IB7fYQ$4m7&QV.SgdUK[EKa2fCq3?p!e$K3-k5KS'>MCM]0uiiBCJ9=h2M6NS2P45_!1A0g1Yt
%k7re"Vo*X/Z_JUUR@2eEjlo)prVcK$c:g/?`,;=sc=5Ba=uI?n/_=>gU>D?clhDQ.BIr+feQp&2QQ$5>4It^LFf)'%lf]PqnN+L1
%Br^cO%g7ArG`AV%YXD!BoOR-,Lp4ilP<-g(gA9W6>hr"Xhjc#hbF<RPm..O"(bN[AD\(7>`li[OY'm^fQ+@W)WL&n@;W@)TOU?'W
%YhLDl)gW!UTKMu>Q@*Q$#._.scB/Zb,oeu$?AW8)p/R=tXCucAG:<*O60\.$QX=q1_U4?lf5dk?g0O63r+0\PZsN2ZilHgVfpc_/
%`?jO*]kZ'$?>nBc0mjI3GC&"6fqPc/8FBbZ=(sgiUT'W%Em)#Y^[ob*VOhOkZc/&kR<&m)R6'#tZ1m"pr#f7*VQsBJ/#d]%3-88E
%e(Coe4d.odfGIstG=@!oB)XqU*Dp>*l/g?/GcJFT*"HU6%:\133ZR#3m/tfdGJPJ]pJ^%liRM.WEQ)'kAs]Pk9jHpg\Aqt*\V7Jo
%r%9U3c"NgfWS)M1"-\N'_GbOM/)f`hb[G`cM\a4:(.n&OqN2(5QsW_!_@)jXgMeF-Dhf/'<o`0&a]'b&FRa;^Nnn9=_sq1e&mh^u
%f#,YrnOZjM=d?3Th4G#>K6%V_kLOgo@VPZ^CoNKOYamc#_bSM0%^2CX+2Y(T&sauZ5'L^p2`>i?_ODA-[;_k:7`23j`Cr7>48g#A
%c?3d:\`:.eG^Hl?(Z%1;9S`@OK4K5A0`)\Ngl+_>a)b];Hr<Wr_YK`),CHY!SVJj&cVrf'p/3ero=0h'Abb]Yg^6992"/:WBBE+%
%G]B/_Q`iG+iG*XJ5?r+CqVdc$ANTh$Er?bk+2t_+Dl(XdE.:I6SdOp###j!AeA9X>C3jc4Tmh,J'hrTr;mG3Ge!+lL=ImmjK3&t'
%b'[OKS[&dh(T(57>'Emao7aTO7/-Op.U>9`:ZWYkN2`BFS`\H$h=f7G;>J"p3c1IqVU#&TB2dChF``sd:/*n6_iIa8<uSZ]\t_tW
%cDcHJl-B6,kLeY-0`Cfg0g1fjc:lP%S+Z#:UNed>bDYb%<PPu?brIpJD8-j4dq_a[e`k$:o?DC>E;+$l40R_BpFfn)ViU:AN9R\3
%p"8p0FC]jshW[^.(QJmZkt3Q-3rQ/ITpROi3_e5(HZR<_bgb$PF_6(O?(6[7Ct30_e\1,`1OT0_j4lf3c"u`h_DCG83^9sQ-Y"q;
%d7\QCFK)`5EuA?<R^lY:31_S#9]+,p&,,9E02K9t9W,W?T+.t6OQE+*]/n`>N=P+>B%=dcCKC(kdFkqF\W,:,;U*O*ePGJ:#CGd!
%ft8%qb[+*<Y@\lF05n2YkD#@PIXF2Jm8Q`^F5_/UR%&RST?P:;?9<4_275KSEie-C,oXl/)J3k[>jT]U>eRN,cK:GDkAF&'MK8rt
%@Ed7Ok3ZD(EuCSh`$1Q>F1ocLI&sW$2/caTa6-N"<q#0LHYm8Ak9s]/5JGn)SA/kkFQOYLon3(?\;nkLmdE9`pKnOm%'hS%Yo[5-
%=.QAqiJ<bQok1nOONjn6/KBk4>W?N\k8*LR$DiIIDJ+HmR8Usi5IEEbR86gTOl^]W3+D:DDaZK*HL])->G`2sNk^f'=1d_?aAY15
%(MR]U@@5,?dl&"T1N1[[ptY9/U:AO^/T,GF08nT]9P*a)Y$G/BDH@kpMp9,pi_/>2G-TqR]T#B)[JQn7[i_BGgJc()k"2OA&!o&r
%kiKW\2d2U6bsn<9m!,m%F_];X9+-g0W?j.*F1ARmCYpaUHb%/E;5lLfFFAY?09r.$m*]\>jYAaE3dZ_&AiHG=CF,:*,nJlc@scI8
%4*G&hl*7.ubCeG?r3RLae8CLq1j+-V(N[Q-4AkQTR/#OW_I`XSIr-N=fK7uN2g8KNjf)O6D)lcc>$SMZe)k[sYl1eR[*mQmDpEPK
%QAHX,jgX9*U9_"b>Z::dkndp[/EE&Orpd@9;9N2o`=q',=u<HE]<d%D(ohm!=]X/GOh/,&:_)"H[\]rl2;M;;gW(,alrt^6C$Y@f
%D53Y=C4#3#C[Gjk^87)FGtWM=T:XXZR=%XD7c[-:Rnr5DZ'F%nn"#l"rk)UENN()GKn_=Jqrt&a^1PV-]@YFZj(`S2DcElPH:C]&
%l']qc`P1SA>#XQa3^%8M0-<X,;QQa_DbH"S=BnO:$<qr4(:hq8?C[SK+%<HFckLEDopiF7B*c\;Pd+fJg3VD`Z7\&B(TZ>.03Z%E
%N6T2dV7j=Nh6H_&.DrmQ=?X#1H\lBJqC&$t>%R0T8^1O_S<Ic;c$?>5OQ>/39.Pp[l][U!gf0ZjfB1Z,Ff!qtBq2<cf[9!.?F.=[
%UpkBFREU%sodk1!^KSA,SR:b#Pfkpq@G4sZUn8TAa7[m+>/@q2XM%VPT%7D@fBMsf`H#MfYY[!T5@2S#X`nq_I:Hu,YIh'2.Get_
%mOdjC4Ph'."ZAE$cJ3"_Q@@NB3:,L?*d.1;2[d0mb\"=_E"^>a>K_l!V9^O[$a\e[q=USJ$pWO^,k]#k,FL,jf92K.bA-Tn^/.VM
%YJ!&rS<Ld)C9OCS;\,k0ku=Qb6KKsC5?u^e8Srr%SaZ;se(*I/7:t[s:sN05LV:q";*:G\^T8e=SYq*fG'Ru#O\OMeOmMmL314V7
%^0^!b0;!U%e`FB+406)bkDDe.hH"kIZG'nim"_^6a<?;k\t:PpCqW7^h/1-a95eI']._o?p$B]llXI3/ZZNXbZ'1,7Sp/Iu9Bi![
%B</W`)/+f;)jT[ODZ6_d^K\IOD!W_nh=gQnD]UP)-nKF1GrGNr$[28jJ,N6^M9Z"sHua5AIW>74&5g=]#9/Y%qV^_QTcH7n<l9\i
%X&_GYMX9`hV)`sKpptX83Jnp><f]!HMKX)'2-;ncbJ)1BC\>R:n]p:Qi:sSWcp%io<sL*rY!$oJj=JO'0IPDLLn$(K+"O7YqQk<j
%@4uPj^)im7k*IT>kP;7Adpi=8.+1*`:YeIcm'FsEZf@=)UU+.=>!-.C>tglgDYI2WDt8aKoBt;sbD#brY$N*t2\%I?F4oa"81KZ6
%1mc<fp&+C#St3IZ<]@<c@f-0#l6s6JH<#;P-s]?8Aut=BrH[r0r`6@D_M(JPAu35VH#pF$d_:"O7eUcNC2`Wc:Tlq:Q61u'GEMPr
%pb"_a\@K4%FuJd+pMn\kmoL$$MYH9]q>L3a=jq[N$=`kj.""sABNU2UO7Di5m,QBCC-@lclHuMcYqpVs\($bBLYI9W0XF]j.r6Ob
%/djUpj*Y:>F*pkj4Ztt]?Bd+'MquA3BurR*?dLL'Hr%F-[J+hOA[,3]/t\AmDY`tb2Gu8Q'shqnIZpcge#TBHIJ^-G4hA9E<*uX3
%]r#TA:@0GopK2e,[DR.cUpXAj?@KSd2da/PL2e#4D4I-"gbr>kqf#6$`GoVT3I_inII>U.emFrXB)1O4PI+YBc^dCD/ULqcY6Sh(
%FmA77j#+*-IslalEkAIL"_YQ7SQG8`V.F5O]k#+ZmG2XXZ<],$XE?A]BY&8TIsgOgUZ#Jsk08A/0]+L,$<,cb*j9Z!nb\74j.`s3
%Mp,4mdE:pia>Qlo%9tuj.A+W'IS3qiE`o;h%b`>?4n^?_][QbX?)Q&QJ(uGZ.KhD?rMYoHX&O"]O5#Z?#0_/s^Q.(Zj\7I:pn`!b
%B_EC9AgKH\#L_mji]"="\f[4Yql8p4^<;CLF8d6UQn0%=rr+i6UlKj"gN#XUS?lheo=H?Bqo->MD1PoHe4=8f`An,hB[R^%c?D%;
%Q&oh\8?M!R.Z`*WgqWY)Ld'hqi^s&hp$:N82Sb@uriiW(gUbMaTf7Z%I:C$"P1G;]b:dLt_WGdfO8m!3JJJ2`jB'+TY?h"t9X%kk
%WY.>uh;0ZUo&&]jl/2MQ>ADq)oNo`S<a7@Y-U_j^/W@1NL-\XgH<)mTA=H%n<@jV)WYnlSiIl%'Nbb)WL18$IieCq.Tb>&>X)UQC
%JD+13<G`skCKfM6/:]9'Y1kkJX6O[p;]GiF4`79SamZ8)F>`_Y;#V6?9hXH`29!MGVG=l_JF'dT)M15/*Hs'P_Rl*YijttSJC8DF
%9fOX[3BSW"^AD^Y.Z,"nLmS=nc+'beFr4:8M6n&&Tudo;<X@Lfa$rFM#\3-haKh>Git1c9e$3R)6L_L>))hiKQt[./=F,d85VuDR
%(8el+cQ,0%H!@jP.%>m[:@lH*6E"nE<+p0H0&j=BfHF\'END>BdR/D=>o5E4Y\=lM#s)fN^M@5gKK_\]\4MJ`6:BH9cnkKc`?7TX
%9M@ON>+-$qe#SoP2`+gX(f"?"[*CuMETA2J,2t(L3Fk/XO]FamSM4)e`Y`dX'fT-eKh?GBJ[!*!di9o*.qI(c>/\04W#jPJ=pVc4
%/7n(W/b'SJ-abbjQ7<_[P:0(_D$oPq27XH!;_o8!;odMXH"KC$'8cCD6-Eb799>^AD(&H+TP'-s!#(h;J9V^edaA\BC>^2QTN?r%
%FlHH@@8>2U"+pg*M*/XP_'q4D79JMSS_-Te/S7K\hc)P6+n;[d=)H05GY9EKD,Y!WF[Ab'P]_m$:8%h;W"V++=s*#XY1X/.,MM/C
%m0'.dB`,$.`pr#+q(>MH]E5@dKJ#TAkRMYcJS^6dJSl?FgG'P@`s'1n%uc@k9ZRK*/KitJ6T$J1*O;b3UX2AY85^9m94b]P$@KKk
%"&pS_"cni@%g6PWEq?8?=s9I3=#!fcOJ(V9o),ZY`%?L]J>e`N8U_jILtg9^\o,G,Jb?M9RA3<hdoD#)J4Ni$=bBbHZjhj2\AFsD
%V56up6tAWn0oLiZ;in&T&TSeca/2p/e9#HhOJkF)D.!iVeHmOq."hr,/7K;t/h@$WNcqj+e%non<uM9V@RH/5NI$d,d6oM5Dn;&!
%dOGnBd?)q<<$U?l.q$c7TpS3A778C"KRSPa`>juZZ<0&Ke3TQ:1:2(teO_Pn[rFiX!$MA_9IE51`:7,YK$\<RW>Q.Y&lt\9abkXV
%#-G:C=G3851K/"FL.uJN6:VSb<Ji*eA1IMV4g]i:;i$I2AlEVU'4MOtJ55G;j[)<&!!X`?>"D7JiCE/S?qh2>3[)s!*FXL<<RQf$
%7#=4&5V/c>+_$WfZWJXa,(o"`I[f!IVY)7q-92,M,+tWkqU$9,\]R'u;K+mLerMLPe.[CUfFg&P;28[`(eN.@jQ_FMP#>]i6\f2M
%_u-0n8I7BePak,9Qj,.NAZO#T6p`Y+KTnn581G+6+^QL,@nK*T4D$rg*23NaF-E[0N3WU6+qbNTlNFLafL[3A3>>XM.0i7Qdcf%&
%2@X8[\g$0IJ?H=k/<ue>8ALOCKa9W&(6XZ=L;u>B#uR.*a9F/n$:N=NTSa!iaI`oW5g#_UQ'AS2.I\A%R"\bV*?p5TYtC;+CkJTJ
%_:6r'<B(s*EA:$8Gmr1(8qT9_373omP^_OK?((eA$S7oY==eTV72ke5lV''N3Zo!u>MUG/+D"%/l"C\t8kLe$kS@9i6&&cndt#g;
%&nlk\\7"!,7Vo/hau17W6Z.S'&NMb="TfUR_E`DUNQtQtLG]9lg'S$MkqU+3*,/9%5hdE%mLtZtP"`(>:5q:[HXoJE!Ys-.`!QXQ
%#YW"H5YFCP_NQ*VU,TkmE0Lb?2P6A**#Dmq*YZ^a4V8ceiUAIZ/#4UA0i0%7n=:PWfUIi*[!jWZOKeJ4QcfVXaOFWS_=O\+YmY2)
%Ui."C5*fST7-m[kP84KJ13.ub3<\KK"E:_Al;X$tM++kl@Wk8&L8g:s6rVH+W)6H(7&:H@V%nPV-='!&B!6jj_UULZ.1&9c+RrEF
%dFf;^pr%hha<G&9/0,j8.9Ie,X22816TAe;+F?mRT/7%J:ABaC#mb%&ck=Q:1dg)]c6"K2@T$eUJTkf>&oqGr:_aJ@!M>CLD((Ds
%/HuNY%UQ@j#_:n)0'P]^2$NL[BMDrR_q0RE+>4""-@3"Bjm!0\g681k*JbU/YaWO1-;"mE)PIHfj@Pq<X/s3e2b4Morp]SPfAQu5
%&'P&GT;@W>K1G"]o-89j8PC7en1_s3d9Q!t?aTTIaok?A],JVJ+h3^_qs),7E;iOUJ[PlWf5c@lO.l,\%8I6ZIYn4uVA.['G[GDf
%Cr?<#O\`2`OAj)2Yu&il*L2tV"C2iS8[<poB.d//:!)]Gn(<AT+V8cis7)$^3H$B0%:DGS-?fPUR4@#"o%jWeQ/-\HgJF`gAXpk*
%:^+pUK&U`$Fn!&>32$\c#05J,#Ln@2,f9/bYeqs&6M)n0/"IS^5_*E4)@X-tUeC2,*+hpVdI:X'YSFof_iA+^>i17T0]@;pa`T`$
%8?'3jProuhXp]t<U!?A7ClK/f*!)c^'TE,B@#ml8V;DdoS4k9&U^8%Y9bZdqbX3'j^6PJ-@ggCuC+)GS9Du-aN3J,(M"QJI)A-:'
%koPENcI/?riH>N2!$*s+k#_CphQ%1h)HBiY2tA`F1St]hTb7@p;CRD&5UCRTLaHN7jO*%E>Wa?)VWO!6OXt*"s1pK9!6c5]8>A/U
%N$\[<:dDNBp0Sr8.P)Z'M-r3(Se1$PNZe50%Tl,c\q2bl$%iXE[6]1<JT8g(%T\bF!Gpe8,=mSDV0#OY6i?,WnYljI"4hEN3[M&_
%WS'Am\tT\O$e"LTj1r&FD,-P@AE*upC0E6S]^$+o'KEq,TiJNA2@1jo-m;,WJ.<L)/0#KD<8p??5qTu+Jb)450i8MI%oFR&#^ss<
%XY/:9!JTrLq66`JAD-+,&%rhdIK:YEM=D.Y2Y^9c8"JH_U&l$u:gE<W+:@9hRr,h^B0[Vj@6!gP(de%q"ml`bFF7['PNV^<#7-s:
%Ap9\2"X2cWe[#fN&JNO8aCuhi7'MR:OJX/&(ICM[R+i7L.?:d>KVur/"`KnH5\CHtb#uf*8^Yss#uSOi`^.\H]0SL:TNF`MOM_Jg
%/`3tgOX/gZ35dE_(,d1p2\L0%.lc=7M^)=qZZ\'sB)iZ;JH04GRnAd&A-_+0W'^kXXN!A=PD:F=GKK_-#t%$EkI:Y<<eY$W:4s'N
%Mb$8a%Dq7fA<_HtdtJ\OF<[!pc3>J&Rn*PcL&B^3Z&L]BJkUhMTf2cO!%A8-$qMDP$PKcb9+]Wq7jZlP*e8egd3Z77dRbEi6!7)N
%9o-Ts-`q8W-<Cc#WLgcfn5bAt2/$?cR0aJ`oct*C2E'q`//#^3WN;fp<AfHXJEjScINH*^VM(+TVpL_E!3q81EA<Q>J-I]8]a7*A
%AA$(aO9%.k5X7c&JDQ*s!$WN@L3QEpmsl%$ALH(?7UIGB6(X-D,&P[*2n@->&q%-0\WIDDCf4\Xm%I95WV,1@e,$gOW6H;k!I)e#
%>H_J'/>PBJ(EtE0/SRXUqjPGEAD(34Y3JE)=@8AH0u=q$HO,4WFpt>g20'AkX,+WG/b9Q8r,I7/((.!Z$IN.;$g#]@LhY$i_6=i`
%F/7.p/F+cE,fL7?6/f=jOAqYoj+[kQ&0T8j_"b_W)@-EFeWJ'Aek'Fa!K[V;Rp7Nh0dg-16r'NB-'91:F*n\H,>h"-N-"\%\K"^]
%,)iQ&OL/GoMqnd;D0#p'JWjQ[%meKrPG&<b)$r#tcBsb!<hV1pd[N!PgPBBsJ\W!0"]*>dMQ*+4UGi=REnCVjVECpa;p,Y/]F+Ql
%Tm&aUp1dRFS=%$nfOM)tcqnrq'0_$4[R5e/6&$Qi7h2REI1R>09j1FsYTR%Yd)`UpGpuFFUB*,n3gj7XfaL+mdEn^;V')S?A^8=8
%POp[ZPc-`#"qrsul:EnaLq$p8J1@F<8Ve6@[_Zq)<+LVI7YHrkC?Pp=/IdGh<uW]h8S\>[d\KE%6HPK<WJ%S.V40efJJ=$=+]HK&
%8mJ><M[6GY_8GE"1]*,U=%.GQEX*aH<4YC1\MJDrV^\/EnkdGne"f>rNf:sA@$2HP1Y=`n!_hH+3AGC!02dQf/kN+]dCt-+J^ctl
%FU,3(i/f&^B-DoPfbYfFk)O69i"4QqUB6H$C$C`;,dkplMo6k\+pB+R&CI4%DWY1m_MMban218'`+#TP\d]B6Yb7osk%?EAGN=..
%W&?1`bIBfN!t]fi;KS&H#=qisp*cr6+OBW8,m=Z;,;j*X7>%8O0\F3.mKF_=(.=tEV5]=\g>K.!:&kR=N[0b/.h$pUJ9E9$,0)t2
%(1uVJX/3L3N3&>*J;]!kLZ9rN7V+^lk<X%iB$f6T!i,eWi(Rd3/OM5n"iL0N@6UY2BP/U.9ibEXm8BaRF3:#kh3#uCF_&QE3bH4"
%.VUH5mYHR5p;tFJ8NVNY`9hG3QB[nu:/%.rN0_Q)'Nc?sj5hgI"@TLSYTXQ5Adm\?$Qr_oe=gl"7]J&)<EOeR.M,c+-upjKMDUPb
%:a$sCBaY`Q_$tJg.Q/Fq)W4.bRK<*b6$ZHf/2g!ZgItp/g[UN?/J',A1GIePF%JZ1SUt)S('>Jn0\MbSf\(uu'u<RXWZ+b`JoCb\
%'\uc67!hgB'X68\*ebd_?C0nRPA<0`l`uZHen"EKabDWBUsi.bE"IE;AGG*(Eeo8Fj(+[26jYRf\Z"#c_6YF;U8EHSO%^7?+<'[[
%8Dl"=23?t=8m4cpZf*5se<"O7^f54&#E5<jY#peYArVX\KKB0LF(Gb^O<Xp#6"8!BD4*_Q1(1S3O_,)"?'VZ(*-'#b*ZA+^-uc#<
%d!EdrRp6^r@b>]I),M2%@DUmD_3]n;cLI*9]!%P4gKP&'QRBiYbe)g[-MUk%N3`(F+A8r_Z<-G'+B0dp`C9XLoc#Fh+BbJGVnoXB
%Ji/:@8o-.cs%$.#Q5?(;Ka2jH'Rm:pWCU=\^b\DQC"dH0BZ!j>Jj<@-QCP'0STGmtTIi$hJ[FqDoo\RK3,jKOKtSDuolQ[O/VGef
%HBJ"O<\G^I#Z;5OCS\Z5"-jfqk$eKR%*SaO+Ht!24>`tP\qH&''K+VYMbAjer"[.FA9\OD'Y)Mg_BXRK5p9"bg)]`Q`-ieZW-_I/
%/eo'[!E(qe#S>*!]D,bo$4/9Z0"H$-QS'jJ6*(3NX?]@?FIt-XNJ]>%r<@j=7N&3r&/;"neqG`WSdo!gfP'iUh#aLO9<3nnKcCj9
%W0;N3M#98'JfMVEC9Aq=8uR@t.9AhJaD#N<PSt0?'[G=?.'lbpjU.Tr]C7?\=4%&KJL)1kYQQ):Z!i`/a`iRNclEI$N[\7P<)@\q
%6KqKJ:.Wj'9I`HW3YX+b=q6NhK!k5Zm`=N1'Dto8eQ=4I$_AUsYDiOB23TJe5p57J=C35)<1$^d/41Y-7'c$tC99aYd,_Kk=-p=;
%<T8rg'B47g,!4(Q-DY::E^=i722,`FB:aj^V8qg8OTa)<kaP8"b]fJd=28quGJ9O(Ou#][W,c?PjP.5.-M-g=O($3M\W,g:eKiR9
%$4d.6.AITaZZlW!$\i]a,pShb&_5lr-!:E5A&n>9"\2&'hJnd8N2OWI20pSK^^1km,B,Ppd(l[hUMD!N&PN2JOZOm<G!qi&Ld5Ot
%,R@W]GaM%b.7.bS"/TY?GVRF1Q*u6<$3gm@K.IM7'?-cG00irTT)f,2r%<@eG(St`"\jgTYu"PJ6]ISrn,UD=0;LC7gT%=m)f`<k
%&8PGp=^*5tUe*e.JlE&>-"F6_=:`ZWEbdF7#>:eb":Mt=DSm$)_7;mmJ5Fj'm>1ZUL;e<G@Chk=_6mI*VAbm3.nqRiNWPUm_b.dr
%>QB3hN+[+`%:l_?ECNZl;pkZ.,A2)6SMZ]\61i@&bj24W\D`rm)hK$W]""?;Kkq+YCZmOjK9O>kX2@Rdfk>=O%AdbQPn;0VI+j=4
%)DkuZbmhdO9_AKWDNlVZ%brgFL5'Sj-]ms#aA<_J8p-Me'ljXTgffYo&4K+3$pHM!9Os2a"rRW#T0tA+O\'[\/LETH,#D"lK"JmK
%$kgZ-i!^72k5o3*)fgOM'fc#Fagp8ZZB:.m+'6K6\M]&5oHroLBm\JP\ZdOt//PkTUt[0g.+ND/#R)jO@;'LS`j<07VW3<D19[@g
%HE3PqJb*D]+Z->jF1G#d<"fi[)A)?]h[faFhaOZ3MlJ+U(MnLb'Ve!@ChQ?V)]bb&'kWLhf=8j6n3JVp4#T8W]BNRda&3"mQlB6J
%aF1<=KZ$8rRR$_cA?%o(=QGk7d(qbQN866cq77a)bu6Oo&D>K[dBT64i<h%-(MG)_@!@S46V\sW(`-q?\,UD&8]WFiTV`p>CtJrC
%SJe5&88Sa&fQ.`G+I'962dp@9dDra,p*ObXMp#MH%:oIuDMHV,QHh`P^_LSh[T&T-C]hsDWt^>;ImV-4r#]QA%:fsiZbZPD;Po3(
%dQmY`MmWa[JB_I)`MOGb6%bC#g`83h8Kuh(']+r(1DQks0J5?BihS3/UPWB?**Le1GcLp<+;.J)"3\qL=>$s2Z:Kpp'Dq?rmtd&Z
%dj28)&B4&B'U0RTBkWq[@Dqtr)hGhBi!iI=DhO+])`)I;*ZKJ4$P^!V45i@'L=32nl[hT+jRrf^m)]j0-!_iXP0RA8B-[r,m?7B;
%)4L'g0iN\_=2GMWDZF<I_RKTg]:tD:Q<<G#&co$(c6n31&[8/uWe3*k"@J!h!JZ>D,5-4g/KG^f_.MpIn'Z_DF=`Epnci<-nt@Wp
%k2^9Ngonf4+KTif\aMmQY[T]^^(1sX9I/%D0F4,adZNB!E(=b:?YmP6jAmPSPt7S%hFJ=iKMYFKh>Je`rX"gR;)p"j7:Lr*Vf^2A
%ltMtZ-873JQ3bT,JX3cZ7IJ;c_?egk^bkC%PP#B(1.P3;$J9<bm!EK[=,lE0W_#Qt"GnkN&2&t#&2Wa_A3N7epecWoESu4%De(#V
%/Jt@+NL=1q(J@,U+p:I^YHJ.C:.%ssh/q]rTbOHrjoW_jMp&(Pe+2ciS:`%7gg\gr,)N'f/@#-ZM(R4TG_[PP#)Z3RFGDlE04.4t
%eST%,Ki(>Uc\DJ'68r'(<[#MG)d!6CZNdn7R#:X#n42PJD&b=p!ehnE7=qo]G3de<N#_oKGTR![$49>nJVZf=oLL2M56VU$#BXTg
%)k>D/ln!0<`F27E_t"aS2$tSe%dCW?8U%ZcA]&m4Np"?e)ba'P/89;n-t60;X.2lb8C=tIKFLtN9]s=X,7A'UA9bG8g`#1^qlah,
%@t-/0k90A-bA833@-Q?+0[,,sBq#5FP)8""7!6%)OuKub#hI(;Pl`CY_*(+"(p#pZ)a]Fdf?)F&HcK_^<1@S)lqDEjk=A&KA47ML
%+'9[gDI"%QEUF?4ZJb+/%[Oo*10caCCC[:N?Q[8prf[I.:.9AI".jmAQUtcLkVtuJF9PagA[U>_=m)lEJK9YR6\Laah9Z2W?kldB
%LGT%BiYL_OM2NA\ZJbGF.#r>2d"0Kl?1eS8cPo#]Th&dXJ4=F-Q&l*)LNggd"Z0OV<7T4m^U(7L[:II`F'kSaaH"%OUkf`tlR/-E
%,(lT)DHPOS;]HUZ_,iB<ai88fpqAImT:P^eb>=NdXGkg%^XeobN\P.?@KQPH]]as/5^(*JZ`U,Le=[*&WBRi0#Ra>ede/L5c_;8H
%:VM\_rIh=6ZXJK$#,P,.,ATHMfOpb>?b&jO#"_'1B&3TVJi7`Qe;BM''aY.d>aBH2(=J*flh>)saLW<`=hco.?g_GlpCQ-4baIVu
%NbT!PiVVITs2C<H1*oV`HgYFCq]ue`m6mPa+rA&>k-!KO6LTgs]XE1NIZa(9nEQ^H3jcBG"W?]*JJaXZkE(lg6R%j,aXMFIbAFt7
%6#mTU("5!Mk[Oqn)JLtom6cp$rQ253VIiJ4jtP;mC)9?!qss_PYaUY?!Src)qBo?U0]-ce!57EjBkVmDJHn'/A!)47dDc>ERd:-"
%Mb#7LkHf1\W`@C'#%D.UFi\r]7P\!W(YK/KC@2CI00gkF!B*8tI7g\*$X-h4'i0_:B,ET*E2A<pq8%%ScbHEO0XT"lU\o?9b5J%H
%`JXqa0J+E.+,Th(;d\2ikC'CoQDW.jkIl,1TT"W2<6iM+JoHJ[pG0)B.7t"LOcuNkZLS$IN0fT-F8>bX"Y`8Q?V:V&+p*;t_Wq]&
%hd'#e_gB>5dT&YuOPiWP/N,gR4iK^iD!k;+\aS8E&iO[!-(+!Yj,HQ:NT^kami0%Y^)^9TISPN,-MM'%+LdV*PLH0&OAuclPn2KI
%[W34",Q#d/r+.lbS)oUN$;>IE%ulh@>]@H[M=OZ!14gbCbu5r)4[XpSoQu(ISD\Poh)SWs/-$%i:m;!H33StZ'12.&Y_"@*6ld+K
%7i0Z77CA?_5Sq,#?3#!`oG!2R;I$;PHc?8^k34hiZ_3ga`,R!N8EFXQq6o&n>-eVT.Ut0L)AEC)X9h>PF7N@*jVl;+3kEZ3d6D0-
%+.M2h]O_AEi3oe0guY)lZS-i\<=$]he:Mq;b=XLXX;1)`J0q*B#a^WB#\Kur+HKul9XY(8k;_c_6pqmG%%7D/"=$"3MSL#aifOA&
%-nXL(Gc:N'M:)l4A0UJZCs=BO5D4[C4=Wgq*"L7[giF*M_JX'g[Y[T0-C"arW#%@7NDs!cX!JR2-U;Dh)+<"&7.K"#^@qc\'5FO7
%k8H"@eQP/K;A,hk\KU_:N"5o!j>d$9=Mi"ElCt,b4\*"(2l.,#ke2hj$$:/.JE0XSaFpo8&;'BFN4<CbYIn4%5P4%p^tU+Q-0B/Q
%,XrZPODL.NJL9hSrVfp5NHl:Y7MmtT?,A<8=%"KUW%`ahX%hO4qgoYgNVj:MH,7A.'+dKj4XfPSUOKKK@f;WMEG,)Zhj1=>a@mc@
%(Vp!i-U@lW/)3&RS6_9_^q`'2QX>+Y;gH5pgOgVCZkI+MJgp(bJ64_t-uu,(7D&n&+BU..(%d]Qj?X"7PUTi3%)\35GH[Hf:0oI]
%HD_t++Vqfp"?_^l6@)o(',k\pmm&OLYB3%SHWZ?I_Y8iVj\i-MnolWH5]L*OOTSk^h_KMU4YkieY9:6'E4:Mcme,fiQpt%p59u#W
%%(4<&E$0fV+RAI4X#sEuE;09T5n7P8>M[8h=gSMMXK!;lU3-5nq7D^(![S2mL14mM:tponqugRbh0O)4&,;qJb*<*@GBh]S&m,;*
%ds$W-;m:`%kS\nF'#>"7EfQnsdaudMrUiqI2P-(U&mD6'nd_6h$Eh^kpCXpkpNu_MB+8iAi&Tf'D]=-8IK%sH#Ha1--D0irTUObF
%*G<9JG?D%1d"'nQ!uFmE)^C?GT:qPeLDanJ[8mq_b>Ia<@)9C/VBn^SHQ-qngV+As*[/hl5tq"@\G,Aa!4Q515>V)3=jL@j1EX'%
%i"OV\U!nTR6psA5?X.L)LILSlPgPaim^GRppBb,DU[LR7n*Y>cIGYt>a=lD<j70_jT:sl_I5u1?W5EpW&-^>ZEq`d/eNNHS+mOKZ
%Wl-7?+p1*g:?L4XL4hDm`A$Kdlh$a+)[\k4O@0S;aMB/>h4G/+n2$aRB[;TdhMBS@#rAQC(H+7`+o#js7<3Ec[m0skE>@l?;(IaU
%NooViW",uWlaYDq<s-1C$k4S(CY(rE3dWbI!RU:kJV_,6)u=VHg0\buh*^:D.CS^apY<Z5F?9qrT@(+kOOI.Zfk]JXkTft2+QYh+
%=@;OApUfJ:>=S>6_D!`dOWSO?Bj"J88En2<:idm9-4h<-A3'#fV:hR=fV4B$glN[6S"ZGChW8V3B8Cs`U$O\p2nTsQF/C3^,tZC!
%mbX?42R+Q1Hiets!Mmue">%/^F&M&mMi7O2hqAqXJ7SJXodb6;`R4AI).b5R$X`3k)#Lc11W6[$BR-Q&%2k&-i:V.uO8DV&pPV,O
%kRgRk<9umP/2]P"%P2UHkWg\:msEWI\$hFN[J(+JEp\5N\M$JOHqWnOQJIr^[lq3Uois(C%6EK##Cu$f,N&3BL+4!RQQ5)<L5R!_
%mH=.X^HZD&$n90K7W=2B6NUfjPgJq=rHW'B49'S5LO<4ncb(!b)nlirIdVF#XcIcq!e&WWhI29h`+V*"H]>`M[7pVhqppiB,BWeR
%ph@XlTspZkh/T'TRS%FD<Hpk17;9?@o5jDLA<5a9IEri.aR?7eS+45O1\CV!mgiT_M_lo-dTYMMH7g6i7D(eVTOuhZMQP!K3alNj
%_H.3"8OZ6d8-NoiMPIhp)ZoEjX"=)'_8,aYkD92b).;R]-qGYI>6LYW5c(Wk8r@dKL#6Ei`b,k=PO\fUp#rd`]V+]!h(Bk6?u3Wb
%#9LKAUDY@]LFqsl.86"7n-%dVOHrrKlC8\#&3-<i,P)bUW:1;rp)9Kd_]"A(jG[')mi2+]Hi2)4>ELWU>h6U&geNG9<0.`Z&J;#[
%:[t.NT7gdfa2,Q"o`t7G&A8<?]rf7*/qDPM2'N;/Hs`";Wj^pr#F'htAeN@rm-nKj[>+bV;Bg/%&O`U8pI0iC2DYXWc5J1f\+H97
%\7fQ5Y.LW97BOjjEH2S`Pq;!KLs8JSM.@e.BBXek$PJt+8:GQZT!)iBA)O(N#f9f<P6q,oD(6)rV?t31O]^;sS"4%m\-8%p>6m42
%l_F1JfEaYoWb>]G3ANoEN!jr'cRAuD=RRXZ,@tFD!?b=L/MOrUD-VOG_'^mnI$HNT0lL*Oea^H.m4^r^okXmiq%qZZ">7J6W<Mlf
%ma2R5KV!QcY>L(NCOh0n6n3-P5!oN,(Z^;9V[XMA=S)?0?]J><7&4Zg&2_*A=U!`@?,BLCd@Z3^a.3RSkIqFSj;4/Qih&.,*3,Y.
%Enm23YU#ccD,>FDWM)8h2J]f1@dnX_le1pE$VQk_T;gGBa>urb90'Whn#+nc`a*2bq*Dk&9g3l\Q>ImCW<22\$sm56*N3n9nW+?6
%#.3P2lFl*m^93kB+&nq.`(.Ca%;jA=rd*+;58MV82eoT=6p:kpZ?th8l_lqel/"#T!0/`)hZ+0!G2;Wd3(q/D;I>b"7].:.!5)Bj
%E6CqGO`O^]?c:m!#m4$a;nhR#7QHSe+ti)#pNOpimkY\KF=*\'1"q>1;SJo(Wat"*TBZF1LL4;&mK0J_/Q<#8;0";W!j3gII1XuX
%I].Kqk^:Bu[h7'Tk?_04mEn8;Usq)Me"E9=]"Wsn!:pYB3Ttcd-CuBa7B+@(gDuN8h$uX(phA'5YbNNuf@s=B\E-Ss)6Tfj,:iL%
%Lnq/CXf`QXG$EJFPRO^Zn+ar6TmV+@UhAnD>Bg%*p$oNYKYQ^)IJ_"^I=ea*9]2p=`V.NuG6r1pDkddof:.,(]67/iTDLf>Y8PjO
%la7m'&d;W,pP\(_;B.T;&&'s$:&PjgAq`JCN+OKW,`2RRd+,I@%Cmgobh?tS1:6cRVk<j,h"j9edna,i-g=rD9ahA(!@DE>UKO*O
%+&Xu((b/_Q3;X\\8bMpW8d9^h65(-1Id.VKW6sGO-:>Db#V^hm\4X3/ip=h@1o+S\7VEZ#iC<k,S=eJY_S0fbGoT4Q.V?TSqAaUq
%Z7/%,+&8E2?([gOGV3k#_)8OWBX,I"qmincXn1d4;d/H7"(RSQ6CU/BC+qO1OM31!(REpe?#/LG(+7/L#OC'eO_ame>@.kDE&"?`
%O<-USPs6;j*VKa>_S3'_3?fUDq?I^T0k'*+1r#%0MUGI9?!V0#?C?sBr+7:#(l9'/BhDo!!=;$D=<[<H`Y159L-egQ[a#hH":$`Y
%6q_a[OnH`@6PdG,XrXr/lL2R^3l.is357o7?kFI&<Y1!oYu_;MnY!];KhK=d,+2=^=ul/?1L<.($Pe^i_GrVcTF,0sf!D'crD2+S
%C%A'D%,(W@(m&R"hAkoar'uLE1Q9Bp^'L6f`e[p0pd=kN7FX@H7#mLO1_mWXW;??'??4(46l[A(%BWs4.h)$S_g9JQ>Z\$1E;9P;
%cCaTK=,;mli6<1rAXOGW!&1uX!etlOZ`)@FbE+V:*hc'pjk@V`3!gt20T/2/80Mi&M!^CV$W-Lj[2>'Y00(WN]2:t?)1\YZ(55$=
%NfRcrL(hu3O!rb;[1Yq6>SW(,B*@Du%a:nE2O%3.n(EbT/$<eO`N`,(@$gWCE_dC@Zb&I)>;@U<OeIFk;l?F'I>gQdS#![n[De=Q
%/k;B6eo07Em%IKt]_P!HK0gSbRs`$Mn<"^;2]78JO/-4*BKD%G[h/jLpVLXDIM>VB&eoJYm@afWqjB/&J.WGIi;K[g.W3k'"#\'S
%Q_-u*cR,C&;5*7Qq<c-0C\q.AGsjSEf;8@QcAE1F-e)AW%]7LMc/"q)mYOn,EpgpT''1B7qD(rj%jc+VQ!8Pr_A7cIYbuZj9g;^L
%WCW[Xj"a9:kDR0"^I\3ioV/@&e<e/g7Eq-k(XB9]r5-l8G7I+N]Q>d5)lo6`<%CDE_m;[Kinp>%8,XWApW)<U3\lI#W6dcO^F#SR
%1n!ACN9s!?.Zp;1m">@Zq;"t\kUGf6`P,)M8TtrSX&ap9O=675$<hm`Bs*odmaI4Z*m2[o2gppE#XbN$W674UMYX(ri]#[1Ae3L,
%.]o!^L?Ag+R&3cN!Ul`%HTH8gZjb)JbN]3)dUKQ`"a%f\@]ErtGJ7QQ/O[<*00s4GCq@PHLcUarn8B1]iG_^T8!Ul:E^WR8A,Ae'
%(oDF7abM$"MY)`.,V14r`9,;/0olQnfVenNR5H$uB^IZ1_X['bMfq_6_utFLd?Y.SEP"97?8bN+<GY'h'n6E>SN+VtB%fVKg8>-f
%-OU5GJ1cQ/Q(#Gra/)?!ro\j21YBno87HUpXfNTaAmnoImt<61M+>h]`0$<&;l`JV]#?I?GJ7PMl7!5Pi?c[.W)$5]1N__uYT`>;
%hM=X8)*3\)5QL"kHjn%No%J[%0op4rceJNZ1XQ#*))(a$jDRU91qTKRUYQ*]KFOC<fCu!@03h2<acqa%H!S4#(),?mZ&pj$+:;TS
%4]5a<Or76hS(9p$\?;=cb)#s.]#/d*&\_%RR3R_?:5e-,k8noM_.p<NmO3/#VXJ!)o%[SFpZItLF:K$I(rFBY@^9\Gp_tHU8-ne)
%8T<9iH>2BU<3uF$JVpJG(66prc5H:OHatEGV.81h;Z@LmAO06K'[B)#9$!R=&TA>@::7!QO?([.S2k2b>R_&*[Zs_N_6OB@<<GFJ
%2Dp2/32S!0/GVnK!2K;\gPbhGc6nP5R:ikC8QNVQJuZ\/-9(Bd'@[dD0JmhG._CjX():Mlh84aj">9)n,HR@A*oP+6U3iWF*a&r;
%Bkl1OA>@,i#t\PhW@4iKFMKq+F?S.I1./R[Z:0a*KV<Q'I2T@I1N;.bYQ7)@G&CJo+gnqXeZPci)lLZ[8jNllpF$]Saf.Pp4g(j\
%'WG5%3a&_5J.>osk<+pC`28O?;BBZ26On>'Ln]Gj/p?MOeK7r4aHK&^7tT4g+tR2eR-W\XlMD;M^ZORE7?D;!)u^qC1BN;0G6s-g
%9HQAaZZ"+LC?Fd72G"7,Q&Li+W9>*[6UkS*Ro+r^2d<g&0jACoK]B67P?J$e5?-')R.L2XioALALDfcPO)/Q/9@W6OKK:$"(!_[,
%M70/!Cs8YjFRF/=)UY4,j9HoCjq1BQHB"+m05HND&L2GA(N"3n_>I\J./f_G)L(ab8j^/VHS#crR;9XMOmhEkFHp"6Vk=D'O(U=.
%Ch;b)3AW>7P"5H@%KJr\Y[A8KN*DD'c'V@Ofd"F<4!4VONj<)b4f5%AMZr"73ssIbZ8X_LenD]h'uR/b)SQN\QV;iW=]5ch!0l3W
%dR2:dB4ueE*85]uT?qtL'eYFj=$.XJn@c$7!T"R-o0Pi2*GLL'e"61?c:j/6SUeXATtn/-4&oV23_[ra#U,H_a&\7Vm)274>DTL6
%l\2u:i^n%:<c@\U?Grsj2ot+#XuMllLgQ"iI#n,H;@R50BMg_+e=%gTnaI$b6/=Zkh@iJ7PRB@_@!,DG4Sa(eg/MemjY68=i].J;
%J0g@Y8L]AR8.*Mh^5L\n%_AFD#L$C!Sf/]PorSX[6]4%J$1[<NNF47$HdFFhq)AA(f/&I-k@$TucEiCE!*=8/k0AdH9Z&D:GG/Eq
%C">>MV_1gRftWCW?W["Iqd,[=>`sU\#?47^gJIo4[!oo4KS#`X(fNb>Z&+j&@3ML5^)replk6q[aZos"C3drB3\12gH<i91>1UB&
%5rHqI7\_$d<>p7PP*$?0+6>jO;SmQufB%nVmZ^PkZP"F45_R9/WnBoq&l2/:Sbaq$'u3!P,Kot;P<UF.`EAMVCZIiq*o;8d\C27A
%?`3p>IuK^(]N&Pt-`sGQU\kQ\fG,2NA.FtE+CbZW8Bk.m9[jAQoX5FBNYlYrc`V)_C38[#eME&!\6f4UiE1QITM!()Nm!C;@bm^+
%HP_O#=:"U#eOq!=-KrQQGfA&@PlADLPrQ!&q[cqK+c"/a&ebL@k[bfL/P@ph)PbNj'6CpRO)rLu#fd&:$^o]cAR9d#T-GDA7hO*+
%,ffgP+'X#XS8e,n8.omk"0I8\aY.6l56W-NWAs%H`,$\.]OF1c?:,gNk5+c"k_pdc@Z;$@'a!U(@OEUe/+9_q-:Vo$"i4c-g1+oE
%C3*1r`dMh)Zd+db>3*OjfgX^_qgHVR"OrRTC31KjEU/+:$a9*+p",P@9K)?PbRD4XEQUCB^h!.'65YCY^Xo3to]W<YBC2#9!@J/X
%lgott(;tfGo-(DqUFQ$N=9&.SH9r!e?\qiV0*/&C=+:Dj^V[tFg/4%nUF)^oiZQ(a*K/I&kiQX$7$OC:WQes[b;?kFZ$I'G4]FhY
%Z@gLK/"%84]R?(NMmf0$UC,CoUGiQfYQF5Q*J6N6_0^\m[#F7\;VT?a:VEMo%YPZjP>ABI-mCd4om$<ff1N[7^+OD[=!n1?5(+Pu
%e7V`P9s_'/l(ohJD)eeiZ/pRgqQc33:MHlpf5C5J54`UYb8M8KXsCqe'6n,/k#U8]cXrm,'gFh;-,!.'e#jiG)fgY-L^?r_4MLeU
%Mm'X4$_I?f`<I1.=&I!c1\dB.S"EnTUeeT:,nJ2r+]ZA8"FM\&3dGRWnN]4$`->Bpio_kg"\kVuPStqm$&moX+9>q!T$KQ"pH=Pa
%</o)D%(D`ZHcqq22dhM`X!ZTM#(fu>1a5q7'oU;AR(Gkh)U!.5OsD6[cJgl:J6Lr"[s?N@"]6EKnts$Y2sNM73n[H]k'^Prlnf_=
%ia0K<JctTA0Mi#$hq%s>+K<d*IG[\+J"0[5Gc)jd$'\\>lkPY[W)Oe9!NU=mUb\_aA.eRLWog`lF-r"Ge.*Lslf<IYDPU)apsbK"
%PYbF$BL\pVM@X:=N-ombQT?-_pu&p/`nk?>!CrE9ono?R>7>B21^kCL<9\FBK]FL?E[2X^bI3)O'+G^EBCi'RBQ_f:+&<ZQQ$$L!
%-_m+&7S/2N*)fkFgciBGGn')h6eLBgbF<ktL),JX!!-l<E"kll_k7!)c)b33Lfo5GB`8??quZ';8T=*_=QI9nOO0S@knF^pIL?j&
%]#;99&Z;W=!6!76/(D4Oh3[MjAqO#QqKR1SBc_ihj19`/A#q4(e;1'Rr?B)Tn`INC^/_P"R/R.JpamZU29,/E.]L4ET8_^"BS&53
%RW&Om\%Jc#DQBB?hmf?$;gSsU]6Z/un8&h#%f.CILcT*COUkG01Fj?mArNEt1=D#g;gsHb&j"?\^Nm7tA/L6=0&l3I(61;\>tO='
%!j_`i_'YR=`>fS-cL?^B,#]E]VGZP`]\=XhHbj7VnV,pZY]t.O/prZOH)NfBD?VDdC7fIop?]tH"a#Xq1q[rV1/&%HdG-3I<)3H*
%PH2SfRjAc5nF"]+5Pkqeij.WA%:-KI](\FK/h`N5jE_9'[X8RIM\]A_QPm-F=;D+"hG$+F<@B3u&ej$!O]m8.[*E(?:,'WR9Z\5,
%%u;]6hWCD(>WUY;)L=EH#so6Zek=2):ehst_e1V$/>"mu_98DN4L7sdg!h1<<!@,!o_V^a0RA*ZWY(6Ig1g514o*b-gSdKErks1#
%5JPNm?UGp3kLpAE?Q4;bT>p3[^)jc?h#fN#DT2T6=u-(XNX7$+]OH[W;Y'4c)[D?i!3Wp::/HV%BM;7%6SI><m0=@=dAQC[4L?82
%RhpZ8#FJS(c+5&<FUWD;V!llX;GR8qLASQ!F`4It^\ALU?9mWW.MYnr>8gihM6F^KHa"5Roq<EM,FkWkWq;tg'!6lc55"@D#0M+=
%>:XWXW5(pWCt/85a?*Y,ic*cY.'g/*@X_3AhRt;J"B?OJ!,5h(MRD018mF%re.r*I]MU-:[T<hR'G",l`=3JHAdI>P99a8!g!:(V
%,P0"R^']4WKJ&O?Q_k^Gr48'Zb%cF\Qg=%"OTln4r2#MM5Z-7G0p*if<)B$Z'oP!.c@K1o&]fZe]fp1**+OQW$PRT(f,7i1Y,&C6
%]um85\dBeM,b-Cr-$?J]7G7Y*X'G,'3R.8nGPa`]\Icch,Y(f\0LKg(`HfI$Z2f>-i]Sp9cEZR@O(p1a_1)'acU+i`BqoE?C[nG)
%Aen[;3f,3A,:n&8(:K*g`64t,T&jl)nuG8TPEoc$Q)is4eGE9#DE@g+rV_Z]$Epc/ms9"98cb=@UZ9A\/&Y]Jl"p'=Rtr*nhr,gG
%Bhi6<31XCP8:Lk#md&U\mdRP>Jr-I3e%;d67`(WX8#fFASAco)2Q+pRY0YHbMV2:)ZF::H0Y6+imH\3HI.1-lMF<fBOM#l+]3VCB
%UCIm#(g1.+=l/k#L-EJl=92$c;224j=204PlZ$u4=O*M;\]>MBKMNB)8;^`K%e]"Bq";+%T:q=1ba/Ls[ggHqXMVZ"mH\1F?Dc++
%:ro;U<1PRR)KXt0CG\D(=&-L"pH<<5oNODNT=/MmQ%&_`f7VZ7>'<UZ.<%<kq>-aE84$7M%Q/%F:BRW+I@m3ocq/*PppM>5lWWaA
%p[u&Bqa227UAksV@_G!q'A70N+[t<>4lEJ]Du2^cp&:b=pDS1q(%h+\^)jbT(YrJ&pm:j:X-1pR3uQ@#R\<k31f;0)mJ@=B$12S8
%mi+#mc1^Pf^)XUW#VFdP1][OGa:!Fi!5Pd(8(%lukuM$RcX!.d@2K^*qp-3Jn2;/3rS6#Bf(mDWfh0%gJ&?"8EL"jANB4H6`@%&2
%nSe:g6QuMsh$)XoZuYUKHi;aOj5u#r:-<sq#1cG^`Uu4AJBQdt:e?iQ[NHA*T!PpY?aBK66Q`T)fenfbglS5F9gBmi6_i8IcVRWH
%G6P6i)etL7*]cAjCck?\=m38YBFPX.fO:Q7f]a/^+3O2;HE:7%c^N^>%Xl8c[&]Pngi.!hb73LdiNKGo.T&%@gIikL3i%tngi%1n
%lFJ@U7NIWpZm:gncLfib2=qLKi#^Uj1[7g:l.<Wjp3EGZS-D:3Ce#,;27D(Rc_)L<;.-n=^ijXC5!pF^UYX/=5<!+D]uTHj^)Zd%
%FqBT+P,\Q1rYA+#\gomqNZ;cTB7l$9m;pV*cpn@099IA442%NSgC_.@Zd&aKMSk3FPh)Qk;0/g5c>-D:[qYRKA_,?WE2e09L])VU
%Kb8Ed1)J\95)alu+qPqhm]e*&O8dV\8,+iR%f<[`Uga_-Qc<boMh#MXVZhkUCdfJ*RGQ#Y([>jlp5j6#(\76VT9\GqK8\#bD5C47
%*l5"An54BjF-8IqHZWuXZUHTWo2eCN@9"SDIJ6JJXX3j5Np`[:=uL!&=Ujh4L[6&VO\:NRCT,'6,T`O]aWa"28]uENV\@X"5m6Z`
%EcKeamb^2GSX>rgV?GU5W'%l[0,"e[U)5)i9te!KA.VeW/tHFMFjc[M]\s2['SJ_=.s]1QlMZlrGf8*pgmlg_05g8L0tL5[%UHnT
%bPuM$d3*IJgTfH0H0fkR5b>h-S3PG^!(JoU!U9@4Bju+KcN4E+ekSAA?<<nGIq>q.abWeS.RBS9Ou'7/o3-bmT*.dg@DaU2:s-*J
%o4[u&6/%`l_HpdkETl.d/rt!FdqooYQD`<U\"YTJ9]_&L+R="h3@%@Mlq@[ufTa=`0^^GC9j6#k8>)c<l@[jNh/0KbmF(p"'R*SH
%FJi;q@qrOj5QWSf,c4qHFU/?7HHkLFFf%CJ'nfTe<Kh<,N%sU,.<))D(aXqT460^3o2ru>Bs1qgCG"i7'heUcfW[k_[0s'\^pVqh
%3h`L'W@oU-]38B4.ZQQmD5^p=Jl_qM=3@;l<nS.IC)(Wr/R91)oq.Vu6Bg/e+Mm`>bmd1^gN(a`.2^_q\?(O$7$]S\R2Y&*@IkGa
%K_k=%1e?J^VEgg+3pM[7+EtNcXk.C=47uNm<SOq:V8+C2NgI1jZIuI]VumMo-s,U<D"f=:(VsMU'Y!_7;Oil[m5WXp[+'&6BiEFU
%ps1sKg@[Ju87K(aVDrCQgIk)Ldq@l0,M*p0lPM<:6X,ldMAl*ZCosiV<8T*IZ/O)?2E0Y]cFIf7cXquR\PnTES9Q;o&N(W"^h$fA
%U'p@e%tPA:]s`eNP<59ZQ7n=0nQYT-]pMLE6LQ(dBr*$d7N<WR';jU6O"&9@R#1Xp)?a8k-`8s]Gr2"-/l=?R-K%E2$[I+mp%7%W
%)?a?`)bn:eg<"1$?MK>LqTu]d`7k/R#/-e[2<(PUg^)uB=32Fcoep,[-S%E5YWV@,lid26YDrM-n4,er)hA58Z/\7MS5.L_H5k>i
%3S%[CB909!3`tO,("d!iUskd&rogC$/o=)rT\G2@-,M=4jGLo!an>WMkbiK;ImC)UT8/1lnNB'9@tr7,Qb:ZtY#k=XplStNZA>/^
%ehf#0e?Xf?hXpm@B<:j:.i(W\,+OW10]Z#/03S-&kPDOY4k`cYoeXu"/>43j=JLB4lfc'Wk2%7Q9mA,U.t2*\q2N;[1;2rimDOMh
%3M96Za5D,LgMli!84:-R^9kV$]ZW4E942+NaMq99LA1`hi*hJ*7q=".O4\gI(s$F-2L%/oLq;obb>T=H=1k*0%>4EE0)H5/pU^JL
%4$O-8DY7t8)?L/h4dA^[6\T"@E:<7EcS'IRM_<ldA)r=]jP^MQothDulponJ;3fL&kp1q`i*+)W4$nj:(*SKc+FDAKJ2XG>Eo>h&
%kaNA;083c$+I8V_flE;2WZGbE.b[E\K73F^PGaKZ(V,'5]\QTlI#Q,A0PX)p?-n`'Z0XR^rVX8k/uNB*mpX76UX%I"W]^VljbM[@
%fD$+-Su6ec[/EmCQl?:==Vr7cGqqj6."f'jPI'DtMgF$fkf\`_JT%$_ZMRB=UJW@<j5D5Z"Ua+q,G9`SD_:BajC$"HAa6^(G@AVQ
%QPY69KA-VDT4XL7\QbXK5aX2C6h;;$>G"t56Sk[<ZK7%CdWG[q)gS1oK?>urAS#NN-%3hjG#*0_.)4%E&;PHN3,s3Qn[h)%A<h(.
%,'JAqI@',/^CjG!9M$(Nqgk@i>2UK:eraEd7^&1'+%Pa`-P4;mU#!7HXf`F.G1s$JO'imf@s)s[L&lFd3E8G.rn%al/'b:fd1`]a
%q<u0R`-*Gjf;aV0oKMmZ7fIPa`o@ruRFNf`f\E6[[2@%*,Y-EUbN/+D@'dQ-#=ANMN+eHXc'D.PG&;R,j:mZT`<m4GT"<CI/LJbo
%j7)a@ni#(1U$$pIb;>6;D$,f[Nr\DSlJq<hegq!5=f1S.F>Cn#]4`q-k@lZ*k)+;NJh3])EY__+%A"eJKPk!HohrmVE&8[u,*oZ]
%Tu''sZXD,37I^GPftnk@6T',_.-tlP=1"HgO'Zk)S-LiuZc7;/Eg9=e=hmW@%:Kj0?k&Be4>`q#B6KG+W"VOX3j5Y:h"J)fepV";
%!]pQB[=lmB!JfH:mD.8]p/-iLE:IcsNAai'o[@Eu_'2W`q`C"93HPf5)/Nli!XZe"dlK']G/Ha<#57,FWJoX+An?'HeqG_^fbK4Y
%*<Eu'PdTQ+LP$"Z7kA&sWAjPXNm<*<PDCeoZ&da#27hN`NZ>m`fSUGd<@:1D.MWV+Bp3&bY^H/bT=R<K_f\k*%5G9i%3LEKca%A\
%QODVT@!t5/*?91BKN8V\MoU#&#3nd%S)Q:q8;.$7R_?Y[pG(,$B*AIC4*GlNL(Y:C>pHX8ksd1N@n.'BnZ[RTWMZMs`Ub2ATij^f
%(]E`cgf#E(61S=p^baZ/]CPp_-Cppa5ot,FHKR_U^"HsI([Q'VSe16S$aH&S?*idah'pF$R'4,r@WA"L?3f;Td\Y$i4BF`-2.Q?p
%\LJTQWirfn)q%MU,k&,sGu?%=p7^.57s`lcI)`+5]_Y>Vi<&]=ZW1q#XfBJsfnG^>>f*>0C#.WOBbf"Z4^k7h4Z4b$So:$<"\Dl(
%63iR;.5oG^D8rdc:miZ2MZfQ#=ZrstfS=*=Ris.T])oRM4jS;`p3M&k7P");1POt0pS#F)T]g4#s*j<:NicjH^RnsWLk]4T7h^B_
%^FOl&S^%Ybn!@mimsSRC!QmZ88m?$L)+*N]/YfEbadaNu[NYCNr8ei\6tf:q&Xhgt14HIr=iGP6AhqSq(2@,;op5"O6R3`]5A3q7
%3gIB%792&6.M0S=6_UuZe>!E)6X:fXR76L)W[%amUBrs;<rpQsGR!foL!rb"X[7?[`!NJC_c@GXaa=DkEfIk*Yh>t7clRM^)3C_I
%f8F=2''[cNI!uH>d#7IjcIX3q2Z0"V\cQSjQdcKX*tX$G\a/d57QEJo7EG.Q86g$C&DUk7m`8Y;7V8U<j167F'Ehbq3@<5JR5>[_
%h0-^kR^*Wb&%M7h,-gC(]F2<tmP39ncki^\Bl<JGJjKi9=5,2=Q;],WI(*#mf]G^j.m:>c#,WSr1T_AG\Xld(7Ie_.<KsGE.WAA+
%[H:BVd$UcQnji8Ei**&7(&)^6P3(=c;<YQ)2E2Z$>tnEY*M&Up7U,DjBPB:.Dlq_E;!m^8DK@C]9pc"EJa*)&H340j?npW'7$RiN
%B/3MWfGr:b8'9/;\XMLhI(F0/8<gWa9lEg@@<+:%BuF!EZ4B9Z>)5Y`2J^aSHTT[[C`973H9cXmkJ!H]j$]*UDNZtbBQGu<>-Y-d
%4^%t?9^-&r2SBSLAH\F5O/Q/8,."_CrXm8fN&k^+6t">b]Ua],Ju`fWd=B[25e-.-ASb,!nYV)s%tWcbRI"P]MF"+V%>N8/=Z7bd
%3stm+;4Q!8@'?7q2!g<d@H`H@6n!EWmkQ>94q>OX.+dQST&<4Zqq@gCA.IoR]n$CIK^Cbr7<ch:hrmYR"EI31>s6I%IY=\KmB_%3
%ppG\f%OL-X]kp>6LIi4O[qI;g'@%08m`1,;-QIKT%9oNSZ?p*#NUoCgc?&@>9"fE[?phujNc8pX8ajc&?bVU@mKZtP@)=mpO5Q33
%&Bf7+]f7M4K'iAqNHE\]Sc/'_E3p2Y/6.GNL,L,nBR@0c[I"k'G!Arj'C!JFg$V^SP-Dis`l+^m*q;d:;jRO;OWclOj581!.:'Dp
%O5TM(WPMlQar#*:]Sp>/D1^ha_l[B=e#@;c=cO=jad`(`9\W75cY2E23%cM0E)G^d'@rk.7"]N=nG0OIN^"^+R*2WV3WnfnQR<[p
%oon2H7'K,(GWr2?\esWSltT.$_f\3S#Y];[R2Pp4-+Z89-ufF)/\UcW#Ep'ir^@G>-NG2>id`qf6pFk\.W$`-59*s1hZ%kl`JpLF
%Q4T9)=)G@RI67k$Y*-rF[[$=LR-?lf.:"lX!1RQe-"NE8Q-n#5@(-1PHO=,CbJ=#4O_[Z7fMP";O"2%d?7QtTP0!`B=m.&^2ujs=
%Eh8tu>mZ^2J?]n:7PcAemnB.83/r3'4t_&j,gQ@"SoJMZKZKjX3`2t6n@UYP/H4@gC>d[<4RsiVT;-Di"j3mCLOu11Ls$<XkPF^D
%d#*IL.eZQJhH3Q"<i.^(d\U8e>"c`]Pd(bAkOkI(@/X[oB]2,];6*]SN<F,HUM"8*H/t+=F3\W;:VNh+i%ml]0RYAM6()!)Bl'9]
%!/,?=$46Ni]m3OX(F-R_]@,)21F)+FY+au4ZFi7p.#cc](L4nPr`J:mW.P?q2JZ[CqT8_7)I,b_r1t#/'@+*uo(don8:n)S!-479
%Ct9=T>HHq=mK=2*KT9!qP>.OWL@\(l8u2sJaQp5"f(P'f&KA:,;<ml@o&hD*bYgFm@eJJK-uFL+,-ASpk;,FjAa/WI*VWE,'hQ#l
%Ml7[8Bu!X<Dn/XBp"[=\+qmLN6/cFq4Ku58,_u7Q<7Y'lfs_S.DFmO\>q:HEs!eQg0LepbM+ZKi1,_)kIY$G3*\C]S74N>W$YXLY
%5q-G34:m0&i8[ujB.1I,LjQ9f9YjBSo""u'_Me]=hW%e=bnXFqNl;kLm7`?71CaS!?)QtO$4&L4d&b:WR'<6k\7P(dM&Q(>Bk>IT
%L>O'C/O"pTj[iF""363@d:qXd4cTL81pF</<,qOjG%HuH!^jg[dNECkT@([!3h11J[l[4O_<t,OY,'5(S`KFLG\lL"am@BPm'^&B
%jgHHqM@%BTEOYrn);lQs<#6"@U3!0tI*(_-/"WGEIG'+hR>W3%>gbm.&`(;i$1;I+ecZ!fAPYB4!A$q[nPiWM-FTl`MKJW;n)ffA
%K9L%"2nFtpi?Ho!e6bQ`C/[C[O0=&c`1.7O:50Nb+35J<GK,$_.rF"6oeZ1N`IHd(,98J/FS`N0o+IPt76jWeCoZP&Ih/qu29e.i
%X-eOkR8?Ros)c/#;*Sp_dg_P.9^O@t*5d_A[_OD+6$PN^TH*[45<S%UT#IG:1\):\](9WIf&qGR?(\sGBT&tSB\8$NBA.40m2>c=
%QZfWpXW.J3A"6AtIBW.::W4GG5a6tOEL6_*d0t@cq,0#(SU3(s2rTu9ke]3AD!:);QuosYG)De='lmid`t_2c7A(u7M'R7"\%#l=
%^s$[1CD^g[5(O8bQ@dYMP'$ki==S5iPQX-CD.\Oj[n3q02<t#&r`%H1:-dIk&8T?o_Im:_nX5g"/@!&CVR]f1O[MHk.GDHr,YIa&
%i$V.Z["kIUfWY,?$27E:Z!q4O,8FRgMAk]dEn.FNY'WufAYh^O;hBeA@C(-*>sfPkkqHdZ/SZ8;bLOX3e=#Ku]6$Aml09I%ZfAp[
%;Wu6fKHJOFSnfq(S&=)k*qY6k)ujfC+]P._jiDT<<Y-Q#A;d?\=%R<`c&kaM4<"WXA7YNTiKGu<P8T=/j4XY$MVj9hUQ2+6$^.5@
%pZ]AG7[_?nMfBBnG"+O,Q-2SogpjF<c0%:<orSt"&aEM(TMYI<,<eY;kmB@M,)RVco'm8nDtQ:kYH]ol:.qUED>"aO((sU',O3M,
%nCVAm'YW@H;=.eA#i8_$D`J(''UNf8f-AUs,!L>(JlAEdE#-QN17GdHM'#7%]+p5F;"s;OEn7W5F2%bP37R,ZbLbs1Tdd'Y0"PX0
%BHc_Lc\>/4,fhX"<e&L=do'hmlXu#&M^Tj!W]i@(dOO#lpd15+d+0:sJGGRN@;M'S)qYGh<0$jg;[ZV$04q/?ZBg?eb"$bJ8n!*W
%QRo4.0i6FZ"l_A?d0jM2WJK%"8?9*?3n(XRj?@SaFCXTF*)jPpp_IeA+;-6CRJ!psE3b%/[OF1$3O\+\$3u</+mJO6"LPVSAb^ZD
%4mQKA'Y)J(e"QbM)/;iY?rs4oa!je9Gc!W[)alM!jL"\_!:3:eLXIct#lX:gfK`Ru<"E,$+`$4g3qXhs,R%YV/#VOM1j$L@lUci7
%6EHk\J6u1*d8La7&).NmiW8/_rQARI`F&X<=ZI(;BIHO+0pqTT2-\'BpF0FS,MTBZq<K+HniMOCV3/G0[J^k[U1CU=LF'iO@_Ur)
%I*=b)!j.1ICalFSD7Hh0`N4RQ0_i1okg+G1aXNguP->bOqVEY"85/3KQO=Cho;BN4gl32+TdK77A@GUU3-tr9^[k%"X'Apqa1f_6
%\_fOZ.%4*m=/f@uJ4A]Je*,;]5N:57<,q+D9"`O.gC'Tf<Gs0V"l`#npmq8biaKR=IEG^o,3>C>$'YnjSK7cD2/WD^ll%i[m(0FT
%[3.YEJKTKhE=Gn"(W-X=<PJL1[q3n"S!$$aR)Cm*'?PR-gS.SsNbqn+oG+a;A"co@SefN6]'S4s;@WG0le/:lC[_ql_S,4T\_IWA
%"ksSATkdmr:=q.Ro8dPDGF[n87GsbQ,;<565g[KZ\mgljZnM>cDr!#G*_6J.d]R9?(A#u^nQqN$^tt8nL"<I7NSu-fd4-5mp6KHl
%cuU@Ll-?`(XnC?5M#nQ+0CP^NdX[mOmMYH[:5Sg2^I+.Por))'B-0rC+pHQ.+uA5p$Yf@h0Vk]*nuB`HEBDXOPb5RV[BC%bBQXck
%UKWWX0L22a2J8`.mrq?om'b&YW4IjQ!Sp6#K7G6*Z0F+t,^Vbh%7@,n]#qnm'r'UcIE"?!S6SQtDAXlFG\>^GR>&Gcli;p08\f)g
%B!k1bNnVhj)m/Bk4]Ipm[8E-mGeA,<fJ&Q<naim`(S+qM#>dtf(JE`.eP8R($hosL]($r6(f(]n/IL<q,d\8s:6d]7D0@`D[+Vj$
%kXW3P=,-p'$fj;>W*-]C?.)S`Pbbs;S_<;<Wd!ch$b0fTR&9WC,<WliLYCG1IBcEZ]jT"Me_$<dc.*-krLh"rH^%0a8-g^NMnWQf
%9$%lVfdk&GS\VRs<UgrnB_YQ/b0<!])9$ZM,&1fHDI)cRm86\[&c1FJn2]md#D8HN'<HW3A#Hug>,HITQ*rKWHi('M,jXJV$9"gu
%l-d.@E'E;_o+=mG^'/9pg0n:6cI*78.i+5jh+IKDp<_HY[.QCOFqa[5Q'OA$=LO3RX+sH9Bj36uj;r&UY,qh>4&Y+J-i"*<BijkE
%^DSg3m6cS=b3'VJ<J%D8^'?]]G@fV>OEGe.97*UJfB3p]C-/&Q!kX@IO4SZsI:,,=O[,(^k/oaR/'%VM0kZ%l82tYEmB/k-Q^D8H
%Uk8dGTK,C9>$S**$J6Y'p?`kY$p?0n2g_O^]UV=)#da@("VNW7q%$Z)^;bQif-k"+D%E!bDpD7hHBr]5jC)'H?94>R:HO"'iB8_o
%#1C]#a>%^?I%9_Ugkl&7.mhMg2d\B#BLsIji0Zj#^U,StCH&XQ^&p)QJF\./AP3-Hj63^qr$c:sjf71KQo2kuI"dr*j+e^2Qjf%k
%(8GP(;Ugdemp,t\f'6/Xi-k@rMHWMghdJ*LdkgA$Jo!K8=qT*?5)A@;`dJh8SpB-E%1CLF,.'Ajno?1'[A$>'n;G*La/@)gfk:54
%H$j7PJsF&WF`Wfq9[snk)'`Fbh$dE(m0M$ZC8"c9\-62ob^-2"Iu#4'`'6/F^njrg&/&G%A"C&'VhikI"Gc(DWQuK&>c'W.k$su2
%o>TG%7PXb8>a$W?IA=ssnB8fL_(/mQPrr2,9bSlqj.*9.XC9$0%>E]9PNn&!Ut,ap&:akk?I_a'f'(:E=!C#XqcZ,a./2Ybe_jM.
%S18I\(@9\#Y^@*P?gU,(^ik6qQ3GUmBuaK?o*2!?dqm/MfHlYRo.<eI!H(O20N))V!=J2&dmGU"'L#F8$e2/`Q=Y&A17H`(\uV?T
%IR96VSMciP/`K<gIFFOba[W3JE?uu.>ijlKRpa"2:j1b.%`Gr5%EY!GFaheSd?;IsQRmkP4[J8U>=GV`G%m/OI:c+)OK`DijMHt*
%,ciT;cBW9X7$Z9Y/]tKTE.8M)9s7u3d-%&7nRp!^pU!)I\_1YNS'meFKerQCT2$>P$0)>P]u@>Eo"^#5`JmO*3taj4!+%1XQU\Ou
%BY&V&<lEd+Is;]sb\o(V\hKGY,nWn@GC*F1buT=5+h(`I;!821inDdPgc4o9VHM#`</726[bec!)j2(#V((/T2C'4HM2d7#c@*\g
%rC8!pZl!?G^`lJM<*q_Ag0n%u$_$#d?:QT8+MKV'jG`Ns8(WMYWraM&fnp[$e[)W1KIEGbN_t/_JbJ_NP/bGjQBB(6k-?h($K*3F
%P?6\f/?,Fed7=@6RfuJZ`["[PoR$CuHSlJk^rZ8uAcb;&3)\!$BsOq1Fp,sUX<)1@]cL9fS"UEq]C7G^]%_Sf!'.P_5KDEW:J<::
%\#F$s0qpEf?G5%j0cPPZ#%25MFrP3=A\pi<@[p6o"^4<Mo-O*n2PuHjKtKfK\8A(mK'#$g"QIpT0T-8^ch*b.7]5ZK'%p0GJ[WD$
%7S+/_^@BAr@Y4.XR47mJ/C@cL1[,MqR<#!m+]D,)ZtZ":JeCo3[)@R[FEC[>I3pA"2io`Sm%I>JY,nSoad:bhjbs4:[BDX_mK5L&
%=k.k^U6<5;83$4FWc#?5>7K,_Sb8."X3nF3m[]RbgIfaZfRI5&?9+6,1djQ%UNeX,?7?eea'AGgfeTldUUp\V7]0O$2$pRsGaNF:
%2G(Z,X'1:UVEV^-C6'C&Bk01WP!3\jHp&2ZprB1-iFB-]gnAYL93aaYj%D[i6E4eJ"^Z"H,Dc\&I!(`^hFDTZAS*]/3Z;Q$Q+]DL
%Y]XT-9M7;u]Y4.u+CX&lN\n!3j?_h(B!fdX-Rf/:giSMYS!t]:2uq/*(_d\u9-"_>9-;c&:\hH"m6Q'_?e(S3Th635+c212D9V9R
%I'>XaM\pn@-);Km!M_d0:31p8,T/?k)%'b'L4.+^a3l9S,s"RAXA4S^])>gY(%13*T#>'4T;_8OD6IQOX*B+fR1nopT"8fh1#6G&
%[@M'f^=)rKHBQH5Y;daNC9[Fod%b82oYoC`(8.7i`J/1tN9KuLm7!L,a^kM&YKJ)$.8gX1Fsg)AZs2cAO=<c/OSUrd1Z>..9F7Q2
%&6--0eI`@*Q+<0D#%]q$+*N^$<p#?-kL`jN!<#g)m8Q4%,I87h!&R"PM:R(=&acM.5HJG`;%:rXp$i'8*HI*oRYcGT#[_coYkJ.V
%4-e@9f,o:sFhSbi*`6M=H#V5ee>^O,QmBN=Yc(GPNTA/U`]mA!gl8,AIV.Z#2#89HE(cNW[[MMHLj/5>$\32i!9\IZ*L7nb:5%%j
%>9&d-HK,UJ?B<RpPnnGuiP?VK&9t%pL[WqbK";=2Kf6N(*+sCUWIT<`D(>Y3$g"b/Oh,sEG8ukCeB[&l?E<fJf\3.$!PTGC&Y&O<
%c^B_)3O]FT6\8hnV_=BWhB7*feMbO^8_45&;(t/#-q9pd3i1QA*YWrA`HFFVH!q&o3Bu.mAVLMaVnHu6XX3;^\@*=$,DjkgT.iid
%`iW]E,udbr@:b`M7TrKqR\ME_Vp9^ZdPX5g;f^A?AAVmKR,5X4>B,rrbR%@r14-*"#ZE@Dm9^Kr+6<b6rgm`.Q\5Gkd9-1s8okd]
%(qS7?mFE,;L.7$`?Ai#>CKI6Vak<.LLlGZBL^_bp_2(SD1'!.U@NeX5r_aeT(;L5:kqgTV[V<sfeqAC1[G:=Qo1\;Q.l1YSS1KHR
%2D_KFnus_AHE"F[J,OS0Pn@4(L0iN^h<'H"bHD+PAj0>([MjoM#R:*(U&:c]_%8oVP#EF-K;E]'53d2K64T3I[3'QaETWc/3k(kP
%Ldkb_Ko<-;\_He%fA'.>*.>ijofI)YXTR7CBO[c=pIWl^m7&k$d7%50c+4lM6YYgiHh`Y&#*,T7pZ+6\(hMIF1--a>g'I%Vn%6Rh
%Ij.QRc6Ai<,]PtkC*d]KiSWD5`Rk=:kZ6d4DO`6(+]_B=S<QNT=>Hs0VMdt=\<r0g;cK\IT#j6!<1B<%*canW6*hVf,ROGB.#1#m
%*t<_@6c^U]7#eqqO1Q5P^O%Qh5SIBPeO#%=&oie]l3,%bW$0nO8]/7gkXj6!N6gOm"f-0Ek>PJHYNM3cf*M2$<JOVb3/A5FRKR8T
%77@7=8">_8g^-G)nRLeHl+BG>G%KQP[2QTUEuiD`^(nG+ZuhYfc?*oW;a8Il0_m,.V,:g#_\ThT0d-l&0"]*7/&[m9=cYIDiLeOK
%i-O*km:iXCB(9HcX$^`NR)Nc5p%s+6Mm$22c$>VWj2q,pQ;V;jhnc$h3,e&jhOY3K3fC2D9!),UqY%!XgLK@f60e7tSI*.i5iH1S
%G?2&;GY-M%!r<]S'l]AHR;&$7$S9`"_G7_9jI8:+fNti"VOT)tqfR_Z.fh>"TnLA?4-ECQ4\3I'/B(kI<>/^1[>HUeHVZ!-Lj(t=
%NdM))1b1KC9[dCT/4.g',Z8*lN,E=I9V(iiMku7"Iou\X=aNdP*._Dk(et4WY38aoE-3UR0P6C;$HEf()*D)gj:H]pNB-lC4P=r.
%;DTRO)hX4h:\&QOF>$6JOGEqL7mL@YH'/UH/MLchBWfj!4KdTnbI[D71ENCDYOMKQ&k%[\JJ)Q-`;Bo4r(Ka5(>IE(e?;]\0&9--
%)#jN!5JFkXQ=3^VK;lmGD+.-X+<?T)1t'iD_*3EB-"(+OiYf1F3c18_;L4*5baU@RoGBWmiec@P9l#C!_c"0!YDsY(NajmlJql@t
%P3``E<7BU91/&,b#1Ws<7+HVIZF0+ZIG@FW_`,ledDF_JSOho2>8W@+WmH$'<:5W2;;2[+6R=J!NtEtp,;%/9He_tSMQT&>AH.aC
%E_e&B<?H<CK=2rU.oO@99EF#Vfj9CZ3'H6?Kqn^i!i11sLu8[bYPC$9"\:C`0844DTe*#G/cjYJB+H_9%>ENCB5u=rJ6YDSC=oZa
%3DAP^98eie/bGu+Mg,e3`=%-G(g$5:Ip$W4m"Oh4es[oG-:1aARFce_C"2Zn/N.!VhZb<782JX;T)25unr%_aj7CG>PZZPd,"K`_
%D_SGKre,NjD;7S/ZfA;?DH?C?*iGhUpMP=`d4nW!kutl>1Jqt"MgaTdJUKem/8m>7COMApQJ[@d#9h%qaa"D<Vq!<Q%,"PQ:9O]@
%QtO`H\)C:G'A3X30kAHBTW$\TeIIT<Wh40!]#h>GdcKDq@T_H%b&0N=$tC\RldS.ug$*ZCcgl;GBu/^=%s@284g.Z^c1?G'USZX9
%Q8eD%-uK;-Y?^?:W(DL/KRU23g*N^)/qBr5]D\&CkX77=LX7F-55gr:J:::aBnBT(:`Ft$VduIa<(GU![V_4b@s<$h66)(tVFdM-
%qJS!U*_#O@;F81QW%5//$_eicBl<1(`6,>ds5kiVBXCg'WM"=Ae7N]>oU;)gdVaijpY9+>o"/ZBMF1AZ^8YTXA%,\.YiFgrc`qOE
%fcgK3hfggS1P*?'P<Wod$M',T8U'"CYP<-d6l\6GSZ?=boJ"J65"iK".8->n.)h9__$nIPaO%&PfXFL+S4IBJ*cGZuobIqZn4eja
%<QF>V&M+kR!",+$gWZ)<DP6;H]W9=Tb1DYgjK#9D6cQN'^!!3"G00^^*bm<>N/B?K33(&Obf"Z8Eq$"Zf`8)M8KlQl"5(!,g6LiG
%XaJrhef$/!!eWit['g?T!JA:m5$qXWpHX=BZ"KG_331!'T6$UgAq*r=4fu0rk%2UL0%9ea:6upYGT)k%ZqL*o[,QHE"G,81o1f`5
%!:`UljpnP64`#Edi!_5go>Qi$:!^u&VgiXJ;[\\3\e%l\M/VWeh:^?&:0Cl,KVha>.L)VIOf7^ZCa1%hHl/9i5(JdcN7V!<>-FK_
%(2SM)/O8\7g0OW[(/mgGT_1\QK[oh_(H;.Gp::3IIJ[+GqV-MqcThI.LO]2fJ+6V?k25q5qR?Lohu<,cs8/]YJ,as.r7-;pj59n$
%5Q1D=s5SV.l-FkT(OuH\J,J2RqY%sZpkO@sk<Jt;TDmI@:Z)0Nc[YehJ,[JQs689&rV(g>5E)hqCPT\$X2"TDs6_Q?ir9#m:g6!~>
%AI9_PrivateDataEnd
