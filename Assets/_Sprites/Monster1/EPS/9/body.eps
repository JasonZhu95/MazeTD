%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: body.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/20/2018
%%BoundingBox: 0 0 584 716
%%HiResBoundingBox: 0 0 583.2598 715.6138
%%CropBox: 0 0 583.2598 715.6138
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 104 128 8%%BeginData: 24418 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3FFF52512752527D7DA8A8FD50FFA8A87D7D527D5252527C5252
%527D52FD052726FD04277C7DA8FD47FFA8A87D762751FD0F274B2751274B
%2751FD0527527DFD42FFA87D5127272726FD20277DA8FD3CFFA8A852FD04
%275127522751275227512752275127522751275227512752275127512751
%27522751275227517DFD39FFA8522720FD10275127272751FD0727525252
%2752FD0A2752FD36FFA8522727274B2751FD05275127525152527C527C52
%7C527C527C525251525152527D527C527C52522751274B2751272751FD33
%FFA8522726FD082752527DA8A8517C5252527C5258527C5258527C527C52
%7C5252527C5252527C5252FD0927FD31FF7D272727512752272727527CA8
%A8FFFFFFFD047D7C7D527C527D527C527D527C527D527C527D527C527D52
%7C527D52522752275127277CFD2EFF7D5226FD0527262752A7A8FFAECFA8
%AE7D7D7DA8FD047D7C7C527C5258527C5252527C5258527C5258527C5258
%527C5252FD06277DFD2CFF7D272751274B2727277DA7FFCFFFA8FFA8A87D
%A87DA87DA87DA87DA87D7D527C527C527C527C527C527C527C527C527C52
%7C527C52522751274B2752CFFD29FFA8FD082752A8A8CFA8CFA8A8FD057D
%837D7D7D837D7D7D837D7D527C5252527C527C527C527C527C5252527C52
%52527C5252FD0427F852FD28FFA8272727512751275283FFCFFFA8CFA7A8
%7DA87DA87DA87D7D7C7D7DA87DA87D7D527D527C527D527C587D527C527D
%527C527D527C527D527C52522751275227A8FD26FFA7FD07277DA8FFA8FF
%A8837D7D7DA8A8A8FD047D525251FD047DA87D7C527C5258527C5252527D
%5252527C5258527C5258527C527C5252FD0527FD25FF7D2751274B272752
%A8CFFFA8FFA8A87DA8A8FFAEFFA8A87D83527C527C7DA87DA87DA87D7D52
%7C527C527C527C587D527C527C527C527C527C527C527C5251274B27277D
%FD23FF7D26FD052752CFA8AEA8CFA87D7DA8A8CFA8CFA87D7D837D7D52FD
%047D837D7D7D837D7D527C5252527C5252527C5252527C5252527C525252
%7C527CFD0627A8FD21FF7D2751275227277DFFCFFFA8FFA8A87DAECFFFA8
%FFA8A87DA87DA87DA87DA87DA87DA87DA87DA87DA8527C527D527C527D52
%7C527D527C527C527C527D527C527D274B27522752FD20FF7DF8FD05277D
%FFA8CFA8CFA8A87DA8A8CFA8CFA8A87D7D7D837D7D7D837D7D7D837D7D7D
%83FD047D5258527C5258527C5258527C527D527C5258527C52585252FD05
%27A8FD1EFFA827272752275183FFAEFFA8FFAEA87DCFAEFFA8FFA8A87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87D7D587C527C527C527C527C527C
%52A87DA87C7C527C527C527C5252274B272752FD1DFFA8262727272651A7
%FFA8CFA8AEA8CFA7A8A8CFA8AEFD057D837D7D7D837D7D7D837D7D7D83FD
%047D527D527C5252527C5252527C52587D837D7D527C5252527C52585251
%FD04277DFD1CFF275127512752A8FFA8FFAEFFA8FFAEFFA8FFCFCF7DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7C587D527C527D527C52
%7D527C527D7C7D527D527C527D527C527D524B27522752FD1BFFFD06277D
%FFA8CFA8CFA8CFA8CFA8CFA8A87D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7D837D7D7D84527C527C5258527C5258527C5258527C5252527C525852
%7C5258527CFD0527A8FD19FF5227274B27277DFFA8FFA8FFA8FFA8FFA8FF
%AEA87DA87D7D7DA87D7D7DA87DA87DA87DA87DA87DA87DA87DA87D7D527D
%527C527C527C527C527C527C527C527C527C527C527C527C527CFD042752
%FD18FF7DFD052752FFA8AEA8CFA8AEA8CFA8CFA8A8527D527C527D527C52
%7D7D837D7D7D837D7D7D837D7D527D7D8352585252527C5252527C525252
%7C5252527C5252527C5252527CFD0452FD0427A8FD16FFA8272752272752
%FFAEFFA8FFAEFFA8FFAEFFA8A8527C527C527C527C527C7DA87DA87DA87D
%A87DA87D7D527C527D7DA7527D527C527C527D527C527D527C527D527C52
%7D527C527D527C527C27512752277DFD15FFA852FD0527AEA8CFA8CFA8CF
%A8CFA8FFA8A8527C5252527C5252527C7D7D7D837D7D7D837D7D7DA87D52
%527C527D7D7C527D527C5258527C5258527C5258527C5252527D5252527C
%5252FD0727FD15FF7D2752272727A8CFCFA8FFA8FFA8FFA8FFA8A87D7C52
%7D7C7D7D837D7D7DA87DA87DA87D837DA87DA87DA87D7D527C7DA8527D7D
%7C527C527C527C527C527C527C527C7C837DA87C7C527D52272751274B27
%277DFD13FFA826FD04277DA8CFA8AEA8CFA8AEA8CFA8A87D7D527C7D837D
%7D7D837D7D7D83FD057DA8FD057D837D7D7D837D7D517D5252527C525252
%7C587D587D525252FD057DFD0452FD0627F87DFD13FF27272752277CCFFF
%AEFFA8FFAEFFA8FFAEA87DA87D7C7DA87DA87DA87DA87DA87DA87DA8A8FF
%AEFF83A87DA87DA87DA87DA87D7C7D7D527D527C527D7DA87DA87D7D527C
%7C7D7CA87D7C527D5252275227512727A8FD12FF52FD042752A8CFA8CFA8
%CFA8CFA8CFA8A87D7D7D837D7D7D837D7D7D837D7D7D837D7D7DCFA8CFA8
%A87D7D7D837D7D7D837D7D527D5852527C5252527D7D837DA85252527C52
%52527C5258527C51FD052752FD12FFA827275127277DFFA8FFA8FFA8FFA8
%FFAEA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8FFA8A87DA87D
%A87DA87DA87DA87D7C527D527C527C527C527D7D7D527C527C527C527C52
%7C527C527C2727274B51FD13FF52FD042752FFA8CFA8AEA8CFA8AEA8A87D
%7D7D837D7D7D837D7D7D837D7D7D837D7D7D837DA883A87D7D7D837D7D7D
%837D7D7D835252527C5252527CFD07527C5252527C5252527CFD0452FD04
%27A8FD11FF7D2751275127AEAEFFAEFFA8FFAEFFA8FF7DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D
%527D7C7C527D527C527D527C527D527C527D527C527D527C527D52272752
%277DFD10FFCFFD0427267DAECFA8CFA8CFA8CFA8CFFD057D837D7D7D837D
%7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D837DA87C5252
%7D5258527C5258527C5258527C5258527C5258527C52585252FD042752FD
%10FF522727512752A8FFA8FFA8FFA8FFA8FFA8837DA87D837DA87DA87DA8
%7D837DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA7FD047D527C7D
%7D527C527C527C527C527C527C527C527C527C527C527C5252274B2751A8
%FD0EFF7DFD05277DFFA8CFA8AEA8CFA8CFA8A87D7D7D837D7D7D83FD057D
%A8A8AEA8A87D837D7D7D837D7D7D837D7D7D837D7DFD05527C527D527C52
%52527C5252527C5252527C5252527C5252527C527CFD0427207DFD0EFF52
%2751272752FFA8FFAEFFA8FFAEFFAEAE7DA87DA8A8FFA8A87DA87DA87DA8
%A8FFAEFFA8A87DA87DA87DA87DA87DA87DA87DA87D7D527C527D7C7C7C7D
%527C527D527C527D527C527D527C527D527C527D527C527C2751272752FD
%0DFF7D26FD0427AEA8CFA8CFA8CFA8CFA8CF7D847D7D7DA8A8A87D837D7D
%7D837DA8A8CFA87D7D837D7D7D837D7D7D837D7D7D837D7D7C7C527C7D7D
%527C7D7C5258527C5258527C5258527C5258527C5258527C525852512727
%2751A8FD0CFF27272751277DAEFFA8FFA8FFA8FFA8FFA77D7DA77DA87DFF
%A8837DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87C7C527D527C527C527C527C527C527C527C527C527C527C527C
%527C2751274B27A8FD0BFF52FD0527A7CFA8CFA8AEA8CFA8CFA87C515252
%7C5883A8A87D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7D837D7D7D837D7D51587D7D517C5252527C5252527C5252527C525252
%7C5252527C5252FD042752FD0AFFA8522751275227A7CFFFAEFFA8FFAEFF
%AEA8527C527C527C7DFFA7A87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87D7D527D7D7C527C527D527C527D527C
%527D527C527D527C527D527C525227512752FD0AFFA826FD05277DFFA8CF
%A8CFA8CFA8CF527D7D7C527C52A8A8A87D7D7D837D7D7D837D837D837D7D
%7D837D7D7D837D7D7DA87D7D7D837D7D7D837D7D527C527D527C5258527C
%5258527C5258527C5258527C5258527C527CFD0527A8FD0AFF5227512727
%27CFA8CFA8FFA8FFA8FFA87D7DA87D7D7DA8A8CF7DA87DA87DA87DA87DA8
%7D7D7DA87D837DA87DA87D7D527D7DA87DA87DA87DA87DA87D7D527C7D7C
%527C527C527C527C527C527C527C527C527C527C527C52522751272776FD
%0AFF52272727267DA8A8A8CFA8CFA8AEA8A87D7D7D837D7D7DCFA87D7D83
%7D7D7D837D7D5852527C7D837DA8A7A87D7D5252527C52FD047D837D7D7D
%835852527D5252527C5252527C5252527C5252527C5252527C5252527C52
%FD042752FD09FFA85127522752A8FFAEFFA8FFAEFFA8CF7DA87DA87DA87D
%A8CFA87DA87DA87DA87DA87D7C527D52837DA8AEFFA8A87D7D527C527C7C
%A87DA87DA87DA87D7D527C7D7D527D527C527D527C527D527C527D527C52
%7D527C527D527C2752275127FD09FF7DFD042752FFA8CFA8CFA8CFA8CFFD
%057D837D7DA8FF7D7D7D837D7D7D837D7D52FD047D8383CFA8A8FD047D52
%5251FD047D837D7D7DA87D58527D7C52527C5258527C5258527C5258527C
%5258527C5258527C5252FD04277DFD08FF2751272727A8CFFFA8FFA8FFA8
%FFA8A87DA87DA87DA87DCFA8A87DA87DA87DA87DA87DA87DA87DA87DA8A8
%A87DA87DA87D837C7D7DA87DA87DA87DA87DA8587C527D527C527C527C52
%7C527C527C527C527C527C527C527C527D52272751277CFD07FF7DFD0427
%52A8CFA8AEA8CFFD04A8FD077DA8A8A87D837D7D7D837D7D7D837D7D7D83
%FD077D837D7D7D837D7D7D837D7D7D83FD047D5252527C5252527C525252
%7C5252527C527D527C5252527C52582751FD0527FD07FF52275227277DFF
%AEFFA8FFAEFFA7FF83A87DA8A7A87DA8A8FFA8A87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7C527D
%7C7C527D527C527D527C527D7DA87DA87D7C527D527C5251275127522751
%A8FD05FFA8FD0527CFA8CFA8CFA8FFA8A8A8837D7D7DCFA87D7DCFA8A87D
%837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7D83FD047D5252527D5258527C5258527C525252FD057D5258527C5252
%FD0727FD06FF5227274B277DCFFFA8FFA8FFFD04A87DA87DA8A8A87DA8A8
%FF83A87D7C7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87D7D527D7C7C527C527C527C527C527C527D7C7D52
%7C527C527D522727512727277DFD05FFA851FD04277DFFA8AEA8CFA8A87D
%AEFD057DCF7D7DA7CFA8A87D7C5152527D7D837D7D7D837D7D7D837D7D7D
%837D7D7D837D7D7D837D7D7D837D7D7D837D7D5258527D527C5252527C52
%52527C525252585252527C5252527CFD05277DFD06FFA8275227512752A8
%FFA8FFAEFF83A8AEA87DA87DAEA8A87DCFAEFF7D7D527D527D7DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D52
%7C7D7D527C527D527C527D527C527D527C527D527C527D525227522727A8
%FD06FF52FD0527F87DAECFA8FFA87D7DFF7D7D7D83A8A87DA8A8CFA78452
%7CFD057D837D7D7D837D7D7D837D7D7D837DA8A8A87D7D7D837D7D7D837D
%7D7D837D7D7D7C527D527C5258527C5258527C5258527C5258527C525852
%7C51FD04277CFD06FF51274B275127277CFFA8FFA8A87DAEA8A87D837DFF
%A87D83FFAEA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DCFA8FFAEFF
%A8847DA87DA87DA87DA87DA87DA87D83527C7C7D527C527C527C527C527C
%527C527C527C527C527C527C2727275127FD06FFFD0627267DA8CFA8CF7D
%83A8AE7D7D7DA8A8A87DA8A8CF7D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7DA8A8CFA8CFA8A87D837D7D7D837D7D7D837D7D7D837D7C517D7D5252
%7C5252527C5252527C5252527C5252527CFD0452FD04277DFD05FFA72727
%275227277DFFAEFFA8A8A7FFA8A87D84A8FF8384A8FFAEA87DA87DA87DA8
%7D837DA87DA87DA87DA87DA883FFAEFFAEA87DA87DA87DA87DA87DA87DA8
%7DA87DA87D7C5283527C527C527D527C527D527C527D527C527D527C527D
%52272752277CFD06FFA852FD04277DA8CFA8A87DA8A8A87D837DA8A8A87D
%AEA8AE7D7D7D837D7D7DA883A87D837D7D7D837D7D7D837DA87DA8FD047D
%587C7DA87D7C52837D7D7D837D7D527C7D7D527C5258527C5258527C5258
%527C5258527C5258527CFD0527A8FD06FFA8FD0427A7FFA8FFA87DA8FFA8
%837DA8A8FF7DA8AEFFA8A87DA87DA8A7FFA8FFCFCF7DA87DA87DA87DA87D
%A87D837DA87D7D527C527C7C7C527C58A87DA87DA87D7D527D7D7C527C52
%7C527C527C527C527C527C527C527C527C5252274B27277DFD06FF52FD04
%27A8A8AEA8A87DAEA8A87D7D7DCFA87D7DCFA8A87D837D7D7DAEA8A883AE
%7D7D7D837D7D7D837D7D7D83FD047D5252527C5252527C525258837D7D7D
%835852527D5252527C527DFD05527C5252527C5252527C525851FD042751
%A8FD05FF7D27512752A8FFA8FFA8A8A8FF83A87DA8AECF7DA8CFFF7DA87D
%A87DA8A8FF83A87DA87DA87DA87DA87DA87DA87DA87DA87C7C527D527C52
%7C527C527D7DA87DA87D7D527D7D7D527D527C7CFD057D527C527D527C52
%7D527C527D274B2752277DFD05FF52FD0427A8A8CFA8A883CFA8A87D837D
%CFA87DA7FFA87D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7D7C527D7D7D5252527D527D7D837D7D7DA8525252A87C52527C527C7D
%A87DA87C7C5258527C5258527C52585252FD0527FD05FF7D27512751A8FF
%A8FFA8AEAECF7DA8A8CFA8AE7DA8AEA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87D7D527D7DA87D7D52A8A8A87DA87DA87DA87D7D
%527D7D83527C527C527D7DA77D7D527C527C527C527C527C527C5252274B
%27277DFD04FF52FD0427A8A8CFA8A8A7FFA87D7DA8A8CFA77DA8CFFD057D
%837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D83A8
%CFA8A87D7D7D837D7D5258527D7D7C5252527C5252527C5252527C525252
%7C5252527C5251FD052751A8FFFFFF5227522752A8FFAEFF83CFCFA87DA8
%A8FFA8CF7DCFA8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA8A8AE7DA87DA87DA87D7D527D7DA8527C527D
%527C527D527C527D527C527D527C527D527C27522751275227A8FFFFFF52
%FD0427CFA8FFA77DA8FF7D7D7DAEA8CFA883A8A87D837D7D7D837D7D7D83
%7D7D7D837D7D527D7D837D837D7D7D837D7D7D837D7D7D837D7D7D837DA8
%7DA87D7D527C7D837D7C5258527C5258527C5258527C5258527C5258527C
%5251FD06277DFFFFFF52274B2752AEFFA8A87DFFA8A87D83A8CFA8A87DA8
%7D837DA87DA87DA87DA87DA87DA87D835258527C7C837DA87DA87DA87DA8
%7DA87DA87DA87DA87DA8AEFFA8A87D7D527D7DA8527C527C527C527C527C
%527C527C527C7DA87D7D527D52272751272752FD04FFFD0527FFA8CF7DA8
%A8A87D7D7DA8A7CFA7FD067D837D7D7D837D7D7D837D7D527CFD05527D7D
%A8A8A8FD057D837D7D7D837D7D7DFFA8CF7D7D585252837D7C527C525252
%7C5252527C5252527C527D7DA87D7C5252FD042752FD05FF522751277CCF
%FFA8A8A7FFA8A87DA8A8AEA8A87DA87DA87DA87DA87DA87DA87DA87DA87D
%7C7DA87D7C527C7DA8A8FFA8A87DA87DA87DA87DA87DA87DA8A8FFA8A87D
%7D527D7DA87C7C527C527D527C527D527C527D527C587D7D7D527D525227
%522752FD05FFFD042752FFA8A87DA8A7A87D837DCFA7A87D7D7D837D7D7D
%837D7D7D837D7D7D837D7D7D837D7D7CFD047DA8A8CFA8AE7D7D7D837D7D
%7D837D7D7D837D7D7DA87D52527D7D7D527C5258527C5258527C5258527C
%5252527C5252527CFD0527A8FD04FF512751277DAEFFA8A8A8AE7D837DA8
%AEA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D83
%A8FFA8FFA8A87DA87DA87DA87DA87DA87DA87DA87D7D527C7CA87C7C527C
%527C527C527C527C527C527C527C527C527C5252274B2727A8FFFFFFA8FD
%042752FFA8A8A8CFA8CFA87D7DCF837D52837D7D7D837D7D7DA8A8A87D83
%7D7D7D837D7D7D837D7D7D837DA8A8CFA8CFFD057D837D7D7D837D7D7D83
%7D7D7C7C527D7D7D5252527C5252527C5252527C5252527C5252527C527C
%51272727F87DFFFFFFA8512752275252A883FFA8FFAEFFA8A8CFA7527C7D
%A87DA87DA8A8FFCFFFA8A87DA87DA87DA87DA87DA87DA87DA87DAEAECF83
%A87DA87DA87DA87DA87DA87DA87DA87D83527C7CA87C7C527D527C527D52
%7C527D527C527D527C527D527C527C275127277DFFFFFFA8FD062751CFA8
%CFA8CFA8CFA8FFA75252837D7D7D83A8FFA8FFA8837D837D7D7D837D7D7D
%837D7D7D837D7D7DA87D7D7D837D7D7D837D7D7D837D7D7D837D7D7D7C52
%7C7D7D5258527C5258527C5258527C5258527C5258527C527C5151272726
%7DFFFFFFA827274B27512751A8FFA8FFA8FFA8FFA8FF7D837DA87DA87DA8
%A8A8A7A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87D7D527C52A8527C527C527C527C527C527C527C
%527C527C527C527D7C7C2751272752FFFFFFA826FD0627A8A8CFA8AEA8CF
%A8CFA8A87D7D7D83FD077D837D7D7D837D7D7D837D7D7D837D7D7D837D7D
%7D837D7D7D837D7D7D837D7D7D837D7D7D837D58527C7D7C527C5252527C
%5252527C5252527C5252527C5252527C52FD042752FFFFFFA85127512752
%2752A8FFAEFFA8AEA8FFA8A87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7D7D527C5283527C527C527D527C527D527C527D527C527D527C527C527C
%2752272752FD04FF52FD0627A8A8CFA8CFA883A7CF7D837D7D7D837D7D7D
%837D7D7D837D7D7D837D7D7D837D7D7D847D7D7D837D7D7D837D7D7D837D
%7D7D837D7D7DA87D7D7D837D52527C7D58527C5258527C5258527C525852
%7C5258527C5252FD072752FD05FF5252274B2752AEFFA8FFAECF7DA8AEA8
%7DA87DA8A8AEA8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87D7D527C527C7DA87D7C7D7D527C527D527C527C527C
%527C527C527C527C527C527C527C27272751274B272752FD06FFFD0527FF
%A8AEA8CFA87D83CF7D7D7DA8A8CFA8CF7D7D7D837D7D7D837D7D7D83FD04
%7D525858847D7D7D837D7D7D83FD047D52525158527D7D7D527D52585258
%527C5252527C5252527C5252527C5252527C52525251FD0627267CFD06FF
%5227512752CFFFA8FFAEFF7DAEA8A87DA87DAEA8A87DA87DA87DA87DA87D
%A87DA87DA87DA87C7C52FD047DA87DA87DA87DA87DA87D7D58FD047DA87C
%7D7D7D527C527D527C527D527C527D527C527D527C527D527C527C275127
%52275127277DFD06FFFD042752FFA8CFA8CFA883A7A87D7D7D837D7D7D83
%7D7D7D837D7D7D837D7D7D837D7D527C5258527C527C7DA87D7D7D837D7D
%7D837D7D7DA87D7D7D7C7C7D527C5258527C5258527C5258527C5258527C
%5258527C527C5251FD0627F8A8FD06FF512751277CAEFFA8FFA8FF7DA8A8
%847DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7C527D527C527D52
%7D7DA87DA87DA87DA87DA87DA87DA87D7D52A87D7C527C527C527C527C52
%7C527C527C527C527C527C527C527C27512727275252A8FD07FFFD042752
%CFA8CFA8AEA8A87DA8A8A87D7D7D837D7D7D837D7D7D837D7D7D83FD047D
%7C7D7D7D527C7D837D7D7D837D7D7DCFA87D7D837D7D7D83527D7D7D5252
%527C5252527C525251585252527C5252527C5252527C52FD042752FD09FF
%A8512752277DAEFFAEFFA8FF838383FFA8A87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DFFCFFF7DA87DA87DA8
%7D7C7DA87C7C527D527C527D527C527D7D7D527D527C527D527C527D527C
%2752272752FD09FFA8FD042752FFA8CFA8CFA8A87DA8A8FFA87D7D837D7D
%7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D83FF
%A77D7D83FD047D52837D7C5258527C5258527C52587DA87D7C527C525852
%7C527C527C52FD042752FD09FFA851274B277DCFFFA8FFA8FF7D8483FFA8
%CF7D847DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87D837DA87DA87DA87D7D52837D7D527D527C527C527C527C527D7D
%A8587C527C527C7DA87D7D527CFD042752FD09FFA8FD04277CFFA8AEA8A8
%A8A77D83A8CFFD057D837D7D7DA8A8CFA7837D7D7D837D7D7D837D7D7D83
%7D7D7D837D7D7D837D7D7D837D7D7D84527D7D835252527C5252527C5252
%527C5258527C5252527C527D7D847D7C515127272652FD09FF7D51275127
%A7CFFFA8FFA8FF7DA87DA87DA87DA87DA87DA87DA8A8FFA8FFA8AE7DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7C7DA87D7C52
%7D527C527D527C527D527C527C527C527D527C7DA87D7D527D2751275152
%FD09FFA8FD04277DFFA8CFFD04A87D837D7D527D7D837DA87D7D7DA8A8CF
%A8FFA8AE7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D83FD047D7C
%837D7D527D527C5258527C5258527C5258527C5258527C5252527CFD0452
%27272752FD09FF7D27275127A8AEFFA8FFA8FFA8837D835258527D7C7D7D
%A87DA87DA8AEFFA8FFA8837DA87DA87DA87DA87DA87DA87DA87DA87DA87D
%A87DA87D7D52A87DA8527C7D7C527C527C527C527C527C527C527C527C52
%7C527C527C527C2751272727FD09FF7D262727277DCFA8CFFD04A87D7D52
%7C7C52527C52527D837D7D7DA8A8A8A7A77D7D7D837D7D7D83FD0B7D837D
%7D7D83527D7D837D52527D5252527C5252527C5252527C5252527C525252
%7C5252527C5252FD0427A8FD08FF7D27275227A8AEFFAEFFA8FF83A87D7D
%7DA87DA87D7C52A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87D7D7DA77D837CA8587C527D527C527D527C527D
%527C527D527C527D527C527D527C5151275127A8FD08FF7D26272727A7CF
%A8CFFD04A87D7D7D847D837DA87D7D7D837D7D7D837D7D7D837D7D7D837D
%7D7D837D7D7DA8A88383CF7D7D7D83FD067D52837D847C7C5258527C5258
%527C5258527C5258527C5258527C5258527C5252FD04277DFD08FF52FD04
%27AEAEFFA8FFA8AE7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA8AEFFA8FFAEA87DA87DA87D7D7DA8527D7DA87D7C
%527C527C527C527C527C527C527C527C527C527C527C527C527D52272751
%277DFD08FF5226272727A7CFA8AEA8A87D7D7D837D7D7D837D7D7D837D7D
%7D837D7D7D837D7D7D837D7D7D83FD057DA8A8FFA8AEFD077D83527CFD04
%7D5252527C5252527C5252527C5252527C5252527C5252527CFD0452FD04
%2752FD08FF2751272727FFAEFFA8FFA7847DA87DA87DA87DA87DA87DA87D
%A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8A8A87DA87DA87DA87D
%A87D7C7DA87D83527C527D527C527D527C527D527C527D527C527D527C52
%7D527C527D525227522752FD07FFA8FD042752A8CFA8CFA8A87D7D7D837D
%7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7D7D
%837D7D7D837D7D7DA87D5252A87D7D527C5258527C5258527C5258527C52
%58527C5258527C5258527C5258527CFD0527FD08FFFD042752FFA8FFAECF
%7DA8A8A87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87D7D52837DA8587C527C527C527C527C
%527C527C527C527C527C527C527C527C527C527C5252274B2727A8FD06FF
%7D272727267CA8AEA8CFA87DA7CFFD077D837D7D7D837D7D7D837D7D7D83
%7D7D7D837D7D7D837D7D7D837D7D7D837D7D7D837D7C517D7D7DFD05527C
%5252527C5252527C5252527C5252527C5252527C5252527C527C51272727
%207DFD06FFA8275127277DFFA8FFAECF7DFFAEA87DA8A8A87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87D7D
%527D7DA87D7C527C527D527C527D527C527D527C527D527C527D527C527D
%527C527D527C527C275127277DFD06FF52272727267DAECFA8CFA8A8A8FF
%7D7D7DA8AEA87D837D7D7D837D7D7D837D837D837D7D7D837D7D7D837D7D
%7D837D7D7D83FD047D527D7DA87D52527C5258527C5258527C5258527C52
%58527C5258527C5252527C5258527C527C525127272752FD06FF7D275127
%277DFFA8FFA8FFA8FFA8A87D83A8FFA87D7DA87DA87DA87DA87DA87D7D7D
%A87DA87DA87DA87DA8A8A87DA87DA87DA87D7D527D7DA87D7C527C527C52
%7C527C527C527C527C527C527C527C527C587D527C527C527C527C527C27
%51272727FD06FF52272727267DA8CFA8AEA8A8A8CF7D7D7DA8A8AE7DA8A7
%A87D7D7D837D7D5258527C587D7C7D7D837D7DA8FFA8A8FD067D517C7DA8
%7D52527C5252527C5258527C5252527C5252527C5252527C527D7D7D5252
%527C5252527C5252FD0427A8FD05FF52275227277DFFAEFFA8FFA8FFA8A8
%7DA8A8FFAEFFA8FFA8847DA87DA87C7C527C527C527C7DA87DA87DAECFFF
%A8A87DA87D7D527D7DA87D7C527D527C527D527D7DA87DA87D7D527C527D
%527C527D527C7CA87DA87D83527C527D527C5251275127A8FD05FFFD0527
%A7A8CFA8CFA8CFA8AE7D837DA8A8CFA8CFA8A87D7D7D837D7C517C525252
%7C527D7D837D7D7DA8A7837DA87D7D517D7D837D7C5258527C527D7D7D52
%7C527D7D847D7D5258527C5258527C5252527D7D837D7C5258527C5252FD
%04277DFD05FF52274B27277DFFA8FFA8FFA8FFA8A87DA87DA8A8FFAEAE7D
%847D837DA8FD047D7C7D7D837DA87DA87D837D847DA87D7D527D7DA87D7C
%527C527C527D7D7D527C527C527D7D7D527C527C527C527C527C527C527D
%527C527C527C527C52512751277DFD05FFFD0427F883A8AEA8CFA8AEA8A8
%FD057DA87DA87DA87DA87D7D7D837D7D7D837D7D7D837D7D7D837D7D7D84
%7D5851FD047D7C5252527C527D7D7D5252527C5252517C5252527C525252
%7C5252527C5252527C5252527C5252527CFD042752FD05FF7C275127277D
%FFA8FFAEFFA8FFA87C7DA87DA87DA87DA8AEFFAEAE7DA87DA87DA87DA87D
%A87DA87DA87DA87DA87D7C52837D7D527D527C527D527D7D7D527C527D52
%7C527D527C527D527C527D527C527D527C527D527C527D527C527D525227
%52277DFD05FF52FD04277DAECFA8CFA8CFA8A7517D7D837D7D7D837DCFA8
%FFA8A87DCF7D7D7D837D7D7D837D7D7D837D7D527C527D587C527C527C52
%52527C7C7D527C5258527C5258527C5258527C5252527C5258527C525852
%7C5258527C5258527CFD042752FD05FF7D2751272751FFAEFFA8FFA8FF83
%7D7D837DA87DA87DA87DA8A8AE7DA8A8FF7D837DA87DA87DA87DA87DA87C
%7C527D527C7C7D527C527C527C527C527C527C527C527C527C527C527C52
%7D7D7D527C527C527C527C527C527C527C527C5251274B277DFD05FFA8FD
%05277DFFA8AEA8CFA8CFA8AEA8837D83FD0A7DA7A87D7D7D837D7D58837D
%7D52525258527D7D7D517C5252527D5252527C5252527C5252527C525252
%7C527C7D847D7D527C5252527C5252527C5252527C52FD05277DFD06FF27
%512751277DCFFFA8FFAEFFA8FFAEFFA8A87DA87DA87DA87DA87DA87DA87D
%A87DA87DA8587C7DA8527C527C58A77D7D527D527C7C7D527C527D527C52
%7D527C527D527C527D527C52A87DA87D7D527C527D527C527D527C527D52
%522752274B27FD07FF7C26FD0427CFA8CFA8CFA8CFA8FFA8A87D7D527D7C
%FD047DA87C58527C527D587D7D7C527C5252527D7D837D7D5252527D7C7C
%527C5258527C5258527C5258527C5258527C5258527D587C527C5258527C
%5252517C5258527C51FD04277DFD07FFA727275127277DFFAEFFA8FFA8FF
%A8A87D83527C527C527C527D7D7D7C7D527C527C527C527C527D7D837DA8
%7DA87C7C527D7C7D527C527C527C527C527C527C527C527D527C527C527C
%527C527C527D525227512727275252522752274B2727A8FD08FFFD052752
%83FFA8A87DA87D7D527D52522752517C527C7C7D7D837D7D7C7D587D52FD
%047DA87D7D7D837D7D527D5252527C5252527C5252527C52585252272727
%FD04527C5252527C527C5151FD072751FD0727FD09FF7D27522751275252
%7D7DA87D7D527C525127512751517D587D527D7C7D7C7D7D7D7C7D7D7D7C
%7D7C7D7C7D7C7D7D7D527C527D527C527D527C527D527C52522727275127
%52527D527C527D527C51522751275227512752275127522751277DFD09FF
%A8FD082752527C5252FD09277C5258527C525227525158527C5252527C52
%52527C5258527C527C527C5258527C5258527C5251FD072752527C525852
%52FD12277DFD0AFF52272751274B27512751275227272751274B27512727
%277C5252275227272751517C527C527C527C527C525251522752527C527C
%527C527C527C5252274B2751274B27512752527D52522751274B27512752
%5252FD082752FD0CFFFD212752527C527C5252FD0827517C527C5252527C
%51FD052726FD082752FD0627F87DA8FFA852272727A8522752FD0EFF5252
%272727522751275227512752272727522751275227512752275127522727
%277D587C5152274B2752275127522727517D527C527D514B2752274B277C
%7D5127522751275127512752272727A8FD06FF7DFD14FFA8A87D7D26FD07
%27264BFD132752FD0F277C5252FD07277DFFFFA82726FD092752A8FD1FFF
%A8272751FD042752A7A8FFA8522651274B274B2727275227272751272727
%51274B2751FD0727512727275227272751272727A8FD04FFA8522727274B
%275127517DFD22FFA852262727527DFD05FFA85226272627277D7DA8A8A7
%FD0A27F851527D7D7DFD0C2752FD08FF7D27272627F852A8FD25FFA87DA8
%FD09FFCF7DA8A8FD06FFA8275227512752272752A8FD05FFCF2727275127
%52275127277CFD0BFF7D7D52A8FD3EFF7DF8FD042752A7FD09FFFD08277D
%FD4FFF7D27527DFD0DFF272727512752A8FD62FF7D522752A8FD2AFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-20T10:08:39+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-20T10:08:39+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-20T10:08:39+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>212</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADUAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FUk1/zv5R8vg/pnVrazcCvou4MxHiIl5SH6FxtXnms/85NeRrQsmm2t5qbj7LhFgiP+ykPP&#xA;/hMFqw/UP+cqNbcn9HaFbW4/Z+sTST/fwEGDiSkdz/zkt+Y8prGthb71pHAx+j95I+Nqo/8AQx35&#xA;mf7/ALT/AKR1/rjaqsP/ADkp+ZEf2/qM24+3AR/xB0xtXml5qmo3t/LqF3cyTX0zmSW5diXZm6nl&#xA;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&#xA;X//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:386ed245-f4d0-a341-b355-c413f37dd666</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:386ed245-f4d0-a341-b355-c413f37dd666</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:3058ae3d-e1d2-e54a-af89-c1685a06a1ca</stRef:instanceID>
            <stRef:documentID>xmp.did:3058ae3d-e1d2-e54a-af89-c1685a06a1ca</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:68cf48fb-65ae-d247-abc7-767cb7648306</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:45:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d741fa58-aad3-c54f-a3ac-601ad698f002</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:54:39+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e7890f50-c8ec-344c-89d0-68bce713a96a</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:140bc5d1-249c-e944-b543-d4e97aec01b2</stEvt:instanceID>
                  <stEvt:when>2018-02-19T15:12:43+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1017b3a1-2e97-2748-b6fd-069485779654</stEvt:instanceID>
                  <stEvt:when>2018-02-19T16:26:23+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3058ae3d-e1d2-e54a-af89-c1685a06a1ca</stEvt:instanceID>
                  <stEvt:when>2018-02-19T17:27:52+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:386ed245-f4d0-a341-b355-c413f37dd666</stEvt:instanceID>
                  <stEvt:when>2018-02-20T10:08:39+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>583.259773</stDim:w>
            <stDim:h>715.613777</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -715.614 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 715.614 li
583.26 715.614 li
583.26 0 li
cp
clp
564.93 387.854 mo
564.146 377.532 558.69 369.03 554.206 360.148 cv
558.056 356.843 560.389 351.737 558.559 346.861 cv
554.586 336.279 535.962 276.723 531.928 276.526 cv
538.768 276.859 545.311 270.262 545.007 263.447 cv
543.104 221.016 529.861 186.169 510.106 150.356 cv
514.549 147.155 517.563 142.116 518.664 134.495 cv
519.518 128.6 516.61 122.636 512.048 119.669 cv
503.222 98.2797 495.503 76.1474 476.791 61.5268 cv
452.813 42.7929 420.68 27.9374 390.369 24.1854 cv
322.867 15.8324 246.37 27.7811 187.323 62.0048 cv
155.907 80.2162 121.786 107.398 101.275 140.676 cv
101.207 140.73 101.118 140.756 101.052 140.812 cv
75.6747 161.985 59.6391 187.088 50.2724 218.633 cv
49.0121 222.879 49.9257 226.391 51.8754 229.105 cv
41.6318 247.552 32.4975 266.664 24.498 286.73 cv
21.4282 294.424 27.3608 300.979 34.3217 302.655 cv
30.0688 331.694 26.0561 360.762 22.4565 389.895 cv
21.707 395.966 25.2514 399.933 29.9389 401.605 cv
32.4164 417.971 34.8945 434.339 37.3725 450.704 cv
37.9238 454.358 39.8525 456.776 42.3598 458.266 cv
40.9677 466.708 40.1205 475.232 40.3505 483.395 cv
39.9501 484.463 39.6244 485.592 39.4775 486.847 cv
37.3193 510.743 29.9921 542.558 32.7851 569.484 cv
24.1825 603.975 22.7626 638.891 55.2963 662.191 cv
75.7324 676.827 90.374 677.17 102.776 667.18 cv
105.554 670.408 109.879 672.13 115.331 670.331 cv
123.448 667.656 131.294 665.79 139.058 664.562 cv
153.683 672.391 169.28 674.173 186.205 671.694 cv
188.813 673.432 191.485 675.046 194.831 676.075 cv
208.266 680.201 232.201 688.023 246.21 686.017 cv
269.48 682.684 288.038 675.985 312.883 684.374 cv
318.675 686.33 321.708 691.898 328.92 692.704 cv
344.092 694.401 382.18 657.991 405.741 653.993 cv
405.843 654.068 405.94 654.112 406.043 654.189 cv
414.856 660.761 419.899 668.231 429.872 673.558 cv
435.096 676.348 441.007 675.146 444.998 671.779 cv
445.704 671.739 446.434 671.777 447.102 671.658 cv
458.706 669.599 465.562 659.447 475.999 655.076 cv
516.324 638.189 507.054 658.518 525.959 651.297 cv
539.229 646.23 544.841 640.402 550.629 625.625 cv
559.83 602.139 554.295 577.341 548.926 553.84 cv
543.874 531.72 539.276 510.543 538.195 487.681 cv
537.642 475.943 542.912 451.182 537.952 439.53 cv
538.269 439.581 538.581 439.657 538.902 439.688 cv
544.632 445.645 555.468 445.544 559.742 437.549 cv
565.713 426.381 564.608 418.742 559.759 413.545 cv
562.988 405.262 565.613 396.832 564.93 387.854 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.65098 .67451 .65098 rgb
f
543.709 418.841 mo
543.601 418.776 543.489 418.71 543.38 418.644 cv
540.492 414.869 536.577 412.885 532.638 412.426 cv
532.64 412.415 li
536.525 413.112 540.776 411.9 543.96 409.361 cv
543.965 412.507 543.896 415.666 543.709 418.841 cv
cp
494.755 482.101 mo
494.289 481.929 493.811 481.868 493.332 481.767 cv
493.484 478.619 493.493 475.439 493.331 472.219 cv
493.809 469.24 494.217 466.239 494.662 463.248 cv
494.933 468.901 495.112 474.564 495.256 480.228 cv
495.081 480.851 494.931 481.479 494.755 482.101 cv
cp
437.975 321.453 mo
440.824 326.205 443.896 330.767 447.214 335.114 cv
447.383 343.747 447.611 352.383 447.715 361.017 cv
444.894 347.576 441.51 334.284 437.975 321.453 cv
cp
344.277 617.006 mo
344.791 615.566 345.234 614.1 345.584 612.604 cv
346.07 610.523 343.825 608.565 341.874 609.75 cv
340.454 610.721 338.964 611.565 337.483 612.424 cv
348.708 603.277 359.301 593.607 368.804 583.236 cv
369.42 586.297 371.524 588.902 374.139 590.453 cv
363.821 599.045 353.86 607.849 344.277 617.006 cv
cp
397.118 65.9096 mo
394.162 63.556 391.206 61.202 388.252 58.8456 cv
389.696 59.3314 391.152 59.7777 392.581 60.3158 cv
394.573 61.0658 396.512 61.9984 398.419 63.038 cv
397.795 63.8925 397.361 64.8607 397.118 65.9096 cv
cp
387.559 83.7245 mo
387.172 82.7597 386.596 81.8109 385.747 80.9144 cv
378.763 73.5429 371.445 67.0634 363.795 61.1703 cv
363.141 60.5233 362.468 59.8842 361.825 59.2279 cv
362.361 58.7846 362.81 58.2558 363.098 57.5966 cv
368.45 61.8114 375.128 67.0463 382.068 72.6176 cv
382.298 73.1371 382.657 73.6386 383.236 74.0878 cv
385.261 75.6576 387.329 77.1532 389.427 78.6093 cv
390.006 81.7064 390.784 84.7499 391.477 87.8163 cv
390.197 86.413 388.884 85.0443 387.559 83.7245 cv
cp
559.227 357.58 mo
557.847 343.37 557.056 331.24 551.311 317.839 cv
549.019 312.49 545.923 307.564 542.674 302.714 cv
544.062 300.465 544.932 297.73 544.894 294.393 cv
544.693 276.272 543.242 258.621 540.421 241.326 cv
538.562 223.23 534.764 206.361 528.284 188.66 cv
527.478 186.46 526.339 184.648 524.98 183.179 cv
523.447 179.045 521.88 174.915 520.155 170.808 cv
523.279 157.888 520.303 143.895 514.217 131.176 cv
512.323 114.798 503.413 98.182 494.088 86.0053 cv
489.963 78.287 484.553 71.3349 479.44 66.5033 cv
469.152 56.7807 457.457 46.8822 445.777 38.8163 cv
440.678 35.2968 435.645 32.37 429.519 30.9545 cv
426.509 30.2592 423.235 30.3114 420.016 30.1561 cv
399.832 19.4945 377.402 14.8446 357.368 22.7059 cv
355.926 22.4613 354.483 22.2191 353.043 21.9667 cv
352.697 21.7499 352.415 21.4608 352.024 21.2948 cv
343.886 17.8314 337.995 17.4154 329.109 17.2753 cv
321.797 17.161 317.281 22.2631 316.071 28.1034 cv
305.933 26.8358 296.128 26.4433 285.16 27.0297 cv
280.832 27.2606 278.641 30.3861 278.471 33.6225 cv
273.429 34.0551 268.386 34.4945 263.344 34.9574 cv
261.469 35.0697 259.579 35.266 257.69 35.4564 cv
256.546 35.5648 255.4 35.6498 254.254 35.7592 cv
254.262 35.8119 li
253.686 35.8847 253.118 35.9101 252.542 35.9892 cv
245.381 36.9818 247.051 49.0741 254.254 48.6366 cv
262.944 48.1098 271.613 47.4823 280.286 46.8646 cv
299.572 47.7421 317.041 53.7968 333.303 63.1371 cv
333.252 63.1259 li
322.73 60.9105 319.386 74.9188 328.915 78.8617 cv
335.873 81.7431 342.288 85.6185 348.244 90.2606 cv
347.822 91.6112 347.631 93.0892 348.078 94.8148 cv
359.074 137.349 371.971 179.341 384.282 221.5 cv
392.233 264.934 401.214 308.204 415.391 348.772 cv
416.18 359.799 417.805 375.388 417.853 376.987 cv
418.255 390.328 418.259 403.726 417.257 417.048 cv
416.253 430.378 413.907 443.089 410.781 455.454 cv
410.618 455.352 410.427 455.315 410.259 455.223 cv
411.745 433.001 408.686 409.806 406.708 388.821 cv
406.484 386.448 402.826 386.364 402.94 388.821 cv
403.366 397.925 403.377 406.792 403.194 415.573 cv
403.164 415.41 403.085 415.241 402.872 415.241 cv
402.85 415.241 402.859 415.275 402.837 415.277 cv
402.607 396.908 401.018 378.15 399.881 358.943 cv
401.801 360.175 404.961 359.452 404.632 356.626 cv
394.773 271.982 368.708 188.511 348.184 105.965 cv
347.006 101.231 339.93 103.248 340.915 107.969 cv
356.917 184.744 369.065 264.267 392.801 339.283 cv
390.597 339.654 388.664 341.218 388.718 344.147 cv
389.243 372.226 394.11 400.444 392.668 428.513 cv
391.057 459.878 377.687 483.395 369.581 512.704 cv
368.422 516.892 373.997 518.863 376.306 515.538 cv
385.169 502.777 391.176 489.853 395.256 476.756 cv
386.6 545.524 323.329 582.82 282.877 635.415 cv
278.484 641.128 286.792 647.993 292.264 644.738 cv
292.271 644.767 292.281 644.797 292.289 644.828 cv
304.717 636.852 316.911 628.423 328.552 619.49 cv
329.103 620.183 330.031 620.595 331.035 620.083 cv
331.516 619.869 331.997 619.654 332.477 619.439 cv
322.212 629.234 310.442 637.487 298.223 644.652 cv
293.96 647.151 289.018 650.12 283.769 653.03 cv
282.069 651.674 279.919 650.739 277.134 650.764 cv
265.873 650.864 254.538 650.938 243.179 650.961 cv
243.159 650.959 243.142 650.961 243.123 650.961 cv
214.511 651.019 185.722 650.628 157.412 648.596 cv
152.512 648.245 147.428 646.905 142.33 645.55 cv
143.45 645.681 144.555 645.9 145.678 646.003 cv
151.739 646.562 158.474 647.451 163.372 643.298 cv
164.684 642.186 164.017 640.346 162.882 639.494 cv
158.44 636.157 152.327 636.865 147.006 636.462 cv
139.872 635.924 132.894 634.646 125.962 632.908 cv
120.024 631.418 117.497 640.553 123.433 642.08 cv
123.83 642.183 124.236 642.244 124.635 642.342 cv
124.102 642.335 123.561 642.279 123.033 642.299 cv
118.058 642.495 109.085 647.561 104.941 645.826 cv
100.581 643.998 96.0473 647.162 93.6225 650.432 cv
85.8359 660.928 62.6738 652.084 50.3632 655.134 cv
42.894 656.984 44.642 668.223 52.1523 668.354 cv
64.5209 668.57 70.9711 679.56 84.7367 677.957 cv
93.0468 676.991 98.9565 673.424 104.113 668.372 cv
104.236 668.447 104.359 668.523 104.483 668.598 cv
107.745 670.597 111.486 670.346 114.664 668.749 cv
117.113 669.824 119.792 669.268 121.959 667.483 cv
122.608 666.95 123.255 666.416 123.904 665.883 cv
138.83 665.876 173.591 672.288 180.45 672.332 cv
181.749 672.339 183.053 672.347 184.352 672.355 cv
184.386 672.371 184.408 672.394 184.44 672.41 cv
200.967 680.558 216.759 683.093 233.076 682.657 cv
235.046 685.804 238.361 687.941 242.8 687.501 cv
260.112 685.787 277.272 683.392 294.38 680.695 cv
298.437 681.299 302.485 681.953 306.568 682.383 cv
306.617 684.205 307.286 686.011 308.922 687.479 cv
318.653 696.208 327.515 700.465 341.383 697.403 cv
349.611 695.585 354.204 691.558 358.347 686.916 cv
360.56 686.878 362.843 685.995 364.877 683.841 cv
367.102 681.678 368.588 680.21 369.79 678.883 cv
376.607 671.99 383.676 665.496 390.967 659.222 cv
392.663 664.889 400.272 668.232 405.751 663.255 cv
406.619 662.466 407.277 661.861 407.975 661.22 cv
410.214 664.117 413.742 666.155 417.56 666.719 cv
419.397 668.647 420.886 669.208 421.572 667.346 cv
419.109 674.027 426.709 681.306 433.277 679.053 cv
444.834 675.089 453.913 669.618 464.3 663.326 cv
477.954 655.053 481.457 658.77 496.574 655.607 cv
499.023 655.095 501.347 653.898 503.634 652.681 cv
506.195 654.876 509.487 656.337 513.531 656.364 cv
520.935 656.412 525.363 655.437 529.863 651.735 cv
531.475 651.63 533.12 651.297 534.803 650.563 cv
557.432 640.673 558.417 597.795 557.054 578.432 cv
553.984 534.87 534.164 493.366 539.89 450.319 cv
543.21 451.776 546.839 452.956 551.043 453.935 cv
557.51 455.44 566.806 451.948 567.852 444.391 cv
571.833 415.637 562.019 386.358 559.227 357.58 cv
cp
.478431 .486275 .407843 rgb
f
377.295 437.508 mo
366.977 472.013 350.245 503.353 329.911 532.983 cv
329.511 533.567 330.433 534.286 330.898 533.745 cv
354.78 505.89 371.666 473.82 384.218 439.415 cv
385.789 435.112 378.63 433.045 377.295 437.508 cv
cp
f
352.469 520.887 mo
338.575 545.012 320.592 564.139 300.576 583.216 cv
282.688 600.264 261.009 613.426 244.077 631.346 cv
241.885 631.934 239.674 632.38 237.468 632.86 cv
237.552 632.703 237.658 632.589 237.741 632.428 cv
238.4 631.135 237.019 629.488 235.654 630.341 cv
235.413 630.492 235.168 630.594 234.927 630.737 cv
235.286 627.564 233.43 624.116 229.3 624.116 cv
223.282 624.116 222.128 631.385 225.62 634.485 cv
209.684 638.25 192.533 630.72 175.922 633.421 cv
172.069 634.048 172.923 640.705 176.853 640.295 cv
182.163 639.742 188.74 640.8 195.64 641.959 cv
194.861 643.182 195.119 645.153 196.814 645.38 cv
233.897 650.379 275.105 630.085 304.627 609.341 cv
307.613 607.242 304.837 602.314 301.728 604.381 cv
289.088 612.787 275.92 619.913 261.929 625.458 cv
278.831 614.18 294.648 599.773 309.084 586.624 cv
328.61 568.84 345.35 547.278 358.514 524.42 cv
360.767 520.509 354.72 516.98 352.469 520.887 cv
cp
f
179.411 284.871 mo
178.663 283.838 177.894 282.821 177.16 281.721 cv
174.823 278.234 170.289 279.173 168.81 282.813 cv
166.926 287.452 164.593 291.891 162.375 296.377 cv
160.246 300.688 166.453 304.438 168.883 300.182 cv
169.898 298.407 170.91 296.637 171.927 294.87 cv
172.72 296.487 175.135 297.85 176.893 297.646 cv
180.235 297.257 182.681 296.464 184.873 293.782 cv
188.407 289.456 184.576 283.221 179.411 284.871 cv
cp
f
240.225 243.204 mo
238.423 242.383 237.297 242.596 235.435 242.345 cv
234.366 242.201 233.364 241.965 232.997 240.807 cv
232.134 238.083 228.778 236.319 226.166 238.028 cv
221.543 241.053 218.075 245.301 215.672 250.256 cv
213.509 254.718 219.559 258.309 222.335 254.151 cv
223.803 251.954 225.619 250.217 227.572 248.61 cv
228.87 249.747 230.395 250.641 232.188 251.12 cv
235.991 252.139 240.791 251.423 241.766 246.993 cv
242.061 245.66 241.601 243.833 240.225 243.204 cv
cp
f
307.232 243.496 mo
306.542 242.687 305.744 241.745 305.685 241.678 cv
303.704 239.324 301.244 237.321 298.273 236.354 cv
292.982 234.631 288.373 237.324 286.31 241.845 cv
285.435 242.466 284.818 243.44 284.934 244.504 cv
285.238 247.271 286.68 248.694 289.226 249.703 cv
290.419 250.178 292.019 249.988 293.01 250.704 cv
293.513 251.066 294.339 252.706 294.818 253.358 cv
299.748 260.051 310.795 264.032 315.923 255.028 cv
319.544 248.664 313.676 242.577 307.232 243.496 cv
cp
f
253.289 374.71 mo
250.267 372.817 246.743 370.913 243.518 369.296 cv
239.881 367.476 235.727 365.69 231.59 365.899 cv
222.588 366.354 218.527 375.387 216.227 382.896 cv
215.132 386.474 220.494 388.776 222.298 385.454 cv
223.91 382.483 225.815 378.454 229.146 377.116 cv
232.538 375.754 233.495 378.505 235.35 380.811 cv
239.1 385.472 245.264 390.232 251.545 388.056 cv
257.47 386.002 258.797 378.162 253.289 374.71 cv
cp
f
355.685 334.696 mo
354.758 329.405 351.248 328.579 348.625 324.395 cv
346.154 320.454 340.239 318.179 336.066 321.103 cv
332.364 323.696 329.657 326.496 327.735 329.748 cv
325.43 327.665 323.985 324.495 320.788 322.473 cv
316.843 319.978 312.835 320.223 308.581 321.899 cv
298.649 325.813 293.261 334.668 289.63 344.19 cv
287.27 350.381 296.128 352.773 299.471 348.34 cv
302.141 344.8 306.42 341.407 310.909 339.289 cv
311.431 340.295 311.92 341.133 311.855 341.029 cv
313.263 343.216 315.314 345.174 317.415 346.675 cv
322.28 350.15 327.89 351.543 333.794 351.095 cv
338.29 350.752 341.766 347.987 342.905 343.832 cv
345.485 344.878 348.235 344.901 351.041 343.43 cv
351.503 343.186 351.964 342.944 352.426 342.702 cv
355.395 341.144 356.214 337.72 355.685 334.696 cv
cp
f
246.784 129.3 mo
242.407 126.971 240.274 127.132 235.473 128.69 cv
230.466 130.316 227.882 132.64 223.956 131.176 cv
220.75 129.981 219.935 127.375 215.843 127.47 cv
210.972 127.584 207.717 130.665 203.458 132.168 cv
200.516 130.03 196.128 130.107 193.206 132.804 cv
185.567 139.858 181.245 148.527 182.002 159.011 cv
182.209 161.888 186.565 163.81 188.022 160.641 cv
190.295 155.695 193.127 151.774 197.016 148.675 cv
197.704 148.888 198.377 149.133 199.14 149.207 cv
205.072 149.78 210.699 148.529 215.514 144.892 cv
215.732 144.752 215.83 144.678 216.022 144.55 cv
216.196 144.644 216.299 144.725 216.525 144.827 cv
217.454 146.368 220.745 146.854 222.272 147.114 cv
231.111 148.615 245.789 142.462 248.597 133.758 cv
249.113 132.161 248.268 130.09 246.784 129.3 cv
cp
f
119.691 402.868 mo
111.804 392.956 102.755 409.062 94.7797 406.753 cv
92.6166 406.126 90.7695 407.23 89.5263 408.891 cv
89.016 409.575 88.5673 410.204 88.1 410.854 cv
86.5073 408.348 84.8246 405.903 82.9062 403.566 cv
81.3188 401.629 78.4155 402.191 76.7533 403.566 cv
73.0463 406.625 70.1913 409.513 67.8359 413.745 cv
65.4692 417.996 71.7729 421.661 74.3437 417.548 cv
75.5048 415.693 76.7011 414.216 78.1166 412.965 cv
79.6796 416.03 81.3583 419.025 83.2372 421.996 cv
85.0878 424.925 90.0795 425.494 91.7866 421.996 cv
92.3588 420.825 92.7421 419.746 93.0522 418.692 cv
95.3237 420.376 98.2817 421.194 101.373 420.765 cv
108.192 419.824 116.442 413.137 120.31 407.652 cv
121.396 406.11 120.729 404.17 119.691 402.868 cv
cp
f
143.151 507.575 mo
139.337 507.377 137.471 504.417 133.39 505.809 cv
131.943 506.304 129.613 508.886 127.86 508.745 cv
124.896 508.505 125.057 505.441 123.292 503.556 cv
120.421 500.487 115.766 500.251 112.094 501.896 cv
107.171 504.106 105.35 509.391 104.034 514.243 cv
102.882 518.485 109.409 520.278 110.609 516.056 cv
111.462 513.058 111.626 511.309 114.771 509.949 cv
119.366 507.957 116.237 508.765 117.985 510.683 cv
119.215 512.035 119.353 513.905 120.995 515.032 cv
124.201 517.234 127.465 515.759 129.694 513.05 cv
130.187 512.451 130.492 511.409 131.072 510.92 cv
132.655 509.589 131.17 508.573 132.335 510.843 cv
133.351 512.823 133.083 514.934 134.68 516.843 cv
138.2 521.055 143.308 520.789 147.327 517.654 cv
151.685 514.253 147.716 507.811 143.151 507.575 cv
cp
f
272.89 454.499 mo
270.269 452.586 267.019 451.649 263.78 451.385 cv
262.985 451.32 259.543 451.383 257.012 451.901 cv
256.7 450.688 256.204 449.442 255.662 448.379 cv
253.944 445.02 251.306 442.932 247.619 442.101 cv
245.393 441.598 242.514 441.963 240.958 443.862 cv
236.759 448.981 231.964 453.107 228.342 458.773 cv
224.39 464.957 233.751 469.94 237.95 464.389 cv
239.077 462.901 240.509 461.071 242.102 459.409 cv
242.674 461.496 243.471 463.374 244.933 465.133 cv
247.812 468.596 252.274 470.563 256.782 469.018 cv
259.582 468.059 260.57 466.078 262.697 464.393 cv
265.174 462.434 266.343 463.074 269.354 462.884 cv
271.979 462.718 274.24 462.66 274.999 459.68 cv
275.545 457.533 274.58 455.734 272.89 454.499 cv
cp
f
217.077 578.862 mo
212.573 578.538 207.843 580.749 203.769 578.721 cv
199.862 576.776 197.104 574.411 192.357 574.448 cv
183.993 574.513 177.932 582.496 178.122 590.468 cv
178.283 597.071 187.074 597.849 189.227 591.97 cv
189.759 590.525 198.97 595.873 200.841 596.062 cv
206.439 596.624 211.597 593.895 217.077 593.746 cv
226.734 593.486 226.564 579.542 217.077 578.862 cv
cp
f
93.6786 603.241 mo
91.7494 602.483 90.3735 603.473 88.6176 603.328 cv
90.6537 603.496 87.3129 603.509 87.5449 603.586 cv
87.0268 603.412 86.0825 601.859 85.6244 601.445 cv
84.0165 599.99 82.0947 599.137 79.9223 598.997 cv
76.1215 598.752 72.9228 600.832 71.2177 604.191 cv
69.9501 606.69 70.6606 609.878 69.2753 612.17 cv
66.3515 617.01 73.0351 622.05 77.0283 618.152 cv
77.9745 617.227 78.6738 616.204 79.2905 615.056 cv
80.5654 615.899 81.934 616.582 82.9531 616.939 cv
88.6459 618.938 98.6948 616.797 98.0908 609.035 cv
97.8627 606.12 96.3315 604.282 93.6786 603.241 cv
cp
f
145.763 218.861 mo
138.02 218.454 130.515 214.9 122.704 216.787 cv
116.102 218.382 111.967 225.182 114.064 231.77 cv
115.485 236.23 123.33 235.756 122.702 230.602 cv
122.361 227.801 131.892 232.211 132.494 232.502 cv
137.624 234.981 142.279 236.164 147.94 234.962 cv
157.346 232.965 154.633 219.329 145.763 218.861 cv
cp
f
164.179 126.185 mo
160.038 127.294 155.289 129.579 153.071 133.413 cv
151.195 136.656 151.457 140.968 152.736 144.403 cv
153.28 145.861 155.123 145.828 155.679 144.403 cv
156.772 141.597 160.035 141.033 162.235 139.23 cv
164.381 137.472 166.509 135.556 168.524 133.651 cv
171.82 130.537 168.397 125.055 164.179 126.185 cv
cp
f
285.21 69.2924 mo
279.293 69.6737 273.967 71.7313 269.493 75.579 cv
265.903 78.6674 267.818 85.2172 272.305 86.2279 cv
278.151 87.5458 283.801 86.643 289.243 84.1815 cv
296.465 80.9144 292.862 68.7982 285.21 69.2924 cv
cp
f
339.188 141.079 mo
337.349 137.625 333.976 136.818 330.366 136.644 cv
330.083 136.631 329.935 136.63 329.721 136.622 cv
328.819 135.265 326.727 133.179 326.647 133.109 cv
320.328 127.674 309.847 132.888 311.874 141.4 cv
312.633 144.581 315.486 146.007 318.354 146.046 cv
318.627 146.492 318.858 146.964 319.205 147.387 cv
320.788 149.314 322.844 150.66 325.288 151.256 cv
329.197 152.21 333.447 150.995 336.999 149.424 cv
340.097 148.056 340.592 143.719 339.188 141.079 cv
cp
f
355.135 200.046 mo
354.443 196.924 351.691 194.52 348.73 193.639 cv
345.916 192.804 343.219 192.917 340.336 192.972 cv
328.096 193.204 328.075 211.765 340.336 211.996 cv
343.23 212.052 345.918 212.164 348.73 211.33 cv
351.691 210.449 354.443 208.046 355.135 204.923 cv
355.526 203.161 355.526 201.809 355.135 200.046 cv
cp
f
359.51 440.991 mo
357.799 436.413 354.025 433.452 349.005 433.543 cv
346.747 433.586 344.569 434.469 342.654 435.61 cv
341.921 436.047 340.953 436.538 340.347 437.152 cv
340.28 437.221 340.239 437.238 340.177 437.292 cv
334.497 433.343 327.066 441.576 332.155 447.468 cv
334.742 450.465 338.911 451.368 342.686 450.496 cv
344.219 450.141 345.705 449.431 347.068 448.651 cv
347.47 448.419 348.121 448.087 348.676 447.737 cv
353.361 451.388 362.047 447.775 359.51 440.991 cv
cp
f
431.506 156.346 mo
427.768 154.244 423.724 153.05 419.414 153.096 cv
415.193 153.142 411.768 155.087 407.909 156.512 cv
403.311 158.211 402.981 164.623 407.909 166.204 cv
411.414 167.327 414.254 169.209 417.93 169.791 cv
421.946 170.428 425.894 170.129 429.835 169.126 cv
435.634 167.652 436.711 159.272 431.506 156.346 cv
cp
.65098 .67451 .65098 rgb
f
472.606 146.392 mo
466.48 142.759 459.531 145.479 453.831 148.51 cv
448.282 151.46 452.075 160.529 458.118 158.681 cv
462.167 157.441 465.773 156.272 467.734 160.827 cv
468.95 163.648 473.81 164.224 475.703 161.853 cv
479.857 156.646 478.428 149.844 472.606 146.392 cv
cp
f
453.924 322.072 mo
453.431 322.072 453.431 322.838 453.924 322.838 cv
454.416 322.838 454.418 322.072 453.924 322.072 cv
cp
f
469.75 340.997 mo
466.235 336.934 460.174 339.002 455.524 338.371 cv
452.262 337.929 448.974 339.156 448.018 342.633 cv
447.175 345.703 449.052 349.41 452.281 350.139 cv
458.529 351.551 468.182 353.011 470.922 345.435 cv
471.492 343.856 470.769 342.175 469.75 340.997 cv
cp
f
486.542 269.151 mo
479.778 263.757 473.175 266.732 465.435 267.209 cv
459.808 267.556 458.089 275.946 464.052 277.433 cv
471.197 279.214 477.901 283.647 485.181 279.723 cv
488.683 277.833 489.915 271.841 486.542 269.151 cv
cp
f
529.418 375.171 mo
526.173 369.119 516.915 368.087 510.992 370.163 cv
503.845 372.665 506.645 383.33 514.143 381.584 cv
517.454 380.813 519.394 383.395 522.344 384.376 cv
527.773 386.181 531.868 379.736 529.418 375.171 cv
cp
f
463.281 480.667 mo
461.199 475.646 456.42 474.501 451.692 472.662 cv
446.007 470.449 442.548 479.393 447.613 482.339 cv
451.402 484.543 455.504 487.671 460.069 486.325 cv
462.232 485.686 464.251 483.004 463.281 480.667 cv
cp
f
501.543 480.505 mo
491.151 483.165 495.628 499.604 505.982 496.6 cv
508.021 496.007 510.88 497.093 513.61 496.234 cv
516.302 495.386 518.253 492.977 518.272 490.109 cv
518.332 481.152 508.693 478.674 501.543 480.505 cv
cp
f
414.505 587.741 mo
409.09 585.54 404.373 581.241 398.225 581.274 cv
391.689 581.307 385.25 581.442 379.245 584.248 cv
377.245 585.184 378.681 588.691 380.767 587.857 cv
383.455 586.782 387.309 585.316 390.221 586.098 cv
394.541 587.257 396.465 590.986 399.589 593.606 cv
403.934 597.25 407.956 596.883 413.297 596.667 cv
418.691 596.449 419.121 589.616 414.505 587.741 cv
cp
f
507.169 584.336 mo
506.887 583.495 506.223 583.012 505.352 582.953 cv
502.755 582.771 500.762 584.331 498.253 584.241 cv
494.336 584.1 490.962 579.229 487.851 577.172 cv
483.962 574.599 476.566 570.894 473.641 576.826 cv
471.994 580.166 474.586 583.448 477.583 583.403 cv
477.823 583.623 478.1 583.867 478.486 584.186 cv
479.242 585.128 480.117 585.938 481.113 586.613 cv
482.596 587.827 484.231 589.027 485.961 589.86 cv
488.988 591.318 493.452 592.56 496.84 592.653 cv
501.437 592.779 509.196 590.364 507.169 584.336 cv
cp
f
442.396 616.685 mo
437.567 617.871 433.731 621.42 432.207 626.122 cv
430.351 631.854 437.467 634.524 441.357 631.449 cv
440.671 631.99 441.058 631.806 441.325 631.683 cv
441.443 631.726 441.617 631.778 441.997 631.864 cv
442.585 632.155 443.21 632.303 443.87 632.31 cv
444.092 632.352 444.208 632.37 444.367 632.397 cv
444.417 632.422 444.449 632.445 444.563 632.49 cv
446.311 633.18 447.53 633.759 449.473 633.754 cv
453.122 633.745 456.99 630.459 456.667 626.562 cv
456.108 619.848 449.02 615.056 442.396 616.685 cv
cp
f
440.873 102.89 mo
437.326 100.826 434.24 99.6962 430.211 98.911 cv
420.498 97.017 418.453 111.749 428.399 112.307 cv
432.516 112.538 435.832 112.222 439.802 111.09 cv
443.492 110.037 444.234 104.844 440.873 102.89 cv
cp
f
168.152 202.291 mo
167.09 200.726 165.406 199.582 162.933 199.582 cv
154.817 199.582 154.394 211.261 161.495 212.751 cv
159.789 220.69 158.115 228.637 156.469 236.594 cv
143.128 277.687 125.796 324.565 127.102 366.936 cv
127.207 370.371 131.552 370.582 132.743 367.7 cv
150.569 324.548 154.252 273.001 166.804 227.811 cv
167.216 226.33 166.705 225.179 165.841 224.406 cv
167.156 218.229 168.455 212.051 169.75 205.875 cv
170.099 204.223 169.292 202.972 168.152 202.291 cv
cp
.890196 .913725 .843137 rgb
f
121.382 274.333 mo
112.432 308.94 101.828 352.82 110.856 388.207 cv
111.439 390.493 115.261 390.71 115.702 388.207 cv
118.56 372.027 117.327 355.406 118.403 339.025 cv
119.796 317.79 123.206 296.874 127.959 276.146 cv
128.936 271.882 122.487 270.066 121.382 274.333 cv
cp
f
95.2641 621.765 mo
95.1689 621.585 95.079 621.41 94.9687 621.323 cv
95.0546 621.476 95.1557 621.611 95.2245 621.774 cv
95.2397 621.772 95.249 621.768 95.2641 621.765 cv
cp
f
63.852 249.594 mo
64.8071 245.39 65.9194 241.225 67.2919 237.121 cv
68.2846 237.972 69.6308 238.366 70.9916 238.264 cv
68.6323 242.064 66.2392 245.829 63.852 249.594 cv
cp
270.263 45.7963 mo
273.533 42.2645 271.849 37.3651 267.61 35.7475 cv
243.992 26.7313 208.321 49.1117 188.62 61.1591 cv
181.6 65.4525 174.763 70.1327 168.251 75.1806 cv
167.487 74.8461 166.683 74.5863 165.829 74.4799 cv
153.431 72.9296 139.666 91.5067 132.081 98.808 cv
116.22 114.077 102.449 131.142 89.6367 148.966 cv
65.3364 166.912 50.4955 203.884 38.8261 230.376 cv
34.1127 241.073 26.8964 256.082 25.4286 269.745 cv
21.9047 276.795 18.5805 283.976 15.5986 291.441 cv
12.787 298.487 17.9096 303.053 23.8305 303.934 cv
23.0732 309.394 23.29 314.657 25.186 319.415 cv
25.5707 320.382 26.1391 321.174 26.6611 322.012 cv
22.602 337.905 20.5663 354.066 20.4819 370.669 cv
19.0536 377.201 18.1039 383.772 18.2402 390.24 cv
18.603 407.518 27.0854 422.818 26.6161 440.607 cv
26.4291 447.663 31.247 451.918 36.8442 452.968 cv
37.5829 474.475 37.495 495.934 37.1508 517.464 cv
34.829 528.996 32.4096 540.51 29.914 552.007 cv
25.6196 553.101 22.1498 556.311 21.3007 562.398 cv
16.6982 595.426 26.9804 620.928 42.7856 649.645 cv
49.7704 662.335 68.5483 657.054 70.4272 643.952 cv
73.4819 648.772 82.6259 648.543 83.6952 642.067 cv
83.8447 641.159 83.996 640.245 84.1459 639.334 cv
84.2075 639.2 84.2392 639.044 84.2934 638.907 cv
84.8544 640.876 86.0956 642.732 87.726 643.582 cv
93.6039 646.649 101.878 644.774 103.768 638.792 cv
105.087 638.598 106.369 638.144 107.592 637.19 cv
109.303 635.856 109.976 634.11 110.605 632.101 cv
111.847 628.157 109.14 622.783 104.883 622.02 cv
102.387 621.573 99.8818 621.257 97.3578 621.514 cv
96.8774 621.563 96.0307 621.635 95.2641 621.765 cv
95.4638 622.152 95.6342 622.694 95.6923 623.653 cv
95.6508 622.964 95.4736 622.346 95.2245 621.774 cv
94.8525 621.839 94.4374 621.887 94.2172 622.009 cv
92.7382 622.831 94.0395 620.582 94.9687 621.323 cv
93.4784 618.639 89.9433 617.548 87.4247 618.862 cv
90.706 597.187 93.0356 575.264 90.9863 553.501 cv
90.5732 549.099 84.144 547.62 82.8783 552.404 cv
79.4101 565.507 77.1874 578.901 75.3647 592.373 cv
74.8486 585.737 75.1308 578.703 76.4565 570.645 cv
76.9496 567.65 75.2001 564.923 72.6967 564.141 cv
75.2563 542.526 78.8549 518.294 75.1401 497.72 cv
76.2939 491.919 77.3163 486.121 78.2548 480.336 cv
78.2792 488.491 78.3578 496.647 78.4472 504.798 cv
77.6865 506.547 77.7089 508.589 78.496 510.325 cv
78.5541 515.77 78.6196 521.218 78.6435 526.661 cv
78.6625 531.394 85.9892 531.403 86.0024 526.661 cv
86.0136 522.19 86.0619 517.714 86.0976 513.241 cv
90.9321 511.362 90.9716 503.742 86.1796 501.806 cv
86.3969 478.167 86.5536 454.506 85.0209 430.939 cv
84.8769 428.7 82.8183 427.861 81.246 428.427 cv
81.059 426.31 80.7617 424.232 80.476 422.151 cv
83.4374 425.269 86.6454 428.043 90.2104 429.791 cv
91.6821 430.513 93.2001 430.857 94.7182 431.029 cv
94.2094 442.095 93.9365 453.135 94.2094 464.112 cv
94.2714 466.545 98.1 467.278 98.6181 464.708 cv
100.951 453.094 102.426 441.15 103.468 429.084 cv
107.055 426.905 109.519 423.191 109.549 418.653 cv
110.254 414.741 108.061 410.841 104.819 409.244 cv
105.805 389.089 105.917 368.828 106.515 349.257 cv
106.657 344.639 99.435 344.633 99.3359 349.257 cv
98.9208 368.975 97.3168 388.861 95.9892 408.725 cv
95.2563 408.163 94.4975 407.627 93.8471 407.091 cv
89.4682 403.478 84.8207 400.453 80.0571 397.383 cv
77.6567 395.836 75.4316 395.811 73.5453 396.562 cv
73.2577 395.901 73.0405 395.212 72.7358 394.559 cv
69.9164 388.521 60.9633 390.735 59.3647 396.334 cv
59.3481 396.328 59.3315 396.32 59.3124 396.314 cv
57.9887 400.757 56.9233 405.296 55.9789 409.877 cv
53.6908 408.088 50.9819 406.873 48.2524 406.48 cv
47.852 405.189 47.4706 403.907 47.0053 402.57 cv
51.0302 401.778 54.4667 399.088 55.2743 394.079 cv
55.4501 392.99 55.538 391.915 55.706 390.827 cv
55.7079 390.828 55.7099 390.828 55.7118 390.829 cv
55.7118 390.817 55.7099 390.807 55.7099 390.796 cv
57.0151 382.342 58.1572 373.923 59.0077 365.54 cv
62.6518 362.701 65.8559 358.738 67.7856 354.034 cv
70.1147 348.362 65.6391 344.389 60.6698 343.732 cv
60.9018 342.852 61.1596 341.968 61.414 341.085 cv
62.0048 342.167 63.0458 342.995 64.6596 342.995 cv
69.7392 342.995 69.7485 335.098 64.6596 335.098 cv
64.0629 335.098 63.5527 335.224 63.0966 335.415 cv
63.663 333.539 64.162 331.848 64.4184 330.666 cv
66.645 320.415 69.2509 310.279 72.2421 300.226 cv
72.3207 299.958 72.4164 299.695 72.4965 299.428 cv
73.0463 299.1 73.54 298.653 73.85 297.918 cv
80.2177 282.837 87.4286 268.371 95.311 254.22 cv
91.3715 267.733 87.9672 281.558 84.9887 295.655 cv
74.8281 322.908 70.5785 352.153 66.5512 380.833 cv
65.4726 388.504 77.1967 391.847 78.3183 384.079 cv
82.7714 353.246 90.3061 322.786 93.4506 291.788 cv
93.6298 290.017 92.6542 289.044 91.3979 288.713 cv
102.458 254.477 118.073 221.92 135.773 190.454 cv
136.88 188.543 138.049 186.51 139.245 184.454 cv
139.361 184.33 139.505 184.29 139.615 184.149 cv
155.135 164.306 172.177 145.885 191.183 129.321 cv
209.521 113.34 233.835 100.694 248.9 81.5072 cv
251.746 77.8822 249.191 72.7186 244.361 73.7074 cv
243.424 73.8993 242.517 74.2611 241.59 74.4994 cv
243.646 72.6034 li
244.161 72.1298 243.405 71.3959 242.884 71.8417 cv
241.551 72.9857 240.216 74.1293 238.883 75.2724 cv
217.319 81.8793 197.898 100.251 182.164 115.225 cv
181.917 115.46 181.691 115.714 181.445 115.951 cv
182.972 113.575 184.472 111.136 185.999 108.766 cv
187.203 106.899 184.576 105.099 183.039 106.483 cv
179.059 110.066 175.266 113.743 171.577 117.473 cv
184.266 102.264 197.482 87.3607 211.621 73.5839 cv
231.304 64.6972 256.445 60.7196 270.263 45.7963 cv
cp
f
117.781 480.11 mo
117.455 478.759 116.124 477.114 116.194 475.783 cv
116.283 474.081 114.259 472.313 112.558 473.014 cv
111.798 473.327 111.138 473.752 110.486 474.186 cv
110.123 472.172 109.762 470.159 109.4 468.145 cv
108.573 463.552 101.122 464.632 101.291 469.243 cv
101.456 473.756 101.501 478.254 101.542 482.756 cv
101.576 486.493 103.41 490.346 107.007 491.832 cv
111.408 493.652 116.637 490.459 117.863 485.994 cv
118.373 484.135 118.227 481.961 117.781 480.11 cv
cp
f
149.711 442.327 mo
148.554 438.576 143.799 438.542 140.616 438.333 cv
138.518 438.195 136.351 437.976 134.255 437.949 cv
131.666 437.912 129.291 439.199 127.065 440.416 cv
120.215 444.161 126.244 454.173 133.134 450.799 cv
134.068 450.342 135.061 450.058 135.99 449.599 cv
136.989 449.104 137.759 448.276 138.74 447.781 cv
140.945 446.668 142.867 447.369 145.13 447.137 cv
147.602 446.885 150.602 445.223 149.711 442.327 cv
cp
f
178.24 397.01 mo
177.376 395.222 174.813 394.746 173.205 395.69 cv
172.348 396.194 171.644 396.553 170.848 397.196 cv
170.837 397.205 170.835 397.208 170.824 397.217 cv
170.717 397.225 170.629 397.224 170.446 397.263 cv
168.52 397.668 166.35 399.714 164.83 400.903 cv
162.379 402.824 160.014 404.705 156.673 404.141 cv
151.158 403.209 146.562 411.15 152.524 413.983 cv
158.492 416.819 165.961 417.291 171.968 414.167 cv
178.33 410.857 181.405 403.568 178.24 397.01 cv
cp
f
207.521 322.954 mo
204.704 321.423 201.791 321.186 198.643 321.711 cv
195.308 322.266 193.998 323.81 190.843 321.593 cv
189.706 320.797 187.61 320.754 186.479 321.593 cv
183.215 324.021 180.594 326.839 178.953 330.604 cv
174.127 341.674 192.047 343.76 191.329 333.956 cv
191.243 332.801 191.254 331.743 191.402 330.711 cv
193.563 331.679 195.552 332.923 197.953 333.65 cv
201.916 334.85 205.485 333.939 208.607 331.39 cv
211.275 329.212 210.335 324.484 207.521 322.954 cv
cp
f
236.712 196.616 mo
236.419 195.473 234.962 194.834 233.943 195.489 cv
232.495 196.421 229.804 196.486 228.144 196.603 cv
226.424 196.726 223.199 196.86 222.543 196.556 cv
213.876 192.519 206.506 204.438 214.934 209.573 cv
220.386 212.893 226.787 213.283 232.102 209.554 cv
236.647 206.366 238.053 201.814 236.712 196.616 cv
cp
f
286.181 154.117 mo
279.233 152.58 273.677 157.232 269.525 162.308 cv
266.766 165.68 266.225 170.429 269.525 173.728 cv
272.615 176.819 277.859 176.829 280.948 173.728 cv
284.689 169.974 289.073 168.006 291.12 162.816 cv
292.476 159.382 289.613 154.877 286.181 154.117 cv
cp
f
272.523 250.036 mo
271.701 248.849 270.993 247.584 270.252 246.344 cv
266.302 239.72 255.909 240.995 253.851 248.488 cv
251.921 255.512 260.442 263.406 267.033 258.621 cv
268.347 257.667 269.641 256.68 271.011 255.807 cv
272.821 254.654 273.864 251.97 272.523 250.036 cv
cp
f
290.849 298.332 mo
288.747 295.99 286.143 296.288 283.836 297.59 cv
280.757 298.572 278.572 300.473 275.76 302.107 cv
275.477 302.27 275.414 302.325 275.392 302.356 cv
275.335 302.376 275.363 302.363 275.289 302.391 cv
274.537 302.679 273.757 302.809 272.983 302.998 cv
273.748 302.813 273.287 302.884 272.847 302.888 cv
272.557 302.792 271.235 302.501 271.187 302.486 cv
260.147 299 255.423 316.322 266.416 319.793 cv
274.707 322.41 286.119 319.725 290.969 312.018 cv
293.448 308.08 294.179 302.038 290.849 298.332 cv
cp
f
291.735 386.2 mo
289.434 385.478 287.058 385.582 284.76 386.189 cv
284.717 386.2 284.649 386.223 284.599 386.239 cv
283.672 384.068 282.909 381.831 282.103 379.613 cv
279.933 373.636 270.321 374.125 270.469 381.188 cv
270.641 389.334 267.91 400.865 276.454 405.794 cv
280.869 408.342 285.883 408.387 290.439 406.042 cv
294.655 403.873 298.555 399.441 297.962 394.38 cv
297.506 390.484 295.622 387.423 291.735 386.2 cv
cp
f
197.295 494.157 mo
197.366 494.157 li
197.274 494.122 197.173 494.123 197.08 494.093 cv
196.835 494.044 196.609 493.963 196.358 493.934 cv
195.038 493.62 193.668 493.498 192.314 493.491 cv
191.6 493.487 190.808 493.344 190.718 493.415 cv
188.431 492.162 186.726 489.871 185.049 487.9 cv
181.749 484.022 175.118 484.505 171.723 487.9 cv
167.765 491.86 168.577 497.204 171.723 501.225 cv
175.371 505.884 179.627 510.309 185.451 512.122 cv
188.054 512.934 190.91 513.282 193.614 512.867 cv
195.395 512.595 196.908 512.124 198.498 511.17 cv
199.291 510.652 200.047 510.081 200.765 509.459 cv
202.367 507.424 202.718 506.958 201.821 508.059 cv
207.065 502.732 203.313 495.532 197.295 494.157 cv
cp
f
143.717 579.199 mo
142.582 577.94 140.597 577.499 139.002 577.952 cv
137.383 578.411 136.334 579.148 134.872 579.928 cv
133.851 580.782 133.831 580.795 134.809 579.969 cv
133.807 580.338 132.834 580.775 131.896 581.278 cv
130.752 581.655 131.621 581.527 130.195 581.62 cv
129.608 581.659 126.68 581.3 127.381 581.546 cv
122.76 579.918 122.012 569.505 120.471 564.9 cv
118.772 559.827 110.127 560.283 110.6 566.236 cv
111.108 572.659 109.607 579.197 110.919 585.547 cv
112.357 592.489 117.138 597.792 124.021 599.669 cv
130.206 601.356 137.088 599.218 141.741 594.893 cv
145.917 591.01 147.948 583.889 143.717 579.199 cv
cp
f
165.856 609.206 mo
162.493 603.628 156.604 602.909 150.769 601.478 cv
141.165 599.123 137.864 612.574 146.761 616.015 cv
149.339 617.012 151.953 618.282 154.626 618.982 cv
157.849 619.824 160.596 619.182 163.585 617.872 cv
166.694 616.511 167.462 611.87 165.856 609.206 cv
cp
f
181.82 611.134 mo
179.05 607.78 174.054 612.661 176.997 615.956 cv
179.747 619.036 182.163 622.577 185.941 624.41 cv
187.605 625.215 189.852 623.871 189.239 621.876 cv
187.926 617.619 184.61 614.512 181.82 611.134 cv
cp
f
290.877 521.62 mo
285.816 523.804 282.294 528.96 277.483 523.215 cv
272.815 517.64 263.123 525.024 267.335 531.044 cv
271.364 536.802 277.668 540.534 284.87 539.905 cv
291.688 539.308 300.096 534.285 299.168 526.376 cv
298.65 521.964 294.947 519.863 290.877 521.62 cv
cp
f
271.832 578.069 mo
272.441 580.078 272.578 580.184 272.243 578.387 cv
271.95 577.077 271.499 576.312 270.678 575.249 cv
269.762 574.065 267.738 574.036 266.545 574.715 cv
266.367 574.818 266.197 574.91 266.027 575.013 cv
265.533 575.014 265.029 574.971 264.567 575.016 cv
264.299 575.043 263.456 575.269 262.94 575.355 cv
259.183 569.92 249.629 573.733 251.747 580.519 cv
253.71 586.807 260.685 591.744 267.337 588.941 cv
270.648 587.546 273.081 584.094 272.585 580.43 cv
272.546 579.585 272.295 578.798 271.832 578.069 cv
cp
f
321.771 463.707 mo
318.014 461.512 313.276 465.411 310.872 467.821 cv
307.478 471.224 308.25 477.103 312.379 479.52 cv
316.611 481.996 321.865 479.622 323.319 475.068 cv
324.34 471.877 325.456 465.861 321.771 463.707 cv
cp
f
349.654 356.116 mo
349.018 354.426 348.456 352.309 347.156 351.011 cv
345.544 349.397 343.215 348.283 341.31 347.053 cv
332.775 341.539 325.839 357.417 335.916 359.846 cv
337.917 360.329 340.029 361.064 342.078 361.224 cv
344.092 361.381 345.7 360.635 347.522 359.87 cv
348.932 359.278 350.291 357.817 349.654 356.116 cv
cp
f
373.689 371.353 mo
373.558 371.322 373.599 371.329 373.816 371.375 cv
370.622 365.733 362.565 365.47 358.723 370.449 cv
355.225 374.984 356.876 383.9 363.477 384.822 cv
366.461 385.238 369.007 385.401 371.959 384.58 cv
378.153 382.858 378.832 374.679 373.689 371.353 cv
cp
f
521.207 645.137 mo
509.985 636.063 497.521 632.033 483.456 640.14 cv
467.685 649.233 452.605 660.235 437.271 670.218 cv
426.432 663.504 417.14 654.57 406.417 647.977 cv
401.098 644.707 396.659 643.17 390.367 645.157 cv
380.351 648.32 370.914 658.358 362.548 664.538 cv
352.122 672.243 341.697 679.947 331.273 687.65 cv
319.16 676.701 304.402 659.721 287.953 661.471 cv
267.743 663.62 250.287 674.668 231.554 681.158 cv
225.638 670.346 217.77 661.973 205.04 658.127 cv
188.705 653.191 178.642 666.075 165.852 665.721 cv
153.318 665.375 146.307 646.766 131.848 645.223 cv
112.749 643.183 105.507 665.761 84.0556 661.424 cv
86.3056 661.88 62.2465 648.856 62.9067 649.328 cv
54.6684 643.441 65.9867 657.662 53.1952 642.694 cv
51.2753 640.448 45.2021 621.174 44.6718 619.174 cv
36.9531 590.086 44.3779 554.949 45.9662 525.115 cv
47.8842 489.088 49.6274 453.055 51.2646 417.015 cv
51.6073 409.464 44.1015 403.398 36.9443 403.954 cv
38.769 369.815 40.5932 335.675 42.4198 301.536 cv
42.7582 295.191 38.7006 291.104 33.6235 289.576 cv
40.7377 270.999 48.7377 252.867 57.768 235.018 cv
60.4115 229.797 59.4155 224.148 56.3012 220.245 cv
87.1103 167.222 121.426 114.302 172.756 79.2689 cv
230.134 40.1063 299.951 25.6439 368.313 36.0419 cv
375.146 37.0805 381.647 33.7787 383.942 28.0619 cv
421.893 33.3114 450.591 42.7226 475.963 77.1635 cv
479.137 81.4721 501.604 115.442 512.537 135.604 cv
505.108 136.61 498.566 143.433 501.302 151.729 cv
513.499 188.704 524.997 225.873 535.964 263.225 cv
535.862 263.239 535.76 263.254 535.655 263.268 cv
527.13 263.768 520.846 271.218 523.042 279.824 cv
529.267 304.207 537.808 327.338 548.673 349.696 cv
543.477 352.303 539.885 357.674 542.212 364.167 cv
550.486 387.247 554.133 409.628 553.599 433.275 cv
553.488 433.223 553.375 433.17 553.262 433.119 cv
544.326 426.168 531.664 430.292 530.934 442.369 cv
528.552 481.792 531.956 520.566 540.788 559.025 cv
540.522 560.67 540.549 562.457 541.009 564.388 cv
544.33 578.309 551.606 601.488 547.387 614.843 cv
546.012 619.19 541.642 623.157 540.09 627.914 cv
539.174 630.718 538.916 635.621 538.174 640.052 cv
536.882 639.837 535.579 639.69 534.131 639.683 cv
528.339 639.653 525.18 642.953 521.207 645.137 cv
cp
573.83 375.677 mo
582.383 374.126 585.457 363.258 581.647 356.464 cv
569.117 334.136 559.667 311.428 552.436 287.313 cv
553.322 287.134 554.148 286.983 555.119 286.772 cv
562.313 285.214 565.028 279.509 564.428 273.882 cv
565.028 271.799 565.115 269.442 564.349 266.806 cv
554.829 234.005 544.709 201.406 534.244 168.904 cv
536.931 167.908 539.332 166.088 540.954 163.416 cv
547.383 152.822 542.899 146.3 538.506 135.715 cv
526.596 107.037 508.622 76.6952 490.481 51.3891 cv
461.016 10.2851 417.31 5.46572 369.143 .0658134 cv
363.4 -.57823 358.983 3.58388 357.139 8.61611 cv
292.257 2.2787 227.235 14.869 170.868 49.371 cv
103.715 90.4745 61.7079 157.926 23.5546 224.682 cv
20.2724 230.422 22.0307 236.659 26.12 240.531 cv
16.4701 261.246 8.01507 282.275 .615162 304.102 cv
-2.44978 313.139 6.48626 321.743 15.2548 320.383 cv
13.4369 354.396 11.6166 388.409 9.79876 422.422 cv
9.61126 425.945 10.6503 428.683 12.3574 430.729 cv
14.037 436.036 18.5351 440.297 23.976 440.235 cv
22.7841 465.759 21.5942 491.283 20.2509 516.8 cv
18.6884 546.471 7.83391 587.899 14.6142 616.544 cv
18.122 631.378 24.8534 654.507 33.4535 667.113 cv
41.2958 678.612 47.8564 673.861 57.4614 678.732 cv
58.6196 678.576 59.7773 678.42 60.9374 678.265 cv
65.391 675.159 67.5175 677.533 67.3217 685.383 cv
72.7328 688.394 72.5585 691.159 80.624 693.836 cv
93.7607 698.197 101.35 690.594 112.849 685.786 cv
141.981 673.605 134.53 690.758 155.413 695.264 cv
171.37 698.705 199.838 675.003 211.142 698.579 cv
212.24 700.87 213.711 702.444 215.35 703.531 cv
218.058 707.816 222.954 710.673 229.293 709.142 cv
244.365 705.504 257.931 697.206 272.713 692.461 cv
279.7 690.22 285.62 687.478 292.885 689.916 cv
300.436 692.45 309.996 704.02 316.21 709.142 cv
319.365 711.743 322.86 712.585 326.151 712.248 cv
329.751 715.854 335.094 717.167 340.556 713.131 cv
358.188 700.102 376.415 682.954 395.787 671.811 cv
399.346 674.478 403.145 678.846 406.039 680.986 cv
412.269 685.587 418.715 689.72 425.374 693.672 cv
428.446 695.498 431.441 695.864 434.142 695.316 cv
437.663 697.62 442.231 698.13 446.951 695.122 cv
456.903 688.779 466.891 682.489 476.798 676.076 cv
486.35 669.893 496.612 657.566 507.083 667.445 cv
509.781 669.991 512.78 671.013 515.692 671.037 cv
518.138 672.245 521.074 672.703 524.437 671.881 cv
526.393 671.404 534.506 666.179 533.073 666.312 cv
535.577 666.078 540.435 670.798 544.198 670.644 cv
555.997 670.16 560.293 657.242 562.556 647.683 cv
565.554 635.037 573.289 625.936 573.634 612.815 cv
574.111 594.799 570.622 576.085 566.492 558.604 cv
566.744 556.991 566.727 555.247 566.288 553.363 cv
559.327 523.473 556.157 493.484 556.432 463.078 cv
556.611 463.13 556.762 463.199 556.943 463.249 cv
559.932 464.085 562.599 463.901 564.872 463.032 cv
571.248 462.789 577.862 458.648 578.711 450.582 cv
581.426 424.785 579.535 400.21 573.128 375.796 cv
573.374 375.751 573.575 375.724 573.83 375.677 cv
cp
.25098 .247059 .223529 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (body.eps)
%%CreationDate: 2/20/2018 10:08 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BoaR^E@(IpJbfoO$NY:>QjWQn?\7n=J@qAi#?#BBW>Q;bTM_dc2JZ8bUUn#ccEA<Oa5#H5il96>W[Ni`Pu1\Pkr0Abbfu0M
%nWTU3hu<--S!S'-h7rp??gNB&]:V0Ogs3H=f_p1)e$C]Vnrph<q:iOMf-fFb1$dN1bnO(.\RD(J`]6i-mNt_>_SsR)07J.opZDF@
%n(tdgqu6K1gK/=NIK,5]i@iO7m!ep2>P[@Ume:q/?G6=/DZB"tMgpk)DLWP<5/2JfGCKGWp%.piGVcRDr0eH%j7dSZg]5*q4am:P
%f@'<Ah>?rp5Ii^Js2f3ZDVmZV>'^&<T7;4^mE=tU^O,tZjkD`oj(C@Ep6SWprRK_Jch.CNfe7M(%D/7TLV)U&+.rT&lFfB&f?TOd
%hu@MJ>Pp^thgC3Fms.ot#C0W>Pf)aJCP*WlGPKcb]DN,Qqq\cOoJp9-H,MMOSe-\5']`b2/oVU;5g)sV8^-,]mTtD;lM:<=Y$rIC
%:#md92r9M!?lMg`Tr\JPOq2K:+1_#]\FE];gj,N1dY,WuVOKU.WEe"Ts6dpoGCTV2mdKV9Irk@e/Fr2?pKtW3?a?%BO#K8HH'_dG
%M*bA,K\udulL*Im^3TN\ju'G]es6+)gMcLdaZQpLSR4PCg3;#]s2u:pHiEHf]D"Y4DdWHnKu3'@Z[_c/orjtejUPhcb!UXLh;+RX
%^&;m9o$=3JKZ&;qAXT&soXj'OaF05^TA=%93^oG@HS1Z!g`<l@NU.84'jh<aroW%[DdU6S`JeNSaVS.[]6>pCBr%9s0'e#"ohFkg
%BDX<0Q5OrIrpGaT_YLAG^[=#!E:`D!atnM@V]T7FiQ^t\R)&gH-UU8)p9HR4*1suqrem>>-5kInhu2kYs-NJ(hohpMI#TBMNtME<
%1]BTYXE>NQEua`739&D,e5+D'?ETX6LsohO?SUQI(i``<kHiudSoN%<j.'8dGkjJ^[!BZ*p^R8`[)2pB*=fUOE53iV"3rp!n`fih
%,;29REPhOQ(MTeTbM"1hVLFCqmIP=^bOG\4@9iRLVdWgg>5\k^_Z)S#K>RX.]1n&eN,dg+r.RGqJ)!XD95feUiI?k.^RuJ)_GbSP
%[0JZ#6c8p`kBoagXV*_!1Tb_t;hb8E;B<F\5eF55e*"(/[T%F-Ic3,B&c^ll\r\snrN%OiI_f_8UTLmuNF%Puid^l[!@f,Js3c0L
%iI@AP1#d[g9I1LG>jVQ`Bsb\$)^X1cBbtp[ELKXoc&I`i#JeW#fC[12Dd,+_`P-:$#&#iN!V17O\UKJlid[Jq[#Qm+]]d?0+6R$^
%Ek,&Xm3J5dI>1Y2Og>XZd2b<P,bmb9S&ElYB4(P6F0ABja^aLN@;L>FI@OoqfA#U#oQ0s\S_&k$Pc\`)';W)so1MZcm=)`<0"9Zk
%p6eWUgBU@8[Kd]so(#7E[e&6ggK_5<5bDjRH$Pkll`PB`Suam%9*(CKKqF'!](4srIaii3f/2aLmAGETjWS;9ql*pOl/1m+Ic[Y\
%k?OXNbLc-`Iaii3f7'oQ\"ELCQQM:Be:-]7l(ig<TDCFpYJTJ-LA5--=9#_DoI%ZBVo'4o7ndOa_>,AVqfGNPgO,L:`uq;>2mf4u
%T?>I^ro`BV3ZeV&`CK_aq32B!pjAT0]emlKSU>bWC"hTkr05AtF21`';(hCK6uFG$n;plN6#Od`NX*6@+#oP/ETn-dnlmbSI"WQ"
%1S004rGXs35sNE+SgL!MNZGl,e#iThA%aSL.*KtZ;OpN%^?'D4<TfMelRBlgh'U>AJX_t-;4`MFcaIY[*`m6Y\&cabh:(+Ng/#90
%m#sQJS^6P6j4=%bmrI8:6"*e$_Eu??*bqSpn^GL,/E?=[[WIV]52jW3(6,83`biQpDbl.p55bV)<2(ee5HI>$Ab7,rdFr7YBM4qC
%YjpF`ZTlK7+^qSo5+SLnZ/`sLms`[PqsN$`Z*rl3d?F9?3Uo4jpMe]S3!;E.O#m!rcfM+Whq$)XGGCMLHKK,9*+-23>k:)3kbSfH
%1VXtg<dln6b8&@jmlL&UU?HeE7d@7DP3t4\1?Y8cDkk=:f]qerdGNW8/Qt-"Z!ZB&`l@*86)gR*!iHOWd$"NX+@KpnkL"0j8K4`/
%^6k9<hsK[p]Q@q"\"YTN'#mKL`9+uDVPfA/0$!&.7l'i;XI[rP_^0>?MNg-B2Hjr4CtH"2fJ[:OIG`4#(/n1.Yq;c!=P1(Sm$r3a
%FR%0M:0LCl+lhVV[OOAAdb+d_=V5]+Y2hu*JI-CqDMOA2Z+H6Fn.Ya[[(f6u06Z+chNPF*LbrI64'^.!Dq$B;40j@`jDJqGWLLIc
%B?@#G3_G-KD;$[VL$JM_^1PYlBG&_V8Fsb5_P!H];U:ej.C9E2T*IAu<j".Abm@XZWQ(lP;itu;ZE0rd\#2?I)cV#@5G$m(P>CY9
%VJb(icsT(`-Jrmt[%Yk)%#eig7(7!'aR5N1[c?n9T+=cXK$Q[G>8Nd"Q`argikjs**N-69LB7W<([g#DE\Y\7Fc0SfFkc6o>r9C>
%$&uBmF]u3E(IVs]@VaK:$1*JVUHX5P/,j_r>qLl`:2`gp)_!1S/6$WSBsYl?@mF6SYYDEVm(S\P70mh9`Cn$`[k7_c`P-M[&uIoi
%o^&eJXsW[]h%/ghff.V;!F([Gb3/4@cZCSE37uT(\4Ag0q&P`])XCQ>D>i/\?u*N<b$>JMXbbU]eM&6%9L2K=dL.SA7Nak[?^!g5
%au&kiRUd@Y]Pl+tG&]_/ELXG?@GuMAfQiuhZ.jtA^qJmH]SoE=ZA".qM;/h9GPUqYlpkAYs3\o$)c8+c=++,]>hF\`k-p%M4B>8n
%`*&e`L5alA9%s]qK'#dG`;i.KD6?qWJ3V6++#DA,AP*sZaNBr03,Q7!"#jc@6W$@FG.QbNl\U!'ZFV[OMWpljK?*tm@\U)bJZ+tm
%mA".Q2.X5X!Df).qe=9tfYp!eG3`d2%<sqFh&'N)`tmRPF-jP+:LCHgHbYd'Dt&Ti`]`nIOKN!FXJk^>d"QA[94W%!B8Zgdeam<$
%hgI;A9.gA>@hc'e&G^l93aon+aih-SMU#!ON,15+3qH"(og(-Akk@ncrpb*e@uj5?_m*s\di*Vd2pe^ams^E]Z<=6<=+;8"A(AjT
%K7"<nEr]e6.?G'?JiZO!dg#1eKl&l9SaGFS3)7f$Q5o'bhdu-`X`,-S_W(Y!dpZ_s5aZ]X!Z_-Cde,n<-$RW<b<3!F/c^0,7)Q,E
%6*'Z,dH&[AM5&0EO;rFkHMYkCU[k3qFB\*`C*DKg*j+H\'XR0D:TAqM^R%a%mBOXp='K8GMDrr."^kDDotV@-oh,^fJMqB`l[6H1
%qHiAt^,kk/C;4n-`ih0MbgDW>d*<%?Q!)q3N%:V_0C20+bLpf=WHQ#"DDpm]0X,)Y26p6h[t$s0U>u4,A*[d8S>\`GS&Cg:r_bIV
%c[Ve&/MsXo.`83:V"#\Tr7,Ah@RXFVaCS:K"EZ>teb$YaLIt[YMO"tOD,IpiG93f1IB#?0)3Ym%Xm1au(#!$ngtjg#fs-9JFtD*V
%0@bU]d<sS[]DShCN."@n&)/&"fF(bIj?XM?/C[u0l"rS@Z*?k41im9X>*a+*<2*+]RhVp6ruj+:Bi8dH3:4.gR*'9t.WB/!XGMfd
%7.k4JEE.CjYGqYBDMlWNa5ONTo4TRQ90mP>KuS>+25g7FN(k0m?$.V[;8+]LB1p"<Ar47(X?2app@_("Y\ajrVFKklc.c.PDlMCg
%^<`?o]X4*9I@qqGI`lh;UJOrn&S3=:eU%sk;B;[rE)snZQ&gQCK-0SW4D(;0I'<7^8f>1HLfQ4HQ+>/Q^Uu<Ph(Stec&PYSUH14m
%^41NLjr_!FD!!C5bC)V0N]/gL2@+\B[r&b8`_CP+]LE4IGWu'L%nIqpX'8&_/tpnq5F(MmWX`S_M_K^(=F/sFpFXMn2s_2O:PT+J
%c?[!MWqo#nR"-c"AF$jA<B;D5>:T>%jcD;0>&3o</^C,Ze_1+Mn+JcWi2Qp%YBSpQ7b)L0e?m:HF::Ciej,W3JLR'[J$)l9*m7,t
%-Jl)%$R(5l2M^s82@p\-)30\*[#ls]X>[3SHVq^ti>T.&k.SHV#iR14nFUN:?9>p_E'6.i0C!';;5_%E,!9;$853*`^s'fmVSokO
%`@bm(`sjJ-A*VH^RK!Gn=R234!G7+!k%ZGo@4?%S9<Yt/_*D:mP<t#Ydn5sP,Ts.$j,,J<>K8?KY9J%=D-FS<n,:WC;c_kQZObuu
%OtuuMpO4c7fL!;j/5Xl09H#H@bsIb2@1(!gROcdoNi=7g=VWeFR8E_[?tPtuU"OGkCAVjcg.a<roi#n].]eH;?QW@eFUI%Ub@8VF
%0%KpdE"u7E3!-iR$.,;SpA*a3a/,P7jrW5EgbNH7VQGPe.q5`Ud,"Y/>*&J^?!9n^?l1L:+-Jm)+]ZDk/SM=Kf6i3hl<GnsY7$+S
%H^sBsW.e.[FDW`K;W_D=Zjbc,"08;[6aafi,Ci'u6ZeeikXqipH\:$>BWmH0p[(-[eX?*GeZd!'=NWUlbc,Pilt,U;NYRJ!ka^<:
%0AO^kdkB:#\?92r?89m16u3+J;9_nUYu4F>(6C6>\k]"_2jjLAej9Es5e0%u9Q@Knf="?f;@ROq%*tUb3oNE/G+46I(@q0Mn"S"X
%PP"VHbRMbA:!+G;q/q)fj^)n7&-^\=\9d2(@2mrPLU1,9T;$u[/2X^'s7Y\W)mq-0pFA_Z(/^WneuDhIeY:nr@pGsMfV`uOfA!:1
%b/ZTn)!5d^:_gQrm#9D%GVF8`9=53-4Ie.C2,#WER5]BHV<3*Kqn-I)LC8M"TRp]a0:!4TVNaq84#M[)[@5BN$2RkYPHkqQ<qP=U
%&W;m-HY@P'bLLGSK7sj44kmc:W<]mEZ?#*+qP@B,clZ]i=`;Gu5:`Vu&B,m4'3*nq>*8,gUM?b<L+h-8CPcS\qN:cd8#$H]qeb;6
%77`,AjQiB%ARNnpSU69<oo-9RI`Q."+KsPr=bQE66uDM+bFacBG8n]TR$6D,K/#N(dl`<L*dtRNdZY(M[W!h>Z304E&f"rD%d+A/
%PYTgp?eOcAh%klXmpUS!dN=^",dG@6kAsXk:5bNi4Jm@2iAqW?_&Zh9HKO\N;9`_)@`aPqNqcBDHd,H=U<s++)>1H$^"=qEUWSo2
%e<qC`<K7L@jJCPm&VA,d[uY.W12,`@L/&IQl*siN.r0/SAIc.;Y;3@f5<VsHrQ'u(P!317Rmh#6Fc&n7.7!<T#A[/enGXc<Z]BF5
%n7,Fk5!-ef'WYC&.^D/.&NEBbf^JQ:W%[:]6bXWa7W\7Neb=^i]&k;:S>.,s>FQ*D1s4Nq,])k'.c2%7BQrHIn5KqV[^M.,(+m:_
%3:tL[k$,WH+,UAC]-=g^,\7\_>tUMPgM:"'ea$'<CFNchGSaT(emrK\HaJ18r0]F_?`d7dZX($^FG.8j1A8Br!HRF*L"t-7+k<P/
%r"'1ln[c,BTrB2Ng!\G>aeh^@lG_8!.+RifGDJkZA/:<(c;G[,='+;\?C*JLVehXAI;nFUkj/Ng>9/1$@AKYQ0Wt:n;6J5eVf/00
%8XW*<]1+sl)tasHYeRdbWJ4_8\Fn$CN%O1r?X(s;NTmHb<oU#nR<(ssXgkNVqE^[Lo?e:/DkjG#")N^qV'8s"YSL0k/^11Yoncnm
%Uri!2pttgo+_@*AWIp$CMf;e"8TUOH)ATGm"9JqY`k:bAOLVE/=Li\EqfuUh1BY7D8<n>eFWIIfdI(AO17tuWma36-;:u3hs&GH9
%dM$p;"EQF8Tadp$"?(SR,26QTPNXsGI66@R)$.]6>g5]p`cL7]/+:^t:[$A!=ba'OcGWYJW-\:C1Okg9eC[1Qbcm/:R'#&.DX1r$
%G+ms\(ZffrU@UtQqmkd(ft<\d_"`oR168f)oo,or4F^YT&9cHkks")),Va9FdE:Pt#-%n-8>TiCAXWirTl3;$gF3siRXaVK.i'oE
%hhEnhmfZJC]pkjE61\!l;E_b@r)<:^#FX*\?S);CI6VGh/.Be#!a?fZkf(4f:XJZ_q<MI"ec.1_2D$iF;'rL>:Y`tAGai+R^UDA(
%UQMBmSb3><Pf]ut6(<s^b(eT415E7q^BdV"[>e,_mo;WC)A$-PgbLO$niB]?qQ9A=/[N$A^Uju*`>1dJN-]&1emU,9#e!.r-El/2
%'A-EZ/S)9bS[ZKBeF:n:fQrrH]tPB!RW"]r(RAO/:0BL5WU2Sk7G^,fbuMo&c2#mAF"@jU;ZAgl(=mKS99<DfbTb0%%i/D=e9:.t
%Z:s>,Fa<g8Ea13Ves=^Ji[o/X!,03MPuP\&`>YbWn4ITVTk,oXYL!?@V2"<#]<-4%S,<3UBsI*,K_`eqe/BugCsho*&,i(ZQ`S#4
%1"4F:H=bE;e(>'3bLK`fR:E]S>CTu[ZqV^o>dqCZqOB.g\8<Kk6Gk];GhDMh>:*S.a7dNO.r^WUG+m)qrEKO;oW7sn+%KU]gI3Cb
%3kb,N>_a\6(gW0&[<R?To:DR[nA%)Z/ZfYRDc91'j_++:)F<4%]j%,?5WI(@K)H9njUHdKp<2NVKfW8lTNcHKMJXurrQ<;Br1Ar^
%/nY)d[.O%[[<LQ#mq2DXf-Cs4Mm1JuYT9RE5Yf#sb$.H4>QMC\C?KkV>N5`IVb5U]lgELok=$R]Q*ACNHG<,q/8uVu/[gU,("_]m
%2+2Ds1>BB6s79,6?2c[q9OZ;J!!u#K/TC)4H`-GhKCZV5,&/m/`:Y+]M<b1qrdEuIoqQp7h0rSJgUQ\$QJS@I>kJA/6A-iG(EVMW
%B<UZR]#bAB>Kk4,S)tbnVQ$8[-`17;B"]YPPFbrg:KuB$Vu\EOOE=i^k)`20Q<Fc6NU?/i.Tp[rF;_Ii/Ar3]9uWZ.IPsi2o3EtR
%>&+\&>?EhBe3C>5d%AjndXQYZLo<0UbnkYFML2:"-V;IN9'97;Z9TJ\Wa,+>?&(;`Y@:t?Hu)]/=6-\$'3`YWFQg0:IF4cr$l1MN
%9p[jslI&Ui>ZUgnAQJ't?U1Aec(]Q2jgj^NB=4a;/lE/Vo&sBZN:%,+oqX^``"0=DUZYfV8G@6Wd8XsD-OjkT%.'<2I'()1?IZcP
%NEBr+[<d]G6RkLcluPc\-/-PbYO1RdjBs:"WGu)O<M/^>Zq!EP19Rr8jge?gXDq'6ku$9Ic?'qB)cM`#WD6R&A[5d?4n4cA\!=<@
%^4!$#3qhZJT@N5:/8ORb4]cRKALD4s<-DR*9Aqe<X:OTT4bJ!J$*oqPU=KlE++-o(g]0?,2A_/HGpA#>HX\JWTe!/5C_=5Y8@Gua
%6C^62C5KtdXnj`JcVc?93ZA`Ca,bYr%_YU/V:9>WgY\<ca?M\uq$,CDbHH]1YOUl\eDAg"r*R0bqs*RXjjWo.5Psa6r=@dKdl.c@
%iTku<.i5jGKC]&g^A%s3/:[W[WupE?^O,_KL[T]fk)XGQIIYe@Dr1KPDYN&V?G(dbmcFJ[qe#Sl5Q"=Qj(Guro!KCJhn=C96LH"H
%f5ki$^\mM4&)?[PlM8'(SUN'?nk]/YR-TfWIsh.]Fh<45T&0BipZh-ih2V*?a5$4.=3obdJ%+GConL5-q4i?.>ir$A&guPLs//BC
%oBtH/hoW7p/j*chs*IN)5'kGJIeE9V`@]a9r8%67^O>i0=Kkl1Ic.8$hS-V4qq&H8meG>IgqA4-VtE2GlNc>?bNJ?o[+i@,Hh5MV
%FVaVq2T(o)D0sLJ&'nUrHMQs?kMQ7&jbqsoh%/ECC%o6KDdV&,DgYl`e:5K!E91RNqUJqZs5E@GQf#Q\O6Kl_Pj*JhimljdJ,0*B
%h;bFE0B[TSju74#IP+,f:08%bp>()/k"38d[s_GnC?nI^iI@Z$I.`(IZh9:=8+em=q>\7.fHQs%Gq#6W$A5qaS?Mqi>aW@2?N/o7
%NJ_HLj3'C=8ADq9iT9sK[Q!*XrXNk,g3rXlkMP*8kLc20[9JBh7ABGflfULI?^A6:[sul!nosPoJ+HR6jY'$?4T@mHf%]"Hrk&?J
%^Unh;O4eF.%D-Vhs5quNs8;5Ai?n=^q[pTR3%)A&a5N)q\]eDIGp1CN'1:&oieLs0"aE_QT7">%pPEe9F_59q_&Ips-9Ji[c>Km;
%GM)^s(j:.JQeVgaqt^(5DmTKCUO!P:8OpWfpZ%HZ6[Q(&2MsAd]0_<\rp]?f=*K/#qoub9Dn^q\>dl8@D\tr.8,P9"kZkoAo/q>[
%htT^57RqKUfoL\01sCTi77K<;n$=Zbj)'lf\fG_fXcm7^:N@H<rHuete`8a9@@lV$p9TrmaJXF0q^`iMP[g;jcRtc&;OEZ0AVt1o
%@rh)ja&.kFPZu)M2Z\Ul`A%]@O"Lo>+LN2eE0TAop2\6L7%6nkKJ:M6oh8>^ZQ,n-+GY&]RO<C!'QLuHb2K7,)TMAnP2eMCjH/>Z
%1IF1O-kF6fZ;t;Gh'g`.%fX]4,fe:SjOhXqlXc/A(R6/d_r]Huj==?&*!6[pFsf;1EpRASp+e'PC*AEZ7s%Rr-RXtk"jRQi3DP37
%qr&[Tqr(S9R7EPfnd*-4N_pngm#1n)X!8X+p$gd5G'WVeSMf')5NB?q-[q[QOn/)dru^=3h='J&G!GG,62*s2Y`Dn@r?qoJ"<B\`
%d].eDO9;Bg@>M?+8NB+FQti<8;U9`Vj!aP@O96k^9S=rf6(fBt+q.d7,GCl2500uV4l,ZT1nn'6Y$qm"`V#lW:fnclb)hp5U1n6n
%s!.AUQL?C)-i#uXE'P=.IicdqL*S8)ZS-tE:N@j@*oq[/mT6tn6C1Ot'=;K'$2Sat50npLnL\itX##._Y6XLZKKc,(h0q>o60Kg+
%jmCkq#\FcCSRo?,,Mka&&83pBKq)]B9Tom#T(^V^$t5A0P@]Li_b%j,b,CNJ_BGL^VFK7J=m#9'AEdW+8%]C(<p2+#29PbAi<[J,
%k#,6+Pa0Q]$&@9qm9+,@$cOBbU0F=jPL,nb/NCjO-!=KclKK_XmuF/:@Y@U@ht_MDg`MSI\YEu=nJ$5d;\JeFHTI[WEp2+X[ZD:0
%JAiX0&^m)nqsHG8:\?\fFTsH0Lk`eJ&V6=HN$OB2"I;Sp1EG7t'&eu6LjKYCFPm<IaYnZE5fV-a&9>eBX\?a+7"-Dn4C_HVI<odd
%M+eX@VDTr;I?.9o1?;o73H<Kl^#MR$pTd9DHBB.$irRr*HYui"gCq"PV\^;$/<_%`Z@\T]9_PSBNE]Y<Bp[k5S9]&q=TIE&Z3ZX6
%Te$?_6AC"Ca^X1[,Ner\)'-NSKKk@TOQ@)BbN6PAaY[GQZ:sI]>:M2RE-C<D_N!lEahBoZ@a?%&D'.H/Z65NB13H7j(d'j8a5M't
%N8UTjoSk,'HjSV,6t?r%N2ah8M4chIP9*:gGVlq2j+bRn`Wct/lIbY64GGBe$ah?l306S!5\"1B6:#!'O9Zt"aB7q>>g-8`On$Y+
%6[Q/=$[XpS^e/l8m0WFlEslMr7XmmY4Ui;Ep2i9W%P&igZ'#`R-@9JYoN3Qj=,Q?Yd\sILb<hW*3^O,XTo!!a,rTS(Bq9p'][5%K
%1j'F?3=(o+b%%ad4j)8M6BMgI",.1Pbe=@LZkq489/KMI3!tq74:MARQJs0h3%6OlO:_JG*"!+*&F!U/`/!taAdcK9<[K%iBETRf
%:gfZp3696-83f.&$3q:T"%C(h_Vg_h+Q;.;'qdO<P>_K/[fr'c_NL#cn:?\^-ks9@,fp4Q9EZV9!Js&N!0Vb],6/s^5S6KtU@:OD
%#;*:c*?tT?6B.aVG6!U?;NRrc!<*<.GD63D"p=Z*:^)D3_gjh$J6UD#,B'BNq]ftkS@"(9e+C_!VS*TK-kmr)#gX&sdeCK48E2D`
%SZ"a2??f<s3Q%[/n6sp5;$$I42fG;&^ADO:D/$kg64MR`QeMaD"q6?5_$<99egro_+FMfJ7[SjY!@8_=.g%.m6=@,2gTb4A-tKk)
%&j6P-E'h3'aB4ge&G;0Q_3=,8ea>k<-p+!@5\FO2Z:eVl@$;7l@j4S$P9$5gr5rV/nZ0OY"E,r8:#q&GlAWuM;j#$>.uTUn<S3fl
%Jl`h\Z8uQ?b3kMQV98KMj/Xgme3gI"1.#K*m5UBkC^5W;GI[$-#f'dej5r(%3Pt>0)ngF5X%0aMa;qI4Q9X_t4$NZ1q([Z[nPSI4
%rqLl]CM.b#N>%m=;X6$>EY?)ALgE0[2,)<$(BF]rii.VWEgME7[Bg.K;++\8LCoOj7"-[lAu&Ij#l4i"$G6JJb62p6!kB!?NH1OS
%Ss.9=#h;=F)cUk]BZ>H=/DF5sVLVA!=9W1T&>L]t4DJ5rfWhCX"c=07)[dKu>cNQiG0Csd].F!la.XQpSsL=.dt?"aW%*Me31QoG
%eW00k@p0o3iZNH@%HuN.*e!*ma;sjcO88cBmeFR8:H]bIa%(X$*C')GIuZTS`)/REP(h,Rh86&J3jc1?57o_#r$2Q(cE[UB=p)0g
%QK\Ni#ND%Ce,mV:;-BEf.!GMV<'jZN5uRlhEtmX`4]f1j?p#,\n$M((A*#1T@Xp&RbR?XI3LQ%3H&H\Z76o,ed'ubLrIgrAK`X58
%Ht7WeP/jXac%=t(N`pCm-/VjFTT*I#H&>>cEEqc)d;^YHj!FH2s1$A'*p.bjFF:g_^XXA)?0nbt*9mYDGtc_t,.X-4ZWg92@-9cG
%AAS<,D,]D21]7I^5toG[]Poi<VG&%TW49qcbq(?B")]mT,aoSf>81D!9lfImh+2u""GI;XL9NK(do^G"M-pJo!R+e])Rndf_WS_r
%&iI.dL+I@(R]sTX9P[9(2mbEi#,n%b&WuX_<6V07V-HQ.L!!JUA(Vj32)PS=1pKgIU:)@)!M-9*<k[YFCHtPkAW:T>01!JM3c5q8
%mA"r-2@iT%c!uh!0o+QS;<Q=,r2<!Npulf!Dn;]`'SPY?pEC$p3Ln-r4.T/;=o)8Z6]`n`Np#G"8-C9eGasecVU4@3:EsPK!S#Nl
%$.J'2h)a!J$'Q_FShPB*fVt`C209o(.oR[jRQ-4VF(*iTVG0>jB&%cmBsTU5d^7[H2iDtQfb`F)C>q&pVj]Wrd&Em;20Q"1F'lSa
%R79u>4k1?1WAdk&'F^Y;G\,,QHRuna4jB\0au5-<2AJG.+%gJ=2!UFJ+]sdX<Fre5mhY%a4`"o%RDi9f6)n1N'"M2Z]Wq6XgG*ik
%\2`&HXrVQ'l6BUVmX4+Uh0U,1H5n#T*$01B*?TF\'m%sG+a8>+\c;EZ&J;UH3QbupnsQ8#jsZkaNh8>SB9)PNUO;2PTC._nUXW-$
%m[ph8+9*Ko'U!:[%0+"WE:oI9i8U9c;4"u?(,m@nG2npK:k_\d5PXF'baf[b/hdQLX,g@?gR6IF3;M9fdnOpiW5@+uG"n-H"<Vi:
%\/G78(>#WPZYL?8#IWONisFM+GQP>[/f#>2YD*mX3jkZ9D`-EJNE4Sk+??Ml(is4mCjL1r(Rr'dIfJL*bl-L&n!"@gIF%@4U.f9i
%8OQ],'8^Br%[8.mDFgpaP[+3n8X,k,IN#GR4MmM209N@6"d08P/pZsX"POr4grnt!+n6.gaNKD9:NoV#j2[2Se'?etfH>(chB:7\
%g)u<(RnU0WOcHM7LcNr.$b*X@)_6_005bc\#*-^Z,d?8nLH+'j'@"+'e>5a'EK=k]c#d=ccDs2t/mMGtGY1>C<2JlQ3l3I;&E[]>
%NATG-rC!"G4Oc'S<5NEC*,CBJ*,1d7-#Q^m<_kEd1=/IB<C2[CeJM:DS=XM<WlCqh@oMP'QYMY^-eZ3]`hmKuW^WkH,si>$WdU,s
%>\q8lVq%tL3R/PLqWs-h+@j7RVm.4?4[KT7el^MbOY;_tm\mCnrNWR7D]ZrYUO:0(\%^/>Nbc_;*MO7Lg\dfWNRV5SElX*HO#oP_
%nYoSBS6Y>;LU/EGIY2#JFe5Xl.5E#9KDgf=h&Zpt;>rB#`?af4M`ssW0m@r@Z?)h:l!+;kA)Tt*nt]4G8fEJU/6%CEf-a$l>Gt;q
%!J24kXW`:fBa,72VnoF,)BMLiNlFXdl8gS9o@r8<1,lbI%WT"HeEq*jDE+k+EA3AG:f%sI#qi1W#,-H&OH2A'Fg7p(^W4_,VqlN9
%p]kjQ#rf59I#H+UW-mWSaoOkhdFTVpUNu,4B[WN.ri9Z]kN,Q$B?rkLjeHiYqr0SQ*7NF_4E*^!@smp22NGF6jGk$npDieBLYVD3
%B0GAOc[A;VQl/)qH0KKd?=M.Y@:<L59GqX1L)T/l1&e'`hqt1*);?h"To\Vk9Pf27/ra0%iMe,FD46ctd*5B3rO32.c)d^\s2Co^
%G]%4r=rWaNU_Kk$Bk^>R0I7%_DPj5++_f,UPcU>:b&l,NNT?+d-DP0(\n2pc)1_R9`h:?iC9BrA\TrJA*EOgF5PdoT#M$X$46#rW
%GJ*LgLE?J`n$k,`+%-P#F&ZIe*Wu]iaDJ5Uo*P?W1^J1e1(st>8=G6c*$ico\h/:W0O-rNO"C%(A0*Ir[:L@A+m8(B(Dg4EkK9'-
%(O8N:H"=HU`h1`\XsS,H;bW74?'8qo;e9:1V5UO1<&6mc1jqEddo;rf;0%KC=FM`oqG7g)pE^ku0)SG-WtPShPga?@oi-n7,875.
%0rd=sIt\-m@B,QCL),QmZ5-UX+!I+m6]G^%h3#8nY)]_I0#$D,j2U&]*q"T3*;cuG3W"HLZS*AD?9(ak+*,ClSFr-,5P#m3S;+#Z
%_JPAeI*6cd/=SJZo73o4$<bDcI@P\Z`dT$hK#04*-c&7pRoD4hCpf*>$=XmI&6]":6Cc-#Nm+A#A`8qXPV_iF@P25&5%Q-H8Do&l
%2\k]kUKT67;>uE"mRUZ.0_9&$;,Z5dZjALWU1;:,(N((WPGuT)23V'#!(SUV:^[HZd/r=M6NtRPq@L5M,UUrTa"kJD)3VI"9-Q9!
%-S]Ha6#EMn?)CZuP&PQYk@8b\@>S;/HME0Ro["b*I.3YQO5p(u4'o:Bh!t3#:H>$+8u(i@A8rZX0e1gboHg2QaE[S7&kXOfrj75l
%B'G&ZiC!(\3PD;op30*O?eGVEYGANtq[U;U(A?!h_*aQX<Dt<%aj-r/ME\!@"Y>>Ees)&'>/`85_NMHq#o7TK?EkkE'ZMYIm*dL<
%d^X$aKsS.Dr\L:n'<a5Kd(`XjOh\mV>mZTOMrhUW=AIAm@&ki%8fN,FQ0eW.:iNOY9FEt>/43C`2mN+>G(I1HD?*un89A;IQs6;"
%P^N"ta9rRND(Rmr.!X0l6bop/&1Ou5-ReB'`$=L88H>Y%ci@q\<ZW9S4UVf\L_^BSF(4Y]Pl-r)`"G;0bfZ4(X<gLtm;gfG^UKD]
%]-J<*isLaKNdPiBMdle5jc3OVr=Ynj%*f7UXtWR%%"fV?rGa;`lr^?^qZ=hIP#Y=*7g!=UAZRG(*LMD!2d"WuZEY+TE#"0X%$N8M
%+P:Ob?E"XR#R+fh]J<$#WW6d>Bh<kO2=k`?*m8i<Z6&>+*h"<bjZM\jXJ<D1A5!CgE1>$'G##YM<p&2&PaQ3bY/OpD)4;.sblUbm
%[&i]+=PRq#39Jj.NIfi$.^aYE.2-cqqs.M0_e<bOGj1Cs)9l@B+hChK?N*"&aU;61:Fr^sk@M0"+k;a'3_mkeD'+4j;D&"cH4_hd
%K(fu,lK+lFh9d!61<2s#pFYA%JN*@Kl$C<um4\Che`1@M:tn7HIHhS_\d^Ppfgt;ccoec(,fF+1.X)g]edZ1;_UXBEkVR@aaiILu
%>:WY^B'_@AVRNWa(=QETQD2Li]gcI7aHl8AFGmj5RMA+MF9Nn,BhQm;BXrl9=B\WO`UtQ]RG(N\V3Rgn"sk-cEQ"h#"N(M&5P0No
%X/2AbmO2bGfW_fF/W!jAmUJD[Bj&iJgi9hd.Mag.[QNu#lEHG4*J]!%7ottcJfd5:co]g_UK$l%AbjN,8"#)'qN0D5I3)5fC)KdY
%kILi92#5?5fX%@t]H".!*XdkI/?%c8b3gMc]e.;oYm]oH+Pg:AbK+.LZ@R_9*X[(I/<f9)IQ=\rUA>t=&s7JWX:>hMPZAs%2aAXo
%L2I?_+L2$VJRK*"$8$1@>SK(i"mnuOJF4?<Gnc-`o%3%drh"VZ^QO>(;Rp;b2.e2nSlgkF$O\(4i]ntWPsQc1I:5[X4kA$_<ifht
%h'&7+Q+Ik>!MG=%-&Dd0DHX*E<2a;PUfNaU,9lheZ%5r*DMj"q`F:8X?rcA"9ZA[Wk'4C6Bhh;3=CQ0i^TE2apA1AN7Ferl\oYSd
%T,VPiDd4<n(-n!Lpe\"_GE!")I!rj(]8CafIYtLGnmh"n)f0<K9aB"r%T[#N4?fJX81i<=FSu*7X8K8V_Ngn[Z(LO44*I&:=g:S0
%`=Zk@<4f<-/ToHE7$p#Ve[]I&lM`)h5Pq0kMbotal9[BiZ;jkJZQUU#.9k#Q`SRT;qHSW3oPio*aU7aleAP1E=H@!JCs#5l%AEFH
%WnE.<h9j9XXIT_,2pB.dZZZs5[F\(GPI[REf;4cQ/t?40[?.hWU63V>0=CFHlrK,O95CcGgZ+>bUnAB=4ET?lH$"=:Z%[SDJNGcf
%&8+.I[P1#UD_m+h>C]quc8>TGUDd-s]6BP0X;Y+*_K'EDW_sM6eVd")Q'aq>M+=6+k#VI;/o'CF.<8RAG%hgrQ_0OC=r3jf>PZsW
%$\)@sT\\58[ri9d<'ASp[*t`dD%$/>NN!Hd4^'Po.e$M,J)L`MTkJis=W[X@G'DL0%]+,]*tWh.J7'?*$FYbUCSARQ'cO^n&+0LN
%EKm-Sqndq<",!c]"CD98?O[/k-$CAQC]jokjM<q/rNf>2&"USNF:PIEJsWXU^9Z^o_ll)p2B6sCghseekKk6_a0Pa1Ys;Z]Cg#_5
%?(5G/DeR7#f2[m_'pGZg06^Zg!W$<f/ne"4os"KG_DR>]UVYN$?O=OFiR-*GE8T8I!-]0pV%5e*?*"JKaG1eT-Mn)[gi;F*e-r3A
%Za*V\BLrcXs/\V4.F3ENB<Cu+$]Au1#G4(Q^J*K4I%;85QYJ9i)%q6u\G5%2`L"Q%XbR\nQn>X'Q(Xp*pi6smfnE_ch&%8XVD7X6
%\a%3LX8Wg!k_iNAI,H$p#!E?SLrdh5JekZ&GN[)Yb_j;:^eN6VhDhg/nb(l8-lH=m3ZN4HVASLDm+=(D!B1jt!ctdiZ#rgn#@7A7
%<cILdNSr6tnh?E##qaB/05AtH-qRU2.sAnBNiLTnnlujYP*lZt61ZG'D.@1,`h)DVUp^OC"07h.QLG_-7DUfrj4pVIV$DqUhU9i,
%]:\A:fD"_%]B9Cb99,!D!U4\t3WMJQB=`"O4gP!4h45HJV4giXSnD:]1V\04]rqWR*EMnF(\_9t@eBjCb=5Y-1^EHt@8%a4(%P!;
%-EjhtWs8l)*W2.c6FbeO+*/7SK7:tb1OD,A@D_eNRWL4)c7KO&\rh_ep6urK+*F'6h3$`@d)X3_k#8`69+5$.a0KjUeVCe&a3O!\
%jc4D'[h`XkE3b&9CI$;*@=a%G!#k(e$X8WAph*FL,)\%]ppP^J<'W`D<7XV$M`Bd"quhGi%?!??9#U76i@WDi#H4Hql7^LTLEg03
%PUU.VLfXj`LfHi&i11&6*Pa1h4GCETGbIeS@"^;C#`$3^*"Bc?%`4G!18B2**:C-@s!N\N\brbW]tcCc)@J@Q6BM=4L3(Cl(Ps;`
%>0%m:UjI;cs7Rp8"0ht?=n?95e?k:&lJX3ZC[\QDW>_(W@4;m%.&"<*C3$&@gUjR9HA;!FX&FGieNnCZE<fpfC>%/s>rC4F]7:jm
%,d:]]3H!JLQ<':-VU@"F[&6%`_X&`%Q87!7$dA3Z[@s++l>tTMI]eeI'D9kbLneW\'[%>N<<U:KkR"n<V8g<Pb`PtfE6f-N+a8m'
%,@*J'4\)E#arQful1J02rB3Z;aXD?qChQ97<KM8_1bE?CQ+5Bcm^8AGg2SFd'nEE#+e]sJ)7JO_;mj#81:=4'\rWnRL1O3!TiJoW
%kpErC&XK0/hn!C63uI0S%I@%$#a>Hu]kalI<pO:/T,cD;<%(AVgW,KF>pHF%\nXV,a^I`?Xpb@"VCos']\We[?>1n4S8SNf`*W!0
%ONWR%OeJ@3@i3[rb0r[eR([!HLcK^Ma#c[B!6U;7hXM2%1!M'MU803=%PN1i*F+I8$W2k'Vj*%jp^0R*K=es8kSF$@LYkPt+ZsVc
%%-*>aoqL9Y!@Zq;"h=r\b],uNqk2+s(@B(8YSVl`HL7aI;77+[WQN2t6=Xd,d\;-[@Y:n<Z>=c.9bgB>Tr7"KVH3W+/]YPG!jJ%I
%SH,t7VTu5X"dSJ?'I-t;du154=>b*K$*7cHCq9]7*F\9#;HVWI_r@e+Mg*VN4g#b,lhAjc^ZBb2T";$?k,=-C^!OT%Ipe]9p0+!c
%"ZZ3BS+a-+Hf[rCTI1(*8&DRqnk!E/$NF7sD53+;I8o9,BV_PhctW-]/:k4YX2du9T,UG*K#78V@Z+icGG]K24-,EpI<D]6,5#iL
%k"+cC8O>idjB5C/Tmm_]#C[ThBlBS)p+IXUIe8n,SYT.bTtPHKIhBNfD0+NKQtT`A@B#6pHE(.H<7?_..K9%(&:OM3;-'HpNlI#)
%8hkFg;_^(`H=("W?qsm4S?JVG;s2,k5'G47a6Z9:nT@h_g?QI1=[d$QX.q2o6dc<6=[:f0aqf7':$j6/Y3p=9MtRY'RGYHr%h$Eb
%%p42*g=G4:n%8'sEs,rrpWc%M=#/D8oM.[[)W'BFDZMs;kbVTj?%nimd.,AGp:Kd"KB9_r^>8JDgD;883Qe$T-hm?Us.T'QGP.4%
%;b<sr(C-m6fJqV4De%Z#Q4.RlD8)*\TtWk/p5:T-GfqB=i4t\l\bbkCXYkf);_$[F]Iie\>bQ):0VpFZe]Lc;XXQ\QPZa:57#it+
%!Xn5W6qK+10$KO\kN[*'MdfC\11dG`8cl;bb0mP9J'e"raRRagceFoE)+nM=,MZ:_iR2+Ye`8/TrWI/Qm,**1OSk/glXc^a;I5Xd
%O`.r"lXC-DqugrOm,*(;*;lShH:c4BdHod2p6NEjq`lsT9ERX5))be1$ABfjQ53L*E/#]e,&0qX-p6r^C3TeCJ/\3;fhY'JTE_*H
%:J)3-j*E1DHnq-=/(h%6^P_tNp++h"A\XZf#IP<6pNOBLh5W)NH,$M)AVH&RDKYjLmGDs=YAh7rr@4.V(5+Hmm'f?a/Rb]n>o2[m
%>F%,i7!@4_pZp[:^0gbdp%u5Vp?SpTD2\[F._+V?mO=j-"\4cPd"9W_@6kDe75UH8('U8kjCpYGZ35QgC`4Y7qfNt8'T+JPZi9,d
%0=<b$VBN!H%O-ErL@4$cN'SZVL2R$ulTSLOhp*d1dtLu/?gbetIAsgNL$MVcR^oUsf\ulGZ<5ep/sNb3e_ml(H(Kn65FQW-!?.;t
%D!KNo=Pc_1=!R[XpA*4K>^_%0dn%>3,=OCf1n]$%E9g7+fe.U59&IVu0(r*rQf<M(AM1B'X`nE>^@U]ZYIt>:rDT[`%,Z*sm+Jim
%2jF#3iM?3XkE,IL\>mVI<fm2,<4,&?X`(=cXadI.XcJt>@Y>&*aSk7c^2P!WgpKmpCt'D,p9!f>Z@AcP[?98=n_"^)+4$2i?1tVn
%l*@M<ZL'8)S^52A2m>!<RCS3LN]M:gdmT%"bZ$%H;u"M4A,0VP6Om5NU>rLjF'B`8/2'YcX=QMcPF;<N2cCVB>6]1O36B8:qPL,q
%VOfW>e'd=,S"#_?3)QWr$lQU@$1=OP\,C"7GgZ^C1gc\se!dQ$Tm(Z5hq1ZP"JZQ)SS=h3WOjrI?84J.4-S^H$k]&hTp>*5hkAl@
%%D.+NFUN2*('T%$>[Q3+q$snd"/SSNofE0*;XS)a!UP($+uk>^8lOhuKD,7!D^nm%)^\1kf4%H1bB0S_q"?ngI21fAm#*K!WAdF5
%iiUBS6Y';`GO<Z0NM;^Nn%EGIc\h2_i_Q"$]4ou*;HZe.p<MXO"hf&UVM.T^j/qem8/'aO?ldj$GQ<)JBI7N>ZIq!9?T2/D$]=.Q
%*LdoWbFAg4Lkf^(iV2JPd"Th7H"ZPFa2bE-IP_.L0oR`"-BpLR9@q3"L"P-l@qVmWGe\BHYP$JYU&Q>U.'J'0$e(rGd;a`%duq<(
%NlMmTgN;7g^A2loA9gT%[itp@`UWiRpkNUe['KK'B%)m!PB`S]M/P,f)bam6K:M_^d_HLD]qKK/HUlC5E?D3K&s:RJUS@X1%RtLr
%"6HNq"q?gWB*77."6BUhb0Mp7R3k,H`+POKO!ajS%@$ndlM:-XWfgRSMq`2QYDM;eh_61tT>?>p6B&<3j+grS.??!EYZD1CJA2Eu
%X5?3/_#b76`EmB\8%!b)8R.#9IF.(%9^X?rDT(dfaQ4N7jNGWW&%UJe4G@fE[,ANo0<3/D":"K-??j],n]PL$e0hc\'0"]rs3o0c
%GCQsR^O#n=?a.upIt+nXIC=]T[Xik8JUOtXIC=]T[Xik8JUOtXIF`7"gH.UJ`+PP69G=%8@%YRG-7rU)_qR+W^3f\<rQ@.Wrqtrm
%Wnr6rm#-AgNh;=-fpC%B^V>-i7^Vsh&)TSN_qVXsi9f-eoAM$QhQrD;^7!t7mA;SpbX*tp0tNi6Th[(`I&fL2l-K/#KDn`r'6jKK
%(]F72Qf%h@[/O4*@JB*D5Q?dQpWYL#oio-C`1COahRuDM`<1>!=u=j&rG$>9/'Z8,]YT)IHi*70n`>]'0AjKhrpDGO?g-fIrc\>8
%mAo&=Dgtn:kj-\V0AjNmp\"O]Mgpk'r;(Uj?ep//gUe9jJ%#4n>k)1k?QK&oq*FIie<0dNhFJ]"#Jq=43BFe\h+n+K8eP]%lDSX;
%:&jijn$/D&C!8NrOQ+QFj%Y=iQWY6U%8+K01CQH2mUX5k$qQY+I_HCTPQl?l``Z)W!pk+aoZBHH.V(G5UQDct;n;K2Ud_F#r3mX.
%I"TY?SX\V5R`DWoi)2DD6#J9`Q[OsJS="2).skuuDIaSj>2i6tj")eBNT_Kk0,8qTj+HuQSo03OpmlA[Rq[tFkOE-sA@q_9:CB*+
%[b'ka7aXtSBZT5DRo/2nHiB#'eND`J.#e2CXpWjm>u'%)1N/k=s6XikED3lY]KrZj?,i:HZKqE_&>$8PdnTJ%_b$_A)C$/n_93hD
%2c4f/)LRRmVD.%?LK7hN3)'T?aN&=JkGBL6dd:aV#JB]EY*8%m11oc``+dXEl&O-_KWs3uGJDaDp+eKkS%\"lEh;o=a:hW'U;s$&
%J.RgFR=P!A.tj-m)5!FI1JJaJ!.j)HKCi$:Le]dr0d1E?nhAj=7UE8lZ)mH>+Beo?0aJGY(,+KbA[Y+QEZ!0in;BC2e*O=uV.E!U
%[O;JA:oh!8o(CGq7QC1Ec$H@je,U\(MlZq_dSOgG76fJ%:.S-g$(@(MEAscj7ej,rL],</6Q0rQ!kjrdUfHQ'jGY>r8UQ%d0r@\M
%=Cs_>+B+]UJ:3&?c6?oR1:nt#OATb*b$:?+o_C9.Tl:sErB\BZ:@tP*dFf_Bh2=<ojueShg^1>>)clAB*,ZsI6:Nf)@@Cta89,[F
%,YK$&2M8c(PAE7?L\VlRj'gT8hXS<?#Z[1kA6iigrKRT2X6bZKU6RpeR=E?`$g9D0]j)k),?$5LHM0[Vpfhp.m(Z[P*OgaY!0Rd[
%\a2'p!#YAp.7sRh6W2&pa\]XS'V/`JKcNXOrJeT'/0^Z"1KsqG$)&Y=BkE9BaLTN79K/^h'3P`K.LR^+jCSrEjIFFT-f#(HJ>A_i
%O_uAK9VupVam96U$OgGhLQWFh17/IFB_#;E-'H3LFLVi6Q#7s%OAg<Fa?q@""\t0Cl/9.JZjbbQAuq:lVC]/0:r,92D99#Gn7c^B
%,ZH"-MqlgWM`O[KNg%rSBpR)m,%;cIgDrb#&Y>ZYb[-m9Qhn7/0/!_<L!rM`0j0nr%OKPf''1d3!Bpk2"NQj9d`@OWS+&0LUPR87
%`=:I_Kk9Sk:ub8GP]6uaPS:=?K?Uqi/BlMJ7AS:(&X/r:<%\>T)RD&)``D^[EKDu1RuU/p'leb8-3m+cWE^V&'GA'0ARgL5N8rhU
%S[-2DQgbG`_*Ud18SD2F_Bg<qH"iEfK/^flG"].Q9VG0`5WO0=TGD)LE2#lWnBujSLc*+"&]>bVR^7,Hbo)0^)dK='kp&Y[<*FmG
%b<mGIcm%L+Wg</\SsF"W@48YG#T8cPNQ>'-iuKAS*Zc=VgRNFiloa:U#p#?MOP(EA/C0-6K<jbqlr'Nt\RUe8Us)=70UA8nYRU\8
%`q%IZQ7bk8>U`=IcjJpP*W@+6-J4J)FO6ae=^$KGD<F/XOT6$fUa*\cK%af2TYn%[GppTFZ>aM1Nq=TKKSfHU,0MFb^l]-nSlKAt
%-jHa5L"hZE&f5[W80UTWLoit1=IhG)m"28YA'?r+U*FnsOEm6[3HE7B&EAHf%(Yq7i$U3P%t'V<o4Z6b[X$gco8%BX0B?9BZp;2@
%+MeK0)WO6MI)Kn8EgDJLB`SU#3d("tR4Wk)N0o8l"5_4Vk!AXH*@=]+(3q\:7ps19*Z"NM?\PQM9:phirQQf8M*bG]OTTK,,i*El
%Z6n!N]m&>6>baiVQ>r94AY0#cBaI@#:mf^bh$-1XfdY?<oL,*tLh4BI`44al'K)-`1K96fhuqI1XH&D0bU\CfkcDtpE3B7lX:t$m
%=>.qSqj;K]Q<;OCie9^1(oITCnm#[e.`R.<3=\6WH#TEtJ:S<B<e_u,*Va,DiJCjYOWP"17">\&lNRQ6oMJfm_Z>(\2!C4qdkJ(t
%a54@0BNp.'\J!XkUh[iPI^Bbe(>^HT02obgaC+cur^#*]"Adeh;F6:C*3KAW&KV&>]h#JcP!me_Mq0N,O<p7,_j6YlSdNc7N#Bi:
%d=VN4QfV3%Q\Lpgn5D.fO[jcZ@=S>Gi8]j/^X+ZG581_j"(i4<ocY+[.O#hGkffmsck7[d/]SUD:(s'sYV/[UGWs\_(2=V62*m$*
%0.T[GdT#.dd$J5E!M]^1LoiA;<Ald299<"B\$45QZj91Dg`lklZLMZX73[a>,o,oaZt.6Ud&V=+qN<s->):er6aKBdbdnoIfnZlO
%$>6)33;@iiirng3=?&,lBLu@F/D486fNt:D.3SmU2g%`UCfAQgS/:3ZF[mcqAkNW=Bh?EMB<_#"!14T!dM?8jCak#h/`Yb`jcMFj
%K/P))]5@[d_QAKB"ds*&SV$87iOe2,?nERM/2^fF:NLt;A#H.'"e'&$_p7,lV2R</*`&IYHH?UNM)5K[6:1fJSgYVb&4'7\Orkp<
%'cRL&PD_aQ:EmAd_U/cULTq72Q4ni5jQRkn8di%Z!/5*hqdD,33j?>^kD;MA$4gUgg+k\pY6gZ*F%5=)I@.#2;KtLB,6LkmcEX).
%$\Ec3&YTVS<)"T(0o)2(HQ)D`Yj\F>cO9btc$o33TB"1uo'#=N]>+=0rO\D7^>8a0^V>3eieQ.#IJa"(:0nkl#.7K^Lh?c7R66Ui
%5n+5F@\!^s:a).?rQb`_XKR.E0Mbi<i3J7&\`,a!UdT3$dKj5s!;Qr.-juFK#I'km3%@\CeYLTTk<d'0qob(B^`0R6"QIbgV1KLR
%.L-PFie9*;iP;HpGX:iSRL6-HOQSo6QK.o8;u0l#nWVgH@8rtsN`k\N3j!u\Ji*7c[Tg%[LLNcj,%R)b<NMj3]JeFb,#($.":u9s
%EcpiL1mL)H1F,Hjk;Qg!i\!<1'N#/](l*(W+G*60!cA0^(V0V5"7rI-9kYA%*7:+1Gt&]?!="EP:f>,_4_iRQiX1GR[Kf`?h$i-`
%&:5<"-uVoq?#*8>.be`LkN[>uJRl>9]->^)0Q&;p&6*29"$IkpcClmD"N"YEc3Ap<!$briJJ#b#rK,:NU'*m.W7.V&!t3>W"Ro;O
%($5bTI-0'XSoud1G\7L[L-R>**Ydc%:otmbHG+DFQ=edXAF<@6mZN9^U5UR#`$>io9G('l,%j&.n+]RB9?OF@i8P>6HXgf&5*6M?
%_Ea\fNHto7L%`75A:?Ad0n>Y(a7@'$<4!Vub1I-\!fTBTl(NXQZ*N1_WCbI;bW8_h)+I/I26&/m+$'[M8rJdhXDC6X_DaqBNt<(?
%nX'<`#RHmO!_Wn>6E64ZcAm3n*fC*mGS1$!:dGUDU.^@0(D$R"$SQAnr$5)C?1TWG7t*$''+*o8?m2*38]2-VD=ahg#8Tc0cTuPR
%QHm?(kn00cfI+><$5;2#g%L#8iDA1#75h,-2*nJ^r:m$YSIta&GdHbg<)+^eaY52klqA#^:e!R7^hBeZ0PhH:>FK-s"30;n!XT;*
%Jp0Xi9)#QQi0%asO=6G"YT5hnpo:D/&_@:^K,/9[aj5-S(f*N_!#M;R#!'thj=4pj'-Nd$4-T"2R)F(;]4to26$kq>0rk=&E8$#b
%;f7h&(H<QtPc^Z?@?+tU#r^.F/AdsD*43qqR"i)#)F]a5%h;$LZ`K1BRNbW_Nl.S;UYpPX3MT_ZR#g13"iSX%$tNG_/d+G66)ujW
%1k\jt:[GHE36bFj1Ns:UT&Fj0%AdEZd5m8WJUNSI;8S]3q%F"$S/E]P&8nH7@a8B:7g!USCiSA8dZTA/ZR(R(=J>q#$9[:YR#aNK
%-imoe'GRB0(qe:-*m1.kCa"8TK"2Mc;'6qP8Pf2;F>8D-(agl9Z>4!T10Kep.r&'t+`NVc$Z1&6_:))XQd16oJ^bi8\SPjp>G44&
%'*O6:WXF0JTbkBW'Q"?a&.hmdXla$kdh^>&4](h\oScFO%*(-bYo<,Rhdd8ua3[7&J7$d;6sV:bPH[U.Fra]LS?T#t'5$>C\q*9(
%Fd,Ba>.&S&4OM.O5)8k`TI%EQ7#`s3G,8,i.WKKL0\%t08O:br1`"1?#LU"oditsuJTJMVK@pEd0a9KL"^_\m!n=bC_I1oAN-c!o
%QJMdP1_6h^K^kc?p(,g9K[n6&?4D.bUD:/&$[l.c%s:g*/c5j"FJ+j130r4V0i565P$5;_0M2)1(*&^LAFiPqL&dS!(PuXmosk&=
%;5=N5Kl5F[.cNG1I%_]1$?@!GF0TH_i-Li775BI5MYJVI@Ph'Q<.J,D<\/"r_*A1b3-9\$D+g]O'B9jK's/"T`_7O=8"'5S'HM`p
%_2Vmjf9S[d+detiHu0lEiJ?]jIb4!64$pM=Q&!5#6(;n6p/(AkN[3;EDJ&?R"L9=CffE]Ccsj*<7@b'-05ZG:$^4/S@#!QX1me<=
%,44+J?H/Ru(:$DrT^>'&aMOn3'JaI*\57@4>6!#IkS7DuH5C*WAEAB"d&a8="A<n%Si?U#+p))j!='km$?.O"GG*@aZg<p@B9l2a
%3l2L;X$8Gt!$a$l)rrr.L;7Bb#G@5B8!pPY5@doO6O_gFMQW@/9eC/a4J5D.-o'i3Y<lZ2<M'q,&\-=)'Du_mNNd0&Ld:$ol85I(
%Zg;G1`]j$+ikU:?/JdtF_<muH3FqaU-Ipc$6<=5)*#TDp084[^1o#Mm4N0*=*=E]$?j=t*>K@G2jZC8+?94QA!F*nWEhFWq#YJ]<
%!k<aqRV%)U3F-VOatQ!&Aanmg7oKQ#=GW2UZD_M9,@<L!GS)E#lG=2m7VO&;c-q"gXF;ud"RRki$^L5D*1Vdc+iA`I-iaN,7"rOp
%'rlrh_?]cQfZ%GQE`SFl/PI5p(Lh34#=`kg)?f]^lbIpZlNeNC,]q6FKT-"ORFfDSo_JTC#r>7A(f\iC3.R%+<6-&"!qo*S1mg9Y
%(qlkM>V:Pt5]oe)1>Ec>OAFt9!4HX4(dooq0$*;8j]BYe+:c5U&IufiGR%U^_3iV(b]:HYX.a]W!7@O/5aI*b#)B5-_B<A]KG2N,
%iEld#PQjth"ec@">-__BAXs6#K@5Fp+d>4lYFGb<[le7,98,/3CD@siV<:0\;ZlJUKSg"Q0/X-RRf^1bfLBj)h?n6mlMPN_"fS-0
%8%L6N&SYOm;^b,>AGT1^PAcR)F;TSMKRM6R7DD(]PI+";GZJl\TVdtcl7p)+R';Gm>845ka,D]:_'9"`GHfbmnYR"(=gFJ1?&EAO
%;Nh>oNI%FpA=(ubgR#^r_(ic%TXChUN;`p(YL`u/L[6$&%TYMQh1PpE7ig]AL"Pt"%:0F@)p&CSgCmHln?6:Kf+qd&U8cE)d]u67
%q3<'i0S+%kD,')k:dlk#_Mpi0BF]N?#1R')0fjC/O%e*8[\1O"!R"-@8/&tV4bG?=7^X<SA,Z&KHCl)>"7ETS,>Ee%:1R2L0^*l%
%Am4NqR^)EQYu50?Jt.*qC/YIYff2CI^r%W8qV%Ue"Ki3GOTR]H44i+(i#eXU7C3,YA7HH5.?63/+%/_"#Xa#\e6OFE:g&F$S\S$u
%U6Gd&iPnepWR!@3kQF;=kq]+\"lM74fPJu&RuUf910.1r@N%[p$1sTOo"t\W5cdLS\-U1g#C+kikCd2Sptl)$W9P^hpScJ-60+bQ
%GQlnek\)Nq5sXb7rPY1hk-9j45[S4]5b,gs5R(IU3^u^b(m<OA#]1`4K$;[Dob,ur/COrnb_Rqaq$:L`%J7N\3%-Z-Fg/h3'hP^)
%oK8*N,5*\V&EaXaUK,+,$qR`0qK4Km_Kf^al)+VmKcX+a&E#V7NSr"heH'iL`"!up.I_dC*KI.j)djtDJdFdsE?/:ln@;;e)T7J@
%d9:c&oYff``(>V0Dh?)j>Sres#^\Q$B#%bA1ps88g,d%JLLR2I$QX/M/JIeY7)ri'2M*T@dgMbg5\;Ke!#:#P7SJ@P'L"m^SJ'rO
%i//FH!TI$,&fbd0$-q[0U5N]0rOno7JURq<!+Eku_nf&#/tu,g=jV\EV0WI>;A1AX_dm/50Ir4bSMYHJa_K6L;#Eh)#r-F=)s6.2
%@2L;<bU)ZefGM*?W@H__+bD<J%8Bl^k)k4f($_BgbA'Eu2+Ao\F0qTc!'j#HN*tM!-T^)m)ahO:(bupGE\a'ER1JuSM[/K9a3FuR
%*&Z4X;(_!](n`iZMeqq;?YE&'"&XZaR4tSj$,;"`cd?>f'^RshHPnf`U!Of#C#CJ6?!$Y)foVDk;d]l)*Fbq>N)&l0C<-]@hVa6I
%$UYQPd0t$r%T9LTi5Ld`lANVZ'6:lFUFqY$+QS4oFTf_D7+c1G:I#(op^@%Ej$`^A!AS]Q<Qc,IrcjhURV?WV#f_-hYF:7?LnT-S
%b7Ku-NV0$2*#VMZ-m,cA(4VhrbP\C#8m7=bA>Z/uY$U$+>*o;hLQL#r-Rts\P*-`'d)rl78]5G<i<6k\3[bY`Z<<I2d>Y]a3]6U[
%ih^od'inG&SPHmWd-q-k_p-`=L</>t(n@Ou3>2K"Z9gk9ImRL=TLjb9LK+f&+<h6=!/(ql!!?6q5E$1B3&"ktXtUX5p;3%4K(]TT
%6KXl*'ur:dMRu3B#snfJ+5i$lheMun^bX<"O6D$#`>STjpdgDNk6-njZjPq=eNk@_TtmE,4u>)a.#_`>@"lQeB?3a4/m-sI=bk't
%B4`E(70/%.M*1qU-fkR(XPaAZkO*k7O^U;9Oh*ds,XSA?jh[Yn7^gZE!JX>LMbBQ<+.V43M@9]2L7cn+#R#bq2/trDBQ+MnVg0+&
%9*Vtg&`4"HAO(4Mj<kQHj\6>9_UU!:_%2JNU<+rVD%YJ5"sKL7XTjnr@KnS9#FtL6+JVHb&Hk-a2T6"Y&-t(edm9fAc3k&9J0sAc
%QuGgr["hJFk:6>A)HX1kYgl<`)1j\Y*"Da:obB'C[T2lSa:$8AL_7iB=\`II5h(<&O_.C&g2f(,$0DCE7#4568qT,Wc7$Uk^`,).
%h(S*=-Iq6/]GV]U'hl^?&\=TE#rDRo4i.m%K6\g5+?YmmNq;S35*U"2Np;A"LeoKj%;EC"kkZ22j.j\Yd6b_`>36`&/8S57DHJ2&
%Pm%OpNmZ=PV&Tq6+nL-4?n7V6e10ht2^""si)"!\8lT;G5l;tG!YLXUk6_k7dLe>"-'5K'q'EibLJ<oj8=QVq5,Cl+j#-$>W/u=b
%aT=qT6duba7RKY^DG/kKFO<H5HI6,PGUH#e=O8f@2$0(Olh]"T2_^I_KED*0Zih#R5tlgS"&VK<?I!<0LM]lt5;6c&m*Lo'D1QPc
%Q>9SA28#-uIW*F;/pU2XK(U']JDe&5KZl+_kkA\?dr8`KKE-OAp,)J1a<5Q#h*;098Rt3j>E)*3:5/M[<D9]L^S"[r!eYD7$L)Vp
%2%.::L,c2I'hK#=6$39O=NCVH/Wq!?5+j')d+BT4Dl"(YaV4uePe4hM&8_"2dKPmoi:3HBYE<FA6&%K7g+jCWP-N]))&E\^:Qq90
%-jHk0Ta7_bgskePb]RIu,!ZCW)Hm^A2pq=Vl)!)8^VaI18'3p7#fKriW_-oY&j_7Xk&&sc!N@Ha)%G_]((DB+&IefGODI:F^/pdX
%NF7g_BVKA'$-3El(:4L.2a@?X"[?]f8%B=)?r0Or4!.8K':n9R"PB<V+g?Biq<fsi`B7ORE52]<jIu]YK^8qo"KsMf`K(0*^Cf4O
%57"1CWDPWid#Y,_\P]B\MW!,W\,j!0^m8]]AVTbI>Rtan0T<-fk+p7#,0PX@!X<e_`0!))9W)4!4V8P!?rh8,2_Z3#*#PY&JeO"l
%6MJh\K+JS6(tt?F?9ec_"c^me&W#\EYGW6P^K14RZ?Sd]pb9Z7)j8"MeCB9B*Y@:GRnFd)+R]=pF.LLIiRAIm!+:hunjJL\Do(n,
%BMo'/*`P0Me43%ZJWU%2<c#p;MAM#[FOh''SYIR\RV&R3JW^"b=>pK;CGe(<ct^5G=9:Z0"UjR]=Pq;aIelXLc]%JsG?[K\%5Lp?
%*f8=g@&2j,:2!^\Jd$p=8T5>sb%c<^IMn&$$.)LsX9otWYo85c&dEUa'#Tb<Nf'+;M9OfX5c6S/S4QE)GD^WgBTsP>'HT*B>o>m8
%/%MR]HWJf,s#NStd@IUu[X7clB_I16JKjM"ZkbI*Zc(MDOOS8V0-s8A2g+[Fd\?tD$Jna-]S14^)8m;HFomN[).[.EZI7]_QGLJX
%9`C/8US^C8Y93;cH\O?[`Nj0>9o8Yg6=anh?0%jgQ^OrcR4'm!&.?;qVNCt`9_heR.*JH>R\gqr@Y#73>a,.tfV6_:qp9D_Tu*QC
%oSGTMJGn[P%4.N,"T/2T]#S&71o!#>4&]/]"td%+)\WGlJ4bGCh?^QAqVdRE(G,QK$`*<#Q;i[ETFmk1YbBN\K)qgi"rc/4V#ggk
%/N)1<Oh_(q1=Fl71<Kc=?Uk4T&B?cjqFiqR9#+,$4$L83@IDJD*5r[!!jj(IR4XA%.[NWtdJBh%5gU][*`P6:ZN+lt=*AfkroTn<
%<I+n*TKm51K.r64`^_4(bUt2R-5N47GWV93>',0\7c5%q@!i"o=rnG'Teq3).gKnq+]C+1"%!^FUdHlXN17)N*(3_(%t_tB\c=i\
%bg#`)Nb\KI#3`H0>5AAC/L0?\:I^)Z_WV4>eH=mOC',;,(oW1_K[C:K^o0=1,Q`C8i0=SQ2Lc(&B`n$M8nqm=MN%!A1u1j('P`G6
%$U`LfQ&4(0ZmNAtVICnFZ,@NG)%UK$6:?ZF]Mif"1),NVH>LD+7H@Lo(5DuD,mQSqfl[SrMST18#5\IO?NSkj9A@=DBK*4W!+\i\
%[>.a!cX:Q/=r=F1@nC_mQ[7f=#t%XELjNjRUtH(<L$4[Uj(mecHq7M1TR7u6$;mH5!.?eb\/DtT;PoaRUI_gq,rA,qbo51T$H%FG
%L%/&>!@qjBo]h^cG`*JI7'e=#%E]595`"[N-0YE/4.sb"K'-HlSeguejtJOD%<cN?*-G"*8o]kMQfND0?Hq\-*]/RHH7#^8&Q1G#
%fD'WY3"_iTV]=>4!bpT.6X1VEl0'c6V\)-p_tB_KJX<-oJZ[_e[$/9n9u[6Xc_*pcou64?EgdK'a21;[iru?4GmjPU&8'@X(bD"k
%9@4&flXF-k>mR]frX\+iC<pR)`*8[&*#V^EkWfPZUrdJB2+7X"3R*h3H]<dN1F'fN111qLrB+j*h2fR+#=Or?YQ7Jjh(lsi8IIuq
%JH;#<ItpeaNK_@nNF5+U.;$(5MLE:YHO[4b-Qe*V+C$NMiB(]o@ORrF0M:qf'3HPcXR[03,!rZZV''?V>4+FFTFhcu#pBg61m,fj
%TG^0;<H:/(VBYLp&O\%a+r(K6JJt<K?6amYZO6X:$&-)Ik2Afl&Ngr+d'1ta?O)?NHgGA&LOl@r(H%^-P\>X\Hu2iL/cGT\a:&3'
%jUn)/ZnU[X)RCHIgY%Nf#K//K+a9^oP5u;K>/j'EM^>\6R\b>+)4k_SYM'Wo^i%L_Vc2GG>.>-,'\#FA:&"iY!r"G_B$-@)S755R
%AI?\[6.pdcg&SLr0h0/:bVnQRSI;+hS2F!"@:mT3)e!\1:P.JrdEZW+6Y\J01Os`R.iet[A\uCL7SSi<"W95#HHlo)QW)o\4e`K.
%%B5k?(iA4Lj#K]__9F.495+sr_TiRVMlJrILJl)1lS(__4$L@gFYHQ%1oD,\bGl$(^*ruT:5)gg6*?Rtq#Zgi2"I$j7'7<YK#0Ci
%@SC^T7o1Rcf4eOl;jrVDSX?/W+Xi[tHSgX8)12WSC(/H#9'ihjW)VQXi3IH^[.#,/+%5S8<!O4q8mWbQepr&0$FC_gLqj9jGj7g3
%C(`c6D*4&ID-,"XNQ?o_AjHIm4,FS)(.=N*GNYcL"3miU^k%HPndM)l=.5>-;aJDW3iteQV34$"7;'OM39Og-C1;]/N5STRV5]67
%9/B7-._!TXW?=9un\V#UT$^^!R9Nhae3'a()9p[C0`s6d+]<I`Sg[MRZp"Ye%-*R]&U=(=A"t0^&/P[pmSN"'Z7$#UQjQ6b/Jo!c
%SXhg5Il+JrZQ)*X(OCgWObDZ!;e_rbN><TSl-*<P`'\t3AqF_A&=o_^"dg022A&ctWQojF%m<g=A>Z_[*tY"Q"0a-nar2V.fMm_k
%<.F@1=:>`)#egW8N(noq7]6ds!uNGD"e])Ea,I5I:\ul!N."8cNe:q+e0*e&9FZC#CFm^m,,,j?'fH6&.'1CB(Ojug-;E"r,_]_3
%%?A$Q>]P0&DN;q1['6lj6^2<pQoEa[2'SOk_6Z0?dA#UM-jS,sF4dXe)';^m-1HH\JZ0f&M7UF*#WuW38ask/2*F*5$0gPNg+eLf
%a4E5IWfU_k_[d/^5smL&r1K0Cn6cCT'a"B7U2=rRn,l3SQ'[sD^.nh(6'I;>]A[rPX)AsnL9.Tq>/%SSJVK!L1!`[pk=P7JkhE;p
%]nYb"Kni=[:A(X.Lkb8>QQuJ$PBrjtl03E(HF&S\9u$W*lX)l+q<%"\g[G.4p"M^:C=D(RHi(^)jege!r:]Qj]BAYO^A1qRZ@;Y_
%qruFMs7G4=lUGTd-YD<\B:Xun8ugjbf%,sE@pnX/e(lh4(4G5Led+ea^6dV0#"6GR1<OWt!7F2YfW/^6S="Ld5VZLoBi]-cG:XSO
%6D>>q.@oTW35?EmBHlSj>3`&oN/!etJT*Q&OsG'IoufU9.Y%Js-R#UdS`8-f%eh^+B&W3uHc#;djtC]gXA+7Nd*2-3%0`O<MoCq=
%!3Zj:$W5JU))kq?ia2:I_DUIArT3-d1[<mPARDXIDBVPpE#Q4K;+Y8h1_=$7L6,@kjO(-RRSq;Z8QBU3df[1sM"H%b?`9a:"7T-;
%##$_gjI+=PWg\pLN&[pXe."d7<h/]DWeoZ+[.,:4KiK0Ra2kSp=<%t/!Qi,@AT]4B?)V&(7>$cCiWN5$5t)U1n1C(hE@1eY:32@=
%9Q!C7B1+H5>.lq,aN;u!;g^rGTspUN<)<l)/aD)RQKB3]Tb%DF`imb51+!b5BORPtN*VRk9gmrd1L7iLV%+@W)1`\5*gr-O`lP@:
%&e51WOt/h.'=H)XefY*21%pWpL^>)Xi^(kCc8m`11W!o-q@P!2(03CDechUcjN'.&-%jgHEZ2!fj:ZB+A(SqhOb+]t'O`QgqS3ck
%\m_q>(Dn#6o_3ZdoF.2cRBu!/_]VBb!FZf:JPrX`\Bkd4WOpd:m:QlKd7`M!Ou6()$hBeL*gi)KU?-:R`b-;CDKJr5V1.ZseNkPs
%9GqEqUF'I8[)7(oG8OidS:YQOr'1YN*A%^/d7"%&YWR3.,r08QB2qg>4=i>o+>OCaQ;N4!p5[D(jq9ApNP/grVGuQ5OFO3+hq"Ng
%,!?]h\Xa$#(29'n6Y9Y?)-L.=>RB5F&IJ\Cnm8j@3:cE)Z?XBf[CjXQc"/^GV%PhJB%IGgc/[;gk"4mDd8._SU$&+%-b0h;qbRQ4
%Z;b/#/E`<&/qW6?0L#st&\&lT8F:2Ge^&ln0jB9EkTailW69ZiM\t_4BpJu:n_em^>pUYLM6nA*G8nMo6o6pKJ4@)JV"p[.!n4\L
%"s.Gr>7N%G:C3[#l;*0q79bqPC/a([M["!q&s6?M"f%!uf/[pDUlJEoD'F0h$$-S[N<&m,ekqK;-icuC7`Lu%eS&Dp4K$>C=m<"Z
%CM5'<dBXae<]<C#0Nr'&RQq64(:mbp`L2sY7c^VVig0mAJ881Q%'#B-EDWhlK?H_"J1@u)\2^d_2lPW:@C3@@)&s7a0OX=10oPRr
%793$eG;Q9>p@"0R1UXeg@FDRQ6'X:XUVlLdN@_TldGW#9jUYd/\^5$t.D4EnG9_`n;91A)0d<a/6%f*:Oj(.1>9'c/a<M3PWf=Rj
%O;=1bfN![C1/[VJ1*glU4>M-.:d\&U<C3(@X0&<faKU%[;?O_?*24+o2uC=4*FehA/79MUB8b:TiElU=c:kAX2:i#*l#E`6'Ve-h
%_4Z[ic?^_2'4LBXShU+Jio0Mbp.C]A@T_HhFrTQJeD&Bua]>^%(Ng@pPLrKsf;OtL&;N'lb#klhU!/i-,3rqQo`Gb3%+m<j*a4@9
%6>B-#"<=_a_i>oQA;MF".%(@/!o$3;,VT';%<R_HY>VWVa-(a.1:peW2FJ;.3+GF>*RgH_XkA7*.OqnoO>)O>E"@X`.\o=,-[ID=
%j()*Q7S'T`%qo#6K^*E]A&b=CL*f&+#hW*aeCNRfKA$IDA[#%Z5dX0G.C?:h'GNg(Z+13=QN<e+FG=3X-sMF(=]<].`j/ZKSHu+f
%;V@'>-q+]tmoZb\?%FHT6=CPVc/G+FUC3@?kTXL=3?3nnTnq4NV8Qia_Z5u><6g)ZNI^oI#b4W6LH(`">:;L+V=lGN.SMo5>58ik
%8`Zp'hV=H`K9@rDk(("G&.7bF_@2Qn;8c%&oesY/M=OpX-;:Xj,GtiJSjX'n-nN<MWseC[T&-17&&:$'P-j[&?8un'N0Y<R+cQSf
%U%C\*e]6Ll)6Q'+qm02-j/%l#Qhuf!,unQJ1c98B]H(fD8CAY-B.Zq[E6=t'7[-`<BFHHN^!--feU,2Am)UT"6Rbq?dtPgicg!hC
%%RMQEHkcf(-4Qf?QqHLS04N$QYX7((i(-;JbK+p0lTIShiG`Aa?XSp,"^F&N%X;Aj%>kJf+eHZq%#pI\Ftc80ObrQcg_IIVdPK2n
%!sl*U'b;LW5e&U8UXQL`*p*Xhe1R]Qi(+P!]9lhcM(.=7BE0"<)[uUt0c(GU"b/TC[82MPUI"U&g9Ig?UddaiRoH]S$^Ma]*sY`M
%.gD7VJfTZ&0IrI[Vf^RZVSjA^1,>.4@ULMs1RQH8%2<Ab&SStY<GG)-YURtgm$1ANRU0N>Sl4[(B)[lljFaf!kkYAI!fk1,IVl%9
%_:Y?l`j4#jNgQ-d^uDW5?<258+^0a(^i2-GIlKe=5mBP,)k!hH>%;k!miF<dOtJ*K!-;;EKcQ`4l:S,b#eN8#%1&l1?!%X,dnf(4
%2'_PL6^b_!#KIt)UrE&7f[<SgY<f(I7*5(J!N\U,7q%49#np'T=]f7@YXnu,&5JNR:nl\)8cc8\JClBb@p%r.\`OruqrU`h*tXu9
%f1IU5gT]Ks$39n'JYU^el@fZ3@E9X-"0r*P]`>Hl5`6k>:OofbWE!%e;,'),^SR`&i":RsB"#'s)Ge$]HGgZMmn]KgAgeo!!n\UT
%rYZO*Q_8o$="7M]/Zo1V+1&iHU6\)EcD=3NZC3:WB#YFHAPI@`0N*eF_APY[4L9mbOrR=OolO]JIN)ebV/tZ&jW/D&";<g9NKsUd
%W$4g2</K8hZdFUA7Go&r5+&#Qk+Oe#H(20u0cCo$UHsX6J7@a,9[s-,o1mP-N/0%Do!AG5>/lkC`q$Cq=gAn`Ju=q8C'?+QCP*ih
%d)f_Y,OeoJD`NeYfCK2W9VH$>KDHfLKoKZu/M<HgkJ/it8Q-3YWeLgqZUSTsApMt5@k<.1T??/pbZSssMh;`qK[%NkN5P*L9dM+q
%g8+=7=!m7a5muu_C%4Su-+ttOTht;?@?LsuSTYi%pjbY;M5a!Wo0B1^%sk4QR2lUNW$'&iUft>@btNIl+Uc6S+V7D,+(Hoieo3nn
%-4l!uCILQH1I3#CLCn86isN-%mE3M`W5=Y(3)d51N$[AEOlN%"-M:[ijU(VCUa9f<$X.3\/GK>_P.W]2i\hAqKiGA3Btl55T<XVq
%=)h["8j+`+78$:B8ddGTi$$5)8dB'G4ug36%\B^TBT`FgTiOd]-F*b$>1sb#0K.K97_1+_A"3pdY+N+UV$.EtT=^3h3cCF+&A8-,
%(8uqd@\t;*$s&oDGP*?2bYTN@V`F#(Up/DA!*U:<7W["(++CF6.Q4Vh!A!-VZO/"c'Vsd%U4n_tc3era=W0+U$)SH'T>U)j@`efc
%7.pRn#")FC7PjXU):H[O3#Lu>3i>i;H'-eS-j!RXT_W3L=[ieB5JY.Xgc0u2N?12FURZ&+R356<S"GF2Z:*=oU/p*DG!iauW)\(W
%iDIV8B`T2Sdo8NLKS)B+K0]q]X?DQ@W<*Wqg<08B_Fk,nI_hJI-N*<A;:4NVjjMB[T;1!2b=WAR@TrTejK!fMaraaU:T\_F9kgsC
%,?>.'%^f\%QY!>t)cFjnIT+NeCI8Co9MC+[.'ltlG_u7HN%%4)N`pq$a];8E0d9W*JorI9;#,Qnb!;1WjuLn\K1%>H]`;9#VrLD7
%dk;-0dnYKB0QWO^4_+?tKg=%;G?qKX`B)2-?8K4$-n_:ugbVWqAEdX*kg+Qo(^-90l9nKs1Hu)M8e_:rrP57R)R<AEV,;$<Z;@n4
%Mh%3NOY:L!_N/l7#/h!mZ0rp!-'Y.\/9")r@3pXqbt5dIWTt_^C7H]>B<*A5+omhHU<r/e23X]kCp/]ZCkeep4e.e\d6\5=2tIiW
%fh/XQJ?u,+k1M'Goeb>W@?6t0;i0fpABc0r=46(3)@83k"W.t%SN:B>rSELfe)Z`<M!@tE_/s7e]8Ut>G!i)2Z3PoiK:,@7f%Im`
%9j8a@j`jd^n1m>=bX`C691\2]L'`b!+?d'Q;.n9mfMJbR[1JFd;5NrU@P/Mi04`+cmJrYTcFB$YYNJ0n3r6,8Pmk%>,dY'.m01R3
%7.m`$(`J=OG@Q_Gc;n;pe,C05%.<YW'hg<j,W7C6PfX\1<0JQNL(OF#'f++3ZK2Y*6Die;f@Qs/rK<IYS(,S9.*Q^Q&[/F2Y],N\
%b?eYKO\&4.@MB\J!J:i6MHEL[Op[NgYHjJH>[M4'pgP?,bRmt)ZNp\!;F3C2lC;BbE,r4^WC/G7pt:pK2MQ=Z&lMU.ei"n7;^6u0
%J1T<@J[9GR9ffED<>$@_->V^&R.FtA/>DBLeFsU&d,c+%g+'9mP_0U"`j#jF!eX?u&,M.lVYLWme^R.4PsXMP=gWM7^re6fqjZ)&
%TiFr%I+ddJ1PZSC'D>+E"u--8(B[4Po2sfU=YkPaC1p/,:%G,HF+n`p_c2M-f@OtD?7h?T"0A4JiScW4Lm?E3g^U)D)ZV5.(4.RM
%NsPHp(7)=NV%0h#BB+[_'A^IFZ/gX+G&/!fmU+lk4Q*M<>4=MY[r=TiJ3k,O!b8)L9(jRf5D,']d1I7-Xa"]*N^gb,J-DC(BauXJ
%Fu)e)Bt:_ob_bUHRqD%g-2%HT&Y;R82L-K>5XUS=QBskV3*D.<8G\j@_\9k4jdfoqc9uU4SHuf<H%+*$RT)b\OuXa6_!rD,2>sAr
%UeD.Tjt3:b$9`>"D1g`"'#,<k)#)Ndqgn^'A9^&!e9:]N^p`3o;;]rY@Gn=)d0(epDIp>"Z&5`Eh_Rfii=Tg8AmJ-OQ^Kh((9M\@
%8eKkD5h4Jt!:U!A;YS_4198A/8hH%9X@*o*clFrpPJB'\<T:OTMY"NuWB"T#j5>iqWfjQ':qUuq(#q1e5q_39&Zc663M>Wo/>*=;
%9JW#)<UhN((F<3]EN!!^Zq=28r+,YH?W3IdatQdt8b#bp)qTu,oX^p(.OYdj-];tH6#fk=iiDOLT(ngKFeD/`EQI9)KN9B=)1\,h
%kC#4-A.3/45\Xf'Js]^nE<PapNp02nj7NY.D`Y+#i^9ai5-0WsX4_K/[DR!l!2@$S%emndDH/a1G/c"eUV!KnM6LqY64Qi:G?HmF
%K;Z-$l@u&<#5jh2ZJdU(dPTRUi;d*2ls%kV/dY/q/W,9M8K4@!=Ntg;.[Z+%-lF(!pkDcW%s&%>[Y!Jf*Dr8K;(ip:NC/OaU3DZ\
%Y]PD[C>jOl;Xg_riO!_^o<6XNB?Vn.g9"=6@r!I$.MY_=)@PVl9&Z^_3_sfI'[D[0BiQKBnO6ce'adJ/&IX^P$\^[V)@+'o$AG6c
%+bNC&Tl:^1U:5MQ-lhn!=AQp$KS,CBJ9k'>*85-UdGYdpI(LDb_hs--%=MdPI>Mo2$R+T(<X9Kk^oM!MJT1J6Tn=u_K1#ND@;[S+
%5*%!`\l8oI.HV1B`PL`5^@5;G*$lq?26O@'0g@59^*jGN3LZ$R@$SQ*CTA.skph=\e5h*b^/bI$X5SHo8qWlAQGZoYQDMFnDE'VS
%CM@ajLLU=1.1P.AoVKC3fiq&:Um8_Ps/d"6jpU:<ldaSk8'hF_T@VIn6>ghG3-]4A<!V#eAi5nFi4Kl#B52^2(?g>c^+9eTB"k[L
%ed#i]"N2nAqV\I9L%dVZl\!Y%%81cE&'gnQ"06hDotg;QFX;Nrot`(*;"V13#\R!da(!k1JT/KI_>.+SSF9Qiri$V<#;BbOhP*1n
%lNOWe[FGLp@48ic^^>ai7:6#"-kHm+Wtm?Aotf=sjX]H/q//*&/MG8!_mEXCa6EC&m.2I&H2%!J)+^VsGc;5!B[-Vo?)nJG`t.ES
%=WcER;9jkr*ull6D-#tTZeTIJ(uEDf6WgTM="Opm3Mkim(ZiJIb!D=r/ItSi+J\j-H#VL(;Fsf*jhW)Q:nXsl#BtPM$TOm2#DWnP
%-,Z&A_'*]<.BG_C@jQA%9rpN<=u80e;'4T`?!YjeqVZ<40pcER*uo_RR`hcr3(lff<)p=i\;&!5e#GUABBe1kC41'IdYcMR4?/6)
%n`=H8$n4^(Be9i*3B+2+nY/-*$5Nc1m^)KB,u(*a&$@M@Xm1OS1X5Bb5'X]-eHa^(deMVL#M8B@a"?u#gCUG)\.5o^GgU-!2G_<R
%2N?as4?05Uihi"HVaJh9&oK-/cFTPlks]l:(TgT"Pm@%e'[jD[i39IAk@n'?*+h&cKNi_@f](B_A`^aJ:?DpQ(ZiIrPNfAkjhYBY
%A_DfA*h7@`[:"5d*ZSCn'HAdf_.`ldMW]```f1lrZDnEFc'"C-=s"_9KQjgf35PYcZTkhni2e&f9//ug#A;Fmei[*b#H,GZg.><e
%>[)5`otfCZMu)@2dMV:cotadM9&G;*l@ZG@gea6m<Z`;3TEP`sI;m1YNcSCS#No;\l"[['i/V^k89:gBNl!]Ng3R*J*5[Asd'Z%s
%QB\W]bPL.1elS;DJT.1d/#3mcLT$rLUb<8h5rTo[fa<CJh+^,c!oY8]&J]@'2-RD.X_&>&$'%Xaf<uD"GHC?i\5e*!Q9r_mC'DHt
%VNoLE"i=->;sQ\QJT-nk9mLU[_As&_A%Ar^#g[mrBe'^cLB:Eke\Rrg,=]k6K>VMoA#crQ)4ZIK\:)3\'\,'VQ,/[9.M#Ps4O.,3
%]<;T;!ZPW$$][/N9Wf-7Nu$chW!OMRZ%W*Y8qPN(jK(Bm)PY6</dm9KT>GPOWsA&pR0#XOWs?qLBANMa&"I(KHm+^("(qgieuS9*
%JYRLd%V>=KRDGQbV^hATdA!gk>1<Z#HoKk`bCKb.nAP]7%@e94PSS,t^]S't@]K\SbV=%d^b>?R^KS.2A,<\+X(("gL<KG\<r/:3
%\u;O8QDD[>ZF2Z79c+`e?]&f<MbgHO[pFsB>#b.61\:jg<r-%t!@(W^@8TC2r8jbKj.EnQY[QmEEA>oA@"D)q;$n:?GabGYQN@E_
%i#C'9.<(SHK]6LL^k(9+T7&/-B"PH;i-a'(ZUh/1\77Gi33Of_e,?%[e1R$%@G3-5J1d,&R<15?;Q6i&:.QCG.g1leP0hSm!p@0o
%;3fR%JYU&n=pWp:)ho,^^sQM$>ZrRqQ;'fPW0IEs7pup8PQGJq&$,h5$Ch[[BaJdF!bXEPTWY,UJ`?pVUf@J/L(C9m==%q?Qs<f1
%!bWfM(6Q$lhuqI:KBN\oZ`5?NM6%7J?&[i:<X>3"iPafZ^(<82C<a%s<X>4lB*f1dKtnQgK)o0sE2!O<33*.AEfSBD?e,8@$auHc
%o"Wk)]B2)5.pMZ%&c*#_EQ$(S8QU@RNh/qep76PA>@H4J=E3>T!WkXo`uq#WJs&"+ro@70B3&#V6RYca\f7ZSa.bJmX"(G2GOEeb
%)@eacg8KE=%QI;rg!_^o!G=#/1SU^#$$(Qj7D%T16c/-]3=`QdN'eJ&^`f[X[Ma)#%D0\hd*-IEq,AC=M?D-H\H&a-EPU6K,KU_?
%!N24qb\+lqLM817Rkl%'C`N#32]-L$W*2SGB/&6LL9O:K_gq>Y/S83q^gT;9f4L$FcBAouOH'E\;#a8M[,HO&6EJ?J%(IH30bnj^
%ar?Q\[_mXUQP%&d)%8Ks8I3cL"&?ag4a7D?g^n2MCnQ;gS5S+i:r%q&a[WBM$97@7aMQA%^ffa:<S('_.2gWP(fA(C-WXt1i-Yco
%>'(HtHMpS>+%I#aG3L[pX=3"o0nO7a'Q?FBXL&!0:1Qs\;DGsAK*,gf'`o@R`R=$3"?7@j9(X>23*tJRZG/\U)hEBmEsQ_WWJVVt
%3$kASC(T<fTN-CM!D["D.V09G88O,L7V<23:0Yafi\rU-3F@DF8.9Is?F&d.M?/`iJ.\H7!A=5iU_*a"f7;t.%K]DK.5`/Wj/)Y'
%.7,sJ^^8K3\q:k)33aR-RYAZ[L\jU*^5`5S7A3.o;[dUt.Ot:L!mY75@EP.8J4jW<9lRmB"'FeIhu[_q;_m?_6``:[`;sVGT,^Z:
%#96SA5rYD:J`El#XR8@3(n#4.)%\d@+0T5e@YK*&lC\0/j(@YER,NR*#)['4O5b[g5I.?!iIFQbHght6i"-87=2P'*d,9]]cEdQ)
%aZ0\feiGl"3XRhS``QD,6NLh^Lb08SE(7i<cHoD'=[3e2&p$GA7k.L=;&Td$F&g'u5",Kb5ULPY6F2*8eD56aE2Jg9(S8Hndgd,*
%E5;Qfs!NG9%1-:N2/.8/Oha[lk^\BjcD!N)nMMS2=;le73(!a[<er.d%1+#Z1u\=I8DoR8Wo"3k*+IKQ2'd-'6L!O.8DoHt&NI9D
%J[<ddAmIb*k<is%b`KWF.YXLs+bAYe'4\KrJMZ=Q0UN^j30oANk;4H'Hm_hhFX1qWWO7skLUuQrVDnX.UO:18FJC(3977Z:E&/bY
%f(1U=h4VOm)cBn:B8U.I$=1g`$CnQ.pMPWc2p@/k3'r2&^l*$91FR2KE,!WO:C1)$;.7eD^fam.1h<Z;G$[Nu%1:l/"\G7PJTEH6
%AiC#tUs\%Hd\4IYd6R1@$657q3<]j!*&`#d.;_>$,MJHB.jG`fB9+\s:uM9HoF#8-i(2gl=OKcr!_8rnXIBM13)E'0Z(4WN'KCHL
%_B=2.E'&\]O3aK7f`B+dlNRNQP%,ZIBMdXR,Eo`8Tto'0-;Xo("jZfs10$1cE4eURbkEP'3*qr[>f-W`6C6j.)&>1I\pTs$"YLG+
%Jf5CaIk$U1(-$pGMVOk,i0[,*3ZbQA,t7)g-u]loP7jQVJO?/lg(Xl6ha'4a)AG.]o**HETtkXW?%j./33([WU%''73$4UK#R$/u
%L2;V_&3'k?Q;7Sa8+K^?m"toUS6Yjo1FR3O?kAp'6%Lflgpqbm'K?l4KS^T]3;q!S)/eZt7ce]Z@=a?KC!)58c5[@Q\f)>D,jZqL
%@tF6QBRDniQ:K/ZqQP\Y%KZJ(An^,H%cK*XB]'joN/r\u^?,7L(\W)l4E-T[deB9jJK*1rYr>,A^h#jSUSi@pd"a52,I6\i!Q`WP
%*oXn;=X_LP$4"kNEWU7)nA);s;_+aj*]V>/Z8TWT3WR$-DNG_W3)?<DiAjUtQ+$Z,%t&`"++@)u*"SP[8dO_.n\Aj2_Xm2?i)ohD
%2!oPG"L)<QiX?>;o1diBj+0#2aqhLA#B!`(aW(g2@RLkj*&tA=6h_T2*8@&MnoHd0r)-/R)]Ug`/:O2,Jb'Ii/SK+]GQobO%L4UG
%%"Lj<_1C'&7$i=W"(rN:7m"S=__nW5bg57`iPuU>\"S@/2S`eQL'EZO5c+QC6N`+2#Tauq*.G;GO#8b56Xjc,Kr8VB&8+@>C./5;
%CsTDI@>Y8L[kktOD.qj^jS"8(;`&I+LEOR]d(g7'bFT_BM?XOs5s8gfi5ie<&$'2k,NB?k":L_g.7;sB!_5#@`%WBdUFqg[":Y[M
%-kk;S#TU+bkkp5=%`.)o#Qp)(TI6Jl'EoKA$]3LG!m[tKCe"p'U0Jd]#k4SD)'&_t0bL\XB*dFMI1=Sa#iLfc2c0]s6hYIc78FN2
%!G9B`U]pf/.gPHjErb^J-#,sJDffmE!G_,]9U`a8R%]#I\L&)pU48r!T2;?nr#9lnJ7kE_J&>Sb]U;$77n+3Ik&e6H>LDTKhsf<S
%&b_\6f.>`Te8J;hZ,pheqOO.,&U2T?9U0NE@3atp`It%$T\kh:7!Sn5V?@4;3TrD&0DiXKkVkWK14f?-mK[RN3T>6uQgB7[kf#>C
%R;@-*E#\`[fJa9mH7BBj4"KQ?#Q%!h=NMLYhaFg[AOQC7>;J"_OhM^/'55`AdPo,r'iCcF$4m=)8DfNU&=Fbk(P4-&&a10/T/1$\
%kIVRff6*I!oIMBQ8!IrA2[d4_']^2\Zd0l72_l,Hph0Zb+Pnt0_e8c$7;[g?mnFoECu5HcNSK\>@>=1Z<_VGqFDu/7?H,/I[PtQg
%A/X2;g)GlIU>InCDi*3]\T\DJ%5A+8TtMTmqHesNArRcLG%TC`&2Pc^_7_!@<nmR!P_OW1Ft(\O^!S/]"?U(>6_VBrS0<5hA<+1M
%$LH%("WAF#Y'3`HN>\rZe'h&rO-icE`Y1\L*S;<NIqn++Z8[F9W4_B9hMh?0A4L0K7etH!3_/m5Z=3ftFbf[&HlTXsF(fK^?Q;Ih
%p;TC"I8)XeHfLp!'0V-E`e>h1mE",u'LHt=OhDp8[dDGuO>(CsZ+]D3'V_m,Z+V#D7Nk%7p4d_+9RXtTL'>GYqAe7Z7T,7a`:cZ6
%IR#0_@s^QeSMr?@D[A_a0OfAbIW(/3f\XP)N/Fi'M,LU7N*fW5]kIoZ"]QSk]kNqG0S4Xm'SB+)\2R,9Fs>/G]b(O:rj;subo/;Q
%m0N,sBX=?8C^0<%U]]r3#i%"/I4XUemS,V?'c1q1D^-<N)8X!439itLDn.-05^Tg_$0f;:mEL4q_(SVuDe'O&rAR1=Ag2rRrsdX#
%PKV,%NpP"$Q'C07`:dd[S9Ahgp80Jm#U32`D[_p4b`;(-(b]kRZo@n.7ZHTXh@'HaV(8o3"Dl!Dd,%HD$t07kRrp_RD&T]=m!I=B
%b`KMPob1k7OhD?6+Ne(Zp,42P14B>YRr/-eJf:pR/'ho&c(Mc/4::_*KD(%Palll_p(fUtmAqD']b/6rG)ljpX[12c6@1NX8ZQ8(
%mELq67)h9p2ku%X$Ehb4GVdA>kKr(AoJ9"mTtN/aoRgbshN/@`Vu_8:Z9]?s[&@[]Cr@=G)c7t;6lN9g_t-nH@7FXC7d4'=hgiB`
%O^kTrHR!&SA4JF`DoVJ&4j\_m+UQLE*S?j<3Qkgd'\Jn'.)qYefj""R5**eAFS#[/G,NF<`*WguL*CsheJeNffqH*IP%-fO%,77s
%A!@OICi:djfKXFnDlQ3GFXX[WQ(a1L`:eq=6-'qN2[bYfdaGA5Z1iN+FDu/!M]:\7^qCW9PF/+sHZQs]6Zm?d8-HeN#4B_FCO4C.
%r3A"[fs&0!^&.[.*:M\i#8JXM$8ZL:eg1M=j,36K2EcXJ1i.)^mga*INnE2dGj*;+m7dgDR1\-lDQ1u`c(MaYE"Oh#6$l7^g4g3n
%S)/-3l-0prS$iI#lPm2iC\h2Fg9A9"8,D0lobZ*bQg2MX`/mt"<"CH%&apfD&=$Go$8`aqdq_;j&VL/FKJeA"Z?4#.T+(H(c*][W
%5Y8j?2/*R*AticWG>oF1hVa*o#Ver[#K$fNo+HU*JLnloDMQ^fZL/4EN*b!?1$ar%Gf];bLH8IHdf<:eU1%,fB*aYD[Mj@/Y7&kc
%)M<^ah+M*'I@+[dYnsZok^?R,b!IM9=9Uqu8g6euC-dd;XSkmr(l2f4\d%B<XDL'N9YsFV,&LJ\hI?*u7>jT[KsFMh)8U]Q6s5Uj
%*ijY)][9mZ4MmWhfG-@r?inK'[[o/h%jF#*'%0kJ]HKsmY\U*#?<g$s;"gk-BuLjdcCu"rChQ>4#Ot.>oAY+.i$&1QPeJ[o_09-V
%pn0G_!'G%R4ZZ-"_A8+8I+L!8M(.`@6R#bA-n[+PC..lbA!9-]mlCS)6Jgo:5i8Y_6n1Wl-@Ctc,^p*!dK*pYO@7h8<RKjGUE*h>
%.6[au!D;X_L*Vo#!>=;FBEsI>.h"j9Cs^!..Z/"3'ARSU3:R]>MC(QAA]91"aV$)@1LsWm[A@Eng!cg^RLB4.;;CUTEW?)2%^=Ml
%;hYA:]Zb^fSC.dIM8c_lKNt:Z=rmteRJ-]>>C!j-ScaXNTm"YK"`V14M4MQm!W;70+@*!FJ^T*D28II+q3#5ZOV-cJ&P)e.&/[n5
%r&>Jm/KD<UOetW*aq;5.91q0-KDs@.pB,qd#/MRfgJ2-E\G1&biPB,MG6<fBX%9R/d>5@Y81'RS"\hr`V1n#GWD0I]YeZ*,;ZS05
%^*+U+^I&)j:IdDZ?)--U0Ej.H*%I,ma+_U%9:T-rM[GV0lgpL-pkCmN0a.3qd;.pI]FuuI`WUV6.*u2OPtXl7^e\N08&-2cJ.mMP
%@LHOuj6./ui]DsmOWQhmNqs_9>oY7l'[VE%@YMlgaWPFg9HV<;VO:?s"Rd?D=*RFR5UZB,eat5?(/UFba<F3K"a7p\0fO>DQmCKh
%J@2>RJ/8Ma#mf-[Luj/iPRd>D;lX+o9GHDNYg4Da%k/*b)h;l7&'b0ZrcA\S1O_Z:`/HK_5n00C0gf^:nRG'0IY%,N?F-*8JNp(p
%dVq5R56AV4i;eL!S3&\dak[O4K#,R$&nVgpjA)/KFCdLI89/#KJg')Fp'j]KJ-UmfTK^Q-=p9cack!BOpk2F.OZas@,G^!;fW\gX
%X$F\f$^$?mOO?jnWU+]HC,W?)hDf]6iR(d#j>!u0UA'[ADakF?L.M]9DaLk&[@]4;kig*-gk[(^HR!Q,g^0.uiMidSkcHd//&iK>
%5mWbk;W9B-*P7s`Sh[UZ6_ebLOufR1/JPOf#V1'`H)"l=Alf4'(DHTFq/Htr`j:9ZQQ0/NLd>o*+I15d__)B4FLtJJn6j_&Ys*4=
%mAYQ]\f>1r+;*U1[u@%_>f2FBP'cnQT:F?L.$l;jCJGm2P*7)gM:Wk4,%s)oDQ@0&lYaUo=`E6%G=fRR8Us.gm%Q<;&snB69uDu!
%6a9(*%G*%T>OW&EI:A0koSiM]qaRef/Q&MC_HG/X=sd?1)3rd!n.!h&L?$CK4e9V5%XCRi+j=_&rcLaE@OS7J]]>=`eBN5RZq:IW
%mO!U?nC7i,LMp\g>O1Sufg2')UaD0YirZSR-JfnX$aagfr*p$*YM4XqG,B^ME2YNKkST6Y0-c]@!&GVs2Nd`#-F7u(&BDTkH"\?V
%3<3uMgk,n:LI*=-UlJ\!c(]@I$cN;M6k6\GAdD9[N2si1nnF2Xjpj(r$i,,D"1),#;f"K/4iE*?"u3)k@?*'2k"qLIE4gfcN<&FO
%ZH*L]/?.J]msmNSqD*j?Nbq:r-7gb@O.n?8OpJ6'mo`<dPNJ2U%4(9u_cn?i1_c>ZgWsX\4`V>0L?S/P(j?i(,->84ZO.5+\t0j.
%-fW^6X$XEj4lb,kA4G##b,9!.3uVA967)r+<$5Yn[foYcn^!3arOU9KbJ6N>1^LR2P!UhiA!EsFju?sj'J!j*C7-#L1<#t!2G<CQ
%Su<t"lQRh?3C$;6kX2\JZ"PTfTRe=aQP\+'[d#VA0hHAYaQTbbc@ha^Z?&uN=]ZdKR&De.SeQPDTu]fs!8!!;4:Y4IPWj:e.Q&rs
%o"hkQd?%'o+JighCV*,/\p?b5U2,!CVp4AiVFEFt)K;rs)a:35'f`]*n?$-dn1)?5)(?1#d2;BR3:PSB9cKcbb["Wu`ACseU2$e!
%jc`Y(68CAC5n9'2WeeaT8a%HOMQTb=5b7D=[$>I(KKDVZ'a^)/Pe^_c+[=C\5g4*4'kTuPXkF%+8UuJZC64MZ5aQb\Ubjnl:G?gF
%6\EMNJ^ui+cHV%c(W]bNnEGb6U]`g&\9#GgJbU-#8[`+2pP!5aT)@a0?$D=5::+/_j94AIALnM2*n`):-p!NJ!8Jq0EJ9L;@L4o'
%%kf6o_@UCdUr6R6O@>*0VKQW]0bpE$3sg0fN=.4$YgCbb!&b4rZ)Lb[4_`*TiE=W1Uth[n!&6qh"r7VYiX9X`o>=AgO%$_<j).'b
%DTOW*lsugrqYd9/!$O,C'*V'54C?blEh9!/Y:),"?24B17d3=;;i,*VO3[M7ePI*7/9o$[J>In_1YF;B;9,`12ja%RHqnXV_ms:-
%'r[K-n=!`jY[c^)F(l'rh=./kNf#,Mb)@ZD!Y4UW)QtA+1Rp"\^NpfF;3+Ga7^mJl!57Ad=::)dCoQ(>Q,/PIP9@6egG_M/?OAe-
%a/KQsh%+"]"YoRA-m2!23gE-`3MOV*id@u2(E\IQXphZDd_s0b)93K2:._N3[ongHg+V0M%q-#5(1A;.:,33a%FIS^3#0=+N4IkS
%m]f#$2rOipA&'l0GpRAc<:aBo*<R(@B;H0(78\9LK,k'uBfI\Y?\7n*ofb'c\XGYX^p&VcH\]'s[@WaM;6&D[(UssH#P=10Yc)\t
%SV=jg!m%@$>S\T@]g0@WS$)+72GLo-36<j3$,I)JJbZ`/Zr96rdn[T&5Lc#^J\_s3U8kTDq%9pjD(6X=&SMh[@C1(eIS9_aL6[H8
%&-A1bn:JZIP58SgcW04/fqnn/!@0PeE*]N+`i2=q1[qAU'W1Ig)EPZW5SKZ#pFDu;a\cb/qZU1LKBu]Sgb@,uaX9\Wc%#gm7=oBE
%7YLar#\B@#f+qo2>TnSS!#C;WEqt0.K'eQk<Y5+BG!]TE7aOYN<j-$$TaP7iGjbLTHdA?D@bjl`D6OX`ee&b;WM-X.UC-]P3ZG;,
%J/%J6]TT3Klk+tn&BD.0Pip.!K#8?9*$\m-VA[)!rgAUR$3MD[kW;m6?7d!>gVJ0\ncBnt?DU<E(eVY?5$f)Z/"sF%DA;T&c#=J5
%crUmlnnNToeg&$kGhSu>K5o?u8<C5l#qT`-rukc\%heRQPIQ&!/m!-:q'@N&1;?K*6]eR^,Vn,;=\8FS#9=JAb(utuMu\OF0rTXn
%>Tg1fAHS,^Z+JY@*'-`X!@aP&/d>Ks^1\NO=+'F@a6^;@3E/r`BJ<;Y6/3.DJV;\0@a3LVXm['8Z4(6H3VifAOKfk2rNMj_;hW66
%$?(5qTA%P0WgV\]/U[0%Qu_Njb4KluWtglKRQZceR:H[K$-q!*J_6[2*D>r7mm2>hACWD*QS2(*84%-_?g>RhW&F`L$B?J,23p^>
%'db>ZTd^r3:gg,:;Vqi/U0ok,NK)5e'>W^b8?umK6h:A2<O[VW$H!<@>2^YNh.<fkU3JXY;QJf2<5&JrScX@q\st='Tl+pD/4KqG
%Rl['20Np<LE!kPPKTRGIbSjX1Y[57]!SeWRDcC7&3g$/$Jbu5oof01(B[)D8IL0Mr=NI_\"6rPt.#+P\Y<qR)mG\\G8O;XsC=<D%
%)q/N;JT%%K%EPND$5+uo9^mS"*7@dp&0gg$P!C7%`)7=!c8=+A<c'bO$5O!f<of[);@'+86U'SS@AadYQ7pho!%S@hCGJeB?W;'s
%VZaV)`5m&*^6Pse6)sclg/4<^i-*WL:IqE'&\2>X4$JWl:E*KXbI3fa"@t)OqK>DWZM)KMCeC?6<5`\rnZN%9HM$X"AD.-SA7;&`
%@Z+0s)GU@4"BQeVbnX&TKm"HG'.!D`Lr7YM6aX(t[K+;t;?tX!C3daJEsu=uc7(]@(M0!\Op4Pa/!Ch6`"?n2SrcPK$@)W90gK4\
%ahX%&22YFF5CauPMJET`m'RZG5YF)<5oXe%:pPaS(?U]_3]Mu"7L=,B#dU*]IJbP&<2]0m6p44q^J&YS&*!u?Sg'jdKQY>X2Z0r4
%VgEG5>/@0"H0h="59Z?.#_;>;,O%XjX+WNEd56Ie6"i'."$MQq>3TT[>Nuhrb,1"lBK";_Di5`lkS[p'ZXa>m1/nP=1<0eX;#>ei
%K[\+6Q@,A=Z,J&0bh6C#KT)19*n?N,KZi(@m9)+_"d<sp,_-22&@,oq/V#/B+dn\@MDkV(:"Pu0qE6fpo3b7+JfY52MCeH$Ur/oU
%@Y@lH0[YUPPK@t>>T.&1*0Ac[)Vs^Tl!O/j`K5_V4]1$\@]pYX?"23M)O8%%*#HG9UIA.>8/SS-L/0?:7-LY3__h2qbZ-))R*NQ@
%(0I?R+<A>Q[_^q$8Ss-%Kg`Bu9ghOt#0ej-*Y9*6,h3$,O1i1>@KHUNnmHl$7cV/n\45QLE&6K;#r-4F?bfJn"Z0n&3[-.$'6HOf
%,h.7b/HjkS':(Euo*8/.,dCGp^eKRFS9'`G'"^;*Yn<K+'&k`EeR>".EWT?7PB>:fI\4J2Ih[K(GZ]^:<:i%'!(&J3'%]K`]L?Zt
%^q?&l,9(P2RQ&Df;7[bY\1ddMhDe:"K-Zd)SZ%)uc/'e(&$uG\C1.6HK0N'UYfTcmj%jg0`0P8_"<nLFO=W0A-fgW8Cg`noGCqtl
%RMN%E<sDu`JbN#NUe>dhV_/=%m.^u]OQUG`Yr0r?5H0EqitRTl0s%m9o.&W7`ea[*!42_tU&]ZfBVc4*Tb*_r\?(>MXj7P7T-jLL
%FY*`*2J&14H]\+-,g\ii8.KA#BfRMW'Oj^IHr6aX:imbH)@hp7#n3Sl:c1e27t-?D%O=8`DP4^'0UGD+'kZ0gdHlPN"ciOh,;8XT
%pQL8o/'n;l=r>ZqO9.*DNFEr=oN'G2KJUnBhNclefh[JjnA56j8nPYF`Fa9?/"_jp[+f<-c&\]9l,/_/EhWRG26^M\2'kj5'8Xn9
%P\n`g=EW9h^^S"m<II6FOEF$Q^-O"4_1a_t+XV%;g^6XM=JaWL-FG\gOZB2K.A"1$KBR($pV=M)L,,FIG-4*VMNTO_h<YE!`?E_l
%aH.Pulf!&md]?+m@GjTf`?!j$<L4aT"&R/<.4dWC,[UjEm4s,E:Uo\OPVaAb$d<gOH<0(UoKoZ2#>c7@j.0gm%uSV(1F6G13-Ja>
%@U?t6--J#GR2]TT+3F[p;"=Z)E5^^FOoSqD0:J`X5&nW3CWu>LPAcOfG"*ir!+ZkY:W-5Q_Zf0hN^BqmP'<dBR,^OI8*RR\U1Ga*
%nd/3(U?2cF!<8,qH0f8p6C?BB,3#Z=LLU>"CM+k0HI2#q'UNI5K9:IfrMc!PF*'[/9b%fRS"WnSMZ0,r14VG3p:)rO$4%PPVZ^;F
%gQd=*Cm!EfN.B-YOH;`?kJ@l*36P/q;\XcY$-/8f34Vlg#BlbBM4,)3%MCBVQ;JiP":=`E>`KD=h#m@5Gq&6U^PZu`,U.&eC18h-
%6WRt"`e[o.gQRG]9ugrpa]a(.g)p[X8;8CG<H?[-5"#Q>UmZ(2*_mo[A8l-@StSX>Al(Y;?#EHZROeJQ`oA`U=.J@-4T%j2eOoWA
%W=)UF=Fr#9(0Q4k*0R6L4&U6AR[De!b"JSYVBj8kf!Z_-"f%R.(G$O4XZI'`7>,q/A\B6RMZipBj<6+'.hH[l)cL)lC!Zu8^tM*d
%V\\)7W0&JDT-b![)hJmc3]o'*Q'p/`;2TT\M[PUJ6gqLHYU>!`R&KDd.L$IsMKYdG5jT?/b#&U@Z$DN'7mk.Gm]<r_[-9lW!9YAn
%4$`,N%.Wu=V26fS:'^=&nF$u3!C8d/(HOplSC_<A=]6Ul:k71A4bE`t\>nmfYaH+N2V9>'QS]<InPH%E8C3s(`Y8VV!6if6D=H'u
%OJEmoT&<e/4ogk?9LmhYW-.TYU.Pl)(MMM:LCR'Oe?T0E1Ha>sSO>5[H2st;jMWUG7EGO>MG-S#87r>Fa+KTf%73Xc5:t;6ij`Xe
%!N%!k=<BYCo^!f'RM!jfogT@hjX:b9QNs8>'IfXsB81466Mq^HAW+,u8;KBd@BiE"],&RWLGqj7E!YD`68l*u"0GLQW>J+4o;$.A
%0?s&\a`o0S_^n_)UsK<!9D=`);GML"qH4+/1#W[2,GTjD900;YSC(k"fk.6$+cp3)6OJBA5VSBp+pQ8k6!?2Uh%r-Mh9$nP3$RsI
%pW"Lh2[:p0rh;QndK'V[n/1q"g3B,rRTAYAMGg.b1gN$NlT&HW`?uUVTcG+_K-H@D_U&te5Gjbk#H'aG1S#rM6B!Ar[*)rr:nJoq
%do'[c72A3f'"5e-a'8dIb-I7#>LW^9GnBKNY#jm(UTilQi<iYQA(o$rku3BH\sbBF9RoQYUE(?<TN\>LK#(-j'eWnJe0pGI@$ak4
%n4d9`^_hYQ;@H\=#6``$bfq&*,e^p-0/p,d!au`fF;QK<E/<G\*X9@+h1.%i%l>GAcI`]/-L6G>KWlkb!Q(j)&WN"n:f?mCQp]Yj
%/7XKS_QZ<_c4!lQ_`FJE>*)K/MS0X]"ppekW0#j1psNcIH45C_,SP])Nmp@0drGFH!LF8e$*@8`YXk)qCf*`h".BjsPNXOO=9J,p
%^am=I7MqLXE[tfMk,8ma#$4CEH;+$(5bb_X3IPC!$)C`2EnVY#NU'^A"_\!+N<>(bM\PCM?7H^m60tFqPc4^XJ<Z*-q6RngA#[Z7
%nUn4#MZe`b/do`%Iju)l-5nF;L^N%"=r!2L"pBjPTE%r()<VJ@O=V'R&flTm8e&%LBeZ?kXT=D<\ku/+)^uaR)K/.R=!7amfO,uU
%@1fl=T[a6M"+uu,ZN'Go\^3sd9#(ep[P11Tp!;@5`:+qC)>"cN(W;nVZY)NAa81p_;Ldo;p)%NGc.N^pNm_9"5hj"`-%n[:;>QR-
%q`nfQLPA#Cjuj33Anm8(M)^Q-o1G_V=kLt/@hJ*T6&\Bl!>.i^AIG-j0LRi;*=0;.EmJi=!N$)n$1qDr[+ai=Jrgo",mD$h,ZYge
%8c#t8'"BS3o%rS*:h,Y%6SJlunP,KI))6@COBn4K$rVQ!/VcB-IXBe0I=i\1Q*U#p&6f=YUmV(YG+s7mKZaP1A7Wu?]d<91g]P=m
%?s*4k+"bQjJ2:>OLbk6&ADkV\W#[BU"*Y;X^K(PWO7^=clA%fPH?+F[A3M?(&DKJ9pCtPd3"Kg4791,C/NTG*KaTF\(@\&*F?l@_
%nE(rm47hWG]AXqI9YWhF1"6b(@G9\>"&L0o5Ajdn<6G=X`#:a29ooM7N`ca!Z]V@1Ar$9m=iWc7AlPp(a1/p2J9ngLn)R)u61MjH
%G:<nn-L#*+4Gi<;@"+1!,>h7X.S@2e,EH52#YA[A5VGO'4>4p9lS!nS+6#Af$)r&E5U--_J?/D#/,OK?,%:e':_[oh@F-OJSh^rQ
%_PafH0mbT]*'1'DOsD5#A9jm1[Z6"f*$\beE[]_KKIe5+l`t@G+,`,'BM91t(8n[=1@+<*-2aif+H]Q[=@7_/!$G*s!#GVMKqk5o
%0o;:UP;tss<J*j,#Z?R;>P<k^:'m1@#Yr*!8.l[a$(j!%qiD@u7t-=r+[,omm6M:D'7u\tZ&6q#<`2IXMJkkF,e9$!(HJdZK(b?^
%)A;aAg-uaM56YA-(.''O^B.%Cf/oi,Pt=JUEtU/\G/m^.;iuV\866Z/;)=5\81%Hd85Bg-OmX;0q[%t[D"6%jCS2=Hdh:^s/$_0<
%LInQJc74ENB0/^fmr0U<26:70hJ=$n\B&3kQQT`l[N4Gn4=fN[k^pua?r.$b+-j&R-jO6-b\<6_Ha4o?SgT>JF97S"'9$rg!U6[S
%+`VkXke(0@r]p?+@%a_nF@@#qPTuj#C$hi%Rg%!;AIC9.X"q4P680VCrd+-\AZ6l;V9[j:&K]W=CcRtb?N`Pd:t;k+ETJ6i:5C`#
%-s<jd&lMl[K?5\F0*68!][>*2'TuL$>='(`qk6fPn7(`pUIL)4[YBn=0MJ?A?l/lcLH7RLA0L\g<o>[Q,EK2R_:B/(dW&kb+;]:M
%-kNn[o^RBl3cHj\B3k[jN"0V8XWecfj]Y#T4Hc;Z$MV[K#QdMe>93eh@V]3?CdQ"YIftH2ha'6:e=e=cfJJn"F'7ES"F^>#-4='?
%X77dh?DaA2JsD)ZQO%"#Lad"IWuYC=.4TEC!75gIO<@d74L%.A9(5JH>W`k<R6[2LD*X1E[Q`-<W6-<X-@Q4?BNjAJ^-Io`EG(D2
%Ne4o7<,p(e2fd-@!$OfQY!KHZ?uUm]/jV3`.")ldHp.Yr\\uZ[?OJ09\j8*FL-h4?P39Ua&N'6X]Y[2gJn\=OQPW16Lfrca%o!&7
%-np7)ata7R!lKe+m?_q*#e1Y6+NQ>VK@>[aOJH4F6W)u(Eo'6%%&;G\?P)c51dOZWKeaZ.<9+q`8D;/m\0@a8AH8TKBb5[bX*(N$
%X=K.(h>B6d!'$>VnrDE>d`9.#d\P?HfK>$XJ?D=+%lal3Z1ZO'e#/2U(lk;#J79,o`^ha8l"2.r?\o'sk*Z"Pn^)J*HVcbAl*paF
%2DJ!XV2&Y"<5<Vq`Gc;-SMK.2M$gftB1Qur0X9:<&sFoB`\;u_:*5X,i2HmeGgKU0eRuf2W-l9LL&h$k/GQ[;\jq:2*TS@Mbbcjs
%V^QTe"[c<)RtB=(V*6hEH2<,em\s)V!foeN""jh?TgL70!/j#)OD&OO$J;r&*hnZ;[3nol_M&*rAo&/rN*tRHBML8`gM?Wk:ESh%
%%miVecup@q-Hab9Dj_-o]n5/bkYHgh\daPA"KR'rQ^DGK1npM4Q<GIk3u/%Bi!"7#Ft^'p#RlEm35,U6QDe/bUiaju[&K4F?%SsC
%VbWG/(ta'"6K/!O^khm:U3)1;"e"`GYQ+h,)\Gj_kA#s\J_a8Kg]VH`l9Ju/$4HC:iKU77kQW7^,2%gL>)Cp=)Ls6<k6)o@Xk'G;
%npcI`m%AcA"k/^d>-MKSF!1O#BiU2GhlQ:`4s^"2[s#Z8A(@!+5A7kn&_dlC_?Lgl!e/cfegM4mqr<+Z-$Ue/4UbN>99dU^aC6oj
%3me5!LZB)[U5iQ#NE?h[9n4L_V,`WK#Qs<:70GTcPfKC73EKW+%shW?)$@G]=GC1i.@,R\&C`d/.#&Qu3:"r=@N-I?Tgt6;kjFW9
%Ai?%4,WH*^D]0tj;^>F!rB;F"'knJ]"D2F*$n5io24tunBN9C_V)j-_WXVN7l"]4D0M>sQ:XNW0aS2Th_[@(KQ/N6O6GPi:8"M%<
%V4RsM^p1C8'+1*:ngI\m\J>3P*O.[d9QYUmTSlho:3tcU61.bY9ekV[d%+8E7LTU^fsUUB'%3)?MQK8!:i,W7J2V@=d+X3/M=oT_
%%#G-h]RXWPOFAj%M"$07DCeAD>T>gFH7VJ/6;or]r".<$MD)if-o"GE'\atm9\PL1g_Yurn%LnHJ`RJs*s;B-S$n8e)@1!\<sh4r
%U:1,l`"R6.O?>+Uk1l:@.'/'(%)N+o^5kRoA>VLT?4Y>\p>G12'cS'a_Gj0E4-2,uo.a(2!m-)W4kg%bQ4^7#4pC6)0eOAFY`;T.
%]fj^Q5Gnb9R"ql,O<g`""^g:a49&G2KsWgs)sHi:3bXonVsacnFb7Ruq1nrdi5JM0aL0tG7glC$UW0&_XUm7sdoi?"Nel7WHZT'R
%`/,?)Z&7oX9?J[jP3pL;L.G"6+bp@m2MrWBi*Fd1A$)/*AgC04<tSVKR(,79nJ6#0&B?9W/4'P,kT?5;&jRf7]Q?`8e23)n#c&Xp
%AE@EBl]=&F9">W=T%?^D^\[8-0@8?,!%139`j^N=cib$6Sh6lb(:7Y(:WuEA+Z`J8oUS+39GJro7VP#W8`W/AVi\;p"]ql4LDCN0
%)O/1e0S*_i_pi@Ik.>5\Y].l9mNtVZOq^fQLb=e9[Ubg1R6fZ2=DC6'@Cd+r,5iW'PJ(d=l+sZ.Lf(bZU7!%H'gX#MHkMaW7Nt,H
%Z91^D:oshmP"6srGB$4$]q&(I4h0'R7mLs%o])X',X#Y$Ehgu2%pBI/>*f:V/sF[T1'[$*`Zl%8dDA!iAeG9K"DP5>ZO,2,.W2In
%(_]2"]4]QTd*ggZ6UrV5OqmIS?:I:0.AJ1CcG;Lg^djqZ-ogV`7i;RW/&\/1dT"'lY[rsC+AJIKd$Q1Eg*7bPF^H,A<eMkC6saG[
%!H2;?jCP^,f\QWbL5$4D:ln3jB?P-`<FFIil6gg=''"_aO>O\+jfNSFji!6@LG]*JN)b<r5i4sqTRm3F1-:KR1u*JHEAW`]eY4\R
%@MM=kh,s"lV^">sgk6>7`'sM5=S]t'A*[LOC*T%@HfmnUr"S*Kkj7h+Os"2Hnn,+<7u<_n'N<3o-b^Wc2/\]p(J,%7e1)H5TRl?(
%20[!<A(Vm"<\3Kg"Mn3kgD@FG)Vj:IiFN2r+ddB^<fj9d=-)?OAko0m(BE>F8;@Zc?q@(f(.!S(]cUQi`fLaap.ToR>7H)rPX0j>
%e3u[p%2iJ-A9-Z'>W7R+*BTsS<7S<e(JU]ML8/4NHc"ATgHM%+%.$*6K'k4R,d#l+&8mS#9m>):<W+At<KqNOk1uhdF-%#1p)(m!
%`"!=UHRG1l>`oAo=gf'&V^K\_#f<$JD3JN]$*505<M[;nTo.N&/=e7nd>WMF592c8]r4i'S.dBr_QAF<`'W'Vp+-WG"H>[R86S4l
%'TeqW)JPT<NPbB81D&(9J6"$Z/0lQ(l2$MpGZM7E^X(!/cH_Or-]8.,$IM)B_9e?qHoh^S*!+#T+ji"`\E9oD=dMI:FOSf]'TZHp
%3^B'*-Q7-QieTY3XsXF[F+VS)e,Y(IG784cPmM@35\jhpmKV*\;ps,rBW`%5M'b]_)/K"mT#2LT=dU?:[@IBWiPQ%t^6-,_68fH'
%(Q'*HInJ?@K3EHeHh2rTau%fuVBKO?AjCGAV@K5UQp[$o3Vah*%^n+#-5&o1!2=Kea@M_(<68:8''q7`HU53+KOG3#j3q^dLhuD#
%V(<Dqcj)i8_uM#6DN`IiUr:1MN/BMDlP0_%oH<28U.QendK$T\744p7&WRaB-nYj2)0+`b:a)AI%WGZO:m>VG,2Y9q6)Fk)**@;\
%"GOZ"@8.Go!ud6E\hFgjCd!\)[]/k^q,;0/Qna_H+AU)#dUut<=Kt%W<A?PaTk.56Q@`O9fXX]=Ob!n5#8foaU'*aCVr.b065i=j
%4CXX"DS`t"@TC"?NFme$Zk>N_&mRu@7GO:(;le],1,+5nGTjpK%LW]E5dP>>9M7m?UltD+*<6Uqarji!*mBr#KZ`)%5en3'r$kgE
%Lc*8HM+c!9`#tGB!r?RVW&B431YN;[F<9^ITH0uUOV)';LRpgu.^kFk'(uNo,r.X-5#CMT[S`2\^!g*BS>4UDN6oC3D)jnMO>+k`
%I[b8,Y."&96/jIeqQY.+h[bVKG7l)Ie4i8,OXk:-:'+<-X.-ZDP,-,cQ[+^qo0j&#YZH['6IPG%Fi'4SVDJR5kp2:W4*V<8%4M$0
%%DS.Kfes+1)hIq;Y"ZtdL\NIteX5nmFU9=PfTJ(QUtSX5]nD]AKB+-Y^_gd(&.u0.;0>#mr_M0#JW*FZjH5'df[DFP=coCdLCIRM
%m'p0:6HTS,2q'OWA=jL39X-f&#r!Ckh3'&biKK0dAib3?,gMhS)3f+YOVYd878,8>8poXfUQV8>1VjDfMu"RSge;"Y/APtYNICXd
%]]87%`?8I'K^>%I85RJ]2FuDt<"q"?B-?^pK.`"-$LZanAH<DDTn1+gQ_1W4?qXC7^s=aZ:-oh\dL*qnLo,&Y"RZYJ]Q\._^`Y#p
%d\-]u1m;,]K</%tP+[A3[U"J;)%,p[L00=FR<Y#7M9SX`&@lipI?sS0#^t&M!Vcd9:/96KneNiR,^`gg2LgUF7&kk<$qMAk(>=+O
%%eRY7l(L#t3G*5l"[gfg!c)_CL#\iC;6@Wo'pQ6B(PNSb!m+.)cSJWEHL7jX66V8?fEPM+l2BV>Lf1LPJ^(@Y>'@:(Rb<T]KpN(F
%KA)&=Pu2j]k^/V-nL3HRO>,*-^I4><@LbLUd+IEH8%"MT,2^@`m6WSS5U-Uo-gI`4/k!!ZRVm5##;$>J[7BSm+7N3NM%_U('L<lt
%C^*^C18F:S2&g$;Lgqrq&WYU\]1FS,!W-#5P,oMg1u;gl'0%O*M[k[IEWbhH`\nO6A3j&^CjD#,F&d]^+%&RL"i-KRI'B=/)FP$Z
%&472P3Z7kBR4PHoK1n@0X\]!hC*J%o@J!Jhk(9DM@&1;fd(?Y;"taEdY.8fLr5adiUf53X1O420;N5q9K9alKYmeX[4p!M0'$D0,
%5$<`1@Om%@/GuWKJ/Z1i8J3"oQk9eYs5nLi3'+Q@#]4:][GFBP$;Tt>@arUpG6/G@['g:E"9WAXQd(<VS3SSSdME$Z,P<*u"f@P7
%&7$tfP6]&:"/R*G]tdi>QO4mV"8QVo5`'5,!.>l?7+M\.c9r.`I7>Bu`?[^0%80Mo^!*K3-r/8SZ04dscE].<J[DI&g0<,H@<?JI
%Z>pkgrWbq)HZ>J=P1m)W[4BID,b9U8=kV1,\QNVMJ$G9V+cFphdtqYT>15qZ8/OcPXK7c*(Q?.l;%6XQ*@?au)F/%G_6PFW0QMl8
%EF^D.Kt<Cu)l>e>O[H3N:E$3@VbVoW_%aI5G#W;d@A>0)[3nsf-m]_o=C(.pi`XSjTHsj=r62#_ED)f2IV1\/Zu/?8*Eu>Dii;YQ
%_t699%$fn[cnVhn%nEK2bb2#;qq?:_10@suA4R4!?dD25SH+BFj"sg3V-/3AZH\HoAn9`5<^MYIbXCt33CD#,TiIi)h4kL;0t<nT
%#`]'57T)^8P)ZT<9NGAs0LSOD*lCi2LY0q4A<"<4mXW]d"*=rk$Kf7aU^`b\SckQ0X]s0AAd;L/)EX)3:`3&crltXcFGde&g3$NT
%Cq8p3.>t\?8]m48%4)E.49a@UX<$kI6&"(W-a4W\GA*L9-U`.1bTZLnNLY<#&+Ei?n4B;^8Ra/(d'sYr;cY>\Wq`[+M$3F&R".M>
%f7`](b)=D[9kJ6=gD(VY,'t2d`]a[f6.RdR['5$.Y'm@Pj]2A@#]RK(CJ6=Q2P)`]YRN]i@*aXNmu+!qQ*2`1NsL._7PMn()l3dc
%9FsbS5pL6J;e7A>a[d*r_@;]-_+N[?mgM7;AT17:_3QC`nRl]>P&j)?4Xq3RgjK7r,*\Bs-EJV;WC.EXTuCoGJAT6LH#$m=68FXN
%LO:Q,ej*G=+_.,;O:(].OgnJ)mflt1(eUC.GiPVF;2)hl`ulF-2P%)@OV!S,"^1PVlhtsNB7\`H(NL9bDo(o`]W>mN)Sn6?`&nLp
%Oj6^rDht9bS;dfFA5?/1Sg;rK8hcu(%EbOTc:GgrA)eK.DK'C&@U.81[1G3g5\+q3@ud\CLCV1c4<d$&81!G"9bA,TMST:f#jB>r
%A=h"G]):&q;i_o<"\*&7S>uE\gOZ<MfTE5VZ*>F0?li5)'a.Hi(n@8;?qWOJkq(;k;RSp-,5l6,&GEp!EG7u8AH$&=>O2q!Z3IR8
%7OpGH"giema$H#p=ORC*f8>hKF@$8O;?j,2kJ9E>:FbTk8B0u-2PuYNFQP9L_tY?k2W,$40Dm?+(Q\^cb`7K=3ZmE%&FTZ5!SnnX
%VpY4o,ZXV-^X-=KAN_7p=;7V?&kB13W:r7p0IK<-5q2RgD1#^;Zpc;B!#Iup84u2eN=j*#;;?1A5B^kcOr:,kiRI':eM71`6"$E0
%f9%?t%@]\^M.#Yr=pTq"6q/,-VuasFfS[buS"t"q^dmD?Of<IDb7SX(bu+Zi:oje_<!p$`(';A2)(j0T]i'g)rreDh=u(hdc@TB0
%-$@uDEhDje!-!M>G*J'kg'R'aIjl!TN:8lP7Z^;H?@grj[[EjT"4SI23-FH[/5j#18-)O`QGpgrGBT4lN^eu&gYua-TT6AZ63iV9
%O;(WG--]S+$F&8m--"ft%9js\L/^&p+"<OFp88H7Si["C\'rqA5b@\0;64!13AW"CQ2qU)+EbS_@,e!!N311BTq[:']MB.o/jd#g
%D9$R-m?RrqKp2lR-Bp\>r6Y((`MsG8L3_?4;($KT`3Q5o8P!sWM)GZkL1b7l1_usP.g.j?3$WMbn@k;3.kF^Kc.#.]K&\gWB4/BJ
%;PkZG'JeY<U0!76C;moYLBR#QLV.hH*m$mioi.<d2f2T,ggDEM']Fo<WsFHC0U?uGY(C%/qi$>MM6U\AE\\i<]oSp]N$K7a1dI$W
%@%9)19W$]'2/![J4sm+L-d"m)I6qm#n&IdsC<N+_LVi$%^kJ'YD\)NYcg$;Qc.adS)A#q8BZVU#>Cn#k;(&$0!#JU=ii:#68g;b8
%G*g4;:iU@)31GS5i_?a6V1o[5A0cNDljEn(0E]1^*$eBHM_Xo.&F,@fFfYY98\'@Kkl-mD*O8R?nFRM-)EHKF@Yp$glk7ED@'t\2
%ULGQC5;_utrMT!h@N2IInhE$X+kpI6$\-d#5r^a?J*DZ>?]>q%X4SOm_eUML1Eq%l6Y(a-![k(!8=XsV<[&J@&M44':`AkjC!d:l
%>S(.S#n=su>$uk#:/RUY0Q[QR8OXYN+^5[Nb0#V&KmG9P3KK0<ApgBgLGB)T]HhP9/)eG.#/6$tZUIU:P-^f[=m\S#6)hjEp'oL'
%\Q+aMFKHpE5bsU`92]W[CYrrDe7'\p]sD%^2@.l<+Z#:s47kMXI,WprAi%Va!@UDl6di'4V3gPFGet)3P9^WH_BW^HR8\c_Ms]8`
%^uhHrXTe2`"eZ0I^<d^c=e-KgRE*5OD#n6^Oa^_L!&r(i#qKsOpSX1G#YkTk6:.@P<sOVDCeNES;3Es6OJEPXq/Z9lBV#Q69AcIF
%ifN#pKj,5VegkVU)jqU/P=>AFbdt],c%7huofL66g)rV&J4QNV"FN7_MnM1`<OTj<5a>g.%R$Nc!oB)5H0j4Z5M#'YGeT?-.C=D*
%::G*;eS05>;:5Kn./0X:7bJF[eoJZg"Y9t[SoMIe0q?0Q%oV;^M6]EJ.`@`hZ';Xs5&*Z`c?g>6(e<Y#j^TX5]FuhBPn5DNgf^m:
%gIjmE&Km),i5)H5oG!Es4.u#'r<8@(%qE3(BbCZ%F/(I'Bne%FNMU\6"bU9ON%C'c>)Yq@TIB(O5>s*OYSe??D&JaC+D%H8C3,8/
%4)=kg^g:,[%#2r!FQ)"!C(uknS.#s#UO?:%(fJ_4$<f!`@GC)f%H@9s@[P.'m!XCR5`Q?ig"N-]V.prY:'@\7,!H#i)-WHYn<fq\
%-g<*#iP>o>)eYNJ(I(u!^aE7FcB@f/VJ*125r?_@g-TOBp>AINS]%qgG>8#"cF1Up#f1pAP,.4m-\qsPU0F]UTLf;plrbqD8$b<C
%2<gdMM3oRdUcNa^WYni8EFY_t77]"fG0;)IUYK.=7U?)GETONDg'['i91G?-61g/M$&khrV5<gFKt8BOE(gAeV7f8OJagQX44W1g
%)C,Fm87Q9XmidJu3^-[q$[\.4?/r2F<K#uW=T*t"Y'BiF6sm`&OHO$@MIk%fL7GZkLQ$0qBTebQ.6NiOGp>$j#foo=^U/l$=BYeh
%d2#GRd]hSaPCnksH"n`B*o9;58QIlpaa65d.10X^^.8%Q/PM<a(3Y=2Pt)R+q9j@=`)P!XBTXc+NX:JYK\CuH7,uk`7,s4hHP1$q
%D.l4e97YN3Z?n<2!,][>T1N:W!/lrE@>hZu*5@S+@7S`1+$Z,!6%QtUF&Di`ArM@C*g1(`CDR]0E!-`!J.(@1b\\%WE\G7^MPP&E
%!\'t2.Vq9aI?;NM0!u-dN[gS[0\dMQ^_[2!n]M\0(C!$C%PZ7GV:sY095P4HED5SgL7[Y)LMVV`KT+uNDIZP]O3[l\R)R\Df4`*E
%O9T4@[aR4Q`/'UO2U+Pc5YSELSXL+:E*;bDAcc$LZ&0+ITbC2J;F8JO6<:IVAJVEPWTFmS8h\p+K#)(o0[S!RIqe4iK(1GdEc-7W
%"+c=C_abA<iB`Xl,TuS3#aWPpm#E'@D!Ai1Yk]^@#uOk@#,iB^7#D=TJ71DA1lTuO7T()$YnDj_&;pDu\79WL-&4lfmhPOA_kR^"
%JrPBoVNeea%2(oMjInOeqpn0W'I1d0^%##'6'`Dn*%AT6Yd*3C_PBcW2[Oi"0f[3?4"H+MXM;Vdj$tk(,[^rLS?,38O9p,/67W2D
%XSa&K<RVu9?XcIi=6gY4KIB;m2STCa@`S`fj2A64SLEea&PsL2bWnp,<bkUn;<V;-ZtNRk<8,HLr/6e;-0aP)$Frnug[O2.^Ep,R
%cC'u4cE.]h@=EA(^p54eQYdG$83JsXA?b^?Km^!!o3dnm++s<nSH-<R`"qD(N]Ce6WKN?j9em!,_<PPXc3rL,+Gq<[bG&\rTLk+.
%'IBJdIYH)!!V=Z2ME$aU^aU-_!m+@?9j43(\f#'NGUNqQW=R[l$qOnc8USpmTC>(>1=rInPek.U*<mt,Tore7UpOTFQ8KI)V&U1D
%T'$2k&_IMFicLqLH$ioRl%>4q@H&P%O8(-p11!k=&27SojFEBa(>BT&[[:$&?U]N+)58j>\[>klJcb\c7H!qMGo.T/cW$uh7Ne"W
%&,E):q]8XmCka85RhmU)8>VJJ"P9U5:M9'R&Q3+@5d5%gqJrL,!1&nV)6=Z@$u;l`ZY#"*Tp^'UqsSR#'r6t1V.>F311$>^rpJc=
%3Br^R>&btoSP8s,_5NrdotsSkO+j&EI^]go"go''l!_h]8.\[KbXh;l9NRBoiO)%#0:7kHO6DEYDG]C;^G5A"AGtjdft'41Sj<Yl
%=mi0bGc7#TG&63Z6Ua_RBr&e%O_U.nARrj!WLJYsP29cER(*TG]Z=cj*MphTT\uhKj&tBHfGQId4%%-EfpM;aOV2Tbi51[[U)U*$
%nEUqUOXV$:V<MSMR.0sQ1a5%':YN]S>R7-oa\F_R_8FWr'0p:$OJYGurL=%Pp2hc/#p,$R?gPjba"L=]Ai\tgKCe1ic-e$0WZT,,
%cC=ngC3rf*^a%&V>a36X8$<K>h_Y*jW$QaPNVtK8+ubPCGN`chF4ulU:7B!dVnOAp2d"TKo,WGnhJ=n'0jpl;:X&#7/Hj()j1Q[Z
%U>K@lX#%k.9BWuEY_sAUTCLbUjFPC[fm)rob[Elf?[2#JqM2a;)n^CJ$2AG:]n:JRiUr0&/mBc3l(iOV8j?hK]L0F=abQaPG8Y1Q
%nAIqD7s$)&2p-=L0+%StF1OHC'PMLQCj0iL&fB:?fc>pgoYr,O(q\GY@5Y2LcmU(Jgo9_GX[tH2A%F1(,Xe*+&`">R):#-JG6VbP
%K\dZqSO!J7jpBLBFiY;uA&`VG)b.2(1o<?`%[7?CVRq[qb&f"?Rms8:^)VF0)hX\9=\?9g<-JNhT:gcQ0-p8m<bLI()^R;G3tW,/
%?J+[j0=5nF[Q=S]@/AGQ[Q@$6K"04a)-E'IqN:1U&ugDKdG<@56:s[.h45_1I<$9KG7Y/$:ntWY!'P9UNdQ&*>kb%cS+>AQ`'9Bu
%msK=E=^j$SkIUhB'$>dfFE[_4nt^;AFE`7l&ou49GA#!l739/lh]6+%KT&^kmO6uu<44mdOJUTN[Q=IG&NI2Ih&1`11&j8/]/+9n
%V/NJXGD;ms#gtWB3s1fR"e]qJ4%"Hf'1TPpdi^V2h&RbDq<pe]41&E08%u7a&_2g+KN#<@6fp\5R)X;>F>oB827>U?Lk'8Nc?=t"
%.k4CXfps;00KD(WmLC[I_V<E#mXY*[+%#5[#XOeD*9lks*J]*u3Sg5LnN>a+)r7')`7d!dFE`K4V9Y$AGK+>19;fCS`(P>_8p=o>
%!gUYoGK65[oc%^kkUpm>a&.ek53qVugDut!al>6g]-AL'W@!ksNnB4_Q8H$3O]\qUG:-i(e<TH>]N:l?PD@.Y0%?@kCdVuVFEcaN
%)S)DtF<W[`B;CFd1[,SjI*QoU3Q<I/gRVcYK1&JWG)%`7\>!VPGM$DWCT_Jtk^S`oE+QYf`5dHY1h4-b-*i34)quC;3$b3If^:<.
%:smVBmJmW+9"#u!*O$A`hV?cO"AH+;ZJ?*d;V:TJ^C(Tj&ts,XGD7,"+`>Z_)<WiBfBDWF0kDaXh47t)%.2k"h&XkPK]&NNh%@Sa
%i)qkI4$YP,c?H%q'+$:-FEcb@B68=tJe5Z57X#*E2T^b4\i]+Z60k)hh*Eb'dmg+EKAIi<bae)2V\^663o->ML1i%]h45]GBZM-7
%GD>&d"Z%>8*)7,)B$KQ-+I,R"`coJhQjRSUG;uLV:-%LL_`9)0ToJNdGh\sqb'.L2En/EkKa\9U@Mnq/pa+VWebJP@!NcU5_06.W
%:[Y^;GDDqsQMZX0cCf?Q9P0:Q%VCc3<Fk.%1GHY9rcI556S]msOmNW<!YS7rP23r!B15h\\q;5h[5<E\DQ-/;badomkc<-&F9`!]
%UN6R044nX0faXB3Xu@.eQ9,odhM`Fu0f5K5.E*<"k0VQ))=GlC9(JlLE!Km8*RHTk4/>R&(Z+BCbQ,?\6mH@:FqD"<^=1h&@`ULb
%kj?U@2V!cC%Uqr#WmTQ=U_&3,?0LYu&2Nhp]cB9BF.eNK%X&)65o[?TD&R!*);4D-[tk[#:2UkOlFi>7D7T3277Q.GJI]C(9t33m
%*NW^J&p>T`R$kgk4A(d&\Bi7UY_RfTP(Sk=M86!NG><V/DX])@*?L>8F2tL5j>@LKl4R.Yi=MCVPb;c?nd#TXp_$fkr:!X2W"!iH
%+A#\/OkGaSH\SLfA[\r+,ge4_)F#WjA37tnfoE:2'4*cD`)A?7YoP!9TgRt\G-En5&$&09LH[JeChgn3Y[)lk6.2"MNo84d0i;7=
%#S_i#b%kXI&hA-;4#THqOk7l8(@=,c*F>-Z<h7p(Fc%>#m(+AobJr<TZQ1"N@dkVKSKKa>-_=^[_KBKPH?T:\S<:M&NS)PGcGWFV
%@QVL"?J=>F1JC+il)BI^['X!20]TRYKs]#bY8nSg+lmORG(t)D/oL14_8>fZmdE;,L,^I(D=H6s(+[=cerH%"9Y=,9#>j7Q+l!:(
%SS;+'S^u't@3Lnuf$8q7M^W5FFq?J'd:qtjW?\eqXW8YgX>$EWK5!V:P"octM)O!7XdpX7;9AF$#<n@W6_h%Fbb>ue6#-`&:"(Xc
%CBo\.!]-[\,BbZQopjUYJC,r+cr!ICWL&4-Ze?R'_L-fF[A0lm,?AHbK3c:tUH,HI+^B.],H[L;#(]Y<;e"ZOi\eJ4QKFW%ak&SS
%*@(]AdobuGEFG'e@(##^aiMq5m:c/(5H;!B).M*a%8o9H<(^=4WL]^611`<h[=_QuLE!35dEf&`3iO,GK6e:XWL`9Aif2Ft*^?.o
%3iO-p!cH'uUirtr,uiYjm;S#L5gDM=[54V6:E,gIOEqR08ipNS`&0=()$7%2Yeb!cLgV8%aCpA'2gIq=UE'P"#`IK&d>h[Nk/M()
%$&R"JUE(Z"V[Z*WR+9k>9f_6-#.O:org>Oq6-L$bVmJ6TU\p\2c@CqBeOD>e42V1i$mVShgeYBAF\Y#)"'!?%Vk$,%@]O9VAdm")
%auJQ$G:D5S2l!a4F!-`(NRH*s-ZtcHd`rDu1R\bF41I6B[$d$0@8hNGr67h#+;TjQ7V`6W&=mjXPJmd,7(>*e[!!!rH<FtL+;*c-
%7VbLjAgUbp]QSO8ieoa%3t.'Rn8hnt\jp)M+8?)Y2H*(ZPh-E>,&lCted`?i4:?S%erD5C5^\RBc@hM4T$l=Y>2i@J>!!$2Nhgh\
%*12t\OkO6C'=pM%m0KoA@cA9)*=asX#B`p+7a=O^g.:T>.s[oG+LM<o^*+;%,IPGe$Ie!neBXjZPLiq(n5CdECTM]8ifQKNc>&-D
%<r+nS[0);;"QLE*SIc+[YX*)<ZGL$n@QU;$^iet]G-Eq'&DWf.%X(F>3c)`XM"_3A=X1@"hZRBYB#JlZ`F(E&,IYK7lCL`i`-)Ol
%Oo_TqgQ@O@BHJ7!hY:%g*&D%c(gN@lH&^Gdi>e"LF^dH+k*'e47VmiTIQHAWfFHl=(f9DGM!Za_B/S^,'&+T+`;"H7[6rD'q'nG1
%*I/nCGSXr1Fq@<b\hVqW_Pq6t-S!(@<Kg>5@()gRm(F@+m0n'p/rn/!L>[H`gh+cR&d0FgSMJr^_L^uu`b\-n>V_@!Aik_N)$ap#
%G(^r5=rZ2C0b@s(AA;s)G*!7UV_d(!gH<B';eA,7p'=?B1><Dn!I\?sAinut)!r1U'*M7Sf58`Tr:m).SMAl]iZjaG1>B(eSa0n-
%Ckq^=mtNYSgCZ_"BO@VZJKlI-5.qi?*>+*`+4utJM"=(+f#DMr,U9kuPhD'R%-/%<e9:3/+WGdg[_mG[TeW'XgTfY<fTFktMd>fi
%B@M+c-K4]5e93$-DPX`$:IR%8[Nh#t!08V;*Dsn2ZYN0M#B;'oShf&oqHTCO)m^QSKZ&)(1>Cc'LotR<G![dDbK+LTCU!!a`-*PA
%O5tY(`--MVY>\ahPg@OMR.8n8)i`uUj0^,e2T,'EfT&X(r!YAn4/04tA$duF0j*3[WI*5E<jG,SK\;BWAg>+OLSd^Z[Jk$=[M&n1
%m5%@O7lhS)FZ!nqOqb.%H:DaAe;hNm/XSm.SRlH8P1p:+<cK)>FoXg:O%h"2'<8/kTsrd8$euO1H1)e8!dW0$S^H1(CQ"s*oQE!h
%fZHg)#JK>!1F:d&,7+s?gD[[E.?%s;2g.7q&J7`\7W1dt$Rr#QH92c.jOOYo-tA>)Or:qRIHdJG4-j["p"(dgoQJt6rU?$I7-X+(
%Mu:<go6:5r^ARr[/,_U7!J3!)I!tZj*RS^Ee?`d;IrYI1I@\L;I.XI(J'5S_KDaios5T/i\@AWLqWM"qm=3+UJ,>9kIJW-m=6KMQ
%I-a)g=!+(4gV;TM?Icf<<aY@Yii@:4kANAZ3e]MjS(F0YF)h$@k$07hT)A;sY&;:p`;eWlnEi79o&$UbqVUIK[kFoA?+m8uG]E\c
%aX<VXik*[_GP[NT*6d<D/oKS'EUhTD)nEDke*QAWltM\r(k-o5^qRR.Fo0F8+mF.H)U+A<r30QG590Oopu_M6lYgYWN20a(aC"#2
%NAV`s^\0U>hu2/n^UsF;S's%8rBn,?[9tPqkVp]Aps=,W]mgBlhS&a.g$S$Jk=\e4o\t:IhqN?6?emrJS+F,X/skq7G2_;$>]ktm
%+3mrcDpSH&F8g[GSR7p>d>/anmqZlDf:Ur,gn*>E'MSf,QIl*&ic<F-S6`hSL%t)A:@S)X_inH`40F&(TCURqa56ZAS*9cgpPitZ
%`]lZ]#HT""Y3s_t1Y%Pep9hUu^OCBJG5fOOdr3"33*S/470D9$Gj]sqaWRb$4hj"j]tRW'Pk!0bn!BBmDn`o6HZ?Z6]0+MGco8N8
%"b-?jq<O6*=''9^j]5H#FleY'Q1M%,[pTPD=)Qougk(X*lH('<-hmK"Zu1T@5@7d1?%'7N;L5As\,(-G06bp[SFKCrbB[]lJtKC5
%M]@_KZg=/$^8LS^r4DRDcbDJgFoD9-\nWT>h7k=V?7ta(hVQ!CjSZUtXYEsd3);3bf=8Q+I!=16ob0KuI9HZ$4FQttmD\>?Mn;K'
%fQQk<jn<GG7XVU6Q+1?592=2BHTZ&0D3'>$?IuAf^HK@1OkjupHi5T;gJRD09,M!6ju^2h]Y=3fn%ZEfDjd.P5?ogt?g)Y0>&t(/
%,2U&GH$t!^rqY73Z2r3&?WFs=)TLNMcd2U]m]LtZN7$A`2E(j=mdg#4jn70YgXE2LUY>^hhSqK*+5lVfp$MG&q1Al2ro?TjNp9+E
%_h'oFmfepGhg9I#c*CatG`^of=>YosDZ)b9N6eX[Y&6I0(/ObNj1WIq\lCsp]AY/tSd37=%R)\Qp`M_EPMe0:!f-_gNm6a4=I/!o
%1r+]QiLb<3F462$MtXQcQAje*!6Asbrh'__IkFU5s4jCC>quVnA.7l3eC5)#L/0BsIX6'TqotW%gEhJ4WjD6diqB_-M`X)?ol*#g
%-hnjIhM5p]I=BO-S_ngCNgW"%CM3H4H^`jP;;Yibnl\%4*b$^iVc:jHW!qn*_h:gfQ74@%c/G!E]tD(nHuX4Vrne+3O\`ZNaZNqW
%KR\(>lJgV42:sP:YCH7FWj5r:>b3Q>R3.],[c#%C9holR,5]1Pj3d5<l^Mh-\\>`UHGPGaJ8WHW;Iccu3`+r2PhH/)F=s]<lfW81
%SjG$n'@9lh/]bC@ci2cgQc<NPn0>)f?1]!EI:Fh,G!3G)ri_ViN5r6WLF)Z_g=uX#lg6phNHHcWc]J;Dgf5:Kh(q^Y'DC4JY[gTO
%IK@QSYQhgFYcNlIjBOI-LM3ae,W-?Jb$KO<H?F@Zq>'jJq:W&ubP"a*286gX838t^I+pm=o4dg<`S5;a:X@>DS6t+Ol1E`*4E?1?
%p7IPN5FU7In,K9_it>:n?$O^gjP\SbJhY^%W:`*Iol^_c4H@=Rh?1ROA*LLiBEnIbO+!S:eo-J\`M%5C--`5UM>+7t:j"TECrp(V
%H?m[!Kk3<K0.noEQ0DTBmt37F;Ni9sL]<bE\9Da.fC*L:2s3#+(Q@h5X,G_jmhQA7?b3F<?!Ueh)%qb8hYg"%HT%hE`VUS)l/hZ;
%5MTgXcZSC;l-2Pk.9GqQ87B>R?7iufP,n:7N!6*Eob,18H@KG7]XU!e?-oQjG'\H-Vs>W4pQJ8E25js"qYCQCFA!5tEnpb#JZj!p
%h^gchH.cLeMpn_b2iAC=D]\3RScCJ!Zb0>5*/&rfp67%(Q42nX_A>^IM6c>$*;[ZW!Y]]uV'otPWt],V$s[RF%O?)/A7lq+d<"BV
%-jr_l,H4+7[&=JL(?J-?"(tE/(1kTqeln<G(?O^=D4Y8iMYRG*U+B1d#Hu_1>*MC^W7P4;K@+Uq^;ZdaoqtuOEqY`4;3hXQ=EaXu
%bgIJ@:!KDNq#IP%cYn*ai-C51][e`UI#&`^o-#1J/b\uE:C=l+GQ7?t-cAsZncMC<Nq*$N'(J%!Un=Oh./hes5C6D3%muafp"De*
%>$UaSJgjgpg8`b*]lk*9mIrP>ZC5R0\TZ&/m2V%+eS;-cH^Ii<NO@;=>IE1beXhY!Rq@>fgd?Pfd&(?i'`?IFlqo&/f5:0LD3WUg
%ZsX6lD7"2UfpW5b8Q\fK."hNbU4U>*[JR8NIMr&f<<[hpnZVQ-cRr"Cpi6m.O,(000<SWP^V74hS#^R1$2*]]l0TjVJ/K]cmd!g/
%SA2VK'>!8WE,"`=-7^LhcCqA51ljGo-O<=SQCrsP!@l@KDh7.ns%l`aQT_IW'D&IL:/%Vd4.Oh#s1&'=rq#1H(FP9mj0Cl[j<9=4
%LLqGf/Y^+S_9q(7II8;RnY7Pm?T+E]@N#2cUg4JEUO;#%4*5Ugk6l`hjO&E;5-EdjHi:DLiI?,sQ_+&1qJ;d]i+3k`;/1Xc_7kEU
%'hb!E$s^.u$[TW+m`I!'`o-T)3\M>f&dA3Z4mLoNA%8QZCGlC+^G.jt1-YIhnR9$'i6TElRu?$>hONIUYum%[N-lo?`@#Xr*b-DR
%J_tY<oNOEUf)5!*s*a)ZBDLFJ!"U.)>$gg8C]8P&s/u1T#7bOoruQ"UG@gD+m//N=7q@/;nF8h<Em=D$BOpGE"$p_JGKord3St&\
%!Xm5&Mq>/i]fgjjI8u8mX!MOtlPFn(F-^^6cPHYrc`Z-VW.$_@]Y+7Crh3V(I/V<,^#7Q]?ptljDY"*[ZPjUXnom$rWrod%]?Mun
%E8>a%-`q:T-Zgag*mklL>9d[n3IhCg,1XD^a`\/2%?mo&ZDI9T'-ZgM_dnNC-52=:j0*CHc`]O8<oWqqocV!DqYK7@0!6kRDa1rr
%J+`@)c0<cLH0mJ<[L^HM"jtQcbPH,bj%Y_QpSRHNJh`hqpViVG[s([ZcAn`Ejds@HT3O&]nL:Q:^"0'.,*'[@C;(_MZEMF7$-++2
%)LOO.i5=;fcd/VbHh1pA"+/22/m*6Wnco;,[srGFgIgAsp]()uH:SPbi:rKnn?N7)f"fHIGZb,%CZ&b5]W?[NH]MHc=X<L2;&I;[
%f"fH0H_>04jWT2ArRjb<Vp=I5!_Ara_fO<>Uo2dAqk0=p_+.V!*88?+LQ(r+R>r5&@L5<8$8ul@@lSS7M'ZXkFKgV`KkQ6k.R#^*
%O!fiBEHuR$g$-JHnb2Wp4CElO*fc"aU`B6ip_8gW*p@2VquO?5n#g<`^;&'Q_"=uFQlba&=7i=(I;*'3oG<-Yo_CGDYHGWI8SXi#
%=8i9NWO48V?qc0IDeEEB'`%#H*BG\hq:GV3erha=?sD_]LV5h\?@,tmIf9!<(;&Pfr7+-!Hu+0/0-'"*d0FogYPU/IJOB;iO-hsf
%Sr^1'BWHo3-m"iI_lrMNf_62c(0.9sFo**$1D:N4Ar2AP7gmMM-"#`&o48YPrPHJO-;.&,4^.8`*+K.VIU[;U\Ag7`aJV&p3(A>u
%EJu2R=Q:5'lffJFSmULpCE2B]^<@M9=Q:66*92S/)">mi:D]9F4a$ekliWTg*%Z!Me[mbi3P.HQDGb??o\t9.l>/cYi+S3hL?Ar+
%?bSRLHiAeioDeFMr9A*T9<`F7^;b>=rV>j"mFbbgcWP&afDY*rEmZ)$?+mGX]tQM/)r^A6f,%*V;<2rqNi_.;?oQY8=8OMpcuB$p
%/Q%?TcHsk1XZ/\/1TVs[1\=(CL5+k!fT0pRQQ4B(q]!N'"A;p-s1Z4XI^A*'iaiK,O2hQQ49RS+Yl[.>H[#)3]?>LQ*ck0Il(FY"
%ZDnEuORSX1-i4>&5-2kA%@#_a;LTL7;DUG/K!-If3V7?q7Gm-=b.X)Lk4";B7RQ7[]6`Xi6'7uIoc?U>MSH9#pdkYLLG^!"PgT9\
%qg>!-&<#GDICf8q>:73MICWqcDY<-mDf571<c@DFI>?@B41$Y]<8QC3,Pe<cEskeM<c;m5hV<^DZoW8`kKH),C";LoXmY!0cE6Ni
%lHVOqG:l!$GOClE$4bmd06/lZh6Ls>pb(D&]Y8jfp!)`aoAchIF&.dT@=daN!]'-"7pXb4Ij?ji7uo1*ia].$&k@a.Z,a[D*Tcs&
%!&F6]0Y=E@S5?Bgk?""JBE.o)6q#YaSt96CrpZP<6D8=9J%/_r8^m#![I+ecb9+tm=u`*`fg^J,_E5nGoR8bS#9W#3]"S[Q0R[uS
%X&%G1GY=^MQVU8`*B.?^!^IF\f6hjl76^/d?GbhXp9ifo1JiLKG.Pc=R9dM0;18Jh+s_b5V)s2#A'06]\BQ,^CO?L>8`%1nH$t!^
%^@\bV04,aPT/;MGI(Mmi/hL]IIc:Cs\,[H4r3H=V_XR'Ug:\L-DLji/rU5Y'mhR5KqN^pr&!cc.0R4__I/;oU2SuB8Z@'E4bSQrc
%pf%d?UU9/ab@%^dp8DaK6oKELf"hD8U(.#$519.#p,9VgLOOU)huE#sl`9U^%<26eC)!d>d3BPuX%i6&?fZ:a_aePX4gb@Q#G&.*
%D_jMd#l^S<6#3_%&M:PChK@*8A)O)0/[#>ta?T.9ld*T/%sn^XeF5]sW.gRsi@]YMfbiND`iqSnH2+;s;leG3]t(ZOk0<]Gg4c:_
%+"o9b5<HQgdtM$;`rf@Ulf!(*7`qDHN_@B2k_J1#h5l5n+IDEMokZbgDtJrN)il_*]TN^FWmUDt9(@/?a.pAf;6G_Q7D\pJ\_c`X
%9KC*Do85:rUO*.kid7cB6m"\gSIG@e?%;.&qnF$K\7@b2$]dS.*rOFYa85,25>oICN(X)oBt`=(I%=cq&o?b,duOt)Ygp\@1AIFj
%`5gn^`9hUV*Bcm3Z_mednSEa[Idea'Nu)B]bAdIO1\JZRF8$b2aMdt'Sg2=A4M^YQp`9"f$LEjH^l&$DUENQ#M+#GtI%,cG4(\d2
%m8;TddgrjZS+,'RdEro_:[&#!>5QA+o:%sLgcSIgk89E"p1-I,k4\GJbObb=2#]JHH=($K0CcD9>^q!BFnXF^<$T`<a`+O<Zf>2#
%Ilu"fAl`Jd9WRO!?Ah27ih.UmD`=RqDdP/+;E2HLs58WaK9(=@bYC6EZh$`m5%N42f90H-+1o5s9AY,AH+A5\n%2oX'$J<EZ$`?+
%GT[=@YCH:RB)(rk=0FY&&nM*<0E6EJoi\s90nu:!r5JK`(K])#q<1n0rjLX<J,/mNDn`fsXRB%Oq=XJ0T:Wg3rV)A-PM^f\X5W+]
%hgb:!GO</_a^=O%Xnq3&5N(Guhtj8N?"MocR,R+%-i`N4+&6.m?iT/i+8tJ-EnNY&dC>D$I!cu&F=1uLpVZLU\fjc.<G;;O-Psh^
%H-47QKdf5F\FPT&)!*&+%lT*)l#$Aqg24lSkX+.B`UMY!CZZE<Z[LSbE:sbTq=qheD'q^*0b5p%qULM-0S/ee(Z/UHrS-55nBG=2
%I!p)4lD!!U-am26c\CW#?j:CBL?C1">:_8,T%DBdU0g:epI5%jc9D!U49#,`p+Pt@`J.@L+OksR=&*)O:[o?AnDXU9msj7/fB\XF
%Hr@Z)"T6(Efu=]<7#ZMMi58AHr_VU9n:t\@&*DppVt7*PR5OrD@qnoc'=#bimLsJdM0!*pn<\"/<?BEV6#P%el?qkUSP46rrk=W[
%-29I3fGh;Bdtqo7!YbCjD>RV:j4^)WHA=`C,Cd!R7qS.4&XIC7j.+2%Z&asjpc^Lm`]J?h`94LEB?4qp!-_+8S5*"R;Nm$2?Q=gf
%gJ3D@+)9GWiUO@?U$\5&QZp["Vd-D)nb8)nolo(Js*44aYN![=rVO]$ro\/:Fk.q?\=W6fqIn'/9LnSDf4CnUoG6/Zpu`qnc_9;$
%*/9R(F75$V$WEI-JhE+mXs'4')!f=<<-!7(DdPeZVFufKs5r/8ijuF)1&)<&jnnnGr02?cKu0Bc*tV<f(O%^K1M5OB`&j@LFjlfV
%[`@(25NRUJNXa.u1#0$"cSd[pNce9V7YJXpABXVRD7fHm<$UhZK$jUF<AJ/7#)_hO$I;uuGh%?tk@1lATS^u^9(bWJX/k*Aq?KrC
%/&$lIo`G_*^L[ZWR\Q[Ydd$N*W6<"VQ&2tq<i7(N3g?2MXYVgOX;LElf1<Gee$JdumYf'1Fo'/T-XYaRA3RJ<n\8T1lGoNfd+b%!
%pK?o[rq$e'9`5q5?SCB'SCL>3(OU<?nm"DbYu0[-KFEQlTD:MY(nc6D/Ji)+lm8*t'?4=4+aWR^R%M!:XC)oR+luGSWPZ!M_YrEK
%lsao0@]la^QF%grqXiTY)!/KG9al>fI0JuC<)5SkjUOWsDV`=cqPIQam`XB0Fm/MJiuZCiIH%5XkpS0Vm$u)%+'IKAaOdIjiW?;.
%EC6l:g_<i?b16WL2TYRQIGNc"f0<6BPG&>TR8hdJP"f-F`u,LhBR1^u.C-`prCK-YT)&67F[>EoD0!rs%+q/V$B=Y_^u+ao0,?bg
%b0O0@n.b1iWV4q[JcGSilBpAP?*@Ub3N*5oS+bnOrpRJ"=!qq$3W8[Lj:+82hr$8WcX5OSHIr\EG1Tm&[:`n=IO(s?f.Se\D1_G,
%RZI$>hda&,\2<Jr10?0ha]Zh<rBr&L^4(m3Uc?-!0$1ph$L;mc7ZNtL@^G$"XIH6hXWHWtBD(u.(++*s*iTN`aStA[Fg42Qe$-#f
%d?"Pq=+'Xo_E-CcRe"ZNaelN2ddq35"M(u+Mf^_D>:>W(2h^Qcr5c<>gifQZ&du2):`nt2>,ME$gt6bX.cai/9k`Yl2re%Hl)p'7
%jI*+sOa`b1jCPd$Y8X[G'l5phV%1,3IZ8(OR@QPop_3BrrDPSB,1lg@54unCVcFJW):<-jEYGoWP^>;X]qX;/[`GIeMZ^sfBMLi7
%*<7JX:H.>pF9>@"S9s>%9]b;_mZa4*F1:&udsDLeqO[hEC`'+W2ce1B;SB="0#a$c,mUjC2P,jR;Qm.!Ac9@af3,hEkhmc]HZ@C1
%l:fsjb1<KIX^;%pRAkASO@l%].:0[^h:^Jn2h/NT*G]W*MS7UIq1-fF\bMcJ4d7L(URj]IW`Atj]$'bgXVPS5\Pddddp5U(Dd'Vg
%2PM'hktRM-SQNSS,oQ08Vd]=JmZL(%Q#FF8pdcKGG(5f2B,G9M\up+PG]Y=2cJZpko[=,<\A3=0Vt[a5CII=G[kFnf054L@cS#3>
%Ieh[mc0Ou->D\aG5GqSd0"5\UpU\uFYE0t,kP5X7].dDFm^(Bsg[go8^Rfq'nb2[2oD#d1?`Z2H-U-S*-?9Fmp93YWQdSEX^Rj8U
%I"$>a.,FRVr:/q/ec45CBX]&haPiWCaeOU4)#?[KnNXb"GbouOmB8U+/2bea/,&b9GAf.[f!+0QG$MqFCY80D'Qt1GD'SC\GD.()
%*FVHb<+3i+Nj*#`DiYDDG'#rqfJ.+8YH"\u%m0VV@E3*3n_oPb&TtbHYnD194mM5Q.I%b"Emui4N]P<0gP@nF",K!mLI<0]_PguB
%H(p>(7I]kKoZrkud6F_*1$Y^R5FZlsPX.f("s%p,*#Cj4`R:Y>j@F-sL)`EcaO0D_3P(i4bH2r.-QR6g%bWsnoMCs/"S;4qlM']V
%_&*HYdln3aH9#&=Tubp[-9/bE*[^Ct@q*kO>@#,u?;n86QSWk-h\cN;GKB)*iJ6XkC%?!X0j.&2X*C4c#uNr4qnA(D%.-[Ug]"3"
%K,^!1G_ehk5,5*Zr7p!CoopoVANaUZSD,')od@)2:RH0g44M.SV]-@<>mAdjYV;JM6ZB@'=3.qON[h6T=nG"Nd!BI5@;$'3dh"S[
%>`^`r\S@Vt*?_8l!-p'm%f49ZA?2`n$b:M@)HSF<\i,hY:N=(B^tde2f7UH%(foa4R)j@.$eD;Zk9\=sB[5m!lWH,**m_@#<8FLq
%[8+D,7W2O+Z4jK`9M7V\.<$P4T9\\VT5^].jj]#jjj>fP*cYN0\R/([BX6%30mM*UFlj^2@C6Le;f`nM/m8igZ`9rqPq@u,r!B9Q
%lMTGe?+'J)*NHb3/+VtJZiJ%aB)CRObBg,-DI'.KT3"0X9KdK@K[6^XBBqsq3XsJJYuCqV(Md;?Yb!\+m]2[`n%@<(@m?:-!pRnr
%r*md=lV;N8SfT[fp(QK5A":%]a(.Ng?ZC*!f(EK"EFf7X2WN8mlZl%hP`OEt2ln(Y,.HG$GVaG4VZ&?W3:uEXh]YcT85'lh1N&pQ
%pO:X+-*X`WlP;;T9ZH7Rg9ZEMHN5[WP:U^enK9!elHgF6^H,NKVB-te:=TB?8):tZl:\TUJhncX1&@]GWg\c125m3eMU4GdWO&Ij
%S,0E]B04XC<IMCkFjuAKY6=MEgDCE"])fj\W&tUh#5Z/uL!!\JNJW=7ej^aiZk<8n_/3s:-Q?.KAg5R#W0XB/3Jqn+Pa@0rZ?fgH
%?$XtGQeB0&"-"LlOX@Z<B2"1`2-SO:74ff*"_XSp(T_p<eb20=SJ\D!WF'-@9n=5'_\d$;n%jV([9'afZRr2UZB`%2V?X4.b#!gD
%$R3B94_q+1*ZM[eU3`&.47*DnA'%DdPC$#"r*n+g\*%OM@a.ZLfnhRJnOq#"%(ieYAlj/mgl\.@AID"jSWGPNNpK/YSEtpb?ZmXk
%K^?Vt^YR+/QsJs5`R!A&T"*gi9M_1cjFhfSj@&dbabdAd3AKkm:;B'LGB1Pb,WVQ)cb7GWn>OHcf[9nH`;1cSd'Ek(bY@"3Os[Ct
%P+4dj7$83A:9kNDIdE!3O(EKD(palqbt`YBm"F&WSZlmQ@a.Yqk^mJm&>gCO].t,=ak&,E29)RB*l=]sGr*)kM#"V.2\O/'=<+K?
%+7^7#6D.r[>B3Cs2Tk1\g\Yef85J<:TW_RMfgSAkE]%]qB6_n":S,iI:<Rs.D?mH1Bi-1PZ$cfoLmU,S:lqOZPt&<6DQustBp!fS
%I'22,<I&hXNem-cY8X*@?u=C%K>lREZjjsnQ4\sK?6Wj(cqCR?=A3F-3.%u/N[U;"lOeY>On3=[=#Jl2rV<8&jJ:)8:TPr9:g`G2
%L)_q\@8%Wjo6?A4=/s80h#@<?55/$b=']3TW=sTP(%)RjZ5jO'(]^GkT-4UU)P9uu="C1p$9^]tOmC)4?#3qfjBh,cm*78MgpnIc
%eJb^amJJ&ML;Y-VL(<Lb,1+/YKW.2"F7\r7?l-AAIZs%'3g8*FbY[Amp'b64RU7"A:O[W1rU9c@Fku"(q@1]"-%3g(X=CL#U*O<g
%N758gpkEpRgNkdH^=JO[D-WKX_L(bK@_mKS"1g(4]ZW."CY]NP&!6``1$?X_S17(Y(%\<8)LPlPDWlA58ZPM_fZ@sQ$d;9d\*fl$
%H(43qr3Y]"fGTe`Eo]7Hq:9XC/Fb8ec7YHc6pZRu'RQbcS!lcLV'eJt7;YuLc;*F$+#R`7U$6)LWd:j0)$b^#9de\uPO"qkrNnh1
%7s-T"YLGD/UZVpe+&h#1cJEB%f<H2f5udM=UnhX/F]V!ZDb\raPK*Yg5U+6eFYhQ,.7<Bm13T3nca3J*gKd?rT/!)361kk6'MJ4_
%dPE21dDr,Nm.@t`m!>YF@@`kWlu.1VV$3^]V60Xh<g8S%O#<?r92DF4G5CXoULd@jhOR@IH#Y_ghiUV^]<Wl2=#MA^O\Ns0Z70?d
%2C1R1RhFlPd"ROM:%?\KMVj[nM*GK.-1B-VZjEAc-\A/(2hSM`G;_mBf!BJ@epON;B0&K5S_LmE<^%hubbs\%DWXm+f3Q#+O5s71
%*Vkr.2eM<2Zn%c3GNVo[Nc`F(AN?0UNHC%_]TGtB8?luYW+#RG\$@G%ZdaZ?ZRL0?p3rZN9!EO3HBb!\RIkgd\M0;:-CFOR['8.=
%RA)K$:SrfX4..9/D^JE,NatcUG9g,RNb$;nWt3\(Z*Vt*D!Xr8%Wf\igmq,q4de'>ouK4X.J6Vei+,I2S;+YND*i7]Hn487ng'Ju
%1o51n[t^\VP,;,Zc@5K$:OTMCWCWh\0pUb-6XLqJcQhgPV6hNA1m9+@M48?'@@BfVoQc[m8t#<sUg7EbF@TFlm0`1A?")R%4-e63
%0Pg:$].tg\RRnCO4Mm+XMJnX)NG3dQ5*)qLj!%6=.A\=JdZ683jPK+*ZdWFSF'gJImRF7tOlfQa*P%E?/!lECj\kXi\WdlQSE3Yk
%Y$=Sd-;u7n*iUMcgs<b$,af9g,ZC(Cg.\Brh8tmlG9g,0L9Q)_&"H<b:=C+.[G6Gi:2BWjeju!09%L(uZTEZY>`(8)96#9P]\c(`
%/:FIm;R@u<mqNhi=>&^URQ\eqIm2&I9PS<T=c?4l;7%>2P>CUf:OW,ur*W8hGaP`&9FWAXY3)F(Pf@FQ1JJp$i?2j]Prg;Z\B\-5
%cc6f?^&NO7m^Z[FGVp^($7VQddI3UbR!)8F9Y72Xh(eTWpOAtf:3lRJA*$I`AA$4B+.M9Wqn9N&IQOJ&:']e]KWrLrSV=:hg6@)u
%+YWEuG.^Tl2abo*lOe&=G&?E;8,<&pl&Jj!^4-YVDU%;^K)@kW8G"pmFWL!JHdomQDm"#^f@')p[!OClhL:$`[!R8VVc;B`ia&a4
%f.5^#>4Jas]^$>q>k+th8pU/gGJ0;drs\#FbA4^e8hB(886XO9XbTU#R[/D2SUtV-S$Dt<,.oH2NPH4#Q7tt<OR5-)DAO+V?>@?D
%/X."adq%4LP/*>?]h&tB!^83fQT^K&0,SD")h9N%R\>TT@REc5dlZ00;7EX_Q=KZEWVkGV.Q7V#h7:a1=W5PtEALaig([9BokSon
%Yiu[6Z(Td>2;u_b'5?+['K=u+S-aXnPN[0PDBdSSdlY1$TmXF#Y(gB-c(q:-W%JNXoP'f<je]--:W>/:<14UQO'FPCIBBrT+:h37
%#H>A;pPrC1[]QJ2OI[Z6C7n69O(Rj##Ff7d`27GDkk0qY/=5&\lcV'05h@G4QI#1M<MubI?Gj2BGd(Lm?ph[^1oi1)qKjg.YJR:p
%mJQ^?R4`RJbFg?cF1f%U'93VjRr$0T-@+J6J1s>=MK<2<ZflDZC."DG>SLMM<'>Jc*9)^WScNh!=R,I'<!(iaG#qYB]$SX'j;"-Q
%X:;-I,ADUHI0NBHfj.,$r!b"DnTDma:'S-i$YQeK.WKO%]\/Cmp;o_hTH@a:&B7<'A1VVi/"PAE`oN!&Yu)ZMQ^&[rAim[t4[QNY
%f`D=k/d*SfCZloT\ZHMn"qG*:7Zg1:?)qh5po$05ac+q%D<.%*HuX6t-PMgYWsL.8B=!pNa#bV/m^c3mUJ[5)I,[OCc<`TKo.atF
%[0_+ik!MYn;2SpC7haQl4t#o@o!-G&c^r6k_K'0QGeQP'kKPi8Nc)./ii\O]2cnt]46CQL2Tg8G:-,%J29g<P>$//n<5%UQPD18=
%a^C>M><3+B[M!dh#;@Wo=uP[&gV(,[G-hF9gMVug%@j&HA6#EU.LGNI%V&.6Y`r54UY7r7S=Jo"C6sC&)#Q?@eDPQ2WpkNTne:!*
%VRTW%'t9n#ZPlN$S!7Xf)6JL/##J<]JPHGSFs[ETD*b2tfiHIgPO,_?G9,5C#_G<Oi5fog:Lt$Ad_(,ckZDu9Dar_S%\M9En7d8R
%%&4a*YL\@[S,(_gSN3#D=sTi7h^&%=NuNf?h/r8`c*;Z-.;,p=7c4i5Y;fTFQH[8OOq28b04LQ"f2WjQZ,s],6d*EBZ>0?FPADpB
%%GY^sjDj:gD)&j&a_E<ECc1_2Qd*%[B!L.5R[iIM.JI92-6@n8HOV?qM==S`co]l6G/_7KjO_?k;Ju2lg,a800!ehAg-8]P3u2O^
%Q,M+c%JeR+pUi,2>lsOr5Ln*_BD$=Kbkif<-JR;;ehrj1>]LOuHERpOXin&EnMe'q<TdIS-aQlf_Qt;q'3Amg0c]8kM">lC;)WoV
%M0s^,nZJ(,D9p(%S"N@1Y3q:oIbsnWR)lt>760^%(;k7GIa5:uN/7qKMn<mcjCojBg)C)_$;7U+4^A=8?t/efEn@Fb3c`CG2N=aT
%FUcHkh)g%k;$5(V_`k^mnIF%/j;e5E[rXGtX65M"Nk=]]42nai-VbB7m'VDq.4?e>f-XH<rU\.`dF=Lr_2XX8Oj,4pPYYm5]A'qS
%s%Z[RXI.:WW9t*5X?O;=HAT77<npl50CP:Q=XIm-8Fi,!`,p;$_a3oKZ'F77ap);WSDAZ*e,<h[i<b_Xr1#oD:T\ToV`-?4K`_i;
%*-e8;VE5.jmV-1"m>mfl"$>8)Ni-jSVdRC'QG?9\<]CXP-CjruQuMd_pZKAG>K[6%Z@TE"?nE>MF4n>LND04#)o."O4[luhn/FMZ
%0hf^o@S>XW]?:C^,870VZ'":e%t1_TTi*b@G0<\KAGWPhVNLJ(4YU:GCf"sU72TP/Rl5#?pf;"9]\R3l024Te:<$V/\?/Y5mn:S`
%M.e]Doe\kWL7pQUJ2F.kW]MhVon5[fD;&!2n"!f:\MO+ubQc_O:[OjDiMTC(-Y!*4\PMnbHJ5G^jR#.'Y%.VV\iI`FF,E!?+OfN:
%V`/8GXPG>o'4tF[;qCB$,7--m=I!ZGas..ZinBs/G,O+/A6QTDehGPkAm3)GCRAi':-$2ZP^<COErV)s9/@fG0hT0=Lf9COI?bOE
%WXoqskX.eOZ$L!;;JhBqZ$VQFnbUdQ)=&D<ou0<RbM7rYl>mOI?88PH%C5\77,ZSh)C"@sfDs[HN*,<EbSMJ]!Cslbo6dS]L![;d
%V6"6fF`#Zie#_:bVNEnRFNC(4\WsHs?qh/056R\3W[FjkTiDlA9I6_4F.8$R.D?n+]oLI#B^O*]_;('fR9V>c3lgoc4M1oA.s*NK
%Nl,*?E_r$jE9G1U_fo.VE!u.4@`b0,a&)=2.IO!GlK_IYPr#\M;+M2t]Jlt6Wd\L0*]i8VGfD4Pilt@<]p;<C!'3f-U+E?^Pfutd
%(Sfp>H7b*b5n&FX^^!M,Q,SpM9c.&SS?UY*eJmRC$Q@!8_E_98N$oF<FTm#sp@LsFQa4a=jbZFfWL,Z<TeOI[0t=3e(W_dk@s0TN
%!8H/&Mm:M8%]3oqQsf@I8@Wuo'J5jqB\%3>``Ah&a/]%4G;u'lgl_edci\udeo+a6)<nX+EU%i'MRBM$eOZsYEm=;42W7dh\]&?%
%>[/)>[\&*8i'a\RdmV%G3J%]&a;;[Y9s$1W]l&q/2qb1)>3[=?N$l:>9L[ne):3URf7s!"kR2q&,W@,#CE#S?<rZ='L99;Nlh'[h
%Ze&49;l^i1->fhaOnE=U/?&3)90GtS?3MmIQGAch]C:LM\"FtFYEPacZ=o4q%/eQ22TaIjG9d9E%,:KU=g3U5em6cDa&!5tdIN(J
%)Fl\$_N.jK%oI*P"fs":YOJM(e[KB/_?gU!m#J$"8@e'?HE2YW`D6*>i5RF9g_`1B0_`#E,rX*+T9a?8\Xso##V#^s0(!ln&oS=a
%4.`LWZt;+j<PYKu#&(CdgYnZA3;:n4o[>fMf:E9@FKRO)(L$l`a:4qe(r:c55Fnh[#:fK)(=>li"8H&F3CHT_3ru#jpt"!P.0kb!
%lo`pTQ<fA-EJNBNRY(SN;BCV?p8jk2onsT:cA"g_;;:LOW$l!/0uFpZH8c$4;3It@Z0j[b@D$=/[<31.U#qH=h9I>a"K?NM[f*AG
%ZPHGSB@D*Fh5/D[)Q4L0_oUFMSFeR+*55pJ]WOf()*J(0EFec@JdK>pc8,?;Ji-j1.h)Aq1.(af3d1/1ZP>+[E=bjsbF%sARTtdm
%5WtY&S/Gu3]P3."#"s8,S9uh(YFheC`7,3/3Loa2g\E-R:8cO*;A%4FhI<V#4n\DGe$A^Lkii4jEJ]oR#,sp0,`J5Z2D-W\F9:ET
%Bh!VeZJYpGId2)=rEo9TZTYu@BcMS.mrd_RJ."9Ti)?Hs=1W_^pIYZ0"/[?5]_I!MB4c68i:>&<fkbPE&haYSUX<bdF<m)RbD@)W
%H5XG[jG:#,Sh/A0GG9V5695o_^)/&F2HdP>gJW]a5ZioW/_oEU9*3%V9\<Z=@5<_U]3T7I"J8Y/9O&mfI3HIjDqXrTRWajQ0MlCj
%F4PM1pt@\ik=H">Uh&MT.mc9V`MM/&&r-#;O5lg>fG\tiPNBA'"(1D7>`n'<_!9Qj<)6%O`F#\^^0KpY$HDfD*Zlt,%_KEh`SU@X
%q`DO\n+aW3j88h9n,#2\n*g%c^Z54jNplj,^@1Ocq_(Hghr!sPJ&hT*q`@!S]YfZ2c+kAh0b-DbK9)S2U43CAiVB9YX`1;C44bg#
%X=en-*T!q4ql^=r?S0);YQ<TV[KE_8O'aL/&\dlbpuKs<J+2$503qubq=3ljBE$0;5'ZQ"'G&N:E$(\?/b.`m2,)Mk/c``^I164a
%h`Ki4GJo""M#XCAM"_XV]H-OVifbDd:>$6J'qbIAG/Pn[opAp2qEoJFli4Y.(Z).RHtc+K4%5sM*V!UmW=*)$G05R7GIj%Yi`2lV
%2'lW)_[B;UF$mStI7(ZN!9J'RpD'A#CE)8]'r]G;`-W5t.0V-WL3WFDCku_2.g0S#%Im16aSMk7jR%_p<dsmcYN`7a3`^\*h@9M*
%m"X,hm=s6mHBnBa%KDLG%KAe>25mD?6kjmtJbu%R*<ItNH=]&tgdm;sBAY76R-t/mDV.%:^dMse38*`)lVG3eoK@HW-tAtLiU@r%
%$$Qdg`!\,8['C&EA[8dJlC))oGVGFkhL>H<2sgh5Hl&rG_''dT^'s`NZeg<>YIC?>=D^)]+?p+f:,Ve*!6j]8abhI_RK%jAn%_f2
%-#O>JA(P+>F:s#kh?)ZM"j-oN4ld'Jn34A&1C0.T]F^;2qgd0Fn,WHmrXg5h2g#2o=78-VnK#+M+%:492GTU_+"#r4r5&@mV:(+e
%3VQETqji?^5(]7;A.]aQ*I%S_AG;rT-eM5NclTY=q[$#KFcak$LU677!<-C+A:de\ER2Au/cR+)^@=lWA=qf/`"MrKq3U'(oLt-8
%5V"s2A^6UW0klatZ:ogbPM.mFISs;WGt>2#+fpS$"D".oaj["4iT!Nj(&ri3H*V(0!aSU=I1/"\m/b&"?7Fon\+O8E*]QW<_A7T;
%+U-&0QGlOE*G*rrJ!=2WLH9HA31#a8^X'\a62OY/HM^!XYH`hY&B3Jts#&$bY@&.@_MRsK?BO/j%1U"*n.)^H]F;N+@(O_hGAb[A
%e%P90Ed)6AM)pS\e03VGA)($ChY]P3p_>9.2#ISs(a$Y*JPL8r)Or=T]lpC@ME6:ni#;4D;j_`\H%=1aiS#-=hMV(XguJ"<nDLu,
%_NfmJGX-]f!rM"$DJ/\36'%(FY5'_/Ye.sI`iR:I3eZ5l-5[k!TQb5iT(-]eA:&QoBAN7.I%4-`p2GFR!h<A&&g"jWFUb9c^DV,5
%bRHAH"=grV?6:PO3Nko3_ZTZsbH8<-;\-B?iC4[\q#&5>,Npj>2o:r8#LE^&p5Y"<p+1h(51-^2:@K"gfYPN04G_n^RZ%[NEM6'J
%/`R1Z!nEN6lj<*mq)2!2F(`N0i03d97>"<29&N9m:b_6l@M8+A[PofUChg]nrJNP4LWm;:M5q<D5l*YJ5-Aj'nU#lHR?ZVZrWM#s
%eLA()E2c"c34EaYSqJn:'$mq6m5:-sQ2g;s:"m,6heeE\CS@;"j80h/!8?mAs6itfmoBC;qPsSi3I'HEi-h5Ma1os:q`Y6<cG.]A
%qe*&/J"MAf^%22156iidm;=W?Fl[/In,d,r<]Rf0$662+mTmgR*3Whj]*`q1jKU?:o%Fe(5$;@2e!3l72s&`]Wdp?=+e;kP1$G\m
%4f$2E"k;Am#m?_JVIhKeJ?r;[(qIb3TPI45b[+ZP*+/OUHifB-i+(nK<ec9hf@OKBc#bI9L(e.Xq)F\H@fY,`lmP+E/E[i]Nd"UX
%KiXm&2$h.SV=)(;k(D]j^[b2[4L.\Q'#X4C(AmSZ_[2/;*bh@[(NQP$_'c+A,Tf"3N[_PV,qO>20Zl5k(Nb+_Y\ugNJRbLdE!qhR
%eIM8>oYk@X%F^Q^UJ5^pPN_\_P%3Jdb]kP/M,Anq7^Qb#AAA=PcEUUg$podK:/c,_QDrU?oHgm/0;(`mA7BX>+\9iNC36PRl@t;F
%Z%V,iLVcn[4I]&Y[`Bk_4?\P5M#q#6aqYZp"t.S!#A5B:HfUZEJs@g(J<hJ%<.iKB_i'.'%LnkT%NsX+lB8$V=*!?kReBm'LecU7
%1/.QV.M!;jb_=M[H&?/<<8Qk4OL.".#'oo48J05k:_clJ]8nRS8ieec3Wle;^aM84bCQ*2&=612$^`'bE%[1H)W(*&n=ncY52g>W
%\7=>'`QL]0J@G&hfANs.iLY'*J6Q>C`K1n8O2LKN5Xi(-n-$0f9VKMANoZRki,XC<l@\I),:pKJ^28QY;G^mAMHR(s#!/T2Gqb2u
%+S,/"G]M^RmD,ONnuUJJ,>9_jL3WK^D1_.jc8.)h\dTL/X$@MWR.et/-'&^l-co5Iq?b,)\]b5;&a$q^jrOV^=RG'6C2$<?1<Hk]
%b>)qFXE9,flF[<r.BM#W3p=jhGXt?dc0KUhVbilc2!oEY]Yg8?Ae5fTg'9Ru9;OOMgD4L2&7d4-%l\(FFk.\Y/jm0bM`@;PkA<8$
%C_<6cBHR/K\TUJ5>;QfuP30XGCc)#O0g#fgY0pE=F3#A3RcLAR.DM4,^6a_)919*A?bTU!^/p3+=,O^nMZ,92'IhMf%ooO0'WLQ&
%'KMZ0r[1a(AFqQeV9&RUh@J09Vlo-)=)?`=G5V;8oaeX"qm1bORVTIYs*1)j:L>JIVS+$cnGiJKOms[^7!e'4lU9m-\k^26opU*]
%[ZiF[]'j>O^>m<dk=&,4K@`K\V&6a:UbUa^d1:Gjrc5KT8u-_#L]3>U:\K!:,uUYC&o$7(7,P%5J)tN=hFi^AmG&b1Cc.#L2C;L^
%nFV'GPmC#Oj)A6LZEFTBi#19p5!dM]<f-;i#d6i.1\/g@Oh7QE)Xh%_JI'8%,_COW$(G`9ee6<!orSgSKJ!-/2Hh:[[#)phQL/4f
%&$+3)X2Cu:>#OH$N*+h)8+!GkJOagjn12(k<4l[;7"Vgpqdb-daFiHJ#7(!=T2q"s;TP=YYe\OaD]siF]>rVhXtO<*%$j5`(SG?W
%]B7p,+q'Sh=kqVFRqT=`;eW\_S;dQ%[(1.5DjV3R$Uq?&9Tm9Kj7S%Pqbh_>$\BVHn4'Xh:<R3:K<2sPb=(Q#ES9WJ`We'a)1%sk
%s!d+&="mR0T1s3#q?*p=nQmLKeG+I]Z!'>'51Yt-42')R+n6-3X'?\cC]*nF,n:tNj`SWNH4G>k(YZ@)@!rbaoW.#`*A,-4OA*Qm
%n`pZ/qa*,E,o):X>!"[;GsHDJg^OQP36["ilF+9;VK3T2c8DegDSKCIAat_3^f%0&L*^OrUu&6D>Gbl]o1dImpYF44YXqM1#6m`j
%i##1egpq)k.)N]F74=Iso4(Jk/kUU0V$UPhpW'%HkG7##%"XjlgkJb0gAf>ls#TGmDjL=gUcj=Ea5prAhG=/T9NA^d=t&2K%@X!.
%;Q&$Cog?duC98TVm)P4c2,e8!>@>R"buVf$>(fbUK_/)ZQjB6kU9QK,((<Cb#X/8ur6Zb*`b).sEPN7`G%pa9"3'],d[^)8iYXLR
%U7m7b-=C\P8UgfZhk:\YlK84s8&!?bnitGB.Nd.;48[XM]@Z!`J*4tHfXXSEj*]"`c&bN1$2XDBm!60e%%?l(B_:bSEoHbKNKCo+
%&M+??D:\tVrG,uZe,?+1hp<8oVV@ri$b`SDZo3]ed)ls=;eS<p;IDD4Y.78.13T[iDmdF:d*nCpWRV<s-5%;`QHsHT4T2P%&3Kjc
%Z#j^,Wqa3kG,h=gn@eO'ks?mJV>ftt5/0GLGb6'R1hi!=nO7ppC5:%HV%so7'fhi3\E<:)EJf-s<f4"fRsrooFo/[U)"tQpE^otu
%$mqu94KDJn?ph!iX':nS1to?RX]Ogf#KNC6r=cc:cm!15V`#@p_=Yf;WS\n\7_bA:DqPoQ9ACHSj/`Hb"VO`"dVgYj+KT4`3frK*
%^!LCs>k(I5BJ$T)ZN<s\+GBq+i*HHHJ@m+lK3l1^X8FHhOaOLS(M;rkJn3]ejmj;@Y],E%J.!peisFg@_l-]m/SjX,X42K3Z#g!o
%L9\M/cbU?!eP>%(ZG;m9&4l&[O0Eh?-TDhNe")noQs9F;IJBA4GFf<(?42llKnASGXp=2L@/NE:5*X;,_Vi[m!iaULf<fsro<>l'
%r5U%eQ0H2[r35=s,AN[$4)4#G>t]W#%0J8gJrEmNY[,)F+<KGqq;EQ$1N?(Mmuk'BZi,XtbN!ns:`G-3,]-9paPD#d6ud:WT;__#
%2Vfng0R3<\j!gYe=uG^RHac0U7d[`3m<J%-HNZ$m-ElgflOTr0s']!%r?GT6aGGB9T9%J2g]Ab$hkp?FVB,E2(ud2'm=15N6I#@f
%`fCBfdJC-H>1aNX#`G,)P[Ysb#a1_Q4"!m6-.'\$QPN(VA<Get:s8fBlPs!,s'<b)hh(BR$&0@@P1fk`\M1eBQTm;Dr*.K$s/RLA
%0+Rs\`2SK(ErW:B7S&L9O\e_#HAic=EjtqU?24<J48t[BjTi`sG@hZk;'"iGf2tNYU2DgO($'7\C3Lcbr@[bl=%Cg@a9_ePVCS@=
%9F-20W6d@7'369dBaMn5KZ+cLGW]gDnLrtAs$:FS=n?F0;o6[p..oJJrI'[VGEMU28Gf"qBe@;#W$KQRMPjdB$77V*_?2(ES/IhJ
%Ot)i.I@.Z_k',ha?'FqrZCKtF_YEh`BjrMl8sY\d-"/45T\"#`8/PYdr$P%d5Iq'B9O3%t@)$K]Irl.ngPgX6?iMWf2V%T*^]%RV
%%*)'#$c>ns7'hgDrr`r00#^ST@,o"%D#[`279@2re:1NHV[.:q9.8U;eNub`N%"\.-(hq+Hd`EkDOXKT"9,R32[28]DR`I"#(.)6
%[Oe:qF%S]s_IT\?A/]qslLnRqLquf>2ABl&Xp^L)N)9#b)Tq2"e\i9kn838BCpW=6M>,\ts$PFJ1*,8X^nV9[[sV^G@_u*01Lc-:
%S!s,&+3$Nu+&!OHSeu?VU%d=g6Z`kD`LsP+KL4'00Z`;snA@qert(30_'i71\?Hs%W*hbBF\8$YMJp?tX7rVZ%R^"5ac8S6D#OgQ
%B]0n$-3]BdXuON,Ygkq<`\tm[#h5Iq:4GT]<<$=JTDk/[_>84)bF]maRe\NCIuZ&["96D0i@g=H^[jXHs'uqfG?XbdC#LYZ9;D4M
%hOb>p>-GWJQOqkbI\=,E>;g$Uo@;I2h^ulE*OG%tni-[91^o=ohF#J/WkPsh5(B-jUsuOVLG_)RPOac2^3Jsn5PI?6>e'V>\JP2&
%Vgk7:VK$A@ZIp/IS=b;p`Hq>DSVNWiJ[ZKd;>"+`D5Ta6[Aqu8_GlGFMhGIbjL-50U>iVqY-m#/8u2Cce!Oip8-;SqqmBVJD/$#9
%,%Q5)R1TD1@s-O=IP#ii/PE"k)Gg,a2/bF<Y<<XIh"DXf'daaWRA+bh)INBZ;PVe\QJ>"">"+^d#@TS5_42&T\&`21pf\Hp+ssW5
%D?3QW75ImMcY:p:@bjk7*noJd,8E-Gdpo/)=1':%28!Q;HdEHZ%oQ@XN:`eoJL@bMd:P04;%62)*Q/kT@=(AJ!3sgso>lWY/I;LA
%?6WA1;R,97FI1Du6@`ok#UP!4+4k2i-4n1R</^0JPqmjn%/eN+l(HJg4d8L4$@`)SiZh>[/<b*ZMeaG4&t(&l\V;XHo,@7&\r)9o
%3lk!j%gc!LR)1'ZO%.SD#$k.Z@3`[cR:,eS&h;n=MbHM+l,5dARrQX2VW!W3R8VNdRrK36&gq[u1_Z;i`!$ReA&@G[:+!qNk]m*1
%i_O,+`W<.0Y[9n8$jF[$O?BE;'V$o6*hWMD[gOVl8YRQ4"F/"l/MNW(UlEj!\U\>@)r0r4L`(G^$&Pd4TNFP./^<_'FE1*8j3*,d
%/u$Y,R:+lF#TPK(Qu4<?)pEn*09g0E0aq':<ski]8/#+uYuguN*XT8`H>:;7*MPl0D$Wjue"Jg$l4-cc[Z*j;gi9?o&!mGfOm396
%@'GETAoeNaE/MC3`?pFOW5GXW4jt`;l)-gccUlRSbZ!9cR`#T3`$Z-7;M:/j:%OUnieBnUDeb4[L)5^cVuaV7e40us3KR`R*rEe9
%F$o@%1$OZp75n0pJ;1E;?t"2@'ie:2h"c*6@t<7*E>f=0ADU_r<Na`N)).2)bS%X+)PV!eUfQ]&=iT#";@9cXphkm8_5:p;mD>'8
%O>^O0$%Y[p:jE_/B1&pj7Ma!@$O*pR-3sqMVUc:_\KWl.-@J]i?!8gB*1'e/$ftJT;pLZ/ESRhJWo7Z^NqHWIMKf+51ZZW.NAScN
%Fr^G-Y/&]2?te:63-O8e/\lHtBD^U1^a>8>B5nis,u'r&S!$Ou`b5iDL#7t!Y2F<#0JB*+[UXJ$LU>$&I<?%XFo@%i';MOuHdqD+
%Lc%<J9hqT?D/7*2\R>P(i<R]D#ngs1Pf(O$@@:ZE%@C-6&>#7_`D2d3Kq,*+G\LLnqpf85J`nuU&h8ubm^&l8I3c:`Yn=N?!>Z4K
%FJb-B\Sf]4!IDQ+JPABgLD+P#&9F^fM9hiYNLA',;BC3kRKfLuQI)3H9cA!jYD![SAi%oV<@56VP67"7Gc@L>W%(q@fD`D$?:4>1
%(:jKR"J0fCddPjm>r<(*q?3B370ZY4m$gEe+1(cN8.1(QTK9];RA$pejL$P`6d.BtnI.&RTH5Wq"H%/+0Iff2j1KKSA)".6i4R-T
%q5gDF<$pL42\_JR,.ME^8PqE,pB^kH/mHWNZ+36TV$OjQU;2G%P&lYT<[n8O<BkQ[SXAgT3lTEVJZOqqp/l-Mcn4gd3hH4=SD^Dp
%5MB!EMQ&Ff@+A+87@J$31%A?n9C8[H]gbSUqf54siP**Vg=g)AE<&_I<3:k3h,":W=%F';7/\"7W=K0ZSrEN-W%Edbqk[&_p*mk`
%jq?2T]s-EQra!'nFGX\ZI%Ef;1hl_?!;S'UC(tl20FMo@c7,BHIrHqb:*(Hq]&@_\9Gfg)5LTWBR6jW5L<$[j=S*0T=mZ0YcjSYn
%*m"e>4A;V)kiDus;D]"1;\H)d\s+0N5&@gM5M0X0B`eRkgh4_3k9TsPQl$0o9EcQ7^lSj6#7^FBJ7HR5BP'AB!("1GT?oI+JEMAX
%+Ae@Vg*(A3K7dAQ'1SAsr:T[ibR)5iTO-'Fl_^gW'*ab\_@u)2(N^(_543;&-HHQ[`$6L%:g_MDpMuTl`]c@A\TD9@qmg>>5jT=*
%:)*t$p'FOpi\E[$h#A@.;%3$BBM[TjQ_.B7+<(GA8[849e)Xt569#[=IrLsd6>6da[cV-t&D;V'U,QI:K?5CVrdZD5o,R[X2^P4a
%!Y9^t^YVY:S#-/ri`sbdR0VA>b&d]&jrH;<$b5`F=cADUK"WUa?qEC'Ho8rKh/k3[lUL9nF^/Y>NZZf!i<eXEdZHlS6k1.$'q..K
%3P'uE">V&HF/5dT#Wt\*eK),Ro4+[4*OH$g5cJPAG)3-$`V_Q<S5Jce^WBZDm-AkeXq\Oo"&]#H\4aBin,<q\W7@mAP@f#pk'-?i
%<NXZ(_pP,WTq=rP!F#08_Q_c>5eHZhCdHUL_!N7Sf?1uu[8OcfN)#o-As;c$ODK)Q]+r-5).lOZ&fm8#!9>SSJ_DLQXptu&]%,Lr
%5HfbVs8C[>5_F;q3:+,s0F6hY\eX-pkq>Ks#PI(l=)#+seUFVVG"A7s1]A8<kOU8p3ePJF9Du\qDca<\mE[)[U=kOrLVZ%]ER0nk
%RU=-M\bo64<N"TNI>(>]DWR]qr=YTiVTXII!L?r\.M/\1AWS#jL"c$P7e;=bqO@MI6Lg[(7K&T&?XlM4:UL%_Ape0es6G:+j$mJM
%kHC?YD#<r<GT:@-1`1CCrs%WS:DM:-5mc0"d"d2oIU,kO$G?IlrbhB+ZW)3Hs5e/Ahu<eEI"5iMs't3JZuiqjb&UhgH?\#V[&Wct
%jQH,P\,9H4n$oB<>/i9]*T4,.)VhNGPC[`(9JBKHI,:;Lq^C7Ga6#5W>7AkX).&rZ4rrRr^LiH(-GslM#C1MUjmE[h%8=<nq^k?U
%^GNUFL]02?"kh'cGLWhGd^]2Cmh&WO]DGgZnQHltWXs.J!Q9foR$cR,>rDG@bkYGca);K(e^iqAFB0?&gEV'[P)C`rX/[>P/-GFk
%W(1c0%r7_>5BP>WiCj$]jA.YH2mdctkccsYL<`DD@BJG`NV5L1qQV-iQ,"WbULA'tr9PTWn?+1,+Rl&RBoGZD>3Md:)tb2qR<".O
%<9i)`i5MD/[9UCCe]H[=Xt&7NhZgX;QJ*o\27[3bWkDGB]\T74*I<p2g'slJ_lc'lLO76%FmlU@&M!I/j_h&)%7/V%IRjo*j>)h(
%[@3dlml/faICK4F.Gc.[>4tAQ;[WH`Wp_hcZbb:%fIq@O]b788j]B7GWeL^!Qi&d<W$+[&6SG!JjeW?Ze*)#3=oX^Shf*sf7As;Q
%JUe87YG69_-[5%Oh#d*t%;UKr7YR.J^Hntn>P^S96H.ZnLS7t\2(Y"smFKX@:2h(NGA2213`G>A>T+:X_j;R9DV&W'oH"f4F5VdH
%g[/mhe39r+7dWKlIc&&^DU8?!nAd>D/,VUN5!I[Y!,][=W.]d/*RoP@[AOF<$.W=6!RoM8F_[TNm@561Vj_+%Y#&p&P_Qu8?!Pt9
%bmrt#koS5hHdJmZg1ZlUXo0i/QkEl[N[`JbKTbiVaBhcVq,+ck9Z9H&O0""AVapp]%C=P%[R.cpdU5\bC&Ag"7!MEH_koR4^hdOX
%;@gD-XbN_7cI3(2e>q!?R!=2*,76g+ha>`$#A5kfnO>cIhT&(6+$fPVV"Pe=mf$JWpTW*7RRH&X2?#!"AG>(J6[,2V+Jtu1AKo\D
%H`#5/p#rR!G4"0pY8T),n&c0bZFdOF5HW#MCN-j`")q?En"uQh9f9Fhi@Z4Ae4dX39D*(sbc'Fn`kI1Dnht*@of99s)m#H;mg`a,
%.GO.SAuE12<==@FfQQ+c/p42&hu(i"b,5_GH2p)k7<W7j<<i:t6b/DtO*;omqatckm$R_b:1MH)9P<^[4q#SV:uTc\U8Fb`dla].
%Gt:<YHl0j+$o\[pf[eP=^iCmm[OZYBXnqugVsC<RW7@$>QO[u@pUH]7&<89+Y6BnqU4H\;W.bX9<\C2ZV;G93M/MTD58/7]C9;^u
%bK=n8S1(k$Y9c":5q-eBbMU%cG^W/Jd84uOon6#!S>bN)p91=lb@%'X3ea(HqU(r?_F\?Z&:K$:oM>]b_F-LMd0bUi`3YoH5/b/g
%F+:[jJc"`PLV:l?GJ3,,IlbH\mgTDt/\XpP*kBg)*<j;e+Srt-L+^[+B.H$OEiK'fs*J-/>+L!6UY[O"C80I$,_#^m)7G+$oU=V8
%DkAj*<-mrSY@$Ouq16UY9U3o]UKPT+_cGM.2(J'<3.RBnQ=t_t%@)sT6.[Ilg.)UqG(0H7b%be?C39A/U[e'_e*WoG)2jq2>P<CA
%"NC0Y2/;k!^'gJr*,oU7NQij7>jGU[47k^Q>j6F)q%0mA_1t(-<;7*n0A*<`DU8)K^5tS(/ffT=R=^OO3IZ<YUB,K"7H\$NmPE<k
%mgKl[G->9AqAdssEr5I[qtJ<iq2U]%fC[$&dt_4HU!*;*N?!aM`_9ef1i?'d&Z3Kb#H)_PD5qX6cpuOhXea(I)d.oaYUluR5Me@r
%k+-C>TiLCn9]_XT9c'39?.E'UeA?e3[nAm!=oGkh8%&`dUJksT&V6R1emMGu$pS.j@+]Xi9Y+KpJ#Jpjght^M"F2(5mSuJAg8gt3
%[!c'4?"9SO>'Yhq>ceuh+jmLhK?sVq]'X[#U+9RRqL5&7CcptuTg/%mePQ(n:ppnImD%*\$Aaa>PW5@b/4kDc$8k3NjFR<^V)/`,
%]OUt*%6>tGdg_.MgmEO+_gJ=O"8!*kg,nr@(O8_7q/LW2XGn%.`gWWX[Q5L%^(4T4oiK1`/Iq8-a5'u)hcsT0/PsERGhaAZ][MY^
%+APGVYP&2e$hclu;Q&":%;M'peB5o+#9QA;ZK8#`q5d<;^eNk`^O'@$HH=@I0=VPMQ,cZ5a>"YuQ't/N[-74`UX*+C\t?AIe3;l"
%:\*rfmQiAMJ?ak*FMEfPS#'l%?i't9>K%krj@h8"k-8=t_(lOD3iuP7,$C]C`jDV&BmJgIL3=Cm%-6Ik1mI+D:R\^r+,-01!ipjJ
%?tnV+1\+.IkRD(IXVkW>+Q]s?q9"uFH^T48:e^N39<ap?X^L-A(s&Gh="=K\o`kYicft_`R-R35mC#rss"$B#+'KS3CpL:9K?o#F
%j[5Pd#atRB>*lCJrj_4NV:C3GU@[r,bkQtd.@ljsqIpA\_d9gb$i.#6)SWM;LNE,ce]T<lL!n;T6O7.)0W1nT3H,.pcmeW?S)?rF
%rR*>t<^#6q&%b'Dc]92:OF!O@K>jps[e>F9TA]iudsN6oh.TW#@.eN6?#!G>]\91]!d7(Mdk+(#;h`H`Y%;32Co_[1`I'WbcAfca
%?MZC(]t(+T=,qLC>.uiNhaeRKLU.6^g/0ib^Jr&^A*5DRHCPt4<rVUV2s^6beBCFk%sl"hp00KrIEI;^9+*Q7nD`:5TXE!rh!o=>
%s.GjcQL(73WpjH"O'deoIc"hVL\XmD1Lk:"PI57!;5B$XbiHbA>807P/C<#(;e:.`^TPu9Zu3!_iR_Sm\9LqT`NL$QR^,]]*dh([
%60.>\lf>SdT;!;"[0YT)0-jH=n7;o1c(&Xs^DuM-C&&#VcXg:4iX1,\;U'%;/3\RpEKu!tB57B(r-FB1j12)4[mg3kJj7+GCX$ml
%^<4h/TT,AC?A!X&I_YCl]4&BbY$=q<o'=t+.\Rr#/a;MbpdqL\2OMhRdRtMJHgs:$Sm/nQee`MlZhl!GJ[e2Ie,__W5V+c3DJIj1
%rD:\_h6&5'([B[l^I<Hir?Pm"XTg;qYA^dQ31aGj^2Cr\3J#6@s(J-H$IA&3'J@)S8>,G'\NXtFFp<44HR'^t%e)UulGEN&^gC8?
%j-`o;U>nc=AbXCnR$5mm:CCBmIWq#Q\'rqfB;r6&<[=5?R5Kep`C/bR+dUr3fuQUn=%h<448+nf=fj;(hl^0tT1!s<O&=aFZ]>:?
%aNIfQ[G)P[fCQVpN9s\!19HP,eQD8/5Y\t0<Hp'=O?[4Ngo0euD_!Jfqr-2iYg7/=FnSj7L#lhmdqVkPKbjZ6\!b=g#$X36;pVA*
%X%1Jh/,T",_-_-2o.bP$f6.B\a18L]4A,!JcdlMgT4@,q35*T)<d,>[?+QSClfki<?fl`I:tJYEb,uY0&bi4P1T,THpH^`<(knHa
%FAAlTVpp/XQHUnE;cZ"8PHDmooPFBnE-$D9m2>k^K_`+HCfHCLB-@<dcW#+[_r9sY!Q*U;KYq#@6_nhDT!7G,rCf1sFS-DU=qs[U
%luI9CM64ILp\8S`^Y#rYhq2MQ*D6m:%1@ZCUQC6UiL.dcC3Xn^HPE(#@cd)A#;(sP*1Nl1$`hEnG]Bd4)ij%fh=/kl=s=qJSOnU'
%0-2a_n[mRt3)P]+_^g_t7Taq!3=W"k?46)*_n!!83bMkWZG%,ebHh^fY!2Qs<q9&tMnH;.?9Jf`K\%\qX*](9Ell4gRsW37Xc&0.
%38%/=iUlD52Oq=KI159_rOHnHj=M8+RIAscGE7*WiViO"'g=%j5DG6-@aX[:K^FLibGeOPY^:&:c]tR&nAXU:-@F?Lc@p0X2k&CD
%h:4Lr5Ff1N_G<UA3F'9X.tjs)]t&*q\p4j)G"]aB917G>^TLnXKtGB^mI4?Angut/eokZB];<p!CbL2r'1pM>Aepk;k;0BeQ80*q
%bWj?#LS_Br>s3RhDJ%,Ue\)jdBOPmmD7+FDZain9T1Sa[he"XgZbfE8@GdI*^#*\Q*8Kp$cQ$!sNL@-HBkQRUGYt!A<WLNQW]`00
%=9q.:P[C-MqV&)1dlI^:YHtq>RGNe.MqndXcIqPXTg(IT0t*OWd8p'`2I9cQZ`8Ikc'f5-2J^!l#.*VkC\?BAg%3I)p1Wo>G,M"o
%B+HV%2J,bQ:6!rdo1"-$H8`>gHS9\$Z_`j`J%!oV]Zr]Vqp3X6D!*@uS/k!qNObJ;XnphiEi(Q-He<5].;Sh,F(Y4FF\^^T^<LN_
%pVM!>XL^*pUSm*mLTsKnmVI0Q0mB$fh4D5_\N$!-Xj5eKeIVDDF"^=Ad9LV"SX9qkNAdH!q8h+6_0g(+E&XsAPreMQR#9.l+%8*N
%dn7;-^YM"hc6)Im7-=q?Ods1X).(QPZsV\PX3W@Us8;Y61>f-6?6eEDabVL\<)4`qaD3G<n<p]*lA9g+8[_NTcqS&??0k&kY?j8P
%@Usa/Ec\ftNg,co&S]b=gIN]=R>?g]dE@6bi%i"XYH;%](`2q'KsfC;]7om+f3$Zg/lWW^mP_Ni/mF7IKniOsE1tR[@gfIF]8m?;
%QfJoc_hH?pn7&+EXqmF5X,@qCeo3@1?b9K("<4mRlkCY%GB]n+@WekuYh2]$CiPj!T8>1rCR+*U-?^$`#7$aGXbT1d])@p86r+FK
%e`bOijtce_%IZekRmlZjqUW+!V>9I^Caft,SR#_!fsdf[*TL^F8"Zh6SOU2eV<`$d@0sff];:kFrU&%;qfj'<7N;(Vc0@L4eokZJ
%Z0[ZPNu]fbgTer>X+%-,1RO4d+'ONRE9<*H2p7,?Zfu$Q^O*?#*q.r<k6Cb5no84p]6o$VU+]T>o\B"Qq;j@qdj`#Lj7AbF3+%ZC
%ii/]^bP6OuhMkm0GC'2Omd`(2OuR6s7u\H6&PM"&-<R)!:*c;llmAueZ$;\H3*;eGPkNFI'(*A-HY$eb?XJY^SX!9XlE%OZ)=9Pf
%*3TkFQ(.BYLD:@jF62fMTr]dtVUcL\I.g"^1.un(Dg4%<>VraQ9)2FFPn%o;cL3A,5W>]h'O=Qp$IP`^>>bs]o.JYEZC:$XSXkrP
%D>pZ&d^5!fR't\m[C,tW_mOZqPh=Qe[0"t:%V?OLBXZ:8R1Xkq1Zm/sI_sQ\qRr7hlH]\EbF#h&<hLCAAXJ;l)s]Uqls7YDN2rec
%Ti&Fn)]/[*DICIjQA29Hj>5qA-8TS3Y8g'W9"^jbDp(eD/M3g.R&*"6Y^Cbn^kucY7ojL\[b7.[Nprl,K5hL*k0_(`5O;bIMbWSm
%=8Uf"5,b3^3BY$_eou:`ep\r_=>u^b7ojCiq(--=PFBj5q^3R.\`en!>]X15e`K-gXnCf+V:P>(l=tbp%-D>@HhFu$m&d^R)d2B:
%D/R,E>r+7jq6b$^@B`eVhB/h!0D?75L*br%?!3[Tf9;Wcf(qtEZFaGKm\9#cop_k=pssS"@rnUfh)HlA.iXNcF8Hoi4]C6ChVR^>
%DIgrbRn*?K]:4j?LF<4n]iHel'p!!6[Pj3CpKP\OK9NE8IQ>$jn!-:]j`l+uRH"'0ZEQ;1:0(_/HE$DOrC]a9h6p4ll?+=ofsn,]
%Sek#DoYUIJF'>)o?ISd7V4W3-DpP;-rCRL0aWun4oLqk=fZY%a_nAaW]R>p5],F\Ur:jreh)e@WZM0^1<4;OC=NIU42I!`![1plV
%hh>">f$`l,Ic9jCOC)4+MYp?=jZHm6*Y,WrX3loD1N#?lmm`ABS*g+Kb2N%u/DAuY`-u;GHd[Ds\SC7bG@$WiNSW^UroS)J)L^I*
%^TD$iT>bu'007OAp,6]mZ+WK/H,%tDW,:rU*o@J$2f9Zhp<RJ"!QMH'4BSuef*<7U)STg2:fp7?*AfEeT+@]3pu68!Q-L?bcWf,^
%F*]Ec']Y28;2XIQO"S]1USHH6]BjOs0Y_e$I8I<2gR6I[nQYEmiC%IIAl!TZmRARb_h[2bpqApQ[IW.AdpoXB&)Ec,@k;r7\8n=6
%D<]CEm(urZ3dX"Nh^beX,3O[IQ*YMiiAfOAL1fp`7B<r+?9D@r4>&OHp%%oVj^RpGICm7?IT&e/T(e.Y0,NcgL3djlgcW6J7rlqB
%d<*3TDD"kIqYB642*Z08YA`R+fZsHeeT#DFmAf\s=LjGTc11,drH\58r`6@C_PL<3B!logF]2OOmG>M<U'J/BIB[h*Y;[M?Wt4=:
%]BD^1I$^7>h;$hOH^jcgqa:Ru\R.F%/`31m((TcE`AW3"8o44[3.+YSB^qqja2Ie!mW!GJjc>\-B'^s]m#IYm*VJOYiHA<Pc0^hc
%8mBDqbL0,UUehusSt)+uc;%-W(Y+G-Edt'9<j@[>(XPmQ0Ml[<h>Q/-Pq=qdX/?]/?[]VtNRj%O`N5VHgn\`Qbh?3*hg)9PO"[\+
%op9u&Ds3Y(gGgfR*ZHbbDRc[<G1N*0/$Bc6p.N0X1@ClPXjcmlgK*M$!!C\_G#I"A0&4EPT6lRRN>E1@='mSc.K2)ImZlMl\PoPW
%4]6(!1KUcLYK?ISlg'1hhs2gEMM4fC6+uS`<g8U31/A=jHTV(8[oqQmmqKr7D""1hpseWL_L'YSS+X.&^0U/mB)5q!;<oSCpD<eK
%-,)NucI^&8g[p@+RP2"4V;>%7p+"7sRqh_AkY,\pR(gtrr&A'_Us-/ilaud>j?#ZubNg>#.OnQM36C;)SW/oK5&b]l+O63tEfXe4
%2R,>U%+A;PVbJgL3i!a=45EN8hgMV<]>&IKX*KnUUo#B`&:rX9N#Nd!6[MFe$RabRX7FY!VXo1D=R&jYr=9_<*+I_5U`\VSYcY67
%k(?!f6UJ%blLd>V8HdDk`jE2WjJ,:i[lJl1XW1HDo?m-Cdl%_XI9A(-Ztd?8V6j\Fj=+'nf0[Ae/S$L>L'G%/MUWd@9=*1U%8'`2
%$C*XqPe*euKX'X.oVaU^+6?L8d#Ye?3"\1n&7YDrOO"(As4SKIH6@1#DC8DI;G:UlU^]G3\^chgKmWs:*.j2V"<A>/B\5aAQ!1+T
%43^BkG"Fml/+/RT3<G>+gZo*>8eVNfm:9q'LPJRsD"e0T1]j\hFcW3H+>iAri!HZFGI6%c$G]p2[sFZ`!Xh]\R;ZC"U\W3fp%)/_
%U\-[Goi\D:M#.Up9LdaN$Mo&>ieLa1>bb;6e91q`Rbhmbm'g="'RuqY[a!Il<'W9jf3^6PTC:-ULUp9i1?0+pT.#1$/&&_6+?j8;
%]Flt1`YIY3QYugLrRmK$kK3+?l.:m'`a\C=s*4A*#MqoF6%?,rl8Ze'qU/Dp6Qc)cBj6#`.KT/G?SM8.7FOj+d,,R-AXns%B6]0d
%q9m2k=(Ck$OZNSb8ZNn$ruS]]/\71gU@0+cY:osQ\2:9%S"nSUVpoGl4IQ,I@/8IK%Y:7c-1F3Z6eb\h$krds-GIY^P+E(6BMKCr
%+4E#QM"%[/[h#tIp!\=?5,U)Na_ca(a*QcA"@i$'5>mX6_"uUu[_7^Uh+ReI'&u?E7=Fp[BGWV=UrqMc^CnMGC&>E*Qu8V3nq,[.
%ChFS`+o#?G&fq4b2L[cAl2'nSV$gJ!Y?KR3^)li4U9RpV(p-eV\P'Y$VCGr6=G!%M\g0E<m&S@!O>5cgmc^3EqEgL5Wq<pbddWq%
%CTThr>tjejUlPaAV@aIdrQ<&RA5_993]*#JST,=gY:T\l>K;l\f_X^L_HQ2=Gu'J@a4&00p1n`Wd0]:'_omrGR8takQt,;@3B"L<
%4Q#!X1q$EqmM6:rrDA:3F5!<F%sdrOU("?RfuC<QQX"l./1&o7H\:Be?X&)!P%t<]^=-h8Qu;8\*[K?s=s;AKfW8TsM1rr;?O,+s
%k`BHKo;he$H^K5q:E)7_jj\)?@$'(o%%FLr2ET&oNOd7)F*ljY]#iNg^%,-=F'R5j`TcbqWgH@_]\fd)h<KE/r?Zrc>TG(rA(fu>
%;1<Ms>).!O?hl(:P\g<tP2g<6eS78'*+kZ;7La=t.?^g3#B.`WXbBE)#`'O4*Z>Ppp_8"k'u=iMDEZ=B$Luf0,iYh'*C2XDGqi@A
%<Qrq29[e5k>>NN0O]_Hnq$EAhch!RYBPI'IDmm2WWK^`Y;_+07+#IQ\Wj5O^rRTcQC?o<3RVpGi/]@Ok]2@jd&:).o7$DD59jC"s
%CDZ`e<2[%k)V[5V>N)c0)m-o]jJqL>XCV&0(Vi&F:udnR;I+-N<_>'flJ]`lI(>P\o9369L?jKfA7g%6p+j*.9O(<9mbY8&9qLT5
%`7?TA\#W\Xp7CbkG334(RqudSVra4MZI9;hC,>f$AT:p>0<,87H9ZbD>q)mGo&84q+1ktV_ZO>@-I@`MT%Q!b95HE!DLYj)bjEUI
%RH<4f`26gU]-+pk8o/Q)\#a/M)B1T/bDl2&lLWC*c)+,gi&a]':,gNL^#tPtmua7qDOb.9RR&V`SBa;2]5dMr?oRG_Ot((9A(g_$
%r`cO)>*qsho(f7ERD1dY*G<eJfm9@bQ@-;OD;[acEF!sV%)$*"S(sbW]1<lBWT/C"q=68hH=e[Cp"0"/5#YfdJVT^jS=`fn?ADS?
%m<(X9I'BuMcUOu4Ouj/WV$`k$%"!i[f[`LU9b(m$=f(1_EB'.3mL;[MK,\='Nt]fL>kPuEWWHk\E<_bBF#VYFLA&!gPu[C!8Y+pM
%rFnEe"W:HHNhsAI@=5e@bk4c71Ds)<[[Mg\nHh_GB@YkTG3X'C-+R0>p"#`*MtR$:8m*h(B[OAGF\,/d,A_HKCAGh>0:HU\Z^4q`
%+HcEZ(%gFq9?*ijX.l766+^GJ0Y#eLVU<TspfceW/B)P7bOKj;fkFdrOO%b+ilbmfD-FkND*J-YUl'rX(`8`:O\Hp&^J(DhRek`T
%?h6<,:JOiqD<#S5I"j$EkXg+QT/CPof]Ml@Sn%!o%E;DIkAsdiVcirmJo"4Lh76Xb?F).X]qtAmYkjf+G:pJ+@e4=EE9tVM"MNT2
%pINItiqt]W<c9V+A+u*BM]FWkdi$-L/.Cb02Pj!h?!QbV(*._R^G"mJA7OX,mJTtlCc!eDkOXs)Y[&Ms<kN9RcgCKg=Z=Y[?oMDE
%m[g_UITc$Fo'>&qU<h?HS1U$(C]WGQ1Yo'/*p".rhC^t;1\N=+o\trkJA>>sU4MtO>MC1J_1#Htc*TNHhkg`VHPu]^Oa9X&mpm'X
%jQQa4_*K?KhM`LSKi-7eI\k%tdfAs-lrR44Em"<;\oPKuFe%^cZ[-+Y/O,c'oLO3ZLSC>:[ke7\r3WHiD6"UJXh;6A/h^hF>hGqJ
%"E`Z],qsdBUKu*jPOt+T%^]14F[J@\oT2@@>%1.,a7J)FB@!s*RpHSoXA`X,MG&IPJSAqCj<9]B@#%#f8XK?LpPCbBK&iF5:%!O1
%6jYKli^i0uOXtseF'(i_)I`6K+WTNIEeke*Q+jj)$;NPJj7L\:2P>V;H/,4h7%e($Vm1F118-raFh:cuRm%O;i+u,Uhqp.+@l*(c
%,9K7$H,s\B`2XqM2J?@P=2O*C]fh(*jRgi9IQf?HB_peaPe@:99%cI"n=Fm;.i[.9^`Aah02q[85G18;nnUT&QSceBaG)WgCj\@)
%Y@B'Jno2KYg=SrQ/ZV/W>=!9bDV%dna*OT%T(\jCHW(]Ig.b@fWBE!]2+;*->S9h;1Eo8QIW2@giVdb>Ik3FpF^cV)FsLpn25J(!
%3r3@'.&Y&7-/3MSQ"S<=UW<!u:&tiXaN$M(_3f0j<P6uQjHBtZ,3/cIc0mkbWWV+aEKGZ2]O&j<QP/N5E+kON!Q=.DT#n\l05&TM
%RF]8c108aHMb)afM_WH7ant=_58K)];S%M6=tnt[;R;@-FA'W,-bIbfcfkW(0kE7gZ*5W3c-b3=G(9NDm2o7&Z'IH:A<2q.LOT%H
%g'.;P#.o^hC9`)\Zldo[:\jGRY:DEV>=_^HHF_1=E@&kq[C@lt<7Bqu[^MFTnNni8T_:jlj,G(Mh-%e4m*6\U5lQWIY\<43FW%V^
%+Lj2bZ$:KSnE_c]KOFiaZ+PART-Q'saBU-Dq@AdV04Z\139U]a*![i)lTg4&nD\"5<]e^dZ01(nrl#A:Y4g9XiHhTr;#TDe&'DAP
%N,.T/]:W[CcpP115#'ldV,-:CLD255e_jA.j\JlIqD[)V,.m`r9-37MnNc6i;ip;2n;I!+0m.lX%q6&a.V7,)jLq'NZ?2;8-!(Vc
%dr![GV;)'^n^<%];JX>+m?dVekh52]Q9QkgBmI5ERje^W>;M:kGRrZQ@Fc62A$_^U[$*4h]^_k"cF/b@jEXk[l"k@=#5id%4t-tT
%2_VM*k$<3H."6Pc7,U60"&>L(8A?.a+Ak.u)m5p:@c$U9IaL'jh@Hd5/$%4P[XqGc(W`CT3kq8u9=S)Kro&<?2P9;o:d)43nS1Yk
%>+Ss/[<Ue@07A/0"Rg@/H=W4#\t2]g*Yg:]-$OgJI+E-mG9[HE)3n!^K3k:c4ZKV;a1?HDF0,+#\ngNLQ-=W]hf#)*X,!$GeAI`\
%[J#7[?q.,RbcVKPEA,"h2F_CL>s9?`"7pL/O:l@+EVG6_nWmjbA@@e.:A/>oG4J;RAHPWX,pYb!eIK*iZ[Da,)K+P:p#LGpTp*,O
%NC?m;YsJi2Tm.o(pY"hg;TDNp]@UD9Z6a?cDSiqYg!nR5!4K)1Z,TZREf!c%q+QupY>4nu)Z(pK225qP>L0Y\/OniWq!FKTQ[?o7
%U&757^k_Y@%*mX*@i^/irAHN9<NRre"Sq9SaY:,PX]FOgDX8HFZdi-^m"jTZ%&EK!8iF"3/"KVO)r=90Jq:#3?#H%1[AQR?B%>2K
%9"LQQ;ZUU+6a6o=,PsSa\*e<u&+d7qINtA190Xu=0!+;0+4ssZ2\4+D]BFkc\amm;.i?s$rP#*Bhfdr`%1Jp)j^G>(o]NM/?e9A,
%gr".-&L*MuZp"(qXqF\$;T>Fj"]KY[anW[>?_:&qDk0D(]<A?k[!?YV8=_B(1f@u*(a^<Yo@s"%rM!?irW#DKR#RBtmd7h'7Nc?n
%"DmaW@2erB0euhO5L)a$ZZTYY\o#\DBD31:M\P`,<e/&F`r$38L6u,EcP;mIH8WL?Sdf_F-!'d;4.NM2A,7?o0fL)`>p$j=2o9BU
%O?Z*`2N*E:i4"EEZ?s3sDW>\A0%G(TTBl1#f#$Yp`-TV+I.hl!C"hJHm7c<s\ouuE^&+bY`=bD8X<!?Z=fX\R?`<D$HIQ&4jd*M;
%.[We+9bknMrV#PrB`ZsO]>eGLQ=^B[>7R,X]\-aqgR4h\`R^E,fP;T-n1B=CDeCcQaZ!SZBVSH<^u7r!cA'nGVT_C/'Qp%QNVqPV
%HFA60H3(<7OUneWCq]>fc*V*F9TX2Q37Z^;m7n<?RN%L)j)1\@%dPW[l?G1qT3P%`r*d-1g\PBb*u?0/d)d!:Y9%9@ib9]_;]A3G
%==Tp>$UojT*j/Gtk4''>/LWAl'LcBt4S"')X^.QtCi1qTRZrVp<3DVJif)m=a)(]rJ509O%@c4FfmG,hhoKGnNO,1d%<XTU<aJ\Q
%S"u@AP8D3o;LUbjoT96!H$1OFH<G#/X^;$i8srVhJXgY8jpP_aV"rQGb4mWGAUV1=p_qoJgH4V;hJUoIh:^5mC?>_&i]dSaH&a.'
%lG\krq'Oi8AJ8_,35&SZMqm8eOj2rK)11Vfe_@PIV7>bkn:uQD=D4lpCCa2N]5*.n,<Nr@m*<LVOBjL%F6h5aq/_Y=laQNPnYS;q
%1oE.fc<bB:J6Gkf_<;d.&Ao5aZLqZKnj0,Ol;P[X_>VjVHp538m*@j(Zh83#0h#s`psDPF(Pf0aRJN6;WKED%@)TjcHn.Rfr7ohD
%9@:tMAp/NB^'8S4@'XfW\[WNeGh;ME]@BPJ5k!''>\.^:&"#nH@U>)Y/edJBMc%[aY?aK![/HLU<ms*?j'+1Yp!)?p?R_Q0#X26i
%I#M#/b;X8/grQ>9q#2_2%!>0$e;?eFaD8bo:22,*d)f;3%Wi^e7&TNi+iOhEH'jBQP>jJ@?[Saji;UI`*f`YpWg(Ng@8$p`>)\-L
%Up:$c\*)m:"`Wf$aq3(5fL[OG<rNe$lUf2uY5;fh\^PnH)D?:hcsotB[]bm3>(1Q[NnDA.c(9t^i.g[KD4[8m9Z(0JA[jM3QUYXL
%c;ruuotELgJ$%^L-`WusmG?;oT'qk"T.;SXb0'R45JFU(1AO;;?)lkP`[ib9.&jQ@_(`KKr)RqAW0`W>G/3!32j%?VL>>4o'CP%)
%f%J>n"S0!BG!P<a>5^;kJaEB(Gp1V#W8J6RG:l/pNno'oBWPM%@`Jj2i8I'$UNW,^TTAtkcuhN,X_[.?mJSfNhTeXi!W"da_YX[r
%])7jSb)%Kd0X8m=NUR?&RSFjQ`o:_))DdbUQ.G<e\fL)tXn%P?'a=l+[?LNgO\8j3K-;kCa7G49nV`?Pr]4/^X[ZW*e7VX.f:-]^
%'OHrVhQ#(WVK8!-b.WPU6]h,W3A'V`&D1"6lD%O4g^n[rZ7EX:gbi],*3=1nWM0C/GTi\T2F,n&ULNn;0kQXf'.5J,3!:,1e0%:b
%5BL4+?Kq[)+W8O)7Pg+r2.6b*fpIkPJ*PP3`_3_^0$`o=/A@D&aY[q:1RNd=,hGibL[>$>qM`&S4T62;C&(XPQX%-eLPV1e`Y<:c
%XTCuljosOZ]pCcqS!O/>>e3N;U/s/(rB20sIl?,PAmLs%!%0_<pc.PHfrd#ufuQ'F2RC+[\neRq\"t(?8P=!tomF^o9%R+SB$)i(
%[S7^n3QF]:[ZTW,=k\f7Ph]nrU"Wem:q\g^&GIZKX4:s]\>kg[:=AO>>26j'\a$uc%+AP]:Gt4Z.$*pppS0(KdnRq_]X(j"BJTK!
%Y0_<Ap5@ZUnOo8Jo>O\,g_dPE/qELYHR5lZgU@d1HNA-R_[(L34V&n-FQEC89A3sWGg;3gqnu.uq#CX!H5S,P,,_%c_.WG*5tY9E
%lM1dd`38gMH83%]>,eSV?gjmkf((HQMmRF[UpY*1oH*at$*lq5*5ktD9'UYN#M36#f>n7M5h"s+pkmem>3W>NY7,&FEmO@QSERD%
%%p."sYW_OB.IEb[q=3jYD/9^QGOHa%7u(m9>_PVkoO0T1ignoS(a\P/AaE?O"V1,3+OtNl\bNS_8/mnAga<0*LZM"*QlR`_\,Fb+
%#%Z)=OF=73_%'a%9=TGW<aL4-aPOD/B78e%,,4]OI*h2+3:tZn1Kf]MGMAP/YqSGj:@DfdMu.2rkN:i;\a*`kTRtHo)puMBe]a;:
%3R]dJJZ`oFR+SB9V;!Grg^#CE:aW:peR3f;2-5*M?;>XO_C,/W`Hr&Zi\%hZXt(QE%e@Yq[GBl61U_UP?A?kWnoj@*!b^8I4Tu53
%)#m$uLHC!VT<6DqIqdMt.3<!0_jCGkM_0Q6'aM:ljpn%FO7_SQH1#iN1bLMH#247)VOr*('q:I3;AjiiD6I.R*Rjm,"9/aBmNF.A
%#EIj'/^?F]4EuUc+-gcrpnIM+NSMU1BCL(U]C>uqr@"OZ29*>:@u"(Y8fdZEbhmL>ENA]Z*Xi^Im\oaImV0;lT[L%<ho<t=g$QG*
%n30kP;*Shp#f%G)^0#RF<n2K.QPBbtPOC80g:[71^XS>`\GMbR&74P$R<\\5M9pnG:]FUoefcmh3p7,2;Z5R])mR\4ZbRR6q@QoS
%0dr+0r7jI2*!q&3qo)M/kN\D+r\[#'ZM<fhhG_`;h*\<4SC<JD]&qeJbij4Z]J837qm`&@>I!2E6@SSXIbTKNcN*hgUai(Ud-\LZ
%Wr<,cSj@"HV'Zmg)54QOBF-#q(4%8\oP"?_\><sISK#?QKc:=k'+!(ZKZ/'A@<f+9I#;..OUsijTaX*p9iYV@"KMi@0oet2_ULP'
%<>]$IDPMkK&Z)3K\711BoJBlj%UI)b:_Tk+_mChhQ;A<0&EgWn0H&=>Als<&1m9Va$!f`4![S11+>?kR".Cu&@Go%l$#!^=$)/=b
%_Gi%Z$,q0l,W#TEM)0#r/5oA0-4EU6;e?$=nFC0kd295H?o1OXPQFr_"5!'lAr]So5QJdDFWKr1L8LhU$"42->mF[[AT?03#p!r@
%U>C#+k)gfd:DehH%CH<t/Dq(15f2F\#GYE.e\V?U^ctcJA_/CS@`T_Ae<+P!'"O(TNlOj709ZU3$_\ks;/s7>$LcTdIKd'./eo4@
%#bGEb9UF+/_SUZBj+[^O=C<uh:)hCoJ@J,uRUin(_e8>di$aLK(&S=(/1r#U)DI!u0H?rFfr\i,iA.P^'YNKJW&#+&GnFLH:C,4\
%i;se-k<-[^(cU<c*QKrpJP$$"MbotAO.]b@e5.rhC4foe"B'q_K:$@N^EuL:V<U%\8<!f_9pfb.8tDh]keL,Y1$BFt%S-XtcTt1n
%=_?YfklROuUf8#W:glmN"(_PJ"$0hgU.UN=&;EV1RjL86'pMc'PR;=o2aN+Jh^V6qMVJAWL4UP8+qCEaa:.>M(h;P7iW',gL!HA8
%O@<X#9b:<!LOMr$pe4imI2N+K&,S4L<Y^W%@DNZCTS"R>45Tmq$4;_h?kQ/h!iD[B=b`'s[RalB(@g&Zg_Q=q'?JTRJIOooJ8%O]
%Y^iK^==/"3YUnH\?o1UAf7KCp"2TLQ:`s%6Ka5.i/^4]t[$iIb<.H=31E,ooW'Q2]KYht"l(F_!75unrXAKO&e&"s;"G+cI_K>P]
%q@1p[A?)U0T7JQ<7,'"Q&JR@U(dWm&6!s]^\f#f07UcDs!!RdKR%Smg"7F/49T>`%8IENK;?tER5`_^Da,Be%NW_n0M&M81;0ACL
%!LdRJ-s+2!U$9?i:h0Y:3k(N2`Z9L50T6?\:JM3eYCSA.7Kb7o81I^s*N'3SP63TMe!4XM&/_Ji6SW)LYU]2T?lBBJ!?(tenH6Sr
%MANL>UeVg<6^(mk=9Y6N0QCX3!!IJ'"3CsJ)doo;Ah$n0;Ij/M%%#X<@7EMG%2^bC1r)q^Td*B!O?,jlK=*I"jf*;J5^ZSbPbSHI
%+_I.8I?l,a/;sr$7p9Dd:3'%(F2^E)-#'[S\8!$fJf3$Zh1"'EC#pgH5aupRL8m\+#*&ln!TFY!<lb9E"iCD2/847?-l2(g=uDf:
%0N/`c81hB+Jm_.cF6VR5+@tUW)pj_D_+\#l##1ArJ3;SW>Nc8jOp/'*aA4$kOiB-/'*I9uL-Pde4;*9sXerpkm6Ce.9;)rk;)%KR
%!Mgr`A201+r'E!>3$D6dZI$5dh[h7g8WnZlJL2F,K$0/cB#4Zo$kUhu5o%3ZOh_9D-jG7!#pGq7kZi.6#=K[T!\FM!:j[A)G:Gam
%P,1!OEE+`4&?*$l.I9WY.21p?*J=i5<$NDPY[scM&HkbGVVlR+k-e5s0MD_C.&PHe+dNLp@LP9S3;!Ia#M9"t=t1&90b=b\j<mr5
%1(o<nJ4/-\K7GaPfK'=G0oghDWk^#LTS"1ad<1**."[X&J0om#fM3Kp5\Due0S`oR+9CV&E'[M*%p_]7#XFc,`X-=PATqefDZr=o
%9Ef+,70*_O&uq^l+qd1aO=mb)?jMkt"m-JgO\GoL#.=eS+*n(:h[ko]W2;CX3`t_[78g^WY#iD@9[0g%1U(rU;J]jc;=Q)Q;G:fD
%@E(1%b/Y5PfTlM*kfGT'HtFcdIKUVbIOr;X%^VXnMP<^p'Ed>M$.Cd-1m$"nlj-'s;1o*2O\s&P0\qJ7:UEqY/:l)IZUYL(%<3sh
%U$/R8':T&A3<cJAkY96BSec"^/TBg%;:ok?3%^,_$G)T9iStQCWQP!K>"fB2f73YKdKkJOi1n+BE]4\O[hu\DE+0sjbQYhnA`sDT
%3!meH[6tQ0pI(IqaK'oE)]D+.'X7c-i9q*`R_]?23_COHD(gs1?btD#U;8H$'K(D>Agf`=+u$/c%h8YrP>9O.!mFVqBh/>#'`'/@
%FGqohs14C\5+4eMSO.[XU.rIaM5j/#![I0;fg-#b,"EP'%(Rco=&iIpFGg2<'gkIn,ogG9$ke;3&4`cp3dW;:$AE10g)Q7q:aRm*
%!.u=M`C-)EZA+#gLmq'\6hUsr^m!NX]rhp70P_6g@>kH"g-E=U(fH)S/H_oPBH"A?IIqn6JT^T@fFp/.lNC5iA4'0-&)i;:Lf;2N
%<#+iM&=l`B$:2,')R?>NW"cO@(ks2"TOtc,JMPNG.dVs5%4]8e9^n_!5Vg0X6B&lo&tip&l%%gC1^mD=`ir;#k\7Cq`$?!e=4*'/
%9YkBH*s[_'EYu!Qn/?uui[F;H9\OFSHXJ0T"i4;7"5srm4G'jObiLZ[g2E[ZW#B%n).(`b[NAEU9Flf.<Y6AVeU]>PbSW=^/iWq8
%q1Qc:J?D/5BtDY"JLoGMA3bsf1bPCh&Vf/h&#lEl#meWYd#anOe)4od^dS>c^^MIs3G61t8G<igNR5WORN`/FV#a#`Y(0BW0[HFX
%%7-X3J<"%hMad\[K<Zk9kg4?P3r1XcJfM!+Jm`&T"9CPY+I2j2JlH"c'^Z:HAiKqC;D8.hCTBuf6'/\q'keEk&-RYb"pLA[aW>tS
%8<G'g!"B"u,RFZl6P,ne"Ht8Q,jJoE/b8nZ8Mjui.\VQI>f-b3+9SkS9Wf^=*Y;kUo>3Hm1L%"!&g;!_#Z=YVe<k"1`.7#?!)n[`
%$O)m=n."pgPApo)36a5*7,kF]C(*mif`f#^Jh60-+^G1lglt'[ruq!P/<9@Z6jqHE%aunc('r>'7?U<@cO^]rcA4bR8/66i!=:H\
%*/bb&ZU%:48T>;V.#QgeKX=54!2(%D@Yk,Z>XPLl"O9`J5re8%TbDU@[A48kTI!K+J=i9eTdJuuKdI_^'F(R$8e>H6Z;?-h;)!\*
%.*Nm60eeZ`45pmKUDq4P0o.U596c!L>")I@Q>?gR9TYdC>Yle5-:UbG+uDcbjrd]j6KT>_\j4k>:c-)q.!RFq$lN_&DA2&2#cLJ)
%%:D95'S8-I6WpdL-C%"n)@?1D0PaW3d4q;(..89'Y18,[$d^WT??B9L6LC,=MZqlKN,j<%2%:4!'L9H^m)2/++;KU?:6k$.j%YHK
%G7+P.<8#3'%q>`5rD7I[F[0aQ;%uEM(h[O1__>6\6CS$=dQ'<>Ydp8+>6WS'9GCEq5u^!u[42UlYnUJUN;+fee0qfBU)DU#Y`q27
%#r'lV0rB`B&qiq5\4.#E)*EK]!S4#l,9p3Uc&`':OGk^m:LMSV\r_b-4:Bi>Hkt`bUtA"f6siL,0T$(Q3l!*`1B8b3?-&rZWT]Qs
%5Tjg9QUIbZ(7Z9E`3M\+-(b?5lrI)RULtaBZ)C'(;(VggVI:d5k[V[6_'mL2cjmn-J5[;I,0:`=O>Nt/T\4nc<+#cc^.s8&_uUG5
%!DYoL=`f@<E$/GZH&NYnE)QT<((P1;Joj\#ib6pQB8-tti(P=o6e+VeL']V%'FWA>m$7tp/r7(BqCKeu1^&o5asV^=bg$L49cG)u
%a?k%X*oA*=8RWniR8QbVb<i9A3c]a[!34l=1An"^E<ZT5'cdHF(!Q.]/;'(TBdaNZUZbjEKis&OW[CQ.T]f+fH5I1n*YFT491DRc
%8WLrdl8(mK=:)8j#]1:o(G)(a'TEhMn1iQ*j:UcB`(-KlL90Wj94:`k5Xe?t/BR/X\i:BsN5.u\+?>#s?kuA06LOr98o]O2L$M^M
%`=)f::+0(<7<K;<7]ceKWB;_N!bD/*?uglS',V?qLY@?3DHN]"-9=/F]!\d9"#>ePB9Gsr<YKHq!r0k\M5NT?*0]M#OT^XFkXWU"
%^0D\l)FKu#JHul!V?VI5DA!4L+kUO'<?R4?KF9BG/;4B6"&mF10LLTE(.SauL2o-R$g8"A!#c/;W6s`]9V@2=(fjNL"[b?W\C(&'
%9kR]XMB(0c!$?cdN21tdUVI9%@*iC^bY1SW:_(B1=/3s?>/:7B$q.qM?B\1F>cQ:6JQ5.F_+[j?9@_=.0k=:;KXhULDYk7^<"%._
%"Cl;keB(!*<.][##3->X;]7lc5ST+CF=o]jL.7>F0_#LmNFga6K7k+Ehunr?7T;>5a2(a>no<TGW='ZhZ%cj.i#&CD9/$H"0#Bm%
%S9C>IlP&IgF^.!/3Xr0K!n4,DU!V8UNl&+F6<*`V@7*@.$USMdKe.Su!Wjj96E-A(e,YV=[qNV]"[Aq4(ktn\9<"OmfbF`c91^'r
%]@_X&8IECdHX%?`'J/'Z->QcJKJfYV7kgj85'K7WFGOFAVReGhr>^!?$RZX!gL.8>"I#U(RhC[G!^%<CNXI53"2piNE]PbX=Z-\:
%!uBlj;j!T#3(TAB"iI8Gb<$?<JBim7XKc)Lfo-'O,XMo,$>.Cd0VFR4$-5bi0/h-24U4'j(a_STJ>cju!&<K5JZR$DMR8Dn3O7PF
%Y,POP["(o58r&TKApt"Qhd]:ZL_?"Wn8SgdKXUYs>ZFWg#_PN7\(-L*5t4L"MUWU[F=pWk$p-Ho]bS$cL"nALBe'Z`43bi;)k%5b
%Yr7V<USV#YB>Hlg^_=nC(.p36gpi#Hd)$`eOCW;Zl,F^d/qZGb$76=q!W</[FQc3#9t$UnZ4hsc4,-Zf(:[]6N#M>G@0'Wa\e'P*
%#(eh$2(a@+RMS_dJHf=5*&+7hLlj4]BE/5C0>UWUJde'I:g>B8"4hVU0%RZm=VOi>e:AaD?O0.OQsG'V'dHK!Q_r.cYTFVGD6e,[
%@+#3#+jg=VWfB,RglrJ,9$Lr'';K(J$3_(k]qX"[Ttu]HRM&.JF/k:+Wi0X["N^^+Ad\T.Dp0e9"idPm@g9&"Bu5S'FpSL,&8'l2
%fYF!`4>-oOZ<E6A3=pLko$,:.iPGU@>]T0<VR`RA(Mtb[^p/N;'s]HPeTX\e_+!;iJnfM)WHO\:_[/4p#E89u$r!Y)@6,$^0UZ<A
%.Lf,GNf22Eh1k"EK43-ekR\2I4T[,H$u>9gk+JN_)g_hKUl^e_^7_k^+!rW5WAY0#^EKWF3!<Xo-)XJX^s$-C!2Y9DR\WRmZ??a4
%%9E[/1)9%tE7"d).G6Y_82H19?j2f8"@NoDPV<8K;F=R<!_^HO(mjQR9OJ!?3Ddd%TVY2X_HAUEEJ(711e$&^G(^143^O!?)lTI:
%,*9/CEk-ni'#lMY)U5Y<HAk$&>7aK0hEuID&g=&4P-kLueQC*q%;*LO9XDhgW$j??h*R6h)iiHUiNB;%bcnU6;4_l-"tm6LG*\/H
%G1,0pU8VO`mkRl,'e&(Y`"ef>.@1,jiC$(uiM(1R,[p@O_hJpZ$^io3A)N#/%u@n=dPWBT5d4r`$T8Q>5TG^1W(@"J-p3':7`,SF
%j>rI,8V+^3*A2$e:;nMT9Z\_D1$+90<CnnF_'5mk\&/AfAs\"_2Af=OE(LkZJjilq1s%_3!>iV'R8eX2ocqamc&.)@Oq/d6_nJ-C
%,n;:S/?3+VgU8ds<[A1MYXOHsQH^VHc(nm#CYY$R"X>7NEWrV9,>:U!VZ6i%=AWud_$hh6n2SLhjX`FO(dM1PPZD<V'j#]U_b$j[
%7B/O`e[eN/No;N3iM)Ja',sTIetBI_W?V70PCn-?Ask%sFrrEm$5P'^c_YVXC"_?7De7p'(^9=q&@?=gY9'BQ`V^;gS<.cK/'CVh
%8I1J?e$1m*KU@@d>;L*EU*+IZE>]:f[&,2:Kf"`g/_beZ=@C%^-cD\5Q!J&PYS<k$L<X[10RN*iXrBA/SMGo>]G',.]tsrU:>kE"
%/e*o"ogV"\'"C3%3GVk8,/SJ;;qP?mRK]er@!Pq@Z3SNaR*JSF=FZT-eO)9LW<N@5/!LCp9i]9O2!<:B.U3baA.9KQ@B#FR1=<K2
%&>E(IZtq\!>#^uGnUVKg2@qWnb?g:j\;'-r9kMI]]ko__\\i+a(sKH04#/X92?=Z\e+OE+)fbr[m?qZKJMa<fDQbN,WY790BJ_44
%b)=C/E!1B`aPBSqmX:`f!>HImM!;"]aC#P7O_ruim7sK5LHr&93boSD6CSH=VPei5(p@@i5W^8k%$EF?Q6kA&ai1o[WRMV;D8E1c
%"5N$PDe\<'[;`QOboeMk?1OCl$+o2,kt!4&Kah=^jB*@oS4groOUuR'<\C=j9FRHn$C1quV1fX-h5Sf#4>^p.8hPuM\DL"gGt`0,
%$Xs^kU2=QLeOfLT)[]NJ$ptmaH5`k!K%[qM*H-io/\-jsRs"s@i%?]5?#$m$#Esc4-^-#W\<J/8&C*j]m#=THeUe2XN/n?@<\eg!
%J"ut,.uYgOrZ"W^eiqKO,=k*9d'L5,71_d&P"$r0(2a0$,m__[6/?:e7#)Yp,(0sP#ftC<0ataV,quW42T]',TF?n/$4TM]Q8MKh
%)EPHOKVF/e#T'j4$<N'8NQa)qf*Ho2LUjero#A1*beubBcsA;=W+-%SOM`ErqWt%&_d838U_sBGMmf"'$&W)(>8meG=@>[TP<6Nu
%mD]j+o-c"M'kg0O3VB)-%cF+t"\Hh':h3+-E3g'(3fJbBlT.Uq8d0Yn93XA*]1ufP_Ob)O[&>IM$e:gjb]#>C.V.dCW)dp0#/n%H
%W+HjVYmNf:i%-]];CirhAPVWOX1#)87A.]<J]]?[ZQ%Iu0c$Hj"=rUMY'ssC0Z[]:_&TKV#a0PG9Ji,=^76r\aTYoo!fnH3)Ruf,
%9L'`10![RG:]\)1fVrq+G&X?$<j31U2;/up=+k.>@,\7M74+8/%05F.aD=]"$)Gb0H`T'Ir<'RU$Fc!d!QGjX\IAV42K@[aCMIPE
%$&2jrmY3Gn298-nk8KOgTWl:H)9gb8V.,g.;5o<0N;pZ!ZY@s#gTkk7T`.<%$<5YH7'+^JC/TX[TFF>:E_.p\i2MlDV;f6KSnH:"
%RHJ29&PhAjnr4Ys/(U/1bV@+jmb)lgHma,^gToDA64"n_).CWhXX/k`PFjY?q1N*QA\m1T5a`.NS_$$mpT)&m*'nPrqg"G@p7AJ*
%T2&#S%/p!#Y;o1&c@*X8oq&l-C7R9kouA93@[UfJQF6Atnds3q"Cu'2;[p@Z.[j!Trjm\g%`t1S2N/#&dh>iA+j9l#^3dTlR"M-R
%#@LgBM\J0nOlm-#61-BY3-SiJGk:<O:eA?GB"umc'7X=+Ie%N&.<^./qi%(HYb/27c3ul1=(V5@FLj:?7J1@lS[!A+&4nMJVAq`N
%5R>`NKm$6;[uP\_<//l-GRMjdOS-Gd]?B)dL0*o-:QkP&?h+=u.VIiddO!E/'L!OQGP?[n8*nR>00XbQ-R`d0U1b`pfmk#jp"\CO
%qKtUK#YKurKOXLV%574+$pSHPQk/eoS0Q`6#oJ=Flkl\"E4N:E:QcpYr?Q3@kY/+rT_I.0W'g"BUn;kd1Nq$0X6d(&1rCPL]S%f`
%*>uS&&29#:ml$-#DMTuRUsd[0V<kD)jZ&;^<<EBF03bXNa#Mqfr3HWk8+eP7"1oH'Sjb99;KA\mP*qis)<!XH,o>%=/1-YjZT3WM
%0)/2HkmBlb*'A"99`"C:"8'Qol\V0N_;N5?p\\\egO%'W;?]'23(j@ajY%]BmE\Ng!T-0V/WUKd>jor<eg">=O.*X*-#irVrs!;%
%?ejtV>2>#p=J]o8g>ot1"F3o'OuHMYoomXUf7JBQHSX"1A*iMe+cCW^3q>BH5s(EE14M7a;C^HAS/htu:R:0,PGjkn6[WT$jJOV!
%k&DfH"G.H/hSnbtX;&VBBE\sRRih)p#P]`X:DSE2=9i_PCkmZ,T?P:XCbT%P;Mo_-"FbWVU;qhA5-k^>@9&*m+,%#p>EFXqlBVXZ
%7t00Tq(pUV\fH.+Y4m-M^G&-l9OJ0c3uiJVNtD`U11P]$/1R/S%#JaaCWlD2cTj)EHlqb[3u"F`9"G&kg90clL_[?5[nmOq,Z'q:
%T/SO`S^/7<8jTi^ocDJ;s-KqXn2&g:;5[oqqor.;ZZU;5.a<O6;a-``8WQ2UM+\'be$D>EB_@^U5iPr<=[`C"cQI.2q^EMU_jNG'
%mY\X5R`>jCqlEuI@nC9X*!'Jr?`Y.*XW1T47B5s_hmYkQL,bWX-uX(uE$"ge=l[C*QGUZ8a=gJ2IK&(q4_5:b&`J+*p(:d"p3cIk
%N$bX-`=oE$Jq=P(0Bd#S*j<+X9*sak[[\8ShF`hSadf5`D70V<gDd3cGFe#T4hRDFAJ(R=j[q5CB4$!dWj<*1b[Dhg,4W=$/61"G
%D1.?XUCj?/H>P#F<Q>R@oo!r=$dQtD:c?4/@f5e5Fp5r<6)':jefjQ<6>Yc]"3oXC#q;P!"G1Q_6c!UtQmYjtV-p2'5-8IR=H4p(
%c])(+(Eg>jJY7HIXGJL5g'&p/MYQcESfjUl@1s;'=V>.A@%+;X%Gor_fh_D(Pus,7<3jV(Qm2In\-ed^?.W2==B[=RNqk4lLWQ$d
%^_XK:!N]fdY-Y-!Ht&j'VErh$bZ>-m1*@r@nWYbUg_kFtZ(1MWMURG4#ugR+?_:?`/5lAP*#=8T7E91s3qRf]UZYN9aj2E!S#)`9
%G/0@;q9<NT?-ft9-4c3e*N2qdX-Ik6_LO^4?UC(>DR#?JbAJr21)DOdKFGXt3tC6Q7M#:XY*6m`6JC5@o&e;%Ir-H0i`KRuMit55
%T(]^m45<MO?krp^=:\tEc`d%7(@0JD2X+T(KX+9*8[':!O=*bNSd[IaB+V$hBfLm".N+&DK,+@\Y)Vu&%e]H6f5T"&EatdfgpNtT
%_s4.7*\\4M&(g>OB;#+-83.kKHmjQGbaGTmYbLRo,dM&`&#spsgI9(Y+^FRS%f"mDZo=k<^al>EX5c(o6:Hhq#I'1>Q3-NH6HuT!
%M39,_!;FBDj+g:("&n.RG/fkUb_h9K.+#aHnK43`"dj[pP4HTt]RUGfYpJ,$SC'*&H-N$5)LuILP9##:ZZsf"O]rk'ga4NX0Rc7X
%D@m5WcqYuX?#4fQB[=;YatC^0rE(0\dN>\(cT?=r4tmh/<CO($JKI**_m9`q]!]_(=)*3`*;E]kKA\'!'nXF"oXp8hG0_Z[%9<NU
%PNb$i#9(mhZ:DeIVhao,"/*lK`n&:ic&E%l/_*ZpSM<1Gq+_)m=R7L\.3j"U,A63u$tZ#:a8;5I_E7TVb"\uJ2Su$,FojZ+1c;i#
%oc7imA'5^A?0J;8K5c@(A\5[d(*L!ZBk#T_1@N@%3TeFoZFgGEW%=ci8([mTI&dL^_!bkp#3m<iG^V6nVWDRT.^Q:oJn>bOotuFN
%LD=9PId,4c?=]b*J9RC_?-]1G&5rX73-XOsBrf'CrI@?6Hl$oVlaTOg.,lUC/2Gta`oN3<B@[>*mEZ?^\\.NF6#bF_$m-.6+XkV@
%I$P/aSb:ppAk51)Ps;e*Y?VMT!R;'sZ,'N#=@(h\9---GL\dr='Q%/M,AVmBg;RKr?kNg_oJacdVm,X$>nXH\,Xo:(9*3lc$QN&`
%%fb<[0=Ou=2p`+M(hC+j-&pWA_kHg2>dt*7'-43UJ^Pf,i^4>"]tYdipSD2),g67#C.g]7,VmG$eBUb0psK%hE9Iho,n[0i"Epa)
%@g7p,&/9A=Hhf+@^><MmLT'WWDZVXDM-<+fWqGYQ-'NW1="]kte#[KM!eL$Gcl=L-J[hj`QY2#DM/=88oOX^Urg'#7g/2T_W[FQ)
%-o8Klo/ohJ*)rG5*PALT.jEW9l>-RTnH4&`MnoI)X46\R3oCja7(`eueK-;6=[\+m(H."md;9J]7@YrX]i;XFAQ!'<\$S4pLV:CS
%@sGh1`k9t.F`D!V\\BfuKjDt9I-Xo?R/GcL2='c5Odl/)L?)34m5(J9#Zb6]*K0p'+eKC`N_>02Cmk+LJbJ2cZ=^hhHHOQOT8X7X
%OIaX:"YSO4R6[?6D[!i!WiNuS]eW.GrX'rl).YFqrf/0q4\MA]bPKJMer;r*<O-ams(oNtd'M<mi"-,e<WPYo@.h!V:DF`931h>n
%$_i;4r$7l)DSQMS`E2f9(1DeD55VU33&&)n&f=JA6fM`=B6ETS'^9R9`c,X[DS=-=7raQF<2P^l.(EY&p>LY'PJje7\F)orq,FH*
%P"q,;Q&F<,2]+RaP/m0j>q"!$Df5_8L0E]6$Vl=j>=P59ie_\`KL@CV:n4<NV!>1e>fi,faKh0W8!UFO^6YD2X:)SdXg.7NWL"Sc
%CVO5],uAulb_R+-Fj':5E8R-Sl_fE3-f4riq+RH@/EI;6D^&e<p.:%4X?@.-qu/V34&=kM2m/dG6>WrH)^lbJIEs2Q2-]/eo55jq
%iBkPPk_@J:T9<&/7I9p3*'6O6(Wcc0PI1!3TKIXg()EFhW9WT7lS=(HIW+r&lUgY-R.RLk*)6D%c6tcAYAq8Y=)G.=3!D[/cdj>?
%!4-i)g:(;X"WZ"V=@<<$c07@dJL*p#3<4?4>I[G"Z#d";)7"YNepJOB.DmQ%km8',Ib03u^:)uAH(1E9,JsNrf#-'eV?Mft\4BDc
%%)]%kb<a:g%snY)9I]IgT0L$3Zl@OBep`pVFU$`VbB3Ks'EF*<S7%ZLgC5'`"(I*9<BIGNa`@qZLrtrQ\FgqQ0kSOU\3YauYl!?X
%0k[[S[n8Z`ItaL"b?7'%BU$!@%RVHDUhlq;?-T<URNIqc50r9b<.[#,g*YK"Pb*"D`9"Y86`1>=*Cm%54Q(*G9ZI.a8\VD`AG-Of
%mIqE-)-_^0muGpZ^qVkZUQ7(0158c0aI!iAXHmM^Wk-(_?tG7,84*G&%,Tmd)u'Cs)8m'gr=;"nJ(<t'bm<[.Xg&Uu%I;-:1O0%O
%f=tdNru0_1$U%Bo`-amsQsgQ0_V5n%"TR>777ZXLFX>/@SCOKe<2UKG1>_>^]arU!hhqT_N2SnR+1O[8rh+d"U#RpC64<9[;&%?t
%F/^uMaa'`H!bR)q`";tjUgWlYNs79/8^h-"i*U-Yjd`gu[.a^BYX;W:m&DA)2P97Rh5CpN(/0VSa(Ta9,VaTS4?"MZf\Mp3i"mJ1
%I8Subm-<fM45pLZ-ksqLq@Gq<Ok:A;[VQTuZCKNT^&Yr5WPWX<=N`+==+a9=57&B2qHARtiC4c[a,<;p8(=_6N)fu1oa&h\3cD"s
%5jNsK8kXkiDPqYGD:;+g2ZcFLnKG6!,,fSHJ.XtR=uOV[#$]9!^BDYJFiD+?Za<#-m;]J*8CPH#4:/fp&_(=0"?u9ji$]1jT4,YJ
%b6#J4U5o"7X<-GaB`:.FbRF2/j:82-)-Sg,!$rt>7GIt8gf[JBU3&_l'$]A=M66##2!TqC6Y8!g&+)<S.9B)r6^p+lcEZ'F)!V7n
%+8FN&R_uKn>E1#1*P#Bp,0Oj_)Ta@OpJ&pIIpfpQ2"85OD>q\;=kE7IWdUYl*S:7kRg`$S4dY_eLmR6?f;V(X-=6e\9WFq6Mhdrc
%#!ZqE?2*)L-R<(u]5t(18KKB(4/\Y!%iDj[gb.A3q!hIn\2F?]Z<DV`q6ZQ'h29o0Qk*_Ug6_=-;K[O7hBV2eI$T=d,e%-_c>gW[
%S#J?M]X(1XneYY?5"i#Z#Y:T/I)a:)Tkl(X"U_[t!R[XZ=<J,R7jdI+]TPtSg$EJ7\dE"JK\q[UKOTk@C:_4CGB9e]4GPQnFH4`G
%CNQ2\jUV\.5Nt.C]X1:u+\[<KTNfDt";F`0DioH;CakuR&Ve41bG'[ZnNN]>T[X@\H`q/g>;ZD5URaf'#Wtu6()O@q[Woai\]t-.
%?bC=C,/MfcU&b[U;Sf]O8^<.-qi3Uq6GlUk@9gPC;r)9ZfWDTH3r4G(%H)T3=B"6\U/V[,Lta!Wb8)'915%ohlD_V6\;RR[@CTS'
%,ZQ8JOt7bp@O3.g"#n6*r%i&*A$%6&T+]p0Y\Mri:SGMoOeS92.G[Y.CVI)Y/He:)']Aj+:gN/l>c^<=.EJS"JWRS$L7h16p3uHf
%Mhu+4>qd!`6;WgR+_?@M6q,H[qX%a4MD=5>*CZTQ"/aO6BWNW"+]]>+bh=Q.fXPD._<BYiF&/)bJ1m-(.5qq85:b295+ccNH#j,(
%<N1tJG5?2a&=(PAL.,'5QL<D8i%d2e'9b&6MMU/L)&.jZkm1;[BP/09U_QtG;OW1WC$n<L&WIQ9GG4O,mObS1cS4=F25?Gj00!'X
%jGF6'=_A]-hesr&odf.GJTh*u4WiX.NL*4.EH__nVSq7egfKM\kh>S&<sa5pFO">P%3@-[_hhRqhDKJC$@)YuXOZV&*Pr\.k:02!
%hm(/siLtlXeYbksU'c5)p,o[!]&ue_>R(-'q0c6G"6t2%Pt.C9!WXAPiiX<)dL\\1Aa<;+Ba8i;@NXL,;l`kY<[Otn=Mu`C:0nH@
%'OM^ccKeSN7n&Qd,!*bkp]\*"aFD1N#[5=/6R,9a6^D66NYMSo^cBD=ptX-0Qd@&H=+_B9&2^H?I#1qdP='G?c-/L*_J[9f],XBf
%0NbM$JoB\UML2^H[c.d$QMBG0q]rG*XYAe7(GFuC6_gWb)CCh;0JPkJqig+&_5N2oQus&bSWng5'_NV<oMN/Ybc2T3"GNQ%VYCCQ
%Gt88fp8:l;QXl;8Z&YOe'S+Fq4,Uh/r>3Fpe#KG%UF7]=(FR'pPoNdQ?TdlU/o)Th!Zj%*f6+j0^:aT/0mjsd]@0/#nts,f0H"]?
%4h8J&:Y2&VjNpE-k2GP!>=+G#W0Y7-1Co*b.;u_GXkk88fbTFSaEEg=#$$><"G`^G-Mi]MKqe'f'aEXYKcA)<-/@Z19'IX02cDa]
%fJ)N\gIfEsQ#+b2"Z$hgp_<WoV*a]sZB(If:bMdP-9R7bE::DRW:cD.a>)8ikT-5+b/8;PKcmIEno0DCop]-81`G-n3c^2#*1-iO
%LB94'M@T0#&%J2mfcV67pt]qD%SAVVZsL_)f$A(lK6G'DrA+/c@S]lQS<3kDk%b+l613KapDJiJ+=Z]Sg2O53]t&IN'3#4^^e4p]
%H$\1;jp=DjdYr#8H+uG*%k5L4`_*%0hF&k1a3@+Mm6;ogiRX0bKkE*@&@$I:_O%o!3Q,aW<'R&r9]$A)gT-jf'A%t11pO;<n\Yt*
%B;(>N8bqsVY-J:d5m-aFaU2"+NL4WhJg7&.dZMg#;P2>>UU$'gg-h,C'[,gS*1+tPcLnu/OoRN84Y/<c?fhiE.jFZVf#-0G@j"+O
%HkTaP\7lk2_Df:f?q1Pg_RMde;F&btVYt]s4XCB1PljoV[r2#jh>RuU6hsI8ReLsB17#MkjE<#IEgKE\YX@n$$&&YVjQ2fs3pBrd
%*Y+K;/6&l+5S^E_jQ@%&iDACaZ?.'9K,H-@"t@G;s'0q&rUTdq.jYPM7_sBEW+$0+KhO)4*FBikau`K'Qu0K=b8nFDWKd$U'I:2R
%B>Kk(-$-[:nYIY;,fiD#f%lo<Je%@ZZstR3fN4PC!KAkT.St1.e@%r!]*g#KE_DDaHV'*Si#Ma#8:`hP%bQ#j[sIu['<#:L4MI[7
%!E$mgklipY%FI:],OaSK`fj1hY_Ys=qCTIgOuP#@XVS.-\cuoWTBF0(Te%LKCC)j3/3KQZ><!U[<[Q$SX84*<U-PNi%K?KtisI?^
%Sp*F>JPX*Add.:Z*@RlrYF[d0nql:cI:R#`8\:?I=3E!C#`e:M9&-^#J]NKD4EeHcS#<JOkElu204]ASE:LYk]]/2@2VpJlh&6PT
%1&;Ck^bY^K^\ml&5R$=q$Un!p.X%9`l+i?IDR]Md0:q`q?S72B"LNTXL^<SfCUkcppFZZBXsI"'PTAeMNB7-NB85,]d/+;rN23q6
%AJk&4T.,T$%6m#&h68d\kP%lHW\PFNX10H!EYTHm=379q&iAKsE\iI<qfNUAjWD'F8!Yl$b/Oprni7t`Ir"cq^*h+P9Y$YZDX6rA
%Wk`ET%i:`#ntebTR\WtlUb92%SiVj!isCHhQSmcV^E%M6[jZ`+jZ4GV)\Hq0esT2)hpu.=FM`_B>K^NZ!!:L?<Ft`Qb5tkk.]6Y6
%Xp`ac_c_3G]N;@B_60P8o(#&Y:b80%Z2C$hVSAK95CC*C^J<n"h^+nP1;@%,kjI"_>d/`,f@&_S_e\k;]73[u3NcPdmP9C0qP7gN
%kigTpBU'J1<1o&'!WbSoFk/H+@DE!A80JIURN?C?o@.`@J)i]giE.?1V4-?g,JbqJcF>XofYn"`s#DoN3YHh75]<>fiYut&IA[AP
%`#Id08$f4<5ph$28aPqaiuLtQHY'V:2fHCmm4:+RE04+D6MZhFhp2fnD[r65lL-oX[9s76p5N,_N67q5Ti),=W<O%E)ArJYbCZN[
%>Rm^pFk!kJ.!1'Z5&9:QH*\+$@DEeNDBAG[HJ,Sj2eEFEh%1aMQ1[<u;EV@@7*""2bN@-qPr'436;9ZqX*.dC[^q\ZYO;3i&@UjB
%H_qiGn*F<3)r?t*G`kg0N@K*F=)4h/cG,tn<BW]G_&8+:)MoWXM9#3=pX]qN57U7c]YFAhC^kg9?^+=Wq]?<3qsT%&kOZD@'t.2R
%+bR^F^G!!Kjanic:>Iik=^<D:eGHo7/]($a9(=Lan6Jm3>QZ>mYk/e@d$sk:OuM%Fdc$lPo^us_O`.ZC5)5F+*il:Nk/PBYnI0%m
%dX!+&DmAPtZE*).TXhVlpn.DCZO.,=#SNi+c>]nK2,h:$b80dU9M]JBDrG:\n6g_Fi^qZq#g[h.L'sG9A,*0<MTJ&X\Oh5CG5m_J
%JK.p/qNbC-A&V/^PZ`$/8QSBNO,VECOoq_@/g;lp?VKjcG$f$6hG&p]'ak<*ZF]G5@[X,DD^JLI1ZnTeJ($ap;U=6j99g/#^",rW
%ma&#Rki[;AT13Im?"'EIk@fu1Fn\"A:4>FX5=#dSF=0BCDYiDYD.*SZVhAQEBH-#PkGKg5/#D0D!@;91rM/n^ccB5dqG_hE#O134
%IL2Sb4C<=s7U.0-XBiS+4Kkn<#ID$uSe2.D9MQ[d,=FUU,8<fNFP#sdIn*A6(2NuV1,n-@iCC&4XV7L-7N"SK((djb"rQ0U8D?To
%+&OgS?!@<=0BA>Hn"u=Dp'cYlef=?^_+*A<aV!PeVQ1PO,TEkg#g]>+(g.4Rd\Zt.!=3hh\]<ljX%\R(6$)b-qku;eb%JK!flp>a
%.r#(aV=gJjcR`7<-&?Dt_QZYCV1]`*@AeY6X$5>gfYVrQ,t02LjG=<ZUc[&g#TaHsgml*'8bVqQOn5^tN4H?Sk&;!.i3)VUfECqk
%[#Dsij>Jg,9#o5]I`:*iNQmsEZ`W!;XV`t2](;@.3*8``nDbA0A>Y)R&!99&NX-H#7Z7BNTg-*_C'W>HYpZ"<[%,lP+DG+u:Z_#h
%FXso;>:V^3q4O`^>VKmFh+AgQaUcUk[n(%K;2gSKk#n`G!n<*1+3C-co!D[HPt;BOa;K&FrhAa4`S;c0m91cGofm/E')]2)X?gQB
%S.`onWVTIb>1#<l](LsA0"NlM(iN79XN"RjOAQ'$*(cB4[ck+q,h*OiZe9=G@9EN-4r^8]`6Z'XIt..:hAL2gID(^6>kcGV^[tO?
%8m9i8rm%V1ZZ,jh.1L'(QKG[=Z0ka&:e3b<DkA_CjbAX\\SQOLI@F6:^LP=P[A;"D%QI1#hmJBh:aM12M23kj^`LNXq`g&9beW>$
%j/q(oo75To.W7I@fPO?,[htT;"e$%(&.4uq]W7'7S9j:,C,G4-X97;NX16IL,-P<I#Da5Zq*)K`^l1-g]g#fD7rOq'lQ5LK-GO.'
%DDe>R?Pj\S:`]!M?dsW]0aU&pnuD5OSI/,AVrV+:bS/L/qAf2iC,7uP:4OVUB_CY`8mS'#Vis'B13qZ#FnE>&KfHBHpaJ4J^Y:IX
%_3Ogg=FRg\>i^G6/R)MC,6)-OeNs@`ZhstMLDJBd%o"=MlC\=uc^:8h(R-J8Mc6-<6\#W[T5CCMCg%oq&iIXm-rVII!#e8Ap66H`
%c`Yl$(-h9JIMIigrn,EQr_tmQj9ZkkZ^fBb!$NgF"Uh,S^45e^P&Gi]`qVY92_[,'m2]A#M<$r4^5Gm-]J&[iU:a+IPI[UVrqJ\N
%H<?ts`dW]b";ko;<Lqd)T8nn@]InG15<]T"@t&/m'a$7XFrQH=$r]68SF;h.'l*('+p0;O%gY5e?KQ^WFIe^';ACLba`ignEf+YP
%r)1Z-XU4lMQ')jZ!='oA&%/ue*=DDleeQR1UY9[X/)g<&U06$BIPos<M9+g15?Je#H`(;=r*tp1ArYnk5i-1!dhJU#rL'(\UR/GE
%4;p2iW]G*KD,Tr4SCLbo6[Lj24[U`jR%1thV>.&??jRr^d!:_H")85AWS:;]?(C=`=Y&9\!0s3%fMss7bc<JRRrGN[^=Rs$1fP:e
%GSVa.7f[$>p'T0e^3/^pZRL/86%pa"kQgd7=H#p;QPQ1s[#^QW&H:CFb=PUZKoW"5cRXI+[___YZ?QFrc91ds%uK_W(MGoF:6H^(
%lW$*g08Y-j[riknDc!O+VWt&5]>`N[o#sed$B2[#q-%IOVM6X31p-8'fD65q7+[/+&C'tk&%u!@1&Q`B!i@<1D?6K>[mWP2+4j2_
%D+hoGRF(R(E(AWH7[([&1Nc=!mDPjUFL)*lpZnsCNM=+$m/(tn3e9]pkNDN>\$-.#$OhV3;5Am9b3RHTS,1k?(h&t+?<7\FMM3CD
%<]p3MX*G,ma\.%2%nn""77T^=k.kTZrl)8>>.e:&ZP<7Alj0qQ2nYP)jZ:,a'jIbrA.fn5L=hU^mPOk,A8,%L,nG!V&,=IuBkJ&X
%LT'&cZL+FY]0h]VR>f#p7ijP\oapE=;&O(.+)im/5aL`F;"nl++LL*?j3pXuT-!\&PZfE&!ZA*#a7k$qMqY"<Y01R!;[uIK$s7Zo
%@K$/XF3;Q"5E"BE>]1@,*p3.tJOdl9MbFf'Z)/VrJ2JO(-NOeOrHIEUB1n!Jp("R\eoSd#g!lA&oZOKt'5hi2Eni^g<NtENaP#<S
%T@\@[3W#FSqq'0.1<$YR<Tes*OVN]1[kR=69#hC86te1%\J,tTgK"k$(KZ+`+/hc-OuVi$F/RapfX1U_`a,\PDC3GfI'R)mXlCl`
%cRSBtI#BVo?R=Y\IYPZ#b[bYh25!"5hVXB1)J%;V?uE$R(I1I_''L0Upi-Yj1";)k2M8Bmn\SJ</K:H)4(o5Q`fY$8V2m-2clC"h
%JpobnArMno:k9>$NhjVQhi^LEegL^C52rq@6+ASEaXh@T=0l[:D5F+<atob*W"g2ocHcLj[-b3]Rel,Y)7s_QGDIe9pkNfLe>*CZ
%?2B5Nf,]-[NuT7m`:F`KotrS+DcPlY$Vk$OU)iNiX%Y6)!kUjdSnA$DPsaZn_F8hR_Z"-1e>j.>>?EC'`U6Z]gT9%Uk]="7Ki!.=
%.t%Kdrik0J647@H*VZVtUZtO83eg=YR7psW(:]n[g76[+0"E*6OkkAL/L(6dY<46.D8mjWh.)[3T42t)FK'B$[Z$]hq?n08FrlCl
%],Vjq7J],`U.I)_hHmjclVa%g?M]&j\`Cg[./Ju91Dh,glqN.d^0)Wo?0#F,@>+:>fN"Y'h`oR2aOo\`o+@M_=Wj68ZDWMY(+V=2
%WV$qO[A2RiZo1Y6KZq&6#DY%=3>BG<Rl88*(.<,&\DN:5Ogo@-7A4>2PJ;:"5?R6+@p/nX33:5N<hi8]iF@7[`(u-.Fe30:n[]dZ
%;8:ODmc^pcpm1oJpJL(E9'Mp'6.ji]e+K*B>f0Ma!P)6T]fnd<PN!?m`snG7)[c:#ekd2\Q/=1(#iNaKPfQ3oZIc<RR4L8*.nrfM
%ate,Tb6kQ,MWLr4OX+!N[(oiTQ.["$T\e`hop2YdIU;bqn9nAJ3A;$\+%uM0ouTZVj-!n4`uFKNFTpoqrHaI`4/F<jY2fG%en6Y*
%@=5fP[`\D'm2rM52)$;mS=Gbj3*$O(Z<L.Q>-4kY.8gm0?9dT(8UTei:B.7K@iOSM_@d"T2'tD2^HorS/(n_.i\"#J4t[8PWO9\k
%=6eTm-Z>=5CV9OQQO(\CPR67X%Hi"OW]/h+g_-ZC[kbblBGcOdH-cA/e&F6DQ^]V&oD@`Wn\TTDH7SA3);D:I'C8L3^n4ZA]d.n]
%Ip0VnN_I(ai\/3'UPq/g]F@PB$dUa5=eNtpp1U(O`E1cF%VV,MdA"*LIX5UhXuGA>ItTl'*@^N6r5,TS2>)VC6>@35Qd\oFC47PZ
%okOi4]D'nm<A,&/81W/`O\\!\nSn59qX!iO#3:*Sq2#Z1^l?R9=?hL@eFI`HDg'_FG*SHD[_P&J0h0*_d4dQ72$,VB&D^b*l&H@;
%k2J&![Lg.=o`@ith>-:mZNpUE!ujLD8g@W(S\?>0i_2l$[T70J%_)9*7gsG.^jq]W>J<Q)]R$,SCH?VO[#$SB1E430g,X$9X6#9k
%J>"_X.lr'Y-s?&bR4Z?W>:#.*hp<VCF1+IJfKOLA8K$o=H_;qIlp,@4'mlM\+jMUd]qG!'aQ"s1m#<b7_/ScmqN`&UQI)+ocK<L<
%U+,jkj)*tXWdj\$B?Lfe"=hiRF2^eGSlN7D$.lHGMk)Glct'\CSsQq%&1gP2U0IDAUk@6,kj&HCdH*;ZOAp;(>*6Mo\^TEuCM;FW
%l;o8s$8i@eb%4<qM/")Mhks[>:,!q_LCA6]$jUB!asukhq/O;ZOh.l4]?QgO[]Z2eb!$DN'*bbq.5]d`7!C.=Cm%E`p0MCF=3rSM
%FeldIbJLuSaS3Icf]$hkZoujP]3IPMjSC3"+Q=4+"g9mW&>n3oi=P#mi*uS$mh]dXB&kig-"B.=Hir5nmRJ*Cg(]R@]jc*MHId:3
%Ao8)ek_NK&:k`e.hg]3uV,<DZ;_M+p*\Euu"$4"AX&3\YBE)dhAKSnX:UF9]lK[H!^nEnuWW&2J@*X1elQ)&>-4XCXaZJrJ^S2*-
%.I3SD?J-W`@eG-4QdR"VAXDo=RD,N?9*arNI#q:0N[e:G++h3gMBaOgH[]krGIPnAf4=Ss5<kkSL;jOC`6_2o(:N.`R$H'>a\\(9
%,[lc,Eerpq1s4@DYl4+Edn[kF-eYEDRAIpp@YP#pdqr-8;S0;`m\oN5!Yg]XR9,g=kXn:_(a/@emM$R]qc#8)"G!'ED1]#l^(tfa
%4Ab1GNQZ,CG$T1%Mt5"nLZPP%eR(CVLO_%:.clg&n^I/cReC^pGDfiU&cq/XrcN<YFu>U0BJ7'Z.Wkcc[ut#t<G'[`2re&OLV4O<
%8j>uN3UaM1[4s.\[mn]m+8.-\NZgsj%TtH.#gT$^U8:fh%6/]RBIcG8>M;t>*HmW?morLYEk=4hoZa+GVu)\alugh$=NCMn:g5cq
%XSGquA"aSVFV:fjLO:uZ*-ijKX'q>5(D/,#B3H4!&r"cO63'dglFmc>"c6:^Vu9;]34l6gO?opic;RQsdQ:aZa9V(j`Tr)-Y(sD+
%TsIXB7t&=(jAX/s>]G34;QH+WR)T'X.!>iFG-(H7qk7iT8etq)ZdM[)pN:%-LJU[PN#-j73#PRhXu1Ke"0%6V_?<o@NQ:G1K4b@M
%86*=AP&1d*G(ftQo"7d(%qi!qTp>(P:>f51:#Fr"r6@_n@78flMtrpGopPn*Ccn8[dc64!F!F5W90Ru58BEkP`uW2qLSPm<Z::\A
%kD33`Y-<BT4'f!q$Y;Ydmt\V%hpMSh1@"o=]B?7Op4,*'.XLAn5U<:qG%gQ1'iB;DNX*YXYNP\dE->i,N*OJ\h<h]8M3\m&@1R*(
%d2C_+-I`d6`-t;h@S8]<@kk\5%2m^XNhJ1Ze5-_0bFrY*aH/g,Y<R=ZJFVEL#f;/,al.-d*P++?=nYHM.pegDX=Ak9MX&0CD!](=
%6[kgW2%CqQN7f`Yr&B`]4H3>N&r>2SkRuQ'Pr,FZ3Pme\hm'@CcB`Yb"3rlZJtE#OVA?^M,,?C_IEplZWam`^L-C9l=_;=C`#64B
%f>BppeW"GhJ1KNr_08<BnpElK&Q:r^68.t&5r=!Uho'jKI!$jnqCI<CN;;A.''RfKG8rspqhHoE*IC#t9B%!e$`,7("*L9[1T_Om
%<orXG@<A$*Lq$BN6;">4.ICW)^DNn^ZXFL9qK9hh>uLl#!7N!I=#fhmSM`g_L7r/`4Ri#a#+OS3(THs^/7l\iiTf.j(*aiAMJ%5#
%S7P0JQgIJ5<fE)_9@KPQ>),kD^s^kpkV<3s="tpTlYUSI[U`l^Ib.aK.B%.3\)PT6:DU1s'>'NBS>M<&UPgTuPh0Y0W"/%I1=YoU
%!g7n5fKuae?lA&*D#j+,:4n?:1Ek'&^;\HqAsr4MmeT;*h(.UL.oM!eD<e^UCf.X=@-mI\7Y)R&iipD:7d&OTie"a3e'gf?%NjOn
%#SY6brjq1;8eI-pg4Yhj3OuS^Wh0`N5-5c(IknD!F98bePh)*eL?@oMMpAeZ$6_\K`&*b#IU4d75!SLd\,`Jn].5<F<NC-=r=j:/
%'FG_o7Ei,l8A];n3b,sPX^!]B`Vm]'khln_p.lW8jbM@1CgUid%bm4l*TBNk^#Q75+fFgFb^b$6Kb=.0Q]g?-8c](0G00Zm](55M
%#G0c1[f7-9&1aNjA\YeQ.*p.rXHKtA/K(J'f0.oV(#<%n^#oc8;T&0S_eFk2&:;E[7]bkBRJ(KdIki-S;b&J3d:lXjEn15Q^.%rQ
%IrWG75>Be&s6_Q?m%8e':]E/_dr$VG<93K[$\p/?;e$I:+rth,7'gYY>=M7d<.[9K[CSsS$!/d?qUQec<l3OsmXcF(11dG$c<Ce\
%^6]F(S8b/j</s+ue/>jK4/>cAj=+go_"6TDKfPn?+kg1OH81;[6fS=FWE35p`$>C&li-<i'C=tl]83DR[eY-q`P,rSEGV+SPChCk
%Kd+.'$a9!DOgF/#@dLd+Z]1.uoLj[6a"A*I:cB<pQ0AGEo"*'hDdh=nOKpYWES08'BSS0m3phEBmOO;W?$;$.c65`+gDI#bdAE8q
%)'5\flO:1hG=s3;#l*RsnZ=X`&?>,5@"60o!DbEjof(E`ShbPrj83m>S*:s]d(/!B&&[]Mlr+_<(?RJN<k>VIIaV\k7<L$HO\33F
%=EIfA'MX#0=XU[$r>#'nlY%S^\]QLR\cl[;NhC,:VbEdRM"-K7bIYho6o(GP9UN@GB\uE?nsJkqmU9PQa]D7S5/6ZE6!ed2)2N5e
%1D%O_YtA^BUo<+4cjN`nQ")li'pnGpY=,6CqiE?]IX"0Q7m;<s^BS:`qku-EX\*AfY03]9T_4VCNhaZ&5JPfriF%FV<s#sa'Jp>U
%2#AWO#=\bqJ4HnMBldQQqIW`X?]CdL&QhG="NM>E$l=?6X:2L@ncTHDZZ>o;A5nSd[l1#2Znmq?qFW\1L[5H0cqFIQcg!Q]6/WYj
%cRE,Zd)s]@U8D:A3>)@6NV_I=hk#.MR,e_Rs(qAGG<.u#@D+g7FY]!qRdN@`1s`V+gP-NQJ7TBR$g5%Cm!`\:jJS\V%QfCOoV^Nh
%'V.ipfXIj#:<.+qgXB0m,>,d&A=4YJdo$e0N:H,p'--9[_Z!S:*QGcN/(C^sgWE.Q4)<q2k!^U*ksILo)WML#l<=<Sl7/LN27;^O
%e^)=j0JVJ5,kW^2bpYd%1(TfKK9XBi:cXS7("\d$;1\P;j!`HKfDPkeCC_M@0,QdA_n')BL).H0iNuhgiD?YM7k9AJSJb2ujXQ>E
%.=+J:nCDkiMh*pRii%V%G[`045@3$6\s9$09;`RB)<WWGXq>hp6`Wgq1`<mRB8FZdBs4tla/D+B,cW*@=K_Dtcq"e=6uu,;0N?L*
%Q`;UeQP[l#m,^d`8HrlfMG&_YSKEa.6V^a3gc<4$WfcKkU>larZ!`9+l212nl4Wpl4=P$R+DMi=]:EAJs-D%E%sjQ@F/FB+q'q#0
%)O+piFOlLV\b9^lTSFoeE,lXTR.'7<=^L+F@ScGmVl`A,MZ,[sd)FrHhrH&_;*K<]TVnSds4V6HYEkuNqNuqtm!/4PFDXb!p!#U0
%;pY4nk/\F>S<U_;lp-.1'$D7:\$T[/oOF11%_"VBUt3g%l,KWJIudfD$%mY&5<\%Fj_SmidI]_:HNRrHZU(o8g=3lqHk%N^o9Jec
%g0rrV5j8,3+EP7TUCd!*K8L9COH?.oUMh.:"7X451>L#tPBf'Le@K1M02\G=p_biBZ@fN5mQV\L7P&!UJiTq\oLb.Ur2"?Fo6-ih
%p"P.1A]>05T^b^7;ip,_UUlBi!Dq;@`M9F>$oW_@5!JH$j^jR18VOFu*VX#&n*dD)-[\?OBETn9=gds&4dPCsKi[c0UT_-5Jjr1J
%G_9*<&puI$VR#J%DNPZC(XhqF^n1uHL2Li(F-/l`2iZ]QS<]F_7;fqg>"\kZKHApc/j&rW#$\FcX1JIDdGmk1FoXJEkUb!UF;FiI
%W8;g@ik:5OFAdWUS'I(6<Y@aQp1GT!YoN.Od$RJq3`](]/,bc9$NVYSkSTcWIDImQ\U]cqRogl%gijZeb]o>"/*egM5Z5i_59#c"
%*76g)TpC7SjMn.XY+\cuNbVPY#kkP&a8jS\<m;uL<NK%F*1'S-:QcWa_u(3mSiY<6KAT#pgQH4?]63s3/L`jbI*g)lGI-2A^KMIF
%^5I=P+)E-Jjje*V`e]jR7pLfh\dAOA8s<;ImD_Br?bMSV0T.E7J*fjd1FZeZpYXkth4bqV!uG=Vmkh]k0J=`$h'u_r5\MUNB6?9I
%UiS_5^PdrfWFsDB2eZua?d,?jOt?gV,6-l=>7;&sc<0V^5>kq<5M\#mA(`Wc6R!2_6eg?ia@=SELHijV@Nn;.0$8u(MF22]:)DJ[
%',?Za`0U85><bUh.<S"InZ^J=Y`8Ahif7IR#g,Gg7+$q&.?JVGhA3F]hEQ4k5ig,N?:O`rDUTErlr7;J>%nJ>o6<*ZfVZ)WdhI.e
%<L(62V\J"CELgZ%HpP-sl+`]TGPV!d,q8't"X1rZ\D\B=(dHatJYCPq<*T7CEm;XjVS=Zo<m@c10NAsl^9b!BfrM6oq6U<p8[3)>
%#):r4)#2k^"a+]=l$I0<h;VU>6RtNDk&mU;.]!bK>(mr>*[fd.]/^p"[M(aQn';Eq>4$*7g2kM"D\n&CG`0#\+&VU!GAR%jU#f*.
%jsBrSXfb-SQ13DPN1gnn]?@AHTP]ER8i(WB;)a/Ent=RRI^Es+JcZ$eS(`m'KVke,S=dL[!=h"?2RYoWR'/tZ=u[InbNJ=(V)f>%
%<iU43=3.A,)<@>fY5NV3&3[(-qM^:kD>IXeYRB/(/><pH%S;RWaIa`-or1cSLdmWU$AaXRGP'PM&mC:IYHRKlX7Q*[3cp[/Zr;ci
%(*)jFocuWXoJ@.gkW#Ub*X22%b9O^<PjmIJ/+16loI2n3?V>aDl5i@P5Wt1:`]4.GVps@.(d`Ugi\]Z)>CMrHPBR2p:j085b''*n
%@$E\h;Z6$Aq"e^0]N%?i?qC;tXkb*X+5p!1#t,3"7<$au='ZRUc5n<;]2E]'\78e&-t8/A5/RlDY*Y8^B0&B-j/fTZ1_Tg,;r%81
%1L7=up_8e"B8I]"eIjA6KO(bpj2S7d4hR,G':=M1F^'!9r^j1Sj8@J8`U/N*W.u$MPiNIp>0bVdQWK0C3rkfBp*oCr070r3!5-3:
%r3Y3OkjqJ'81>FI+U^2<_;sL$?a6ib08aQbfmMMFUKgih%#?d%>gTIthL5L>qi!M"ff=trGua=N;k[\<S#nYcUa6>%`EUes;B\,'
%NbYq^rAd"@\A23:=MsKppK>#eNph2UF\VaAgS's`-)(qn>Qi&T$Aq=8_Ng/C?!o]>3qg#J_oS-IOA_O47n/EF@]@A$.@5Zc(fN;^
%R9-u2a:EbXdgP;18NlW(db(>6A8dfa>MM#;*<BqV0@s+aKJn0dnZ/h+Q,Nr/gQ$68WR7H8!oQ/#ZoDZ/5n:'t;lN[^lW4WFlc2U>
%6Fd>K"GHREq6DhQ=Elk5(3+T,p_&%6kMZ:G:!.Opl=51+JNC[lJ6H$6?*R7Lc%bVVgK`5KEV`&8ETCW#p*&g1IeDc.kg4IpJ"WeU
%,fi$nN[/4C_&,F2c6>fS><CVF?p5@Hogm\f.O4>O=3/'mE5it<>-8U8)KrMuA[,(jebWLcdZX/gQ)reXCqNb'?cX#NJE4N3jVk>'
%qGbj>UY*Qt;?92ln9VLm"u;WSIW=9&6VsW5&fj&'KtkT6n/g"'R;FKebGO`O</0GZW_P$+`M0&lNUk7&s8'.sL>Hg#-$Obc%FYHQ
%60FCi3RWBT>;B/@O`%cQ!276e2!S+3@$<H!/IaPXT&<:lX$GB>Z](K_?DT)faR!WO]5:%`3uSmsFU!"b%j\W).4:X;B$9_>UAO(]
%>GRm_d[Ou="?bPckCs`D>98BTh0d^2H]D4F3F>G?B.`FV_X.'3+gnPH(d:Ol6"u6Y/bmofjYTC<_h`W2nOETG\Z\VpXYPTUN)!qC
%TD2a?%UZG[%*5VmKN=LZ#H#Z;a-#VF*m3n(+=8u;0uQTa#^q-6cHEh%?NQ??ZtY;0-OK*[L<OI(2gm)O.?F2u]1V0CEeW*s!1!o>
%BAAV;=JKJc9,cWY@s>>UTbV:mZ)_O9=^'hJ\V\VU=K1apgBZ$K=38d%&\(%G.#&Mo'CW<TYf/YIc/,PrBHV[!9OuS>2E$qBe%X-)
%ocL]5<o6NjhfE/*qU1K'mSMG<O&`B&BRAFho[`rjFA'CPM<bZ5P^mTR2^:m%aV\f88e&5FZFMlj(Kr$9C<PG$$D\/\hpR!/e9`*A
%+7O:6,1anTj\4PfP.P_RMP`m-n1@AV<]oTEhK@'jEG.)Jj7[.<KM>3#1S\W`pD1f4iN>/n\B7MT,faa[E9Zi6TDRkrCH^^#94gqK
%_V=NV\%iT4l5c-$Cr;ADOOP>gQmlNEX+9i;=#V^Ze&+;]#V'?MBPp=H%_5LJ@2O/iAsW!SHD&(ID=;H47-lV`dd6pT(!LOo\I8FI
%6V\[uCp`1@H)<9K*BnQI1=n$e7:[ffIG4O'C"(?7M!^hCI[6A11g4,cebu+#lRG8Cg[D*.2=X*D7apsA0%Lb5*@u\h_Y*-c+4frn
%3=bEqI`prf_]YK"A96W]!5T69CGd]I?X9V>^2iS!CM"J;+sVZX]T2[u&l76l_h:'DJp4nG2!Z]Of,g*V[a:S+&Br\uJ_n5_44BLX
%V(RhU%_aUOEkmch)1J$ug2E+8&@][>p5Q"?Ch82#LGAkOM@7>18$d,e<>NL.?Tb?l^Xq&r'XJso*NhEceB+rNRN4S],^t2i^[X@4
%_IJCdFL5rHT'6,qd^V15[%eiL@P).6<*k:/4H#F2Y$l97CHgg%?dsQ/`SV7XQPUDm;M.uYH%6qn4Bj9raOgY`f\Z$@#Uj:IAVaeP
%d`"do9=Zll=t",tNGU`H)Vh032e+X%_pL;djn=&=D,uROF+uMB0;cpt"%P+(g,lTW:]C<jYVf7\3HgDWVqI*jcJa2,F\!?iQ]96f
%j/A7Z&+@c25a:9S89TO_5T+%c=*Z0r*h&"lp0f+L_YZ;II^*CEYWB.;FSU[[a),<qYji;j>1[l.RTTWYHB;i*^WWJ*j=MCeHi1.F
%>F!qW\;-A'Yb1Xg;VRsq'b+!uN_c.gXnZq&CR=00#dPb9DHnqnlnPP%^(kaRiT%G,@QK,$UXh--D7bBTqCIe&>L1d1kX.7-^<'%9
%Db$QYb*;[_oWn99XD\)P\;-pf*=I(75+U)\I0WF:=]Pne*uXXmm.IU#'&Ir9:b,^W9dkgqI]DHIiu05XS`SG!@%'Z?(c<MNTK_jW
%!Vn!V9r$-CRU<]Wln-M'XAB3(Ko-*`X__rIelU46]TbaR)'FeuC1bD@cf>u1`)i4a_9%F$$1aDt1?XRI5WD(o3,E(#r(tDd.tGu:
%@)+f97Ro[Z)47barq;8URK`'ao&(-T;r<4WO/01^%e`G)b<&/-2p+@//"4GL6-DbX/W-*<%6r0?[;prr2I7H+>Ig;cL<XY?!oct<
%C[%4_1-X/2oNRR-4,QPa#KN1)4)+7OTfkFfi,:SI/#fScILlF"Y@1eN]YIad(HO]'d,Ukh!h,`8P8pOX&DMQ5S5-VW#^qsU%"Gh:
%6ig']\./?2RBiZmd6T<@3&qmP%E/*I.][&CD!:6md2Cq)?`!d!$LnO/^e2MT3U3M#F(o(UV1Zb/*d*_R6V3)G@4)]i(8p51qn^ZY
%RQhZUf!<`J98bdk>6r8R#3pK>K_:GPCnU_(&5Z4=m=*N1c98@1TRlE<C$RS?2CClS1(CNLI.BQhoi;%18P53B/LL;RaA5+iH8Sg8
%'idAGP&QuA'S&^hT"jUCb6#J":cR^8ODmf8\;O;XN,]QFJ_Cu-3+Eq+g]_/""./VdpCq12mI$K`-ge``(Vb>'R5.Hm.*Iqm:+\u:
%&[S\2Tl0!Q%oM5H&:`<&gRKcJah#[q4:g[!NZkW3UW+q7S/ng2,SMOjq(,nHPEJEmkX\=n=W1sA0$[b&C>RsHq30\hIG6,D"S&"Z
%4BH@Tml[AUdaQcN7s)_/B`n,f`pR'fnTgk"+[gpCEs9'6.3-7j;.5ZqNl1=N>:5kTL.9L3p)p6:l%\NfF!+_I-^K2OKtjcLEQnce
%^1%1X48W(-6dX$590.Lt?0UgO#Z#:'Cg$q\r00d!j?k4&@?&[i:C;W5G`^q#NZ;]mml2=e04s%7G#epD!.#GXdMOK1"6%fe!VE=:
%k3I>k4#?2<]W<=PE.2nnZ`#n=b_h!h"'2u=f'<'g5*p7>_/2E?qT^J=.Zg)D`e6H5:gpI"//DeS\^1.1S%Cl!C1795Vu"Q<OUJ!r
%FQc^3W3;cQZS0@s_*>^^'A%q:,Kn@S?sO&THsWUJ"AMUUqL$>,oXh!6QR*>6Se3XA=a3LIF`;FU90Molhu1._p^D45bK!!d60r/F
%2?Vp0$Mt8E]9XYQ#1#"RbgI#8jQ:DJd:d^m27:$Pl$`(n\,"mugGhM*cMeLq5?Io[mEaqu;[%MoA(_`QnjJUe]saYc-[3cq/YsC6
%>!_&"%r,\;fNOp:j;bc_s6cZYb^,J:j'lFuRia<^ndeu:>Pu-G6Fq![Npdts76^hAQbaP@2FOc_>9*!2]JlF,m4)^W7/`QcB_m&?
%08TS]r>#LiV;3bgpE^&Ig>,noZ<2:]\$7KkQ(LMt9Y,`C@0s=_eME1Y//XCCqlkR3MHm+4JP]'#)-^AS@QLOQE-hZDO8&'DR)'8.
%PcSlVW0<ua3bQHU\a3g7n/;bR8Y!(Z8LuNYKR:A*&_[NsKYG-8`WPua6(W_hCc/.g>$gf7k6&`$1]$:Imb;qo5d`^IiB`*Yo.2Ch
%U8rMak_q@kQ[MGEEDtrq]/='Bb9hAf5mN'kYP).u*+\)DI@7@h+Rdh'Yod,Sp]b?_*VojC\iS1&<IJ),ao2B6kL?Z#[=6\^Z*,j9
%m?H3dDed)T_VS;HhM4,YJc>s%2a[0W:9]s2`\n1o-9^`O`dVZ0,sSGo=upp^kec*]N(tpaMcPD4]PXujBqiC=e]6Nqcd=QeV:Pj]
%%f'CJdEa'JMuh4J-]Vnel[9AkkkU//ki:D!?TRUCC;=t)00kbb65F_Qk5h3AYfq?e+Na4J+$0S^'7Ro_Fd3A]`INTmEJdCekreAp
%dC-##bM^P6/Vi7dDfoL?icS@i4Jg`6>mn1@Tj(N%cEkM[J.rqYRE%B=X>>!mbaZDu"Bef57BFd-.lVI"b.ZEm4`c/B:K-iSSpQ%m
%C7,a5?>eqpeJOVnXX=fBPqbFA1CK@GDs+r7P]HDb00R!`M>+.?X?,rA^G.fReK[:9=!@gXX(PGHr"cm!QnSEfO8ldk0@Ri&G[4_f
%aLq]Ni&j1R?Y>66GV$PAf'nX4aQa$YcWY,Q./jEOhRZQ]=1Kj78',iu_buDBEg^q],iPqKQLYYG*SFK`_J<O9AQ:frdrT+,-f.:V
%\Hjn%^7rUl4tOG];h(!)qFseB*EM<6s+3]O#N3LqZ\@bE<j%C?mQ7L)'\dkBftpOVT2aL>B)5RXII(T'2OqZ+>p!bZYe*jL^9-hG
%8qB)j@Woq)YlS#f5XR`En-`cQC<1/JA(.r2a8fnf]'f;0<??LRZOGuZGL2jig(_i/+&1?TY)$4'_7b(Kfr*C9Hr>3`l.j`j?)aKT
%hcb]u!M;UnTi\K9@$%ijdq;/j[/_6/(@>7KO?,PrFtA)B:cNm8gt1n0HDI%.nAB>24j/%hO')&a^bOid(^#;$*(Lm!1Q>897k&_@
%PM)p8Z(hl%gD(X,osVX#I221*iDUPkJT!MOq+\m3g*Vg?^&H.1hj,<n]j!NtW)ianS..'rS8pfT3%PY7`=\7p#mW/H$gr2gk3_Xr
%*#bFp9-X[m6m=kKU0sYW)j?F>lc!6JL=6g`oZ@kX=Vrk[6cg7/5dRIri;fk9&Y:4!gCL#"L!cWYX=+DECm60iI:uegB-2`S<MAV?
%+]q:?Js-f4h<^L:4[TK%N^?D%/5L'P2#!8CX^V<Yhf-GcA62ENV!9Q/,.5mk?,GBKZIA;Rf$LDd1^gs]7X!6"p`N'KE-QM_3Rb0*
%o#:>$Lo!%/!Vg!EmdGA=q0?d1nau/!Uj)OtRc#AcGDgq6K0J/cA&^5BDGm(\7/\(9M5GYN57[%q/8JLt@-cJZ6.hk)7@Lph(aXaO
%%"5Hf*6V#jVXmUBZ=1#^qe^p:Mr5Sc!`o"A^^;kB[T1hoEWNN#EYqNSYq)$#%t)(1b4[W40K'sVE/*!h^?nV?<FXC'N:2#_FhC#1
%>/*[Jf)+LTnmKU!Y6M2^3M'5oeb7amh"S^EWDH1ip\OI(JFi([Q(<F%YQ")Grp!kiS+3-Nk3r>nhu;U7r:*Q)+4%`0rOY;lh&l[q
%TDn?;rqdf;oTt'tGQ7Gns7ODcJ,&oUs+c+#_a"+iIm!c'jmW3@a++#bJ,%J7^\m,ArJ1Et#R>c!n5k,42uiSYs5dVc?fe9Xo`~>
%AI9_PrivateDataEnd
