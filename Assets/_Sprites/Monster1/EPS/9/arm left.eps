%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: arm left.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/20/2018
%%BoundingBox: 0 0 419 752
%%HiResBoundingBox: 0 0 418.4082 751.1823
%%CropBox: 0 0 418.4082 751.1823
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 72 128 8%%BeginData: 12294 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD3AFFA87D7D52522752FD3DFFA87D52522727262727272652A8FD
%38FFA8A7525127272751274B275127512752A8FD35FFA8522726FD0D2720
%52A8FD32FFA87C272727512752274B2727274B2752275127522752FD30FF
%A852FD0727262727527CA87D7C5252FD0427267DFD2DFFA87D2727275127
%4B2727277C7DCFCFFFAEFFA87C5252FD0527FD2CFF7D27F8FD06275258A8
%A8FFA8CFA8CFA8A8FD0452FD04277DFD2AFF52272752275127275283A8FF
%CFFFA8FFAEFFA8A8587C527D52522752277DFD28FFA8FD082758CFAECFA8
%CFA8CFA8CFA77D7D7D5258527C51FD0427FD27FF7D272727512727277DA8
%FFA8FFA8FFA8FFAEA87D7D52A87D7C527C527C27272751A8FD24FFA852F8
%FD06277DA8FFA8AEA8CFA8CFA8A87D7D527C7D7D527C52525251272727A8
%FD23FFA8522752275127517CCFAEFFAEFFA8FFAEFFA8A87DA87D7D52A87D
%7C527C527D275127277DFD22FFA851FD0527517DFFA8CFA8CFA8CFA8AEA8
%A87D837D7D527D7D7D527C52585251272726A8FD21FFA84B27522727277C
%A8FFA8FFA8FFA8FFA8CFA8A87DA87DA87D7C7DA8587C527C527C27512727
%7DFD20FFA8FD0527267CA8FFA8AEA8CFA8CFA8AEA8A752837D7D527D527D
%58585252527C51FD0427A8FD1FFFA85227512751277DAEFFAEFFA8FFAEFF
%A8FFCFA87CA87DA87C7D7DA87D7D527C527D525227522752A8FD1EFFA8FD
%06277DAECFA8CFA8CFA8CFA7AEA87D587D7DA87D7D7D837D7C527C525852
%7CFD0527FD1EFFA8522751274B2783CFFFA8FFA8FFAEAEA7FFAE7D58A87D
%A87D7D7DA87D7D527C527C527C5251274B277DFD1DFFA852F8FD04277DAE
%CFA8CFA8AEA8A87DCFA8A87D7D7D837D7D52847D7D517C5252527C5251FD
%04277DFD1DFF7C2752274B27A8FFFFA8FFAEFFAECFA8FFA8A87DA87DA87D
%A87DA87D7D527D527C527D527C2752274B27FD1DFF7D26FD04277DA8FFA8
%CFA8FFA8A87DFFA87D7DA87D7D7D83FD047D5252527C5258527CFD052752
%FD1CFFA82751274B277DCFFFA8FFA8FFA8A87DFFA7A87DA87C7D7DA87DA8
%7DA87C7C527C527C527C5251274B2727A8FD1CFFFD04272652A8CFA8AEA8
%CFA8837DFF7D7D7D84585252837D7D7D837D52527C5252527C52FD052752
%FD1CFF522727522752A8FFAEFFA8FFA8A8A8FFA87D7DA87D7C52A77D7D7D
%A87D7D527D527C527D58522752275127A8FD1BFF7DFD052783FFA8CFA8CF
%A7A87DCFA77D7D837D7C527D7D7D58837D7D5258527C52585252FD042726
%7DFD1BFFA827275127277DFFA8FFA8FF83A8A8A87D837DA87D7C527D7D7D
%52A87D7D527C527C527C527C2751274B2752FD1CFF52FD042752CFA8CFA8
%CF7DA8A8A8FD057D7C52587D7D527D7D7D5252527C5252527CFD06277DFD
%1BFFA82751275127AEAEFFAEFF83A8CFCF7DA87DA87D7D527C7DA8527D7D
%A7527C527D527C527D52272752272752FD1CFFFD04272683AECFA8FF7D7D
%A8FF7D7D7D837D7D527C7C7D527C7D7D527C5258527C527C51FD052751FD
%1CFF522727512752AEFFA8FFA87DA8FF7D7D7DA87DA87C7C58A87D7C7DA8
%7D7D527C527C527D524B2751272727FD1CFF7DFD0527A7CFA8CFA8A8A7FF
%7D52FD057D7C527D7D7C527D7D835252527C527C51FD0627A8FD1CFF5227
%5127277DFFA8FFAECFA8FFA87D7DA87C7D7D7D527D7D7D52A87DA87D7D52
%7D527C52522751275127A8FD1CFFA826FD0427CFA8CFA8CFA8CFA8A87D84
%7C7C7D7D527D7D7D527D7D7D587C5258527C52FD052726A7FD1DFF522727
%5127A7CFFFA8FFA8FFAEA87DA87D7C7DA87D7C7DA87D7D7DA87C7C527C52
%7C5252274B2751277DFD1DFF7D2727272652A8CFA8CFA8AEA8A87D7D7D7C
%527D7D7D7C7D7D7C7D7DFD05527C52FD0527F87DFD1EFF52275127277DFF
%A8FFAEFFA8FF7DA87D7D52A77DA87DA87D7D7DA8527C527C527D52522752
%2751277DFD1EFFA82627272752FFA8CFA8CFA8CFFD047D52FD047D837D7D
%527D7D7C527C527C5251FD0427267DFD1FFF522727512752A8FFA8FFA8FF
%A87D7DA87C7D7D7D52837DA87D7D7DA87D7C527C525227512727277DFD1F
%FFA8FD062752A8CFA8CFA8A87D7D7C7C7D7C51FD087D7C52585252FD0427
%267CFD20FF7D27512752272727FFCFFFAECF7DA87DA77D7D527D7DA87DA8
%7D837D83527C525227512752277DFD21FFFD072758A8CFA8CFFD067D5252
%7DA8FD067D527C5252FD04272652FD22FF512751274B27277DFFA8FFA883
%7DA87D7D527C7D837DA87D7D7DA87D7C527C272727522752FD23FF7DFD06
%27AEA8CFA8A883A87D7D5252527D7C7D7D7D7C7D7D7C5252FD04272652A8
%FD24FF7D272751277DCFFFAEA883FFA8A87D7C52FD047DA87D837D7D527C
%275127512751A8FD25FF7D262727277DFFA8A87DCFA8A87D7C527C7D7C7D
%84587D7D7D527C51FD05277DFD26FFFD042752FFA8FF83A8AECF7D7D527C
%7D8352837D7C7CA87D7C5252274B272752FD26FF52272727207DAECFA77D
%A8CF7D7D7D7C5284527C7D7C517D7D7C5252FD0527FD27FF5227512752A8
%FFAEA8A7FFA8A87DA87DA87D7C7D7D527C7C7D527C2752275127FD27FF7D
%2627272752FFA8AE7DCFA8A87D83FD047D527D527C5252527CFD05274B7D
%FD26FF5127275127A8AEFFA8AEA8CF7D837DA87DA8587D7D7C527C527C52
%52274B275227277DFD24FF7D2727272052A8CFA8A8A8CFFD057D837D7C7C
%847C7D527C5252FD072752A8FD23FF5227512751A7FFA8FFA8FFA8A87DA8
%7DA87DA77CA87DA87D7D527C525227512752272752FD23FFA82627272751
%FFA8CFA8CFA8A87D837D7D7DA87D7C7DA87D7D527C52585252FD0427267D
%FD23FF5227275127A7AEFFA8CFA8FF7D837DA87DA87D83527D7DA87D7C52
%7C527C5252274B2727A8FD22FF7D2727272652A8CFA8CFA8CFA7FD047D83
%7D7D527C527D7D7D5252527C5252FD0527FD23FF52275127277DFFA8FFA8
%FFAEA852837DA87DA87D7D527D527D83A87D7D527C27512751277DFD22FF
%A826FD0427FFA8CFA8CFA8A85252587D7D837D7D527C52587C7D7C7D527C
%52FD0527A8FD22FF522727512783AEFFA8FFA8FF837C527C527D7DA87D7C
%527C7C7D527D527C5252274B272752FD22FF7D2727272652A8CFA8CFA8CF
%A87D525851527C7D7D7D5252527D527D7C585252FD0427F8A7FD22FF5227
%5127277DFFA8FFAEFFAEA852FD047DA87DA87D7C527D587D7D7D527C5252
%27512752FD22FFA826FD0427CFA8CFA8CFA8CF58527D837DA87D7D7DA852
%52527C7D84527C5252FD042752FD22FF522727512783AEFFA8FFA8AE7D7C
%52A87DA87DA87DA87D7C7D7D52A87D7D527C2727275127A8FD21FF7D2727
%272652A8CFA8CFA8CF7D7D517D7D837D7D7D837D7C527D527D7D7D525252
%51FD0427A8FD21FF7C275127517DFFA8FFAEFFA8A8527C7DA87DA87DA87D
%8352A77D7C7DA87D7C527C2751275127FD21FFA8FD0527AEA8CFA8CFA8A8
%585858837D837D7D7DA8527C7D7D527D7D7D5258525127272752FD21FF52
%27275127277CFFA8FFA8FFA77D52837DA87DA87DA87D7C7DA87C7C7DA852
%7C527C2751272752FD20FFA852FD0427267DA8CFA8CFA87D527C7D837D7D
%7D837D7C527D7D7D52837D58527C52272727267DFD21FF7D2727522751A7
%FFAEFFAEAE7C7C7DA87DA87DA87D7D527C7DA8527D7D7D527D527C275227
%277DFD21FFA8FD042752CFA8CFA8CF7D7C527D7D837D7D7DA8525252837D
%5252A87C52527C52272727267DFD21FF7DFD0427A7CFFFA8FFA87D527D7D
%A87DA87DA87D7D527D587C527D7D7D527C5251274B27277DFD21FF522627
%2751A8CFA8AEA8A852527C837D7D7D837D7D527C7D525258527D527C5251
%FD0527A8FD20FFA82752272752FFAEFFA8FF837C52A87DA87DA87D837C7C
%7C7D527D527D7D7C527C275227512752A8FD20FF52FD0427A8A8CFA8CFA8
%7D527D7D837D7D7D847D7C517D5252527C7D7C527C52FD052752FD20FFA8
%52274B2752AEFFA8FFAEA8587C7DA87D7D7DA87DA8527C7D7C527C58A852
%7C5258FD042752FD21FF7DF82727277CFFA8AEA8CF7D5852837D7D527C7D
%7D7C58527D517C527D7D7C527C2D27272726A8FD21FF5227274B27CFCFFF
%A8FFA87D527D7DA87D7D7DA87D7D527D527D527C7D7D527C525227512752
%A8FD20FFA8FD042752A8CFA8CFA8A752527DA87D7D52837D7D587C525252
%7C527D527C527CFD0527FD21FF7D274B27277DFFA8FFAEFF7D7C52A87DA8
%7D7D7DA87D83527C527C527D7D7D527C525227512752FD21FFFD0527CFA8
%AEA8CFA87D7CFD047D837D7D7D837D52527C5252527D5252527CFD0527FD
%20FF7D272751277DCFFFA8FFAEA87DFF83A87DA87DA87DA87D7D527C7CA7
%527D7D7C527D525227522752FD20FF522627272783FFA8CFA8837DA8A7FD
%047D837D7D7D845252527D7D58527C5258527CFD0527FD20FFFD042752FF
%A8FFCFA852A8A8837DA87DA87DA87DA87D7D527C7D83527C527C527C5252
%274B2752FD1FFF52272727207DAEAEA8FF7D527DA87C7D7D7D527D587D7D
%7D525852837C585252527C527CFD0527FD1FFF5227512752A8FFA8FFA87D
%52CF7D7D7DA87D7C527C7CA87C7C527D7DA87C7C527D527C525227512752
%A8FD1DFFA82627272752FFA8CFA8AE527DA87CFD047D5252527C7D7C517D
%7D837D7C5258527C527C51FD0427A8FD1DFF5227275127A8AEFFA8FFA883
%A8A87DA87DA87DA87D7D7DA7527C7DA87D7C527C527C527C525227512727
%7DFD1CFFA8FD05277DCFA8CFA8AE7DCF7D7D7D837D7D7D837D8352587C7D
%7D7D5252527C5252527C52272727267DFD1CFFA8275127522751A7FFAEFF
%FD04A87DA87C7D7DA87DA87D7C7CA87D83527C527D527C527D527C275227
%2752FD1CFFFD0627267DAECFA8AEA8A87D83525252837DA87D52527D7D7D
%527C5258527C5258527C525127272751A8FD1BFF272751274B27277DFFA8
%FFA8AE7DA87C7C52FD057D527D7D7D527C527C527C527C527C527D512727
%5127A8FD1BFF522726FD0427A7A8AEA8CF7D7D7D7C5252517C527D7D837D
%7D517C5252527C5252527CFD0452FD04277DFD1CFF7D7D27512752A7FFA8
%FFA883FD057D837D7D7DA87D7D527D527C527D527C527D527C527D525227
%522752FD1DFF7DFD0427A8A8CFA8A75252517D7D837C7C52587D7D525252
%7C5258527C5258527C5258527CFD0527A8FD1CFF7D27512752A8FFCFCF52
%7C527C527D7C7C527C527D527C527C527C527C527C527C527C527C525227
%4B27277DFD1CFF52FD0427AEA8A85251517C5252527C5258527C5252527C
%FD04525152517C5258527C5152FD04272652FD1CFF7C27522752CFA82727
%2752527C527D52522752527C527D527C5252274B27525152527C27272752
%2751275227A8FD1BFF51272727527DFD052752527C5252FD052752527C52
%52FD13277DA8FD19FF52274B2752272727512727277D52522751274B274B
%277C525227272751274B275127272751274B2751274B27512752A8FD18FF
%FD0C275252FD092752FD1827A8FD16FFA852275127522751275227512752
%275127522751275227512752275127522E52275127512751275252532E52
%275227512752FD16FFA8FD1C272D5952522752272727FD0452595252FD04
%27F87DFD15FFA7272751274B275252522751274B275127272E5227272751
%274B27515259525952595259525952595253525952522751272751FD15FF
%A8F8FD05272E53FD0927522E52FD07275252522E5252522E5252522E5252
%522E5252FD0527A8FD15FF52275227512759525927522751275152595259
%52522751275252595259525952595259525952595259525952592E512751
%27A8FD16FF52272727522E525252FD05275952522E525252275252522E52
%52522E5252522E5252522E5252522E525252FD0427A8FD16FF5227275127
%595259525227515259525952535259525952595253525952535259525352
%5952535259525352595227275127A8FD16FF522727275259522E5252522E
%5252522E5252522E5252522E5252522E5252522E5252522E5252522E5252
%522E52FD0427A8FD16FF7D272752277D7D7D525952595259525952595259
%5259525952595259525952595259525952595259525952592D4B275151FD
%17FF7D2627272752A87D7D2E522E5252522E595252525952522E5252522E
%5252522E5252522E5252522E5252522E512727267DFD17FF7D27274B2752
%7DA87D7D52525259527D597D537D597D537D597D5259527D7D7D52595253
%5259525352595252275127277DFD17FFA8FD0527847D84597D5259527D59
%7D597D597D597D597D597D597D597D59592E5252522E5252522E52FD0527
%FD19FF522751277D84A87DA87D7D7D7E7D7D59FD077D597D7D7D597D7D7D
%5959525952595259525952512752277DFD19FF52FD0427847D847D84597D
%597D597D7D847D7E7D7D597D597D597D597D597D2E5252522E5252522E52
%27272752A8FD19FF7D2751272759A87D847D847D7D597E7DA87DA87DA8FD
%047D597D7D7D597E59525259525352595252275127277DFD1AFFA8FD0427
%527D847D7E7D847D7D59847D7E7D847D7D537D597D537D597D52522E522E
%5252522E52FD042751FD1CFF52272751278484A87DA87DA87DA87DA87DA8
%7D84FD047D597D7D7D595952595259525952522751275127FD1DFF7D20FD
%0427847D847D847D847D847D847D847D7D597D597D597D52522E5252522E
%535252FD042726A8FD1EFF522751272752A87E847DA87D847DA87D847DA8
%7D7D597D7D7D5259525352595259525227272751277DFD1FFF7DFD052752
%847D7E7D847D7E7D847D7E7D847D7D535952522E5252522E522EFD0527F8
%7DFD21FF522727512751528484A87DA87DA87EA87DA87D7D525952595259
%525952522D5127522751277DFD23FFFD0727527DA87D847D847D7D595952
%522E5352522E522D2DFD0627267DFD25FF2727274B27512751527D7D7D59
%7D52535259FD04522E522751274B2751272727A7FD26FFCFFD0827262727
%2D275227522751FD0A27262727A8FD29FF7C27275227512752274B275127
%4B27512751275227512752272727527DFD2CFFA85226FD13272627527DA8
%FD2FFFA852522727274B274B2751274BFD052752527DA8FD34FFA8A87D52
%2751FD052752527D7DA8A8FD26FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-20T10:06:53+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-20T10:06:53+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-20T10:06:53+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>144</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAACQAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FWP+aPP3lHyvFz1vUoraQiqWwJedvDjEnJ6e9Ke+Nq8h8y/wDOUiKXi8taRypst3ft&#xA;Qf8AImI1/wCSn0ZHiS821n87fzM1UsJNaltIz0jsgtvSvg8YEn3tgtWH32qanfv6l9dzXcn888jy&#xA;H72JxV61+TX53SeXvQ8veYWMmiM9Le9JLPa8uzdeUVfDdffphBV9NxSxyxpLE6yRSKGR1IKspFQQ&#xA;RsQRkkLsVdirsVdirsVdirsVdirsVdiqUeaPNvl7yvpx1DW7xLWDcRqd5JGH7MaD4mPy+nFXzv58&#xA;/wCcjfMWrmWy8to2j6c1V+s1reOPHkPhi/2O/wDlZElLyOSW6vLkySu9xczNVnYl5HY+JNSScirO&#xA;PLn5KeedZVZpbZdMtW39W9JRyPaIBpP+CAwGSLejaR/zjn5bgUNqmoXN7J3WILBH937xv+GGDiRb&#xA;G/zA/LPy1ol1FbWPIR3CGRQzFpYyDTqeqntXI8RSC8r1PTZ9PuTDLuDvG46MvjkwbS+iv+cavPM+&#xA;paTc+V72QyT6WomsGbdjas3Fk+UbkU9mA7ZYCh7XhV2KuxV2KuxV2KuxV2KuxV5l+af526R5QWTT&#xA;dOCah5hI/uK1it69GmYd/wDIG/jTaoJV8v8AmHzLrnmLUpNS1m7e7u5P2nPwqv8AKij4UUeAGRSy&#xA;XyP+UvmLzOyTspsdM2JupRuw/wAhe/zwE0gl7/5Q/Lnyt5WiU2Fqsl6BR7+YB5ie9GP2AfBaZAlF&#xA;siubq3tYjLcSCNB3P8PHBSGHeZfPj21sTYx8VZgnqvs2/UqO22EilefealkbUvXkcu0yAszEk1G3&#xA;fBMbpDDfNVqs2ltLT44GDKe9CQpGMDuyRH5F6pJp/wCZ+jlSRHdNJayqO6yxsFH0OFP0ZaFfYeTQ&#xA;7FXYq7FXYq7FXYq7FXin50/neNGM3lzyxMG1XdL/AFBdxb9jHGf9++J/Z/1vsxJV84wQX2o3qwwp&#xA;JdXt09FRavJJI5+kkk5FL3z8u/yNsdNSLUvMyrd6js0diCGhhPX4yP7xx/wI9+uRMmJL1lI0jQIi&#xA;hEXoqigH0DIoUp7qOOJ5WkWOGMEyTuaIoHXrirBdS12bU6bt9VViYBIoVyOgZgPHLIhWLamTqM1p&#xA;BbhmgLlpJeJC/DtsSN++RlukJb5iulnv+CGqwjhX/KrU/wBMjM7pDF/MsgTRp69X4qPpYYI80oD8&#xA;qYnl/Mjy4qdRfRP9CNyP4DLgr7VyaHYq7FXYq7FXYq7FXjH55/nG2hRyeWvL89NZlWl9dp1to2H2&#xA;EI6SsP8AgR79ASr5w07TtQ1XUIbKyhe5vbl+MUS7szH/ADqScgl9Mfln+Vmn+U7Rbq6C3Ouyr++u&#xA;aVWIHrHFXt4t3yBLElnbMqqWYhVAqSdgBgQl894jwm4mf0NPXfkdml+Q6hfxPy6mlYTrGq3mrz8Z&#xA;l9DTYWH1ezBHxFejykbH2XoMkI962ll6XlZbSM0MorKw/ZjHX6W6DCe5UDq2qpZR/V7egl48UA6I&#xA;vSv9MEpUoDFya7nrlTNi3nG9BaGzU/Z/eSD3Oy/xycArKf8AnHXRX1D8ybe741i0uCa5kParL6KD&#xA;51lr9GWBX1lk0OxV2KuxV2KuxV59+cf5mxeS9B9O0ZW17UFZLCM0Ppjo07A9l/ZB6n2rgJV8jk32&#xA;o31SZLq+u5dyavJJLI33lmY5BL6Z/Kr8tLfynpou7xVk167QfWZNiIVO/oof+JEdT7AZAliSzq4u&#xA;ILaB553EcMYLO56ADAhIrvWoxafpHUUMFgWH1KyI/fXDfslkPj2T6W9kFWLeYvMhkJuLpisQNIIF&#xA;3+7xPics2CoS1uEuLdJ0BCuKgN1wg2hTvZorS3muTsxG3iSBRQPpwE0lhLu7uXclmY1JOUs1C7uo&#xA;rW2kuJTRIxU+/gB88QFeeXdzJdXMlxJ9uRix9vAfRlwCvp//AJxv8nyaR5Sm1u5Tjda46vECNxbR&#xA;VEf/AAbMze445MIeuYVdirsVdirsVS7zFr+neX9Eu9Y1GT07SzjMjkdWPRUUd2ZiFHvir4q84+a9&#xA;T81eYbvWtQb97cNSKIH4Yol2SJPZR9536nIJev8A5F/lwLaBPNeqxf6RMv8AuKhcfYjOxnIP7T/s&#xA;/wCTv32hIoJeuX1/HaIlVaSWU8YYU+0zf0Hc5EBix/Wb65tL+1luyk9AXNiuyJ2U8jXkfcjJgKx3&#xA;WtU+szPf3dAIgRH34Kf2V+f44aAVicCy6xqDTTnjaw7sOwXsv098gPUU8k2tbj15Guq+lYW4Kwj7&#xA;IamzMR4DoMkChj+rao99PttAh/dp/E++VylbIBAYEsM8zawLuf6tC1beE7kdGfpX5DtlkQqafld5&#xA;DufOfmqDTwGXToCJ9TnG3GBTuoP8z/ZX7+2TAV9m29vBbW8VvAgighRY4o1FFVEFFUDwAGTQqYq7&#xA;FXYq7FXYq+Zf+cjfzBOq60vlawkrp+lPyvmU7SXdKcdu0QNP9avhkSUsO/KjyK3mvzGq3Cn9E2PG&#xA;a/bswr8EQPi5H3A5AlBL6kkeC1ti5ASGFdlUUAVRsAB+GQYscudXGj6fNr2sgi8uDxs7IHeND9iI&#xA;f5W3J2xtLGri+e7nM8z1lm+PidjT2HgMtDFjetvcXmox6dEfhFCwHidyW+QyEtzTIL5rajx6NaEh&#xA;CPUu5e9D4/5+GJHQKv8AMS+hp8MMTBIahTH3YAbfdjPkoY1lbJjnmXXfSVrG2b96dppB+yP5R7+O&#xA;TjFUh0bR9S1nVLbS9Nga4vrpxHDEvcnuSdgANyT0GWK+yPy28gaf5J8uR6dBxlvZaS6jdgbyzU7V&#xA;34J0QfxJyQCGV4VdirsVdirsVYr+Z3nKPyj5OvtWDD64R6Gnof2riQEJt3C7ufYYCr4uJur27qec&#xA;91cyb9Wd5JG+8lmOQS+svy58nxeVPK9tp/EfXZB62oSDflO4HIV8EHwj5VysliU/vEjKq8zBbeH9&#xA;5JXuV3WvsOv3YhDAfMWrx3kz3dwALeAH0lYA8V/q2WVQVIrAuyTapcKebqTEn8sS7gD54B3qVPTo&#xA;haW02p3Q/fzAuR3Ck1Cj54jbdS0k8Wl2zXF0eV7cnmyDqfBfYLjdLzSLUNSub5wZSAq14IBsK5WZ&#xA;WyAYt5h1/wCqg2tq3+kEfG4/YB/42wxili1lZXuoXsNnZwvc3ly4SGFAWd3Y7ADLFfWf5P8A5T2n&#xA;kvTfrl6Fm8xXiUu5geSwoTX0Yz7ftHufamTAQ9Gwq7FXYq7FXYq7FXy5/wA5IecTqvm2PQrd62Wi&#xA;rxkodmuZQGk/4BeK+x5ZEpYZ+WGo6Bp3nXTrzWw31WJ6xMoDKk52jdx14oTy270yBUvrNWV1DKaq&#xA;dwfEZBgxbzdqj8xp8ZooAaY+JO4X+OTiFYBqUi3V0YXbjY2lHun8W7JglukIrSdRN6krCH0o4yFj&#xA;PYjw+jJRNoIavvVnuYokH7qFhJJ/lON0T+JxKpDr68dQIaQyScQZK7AE/sqPCmVz5sgxLzDros0N&#xA;tbmt043b+QHv8/DGMbSxK2tru9u47a2je4urhwkUSAu7u5oAANyScsV9Wfk3+UNv5PsRqeqIk3mS&#xA;5X422ZbaNh/dRnpy/nYfIbdZgIenYVdirsVdirsVdirsVfB2vJqqa3fjVldNUNxK16sgIb1mcl6g&#xA;+LHIJR3kXQDr/m3S9L48opp1a4H/ABTH8cv/AAinAVL68ubiK2t5J5TSOMcmP8MrYPP9SW8M5ubq&#xA;Mxm5rKtenE+Hyy0IYbqNz+kb4WltRYAxLuNgxA+J2+QysmyyDILFIY7ONYRxiC1SvcdeR+fXLByQ&#xA;te4hgtnu32QAlfEg/wAWOC+qvOvMeu/VY3nYhrucn019/E+wysCyzYETNcTV+KWaVu1SzMx/EnLF&#xA;fUv5J/lBH5XtE13WYw3mK5T4ImAItI2/ZH/FjD7Z7fZHeswEPWMKuxV2KuxV2KuxV2KuxV8f/nn5&#xA;og1/8wr42wX6rpwFjHItPjaEn1HJHX4yQD4AZApZd/zjn5aPLUfMcybD/QrMnx2eZh/wor88hIoL&#xA;1mWmp6q1tWtnp5Uzr2eZlDKp9lU1wAsWFfmFqcs7T+hUxx0hDL2UV5nbxO2E7BQxGC2e10uWZ1In&#xA;u6QwL34k1P35ECglMNQ1AcrfTEYc3KR3DL0AJAKjJE9FAQfmzUkiHoluMMC+pMfo2H0DBM9FDyHU&#xA;7+W+vHuH2B2Rf5VHQZICmT3L/nHj8rVlMfnPWIaqpP6Ft3GxZTQ3JB8DtH7/ABfynJgK+hMkh2Ku&#xA;xV2KuxV2KuxV2KsS/NPzgvlPyVf6mjBb11+raeO5uJahSP8AUFXPsuAq+MYILi7uo4IVaa5uHWON&#xA;Buzu5oAPck5BL6/8qaDb+WfK9lpcdCLOH986j7cp+KVh/rOTTK2Cy7f9C6LJ8Vby5d3dx3mlJZm+&#xA;S9B8hhiN1YZlqEqvYpbrUxHGafVYmdT2Er1CfdSuQO5SxuSC8t35yI8bq2zkEfF12OVUQyYz511C&#xA;4MMcTMWa4YtK57hKbfjk4pYipAYEgMAalTWh9tqHJq+vPyU/MJfN/lySN7KKwudJMdvJDbgiD0yv&#xA;7oxqSSoopHGppTrkwUPQ8KuxV2KuxV2KuxV2KuxV8tf85GedRrPmtNCtX5WOh8o5CDs109PV/wCR&#xA;YAT2PLIkpQv5B+UjqfmV9buErZ6SKxE9GuXFE/4Bat7HjkJFBfRMnxMidq8j8l/tpkGLDfNV/wDW&#xA;NRMKmsdsOH+yP2v6ZZEISXJKk9rqKjVrtXKJAWC+o2x5gBQK9KfCcgDumkL5plkLwIB+54lww6En&#xA;b8BkZpDFtS0+zvbcpdD4EqwcGhXxIOQBpk8+k9P1G9Ovp1PDl1pXauXK+p/+cbfLzab5DbUpV4za&#xA;xcPMp7+jF+6jB/2Suw+eTCHq+FXYq7FXYq7FXYq7FWMfmT5xi8o+T77WCR9aVfRsI2/buZKiMU7h&#xA;d3PsDgKvitmubu6LMWnubh6kmrO8jn7yWJyCX1r+XvlVPLHlOy0sgfWgvrXrD9qeTd9+/HZB7AZW&#xA;SxKbaxqEOl6ddahKaCKOoB7kfZH0scUPELfXbqO+mu5R6puCS6kkd67YiVMqZSswa3E9CAU50PUC&#xA;lcttgwqMPcScK05MXkfsB1JPyGUc2abLql2ln6i26GwT91Fz3aoFAd+vvtk+LZFMJ8135g08xA/v&#xA;bklSe/Hqx/hgiN2TFtF0q61fV7LS7Qcrm+mjt4vANIwUE07CtTlqvunSNLtdK0qz0y0HG2soY7eE&#xA;d+MahRX323yaEXirsVdirsVdirsVdir5b/5yM87/AKZ81LoNrJysNEqktDs92/8AeH/nmKJ7HlkS&#xA;Upf+RPlD9MeZzq9ynKx0eki1GzXLf3Q/2FC/zA8chIoL6Syti8w/MXzF+kjbaPaqR++LSGuzUPBO&#xA;nbqcJCQh4rK2jhii9NWEShVZgCdu+W0hfcSRxwSPL/dqpL/KmJQxE28iQqyji98eMUfhHyH6zTKa&#xA;Zpn5gVLbTrW0ToD9/AUJ+ktk57CkB5X5unL6mI/2YowKe7fEf14w5Mmf/wDONfl5NR89S6nKtYtH&#xA;t2lSu49ab90n/Clz8xlgV9TZJDsVdirsVdirsVdiqRee/MTeW/KGq62iepLZwFoUPQyMQkdfbmwr&#xA;7YlXw/PPNcTyTzOZJpWLyO3VmY1JPzOVpfSH/OP1xBL5DaOK39F4LyWOaUGvrOVR+Z+SuE+jISYl&#xA;n+sXq2emXFwTxKoQp/yjsMAQ8d0gG+1We/YfAm0dffYfcuSjubSU+yxik2sTfWbuDTEagdg059ut&#xA;Pu3yEjZpIW3NuD5htF29NIwyqP2QnKn44CPUnogPMs/qagIwdoVA+k7n+GRmd1Dy/wAzf8du5/2H&#xA;/JtcnHkye8f84rWQTSNfvabzXEENf+MSM3/M3JxQ90ySuxV2KuxV2KuxV2Ksa/Mu90my8ha5carE&#xA;s9kLV1aBzQO7/BEtRQgmRloRuMBV8SAEkACpOwAyCX195C8uDy75S07SitJ4og913/fyfHJv3oxo&#xA;PbKyWJSX80dXMFgliho0u7fTUfqBx6KGOaNa/VtPiUijuOb/ADb+zLIiggo3JIYnbTH67c6jKOYg&#xA;JYCuxdjxQf5+GUg72zV9N1B7nWWuXSg9I1AOyqoG/wDn44QbKCEk1TUEH1m+lrwHKQgdadh/DI8y&#xA;l5zqF4by8luSvD1CDxrWlAB1+jLQKS+nf+cZLMw/l9cTkb3WozOpp+yscUf61OTCHreFXYq7FXYq&#xA;7FXYq7FXg3/OUPmr07TTPK8D/FOTfXoH8iVSFT7M3M/7EZGSXl35PeW/0555shIvK00//Tbio2pE&#xA;RwX6ZCv0VyBKC+qMrYvIfOF2NX82JAp5QRn6OI6/eF/HJVuAlWvL2K19LmCxlcIir1qcsJpCH12Q&#xA;R6bI3JkaoCFTQ1rglyUMblYRabDCPtTMZpPkPhUfrOVdGSIsB6OkXtz+1JSBPp+1+BwjkpYr5pl4&#xA;aPKP9+Mq/jX+GCPNLGPLmh3Wva7Y6NasqXF/MsEbvXipY/abiCaDr0y5X2l5G8qW/lTytY6DBIZx&#xA;aK3qTkcS8kjF3am9ByY0HhkwhPcVdirsVdirsVdirmYKCzEBQKknoBir4k/MjzS3mfzrqmrhi1vL&#xA;KY7Ova3i+CLbtVV5H3OQKXs//OP3lr9H+VptYmSlxq0lYyeoghqqfKrlz7imVyLEvQtfvZLTSLmW&#xA;JgtwyFLcn/fjCin6OuAC0PI/L2nTQSzSzoyNQLHyBFQ3xchWmxFKHJQCSmNxZvNf20zU9GAM1O5c&#xA;0pkiN0IXzJGjacXZiCjAoB0JO2/0VwT5KGLcHZGkpVVIUnwqDT9WVMkwuZAmiWcI6yu8jf7ElRkj&#xA;yXqw/wA4tTTol8ZgfuVsYc0ov8jbdZ/zV0FGpQPPJuK7x20rj8Vy0K+xcmh2KuxV2KuxV2KuxVgP&#xA;54eav8Pfl7ftE/G81IfULXxrMCJGH+rEG38aYCr5J0bS7nVtWs9MthWe8mSCPwBdgKn2HU5BL7J0&#xA;zT7bTdOtdPtV429pEkMS/wCTGoUfqytgwxdabXvMV5Zzuqafpjux41A9KKod2O9akUwxKkIC6vmv&#xA;Znu3HAS/Eqnbin7C/wCxWmTiNlQkV7ZzGkUyO3TiGFfuw2EJP5qnokEA7ku30bD9ZyGQsooc25g8&#xA;ts5HxXDqx+Vfh/Vgr0r1Sd5ZHVFY1WMcUHgCS36zkEse85A/o+E9hKB96nJQSj/yHdE/NfQixoCb&#xA;la+7WkwH4nLQr7CyaHYq7FXYq7FXYq7FXy//AM5K+av0l5vg0KF622jRfvQDsbicB36deKcB7GuR&#xA;KUD/AM496NBd+bZ9RmKk6dATAhYBvUm+DkF6kBOVfmMhJBfRbhijBTRqHiT2OQYvMIdDm07yzehJ&#xA;R9a1ib0vWavIW8Zq/wBLNUHxw8KbUjbKbQ21TwMfp8u9Kca5ZTFIh5WmWYFbgcAa8qEMPllfAytZ&#xA;dwSaprbRr/cxUR3HQKNzv4k1xIsryCL1/UI7eAWUSqWYDkCAQqjpse+GZ6KAxnK2STebI+ekFv8A&#xA;fcit+tf+NslDmqC/K6/+ofmJ5duCaL9ehiY+CzN6RPbs+WhX2xk0OxV2KuxV2KuxV2Kvg/zBd6ld&#xA;67qF1qismozXMr3aOCCsrOS60PTidqZBKbflobgeftB+ru0bm8iDFTQlCf3i/JkqDgPJS+uCQBU9&#xA;B1ypg858zapDCilfjgtIlReG4Zjux/4I5byFqwux1mT9ItcXMjlGBHpJuDXoAPbKxLdJCc3V3cXd&#xA;m66erCYkK/McCqmu45UyZNjZCCF1Bolr9XB9a8f4nA+yCR3wXwp5pBNNJNK0sh5O5qxyspWYpQer&#xA;wevplzEBUlCVHuvxD8RhHNWA288tvPHPEeMsTK8beDKag/flqvvDRdTh1XR7HU4P7m+t4rhKb7So&#xA;Hp+OWIRmKuxV2KuxV2KuxV4j/wA5PWWkw+WbG7Syt11S6v0SS+EUYnaJIZKoZKc+NePftkSryL8m&#xA;bb6x+ZOjqRVY2mlboacIJGHX/KpkJclL6B89+c9J0DSp45byCPUZk429s7qHIc8S/GvKgFd8gink&#xA;Z1vUJXE3rllO4UU4EH2GxGDiKaRt5rUC0XT4Uham8wRQRXqF2yRl3IpZY+YbqBZFmYzVU+nXqG9z&#xA;4YBNaSuSR5HaRyWdjVmPcnIslFri3WT02lQSfyFgD92KqnXFVOW4t4qCWRI+XTmwFfvxV55fwpBe&#xA;TRIwaNWPBgagqd13HtlwV9Sf844+ZxqvkT9GSPyutFlMBBNT6MpMkR+X2lH+rkwh6rhV2KuxV2Ku&#xA;xV2KvBf+cq7vjaeXLQH+8kupWG3+61iUe/7ZyMkh4p5P81XPljVm1W0hSa7WGSK39TdUeQceZHei&#xA;12qMiQqW6lqV/qd9NfX873N3O3KWaQ1Zj/Z2HbFWTeV9QiGlSLM4UWpJJJ6I24/GuVyG6pRq/mO6&#xA;vJCkDNDbDYKpoze7EfqyQiqnpOv3dlMBI7S27H442Nae6174TG1ZJqvmC2tLVXhYSzTLyhUdKH9p&#xA;vbKxFWEyyySyNLIxaRzVmPUk5aqItdU1C02t52Rf5a1X/gTUYkKp3d5c3cxmuHLyHavQAeAAxAVR&#xA;xVkHkvz15i8namb/AEWZUaQBLmCRQ8UqA14uOv0qQffDavqn8sfzT0fzzp7emotNYtlBvNPZqkDp&#xA;6kZ25Rk/SDsexMgUM3wq7FXYq7FXYq+bv+cp7lm8xaJbb8YrOSQeFZJeJ/5NjIyS8RVSzBRuSaAf&#xA;PIqj77R5rS1jmc8mY0kA6LXpkjGmEZ2UAHcKyhiFanIA7GnSuRZoiwsJryb049lG7ueijJAWiUqb&#xA;1Gwksrgxtuh3jfxH9cSKRGVoXc+/hkWTINI0MKvrXaBmYfBEwrQHuffLYx72mc+5Xn8u2EhrHyiP&#xA;gpqPuOEwCBkKlH5ZtwwMkzMPAAL/AFwcCfETNbK0WH0RCnp/ykA/ryVBhxFJNZ0VIYzc2wpGP7yP&#xA;rT3GQlFthO9i35K8z3fljzRp+tWzEfVZVM6D/dkLbSof9ZCcgGx9yRukiLIhDI4DKw6EHcHJobxV&#xA;2KuxV2KvOfz48taTqnkDUdQubZJNQ0uL1rG5JKvHV19QAjqGXsdsBV8kQECeMnoGWv35FJZzqWnm&#xA;ktpcCgYUr+phl5Dig0xVdA1Az+mUASu8tRSnj45VwFv8QMjs7OG0hEUQ26sx6k+JywCmkm2ryygu&#xA;4fSlG3VWHUHxGJFqDSHsdEtLWT1BWSQfZZqbfIYBEBMpkphkmLsVdirsVUbwKbScN9n02r8qHAeS&#xA;RzYTlDkvvLQUZNC05HFGW1hDA9iI1ByxCOxV2KuxV2KpN50sDqHk/XLECrXNhcxIOvxNEwX8cVfD&#xA;GVpe46bZ2+ueVbKWeIR3EkCkSUHIOBTlXwalcvB2ceQ3YvdaPf27lTEXAJFUHLp7DfCxVLTQ7qb4&#xA;pf3K9qirH6MKq8Pl2TmfWlHDtwrX8Riq0eXbjkaypx/ZO9T8xiqj+gr/AJUotP5uW39cVXz6FNFb&#xA;GUOHdd2QDanscVSzArsVS7XboQ2DJX45vgUe37X4ZGZ2ZwFlC/l/5cfzJ5y0nRwvKK4uFNz7QR/H&#xA;Md/8hTlQb32/k0OxV2KuxV2KuIrsemKvhfzhoj6F5q1XSGFBZXUsUfvGGJjb6Uocgl6n+XGrLf8A&#xA;li3jLVmsq28g70XdPo4ED6MtgdmiY3Tq+sGlf1Iqcj9oHauTYISGwlaYJKCi77/LwxVHrptoq0Kl&#xA;ie5JriqW3tuIJuCmqkVFeuKqGKFG7uI7e3eV+gGw8T2GKWI4FWsyqpZiAqipJ6ADFWJarfm8uiw/&#xA;uk+GMe3j9OUyNuRGNB9Df842eQZNP02bzZfxlLnUU9HTlbYrbAgtJT/ixlFPYeBxAS9tySuxV2Ku&#xA;xV2KuxV86f8AOTfkqSHUbXzbaxkwXSra6iRvxlQfunP+sg41/wAkeORKXlXkvzQ+gar6r1eynAS7&#xA;jHWg6OPdf64xNMZRt7daXdtd28dzbSLLBKA0cimoIOXNCrirsVSvVLcq4mrUMaEHsaYUJLeanbWo&#xA;IY8pO0a9fp8MVY9e3093JykNFH2EHQYFQc88MEZklcIg7nElQLY1qusvd/uoqpbjr4t88qlK2+MK&#xA;Zl+Tn5V3XnLWFu72No/Ltk4N3NuPWYb+hGfE/tEdB7kZEBm+uIYYYIY4YUWOGJQkcaAKqqooFAHQ&#xA;AZNC/FXYq7FXYq7FXYqgdc0XTdc0m60rUoRPZXaGOaM+B6EHsyncHscVfHv5k/lprPkjVjBchp9M&#xA;mYmw1ELRJF68W7LIB1X6RtkCEpR5e82azoUhNnLygY1ktpPijb3p2PuMIlSDEF6Bp35taNMgF9by&#xA;Wsncr+8T7wA3/C5MTDUcZRU35laKFrDIkhO4FSo+nkBkuIMeEpDqfng3mz3aRx9kjP8AEVOPEF4S&#xA;kkvmHTlrRmkP+Sp/42pg4wkYyl9z5mmaot4gg/mb4j93TImbMY0pnuZ7h+czl28T2+WQJZgU9I/K&#xA;78k9a83SxahqKvp3l6oY3DCktwP5YAex/nO3hXEBL6p0nSdO0jTrfTdNt0trK2QJDCgoAB+JJO5J&#xA;3JyaEXirsVdirsVdirsVdirsVQmraRpmr2Eun6nax3llOKSwSqGU+B9iOxG4xV4V5z/5xiYySXXl&#xA;K+VUNSNNvSdvaOcA19g6/NsjSXk+tflf+YGjOy32hXYRes0MZnip4+pDzX8cFKxqaCaF+E0bRuOq&#xA;uCp+44FajjkkcJGpdz0VQST36DFU80zyD521NgLHQr6YHpIIJFj+l2AQfScNKzvQP+cbPPuoFX1N&#xA;7bSIT9oSuJpaeyRcl+9xhpXrfk7/AJx/8j+X3S5vEbWr9KESXYHoqw7rAPh/4MthpD0wAAAAUA2A&#xA;GFXYq7FXYq7FXYq7FXYq/wD/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:51563476-b905-a449-8985-5e47d113bcc0</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:51563476-b905-a449-8985-5e47d113bcc0</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:eb1e587b-8252-1341-b1a4-c04e2a84e38a</stRef:instanceID>
            <stRef:documentID>xmp.did:eb1e587b-8252-1341-b1a4-c04e2a84e38a</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:5f3a576b-319d-1d4c-9c4a-a674db0a00ca</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:45:54+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d8c6b91f-c7f9-594f-8f71-1b89fc174d40</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:55:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b121c68a-5eec-2441-b953-3fe32207375b</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:53:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:97453272-0c6b-a540-84f1-d7dfa92fc376</stEvt:instanceID>
                  <stEvt:when>2018-02-19T15:13:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:267bd947-ef67-bc4f-8d11-6dc564cc5c0c</stEvt:instanceID>
                  <stEvt:when>2018-02-19T16:27:37+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:eb1e587b-8252-1341-b1a4-c04e2a84e38a</stEvt:instanceID>
                  <stEvt:when>2018-02-19T17:28:39+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:51563476-b905-a449-8985-5e47d113bcc0</stEvt:instanceID>
                  <stEvt:when>2018-02-20T10:06:53+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>418.408128</stDim:w>
            <stDim:h>751.182250</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -751.182 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 751.182 li
418.408 751.182 li
418.408 0 li
cp
clp
282.842 622.855 mo
277.962 581.543 248.047 574.007 214.368 583.099 cv
202.592 586.279 202.448 588.444 190.386 585.472 cv
185.21 584.197 181.336 579.301 175.48 578.763 cv
167.496 578.032 160.513 582.286 154.476 586.757 cv
149.825 590.203 133.059 620.538 123.653 597.883 cv
120.143 589.422 111.171 587.545 104.308 593.414 cv
96.639 599.969 89.5423 606.862 84.1126 614.447 cv
78.2444 606.299 70.6058 599.045 61.2513 592.733 cv
55.2845 588.706 45.8108 593.272 44.5989 600.118 cv
40.4397 623.596 42.3079 645.66 50.1321 665.783 cv
50.1214 676.705 56.3616 688.554 64.8528 699.099 cv
67.4573 704.313 70.4681 709.023 74.014 712.921 cv
74.8157 715.261 76.5677 717.398 79.553 718.901 cv
83.8802 721.076 88.4554 723.023 93.1995 724.78 cv
94.638 725.681 96.0247 726.494 97.3196 727.171 cv
99.5999 728.365 101.906 728.65 104.063 728.325 cv
181.032 750.473 294.486 721.366 282.842 622.855 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.529412 .592157 .607843 rgb
f
399.849 56.6347 mo
396.272 30.9232 378.964 16.1659 352.698 23.0868 cv
343.513 25.5087 334.272 29.1229 325.028 33.1337 cv
319.085 35.1947 313.44 37.8065 307.993 40.8002 cv
299.092 44.8681 290.22 48.8715 281.429 52.1063 cv
261.476 59.452 245.61 68.8456 231.639 84.9003 cv
229.972 86.8168 229.021 88.8939 228.587 90.9765 cv
212.544 102.096 198.341 114.647 184.576 131.135 cv
164.754 154.88 106.714 213.627 130.733 246.933 cv
129.652 249.77 128.781 252.629 128.03 255.549 cv
125.508 256.516 123.243 258.483 121.721 261.843 cv
104.032 300.885 86.347 339.926 68.6595 378.968 cv
66.8265 383.014 67.4036 387.341 69.3157 390.936 cv
64.5706 406.607 59.8226 422.277 55.0774 437.949 cv
54.1448 441.026 54.2933 443.681 55.1331 445.902 cv
53.1067 449.829 51.3216 453.806 49.6976 457.88 cv
35.886 480.745 15.8265 511.085 30.7103 527.124 cv
31.3714 527.836 32.1019 528.323 32.8304 528.817 cv
31.2522 535.792 30.8772 540.158 29.8382 551.412 cv
29.6849 553.06 29.93 554.569 30.4524 555.939 cv
29.1595 559.927 27.6448 563.87 25.8343 567.754 cv
19.6272 582.992 41.3196 595.687 48.8196 580.247 cv
51.22 574.374 54.1028 568.793 57.469 563.503 cv
61.6517 573.538 64.0774 584.146 64.2757 595.475 cv
65.1868 605.865 79.2747 613.426 86.8792 604.025 cv
90.9935 598.941 120.201 557.197 131.51 584.441 cv
134.469 591.567 143.607 597.159 150.958 591.655 cv
166.731 579.849 171.923 572.455 193.566 574.031 cv
198.302 574.374 202.538 578.751 207.605 578.542 cv
221.186 577.978 223.343 573.126 235.015 568.138 cv
241.011 565.575 246.612 558.83 243.645 551.773 cv
227.549 513.473 231.732 485.399 232.137 445.663 cv
232.143 445.14 232.054 444.689 232.015 444.2 cv
232.455 443.546 232.885 442.868 233.25 442.068 cv
237.864 432.361 242.199 422.532 246.255 412.58 cv
248.285 407.797 247.478 403.275 245.2 399.787 cv
252.742 364.079 260.912 328.736 267.024 292.532 cv
268.289 285.025 262.528 278.517 256.145 276.65 cv
256.259 276.239 256.372 275.825 256.49 275.413 cv
289.865 245.628 323.354 214.968 347.844 177.789 cv
373.57 138.729 407.025 108.208 399.849 56.6347 cv
cp
.65098 .67451 .65098 rgb
f
350.42 59.3393 mo
349.802 56.185 345.286 57.3822 345.159 60.2182 cv
344.712 70.0409 341.581 79.8759 338.359 89.244 cv
335.516 87.7392 331.72 88.0873 329.601 91.7689 cv
323.246 102.811 314.79 112.807 311.996 125.496 cv
311.286 128.725 314.741 131.039 317.528 129.48 cv
329.544 122.763 335.461 110.001 341.272 98.1122 cv
342.028 96.5614 342.06 95.1181 341.781 93.7953 cv
351.13 84.5429 352.929 72.14 350.42 59.3393 cv
cp
.478431 .486275 .407843 rgb
f
365.166 25.5404 mo
359.186 24.1317 355.84 28.8422 355.882 33.4159 cv
355.76 33.4037 355.638 33.3915 355.516 33.3788 cv
355.174 49.6864 366.92 63.2738 361.284 80.0727 cv
358.666 87.8744 353.786 94.4877 349.831 101.361 cv
348.985 101.878 348.154 102.508 347.376 103.392 cv
338.154 113.864 328.726 124.134 318.802 133.947 cv
310.264 142.388 300.564 150.432 293.367 160.128 cv
285.692 165.388 291.142 177.426 299.417 178.38 cv
296.841 182.16 294.787 186.086 294.137 190.225 cv
294.021 190.966 294.242 191.737 294.589 192.451 cv
260.213 206.505 242.84 250.902 218.056 278.384 cv
216.057 280.438 214.114 282.527 212.071 284.556 cv
202.414 294.16 216.609 308.029 226.769 300.615 cv
225.696 303.398 224.896 306.24 224.66 309.017 cv
223.45 311.832 222.338 314.704 221.267 317.681 cv
217.692 327.622 231.796 333.682 238.307 327.189 cv
235.88 332.37 233.543 337.719 231.407 343.094 cv
228.155 337.278 219.138 333.766 213.691 342.049 cv
205.304 354.799 200.747 366.714 196.405 381.151 cv
195.028 385.724 196.159 389.276 198.528 391.663 cv
196.576 398.388 194.712 405.136 192.816 411.875 cv
190.688 409.038 185.078 408.981 183.659 413.496 cv
179.261 427.468 174.53 441.379 169.114 455.008 cv
169.946 451.973 170.76 448.936 171.713 445.916 cv
171.955 445.15 170.698 444.649 170.384 445.404 cv
168.98 448.789 167.457 452.099 165.92 455.397 cv
170.065 436.888 175.482 418.787 183.407 400.851 cv
184.523 398.324 183.161 396.054 181.255 395.092 cv
184.001 389.187 186.572 383.187 189.369 377.472 cv
191.086 373.968 193.018 370.657 194.835 367.248 cv
200.138 364.311 201.512 358.209 203.01 352.373 cv
206.619 346.219 210.309 340.115 214.185 334.015 cv
217.281 329.145 210.046 324.534 206.52 327.646 cv
206.588 326.421 206.651 325.222 206.731 323.959 cv
206.84 322.227 204.39 322.251 203.901 323.665 cv
201.202 331.435 197.48 338.754 194.725 346.57 cv
194.601 346.925 194.442 347.29 194.304 347.649 cv
194.916 344.729 195.387 341.76 196.099 338.988 cv
197.861 332.132 199.992 325.399 202.373 318.736 cv
203.959 314.294 198.083 311.984 195.086 314.488 cv
201.43 298.349 207.732 281.931 214.637 265.989 cv
221.445 260.719 226.526 252.172 231.893 245.816 cv
239.211 237.148 246.742 228.666 254.424 220.317 cv
256.577 217.977 256.126 215.214 254.614 213.239 cv
260.996 206.237 265.906 197.843 271.201 189.893 cv
280.845 175.422 291.114 161.357 300.486 146.706 cv
301.866 144.548 298.908 141.803 296.844 143.285 cv
296.24 143.717 295.638 144.149 295.035 144.581 cv
294.56 144.921 294.341 145.525 294.331 146.108 cv
283.667 158.537 273.609 171.479 263.091 184.029 cv
253.904 194.994 243.492 205.35 239.692 219.525 cv
239.617 219.807 239.723 220.041 239.739 220.304 cv
234.164 226.852 228.568 233.382 223.216 240.117 cv
217.217 247.668 208.549 255.843 206.556 265.535 cv
206.378 266.394 206.645 267.081 207.052 267.658 cv
200.132 283.089 195.46 298.144 193.459 315.709 cv
193.43 315.962 193.613 316.182 193.819 316.298 cv
193.774 316.42 193.686 316.49 193.649 316.621 cv
191.566 323.86 189.775 331.165 188.411 338.576 cv
187.335 344.432 185.57 350.923 187.174 356.76 cv
187.584 358.253 189.27 358.46 190.351 357.681 cv
189.921 359.245 189.702 360.808 189.767 362.356 cv
187.771 366.376 185.858 370.42 183.745 374.415 cv
176.934 387.291 168.215 400.348 165.075 414.671 cv
164.815 415.862 165.733 416.851 166.779 417.099 cv
165.415 420.359 164.122 423.644 162.87 426.947 cv
162.51 425.806 161.566 424.878 160.013 424.926 cv
156.089 425.048 156.272 431.148 160.203 431.025 cv
160.672 431.011 161.075 430.901 161.429 430.737 cv
153.87 451.546 148.694 473.167 147.381 495.357 cv
147.283 497.043 147.857 498.309 148.782 499.183 cv
147.073 503.727 145.786 508.42 145.391 513.457 cv
145.38 513.586 145.42 513.684 145.422 513.806 cv
144.664 514.016 143.924 514.411 143.294 515.273 cv
141.155 518.202 138.778 520.927 136.424 523.682 cv
134.504 525.931 132.139 528.144 132.238 531.286 cv
132.269 532.296 133.023 533.259 134.019 533.483 cv
140.44 534.92 146.716 525.987 149.965 521.541 cv
151.194 519.861 151.102 517.986 150.36 516.471 cv
150.813 516.311 151.242 516.107 151.593 515.803 cv
165.054 504.17 169.751 483.743 175.946 467.592 cv
178.484 460.975 180.825 454.304 183.154 447.626 cv
182.001 452.071 180.772 456.494 179.662 460.952 cv
178.595 465.24 179.925 468.787 182.372 471.223 cv
181.598 476.91 180.992 482.675 180.533 488.56 cv
180.109 494.037 184.19 496.907 188.678 497.257 cv
188.622 497.565 188.563 497.872 188.507 498.18 cv
185.562 498.574 182.607 500.074 180.333 503.237 cv
174.822 510.901 169.423 518.642 163.967 526.341 cv
151.485 532.922 143.608 542.236 137.083 553.691 cv
136.097 554.107 135.154 554.62 134.306 555.276 cv
134.282 555.263 134.249 555.259 134.223 555.246 cv
133.556 554.918 133.015 554.709 132.533 554.556 cv
130.568 546.279 122.504 541.239 114.299 545.944 cv
107.163 550.036 101.16 554.522 95.9769 559.541 cv
95.3538 556.169 94.5061 552.849 93.2464 549.634 cv
91.4231 544.983 87.1311 542.603 82.1936 543.806 cv
77.5882 544.93 73.0667 546.915 68.6214 549.286 cv
65.9964 547.79 62.5159 547.686 59.8997 549.293 cv
50.7044 554.94 44.7308 560.245 38.2532 569.117 cv
33.0159 576.288 40.0491 587.114 48.7054 581.827 cv
61.8558 573.794 68.6175 569.062 72.0052 569.587 cv
67.5745 573.584 66.1272 579.592 72.1692 585.678 cv
73.0999 586.617 74.0188 587.309 74.931 587.896 cv
74.8382 590.327 74.7327 592.925 74.6175 595.902 cv
74.2024 606.67 91.4212 611.16 95.677 600.909 cv
99.9319 590.663 106.412 582.035 114.593 575.121 cv
116.787 577.453 119.847 579.553 124.321 582.188 cv
125.773 583.044 127.824 582.827 129.879 582.339 cv
130.644 583.231 131.562 583.942 132.631 584.424 cv
134.507 588.45 138.024 593.377 137.935 593.283 cv
144.735 600.347 157.783 595.501 159.252 586.305 cv
170.499 583.492 164.086 580.854 162.174 571.394 cv
162.185 571.387 162.195 571.38 162.205 571.373 cv
164.703 583.017 179.718 580.569 184.485 572.176 cv
185.334 572.12 186.196 572.108 187.091 572.216 cv
189.367 572.495 191.302 573.419 193.531 573.855 cv
196.858 574.504 199.859 574.171 202.635 573.124 cv
204.112 573.201 205.593 573.276 207.111 573.401 cv
207.174 573.406 207.23 573.374 207.293 573.378 cv
210.454 575.614 215.628 576.106 218.655 573.754 cv
217.48 571.145 li
220.547 572.732 224.155 572.577 227.067 570.938 cv
232.118 573.52 238.318 570.458 239.709 565.063 cv
242.893 552.73 234.914 539.549 233.969 526.952 cv
233.146 516.013 235.302 504.876 228.68 495.824 cv
231.863 472.175 231.807 448.183 230.856 424.098 cv
236.155 426.816 244.196 425.431 246.761 418.055 cv
247.214 416.75 247.548 415.467 247.823 414.191 cv
253.053 395.273 261.615 374.775 259.064 355.376 cv
258.84 353.681 257.78 352.04 256.367 350.904 cv
262.082 338.6 266.934 325.89 269.622 313.122 cv
270.01 311.282 269.865 309.543 269.398 307.934 cv
269.202 303.818 268.004 299.878 264.948 296.397 cv
262.49 293.597 257.724 292.849 254.327 293.941 cv
253.976 294.055 253.536 294.222 253.142 294.355 cv
253.155 294.173 253.132 293.991 253.138 293.809 cv
254.163 292.027 255.167 290.25 256.278 288.445 cv
257.538 286.402 257.957 284.47 257.8 282.726 cv
258.598 281.004 259.336 279.259 260.086 277.516 cv
262.799 272.472 265.502 267.423 268.204 262.374 cv
282.984 246.089 298.009 230.033 312.865 213.824 cv
315.484 211.124 318.006 208.335 320.608 205.616 cv
324.179 202.828 327.315 199.251 330.219 195.428 cv
337.91 187.276 345.666 179.18 353.287 170.973 cv
356.793 168.115 358.019 164.45 357.659 160.798 cv
358.189 160.166 358.719 159.537 359.249 158.906 cv
365.356 153.725 369.95 148.196 374.306 140.61 cv
375.49 138.549 375.931 136.442 375.841 134.402 cv
375.971 134.207 376.117 134.019 376.247 133.823 cv
385.347 120.121 391.37 105.338 392.451 90.4511 cv
393.908 84.8065 394.785 79.3427 394.801 74.6371 cv
394.872 55.7968 385.33 30.2909 365.166 25.5404 cv
cp
f
128.34 534.853 mo
122.974 532.997 116.721 532.109 111.031 532.454 cv
109.825 532.528 108.252 532.728 106.662 533.096 cv
107.711 531.154 108.742 529.202 109.801 527.274 cv
112.95 521.544 104.551 514.992 100.28 520.39 cv
97.6976 523.653 95.1126 526.92 92.6067 530.243 cv
90.6458 530.378 88.9749 531.502 88.1341 533.52 cv
86.7884 536.753 88.7649 539.127 91.1419 539.831 cv
93.1761 542.452 97.2454 543.339 100.409 541.698 cv
101.917 543.249 105.041 542.911 107.113 542.138 cv
109.963 541.076 112.442 539.284 115.385 538.404 cv
119.477 537.181 123.342 537.517 127.451 538.515 cv
129.852 539.099 130.59 535.63 128.34 534.853 cv
cp
f
157.67 339.621 mo
157.489 339.453 157.497 339.502 157.67 339.621 cv
157.67 339.621 li
cp
f
90.2669 492.371 mo
90.3128 492.382 90.3401 492.415 90.3851 492.428 cv
90.4446 492.425 90.4407 492.413 90.2669 492.371 cv
cp
f
161.573 340.441 mo
160.579 340.3 159.582 340.01 158.595 339.91 cv
158.085 339.858 157.825 339.728 157.67 339.621 cv
157.764 339.707 157.878 339.823 158.046 340.063 cv
156.696 338.134 154.985 337.194 153.257 336.954 cv
153.442 336.577 153.611 336.192 153.797 335.814 cv
156.248 330.851 148.782 326.757 146.227 331.7 cv
142.867 338.202 139.611 344.731 136.451 351.287 cv
135.393 349.318 133.464 347.868 131.004 348.147 cv
125.394 348.784 120.284 351.573 115.084 353.655 cv
114.576 353.859 113.51 354.1 112.702 354.415 cv
112.731 353.212 112.788 352.08 113.1 350.767 cv
114.542 344.643 105.548 340.887 102.636 346.734 cv
99.2103 353.613 97.5931 363.727 106.038 367.77 cv
110.703 370.004 115.59 368.463 120.149 366.8 cv
123.987 365.399 128.064 363.896 131.617 361.713 cv
118.822 389.439 108.056 417.768 100.103 447.113 cv
99.7894 446.975 99.5657 446.747 99.1966 446.659 cv
98.1614 446.407 96.6487 446.548 95.6341 446.094 cv
94.7405 445.695 93.9817 444.929 94.4769 443.766 cv
97.6321 436.35 87.1976 430.304 83.2796 437.679 cv
78.5853 446.514 83.1907 458.003 93.345 459.987 cv
94.3909 460.191 95.5872 460.163 96.764 460.053 cv
94.2601 470.528 92.0989 481.127 90.387 491.898 cv
90.3499 492.138 90.4817 492.283 90.512 492.489 cv
90.4632 492.475 90.4339 492.441 90.3851 492.428 cv
90.053 492.441 86.8011 491.954 87.7815 492.177 cv
86.803 491.954 85.6302 491.69 84.6985 491.323 cv
84.6507 491.304 84.0472 490.902 83.8968 490.819 cv
79.9749 487.707 80.1194 482.195 80.2386 477.613 cv
80.4095 471.019 70.7933 470.536 69.0921 476.455 cv
66.8694 484.186 66.0354 493.033 70.4876 500.186 cv
74.6888 506.936 83.5667 509.432 90.7044 506.415 cv
93.2024 505.358 95.1673 503.348 95.638 500.692 cv
95.722 500.514 95.844 500.201 96.0472 499.585 cv
96.2181 499.124 96.3245 498.649 96.3694 498.16 cv
96.5257 496.818 96.4583 495.621 95.6448 494.471 cv
95.0794 493.675 94.4456 493.333 93.7796 493.13 cv
93.8577 492.994 93.9983 492.956 94.0511 492.787 cv
109.343 444.179 125.756 395.722 147.383 349.337 cv
151.524 354.947 159.35 355.931 164.804 351.299 cv
168.427 348.224 166.209 341.094 161.573 340.441 cv
cp
f
132.188 439.405 mo
130.445 446.257 128.859 453.099 127.424 460.024 cv
126.954 462.294 130.476 463.922 131.41 461.559 cv
134.097 454.765 136.611 447.963 138.992 441.056 cv
140.442 436.85 133.313 434.982 132.188 439.405 cv
cp
f
223.461 185.474 mo
212.941 201.441 199.123 217.763 191.609 235.351 cv
190.885 237.044 192.953 238.844 194.349 237.332 cv
207.469 223.128 216.719 203.762 227.09 187.445 cv
228.525 185.188 224.908 183.279 223.461 185.474 cv
cp
f
278.319 133.002 mo
276.296 134.984 274.402 137.02 272.5 139.053 cv
272.323 139.106 272.138 139.13 271.993 139.295 cv
271.449 139.916 270.97 140.582 270.43 141.207 cv
266.67 145.356 263.224 149.654 259.93 154.034 cv
254.051 161.493 248.303 169.055 242.596 176.706 cv
241.557 178.1 242.358 179.78 243.53 180.368 cv
238.965 189.383 235.048 198.844 231.814 208.899 cv
231.141 210.996 234.248 212.696 235.63 210.965 cv
253.769 188.253 267.026 162.086 285.38 139.639 cv
289.312 134.83 282.809 128.598 278.319 133.002 cv
cp
f
307.522 80.5634 mo
297.905 86.6068 290.056 95.2528 281.802 103.016 cv
277.513 107.049 284.234 113.379 288.472 109.284 cv
296.617 101.418 305.447 94.0229 311.95 84.7255 cv
313.826 82.0429 310.004 79.0028 307.522 80.5634 cv
cp
f
214.48 223.653 mo
206.31 232.8 198.761 242.5 191.502 252.382 cv
185.997 259.877 177.64 268.462 180.52 278.304 cv
181.225 280.719 184.149 282.4 186.582 281.502 cv
195.647 278.156 197.897 267.974 202.008 259.979 cv
207.479 249.342 214.152 239.686 221.543 230.289 cv
225.339 225.464 218.7 218.929 214.48 223.653 cv
cp
f
205.399 415.437 mo
198.472 434.803 192.463 454.055 193.87 474.778 cv
193.947 475.909 195.487 476.042 195.817 474.979 cv
201.768 455.769 204.388 435.881 210.108 416.58 cv
211.01 413.538 206.425 412.563 205.399 415.437 cv
cp
.65098 .67451 .65098 rgb
f
220.89 346.903 mo
209.046 365.501 206.116 385.475 203.329 407.074 cv
202.522 413.341 211.572 415.881 213.1 409.443 cv
218.003 388.79 225.034 369.553 226.787 348.306 cv
227.068 344.924 222.382 344.559 220.89 346.903 cv
cp
f
263.587 220.383 mo
248.327 234.967 230.307 259.881 232.01 282.044 cv
232.343 286.394 238.397 287.072 239.617 282.833 cv
245.85 261.186 261.876 244.571 267.25 222.365 cv
267.776 220.196 265.103 218.935 263.587 220.383 cv
cp
f
333.736 92.9281 mo
308.789 131.662 283.51 170.14 258.841 209.047 cv
258.12 210.183 259.824 211.35 260.716 210.403 cv
271.144 199.325 280.868 187.911 290.098 176.194 cv
290.653 176.189 291.194 175.967 291.602 175.426 cv
298.109 166.769 304.426 157.707 311.638 149.629 cv
318.362 142.096 323.518 137.097 326.881 127.424 cv
327.232 126.414 326.452 125.593 325.537 125.352 cv
331.161 116.204 336.582 106.874 341.778 97.2997 cv
344.626 92.0551 336.888 88.0312 333.736 92.9281 cv
cp
f
258.32 176.405 mo
241.661 203.466 219.356 232.437 212.388 263.738 cv
211.703 266.806 215.681 269.177 217.882 266.711 cv
239.297 242.729 251.201 209.067 266.678 180.949 cv
269.654 175.543 261.508 171.225 258.32 176.405 cv
cp
f
146.648 458.393 mo
143.721 467.125 140.794 475.858 137.867 484.59 cv
135.583 491.41 132.391 498.596 136.136 505.278 cv
137.186 507.151 139.6 507.374 141.331 506.468 cv
147.949 503.009 149.242 494.455 150.996 487.775 cv
153.325 478.897 155.658 470.02 157.987 461.143 cv
159.921 453.774 148.996 451.384 146.648 458.393 cv
cp
f
250.589 127.591 mo
248.273 128.177 245.616 128.721 243.3 128.666 cv
243.076 128.395 242.855 128.124 242.631 127.853 cv
242.049 127.298 241.269 126.7 240.573 126.321 cv
238.448 125.164 236.393 125.265 234.099 125.673 cv
229.179 126.551 228.439 133.245 231.471 136.436 cv
231.737 136.905 232.001 137.368 232.102 137.531 cv
232.775 138.637 233.616 139.704 234.596 140.556 cv
236.868 142.534 239.859 143.845 242.867 144.032 cv
249.355 144.433 253.613 140.423 256.97 135.377 cv
259.784 131.15 254.794 126.529 250.589 127.591 cv
cp
.478431 .486275 .407843 rgb
f
209.545 177.825 mo
205.715 176.25 200.577 175.543 195.971 176.015 cv
195.716 173.416 196.317 170.665 196.855 168.194 cv
197.333 166.003 193.985 164.492 193.034 166.722 cv
191.282 170.842 190.394 175.248 188.463 179.287 cv
187.304 181.713 188.079 184.375 190.384 185.783 cv
195.274 188.771 202.916 189.755 208.461 188.752 cv
213.349 187.868 214.108 179.703 209.545 177.825 cv
cp
f
159.94 286.206 mo
158.805 281.047 153.071 279.312 147.489 278.77 cv
147.765 276.754 148.022 274.733 148.309 272.726 cv
149.283 265.912 140.345 263.84 138.015 270.23 cv
136.395 274.675 134.589 279.098 133.279 283.644 cv
132.017 288.033 135.831 291.679 139.923 291.826 cv
145.222 292.016 153.066 296.01 157.655 292.366 cv
159.696 290.744 160.506 288.773 159.94 286.206 cv
cp
f
136.866 492.966 mo
132.933 490.812 128.05 490.982 123.799 489.559 cv
115.88 486.908 110.663 500.138 118.486 503.344 cv
124.681 505.882 130.871 507.88 137.238 504.929 cv
142.143 502.657 140.992 495.227 136.866 492.966 cv
cp
f
358.723 33.7851 mo
335.342 21.9335 288.246 55.3602 270.574 67.1352 cv
268.33 68.6293 266.083 70.1508 263.836 71.6894 cv
250.804 77.9359 236.864 85.2763 229.245 96.3461 cv
226.385 98.5937 223.522 100.839 220.739 103.191 cv
199.565 121.082 171.718 146.551 157.953 174.261 cv
143.563 190.149 129.764 206.553 117.046 223.859 cv
106.211 238.606 129.027 252.83 136.284 238.917 cv
139.132 235.373 141.949 231.812 144.771 228.251 cv
145.164 228.459 145.563 228.648 145.978 228.819 cv
145.143 230.599 144.302 232.371 143.461 234.144 cv
140.646 234.786 138.044 236.374 136.356 239.159 cv
125.31 257.392 118.367 276.367 111.842 296.578 cv
111.181 298.112 110.518 299.643 109.855 301.178 cv
109.785 301.303 109.711 301.426 109.642 301.553 cv
98.9544 321.167 86.6585 341.025 82.9974 363.171 cv
76.9495 377.165 70.928 391.173 64.9778 405.212 cv
64.389 406.602 64.0159 407.97 63.7942 409.311 cv
50.2728 429.812 41.4993 450.965 36.9085 475.098 cv
34.9603 480.528 33.1751 486.05 31.8362 491.829 cv
30.0921 499.369 34.5071 504.377 40.0521 505.874 cv
36.6976 510.779 35.0228 514.664 32.2894 522.573 cv
31.2649 525.536 31.6058 528.256 32.7415 530.601 cv
32.0579 533.346 31.3841 536.09 30.7747 538.984 cv
29.2483 546.221 32.8724 551.361 37.8899 553.605 cv
36.8724 556.845 35.8353 560.075 34.9847 563.398 cv
30.9222 579.268 54.4466 584.488 59.4104 569.321 cv
60.8948 564.785 62.1214 560.222 63.3128 555.651 cv
63.3802 555.511 63.472 555.4 63.5345 555.253 cv
71.4075 537.03 73.1165 521.094 68.3274 502.08 cv
71.2181 494.343 73.5774 486.481 74.7874 478.531 cv
77.3665 478.284 79.929 476.835 81.8763 473.598 cv
91.1419 458.199 96.2659 438.689 101.903 421.691 cv
102.408 420.166 102.244 418.79 101.838 417.511 cv
109.782 400.42 115.095 382.334 120.789 364.311 cv
123.097 366.517 127.432 366.927 128.808 363.4 cv
136.277 344.22 144.208 325.131 152.552 306.312 cv
159.986 289.551 169.72 273.572 175.011 255.986 cv
175.891 253.063 171.791 250.932 169.823 253.177 cv
149.192 276.693 136.274 309.368 125.944 340.164 cv
125.575 339.349 125.125 338.569 124.575 337.846 cv
132.73 315.757 140.715 293.605 148.647 271.436 cv
149.686 269.309 150.678 267.163 151.729 265.04 cv
162.098 253.962 168.113 239.149 172.87 224.356 cv
173.543 224.032 174.18 223.583 174.675 222.833 cv
183.009 210.233 191.715 197.899 200.955 185.944 cv
208.723 175.893 217.42 166.56 223.481 155.327 cv
224.691 153.084 221.917 150.084 219.686 151.76 cv
202.537 164.633 189.007 184.503 176.87 203.445 cv
176.469 202.472 175.98 201.537 175.323 200.704 cv
179.09 193.87 182.679 186.936 186.143 179.916 cv
192.537 172.078 198.613 163.836 204.789 155.686 cv
205.333 155.542 205.872 155.377 206.368 155.093 cv
233.2 139.672 253.105 115.502 277.696 96.9843 cv
286.618 90.2645 296.91 82.4813 307.726 74.9818 cv
310.296 78.8329 318.768 79.0238 318.391 71.8959 cv
318.344 70.994 318.013 70.2299 317.66 69.4872 cv
327.839 64.0585 337.83 58.1859 347.887 53.3734 cv
349.34 52.6786 350.089 51.6527 350.576 50.5434 cv
352.836 49.6283 355.109 48.6635 357.32 47.9413 cv
363.452 45.9369 364.774 36.8519 358.723 33.7851 cv
cp
.890196 .913725 .843137 rgb
f
307.307 78.2245 mo
293.106 86.0263 281.109 98.1181 269.112 108.887 cv
255.676 120.945 242.537 133.321 229.608 145.917 cv
225.955 149.475 231.711 154.84 235.363 151.325 cv
247.653 139.497 260.126 127.87 272.861 116.524 cv
285.439 105.317 299.749 95.1063 310.473 82.0746 cv
312.288 79.8671 309.856 76.8246 307.307 78.2245 cv
cp
f
97.386 467.061 mo
85.8841 488.613 75.056 512.198 71.5677 536.545 cv
71.3685 537.941 73.1683 538.336 73.6604 537.053 cv
82.469 514.053 89.844 491.154 101.647 469.375 cv
103.134 466.628 98.8567 464.307 97.386 467.061 cv
cp
f
287.467 597.378 mo
278.43 574.754 253.045 572.334 231.215 574.862 cv
224.434 575.647 219.95 580.16 218.56 585.43 cv
211.957 585.367 205.313 585.492 198.624 585.84 cv
195.107 581.953 189.658 579.745 183.837 581.425 cv
175.024 583.351 166.614 586.396 158.611 590.558 cv
151.622 593.627 148.814 599.417 149.157 604.903 cv
148.177 605.159 147.21 605.472 146.28 605.913 cv
146.123 604.681 145.969 603.449 145.811 602.216 cv
145.216 600.893 144.477 599.755 143.683 598.703 cv
148.651 582.694 125.061 571.092 115.793 587.072 cv
114.536 589.237 113.331 591.486 112.2 593.789 cv
106.467 591.684 99.0784 594.62 95.5833 599.739 cv
92.8099 603.801 90.3186 607.785 87.9417 611.803 cv
85.9886 609.165 83.3313 606.825 78.7776 604.868 cv
75.1751 603.319 71.2796 603.586 68.0599 605.064 cv
64.9358 600.528 61.6146 596.036 57.8538 591.543 cv
52.6292 585.305 43.5892 590.217 41.511 596.406 cv
35.0179 615.741 55.887 632.697 70.4427 644.984 cv
71.1526 646.132 li
72.3616 648.088 74.1214 649.173 76.0218 649.579 cv
77.8206 650.705 79.8909 651.229 81.9895 651.247 cv
85.4212 653.817 89.9231 655.065 94.2161 653.878 cv
101.657 651.821 107.928 648.006 113.502 643.273 cv
117.386 647.023 123.363 649.628 128.546 647.315 cv
132.384 645.604 135.281 643.363 137.614 640.803 cv
141.685 647.266 150.536 650.89 157.486 645.8 cv
158.108 645.344 158.655 644.942 159.202 644.536 cv
166.46 649.813 175.615 651.896 183.528 648.799 cv
185.573 649.059 187.619 649.013 189.324 648.291 cv
193.003 646.732 195.721 644.988 197.946 643.025 cv
200.364 644.519 202.565 645.891 204.114 647.46 cv
237.055 680.837 150.106 712.964 128.587 720.894 cv
121.663 723.445 120.394 735.642 129.082 736.793 cv
129.827 736.892 130.547 736.881 131.289 736.964 cv
131.287 736.983 131.284 737.002 131.283 737.02 cv
131.37 737.008 131.466 736.996 131.553 736.985 cv
165.222 740.723 195.482 729.644 225.132 713.72 cv
239.271 706.127 253.036 697.16 262.684 684.032 cv
268.203 676.52 270.804 668.768 272.931 660.791 cv
286.77 643.224 296.072 618.917 287.467 597.378 cv
cp
.376471 .439216 .447059 rgb
f
149.217 692.352 mo
148.408 689.658 146.427 687.311 143.935 686.145 cv
144.592 685.685 145.246 685.22 145.799 684.647 cv
149.009 681.326 149.703 677.33 148.505 672.952 cv
147.471 669.171 144.151 666.152 140.421 665.077 cv
138.706 663.18 136.314 661.852 133.733 662.084 cv
132.517 662.194 131.449 662.38 130.354 662.891 cv
129.663 663.122 129.057 663.495 128.534 664.009 cv
127.934 664.944 127.367 664.93 126.833 663.965 cv
124.682 663.19 121.952 664.29 120.471 665.861 cv
120.132 666.219 119.994 666.651 119.722 667.036 cv
118.761 667.07 117.807 667.12 116.825 667.091 cv
113.252 666.989 110.181 670.227 109.884 673.613 cv
109.547 677.46 111.834 680.156 115.336 681.423 cv
117.296 682.131 119.45 682.741 121.646 683.241 cv
115.702 682.63 110.461 680.915 104.581 677.647 cv
102.075 676.254 99.6526 675.957 97.4651 676.367 cv
92.9915 674.809 88.4964 673.299 83.9808 671.836 cv
76.5677 662.186 70.0589 652.108 64.3108 641.356 cv
58.9114 631.255 42.1604 638.941 46.0286 649.743 cv
48.7708 657.399 51.7649 665.136 55.1624 672.681 cv
54.6692 674.064 54.7454 675.673 55.7503 677.313 cv
58.0442 681.052 60.514 684.694 63.1282 688.221 cv
64.302 690.287 65.4241 692.394 66.6888 694.388 cv
74.1048 706.095 84.5247 721.792 100.434 716.33 cv
100.742 716.225 100.993 716.054 101.287 715.929 cv
108.27 718.295 115.604 718.751 120.652 713.804 cv
130.888 715.289 140.632 713.697 150.476 708.822 cv
158.075 705.059 155.131 695.592 149.217 692.352 cv
cp
.639216 .694118 .705882 rgb
f
331.154 188.512 mo
299.342 221.454 267.06 251.735 247.779 294.024 cv
244.058 302.184 247.824 310.182 256.189 312.985 cv
258.586 313.788 260.413 314.382 262.032 314.874 cv
255.148 332.454 245.198 350.246 242.463 367.095 cv
240.189 381.118 241.422 395.302 240.053 409.629 cv
235.667 410.994 231.852 414.578 230.973 419.048 cv
221.291 468.266 224.576 515.755 241.472 562.111 cv
235.665 561.673 229.716 560.941 224.703 561.669 cv
220.633 562.261 218.095 569.007 215.098 569.873 cv
209.829 571.399 196.654 565.953 188.768 563.11 cv
186.32 562.228 184.143 562.158 182.206 562.577 cv
177.788 560.411 172.438 560.792 168.338 565.892 cv
161.66 574.203 154.559 581.704 146.634 588.55 cv
138.273 576.988 127.588 561.809 114.658 565.647 cv
103.93 568.83 93.4729 581.157 84.5628 591.876 cv
81.3216 584.472 78.6653 576.865 76.5657 568.676 cv
73.9729 558.56 61.306 557.249 54.5354 563.587 cv
49.3362 568.454 43.9983 573.003 38.5306 577.378 cv
43.3479 525.821 li
43.9407 519.465 39.0296 515.371 33.5423 513.98 cv
48.5188 475.01 63.4944 436.04 78.4729 397.07 cv
80.4827 391.839 78.4368 387.559 74.8382 384.782 cv
98.1683 337.293 123.724 289.655 139.638 239.414 cv
141.965 232.064 137.235 226.383 131.104 224.422 cv
176.876 129.404 258.465 42.911 365.835 27.3104 cv
433.066 64.5517 364.969 153.495 331.154 188.512 cv
cp
252.688 683.013 mo
229.02 707.936 194.679 719.68 161.065 723.318 cv
132.025 726.46 102.689 723.776 78.678 706.034 cv
61.5921 693.407 53.4437 676.25 49.388 657.54 cv
51.3206 654.416 52.0892 650.622 50.636 647.183 cv
48.3392 641.755 46.8216 636.368 45.9251 630.893 cv
45.5921 625.666 45.3821 620.431 45.2347 615.23 cv
45.3021 614.101 45.2659 613.007 45.3841 611.86 cv
45.4983 610.745 45.3538 609.677 45.0628 608.65 cv
45.0452 607.953 45.0276 607.247 45.0101 606.552 cv
45.0013 606.14 44.9075 605.787 44.8675 605.396 cv
49.2366 602.148 53.5188 598.827 57.7112 595.374 cv
61.263 604.595 65.513 613.396 70.9056 622.375 cv
76.6604 631.963 88.3392 629.035 93.0159 621.769 cv
93.3724 621.457 93.7454 621.204 94.0921 620.841 cv
99.9827 614.666 105.893 608.51 111.858 602.404 cv
114.078 600.133 116.309 597.872 118.54 595.611 cv
124.4 602.447 129.775 610.25 135.604 616.419 cv
139.304 620.335 147.093 621.245 151.509 617.97 cv
163.238 609.276 173.684 599.687 183.151 588.738 cv
202.533 595.745 211.132 599.718 229.608 595.861 cv
232.314 595.295 240.731 588.37 243.042 587.654 cv
244.964 587.058 246.939 586.935 248.952 586.962 cv
249.973 587.599 251.085 588.167 252.395 588.559 cv
302.574 603.543 274.094 660.474 252.688 683.013 cv
cp
383.758 7.53066 mo
382.181 2.85781 378.134 -.656841 371.615 .103901 cv
240.637 15.3847 142.223 123.72 95.3118 240.971 cv
91.7767 249.809 96.8704 258.545 104.654 259.933 cv
87.3792 304.318 63.6878 347.082 43.3899 389.724 cv
40.1917 396.44 42.4817 402.622 47.2366 406.016 cv
31.7444 446.325 16.2542 486.634 .763965 526.943 cv
-2.90889 536.5 7.41045 543.419 15.7034 542.671 cv
13.7562 563.518 11.8108 584.364 9.8626 605.209 cv
9.304 611.187 13.7776 615.476 19.0716 617.028 cv
18.7073 624.223 19.306 631.399 20.6917 638.428 cv
24.7161 677.633 36.8851 714.245 74.8235 735.423 cv
117.819 759.427 175.387 753.081 219.733 735.888 cv
278.925 712.941 350.553 604.36 271.851 568.189 cv
253.717 525.566 247.775 482.108 254.559 436.804 cv
258.953 435.458 262.732 431.825 263.736 427.347 cv
268.298 407.02 266.474 384.666 272.501 364.891 cv
278.517 345.159 287.247 326.683 292.312 306.416 cv
294.374 298.162 287.699 290.17 279.34 290.274 cv
314.219 230.776 378.817 193.587 407.137 129.353 cv
425.621 87.432 423.701 33.8568 383.758 7.53066 cv
cp
.25098 .247059 .223529 rgb
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (arm left.eps)
%%CreationDate: 2/20/2018 10:06 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6Boa:VOX9k;JGKfNMZ@Ht.m)N2I+(2?+RdmV#H:^"WFoCJ$jm\!<T5in/?i6Qf)5BLF3MkGj5s&k\YuuG#+:D,#S1:dc##WC
%PFq2Krp\q5B.q!P^\jF*ltUFMT80YH?&5oVIQk7:o?VmVPQ1@C[s-_:hKY5^N4aMJa\0d$Uti=>c$\qkaYP#&^3odp[s'K3J+;gc
%e%>(`5J2CCo%!KLfH't^jMgQ=:VMreT'UoUp\aj15O\<lT03'bH04gel)XE^kBH*UYJ,GUHC&Os(=$:WiICW/SrsHM43PfK^\h,i
%^:\gk>1t?Hj7],Cp@%_8/#AK^:]K[gGMbO[rq3<>YFiLUnNVMX>Ao"Z[H]F6^3cRr87fQg"hB(3+7>/5Isgh)o@Niah0PFcqYFhd
%<:U"TIe+RP^?8Et?5351A67-Yp&`!X*q4*]mJ_&!4mqIgU@7p;M^.'jonGTrA@<]>G59cod8/FdN8X0m^A[KqPLk#K`A!R#1N==k
%9PBV-]2n'Tb)Ghp;Su372.?(1F>Ll_oJ2b\ZcjhfQ[0=BQL(l!rpP;`G5(0,m/GbqPHXF]fehU#HMus3s"2^1KR0su2=*qug1uXj
%_f($LIeW+L?9EQd,F_ieFKU)ko'<pNdYG6)oCF?"rF$iDh<t'oP?6Ys]bX4hq>:IkPu.#3TDe^!hu;o_?g^1H_-Z]%n*XN[mcAq2
%PCHo9H;ejc]3M5&:umu-AtC_^Mp+EoMbi_lFl;^8!SA>f*@g[4'[5\U6FOXSp$A/\07M=2]_ct+d4"k[?9S13-0Ptc<PPg(Rl^Ic
%rnlE]U[\-Qh$`[BLgM0O4Y2TWk1<to4+?q%+27]kM^QiBo*)FIG86+kbPHI'I.I,j<"WVEAA\=W\,XY;]C4k18\X=)hfHg3f'rWW
%n59Z%^>m[f`i&F0T:XAV>T_-,\)iR`ElMrVj0kK(B<S["gs[20C%B6`>Jk<[iAUUgn$qb(^hni/*^(M4al.bsc=_NN53L/1cY)$P
%53kSiBPk&`8DgD=i_f`GMZ>t\)u>9W\./E-hWeb;'Y`TKF:-pYG97<C)#_<qr.Ro)40$`Fd]1\DHtV@,$]<=b]N*!O>CbJT213G-
%k;18.QIpF&BcThe.X]i<[J/AUD8*GRhp9=><;A-BL"jsEHq.0tOkOmTbU*h7i&:5TB3L'[+%@@B*Ijc88dG-/NCOSpj#6NAhfU]>
%>]aqm"aHro!ZUTmjAVsNe?R&23d<hHg3`2e)m;ub2f%55D0h+ii?!*fBbVTKj4\SQ(k'>HgnqH=53fZA_t]7=cp;s4WSCR<%\LI&
%.G`,!M8ne?NE;9?U@:V2F/u(>mF/>l2s]D,nNJ\a5A`T%oCm%n>(M.*?e0I-W(P`(pGtQC`L1(*b3S?EBB4&>^$@`N_-5HA;S'&_
%PnNof8km%jf@fl&?=s@Wo&8Zil]?@4]ug7cX]QYS@H&)P)QO;?'r-5brm\,_dD+;*qB_3#UdaTFr@189?@V6AXnm7DrU&.LDK#3C
%or!9+p\OX\;nqD`j&(`cTDE[kl/1f&rL3SLnTi>%^?b^^hu8uA6m(H0=OR")hk&0'[2d@E71h[TMGeWI1+eV=o=Ooon[>$M@#5W-
%grf"5k_JrDm.Db+o@>q\5$!lna6>!:-bc,n7_\&i<e),d#qf6of5e;nqhQ/e[beA*bCQ3DTZQcHJksPZI#QXAobI&-^S)XinSe\8
%h4Cu"p:/U"O3.]Pn16/^11$./D<9Mlo>1F$,LbXjjZ@$EFl9q.poVhd%LWs=X8YlY$K&IU^K&.;8>T>/n=gS&`lItg$`8mo<fB9N
%g4hC%I3/:0c5uek^"`RZI-uFXoY3VJ(;rY>nBAp5'W?qL5E4]r'k'r3-T\W_LVE^(B.&L!\"OcO3Z=p`aP\pklf@Tm^n^X^6U`b>
%mh;``Nq7=rG&lTbZ-Lq5j3Z$(S!hsiJ-qhGPZ%@jO8f_X1N`]fdjEQK;Cb5sdF?9M23C-7=,-7@bA(lAraX&L2D^@LNN0k+&#cTm
%Bu@nt>2p-hEGI,'Bq;U_"mYpm=p<c#Z[OrO8%'fHV7K]>6[W!kQ4rG^9'c-3@Z9X.=+jK4l*fLtWjR-HRQ&La2cqpShJdR7p!n;6
%)O:fP[URKC\ZYR$(]Fh<[T^*4I9C@KN#ImHEsI<YfUOTC_A_;N5)f/:PuW8YP?cZBArZOgSQ2kQa6bp-lZi;7F6'1["!1[e)uUk8
%fIAM?FMYFjdGaqh)[2s"j1-;&@E%2,N%k+J"trTe3pJd&^$57^?K28s)HZX*:"Q"c9]U3VMOeQAUV>\LD#>>kds'AgAK5s-(pT;7
%<@d+.:,p7?Q&5.Ha4<=ea4LphWfK8#"<DniebQC-hH9=P[6$lUk2bQtDb\UcSKj1VD0nm`2>6S0rI,`3BC2L?Dn,BQ/5%"/1`MqH
%_"EZPA**O-Q]]SdVbc=+E$$X1dM>WN\5"`!YQ&Q[GH$!q3q(\?Y=,.;81,6[="?']iiXg'k/;++?%.".#+%7(8`mI_q]FH++'0@%
%k0ne1Go^sAFC(:F>)[aa&k_=:f&T3U\;on+kd+Z8f/XiuYBDO+r8iNi.hs[Ie:!"Zn#>?'qZ_4ZN(XE1)NQ&PPVC\Y*I]'=bf0:"
%B8O3`FiHBHTU5"MLR:`Ss&d%2WFM^LQ'IrJdHb3;rbeMeL`U-'FJJDX2O'oVj$T#+3n>WH`N;,Z/6dTRJZk'jE7n*O`BM$[l9Q'I
%]P]!Vc;b)23)YKh:Z:YLTo$=H17cgG'!+aZ"1LYT1\_3N)]-b(E]T\;h&/[ba_KI>cr_i[%I(GP*69VVo/[:hf$Us$apYX-!.KQF
%kUSqXXd':Gg%W#%`NB`@:Sfg"#dGYWb^"F.%J?j7'`3.-;WP9'/eTg4iCZ?r@&V;YB-Z;&>I<t>:3HE*Z>3>uU<i<(6KU9F'0VHB
%YTXOOYjkSNH?KLp"Df"m-aLKm-V_(i;$HQRk$VaJ>UY(K6l+hSLU.L&6niNtAGBTCP3XqTA[j@6;RUpZ%,Yq@l^mRf&W([9TFa(E
%/*q<,W6)PS[I!_!odomVTo)j=?O;Pr_8XjbH='ZW)t@LtFAnO%WmQ06)2'4fo'0XNn&;,H&Eh47F`^)UDjBXm(_8-8]>+2CC*2)2
%0Qs_S46CP!>ZA3FN-sjOOdeXtn1)bRTeii*XMmI7>j74GNXot@TJu&Bg\q)B+OmB-^>'jB5d"(qo%/kcH!E@[Me]sVTREV]hh8Ik
%aB$fmbek&tXL@-$M;I98&0XK%dcJ&3q;CKij,;oA3Jbs3*u[Q%AN6I$7Br-0.DHg7qi%r9>BrZGnY'35gF<DGpei)T=E!=hdL:ho
%$T;lQc8ba-h'VtFEHN\G(Mr;)*]*ATEQ2'tTGs4--6%FpSjaC>j19V=*Fha3*4f/3B>'kI2T&Zt4P@.Vls_ltkcimnS3Yoo@DoRY
%laZJYl6\ZO6!I3+YbUET"q7O*h,i$5?q4cB;_H#,K520L]s":i\"emeASpqHOfR$r;Kq._?']V:G=f\qii()Mf"9W^]MT3?53p)6
%.bJsKq6jVpBr$<_*398..^BYg>:-O4fB?\*\p[<Xj28[.l8TD\D;He.f48YZUl&1)elHV.eODgWf>(F==ppm$9r:__Y0nV5AQ3/$
%;52LXb,C=&aUUXf<pXpI>?<:n<G5WCMoum]n^gLgN=Ognbm(kMdaYe9'bL77d&Q@r[&FNT7OP7J6#dSR;B60p#:!F6V/DJ87\I)#
%k63oFBWG=C]<-)f[+Cp6U_ha,+'*f;[8egq8jQ='n!.%nX,BQ`@(Qp)pJb@&(IIo]Co^qT:;!j7'&4_b3:$gK*[KPHd.ie\!ks$7
%o%/lKUJlcR&Mu^X&]_L1X((Qu/oVrF(oD%X:j#ZY3GLE0.0mL;Ao&Fn[d+OGdEFEUkqib3K:*ONkqug\=du*jGM$e83aYMHkW_PV
%k'f!PkZ2ONc=m#-=K@2]HaT2$XRWm>@%/lFjj7iIUV5S/U/_TjIF\5gjNZOb9V!DE[YYC0OrN,9)j.P2+p+U`XU<KX>ZnPrHWJWK
%?b3Z7Y\q:WN#]E<132/M>ukjmA_KdUlF9uUAmjNP\p".f]Pmg%?*!;0ElEL0gVdjTbI/Rd7N7>V^76C<XPNM'N-bNW*K+g5os#SV
%LaaPc,UX)PQ*q+]hZ%(-q9]i1*L5DW<sJ%b)Qao:Co-s0e%ke$`[@]C_pp`@C7-rNl=RWSU@*:7[Qe&l2Vt0/ZL'QKN4MZLLGG6I
%#=a,[g]n>LQG]ETA2&f17M/Qc\S1%Cr`eDaTjoohG=a#a$u?phfSGj&fqc+oFDLkao3H1*jOFG)cCR(lhKE=m!;M_n$oB@W"7^K\
%f<)rWHDUXYH<ci^drPplBlEW(Xu<kV<T*I[Y>V2SE*O+/I.?#?Y:dNRli!L$Ol)Ui:pmIeNC36mcV<:=pj!e&cWV[IN,fm5FoU%e
%@A9R^a4/[7;pF^"jQ>_G+#bDs@LKXCNSC/4nMmZ2[-hqMC;'=jp,@/c,O"H8QZ38u.Et&(G_[5Hpu(Dj:L13&Pp"`JA6Ydh$!T.^
%h-4XZ^bDJnF^XfJ?5S"GI>7W\oHkK5[S=)`meGP?p2![PEqpW3]BDtH(ZR`Xlf15-oZ&UK)V+4l\+jZURl134c%!pTD0rbWMHpD"
%3Wo6P7nm$V[%gKt\[9Lmeod/Y.=5oFe))dTn54TEK:pSD7s%=>/EC-Pr8-N7I.>ZL)oc>nqgNH`q:f0:JV#4(mnaUOcK]lJ5:QM:
%a0\H],.CS9`#D/HXdn%rL;g2.lJJX]d]Q?li1JB]Pqo]Sh@2[:[8HlbH0psuYB@Z4-_5IjFX+mm<MuBfN(Qj?r7SK7TheE-&'r8_
%Wq2W2j3@;,>l9#B!gNS#WQoUMY]8mEd'g$^Z2Lj-q-qcun%ub`)"sBc/"Cq<`]>.7s'O!d]d5J<ge:`8Xj`AIn5S3kZh`heH.ss*
%D6m:Q;q7UBBMe="3m*dRA[F,B3<$OBe$Ot^1>odc`FuHHfaZtF(Mo&NEF3@TF8*Ym[DtJ$Gfj1Ng`(tj]WN$KLIup.L'r1%d9MUj
%@-Qgg8e[tY6dp(QH]^U7ar@TrN\9ZI`D*i@+fuYW`PJ\/iY@qZ\k4R?cW.9/#8<3)MJt<IBW,^a!j__IQ.`ePK-86(3\Tofl&sSA
%M["0g2\+if:JNRW7YZHlH?f6;1-CX?T\0ES]R'DOjYuntq?K7^o'Z/]hgMY!&M3_BmpF3>cX%_]iUbCp?9bJtII[4?q=*iZ^&6j$
%?bZ<qbKiEMl0[(Us)>IEmrqQ7^O5_@J)>[fqop5^Qi-B[h+sI=ZhrRZ-VpQKq7GO*oAnSK5C6%WkN>WIh<ji5H'WsVcc8.t]_ga4
%=5U.qB^+d#O*AoWIQ(6-pH>Cn0:kCRn`85\+7onip$>3EjGAiE=s\(!Hi9"dWq5Z/pYX)sYSQ):;?%SQ(d<8iX+'a.`P!a'p>jci
%5JMU=c^:s"c[T=4f#q,RGQ2^X[MlpYkI]>As)_DAQ+hIE?T`W4Vqq@Jh2AJOn"ZP*Xs8m&f<WHhr:&eCo4QsnHLfmaSitos?iBKm
%T6@trq=8g7rQ==%:#fma#Z!YHV-j5`gHW>urp9N#qeO3704]=!4aheRj^5`OIJ5_d6iPH5(Vb6hj)_sOG/IkrDI:*.BATW\s13.7
%:L/=2I/"fJ/RL^'aBX)4p7qU./,jbf(8'[:f?\!t5/<iJGgD_+INm"o=3pm8QA(3)ro:=$?VA#Gr8H>p]6.u)r:W4J\F.*/e!'7g
%\8qMm0@q]&=0eT\44_`-roUmF/A(k=nWpq:p#PFOZ<R;p[[8FLbHCMYGE>&X_!ga[?H?obQg^g-]\@r7q.Ka"q.J09aAFP7patQ-
%O>[sF`tUl%0?KC.VOO)jN=.sE;\SD'g&:!4rMtuYaj?EG=+_beX^pU;m(A4HeZatD2!r.:TcPI)IeA9Bm(`RnQDBSiOS$BVpaFD6
%<pYkt`B)C05_reFnERXKGCQsrc)W3F^;7O/=gB?fBprPTph`bdKS85dRq'BTr1blc+M$POk<orOg(a%<;pPF?q.I242T`A^cF<=%
%a>LAh>fX9k\'1eO/W2U'[(4-kjI5A5*p^P_#IW&4W^Nq_]@/(_MNDDkALV[,q(1,pY'lTcEb2[gb"J>4#g,0g.8T1Zf-qa%3i'Go
%cl?dMEi$.=785B`/8)Lgb<[aplI$Gn`KG5Y1<UE!Bpn,TI$3eT+68UQb\aM'Q!%FLRq/[rr"$+BcTK0&YEN38a31lWlS_?_UO$P"
%a:tK93&=8[a>Mo`kAZSWFNgtU!Sbej8?[^mMHi0W;R6LO%3>d`3m2Z7NcH0$s*hPEX7<31AR9(Sm$dS^T7?S7EH\-dTjMg7aX1s*
%p:DZdp1O<4lbrfN:o+"OaS1<l\,3l:^YQB49^'43Q1c*EYb1$oOJ'GQ>><*saG&B&0LQ`!U`:O3%(4FlWMc<K3XYg*jMHm!'-R`]
%&84V6#b=3'FVJ"?aL*BYh(hi&<%l["XpNQ)e0X_j$EK@efnnE9>Z6"FIOeK`s&HcLq-H<G+:Y$ZM!6<dRBgL!6A[)#PSt)'Iui`9
%\h$17=XXrjl-p%9$q?k%UJUk)3q_0o54[<0C(*EN=b^fYS\cZEQ%ef&i?SO^$`,bLY1&>'kp4/iR#aR/Z?DO&]%*,FE_;PZdR^u`
%dZ9UaDjF]G)21FAb=Km`DQA`X;91N6Wm4.=PSlO*I*FEr76&/ha]Q\ZcSG)l.,f,l]KHX^7%otl<-0WIFV<C9Z31s]WZmXbFO[(I
%IlP_/L`,n>riaAsj8O9c8r^-Hk#:9):IWp^mHJRNb,&HX=[Gt&!%*=l77a>IpVV,9TDE]klqEol&.Q5R+p'JN$t%.D@"lPM(fe*o
%&KXN(W-]_`"#$$5[L%$W1B.2-+_Q2Yb$aR-j@?N!1KHBdBB4)8aAbH8FMc-l@'6C:)1:X\%\,@s+1T\[^!%(T?KOSUGQAWDSkBgA
%p4Oa:iPgD@D3344AroB>_7gY]EJk&UluJZTUBC7Q$%N%GkX)F_;h9de/tbck)0k(qEBdo#-ZD*)O0WiJoEb3QoO*8]R*]Q8-8]J.
%.SS?6%cj_.NVes^\ik+Bcg8(n+'GKq6t(nfe1gr2n7WqNLW>*)JtLK$23WFX-$7<^U6:l_L)L.A)o[AdoLN0&X2/'D(Glmc(3nh:
%a-&+60k:<PW')$9JLod`)?]::$3CmWIN\Ln)%0c0LRIR'`m`"`p7<r]m-2Fu/*2bt-e'Nf/WmS(rAb%A2!@mudc!k\m$(&\8kKed
%*3%?LYu>3"'KOU;;rpQ:7[ZG%64!mjM-Hql$T?24/j_]uk\(Tt3XN&2KZ\2o[8jf0A`sr(88L[-2]HQfHeVfJ?DJ(!U4q>oi21OX
%[p_Y7j`XOD4#&I#Orcjo3LCY89k4r*Y^K&8A[J[egra#(DAl*dGijb>S&I[*#+G`RLWn"/[t]`D_NC>(/[p94I#9PL":?M('23:<
%/BJT!@$1r(B1!q)$H;E^P#N)d(()<Q"VMD)+HYqa*.]f,9G@dI6<*kZd6in[a[D.sU;g&r3s:Ot?')D!&c>W?gpnE7F"rb!,q9&c
%>R&uo#^B)9s1jLkkl-*);NUIVI%1stA_JWe!JQ-d(?$,t9aX[;,DFSTfG:t%Ak;QY;9OA>i;K6s7g7fm?G(ORmG6C+Dla5>$8paV
%\Q#2+)/r.mML:M=CGf8j#N<QdA;!DH(Sl_:E+R)sM\&u(@QSa9+U_H@Kg\]\0*EHT,\/H"7>Ue2R3@aXK%9:#cVSerOF]=4%V1pC
%/AWYL1<2_I\0j@#q=Z=se[JoAI!t#q2dP<]PHd/]F6$;2EQ?AaA8)pN$b#RTUJk3kbYHi^1;)&ghTGUS#_QG-gF+:gB"2.p]?Yk6
%o,b&Rr=T0fpTF>W[6/E)m6rr0d$5]cb/9Rqps<[Hr@Y)>nTVI_>Z0UWmX+m)WQ'_](j)5i4CtD@iEYIiHt<r(G",.@3Qk_e..ENn
%/YnK?*+W88b6BoK<gUp:KVJg8+-"Ife4L(%5)OY5hEeNL'^56)jA+bpb&J&>:*nMcW$\"AMe[eERWG*$/DGB29Ed0da1<r_#\$a:
%KLbE('K`J_J;I_fN6N].X^#TTao#n+E-?!u)QlHBN[$2uThR1tDGsUc_SG+Sorn%Whf(.`=1WU<444?*crD-8eb,(DlT8G?c'QrT
%Q93srH?>.-rfS0ao%/AO)W/P3#(BI(bb<k0V@a#HAP[b!d\-)n,XQU<,q-A_U__?5K8A9=E_E7Y!lZlj=^7mR%fA^o_I1NZX+:e&
%'^$ni=1RG4GVD#DFMUu>c;iB4!*bbY)+MnlE[@p\(?I.u!Nh*3Q-4:":H1u"."JGC8'Yc8o9`0GZf*kn7r>c]QLA'tTI\Utk:rIa
%j1*OTf>+A]`r"QWc.BiqmHn0I]rk-grbL'ZDdn2*G,Z-_k-\%Gb2d0WcYc/hJ=Z_aRmm<(Dd/142>R[j+u(O%Mo+Eq1KF"U6^O::
%BkCL.*TSQ6S4#.8A'9\dP3Xgk]:&R,&el+3)T'daT4YG&(()Qg#[ldUe$p\]$D.Ee/(E>m%9_b01gts9\^je0gsFJ?)k_4(Q&(Yp
%'f2$l)C$oC'e3R1No=d/kL:B:Bju_W7;Y\2!]nr5=cJm!Vu^c.QV6Rdp_$.8?cO\Kl2%f6<j#bkhO;Jkb@<0(nPT&.!;rcgC4,Ze
%s#8Kl*!J'VkIk\djdaWf3LnBmUJ-*"`K4U:L?&)S'G>sg1`r&oUabq\f[C+pB`JT!I_ta1W*<mQ4^mo7_%Ys+(d$9tWJ8\CI:[0S
%<"l/I3&eiO1Mr";iPs-_Qo530-;Bu)ERW.$T7=kWUF&_pEiPO+%@q8!<+Dhp487lkXYb@@m&@_O7D5tCUL4'2k*:)(m*U3eH^[<?
%Q#2nL[[<\Q0;Z.$;9WD+KlW$O8!g6]h8+:Co;Q'1[+rmbXN!]/g977@U#!n]c.BR6bAb^qlgcR-QdjZ9`7lf4+1P'a]T0:E*$9SL
%*cjo4O1Oc\F4QULC4,Zes7b$!#i/8rjV(/[`)/^<P`Jc'-][bSUO;&LT/b!6X3in!%n.Q="on>U+#6<Za:bWEhoc(&:O,\Y2]SAd
%A1b,59SfFVo#m:pKo].Sr:;nk--QW2R"VsA='QI:SJd4NKWpr4RiI/ZKkm=V1F:s-T=g*2boBs@4EL=d5I1Y\kQN%L:CnS'-O?4"
%@bG8bh%8VY:+thi>H@4j8#pAqOBc*9N&`[H[QM-3LeYU2s7kaUcMc_SCFY-mI`(Uj6s7[\846I$-5+^2![pM2\>b-=Uu_M.=,HKX
%e>E<t,pJk9FihqO?a+SpgndcN/YN'Aa1YaU+s]@IL:WACs*/[4)aC^E+*[?@_?(%eo`ZQ$(COaeE)UKE4joJ##VfDLH/TMLFCQWM
%d*4-pU-YGl[tn.+TL0^eX+b.k2<rVcbIC&"kZ59u7d!dG+Vuc3@m61"**&gsW/bgi;$`(:hI[[DiI7Lo]1kH4VHA)&`N`Ubi(V%)
%Z+*en=ZsS,b<QjQ<_5GH<F]"YE-gs"W>_D?ND47*Qg0^4-X"/2`hmKuW^j#5(86U&eM0\(R8$fN[!!:D?"]."rVX"N,aZVYVqJ5L
%?`=8KCFnfFWqWYC2/95YG\ufa=0LYLbJ'dlCL?7[Y(n:/ob++ZZ7J39dR`2P95;+@p0lRN)W150NK[#kk&<4Yj#77`;<PL$Qneba
%1t_9<d-\rbO7Jo4(R)'n::_LGk3hk6A`lTSe%#\bB&cF/nt]4I8fEIj4B.)Uf-a$lH`0^)!J24kXW`:YBa+t*VnoF,)BLFh8)pB]
%Fe,#Vr72i^mO""N+V$Gp]"QqE%0q&1#Lgm""a'iME(LjR&DG_<q'ZKK0")2YpUJ6$[+c`6s56WriJ&D7mkOVZQ1*L(3FM,,qKg\@
%Xe'hPRe5cOr#2!GH$a\Z3HEKnq5@PjIs.?c>g%b$HHVSM`r,&$>e0.],rOO0Hc+CjIS#N[\EdG's4fJX_T_YWbtGNMo+GR4%ib+<
%ABNPnDQ$G3*ohaUq#3.^T<\@3*QI=Ba2I\T`hdrO4ZohQ>us`n;<.S$V#N<idV;h2\:6:aM*/7).pX'Ygn^1H8SMs8\n=VJ^:ftu
%[YCSn7\o%*Nu+[g_.Y)OhDZ=S`hJ6I6Pfs"nY.c%EJBne,)ekC?;ffP8Z7]ab-d/mi;6gUqB\!_nB(Q6s-[Z80Ou89)m8A*]]P0Z
%$kMDW<M]3ir8ohmk^6nf'(V,@$OJgaRXoQrHm^XR6F2_8pW,+NR*N9T*PFhcdH@.Xb;q\.Y&q:t47^T?cTQ=JU]tcqJIA)ZH?:3k
%<%Uh0H&\DiHC:F0)7lU-e*/V^p%-K\LKKPt-ekX3Q;G9(GdqA`9p;Uc",4$$B=ZZkQ>ImP7l..MjaY8Pol='TKn_GpA^+C\U\H7C
%#rg@I`]@@9\FRV(0!9P.;WE/dM@X%P/JgG@@kVlr[pG\Vp:1"d3kbKT)BWtN]3PB(CYWkIV?RF;6+ZP;j'A]:dS.pgZC\VK#%m2]
%jqBWG"1]!XL.7a;)hBP<dGV:Z(31g>bLd/ajUWl[M>ZY[Cg'gSDOErH.)-P[;J,&i-<ie\*f0Hc><B8j712p@s$T%p,d0;>H.?r"
%<-N:uK$;5V$sEMF%23e<opWL)Z2t9hl<jW5.)<#D+O4:CP2'ISTj*MpPk<OBS)CU^akNU;;)Z'\@_.j.FZj=$IVMliKW@%Y5,QA*
%T'3#EL[T2QhKDJMDnY=nfCAEp)Xir>f_)5`GIcSLPt'Y`m)=*V`i-roF0pVKW<,<r$)NR$rj75lB'C%K_u&"=35(W"l0jdu^Tn4s
%5*42BjZBhi[BO#_(-E#)=ZqIj1>2IISRP9m!.]cBfUc!G9rlnn=ElUQ2Sl*sknSP;Lr+D5`\G`t?5cm@W<f(r0n)T+o>E$4%.nHA
%/FqDk0j&t=>:eN_`H%Z,#$[qW.D>1..b=]3T\qkQbSk_h#t&7O2eDG&m/kNXD@!lb89?$YbUoZ+5e]VgH%En]gS'Bj$=4Ec#Vp32
%M%nZl&1R"f`$=L870LmY63FUb>Bt@Cp+1g26*sbXSdWAa!;Y*@6AV7Z$4i,.LFfuNQ[:^aqg-][O@1<N?3oR-=1rgCHe1_HQQ!&a
%kkBf'[gV@GI!7;>/I[hLk5I?..!@EtkhZFt(Wj6b-J'`3;(Nrtbeo#M3;4ngN?[%l5Sp+%@Od,SOuF!>[YnJ2^b:k-=Xmag89O2!
%e0WP+$9m:iItdE;cF^u?>_798Ng.G,[-k#j]?W/Y-5sDMAX<Y"h$PZR*[##0R]8H:N5<T*?u-Sj<DC[%T$-8^;rF&'!#bsKgL=8K
%eR2hrFFThj*_)i3npR,maJ^Q%6Oli_?N*"'ac!j8/Hf1>q^UCLf[Yk,3\O^][eHuDi$&.GN.@$.]Z7J3.$[PL7sd?ibDRe:f/Dgd
%XPh!?f*D6*nXfclHT^*ll3g.L:L?GhDM(Ag$gDI;c/ZC*KK+?FeR:c*^7a7LGd3o"3_^PN)-L_?dRmetR0O15eQXX`(=u\i/Obl\
%7ubHpODDGJW`tD^BF]W;(]YduBhM>p[+[lV4KU%M\DBP&ds;m:RU(P^@*+cc8"@/Di%fo,+8WkICJ?lD_e%8Tfs%Vdf6.9mE1d$X
%:!5"\8WD3tX34s)O_q9\3d$8>j4E6!f:u1h*fqI.i6iNjfMO@d>?Uq@nYd'kD[`U.d-$NKTU+QDHd5hnRAQQ9!dd6`_TMs!imFQh
%8jL?d.(b\Uo[Y9(Q!Ied"6ijM>@rI5aoW@(H8+"u'.,H$r,O&FUA>rGM+Bc<N^Eq(8l:E.%?MT56T7GuTO\/X#)5E'-ktP-\,eK=
%-LE@K!5h/Zc_I;WGQ.G<j1k%$s%41>TQ4\o2&[-I:P>H@?i`Yb*(\$r""II;$U`A0YsSmY=@n_,+c@8[?&XGeTF/Jt6@aVkU=C,J
%*T<,]<'$"pfFM?l/,n=e'@Fe)_%&Higk!SWL,[.'(t+p@%sVQdjkk5hPJ&#s\NuduO#n.>qV9j>H1T!T3rk.C_M;/c\qdfbaO`@U
%ImC)nr_muuFoRg6@"[cKpo8tuLG#;ThS25S%A^nKX?-@[WiQ%]KYdhXl*2?#dM`?bOfVZ/A<eCh\uBjYQ+#12lOdRjbZ3i/J#W=3
%2#d;`[Ob=#)QO8!l,[L7h9@Pq\P:ae:-A5F?.NWr2UX,.[3dF!f;^0pIcZ"n^LU3Ee@\C%UMR?lLC_9[`kPb>(H-/uNMG[b8[R#S
%n%54I277nhf94TGB3-Dqd^@7TEiJTCQ@;hWZg4a?)T6iHr:Pj[FG_#U]A=*EFT6[&(@hJBC0[;r*;.J%64Z5lbo(h6"5F*(XoZ%6
%d&=8"4s8fE)H@iqE]Y&%@H+D60kEV,3NSTm'XU53iBQo<'2M>b>6*BZA`+2M<bCS/J9LDNZh"b-FpUFGmt#DD+LFBs:a"J'"%KnW
%r2Ran#6#Z,R-c*e=$qJr$<omF`^$ga!)2eJWp:Z6\988d5'oOK/d;K+`6(H@_<E.#GT.\d"9dbjT\qb_"lBh!IP;o>?;U-DTtgl;
%ql&gQ;"+]rXKet$NQQYd'^i)EnBrb1h\A*p)r>f6Xj4U1%_N&%DPK;V0O1BnEr6heJJ"/`Mf<ir9s_eXg+q;Re>#[TUosVgN>j[h
%G[7fe<i<dq[1Q;iCE,9&K59).+9::M*c4U^Du+cVJ9t+G/+7t1>c]G&OS?B2-MnB.e9Kq%e-r4lC1Zf1d$#T:s#EKV_/nM?ZhAdF
%NCA*"#G25r^J3Q=^.s\0%8E^96UL5D(V_!%pc`r-\+!](k*jt-/1>3<^>+BJ%Uk]1)["%(1e'Y/=8`u?lAoA1^3>gaHe+iJkU(=<
%7W)6=Bq`+b[k/b&+q?74Q'B6_*4_O.p&9)9L6i/dJN6k+c>@_d[WGnD"g]F-=3hJjbisGWk<IH'*og6F\.i:pQn;r;J[tKO2P!Q6
%;J<3qJ9)`2WA/Y#Kka2S_K!r8M/M']bg4p?\iH`A!aoD!;o97io*,n&ZSp*]MInHme9ah])eqV1H8"S*leQU_Nf[bW><iBuOq*"Q
%iCn/n;3-B[n#KC)V_iKF^Yp1D_p!&UeEbWbXi!U+l!F=T]sr<>pZ2a`H>/6%FIGijI"hK]V^3hdGk^.3WIpg`;bHdc^k^F6CG7BK
%6tS*M+A<We/;pYW=h3Zkl3h<p>J-CZrB\t]k_bn6#CXgL0jfYMBeaGc16ucrYJ/6hF<%qW%X2/ZGH6Rd/l&Q9j?nNnMh`VhFofsD
%^(K"<^(C<LeFUajO"J('iM`,?ckD[%')>iRE]-.u#eAoVa,<A+T/PO-NHThE]'oV"NH@/NOJU)o2Tk`Nbn\t_+rkQ6JU7W@A5_J8
%Y8b,NV@YFJRFVY!`']P3iBmk/8N=rX%5A?2Z4$[[ML2o6jdCIP0Td7]dlL=$L`Y#ji5D,'O>/=tP8#dB>rA3[j_5j/!$ZL`q.DkX
%@nlV%>s_cAZ<C0a4:T2,.'TBj44e3RU7_>9<nr!J45oJS:UrOMW\Sc03inWa4m?^(%C$5<?mL:R[[#kf]?8^)1>5].M[Ji#T7?"s
%P\s,sqUkqPh0'a[\YhWhCWXmcP%(,VRQ#4#CD=`GL>jD/ih>QB*4F:*?nTZc%pnK0='dPZ0lO5ci)SZR%19&`\5c*BNeQ<(i>OHh
%V8gCfX_<1rjBN1qQEs"+m^U00f$[hc_%L#sYcV)"lITEumIJ5qgKH_->%Zg#N>E`IgRs;=MLo:$-Io1'gT;^WL2FO-0eaLMFtist
%9An?(br47WPCn:(<d0a)P_QZnQL<QRX?=)ZMXFEl<)d.k&l,elak_t9_:^?>b0oR78.BiDI,=%+dl8i,'5.eqBrX:41klbJYp!;.
%\;rN.-j!A88%mpbC2qKG-V?s5=<.luA.>6nKg6?Ye5RnD2BDmu21ung6atHmhS0hCL[_[]15n."f?7JfJ=q]:9QCdiZfWbFfR#d\
%U!d8].dU`fHDC1F+Nb1f>l)0ZfP!sZ^9iGehCK4).*I3Df9Bua)a1<@2)Y!kXuYp&'7aK5F99Mr>6_:6""O21'Jkfd)7QVcZWai=
%@Dhs>Z`C5/59oOc:^Vu;5AX'ugRLtCl1)VFE-XY'lF/locDeF!@#g[8f)m&kp]Jj4pLA3_"*"0'S+X!(5B=b!kUD4t,@LtkI+#^d
%6N2%nD5WCGI<<TQBOmp%1hcNjKYZ=,eaoHa\!<f`N?XBe`AO)mhO2g:kWCp"oBO3N6lOlPX!;>#,mb:q,0uR<%c^-&KCH4)5O6F4
%a71hbj@;FRe4DB"L%WBpnK<GNBlh0H9JioT@AtboNE!<^W)Y?OU%m5,6M1$^VlZ/p"r_QO0JIUhWG'MLhV6Egm\Gj)Hqi`sD4<D2
%*1VA,fo>FZ)c/*:fn!kCDl(Qf7qZEJ8\7ek!;1$H(3LjjqB8t7YB$1loaK!_s1ZVd)ophaY`;'93Y."S+2WZd&W"t#3WgUfAFLHR
%SUqn>]Y>I_!Bdm=9>.jI$3uo+i5q8`HQ8'^MF6W1*_,quNKg@]j^?BUrL9ti:jQSqnAp.!;JQ0g!7_BWc?>J^0lR$E*k:dJG&R+J
%r<NF20@>f)WtkhWi$!$4+24OQ;a?f"rN53d_f#iNhi9CeLVt[Je4DBk\/SGBZCJuJ(*]u5Y"mb$(@DQiHbd2(*,n`UX%KNGRAqN!
%p/Y<W%djig5;kNnRc/PHZTF@^Fp<i9C,4Q_$m.<Ob*tW4WL)Y5QOM"9i);;LbSN>jq#aF+*-!]d4+;i]0?5k%KnFmEWL)Dn(Rc@2
%^tR3][1>)M1`@4:A_9C.-l>[+-nS[@^_rU1Of1Q[_0Fh+W8Sc\!S"muAj71sJ/X(f4t8uTN9aauihOnSc/:R:j"-5^36pSEQfDo!
%*44#T\A$!D*G0H#b/\ep1Fl]e%'r%@ms*"B35abrO0`Zo//$+TZel65>Jb%M3\J]FDHUF8aPPm^50j$doAeVeZTk%543kV#gGfY$
%<:GuJH)-+U('73n646*nLCHD*'X?*)()1k)-.6m3A.!RoCmc'1rS"-Q,dV&e`W(>;8,^B]10)lJ5m2/Kcop0T0hCB=U>*H;F!%L5
%?dC:Gb<<7>^VW.?pO1S/"Kj6ZR^ql^=EB!"=^9UomO;q*Wkkf+H(I^?T3]"B+uF1kZ=QigZ^jeA\rhI!gO'oEY-FVd1m@Fa8?j'_
%<^H+lc`OgXaEFau_:gdXio2@9<WiB6[B\5IXfX[;oL!04@W,Q;k>)hN(r#+kfs>Nc/gtS/MN]d?K1"Xna]5d1&jbr<UoFfZDf+7_
%]!Zs%$eI:CFVc8rnB/J[3i2:*N@f?kfJftkNGR?-[Vjj6dfnGr*S^AbB9nSpCdbc"**^!kC[c/Pqj]:iBqZJJQr[_"U8XhQ*PsX1
%iYOOR$MP7KEn.Gm+k;YV)I!W_0%o$f%mQ;FQ)h!f]E9O&pYBM[FAB7RkjWPSRITsNRW^pgA2QDb9hqIoBa_ldTI)U.e.j<TLf1tT
%7sfk99a$1#Qfd/3eQD@M1V:+DG1/:aBZ/A-RTNAN*fQ*iQlPjQamnGHLr&Sb_KV#QBTK'"O69WK+c`Tl_9[]PTfokt^g/`mq@7Ok
%#2nSqGOfeT#@>%LcCog;<Vb%8rT67]Z)ia3-;'kFECht@FJWdCm:1hH7?%-,T+/n7UJ^RoV_2<n,1?bQFYn$?'X`pF+&1L"<rA=$
%J't^WX/>89Q&TnJB+Eg:k\W"2D+p*o:5+0nR^aCG2K4Y8#B6JpeRYdb2V1XR%i_Y"4c1(]*EP$<[Q+jn&T=S(\"B.:KeA$*m*+5i
%*?Wb,o4'XSRpgDkR:($]pK\lm.)\oNc%E:thYG`GY4]3/U&Q>U-m/9mpIpo+NQrJ7\SS6LC-5gA]W83IX!aNG1Kbb"r+:<6(*%gW
%`]nQdV8M<Yaegj--ZPU>M5Qa#"OkA(O;#qk9n\TL%@)q9Nh-PsT=UF'OjR%$U;qKg7WYX8apTI')CXcE#0K^Gb-r395LICsReT8a
%T4m4Y2">L"T`!DCc``s=<Pg(dgq,qd-MBrZ6\dLJ#!ElT(cs_;q`a3mNu';)W"]X@IpFJhIKpSp2Bm]Hp1F+bWpK[UidSDoHTc7T
%EprS_PrQJOH2N*IHp9CTI3/,A0?Kg,*aG')TW20n@R/fbKu^PN^YDVIq?XLBj+@.MIsUhbmVd:Gk>.]K1KN5lmnYjG:H#FQ2R#t8
%YYR0]:H#FQ2R#t8YYR0]:V,p@HcIM&pd>dfB]>3blsn_aUu\SkJ,/)^=3k3cIeMcjTDs:<e]1HLs6T3hj(G]Ip;N6IYO>f2&1rA2
%_`(BjnF@k>GlMn&@_+"_pZuFPDjEL;]-XkS-M4U5F1B="E)P*C>Q+)QJ&]eVoFFSjh#68?o^DfeIfEbQqI^\#h62&&oKT80f:VZ6
%hss;LJ!\d"q\I0F?F]m_VRX,%=.;f'.,J"q!oO"Np=8KhZ_t"!]mTA2eR*L7d,R^sG5q-poA*2\Iq]#We`lC4Y@#$?CB*AZ5Kba0
%ot+k_n%SYch:'t?g\hSQpojJD49&Z:cruI`oAB>"jJ`:o`\b(CE#*b)7-Ls&b(A-j\-=njitJP)4,h?fDs"%[?'sfEP\[[(R`c-_
%@AOeFT9si.i,0m;b(ePdKFXh$gk<6&/O9O:h,A`BP(?5j`QKg./B_"-Ss#>ZP9U%ok#QD^fsD,[^+!no])s*CEL<P:WF".A9laaS
%Oej%oA@[h?6n-5:Fj<]Rjr;]6U-:()i$KdbI9UTB8&Us;Lmqt=O5#&gLh+-p;/])d1R;+#2m[0F3u$1ihDJ^=eB#B:[9D>0$t0"2
%r`#m@ltX?TCok8Vs4c'TrE/RAHipI@?,`@Gn`Sn+&tZJ2b>"!6_aT;rR552C_93\(Rk22V"gR4V6Wiku5cLt2ga8S`jC>/QKV_4j
%1jbYCJ1*#=kN"d#qCM$X\4p-Pbn6CN&9aQ/me8cd;2-E3E>1Q%mZVfgFl<a?[!7l;&-C9?';<,7$mB1`qBpLE/5*r45[\iW,]/cO
%6jK1"(m$EtGo:@5aQo*7Q5RE)7#Ttb-=Obh&uBli7XN-'V[:<C^W8JjbRnVh8etrTMkY.m[9?4hfH4C:KS)38ejj;K-4hV!A.DF6
%-EDU;EUcPOOIRj8'GkKDDD(<GphjJlj358:RIOYc^"[U+.UtV_7#GePI">0ML/'dCUL'd\`C;[mh;FPmp)01'OC]I_TQZXDR9;qM
%[o#r@D1qU1g&?/h=5A\XQ9jn8e0u@.1^e:>d'bK-W@\9Q,&9Mk1ne;k]g-a]n+e/+R8MPNhr[@n>f=hF9l,%len>Jn[jIe@HV3G.
%"g5$a@9dA<A.YlMWE&pH$S8!r*-Za%`^Y\fQ?A*PJbWGMQ`Rs!P`BKe2o*]C:bI5k#QR>B:l5lNWRrY2TVO)8=Gi-DPemnT`UQF9
%%nn2(PUfB>n:XW$QI8kZ*4"67kAiA:A0R4g7qG"U!4eMN#DF:qc9Vt-"sE.Q9Onur.YB0E$SqQMa9#Y7ae>LuA/U>[I'ghl<QS"q
%:Bo=$8#=mm',6ZOLu]]n;%a+)oQ5'.=\>Q"*%PVo##cjQ(oYM<_JRE!MstF3Y9HpjiYK(=6kcu';Oj)H`ClE@;'Oaa<OP!6=s?'p
%mqGYUUQ<E,b:<pP!H?a4.gE&[,QK#_.8g)m4Wn@qR,Ic19:=Hh@1uMX@[8UQ!Si2O<EQ^'$lEo/U\$pl9t:j74NY+Vb>QNG-*dn9
%DD<H\8+n?AV7Gk*<\22qLkAmA\S9CN;:uF5c/^"d+-e4LR6lKaY\`[QN-UurLJt&eFU?q*$5Q76m"G@K2D0Q?P`HTJ13d;\/@X&\
%@#R!T!p/j@#do1G^l>XPJX7]78'E,oaWUQcdVRc"'NYj;/9%<NU9BsS;CP2Bfh8S=Tg\b?<%\%\H!9'eKqY0Z)1+b?1GVl`S9N38
%H?aSPBQMg;ZKmH>(GoAd5XntRB6d"e4t*c:e/oDTQPtdpUK"ro"CkRp"nRiFA@@g?Y]O<*p7tBeMH2DImdTs%1r5?49a;ueQ)-m)
%fiJZl.2"n^RLCIo8YgOo53QtRA"JXH;ACh/acVm"O>,cZQH4.T26c7BP'>U#$,p;<U2]uI;<"<F#Y?9jODSbG-IrDs(;%Z<JMH:,
%-.*=!'Zdd@:la<d6&:B7&>n1W0'"B6bR"$C9&icHiG=Fh@G6Zh8Lrk-9hMY%\j1iZQ8usEdeJdO,igL0b>JBWR!%WRAW8!UR[fau
%9G>_56h)FJg(&`a0?^FjKHi20#qnr!C[@OknB4p4[.[PV+Xr+u/6`Uo[I&(b%:Do+=BZeUe:!<\\s1E;$f(VYY`k5LU^+o0(9BD*
%MX6n>]83%,"->5H=IJ@hS=QCOEakn@&K.*(>(G9<Z>FteG`7Zo</8$t"CrPB;!7gkjk@bJla"Hf:(&-X.RQEFA>%"(Q<hItYS?7L
%-5KAXF:M_eL0Q7b'<Vi@A(Jm<X,&o'\=f!.A>!$@0I4]+[00quKV##6qP=%2)-QB;lTu9=Q;,l#`,_&I25=A?qMh<YDj7f!U#@P%
%0RW-b,kI0sUth;/5tP$9>WX9:GYZ&$O^d!9$Dm/;>._F7VHh[^96*aO.l_lqB$dhU%fq9l9W-$]ASUR%>d>$"]K.5I!sB_c5&/U?
%Kn?/@7d5&e0UhL4:XruPfs9RpY+4b_/RaK<Eh"kc1neUup4]IRcc:FV6oEq)$T:l@AN$s%Ru00NoG(InJPcSbCg3mD<#.E1/(gVS
%/n(G@.1qS<\OJt4WQqQ<'ZkO2.&h_uUSM?P"heYlTeFM<UkJ;bIqdHh'r*CEQ)m?@@MNNr:iZ"!5/mc_Fg,gu@aL:<CpRYn.:ILY
%-DcB_jPDX?8[;#Ek&OhSNTuN4>%:,uH.A(8QSu)?70KhCoVEkN;H[I^/LC!&?0.2/M3A^A+KKC2fS$8XJL)1Jr*>Jg#N<;g(h>3j
%pm>fP3P6r^AppSR!!#_FBX_acr[=NNPfIjo'YWR^15Q^$k_+Nh0mVaG:k]0U[B@G.ZWLd+Tl+mJCrqTO>s@0p#+n7iVNgI;89FEG
%fs.W3g-L<WeG=K)[]C/4SK_td\kqo>Q`;?Q^ui$iZOXh94JN@F\h>uqk]^QFWm:haFF?G#TB\fmh4.KoaAC*SB#:-/q$+.nIBB+P
%rp_0/`D:uDP?[/!bKk?]qrR-FcX)"*qrrQZqt0+`hu<?2lR04<dVpq?[/rbO-m6XiahF.l^]5S0@1Wb\@S'i)N%i*GMXUo6.J&]h
%eZHB)3DVI\;;@Bm&f;R@quU&dM(B>G0VOVL<*l)q8RWafKn_tg=0^(;hN3F7,(:ai'mXerEf_G74EY6^**Dlk-k\Y/V@$@cOP?QW
%gO=VL+oO(on53uU(mVU0kGl%m5uH!>,>HS6FtHpB1-6*qTumY?@Kh2?>Mo<VV?mJH!B(:"\[ls+2jH,#%6I&]kP*5#[_!Hf:dcVR
%?l[$LPAFJR,+pEI]?g`"4tr&CeqAcd_\%==bVN->$8A93![SRT3!-]M;6C1TYW]K/)]EsVLtKm-6$\*O(tJcE94`CnCg=_N(6Ar+
%AlE6m9ZBfX%$?F;FJ*7\luQi58;Z>G,\M`q@=f)rQbWk=]7.h1BMfsA1uP`TARL'(Q2j++\&/&.Rnq5.Pc)d,dbi')8Je<o[7S>B
%mA^uP6*HVeA1NCO9?+,FX=fpN/BXnH71AaO^_H>$-$.RWNe-X5BhA,c#e5*_UqO=?Aj4lqYR<hh$u49B3#4PEZcW./XCD;d`JEc2
%%EYuI.*>YEhuXdIP%B:Jg2^i<ZVluXY;5B>XW*4\&D!e_,^no&e0u\1/i'c6"=&;(B(:i)![SE\J.`HG(7)baJq?tuTS'QQY:a9^
%TH5bl_'^AhTgWuOg&"2DJ<ttNY58&?U(!J+$2mAC/H_1cdP]*43ol385I@i+VK*.tN$:A3Q-60a(8f30W'#la_E7X,Jr5Y,0@DEl
%$9OKn,*fVQ.(1<arogu>N--_b=k7An)_(#N(mQ=HVJPg"7O"58m&U\+fIV?X'[,\foHQ[+&htYh]IWlU1_2AK/r:2J')#u?gVGt)
%YKAt)igM%>TEInsM9TgknMI(.i.>WK6&mOY>\/q+!+[g(AWe'!-Ac"*Tj(Z.csBObAi7X9*-Pc\gc''!7@XoLPbk*7@>l.n":Jm#
%QHbtd*0`:J9UE4229JB(,<-C^bq_?mC5VA(H(Ho?'nH&7jG[PV@53D\RLmr$)9AhD<<rV^#-G;KU`mr3>2m#&`+^!fV[WfWT?HV*
%R]KdWBUqW<`3s;N;8S]3q?oAfJf?)(P]!Gf@a&687fdIQ/.(5:;GsElZ6[]:/5[TnMKm!`E?Bg,:k=u_U7`nD_Vg\+lXZOfZc2Wr
%&r`+F$kr0(:I`bkFr*)nK5ncF.]Z$".tb58Z_CKS&diN^@\M%)&j4F7qIlYfO@UCdPfmNjYnbuf]Kp(JR<;q62"[NM,";B%+UA?(
%k#)Sks(R>RU_-LJKCk*m@1:15e[ZXgakrm-&<<HB/eEJ;mh0cbPUBn%WpL"pdT/'&YS1(!(qP5cgC;r!-u&A*8b#+d'DNQm=[5Q0
%Vhc7&`TTph-<9'dk2`OT!gA51)/1Xb),?oEdAB?=#m0:;V#[h0-=]ec-q_kqgENS;HA',7q&"6K2-]BE1sH-h]V*"fJc,]E3+95c
%G>n[9XCr@&mD3IW&YX)7[tXiIO&"JA6l[^.M<H?[6qOe_-;7<$VZd<;/Qo^oPp(t,n;HA<O*WUu720Hnha4ee30ikjbBT^'(N/:f
%bZD,c,foX8lcRKY^+%ftR>=_e]i,5LI9Nng3$f@jY`D-V86E<"=t4)g,?N:h?u)k!Ug'.i:QV;,jABl+=SoKO;9BH<_,e:9c@Ou2
%kb)q)eg2h5R^q'DiObaW3<am]=pIQ\XNSuC3q%VNM-6.)FVS)=QTXY&K&riJE+r`7knC/f)pU'J^o0f92O[^P-DZ<r0be<5fG\:0
%e8C.,C[Q5:X<t@SQ-&5)?;5_^UdJ\SM2G,.eTl_Bg6rg`^WVF`Q[Z^N#n[>]/2uubV#b2]V'sZs8"hu\&dta)1u8?[/>Y8kh[hV4
%>aBOu<0Ht]1Nr'(?<6"rK/\uu=5unO$QB6jcmB`s(ij>W;&DpUk6+fg0"'aA^Y;F,XBI/1,]Z_(RFLkCX#d8c%rGJ%Z"['n"hd`O
%]-qesec!0M2)^cIPlMan`;oX&@31imW1USliZ4/A"`t/^#,G%\O<k7W%hSL2BQJe-Q=(9GJW=D7:biXkKF:nUBa1f\)9eKsh2F%S
%_5!V(9bH;m.<A:K8QCrmq9m*g(STi_/j*QPgeC17MtC<_X.Oe^K(`:0Kdo&B#P[1*A@Sf["b7$j;;lJ5V/E!Bjo]r>Ch(m0\LYko
%(8_UsMf!9]#=_`G$:O+Bc[ku7dLeMM7Hg*p#TElaANlHEl1G\u'5j2UB$`]-o)q*HMig$n$.p2>csZ"7@.^1&EOm:Z,cYWX;W5oo
%LO??s+g?+L`$F(]a+Bfk?@J/B-c@/22o<C5%.=0)+m:]hVC(uDWeT4R5_p3#"FF;:I0`*/('YpL,+MKpLOU1nTG32;-kaZZX!Lui
%>3<p1Bi(6P3J8$$^ajWFa"=K/@&\+b@BL6O<,&nig9M(S;hg/7D_EsUOZ,_mU15/#7'$`88*^"Y>7.'YrZ5dZ:dq7(V(TlK@)_f8
%l6]lm4m4R$OU:oZ]8D&eXsYZ$@.<OFS4$)P+OjnQ"gMGNB9oL+"s,S<qui&d`4CS^I`"`+['EXg.>F#9@\b=]MDa[aL6?DKJ^]t$
%a2'LH:S>+rLQ)37Gcrb0!,o2f6o\:9HZp,9oH&.>6S-0=s45/)&aEtK!n$^pPS3np=NS6EfRddOD10o789V`\p(.WT941tfI9!5?
%fV<Cq:_\#,^V0g8Y`K]m\SOd4C>DP0@-dpK7kmRC[s``29<aA$47;e7it(IFbXh2"gX_=j9L:_,5tTP$kD2!!lZgX@SLA)(9A%=R
%-`/eu"IDhJ'Fd1+18*O9BX<5)_ep/2Sq*AIlj`"tTfnZS77<;miM)/hcJX,4?(.6:e>GRfFb'ZFF-*U=prQu;8W"C'4>iDDg)tr!
%OJjX7`cS"AGV':=S!;9sUQ<]ZePi&AAl3%N4f6m-iI__.b]Zmo#g!Z+Gh;HJJmTGoD\1Esl5#BRkg;dip;P,B$G(Z4ctp=H#d(GA
%'.508H&1lR>A5lYSAkV]%!(kX(b(/H8BU(Zco.@hP&Zq`?:'!P19;%N)%d&sT-9Uq!PS!N&+5n[*,MlK[j5*QHCr1c;>)qlM#/TZ
%UJun@l&]Qfo]omaL%EGHdn^4*'m`:"6QjuXDZj]bW"*?n9\D`*CMnA]\dh6\/kiJ^6,A3tQZ=*O@.:]ZTGkb*@FE`r(?gT$>/X!e
%-Z=RXNEd<]Ao.0[i\cP,LhKte^1cg4pRfZ+JJ($#\@4$=?P+;WFghtY_E#<N',?[umPtgn+Gn;ZJhX2!%%VPjLr4iqC2sK6Drm8r
%:j&XSeriH<dI@!ZQf9@g.:`NO%AO=:2nc_W5$;D_'?6=&--T$JAs1M8#.=fD!X[4F6RSJL-;=R(5ACsC'&Y[Lk(-qX-%*oPG6ce<
%<RoN_DT35R(P.;f1IguW7%k@\?DPbZ7Op>c-=qD.TQl'=N'J8CGo,<S=;_m/L@$^+0Jhd#EQ^.F)UXiVd`m?&'Cg%m:e*p]T`&SV
%iZKPQ`-Zj).2<:[8U<.#;QUU]!KfQY+8'0MpEJs8iYX&<4$(g*<C"14oEeZ^MbBt0+Y\"oSUrW.^gjAf-fB5JUeGS58N=b*O@sPS
%7P+ft`nmQ+=A1S@%[^kX"d2gjH0Rj>&S#f*Cc'KdTE6nHL&S]0iVobV0m)8pb8$QH36VuR['lY5F.:^\(83mcX&7n4KOn1s]dP0s
%L/T\Ia"5?pO,L?(Y<&h^"DLMH8h0,kKq(L<'1D+7'm8r$9'N4KU.-,e12_&nD)Td\!oG+@PQa*N;^HF,j"@]6NIAr/1bYiF$HmJ:
%_:J`,I\:Y5ekKq9*3P7:aVpVS0Q<\b-n,!hkR._SBb8-i=$tAl$pufR_@0iQ*EDhuN"M:n@)ue^@CD`oW@Kh?g+*R;Q"sQ8*;rRB
%h&0W:Cb"ZH"BPa*<msQj/<^23Lp"3tcJYVG7qtLQ-\r2)<A4r_%Z1]7$9Ur=6UO.o_J!uo.kG#\Y[:j^_=GUe3^fhL2^;0M9'A[<
%m$Xe3.5tp7Kd65]Wro4fL?WeL)A6nK#aoGMK1-$h/>90I%%RGN*aS15i;<UQA2'Z4r00*,82)Gh'.7r.%1^83koN=\,no+TLi8$_
%1*JVbM$o/nqi,HA_UXsN_%2JNU<0KK/J6\J"sKL7XTk2%@P221*sgTcM2WL,8(c29ZR'f="+`-8ND@%miP*6L#\[*:L5?J+:If4.
%XnAe\Wc8d&#@!b+Q6Ae_`mLH]<*rM>h6ueM%.ZaT18>'`>?9+<*"XtqND-Z+2!q^immQ:A01:UaL6Mm`?>]c&SD]BpeF$DGZ:21s
%0&B9Qdg@E9q$LERftr\tn#qN]pq]'#GS"1RZ&[i`ZbD[`7\8->f-NbW+>otZP+_,V/rYi891B3s9.4L;W*%]JWnjmO1+EYIW1%e'
%91q8`N'ct0lG6LT2lTe<,&TXm28Q!/8<p9rnq?d4KEWPH-+5EQ,,?Gtcq>Qsc14MY(Cl@tjI%o+=aWi,%*)R@haE/TC.oCRj=k/Y
%;8m58Og*TgpC:L$d#D?gQlt5l])sTtQ&HU^9<`R;kcL<k8g0Z*rACqb;Kfr9!BO#@.^F=[].kD975b"YTF%nk8V+8Q[R"*"@;XN`
%:-/9I1Four3<TN:D[ZYumj8F1@3j4gh#aM5_?^I!!5d.4fFK-Xb*`_Q)'jDM-PG'H1r=5ejp+sBaTh_GZ\B_0hdS+3cUm7M#m6[f
%XJSuC8L+Gh:!d=R-\QB"XO-S_)U\eK2$3eYYqShJ32"3)LYEqsn*-ZA]%_bUK+=VFRc/c*GpTh/.afSP[ja*c(`PS3DF1)]]Z,UK
%YQAfC^NVHbR7W27SM4e,6,;AEgXi0\C'jeJP?T->hdMR2]VWiP1hO$!19@eFj!GF14W2OY0IN)u!9&lM&-rZ_(\A\;[0a_Vp';O1
%Zq\163<?sKQ=9<<&3rZ-/t1-qO$XJH<2S01O14D661[b_CsQ>t=MEI:pZRsd4CEGR^aD,&Z3mlCfhW.lU5H3kr)c;T)eD,##N<$O
%2%!t*q@Q`4Y*>rp+uo9.DEt<:@`pOk1dh)7>RtanEZ&)hbsdPW6C%q]":XQ,'5-Td0V(\@p126`#IfT.\Ui/$k.jMNff5\8,'4>!
%%>98i^pNf,p'Y\g:dHloGQ_I[kj,'ri\/j][okgK7XSD13ua?u^!tSdn/`/"[m$,3?'2cIprmk3PD3"KA-7?BlHE1IltZuXVa?S&
%\G)f2UPemR8Yof/+=O:,b)D4U/pZ][,Q,1984dT2<6Z&"!c5fd35Ak4_%@Wg`f&(Wn;1Gt8Ddm)n+ZJ7&*fY.8FKF175WF<6Ug$t
%.(p$Y.M:DAm7L3Zi)$c`2c6Lnj'20!Ct9kfL?`8Kd35"0&=f(r:dcE\r4([`QjMQhln&M,gs-IDP"YP?,+]enA]+c[%iX9,%%r<>
%4OVj;FDlk_SQihmc;d6d,CC%ZHXhh^+s%W/Q7KAL_V!78e8a=e,tibIFbqg#UBJ1C]W(IJ&)5#a-sIhJ#pbCPOFb6k8r!XDV?dto
%q*u<]RK:gKEQ5!P$u&6^bG%B?-/pS;aB4U\aA(>m)G:/f;.pZ:/-L<e7LfP?o%B0SmEnL";iH(n^krK%8UiL3;(.QL(tmHh`M4LH
%M(tt@qp@GC8iV&$pAMZ`O1B-V"um&2@l".<<n->mKcNgJ8s:d^#e#?]&WsJf4T:KWV"%ia</@cO)5.\IU!mb/%[G6>)VH")!X5,@
%4kPXS^_>EWe(Q]9ap"]HUAu[[1![;DPE$CdR&Oi@B2]S)*D.GEYll!H8s$!q'#lNVUKN#PEA7\(8qbB?MAJ&VTJ@M?&J=eBVuB_2
%*?9YT8uk&[_hcJ18;)]M`F<Gbq:*78_;%k]o-8SbW^$UF'2Ypq@3H7Uj-MH@ct3hEQ*V5K7*u2ZMEth/N(;tPR[SO6>gC\"i#uQI
%?6jN4j$,B9W27kh(RStU.517&Ap>kcIS`ldKY6)W!#%BqeM(,Cm:6Dj?*PLakaN6X7#88J;c$.,BV\R),K!,cI*\VQAjW=j6NTmt
%Z=ZlJ>.[X8kk83(9H(7V);9lo[:1;R6oEi?S;I^Y@Y>dq0L?Yf<R'QCTV^/62_quT+^Z+-5Mj5b^u&39CpISW_L^-QAoWEa\KKHE
%<aiXnZ#M1#\9cAbk%KfFk043";[F%YBu-Os$##%VP)\uhD4Nj9Xt3D`O["OJ:iq6%)b/W,;$X'u9;YR^HE7a:F4=ZYCJVrh?smEU
%e7-9%8iXK[,W";_`Y[$=MF@Ua!X8obrRm>DOLbP*/0K2?-0T&GDe'=kUYT=e7`a!8Pi==@r`2[P8*j5CA*Tj=I*scYrJ6Q0WOU!p
%_o.B;769PG%M;56#9MmakY4QoR5g3$\K7maFUl&(Ka_eZ&uV9'->G:OY^6R[19<-QB3*B$W&bk:V2Z:]$K`r09-_ZT0eo%J?'_2u
%kgIG_P.D36#Q5ae;qIU<b)!O4=<&2X7HcuF=es/VBpp5tP$2%%h,0r@@Uiqn<!Eb@ASb(^k^IUX4<_RhL(.gin!5Cd5t]L.C`#u/
%n95do]m8#8X;Pg[1W9b]7'TN)po#A0i8jK?!Q+Q'L$t[Zb/m!?@?fm^(U-NA=QM3%A;"XLUEF-4HL<gfTG\?("X+C:X]linJ7=$e
%lHUC]R#8Z]Pou6,(<%is->Lc)Hd22B2r4*^Fss_O0b6MFNSqqBKnc-FqE!:-(9s;O5>8]nXm"^`aeB)Rn?lD)[e00dTJ@&aQ:H2Z
%;8Sk'DTiS]DJ(\5*>#QuK\Vtb9En$]C)NY3/QUXFka(M%ApCn@UM<Tg!1Q:OS.>@0d_^Xh8O4@2Zme2TOMJ8_KGb_Lb:2S8F&/M*
%1asBj<#Z*[E/]o69[/>4WH/BQ?`Sp\1!C%dE&.o?j@Sk<1YOi_C.R`HAHjj7@&9&YZ:pXQ_lS^"Zlm8`eaIeKp2XpGU.6'Jd?)LJ
%LX?m/1#>iN*^WMBI?XpJ:2FFM>ZUMh30YoLR"m,#]Ar4(="!/68TSW$^-lhRncefH3Ye)=K%adf&ku>[d3rIK$b9GQ$%QelM_VpD
%&ODrr?Di&P9W?^J\hHVbS"Mmdjfr!Jal"ZT;Ib6SA?j=h5o"IaK$2RkZA/*mpHeF89Qb<*kg#+)_&b9@?%H$D(_IUY#u;Qj6;7M0
%TT+^gjglpG:a7aTQO,&?Ij_'\oE>i(k3cK=DkL3T$oj>'=-:=?i(C+b3#2-(7]0CR<O)0n9KFDQ^c<4gUD=&I_+:(R?CH1r4^)8$
%dXBkf/10$nN>E?n[#E:^aP=oj:UO>2asa.DN=hh7$'DM,j9Zd:V"bW<AJh>0D8X7=)B4A>$uqspk>$H_7M[9R'W(rZCCA/";!4L3
%k9&OHcRaiBonB!rC-*U6ls_8?]MT<j8if]*5pFep/gcrD&uG2/=b)d2AIA\,Yk2q=n=aKpO3EhhmfUG5@/u=`6^biD)-[O9U&00U
%`F='_BCJW3cWDI&DhdNW@/q;O=9+etqNqk<'PTdDOE%Wqj?..r6OtrDaOJ"<UW1`h)%j9<=^b5oM2J]CnA=Wp[RjCT!_M?Q5s_/]
%eh"98iTA3t6jXfJ*5^&@0Q+8>CIC,aJt"e=;53%"J-/pPF',T-)'<!u-1HH(M5_Z)7:"fW#e\D1;W*fRC3oW9-)?l+Bu_W2*l%A&
%<J;Dc*I_Dc$6#YDjsQ-VJd3ObWY"-m/)!0F&:PbM;W["LJZf_QIF)N2Y&=$*k3a1DKqYO!$S>`AfoUq:hd`1M:q&mb"R+V/g:`7)
%dtNQIiD,B4aG>QjG5$@[nH\_]QDSl0mD6rJTJZW<qlbJIjOoHp%PPTob?$@s8CXNOHhHrbn#Xt'O8S_>]=TGon%Scn??5l8[eo=8
%G5q>%nEUg&Vg$A%6d@_1bu.NYs&Md*lAUS),><<b?sE8_2oQ%N'u$"q0Esqab;@@`c4He*n?>s::,jtD5sR/0/#B5SM(9>M\KK9.
%WK]^?)$7_ojCfb"Jm.H@=@Q4brBRk36V.VFWqp;"2;-kOl:jgM=DnN2,)?%4Bs[;Qj.()$Re]VC"gKM<$X/ttYG$L=@1c0>%e*ed
%LCe#KQ$u(/6en_C,[@*=l7]X@2;mCHARD)$Ag']h$6$AiJY^[/%E-l4+X@d+FnY!uVNeB.;,s+%oFP;97/FTW0@WkX!I-&H"q33'
%jI+=PX.#$EN&[p\e."d7,0n+qeO8n&g3=2+6Bh_81%Hk4(5E$:Lh'nc1:rs:0%@%$U-VAW3<>CMJERU_^-sh*C(ar=BT@(eaUJRD
%N!MmXCNP=?3P#!,bVt1fHL$E]![JJEW,G=$<pp;'KeU:rIYDC"\`gJ_&dIX=fTk^V6kjN\dhRgIlAu%f#h2]?aGSJ%7Xd3j31q*e
%Jd%,ce2ELoK+P-'fK75D9^"_U%rs"=e<-G2&RGR5+$m1\+i9(=(Ndl`,L8?9$=6s'2PRZ[M`7Q=X"e2(,REd+ROqkgncZ=;fW=9?
%7YV3I]oaI$PNI>Fl8d'B85WSVfEH\rgt+&]BF'dNeJl3uVElj2BO35m"41<*^M3+e)&Y&1Y!t$kia?c"L]/^pbK-ap3h]s(Y[PkH
%LoJ9%h^.&dN9L^"A8C009!I4#d_HE"">D+IP@n&CZR0-]'p[68W%eQ%bHr^d<RB1FZ++L#!<_013asiZM_@ErTgjHWM*?gh=RbGF
%7_#ouZ`FS'H#(MqBG#S(\eu_,9Who3eGtUR>>[MS0e8QVp!d8:P:;dD@5PT.b%_uq<mqi'A##ZRO$_.p/gn1AIJZhHBsL]E>Wh28
%!#J5uD3uE"OpnlB;b6:kL=Ir/c7rLdCZmQ.C=M?0X$mHl9:Fsn6p15dJ?'sVY`SR"pML'A9"(Ui):3nl.[gm*2_^e<B&J6KG0StK
%rfd[F8c@m-VeAZL<,F+t.+*S4@M,U5-l?5j^<VjVM`O`R[u&l@--VYhN<&m,f$OaW'F7E$,NDCJC:"Nf0<"GX1L2kP%E2j<$Hk.S
%\f!8V;:5G$JJ)-;FLmitZR@WSaB'bK<s2*FCN`&Rd)Y]>WRmKQAMX@[%*O]q,I;Xtr,rOED2pA2,P#9[fHF`?rC)ReP\0At;EO7&
%QFF3%\4p\b\VNhB1ucnkFTE]p/p7q^H-uSG@\Q"&1kcY#D=G0*6,EW-b6g_7GT/K\2iV?c6#CVK:*P`]dASth!^KpoFg.nRKk95g
%94UTS/4=%:U7d:7!*)@Q=m2]t+_4\=,,la$&e6Y;f%8o;?&)O2J-E;OF1-n-#lb6VEFj10XLTqh:!ZJYV3j.2$jK^bFnU]S:5$pa
%IDYWW`P^qMCm?]6_Q^UWD`5fK^t[8na\q\]VgT,\P#t>Gf<!&#Lr3@V1)B4]JGIVYAA'Pp560Z]&6ibd6OWEnP?LS6J4!@^g2Tag
%=X"+a8gZm%^p\fc'SZR^J1`To<A>G;[a`3_g#Xus.I/=?3uW_;R+<6<Ad8C9W8%_G_B_ak4V[1_+pC6&kdcA,;dH5hZ""Mn5c\cu
%5]<D<1Dc<kB[VM9!LjFTg=j5S;O[Zr$l1<"..,GX$LOl3TE+PAh,O_c#))9h)2?E:[L>u89@Dlj>H:.>JgoQ<m8s?:JujFArZ#k\
%QI:?$(8dS=2%)njOP/hA@f\S05`>[e2%M.@kjgQ],pqG\_9$;FqoB%ZY3'4UC;:T75uXa-iB`03QV!<(Ys$5..[/IRBK7IY$Y'[6
%qhe+!bsRjAnhP#C8ZLV_=?-E>Kj_b!]/Oc!JFXu_&4'a0h1n2aJaVbCY^[ch_^\7T52q80Hc9ZT#o_5S0c<S*Ug8E*rLDiX$_-%<
%U&uL^jLJN>PZUOjejWLN)rg6mP<k?A.CgonQ,tJ5RMZ(![*TY'iP!J.Ralc&@-l)cGaD;D$e'gMV`&[k;@Z#A!IPV/)\rmZ>*qnt
%BJ1Q?'j)XHEH%]th.:32X1'.Dm;TQJpD:-U$ij?=:OkR3&;+FXIRk_dR7lQcXrWH4FCZT.%CLdHApWSG14\lZg>tUg'*rf:ckmJ*
%,/Uu(K%^Ac)]X\9o+7+D2_jDU,Rn.6I=ktC0]jQGgZ7grU%ZHm571rgQQ:&\(H!CWfbDVm2d(#rIiM/(_$he&)`o;dMHSWj:[,*)
%9o0\rdPF2u0ea8u),04O#)X$r"<&tu8j-kg2C2OjU[e_cl"-aS.956Rbhm"IH11)Z]"T;16&rjgrmmq*!+UA4)Tt`G3FZ0<!Pr8U
%J':rE&M:HmLuBb4s0+d45mBOqS!gBHX>,-`[3s5!Ul.e`^g%X.@7-B%nK_]MK\^!c!eaME-<t``it(6Y2'_P,6^b_!VnaFmU0r<T
%[PSlo)KbgL.@GW<#cl=l!=U\=@3TA;$W/719d7*$ihY[e;Q;=b!6f$^`)4K8L5!pECEA&^f4Ia)5]eVa/(q_mYhUH'J7@'E;/.EU
%5mI!9A.dIE/4";0KNaL'c&oh$@(.N5.P.8YPKqBjYnRPX6=dRFOu8mZ;K%710dlYk;eKhRAHZ??qd\DGj!$u!)X)I$Gb#OR#HU*j
%'q7oL_cGG!-FPnr$At6k`+3$&>t#Sb:fo\%ka6!@nSH;Zp1U6@KD9;B\X1=\1R**Bjck/A@;chaTE7QF:+;+Rjh&or)'JDW?D$$"
%#4kYa:u2sV0h)1rIPf-MQr"2SSZ*N8E\XLQM@ksd/l*DdXCWsIAuq@Oc]Z8o&0edj:b.>%XTa:*5UV>VO2,[r]bNA1?148E0nkcN
%9^7\c'K3h:HX&=#c\X?#78jdUWeLgq9qsLH=`"L-7KBOh<e@Y5B.8oo:(CA3Rn`MeLYmZO8hM$h8`uSg9\#tl'&j*EG[g#$I5Kt\
%Z@#E7UlqM%:9t0I0^,PkouLtkaRkKa+,r+`,=*.P;G9RFd"Nl[g&lmW&?gjS3!DOd=JVtUJi$.D&2eW!6524A*9N"oC(fP6C\6`2
%aM"[E+gF""[s?2`Dop)ja@D/7YEAAYr&H4*)WZJ_)?ro"!CB]6@StnrMFjdL<]f]X2XhG[WHOPgRNhD9<f<90Z<.DhWo,&"mRd^u
%CHa_jMufNN1hi*ShP!tBUa?]U'.)rWp+SC6(aIiOhD(%E7b9RN+g_4NoBXc07-?-X%WYObNW?I@<AYU\e)]^4FhjV;0ggps>[#Oo
%aj!l8"))BON96jZ+*$ik.M`]9J4OqWX?m4N5WXoU8f3s6*8o"0C!tc^QrXJWLXec2PR/OilMo6@L.$V_1%TB&d`Tcn)!g*@VbrS%
%OYr.s"LPa.o?FA3N"Wul^r"4K3/#N#&Nm`.cEu>"&>tB(:W"P_,4$"H;0Stpd&f8X$;UmJAUL!Li"/U]q%+2LC3'R]$l-uLNMiT\
%+Fr1Gq?#]RP=E;p:4W`OH^C[EF22n^ie5WTZ2L\#"Ke%$?X.'t+G0.h,6"R,/ug@[Q=7^(Td0UG<c_DIkMOq"K'##B)AF,_#\%3d
%;uk.60lW'HeVkqH%*j_pc"*lVXr,hl'u>4Kpjd`V6Y2pT60?j6c9WWj_d4HiPGdG4lI/O7<2Z8iDd_]YAbCrB1Dtb<"D;#G"CReo
%ACSh@"i\G5!V["d-OH@1M#P>F6RP^#J.oohS,"cU<D!jBe5)V2THRNO/^9138t]i,('-4&,%&muKHL.^%>^RDg%Q*"Opoj0!-],%
%*+Co#S0Yb9\fS/Zk(OaqF#5=r!%]%H6Dn&;9ELEaUF)_A(n*)LE$CXDKGMksjtFAgKkc5?:.tu=ZRaPkBsM<e*ZG-X''Ec)RQ]5o
%Ur<]uOrE0\0e+h;FNhDp]c4GI,q)7pe]U"iFChD_N-L-E#,DL0#7,;S2jYl8F+B[J[QpSK6rf(_(a2NjdY(G[ME@;9Jg)1FA2ZGe
%(>X]Sono]%&:#-ng@$b;_5)Q(4-"CfO]hFH?odt-%sHVk5M#ZV"0F<!7(8u*!835ps([Xh0j-UXK.O>h^/Up,0<#gOig^_l0UF%#
%0i#l%#pZIl&XplK&AM4UDMDsfAOXZKSFh8h$KeN?1u"a*Q:]&sctn&_rIhs<JVUr"4sGnOk+WY,6ihoLK8PI2L7J[4;I1Z8=R/Hq
%"<Qp)S2ir;N!+]^OAl2be")[j"Xb,0RS!]-8o2>Lfbi./,c%.RfXa%NS=6uK6'1251N8XTVF?8_4\?nbY,R9u#BP>=Ae@b(Z^sfT
%6W[YDlAE63XW3Q2BcN%]#8k\MHdEumR-$1R<Dt-I-\]R09j5;O,'"(OrYG0'-n6]u03>f!k"nC[KKU!?5n!b<`=O:uS%DmuC?@1G
%)B+d-msJ]p>[\YtZl#0R5DI)IC71lb?kju@8'hqp,,O&H9npsu!L'b,d=M')_4Faq8F'YCbT<=7"#1S&JWXHa"bl<q1g06RiX$ZF
%fbFZQ:?s>KfL8'!$n6`^1JX6aM=Y?k&j6Il7TC&(*Tq+u@0QjJ7]&2I`)t9;H;h>`*R'B*4'S.3WtTi2M$WRG3L`-n&CAd6P34-Q
%0eT&l5Ee8Ijm\LBU[h0cM;VTVkFDmi,s6\<F=k'o&BUFS'B"+dOu<37X%A]pDN%d#i!MVcoPK6<-&^YS$HBc\a*qF0+rNSgQJ,*k
%*8!1I1[<`+B,LEE75TQ%W`p>n?-M<;cL2XHbO>cp1)!_Fn1^'!_kK[<`B\CS"'(D)J\VB0QFa9&Pbo3t.((o*&rA=89m>"k:("Ei
%W=m6c=#iLF37Vco0Ff.'eWkN)KAt[?@`E77Jt0i74h0kBVgtXo[=BU61Wa/cW8^IYK9@3R*%I70/HZa.:SqK[R,Ue;L7ua5`J\.D
%G=6Fs>t_a/'Sjeo?lTY)%\tEmIHPk7XVs7I##6.bF.La:&rmC9b-^aP9cP#Q)ED3%"=hK(`=b]1T!"Fm8fYkn,bB,9:u]r]+[01^
%LTB*J?EqE<Zj9':`=@rnn\PHOG]/NcLSME!U-o8,NfX@9q/1c$d<Sp=*&eiS)":mM@Da%KdaC0k3/"E1`>(5";aP/n%;7_cZl/^n
%@tqm%_,RcNA9bQP%7^h&blWqH0V#^!TP6?0iJ;BA/FJ>N4\!<:!Ffa$4;KBb$a=U(\sW;+=Q,4,76nIPKep/\#o?Fs1p.E5f9!k#
%C"el]!eiETICXk700I<+X?ba#59^Z\(+;<7BH.9f%MTDo63`]uTPsm'd9F<g$3u"^nPgJU*/p*_e/OcoBWK7L_mpfYF?<0OK7r9<
%4u2dC+rnus#W_)SiBd]-8p1@DV_9&OkQW+Kg'<2>*?Ml<(+*n^i.PQ7klMj;(%m9)E,\'9_J7l2_(e+VB\u(-@uM2!#WOS!YdOu0
%AO$G)e5h0d^*A:%BXh.LBQ-4E"e9>4Ka-_nE,\WtBQ26e?i[c(K+B7Q1q4;kL\*3V"K)!5#5ZRHjd>?k@Y5ohK(,]:2F>J:@0HmC
%9/c"l>0O';K*Q$pLn<l#hur7q(;>J-7kmeVl1j0>8jM/u`s3uT(X@0Uie,\q%81c_#:HJ$7$R-P+'_U@ZhuQ;K6*dfk\UP1-`C&g
%=SDe,:,-brE<QX2)/IG\Fb"E:`XL;Mi.D[rR*aHF%o-L\SgWFri@**KIl7;c0YAl[\`&1IJCA0#i&mKg=j%b/E0tfqoJf"+&GtH\
%2")"uS:P4NKH!*7UH'](F<)GCNZZ^0(*>Xm;(eXZ*ulTF2XC.rK_mXBn.cuaRh_X-3]oCq.>;j#^k:+#K.O>=%o*c\U\kQBS2Rug
%C$I32348qie9,m&^k5e*&KMr57Qa"lD=PHIh<7ft5'S1_4KKli%uq:INSiZH#G0J2j,+?W`t<Aa[eSeM'@C(Ipu$geCfFCL+'_0C
%Vr[t%4;']aVN)0.$*C^B^k3:gLkhaN0m5SR:-1Qtp:6$Q`uB8B!#?hHpGk@GV+D*bi*$c2"[9F3e,4+Yi+lna&$BiInTi%XfB,rN
%214o$$]YFo>oa9DXs;AQ(N[,=o6^QLc6:2Ne)A.-&.CtD20a*"G*8X[nDGHO;O#(O7g4ST.m,e-XNYtD_Lob-VM9&F#DXm+4\uV!
%NdE5d']$QW7jc^8\AEm9Z:ii)%M);S=To3UiPDd@%<1+\_.`n:b]?/A-HmAfEe+`2c'"C-NXq-_MK^'_*+=B(gE0IDE$EA'"+qj_
%3'i=VH*Y6kVntsj,f^/AP$1n6nFb0<4uefa`qh_[3!#rL,ZMYd-iDb1b3t2uNYtXn6c0.Am,HgC"[4nA)5XCen\G<'(+=%=#7%Jm
%TrjCNi7L_j$/P-f0r9h/f]%OY=H>:]J8j?N/#39#A#l?+A-<1Y7Q2Jaf`Ar)G;HZ;&.[-UJXF'cBN=+sbq*68*2a@ND$L=W7/<4e
%"[G&@OQo_EJ8f>R9'@4EE56TG%^Z=k'4/&q[K;*e(f"^jZibt_SnYdQK@e3JeI=Q!oQJ/d3B0"BVDX^#%F3lo!9&rggEin9erddA
%<0RUm#1$"`[7=J@'%i^9/3$D7=@*5rcQ;,[_$&)g=@.Ko89!:AJtoZH+DZAh((_Jb'Sb@'*dAe_"U(@s&"H!_gjR'BB@npLA9'eO
%AfrL.rJ1]=igDilj+0"=6-lGa4E-PKEDIN9nB/*%jphV+3J.Pa3#Xbf(kWT0iP6+:/FnZ&T%l'hB]/XWp:je@;dfHGL_jIW7)L="
%]0h&]U5O?_>#J<[fOAW+eYJV<nHQk4-*aO:h>/O3CP1i1GN](F%fNNsJ.\iK&C_72J,:YCpm9qS/=;2nh!=3SYe[.IJ-&4TSgJ02
%:uIEtGTrSBJJ0dNMN;7u6ZN9WN_nZXG$BO5H.4:L8/qpu0UmB+(J*J+s6,<nL'/"8L)g;38Dm1QR2Mt\,(W[g:3?^A7tDt.N'Q;`
%3u+]Y%L%lE(ci4Qn.UO75i?</1G0[TS?Ssu(3M$E2AGlS%2:dcH=.J,-ub'Z5p=/Q"jUp*Oh/!5$lgos-63D_)*U;'E$TDVQpTI-
%JJ/?Q+OU`&:-k=W&0h`G;)Ob6j?VXF0p4%I&3(-9KumOD&3(3.-L@-&JJ3?q6G`p4SA@#FYiC74C7kRi38f=.AH)TE#Fl$81O6oY
%^^8U^mcujj6p5'Ub6A3A^5,C>QJ!O."t3BV3t=5B(qmZ&!EYD'C+BcR8jpf3.h6f3()[7D%1YATb,rHu^hG&qT_/m%SEVcnCbZoK
%EZ)iD2B6[lL3ij]"pZ+ULZasb%!Wmo/M*>0(iU<Z(a[[?^tI4nd5Dh\a:?.rg#@O'kCb(Uj+%BQIoA=L*,q,RlZ*(0*XGD4L@%9P
%P8t%c@DMDDL@JXR"3u*'_UN#0.G-<ZcXFTkO]K@'$97m]Yq:t;:Adg5C2He_)4/9?=<%L75u+4:7fd8EA89#>!Zq3S8r`tu2B^MD
%UOZ;/T+1:070.%e%Saco!fdj;fLA@3%m2AC>_%><R?Fa1$uh0``+)dV!ZXSHd-<1c3"tgc?<.>N1d;PWh]]df69aH^"?9&rMB)bg
%,s2sc+i%64<:qgG3-D'27lJbN`0;ZpFLDb=P]^S*r$DV-a(qt"M#gB,9*QDr(uX$PBE@B8i6%*I=[BiK%o.E,Jq-d?.XhkJ=>]nt
%2M>sWJ.nfDE<dEkE+2%$'+9Wt%eYn0I2rD06t&B*,6g,aMN$Ch^_t@n-fp@:i9Ha`!tKQpJ<c,sY/%J(,V'?aMTs1X38eoNo*d%f
%!JaZ?dEOU8i+P!=eK"o84k%B`!<T1mZWJ&t8mt@HG2PXDW/UNb)]WgU5[,)q@lWE-O3Hm3*,tR`:WinO3/SH1bAk>J1q991F)QSQ
%Ef0u/>%^;j7fd8<(dj3?.,YLHM/>KYVe(gB1H5_$"6d$Z@]h-;E2>$,MPG^N=/DgMO!rpCaAe0mEnNBegg,[9V`T`Yi=-2Tj\Wo(
%<uc2AJ(!!38Dor=8\&V)!Y<hS!uqW;6%9$sF!P]q)N)_J5m!rcLaYBG":eY)T(hD=i$_H%^C:f8MA[5m8Dn`H*?RKiJ^_b3i*]%V
%B;?]i3_'879.=dqOMF/IH9RfCJRaRoZ.kDVl#@j`bQ\@n,bj3WNWbAfimE2q$(Q!MmaCAsQQ4_B=!2I801?kld?24%4q)VE%2(Y\
%q.Pk5..G$*<0-Z&=X?L"Y%7\=:>'hojqS4ccmq<C'agH3?9F3j!sPh30$F(P0#>Un1@,Ga3+M93R;=J/DD;fc6\39c+K8QnE/qnR
%hG(j%RC0Nl3YZfIAdI6[JRd%VLVTV!+`l7=aorJ=XDK9-D1r&Skcqr2"jY5f?Eet^LC:<I<d#Jj*.cs=2ZjaR:dnsM0"VSsc5`uD
%kuq-Cc=GSf)^oZ;J2.#VTth7\XG:(@'KG^*[.Y(=**Hq^ARJWu9J>Et<=T4n<b00s+2Pb?>fq)I"V*lNjRs#u3!`ff`j*=e"L]Gn
%!p?=^11GgPpi"4_L'<U21o0.H$X?u5o*PY]+ESZ]d%S6P@Z&kF"cdlT1HZWaS<<W)kA=&R\;.*$"pl8Hm?u>rNWdXoQFm9M_jR4A
%@06Xm:9!=75i?V<Wh%t-^k%]MF0L2s-O'e6)&s!R#2jrR:PSuV!NVX0TtmX/3bEW0MOWuqQOO_?Wgf]a=Q&iA0W<1"^eqt-_CZN_
%pBj-'8(7$bfc`"i1iO-_^Me`/:@A`P6Uq5kpE=oD*r%nSs(uA/pVm;Ja<YoS%3Bb%g`:H7$kHSJPiq6J*]WrR>[3*Woq_X+k0bIo
%3$Sh(j@+\'B2CU>3&Z$>=Nnb%l%fSiE0+f@0shGK^go'Z%3@KQULrXKF$MU\J&;B'hp[WNW;k05^mUl!U])#>S>%8cmu@V_dO1c'
%`rd]>%<E1AGi0EWWg4Y9S8MB)^c<H\nA(5>*]T$c:$?QS=@P.'G;sOmHNM<-iP=uZL=eR-3(k+d]R^1J/!sMuE8YsG-.`V3XuHi?
%8)1n2;aWs=I>7p&)o(OF_LY'3(E-MdE8]+'$*``/i3WqIR+9U"@1B.L5W<B7-mjO97g"NQXl*^hLV7nIP2eO-K\p@\s3NE/2DZ[F
%ER2_bP5n5/faj6ZU,4CSg)@*HBTTpm$b"G*`VK16SDtZQQ`<AbPA!us1Ii>qFC\rp6q2FropgmDDFlD([."nA*9(d+9W`!dN9rXV
%0oXMqnTL4C\eP\0P2)YUFG^9_pCO.Q#oYc)G<)m[8C>3r+fNEa$ljP;i*eJoE+BrO+(9`,.)k6b'KD6nI>S+>39jDp7o5>`HY#O5
%!eDR3R!]`i^`bBq%kupt!<s_TN`!Tc^6".f+Q2V_cYgMun!33K$3B!6G=Fq"7nc<eq[!>6AR@fF!s1G-nkBf!glagj:sibUE.HWH
%/u\o&_ob9Wh\6('it?J:r\lmIkQ"WXD^J1d%8>-`iER$(=4+e1a%rY^$N:LI1Vg=lZ+j^#FhF,-Ij[]"lfRiP%pRGY^u+Y7blIW8
%NbasK.-`akXOuSl!WDH!J.X`eDbO00-t*5A2oUHGWM&.1#XiqArMB](].)r&<\O?f)sB4Cc$ffk%GVKHPZ,Nhg+M%Y^X7sPJMLBu
%^>Uu));$kX/p\u^loQ`^GQ[h4rE,\):u=[JN;\;!NONM/VBL@D812cWA#+%#=Xp.:h\71;e<%BfTcl0[qX+ZifFL7)E;I67B/ne^
%Q$?Seq*r\NkJMi@NV[6QG9)<`j(&XFJG;U2!Yldli#BVH(2!=Ehn)tEU#C>3#RB+n_L!N:jF!JjH\3%H3&;$!)k32!O,E<6XcljV
%2hq#qifr[$("umO[RBO(6[M2E5r<7n8;P"3TY4JQa+g,k[Pu,u$8c^?8:%3$rXqgj^C\#A-K*`oP;(Anf\TH'YWjMVhADY.DRBOm
%1OF\-LPkER/$6eofUM,>YH:==-ii96U"fk=NOV21o+]lI_1,G@1h:OErO^>aaPMmHUG6nKm#>P0!L%YYp1A[l\5lOADk(/S7"b3Q
%6!&G.5<sSUUo"egL%`N?.%>(phA#U8llIBu6VM@OTY2LWd\L;udrFW/ath!1AeZ,:!#=6-ecdl&%GMg;#ZL"eCi:4`3V`^1)khP0
%879@/L."(@-J7/fJp).Lp1F6Zor__M'AG2i_YPZQ`?I'd=[i(^2&$d%I6dP(C$+FUm`eTGf+$Zp1r7h$0ELo;+C+cp._%EQ`-cS-
%\@8<ZJekQs\2TN[>j)CMDMdXg8QTkL\cJb>R"BZhn_j9FgfoB*I_bZC9B$B6RjCWs(H,rF(6f)RJO4].Rm?DV0sW_O.;]!eaPN:h
%<mEU6DgnW[q&KZUDhc)BpJu*KqP&Qa1<0%-?l?arf\Vqa&jJX._bXakGREi_+>?g,6@2)82XCY8c,>Bo1LtFTjm]XVaPO/i=bee!
%p86A9OA/1;7XTb8K,*(oP'"m%)6u3Ur-8EFA8bM?dHm>fHc(+Ckj]#I%0r*EZNfeKE#dS75<sQ?N$I[1("ulERW3lOB&JkR_Z\\_
%/MW'?2/$nt#mD&KTtTu.N;l\I]b0LANjqB%@g_E)9p!%3-.#Hlp?#pU)+Cp2aUg@>$LEbNP8GJYfULiFVi3;3YW&?L/BP*2hN5f5
%=Fn-tZ59gA$*ZAKHL)]O^tt/@k`c;<c,?,^Y\jm9bruj-m==OTq1Oh7A8aO*O\iZ"A8gJ26p<u#]ohSSJ>mA3hFu%r+FA_-c+Gc'
%L`3]\Pp,Ld.CM08,.T`KgRH@4,s,L]6c'u,"PT=Ka(/n`f\Y9X4<>EN2ljp"oeUQ*7eJ%hW8QOfYP:p'g`$lWn=5#UF2Q^4ZmriW
%)6L!mhOEC#I0#?Mh$F<$-p7nNCi@lN7N1<EmEIOPJhpABDh@Er[9j/TD^dg@rIF90#I^r@Zo?c<TrjbKHc+bc@Ru4HQ5$`b"11##
%j%Rmj0silV$!,YZBQ)JoZZNTaHZ+r:j%nqnW"lHc'5K[aXEm/)TFqn-I`$c9Y(j,F_biV22T-1n#XD-e,=j@Y7i_*AE:;.YbHhVA
%1i-'Rp0_8THM2>+Kjeg-?9!iSUL\^*N)22]&]bU+Jh6-Z86mG*mZG_,7@b!r*XR@Plu)Nq@mr9b+GD?bp:^#*6"3`oE<l6L:jnuk
%8;Q&RoS(_K8[]7Y&aP5/LD-[=K[PZV!5tO*"J(]Zd%WM#^Cq@ein8pd!P1"$)\3=?n.L[N44^C_(k"Zs@^!F2=X]0/@(nq$/4_a]
%eNI?tkcB4SiD'C>$Chhb!G/%.-d9P^85>>$oG&<`#h'g\=t.$!(D80]IHjj:Ym%/6<sh#I[%l!#GbOVPn\$\sOT6.h?P\eA)D3=`
%:mqgnSoqsm23OeT]g`+<Wu&pso]k!p,$YF&0(&biM"3:H-@]F\2$dNA][7gO^00cY</N;&pa!P<paMk.%E_Ql8Zj5:U;r0^42g\g
%HiVe$Pa#_g8OjO$84%Ho4Y3n30GGD05n?&U='RhUi1B8PMl0*F2#/RO.gE*O/>4g]6^G,Y>=p664`*6ZSL'p[MYi#m%KIWn"4eB,
%WfY#dQ[+XJ;[*7QEB%!UODC+^.j+j;o,_=[.rQ6XF+B?&e;d\<!'^$Ti^WH)!<360#ghl+TQFR?%</XN^>rEpAAu)l`)2"$"br.'
%5L'Et$R`)cV!/JNnq?E<dZVl$TK`n&r;`K1,FHD\gBifE(I)di4P9#gY(2XZ'ku7c259LFOpNGn5SI-pBjnP5C(hsA/9#(O;ud6;
%D[;09n'SqtdSV&SfBBXC9E>P@O,>4RE?R+"43jq577Be>[<]uepkCmN0a.3qd;.pIJep+h`WTJk.*u2OPtXl7aA6A98&-3&^^7gc
%Z%]BtEO:R5nK#Qra:Fpq:OS7`/e/RF$L#93YsMuoA<=5DVN9b/e''7uK(fb3ms.V?5UZB,e+>#=(/UFbaWa<L"a7qG0fO>DfM9#]
%!,GG,JKPSi&eM4@-^FkG;B!n8:8rO_0i<H+_*3@!5'.eg\cE)7nDF]TlVEK_R.1j<,A*Gh$Ym21N#>MDNupFJn-c&4nX@GpNVl)q
%Od=Hfp^mLd#R;1tinV>;8a_Te&.D>5PVAlJ+SX<CV(:"f6]qt;&.AkHEi<@i"?\qK"SGp#egaK)J:<:V_C'^4MX2Kp)'L<E_hJo\
%f*Z&9^6lEtNKe>?9P'hX<jPN.ou=>u%ZeW0-]a\]-$o%%oO^NXAXJ]Iq'K(q=oBcoM4T_Ia,L?K[PoE)`18$]*M//BO4JUZZsp+F
%(5-'u+XIU3e[#XpiYb*VHSe@(/?+t.e=L-X'Oes!PW*osBf:)FFYT"#O<4^)D*0=`I`[eMN#:W!"B+Kt2XJjW6+8pU$4f%s(i(qj
%d@M88f&[GV#)SFl\n)ShiYki+Okd8Hr8a*N<k1=)>P%.,Odm+O9tU\h&OGGkR]V/j0"VQ/B#/c1hB`1=,S:BGZ]!678:3<)Rt_q"
%Q=>X?)Qm$2[br%iqSX:`kS`hDoSm7T3hfODKsR;;ZqR]A1+KF!i%rg<L?$CM4e9V5%XCjq+j=_&rcLam`)'Dr"j&8,W13>.jHKo]
%h+\.]iN!V7&)YBl\(9.uZ@b!18514<`WbS#9Y<m>(22SVpr<rg?e5I8lqI4ui)!uucncL>?:H>_!+pN[C_H2j9P3t1+ATpFH"]ua
%EWFrc\H`cT*ed9I83OLAW^Z7,(Q&Y%L`C<mbRgR@(fuJA'KRI'bme%^(\77g#A17%Vq?)>H:Se$%:W5a_Am'CbbI"sa70Z11]k>-
%as&niYbYIG]Ee!AlH:=<E,9m<2.:3mIh[l6O<f(1GgG5I0PPtbdQkZeZb/0$7AcD#E:(;-dN`BZDhoHqLN/ZC+OUQC5-+/q.I4N"
%F<YVYEE-[RBjf_bT?Kng>PV6hE(>Or=30GfP6s]oq6iP'-N:Oj^0fd-Bc3<%.?23Hge"1UpG'h?6$&PO2i89U0X]-,0UZBI#b*,`
%2G_i:e(7#f.WBp,SC!%'4_)l=!^Hi`TWTE7?)lFdQsu6<6BTZ"_jq)q6Y5G[]!AJ,">E\agcR%ZkX1Jr49;SqbBQ.DDCBpNSlAe1
%"Nq&5Z9pu;-'=FlWNPVp9%)67l6X#rB/J=Y^2@#O`_ZaiG&>2'%BKU9G6#?7X;tVYq)^)q@NZR6*WQG:)S'Q.oS0n,bbLO0lpk$7
%omHR1WZ30:'hOL>,bZ\3Ed/4C$%#+m-Zl"VGd"K>Co)eH7>VZaPHg@f@Gi:ncs8o\D&j=&8/A>]#UDulKU$;6O97b7H'4s[1d4\h
%Eem)8amjr53I&j"Kch2Q=nV:KLp<`Y4Nb0T`*%Zd)Al%(@fuIZB+.Rbqs^aM:KT!u/66eC=*5D(7'K0>M\8XRA0M$Ja[05UUnh*Z
%<S>8_8\-SYR]KHI/pt`HMuol"BONV1U)LWWnmiXT<.JAMU"o`c(3F%bX_)n-Ne,*SWi\h&78j1qN(OL0(s9c5g_f4pT@+6=]RIfT
%IL=knB0P"l6kT(gWYtjl1!Ysc9NjPcfdh*7U'7`%@[aUlgNQB?M+XZYc&MgqnQf$[_*hGqK_kaB#Ld=k=4!_&=$^aWj#?b'i(/WE
%a/UXd1&&J!Jp"niNL/1l[7GDWMdeatQ4,2uW^$kMZo;a0Nc`KaZ;CN=B^@$.2Xq^1dZ">#MDnrq0_ViJ@UiID6NU8>cu*XV&2AP]
%jA7t:3_FT\N*-q7a>9N?(^XqV(@C4>->UQq?ro!F&<0s5BGGV6+5^ZM<tp!-Ytj(d;/0m]XE/9R&O$t=+80"r$a^Aj7)V&"_YK/$
%i*^H-5U&/G"#FH&1C\W+?o:pT>u_mLM^bl.#g/lCG:.n]"9iL!/SSRDoA-l>0Sm9.!rKd;Le)lJ[mIKoQp40BggM#o#+c(lP)-?@
%o7WZg^gR;cWK(4!,`'-!^`o8Fm"mVp^2u?V0Js0Q%Jt_O\1k;%*[+39p?I8Z06mVO-$G*EdOs]QaF^n#I-=V(9ji\&c9_61!rt'W
%/-LM8\.jN21rf/n4&"SC.\/'DPT[5]Ua@+bY8,JFFbk)C51PV/FC%L*#M9N"Jd^po75VFD<#X;9_%t-84'!7Y9QXG.*@7Xr^]:>X
%_7!#^6@Tl,Z7F:;M_\YR-\!uR(/.5=q0$t6m1&bi'`)Qf6=@2Jcpn7?Y@I!o$Xf&!mek(Oc_*4+h+7]cYS(Kt&K&HcTsG6($MH><
%)mELr'HcDKP,L/&&Vb?<a)j2'(W[,=_\Nh(.q*4j)+2dMR?;"g"!D(:4'4j9/Jobf_0O>sJe42RV+K/Rl@b^U\1k0h6>tEO6,5uk
%_d0'8?VTb,MtJ5tNsOe(BpXtk`_GbA6.VVRYac=*LObLM8D%EGic`4FY38(?92p(GI[?LY+Cf?IOkH&E9$4>RFA,@X,GGZ%!YG4*
%W!4;_J[iFZ%86uFmc"4ekU]^<Ui>aD1!jqK^"2^p`TP6`b`7%36R@G:"qrj4_ugSn8;OB"epQ;fpAI<OQ=9,;:LAVb1=cQ9+1<tS
%M@_dNiGFM=;nI<M27&d^7AtYO;f7S%RJs@%[=XQFZR6A4PADBf_0HqB&8U"SYp9kM*lOC:<h5t,q9nn,,fI^uV,#frH5!!Ji+QS,
%@qe>3@=eOtR^-B3798,cl<>E8'V._)Z-iAi,.RO^8Ik*3W*V`2l?6!2@CVFj.pRb']8Y$,'G!](=0$QhPqR]KVhgt=/glRmP\j0P
%_^M3n]*;m\XVOVbS3f1B@:Y0VZNeu:X;<Tp!;AtC)\nd":39(M^dG"Nof00CXNcV7IL0Mr=NI_\,O.r?.#+PZY@?nKD;lD58O;Xs
%@adg])q/N;Ja]W0NQA)o$5+uo9^mk**7@dp&0gg$P"6g-^etmrc8=+A(2Ytb$5O!f<of[);@'+876]eU@AadYQ7l;E!%S@hCGJeB
%?W;'sV?FM(`5m&*^6Pr:,?9.Im3p4jE'%e6-R@3$Lto5g*M5fqV\Q>oA_g#m![O(8Grm98=aLne2C6cXlG[Z_n?4'XHM$WgAD/8s
%A7;&`@Z+0s(et.2"BQf!bnX)UKm"HG'.!F6Lr7YM6aX(r[Ksl';?tX!Wd2O=Esu=uhCCNg&7q7UOp4Pa/!Ch6`"B/rSrcPK$@)W9
%0gK4\ahX+(22P@E5Cb,TMQ[DOm'RZG5YF'fUCF_P-s=D:$e+1*%dq8:UP-/\"BeQj55Z+!WmUQ0U)nK0^J&[)!94C0Sg'jdKQY>X
%2Z0r5V[%5k3l.cWGoW"@59Z?.#_;>;/*TKrX+WNEd56Ie;.qb>"$MQq>3TT]>KRTHPYDgbctoPHht;R8U1]R7cB9=Rb"s7;b<.T!
%5j\fB&5FmF=Rq/<`#>,`1$>9p&i*M-"]SR/&2%`GF^W%)&kpFKOT6_e7ECod[fD`PLLa^H/)CQ=2dLc^lF5[sc@[::$$mke.C.SN
%O:HV3&L5L4J;Go>T1lD_kL'\NVa4XAC%S&_V17;F'IH=YH_S(Z`*Tde]#:=#2(CsF3UR(2N>>CKMhD+8CA<hNJd>YiES*l*J[t&m
%#u"u?-&\kPA<7:0D-,\8e>0Oi\O*#pPU7S"kFuQ*=Utdr4csI\Z,]o%#r)I33-h_l)5@L(#[A&6GdnW2T7iT>]e<bAR0#.tR#X]F
%aTR#k1^S;sEX`'$o7Z4aaS^Tg"\C7G#]Pu93To1,N5TV[<,;[bJ:olk<-;:jSt#dUdNf:pK\r\?Qp1mC,<RO#?n2!k)$$@u,Dg3b
%(iN8U%PTQupW1@DUZTh,<0V:?"7?PHr+I&tpd('9:L;Pd<OK;-iWJR5Z<A*]`Sg2S'%g`#f+1*rm?24m.2.M2"AuJGCnHer,-uiO
%]%d_^UhO#BC0VX$%0kYoM3T^<fh[#/o%;n=PT\:T?XmTA++I0!'uqaIKk"8*"6W[u0oQbH)usXQP!fo]7at$NfL%B>Z#EhNgKL3m
%Aj/rc--BDI`,*RID%7]_M+F:lG``uof[Fk7\g54[bkRo+0r!ko0f9ps[h9QJ-)#(<0TZ,GV&`*UnD$9WEF^\e6n?Kg<MS4TdgI.B
%it=!Q6MJq8-Wd)GghC1f.mT!-/@::[N6s^]EtZbXp[YKJm`]*="G.F*QrGiiF\ZabDmT$!\3RZs`nU,f.[E7\aXeeX!)Xs[k#kWW
%UbS"aS@u5qf`nJe],m=?33A'V-l927aO<)Hj?:#7juUGV%>%e-Bcj8F>/d;'#!=YR1cH_B2oUTUApk3V$Y_!kl>5Jf%'1l!6Jp%J
%+BTUMXb.$"o!/:F(G!c,E?u%K8><WS]<^]W!+c.&R6QD%(Qd_DUJSQ2+"Ru+3d++6Nn=Nt]2*`Rj4"K(XXj]R1puj+Yd"GPAplN_
%@'"Tr@Mgi'iUW/nR&nLH0oce+!F_5*!!XE_pm<<l=SBpQl*4%>ZfW14CgcfOa^o+,dRHK6dJH=*FZ<W60'";M\h&,>$AUW*1i`.>
%\(#12MGZQ'C/!,>5n`,uZ6G?8/\M_X[BPJ^.e)C6!!q<38;80B].h2=f]lk@*a!pWV<8g=&7guW`:@O('p>:U0;&a3%S86)c)1Vp
%#1b4hQgo74T`s1Dm0cBKk#k5G+Pq-I*VMJ9;,C1*Jbf\nPVkG2;?KF4TK%ds'/0n//j,Fs,'j@uoc[S#!HgO*p:Lc2i'Di-i<W"C
%\6c1lK0Ti*WUUoOG*-W;,%`_RVjSfGnZce\+F#+KOsjAQ=Uk6>'`aA.[Zq"UM6)lVRH8^K>-48[og!T/"!MHc"J?Wn_[q4a-1;W-
%?Xg*3au;jscrGiIWe+iF,ri[`8Xcq0AJ_8$RB<-p<#TW=,T4h[2?]^]F;+J%Kd3jGk97Qq0Fst\2ah>A@)%jeUo!M_!fh_>f+ptk
%1k?%=[MZu_7<]&Q,^P5Adi!uO_$fcBSsQ_)b\E[o76H.?"\=3<pY/<mP<_Z4e2CYKK1H8:HdWWOFpqpCUkY_u4Iu%56c+KDXL^U&
%ks;?Mk8g*T5jQAtnat;,M(U8Q#P#Lsmh-]C5s"-E3^^>\ct)ZL<@&neJCl)0K)h(EWpE>sR1^i)fHnq21_KEN:o*8Fd,%?R.1E-\
%R%a!6i/9lD8NWY/_6jo(!%L4$Nk.AMlO^p(Q!20[d'P53*Lr@iAI"$'"L>^eM.F'e!)u2)M-3H/Oo`Q:R?5@Lc57si#:UfO6:n.@
%mA3n&F3g-S9L5hd5'YlHfgi,#/"SujN>PR:8L-\WO$pJAV0mlb)6uO6nRpsK*U6BC+n@1=`?s^8C+Kl9hCLCs+b].efu-c!Zqa&e
%@MmY@UTSUL1s7Nuj5'5BAsngE66!Qgh-7H]\]_n<cUomI$&9?J)&4E%dZJ,&N$`Vf<`?sEJK3tq\el:g">dS6@_f&`V00](IA+R9
%X;msm,;N&>Ilp&@F4B410C(D6*Int0O+C*'NQ2p6Bn[&#,S_e&dl$a$S26I2I'On4g;,LU'R:Z2L7XM,Z)n^#HM,CJksXbO@T45<
%>le_nq@#rfRMm+pZ4N1^YVeU)jsm*'QDH.dU))G(K8;a2]t.f1$>ZdYY&JN/VObAa5/kI5X6knb"B`#ifYN[[Wft"G(sIY;i<#lN
%N=necG$23Rht1IfN$5,D`K92#5`guLgoNe1dd+OAEe^t;#b)s1_b_M/6Njk-0^u44#%U#(TF!>o`eISQ=[!fNKLPD>&/HRLBVa..
%P+&ks*9)]`)+/cbL(0ksen@>Yl\*!R5rttn%SADn-#b3)6?_DL93XdV(^1XG-30_ZWIr]tjToZ(/fWpdC9M)WOY/0:P)q4b1aOD#
%d9!c]7c[X%=,*1R0JJXM<mXOa;'Y96Y*)QG1"doTM;B<8oTeehP%l;cBnK5?Y%-E,TFDGiN\$L_V*HE8;R+:MiZR?X9GLq:UjSEJ
%T+qhU93j_W0[a8\&ekQH/0G>uWCW,?W3BYa.==3l<Ciu(&M.OG!`5Hd0R&%tA=9ZckSPRCC5BPrK;#@#)UM$-)oWN'Q,6t(n]">_
%.\sit)iV]r/:n?V[+\&d^kc\Rq]AV!$_9,U7'&Xk$YooMs/_5S$m,P>6&uV)60q`4HUafN>Sp!\onQjhO.doIS1Od&,lIlLZu&H:
%6:_4rV-cg-%s/S9B_\?3hW(9-VRH8lM"<SaYOqHOHZla5=@E$m'Ot$M5fD&p=i9D^%+.d=#6O@OgbW5=JE]AJ7s_:/>4$H/;+Q]2
%P(I$D&gn-j,lO6g"RZYPr+L1"W%lDN+ddtKGZABT7LYjiACkBVUQf,,bFsrdhk'OOgL/*!F]j"sLol8=;G;O=44-0r_W:i)1,*@Y
%hNE.SmK)5G0W[T:+"bWlJ2:>OLps-eAE:n`W#[BU,Bj]#^K(PWNqD@-lGl>;H?+F[A3M?(&DKInpCtPd3"Kg4791,C/NTG*KaTF\
%(@\&*e0*%0Gk6KbSb[?4h/JJ_VI(U8(hs>?0^\AZ!@SPH+#gAGWb$_g@L\p(-KkThN`ca!Z]V@1Ar$9m=iX&?AlPp(a1/p2J9ngJ
%n)R)5;=VPXG:<nn-L#*+4Gi<;@"&XK,>h7X.S@2e/!"(:#YAZ\5VFCd4>4p9lS#$s+6#Af$)r)F5U--_J?'/'./S0>,%:e'<"s>l
%@F-OJSh^rQ_P_OU14(]^*#kl%-V6^(aRV[<D4Lr,3(1@Qj\WJK#[)'+l`t@G+,`,'BM91t(9b6E1@+<*-2aif+H]Q[=@:)g!"^PJ
%J.$mb_GO+HQpaX;aZL`jMF"%["C7!D48+J>:'m1p"=IP!,RKCW$(j!%qiD@u7t-=r+[,omD'Ok,*J0b)EJi.8<`2HmMJl.N,e9$!
%(HJdJ"mmUG1aMFaFHn1@IgWj:/;-.(IKc#eY4kQa/!H"5k"`_-fH'#)9go8d-s^Ba7*R^b+W4]W,<\IT7(Rk]lmEL]ZGdW\Xb':j
%9M:JjXN9O7*@A#q33*=*S_YDs]u-99e?Xs_GdGdGEKSLd01!NcCcfegGui'@d05kh^n;%M5:U)O<"?o9R+"e[n&^aFGb-#ndKr<&
%D7%I5"Ji@BKuE@qV=X6eqZH5LJ:YQUd1p)d:l^('[^MqDC_eS2N\/?MY0,f4$,MFRq]!W>Q)0@3Q9')27!N8:ZK#a:I1c9/5ul)H
%`g(nX3?cg)Tk):-8k<M^%jnac]Em"!n4'9`.<Ja1m0H^FmtX)4_Mb[_N>a)lfc!3:`f-cm?l/lcLH7RLA0L^=:>dhI,EK2R_:B/(
%dW&kb+;]:M,S7J:o^Tag*B9J?1TpgE7YA*>:6?$VEigK:Sk.2hKR781"G*>n/WTlDZ*bTu2BcMh5Cu4Tmi\--f:XRUfJJUoF'7ES
%"F^>#-4='?X774X?H/WRJsD)Zf+Gk$&6$rq:-5iP;cMrf!2+1J+AoW]G[c5aPi.mg\9K]V1P%A#g41;)Cji*V;3aR::&GP^d'UXr
%I=WfKim&aCS-4,"W8`gLDWI0^!CD`->_?d>^u1Z9/jV3`-pnd*Hp.Yr\\uZ[?OJ09\j8*GL-h4?P39Ua&N'5WH%hAY"OjT(Xrrfg
%&@9BK+.<1M8RMZ)Q,O$[!lKe+op9d2#e60]6',_7#,`,K+\BAkLSE"0i4M_:(e1bF^*)JIBS)?8$=u8;W5pdIOL.(si/3W%QN<K!
%I>-T0?`dc8AmItZmH2IR$%R[(+Rc80+ajb=,u$F;Ls;\C"R'"loRN.@(>BsK1MtiJNStaI"t1fa@''"[P&<04o@5R(_&QCC2BM^d
%A.M;q/KHd#`?s^RYk69NK*o,#UKGg8Vc+pI+\=u/i!]q;&10:s6"4m5TJ<O@L=:o'(jK*a>!2#=i9E,X#?8E<,X[*03Ym*IFPS0,
%`t%[m$-]7r?`tl!&HtNs'Us^-A>MK!6$`=$U@,!Yl3&/f!!Z[<+@Co^!WX!_dNR#nN"`F<Gs+P96#'2o1kZ5C$I%-Ne/6$;Zd>4O
%"Kp;I&Y;26XYrL5"jhE/R3p))<:?1bi4YlC+QuUr2S'dFAqF$uj\&9(*Z@Vq:Id"!WuVS#_urA3Phc_K'*:Op/<6obYU/S$.-[5`
%[b=^&`%F>Spf"@f64E4mH6I9Y=^]2HktnrYk^lM%G?B@sJ;o@4N,pkrfYAOVAo7[YG]BB4'88U>]]#*!]qQGSXGCC7Q>.^XHYEJS
%[%7q]TX@su6-B3NB!R'_W=qs(<boO3A^#i.[!f&s`;X@s(\T$*8%>rWef1[8AGf:4cAC2.GSW3I!#G(A)Hih3jQqp<FdM$W,kYQP
%S<kXjfuRX.N]PPpQA=N6S"`YDEfF06lqN#+6VFI&k7IpH98X!oJ6a4FC?8]S@;PSO&i0`6+g;BiXA^YR7kq#fL/8:5E,aC%UW$5"
%<'lWi5LJ76"jF&%]:Ik*#ek!m\PJ&e`Us%`Lt5520I8DWX'nOb25gQK+@*!]djilK6r^9ZW^p2)[tIm.gO>"q1F(eL-4V[scrYs?
%UkF8L<fXg34d:C6/-=/W##-LR3ln)[=QeBGnEPP[a^LpuK)f2a$?=McAdi_33bXBWc\Cl+Sm]Ku&>!0cO!u5h.B;#=PRYSINs98"
%VZa,-aITi64jK-KE5`30<X%^u!f%&2=Q.7\M3<d,LI7,VW**eKLOpU7\iK:L(`=WsBh2^f7%?i<Z%2_g0gE6&%o6SY"Q@CO^3`kH
%YtP6#c/;2;Ld:SJ@$:_FDAgRFnn?<cR=W49lH153&FK?/j\'4>"6B.5S8&S+r`$.r!@gdN`3oaS1GBmQ[4.2"B\mef!::WNb3Dou
%SfQjc@0Ps6(#>>]rV1G[5`L'a$6>;joVpba>h/G<F](bgUUYk-0;=)Z)0,LZ?r/4Q*0bqhhZdBqKooUZTlRNU9!E%m$I]>*EuUYR
%MWfk0NO1XRDaKtM@3;E"hQWfgU*."t*+FcC6lL*5:h6>W;@22*NB5YDnRYbljEME5FbYar;\O*.c%n>[nR`@gLdM-_CmG&VOlrQ4
%d\s$G`4\DcZ9hT0#.G(f'<dWn;;c`UR../i?4I$r/HbK?A7\+KBSoeDEp_P3.Uk\J(APhLoFR`1V+0@cK?7)DU1';;j-`:VA8hlY
%)cgpcH>mO@6*!:C$k3k0L,_l/`b3#dFpJK=XQ"-7,j7=D'I0=[,d].kAjL$*G:Sst&QP4d`19F`aN!9`Roap?>S^e5B"hqj7rq+\
%8-5E:jh?mK&;i$";C,<.!2q0k$0b`C-g9FD/!:rYCU,0-[k[[Jcpa+hELh-Fcmk)[%bB/_"bL!&<\)9/W'_Ja5fgVSjq0>3-t%If
%7LM)C?nJ,4#+L<$&bNC7-7oNUrEVR.V"1@'!hRKVB]sQ\BF0W=E6\dZ;54YZ?9A'^#/\FgYpap4.U`P6Z,jsVdq8b>k)#/m84Zn>
%Q]0:K&ESPcX6_Ouc$Lmb)6>EuGJK02i<'l1,SJ2OEa)EV=E^j%&K["O\D],`)ILDQei?NH@`Y(WRXd98.R,GVDk\@N_15OR]gcrj
%DSF=SR`F&q;3l.h'Le#;=R7H6,<\TqL_EJ#^%<DNnr5<Cf"\$27P%1C4q&)".Dg#Mfu&Lh6,Is0c!\d+&jO5^VO059Hp)jlgajs.
%Or.)&X`-sc#,Xc<g_$HE@=OMFZ(r$G"CkSQhpWUni!t5D0/FdX_5q^"JkSVCH5%__F"0>a!;Q7b3coTH6R$BQ#T=QRIKYKF6UD48
%1\kab2#prZ"pJm@(Br&BA9c4XabAVmh(/X#m"DfF<R7+>1m-c8Sr/*e$"%miqdcibZL]IN]!k3kC$k<hi<G.gF=41geXp;V,q6lI
%hG$U%NKe[na$>q;G'N**Hbh8nP!i^&Z)phb4^i4p&CraTRk.d7^tQ&"7G8+`WgHN"d]&BEbrA]&e!"9)Laj^n3MF;0gaX^H/9G`?
%cb^5ccj3$tV"I)@!Vq#:ObW,X,]$gC"&]"-BQ^Vu6=R9fXrln[B4[S)q[?`qll>9OA8u!L+o2F%(g7Q6DeJ$g-_M;+,T:7sf=VbN
%lb4`;\ufa.M8q1r*?`S&'9,%cEC@KJf+WeiHbj8<C&gP`)[81"b(M\TTJ\/kG6@*?.;A#s1fk$V6kuKBN&CMqcf#>;/Be`Zg5Q.&
%nDOOJhb)cB+WC`O$cS(_5:,Z[5qREhXnfh,AK'qK>EL[c1Ea71;hn.;bb:5X3Vah*%^n+#-5&nf!0V@Ua@M_(<68:4''q7`#=5na
%KOGZC`i%;R&_Ya%l`sbd5T^"%'*F3#\=K.]"!o#^B2Z*>=g(A@U'DQ+(0*D8PRPbc'V4mHMX\jR-#lf7b(q:'L'm1hE.Hu;*^t@7
%/b4%:&S0$,k.m^T?;MJj&Cr,332#f_X:%Ch:UOgI`AV:V14RG@$8X$V%`Cr,=S`H-)CO*K/1O,EC2-d,ALSINKUp;.*Z;HfH@TQ0
%,=ql7IL9ts?:_uTPXk'Q`%@@C6EEe'[FIr)S5uBI;1]1T[tku%J*N8f:^.,#N?CW6`*n3?'ku5:_6ii&8a<Y]YQ<Z*:DkJ%b_+TR
%RS]DV&.&':SmOVr.:N`AB]>11*ao1m<'VOr"P#sqG#l3uREe15$FBoC3ANqfpWuhe9#VQd:r;(>Z:(RFf`t.J_)=o+WAb_GS9)'K
%JIuXue<Uc4#mmphlaQ^+k\@051D4UldZ:5or-ha!\<@IaTl(L#MHjj_F:s\0=P_24p7:i#kVDU<l[2i&0C2[_SWL4kBq6q'4]<7%
%_t4S^bRH[jW<SUbg5960jD5WdVN!k?C0,T$.#7RLqULu(5]mAYN7a:MOJLT,7'2-.S:flF"i(shD\*M#3`0HO8H)E;0S,20f?#6B
%PH^rH<3mc9_[[Wu*8,>:MM79,5]=)C7`dh?9UT@>H4jV3k.;p4!l?=WKZnQ1Z:LKAoja5+)3G]NX[Po7ek1>Ln=u/=nM@ug7Z4hi
%E,MPU=;KgP`l:4@(>]Ai]MatH@7'Z\3[C`eQ7=.q;C[QjoeV^)PsLasHOB24Og4rnJC))?g+/-9'<id^2W3b#Aga:2883ce!(9aE
%+p.KB5^mfjT"lImih]!E>ZHtl)2"GYcB=iO?+*IZ/f>#e.#-CKRUtJ]@O3o_+[P278bC]fcU-iJ<XHPhcuAQ=es3`6GpMA'L2Quh
%HmDT)ZtDY`agP%'@m88#5Ga.hR-0mR5o'l/UBmr,<=?i7Kqhh&*@iOZ-S>`VF9IbphHsZn5.90N6%hQ?$*arH9[`gW:D'F470B#b
%agLJLX];\DH&<^V<"HAGD^qOS$IST!c/M=9AKYEW7t-:E=i;;)A>$3L1QUfH7n(.Mn*5U;Sq0?FCeiJ]!F1FkdkonE#TG?'BsgIt
%[l=(2]#9Gm*.'spZ>9_A?S\DF(H!.!&Vt'MNYRT/@_52`/ckiPB[SmqghFDq:*sp^";W"["lomI.u\<n>fhSjin<jj+Qod(PWjh`
%<XO@3;>=NddksZ7n0!H8N--oNTefhT@>mlA=fkL#8STGs)Dh.;,]c7L`)nJV+nRCh$_sQbhc1JRSf`6?M0+VWD^OqU;Q:>tf/P3B
%)9Q?7m3<_e0<q&+l][U$.CNQEN.o"]'i;daZ^h4h+D+#ootS&/3h?h!-\SobfkPH#<!@L=/7R*[89Y+KP-hY(Y64rA_O&N&nshrq
%.af+99-a*NEWrn;.M,l>;3OMh%KiOLZb=.Y6^J-'E[1Bn4+S$p=9/1YN'u5'kfuR+F+%(4`5NueNt"`Y:qb)Q1+5oI4L+*B(s]E@
%^4EYl+kf$/)I[`,iNdJBZ2Otu&:8DblB9l)$+2;-FX3N2HWf%LN81M<"b3M;_]arh_UBOKMRB=@1lsDKBNVefKeF9o-_hTaS/Y-?
%>r7)]_Lc>pMI>KP1ZQ8EbR/JC"ZK,'H6S,(Xe)mt_bQa.GCq>d?0nND(;`O8%Vnk?cqm=gd'L;=#fO'@HU(5ao(e\J8)fgo)uS!%
%ghGT'YWC@.$H,C!7>C&\j;9?qA>*LD0cuEL.@<D&=7`ii1;.\Ed)_:ghS5S?Ou`UP"3,&Gn4U+_nn"@6dETbDJZXS<@@9^H+**+'
%fg;`-K=aVq&n>lXq[kpu7]`DE.O?$<7@C6#;IPBGE]Jl<Ae))</'/]X`S:Hg=U4..iY9TAj/!3R7%OOO-*:D$n7Dc+7N/l`X._;?
%')e@-i8bW$O0n5W^=dP[r)4AN)+hu6`=4+%,Wl7_)QXtMCI*Zd'Lo;In98Q9-8.c1fZ^V\gKHW1RNCCtK&Mn[)3U#Z`(8oX0MGWG
%TW-qWl6[.f%q5SIZ!A$c2_$I1]/?"a6#B])[#"'[YT!B]L^.)'][t#Le,0!DZBe\q1a9g06E`,OJD,7rbeQ.+1kIk8dXC=*eZO:2
%Sb.`bQXU)Mgp'FsTSEZ$,T\ej`]@+S&t+\HYp.sW3>J%u?A-=kj&lSaj:lE5&fcDPAp&.>kbKTF,([@%J6moW\s`rk'tRA=$1Q;>
%ZVj%s@Y;<N0kqjdAD\P;9!^D%(=eU':O>V9qn8?+=(^n*>/(nH*k-CSV%Z^[_-P)(*a:P9Yj[\cO+[[>p53eeFa.PMfjkn>(//Y_
%n23M_2(X`#.gKN)L\42N-dak@;c1h0KMJg#.KiNpfJuPXU-FX[V@(U>_TZNM>,Q7WD7X1]0IX=?25!3FF&-;+?-n?F@7hRPTEq?V
%F02<1MI4>1J5l_oA0E^(Ag^l5C:C04Njo.c1'gViIAcHt<+tX>e`>@ZO@:i6WUPds.74M=:h$XTSY:.kkrL7t+^gH31i!BOY]sCk
%dK5iOf]nb@"M_$(m$5BoN_0=(i7Z5nneGr/^u\b)d[N]3JQRelRX6(aK_V@+c:0QqhpjIS3Cmcmo/Va?dUiU<5RPBC,'s>>d)PF.
%LnbJX^&daV+;)s@EcYE$hsI3HTBI*f9<YF0KEb)dF@"ml<Yi(a-NrS-Lc?jf+/b+e$_"NB,QQahW#fXZBVR;63*d0+SB?m5S$HSK
%\1*pdSYTFiTI'q<']hB]7&+0hkVNlf278-g\41#9@>5\NN.A$$/A:9^mM#@d]K7mV^0s%=D0K-?J-:ap5a"a5(=>H6(d+k\=h[mn
%&bqsu&lD<AYg?P"MmfF94$`3IIN8D@YhG*MP!FA&IH)tL@YGD#kKXEt.Ea6g]>ca-'PN"8`!fS"NmD#][fn2\$HfW`R./Cm'%tZg
%EAUmibQlX[%RB4X&iH4hC9XKo$V^YF)m%!-]";AY,hA("`oeT.ZGc_V6Gde6@.Q;Q=oudohQ_r\b;O"QjO#_J+p"KWp^q<\<LC$+
%)*([G&<ccZ!lhq#XXD`igKD.b!F-dZJqFB+%gbHW4]/KLUQAoU<DV+;>nO>Xl#m[PST^anKKpb9[8%VJgW1,(S->Dp3Y$Dl9TKo(
%X-[F5,#uI!*2#)A?;`6$&HrN0E-]j373/dF?Va#jpOtt`FDDr>7`=t!R'itUX"nRsOrHi7,5`pBTd5S.hN"WZ]$W\d,$`1@1DDhe
%Ojr7.d3V6p$t^EN<Z3[;WYm/4+.*tR$5&mkV046/7FZ`PE2O8%6W\$G]G?:>iRbl!Q3M7;p#FB`a6h-@(G6SY<=i>SS^]7-&C@?h
%:f)ZMW\&3Z@pgSpl4pp(@nio3[VVK$KP'5Dg6bc*MA.h/]k$hj!="nl@8;iG.%nPH=ontPaP8gO!RIQH^aaGU:"#K3<"qIn`IgWT
%[TB_%`Y!AcA1_cS6BG&!PGK@iq=XG[p+NZ[f.-S5)jue)Z*8qsCX4,n)WJO(_SNFqN2]`l&?4WrP*QuI]BLKE5TG=gej"8HH%B!?
%)`A9[N*n%Cprg&.K`Wk6Y-`idj>nkH5Rs\nStp%g"7;qZNkgaa$DYeeMA1_i/-@nnNPp!bU_JS>#9AFBEu?Le`8q??N)t)6R\YAW
%JkkF7&)BaP)Y_lC9Om6h6&*jrS.l$e:)YcW[H4'0ZaEYgOa-TF"ps$,=RUpe8-88,j#HXaH`*=W//JM`(rZnTZ^-n`Eff8e8%_QZ
%35cDiS7?2,0>(M*hkgN70-t9`J2\qX9uuqFb0\Atgo/=W-:VYV0LLcj$R5b`=mhQZ!_7<Y.d;fJAC)qS'Uiu`T_QUYKH1sWR<+F[
%F<WMJ/mek.;_`(P>7*tBde^=iCLZ*(`@YRE;rqY4BYTd7pK4P#ct9)&#8p8Qjej.2WRR;c:M4XOFU+Y`QC&_l;G>f<-hLc]>Ol&@
%HM6Q`2*)5=YN08P[GI4umHT/ng7?nIkl>F^gJb^Vfolh[\REM[Q3:463+%aam_hYW;W"@.1*\:ailnc3QaKjXBh>&EHPWt*:ZQ3N
%@j\"a(G$kt&1Rt@=fF1291'4%+Kb@q_5fA<MFaum:j:"[!m.[%1#;1Q8OhXnBFHqj+j+Z^kZfINTJ3.'7<2@cd>/GM7D7bp9"bFF
%9LYlH#Ncalg$+ROS6i.b[Js$10:Xp)_dt1+E39d1MFg?6#)H$LI9DCD\u5cIZrh^p[b!Mpiqs?sR)SO\I=OdPNXllXg7aV)C)^VW
%"KcG`4omb`>+*q1R%hlcdT&9D@h=ARc7g7kI]cEHT4!e.8('>`U93tkd3r45$`O`kK-N6q'%^UM2=[R`gC>/F"S]Hn,W0d+5r9\r
%h;Y429e$-AbAnacRcORM8W<p%;CCENe\O_TAlqXDNJSPh+gpOA>8A(tjmF$EncH%U/"^\-:.Qa81<K_1U2TBm?qch6/UdLuW!fm4
%a(37D*@-LKKHIYVWV1M`+<aQH)ET0h%mblqn]=C+fW/QJ)NHt^=u=R@lF/$Y`S5#Oq>suTPRK'?/8IF+jK(4&A;#k<PJiDUiLrrh
%>DY(#5aE>eV,PUT^,Eb?D:/&L)V,gHEn!r/:CX/;_jdSXSWcfSo%ojBMF&2[DioKl$^2iqL#&D%j\\HN^99R7@]JS)f-44<*"rh<
%$FKtqLrujMLrL<Z%OBJCg<bESQN4#FA.N.Z!8<7Z5GP_H!>Zhi_\R<u3.<$5_N%s'ItFpMJc^d3k?d\RQnaV)Gt=6tXBeXZ_\#.M
%!A90a0t1$PaLq]i.Zq$]$D`neWj);$oKc!MEiEo;E`D;IJ`4VI"hlZ%M-nid\M360F+AgR-e6e!?"uhS`%ds8)I')"*jQN$&2KD)
%\rB,f5<]Gd@MW=W?)&!1,7VYDD5V)uM%M,)Cmmik5YSCtSXL)pE*;bDAcc'-@ML&p6RSCsV1b#t#[("tQ<C^5V4(?@."c=d#Y`=.
%@%`k.rmKN`"QN_Qj]qUd%"X9tL6"g"_FB^R,Tm@J#aWPpm#E'@D!Ai1Yk]]T#uOk@#,iB^7#D=TJ71DA1p#0m7].q86R<;)+;F\t
%E6%0!9+HfWhC@k`L.<8M"<.Rh9IYBa)C0i$a?srT[]PCL.7TU@HK1n-Jh/bf3)W'h?t70dK1XO+h^%Q&`o&rem@5<mYl5!-9c1rJ
%Oanb!F6>C>L.o+D&m?H7A`]hP<D@[*Iu+oB?`dUI#Z6PdCjl]K`K1NWV3,?.3`4IL,+r[3R=X.-=fq'@O$`0,UIE(pVS8XLaM17p
%<@?U-66XrOBIdC/iO8q*hKrH_c+-ll+jA9X!*GQJl>i/A&ud6sKaa:([ucY.Iidqhlsg;e[M+0MOP"#IhD5Cr4B3aS?_\$]YumR@
%`!+!S'LXZ$@p(XJ">ksT]qRp%bcfChH=.cu8J-1-2t0GZN^0o"J!1X]S8Lf!&g#349Bnl&/cu_(9bLf6m3hgmW6DZL-=nm8>`Fm*
%)_)066Mak:c*HJ<8L]Xnan'mf/HVDm:n2D<-BG@245EFf)CA3goSAP`0,#Vm#QZ^c5RnVjDm<TqDi71%p/MfoP9CiCQtmZ7,UdV=
%>Qg(Zai6HUSuHqf)1bmN53,_op+<))fF1FH[ie_MPtE@+#d-b@T?c^>,G`>`J7.!Wp#Sq7!A#a61KZB+(tMZIB@RP<68S"4p>=t(
%.nCoB8]_VDA@sVFr6<3IEdfA.[,Osh3goaNJl+ZOlc5XK%u$JoI^b@E"go''l!_h]8.\[K9M"`A9NRBoiO)%#0A:t%O6DEQbp`.E
%h_6W%=[%21CgE#Cc_?)I/9bTQ4OhRe41=_?TqWmFDP5%&Om80CARNQrWLHU%8FJ<29`0hh0/4C3"t?hl.(F$AG`I#"DSh@Qc;=(T
%<b=HM:u[l\(S8PXrBQ'l?`-;Q9W@M$9fG.D_J?>QM=>aPBb(ks+cpFc44Suh%mu[Y!2[M!RMN=';\hLLdp52"i5(3V]c/s#pdKLl
%=cPN3i-]fHZW%:Eil<a11M+?pg0W87n-JUn(T$][d45@hpOrMUC5F!-A\Um>a@ud4*P0tHS2TNDP@j=:W:.gI%9BmZI)hmIYVYE'
%#0`>%M&AINKtt4"]Q]$($o?JH16YD?1u:;%]9knU$1FER*f+'jQ1rS@*4@^&L%ileIlN+1`d=&cJH%O]4(q+s?;F\lZBOjE7XCDl
%oJ8DN47ml]Ht^`KQa)h^:TT4n6t_*qUO7:TP0bj@V7V@QJJQ;GFpAh^"!_"r]-FSJhKXPb@i$(HXNGYj)F_Sq)q>t;2<b;m9QrW<
%$'Ai$7!I3?L@[.ISOFG0U%_0$B9C#RH,Of+*-0$`Qn[@TL'asoQ0F=$"6BTDl#%aa1Ymo?FT^)5?]I8)Q,1c"/1'+NW]LTM:Ja=c
%(R"XqX0Zj&%?_%NSVRRR05PjF(L"EhgRSLC0R`7AgE!(V6!W[B/1aB]_E`;MM,Z`6kjHT5+f1omm`lI+^@O.l4,AT"W7'L)J0+KM
%#/3/lY'X'mNVVunih&d!2nhAH/?tP:n_F4/$0=EN\iTmU"]Dm2\i[\q#ruVZ]<gSG+qNRumg_$M6H5pFG80NK.bbtmaAV@RgDp9_
%#b9W4mOZ/IR/`]'h-%2]d^N8g4%n!'"DKCBSV9^h!miCPSL$LrN<A"-XUlJ3mLGD]r-&7t*SR`S,@B-lM!@EP_D0f9-1`6Y9P(g\
%\f46-.bbtj7)62bA\1<u'pY_Wm*:c*R%0X<GDDD5iU&"7GJJTi&#")hKV7X?)X-Sp*J]*u.G^O@nN>a+/)?ch`7hOR\i\+3;JufO
%46s;2V:"*b&gTRnVRpmpJ]_u*]49.>Kc/Vc\r1sWBb2Mgcas"nG"3rKnp!m]mYFD"WX37K,ISe[-'djm,gO^!mR59L]$fCDpSr=Z
%o$C@ZKj)r_X(^mcmVWk--+B)#NWa"4N&37s-G9J5:YG.q`u&At]<b1SON:#HmdOdKY362H*VPlYROd,5qHp$_>hSNbnZcI/:"\l1
%M(G@fb'""@%S8'K[QDM`<!lR442=295.cC5%TnZ@Dm!o#![cUHg$T+m.I;?6hZX9EM,76]43NYTQtCGaepED<<Ot7_CiB0$m`r*Q
%LA(&&mLEo86?#ccmKd8kn>lrP*?Z4&kI]0uM$+Vq]"?q!'=p7*5mUh+V7Qh5Rq0Geh&UU>T_2(Dm\#r$Bqs,4619q.AkI9&du00+
%NUG()6aZ.a\iWPud$SHfGF%1t"Z%>8*)7,)AkhLW+I,R"b'1nlQjTj@G;uLV:-%FJ_`9)0Tp>)l#$7S&b'.KNEn*m@Ke*Ou;B5K"
%pa+VW<Vc&6!Nh?Pn_HM0PP_KPh;P;ujZ_Y8Z`)\-P?I"ZKA#9f'j:A#/51#d599OeONcqd^ifr&!=>Z_amS)LZ_FI?h8']E=rKY>
%\#u&=QmpLTcrY>ld2a&hXNhE&mU4M?cHU%j\DDTO=RKQ."?USXV-&$.`Y<VFR6sV?A%4nP/'4D5_&\J'G!Jjum>s)3?[/EVZNbdb
%Ldk/'m3$#WIA=9(`0,&Odb@o'2q<T<%Ur5+Wm]X)U_&3,?0LYu&2Nh`]cB9BF.efS%X&)65qBJdD&R!*);+>,[tk[#7W'#XlFiA8
%D7K-177M`J"!)b0RW)2C4'9It,]$.t0JeD_H'!,Oi]\ND_]F],8.Is9-N_m/]Q<X:G(Yh^lL9V4YO35CKtIUV<DC>f4<+FOT+Y*T
%N#k99+'rDdS0*5Q&%-s`$7#p.1bdYrB?r>uW6BFFS0ZfW6fSD?Nbi?r0\[2JBuFfMR!=L3+LWMj06G:"fFIUecblaqgS'[%.%;]k
%*Gj?k=cbHe[NkQ'5tmNp%K]'A)=uS8?ATC9ZQ5O/mD*LM.uX+cf++uX'!'#ga#_2,.X#)N0?_Aj$*tWklV\,nZ^i3q.jporBu5"*
%3dPiGTU_.X_j/m"o$50J<+7r4oNjK:[BiOn1$PZn+geUZpb:[7_hGJ@)m:8%#U/93]QTT_#<pCWm9nlV@/%,O,"imgmq9:VQGj2F
%TXCP+!>DZag&Y0^HjDs3[Bm9`^X:b<+tRj75\k#-d3?^>XW>?=I5G+h8BOKZ5\gU]!%U`Vm9j*/OJL:X6)"fH8o&'rJ(3XqcN>93
%K;$`I=_?'_S'fs+Ia^-3db6urKtpArm>,&+D`sr)ZX@n@.d/:XK[`ZB9j-ip.q(WVZ.`&VU(OH2g;0q"K@,q7c4[:kmflrW$Od*;
%fVc['Kd:>\G::_D7`j7#WuWGeLJq@C/9,)[2e08U6cmDJ=m]nq&3m2#g0%n7g)6k17Of]9Q./RUCRMIHPM/;RN5Lq1Np(+XG)b"3
%&u2&;5\apNOa&1[K?)=#^IDtYW.6gP7VW04=@0ule.0N$+3D'kUir'rnD0&P%anbF5\XjOM7<aZ4%fQS)eY+QQ3c%j%#f@SJ"'.k
%0\Ts.7Te`kN-5n61KR%-8k=VA)=8j:6T8M^K3=b9dZcQ5A9$p#jI\0%*Q1W;2bH0t29Of)m4@IW=`$!h['NG&Uc;3)_>Rnk?K8EQ
%2*ckcEnX[G-e>k@B#a<KYDdOoEL1"$i?je4E"8[aVGc.$i2,kI;;,/>F=')E["E^(:7Dip*B&$?b28H5%Uu,&XL*/t#K\J44B[')
%8q^Di6>Hh2VO*S!%ME26YI&HUAS/ej_J=q9-GF`d[DTf4"[D+VUO*]^r.0@%CboXe7X=B?0*:<2B^IJSI:/b0db7Pe&r<a>g=]SL
%g1+;J8GcroJ_!R_LBFLr%gOF--_tofl@c<:;EMb]Z^>u(C5509og+SeNfc+qNE/q=b=^XPAu'T8fsg$/XJC$,?X[-.OP8Bjdc=D/
%48`'8m4,.WU3IppT!I)/Xd/l\C$gF[+MkQ[CaVUP0$]:?CfWO>7VkR/"1W6.fFIUE0[W[Qm9l8+Wl%GFLNoF&PZ;0SnkBZBDaJ9\
%?47U%<FS$PU?q,^7Vp+1+;qC5YoWWgUA!!>jc*'4_(d+AK>HXTPZN_/&C)G%<$Sh]Da#&Z-cC2ljJVV*M!Yb68eH2PQ.XBeGuc_-
%"0il@:Q/(N?9:!7PHU\mgQ>"#"4,t[fFDAI=BB)r9/nf2mmNuhTk_.kcC"!4#`%=CAin1@\5*45SL$6;/@PqlSHQcb=JsAdUi<!<
%ShSn2$CAusQ._1+6,nI*ZQ8#F408s/kSOR]3jN*nAiiP>NmjB_Uhu^^^G3'c@s\>*5ah!Fm!q:(.C1%7'!1ecM@"m6j6K`X4+;S*
%j%c!/8F_i=DIBn_ZTHd`K\6k&A&4XP@(%;3:t33Q5lsPKKRA(ZAih1J&O3KTgC`V,jK4^#N^uW[q_>DtBc+o;>,goAX$\f=b&)q.
%84$fGk-ed7>OMc24"PQkB:MfQOdh$]Vc)9+V"4\r*IfQ%0sr$qHj"[nWU5L.-Ce@OC-.5-.I`ST%b9aZoN@ULfH_`VgR-Y(?UJpH
%A[W7eOk^JkG.7a'DG"`#EqVo8a%C0gL[mLf[6sc&Cl/P&*P9^4r`!2c_JM(K?]"0k1r[cp@C@D<.ksLDZQ4\;NKUkqI:=KqoLPA:
%k\4'!4FUtTUe^75#&65>5hS>re97Xo@8U+&[Ne?EbGlr>G!t_r/CK,17*o([`[\Nicsu`t7W&GB'_^09E]]uKl:1Dho=2Sa&Wn0k
%6Ur7PHD)!u4(<&He<Slc-5B`fl0Y,[I90.b]#dK0`8\5JDFY$YgA[AnN^Q9'PF^(TOjuc*lBL.c`&kN<_AHkNO^0`9\"bV4CYXs3
%g2R"5$Ri^Ek"%`9UcqY%]CI/\/-#P7J,6?tGPt]p:I0ZlX$>EFIpPTd<sJ?aREAm,IoBZdoJ`E?l;)?oGLjiBIdpcpq#/0C\^`(B
%qG$iC#5F\&s7+X3DI/t,cdT.Ki3,=-q:C+&?!`l4HraSCp>YE4GN\ESW%s(9Vt4]L^:h%(I=!T1mS86&T@\;)?fHS'IX$4b^\l]Q
%YQ+(eg"hRUpXcUl3*tD<F7]dZ^\I6ho"G%`%0uL6l\iB!4"e62]om0S4&)mWoq"WeNVSq<#PS,8laq'O$q[YWf3jmQjbF#Wpu0T7
%a1(4JhgBd[?mPE^6iJ:A2V**ms4lKCIf#aErV#gL\#3TdqhK4^HGN^&dBAnMnY,28GQ/@^^VBX:g"kn:k=\e4pu6^Mhn/Wl?f+)L
%g[fXX0:2%8HK!_(>]G\i+3rK9n'6E4HiF'%T3n3Bd>5-ppGKJHRkO1^m`otr7ABmtj)ojb\6QBN-WfbX+hk]B'7>9/nDm[FNiV"6
%VnBG9cs,CG':o0r^2].hpqq0&_#!$LHC&N>W.&!ZYP%S-c268%o0;$%^A[cbCrqJK%;:7Og%g5p6/9+9^HK9B\QpnRiR0mXQ^9X4
%Df=K<gb%85O7X4[:%!L^hgBVHk2b"AQ!7P)eWj?E\YF0+_Wo8qR"EkRgUA]B+QTbQEeii"]t$9X>N,-K2](p`?ga#?hWi:d^>/"s
%*ORP5_\;T]T"1cWk:HHR8)rb`q^.*el+B"UmelX6Dbj`tI(uP]lA8+,mg5MN$bWrmGHX4ms6`3h9GSJjj3.0SY-0M9mlIFsU'J/'
%/)Ur9n)(gj35'dGHZY$[2_S9NYErq@f6^JR9?+3sUj]qsUNY>a3-ah5oB+<0o=GP"L*PR@J*,CDEgL.Mn3T"ig!/X'm=0N`m;B[M
%EmFT%\KlWtfBm@u/LZL$p\sm2l.PkKB;`oW1qA!6#sW,@n(sY.rV?DpI<1@pgBBJo#6"Plo_.Ckot.iblQr=[r5mg8B9j(tGQ3&;
%F++%\!=h=S;MV%BOiAr>U]4XS.K@(OGM"Me`dn@DT#F-n=ROc/e&M1\k2Q7*eZsGBY933j^<j"Y9'qA.1jU2[(HD36^uC"=i(\gD
%bR#9_V`?Z-k@%MR6dl#CNeMuL1?QRu!uL??Be:4?XoQOR%,migk'npZ^]2r]p0BEX^LRcP#h7?9S;'fk:O[V:EVJkNq;%4M*7`_e
%H#`TSl,?C.EBP;&dg:IoV"Z%%DkA-DO6="0S7<n,db7j<d@TLpGgs3)X*iKYNJCVop*nNI/Lgi`n1`g"X(@.r7W\@$9J:=%/mmD*
%TE"Y;FQ?B(A$XDs1u[>`^:nj,6k.]TpZnG7Q)^q;(RM$m;W^L2R4\1f8!B-BZH,58rcg8HoB,c6[l9X4h^g`a&'tc2>&%kR?3dLC
%Sl.Z.P0Tn(H2Tk.c;UYfI0)IqlNR*Mj4W=:kgF^W%=Z5qY_t]_Tl5kneZMEoh>d-\Mt'n-]3/VCY.aeK[,1e7h,q^<n/OGR_62LR
%nX`n;T!7ClKI)QAn-_dYKJi8lJn9']-g-Z/4@EE@-`O?n;tfe:e*H>kb:h-ocd.or>;gu:YOVR&6/(S^j4jLRSkkj%0&F:T4?Yd@
%3krE+j6><n4EAY;rQiU*+78-MpO?-@EJZ,G00EnoEq!gl5oAm#eG@^0\_VimO5mICpAcoB=?>jrRXtM6Ts&OiqJFWh3:s>eUm^j'
%nNI]kWfBQ&/K)c202Hl"YY=6)`T?3e1;1m0IF&.%C,Da[n3:mmpPs*6rOrJ]HVP5t_>%?O^::fMDUHhbV>D1]p!*/m+b>I8r<MoM
%P<k0\hUeu,0>BaM@@)O.eX:WZ[gSIu>e.$]`<F/)]`^8cY1hVa(7;6`9+9FArJfe,iqiRp6)V`Ul/gS?DjD*mO"T8?TZi#\oei-$
%Q6]Sn\c]ABhq['n/NHmXfj6h"e*Dpm7>gikO7`]Q!1<.V?7Sk__Eg818sLet#'2?SM^,Am=nERAI:FgZM)r4GPd@8fMR"uAY-fY_
%&ij=)Z]=/23V$@<"fCCDe=nKt</4h=ng*RQZ_pc\Z=GY)/]q7TnoL<Z:U1bTrW6h3(+GAu=6jWRb+W"gCG!]FkdO"<im>12;lrJK
%HV1[o9*TGg]Dc;PBo]HqB$n)8JC`B9[leQt]L<QAl^'Rp`/WgQ&<HZ'qg=#DKjXW0s8;.<ii.=uOX!97G^_6$p`0ajcVjq1IVdN+
%]dhTgU!0Tam3-d-Xa4j#'WcUteSD3l3sr[p]A"N4c*c),4(PaBN^^No[8j7j9WP;8g1m^k>&Df):IV=D1I>I9+hrG=;mKd<IVMLK
%W"OXH2L>-VlIKgZ?jbJ%Zu2Y\RYg/P/uV7(62tLn6/q+^I9C*q%0!B'!^FHpkP=6&Q`!&q[>1?o6X._Mf<<NX>[6a[Wgm$T]feTn
%qeQiu_s#g&IHoSYX.,[,--(a5F.Y3j6#!b;D$?b]S7+QH:`?qK2<5$>C#6N,VT\p*=V4s5[*DG5Vp:gb=T6pBPlLcjr42ase++;&
%O43-p57cfuLbFNq)Ef[H_OnZlh+rIe,,4V&.H4\mS6o_Cs)Fi?%_e]ci;u)_FgglF5=4pS591h)=)W$6'gMWBms"#qT;^*0W<ch]
%d2f&!=:jira0&Ompg`6V]ii\i`iptk1`8[5UZoF!$qh<(5PD%*Q],?S3S%^LIXbjPTOiN?BB$gNn%kWUVmdIdhd2l2/[8E<p5FAE
%nAQbp8027bidp!1mIXUErRUo8Rf@g"-n"iJ4TH!6g0.hS^MEgmc2XsBhZjX,c2Si$rc_rG3:-PrX[coPSb[B$-+W/c%lCS7i.7OY
%kI]l(f:;;^%=n[p^r;d%n)'\N]X]XabOq#U[df9hR5mo!c5-k>hBuCnCK*Ng?XDT:J,dkJ0>@8UY$CJ_%'ZH67Q:@`hQ2G8Wr2h_
%S)Q[brGL*-%p\iLqFRaBq["98Mat-DaOUXMY7DaB[Rdg0@C!"&>JjueQu&c#pdE2Mf.bldLWRK/s7Df8oCM9DMj8PdBfUu&^:F(3
%]8N0%o=Ie:cX20JF*i5H1U"L3ch7CMZQP]^ITcYe@D$;rmG8O`?8/8*s1Z!hJ%(>VE,mM[/,($\q<W]aLf^gLp0*sVR5c+ge9j@#
%ARC\L'956.2>D.;_2!5Qcd.KBHi%KI"+/22/m*6Wnco;,2h,kpgIgAsGQ3%p4JW2kE;7NnGZb,%CZ&b5]W?[N2=RmU?Ilp8]uMbB
%//!3T-k,,hCZ+<)4jZ(UnrUZ1rp6GY;s/3U!MhBuiAp0/dSjq\I8EVsi$0dK%W14Q6Upt&9ZIT#Yll1W"e.K10cW7,`0)hp3nVCA
%6F=Wp'qZD&a-/r\\@f?Kr:FH2]R;p_%p5O-LZ;e[.>N@34p<4/#J+%CIm>X<]Be.[mr,QW0KgujV?_M#'n'db?eX*erPd\/IIZ^h
%l^R?EP+&<"Q+m<AC@0/.(mEnAgY!AS7D@WT6RP;Is4lM[=u(g9Cob54Yd_ZhCTj3dDr.&B@5lu5^L!k%O)<5CR:H.@q>`bBlTS$U
%i6]3^,Gks2kG,+"g?P@PMMGerq3Us`pAMtr7Fc*uh7a*bbf0g==^kk-dDE2<aVXdHHs+El]C<&>aV*'NO-]YSa&p0DT3*'XX`9:E
%nnF+JNffr!*+R)-ei:[cHFh/*kLV]5)TOhE0=/YQei:Yfa#K_O#!B9)dm[h?:Ye5sqoGTe#E,'lrVl*.B6U92/aCS$?bER.SLoX=
%*"B35H+j:Sjm1B>kJ+bps*sL`YKrNE"LIFg27Dh?0CCI\c?=n(-a<\WpXb>H7>l,*otCY)k4Z/uKZcU9>V,,0Ol+tVZ?H+th,mHY
%mB8cB`rS$(6m\uq6X,>SiX@uqYauu_ckCsJ1=$c@+5Pa(3M:<a2i=L>QF+U0I<0aV[H'a8AIAs.`sI&S"?,JK!^D0_J,Ap9bAo3V
%F&;AjTV!d@WXh7Sn<fjrq[D"=XN>5ePhs/QIMm]7CS"A=f92gIHF_Y%mr:2G?:tKDpr-Ql+nF0dhYCMTA8+?Ca3fV#n&cGq;SdUa
%7cTOb)Llt'cgqfZnb][h='ok*"PBV*[nP\]hV@D@XkqjuboNtUY^1AGp-k"aRp08G5BUm^!=H[.c0a8T>O[bUBC>8Z\]6;(>2?a>
%SQjp\eX]q#\L6^g`@'`l4gRr#Tj..XNlIbsp.Z%SV>FUY2m:!,4^E)W4EZ/AWNe0/E.(bPLAh"J$QJ;jKEgl.E@"Y5bS=4=#]V0a
%34Pl]]KQfj`dRu$Qc5%"b4Yf0qXX:F+.o-\kiV9sfu;bXs03sdqX3d,b9`9-]l%3CDBZ@adHmW^j#NEBoQr.%UYJ:&%O^DsK:GTd
%f:a:`:QBYl8QuGg#k[o_C$E(dk0$s/BVPEn05n#8kInf,R/^W&$Z7[$eJDkrMp.^5eb^98pYRSi,.LU`o4K.Cp>a!6J$?-H/Z9q?
%p\sm2l.Pm\cSiIaF^T^I0Ga9I*mM7&S3cq,#JALeBW1OGno"oR_kV#AFp.RDlK%TP0<X.b9)Q(IpGF!AkriGF4I5g8f`c5G=3Ims
%^OFBCTb;UHLYu$5F/rlV=pB?'[1=H#4rW`pJJ1lcrW"$So-\l(hh"51^?tCgq=`tIr':E)I^0k\X&8MF7aYraIIn?O6MKtH)b!Q)
%5l!^Dm(qEb:G.8!kXNo;m!_>qmN9'D)1N'"['/T!^_lmfY.XaE%,nG2YXAs#@ujf<aV]1%ge>`GpG[igER2Ne'q\[3mcj,Xh7$JK
%MeEoel?p7W\GQ3r@]'UE*f^K,d+6,)0T;5`59-#KiQr+U#J+%CIm>X<]Be-pptt9OHSupT"F2:44B/*=EKoJQI#gdGMkaMh:Q'i%
%8TMN#$^bsn=lpH1Q:CTU9Z6[-JVcRBmQ30"T5B'mP5E!3s0uT&edIO)0cp8?onW,(G9<dC3^tEFF]r[l!+4oVZio-/rqN1<*O_D]
%=pEk_L%oojNjsN*TqfZLGkMh:17g)%^^hJ4j7/j;HPt,$J#7\III@(Z#+>6@TB?K#,nI4C%t4aH\H4jg'!UBpqImt":EiYV"Q/A"
%pPrNG7!k0lo_:d*kU&F#?$,]Coi!o&Yh&gQk5=rI(UoG>bW3\=YWH!LS%1WZqXXR!QGt!o=7>Hjo-Ku/M!Og(YL!2gP\T9)G@F=u
%ATg2Zljq.Ibj;@RNbOclfP>I4>o^3Ss7Q*XqV@Ve9F;$7jr`AtE:?_cLY6AHDg"=d^k]#&rE@Wbk[WB!@EI8B0/$B;kJsaW[D_WU
%8h;(K%3A&loImuX:M[]@h=^)'L.#0tkc6r(>^p)J6B%UN.XuI;c,KANDa+!ITAJ/rn1VQOiTf`ubOR:IPM^b;o'6.th7nAI:4E)^
%YKY,G^]3@rn*>JJae/)f[JK(T5N(GuBDL$V/[Fh@X?$+:aoD?)k2^[\p##f?afh:Yf"1#fFPTOOHh6%fe=BiAmeZ,"VLBdD_Vh'\
%]Ju;Jgnl]!L!DlC\FPT&)!!kFmnN.E`jZE)\(e?8BL:Rlo^TKVEh$BNZIunX82tmMOaME4iO7d?D9g&B:O_urCJ:E!kJao48cSXr
%COGa*-f<^N^:l#(h2*YJbd6jR@uYOWk.-Q+oaV^<c\!sGf<6@tqkAIC?_3L7kJ'6^ruu@mXg<8)19a`20?U2;K/\&FJtMepnVPH^
%S]cDDO3pGp_4'`=$!nf%^-iCWoGN/B;]0BH6ZQ`RmE+6]VdDST-hDI\BACN=7WM1sXV[<A:OXdnoDMSL]?/6DLZ$(lpnjG4\8As8
%4(*WX@&MVBQ*bP_O`9ju,C+^lG0eR/[`h#4q=!j15F]u\+3fo?k'?bnE?rR\6[NGFgmO\0_V#;T\ae!eEnhJu[QaFik,8VuQM^0a
%lXHGjN2=7.gQ?IKS]p4(&%<PiD0$b)m[0VJ>cdu)[nhJG2q^'<J,RKmd`K9'gWA@Qf6/#hen;"kn,i</feC.q'=u)JjXR;da6.$U
%p[Un(8sr&a$hPEjH![pa2\eA4d0!*\@el3]:7o\?oMfgR(p@lDEh^h$r08@Jdu2DdEa=G2;<G%F21E[<Vi\.:9_kPLqdEpf?>^aS
%4.#>kgsq+YMKWotZXIqOIWFt+a4]jlo5(is4g]uX__Sb\==]U$ZJ9To9;jc(V?'Wj\"[8Hq%8kHZ`^rQ(V?FAI*TF]d!mr:O'PiL
%.Uh;gngP2`_3ML7nTgaddk>D;2f0s(guXa7QaM@3M4qRjkam"TqX$L!o,IRcFe"?oLh.DVc@5Cq?S$YBMU,d)pm,4[h"P@di3?"+
%rsb/n<pJa^hV8[s:[rDpa%rpEMMgkT.rSL\S%VUtPY>58[YNY'YM"9Q\i)fLq=4][aDs:1/_?jMY8D)SlC`!u@%UXB\AA%0H0,`q
%=@@G;%90:<URYH"l)#7%2q#XAlXiJdc-WPG-F_h&kRt:4H(,Kg^1>o_ST/ZT;[7*]T1l1%ad8Qh/C(CR*QE1`--D,`fo5#%b;2r&
%cJmL^(:Th%d?fj<eK)f+@WGW-AY-Tm>hrtPq6HcfiSF#)SgF+na0(B!%*W\pQ3f4e^it%,ZB@m:?C&&R5:LsH=b'\r0t68R`QWS`
%`H'+FdGfQJSLj4Oq:lcZT3FM;o@0+jU.ecu^/[0A-L:P9^+(2Gh:1WaQ`lA%hCrP;cJ\K3^OCV%mb?4"k9j>Q/Ui]&?oNSCoAFRD
%Mg!i0ZE[tKm!^/%V7^UlY?a>%eibh1I4D9RAhK'B[W@0WN/h<k_]=E9ABTa!3D?TpY/:YO-lX\79Ne/?bLYrpW`uW2fHl/=#c/1+
%e!:NlRBVH0LG]f\cGOCS8Iq%j:3R&g:gKk'fAdFJFjG3L*&YE7S8r7<VDDP5SGKcm5Jm^a?,oZPqn=_0!1V8Ao>76iYcm5:%]<up
%<DXHRk=lg`m%N:YDD-?"LriiMR?d#/>u?DL:)&J;T!73Q\OWp=\,;Ht,@K,f\V%<>F63GCVnQ:.e?U?XHfI,qWSF:S5!Mj2fb`b-
%rn`hB_s?%IJ6`bfWG;`[+c6-I9O=#m2>q&Wh]oUJ,TkiTQb4lLd;q8(o@5un8bl-m8'DgMm+J[!-Y6F"W3gRJ(q&O=:W=;%f9ISf
%r86XZ^>k]=.U7#/(E^@5AifbG2a6nXmJ=$4b'krnV,*l]`/>GH4Ze"?op;/[U%Y?tfR$>SO8,fYMm)?U^2nOYeFg6\r.BQ;?M:n6
%:_EPIVq[MPSm/X)1N0(&V"%>$1g`IMP3G0@p"SrA94%OROaQa``B3pPZhq(V3Qq3G`+bdP_]qZ,N[JG#2])/;oKKnJj83*M)Nd2Y
%c&8'\9:?Uco8A*i?[dHQqr[hC:*O9Lj7N3@jecb^U[IfeCSXH"EW1UI/e/)Fs8;NWmeleT0B_4t]Xtf;4T;b.(!DTc8MR$aIr40X
%rlnfq:G8Pq#_,"J7K:?gKqNLRO7S.]Mq@u9H_B,@+J=I-mm`?nUG9-6pu6dJJ+6\E`g^=Z#ZYViEEgZWO71t3S?:bi2;G]r)qT&h
%0.>Vc-/+`q72tiYBOa6'BOfa2D1%:MU\WSqNL`Q;MR**+_8c!6@,lk]]-Z+>j0>puj#e1Md=RAW-O(OMY$g:U=JOW#XO03WenCAh
%)Z@tqCJ6U'QT&E'agILC*5rgRjQH*bT1Z'0%\ZA,/_%<*YqHkV<[*N/f-64Q)JT,+OiH$lM);)YNARf#`fD-Sj9D"o5'!Gm,D"t6
%r87egnLpJ_6fcV7GlVl2H1X:=Q]J?=N40^3F(OhZ^$-,FF)l)VUH1b%DMR!_pT>Kh2;2P0o!/rk27B7BnRiI2Za/o?lLq2`l&(h%
%406Z<mI]CI+%JIi\rNDZXR>(LWN>;m-\kC8RG##^\QdKXR'PKi5'PlJSoJ)^3LH+0NiqqZ`GEp`fW<f%LjLYm?TGHEUCK5e19=D_
%b'bpU@aQ'A]g7eT<*k[,^>2)QVJ%>*T.fNL<DaH!=PSN)WS/%&$eE5@T$(OF`Ss2)e=0n3b6!`m#I,^VDu1qLT2!hA/30aIG'2e!
%>D>cZp[s@]UeImc&a]*+3u*L?FEj@;FkB.NSCM-,=?6)5h-[7;.%eE<OS#qAa(8A+`FT>*d`/b;qX(lTW^To/AAuE)`CI*m^T746
%0@'9!X/E*r]!"f/EJN4ZqslqWg(\n8fP-;5(Id!2o"DJ"c#*!$b4HC5m$#a._Ce<l/lo%q;hh'@o<Rq]gN>71k:%<Vj6+VRr*mL5
%Z.7$6:Gpg$M`sq3_r]dEqJ(&@;DG%G1tedj=\sEj3=j66o'uBAIHc1&)X[g;PC02&$BsE>i,.qEQaL^h2QLj[OpBh>imB(bMQ'X0
%*pQD#fmmT/XCc(%rm6QtQ9\a/^u\Jt=b"QS)B(>.LXR&th_b"+ep*jn/;hF_252F\K6!k/m<mOOHZf,K&oi[]F]NXkWir^hMmYh3
%K5JWq;RWIkSPrro?U=B^EPU<<'%E7L\Z/jqHu]#.9mmKHK6#T[ZYVuLdHNOE2DrI5X7B]aMtn=hTUMmZ09Q'H6abO98U=g5?r]B2
%e<f%CMc!Gc[YoIK'H^1@+a5uU%L9gQF6/odlGhI)\uSLd<!^6-n^a`6m$u4Mo1aB#9m%3*13p'cNq/]>FhYsI9O6gl2=thmcKaCa
%RHbH4b+s!^FeaB,>qG5rAoFk5M-k'oipM1g8ZX@t2'oN),^qa&$2pT^PXMo:-7Odh7nTKk.NClL,47un\49(]PTcUa.jYcDjT^V4
%]-Si0j0t28^_%eOM6JQZZ1tk6OqKj*.nPTEOqR;IOqR11-7-NhU]dHtZ_R^udlh=ibQG-`Z!WrbE0$HQ82WQ7,KA(%!8T4u&*+la
%JY,J^^jR=WJ_5dU,t;$oLHkLOd`4s`66\[N7\qsmnPcb,H!=;nY??]>/+Eo<cgVrk1Ua`'.*Tdl24QN,Vam'A+LdQM)Y+/C&T>`P
%$"-o;NmR>,K2%4?NQE.1Eag3]1V\?dSW.sZ1c@UA(mt1a11jLoMRV0fZP(7e"*7!EfOCMuK2`?SF%;3t>-gouB\miK-:Id_[Wp6I
%=]9F=kr%bnUsYl065J;j)r6l"@<]]Kd/?p]OKE%EHGk_h%=sh?3(b[=Pln[?WbZWN:V)oO#0LI#S@mQX?HaJtdkgc`SBe3qW?1rC
%Bm[s9SU;Q5_/_8jY%D]"(\4d1MCFo=kZ+_#cttCcHCoO6fo%b-\X_=J6n?u>Ea(p&AX(QRje!.NC0%HCPZR:#$dBnp<)1+I(FL%>
%\WsTV]CUpaG7I&HPkOJAr:cc0Y_SdC7bh&^_0sXg(m9Gu0pgD+0>irH=a?"S2fVA@KGl7i.Y#uHF-3_EGYUW#C?,$^ImWIZh;miK
%Zj+pF*T+*b7&3/;N01GA?=Nm?Mfn$:`OGg"@`5&Rr:gZVHf#Y6hcIR"\"Skl=XI(Lqshi/]8:!7E]Ykj2bc$Qjdcobj@(eAl"ko"
%D)^QqDT`LP[s+%=K?`"qV&BKI^-4;1Nr15U?!#RB14`j]A3JkdbS(*hg/EqM-u`2$r]-=p<625aVN[M)B'A;^/a04!j.P[);p+3h
%\$7An>EuM5f?-f:kGFL&<TU5YZhU-R#V`2=R0Y2/2O9\^;t:IG^F=H!<D+QagUmtfH&)GC7@Wm<q\!`?gpN32RSkac>0(UA,M2f$
%nXPZ?R#51u-i0Z!,Y_32TdciqIP2M,@O_k)c?;2HX("E,A>jX<h7[s&bdojd1s.I7NUlo0qfe*f7r^W]-uN`?V/tD_-nV5XcD-2(
%3m4;J43[:E@R&0/-lU\r>Mijl*bG0X:&)5DPVCCXKIqH`huA(LPg4-lUZdY4o-br'M:QifHR;0Kf!A&mk);g$n]aa"?$I<4SS(jc
%/'KduVUdV`E[_sncF"VXcDB#nRcdT0B!Ya"`XfqH=.JDN,Vq:'V9EPN$Ff1rlJC1'm6$^jHmuDt_Xh$TQMif^`MWRnk>KaZp5[G-
%Zq5'%n1>><DXSEA_6gnnf91hZ0#_\NV77PV'XoBTU=#oB1*pj7VF^JuSkL$!4H2;?f)C]_rfgs9Nr?LGS!%PBA^oV2Ieq'>prLRA
%X>pa)UKM'_B+[VDP[8DL]6Z<$9<"nTAC?Q3H2(<F/:OU0;JaOP4F23AYWEIH21Id7Uu[h5)7=\\>MD5KN<5-o4%,de_R`1G26<k4
%D]71AO(T6ZNGa(e7FE<bp($Q",Z:?U,uVbM*W;9l8p@R`(*B`n,;/;gkXUJo^1K45Ac3Y6K2=>t4nlqDkKY#/k+UTU8Yp[H4dDc8
%kqn["kMJ+]dOa0f.]%hX>:N'WJu>T4I[j"J)E]:M5&9Z_)>>+L.K-\S9&>_'EG7om-#H;Ob_>m25&r-Lo:"/o-,3t;r!/B'>o9D9
%Z6hH%?oEM7WKa?\'Pl]i8pU21?S$T)VGac@h=b&>G7R?CI%\L^iJMA;9TgbjafLn@0a@HT=ukFe+5Q+OZ?G8:PRLqRERU70-\u]0
%nj0A/G\8s]:]b*r`a"GE69Jl?](.I-`G3'YrqjD(nGP'1@Ns$\j"ja"DOY+:ODRoYP#&"(m$RXoq`iLCS%O0,Z#[l`d]W1%I;"Ks
%n+YhZpY.mN42$Q5&A]EbFqVX"h-Bqo-MPspG.LIeAt`keMJmhu6EAi^4d&S_@<T<3k5ANFEFUoY#inL55U'ZEeoehoh,23:^V.1i
%=_kV#RdRS\Hcmq@2;M'8VL(b>?;[h+<9k:LH:>5J;6?H]<VMAc]iK:U9NBo,9=gsM\AK6W:_@i^^mHiugr^U=fIX-=3dVn]*c@7F
%YTd?ka$!tBoRU_Q.XYAdBJ)#$[O"J]V)>snm6A9?(8Mq!VO+`u:okR>f-YGB3po+Ka#A0lP\)<B9V-dp0pY$CQf8'V`hkF'Q<e==
%0UR+&IS.BsGVt\[<njI.fq=D,6(l?3<T2,%$u+AL1lFJ)NS$A($0l[m*]F__GLJYNq,gtJj^l`t:f8Jc6fmCnoP*pinkp:gB<Alh
%h`,8C0,-j<D=s_RG#dn9$9g`jWA"JV\3P/DkIK[TY7O0]7oK&nK+W7H'pV5=(='/,ggp'eX)`fn%_641H[HJ3jG*LH\eoAn=JL(2
%3'H#eK@F>h%T,kph/i$_g:2c*?%NE3*3)SgEp,CsWduK/1m=nd50K-:#K@RQ>,[`3!X:74:u%s.P)II5L2JY&P"B^4[+0]*eDs"\
%EDfrimRkP63F7JBW'WX=JZ)Q8dX&0L4"@u"E8*Z<I><rt^$fpldD.YQiG:8B6WgkdPH1+!Z;8L2KY>H`.].Fc#U_u>o42XKn^cjh
%"fXt_Q:@4]e"+8VgJ%`Aj0coQR:)pZ5eCG&k][p*&b')#]?9nCesbH-iUkInaCj1?0W)O)Q++u#%aY]'WuE;!"P!HiS^*S(^jGrP
%O6,amcn\l_qO=3p>&jDmW;cJCDS.mc@WE9^@kS'h%lfls/<,=H.37KEq8Z6S4Ffn.$4AW;)f[qr\XR@)2F'4LjI;'C//oZp>GcI-
%.`u4H)i.LSrO+Tl!;?KT-Q'r3q'"hG_5FH8W*\t>2D0VHSFE8AMRr8"00XbFYm7il9eh9_o+TNPZ?ST5Uub/5LNY@e3]0Lq!+f]!
%SLf('SqQLc=clJo?r,AW,3!JkHs%2q.OmYSpbMYWk;VX&Ml4P_C'"E*:>T`%s#:H_c&O]hn+8e\b.D7%%D0Lg!Q8;FgJh8bCYM0\
%K,br/CGt0CDIdHV*bY%G^Zi@1Te>cIff<!J'Pn/D-T=?hBB*uATtX`hV9[*OC+b:^dn_3C4F+oXg9OmO(6Eq"S1U'4H551k6Fj:?
%Vj;C$"#6cO$q9N?T%^9%3nI!-7bPcOqqBeVV:;+GG`:,52$r6%QK&+\O`E7m8U5Idoe!8`BAfssX*5t<YoiBRU+@T$gS`o%RQ5i$
%I3?a.37pD)2&_sB'O_ut=e*Sm-Fm]/_*\h<dL5od"jLk=qUIQg5@Zt0@qSH4AEp$ISCQ#GC/_/qLugS+.oPe9RQ-((W5>kV[nGQL
%g2_F\R3(DPXs;od'aFL']'ZAi@;X<+=e2-]X0-?!Gmj(O@uTLi2J#&6bFH2.J^A)9R9cCd($P.W>hg=*inJ0[=1\dao%Lq1/=o.@
%-5KC@gGE"p*_:TP#2!ftc@OVJUNc?Jm@EY"3Re)`O`T07NnaVN]<1Zb=?P?9H7X"/JQh<.R6GVd#H+bb#_>7I9OGDJY:)]ldFcWf
%`Ur/#Q3Q;i8k8G\ris4$MjHq@$>WN.#2KdF4X7RR"*>dD]k)>GL#_c:bC!'*:tm4X^V&F"bL7OCUNO[SKnj"f:_P;TDdBr`>i=d]
%?$`SmJY02el%tZ5r8b;_[9VY+jT:Lm\$Vo:i4cq%akkZV0<hj(C&@Td]R#.$Jc_9Sk.Y&S!gc(`$J^'UrOGb_er#$d@UQ;T==XUL
%=>@%dH"i<S"*h8]&T(=ZcZAjZW+$n"gjSpJM?.'7#4t=ZO\^D1n>TSG^^n9DV+mtrO2F^KU3Da.QOtoE$5HHt4`:drXfeq5?!d!+
%UjWG*da11A2Do5dG=hRB2@W^1Nh09NEpKDJa0>)Za2Pbp6.U1%dR\HJSR3qXZaA67fr>!MgLeHUBiC7QqIsc8lH/]sB!EegpNa.Z
%$[h;iPb@t'p6al5?_!bFSpe4/UoY"SLEBr.)cD-$KP>9o=W:8iL6T(hAIU;piMAEE["anW/%i5IU`<T+b!"B:[XCZh?(OPT>Fh#J
%AnVZo<,t"_XNES5nNhn]<k/7hnR'j)CAO`:Z,J#'A_\\"M9>9X_I=7WXOW$@l.k;:Jp:<C&;]sGjcEt.6Wn]K+&LA.iU=9Z;-+Pk
%O6:<#."n`<.KqD9/9_)I]iql+hi.%LUNe<>Z:[dX!TgWSZ]lOtk_&F0,io779!t#=%'YZTNAi3[IUmUDq_0/!HOn_K1]@RYm8V<a
%o$>SdKgeM\#cA>_esP;qR%UaQCts;U_C&9t[Dd?=Z/EnIFk=t)LkeI!DlQ\e>K)G&p&G*-Whi^$$sN=.\OYW"9.rj1go/J*n2!-A
%MR#U!;U:fEdD[fsXO2@8hMZf4pU!n":(<&d)EsE)@o0l4@dO7CWjBk)CeS4%K:Pu,@X3n=RJR[u*0^f=XQmX?.2jkk0bb:E,])">
%_$*'6QrrJC%:&@"2?".*TuJHp]=JPbji469+oul#gqX5s1nh[qg*JQP%VOfW>Ek=S3@:7@D=po254_@q4@m?$>+D-]:tk6nZCd+R
%KkIg#Zu!a"G&_Lr[,2"g8Z$[*PrVZLDqZandR*0&n0M"79/?0gd:2$VpP,\Q=Bq:bN8Z[YPFG/ge?u#(k'2&r]gGZX]hE)M@/dL4
%/:>r"X\ep,>o*!*:j^s_1_6WeKrreQ99+CI0r#hmr`>+le/UNM=8MUl#24Z_Z0[6D\GO"S/[fE_CI**%?4-j^;laJLF@G(;#DomI
%60K7AIRl2`Cg.8hZDSe=f/tJ?qZOm$D/m%"5ej@In1:JRr=C%!]Cf><V\Bl(NQumeI:(cZ?Z(lfD"^?Bceb:[A[&_9*(:rZhd9B/
%4e@"W22I^Lj135ll/R@!UC7L^QD4p^4eCV)J?ZS,;!RS0<X3DUkdDPY`Vt'e%B\1@3Q#rV0Yjq6cWnRZ-W<1!bP</):^-uX5ghRs
%[Dr?lX-!d7kM,5@62%(\bV?T(:NH49dsTR(3S+.7:Zm9(Nk1:BGM6hF_)q1-a!>FglhqA06m]!N7?G.Eeliqp+$iC<%b]S/F=Ke\
%;cVJXrN=#D)G[?2dr7%kRO&><;9Z^eCV48b;V-tjRN'efWM^CDL3DGh-/X!uKZ:%7ZL)`@31WO/g\#du+BPO:IJ%i:kpp</_]Yt`
%3CNObC)8[b:mJ:9K?t:0*`$A&cEuWRf.q>"Q'>qF%I3JZXAE+c`9_a6RnE7tLUKNZC,ZY5o.IM\$9aur+l<+L(ff2uEUQ4Q]=;e"
%'=p\MlOrK`YZMe!n>YaD"QLt5PHhi?0ck_D-Vcgrb&;+n;Is-93hG+Pg?Y0lH_G+7=g'c?.;:AY+'j5I@cGD+4Z(-+c+5P"GUeW^
%fXJ3KW^<81K]GUo>o]o;m%H_aIQ*r@:B<uPYZ/8Z)P2gX)EEeVY?M]_hhPBf?]QR6[Wh+`b3aH=d*GXkq!7I'BTSCcce$%e3)\Rn
%gngPrN0UO*6Q+"XS%"/Mn\10/XCN>%=iX.cZ''72A0!1'a%Fq19eThp3``PHK1eb<A0!1'a"NOUj+C#GK6<_4eVX60rb<dP6*0kY
%jJ2V-'<j+SgS\!Qf![rjgkQ6q2,69r"<$f%F@)P0ELlRFVI-e"]_m30rEamHI``o*Oc/'$DkS9)7LhQJAl;YnaJ[*,_gQ^M8,$/E
%iE(&SNR6.(PoHgc%$TGK[I@r`r)sL.`,"=IghB^phr7Dk;YVF'1bFD'i_E!?$D5="@r'`],?DYl@Af_<C10UHB1XEINo8<?.cDKI
%fI`BX4!$JaK\t2pqlp6!5HYWJ'R'mgj%c@9p_J)-?Qo=YG?RfKDjD0Uqk'bt4tV]m`).\*%KGL#@4/fAm'QPm0,?`p*d*A=;+@)d
%W=44iFW/E\7o?1l%"9d\hZkf%q9%6V5TNqt$H2^j4P&M2C$0HC>W.X>VNY"oE^deSE`r&kIac+Ih'J[9(-D9<jU\/uS_^2kju>Y'
%DK;Ye@joif,BGGjD=S_9\5OG\Enf4:rWVjin7n;;c<Z@Fj/qn:_Ke"<VDWAoe0*q6#Ue^8@m7fbosG3H;_BE_,U0h]r_mh=f:"nj
%,_Cel]V;f(nlLJ!G%)mo(IA9lh2kG$5C5T^`ra_)QX:3:o-<ehG%5@fd9G]Qo#]^c:G8=s"dYb3h_eeDm4k!`:ZOEM]GBtbp"SSl
%qepb/m,t].91l-+qMh<uHi\6I3FTOEEr3u=AN4rDl9#u6*:kQepPYLXqBFh*.#V@*!#E\c][,_LR;Ro0@]^Aqo@9$#mIK%N][u<E
%2`HXB)"D^S;VmCqN^q8g:nfo0)k1m6rEhEsj?`T8*ka!EI<rN)%k.2D2j/k0drtNi/:Kr&/k__=65_@SOuM&pia:1i((oJDi+JMt
%9W7,CN4Ci!d/iuG0D->0+/TeJ0=gD,Hgci%X@G\B0t@h[BbA`aj9J_GHFhIk*WYsc,u/Ga@<0(s[o#MfRi!'S)&cEg0kGR]-D,/r
%s3]p=A.>0e#9>0UDj.f)&P9cJ,;D6oNr^q5hA#F'c(4DbPF!qp(X%SJhC5'QT%DMs+ePp/=5tcTb?FIc1JnCf@#*(,#`9oD_e)5q
%(7MY+qn1X&s/*>Wi*ISea%uErBK!2bEh[PiROs&)?u3n3[iZZM3sh%qoX%0>Zu?sCP#d7CnNsY\BeH%5ISeV(SWdc.Y3'=sV"rV@
%Zbjsf5rC/NjO=!%*^)iARljkE@5\m#MAt$eqh4@ramJDXAIrm,qi*m3j^=Gd@M>>>jL)I6-MNdcj*pfipR/+Al)GiVUbnI_#SL%A
%,<"Yk2fH,]2KmWT)^O8sgPDh+-\[O[`XT[3hq2mPmlt+sgQV:Lo$Or'ZI^Q"o/Dht'K=lJj=Y;]c.:\L^]//qn#m0HRao0`I"-9f
%ninb@=`NjV[p=(PCMnXHm6C-rrebd+inUXqG:UtpMK?8dgc^W"s,(m,-MS)RkAEV_4107t$CN9"bKr3.0QnEY#$T&P%"P3kh=rm]
%*LR*F2dba>HjYt!MWJc/-<-Y5bA"5L<[g\U\'CU*0ib:sCp!`0^%Z>=-99e7hp4Irrs)@i#W/M..$BiOb)m)F!^t]6mYBu7^NET'
%$j/iTZ?P]Dmq^N*6dqa?\oQ?nOOBdhEH<VJPR?9#oY-s5'c_*Pjm1StT?d_8i&K;T.$`a6@EB>6ns+`SF@u;/93cmTHLH@(UH\*m
%]*ZBTmFetc;;Ag\k*TVZ&Q]os&#f`dEAsA]9BpZ4)dmX,TQ"g]e,;lL'2FJcnk[fJd0)*^#KV@3L&c7imB$\!qLlBF`I/?"B">*&
%p=dM/o:,-WjX@"<$X23-hq5N)>jl\+L!fa6WY$KiD;=hT-3f,F+!U)A*X+Y-N=6CP*=%et_nH2]/@dW`hjuh#ou'Zn%\_fD,mdAD
%iFUDsApBPNj"^Wo\uXh9(H2ms?BO?Z;0e>6]"<pe,iJ?ro"q4g>O]9,mIF^Vg"H#$Vo"'fo&_n5_=]R>jqPH<3:4sub:E&n$T2bh
%G"eV\pGL^$=DZa*k7&RUiKdl5KJc4<a']jpj!m,jEt'VfFsZp)R^]m`[/Ek?KOZ8D+b]`i9O/R%Ho7W\%9OA+.!cEBiM'"d1a[Fd
%;fP.sT8NO.bc,O)bUb"jrLM70")i,,LMj+LU3-<VFZaI'?"GqBXptO`[X:UAGWY>!Z8M%*4JR$1n)5-2$T)4tN$\p[B-4WBrO5]=
%SU'4^d-TR"kQtQ@@kD2l&^jVJAY.e>]>t](UND^We&TamOO(umC%"Z(1,UogJR:[D8aBftKRqdlQI8tNNW__1b:B?D%lN+TT?M'i
%K?S7W]ZWM7-8KeS-:q_AIIZc&QM.RtHBp&g9-!t'DoM68')<u6D^N8cODe.>m@9L-h37*c/WlQ'S^Fkgben&,b"f7Oji\l(`8,dZ
%i&A7<a<5b=pp`.DGm'2On8IX3V7E`k,"'@n0D8:lH">o#ij$KXaG0*/P+(M_=@Yn/,^-Q-h2\1&@Pc)f5LW"bdmSaDd=1uET37n\
%=e_NkU7YS_s#X@-pI%N76sdlC,Y;NpO<jCsci,GX7,ihEOnL0`Lh*pHJ'H0FrG9^`A&hrbD>Z[Qg\tsDJ(MlP[=9o(A:0IbEe@C;
%8Kr?Os2.t`jTi(Zd^]9OQ:UmOZUC[WXngn;9$Z",Xe<nhfR_5dD!u@;m?=G5nH=f?,mkoSIXKhuGF+Rd,#3@']>oB_M#Pq[5j_,R
%J_E>06pG`\s5k<Kn,^JT*7;!=//Ns>Zi3-YKU3MbF$u=+^2$6%aF+NEa?3rIkO7@)<g!a_0Ff>7F<hqRM2#.R"J#Ts*E@>E+u063
%I!smJQuL</@$^#_ku+-L-^-rQ(_?$*(%<uuVpf8I`Wj22fof,],.+Nlp+T)!\BbPOE%")Z*ndp16<_jO>PEc0UW0.fNmRdp,'ru@
%'aX17e^)4eRN#/clpBD.JW(X?WaC<IG5NVJ+_aA6jOeHH2"/Bs7-94fg,9/gYT:03l.PJ-Uab>\RVhlpk)U_R>Cl`kOGs[`)l"!f
%cB^0n1ApQ'["VTNOCS8UBAH%#c`fk?qd7X=qSp`s@/kXpdN9=Y+$MkF)V?.?Ns5%3>oFBJisad[W*?k/XrW(Aa+'!ScQac!q"P>j
%rP4&=mYb/>^@4n'=&3a]/;+hE$%!NAG>sU=K0A>>c8\O5EAeH7B_es??mB%Flr0qANbC7eMj2]EL3M[6,r@i<DL6;9iGa%qK0a]@
%3X4'Y1kq-@6['9QU\GY:HRr]ZKuP%O+<.aVR96&3:I)Lp<RGX;"*Y/h5GQUjUX@j>nGVm]h)as^>((uL(3A4j80.WimsdFcn8Gc5
%mC50L^IQ7U6JgW"[ZE&LMj7,=46Y3^#DH3P<p>@!]&cOCo$rdEq.mRgCc4hKGNt0NgGMd=>Rp"l:-Td\Kq#@F^+W'*RU^FBOn!'O
%7QZN)8'XCFEm6rNb5qG4TN$F8Z^ddl?]Kg!/t*'RUIb4p&H2]p^hXJhr#L%@s2k:q$;pU=k'qE"I=-=2rXCK_r/$=>?6&,Wf+oOG
%X#^*m5BGr.jO($?8"fDPIM<1i%,!W22\L^TrSO'/hV\@A][poug>[%4L'stmU%H24-kWQRIO):J8-Tg)a)[?]jt@IalZ1^%oQ-!=
%M&RM,Xqr"YOR+0\,?"*CI?l2j46pD(c\J>(]gaH\<4c-O2#8<e-V5+X4t^sS+0G>Z:rh2cr1KI!!lGh+*P!9'`=!+f0$EfFWH6%r
%n%o5(#VG3Yr?hQGn^PgYmTI<ZIZYuje7<YtmJ^gre0Z&:`ijhfVH%D416kV2<ULm8,486'7A0nI`)`_d)f=^\(PQaZ2&cKA]\bIR
%JsW`"^;al@=GnRQhr`g^[tn-^.ocX&aEjP`Ydb[Ko[%>d_*nN%l&7sMD'O*T'68oc!G/I`/Gpj08oQ'4>k4_T3b9gE-hE2dAsVTC
%r'<:lq0I;1M5e=-<eP<cr,@r!-j`OP1]oU.^XCH'WE@^Dhj6-PRFMjGks>BS%o-d0-p4;P-h6V@q,`(8#=n6B*h@X8`'b=YAY3s+
%82Y,$06lYYg0EbXL1`g'W'(0B'9h)MbRJ4\)#2F$i\Ju\>PV^Qqgd2;J$kEP2%^bc&&L$iHE+JL`kI!4Y@;:'gV3^W)6F46pRe4f
%af#)m$Ho2Z[9)UJa<[n&(Q^`'k()j]FuNb'7qJu.*1:4`%mN8[IM&VmH,SRBpA,Bq/=ASk>Q#$j(g`Q\B&iOh=Q'4`.a\/B<C+^4
%Idul>lpba+2LgVXmtl3%W>Npq7C<(\@LJ_!0C9hp$q]d*$FS4q,_Tj.2BeM\%Y=g2p;*S(#R(F:kelBlL^XodpF=j'.]oIdq*.Li
%eka0X_[&VhGg>Z*5@'(`j5ge/#63+!D#LsUptooas+s6?A$Z-5PQh+WrlA#3#^QnoKjq[m\97MsNHb;I4I%!2f725\pm9u"Im1o!
%Zk2c0_-oUs2SaM1U!>mAhB2<eqC`065='DMU&i;S6F)J@^gV@*9A#7m6/4B_+)(0<)8q"L-N4NJ.sT=BNE-(Bh,*ZZ;#'>`Xe.o5
%T0_1\4\0?=L;G*:do>k50s`"ZlAR)2a<A%fP'-&f3a?.iM=[m,T8rfpR-ZLRCS:`[+.EjeFN((-8OlD.:iqJbZU#mu@f@g@ofjIL
%2=]VDcPZ#p)!i=aKDd7=J&Yjq,@NL\p_eS[^J5W;R)5'('8]+uKCo0O,k<`*46_9Ts&?6$09$cRq&,q+Z[tAdZHHQ@WTKid3ip,k
%poB-srf,d(DA]Zq7^W^%fCduoo%?iY*Og-K]K3t7Cf@[Y"G9UK_c5I02#\oTm6?C<_\*:m'PTnSe)%S`6GZk@fULJlJHtT%-JoC9
%]^Y"p+/;:)+$kf=F^.X1"@L9"_FK>N-DmeH-DNrWL$!c7&*&-B+/WQ#2Fl%dI`u(A6mlG?%),]Z;:moT":=B-I#,<-+2NcpR-Z89
%Q=G:::e>uKFc$Pq`Egj?l_>kiLCid47)pB[2ZF`$BNr'i!`u=XY'A4qU"-iP`YHRe&Cd=D:4GT\<<$n-TDk;c_>\L%bF_$,ReTG^
%Ih"%A!rpG7iSQs.J)r_KJ#/%`Vd&p@DW*1T(C&.`IF'-"CV4hZ6\j$2o1*9U>d>MITC4rkra@d8igs/Rb2\kb;h&<gr#AnK<=V-F
%p@[H^a+\-%hlk+\*#F)-nqGiVo==T-`kp9p^u"8cJ,e8CBbI9Y0'eLG`V]IdSue:)dg]rM4-$Js-K@rDp,_#%Kha.0IgO(nD)O$+
%Nlfm#HP%"-pN<=c`:]5[!)k\-4e-VilW1JmC&'oGMC6?q^srS@s8H@'ror;I_sXt8ZYN:TY:[+i2,p55JeEN^%6'j#AA"o*Q4H]_
%s$<>ZC%Vl5&Cn-.Q*Ehk3,W*CNEeC-$jD]'YqI:pgs2qXjgU8DZ?a_uIlZgU0#QCHf:>`Qh%2q1.[hUJQ8HdL.qjedDbsDL=SfN_
%$TGB\c">E&_:@/ea.6>-4`%7\2)=L/))t.0EO[:1iR^6^KW7]\H\tPl+W[,8g:#QQARn+9f6HV5!4*MAgJmt+Ym(7HpsH-a:jMfQ
%.063$b9ke_,lj`YfReNVgX:nPjCG^3igRMFpbgE"\uHDaG`rHL#Cob=_ANE2S'a&QK<D2^j%]fVRG73A',BQVT1f@\F@Mld4E9,a
%K].KW#taEjM`BGmM!sM)q'7e,F=olsmMY#R3DE(7Nij33<8Wu6&4`\9<MCPb(^ftoM`93]4i$!QWOj*kM!j(aMSbUVaX@2_nd%^K
%LiheoHknOc[;HjL2DP`\dO!SXf87H]h:C@mK]d,c(*5+#k$mOn"kU=G4:)8iAHL<iKjg`T&H"e]Ah(=@Nm0)nilajPM#,cdaGdWi
%IU*B8`%j3p@J^eF9iL+mW8<[5)jQZTcD2EY5#jHoQVB_"lT0((,S)cW`?:mo8h^<X^'Dpd&$*PcMDiLar\XE73=-TV4*:_1?sIq"
%4un`K8Jn[Gg5sEmbHRE3Kk?d20f2<.E'V2S%=gf>:>jdu&H*mG/OS*B#_$5^d1'(gTHRkJ8Q_Nt7?nH!s*R!!9UaYmI2X/K/DfUk
%<D2@N1[#r%(/&o)'XN-kTt=_NQReFP+AM?AaH2"-0I1l$IGfY#Yuub,+lGL\[-=7m7>-UGN5l\@\/*[2&V.co2&q6K&]C[,%uRA[
%WJ+Pr9m]8pH.#L0Zgp-%o&R/m$oq'Qr0Fa">fZMOEp&*F5%M,B#=#d3(j@ahg=A=YmK@&.+l25&I0a6/E0BiaVI3/'MRjog-(M].
%d6)M35saeob"*'p0o)ZoIDm@@0qtl.c+C^Hd.q'+Ff6?=pDIELQUf0XFG)0H/<=[B#G:KoW8ARABq(M8J2kRb/AquY<Sif[$Kb_D
%*JhR)<)UAn08BAfZA1\Y9iX->M62;%-0f!O-'+&%2&/FY,="1&-6usCGq)'$;0*urT]U4?G$ne&<%L&%_,hPE\tq+Pi,NJfM!do&
%pOk@P`8,]U5g5a8M?$[OM$5p[3XhUH6b8/TZ@ql3^E;f"[,>Xa"V;mI\eh+?TrcdE@7\f/huY>COK'\cCc;)_(Cu7b5hH(WftEeJ
%0Y>J2bLVC]S!klj'=a?`T)g9*?jh`JU[mAjb"MIc[]=^DPS`YgJ@*fHeWeCb)iA%:8F"pV,cM0p$4m4pQV1uVf\(h!f`DGH.!/i4
%e%#WV/"+7ReKAo18kd!O:'kC_!@f@TLF>&3gfMV7(\dn`-7i.\+)S%_gJjUHYj*s6,"8q%1#lAK8aWdOS"jN;I46GDn:4q3.5s9@
%H"<@KTj.ocgS$GAY2h')Mu'L=-4Ur^p3=q17r9\se1J%BPqOL)lRo+3Ta)A2cMs+^,?5pU>!UPuc,"3]s0/(MKuS:k7:JP0kIg<[
%p]jSmip\d$76jkBNhJ9'S%>K'4>8Wm$6Fc-"Yl/8s*:IXe@pHL&4;;4&k%1n6.h(76mO%N\nMMf+$@'Q5If0GbRH8/Xah[</;o?l
%OGI=$8LTnDl<bc3J2(a4s,AF-r.ULU8cpis<B3CtA-1*WTTGiu<O<"dp]k_TNC=\2.eIr+?R/D!(*N=666/"38eFOUMp2pas)1jk
%#^ot6.(C3*k(tRk0Hb]\pVsN4o$\jo+1sTcWPVd3>=/EVA7r4+<,"]NT1FFjXuuCar;Slo;%2%&OJh_pkb$L^__R$YP2bak;j5<C
%^5n@!)ZS_GCPCRYOL@(>TZFD`M8W3*BSIt,%/0k$E5hG4s8+Dd)\N?MRf3dmRaa/5G\$!s%QQD>UkEB"S&:.R!X?-6ZR.F&J;6W]
%`fa:hGVj'#h=Mu)Y=@?gFaRr/4?]\JbS0bL;N[.$`!RFQ$;HJ)NrJ,S,G'tZ3V(RB!$8%md2bH+o4,6Dm5K@iO\jY_EeoR5`Vf]5
%F[i,:qn8%ZagM,igQb7cj+43/5?'(U]BrrmqirY7IU$gc+at4[)W_<U3#M9+-2sktkWu4%SFtVWDJ0f7P<Co%2"Fh3Z$4==TLtn^
%W^kq%l/mTfad-1RBA+Z#YLUr5q?=S_cYJWOjGh)I\`)g]s0,e3I.6`BB]1&:bnbGX(&IlHUI^mDY+]&HS.tt)e,2M4"T"DKNFo_*
%BoQEHkP^?(rSd^&$ZiH,j"H+(D`(?+*UNYr!Dt\_1OeP9ck/-:hJI]bYNO@6&uo.&<olDFC:6bgQ1DE2jE4c)95LibBU&m3ofJWg
%RQ7G@%s^+kfP%Md+%[1H3`=JROn(Y71iT5O[lED0-iG,7KHD!;/&-I=/>2H=KAa#\d\,31^]"DThk*N8/%l")DpY2rLYo#ZIg=jB
%5^tY9rjQ"?=8heF5i;SFP.ZR^NrNb;T!&/b-H:K3lbdT>g*lRaP@'rog[d'A]jiP[ju*ZWI_!;P^9tN/rZW;fKIYm3q:2q=(&'35
%YP71%rC^tR2P%>hhq6jO^*em=,2;\W#Pi='`HIki%Ck1`h$1EuhqHra6%9cYK&u)sHdF?E;Q0TlCY0Atmf!i<]N4l_1)X>H!&2^5
%%*WhHNLG6QjoW6XnCrRf\M8=<SQ:((k.n*#ng@&tW+sBabE2ZZkjXeerCX-=%39XCGXt'Wr2F0#K_CE>3iM]9U!l?3?g0ItkF/<a
%3pmPb)&[HOk][70Y6LuGn.c,q!8K67C4ejT&isoS"s&bG-G2Z=1A,FVpYs$KCRe.nm!8'V;PeQClSeQK$dFFHR[,<hb+2"L]O.kk
%mLKgO\J%RFqJC_G*qi8No\mt7S5>p60=D8EEep$!G=-,D-IY68=_NP%J)"07FoD*QQh12AfA_na^4[U7Y52SI0c>o[rGJ=ZlP,.L
%9#&b)NH1sV`)?*L'5GU`kKll&?$^2ul.!:]s4"dd0sI4a]M>D(kR`=>)R"d*+[C5nXPG#i/G(GL>D3/2j*H?)1UhIUWJ'i-J+Q+]
%Ehcti2O]W>B:U0)Wr'#H1n?8+IOXp77^asA1tA[,b0V1G!HI%)aKsE5(CSL:8nZN;NPHVQS8WV'@n2#2Kj>;gfa-N`PlZsY-\DIY
%&_aGd;JAnY\.Yh<!eZN2fk=AP4g(=CIDhRa>4/K?gb/4*+Zi51mUUYAo43jEpYBbS$;F'gOl!nqH+8N0g(T1/(0BM3(thQ&-T>]s
%]q`*9FFd'\FTOFfJSc0+rC2UI;Wpj=3!g[TU535Z:U"PoB-]C`T[\V&s%Ypiqr`&p!-Kdh0IC,and&^GrhD]Bm\;.u@XDU<>!AO9
%O+1]GNt/SXd<5>Q9"0FD^Fp3%DlsD,kd'!%rBe[>',$]K>,?GOf%??fZdI_j4Z4hj+F-t^KD:OWk`l&$!r]JW?XABF:A.4eonICr
%=k6Qi12Kqc\=f_2m7srk.AR4)mVqWq5guqkHYgrNL"dlt4F+D3HVM(LB.#K,9r_BQ'Z-119QQn-G4k!qRSo1"#PHI94Gr7CHW<)3
%Q5[meTDeOoEnGS:qdIG`4E0.U)CM)!:\o1oUdl:4C)!2("K)^*maicp0Cu.\1Es?6ocof%cUK1HnmT<2OJC@!?>6g&C_CKijL\'3
%./"]`PMUuQ9GQd-qfp^9aE?9*RMj9bP20"XZC@A%i^U[,G>Ds*%m?6?kB8RdD"M'B&.kU9ifdEIJ#E#:&hcRJ[B%ifFH/JajMUu#
%L$hV&?%6tu32=q5H5.W!(5olIa*Z`1,n^OQm.#;5BY/]Jeb&elFp"?5LPtp)7lNV;>m@pANSsYs-gV&/5k+X0@Bts0/Q\qpLgYbs
%)ggoJ./Oj`:i+*;pIkF.87XP\eb3XVQb):']3C3no#YG+6[S(IgYLc%kgh8,R\eoUZXE_FP*7\e>.r6W)4gV`B#&.\5$Y<^2GGK(
%s("#A*D;$.J/5N<3Yl$$rmN=>Q!U6:)RG)EDPc0C@em<BVpgX3Q2b!bAiCcURId?2/bGj;q-lBlp(h4fhPZo;m1sj5_ftEpb(5'e
%i+@I+=uB0InJQHM5P6pAK(g",0[G#JHW$a_/N:&]^B*.lJuRJha32_&\(V=jV6?ikQg_+B'HZ69.V#"eYW=+L]@_YNqP92-8:\^5
%,N>.<-GrAE&sRt](Ss<,=Z,j)Yu*/'Yh`'_TuLs(Ys2E8,fi&MqGON:.ga?Qd[Eib'n0"iq+LNQjPMM1JjT/%Nh8li3fd=<`YSc,
%6!CrfZ.K!Yah</P6Se7RV>D]cU:]0`2.GQn3cV(qoq\-68>d>meZThu>ulj+>]I0!cmC]d&i;mEd+<.n.r8Dnm*CaEP[lS'DLp@`
%m9C,9Ig]i!K\Po"l[V5%J:cc#m;kl<0r_r+qA07Fhl"m7qqqSPpSGu/qAsRrai9&!<u0"]I+3dtk]>k4a'.O]mWlk?I_@KXl5Jsq
%&oG!>U\qoTV:XTerO("i6]O7]1nIo+A(jH^j5'3t@IV)O!J*4UU2INr)jOg'oII:PmD,UUj.1OBSpp,aMa6tUZq=]u)&7+SnGSCX
%adEXCg%uLapc^iiiBE:H&R_S0^eg)8V`aaS8#cGeO'^p(%!Eoq^;(f_+q>IUW))"!kZ]^)/)A>a1H&7CYQaKGX[sG#FtaiqiC,,:
%lb7ET3IEQ\CMf593N8ch`q;hankV<hi8b\[RuP`f:$R9H?stlGnY$eFAMP6CACZ_X,>+'iHA;R<9'%;44[0QO$q*`"9UHMH$&/gu
%aPjc$!nmI7E6VH]K1X-)>4g(:(Tm_[4+RknoKO-pki^4R55b!9S6[n<]=gh+?P*0]fA9/q6iKL>jV+'hDX0qTiU@%[*2SGHG&`;M
%i?1"*-]<bdqCLbDTU)q$09lVp@N'?cag!Yk$/hmbkZl\1QXm[]?ROnsr8/%=^X1;f6q$*\+1Fa-=^um9f9(P?(Wi0Ca-4$(HBfCX
%O72okG;NkJR1-fYh':ZR_^!jq=aF`$()\=N11,/Y)\.Y0"6XnfobbF"f[)Ft8))=(Xt\U9:RtJrVYBc6_f3,4WJ'GnmF0"r;53M9
%EX-g'gIKkJH>[V9^[q?k^PB^hVbB(_3'S,f0C2H]['nW5*rS;#LR&6^M=/KG8fqZVpmOu^pU)>rQp%--;ta6A;;%*Dc.13-,VJNB
%,4o;mT"em08isZ[]#nAY]"P\3Y=Gm>rhd&SY9j1:Zqp<(I9;lRjD.?appj"h,4##mVe*=!j2iVDZA;gcVd$J\LH9ie3lLN(]$\\S
%j"#a31@`gqO$:K]r\^%FFPlT\*+*4/ViA.hHmm>`8#3M<Z--M9DB+8Q'X,Ca\TILnrHIkQm*rA\]J>aVb7'PRI=H<8:G'VIPPM]E
%CbD2\e-Oq>pY"QMb&+":^HJ(>)s@fk29)Ohe+3l6PLJL%QJ'Xr[*6b]MXkk_T)S`d>\Bq'0[8ECc-452DmX=?Q<LH+DFD/oU#Gc2
%5%kqpH.>'p`KqOs)#/6N9A#Z(!j8;Zgkaq=^.V\$hg;$iQ\O+;C'@+LoLQa`S.5S.QtTAFB:H>YG8ODj;V*k*aj]hC>Um?JD(n?c
%n_2_b1pc_XSt0Y(/T.EQbbrt68pMlUG25[m-u(a/&a0Z[#>e6gH[/8u[VLNN>&NNE2"sTYl,NSn8i1n!Y9r*a93*m]T0"n&R6g*3
%hj7\npVP=;Ib/VFeCn2"Sh26lkshe6a'#Lq]8_'4dbD.72q;._Z#]X;ZFj7u)V45VH9MPZ_<Od6q^>ZJQ3PIElffmikArHpF&$U/
%46<#YRP*,a2"agHbSDdG\Q@=Fh9q<%I<"\k-rVM*[.\r1Gr>r[UT(=qh+F^'=>Z/30.-'gHn&'Sh<C?W_84.d_7D#j3tq5SiTZ.:
%$Vuri*1eWu5DR.E97r&0Rgt34GPco4auuuMir)h9Ed76m?<hIcRFpWc;AY[H([gg13k*JEQ/Bj0=>QE07;=`0MLijdF5a+/qj$[C
%;W]YqUIC+"=c9e7DZ*+V$g(NTXmj2>o/7T1T!cIoH`Q[UoOKEd?FkBk#flA=cf'+'('uYG)XChnp%Tf6p8gkgTC1$Yote0V(3=9'
%@<6/Z+`+-=h6<G0d)/W(fFG*TLEFC6-%;b=G^]#.$?'bI*ecO+ena5499"[).uTg7qKD]iS=SukKQG1PM=C4Tk:XDge<pg8`<OHR
%IUVq)I(1&RKTG<?Sa]3*fa+5;*#RXUjm"sU0mK8s?aZ6+iL@m\3gR=g3k)s:-dB9m;dM#/M\i:(iUTu]-<r-@m"aoo69kB'Veh,q
%=0CGtmA'GWpoSZ6(@EhigJd(%_I.,iP<,)"923`,/_$uLVkWEMALc9#I@=%D$EI+:HLOPM9Sqqth'r5?IUQu6V0+`)0je%P8p%8o
%VUG.dZ`2`tSh[Wo^XJ_,^Y:r@3[u3g;l@m(f$o!F,!U4PcpW*"k1%o@=nm!:pe"1\=*M$N`]6c_3o.?=l5\P?=Je<4DGEuuF_@T7
%N6V3@Uf"dpNh)Tme#Ik6:Q%4r3c2VIHIHY*X4?IQl1</Ak&C'.HM^CX:%)H'XA9qqSJ]iOkOmL"olO_nqVLI19c&fth<@Q!lui/-
%gO#f/VH]t_qK-X.=dtg?g8rTD0;WG?d>+k#N3^%h4<q`+Y;=J[j4het?7.k!cD^=jgNkV5EtH#!1T*mZopO"ub1=emo#:,m@:f:Y
%VL#IJT6Y_I%;%["XnZ^WFg+Wabg'K7ma"?-o67P+@A,Pop63nW[DTP7fp#AtS)(*:e7T<ceg%M6<]i*`4k7<9I;$@-c'Ft@k3V^"
%e+%7P>'c_IQOCggr(Hir/jB$`R5:qDe[^rTol_t881r7EF'IeGhV>rt95?.E\$S>CF0\f9.jtj:Y#Z.DF03YtHu9LR>gC[g/n=LX
%b4=)qEH*(m?ThQ*RnrFZNVT-?Zh"%ah8\UTARhDis"LAnbZE'TkkscGcJs<P-*[bj35;^>?AM[RWs-s,<u0AZmJ]F1[sGH$5Vd@'
%h`@62\@X8U(<X7[rIniU0c0\c]rB)#W`"^*Vk_9ECO^gYZMDk*8%.80]uY3kV&[&"9j^A]g>T_9@j@%G,&^1[/C%kaU5SQPgZ_/u
%54c4m\S\u1DX0*D`KRiU@I^p7Guu>un8@cmEIYUQDa3)J,E^].<3t>?dFIW`@Pm\P<254AR:c*^i2R_J9_E"mcNeVUg7LF6BUP]N
%a6D*:QJ4E)>)Te,Qa4;0A*KrARpN\?5Lu/n:O73K[J4b[Rqh%l@^4UGBZsY:-"G'7\'*E1ZeCFFLc[cnFE`!AH\nBG@tWKp&s&o-
%&)u_VYo-?e4'3iDGHl*)^Xun_M&5m2\)Y`h<c`P$='o0lSXpU`mIIVd:(OcTQB,)CqXVo,m_^fBUKDt,IOHZR$ct7p5G*C%2FSde
%m.QL<Q&Ai.;CS4$6>=ialKlg54tWP0LQQ.jr@CiJG7)KDHJZ(e[A]tWC2<_A6CWC=,W0Fe5,rJ,ZV>9irG\lE/]P9,EokNnhY*l1
%ogn5HV40s88Pb8BF8a``mHXGk9L=6cYM$qFjcMmQ(sDl"e6$(ak)A-^k`g(p37Bf9f/#RbVpG!'oOY9\S4dWiCo,UeidCPM,"f,/
%,2SV$/TYnd[;"@[e$bZ;/YAI,e$DQNfN`*YDpJ$G[<Q>OQ4k_1T]*=#p9(KT%IM+aGMA$VY7+u`E-,ftD/XXb]l_E$D`1W,mD`Jl
%fpP#rBT?-H4*FMC(EMZa>@2HC.Po$=p=ds;@cR;qAL08M-LnLS[;oQPG?,XXoaEFY3j[FSY8ZZ-ghJ/lhcn?<me9f+Qb2jirIT(#
%VCYE![7'l%Z$'A*mAq&h]?&]1p#]sO[X"EMhcMF"edi/]de`"CbhdYY=6LSr>C51coh=n)j)ApVBB/OE!$nerBlrJqA$P[Lk/Lj(
%Ie0MEJ%Sq*/S-iPSV!&-52'18,V=F.EOIP?:6]*m3m$m/rC^$Agbt>KnoZO0=hCa^TB?UTeGS%DF36K\]VbB`8iQF)g6tcZ\tpf,
%PE$_;lKP+Q^QC_GpNP*:impP1k%[`<=@\.[bjJ=jT"2V;-Sq<kK<sq8gdWNXZ54b=o=JrsgK8j:cHT][pN!=XFXMB8Gra1cO8?Pl
%n4I5>9>p1PXe!NVQJ&jA/KJZ@73gW*`S!n&B9'SWgK4(7`qJ_-ZaR3)hqQdT7O$/?kI7;[cEjk-h2MiM_qg<pFEI7.?bbL#?W8rW
%(639ZHg<U$(ON'FJj[D]dGJ<8]@ZrGNuB&phERK*0(.=EDP%F`CA?drUQJ.jjNee!_/j?KHl08+ou!Sn]fj"Bdt`^^CNl2Apd&fj
%..a*F8%2ELV5(NdbP\VG02*JVCu,V]+8ZTIPOO!CE+8"a;^Y)\_CR9[;N7--dtQmnj`FFN[SALBjiu9+_t2]jjiZBSg",_.na,3_
%d`I9Bm\4tg^U]Xp?<K81fD=%Wq-rStqE/o4[rQq=Q8gnnk#YnB`5B04EDYOP\>[\aT._Fg1P;"(9\-6,QT+X)e7H,#OhENZn"6eD
%U'n#'[?lNoFnBCf]$B*'(U*:G2>\_*BN/nNlMI&0q5'AMc"f5CJ#cUsMmn%ZmGYMO:u&R=XI$eJl.O)$h-I:lE?DoUcd=NBX+r4E
%qt$#XrVLcPBg!::F8FiDHrGH,=Gu@'nalA=j3E6k4dN89dAMf*1O)O$e<d(ggO?+UZW"LeCaLbe$TEq&Zbg,5pnYEGH@/u1-smr1
%]8OYWP'tutTOg`.4nZ85hV0KDc)'-8q4sg.bHD_kOc$EELs#8a9rcW8YF\efmC-!dkjiIbIAnRcR]bm:[A1(=a4a1i*Nn]UXk!:<
%o'8`Xq9nXgN4[/Gj5bUL[a@.kLLL$q*g_&AcgIO2c^ie8qMR/]/AGG#P1E:p\Pm1EAP_[Tog#Xl:0kPN]I)4T?=+e]ghpnV_3o4Q
%kLI1FBj"SW03RgoHZr]/CtFRaCE6,0RdM/f4[+#BdI8b?o4C4(LptQu_GiIqa",t6r;NGf\7faP,-t;4s(r0s"BrUIQ(d&2L+AO#
%geBX-of3]^SkUiD'VG9G?\E\?D?I*?$3fjYr,t87;FC[SNT3_#d4;7+XF](tRQ+U:a9p*[j]u`IfM(2):7E65oKYEM\([[)\,BLP
%[!ur7#P6eR855[@_Z[:?).ei1^3_-@_K!3@.".E%oZ!Nr$a"HCqe9Nc"4f+IrHqoRID&OH:BFrG#l/A3e+p!k"2KVMWF>bGB8>gi
%3IR[+gfU?E=aJukS"m=(X;!<+Q!_4$>/!c('In2TTmjZfEmoT5?DS0ql@j\h='D;(!>22*TbRXZ7:[%NV/PLk64Z<'(S/r7I\h!G
%FPc&7l#0@X)k$K1p)qj.Jd\tjTo,XT#")-h_nF6QQ5g\J&H#F^(A9+hdJcN32C9nR64L(R.tj>p3USiU8CJFg8]fughOmgQ^cSY,
%=*Y3%P:O92&KM;dl?7:U:nngFZsI]9D#=BQp8ERT/p/,(Y=cT"NpnlefDFpIdr,(Gg&3I/kOh$@e.,;fn80jW_(=g%h=I6S55@OG
%:oirAPVdg@2;`8`"sNu)s';%tdjbrD&?`bm352QArW'M_$CUDck:`2eO,.`4nV>GP.piRM,N28Xr+iqAP5;3:cPsFF/c:nUk#gDb
%p!;)o5O]r@&*ee\7`uI*P>b[1)#?X]9If]AZ38!*qKTgm.%1S(Vu#gt:rJd/>Q%K.k?A1PV8ggZ1Nc%DP-Z5*@"mC6&m`pr54A]s
%G7Xa(0(^[iqV\d6.Q!U-+\dEPYQAM8!5Pe0&bs;aiUR_>Jc*T!M'(`:W@,psc$+cta7q2n,()$'h5dZ-qm)5.TG753=]G1(XZ&FQ
%A4N8q,8hBNeMk3>oK"UK08&pD`ht?qINPlC%LQL)`V(tBZ!tb`I9]B<Q;HIa]^?$I)9,d7I[=3S_i`BecaPTr+$Q$5UXJ>;')%e*
%L\q]tm$,U]CK)7%b4iqYjnfh:.&KI6&oKr20!a?]R.2bNoYDu)_okZ<]'Wt#^L-c<dd@!38/`C;T5Sh1,Mqh[3sYZ.P8YdtWKX.G
%[-qs_-iIgs*mNM1f.P\<<sr)&]DC;[/=#F:^"-8"Xmg3\]X0AbDA;*D)=r5;CJM&YcF5\AN6RXd]D7(IG>PSc=ma"r,sQc\;0nYn
%9Pm@h8ZY+o(DCRWSR/&"V_-@QM:MQDfB]j!:XumLp(M42jXf4ih^E'qnbLnN[J%eq[%N]+c)t/->Q)e;IEK'V/L=cYqn;(9=hc$6
%0W,/dN%oCAH>_#8dP@5jZ<NhYgPk5nXc&Ct]4=)G^\E'(@)&!(`7dlP5-`Oo^IC"PZ\.&M<k1iG0YVR'F=<RBrM>3ahUP4U<UZjO
%er;_BOf,``8_nkhXDQ6ib)$Df?M^Ahd&'T[Do`3=;_e/p-@$ArDFktR$KV:?j#et_9A,If=\./(a47TYX?IFp*A0Ju'mQ<C<sFR%
%(VA/heP`C9JkqA>[^oh49<63U_<NpjSlQa?]B*"5G&ojuNSY,-qe'tgfK^^e\m%Z3fj)5#:F'/@q:Fj,_<S?!HFM`J8P?4brfj8'
%DXW02B?aMZ93j!M1t'PN3b7nkI3H$u8N!X1=1O+PrRjSbB5RK#]As6.'/M_Zk4FCnDEgP@0$:XR>&jD1kM9grdZuf8`G$=8Xa+WP
%[",09e4[`=\HI4UhH/5(l%@3#@;RV5No"l_N/8VtGS]^6b:(?/*J;*p2f`^%VmX_7T'W(Ub!*r#ZtjN6./6DkDJWjM[*3-!h4<bM
%I;QCiI/(LTksJ/9*MnFu%/!6[qB4Q(5u8BK:XQ4PE17-2167B3A<.2k`dBBbo9ncTVRjG7Q7Wg5B2W@3r5:Ue]fJq1V,PF&l<3.!
%nTMZF6_`5Cc9FpShO*Dom%YK48/YLNUKlsWnhJsF2O@LGYHtWA]"4gQ%QBt1la5Fg/nglj^$[2-p)!IDR7MU!@`QBoA-%cW^Crhg
%DI+%6jH_\t]9$.>pSX2Mh>Z@2k/NK%^k?nK=5C)>eJWAR;&\]PlqMc6VEM%uAsD(V6>&>]HWnU(Ldi/HU8bTm0Rd?'a:02nG8QKj
%2XA$WisE=(U2"n%/,?]U1>T$#40)/fL$Du,WN>3"[)gJ/RY52c,Ndq6WT4iW3g"O?4FP=@pZ&e-]b2Dl[oq@RA]l4G"EE&Z*,TRS
%P-3?A4_qHII[[W][*.u\38SOZN(cFCQ&R@1SOpl]]N"UQZqN6):l^^Cfl/^GrTfeAn8d,G^TD:P9$ELL'Q)#QGY^O%j':ZT\XL]t
%)_JY+on6O#LKgO%Q)_B27T_)qG'(R+-a%>o/Ffa.jepC5lFC8N9f6,km:<q[2+)HO7K!NRfqnD9QCEe8\&m*6I@c2Lc_\kLIbba0
%&JVR="E1n)7:PuMC>4s9[)1[J?I'p4lW92B:RRqS^J(6FQ?o>)k)uY<gSXr)N30@,)sRSX1[NKF<Rt&$$_9b)D+e.?M#*Ui`Bk+f
%Ug!np>?-Q5m)&VRj\YQ-r<e-_kZ]nGY]BH?KDcKih<@p2I[?p#8f]a,P@m\'C%k[Vq35"9:<0?WdfmjGrOJ/=1O)Tb%J%O.=7-Kb
%7P1g#DJ<ZW*a+S%Q`o"!O4#WGZs$[1M\"uBI4dXG"_jmbXn7&DT/Mqi/Tk?u'N[3CV1nQ=hmP6Z6-B\KE\kG,+;`KhP/!Guqq;@*
%?'iIB("-bgak;hmZ(*+LR8`MCVNXH82=?F,8-/PeVU4XJ30@GM$]`MpnA4#O8$$_IJ9/pgq&<'a,Y66jVfL)`b<"KDaJ3U;B,`J@
%F,XVN"+#>prp%gRjt5U(k<Z04^`1rH@[$[FJ.e!Hg?ONUKJQ)s^WbEanUUg4:M[iCrY(&AFqWXeEY.^tS=DOTW#EXr3q$kZQ"T]T
%hO4F4@e+Cp^-3;=1k5(oPcKgnQ*^Q\n.Bqn8/pd*n*b$_0,*lp5CfEaj(hq<QT<.)aSKl-k^52nY@B-Lj)EgCg=T.</M!T;ClX+2
%p6V)@4glha*c`>.H?`sF8%UK$?LA>7,U]h?WXn*o01I4dndh<+i-Belh4G>iA"=4R1OG?E8K.0^Hli5@@[+pmo9(Ub)9Pn,<[1-4
%8KImj_VjJ#c)=@HR*8q([;q-"8tPs2WYX)+:9m=BZaQKQ3k/M<KbrcGCY5*C=TG]EZ=bpGM9G/T>.X7nR)kS"hWCVO$eQ;jJ,HR`
%'=:3&QgF.U>9!6[(t;52(>4p1iUK\(DQ*1sr%VbDEA>5dV!EZ^S'9aG>:R.Ze70eMg<(B]c5sR9^N1.NX#dgcP[0346`'Ug(4433
%a+%BdMVOAiHI9j#QL`3JF%M8n>Y?qSXCWl>g$PKT`<Oi[^_u.O[Ee4,UO[P)Zn0:JK`gZuF7#tagYPYDA^IY`HhlUl/d]=$5`mWO
%DZ1C6jVsd!)c6R/oC<@:`A7aI6B,Dpd]jk`O<7e`*fSp6GIQCL31kV=c).Pt'O/(7<"5c%T6!-IhtB18mCUSKb+,@E,/r&'ic[&!
%14.nk;]/KNRXhE2X2<B$@ID)j43pr9LcIF95b<<*ak!nCdG3%qO3[KUm"nF_N=I--aQJX5h([)BT+AA.9s]#d^&]fAF:[5\=uj`A
%^!'N5cVE%&r[?0lV>aM.WouFi<TA%?hYdt4R'h3@fPDk[RY`F%YJ$p3e'0*hE?9:.G;d3<+ags??N^V@S!WA]r@Y`L&3i@),]Fj'
%%EBUq;D/8PE`A("L<h7un/EEH0A:_spk)B6b"DK;WSj^u7m(KAQ!;Gg`Vir@gr'*MF=u;dJ3C;CkLGmj[5>4;CKmY6h:0PdK!`Sk
%l_+^Oi-I;,Ed2a.Qe_Jsnl^1agn%HGQU1.Dg$ckK>J6e(GALuS4i^V'UR.ihI*0YZ]&!4nZ#XfoaXaGBS#]>(!7OQj8acd/5O,&Q
%;oTrVW(Z<enAmWF4sZ]L]pSgehKXr;P1!RX/g\)-]A'm8aHAi`l]N6\V/hLDeS-Z1(^\g!=$<fhHtXfY:SMn\p#oP2[%[*8j;sE5
%mm8&LZ-7*0n]@W7pN.(oDTJtE-]cLF4Z:m8j;b3gNnJg!and\dq)KB!+9<FF\(Ij\)nh!JiJ6(QWNr"A992gCNG(RbhNKWBF,u<'
%12?NOggrp^_sdqPOmD%VEpm0`bHkI24"P$eYKi;$JdYN<c>P2#o_,Xk:9ete,;''&1>6o^/ljGtEtoKkgW.L:B)GW)8^CRVMpO5"
%c,4W"55Y+/HV<;K_MPbO_h,)/l9=m'$oVa1#oV"uFAOPn>eXp2=uIqHDqW*R<VV"P#*a7UcoE&qkH_.rVIqF4LSNiR=Y-V84k3*3
%'NORa`e&7uU@?Tsp49ii5+Pg14J0g`]JaY+io2GZ4BXeL,u=,03$);1>PD1`74i_9#)lM8lcY]eg\jQC+K+"KAG+[0,k14!grrph
%EI.%6;^I[)ReFs'Ap5E(^a@B($F"eQRscI&E2H[:1M?@eWu@d7:OCdYU0.rj4.KC81%gX<R-FADV>'5ACLOQaT0!3BMgRWFo%SOo
%ft#pBF6E$m0#r)FSu^D,`r*pZfm6<5>ip?ZERNu=q?^-3Y26X+mlp&[Z"P/D<fb83XB$Ad0-#1?3NT>@Z:jR(Q,KIpP@l(`^\-;f
%S4C>,?eE#dV<K&cQ@lb*D`5k@Xn6&u@WRJngtYCYHqPgZgF8\8i[nOr\l1%t_XJjXB#FG.$0MjI7bolFp"\<q>,Jh`L'Fr1O:Th!
%9_IbOSSh-G#bl7t.,!>,Bhoou4r_l*;7k=t%][]enn9>]QWQt)JnDP$gY+ug)fl4Fd#"Q@?Tu\5SYtT99r1'5L/R3F4.dm)i8H`M
%Xrf4sBqls6>>b=kD?rFW[CHqnQ&TobT0t!N9/;u4>0\SOPE2-s8InEs8duTnmHIk:H!eak'=H<VR<<X"kq'Rp-[/-74squR4,)Hn
%VB5enjRVqB@camn9A#g',DS$%/42VY,+f\!dW,5tH^4<^kU^LRc%FX3L:+DuIIhWgHL7>j:/Wn&6\tbqB]OFkEDask!g@Pi]7WfT
%ZlJ+]b6!tkrQ1O-\Q7EYh=uBpQ=Ldjoh,("j9Xn;bOs#qPDAR`&]Dcad3,dod-G8/MRi(WA7kP*..[3dom3tgh@n/U'WJF*)`F?i
%eHHS3`[oe^q;k:-h^*bKWP/R=EMn$\Zo+<\mj5Qo&,f20h2P4'>DMia/V<'1<A%S5e;%l$q)>Mp/;.r<l'7aKH>Y."Gc>>a2J+IM
%G;uIYgm0R1HN(RX\V6UF,ok8n8;jNBAaKMY`#q,5&cFPK^:4`Z7<eEfN2<Z>jH5nZaW',b8ZZcNVLqS,=\&+`]Gs24dTa:;2pRD!
%;T/9(+>VFQbA]*=oc^6p-Ru*pgjUbX&hR9J(6;/)f6l"-435f0>TY?Jam-_Jb7OCAm#U:2+JVQ.XW0`Od]N>Un@)MCK_jN2q1o(L
%\@p<<G0[R[MRJp7+jt[7ZDHlia<\2UDdMV'2@M`I;Ua3>U<2XicfBnbn)!C8&4C9s51R"Q1[Jhc#uMA($#=M\d;c`1X0-UD]`qs]
%#MTh:eSKE#`r,`7V$0hD0j@W.k(EB@4/FBU82^hjj><`rlqrqDmJVKGl0,89),Msg+7'Sf_op8892jt9Grjo%/o.(sO'<`FgSar8
%:9R]*kN9jtIl<'/dKHW/JE1o4c3KA@4u"lp0=0'$q'b4k+nf'RN<A1\]bt!7(SA&k/`X$`R947e,!c<ZI($AB)%aIYQ9NMR:TRru
%)nd2'-n$6"Z)dPOPK5UDR)A%*oZEV<l[$6bO3M7""K'jG=BDnHdba9^O[tPp(3X1(C%_D3[ouq&H_k#?7Y49O]Y1UraV&p+<#HFA
%K;;f>e,gP?`UD&C@@N4k[^''W<4_+A\@n84%ZKmubY1$QEkJBs)&_II\Qkju`-sVcQbOkWP<EEq"MBBiU7k5>N0L^Pn'U48f#TU?
%UY4('l;9_l9W"OE7V&<e>*Y?B;D+FTkP#e$[@,lHf5Ji2E5ACaCFAsGAoDU)b0N/1%tgF=/'MQ<X7tdfO]j,079b'gOjLjg+Z3Nl
%,YsohE^V/hXqJFhePp.!="!:*:3@mT=0Dnfpr:H@%U'.mSP?$61GrT9XXt"M)Wo&o@[>fF`OFW+Y2g4l0<9ITjbY?dVY+2dj*32f
%T!5(I>`:q0go%9\EdJ7mH=u@`2N3HpPfop$MH3hA:,QNrId?:]W^URL:CZ?6ZHM2oEKGOY+4U+SDK_U\Xei\HLClXfKjP&J5.J9G
%];3n??V%V_[@T&77](R[?<Jc_l8D,o]car\@6cfbSg=tm1)U#U;VG\;Ir=A'k]:&Cchk*Ff?9:1-SYL@8NNoIoTIAN@4)UWAUL?:
%fCG?K`c>d1l$>"J[$Pqihcp8q@BT:jUlVbK*KY(5A]_qaQ'+XagW7"XY(6mr"K%A3dM8&%e\Yl:NsoZeZd5tgXOD&t+0Onl,^X"P
%'Daq]k=<#-Y-?U*h0h8.0%+*DB1li)U^eT2L=P!<M6b#_*l^Ae>MpV_:K0JuPDrl&[?P[1`r[O5GZ^slo9nI0q6jAW>UL&.J\80D
%F`]p!Q:9kQ<f8I]l^@XiolP`>r/'))-QVjUd2`!S\t1=j1-<bQjd6pYBIA#Q\V7_]NO(XZ=_\1<0G6Z1I2UF_O".HSHr^ZpjN,b.
%0IF6O*9m0K.5q`l?eCRnQ1AU9AgLZ+H<s4P2T*SGVhKI,9Q?EP%9Jf<JDT@J&$%c^gSa2VeTm:#;ouSY,8$Fr2g,o=Lgg<PBSF'+
%SDRS>^Ah6aP&MJ;fn64jg_X6??HW#JV2]>\l?o`jj.'b#B:R[%4DBCa)_q<d6S`"%o`=1<;eWf1@d&W?pZMc&5k?X;)8C&/Qa_4c
%BN_)h(^HrG</iO>T<=<1I(4a:/c1N7pDf]46E)\SBudBVmM&k(NLBgjji<A39=*62QeI)CkLJ%!a'P`LmCnS9pTr=p$/oa$_5i#c
%-NF,gc$c_\fK3)GnQ&\,kjO((a`?q6huBR.e<)\>>>>GWF4LJ#^+7RA?i9fY(:\QZNJ."0N/V;V5O!Suk;sPJNpQ^8^#^<"8*YQk
%hg5hu+7XOE,lV'IqY.`6!(R7NNqdJ1MW+':Pjqd^NF-RABT=]P>-+\=^Q.&q-+e+Q<PD12_)mGJXh]ho3qB?/n84LU4]C+=+]Sgh
%KPp7D;#0SPj!h+2$8&DBL)l/NMJC.Re^d'jBK*$&:^n"o3L5IOMJ7cD<M_UoZ)GpSieF;^1nh%l*DJhhA]=o3/^\OVdc/2g.[lp<
%AS<6);A9:/[Mj?(P>J@e-gp1VY@>s.GH`d\QDp9c[Gn'_)!Is;D;41Z2>YigRmE,J`3N+d9R"!a`>-9Kd&b4r`ur_D*Nu=UmWL-r
%Uc-JR.iS/g'cO6b_c8(e>8G,Ue*=fGY)4"X=#0qO1lD9c*(Q(=(nLL`.NOYNA%6#1EP/EC#&A4kXW)=cRVp;c.gg.EZ1PPc>u?e'
%[k5e]Oes!t*>Q2`R15]@kn&.TLUKgu.\I$?;&b%K#GtUCLG0B6dqCcqMoZ's$/l#GA)Np77*sGX&Q)tF_Lem\=Kn03G[\IAXih1&
%WEBQ[U5HHulDj2akua;GXjSa54CP:2]*]ROUH4>N6G%2Ma/\EBO3m=5<D=iK#cX]G9sc:m&/&Z`>23l_bIM=):!fKAM1D9[<J&q\
%)[`,[[:(G[VXn181Z$W@B%jmda,`@spbA$D2f@9$%`]]"9p;'&]PXB2`g/pfZZU/ol$Nnu-'W)9:Ejnn\Qd$dJtLAVg,,J@k$8?Y
%+Ds'r63l;_->7pHC,=\R9qkSfqP6$=G-+o[\4N'0gk?`P#n`@Mie!#IgDj[:d"?3*+r[_qj:0/*!Uc0jTin]e:.43\i]V$uJ1@*/
%8Bb$Zi7-)Y/K7>=)[T^RIT=5naVeOjPlO^(4pUGpen@8]"Tnd%rCHo>i5P):\DY&iWDp/kUA2)YEYl/3!"#2Cp_XO8=I(NbT(hf#
%P@)20J38MMItr,E28XnFoGI]`6`6KgEiU>(FZKMTkZPA<YVa6E+U4etLe^[h+]5ETMDW4:5MDD7$?(iaUdID?Pm!5GTr4Vp7^UP[
%@5Fo'3cBqP#IVrma-:7;D4=9+7pp!ghBYl[M0pU^(qLX;/-;4"-OEVr5.)8Jbp4aaUJ2Y:0^-(gf6*64KRVoiOrMn_cp<b<5oX,8
%Y@9R=q1M>P#12VI+if*D>*>fdP$/DYWPgOrd@dY(W25]/Ger)ZC5J)_.IBZ0#Sp2?KV7El.Q`;A$hDoB:$BIBAXggbg;Ju^j,t(#
%e1h!#6P'PHQrHN0L'!9q["s@L67gMUYG.!d8!$Pe,rM5-@pRGQl%T[W2@2+*OVA^?FcXoqqaaK2i[43):;"G[7$,k0E@XUiSN]%D
%cj-A7`69JX8/RJ&+CW7&*9^0cN[;qYP2t\);GeUY8<TUp+@nL1(l2)mVi]U4PY<I_.fge+1Pl`d"!d&CRtc]-QECn[3KUScm6jk%
%7#HiH?feORYn?2i>"M'-:E_PT!X*8k&BtCi-/,cR6471-Q?Btb_&foh(F1P'4D7Pi5`2[1UHrW.DMcGK!LlWs+EE\*SO<K-Cp_X<
%0mqJ])itOTpIP>cFVnm%X?\P1hZ\XTM=?@j0dCX2?`>7NC-f2\UiM8-/Jdam(b'&)BL6"a=:qo_*bu@mj&MYY/V!j=$OW!s_%Ld-
%[\a8BV*Qq@Y$)u@LYe\)3X1?VNW^\[@`T>.-EZWrN7UX'To"$JFqp^fLkGu`!#BcXiWbc7k0OF&RUV$8^^.Je[ZDuC/]"APX/9)<
%9CtSf+Zg;QE"bff>r-^d754e4!D0(A(Y_?)(8!Uo"3mss=@+X09>Vma,V7][5ajM;/1B5=C,)T%Z5HW"i<*Kof!`@L(`3G\ENMT;
%8XBlSJegq#Gs2S2KHVp&S$9_A.h*NYI#Wd^[1FQsi-Z`V32mWmP*?=I&TXhWBG`h(A@B)a*01RI-uC4HBXZl^USU<bJdHRZ6nkiT
%CF1QG;RA@%dV;2Igl'BF>H1FsECD!0c2bi4"tcN)RM8kNYSHE,M;p,nM5*VL9?j]n+93E$VOmq=N!)'G94!=,CDqj@8-t"_pJYAJ
%7H0&4M_4<g3[,:H)8mqNi$Re#)q)a%$"7C</(Z^PJRDmp;6@DVXi#l5$rG#^L#@YNc7Ontgm&1&MsW.\C?!GKRkhFi4\=$/)]#C[
%XtZR@5ountb,&O,#ZG2gA/Hs/,6KSl6Q7TdGtVuW3EZV19L4>JHA`G-$=f&jL3hQO)e_-aP@X_ua41`um9!6h5g@I%d0q7gRRp:(
%Rb(O?*M\Tf"kc;J$Ro"FK'Q=D.6n!DA4q7YIKYTces83^U9;"C[_`YP-V^=.o9,R,#[e;Z$PIk*]Q4fgQ'?V@aA&Z%CrKlR891?b
%G4C<>Z68;6>lic92IaoJaa,u[Md$V6#8mr.?:_:X(TB,%%7IEME(8Eb@7&sW0XD`(/(4]U"`bsK$#!:>-.C!@8Db]b''Wn]3aom[
%PVe4&*/H+K7_#bWKE4bPgsp+'&Do4+C`P8OCt[?iS]Yf<9u\]k@CJL_8LB+-H.E6uM8>s0p^_b\6u=32D5^GR>Y-;4ieQS/g4TY%
%B[S*O8CFPHUR9E59sQ<L%DEib6K$cFL*g#2J#me6%Pc(5__>L(Oo]2T.Qb;[7K]1c\&7N#4"P8BE)5@'VCb-HZR$i`^4`j.iSk1%
%dNAikcBJ;ehuu,]5GT99fjq(T('@<uXdZDl#hoe8+@uo\ees``>j4?hOp)<rR?-^*g!Ya%Pq=GC>Xf?CCb"/#^k?iT*FrqNGG'q3
%;NQV8\ITEGi"7b<?<5`QYq[[>Y\(.C#XcFY*YaJ\2);S=d'#.5@*]2#jTns+3])fr$,\:Oi?\%9f/A7BUGh*E>P96Ob')B[>[rh2
%C:N#E8FD6"6:'0XE<k3j]>2O1@$3Mqf'&%:"QR9hK3+'kEi[lnZsfi"ZAirPN*HEN'=NfWpcrZ9_0dODUJ"OWXB)cMM3"=R-CsoR
%8seV`JgbI/*s`rb9h\GqpKMld,rHo>+rEMlp("GH*!i*o@+b_dM>[\6P3/>%abDr^M8<^mkp:A>&@+k^D6M(N`Y(NTgYh!p\2FI8
%$qsu1YaiUaE;k"=d\tMe.B3BXVSXY^mHHZ&K".F:aYk>P+f,A4N6V"Y^djUn+uRicEUWrLJBk/(K#LW@.GIDTE>tkuNR?nXFsKA*
%8M#RD"Ug%f'F>XTRO(NAR'aX;6ls:N+?^/@6#jlFjcGu8.gf/mA:1+%$W:f)qEr.eAXIFqYdbfFL6j+',k2VAKcoR7Q5p_(3]'tZ
%Dh@0udE5&r;UU;\,(2At>Rni>.%JKkh=[Og3W_qk%X?0Mg]4qng\o'06ZB8J+lH(/XS\uV'G,I7\.mRRQr%?OJi8CkMQ7d0iF0Ps
%/4i#R<^M$4VOP]$%0LL<bsn3P'oqZ&Qst\J**,cpkleGHA=s=A`I\k8'9&l@X=7)J0L^,T9a/+dZjd_@KanBk+d`CBJ2@uY9GgH9
%XD<n?E0DE+jk=scO9%LRJd>$b;)miK(m'M"!`ro@b;M-ITV`Hj`T;%ZL8p5FRL%k&C87mkXO6!D_R>$#7?W7G@mMZ0Y:LiP3+4J0
%,V;SHiS$"IMb.BD35V5&ES(P,;%peVRS,3uc*0hGj\/E1\e7-,5V8O6C(HR<cUEA,/=6W01G7lbk6@Bs'U0@UJd0HX=Bm(l6_8tN
%ZJ:$L"PG3.DLcBH9QmjV_B;+bN'&>d:/n8<GXP$$J3SlK)F=/+>hdeZliiQ.1f^$M6sZY(@R30AdWMIO[MX(iRl/Xu*g'$;!\@`K
%`;uiH-"nH(i.+Z=KGpWi8BB6<N6'BL-ObE<7N@SnA3nQc]SIneA%BOF)Fmn<_E#Jk&AYDE@DU?"33L@u'P2>]'#gsNkoadR0UuPi
%?s'Ec4qW6#*&[d+*$5h&63sZ6C]mcYhD]]\RcuoKQ:L8j/6pqpk#Yu$A%6,A*uiT:NE:=7,`UPp)">u0J8!GS\J!RsfXN$1ZoNdA
%gPkb?KXHKh-F;E]h,NLq"L3K>/-F`iqtufn0dQuh+!D/M38Zr@!PT6<aN3I$AP^/OLkAqbTeaI"fHL5^)aQ!-Hf>U#6J!K&Qu[0I
%.a[#@KdgP;LLd.a;q&$k5/QoV&?rMr*%mK$e5"LZ65;<_WMV*s&WrMZ,mb6o\ksd&nJFV9Y\Pr#_^!)P"Y<Ic3u/'R_%Y`tO&u]J
%g)>#N@a=<N6;Nu+/OMA3Z<^5339U\:,GF20R#&gNbJD1W($Xg?11WiEKX@GjGb\7QG.\tl&4INj:8TMPdZQLe2Bl<3F>90m1<(Nm
%CbPjd,jW7B(sA.1gf!)IY^6a$D=Bjto;H\!1:>ak`+\.(pW2S)/-/8c6:B_9%2k+'p`+E9W#Wn]k?9D]&1uLVe!CZH4E>CsD/7Q7
%Fr[GdZro_>gH8>$3sR.0h;JQ.e1L0D_ZrSHUsWFU7[nM=N[a&Z&F6t-'#6>'M0@i]:S7bt0Y+4A$[LfXA!^R3Ym]]3>_f8r!Pt9;
%Q7Y%5l>Wr#.nILd4#]1SKROETKsZasa6'<D`1&5*`khaZ;BtJRb=!8%+WJG-#mZB)@op%dE6%$)+Z_<I%`ea<RRskXE0sPT)!o!L
%?#$2#>mJtN[YC>1"idbnI=$r21lQO:=qa_C8:fDb$kY]SXs'Ki-QR`?@WjF?qikn]_::=nYWb'iU`0KHR;aQ[6UFj:07e8L!X/dB
%,et2tBe>%6hL,0Uq8&#`h72<pi+OZ8,Ij@(LB53edP_[k'A9k('K<cL$r6E(_\!9-2A\C_$rrY&Q6DoO@*iUCONs.-cU\u)1+^b+
%,'Esi#_XnB*t2cWh.4'tZJ*2Fn-Xp/qG<i,<B@WJ;F7PZjT_idc*98_J2X8*5po-jh".\BW=UBg#SfF;kJ?^I'ukn-IT<5ZD]0P+
%f8(Ycm]JE$0AEB_2J^FEN<7"\:sS?dD%!/]37(?`mas.QUKN;ea)p89HK])MQSspgG2!u:`:O+r,cqp%%bZ0WTE^,87eTglIBuuu
%gu+F9gh];bP"PG%ULeHs*W@[,@knN+K9MF>8M2Ot'fPZV+!?@bS!%cCQlYdZ/_LhD*=d1A'Kp``fgF4fTdQA(:9^.7&;q+DUaDU-
%(e\7A;iqiW%U*<\&Q)QQ'/5luj(L?4hj8mX;og<7O>;U4S,Er+=YN\6i]<7+Q>F!l5N=X2Tf?p7M<3%()+9Bf@)^\[lO.a]G(mW4
%Yo+])l0bdW2Dpf/V!LX4W)>I8rmtFMNc6JKE^Z04#$o#,A%cZ&aY*4l3!*k%UpG2fk;94h"'I,!?Bn^Kf%BTs"oA:^)6M(?U1`'b
%JY]VS;$d_A\6Ut8`^hF!ZXp]E;&sOAm)o!:Z+-sY=WKmO1^Udf8jgC*0PUJG]LN*+/WX?LA5XSZO<1+G1hf6Q-X2>kCfOmO$9/1)
%fl."7_\f8;9GnTK\f#RN.lKmR<H*K)D&e6dAK05TUtt!i*3SQ>@FV/!,mg%NW`S0^M@@XeNE!eiaE+Zh9:`XT?r^Ni8V)XAiPcd)
%hOJ!:Mqa>c@Gi<K%FsjglAaP72Sj3+NQQDZS3`qZ\BXMJ9GBU&)?Yk/=b-S__\@\\?.Mj9:k";Vk+3JZ'J:_B,F-JQN9(1#'Tc&[
%f]88@o"pEIe"p&akjHkK9IP]LEm.&q+]O*R!/#\s)tp5L[P5.jo55P(9%.(:L=6aM3T0gl_Sb'#5fuO3>@J0L7NmN(=a1ElCPmK&
%BP+="5m!2)E,N"$6>0<VJ\#]Q-/19*UK@Zn3+\%\;DsP/0p%0*au8!`#t\%J7VIt=&G\&oeJ7k)815UhA[:Pm*HV`K5ADTgLTP_'
%JIr_.NlmB[(a_5pVF=6S7imh7+f;=Kd<mC@^o6Fl#GOH"NJF1[B"&^j'Z>$\/6rjD'2fbP"QGE:kb6=5PClu8*0",3c<t?/6l$.a
%79C-%+G1o&.$,$3?,]Ve66NmE7kP-K0[pMNWB2jIA$W%PfKS9l$6jRAVhM>tQo47@kHlHmPL4<iiT/O&Z;"Hf1Vhj*K\K9Yc!`*T
%AAj+888AOrQg"hj(sFuuVr7kAbgRi&8JDKgbuAfI6%S[:m8b4k(3_W<j9X@k;P]qA(kUeR\j4c2(P5_d)m3hm8>%m)#8Y_ZM%amA
%MJCfCi[RG`C_Fr-KJ<-WjPhN<.kj5)r1XM.>)urk>dHq7!FW@`;<;6-NK\gV\LN9sD.Y:Dm57["+TQC8s4abU*)fI>94hHL9IViR
%VF+sj`<*6b[0^lD'Q^[V\K7H%ST0k=Q7ptU5=`/ML@.?fgmfP@T8q$Upf1n>)+@$+je@?D955]ni-7^U'V>R,,+%X&1Xp;]8J^(`
%[Y,d."`#G]YY@<p95Z61Zm61G[d[1O-<I/1n@rf%5"Ic.%2DpDE.b=O?dmq4.15/^AJ,t<m)c59Rfa>&+V@tfAoN:Q[:[de,65g0
%W*GO'MCQ7sjOqmlEKZsK'\@@p1MSRRZd*Q3k&Z_F"F=P$+noSqWG@l(EbtqM3A%@SBqEVh%g4k<,.\6X!4?`5/\::[.+70HIbKtL
%9sT#3=r_dX.]7"f'+QDP;9Zu/*_:u88B.Q=fotHjLM2^LT+IG*=e]Mq1+L1!;i]WOU2-(aZGqpDld?@a:_h&(S".;_&VYhpNroap
%dO^.,0G<V*j,A%8jJgigAkO>%ZmX<*HsIG+kY0*3T_0J+36a&5*qA245t7C&YYsZFYeb]7$S`(+$3t'pe-*k:CVi4D""lQd5Im#I
%`!Y[[=IgjXY$SVH-\i4q74saQ-jG3Mau2/8$-A[`\K!kuR'U2I\3j-e_*r%Y;/>[\jMhnY?%XX5&_<-)+3$&C2q#"%NcVq?*WS6a
%\Nm<KI_t6@S>S\RVeW_!JA<M`U]ER]ECR+B6en<'/;.e8B45c@)<r>eiM+sY]K-J>A%4M;!1p]N_Zj`drm@OQ<L$gZiZ>02Ro$WF
%OfFH5@7#N:_X*(V5u8d\'3?/=A>k5a81/1@iRNP]JOjL(j-'Mdj517l=VLT[)'*4kFBKraT]!uP)?pZt8lQr[JLX7GdbGK[r5]d!
%IY5.=b>Jke6pUT@[s/KQKjaABWl!+g88L^&0WqJoJ;`Kml&)Jn<E9mN_NOTs;L>uZ4CS,`Ir&=ChkU0OeQ?KMGaWH?VerZ?"hVg`
%]\60=3ahO?AncIqIR[TNX*7NuaK,Ks%O>U[8L%P6)IZPY6SR_aO<qHK)iZ"h9[(gPR1B(&qo;+Cg[\$P'sTg7R5I"YUq'oS(t]eQ
%YmYH%9(<=89mDIMCrOpS)M]QB3nO&GQmq&)5q:^\@\Eu5H$.dkCoQMmElCq6$TH`WL-XaC'bC%kaDc]12UscHceB]p[0>;B..WTW
%9(8SBQ1CTJ\`AM%%E3=fFQbqJ0LfB'.GIOel+l;#Y4/G_/=0mD"tHZA@'uK0%U8]rNSL2o]&BNf[fJakB,k$N<).<egQQ<W<HksT
%ZWUh,DESlH)60__+V#2e8Hc=C1DEA2YeP`IP&m.lZ=0;L@S=,AiJ:dF6A30BB'm;ODGrO^+Ub0P]E<Fo\kQ`.\Igfbe!_+i.'=rD
%Ke&JKDNn[lQgp3d"n>?I"&Wl=nh02)KI4?h&l)N\;IMkDE6XDO1@R>,?diOp88)i!Z:F+YKqO=Y@>[Pd!dr&+D%>:R>eDInLUDi)
%3)kVU]^(-o;j%"`o!H+.'gsM*UZ=`JR=R+QoFDa<R&Uu!&O;L(]i<6sgq],-)FjETD-5L3I+10T@O#@n[ZijDk_C[;aMj9$@Lnic
%63Xc*MYi3[DR'"-=@GhN-7fa%kHM)5c4\]Z.r95ohm?r?L&)t;_Jp?e6;V);6Y=^")Fpm&b7-(PJ`r4.&E5rM)fgcD>;dH90jXLn
%8gXmYAR*48![aH_$apJnlU'Y.*X%E1%NU+UKNDIf3p$-"$p90;S@Vp5@j)#S0\Tr^Z5nrVW:!dUeu@?^Z8'fo8=9R4F=`"G`^I<t
%k+O\t?>snGc++1jnd>H@3[-81.HA#UiqH\u`()+aGh@1\Z3G&Q]h"n`A;QfO,e6XS]f+=t\?ZBNl)nHq*k>u)mr:F0lARgI(`_,c
%E/YbFlO%Ktj[GImh),mD(M26(H3IAMjW$."4f?c=dRff&`^:neg(/O0AGD<d2o=C[:cM4,RR!9l"Vi/b`_f#3cDOs";7R:Oa[Ii/
%8dM.hRg.oA#K$s]ZpBaW[RVsKGt'NC$%^>6Jd`f%DfCrhk4C)4d1RE,7DMQ?2&3.RL!G6mOH#?QBs8a._\$#0Z8$C9aMG/mPr!Ei
%9.X>uaE`#0!hpNt95t)]&13orL_$eT't<<;EI.l""<J%5Lrq_mAkN1U3Gq+h[3>K]aN>^Mipn.DD&cVBTG59t\IQ\]UoU5QZ\m`R
%7&DPhBQ.L\\foW]AZVAi]E0)t7eY"sjM4=J3YG(8a-],.'2jP=1ft9Y+Q-5-*,_I+fodX""9s'=,mZb+NmmNeCc7!pjsbQ)j>adq
%a9O+XC3#DOjt[J^%QjSJ!.5]CEs0RE\i!J+Jm>V(!pmp]&_[YhEah@&?ken9g(9M1)AJo;8S_uSr0.2M9pcXMAt#6[5]5!3)D;3g
%$:Ysg@!`&2YV'Imb,+3uX@)M6QS:G4>AceGV(Ba?nUQRVF;)b!a/t6I\1Grk&J#5-/CZmMe8cL0fGZ*2oklT.bm$ci\I))aj88l.
%FtUCq,tV./\('jXPEMT8Cq9H:lOZCBKN&QmB[JW#$;q$?=cK_sLpq#HT:)<&.^CF@Qt:U1s6Q4nGI(jr/W7f7mbF;Zop=P[4FR*#
%7MYI^<[]-XoVVX"WmiT-E?[X9Hp34YD$;AYTSqHoHmgH%XSjZU</UJBN\WDLKTd.Rbc6BF5bs"*!Tesl*i''ML<,eeGbf'@`-E<@
%/`\c:T;W1b-P]l*I`$5H0r6mK!`<-qKUmO_Y\1SY"-`+rH:9m#P#`\Ha?qZFR0HYV@tZ>-E637bmD.o_)ThN]l`D#[!&kLs(_JVj
%m.WZ[5o2?bcu2G-QRr!<@#[(GRCE[^JuSHj4/O7.U*A+lV[p_k9YKg]9+E4T"%oMbk2as9\_W@D4\/IC>VVMYC&Ugu&)&O0C05uo
%RDcF[6#V9-ijZ7)i^Pdh+G`PTeb_8W3b3)IaU;(6bj@t",q%O\QG/&4Y6;Z^-sY_r1i-U@5f+`h/!`Nsm9*;41FF^I,]>pjN`sMU
%SS2se&RKlMRm6R]q<qcod"PA:;L"Bik@hEVUB?/i6R,*ujcAkZqXlfIi9ro+RN\hPMi;=72EAt,3NACm;)/E4:<O722(.:W,66\0
%j-MMU@[*l_%,KspLnF[c8O)lR6oh0)G])^FIa6)/L%=6%[=*riQ1I'QA:u;pRmR_:M/W2>VQ$`9#25s-Y%N\n),("jH[KS4bT:/a
%I,eMrQEg.4$8Ij*(=:HPM\kj!+>s7kboIISm)Z4.a`iPXjhs^)N#d/[6'k)TgF[D%cr<Yn"Bo<rf[GIX8,g3e8$-QnP0B2hp?/23
%["=(bJhI61At<=deCbH@-7N_MeLm4i1>[N;Q]*+HN&&38T&a:=$XjjO8AoZZoPQ$g>A=^[C<@4bdYA)W@l"Fi!(s-o"UUEB"qi3N
%?sZa0$aCJ\43EcO$fsV)+sh4hb(]ltp?pNi7L!Qg43G/]cPY@d5r2!\Z+Ol.)fi1R,1I"[&b--?aH=#UCW)tAH.m:JR33:'q>^Zn
%J(UfWFVcT;-PORl`>o;[9$?NP97<kofFFM()jCP_2H7UG"AVN@;I;SgitAT3ITMosd`I&qSR*I9.7n2hWDHQ2r5`dq8HWF]2)j^*
%:KG$I-?&jnXsf<\9"C3X@lodg6eSh%]kqS-Cf0X2BbClf3_jL0LYV77BGVp`Hs9Y^[J(@/TcbFrKQ-a)k!?A,::QWp-mULI\KG;l
%'S(i$Sk1sWOSoqC\V)"]35gH"&sebm(Wn*A2cn@\W90(rpH<@n_XL#_cq&m6q<C3a]1E*5JL,\^2+3&1!jP_ik.rs/5`b9#>*mGh
%<.01lTR"SXMZPqX(4t6r@Vimoo$/;17)ndR,(iCk"[dplkA1!==&1!gXAD!W_)G=NkZ!E[^mdSR3"pG#Yg@CqR-uD@SFZ+&\Xb:/
%WX]n60Q`Jaj_,ZYoXVSh.%`kCV#U)41X"U\%`u.FPgLU@k&mZubMUTOIZ:f6%fYf[B#20?l4+)'.:;fI<nGWC!i&3,/>M_^iNgLF
%!U`L"JDO'CeTQi+OncqE<-EtjY5M'%R4<g;.u"gZnN0_G^(]8In;WlH#H5"=dOg%HcEK9Y*S\Q;M"XC0^P1IN2u*u3F-]EHW.7CQ
%=7Z@NZ(f#qo-W<)rB2W+qd-s44LPLXG[jb?JF^eTQRiao._^:A\ZDgAQhNc9":3'"Z:&(L+E!!Ic;9k,2thTjHJ/s-.Blds[DYQh
%8!;324P+*ThZu'sUI1Zsh_%=R<\qE\L:5hp6QdZbSYuO\Ut:)(kD*FQ;I+.O`d1M?[Klo"#l[=jV'sib-cg*N#tF6>>3S3?>$=&L
%"[A'AkHU\l;6<(UIXSo"*:6o>5l3-W"F_XaZc#8'+e1Is#<93pin5&MUQUpJM.0Iq.0q,Kk7KS9)_Eb[g^Y`m<T3j7*-ttoRuY^J
%)RQ)+TZf!7[S,ph8@Daj`HrqeHGuI@<\W)Ng\c>=p8PmchnMtGb<Pme?iK$As.B<3gl*j:qM*gq9&@mV4rh+r/?fMF#&<f`'!hBC
%M"*V0>0'uWGGZsI;NY<0Fbd5*"=.D^Z<:pcKKX5XitD&,p-.R/;(PbU#edmYLi<oAJ8P?+pFJOIiW_(*I=h-TMC!sI-%L_V>8EUE
%jPF0rC2BF;]=\('=IY@G,2:HoAjrp5OCiAoLrDt^'uQ7>!%BgJC3&eVK7g1g<)<oVh'F-9D:%&eP=kA4!.e]-Y:hS)`#Il?`0RuL
%5WkP^:1u](-q(^uHW@UZMD11n=?GV.fn7q/F)s]i)!N9"RDgn(DWLoVh>$.sfP4qGng;d?XoT(OfliaLX>C=.O:dFR'ULLRhFICN
%3hubIh2V@RXab+Hb#,3%%*<4EZ(kcc;KSNg`n%XN=3*6F%OF%H4XN(&on%BRS0_4h/V`C["rQ!AdjtMPml"MSe6RN*W5>Rg#OpWb
%"!V!D'=k@CPVWh8q/4kglI_lTn)Z0'.^!NJVq7QIR]CabOGg*lG3C?b)G>A%:<r<orJV]BF&b[krq\]VjHki?K`cd]i5UGWmZT7@
%^n@#u>QANm%fEhli)s6?PF&J%-l+<XM!Atbq`ru^3'"NKdHBea[s0EK`R1,BL0]kL"19f8i.U:,`IrMHfTRX;<1m3RQDkJ<p[dd9
%-T'`B'(2R&gLf@g_!kWH'M^"kWsn+>;c8no19!68N#jan^.qSG8U4S2#)Qa;>[VOg0d=6c4iTD.<p"fRHHuF($N$;hY1-3M"F;`g
%kSf&kZA5t!U>9iA>(BlV0pI#l5ps2M69ZOE#VB[62G\C^^UWZ,?@bZgT31R'@qUUsW@)V0Y40Kd%$_(MfAjFLX$S;#KKGpHl-aUS
%&Ro&qT)]ibcR2LPrlI\@BCaY2^d-/S5"&ERI`Z>%m&@UnQ>?jT9Wq1\#3mL+W>p,b<L>M+P)_t7D^rjkn[mrEq@oki)<1#3#lDO$
%bR1a5&)s(@>0<\^(=[WKDK+VEQDU&GKe8Z!EK`r#gUrejOq_(!Dm$!7l+>"8WUKN[g4ou3idh[[oj9I.kJQp2kReglk9c[5M;#AO
%E\csX/7T>"\A_NZ0I<$m81(]+$)52.$(QQkbQR&8+o$3K+%"'V%t+ZJZ3@?t$'j,!B24dm];.SR;9gfmP3$o0=tf"';EQtPTOlOQ
%K[^]3IXg[U*UOPY.RdMOa`i,JMChn[+gRBG^8WT0)'A5;g=qcIn-^-VFH6)I>aGkIi)KO'B'NQI2ND)$#^,8Y,9O%AaH;)%2Qfl#
%=B&Df/d)uOoV`I[Xa(6;6pWD4VoKDjhhC]0a,F)Llb5T/F5Wh3^.MhX]>FhdlNY+!`eWQ7,aA^^@pSBOihXQ!nck"R_1_sDP4(G/
%?^+H/YW)De18@bI"Xk8*CT=^4>fOCO(Hjkl`PrAqO&*%YjN5IjY#/&)XhjD#m6(9@DLTP&9[!&26a>"LM!,QDrG@&PF2]]4)=_iO
%#lk8qf;6\W.g[IO'GT4[MtW/UP0<hN.3?';6%>spPd@1^(qbsLkX)9=PlWr$R4@f\imeI^)r?J:D*Z<)ccFIID/8;:1FU-OG_iDu
%fpVo[HUUGlgL(G?TePG8e?Ed^Ec3\`*sihG(5**iJie2&`s'LU21OeO(W8q!\4,Xa<B7so?W#StR22+df_$\\CTR'iXN!mY'*-N@
%r#T"smil'?>HWD7%ErZW!XG6.GiXl"H$P>t13ghD,k_m(+WL&&QiKs/Q2AB[S^u8Jqr\V)d,V8G<ZPW4Yq?rU43IHO>POMsJ%*IZ
%]?)3;'4'b[DbQNormIdo)_gc]hHaUOQ]CU%knM7Jh@"/37m?UA?sKN!;,fA%5rqj1)@-jUJqaiEnNtm70HXp8W6_lW]<k;?q,_k:
%DAG<CSS+fj(3<!2[5%8_7[_*f?=:"e,Qj4t1p\CiFN'm`mlufuL8'3h7%(g"nPA#3&;?@3aRC6pF$c#!KF/:^m1=Vp(=&J_H.29a
%U5:iSZ@M,4'O\p*OinaHmo!*CUI$*Y"X2ak^rjILbLNb/F0Ym&SCNU]"]rtuQ>k@;]pp)S3I&bHYN7:a,&o92I]<)1(U5M@Mmq5b
%IDsEe5uQTW1\XmA@Km*rFQ\STXB'u[M.XtqXgs-+hGC58iD*<Z2^1"lO"q:M?ThZgTXG1nI/hDT3=>\6Zs$o[f,go_Jc;9YXK&fJ
%SkjTM;8!Y=BLu2^S)0p;k>6#pXC6?W-0+/-Bh4=>V3Neop.$m@TUrEdVQja`74hQ\V/(h:Y*<fDHZRsX@hkr^V=D6qgmQj6O(g\m
%rT5SeDThs<l-VUN3tke<IpJ[liuOMIZAKRN#,BJ]?]6^Mf\1pcFdN"L9&Jm7)$Xq=a+1eHSQYt0:QFi79rk7t@dI@>,cH73>s5j[
%,-/9YF*8RY!#B=an4BT.4N&VVa"g$MFqr$1qToL,b/[_rHL$#4=cub(buLl\1(L@r0$_,=WtpAXYS[J%lfA`ph^.9=(CTsa(k,F1
%B5Uqrdsc)4II[HK?urEbE#L@S2plIl:K^bcQ`"cl;sMDl*1=o&Y;&FI4)=F%(C\cJ`kEhf>5$`#)qQ2i);g>5/VU#/?]cb^c81RC
%cC#PLGV;Xl$Wd55qG8F'W48^2TQ@0Aj@i>tUSr*&"=J09;DP%OeM2<3r<eS3+D[a2gQCSt[CoLb2Z!,(7'pLe)dM)Zhm6eri5Lm@
%4N>tS(Z%6F2j@<:Db>HGEV1RJ+:TJ^2It8Y=3I=X0stcSqu(=-jCuG6/[oA]5+VmBLg>W?9$&j3)6@&E-f9$f]to$!#H<udOD[f%
%5P9=&b'oB\8Lt*V^Nt:^XJAe!6/m7Z>k"Ps`Z9fQ,PF9;*!oml_eXB9Sq;b;]_q3.;P-'CL`Th8,erWI,,Ph)s2::nkI]i=%2j4+
%eG0;&rX%<flh`u2i[`BI?n55l+*s*XH9*Es=B=tA<6E+1m\+3Fl%8-Lj*"'pN-E\=Jp<'MN(U(#HP0:\VjWtLp[@I4-O%\)]d6Co
%A^1U1X.i5A_js*EJeUt7HLF@`cl;R9oT0)$95T?optghU.+c>.0ZC7'=^W:e'#U9?aIOsf6:smBonbH+<M:I?]"21h7j;1nktlMA
%PE&PKqE4:<CPXL@>#MEFqGf[cIcI"a3>MW`&s7KIBt(dl]7hB:"HqJ/2mT/$Rf*hS9A\D1b=>.AH>GBYORMG[8$;($h9hB-1J-AU
%Nl\6g[8G3l(4^$j%!ukXK&+WQ!O>J!"Z1CJ_?P$]am^36$Rc*.NcsLp(cZ4^%Qnl#2Sp]gRX>\q>ht/P7#+/u_8,^E%m=@W:hedL
%OP3e*j@@B_OHXY]!4b!5Lntp59'i0P/dnM!%E[([7=MMhBlSi]]Rh=%f*pn2c)Z=7XsuL3lLm+b5sdK;VX-XB^I:ee-5G3H7NJW#
%i>m?cKiC)=8?>K0Rh&V=gXlB2l^HY9>k`o*!9gqah1XD'W[!,l0WDr)qV$)UgM(f+!?[*MJ7<$>!Bp!hd`I5Xf$lt]qEDPVO0;s>
%+i:ofW\,1Z<3Qo:2=#:S78D5nq.8T,l)hS#Z2Cn`^LPX.U4>=CcM?O-OWSOokr<_b[iNp.Tc;E?Y#be',d)tB.eQh7/Y?g616;qq
%aIN8':o]'SYa"aV2;dcZXXBh<$"lFomIZHI#PTBFZT'Z`O(*\[,dgW`Us\ts\WJ@,F(mKkJm)&Ga[AM0oKjm[)FnD^b^p)n@2$j&
%5"J`g]7MrMm/QRh-I-S9Z7EUV<-JMa=YMdDa8ulq^E*"W,:\1.1,T^A)I4`!72e]o%9YFR"NB_[N2q:K7G@PCJ9fB.U!^>Sf=\dL
%@u3G+KN4iq6e,S<h%o2,nkO#P/BP5rhL3R0;j&$8p_@dfBRTb`_4M;0EA?1\.<]VmIlg!_Nop^R+2'Cn-(R(a8Fe>Ad5@(S1oqW,
%#M)_Jqq7LLMfuH0GL@kZ]-Q',deLF"<Sc!IULY)!OuIN&k\9m'@"m#2(u6?ApnE:DV%MnS@AU,ZBN"oeHV8L0$*gF)h?!b5i9u?Y
%$mS#I[F7L8o?oGiA\.9P$=gEkOh`k0Lg_FF+"_R,&kCUW2;?\CMPA_a_Genn9+UA!]'AMu%8,uu6MPt>2s<V)DibZB0RA?#hm":0
%0D,ql-=-RR9[C$-(%^%Ae9;<Gjn*VCN-H(:)]GIh+%%J8)c4n>7dr7K`c%2o+;i'%;`M?IbGSNspJ33@+,)4!]2!/mI!S:o%tfda
%VOK`o@QI(;-d!!V(<BV:B(IV<F&Q9QY_WTs<N]7;gQ6@aPl.s9nM=\B*BgeJpkS_!<cpU^"'=tmC).R%H3>QDcQ!@;4r,U'KMFQ5
%afX)TA$Oo2R&,%.oLf_F8E=RM8S0S?O9Xe'TS&>24%hR,gH]5f,.6Thlb%6#$3R.C!ao<AA5r`_6ouPD-X7])=H2tcW1(%;H7M9u
%ec8I_3UQW3\loRmbP5`glhG7;8A4,N3J,H&1Q2^Ff.bCs\$G1:Z^9i"4]lH^obS]/7ZV(r);*D2iZNIfaVu&\p_m?/g2pM-d`:J\
%cXL18WZ8!q[%Lbj+$g:XM'ee'A$m(lACDPUUl=HIQ/or8?n-e$`AN*9?8Q$PWbE^lLa[f=%)rp^+l"QO)&q\#i;$t"@SUSW/PJE1
%8kIfSX6=$-[S;E,qt_-:_MdnaE=M;$dFGWEHPbiYn#L0\20J5s'RKI5NSl?i6rF.$>/tP%oqp]hP&>@c;=<NYiDjlWKQs+t#.%s2
%(Qm+3B%`1EcnBsi.7Wm;U`Ag-K@pkuK6+FYe/(Rj#2T!`i&!7tB[<kV]C`JX&@idogj$3baN*R+*Q+19omm[#\ONdp>\U)"-\[aQ
%3uk4Djq@CAkfMDUo?-qlr)*IKQ8P.$47*?6U'sjO"]H297S?cYR_2D!>.C&ud;YD)<ac<U837u"n$a"Mb2'8['@s`Q5%1scOX8P%
%illY[];q^"$ljDbY#FWb5h]83J!Sa,e\iA^ciN<#iW7ibq7'Yf>`#l)9$j+2=l0R30E@3('7>iCY?#O2;u+eBG$eN4"\7tn('r1E
%^4]Fn1f9Ya>G.#_dRAhrj;I.4'%=9MefjdJ&%/Ck>JE^[@h#fgm,qX87)cVZ)@Fk9J`Kf?l+8rs5GQ5EWuH:b0D]RhToFjhd8$AL
%_c7F.*ok^N7"Z^aE#QJmfukDrhsqpL-!T$dHN$Z[IL^*@acE#bR[GQsI34&RY9Dipm#T.C>c@?S<*^%r5%3e2eM6FE^WRrg\OqQu
%JdQsI_b#e#A>L'Km!"h&=d)G3UX\qdhb&1e4cW,T!g(Sk,=-(I/f!s[_;kC^EJ$E02(^rq"FBT]s&_[p\G]1pQ@&b]BXKr\C'q@3
%ar+EB%G83QS#cVb[h<p=Wj?A[!Sr,N3<(DBBD".0VT*jE.[P+t"H_$Fl>uec$Z*JG'mLEg9*ce$9oF:3n[B,u0m2e>*ISb]1lV[i
%0*6=)p%e'KqPV&.bpB+:1Tdb&OLkP[b\P%+imE+!ZkMG&0@j7(PnY[5'(oeQ`+H%f9n(G:+BWBPh'@S=\jMg]g@D_J?L7`I?R?;F
%De>s7*^+;TU>?nA_R6C("cd*i$1sH1HJ5TZ)_"9<4bcF@%#hAdrHs+,T*u"=>PU?*hj"jZL2J`g[>.)ahD1>Pr=$C\K\jU!j>%*g
%--B0T[42D/4PUW'DO8Q,HGs1CO3,q!KSWWdfdQ`^1nE^;-Z@@Kq!=,T-K$hf\%WrZ`\L?Np"#IP9)]uio/BR0mh`,mi(mfICe'Up
%^ubrq;Cn=pTNNWBh6.-b7rL$YMLp2-2.na0Jn\Dq=<6([9W&hVBZ?oBrg9iU]B[s;;-NGF,Ep(J/i(C:Q$*\LZbOM603e[i<Xfqk
%4k$<K>-K!+5Jr)saEh)n$&lujN/YL$F;eE3#jg1NZj&e%Z\+L*mL.C#:q_-f=CM["pam&?e=)KF@n9<>44cuEfsN+54/cR5=k-I@
%KP:HdYN]PDU:k2tMV6U?W5HlLk>p9t%>nH6:h/-s%%WP")$T;$:DFkhoaYH5@I#G8PL(k,ASfD;G#l,0g&@eD?lD%](FZH#i\R*#
%3+q2.f2>H]??PrgXn+#O*eeq`d#BGU@4Wc$5D\;X_@[JT?(B:NU!8hK8^@P;O!^f"X],ZAg`NgZhgXqloa&u6'>>/rZSOFNR?WpO
%!7-,^jcjYp4<9o<r)TfFf4ZqjGP!P:U25.m1WESlIV![\lX;6O7l5qq(/=,[Njc0*(=C'N@qtOA:KL@^+eP_SRuT#0b_iFQS!1De
%$gt90$^4SAC`Qh:[E.;?G`j(soC3Il>1)uU%gjU?/,E*R(bGoq5A-h<eu*'Ui`lW0U:QJ@o^#S64Od[iI^><`a])PaBuf@MOfRds
%jj:">VP+qj/'j4D"FU>/oc4sK&^*4XaCk7i_k)=rp9Z6*/(-Ac/"l7pgmdP,4;*.RmX.@J%po,jN7(Im\cg'ADs>d8jVi,C1[-M>
%cOHQ;COIX^-6Hif-:>TD@[s$([up/pSU"b,p5r^gSC&$.`ZL3N)cYkl^5qk'P!'B!CZZVYq+PQ8e^u*a(+hh>Y;YdJk'd&6\jl]A
%fo_t(3k+I63FR;!?*J<=<`E^<(BM)4%BMPDK/k1CM<H&.l?V1T&N7SkD-++#-'69$ljhiu]G[jA^1DmQ`jh)'7S^#8/KZ7h'N)GB
%#;Pi7p3lhH.-hiLhV<##EicEkA9R--^TkES!gZJL^s[T+Ha9lSP?4`,,?sapRnkjYS_8hm@=Jn(LU&eD[I0N&5&,e4DDMK`4:m!*
%V0E4eE.%F=W$$rEB3_94Z'0;=p7@GI9kTb/ltu^d]=6ls`cr$)'SFe8fY2>!cgE0lmY4!(If+mE,p:20dX_*if>lf/C%bc5_rSB%
%Y?o^/3qUi-1fXCYU7ZZ7T_g5S7+TY4OM=]fD;J:br:\[hneF;mKK:qMqSDaMZr2KT7ZV9JmJZZM5/Zk<joEk=5M6n3)=bG=)>am1
%27h:!YDn"EO_>*OmOAgc4^@ksSuu5s3a[=\=Sq/unp*H[8N_hjD#5<&ZL(;1^[^>H;X]K<.rT_IXEQuLnJ%C@)clj^):P*\.Q/-F
%@PV+$Y'@`#@>8d0dQYF9V#k4V"=EhONU[p`,GGnf$A(Wd5?YLB7XTR+*kU$PRf',HB=<!]!P>"rCpL`JkrGu0nGa&IPM1L4_A/U$
%j*eXKdn6^J`!-?Aeom,>!a!*HqV9kd^]am/m$;(9R'j*!>fl*oWF8a$A67[<J?8'f9t;tXK&Yj_+%n'W?oK8HHtBBAdkekof=&KB
%q3k^nA/>H(Xq%#-"6g7KhSlk*QG5nJPCIZZ&LSdF4`W(nABt\3AcB?=1P>ApYU&>uO`Q_fQe7YHQ`u<1G//IqJNf;)^4eXCI_%^U
%*$1&[H9=4_4Q+8=[0Re70:k!Q')7:oM'U=9f@D&&*]fMt_m\)Z0#g?fM$ZUD^VcVV<uQ>GAh+d!@]\aq4S=:#E9/MrcEpjO_j9Jr
%o:5+9#qq5hCm2ZhbZdS'[=(S,8G'-=-m`Jm/TeSMZC759%;!Ym!(F?OHO5q_'@'FN55/9+ekS0$-^V:<n_"K7bVnq4[d[$=T53,$
%*Yt)TkC2a.a6e'Dog'Mlfoe`i8['.]O7.Odf?B?BLGLM1*0Rt9_aq/UfadW%JslLtpo3)@iQf[R\`nF*A3C9&4bn13gJQ.!H0:FP
%^r8%(ZAV5-+XLp5A8Ej#M/oqG\ah+XHLYDO/,6SDhMh_u>WN;r>/W=$gnA(ea?C)"4Et[,bh]]h2-0/0>0tK@4W6?fG=5QPU;lal
%?#A<*/Gdc]r5O"#j1/sm)AGs:J6O`_=dOscYTRUB<XljiOo??=hBO?oHQcu&[`^EOK:U^u7CB:U[/^9(7eBFlMIV(tn21#FFu@!h
%lF"^#*A:mg3UO^lCr\.FSSX^]>!It%E$2m:%75L4gl:(j_Mojf7O*!rLe]?uY2A(-B1_]BXiJAYgL[c2d^FDEAm5<NG5m#=DgZ_*
%./Jpomd"NR_gd<,<V1R-I:N5k)J,O@KP&P-M`0E/kC"BSF<O(g!UJCuK]kR45G0!(UP)fa:F5sI#d2GK@me,52r@4qlT#mE3E@BB
%J&e/E^`6/t:K<WUikB(5n'&(!h'o0?lSWKeJ!.+7D9]0C_pnI?qouD./N<dP)91AJ?1!_J_m?[4S(&YhKXQFo%uo2"N6t)I5T>XY
%drb[8hUkt+Au8%a_eho1mX],/CjK?pmD[2e3=&]m6q/Tu.n^5-!dN66T9R+t9=V7]AKVn%i,)\-!OjLK%mrH!6f)aFecSF1O(N@@
%oZ;hA5[d3^i[aEBT;_<NJ+EQ@.+%:P)<TV"0(01ASDEK7IGS&d40j3U7\uqOh9Wh`'O`hmFc>+`)eQBif'L%EZkCPYF^B/#h)7@g
%Ze-O4qJu6'54Fbo#DRFn:jSm"*<d;%$T\Xi.B[-gc3BNT$50&#GS#^[E>V(i)M<.Me])sd)P6BBg&N'AacRXR41<BDA(BSO9):*+
%kZ4]"?'@]om6e*F;XjuHN?1t`1cXGB'Fqhm2R.uSTi%P4=KUN_dB:F&mA,]7o<\m5j:8=;o]o8R?/)WL`l%]I0T]0kK"]Y-PFfF`
%l,h-F+'0-D!`'(C&SBqt/kYA)%Sij#3$"RE[^1-kjqI'qTLf0/h7Aq*ca'f4@Bo>QAO='L.FZV`!XH+tqk;6t'q"a?s%$7%Z\)?L
%4s%L6XT1URmE8&Dm-(=,TOHH:"Z2,%/(tq0A[KNhhf36i7Acu:&a*N&B:ld+g0He/SG.%KX:?`VF%R7'2ZI2BE!1c*c\cQ2R8:`n
%'%MV*c.B,s=)RN`:(JqR*c8lb%?7)OV!F20,j45`Hp&=bq(e`i1*j*>?uEE6(_,m<F=).D2F4U<B38'[G[DlBf5BcA$j:Ag9";]"
%EF+N&bar0Qe\Em`/_k9*X6$\Il^,@f%B0,\oV(qkM9!/8]&\Pi#*H!"6_[*OTFhe?PLStj^E>S/JFj`9,8't_gXq38<[0B^'4:S0
%,,'W)e\_5Mcd>U-kC[C/_P&9]#6Z/Tgsa9Id5:q--Q3oH1t(+$Qe/9"$t/;03:C;_E%KjuoZpA(#>[qb(aQTCF`a9Im(SHAF]Y*X
%'#$jQ0(U!J+G;F3*FYUW'ci1J$QDJVi^GHXKY(5'Hk"6Lrn%qGIcE._An5MpS?[j5<&ik\>#Io/1g$]-JqNSk0*VU;O_rQP*-/:R
%rJ^]*d."$tLAe"Rk/h+Nf"l04[W61ZG\Uba4^UG+=1Y9F$L2hrH7-kb40Rh*W<(_96HLB4,gb3P`<@_Wro'Hd/j867flQ<_HFQ]m
%VGW[F"ct?>JNnB]MM9(p\$n;(cZHkc]+eG#h6%P*D_7h"R(uR6::mYM:cQob>,F2hM/LL:0';QLe=t&T9YTjSgo[sM\>,M;Agrk\
%os`:TIf3ZQoP=ZYUA`fC1VBP4I_N^?!U8L`6G[`4*@]O!nc=lZC^XoJ46g#bM9HX0ne$>VLi_ma9f'oWbbc^32S=p.=ij:^'COYK
%0VrEoQJPM>b<e0f_XU^NZs,BcZ(@4nT20uXW#k>p@&'TX79>D%bY^81LrPHfp/hXXmGb(>qi*K3Eu>@cK6<qUNFTSs?n>gnJKH52
%K3C?550KNWIT35'iPe`uL]"k1HH:V:+*\QPE#Z*L!+5:pr&nR'@-f8K=AA=sb-;Ybf\*ZlOui+hodc]OK?SQ#Z==g\e!06&q.duh
%m:<H<7Tt3ZB)h`'6iSY0BWp,loO&)fER/OH/SB@^BKL?kB6bid=r@(*m"2HY*<'_\L/t-3Q4Fa+aV)A^'(WXd6-&VK,ro_RClON@
%I'KAJ-s*8+g%p:5<o%IU'ZMsFoN#"cj5eeD-o4!Eh`q31(2V<Y;I5b.@N<t]a186&`>Dp`Vt)hRR4OGJQ#)sP_\cT&\du(cX:soA
%Al-'b!;+3dm')R_N@1)(i-Eq^>o:pPcUV;DN=sAB05$#+CeP0QJ'cah=jXCmAY"4qVPg=Aib[3T;<sXp-F_:k1+(#Nb8:D>BU8e*
%:lCNnO^"(1eQTOBen?)AVi4_#;Kt((?gJlakmYKh?1WBDb61_ol9095&#/U#As#2\"VeCaMH,@jmnG(&MLSf`c9$bP]a\Bq6%]:5
%,Wp;d:UA<objL]6NG&+tHTAKYWieirUh0l)!;dd.ejNN$be`_Bi<_UChB%E2:Gj?D@5'e#-t@qE?GaU.-/*9:JEG/[!O1%:R\0=a
%:<C7td9(#"/7NrMV`]E73kNQgJ(BT8,,ijCL/1'(G,Wkul'?]J"jZ>$)N1=:K8*r8s(3<%[>F*j[e5qd_>>O*=nTjC>#2PWHCC#J
%aGW=2lMR*5=4Ff[,ZhIN<OfIZ`lPSr;-Je;I9S/7>/I9Q+[_l)GabMGE`m>.8=l[k92^j*cTknfRnfIG0(2MT4YR*rl'9tpV^TRF
%:dq'cp.ZujPVMsn,FfpkgCHJj_tfe:s8V*3q"oR:Nr=lc4oW@VrUE,Orl>'3dk<r`n.,Bahu<D+TDmY"5Q9jGo$]7ArE"LDduXOh
%V_::6nW3UUTDn0R:LF+jb>3WaDu]UU:LF+nTDnA11;])9Idju,rS>6a=+C0Mru5:_n^7~>
%AI9_PrivateDataEnd
