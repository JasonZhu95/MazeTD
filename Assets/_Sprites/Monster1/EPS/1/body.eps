%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: body.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/19/2018
%%BoundingBox: 0 0 371 478
%%HiResBoundingBox: 0 0 370.9762 477.2089
%%CropBox: 0 0 370.9762 477.2089
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 100 128 8%%BeginData: 24780 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD23FFA8A87D7D51522727F8270427F8270427F827042726512751
%2D52527C527D7DA8A8FD3EFFA87D5127F804FD05F826F826F826F826F826
%F826F826F804F826FD09F826F851527DA8FD36FF7D522626F8F8F826F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827F826F827
%F826F804F826277DA8FD30FF7D52FD05F826F826F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F826F826F826F8F8
%F80427A7FD2CFFA82726F827F827F8270427F8270427F8270427F8270427
%F827F827F827F827F8270427F8270427F8270427F8270427F8270427F827
%F826F852A8FD28FF7D27F804F826F826F826F826F826F826F804F826F826
%F826F826F826F826F826F826F826F804F826F826F826F826F826F826F826
%F826F826F826F8267DFD26FF2D26F826F827F826F827F826F827F804F827
%2627F827F826F8272627262D262D262D2627262D26272627F826F827F826
%F827F826F827F826F827F826F80458FD23FF7DF8F8F826F826F826F826F8
%26F804F8274B7575A751F8F826F804F827262D262D262D262D262D262D26
%2D2626F826F826F804F826F804F826F826F826F826F8F852FD21FF7DF826
%F8270427F8270427F827042627A7A6C9A6C9C9A0F8270427F827262D2D7C
%587C517C577C517C2D5127512626F8270427F85176272627F827F8270427
%F827F8F87DFD1FFF52F826F826F826F826F826F826F826F827A0C9A0A67C
%A04B26F826F826F826262751827C7C5882FD047C515127512604F826F826
%F87C514B2627F804F826F826F826F8F87DFD1DFF52F826F827F826F827F8
%260427F826F827F87CA6A051754A512626F827F826F82727517C827C7C58
%82FD047CFD0451F826F827F8044BA74B4B4A4B2626F827F826F827F827A8
%FD1BFF51F826F826F826F8F8F8515127F826F826F8F827C97B514B51264B
%F804F826F804F82D2658577C577C577C587C57FD045127F826F826F8267C
%76264B264B2604F826F826F826F851FD1AFF7CF8270427F8270426F87CA7
%7C2627F827F827F827A0C9517551514B27F8270427F827272D51827CA782
%827C827C825751517C2D26F8270427F87CA0514B514B512627F827F82704
%27F8A8FD18FF7DF804F826F826F804047CA7A6262D2626F826F826F876A6
%7C4B514A4B2604F826F826F827262D577C82A77C7C587C587CFD0451F804
%F826F8F826A75151264B264B2026F826F826F8F804FD18FFF826F826F827
%F80426A7A7A77C51272DF827F826F8264BC97C75515126510426F827F826
%0451277C7CA7A7A65882FD047CFD0451F826F827F8267CA04B512651274B
%F827F826F827F8F852FD16FF27F8F826F826F8F826A6A6A77C7C262D2626
%F826F826F826A0A64B514B4B2627F826F826F826262D2D7C7CA77C7C577C
%587C575151512726F826F826F851A0514B4BF826F826F826F826F826F826
%A8FD14FF8304F8270427F82704A7A7C9A6827C58275126270427F827F87C
%A67C51754B512627F8270427F82D2D517CA7A7A77C827C827C825151517C
%2626F827042626A77551F827F827F8270427F8270427F87DFD14FF52F826
%F826F826F87CA7A7A6A6587C512D2627F826F826F8F851C9754B2626F827
%F826F826F8040451267C7CA7A682577C587C587CFD0451F826F826F8F875
%A02004F826F826F826F826F826F8F8F8FD13FFAEF827F826F827F851FD04
%A77C827C5826512727F827F826F84BA77CF827F826F827F826F827F82726
%515782A6C9827C7C827C7C7C5851515127F826F827F851A027F826F827F8
%26F827F826F827F8F87DFD12FF52F8F826F826F8267CA7A6A77C7C577C51
%2D262D2604F826F804F8A64BF8F826F804F826F826F826F82D265758A6A6
%A7587C577C587CFD04512604F826F826F8A02004F826F826F826F826F826
%F826F827FD12FF52F8270427F82651CEA6C9FD047C51512D512D2DF82704
%27F8277651F8270427F8270427F827F827265151827CCEA7827C827C827C
%7CFD0451F827F827F8267576F827F8270427F8270427F8270427F8A8FD11
%FF0404F826F804F8A6A6A77C7C587CFD045126512626F826F826F8512604
%F826F804F826F826F826F82726515882A6A77C7C577C587C57FD045127F8
%26F826F8517C26F804F826F826F826F826F826F8F852FD10FFA826F826F8
%27F851A6A7A682588251515157515126512626F827F8262751F826F827F8
%4B2627F826F8272651277C7CA7A6A77C7C7C827C7C515151572627F826F8
%2726A651512627F84B2726F827F826F827F827FD10FF7DF826F826F8F851
%A7A6A6577CFD04512D51272D2627F826F826F8267C4BF804F8272626F826
%F826F826262D5182A6A77C7C577C577C58572D515151F826F826F804757C
%4A754B4B264BF804F826F826F826F8A8FD0FFF52260427F8272682A7A77C
%827C7C51515158515127512627F8270427F8A7A0514B754B5126270427F8
%27042D277C7CA7A6A77C7C7C827C82575751575127F827F827F852A07551
%754B514B4BF8270427F82704F852FD0FFF52F826F826F82D7C7C587C7C58
%2DFD05512D2D262DF826F826F8F875A74B514B51264BF826F826F826262D
%5182A6A7A682587C577C7C7CFD04512626F826F82626A04B514B51264B26
%26F826F826F826F827FD0FFF2726F827F82651827C7C7C8251515157FD04
%5127512627F826F827F876A07551754B514B27F827F826F82727517CA7A7
%A7FD057C827C5151575151F827F826F8277C7C4B75514B26512626F827F8
%26F827F8FD0EFFA827F826F826F87C7C7C587CFD04512D5151512D2D262D
%F826F826F8F827A74B514B51264BF804F826F804F82D2D7C7CA7A6A6577C
%587C577C51512D512D26F826F804F87C7C514A51264B2627F826F826F826
%F8F87DFD0DFFA8F826F827F827A0A77C827C7C51515158515151572D5127
%27F827F827F851A07C51754B514B27F8270427F82727517CA7A7A7A6827C
%827C827C7C5158515726270427F82651C95175515126514B27F8270427F8
%27F87CFD0DFF7DF8F826F82626A77C7C587CFD08512D51262D2626F826F8
%2626A651514B51264B2604F826F826F82D517C7CA7A6A77C7C587C577CFD
%055127F826F826F827A0764A754B4B264B2604F826F826F80427FD0DFF7C
%F827F826F851A78258827C57515751515157515127512D27F827F826F827
%A07C4B755151264BF826F827F82626517CA7A6A7A7825882FD047C515151
%582D26F827F826F8A0A0514B754B4B264BF826F827F826F827FD0DFF27F8
%F826F8F851A77C7C577C51512D5151512D51512D262D2626F826F804F8A0
%75514A514A4B2626F826F826F827267C7CA7A0A77C7C577C587CFD0651F8
%04F826F8F851C94B514A51264B2626F826F826F804F8A8FD0BFFA827F827
%0427F8A6A77C7C82585751585151515851512D512D51F8270427F8277CA0
%4B75515127512627F8270426265158A7A6C9A7A77C827C827C7C51515158
%5127F8270427F852C97C4B7551514B512627F8270427F8267DFD0BFFA8F8
%26F826F826A0A7587C57FD0B5126512626F826F826F87C7C514B754B4B26
%27F826F826F82626587CA7A6A77C7C577C587C5857FD045126F8F826F8F8
%26C97C514B4B26272627F826F826F826F87DFD0BFF5204F826F82627C9FD
%047C51575151515751515157512D26512626F827F80451A04B754B754B4B
%2627F826F827262D51A7A7A7A6A77C7C7C827C8257FD0551F826F827F827
%A0C95127F827F8272627F826F827F8F852FD0BFF27F826F826F87CA67C57
%7C51512D5151512D5151512D51262D2626F826F826F8517C514B514A4B26
%26F826F826F82626517CA7A6A77C7C577C577C587C2D5151512626F826F8
%26F87CA04BF804F826F826F826F826F826F852FD0AFFA8F8270427F8277C
%A77C827C7C51585151515851515158515127512627F827042651A051754B
%754B5126270427F82726512DA7A7A7A6A77C7C7C827C827C7C5151515726
%27F827F82651C92626F8270427F8270427F827042627FD0AFF7CF8F826F8
%F826A7827C577CFD0C512D2D2627F826F826F8517C514B514B512627F826
%F826F826262D7CA7A6A7A682587C577C587CFD055127F826F826F851A027
%F826F826F826F826F826F826F827FD0AFF52F826F827F851A7A7FD047C51
%51515751515157515151572D512627F826F82651A04B514B514B512626F8
%27F826F8512D82A6A7A6A7FD057C827C7C515751572627F826F82627A726
%27F826F827F827F827F826F82626FD09FFCFF826F826F8047BA77C7C587C
%FD04512D5151512D5151512D2D2626F826F826F8517C4BF826F826264BF8
%04F826F826262D7CA7A0A7A682577C587C577C51512D515127F826F826F8
%27A051F826F826F8262626F826F826F827A8FD08FF7D26F827F82726A7A7
%A77C827C7C5151515851515158FD04512D5126270427F82751A0F8270427
%F8272727F8270427F8512DA6A6C9A7A77C827C827C7C5151515851572727
%F827F82726A77C27F827F827044B26270427F82704FD09FF52F826F826F8
%51A6A77C7C587CFD0C512D2D2727F826F826F85151F8F826F826F84BF826
%F826F82626517CA7A6A7A682577C587CFD0851F826F826F8267CC94B26F8
%04F8274A27F826F826F827A8FD08FF2626F827F80451CEA67C58827C7C51
%575151515751515157515126512626F827F8264B7CF826F827F8262627F8
%26F827F82751A7A7A7A6C97C7C7C827C7C5157515151575127F827F826F8
%7CA77C4B51264B26512626F827F826F8A8FD07FF7DF8F826F826F87CA6A7
%577C577C51512D5151512D5151512D51272D2627F826F826F8517526F826
%F826F84BF826F826F82626517CA7A6A7A6A6577C577C58572D5151512D51
%F804F826F8F851C951514B51264B2627F804F826F8F87DFD07FF7DF827F8
%27F827A6CE827C7C827C7C51585151515851515158515127512626F82704
%2627A72626F827044B4B27F827F827F8515182A7A7A6CE7C7C7C827C8251
%57515151585127F8270427F852A77C4B754B4B27512727F8270427F87DFD
%07FF2704F826F8F851A7A6A6587C577CFD0C512D2D2627F826F826F8517C
%75262726514B4BF826F826F826265158A7A6A7A682587C577C7C7C2DFD05
%5126F8F826F8F826C975514B51264B264BF826F826F8F827FD06FFA827F8
%27F826F87CA7A7FD047C58575151515751515157FD045127512627F826F8
%2651A04B7551754B754B27F827F826F851517CA6A7A6A7FD057C82585151
%57FD0451F826F827F84BA07C4B754B514B4B2627F826F827F827FD06FFA8
%F804F826F8267CA7A67C577C587C2D5151512D5151512D515151262D2626
%F826F826F851A0514A514B514A4BF804F826F804265157A7A6A7A67C577C
%587C577C51512D5151512626F826F80426A675514B4B264B2627F826F826
%F826F8FD06FF7DF8F827042626A7A7A77C827C8257575151515851515158
%FD04512D5126270427F82651A64B75517551754B27F8270427F851517CA6
%C9A7A77C827C827C827C575158FD0451F827F827F827A0A04B754B514B51
%2627F827F827F827A8FD05FF52F826F826F851A6A7A67C577C7C572DFD0B
%5126512626F826F826F876A0514B514B514A4BF826F826F804265758A7A6
%A7A67C577C587C587CFD06512626F826F826F8A075514B51264B264BF826
%F826F826F8A7FD05FF2726F826F82651CEA6A77C7C7C8251515157515151
%5751515157515126512626F827F80451A751754B7551512627F826F827F8
%2D5182A6A7A6A77C7C7C827C7C5857515151575151F827F826F827A0A04B
%754B4B26512726F827F826F8047DFD04FFA826F826F804F87CA6A77C7C58
%7C575151512D5151512DFD0551262D2626F826F826F87C7C514B514A514A
%27F826F826F826265757A6A6A77C7C587C577C587C2D5151512D512D26F8
%26F804F87C7B514A51264B264BF804F826F826F87DFD04FFA8F8270427F8
%277CC9A6A77C827C7C5151515851515158515151582D5127510427F827F8
%267CA751754B7551512627F827F827F851578282C9A6A77C827C827C8257
%58515151585151F8270427F8277CA04B754B4B27512727F8270427F82652
%FD04FF7DF8F826F80404A7A6A77C7C587CFD0E51262D2626F826F826F87C
%7C514B514B754B27F826F826F826277C57A6A6A77C7C587C577C7C7C2DFD
%065126F826F826F87CA0514B51264B264BF826F826F826F852FD04FF7DF8
%26F827F851A6C9A67C58827C5851575151515751515157515127512D2DF8
%27F826F827A0A04B7551754B512626F827F826F8517C7C7CA7A78258827C
%7C7C8257515157FD04512626F827F80475C951752627264B2627F826F827
%F8042DFD04FF52F8F826F8F82DA7A6A6577C577C51512D5151512D515151
%2D512D2D26512604F826F8F8F8A77B514A514B512627F826F826F8262D7C
%587CA6A7587C577C587C57582D512D5151512D27F826F826F876A0752004
%F826F826F826F826F826F827FD04FF7CF827F827F87CA7CE7C7C7C827C57
%51585151515851515158515127512D27F8270427F851A7A04B7551754B51
%2627F827042626587C827CCE827C7C827C827C8251515158515151582627
%F827F82675C92726F8270427F8270427F827042627FD04FF2704F826F804
%51A77C7C587C587CFD0C51262D26510404F826F8F827C975514B754B4B26
%27F826F826F827517C7CA7A6A6587C577C587C57FD085127F826F826F87C
%7C26F826F826F826F826F826F826F827FD04FF51F827F826F87CA77C5882
%7C82FD0551575151515751512D5127512627F826F827F851C97C4B514B75
%4B4BF827F826F827265758A7A7A7FD057C827C7C51575151515751510427
%F826F82676A0F827F826F827F826F827F826F82627FD04FF26F8F826F8F8
%7BA7587C577C58572D5151512D5151512D51512D262D2627F826F826F8F8
%75A62604F826204B2626F826F804F82D517C7CA7A6A6577C587C577C5151
%2D5151512D515126F826F804F87C7C04F826F826F826F826F826F826F827
%FD04FF27F8270427F8A0A7827C827C7C5157515151585151515851512751
%2D512627F827F827F8A04B260427F827264BF8270427F8272D7C7CC9A7A7
%A6827C827C827C7C515851515158515126270427F82775C94B26F827F827
%2627F8270427F82627FD04FFF826F826F8267CA7587C577C57FD0B512D2D
%262D2627F826F826F8277C26F826F826F8272604F826F826F8515182A6A7
%A6A6577C587C577CFD095126F826F826F87CA6A62626F826F84BF804F826
%F826F827FD04FF27F826F82704A6A682FD047C5151515751515157FD0451
%275126512626F827F82627A0F826F827F826F827F826F827F8272D7C82A7
%A6C9A67C58827C7C585751515157515151572626F827F82651C9A776264B
%274B2627F826F827F82627FD04FFF826F826F8267CA7577C587CFD04512D
%5151512D515151262D26272626F826F826F851A026F826F826F826F826F8
%26F826045157A7A6A7A6A7577C577C58582D5151512D5151512D26F826F8
%26F876A0C9754B264B264BF826F826F826F851FD04FF270427F82704A7A6
%827C827C7C5151515851515158515751512D5126510427F827F82651CE51
%04F827F8272627F827F827F82D5782A6A7A6CE827C7C827C825157515151
%58515151572627F827F82675C9A6A627514B514B27F827F827042651FD04
%FFF826F826F8267CA7587C587CFD0C51262D26272626F826F826F87CA07C
%2626F8272627F826F826F826267C57A7A6A7A682587C577C58FD09512D26
%F826F826F87CA0C97527264B264B2626F826F826F851FD04FF26F827F826
%F8A7A77C58827C5151575151515751515157515126512727F827F826F827
%A0A75175515126512626F827F826F8517C7C7CC9A7A77C82FD047C515151
%57515151575151F827F826F8277CC9A051274B26514B4BF827F826F82626
%FD04FFF826F826F8267CA7587C577C51512D5151512D5151512D51262726
%2DF804F826F8F826C97C514A51264B2626F826F826F826517C577CA6A77C
%7C577C587CFD04512D5151512D512726F826F804F8A0A67C264B264B264B
%2626F826F826F8F87DFFFFFF27F8270427F8A6A67C7C8257515158515151
%5851515158515126512727F8270427F87CC9A04B75FD044BF827F827F827
%267C7C827CA77C7C7C827C827C7C51515158515151585151F8270427F827
%A0C9754B4B5127514B5126270427F827F852FFFFFFF826F826F804518258
%7C587CFD0C5126272627F826F826F8267CC951514B4B264BF826F826F826
%F82D577C587C577C587C577C587C5858FD08512704F826F804F8A7A67626
%4B264B264B2626F826F826F826F8A8FFFF27F826F827F8587C827C7C5857
%515151575151515751512D51272D0427F826F82626C9A075515126512726
%F827F826F827517C7C827C7C7C827C7C7C827C82FD055157FD0451F826F8
%27F827A0A64B4B26512727F827F826F827F826F8047CFFFF2626F826F826
%277C587C587CFD04512D5151512D515151262D2626F826F826F851A67C4A
%514A4B2627F826F826F8042651577C577C587C577C587C577C587C2D5151
%512D5151512604F826F80426A64B4B2627F826F804F826F826F826F826F8
%27FFFF2DF827F827042626587C827C7C515151585157515851572D512727
%F8270427F8277CC95175515127512627F82704270451517C7C827C827C82
%7C827C827C827C7C5151515851575151F827F827F851A0512627F827F827
%F8270427F8270427F827F8A8FF2626F826F826F8F8F827517C2751262D26
%512D512D51512D262D0404F826F8F826C97C514A51264B2626F826F826F8
%272D51577C577C587C577C7C7C577C587CFD08512626F826F8262651F826
%F826F826F826F826F826F826F826F8F852FF52F827F826F827F826F82626
%2726512D512651275127512D512627F826F827F851A6754B4B26514B27F8
%27F826F82727587C827C827C827C7C587C7C827C827C7C515751512D512D
%27F827F826F827F826F827F826F827F826F8272626F827F826F852FF27F8
%F826F826F826F826F826F804F8272627262D262D262D2626F826F826F826
%7C76264B264B2627F826F826F8F804515158515851512D51262D262D2D7C
%577C51512651262D2627F804F826F826F826F826F826F826F826F826204B
%F804F826F8F8F8FF52F8270427F8270427F8270427F827F827F827262726
%2D272D04270427F82727A026514B5127512627F8270427F8512D51275127
%5127512D5127512D2D2D58272D26272627F827F827F8270427F8270427F8
%270427F827262726514B27F8270427F827A8F826F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F8272626F827F826F826F826
%F826F826F82704260427262604272626F827F826F826F804F826F826F826
%F826F826F826F826F826F826F826264B264B264B2604F826F826F8A827F8
%26F827F827F826F826F827F826F827F826F827F826F827F826F827F826F8
%27F826F827F826F827F826F827F826F827F826F827F826F827F826F827F8
%26F827F826F827F826F827F826F827F826F827F827264B4B4B26514B4B26
%4BF826F827F8F87DF826F826F80426A04B26F8F8F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F804F8F8F826F827
%264B264B264B264B264B2626F826F826F87D270427F827F851A7C9A07C27
%27F826F827F827F8270427F8270427F8270427F8270427F8270427F82704
%27F8270427F8270427F8270427F8270427F8270427F8270427F827F827F8
%27F826F851515126514B5127514B5127514B514B510427F82704F87C2626
%F826F80475C9A0C9A6A77C7C2727F826F8F8F826F804F826F826F826F826
%F826F826F826F826F826F826F826F826F826F826F826F826F826F826F826
%F804F826F8F8F804F826265175A0A0A0264B264B264B264B264B264B264B
%2626F826F826F85227F827F826F87CA7A7A0C9A6C9A6C9A0A07576514B26
%270426F827F826F826F826F826F826F826F826F826F826F804F804F826F8
%04F826F804F804F804F827F8272651517675A0A0C9A6C9A07C264B4B4B26
%514B4B26514B4B26514B4BF827F826F8265227F8F826F8F851C9A0A6A0A7
%A0A6A0A7A0A7A0C9A0A07CA07C7C757C5176517C5176517C5176517C5176
%517C5176FD045127514B5127514BFD04517C757C7CA07CA0A0A07B7C7575
%4B51264B264B264B264B264B264B264B264B2626F826F826F87D52F82704
%27F852A7C9A0C9A6C9A0C9A6C9A0C9A6C9A0C9A6C9A6C9A7C9A6C9A7C9A6
%C9A7C9A6C9A7C9A6C9A7C9A6C9C9C9A7C9C9C9A7C9C9C9A7C9C9C9757C75
%75517551754B754B514B75515126514B5127514B5127514B5127514B5120
%270427F8047D52F8F826F8F827C9A0A6A0A7A0A07CA7A0A7A0A7A0A6A0A7
%A0A6A0A7A0A6A0A7A0A6A0A7A0A6A0A7A0A6A0A7A0A7A0A67C7C757C757C
%757C757C75754B514A514B4B26514B514B514B514B51264B264B264B264B
%264B264B264B264B2626F826F826F87D7DF826F827F84BA0C9A0A7A0C9A0
%7C4B7C7CA6A0C9A6A7A0C9A6C9A0C9A6A7A0C9A6A7A0C9A0A7A0C9A6A7A0
%C9A0A051754B514B514B514B514B514B7551754B75274B4B7551754B7551
%5126514B4B26514B4B26514B4B26514B4B2627F826F827F8F87D7CF8F826
%F80426A6A0A7A0A6A0A7A07C4A4B4B7551755151517C7CA0A0A6A0A07CA0
%A0A6A0A7A0A6A0A7A0A075754A514A514B514A514B514A514B51264B4B51
%4A4B26514A514B514A51264B264B264B264B264B264B264B264B2626F826
%F826F826F87DA8F826F827F827A0C9A6C9A0C9A6C9A6A775514B754B514B
%754B755175517551755175517C757C757C75754B754B754B7551754B7551
%754B7551754B514B7551755175517551754B514B4B27514B5127514B5127
%514B514B512627F8270427F827F8267DA826F826F826F82775C9A0A6A0A7
%A0A6A0C97C754A5175A075514B514A514B514B514B514A514B514A514B51
%4B754B514B514B514B514B514B514B514A514B514B514B514B51264B264B
%264B264B264B264B264B264B2626F826F826F826F826F826F8A8FF0426F8
%26F827F82627A0A6C9A0C9A0A7A0C9A07C4BA7C9A04B7551514B7551754B
%7551754B7551754B754B76A0A6A0A7517551754B7551754B7551514B7551
%754B7551754A4B4B4B26514B4B26514B4B26514B4B2627F826F827F826F8
%27F826F826A8FF27F826F826F826F8F8F8517CA7A0A7A0A6A0A7A07651A0
%75514A5151754A514B514A514B7551514B514A5151A67CA0A0754A514B51
%4A514B514A514A514A514B514A51264B264B264B264B264B264B264B2627
%F804F826F826F826F826F826F804F8A8FF51260427F8270427F827F8274B
%A0A6C9A0C9A6C9A67C4B754B7575C9A07C51754B75515176A04B754B7551
%75517551754B7551754B7551754B7551754B75517551754B4B27514B5127
%514B5127514B4B2627F827F8270427F8270427F8270427F827A8FF7CF826
%F826F826F826F826F8F8F85175A6A0C9A0A775514B514A75A0A7A0A77551
%4B514B514B514B514B514B514A514B514B514B514B514B514B754B514B51
%4B51264B264B264B264B264B264B2627F804F826F826F826F826F826F826
%F826F804F8A8FF7D04F827F826F827F826F827F826F82626767CC9A7A77C
%764B514B76A0C9A6A64B754B7551754B7551514B7551754B7551757CA051
%754B7551754B514B5126514B4B26514B4B26514B4B264B2626F827F826F8
%27F826F827F827F827F826F827F827FFFFA8F804F826F826F826F826F826
%F826F804F826267C7CC9A0A051514A7CA0A775514B514A514B5151A07B51
%4A514B514A514BA6A0514B514A4B264B264B264B264B264B264B264B2627
%2026F826F826F826F826F826F804F8272626F826F826F8267DFFFFFF27F8
%270427F827F826F8270427F8270427F827F827277CA0A75175517C757551
%754B75517551C9A7C97C7551755175517551754B5127514B4B27514B5127
%514B514B514B4B2627F827F8270427F8270427F827F8272651272DF82704
%27F8267DFD04FF51F8F826F8F8267C26F8F826F826F826F826F826F8F8F8
%26264B264B264B264B264B26514A517CA7A07C4A514B514A51264B264B26
%4B264B264B264B264B264B2627F826F804F826F826F826F826F826F804F8
%27262D262D2626F826F804F8A8FD04FF7DF826F827F827A6A75127F826F8
%26F827F826F827F826F826F826F8272627264B274B26514B4B4B514B4B26
%514B4B26514B4B26514B4B26514B4B264B2627F827F826F827F826F827F8
%26F827F826F827262D2651272D2627F826F827F827FD05FFA826F826F826
%F87CA6A77C512626F8F8F826F826F826F826F826F804F826F804F826F826
%F827262620272627264B2627264B262720272626F826F826F826F804F826
%F826F826F826F826F804F826F827262D2627262D2627F826F826F8F827FD
%06FF2726F827042627CEA7A77C8258512627F826F8270427F8270427F827
%0427F827F827F827F827F827F827F8270427F8270427F827F827F827F827
%F8270427F8270427F8270427F827F827F82726512751272D265127512627
%F827F827F87DFD06FF7DF826F826F8267CA7A67C57827C7C51510404F826
%F826F826F826F826F826F826F826F826F826F826F826F826F826F826F826
%F826F826F826F826F826F826F826F826F826F804F8272627262D2627262D
%2627262D2627F826F826F8047DFD06FFA826F826F827F87CA7C9827C7C82
%7C827C7C51512627F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F827F826F827F826F827F826F827262D2651
%272D2651272D2651272D26512626F827F826F8FD08FF27F8F826F80426A7
%A6A77C7C577C587C57827C5126512626F826F8F8F826F804F826F826F826
%F826F826F826F826F826F826F826F826F826F826F804F826F826F8272627
%262D2627262D2627262D2627262D26272626F826F826F82DFD08FF7DF827
%F827F8267BCEA7A758827C7C577C7C7C5158515751512D5126270427F827
%F826F827F827F827F827F827F827F827F827F827F827F827F82704272627
%265127512651272D2651275127512D512651272D272DF827F82704F87CFD
%08FFA827F826F826F827A6A7A67C577C57FD0F51272D26272626F827F826
%F826F826F826F826F826F826F827042604272627262D262D262D262D2651
%262D2651262D26512627262D262DF826F826F826F8A8FD09FF5204F826F8
%27F87CA7C9A67C58825151515751515157515151575151515851575157FD
%06512D5151512651272D2651272D2651272D265127512651275126512D51
%26512751265127512651272D26512626F827F826F851FD0AFFA8F826F826
%F826F8A6A6A77C7C577C51512D5151512D5151512D5151512D5151512D51
%51512D512D512651262D262D262D262D262D262D262D262D262D262D262D
%262D262D262D262D262D262D262D26272626F826F826F8F852FD0BFF7DF8
%27F827042627CEA7A77C827C7C5158515151585151515851515158515151
%5851515158515127512D5127512D5127512D5127512D512D5151512D512D
%5127512D5127512D5127512D512651272D272DF827F827042604FD0CFFA8
%27F826F826F8F827C9A67C577C58512DFD1551272D262D262D2651262D26
%51272D265127FD05512D51262D2651262D2651262D26512627262D2627F8
%26F826F826F852FD0DFF7D04F826F827F80451CE827C7C82585151575151
%51575151515751515157515151575151515751512DFD0451575151515751
%5151575151515751575151275126512751265127512651272D26512626F8
%27F826F827A8FD0EFF27F8F826F826F8F82782587C577C51512D5151512D
%5151512D5151512D5151512D5151512DFD07512D5151512D5151512D5151
%512D512D51262D262D262D262D262D262D262D2627F826F826F826F8F852
%FD10FF2726F8270427F826267C7C827C8257585157515851515158515151
%58515151585151515851515158515151585151515851515158FD04512751
%27512D5127512D5127512D512651272D04270427F827042627FD11FFA8F8
%F8F826F826F826F8515882515751512D512DFD2351272D262D2651262D26
%51262D262D26272627F804F826F826F826F8A8FD12FFA8F804F827F826F8
%27F82D515127512651275127FD0451575151515751515157515151575151
%51575151515751515157FD065126512751265127512651272D26512727F8
%27F826F827F826F87DFD14FFA8F8F8F826F826F826F8F8F82D262D262D26
%2D262D2651275151512D5151512D5151512D5151512D5151512D5151512D
%51272D262D262D262D262D262D262D262D2627F826F804F826F826F826F8
%52FD17FF2704F827F8270427F827042726512D5127512D5127512D512DFD
%04515851575158515751585157515751512D51275127512D5127512D5127
%512D5126512627F827F827F8270427F827F852FD19FF51F8F826F826F826
%F826F826F827262D2651262D262D262D2651262D265127512D5151512D51
%272D262D262D2651262D2651262D2651262D262D2626F826F826F826F826
%F826F8F8F852FD1BFF7D27F826F827F826F827F826F827262726512D5127
%512D51265127512651275127512751265127512651275126512D5127512D
%51262D2627F827F826F827F826F827F826F826F87DFD1DFFA852F8F8F826
%F826F826F826F826F826F8272627262D262D262D262D262D262D262D262D
%262D262D262D262D262D26270427F826F826F804F826F826F826F826F826
%F8F827A8FD20FFA82726F827F8270427F8270427F827F827F82726272651
%275127512D5127512D512D512D512751272D26272627F827F827F8270427
%F8270427F8270427F826F8517DFD24FF7D51F8F8F826F826F826F826F826
%F826F826F826F8270426042726272627262704270426F826F826F826F826
%F826F826F826F826F826F826F826F80427A8FD28FFA85226F826F826F827
%F826F827F826F827F826F827F826F827F826F827F826F827F826F827F826
%F827F826F827F826F827F826F826F826277DA8FD2CFFA87D26FD04F826F8
%26F826F826F826F826F826F826F826F826F826F826F826F826F826F826F8
%26F826F826F804FD04F804527DFD32FFA87C2726F826F8270427F8270427
%F8270427F8270427F8270427F8270427F8270427F8270427F827F804F827
%277DA7FD38FF7D7D2726F8F8F804F826F826F826F826F826F826F826F826
%F826F826F826F804FD05F82D527DA8FD3EFFA8A852522626F8F8F826F827
%F826F827F826F827F826F826F8F8F8272651527D7DFD48FFA87D52522727
%F826F826F826F804F8272751277C7CA7A8FD26FFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-19T10:52:36+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-19T10:52:36+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-19T10:52:36+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>200</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAADIAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXnvn&#xA;D8+vyw8rM8N3qy3t8lQ1lp4FzICOoZlIiQ+zuDkTMBXkXmH/AJzIvGZ08ueXo41B+C41GVpCR2rD&#xA;D6dP+RpyByK881f/AJyV/ODUSwXWFsYmr+6tLeFKfJ2V5P8AhsjxlWJ3/wCZf5h6hX655m1SZWqD&#xA;GbucJvsfgDBfwwcRQklzquqXXL6zeTz86BvVkd606V5E4FQuBXYqujkeNw8bFHXdWU0I+RGFUZDr&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:e7890f50-c8ec-344c-89d0-68bce713a96a</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:e7890f50-c8ec-344c-89d0-68bce713a96a</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:d741fa58-aad3-c54f-a3ac-601ad698f002</stRef:instanceID>
            <stRef:documentID>xmp.did:d741fa58-aad3-c54f-a3ac-601ad698f002</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:68cf48fb-65ae-d247-abc7-767cb7648306</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:45:03+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:d741fa58-aad3-c54f-a3ac-601ad698f002</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:54:39+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:e7890f50-c8ec-344c-89d0-68bce713a96a</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:52:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>370.976146</stDim:w>
            <stDim:h>477.208820</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -477.209 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 477.209 li
370.976 477.209 li
370.976 0 li
cp
clp
350.222 299.079 mo
349.872 290.135 347.683 282.398 343.071 276.491 cv
344.049 236.266 341.562 195.947 338.831 155.811 cv
336.094 115.582 330.684 70.1972 300.509 40.2973 cv
270.671 10.7314 216.988 14.5517 178.218 17.9023 cv
153.538 20.0351 127.013 23.1479 103.002 28.2333 cv
86.0976 31.8154 75.413 38.1362 66.3662 53.185 cv
66.3515 53.2094 66.3437 53.2348 66.3291 53.2592 cv
47.1064 70.4325 38.5917 103.034 34.748 132.747 cv
34.6171 132.934 34.4619 133.088 34.3369 133.283 cv
19.164 157.222 18.4384 183.911 17.6943 211.629 cv
17.0361 236.058 15.3203 262.476 20.0253 286.986 cv
17.5332 289.717 16.0263 293.257 16.3554 297.414 cv
20.0419 343.697 31.3906 408.625 73.6689 436.193 cv
96.5595 451.119 126.352 456.248 157.174 456.08 cv
206.69 470.928 261.937 463.96 303.395 431.217 cv
303.67 431 303.864 430.765 304.113 430.542 cv
310.079 427.455 315.857 424.17 321.306 421.153 cv
338.316 411.734 344.209 403.484 348.118 384.058 cv
350.923 370.13 357.604 326.967 350.222 299.079 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.388235 .427451 .203922 rgb
f
106.032 32.06 mo
104.32 21.0151 90.622 20.7719 83.7714 26.1826 cv
80.0361 29.1318 78.3466 31.4003 75.6113 35.2778 cv
74.7587 36.4872 74.3378 37.9457 74.0986 39.456 cv
59.5253 48.3647 49.9462 65.3119 43.6777 80.6591 cv
42.9667 82.3959 42.2167 84.2807 41.4599 86.2294 cv
38.7001 91.5165 36.3671 97.0419 34.7705 102.954 cv
34.2099 105.034 34.1142 106.944 34.374 108.671 cv
32.082 119.011 31.4843 129.527 34.8847 138.084 cv
34.8251 138.329 34.7744 138.574 34.7148 138.819 cv
34.3291 139.43 33.9628 140.077 33.7578 140.934 cv
32.1884 147.402 30.3154 153.914 28.332 160.449 cv
24.4189 167.64 22.4394 176.148 20.8535 184.585 cv
16.8662 197.643 13.2451 210.741 11.4091 223.776 cv
10.4931 230.267 11.4345 236.923 14.8916 241.373 cv
14.9238 241.701 14.955 242.028 14.9912 242.359 cv
14.998 248.259 15.1572 254.178 15.5087 260.134 cv
15.7089 263.535 17.1562 266.367 19.2089 268.551 cv
19.1259 269.907 19.0234 271.268 18.9482 272.615 cv
18.6474 278.073 22.4804 281.118 26.8251 281.672 cv
27.289 282.026 27.6816 282.455 28.1748 282.772 cv
31.4316 284.872 35.915 284.657 39.1904 282.772 cv
46.8779 278.349 48.1064 269.164 43.6376 261.899 cv
43.2382 261.248 42.7382 260.653 42.2041 260.093 cv
42.458 258.823 42.4658 257.598 42.5068 256.366 cv
46.4794 235.017 51.1796 213.842 55.1679 192.482 cv
58.6562 173.806 65.9101 151.77 59.6708 133.366 cv
60.8056 129.79 62.0957 126.069 63.3564 122.324 cv
68.1084 121.752 69.0732 115.855 66.2128 113.101 cv
67.1435 109.781 67.9589 106.487 68.3964 103.312 cv
71.9453 96.1557 75.789 89.1542 80.2529 82.5204 cv
84.3105 76.4902 89.8515 71.2265 93.3964 64.895 cv
93.9101 63.9755 94.8789 62.1059 95.6543 60.2324 cv
99.8369 59.9448 103.935 57.4301 105.433 52.7319 cv
107.747 45.4687 107.183 39.4711 106.032 32.06 cv
cp
.54902 .635294 .364706 rgb
f
90.0459 422.575 mo
86.8828 419.294 83.7099 416.055 80.5429 412.81 cv
79.7705 409.343 77.3759 406.754 74.708 404.361 cv
73.0419 399.195 70.6084 394.342 68.2714 389.434 cv
71.664 390.169 75.0878 390.635 78.5029 390.762 cv
85.4726 391.021 89.0234 380.059 82.2275 377.018 cv
81.6386 376.755 81.0459 376.536 80.4589 376.283 cv
80.4609 376.28 80.4628 376.276 80.4648 376.274 cv
80.4179 376.256 80.3691 376.244 80.3203 376.226 cv
72.8681 373.023 65.3505 370.451 57.9511 367.251 cv
57.3457 366.324 56.8017 365.383 56.0781 364.481 cv
54.4199 362.413 51.7802 361.695 49.1513 361.759 cv
48.7138 361.509 48.2089 361.484 47.7363 361.343 cv
46.0439 358.884 44.2246 356.539 42.1142 354.474 cv
35.9462 348.436 25.165 352.841 25.1103 361.518 cv
25.1083 361.894 25.1708 362.282 25.1796 362.66 cv
23.3212 364.461 22.3134 367.07 23.2412 370.002 cv
30.7998 393.882 47.3261 425.01 72.8164 433.669 cv
73.8144 434.716 74.7138 435.858 75.7509 436.868 cv
78.9648 439.992 84.0966 440.74 88.0009 438.448 cv
89.6367 437.487 90.6982 436.489 91.6259 434.823 cv
93.8486 430.83 93.2109 425.86 90.0459 422.575 cv
cp
f
247.488 138.283 mo
245.417 131.501 242.988 125.033 240.388 118.732 cv
238.384 85.5712 229.969 53.4907 208.115 26.8647 cv
206.036 24.3315 202.871 24.7363 200.661 26.4496 cv
200.099 25.0829 199.405 23.8715 198.495 22.9618 cv
198.279 22.5571 198.103 22.1284 197.887 21.7255 cv
191.593 10.08 175.495 18.5014 177.653 30.2543 cv
177.724 30.6298 177.819 30.9946 177.891 31.3705 cv
177.766 32.5986 177.756 33.8793 178.027 35.2607 cv
179.143 40.9462 180.704 46.3461 182.518 51.6454 cv
185.744 64.0351 189.555 76.2377 193.675 88.4887 cv
194.979 92.3642 196.222 96.3251 197.492 100.282 cv
198.489 126.156 199.283 152.395 202.458 178.103 cv
199.818 191.46 198.001 205.473 197.966 219.273 cv
197.604 220.99 197.302 222.713 196.911 224.428 cv
193.611 238.877 185.995 253.478 186.997 268.272 cv
187.144 270.451 188.171 272.275 189.61 273.61 cv
189.136 273.752 188.665 273.84 188.186 274.034 cv
183.099 276.097 179.408 280.296 180.287 286.134 cv
180.852 289.888 183.564 293.692 187.23 295.13 cv
190.654 297.977 195.522 298.282 199.306 296.06 cv
207.771 298.127 219.391 293.547 228.084 293.975 cv
234.853 294.308 239.04 288.344 239.705 282.353 cv
240.092 278.881 240.126 275.88 239.829 272.398 cv
239.601 269.754 238.63 267.769 237.404 266.099 cv
236.74 263.146 236.027 260.206 235.194 257.275 cv
234.734 255.66 233.878 254.255 232.782 253.101 cv
233.328 250.225 233.902 247.347 234.379 244.471 cv
243.502 216.772 248.961 186.824 242.721 159.994 cv
242.287 158.131 241.386 156.847 240.287 155.923 cv
240.392 154.037 240.535 152.158 240.614 150.269 cv
245.534 149.093 249.459 144.728 247.488 138.283 cv
cp
f
333.655 346.612 mo
333.634 346.533 333.612 346.455 333.592 346.378 cv
333.181 346.685 332.79 347.057 332.385 347.379 cv
332.258 347.471 332.107 347.52 331.984 347.62 cv
331.844 347.732 331.756 347.894 331.622 348.011 cv
328.341 350.699 325.243 353.84 322.547 357.342 cv
322.285 357.471 322.021 357.612 321.758 357.744 cv
319.305 355.593 315.984 354.386 312.328 355.158 cv
302.22 357.293 293.394 361.652 285.012 367.017 cv
280.385 368.803 275.772 370.613 271.031 372.168 cv
267.279 373.399 265.133 376.023 264.251 378.997 cv
248.629 379.357 231.993 381.655 219.665 389.435 cv
208.639 390.562 197.645 392.045 186.7 393.719 cv
183.849 394.155 182.448 396.391 182.19 398.863 cv
177.176 399.169 172.261 399.628 167.705 400.344 cv
162.134 401.22 163.764 408.436 167.705 410.087 cv
174.004 412.725 182.11 411.524 189.915 409.874 cv
193.544 409.725 197.173 409.582 200.811 409.538 cv
210.075 409.425 218.82 410.215 227.89 408.081 cv
229.787 407.634 229.817 405.507 228.685 404.37 cv
233.702 404.272 238.727 404.24 243.745 404.178 cv
244.639 406.447 246.605 408.125 249.651 407.738 cv
250.923 407.576 252.175 407.353 253.44 407.178 cv
253.377 407.381 253.258 407.573 253.209 407.778 cv
252.526 410.649 253.295 412.986 254.916 414.655 cv
251.123 415.457 247.301 416.245 243.395 417.11 cv
238.844 418.119 239.599 423.435 242.829 425.257 cv
237.47 426.894 232.029 428.917 226.387 430.422 cv
209.871 434.828 193.894 438.606 177.312 440.939 cv
165.282 435.696 147.656 436.93 136.179 434.143 cv
123.239 430.998 105.118 419.798 92.0615 425.433 cv
91.1093 424.985 90.1503 424.611 89.2031 424.139 cv
82.6054 420.85 77.1425 430.037 83.4052 434.058 cv
86.5419 436.071 89.7109 437.867 92.9003 439.542 cv
101.602 450.268 121.434 454.982 132.915 457.733 cv
143.665 460.309 160.165 464.433 172.845 461.554 cv
183.763 462.835 194.513 462.978 204.337 461.247 cv
217.48 461.101 230.29 459.03 241.812 452.946 cv
241.868 452.917 241.88 452.848 241.934 452.813 cv
252.653 450.938 263.14 447.882 270.397 440.609 cv
275.38 439.762 280.42 438.92 285.58 437.968 cv
299.223 435.447 316.893 432.419 321.227 417.319 cv
321.862 415.102 321.582 412.618 320.707 410.404 cv
321.44 409.773 322.171 409.137 322.859 408.418 cv
323.409 408.048 323.966 407.717 324.506 407.308 cv
326.926 405.474 328.159 403.113 328.602 400.672 cv
331.539 395.777 333.919 390.198 335.843 384.614 cv
339.253 379.079 341.837 373.34 343.804 366.998 cv
344.098 366.05 344.121 365.019 344.032 363.99 cv
344.893 360.415 345.417 356.776 345.54 353.234 cv
345.774 346.498 338.711 344.138 333.655 346.612 cv
cp
.258824 .317647 .137255 rgb
f
124.67 164.609 mo
124.184 153.804 127.598 138.898 118.448 131.496 cv
118.216 131.309 117.966 131.264 117.725 131.126 cv
118.236 121.01 115.433 110.744 113.178 100.648 cv
113.365 100.304 113.67 100.094 113.756 99.6445 cv
115.958 88.1244 114.825 78.3886 111.029 67.3032 cv
107.633 57.3871 103.693 45.9125 96.0078 38.5673 cv
95.9609 38.6821 95.9121 38.7963 95.8662 38.9101 cv
93.6279 36.8554 89.5839 36.4164 89.0048 41.4687 cv
87.8505 51.5126 91.3212 62.3574 93.6386 72.0966 cv
95.0449 78.0024 96.7128 83.31 98.9472 88.4037 cv
99.3466 91.1064 99.7168 93.7963 99.9785 96.4511 cv
101.519 112.112 99.6855 129.086 108.435 142.715 cv
108.541 142.881 108.715 142.923 108.837 143.067 cv
106.083 154.63 106.055 166.151 106.666 177.812 cv
103.2 186.738 101.783 196.597 100.902 206.603 cv
89.038 223.695 89.5507 254.564 85.7099 276.282 cv
83.3584 275.814 80.9462 275.606 79.1503 275.46 cv
74.2519 275.059 69.0996 274.016 63.9355 273.193 cv
59.6679 271.993 55.3359 270.998 51.1035 271.478 cv
50.206 271.58 49.4658 271.92 48.8095 272.333 cv
48.0029 272.414 47.1923 272.467 46.3994 272.61 cv
44.5146 272.952 43.3964 275.663 44.5224 277.225 cv
49.5292 284.173 57.9453 287.055 66.1435 288.765 cv
66.9775 289 67.8427 289.258 68.6455 289.482 cv
72.6347 290.599 77.6054 291.922 81.9843 291.341 cv
82.3339 295.652 89.4589 297.728 91.9941 293.318 cv
92.416 292.586 92.7851 291.855 93.1982 291.124 cv
95.1699 290.845 97.04 289.897 98.4589 288.183 cv
100.062 286.245 101.027 283.349 100.99 280.851 cv
100.97 279.586 100.734 278.331 100.586 277.076 cv
105.417 267.211 109.538 257.154 112.552 246.209 cv
116.444 232.066 126.134 215.054 122.453 200.41 cv
122.427 200.307 122.341 200.225 122.307 200.123 cv
122.447 195.941 122.249 191.611 121.918 187.296 cv
123.916 180.324 125.055 173.204 124.67 164.609 cv
cp
f
275.284 282.251 mo
272.094 276.707 265.576 276.365 259.907 277.866 cv
252.308 279.879 245.579 283.185 237.511 282.888 cv
234.761 282.786 233.132 284.292 232.53 286.212 cv
231.907 286.211 231.285 286.209 230.662 286.207 cv
230.527 285.326 230.122 284.477 229.525 283.866 cv
223.582 277.768 214.909 279.627 207.061 280.43 cv
196.431 281.518 186.361 282.889 175.63 282.498 cv
175.585 282.496 175.558 282.517 175.513 282.517 cv
175.505 282.515 175.495 282.513 175.488 282.511 cv
178.038 278.147 180.185 273.638 181.925 268.908 cv
182.596 268.035 183.164 267.005 183.542 265.747 cv
187.079 253.981 190.364 242.145 191.863 229.932 cv
192.687 223.227 193.785 216.491 192.443 210.251 cv
197.227 197.015 197.435 181.987 195.681 167.061 cv
204.985 152.207 200.383 129.486 194.144 108.584 cv
196.165 96.414 193.558 82.412 191.495 71.1244 cv
188.975 57.3373 183.942 42.455 177.001 29.3559 cv
180.438 29.998 183.883 30.559 187.457 30.8486 cv
190.526 31.0976 194.114 31.4565 197.269 30.7597 cv
201.908 31.2021 206.477 31.3383 210.838 30.7924 cv
211.638 31.5068 212.588 32.0976 213.87 32.3427 cv
218.192 33.1708 222.492 34.0922 226.763 35.1694 cv
231.249 36.3002 235.669 37.5751 240.175 35.7983 cv
245.054 33.8744 247.29 28.0893 243.303 23.954 cv
238.264 18.7284 229.387 18.204 221.656 18.0341 cv
207.835 8.65521 185.112 12.6992 170.001 17.829 cv
169.416 16.9643 168.848 16.0746 168.236 15.249 cv
166.813 13.3256 162.788 12.9545 162.33 16.0214 cv
159.705 33.666 167.914 48.372 172.798 64.9941 cv
175.675 74.7861 178.193 84.8813 179.517 95.0361 cv
180.095 105.264 180.166 115.459 180.3 125.83 cv
179.96 126.406 179.713 127.053 179.725 127.845 cv
180.097 152.45 173.673 182.11 178.265 207.297 cv
175.501 212.392 174.615 218.555 173.561 224.39 cv
170.614 229.636 170.23 236.414 169.881 242.736 cv
168.653 248.803 167.376 254.86 165.89 260.88 cv
165.315 263.21 165.593 265.24 166.384 266.934 cv
164.851 273.881 162.882 280.727 160.275 287.323 cv
158.436 291.98 165.693 296.215 168.825 292.3 cv
169.431 291.541 169.946 290.758 170.519 289.989 cv
170.776 290.117 170.975 290.291 171.283 290.379 cv
171.588 290.466 171.894 290.55 172.197 290.638 cv
172.99 291.558 174.127 292.232 175.63 292.369 cv
177.081 292.5 178.539 292.682 179.994 292.843 cv
181.291 293.206 182.577 293.606 183.883 293.943 cv
184.924 294.212 186.038 294.08 187.018 293.648 cv
194.352 294.559 201.703 295.489 209.024 295.598 cv
212.505 295.65 216.046 295.667 219.346 295.125 cv
225.569 295.109 231.795 295.094 238.019 295.079 cv
244.06 295.064 250.467 296.667 255.067 292.238 cv
255.131 292.177 255.108 292.07 255.164 292.001 cv
256.053 291.827 256.932 291.647 257.83 291.486 cv
263.845 290.418 270.346 290.774 274.808 285.948 cv
275.737 284.943 275.98 283.459 275.284 282.251 cv
cp
f
82.6533 40.0751 mo
77.2168 46.1108 71.2568 51.5156 65.5546 57.2861 cv
60.4287 62.476 55.9189 68.7333 57.2558 76.3071 cv
57.3603 76.8969 57.6611 77.4677 58.0537 78.0024 cv
55.8144 82.4858 54.3339 87.1801 54.7148 92.1176 cv
54.8535 93.8974 56.998 95.8041 58.7666 94.4413 cv
64.3173 90.1659 67.4863 83.87 70.2363 77.3427 cv
73.6982 74.8598 76.374 71.1635 78.5634 67.3237 cv
82.5898 60.2568 86.1904 53.0458 90.5449 46.165 cv
93.5664 41.393 86.5009 35.8032 82.6533 40.0751 cv
cp
.807843 .796078 .498039 rgb
f
45.8593 103.185 mo
42.7519 115.513 40.1621 127.946 37.6386 140.389 cv
36.9599 142.833 36.4326 145.22 36.1767 147.593 cv
34.9091 153.87 33.6337 160.145 32.3027 166.408 cv
29.6962 178.649 27.1201 190.665 27.2441 202.906 cv
25.0693 200.911 20.8291 201.092 20.2441 204.651 cv
18.3486 216.172 16.9462 227.686 16.4375 239.358 cv
16.2138 244.542 14.8095 256.936 22.9902 257.38 cv
30.4443 257.785 29.8613 247.666 29.7412 243.094 cv
29.5058 234.037 29.0576 224.999 28.788 215.95 cv
29.5957 216.893 31.3945 216.951 31.9755 215.727 cv
39.5234 199.875 41.0712 182.236 43.1201 164.936 cv
43.5273 161.511 44.0888 158.155 44.623 154.787 cv
46.583 150.084 46.8925 145.049 47.3134 139.729 cv
49.5849 128.384 52.1728 117.121 54.5126 105.571 cv
55.6494 99.9623 47.2832 97.5346 45.8593 103.185 cv
cp
f
58.8242 397.791 mo
50.832 384.412 44.0937 370.475 38.2148 356.043 cv
34.3857 346.642 20.1992 349.941 22.6396 360.338 cv
25.5859 372.885 36.038 431.985 58.9941 422.251 cv
69.6748 417.723 62.8437 404.518 58.8242 397.791 cv
cp
f
213.197 212.724 mo
213.601 212.417 213.958 212.038 214.116 211.54 cv
230.664 159.601 216.066 98.6928 201.031 48.1215 cv
199.873 44.2206 194.157 45.85 194.975 49.791 cv
206.057 103.23 201.161 156.966 208.936 210.224 cv
206.753 209.998 204.582 211.03 203.894 213.955 cv
201.276 225.099 195.936 239.813 200.233 251.086 cv
201.426 254.215 205.715 256.214 208.332 253.224 cv
217.07 243.239 215.645 227.628 214.294 215.362 cv
214.183 214.341 213.746 213.485 213.197 212.724 cv
cp
f
344.229 365.229 mo
346.361 363.653 348.485 362.053 350.538 360.262 cv
364.518 348.068 340.093 331.575 332.005 343.544 cv
326.664 347.379 321.356 351.325 316.017 355.236 cv
313.551 354.96 311.092 354.732 308.609 354.974 cv
304.14 355.407 299.789 357.11 295.614 358.678 cv
289.168 361.098 281.446 364.1 278.085 370.309 cv
276.208 370.867 274.331 371.445 272.456 371.905 cv
252.738 376.738 233.13 382.025 213.353 386.603 cv
204.774 388.59 208.553 400.954 216.933 399.584 cv
236.477 396.386 256.155 394.561 275.578 390.7 cv
277.042 391.803 279.001 392.322 281.439 391.641 cv
290.707 389.044 299.804 386.469 308.609 383.383 cv
307.086 388.117 306.371 392.96 307.168 398.406 cv
307.19 398.554 307.295 398.629 307.325 398.768 cv
305.186 401.227 303.008 403.624 300.772 405.877 cv
297.833 408.84 297.268 412.675 298.176 416.155 cv
297.82 416.389 297.387 416.659 297.052 416.879 cv
287.188 423.368 277.676 430.078 267.893 436.326 cv
261.622 437.934 255.405 440.113 249.506 441.654 cv
232.971 445.974 216.857 450.77 199.972 453.616 cv
198.304 453.896 197.154 454.818 196.402 456.007 cv
193.462 456.25 190.524 456.458 187.606 456.491 cv
182.628 456.547 177.683 456.441 172.753 456.244 cv
155.988 443.958 130.566 446.302 110.99 443.29 cv
104.677 442.32 98.997 451.73 106.15 454.772 cv
121.295 461.212 140.711 470.856 158.419 469.803 cv
182.484 475.587 211.075 478.996 228.513 465.996 cv
228.931 465.683 229.12 465.253 229.425 464.876 cv
254.045 463.768 282.08 460.878 293.363 443.056 cv
293.946 442.135 294.059 441.12 293.98 440.112 cv
294.304 439.942 294.617 439.74 294.941 439.57 cv
295.208 439.446 295.455 439.442 295.728 439.281 cv
296.687 438.714 297.62 438.101 298.571 437.519 cv
305.109 433.903 311.558 430.015 317.828 425.432 cv
318.022 425.29 318.206 425.102 318.4 424.947 cv
324.867 420.796 330.799 416.529 333.536 408.986 cv
333.779 408.312 333.873 407.633 333.91 406.957 cv
342.514 401.059 349.934 388.165 352.572 382.14 cv
355.913 374.508 350.872 366.377 344.229 365.229 cv
cp
.231373 .278431 .117647 rgb
f
135.158 169.112 mo
135.801 163.769 136.481 158.433 137.11 153.072 cv
137.943 145.953 137.323 139.331 131.765 134.264 cv
131.707 134.211 131.638 134.196 131.58 134.147 cv
131.64 132.713 131.632 131.292 131.72 129.851 cv
131.873 127.303 131.548 123.937 130.188 121.517 cv
130.219 119.327 130.184 117.136 129.951 114.941 cv
129.703 112.595 128.876 109.021 127.244 106.41 cv
128.308 90.2988 127.986 70.3334 117.45 69.1747 cv
117.014 57.5243 113.585 45.0087 106.745 36.3451 cv
104.776 33.851 100.383 34.7973 98.9931 37.3437 cv
94.871 44.9023 95.7255 52.8701 97.2324 61.0908 cv
98.6904 69.038 101.723 74.7382 107.156 79.8329 cv
107.085 82.686 107.481 85.5956 107.812 87.8588 cv
109.753 101.095 114.679 113.483 116.751 126.609 cv
116.848 127.235 117.064 127.757 117.351 128.197 cv
117.835 133.367 118.534 138.441 119.951 143.386 cv
119.226 146.691 119.276 150.253 119.626 153.945 cv
120.284 160.882 120.945 167.778 121.478 174.708 cv
119.589 178.537 118.9 183.112 118.168 187.528 cv
116.653 196.644 114.715 205.668 112.478 214.634 cv
112.155 215.925 112.118 217.117 112.228 218.238 cv
94.0712 229.595 93.6484 264.253 90.5224 282.842 cv
90.4082 283.52 90.3789 284.165 90.371 284.801 cv
90.0537 284.818 89.75 284.897 89.4287 284.888 cv
85.5253 282.643 80.6904 282.307 76.121 281.976 cv
67.873 281.375 59.6748 281.101 51.4638 279.974 cv
44.165 278.972 40.6728 289.626 48.3134 291.395 cv
57.2412 293.463 73.1025 298.421 84.2294 295.88 cv
89.2666 297.974 94.6953 299.314 100.066 297.842 cv
102.398 297.204 104.478 295.764 106.154 293.972 cv
107.907 292.794 109.39 290.958 110.252 288.28 cv
114.316 275.654 119.037 263.207 122.95 250.542 cv
125.306 242.916 127.254 234.222 125.549 226.34 cv
128.201 225.465 130.495 223.421 131.517 219.883 cv
134.216 210.507 136.65 201.034 138.482 191.447 cv
139.967 183.681 141.476 175.051 135.158 169.112 cv
cp
f
187.075 199.557 mo
187.483 186.726 185.67 173.084 184.638 162.553 cv
185.223 157.201 185.701 151.852 186.349 146.779 cv
187.995 133.832 185.991 123.513 182.654 111.632 cv
182.36 106.549 182.033 101.486 181.736 96.5541 cv
181.203 87.6586 180.078 78.9936 177.942 70.4741 cv
179.526 70.287 180.988 69.3764 181.332 67.6244 cv
183.295 57.6581 180.081 46.3456 177.32 36.7377 cv
175.131 29.123 172.506 16.3281 163.547 14.5268 cv
161.915 14.1987 160.551 14.7221 159.638 15.6513 cv
159.61 15.6288 159.58 15.6064 159.55 15.5829 cv
153.066 22.204 157.811 33.7617 160.359 41.4135 cv
162.461 47.7231 164.938 54.934 168.447 61.1767 cv
167.58 73.6821 169.062 85.6996 171.526 97.9355 cv
172.037 100.476 172.524 103.049 173.015 105.621 cv
172.306 106.613 171.929 107.901 172.164 109.415 cv
175.963 133.805 163.766 164.094 174.908 187.297 cv
175.492 188.513 176.615 188.68 177.635 188.331 cv
177.481 190.456 177.392 192.581 177.2 194.706 cv
177.2 194.711 177.198 194.718 177.198 194.724 cv
175.11 202.15 173.336 209.403 173.6 217.31 cv
173.613 217.69 173.596 218.084 173.603 218.466 cv
172.97 218.961 172.407 219.605 172.086 220.58 cv
168.721 230.789 164.81 240.874 161.604 251.124 cv
159.155 258.963 157.894 267.281 161.672 274.812 cv
162.534 276.528 164.771 276.46 166.043 275.376 cv
172.125 270.186 174.125 262.56 175.305 254.858 cv
175.849 251.301 176.345 247.767 176.849 244.229 cv
177.141 244.104 177.398 243.899 177.565 243.592 cv
181.594 236.167 182.974 227.009 185.28 218.892 cv
187.124 212.401 187.337 206.05 187.075 199.557 cv
cp
f
176.656 145.052 mo
176.632 144.717 176.476 144.452 176.419 144.132 cv
176.95 133.096 176.825 122.021 175.384 110.823 cv
174.477 103.769 172.261 96.7597 169.539 89.7939 cv
168.977 84.7289 168.347 79.6616 167.576 74.5829 cv
164.415 53.7861 162.498 30.3549 141.647 20.3437 cv
128.338 13.9526 114.067 21.726 113.124 36.7118 cv
112.303 49.7245 114.476 56.0615 119.876 67.9033 cv
128.635 87.1064 134.351 103.615 136.265 123.595 cv
136.379 132.62 136.364 141.248 136.306 148.608 cv
133.956 171.674 126.625 204.945 128.861 230.512 cv
126.579 237.866 121.221 254.875 118.835 260.607 cv
118.04 261.383 117.322 262.227 116.672 263.122 cv
99.3076 271.216 106.249 297.826 126.304 293.401 cv
129.929 292.601 133.137 291.5 136.145 290.237 cv
162.639 284.402 168.098 260.734 169.633 235.53 cv
190.301 209.914 178.725 174.75 176.656 145.052 cv
cp
.45098 .333333 .172549 rgb
f
355.01 288.205 mo
354.406 274.723 343.052 266.973 330.253 269.348 cv
329.977 269.397 329.703 269.473 329.427 269.525 cv
334.771 265.896 339.281 261.299 342.242 254.548 cv
346.995 243.718 345.683 233.456 340.68 224.058 cv
355.085 180.604 337.243 128.02 316.387 89.788 cv
314.998 87.2426 313.005 85.3388 310.709 83.9428 cv
307.503 69.5409 303.41 55.5829 297.91 42.4868 cv
294.365 34.0458 286.167 28.6782 278.021 29.996 cv
272.29 24.4023 265.909 21.3129 258.879 22.2451 cv
252.738 23.06 248.731 26.5151 248.178 32.9462 cv
248.152 33.2568 248.124 33.5688 248.098 33.8793 cv
247.948 35.6132 248.588 37.2519 249.541 38.7075 cv
251.025 43.496 252.698 48.2123 254.663 52.8198 cv
257.445 60.2016 260.539 67.4863 263.282 74.8896 cv
266.296 90.1078 271.876 106.08 274.738 118.151 cv
275.595 122.864 276.371 127.598 277.075 132.355 cv
277.177 132.327 277.279 132.298 277.382 132.27 cv
277.93 134.067 278.708 135.618 279.594 137.038 cv
280.164 142.042 280.747 147.044 281.317 152.048 cv
282.806 173.928 286.055 195.73 289.086 217.422 cv
289.133 217.761 289.254 218.024 289.317 218.348 cv
287.7 225.912 285.982 233.426 284.176 240.933 cv
283.662 241.867 283.221 242.874 282.869 243.964 cv
281.51 248.188 281.076 251.603 281.049 256.038 cv
281.035 258.143 281.454 260.054 282.155 261.79 cv
282.237 262.554 282.29 263.312 282.427 264.086 cv
283.051 267.611 285.361 270.39 288.181 272.501 cv
289.983 275.392 292.606 277.721 295.803 279.153 cv
286.158 282.386 276.486 285.616 266.572 287.836 cv
238.912 294.033 212.041 297.802 183.888 300.342 cv
160.036 302.493 137.209 308.187 113.022 306.941 cv
83.4355 305.417 57.5703 294.25 29.2333 287.31 cv
16.2285 284.124 10.4707 295.445 12.4052 304.614 cv
5.32515 312.721 3.39058 324.74 13.7119 332.812 cv
68.08 375.333 151.375 392.446 218.72 376.516 cv
254.847 367.97 296.183 355.565 329.625 339.33 cv
352.749 328.104 356.122 313.062 355.01 288.205 cv
cp
f
148.211 23.0873 mo
147.219 15.7407 140.65 12.3242 133.786 13.477 cv
130.362 14.0517 127.199 15.2846 123.926 16.3842 cv
120.198 17.6367 117.013 18.3115 114.137 20.5903 cv
110.514 21.4091 107.302 24.8242 108.449 29.1752 cv
119.237 70.0082 121.806 109.809 122.589 152.054 cv
122.969 172.48 123.5 193.282 122.223 213.666 cv
120.746 237.213 111.2 257.45 107.561 280.317 cv
106.212 288.806 117.22 294.78 122.159 286.472 cv
146.477 245.568 144.631 198.07 144.132 152.054 cv
143.747 116.633 140.952 73.1098 127.68 38.2968 cv
127.773 38.2783 127.861 38.2783 127.955 38.2597 cv
129.64 37.9042 131.3 37.4379 132.967 37.0156 cv
133.803 36.8032 134.639 36.5937 135.481 36.4145 cv
135.778 36.351 138.27 36.0702 136.859 36.1845 cv
143.764 35.6254 149.198 30.3852 148.211 23.0873 cv
cp
.835294 .713726 .466667 rgb
f
310.419 235.19 mo
309.509 225.899 304.71 216.727 302.572 207.593 cv
298.268 189.187 299.562 173.128 298.587 154.787 cv
297.438 133.208 288.828 113.296 282.125 92.9936 cv
274.515 69.9316 270.056 45.7162 255.19 26.1459 cv
251.769 21.645 245.269 24.2602 246.168 29.9496 cv
252.769 71.6796 271.775 110.032 279.349 151.262 cv
283.09 171.626 279.087 191.456 281.613 211.887 cv
284.481 235.082 286.457 248.043 279.783 270.931 cv
276.152 283.376 294.76 288.18 298.992 276.227 cv
304.023 262.024 311.934 250.644 310.419 235.19 cv
cp
f
289.785 289.361 mo
273.847 289.551 259.311 297.525 243.87 300.848 cv
237.581 302.201 231.206 303.293 224.792 304.244 cv
217.947 303.209 210.877 305.19 203.679 305.807 cv
191.998 306.806 180.442 306.383 168.797 305.143 cv
167.576 305.013 166.597 305.411 165.763 306.005 cv
155.73 304.389 145.181 306.311 134.692 306.577 cv
126.848 306.777 118.861 306.722 110.875 306.423 cv
103.903 305.417 96.4775 305.327 89.9209 304.828 cv
86.4091 304.407 82.9169 303.926 79.4677 303.324 cv
65.4951 300.778 51.7539 297.099 37.5957 296.47 cv
36.0292 286.626 21.3925 288.094 19.0107 296.57 cv
18.8847 296.553 li
18.8066 297.041 18.8125 297.522 18.7451 298.01 cv
18.7041 298.4 18.5283 298.72 18.5371 299.137 cv
18.5449 299.419 18.5527 299.668 18.5576 299.948 cv
18.4736 300.699 18.4853 301.446 18.4218 302.197 cv
17.9316 302.315 17.4658 302.369 16.9746 302.495 cv
11.0576 304.003 12.5683 312.27 18.165 312.842 cv
18.3857 319.956 19.2294 327.051 20.3935 334.192 cv
21.1103 338.579 23.9814 340.914 27.3808 341.634 cv
28.2871 343.464 29.3935 345.225 30.8818 346.873 cv
33.8115 350.117 38.2236 349.999 41.5087 347.98 cv
52.8623 358.084 67.0556 366.892 81.2705 368.512 cv
84.6357 368.895 87.208 366.827 88.58 364.064 cv
92.5693 365.906 95.8076 366.5 100.256 366.143 cv
101.895 366.011 103.523 364.115 102.348 362.496 cv
99.7558 358.935 97.5126 356.743 93.4746 354.863 cv
90.371 353.418 87.1796 352.139 84.0087 350.823 cv
86.2285 344.924 75.6855 337.553 71.2587 334.621 cv
65.1064 330.549 58.7294 327.297 53.1386 322.36 cv
52.5878 321.873 50.6279 320.185 48.2539 318.085 cv
52.4082 319.117 56.5361 320.187 60.5986 321.261 cv
69.4101 323.587 78.0957 327.047 86.666 324.077 cv
97.539 326.404 110.438 329.775 120.869 326.813 cv
141.995 330.423 163.5 330.671 177.445 319.776 cv
177.504 319.73 177.531 319.664 177.586 319.615 cv
181.764 319.201 185.942 318.795 190.121 318.328 cv
194.631 318.587 199.145 318.764 203.679 318.715 cv
212.4 318.621 222.249 319.136 229.344 313.936 cv
236.233 313.25 243.117 312.649 249.997 312.229 cv
265.312 311.293 282.993 311.639 294.418 300.545 cv
298.475 296.603 295.433 289.294 289.785 289.361 cv
cp
f
87.4062 332.391 mo
81.1689 332.391 81.1601 342.082 87.4062 342.082 cv
93.6425 342.082 93.6523 332.391 87.4062 332.391 cv
cp
f
115.644 346.181 mo
114.241 346.181 113.17 346.641 112.247 347.257 cv
112.458 344.871 111.074 342.321 107.986 342.321 cv
102.213 342.321 102.202 351.295 107.986 351.295 cv
108.659 351.295 109.238 351.151 109.755 350.935 cv
108.923 354.56 110.828 358.923 115.644 358.923 cv
123.844 358.923 123.856 346.181 115.644 346.181 cv
cp
f
131.437 336.638 mo
130.053 336.638 130.051 338.792 131.437 338.792 cv
132.823 338.792 132.825 336.638 131.437 336.638 cv
cp
f
141.488 342.053 mo
139.063 342.053 139.06 345.821 141.488 345.821 cv
143.913 345.821 143.919 342.053 141.488 342.053 cv
cp
f
158.106 355.645 mo
157.769 355.575 157.432 355.506 157.094 355.435 cv
152.087 354.395 147.237 359.072 149.472 364.155 cv
151.685 369.188 157.955 369.094 160.954 364.926 cv
161.549 364.103 li
163.653 361.181 161.522 356.356 158.106 355.645 cv
cp
f
170.684 335.112 mo
165.486 335.112 165.478 343.188 170.684 343.188 cv
175.881 343.188 175.888 335.112 170.684 335.112 cv
cp
f
179.298 335.112 mo
174.101 335.112 174.094 343.188 179.298 343.188 cv
184.495 343.188 184.503 335.112 179.298 335.112 cv
cp
f
193.656 351.355 mo
189.037 351.355 189.029 358.534 193.656 358.534 cv
198.276 358.534 198.283 351.355 193.656 351.355 cv
cp
f
182.467 138.667 mo
181.919 137.312 180.769 136.186 179.433 135.536 cv
177.367 102.129 170.889 68.4101 159.656 37.5576 cv
155.477 26.0702 136.872 31.2714 141.312 42.6157 cv
156.847 82.3041 159.107 126.089 166.198 168.079 cv
166.436 169.489 167.086 170.48 167.873 171.289 cv
167.817 173.698 167.752 176.108 167.613 178.51 cv
167.092 187.611 166.215 196.703 165.172 205.779 cv
160.894 212.453 159.341 221.56 157.187 228.838 cv
155.297 235.221 153.502 241.626 151.717 248.035 cv
146.215 254.212 144.852 264.698 142.186 273.756 cv
139.871 273.198 137.278 273.588 135.326 275.31 cv
131.451 278.732 126.308 279.673 122.907 283.857 cv
121.877 285.124 121.357 286.849 121.245 288.608 cv
119.226 292.87 121.058 298.724 127.303 298.685 cv
129.882 298.669 132.546 298.404 134.762 296.889 cv
134.96 296.753 135.059 296.602 135.222 296.461 cv
136.721 296.826 138.313 296.979 140.017 296.708 cv
141.045 296.546 141.93 296.158 142.786 295.699 cv
144.158 295.149 145.477 294.391 146.693 293.333 cv
148.578 292.214 150.004 290.652 150.791 288.724 cv
153.274 285.363 155.33 281.615 156.91 278.918 cv
161.743 270.664 167.769 259.666 167.217 249.779 cv
169.061 245.211 170.956 240.668 172.667 236.034 cv
175.705 227.8 180.82 217.755 180.381 208.605 cv
181.652 203.302 182.722 197.914 183.357 192.292 cv
185.236 175.647 188.839 154.44 182.467 138.667 cv
cp
.329412 .235294 .12549 rgb
f
337.11 231.212 mo
337.131 230.591 337.036 229.935 336.961 229.28 cv
338.062 219.518 338.098 210.354 337.314 201.305 cv
338.31 189.116 338.674 175.873 337.004 163.804 cv
336.774 162.143 336.333 160.505 335.977 158.858 cv
339.183 148.398 333.886 134.872 330.745 124.898 cv
328.72 118.465 326.359 112.129 323.884 105.834 cv
320.811 97.6283 318.384 89.5038 315.82 81.0966 cv
313.667 74.0268 311.03 67.5834 308.015 61.3681 cv
307.454 57.3442 304.567 53.0825 301.552 49.5126 cv
299.119 45.5566 296.522 41.6313 293.604 37.6957 cv
291.952 35.4667 289.134 34.7768 286.641 35.2031 cv
285.169 34.0258 283.717 32.8232 282.2 31.704 cv
281.906 31.4247 281.708 31.0991 281.398 30.8271 cv
280.284 29.8466 279.084 29.2016 277.876 28.6166 cv
275.328 26.8593 272.746 25.143 270.13 23.475 cv
264.437 18.7929 255.84 27.7743 261.368 34.1747 cv
268.483 42.4111 275.969 50.2245 283.384 58.1992 cv
285.005 59.9418 287.14 62.56 289.557 64.9784 cv
292.717 75.4579 295.539 86.0556 298.015 96.6288 cv
299.488 102.919 301.149 110.351 304.463 116.089 cv
305.43 121.156 306.342 126.246 307.168 131.397 cv
308.574 140.135 308.607 151.259 312.696 159.427 cv
312.75 160.664 312.87 161.925 312.948 163.17 cv
312.028 164.617 311.55 166.405 311.743 168.516 cv
313.472 187.498 310.281 207.555 307.463 226.379 cv
306.607 232.113 307.665 236.295 309.767 239.216 cv
307.44 244.872 304.966 250.52 304.025 255.494 cv
303.707 257.168 303.756 258.71 303.986 260.163 cv
303.094 261.29 302.208 262.43 301.309 263.567 cv
301.286 263.585 301.268 263.607 301.243 263.627 cv
301.249 263.628 301.253 263.631 301.257 263.634 cv
300.733 264.297 300.202 264.95 299.693 265.633 cv
294.664 272.384 303.083 283.192 310.891 280.198 cv
321.784 276.019 329.636 268.352 336.213 259.313 cv
339.38 258.262 342.065 255.916 343.031 252.135 cv
343.632 249.788 344.231 247.442 344.832 245.096 cv
346.544 238.399 342.397 233.082 337.11 231.212 cv
cp
f
351.657 309.874 mo
355.102 302.724 355.987 294.769 352.297 285.69 cv
348.645 276.704 335.916 270.067 328.178 279.322 cv
325.532 282.488 319.662 285.977 313.498 289.147 cv
313.216 289.213 312.96 289.172 312.672 289.255 cv
304.081 291.74 300.724 293.881 293.772 299.449 cv
291.185 301.523 289.794 303.859 289.272 306.227 cv
286.201 308.878 284.889 312.426 284.948 315.946 cv
284.449 316.184 283.999 316.5 283.492 316.726 cv
279.712 318.67 278.083 321.646 277.949 324.707 cv
273.31 327.094 268.6 329.383 263.705 331.482 cv
260.018 333.064 258.427 336.044 258.316 339.222 cv
256.69 340.192 254.947 341.054 253.407 342.103 cv
251.962 343.088 250.663 344.486 249.829 346.098 cv
247.75 347.235 245.677 348.379 243.616 349.54 cv
217.134 353.03 192.161 364.306 165.168 365.799 cv
148.385 366.728 130.922 359.839 114.681 361.309 cv
110.865 361.652 110.718 361.135 111.542 361.849 cv
110.493 360.942 108.31 361.436 108.479 363.118 cv
108.712 364.075 108.732 365.03 108.543 365.983 cv
108.279 368.194 110.26 369.982 112.102 370.658 cv
137.665 380.034 164.689 378.282 191.551 378.955 cv
215.863 379.562 239.932 382.837 261.773 370.432 cv
264.926 368.641 266.524 365.753 267.062 362.678 cv
280.005 359.585 293.019 356.584 305.833 352.983 cv
315.156 352.266 323.603 348.039 331.569 342.983 cv
332.902 342.887 334.262 342.626 335.642 342.102 cv
342.33 339.56 346.41 337.619 351.117 332.117 cv
357.384 324.795 356.161 316.008 351.657 309.874 cv
cp
f
225.723 336.04 mo
222.952 336.04 222.946 340.348 225.723 340.348 cv
228.493 340.348 228.499 336.04 225.723 336.04 cv
cp
f
227 325.041 mo
221.572 325.041 221.563 333.477 227 333.477 cv
232.427 333.477 232.436 325.041 227 325.041 cv
cp
f
246.464 317.892 mo
240.457 317.892 240.447 327.225 246.464 327.225 cv
252.469 327.225 252.477 317.892 246.464 317.892 cv
cp
f
150.57 219.069 mo
141.647 219.039 135.536 227.923 137.918 236.316 cv
138.058 236.813 138.385 237.248 138.6 237.726 cv
139.391 240.386 141.008 242.728 143.598 243.833 cv
147.875 245.66 152.117 246.506 156.421 244.036 cv
159.578 242.224 162.074 239.32 163.123 235.785 cv
165.581 227.494 159.175 219.097 150.57 219.069 cv
cp
.0941176 .109804 .0352941 rgb
f
145.383 150.642 mo
143.418 153.967 143.343 158.288 145.16 161.707 cv
145.371 162.333 145.435 162.985 145.747 163.584 cv
151.737 175.03 168.774 169.063 168.41 157.027 cv
168.04 144.83 151.885 139.638 145.383 150.642 cv
cp
f
322.318 139.468 mo
322.469 131.664 315.968 124.842 307.992 125.111 cv
290.841 125.69 290.935 150.351 304.472 156.454 cv
310.122 159.002 316.826 158.081 320.187 152.334 cv
321.576 149.958 321.964 146.814 321.378 143.904 cv
321.903 142.537 322.287 141.086 322.318 139.468 cv
cp
f
347.214 321.594 mo
346.877 321.762 346.543 321.874 346.202 322.081 cv
295.513 352.998 247.65 371.312 187.357 372.615 cv
130.069 373.853 75.2431 361.192 26.1318 331.579 cv
24.791 321.255 23.9736 311.095 23.456 301.666 cv
24.5517 299.973 25.1689 297.827 24.997 295.184 cv
24.957 294.567 24.9179 293.948 24.8789 293.331 cv
74.7451 317.645 119.849 308.297 175.361 310.995 cv
235.908 313.937 288.921 306.94 342.976 278.027 cv
347.034 292.324 347.545 306.93 347.214 321.594 cv
cp
280.626 435.662 mo
242.657 447.602 199.833 457.111 160.105 452.687 cv
126.978 448.998 78.8115 435.059 55.5546 409.778 cv
43.8564 397.061 36.4404 379.642 31.6562 361.006 cv
79.6845 385.803 132.897 396.685 187.357 395.589 cv
245.14 394.424 292.312 378.928 340.71 351.836 cv
334.409 390.457 323.238 422.261 280.626 435.662 cv
cp
28.3134 183.813 mo
34.5634 156.234 44.3505 130.375 49.288 102.443 cv
54.9882 70.1952 72.3974 50.746 95.4355 39.164 cv
125.99 108.186 124.375 216.473 94.039 284.558 cv
93.6279 285.481 93.3623 286.393 93.1826 287.293 cv
70.4306 285.768 48.0449 280.973 24.6679 267.199 cv
24.2099 266.93 23.7607 266.77 23.3085 266.57 cv
21.9941 238.844 22.1396 211.057 28.3134 183.813 cv
cp
143.386 25.5903 mo
143.477 26.6552 143.684 27.7617 144.162 28.9506 cv
149.427 42.0229 154.134 56.1557 158.159 70.912 cv
155.622 65.9662 150.165 62.7241 144.304 64.3339 cv
139.084 65.77 135.561 70.4697 135.332 75.5492 cv
134.69 77.5683 134.571 79.766 135.166 81.9262 cv
136.8 87.8715 143.313 91.6742 149.296 89.9487 cv
155.188 88.2494 159.885 82.8725 159.631 76.4765 cv
177.057 144.154 179.148 224.437 146.972 283.214 cv
146.162 284.691 145.741 286.144 145.573 287.553 cv
135.925 287.664 126.5 287.921 117.21 287.961 cv
147.291 213.526 148.933 109.886 118.477 35.0175 cv
118.457 33.6435 118.138 32.2133 117.498 30.7494 cv
125.795 28.4135 134.498 26.767 143.386 25.5903 cv
cp
218.415 23.9516 mo
221.486 24.0883 224.474 24.2695 227.421 24.477 cv
227.663 25.5717 227.906 26.6645 228.149 27.7592 cv
228.826 30.811 230.378 32.8945 232.33 34.225 cv
267.788 111.554 279.986 194.959 269.164 279.586 cv
269.074 280.289 269.089 280.927 269.109 281.562 cv
239.21 288.407 208.478 289.792 175.361 288.022 cv
173.622 287.929 171.943 287.923 170.224 287.857 cv
208.852 209.919 197.575 100.972 166.581 23.5571 cv
184.251 22.7114 202.014 23.2206 218.415 23.9516 cv
cp
292.376 48.7211 mo
293.339 51.1557 294.279 53.5815 295.229 56.0107 cv
290.266 54.6264 284.726 56.2089 280.89 59.9247 cv
275.83 64.8237 275.288 72.1469 278.412 78.1581 cv
280.305 81.7973 284.307 83.7045 288.297 83.7333 cv
290.66 85.0795 293.468 85.5815 296.543 84.7353 cv
299.514 83.9194 302.269 81.5038 303.833 78.5556 cv
313.338 104.221 321.672 129.863 327.221 156.141 cv
327.49 161.165 327.72 166.211 327.907 171.296 cv
328.357 183.505 327.967 196.416 328.085 209.297 cv
324.276 203.614 316.546 201.089 310.206 204.655 cv
309.341 205.142 308.572 205.696 307.882 206.302 cv
303.98 208.13 301.014 212.047 301.225 216.564 cv
301.343 219.089 li
301.574 224.076 304.962 228.864 309.776 230.182 cv
312.298 231.441 315.246 231.87 317.998 231.115 cv
318.217 231.054 318.406 230.945 318.619 230.872 cv
319.006 230.808 319.382 230.81 319.774 230.712 cv
323.655 229.739 326.714 227.342 328.558 224.227 cv
329.112 233.861 330.242 243.329 332.618 252.289 cv
333.031 253.845 333.598 255.298 334.166 256.75 cv
334.112 256.78 334.058 256.789 334.004 256.819 cv
320.208 264.376 306.473 270.303 292.647 274.937 cv
302.688 189.842 289.546 106.266 254.841 28.3696 cv
269.311 31.8534 281.787 37.936 292.376 48.7211 cv
cp
369.763 286.496 mo
367.588 271.067 360.808 258.077 356.472 243.771 cv
358.769 214.446 356.349 186.012 350.893 158.167 cv
350.278 142.425 349.054 126.759 346.036 111.374 cv
340.162 81.4238 326.615 45.4477 303.588 24.2939 cv
281.102 3.63714 247.227 2.2387 218.415 .978449 cv
156.73 -1.7193 78.5214 -2.97175 39.749 55.9199 cv
30.5058 69.9594 28.9492 85.8486 26.3388 102.093 cv
23.123 122.123 16.7392 140.836 11.0068 160.224 cv
-1.22173 201.587 -1.00298 243.233 1.47358 285.763 cv
.499951 287.393 -.0850098 289.385 .00971677 291.819 cv
1.64448 333.33 7.35151 383.853 33.0546 418.204 cv
58.0468 451.602 117.179 471.418 157.017 475.882 cv
204.016 481.148 263.992 470.339 306.759 450.547 cv
344.828 432.929 356.539 396.391 362.819 358.179 cv
366.38 356.576 369.154 353.296 369.27 348.251 cv
369.734 328.346 372.546 306.246 369.763 286.496 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (body.eps)
%%CreationDate: 2/19/2018 10:52 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6l&I(3FXHmuJ:*.LLB-!PL>:#/(?Z)1\>u&#;Co&NDA@go+dj&rAh037<`W)aVk<R/kLedCrC07/P$7,ZbK(W2iGNPVff/ra
%cOR..I.cmu=5P$)s3%ThEV@"O\m\2m2oKG)b7Nha?i98's7Q3VmseGHGW3ohimmR:p@ErA`k*sZbkpgk+!PSd]mf\8bPP@Z^O5YL
%g&2FG*+-I*rT8lBm>c[EqJ,cZVr,U'T'j>,J+;Ok?Zq2@:S7Tlgp@$'pu_/F`VnokS!Qq.mc*'<cLDk1r!u$5>quD/Aq0[>f.Wud
%X8BAEAUZBm0)sVns6e5u;L7#Fr_L;Ds6f[nDr3[*qu$,fs7$J%])Qp&Tte2=ri,l_#5crr8c-'rEHf"oe'fCG][^Z_g/[_(gL';$
%`;d7Bh=p./JTjP.OQZ"`25`%XNm`C@n?6,@r=aYR]5]doF2%SCKP,PC+:c"4aIg0%i3",OStC(efYKf-^\n)Me$o'6`LP@^jsfG$
%^@QAQ)dVPp3=js\no3ciH'W/k5MqI<+R=%sgrZ6_kEs`SQj795[F;njl1t9bI^T'VpJ8Q;Iq+8HJ+NB7kPn0bF%jL-S>+b4npE[_
%C`!$K`u"Jgro)E!\$E1uP?C]H\$*Q[Ij+^9#.hHlb-UQFJcFI>IsChP]DK&=a0/kJLkCl@&*7_Zs5V;[4T4S/^s^n'IeWg>X$=8r
%Dk-AO6[![icYaQS?$;F%mTnJekHLH3<";p>SM/=NdG*k%$3QP`,b3n]!jKFdoDH5`YC8?i;0G$HKB9jpoDI>Ib/s+Xrl:`$Eq__`
%Dk"*"^tZ?mYKA&Zs5s+2%Om.EhgT._pqr_RI/1fa:S2,%#FVdA47)ag%Y>V&:/Bb2rRK1h.1^H&s0=`ap$M\go%-1A`Y&6kM#ZWU
%ru[;uG9$-5Nqhp"iihC@J%]*3]A=;J/rL=V`JD]H`+:Z0/nNCT`\m@HCM*D%mIQ:[jr'NE-iB%KN^m>t4Q=rP&Uue^ER!Ts^KrNI
%o(L61(L/S=P>5;ZX>A:;l<eOHq>3.omJ+J.=;UtWAQW#:Xo8cf_Z.+MMo,L!HeAnB)=,0>p^N.urtn?e98CN]n3>Nb+4-!iiMjDd
%3WiWAV;Zo/F1IsIS.[3Q40<k/>D<+M<aEBk5c:fle)tfCjf$<JqM!+s7f8=@oH8;<qDUJqr.)tp`cBM=20q(0M#Zua(8u2&s)%>j
%_Z.+SCW-7!QjPIW\N0gTZbQVi?Qc<fSPE&V*gc-RQ+bSqlN0%kSXM`Fa"GE0Q]s..K*<#-`<(=sY$D!c2<'*jVQc(<lFuK,p`J*q
%JT?*gnq'HEIJOA+oE*;ABF<O7nd7,Z'Eq(Ng$8"kr,hE#agubfHo[S"5+Oki/'li+FTDBPIbEcs;&-D0ludr&L^Us3PT0>^4`Ync
%hM,ZSZPjl5U_b"aON?/q1_n5QVd9#-SHe4U[Ze20/Lf.#;_CksJb<(,#(GO[8>WXGiM$0aTDCE>qKr+h0=a4Km:r9iQ'2.'54pF=
%rB9??oP@n3^&G!ZlIY!f^UI#;P1rb[m:r9iF[#-[m8LcSqIOaiB8HT\I.d7)Rsnh+IQC6_Eq6N*qn18>PYT$umupP6m*dXoJ,1"P
%:BBh,T7RS;*T^LC_uQ.QGfEPs#.G#ijYR+N26O]6^@bR<%%jG+f&&1e$n0$8$-Q`58+`SL[jV(G]g(i3ouTDNdft6SX\!G+rdDO7
%RC?ZZpIY)XL^h89g&u?^I/.So:QN2cs/_Cp*c(HeCUV-l3U-7HGHUn<@5`%"-^f[YZTm!SNJ$8qQopD0rtBjJmo/tO]$J>l%t`%[
%Krhd,1[8AMIIl]7.aoPp'_[+cj\kJQc)(:aas\O=2f!3XE'c<%Vt6mOh`03n:titMN,SNAkl8q@T+^@5aF^Kg^6=$BPN&mma_m6U
%[&prp\kC%oafI*M]n`:Em0CjI+8PR-0HHIGi#0AQF[qiqcG7$u1Foe85oorX+gupOAp*BNeK$:Rc8NVPdW$B'K<-q(qmHSAW"Sg%
%bY2n-PJdD[nHP<.@5"i-D9obp!A!PomjE=@WO_\t8aBWpJUR+93?>>'b\K6V\`a#^J1+qL@en%#,b8.(R+Imqo8K%V^=O;OF#pkF
%^t<W9<88^g])YG.%-:a!FdTfM\q!:b-U#t-b+;h84.3e?Mc7.OiCtpEFLA^>*q!udnfnF*bDHT(!eq"o!n]F_lP>fG5'$36H%35F
%+pKqYqgHn6f'dXtI!Rr?\EDr=7LmUo"K0-GqZdfr0=RYVI'G[PJB0urejnOeE)tfh9!%YI0f]^U)j7;]&17nidpYM4Y%XBS'*h.!
%HKrMhU%(E[,?KO:=KG"l0Q;T_UbJ/^2_m7*_bK1&(GMa74rnMQ&!.0hq'6n?.U?naM7ink"&O\f"K_SC!/9/PBjBk1at>[T5]'.m
%JPF"Z;ts<E;a<2!!-(Ci"tZ`-C!TalcXQ4_dGaR#!N5&Q@5e;n66dO%d>0If%0e#<kSdD^.Mt]j7F&T_L=o<3'&Rs@+.raiq6DHT
%[tLTLhh'Q2WOSh23+SPk$\J.]77of;IgfCdTmrr`F\Sgd@*@C!]":Vh`f7)SB0rRaE)/.g\dKk@mg4ea$@/i96EiR2RVEOZ5r`b#
%DEGAX-<ri*[dn[_Y&mq:7!L[CBV"(.<*3@GHJN#bLb4n.;?L4$o*li-Obo/tO(VZB,bd:K>_'83gZn3MHVp2B7:to48toY?=da:7
%7!(r,@T_aI3?F"'D)p%cfKc^pqJ>I#R\Crs0%_.ATrgJ!p8KF2Er1HgR?CKf:8_C:!?8IQc_lDMlBBR(VKe(A3c1/E)YOj080Cgd
%jcd!-25LI4lf?8)e<(:E3#4U#h%!u<BK^&AfDsP05n-H<lfd/R"$?c[HW>`^B7jpdQ-M%k,rb(*!Fn\MI\Xs;c`NBQ:YWKUOWis4
%p(E1[/d!LW?p5:5["N6!P@6&?SdIHH>URT?b+>=N[Vn`1+k\_=XPXh!93S7*XY?ZbNE2.;^HpOo),/S321-dBEXt9$5].!&&Vj0N
%G1pgFZ%lO^p1:'OV8E$6F]c9'qMHd$j`i6b:$(daKfVOPK:GqsD$qd,^B\GKGe2--*f"1T42$f$:DGqM6Fp:GdF`>6LfDLq>%$=<
%Q*1TD9YEqoO`]"Yf5noViajFcNJBAoj'!F?ZA+5fSOgsPj?cR%7T$!tr3dTnT$Eli'j\5a=AQ*+mE@mR2VCQV<<L5Eel+\7E*(f\
%$P&3\ddO)M=c,?S=UrJdlWfJYTi<p&.B,3k0eGq>ih8!?Qa0<daTYQl<KFT?Pdkl"`be:"68$E9;7E52VEt;bKUYoLSSqK>(HZs<
%2CMr!3LT+s@\l?Cl&$LNZooLsCf6j#H%>0FHiA"c]r",@m!%7+p7^JWipA#1G,En5mW@lj>Z#2aImC=_MmQbs;YR-fh$ai&M7Ojl
%&Z[g)n5+MTO;gMIbsK!lKm5j_,ZXZ6-p1/Q:U.YUC-gL4(l*Jb4_A8iKle-<ZDV3D:&S3n'I+sOnU6%<B_%$9$A&Z\2Qh4,dT&CK
%Mulr0kr4fmJI.@7d$$>n<+a^F1SP<A8M<G;X+cr;P(6J^;YC&._RCpd&`-3Jhf&(q*^uD>MOL;6K^+DZ=pVQ)PPS60?uL_2"5?S;
%WKbt>62V([<B8%T=6ZG\06pg#mJUCLLHV+L9ja@BeeUAR!d(KSG!^ORnjl)dX;j'6mWh0p[9-PQ@OJ)kF]jiJ<QQ:?o@d`%;k(X7
%Tsgs*DEtjc9mrU"qdTCrT%E6%;j">2JYaR?!Z*"N/FgD`e7CT&BXf$D>E)>Qco<'5F\A]F+hau8]a9G94uu$dmJX9;hA;-Ghg\BB
%+Ljh/jo1ITX6%&J;XI.nQs[XUVd4BeNAE!PBFK4O!@#J&LZghG+YA'T.ZF!8'.'3?LsC)*`H-XU9'Il\T9_arbjP8W1K_G?-OOtm
%Y$t8C[A$7=C7$UYQ_s^R^9QL#P%eV$C:Dcb^uRF&r3c)EPl96#B2em!9cp?3GhNC`/!r!6UB><FC2@.=l.0H`/gDr:7Pf]F:B$PA
%F%[Y[RHu3aFqEE+TX+Gu+iWW]`3%J4;EWJm07P@Q[=r]HZ,_$YZX7P#6T!]!Z#SEEC0fol$Q5S*St=#K_/gFUT%?l#Sqm[sWEI]=
%h%3DL^jQ%PG8A)?:jt/K'hPQ&W_G=^<`)lg<PbaMFsuU.Idd.WNV:C:=*Bg/PoO96q&0p(Z)=N"h"`/`.+>"=["I[0MsQo3lS3GC
%f9Ypj:fN)WHZeTiY^j;o:>?CNet6.^E\hFuS++nmYWR\?c=(9-?X[3;2*ambZRC-"48l%8E&EC!eR%&FC9sTbY[G<-QHCSVV0X&+
%,"k\(V]iOQR6fB_ns'e"gi$jRU3>7u9.A?U^0h2bSl^FX6j'0`!UZ0)++$M@SjC,Z2"N%MoCaQfe?%b^C.VQ<_W'>c,ceo(A/_\,
%-5nKkiJL?G-ig7)6?#*!'T>+2Zd[&T\\bt57cb%PVD\(OYYbbe@X"a,Yc>-r`fX7A88H-t.Iu0tGAQOE^:+e2!R@O8GmjXOC%(ug
%Eq)Kp?)n3I.1LOtFKg+?g9uf:5)X?l);k73&;cCaBl$,Sp$DQG'HAC4pJ5K:;\f0fRugqHL9Ni8L:)JEUOak3q]&:j;rjlZh9LS1
%q>)'<UB$L8as]<]@CX9'LqLIH\!(ZZe(C693N;AT.5n$^*EgJTKpHi+]afkKEi$FIfTs&@k'q7uI`&]1eE!KcFNH:q)qQ44H(j=!
%dn6dr?l+R%b.U1*9L=s!4uB]fj]HA.)`X3+3C(cFXi=>(?@/R^(k/L>H<dc9.F,T%/A.<e'PJSOTh\8C!'R5ERuYd`V'tZN]pMj]
%W"o<N?CQa1TL,f!lH`B^7[\u.b-ujO#Qie!B>LO)n;u0KF]Qo"4:<sR0'jr]1iVHomWU&*PA(cj!OfY3k0%^t(bKR%@gmH(*t*\L
%?DfuLE_0hmBiC(q_`'GL`M0<b@4+A6T5EcO_I<_'\o#kngi&f:A?5*UhB!6W@GuK!Dr=TU^u?nG3jiC$pQPh?9?.9)e5E-M4d86^
%?`:Y>&llc)K's)eTWq;;L:$SRWI$u9.L7E,Q`7-qQsP[T?<C<01&%dZWTA[,Fcq`L/Lu"o'E']<#6O%lgnLWr5I_nuE:V0SJWbN%
%39%ZYBJe;RE1ker0V$0X96:)9[iiOoX4q#"2h8C*5'/k]^1U0pH;$O[E)$s&>*p)BDH=p"mG2-((n?K&Coq:p^Yn1[c>A)K27-i"
%VJ=b)'F45a4_o=)E4lCLD";]"W,)JiPGgEW6KPP9Xk69G.Ot&JeF93:[879,)GIGDl1SX)SOB$\j/JdU3='E"83X^I$;WTNl4)fV
%0oYd.5QY*l$XN:@l53`[=2TpEFg)GO^Bbuua%kIj$=:C$U<?N-\rrgTY@fD<H-A@C&oG<m;k@aXhV+ZH;rQY/6Z@ntbt$Z7Vc)6<
%UhNL#2WAKA[(TbDH>,:N@VUk=YU\b'0!jrBY0'TmmQ8dLFt1Hadu@/"K3o#+!?Jn@54^YYk4S8/^dr8a\2e/&2m:X)JdaTO&3'7k
%o*VIqUO6kEkb&'^?b,P,."+qpHh=h"I7t\X?+EsFU[tAehsN]b&VLeI+s%%_]7Na=L@lG5b^&GULFa_F$?DuM>>g_NF^`-!!2W/8
%H9UX3E^c)VgBk6N.)K2,U2%,/7T<DWI"@Spc&([;r=Vh[>m:;cZ;<.*#(hX(>e>9R;h(rbU"VJaKeffcQhls'^f;0!-GRg$&m&%a
%?rq*Zd\0K$m:;)8cueD&9O\`V6n[\h)MUi5\(hc?q+AVtfCP`edi4bBoC@\gGCYc`o/^#^ACK11n6IFb%h^O5*H,4(dOJ3=05Xft
%6ODY@[@u6U!K0T!1dYJ1T*5ga!dLi%^h-^L><2+<J+oq4G'=GlML7:O4=qPP%t1T_QX>G`XM8Njh)]1YELg8D\d8//Y+h"I&8D4[
%ALQ$b$R^j,P'C'"%/50P"okn\UImIt7,,#g+q%Cd+\@b=NT+<!l?2s"P0/*rAri(HF7BF9XglR-4L++aDF2qU;YtiWrU0mCqRnrc
%XkQE]1kDcW/oOmaa?-!MMZTpZiEXr?`a@q-O8E1oYi#&YJ,6c@.;Lhp2:G&;#XujI_(822cW6@]8*7j?_!TeQ3YN6fqSUu!'Thn:
%8NMkL"To&(HKR5lm.P'<<fb"l8"oA8L!)ABm6C-s8%UNtUMZQj1mrhn&j*)qrFRJU-TS].=IK*lJp2b$(3F3TA8Xrfa@'m\C/L4J
%VRc5DJ8gg=W5M#>XpDk]J5bV-UkNZMmTq?=4:u]RjlrcV<0SiaZi'0&UC/RK6gMRmB0_q9@f0*<D08f4OWaiCP#R(epuKosa6%#O
%i1bW\N"2hbOUg_VCLK$[hu6rV:uOeH[.&5TR![bT@3kfL3>8n$KQK]^H0^[;#u<C\Z?IFl%J1h9WLlPuUu28XR.jN@+?PS4:2&tO
%hY!:9O0k)Vk.\%6L?^7h!4;[\7%&f@WKQ\F^2YdI!:5R)`t9_/+Vr6'/&,/Qm!dQ=)bRcuolPPi^1WaBqn6YVE>rcKB2=Mt+:F;^
%I[R_&ALKV,=\;-umd6IZ,$Ho8B](?+HWU4;;_al-=$:;Da^\1]C%aQh6dXF5UBtTC\BU#fi4f(P/chu#06Y(uC'W:=fC4VIe1k.9
%)7Rf,_L`Q12CURgToA+t@bX.LMm'g3k@+5jSnKPC2S@i_U-kK@ik^p4TuhCIN[fW`jY3^RgHei@!_OmfD"5b]9.R8N7_GO!2Q%p5
%]q]l=i:^rsm30t^99kWcl\\Oh>O(EW5q,:f4D>Do-#pN`G)PG4^[Iq,>e?"Edt\%<&*d+YltoLX"fYYa>-d/5GDBaardl$qT'=nr
%G`"'agNJ&CE3;Fuk8naqb%Oj>S-MJL/4`,32[)!!XC.iN-q"-k8O4Yf53)*m7?nW7csb]s#P>5agBj^&8Ej)"X"C.NG4X?[cIdEc
%4\g]&`G:pNj>Qe_#_`^kpCPrU<8`KT[PgP#T!cnRf"Y>!H3Da!MlH6>Nm!((:Z`@.TZgj%@\!/\j>>@t2VgfE7VPTgH5lQEIkPTo
%bXtU@N/e"BM3YZp9"+USVl=pGc"5ac1.=_e$2.(*M^9(971?Ns=FSsn/5o$Hp/TF*M'QVk/J>Lt;6Q*n>Q&=8AoQKu,g%^AV@shL
%T:cGC:!>*%f/T,B2q,52VCo2AP8d!%X/D;/McBnbhTkW$?<h`L[6@Q./`t8]7s/*&`U'tA9jk`<[/V,KiVqO9^%%=UAXTU'"Y9j]
%A8DRB)Oc7WD0;G(]X4$._>$UDd^oC*bM[$BDd@C#)_;3-E\9DRk1W?A5o5mPb'f@fXqpY=`W!>%qcqfkq5FY3EA/0[(`-#7/D@)S
%.&c!R@]OoAZeNVQo[qKA).q`D8CDo=fT@I(Uh7O72==q=?(\g):[\nJ2Z:;?_-IdQZ'^_tiMH3[5Kp*;YB3$&kW1,leG+s]i4'+=
%=J/?sX,m6<'<k6GTYLm\We84c;t%3D'O2bs?=uM"7A)U<J!WY'q?).jkBi]k7U;u+?WY%=I+CrW_i\r_I>6aFP"Mgq((DG>nr8B8
%]Mh_+jqA+0Xo?*Fi*B0HmdjtQhtYYIgb\M0hrSU^Xm;]^*s``dJ!q1`GiUpCbbMlkbhr8'_0en^9O1'P'n^`ZCZV8JJVB.sj)Yf*
%^#@Of(UVZ1E>jk'2mHtB#!Nr<`.2eC.`@sF0PXB:J5PSb/3rtG89`L9I</Ic<MqO4dJU(4gMO,lF^a0\mSuZ*g.hJ$-Q@o%/R%t@
%i4RD`p/X5J;=h)a?)Z*OCnFr9M-YNR1[<QK(I%&,Ja\bH@&'?uNnLXuDU](m,>f<>dQ?n>!nt\B2J`""MsbolA:#\:#mtjYVN@um
%aP`$6FhVH%!:0`1$+*@lhGAN$9?25`iC]"j?%GVZL9^'j)aIVJ<ZZe&<;!btkYWg1mIR`%Xc`!fYtnP'-%3X?Bl"$]92b6j`3$K_
%\"hkWbE9E"D/3\!("KYWqlkr+krtFGeQ2b%:rWdg>)(Cr3Q&DZ0t/F/["PD9N4%i73E<>'j3m7eDG/KeC=8diqn+A<G+6$IqZ:FQ
%TQbPUHBbt6.@-s!g5Z!2m[&\tUDr4>@i9A7>MJYuD-\=5ITY38I5pMd&ZZ@!ggKMm#fX4n8!:i+WDrm4eo"7^5tSB5Rk]EW4)Vf2
%!Gl,K*ng*]97d#S59JIPpg*1XC@,9g^n5q@p5tfff(\HQ$9e"aUE]6i1m5;rRGMlL3tCZj^Ajmm\&I'SZB*LrJ?/p*h]4CmF`9^I
%^O3$bQ-WY!)3p]id^&GZ_3N3n&'f4AQd_2$e?dbad9BDmN;%A#\l[H\^T9WtZh(59nX]j[nbDr,?;c?`*9]Hq^3oPK`U!!ZYO*/*
%mAp,n5CWW#hsJ4>DuTaDh!k4V?F94_MndlYj_qk\nY?$Pn(t_VnbZ\.qU=aX?i5<OmH[!nn,D)?Za[-q4TAd_hsPsfa8[U'r*oDA
%^;+:RLGr#$aVaSq^#nbIoC%2!NWCddT"_bml!NOYr`VK-F8tM(:TrZgC]eA>q:/:804'.c%BS/EB#H?04FQnpc&R:P"9.HY:\'jM
%Z;5=.>^6;B+!3B&rL4nCQYk\0]Oj&#!uH'/HH`.5oDI.h&F=c?k3ZM^^\ML^fS^P1ng-&phq[&fbPf%Br9BpCh`gr/H;*Z'i).7:
%qY&7I_i+Cnhu6Gr6%<`5N*Y&La/o46oYlaOhn==3rL]]HgE#/Kpqr_JIsCqg73-g:n+B9NhtSSSq3Zqdp",O[I/W(#%km6YqOT?O
%H_*HKEW=QrIs?>?39\7q:u8k]h(.<RlW)R@lNQY4][_AcC\Ie::TJ\V4\>YJ+6b4]4lah(4_+;cqAei#hs`)VOO)fJ(Z`7qTH:c.
%X1pb3@dolMIs_Kq@[mDir7/83n#q1frq=(bk3JAkiuMF;YQ"Ilqg2dI\aldZAGAVR>0jI&q9+P=R@AAT=8aFppZC_Lc\5U&8m'<d
%DhVu?hAt_0HdMZeqcE?UmJbqG)g@'UT7$0):VI\6K$UbFnWSlP_V:+kIMn[!r#s^nGD81[St>_t0[(^e9tR$GF*R;5#3dJ@/&U:N
%901.sN3Om#lth?Ghh?W":Qf_e?DVR(EgX`T+#T8O8L>'6H6/\h)ENeoWBk>$\f61pjc=>oIrYKI]AL;IqW^03c#q>FpkE5LF2Uja
%Ls?2%1s_rkpkccHBljKER/Ij-6GkoFgf,EZs*=1S544'1Bg;%ahFS[KZaA2/R.kt]:nH\ek%PlL5<ERH53Gj.AGJSf3T_dfm*^TZ
%L,fQBVO45;-5S>`:=9VLL5;8d>RGJ.,I:HW*23_jda$esm2->]jAF,>9d,0]RYT]M\EP4)4<5ffVX::,P"/1X(JLS\57Q'q?H0=Y
%ds.*(b8KIt91u$B&/WGkH22WYCsP*9$engQ-pl>lde6u_kp^abMXk^(g5gX7NKZ8n\ViOB'91`eAA\n_.C*[hM'O\$pb4^R$uU$%
%\4A[l-YZ*H4tpqtB$8UH>C[6GD:D'<q;VG9l,^eJD8,o.PS_*$X+o%4(OTFKoD8rPPg?-&J!@B+*9;HrQk+51LEnGk,*(V99#Hs&
%_A?p!Bh)mI>QA9;D?GG/JY8.06g0pkdS9j.N&-_'0G1N3"9F5kMQh>=6mmP^UU1-^C!YE0La#6sME0Vi:_+g]F%%5b-p*@XKG"Y?
%`nnT!5GM23r1E'M"Mb%O#lJrf7iKee79^Bq4A/Ud4NdDL2>[bd-@s>gO9sPjcjBJh#+l]a:j`Y@QI?^8n^filKVpfPefBLO)[*mL
%5i0>J"^jfNe6.gt4Q:d-6+6/?SckPdGG[rt2,B"l*/6-S_IUKe;`Mts7ThTTo5KX)fr7j<2ToEu">$*OFi:>IjFf.+?DF#t&rLXs
%AM</@7lgArODs!Ip(r8l0+a<MMY7*MB7W2n-of=L,ro5C<9kgfmnTWo@MIWWo/iT<Vo.b@Oq@kg`cGOGk9T,$Im0H"de)iL.--'^
%i%R]$"E`eLTkgRL\[E/IBA`dkBXf#^&V+T<aGu2\@#;Z'T\BkD!=2I(7uTTmd")sk"PWo9!>n&s6GOIGHeF>[Jc%oVH!tYCaJUCH
%9I-Y1XPj23$%-6JD:qLBl,&FDBc\6+D:B+0+s7FOirMQn"&TeHHNm)`H\([]D/qVY$$*)Ofm=k\Hea-gQZbQ!=R$_.JE.r+$YdG;
%!XBlA^m*n6E5N"ZI_q*TTQ3@@Klb?*#kd<Li.,@-Y\6$D9WB*J%ViL5;HBL2ouI8SB`XVT>]rCT_,E?*CbU],2?3k$'?&pM]21tc
%Es98]GQGPR'"B6Ga9:WC>E+UU7WB]:Sd7u61oRH"63FKDi.7g:PY[r,,QTm'!sul-,iT4L"6g@&!YGGt&3`FtJd:=J^9iiPB-nL*
%'KA!MaO?Ob<ljT8:S:L>>9Io9n5ga:LVX%G4WKK8_[;5GXFrumaW;?0*\0YT$B[JF(9$TYdNGldN^1HY?t(cV!b%j?lQjj;"c`e<
%WNuTJ;4q_YO3P!&-sJnB7"Q![A2[gM#@fCN+B!t7d6tG&aAgIU1bb.Wfh#(b@UdD$.tA1O1bf,,U_cD65%LOr>@8M!fo/V%&S-qm
%15s($NcHm_&mu33bX#CL5aH@51Y@m#,eR]p$7LqOak6f\]nn%t@`]JFp)5?BS-3:3'M5Te,SL=oVZM^2)A#FL-B:>.#ptNh$6^mJ
%W9Bojn6dGq1K!0XkRKmg"rH@b/-LG;"F!9Eg_DQ*moi^7E*$Sc>nI+H7/r;f8;6Jm(aM**&(@GE;&N&?,of`(81kLC+jd$'fY*Ko
%@Dpo5IDT*2,qUR`[2/7?pV3U-n.2^/4ahVUmI!(%_QH37f^+s`6W"&F,iV6V#XYq2jB)^/Fs8/)6GFWh*/,k0:4QPm(194(=Wn,S
%*X"mW+tknVhB62W6q)Y&7%(lTk^q;*KP)\nSOc"Yapo\`67bDL-PFHfP'A*04;[]AaBI6"1>frnH_t"LDD4sia;cWD8_g;.3'f,@
%F3YW+&iq=]9'het=Zsetp);njYEIB^ZAfL664@'[>J$+(k1qo(h#m`U<?!mOFJFP$,8n2Fim!d,2];/:hsuO[)=d5uc];cqihNZ'
%I/?%cXXcHg`X,?WWHAoTEYc5ALgE.e_h438+:JUa`D[.9Ub5/GCDUDuUTh=#$6p6RJG`qWAu&Ij..gBd1[tsL?)Bl2THJG*]hsY#
%896Pc%Ri6`ejWPZ'[R3[Bk#bhMI\2uWAmq4Ytbk*.NgS5@%u;QW<4K)'k(o8@B<>*?6h%<mY%p[$#""mg.jd_.mf^`bq?+JL$L.W
%VuG6#pct<L/R5]^YO+(p\^f-'>Ad/)bjX6ILRX7tN[rtq4aP%:J'!M=q!1/bM!q&d*BhLGk0S!Sdr:kbEZdLWBi+"b&0X(B$4=7s
%e08(n'6-*1DTS,HTK"t^M\?iENh2&!kY)jFC>`rd;J8Zu<VBs^7oT$)/#k@*WhLgEfWpC&Tr0I)U?#>.U=;UXTOrF^<2Q[E6;c/t
%!M$3<<9VO`NEK2K"iX>!C-d!.FD"$n2VO&ZQqd'i<9\Sl.$]a99t_Tc[qXR.WSRlfcQiEnNVMsOIs'>l#r&YZe@6^%RF8FT-j-^F
%?[/iss.jLq;7DtmJtkk19&[EZ364d]2""K--?#>U<([D+WCTdYR=VS2TliV`@n5uWdQ9ur5QEZp>pqpsB'W/*<hL#>b]TV!91BUV
%#:c(=\`jJX8DRsr!`^aS>G?((9-\;(9"@nF;AthE9WDGlL"'/%FJVfmK&brd$NW%XXOFh\D$`m$kA$GcY;u7ocr,?r9=N`D8Ab-_
%D7&nXCS$g9k39!nCmuKpAAguD7g&7URZ.%*C]@0KYu$\.j`7pPKGgX[\;V5J^77u>oWoZ-&/95abNU8p!g@:[9d`_8kim>b&N%o9
%l=g*Kl#W_>*GP/!aV+kSQoeaC<)]\53`#C5WKC+RS7^\a(cT^H.2#'(DEc(Ifbl__g?afgB&7q+"]7caSAiRKAkk4*Wi8pVSSIRT
%Qkq[0kR"SnqI1iF`X7]W!S!N=[eOE0k*nN\*4f4W@6WCUITeq"hV)\n097Hc*aPd<G!"UK=\Gc_&%D=ReX*>=LfCoCHdu$enj`6D
%[Pi8F>dX0jCJ@:"52p-pQQ,>i?on\h3'Fhn+4Fc=7pU>VS@-aT`(+23J'Nk+d/?X85#[]l']h,>q(s=FVC8&cb%HV&RA,)?&WNO7
%:uq&:/,qg4O,Qq,Jta.^HU2WDPfM_ASDd<]>\9$9&4O5$_a^TAV\p$EH+@tY7YD-X6JLcM<o)l[kjFsgmDeBC\h6rjlYkmV,\$s!
%GCI%@rL=YtXT)>h=bImHNfT5KE&Zb_g`j71Gg)j"@LC_d*Ar5Fq0m(cWeLXJ.m64d,NE7^UO0T)jRr-A-eDuPNi+p966,V"5HfSm
%V.h7fA`6;cU+nYnMX\,!\JA(`rPKsYIZ!YP?mU)O1N=u)XS`*h$fN^`nFHe8+)9TSl3@@[&L6@J7/a#&ZcqrLfDB9+mh6h"S$ins
%qH!s.#e7u5qk!#mRKT!6c+J"R41_\K0Q_AoMeM$^geAtn*9e#iqeDj.=,jdJkq_[(%D%tqX58+:BZPnNl4hQY0Lo-C%]U2t;A?u1
%NOP%)>I^<hd[l44As4dY`o:)P@W8,O2Heh8`iPb?KOpg7#-3CqV5c8MC,ioVkZ!O;?,ibe(7/2K;pU'0B?$f`HtnL7*A'Sm0rfYd
%l>/@e[F=Emg"Jl)<hFbZ*i,4ZFWRYZ[=oN4XKekMQET!n,AO;qh\LCoc$%fSp*Cr$I9g`u>EW-)U(j^+r1f`NlE6S7Gh)P.mIQ/&
%Hfr8fV/C?6S$LE\"QQHP>[:$c!BD(bG@Ke0@+7^2cV,.=O@LAg5fKS0dkd8['-0f6)@.1>+rs4<cBTkn*-Ng*3fL[71YTEnl@^&u
%W,^?+,3YG,0JS"pZjNhld=QEr:3ogi\[fuZk%H5^EaKjHE&4KJ]=>E1^injJ)O[7k/mo&>W<*Jpqe@5qj^?WXVCqihXUe1]GB*Du
%iZo.O=Q8jD9R_i@0@WcH@&PgVg2_&T;f>!dINJBiSu>n[X]!H9K"=QEV*4Y61iB\bAde'@;+?M*DJ>m-Fd!E@qAs>A]:4cSLo]C1
%rT>6,,g6[hg:Xe"R[4l_IpAA-4B'7'\tMUhQPfb/`V6k*I`D'hFm,Ut*u!DdN([ZIH?a<6?(7];YAsP!dXTHEeBCN'pMWMIOlr$B
%V6s1"R$;&;.4re9=/I7:gWbti1aHoUOcm,[l)6BVab\OqULl'gAK4kkJGM`Fd,PNl2^449]PK@_WlO3k\$X\a%XqN<gJ(/MnWsc'
%s-ZA^)7#=?L@Z]@Xgnia#9QNSZ:O-lkfnAadJ:^S,ig+_((tYL1]qH1F=/bI6F2_FmZD'%0qG^`*PFtgd??5dZApQ&.d\$t7j[c*
%j;o'4U]tcqJIA#XH?AM:<%Uh0H&X+=Fe,1o)7lU-dp\fEqW&%-+]`+Kfi[pp&ulHX%lYGUe)]f45TutGRV4jP0n!TL[1B*q.I!JP
%5]&rT.RHL\6YT[2/W,T5RnuJ3B$=OR?&Pa!<pf0F7N=@U^Y.C()CbAi)_(YGgQO93GFc/5]:4cSLo]C1rF[0k6"u])/CXmg_L';7
%AjOj9aoejha^cEuol9Mi)Z,ZH#R\ICRKOR\+K9&D5dcF_$>^T]&6]":6C^WN:<]S8ARWn9b*hg9@P25&5%QD^'(J5_2eDAaUKT67
%V>N.6gkiE+=Nmh3USPIgd3c6OZg&BZr'ChpF#(._<AS?C"41efJ6F@oZka3c%i%\(fS@g2,;CLXes6V+bE0A*=qYDaFV</('%D*I
%e9,Mk[tLf;4WhRO>"SA7d)5TkkBAd$nX\8ofM:`Z,@:%k>l-YCqm?*;V:##[]JpGG(_t_5oTi<7A@u[u$)Nj,rj75lB'G&ZiBp-!
%S6f,rqn&Ze?eGVEDksa4rslAO(A?!h_./h#<Dt:oP?h5R'R`j_$<RRfXXP".[#/FH77lWF-<SJtHGtFJU(CWKYtq^99&lp#'s=?4
%oREXCH01[:%.s!g=QEh!6tZPk`F:j2/=$r,1tX;&:0H.c]<Y^-"q#5s*Rb'c,0LOcoM+$97(^6N&iTsM;NU+d&hnZ)eL:7QXiLkq
%k'\gE,Z=--"c"5<As#WXh)gbI:/!d%%\H/IF<WP,)rJi6"12\Q"HK4q6MI!Pr!+Ntjrq"JcR?DG@lJ2FP"iRDmEk=hUu<q_7RgVh
%j/\KL>.SGViESk-'%*n:oQL]+-@AlL9e?d+2KOA<9b][W(%bl8=V8cU:aW:NAJE<i=m!/##0Pc?Z<edqXjDd&Js_F(K(:7?mAoH9
%XS>4<0h]Kd,#Xu4!4Au:Uk2B"o5>23P4N#&HE<$NBT?%@k:p%N*Skk(0eq%j?!MQXF5"%-17,/>bX>BP/LFt=ABlkeMhnC1ATc<f
%F3A:VQr@'C#&^olCADBj'6BuHlXJsaZntIhp;mDqB!(M5h(3k*IiRG."g=CC(0Hdd1>L=9C.\Cc:<T)C+$PLGM\r`)mrTdfO0M_=
%K+;unQ["ZR:857:1$9&ei8_B6%KEiNnm>IZBCUQh"B+lk.+E>X+H[hq`>k>EL/%di"efsl:pD3D0bLQ"C8',#]d=u&ekdkr%;+r`
%R&7?o23suC1bD.[hg:?YBH^Tk8(0'd!beD9g9E.FZ)90F9;:Md&l[5IJecn,BOtr'b,&8,A-5KE<&rrC-%mHeW;N>"CgSd]4E\oE
%)7*ag[k3V:'&:O]WbGV4.2d-8DH.H&'%sQRkgX#eT@/`1Zq"2_\04(c7+2``fMOCe>=nh"i_a;2]fr7c8=rE%J6I]V*dDQgAX\#*
%%NJSK&RGt"&5OXlA/8/:/7j$kL[IlW;:u-H5(IN/\Rf<V6pY4SX@JI[,0M5mP@%'9O/W$_X[Js+L/Nd4@['n:U,P=sZA*7S-pbrZ
%Z4.4pE):4n_pb?a@5;P0U'0[taZPWI,2`:`o8*EnO8,oSiLj0<BY)4-"Pbe+d:m"i6q/.&`Fg]#1=6nmUt\g"/Pq=ib^pjee>V0A
%8-fL$-s2X7?sq;qF]P2rjcN_H3fSqTFN"GfrOF?]<YpZpG+_g*4#.]*lHQRoX#-`N#>/I.jknY+-EK-R\kQOSm^hhVYLVgUR`HFL
%/_:%PdY&+<RWQ$;E)5(%<55J9kKBcBMoJ!$Y->aN(>a0&I&jLZj)t6TC*9oX9@NDAS$)>J&dgRdl*6kbl%kn-85cN/=lfpsDQ6uD
%V(Hi;QA@5;k,NL3I&["00`L,@6]4d3`p,lCE)]S0h9AAT.Q6B$F&HK9e7F'5?mBO6>"_mE?VO6'[DgitBnDQYR[\uYb>ukOI-b#Y
%s0?f#/DMoe8'fm\[+&Ech+u!Ie\82ojDa5IMQDN=eP%3S&[/V7:"deF4%j@n^>%]&,>ul;DS3#5&:&BRDV.9>U1)"&']Q9.mM8i*
%_V5D`O"J/L,Nftq]2=P;b33+W]Ma_=G%%qh(7!FgC\;.7=!d"]C>r+;G&o26)&G1#e.fGE5eFB3XNSr4.BO!)*_Q7]YmZ%c(SEq@
%^peFu>#[Z36F>49(i9ZV<K3sgr&p<Q[T27hLAo%)ej@d\5dEQR9^V8JlQ**HD''=:.077u$jnU!/%7it_^[Kf)'7Q:"J]*rn3^X#
%f7Cas"+m_.Jo?AF>D_0+[>gj;O),f@im0sQ5'@;-dQ+g\$=:=GqoXZF%_q/]gMl*,E4bf2S7C/sO(J@Ab6!)lZ=S`rF`!RY]qHa'
%>us0m=%oX:^PoZV"8$Hl/ne"4F^#,#68_LGUVTuXW!)%rimH3HnBfc]!UcfjQTi(4\l]muO:Q,=PPp.D,Hb:*R_a)^<n9kR9+lp+
%^J^f\b&^qC=_g4N_BRe%_3^2109\>RY*5T,X!X$r+edMAMr.gOppt]iRGh-GB$9O8(6m;P?S4Yu]<KI6)?[o11e-=M=8eLqeXs\k
%IJ#(T%idlPd'Le*&\2%9UkN(/]CY)gB#W^X@$!4u)b2eB^-6oQbO?.<__ENSMK'\q*Es:5@">L]@*U&gCn9&J62,l1(#8[\,Ihj!
%4Ns*ITnU#eVD_^R8^c$lYq++B;PhCUF%oV,Ah"cjc'tZ?NLBS[#>-pf[7-`*=O#>D$'0(''MPhk/tIl31K]UJVkjitTBj#QZ28MO
%7)6OtfN9[ISM!J=5d54)LG8"UjkhS3CA=$J:;mI0EP'Hmi^n8t%F@/=`Xc/2Y?.uT6<VK$=nOTVior-DO8'(X!NuLRg>g_9"/cVm
%je<<h1#QP2;&o4,:7g.^_$L^n&(@>a,a`?WV2@g]3;^sZl&QbF@ki#Z%f.#F`dI&*dULkW3gQmhYJ/0fFR$M&V;-'.mT'uQM`BCC
%aBO7*&J%SUX9)cAqYJ'pj%B5"U0`[-0!WBB'984^"Z9.[,E]1hOJDUXqN;dDnp%Hrj7C,lT[=6G8Is?YTTK^3^18[Vaa.C!@'3n<
%LiC-k$]9-.Y>"Lto#fko1'N1?b1%UT!aft)#TYr59u>)4*f+f\a=dC_..63nX(:W%QAO*nR(3ui'[^F#FHh$4(t,=9/<W?2G?=HU
%Y:=6/,lo:NV7&8KUSW:H.\X7o=g_4gP(lh3.)8Z2^"7">U7[cr>ESRep4fVhIEU/<Z-(if=Kku;ohAN428gqOJ0"hOCb)Cm]?8R%
%db@`i7>:H"-XRR79!tKhp"]]@]WX5X920gE>KP2KP%(/W)AdB-/W+!T6a;NA\.q/XQ`\aSR$B]&Ad]-VfU@a9(G4HZq17*GTJGM)
%-+t<,H[)3+R>`o\EC26;XFctkZ"Z5AWl2=5E3HZKf8d1*<sWV:$OO4`B%SS?S?&cg,ZDm#XQR)#BikQs**X-d9/jt)79Hi*^N[kH
%G@I5S)VE.=#Zq/3NbZ#EC7X_XPG>^Y%&,SkIC++b)IZX?X#>'l*/:9Saria5:F<X,lV6m:Q):k2q+d`?fIK--Ek?$*)<qMbL,$rQ
%4=rCEffRc>R"NG%*$KV?T\S2c*?R".d<oDrPSAi$iFS&i_50,r&B-%BV+c`*YCP+7g`9]g\'TUgHk`-,d'PM`N&M*oMe*"r5nP?/
%j<d3*NZ/>X#MoBadU(]Cp*+%\?Mh#Pb,'c3WdO?Hd$U99Zm_QZ5S05X(5,c@P\Fk?4Y8<E2=p.B*;@_b^gbH.!XOZXSQE97<%bAM
%)#5)?SlPI-Wj/Ub@6OEqdhP^9&[m-;74B1*>eCefnSUBYO"88dqYbN\Dg>KuVf(gS3GRPi06AVG5:Drkjg@)H$ZO5rD;*0Jat%*U
%K:YtcE?m)n/t\CFXQ7,oB"L=K&jE>VA2)G!8a&#-4\K07p$/g2lK:W7/#2SsX4W"Ak+*sVoZj41I:&Q2S4L=4WB$,f=->gG-h8f3
%l.Eb-XqQ8Qps\(^GNrO)JGeUMY<#6U=/!<IY(%&"nniI(CRAd?D.0CQ[X+lU6<)Ek=t0IEOq<'?7Y.WF>oek=R':&`V,#"R*9r0i
%qOol_]fBGP3E,)E:7jT1SmuqREUe0O/DB@(1g*sqYg_!`ksa#MPd5hN\&oJ3+e"^`@(D0VH5>lgPV^&^Q6-p'^Kt=8L":DWa8+)9
%#8]lQYe,)`HG5Q9S3ZNW/4%1/IK((u@hF$d(KX[Hk;%.,F(P1#GH\jR?#SWhqXX"].8_P:d@?DULY@5+4ji)5A\_h*[H5@.WY7;5
%[Ro5@\%]f`)blg*\6l2<&1I>5m1jQmJcLgYad]=a?d`+VW&1@K/]YQTDfH!=V8AJ2,ZZEgS[G=/\PZs=Q89u,`!S&GX"ucT7(t@=
%#@+:P!AB<^W_u][9N;]KH`8Qe3qilM+,_+7c1'N?m*9",SW;^4RLGMe_j_uKH1E>-lXg+A98;MWoNO!GbSPV+njgFeZEK00eF=3b
%os0)1V,6ZBId8:?qa@cCF20AUV=p$`L7&7#BGi^7%13:Q*t&H,"#rX]4qTV"//ZWY#TDP%*WQXs_sAb'#=*pW`$^6EL2jm[7!pbW
%YS6BLYWp,+*;brdca#c0R"O+LpA!I9Bm6Qb/FUomSubacf:?f/^AV8Rq\/DD\3FOdB9?#FRf.E2[3`t0DqDt=jd'IP#iQfceGF<*
%-f:PEJ,9+JE;T7YqDJK]H76;b<:1p'LBU23UqhSt`,Peg4[_,o=;D(2k2^5;89+i\]keT6^AE$og_@tuZ!%+uI;^]UbY:H*]c99;
%QOM]feJX!-h@8<?rU0PrV1(M4-r*iY]mdLBZhLlmeebJ^<]'DESZq5V'sLfn^TNg/7+G[`;4_E!m`2'WD[;=qTks#Db\1plS#_\N
%;!35o>ctfTgM%qk'dH.'<&?o.GidMI<+NV0RBsG`S[d=1MV3mem;4M!Ao2]-JA1WFRBNq)p&.h2,)5h[Sce/!,!tPl<1NT0ll6Y1
%9Wg-7apN/2,uq&m^,EGY]/ID^_`#P0G;6r;2u%iC8maT</U+>W)]SH>Q?2A)\")?$<Ga#UF+!P4jl8AUdH*LfR4d[f9"*P5V=Su"
%kQVfs2)A<2e5<+R@@AV76SVRJob>!CkudqP@7UEY/3:3sRG7Sua3q9#8]oJ.:pT)plckZJOt?bs8iXr6q"gkb?)O8NUXRZPe=2qn
%V)V>NW>IC2.hg],.<#+2*q5t^T[8(#`LGG;(%6H]p[X="1efYBn_BNZg7,Z8UZ2fIj.S7hSr4bd1H`&8Sc(XWqmU#.n$-aRNm4:p
%h?DMtp0><6DTb:J36:q:J86c]0(/i-B^m9+LBbnqb4c,-LO%`e=V2T"9"rnd%5Z1LV60Od5/M^_j8S+t/m5/48j;7:b:>qj=Hn$s
%c.`]%Q4`T!BtM]Kn+5PbRPqclg0R*K%qk!p_tsVMFf)$i8TNjnn/hoLgS&!qeQ@%rH\c>^CX'0<10NKm>)+VakZf-t)%Xo\LB8(V
%L5C,h2g5?V"=EK+\MkNN_qOq6%+Jl+?.;QP39Y/0`tj>m\';q<=FKjkCO<8Xf"7XU,8qtKICUlWAW]I&Kqt6)cn-K6<YTK$Fgq2/
%dk-dF$&.8q#;1qppSID@eQc8"ip3(.7j_!jD5Ls[`>!5ESJ_lWjuZ3<91\f3b*h]=]s,G'W+JXi7XL,Pmc-;Ec-ZraX%F3c:l_.W
%Pb/DLmk@ReL5F51nJNZ;_o+nrnaC7dr3obR\)1)Kg`fq7/;Nne\/tST$e"qjXJdYf=Gntak`$nMEMX<A8jO9_=,"NVG>Ou@+VNF9
%0@9_rI3/q3fAV#tFM!7K^!Ef"EI&^IqhI<03\p.kDD+eWK&%#3E*^s0<TOnr"8W3T1hPV>iAsEm'9)XV#l!6Vr;>s\hs:h+Sj*$a
%@+sW7cSi#R2R(LcYg553cSi#R2R(LcYg553cSi#R]'X-Wa(Le7$ko7Aij0*\;q\s^kF959rT_QbcX4A6rp%+&rj#VUqnG8hipXYF
%ha[S!QVZMQ]moWG[.qP"h`^quldntkbE"aJ_d*ngB.'0r2oT4Z9jtc*"^Z@^FE_^kSQ*gXY93f>(OZ4\^K>gAmN;J/^]/fSoDb'3
%^W8>"I_5KTs"WlSIDWUFcW>^_B9eU'0@>4@^tioEh0!>E=U]>GHTB.tr:d\t2fDL<T=o[PqUO%RJ)1&q?Vg7%LY&_:m!c\K[;F8L
%kAR!-IJr;t_p`8u/DKsE+.g6Ws5s(MceeY1pG]VBs2KP2nc.]@*Ta(Is'9mpH'fTP@i4@ln1JfIM9om,PR4=a^'-Ioj&6t.\W,(*
%n&?NiSK#V]&9G9c)Uf^!_Fc`q5!JB;iU-oGauVcE#olQm]6!#6QT,TDGL,p,5rL3'G#+l`ZCn1U49Xo24%9/'NH;g$B%,%"nLi'r
%fH"r^]%nJrbOC)g3QQp=:/KV:cZCPXnBr!=nec$()=KrunTq7_K0(/cp@EAR1rA^76JP:fr-9@P-BW+g5Nub<D?P:1rb`G;A;?1-
%Nk6/dI^8/*Lg&'ph2&rCccTN:41EB>3&l!K/G*kIUT@tBD;uXOmHcU29N/LJhZ]]F]0+n<O$0"DbGI"g!uei=iHuGqetBqD(s<\,
%r7RcFa:Ktf71\s%);_nQ8V]ud)E7aN1FW">F(SR]bVS66R?:05@!Y/lD9TVqFdp'\:!dc2H@fBLo,@2<'8i1I-lX9/Uh;#@HR^Cr
%P[.Fa>^\P*)34cJi>I9l;7MF"1qU"9D@#eeN&W&c=124+phgWpK$P9e#YU5FkrIMc&\B"eF?BCCcbMGci26-?aP7P"i=9V1p.W3W
%3o()GT=%mAQ'3*dV!O4"5Yi;7paQ'=h!,%'"AR76A<+8Vc$)Ku*@L2DrZ9LD)\_/cmZUu1l]F8lKI--h$H:XY=eP/.Q:3.Td/^hq
%,A5skm$V.DF3#c;1M*0%,l51@H8'(YYWiEjgPK6Z-TYH7[!PZJCsU!I^mtJ[K!7"6E#:u^6<5q9A"%1gE:U=*8WGR#D[(V/-UBbR
%L\X"rj'f`#ml51p!gRqqSEoNt?YR<i$;NthXitM)r)F:Z@*[PO]1_ie[Tq1*p&]g??*HukDcTELYco'sZ_8dK\P3&(7X[OZ!^Ood
%Pd4/l'JC_#pK2`MLQQJ(-fP@@&Pn:P4TY5/ckE95ZUZG)CjR/Nh'eGC*!U;G!u1jtD@d`ISEr9qh$FnuUn&'ZDBlH'VG,7VmKWb#
%/7BfXOrf`sYSZl.a_)Vd3(^[0@3"&PdnW"JVrU)g%tTNN\3ZjeKBeKF1N`M]EE]Z9EnE]D7HP1s97i^f:'81m5`LS(Uo#23e:gM=
%S=FauZhth,_D\]_h-neSTa?%im,^6RX.Kj7]FYno:)eW$AnCZqPXn_DPi%]1pa?gi'OQ;[,?H4&_TQ8E_EqlL2dfDsP-$6%NAnOI
%efj%M>_jUGADcKW@?-pB_M)U-Qk\XXFt7+"1$]E`TV=r5K:L'=FCfKnYQGk$.7bqtarN63!Ppj"2KkJ-3"Cu'.7]?%KPmFi(4*9*
%_K'9G.KN#]>E^$E]J31./^4>N#+KX`EqN1\>*M1cKu1Yk9*<NQB8B2)J3O#jk;#&>B)nMG\3P8d7uV\koE7D56c#MD,O6jV/aF!o
%>+Q=[TO>\M4<e8ROf91OG)W)?G]^lAF5,f\o8$Tu9O)a+G$CbTGt%oYPZ*'4DA=Rd&X,=%ANiE`A&4[gEsT93g-ZNE\e%0>;iXsK
%/!p]gpjEjD?r%!U6'"oTkn.;UQif68!(ams7t;UJC7"#a%`c0D_13tFU!c%CR7RMe;r2#F*2c%(=$?b4QL12-$r4nP[3#u,0'\+?
%7$%me>D!Kl\oE>g,$-kGQueT^8+=qMq_A7ojH9O1N#.("j@XV>5Cm3ga@BA[O.HbmRhlDfO'%am6Cp&-&%HBe8?g!P`jehl++[,f
%cLS1f4Wo;Q[n[u&Zc<SD!@@irJG8W.HOr>WLWu'=71LZ]&W#q,LBTll=6;")dc]P*^0*HAV%=Gsja^MRV]5&#ejR)\p<J$HCLl\X
%1Cg`9mo.%tH:!c0(ic!pD#b:/S\eZ#:Qu<E3!Nb;ecf]aW2VnHTgD-M-'0#&F9HDmhC19NG?os@=9/K/DRdl"]epJtZ0@.33720o
%N<3ZnVhY]AH,d^$$5&Tl3;C;W_#_h)%#g9`AU-Vm+b,Hn4Foq+q6:2T&OH]5'nIMgqPZOg_]eYGC!\s'ZcL4.*G=PIJSehiFskX2
%\8&sfIOZ/2/@8:"?FGTdO?rAIrI^V5#bH'D8-qFcj`"LmYj`K+mmXgAPpAuXZY8as$or@E*VRDkn5N6X</A@1<I/Tq`8rsYmRtIA
%FndC$+H]0@jC&#gK]-E/`@l=,g!>mh`rWdYch`_t"r3F5?ZbF-HY<_L#KlSTJ8#)6.dRO?(RgEVQ@kW[?;4h%6He_/Kq!rZ,k0pJ
%6%Ml:Bs=]nZWE5-QR2."UaRd5-p9mo13#]MP$DZXPTjPVPCa-T20q$&.H"4($[kSf+[)(AlU/"!=7!Lh<e?*I`%'&#VrHXdAWIM;
%lQG05`1SDf@C%5#+TT2DP>XXSEc(*+,XGAq\Qfs29Q`i`D.ZQRZ"Ze/oZeTDP6bQ&i(JEMUpA#@>C+<*(R7M9`"1RmS7(.UYmEc(
%!=Q3^pcSf"#GJbQ)e:Nmpc*#E3P<T3g"&nk!=C[.:7%Nb/%7:f5\W?KVW]=MPY%Z<6mm(%Lrg=@6P^eXC0gC?A@K^9!o9ZH@*+V:
%Y-R$M#+`Y8L(N`=89FEEiE4Yum3"Y;RO^SGL=UqKSNJP>\5;]<VQ;qU"7qtS=Z]^C4CSdVF^HmWk]\:[Wm<\K<..%XT3QnCQ8ttB
%&YYRZc%J6>ndT-eCTX3frooaIioe(pRp5"%dk>loqpjF[cX2+0qt]3TJ+i6LQbS%Kp*hV#)_M?&<WIqg$:qIJ_A@hC(]_Lc%0E4)
%/:mTB#SW`3#`g+"E\>1>A^,:]o0ecT`D&WCJ?V>\:Okkoa@("J#O3a.`MlZkl#``3cu;PT1ADjM%7(C7nRp9JOV^M;#8)!pZU1aH
%!ioYd7=ln%WaGu:Goj>*\^"!cV>oX!53Z_gUCoS0bZ]5@Bb`I5Uqp9hY%?o/Ak0]]AD&,+XIsLE/A+28RW-%J^aQ/C.de]DPs*DK
%3(Eu10?dDJ?$8UM;$eHQLJZ>?N(ZSB$jCSd\:E3:i_dgd^bBRaU+_p[7QNp<L(ocCUk/l!e?07F.i_16*fCZsB$_#"Z);#\ncgu!
%[1;;pJmKZL=0E8?P3n-sMJSd(\A>$c;GdH8kSX\S%WcV5:d"HICbR7G0I#'h(a4:W&(qCD8q`!<FkUpkOMD8t!,ohT@=FloB9#^/
%e*1FHn'$L-&u\7DK8R4NeC'I@]j@QJXW+]#ft.rL?#jm]PYi`af]43+.,r?IjK?Pe*M4e/P0timE:F3)HXgf&52d15_N6mN)YF_L
%$gkX\A:?#(@fS3.O5kj%ag<$@b1I-="Yp-*9+M2JNg8sk$;D_Xb-"+>Smd;*YXWa]kX,T+:?`@0OcsVpN6mQHh'89jH9=(c4X(#'
%m"(u:*?is-#A$E=3fcXZH9;Ld&#c.V*mpg;pPTR_0+2]8qYVV5%&W/iqN(8P2C;=tRir1(Q;>AHBPX)MQ#g>A']D'N>aAs,0MQj]
%j[&5Hg0'gM#"#c38@NOdm*HtJ.Sic8CdigNWGnC?GV-:*n28mQP]S[>arZp!9HM?4#8%d\WIl$GMV]r@ZMO[gn5+[(%.PP1$GVhi
%i?U]8d6g4:D@I^MG_XRF3@@F(,@h_b!$rsVQdK5(%A=HF+IZqnj6R&SE^m>8JkX*VOorcNT#gB#PnaMj$/K2oK:K_o(D9NX@Cn/O
%KZKkR(!R&34Hi=?K2uJjm^2&JB9pFdneS#j@:\5I6IFR>VrOJJ#hP!pYis1WG[F1jkS=fn,Nu380s_Dn_.peQ#Y6dc[18CTE2o9s
%\L\q"1YFa/f>6Vb\QsQ7c&45YVi`cSmZCD3&8!s%`'l"SN0@0GG>rdkB/&bKK/Pmd37%]jahs4n'?4FG-kS"!4Q3gb++kP0Js\!]
%TI:79i"[U1@#G)k"oC_!p.B"QM0RAp4lI@8V&7-:3+651XHCKEAkbUnW)]OHJt$.![+UiI:G]!,3`C,+KFUl%"dre8L%Zoj&6W75
%?-!Zg]pPomdH.&5"G@I&eK!q*g*8YXLQjqhHH*'@L?"Zl=:P&$DmBWSa3[7&#ergs&p;<\-R"VPm5g?W3T3qG-d51;'S/[,FlZ&W
%[-I"RH_QK+F:RbB5Ym!0L`0jEm`M=0<T<*!:fPa@+pCEado[kC*(8\Y9oH@k!7(0C%V?Ls`Yd3%'YG<l78W1;#_?"I0ub,P[+PV$
%RKpoZ_KsT3qZlJ-6>GV+Y6I,*BGK7g7W2quTl/#YL&O>u%cfAhN[=CD//17AU`-6>Od*W0Jci?F+R_^0#i[W;,&s]r5+CISMDW:j
%JQk"%$9O9R?g*<&N#[TJCfZMq\XmD=iJaG!_LB]sN/m1o$8CepMH.5T-pe+43-9ZN[&)36.H;>VMUi#:@j[D2U[3DZ'HJ?XJf;P\
%Y<@G7L<'dXq:[nkMBejJqHY%50LDWsfgF`1TM7GVnkdO?N[2G62fj.R"bIA^TT1T=>"n1+<jr4qV;6*)@5I-]bjZR37Eg9ZO`kS8
%0*<StLSW<DBY.X]E\M5e"j\*f>U\7#f"X$Y]Y^^@mt**HUc_HcRT4L%@&^U!q4cb87)6u,i.-K:!]cR*4&BXA=a!D01[S5ANj-I=
%l48k5^^*T4%K%/sL5=#.%u<jK*$N<*qSC?1*+JDLP',$f1psPbhuRZ26&@1[Go;:/=+*gd7A*OW9^oZR1r?93,!mIY<2W#VT8(m&
%NI@2;`.\Ya=tJlkK%i_fF3)>XRoEm-%p]LGEF`m)]bT[lYo*-9q'hookuba<+D*n8A.M8+OF.:QT=<+bTE#[J,!"!^%1,XM@Y/P"
%.l>KNL7HPZM6]ecEu@+:_9iqt.Ma4RRN/>re4>pdKtRa+-["AS)'_'P8^5_2.AVDDHjJG5U),<<brN9DY<n!@MGX@]@#,/FK.Bn/
%"dfhe26`(^>3)\3kUf1E";bljJd4cL(*+UkeGDLZ"Eaj->nT-Z$,X[^ELHR?@!_bO_aH4QJf.P6jZ!7#_IR$a4op#*DAp_=)2)<q
%/05U\SNq<lH8=7noT2jl.g3:qS/?o2E\BuJi8n%.F[-pu.n2K8Mr>\,+TuRMa"Y\]F&kZqj<-jKAcc9Sl5CYB:()W7/J1T'j28V?
%5u9U1)&*Bg(tFd$HS+D["DL,i&35CVLqkNB_8e-gR6aa0N5Jd%YZ.%$^tR:kpE;lBK=@29Kuf`-FO@@Qi^=anEC]<lDDQuC6[t.j
%=eHte\rrt!7^,kaV-H^.`]`N>!g!`aU:Z;3J)Z[a9JC]lF&&C*Pn<48^k.qmMBdII>Q]s'@=Eeu"Cg2lm/Dr&V9mAJeYMD,</Zm-
%4=JdZ<uO]>m0;F]"?I$M$$lZT>s2`j+2E6:2?:D5hVmF$Fn>L"OJ)?HUE!_d;#Y#<Y=5B/8I7f>'2T&*Y6'o'O,sOmeE1qT@7Vqu
%-1DI^+F@L#'>>qmOmH,Y0dmAELVH"TlEGdUS[k7\VJ9C`0OaI$jfLM<M/9phK0;Jp3fg>LIemo0aGf`lUFj_]dia/S)3crdqAuo0
%eiLNWbhaa[AX:-QR4"jiV#ZjA6PKtlXKnNQMeFntC;XrM+J++RC[;Mk++ZS?BLP<%`$h@:3R6Q2&2$[(%/%_>GF]k-ar(=i!rk$D
%;A+A1)c'2)50o<U-V.4)/n6q?+M=QXa<j'Wl0,5oA+c'5VGYj15`[?R5C>./L`%RoMi\WmJ9MI;:AA7PrsaPu<SaJ@*]9B7#[d34
%YFsVT'91!P6tdT`Sp5>)4Ef*mQn*"XLsq_6O?kK?*@%Bl$q]-B'&%s5"PK[Rl6Wfm=gf&S1*aX9j<Gpkl(Ai!ej6HQpV@W7PU-W&
%l#dn#7+pJ=+g.RoNa<;UAO3%Jd'&(-(!8'(9KsOC<p1,q%tRtU]b-KsTfS8U,%V#<f49+j'ci=7SJtr_Jq=:r0',.(^u0:)!&]QG
%_kFL-(?gUs>Js*d-Z=UYNDpb(7PK0KnRdTlLhLO#?aOs+q@@2:5S"lRj=M&<=%()>jYe;i'M:%L7##6L49qS^,`r[Ci!'pgU!laC
%EHlFk%7L<W;ooXlL5ltnk$ZS*1q\9CUptu)$=NpC`\,0F9eS,n:F8*KJ:48?$1h&)-3;;#@#GRHJ,l,sFQ1DVdNi6"UY.t-*8H;%
%4>72=KTFgGmN<HYW19m9bnqYg,1+]t`+U20.'u=so5n,pR&.gDKNK3GkT1ih,>^j?hME%0%L0kuYW[^L7Y[F,`U_6.HHa>1FJImW
%6p)GHe.GP0R"#sG3(T+'Gb$KEV5/Yj6/P?Q<9o3E5bu`2m!:A=HP5m)E0#Xf*?Aje.Y(f;qLg!P<2<I6&D0%^:-fbgi%`cD'2Z?X
%;^ODS,a>&Aj8p<s?FrL]_7S25Mkd/j!Rm"=5_9=dc\bRi`)p7M)\)EGW.5;+U&T##a<*8^L<dDG\Ur9P069N?X_h1V303?)o?\P`
%<3L9Z68EU*^$$b2L/T\HT@jn&+6Q/K?ZfUF&(6c$.4M6s(NL!;9G"1YOOUfg.V1=\,rO\TQZ7YAYh;:Z$%.AI:aYC:ZRUfA1%%Bo
%eC^[TQf\HO=CG?U](t&G_[dFk2cnHH,)7saE2&*L9FMo^.LHO]'DR.\9c/P&=Og5!,/V\8JM9D-^d?TM%q>_g*#Psu<u?q'4Y',6
%L%YoW67,INM.<)Bfpr.U!`Qqp#IkuI]:(nbA=;XP7hjj43J3q=3g(`)3<<XrXb(ghF\jc...HGO%h0Nk$DX.,XKZs5%"8NLK&quS
%Fbi_6`Jd3e-t!WCA^<W\8ZBNgX)NaB'0BT*A=-+<Ub:!uM3+]>Bs?fOOZg'OJ=ohk`N@Da&'F>P70WiT_bXu&KEQoK20"40BQ+N-
%BCR[-QOIsX,JG&pb(/E#a\N$Pnf)(f6IdEd_%2JNU<+rVm1It^![3e+XTjnr@R\?\+)j:,JV5(q7ptO_fbCKKJO#S?P7G`hE*Zj2
%">hP4_h<)'V`gEa4BL,&e[ULsK<7m\b7LI8j(L,JWitV0\#l0m6!icH7]]u%bAnMb"/(CI&S^rlVEHluS]JI:Ka<fsOO@O^M_b][
%%e.IHCA5n4fVI5K'lO;s@g*J8I"^L#ZnUODb9K+QILsg.)MElDXQ0<VW"5`7&P$u]<JaNp8.B9j&p/P]M=FFgaloF,#sE>=.Mae=
%C,`5WN66_U.`^c;dSbr,UJUK/eR0npS(&qT&N:hf)W4G'Ue4TrGsM9S_?(=5io_d<,,?Gscq>KpNUfGg(Ciuui^fQ=+J1tH_ss2Z
%)lSjENQHd2m"VGTWYc0d$+hd;n'FLae`]GS$0%Mk*FM1V,h**%K!"@:1:r+2'Z(RJYG!8(Z5_F!i&ji9M!!g#`dHDSeaNZn-GU*S
%$.]mE#&1W&[8Fh'l0S.u=MZ<0/P**p@g`iq2d"-0,D!Q](,ua>7S!df&FQ.0IL$d$T!TG-+N]HIOMFnl&WW%e5IcRW2XhNM2'amN
%(9ET]-TSLU"DimhRT>Or&J.o#5_fM=E7H/#U$4p$U^J)#!rl<,0MA9&TZ9NWgE;a2dn:LAgOR9G%_P9"i<:+i88-1GU^>&[VTcPX
%0R0&A"@TM>N<r$]"lcDn/mth0'+b1*@+WbXJA6rLY=WZ_*r$b1@XTN:"-5^[V4=PZB!;Or@$r\F-3m())9un,-hM'PiJ;.Y#RdUS
%o]UY0$/5aV#T6@D9frG:!NlPW_r;+KJ;SrN1nhg)Kd8@N9W=D?Vs8t2o1T4%cU8&3D_/VLX@m+GO?>M\!uu>Y"^-NF#7(WB`Rkqj
%((gC5fadX?..'ch_GPr76rhG?;UneNa$.?LW)Z0#R0Gfd.%caiiCseN``?qtddAQHAAThtK0$rhOZF[[Vd?Jg&Mi.H=N07S^huti
%@&0AJ:+37Nh*]3k5X99rBPS60!@A'e1dZgb+Jse*Sn:7c>4$g+`?Sj4LFKsH+UQXk?!Ra)!>)srH`>1'aa8Qa>k^!e3-@VI!/RDA
%4=/%*>OX^#RZp+O#N^sql6@R>Jrt\YXKj92.\7Bs96VE8h`6!T>160q/<CNq&M%mP]N0Y0(p1f9N>D!i/ngnrZ+eg?rUcTUO;[9b
%7U&;+%C/tj*f8=g@&2l":2!^\Jd$q(-+Jdu<GHo>IMpD!"OU%oX=?8!ZPnGd;@N+%,_dBW'GW!H$^n[3!M/QcE@*D?h^RR<Ti$+i
%:jC@NG%CY*XQ5temTFfcr9InhVE8E"D>3Ncd-M2O"%D!$BJ!h2B8Nmg+fXM7hF`q2DsHClUdks*'YLF9p_(#lB2H$%ZkG\=cQE7@
%Q^&$koF)cnB$uai))WG/H2WQ.hD:rNW%<iJ5t](&)N_3OG*/92>\<[jA>7F!5ZnBd0T@&k[cO81;;/.)R\gqr;?A@(W$_JbYXP6U
%nBc6UTo)>tkS&<++nfDh1mDtN&FB::R3$G*d#I$AS;a!A$sHu42^U..5Um43nOB_te.7VA]hm]AGsE8Y<g!e%(,R47!]G.(D6TZI
%fg-iEUK!nZZ_n"30bS`H>XhoO7RjrHmH`uO)r_]I>b=SXMZq=8[Gu<X'D;o!OJCG17XuO*.^OnM96P)M+0D0Z!J2Adnpo`AbQ8Ui
%YO(`ar67TWWltq_5nTqn*e[riAUGc?_X(_d1XUU8T^<k>kgAu6*e>K]_>".TZofm-6>??1:(Gtd6De5A%YQ7aVF*)ZN127n3JaQ0
%*X%fcF9-WBR%*7F*7afp%FAlD[.F[e>"6Ym4;f"X$_neC<"C-*<ZAi)`BZ9h(.LBQJPe-;+9Ht4i11.Y0)cQ,dg#+%PgmdY'H,da
%BY'Ts.F\pL*epcLSVbp8oHq/_-8Uk^BQ8d8j$BeLLaZ,[G;?'?6\-)J`uaSD6uLO[ic(QejId;E]+,uk&TU+-_7@A=QQU+MVkL>i
%Zl@[=+Cn6'[>.a!cX:Q/H5NgQUSU!)Xe'fZ6I8[u`)t_JBm'Pi+hHaYpmS`6*thX%.,W+<651g`5i3"qDFUh!Pc5tX.$@6)'"Xji
%DN/EB7W;aC@D(*#_?tV!]m;%^hP/"+d;0/c5oB_.#Vl;2Oq*Sb"1V#)GiBA.[&=crLPaDrYZi@5W,kRnMfZSbP2d.$2.JCeckJ[3
%R?2kc8C:CAj6'k17"cbTEZg,CUk&UYEH1WJA%kX,7f6L#f7uBl>)l>^[M$Pn-\7,CKE^G.6'i#GMq+6W1`\',7Rh+P"f6fr$hVjI
%1MKMkN_@btF94m:S1C9@+a264Tfc?B)81uR99[>W5uiRJ`/mEVgnn4Q7*q.H>Y2EVBIH)$1>FA\L9]1QZf]X5<!_uD#kJWdTS^Be
%VYE.8_.pe?TQ8ubcuHa=d^Z@jA-aR%$o^SZ&(l-1+nhSij'Vo)G,'c[TR2L26LeKKjoZum9"8!b2tfXmB\BKfAb;;DFdPE=+sI[e
%*b&e6O"3ISMDcsIFpLc1i.4K3_3dYH$b_B8UZu/1IH.Xhr<Nme\M31)VfEqo101)WVh)Pl/q<T1B#kJb0>T2S3(L2dJe<*A<0o38
%r9231"G5_ISp9l]kJ%qA*Ko11NE?G(/2AAmU_/dk&qaB-7qR[U@LXlSlB,\'\qRh4:KRUp62R0iGr'0n7W;6j#6et%:G=%*Q]Wt3
%>AcI?giDs"RSSR!!DTtQcj%N-$,\H`/P#)2!:8mM@;63,6OqlWK,\M;r;MXuG(U]2X'qCsbTf[C@$3&S-:Tq/@Os+PY\DX'SeZT4
%21Ept%-V@qjfZL7$dTZn8U:ka%_:CfK*W!2B"2)FogpQr.c*.?+bJP?nTCfuT`dZ&C9bOTg&Ub6nJ?<tbXr.]PmNU4;&MhJO6oZ;
%C6:Y->gk7Do_*V7FY\34jqSH(fsp=c*'GuA\WuC+/B/t))$$Wj5XVd.AS"][gp3TYFGdHp*c`>jn&&*0(Pm*<,S&CUH0>UB)T%<G
%#YfR/#SCea5R2-gjHL*(B;\40`%SHi!;rCP'!W3?R$tX.;S%EseM5uI``[Qkc[dRj8].OC@i1bK;-(fe7rdaO(]rfh$BLVmTEQQ[
%e9G]m+a.XU.7j9C?'n<k6Q.U/HC,S@"eN8i<M#XLFXa)TH8g"t"sua\%Zi&Sl[m]cTI@];V.^8JJ'lms0JLG!_ON\e^5X[9$7JRO
%U=U06LS<!g*R?qbZTkc94Ok6oL9kkdd+QNeW-G)XLB]fGQ3ZqV?\hB0D$3Joag(n&6d$e`e8D;`T&E%t<$.MWXkj;9B>X`9$&<PU
%#q%W6Z%qW5SLG>l6TTg:Jis3-E8:fM!Q"gPMIHUR<qA$jm)[Y)bTLD6M9'\`N/&<^4HQLmc?bJHR7BZp6=tpG!Bhp`!o\ji26oeP
%2$-A.=@%_;DDk^:&&QSRfn^\EegQ2OCV[[3-Ee$?$j`HTabUuIY=:O&k+;aeH=hOm[?\N0jp.c<N#$PaAJ'0R;'`t.-d_Mb+\P?Z
%Vp^T2`&YO_H`@E5:`Y!mcjC\cJb+L`,/JmD'IuTHX,;)R)[JY>BrUY9=lAU6:`hOIW7VQodo_%YYV9T&H_KQ%3ucTZja6>M'^Btl
%49><PX*1ZiqK1]T<k))A.Pd_A]A<-P5Q.HCA8-Aid;BH&;5NO/5CE(WVpA^uF+!rb?b^mb-WY*\]/QpCr8%Y6^?,+`hqpYHHiNIl
%nrWOnkM=I6Z2;TANZU2P42#8B*cfh'BVqRDr_)W!WA=auN\K9PK5Apo5&6..Pi6u2*FV34]H![dk6O@W!"ZT.G!_$G$3H+D>"Q&H
%Ru"<la9d]88>UEsceoqk+@d)"(Xu>QX^s?=e.75E0pErGU8hQ)>*JpaP?rpLMKXhT(HL9k8=P=J)t+*RURAm8<Nn@bE^;M1s"tLP
%4tIIJJciZ/`%FG\HY)"E_[uRB!t!MF#PFG<o4HLg@EQ=@=/LZoh8*g\Sjt)dH."s*>oQ+.d?2Ii?e1H>p.hW&1RK5X$]IV`li'3k
%'cMUX6>4.=1JFD9Cnn#`5\7lJeY$dsg9fjuT2\MfrM5DXYqN3L^cb/Y"iK>]i!tkXjASf41=Cm120q)-Bf%31JdX'>3/2A!b__HM
%R!5!/*+<kT69?ED&_H<+6\^h1I6$F/64^d&XJ(5<.-OOcQLm$&#RuJA^bC4kAsP/#gIDbVojR3EFD`90f,)mNN*Y_16'2bXTqIMc
%WFLnbRS1Ku`L,^;BPaEO):TRX?nKCT;'oa=#GQI)1SMF@%/#SK)@69IP!om3S="FbpDc3aN-!+6[E1%2op0Fajtq8+9GoPk6<=ag
%bL_M3!Nd;!.scc/+[U[^B1U@A\XtmK*+g%`W%B.YJj*$%oaDWTJg;(XI2RLb+;_^K:6qu4dTk_f2#"eE$l:M#Obh=E=@@74Dl%pI
%RFOSN'MKCQm84NOFkbleKKG,II85K4:&I6ep`1pq%+.KD6R[6N9M8pIK[6Zmnp"8O%"cPW/:'c#ZugKXSi)jbJSptuCGI2o01,Z3
%7X^UE]bTe:TZc^h\@2aM*"86\X_20Y&\A^f)']hhY2i^<$64?:,*dDmW3s9SV8["&Qr4527^HlbW9/)72=mX:f]]6mXjHZ9Q]opT
%^3qD_1g):[:*o(h"YPDhgFti#4V;]tNf_uH#cjR&S7B$_U7mXH;55cD;(Z7U^SG!R8Ap/\!HjY1*%&OOXPRe.K+cbr1]nZXU6=Yk
%iX&<A)B!dmZY_^mW';R09i-=#bUM801f^"P07#H_4'=tOh$QIbQ*,2kk"-SmN8$bgJ-+jQZl/u/!Ni+<`D@[6Yo4K7$*)CkZ?T-0
%B05@Z8SdN:ajIC6UK0<@L+mpc'Uh8t/J`Y;bf-!7Qq$/;Zf7;V8:YGU6O]uU`Gn_X08%G;(4`\oIQST1braEnf.bph<#HYfq(Q4F
%O>2[dU.7sNZZe7**VOEpgR27$VD.7;pn14tld5aF:a6?#G'(66;Z9$<d;F&p6430>khX<&@2-#*>)Z#<D9sCiCF&N<e.tR?,kB"Y
%NG>44!7KkI.<^uMYY=,jX:0rU"cpl5FOUj9<0\#(k%ZR7&2GdYOjjqM=Urgcl^N<0]+2+D-l+KIR^9uuMX[g"(2"sqN10'ad.B<J
%>`)B'cX9R<=D&W[ksSW9T-m#k><JG4``WVq8.;QReS2qVJ9j;g3^KUjnZ6U00T!KMH&Z#'$ZS.)Xc*EF(Wq,>+L5>9:d4s=`=Q6C
%`^:.'Jk8\9Q@M>'GhA-)!\=od#pg6.;]shnT&bV)UOt0SSQ.EaGdPu<OkJi:Zlpo_`YC:]m$QAjC<[4k:f4b<J:pLYL3k>u;+1g+
%Fe\%33_h:Wh$B%+huV*FSl!+[G0H=QWhDup&d3##0P]qEL-]YXTJAc3FAU\fSJ9f0C]t!(B3\\qW69]f4Z^Kb(mHU>WN7O^EhhSC
%WtW;`DjB_BJPlVJrJpP7e.n?K/JL)th&NS#34_qSN@lu0OM[]I&W0,=>tQZ64:E?h62<&[fa)R>)1cj+o>-H!e.tYO;lMq'K*p"$
%K3%sSHP6<-LH"t(je--XN&b;6/!pC9LG2*VAJdK8Wno()3DmKu_1W,<Dr`aKb*2<<(52q(GP0l7h:"I8rdca4X!I*0L_gP+'r*&Z
%BLq1!A15-RG4fkL98;b-SGoT$m<EClbpD4D@S)he-V[=*&T7oD%$G]<a]T!NR@H%3M%M%u-5lt<]U-08UO$hqN#`c>?_iq._K=c,
%ag8QT.0h#\!58f(%?lNE9hZjSZkouX'hBM8EH%]th.:-0CRI=PgYm*_h-\5E,7:r$HQ;*tM)?\.jG.sq.kB%-JSPK8"<Em9Do8NH
%NKKfX()]A^Fft9XU'ZK66YLRF[_fqpi1/L)2&dNl!b3%1M^L7@gBA$oK7/A\^G+do6JLR>VkNh+Ld*p'pX>.F'dkj_&oEeCadXh?
%W':chA7l+3)2oRK&&kV`j\P-F/".)d1s!gA@YfT':s<<.T/9B/Psq>HUK2)#)LtP=emtt+K%9K;;tC\QY;Gip=[bM64-$HsLg?,&
%JCZB3<:""/:L7O6BdlPG9C6-W=C5u&/23_C)h8cc%epQI-mZmlkA;HMPuqfqn)NUtZRY3KdKqUoV=\`$;d/"6;ZU:X#G;1X'QjcK
%"b-<Mr)_.!qtNu7:rC+(a=q>54Y=*!=Qq^,oT<$,rE^%9ToGg$`5mT<Vn"@[12183_(??K/J"(DD/r[mCns>_<P2gDkZDlM4Y$3N
%UF&/I3g["7BZ8_VmN)O^I+H)1C*iOB#5'Z\&[_YmKB->E[3C0j,D/bl[qD[?=@,kZ3\nIh;CM#?OkjXC["'&j]bPk3(tA"MSS;[a
%,No3M+63><(YP.JJY$KhYCdVB!ND,_`F`&l^a`tI':VV='m)7lLrlqkG84Q)MSd4J6,u*oM+:4!YZj9H(p)W7R!Y7V3'qo2?4NY_
%*NhlT!+]&kUf5D[G55rJ@RLfQ#-SQVcj'*g*2'r=>/_=!%/S?o_dl(goQ6sFJB3#6jsW\e>.?\3!3hcoVjal<Zoh!)6UUA8&jWR,
%"_d:BKEaItMYRPM(>2nej43h6!?"i");Utb#Ye`;g%H&F9[e&j)8)cEL`0:2KXFsX1H8L.[Hn_<@+D0\3%K'9*6I2:$5UKjj3*J#
%mm'Sn-4S\)o1`"-/*`d_Fb@&GU9C*DRrKiY4ss$%Ti@p1`Y*[7TWc;`ULNg[VRI(^X/D@+$,WV``FPcJ\e*[kHXJ!)`9SQX:5^3(
%01+6/5oM']M!AbE6?G"L*9N"gC(fP6ZS1ObaM"OrOL7&H[<[^sDop(?cWcTZYEAC/qK()K295qa1^oh#JdP(U]1$_/-mjXY=m`TR
%g;[bFV:npSR'fg&bA,GQOs]L'7MS$2\[^&gg6rN^0;F0_.L_cAJ7kgG&ug^=JVftQ_Bk/#22m[c$L\i+6DNjZm9s]0"QnlbAV&-2
%AfO4BJfP6K_Gi8=&/p:$SKi@O-dg18,BThD.<:U)C3fk3N@:P^BtY$APT2/rZ\SW4iR+t=-.E:MEF7,2a@oYBI+^+]R[XH/$Hp`r
%H`3;e5m1'`58Aeo.m]r"q7$iIAS)p@F`<o#W5uWmm!C/_>$[fsB%1*U&'I2Q_TCRmKZoDs1d.V(Bsj?O:(t]E_^A#"lkE<tmSLNh
%>B/.B4LOZ,j5[KH%]a:n*FclOSdU*8%2GBrNMi`_+=OX_o`7NT#E=2KRA)&+f0uF.blPk]a9eK6f(R8o&[Z#5o#8^P#2te1Yi;9Y
%l+EJ5BGj:@'RCa6_.kUG>j42WQIGc/S=S5c&qH@:#j"lpcNq&"r+a4c,6gZ?5L!`>W3-urW`m6M@sk5&5=/qSPX4:he!u%Y/r%&)
%[O+_hS^aR0'iCNF&j1`5Z]rurct>$471\6taW;/^Zobs5G&'r[E!a$eQorL=aeb^rlbR!AkROO)7J>"()!i`K#WV)S*kg$a/[La4
%Xl7Dhd2FP;@`h*QXSE/ePm]GlG*pOgO$K"=7D2j^NabC*0cXq'&fsbQ&(t"D7)h?UC/QG]0PN'FSShai#u&Y<RY]7,BY)R.=h,M8
%ZuGkNrk^HqWAY%?X=9igG):N.9t!aJj!<P^ictr8ZcD@%[!2U@_Mi+nN/Eg:*Ad/u0#m9mE_6p3os."?>oDo[,MjTUU!a%b",+0o
%0p`*7Z\+[8[Qmm:nZ!5\AVBE<OX>aQOG^@^-7G14oZSXPS],'UL3gh=Kb/MI<EcR\F2=Na+Zk^'#E`0bN3f%$]`q`md>uiGA=te<
%RFNm'00lriWdi9TTlF1^2[2k9>j=t-gAcbn_*-Y]Jdj&!!f?HE9_L07RM90_1'5C4'q&^8CcOncOQh#Roee3Y^SI^Z-FL,f.V?6E
%fIQ;9/DT7[ZBn[;AC?XO=@EEj^gP'Q,1[A/Vo#R#='814Y-0[$I'J`1jp5,;ZNp\eUkEbBeN(aOi1sgZ;i+mMn[#Q<2MQ=Z&lMU3
%erUQbWKGC2Jh56:J[9GR9tIIo<>$?n:"II,0^$c`=[^a#W:)%*U!#/)[8gN:.gI=d)@$oE"U:au*qU0b9_0,9Wi;-5SH@iX*Ep-q
%@-&0DrCuRNd&O#M^23J6R6q8]'D>+E#-e1c(IO:OkHVT5Z=a)6WhCSM/t=R(RObJO)($l2?!kKHnnOSg(gn(i#nNp_7]_hlHT,&T
%2@,[$>O5!+IRLCFp9:@#ZT?;V3ZB`jR-4`DN[58Efs+tigqUW`GedmW[,>q;DrC[4!JE5("NF,"=S=&t5D,']d8;[A>4K2R3?%]K
%!u>Q>VE(`r^h/mYdrKFiQkS"o2U+:b$LA'G,!;(OCsk_;J;,*Y8mVQ*j&AqK8&FGb'V5r==5$5$i<nnQZkGa7/C3d1>a+^a<\e=+
%"=Tk:A5.Pf1F^eiNI=GJ\3eL\IG:E=_;[D+(?;"?CHm?Q8;;>`V7+i3#I4g=N;Buc$j6NE&PXC"l;iX4(T7&6d!Gu]1-@m_bcIl0
%pbEM\gS0rcOqkg8%TIkY$NqMA[a]^?;eEGI6E-fdQ^%hDA\*L`E)Np"6'XDN]?9qU`Mkk1%HHB)WiD5cDG[ui+dm>>MBIt"iX46E
%r>a2VD\g\&G:&0jU8mu&m6sUCW&Ra--!F>K*1op>mV@\98K!8_;GoV[D<"esS6je]<X$HNnmjJ8;G\?uReZ0[;GV\c<ZPjN:)po,
%&"uu07g<@5g3I%"*#Shs3FKNO<"N!/-'$nH`L+B(3*q(Gpni[A8pk;0`.q@_E&B_;X`c\l(4g.:[DP.=4LZd\?7/Z$LL[p;U-r*C
%*$GQck.</aNlBIN<pGF7"pY!lbHg(_PgVD?Wo4MtVV/GQiB.a=7TpK8LQXP^T-uS7@B3ccg7i,&[.'&Q0g*YqG[(T1;g1WDg-r\o
%6oPSkG=:m@,@Tg:Z"i6F/Q2)=@c=\:1%W_+Kem<V!UZ^_3+H_O[ji+fiu/<d>,?2f1nCPT'aeSCqQq^cT(jK_f*[3VreQ8!QA*0r
%?]>0(TbIi(a[-2sejA=D-q/(MZ;<OG2mAlGW=ob.aoL]qR;ci?_4nih%f(90*(MFjN]6TmW:qUT&M8ZtK3BF'TE)0YD$@f@98="g
%W"0C*K8$j/H16*d0PRQtc;Mk0XGVYV8U]R*3&jN(_J3=kK4BC5TRBZU*.'Lc7A*Ta8$+?npsN.H8#`Tj.t+N.c<%pZgm&(6#qUk@
%=tE=!oA+A):tO.R4:fI4F=RgWp%5)s[G.%2hFT5KC&XS:rT4LLR-W;S#"R#DbFdA/=@-nGXZ1Rk=]>XXDItb0H#Sdtka>TqS-?Ks
%KeLW%URQ1=WV+)1-in;q[6?Q#H/ZFHbPL/(7DmPYl[uOBf"`cmI=6'_9:b1*Ys(,b"cD0f!oY]1j]JUr.hGH1EcA`-#j4;#R"&9H
%KL7G*OPZ]q39paSoQ@,DcGED*T0Oh:NZNWAc_<Za%'NjIh!0NuK?%Wd_>.t,Ah>[YK>Y'#UW;WpK\5HX<qGbFK/8T_Q#Nc7c=kK(
%(>Vk1*0),Xj0CkYA"oJ$XZe^j=PKq.#A:SS.i@-cK7d=31fl7>%R-`Ng_](gC!&`-=Y1.Z'-O(JXZSR[G0/1^>Bt1l";If8e\N85
%bQ<Z(l@[!1p]%SoY0D)/=-i&o8*E1qM^,e\9Y0ecg%o5W[Vt%RgBu+eA&XEH$4$b\N'MmqJs+[!roRC2B3*PC#=O+eFj>PQgg`]U
%Fm>*MSbor5+iEI;i&GUb.N1L\+VHo3-4M%:''YCJiI`(iF[\COK-PBS?BR<43:]HGQSj/06:_m'We(a6V6P[1^^%?%cHW'CK3LYm
%q@.[gJd@JYXbh&?0mD@1_/[a0"?i?mK*/>#&A#']K56sp"<Lenenj8sMjWII`<RK'f'pN;W=1sdn\O>[ki4-Vq"P.)%9u)>+ugN3
%Ul2p`gq7\InDG9q*&elZS-_JK,[?$.-Z1;uoF)er`.euVi5)OG6CJK-*&1Lf4O)j$&QY)\G_65k/5@rs%3?M@A.jdFi5%"7l*;>g
%_%G?HCdWs_-]Y8.L/6dEZ#pe#>iEL:!#RP66hA;W.3.$V#DZs6aBusmLP4eq`s5*PTPO(Q&KdMKE`p4$M%<A.@:GhPnA4AY&NcuN
%K8V"Q&KcDukmSZ(:)[nr)a64^Vh>@Vn\GMr2lQ=0ie(_F"Mdk(_-+D69%q&c-d*o:bmbcMOBE]k&K`".2N"q,`<XFl_G9<T%ur)M
%Xhl&"*+GTuD#iP-&5gLQ&<<NCZ'$P$3"EM#A]bH)>];W=klB[E)@hS61Q5@#Y*I962SjA?OkO[QiJ&a&K@p51-PTJPB`n^^0eEc]
%"qV9S:;ML!!9&SI9t?2_i<Fj3Va'PKiL-45,<U2le52^0K>VUtNE-,d8(]Z=e?QhmS-L1l.H#B,P+$7/i5l>K6N[OR7<#Z4\DUV"
%/p:?90O/kO6,@'3nXa0@7mnoe5:Rp<@n*>hZU,5"^2shjNdM2WD&XP++Yj30SI$>sLRu$QM?hG4@hLOS4E,Hd#[[HD%if%K+0+:N
%Z\(R=W>#j_&tsZ@iIPW^e%#qn%Qf<]#n7?62N0t\Nc<p-2&:1"!tQt<hpB0Jr:Z1PmUXuLD<qHD372]%hqk$@$.21+Fd+.k%d)Et
%fJULM2I8\Z7:O^Oe1Eo(Cs<O)nI-QXDU@;3*XH4t#sf#on`N,J)o&"-Jc[lVMleWqZGNN3!<nK54DE646@m&F+=!=AJJ0dNN_dOo
%LZO9`3J@NI\(_/k:9%69OYe>&_es3j2NY_BrXhV:705tm6ReZC$(O^KNg348,]K4%+cenH&84GO'F:5aWBd:r:uDmedt,;/@i1X8
%J`D13ES7##$(Hf]d09d"(I^H6"pN;L*^g/M'KAfp,7rjf!bXGf[CYLu$kb44-6!RW4+)Q6d#c$\@kqa."AU45Jk.gCE#R.UK9u^k
%'316u6k'El.7S'K"pE5%E+8Fi'F:5)eq?2%5i@<eV3*G6!b_$35.KR%dqYNVf5SM+kK*Z&3=\"T[b3dkE52e37d\rL^kmBYSsC6(
%3-,\"&M8u6O961Kg)UD<&lu3^EPTP(*6O'>%S=(6c%lI>fL6!sAqgE5Vt)64*,l,("_`=A"4$TW8[^#W344]Q4t@+&9LIdrSDf!.
%j,ga__13IkeKU_JK)nIrKN1>Z#+Vl31"ls:%blQE2KKjWSt&?)F<#7PqJR:M%0mjc@U78e^^X_/WN]T(hOq6[*<mLuN!LKK@)2S3
%6C9YJE#LY$_.ta_L.J@W!sK\%.CC`:"e>@WCt+oIJ?pkb/1_56S4-1XFU\MEP!RoY&I$s3@\ne\c?DOQ77RBVfC'FCEC9h?QOZC!
%M?8eM,M5IU!B9)^8fJo27&K#i'a#F#3070@+i#g3/?PL2J?oik6pF"gj7Nj)q\o[J&]f_eLB+6:Wjk?F;aOZd"p%I*>1MdIi:N;9
%;Dp7c`0Mf^FQO.mZuql_IM2gRj#-%S_uM1Q-&[e\(uR@Z(]in=i1c9+)F;/a%9T4b+Q0Vs;WC&$?FjL7,'4J#S1pM84.'H,'Dp1W
%=\&s?\:92"lPSP^'O#T;`;o(qU7uQSi%/IRVVEU-\>6"N":*^=J<c,s0#4nV,U3dY`0t1:*,m8$aT9q2^_%:mFRp@]38U+Gl4*rW
%09aXD!s5Cpj0]:^X>"Ql*AemXgl21E1E:@m5k1rN;&jQ?7s=P`*,s#4%t4Tc*+D4oC,k,a)B;ViGr?d,3Ca+j>%^>k7fd8=(e]d"
%.,ZWhZ"8LgcH$jE)&`iA$g=<c@ZDkp8>QY98j`VlY"I?aV^UI3aCL<(BXViD]"8FSc?']Z_D<$Jg7a*7/i_eUs(&@9+b<:q-LIrb
%'"H$j*RKn`=nG3,^4lb#91*Y9B1Ut)$5%ui+b:l(-@C:P#ojRDop[+U6d3-GL'3N,."2"-$(OjV!XCY0E)mn*XD:AbHmnBA)%no0
%V=:fK,]HF30m5Vk3&</iK:*m6@u1J9:.#*'4H\@$,D!0rXeiBce0Tl.`=W@qj\$Ab)]]5ilGF0gRj!?hSrWp:"pJnsOP20I;\Vl%
%kZVRpi3[pGG9[g3@921&&IP$3?=]h%6%M[Z97),59!IlI$@;s\cJ#k*+^;(Wo,?V&:uKnQ8Eq0%S7CM7]1KLVNV;Lu%L$a0#(l#7
%i#&iF+_X^1YdngMB`e\^dC*Rj)54i+H@0.P!pAXn0:5%V,DB3.8LGMc*/37TDC/3<5S^EAFunkai9]D0KC!0cm0nk85(`oL#8l4!
%)\b8(NeQho6%QA'9^Y)u!_4&q5T(sc38;Wt<7Se"nJ4tUhksl?G[9$D%1=-`?(0M\=Q!<F1,TLK>U5+/2(W_G<$YBnE!61U\O!L9
%0pIQ;4CWk7MU[V^i$^o>,sm@gLI</j.24c(5r^tF'K@W7"j^DH^i9fhKc(L_WnJ\knJ`*#+.D0p"HI#ICkil>3'KqcT*>FYjK6AR
%'aYj>\M=CG-u`X'&>#R]JMR;]\U-@O3#8`OM&I'frQ9j4DWp(Lj`?huJW%-Sb(p5H*"Rt=)AY:XlmSB6Jb,sVHoocB8'I"iY_E>l
%!W2b+B].)Ei@o(]i;@s>*t8a.bP/b)m.&qWi%1:lmlA8f2lsW$Di3P*bCGaG:[u5o%p`p>AD:GmOJ+*d_L]&!:m`%6%\,uL"QGg-
%JR^L6<_c.IE0c,eD2;VB!//JL+>Z-!Sjl/dF..V/D>bt+q"C&'pd%&^4E,Hl+fIWG"/dRScb&4gA*FZS[,Z]N^kTOZ1H]W82dOUe
%#L5.V>MpD@\7pXEF$+Dt&P_J.i7LL-h01htCjQ6*cf)\09.@,aE8Ztbpj!&Kc:>+HTYZ3>)73X1*4Xo\!$6+a#>PdA?1o9KS8%m@
%m0Eq,f=\7@5DK>r+&@FCL'GrU!/ju!)E=GlR0Mj`%3/h$G]Yc]psfF0f$M2AM5?UUSt^d'S.1=S'b-\<4j,m@.2k2&c4Ed\Tn+/G
%gCp#NdD58nJeU:6"%V9%HZfrL)E8uFopC;],7b;IXH!IEN'h\#/8uB$%!_p^*6F-P_h\GU\lAA81aMRb9PAJiE5VgQo-4`)"G=lB
%$oh^HSqqts'QC!(,[rh@34o0r*AP?fEdc.T^l*5GF9HR$7)ZO++b1O*2+0MMJ3tN%U'T\3m,<VTSg&[eb`6g;%0.AK%bgmD!8r],
%e;j=]khMm7eDS*01k@M<6iVm^9e9O<s$e(pTh6:!2t5)mcT9,GL:rgr1P,OcN$u-Zl$+;YU<S8(iNj%>lo-r-=h:B,hl*hiPM6N<
%4#m<dm\&GS.c4(>7aQ(2#t`T2^EF2Fncnqb#nhE&cu6!lp4mk=Dg7^^!r3;\&(m+f`:)80f`Ak8Me@Pqg$l`72YmleD]E$S<#XD5
%<mpLJp5SpROuK&JM.ddLM"H\9An%V^I5=DAd%F=5Di.[IU.F/U+9p>X^*00n1.V0n"B?utco7IYB?CG(G;0`6lS.5[=\d8'.,UtA
%(3J.Wa>Zk+T1=]UA1CFGd/^mH]PCo0cg\W+g(#.\Rm8sc^(&p<\L$RY%,Dl(R)#-Si83,!N.!O!DeP]_1:epA2\N#V^MhKU'"90-
%mhFIp@X^_#p4e7aHQCh020*NcR:1G0bbRK/pP,JGD>0An)Z#0?V)/;K7[q=-m"k$<KaR]uL?smQF2Y1]?uKX1d.#D$]o1<Rb^dBp
%Sp&h6`/FaOSe0'3^tsnE;_ua^]c$`<j\88=B&#Ts4!K#-b)aQl3O1T,'a'i)41$s,j1r'k6[Rkki^\*(D]ElLf5r7E2bn*Kd;ru>
%>_o]=NpKJ++_:<]fc+C8gCET[$'Q\VgRF3r+Y(YLgRD&N'EU+-Dcdh"e9>_I=<L;:c`t/t,j"5ZCi>!h#=JVT[PoJ[Gr*A3Q4UD4
%,ITPkpU8_7m7hE7W!M^Q-l%Z]34"M19ku.*T_aK4:".=?&_rj_1"\=7Hd`+--c-;I)hDtm?YeTVX:]O$No8cK2@E^(B&MN63j:f-
%^tfXRa-(>uhK/irEA7^m2WDQ>&_pTBUMe$DQ:o(!Zo:X@O=onHhCL&equVTG7Q,hQIoBlr-;rLohiPN+\?)4faPNGcV#1]I[Pu+^
%[!Nb#2gnOh&=I!Sj'rtBm+C0LnIdcIHc&Wge9DJjboe]?\jCa2^c(NhmENSi&2oW`=dR%TVBL<(^1SJ3%,%+N5=%1Bfc0GbU'rqj
%DaVr)j#<(5g#gU*W$-Monr.2<%,)ZGUHjl!BQ#ktN1P0*Dh6rqcMA.,)ds^ppLqq1)Uo0?Zo8)ZZl3Q'hJA$7A?8.F1J0'oi!Sk2
%2e2c8%df6H5BFa`g)ECE5A5f<%4Qj_)R).R)jF2fMjaje7a-Fs&Tn^RU]Gfu4E$JsAd%g>Pb'2s%G2U43<gG,2a[4)Fu0<pAmCDQ
%!tEm%OoV'$J\@J=ZOGDZJ\B`l@[n<u]d9</o8)a-7m@Q"GDb`]r0>'1.'bd0]b)r`*SQu33>Q/OYe?G`7L;r4p80TurA2LfVFi+8
%LLPU/);8anCi;i]KUb>TZf%3%/IgGRH_8>G#PVi<\1qk'gm_/(M)d&q2tngLWe5Xc+qU>%E,TVrdu.8gQ\Ei0L@)\Ah;9%,GjeBe
%W'KTEQsk?J/ht]i=);f`kn0GZ@=&Z8G>S0Z`:fM66WZ`nD`Y,EN6pF#980fh#42kPMhiMcg07J)2N6#>oSt_!Dl1n<ZmAg[hk7Yc
%e'HImL@)\QV&t._ImpJYW=H"$$s=<1oq2p1nc"(C;5o8Q5f6Hs?5qm[+9Wf7X:Z_DV'?KGA@QhsY2rdj8fBUe8UE-F'-6t[UVa8/
%"tuK8Lf(H@(e,p@QO%+.A3guQ4/=KkFa$AgoV,*:=cW^$6ZtCMe?L3e#*;.e%D/>s6]__]e[U6Y?)Ts6(aMN;?M["Q_aMt0]nl>K
%n&#K4(.)`R.KEpS&j]Dn$X+6Wm<?Fa5Wi8t2*a*4D<#&5&mg/%C!/R1(8LUP=tIfHP_GjQ#j*'Ob(><<=PXYQNR$8M#^6>X=5^01
%#q-><HGWoLLu]gQ87/XnL+qH"Y*H#6E?UH2fr&_`'jI=lMc/34TcJh.`!_:FMttN2706R>I9B*mn$nVO6"r4WGh*LSFHA&-/K,)n
%Tj9&K;q.q)7(<k+>[.9YM"3:@-@]F\FU2<,][7gO^00KP</N;&pa!gLr"Mu("3OLbM7+Y/U;r0^42g\g9E=D[9'W^:,a$%H'&VJX
%#E-eV$q3X%d(p2AMJG]qgi7a%nJ$h;-9m2q`ILt1&h:dTA6E-EV.AN;e#%bd$isp:h!Ytu!!#S#Yh!2\K`pPNN-dg[dL006`N`$g
%>beZ0*XNZ$pAg+UH+VFp",'pQG0HBYE5"/cS\tm:r9GXO5c_eRdXb+M^s,@EP%.(G&a,_t8,Zj-(e4B"3#;QH*4^fdVFNJc&\?.Y
%9/`\6J*Mab!C/Yt?kV(.-SQ`Lr4'<,@'dJW!Cl'KUfk$;7,8G#'2$,n-E<cf_K*'6-<<fBi5Dq#!"sP6&.jQQTn/o8UE#/od;8oO
%!Z3g*'hRKH6=e:dNi]NT"\G<YEQh"%6QV9_"SU-gCZhh4'/4jS"FABBcs,1g9MCVbWA:1mi/\>_$,HnPKs/C6oRUQC*Q6CI&"kLE
%I?'=?IOJ/0d".`sKuf%46/%-^5)pj^1P[@ahE*!cn<tbU:@_>akt_@4TJG,]7?TnDm#IQEDX`<58\2)*CJdk.0+sK^&?_c>b5klt
%*U"<;<4e6Z.):ICT0GR_;BeLf!9"V5S,m$rko^7DS3hP?N&,!1%@8_XL=F<)a,W4Y!pO^;Ai5&?Io(?biG]EY"Fq`6!="HAGAq/W
%]-@XcK9JMGbU>0dSMXj@b&l'njLcZ>6c,,T)jgm3%hKIAI?n`X$5<T8+(C<#$(l_lHUq7.8."gj@E"O5JW/h$Oc+LHdS672luU3^
%2R0[H3-O*9d9-)&0sa<CpPqpc7MJgV8I:W"6FEAlT/)SnkfE;+&OFA/7c^/N'-t');c3G>>Ao$mN&Ah2&1f?-`*oB$G!S&L@q]S3
%7d6KjF]+'"-tZ*a<pYA-7`RF3Xq$%9-Lq7ZEY-d@Z\%>+**LF?6#J"lQ-O*]/e&M:]2PQq@+1"<5&q/#WIE4**+Hc-&`QZsN1sBY
%_hoV#HhMu^SC5D*QR?6X:)uBYP9Qr^f-!1"BKV&fX'gbLDSq02E8IgC8\bL$J3r>\U,2l`Q\USq_i>*lYsipIf-u#Mn-jJg@Z</8
%N;"1d7^,cB;5sB.=jB]E-<N2EQ.C9N%FX*fj2mrWS];][Gt6.'N,)JnF\!-S.&rlOjHU##c$4$28d't<-A7%+lNG;Hgt;JSqKb\U
%OJW_k$)GeT!,[gKGDOoRm@+:Zpk8LIgO_b8VTp2A<#HTr$q>c6&P=$nR197eaEo(offUpDj'[L%Zk/WFJ@@i4_1[D-+VP>`8$7h`
%d5puT@KQTSLYFdE"=Xu'eR8g\1rrI6#FN;\Hp.DD/=-2JRgqjtZ(\`p9PRau@n`"FPbo08miYCN^cSVKZ3(/$Wjg26+A\]F%,uqM
%gC^Rp9+1]nBM="'_J@):(=U'p3E)`)K\^6bCLi?X,"#c8H&\Uic=5WA4WY-o/gEZX'hj!UiB^AnF(=E%gcBFTBNM0GgmV/R,b;&b
%W`HX)_6ke(EhGu-,.>]IOID#UDM7K1F`(@e-46S8\<W6lH>t%%9H>t10ls*l5mpW7g^')m(58tq@V>:#/P0:c;(9g%eDu9H2!Z$;
%V@ikI3!+5J1$rGN0#J6a'GlXchAYfUfGQ/#8(ElI,pIkr.c]qgYt#mnSE'uqI9=ML&9UA)F8)J.',)o=SBDZWfouV;WlDKUMj1$<
%7oUbFL1bV^Cqae%<+Dj-(V@-7K6gRLK0''S%;U`#)?.oPOVinoL^1^+O.G(5&UM@M($8@%"83t>`X6':8X1MG6UMLI8!6[`&NMr[
%]nAi%oa)Y;"(%5#P-'sfV^Seo@5=,]3".q18%K(a\ZNQ^%*>5D)hB7@OK_Ul&on!9167T_L;rB_7LjEO0KD>D3X=!A\Idg'3GT["
%*ANkEJ4CK$%QGsM?NVOpG&6*NnBA\3h`SR;c4SWa2N*]fi2a;FAK]VMRmdWP7kt[,qd^kQ&5lCWTr.28V*nT+!_nuF\-isQ`$f#.
%LDCY(+f_f2O=/MeTE56(%IFX5Z_/8,C,OJ([L=.I2/Pe)/Xc_Pj/^,6JtYkc_6*2(n3d&TLt@"/mH;8:3TcNr$ku"B?Sqp.7)jMH
%J4Y[^.sj_1;mbHt-)RXL^X$\[:/j9>BQj%3N)*:[Kd"Nh-enr/3g`*p]n.;J]F&t+)8F"0Jg2;]*NQ>.`E[rF"RCX[)pb!HCQRb7
%(WCPs//_>t1k?9YBQ)CF*U/sMA>/qOe(BS)CuR=`V&KR$'lUrm@-hN!`Q#%hL'3qJU#"S>+_(4EaItR'Fcc$?(pbcLO_6u]0bW!8
%/GdO%9m.*2K3c0X+<%l_ThUUq5/,,uXseHc@NE#(K%/A#e])tBKCH,Oqlk.)=eKVf-6gI/&C+q4"UB+0"VS?P'?lC9cSX^J][9R#
%%o%0T=A5<O6;SFdh&R#L&/:r![%r*Vc?In;^`_cSo'?Ir+sQCph?qeZ@fAcpEedrY3d;^m9*2u)ee*'@!fI(%V`Jj$O<F5u!K1d*
%Z7"?_q9n4I_pfq72s^e/j20/<"X-Q$p$2KP?h+=(91Xl=dOs].AAR#"5'/$r-Et@#k90\i!'grC$UGm</qr3eNA2aP_ZZR3d]'NH
%#nd>2C=;(P<[!H$LH&r);p?^akCka7JF.k637%"o6rT;EdV/=^[R^VUZ-p-jT^.b:Pb=HG+%R+Q[Ug?hqTC"G?(PA,OR[@Fr7(dL
%(_XsPqqVRe2qhJ%kc<ACJ^kZ)+6?Y=Nj4?lJ3i2*o/lD(KAME,7h)iA8run??kB5jN]N+Kf[o>'^hNmJ]U/4^U<9]1(sYDee$`)E
%-U.kH>=<FhKWUYSoNqE--B]edJ;Bof?k%Ch@$#10k;g]nHr,-S/l?+,#s7s-@:ZQphQ"(_^dg<#?)0bn:$Ba#oc[P##ijiWQ]_cs
%:"r0iX?B3a3@"M6!@)rQYfE-Lm/qRCUAN"b;;%3p0.d]#`nlm"CeJ@dj]<MqS![/E6lfY<+S:XZ%6WVOEIB>VR!]U[M`o.TZW%g(
%_E$jiT]P<of(!h#kK\4oNdHjT7>66r'/^]H4V8c,Loi8[I,36IIN^&]0_Us100fg]lN,`NgDN4ELn(R9VT8A/h&M3=fhL8=2nt8"
%\'D0NJ(Lr/5tS33'+'jo[LeV[4H0o.*W"Nq,S0Dd`0X%r*J8J0de&AA`5_VL:>CYO';2/ZBOY=YB`qIFJcZdXZ=+1G<n\nnXUm&k
%<[6GQka\1D/jDae4Za^R(D*[Z*Rn0cgd%YM/jdul#&>NBLSH*%.UGYW-ID8sn2&SUA.]5mRo<edPu+lf_jLY&72$*-&<9'o)$8-c
%OnB.K7>r"t^!ZUE74+cC.7tJf:WcRr"5AU^X;Kl^0Xcmn%-p!JcBNlh8:(7bZqfF0%\]:)Us?)#I6b%lSJE4?[OL*aS3!YmnM7l_
%%uA=N9uR)U@fIVY1bqNO<KZ97A%cU,B&g"$Z(PMoSr"kL:s(]W6bXO`3alk#EpWs:,lqjW^6IRmQ(7Lj_<qpj10pu"AaErhW]h;D
%Piaa2*OYn\''_qSDHQ:dWKHCY6gK!R2NrdoM5=81%Z+!4Sp>l]$$:cVprt&_F^Rt*hHc@>HU*cGbS*H^EGARm8H>%69'!Fk!ii9I
%NWXKW7)&bB=B]Ns(08s$^j&<55h]!cNu2hrThE<aj[Sj9/@.am@-M'1&d+[a_N!4^;TV0I%tHD>BIk>F3-);od>I8qE$SD&D./U@
%(7tcW&q8E)%Cg@*=i)WrF3#pRSA\L(KXh3g=\tSOrY/S:e+X$?*[\^1-FnebnH<H"O\d"6\mo:jIbO)94h29/?rZ_[p/1^Z&5-C6
%5kh.<oV0]4663@FRR)`P[$ed^SjbuJoXp_HFU9F,dmPT@)enHD7?Bk.%'iZ315%n1.KjaZ@tki!rP0&_l"))4^/0[=@Zre6Cp6f(
%`l^9%l:Mi/AaQ;e//XD!8N@t-^k=EJ=gR<-^_3/.js@@nNBhj>[3qo%%o2+H(fQlr8&CZ<M`h()Y\8n2@29AIF<UZpEZI<07[Q.?
%j>E;op\Ihbf0)GTj</87<-OqdCIVEm=L=qpV/I[#753S3&X=OQ#&L9t'?^Ok]'A0])LVb.WY>b5B43(oXO1R?%Uj5/i,I2A2T!!k
%U0Ej/+s^fRAf+Y]#`Cj/C'(Z\?JYuC!J*4TYW`r"nQlK+,P$)h)0):%R'j[^?mqEE)RM4>OVX)d\tE^Ll9=;F!cI0-b8HH<"/uWj
%=KE(l-GslL\]5PDh4CUu#Yk@+E>ke@YYH/u!N`(g3pI%7V_H=:KqK#!Q=2H^I>nYcd*.Wjp!=Rp;-OMa0BW#M`g_VCc*C<5DT;kI
%$\,fJNYD=5ae_KTC>`*u[n5Q]m6Is\(r=b\:D4%NZBWN,;r'(2AXbH+a@$RbMp1l$q'@d8pe[Hl_&YC-$Wi<<"0]PVq^=2IV7H+p
%(POtpHj1n<F10]QqU,m=W/$8j'Tg0dXLNiQ.WZ$Y6i[Gl>(@kqJA2]';?unl#YlpUf"q(2B8DsOPCAA"('64[1/"*"aF++&kTF1W
%LG\_3*0W8fYpD3?-rUO&3fcrD#Ka(NL/CO@)C3NO5=K8kOrleF:gY309-qsm1MtBMG/EkQa*t7TQ[,;%8]&RakPut^%-[pd!LSR1
%0otkt<n!Rl1X8GGQ/%q`:PqF,_?,onB"DNlAp,LOT8rTOgM+=FO/6UU_ir;bU&bf_Y[O+\,t]'hLs9(eD9m<+FkHB&%)?RWI7(Q,
%F[hD*5pPj7Kf%C)->a=L$;(+sV:V^o[5?g(3MX28T"HM)k\A]C^qPnb18)p9Y!C<jOt?7]lj/3^+k/QoO<H:CiHMQTX@t-Qi'n?u
%*V7FR9+R6f-tWAlQC^U0Y6:PB)(3WAXu[gS%7fadj'ACNeMoG":b0]i'Sb1`kLnL?@^FKV#oG1QSJ[!Hf5Q#WE_KNrL)@sdnphRA
%]Dr-UEVPnH5Zm`\B'HQrgp,u[UHH?Q)^Lc@d7G8WR76QX1"Gf5J[pl;d-J!uSLGQ@ps?rVH>]]q)9SV"K%-0dH%I<W5@d2(]3:('
%k4Ps7paYdl(]a'Zfgpi=1qPH\jk8p,U`NWflD3S_*=ubFK>d7kkS98T5:<*4i!tT,0$U9qJd0dT6'q+bAY932V"Ot!5iu3?80Hc1
%@0q:NjX@&V$:+QCA',^[go,c+4&E"Hbm>3l#o=Z+-kSUoK_c64a,%=p!ILEN'R7u376!UH&[k4fYnr3>.lDcc`%J:]8]8iMj"us1
%/LHrF#_G!u+UMVCS@,R3;#q5BAm:[YPK53kS6:kbW6r0o<"F);gCpk>9)tFN3.-<.:@`9Dr[#;/9)/[j$W;%JJgtFL=b6_qP,Kfk
%;Kd&IR+_&Q9;U%5,fsHF[NPn[URT=@/0"tu3tLjMKR"\O]cf_#"T+JF+YA*m&9.7\;dUqecibu:g-Q@K(>U:8OXLuDP6QjQ_$b6'
%SsQ_)b\E[s76I0\"\=3<pY/6kP<_Z4e9516*t]*BG,-WRlkmgd;%61'H'7_g6c+KDXLUO%ks;?Mk8g*T5jQApnat;,M(U7f#P#Ls
%cOq<#5s!"%3^^?Gf4=DS;^E\cJCl#.K)h(EWpE?^R1^i)fHnq31_KEN:o*8Fd%7&Q'F%M:bg6mfj/YHg8NWY/_6jo(!%L2NNj_)I
%leq_0Po@Xpd'P53*Lr@mAI"$'Gd>"DM.H>P!)u2)M-3H/Oo`Q:R?5@Lc57si#:Uf7KT]5_>,56<ER32<9L5hd5'YlHfgi,#,G%-b
%N>PR:;'\O_%n*lU;EdCl%+ubVpbVK`(3QO:&:#%``?s[g=tC1)hCLCs+b].efu-c!Zq^e%@MmY@PHJo<1s7Nuj.1E'ZV5(p66!Qg
%h-7H]3T]epB-eD5KL60-N!^1Ml+jTF7[(AnS#KkM5`Tss.0N*@_+ZJ<(bhupC#(Ib?g.!'.u3?JLs-Oh+-2N>*4.^$X7crp#9\9-
%A)L:"j)K`d>+rha8qdW$FPT'\kDWgaT54dfG&WBLMED@T6Vkf'QsPXiSGM<jFJ<jb0rbZ//s!D+I>4On99"oG=U7SjfG[\KYmRFo
%ALWPGW!.A8+Q<o:YLG-n@Ek(S's910[$-^%V[s_f2._l:!/pP?4#kSQ[8OI;K:-[/>em_G;'Lk4/upngRm-:l0a(LP(pY1m#dTS\
%Rl.-8HMu2sDIBRM_Bqh;0N?-O&A`3H%"+h^!EmbjBL9q5Yp!.Beqo$4YUGM4_Q$!9NKb>X;Y)f66embS@u,'?YX(+k$sHKF3h``\
%OA79_]b68.$(OScOPT]!BerRK#!k\@!C/&'l6*KK3<5P!bD,hGeuKWiUrs+R-mZt:9aT3=oTa9p!VoaRQ/Q="$qqeS'f6SFe-LAQ
%X!DCB-Mo&2dG(Fd^9O43;QU'^D%Ok0FY*FlZiQo@J]3d@$?UYK'aq)cp/4)s;um1gb"%<dg#0ZNe7Et(+RShG6"-G0!j]V6M?LJH
%"q)3@_RH:@Kk-&A_."`>!7b5lYlb+SbCluc`upLB6gS(s%&n)Z5U28+'N=?f$AXJX)j8'<8:`QT(l<B;"RRRM[=QoE+Ju"%Ilp^`
%[*l/kYQD?eN"Kn)Zh@s>p^kd\HApJa@aD@51E_ZerCBP[5BL(U$oNUuC^D4Skq=0PD-sR]66a2nrCZ@'TX/U3iK&kAO+X0pg>[T+
%c=>P?;WrTGG-f(g7/L:%@o?c$`6ihd_WNled7m(8!q2$%1L4.6ks82K^"+U6pA.WP8<)ksJmSWn.h/U+rS.efg_UBEDfdA*1!,7q
%R"^h#Wf<m'0mF%e?'k'i;LZkBLH9J$4mg;(_2t?_=aCC1Xb(%\9R]r&d6'2$jT8^C12"M]P&X"[!T3r3XF-_&(?@m!R4LG<R7T(f
%E91iaNg6;h4,BqE.tb=GoYV4)LIHE5FFAIG4slI)gHb(P$=Z#c#<%8[.uN@&S^+=R"dTi1GgS0*+O3W)o9#uBq/`jtE01I(?Qb[P
%C'^RgmI8U+-kVdf2m4@(AUt1t%A'CC8-3_MX9Gl^aOUj-6[jck@itq2.T`EU>[T][^"n`nE[A\tpu0*%PQ`CtoJ0%1`,mjj^IRmX
%W$c*j-/=E@8$FFqUbc>M(SXj"(M:YZQU16SnK$;9e@I%N&UnZ6<I=2"ICg4+Yld-;ME'WMk`o^T)2W_!e(WHA4d[l4SQ%^C&s3m6
%][1\'7m[lLOY4p!$F_Q0b6OG@[S:8;Lsq=&A:\E6MH_R*cJDpFcY<[t.CFsh1meRL!lYFa!DlWQl=h*!L^?85,D92WLm3oB[7IW8
%O!r#4:aq%Tj9pVd@8W3W.5SXJ#pFKQVe?h)'+iY7"HbJ`\1&&k(nG1`Kk."S2C(kW$Yb'P,J,@;0,^N.@5"Ho1a2]oi0@mtj<=4I
%YZ,VU;p&GbF>Pm'!<ZhUN+Fp_)5r./PlVFRj4K,tJea:;']BVfrh6Th;#&0K?`ga@3e8t:5q]JfS!.u^`#@R8,04o8UP/:MBC]!=
%.L+nWL-^ZS9U:#3+r4\C6(ZB.;LXHT\EjA'<<3"q#oeJ:0LipL-E4X*94I(0JlkPk&Eu$f-q=r4c<:np[l9;lbB<.^Zqg`-$>W%2
%KTSS]!h,S/N_6NYYhWEj+ELkSaV>G?&J=chPKtaP'q$Uqk3e&paR3W_dB*0gn6ppKQ8OUOpZQ*RUgZU3P0K8Rb).66D?4toW$C5[
%L5r*l[+a4HWX/3O5$c$`Z'1.c,q@Rd6K5m:)+oHg!72bOoWXF2gs9,S_]Y"&dXD='6R54;1CF8p^l([5_"FLapOgtHPF4T*)?=;i
%=Gpi-l+ee#)UdW-oNYG,=%5Fd39o;i#S7SPgS/<o&iT_6-q*h?_YL#<9bG@AZ0[q&!e2B_"&L^Ti7_=nDi+0C"gnoC1sB;NKEWKq
%TT-'sB]5kfckQOGe)<QDE$b"l!Z``+0.h26@/OU<Bem$r613D%8>Dn/MhIPo+`O)gKbO:a;-Lr077K9EnfgrM/L0&l0r"f'(jWUq
%ebXg4*BLb7`?_/L=`F!.%%ubr0,K$gPT]5qab1Q>>u!q^!uFAPglq:9,Gb[C@@]#(O?=)\`h*o=!4aL3JqD-##hB'pLM-"@FL_[e
%(6]l^1DthoM6rA??KOUPju.8:7;WI.fEbgqncq!;89fhD*B7$Z)=0oJaU5O%V!MXmVK6G_I!+"$eo0-)`6rNu:*BTI`e1q![Y=AD
%i@&Eg@7+iP73OqJ,+o12"Lcs/Bq+A)`bGq&:bk9j#m+V4(RK6MOdWDkKEZEjIFrf.4-D`TS[W^r!#D&k-c".t1CPbk\rC/YL5o#s
%E.p[`h1@F.3("P8C^#[;Q;M-/5n0_&8MKY`!a7_MXPiA"iWiGs?6hmgHo`$j>BJ[G5fXB*O9B/oQ*4,N\U]8T.uI';CpHs2)m;AP
%5uIAU.4'O8,Cff]"3Ai_PQ66QSodL[2e*#-?!\%=8!)F<.Lk?'Jc[_d$8k:,n16Dop]B2cq?Tk=kuJ<]6Nth[)jhtpdSt.Q&)b-Q
%i#q5ZK/U:MMTl:)JBO:HBKS,GS=c*N+u_S!#0Gd,F]!<8YYGH4KsE\P#/Z\)?_X?<c#'heP)3IrVXUKYPD&_8+52Fe!G6lppSUIE
%%\X7cg#$3=$32t.ShSI?(h3Z[VjP"$f](G4c:eofid&Ej:IWY?7TMp_'2,_GZb80q;-M9H5gW]:;(q&2&2W!*qpYtM.BBjaa"ldD
%!8>l$*3m7]hh?JLp(;30L@rQd1\q$C"m89i6Tb_q>Q>-kZ%K,T.!#%%qmK/e:6Ko?[%*I2Q[+\3A1Vkt&M+I7-$D]t^#U*:,hSRd
%8O?(N+Qj=@dRf<%E.BBu5;dJa_D!&'^_/F-F<Rjs^M6+e"\0`7GD8p&0lV*_TqfRb6<$:4,!XK2-O%_10Y9nq&d7)K9\cO:Y%%6U
%6prQR/kcSqen,ascjXYS4UBE7p9[G7!"i3MOt+o1`%>D`aRl+!`GCY3Vhr;!&bM@7+/FR?JQ@5FRQQg`)Cts1iW`+*?oZ6&BNaM%
%"F,(-mc8#TgOfK3ZjLg$o4ADO[lS2[$."@o`'Q.e8-mPE`Q+4)[M2_X*Qj+GK1?$NJO>%?0'#d/f,eQq/@a[C4KF&*H\"P;5HJg6
%8YY;*f\t1e+_hd]g9KRkOD\*H&Oo6HC$MJG2?@I=FtDRcE6N\'jl$LsO!+?;d!&j)ALt_a5VooJ#U0hn"kY)lTNd'0BmDPu^<AiN
%*HYj(*f0N<$o4$7p&KA$32YD^Va"0tBRgFg/[=\._@4Z/5]$iR&"<6/$U@oc['KNBW+X.pdBJ4FN/I&j&,l!-H9dI8R"^2=3INCP
%)R%ljcT3MN`DPDUQP\%8bD\E/0/0=</.TfeoXTMh6X_+hL2S%`YS)m5O2A7jaP9O'JKd-!=sNFZm2HWb@bA^N[Po`dV^P*E2hr4o
%0p.21-5>,]JlI>G8Z.TVApTl-4?6_:BUrSko$kT^\7%]DX*CrV)$HX_A2['\RE5!J-#li3/E.k8MQDo)S&)3ohS^l);@n(Z4!jgi
%YEupfA'5*:.C(_CI:s$`0QHL5Jgt4q>8I"PXRm'u';\1Uab.]7JYHS;f&N/d*b93s=W:C\om1Rj+[N.p8IQ%A3/0CdNQ,U[BQaXh
%kD\D<_B^O$+iT9$!XW^:VHJuueD6"Y7RRug4)lXr&$dqCbN>'2/=V>1V40-,g!O%:,a,qj@C^/!&qhIPP>hk=3WLXdF@(9iQNZ.!
%3CVAKCJAsTj>KIl*kFnj1H$[@$E`llj^>'1.1kPq)6G/oTFPZu![/@3bTgRD;8>ec7LM)C?nJ,4#+L<$&bNDV-7oNUrBiYgV",g7
%!Dhcf1j"m9=p!_(S9"aZeEMU;dggklJM=Ar/;bWG--Q?n(ASBeo[s8)H/bS^&lMd)`Be0+M"3jm<H]5Kk!_mK7VdqL*ACu:pqR%:
%M$.k-gm1nCL7PAoK#])jDE&%rj(hcR3p':7$lO+g'<oJYj_"_g9b[^[(pGKrdg/^dc'K#4o,([`lLHN-;:O6X`K"t"d\F`T35J!f
%V#Pt1DgXRRr^EqI@Tg9dI[%oL&UoAX*\ScF'%SRO#&ACH\-Ynb`N4(=lX?f5Z`LZ-@S!=ri>;_-9KuNu7iXRErD@=KP"nOZN+K\N
%Tf]!b*W?aZAj?oZ=m'/rR>PtV-r+C:<-iWenEkgLkjSS,7+u/`1`4mBi?`(E#r-,>jJT95!'!7^'Y$G7'K"^/i?^i<(Oj\QZO#'c
%'A>uW4_o5g7#GV:.L*I3I,2'pPI\iOcD)fOhBGP>g0F^;#)UiO8$,\>T42(p.E?)X9hIAM.Igr0JLjO^nA'PB"LF%[&qMp`[R0NV
%KXhCT=OXBhZ>:h<[:?n-Zkk,i0q4&s;^Er_Z#BW>,KIA3<D&Ks6A8RP<D],dkh=1NKcu\R&Vq2ol\C&nEdFODL?[SDCgSq!62_=-
%FgAnO@^;3#+6eAiAXi>hN*P]8*%>p6=>6Q_r<!uI/IBM-ZgbsH:^e'O*OC<4h?oWm.0N4$D(S9J\-8]2KXl3!;<KKjW"\ND@PBkk
%\84PB+D>f9TLMqLn4!Db->)L[+?_Y04ai%H9&YtI@apgNL7dWh]E+=P).HFs.0(D9?4cdhoR.=WOYF=BbR"2H_EJjeZ?tJu0:Z"=
%d4R-_.>'P]U+7p?pf,0OP#TZI&,C7MNNk@'8/a]8.eeOB.?fZ>3U9%ar?Yo+.!Lh.9L3-83p[?=D1/sZj['%F!6CcL@&1b9EdEb1
%GhAWcd:Qt',2nA"A/n`Ol,6F;?riubUbjU=0r#Q(7:@\kN]\40UbfmhNb\uZngn#+gBJnDe:<ngMb]/&0R+bBM.1Hij,mI\L-ga!
%B+`*@FaProb"W4!-INCB8Jt\-%'1?ten:p27R)$/=k/n9?l0N"0%5)Vhu`*CL(T@m!DrS@\A=&aL63pGfHl>X0JA,^Q0rC^R:&"V
%7*hV2(K,/`2l?Q'.Q=&K(dKsk&E+4V"bp!L=Z6V`V'AT1animbJ;66uO=W0uB$4pUASsdVi2_$M'eE8$)W[ZM9?MLt+IJo*qIh1R
%2M&+hg'u/G*pQau*N75F&RrM1SjG^m[ZH+Sp'-a-1-NiF;!JS";3FScdobS!UX]g4d(r7i3C0'p0[$bNRr<k\[e@=!i[m^tZ#l3$
%LW+j,$'>nd-D@BZPr;)Z!@`oVc!4jPdc7%E]ZA\"WeFd3X$eulBmJ/g@7U`()?ds"'$&3:4G]s@Pl-u)?V9Bq)hb)J5lPM"-=rE/
%r"f6G9R3;B";41?8K(,tD(),b6;,TiEf^?1N3kO"Lfb[r\fN-s-Z#/87OW-CaMB.gkn_gNaO%0/"trJi>c_BXAH^ALBphi(:C0ss
%fUn0,R#^u[ac_2Da[I@/S\-Kdk=kg_b.*C$Mr</1-5Kc25&p?paj9aM?j3;oI1U@8VQO#:i&&Hn55cPZnasJ'O=js.p.IFlW9"d6
%,\p@/MW\gp8GpW'9B)Op]/N8`J-8,Ni%XQ[-g_5mP#NCiEt#C=:e%7f688J7WETscqZ7o/h3o]Fa@X$dBRj1/jAs8C/![FdBOI0D
%Q_7!+Jinl5QD.M/Sg?j8ZP!m=m[Q\;V+h>k%sfN%T0U<98Qo3P_W?W-DsPm7:GGG:.d53/`0"o1]uT8jIeY'LeAaVk$kBRNW#A*4
%m8^K3*)nnt("fdC13_`PYX1i&RHaZqk3>=;h%`=+A<@GX5g(Fd?i1U8.TSC1fp,gcNn.AiH]b5q&j^Y:g[M'q9!8eScdF?cKj4fp
%7XF-^W00TnJO]n_RiM$u<cV1#]D/(*8ELe'7)A"RI20PO82a2kNK3M$AKeb\M#I#LIYoat+sr'h-q&g7!:!3ho_kLr@k7\$CrJ-G
%EEd9=WPp/k57:2K'uQT^g[&GPLP9BgJPe[M+MP_FL;K3,#V)DtYOQY9l;-YS#\g+8(__T62De]lVu[E<W5;XaK-*.<V%mU(@4/)j
%$6Vo7KW,hY5D<W#8;[gFML,WB9C$'6;YD3$Mau*S]Z<K%7BAG3G?66DM"`u5.6SQl?sN"B+;6E5SDidtQ'a#/,"T_jhhhc>EQ1\8
%i!@8[BX%Ip[o:>p_+d7099ZLN2G-tgC1e-RAmW%^R#n,O9m@s$82Itr5*Y45>#CEr+BTP]pQ-mZX]0l8JruKa.!?FUrKusUhAWt)
%#a$(I8"0WR<+>smlPLnQ:-a"MEgZ/K$6_#K!IAQaJqE9!<g>sjU?7;$=2JpBL%,VJ>oh>LZIT:g#8]!CV\/6EE!3E^Q`2U:rL-Tq
%_H]UZ8[t+P*Gpn-PudAj><*\/BK\JK=B;L\D5;`9;+/=EH7=6X(H=1M!R&$kUsVU581cApp7qs`XtVYlbf$SZ2c=V4e>FO3Lt1c^
%,;ni;M/YD@6J'2:WbinqeE!k-U^@R-"9T[F/%n21la[8-j<2ptCcW3<`7a'2bAjG&1W&G0Jgq=5XVVhO(Qr:,,bKdNOi;]-18S@_
%?!Z:<`ljU_$:?%*Ed7V12G36;0F[_O@te9Y`L"p*pkWfWedZFAPR,H+'`X7>`69!#,s'gEqN)PH$eg["=>420A^i-]fIG$S[?V(d
%Um11"*&VenrS0rpkUYd*(sP*,`t5.V4q(3?TLn39^ff*s"V#BnTOjq('3Pd0nW`8+9E7S\k^0+2L\8oXbO2".Lhi*J/6Ub)_Ebt:
%J??ZA+hndl\;bq=gAueZ`bBN]A;ADL'&V9]WRpeCcP:gk.?kuI9I0l]2hGJ\.KrN]T/AQi@"&Y#:l+M-:qf5@;;&(nX:8pV6DHt[
%08%[)#=1Jn3p)qJp(,-M\]S)n"ji&*f*f:3e,jCF8M^J'^uGRkN(E]W8?,tkb*)CQd$J2EKA<_/HD&:]JKu9nd`+=JL(]o57'Rrk
%0KBlL'OLR[T]9,YVrSP.=V;^(en-3gB6;Lq@ZeI^-U9=OBrP[\MF*Y%1]\Y$lrFHA9T5=I-:TR4"5.n>QdT^[Zpb]bk%P@*@)!M7
%HY)ngT_45:jCsN2?9/^!(u06Bij!(D$2YbMnOQcDAZrW#?\`h@Qq_`IB>O3U%,\nE\q[$n9]JC^e$'nXlm2F^BI_0XLsS`e7"sPj
%Jt8Y>,Pol^CoZEP,g8A/Y-I6r\#([q"hdeA;$..n2YT&JfQqu0+ABm%!Yg2bEc0DA;=U\($o!QhN\!T\a_[fs:[L(5a:VK]<!L1<
%Wpd;8L^K+^\XFKW$aL'#+Ve<L0P-'V#tbW7Ube7\10lDA.g.EOT4SO@%kJcgL,;]g0=JI2%`'f6&:7uqJqHrd$[?h7AGM*?:#L&o
%==HTbKKq)"OICM;%#"DOP0S\j]RFPO<3hk9*9M;Z+/I-c]Rf:#Ims&4;P9T6&J7OrK?OAd/g(bQ*HH3>D;S&cKhq=KrM<HD1I?^_
%@CdS$"=oCVNtVS9;FDLhJrdghpB=8qA.el]+]ON0"LQPn6(AY./Z8/La/1DU@G2DjND<A',>]$V-44c6=ea<J.<M!a[LTEnJ@J'Z
%Zse\-J;f#\Lb-52$MOjS,i0Q0>1^#!iO7Jl76gpn8g$^%:^^q[+:OjhngrBC`<cB;!/[?p@p%qGkXA]R`uQ;s$"jKn$`pe3KI"o>
%=PrmHOVhM[f<I,`ABOHMoWGID'EoDJ"rYFS6cWi%b&'EOJ:b'X/ge6;UI98^@N=2>-h@@]U]h;jJ4,0gQl7Mic9bH[h$,Aap?lhN
%!g,@9ZLR`]\Lb$NKokfZ&_Oae^6Sci[!.I<h6P:n0mU,7O@TAN)bu!AP6s+S+sVl#)FF!Y8\hhAh0QFK^R_c:)Sd(c-9.AhqN,Zj
%l%t9t++t'oXEgO8lACC/9=L+Hkd2"?&crNge2h:p9IEmIEY`U^kW%LK1Hec@XA54`M,XZ!EJ2WQpQA.:N[R`FKZf9[/aB8Lqg':r
%\1\imhQ;&K)\L\#@Febm;3gSS/,>hD:P<(D0U.6qbhI+P"?Y:L7"e3l4[Y?q&P;A<**m#!_-j,@C8:mjXI3KPr19lRUCcrM.CD67
%/qWL)Jie6B*kG6Rk-R)^%_i3#Zo!%);a:2YIb<Mic,-:X@24H]Cm)@U(]kUu!X]9R6+&#AC(.0h6G6iPBrhUUf7o9k8SBGW2&fJ/
%8<H5.ZBreL0YdZE+O%qn&d>WZ@o!)u%[gPA.c?_Z$Q+TcDb8Y+.hr4`J+91oP:\8Ma>h$hOfS^e>6lu6B!V%r1V_drb5N]qi>O!a
%@j;Ym/I&ZQ&,dB!;a^JL?9%`1Qnc"+%3d[B7aa%:E]6-L(5O2S_YT&+OV_[WZ=+Eo@LrsE&V$2a]hlKJ_3L>5J6\uU#0>a;j[feH
%GG(L+e.EP'<FM])X@QZra"ibJfLThu7nRbLF3q`r17,6Y%U<o0bBPmKe0HV+$TaR'5'.U*C><7T0TDW-"W:(eH;Y#:3bc5PeX!oB
%c*g(n7cN)_lQpA"@(d:1,72"MO5nG#m[[rJZWn>t@MCUDc!":sa^0iP/FbViiXdG!EgE7V7<l;o^.eoM?:rRJ!,kg:RZQ\?NM2cj
%\NuF)9T7=6@"oH](IeUJZWra!!_7<].d;fJAC)qS'Uiu`T_QU:KH1sWR<&m13g#g`Qe=[r<6/8>(;1?9oKFk^RTR%*EQd"UeG,F_
%g+R$e*EHqkZl,k#6&*hmq5FHa.Q&R2dhuEWh1;N1-)LpI'Vfj8$2k\0Q<_RBcQ<%i:<13BQ+Teae_>,SD;26h]/,A.%Zj/j5;b=@
%SiEs?)g3c?8Po)=o*(!0,Y!*AqDM'4%C/kTc:j.mXL7Ur9+lC&Z_58s,"F.*1EkkN?n&(.:dO$bMN-:q)L@2>Bs\*U?JV9PL_SSE
%Fbf<:OGnN'_p(r?3!c#nNBp2n7(I.cS]`Du'Z9"T!]d:"BZ(47U0dCH`M*C&TqTr$Oa.+.G5@slV[0]:pAYHcL"41N\BI>Wc7Pb[
%0aYtD!0K+lQ^*@M"YH[G`SqfE]oLJ_c4;(Q=o?S%#A=8$pe[*T*=>rL[NXcud(1R`'>Tg*Q!"QW+\Hp@Y/1bl]J.!<K^!Gq\rm+Y
%_'4)hUi.qUHfYd4;5V_V;BrIP7r%65Y/S+ji_Od,*B$.gmW4L920V&H1a!Cd@\j*".KEu)EZmE2jT2AQ#7XGH,iL-$_1P_3Y`ak_
%'/_=-C/M?B()\1Tm[?!'!jI\8T5E%X81.Oqaoi6LDsU2+9U."XV,%llJrIK"%:kh!'#b!j%pSF#HWt3G&1AZ\SWUR?+@>;eA>LjD
%<AJ]V`u\85RV-%$)j7_jmB[FR!A?`2L(u/'2'3`Wef#Vc_M+XS@`G>8:aY=a`0_Yi99&r!.V<+'%Icbi1dt!RH6Z/pqA%(M6`KSE
%-L+70d]#mrqk6PX-mSCJda)f>P,,@e)mlV-WbBSBVLp%hC+_r5<7u7b3-6Cp%Q#@J[oOjpBC+<88BYa8$PH\GUlLYpMr=_N,?Fh<
%in=N;KTlpMbf/T:KgZ80MH9cP_+Y+A,\EU*i^Y_5*459u/5'-XTP0')JCjs/&8,HiUZdhe#prUsAXa9&.BQQXo<IM37':R0D3/d;
%l-+_;`i'&Q(l6,V>O5T3oZ0&.5dQ_jCX4W@5pXB'Tmmu,VN2e(&TSF<Ou'\/71DIF$P6b_?aF+7&^s#aN'5ojis6;C:,^c^#OqmN
%^p\H%6L;O"aa),6Xt4#s+gs`cS=l^3P"UJ0BI1hQ>ROHS.<(MX[M8ptc^J77Qc]6Tf&m1r>O:J,pfn")'dn`s-D\M2,h5IOi8l1c
%,"o4'EZDB]%kkc]UY#f>BiQ"C@Or0A.VJj;i>Boq<jN`:@@Y>0+<Efsp.+&$d:nmd&lH>DfTQ`)3\1Ur%RQO\qAM4^!/ZemikXnb
%'.$S9/2Qq<W<Rr*2%2HBHm<$/`OU[oPI,6@p,$8uNeMXW&:7N/L""&&A>i&7'')&UNOU,Fm\GM:#\$s43QS4t4/0L.MUkqr(Cl*H
%7ThW^!dHG1",_)-=g:_dopc;d%S9,4-S;AVWUVD//im/m/8?[%j?ro88u[tqEs[P*-_YC%EJ33^=Es"&b;AB_$&:3!3s/knP,lba
%$;.+cS.RMYHJ_%Qf)9lu9<aJnHeD-ohEYP.EI#SE2"FU;8A6DgKY_&=1)&gSmo'e:OGmbu1_S.\`c[.Od5/O(kNdYDkTrZfaD^"$
%N#dI[WW+:scnsR;Z6VPsKpU;ECg7/i17BK&C>)JY+&SGA<)(NU^iCG".DDL=?nA+\@VM,c(F>mt'MY1^")AM$%#!V^UG-t@?/=at
%PbV[F,Y!ji..]3#;N;;B@fYS?On0@C(&bQX<+0-&JN4UB0nd*F@F'N,pVfSZp^MKc*a[/lXEI&UQB$fLe[0`8.7H/4P5WX`'l'OB
%aXMgW<:ZrnG/afe0e=I"[<-i-;c!J;b1R2(N$*j4e`0dg`/)c6]9`D>\^:c4aL>'Q6pDPBbVXfnnYMbJ8Nj2c'S9(,rk)W<cbK.j
%&*pjE9b5"nLP17_MX^8BAiq=EWBXu?Gtb(cagU]m+hec:aH9!b6lS'5nrV`GH8r3*HW%;T:69*b6:7'N.6ekgk(k&4q!h0X'5STO
%nR/.rV-+\hnSmdU+cN4@R4'D"K,cO")JhnmZ4n^slI:'EGV"$XN5s4?nocp']O@VS)`G4q,aRX`.QmVi7XAT;KkG,2R11LUr[Nm5
%O2mIX0G,*&WFiG7c$8aIl-]m21jDR?U6^8RJk(/KQ&u1[7[,QLjM9f7'TuTo3UksS3Dd%=$G>ZE0T%Z!^l-oQe-YUMo*ZA2n___E
%"Ru/ErXN\"*`$:\Mlb!Z,P`@kg<#jCjh?pjnBe0'aMnZi[DmU7TS#0Bb]aJ_.H;'tH:/-lES5U*#bC0<=RYNG1>1*$mgSPl#0gen
%G6W=8Ec!_k3s0QVd.A.24+mN@n&kq(?$6;KgM-,L*D(K=A%g&db#^Xg?+/2-fK&EImm6N<.H=^R=s?)6'&F4k$/U[4h8)`N^YG@I
%%P@og*';mq>bD3h[RPF1@PPRd#V!bG2L&>`lOGb/L]_k$4)A]\%F1@/$5s55Ao'kZ`cQt,.FF\P)A8b<7W`:)_7"X+FB9K'`TigF
%h;O)#XV$QWNmiQ"J^/?rO\D226u:>nFN9^m:Np<Q1F>adpRLNo!9=em&EAK*5/?H">^)rR7Wp.gK"qcK*Ue^5Y0M3'J.kW6HHLC9
%WDF-b\iU!edTJf_h*E5"&2Uo0H<a"?BW&Hu"M%<GKC04YTbqNdG6X]F0#j%BcB.@`e8nR&4+m;UdeB=$%Ob!:jlh)95Yj^,d%'M6
%J5;b9DN4&o0Mt/sg%atDH*kZ12s%XRb`n4Z.GZ!JS3UYt_[fn-4_MA/5SJ]I45HG.3#(tV1V,Zc(16ph8p=o=>(@`4UUr=$Bi"dj
%Vn4bGLGWG8]/'nJUXS$bP*Q&bA@k2J2K@dsgDs/)aA+^+]/*t=KSjJ[G=6X"M-XW'@ugo*2Weh"8@,$'[?KDaZ4)q<;sE_3E[ABs
%N:%1CD__nsG=MqM']MZ-8*Dr)gWo'O%#O-J0AYj[N$HoFfq>r5X=n^.Uq8EXRoh`-*@+t."&lcm9+n0C7_1\DS?:[V]0ge)o/Vh?
%,kY;ahq@E'Kh*8g);?/D.7c=iCj3fuA?r#9h20(=%D"V51SCmmGN6@Th46Yb[W8(uZsjtXH_\1l^S$_Dad5a*BB+ei0jl?!!e\hP
%mPr5]b0G0CR-YrXPHs"QAeJ2;N9q+%9Q87Am10(JdN>W.GF&#+0SO+TGGmoqcurp2!u?Y;PT&;IAJcon3SPQ^ThNROA@hpZ,KlPq
%gRWjdQ;+eLJk6;rT([@/_G)5=NU>#q@jf2(\i\rB`pt&(*@.KjAYcpoCk\Rr4/KOk)OD!T1qGc#Qk;Gr7X#).#/U+QFE\qFKoPM<
%r991.%R:TB=4la)JCZ%bYsrpB>q9U%1V,XrAmsD,FEc)YUlq.ph;RuMj'8Lo1W0i!AYcpoKE_m2KC7#=gnA+F7"W<J_T&Yph&W:h
%C"<"HGTB^KNUIA?'[\AmI!7R5"=UYIh&1-8e5c>4N*!0n3O+Yh+]Adoh]6?mNF%V5c4J?K0H5C`;#fU*l[3n9Wb&`eq!JQ*pW6ss
%q!MP`3*&I+^,lE1h!%U)^,mSrOrN*BJ0Q2qPUY9+4E=J%26K##!a/.u#jmq8oYA\=mY&;(NC7tu!&6N(i44J7(R*[J\`8!WEFcV4
%6/^#/E>M"&WLHf@Tk"Wb/Y1i14g-,\C'8`7(>/^Oj0qCuKRMg=hTcPf><k#c7W/Md$gp*i*@-Aej,Mp@$uJqfkj9L9oVibBSO!TK
%aOc.&%K[e0T@)D%6C7jlluoTp8.=4nm:ars1X='Z#J<KiG]e&=cr0=lght;p^FqA5h@4SrF_JY:\a<c>PEN.+ftklH<om2A[)@A^
%(5G$e*0D4o<)*QSNP'?'96Pq`$0q#9<15n'73Sjc:fWjd+qKIEr20Zto92[@i5V,9qT]U9UkdYh-O#Zd'cNM-LpL`]8lTCa926,e
%U7q+0,"K)Jba@c'gGIlsZV3Ib1D8FSdMFrT:2C/^Zgb26`-1>h'?[1AC^8]P3#3c6M<tTJ9Fqm![=^^V8>a%CVC8]YB=;;+Zl+/V
%9OlJAo@i/g8Rg5<m9$8'@`,?!o!3)USMAm(Yq?5F1><+%ZZ>%3Q6oj\VP@ee&'>dC45>YZ%.?mF6m]8t9^eee?9?%M'U,,G(d^lb
%Kb#tG4'Y=g]^sjnJIk09`bT3XGMqHbY8o/V&+';P6Y)!?inOaASRJci*,4eR=hquAZuuH"XV9YOB^JKoo'`r/L'S0dN3maT$sH%Z
%UU>`AZ&_Xq#>+kl44;hK,/=OA>!&)e"=36=G*$BiNRHMuiZFFJms3hYGq_'Y42WV<YoC&nYhq:^U9o**(a1S3>!$3F@]nn$Fp<nC
%WI^(=84^E.m$uT9YnH3j40'BE,oX$LWu^O62Aj\Qm0qsR9,_O3$nqsG@\488(D<qIh6Afg$qe7b=m[=D31S!'B8?qblisL2+%f"o
%`bJ#EL\O`+e]n`$engH%iCg#CV30I<H7`&r;c5]5KlOVbg(F8lbH@&_;)5(_0p:7Y:*e[emGRN@q6-"90e2+9]Kp9;>?F52NRSHY
%=:+'D;c5\EHMFk`Ba:Ur@AL7dQ:+t&UR`P.WsK`(G(p:Rd>s60G^kp41c!eD6O.%^Rki\p9[2?0m3j+iH=O=WV"h=5BEtk)>GWc]
%SB9^?T#a,p7QZEoK'nkH`bC[P;q`,9&[U2)7VQM&TSR$P["J7tp:S[ba(p243Tmb*W)%5Pc-2.*),;(4*9/Y?S)ItDG&RqeEi)^f
%)=OBhZ;]Hp6?G]'6"pSuVOf[Z;EJ]0&!XghW?&oDOk=@7TF[bq/pO\s5a;Vak)@k$@SJL+XW8\(I,8Q(#g1AEbDb$_DbYWL`bU>?
%@i,'5f8f9]fCB1G@G#27.#mfOiEcZ4S'fqu!/bE_O4)`Z71tE[dFt#8EnXGq4%N!ab"-:qTu3#BNe[_#Ou#ut/9O9\.&e6GoiXsN
%,IPF_`ql?'C<+C5WC@i+SREg_Zl>fa5hS*W6>WH@(gg]TS<;Nne7eCkWuZX=`HI6k%T,>$#gZZ@nCC3]VmLV40p#dJ,IS70!?3qQ
%m7^P?bYDtE'Ebj_S_+GGL*)#:'AL>UM,]7ifFIF8+Xh-EG3#,89\t`\NkH8\#&D/#GXUB:BnP&uJNttu2.AZ<;$?9]A'5g`8qUVC
%C^5U9&h'pqgEE(SZD^N7a522!NmEOKd)f)H]+`pB*#/S@]Ge&GAb3!8]LH?l7%Y<gDS1.+3[\9'-ak7\6it]oN7\VLM-)]K4$ttb
%Xm\ZS(nk\B$6.341k`Pd,I<qL0&4F.g!1/!&!kt/fhR-,7''=!4&S%7?-eo*#_bq6n]#CcYTVskNS0?]j%4#R4$!S_N0`gsNS+dS
%U>p?-4)(0spi";kBA">W!DmAi!^!%cCsHieS-5TMULJg_kkM`KfoD7lHJBCE*@X0]8L(P^S)(VmB$>F3+7jA@,I8C&KS&o/$5,<r
%,374B1#!:kM"lO\foA%!,]@PDG!n*KgJ=7)8Ad\Fd7.un?6->V2f:^i7hclZ.CU>ph235PmBG4HT5d>;7rAsb:SY?38TH&`*IfQ%
%.CC1iHj"[nWU5L.-Ce@?C-.5-.I`ST%b9aZo\#W!fH_`VgQ^A$ZQZoc1#!#B81l-n*Nm5MRhOPMS3<&(Yn>a\TtF-Gm8,u"RpsBQ
%a)3`&5E49TE8(fA2e"j(9lV(`b]ZBo-,sV.[UZPO;c<@m:TS)`*XT.n4j?HHa,-ZdC:4%XUp^pAPjL8!D+?W+(3MKL4-C;^XEm?Q
%8(<R=+t]0L"J'+:XHM<E4]ZPAjE:Mh@?4,1[hGdD1nhD5N!nDW&UEgd3WaTS$_>]"&Sm;3h<=6::pH:Nh@=kZV.N?.9h#a>(:Q/E
%4&QpCp2B;@,U+G$m#9e]X;4]1Vt>-XhT;l7Al-Jgfd/G#48RAoj*!!*L?l$I5j@[E^\#DSl6E.7X"X%aqS.OT:\XN(Y?pG].0pK4
%rR^A90BsA0erP.J7-2b?^TF[qq)=rDk-(uan&upSo#q(/k<E6Wem!RnS)<tTnU\ITk?gFQlh-0Wr]U;TGPnL;:]B`gY:d$D^O/pd
%nE/`"\$tO=pec/>Db`6p3W&7(o#8ka%(\UtrI8/0NrKalFo0YRF8j?DA7,Aqo(@4)?^o0m9eZJ(o^]+jHh$*UCT^E>aX-U#E7+.J
%oJ+7%n,J2n/bk'MmI(_4YiI%C42:Ra]A!KrdOmZC)>S!_GPlRH1\0SFMqd\9I#)+<YE-6nk's"qh*/H"HhF,Ik-OBcG/NCa?;c"G
%f@@k-Rg%\.]D?`p53:.5ipGKiDr+fl?_*bF5<AA9H\\HTHnQR`FoCFh`U2>alZ;VWDg:)&/hYJ:9_Ri<]r@Ca+l30,hjhD@s3o6g
%s*7hHFc!ug\:.d,LS]7qa5*9#H$d*_3+s,rlZ;FkhfAD`e_eYi:OcKR!2gVd<&Ss6\9Z\ahle<Os)F[ZR(W1*LOUs5F)c@&e6KaP
%^H'!@^0*-Ej/)WVC0t;^]fA1So?HOcmk2m$fX?!Ps3.pb3cn)8EHTkKRt$4LqgNg>rTa(KRu?$4gZ9Zn"c\fE?f:[NS\I;_oOqJi
%^UeHd/%<*1mlMbp/,+9n\X,7QeNUYDlh/5deX8K+B5U!TEqSN(_3\A6AZWW$lH?<Dh"ti<eX-/5qf:$.IlP4@o"3?ef0;HVjP1FG
%(jnCEW-l0fF)pJNh4coT\6!m5rf3M5$j/YEF)lhgq<%CiBBMKaBT:+8-YIc$^:rp&bI;\d<'ShFfV]JRkL6nYhHZRW4hLUW%bkl-
%YhWP9d=j7IW!o#?_ichL`?#QCA_Z8'[Fb)pQZ(/fhm",\Gd%.,hfb6rg^FQcQ.P23D_Fn)rqN\Kf2q-:9."9J-[W1TQ@If`l`2tR
%V[rX<nL+51^'3%.Dr0?`4?Ye+o'H!h8O.KKq7aT/'#"@g9[BjpYAaF#a7&G>W+Q=]:WpILY$6&Fch\(:K"o"4CVTcK$N8>YC%WU(
%@=^oHmfc)Khg9Hu_kO=onE@e(ZYVC_47rEW0tt03\@VWd=X<*Q+7D)$e:[42<R40LoK9^L^g]`[n41V'6T,Is#orZ_*1P:GYUmhg
%Bn-@n_=qi`ADj0ap2%HMZ9Q(\j7ZSo4F_i^&81\Grij/rY.:!LKA#-@SDIN+IeW.*G"G$rW(t@QQ7RO$8Up5Bj5n8I(T/'n``q$3
%nMm)tLI?G1ZJY@9Tmo);q=YdQH'Hn*nr<?&kMr>O`EMBpiMq9s?XI/(]/`+UmffEA__:Nd^HME1g1.2Q=nF_0?K#DF^5ZK$hhHEf
%TN1dLoYnf(,pUhjgt.e*\@=Y,P05pR5P).ERP";hUZp!)1*7#\-2)*H?JiEpmeZMNgBAtS!P0GT)EW1$p)'%G@qmMudMT;?Y@#:l
%GQd]DMu'LbI=!WgHQCH3rkQ3@qqU+">Qq`Q)@h1*XPNiqf%n*V*'Vg=rbn*)qT#>+(R/&%SDO6tSY0IQG`Ec:i9q&Z"OFhE]t-8>
%r:9dVr+qcS\c%_?/[[eoLq#\IqmM![YOB*(:2G5;/T&2RDpQCt0S:-T[_jbYq.@IK3gp_(ai>CEC%L#sS(F")BBQJDYAXA\qYDV$
%SDg:Bk@EmS1]-eCH/kMibas":5qg)Bf5@celg5H58WUa%qdr,fm<Ea.#6l+&ViH+aT$+m]CT/>_ITnWFLVD<*F=nX]hT#\IqKR2^
%Jrf`S]Dg0#gOb.Uo&ff!P%#G<[]d4]m]p<!nMp"U/W%BeFo2$"bDWFmdfoEre_`LdbOq#Rg<$2gqPXR%mIkj_d<!"ADcj6`?7\AN
%P,n<L)5ifcT)Q+T;lY/X4hY!saQ:QmIF?[=eUk0M.;7Mn^8(7/qG#Fsp[qZJkO_dkI+aDo(Uk2F/GcMul+XlHJ`/E`[.a"(ng!T&
%^A7I!qT,!2/)aiA>[B%`KY?0IB5r6?nS6J&q;');K1>pcp*?i,-jS_(SNWiBPU.Dm/E)L3Y!cDL%>VYPek20:X$h6OUk*0>W>&nM
%>iX5^U+D_+@l\kd>*L'!ZIYcJ;W"t!2)pb&PXf-f/^eHj?]/suQtfKaI*Ajc2NP-Z`V^'X;&1b#6e?4:WYX^_1"E!Lq3Y[>EQ;CD
%Z=kj#IB,T`>*QA6</\'C@ub-PJ&j1c1"Oi*R`bqLNIB+6EJ*F+Wpj2)iqU;<Nb9P"l<EWH%3?I;iFg)^q0EP`L-lo=,nZmel"BI8
%AKM'mH`r>"@43q4?@.K7MlU/g0EeF_>P6^Mf8`2$rUHaW<cdYJR;:uQe5`QO>4'qDeQ-2I;&O/M<a2ucY?Iu$1I>I;+hrG=6aC)*
%IVqdOW"OXH2L>-V9'\B=0Eg]">.;mqc%P%$/>u%&O8f$NK#Gd=qm+5AEqnYR?g!b_>b:reo`smhgrfr)gd2AQl/M!Iq9+\s]=BD(
%Pu+[1:N&I%"A^b_G$jk@M""[+]EY+RrL\.1GV3UM"Kc&[.i?D9L@XbUl[.uWj$uGH3Ic1"k@FK!,aA8+]bC":*DT;,s#ln%s8Qg3
%]Dh8soj=5:S0"$qGp!V`HoX%4k](V=r;r#IId1tj&WIl,&c]/_q)+K.n&[_=A3$!1lg)p*fn33nLYlWjrTa(KS*Ge/mHn2*l=]Cg
%I4Bj3mH]d1$S7*gI=G<)c#b^[dGE*m"lHOpPC1-c4gH3oqYa]FZ.V)2_u>D&k%aT!ArdObRu?%i?Cft+;8#JB3^-4D+3>tBfRl2a
%1\)cA00Y7\ne`#P&"MCL.0`s;rRUo8n`>6b0I5PEs#j>h]B4U(+ohEfq)m7+mlTm`2?3Oc5&8FCY5-tgkC72/+p2Y::D[2tCX2Z>
%,:3X:s&jEWCX..Kq*&m]IQG6V]`.I#$+[_Dp:K(*_36Z?<%aQ.boc;sn6W\M^0HI/5.gZA^ZreWbEm/)S3Od&WqQ,9'%O5ZMnN7&
%$WQrVS!V[:>rl]kb7@kP*Vr@.lf8Wu8rLIJZ$2#+&[F8\[]^omV2JV(A8?kb""8p.QMMLH]0<#ER<W/4IX?-bIe@E_'$ieE#P#dB
%f:W%]EIE+]qruB$MbgNp:9X*0CTm97I@ODb5reK.^Frp,]tK=sEON.+Q2=a=EP^h.?e0^1(dFKp]B:lmB,C2R5DO"/CMh4,ib3_B
%3r1h&r=\l&p%_`Rh/E;fYLh<J=;629rlO"Jd09E?^$Pp=/)*;Ahq<:A)uD$-IV\`BTYj9:+7-E0j3X%U)L,Be05KKW%D9nLBaq_V
%JX87`no9^rKNTSiU/;cI?e3$9+a]kti8jujQi/ANa&D/B0EIt&eTj4@#h#IMRWsoeHghOAA*]pRLk*C`;@(;P2R*B-i6]:eQ@-RW
%2K99cOXo)&Ia=7>6@X"5'n_9k5$hRNIW9[RB+A]?*"Q/F*W"a)+u(+XiOC'd*Ur$t>QGrE\bJEcph7sm'nPUh+YZ&e?<?cq'n'e'
%bOc>Fq=U*3S\DW5E@%U[[=ArSY-.[+fNN&lrkXs)8)MV+J11!-!iAk%['-=6j;[O8S?m//f:d,DK@aG]042FR^Vt*#3Ie;1,p1m5
%ru8`CfB<=Lcg3hjBAh-Kk-:(\Y9)CBp<Xi_N9h2kIXD*-/?qD4BRCXU/GP%icBf8eoa;:W:6o"iHSfJs?SWun?G'B>Z)Q?WEJt".
%Xr^Xa,Hc$F,P#Q/5)taI5oaCV2lq"XKCs>ID9oD*N&?W8BJ[!71"J>(&]HJB:D_P^*IJQ2p!4B^db+jXIG#,O`6IQ"mHN_>Y:l3k
%@a"6.rLeW:4n\`&H$aOXG#oMkk&B=kIp?52l8kMB]s!J9Sh:$+q<%=oq4DQMs3KHkX0X*IcGoPSqR3^6!T9_=6sbIrFnPIYhs0Y,
%@F=Y8?@9gMZm%US0@8&Yjmr!)qUL`BSsSj19-,D)d-u,X7Eb)kOotQ,Ip]I4-/EuYX^F^BiNjRQ=OIg$DoG?&4Hpabdf+h_%tP2d
%=Fm)o]Y4.'m:BQ_`u,S=FQb*1bj%QV,^`#,PC81#+4fM\#"n>k."D$<Y=Acgoj.OJ`tU.3;OMUi-""Qb.f!9=0o'*)[:i%\K!0(F
%*IU95p-,g!NPtkbO<X54isit;.6aJ6r.7P@T+d.?VgZ/QEeic"/_`:d2n,F8Z?gR6f:,u`,-KeXU%f+u2g8pkZ?gSQa.$9`X,bGs
%>C[Zt\oWYbc7PE^eX]q#\^d6Th7;(,Ha#U+^TObII!]qGA1Jb70DECI#&c+V.W94XS/f+)[qJN;J*uk%F,u<2@=]$(!]'-"f3-`k
%Ij?ji7uo1*ia].$&k@a.Z,_oP4Nd!-!+bFD(k#PX3oO*<O)HXHcbBGO6q#Y1:X:Y2J,53pdEab\5@#mu;X8K&>'CA=UQ9"//c;2M
%fg^J._E5nGo]W$=939\S4@YB^46KIF#B'nEqYY?t[c?Mnqsh9e?1!tNSc.VTl=2k0Rm5QWP$?-rp#Xlk,"$!do`9Q-P&3Ct^*3s^
%'&RTu(]4'?"VkTehVPn-4Zd"3C%KML#PMeY`aTk<UH+[,'@T-cTG-?$m(LmJ^3K<o;3%DY\Z^jL$P7U/0C(hS%!PLMh:F%E@,1o3
%cc7f55.f`eoD,[ck3kLrMbj_-Y(k+s>'!=JW#FFS+92$1qW`HjA[),s"#bP\b<E`4g&B+-^@/=rj/Zm<d&,WOR#!sBf_*'0e^Z'/
%$DV:BM*C]mI&Zu#W/[NA(W(YE?i5JI3?PM$q=&%[fE`^^44q7)i;<L+E2)T-i1bWOY9i)1A<2,Qa"=UX)t'_#R!jTOBM\9t]<7QM
%KA#-@SDIN+IeW,T&V7bqSWJo7E-HSXqXDhObDY+.:+u$obH-KZ!@tNE59-#;_g49``]'uSj2!8(K0L.okR"G*j7/b$`u%*KaT`:+
%kkR3Ln9F*UUV=]EY)(+e_7_$**>]pI@g8=6(['ot9*[[>kM&1]Os:2Y1+._RB@gKrErZ(-cR!Ya/j+k/G48#RX4)C,"gA\2EG5<]
%rqal$.[lCOZb*laq9-Asl`epXj"gBN/&]KKmtf`]*]eV+N$f"Weq44LGk)\J1-T$/BeQ+M[pQ'UG+ZDHLd<@/?#AC"%(/U9GE*e;
%JlDe8l5q)WiV67q8rd:s%XnYN-1'hcBhqMPC-af;Z0e9\2lIhI3J=g6c^3fRJ%E/CA,PB6B%W\+#T_foIWKf65F9A3B34P;[eUOX
%5&@](D=XU6=(d"I8i?/rSI?n31-;(=p?1I@AnG%Ta0a!\mBnp,/e2h'rc*"*p#b?K-A;P,o8bNrnLucdi2t90pOF5Pi'Y4n^R"L1
%qUdYe/:%-1jlPdd]^L/P9.W;&M<.6RK*RP^rUpd%BnihkGkIep+]0!tqYIDI='sIh&>J<Db+G5SHZ:qA2kU$1YHQ]/pb0D[l.%`E
%Qh=YLP[FH8o(i+)gOK663;LH>^DTfGq;Wj;H/&=:3;FNmX&]2to-aIbs'>[$hc9C1M&B(fEq980J&BBdqWiY1rKH,$8^=iDE>\%6
%Eaa3];Xl-<.!NSX''hcAnga:jWKE+6Ip,PECF7:!WPt-8]Yc-Nj_=?ISkO(gl\!r/q`AmCmpJe9C7UbuC[3dbmQ(s*?=>$"hm_Kc
%qI/-RnGJL-4So?#-i\Jc*S/WQrRVcrr5Hde2lA;]Wb$B`lT+cOGWH9+k4W>1l9_quU>G17*sQ(o0''d>eZ!]bWR'GkT:`K?co6bE
%iXO&Z1o-=JFWOlK"eIm;h#7i.DnR,tKa5."9Y_`^a>TXJ*Fe(k"<WA]nOJF'_B7/P+3_hk:ZkZ:EOC5;0ed$lAKmHaN.&?EZ=tq-
%j8HWM\&r3Or#Eu'oX6B>G2)83S&l\T5%8M?I^/Y%\"*e;mkBlb00J*7nnC2*U#+a(R-2dRa2q,saZ7#%T87'`O&%@D\@HS='tZTf
%AV9=X]dm.AN_p^lj'9IM@^DP0CpVg/lU86;;eGoTa4jA(CjQkfh_@0aF2@j:s8(e8s!8WIT.`D(9g&6\Im<bls4T'"b5+g)(1*ZJ
%j'Zo@k>4Ade[6nX1WQCR)_Z,FL(a8qGQGu`0Mb'AIP/i^V?sgr`k$h6E(\!ijI"]lHi*XG1Nd<sdp/E6?X23JG693:4:NIW@]RCK
%1:D3CnD<3RY1(?/<+V;KHm3e-K=Po=S5&^TT3]+?jkLmRo5%odefc!<kefHk[^[`<4'9&\p.VDOgnb.Ks7`O(lF[tt\L/iUI2>d]
%JM-+p[T&p!hiUg-J`r[0B1i,tIZLs\<_XUGp0)V<8kaJ^\lPL:s&g.jWT+_@rCEQP@\e2I[P$VTY[4sqFaWSuZa9CUm'FZlX\114
%K%Y8AWMpuckB80N?PpJf,%dbEp5[dRNr,$TI"M$Ca5Zbs_WO=b3m#mjPml`a^5iZ$STH/DR2/JjI%Pn'+r=n;FU<<A'LLP`q!K+7
%[hom6%of$@4lB\n2nfXFgA3_ag%iV$YN:q>Aijf7\NEg"(qMikV`#=U7:5fF&?s-:J*Q>N:h\SGVJ8s&e;o[c1`D.U-Iu*P$p5tT
%H"mf7'F7DrMKTKjffKtZ*:gqrQfSRX_s-Fj2G[%ec>BcSHMZ6MW6;$?+lhl1d:,r<P>/n1Mu'Ea44fNe^:m:D>(d9rNe+0Boolt-
%6WGEoIp,jtdkZ/acW!E/.XYCXn+YII9-7s8[,bUSEHSR.IFN(as7YdDPhaR?Y2=[kW;-mLp>cXrn(XlZ-Z?^\I=6S8MVc>@E#D@4
%YO=S7m"SBLlQFm71U)'fOjt(:f%7@0/niopUV-#ZCbTmP@FVFF%@?VG+Qer,,*WgHk93pG41c?a/d2XAOK*TgA^p&$fRZBQP1'&0
%]snnPI?U<"1=1!=3]C8Ip9=!jI>:M&hNbZ3MB4;lo<`PB_c)\]XWGBjD7a'IKCa,c[j@Zj7Q9"u_3b[?Ru2E+]>SQ!8uXEF[p@hU
%oqgtF<k[k/Fre#5Ng[JhNa\L'C.^S3jV(kEkpSGbXs/m,S`gok.=kc[_`cLToVAMVH:jW35D@7Ymt.O=lEo8=OfSLFTDEB_;sQ8?
%`PYWh?<+"CgH8F&fc'O@Epr6:lb4q\=;SMN]4SDfP/olFOQY'Z5?ZA-aHN+7-hk/E?J!]f\_HTKq)t$8rD.u32@S*g)lmR1WF"3W
%H`c!e6ZX%*:W=$Hf2\YOs5/k&BY1<'>]RSlpY;s4F?PquVg>h(rO4/YItq"_,YIUnfcSMbhS/j`p$Gk4e!9:5B#k4)f$;8/[-jVu
%nJX+s;s,-M<-PmEY4Z2'7osGDGIhRhQ;-uEeOD*bm^MFY)WekQ8Z)CGamZsi?#jcB;83"#iZ`fddJZLGc7mBtF^4)Nn`W\BIDM><
%)5[KuEIdM>:[`@If,'j=h`n`e^8,<P^:<siq;iFU2_WM'DC&W_J"9oZ\D4MFhWnKt]L%5Bqt$HPG/NB]pVlCamJ5"l>k@-f(G@U3
%qqJ=AB_qA%rq6-ak4TlKr)fR2:T>R>s3F*9n_aBFr:En`N:=#`5;$;L?3gaWS\78F>eKi]qAY.U8,`DagP\#"2k8RC"#jk:$s783
%EED5k05o`QS?5)t2<_OS*S6tEY:/ToKH3?KZRb6QmKbkBUBru9;XOfOLAB^$:dIVKM[(8d7fTL2HN0Y5IrNd)iK)e,FM-Y=&p3Ip
%a7,4#NoB0@*7Go_7u<(=`#S^V`#S_C@ZGVObVB#N0uqojG^2CGQZE]:fh'OfK7>fJr2IUSh&(4g'lmRWe7T/].Nq;33sdpe2<=Nu
%6B5YZaO.(4a#2rQ@7-(1,F_2b*%]R#@!sVn8!dVBK,G)IO!%J5-Yu6rkL\HfpVou(o_KOoe2U[6hl#G%l@ifHKZYjYA&l+7*V-5"
%F/U!Sjk\._7YqH.X3DA8cbP2VTU1XF(O%M!b*YjYqiVpfEbG/jEhlZmaie?X`6'pT'TkSp3>7P*4DUXgqK59*cks;\XN"-,lBrtZ
%lfsCn6&r-`6CAP[%]62uJ34#r")6%k4q?.u.k8d"H8ug&Z?cbskqHK]%CY)d%8IX)q0^^FDMfXgOc"!0LN2hLreJ>'.BdAu)QGHa
%no=.44Ck&'<WBlLU!-VOof,U$-T!HWKAZ<:*IBE!HJb)X#n<_j;4S4rZ<(I?48_4>LYP(?J-X/CH6&apjQI]Nd.?>%dueKfqGq`!
%o>:?-0plQnA+"p\Go/m>B-Zg*3mUfq2.<pfh5.s!d:U^I'rp'P(4hik[]f,*Xm=nF2bTn.Qn)+%muHVB&S:F@Qa2@O9j=Z#4?g7j
%6E_=VfK1ahIpk`&N5"Yuc^*@rDKHudps0Z-c\k+cUVo-T9@I3]EXWkVi'""YO>5Ps:=$-,$+Wtu]tS6#,P&F.rMXl(cD:.@1G(IF
%h06r@m\sB`CG.d&=@W%5<E(]ZZ6;Xs6Qu*pM-8)+'6Dc3G[FtQc;"FaLr%b@A@/@0g*7ljW\TB1BoVgTSMK"=`E:MoF_Yu>1A02p
%M>CZb&MJ#Q#CGa;l/nkVlFQ/8=*72gp9Lu\9N@c9X<'rqD-TT>lT`Ik0hQ`A;sb'3E"$nXf3V`h4WNb_9l1$j\(W%<ZkR_eb3d+d
%WIGc8<:so1+uIji[F_GT14#cg?%(8>%me`L?.RM4LAEjm3E(f6@F\^f'S=A>E&P:MhDB^/M>g,'1<P8HkGT\qGTPm!Lp>5)0Qd8Y
%&aO+-O3!eWm:R57=:_kdCEgSH39s5m;1h4'M`KIuh7hlLQJ=ke]@R2)Y;S[dHbSVif)3ITT31[u^Rk?k._G6bc/=uN-\a_R'<Q02
%)"J@9Nr4S13;Ele^\gK%Q7.R$ne66FFu)?kFsSOP5BfVLif;nO6'91rL&FO[$NG0''QJ>OJpV;a6NQe#h\cdqO:6hGS>#Eo2+%s[
%Y2G=j5B?u6phHrSN#<!#7$7`I*@V=2dkX@c%fcDipY"!X1.gHJR&!8gP2_*>.>D,"MIB4WX@\9[?5F&H_K<,"=2JE+q6l!d`^od@
%!ZpH;*b^2tjEHHeKX2<B7Vl351E*0Ie[Vh0YG3((4cD=;hqhtG9KGm";>ghpRunb!0$rQl<?_KU$KH4f194K])6g,2AMaff6`<.)
%eNTp\?.fc5Rd5<&Hu-<lP9*EG&@cBI!sTp+%?"M0K%3\+$)uU8oaW8PbqjV!ih6NNSu+qSi(LkAXmb<3*6Z7(+e67!</rAIC_pa(
%ggC2JdLQ890mh2#S]sp2LU=)dd]3g;euKfaL?nBp,kPZK_,7XR^YS(ElLlUlk-6h:BU-1sRUAXQ5#b1Pg&MU0q9T3(@qBubbJYI!
%7m+8PH?WV1X2tB,>N>A!megnCSZC?93P5)nrZ?=g`?'2U%cY@bBJH*h1$&?Gqc-_4Sh?0^X&i!W`7BDFW<Gtg`BS9D\iO2q\PFQ3
%q8J?jh`lmn%K\s615BIte^V6A'!"3tUF;NJZ/aPBbic3JH`X^4f328SO>NNEHZ/dt_/3c_r0AtlAXL\!mY>Qaa>9[Jj_8%iDjjS\
%'NaVFM;6k8\*N6>f#]Lm>@+P,;qem4Si%^.^ZFWQJIM#_)'DG@1\e,6?%!ar7J4bKg9!b/<R]L.pSprWlLjfk6eN#S`9"Tpmda>T
%0A'l%2glZ92'9Cn`qeJ>pNhUlO($!"ULNEo\XGraF`2E'k^5]-k.tj>B<O4Yf-=3L&.iG7jRkVcK>-$iTT';($iq&q2T&QW'CmLC
%XD'JY\jEQ4=W,B5%(H+m&Y0H4PYtL"7I8Ifh0#8&\kYlHf<VCA,^?ab*fp9.D<hY;m5etQp:V,NUW[/lV#8q&.:8TsK)Hpj;KCH]
%9$(Xa.])K,V3G8RPd2g';Kc\Nb)T0<L2?Pb9+i\!rW6C#E>'dMRRl[,ng'>1j"Hck.<f<#g=T.6'@-$'e<\pY'TH2?1FZNQY/6`t
%'O>j1qmK^sPd3B7i`^?>/<dBQm+NK:O\%"61F[0NbVBiW=!jd1cD4!CBV%fKYqF'og<?ARZ6PPWBroQQ9"?11P':J82Fkkb5@Rjr
%_)!OnmHjI!4_6D5o-eZgFu)Q@n+2@;?=B9md1N#6;0(?\8'+Jnc139+<ur[CO[sKHM3L3gdmfC'VMUNkh\qtGcJPliG:-9d:S^Z&
%4j&dQ8tCbKS4LbjcZ"(b9l/lHlCGsX9$r%+?-O:N7u8gYinTnkH2(mA/Ujds;.-%PNKV`1DtM,_djRA34\MQ'Sk#2jHGnX1*kA1G
%-B0'l="lSj&^8M3K"5Go0XpCBUEiE_Cc6U(?"oNY9qtB#4lVJY9(F>k#P-n4HA#i](NGU-.4q*QhUUl<djWVW'4'b7k<<,Hgs'/d
%@ZE4'&pItcb-!!^fp+rSG9g&.N[.6LPs^DW*6P)),PN2#Us\4hgNLf7`*GBfYUbRiFs^(VS89-9'Y>O<M>4kHPiOZjJ`*r3,i!Q$
%_eD"2.V?nuABe`%@,1`12+C633'/H`*ra5n$Ql>SPS;<6lj2<./:mAP7Lqm`Ri*qRR>b^`EL+6SjVp)#nNQd055,c#%h>Ja#RqHU
%]rBrnq\?@_j##2P-P*4i7VonA=9:\R\BZFGUdZN1pYYGm4nl!!m]6.<T<'Ckd+pRt=<P51GTrajj`&8eDr:R>%Im8<%l"jfF@aF;
%I!jNWDr:$:4nm\k`-;%o+!>_i%dbfjD=XS%o*ou5#HuU)o!fEWhKm,@Q;lW3k_X]dLuF@qg:i&t4)U&?)Lq[]ifA48<p-Q1/-AB"
%J0U36?/Jtl7GV`VpKH([iuQ^FmRLI1]cpac8CoB?onmk),$hZ[jGJ'X==Um`V!GF_qj48F?<kc-ou!V^V3')FTS7U_CBNBZeqKQ!
%H,mr)/9.Dq"rk?K1"(srqc9_4HRMQ?2<"-B9(Rd/ZE7M+-sU!*RoCtNMM@r7c>,EBD341m!*Ff\3cTCKp7W0^]sFgFP@mDbL)_,I
%:ZYBLe[W02rgaF,SZcI2lAZa_*`6d=-LuIh7n'ZHO)*.9ft0-#o3Om'f\mN'nLoXTh<ZI:h;*D4<2f8_MTB^bbNG@8f\WK.(<H,f
%FZ?-lgKHAYFeO98$g]U;"&R8-7F__QV6;DjI?R/KV]9FiP7$Vd=;BBr(e%P&nB(OS$pO,2)@q`u!&)LYpJ"\WRuQgF12!!?PS;/O
%HBWXVS'YJ/f)sB@U=22'_kPb96G^g%Wq&GK:`]$Obgme^*kF&ZZ)Z;Ta(&neer;@/_)JV<]4PQCB8mB`9M/?QMn7WtR!\$XRpscl
%5"=qiaFcH4UG1^V(a527\VD->YNg>VJ8(-eG'noh4DS<b9oeh'#8jl.er=mE#\U=pasZX>hKJI$gS8^G)^Ut3pWBNGq/!6.jn1:q
%A>E\JFj)4CH1Pj%kLojSn.hoqT%?Lp-;40MaZXGMg1]Jnb]@3E@ioQWQVh)H-RH$V&Tequ]XQc6Q1g+514?M.`_G<r9_s$KFC?O!
%B+_D*-Tai)eKrOM9ZDXTb56Tho;ot3pr$#ac<kpK%n'DTIr0"%=3CHidH4pEkV=$OM/YAIUO4iposR-oZ6uPM5ik8aRdBR8o3@^X
%&'P\u^12"SL!p-;a*95X93!LJS9/#:*6PEr$YJhlP4=/MLtihs5`p1\/MVsaWbQkW3X:24_6h/1^%Zksci%5ed#H`FNZ"siT9kDO
%1mu1<Nm5S^YpmmdOeWu2Fh5rd.AD1J<qu*fkt.,:$\Ko,;>@e<DcKgaD.rg>-e*C)CA%clBV.l*Kj^f]28,lqOD=ltq&*hmSJ08V
%]Q>*,ga6nI*Y,L@B#4sYZ#0o.X^9B0h-cboNNCL[dpa2;8Un,pm#>r.j=)%[B*c>uDM!\kf&NVoICC8(SU\fF)rcH_QedH@(*"Jb
%=%;cr1GOUUe93I&'cgaJ=""SbY#]YICG`)rhCto_W<MEm"dO)h[!+o&UfnZSN@5\Ml>(<CA$`]5A51?g*@Z2]j!I<t`:b*8+uTG[
%MI,aJ2/+&tX#S1(Wq+!54#DT1O&cgFV@,mE#ci0i.Q%2lA/4$WjgI%l4i`I7D\8KmLBGb[l/a,QN%09#6/'ufU8h.^k/(qB+&7\o
%RllK935')s"@X4ia#@\KZh?+[]V`fi"+3=&T-niR#\U=pasZX>hKJI$gS8`=#&)GpX.*V*Tm+(.VW.H=p[,n3aD>BMRdK9#gWp_H
%1:pZWls]aTPHeb%DIR[&lKYh(-lcj-:R@t9g-52YUKA,gHF>f^`S-]n=b#HgG80r;V9r/1N16jpMo=qi#BM_MG)u5ohX:Og.jqt!
%`).,l?Q5B'K%;],D<t%o?[_M,kbp:H`f4Ib$KhLPOcQ8ED]?!Ao6J2N'I:PCL[s<[_s/>2-d$eVg6r?rkKT%GS>E(M$rR#H\sY0H
%Il`BtVRbp;$OBK;Um:3$npt/TQ0G'o&,`0(9TQ6'i9.R)Xn;c,XWR=?btRTRbI"N5G1I2jlt&5LqLP7@$C=s@5J=+H+S>L2pOPTg
%mX+@T"U_^S&?H$<CB;7T5d9taK&,6VHS$@jk:=57]CYRahBM0NZ%*t*<.9-`!C:E'"F@/^k>S!)I&[qnW9I3'EM7dtigL2F$_(Sq
%"K`u8U6.2h_0(^FZ+"8A]\R3l;b].%:<'0"\?/\6'26@Ek+TV-NQ_n!KQ4]3VCl$`Hei[]?&(G+4DV.2pWh*NgmO-[IcKYl\]lre
%!4<^@7%5+LLO+,,M_91ogO27mq$)<</etQq.cu7+9OFB`hOK#'[]-?F.L.&->2*$543Y'A=fuTk+$%PEei&f$9kA0?=eeZ+P\H+4
%X\kt':$'d1WSE,qA,8%5NUH`N@]WCPPflZQd%jE.,)bthAQU<1-q@fj:/\.`WVY4>KfBuB3c[%7WF6iF09aabKW/^%&N3p#8&YfJ
%>/hDg\i1b.-h]I6p2M<TH4Z<*>/L;(HgfLU>]MZ[SnkOkrr>@dKKqVBn#],]Nh@B6+JK,tT"4WFql-UP&J3CN$%D5B@ughO%b9*p
%4)rAGd*q@+UZ`aTB<RJ9D/%M['%?76%DeuY3k(]6<&(+/[c*D%&rN#M.mb,+`sD+)F^_[i4Wb"W_$/?ld(oA\de5T/#o\;B><@Lk
%RX88N9))(-iFLq!NrR'H-t'e]CQT:J8mS\T&<cOE`J8"ZJYk3Ab/&M.iRCpIk-SQ;i\!OCiMjDj<LHOIA)f`#GV+0\hHshdZo\UX
%G?o%+`I6s-C2MegQIC@s<b0G_['fsdmaY"K?Pj3A`)PE5P6B4j!16S^Q7#P<F/[Z5@ftOX.sU4g@]S'1c<M1SW1l-bgIoq"_"0_7
%2FL^1(0n<)MNnUjb5p'eNhnT?`=$cGaO;_jhSL,RR*9h`>1HX-"4Rc16YnO@`Dbu&Z8P7rkhM*mRWrom[@=SuG^:^ZhYjnTG-iq9
%p`p*YC2M4["IKSQDrN*YgM&BQCU9[Mm=TIM-t$V5Z`V73:l_G%Gk0GE'<nLP;ZY)/eSQGX*=BVFl^F1Pgl3i;HSR0`n[sG78YMX]
%h#]K3@^>/SE=c(>P;R_p5nmoh?3\DYWmq+*_^P6*iEcCnHQOe,CZKm')^hq/nUr+@)hrK0OscXI!]mqfF`B(J\$1m,*G5ne]g7`G
%W$>[_Sk3tt6p-9#LSMeQJ1rbp\gH,]AtLd;P&>+HA=C2AQM165g#_q\0nefZD>B><#A3PC4E('dZl83>h#7_>`K4MWm@:oT4;L_>
%.\3mX5ToZn_CF7IfiDlqCcV0RQ;K\B2Q><2VQK;/>A]Hra*<+kT\t$1V.:NYP;3ULAm8p^Fg>hq0\4tcGgMXo2`G07BKY0[^CQ<<
%1LZunEmpf>!bc@jct%<Gbr3qGGa^:&n)Leb2"("$\9fX@2UER0P/rq<Qo:YYi:*jkArVE!\ZkW_&n?rQAn"iSfSun'Ne)p_MKk%#
%9YY&h12\%EYj8U)6lQ<bd-\_pp`N$%!ubBhXg+?57"M\o+t-98%`;1k\oXU]&FXZGn[8l@fG&5f6Gnq2$WsjDC:8\6$\L%:1l3i*
%0pVp]-0m,i%dp`O9[L4DTJTX63$-/G6>%e<rGN(@39COrOc"dBm$K/JLkDaono]S(;c@i=(i5iY'\VWj.?&#Z2G\RLOsu^AZ-<qG
%m\/?L7i.Z6nQ[V(%'-sVS]!Te1M<EJ57A_r8kB\7Q9.U=X`HW0T(%m0ZPAdG6Be?AN).6ji;m/%Y5!n6)$%i>)/(sF#J`5m5_&8<
%gc;g&':tbZ*IlI'(8Dke[PtX7!k$2+3C4*E*.a/oC"BgjDW?H)>"!`nAYcE`i"1&k.,[^s@@b&r:#Tttph1NmpfWgB#tD=Q()>0u
%;q6`AbR0OGW*3!-l],sO(L,lOQQY;=R2&.-1>,,5CaQHKD6\b6!`!C>j;98n2GOGtl*7_fgVsO^+3?S91;sK0Dl27\6qX*?@fLno
%A&a\mW7V%u2SIFCOSjRDj80"@mh\)qe*E.R06hlZi">a5_;kCrO$Buiq>GocpBr&"06hlZi:5ugh=h9us0FA'bh_^T]%<g'hjl#e
%_N-)&'3D8KT><\XI$1Rs31)F4-`^f2)7*Y_G'Buk$"E?j+l:6cnGY;)cR=Q%ED/PK0sA:?-gcc2-2usgn*]QqP&Gg18bhfYgjejN
%gWi<.:HRH\iP/`9QqBJH_t^rQD"uios1K0HHRo$oV605^lH-XQhNN?8r4j1SiSESDcb:.NRsX^EL"H:/nRl]m=8m8"/prc&q9i==
%%l-[s[_i&h[kkJ0J'b=M$?,+!AfQg/drS=bhG/=p_+o56p#Od4n&[`ka*,=HE_i=rKNGn#'41]cG/CShja\&k<d6\0AB[\0\NAb_
%AY-WkC[-hk:*uP@p0X54qY<%dbHj+DbMO8t^Gj%0a51S3Xt^Z,p.9Nj&VB*HiC6+iF8MOtA7Nm@0rl]4*4O%j(*#f:HJt[7-QYNq
%^!_u"^)N"GohUACi*3])mD)+_^)N=X3,PZ/&u$n(WZ@n5iU5g"p"$8VcO]"2"<<"&ouh<@c6'nN+1O1%n^tc:grDY"mNsgS3dgF"
%9R/\Z8WUm>EOMj%'<LSG;fFAe=+>sH\paUR"c@@(eF7&AO>nSR4`Ha$VPXWc_9WP``Mh7)?i(N8@sbT/e998%DEW%3D7HK,Ep!ih
%JX6WcVSEkiqn#?_:SM.YG!5#c=R3VNY<;nfbpg#u*D)_0pU*695;s$gP5M$rAWlnAV9CA4;_,4(E!G+L]!$=OJL'\)c^s"(pNZqg
%BVmH7([tR$M>^*6X7.#%9JO_D:iosP15-M6MQ+jPdoG("Wrl;F:WnV]G8!cn.`+pK[Ds?N'6coA_^B#9B)BWoo?"0'nLohp_*&K5
%Vptga8Z[:f$-"a]fl5j9nPd$gCC;SYR0.))\(4DgD>.+NK=VXkEDriN]p4SV"kR@RL2NVm;DGsc5:WbWG\FqHmf0\\;dX5V?\-!\
%d9lQ%!o;FDg=I&fZ6POf0f$h`L>uNXkKOucg@6H:Z/(B+F;R3>_fVCY^T-e:r@eoQQQb`lL]?9GitLh<.1N0"Jnph:3GQ'/3nXq)
%dr^Wub^.+\LZXA22??l:Y'q8VP5.K?jR_Rn4&!Q*giMi:(CuP;.Xq)phr,5/i_&a?#7:lr:Tr5=\uf<:l[@7L3uUf/S's5Mgp4,!
%c*>Xd,c-1ViI$4XCe%tRmVC_I)On%@dX-?'Nf0T+[3Vh#T>8OR16Z*ql`SZ:*-95Mk1+RD$U-:j[WA-;0S/Ur9Z);GHb9".&*NCb
%R3]4K)fpn6e-aZ;_gSZA*=Mfi9Xm"2Z#D/9WA.(R=teh-@CO@]m703$LX3cVb8(abhsnps3JA+9Kc'J.gib'P.=R[!.T[GqK29Z6
%G@"=uVg+0=I0P'shIa4bjc%kcpeu,B@:tBW_1a81:U-';KrT[hnuR"H0);\WI4tJIT/*Yeqg7^MV]+3+f"Z.<qd/jn?Ln,&o)HJ3
%jSsZ*h=p;\hm_KkhgY=aRfE-LGMfmerHBjiJ)>_L^$,J0gj\F5B@lVAgAE[nG**Ja3ZTGlZc'01]O'sAna0=F28/C5<D-\JD&T$B
%<`ecc-'/:5Z^+Zh97q%T0=$+*1%>C2,$PEoY0-ubNtI[[?NG4$@<Q:pS;c'@.,8!0q7ODjr:Wr;^n1peC?:d]nQmeZgC,H*V:eTj
%3]jY=::qk*%t'kVJg9#gGpDKT7UJ$<#p?H+ZOa9ci#FE+')"f#mY5.p*u;2Tf<t@&JG*NBoDYUr?['@dJ[)OL"30,*A-ePkE/6Hh
%kgn4fi1MkjDuqg3:0'upL7pBO>051&:gVUMqo!p]1?[jd!*nT\q[lhD)Y#7S0c<#Y18ij8EFC,#Hrq.I8'WXqqI7(9ceCle`,M8c
%MNt\_g#tS5B[V;I>%P#4L:dQPgL_alI^5N:(EopAmUO&&X3)f?hYH`Xd@X@=)fE0,D\\kfZMYTh$9+%U%"'TcD5/4V\)U&ihViFa
%Aj=3C[Y7in.j/&N[3YosXR$0eT]X*GkZ(?8ULiaT.7r*,CaWoiB/(%E+Wa4q$h9T6ge,.38PB</Nli'd4t_WB'nT*K6"."JMXI"&
%qdRaJYI'6KPUVO^-f4$`\rj#O1HB>6gqRg,41C^Ti3JhM0uX7[PAiVhW+b<m48qATe+gF'#-+Lu1s*LAi.V!kpphq*4,OkS[42f%
%Gbph)F"t%bj9Zs=A]W,^\oZdL(ZC(Halo[,!=gofqk8+%'6DO=c7r_>]93QR@<+;ZWeop+6,"U5@"HIl>?`9s`O`D"!D]<M^d2#&
%4$]cJCW)l+\>]UC;D%8Ie?Boo\t)]0Sl"!97pnD9a%O3p\AX<k3&T8#n*\o+N_;`U!pE),"6V";88#\\DlY+qg=!QT9QJVpHK*^'
%W8X["):(l6F0.Oh#Y;+cf"c-F`8fE;XU]"G0c(<l>g_nB_dlokTFAO!2R\'t$"A3lnp@Y*Ha1Yu=EN?qom<h)H`cLYXlt,6kl8q3
%&N=>C&%*3;Htu1!#AZd%-FBCpXiSY_bucLErgMl@npf2Bgs2Y=#B_EGMW@"d613(qrOX-3f)FlB&Y$I96o$[.=JW8&r*kfb,E#"]
%QPYRe^N?`:frI"QS@>:o)bdqLX#@QPE\bNrX/X<'+f[MgPNgl/>4gkRVS:b;/Ji,uHUa6L0,OR9b=0j\jW`r9\`eCNk\j`ZEXsMn
%Q]#,D`3Kq^X0_'P,0BI0(WjtW$SEEcMl_\cI-jVo5bGpV9?TbkTltLb0I%Yj(V-S.3%:HL*R._=;XiWFAO\[VMSOkMGI;*jF/eu[
%d:*]Da`N8EZ4h\SXi;.tS5%7_Fc+QXp=dVc9!eg)$)TCoR;kTf4k#-thp(TnqV=gMN^h[7Y24KE!]0bOk,ud-lTDPoOL?mp2*,9`
%nW%qOE#4GrP!bAif.<bs3tG9*<#_.\iW(?&F5c?DR'mgW1iDLO<QW7)JneZ8nUH+.6mc73-eE(gN,T>rGg54hHpS/!oT'>ppeD+H
%Ho_1%>>BUCAR$E8c0<JFIq"l(4\t-7o=OLK1dAuEHjVEOmm!%Jq_XWEN`ghs`=feNl1:CnfGo5K(infY+PfU]UZJp0#[_=&*!sJ0
%P726o9X10V_pqZ([/=_:3A_6XmB5OF":cEXdWhae5f5Eq!beJ!VUFj5egN8E[W0kU9#%'HLB?k=q/sT^A<(BLh=%c\!>Q#$!VG@5
%KnD+rj_<*ne*(<E#)9-o,<S9$n'(EJAsr]\IXaBFFjC<;mKbk3`@NtpXM)CHo,jlYqTTSdS[ZZ/pT3uk`;A^^_T>ER<"5W-j'a0O
%;X>1beNr,0:oOpKTD]T<^SZqVFq[i#^X4T:712BWomdtEO5b^`$oQV6bC[`h2Z,F_NTX=3(Y/\:d0A+A[>UeU.hm<iEb"BIdDiDq
%*XTb:1')+f7/@8srW/<U="b<P448i^0E-)'U,3tTJ$XWIZ?m>ckNuON$Tlt>F.?%R[iWnq2j=7@=8"bG4baD]$5E@:O&Fro@2i/C
%#"gR6qQ4$Drpq5t8)<%*?2B<00Uukob:Pc\"Lp?ZOhgfB3)lh>eruabJ#PItf@*d)T51l$j\Y>dUY+o;6kKH[#fUD@=dr\K5Jg1Y
%=%a9`c*FgZ?FM\-N]np'RP(gn?6"nflLQO):A-\tU.KAfe\g6q<"=i*MbR##lXDoKE7Lh(GQrX#edK`"RsnD:l1WdQ58s/t@Re"r
%$mqu5\u_3ETL17)X(g6#YRB9uAIR2bJ:T>R2(7l-LVROI>PE/F?o&A&cs&lpd5!o<a^l3U""#JhkVq>;+Oc!0&rB$d%pml,6'KNW
%s#8@<h<Jr=h+=KtYBDG61Ju%KNccHSn2keQm'hnfM6CCPJo2A$_G"6uQOLTh=@U3qC@jeNAI.uTH;>=4AdEF9R3-=1+"bRnj+\JD
%/GKs/p+OV3<WKn+JQ^V6!1/F'M"tam;f.C[6jnc:IX9X2gQe[cSY31$n]_%g<PU7OPB)b"6^+.`c<T42V\\'uJ>gn`6-#B$gE+MJ
%XaH**r/k*u1j:?4/9r>A)?en$0'4p$)WHCPi?]!IhR.u[!!(aj$=;^HrF$bNl-Sk5a(_kmqbL4XB=6Ht3XUCAg6bp&#OV5P][Yd\
%?N!rJ[T`=2i9J5U;kVfkhJ"o1&Si.R0&F174osk5=,#B4HaVhr#=RM)'`==I:k!Rd&?riTr80VV"1*O4'Y[TE=&_9L=jbI.7CE.e
%C'u?RO,Vsf%pTREfjCc8ZV!Y?*B*8iglH=7_P5+TR,q:ZA2tfP&89'I\>9O2KHBD>\GTu"K7>\s?d9L/`"$hfHh]r-o(`5aBCNZV
%LA@H)_1/fWrteEfeB.]j=rnnDi^[`m7abdO0:$ptQbE=CS+$-!,*a6XbC;=Zpd9=s5?hUY02&Ck,8%shF;&d-*jL&!o`$N5re!i<
%miqt,[:6"I@Vfd/MN37hBl`#`"UX/mK7D7R:Tl>K"dJdHW3%agmPMOEbj5Osn)NERX0fU)Zp0%NrpqLO%6Sp6;W^Zm2aU(=EV1@`
%52b:"g*;2>SkUOLF+\[*rsmi!F0][YQ?1ijLSng-*E04pZNMA,X6f*'N<pSZ]@?i^cMG;IK4VW/Ick+RF0IlnKDej2htblr.1%6B
%g3<Phs#OZBl3koOcX[[-9%*_uZ,h,=p'7sTUA`WapA[arW7#mIqMutO$K)#p!ibn')E=jn8+Ep_I/_.L:";)*D+6E?pn&;70o4M%
%5;aIldICke?jbLu30Z0lVJJu(p1K(ss$;6M>aK+kOeSnV.FZ6J&AjTuO6_\)j$C::UFRRN/p*Gua(/'I8'%D\e\K'eEE,o-oT<al
%$'SrGL`D;P/*7gtB`B=L@&AZ[(Z8=03q"[,U&m,A)Vm-"DllS*0HXV2oJ&N$\Ge]Z&T0@]PSB-2C'f4-TKOuNMX-FA1*d\9-jsQ!
%K`@J$pljLq^QFBX*Y?oEBp;T=%PE:5et"[a6Cu(kIjI2T"US*"^F=X.Ddik0YLP1R!@oSp2_Y(d]Dr*404T^NKbJp8I2$#s/-!]Y
%P4,Vo<`o+snD^r@HL_8nq.?P^Fot&]SG2-rBkrHBID1#&r53XSbV@<7DN8eb:*\X5kT!d7>Oe4MqtrG.H*LWqNN-G1kG99:4T+,#
%%Jph_.bt#`eFW_0c[VIOB2L.+dqFcAp<PsFZ<j'!F'FZoVQ(JlkU='>0)&7pbA,#\6=R5dc:-N!FPh\@3H7[K<SMB'.ak?4'W)ge
%UV<ILK5.g[Pgj83151@]khuJ&@s,qlIk/+L%7?u=)Ot/%=57(WT(885E69\9QC(d5B9LCXCcpfTMY1_.<-5.]bV3V&*k:0R&Tc`,
%\3W#?_IH^_Ms/Am\-5-P&5AA14f;;0dH\/VWe%j#]KTn2dp4_$MCJ6H.@c59'T%_U'd^Mq!kU5X7M`Sp9S>X9L&n"(0O?iQ[uIk<
%Dl_)<O5)R+97i"A0,g(o;R()k<!Q?OK)jZ\2C2^_=C%Vol[Tg"<"12%`+'mV^q_&ZSIRE7hJEmFPi4:&.=%"S2++8YfALb;2Do*&
%gTD\,`4-$=Pq&iM#BjT<ieIf;[WU%f&?eW'6jp"=)lD.&#0d:gIu(([Sk`c&;GSV0WU>]a#1k^O*CUdGDHMQJ32/CgQ:s)c[q'a<
%!ePtkd1")iY`YnWRR#C0ASo9bW?g;A\42[$XE^)O2H)a?cBr>Ucih(l&h+H5U*?lG:s*Ae71dm^;l@0V3iQu!\RNK6M5u5FX\6Xm
%P%lCG2nC#F.NAs8g2.FF)U8J,B>VUW&qd0P7(C&ak]EIk@?RM0_S)*l>t#[PXH12F/P8Q#h%^UK'ZD?t'm5uiM<U,h.<PhE3881>
%eXUX%ZDT8VO<W(0`IL5r.Z-Y\becs.$l#1#NhHm)3d4Sna[n\\Z=b[Ea1G,!`N'Y(lkH(*8/!P5\1*:cA-UWoP($\F9[[0I<'pu]
%pnAgOnBGbdVW![[F?\<pSe.GfN(U)s$O5+6:&ka('!KA#KAt+YN?3_<2&`B)@n5f)DnP6?c'ehMBp)Z:_ku(t/JY:NQEd6;KEAOf
%ScNgk=P#DR?+MY-1C[5*0F8'nDd7@+-t^Ok_q8EAU"$p^+bK.3C8OIt#h>nL+!au(=psf?AVNuJg"K4<F6,q4\+R,0\ItfLrg'W0
%?N%o$0leB]9sV/I#Cj*90NM[;[(U;r]BR]p5]fJ^qZ+Kjc33Ha:;JgtU$B;?'R2Z"7^:'LH5.l8l%p!Y*/)3fb`:Wn\eqcWp-lWS
%h,%fp'\P@)MKOYU_0^RJFIKe;XglV7bf!<P_6n2.Z*Zg6i?=_*kbQ-SQrP&d%NJ0a:7)TLN2YZZTjKYBkd!oJ[$n;#OUuSp:'L&1
%^4hB&ct*iOJ-_f'M&=>hF1)BOI:`t2!h)->BZ&:QB+c$JBlq6I;n5<5K?'g&+KD1CXVk#i'"?RP&7^l>VL,8a";P<bn7F(bQVtDX
%/<bg1oY6UVeJ.IgTa:]ck`"TDe[;EYCI7]^G_$PX8D2R4#.]-*U4XdL&.X6]lupP\Kj?%+ALMH69G&5iFKVUmK)por*Y&TJVTH<,
%QYK`@bOkRg(YLF%[T#thM0&$PUm#'eF)<CYeTJO\cX?m^>S`sR'6ArA9-/W(7=bd*`9/*lXUkgdb?j0f4#*9HFHW!5-B^^BfHmfB
%6+4k+Wd*tS;1d!NI'b&4jARKc_Qkb8P#0h4_aJ""1pnoMelj>EmV;j^KmOg:=_j,u_S0W&`C`!akQTDm\3d,B4R17]Rp!kbm.kl+
%J_F;cCf'KLX.M:0;-YsN6O+9p_Z*Xf,>9;]1lnI6T7b&^rZOABFG9W&%Ve9\cIqIRaUbhW`5tr>.m0\tR@6arcW"S4<1tKD`M4As
%4aMYL/CqSEl\/qX8)9iM)Ai,adNJeMO;).J>p-.&VX*lj`bY-teLW(^5j+S_1muHG0gAum8T'\D!JCRm+p"F2k5=O$XS<U^N2mE'
%8XDjT<=oU`c3FXqARV<Mj<d+DD(DF!-rPW2Y'bd]+^Y5f9.4ot?O>.4Vh!P9k5=O(%(\K6DBumM'&=4(>[[X31gV4rf#q2CRJ:1!
%ab:$GgWs./!,T\HEQTsXdSHN#nZG!3$(QK^DNQc]d&9b!Y8a)NRRoOGFHU1f5Gj7US@E9C2#4sBee3ZcaP)Lj6%NYR)Mq5#-lNab
%L@kS:Ygg#Z^J7<hNWe2JM1=?L"uAs`*r*:9.j>J-N0J3Ags!HF`8bg[.TmBR'C8I#3(q+"i=R&RFjnq.NZ#6bjZ)&4D*+bBg_5XC
%KHUN>M$u6'.hmCUEc`q3n3oNaj@E3Z,C#f#ZTCnlkJqHh3c5Et^/W^Cm1;(7`VafR3[=Z5^Zf!fkj.-=?-3,D#<)8Ti@a6.T_E6[
%\6>ZacPsP0Wo*;gZVmV1-f\XA9Ks946e(D[r2A3p5eHf\-pcN6h\..HYKK;0C2m'f7&KBoZd>'q,`CHG?5_J_N\\RNOflj5!TKD-
%?Z)).[jT4o]h7sMT/Ql2Is'IN-kInh7Y>:Z#%?DK[gk5DriOHC8\KAkPoItkAPhbh>k_n2N.4=b`I$S*mdT>)iaB:\fbNm+qb%O-
%BNAR>@JE,Sgfn@Ijqk6pY5L#9WmpB9@+b$O-j:m@=%B/VP:r$@>C>h9(i6\5r<RQ'5hitmX'5>I+RPnQ-<'h^6HJa)n[5oFi\d34
%P)QTgmXKWTIp=F=r:5!<J7X3?-HC+la2:cXo+S(;^Q_/GL.,?o6Q6Aik3JQ6GK:49oX!NJ^Eq%?g93^AJ,^<unf_=Nr'*"3%'QAF
%QQrU'?Q[VkfB2uYdFo/b`tc]M4rm\!C>BU$q:P&.5K*V4ZD94tj*s,.hnCqYhgU`>dCVu?ae'(/f4K^HoR8t\X5m&24Qil1&'%]8
%NPO/]OS`k@K[BEc6_(=Oe$p-g0CumITNk4Mm_>C3Y5iY<;rH'&Nf"Qj\GcVAbWh%[W+'=4^;P)ad\?TU8[ZtdG64,]@BVi&p+&-4
%,nFNHi1sr"IiA(GV"L\?XUYEqK.7qjpI)KrmN1d[0EW]Q@3]_o*0.%Ok3o\?ajZ<Q4!\0uZgjtY*dq'\f%_&IV@YjBG3e0t]c&m!
%ouDJbEb7EY-A8s/*4BZgR#O_Q=Kqs3];otU4g71Hh."!1M^Gou8>Y4&:R2snHR!_IOp?R!Ggpd=l.C,a=5BbhbWp/%.eS[O8cZHj
%%0CRC/s_'eYccp5h]EV7!Wseqs0UT(-sCXomo'Y-kfOt_SC#)S?o09TL]&EQ8bk;YV-+*5>q1,l_iOsY56kBJ?FeSgeu91+cE)MQ
%U1ZHWG0N:efEVU&2ETrBdDL/Mo\BZD/<6aW>*Uj7PBMRNPI(aIW<N^[IuON_8omr_2;?B<D8^E3<HW8gGrf6tr_a`uIDZjPRVGp)
%PtQ4;Y)C"kG^_:;qVE<bRs4S[]i)+`=m_:)6f7)iFjVo=.N?\%kLIDQ?_p\Opb9bs@?LN?aOMg?VG^sh^=X:r45#oOlcMjA,Un_:
%GLEP9iWpu0F7^,b6bD$R#"ClI)+BskBX'X6#!eW8[Q'$W,qd0M.D]'U+?+2Im>8@X["3>glUMk*_H?!%mJZ#MWZUuX`AT3j+VgA]
%g7?Xs\<_K'nWieH?GOVt]:Qi\Z\U?3?0h2<232]YMB)qK0eOY_#*,b!<8/LS&$U"Nq!cbDG\mZ48IiQh%,LYe5/O;SDYE<$a*.,_
%TS2UW\t`"`Dp3I,$qP$NIK>0(!<sl'G0<g5g-hLG/U>$:We3L<76(:2,&:F>E0lX9?$al`-O812H9<%S/@^P\l>Fh;+NDpND*Z(+
%jC>taBka,jbUbP!.fh=0HhQ.S@^fh"c+0-<e2kSeL$#?Ml'5s]l0CtPAC'j3hO1>9Q/6uB0RG1,`frri86\c-l!k(8oV*3lYt^tF
%\m"iLQ\N)>lc/]62\,f1P+K<^HDD(p'jR"KHgOG7k;$J=fbNtB%WSiLUm\S/S7Gbu#o^i`!O(Q\$/oKt?OMufI4-kF\X<QuN88=c
%^$\?@lYjI7][RpDMC<q&/ob":>J=J5[,NAg(VO!(/qP>&/,?DsV`8?!Vom1=d.'%Z*`dhPaZ+PmF*=B8W.ZULI&[khGD(/tI=6nR
%:MSn,cA0]mNOc`\A9Y0?m=0;3"4%8V].>!MqZu"M[>#+KNQ8df[ZNq_O3*8[]Moku9)h)RN+TQMS(E"4:l4oNp%U1])T+<aQ@>Sf
%q#-Cc_fELtrp;3V2Wh66BW9c-cC8Ar1hsH^?DI.$LI6##Wq"*!ekkR$)tZ8*TZeogZJtbl9ie:3B"^:b$-sS`Dh*T(dus\/+AQ8B
%]L)!O]]8VS4s!.4-reG=brNAE,kgEG/R7^dU%en'\)CQu6nCH/p(t)9)`MERj"@-'UIU[/I3p!\F10Vj<G2Zo\Sg1=Ykq*Ke[hN#
%V;36CH60Eb);"lYp&87YTmsjhA2?ATa6[6$RV8qfPS"#fn<e+Q_o)=e*+;IP>&\)O:o5F[%F(A#-m]S9<QNPJ\7(cE8)=$IfX%t=
%P\PA,;,4@HCmM'Kl]IH.oc(,b]@cj-ebKC3BdT4.DRE6K"+J*j_f9BMRR?/pW,339A@Xag/"Ket.bF@(G]Ohl=$CQ0?U<7WHWkRc
%N!4+!V01L3[=6PV0Ycmq6%.h[[G+^PXZZUGa*e<'ENom=IpeftJ^SIfbQ)<<pn/^>&.bMVEMbL`PC+tt8r!16Ku)BOeE7p$T`72u
%3Qb]m%FNh(1B#FLq+Qg'BHK^NRHA!0dYZ_`B5c:u:8YTLMB[s:]CS#>dpBTVRr,pW6TjFSOA4cG'c'_q=c99E?H:uV5!00lG!go)
%@-H3MF3560h4A7Udr_KcG-jH'k7NN5j)4\!14BBcMr+L!K:_<P22As+/prEr57&DZg@0pJ/7bDAY?r/s<heCHXMh>(O+MdG^JCd5
%V*G)/$ECH"2O81o/(HrYP8;n.L9O*nK)$sU%3t?iC8fTa`<K87,,Hr)'s5f>.VBL'gpiJ",+he1,fi.ug2>2W25(."'T;t/`.r*'
%6YtrrACJX;A!S6OQO\8GI*tN)Hf:`)-RKL=V+\Jc!g.NuC;)rtSs->Q1eBUWUMmX/D#J"o$/3bcBYMX+Ecuf\iKq)l%_uWs%')O;
%+F8La@B8(:GbWr]__^.XI>TBV]NuTVr,C:=*C)IJjbBt?io+.ebB\Lo=gQLmG$F>W\8:7mD=B`E:0+n\"Il0C;&sa_!SfIPn0bK3
%[.Ha!Z!ZiYZ&EgBom%ls%1'9o^&CRlTKhNCA.+oaT=i)(gn-7k(A"W=3.*s$>*88760EQoBi?[Q:ELPnH3Pd"Tdqma[,&(MLZm=6
%p<%";G3r+35)Z6MK=t#iUYZG$k(7C-Q#s>L+"jk"r@A=n,d-ia::/i:j2[FK`*cj4\ZBg\/BO=rP,)OK/Q6#?()*1`n^YS/>(;nV
%*\$F%9k*]R33Z$rN`,QKMrVaA<m@P3gH4Lj4MF^clKbs##9EA/DJ=a\mu9)@:FYZp[[-:PNeb`/r2:4`@A.ZnUFk>uhV'LTML23I
%*L:<G[`H]3^V4r;9GZ(Hl]6DcQJ6XVCpe:ZM2brV'@!U1NH='l8e&?THKAI?cGl:+dg]*\'CFP6>,j;L2u()QUWDbAVCWh(-an2"
%DF?jBoJ$5KJ*t.NjnHtbjWKqJ)/kGTHn<b^8DFt2A*Cp[$V/CnZ@3B\2meprXlPYV*)3!,]g`\"Q)e0$3aUXQ4q';,bN31@5;f4h
%g2TK%/PGCu5%lR_DD[sr/#i6jmRh:,I2jVqo?6S^J4O/@Yb=BBD"IKPOmJB83mm>Yc#qlgghq/H5-1a*62<d+[PhZoa`?N_GR]nt
%.oh%n8sPBJHG'TJ/>$a6@r'UoS"FoC)"*EN''Y%NcqS].eF@.7beXAhmI55d3P'?=H.YqcTdOT!Vn3(!g0q$*S<aD'__/MkWh!*>
%_I=:5?<<.5q'gEK=YFYEkCV+Y!HuBMLM(@UMEj*uC#M=P0@??GQM"tX-@7#\Vq85XU,D%-3<0Q'Q(g?%fek(^>Mlk-]%ProXLt)f
%dqh&^6[NGph<kJ>V%+L[Sm2ujnFe/oWbM[cK;m'&OZQJ^mV;*[]p4e8bZco&><dG[(5j]$.9=$k0[H)'YEEP_e9RpWDn[UUT/Pu]
%9hN#J]Ej,GZc[^i7?1]P[+jYE0(X8XP&A"=p!$ZQWLcc7<b7r_c7A(EQ(Ha(Oalg>--qTQO)gXZj[`4gVR6s9A:[TBIM(DL0#!5e
%m4b<&fIVssP(gg$G^=<B`:ZsDSrDDicu(<D&p0GZdmVmdb#2Mjh:g+E\]9@qI'E:TQ-0/gXKFuj4nEr>^APqB:9H_tJphe]__KOF
%8)koGiUL7Fj\R;<fo#J^?ZY2[;*6:E(%.@.iq&JO`(pt'^,2n$n8^aVDQq;b2L6@h\bleTE7Z=GPL!9k;%k'XSRiXC.$C_lZ9u?/
%^:I#/Hf\j[*mXN7f=o6@p9Ls2Ou[;]bZ=Bb%G`9;-^?).RiO;K3kfCS_O$.+b3e$T)@0,>Od&#rA=@p9kIJZZHS_#9n!3+^hCBXs
%EeakZ.bA^oN6Y?QG'6Tk-SFjpY>MKkp"01Xl>9MbUtXYj?F%qf?%b+rU.tghlrrjWaXtR.6h7P6=Fk3_b:+2iDHNnpP,YSM1VgKO
%&1TD]ICjE5FQh]IWM&Adp$Gu5pTL!Jf!n:X/X;+jEm)SJ_F*(&CWEkS]=E(c]5\5N%]-:,/)5(*[eAdd8(HL(Xqn]]!ScU2h6Kuu
%B>`Km2m281p_=Z-4Q:KKYaV16@(\rf%u)sghrTrkP/lsFAH)6UD>e2r?P?Z@kr9B&]`rn(]UY/Ra"PR4\=gCI;IS'h!9ka5jc*h+
%AR7Z.^Y@I*96^2CXWEd$cW<\\3OkGFekXD8l/Mnqg5um>jDCl"g=V\B_Wb>2[c>qhDVUrh`igi@MeT1_?WmA1\\MR]7<Q4t1r<.b
%[H(@>a7WQs;L,hAB<fMn'umEpkf,nBKr%Q#L.!uQTtcS?KDpm0A!;cm3p20[1Z0Ne!o;3o`L%5hI_L;05hIEkk&s+/9N&u%HEpWK
%lElne]5aiLV+iL+"5.gr8`^7E6-*qlo>2Y;Sk/-gZSaIca9)@oRPDSW`ahceK\_WdK_0:(Vh#DYr"Rh]EOfGU25fcR)+Z#bO(RSH
%Bb<nb-`9P`X8f6Y%5\20Z,_X4JVB/UEOl!&P@!k`1A!E:[`*2WJo$<\];*B_B=$e_+gMRe[k4=KN0MDhiGW5XO&"En>-R]gY>j/>
%5%J>Nb'[."j"`9Q7q*`VLs2`KijkgR"KTr][MGNZJ"5<cR>.Y8KVXoN:7J'hBlK)krYRGKBlR\*;OrL&,r=W')1<,rJ--ten^"o+
%-X9@]Y)g0)`(IE;EBm7gg(-!m"m];UcFoh)D<-;LEAVGj1rK"e@Z00jA6OhZcrE6bI""XtbH:MM@G<n.L-@Zu38F'#,1.>:G;*4l
%7m)H>VB1Z^$D6hc+S+_74^U;uKbDuf@5H^V?f#FUNo!^k+f/MFaieSa/<PE'PgHsX-T\QJRj`t+)lHU2ALmJClV7Ai^(>R?5kV^\
%/[#o?;f#0bGsY.a<N9]3X4_pQjWXrpE,<+mZ+RD5j3/1mGs)Ok?SMO=gUUWb\8>.RghKY;eltALHqY_nkWj\PYM]ABi8k?/$TV%5
%0R3C[jC5`R%\q$_E$DO[7EEe,2hEd<n\Mps%p)CUbAFgR9Tb+rP0.Y,IkL5`Gh\7gp)c(\.CK:@6qXG:`5??T@d.SpXtj`$5(chk
%:kcE/LE4>i#B.9=;@Wd>,b?jsamM@-DBB[XB3.U=p)p5a7pSePME(f2G8OP,jBsXkB(ZCd%A4Y!4IAUGHC!6"/QG*^0"*J4;2.k^
%UV6XnaY]c^g8VjCit#UdXVFL^lm;8j6klZQhrXFjm[96J$CY!T>?J!/]is,;aT:M;'hUD+K,]@2bDXUH:N74j*48&3FV9Bnjh.HN
%K!KrI_fMiSC^8c<*1iKT.\4#$;g%;^Uff1VQ$nTQXmk-;dqU:tm>b%+PpNbH#l\"3>^nGPq=lXdELm0rES!4Y:`\FF,qi$bf,0\*
%5MWoN(7BNm&oWb&kL+?7hVK3C<<j1CgYt6@qk)\%FQ7=P/hn2"Y-a1PRpG;f;qg&T`;hSDe]dZ:Vt%*BC-SPS;j+e:2%9?DiSce2
%DB?ce*t$_K]U9J]>';JP=?,*^X[^ku:gH!k!3K84@'2,'\X,jkJR_[n>G^M#ioVGr][;PtRpZ]M2e$ulY+A7.m)Ll:K@O%]e#)pf
%R,&?C*D,t4p,+R*=E9g',3<W)P@W4g;pH1h%ji^E&2!Tjl/o4l./a^(\<IK0n*,ZU^Q8oo[!NAf@r@40$;SiCRu2%'7M$er>ib=#
%PWZO@.q1-?O%q3n9#k2C=YRJgiV]jC8ahFfEJjF@4)pB:&D=L]D1/2U\m2X6[=>o^C<%u=BJeTm?NdqPI@aa_:YD)tV$B9#*_a5E
%T#6QpCH1)S3g_KO!AVe#ZpFA$C&Pd1pM<BM5>[/SRIK5t3`,b:Un@D9F&A0?WS)%[q5j2i*m5nqSm!CDN_5@(/SnaD._IKhIphrQ
%L([_&=3I"a:@fX*?f/ke(TZ`ljCKKlJ]HWqh@i\mjN>:(^^(%K]q.6/3*o#ajH>CNY27=I6Jj1B0BR=/U#im[%7le")iJL"_f-kp
%/s!%:aM"N*[=C'WL!A=\^+lBa%F",!0H4;/26X^2q<G_jSeK_6UQO$u0hcXOa@=4\94V_L&<HX9>7!n,%sqM])ii%:]^EmGXgZV^
%\MsUsD_7C#h!M;j)P""$*eeJiT6_$/o1E;lo$d0lfgLtIl>raiH+/d^qIVOqf"787:$QaSYNMMN3ht4?/GJ9TRjhYN%DfKC1k^4^
%bAR(&Vs3O'#mRZc4pJh.E2h_J@AX_,*k0O38r<_)Dt"Mf>!JE0%ri01,K@05n,$=Wp9F$HaOWaCLOtptrjA)1/hH;'hqD5=]5u>g
%`CMgEaEqR5Eo0!YXinhmNU0MO1Y)62jVD`<iPZjNN_r.kP5M;"R]2^Yle21#BR,3*k1a:?!5?8??*`'A>=G:^=iU!+kj,"%5+o<1
%i*hnAD5PV<'!mkI(6[Ic,_,A2;nEm@OVV-<_KS5/9.-@s\TFQp\\GX++!f,(<cWAGjQ]t/\o:KiD.Q0XF?hL7((qQFeU#*r%pgZL
%3MROLq,V4DJ="P#?QH3:s89!8mBo_Nd2fs1O7q`7Ie1jQ/JYX)G).UH$fI/Vjhu;D0_R?;_[a_Tpgkb;fJn:pGs$<G;d^!DDVA:*
%ETHgV8KhuO"8:)#"Y9!57eQT--?iJ];IofDSCrB5%Pqms>]qX'\9%loH2!oqSF,Oh9QRH=k,`]$%b.?q#,S4LJIbgacdW:(L^0b[
%a!6HH_l),"V-NL<0aKq'1:>s]5(dcJYbUjs/e6_"d^<B2'dGfS6'$S,qGt+4\]*=4VPNFX7V6ROW="*0a[G:"I!n5$g>0u,%k9LT
%J3K^9\BS!^ShZ<D8)5$0=XI$J_\#6XCu0]K[.fkKP>`r!j1DG3ekSHj'h[4BJkqYS%j@e.g-+3$d]uG-G'&9b6_;[7Pp02"F%Tl<
%O]ogHGI(ko$XLg4OW!dp8b2dN%d)a<4P<BY_B3k%e3>]PC*O-^PuQX#M5jrf$d6@>M6)d8Xh"6u!1^^81]hYLFH_lnS%A[OHBket
%]7HPFm.]E)_J;;VoU+R6]t6\%Q60t1,J&;JJ*8$eR%^EWRjSt#d]aKT)6Q[&eM4(abDfV@CZ(0%S#\O%O%?6n]Djo(kBf25A'.Ht
%P-hXVp$]"0RJ7rY/llsd,D:t<;Y%,;4Naar]iT"TW\ntHp=UDMAiX(%?r%?u":)K=EOe<uJ\:GY*`G&3=mIUl6Zi@J>Sh+/=)\6;
%3ub((a):$!)Oi\=kh/QBB_WR:=)R1(jRHmq]$A9-FUd.d^#(*Dg:<$k6(_sFs02Qu/AJ)YZfWbUR-;ibhK0JYW_OPaG5*8%LCqbp
%H8Dq5Abio\WSC-nSUnXgm0(2+B9U?lE.eV`Z!@&XG+Fr&3lB5-`c;;RI2VQu^%:)(pQ@B*DRo%6S`?MClIS07K%08f7<'E>^n.o9
%)cm9.MR^-a=ngEbesM;80[&u=RsAtmo=8,#%a:Ld(Fl&`0r)gW."P74$1Q<$!`$nh8M\&HJ@VY_G(&0XO(QSqKpSSIM_Ca(a<m8_
%lr1B^dTVnC]=rU&2Y_095M^R_/78alOP%-@T//u->78`fo40`NdrNFhCh!##$9V48&XATgpG+/qq\GRX>!I;ceo,pc\TjS\7W'"t
%7u&R5Ijij>V-WI_!9a*hn1sE@g+FI>DeJ>r>M**u5;q3?qe?n`Ut,4p<j$6nV5((22.`g99;`6$R,`QS\t.ae);:#LQoq3j^=(b&
%=1uBD*-3p1)jO%+Yb;b4cVs4u>hH[%^[8nnN)FQm:D>g;/raqU:ZDZIi)l]2.FqcTBJ^U`$('ik8MMHtp"0_tr`(r2/_,W:T(=i8
%XE;N5HM24Ng:[^*p3@'']NYFPG;48j[5dP#=h*GpQ[EBqnTG=nn(d]dS4Mnr)mEInBpb-n:A^VN.a]cSZ;nuI2V6,VCNi:JUp5)n
%m4C8:1aKJhTC``gm0U('^F].^WH.RrBHPi3lZYl+`J;p]!n`Cq_e/G9pP'jZHM22)QSj-7m.5)S$?T)1DFXG'G'3NJAgs50guF0L
%k9?\G?FJ'%HKlagC%C].7?dlIaY`\pp];hR(#\ArqeYWEW2I!A2<J=uk4;b>=i_"Qg&"WdG8hai0LT8PZG/c)PuV)(fdq!I[PL_(
%]9%g(S;&Hi#921gW"&DDh+1LSR=f\ZB#5"=P`*RY/prm=E,Ntif6SJNpbM'Wd1K*3;>"b)OO[Vol0J0eSVd:PA\.8>b.UC2(Q,"g
%WT)7MCh/I-DemJ_DX]d_)LbR\-lt1"_4'F/BK,q]]QnJ)J&sTdY=^L;C<lAjJ`//nE@>7I)#_2To^M(ho<XG'e!G50l/kVqHP/2%
%qP%aJ98-f_]X&,C>qPdec)^3KU057I8/cI%a..VV3E^$[7u6:,gMqE>qY/lYk`1o]m7n'Si,-,KY-BnkGi#CqnsPD=]/C7ro1\R@
%>Y9Sqn[kQ;Z%F*5T(gr5kEOok4jCLS&R.6ZFaN5iT\$/THG=XBSUFFlVe9n=riu(`+!P+M52dXu?9nV!8Jh9`,)YO<^#!p"KgE%d
%Jg[t?;"hP(Y9&(3EmlXVhcK@0Z7584P^-A9<pO(Fk><[FmDVg1k+3:WiGn*BIhF@jJBWT(TGeY)WWDE>;.*KH+f0sF?Q7O5?s*=1
%=gHZhi+,6ST$=ge>(PZEIrtFng@pQE"'7j))#b"64^Z+Aou;PH0LVSc%91=-&fRLl3kj>#m#$)i%j.kVTOXmN/ds0_l=!'AC7n.r
%e;Jm$;:PIPDceI^qnW!dC7aCogd$N'\f!ORl8Bu8[e^(5NWJHPbseQk%#heMHsJB(JXkHR#;)8Ic2K(prU!1uJV;fX9@qGRY@!Z:
%ERdX%mcJAuXE2nj$Wtar-)p^<S*f_\#!c&K[)rUjBLE0mbkdZoo@Q4F1f(sL8&]AB31,3Xm1X>M+1>$1cseV1>SVL6LV].MhCirr
%c8tTq,@!7UU*-)Cp'**M?$o*6--LpIWAlpkr`1%5hL@:fB;aQ1)Fr%ij\$iS)\ddk1XPr$#`.R+e%1P#h]e1a4+1[DnPr@G>'j(s
%l##"?cLHZ#0`L'[0!imobU1o*@:VSf/C+It^el^SGrU$+L][geml'dhr7X;HT2)mXIa8S4\R\&;S\nqZh<Qb/b&=<[/sCZK[=Ifh
%29")H5(DfqQ#G:NoN\J'a*Lt]\'n-5idW@,?W<=,a5LI3iT-s"H:-['1/bdC?LdbUNObBSc'&AHV:ji^Ns#-\UZ/4UBT,$LDR%mo
%ML/tB9>P[RgD?q3pb5*mK(m\$7K70t:qZ'VO>GMEcAtUX[Cu"l&p`[k"Rp+J&(P8tWShn8TmcquDK@+I6IL?S9?`8:]SOisanZ%*
%.XmqhreO#6q<de:SZ"D#nK1U%PC)3$@(^)YO>]lH=O,5Y[g^"CUaCVB(<Qn5P'-oP)+QK*pOq:Ho3^&AH$)ra3[`lc#fOF>e(h7'
%F719[\HgK5_-hG&Sfah9Jp0:<C1dE\hqZEjQNl3DI-i2$XDXU6K7b*l\?,()-8s-^,I<e"H2QJX],N\LbBq;.hgbYh(lZ+>K#-!&
%KjZT^\:Aj>rA]/t]DE+\'3#TsMZXh\/.V/b+j$AAD>:>W!IklD]i:`;-SS_A?i`E1rU_.^%kB1&2>^Q@35i"ioJNH`S%JIg9GB,7
%QT+DLRD(#-$agKe_@,#k<misWX21^T2L[5cic-99>_=]1=DHf8DlIlZ_Pae?XI`-FLP9mK8uV$Cpgn7I+(@#(RS-]en+cP_^W*R_
%47?VU:kV'1Sl-K'!IY]X0`a51GME81FR<f>GBV=/NGPR:/`a>qj()CXhHa,[l`p%liI/5#bGJ;TTQg/[>?]g,^`sdkRA7%`9N36_
%@\TH++IW]B)bT6X4]*tm%i`s_[=%fIn&t[K6%ZAZAt9ZGGP=]f(e^ti3]g2c:7sZILF*q;n>^(piG.[b!'S(L%Y-U6"f-;5Kn*8G
%i.j#9Q(quB\!hL!KajQHZPWDui6k&]'@Wa0o"0YQGT)qC;Kql%aihipE[n[BdKlUe]`.mMc0VgGZcg&:e\0HWHVLn+.Vjn8]4T4'
%;/W^QaD]_:LBNn(epF^OX,h=+\Uu]XNllV1E.9+$4ZSgJfmuZ"a15-G/rn,is1[>N4:4Q%7K[O*WI)-`-i#:&JWY-tGN+ttj4X<5
%/k&FOlUS@]`]F_%eHA&`Rg6k0ZYW3:)^g^768b.V[qI7'?9D&eqOb.d[]QF\qGPG%1,GP!:_kYnU$q#J1-Z7,U8b4lgIo\A(`k^h
%=_[6TURFcFSErpEX>Qcf'/TY0$q95Z0XP0S";`QbDo#iD7K_cnUk?M>_\$@h?qja6ok>Qd3PBhOY&9W-`9^rVTnk#.i@"O=b(Y1s
%oK0[A[A/ReUi,*d0kBk5Ec>I_Bd4HubFAbQQ"VVV`'K9I\'K/\Js?dZ0,WP_56N4aHnW!UZl'BD0,@I%[Hm#A@-fWF(6"ShOl1Q!
%\K-nqk8-F0aK%Ta1g1<fj!tnpQa[HWCb>9!jRUJ:BI$@&TUF:&K,[n.kMTs_N7/Kr?G>C7SXm[)i9p8]4dbHUd9p^!2%rYJKO08`
%jhYC[GQ+0>mP"5TK*Q&f;",kk:'Qc;9/"-1h.S'Y^<@(=(StXuQp3RXJlgCf<Ub>4[Lg+=X_!.Z0AF!W)19*1ikaf9p1*U"TW\Ml
%f9c;@jgMo@XAsG(K8j2W'Po?oqn^Rth0ZAM(>fM6QZ(`5UGZV4+a?g'0802$PD/*tBR(cV\@l(%VK\kjfPp(t5rpH4/u\>4#J+'b
%h_kr\N74']_WF>^EFELV\@%D8gq>A:)jgASh"-Z:E:@tr?9!Dh5?g+JS7i:sm>LDLe`aTKE$mq=O3.+4_Fm)fZ;BgOf<rj*AYFAQ
%%<Or8VhP,\EIcl(<j#P<+[9';/ShtX:o%7*$,uIO5:!:R7S$leUEQC2*/:n.2f#,*jkG23F*`'Hg<WF&d.'hG4*:IHTnNhlgTf+2
%.'aJ31A_HQid#MTWn-d4d$o'/M[?*FA\&Hl/gotC$YR)Z`KdiQI51T2f3"7qO5:ZFi)OF;I!g3Hgc=X)(Xj7IAT;'O`YM@E2u;Oq
%g2ME/-GHaoppbd$^0'.r4Y5/ZNZ*hXfAUtZ5MD#K"ZOJhj^23*4[!,/N`R9gjO7R^M2d\GV6/5.SY_QMb:i6?/fIA18)'0&4HCkU
%mM8:$9@*"VqblOXad1di?I+u7[;on?==J"./$6t5EdYFH?e5"hk46O&r32])-H"3TnfGD,>!BK6FdEKZCYR&,(ON"?U=@\YlW*ml
%\XU-d099V*S!E*o9l)+V?,'[mY+O](RhqQT/#f;8[W6>QYH46Ymd.+31rK9WkAfNmV8hqt/"P^QQ^(DuJVQP..m)M%E4ff>L7-.A
%_V9"K.%JP!hM+fk7tqE-r,VT&YuhK;%f=<*G"Q6&;<hg<ZBD5R,O=UXH%[7]mmM>kL[iIBHY+*TO1-U$gV`YXjL#ddMDTMafM1G?
%D<S#nRJ5o[I/+qmb+:BWX1S74CNWuiXKGk\pPQ"q^$>3(WEjmVD)Iq,<_'iiLM.r2Iu5^Fmj5QU^JKf"?DUitF=kt%hON@2U;_iF
%;Y9@pLdsrCQQ3S>$bq?mCJ+$QFDWPZHW\H$F3V,!nh@FopN3R@Q!`).>,Tl]M(NfWX]TCR-Q;"aZ",D2qL0)>C=dd:C].+i]ft;C
%`*2]S7Vl>EQf?EB_b$@MQeLstUQ=6LO06AZna#5;`H^q:C-UQ=m'bL^%b7]Sf]?[Yh5H#!p%3M/H2VPhUorT^*BpY/46l/#kKbG'
%*):BCl;ac/mHVZ\F>u;l8_<XZNE!JcFf>`hb=`(Kgl3K#Vic+I4!/1X#=[lF^?T],0$3@Lgtb30<gMU38O_<=M(1U#Cg/nl5Mmp!
%X78?L;U':ErA_0Y7PaeBb-]6jRatiLe8q3B<1hCRK_fjs2me:.1C:Y?ejnu'[_9YH[DTW?Jp+c;37=gNMaM?[/e7PfCNZGB2gdpK
%9;e-KX7`fT?B3P^rI&OJZdmUU/i2S?I?mO.k?6b!s2%CqE1=P1GKYC,;.JC?<,g#+hg7PujjuRdMcU+r<BdLWYrOhV0t-fMqo2Jo
%V&B"hS#8aI..Lo(c4Z#6<0,>LeFIb>]Z<">bh),(8A;@:[^"Q!]@bcW/He@fmI"iH<?(mrAmlX>*GmDM[<nBHH7uaqafGn0$^mpQ
%c-";ib3#WNh/#[AOM6uN^GWLG)s)^SU@B)RHEZ/>DT?qhdb?jaQ,rZ5Yu0A,\R%DPmN:`ZcJ%.&?tVQ"HJ1AB>!:M`\N`@qf]b?l
%bIb#]]!].k3dB@AlQ;bf(3=8Zh*Jeh-J$N:ee:WXXsESsV-p%GC%[\+kGM?Y/Nu"TfudS`GuMJW-/Va\NRZ*OlRc[SN'"#6^,/AD
%VtNHVrh,3#Qg+;0WgZ[4a#iP`BQTWEQ1h@:Mmq_=L7b"H1P]W5Gin7fOj*H):\*33jdg!AAZSA,=-(1.[^k,&bH9R4%<J$)%5W33
%D-c6qB;=ElE$M[%VoObZ]n=BTG-gqM<'Ju^O%'?NP'N;Kc^YMLqmVROc@0E6>sDFA*:4^k,E]HfX+t`li6C$r*(Irjl/>Ap'KsYV
%)Gc-Jlfubmq!;F6[!ht%I0<uH$-KS73Y!*]]Ar8p"]&qUk?!hIa,TD?\!)Uf]KY"_VU?iGX/9q.QJ)b=7X;[eRUk*,di1GlHJ7%u
%bacXJEgp^0B1Y+1=;\64]k:P"k=VKd3^;8F*1t!)SjsU5VqUp_aRp<$cHPbjFE:<;ZH-U%rEQqh<T!T5[B[Gmff?`,bcb*7YO[&+
%Q_jWO=eoC1/j)T27U^MAE4uoJ/(@(sda`+.3cpX5381mRcR1?J#)1=Q[Jmfj?_9/u:9JBUfsdGA.ZYrjDNa\He]ke4Zu@h"m::.g
%rmTWh=Z!d:>Ap'sn"R"Dr%@S_<P!O':lP9ZZ!"]rBH6Kt(Y1KjpRQ-]pd)%l=!*IPqX[)9\[:rFfe*LOdn@s_a2_)-k:-0?a*$%4
%c-q[#e($ndpo.>.o4P2H6I0;\qq?+TY?no\YHG/a#@X%8P]%Mgf8+T(ISG%Jf'DqFW*ERi-p8>i'A#1^qo!co3'K=:-uE:^T9l]2
%fB9!HC?`$?S;sbGRrWs+5EpLb#K7$SX1qXeb0ls2\UK?6[6mNhSo<MaWpTH@APM!10A"KeDTB.c/YU`q76RTAjd0?>X^Nm8:bTDL
%NUuhgFedb2%%>m[A@$Q$[IMW1SfXY:qSph(#B0FYB]lL)5M0kAbO%pf3g8X,iEO(LhTB.AmCTW.m4@%9FukJ^I&HS;j:8dP@<897
%?'-5@j`P:L\&RI'hVl1pdqb1k[ebl'(@%OT?XEWCB^cSEGrK&Ro_4i-ikch:`iF_[r98OsZHDorOenN2?hp7MCd#tVSnj)qBl:TM
%Pf/J_DApmI8Iq0B?A?ukeerp;Y$W/+4t`'Q(VNnXIagon>Aj';kIp#j%PrasYJ/bbllkML^Jn"Km8:4IXsPOa5h_a5pl/KpX_22m
%hGddt='>(IS:>jVP,/>DJ,VeFaM+"U\J`3'S/!%dhpi<b>l*VJ_GiQ=7fp_:atWl_ZeiU23lhF^!i#;pPSUST]g2*<kMC8JoEAS<
%:ZA#$?iTq_0n)(qmosR^7^$<k-N2QGAVFHl=#:X6+i\`jnJu"bCfmB4hXT]CePsI+aHH-+q<`+qm1;Ip!USEg/-ScM%o6)rnk]&N
%&k4Kf$9mp\"_%ZliZ-iqmT<kNb6EK>1N)Ef#'DeNl<.O$;rY*!.KEE?\AfhrY-GJ\6UPRhY-PR7)%(m?4`20sMQ1Z[aZL-p9TLuW
%G8ak0>Yud^@#?#W@>nd!XVc'&KJ,&lk]-M<5UuI:pb:6WRkco(VQ%L.$2\*c53-Nf?'@Q7/ced-J2k+Q0I7C2"Z$Js%E>4-!J=$b
%5_KJa(qmekWhBHj.T[3s`jr7A!CJd*R]OR1K$Jm3**<:I/0V]KPJb>;e1Kj>0as%51(48bElR-o%%RD)53Xb:>R(<d*D7i;\h:!,
%<0n"$W_0QFW2Zd#dWJQ?'Z1,pP9HJWcpF(@Qk?4Se(miSX8$Qh;OMM.)V4N\=*S!$O9.\734M1&eHMm>ZN3=gCJ\#>0LhRR"<!Ar
%'8W]J+\9QgW_Gf_L-[S[ArXc\7A1htJY>s`\f,4]X:e&Z<<O1[>_NK\\hG.nWZ-OGJ8RVM+:sl6+I/W%?^XT?\q$`R,QHtXJ])+d
%)=![c1d*RiVK)l`%=D_-$SnN9"l`'/!5ZHNTE*pZ/V5[q9Nd'0L"QHdiqR85b_4)j;Lf$_E=!_cO3&$?/^-!$1^o`R'7gK#&kHr^
%fELgL^n;f*L7uFgE0*Wl1S=oife?-JW`qipL+e9#>/8Xq\>jR!$:;Q;M#fO;2*gT/Db2W,o!=0$6'hYsnaUaT.85pW(pmrh9ZMq-
%"Uleg#pRYSLRF*h^ofGs&]bRr8C<Ru6/(@R$(=WkU2UG2#_6<A3"-Ef?m[K^"N(pg]#Fgtg.X8aCaphR>nr5_Q]Z/.%ksp:'X]eU
%:(N`4J."UF,cn-.6g#@_%U]]e,J>k/JcPH^C-p0E,`](!.uMIYHrD&_%#9\C_)$qA:=QC)i0gV*F)mom)/(;c1-.@F4\1]c>]O4d
%<,Ng@(;K)f=;WQmY6!F\aJo5+Y5mPjkU!!eJ>n)P"RC\:Bdhj=2.0+NEB.\Gd(tJ#6rkQIIKO+R,(6,83#[DAOWAR37OZJ'^2AuO
%a,(I+9/$RG7Z_5F=p&r7Tb=WENgJ7)3FG"39^!7j#$d'/d(tkPH5RtCPTL"g(m#W2;(*:V)+7Ro.&q-="Z9,,%.OF#PU%-X"\&Wo
%6<0btE-4`C*9_%n(IX[bV?Wmu/Hf793^MgEp5994UD?@j_Z2LX=!:%!"M'8ULpW!k,NCO%0#O#F8AT8`%>E.3Eg(7dJ?*8J!b;g\
%i$>E/-l;r85UiYVYZJfj1t56m@3q!:9<BWMaF"Eh!!!H94mWqM^a!*7A5id>dT&r2+u5$I"bH:g%L>q"_?GUFVBCtZ8f[LCOA?X%
%e`+/k@`Dtm)(c1#4j@P;@>I!D2&nidRuH&8"A<>RaX@E3=:0\R*-q_<jg#)J`^!6,7L>jl7LKj/kUMT.[0O"OV%FGs"ot&a"hb</
%%udQD'#r<#1*A%2DW#rE$NdN"N!i>g9&<OO+HY)03#;`u%4s\]-pnZ$ZrKd4:=/j1cOJ8ToS+t)5rAi.MEo7C#iRIc!WlsD5mf<J
%;pe##%s.k/VGSdJ7t*44N_Mlk^p9_u:f).F(;:"B,*'N:OVT@R0ROmh'*&(!)`U"-4!Up/#`(*l/nbY/90ofdr=-oh.]=e,9L+#o
%L*8g^7fB'#TpT'8:=;*fH(7^NklINP*C>Zli/F)FFrWfpLacp@JAB!i!-4'p#CS#REhPHrG(Acr)&>MG,qXkgR6ZH/_ZtsYU^SM:
%('T6kaOGccK!So]e:f%qGaBWtCnO(HOeIMqaQ`h,!$s7^"e&6f!Qi.Dg<,#068HoMJ8%<*X:eB0<%;8o8:=#WN&3c)C,mM('qNfA
%JkVlC,nQjI!J+1sCI=141$h0A.C7MC@Kju4N2N@="M0-Vd#m$:<6dO'E"p);N2(cPYm6%ckS^%qUm"2U'a<Cun<R#[Po3Y2Q;(?#
%5Tk"S:!8_$5=_YPZ=0&&d:JP*+Kf;`&=@"G7-@35Nrh1$\:Kg?M=E?s.B.A%3^LfL1\tJba&V<d#6H@tK;d`;O>lZj7DI3=VNPgb
%(CpBUBFaqa-Bo`W#=]gi<hqALBCpSM?^Q6Nq1+#<D1G,Jp-ps]44KCSBYDcl;n,[#MC)KW$_8a;;or5K$cN,s"V!\BOJEd(F@9g?
%A0l=@Hj2rqP5c!F%/h>gh13bk:]U[7C]^:q>t[4-G[Lr!"pDe.1^.ubJ-+/l)ScKVW^\*fMF_s\:Oj*QiSfCO:<jZc;;f'LnWJG6
%6!jdl>CdMH/-CaCm^/B8P66Age&Y!fYb7AV1su:)aV@0/G6Jt7$-`GfHa6Wu%\KME"U^E.$QoUHKHqn8UY);&#KdEb9>t$hYm(ts
%<]%14AEbC:VuY7"DQtMu63dri#S&)(QTE\dYF5g8XFa>OC!mm>GQ<PY5.tB#\qFTZTOF3Koq<8a`=_:sjG8>Y@L.dE^!`DQ>rdlH
%fa4oN?V[;8)PW8C"jeMNB56Xl(fjAp'0d.0,7>!/#R&Z\8-*-E3Z5M;JKRA-CcWFB>lk&G#pta#c%1XY@RNU,c%bFW9pr$tO<[t<
%,_J:h!&;=HTK)>I1oAt0<Z$fh_#Og0/rma_6]cuh*""K"M]>jGJ0nB*Wf!%fa8ncDW0)]9CkAf%J:R;<<(Xl;W-89:iGZTJda3H<
%mP6ME;,s]t6"e,2+<$]m&-T#el5#Y<.AdiQZA_g)To+HgNDY9qK1-?_2$f@Fh#[VDR't9C4-*4b\):q7Usm0O7g'Qc&P1[A1<*]K
%GUTk3HRfs&TKnt(9nJ%.Y_K/Xe-'Z%kRf"0Q>G@'b)nRBW:d6cJP]Nm.HX)$8>qgX8.YbPW?DS,6%hNI.tW5U5sZ]nHWel&h)RNH
%=:1:T+i4G&UR5m0AJ<;hLA4G?E4#BrUGrI;#,"R.5i*B'XUomtQ6Bk=m3i/@o:i5.&lBNV=GldmdZ>BD3<C$bb::Fq`fNN??tPpR
%#R)7E&3r!3=b&)L>EU7`7q`/'[4G8gKM2Nf2ndTA@^'9]],M"mTPFX?N<3EQ;9*sie?4D;PR-T*JQ,Oo9I?>8",69`$oKF)+2qOL
%'a\MT!e&ii.&J>1qRM8Q#FZ2a>c!#\8VmtMil#ib0Be()R%$ZW?-j`!H;,5'+MT,8W"_(@p;.4L<(0btMQ`,!3^l7;l"EPs'Gr>i
%cNZNe@mMqFOashCrg%+mQ!t)XU!^D*1f;UbE^J950#)r[(&]?\5i@QgROXIX$klW?(Y,L!5o#>Q&Z!mGkh(c)(^*a`(Ej@:P%Gad
%.VL,e!(#485`Zcd^`)_FU+#7"@PS6Z6`kpa"!'[-!@fVP#Eq^90Ij#_ID\;k,6NOb_J2Z>O:eM61pV!a=A6"4LqHthW%_7NFK-c`
%[fT5jejZL0@l-RW1L^oe_8&<EbN,Zh]Eb7o!7<KM7e;=m/HQ6Gq`&Js,4j+-RkhcOR)5/aMUfPT0FWmn2(%)ei`i,ia&j"K%,H<(
%'$u@I4[t6j7ZEg:XML!'OukU!eoJ16P>Q""R3>I$(p(TQ%?p]^$AO*-R.dn36D7X!pft+UF(:@5,)Clc`^g8!.aog^!fLgt0*mgg
%$61f"#Aup$5Sh^R6rm6k.Y(Kd>(cfcb[o4)@6cU=Vh&i_M$1i.Q+V.2TqF:$(5OB\Zf]=oJsk!5UU\MZV?ge]5h@+,"S;nX#nDN;
%l9[rl@USmt(&:h!$]mqS5fqPE&3'en5onTC1hU2ML`eD'(+8Aq49X3^Z3HCb$nDV"`$qu=$4N\GYDrW"'/_MgU<jF@%a]2t&FD,+
%Ku#I&VCFE+7O_THjI#$@ClCE8_Gq9fLA;8='2u`+,Go`39W6lcF)o#=8cZOk)Fbq9Ll)bBn:6>rV($]jN%f`q.d5ee"N&5#-2ohX
%p:!(OFUBZm``AqO6H<16At?"[W=FPi!_jro<7EXenCGsT!hK\G'aeZ+EX^D>#Qi=D&J:`gRs%egOsClLC)G-VSQ7/a"W"oO*!T"J
%Tr-g##[[h1@%FjLHl=+[!OUsUdhf8(QuTnDL':b@M3,ide2p"5ISgZR$PQ0&T8U:R\KD;7'm,mUMTI:CYe!7bbUEmS4t''aM%3+c
%!cs3E`QX9,d6"oL_G<Kc@7i:$FjUDF)$Zu_:3rJs$oqQ>CEd8c&qh)2VXQXnjtkGjR!g^9!19^$Lgqkk`4-pNPd4<m(cI]r,j(>Y
%_5o4<",&ptV?l]#FCML4M4?"']YV)?U+438=;RJJn2WI:CnO+QU&1NlApT3./6b,*YU$f2#t@a%1?KcH!UDKA'L2Y^P#/qj..o!0
%b\Ei``fY<r#78i&0L/(Y7E2P:r9TFQ<`/lA=@#q;?kb1:9ZH8I7#%*h'4I&C*!rX?g*<OCfd13W4,mVf4]R#`4Z@?T-;LWk*$PG?
%b.8]t2C1^)eKq@)Qib\f@&dXd<)(fB"W@i:U'q&,rm=/+)&H!Q`mDF39VbZ#``60MWad/<%O9+N$3U'#:e@FE/#:LqF-n!;m;\)p
%=MZQ<A`P(q$`GW)f,?!0A-#R_:aR$(JlZFg+\f!qWZ4kT`($Vu0]acq'$3e$W%L>A)"=LW@)*YK8B542CmYu-aD;PERcHJ]d&S-c
%U'W!0L5q@7C/m`/Ri&Jf?GLX6'ejYF#D+C*7!PG8CT(96MJM]%4@A<i<574]^d^bp")7l=)]a"6'ECG3JZB.9r9HaNcsXA,LRi1Y
%LaY+ki=&,C+?;EX-Li+RW\AHN0gE],qOs:?$!Bd-6oD'e&[a&j:(?=8"KMpU[SH*p1+E&Ce4m36`lW/,TEYU?k][j^"fK/hi-H&)
%\"[;m7U_dS.InegV*Gi>3F`a6^lKrtTKm%E.\,L6$+7?`IkXfu;D<fe0JY/]*eC64`?L@:/uGO!l=;M`*G4+^EhR/R__DdMPXNC-
%%g>('ZHarE.iNK9qIJkF![V7T.*R?9c@aDVG0h$:VG7j4(BQ$dCgkc_$p"OtQ#RN>XdpY&>E6m43[\^@(dqjBk0[Y%!<<L<O9fo$
%]kRcIiegDA0GnOniMbC;&e0D_L0gaE>"iDSl6!1g_"7q+.?c\c+A>-IpW>H:!Z=>rTK\Vp(o28/bW$j/.H*m\^^hY%N5-`CeKeSM
%7IXuJ'd6^F'heXq&1[!N9F"('N!9G:UaC+5%(d6&,G0%(\:D4e"drK6U?4jDE`>H9VMN'm%oWUg#,X(#X.YPXQrB$'9W!On8rB>O
%bcg:uC+6&/P!u$L0n,e"PT3C#5o=9u`Ii+G.0*u-^gn$[4QIF_@VuR+,uk`(6+$7gr$XlbE%+Hm`<+bNm28aW5DC\89I:PWQ(1t!
%1GDCY]E3\FMsDQLPVo_/NEi<!8U#bXbBI#]<O9P@'cdYr2D-M['un*UK^T,VKi*G]6=UH@MU5u>)oetHPu0f!BjU?A.+gGF0U`3c
%n)SMG,thLs^uV)Il!I&nkqWFERL#E4N!48G;?WBQPtX9:Q^ESHFe&ZP`-#!IA?[1=ZH*=.WCR-ocbjuV0Et=?R@J;=\jj-W`&2s:
%WcHpQ*!pE-LpF^GDc1V9#0kQQ_4G4q!@W3E%5+An<K^<3)dk>+@ZWk@BLka;5![N:R)0XW"uO1nLHIFtFoi54L%(%7nU_(OMCY/C
%C+`2t#W+8=U1;Q.faUY,r$#or9*(.pMJ5JF<S(fNDU@[+"_/75Qt2/ceVslDYu($=k2)L0VA(m;&k8GqD8r4_)WeVB_%uf%-K6Vd
%:15?9JRD_-,T->m"@KST+P!=nk#4.fQ>0"#^r1h$>M$iW>YKAGi7<Ea6jJf((9<&A,]JMUJQoYE`WFA0RZp)8s4]THQ:nY;/)N;8
%J&n)`D)b7k'bTcl;UZD7!khG&:5ZDl"fkk->K))14O9D"1Jd+`]#\&fa1HO`XH,B^*+R4+CShIcYoE%4A'FA:F.7!P^\.S=j"qV*
%//6-ToCeI?pul3u-,2`Bj2SD]4@^>J5<lY`3c$>0\MNl2'J#YKlZm+Q0114b%DmJl@e)f[X(N;*FE:Qs#8h,jY%A<Mg2Z9uH6]j<
%JY=IPLmBc@-J;XNG%#%I.3`T&Hl9VK0"Km/ps.(HXo7W!Jco&KjQnXAA9I6I@TcR/a?@qgZR>:]SlsMq&S9&oFjiU1GED!foK0\^
%BomN>rZ&m3kf7sL!7b-?Jkf`5O[0J0j2sm\KRV5hHD8P<@i)-90.%O<eO)DY,Wt*_!EC1dYco"`o\/jJa;?Ng*9fC`4ggJ]mB#N_
%Z`SL?/Qa"]PFUXA_Yp[8'$73T7Al(&&<2%NS`o6/DKA$N\$VptA1&64KX_D=%EWQC4,WfN[1JboQ-j7%(k/\3%qm4V>R\$3qDWn8
%"B474e&mP!#du,Gkbl4UV;paYQe5sYo_dYf&8[HgWklTFI)o4uo:[H)*9[g=qlZWVnBup6F84Pi_4+PXB^'b7p<S1X)5]Vc:Ft`[
%*/#7oBILimB/b1<7[D-Ra+Pr)Ylj\.>\P*4./0p\$B1Q$PRROQj[=i6G;41Q2_ih&?.Y+CMUnFa4Y2TUAV!d"!q#Ih\4n$'AX,Wu
%X8tm-heA2o1.-TH3\,b;DY?H[7Sc_G2k2(#`;RJm?9<ukV0>)'S7;/Tk<9R)7rVB>"F/d&Xi'U0]]_D<W&T\H%Q8HIDAW93)*0d<
%RmSR6NDQ1=']8d-WnT)ffb$"bptu2#ka=$Keg-?uA3,Fl=q@O3hU0'=ZTb/1hTah`O`6OF"KR'HPQVkmCr]n@Xg?ZIi)?.)J3H?0
%?NP+33M60*PH5H>p`r.N7pt<1P4'(U"5o'kjf]-e-ZA_^jl"0BBBD"6.cp^U1A?PF@7`iU'@c*rS,fc"%tsmZj%?#&Wj"22`IUJF
%oEg`Q.Mt4'VPff_&C3dgT#61f1k`rB'u1-!V06Z(+7RPg`Qe*r(EHr!ATg<hMr9,?P7e)G@2:t=^bo%R5C,VRD-)Ane*>"]CcmPd
%?#!N&J,V0Y\f'bQ>5?n4Y-5N(=6m=PJ/?=_KLm&U<'X%?H"6^t:pbU#FZ.'I7`VlX6\tD\:lAo.Vo6W$`e%+G;BX_"o^X=43Nj.d
%/oLf/i%0'4D#kK<mooHi@m?k%9(M&*JpL0<L7T'$pt1WX`!u![7IqEoWW[)dY-J.*JSWZK_39K11CG12j9\h%>#:+iXaC&g.4nr8
%.Zo<s5$Ql\o_ZSJG6#kIHoHtAdjSbHPBnn@k&[2eq2X3E.+Ei#7>$kReTtR:n=2`4&qE'r.k]hJi4!Y6!8R05DC@DU8o%hkUYe@e
%2bV>J5l0\S59q@glY.lJnNH3o1-2jo.%)]q=YcHHPL*+(Ur(Uj!_nY-k^rL,-LZ^K:]/#2n>)CPJBg#86n[-<]YnH4hn;VlcfVm9
%:FlnQcOY_mRH0uq36A/9/S4/E_RjTR\"8ujCZ:U#?8E[n*r+e(`']PeDeETdF^fr18;<DFbV'0Y]&\9&YD:S^O_:k+jHa3.E[a(H
%5ggkcOsP-l8R$H]&)6er":/#J"%-FIrU9g?"f^MkQn#dMN1_o0cndOkD,d<cqdq>R.bQFWl]i)IOli5/G*<sQPg88$D*Te<cs9nQ
%E?n<mF1Yf%d1%M5V/Ead-68VTjJpPVn!##/1T?YM[boKP[I@PZ)t&$e$lu+FGA%b(bsTX4I+IF;[RnWthsYF3(dL0kF;F$+9hBup
%bg]e3p*!.,(P%9am$bB7UnYB@7n;^NPS=KhMfcZ]>b*+.MU*97a7;n*ar0"erjF5?HKXnF[O5ZVa(=p_hkMY3">u4HrdE^??$O#8
%Y^Vb[IEIQfiWNh+c1)9DTnp;<3G7c%Od8l!acZmV\LGk0D&I7X"rhtj((!piWH1Cp&DOhM8[:[TNU0@;kH]gEnUG(EJ,rtt'nm/F
%!'o3OGCp@7J4LIBqb_1I_6WtSm-IiW(A8"Lr"BAo+.K\,f"H$*eV(I(9`?Mu_;cIbVu&UFTPhqI)bQL(S(Dj8U-=U(R4r,643tJ*
%/#<=q(tHR(ZpB!eko)eI3E()u;q]4*Aj3`8-=DF10)g'MFj&0GEK7BjRUK3uX$U0,n0st2*YUSr\t@sqUWEbR"_B<e8^rq7kZtnC
%ZEi":l4G\h]&&$Z-O]'*4GVpeU$"@G-8(UEr$t+B<qk1J@OqV]q)HXYLQq@r]Zu*<A,-Gs89$*=Y;sq/>+;][_0RKdbdY#i$66:*
%h@FdR-Yq8/P#u7;)ubIO*nB\R&>\./^uWf!W'1IPB()jqP:Fj6njL>>,8Wmj!*/`VbKuN5Ug"Rt"Bc^[E[2$>&qUAQc!/.s5>K1h
%.Q^'R\>!c"BKaqO$g=ol#4Gq"=+1N-ieaY<ciPi93mK%KkAAoDH0a8&!TN:(b)@foFt'mZdgXarH+\+l,oLgI,O?)78TEqIqq;4>
%o,)B\/!0#O.=`Ds0ndQu`Ogod+nRF7KG8=.e%2QHPO7uMgM4%r`j\-UpAC#A)TZ7Xf<.4aRB+A.YMrdgM$-CAI@c3'<']s%[TOGm
%H)kC2>@j*#\F2.=Mmtphi1_T-G[fe_YV^QTNKSgC-#fQ5P#(MslJ?-Y3s92?Q*R)Sa=4V`MrtMX*EJ$D-To*i;\N,HT"-UE9u'Aa
%^i/\.H>n(rIk4Du&A>N?`@7OSBIJ"k*r>X*NSMcK+L/Om+-##6dI^u\67uaYns+CJS$eJ@ZWj$#>6(hJVDdJI1=VYg(`CshjuY([
%822H;-J''jp.SR2;>p;b"MfF'*&;g8RGS)Ec5&aS@\i0Ghf9R8DDQce!lWQg=6QN)W*nZba^>;Q4`dX,YaD%gKgXT^F64kQ8kTF.
%*q^IWc_GsIZ/oWiLeaj')p)+Mn^3On\I+4EnGILIE5Q;pDTp>fBQ?LOb#im0+oLr!WRtg)EH![t9q"]cWd%DM<rK:5<sUiPqQ-Ah
%:nhDnU$;qlXpk!I'hV_#/YVq$8WajC[`pH0JS%g9,)crPSGaV4OB8bejPkEgmd&Wj))1rrC4U174k';(WoMGhMDI'I8f[L?2sI<>
%r[],08UU40=Rj*q5qc0RIrR/#AS^:u.o^M'HmFm[!\LlcH,8*oAnH954J=4]ME7de#FID<D5rRss5Zn.q0?LQX\1PU%Lml.]qgc(
%$'>W.BrQ,LY+4%lS9Jue7[YI>Jm:1_Uk;KqQKQ%q;m."mnPV$U+Me*oXd'\ZpsrlikY__NGP2fA!%!Yob)d/S$/]@9A@XHp4IR$\
%UgQ/i8+2`0?/-=VB`_9I$r6#7F(-,3D*JA^^T"_LPnc1Y<AAR<GHM!bRm`tum(Z,#W[pXXg;3hO^9='#F!dbqNBiX$3=5L^'T([!
%+CS\JW$%ar9-V=GcY'^1JX+@frK3_X:_G8)Rc=@DG+)7#?t^)A<KSb]DLu)[dNbG[0C4JtCYpe%r&B:bJrc-m<&*>`D>.kd*N)TN
%/[oqW;KikapT7!%m_t+p8B@ZD&e]cR)Ia22Sj+u[5iopS<[aj9mE(rs<,,F'2_b.A!CLYBKl1(p0FheiJ`VWo1#@3dcY&,&YMc?.
%kjG1tPF<6]8'/96YGcj,+"BTKJ6;0eKB',lqu!`1-2,uGG*b]ckc`<(GZE8999W7+0jG^l$<Ltgr[K-86NeG7+1mdu_VTeAphf\?
%#JK1EntUjt$=X95$E.P#c$HDK=?f`[qho0N\H]q#9-n#4l?%SqP^)otlQ,iY,fC&qE@\,K1A3DT7_.'0SbL]Z`<IHI2p>@edEh?,
%KcUA0H<TPQ4n>b^'uq>tM+hcKHgZ@*krD8$:CCab[.YjU8NFJ!0LQS0!1:*6W%**+nK&AGJTjLN6^U5$7j#^EB%tuBCQ)2lp'H#W
%0F_U6"go83:sH-\dpV&-%%\gm,81NOnL&k27HQtb@:`q5a?W(?8LYjH0+2,!me0#$!3I>'&EN47>Wj8,d[`We;gljQ%HEMC4qbKO
%7$0r@Qe??DW?HM'UP?`_FNFF?K8<B;6DiGp7/'`uX6aM7BOC)RD5'OJ$kGP%hm:bS!T5Q\4@9apUK[[5jeE-C#ggh'5pCSWSl:V?
%.*p,L$.)+Wj<AupI,"]p^J('e0ZH+KQ4G&-Rp$.L)gqtYQ?`'['7<`uPf1"dbggb`rfeuFa=$X$mZP0"lW%^%Q7c7o?6QjQknPZ3
%N9;3Xe\3RDZeQ[[lrJJ*C<8QfRR)$S9n-E$*#m&IIp.<//8lahMLsnA/^*]/0*KRr#2!<pq&$Ot1e=jPCR4(d<X1-p'I4"\&=%$G
%BSoJdSm-LYW@B^5!RaSu@VM1!SjP_D#40W]^<Y`m(ZBJ9dZYHU4j49,Pn:N)kC"]D<r:EQKCEM76F`Y+[ST#.03&#rjBnpH8T>7I
%"(hRHA\G'oJIG<U#DVYcnf\qaAQLd:#c"n(Fh.1'TYm,%@,Tm>M_;Dhc]JB1'!ss9HabbRZAXD=U/6jZq'MC7G?]4?rnNB)rHjc_
%^kThG=3/LIW&ZhOLt>CUr5(3j,lntaR+$777CT@N/Z;AmN6%WR/t\D$fZ;aX9W-]UiHmL3&Cfm=Gd7k95g%lH`WHSt54"BB'TQe`
%-Q,k<6AnkWp*?:BM=s&=.dXmp,%(FW*OY'H%YCg#poYY-"AIb@N7p,hXBq>)Q!5gSQJsJ\pS<!bGG_V62^ZMqn&/+e);pfL9(j74
%c]U@'+^Ku\ffPpX-\`hLC13Ka=K:.(.N8kt4[L]r$57$r8MVNu+=DK?'VA>'N:&lK]0PiVn5AEr>%t=!SA9GK8?OPp!A"KKT:D3?
%R$,mAk=9qPDLjO^GJ7eH"XFW#7_;t?Jh,CR@)_jgHKLpr]OuJjK?G\JCM=pql4.A=DF3TV`kI>Un[sr>lqA8;nH^j_Zb4%4.lWPt
%HY$.=9+ceb5GWYCJ`6=a]L=-#2I>R#WSKmX?Umn@6`b*7lR5`j03_,u=$ZRUMO<aT*s._9T'Zma9Co5bA&m.MSDN?JWZ&$3UaYCB
%_Ybc<$$`JFK:WkB?(8A:Ahg!&*!('O5<7IkT00:1=b-$ir8<s\c=A$+r"64kDh<SVI.`.T!:L\d@k/%fnA;M[JkjDo5p%T\p+-CE
%2K+EtF"b'Xoo&"[\3_M1Q!8$sD*P\g>P3k\$Tu17fYJLl\-rga:8o=g\1AdeFUo45j>9"lG=RQhg1;*&6&X'Xk?NP)^oEOBZ*1<D
%o.eM"<sUY4[Ac3#!97"_g'b2V`CmNW#W4Pl]ALd-Q"Na/%/4.fZ:`l&*X&2j<Ge&k<!ge#]!P&i?4'WEEiqBAOFB60)=oWQ*/qF,
%Gc=>!.8$VZhF3]F8k7hU[u'(;F=UV1-c?:qo9QKV9%=-Y(\6'e_,t$n,.(qXmZ7gGr8GjIZZEZgXf.N/]RJ1-gb*0j9>Wt&h[>"Y
%#ateuV.=Th\8=WbF-E\Z5Bi`r/6YQBD@nUN.(IU@H+d:&Njbsfr?<JaM6\[I\>.TACpn8EaFrH5i;m=C2*6-))FQ55c+AJ>VP&29
%p_DBtG[_>p,tH2#(I?ak3<q.lor4]dA@s)!Nc<fV4"?q\9h'#j8/M*u?@dOr0V0.$=Ji'HGo;#U/XRci(4mab&_WTARMkVd+364_
%\)O_p*,DLi97g`YeVsQc%,'_orHK.K&,<b:#nctM9\0\[/7QV:cL.nPpT1XMMqnXY(7<PK:-Fgg32l>&Yc`,U\t.Td$M'/N57_GQ
%;STFCY'Rl_fAR]&GL2]%\tCSK\XDXC":g?Li@3U;iBd-@C7iB'E!^)@03&PSAUEjp72R)dqaVTA$n8pbomI6@ojSH#n(@.C[o&^"
%nIcNhaEFZ[U[=C_.Z\QkWHOPKoW%@l90-h\6;'FBNlZW!RV%\SMD#mV3S=e1\&J;U/,(HA7ZXG9""Mrc/OCdoL?<Xa6LlgBWD4"Z
%N:Be^.;HG%Rq3V3C*sh>nq^bCC?[Iq:FHUUL(DH"=`MhS87V,##_eu/@heN`3AX:L/pj%o:Lfd`bfNCA1j28gi$f2`F_>K35+g6R
%4<ID=V+$M8AQ@Vl_9C4k<<>'Wf38U=.6t,6mm2&SlHi[-Z%fSbe=4[WM</nc*j"]1O-ELsL)To9WHj5&a9RtmS(Jb2VL\$fLnbEH
%F,:p3<-_!mBJGa/RmX."UBAt56\b:Cm-P$H&.[f^Z`\/a00G&]r._Y\-@4"J@EF=oQ><qQ]_W75kg'e_h/`D)%D/jak\#^kN".T;
%_$Y_;Qk.1j@o0`V%\9m0(DEu`T*#uk?5JT"=XYts?ciePL:RGQ=L"\h''9@$,97PSGWt3*0"b)R(XKaLD[=N2I)D4I44gbI(b,S@
%;DF6%SMj0-`_P3#c#([Vj/=LcAm91.EON+?VQLT^.j`)GUK:-;bV6iIKuqe$JDa(BVjhQL4qo'j<c3ra;Y(@kp6Uc6OLT1<hD4Q'
%p^rAS?+3KK?#qR6H,LJ,O8qoh-=/HjO#CD*@;-3BSf.jq9$[S&S#YUr4YW`$?A-Z/,8F,>0guFCKud1M<>&WWrhIMRL=*0;%\m7_
%4h"cKI:,rTfe>8-$Q.=lmqXnarHssOZ"Aft>P=2.6*,XWKQ;d$MOhlA%)N2D#&5aR2iVWqQ[[<CaI0+4<"l0l9pF&gY0+e!*/"NU
%=O9:1i,e;Ts7Jk_KXprjhX>m<KbiUMhpRSDiX,O6>sn%Q!'VY.>?$M_82T`M0VS]$3.Ro35$$.$;Nih8?OOp@eabKY4Iu\sOQ`c>
%_a;BZ)[AaJ,D/Rtn,9P!2,m4#;VMiJWnJ'sD0X3]p3Nl0\^68]ej!'m1H%&u9n/do^3.1Xa%H<hmUaMF["6mf$:R\m`>N3[Jh0W6
%SZ3N^NoL%4Msa$J3E[bL1CsH`Pl5e(Ff:A0'JuC8.SJCI?!K!b:#'W._F4o[[Z;`LEfIF#;e(Rf!5'&oL*C*c<CEfBj>qkCfQkQm
%["-V/6=<G!f2:Y:-7';os*,:-m4.:U+YfEnFHjn?H5Js@W3*<++e"ODp#KnDHqe=(YtChg<5'89W-_QNCD3V^WE/NPG?gdFL7e35
%<ua;lFuG!ELfV,T-jbTGXqWHF?MLh5Q^#uj7JAd!->_r+9DG,XQ9$SPW9/Hb;^d.Y'csNLL.1$i@!Dk.N,s_-5:dT^AFGH*$QLik
%[haieK_[\sR1=W'[d'qtT$1_b(]+3q=]k?5ZKMi^Jq/s=$C67nm9tEJed_sV@!$@`YP%E3Gekt*:jhmP:0e*,*14U-k9L.s3qLYu
%7R\BhX7"spG'(EIb33"Qe1dJt&Mo"`V#dT]!5K:dO4136mJ8r'9;1h='g-EX\H"@%iC)M?A+JDa)p/Xn'Ojt=F'n%(Fi-"k"bHsp
%,00;6:V[Pt%A]o6r#VNNVS4tMrBpa6R3Y!_1j-.g0&q*W`N%7b$IHAull8,8#ERZ!BG4'>;@,Q&&aP5K$8eZV^g6-:]J*6-9jt;j
%`=\#j^k5Utj;1m034rH>J9.lXet9'?XpYnYP`/@UXMYJ-HMN'%7`?hIP3mHn.HA\X)MZ2E_@o77SH=BID_3dejs&P@UeKGVI.2^u
%k<>bq)t]Z,'YfYH4$-&2PBuV/W(Y$Ar4+!YSOX7p/kCE\B]5@6Tl1J>">]8Cpjrh@.i#_gqY]D#I1d+f+q0+^EQY=(Wm.`'Dq?::
%NeOb`G%>5ZPWH%X32@'B36@">/uiCO%cm"TN>VC<QDK$oG9W(P;obfkUJ@KsWIu*+A#MaWP6cakmDo,6)P4)RGcRYt_?(nWL;>U7
%aXD8WpM253oa3f<M29Y`fU/KE)i?'UqHUPGl^\hb6Ub,C?-Y-.FLs=QbtI]f'Q@[5,RsMem`/M&`74SF483!,;p'>L*?+4O0FbYj
%B^`>nN"YEV[8r6TU"00`W6f:WZB.7F$V/9Do7R#-F!F7ha0'>MR.;i7l9c@u[4K*+q;>O5L.Y-(F]cm4cs:3S"1r((0.mC,_j@V<
%);%Rg>Lq<3r,nC?]K@MO<Z*en')>iXWQ6!R(J8tbap?"-_NdKYV/aO?(geip&f3jt1_f=f76Qu4O60*cq+$"McU7pDi0Rg*bi0LT
%]KJ+Z;'DT]gtuc8X]cPXOUW-@;UAG;+FTLUdB&s6AZm:FJ5'bAA46ah<@_@=+c5>sk']IdP*F-=\aPU=50Amt*MqA`=uE*5,XZo`
%FY1S0g66`>8Id6JbC0D\B!dFi4atC3hNu;_pf:]\rHt#Qh5u%E.D\Pu8tPnTfR$7=(J"sWOlm%T,hYg#]ZL^QVK6P)!NdaP-Qd%u
%(j:UViek?"e<%br=E5Zdo'jXq_T2cpJpGmCRr1s$^pL*'YCG-cR90I7.`)C^G;^Ya==nphWD=aF4]fH"@g)VXk#"(tn"'cSJ_+qu
%+HBPmp:+=@&jY'nJo@2RZGdTs''&R)p0U2gUk%W*N34,S]!,ho$5#J+LZ]Wj1O_g=.pRFLOe8/J66Ss83HtNd'm,EpMjJu1[i[@q
%Y@I)R`qT#O+Xf?W\ge\p6D4FWlP\/t-26R2`9#V18"hdU^YNCY3cS'?.@Mg_1.4b@7\4FmTSHNZ2S>Romh(?1fHE\"[#5E.ViFd$
%fiOjn<,3LC1^,d&]Qs-cM7b7l,.cRIQ5uk>c3OMnqngr^iX;)P2\0=#ZP*uJp+u"SD=a99EdM)s'uGZmRla#nHA7@t6IBH]2QnXX
%Y3Nb7I?4sib<ZNL.S"a3_AO<aj,N>.0,H>CQq4A>;I#_A4=#_S_5t\$?ZAr[lEdG^pK\aX,oL`!jds`fO1eYHnek5Aj$;I+A93_I
%N[c'1;gpBk'^)J13fM4R<phn*"m?HBiON<8;m0XYmYm9F?,fU>RMO[U0j*)Y-`<:fRI0_cYD5+K,AN8Qj^kgDJ5PJk[]N%,E^qXr
%/j%4)?0c2N.N%KgeVXWYRI/uH(&&[",?M'?dDpS3fAV:KGiDnV$<`rk)LCL+%DN/LoL"g(P*l()V2AQ]&fmMtkn,*IMDC$@KV55t
%9C==#OFFT,c.^*5%j"'F\3Xfb:/lDlb.%0YqE[G-)^G.^..f\+]6G=ANE\>GEKKQ&EGeQg3@Cp&UFblMk/YXuT2<!p5TAgrIVrp)
%S-!\H-iC+c(Am7BZ;99AGr=/BrIO</#LF$dE*'5PQoja3lVd($</5;j`S7`S#eO+g.B*U>l%+pH&^Rpa1$km-aH>2T2pk2N)7oB,
%?Q6bkp/KZRq<]Hig\Oc;:Otk^[0^ScJci$>qg,A9Y3_rsCgV9_Lj(uG09PT2kO4*7YH"I+i15'(piM$3^GlsI,Ei?Y_hV[ADrBCf
%D]ol`j/qc4>XP/#$cXtd`Qq2cE#d'b6&8$uoJIi$]u*TCP-eegHIP"u:F,V!Qc$g0&H[\j7HYlQ0acRWd"j%d6gqE]l7sLUI_BWr
%IM"B@\mdr4ekM"roV!p.'$<n0M0j\&S"AQqdiZ?"B=";qqda:j=g;3?L8KYLEp#I*Y6K$4)\6&u8:>9eP!9Ql9f:9=YE7)odW'`W
%#\U?6q)P8LfFWO@8;B3m6i,kX\ibQs@PMl$IK87BS3hD.M"lt+HF]PBZ/69'qfi"TUpI0[>IV7[dbk$b\DPl<\LfhfS7CYV73$R=
%MD]NoBB[LP8XU-Z33@ge!rF!S\h8u('3^pMA!dA.*c$;(OH[7`^e8jp)gau&mhPIBdICc/9UGc">S>tLO]BEiOOU='maJo`cCa4N
%204'G*:ODA2oVOkbIs77(?L>E`pQR',F"iG[Ylrk#RZ([&4=*d+!^,n(V=%r?D@uNPH.ROa-.`kX%_q-OLXbB0]F[]-A\FCK%WMN
%^TLU4M)T*C\GJ$?ou3qmlgA]7Q&-.D8j+Xf8He5r3Whll$A6Oa$n8jQQBT[+\ike<]Z71R@F(ZTN\e7]PJ@"4)!s!O]*K12ND$*q
%LDMb_X-F?t90?.!nU([o.rFS)>g&.uTj?58XOYm4"s*Z+Kh^C,?ZTmh-oL[kaulq!dqDVTnSVdloJ9`-[``!Q+-9Gm5=kcaA3t>#
%/*&'#AD&/Ynja^hb_\tZ/:oT#7*CU7CbJkH%"BL$q,W?sZ_E5sb&_0<o9n")O%H-s)k9UX"\E^*)]9fO0lI;mK![#%\Hj(tWURM)
%k..-U\2'TPke%B73%2tQqbB92pADj[;d1D7-aJ0[hE)S(*QKgec'D4ER4;3RE48Ai5YZI"_KK'A66^VUYCo+fG!g:iQ;%a3EN6Yk
%c7Kd>=WNh_Zb";*iej]gjgsFP;SNf0*]cZlkd.mdD12-*Z8&^f=PGEk_JAU\0a9Z*Y`BW)gAf0hh>=Z(GD>"!Y1[+o7Z/DjkOkep
%MC8=eI4a"`XI<2tFVJ]4TY*_1bVU2_:dYSDLqqE4.DI_@&nEI7es6VsL<N9<(S07?-^/.?#:.$C2#C?5X08"Q+j_I\1,(6(;!:3*
%=i"Woa4qDN*:9jK1J,oW/@TaSZ2)c@Ii(5Ab[:\l?VRKgF_u;S:6qWC>.qi)3$So9&e'SEAuW\@#fukiIg+R:*p[e]jD%a)&!5_T
%lJlUhj4RqaRHgjjnYs;&SUbMDCkdLrWU:i%k7OQ)8q[1HKRs#i*&h9ChcOo;.O##R$U_ZsjCBl0<-"c]5rLu)8>0,m]k+V[cW4o@
%@U#MX@(gB^To'RQE.]X_>h4EtZl`gKc:GLD(8q(7#U`9?$MNA::d@Z@.I*.1%r"4+!(psHs6eT%2"/MS)DHs!6*L([4>ZF-ZVf"Y
%h3hS@COGjnBVV;<Xf:)SM2tW^U-?s3;r'0:r:=7K-PRYgj"IBcV_Mcs$t:MYJ&o"EN%:=N:<*VNG=B-@l^)fbO<q=le2rG#A0\'\
%i[%[*#C_:,XB&1Q$&TC_W@rCl+l*`.BeR)`EJGC)Me/'o>CUiG61',Fq*eDoGFHDd4`#e.ha1NnD`>7)Ybc3oq=:'%OeJE0<+['m
%8R#7r(_=L&5NTS$bpntS@b2co<'*/CL+]_FUTMn8kE-SN/`q[XK2O^\Fj<<:%&9]B<:ne2Y?i+#jfaP`]>=_a>,fE7Z.+'s#UMUg
%!$)7L-`nq.M;jOR8*u"/80]A5Qj`7QVj>"ShVuG2E36XRS:[hHiGJ^`(>5]M5)3`'Op@RWB-%)<)Rchj^7cW'Yuj$`c$lF_^<?;E
%a^(j;CtC;E*-Xc*Y+EP(.l[2\Y&ZRV"-FGj'3QoroEr#:oRGeoB7GEeI?dYBP>VmX^U]]5i>F]l.V7+)K^2.&5r@GBM8kp@=2g!I
%[QDj$k(2*625`o^Yd[&%pqchU`R?:E8e*$[[U>aa^=iEm2)\ES>H[>]Prt?IiT3TJo(P"fN;Ai3GiFg)67-EmheONT`98U)%j<Z'
%8[pM=gjnqkXD7R-Q'#U=)Hlf].88U!9&gAU6&0Ke@&E7kOd*iHlpah$W]=CW*Ugt@Po8IG"a%hS=bQ-Q5fUr;8#OHh=RE0?GQ[O>
%kZ'K@bnX^\C-b;Um=&F1"?@iGhKcZT>^-(Y.O5<WmqNC<O"[*oe?UM@fcdC("=eh<dFM"ILpkO4C95q1,-<#FOJ,"dH[<bNmGj96
%2Nhq^..gglW]SAg)f:-)7E-GF$:T+&E^3*QhXSD9'toBigEZ>n3$-5J&PQVH&fabYb>G91iMab9(WiZ9!D?'k4ld@/4]#KQ8At?A
%;B&IhS]-5c:4?hP:H_Rr,E`&.5kHU]P,W/jcK3Ss0"q[*C^Gk+W([2V<j9Kq'+jENSIRHGO_$AWYB6RuV4h?^g(!aWG(?]]*"=V-
%rT@P)#hk"MDM*5ljnQ2MEQ$*5j?fDE1*<@me\Ujp\7'#g"D-A+qJAgV]sYMi'Nr"Z[p62pc,U</^<+2`ZJV@9.er:N3abC[/(L2s
%m&FB\pT0+GqHf7PWb`."]HuLq5R-$1;5`ed;5LIs?np@>g^%IV<fX=q&U,;4>9Op"/B`rq9am&'pBD(TeCZB%WoLcnAT&rFAKNUd
%$=0!c@3o(*5&Nh*HYN6?&qZc;D$Q=LG/Q-G`5+J.LA'*G73`Ut++u_+[&&3u[nF6&2+6]jbfnGff/&E]eAN-b%ABij<4XNO#M><'
%:oq!t(Qgst_Y\0B3LTMu#Wt,a2#A2G7f9Q;::oi?NC(LGO$pKXPDZsk-BZL%TsUouAk^)k?W6U[\=tMnEdUW2L<fZ@nm?+(^pS,A
%1UZ#6G[X9e/QMGr`a3;BgP']54^hcl&_M"jRG'33HH,@j\V2EsP5(-S9=G9p'tS+0oFa<YgXo9\b*G?-ib:ZiQEmbhS(+K6XqM2e
%Qot*uP;o!u5D<^+fr!?\=U/&][.GY3A>a%:"s(81JK_QGHHprAI##G$6Y2^OI6Pa!h1#%Krpi_RA!V^*H.D;B')PI5BT4P>E/e&K
%)pr&R\7s)&1mMTbcRN3@[VQi7,48`&d$9#MSO5>m5F3A[)QE\^.e./uOi&4AeGl!8d*J!GOHi7^:Y,Ho#=/LJKIH=?8!L$"e^+T7
%bi_amqQ8`:;*eEI30(inZ01lEoF;`@&nie?qg?b>%cdK;U\j9nf>G)FUWe-dTe"p$[(uQI0I'`t/45475?qAZVS)\\lTP:HK6J37
%rp]*"qV(d/*'1.Go>s`[N!((IU:qOgW2A\tO6n#AXcZ5O:Y!HLI#amWQ2(9b^\l[Z2-:<bmp1GE'57p0ZiT=/k_B3GF2aR)H\DZG
%m<$:*(bcF$ec8c49#,=W1F')gGej3GGfc-6Y8k$5oY+[Y\<_s_p9>jCdBnW?(,qZ=.<]R7P7gnN]$h'R+lP5VJ"QRa3olqngtJ[q
%_:[dl48H$4^[V<haUB,_n!pTI9P^gH&]FHQe=gRm58:9@NhK0Qq[S$)'$7FjhtIXrTK@Z$F$G.mrLaIPf!+)Q*s@;Zd*)Id?Vgk(
%j4A[noZ,jaq>^Do+$MF-keF^BT>.g`O8E;$UIHCU'G%l`a8*WO6cR#;J1aR`LML\hg[D/-=CeN%#8p^5A=l*\e+^T7mP>(jWtRHk
%9/Mtpq>ZscLKp)l(::JCJ$Il(S[2eB4,V^oip9GY4n\*ZNT$PkB@!cDb1KunU=ijG$S1YK;q-h-LZHX$mFWLDcXK:.d)5r.'],V#
%4?J#'*+n-LgW&>FUanT/",B&'\'$fA"t8u406uuc$Frb2\0+\PjE6Hk8h;$`*@6C8\]];Xi6?!SAS"u(G(O(ap7KF01Y(L!F9V_+
%WZMscVT6W6(Cs33*$J+I/GBl$ZQlmcORpfYK.^Cjr&i.kc!ND5.X?V)drfh<lCW7TML\[[HR[#*&+bE*539PpdW!1i_5XtALt4#U
%nVB]>N^Fm$2Ds5B<K6Dl-X^:r3X5peh*lQCMi$JKnfU5XI[bgNHdef&#!$"!5hh0mMe8u'8,<2Q-t^O@27p^nd[*[VVYJmf[NC8s
%l=r?tS]*9Smpr@*n3K=ndf:5?RW92VW%TMN*Lr(GB7Mr;8eE.LE_PVEbKotl-&4$nWkPbb.XMC--r9M]`7>9YjgAGd\u.LpUQasU
%"H6X;:M$FUL-K-TAP_oLZRKae%Yd;:nko'@WMg@DFdGX&fLf?o8qJpGeE:^'8mpm?_XopOhXMe+^6()4Wt*W89kK!Q^t(ACkV9Xm
%gTqZ7=%PpMCHj;H(r\1q8NBm;Vfj?ILt1"k8;WW>1X:)TpmM8Je:tJ=@JnCJ\4#:u2j4J9K;,KMM_)n.Cth0k8ecq<!Zk`&mD*U`
%9<[_B#ff2jTY<*<Ld]4J4=YLDp_OqsR2M^.NJ.4oW/dXfjL@js\O@U.[N*Z.>i:tas1MoQO\qDs%d;8(79'>q<B^=(=bnS,Q'WM(
%7jhC/[&$BEF/VIBK9?nb8eJe?.6?6q.+:MEGKb_e33qG!Q[a`HE6%C)j/LdeG:E_X_N=eUPMe#ToGtB@/2RYUIsQmX,;=3dj`0Y0
%=)#aEZK<d'Hqi1QUKTjO2Nlskh0..sN:!R!,Ra<NDV[RTn?]BL^O3Jb8f*CXX!FWRb&JQWhq.a`lr=A',8^&XrV6"j^eJGRL8HEA
%),hj")#'T+F3]qS]!6XbSeL566*o=C+U&]]=;Qddj=u4<UoX4Dj""JSPo(!ie7>[3RbG>7ie@Uc?^5hr<t:>cI93>Q<\7/pXe-:X
%,->.i\'b:F%T`6$6`'K-XfdPu#Sg,HTY&E%FFR5eE;8@qCt7p+:>?)*o[e&d<\tY::Xc6B.b>(FLl%$_^eWPn.(_O!;l-uUNDng#
%F2g(IpRL:O3m<Kkm"c"OC.Mdr,S(d8Ao5dlRVo+kkT4::g,f,d2738(5=(RA8i&K,?.`Sch.6_9@hrdDC@<p?^%sTn0$#K'XJ;m<
%%>3em.F[#l6]\cF[0"XRlAN>/okob7`*)c-Z_tJ&D*oN4\gYWb4(ISnq\f(EG.IhpUao'Lm]';<&Yi`WGK],>N6mu@NFC_-^2f.4
%n3M\eh;UA?Tf^'k@uf&CnJ%!7"TsMpfdsSJGV!Q>&XV8EF:<MoHM)G<P=7I+4%tUeb"#%PLn]>i1Cl'OC]/&_pmmW"%Tmus'^4[O
%NQ^eq7\JagOHIspE!BVTk*]+_bn=Rr5^2AI*QKUQOQQ1?1(Nen>@l6nV,D!k/*I%OAh3]EM&5p5QK*,eR'rKO`Lo>8eWKXMEesAs
%@A22MIRG"t[IMm!)VAr13Bq[DX`g*gipoJ9e')\dGg;>?d@.nf/X(_WRdQJI[<$haYOGK$_<(E9_YLa-?9$j-]B.=,"PTj[=DW:%
%T%U]9<Bc:Z?dKKk[p]@sb@s:baPKr.JKhu`plGe,OVB3cI!esqA;GeSVD[X[=<=0c%i6T>9?T?VgT=.\p^,Z4@^`VE8)"-#K3o:p
%,;8jd708C[<ST!-<AXmf.Fo"2r6/V.2d!pjR<b`)4O$gI/HmKTaP]XTdZG-e0t*tFb0]gA>d]#$r*68PP7mTgIZT/!L>EHS^<Lg]
%0EQtR%j_9-RrPeRdY*XS19m[np0I[KbPaC$2Q?rLIe@0)C!Pj7l05Zrfi>""7`Z.hq:<QHp,eF>@13B$39EtA\])j(50iVPiNs+2
%EN(7*\]=F?nQc4qL*.MHfNQ'jLZ)r)oR*F8p"C_ECPh\YNF!'YH5ZiA)d:a"#]?AYjmXCqk"jGS6<kLja)ApN?XJOHOd3+-r>/[8
%]I>=0aUAbWX<(7hYX_#B+\$c5,:I=tolRe;UFLE3Q,AtKU?-f%g7#A%@nHRZAK4dT#83?iled1/#kT4M(Q=nR&!L[-:qT8&J/o^,
%,)XpK:S+\a3!1k(qR\]2QR&s$rLGgM?>%o+*1>h]`J#et6as*n*C_W(NnTKWZBo=mD!C"1<1O0ukY)"Edcl/Fjh'6H5_p84\Vm&O
%n8?p<e?f=fCOi:KLL5SeI"Vt_]qRc?nlQd!"$X3E"Uenb@r%pEN0K_"13%.LRM*I9QuQ8JZ&e^&`;ZE<#kn"S`j=fc`Kc/Q2Q,`p
%WOH\[-+:KcS'6$bc:[X8-i1-8#Cni*OfeUer%L:<RR=DaFCZ=B!J]E2eNlP6gsdA30<*>"[F6R](Z6IMiEDZ1HjalT*'.mnjmu`8
%&YK-3N4*FhUSf%V4LJ3C#PREt<-H3SEk<Xmqt+Ku_ZoG:h;tKc7i?ZmA5=0RKdU%&]#s^W4S'+b"m-Z.$C5l>(%rZ*0cCO_EXLKE
%"5@<@!O`+rQ'TC'O'R>[h;d(Qn,7;R.^oD^1osP!Uk`AaHe1B'e(Ai3dt&V1$_'?e<Al\a?\&2rg/IRLppOPR^U4,gVo$iV-'h.R
%3=_R$ZP't&q#>YOn"]k'EKr]r'R+hqp'-M?_L9@=L=H"Ch*$M#KnI=>#*FZR)X?&l*R/MKVih;2]:94B9kIr>r!Z^P[r],T1K/4n
%[WL5FN\M48e@)>tSNWh4Q)Q(Q\>S23"(#s2No\bUqfZ7V99l'kCHN,EQInHTQU5,s<dIt@T/CbOWuCCH&t"$=d#G1aG$%9"!Ph^D
%D[)q.ZVuYca&u`!l9neb)[_tCNR8(I4teu>dbs(F5-(V`In!c(R>M<ljB`GEUm>cuQqOWWb@YEjqWiNs]PRNfZ]Ir:>sr!*79EH1
%)^#',+Q]P2WO:SIqns(A(=6-JjD*2<4S?_LW2?_?m5r6JUk"_N`ohsa=n):ekC39aDtSa5hf`jrP68rLFM;#OGLRcVT:pinoIAb%
%r="*I1S<4<Y<L$h.*qY&p=%XEn)6^RaV->0(:BIo1EC,b;2;<SN@1k(Id&pnS)t&+o_BUs3OHR$[@b/k^ZU)^aLO155oomaA.YlJ
%1%uatFVWU;3R$2I0Bq.[JGN*HHg'rk1+'9\T2N^jK[S7pLV14cf*8fS,=Qa).5DR/^TMegjq8\o1-e"YB^ZAO3ami1oO$)b?<?C)
%ca&uUl"Ym@,)7n&Vd0Fp1e,I]<HDi^=.?`YM,K7-mSf6ho>L]O5]KZSci^Ec;Yr'*l$,[4FG&a4!8\I[&$A#&Q-`(<JtUlCY4=0`
%X)18B@o7G@?!s8slu_@eNJIEI/s4`-c'C0=Y<74C7q!l/9jrds:7co$C`FP6hn9D,\pCbui%O@K8QloN!GH3&ZHo-9`.Zo?#D[$i
%;#hf=I,rM<B1Yr:V0:N=YM,AIEWmE?4/J?0WbpLTp[,leHFM$,6YcE92u=eLW$5HU^)QOiMNOCO,MDUt?I7r$5mH>F+,kK>r)AF%
%fflR0rJJ@FYqqgSe@&G,^I!1/pS=k$]Nq_$n86Ume"-d=Cr]fd!,5VsTbpnRaa)Gjp?)Vpj7SR^Gq1rPW5,u?gXimT*gL8smlbiZ
%48U9b?;!@]O-Eh:]a<sWrl$\:e,5\J>A.CC%=_"'85CrA22;\Wg?G%0:!_o%7D[$+c4YthNZ+QkEdE.UrH2<?41E%K8*)<7RtIT.
%k#+1gmEATmIT>fD-UeteJH0!L$AL'ZQ]]kl3U[%?!`^:Q;j92f,M`^f<dHIgl:hBEf>^Ed\clrdZAqu1Ni&p)+a]up^,_$FRrL.a
%DFCf:*j.XJDiAB(r`&lch:-<Z@sD>4@DM\Y6NJJ:B5+dGE$?I=Nq.b!#^htMbCH>gVsq?n4dDE:itGg&PrpA;<ckgJ'Kne\Kj1$"
%=rN^.8Uu%WQ>tF?)Ho4R\Y;emGpYFTcT<3<kH')R,G.5:^-2]1Z,<bM96e#geYha0_U+]WQoDRrI62O"N4%ul)-\p5i$$j3j7T&K
%iin,^Hk"EgMmM=*,-GAM:(^p3f1n"!d'K'Zr15Vl<ReTXDn0\jUi=F>gQoD?6bBbW,i'>0O3X:cfimP.L3<?!YIeQlZ^*/as(cpP
%%t`FjXthZWDR_,X``_-;/$_%#,$>[3Hr;ZpmIK>CfE5/=oRL$8i1(r@i)8>;@UPT22WFd47@B@#E1fbP@YI%Mk,Qe7e@4fij-$Q@
%LOfaTT@7BD(PB)E5\=_QQ.6XL.\fH;eWZ'<3^n31%B()6+FeT!At)3><*-O[.XSi_D\\s7@;hfu1gsN!7]\>."tuZH/+WSV[-(<0
%qkiRJSir.A$AiL7IH/u-I8_`"ho]3QM<?KdT"`-'-BKXUN&8l:q9X8NEXjs!ZeU'Br!Ilh&P!9$!upqjE!GU1K!PHt9EVh.BqBZl
%5S)ZuQ^AP$5SsFd)ZG2p*+)Qjke?0V5c3&Z9%+!/)+rjj?GNJ[Jsh=J&Nb1Qj7Q(\<40j*W!;K4VPeaf?@]O?$fZj"Ok=`Zg:oQ%
%3"A$k+#Y@J-tp5L_On&*]/$l[-h*_,*cfnn6>o5UL66iTnurj"%2?J-+1C!`cU_4bV2AOC.:Y0Q<EKSVWh+dBZD$/gE$s.u^H1f"
%I6G/M-*408,K?$*'*%8"FcU2p8>=3[@j7I1qU&3-\+XqK$+#!Nr>tQ#p%pIlT3$G_.GZf;*jN(h;0p:6B:j=0+ukA[Qf4Mc)b+qO
%:dg;Q$o4:GaOkXLM.2[RdrJ5cb(4XNX9NKk[D&*4-D9H4m;'FMC(&9]J[M>o\4L@scB3T]]0((oAn]u-kc+W>/Nb&Fn6m3&JAgP`
%KZcfb4E9h0(V6amj4CTd]qZ_:;Q]A7oL`<PfWNE$QrYna^>GO+H5;I1f1rj(9+0!1YJSs(QV_eZF1dV5&LU51,7rF.2KIqY"l1R,
%,,h=d5iM(^7q$F/O]onM\%<K]Fui^M1j]"D,CX_":M=1_Ljm(;X@qHuKoH6I=:SomAph"LK%D#Pf6n4HNjq2:-fg#g<L!"UqgJh?
%T@2N=+UtO#901->,7FbVq/-a0G=L$?fd!:T,CT?U)I?'*N!_dX+5?M"7X9(niomY>KJi^nPC%rW<k*-K[=k6]C1tO/!ER`'J'5RC
%irBi6a,;W1">a84bXnJ8:lfbP*0u-u8RG&R2<sJ1fOnGNDJNsNm0I<,R.9nh\KcP8<@pt!2O@]rpT;p>0LCFC"":"WKGW4_a$_r!
%f!!.G0,m=^mn,(CD&_5Y'l^mnilql";S_dJcVU`<$g1a(4lu&3MFq^W%;VK0SYr_A3o0(G-9F%RFLI`mdr_"Lf>4YWPJk^--hS'!
%L9D2YjT,je,50<pLrG@ccQ6\Zm<05>E:+gOL$RDYUA*B"gg2,>*uMc1,;Rn#Le3T7Ho`"GBa`."<%EppUON0o6sZUCg.to7j1HF7
%BaH2CWe/gkf@Qf)]U$F0`=12WnN5@jSGM,0@(Y5<\9>b0[n^DIB=NHc5$Q\W^0T@ET'+9k]^B<ZP&Ne]]Z\_:_4#X'E[e%bqNkIK
%X"@4NcEYlUPGG,(16DZA[I(,4ReBl0-Ybk/4mqN+,nGtrbl5i^2G0]L"065S8P6F!Ja)`]@ed;u30Y'?7=5dp"nQ/oV4:rCNK+bT
%j,/cbrFqk8[3h\u]g!N`kA)_^OMh!l/"))mfs%sI+ab;ZRfD&18_g3I6386[s$&r#[C+a:`7fHGgGrF"a[m3b`<lXqpf-k>.-23J
%N\sIZ^GQA,V4rF"?+Y]f0s.H&A`[]m`F+mYk?l/hK)(5;9(3IN=Ki4`8>jquD(!Hs,C\ip;o=XAi_7sS"S`G:.O0/&=HOJdl1Im>
%hVPn^`gp2N?oCn2MpoE,.4:mF:@SAW@75c_(K>c9)QIe$9cIBc\$/^gLfO#,E_+,3<neb]A'`].jF1g,`8:5-DlCHMH"FY:e-f>k
%?6K'aS\>0t<(jjc?;3tL!7pBm9B13E5"#RN>Gn9D.[:O\M)OLl]Y1.G#P6KdA(*k%:@.e"GZ)bJ;ETmMS+CaLgK!Q!JUScH*B'Rb
%>VjQkEiOOE]aHC$,?QZ!iQpaWY!:j8U"e/cS:faC4uDB[,ka\:C3hG&J.?7ReU1<hVtfm&idi*6;1ki6THHkbl3bXGbaa-2fItgQ
%]>jZ4+PU+]L7::7Qghjri`k!JXedLR'=<@d)bTBr[.A;?d[eWRJi\h'L8<@/"*LF6lK;m6!+ENNegpTj9729_a-P7_OTB><oE7q6
%aAu'Jjs+>QW>g#OTL0V1T,B)FT'jM,/;;*Ln[[*JA6N[U4-i#@EGC][-!,2cOf=<RG?XQDWVq:hpR_+`W:-lR4"SZdT8o%r5$&WI
%*&r,RFR`"]oSkt%CVB_V+f3DJ;#?#%L/h5'&0!je_C%r2r/+<toiJRbL1)p'NO10iXSReJ:Pb3H&U$5k/NS*kmU%GI3PYLCm)[KL
%2ui,dJ+`_XJ,'o\o#lOYcbKJRn,N(Lrp$]ee\A`rlehZYJ,B0drnegtr6$b>^gI+s5Q(I%s5TaOn3?p8+928N^\[hWqSW@/j-N".
%_a"(Z5QB]7s7j@#s7GFAs89oeqWEA+o,kaFdsqD<s2tZaI4k<\^](ips)3D]=8s?nGr\O~>
%AI9_PrivateDataEnd
