%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: sword.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: Igor Lyubchak
%%CreationDate: 2/20/2018
%%BoundingBox: 0 0 1059 409
%%HiResBoundingBox: 0 0 1058.9241 408.5609
%%CropBox: 0 0 1058.9241 408.5609
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.1 x249 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 52 8%%BeginData: 8949 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD5BFFFD04A87DA87DA8FD047D527D52FD047DA87DA87D7D5252F8
%FD05527DFD56FFA8A852524C5227272127F827F8F8F827FD07F821F8F8F8
%27F827F827F8F8F827F8F8F827F8F87DFD34FFA8FFA8FFFD05A8FFA8FFA8
%FFA8FD07FFA8FFA8FFA8A87D7D52522727F8F8F827F827F827F827F827F8
%27F827F827F827F827F827F827F827F827F827F827F8272727F827F87DFD
%27FFA8A87DA87D7D52775252FD0427F8272727F827F827F827272721FD0B
%27F827FD07F827F827F827F827F827F8FD0627FD04527D527D527D525227
%52275227522127F8272727F8F852FD1EFFFD04A87D7D5252FD0427F827F8
%27F827F827F827F827F827F827F827F827F827F827F827F827F827F827F8
%27F827F827F8272727F827274BFD0527777DA87DFD09A87DA87DA87DA87D
%A87DA87DA87D27F82727764B27F852FD17FFA8A87D7D52522727F827F827
%F8F8F827F827F827F827F827F827F827F827F8272027F8272027F8272027
%F8272027F827F827F827202720FD04274B274B27524B52F827F852527DA8
%FD077D527D527DFD07527D5276527D2727F827274BF8274CFD12FF7D7D52
%522727F827F827F827F827F827F8270027F8FD06274B27524B5227524B52
%4B524B524B524B524B524B524B524B524B524B524B524B524B524B524B76
%4B524B524B27F827277D527D527D527D527D5252527DFD05527DFD0852F8
%2720272727F852FD0DFF7D7D2727F8F8F821F8F8F827F827F827F827F8FD
%04274B274B27524B524B524B524B524B524B524B524B524B524B524B524B
%524B524B524B524B524B524B524B524B524B4B274B274B274B2027F82752
%5227FD0752275252522752275227522752275227522727F8272027F8F852
%FD08FFA8A852522727F827F827F82705FD0627524B524B524B524B765252
%4B764B524B524B524B524B524B764B524B524B524B524B524B524B524B52
%4B524B524B524B524B524B524B524B524B52274B2727F82727FD06527D52
%52527D527DFD0E52F827204B2727F852FD05FFA8522727F8F8F827F827F8
%FD04274B274B4B524B524B524B524B524B524B524B524B524B524B524B52
%4B524B4B274B274B274B27524B52274B4B4B274B274B274B274B274B274B
%274B274B274B274B274B274B2727F8272752275227525252275227525252
%2752275227522752275227522727F827204BF8F827FD04FF7D27F827F827
%F827274B27524B524B524B764B524B524B524B524B4B27524B4B27524B52
%4B4B4B524B524B4B2752274B274B274B274B4B52274B4B52274B274B2752
%4B4B274B274B274B274B274B274B274B274BFD0427F85252522752275227
%52525227525252275227522752275227522752F8FD0527F852FFFFFF7DF8
%F827F827F84B27524B524B52274B274B274B274B4B524B52274B2727274B
%2727274B274B274B4B5220FD04274B274B2727204B274B2727274B274B27
%4B274B274B274B274B2727274B274B204B2727204B2727F827F827275227
%52275227272752275227522727275227522752275227522727F8272027F8
%2127FFFFFF27F8FD04277652524B524B52274B27524B4B4B524B524B4B4B
%52274B27522727274B274B274B4B524B27274B274B274B274B274B275227
%4B274B274B274B274B274B274B274B274B274B274B2727274B2727274BFD
%0427F8522752275227522752275227522752275227522752275227522752
%FD0627F852FFFFFFF827F8274B524B524B4B27272027274B4B4B27524B4B
%274B274B274B274B27272027202720272027274B2027274B2727274B274B
%274B274B274B274B274B274B2027274B274B274B274B274B274B20272727
%204B2727F827F82727522752275227522752275227522752275227522752
%275227522727F8272027F82727FFFFFFFD0427764B52274B2727F8FD0427
%524B4B27524B4B274B274B274B2727202727272027272720272727204B27
%2720FD04274B274B274B274B274B274B2727274B274B274B274B2727274B
%274BFD05274B2727F8272752275227522752275227522752275227522752
%27522752275227522727F8272727F852FFFFFF2727F8274B524B4B2027F8
%27F827204B27522727274B2027204B27272027202720272027F8272027F8
%272027F8272027F827202720272027202720272027202720272027202720
%2720272027202720272027202720272027F8272752275227522752275227
%5227522752275227522752275227522727F827F827F8F827FFFFFF7DF827
%27524B52FD0427F8FD0427524B52274B274BFD0827212727272027272720
%272727202727272027272720272727202727272127272721FD1727F82727
%5227522752275227522752275227522752275227522752275227522727F8
%272727F852FFFFFF7D27F82727524B27F827277D2727F84B274B274B274B
%272720272027F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F827F827F82727522752275227522752275227522752275227522752
%275227522727F827FD04F87DFD04FF2727F8274B522727F8274B27F8274B
%524B4B274B274B2727F8272727F827F82727522727275227272752272727
%52FD0A27F827F827F827F827F827F827F827F827F827F827F827F827F827
%F827F8272727F82752522752275227522752275227522752275227522752
%275227522727F852527DA8FD05FF7DF827F84B4B4BF827F827F82721524B
%4B274B2727F827F827F8F8F852527DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFFD0AA87DA8A8A8FD067D527DFD04522752FD0627F827F8F8F827F82727
%522727275227522752275227522752275227522752272727522727F8F87D
%FD09FF4CF82727764B522727002727524B52274BFD0627F8277DFD35FFA8
%FFFD04A82727F8525252275227522752275227522752275227FD05522752
%27522727F87DFD09FF7DF8F8274B524B52274B27524B4B272720272027F8
%27F87DA8FD3CFF52F8272752275227522752275227522752275227522752
%2752275227522727F82752FD0AFF272727524B524B524B524B4BFD0427F8
%27F82127A8FD3EFF2727F827FD045227FD07522752525227525252275252
%5227525227F852FD0AFF7DF82720524B4B272720272027F827F827F82752
%FD40FF27F827275227522752275252522776525227522752275227525276
%527D527DF827F8FD0AFFA8FD042752FD062721272727F827A8FD41FF2727
%F852527D527D527D527D5252527D527D527D527D527D527D52524C522727
%F827A8FD0AFF27F8F827F8272027F827F827F821F852A8FD42FF4CF82727
%FD11522752FD0427F827F827F827F8A8FD0BFF2727F827F827F827F827F8
%2752A8FD44FF2727F8272727F8272727F827272720272727F827F827F827
%F827F827F827F827F82727FD0BFFA85227F827F827F827277DA8FD45FF27
%21F827F827F821F827F821F827F821F827F8F8F827F8F8F827F827275252
%7D5227F8F852FD0EFFA8A8A8FD49FF52272727F8FD0E275227FD0452FD04
%7DFD05A87D27F827A8FD58FFA821F827527D7DA87D7D7DA87D7D7DA87DA8
%7DA87DA87DA8A8A87DA8A8A87DA8A8A87DA85221F852FD58FF52F82727A8
%A8FFA8FFFD07A8FFA8FFA8FFFD07A8FFFD04A87DA87D7D2727F8A8FD56FF
%7DF827F87D7DFD0FA87DA8A8A87DA8A8A87DA87DA87DA87D7D5252F8F827
%FD56FF2727F852FD05A8FFA8A8A8FFA8A8A8FFFD06A87DA87DA87DA8A8A8
%7DA87D7D527D5227F827A8FD54FFA8F8F8277DFD0BA87DA87DA87D7D7DA8
%7DA87DA87DA87D7D5252527D5252527D2727F87DFD54FF7DF82752FD08A8
%FFA8A87DA8A8A87D7D527D527D76FD047DA8527D52A87D7DFD0452212727
%FD54FFF827F87D7DFD09A87DA87DA87D7D5252527DFD05527D5252527D7D
%7D527D52525227F827A8FD52FFA827F852A8A8A8FFA8FFFD04A87DA8A8A8
%7D7D527D527D7D7D527D7D7D527D527D527D527D527D527D2727F8A8FD52
%FF7DF82752A87DA8A8A87DA8A8A87DA87DA85252527D52765252527D52A8
%7DFD04527D525227FD0552F8F852FD52FF5227F87DA8A87DA87DA8A8FFA8
%A87D7D5276527D7D7D527D527D527D527D527D527DFD05527D527D5227F8
%52FD51FFA827F8277DA87DA87DFD05A87DA8FD11527DFD0A52F827F8FD52
%FF272727A87DA87DFD05A87DA8FD047D2752527D7D7D5252527D527D52A8
%7D7D527D527D527DFD0452F827A8FD50FFA827F8277D7D52FD047DA87DA8
%7D7D527D525227527DA87D7D5252527D5252527DFD09527D2727F87DFD50
%FFA8F82727FD057D52A8A8A87DA8527D527D5252527DA8A8527D5276527D
%5252527D527D5252527D527D5252F8277DFD50FF7D27F8275252527D5252
%52A87DA87DFD08527DFD04522752525227FD0B522727F852FD50FFA8F827
%277D527D5252277DA8A87D7D527D527D527D527D527D527D5252527D5252
%527D527D527D527D527D7D7D202752FD50FFA827F8277DA77D7D5252527D
%FD0F5276FD07527D52FD047DA87DA8A827F84CFD51FF2727F8527DFD05A8
%7DA8FD067D527D527D52FD067DA87DA87DFD07A87DA87D7D272727FD50FF
%A827F827F827527D7DA87DA87DA87DFD0DA87DA87DA87DA87D7D52522752
%2727F8F8F827F8F8FD51FF7DF8F827F827F82727522752275227FD0B5227
%522752FD0427F827F827F827F827F827F82727FD52FF52F8F827F821F827
%F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827F8F8F827FD05F827F827
%275252A8A8FD54FF7D7D2752FD0627F827F827F827F8F8F827F827F827F8
%27F8FD042752527D7DA8A8FFA8FD5CFFA8FFA8A8A8FFA8A87DA8FD067D52
%FD047DFD04A8FFA8FD0EFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Mobile</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-20T11:03:23+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-20T11:03:23+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-20T11:03:23+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>100</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAZAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FWmZVUsxAUCpJ2AAxVK7zzb5Vsq/XNZsbbj19a5hjpQV/aYdsVSa6/N38r7avqeadMalP7q5jm6/&#xA;8Yy+KpXcf85A/k9b8ufmSI8TQ+nDcyfdwiauKoGX/nJb8nUfiusSSj+dLS6A/wCGjU/hiqGm/wCc&#xA;oPykjYBLy6lFK8ktZAPl8fE4q3D/AM5P/lJITzvrqGnQvaymvy4BsVVf+hmvyg/6uk3/AEiXH/NG&#xA;Kq0X/OSX5NunJtdaI/yPZ3hP/CwsPxxVuT/nJH8mkQsuvNIR0RbO9qf+ChUfjiqEm/5ye/KONQUv&#xA;7mUk04pazAj3+MLiqUX3/OW/5dQqRa2Gp3T/ALP7qGNPpLS8v+FxVimr/wDOYl0wZdH8tJGd+M13&#xA;cF/lWONE/wCJ4qw28/5yl/Ne4d2insrQMahIbZSFHgPVMp+8nFUnuv8AnIX84bknn5idAagCK3tY&#xA;6A+6RA4qg/8Ala/5xXvH0/MGqSUqV9FnFR3/ALsCuKouLzn+fUw4xah5gk/a+EXJP3gdMVacfnze&#xA;H97d+YJOHT1bq5FK+HNx4dsVctn+e0BWVLnXEbfiyXc/If8AAyVGKqy+Yv8AnIO1CgXvmJvTO1Tc&#xA;zdDXevPkPniqFvvM3553kbpeX+viFjWQM1zDHuehpwWm/TpirEdO1bzBZ38kunX11a389Y5ZbeaS&#xA;ORwTUqzIwJFR3OKQLRh8x+ddMuobg6rfQXCMJYX+sSEhkIIP2j38cQUmJHN93eQ9cn13yVoesXJB&#xA;ub+xt57ggAAytGDJQDYfHXFinuKuxVjuufmL5E0LkNW16xtJF6wNOjTf8ilLSH/gcVYHrH/OUv5V&#xA;WJYWst5qjDp9Vtyqk/O4MGKsN1T/AJzFtwGXSvLLud+Et1dBKeFY443r/wAHirE7/wD5y1/MecFb&#xA;Wz0yzXsyxSyP97ylf+FxVj17/wA5D/nHfllXW2hQ1/d21tbpStejCMv3/mxTSS3fn782dRJ9fXtY&#xA;dW3Ki4njQ71+yrKuNhPAe5Jriw8zXx5XbTTnrWeXmagU/aYnBxBl4cml8rak3Uxr82P8AceIJ8Eq&#xA;y+Urr9qdB8gT/TBxMvBKovlE/tXX0BP+bseJPg+aoPKUPe4Y/JQP44OJfB82/wDCVv8A8tD/AHDH&#xA;iT4Id/hK3/5aH+4Y8S+CHf4St/8Alof7hjxL4IaPlKDtcMPmoP8AHHiR4Pm4eUoe9wx+Sgfxx4l8&#xA;HzXDyna953PyAGPEnwQqDyzpcY5SPIR35MAPwAx4inwQvi0/QYwWWHmF6lg7D8dsFlIxxSzzE1q8&#xA;cHoR+mELAgKFG9PD5ZKLXlHJln5X6n9Ssp7hVBltJ/U6KW4sgFKkHrQ75JoZ+PzGvLmU+kkdqtaI&#xA;jfGTX/KNMVWzef8AUVRkWWMynZeKbgjtvUfeMVQq+ctXmheSW5eIx7OoCjr4cQuKoQecL12+K7uV&#xA;9+bU/A4q6TzdfIKxXlxI3asjgficVU5fOmrywmB5GeJxSRWatRXxpXFXj12zR6pOyEqVmfiw2I+I&#xA;4llHmrarczTx2zStyYK25+YyMWzKeT7j/JVOH5U+WByDVsUaqmo+Ik0+Yrvkml45+bf/ADk7qtvq&#xA;11ofkkxww2jtDPrDosrvIhKsIEaqBAf2mB5dqDqq8U1HzZ+YHmdnGoavf6hG5+OOWd/RFewSojX5&#xA;AYkshEnkh4PKdw1DPMsfsoLH/jXI8TaMJRP+HtJh/vpnZvCoH4AVwcTLwQiF0vQo2C+jyc9A3Mk1&#xA;+eCyy8OKNitLKNSUt0jp/kqDjbIRC+acRQiQLyTbYGnXAlCnVv8AiunuW/sxW24NUV3HMBUPRga4&#xA;ra9r+s6xxAMDQcjUb4rbr/UBZ8C4BD1p1rt7b4qTSkNUZ0JXiu1VrU1xW0HeXUghWZ5ObE09MbUw&#xA;oJbtbplaOU1K9StfEYqFe4vQ8yOgPFOoO1d/bAlQubkPIX/uwaACuFDcHps5ErlVoaEeOBVnqSfz&#xA;H7zhVcZTwABbnU8jXr4YqsFz6ThiwDHYct/14rbf1w8ni5gF/tKKCuK2lmrSqVEVN1IJP0HJRasv&#xA;JMvJdy0Ru1D8QwQkV2P2gdvpyTjshe5RRt8R7UxVe2pGZgzosbA9UFASe5xVc2ovNVXkJB3NaAGm&#xA;KoR7py3w7KO3jirSXLqTX4gfHFVrzOzcq0p0HhirENYi9PVJaftt6n0tufxxSFt//c2/+qf4ZGLb&#xA;l6PuT8kCD+U/lkg1/wBDA29mYZJpfDEtpLBqb2d3VZYpjDcA9Qyvxfr74pHNmkzR2loxjUKkY+Fe&#xA;gHbKnN5MWvdevZXKo5VB4bV+7JiLRLKejtNv5XmCOanqpPiN8BCYZL2T6eaUrDdEKADQL3/z2yLc&#xA;hNS1JiinjRegWv68KCUKL2L0gzGlf2OpxRaHmvywKqoCnYk+GGmJkhhdMFCiQgDoAaY0x4m0vZUI&#xA;ZZTUbg1r+vGl4/NUutRe6C+s3Jk2DVpsfbGlMwVrXtYhGKALShB32xpeMKg1Ru4U/hjSfEVv0tH6&#xA;fDgK1ryqK9OlfDGk+IFv6UT+X/hsaXjDm1GBhQrX50xpeMKcF96akNVyTWtcaUSVP0kOyfj/AGYK&#xA;TxOGo+Mf4/2Y0vEsmuopacoySvT4qfwwoJURL+/9UivxcqVxRay9l9Us9KVpthDHJyTLywBS4Pf4&#xA;Pu3yTQnuKuxV2KuxV2KuxVjXmNeN8jfzRj7wTiqAnn5qidVStPpwANk5W+4vyBBH5QeW6/75l/6i&#xA;JMLW+cv+clvIz+XfzAl1SCPjpnmDleQsBQLcCguU+fM+p/ssVYnHINR0KrPxbjR2/wApPH50ys7F&#xA;y4niikWj6g+ha1DezWFtfvbFj9Sv4zLbuWQqpkjqvMKW5AHao32yxxSKXeX7Jrm/EhX9zFUuegqR&#xA;QCuCRbMQspvqLWsTgowC0+KhqK5ByClF5fRFOCite5H6sIDXKYQdvFeXlxHbWkLzXEp4xQxKXkZj&#xA;2VVBJPyyVNJmXoOi/wDOO35t6tGkw0Y2UL9HvZY4GH+tEWMo+lMLFm8f/OH3mgopk1+xWQgc1WOZ&#xA;gD3AJC1+7FDf/QnvmT/qYbP/AJFS4q7/AKE98yf9TDZ/8ipcVd/0J75k/wCphs/+RUuKqMv/ADiB&#xA;5yDkRa3pzp2ZhOp+4I368VWf9Cg+d/8Aq86Z99x/1TxVQf8A5xE/MUORHqejsn7JaW6Un5gW7frx&#xA;VQm/5xK/MyOnC80mata8J5xT584FxVDzf84qfmnGoKfo+Uk04pckEe/xouKoWb/nGD824wOFjbTV&#xA;6hLqIU+fMriqEm/5xt/OSNgE0NZRSvJLyzA+XxTKcVQcv5A/nDFz5eXJjwrXhNbv08OMhr9GKbQU&#xA;35N/mtDQt5Z1A16cIi/38OVMVspTq3kTz1pNpLd6roGpWVlBx9a6uLWdIV5MFXlKyhN2YAb9cVsq&#xA;Plfk19JEDQNGSfmpFP14oZGylSQdiMVaxV2KuxVVjtmdeVQAemKqbrxcr4Yqx3zNT1oD+1xNR7V2&#xA;xV7n5F/5xW0XWtD0jXr7zFPJaalbQXjWlvbpE6iaMO0fqtJMKrXjXh9GKvpDRdH07RdJtNJ02EQW&#xA;FlEsNvECTxRBQVJqSfEnrirDPzy8ip5w/L2/tY4+epWCm+00gVYywqSYx/xkTklPEg9sVfF3l3UY&#xA;4JHtZyBBP0J6Bum/zyMg3Yp1smt9qNikxhuIkuGTozCtPvByLca6oO411Vi9O3RYk8FHEY0gyASa&#xA;e7eRqk1Pj2HyyQDTLI9C/K78i/NfnuVLxwdM8v1q+pzKSZADQrboaeoff7I8a7ZJrJfWnkT8sfJ3&#xA;kizEGh2QW4ZeM+oTUe5l/wBeSg2/yVAX2xQyrFXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq8+/P7&#xA;/wAlB5k/4wxf9REeKvjPygjvqrBFLERMSAK7VXFWayaVcyorGM+3Sv3HFVw0V0RmkQ0A7fEx+7pi&#xA;qxtDZ445YCSr/aRhuPpxVpdMnQlRCxPjSv44quktZ4k5uhVelTiqpJpEHprNc3CwBhWrUHbvUjFW&#xA;H+c000S2rWl3HcycXSUREMFCkFdxUb8j3xV9f/8AOPepjUPyi0ByavbpLbOPD0Z3Rf8AhApxV6Li&#xA;rsVfMX5q/wDOL+ty61c6v5JENxZ3btNJpMkiwyRSOasIWfjGY69AzDj03xV5sfyC/OJWK/4dmqNt&#xA;prcjb3EuKbTjSf8AnF/82b6VVu7S20xCd5Lq5jeg+VuZzitvY/IH/OLnlHQZY77zDL+n79KMsDp6&#xA;dmjdf7qrGSn+WeJ/lxQ9pjjjijWONQkaAKiKAFVQKAADoBiq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXg//OUP5nWGm6BJ5ItAtxqeqIj3xNSLe3Vw61oR+8kZRQfy7nqMVfLelahqVjcmXTnZ&#xA;J2UoSqhyVJBIowbwxVNv8VedP9/Sf8iI/wDmjFLv8VedP9/Sf8iI/wDmjFXDzJ52mYIskzMeipAt&#xA;T/wKYoVFuPzDua+nFqElTT93BJ18PhXFVZPK/wCZ98aGx1Mg9phLGOv/ABYVAxVG2v5NfmDdtyms&#xA;0t+W/OeeM/eEMjfhiqZX/wCRHmaz0q4u/rUFzeQLzWygDsXA+0FZgnxU6DjvirMv+cX/AM1DpWqD&#xA;yRqrhdP1KQtpcpoPTu2oDET/ACy02/yv9bFX1XirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdiqS+c/NNj5V8r6j5gvt4LCEyCOtDJIfhjjB8XchR88VfE/lrS9V/Mbz3PearI0n1&#xA;iRrzVrgVFEJ/u08K7Io7D5Yq+o9F0qzsrFIoIEiiCgRxKoCqigBQB8hiqtJpls1eNUPt0+7FW00+&#xA;0j3f4j4scVXS/UEXk6pToKAE/hiqEafTDv6Jr4Db9RxVr6xptKiA18O368VU5NVsIRyMccTjoWYA&#xA;D37Yqx/VPNWnW6uyyi5uDuEjNRX3YbDFXz15/spLPzB+lrVfq63khnUxVURzhuTcfDf4hir7O/Kn&#xA;zovnLyJpetsR9bkj9G/UbUuYfgk27BiOY9iMVZbirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVfOX/ADl95qkjtNF8rQvQTs2oXijaqpWKAfIsZD9AxVBfkn5aXTfKkFy60utXcXEh&#xA;PX0/sxD5cfi/2WKvXRQbfdiqhd3KQRkk/G1QgHjirHNQ1G3s4Wubp6LWnizE9h44qxHWfNV5chVs&#xA;+dtbno/R2IPiOn0HFUM2q3sFnBNFqckly7MZIDUhRXrVq4qiLbWNehgt7265T6cHI3Kjn1FCR8Wx&#xA;8cVSue5tLrVGuJYzFbSOC8cdKhe9OgqcVdf6po10AsKx2ckChBGtWMrlgOw2p74qxbzdpguvLs6C&#xA;rSWw9eNm3Pwbt/wpIxSzr/nD/wAystzrvlmR/hkRNStU8GUiGc/SGi+7FD6ZxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvi3/nJXUJNS/OC/tVPIWUVrZw+G8Sykf8HMcVexW11p&#xA;OnRQ6YJ0iNpHHEiMePwqoVaV26YqnumXEAdmeQdKKSaj3xVRv7pZJGkJpGg2PsN64q8u1e+uZrE6&#xA;jc3IkVZTHHbcvjHLeoXw98Vb0251LX7eGzgUFLUNxU0Wg26t364qhNQhurG7FtLCTIGo5BqFBFQf&#xA;liroZ7yQG1d+FtzBQFjwqduRHbFUVqenfUJki9eOcsoYmM1APgcVSaDTliujNzr1KrTx/wBvFVd5&#xA;YJJHtW3LKeS02oRv+GKWP/8AOP8AqUmi/nHpMLtxS4knsJ+1fUjZUH/I1VxQ+3MVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdir4W/OKUD85teklc8U1BeTE7hVCDv4AYq9JkvddX6q&#xA;88DsLWrRNLGxrz7sT1xVvynr7Q63cwXQ9G3mBb1CeKB61r/KK74qnHmbzFam1eytJPVeUDnKhBUL&#xA;XcVHUnFWGTxerGUNCCRUGvSvtilG6LfyaRKZLRFoQVZGqQQTXxr2xQs1K+ub2eW5fj6zjYDZRQUU&#xA;YpQcX1k259WizEGlPHtihC2MWoKJfUJBI+DmeXxeOKpjBpl3LIsqQySyBeNUViCOvQVxVHxeWdYk&#xA;fmtkwc7cm4qaf7IjFXmIFx5c/Ny0knHpS2WrW1zIK9AZUmNT4ENir70xV2KuxV2KuxV2KuxV2Kux&#xA;V2KuxV2KuxV2KuxV2KuxV2KuxV2Kvjv/AJyg8l3+k+f5vMCwsdK1xY5I51B4LcRxrHJGx7MeHPfr&#xA;XbocVY75U/OnzDolpFY3kCanZwALF6jGOZVHRRIA4IHaqnFWWr+fnlqcL9b0W4Wv2wGimp8uQjri&#xA;q1vzn/L+Rv3miXIB6ssUFd/lIMVXn82fypbdtL1L/Ywwj9Vziq3/AJWp+Uf/AFa9V/4GP/spxVzf&#xA;m3+Vsa/udI1B2ruJI4Rt8/XfFVOT86vIqV9Dy7NJtt6noJv90lMVQ0n5+6fFX6l5YSM9ne5Xw/lS&#xA;Ff8AiWKoK5/5yF8zNUWul6fCD3kWaVv+Tir+GKpY35yfmjqUno2N16bH/dNlaxFvv4O/44qo2v5b&#xA;fm/5s1b68+jajLeXLqX1C8je3Wq0UMZZQgogWm3SmKvu3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYqgNe/QH6Kn/AE/9V/RNP9J+v+n9XpX/AHZ6vwdfHFXh2u/9Cg/WW+u/UvU5&#xA;Gv1D9IenX2+pfu6fLFWMf9Yg/wDL5/3MMVSm9/6FS4P6P6bry+H0OVaV/Z9banz3xVLZv+hYfSfh&#xA;/iflQ04fVeVfbn8P34qhLf8A6Fq9Zef+L+Hf1P0dx+nh8X3YqmEf/QrvNeX+JKVFeXoUp78d/uxV&#xA;O7H/AKFIq3rfpLtT1/rfvWno/jXFWWaV/wBCf8v9G+qVqf8Aev8ASNK0/wCXnFWd6D/0LzyT9Ef4&#xA;Z9bbhT6l6/UU+3+860+nFWf6d+jfqy/o70fqu3H6vw9PoKU4bdKYqicVf//Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:407a3ef8-4e15-f94e-bd65-14ab79fa7919</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:407a3ef8-4e15-f94e-bd65-14ab79fa7919</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:a9cd4feb-f9e6-8d45-996a-1828a37e5865</stRef:instanceID>
            <stRef:documentID>xmp.did:a9cd4feb-f9e6-8d45-996a-1828a37e5865</stRef:documentID>
            <stRef:originalDocumentID>uuid:C1BCCE1871B8DB11993190FCD52B4E9F</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f0d30425-12b9-8f4b-9b02-c264845a13ce</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:35:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:95018f98-c62d-2c4d-bdcd-48f46e6b8829</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:44:26+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:460a3291-fbef-684e-9fc2-a6545bc3bd9b</stEvt:instanceID>
                  <stEvt:when>2018-02-13T13:54:12+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f78d20f3-11c8-cf47-8075-778fbc0f4cc2</stEvt:instanceID>
                  <stEvt:when>2018-02-19T10:50:37+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:a9cd4feb-f9e6-8d45-996a-1828a37e5865</stEvt:instanceID>
                  <stEvt:when>2018-02-19T14:56:42+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:407a3ef8-4e15-f94e-bd65-14ab79fa7919</stEvt:instanceID>
                  <stEvt:when>2018-02-20T11:03:23+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Mobile</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1058.924107</stDim:w>
            <stDim:h>408.560882</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=136 G=168 B=13</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>136</xmpG:red>
                           <xmpG:green>168</xmpG:green>
                           <xmpG:blue>13</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=127 G=71 B=221</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>127</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>221</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=174 B=23</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>174</xmpG:green>
                           <xmpG:blue>23</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -408.561 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 408.561 li
1058.92 408.561 li
1058.92 0 li
cp
clp
78.8838 160.858 mo
74.5332 150.481 71.622 139.215 75.8398 132.069 cv
91.1665 106.113 122.504 160.569 78.8838 160.858 cv
cp
738.175 68.7216 mo
733.566 64.8012 729.337 62.3705 725.061 60.7739 cv
724.591 54.7587 724.12 48.7436 723.637 42.7299 cv
722.824 32.6225 714.722 20.4823 702.865 21.9584 cv
627.06 31.3949 550.909 37.0263 474.512 38.0292 cv
414.075 38.8237 353.689 31.7465 295.66 48.4032 cv
280.062 47.9657 264.463 47.5658 248.871 47.3798 cv
190.754 46.685 138.16 63.5859 83.5351 78.4115 cv
71.7456 80.2138 60.1396 83.0009 48.853 87.2851 cv
43.9267 89.1557 40.6626 92.4443 38.7387 96.2602 cv
30.3969 96.7758 22.5503 102.534 23.2402 112.559 cv
25.5283 145.752 39.0605 171.268 58.5429 197.179 cv
58.6157 197.32 58.6884 197.466 58.7617 197.606 cv
58.7822 197.59 58.8027 197.574 58.8232 197.558 cv
59.7133 198.737 60.5434 199.912 61.4555 201.093 cv
66.3877 207.472 73.0957 208.004 78.8296 205.357 cv
97.2426 212.446 120.868 204.813 138.567 194.262 cv
149.411 187.796 159.059 179.659 168.659 171.447 cv
186.787 161.559 204.953 152.392 222.789 141.834 cv
245.676 138.727 268.667 136.388 290.417 133.127 cv
293.764 137.141 298.644 139.896 304.95 139.882 cv
327.429 139.833 349.084 137.368 371.195 133.393 cv
374.97 132.714 377.881 131.284 380.135 129.413 cv
387.455 128.962 394.81 128.667 402.176 128.44 cv
436.888 132.509 471.541 137.207 506.438 140.009 cv
573.948 145.429 641.661 139.624 709.249 143.823 cv
719.839 144.481 731.366 133.614 730.305 122.768 cv
729.706 116.643 729.23 110.506 728.692 104.374 cv
730.43 103.529 732.2 102.765 733.906 101.846 cv
745.184 95.7729 748.393 77.4189 738.175 68.7216 cv
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
.298039 .207843 .207843 rgb
f
1040.87 356.139 mo
1037.23 345.658 1033.85 334.334 1030.38 322.687 cv
1028.67 293.182 1022.68 254.572 1000.36 241.543 cv
993.673 229.092 985.677 217.816 976.021 208.261 cv
969.662 153.674 967.627 98.8774 969.285 43.8642 cv
969.546 35.2211 962.618 25.3461 953.849 23.5898 cv
886.502 10.1 820.159 32.038 752.634 23.7568 cv
734.116 21.4872 728.284 44.9482 737.84 57.0834 cv
736.085 83.4902 739.301 108.653 742.239 135.5 cv
745.146 162.055 741.977 187.935 740.757 214.126 cv
738.059 217.999 735.627 221.946 733.427 225.961 cv
731.526 229.223 729.835 232.567 728.109 235.895 cv
726.913 236.5 725.756 237.308 724.73 238.581 cv
702.592 266.088 685.61 299.632 682.876 335.393 cv
682.212 344.054 684.226 353.198 688.335 360.469 cv
688.407 363.988 688.926 367.443 690.159 370.779 cv
698.135 392.363 721.322 388.751 740.196 387.319 cv
743.296 387.083 746.504 386.912 749.666 386.717 cv
779.969 410.535 841.861 391.873 875.471 392.081 cv
897.84 392.219 917.633 389.252 939.478 384.795 cv
969.555 378.658 997.922 385.536 1027.59 379.525 cv
1037.21 377.577 1044.07 365.354 1040.87 356.139 cv
cp
.466667 .462745 .462745 rgb
f
981 214.782 mo
937.185 221.872 892.601 225.76 848.213 226.537 cv
823.605 226.968 797.016 222.608 771.66 223.526 cv
770.243 223.334 768.806 223.412 767.383 223.765 cv
760.985 224.158 754.684 224.945 748.521 226.254 cv
747.033 226.33 745.547 226.647 744.097 227.264 cv
742.135 227.773 740.184 228.321 738.256 228.957 cv
733.519 230.516 730.235 234.241 728.668 238.512 cv
723.307 243.458 718.782 248.86 714.693 254.839 cv
712.547 256.067 710.637 258.06 709.261 261.092 cv
707.185 265.661 705.11 270.23 703.035 274.798 cv
701.984 277.112 701.567 279.379 701.582 281.544 cv
700.081 286.029 698.673 290.56 697.295 295.167 cv
693.616 296.54 690.715 299.576 691.066 304.184 cv
691.483 309.636 689.2 315.091 689.477 320.647 cv
689.761 326.305 691.39 330.696 695.895 334.145 cv
697.879 335.662 700.554 334.278 701.79 332.6 cv
704.203 329.325 704.792 325.863 705.379 321.914 cv
705.407 321.735 705.426 321.5 705.45 321.309 cv
707.071 322.094 708.807 322.561 710.543 322.521 cv
713.628 326.789 718.75 326.518 722.374 323.736 cv
726.185 328.393 732.965 331.039 738.542 329.103 cv
739.867 330.489 741.465 331.631 743.219 332.481 cv
744.405 334.551 746.215 336.286 748.327 337.552 cv
748.265 337.716 748.203 337.883 748.142 338.047 cv
746.284 343.003 747.659 347.059 750.521 349.781 cv
751.331 361.31 769.588 364.115 774.618 351.487 cv
774.71 351.257 774.802 351.026 774.893 350.795 cv
778.785 350.979 782.696 348.997 784.082 344.065 cv
784.893 341.181 785.767 338.322 786.592 335.443 cv
788.671 334.86 790.458 333.477 790.968 330.999 cv
792.893 321.638 794.999 312.342 797.213 303.072 cv
801.231 304.777 806.042 304.291 810.166 299.996 cv
811.639 298.463 812.933 296.735 814.27 295.054 cv
817.457 293.761 820.26 291.258 821.82 287.296 cv
823.255 283.66 831.542 283.192 834.584 282.654 cv
839.002 281.874 841.484 278.76 842.339 275.101 cv
843.617 274.947 844.894 274.545 846.102 273.676 cv
848.956 271.624 851.804 269.563 854.653 267.505 cv
860.723 270.229 867.331 270.418 866.366 264.411 cv
866.714 264.406 li
869.352 269.717 875.367 271.517 880.872 268.859 cv
881.837 268.393 li
884.76 271.606 889.386 272.647 894.337 270.403 cv
895.525 269.858 896.727 269.339 897.919 268.798 cv
901.092 273.03 907.684 274.609 912.232 271.755 cv
934.412 257.842 963.385 267.292 986.008 250.704 cv
987.784 249.4 989.029 247.851 989.902 246.199 cv
1010.31 240.422 1001.24 211.508 981 214.782 cv
cp
.717647 .717647 .717647 rgb
f
836.038 297.809 mo
835.764 298.065 835.489 298.322 835.214 298.579 cv
828.866 304.498 841.199 313.38 844.663 304.079 cv
844.79 303.736 844.918 303.394 845.046 303.051 cv
847.033 297.713 839.685 294.408 836.038 297.809 cv
cp
f
862.185 287.835 mo
861.691 287.835 861.69 288.601 862.185 288.601 cv
862.677 288.601 862.678 287.835 862.185 287.835 cv
cp
f
858.355 320.853 mo
843.688 320.853 843.664 343.646 858.355 343.646 cv
873.021 343.646 873.046 320.853 858.355 320.853 cv
cp
f
872.142 280.801 mo
871.442 281.131 870.802 281.552 870.222 282.063 cv
865.512 285.662 869.655 293.588 875.022 290.277 cv
876.044 289.647 876.925 288.964 877.847 288.196 cv
882.052 284.689 876.672 278.267 872.142 280.801 cv
cp
f
912.791 291.468 mo
912.219 290.929 911.556 290.547 910.802 290.325 cv
905.39 288.018 899.532 294.109 904.169 298.921 cv
905.069 299.858 905.98 300.548 907.077 301.242 cv
913.374 305.227 918.481 295.714 912.791 291.468 cv
cp
f
936.342 316.484 mo
935.848 316.389 935.349 316.382 934.849 316.42 cv
934.722 316.334 934.668 316.292 934.398 316.123 cv
930.81 313.671 925.721 316.179 924.643 320.091 cv
923.514 324.192 926.722 328.546 931.047 328.497 cv
935.265 328.45 939.45 326.535 940.75 322.272 cv
941.704 319.146 939.16 316.822 936.342 316.484 cv
cp
f
960.567 276.692 mo
960.238 275.978 959.083 275.488 958.337 275.786 cv
955.802 276.796 955.358 278.435 954.158 280.845 cv
952.062 285.051 958.686 287.808 960.062 283.333 cv
960.853 280.767 961.713 279.182 960.567 276.692 cv
cp
f
967.486 270.018 mo
966.676 270.161 965.877 270.349 965.089 270.582 cv
959.966 271.942 959.96 279.605 965.089 280.966 cv
965.877 281.2 966.676 281.387 967.486 281.53 cv
977.107 283.508 977.166 268.029 967.486 270.018 cv
cp
f
981.835 282.893 mo
977.447 282.893 977.44 289.714 981.835 289.714 cv
986.224 289.714 986.23 282.893 981.835 282.893 cv
cp
f
926.317 267.279 mo
916.616 267.279 916.602 282.355 926.317 282.355 cv
936.018 282.355 936.034 267.279 926.317 267.279 cv
cp
f
810.495 317.921 mo
804.374 317.921 804.364 327.434 810.495 327.434 cv
816.615 327.434 816.625 317.921 810.495 317.921 cv
cp
f
726.261 332.19 mo
720.024 332.19 720.014 341.881 726.261 341.881 cv
732.497 341.881 732.507 332.19 726.261 332.19 cv
cp
f
707.116 330.784 mo
700.304 330.784 700.292 341.373 707.116 341.373 cv
713.93 341.373 713.94 330.784 707.116 330.784 cv
cp
f
1033.47 355.219 mo
1033.47 355.162 li
1033.36 355.171 1033.26 355.185 1033.15 355.195 cv
1032.93 355.2 1032.68 355.249 1032.45 355.268 cv
1001.47 358.04 970.295 363.386 939.104 367.552 cv
911.769 369.189 884.376 370.222 858.147 373.067 cv
805.836 372.695 755.886 368.479 703.761 360.377 cv
687.72 357.883 680.799 382.423 696.985 384.952 cv
711.302 387.189 725.35 389.077 739.276 390.679 cv
758.847 395.403 780.244 396.611 801.252 396.083 cv
821.648 397.34 842.232 398.146 863.461 398.669 cv
920.204 400.064 980.747 388.348 1036.8 379.761 cv
1051.22 377.551 1046.89 355.244 1033.47 355.219 cv
cp
f
785.288 54.2402 mo
782.285 54.2402 782.281 58.9062 785.288 58.9062 cv
788.291 58.9062 788.296 54.2402 785.288 54.2402 cv
cp
.34902 .34902 .34902 rgb
f
841.232 57.8163 mo
840.617 57.019 839.806 56.4384 838.923 56.0312 cv
838.661 53.3725 836.953 50.6054 834.225 50.2187 cv
831.91 49.8906 829.783 50.0136 827.47 49.9438 cv
823.149 49.811 820.35 55.8598 823.789 58.8281 cv
825.617 60.4067 827.467 61.7079 829.716 62.4306 cv
829.852 65.8647 833.133 68.5121 836.983 67.8505 cv
837.311 67.7934 837.641 67.7372 837.97 67.6801 cv
842.447 66.9101 843.7 61.0131 841.232 57.8163 cv
cp
f
963.596 58.0126 mo
959.642 47.4404 945.826 44.311 938.817 51.8115 cv
937.648 51.9535 936.585 52.103 935.587 52.2631 cv
929.421 46.6489 919.439 48.5043 914.55 55.5898 cv
913.4 55.456 912.239 55.331 910.828 55.1708 cv
907.406 54.7841 904.249 57.8071 901.101 58.0239 cv
895.381 58.4184 889.444 57.0575 882.545 55.2197 cv
869.414 51.7216 862.228 50.1215 853.12 62.3613 cv
849.495 67.2333 849.803 71.9838 852.171 75.6762 cv
846.347 71.6239 838.345 71.2919 832.176 74.7787 cv
829.858 72.6025 826.776 71.436 823.517 71.0063 cv
826.545 65.8759 824.304 57.5566 816.511 57.5566 cv
812.131 57.5566 809.519 60.2328 808.562 63.4755 cv
808.052 61.0976 806.305 59.0356 803.157 59.0356 cv
795.649 59.0356 795.638 70.7016 803.157 70.7016 cv
805.825 70.7016 807.501 69.2021 808.273 67.3007 cv
808.517 69.6171 809.579 71.726 811.434 73.1694 cv
807.903 75.0649 805.043 77.998 803.933 81.9682 cv
802.935 81.769 801.93 81.6459 800.925 81.6196 cv
798.75 79.163 795.815 77.6264 792.682 76.9081 cv
795.597 70.164 792.315 60.4916 782.735 60.4916 cv
780.818 60.4916 779.165 60.8974 777.749 61.5741 cv
777.99 55.7021 774.359 49.6425 766.783 49.6425 cv
752.116 49.6425 752.092 72.4364 766.783 72.4364 cv
768.701 72.4364 770.353 72.0307 771.77 71.3539 cv
771.723 72.5092 771.834 73.6591 772.09 74.7826 cv
771.615 74.7113 771.15 74.6059 770.666 74.5844 cv
770.584 74.519 770.517 74.435 770.434 74.3715 cv
766.33 71.204 760.85 72.3315 756.496 74.0629 cv
748.912 65.2758 730.565 68.2875 730.545 83.2348 cv
730.512 106.9 731.086 130.078 734.227 153.544 cv
735.187 160.726 739.925 165.23 745.311 166.897 cv
745.433 171.962 745.502 177.019 745.704 182.101 cv
746.297 197.016 764.19 198.986 770.597 188.821 cv
773.177 189.698 775.974 189.702 778.617 188.96 cv
784.43 193.043 792.147 192.953 797.41 188.182 cv
804.816 190.884 814.815 188.15 817.828 180.818 cv
818.5 180.954 819.095 181.194 819.798 181.287 cv
822.746 181.678 825.412 180.799 827.72 179.261 cv
831.644 181.232 836.502 182.001 840.273 180.558 cv
841.344 180.148 842.249 179.582 843.226 179.084 cv
843.436 179.259 843.614 179.465 843.828 179.636 cv
844.6 180.252 845.483 180.76 846.352 181.282 cv
844.655 185.314 846.59 191.021 852.293 191.021 cv
856.437 191.021 858.557 187.969 858.789 184.759 cv
859.262 184.757 859.739 184.836 860.208 184.803 cv
860.308 184.998 860.382 185.196 860.481 185.393 cv
865.301 194.787 878.98 196.683 887.576 191.467 cv
892.085 192.921 896.858 193.053 900.863 191.381 cv
905.421 191.9 910.004 191.016 913.655 188.649 cv
913.028 193.393 915.672 198.649 921.851 198.649 cv
929.523 198.649 931.818 190.555 928.977 185.409 cv
929.974 184.944 930.965 184.454 931.893 183.802 cv
936.65 184.674 941.552 183.814 945.469 181.182 cv
948.979 182.449 952.945 182.431 956.611 181.36 cv
966.235 184.684 978.252 180.401 976.988 167.535 cv
973.501 132.034 976.207 91.7299 963.596 58.0126 cv
cp
f
833.897 188.926 mo
833.858 188.904 833.854 188.875 833.821 188.851 cv
834.021 181.9 822.817 180.369 821.67 188.451 cv
819.31 189.084 816.326 189.582 815.535 189.801 cv
813.819 190.274 814.583 192.641 816.251 192.397 cv
818.102 192.127 819.953 191.856 821.804 191.586 cv
822.538 194.271 824.727 196.217 827.455 197.306 cv
832.077 199.147 836.517 192.863 833.897 188.926 cv
cp
f
841.445 186.371 mo
840.951 186.371 840.951 187.137 841.445 187.137 cv
841.936 187.137 841.938 186.371 841.445 186.371 cv
cp
f
859.312 190.838 mo
858.82 190.838 858.819 191.603 859.312 191.603 cv
859.805 191.603 859.806 190.838 859.312 190.838 cv
cp
f
962.607 229.439 mo
957.707 231.432 951.386 236.915 946.679 238.05 cv
942.271 239.113 942.519 237.321 938.477 237.084 cv
927.952 236.469 919.052 240.33 907.967 239.636 cv
898.014 239.011 889.193 239.998 878.881 240.13 cv
875.491 240.174 864.49 236.566 860.028 237.136 cv
859.127 237.251 857.987 237.774 856.763 238.417 cv
856.45 238.234 856.229 237.989 855.893 237.822 cv
851.139 235.479 847.566 236.069 843.919 237.422 cv
842.429 236.263 840.607 235.379 838.286 234.932 cv
834.797 234.261 831.671 234.627 828.457 236.173 cv
827.42 236.673 826.451 237.282 825.537 237.973 cv
821.546 237 817.201 237.684 813.164 240.569 cv
812.339 241.159 811.527 242.018 810.74 242.979 cv
806.893 243.459 803.069 243.964 799.392 245.073 cv
796.337 245.992 793.751 247.636 791.306 249.486 cv
788.718 244.581 782.753 241.563 778.139 245.601 cv
775.25 241.105 768.871 239.169 764.195 243.788 cv
764.165 243.818 764.109 243.889 764.076 243.923 cv
765.212 234.599 750.493 229.701 745.326 238.512 cv
737.76 251.414 727.943 267.443 726.324 283.206 cv
725.375 285.808 724.37 288.398 723.542 291.028 cv
721.896 295.218 726.717 299.007 730.726 297.617 cv
731.407 298.032 732.108 298.43 732.922 298.671 cv
739.441 300.609 745.074 298.302 750.102 293.939 cv
751.535 298.395 748.232 306.484 746.373 309.924 cv
741.174 319.544 754.954 331.687 762.3 322.213 cv
768.563 314.134 773.949 304.164 776.681 293.99 cv
780.63 289.424 785.598 285.376 790.185 281.652 cv
793.887 278.648 793.736 274.735 791.7 271.771 cv
797.35 267.647 802.461 264.697 809.307 262.785 cv
811.005 263.8 813.185 263.859 815.066 263.613 cv
816.969 263.364 820.058 262.594 821.968 261.68 cv
824.632 262.867 827.604 263.297 830.527 262.532 cv
831.419 262.299 832.32 261.834 833.198 261.346 cv
835.878 262.985 839.391 263.809 842.221 262.663 cv
847.03 260.717 851.419 255.383 856.674 255.365 cv
858.899 255.358 861.268 253.849 862.141 251.707 cv
863.268 251.776 864.384 251.871 865.465 252.042 cv
871.255 252.956 876.172 252.829 882.06 251.657 cv
895.983 248.886 899.978 251.562 912.419 252.012 cv
918.248 252.224 922.911 249.103 928.096 248.323 cv
932.049 247.728 932.463 246.553 935.624 246.866 cv
936.678 246.971 937.333 250.101 938.66 250.098 cv
949.957 250.078 957.681 243.486 965.838 234.989 cv
967.946 232.793 965.857 228.119 962.607 229.439 cv
cp
.819608 .819608 .819608 rgb
f
1026.72 362.999 mo
967.705 375.842 911.201 381.493 850.917 379.229 cv
826.477 378.313 803.754 381.581 779.606 382.761 cv
753.924 384.018 728.745 375.733 703.064 375.793 cv
699.503 375.802 697.701 381.119 701.163 382.817 cv
749.698 406.627 799.436 393.776 850.917 396.156 cv
912.028 398.979 972.358 397.001 1031.83 381.517 cv
1043.84 378.388 1038.75 360.382 1026.72 362.999 cv
cp
f
948.575 30.8613 mo
886.228 30.4443 812.564 13.7382 752.734 35.2265 cv
750.639 35.9789 750.069 39.6108 752.734 40.0727 cv
755.334 40.5214 757.988 40.8407 760.637 41.1738 cv
759.831 41.6503 759.148 42.3852 758.88 43.6772 cv
758.65 44.7875 li
757.677 49.4819 763.427 51.6962 766.151 47.9491 cv
766.375 47.6415 766.599 47.3329 766.823 47.0253 cv
766.977 46.8139 766.974 46.6122 767.081 46.4028 cv
767.878 46.8046 768.808 46.9496 769.826 46.5951 cv
771.331 46.0717 772.337 45.4775 773.573 44.4809 cv
774.229 43.9516 774.569 43.2416 774.672 42.4833 cv
786.147 43.1215 797.871 42.9252 809.504 42.2709 cv
809.761 43.6342 810.886 44.8427 812.824 44.4994 cv
816.143 43.9125 819.717 43.0805 822.677 41.3437 cv
829.7 40.7719 836.649 40.1015 843.427 39.3993 cv
879.418 35.6689 912.494 35.5258 948.575 39.8349 cv
954.18 40.5043 954.483 30.9013 948.575 30.8613 cv
cp
.717647 .717647 .717647 rgb
f
1008.06 25.5219 mo
1003.46 12.6669 986.253 12.478 981.704 25.5219 cv
976.602 40.1567 980.842 54.9823 982.226 70.1425 cv
983.699 86.2802 984.361 102.428 984.515 118.63 cv
984.718 139.984 1017.92 140.038 1017.72 118.63 cv
1017.43 88.8266 1018.22 53.8896 1008.06 25.5219 cv
cp
.298039 .207843 .207843 rgb
f
1017.5 26.2416 mo
1015.31 16.0702 1002.91 15.8022 993.108 17.1801 cv
988.663 16.4013 983.836 17.85 980.684 21.4125 cv
974.416 28.498 978.573 40.08 988.489 40.2568 cv
991.996 40.3193 995.446 40.183 998.951 40.0727 cv
1000.55 40.0229 1002.28 40.0688 1003.85 39.6723 cv
1004.86 39.62 1005.28 39.5605 1005.19 39.4941 cv
1005.86 39.5844 1006.53 39.6811 1007.2 39.7602 cv
1014.54 40.6445 1018.8 32.2641 1017.5 26.2416 cv
cp
.4 .298039 .298039 rgb
f
138.853 96.0971 mo
127.305 96.0971 127.284 114.045 138.853 114.045 cv
150.401 114.045 150.42 96.0971 138.853 96.0971 cv
cp
f
151.617 98.3071 mo
151.123 98.3071 151.123 99.0737 151.617 99.0737 cv
152.108 99.0737 152.11 98.3071 151.617 98.3071 cv
cp
f
703.121 31.2377 mo
698.26 32.9018 693.362 34.3798 688.443 35.7988 cv
667.988 31.9604 646.328 36.2475 625.602 40.4687 cv
616.207 40.7944 606.693 41.8813 597.702 42.1718 cv
584.995 42.5834 572.317 43.3041 559.643 44.0864 cv
544.839 42.9218 529.92 44.0199 514.745 43.2153 cv
514.743 43.2153 514.743 43.2143 514.741 43.2143 cv
506.04 41.499 497.111 40.2016 488.021 39.2929 cv
486.404 38.3075 484.426 37.9008 482.144 38.3451 cv
474.286 37.6645 466.398 37.4589 458.503 37.4448 cv
451.764 36.6894 445.017 36.0024 438.249 35.5024 cv
390.018 31.9365 349.221 40.9848 302.331 48.7455 cv
301.039 48.9594 300.197 49.8315 299.717 50.9086 cv
287.129 53.8061 275.011 56.5566 264.532 56.788 cv
263.131 56.8198 262.098 57.2875 261.243 57.9101 cv
248.319 58.7519 235.464 59.8447 222.71 61.3862 cv
194.205 59.8617 165.9 62.8588 137.815 67.6801 cv
137.623 67.5473 137.505 67.3373 137.294 67.226 cv
114.39 55.1064 81.7251 73.2197 60.1357 82.5639 cv
48.5952 87.5571 40.2812 92.7787 34.79 99.9457 cv
32.268 101.198 30.0097 103.787 29.5332 106.349 cv
29.5273 106.384 29.5273 106.422 29.52 106.456 cv
27.9946 107.706 26.7832 109.34 26.0986 111.294 cv
25.934 111.249 25.7714 111.204 25.6089 111.16 cv
22.352 133.486 28.3794 156.28 37.9629 176.434 cv
44.2485 189.651 58.2212 211.602 75.1372 203.511 cv
79.5771 204.184 83.0078 199.023 80.5962 194.961 cv
80.4594 194.191 80.2671 193.417 79.8798 192.677 cv
77.2983 187.733 73.5107 185.101 69.7338 181.126 cv
65.6621 176.839 62.497 171.64 59.8125 166.265 cv
59.4272 165.065 59.1225 163.828 58.7671 162.611 cv
61.5322 160.156 63.0576 156.398 61.6855 151.707 cv
57.582 137.687 54.08 124.625 60.2797 112.271 cv
71.9306 106.172 87.7397 103.268 97.6894 99.9281 cv
107.624 96.5927 118.361 94.0981 127.17 88.8603 cv
128.485 90.787 130.506 92.1386 133.313 91.8739 cv
149.824 90.3168 166.397 88.6781 182.999 87.1103 cv
181.767 87.6601 180.527 88.1908 179.297 88.7426 cv
177.257 89.6567 176.22 91.7582 175.962 93.9623 cv
174.378 92.9955 172.447 92.3984 170.122 92.3984 cv
155.455 92.3984 155.431 115.192 170.122 115.192 cv
176.362 115.192 179.925 111.058 180.858 106.314 cv
181.825 105.062 182.176 103.424 182.019 101.851 cv
183.511 101.992 185.07 101.801 186.543 101.14 cv
191.18 99.0595 195.125 97.6698 197.894 93.1611 cv
199.303 90.8647 198.482 87.4467 196.261 85.8774 cv
198.599 85.6655 200.937 85.4784 203.276 85.2719 cv
199.266 88.2436 198.967 95.8862 205.25 97.8593 cv
209.569 99.2157 213.639 100.979 218.195 99.8197 cv
222.809 98.6464 223.849 92.9584 220.874 89.6762 cv
218.102 86.6176 214.013 85.725 210.141 84.6781 cv
235.916 82.4628 261.718 80.6933 287.449 79.9594 cv
287.054 85.9306 290.67 92.2192 298.388 92.2192 cv
306.127 92.2192 309.747 85.8744 309.321 79.8788 cv
344.266 81.0063 386.608 86.1913 414.905 67.2485 cv
415.332 66.9623 415.528 66.5302 415.829 66.1567 cv
415.922 66.1469 416.018 66.1366 416.113 66.1264 cv
430.137 66.9091 444.214 67.4706 458.228 67.7792 cv
453.282 74.3349 456.124 86.4755 466.856 86.4755 cv
477.481 86.4755 480.381 74.5434 475.61 67.9511 cv
489.936 67.9399 504.145 67.5859 517.994 66.4501 cv
546.544 66.7465 575.047 67.6952 603.618 67.2323 cv
624.654 66.891 645.93 70.0375 663.21 57.9286 cv
673.77 57.2724 684.322 58.7035 694.495 55.5619 cv
696.28 55.0112 697.583 54.1381 698.648 53.1386 cv
700.273 53.0829 701.896 53.018 703.524 52.9902 cv
718.917 58.8876 722.278 24.6816 703.121 31.2377 cv
cp
f
258.824 91.601 mo
257.091 91.601 257.087 94.2934 258.824 94.2934 cv
260.555 94.2934 260.559 91.601 258.824 91.601 cv
cp
f
336.676 82.8261 mo
322.009 82.8261 321.985 105.62 336.676 105.62 cv
351.343 105.62 351.367 82.8261 336.676 82.8261 cv
cp
f
387.09 83.8031 mo
381.893 83.8031 381.883 91.8798 387.09 91.8798 cv
392.286 91.8798 392.295 83.8031 387.09 83.8031 cv
cp
f
410.701 84.3622 mo
404.58 84.3622 404.57 93.8744 410.701 93.8744 cv
416.82 93.8744 416.831 84.3622 410.701 84.3622 cv
cp
f
447.075 103.945 mo
442.339 103.945 442.332 111.303 447.075 111.303 cv
451.809 111.303 451.818 103.945 447.075 103.945 cv
cp
f
498.764 68.269 mo
489.179 68.269 489.162 83.1655 498.764 83.1655 cv
508.349 83.1655 508.364 68.269 498.764 68.269 cv
cp
f
556.196 79.1874 mo
548.343 79.1874 548.33 91.3915 556.196 91.3915 cv
564.049 91.3915 564.061 79.1874 556.196 79.1874 cv
cp
f
614.061 80.1332 mo
614.019 79.8969 li
614.132 78.0253 612.173 75.8295 610.208 76.0849 cv
608.883 76.2568 607.859 76.4784 606.68 77.1308 cv
603.089 79.1122 603.643 84.5302 607.28 86.0614 cv
610.864 87.5722 615.403 84.1396 614.061 80.1332 cv
cp
f
628.944 70.2294 mo
628.451 70.2294 628.451 70.995 628.944 70.995 cv
629.436 70.995 629.438 70.2294 628.944 70.2294 cv
cp
f
668.409 71.0595 mo
664.774 68.7026 659.547 68.7626 655.349 68.1147 cv
650.392 67.349 649.825 74.8852 654.466 74.6366 cv
658.929 74.3984 664.347 75.0058 668.409 72.9189 cv
669.164 72.5317 669.05 71.4745 668.409 71.0595 cv
cp
f
682.549 62.0473 mo
674.81 62.0473 674.797 74.0722 682.549 74.0722 cv
690.286 74.0722 690.298 62.0473 682.549 62.0473 cv
cp
f
148.255 118.352 mo
143.856 117.141 140.064 120.531 139.737 124.843 cv
139.704 125.266 139.672 125.689 139.64 126.113 cv
139.16 132.413 148.99 135.123 151.729 129.389 cv
151.912 129.005 152.095 128.622 152.278 128.24 cv
154.129 124.365 152.671 119.569 148.255 118.352 cv
cp
f
135.662 138.983 mo
131.556 138.983 128.666 140.818 126.858 143.392 cv
126.806 142.905 126.828 142.447 126.753 141.954 cv
126.318 139.073 121.575 139.182 121.042 141.954 cv
120.879 142.801 120.631 143.553 120.408 144.334 cv
120.167 144.651 119.924 144.976 119.681 145.386 cv
118.987 146.553 118.664 147.919 118.421 149.322 cv
114.964 155.43 108.892 158.578 100.798 159.036 cv
93.434 159.452 87.3379 160.533 80.1958 158.463 cv
80.1699 158.559 80.1416 158.656 80.1157 158.751 cv
72.2319 157.227 63.3325 165.091 68.8442 173.227 cv
73.333 179.853 79.7998 181.622 86.6645 181.031 cv
93.541 182.091 100.606 181.752 107.166 179.318 cv
115.166 176.35 125.383 173.502 130.479 166.418 cv
131.639 164.805 131.846 162.846 131.476 160.955 cv
132.715 161.436 134.071 161.776 135.662 161.776 cv
150.329 161.776 150.353 138.983 135.662 138.983 cv
cp
f
722.688 124.798 mo
722.66 124.668 722.618 124.528 722.592 124.397 cv
724.504 114.15 724.281 103.233 724.09 93.1088 cv
723.857 80.7641 706.011 81.0317 705.102 93.1088 cv
704.732 100.779 704.749 109.274 703.299 117.265 cv
676.904 116.006 649.762 116.993 622.913 117.382 cv
607.985 113.101 590.695 116.595 575.032 116.888 cv
563.883 117.096 552.766 117.386 541.653 117.757 cv
544.605 115.038 545.996 110.596 543.37 107.015 cv
543.151 106.716 542.933 106.419 542.715 106.121 cv
538.954 100.994 532.598 100.994 528.838 106.121 cv
528.619 106.419 528.4 106.716 528.182 107.015 cv
525.392 110.82 527.149 115.573 530.484 118.22 cv
521.78 118.564 513.079 118.901 504.363 119.39 cv
482.596 114.677 458.836 117.609 436.486 118.701 cv
436.061 117.732 435.381 116.873 434.199 116.55 cv
406.29 108.928 373.592 114.214 344.132 115.978 cv
343.969 115.013 343.544 114.107 342.445 113.573 cv
303.906 94.8764 260.052 106.08 222.418 125.702 cv
216.561 126.717 210.947 129.545 205.658 133.002 cv
209.56 126.279 206.451 115.372 196.286 115.372 cv
181.619 115.372 181.595 138.165 196.286 138.165 cv
197.165 138.165 197.983 138.073 198.757 137.919 cv
197.989 138.502 197.222 139.087 196.471 139.67 cv
193.912 141.658 191.571 143.748 189.322 145.885 cv
186.016 148.2 182.786 150.525 179.695 152.853 cv
178.321 153.889 177.607 155.233 177.336 156.62 cv
176.478 155.626 175.253 155.005 173.582 155.205 cv
160.209 156.811 150.835 166.262 139.719 173.336 cv
129.449 179.872 118.845 185.823 107.495 189.712 cv
104.141 189.16 100.916 189.586 97.0722 189.885 cv
91.9668 190.282 86.9751 189.88 81.8823 189.619 cv
73.2412 189.175 68.792 203.059 77.2573 206.689 cv
78.0854 207.044 78.7529 207.281 79.4707 207.556 cv
79.4614 207.575 79.4536 207.594 79.4463 207.612 cv
79.5493 207.635 79.6762 207.655 79.7807 207.679 cv
82.563 208.725 84.7968 209.207 87.5566 209.017 cv
96.9116 210.17 108.159 209.827 113.723 203.542 cv
114.014 203.213 114.252 202.834 114.491 202.457 cv
117.598 201.855 120.653 200.974 123.706 200.081 cv
124.656 203.174 127.881 205.467 131.609 203.284 cv
141.725 197.363 151.871 191.472 161.94 185.462 cv
162.679 185.608 163.511 185.477 164.32 184.845 cv
166.296 183.298 168.36 181.828 170.395 180.332 cv
172.619 178.961 174.893 177.668 177.095 176.266 cv
188.965 168.703 202.15 162.349 212.53 152.774 cv
212.614 152.696 212.6 152.601 212.672 152.521 cv
219.812 148.628 227.386 145.035 233.007 139.479 cv
233.69 139.24 234.396 139.056 235.081 138.823 cv
236.318 141.279 238.891 143.135 242.402 142.528 cv
280.431 135.945 318.826 136.184 357.282 135.474 cv
367.834 135.279 378.599 135.545 389.208 135.1 cv
403.221 135.399 417.233 135.647 431.268 135.68 cv
451.002 135.726 471.835 137.906 491.613 135.47 cv
492.875 136.384 494.333 137.129 496.216 137.37 cv
524.334 140.955 551.949 142.206 580.288 141.741 cv
596.035 141.482 612.665 143.34 626.478 136.966 cv
647.399 139.301 669.936 141.4 689.677 138.053 cv
690.501 139.187 691.527 140.24 693.001 141.057 cv
694.947 142.614 696.895 144.169 698.844 145.726 cv
703.614 150.978 711.646 148.9 715.2 143.618 cv
715.836 142.673 716.316 141.659 716.867 140.677 cv
718.643 140.135 720.465 139.474 722.456 138.562 cv
728.674 135.713 727.012 128.267 722.688 124.798 cv
cp
.2 .141176 .141176 rgb
f
1006.72 112.458 mo
1004.66 111.356 1002.87 110.878 1001.15 110.773 cv
1000.97 108.023 1000.93 104.895 1000.72 103.878 cv
1000.19 101.348 999.555 99.3744 998.696 97.4399 cv
998.607 89.1054 998.287 80.7616 997.977 72.4887 cv
997.898 70.3666 997.824 68.2709 997.736 66.1864 cv
997.807 65.9809 997.935 65.8407 997.988 65.6142 cv
1000.78 53.7895 1000.85 46.5917 991.57 37.7392 cv
990.12 36.3559 987.205 36.3793 986.251 38.4252 cv
981.112 49.455 981.28 60.4609 981.1 72.4887 cv
980.874 87.5424 980.528 102.787 981.832 117.784 cv
982.068 120.506 983.378 122.491 985.135 123.806 cv
986.021 125.655 987.1 127.38 988.649 128.755 cv
990.669 130.546 993.57 131.819 996.369 131.457 cv
1005.69 136.45 1020.45 119.822 1006.72 112.458 cv
cp
f
621.925 102.136 mo
621.431 102.136 621.431 102.902 621.925 102.902 cv
622.418 102.902 622.418 102.136 621.925 102.136 cv
cp
f
629.582 98.3071 mo
629.089 98.3071 629.089 99.0737 629.582 99.0737 cv
630.075 99.0737 630.075 98.3071 629.582 98.3071 cv
cp
f
660.201 99.2211 mo
659.936 98.5644 659.635 97.9238 659.297 97.3022 cv
654.219 87.3012 638.526 98.7831 647.034 106.763 cv
647.533 107.26 648.06 107.726 648.616 108.161 cv
655.247 113.684 663.566 106.937 660.201 99.2211 cv
cp
f
678.72 93.6742 mo
671.28 93.6742 667.628 99.5356 667.73 105.314 cv
666.853 106.038 666.1 107.012 665.698 108.47 cv
664.04 114.491 670.104 116.976 674.271 115.61 cv
675.569 116.139 677.035 116.468 678.72 116.468 cv
693.386 116.468 693.41 93.6742 678.72 93.6742 cv
cp
f
523.014 94.5624 mo
517.701 94.5624 517.691 102.818 523.014 102.818 cv
528.325 102.818 528.335 94.5624 523.014 94.5624 cv
cp
f
427.293 83.8632 mo
417.244 83.8632 417.228 99.4775 427.293 99.4775 cv
437.34 99.4775 437.355 83.8632 427.293 83.8632 cv
cp
f
395.597 104.589 mo
395.458 104.288 395.32 103.988 395.182 103.688 cv
392.833 98.6005 385.447 102.346 386.525 107.336 cv
386.597 107.664 386.667 107.993 386.739 108.322 cv
388.146 114.832 398.7 111.312 395.597 104.589 cv
cp
f
358.374 91.7602 mo
343.706 91.7602 343.683 114.554 358.374 114.554 cv
373.039 114.554 373.063 91.7602 358.374 91.7602 cv
cp
f
266.482 95.9579 mo
258.858 95.9579 258.847 107.804 266.482 107.804 cv
274.102 107.804 274.115 95.9579 266.482 95.9579 cv
cp
f
225.64 105.965 mo
225.146 105.965 225.146 106.731 225.64 106.731 cv
226.133 106.731 226.133 105.965 225.64 105.965 cv
cp
f
221.811 122.557 mo
221.317 122.557 221.317 123.323 221.811 123.323 cv
222.304 123.323 222.304 122.557 221.811 122.557 cv
cp
f
179.056 134.681 mo
178.562 134.681 178.562 135.448 179.056 135.448 cv
179.548 135.448 179.549 134.681 179.056 134.681 cv
cp
f
121.936 120.892 mo
117.751 106.913 101.987 102.622 89.271 106.992 cv
76.2138 111.479 66.5634 123.561 58.9712 134.326 cv
49.5766 147.646 77.9863 157.886 78.1787 139.529 cv
78.2295 134.791 87.0888 130.731 90.7104 129.299 cv
97.0034 126.809 99.1572 127.14 103.478 131.637 cv
111.07 139.537 125.091 131.434 121.936 120.892 cv
cp
f
780.772 384.272 mo
762.439 383.422 740.699 384.737 722.887 380.219 cv
709.081 376.716 697.561 373.906 692.686 356.636 cv
690.817 350.017 692.152 340.276 692.537 333.457 cv
694.678 295.666 709.455 260.953 732.648 231.901 cv
733.576 232.124 734.537 232.251 735.556 232.141 cv
740.636 231.591 745.717 231.041 750.796 230.493 cv
751.801 230.384 752.789 230.139 753.758 229.834 cv
827.557 231.601 910.029 230.371 981.904 214.848 cv
1020.16 258.021 1029.47 313.894 1034.98 369.539 cv
950.905 382.931 865.845 388.21 780.772 384.272 cv
cp
807.281 29.141 mo
808.717 29.1972 810.156 29.2065 811.591 29.2831 cv
813.454 29.3842 815.079 29.102 816.472 28.5375 cv
833.116 27.4233 849.763 26.4389 866.397 25.9125 cv
898.592 24.8954 930.018 32.3193 961.383 25.8398 cv
962.321 42.8227 963.515 59.7748 964.938 76.6996 cv
964.917 76.7382 964.907 76.7865 964.886 76.8261 cv
965.1 77.9926 965.233 79.2099 965.243 80.5033 cv
965.305 89.2343 965.617 97.3193 965.065 105.324 cv
965.443 105.236 965.822 105.173 966.199 105.084 cv
969.47 134.273 972.742 163.462 976.013 192.652 cv
904.76 208.048 821.227 208.648 748.346 206.748 cv
748.395 206.342 748.499 205.973 748.508 205.537 cv
749.085 177.849 750.132 150.191 747.622 122.792 cv
747.878 122.806 748.14 122.792 748.396 122.804 cv
747.214 115.511 746.95 107.845 746.993 99.8393 cv
746.622 99.8232 746.242 99.8437 745.872 99.8251 cv
744.623 77.7699 742.056 56.0702 738.162 34.3198 cv
761.175 32.6655 784.226 30.7734 807.281 29.141 cv
cp
986.972 26.8032 mo
992.492 26.3593 1000.74 24.8271 1007.58 24.749 cv
1010.9 42.7504 1008.17 65.7377 1008.58 83.0068 cv
1008.8 92.0107 1009.95 102.248 1009.13 111.218 cv
1007.85 125.262 1003.44 125.777 992.71 125.924 cv
991.475 114.795 990.306 103.661 989.268 92.5126 cv
989.802 91.1469 990.151 89.6362 990.029 87.8061 cv
988.684 67.4662 987.338 47.1254 985.993 26.7846 cv
986.324 26.7826 986.623 26.8315 986.972 26.8032 cv
cp
268.377 127.538 mo
264.313 127.562 261.406 129.346 259.574 131.877 cv
229.38 133.509 205.798 146.076 181.137 163.351 cv
152.17 183.639 107.467 214.047 69.5356 199.378 cv
50.7807 192.125 42.7358 160.079 35.7905 143.293 cv
25.8164 119.189 24.3803 105.722 50.831 94.4408 cv
86.6982 79.1415 133.347 75.7343 171.798 70.3881 cv
172.791 70.2499 173.67 70.0029 174.474 69.6918 cv
265.859 58.623 357.486 47.8544 449.63 46.6401 cv
536.542 45.495 623.506 54.6127 708.772 33.644 cv
709.452 33.7573 710.205 33.7646 710.964 33.7582 cv
716.942 68.1318 717.872 103.221 719.359 138.265 cv
569.153 130.284 418.8 126.672 268.377 127.538 cv
cp
1002.14 203.415 mo
1002.49 201.937 1002.59 200.327 1002.32 198.589 cv
999.729 181.992 997.44 165.375 995.375 148.738 cv
1005.87 148.37 1018.31 147.437 1024.93 142.998 cv
1033.4 137.317 1032.16 130.232 1032.23 120.622 cv
1032.37 101.83 1031.62 82.9843 1031.05 64.2035 cv
1030.55 47.85 1032.91 26.6811 1027.87 11.1039 cv
1026.68 7.4262 1023.82 3.9218 1019.85 3.08147 cv
1009.28 .846606 997.629 2.97307 986.972 3.83049 cv
985.109 3.98088 983.486 4.48918 982.094 5.25237 cv
979.916 .85686 974.813 -.6573 970.082 .253833 cv
968.993 .279223 967.859 .413501 966.64 .810962 cv
930.883 12.4389 890.518 1.50725 853.397 3.61272 cv
839.478 4.40129 825.567 5.37932 811.653 6.31975 cv
811.632 6.31877 811.612 6.31194 811.591 6.31047 cv
778.79 4.54729 745.604 8.47161 712.885 10.728 cv
711.009 10.1073 708.851 9.98967 706.454 10.6044 cv
617.417 33.456 525.706 21.7714 434.943 23.9418 cv
344.265 26.1108 254.117 37.0571 164.161 47.9638 cv
162.834 48.1244 161.667 48.5136 160.581 48.996 cv
130.586 53.2885 100.819 58.5912 71.3173 65.5795 cv
52.3266 70.078 25.7788 72.1513 10.5122 85.8324 cv
-17.4097 110.855 17.9101 159.787 28.7817 185.997 cv
34.6201 200.076 38.7876 213.75 53.9458 219.718 cv
71.1977 226.509 98.667 224.135 116.239 221.253 cv
170.901 212.289 204.728 157.205 260.767 154.74 cv
264.588 154.571 267.401 152.885 269.247 150.513 cv
419.764 149.663 570.214 153.282 720.516 161.29 cv
720.777 165.73 721.138 170.158 721.475 174.588 cv
721.475 205.259 li
721.475 206.526 721.695 207.644 722.003 208.694 cv
694.486 239.841 676.311 277.072 670.985 318.847 cv
667.894 343.086 661.972 390.142 690.978 399.727 cv
713.474 407.162 742.722 405.117 766.283 406.488 cv
800.078 408.453 833.959 409.02 867.799 408.194 cv
926.921 406.749 985.662 400.685 1044.02 391.254 cv
1045.42 391.027 1046.58 390.57 1047.61 390.015 cv
1053.64 390.384 1059.58 386.786 1058.87 379.078 cv
1053 315.906 1043.46 253.066 1002.14 203.415 cv
cp
.129412 .12549 .129412 rgb
f
100.997 142.695 mo
99.7573 145.786 96.6782 146.91 93.3071 146.353 cv
92.0693 146.149 91.0078 145.686 90.0429 145.063 cv
91.6621 142.909 92.3593 140.036 92.2285 137.263 cv
92.3759 137.061 92.5463 136.907 92.6884 136.69 cv
93.7148 135.113 97.1396 134.417 99.1196 135.375 cv
100.449 136.018 100.606 136.212 101.141 137.913 cv
101.601 139.376 101.505 141.428 100.997 142.695 cv
cp
111.842 116.217 mo
98.684 107.986 81.1811 112.321 72.8505 125.095 cv
71.5903 127.027 71.0727 128.924 71.0166 130.726 cv
66.498 135.044 65.0376 141.999 66.1762 148.146 cv
67.5356 155.498 72.5327 161.649 78.9995 165.272 cv
92.582 172.884 111.457 169.788 119.866 156.011 cv
127.728 143.127 125.134 124.531 111.842 116.217 cv
cp
f
974.416 156.099 mo
974.396 153.768 974.377 151.435 974.357 149.103 cv
974.346 147.759 974.106 146.579 973.773 145.476 cv
972.499 125.47 970.291 105.501 968.016 85.5922 cv
967.296 79.2826 962.714 75.7489 957.917 75.1283 cv
955.269 65.0312 940.616 64.6786 939 75.3349 cv
935.244 75.4091 931.801 77.7431 931.014 82.2514 cv
928.334 82.3056 925.713 83.2983 923.844 85.1943 cv
921.221 81.4184 916.057 80.2509 911.879 81.7343 cv
911.814 81.1137 911.765 80.4911 911.699 79.8705 cv
910.468 68.1288 894.8 68.1933 893.473 79.8705 cv
893.241 81.9037 892.92 83.9023 892.661 85.9252 cv
892.654 85.4613 892.618 85.0053 892.611 84.54 cv
892.437 72.143 874.095 71.6391 872.654 83.0663 cv
866.906 82.8984 861.025 86.6337 860.555 94.3139 cv
860.518 94.9213 860.468 95.5253 860.43 96.1327 cv
857.182 94.4736 853.173 94.4736 850.061 96.2153 cv
846.469 84.1977 826.795 85.2914 826.379 99.6738 cv
826.267 103.527 825.979 107.297 825.7 111.072 cv
825.689 106.353 825.708 102.187 825.539 99.2699 cv
824.968 89.4565 815.51 86.082 808.799 89.1108 cv
808.275 75.6059 789.811 76.1996 787.195 88.5068 cv
780.2 86.4823 771.146 90.3354 770.492 99.9281 cv
770.402 101.261 770.373 102.557 770.308 103.874 cv
770.301 103.871 770.296 103.865 770.288 103.863 cv
770.257 102.833 770.262 101.846 770.221 100.803 cv
769.92 92.9955 758.463 90.309 755.606 97.3993 cv
751.458 96.1152 746.74 97.4301 745.776 102.82 cv
743.116 117.713 743.559 128.036 748.371 142.349 cv
749.295 145.094 751.218 146.764 753.407 147.639 cv
753.634 148.17 753.784 148.651 754.021 149.191 cv
755.641 152.873 759.103 154.05 762.49 153.555 cv
762.635 154.194 762.739 154.812 762.891 155.454 cv
763.75 159.12 766.009 161.175 768.664 162.139 cv
770.469 165.723 774.231 167.658 778.18 167.782 cv
778.376 168.436 778.538 169.079 778.742 169.735 cv
782.367 181.387 795.521 181.196 801.384 173.382 cv
806.561 174.905 812.825 172.914 815.238 167.776 cv
817.294 170.115 819.681 172.171 822.471 173.859 cv
826.904 176.542 832.199 175.686 835.905 172.711 cv
835.995 173.091 836.058 173.467 836.147 173.847 cv
838.796 184.88 855.356 185.597 859.318 175.476 cv
865.027 177.776 872.457 175.835 874.516 169.369 cv
878.298 170.479 882.843 169.488 886.284 166.921 cv
892.3 169.376 900.818 165.14 901.65 157.27 cv
901.858 155.305 902.065 153.359 902.271 151.399 cv
906.421 153.533 911.899 152.571 915.171 148.299 cv
920.123 153.15 929.321 151.019 932.249 143.965 cv
932.666 150.225 933.158 156.488 933.764 162.764 cv
934.289 168.205 938.18 171.041 942.223 171.39 cv
946.518 180.811 962.21 179.604 963.195 167.546 cv
968.951 167.649 974.482 163.939 974.416 156.099 cv
cp
.298039 .298039 .298039 rgb
f
821.024 342.33 mo
816.751 342.33 816.745 348.971 821.024 348.971 cv
825.297 348.971 825.305 342.33 821.024 342.33 cv
cp
.34902 .34902 .34902 rgb
f
828.682 316.386 mo
814.016 316.386 813.991 339.179 828.682 339.179 cv
843.349 339.179 843.373 316.386 828.682 316.386 cv
cp
f
832.511 355.478 mo
832.018 355.478 832.017 356.244 832.511 356.244 cv
833.003 356.244 833.004 355.478 832.511 355.478 cv
cp
f
896.325 341.382 mo
887.548 341.382 887.533 355.022 896.325 355.022 cv
905.102 355.022 905.116 341.382 896.325 341.382 cv
cp
f
889.1 318.598 mo
889.03 318.25 888.96 317.903 888.89 317.556 cv
888.223 314.246 884.368 313.397 881.745 314.65 cv
881.385 314.822 881.023 314.994 880.663 315.165 cv
876.348 317.226 877.393 323.706 881.349 325.373 cv
885.862 327.275 890.012 323.118 889.1 318.598 cv
cp
f
910.734 314.567 mo
910.516 314.233 910.297 313.898 910.079 313.563 cv
907.791 310.062 902.539 309.761 900.315 313.563 cv
898.252 317.094 900.841 322.335 905.198 322.071 cv
905.623 322.046 906.048 322.019 906.473 321.993 cv
909.99 321.78 912.907 317.892 910.734 314.567 cv
cp
f
934.613 334.254 mo
919.946 334.254 919.923 357.047 934.613 357.047 cv
949.279 357.047 949.304 334.254 934.613 334.254 cv
cp
f
963.437 342.134 mo
962.346 341.84 960.794 342.286 959.836 341.763 cv
953.783 338.458 950.395 349.188 957.662 349.789 cv
960.997 350.065 965.412 348.404 965.216 344.471 cv
965.163 343.405 964.501 342.42 963.437 342.134 cv
cp
f
978.594 329.353 mo
975.457 328.559 973.501 331.934 972.506 334.261 cv
969.36 341.627 980.849 344.484 981.536 336.706 cv
981.753 334.259 981.73 330.148 978.594 329.353 cv
cp
f
989.655 293.336 mo
989.804 291.557 987.818 290.317 986.247 290.74 cv
985.983 290.709 985.742 290.615 985.523 290.455 cv
982.047 288.425 979.415 290.955 978.87 293.799 cv
977.257 292.785 975.296 292.137 972.901 292.137 cv
958.235 292.137 958.211 314.93 972.901 314.93 cv
982.166 314.93 985.571 305.841 983.132 299.142 cv
983.145 299.142 983.153 299.149 983.168 299.151 cv
986.853 299.331 989.356 296.913 989.655 293.336 cv
cp
f
1000.12 270.457 mo
999.168 267.31 995.147 266.135 992.765 268.517 cv
990.383 270.898 991.559 274.92 994.705 275.866 cv
995.885 276.221 996.8 276.223 998.01 276.017 cv
999.007 275.849 1000.1 274.758 1000.27 273.761 cv
1000.47 272.552 1000.47 271.637 1000.12 270.457 cv
cp
f
1008.64 310.808 mo
1008.14 310.808 1008.14 311.574 1008.64 311.574 cv
1009.13 311.574 1009.13 310.808 1008.64 310.808 cv
cp
f
1008.64 320.962 mo
999.86 320.962 999.847 334.602 1008.64 334.602 cv
1017.41 334.602 1017.43 320.962 1008.64 320.962 cv
cp
f
741.755 345.34 mo
731.592 345.34 731.575 361.134 741.755 361.134 cv
751.918 361.134 751.935 345.34 741.755 345.34 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.1
%%For: (Igor Lyubchak) ()
%%Title: (sword.eps)
%%CreationDate: 2/20/2018 11:03 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6BocN@OX9k;JGKfH7=[4uQ$n()f/u/<A'#cT8?IJ94ju`-:nUpi&uSlCJ]0+Hk1>ZbA*/7=7RWE]7D0/ZRES?c]D,iQDX6hb
%r+,iuLDO;^Hh#A[jhL_&(TQBk4GC(^1!4F[Qd7nna\VojZesVhIt$3JFKXQ]I'XNREJM.4+][BBPMF$%O"[.)nEp14f3c1:q=O[`
%mgh(D^O5_Q06W,c4F+4/ooj=TP:+!"h`lVio$=rHo-[?6=mij!Abt][g%5*QQ`n,Onp2\0B4^jq2ugeiEgJlg^U(Y%ouh9MlHB(V
%YGHO8Cg?t'hu;G\I\kQ"r:HV1HiM?smpEhUo(q%_(]X)>\FfK]=WdV(rHD'0"*rNPG#$1UjhopErf9j(GlCn(\Qc8#?XNhLLI_8,
%]AJ!kRdYN'Q5=i'^0#AYlDWq.k77OCb:\:^msZ'r;;^ua(Iu-UlNMRe`?ZOP]>7dc!&ZuP,;Feb]DqT:k>,FAEtXs`2iX"<K"kH!
%_QHl2)eD3X;f'WOo<mt7Spe5-^?lmmXV"PVhRKE8/aLX<s7ks[cbJ-2\,.O[hnQH'^4#\Nb@giZ-IOKFaqLQ)`MMFeD"jj2If%%S
%qcEgein8)beBGM$e+Dsm?f+)7)qQIn4b(>*T>lE]gD.JMo'2_Af0[A.TDsFEqSfTirNj9=iS.^&q9(p7db.9BoA0A'hnAsVD"Gt_
%XZ+GOr%>O#;i?U^Eg)1/A`T>=I7g9]^[Ei<`7s>B/3KoHK59HS+kPVaHM5Ui(VaW,ms\T$2bO(]=3nTe$+]h:ec5F.RlYu,rb[X\
%+aEt^r^H:0o3WMe4Y;NPk1<to4+?q%+27]kM^Qh)KYHl;4<KR:bIVq<I.I,jN)#:*B'WfIqnKeXs'@loj=:B2T/6Ib%K@L[]f$#k
%$iuuTJ58PZ:[d^r]AAi00$>,^jc%B'`aq0fh=ZQ3L20u12,1f0HY^-m2-bmnn38Ne*,sTiJ6NNhHu_4)R_(Y/H?Y]3Dnip%"a>0:
%P;ZU6X=_kElDM/"Iia3sNZYb>rPJTE%/oJ)e^)Skr/YX?.K%N+pYjJgd4bEY^X+G-O%8GBl(cWTr6N+;(K@/:GcQk([K)YfC\T"'
%gte[,cOq2#,HYIT6\YR5<pdSD5b"sZe+^3=IB*,iqM!,>8,SE<ksT:4oeW'sr.<,=a$.s51jUtSM#Zu]3iI.Ns/kgi_Z.+SIDl.H
%R7](m\Cq"sZdSsph^PO#SMj?c*gc-Los)p$CBrL:D481ATA?D>0BliR"s*%eM@T3#mC@\)52q&sVR2@IlF?'&p`J+\K5u=:o"L9/
%q",S!l(+>+d<)s0j-=/>./G.PF/u(>mF/>l2s]D,nU4kms0VU3XM8*aY7K"+oue8W$WSW[k?\Ba+*#=S-09:BlTK98?bPbdl[uUJ
%"/YY(#$+@Wm41'eQ+tUf+7"&-d&'!s]R:f`hV?uKrapS_hWin50DmY-l0QT?rFl//?SUj'lVIJBgJcP#or!8(U49@2orD-l]@QNG
%C1"HZqU,.<^\3$QHi9pNEr5C*<U3HZ3h>p3or!6jj3.3[jq.RYr9E2<0E$_kqKRh\m[3_=pMl&![2eiYJ!FO7pt"@"B;gqRlr<OA
%_BnaQR>BUD>ObQQ,k$X*&O,Y5^/<tSEP^O-s-DF:a3u?`:HUO'4BB5eZMs_QhgWUXQLtltTJmE6=<DbdIJ3BDJ*Z.aNHXRRp:gOO
%;E-?c=Qd/pInT6kbC4lO%`suSq'>S'W,p>#d4nCd0D=eq\(t&k^n''@[-8L2HB5eTAa"G)I>N;EP/h=qW5r=_,q8eIkVN1jD_4!;
%nN34IY"baAA)8;te['ENQTocm=uB[P(EFd."5cGdHdK=3$DW)d1gef?_-cn_`m;n3aNo*mmeFCUm>=Wn_bFI'Fmdj>oUg.cI_=Q^
%ad_&*\0&3PV'Bk`Zc0UW>OOIHV,,T]e=KBMc!?q^/t'o1IJgQ0X1)Ed+)g$pc"#gW\pVmhN[8f;4VJ=:Wq0Ou*d9f)9@?DD*-GN2
%OU$SIT:!*1l]LeA^$ZPlp?6V(mh<O/PcF]10BZ:]FRC(%e@q!CHWS?/NB`o$Z8VRMZh9eepX$soYNs]_dqU--p0#C52/XC"ctD-'
%=7^TQY>&38B"aLYT8-*)3q(-N%eF>np4rOKhjq6K'=H*^gZb7K-Q+6"9B`0Tht;?Ns(`XB.<%sc+1eGDB3_moiHh8JZgZLXHsPLu
%mIP4;[RG'?jRVbTCEAJU^</*=aUt!VjdSt_F^!rW2J1K(^,?>PjD,dC`kQrQ0?9mW^rC*WlC0cg_r&&^o1TXBCq#)QGD!V[[JoHC
%m5s\,D=%(G>2Q^DQ\PdIJ&\1o:(WKSqfRMK?i">uYiWAuCR`ht#d0-'eXo>&QX\#T<kqk/%@sZ`lg4/hI6S['1/gQD*L&7D9Nh+T
%M=-^QOe,LfG/[aPfH0e#$7BceIX!]X'(m3r6W[#D21SQX`0n8ObZK@4fd0#l:UOjtpOcI09HNo6hs)=0pC9?\nSd^BGl,_af>3?.
%W2Nd'fq>far%?lr?07p;rdjC+6@e>RED,W`n,;FVhTnWRoCcGdakPo?[iaE"rk:<a[;Y;V=)q7W<6E3sUML.eR6\LRF'fj7KC0f[
%VZ)UiX!3@O?"XGBd6nZ&M7,b8T_ZXRp,_JR=jT=7h;*p:VR2ok$nk8OHX4-s$YYVmF5o^*?AIrcD,>Xq1\/%U[:C<HH&nMmMsUR%
%:9.;.%X3+DcbD-*n"bTh:l=`?TD/6.fK,W@<lFa)ej\#bm8D,2Ih$)0$Yt6m;O_$rolp?mi?U$*P[3uc+0/l)j_%PDLE^8T.GfM8
%fX9"JkHhZ&T1,ZKjGI/aWH4'pqY+_9ZNY\[qaaKs^$Vf:C\VMVdO>"\gfPD54#hGqK_ElBCqacCq:(8-?2M0Iq/9ioSF(aV*OhXh
%KuSe4;52q@nCl301S@Jtk8e'3+0kPf<Q=ihL,I>IN6fM$M`ObK>n)U<Do7QkX@V6.am-=Im8'nZfne2'IcirWSPECE#PV6?gF"4X
%R2KH5HT&V3I?lHaf2X2"Hmk?<?%;mNNODV&T/639@7]MLNLumBm=S5)h`Ets_l))=g6q!,hmVLdd.O9\b@]jg.<\J%<n:^ASbot#
%Xcg;->&/$Qpj`a_Z"3@Rc1&.,mHFhYr\q<CH%f$WpEZ9'bHqf?4H3k7VWJr/5HfK21J_=9L?%51T=@['J%)nj#39n7l:VDRcq`gM
%f3,RGDN&af>I2qTlP*g69lbZTHs+M&Y=/!r%#m-Rh:OdbXt0A&9pg(`l,PAI9msci@am>UFI0ODk>%&^mE0>h,$pA[)%eOX2pp;g
%dRL?T@_6KU9lV3;@CNeU]4`#Q4fb5>[u.XjK3#GoeY%R=d;khEhI:@9F5K'!4?WKWDnir<>]%l2]cI")1(UDmAp5)Le[.M9NSXrI
%H?(N/ldT@uAsFX^"7h3Cb.@FdgL.'Qo<Ys3D?8eKc/5jg_Bc1g?&[%pZJBX<V9d*lNNV[9gDs@^mWbZL)t]sGm>X=Rl*'urP)&J)
%b)1>,bsM3%0Kr&EX4l<`c5>Rr*EE^,lD\!#b)FP:W;S(0nXPi9S6gT&GSp>NnFBdO1Ed`-@qEB!p%%q%DsYsG%t=66rTbQ>qclL=
%=Rjr!^Q]\/]g+^*kF_^dITF5[iqX,UiSV=pq87EkI.>7DT7?R`gTOu`iI:OYn"7=Cq<HZ5^AiNRRm6g(q;Z,"T/+Q+pUaL&T#rkM
%mr?UsP@reOln&a\HiE*VrD#SBHhh=Sq3_&?pO@SdlJ(t4>'kScj8JS9hb=X4lQ5Z90:kCRn`85\+,gI(lIh6haV,PiooZcRrq/K>
%lC%CM^Agr_KhpYbB?u(F"k,u&H.B*i]sr:il^kb8rTBNNrYZCCr:pk^1jo,ak5J`UhtFuAs7uZedm'Bfdq[e;WF%c5rMSKNq>H5T
%^E95DJ$(#T;:iD"o_e4>q=A7V]R'/)T:S4%m9fh]rL\8JHhm7.Gl!]Oa.)5;p^uqAbY,_KbI;tGq>Aq?hi?=42.+Go4F?r&rl`'(
%s8)_7e;%_J="f$o6HA8p(O!W?#B!n^epH8Qp&DUA)g>S7PC3-Ikq-7+jiC\Ra7c:u*io9apm++cVlu`7idH>C^%%OEs859P_69I/
%i@PEP_u.Pf0><`qJ,.!gfD"UbI/3/RLu[??q55Uth/h]M/&,=2RD+h)D;MOHrpr);AM3EE0BPq,ma[N)T?2!H$e]!\HnDt]bM>J`
%]Ec3d^OIE1\R*$TG%%l[qX`&4l1<5eS)eAV!Pc2#$A)e/r`G\kr$>L)k&QYaXZl<nZo!mQipJ1$m9b:;LJ3]\ouA1#=!+a6ce.n\
%m-G$?^Iubq/IS/&nCt-1n1jh/5H#mmUGO6EE'$6U1UInoj%?SIkT1kb07J0=h=LNYg&:'`P8E+ah`S*q'&Ttth_KWg.>torhc^EE
%j#?s7@rN][>^]-gTqs=N2g*:=Im<u"2W#i1nM]2!>:3ur-Rm*EDmp,tXY%$3@LLF>-Y99THE?un+4O20NR_*3m`Igf.mfOJQWQRo
%q+f(0b!*unEb03-at\\<V7=0KOgLsTdS\.1mA7n);GBSP8l5r'VrZj.PZ'\8Of$,6jV9N1Jf(<Y\AT]KKp.a23(T2"KGLSP''+bV
%8ES(<[gOrR@I\Om-RhQ8OKt3nl_TeO%=Vu$o($H9(_u;2/1Br3SYR7%lt+!+1+:Rd+c.Bh]-J[`Gn"Y1DRksO>!tka%e@;?DP]1U
%.ODEs-!CWOMU+Nas#<*g0K4l]I^7(b^\_#(0DdhY><26N"H&G9#PnBBj`\D*n(W9FbCo;APdJc(L4,/8+[LbLUn"5#Uu68:$rL"[
%.7XXP6S5Z4l=kH?N^>r8.C]q",%NtH!Y$RnU%;*HN^?AD.=9Ll/`T/dkosEpRP9.V>s_nkYdt+*SOA/m$)JZ=Z%m?MV9*qHs,6e^
%5WBkqTg+V&-qd^KBM1[K-RhZI#Pm5Oq1C;Xct+!8"Dr>I"FW>+cT@muHjcM=fi^N0f3=j1KKc[Mh0qAp7Hc60jmCkq#UThR2OU^H
%5[m!A@69.;OHZc:(o:Fgmc,`J.EI+?ZGMXd,lJ,!lQW*CaEKC;6.Tn<Yri@r3a'uN0tK,-G;<Mkk-#%\3&VXIRHYhM?\K+&\&[5b
%Tb/pl;hU$GKr.U3HVTl7PbBQ^\VRs`$Mh;DO?q*b!EXa%j6^i94<EU@ZCJc\Z/egqp2bRAS;pM>lV<b-(C#E3+B&m#Bm9HR*:HXt
%*'$(g-O<,XmXU*Y9MpTq8_9c9,dp1mHVYhJOrX#YKo?MS+HUCQkQGGoq.E%>ppua,fTXC;A=%LBeRY;Db9<%JK#S/*qkg(32Io<\
%9QqI9C$+8lT`kmmi<$qaXEXa^kFP<]bP$T8c/HWn%lVMn+>_*4`aI[2e%!@+(j7@+_qb>/)GG[#3gkXL-.u7*,,>T[P"Z't3+C[(
%(srLl:ACUN*&9[oI5sHX+;lMJ>,DUc>,M]@[G3c_<oM&.b%0>V37@6ImCmsYS]ZUnJB?:q!+>;0+C9iXKen=QdLm<d^A&>PjVC]b
%bRHq!JWl)Q^dWPp/`G7<Y)Wl.$QBI9EN*Hi([r9I!)1n6N8[#;E<;,NFU//%M-rQ0I>!O_0?27qDC=IYA4(]]J4HoC'0E:[2q+?p
%T.m`Bk18e#;rC?%SI0!j%&Cd,M.E]`7%q_j)N>dC7J]<41JN%mSE\HMZd4Y._Ehkp<Z[)$Rq5]s:lcDR>(ibJ67`A8Z<MTkQ*+a;
%qC!&7NG.9_K.U\RRnMFme0.a)\ZIi/.OTK\2O%E`-UkKX'13Q"!JHPeM':M>AhaGCLU:#M$_,2=$qB?UO^sCQ2iPIR*+WZc8RQV\
%g`1EO=L]Xs\Ja1C)^n7t)?PekE,m_MjOV849X,iK2*0Es+d*h!@eUR.Wei!`!f9j,6pqIi,^U1p+H.QZ73%!m'gG[iW"_=VM&af/
%NMA%K#T=/a+D5=3po>OIlZ1pdMh+RD;^$,3A\_Rf!O%@Z+8?rn\j,*ra[po<+/_R+@G33a!JQ-d'&a]p9q$oa,F(neP+jUS(,?]J
%)(r=IpUgGG'nCdYn`%["pL!C'Ypt\^e:=Umo(^_"JM)e(OUmUoXX5Ru+FMguN"C\m5tX*B=,*4VKts,ggMt:A=ibV:,^L)K_$TWY
%+_+q16I\NJ%%^-/XEH7DL9f9!#21IeOBi4""Ik?\NeK$(:Nh!JgTN0Z^A[?ZgGdu7e*U@W103#[*'"a:gi9PX=^&i-S8Gp]k`jUH
%ZVu%F%'L)J[kb[[F/268)eF\n)6W(3jfTD9hG\FGM\(ER.,eot&!XFQA>9[#r*Ura(O>"-T@NZdo#/RUh&]MUM3#79n`A45+1bq0
%D4L*[5cpf&Q':^&7J,:V;OMQk]kgO'/Y6-:+a5rf[WX#;>`c'?PJ[Yr&L'FXQO2/6$AC[$H7%K7[&Xo)p(ZR_j>Y5$&p[4uf:f,i
%RroOt*!N^pI9*Uh5=@7AaAa,u_Up,i;&'W`[5UtL\>fWXMKN>YQnYshWECM4V+nh[XU/YhLJa'f0C(ro(5d"Q:at2<iB6e:[=gK'
%GZN6]+a9^kkb1lq?0YVSM=hl^HZP;s^?(5r/WYA?UVGlH+8P4e`tR@M;'p`iL!67H_PZ9=Bk:(h,1<.RP9`J:PpIij25D#817a6U
%M/l7ce,mV:;-AiW'IS>R.\SY0YcE<cF-OsKB!-0tNU^CkhW^!"KY^[<_uO"B2`&[Jjj]R._-</9W!'IG*`amL<'T=iAYT76+Wkhj
%F3.q;3R*<=W#W5(3a9=>`dt:W1X9Jg_8gPlLWdW8jGB5YlcnO"T([?1pKlt1'E>J3phsVkF]Quu&6L,6Y"W`1r9RIK!SI5:Gd5?i
%jDE;S>GJsk+;0lY3%l6]1/fK[3t/[ARq@tOdm7m:P*9Qk?u/tj*>Zb*icftO%MBHkJ/Z;m-pImAobIlb:^CIk\ta7<Sg\sr>cpnE
%CG]Ra]?u98Y1C"h6K*Zb7bRj-F/_R'4K=d:eA+RVe5iMqV/qU0`qu9L#%j=VUj5hl&t4?r[;&aKjtpj=>Q*Yg\t-Q''#rPn8i^01
%X(UO/natBp[`$3#H/bU%UB1-e7@s;<C]A=!@co.q<kd>3Am"KL?+=sR]@0WS^<'hTZ39"RmW]EYJOq[?j3c<iH9CP."O/cR3Z:4k
%qJ=Z`1Q@t[H,AJGF!lp;C?ebckE3J620,^RdgV`cj//5&7AB"cc,Z20-fZOJS$R+`baY5S`hfFWc>M]B1T)-Pe^US<:,R7`bmR`i
%oRtmrIBcY_Z,38D!-RFhm=*``q.B@XLYaN80HY-d5:p57Df&I0/)c1[7+S,+<S?g$]7p&[94(lYbgKWg(TH[JQ=i+g]\.\GCPbsr
%Rr\Miefmm052pF!G7Tqe)p;*%O5m"YiA!cmpo*L"0P=Z?o#+%*qgZp*&Y])YUO;&LT/at@Nq.1]pkbbni[CEYasW5?nXaD6AV;7'
%s'5Tui?'gETu[kKnDDCj=&4*:/iNb6(Knq_!RPl[=+7[mWpk#"#QHoJMd8TX^`pF.]]-$(?^]^ZJ2;BmhIJR!.U;kPhc&SRalf4%
%DLue<F3jYprLQaY_5R.uGQRV)4Fu5i(X!l++,6/sl\p]5^:!fd7^T1M"A.i8_O*.>@`tN^VV'u$pWmb!n(]"Fj%0Docu8^XN$q>U
%NC6`WB-IqAi]nrua">94+XNJi>U@ORnN77_.3@GAI$X-#quo.u_HlHd>6O=H,OX[[(Er=!-e*!$rPs7sDrZWHpZ%:j7p$ld?=+gQ
%J$qU#!B69Uh]j.E;2Dd2bR:niUDk`*L2LmK&If_>]1'Yq"!-B??U^E+eYl-)0&n#'TNgZpR[mN:L0V6iNqlWiF&\F`TK9qA73Tn(
%GaiEWL&6]ZmC%s-Rpt>6(<:/%K7Sd1@WAFeZ[.38Q@UY,XHH&;WlD!;iUh"UVeUVE2E%sG>\]<n4j!7X0fE%l;gX14YR"7IW6S8?
%c"t73V`!gJ.sDo<qY=d%7>f2mVdLg2P")+L`j0JT]dQUHW3NLHg";"^QK+6>?h2-N?[!$GLEs46Lf/1uk9!td;YR96'//W7XF,?R
%]AC)<EiIe5cDG@S#/N:a4BE=tAjD@\q]-Qc]bpK@rmU(?')'C<f+S:u42"PF3RZ;s2Za#dEMPaCdV3YHNPdA3</5JF-Uq>7:n9EE
%"?!>c6NfR$$mO`0_5j4I*\99@j.rH]cHU3TCQ>:[-MPD$%QBT_]t9aQ%W#bfVSE<<FTG]caUhhkg,B*/-jQe*(8pqSPW:_jG)F1%
%F=32i_]FlrA+FtGIcl1&!RlkPf2>+A4nU-Yl-I9F2)CN0D&Jjbk+HV];(8,eFpqGEI'BEUPUoVSO"TNdWTQ^AGZ"3idb\<kM3#13
%?-7Zb-h`4]j^XdHDR\aS`r$o:jsA?<Yr1?6U\oIts2j9tfB@\'p'Z)3U\c,HgV4Yn_N]@k=qeKMR[1V+q2\)HCPJ\9XJBk9AlKCg
%DJN962_&s6;B@0]XZ>X_PU(X'2'm)K8_8nl`QGaUBJLLJ'/*'LX0Lk3j3X1pBJ)+G4jHmq5_P88gEKEUX)[g[V-GNM#N)`GlU@E?
%^aJSTr\He/b`I77D7JG6jY_6A]&Q%n;aia.i&@Q&7->dNOcY?o=\-V"dL;pUj#`+V&t46uF,qmDM!;!Vf$QS?*.@h>7FolBi(CJJ
%]VD'De8p[3Io6BYR_XVQ0g.Qn8ZJ)Rb.P`cU3`E(=rFoHl-nlZ:%e,(/;I>ejX8f_&!g&*[s5Dpr(WBU$Nl*gS_b!]W+?nSfA;JO
%:ALOP5V69,l9`B,LU(MDXAO?Zfn:;Z1h3(KR7]Xnl)\-;aV2RWiZB`>/VP2AZ%\_HXl]0#*d=0?e(]dCnI\j99DQp3`!rVQC9VXr
%U^Q'8hR1KMc/^u0lbH6G0j>_9T;]":aGliH2"DpE#\9'T#*5Srae>pj@k0s55HGDDnuF"ABiS<GAJSjPr*#I\R@-j=C^GrC+OZ`s
%mFXlC/O601'D^FG]^F.kX-TNV\jP'raD=PjOMrm.0JOqR9,O,>$64RO^]F^:5VHn<S@qlI\\fCR[i1)Pl)eNdi3Nm7gS?,m2EXcE
%\s<JA4_<n6[E;^jeXJ]Db@=.?o[;+(G:9Au'm\eCYBaV<Sel\37GW`a:JZA)nh.(%qAs0#Xp[$T7CEKY&k\LJdrLOH)Fa@t%9t\^
%YBV#CpBd&4/#IB;Qdkqu>u:NOPZFdH6*dPFrG&e!@7nc_.28#gm`s60k+i=a=9s[&.2CUEMJ[r6:Zg@X=L9Nj@S[;-(p?&A::%H$
%iu0?]Y,>:DT2F<)n]l"VqR6MAq.i+?=b(n/=LL#DAYb%b>G^"%Hf&[>Xola1_<oT(CZ%c2%$=-=PeE-b$T+'W+n0Y?U(\\XDCJQf
%o#2Qh$RFlh!Bh]+E)aUraKSYi;J>f"UpM?[O.aB,&NH<e%FE+5jja[kZNpU;d:/er7Y:X?nu"'n&3jTC%uo_%/@fM^HT:ZpHID;I
%6mGJi'?8?j]dW!:CkQkTi\_>H;Fl;LE,NPe&C].GY\5cca2p`SUKKnW-BNA4C^=TM<hYI])3JJO(<jS)=0ZQWaasP!\06[-(a_o4
%7'PDhH5-Os81%rJGh#6_dh&1tOd8u9).rjuN2PjOG?BoI:_1g5l>Re]3:#e2Z]'`p#4CobbELCmKpB3<+Cu`keH8Lb?t<"d2N*Bk
%VIanrATQ$DE6N;'NIfh9)O=/VR$\!3?Zu\bUX1^jdO,P\C5VJA>nao<^BQZCZ.HBSJ2Om?_C^aQXiRC`DDBo&ruhR_JKnk?0G;0J
%Chr_7d"UoO*`(4)'ZL%)k5:e]q!d,4!WTRBn6Z]eBD7#O"f0=S/>6(Q_'61=FCu*.j1:b63;S6,dt5_P6$3k"fn.rA1i:fSA>u\(
%.h)q79H)-T\"%4b?"[<J'MX%K23P+r>gki:h-pRRlQBkr#r(A)[NpPpX!8meV_ob&f8I!kXi95HXA#pN-"EqpE>fHVQP!3rckiil
%CYF'%MFfU9_n'0Wm0Gkk4cD-ib:66.':6ltA?dbLD9Elh3^iQ'jm\#qBN0fnjMqcZqSWth<(tV=QG5jNWW^b>6Y[/(H"7A_AN9(K
%o9N@QWHT>54WtR!ja[g1BMqMMTV<fuh+:q!CQaUu0!P)$FK<M8JRF>?J;(<N9QnO28TZ;o*!q\)rWbk9;@c.8+bCQ--q*\3aH!?q
%Rj(I$Z@Qfo_]Tp5$?(1E!#l];Fs84tpQ3Vj-n4_X^HOgNhtIfa8fA24EeETpN=!*B6I@6d!$WWtUuIR=PskJcOE>ghciP5hUrhn`
%71J<17RB@:"^jnF^q_PLl3sAHn45&ZSOQ$6-a8.:IkKkOFKoYd"!)OP^gp]fRq$Gm1oJ\&4YbRZD[3KQn`E6KR8N-"ETd6bT*lm+
%2kQ?r!)THs+'LD`*ob$m?f,i$$*heMT<_\&qa[$(%BaL*Wt&GX.R[^X/0BBH1149d*IiRh<IP7Jn3A]kp*1?$ihS#d($gm]EeIUT
%eZPt$QF^aV7$p#Ve[aGLeGW#Ys84ZW(25afeV2fCW6_3LS%F@'D9>$(UrV>kbPKM9NO1YqCU-;,>1LPJ8fji$,)^K<k#Fa9AZO?F
%I$i%rs)RO4fXP?JNh1;>d8kV-F?ap"eG=<e-)V,`=!e^2[:1&b4Rl<B^FHiuGq66+n_G6n*g)%LET:ot%?X/IjT/T,#8B:?FUE-<
%.n9t1m,;fPU$";KD.;ZHJ9qHZ.a-9g,eT.,Q)CkAJOO.;GUm)oR8@?&.jc;@D:_h`cb.*4;cD`mJ9G]G3/=,k=ZQe\h08YI0SR94
%"46I+i7g6t/PlrlLc0.dB\/>QeX5L7hd[1/3t(u:csO<"eki_6ODGC,;nK[,H3XPTSHFK4H9a.kK7\Hgb!Vl=kq"Z9)]h*F"J]'q
%n=.:H0*?hK$jaQQ$@XZCfH>>Z<NZH.Iph4Ka84JfgkSJ[hDtnfSV!32^_thpdc%YrpT?LF*cSa9m[V0oArl'O29Q%W.bPTrll;L,
%M`8"SYihrTkD2\sq3NIHbQ)]EEu1oQKCcA\;M8g*2b&F8j\6;:D\eDBVM@*Y4Xe*/.)M8D0*<$VM@&ABMV2N)@_i`(>_SW_FBGZH
%K-0e4#j$OVU>+V:0C5bb+)59t?L>RQ';s_7D\uh/8,%`b;mmjCQb^RYLG$:D0CCF)#f'\$H]&%R9u30cd*!m)Z9O<L@WsXu4oe[_
%(pN:d@>V]X9'&4.TJl!\E^WB7<Y9&>G5#m4c;c%ua+T54BIAgFc1lVbB39nT#T\pc=Y](T\fG!9Yi#PU,;@`@,Bf[-oj7BBW"n+b
%X%%'-54^I4c@c7?m7hH/1F5Vd\afmKF]>3Wi41&^P"(/cTQq3g[aCJ7Z);\b;Hj:>^db1j:O()&:b^/J\=6GSCVf/D\$WO$l)4(,
%o4QCqh/`VBOCOtg5UKd"%Y/*K9Q+*3O+`!)X&Hp61it4^i>iHHb\u>pSuVlqLU60AMs$`,ip7,f03;Q391rNf9.1kO(%P"(U0$^O
%iPC(D#=%=EPV-%QLHJ#WTT?L*AhPMZ9GkO_W,"t*XuV`d6<Z_I=#6^<kV40j,/a)HO$FQR33>`0@4UNGCm05=D-imqjRqbVa)uO6
%RV:Bna]4.E85S[4To"Ch!:3&0$u?g,`4mqiouQ,6>C:5';)+bP,V!RTnjOO=2F#"d\^;X_UI?/p2VnLpG(<2r+8u>$F?&iQV92N`
%bP$h<(#(2^*,oLUpC?-&,gT1k2gD#i+^fsYXUu&"LE%n_LCV1bE1##l@N=68(]I2EpN$)[1\VMj+uL.5%A66(4dN^:'5nLNk-U4E
%;TNs'eU2[C:BThf+>W,PIl>_=el3/=,dd4qX#3nPVd]33$>_-4cF&O)o^dO?'t9dR::N?E;m$VAWluK:%]a/F:V'_86YlfF0U'9e
%gWK&D?"IeOR;FFS7>:H"cTgahP[R4Aj(s:tDMJ\_DPTIoCWXmIOs3e"c'p\M22Yi^6ZEl-nPJi\%U0f*0PBOh#>9A1a_R"dk"R98
%QMQ=k.A67MX\/G//F<?FA]ePJ-Q]F(7JjD6kAj\4S1Q5\^`B#SQJpP;QKS[,D:Lu$.$GNla;:a_C[&sj1)oCn4:>lU"uRB$'F[Vn
%WFeTODB8`-D;.41J_i)bMZF)c!j=f<Cm2at3S>d4\snYQ1qYtR](_#blHrU5FJ#"fU?]maE8n>umWQ5Lc<aXRQ<%olC<3a@o00XQ
%`_iG$5[t(rWUdFD(n,ZeL1n]h3^+^6&YNBroo9Q-9%SH2U6Lmre`!`&5/EL(#t,Bd8Yo<oit7CL"F#K.kVi:`q`dO(+Zq>UL@Jm7
%HFZ8V5u>K59QCdiZfWbFfR)HRU!d8].dU`fHF*<V+Nb]k\Vtt,YgJh=I;&eU]NHA1:mM9gXsqiL2L8Q_C22n_?$"dK-NLuIkld(o
%(+6;'#?:+];?S%n1N-:bB!lMXdt[PkB3/@>rJ[uP6Rb'4r*aXrf]I!28<7DDJb/Kt<kmbPk+'"u#NhtAF$7mD++MWnkPMMDo)UiL
%5b%GNRXX=VA^F?_muE&Qkjh=>Ji!5+_eaP^f[@g%S;]pL.S5gnInL'KX^3"pXhLngF_hb@hC>\U%.hc/DJ&(ZEL^+n-7@7.7Tpg(
%ZR\VGBG,U!P]W9gU76h.<W#uqSib5Q&Kj=7JYPtti@:oVcHQS+CepOiNa\Z%FU^uLBksTG/OcdFd0dk-*YP3fDfj-*WGA65:(mhd
%hJk"`F/\hVoL!iNH?6eIF/HCjRQaKl4icp/mc'^4/CrL*Bl\$da_"%UAemsn:eC_1Do`]:,F\<nYhW@B3Z%*"P`=RKPohoE^KFs8
%L":Af%W+Fa#BrZ\<qkqhoK8;1cbSl]lp8Pdg\DQ!6Pk'J(CsU+j>(g>\[)8'Vdlt/<'/^D)8:MD,q;DFQud<JVXbg$:NR*g)%\Br
%[N?K^3oS67Y4=L5X^Bfb=.[tqG/#ko&ErH!gC\ASJcH9CjNW\%QP=3B85m+7eU20-/^ERl,>@>FZ&1)T;G8P-7[9o'-ZXl2";]A7
%M*"/e^<j@pg^TSP%Z9YR;HK/X<>$I%X"58=pBR62RiG5Kn@TdpS]NWK*Q;;A)/]n<&"5WBboboobPB@TL?*jRWL%\gM]J)\JYui"
%\/<('5JjCdo9kr^_*@_E9CD//Ad@M'[e*,X"3h76#)6q32I6h"7M?k9$YKZ_L*h9nC/A(fT(aRHGR&Np2=Q:PO%'YQ#,-m78eDKl
%H<6"!BJa-R37$PGMt9'V1HEeC4I\#0XYW#Ams.[+=l$1MH!\P8$5[j6m*>2aT5m$>n3"b_/DE:FKX-R'\&6"Ikd,[X(ZusN/28;Y
%n*%)AchfcpoA%Zu5G*NhcbJJoF;gOGi$##h9F3L,31;+H(5+"E)g[l#@\no5-tmG9dr\Ds$@'4"=X)1@D2X=oC`-=E5Mu.bIU[1t
%Wp8[g!k;e)*ZiTD,k>9hmGI<F%p%u!B,9TRU"8Or].eS=WbsV3>qs^MrG]WB"'!A$bl2aYX;.`>[he(N1?C]Ajo1.a\/!0GUh44#
%RB?uDrI2-L1q?li385mDn@F`k2,pZ/g>ToN)c^F\BUQ38Kh5O>7E'$"J%%>%g9S,/G9D=sfePcqQcAi"`?L%T\TmgagQ;k9gSa&,
%pL/)5Ho/CVp/*$TI?7EN-Ln3T>?eSFDf+Ie`iJN:KF(u<pK+9bL""[pf;<uV$Jrk4D0,$Om5pl4NRYLuT7:JKGg8d#gWm@+gU=\b
%D0O+dHsIrP^r!GsEtq+aFm9O8M%[RF;l+G/i@@tMb9-9lE^4,mNoceU?2O+YH!.]#b/uebZL5Grc'4c_D$)hF3([M*rMl`#VOjkY
%Vle'T2E,KH3!%OY%2j;B$(dlUYPZ`(i(4SJ@J-I>Dq\s-Gh\YBgCq25RU@u3BeiDa-Zr3S`s5:uqoRoDl@t,:n?BcRc=^h:Vd[p7
%=K`m.X$r_S"ZJeqDU3jFAt\KPaS?^(kI]NKT*%(Ci_=A%%?t.`T+0LmhXdIQ79hQEnm%)oRb=Pg?&NWn,M^USgctgT8lhC?P)hSF
%q90D<2XmlUH$cBdD8c<fg7GY1kIgSRVTiF)D/ZCiVR(a6nEkte-<&C5,^JKNq"LS@l_.]"f@Y<JB8Teces^/kc"-dWd5kQ0`8p3n
%RdmW,H0>t4G+*[Q\[bf*6>46]b^Ik.Z(*m?<Wf`I7Q6\@('f9PqRB!<rNt6?)65F9\$g@[YFQ.$+43@Ld$M?u?$9p=CaA,JV/CS<
%nVlL6Fkp=dq=L,tnd+/4gB4qCpbOc+@@/Q,/A@]l)ONL@dnEP"`=s\e2F`=hG\1Y6K_0)ZCclq6NY(r!QmiUbm56A>Nose,a(h80
%6c,LI141iRIPOa6`Ba6U-9fhq-^sfu'5sV%Ip3$:^V5#CrKO>A2UUNt42boDJ+P[A8FpK@UBu`rJ2=q.NBQCn9I63oJgoVr#_g1b
%TL-Ia,d>DI/H85j]g#(nL?lP)m1q&C0"5/DdsI_Ahri7NOa6D:H[g*1G":u:F]f6TW[/qqoIXBo9Y9l=AW"u-GhP53\Gu)sB<Ue(
%B"*9hjQSm=V/?52A-;^>"8cU2qd]g+A-;^>"8cU2qd]g+A-;_)gO?GPI%lHn2"?DL52!_8Q46N&^A@_n0>;](m)A:'0>@8XcY$7+
%roE[srr,!.(A+pdT"KN#s6>;OnbXEBH1H`W0;62U?['enRj*1):'UM@jsBG)C,\lNAJ_YaaUpM3B^r5(pr>VZk7@EEV'k^1nLsb5
%s"D.e0<+oV%)_Mb]79[LbO4]BH.Qt[,Y3DdJ+E#3<+!:WpT%$]B\BRI%sagoqiDWhmr*,O]fnW,qYJmg(JeB9AbQQqT&aha04-p#
%rUffM2F(W?^4,ePjf>TY:S.Ql%-(F(HhRC:X5DbuIJpM.hr'OpMZ60/s2trLPb[sM2uQ/8e/Sa(=^#u.$f+;bqCIK/+Ec2;_+jt)
%7%^_)`Ydu8=A%G\&8kCKeOD!P)aM842%2Z4mps8j/4c%K^>0&88qjlsU$3ju"T."R]lT<e8sRp]#V!qPPp\4VC?/-Ps)t*d)e:ko
%>g,.'KsWr"<`H\"*\EG>F\n9,=DhXuH`;i\dL@ieq5/o%UaFlQ%c[.^i<M;*8aBTn&K]nT_BEgV+s4:5'1K4_rMZ'ZRt0VNr(Rai
%A;?$\_QEq"VgA?%W7BU>!eBg5p:F4FDH@4s@,o/*n@r8RdZ94=_@<_mFqn)Ef^JDj8U/[d`gc<LL/E[VL5ZIQn1oac-4@"CKs*N2
%+ftIkTiTeW/sB$`o!(=6\QGXoRN32&^e5(3II`sVI?o%g>UD%cjp4[OK\be%qn3KGQ_?uSm6sg4l_IfZNLZ]$('b]W+X!=3&_]mM
%+f+Hss5`I7(b8nn!lI)8Bqt#=3matJJ@HoIbOEH)]NuIbRGjW(Zj=BU&LK%d?CL%nZi`cX/Z<jf7G`T(p/me^'9TgWMS]hPC9<>A
%g_t*aK/]p`>@jZI&1MC*%T$(>H[O%$p04)LS1G=Q(MVn^P]e:!f<N.UnF'<XDChH)]2*0QX91tgaHja\-l$7UUk:Sj<B=9!6ke,\
%?J/k]@81fGk+Mik-W\Md'Reh-4W1^@g0\CfgPK6Z,<B$5[<kcKCs5fhi\$m@=g7J(jR<^`'@NWZ'sW`*fu\TeUJ,5g>m#Qa;3m`m
%bP[?<GT#)2GC4:&6Bu_\b\M9)?Y.'`b*pBo>%pp9r)4A56CU"'G*e/I%(RqTk(Nm,\#_2bIn_@4O+lBi3u^GqqJAP!0^=9gPQ4=p
%:+68k?1Gd0FH!%3Fr74P2^3]Y'(Mi(=d+@`KUNTJ@uYHKAn.@S9b>E7-3La"KSfbMZNq(^:.Ce,mXu!6dS?1N1_<Xk;juiZoTP@?
%\e)rVUdel4N.lWnIFUj0:=ATQGReVVAf"4(;g':HLJUB1*$EYX_0(C[/CQRZba&[79XZWOOa2W7P$o0cdo]pFW(+]WE`8#GC.G*]
%8#OnBalfUbD5/T8?%UW5:XEmGQhT^G^=i)J_I*A6(4=)/<Rs,pUa[V4?b-L;/0#<C?[aGT4VKa4ALrFLTafoaXJs(B[:d:"dgMuo
%,&YPWR,UQS?!`h#p8jB^W,[_E=[',q+Y/8H;cp:=4Wk5LjlWF'P?VT[^bh7-P^][g+jC]6]RaX(LLu4D3"Di[0qK\=""79MWNm32
%40ro5Co"_OaHXL[j(,]c-3Rhc.2++2mmO)XliA`'*=TS;@6%d,ECgB)-]hs+NC.gliQ2-;l7VpjJ<rl&o$(Ku/IFA`^J<>-+-EJ_
%*Ea3dSf"\%<&>gU'r1A\!3V)YB8ea(>pd/fg`"RZ)$(UlOe1YT)>g)NqU9no:q8]na?*#U.mu(WPuB@I$$U!.B`UjC->7VG'WYmN
%F5[UY#GDIT<,=Uo;6DH-6Hjl>@%/>@'WakrJmCcZQgTJ9_\huU`0@9@Bhj\q,_Lb!n$,?Z;lG71?]r(F7SY?9ZfHhp#=OE,3[#c2
%UdDMl7@;^E3*GSl=$+EhF-K'_n5:FidQfg5aT<X*$U\%]i4G)C^b@q4UFM6n9nfpu$\rEsrK:4&]:.5WGO5G<7Tedi(J<^D<g/WO
%]IZ\b=CB^RPF"/Xpgr^.,\3?_/g%)0dF37U9R0e'_aHHc'4116`4,TJ\I-+D20itUeK'fNLs**cJ6Uc'\(gu77&m*Vc?nC!\>;hm
%=IS:,Vh1JhU`qrUjqP)S5U`p^b3gI"U's<,1gjmh?Z:1GR`^Ii#"<'A!bh[I8'&./:>moglLHns.mZGO!I$D[>:\;h#$mQAAormB
%;5ap%oT4Vdk?)nmc@i#T00ZXeEM.@Y!s*GEFAKD-jH#t'-WUh+IcuAUL6-t$?,2OAIF]<mi=L<E=nGJbfk"^)Nid@sBNmAl]+`@^
%G1DOhrR`bS<Ht:_]aP?_Tn;5rrth)iPW\'A<!mBQb2M&/ftqe3hMY@V<`1>g2pp@@*AZ`^G$'rD_HXk094nG\X7Y<mLs'n?gfKf]
%Ie]9lOiXRdnh<</ZJji#]"UuQX)F5/_h-9hB76a+K?BJh?ZbC/HY<`5A'&`1YgS3%<S/+b/j(6I/JHZf?U\e*_TQb1AN(?D8Ee7%
%Jc_\Sdb)!+A$%;">ZS(!'j\[CLJf?:V/hQO85_OQL/K;OEE#g:Y=;7*?4)#/k!EF<=%Ee^p$pJ1].6?V,V*#Q1;t`gA>eGFn,!q<
%Gh9dKTnu'.Wj9m4c)$*T-(:&2@ZkNMUa4&;`L+hk3B*s"12)Y)2<@h2._W9AV+2-5][3"r#YS`g&[p2B`HRS;k/8oV?(A"-#dF\s
%&dFY4V"&Y#\fQOng22qZ.,e[9+m/8LkF;.8Q3%%C25f95hXt(jD4j"_S#5Bq2j?n06:<2#'Sskn]0d;W=Ok"B6Y<aKL-j_WU=bX(
%CgDJ);%5^E^+:_fKokNZmBU5)%CLfkKrC"(ctli4i]DEl.!20B5qZ/QK#?^cTijJ/krb^MNOgc%0BdUj@&hO5<XaCB,bNeI:q@ND
%e&YA0Tk;057em7on"nU])uo\prSj_>a2tISlM.^AhgYCte[$(Lm!cP'h`cJb_mdC/q>(CM4uZ^tC97IJ2[W)2Gd8tL2)'Q:FVocu
%Kieu>59iiU^EPdlH-3cF=*8:r6d??>8ea31N<I6*+hrOCAKhN$!DKGi*0k$sC/X<;F.qQSrDi3*O>g]YLkss091<.q<":\ELo6eH
%#mXME_M\QCV5]%],ilCIc*j5dIn9U_5CCtYD2_*BWH2(p<Mq6YZB6JPBtK\5]9jTFP>GhD<3_%hnSR1\;l0j+)Z_i(C:Up!F>oI>
%XpmH_!pB$AWGHe/EM81\R)(b8K-o9]<(+Ns5jgrT&Gs7*#$V`ZL(-ZF,r<k<Kda`u+psQ60OYLYg-iKg!Q+QWPuuYR4%.#Ib6$c7
%C8+o_F>&p@("g$9SLbm$Y0<caYaLH>X;N2sFjbi4;6\B?/M8?,a.Ae1#)*4M`)-U]KHL%6X._t=&CH$WV@Nb:XKVis<kK10#MOQ/
%?DTc$?BtLJG"fJ4/ZLBPk%[tE7@j'sBh#OGfX>>W9#g.ZM9DWP.T=8.0*t;aDiU6\T!NWgVasJ'Y=-1F.j455ZC:T"T>3&faj[4d
%YM`Mrn'*3N@qQeiLrk!;+)FKFj`jYB)?^kt#a?l''[W-NgC6bL,/)-t6a^ec6:+eL\ru]^Mbp>$#eA%#XqH]_NPOh0blTaD"+V:%
%Jg+u<BgG0;A'i'FJQM"h.8Z)#D"%`:HDhE]9(m]G!oRYKXfFW-7?g*e4JDerY@V)s7Ci\+8;B=Mp-W%gCF\M__C39B;Rrl$@pthu
%LrtA&-bOM:-?p*-m7"U?6Xb`g=etW>!l\4$`uk2]'<nWn2p6M!Fs/0&$DXoIb*5UAb(p99#bBL3$k&eR9=9_-69dS3+;$uRaLe`b
%9(Oa#i0(%4+CV`+YT:ADpo;OO-*@69"uTKqdC9*s(f+)!">5Mm($+!ea]7Io#!`q;=!lT$A.m5-mtR)B#474]1TNf:i33TIkItB"
%0&hQ*Tr]!R$"Mc3,Zm@5Z#&j8jIiBlA9N5+;PS&=hLe2CgaoelTr,o6Qc$,.W;sRQ->-9c$hG6`eqBD;bWo4:X?m1`1ha!+-4OBa
%d?8r]7\"(qkHq4?n*>#+eg>/K%pGln1U6>8;NrkIRJt&u(>"P00r5hh],3=@pJF5G*bubjJCN([WN8Z7R3bH.9+arZ0AXYk'3$)d
%MC9lFK.qPHagtTP^hg:SU'>*R4MsQLk`_V1NSUEM`5+EA@?jh;SX%$K_Q9\9Tn\/gXB9/BN<E$5WSZ>W3[@UY.-7b%@;LYk-uTZ"
%>\79o'+MWgX[pk<V%<c_'m$?7f`/<JFA`Vu]0Ub_XY>K>RVEZDI.B5\"GC:KU(P7\f=OFV1?D)0Uh[LOXL&_d.dVgg3JK./d<6Q)
%,>).7F]'5o@fi:?3=Dc7n.\`pX;G5We=oR*>b&CjRD>VkBR1STA;6<3>I8+,=+\4J?cg.NK#n9i%7SC.@9WkW:6.)22':j]9?l&!
%jA#4G4"oeNC1.'l4\f+]r9`$b-S&ASG.Z/V>^33:dV[r-d%_7u)%jmrCHOY8)GsCLW<ncQcY:4H=\BNKUbW'm)1I\f`i(g0>XX^O
%papTgL/ZccZ]#\MEoBIt_gF>B7Y4l@Z``YRi1%%NR#)Xp_`O,keu'7`=/XQ%$LHg"!>:\MQ'P#[f>pt!51gc(2sHW>lk?2Y%!`QB
%(tO/<8X(tuB!@Q([D>][&KTBien<*^OCgt/.=;r=.4<_SMUoV+,jWl9[]]?iQ:-h2@pOd(dqbP8+i3`tC:LW)R.L\cp^KS,1LO1X
%>oV%h=;+S"f'!IJ?#0s*0krYdSeZub.'#qAIq:?\KiaJp"mHS$H(lM4<-=5*<*SsAfC(I=i2%N75XIki*6X=';/(P`2AYDBFt6N^
%=CP_3LW5fkKVd1Qr>U?CLs+3VLe@4Z@E+l7Z'SHM`8Jo$f%%:YeA=\+#IFdB-&,[YAJBl&of7R<JP3sei-,Pc_Q(R!6Qub8QUOW@
%[]7"Zqp:YMN\+*[(A'r0m@r+@eF)cWWj/g`Xp!B:.L(.Q$M-gP7fC:('^tO5/>-Ja1E_+OL+H2(^4WrA>?a$7?jSlV*9`35"=59)
%+^Dei9f%;O:1qj?l)'6H$m,B.BSld+9::-q9WFQ2aHmBbHP%_[lG=2m`na$.2,E\;Ykl`@+_Z@Z?DrI>F)W.[6AGAp;#o7a&/>Z[
%<uMh]Cd,)T^c!NfOfPc=DdiKM\CeeF4>='U;'A9P\.@@bQB'=s.mh:H6.d"s0(ZfI9Wqf2R-98rC^.du)&CRrMFQa\-X^lB6%bT#
%K$fL6`T_uYPGkWU9nbZ]*qF!R6=:bPM++jANWhE`]_j7c/r2l6h$=6q0t[TBKV6Yi=IM@U<Ai8q#9d8-'C9:EoYCQN=r;o$M/Ye,
%55`S8"JnGL6'5!0TU'C3CRM(Q8;#?DaWZm6"CAVG5&PX?"&">(%Wdo>V+Spbf&A0l0,Z5\]Y2fG7,AWOMiMY)'CeqU4&Y89g/826
%o_1n?Kdnj[.lAY0JsEJleSarch1H1^&=KaU\uY&hkB`;[#_V:ok9OeG"ectF/;OJ9(g*Qm)L+r+q$A)SLinJ:q@+gKd)o8:V!(EO
%MijGj.+Y=u)G7Gt##8M,*s]gh5CqCg*]!R&i4V<5!5-S5iSe0emG1K-d!O8>%^?R<rnB&3Mbk52#t3M];G-G^@O7'R@1/g/[ImR)
%+h@K8Y_QTd=TdEIm&NGf`GUAKK;)atq!1#7%L\-@REKbQWn*pL%E9Hn]bQ_F\aB-8YQi9a[,[ma++IDMA4Cm+Ves[LE=p(0$qa\=
%4\)U$>/t-mlpNR\=i*YR4>F5m-+Ib2U1iInPl^ilM`)/P)g3G2nHA2`@rELi#jnTZ.jC--N%UQdisacLfql4c6[a")>pCUkR=g0X
%^e^[R--9f0n^LP'CP)a.+]27NN9Nlan6."OS(,f^UULHIl7#L[6.D8iO"#7$pg?K$Z^hd_6?:!JhDP3KnOnN7%>#Kuh4jE\,FU%&
%^??G@6+7@CRVd6[Tf$LFEH4qb;fi8u8t,k@1a3&XaMktM;@:7%Pg(YND)S"3j0V(bK_Ec'=<T"I+q-j\+IPk+^$sG\m[A;@Cp?F<
%,[!riS]2(8p,@/NlR7^e<eO33OD#*qlX3\Go?'&A:Bu^kHGn/t+P0J/"D;>F%V1>gfg5=IDKnBh*KI.j>@8b/JdFdsjZ9oei,amN
%)T7J@damn'k_[8_`(>\20>cd>/rX!j2L@FR)T5uN1p'V^Zupor04q.J%39BB>9``A7)r9_D+),%S6k95$HZ!9*/Fr`6ir+Y/LiqO
%Vi:k"G]6)'>liqh\Ks3t3`A"RaeF],Gl<&WiYMA>A-5@3UC7Ad]srk^M)(b2j%AtWk,!2V8a%K'>D-.1"R)YT'2N5(-3<][2%)-Y
%E#VjL^bC][5%]_bK5?K:eM<A,`XkEPJVGL-7e=\fTbZjaVopQ_Po:m2Ed+m`H@^U*5T,]0,;4.d(`%j\m4i-*1ZTg)b;3Mjd2!8@
%c&RbsnM"XT,GJAgrj4q1O;_9]UV5$=M?]e#4de"'ed9*A8=uT:H8=/8$@>o8`l[G)N\k\id&o0Q65F+udOA]4$lrfTTSu?b9Jtl6
%*,kA3M2`Ybk?&16#nBk:e_nF!]@7XTWM[`;du:k'OpW@.]2;):=Bl+N%J0t*J.-q$s"6_-NuAQskM<@I_<I#u*)TFG)gW'!:p6=C
%p5#ktNQVm!=Zbq</NGSVC0<`49f@Kk%lV/e\<7c+/Tjui;-,F3**S^P;D5#JF&,cXDFuBn`'H!8#,?"@M1u]=#3hd3d)h_+M4kl4
%Tlk,:;oYMV8JP9.QCSN"<m^=<Ku:<,>!q@iAIM>bd%&1mJZ>H;n3<U".+"bU#_tbV740i!bn(.:KE60oh>]/u:r7c,MfFI(G.+;S
%WM.[F@6gbrdk]tIB@?1m#d[o;60B&o,4N(14q_Com)V\=]d7_(5OEioAqY5Wa:MMYo8r71fW_'bUBWn=<+ID92HR-"ih[+],utg5
%DiCbbA?+s-,\faSSS46N',;nV#-FkDK\gcm^pM0:S\[j&U(%_Y;b_PAk^]'YZrMXM;h2ihX8O-1h][jc#'>TldUiak"uU/T`9s;7
%6.e92LCnmT6ME4oS)LPE#S)YSP"<+?f]FPd/U@kT?n;maAi4@`d"X4[iKS(7a:&aJ63d/bVla:HkRi&m%37TiGmG8nKP>+AdTm.1
%-&+cPPB&?N32_/X@oI&XD#I\"X-c*'lD1fr6!?+*#&U45MAkokA*7Kd(TLt1%iVl-V_L1SC5<drAl!*oD)L1,bR7a5&;^fE%Hb=Y
%!5uF`)mcL!YNj$"C@ag*=WF=S9ZZf?\t66^)?7Fc_Gf@to.8fcGU^TmNj$e*;MlDRW#KVFKL.t>8CJkNf2jAZO!74d%1Pt/Bd9QY
%fVGP'YY$Z#$Po\0Z_pGh3?!iCh=idYX^H$EX0bCPJ4s^06^<c`=cMMLnXBdl6qiJV6VKm=8(+&s7+)G597[lhMk]8tS#S#'V+QL&
%XeKa.6L$ET$So"lZ<jJ=2"jJmD<ZD&/p\@(0,dLqmtBKt(:6\'NIW>-\pj"J>8TsURf`OGZij9M__qNV:R!?7Gr^X7+1=Tqr4ns3
%Z9q?;[0=!)>-;:NeF63oqgE*XE63/,$EW,%!X.C4(,EcuT\jr$S;%Cr,Qn/S7o*VZKFB>Cg+?isgke(S^fI3BNmX49>f@s-p^>:a
%Or/S)XcP^oRBn.ICrnt;X%8CE#c_+%_dZD\_]i6WksI;'$Q<d`riKX<Q:u9`NBJ;"K@G6D04!#^#!<rKi&/pk#@tn+Te03*-5h#s
%1?3tk_:.Hl,`9l_9IKrm&3':Z:?FSn#n`g<7L_3\pkuM-7D2]:i-/;7oo]+lp'AT@b,e3F(5j<Q.eA)DA-/_X_\ipGKGk:B%#>+=
%YYb1J%XqHJ0T9D#OO6JN`#FdOi-Na*/D^p>W$qG>#p"1>,_8Bq8mV7;X'Y!HcQp@#bQWRZS%J,1rDK$g/.W6c"G^5_5o(X@#ss5F
%0m8Nu9*g!AC^9q^S9Cf"iN,=0U+4`Z;UneNa$.?LW)Z0#M2P+bPY]Hpn0Y%cA#m$U[5o)/9R%jk:ktDTW$B0$lIFUP+i>>3<?09n
%N!;-E7dA+8$,mXQH`1U#"9\t,[84)8?k\2#R\@PB&CWpP0+AVFY4fWTifPtT9?cj@8-8N`<u8`#5_S%gZ./3!jLr?AY%*kVS2ql6
%!6e;QSs&,9>OX]hRZtY%(Yp*3e43%Z"X=7<=_1ND<'9Q2Q]=,D^MEP-ZsoeFQFIT9,M'g7p,WVBfP!-K/6K\8G!R@$MtOdMl,Omq
%2jofbj(W/R8;dlkNCT`81)R!8CaZS?6,A.?d1Y5&U$<KPU0hN=-:'If+018/frTqd]G,u\!f>mV"\6O*i'M$o5sXUVL,bB%L@5iH
%m*I.D2GeYFk]UM;/Ze$)^@%kF/,\_gnkF>2)VXW<K:pm:3t)gCc_.[NWLXdDNi&P2o5Q9`!kbM[_aoh,lr*>Mb3OE,-Jh&A!msac
%;7qMi$slsq4A`A/\<tB&b%0"DM!"@2Vqs5*+fR#N)Hi;\^GI-E9qEOfATMReFiZtE;1Pq`lsUemi,$Je,uNBuMjgL[pX0-o._$i(
%afn4-7b48G=47_A7aNO&UdFE<lY%^*i$$bIpUtjrF[J%%C"O8l#oL%^7W1\</3ta[?1CCg("<bTXM*-D00)<:&(ZpO&Jc&l.KLJL
%XZ#B>afM.tSP^k5cri/VXV_AWTIk`G[_O:-SA(!jS.N_#j7,l*=tF'YWZ@^+M&8>(5`T:_2?MAN;40;#>I%J>qIk:6#7,'tbCb\I
%R0E(6*809_pfj*T<bWQoJg*gf4:&i\b4nM\L"XFSB!V6^_:uf]:o!V,HNYC@$H=Hd@a2eW,a?;%@HO6-+Cls7X[%]:%6>2Ub.*i\
%Q%Nabl9TAL6Pk9.Lq.f&`%d5NciCc16;*@nf.p61jN5X8=;_"0U3[)jH.W*4F9\aRZ7t"O%#hc,5pFZ7(Z'u[lg@P72/T"X:.^ER
%/",ojMl)sMPsPq"XC92=h-"FY7W"jR/"2mUB8\RQ&Pm/\6:?ZF][<7,$jC*n*c!Gr)7`bLa5K9VWC\aRFr`o`1?<nsK5H1SY<^`N
%c+8QKV;9A\"<fQFefIk#]S!J/W+!3Ic^*^,[sI2]#t%Vt&^Sm_W7_JjL$4\ZnMP0S4s[:!.,W+<651h/5i3"qDM$J+Wmm2G'WF5r
%$.[^E[DoU%@lQ0H0O?5tY_!c'YMRB[\#f*g1n.t%!/?")6;2m;U][F\J1_38SneXY>1O(L_o-4IfW>a+1c_DBMmL1KP2d.$e^0\p
%BF:B=9NXM'UhD5!naeGS,!qDe3NtjRd_LEh\2\f`d9\.p,CXN`lU.3F01R;j>Ih[d-\7,CN!8R>6'i#GbJTb01``S#A#$F$JlBLu
%"b(0==YqH0e"t5cF95aZQrd0%6L:BF6[9U(1MRft<hdQq5uiRJ`/mEVgg\_H&_,=Y#4(t$%HSNR_n@g5(b:#MRR?gZB>=m!bQDZH
%OhP%spc,6=Dm<_9jhTbfg@[e^\?#ZgKUH;()ktt$%(t1'HZ8P[=FdX3B]2%O??3>JHl/^U_?a0K(T[JQRZ%e0]+q-#g7Gnd'50j'
%A3n:(:@"4d*hXFENOj0m"K!C45UD4sRmf%>]nmXnFg"'fGgfAO@u!BT)"[6,^CWLF^!O"46sg22h`OpqjG/GUTG8]A,?Zih!+--!
%ZDF08'pX>8YWTc9NuI0Y%qE%8E]^<6l[Y?k-KG@L0c;+=W+A(F>HDp^@(0)?Rc3KHp8U9L")J2/F#rB_8IIId-O"Whd&-R@6NYjp
%&nYt$/Z4t'c96mDe"geF;f*Ya_(eF!Yd?UT8=`DHrE;'PNF?G?JI=0AOXJ!6cY-t#W$-:#Q5RIX^e,E,A=5+`>gUDk>**1A)V7+=
%p2XpGU.6'Jd?)LJLX?m/0j[e#*aD?\]p/d6:2FFM>ZUMh30YoLR"ltt]Ar3I=-q2=P318'I#6R-jU:PoFXf4Z"Ehcg`LEe7UQNUd
%(36h,)?ABj(1V[f4b>^4]MA&*Qr:7r2)7Z4S"SQZjfr!Jal"ZT;Ib6CA?j=h5o"IaK$2RkZA/*mpHeF89Qb<*kg#+)_%A@3?%H$D
%(_IUY#u;Qj6;7N[TT+^gjglq2;^4'WQO,&?Ij_'\oE>i(k3e2N2c-V;"rt^O/'m-6E2?SlS-jTOUXLd:W`]*G-Ck`9i1.(@;3:l_
%0G8#XQ_kg5[oSlJFPjM7Mb/(_j+To4/YfYf1UhDG;_=q@):d6K0`j0c+]<K74CLUD'VBuO%-*SXD0YhDA#$8Z+YFJkgh#j,aJ,J\
%_GhY(D8CH6lKm$jr*q\_1X!U5IA(;`g.ho;)m+jP2em_D8Z+""LkkiD`<=XZU3']m$a;Cn/5i-aEK#6u%m<j>A>Z_[*tY"Q"0a-n
%arD2@=>[7;iU:UtMr>fgi1&AjYt/h>JEd,C!$)5F!1L=lQk=N&Bg63kZ+!-^]P,=&#Vo`-eA,_1`mV5ELg%m$YUQ57`EFg;iHHg,
%Uo>8`Ui<E._GN7-QJ7%2F(@2'L5e&#@;$)e2qm=M,+J\M9q@6AdI:nd!Nc8\/6C/VO0#c&Gej6oe<"'8f,#3R[i%UA]Q->5miJcf
%oPuGK(e)[/[s^qM+idK9*uMYBL1m[a73drQ_+;-e7/.^YFrqY/57hP.noD"Nf86.aBX1cB2uHEZpr6`NW%.L-b?&mGU`mnT(hY8H
%/S^jWIJZCDf+<AAn8Ko5WEp;Wd?*2PZDSdo:u>etHM==#pol7s9u$W*X'\):p>W-jbO>H$e]U/i[H[-d^&6hNHg(-,IXD+NrKGk-
%?[j@T3IcD1rUaa7J,CD`oa8(T4(dFpB:Xu.(=hohe_39Z0emj)l0]:&Mn\_Y(]gJMpJNBYJ>d^\7[_O%6!=O)CUNM^'D!XY.#)N6
%2"`bH`I]6L,aomAdV1mtK/eK'9uL:59+?bi[#EKFKY&t'Ul_@O?Ns\trV`KtKX?X0&uR@&\;ub1$\(+\$-0*7^VjFiRf^-nQ0J;e
%$:l6S_3EjX*u0&.;:\q82oIDg^$:6'CU?P/jn?Cm*#tjBl[?HL#h!"K`pJ$oBsagipt@Z[UnXT<IUCWi;V"<;[2DXKd03"8hs:&(
%*>KWGQU5B$!&I<?q.r@ICb0/9BoSd'(to[D`^a#B_*;Yo60ntV*]V0\ZX?lT'&4XnJUP]-Ak'@.]1.ba,mA>k._,Q,`A)auAkkH[
%KR'IU`Yg*^,d]?O(ic[l4(QFSeX'd[+k4kC:CIs\TqFl'>>heR7qa<(!J^+p1p_k0gHK?hW"3B>VK3DJ\A"H8@-gdH$p[:TL4Vor
%UlI2#X7_,JMD<(Qcrd*PRFE..?nKCT;'oa=#GQI)1SLS(%/#MI)@69IP!ofl:<^;B@u_OS`jo(<g1$B\]qnoF3K7=(.3g0*BJ38f
%I!s'Ld(3YlU)+Xa,4tVUL@d$cqcR^\@>7(*g&f,DkQBq\?K"4<OJK$ch]L`4a@1$ld?6?ec%Z+cjrTnPiM,FKjME8S()OP$[o1!5
%bj(i7$Dn4Np8j+<3pc?A_B$X`5,U`U-@VTlq].6t%+.KD6gAsf9M8pIKWhDMEdA!K#!jLeS!p"%QF;h(9lgUXkf20cPGqZ3&b6Gi
%lFY[3X[nKV?X>C=H]'`(LESHlXU0XrYreYK0g`_;8j99o^l`7[8rmW/MWJD4m4P0QPY1-nRU*71231\:Bi4EQkbmFBd.;e28T$rR
%4qp>P/<q$<So[PTMkp/,bR['8L0TcgV"PO2p%+htN7QE7oDjggFnl9ML]MusZTO>*#QFmFQ%U,$Bg3-s2SbtrCN>jE%Ci@2q4Ms7
%e%#M^&%&`[%O^bD7%d-::PUr!CPo!(;rL0)#&G*68@;[<kd'c%Na.M-87gR'EX.g_>>d9Zn,lia4hsl:1_G_+.g`4Q,V5Ncjk47W
%C=4$#a`8)],:L,@15&NR!&T6F=tFd,R#;WCR:bN\'Cj7u,eu9m+U7.?3@sIgAT1cp!0gpfEH5SJDh-`J@C3/3$jK*`//UHZbbDkN
%OdXYa*DL:(rS-mdielKTU<\HgWh^5f%]]sS=`CX@_M+rc&&grKd:iq:]\D@gJO.-QZHESEUj*h8a>])hDGG%gZq_g+4OL)CF9*L9
%Y'.%M$ABdHk9Vl/EY^bmG>U(]:k1#=bfl&Mi".Xp+-G%a?jVVPAF"#[`i_Z[5JR?SU,cFG=+l&,]XT`-,&"+e6ITuq\J.=ScX9R<
%=Qao?dYZ=r^/(,F[<O[ENNEhj;&E?C)pO,J!I-][4'>1hioq9_X<cBFjqSU+$ZS.G+Ci75"dgqP7+TO$n,j5.%'_*4*a4@9RoCp@
%!Y/AlBu_e;A;MF".%(@/!o!p*Or++Y$G+<c<Q/e4fhr=_Zccop;q=Y]=#:'50s0+<bRObP;7REnKLqD_HRRBH71+Q+d;oU7Vfn=X
%@)jbdJ6(KtJDNaWAhGR`d%gmQ!]Cc1[C(A)U,E$k)(\`d:thb:'\ZVE5QTp`G?5r,)%`f<B,EZ3fJ5^'`MCV8[T85["B2rVgT^fV
%"Bk\`j$)B.`%lk[,1FfqRY@LEaD>s\Z%<r*+@Z?n$<'PJ]"BS%M+RGEE3]I`*uTX3X81D.)R+pQdo:'XGYhi&APqMaCeq@Ob2frJ
%=q4.oABY'q?a2&aGmH2o?A<;E8_)Ps.js8e&5626pI7mk:nD2>+t,"NHT*;.d65/Fp()gj==%\=8%`eMY8Ajr5XPkdPG.V<g==+/
%k7#t%Cjo<?G.]\rkAoBU@OZq4(JRV?Lpr"2#"^kOjJi2[-Ds6h0`jZjdMQZV^!--VlFgU[G%MG9QVsQ3l,)IZS%;EF#9f<3^'^&5
%MhY+uVNNsnM[3Gh<_.QW*2uJQ$&j)qX[d%d*3R6YL$TBOi6("uO9Zsa-mJ4L4Mf1O1f!&a_$E=s-GnO,<:In$cTFJt&7/Xt4G[YP
%iQ_uQS\eEPQku8k]:`bg,>fRW0tDNB;ncPc!&iIg)"n>I/g@YsrcT2p?]=fU6IpV=&Q^]e&Wt86=I-VAEf9eS?qPTS:heS7+n8CQ
%ap*>fLL&MrLs[>.,K(,q1SL2PF<3;9PfP&qJ:U_SP6PDnU,CUST-0S/Anmo8jb7=G2QOoGB?/Em"gJGU*1$9,>q1"O[MQ-PXL+3:
%VI`^<4P#SJC_[f7EZ9NGNXGOl)\`oqnFO*(CaEPMl$[r*d]?'PR'Zn<Aa)'gBIme?@TGbHiruAH35oRJGm?S5;#XHNi]]Jh$/BK>
%$o0@@[\mM+Ma=O4VpCTjl1]e6$>gcu&:k-$:30Qo121P;_(??K/J"(DD/fbf(+9`@(%2tT)LAQs#BF/ZReVEs>e3tAJ[]'uHN4'A
%We$qp9#ci!l=%aXYQ7mZjB`,",(Z1-K5\PC:T.8q6@gJSRGVI&'R5>QDN-Mh5`M\u$9]RYp%q[#C(+YV?NBt5gcsgCB*]F>H%pR7
%'O1mE5$&Jg9eF7`faK49FNbJ!1ZO;5Z<_Yh@DkE>iJaF>T%V&uOsB<o:H&LJgDFubN=,d042u;4IFDVC'F(337?UCpMqI.'d>.c6
%GQt?)h9ZAt:eOXAU7rL"JjDU>A6;MRL7Z[i%59g2e/ZG`8.1c^%04s7edO@#c^&4cC1mmE?37&?7"Ehq7r"]\URR=[Diq`p1gXIk
%>ECRnRc"tS7q`5K@G?-61/6)O0R-#b&N-SC$#<811\e3.'R#E8=Q?LdB4]AO,?nD6?m0>E^5k8O%b+Hud@a2phfNJ1/fiFQ2b:au
%rRgAJ)2FC:F2B2f3]cX@HLLrf^'[f"]$1>FhEL2+Sn<-k#QmAMa[cNF&CjI$+HQcdoahD,i5Z[m<&IpBL'\!WqLM1nC*nbSr",MJ
%0s7bW^0DPdQZY)0(2"LCO'qdLN#_T)[A`g<.8RaOPFAL;/uYIPd,Yi_,^HL-`@Xt]9#\*iBtq',YF%qiX16XnWJ@]]['Z'229`"N
%LST)p3_3KH_;SsIn6DeYP8*Kr[8J2+OV!nY=dO(<@j?^_dTtfPj&fu:IFB*$$Qq.<:-D6lhD4+6HPPlQ:^^2jUEMHG*M&s#plhXg
%W"H%&/%R^NfkPg5/WG;.N/IAgQ_$R`C4[96$'1ZX.%pi9a)ONW,;WU1pp*b#1cG`<'uJ:*oh[ASJdA+IJ*[A,,!humq7$iIAS)p@
%F`<o#W5uWml=VOI>$[lu-KlkQL@>_XE&'?^+`kJPVcU[%%\!da1pQgip`rLcSK]TL%^d7e'n`7M%,b"&a!guud57+!1#\e6c<u0r
%K"7fLZjZs<:g6q,@(^U/kSMGl0]@N=,q@Ug0O;7LiH%t7^T%u6.qXPi/q.UJ:AFu(s3s[(eW`PH0OgkTj+%<6\L_UeDsUY&o:'K;
%M@Cj7&X`pd!4-;HggY^i@u:kN61Lk@CmENc,J0s"=AKkXORE9N#"fbDSrMkP,]YX+"gU"23pre-rNqLJ[$0DWbabN2?Enkn,>cnJ
%X@q+EXOHV0Rb=g9\C`+cSmh18Tp%R45Om[Y#ui;16ui*9ILJ]2;?S!4$`DiqaHft%ZXUEW-sD6l^eC0;=#E5$a*s]d`%K=$qZp_(
%#3np54,OUj@Q9@;,eTSW*jVn7jMot9RM8!eU;iqSl/jje^uT=8M<M$qV@,PWaQ9@oL!t8;(Z)\h[6Xd?VM+*b($bHKfeQusNIXra
%o<D9>*ZK=OiWU5l%I\lcQ(ng01[feMNS?0KjTqT,=XTT>%!@mKmuZ@UoK`*M+n!_%V$Zb[@-4=<OD$X\<?`DPaI7i?+k3=9S]riS
%&J!5FRiFDGh1cC3MPu4?Go9UCXtb"6U44=JNcYMg=n`eH3VRh/G$.="ep8\GXYImb\"p\;fnr&pC65,D=ZdXU/@0JH.8ThJ;DYi'
%3@bqS/kIU'S<V,67T>QrZn<Rgr)Srj)7&@e'd;%Gd`4'lR(oBBCf.;cMi(Z?g%GdM$%Z;#%suE.7&!$1U)+P4!J:i6MMNR5SI2i(
%?6tn>)b1f+*pfYl3C?j>"G))b;ud.ZS<H>E-Pssp8d$ArDpGZA(t(u$UnSg\\i=,g$J_-oaE"F$3(kVte6uXDP44QKWZoL"SDT-*
%7+5_oEsZODEXYBBO]SfQK+]>e@hJ21K:op`4X,Mm5)W;r2%mN"BY<#oN=-OH[kR5'WeWo<;%\2di]T)Q&csEHRICVo!,+!>+OO@0
%DM>*Y^Q`JH88<S9.uWNslY*//@+sWXNh0=q,fKne-m:^CVAKmoh8X=eHo;7tKIum<L`[5qM)BsnG)!oiUU+q_7\gt?3L3oHaGruQ
%jo-QthuT0M;8D5!T#-%a";K"?&f<G'@bI)-Ig.(D_,2tfMKmrsNWK_I+@%_<c!_p<C*qH"_StnM:/p+RCtbsVlie^[]T_JonjGf0
%6]Xf%07f':p([HjqM`SU.D^>lSR`D:DnUdI,3Y?^r1;@PFcRZ.3?oldnJiijqFanR1+h8u[fX>[HJ[l?#/<eH^R5dp40HVQ@(da%
%h??PhVf*&])u^`JD-[t_rb<$>@"RZEL.`>hphf3g%+8^3KGp88X6FkrM:5m1Ul/\)\ANlta1=OoJRhF0='&!mM^t#q)LI</R)Z#8
%BET[dgRM6"j0YkWmo>lm[;$N`&#pO?^:HUMmQrYg2AJMQ@q6+q48LD!l!H$8$1:JBR160@b]Zf\#8N#OV+f&t`UT/Vf/'9`PE]LS
%lB(#EY`/m^35)I@SH4Vcj@M%c%O_g_-6@Ten\eWhFJ')53;2LGU_P0q)1[udk;/Pd1'TRU^hO0TONWM-No3'+0f,%RN^$&sl(CD#
%0.VePEX!SfB#h,bLZ<7aLt[_,mO@2,1[+>UR#W/Hjq`jf+`KD-%Y3]R"V+&cBeAY\iP<6Zs)JJdhOp+!2Gh:7CrPO<cu;_dToh7+
%iD@r(oSJSG%U0*8d5I*Ffto[/@X)W'Gh`>;WB10MG(UTkkf1U$Np,;/,V0rYL)/'EOchp2$`C+bR=Br+cBq`;[!/Hf`n!V'"r0nn
%)?Fjf.3+_P/[cBBS/LS]$mrXV+>:2*Kd6SQ5U9R,E6"_n+?4J9E'P0oW,r#n"&Om3nh!Ztn/I1]dW*.?8/X\+JI.+?ROgLigEBA%
%_fU!^E1G9FVERA#,?b?r#6Q,SVuT?0XoRGQV*bLDi.FDo+>A"p#B.GqU^\?7:s:AZJV1G+^@2.5%Z!\YN<_@$`eOQ])ea2L;+-:,
%7g94LQ3"]naP_U&9!H_SA8iS!kN`6[%L=V@;_>H)i&hqg%dF'(cM;Df5W<BGWFgkhf4s1d]o+(cC&XTQIe,fbk'G;)i!?n:r9:_M
%&9?1#i8ACq"s$sLRFQ!?i-Z<7B*LIX!P4qXDrJN0bu7gN4ue*+&@X@__276,Euh^ai3YqjdQI$8$*(BEja4uPf2LrcIuO0\gaE/K
%3rm,(WoXN;4TU47N*Ml[!Q'-%)Y6`d5WAmV#3g!o_2/t%kj+6>:1,KA-dVn2;56Y]C]M=\GZF6R_ZsfXVpF;;Gr?VJQ8e<k0^Xna
%EI'elpA$s1mhm4;JRkd6)a66V3>Ye>4$GVD5GZ=O5.G*sS4b@r3,47d2XnNhpM5<<.m,dL.me:dG]<"J$Ko-S#H'!U=_7aWS0gKj
%q&;FUD0EnHe5pm6C^C*?)sH4?#IAq*G'n6GnH^#@`<XG,UJoS1_&\Zr@5[<Ei2G&Yp^KEsj&o[@YP@$p*&3djM[p:^&^=l-+.Nn*
%NN0#<K55/e'$p'`4eZq4)Yi6^d#.?%*h4?>4<1J)A!`tZFMNN=T3DSI]R^:m?pPuY?\\lq1l2M[>\gu6_["e.RbnPrI!o,;#M6H5
%pcRShC\+Lb)F!rMKoQA??(EI:Xs5^%UUf/h#\WYb*+E_C"!3sB5t<2*K*NcA-V8Ud&+4I.MX']h?9oaj$4dUc.s%;jnDH"$W?Jpl
%K>SJ&*iKPZNb^*T']$QWHR@3A^VYW@Z:ii)!=qpF=To5+iPDd@%<1+\_.`mOb]?/A`WZek3Pu)WAkC2'^^!@=`Og[3N\J8qm11^2
%3"b5OJO'njS=md<4PAYF;rJsE;TB$oRT`a>nFb?A4uefa`qjk+Durf!8Z7@S:ADB=Pi!2t*&F5fL5$5afYu4[)*U#U)5XCEj+BFb
%/5Y&X%h;td6X-2Q_6KC^'7/Sh@nIW>Yf-i;[2s&9!Q'+*XH4GF**X.p,r7eG2S''#arMU0EAr:b!9#&[!6!Y%7]R`bC1[L1i&HF0
%D0LML8!K(RSH4BW$E;%N!eb'Q<^P[DKEJAUEM,BY38m;!D(@l]KAeZ>XTK]Ynk@LI*kX*PW,BtuTsl79X+Q&BCg(ltf\d1`!tal/
%\6ZDOAihbmnVZnaJ\cD+>jWCFS-0VuJ-Et"(XW[gnD%Nd2jiM@(/*kP"pn%oOmD54W5ola\ci4l5DA()*=pp;R0%ucKEoer-gn_-
%JMZY[#;UEaE+U4@?N#ffNp8kMWoJXdK0dh]1-BO*k]'B;4RgM"l,%rQLRc25'07$kAJg%8?/`R4@k@2.#+iD9^8$6dkj<l-E$r]u
%Ds,H^^kme=r:UX!9o(FeWG>4*j^="KNE)/DA)e#O>AJUhJ\(MTbgm!G)t2,UL-,%:[KB"#;+"/IE;]+*9]M2_.p*C\<a>:h5?Qjm
%#=*hb$;ZkmAghUh*]t%ZTYLl%#fW]OJO=G[IEk[Ib][3A^j4EYZUd+i\77F>BP0loFT:Q]g4f_?dtSkDD+NSY\d=<pRZYB7;Q%)-
%JYU'p3bBLRSt-3fapnT8$L\01\EbLND1KFL?=mGc-ud&#,$;3>J[;&SLMrj$RFD>>5_fE=#j`6lS5A.fjq4S.]?A"[!bJY^JMY1K
%-j(IrS2M]q[Qrb=Jg?.o#6LeGbqOqk#b7i^9I8shi,g]:.s2tR)MAK^[q6b%*bnF%ZOR+5kZJ6!)^')(c_//r#FnZo"h9Qp%QHu@
%s)2nmH,)>%7lh,>iS)A$3t=5I&"1nP_#^GeU=,cI2@5rUMA5H/"-+9hYA\Er<Ff@gM?AkWOg<f#"7DOF#(^B="4"Ar.khr^)T`_-
%IDu;#HAjmh$jW;-7PUME#99J3T"hhP!QW(9\`Fh9g_$P%(<m9s3/f#>&fNI^CoYNh)[n]:#NFHREPT,+_@\PB^`DFL.@bQ$E7>Hb
%EWZF3#YRjGh1P863u3"TJE+o`j1tp(SF7_VBnl_e@)Ets%Kl-T[-Gq5^sPr;D<WJ,`8>+"ecl;JECi9HV5&PsaGEmJ;8?>@R+ed=
%J@fg*;F^b#)\?a=:r'('#6T?Y;8ATr6W:4_J7HM'[P:Uo*RDkXB-?,#VW96:!urPqn5r\C!67nj[!E)\c:#=2isGgIjuYp'G6i/c
%O:QUE!R=lSiXQ"7)BK::+i%65<:qgG3-?Nc7lJbN`0;ZpFLDb=P]_R$IM2gRj0dNn_uM1Q-%h4i$ug"cZiCODE90TmX<?H6#,aS%
%6,4p0Q$s4KMjjS_%&'.-i.U?*gqa0sSCinZ`'Rp`6iA6OhnT3s;-;3$Muc\J,,=TTi!a5HPB(:ME-4mA#m]7.J<bZfY/%J(,V'?a
%Wm/S#38eoNo*hRX!tMA^U76(O^sQmXWs91qHDZUI!sDBd-X%@?8n$*b46SrfGSp#u2E9V3JJK-n@lWE-O3HnV38j)J?K)h433!^Q
%X5e`2BlHKAkM?4-j;%n=[*FV^JHF,I0npH^:r!qoinK+f:<OIbBBUc%%%tcZM7K@2_j.6P-liJ]^+)9/Hq".76)J[-;O;g<`n_(@
%E4V6H(Z)rX;[ug?E5_ijr[3\B*=5uW2(<ao8DpWhF?i=tB@%`Opc9$I,Rq_(g`V0s.mt)CNW]hrR\'9*OhahhW.#[2E)\VGX<W;V
%'m>!&N!)m+++]&+&i_*F.FrVeE5%S-`Wc_h<2o&eFX1p"0emhV&i`$,"G>AMJV-?)4JsETA"IqPh`q6US6C,N%B)o0D94:>35V"E
%%c%smi#3[A45:#HSFLt`89ZJ$a+Vq`kuk;aML&ON"q$m+DiA+Y!dF9oLV,s)1VepHd;GVme\G`V^YC+Pq+$1QJHBJ#>qqPF7GC6e
%nT60umgLIa$O+h\#j0qg>`i09lY\t=HY8)k/JL/KX`=\.'KBXk>"^l.!f+1c\Bn8)E/ktYXAIiFI-LkS-uc]c>&In1TYM0'X`Q?b
%JHJnO[dC@>:uKRV8rKi``U-?R4hcIKB*K4%Y<*FX6B:`CM[fp94>M?]$jDYB1kd\=/9%JQnYE/p#*)_p`I+;o^sQE0EZGN-KW`Ga
%)_>q>\kYu?!nS@CJiXZ,Dq19o$QR096Z+S/E"&Qd*NrT'l66Zf'KC]kGpL7W!_85!C,6P`k!@>_kYU2rbZ?oFK*'(N<#%;^i.u-o
%KZ<IOi-]7\.hF\1)7geG5iCjj8j47$*6qcrZPsN:E,p(22Gi>M^`Ya,LB=@SGb!SGTYNk/C*r4Bi7'8=B"4UnS*`>)%2QIRS$&kq
%i:QOnW2jEZUP9Y?>:aa](&bcc:!4bnLV0^`JYRhmI2b"^HAA^BFu4/]+2UOg"2E4]he)S,D`hun9N(W?i.3u0h(^k-nA'03H&eKT
%JV,&!dY5cV^(_^->^D&*B4R^-]P)9B$n<V9`s*%oMn/J!3oY]H*2Hb)%'9Uk0UW;ZK*T]XW0qqV*)Ncd^Ys`Np@RAUlG%C&E+UN7
%W5$:RV^MkrHf0I-oSI6BnA#?<_q`0>*]V0/Wo_"uVjir#E#fJEotZbC*]U0.9c.j-=@P.'%leMZHNM<-iP9H2L=g]0E7Q`<Gln;s
%="q%T_h$hgP["G5\Df1B*cV8e:(7e<p&bepDZ#t%$3q'k>\G[+iP;/-'4A;EJ^ZNm@+L>B%Vn>+!4kGu7l:l@"r]JnC'>^FB]+mU
%9@GITUOf2O3Z^t3B]-8bH,_S_B]*Qp,G&dC"*Zl_T$VS6#**jT;X=Ss*/;'DR6b@si2@ft`s)qlIX'dZ%4lIC*-.FN^_rBBe2&Ll
%3&=`5.hXi$;OL&%OhdHWKXM$cLFk38\Di%6@L712!J_+<&lEU;!=/LR,BeTf1[DgP'a),%=W^iRn7H<G$j:P%6r^VP+FlQ92.XHG
%J>5Ts`"9^):CegPoS`b[0K[9#FT?AO3Cro!!e;)MW*f)0Oh!maW5F,6B``!VKDl>ARTR(Srf'$h6Bu``Dr@/eSooti%=+rB@1)t(
%Bi45T1[mCu7G@ln6YBb,fPd@$c-RIurC3"dPMA'hh^'ZfnGrO-:rSG-[Xrt7RZK?HoG]Xp;;OUR=TaH8(A&QqbP^i1q@-0*9p"8J
%rI@SP7JuT<Oot1m\TeT4P9'*2C1B@.qo6WE9r3Jj=$(MOJ:/YkXOT,*D^&A^[N^-peTB"DUi.19'H2'_qIVTP71AFM'sI]JUi4aZ
%&D87U2hENf($HT/?Z>B@kIWa^f+"*cj=HW/=-RXA2_2K*%.]CK3S"r))kIC)HusmW*5(S[L2ZRpS&l-BhjZkj=M>g4)nmU?dK\MH
%Vd]^?Aq55<n^@-YZ+[tr1;i<fBQ#k*M14?U^"%!njPCd.)qF;nJG)GAdJ!jP2e1p9Yd;1>7Q$_<"5FhQc!.coRaR9N`%7_o\2Vh]
%QK2+`D_P/3T,V<ZoILQ_g46m$]g0G%a7X=nXMtIsS*oNKWCQS/!94B_g]?aN]0A=I(>51sImi-%A8g3#9CXO<2m*!K9\gn>_ca8&
%,jPKu:&?nhXgZU5fY?'q!UYl+:3=ab6@34?V@pRrp;VdlRiTT,XD!:RSrp]`9l<%c]hq.pah[VIimNY*11P[[MMsfNNpR;?JtDgi
%m0sAT0(gg)2he&r_i!gje,08?i5#%UNFq$`YeAQimF-s[:&DVBIUIL9gFsS`qIHF3&/f-3d(Lk;,m.+RdCgutKsZGYZPSNQ/%@N,
%0P2MF^qF.^fDN#dm`cTROSoOSm3o:`"`+;/9r%k5b6m%,<dg'O#PY)6J;B+8\@5BG^9->MC)d[5[^TS+cChigOp$!fJG*S?M;f<g
%Zo>W(4Ss%dp80'gao<C7)hZ>Tfn&M7M(3\__i!hU1H=LQNpTPH<"VN1Ci=E]#0_Ycm:\-Z/$q8-,[-2:d,$S\PGK5*2_(2L4eTLQ
%pfPr^Z8^fa\D)+9Doh[3_q?/Z;sGaOVBL<(^-Iq!NpQ.Xka%->aPKV^k8)R0]bu)bZ#9a3%HUH\a#gXe'MM]V#.1kVEEHiO$LJ9Y
%Nh5[dTtS^LR9"!>)EoT-CnSJ0&d->0JG,k*:f5%<g)DW=rI54B%8/p6_un^46U3eJKC"S$!Y'9[DdKm)M'<_bZk,-)$g\>'P6rKS
%fUM#KD^WE'^tuHH1F0^;H_X'>_%,f@PJ&#\ZiTlt?'!Y@*S;;g#s;c!Hda_4BrmeT]pXZ8Jm4ANeXmE=MX4&+57qXS7eS2.9&_o@
%fc.*N%%,0<m7ioe"0sl<hXha3KP4b?P8Q^dfj];l-1\,I_tGE5o\$A!hPd+[EWb^RJ7G2!d]pKjp:3<pE,S4(3u?2X]kQ"qS"kO]
%F1l%W#.QU,'Z+nnm`bq$7aS0lfk@MSf\VtKrS%`#n!sai(8s5#)f0H4,piuZL@*5B4b>J3Ci=po/ge?9f\RNk(tsl79a.u8(#&Qb
%YkP<FFW=JKk]]P\5N#1)oQ6JeHtQLGP=\!9kL,EqllJ6+ge^6Y,[h)o)A&.7rq/5%g,lX@c@[N9K[)SSKtAXGZVFM3<p%^+>RPGK
%crSDa]jYjl0r.*^98_HB&_``2E?XSk'\]%b"KUi-Zo;ds=h<=k]sgN.nL+!Be-_Q.`7iFseGuNh<'hecDcdR9>PJO^*;.cr6Q?\k
%!9AejK#Fs:`$(`]pC>HU4Nfu]_^76T%gHX?B-2=q(tRR%KsM%>9""uB#R0f4JLl@'aF\;je0VEg*m'@Ie-RkqOT9XImUhM@<b0YZ
%;TPS@5:Fhh,UTo;GAs_neH["FKZH;I?RU>iA/hciZ$tnb32+J].#h=45RbdZa@^25MrLK0:08?hB+)9Tkf0?64=j1C9/%RW=Jt"b
%oDqC=KCT?aTd[3uq$)\]+Q5F`pOmgeMtVFL3ruQ9E)saW</e8W0Gb6D3Csk3=7!RC9R!^VV<VAl8>K)UWEX)U(9#ME.I>^6N^=99
%Ku3#lpF<sI!a$k!=\*#c\<QJKBf5s9ee*8Y8=%+%)@cJM>pp@BW*9dhE$_0eGQ:Pbb/ZW6r.0:J+a=Ui7XkF7B!!FY.Cq@pP71LO
%Vgp6S-qf7>\W3VG*\ST%&Bdl>!FQF7;O96dR4Ji0K]YaN=Ca^+-jjF9*d5o'\99^F4kGH*:Q_Shnl&Xk$s3s-6=kCr/8M/lPY=2d
%g2p6!-(lfHqh%3F!$KAcef&A)OMIBQH&mb["p$5o3*(ltCR%pN+9<_Y*as%=D\q,KJ<2;2N^^8S4q(0F-LjD&rrrc8d-C+nFC8#V
%E3iEUjB5Ak`OTX";1BDdL64Yac36H@-a$mRkn/pGK^K2qP0M=G57PL.!2(;VR)F.%$&f-+5Ai)9f^/$DJ<>'kC"=7\U@&>N#pnOq
%'@fon@C\F6'.5+XE+7L"!"$;V#`-@ddD4,X;'&0XkdCIb!=Tp.MBqb4+Yr19B3*][U*S(]4I.P4+V.'OJ\?-sg3KaW"\bOCJ_i0i
%oN$,]'9a^4;d%K[nAbrV681cCiTkG&I3MgA#I-,V"),kVT;/0>",2U63j;\e&/cl6UofI;j*9!/F,H^M]gLca?BYN=8Ufq]rCNXc
%<9AM48.oTeh/QB;%A"+h9D90//a=br7"S;<_K?:*E^3\u#PuCgeLi*o$Lf1jk7>ppS-dRP5WFH&B)l%`C';A3T9(*Kis\@Q_e!B&
%OBQr-fMRE2+?bb:XQFH^&*f1^S5-q^!,t=c^gIb@%aIagG=7!iE:To[)$L5TQY%dSR9gepHr,K(8@XgM!tuj9!MUd:cZ6-gJRSWO
%6Q?Y$i=f$u%ggDb.3T`jXOs4H+QN(4`5QPgF;&::qqSHFD/-13SfN$"1fcbbbhO>gHV^Lt.gi;lU]eh!U"V-Q:DlarFQ>E!6kHW:
%&\0:W"Ng'#<7HBhef17s@h#ae"Nq-$EL<\r?-j&,(g>Xg;7^C3]i:^9'XOVA/(UB+dBcQRX+R@/M>Vo%3/D>0=]+c`Sh+Hk+L`#G
%9(0/rQNdf.h5O:sY\D'YT/hu+e6oX9LR9bdKETdVUZ`HEY[WFLSiu!ZVmNkSjb_WY=,2gsU^1_p2$f6K)Geh!'hiW'D7HeUc5ZI0
%$+M+7:l(WIPU8ZTMs8kNm's864-\?9SYERscX>?PegNo3G`T+J"=r"7Q's@2jNOE2Jot!gBrqW4OnL[Q:DW?^4Q^V(HZBU)?AnBX
%6]r$K;=tVKY=,%$``nX*,!^6/+XD`E:4PHS)ctp#?Ot6gdZbq5JWq#gTSkSq*\gllIC%iR6`>Lj()4&1p"P$bQ(^Li?j(]lTu6u!
%kn1-k]GE>kc1?NH)&MD."-L\+GT5`c9IP-"1>sAKjP"8_X_1uh2?4k?\;^k`O<S+<*MuZS7XeN%^]Z:NlerAu@`_ENktq#6)QFap
%Uo&i+`Y=h2C"e*t*TUo;G__PQG!KG,op0k6j=/TF6(Dq2HbqXKBq^"jNCf3WG`?so_)<u]IOW]1_JZ]m26oY_O=>/I]LL>E'JXN^
%*fl(rQ]WE=#pqj:n0"^r\M81MDOn<f[&Z#;DTtsh-(V/cW_U(!_6ke(EhGu-,.;l'+>ji4g^;rBn(b8Y9FR.TiE"6%kf%t/13Lq`
%Vo"GQ">*;!F"9q]=;8VaM4Mm)FiaEjLe7g\:m2Rhd%Y/(RS!Qni!ImJ`3`1>\dVM2;HtV*H>C#H@:uP*4B5J1Q&#DeWf4P;`?'FU
%EfqfcojJ`!8(8!EceXf-9h_d=E%X4/A5a+4WLDPp*i(&e4eb6:CNr=Hc0"?S7Q#o=E3X0t5%n==34K([X^UVd.a-^P.1ua1)"@Sc
%nC5QS)kf47?""en1giPBC2DhOB;op)`&&`*%[)LFLreOHkTq2_?(]Jp3oP_><jIu'mM$sB,YZ3U!f)>^r()#40t2:%Qm#V>C*Sfc
%!>8G55sc%]?04_Ada7bO_8mc0%49+#>3Fg(2]%'N+;`;?V^'3E'(@=0c4O[mibMpIfo?Ns(S3?Dq<c)3mQ=pKBX:g_$,1,s==/V_
%Z:1!Sng"kL\5*^r$6^_7&o,Q1?:rY"+jab&M7`7##;HRQg7a5></>;U/EFo0/uScd6:8?efIZ7+VHPSDU`BPm(JS+rEf6dp`#+aV
%=>5tr0=WmbO$BH_MKo)M]DWSV--ptEQ\cpMpR>ap`5FW2&hn%iHtBM&H&<BM6&B=@_XHA>8LH!Y8i/U6FN3L>L4Y8fi!K,YQ4Be<
%A?VXr*Nt(O>fL^O3PggfkDiPDTOJsmf*(Dk*?-Z$95B[RL)7gP<%JnbAi,&OE+j1>GTH%9iFJY[2:0uKH>MRu\tp>LkS8$Q>%$]0
%8&`KN%#+nR"JOZ.^*-t\;TPPV:3DfhIMfCBLll=:!AP5:W@[nh&P^i4o>.S9Hls?>1=.Ah'-H*I**3i$-*^5#Al3;Ys5)nn6mI(1
%_ER>"A/8htU5=\G.YRC2F2>]J@t@$c_?X\mJ7fek9#58@k1cao$l2cLV%Am1T^GPT3sZ2AE*C]("R!DcI:*V-2$N])@1eXq%W@&9
%4Y_GL<4Tn!n/XV%kTpgL;<J6I$\?1uOAd11/4^>!JUg0I?.fm.RXF@=P$r)<JfFCcnSquNk5c`"2tcHgW@rN$K-b+t<G@fk,8@uK
%<'GCScmH!6B]gN9QiTG\.gnWc">5Dd"cY6(mY;*2=/Ai,Rh?t^OOU)DorUP!V[d^l^o(@4R*H(RkQ'?<9lP[>YDB&f:SlJ*(Mo38
%Z=B_N_aN*&T.*&`!sV:2$+=C`&c0[!P[/iH>EnsS"8StuY[B6.jnmj?[PuoE;<Y(6$%^Wq5T^_C]oKXY/q?5#\FVfN4bMUIFXIX*
%_+Kel7pln+L<_i=.bNA:Cqscd;LFSt8tsJ47i9N;*7M;l?6DH<%U2>?XG!^DAdh!&B-rcj%"O/-mpHS.[:#)4#Nn+j$URg=PqGpD
%-jr-4G[Y'bK\gJ5UO\DAL:^!O^7*E6=6i5^*YHE.dk2paN177AJulXV@(@EZ%fmo%OKccm`9i;k>g[u\Q`07#r%9Q36,qb)PM)8G
%9$4>RFA,@X,GGZ%!YG4*W!4;_J[iFZ%86uFmc"4ekTX"2Ui=Vj(hgI660n<Vi_/GqB#d'UToq`-K8CKUidlmr,fJ7LCVK5`qL0S7
%b:rXYV_::A)=%=X&).sd7>RJ8n@$C1WSK\7Rb:Ej+uI&m.C[U+9Rk[#>!Y`^fb4[U8[]1ni&lu1Lc,.u=H\Ga&)tbXX%lO'HtiF&
%&n9o!;C??M]noQ`E&=i'Yr!Z*0L5^J:"cb*+tIN:qGrCf7Al8cCik,s#VJ>0OomceRMQO+\fK:%(iCVI$5XlM/u*J#`P^)c>88fe
%ng2ZQ'_+!/jV/;o]$2[D(aW-umVjN#C=*1%.>4H-7Y\u?CLfTGH4cnUE,RSI;3Aua6r$Va*jW*$j1l/02(M/k-&h5#+iF/:W&&"X
%(m:K*MQKgdMdpQM"fZRD9cm5K9W&%!^2(kM,,^GN8A#?b_'<E085h6.LtKI5,)qNn93%cIdo^Nl[FodT==e,fO_5k1+dB8Aq2d7b
%SPC#+^0DTWX<aI@a[d:u;9;8!''q4_,LaX.<lRmn<;"A?UGS=RmA0]QOAIk[El2X9Hl@j52RJL2D)4`hOB?8jm?%*Rm9("QPXm08
%&ANM/^Q-P&dCW&7BocqjKmCOk/Pb\J3!l5j>`$le=%$%'g2Z%GOQ\VI%SM]hdDDp;+rILS*D$(,jUi`_0m&7sYM<eWP\#tJ)Cuo1
%9OaY.8%::#67Nj$j8i)s!0'Dm"&D\C,[-?/!1nin^+E$af4%h^/`Epm2W2HGA-o:f9N,+U3/at0$$-CYZCj+(r$f'RVsfO34j8Mm
%9QGsiisEr$,,$oJFiVW_r3Y"P#BD7S_5QLA*0U"[+dTnLJF6,^ks_;HKK<Yk1kQ?:BJY>E]nh>Fl")q\l4VCbVMS,_Z-pkb#!iUD
%1WV^laUeMbW"?mYSf)"1p&dqnVjC%-q*HB:MbW2uF4!Pc)(X_KW[h3X=1"/PY[BEs-KU%S!#*?rABgiQ!))fK1+ucEDZnd`Y!#)D
%HZ0V\_3iXR4VH$S=mQ_kLP)I[&S;?b6l5Di-J-XdBn_Dm+KrU<HI/;4^[;[@;kgKZ;;DCbY?>:>@aUV_Q(aH_%ta=@MeEqq_LO3q
%HtKo36<ART[a@TQY(f4Ddm[B\,&9"QUdJ8=2)lR5WNC-BOQ[IVM$V56W#8(U"2\MCUmaR8Z'TZ$9L'^q*ir/WBL373f7Z7-DFWD/
%+_L-1$Q)L5J;cC`,LSn65p$h96J\Qf6GVtN@6#PfIiq`W&rRJ+ggjO4V=YTLZ.fX$)o2h'+\i,>*S-&p-\.C;8Okr&pDFh1:I<D6
%&'H_qMS;Oa5\T:NinALo>L\r@b_u9[ZLO6ZH*\\0V;(NjqnaF>(rlr3OQ=iR(H(]Zg"ReBJT`/=/WAV&nE5W22He>Cpf$!$WF_P+
%J]L4j-&^"@$2Gl&)]5M(h;D%sVM2(jQ%@Opi-ghll-eA^WD>i%4$J90j>kt1ClS)I:[54E3(9W^/1YVr]ZN0fE?]o8!%gI!.)Okt
%>,_UN-q5j*0'cnllSHK'Vb+Wk>mld^9nfFg!TZEV$$6_3P!^.7>)l1@K\2G*?^*!/'V-VKL83g1,/^?)</hOQOe8AT"3D(F)lPEM
%bb^J9KpfA]1j`YWJR`V'iakF>I^3p57684e$U]4@;?UU*<Qns3hJ&FBE5lING9qHG$'QPE]Wf2IP*mpaZ'i9Wb,=8$m<0Cdo4+b'
%qX>bgS7hmjNGOtp9o5%Q6t13Ib-kqEX?,]o?j>PrWkP03a>tPAhk6,+i'Nmu&<f!XDM=m7SC21QP?JmoaILZ6PX+(>,J'?:4g6T8
%Ta[m+SLZCuU8/'C2`lV!E<rr^11\JL#5DK*1`N<W0Q87nif<KMWlkC,!@VOY'UE&jP&H.Cm4s-p5e-*HPr'Jc$dA@,oW6'3)2)0r
%%\RK=j'?&&%uSVdAkKj@na+1J@U?t6--J#GR2]TT+3F]&.!Yh%39'E^8V"&3hj^I_5&no;CWs)8a_)lc?-l.^!LZCF'/A&-E.PPr
%P0iO#jII_>k4m<A1%a8LTOfN@q#mZO;=ao^KR_(#4Ee+@6C?BB,3#Z=LLU<,BP/P-HI2#q'N\\CK9^ajrMc-TF*'[/9b%fZS"WnS
%MZ18=14VG3osciN$4%PPVZ^;FgC8lQll`\h(]g%;+X)D]c\5rsEL*AmVC2N='94MWE(Zl0NpK#N&iD%E*$ed6/>GW*#SQDi\/ZaY
%H3!;W%T;4NIhgoJ8OU'SWel?n$ot<W)^BNgD,2?f2BA]`,\uqTBnIOQ,8lXm<lmc<q[aJBO_2%e"ZV@?P/3RJH%oM)RmH^4GI[f!
%CPi7f)3;ZHr88mi(>rP/XA6ns86q=H_\,s8ZcEb!i/f3Yfo`Rue&9I2:gPW22J#GaZaL</-lCc.^0onjCu'Am0-\UB.I.ET=sVb(
%,S+VR4+VpWhjF:-a[QrR!,IKiS6C$$TLNC0pb^YpC^=@'n*muK<>JX$,Uq^Z/1s0p%)(P!_O^ls@\U=.WYe,j.,'lf!3p#V.jm2*
%`TG:b*t8Me\r5_Id&%&M!h=IVmJs@*1W7a<QR9;B3$#s3_LG4+"9dtV?g%pOE^>o.(JU0V5QP>ToF(dlii9:7_%fS0fO1%6?d_?l
%a$Yu\,=-[B)H.JL&MQT0[_Z$t5a$:YH%KfXq>aKD1*(4YT[k9>M(5ol?(bn1*'-&.8]qSTbm7j,ob,C5klI`3OqY0d(*s'A.5E''
%,FpPc*"Pq6A;$+DIl^-(M!(A3#FL*J@t!jVdBem9Bi[?Ge/L-<<g$"0?64r@1J%<E3AY2u&E;$Y.m)7O6:0a9%#[j&hmQW.3kSU)
%J3sUo&[I7i*b_+%9Z8]c>p`k;G\NIN9#`sa(hT2!O[:#"/DXOA80sVmk[u1Y`.UL:NJn2W0'UH_E^l8'A=KQ-Kg:Z@%QR!J!PqG^
%M&7qI7VU\_FC48$G:SI4ieYelhB.f?h&Ng^q=!\gNXe;_K#b[)d`1;Ue$MGs=-<n*VWk[;=O.l..R)Ms%.2si1Q":)#t%M0s4CY8
%*5240b]KS$$SeX_d&qo,6%+K`:J6\,'j1f68_=rR*-2il.EbU)D,H5Xj?^^+\6c^MN5D#6Ke$D6SnTQ*V,&g#k\:>I0``'WNHT9:
%KBf7M$O/EG<k*Zo;kl_nJR);n^c-\p"(MV:824X<*"ZX*1H0)GOnALY]prN5"i;TWkV,uWi"3_A!t9RX])c']*b[maS?X5<:"Bg[
%$"6[n",'[2+rVmfTVU^e0Sd.]=iM$1KOKLHS2FJH_`FL+[ih5@'F,p$N=n47:a*I@nYN@]HAmH5,SP])Nmp@0drGRL!LF8e$*@8`
%Z:L;sCe70`,FT7.QfosS=<mC;^am=I7MqL`E[tfMk,8ma#$4CIH;+$(5bb_X3IPC!M54=3EnVY#NU'^A"_\!+N?a?-#:\"+]i6Pg
%JiH<s-rU;:!%B!9nn3RWa&88M'9'<MMZe`b^'Md]Iju)l-5nF;9FB[;=r!2L7KeX;TE%sS0[:[]+B^&X,WZ-dPT"$"dU:.5>6>dX
%FJG44[o,1Z1u=T7Y!NJcZ,&u4_]n:u6*$!P#)nq8ZN'Go\^3pc9#M(t[]if:oe5%?`:+qC)>"cN(W;nVZY)ZEa+]Y?;Ldo<p)%NG
%c.N^p:=<K75hj"`-%n[:;>QR-q`nfQLPA#Cjuj33Anm8(M)^Q+o?'>uF'ppgN((,B756,8#"0GjQS!TF_[tX7F<L(Ua?A";"dg>V
%6_r>&Ut&cV'nt/)/h-Qa+E>iV9%)&1OMH:\O<9GL">qMd0a+he'&U(LPS&PG!82L_cR@o,giB><kI7AffJaX&<4POQ!O5XD9T$rQ
%C+#H?<k)D-91J&[fNU-"a?9MC!/=JjkbCR,&TB)?%e4]TN/V#P)RX'dB]KZ_lIX2:m?)kq8c?0_:/A#gO3GXT&n2enrLSUC%d/C;
%Tu`,N\4*;OX)NV9`<'B<M]0NZ$#`!?[53;-[MphS_=WZH&jm+:&uH\@3WLJco&JjI7("486*.nDe-&q4m?k:(2B1?'@<T`<OEHMX
%?q078FGpU/#H5-/nP66_'GWi;GaF<'A<L7gaci*p#3PYn4qdOAXJ1ApZ18/YKogC'#kUISb4EKO\Ge7@rZT!#Rugei"XLtR%Ck[7
%K!K=(+sM3'7n"#&*!X*^lmX0!076ri)RB\?`NbVaB1X;16C&EKDX0](_D0KX08ICr8'#]q?^GWYpfPIK7Ur_h[!9PAQ!%bg0B$QO
%",W7G`#:CS!e<Nj!aG_)'TRJX`[##F:Z_sl<Xg7L,KMIbm+<P?3@.X^&Y+6"O<cAL(-Z<,pE:]uNr0Tn6@8idg-uW61P2)?EJi.8
%<`2IXMJl.N,e9$!(HJc+"mmUG1aMFaFH%V8IgWj:,(r(sIKc#eY4kQa/!H"5jt'nJm#H)PVBQ+BPccbAU)"aGOA)mQOe*a:,2GI?
%p(Id?g#B'_ej(SoVBs;p;.OaR%[0usS5f^&/oHoXhVgeMC0AM@]\-t_\B#GrQQT`l[N4Jo4=fN[k^k<N?r.$b+-j&b.L0H-b\<Bc
%Ha4o?SgT>JF97S")m+-;!U6[S+`Vk`ke);`r]p?+@%a_nF@B:\PTuj#D=+8)Rg%!;@gb',X"q4P680VCrW_q='r`C@V9[j:&K]W=
%lo:J7?UR(O:t:GXETJ6i:5C`#-s<jd&lMl[K?5\F0*68!]TMG\$<aF3*MJA[rQqH8GVOBI;55B_>=1s:R)r;7$j2%J:oB)&/ED9:
%#oj.pjH9-\fGYr"3mJoTj8q!'"9LND5!Bg_"",mOiACVVkcbiE.FNcGXu3#o'C!&tE3G4N+E5i@jUiUZ[^JQL-7!F*7o5$2*JF%-
%*L\1/:#jk`<s8Lhi!5oaMSQX+)W).oAI</q=D@PZR1L-aR"@5>g7a4mU-_o]!,[JnM8GOn'+8oX"M]&s`Im\b#c,Sh"pCc4lQ_CH
%W[nctieP=#VA2ki$Ue\DG8;(X,fkm3'mGUU,KG`M&7X_Z)H?#)#1ms=$&V;@)2dA7o,0g>-!i5#=su\d%?_#T'Y9fr49mKpTXe^s
%'h1e-9Z-_;JjAllbSkt[BEH7$JIrSq(*coh$m/f_?de$[i*+9T+O=R,:++IVP'WN,7@DoOH'blmN++;b6-(.p"<l_=b&lQ<O_:mC
%BkJgOMNG-1!LV/"KA`e;X^h;F>tHU7k/S>FJ:mY?n#1"FI1.)A9fd-Ic(cZikZS,]J<RbagE:>hIG.e_i>G5l-mh5fXRtM8DDj6@
%Q'njaNi>en%t.6Z#Gq$XNZ5cC'Cu?/H>&%!"^JN6/EbC/.2/kGUnCq2L'2,p'3gtL0tC`B(fjJNksH'l4L]hV%lu)JqMb1MQ*2"G
%&0RU*"lC)$pB]-NK03asfi7)!'kK"l@*"16;_X]8eE8_<:L@)N4]P*Wi6_g<^uYPOF=8F8@'M("'$\Z\!F(oB6du^Dp4Q%*\<*B!
%N/^/`&Ic;Xbpc-?H;,L?knDlf,;`@"D0M+VU*<>)Nqi\3.gcc<r\SAbRo*uK=9VsD`'iXZOlZF^e.SV2YqS^B&Ca/%]tcZP0GM[h
%p_jEBU4.r^TkePH9pJE=&i>;,opR/E^qOY%&dOd-7bjUGV)s>_-tIg_"XjB'Lj6cr=(@0um"&X.-=Da5#J)Td3"XCT:3dlph-ab^
%,Wi81.l#dO!t_=%S,`\oeJ\lprXU`I*OJV5@%+B)$[+(2/d.gf>*U?+2s\)[&'7#PXkg5<=EPtNO'6Kt`&>Q?Ye^LIJ03@`)MKAJ
%IsbqA"RdV8#G^Cn7(Fj<(6`mjM,piC,a[-uFUF:I`0+MH![JX8Xb*'5(e?;/,/=6A1B,eG\I-7,k^b$l%-U#c)?.<DYnS1sW88CY
%0uUlD=bi"Qf*G4[4c9/*GFoR'Zbc!?_+>2cdl;?>'"NnapCS!SOEP&)@(%u2OFh(@"6r1&<jei*WWS'Ug5o9rXsS#mZUD8%'J3od
%^->=3?AP8X%,XS^!<]GDH(I-_IMsa=cf,.'-t#*WUZbhC3XG6?Lu$0]U>(;#?*jrYddq&ZEjn)CM@%U`m_jZa`/kP%?&Oam+`/[.
%fK,6+`>4L=BEP.8X^0#=\=c"1O>q3u$[>\SkmmiN#_,t8`j/"S`Nd=Sa$S9"1ppi0%jBc!p`bZU'%8Z_Z#(]1V!V:"IGpP8gm<dD
%YWRO,@mJq"e!@74!s-[)8g0!UoG1hu"G1M/aj]fo/q'.=_E-u)+?U5&q\8-b(>8lOp#)?T&"`c"Z(V1J9XVgI!spb;*s8o"O?@45
%F"ICZ(sshu;kT^&j.]rclPLAmgB7ELF*^66H2%^a8TOZ,n29(0o:L/'8;j7QJM&UMK8pghqHdQ+-Wh@QJ*c%s?4;OM>T9AV[(o;<
%C-2jP$6aIPSHXo7LhMdT2n*]lS;:SqVqBk1UqEEE\_\<8M8Ve#EgT[6UPMeShBe^Rf%K;!<q><r'qoc)M9Ag2DrJro3*,Q]&Mf//
%s2]#B!&B]"V+]74VHLii5Us'+<c/,N%XA_kPY4m3H/4_SX1qsI!f\c6n5<e.6Q9]r9e^SSfn(\_6!G-"`1ll8U(a@mhogYo<.UcP
%Ph+l_6lolX$<\<KE:nNrBH][B5tMIo'0(_+9Wc<I^28$!$g4VNDSdY9Z9jE\d010:Q;"V-1T7o#99"`W9R#JkU`X,WEfeNr4]nim
%0hOB31p`sf,"Nu1:Vq/080eI0<[OdYWc\;@''Y)A/j9ZS\+bcU#M5F2#fpkAIQV_7Uh<q5DA6:9;9QdrlV\kHA[Yc6`]tQmGQ^>S
%ZnRPsR7%&pU,6&Pf`Z(&'fXbrN/=4"4YUSAB^'HiTd,gUfa2mI0;G5)Q-g3]kMVjDi1j$h'YS\bUC;g<'k1#KdT"'lY[`fVOf$G7
%BZq,3m?*L9\h=qp'd:^)O]U4E^mbj4nhOBQD!ull6c0-]-qGVFZfSWk.^88E%21iFM/gFAa;SF'o%#fsEam+[_jZ*5`[X2'TPpPI
%:r.Z^=hI4C)K*:531@n?C/L>di"SV>h,s"lV^">sr.G_W`.R\(Yk!c,a4A#$eOD)_%mGpbq'j1!d+RH5,XK:njiq2XNY4Rm.AiIi
%:4,3PC>>m=/s7&L\Q(U95m,T0C@6mVa07d#X]X!X$%fF`[iagoBQ/_kKpNYhKOE@k3^KVe>Wmt.R5pNR>l]9L-lk?2J0C%5=Tf0B
%HU!,#N$0>Km=kHp[2K#u."_R[W/H8i)`#':aQ15,\S`16H?MVZWN'UU/t,?$$r=i-pOo_3[XBo4);0;""Pm9-=^&EB5e'*(2;Lj)
%<;!.k=%UR)R<Oi-:*V'VlnOTuM&dZ5pKfPs\0MYgF)3?@:J[@I&;7IIg*Y!D(0EZLX%7Sg65?i+=?9H>U)AaKIsQ.:#>q<c3@@dn
%K3JMUM1r+7lpVaX#o\A.OgKQc-m1a81t")VRtU0%Ag",R!Nf+?=@d8ude+hjn>pGiI\2a<SXh!XS1G.D.7F3O#")#bo'J!@nH9On
%Kg`sti0nikAj$P*8[iOg-h4\MV#uC]FJ;Xq/<6YFm!<+pHS;mF6k(8PElXhB<LN>G!44'fl#%V,2^LV8L#u"dPA"FTRB_L=k;g0U
%QA&IN:qJ.V*^74Zl<ENM,%Mp,EhSj4r253r18napTf6>'WD''m@N/2LD[&U2@-[6\LcK"FR$/W_j^9$;CEelt%Nm4pJrGr97?q-M
%.DburE=e?r8JpS<0g;.OO3"cD>V:%?!IXt/:CJr*iat267nPo1c_P6\Z<i[_6k;&5/?3gO-lJCP-or67(#bS.9B)\MPn?M-%2I<Z
%i;gnU",cXh>NFNC,KQ*8b^i21K:jn$+fn7EEBrQH=Vlh0OBTsSMJ_YV'`O>d'P:%5*Jfn7Z1Jo92,:7!=B1:ie[2Dm.T.r/#s4L<
%4>LjVoDm&?7ZmbMr"RpoK91hM.?E+-Lg)PdKijW.C9*b133>TpUBDB2D\4q*rR<8TTaV@&)F92KLr09].akCSJnaJ+Ou*mO@0aS8
%Sh`p(R0U'.25)e7+;"&:G('m&UkgnLTSZ=aG_?[Q;#u)e&lb@9fNITrA3(7o.aS[Tk/[h5ha:25-l#t-5m_l?aqC*`AfiGo#MUZK
%V;>pfE6ckr#"GPr;Hlmm-7$fmXP`/ETW>3nc:GSO8O&MYo(uk#i(cW"KXs`'.WVAFd7HT\@WaJn3FqCEct,D^f(jY#]s(RpF@+FH
%VKKb;$qt@H%+@ihZZP[ZVA`;%CE%^OOgA=-RPk6CX'M-Y;%E,#oW'_.Ja*k=(pPB$+A&u7LjB@Z3=!Yl$@jkZhB4$%FJA&HOSk`T
%@0.<TBTkpr-=K\oW+JJQL)i0s3O7[S'alH8JDP+cN08T]QnlY[oH_6Eb]c^G"GBQ7$(:&=AW\rblGk=51*S<%>DnkNCmFe6iC>1Y
%j(ErYN#$O\i7q"3Yq3\+N/`8^4hMHlH)2op_M%9BF@]BS/N$)MUf8$]gLhZ!.t]IBHOB24Og4rnJC))?g+,kN'<id^2W3b#Aga:2
%883ce!(9bp+p.KB5^mZfT"lI]n^=*3hDCF#)2"GYcB=iO?++$j/f>#=,_e8eRUtJ]@O3o_+[P278b>$McU-iJ?4"CpcuAQ=es3`6
%AKp*fL:m=\HmDT)oOgGKagTRQ@rn:bInGd01!_Y.K.Ik>7M/aLdjuIL'om#4G-%@\S[^)Lck/f\H@LLVqUfS-"VD)E,fDUf1.gpN
%5=Lfo'b+u&-.fH#[FWQ.j=,[K:d*;d]W$M2.n&9Q1lE_)Q[sgP*r.+^A.`n@Ob(M!cTJ4k*#89%^24[LGm50aYW5Qf"`PWJ:"+3Z
%,Aa_<Ut6Zmhqm:hkRo7PEZ>49aKc[KIE@)T?drnN73J2(3*&"VX6h7A\-2/2Th0E:\C5\lSP7tG#V8$@$HN[p<uB[g\<7"]`O"S^
%6-`L/.=DUJXV:bFU@?!RVJD8Mi'@cO)!b`%6YE^3_AJ\aZ<Eq%P12np1hQAY8EPN"Lp9k56g.fZ(Ih'N^MPSE4[8K]'Bp49hEp()
%V,S\rYAmHd17#cOejhtP?=Gq4f-`(';f%(/)%1pE.\Od7B!VV1+D+#ootR>o3h?h!(.)5oCot0DWe,:RM\n;Zd[e1,,ctq#/&=K>
%nR_<c4=AL5MY%(gdR_',>_-ag$:G\(eDsK3_a*J,CbP;/d%s'bgdjW_/5W&Z$UA'SOiTQah3l>mY0SSN\<mE_Z!dqGWg?jg#/uFf
%-Pfto_c[Sk2ir3*7!lsX,E**b>Z"6@f)OY6@P9?4>uLPWUNV@%NhhkX0.T,QOdcf^i%MKY3+UE_GWN14=DQV]!st`YL6W-Epjs*&
%19(Au\\k5j70?(4/6MVA#Y(sN1QK\tXAHB(E5U2'-ZY$ll:EK`m*pl22jcq``K$s8+`,ZhYkFk"%Aa104f^)c5WnAC#INP?T:aeY
%,]8IF_=&qqS^u$kX()O;5[:^'A=-[oNhMV&&NWAsoARcTJf/ZQF^H(@1DhJJN=<qfrTi,bW>!'$@%>dS^GLj%?afbBh2JESfLdP(
%QC0#t+_QV!/[S,l\9mik0a8H%+2P9k`(J1N;6mH,Pf[Yf'o#7.f4-dSjq.F#OfZr3/0-F5Fb$&,:;M<3?J;&Dj@R-id^hjVDg%db
%Up2^Y%@-IJkjM1F-a2`\Ug8cKc'HQ@T<a9r85ba)DCAp9i@2Rn@-s%_$S'r.0S/VA^I.$<Gp0K2Ar`9tCZX(3H@Y/cL//.f82=,#
%OiEAgR'K=M;oKQt9dH)J_upc`]-`b\<*iOICGK[Xg90(A&_Y?82>0<I&$h4@YD)penEjEp/[kdp7"jl[?=R^N[IL&\JSj=Z!ddD4
%q_1R@?2;XKoSCk\@K_>=Yt987`rpr=*]2<b3`UnIR>aP=,2=k4'q>tEK[-7N=U(eb'Ppnb*.QOOAN=CFdZ\.&^tgA'01'B`A\nY*
%/sU)O4LEV?'Mt1L+E'u5>"B(TGK?-!D%3j@%:m]3*`Bh'+!g8SfXl^c08>Xf/`(a:6r[T6f.i*%Q;'%!HR-NS@6p$hid6.qhH=5E
%fnEZ6dp"MR9osK,9-`01JQSdX4jr"ToF92IPd:sqPO+,5_35$a7gVZWVbu,H_&5h3H#-aOe.$:i=,[LkV&#d0'SpSnC!<giqG8D1
%aWgj$JQ,6UeJ(UFWu)8LML^^<7,c8SUruR$2YG-'=("u3_5XI'ZlOr0N?,Qu*#f9k#j*9F?;WCfLqsBi%(;rfPg2$i-Y4e2/CL.+
%%:L1kO%ViD+S-CRh,9$dQSjT410VLk.A-i,3uM28@SING>UrhZdg70/9/0=cc\$c[T2a7X8B0uM2Q!/Nl-*R"L[d[aCqpu\624Ml
%0-CGPR2llZoHD@9+Pm8I!kLa::93co=fUtJI\FOKb'HNjYTumY,`Z8D;=AKk?quT8UJgT$gA&CTBhM,$!%rriOd:MU)C('%PIT^R
%IdG^O-"EfHiRI':eZo666"$E8f9%?t%@]\^M.!Au/Hj!L,,5T'e,X"^Cdhgt9iec"i$7d[aOL'HjTr?O'e'1s-rpC@.YV%o$NX]*
%XHmMp?7AA%If`///K)GmB0e3)Oui"2\PN!C!4]gZ4%`$Fm=k4m^D)M>7X1Ic.nHNgY<_OpgItJ;!GW0%:)uAZ#H?JoU];eka5URF
%4*sS17jH%$D/h<Q:e*PHT`[j8AB!&+8TPK4!phgIM5b]C_\PeE+dJ&58'5D"r@*DQkDm@?mI[dhOJfd%($h0&cA]l?AUm/M8DWb[
%fJKQ]@k0<TW2Ljbmumm5#GG?tY2d!tG"VqI6HTE9'1s>ZIV=&%@b!sl_n9ZSW0b(>@bK2s,U>G<7$iTm,;?N#)@P<A'r%3%S.Rdl
%Gi(iK'c*j:AniMi_/UHg1GE-5.FSk4$CPjYdAo\V[:3Lh6N["96[iui*m$mioi.<d2f2T,ggDEeMXX%/<<PZ\(sBQ4=$^qlI7?W7
%bh+]c3>mt/hT+"i7M6,A)PC+L0J8e3-IX'()RKh`T<_A,'BLG'4s@F7#ihU/[:N[&6fINMi'L(h[tjhMBD(<Yk%tkd)2)!$>&md2
%Q='u3e-RNO^]i8S\>h9fOpL`<h5.A'<*WWcc=Wc<GggJ&W?F\;)9H2?qn`=8b^_Ap7nFEA@SAocKK<X]*N+F#;D)>l]"]P*9i3AI
%T)R_8,:>RO=<cc2]-OZt3,KfeW0f$^&'b#us!di3fS41,I#O%YaL54'_Vb'"&5E])?[C\h=(B8".5m"3n6/E,N6'iI&6U-9^^9<K
%11spdQ,n\S6jk4V8gF<j/UF+@Mh3H2T`M]!$Oi-7)3cKtRdNFfWMh$qA?3Sg79Pb):lc>6kHU0%NfTFa;!+E\OCTtR-(MKn^mFS+
%DGZO=-q2L^SG&ZRW)VduqhAhOdON=W]%3'3+OWjA-)n<cZu<B1C,$@IhUs#[)[,JtO;UXJ*I8]<^2WNtZ^Kpl!#22q+_fNUdRt'J
%4Q2+*8J6e<iK83JbSc(XMs]8`^uhHrXTe2`"eZ0I^=X9k=e-KhRE*5OD#n6^Oa^_L!&lE\&m!q(mS>,l&Y'9`KnMc+Xpu-f\X'He
%UEjpK0hWlLoB#Occo`&$QG02g`$)fi$b%J6D,B"C2DR.=-AV:fR<=S@=p/\3l?A?KFA[MP!Kg!6$2ATH(OL?KWbdOVJL\X7*I:'P
%"hZ.RbLj-kJ#q+=n9cN8;f)-8S8QsPX4Qd`5tM;PUYMK1)eDf#XQ>0W$Wn$@4l^oU@Q9:.*i6SF'4jX6.`@$TZ!=Y:5&!T_c?g/1
%(f04+j^TX5]GE+FPn5DNgf^U2gIjmE&Kn4Li5)HMHAY7u*Dgt$rW:3OLG@WO1eC0pgh7*WRN]gjj60_p_4WKGO[X:iMp[=o'Lf^r
%B1dd\CeR3o*Cf0+8D36gg71I-S[JJn?n\$.#/b"!\o;?q22Xsr:'QNUdCu>C$or&g"YCMIYjHRnN&X%T(hW;"HQSmmOQ/\s[WX&5
%WS3)o'1(rQLee"HL/qnD4JjO=8\,7!GRVIY`YkYk`Qsean-Kl@G9hTh.G?;%&<3uT[ZDDi4ZH>,-ZLa3>n__!ZgFst6?&P%8Q'Vr
%'1;p8d4J*3d%g^sodgo2UI?5sRac"i,%V'FW=Cga28`$9DG8Qa#cYe9h6P,k.!O:=OV`Oj>kr3*G!\73P#3QN&:J&,!b85uBc6cf
%6=#Zf3$q"9ko`hs+T/Io::7Qp"poh^db#GZHO(gKN_`]u_HnNef6HXjeY7<n<kfr;/)Iugd229bUh!Si@Ti;r+_RqI+X:6NRNuKm
%$4g]WhF`_5!j^>>0:cPf%]oc'BT%%1d]hSa;kf9RH"n`B*o9;5a\Fm>aa7q1.10X^^.8%Q/PM<a(3Y=2Pt)R+q4[%\LoHhu6&S^q
%ED/?6/(>%c+r[pk-Q6Xa3KQeTBgW7@>QU^]P<F`\!b`fZs%MG+"B^>A%9q&qiqS3q$9JHorX$S>#RVhh>mA9/@`CBBjWRcmMKV;5
%$qC<&#Ikm/`8!i0,PMgEW'ncd/!*Y4WP[e-d0H(Ej\jhUjf$Uq"2g*q$[cA*'#/7fF(*E?k5YV/:9(Du]@;d1LgrdO2"jTb4_-)(
%+Cla1F;p,VIXD_M`$2p-^IBHF7N.3fgJ63''-g71fee]`JXBis4#J/ki3MEf/Hi3r`%")iLJBfp9*lo2$!GYJQ<C^5V4(?@."c=d
%#YZY8@%`k.rmKB\"QN_QjjNp/%"X9l_abA<@3\?d&eG0`"A<8sG"7Q[[e/N)fR/q[KIEr0"&t4j,"2Ye^b?`1)V/VG,:e`%=:)nj
%#fZcKgbCk7P!^FnpBl81iDG@V_8\bH;bCD\"plCank^<nI;>QfMNMJ)hY=($+A3.GNg.lrfN<.]@+&TQRtNrL(n>64SJ/p_emICC
%#pU<;'!MLac;#U%aFnmhTbW/]<dkrieT==RQWVZ3ebXuS&B-'@k*H'S%,$//RTNUl'4j<S!idTj%$[i)[5KrbL#,6gMhXYp6Tb+*
%J!!X//DXPt+kK;!)dXNC[fdK'HeU=#V,bAUbg4Q7=I/%5EfGY`W@)V<%$obZOH4O6*paO+@gGB/'7`$'fOA+B1C&n%<>Lb$8I!"5
%XA3BeK&D%aU)9&u/=K$0R`)^B;'L>K=6P#p0Frf3Lbni9]TTNEO=^(^U]m3aRo,K)LU-E4qN-][J4)kj`8@'X'E1L$k#tcK1)O,r
%`^oV/PltS?6S"I7=nA;^PXa']Gs8GJJ^$G.::CRoa4Jk4DPS6]'.5M\`(-5^$'K=^J/JG3#E51^fWOGI`M<k<.LODA&</+iXUTUm
%'Y#eK!lrV$@iet&1cXl]5V*otnkIU,4f"=p$qp<'+BGG+8gUYHY"?a-0%q0fUrKWh@+Wj"j\A)B/1Y?@=>?Neel7\Hbn)*d1[SB>
%hj$Y]80d"`aV+P_]J.h4h8P_$IO=`pi_g%CRJ7/A;*?#ea.LonKps-4[uUh![1qTa@Ej$f&5n#%8Fi-A=-@FZ[6o<pg6!V@k_Up/
%:uie7@<so=IeKjZ?(E+aU4e7PG>irQeBALd[diCOU*dH6dc8/7F\8tqZK'on/LHLRGD.FlIY/Un0cKCJ.C'X9\E_RgNd**m`f.s`
%;"AcfAiqkIigC6.4GbB\OU;W6:5L$[;W0X)DK^X=YJ3[S_W10^4\WeJ5cU7=<&5RX$sbmpPQhY4>1D!H=n$*#k@#XPK+Sh&2fdjH
%M[Ul;S9!Q(q=:1jBbYgBO'r`8c@D7g]r2V&&`sl^9&m[]<s[aQ)>tT*&j;i+I[=0!Rmus1FL@;mD9@8Sc/>j*hiWm;XD3ajN^8G.
%2jj%N0N5t=B(Ulp!opTVh@Ve'Cp;dHR:NV"oA3X&`=/3]Gjd3S5igX8]QY.RYbgS;]QY.i_]]F-]Q_=&pi!(DK6AO!oo/RH3%85!
%Uj'dL5@`lh6b`lJLSg#S"`&ta`(G8EF=)5kb'+(D$2nmc\i[D9BQ<BTGAr*g(tfh\*Jqc-`Zq8r]@c%M26K$f-mB/VWU@!m8N/V=
%\f9!eLbrTd]!Jh$S55"0/CKUc]f2ZIM[[$E';iD,O=OAPN9Lg29PBE!9R$CS-l;)@G8&)_kt]/LO%abF3V%8N#!6UYP]Y6NmOUUe
%5m8uL8F?S]cGjuc8nMUX+smT.YhehUB^P)$G8<0SoW>$-GE<.8EML.PYU$mi,Ma@c;?8MI];ru+P_sXq4%k\4lo4.r+;Tj.7X&JG
%HJh^?q<ffEmR]Q#jh%jTIj0<uq<id=`*SJLG6dacPQT1pmK!"r8EJFdmJmnHjHtqqcB:\U4FC)A42=Mr)5#@5;8<^@Cj5Xt9<mYr
%G5u;#E,);_ZN,birc:PQBA)9;hcf:4/4g3\Uht3t(+p%'5j*65QMch&Nc]KR6#^qW4%P8"hi2GrBYu0WHt0c5WYa=pVegRCb_&_H
%NU;biDBuK&Cj54X!S>>]m1*i2<2+QA4%klJEc*A_*E'%n\"D((!V9#LK[SZgJhG)#dbPKr%fNhW\iWREH,*'3\i]57[:_G^mO[Zs
%]cHA*XOeeb:3Qq7ORU&Mm`pptWl1%fN]C_g2V@HE?0"@EUDQRNf%kPY4$k*Ra(r\<7mm\^9dna:Yn`ZXBl%u;EH[!&:;dR>/)B$+
%Y=<^`%o'02W&LigL=Y5Fm`#hqE]Y0'6uXm+8/DA?dOR$HSF)>XN)=c,43M.>M4Bgt%UUQ(7F0WSYf?mu>hSPls!%F#b')s(Ns/Hq
%`cd,0A-m*3[Q@l:84';\h)U4`;OFfH!>`ff`Jn\X^g^i"F(;fq0Zdaem>bS;_Od\(?%?mX#\@MXZg?>$BnPj!HEXTd7X#)o*R$4c
%h-%2'd,(>Ah#WL.#S%d/*C7mTSi*:T"!iNWHoJVuOl4)GG;oMC7X#([#iR:MFE]ucPDiV=]7[7$[,)\V*>Gh6D)AgckWMhcbj"P7
%HBE3Me(n/9Lur-A]<d.pNFdb1c8+1K?q*P9_b%_bX;Th7Uf(pWq!NAI;aHE3%d+PR.Hc)&39LDm[.2u*i*+W1q<i&qY.?WuO<l&K
%MBh"!^Eac3)W.)3TXD$DI!8EejF6EBG;uU6\^1'=/8Fq$ACgPD@.nhG75hkA$PV=]:Ii,\,Vu_Jg$XA8+Q8P6fc<1q<`CrZ4#d:1
%9*5IeQ3ZZ*R5<Y*I8q>Fm_Ag3FcO7Y#Fd>W[m>)Up#a`EEX.4>fTG2H`Pth8V78n7**QN,_]=&08cI3FmU.TO"+%t*LQi,B_Ag1Z
%2;h\(1ic'(#;HVS41uX[Q@._PhThRuWFkdG&:=7QNS_r)KcoIB6>m*[OI=GYmI3E/")[CJYWGAag;rYpdjR#taDM6q7?i%>EkBt%
%mu?+?bDj7i1@g&:khtdRKU[&;_($cX@:uluR455[UEjW3qi!'9HRO1a3=)US#[AErkN%ur#+lOXi=U?KmMH^n]EU]&?,DI]*!5`(
%&l^GV*^P?!?Xdf@++HnD[=M'[,RGtX1><CRcSCcab]]#:,hb[Sis/#5ChK.jgC^l._JA>%G`$Yi[NhS$FNC!)%ef&#_l=='ToVkq
%Ri8OPCtIlRO>J8l,PX&\9U+-=!_"6"o%Mb_M%r+Y*LibiaD5E-MtW[m%^/P=X3PP%3lRI)G248obJr<TZQ1"N;@FeVSKKa>-_=^[
%_KBKPH?T:\S<:M&NS)PIcGWFV@QVd*?JaVJZV3\?l)BI^['X!20]TRYKs]#bY8nSg+lmORG*[4T5&KfC_86SqmdE;,Q8g/HDt)I`
%(+Z2CerH%"9Y=,9#>j7Q+oDPHSS_C+S^u(!@3H.+XdtG@M^W5FFq?J'd:qtjW?ZO1XW8YgX>$EWK5!V:P"octM)O!7Xdpd;d88sg
%%t#c9L.5rkR74H"K@UP+S#0>Qed`<C"D18A8*jE,lT))<"f#:>TVIke;D1HtB=1+.K_bPkC.DQd7]amM#J5Qs7WV`p9=X71O0j'G
%(^*mE:PjW18^RD'=IO#bP-9"/4%KJaVm4rYikf<:_.q#GP*)ZIg<o1/IT0gbZc&fM)l.WoWKabH;EI1JA]ea[C'V!t%Q@9IU7YlI
%F](:nN-Z6aWL`EEif2Ft*^?.o3iO-p!oB.N;ENOJ&h7dpFu[Kr8Bs@E[BlZacPrBtO9QXo8iu?0`&0=(=TYh]\A;ikM-umkaCpA'
%\&IEjd1-79_BLpM[%j"W\M;f866c'ABLg/Unckj0bj+2PVOVWQMd$E1s%F<t+D(tl;qbBX;>s=)B0f&3C82ZCSRmBs`KARYmO-c\
%3i="%!@m0#e'=[OZ.1]f1PTOeAXr@N]+!C%2l!a4F!-`(NRH)V06NVPd`rK"1YE4041I6B[$d$0@8dE(r67h#+;TjQ7V`6WOM#VM
%PJmd,7(>*e[!!!rH<FtL+;*c-7VbLjAgUbp]QSO8ieoa%3t.'Rn8hnt\jo'0+8?)a2H*(ZPh-E>,&lCted`?I";^h^XW:CeJbU.c
%SW,5!4f,Q=F@^!\C$d0f30N"cE*uRa7V[^T:?W$2[3N=JMhu)BFu[uR+4NmL(c`hkBHspkXQ3)nK@CAZqj(KCNRSI0.nkjW;EL?e
%9jV>;_b[,]Y-H\(MFRa,3NF1W>3YL?eda)4&r^VEG![J4iWcZY/II9dM=$+.!8"=dgVM_P-Mfa-*UJqWFkDN;&FU9aZ:8Y#^'V[;
%c%tc>Mnrl,7VmiMe30?]M!Z#b,Qh'l[Nck_e35q%]^_sX3+g*P0Xr*Rnf"bR_Drm"lGRl4bpVQHN7\W2r,fY7YoU\Y.AG+g&_f<(
%cYCI8,dp)4M=KiMCPSd.nl9d@47YpQn1;k@m3%^NF^qkdKN$@r:/m)_W[?o=_/)V/3!;H$gKE[UI2\O@/A_-i\]pN/,R?lX3b>`E
%K`fluN7j4f\7?Y!b]XC&1(Mg$m0GqJ[5PCe@j'"ZaF;g0m3!Q5:1q#![X!W-VTa4Dm1G]cA[Whf"8]gqb]^orYhCl_-4$K/YM5H3
%q!gq:4(G]D`CCj;aDAn/GHRDQZQ7c?Ji@sc[NgB#e@nUB!_5k9I!RS\4!G4J5Hlls&a,)5Xc;"o84IXs.C1%/(s"#WW9r6<6T4YX
%D27jV6=W":[U[),i'qHC/9\jBS5J%'RtT[s;;6pQqiTTm58D;)g5\un!^*L4G!mJecE8V(*Q3XGGfjiXl>pD1Cs7'=&ea)=b%uj:
%+hFs6gBk8Y)+J4">_>0u-alB&HQq?W,IZW"H(FN[TmU0)`JiE/h.SWp)Qt1?[Mb*D`-,[[ib+W5gC_Di(o*)DNks^M8_q!BZ'$DZ
%,g:H(1`HH:5;ZYDVtFsQ[@K:MCnFR>44;fdW2ieMOedM=eMCr%U38@/Bu(c5kU\f*Q/#-uYm.s/D?g^ep=OJ-4/(BN'7.:8\A3M)
%OWW@G7j'I2Teh!V@Vp,7NS[DW'jFi*m@Y8DDPgt!A0`=-EEcq^,D?_Hs2JqH+sNc'cKOZ:C*<b'8oI5ZS^L\MN&(+J/t(,Ad?bn2
%DT?d7\Gj&CPhp;)U`Y(aT.%BYI?EF:J,edurTCq@qc\JF6%n1f5MWpM;]X7k*RqE..XuI6<ILF[hgG!Q5CCA`ZUXrbZiBmXDm->0
%XZlR"^\9s&JH,VXhnT$*c0J%%Gs:p4r7.]Xs8(&#f5Kt^5-$>]HhGAT]?>C<<1Un\o?D&'^:q1-I=!E,m`th15Mt=WIu/[1IK.P<
%s70N8^A'pZ(O%NMhS4JEa780OT9E&1rPc8/fC/A[?ZIiMI=$,2DU6:?celgOopo\rs7/FM[)W$er<)rblLiub$\kJ/*GR9$L@Y:p
%@=3RkhrF%GX097O>;24`iA#hEI2cr_Ndi*f#f$5^c[U*9c.D-Ng\ZbHom4GVE7$>*^%&Al7!JYF]RBhBNu*$'hd.p4J^]MfomQ;c
%hgTSFY\l,O]t[mZj4]1lgMtaq\pl\HSA2]6mHs$8I=M(d@YmS0\Gf<WH[GA;h::?#^8#?s^j!HZ03?b`f&>u\6S?=Of6)ZumiS/!
%lJ?ORS,\kb[NBh]qe`(N^YCcNaW#_SmZ1I7>eSsk)eZ/m<ul%(I<P5]p>YXe\*)XrI<Df*7#M7k\FJp6_9!g;^:Cm>^Uq$^0U2+U
%"7MSC2fHF@H$=D?CqDgX>L5=>rrrE#f9]j9ICd"1X"1ZjEiU^719Oka?+C,;Ye"k1G3'Km**,l'pcQ)?DpR`M\GjCje[s@u4!pf5
%qJrVi\,(+mmE=2PKY3gfmO@okMn[9Spc6O3amj^=0.t#Q]`.9`o@GqYXf8@E@ab4%!pAYHn*SrelX+"JH_iSH$Ol4_jbFc+(YA-M
%SQ%i%K0,kDn@S;dn(q?@^O<A:FN85W03E+qQY==h#?6OQ`j"O"I=8o+G1lRKHL5kHjd5Egmlmrp:3`uBO^gJp?%*7#$e9V@2qL!t
%s7+psqu)i63V34BP5'`;GGmC.TIAgUqqEdM0.oK$3+"S:g#]8,peeqRpW_g=+5cPA2l@M+?!q_`d-n0aDdVA6I<To7G0-\kIr_d`
%RH4PKbs/tRH$f@[!KKB);2:qCOiAr>U]4XS.K=f]GM"Me`fUKTT#F-n=RO`^d`2(2c.1R\=3KSP^O3]Gpe80^/%$<kdcbsa>i=g%
%",d]<UGiK#1FI.sTB=XNSqgl;N_KU,3#;Luc^:2N$s[nQV6shBqZ7nH0nc;[R/aEZrVki-g3:XUr/rf0'2VUTE#LpJ4Seg?e_Shq
%0(5)7k+p;Bl`7W^SR:dW&D+hi1nEQ[7!]r\q%!3dIt)b@eKnhu,d!X!)sq?gO%4VV[E<.LfQ`4[BV/0Se"SUj,7bGO[9BH;?o5o2
%b4P8ek5*'ajlLtF84Pl:3[X`O5nj7bq<P*U9@R@]n?DoF;lRocI<BtP,\;F&T%S]+F##c/-&_+7l]4QB2fETKq>07Mk,SY5l4LTN
%:J6\Lb3MT`f2HDh>gg0i.^,JaeThM0Uea6gIBapPE]X*p!*pM([D>YK$?jg03;/?:T\B)"])06E@POIsAiEBLhmKrnkLSC;ZlA=1
%%\===.+hT?1>O`ZgCk(PQ`t!t*Ie+3PHY8*=Knl%k2]c&R"o@U_^%)TABJ5-IK&s-jn38Qf9[;si[rnL3Rmj']HHV6nF:AqjM7\<
%YHQf2F+&LWq<%88h=&\)3QWMdS@/BfD>hl-rcnH%jWBhVEp^`=<[(&;eea"5:.DA#3Nonr;!)a9(A.\."s6LY]gO[Gmm$GeNa'7M
%qA.,ceX&+VSg<15Jj@l.W3@S#H0XK??S3nYq=<hIH<HZmp#/*uJh8ht;LeH`3.Q@r[W28>#'kPe'6_4e?GF4c]D?]ud/'So)V*T3
%[nDGY,-LY^aEu5;27`KY_`GR3mels1#52;7hOWOV<17jhTnX6t%-R9rga'Gq@)H)S]&"tm>]1*2L?knLQfe`;2(m1X07JDWUu6]B
%l(J;m(9F\m^eD3__'7JOYnd&qmEM+Hk:/,HW+U,Lp?KmH`V[j!H@mRFbkA->Ppf/]TNs[V8sCWS3L0*Q$!3iPq@(EY0p]UCSQmVd
%`R?;*=W%=n>*L7gS1iPuVfMF"GV.&>e+,nA;&1a`j0(ms')',[;lW8h175HbAZ\Ds.8H?[=c6a=#.5k;PfV7QosGRs==rgG(?K6%
%gS/V+ls'FfetQD3V-9*0K/o3&s"Ui:VcZm(kZ^59CE2nLSi1iMU'e*s9:R'_`p%l,7t$:_^;6#M0Ds@MIf=-BWI4]-,=JGSIP$EO
%SI3fk;Zi85Ct,)0.b9BKbcH-X+aP`BH>UJ4XEna6CTCc'$,-&%gF?@N[FJMDB!lf=7Cm6A<NA8VX0'CqC94O@D:NAs7B9-=6D#>B
%^O9osZ="#gCeFDs&qK:+HMBD@lS_p#"m\'M\']$:6us+[<$TPYs1G9QEH:H?/@(lQs&N-NJ%GL>jn57KcbKMX!'QC`[[+,R^:sO9
%lKs&'b#p%?2j`]O^Kq&e0Y-mRTDJ9Pc-9SYP#K8p\PJWpTJS`c[XupicENl_.#hMa)KGnX2"/-ZVT\p*=V4pL[*Ht`Vp:gc=T<*\
%lMl?;s'5U&C&Nsra6@S(S-STr`0XsiNLgn_iD8Cq*i;,F&^gBq'_*gqcHibSs"r.V8)I1XE.K%A3nsO`+!GoOR#[5s2rEE'X+'gc
%hs]#m5>n*o;A$QXUH;%!YTVTmO+":/l,US.#IC'>N+$'gBf:]b5gt"p(mZT.IiM;b/fDR@Eidq2r8GZb5g/rdcbtV'hP3:ScYp#T
%^4(-K\&;`9fe`2]^_`W]+aJs%L^/C`[F9']oNUq%C]=(%UR^Fq%fe_:Chn=@s/u1T2?1;NIigYO2?/$1q;7Ibj1+]qZlY>1G378-
%QK4M+4jqF&OU$KhSF;p<?$!^j2?Xe_!EWWWq>T43bF>ukBR.4#NG\XR?tR^4NUtgiT_I-iLDn_;Qe0hJhq^N(l`75'^8i&4])\qr
%K$eH7i*]U'!`f7!p<2_d/cBSYbE#p&*W&F/g\V9t8rH3H7`a-dfe8C/6FKFmY@4`-6X.H=CRAq;rV/e%He0t)EJMZSUAskdgWRdL
%T2mK4o$_mr?[[(gl*j_Qf9^]RhHmqqo]GlFmG>ML)F$:djN`?jk2gaaYD)MDagD@PG\+^YcN!e,c25,$P_6;PWEjf-0[6f)(l3D?
%X6H:b.DHWgj-?'O-b8TE14$gB#J10^N]Qt)m[MCXC?XM<>3E\Po!&R'SW<UKJ_9@^*;-bg\,FQ9^Sr:&K*F=7A.?2QJX87`Z3FXd
%^rmX@=T^<mi8rg*(L\'c]P&"6nWu-&El9$_)L-Nui8np$daP2e3LTrrBBnuVF9Lj-[F@Ag-?8YiQ7%GGn`V-k6Y`LI#+J]r&?pa\
%*6/nV*Gf3,(lfVQ@X0-NnXk\7NQ'r",#)<Lh>QU9C2^b54WKMbTrj+1E>U.FIQ0Lp,c1gX=\!s,0%[`$fm)_!Zm%1e/HhpUI+K*]
%BglAie2%!Ui"UV5p%dpCmoGU?Vq.-J!-N&Db!-f.i8iYG(D'$LhPW_R73hgpgsT@]L';Co]]cl7a3e\+RkMO(GBnu"E-qD,Th7MV
%4o\$4n`T*<r/e,Z1nB2-q_F5"3]N[kZ?g2bLNY3iRLSCdmN:)*=0EE?Vs/>Z)U'uV(CXo4M02&kbPEMljQk!#'l3cbj8LAu9_SWm
%mUI5H"^?FbEK%9E0i#ff3VbX(GlhuE-"C';(e<oVT%]cCituPOj4M)i)TPt?(i(,OLuK9@d-f0qPpnk=s6S_iQbFFkDT^`.DuP!$
%GQ.!(hV@A7LDn[]K':%m+PW:H$]n`03.H/JgY9pOqu60R`=eMFj8)-&mHr/2G?8u)qa-m\fDr)ObLQ9[76%pU:kSZ9p:P9rlTa00
%/a5cfhq^B"If#nr=AN5iY<YIQ!Aq/O-*B3p4,:9($pDn?Sfl>*'7h#VcPNf-h;'VBTPk<!MPgcH[)DtBo(M4jOqW\=/MoR2-g:(3
%fV$7lr;>[Tm2,5pla_8_6,BIOI^7%p55%7Y@tL9l10".T-Ef:'HN-V5Gm$aAGsV[A987KRj^*kZa2sQm/K)e&(OM-raQNGHkC5s`
%V$6N5-PqZTX'bWn"lmiGNBbNur7ucbc]<n$+4<>YICZHni/k\.14?WXF/q7/H?6,GGJ(Z-lHL@((HEp_DLmrJe@iBr-j6S0GA(o4
%_+.\"\`7bn*k/LkFlueLDKY,CGA_QdSub!iT9)//bWZ2cDUB7\)2E+_2`Z>RmXO-L]`.3iI*)3SeGZqU`l>6uoiV;5%e$/FCnO!)
%)Ru!OQ!!Q2='URq`0E=?i1>u"qD\HmLC'>R=$o_2fDjlhlgp$aI!R-6Rr?S*Y3s%(O%#bhGB_qO08ZLhFba.E$^p*PAfiTEc`(`U
%hdYQ8j=^:;3&*oFjBT:1Nr:Y[EkJGKg,aIKTZ<Bp9=LHM?etiL'BRhnH1R>LhFkM7c!MH*_(B8lqX!3hOdS#;qG<s`md!;4"P67i
%rp3"pIQG!`*uo$C$S"a)]taO:r8Mb]B:E8B3j:h`(lS35:Zbncc63&'"5[_m1t:W0rNCq6iQ8J43s,<]F`RK==)ZqK9)S?4%lGCX
%klY>a4I5g8lRUZpYEibqIef?a67)+n&&FI:k#TZ5[1!PDCEGr&Hns9h![j]OquK"0p.l/V^'0:@He[HUo:)5YQOb"mplj5V>)f7H
%1l>>'kbGo6B=`jog*h8^"j.?:AWP\[G]FDo7lQ%N@.tmLErXd9c1GN(U-gN9"ieVJp>ts[@gL+<L*^U0*s^<49?+1Hi+=kOJ%.3a
%O*_rJWVFtXFjG!0m_4-k\VPFfUs@$HX1LTe?gVtZf>I-7(#!sn*f#kum"aVa0c^)Lpcpe(kRYbrH?VLkO8g0tCsU+"N$,<7K?%a!
%4H<<%SaZ*IDfLpjib;8/5=r#eHN@&?1!@5(bgP]]JVj.C.ko@@d!]Ors0q;i?#os(iuaVha*-Dj.)r#H\pd_1rU'bf>c4O]hji<Q
%/\osu,qZrVT&5$2@)oArSsI4e<$=FH^E`0.Hg'NF17gW4OGmf[/F]E)a`tHHdm8`[a.K:Pp5lodKL$r6aQGR7>fd(ac_KA`:ThJC
%W<B<4^H<Dioohq2SA;ToqRpC*&CI)F4[&a?$b?X?D&8bU62d$C+KVucI<g,8gT0(!$Kdjf;V7NlaN`M2IrTo4?VBF?Z`=W0[J:G2
%/&_,8pMV_aI$/7*Gs4#slS:PmAbNab>\8.ZAuE#Y?6$=3KJ!a<K)]k<rq>079:-ERE6UVWiS`pp*Y5U+No',MP(=-HFbdB#f?hR@
%YJZO4?X7$B*mP:%YA9!Vj-3Y0dMk<1"R09Boq0f_rgUC#3uJZB&YdVOE:`d!oe+0"HD^6LQX=%3Sc6k]^\G]*m6:Hkcb=o#`Q`OR
%QhngB^,p[aq;pH4pr&^$lB>SBZbLq_aY2M[s"e;;`'7GucelIWJ,QSIVuK\,hjmnkpA;2rp]!$^YNrClp?,5#nLV:74HH>KZWpaa
%5*WmU]qKgEc\In*7/e`aCS)QV34S/&)*8YSiH`5((V%@NT%!9D90A^"Fti<lPBU\,hSCN4gt?+bD(%L63XTN'0ThFb45P*"fT'*Z
%q8k9rI"COGs1S1Glf_^UqA*H9p"<EUkHD(hAU!::*V7K;2oZd!cHL>OM]3Z$Xe#c-_P#dQrqW:;>4:_a#1*<uf)A%n+@VX^)u)H_
%2@X:PlA,-IDt)`i5OQ;F"4ukF.t!M@d74&MRSnWkQUlrd&OSBB_&nDB1B*A?%agmHm<mr`%n<G^9q1T*KOH'k3K/C',G$_*[L%H:
%-9Uu.pHq!2h:7d>f?&]4kmcqS8>Qf3H>st`em0Z/fc*WGPLgiD3Z6TD/CZcZ(8(ESS$QY'ZS^b+F\EIRXS);:r7iXbk/**Zm.+PV
%f@Q1FdI(0Si/UCOdn*.I/&]ae%XH*#8)_I3b1lAH\a;A^*OG6Ucg8=(ErEJ^Ie&E3b.d]+lVDtlcMmKdSGhi)n!6g\rE@`P]k8nB
%D5dn%QVrT8?VP/q]&t@K6,'>-ohQDkI=]5m"]BVPB>SQmbtJ^kH15q[alF_.Kh3"<o^S6]Ib[V^PZ$D[](s<f>m4Fd@s'0^<4F\X
%S]6i&PH4NtbV1Ydms4)BYq7;pa_cI:GAg_[[V(t7]WpMpT'^g.Ys%EC\O#jrSR#<5P1ataDS,ir<$C[-JgpVYWai+J/G.`(*2!*J
%F&de*eCCh#!c?b\3S,(L+!B.\=oVm%]AVsEZ*DTFEV_+i$%+<u]h)jdX/j(f3JaA(?!Y9h-i)T5Xg3n:jMBB;Df%L]EUgr=qdT):
%YmTc?c#rnHpJk/`Z!E.b'shPEQeCW9]d7ioj5KA!T4#?32;nWY&UdsX<Fa)c_8_95jE5E"`27fcM,8O:*t]a#?abE_aQ8h!>m!Ao
%k@BV_cV;R;A+^1-cP`g9\rI!,YrnNFU9/A"Xd`V_bqN#8`g[D\QY11O_aGQ<LHIt2>^,r#Z,`T@7q@iGj>Pf)Ui"=M[2Sd%)'84>
%St_tVlR33b5=@,hZ^oQinU]dR7ssq]B<L^m4Or&`leBu,o@rTC.RXfbUakA'^I;EYF`Lupdr4Pn\HM5O-i%7PTQS,R)e=BoqNH5'
%5D-uH54&8c)P3;3e^knIUI3Sb>i.d8\M"^_2h^A5f,\.pXaYeoK_Y]LQd;^2E]83SroJ3rju;Y[ZO?QBn)(iCHh[4/2j\/qk["*!
%QbdeCI.,bI2N6?q-csr2J\Cr;XHlt5\43!T1!$5[aQk32Fk:]JKPDqG>fMtkQrj-@:fVQ7&2(os`HC<`0GK9)&V#dSYCCI_Pl6kF
%3u$tfK;$F9Z0Dfr,Io:\W_F#.m7_q`6EAtmf,:lc/+l]f*Hf?^'_,YHIX`#PgNI^03#gr<jG/+@S)(ZQZEkLep*i20nM3%p*JU95
%(H,TB"0,h1bIhTCYdNq)e]7pkS*Ib;J7j"p5/=[JeJ_!LEC)gB0jR-e@JpsmgWj64-`m0U4,U@+Ip,(A/_E(+?=5TYY5TO<e/(cM
%=q)5\!g[0KIC?;`X[D3A]htsMmQFleiO<@uo:e'g2ieG6&G`@9H%#X'!QpS>7iooS52KqE4LjWs\)6f-4f1gLhZ/_](olt_ARj$N
%Z!I=)FB4AKULr?%PHdUBFoHYlMo1S@%,XJ&iKF)O\EA;Y@n^J";t&;As8&gC'Qm%WBbI:fn`!Ud([p8Zq;uQG_<G.s?9@3m5&9?@
%WuA;3,.pCf""\crU&)t*J?90`*aZCjh>+4M)E7'<2]GL`[6^]`WQS53/P1Ga4PJWcfdEu8FX#^l:N;O]ip?Xi?d:FN1ilsc54Ri4
%%^V!0j_d,qPPa^1:[[gthh^XP^V@:h\Ya'Qs)dq[bNhAuhL9`qE@1dns*=V;p%>b=Z27jIZr6gocL:0RDr:QinuJg8GIO*0^U/5o
%I;1eN"oi3KfAs^Hq==Ge)M@P2ZWdj1?!dp'G+J$Xh-ReoIkJLfgUQVU!^c\UDXo23).:5C/TS86H[k]l"2X`WKDa^NrQ1O9GDoX=
%S8hWonb;M0?!XO/a#3.l7NL*Zj3K+<-m%,*l<&c];+D@=73+gG.T+7!-gKpYHfJU)*R.A$Fj(d&WuC;Z7ifLQW8fRg3^3JP4/.a^
%T$+'B)LC$j4AshZs6-[sg`:QS@?F^Fd2bO*d6/cABGQ=CrD+)M9J(p![_mSD\+$$!PH^fOs'47U;aqdEO#k9h=4D6[@p^d8/;&u%
%oq5f"K8r/[kZC'eNhE-betD%AFSscW7rFL7,=i?2=]!IEjZ>L,PG"\mdi`+cZXjo2S6oXgpiafXf2n^uBrEW\U@OJ=kKLk@Scpml
%(n02(Y:#`0eP9"fT#c<mDl]=4.J!t,FMYK[lNXBO6+aG&HJN$/H/62\X[1B(%[FlYG(dkorM3#I.>3#q<&;1o4&f^_*a\[PSWu:p
%).#6r[C)aC<uL)oWmat=[Uss-VEP'AkpV1_QR$>:!,KIg'pcESj^9q<\86A>S14pPVKMhIC-5OD&F/HImG__*<g>nF2OCDhEQVCh
%IS4!CdqT&t-6MD74P+RSbEKqc`1HI!O0b@$6K>@t2gsjoB:a0Lmol`KV&kS4L(O,9`N-4h\2q-!F_SHRSX79JHC^`QajFI>YG][K
%+2dm?oVJR::Elm[CX_bIE*bb6[UE#2*[C(6C(&b3"Vhg-[,#,\)f>;#\:_k4Bb?/\XnMMdN,)p?W#Cu\o;W#\iLb:IcRk_(cCgbm
%0,i$ZIAoQl7+Yo3Fft'#[.!!hFsZ1'(._eUk8-eZ%.adpDl1U)A/on2-T4ebD`6[E>KBOub4R;IgPeqSY:k0^I!U3H)cl#S#<uso
%$m2Fjh+UJ$NqXT??0`hkY._tGmb>ab-:H-[KKM[X^NBb"Y/?O8lQ1G36*E.3>WtR7X<1sR`ajCW,YDWCY(Lb+ZnSNRdS3\B[bLo0
%OCP9$)hX"D?Id.=6l9?/>r:*eZr`g$UrTHip2ZlYI0`8qe\</9]9niZ*NIo8,'%II^Op:)!@E9I?=PSgas+kXD$9=:GeZmEEUToT
%SGVS<BT*(&\flrifm2:e<IJ#`Xr>ndqp_SU?I`4:cU<7/kc^p4Nu=GpX8^Q+-(G,Th5RH@<V'h.kc[&?5sL.pV.n;>GSoHhk\lP\
%f3d("ZZ4?r8):1G:P(mPJ9>[LQ5)-i/%Fg/gJNSi52K\]fDa'T/@gULFfu+/T5T>@mW-QJXSI]15I'>uIQmRa]IQ4oXGpA3U?out
%['GCLaA8Tpq$HdDq2%3R/jBr7jU'qLr5>2aDWE2#Y4TZla6lJom.p$\HGVjDHG]XEoL.?&T#eOl'=:LFS=Zt.dh?^<(8`J7US]D:
%b7j4Kp+oK0QV6lP@8'JT-^#ls+375#7&'L636=rYr4+Hr5F2\64=2K)R\9Em$&Z#=5uH29`L<HEp@52XiC;I;FmVe%R'Wu"BPWQ)
%:CZ6e/9r:H96GCD'Gh'e74aJK&eK<s(El]:_j7s,=ufSUC?,$TD)R<J-ZVu.="VEc_h:J4e`LX:AV,WR(`cAq>g9XX.$hk`7AsKK
%eZO"6.!&fb/3!4"p*c!J,N@bS\01/L3,-otXUEj;(2UH/2l0?!cmYlO>W:6\?S+A^L6`OQH_RGRCHOcF=I!"]"ZM,+=6oE<\=`kL
%`1W'U$*6U$5PaKKp6)aCq`^^FdSP%(2WVq7q!n5;durgplX709J%O#iea6?Q\2$$FcEtaM-atm(O"FClSbhdl9ad$V'M;A2"g4.\
%l)XYSp#+SGEAclW4W%CfIbC9!/@fi)-gjgdHoM)[hOrN=:/RcMCu&7F1GadH?aQX]rjqDA@tkuMpe:roPtc&q'.EEQ4\%Fbb"_oX
%[QV0Ls80R)ocAA[rJ&n=lJ1tCX%N#'Z%>_WCi?TK%I8bLYINb!_`5^krIjq%pVha]ap7QCl?JY810;%/XX>71R9gqMn7T0)aH`Ql
%if^&QH/7F@\m=Uo->^j]SDB\nDkCX0S*d\4eMKfs.:ut@*3(cJY*+R?Or5^#-Gi7,9GB2:-h\*6=B3K9"AYuk]!.d%an4rd6s_f[
%E`&t&VNQAZo_$FB.N+"hBe$Z8Q!@_qpK*8I,pRl2odu:#A;=k^!"><:kJI%qFZGIJbs<I(bTq8C^U8@lD9^e5P/e\1?)h#-Rgi*5
%SCB@'I59\ZEd__A9\K9\m65#VkG,&RHK)4i$q\.r\lQ+B.u!5'%DHU(34C5q7t8u[p%mt.NCh%`m<^M/7\@_i9DQ-];Z:e;rnX=q
%;bG`69IXOm18X>/V@:)".:lR9V<gsSP[2Cq@954\/5N.-NAkOfa%`FaBeh"$8uBP!0UYi4,ZEEM:U:^4T!K<:/\@2q)RQ)K;mp:C
%KfcUi]'df9D7@qBATp2S\+58V3b<Zo[6&aYSPjX/;qffiV'ki:F@t5W:.a3nPT@qf1.`G<'Y/H5S!%q@;p(\B9&>h,fpj9K]u.;V
%UF/utgXGLDoXr;AfqW?hbtJ_nRm#2[>`)577P:O%h7461GVb[qGN;Y<fTSsJgUWQj8'fYTZ*W&WD!XpbN3Hr=m`qZ)Q:mY>HB]G\
%Pkpl1S4b<"e*q_<-8ol_G*5E71o7I\>=1.pZ"6hG*E+BtId2j1:R+<TI`b&N:64;qO`r0NG3)Ss,&ss6,OXgf(j[B;dcZa:7<J-m
%Li2&ad4MsS\n,LuV=ZUeUs#P"8u%V*NABnlOQs036qV>Od>_jf]KVCdXPk?u&h-1@B]K[]HLsTtEZ]t$\aR'^(-d#<dpkA^4NalU
%O#$(EUQf&0Pd2Zt;Kh/!L0](h3)-2B3^%LZUeEg4I_'C:6qZ6s8C8^37O#h=9V_f+_p(T,gCUf3nW=J6fkX1^'-VW-^H\Pl->A^=
%#n:fsrfCiYd]t9IUAUZS^0(5&k"lo\QQ4.kd-b=&PRmG4$tIQ^/8I#?VOcg%7es]+H+_Heq;aa6'Xo$B_W2:J->pFnk,]Iff$s)!
%]gb'#j?^&(fV5JRS(3.2qmuW(C`ZcUp&=j%\EA<`i+]M(mMQCSGKt.7]4X*Wh(tJnbl%25+)-INgc`PW\C2<5YB/Yi1VA.N(\c^'
%f*q+j/j;V_HCWYkjLU"=q5XsMStjR*qrD0Ak+&n%nYQJ/G<U>;cQA;D][HNPHdHbJ2V6mI^>NMW3q_R:mY*qU`6Th?q=W"gc!&T0
%eo\)Qh:lkPeoX.,RdLpTH:>DOOfhc]lP8YFY=R80/f&_;2;Ke2oifiC;q5tC0Bd$HE+XN(<>2MVKBa[\D%PpH@1l6snTu^,]t?n;
%_^H'dWJb!WK`&?FW[]So/iDV2(.kQr-LD;/E,A<f&t_[X26u5'rf].bH"g$k_<5$ZF?RZs,pGo!VK]1tX7bi#hiQH8p22@02D)qN
%*t.si0!"7nO*9BiSRO<jL*h/sFVA<)Y3F8ITqL(s2;u_b$Q7UR'K1Lq9Q5H0P@Si!DA9O'dlX&p87$.*@<^I_4!u@cF@09h)iNgS
%0%"$e`V%`cL+<BL%7=>sPe/9gT'EV1ehTW.-6kbl<L>q1/dQNi/0.I?o?P@J[IkdPGN/4RMp0B\hmb)tB^:bd\8lVR3l]#2p):4N
%!1OY(hOnVn2QuU3pj"$#"nr+62sobr"6p_&QMQB9CU]at>ALT`!0`4QZ6A+ojEZL_%Nf@7_+O:GN>[Kp:Sa`QWl_<'5K;-^R0mp8
%FBGA:T&AE3"GttK<b*\nfLd4BKGSJb_).po?X+U#-dGu3k9ufaIj,tAG.d-O=PGWN0q4jk0&3nVRgo18MbKqs2N$LC!DWt2Eaq-$
%>hdI\2%>>&-ZY2Z=4>$b5sMnM?,G<!&nB(*@>$;+)I1?OcM_`02bfuZ0lM8]F*1F3QC`h?7P.RtP"IdH0Y3sq'`Z,SV/#0mp+#.1
%B9q#Lqf$:_D`CgQZe's"YOf*ng=W)O&+cKiZ,cVpS"kgV2P6al1ATS\M.b,p1Vqfak_5fqqKr4@a72mT9A6eZP2CEACes2F,a:`\
%ZX[)P!9rjk6=lC'jKi5Nh_mqC,.)i7=XX8bec4@;c2rm&je2%TgP^FH#5sN@c;l16B\<5RlmgNK(KL8'fSO)CQjZ?bOD=L]o'leE
%^GH`N`-st9%`d0;KdlY(S+("<fW(`ff[0+bO/0llWXWBo<kW^h#:>j91M^b"$nXLt5L]loiWQkFO);d1%_H.cEQc[.iT/,'9R.%c
%NPS*JlY[W$ElO_F"79mX-&iH$Dq9TTafQF?Bk-1ji;NR#amOE/-uAA'6`D#7H*o*)kDXO&!CL[MnZ$c6R#14*-ag9c+k8m"?.2[=
%]3J)n,5eFA>!5H2fi+S1Qua,]:>6NII2(FfX(fqB:L?!>&t?p\a!E_nmXSP9m`A2-I6r:?,T)@l18<5Z<3ms4p/E#B.93pdm1.C\
%Z-D^1D!81Pm\t!Rm9$-&B*Dpf6bYG$4e#ZU![n3DJp-cLA6,8m6%I]hr/BUe&7]X?PR,]*=K9X)-Dd[k-]"F#gMR@(T-R;t^-E?<
%['9aRO!Y[pj(iUUkJs'PZM=l%jQ#!TGFab0CCVuNoLq;fF_>N6m`p$r6sa0P(tqRMXdGlqG&s,>B$=JI?*&6>"]j3?Y/sCCDQR.!
%jQT"LW@'%=-kG])YBN]lLMIkGF$X>CD8<-m1[:UC8(`S5-6?T_S@TcgFus>X1jSdgFP:jZb\]*S:RnB"fkWtB$S'?t[BVe6LH-55
%)WqOR[rIETZIsVco#]s&DeIWQ:Hh^#%;mledG,\J=+,I["d=*]XgGJG?ga?-=T[mQ[5e,h@Y*k:muO/R8U:V:VcH'0*KHh)l2Fk;
%T<`%md:ri6d[$`-<A!_#H^<5tJVR864AseZhJ.TPG:h&ta3JFNSR"md;_@KK&E$1(g?/uH$\XN?pTYk!mX+@t"Tc)u$`rFkCUq5a
%/o^<#J_cki#;$b5[^?_7cG"3Dmc1*J+LT.9r]n"ZDdLk%jTe!B`R:YV\No16fgU8]OZ7)FNYclQPR0#O2Mf9af^RH8fu?LESaprr
%,onhVpp75X->dPKf("pmmp[34f#Zgc[MRiUBM_O`bJ&mOeU@*Pc?a3m^%7..G@joNfJr_WA.iAtY`O0]$-Yg71ddo#g%?o$fHG2-
%H*reCgtS#*ZmWg68_iO-kXkU:o)/4@la80QD+Zhf5h"GOncQd'4'(IsPk)n(VI==6=dr=?VN`s\ZppJ7.+9)G>+8E]?rP32+??9J
%`s>Gt%TltdQRi<RFZC1.fQ4k9I;N8A:13l)<oY;]J?EUp:K>7q.=!K6]QtH+b/oO.jM`=eB$a.;T,"da_Ts)F4u-MioeI_Tf[0]j
%-]H.1/918j%1cM5(#;D]OMXE2X_'"s>pChf@QP+$fb6\O#07(HpSu>pP_B0Ag.M`LiPJR2J>?GDoh(if1@^O9c,KB%h[e"=&%bY!
%34no]:toD<$]a1,"ngd+LPCbZgN:<;9Qk)o5p3h!HS79*TN:!Y`HQd9jN\T"fSemG`FHC,=&$#%h_g=0p-8Y.dgE5"&@;e31_e93
%&D^MAi#VC8qHBV5;k]NJ<TDcq1;C?K>o'PZVNP*hoa+JLe7hW^Zm_r?*%(k"K@A^*.tjV1?L%10n5<^6iK;egOBVC7M(88B$]EDS
%1WMuLlJ`B!<7pNs@gZdrEAdZKf]f2aZs^ZP$q]K@`,=0g<.edZ,LGaW88sQua.V<n[G&W%\<p:OdY,j0Diqn?,7,ci(,_^`/';:7
%o_j.l_o;s^GgS!YX8[/Z(K[Y64&5p$m?nm,TulTA'#q*pKd-ukc'_V%WNR8?b@B;)U0?gr\SNYCiSH:5;`21JHEh8S<G*i"HBL@#
%',;=4!&X^E.u+Q9XTN%dgRtUASnMl'kKT8a;(jqhJj;P,Lr_mG28HcQod5We6C7O076a`=rD8ApTDG%CW^]o;X%n<!!l6o(I?df$
%`Ic%THc8ef325Eu4h'"XLMZ41kVJ9>fC=+<6e0_%nbf)%_P='8[meeX2XJ',U0QU0Ok+lqNF+6I1%n%,S(d54gW/`CbVR1dBRm;?
%oohE/P;u:?6%nW9Y)?!]l=%=RJO9<>I&.mLBI@l;akUZm;a6_/0QW/V*R.Tnje9(o[\LBJ`\;uFqgLA'`<,?"h@n:sk%aftM*2:R
%RZR=SSEdu":h?p'$e10mO64%G!^.BbUP@Xu=lmYdFM>m&?eXpc7rs*]';TG\mHe&l*I&r<m[7VqC;$6m"\i'T<HWod64YEt)[`>/
%E6-=B#8<j8;,r&!mOGk_+glJIN>L2&aH-i6A\Y7D@<ohdPS6D;+g.HI*DCU(lN%!$_m4n-/Dj#5<`P1IA9+uUoaPq+RHb3Wlr<;Z
%PGoT2d>.N7R]nkAm:7+g7aJ*+9]3NR<_jYtRB"uFokV#u=KNAeMmjHrLOM!-.FcWRZ#M[uY*Z6ZPP;M#D=!+=2,_X*e+h0F;DK,b
%$?_["0pJEe\2a/f.6`fdWVUcrTa'9KnO'dl#n6%+R>^HK6L:h]j$rbYFDL:dWgXl5r6D<tI2(#8$MD**Z!iC1*NHHA<T+%GdRCW`
%LXb$p[>R/6IPs2Cfl!llOm*_JR3`;cP=o3QP5-K1gt?N'[#<b6R_>nhOP<WESUBVU?ZrBJ,e*3ZG!'>8ZM112T==OFS3nggDoYeI
%$i)L2bMZhJW#d:'daK^W2a9_to'YY0A#O`]WB+([Ng6VSV<V0^3``8@Q)\>jl<(#H<iV0icU=p8*@k.1c]>*dK010LD4P:HM.oof
%C.#^dY[[$a:[W:"[+aRA+jri>>hA'iId=7<>r,ec7Z]'Y"N#7(n$pXejuSa/deA1aHZ@C1KLXt](;(0QYE3DS-Z@.7D91nU-f]XK
%aX?gc$fP0-L97u7J(<_aj:#fEr)s??f"qBFlJO%@Vd9Tm%6XFqiDpus,k,mWFms[f2g.Z^5&)+Nq8qs\47'eT8C!qjpcSYRbrYW.
%(YlmekO,:$ht,Vt\:s=qfT.)%qLO@iEH`T(,l0>5_G?n%#:kJ"`1QHNKJs8HiVcPN#bRDOJaB0D^'0)1LOr=8%R(B7Jkq:HqdSf"
%2e#RP9RWfOHoeDcpfZs_QbcI-:MUjG=pEjd:d5sZ6RbL>IrIT1/qTNX-l02#K+t)Q_mP)!n%(V([\E>[HNcP"0+38)Fufr!m$#c[
%C57j&Ij".Gr'",/\7#T@guZ?k/[DHq>2$Ouk&VC*pik-NcJEWGghk-GDe8nUjHFQ655?OnD(3cuQI"..X0G3t/[BslLLE:,$+YSU
%Dc%fo7GbIX/D,6,FSl&YVLkLcJAt_c&!MY@i@#cqXZ.[t_gF0e39mr"IfK68GsBlK2Db<VpcBDj9g6*0c+2oEhJ:aqT&"kpGZ:4C
%X?gd>lY*QWC,!CEj`]:&/_m7gYZ!a#s7Z%W$<u!*kA3jV=&e%FA);l/n.,9\jr4iO6cp,)H1LGa-!$BAAf%\#hRt6Z(QO$"nu_Z>
%?7YV10s9&8l`IZpEnDrc_Ud2Fn%QJ6ZChl/c'=ah'`!!ZoE7'u9>7eYGM`@"a#"hpcTEqf-(fR0]<)JiQVD&#elB#fjYQQ(/PW`+
%Ob1AR!H,I/;0LLeUL^kQh&[<<6fT1_P7s^[AYJcMq<*C6:=,Sji@SWu$iZLKq8JLY"$%EbU;nNKBP3(?R5'YR*USfbN]W%u?8[!Q
%ab`"%iX#J;ClUK]3F]HXk,Mn1rNK3ahaHV%b9'8&^2Y7+nU?feGb*-5FQqq)+?*e[_Ci:ffk^#@q[L+1/DXY[+/aCfI$4oN/Ve3=
%D#(`4e\tVeh<WtE:ODlB`"h1(.*+d2cI>._$>+/rCu)klYQ8#h%&:`r;kKqZct.9u7/+X(Yl^AfYpH%"Isa(jV0"oM-i7Lb,dVV@
%ktVMRD`$gFc>Gg\mF%'=0[na\gD45hj!gU[fiSAl>AVLGpRaTpJds_ho[Zu_e`<hMj\8(s/YCjHHuA9u\D;IKeBX*!+md(JLV,LV
%D9-cCku].eHCrlbQnS8T4\EK2#&St\k/=^@[H_V3QH_!=D?U>2c$(>m*(=sR98pK2LO=0PmC`I@@I-bJDojBaHH/LQ>V$2j[?T,5
%X&ABQY5@QZq>]2Vf<kQ,1n"7eao7dqpMV\1ro_g5/+hYdnm>>pCWcZiPk&1TmoJYa(&Dg%^0@<"nd9g>P]HaRo\Gu-58*1l):S$/
%jD?DX1[\_rYT;dQdjVK1S\994!t_526dto<QHMCd\Fi&[UfW)HA-5HpZqmMJlDc5@ZReN#WA^NXRb?nOTWW+k[CN\O#=+u/KPk's
%e`ZNI\>6[#qsX:=_tSde(o#^1W#B'L_H;_8>NnsGVO<jJASkkOe>U(H%,5/o=#J9#4n>Y6QjY,nZ<I:^6k4aGf^M62)$[m/7`!eP
%YPtKS1PbChP_O;nN4a,Ud.jUi`!0;UQcRWFa^^kXPbs:Vp1C'>#[YSakZq]L4:\ICZ^l/\O7g)/h:+AU"W2d?5cHZ;Hpi>^q%O>6
%EkWj_?l8=D[+[?:RqT(`degbgs1UIKWe/K"lNj.LEioG7-o@Z<)!bVW.'Gp_n5[(_g7cLJSO+ZG=!<,Jg8DK#rja@rk+8AadWa=n
%oOTJG>AVSS?#g-c_(XP)(r=1D^Y0j6^jE1sQ1aqFg)>rI:XX9BZ6btnnLfU%$oOi)Q17n%a+a5qo/Z\Mb6X`ef2ZSe<p-f<_q[FE
%!9L>(X]M[jI8dVpSr9XR'2ib9>Bo<I9C>LIpW]l#Nsk21N#l]'SN*AL43nl"%W=6YD]*%78bganjlcfJ52"M82JOGEhIk%L$sfjV
%1'Y;dqfTFXDPVC#>npF^+\3jcTN%qKl^8jX,+)s7IO"DkP65&^prdYU.4U*3A#+HX]K88o9l=g`"KkE,(kg.K#4J+O'Ma9F!-jK,
%&`LB3QArcWX*$E0.2;^oGLc672_TL"Ce`X,2P9Xl2-dJM]&h>)<K37%F`iZHA(nA#*9S8_AkQFHoa>alSA4bcN^<s-kjFp0W]lM2
%NWG\M23P!Y.<gac\je/7"<4\_WfcR$<kNOWf:b.j';1IGL%?2Lnq:]`7DEWoIY3Aj>\rl@0l8\@ds\bRN7N[0,[p?1k.<KX[-!:t
%I*nB9qYB31nu`bUQM[&WLmHlmU0`Rt')A9/-XYpUV+"AKc;'+V]B=&)r,s;loW\\4msFCs7EFkFFM90ic55SJ*MRZO&"G;YbO\/"
%/F3Q9,58&3U=A`lHho=^[peBkZtb=%5$;U5RdL80U8Ht7`AksU4oDiD(-e/]U..#uX-Qu]73A9p[-[&i/Si(6bniP?M=X0L0l\FF
%eE%Wp+WPQ34(!ZlN%n[=c^$.CnjU\61qV('^1ch\(?LH^"cWQ;qFUDAM^I\Z0MCkfSh@#bg1IsF?2]H&dA0"K(4GCa00XbB-B#ZT
%ZBZt5/`K81!Z/nWjs!NYM"9T5mP.<YEBLV($BG`JPV%fj&`hP3bp\Nl)fq66`6fK*^%,8JEbRkdaY_o[jr%L62iaIm#4O@_R+/H2
%Z0DhH"skb+^$X;`*d.*h6TBS'/uOO^1`JXSW2pR`Qk$8`T=%+-rWUJ7U@DY:^i%lHOD'$b(Y+/Eg+.@(`=@eQqcTHhhE/JSEbC7#
%Dc\H;bW(+@-eaCJGPO]j+$niP7a=+"5kM4'F,b3nq3A:^h'S\07JXFLk1-9F:l/<d?3M;&RsoCE[W"niI0WcE/Z.*@WDmP%QWb^^
%&X?BHZr)Y>'YU^e4_:\bl5g",;I3i]*Kn@Z*_^d;`eBQFQgL?=B93PaSc/TAHdDCrNhgOerOg20rrC1IJL:*7.$BiOb)n*6&0QS<
%p4qh?^NETO^`]=iH0no+hR;$>-otC1Y3Hl:\8P.aN68:9KDJAmpXo_Z9Z:5okh65[KVag&QGX&nY;X0HZugf6Dt*IE=ShKj1]qQA
%^Y`re%m0GrNtrgq.6'huK>7?VO8V!:k/uQk)h%R0:jeu@r:H&\A@Y^AKMn@i[hd[J1^fA0:?\?LY&kjpr>:^4V@/AQSO@b8<\LGL
%H.qXpa:,J'n^'!qNQ(X/8`J29UHOEl5O1)YfFG=N(t9e^..k7?ODjeb[<FjY0tOd381:Xf7&V+pd[u'Z%os"L#-ku$JJ\<Xr,8MF
%[EmJ&46JQ[:2eRq_9')LEH7Nra*Gh<m?#T!H2PEAF6<#RdB0Am0_g,^MM9qT2P0i+K]#Gjf1)V6dm"UlR]Tqcr!h(n0%DA7T)$YE
%XgQ`<KGO=(TRuf<9Tn'+\M@j0Qr_L]Y21;c`4aX-6G48"9dD\B"f5t?0YZ:5&!MJ!/QM#c9>RT2c#USUqkuYL]$TGFU!rmPcL3=W
%m@9dj1ilEbqcp?K[mRKHTh`I9;'%)BY5%d_)ab^@`I,ANi1CH"\oH(Wl#g1UnjJ(uN"2l<40FfO,X]cMFV'pS4uOmY9"WM&G7U,S
%ob0/`BT>*X=m:*"_;+.Rd&F>QjPOeR[nN@DbLh,&a)Qf8M^Tk.inkM1Lff]g<E`Rfog3"oEA:#KU#jXk63Rh_NNS@O,@`A>EerSW
%b&4ggpf2d.bE7$Jj@^kCbZ;#`Rkf[%1Qt&U*o;@$_>oh>+Yr8m@m=3D5K^uD'/HpW:<L;mam.#u?d''nQ:"':F+K$nE&saai?R/C
%M0EUU^CE;SE:eVJdBT$*9N7]_p3FgdW<S@W"n-h2Ru9DGn19Zdq/04pJ@XVe+#!WbSLA+HF=TT"Gor-:iSp"WhL+V!nq1d^G`Pk[
%ebE,g6oM3!a"4n'n/8@]GSe3bU9sHgrJ(a'K5.eul%R31Xh>O4>E)+Ec0SIY?MS5F]N?-k@42XN56?:@X5WilhPtaG&TsD`*Dapd
%RfSi4jJ>_'q#M9+5HG3Ns%-3%nuZ9sq\d#.>/6='rYFnY&acMuZ+PREB`E_'(-(Veg-5cYP1G[oCnW:K#gl=U9JhqQ"M(&T#EPWH
%-np1j_-23fOhlXuDC,1$V0Plis(<duq3s);0Z)0]^,,ZD:D``6na_GRK7E,!G5bbPr,4Lls2:\051tEd8pr6[rl@Hc$$u4c$cQ04
%IcKLm)t3RrGUbpCY.rGtpm9u"Im1pLZk+*WK>W5pFb&js6g`dMhB2<er\"T:5='D12-lm-$5]i>2M2e>49r'Jk&&.E62s3&^X"&%
%)_pl4:g1\NI]576M!TkZYPl=F=(qOQV#<AGql^6=?-UeW,V+P.Mcn8UEC4&Y+G\_a.'CBb(d+M&T/uFqrO:hdG>*/sPBHY03c<<s
%2F=[3Z6UH)ED&)N^2i6GL#J.`Ifa3[:WHjsD0g]P@/l8'rm<IQ^W$!*n^me3Qqb'hNkbR#-Oa?UiR73t+u*&YrdTJerXQo-4(.A=
%'l<nCj2KOI%T37/6(^9mA^@&LUL+>p=("o'<C8tM7dnU//6Om+],(@G]Ji,?)sXciNp2X,LU[>UY[rkM.!7RE>ofg88%EO;6%i@#
%X`6Xh@@MN2VoFe4nQ=&rBfrp$J1(aK-bp*S8)e$cR/\CEZ%_H%nk\$dAGG+.b9msslaXJnkV,[LcZT0t+4gGt5(mS-aa5FIiS3c5
%+XReRB(>I]nEb#)YKsufYE/3^a6im=N&[D::W[SFAmC0'SYQKq-ToPs'0qoU;&%)AM"=-2it!o7s,C-&*E02X[<9aDI-6+.Wh*:e
%"S*oCok0H:T+E,&s-rqas!C'Os'3\:-]ipgs%NlN%P84ns3!slha.X!jZ89KV2F>P\*uoC_J=`>qMj?KclkNN^U+qILJYPW,I)AD
%foW)WGOLB<(lf]MBAKc^3$db<)qb>N6d%C2JQlep?Y;GO1b-1F7;h1jp`h;]]+/01]o=]]/q*or7Xt3t+,?\4R$p+?eU&&2k9%9<
%0CR@!7uhqfBt/cbW"3)QDko_?Q1A;i:#NQlgg8XogP5W^b+SE=V:!)",#nkV#hp@03mr,F;lMSY/T'=o4DE^l2VJ+_]aiboIk;(u
%]<98Y24f;0)oHEh5^NV[#42jif7Zi;$dEbtWsQ/j.m-k$]u$G#/mLMS"&FCi3udte$p:0amOPGOYqKPo4J2oi[k^'=BChY"rc6Lg
%h(qD;X/6\*X]kE0NLJhJ\g;g/+D*;a7m9UD_m<i-Q%p`mnFOo#qkIA7#lT;`g;Cq1iR5N=#b7[MH!HNjiU#ZV\kEk9MTm-BFEBd"
%D6/';aFNJlnCDG[R);R>KuO@Y3VX3FGXd@dFO5=-_]c9SSc7')>%!JijkB(]\p1rD.gL.W'<fLcKO4h0Aa1V6K!#<aYs']u[;('+
%"l]PsL)e#dFOsHD_.dKu^QKX+`V:D]AcR0)UX'pO\Ec2ajY+ZY-)nK`E@r<mVnX<HkE@U$dBNsc`)1m`\r^I`R@5Fg3cJYY`"B"+
%gD`tKV.$QP)Y^6c!t6f8WA`rPh5`eu`ft/X-ikBcU^4u%Lf@m<Hkprdgo=infgo4iqD4>;HDh\;1LR.qCu<i$**b,ga5YWP3!h<%
%#nQoE!])Eff1)ZGo7\qeBR%f4Roc&rcQS8mlJmba&b4S,<I;e6N\Cm&m8q@e6^,QaqaW^"W2+5eP%bC!WU#,?>^d.uM?`0s/NggR
%@1Z9q/Js$Omh^aLUTWmj1DF\N:)19pDpQP%iOPjYnCig/5K"oSZ6T`dD2'cU1=rd9k'l%r6F2EDW!*Y:fV3rY&<kR`>^)!QP51+a
%CI2jO0oAI$8HQ8p9HXXW19KaqJhf;mIsHW8[WnF1^H*/!FFZCn!s:T\KCi7snP_/UFIt'W'p_^%_+XlDK"E0n$FXeEEgLXd[IGJj
%=<nemhRGG-Tnnf8K^m_^"4ts%@=c=k`R?X]lQf5Brh/MQPZi;sY&HlVPV;uOGub$-F*p!M>=4E,&\hnZ(cNI@=E<SX7Qt?_Ne8ER
%"@`hi>ME9!hS"GU+f#Kp\.:f!;b5=]R=[/!.I)N;Pj9=1(rJkA(DN[:UZ!6<F=tM=8hghjLQoc6^A8B!*U!rr&&utOlHrFPL^hDs
%4F*HgXe_6BduEkd#p4ouc!uo[R5k>)o3@c=\4*=<)mY<P3S6n.U9P>r'JJR+V62HJ#_^diLBJ6d3rtaAeAlZ(*ZHb6BS6FVJ13<%
%Uk,!+<Id*(k"$gac/G>O^qbuW*''V0:H'&dUG;Au\hn?D*(WD=6A?36C0VQ*B$M08!38FqJI[GFK?*)8Y,:M9+U@Rf&F?f`i+YI\
%&0br,Ho.(qVJ]U9oQb\3'FRIfQZ"LGHpZf.OqJ$>i&J>5Z2h5sXL2;C33Y)IiL0(8-I:T_+g?YfS'h'$IH>&:)I'24&`q!C.j-E<
%4QDdsZ!7.Y/lpSq+\CL5S,a-dF"'0!hjb^#QS!`<M*_I00V(;P[#ukkXp:(FW5KZTctPcsHU*;'nIW[*j(QZ+Neuru0d[lGhN)i&
%Mesr]?a/rSSL-e6)OPM\ZD@1s:$!eVEaK)D.m.4lO3:7X2BE__="%-:q,Sn<L+Bfld\?_U\?VSoL-=mIaAH.I*HVY5a3'_N^1f3T
%qOn9)K>t[LQ]Wa0+t]I%aQ?kgTRU'>iGi2J-mTR=Em>2f^]!(`8fSo/bd89be\\Xdk'gae0J!P?>m_Y-`M:gJ*+r.Kq5+tX^(&b'
%%j`i#&GbmKm:lh=OY%Aa$=V]e_-bgK%r,4%\H0^X'9Harj"U#X,\#D"Z8I4f"627eN`*.Q^CeGB^CW1gBg>/!/pit?9]-@DBOiMa
%(%![Bm0A,WK1-W(.eIr+?R/D!(*N=66J]"C?&C>!>\p!f_1/5;_)C2N)bkRY"j#\c(+6Aj,Gb#OUe0EjnAfXH$=ho\$j?WnSRB:5
%dtUsgOo3/hdF]f`r9%":B!I)F4Jfe[s2;<-Q9cd[1o:5*+d4p+cX5)S%g-CFZ'tgC2MN7e?6u?9MDW3`d`G<-0SC(bU]3Ptak2]Z
%E74B&Gg`Cbft\gof5V5`#:Lm0qZaMH5%l3LE9eid'#=f84;'E8Ua!\+S7-TiQg=f3WikXrW5\<"W"C^Zi(HX18qn!0BZ)D0qi0bu
%GW<ZukMpoLHo1g(%o^C0c6.l5@o"Q-X`o+:Trp-3&7_o_r:Ku.7\c=KhT)AO>efmp8u"'3^ek%QWg#T9eh<`Q8sO$RXL3?c^N4&\
%EeQaEot0l0s&A3++k>aNHEB(-)MMO0$][E1]H?4ZlfG*EV9g[A,4D,fVO$boQ5$ndXV-WFlt$O;!^A0\#KWh(NPn:(E3Zmah^V\k
%pj"kVpWo0qP8_@H]j@UCUeUV[X]m'@'`P5Pr'@Xlg6HFG7_)H3^3QTJs"jZHL6(qqRq['7IkGiSbCQ\W@,%:]Ln^lgpn@RN6e#B:
%:\+ti/JnDQ:t9A>/)S0@UK)WCPeVo!^ZiUB@Y;XGZV1bX^U$M+R?L6]T6KmdN<YmPO[S`C,=VVP.GmK]*KRQ)(2&$XV#TJ.nDciD
%l0%Mn"gn5D&3TYhl?@TWQbS(Gqbp(.WEVXU%6BaKnGAIHn),-gcsLWQs')S[Xo@l-T^Vm^8`%F]OoK(>*[1BiLV04is7P?bJ#Se1
%!p/#=Y?LoO`-9E`79jnUn`Bb!rRThSrJU$cdTg<1]J$`oX/JPII_@\Tl!InPVJF*^f_oiCs88HBqMT0*n9g<.pJYo$aOYmbIF+sW
%C\t7$^$kT[0e6@4T!\?b;C.%^^V>M/60dkkZ&Y/CY>?QulOR*VpFe13ZE0cIhkIYHCYAZ4Y>VOt?UDeuDQD/doh'jfP$>L=)MD\C
%Id4E<VKK)jXE6daSI."6#Fn$7*o>9#nj7\gDCos8kk6KsqJTX1'UZq-);7WJK7:#[msW_X[t\fXGdkKE6M%HhGcZQ.>O?mokF=91
%&X,oe;Wp=ACDgfUG+n8Ln,?:_<hlETK>*%/h.KI&(F%sa4oVlq\)$<Y%jAIu9(mV6_'XTsiGE\SG=-VK6Dmn$'ftFf:#5)fo['@,
%"*%i*YRL9d`^Zm_Ld-8ImLM-+%S?-4'a0l(J(X7M$q>kUVpOe=$cFBg?YPaN3Rf'Y.JTVE4lk(5kdf@r4h$5h*]pL?WIMIs^ife>
%HD,MU9a'=T^[rJ!!8W&WGFcg]d&YN,'b7U`eJm;4\Y\n=-'YV2ZPUcMlb,WihPg0rlNCp$F0J];VUL7]c\:f/aS$p:VAb^l);=+%
%+:\SdjOn4RMM9&iV;6'38(JdGS8YffI7JcLL0YDhfa?Y7aT0D<UOE65#jkZAXu+.7>ROO:!eZN2;/]K%?*9^cI`.[n[+n6LZ!$9&
%6FN!,graa7kOBI1cuulu.Pr997Tp%$jP^_\C0qYn7U1iV@q<p-X^&Wgn;lS1dK(i^f.kbt!o#7_Hh@qYV9g73E#_&f6kR>6^0ibb
%:Io;t6)f45_0ZW.GAp<4[%MSr04X!i0D?TDlp#hakrsEf.CM0)W9*'Eq"R>`qrgl25$bXHY&rBRoFF?!i'fT@*Z^PnZ(G_k@R;9f
%6F6=0ep>fCe>TkPD3'\!5=o0EdQr7O5BP&#g]IG].,T0"j%abh@<I>Y``Y-?bHY;Oq5C-e40<\3;^nO>S^)3Cb<XO\0`0+bmg?O<
%)ub)o[+D+:3a8"lC/QuWU_#H^43`Ik=m=1,25TZI$gOGE\JNGSpSr7E/j5F^4SeNhA@M$Op;;bJGi6641ep*6:AT4rUdl:4C)!2(
%"K)^*maicp:\1P'1Es?6o`N14-R4dIqlj@TaO,<1Y;BHN2@7p'o)5Cj'RRSpPQ$)NR4?R8p[PCPOR'E11c#on,eKm:A2cO(fSt>K
%m_71S*-s/o:T\*==RWp;+<X.QA3a>7p?fnekBISjW`?1@V/t^%,p0RF.<M/nn(R);Q8:RL^KVl@A?jdHI(T^P<$IIoc5qJeMRM9W
%Z^SVC`D43is)@Psi9J=[Zcca#[2tifr.(?R%0XEt/sC^jgiB4uJdBAO^9P0(!+d7I'oK+qk^86e2MmB=ZeG7lp/7e.Dfm,]5CYF*
%g<a0[[8uJ"0:I#Vm7-?lmn?j\K]M2bV.TJ.;b!Ng]b.Ie[1=YOP"el3f01&]9ZPSS'qb`jZ\Cp1hg[[t\^ITE2M3hr3$3"7eU_I\
%@l;#>fku#nD!-<!W6pG,?KqCPL'q99Cq^a(+FT0R6LWCCV,ieKpY``-5NP24,2d-a6XDWHT(*\H!C*t-56gR,#%=\+p%Gmb?(,YE
%SUY-l?\tXpZPP8Rg7;t/TU<HfgRl5Fs%n*q+&Ehjc%+V)IbVh&<7WF6j@02-B&ijXN]hiNF<j.43-J27;jMPnT,elYOs4*fE\0HB
%\t8fHZm0#9na`#MeR(jH^*0WK,ZE[r1mYn@E('\b69?Sr5B$=bCngN7<Z_&KJR=L>[pSLq5!a4ufC4pH]Nj]Kb+34Kg,2BZ]MAcM
%QbOTK>mBOM!i$7*`^8jRiZcuZ/ag$fdB<\4ck5oX)N>).<ri^$j#JF=$s,AXo9"JSLPij$1*+5KkC\%F+G#5ui]Q7B8fBFa^_u8N
%*BN)UdLclG"8V\fd8B`]DofcO$Ic1pR'6:`$iSH4g7aS8a@k=_O'B;$j__6f9iI-e^%iQ-#KA:-r9EUO\Lt$FDIq;,\KYM&8/1)i
%pRl6i_&NK,3.@Mq\^MRa@%XeV1n1V_VV^@(>PZ!^pG7^m[d5qG?aUadE9$HdcSin52R(m5"a0SBHMkX2Ho"6BV8b*A>.!#Fr`:[D
%XfkoM/"^7S/b/Q=p8A^G^mg)@GeK*F[6hFPWI-F06\c=Zn.4.hVm0q@UL>48FBl/t4(jZX(uq&KNq4dA2,n0mDo=%'UnJ2mIaPN"
%s3/ug(5N#-7RIh2MNJ]%_r4(N#;K`,$'Kc':`s#BIH7s%7tQSKGR;4nirURDJ:S+iHoGLW>CR9iq(bY;WC>]Xq!n3ar"J;@6LSuX
%Km*H?lMA]%@s5q(mW9s2IRWnl9tSaE2Ye$2k>,b<\?.F9$(!T\`_h'7DABY%*tD2dGOfu<X3[MH!GXVDr*7o",Gn4KRXB/\!s1Gr
%(>@q/dNt;ViKl9%O2::3Xe4k@HQjYS]an>B_5oS4ebdP))N3ZNmGgK3UMf0*dDmuF/iU.GCbkbuF.[8IFe<3.-g@`bf?Or\QMFr*
%e)>7*g\22e;to7o[5BbHGd-Eak6f\/e^R05DfXH7h@GB'k?<,Mg,r+]*@,r;4h#Y,RsT,-YN9@SG2'e1p00KrH,tZVo<T+hnD*^?
%%I;`[fn81:s3NT2,LJO*dcnYK#@I'okOu/H+/Y+_c\/om8lR_0MIpU:?mj6;?R,2OG*]mT+%fblpq"[V;l71>Nir\nEW2uFKWc^$
%RWOV72LUs^^u-_7p[G.ST-C?2R\sjXB&gu:qD++4'?;'@chf&;>1c@>CqAKJ0B+K8e]u*o@pSpBe+qU#]$blCf2I'VAKTK0kO>01
%Ilof(e;>:G.X0q#g4]D[Clh:kDc_E%=/'!D(A$6JDC*b-`m*?4Gr)iF4&"dD]@4<,C>L(\ceW2k;bP`1lKmYTAuBS(1"I26-4S9K
%&5>oSCIVpZgbU]af1Xi8R=>(gD_pd[:-sd(qP2-P0!C4M30maL]rX[$1SO735<`a#iFu:4iV`;4"9s=Gl4A+c-\1OH4Tj*&i7kWh
%fpt3V5M,kR'2(<ZK7!H+lZfpILP[@#FL(>'2u@TC,B\9SS3/F-c_Rk)P8:?80)kWl(X9$EY@_EN(\8TF)tB#9?7ITR?8(WD!(@?P
%4TN0(j8]P01XE8HQe#Y2\!#K,&7VPZQEIE//k**n]6`IZ^#VSf]=E>u:A%8prO2L6]b?F/ofA,M;KI16H*WNFVX':S>\J+`DV!g8
%8pB+5?<)'G`7"Y6oAWM&C,ms!qWXLBln*-u2\32_D5!TW\X]bLGs4Yq1%4<eZW5kNV;Y=37)M\Um-18)/9\(+Z;]K*UX.dK(hM]?
%S*&RE,u=Br=u;L%WZ+OC'8n3cZc/^ZMbdl`Yo>K_g=ohYHa)d'Iq)se/NaouA)U"bJAW&^c)5M?F)DT[G1,@=qK<B"SPTP,RD59u
%8+nTB_t-OX4;5=h?#$+DGO?7(-?F5[=8P^^`u<>n2tH1lV\k4P4;4<R\QoP</nF[n;b",2Sp#pJB3#OZE5Cn([Lo*8Dd8&BfooH]
%IV1Y^NZLoj_@("#BAqK;p*gt7`ZjB\a80OQHT=1qlWpD$2CEiM@C(G5_Y23rG$$:hhM!!K^(YZ'HY1pR=e"BHe*pXf\\rE/&$O9K
%45mTTm=Xp)g$3',dF=rMeC&^kSA(T-%qfN9;rQNjCEgDOh7a26*OI3340a5i]N^c;&+?\l,N6NXYn]GP-L9WSXZ\1^Wa2-Lch^EN
%iJZ8R2LKY^>/N0U(T1%'m\k+=I`U7OiSrP\8[s/qSdJQBCV/P/X3_5=cY/g,Q_hmWE9eX\&Ul=&^P7(C`o][6X3dK+Co?tRAl=gK
%'6CR>dtqaa?(6XmV]R7m]u'>nWUIOI1_]T3de8@+5<Cg/][XT^=IUnD9I)ZcY7p0Sn]=2eDTA3u]%q*pm+uP"9H9;kXGPuW;01a(
%GF"l2e7bMEA7K*.rZlkU;1,(:X34_e7/`>SGaWC*::(Pf/POW_4Va.o-_76Y)/HoD)6"Fu-Y"N5F&FqMh+;t5N)$r;L$n$E_fBlT
%EVso9RG$I]R+sgOEg+,uc`<7b2b2G0rb45JGrZb1S\4XL'9e-f6>*UpGk*WcAF)G+1m?2EFD\<FPC/mh3*<@Zbq>e6VkSAS[4,s<
%k@r'KT>"!E2tsLSCHLqQ<'$f#:2QHAf[O7"gn$Q5kcR[Oa-S]]DALP.V[?(\f2L55S_DTb6ao;1mVTn?_or!YRV$m.@XiS_g7Q'H
%f(TQsC!fRCVcWS)etuALojiBDG#XsfgKBM0T/cAZo]8L0@f!7tr&S,4Wf-,>qhN)RG.$rt'.t*&RG$cod7erMV*/<K'?`1)L\g[;
%U7RmMBkB9Ag!7gu`H-)I5I7RTF*4ieS1/,oCZ_m2?dCPbkOFsh/93p9dlic:`[Zl_Ze!fHI!5=!q.;Ome$<Sp%Sk0QLGs#7Zfh"l
%p?Z)"[PqD*QdOKQh6$S-hK*-HdVsAH2*;\YH5CY>'2*DI:Mt)'Rp3UogERRrQZ&J>bh_%g8os+]p?l01V2;`hC1e_GS#V\sMs9G6
%`7`sPMlbfYj,o>Q9K-u/IkF5D[aXE%LK8XI;I@UWR`K9^[HFGDYL31@bk:&0\BV\3YA[Ujo:+lAAc?A?<LCO;<UT"k/A.C#Y2<R3
%pKI=Cd7E?g2JTb(qrmV56nt-Ud&PLlKhN_;^3@t](+-WAdAK,d*plZA4#G4!h#1bu_8pK\0<E)qf*g8LY.ejOl:rs:hB&*nV$Afg
%n5=WtO%hJ&c`u-p=u>@m`KILerp+iGVbq<McKlK+p2G)e(OM/af4+^!.kMf:?15bO9X,1*eCp9:^2l2V*^ACbR>Mf(:,h3mm:KjJ
%@bY-jN#`uV(Z"YX]pS5+hCTd"outCUe*Xb9,"I"Mp$f,_c-7P92"Ph[=^/?C3GlBP32rH3B$RgDO_JT*RTQ3=RbOZQFF?BZW3;d\
%CALssgXAr&NhI9^FA$Oi*hF7uYP"]"XNj:p[8s_Em%j)&NJmW-L/G+D36(:PjK'6@S2<rK739[[rGZKm3iQufesf:!:V2[j20")<
%d59E`0-.H$=.C.Dq_C3@?-H+;XNKX(fBSf'>s%mFhm:";B>WLrVl/q2`IitPMEP_Jlb^:Zk3#\/_UT_d74tum,4`c%pS-<-CPZ'\
%ElON^Z%V.+auO.FNOt_hkA8CfG06B,][JH"g$B`L].9A?D0I@uZJ;LgjaFVPPBcXF%haV0<-AbbeBD(M43H,T]SFWDEPB&jYV]_%
%4Bbq29nZ)cX`#ar<bh#uH@@_=dk";^1g8('H6]nhainppo9n@hjmr6@luK;&SZc^JPP.TmrD[,aXHg4p$LUW!jgBF-YSp`\9WtVD
%QQrR.Kj&3`rbQ=^[CpFHCC;(CS[I!AnTJc!B7=X`rb;rhYh#tdB@^Rto^hq5IcknQTY5]^?H=^/eiW8NQWQB&=A0t\F#J"n2]YYX
%?_6#onD3JQdO\YTPM,NgA+KQf]UF5:/_!\)/'h!?n#68Lg1b>ne6Qg!1=bfWU,5S*^-?P5PK*#oqP;`t:03>mB:5`WIQ?F.lut8?
%#P!'$p:Q^8Zlf!:ZAUMSok_dAO(;%)_T?VBroGmoHiDO>/MG\fgj\A\1flg'FZ701Ojsn&k2'rk7J8I\`pIk^DrW\nl"k+k:3n^;
%fQl>dW+FR=?fi;g>7:7t[B3sbo!EOc>tT#uGoN=A8Di(W?E6ah[nlS&g[3]tASl)Ji4?P,H?FG?F'L/=,WtD+h)Vrc\\!0+i0s3(
%a_Z!H[rurnZkq--B7"Fe<-g3I=uZ/H;Tn%tW:O-G:Q"N3rjb2&^]1T[P<"Hfjd$E4GFEMj4jdUrGg/Fu*ZDH'jPe\d:&j^sGLnn`
%hcBVEDQYj:FPtD<dkjSFW/)G>/KSZIlfOCPI-*&a+2@07DP&I\Akl,[(6=A$G6a7R5!3fuc+EfEQ2KUhgd1qE="U#hQd-pR;qF*(
%VcP7&UXMteq>&7K>Lh'nC280/eX>dQGpINAd5:%.a6MpbPrh-KhPmYh0?!#?e&=UpDY`;^H*;<-I@,%-1Uj:$bM-gM]a>S@eZ5P#
%meTq4@B"DBP)\g7ldbG$ooAimG?qp5Y2)KH9AuB4FT(LeVV#4e%H#0<BU[];rMAN@l-[W@D(FL_m];#-]K6C+<U]4ur98Y-oJCp0
%25`P1V2JOL+_#<]+4<m^q;LbQ="6m\'lOHFM6lfj<T<MDd,-lH.P;eb*Z!)EB8=IOI.=`-me>"?RaOc/^Flp;[L-TNnG#sH.VYIE
%bLq$6@Von(j`'lB<GA7qO/qF*CT2W!IaP>_<tj_kBp`+c#:D>%O3cW_\7Qd>QYVA705%]4F/MsGDBd9sUXQ(*H?4QPL?Xm]/8[P@
%gdGM@g5fI=ce_?jr-Xf%3mZW[G+l1(4`VL.ID,2,EUg@.P#s_iH+>_OgWeD3Dml()eSgnQ7;]H?i5BuEm7m2b<@b5SZjlD1Z@-t<
%s3PXP_qR#mX8B,5^Rf?Y-9>Qk?Ki`p[qD9/H"WlkRBCl9Df$=:0ERiJ%/#?1>cTF9DRpR]cl(=+A:1)IrOK]@7@7`U3q1S$:uDYC
%hp."9Ml:"cLRHrr8[$Jl(HS08ZOd+&gHj6JkMo`ZlPGA)')_9dOREn;mB9^a!k=aR26;-!?if&+:tkN#[W5mNk%?,[^MU.#m@@=9
%BD'D#IeY<uX)okc6DkI]eLD`-!Xj-$4^?b1L46+%R\=U";3atO)8^)WAE#nG.FV%cM]_'H]kF!'I;D#fg?!nMDccWO)>Mfa5LaRI
%f2a\,.G+B@$<W$&oFXk<XuBq,:k4WC68\4?J0sYJe8&Kc;C,<*lDd1L;3:a*7:e0D;57H\-0<s3WJ1Rp2)ALl0H<d3XQC`glI2b;
%e_u,Fh,(l^N2NDi5G2DV.VRm@Vr%EQn7gqhNruqocd"VS@`HO8B/qHVol9)5&%V@O0-_4Ur-dB`s(T$)ht4/B=P4TAjS?#o^/KLf
%Y4sePpk@6!d`>$18f-3e`k#K%<uq$IV!lm4N_`pT9A+)<>GYN$ohrmCIE8J"mqX15&L?rD!t(Tg4XH77"V4g*\=_;+q#+3bX_*E/
%5uW61j4>%"+)Lb2;J*SYq$TKU8&R?*!TGn%PHTY`&TW`jIqa%s;dYgfq)pYtKjW<H*/gh!s#g8Q"*[UkO</T19j^bV:Ml)!kS#uq
%=6^G5&%(3@$O0t2B`&K-V>$1&&SKO,p5X]pD]Ls;H?8MHWE)n;SFsr.CZI\0DNZ@<JNG.75ldjnd&Z5CrKh!":iCH22#1Fo$D?d=
%"b(Sei"I!KjXUn!q2pSl+6&9Z-d;tBGCnbnpaff*IBN%g_l\FeZAp6(+FA66<qoBn0@43>8"\*P)&WsdYCE>6orS]b&([(LT<^$C
%IE4l^.!/#r><dVBZZ4e"<_A=;:uAfkpB0LcDchgEQW_3(Oj_7q[kOBq5*pAddc\4Tp7'Z$IY]hhb+s:JebUEMqdZ_uIHt_a;kkfK
%cTh:ZZJNurodt=Y_'sfMb"@s\X^\!5>PPVSl2E:\%?8?Q2u87RhX0qs#Q)f0)CEt5OehF;^u>2dqU\n8R(86[S?L3j(G6K3c'a2d
%.acpoW@^7k_qV`k_VAt=?ANg'`9Cl79J.Vd2qI](oqgK6ftBeO?ZL0iA'^\m5C?AX\s]J?j+91S=MB^>-WV#:h*cJ-=JTXDbIc_n
%heKciHJCX:9rqH^PB;4qXd"[_B-6$U[9LA@$(Xb-HHE_Ok[g?';q=rb+o0R?m3];;HF;t*R-`ukf$o!1WA/`pdq#K4G&ck^;iXq%
%cAo&GP504tm,M6$m?VW'/'kc\`)8Pn'$Vt$pN(BpjXO!BprYbHTk(14k74eC(JE:XXd?1N=8E1l*bI/RIJ5V(Z9EUf#GOY2ds$js
%/c%<qMMtq&'m$"EOsdNVVHh&.U"lP[]Vi;R.9j*=k0c-QIX*5"D9bOJq[3p*"eOl)Q2^^8g%Jrn\Pt%@j&8+0XmXd$e@N(jE'!Zk
%LSak'Fue*??D!4"U,W&3m`E['2@rG2DqC(;(<^@"M.EqLq\!2j>@)DXDH?'JBuqZL0OuW=h*!",3O9I`gsjJ>p%2^E%U%[nSVo(!
%;@VgY7IK,TG<1lC>+%M!/pK:[M4(J]0tHGB>BeJ[Zh!dP;4P;\ES$Z.[&#W75D`m\(?a\U#un%'Sg,GV#kY42X6I*WH^Vjib"OE-
%^$8uDJKO<)'Q-7dBZ5f[Mn_[3E\$G(b'A/#[SJPe+67+TV6NH'I%a!\f!5ZQB)Q^L%<T=qZ<Vk4^Z3c_XI.!h8D3u!e1.jh=MjHE
%$2WHB0j7R.L=tNbk+9t[m'.k>`)A+QcTFWPe]"*2CnWOEPnM'b,O]UJi\YqB:*!rH-hZ*0lg<+F'#iF5ra$f@8sHNbpNlH_AR-Pl
%Eg`isqfMd./1t"2VB9mDlF]kO>^LF[j)SopTmQA,ZBIE'S_qP#,39i%*?Wmr"[E.&G5Nc"ITC]Y>?V\X+gIR+9dK>b^&IoR]g6N9
%'E2EFFMe#R-cA:UBr#CJ=68[:j'cL^UZHA+-I]fR_b)OK1bufW9sqXG\*#W+gu./fLEXcP^"2R,T!4\,Wj[+1P5!]le'1Ll^&3t]
%X7!oig.M@eLeQX,aH_]n7.cPR8oAOD*D+l$nT-V")p\uXQ2':C`PUa_>6^cJLq?u*BQKB"oOBK-Fd>[ua%>I:3.H8bLRX:0OhiD'
%ZE]+X2sse\kK6PgVFfqEb#&d0CL/?qHhfdA^"bHkDWB0E'(]WCc.K8ohNLb(0Gc`c/E\e^Pn@<VGeeAOLKgO%Q)_B2`cb6(G&YI,
%-a%BZ/b#j0`J=/7lD[j68MurLX^o.h0h#U=6jEh$ZO<m`,<$9WY*6oVg+7BYSOn\%DG>u5#`;afXg_;o+u+FfZ0=o'RUPA;Drq[n
%Wu$ll&"0.l4&;GCQb&sZAs141l\>;dLomn')sRT#1MkFlelG\pF7"9kAOE'tM#+14q*GWEUg!np>M"c2m+gmlq,$[qq%X#qf5i!I
%JX)FC%GZa&nlE4lo"-_mVt>Gu3dL;#SQ<LOabRgWAi`[]*mR:tm*;F!X8[P<Un>,N^N*i*1kN@c3i/YjH"931?+aEF5=d`(j6GZp
%?G&?oRPWp%/4_k)DkqRjpp?o8Ds46*V7<n80?g9E#I(UE&"7+_Pem-`Jm:uj:];h=G)[aE\gk>h1Sb%EajH8%Z(,=E1<7E5<BH*c
%/)1tKOTHLR0SNR)_h$l*QuI/+`*iCVK-&4k"Nrgd2%;I6jHUiNMk/!R@p.+9k$B+5AKG\J%?L#p9E([CcH9K!j.5to%(^MXAMi>)
%X:MSXm<O6qOj1r.UB)!&(o;k!<o+f<87;(s`glMd3/fdDiD1[[!FNa\GpA9J;2hUI^4p!?[)(62@ht1D^RMX7O$t[i57N@3Z]9L"
%ZiNVb&UAap)eclGf[l3k`o;o+!("B?f;dUYF-)HFe`![Ypg>(JhluGILT:brDg'9:=W/;jI<7L6_:4XThos6&LYN,d*Zj"UdB3q8
%QeMT[aY>?Q4BUV%5`A63jWAk!^uPDR\j%P\`]>?-8+nBKS2B<O%=%NcLf#5:J<uMajAd6/=-"?j-[>jI#VR9LY"!9Fq.0J@VjU3%
%<q>;V</mRMn<-MoSr^LoLV:m->^/FB[>(fo^',(;,'t[.S2d-'I8&8]mM":%oBV@bD#kTnmN$cCmK@BhkW-7:nCC&l*aWUD0c!oY
%2W<UqjCY@_7f4uX13#36kG;tmj/^DLc>+o>V:9o>H/-U`,Ymbg`LjXInjOXk-H`L1d_=;B?\pr,>&SmrS;:F6UO(M:Q59%L.C!:!
%!j8Ak.R%Goo@_B^ai+J6G2F7u7Tj@_mQnY#$X+>,^VU$F)S&mKRVhKt\?Mo9XL5Q^I$;Lc?pKi+DdWGncHA./(H.rc7H`bOSr7Ls
%%L=qHbt5s%`'_7c*dTMX,Mq*QkAWK\XN[Q"m1`d76W=MMqO_gkf\cBcY0EH[:.iaY%$>#a-uhDB3h!eMZ)J/2iJ^'&crFN>?P>Nk
%bgqtV(h*u8#EYjD+PGOlc5O=jjMC'jOZftKUs\-n54U]Z9%S``+7R*9WZ`Feff,R<L@2nTV,e'])pctJij5BpKKi*$Bq`#`Sg\nk
%FP5@i*I%5[+(f(b$(Hq88L"hDmZ4Ptl$30B8=YDtjj*#O.tk*=l\j\OEV2G^Y2+btBZ9`?4pg#aBu=p]J^j9tPT5t+W\n1K-27pn
%WFo]u4T&VQo@d+<V4lkH[RWGoOije:DrQCHSD;rfr+%G7m"7H\C%'$+oX-B\GjRPgh<i_>@=kl,jibAACB&<8H*i'A#++-FiV^es
%BPu(.c?$aFW9q%RNK*?lV=S;6T0;)Ur^TaYdgRW\QfrO+Vq0;Qq)Zj+XK=-?^]@,E<A2$#)#U%tg.YZJPbp+(G/GQfE.+)FQ?Qej
%+7duu]UkAE>';(:RFpB?bsrO#&ma\]!%jG)Uoo`!\beq-L:s%4Q/Z(*EIJUm=fOndlD+m&-RSS<XF:uNfSjCM47`u?db`GI34gN,
%%QJ`E[-t9)+d+X_&ijRq'doKg39B=>**<O"R(UC=2-o\%"c"1/f>lTgp,2e\aDXHK!ok>U8X]HlCm%Z%e)2QG\f6AoOGd?bp6%M(
%H<Hj$lHXi=;h"6PHkMs=+Er9?bG7'EV/hI$_J=-/0Ta\jo2U.:nh=!>W7j@=9JthM3XpD`A6X_aO`Tr_]!pAi]BO*7raRqXR_"t-
%W3G!+qFCgKWG+\R[fmfEQn9pseOM21QJ^<\i[YbXqZm;H3T"VEN9YK;e6+N4Q0d<mnX_:tA]UHX,[6.@2b@f14!IOHmRm@Ac#6?(
%<n:&Z10ZF)l]cg@&PjIm+$M$4o2.Ig)q,b8:?kt8GCg$X<%tA2RB>f2Guu30gk952b/q0T]D7koPMH,tb[mYD-qcGQWJ/Ri>\&jh
%StQj+oAXcdR4,tB=KYDieAf^IO]jp9Au"sl)UrsjYP*D0/o`f"lOB`JV.4r_Mr&@>(^+^=j0=a(B#E?Rou;k-A"[j&Y.OF-XY/.:
%O7pZG>=dm3Q^dU,2E0(07[<<1D<q&\ZW:`1c@0L'i(]Esb$F(rj).NeO3@4_6L.5k0kosq'0CEMn^<o!7D#IKY^&`3P?lTgHSoNo
%XG`!roR?XQr=+=Vgd``>9d]Q!0qEFG2./>BTsQdfp`-KDiV^fbF,1L)mKg(dHehrK1j88[JZK@PDDI`]SijC.onb,ekhA-h2V5B@
%is:Lf#./U$.^ct'lCsk4=N^%WQ;d1D=g$>a17.4C]KRT_,3dmKpG5h<@53+/l-6k,WV=o1c''_uGF<9t%d&>L;3Df!;>g*!\9qK2
%qGr,GelIJbN_6tIA2^'%]OSAtmk`Lh/sN`-)JZsTPIYf+p+_n/4<AE9Xm0+^Dt,hJ^.EAE.<1[2.caVc]teYZ/l,4fQHh"A$+Ja$
%k>:<.BuoJ,kOTm$3imaRYL<Ch*G&fWZ1el:F#GqMDdKW50*eCdP17^!&`Q#!)L7cCS5o1Z^u0!;]:Xp%QXbER/7?$;T=gQ42:F$t
%1Z7$>,eLRc(Xe'`7ki\"XB"[0HurGk+@\7"qO,U?DE"mub[jj";q%X4OdE8NQ\.0m4jb6DO?.a&@KU@JT-L%B9p6$Q?d)L@*V'HC
%l:ZXB\%9$Z)q2@e:80Oif?7,tSbO&5ogk--7Z\V$aJGs'k)bRMrrs6kKCH!"]lI$f:NapdT50jS[HS%O*M/@TgX=bTG;/H*DJlM&
%%L;V1dc)HL=h0/0d>ncc`'Kj5S=b_LG%^W@N2;N3jFNmXaW"T::9:P)-\G+W>=\=b]GNo0em5cuCSt2kBubCW+>WRDdr6gDl<V]V
%O&]'k\_Ul+A2e5f=?J>C?aE>eA1pI9E-[ge-*))/9LIIiEBb@ONf5ITEG7(@P&AOjKYPL3,LipBjs('I`9jrRZ#dXIe;X(U&WtXs
%Q7ZBclqClprTZ=JBYi%/P+"9]'+I]$qBe^SFo,o8J07`W\#G+GQsriY,t%nl'@(tIU>pJI<aFqup)8lilto5!<27iiGiRrl-nV+7
%MqOi51)mUheW<,sODGU\aD"<lfqTjS>J%Sm_SL$@2kZc>K4U,-)kLXg>FH,4jQV=Z\ZC.jq:5Umh)sP*GC$gr1,D;SrKA(e87S`Q
%4d+^U3$1,Wq8CW^50l\/Att$s]@^c`f(OnAGG]'=>^Y>V1sKG%o>F6G(C;#DDaunbQiY%HYNc"epV7+_]%4RcL4U&4'>%G=4,R:[
%K@sV5:G/at>M!eY]5K5-&t#DUE%W3<8U$ra6R"[ZS(isoV=i<(mW)lQk(Ru,*!oBRpA2Yg,tmIp;IrgLp60C!r><lm/:Od_$CbQ/
%[^>.2^X@BXLg0J=`B]JMNgV=$;3"`64!A,3,aV.d'!\)$oB!0t=KlG^R"1O-7l5=*OHHiSk?grTDiRN/1n$#h-gp(R@58S:)^6O*
%e?#IIkAj^qS_fsKc?adm?+V^b^]g2uX;mXPR@Tn6M*^"oD)^*]\\_#uZ$^mj(9)?heVo46&deN;B2ZXtG4N.OT9"fh_F:1<\X:J)
%Cn!ikPH"78l09&c**tZ$qgK2e]9CA/C?EnZ'.XIhS%;^KS^3Ig2#j"Kad!Q;%V4*T9_m[>agA5A3=]\rWsND__o2ngP2!?b;JrVP
%<,YRg`J+uPV/j,2?SVu[LT*a:cYm&n>r:e^HDt?N:H$n@/,"#p\,@6&l"9*-em-:#Hl0[%fD'K=lJhMHm$piNF=u5t5'@0ODIggM
%j+XmMTPe7MgbZ6On+q^Tb@qT/8,_DMMUKe6q,8Y*7%a4DGhT"=^RU@<3J$FMF4+3.Xddg@p=k-`.cW$:]9:Laf,%(1$^WrSUq<jb
%nRh(=%<LpP:AP7nrW+Is02"3(Wg#WufgO]inIh3C7b2Z<6+We2]j*O8iQ?+O1&EeubBg::p?nYu9!Tgf3Mub-3'Fd#;Sm$)GOseO
%\O^YLPq@iKS_Auil:uEd.*<%sgG&=5f`HN2=eb2\X)..NI8!f,Ah61Kot,puA3SJ5(U#oSoi:RUkK*O(d75Q(N&$Ilc#RggGr9YI
%^RP^ogL).Is%*I/Ho-S'Pcc=TZ-65nIK%4pd#=`hakYZHb/N$R?7iMc-l@f6Mh-hc_ah,@`I-5XMTM![Y@(%?Q9!C\#?.cf%_o4q
%D//1[prlXEnF3fHCp&O(Et<?$#+4BsZQ62`_Zfmhhqp#(*GcdTV2NeHmA?%F[NcBSOrN-o!lV>C+uI230[;>;-?$Y![:FXYdHk2h
%,OUIB&23.Wg!\S$%<X_\T(5X_f2LPd3BV"ZgEpD+n[i>G<pF+YUUSUY>K+qihgO_n0;&aq_XdDOj*5g,In.BoI>2`\W'Jo.h!h2'
%/EF])G[%K0gBTnILDWs)N*=po&$'RaRY)u"rgq.Pf:1*GDD,=2op_RT:TK6+;Q&5oIIk+DXla[1mo'ZZl=YCd!oTiQ(X'O<X6MOu
%bDHc-'R6#s(N9<F%m?_L]_gIR6?o'-@H7$m2P@\$TDgRcX[@C[[+f,%,Wi\ZDo=]maq/T(l[*@upRp>@o@(O>c`tiD]O*dX58V*4
%oT/uIs-W7b/K$e`pmoBijTp=C\#3AR(N<UrVT!KP[LL(A*ZhsbhU(c+iSb$S)H[rkPPjEAI+tMo:B^P@Uhc[;d.OLV.fVn$*n.L-
%JJWG:&W5hEL`<4"KO+Z0mC;>h#/E^`e9*]<0KkGO`=pJgii]=d"OimNjd>9"\oGWqge\pF#u!Ht")Pmb]Yg1G,&ZFh`\H;CR;C'.
%0[4W\_!l5WbmfrJ]1kr'>lkBcY2dL^]&l$D;bXY?]HnFL(Cr#2(t/!7QLG=NY%dOIdErsf$I`f=jI'W81j&(S=L8LqL0Rs$4bJhe
%+IbV;cg;8Z/Cso!`(e^d6F=?a%>hdN*j+0O6Gda4IP--j_NR`Id&r'VJ.#.>km6[<YXI8h/5q-W/6/&uiQ5Jh'mJnq0s0i1EE\)C
%Tt3a@[rF/50A4h7)EG#FM\_2:GDBW3@E:55*V3Gmoq2<cFlEnf#&dX6gpYV^d,c4q6Peh'F8cJV`?!:u0X#%qQ`^Lj^cUY[OCafd
%;N(EuER2'U!pOr43*O^jN^KUuH$(A"dLcIod@P#WQ=e*!JZbk>#E,al:gr[C'KY'[-9U-;&Mn8l6UTS;+\\*_YT,njQ_n`$.s7NL
%M7-(r?SIKlMbmiDG\!17KGaiIcGu(jcOl`O3A`.8m's4IYc=npiHuKBBdPbqE$^l;RS07iAD.A7BRAObM!Kf7>m9*$/lCuggl>Ke
%n3R[B:.X;Gh7*H7@]L8]a!8`c&N.NjQNW7YgN\!,KBNur1S(V-GJ*5A)&U?PBcW7r#P'TD*!Kd'ed,Umd4.(3ES)BJi`1L7LQ4`<
%#E#8IFq"P;&20LkqH?-=jrj<^?qR.*&@*pnmb&*=eeT;M$B/j6UMC@ueomUo.B/*RjCq#-!_fWa),bh@'IF/Q>M!+D7fdm%,7:"F
%'HdZI*\j"#BTIn'$&H?Ml14WU&duW)/t`u9L)A13Y-uRa$-P_#"N!cQ"Yr5nZ0W%F]+?%s8k20p9=slpiEVP++icM*>T>c+VjS$=
%[AeeZ$OJ][;KW3d4GYZ.`p(meP<^J*bkmQDK+Eco%I\SO-'WkUL5nWRnG6tfLCc^LPDj&WV3CXiqN:Wc`*EQ\#3OHXiXD1)kLl^U
%QgBg(%(RWa?!Cdk+n:U.'-Y:ggZ-0o+uDI2>8ko'js[=pV?INf%3]]!N_W8#acU*a$"R7=@*DDe*DGiS??FQ)$(+!d&AXlsQeHet
%lqLk.lQUM,e1kg>(PDs3CRB5=3`-g5F:FIMJ.>l.Q?iQUK?5*@iXkNQLTNB3:!@.SWhCHu%Z;*s/L!_G40b5K]9dQZE)"PESQq.'
%'>hfZTU"@a2<nM%/gN$l]]LqG&TUT3FSGnd9#jQJ$G8X=OJ7>7eUTTUAI!C07J&hZK%W[4fWN5-+aH>Ig1@g-6<P8GVmI;3Qg-n?
%cq_X*S*!_qT.6s=_M^62$$\a,^^#kK-[d*O6/M]0s#BqmE%HA2!GYuNI&+\O9@K"7.\Os:+uE^G!4.t7"sb$b0UNKREZqE)aE(7/
%,Rc7cEZL'0F*D5'>./"X,U#aW6`OoCOG-aWC9Bina!ZY-,&N=Les&[B&m)E&TMm,u6Z:De"@?`/O&W"<OKOXKpr!f-7WDsGgAk)<
%muS[=?.&lZ,A*&V$bD8?&AX)'4m5<TV!_@/fF2A[7`q7P7Kc.SBhFB;%bdFdd3]2JX+HEV1q"3BW>O"<TOiFcYF#esW()si`&os$
%9@s<SjapNI`L:@"Z8]%\UH!tO*Q,^dU]ET=W>bPAZ\J8++q;b\C=po'O:e'q.Q/GlGUumGHqa^66akGccksk>@<-:PP>\]$A989k
%`+Ea0nSJYG-u)>`ZD9C_J4SL(@_g*I?4`u1/4qFuT],]gC_@O-?B<%8#s4'-"q/g9EJPmI/=`*_2+]LN5Al6.2__pRJK%;h3X?Wn
%KoO?EZuVlf2)e*H;JAfk`-O6W9LP55aiY6*S4l^mFm:Mt9O^]?1SeuA3Cnp\mN+*YLXXX9CLj&fHI7ROP@12s=@Wtt5S(rm:cb]R
%BfC]'+sMUNbt<`=if<.6g.36I'eI-1Ukq3(E\W2<U16k-H3[-@Z.t&M-!#\,B,FPY5d6S<:TYW7Nrpb.M0,!h"I#]1":Dq0T/n((
%!<pIs$S#-/b@IV4/H#Sr1;]FsTO-B=0FO0Hi=l+lRKUh7FY_YW$`4:>b(]n/_ISkU0jM75S39U+O<b'p!bBd<P"f2C0J#>:*Ujid
%A2aHm\TZDlJ.VgG\]YATq(uf98gY92\ndsS&,]*gRVM.VfQ9`I:,F53'H>=$OV`4SiPpVc%@Q8iDKH`'(7ZO715mZflGgq8V%O(#
%3Z=eE+U!s#K>qlPr#lT.Q*BA/q7mW0W>B);N+'M4E*2+gN#uJ$INcNuHSXLZkTE8IMuaF;U%!`O(+rRGjX?)).tS[NYQ`4(F=o9h
%$V8?N*TX&lO2D_S/1b66H($#1"<45f&rKb'\YQQ?8g&-n_#:Vo12MX19T/LQB<kr?c]M$)l(CE?BqER'81e%:V<^]u9q*;KALQ4t
%MmVQ<-L<H6=lL(K2<AGk:LRs*Z;G+W686IM]ge_VRp!qA_4d$N%B+YY_HbQO1/eH[MARa7-$dS=10OS.@!U^&aWoGF,)\2DfZZ[D
%W4q=8lTtn!@NZ\?W(DC'$'slq]*i:E.ZE;WE^DWS>\H2[>cFVXAoH76/mABj$,VB-->?!nbr<`)J[o_2$qi<>W5Xls9?1h?#m=In
%"WYeN^p%D7B!E1!a,0T3QQ.:'iQT:!HO2l?N>CKXDC7bk?!'K'@c)qN7@M`=E4iF-A(,rFNI5,O$3\2sZ#k/1+YeiM==72^5`V!H
%)H8f!3"+<8%?DJEL&herig'_E+^l.UQgd9ELlPR)^`*9Y==,<"CoYAg`7u+R*TP"f!U6=!.8h0UMsO3)-jqF2[&3`,P=YuC$9J\\
%&&DLq5H_A8KG#48\-=3C6%O,K7j*GOer_Q+Tjjg](t;pr=GTB/.R69=UNJn'&.,p9`:CtXNA4,m0bFXu(bB<'3Om]7ceF#NOAKo2
%KU@]A!_L)G0Ld>TR[Pa!,?c7j;OrO(g\JeET![5X0Bhf>4,$\Y0N1FJ#V9A+Z\`>2qlgd*o0eZf,U3=6Y&jj-&Up^`'UQ<P<,QG<
%Dd(Qt0HJi;I^RhR1"^K4fF]So_OO<<Joe;-@'f#^;OKp2:ZOg<6f*n['.+A3_)tLF*AW8[1f#T<:$@VeEPc+LTMoqpU&4pX4tCh:
%n:k+.7'.]'P&-9?!AL&nSRBBaVM*XhJcTJ9Q_fFZQ0CcH&R9M4;?L8>LuajA&FLBE<#3,3:J""G#omZ/_jN;g84"SK0FHK<&-gm@
%KGMg?Qm41PSsc6^p/r$nYj"S!p+QNP@:1e1e<lXL]rS-kcZtP(=t[Ek!jN9&f*EhLeelLqnh;V+qD_))l[f@Qf"q&'$-6S/;lak,
%nedjI]s!j$ZDW)n+1A]!OY2/YR*>oU&64(cj<q6r0Y7F9nIu-=M9<p\6nN3u.:'Dbit5<DSOp^E1W_P>@\cB2J`5ft6g^DO4GsG*
%'N4*r4/(PpB+(UO5n"dm9q*u$'Nd6r"jcU&TP9eL5U;R'1;!V,@^?-UOThnCIjnVi$:_HAH#aF(!LMmoPUlA9>R/*J"2q4WWYHR*
%H`$ukF&(EWM!YLlgu3SDdSeFP1;H3oQ7-p:Ln2TC0OQrp1pT1EBf[=_b\<D3]af8>ols#*$"SDhC#M'1lnR];QF^eu%\_29Sd'=u
%'-b=bdM0SiHSCBg9:$P#^6t)"%=Yu>*7e@9!YO(^8__`tCQ^U)&.^'(I=g9?0Gm:%r\2FmTMCMFHjIk=m\]aa0[B_F(`!>_!Q&W"
%FBA.4.1J18!/=J-"dk\%&MPRe!,Y1rA!WmK]M8o2.%D\Q\hnN/-E*.6'f^#QBfq]-SfAGa(?t6rUBm.KLo<9SbAf:fFk^K>:T13P
%Y?j0<+X>'93XT]/;i]4n/tF@n!3'AO8&,i$kU%'6>!XbJG)"L))I*LVo\aF;eDqd(h>eah^bQq@84+d7A.n"6Cl4BM5usO"rF5$h
%PBm4I\C+/#q\hF<nNep$3_D)gF>c-e(jS0\!c^.:-Yu$#1-A&L,Ru)Y"<dK.I<lET-+<c*,E57MA7fsaS5[ni#C(/j97rf!*c-c@
%(3l$ZD4?N&J4XFA&o?SKAd"kX3-Gh"PZE;@-5-([UeoTmkhoE18:dIKHm$?cJm$[Qi4F5s'o7Gn.77q/JHM;+"C$ILA#cE'i<^s$
%4N+087QdMT[SUkJ+Ur'[Y*1gYKS0"RF&2s*`+,!\bgq3<=E+1?5sZ__35$^o3Kci3XC+rkON43(F:*+k0O>Qi,oefK2?f$C`5n$Y
%Afn+4`0F`<D'A+SWl$TF%($GZ;XuMV*2FOHecNO5(b^fk%u^D(5Z>I/6u+dAqoSeJOfcN@AMU@oO"0I,^ll&J!<=J>_;gt\[^NK3
%"W5.-MoGOQ5dk1e9):e6nZ$]`Pbr8qEI8U9W-JYT5k8#.Sr"!j[[0(m_(nk#P`8og&OtKM.?RCq#)F(XBt6kW5//dNW/CL@_2C^3
%f(2jb1Ab3BfISSoloM8qJ[bW@cQnd>#J%qNJG:fU"h$Bq9<*QEA2a;C*_7130ojbT>kmGZ83+CE:5cLhKMN0#o.3A9!F+GkQp<(M
%PT37'Ui8ZV/QZ#Rfp!BgO].=#B7jh%P1_1J!D:cI[\7B$p>iaM)4?<[!<J!L:eOjT-MS"U^YcZ?M?u^go<p3[:R7iiHc1G?:P!4Z
%*2Ht!+U*P;!Q4-*Ct4=E\!2>&B/.qu/j^fldp-L"^ng1JKN8Wb8sc*RAk!&(=Y@`N&KW_;2338EduiM7ChYpjn=ilAP]MSf/Zj=h
%j(2t%3K+NTeMUm)GT)LR=baan/?,Hj19IX-!L:PW*T[PMJ:[JHLDAdZ_JXF"R>oXWS("4'@0sGP6M@i"3@#GeZ)6=O4.Q2GJV9Mf
%**kTZ8YUb+RP\3TlZ.XpnMa,:aWC&D#sht(mt(BS/0S>akmhsmJq\hGR4o%+9<sPtDCGY*jMDjnEGV%t_)[*!/]i,\b_;RXptQ[q
%3X?F8ZoFff6d<#4Kb=cm:Kn=OWeWhT$lE]U#u<&5\(`P2q!aA>1Sb2jh"@DWUqB[j5WEd]Lc%fBJlpG*+-VgU(50[]iZqF?C/H\8
%Q,-k5Ke5SaG)3aSW=e?R`KM[C88Ksl^lH\s10>)q7%e-?Y]^e^Q3tHs#cd47=btKsj8l,O4^3Ug`baI$$6*c@`&(mrb&rY/]/B^u
%"k/aT2)sh8kcI+_.QBYi<,TU>X<5ZK&`:k#0+,3C3'?9<Z1].`?.n^h!al>`fkj#E'@DV$pAq@k`/qs+N'L=W/3>i?\CoEDi;7a;
%;kO;J9'VFP5=ccXi!b2`bjhG2T#E.q@<Weo;U,eib8P6_+[G:N%/G?qIpGmb1<b9QP9s!.,VC[tNtj?N_@/UHjIhoLL:r"s$kLci
%39_,j$(1-!UEdLD>:k`-F>DL&fFe>2Mi+0i(LRB]&giTZ+qp<lP_&6dXJ>nQ,VlH`VL[@$O9.e`RpE-(@`F\U'@XhTI!Gso*=;FC
%fP5A-3!,$m'Z6`/":u8&X(u/>@qmJsa:ca.jRB<0eQFpR!3p'C?WL9X1ZUum?<tKqQjF?:[1UkU7%&uNNmpEPZhf5RcoFu+cVV]n
%@>a8$7pFnlF$>SiZCG"*fND`4c9hF5&M>#_OlQ;s!#N:^9/(YDS.,KG)5hH?&.R^9Sh>5CA;A=h+h9tQV3Z"FHqNlDF_GW]f[#1F
%k:imW-9G*FQ;EkQ@_iNo5>Jfr[a'uOE`dB,6Xh8Z`@4"0b4H*VFTcSn9O<LfJ]nA0"RJEpb(c-/dN25d"p`H371#nfgG!1SLbVDG
%6PGo'lIru@:ZmY3$_hJrgT&2GZja#K`jql(:F6;OC`_,XZ"m"i9P4aS#+=.<#NT6,T$5Is#T@c-#3g)O>r"JdFO%f9Ou-,4,Qe]n
%$k]C;G(u*7Ot/N&Y/cfFjR!9p&-Fd8J<2tAN-G<J)&gGt*3N0_HO93P.=4nq7\oGV^^A'rAjceJlQN&*h%`TfV`4tBN&5)_jBcfH
%GI./V#[C$rb]T89i4AK;9Z1<ZPn5j@bRlhroF4RJZTJ`]+LPmn&nY>t@1KO(a=V':-\qdGIj\b9RL:(YPbB=1b(McI`]TOV-Ls"(
%Ar%[KRa0aJ:dAIiAkS=jj8)!jbdRGV'r6R8n:Tm3o+Y%T16"H-:/_@g&;&=ih<o=VR8D_%[db29#a@<7RRi_fOoQcr=/Z9?N[dEg
%aRkX"8![;nZ-YYXAA_W%*9/k$icO8P\dBH!VqaEF<N)H5FU=CpTc?f^1bsjr"X;pa8XRUP$"1?Bq;+=Q$iGObTk-b1@u&a'Q'&Lq
%l/*NX^mKbNmAOB.PSa/H/P0:mb5sgG+]K/B)5\WhZ%L6$&".-&Z@N9ZKn0BX'^Ki::p?2d-\hde*')PDjahY]'7i9,1N59pKM5@A
%U2I=!V<JO7Xt8S^&3M>f/BAjYeJWG-A6Se9/f-)&S64_MRE#I=$KbO':sPj##mh9J*tgl!W@k5G&c^hR$.:G2^r?)tfr##Plb#ht
%cEr>r291mqW,R)G?&%NIG-[OH"M:f<G]hMn*7M+iY^p!4PUJ7[6NoIQ-V$J[JrLTL"ah<+jdK;l(^*,fN<b0ZAb"Fu%#n0"(lTV]
%:cL.D]3Ju<D@'1L++f1WjLVWGLI7L#*#A<1RHr9m"M<A?(Ls/;b>f-4joe37H;N\(9Z9O`#BJ1^-:`:R#9?UWCd]u+M@VihFr<*!
%/";F+XER*i"_o$"*lft)!6btDgQm=/IT'OKB#3/\`C48XMAB>EiKL=l4MFpLCM5^slA+b<.2q9$D$dX@+_t=E!0_HVKpFG`RK@)H
%]%j0V)l)5;=NS#b3%,_^8j\:(p5gGnfGqGHl>=Z7F\+q2(@N,]<$Z<?\UhGhaHt6$5a#FY?BLW<o+@#G%=/\N9R3'^IL1C)2A`2U
%\8#:H!hm_M#_VH5?.Br8@0m8%$;hgCDTZ]U*'[SJdRYL)eke'Km]&4/J6\rZcdQ;A"$p;3Y;R`(O3(8<^mQC6'pcu[0T'!]Yfk/=
%73jW.AD-`#\JAGISh-ia'hkKm+946HZme<D6:jr\0aO=c_1e`h5GtGkNXO^0Ub8$FHpB)DEho(Cr%^\d#<^0>^j(%lT]C]5;o%$R
%_4e-t$1q7@R@GM/l%Tjf#a8;njR>ti`\gGgHsf-NjqW>&,f$;A8j^mH[L84aQ,e[onPl'7X`6'SfGl6!hchlV75"ipO9oMc"hPD%
%]UjdjN\;^"<n@Rf,+dt])_#+$G0b-hjKr&55qZ6J!Tkk9*[PZ`ALO-jf_XZBL9;*K>.bggjnEeP3);anL`@".>/:Gc>[F7e0F)AN
%`9f[i49:D=7aB2_m6M&Ya/U';PC.4G<j5c!XKZgYQ'WemA.Ih/G#5OD'@TfFlKPS[dm2G&B;SCebO)MTMt<GCllqMkFI%XWAXS6q
%&@LORFYFodWkis$A2H-Ofi2QeB4aVd:!g8"1pWlred8`:#'6RdA1\)=QBQOQWAB_A18om!e+Ym1a&NkH_reCf)\/agGr1$soa;JU
%ZcCCCA#59Lj`Ri=)!h;CAd,N?D8U;mbS$H/,`TiV"kO(g&;1`0S3'):*C3flf/$+.KX:n/)^a17,?0EEN)V8F1.@c;P9n(?FX13D
%$$.rHP4g*eb>^/kV;GDUESA?qMN#eN3XS%oSk7t0\'C!P_]Su%jZMgoN,?^7/OQ@44Irg,#i`1iMrGN(<[2A#ad&)b:?J?"lfNmQ
%m;EAuLauo&a6K$"(E><C%1Otu3S?^&*p&i0"%";:\Z1KoStkX@Ba/R"^2M"6h5'@sKK@!"AIciT31\3C6YUB]Vel1=oMcTr]<cEo
%U@R#GF3QtYSrZ3.q#HoK`(>u$"_#i>+_bLZ65h]"XUN&#5p`MJ!IT-j)V9qR(%*"bW%3#7!LQg-\4L+M=q=V`W2O?ri%bIjkt4VL
%ljU[-q(^+R&l2IWCGJIlW1Z=^>aA8ckno0b6PBroa7_T7L?W\`(#3DCdW'WMoCp<MLaORiY[fp3N$40DR"B-V0`uD%0$I++X"`^_
%H6Dlh)@Z<^Uc:SScmM"9@$?EYDMc"]K)D(aoRZ7C=jVtlaOAe$6^60`?,EpEei5)d@FtT_8K$rL,CQ@:$9h0E2<Wf+Q0IkY'VJ0%
%KrfY)Y-"pG6#L^4^gq<+6_i([#;e<k:.I(];VdH\@gp7Nj8)-="?^kP\>^W[Lp(dm)%eg"?qlgqaHg)qfcHJmg[Y]%KWu2C1pNaM
%K^8ET'am<1Tnl)134XVK-;qiK8or.nVA#(.=$/+k<`h^i6V"509D^;I,tV0hbU_S)iqmHM>W(W]iGnt2eg<o*=SUmQfo#nNS3gVf
%DQ*[I6O;5l6j\R#+VQ&.6:lWYa"e>=/Ed`_MULb,hHYg>+G)bZXsC;#r"+rbb"Pn%`+Hrlig/""q'Ss0F*8!0`0^J!8WP/hI=R9Q
%m*2pc8s^)d$TXpmEp:(YjS7gf.%$/q^k70EV3j1F(OC.EJp4A;Q&$_pRcb*s=.V!h!EFENQ3LJKee4(h#!6iF"Eu,(]=OUO7I@G*
%Hl,C93POQ5I%=n2XGbr->'bF'7+T[T&gULsafQROCJ7J+&&9DD"PFbp8)SSm0L'A]E`O[BP[JmhDKNrYZOaA-3*=@#3n\QPXM6qY
%0a1T39h=onAJs_a5p[h#%:-Ig%64LO]H-Ice0Pj8dn*$_HuF^t<=`/7OFY6(&/WGUDnc5o$`['/^^Q"X?<,[0llFlQ&=<*R!.ai1
%;4YbgMqkdmW0Rb7jtWh@%RoW7e>&+g'BT.^d_\^EPI1rS'gTKb(0kQX#to#O.8)N<-Pm24<NRj*+I7U>nid^'hj=n?YR%CD*>Z\"
%Z6Dlu5)>oL&40m`_3HV^KocMr%:Vtf?ndXP'Z-!\?UA%!h^!Y5WP3@B!gtu2+,d=$![]JW=)[:nR->7M#[+i,lgu$\HjbPf&4ogV
%YnZ%W_cME9r^+n@,Ds<3+^ubW84RY#.:=L[^]M_JrM)1j9LS^P1'd%[QOO*Z+\sHV":CuR>KAWYFV_]8_]^nF-/;7*?&RX>c>69$
%\nXXgWGrWrZ4+L:#PPFg=+53+Pc[3RSOHHeI)0-2Kr=@4&;&H\+\O*\#^C58$q4::L&E<[.4m`t`p,#^=g%!.]-u6OHrABQYN3M/
%?r[Xh=LsA\BQ@"1DaZTXI<3WRQ8RrhW)>IILqr$oOU:Se3X7'1Oi8J^Br?<l@cgj;G"5@jmP=C/:lBu$E;<d2>e$!WWWY#'Gu_'1
%E/b_T!n\hNfH#5+_N[KYNm;u>&X]b9&<bNP=Y^1o;to*sc3NmY0Z8+mZeJBVUL5'BRe1M<GS,ti\ZQ9N%G+D[qZ:=Ab%#JQAdhJ#
%ci?]/?'er_b6/\pp`Rm]+Np&IdnrQp-Ws7\-BAt7ZRY+&[JjEL.gqB"B6"\JoCW.KenMF/T*saC_brF`9R1uQD[0Ao2<gKW`?o`s
%l`-XZ\O7HmQ7d(t#c[1#Nkj*T^Vh]-^.#u*.^l=(/"LGl39b<'Gp4cK;$eZZ;[EUI.><sZHC4#4CkS^N?O*,GPO>B=A*JlpW6LTW
%>lJImeiEV?WZd4F<59"j+L\8LDg^0iP,7J`I5h3n\?u('2.,s`4?jC-I"kHJnhgA]M+gVeH/uffO`%Mk?PTeQg<-CO5WK7.3Z!c3
%8[tm3noZ.Z-th.h-738E_6i;qY?hEO&;&um/K>LkD[7>NZ>9bi("bF[<Bj4.*5Q.8r4!DXGj).ibMu2r<(GF+NiWM+>o>E8%2MGK
%O>.hK4qjSp;q?8V)fI/pZXg$<m`Zi0_6J4K3?s&6W,G/$?80JE'4Iq\T.;Ea%=T:MN'=7N92Cb<:M$I:[?X(Dc^IHkfrB^d@DXr/
%q>(]@rr:QpA_"(5]?^A,HACi$fRdJ3=E/95Ka`\;\RAq>9T^gI#,c!(P)\AUlhfh'IJ1eSpZtp%B!0dkXqC7\`gA$`?PWROquE_M
%cBds3"W4V3/':6h?oP!tGSXB(j`*TsM^,:4(Y7QgR]jJNkp$h+e<R@FmD-;X?)u_;'nWL)b!%':?W,9Ae:'l,>EM68Z9hTfh:;;N
%[X/e=Q@R&d*Dpo'fmi2O"TWeWC]H=u;+Mc4Pdl$/?D`kKN%O^+k'sT]7u7\cQ=LN.!47=2RKg=KH<bdsSk7*"aJW%AoRn=Da9=9A
%&M?2HfeeVBmJ.'D'+O_Y+'X6Ri?5l?De_j!(>QE%q9rAUP)CWV3D2ASef.eDU^l'SgX0u5G3g\0lu&"4`9X]$ZU+`+HbRY8Ufe/d
%/o"d3M)0E$\m'1fghKll-_^e%kUiAsK<,JHQV%gQ!dBTXVqTU#k5i`p/7NLk!FnC[I8(fB>)nQ2C@O,]EF<i<@9VkG$pOe#T^1OX
%*l"i=*c'%rlr-"&8NZhZ.!N'l/UKCh)Mk?TaJ%AX`12IKk?#\_4abk?l?]nL22N=\(*L$]a4CkR@NB<MW3mup_cQH_$'SUSnY]-]
%FW($SQ=%+J'?CEg_D+0p*mYn1hu>Yj<:t=sWd&>cErg_9Q3JK"(i`#(.FMV*R5XOcY=!d@c$YK2%:is;)SM=C\.<)O:UXWmY'8=.
%fL\?L^f;\-meVqkUP_aC%P!e(mE0A)qn-s4\\.'V*;#XkE"K2k!/V1:<Xd02jA+Ki4$R+r^:TGp2bn1_i[DgP@RbSmIdO+_s8Tkm
%X]ESBf*3@X_4FI[b9qrNmMT4P'WC2FdIi/BSm+bNLk\W2o=7RfgOQ_>(6+n)gg&V80??9P1jHaFMEiJWAMEhk._W,bNU^fh:e?)F
%-5WtBD6.nc0(q82=9q<+k]@EB7)^'YN@cf@MfA^H]*+?3_olE18R[7b5m.*PlNLaG7tGu)oANEDH</)T9<?D0%JJcAM"UDX3hij`
%7V_^_D?Wj3hK9NZ>#"k[/Pj=oqLK4ml+Sl6:^T>uD#t4"b&@5/pje*GpsJtL4Rks["'C>FrZ^h!*8ZA);O"`Xb2XOE0kZ9"gI-PL
%\hCTs]\G*aLa^J6)O[bY;D)CAZ]*jq(Fefo)qHoLN0YYU^g#fI^f+H46gF<:Pb(D"ac1Z.W/cUD\SBh:A]H3T.ZD4-\WXNk-)f$L
%c`+:-O21&+I)NG92r%"mjn8CN_BiXaf(.VbLtD]bXI-Zh;Bo`gHj3>iodn#f.1$F!^c_sHQ&3^+n,.-)0U7^RXZFraB/rCI6crAj
%9H#U1n:pIM<3VGE%6hL57;@/:&>4r*RJ@`BAAu!Q4nGX3/(%]gs0JU#^C#]1I3GrL<h=P\mP7F+R$q5\B\<OZFbm#r-I-6H?`?*"
%%?IWP&#Y]*KnpWR*P2as8oTi8$m.r=erP/)&.#OueSFekJeLOL`r[QDKIT0Q-ZLYXe*rrmTkbF`5ZHhf;k?g^9M^>-%QfER&lM,i
%L0MPp>/LEsCiQD#P@-!Z\R2sgDolB"TD,k+s3CncD?M5)D#\a/FK"WU5!>M4,G,=i"(+@.CdNQB$=Lmeb<)?,JdJqb=.6-h5Wkll
%M`_!LJtHY<**/pB:_'l[k<6JQ0TRF$0[7jXX2CiaaaN[;&>$!*Q66ECNdVk<\NT<&fdU0rD.J[^DtLiJquV7n'0pm1%28LWY8El#
%\E?ZB9bg,so6#B9+dlhFRck/rOe,c%AD1JtA#8b5WF([.2R_m>0%+JjLKdL$,i`+XPuTs&rH[Q`?H*H,G&q0Q(Um6<-)`:h1(dgr
%mbVh;(RP7/Va-`a9;p-d]&LrK54J"_=_O?F^H?LHQ\>UuPA0*"N*+)[&)u89_)o>i4JqQqK\]&ZT+8e=bM*_<-]Kq!qiWN0Mi/eO
%F3]N1TA/AKqJHAuqQ/*5A(1'5IZ[q,dpXDOnFg@!B)R2:f`JEJ/<1C9-fEZ#Cgq7p=@X)?!!=hN@$FLG$i(S6ngrBg0Gg54ebM=U
%5V7X#a@)DNj1+?oG>TnD20Xp@U\_O#L;^]4H?=Yk"MkjV90giGMqUqjm>Me%bC-23gpf>/bpIo.*gT67GR#uX2s['cOpqjTiH\HU
%T<Zo;I&%h)CVN+^og""5kZXD$#]!X_eh<o-h##"+89ra2'rF3]Z/>?a-Ca2hKO";g+^C-[?#7E`F$M*#<O)>f.cuqj.T+J8NS7ku
%"`N2h)%^a,Z>Ii?P0$jA-%u#L'&iF1(A6tF`_"&O2/Npebarj:2akT\N8KKtgE/*DYu!KoEa-:NCeGH+-<ZnR($+(GRN(q0%h2/)
%j5_83N+/.4ToB5^.e&f,1Wjb]3Ys=*7hsYbVT3W&Q]ZgaqDH@k`mW!"L_@SgWB;T#nKO\tE,mnp7?f=TBp]\_-_ug1<l>^W3JK%B
%1XatBZ..-[0j/nEFtlrp3*>"+jOJe?2ZlK/+[Z^8!(j_N'<SZ/X.gQ_/&K;Go6D-6/52ns"M9e+6G2fEKG':qU6`%a=2V_K7*B4t
%\Bn:V6-L?P1A-Bd#V]g"[dL\.p]9^OL$.<Ek&8.60lU0W5ZE;.G<Af"1R9/(Ib,n*XU&6$qXP+%bV)p6`)t.`Z2t\Uh@RsV@MI#[
%b8h^tB3GZ+!bhXfhW+[q25SG8=ed$hTiMOY>(P7P2JlL'0W@3:j^<hCV.:g;q^5"r+W,TafL@<+4\cF(X'X<EUo&3e9S$G,`1F>2
%;GW\&;Lf<W;8<iIp,0]DAj@%QUJ4Bh8h%(DR*sj.e/&&;o9-M[YDR$;di4QqK'8>>k9h+[(&ElH.>92$BG<eE19:HWXue>oaKfWW
%Wu=;[[u.,dm&]Y>gV\*qpfK1b9_TRMA<%rFBAn_'13c)YA"GaN7TC/OSbS9SS5IB)8HmfSH+ALt8qBZY9uRd;Mg^2_,#V0(6]J2i
%ipel.An5J>bE[rA"%.gTceGBf)*+3I"//4_HBIG)Q.F>OC_lZ3Eh2.g=/qn<3!rG>PtnmEb3%Z,&%"nil.I*gB9RSu1p4X<R:Qf*
%'uCkn0[4I*MCC$C&sY+!S"YE>?q4onnsiJa(LKG*SF'lQqnVYe/1&Y,86nr-2G.^Q;QsM(NTpseP0:(i`+qZW%AM-)+s]B7&7<>_
%$"5oco'(!847moc9MsmB4GSc+n]I([A=8#CKE.(1]%Y=0\nbCKPKd4(QKp8H'Z-@-4*IUCLW!)IH!+(ClF2K'#@D2D`Yk'KmC#r@
%P]\=UUPC5oKZTJOm[1H@)g?fZB!;H-+@+HdnpD'Bj-mRJ!*aXu7NM'TZRb$"Y8CrDW'??B8!n?k?L'^OV69tU2-sa#<Ua/J`ZC<k
%]RgpgFs)r#/ub+(b4AFjOkjsWA.cHNlSdRMXeZ/Sa+1-BY<j,3[PTj?kj!SV5Z)[)d3m`80eKf04-(o9$<fUj`oe-2#g&3-Nf[F_
%P2opsH!<cHf<IS!lK#T2+gAFnU75_LWM:pS03#n`i4u`f&m;f]o8ZN\_j\uP16fP7Z'YI1XTZF\*-gcbmupc@a$L\O[8e>c.tCQW
%*-:9.2#Hm,A#aUHl>hT\eGYtKlTo_Dj@;9\'s"rOm=\En!LEC4WVk5::&;E?f\E.K-dt?rhco&EZ!sY9?clg6EEa@CnNfooWMRcW
%]4,UrJaCM5;F%rPDc=K7)k_q0BD(P6?>i,1$ceut%S[r>7c\V]Ibqr&=(l:Wol^6*'H4_mY)kt`bgBfo5#3A2:I4&e[afq<A'!sW
%P9/@K8ArQ"A=iW9k=Il+_k:hC6cZPk*Lb*a2=pHJ%\s#M\bVVdTRo!4F"&d)7gLP<2;EdgeGPK7m,5N!1^&D@_Dl4`n0IRGGK3lm
%n[0Q2KrIKZ!`OGP1/.XaaaG(MVSFlLc8sF+Ug.0AS^VK-D;=.pcGIe/6in+UDb\mXU("U-b%k>JVY%6alVr-cIE*]_C[3AF3fn`1
%LaahqKZl/'`F2WOJ.AY0*&Ls8#$#QWi@s#h(PnaD^@6;>s/A?t9'#km&Qj$Y^hl!4E?'_E_t.6]\U\_hq.*YURBB1'U7!qH\'?*L
%GSB/5\o=R*i`hp/mVtCqT4g=lZ6)#OWCfsPWj^sshSi@ualmLc8`<:$DT1j0Up_@Poa,ecO@ZkDacb";KoT-Amfr=K.A'u<V*[>2
%%&Xfh,o@b!UmqjQ[k")Z=8ht.-.1^/la?eQL*1%-eT&dHZ\n?QA0!E!#c71KH4YoZj;p1Fl45DB(7qdmPNTRW(j\l1.3s0#VrM.g
%>b?K3l`>(edk[OXLLPFdZ^J$s'[9>kL7mb99,/qADZc&WNu!7KDtj-[Qu^Br?i)TkSdWA<KF!0>X4`UqGW)\==Y\al."dl]/B[Ek
%dq%*&U2.43"/4@X[.=((0D"<4D.,=SraX2Lc^9V'8a1.o9hV)YMCHrjgXp"V;;6p^Hohmuloj6Umd%N*6An2,E]ZagrJBr&TlhI@
%e'"a_]c:OKk6lYZ)OBh(d6HAcGrn^Cm[nsobG9DAd%;MZKmc9Ibh8@d\]1+=PE9r/pn4=ua4Q`8o@[1X?U#%=1s_m15PK<W32'Vh
%^UXK2jm[XU5.!b=A(2\,78PKcP.-Ro6r"'<dkCiN*JhfofZ12o4DCD2<ni)BFuVem7q4r^Cs>4'rXdZ;l635l0&qZtQu"]dTkCEO
%G3)R"dF<AnKc:oQD/b-u0jaD,<h4:_c4`4FCBqZ^Ugn'LDjDeU5^;;LWa5%>:TqYVQEd^IZ8_Fog!rfZaerUl%mFqWP#<M"O(@In
%RJ_F?I\1mU^9cUif]=@D.'2p00B4Df,)7;3hM7uqHiE#^^&7iMeb4=h]q;/bBi$X9UCb4S*%"I[iO&i9FG/`"@m_8bVb-Bt76t">
%#-['sPAt`-'u"F#YDQ^,3$%Ei-/8@Mk]JY%T.`^YQt`S^Bh;k;fe-)O@NqU/g+hOGbXp7Hi&JBI+D#NQRW*gQH*S]8FYBRu^L$]G
%-"[4n8K-qYo$l"E&=;fDCR?=:K:'T8n/D20`269$]?7#R-ZRP:T76:mM,3:38fWkK$_pnF#EEbYGM2%JPI2cd@:W"DJSbfoOip?J
%?E'^Ys'o'o)s[Y'KBZ;%>5^5/%[s+*9=IJYKQa'*jOao`Og'r4<]%`[k:ACYV>5O:rn/ZnUr49pJ2-DQTC8Y[D17&fJ8&-77\O\m
%fZlN8:M\31XWb=MlK?46J`]=%rE!l:hF!Qb?+WG7eBK&>E&AYB`bt6sk\QAt1i`lr0ZpUf'a+oHd;X\"FiiZY'G+]I:jini(OGu,
%l(`-i^<Y#FH/cMLPEoh^8sAL,9W^fkjaAZpmLlj,:e4\@q:!-t02cVI2[)["LZqr6,821kfIRY-a:Lco"YL$YUTW.DHqJ->H$'?I
%]O.CA0aaHqftr`S>m50QfXU!LQHEZ-==OG=P(s#bG!!idI+Tk"egn<gN$tkgRCJ!5_8CFJBL'/Q9B'I^`(,_uU;\0Z12+EY<4M\s
%Hc1W+^$EkNPUS"pCPn3Aj:Z<Z0Ei[ZP1B6$V+*EU\EMG1abGXb2mkP_QkVS>KW+$hKBPprDhaoFJKQ'k;hRRlN?Fk*HPMkh.[e$r
%`kg2CAUL;(P*+n8>ij<LDstJfa]fq>9l93CguU_4-;G?r2nCJ[MmDMKnYuRDh9im5_J"d-9!4rUIlhlE<>L32??sueTX;9u&fk&2
%2^?HhABCJlKU'XjVeMi$J,fi$Wjcp8QnjpbUSH<(5YM6ShS.#`hsL05oCAuSK*jTK=]Jb!U%u_a%!m:%W$KXe1Ts#0jlNeA;s#Lo
%Proo-Toa3XE_7h$<j,apY8V(g)b8t(['+aofcs]LaCG_CNLl8X++5dC_U(Ft)4O,G#>8SK`@k2^VHVg2D'2*+7$&^sfR%?*Vr=#$
%R]<0&mZ_]=?g+du7mNf.cXqQ?i1)TMr*7[1VuI,9dn]#CD7bJqCAEWl'SP_>en@Ph)#tY[)G;OT!D56hTY?j1TcZlt9opB.Ljn5f
%039t.3-I%kPrJKC=GEC-Gl]j]nZeBD+/@W<XC#:FB)8d-\k?ims'Ng<:%^67lr]DOhN@&1?I8!b2q/f/29&V7P$9Xa\$Q86*YpQ7
%%L$h0K1=CYF_KeD?Mfq_,eim!:j/4PNV=mkogEVGS4G@u00c!^Zp"@;.5Z_FRgcchZTPW'6H]!X2eZXQWe$o$(]78R@JGWmYSMMJ
%m5a4\Es>:j[N:`_"]'04M]N><+QKa7/9-7t2qi;%>:$-B*-ml9BjnEk<BN+27]WJoddeEODSKT9$Z*V#N=a4"W-ATRk1)?X5=L[P
%lR81fM&1*jLDJM!10HU(oOAeif)ku$65\qF*2+VRI'QZcT)>uH("NT"%6HYem]NWa,Saj_qoCfM8Y/`TYDmlCHd.L#^1Ge9\rW!?
%-=C$k!+=`HA*N>a;-4]J6Y#>dMV,M$+.RR?*4Nr0[4`_?;ofR!+4KsTQsV`=hDl.r(%0$#QF$J&NBJW;hJ=Oi!ac1qj5)f'Y=pHN
%8&_3QT]p)tRj/^2Mkhsi2PSiW?c-Eu\mdT0=``]+"$\Kq,(?!Qqc7)CO6(@4T37;r<qqo>Is#CUImqU&VdiV6kn]i&/i6!n^STAO
%k.=OD,>oG.YY"^=/q'.#9='PFPn91-#XTuIbSJJ,(#X'(q?lYXV(f\tcZ,c2H]3>160]TkPef]EcWI\UpU[R+4Vb,M\(l"9UNUk5
%E70B4J.'mo)\Z<&Q3qpN?o.>`mME"3Ec^^Sp(\nUP]1#(K*I[4%.s/73"eQPPJ$e::TqRB,k41W4oHD?_&pXP8b4S-%tc=sJL0UA
%As=mhhLRl2pJJuL=dRCZT_U*[Tm/G$R&)@eo>CnrgH1"pOjh*\#76:9D$bWB.XS=3>.+Zdi2oU;ep)hc@Q;_Ek_b*QCa58m?8tG*
%/U<[2%Yl5qTU!E]N':`Rm%7uiF/C5ep:0r><GEG'<CadeKC#p0i43^ZI(+@F4+06@[c3<t,id8Ppmr*@THZ[G#*FGCCK@cg4YR&U
%ceQ]8+&[e%a18kurtNp?R0pEGk:VU(IRQERC0?V+OI%Z'C;$OmJI_HceA5e)CN;!%DJ9ae=%aY(F?>0@Yh>ps,&bRZS6`c=.LfS(
%P@?Za'l!Sk-dgSZ@:pMbnqrS_GC8Z%)tos_6WNu;Bj:9(5c>Zn]KeViKpMMaM5S,p2i&<R>8du1]&Kbh[g[`GAPFt`[J*ounZ<`q
%efK5p*/[NYO9s\!eJ2FqO]*&RMJqo9OYNPKLM5>20(&f,gaT"c,8TO65omq%5bql.!R_Za<ZthHLWSQ4Z9aD&/VSTE=($U\=WcT!
%E^@VgH="loHD#jpQt-(9'WVs7;A>>[$)ViJ@:T7bib5#I/P7a@\#li3g^K6gJ:<!>p:qi_,&Ga@hiA(II8,oSoCqHoRjDS^"?`s2
%Z=_]E9Z-"\Q-<I*7<m<*(cXgn2n^h:6l1hAXe3$=X+p;#/KK[R6GjGGUe)0+]#31;m9+8H4qD/2>C"AJ-R-)NJ$/,d%^-6:9n-C/
%WFt0mTt3(%;hQ'u#`Y,@NH7kP$2W&,"$u37%ZpW0//QLCILK%TFLpCrYF'FT^G3N9e&)87I?NDWG6j^UY&MGWdV:atrYlPRe2o+&
%;jc=oDSgT[N6q40<*)!IPJNOFdd*2FQTP*(eU'2XC2GJNYa!49>rGj6:Dh2a`k2BtC*LPffT_8`:;HH4G<dW^\CJq+7]Ib?5ha^V
%j><X:W#DXA2%N`Y1<NgYiReRK-C+A3?l/c7=)*(h[UjGG#=+&K?r&BU3<!C/#l69Z`&'Qbc,?j2Hg[5u@eV-9?2P7bk,ru5&__N=
%`DmD2/uf@6gJ.S(ado>=[`6Nel8gD>2AtiV/j>p"$;,27ou]\TPR%.EDU#i"N6/S*eW&`7nk"h#;s$n_YM'/,-:4a;+s6O.0TB'!
%bFKbfFBhjU`Hme*-U=@O5XQfb[Se?c;C&-P!8-,U,XKiC0bN1.8F40ENN926aT4*Amaml?*!a^oU$q4;2aWPJ)#6AOs40C!C\t'a
%?nP<U#(\1lJ-ECTX<c,bp9DIaokQ:0cNF3]69nLkPF:i7[[FS(#aDb/_k_HuW!k3.O$I%Vp7EUs;T$>fZ*gR&YM_e/'lkuYG7?)W
%fc4Sc!W87G5iT3<ROGR1E:'l?S%*YBWHW;caIB0Dma<!r7kht0D-`V%kPJjq)daIl>(Q#"54,gn\Jp^uWg?r^-anX]&YiK%9U@Z,
%qg+jhCR6K=MimgsDpcH5m_Vo/KBlX=>=0Z8o%_XI.N)@!A-FJl6lLBa26%8?iSk#Q5QsN"%9]AM`Gl:]8$lYm3dF/@MVfdp^W7#I
%1Q7V'0WT$sBpuTd''<7Z[So;]>cd-KJ0TCI>!=&ZVt]m?^Y:4eA35d"$pV2hq5`hiJb,d,e+WL!?Y9?;;0LZuUV=S52>:3KNqnkj
%OnG?$Ij"5&F/Fp]*Vs2ks2gmF5Nel-=&!B.4Hf9&CZH:JnmX'W"FId92^rB\=\ZP6Mj<<n$rC)aNc<p8(<MBqCBHUU'B+(h,e)k$
%O]dusf(I_t\+k&VcKmoAESkD:'mn)D?:%Bb8H:I927oT$hb5Pb*N)YIg,o?JKF7JOb*B^K:aOZ0WK\4A<De@Jd7sGSC_c7CGS6Du
%oh2QT^`fM,RhmCKVC+Lb?rY_QYfnlY4`'J3EDcW*(o%0,KQCa[k]UL3`GR9Q'`ag^1eI0gA%?=$RHmTs6#'t.!GaSlFgO)WL2B_q
%l]3P\[O@gAOS4#cPhNo);WHeTI(aN&OM6%@lI[?g(`jE+eSYJeOB,*-ajsKb/T5-[aYY(7K_ajt746.=TDLB^SC#,GO!`p%AnQ]k
%n47o`DcTRnpbs84j.3po4f7\q*.IVPDUfF_mJ4.sR5W?'L*18kQfd!FUdT!Ee'YRV_Bt#a9b7hT9KfUeQ.J0>\eDP3k\q\\h&]X'
%i`7[_jP;0.A/'_J#lSG5-V,jc7@$EYk/&Xh$b;^ld]^$ZRY[<r['=fI\C\3H@o6"!q*j6?.p&1KJ<hkIJs@ATG(2n,Ysa3>=>=(s
%<r<XCWd,P19ZAUBdd$^\QtDiV5PK<Wmg5>t5HbCVCa;`(,`$4%GO#OJs#]X<jkG8(HV=QLQ<ig(57l:,eu,/;12i`qaSl<Te"JWA
%3);q/[<fPihb?':5X[hkL?3d[?;GIVa'nqcG0&S;1?ge<P-"Ct.bMU$S!qSp?ImFL,pGO64fT)rQ#l_BgrkjFp1;gV0FoiA1W)F5
%m6;f^\7[=1f$>[)*If-2l$N?fm^rF>i#XLi+$]L2hE2s/JMn/NJFiIZ1-oL$gtLJ!$B\61:>ZPhphqu\)j.S:4s)`g)MsEbB@sFS
%rBXK:Z<;2,/uTHQ$YiZ&8\,q&9eEUuRCO%i9[9iqW9CZ[`gE2gY8]i72%!PiK4`CDf#q#8.2Y!g\sn68Bf6TI56,_CAR^cIB6]9o
%?R\/l"9V[cPG;pYWGZ_1<-DlfNI!oO-NiS&f/bepA`]R)I_!R?oDeKm^\Op[I?AiJqZ=DDCr4-6L:q&&MERcO?'&"?8nd/U[Qb0d
%lm7kF:(hHn^ue.U5I,^b)_@cmD%GERmQ0g`%qaA7;B^ToBr<:0qQcd#ZFXrE<f3gYfleulGZ\\E8k<f!"GV]BE"V.l:HRkD&_OU2
%L$h`>9k.m$qC)(*.%,6\7+\GO#kbZ%11?bg)pKD*X`uL/1bRHDLjkVdRb>`DW6,l=A]QL'JtSo:3ik$:%#C-`W'Fmg920@9HV7Bl
%ga'FY+P]T_X0D7rW%Cu%kGE??1Vh5PNbD''[?rM;gDkIqfbTIb^!]'*VlDmHEA1!2Nblo6g2sr1il':4L_:=R"^]<Q2Zbrq7:II2
%14r9A&h8!*9i!?Q!k?>O484h!/>S+I$,jHEL,<_U'WZ3+3*^(b;_"8N<qZV]);DT5gS*#Pn:bYcZeVI>*6A,]F?e/N;oEUS*6tN.
%_H9k47L1IQQ\ZiD_ZfesD+=q"@0M>Vk/o2U^7.gBOAd4k8k3>4\@`>RP)0XL\!agND"efb\?7:R0b@L#Ua^>6e]bT6C-=8gb/[^5
%rY8X-m\Huo,?R5!pe<M=;LcM6#->#^&?SEYIn>!gC4I\A&P_XhN^/it$)9Fa47i'$M(gg+eCm8a!.8OcDh<1Pe.i+[%ndHaq5\p/
%1f=7T`g:)>aR>77^YAQJ#+6+po@HZaP`&h9Wn-#MPQ?kS,SgMuaP=q6."UZ_d=-^i1FkEWc"Pft_u"j.NtS,18p"MiY:-_r3u/VL
%oH#c!;)tNOe`-8#(8pV3+BH$ga>O/3*""n:*?-5A[0qP+?@bCnR!I5&.NV,l.*c>!6pD&S,2u&J.!jP%#B7SO<E9A_+A!U?/6?p!
%mJub^81,iU9[M;D:-)HK0$%CiW!mjS)nLo"QfFB<>ARk<7Ia-IP'l*!Zd)+MIaHh%ilEP(NlS+$Kke,S[sLWM@"GU?a[Y.h5W,%>
%Uc'g8I:Rd4oK]bo"-=S9ECP8\L5`]Tb<*9L!6,I%(+IcGKE.06Tma(j?!kLubd)o)nK338;oQ1Jq5$F&.GohMT=lIq(>Q&l@=]XH
%pOKY+\e8@(%W4-/03b9/rj7-eUQad1-kg6Nc;q<9;sqWg<Cd0Q>GlaX8$eEOF`eW!=l$(C`](Z.;M\DEFtWhF@`]N6dr8qe$Y--E
%el=*AA@#GdWlfm%g`uYJ_,7T.(11iWVO^_q`)6+er<4c^WIBQY4<bAN-`N-%,4pBuSPa5_B)D(66.p>h7Ten[>>Sb`'IGYBb9h)V
%p(B1L6RRKIL@ZkHhAto;Z[o`t9hG[06SK2&m1)iZZ*0DHCmC67W$eSlaJ!-s6KEHlFHS9":VP-C5;XqrQ+Zb>HAFufLp(:1B@9B]
%Oj@[Zl]+18Tq45XYFa+kR[O%M9'G0uY[4!%^g>fr1>_:?N@A"-G`e)t29L[W7B0uF6:?CZ[QYIh(!0QY_09.G)=Nh3E=KWUWa&K4
%^3_3$=gpFC13>VHlV>7YiP!nDo3NkS@rFI,O;Z.`!!]/+72d.0m-Z15Bh0r8!r1&",L\O>dd"&R.AG4hcGY!C!`0lMYPV_MELe5=
%?7T3(!(dhiO\'sqpD&B^6H\HmG&@H4&Lm7PclCLJ6]?Rj2Dl&74D,<Z:pn6)PM:f6,mJ5,:8meN1dNZiZr*X:AKs*A^]4jW1EU3R
%V%^@GA"/]*Y35n0Cu_pYD`66Y]+*0KjZ4Sc,5S<#X_J%fC1bb9B/`Y/&J9>s0^P,E/ipbpiamT9PrJR:ktV$F"GpFr7f&713;]^)
%qP#rSPT/\o_S`DIkQ2Y8)^suY4ZQnm.p%l8?+1jJ&1%sEm&#0")oT2Z8FBA/\SC-BhPDJJ\DL=P^l@&9$($%n9nhVR1``U5ST?Vd
%IK7^#)"ju*R]&<H:,J5k8:8tJ*+[hZfe#\QTB^"P#TS97**&CQ9*<)gJ9GJHh9R>7,bM@mlN1!u)>Bi(g4^PO98X-LP*$n$"c$mr
%Vc_d_=+*Q9.+hSNOGO$.LphE)>4#>AR'P)UXDAJoXa1JZFq=V<B:a$/Oc=CZO:pH/LfJRuD'9)348L!aTG;aHc,OuMriLkCe?.l0
%%bFXHISU.!TJ/)nG-A4#BFESFenHjHO7#!Vm5oNM(N&t_DBlDJ#kBK^mH)mY/R@nAQ4`L<6-%P,V,C>oCpDMM?\__2C#2XYX$JM2
%MKIC1`8#S+(+8b7lrkBn-.fO%"u(AP1q-<FKS\r,GdYoTd!"a'hGICCYMhY6MDj.F\LmY)UM/L-gPHHgOoTmkZdc(@ZXlk)!%N@c
%)b932[W1B<2C$2"b#5:DfiS*O&F+6<6>Oc?k#d*4GTJ/$^V50<':'Tjm*p*_O$s@_]KOhf-kMN9r#WEb-]DSC.T8W:19j!rl2Y_X
%l(""[ifOeu'$k^pirmqtlM[QZATF\po+';VdX+X/5&L/IW(j^G<(+poYQ>$>/'cDI71k\^Kk1RF5L6,qMGBn^RJdU4+6G>!VB3ju
%F(h0,C?N*cJI,8qIGiLS1f+o]F_@_c;Z54u;BrtYmgQpF4iZ2RUO"?6*=(:$:#L1c3,i.&BHe2V2R`)T>!h%s]UsOYMRoK2hEQ+^
%C'qJ)kZatk,0FPZ44"j;Hc+7E=3JU+T,3lJ(+<)%X.k!B!X(,=5dPfZUntN^;F**_V(W)ZUB`-5Kq#Z(X^2J9^?<c]P*XpoWYMoj
%[9p&fP!7l:#<?"nK?;?+VJc2]'rKYrF?7''Q^qL!j-dF*L8Xl@1QG6!IA093m.RRJ_Z#jmJiY\C*,8*57mB[o^m(UjNP^!4$$S,-
%1YRV$*CO_-N]-S@gI'54NpA"QY]&Fa*ThC-bU\@$';&SiQm!3<dK6<3HL!fiCqG_!\S+p)'RYpTTY7)^DAfG^"(>t8\anH?H#i1Z
%[uc"r4F_<]&uh>]Ya9^_'u*<`P#<LE)tX8qFYn&UR3X88eJ612gFQ\b3!Tf&p.FIq;=KpciMK0G9B`Jho)-Yb(-CG]rS:[U[E7/6
%Kb6'ITl"QN*Za0p2K3#"pZV^qh_sm&VL"<@nJG=MTcsAF)M.=%'dY69.o1g(U7p2A.7>Sqc/;X$kJ328M+d/jKVC-Wg&YgYU5I8X
%.OHrU-o5eJ%A5sNgtV!cZO=?8^E#J/^oFh@1,h;$i!!/*7rKn5*m,GL.<7hD1.1+<7b8Yc$5SL\?G^U?Z^lV#S*ZO!NbWgj&c_PT
%2u3>@-q8BX73ug),(%<SJ6Z]oAZEa"co=3IHXuZ.S+,g\H.>/]jRk@;A$HLhG00#.4*Y-_7.G-JAL\R4r=H\.hZZqI5+_@L]`4;W
%S^6&L-'XH^4\lR6U!kXJ=?E8-hV"KdL@<;'k;XEIH+M<<G)r`NaH(0&Vb?BM;T"u5]cj%Gp)lpu/+q\md_S9oiUu2V@3VCqV;&0u
%OS9@dZO1%#:711<lHXsmN.]FY)Z99]I!e>3`riugrV\rCJ_@M^o5DDBrI;ZQ\!!b;=&kL/ag--!lmgLTVi#:tPt-=e+FV@[o!T"M
%0L(Tn3mAE.kota-WjXN_Wf=T,f^eE,ir'/#Jl/)\2SAE7:b?;!-.8]&O0Fn*n.dSt-\'rk1,A2mq'J2F7u`EGYH02<NPPi&FIZ7F
%A@:SXPP798EA^C"c7VCgWUV#:ifKB0+'1"?!51b;mLHOp%F-R.G\)ic:,Vh_/>10%R[L]F&_5@3>84d(iY>j>m58+N[C`>#c5``H
%>(@5XR$V+iUdI5efZcm;20e:Gd#5?SbNQM%gR3)Yafeu\kUY9E&Of@h)</VZ5Y9o`[[mp60],#6i*hTF>7$hlAb4J0V*E5MOZ49&
%:j+lRp9&T-RJ*^UptfR0/o+;2!VLlJMeisopZ\;>VBPFPKpuAcFNoUK#rV=WCE>tT?r(PJ;fqdT2MK:2h++L/U@&Y8")!G`hX(+B
%HW$FMhloU,WM3k;5D5L<A'^RFN">uM2d<Du*F0aj*JnGZd99-7PECG8lTSV)0aC2c5'Sn.Cu.bp<EqRZ/[-ug)*^9S2AN:B?J,Mg
%U+YF8^Y.P6f9DDgpUP5#4<sPPM9OE0\:Y%m1X.:bccL^)c"Qt:WUlG"'_Ai!lGo-hL5k+7:!k@p.C%@[7!!I`Xgt@jTfZi&jPWPm
%W*bCGR0V[2b;0S<nDm%AbuD,DWYkEMO7/j\.k('Cl/CCUH00^/\9ToO\YCH%&-R>@WnVjEPbbWeK#<;Bhmr=ER#0\47m^u[C[,fP
%b)@3u(1-Xg/bMY+c>qVG#NG)2D7."S0iR#+Y"VQCfc6dLP$NI5).dY@9k/r`S(OG320sqW;ijiHaOlCWOEra^AP'O5?`]PS?Y<[I
%:ilj*<9.C0Cc6pdDI;<P^50CTNd?A#4Qr?oQ#T<F%VX4[8"MuH"SR@%XOl^Qe?b4Bpsjn"6P:(Od"?umO_b;.%QPLNZ"Qbo+RX4%
%gD6*Q6Ebe:pMAMO@0M>;:09S"[u'aKY+YZSrqc')ShD<opr(%d)7[h'_#PZ+3@$IIjeS??'tE`;h_\=XmkA&-KTbh>Jl5sMU7eL(
%#=3j*gV=%sn&RR@U7LCeH=<cm+CT_$U7fBNDDtWXYYu4?#Ji:XHk]Q8YBM9o#P*hNN1u/ZlSNpj_d6@gp%PlMVq3<Y)'&9CP:>6O
%'@ld>brHt\?8;PO5&fi`]QO$dh'V[.cu^J4Am*K@_VTFS8F?$N)fOX0JM5]I=kL$AOhCofC&kWqel+'H$VfAR5;EN%3"[C\Bcns0
%U:[l20Y9_2We:C^pG+!1;O,0HeF!g(JmNEnlsXFRLJ>AHOc:i+oN3>.I@lc:(9S%L?$3<5LW1s,D9lmgA4MBGPP<PBLa%*9E^[LX
%k(W$5T]$aSX=Kb16HP3VcI0&EB#[0F1M_&qLFC$LUH^8_>jaZ-issZK3Sp2".QFa*3[Mf02MB-"o"[tf3BEUFpJK\QSElcTnS7lh
%2V585DJC1#p1o9JBFA;2osGg5L-0mC\E`e2_Ns7Z])[jFNBfR"K>>-58uM>G+!:Dk]q!+^gG/VHRD#_Ghs&aq/,LH1"&l0#bReug
%qU5"1AYL4P_I?=*eG3e2Kb;G[97[@I@TE=iWS.k?f<(,u%']Lr<D>Nn7<4PWm)?qqgM3e4T#))P+s\^UOsrp5g@KGrI#<d.S'c-1
%-?*/riRt-?oQ6^(>#MonP?<MF0_2P'?(eogl(_W:Re#'>N:07NiYaaB;>$e914NOr>h)Qh%3lb&q#(&nd0oiY52\)YaVM&2O8O6\
%4H#OdCo/h@"'[n5O5\-&>`3lq_0S2m,]J&/a^:H!F8n3uQ]OmUVi+V>c:^dnH8C?$\>IsZd/IDp_iHC`lqSS)Hob6+K_@UYYKd&-
%Y6H;ZP+/d\9[DS7`;-:^N]CrL>7J9o:W(ZT4UVWl6.P]sXWF[<J+BMjcZqhF!.+EFR:+U/SWC2\9.sdWU(rkQ[RLD'Z,cQ$;r=9S
%qK=8F_mm0_r&XN:Ue7BK_''MC:-[1^&.n\,Po7@1>;BpW@=&'@Q8V0!Y[&L>;N\[JkK*da\9O.aWO+WWg"Xf$A1gIb'Ef;BCp%?P
%_<)8qCUKANn3+G%VNuoo73f/[d5q0@9t-)4;Gk,(>[R=Eo"Qb@3DHkPe-@s/RdN1*&L>&eA2'j9K]>4&qt!,NUqbctF&V%&[<)<`
%M1m#h47:kSQ/%X:"@hZMNcq3JnMJI<.Y30<\\Q\el\aE(r?F`X]%#26;Ni;Gp9U72hg?L4Wng;&PX-uDqi55_14J3,/%0lnZmf)K
%4ZAEp[\[Rm/$oJM;-UGb+e+EWH.pOGjbi]cYW`l_<DpnCq22T'B_LbO4(W&$;6bY9d,XqaHW$^)jG,a3Xp\Vqbhp(QVSt,Unb$\3
%+,Bl$qPPG41@7(DUqG(GEESO2qr:WUM9sd#k\cQCKXi`gQ!%,LW_LBOn3'Q68T3A8)<T^.#GPthaONA^X7kp:PbH5rYIqtN,U1pq
%_mFSY=\^HT3_n(eaW@_9KqH.@pB0`:nL[I^9pe%03[cVQ:.;V0q0M!QA,sSI09j.('c'5[l;qE-7_giVPPQW`L2T*#@4UegW`Zn/
%:)Qen6u'1&0t.n\%tHt#[WnJO6qIH\*M#ZHrTJg,(8]-7k9#6_pj2)cRU?gCVuB"!J;&4Ij&NPN^=Ze.AuhS/]o8fq47*0I6H063
%A>W]UFM_d."3l#SXEN+`[4N`BP)ZuRYVg2S4aed-^G[%:WNQ3@Wm//gbPKRH874p<l1eGC)d#JoU;nS9OeK]0n1']lT6EDm>2k4`
%(9bgp'Ya</Yt7/ndDC6Y)LcMcM=`h&VaJ!gTdtYG=Q7:2G8l(bAte)eY<[Nf=8/*"2I8oAA9PO5gS1A]YVB*5pMU%-m=6r9@VE6h
%K1&o@oYf(fTX_6D^hjBp-f,m25mtTo8eQ4Q;=E>F:3C?1rl!O]Y3D^'h<,d^/$bqf1(fWj4oF(!]6"?CaIeF9L@A`66cu60^e"'u
%3l*^@n5Ib97mOYTr[tXNY]W^SR0`:P/REdh=4lrV*,1V]@CN.;%[C1.+3e>;mQ>MAbC_,UkP4adp[-b`9cRWkAmhnj"j]U9W/C4&
%Vlaa@.IFT?UVl^eJ$TO+r,c=bZ#P6jhNt4VSlA@VW#p;mpN54Nk-2gkBY3Y855juU`G#@Deh_e;</8&5qT5qIkBTp/0-bXl)mt>-
%"/$N:Z,EQnB%T1[SRaqfF1_rH[Ss]<knUrC`RY*DqYJ=;Zc@@ih/@eL:VGm$s8KLBq;&g_O8Zimbs23F+9)%brq)OaIX)@:qbM_>
%o:Q$R?iKiXs2Uc2o%W("q4I]^^]*lmO8o!9s7@sor0KYHcf`'WrV8*rqWEA(Vn`/ogHY_IJ,8&))"\a9]ANS3hu8DgroX4^CMJ!&~>
%AI9_PrivateDataEnd
